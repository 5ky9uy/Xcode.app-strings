=K
=K
=K
=K
FT
=K
=K
ES
=K
M[
=K
=K
ES
=K
FT
FT
FT
FT
=K
=K
FT
=K
=K
Q_
FT
FT
FT
ES
=K
=K
FT
=K
=K
=K
FT
=K
=K
=K
M[
=K
=K
M[
=K
IW
=K
M[
=K
ES
ES
=K
ES
ES
=K
=K
ES
=K
ES
FT
FT
FT
FT
=K
M[
IW
FT
FT
JX
ES
=K
=K
=K
FT
=K
FT
M[
ES
TSWPStorage *TSCERichTextStorage::wpStorage() const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERichTextStorage.mm
can't access TSWPStorage of non-rich rich text storage
TSCERichTextStorage TSCERichTextStorage::substringWithRange(const NSRange &) const
Couldn't convert string obtained from storage to UTF-8 - broke a composed character, perhaps?
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
@"NSString"16@?0@"NSString"8
-[TSWPStorage(TSTFormulaAdditions) i_copyIntoContext:stylesheet:paragraphStyle:listStyle:bakeModes:resettingHostTableToMatch:referenceColorHelper:disableMenus:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSWPStorage_FormulaAdditions.mm
Creating a copy of the storage resulted in a smaller storage.
-[TSWPStorage(TSTFormulaAdditions) i_copyIntoContext:stylesheet:paragraphStyle:listStyle:bakeModes:resettingHostTableToMatch:referenceColorHelper:disableMenus:]_block_invoke
Found an attachment that wasn't a TSTWPTokenAttachment
attachment character index out of bounds. Bailing.
Expected destination storage to have an attachment character at this index.
v8@?0
TSUDefaultCat
v40@?0@"TSTWPTokenAttachment"8Q16Q24^B32
-[TSWPStorage(TSTFormulaAdditions) p_rangeOfString:orNodeClass:range:]
Do not call method
%s: %s
-[TSWPStorage(TSTFormulaAdditions) p_stringWithFormulaAsTextFromRange:returningTokenValues:]
Attachment index mismatch
-[TSWPStorage(TSTFormulaAdditions) p_detokenizeTokenAtCharIndex:]
expected only token attachments within the detokenization range
-[TSWPStorage(TSTFormulaAdditions) p_replaceTokenAtCharIndex:withText:]
invalid nil value for '%{public}s'
token
text
-[TSTGroupNode computedGroupValueTuple]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGroupNode.mm
Only the root groupNode should have no parentNode pointer
-[TSTGroupNode setupWithGroupCellValue:groupBy:atLevel:groupUid:children:]
Root node shouldn't have a cellValue
v24@?0q8^B16
-[TSTGroupNode loadFromArchive:unarchiver:forGroupBy:]
unarchiver
v32@?0{TSKUIDStruct=QQ}8^B24
v16@?0@"NSMutableArray"8
-[TSTGroupNode encodeToArchive:backwardCompatOptions:archiver:]
Only the root node has a nil groupCellValue?!
-[TSTGroupNode updateWithDocumentRoot:]
documentRoot
-[TSTGroupNode findGroupNodeForDisplayValuesFromSplitter:atLevel:startAtComponent:startAtWord:preserveFlags:]
Not supported for disconnected GroupNodes
boo_TRUE
boo_FALSE
str_%@
-[TSTGroupNode p_refreshGroupValue]
Unexpected new key:%{public}@, expected:%{public}@
-[TSTGroupNode updateGroupCellValueIfKeyMatches:]
canonicalKeyString shouldn't change here
-[TSTGroupNode insertRowUid:atRowIndex:forGroupValueTuple:atLevel:withLocale:createdGroupNodeCount:]
Pivot table groupBy's EXPECT to be provided with valid rowIndexes
Invalid rowUids should only be coming in for disconnected GroupNodes - normally, we should only add valid rows
-[TSTGroupNode removeRowUid:forGroupValueTuple:atLevel:withLocale:]
Pivot groupBys shouldn't need removeRowUid - we'll need to fix _pivotOnlyRowIndexes if they do
-[TSTGroupNode removeRowUids:]
Pivot groupBys shouldn't need removeRowUids - we'll need to fix _pivotOnlyRowIndexes if they do
+[TSTGroupNode needFormulasForAggregateType:]
Shouldn't be asking if TSCEAggType_Indirect needs formulas
Shouldn't be asking if TSCEAggType_INVALID needs formulas
-[TSTGroupNode rebuildFormulasForAggNode:]
v24@?0@"TSTGroupNode"8^B16
v24@?0r^{TSUIndexRange=qq}8^B16
-[TSTGroupNode containsAnyRowUidInRowUidSet:]
-[TSTGroupNode clearAllGroupNodes]
-[TSTGroupNode clearEmptyNodes]
+[TSTGroupNode localizedStringForCellValue:categoryLevel:groupBy:]
result
-[TSTGroupNode rawGroupValueCellValue]
-[TSTGroupNode groupValueCellValue]
-[TSTGroupNode groupValueCellValueForGroupBySet:aggIndex:appendAggregateName:]
Grand Total
TSTables
%@ %@
-[TSTGroupNode groupValueHierarchyForChart:]
-[TSTGroupNode groupValueHierarchyForChart:groupBySet:aggIndex:appendAggregateName:]
-[TSTGroupNode groupValueHierarchyStringWithDelimiterString:namingContext:]
-[TSTGroupNode firstVisibleNodeUsingColumnRowUIDMap:forDimension:leafLevel:pivotTableHiddenExtent:]
columnRowUIDMap
-[TSTGroupNode addAggNode:]
Aggregator needs to be setup already
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
void TSTArgumentAtIndexLocator::setArgumentAt(NSInteger, TSTFormulaPredArg *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTArgumentAtIndexLocator.mm
Position %d not supported
virtual TSCEASTElement *TSTArgumentAtIndexLocator::linkedRefNode(TSCEASTLinkedRefElement *)
Never used - now deprecated TSCEASTLinkedRowRefNode
-[TSCEWarning copyByRemappingEntityIDs:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEWarning.mm
TSCE_PORT_ENABLE_REFERENCES: This is probably a bug.
-[TSCEWarning displayStringWithCalculationEngine:forTable:andCellID:]
empty cell warnings are not supported
The formula refers to %@, which contains a cell without a number.
TSCalculationEngine
The formula refers to %@, which contains cells without numbers.
The formula refers to cells without numbers.
The formula compares %@ to %@.
The link is invalid.
ISODD arguments must be integers.
ISEVEN arguments must be integers.
DATE day argument should be between 1 and 31.
DATE month argument should be between 1 and 12.
The formula uses a Boolean in place of a number.
The ranges given to SUMIF have different sizes.
Duration units were removed.
The units of all arguments were converted to match the units of the first argument.
%@%@%@
 (ignored) 
-[TSTCellSelection initWithTableInfo:selectionType:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellSelection.mm
expected inequality between %{public}s and %{public}s
selectionType
kNoSelection
-[TSTCellSelection initWithTableInfo:rowOrColumn:index:count:]
Invalid selection type used with rowOrColumn initializer.
-[TSTCellSelection logicalCellIDInTable:]
Cannot provide a logical cell ID for a selection that is not rectangular or does not represent a single cell or merge
v16@?0@"TSTTableInfo"8
v32@?0{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8^B24
-[TSTCellSelection selectionByExtendingWithCellRange:inTable:selectionType:cursorCell:]
Can't extend a selection with an invalid cell range
-[TSTCellSelection selectionByAddingCellRange:inTable:withAnchor:cursor:selectionType:]
-[TSTCellSelection selectionByRemovingCellRange:inTable:withAnchor:cursor:selectionType:]
Can't remove an invalid cell range
<%@: %p type: %@ region: %@ base region: %@ anchor: %@ cursor: %@>
<%@: %p type: %@ anchor: %@ cursor: %@>
TSTSelectionType TSTArchivedToNativeSelectionType(const TST::SelectionTypeArchive)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTArchiveUtilities.h
shouldn't be converting from deprecated archived selection type %d
region
column
noSelection
<unknown>
-[TSTRefParser p_parseStringAsGeometricReferenceComponent:inResolver:outPreserveFlags:gettingReferencesMatchingInputAsPrefix:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTRefParser.mm
can't look for geometric references in no particular table
v24@?0r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}8^B16
%@%@ %@%@
%@%@
-[TSTRefParser parseAsTractRefWithParsingContext:]
We should only have a nil preferred geometric resolver if a non-unique table name on another sheet is given without sheet name
-[TSTRefParser parseAsChromeRefWithParsingContext:]
%@:%@
bug in reference parser - only ranges expected here
If there is only one range reference, it should match resultRangeRef.
-[TSTTableModel setStylesheetForUpgradeToSingleStylesheet:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableModel.mm
presets
v32@?0@8Q16^B24
Fatal Assertion failure: %{public}s %{public}s:%d Caller must provide preset or styles or both.
-[TSTTableModel initWithContext:tableUID:columnRowUIDMap:styles:stylePreset:tableInfo:]_block_invoke
Caller must provide preset or styles or both.
v12@?0{TSUModelRowIndex=I}8
v10@?0{TSUModelColumnIndex=S}8
TSTPencilCat
v40@?0@"TSTPencilAnnotation"8@"TSCEFormulaObject"16Q24^B32
@"TSCEFormulaObject"24@?0@"TSCEFormulaObject"8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16
v24@?0@"<TSTCellIteratorData>"8^B16
v48@?0I8@"TSDStroke"12{TSTSimpleRange=qQ}20i36^B40
v48@?0S8@"TSDStroke"12{TSTSimpleRange=qQ}20i36^B40
Fatal Assertion failure: %{public}s %{public}s:%d Problem making sourceBodyRef with range: %@
-[TSTTableModel initAsPivotDataWithContext:tableInfo:sourceModel:sourceBody:sourceHeader:]
Problem making sourceBodyRef with range: %@
calcEngine
expected nil value for '%{public}s'
_tableStylePreset
 as Pivot Source Table
@"TSSStyle"16@?0@"TSSStyle"8
v24@?0Q8^B16
@"TSTConcurrentCellIteratorFourArgRock"24@?0{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
@32@?0@"<TSTCellIteratorData>"8@"TSTConcurrentCellIteratorFourArgRock"16@24
v32@?0@"TSUMutablePair"8Q16^B24
v16@?0@"NSArray"8
-[TSTTableModel p_updateMergesAndCellsAsPivotDataWithSourceModel:sourceRegion:sourceBodyRegion:]
We should really have rows in a pivot source.
v40@?0{TSUCellCoord=ISBB}8@"TSTCell"16Q24^B32
@"TSTCellMap"24@?0{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
@32@?0@"<TSTCellIteratorData>"8@"TSTCellMap"16@24
v32@?0^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}8{TSUCellCoord=ISBB}16^B24
-[TSTTableModel upgradeDuringDocumentUpgradeIfNeeded:tableInfo:]
Invalid parameter not satisfying: %{public}s
tableInfo != nil
hiddenStates
v24@?0@"TSKCustomFormatWrapper"8^B16
@32@?0@"<TSTCellIteratorData>"8@"TSTConcurrentCellList"16@24
@"TSTConcurrentSparseCellList"24@?0{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
v16@?0@"TSTTableStyle"8
v16@?0@"TSTCellStyle"8
v16@?0@"TSWPParagraphStyle"8
v16@?0@"TSWPShapeStyle"8
v16@?0@"TSTTableStylePreset"8
v16@?0@"TSTHiddenStateFormulaOwner"8
v16@?0@"TSTTableFilterSet"8
v16@?0@"TSTCategoryOwner"8
v16@?0@"TSTPivotOwner"8
v16@?0@"TSWPStorage"8
v16@?0@"TSTColumnRowUIDMap"8
v16@?0@"TSTStrokeSidecar"8
-[TSTTableModel loadFromUnarchiver:]
Unequal date grouping columns and values. We can't make a map.
TSTPivotTables
Fatal Assertion failure: %{public}s %{public}s:%d Bad table model feature version!
-[TSTTableModel saveToArchiver:]
Bad table model feature version!
Unexpected categories feature version in TSTTableModel.
-[TSTTableModel setTableInfo:]
Do not set a tableInfo pointer on a pivotDataModel
Fatal Assertion failure: %{public}s %{public}s:%d Trying to set a non-nil tableInfo on tableModel of type %d, not allowed.
Trying to set a non-nil tableInfo on tableModel of type %d, not allowed.
-[TSTTableModel setIsAPivotDataModel:]
A pivotDataModel cannot have a tableInfo pointer.
-[TSTTableModel setTextImportRecord:]
Bad import record type!
-[TSTTableModel verifySubOwnerUIDsUsed]
Conditional styles ownerUid isn't subOwner uid for table:%@
TableModel %@: Sort Rule ownerUid isn't subOwner uid table:%@
Merge ownerUid isn't subOwner uid table:%@
Pencil Annotation ownerUid isn't subOwner uid table:%@
Pivot ownerUid isn't subOwner uid table:%@
TSTHiddenStateFORMULAOwner ownerUid isn't subOwner uid table:%@
<%@> %@ (%@%@)
 From: %@
-[TSTTableModel unnamedTableString]
locale
Table %@
untitledTableNameFormat
-[TSTTableModel setCellsWithBaseCellMap:ignoreFormulas:skipDirtyingNonFormulaCells:]
using a uid based cellmap where a coord based one is expected
-[TSTTableModel clearCommentHostingMapForCommentStorage:]
Tables Comment Storage should not be empty
-[TSTTableModel commentHostingAtBaseCellCoord:forCommentStorage:]
Comment storages should be equal
-[TSTTableModel heightOfRowAtIndex:isDefault:]
Bad row index!
-[TSTTableModel widthOfColumnAtIndex:isDefault:]
Bad column index!
-[TSTTableModel setHeight:ofRowAtIndex:]
-[TSTTableModel setWidth:ofColumnAtIndex:]
v32@?0@"NSNumber"8Q16^B24
-[TSTTableModel insertColumnsAtIndex:uids:metadatas:tableArea:]
invalid table area for column insert
not enough room in the header
-[TSTTableModel insertRowsAtIndex:uids:metadatas:tableArea:unsetFilterHidingAction:]
invalid table area for row insert
not enough room in the header for insert
not enough room in the footer for insert
v32@?0{_NSRange=QQ}8^B24
-[TSTTableModel setHidingState:atRowIndex:]
-[TSTTableModel setHidingState:atColumnIndex:]
-[TSTTableModel columnNameForCellID:restrictToBodyRange:]
refNamer
Column %@
-[TSTTableModel setFormulaOwnerUIDsWithMap:shouldStealReferences:]
Really needed an ownerUIDMapper here - tableModel is %@ (%@)
@"TSCEFormulaObject"28@?0@"TSCEFormulaObject"8I16^B20
@"TSTConditionalStyleSet"28@?0@"TSTConditionalStyleSet"8I16^B20
v32@?0@"TSCEFormulaObject"8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16^B24
-[TSTTableModel registerAllFormulasWithCalculationEngine:wasCrossDocumentPaste:infoIsCategorized:wasUndo:]
expect the locally set calc engine to be the same as the one passed in
v24@?0Q8@"TSCEFormulaObject"16
@"TSSStyle"32@?0@"TSSStyle"8@"NSString"16Q24
-[TSTTableModel adoptStylesheet:withMapper:]
we expect the table to not be registered yet
 Document or Theme
-[TSTTableModel validateTableStylesInSameStylesheetExpectingDocSS:]
Expected non-nil document stylesheet for validation.
-[TSTTableModel validateTableStylesInSameStylesheetExpectingDocSS:]_block_invoke
styleStylesheet
Expected%{public}@ stylesheet %p on table network style %lu, got %p
v40@?0@"TSSStyle"8@"NSString"16Q24^B32
v40@?0@"TSWPParagraphStyle"8{_NSRange=QQ}16^B32
-[TSTTableModel baseCellCoordForCellContainingRichTextStorage:]
storage
{vector<TSTCellBorder *, std::allocator<TSTCellBorder *>>=^@^@{__compressed_pair<TSTCellBorder *__strong *, std::allocator<TSTCellBorder *>>=^@}}20@?0{TSUModelRowIndex=I}8^v12
@"TSTCell"24@?0^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}8Q16
{vector<TSTCell *, std::allocator<TSTCell *>>=^@^@{__compressed_pair<TSTCell *__strong *, std::allocator<TSTCell *>>=^@}}44@?0{TSUModelRowIndex=I}8@"TSTTableTile"12@"TSTTableTileRowInfo"20^v28^v36
v40@?0{TSUModelCellCoord={TSUCellCoord=ISBB}}8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@"TSTCell"24@"TSTCell"32
-[TSTTableModel setCellsConcurrently:ignoreFormula:clearImportWarnings:formulaReplacer:]_block_invoke
baseCoord should be valid
-[TSTTableModel setCellsConcurrently:ignoreFormula:clearImportWarnings:formulaReplacer:]_block_invoke_2
cells called should have rich text
TSTCategorizedTables
TSTExpandedTables
TSTFutureProofCell
TSTPivotTables v2
NSString *TSTFeatureIdentifierForCompatibilityVersion(TSPVersion)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCompatibility.h
Unimplemented version for TSTCompatibility: %@
double TSTCellStorageDurationValue(TSTCellStorage *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellStorage.h
Asked for duration value from non-duration cell.
TSUCellRect TSUCellRangeFromRowRange(NSRange, TSUColumnRowSize)
/Library/Caches/com.apple.xbs/Binaries/iWorkImport_Sim/install/Symbols/BuiltProducts/TSUtility.framework/Headers/TSUColumnRowRect.h
out of bounds
TSUCellRect TSUCellRangeFromColumnRange(NSRange, TSUColumnRowSize)
-[TSTMutableCellIteratorData cellID]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTMutableCellIteratorData.m
cellID read before it was set
-[TSTMutableCellIteratorData cell]
cell read before it was set
-[TSTMutableCellIteratorData mergeRange]
mergeRange read before it was set
-[TSTMutableCellIteratorData formulaSpec]
formulaSpec read before it was set
v24@?0@"TSTTableTileRowInfo"8^B16
v28@?0@"TSTTableTileRowInfo"8I16^B20
Tables/Tile
-[TSTTableTile _setRowInfo:atTileRowIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableTile.mm
Duplicate row indexes!
Fatal Assertion failure: %{public}s %{public}s:%d Table embiggening is a one-way process
-[TSTTableTile setShouldUseWideRows:]
Table embiggening is a one-way process
-[TSTTableTile populatedRows]_block_invoke
rowInfo
<%@:%p %lu cells/ rows %@ >
Couldn't find row info for row index %lu
-[TSTTableTile setCell:atColumnIndex:tileRowIndex:formatKeys:]
Fatal Assertion failure: %{public}s %{public}s:%d Missing formatKeys when we need them!.
Missing formatKeys when we need them!.
v32@?0@"NSObject"8Q16^B24
-[TSTTableTile assertListRows]_block_invoke
In assertListRows, saw a row info that has no cells
void _assertTileIndexMatch(TSURowIndex, TSURowIndex)
TableTile row index %u should match array index %u.
dat_
-[TSCEDateCellValue compareToCellValue:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEDateCellValue.mm
Unexpected value type found
-[TSTCellRangeControlSpec initWithInteractionType:minimum:maximum:increment:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellRangeControlSpec.mm
Illegal interaction type:%@
Illegal parameters: %f, %f, %f
+[TSTCellRangeControlSpec cellSpecFromTSKFormat:]
TSTCellRangeControlSpec can only be created from TSKFormats for Stepper, Slider, and Rating.
virtual TSCEASTElement *TSCEASTMoveRegionRewriter::colonTractNode(TSCEASTColonTractElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTMoveRegionRewriter.mm
Not expected to need to combine RelativeTractRef rewrites
v16@?0@8
ACCRINT
ACCRINTM
ACOS
ACOSH
ADDRESS
AREAS
ASIN
ASINH
ATAN
ATAN2
ATANH
AVEDEV
AVERAGE
AVERAGEA
CEILING
CHAR
CHOOSE
CLEAN
CODE
COLUMN
COLUMNS
COMBIN
CONCATENATE
CONFIDENCE
CORREL
COSH
COUNT
COUNTA
COUNTBLANK
COUNTIF
COUPDAYBS
COUPDAYS
COUPDAYSNC
COUPNUM
COVAR
DATE
DATEDIF
DEGREES
DISC
DOLLAR
EDATE
EVEN
EXACT
FACT
FALSE
FIND
FIXED
FLOOR
FORECAST
HLOOKUP
HOUR
HYPERLINK
INDEX
INDIRECT
INTERCEPT
IPMT
ISBLANK
ISERROR
ISEVEN
ISODD
ISPMT
LARGE
LEFT
LOG10
LOOKUP
LOWER
MATCH
MAXA
MEDIAN
MINA
MINUTE
MIRR
MODE
MONTH
MROUND
NPER
OFFSET
PERCENTILE
POISSON
POWER
PPMT
PRICE
PRICEDISC
PRICEMAT
PROB
PRODUCT
PROPER
QUOTIENT
RADIANS
RAND
RANDBETWEEN
RANK
RATE
REPLACE
REPT
RIGHT
ROMAN
ROUND
ROUNDDOWN
ROUNDUP
ROWS
SEARCH
SECOND
SIGN
SINH
SLOPE
SMALL
SQRT
STDEV
STDEVA
STDEVP
STDEVPA
SUBSTITUTE
SUMIF
SUMPRODUCT
SUMSQ
TANH
TIME
TIMEVALUE
TODAY
TRIM
TRUE
TRUNC
UPPER
VALUE
VARA
VARP
VARPA
VLOOKUP
WEEKDAY
YEAR
op_Multiply
op_Divide
op_Power
op_Percent
op_PlusSign
op_Negate
__CHART
op_Add
op_Subtract
op_Concat
op_LT
op_GT
op_LE
op_GE
op_EQ
op_NE
EFFECT
NOMINAL
NORMDIST
NORMSDIST
NORMINV
NORMSINV
YIELD
YIELDDISC
YIELDMAT
BONDDURATION
BONDMDURATION
ERFC
STANDARDIZE
INTRATE
RECEIVED
CUMIPMT
CUMPRINC
EOMONTH
WORKDAY
MONTHNAME
WEEKNUM
DUR2HOURS
DUR2MINUTES
DUR2SECONDS
DUR2DAYS
DUR2WEEKS
DURATION
EXPONDIST
YEARFRAC
ZTEST
SUMX2MY2
SUMX2PY2
SUMXMY2
SQRTPI
TRANSPOSE
DEVSQ
FREQUENCY
DELTA
FACTDOUBLE
GESTEP
PERCENTRANK
GAMMALN
DATEVALUE
GAMMADIST
GAMMAINV
SUMIFS
AVERAGEIFS
COUNTIFS
AVERAGEIF
IFERROR
DAYNAME
BESSELJ
BESSELY
LOGNORMDIST
LOGINV
TDIST
BINOMDIST
NEGBINOMDIST
FDIST
PERMUT
CHIDIST
CHITEST
TTEST
QUARTILE
MULTINOMIAL
CRITBINOM
BASETONUM
NUMTOBASE
TINV
CONVERT
CHIINV
FINV
BETADIST
BETAINV
NETWORKDAYS
DAYS360
HARMEAN
GEOMEAN
DEC2HEX
DEC2BIN
DEC2OCT
BIN2HEX
BIN2DEC
BIN2OCT
OCT2BIN
OCT2DEC
OCT2HEX
HEX2BIN
HEX2DEC
HEX2OCT
LINEST
DUR2MILLISECONDS
STRIPDURATION
op_Colon
INTERSECT.RANGES
LATITUDE
LONGITUDE
BEARING
ALTITUDE
UNION.RANGES
SERIESSUM
POLYNOMIAL
WEIBULL
CONFIDENCE.T
COVARIANCE.S
MODE.MULT
PERCENTILE.EXC
PERCENTRANK.EXC
QUARTILE.EXC
RANK.AVG
FIND.CASEINSENSITIVE
PLAINTEXT
STOCK
STOCKH
CURRENCY
CURRENCYH
CURRENCYCONVERT
CURRENCYCODE
ISNUMBER
ISTEXT
ISDATE
MAXIFS
MINIFS
XIRR
XNPV
XLOOKUP
XMATCH
SUBTOTAL
COUNTMATCHES
TEXTBEFORE
TEXTBETWEEN
TEXTAFTER
REGEX
REFERENCE.NAME
FORMULATEXT
REGEX.EXTRACT
GETPIVOTDATA
__INTERACTIONTYPE
__CELLVALUETYPE
+[TSCEFunctionSpec(TSCEAutogeneratedSpecList) functionSpecList]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFunctionSpecDictionary.mm
Couldn't create functionSpecList of %@
-[TSCECellTractRef initWithUidTract:calcEngine:tableUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECellTractRef.mm
+[TSCECellTractRef cellTractRefWithUidTractList:onTable:preserveFlags:rewriteContext:]
Can't be spanning on both row and column, tractList: %{public}@
-[TSCECellTractRef uidTractWithCalcEngine:hostTableUID:]
 | %@
v24@?0r^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8^B16
TSCEASTElement *TSCEASTTransposeRewriter::shouldTransformSpanningColumnToBodyRangeReference(TSCEASTElement *, const TSCEOwnerUID &, TSUColumnIndex, BOOL, TSUCellCoord)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTTransposeRewriter.mm
Table's bodyRange wasn't valid
TSCECellTractRef *TSCEASTTransposeRewriter::transformSpanningColumnToBodyRangeReference(TSCEASTElement *, TSCECellTractRef *__strong, TSUCellCoord)
absTractRef
Couldn't locate a table with uid: %@ in calcEngine %p
Table %@ bodyRange wasn't valid
TSUColumnIndex TSCEMakeAbsoluteColumnFromRelativeColumn(TSUCellCoord, TSURelativeColumnIndex, BOOL)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCETypes.h
overflow in column
TSURowIndex TSCEMakeAbsoluteRowFromRelativeRow(TSUCellCoord, TSURelativeRowIndex, BOOL)
overflow in row, input row: %d with host row: %lu
Calling TSCEMakeAbsoluteRowFromRelativeRow with an invalid hostCell row: %@
%@ Pivot
-[TSTTableInfo initWithContext:geometry:rows:columns:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableInfo.mm
stylePreset
-[TSTTableInfo initWithContext:geometry:]
call - (instancetype) initWithContext: (TSPObjectContext *) context geometry: (TSDInfoGeometry *) geometry styles:(TSTTableStyleNetwork *)styles please
-[TSTTableInfo initAsDetailTableWithContext:sourcePivotTableInfo:pivotSourceCell:]
Expect only pivotTable to be passed in.
-[TSTTableInfo initWithContext:fromSourceInfo:cellRegion:waitForCalcEngine:flattenCategories:isSnapshot:]
Copying a categorized table without flattening. If you know how you got here, please write a bug.
v20@?0I8^B12
v20@?0S8^B12
-[TSTTableInfo _initWithContext:flatteningFromComplexInfo:cellRegion:waitForCalcEngine:flatteningOptions:isSnapshot:]
not expecting categorized or pivot table
-[TSTTableInfo _initWithContext:fromSourceInfo:cellRegion:tableModel:waitForCalcEngine:formulaCoordSpace:]
not expecting a categorized table
%@ %p: %@ (tableUID: %@ tableName: %@)
Headers table
Basic table
Checklist table
Stocks table
Plain table
Headers and footers table
+[TSTTableInfo localizedDescriptionForProtoIndex:]
No description for table proto index: %lu
Field 1
Field 2
Field 3
remotedata_positive_fill@2x.png
remotedata_negative_fill@2x.png
-[TSTTableInfo componentRootObject]
Component root object is nil!
-[TSTTableInfo performReadForOneOffFormulaEvaluation:forCellCoord:]
_translator
-[TSTTableInfo notifyTableOfNewResults]
There are no callers of this, but its needed to conform to TSCECalculationEngineRegistration protocol
-[TSTTableInfo filteringColumnNameForColumnIndex:]
-[TSTTableInfo p_setFilterSet:]
Must convert filters to geometric before setting
+[TSTTableInfo bootstrapPresetsOfKind:inTheme:alternate:reservedCount:]
expected equality between %{public}s and %{public}s
p.context
context
-[TSTTableInfo replaceReferencedStylesUsingBlock:]
failed cell map application
Table
+[TSTTableInfo validateNewName:forTable:]
Unable to get sheetNameProvider
B24@?0@"NSArray"8@"NSArray"16
TableInfo %p with tableName: '%@' and tableUID %@ is not registered with the calc-engine properly.
Repaired by renaming table to '%@' with tableUID: %@
-[TSTTableInfo allAnnotations]_block_invoke
iterator shoul only return cells with comments
^%@\s\d+(-\d+)?$
%@-%@
-[TSTTableInfo chooseUniqueNameInContainer:forPaste:needsNewName:avoidNames:]
Fresh table name is the same as the old one - aborting infinite loop.
-[TSTTableInfo getDefaultCell:forCellID:]
trying to get a default cell for an invalid cell ID
-[TSTTableInfo getCell:atCellID:suppressCellBorder:]
-[TSTTableInfo getCell:atCellID:]
-[TSTTableInfo hasFormulaAtCellUID:]
-[TSTTableInfo formulaAtCellID:]
-[TSTTableInfo setCell:atCellUID:ignoreFormula:clearImportWarnings:formulaReplacer:]
-[TSTTableInfo setCell:atCellUID:ignoreFormula:clearImportWarnings:]
-[TSTTableInfo setCellsWithCellMap:ignoreFormulas:skipDirtyingNonFormulaCells:]
coord based cellmaps no longer ok
v32@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8Q16^B24
@"TSTCellMap"24@?0{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
@"TSTConcurrentCellList"24@?0{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
-[TSTTableInfo cellValueTypeAtCellID:]
-[TSTTableInfo cellValueTypeAtCellUID:]
-[TSTTableInfo setCellStyle:ofRowAtUID:]
-[TSTTableInfo setTextStyle:ofRowAtUID:]
-[TSTTableInfo cellStyleOfRowAtIndex:isDefault:]
-[TSTTableInfo textStyleOfRowAtIndex:isDefault:]
-[TSTTableInfo setCellStyle:ofColumnAtUID:]
-[TSTTableInfo setTextStyle:ofColumnAtUID:]
-[TSTTableInfo cellStyleOfColumnAtIndex:isDefault:]
-[TSTTableInfo textStyleOfColumnAtIndex:isDefault:]
-[TSTTableInfo defaultCellStyleForCellID:useSoftDefault:outSource:]
-[TSTTableInfo defaultCellStyleForTableStyleArea:]
-[TSTTableInfo defaultTextStyleForCellID:useSoftDefault:outSource:]
-[TSTTableInfo defaultTextStyleForTableStyleArea:]
-[TSTTableInfo cellStyleAtCellID:isDefault:]
-[TSTTableInfo textStyleAtCellID:isDefault:]
-[TSTTableInfo cellStyleAtCellUID:isDefault:]
-[TSTTableInfo textStyleAtCellUID:isDefault:]
-[TSTTableInfo conditionalStyleSetAtCellID:]
-[TSTTableInfo columnNameForCellID:restrictToBodyRange:]
-[TSTTableInfo rowNameForCellID:restrictToBodyRange:]
-[TSTTableInfo columnNameForColumnIndex:withFallbackFormat:]
-[TSTTableInfo pivotDataLocalizedColumnNameAtDataColumnIndex:]
Only ask about the pivotDataModel on a pivot table.
-[TSTTableInfo stringAtCellID:optionalCell:]
-[TSTTableInfo characterFillAtCellID:optionalCell:]
Value Field
Field
Total
Row Group
Column Group
Summary
v40@?0Q8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16^B32
v16@?0Q8
-[TSTTableInfo getValue:atCellID:fetchRichTextAttributesIfPlainText:]
-[TSTTableInfo cellValueFromCell:atCellID:]
v24@?0{TSUCellCoord=ISBB}8^B16
-[TSTTableInfo cellUIDListFromCellRegion:useCategoriesWildcards:]_block_invoke
Invalid level for a summary row. We're about to crash. summaryRowIndex:%lu intersectingSummaryRowIndexes:{public}%@ translator:{public}%@
Invalid level for a label row. We're about to crash. labelRowIndex:%lu intersectingLabelRowIndexes:{public}%@ translator:{public}%@
v40@?0C8{TSKUIDStruct=QQ}12C28^B32
-[TSTTableInfo _correctAndCheckStateSuppressingAssertions:]
TableChecker: correcting nil categoryOrder in normal/disabled state
TableChecker: correcting missing backpointer in normal/disabled state
TableChecker: correcting uid map in normal/disabled state
TableChecker: correcting strokeSidecar
TableChecker: correcting summaryModel
TableChecker: correcting maps
-[TSTTableInfo setGroupByUid:]
Hey, don't set an invalid groupByUid on TSTTableInfo - ignoring your silly request.
Not expecting our pointer to change during subOwnerUIDUpgrade, if so, categoryOwner will need to update its structures
_groupBy.groupByUid and _groupByUid should match
-[TSTTableInfo setIsCategoryEnabled:]
Cannot enable/disable categories without a groupBy
-[TSTTableInfo isEmptyPivot]
self.pivotOwner
-[TSTTableInfo applyPivotWithColumns:rows:aggregates:flatteningDimension:optionsMap:pivotRowColumnRuleChangeUid:pivotAggregateRuleChangeUid:]
Cannot apply pivot rules to a non-pivot table
v24@?0@"TSTGroupingColumn"8^B16
-[TSTTableInfo verifySubOwnerUIDsUsed]
Row hidden state ownerUid isn't subOwner uid: %@
Column hidden state ownerUid isn't subOwner uid
Category Aggregate ownerUid isn't subOwner uid
GroupBy uid isn't subOwner uid
PivotDataModel uid isn't subOwner uid
v16@?0@"TSTTableModel"8
v16@?0@"TSTSummaryModel"8
v16@?0@"TSTCategoryOrder"8
v16@?0@"TSTPivotRowColumnOrder"8
-[TSTTableInfo saveToArchive:archiver:]
Out-of-bounds type assignment was clamped to max
Out-of-bounds type assignment was clamped to min
_pivotDataModel
_pivotOrder
v16@?0@"TSDLayout"8
-[TSTTableInfo(CellMap) applyCellDiff:atCellUID:migrationMap:inverseCellDiff:defaultCellStyle:defaultTextStyle:]_block_invoke
customFormat
-[TSTTableInfo(CellMap) applyCellDiff:atCellUID:migrationMap:inverseCellDiff:defaultCellStyle:defaultTextStyle:]
TSU_SUCCESS
virtual NSString *TSCEThunkValue::string(TSCEFunctionSpec *__strong, int, TSULocale *__strong) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEThunkValue.mm
ThunkValue doesn't have a meaningful string() to provide
TSCECellDependencies::TSCECellDependencies(TSCEDependencyTracker *, TSCEInternalFormulaOwnerID, const TSCEOwnerUID &, TSCESubFormulaOwnerIndex)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECellDependencies.mm
tile.cppTile
void TSCECellDependencies::readPrecedentsWithOwners(const TSCE::EdgesArchive &, TSCECellRecord *)
corrupted file
Couldn't locate tableID found in cross-table reference: %{public}@
void TSCECellDependencies::readExpandedPrecedentsWithOwners(const TSCE::ExpandedEdgesArchive &, TSCECellRecord *)
void TSCECellDependencies::readFromArchive(const TSCE::CellDependenciesArchive &)
void TSCECellDependencies::unpackAfterUnarchive()
_dependencyTracker
v24@?0r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}8^B16
v24@?0^{TSCECellRecord=^{TSCECellRecordEdgeLists}{os_unfair_lock_s=I}Q{TSCEPackedEdge=[8c]}ISS}8^B16
void TSCECellDependencies::readFromTiledArchive(const TSCE::CellDependenciesTiledArchive &, TSPUnarchiver *__strong)_block_invoke
TSCECellRecordTileWrapper *TSCECellDependencies::tileForCoord(const TSUCellCoord &, BOOL)
Expect cppTile to be filled in already
Uh, why are we returning a tile with no insides?
v16@?0^{TSCECellRecord=^{TSCECellRecordEdgeLists}{os_unfair_lock_s=I}Q{TSCEPackedEdge=[8c]}ISS}8
v24@?0r^{TSUCellCoord=ISBB}8^B16
v28@?0S8r^v12^B20
CYCLE 
(formula) 
%@, 
void TSCECellDependencies::findAndRecordCyclesInDirtyCells(TSCETarjanState &, TSCEInternalCellRefQueue &)_block_invoke
Cycle grid out of sync.
IsDirty grid out of sync.
IsDirtyAndNotInACycle grid out of sync.
Avoided underflow in dirtySelfPlusPrecedentsCount for cell: %@
BOOL TSCECellDependencies::dirtyPrecedentCountsAreConsistent(BOOL)_block_invoke
cellRecord
%@:%@ recomputed: <clean> vs stored %lu - inconsistency.
%@...<truncated>
  +1: This cell is dirty
recomputed: %lu vs stored %lu - inconsistency, explanation:
%@precedents:%@
dirty precedents count consistency error in %@ (count is %lu, should be >1)
v16@?0@"TSDCommentStorage"8
v16@?0@"TSTRichTextReferenceWrapper"8
v16@?0@"TSTConditionalStyleSet"8
void TSTEncodeCellToArchive(TSTCell *__strong, TST::Cell *, TSPArchiver *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTArchiveUtilities.mm
stringValue in string cell is nil
TSDThreadedComments
incbi
-[TSCECellValue tsceValue]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECellValue.mm
Abstract method not overridden by %{public}@
Abstract method not overridden by %@: %s
-[TSCECellValue copyWithZone:]
-[TSCECellValue displayString]
Children of TSCECellValue should implement %@.
-[TSCECellValue canonicalKeyString]
-[TSCECellValue format]
-[TSCECellValue isEqualToCellValue:]
-[TSCECellValue hash]
-[TSCECellValue compareToCellValue:]
-[TSCECellValue updateWithCustomFormatList:]
customFormatList
-[TSCECellValue encodeCellValueToArchive:]
Unexpected value type found in archiving in TSCECellValue
-[TSTUIDRectRef convertUIDRefToViewTractRef]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTUIDRectRef.mm
If we're already uid-form, why do we have a mapper?
-[TSTUIDRectRef excludeSummaryAndLabelRows]
_calcEngine
-[TSTUIDRectRef baseRangeRef]
This API can't support multiple base ranges, had %lu
-[TSTUIDRectRef viewRangeRef]
This API can't support multiple view ranges, had %lu
%@<%p> base:
-[TSTCellIterator initWithTableInfo:tableModel:region:flags:searchFlags:clampingRange:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellIterator.mm
caller should pass in region pointer
Tried to create iterator with range larger than is possible.
cannot use iterator flags to return all empty cells and also use flags to only search for specific kinds of cells
unsupported options, searching for borders but not fetching them
flags remain 0x%lx, flags should all be consumed by this point 
searchFlags remain 0x%lx, searchFlags should all be consumed by this point 
-[TSTCellIterator p_updateDataForMergeAtCellID:]
found this column in the cached merge ranges, so expected a merge range
-[TSTCellIterator p_updateDataForCellID:]
cell iterator was asked for cellID %@ that is outside the table bounds
tableCell
tableCellText
+[TSTCellStyle properties]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellStyle.mm
sProperties
+[TSTCellStyle propertiesAllowingNSNull]_block_invoke
s_nullProperties
+[TSTCellStyle nonEmphasisCellProperties]_block_invoke
s_nonEmphasisProperties
+[TSTCellStyle categoriesCellProperties]_block_invoke
bodyStyle
headerRowStyle
headerColumnStyle
footerRowStyle
categoryLevel1Row
categoryLevel2Row
categoryLevel3Row
categoryLevel4Row
categoryLevel5Row
labelLevel1Row
labelLevel2Row
labelLevel3Row
labelLevel4Row
labelLevel5Row
pivotBodySummaryRow
pivotBodySummaryColumn
pivotHeaderColumnSummary
+[TSTCellStyle p_regionStringForTableStyleArea:]
Unexpected value for region.
+[TSTCellStyle initDefaultPropertyMap:forTableStyleArea:presetID:colors:alternate:]
-[TSTCellStyle validate]
orphaned cell style %@
Cell style not in its stylesheet
-[TSTCellStyle targetSizeForImageData:associatedHint:]_block_invoke
preset
-[TSTCellStyle targetSizeForImageData:associatedHint:]
Expected that the imageData would be from the style's fill
v20@?0i8^B12
AggregateDescriptionFormatString
%1$@ of %2$@
AggregateDescriptionWithParensFormatString
%1$@ (%2$@)
PivotCellDescriptionWithPrefixFormatString
%1$@: %2$@
PivotCellDescription5FieldsFormatString
%1$@: %2$@: %3$@: %4$@: %5$@
PivotCellDescription4FieldsFormatString
%1$@: %2$@: %3$@: %4$@
PivotCellDescription3FieldsFormatString
%1$@: %2$@: %3$@
PivotCellDescription2FieldsFormatString
PivotCellDescription1FieldsFormatString
%1$@
PivotCellDescription2FieldHolderFormatString
PivotCellDescription1FieldHolderFormatString
%@ -> %@
-[TSTPivotTranslator resetViewMap]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPivotTranslator.mm
view and base cannot be the same for a pivot table
-[TSTPivotTranslator tableStyleAreaForRow:]
Unimplemented for pivot tables, because it doesn't make sense.
i32@?0r^{TSUModelCellCoord={TSUCellCoord=ISBB}}8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16C24C28
i24@?0r^{TSUModelCellCoord={TSUCellCoord=ISBB}}8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
v12@?0C8
v24@?0r^{TSUModelRowIndex=I}8r^{TSKUIDStruct=QQ}16
v24@?0r^{TSUModelColumnIndex=S}8r^{TSKUIDStruct=QQ}16
-[TSTPivotTranslator p_applyViewCellCoord:toSummaryUsingBlock:toBaseUsingBlock:]
cell in summary row is in viewMap, but not in summaryMap
-[TSTPivotTranslator indexesForRowsContainedByGroupUIDs:]_block_invoke
do not call with root group
-[TSTPivotTranslator indexesForColumnsContainedByGroupUIDs:]_block_invoke
TSTColumnRowTypeWithIndex TSTMakeColumnRowTypeWithIndex(TSTColumnRowType, NSUInteger)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableConstants.h
Type:%ldl or index:%lul is too large for TSTIndexedColumnRowType.
-[TSTTableTileRowInfo initFromArchive:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableTileRowInfo.mm
Can't find the last valid column during unarchive!
lastPreBNCCellRef
Mismatches between buffers.
-[TSTTableTileRowInfo encodeToArchive:archiver:]
should not be archiving an empty row info
Expected current storage version.
-[TSTTableTileRowInfo _insertCell:atIndex:formatKeys:]
Can't insert over an existing cell!
Fatal Assertion failure: %{public}s %{public}s:%d Attempting to write cells to a preBNC row.
-[TSTTableTileRowInfo setCell:atIndex:formatKeys:]
Attempting to write cells to a preBNC row.
Fatal Assertion failure: %{public}s %{public}s:%d Attempting to insert columns in a preBNC row.
-[TSTTableTileRowInfo insertColumnsAtIndex:count:]
Attempting to insert columns in a preBNC row.
Fatal Assertion failure: %{public}s %{public}s:%d Attempting to remove columns in a preBNC row.
-[TSTTableTileRowInfo removeColumnsAtIndex:count:]
Attempting to remove columns in a preBNC row.
-[TSTTableTileRowInfo moveColumnsFromIndex:toIndex:count:]
Move column ranges cannot overlap!
cellsMoved
cellsMovedPreBNC
Incorrect maximum column!
-[TSTTableTileRowInfo validateWithResult:]
%{public}@
 Misaligned cell storage offsets!
 Cell storage overflow!
 Found an extra cell in this row!
 Bad cell version!
 Mismatched presence of cells.
 Misaligned cell storage offsets in PreBNC!
 Cell storage overflow in PreBNC!
 Found an extra preBNC cell in this row!
 Cell storage overflow in Pre BNC!
 Incorrect cell count! Expected:%tu Found:%tu.
 Incorrect PreBNC cell count! Expected:%tu Found:%tu.
<%@:%p tileRowIndex %lu cellCount %lu>
Fatal Assertion failure: %{public}s %{public}s:%d Never call me without a row
TSUColumnIndex _maxColumnIndex(TSTTableTileRowInfo *__unsafe_unretained)
Never call me without a row
void _invalidateMaxColumnIndex(TSTTableTileRowInfo *__unsafe_unretained)
void _updateCellBufferSize(TSTTableTileRowBuffer *, NSUInteger)
Row data buffer is too small!
Fatal Assertion failure: %{public}s %{public}s:%d Can't grow to wide columns in a row buffer not converted for wide offsets
void _extendOffsetArrayForMaxIndex(TSTTableTileRowBuffer *, TSUColumnIndex)
Can't grow to wide columns in a row buffer not converted for wide offsets
Fatal Assertion failure: %{public}s %{public}s:%d Too many columns for our row storage!
Too many columns for our row storage!
Fatal Assertion failure: %{public}s %{public}s:%d Encountered a bad offset while widening!
void _convertBufferToWideIndexes(TSTTableTileRowBuffer *)
Encountered a bad offset while widening!
void _shiftCellStorageInBuffer(TSTTableTileRowBuffer *, NSUInteger, NSInteger)
Row storage buffer overflow!
Fatal Assertion failure: %{public}s %{public}s:%d Corrupt cellStorage shift. Crashing!
Corrupt cellStorage shift. Crashing!
Fatal Assertion failure: %{public}s %{public}s:%d Computed impossible insertion point.
NSUInteger _offsetForInsertInBuffer(TSTTableTileRowBuffer *, TSUColumnIndex, TSUColumnIndex, NSInteger)
Computed impossible insertion point.
void _invalidateMaxColumnIndexForColumnIndex(TSTTableTileRowInfo *__unsafe_unretained, TSUColumnIndex)
NSUInteger _applyMovingCellBuffer(TSTTableTileRowBuffer *, TSTTableTileRowBuffer *, TSUColumnIndex, TSUColumnRowCount)
Overwriting a column in move!
NSUInteger _storageSizeInBuffer(TSTTableTileRowBuffer *, TSUColumnIndex, TSUColumnIndex)
Couldn't find next storage offset for non-last cell!
virtual TSCEASTElement *TSTCellSpecFormulaExtractor::functionNode(TSCEASTFunctionElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellFormulaSpec.mm
Need a locale to parse stock formulas.
-[TSTCellFormulaSpec initWithFormulaObject:locale:]
TSTCellFormulaSpec requires a formula.
<%@: %p>: %@
null formula
%C%C%C%%C
%C%C%C%C%C%C%C%C%C
'%C%C%C%C%C%C%C
-[TSCENameTrie removeName:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCENameTrie.mm
Verify we are deleting the correct node
UInt16 TSTCellStorageSizeForHeaderFlags(TSTCellStorageFieldFlags)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellStorage.mm
Storage size should be four-byte-aligned!
BOOL TSTCellStorageVersionCheck(TSTCellStorage *)
Can't parse cell storage header version %d!
void TSTCellToCellStorage(TSTCell *__strong, TSTCellStorage *)
Cell claims to have a string, but has no key for it!
Cell claims to have rich text, but has no key for it!
Cell claims to have a cell style, but has no key for it!
Cell claims to have a text style, but has no key for it!
Cell claims to have conditional style, but has no key for it!
Cell claims to have a formula, but has no key for it!
Cell claims to have a control, but has no key for it!
Cell claims to have a formula syntax error, but has no key for it!
Can't archive a bad format kind!
Cell claims to have a number format, but has no key for it!
Cell claims to have a currency format, but has no key for it!
Cell claims to have a date format, but has no key for it!
Cell claims to have a duration format, but has no key for it!
Cell claims to have a text format, but has no key for it!
Cell claims to have a boolean format, but has no key for it!
Cell claims to have a comment storage, but has no key for it!
Cell claims to have an import warning set, but has no key for it!
Could not archive all computed storage elements!
Failed to process all storage elements in TSTCellToCellStorage! Starting flags:%u Final flags:%u
Size miscalculation!
void TSTCellStorageToCell(TSTCellStorage *, TSTCell *__strong)
Fatal Assertion failure: %{public}s %{public}s:%d Can't get offset for unknown element 0x%02x, offset:%hu!
UInt16 p_OffsetForElementInStorage(TSTCellStorage *, TSTCellStorageFieldFlags)
Can't get offset for unknown element 0x%02x, offset:%hu!
, %@
%@::{%@}
%@::{%@, ...}
%@::%@
%@, ...
%@<%lu> %@%@
refers to: %@
; referenced by: %@
---Cell dependencies for %@ (%lu dirty cells):
-[TSTGroupingColumnList addRule:atGroupLevel:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGroupingColumnList.mm
Can't call this on root level
-[TSTGroupingColumnList removeRuleAtGroupLevel:]
-[TSTGroupingColumnList moveRuleFromGroupLevel:toLevel:]
-[TSTGroupingColumnList changeGroupingTypeForGroupLevel:toType:]
-[TSTGroupingColumnList replaceRuleAtGroupLevel:withRule:]
v32@?0@"TSTGroupingColumn"8Q16^B24
TSCEValue TSCEFunction_DAYNAME::evaluateWithContext(TSCEEvaluationContext &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEDateTimeFunctions.mm
weekday symbols: %@
TSCEValue TSCEFunction_DUR2DAYS::evaluateWithContext(TSCEEvaluationContext &)
Shouldn't get a non-duration in DUR2DAYS
TSCEValue TSCEFunction_DUR2WEEKS::evaluateWithContext(TSCEEvaluationContext &)
Shouldn't get a non-duration in DUR2WEEKS
TSCEValue TSCEFunction_DUR2HOURS::evaluateWithContext(TSCEEvaluationContext &)
Shouldn't get a non-duration in DUR2HOURS
TSCEValue TSCEFunction_DUR2MILLISECONDS::evaluateWithContext(TSCEEvaluationContext &)
Shouldn't get a non-duration in DUR2MILLISECONDS
TSCEValue TSCEFunction_DUR2MINUTES::evaluateWithContext(TSCEEvaluationContext &)
Shouldn't get a non-duration in DUR2MINUTES
TSCEValue TSCEFunction_DUR2SECONDS::evaluateWithContext(TSCEEvaluationContext &)
Shouldn't get a non-duration in DUR2SECONDS
static NSDate *TSCEFunction_WORKDAY::dateByAddingNumberOfDaysExcludingWeekends(NSDate *__strong, int, NSDateComponents *__strong)
Incorrect weekday number in function WORKDAY
virtual TSCEASTElement *TSCEASTRepairBadRefsRewriter::colonTractNode(TSCEASTColonTractElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTRepairBadRefsRewriter.mm
Can't have a reference spanning both columns and rows
-[TSCEDistributor protocol]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEDistributor.m
-[TSCEDistributor addReceiver:]
protocol MUST be defined before addReceiver can be used
Error %@: Target %@ does not conform to protocol %@ required for TSCEDistributor class %@.
-[TSCEDistributor suspendDuringBlock:]
someone added a receiver when we were not expecting it
TSCEErrorValue::TSCEErrorValue(TSCEError *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEErrorValue.mm
1)Creating a TSCEErrorValue with a nil TSCEError
TSCEErrorValue::TSCEErrorValue(const TSCEErrorValue &)
2)Creating a TSCEErrorValue with a nil TSCEError
virtual TSCEReferenceValue TSCEErrorValue::reference(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
evaluationContext
TSTGroupBySet<%p> for pivot: %@
  GroupBy %d: %@
-[TSTGroupBySet restoreFromPivotDataTable:columnGroupings:rowGroupings:aggregates:flatteningDimension:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGroupBySet.mm
Pivot data model missing when restoring rules for a pivot table
-[TSTGroupBySet setPivotRulesWithPivotDataTable:columnGroupings:rowGroupings:aggregates:flatteningDimension:]
Pivot data model missing when setting rules for a pivot table
-[TSTGroupBySet groupByForColumnLevel:rowLevel:]
columnLevel exceeds columnGroupings.count
rowLevel exceeds rowGroupings.count
No groupBy set for columnLevel: %d
-[TSTGroupBySet groupColumnIndexesForOwnerIndex:]
Exceeded our set of practical groupBys
-[TSTGroupBySet groupingColumnsForOwnerIndex:]
Expected to get a grouping column for index: %d
-[TSTGroupBySet groupByForOwnerIndex:createIfMissing:]
ownerIndex out of range: %d
Fatal Assertion failure: %{public}s %{public}s:%d Asking for flattened column aggregate uids while not flattening on columns
-[TSTGroupBySet columnUidsForColumnGroupUid:]
Asking for flattened column aggregate uids while not flattening on columns
Fatal Assertion failure: %{public}s %{public}s:%d Asking for flattened row aggregate uids while not flattening on rows
-[TSTGroupBySet rowUidsForRowGroupUid:]
Asking for flattened row aggregate uids while not flattening on rows
-[TSTGroupBySet columnNameForAggregateIndex:allowDuplicateNames:]
Re-constructing a non-empty pivot table without the calc engine
-[TSTGroupBySet descriptionForAggregateIndex:useShortLabel:allowDuplicateNames:locale:]
Requires a locale here
<Invalid AggType>: %@
Expecting to have localized label for all correct aggregate types
-[TSTGroupBySet compactDescriptionForAggregateIndex:useShortLabel:allowDuplicateNames:locale:]
-[TSTGroupBySet percentParentDenominatorCategoryRefFor:inGroupBy:forAggregate:forShowAsType:]
Only expecting these two showAsTypes, got: %d
-[TSTGroupBySet restrictColumnIndexes:toColumnGroupLevel:forPivotTable:]
Only expected this call with pivotTableInfo
-[TSTGroupBySet groupValueTupleForUuidCoord:createIfMissing:]
Couldn't locate rowGroupNode or columnGroupNode
Need a groupBy for this coordinate - why didn't you help?
TSTTableInfo
TSTTableModel
TSTTableStyle
TSTCellStyle
TSTConditionalStyleSet
TSTTableTile
TSTTableDataList
TSTTableDataListSegment
TSTTableHeaderStorageBucket
TSTWPTableInfo
TSTTableStrokePreset
TSTTableStylePreset
TSTArchivedCellSelection
TSTArchivedRdar39989167CellSelection
TSTArchivedStrokeSelection
TSTArchivedAutofillSelection
TSTCellMap
TSTConcurrentCellMap
TSTConcurrentCellList
TSTFormulaEqualsTokenAttachment
TSTWPTokenAttachment
TSTExpressionNode
TSTBooleanNode
TSTNumberNode
TSTStringNode
TSTArrayNode
TSTListNode
TSTLetNode
TSTVariableNode
TSTInNode
TSTOperatorNode
TSTPostfixOperatorNode
TSTPrefixOperatorNode
TSTFunctionNode
TSTFunctionEndNode
TSTDateNode
TSTReferenceNode
TSTDurationNode
TSTArgumentPlaceholderNode
TSTIdentifierNode
TSTMergeRegionMap
TSTEmptyExpressionNode
TSTArchivedLayoutHint
TSTCompletionToken
TSTHiddenStateFormulaOwner
TSTPopUpMenuModel
TSTRichTextPayload
TSTTableFilterSet
TSTTableStyleNetwork
TSTColumnRowUIDMap
TSTSummaryModel
TSTSummaryCellVendor
TSTCategoryOrder
TSTStrokeSidecar
TSTStrokeLayer
TSTPencilAnnotation
TSTHeaderNameMgrTile
TSTHeaderNameMgr
TSTPivotOwner
TSTPivotGroupingColumnOptionsMap
TSTPivotRowColumnOrder
TSTCategoryOwner
TSTGroupBy
TSTAggregator
TSTGroupNode
TSTCellDiffArray
TSTCellDiffArraySegment
<%@>
  %@ used at: %@
-[TSTConcurrentCellMap viewCellRects]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConcurrentCellMap.mm
can't use cellid interface with celluid map
-[TSTConcurrentCellMap cellUIDRanges]
can't use celluid interface with cellid map
-[TSTConcurrentCellMap p_cacheRowColumnUIDs]
-[TSTConcurrentCellMap appendCellList:]
cell list uid state doesn't match cell map
-[TSTConcurrentCellMap appendCellLists:]
v40@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8{TSUViewCellCoord={TSUCellCoord=ISBB}}16{TSUModelCellCoord={TSUCellCoord=ISBB}}24@"TSTCell"32
-[TSTConcurrentCellMap enumerateSeriallyUsingBlock:]
need a celluid based map
check that willApplyToTable was called already
-[TSTConcurrentCellMap p_enumerateNewAndOldCellsSeriallyUsingBlock:]
-[TSTConcurrentCellMap p_enumerateNewAndOldCellsSeriallyUsingPreBNCBlock:]
-[TSTConcurrentCellMap enumerateRowsOfCellsConcurrentlyUsingBlock:]
willApplyToTable should be called first
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]_block_invoke_2
should only be enumerating the cells of interest (stringValue)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]_block_invoke
should only be enumerating the cells of interest (hasFormula)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]_block_invoke_3
should only be enumerating the cells of interest (hasFormulaAnyError)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]_block_invoke_4
should only be enumerating the cells of interest (hasRichText)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]_block_invoke_5
should only be enumerating the cells of interest (hasConditionalStyle)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]_block_invoke_6
should only be enumerating the cells of interest (hasCommentStorage)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]_block_invoke_7
should only be enumerating the cells of interest (hasImportWarningSet)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]_block_invoke_8
should only be enumerating the cells of interest (hasControl)
{?=IIIIIIIIIS}34@?0@"TSTCell"8@"TSTCell"16@"TSTTableTileRowInfo"24{TSUModelColumnIndex=S}32
-[TSTConcurrentCellMap willApplyToTable:]
applyingToTable already called
need a uidBased cell map
-[TSTConcurrentCellMap willApplyToTableModel:]
-[TSTConcurrentCellMap convertToInverseCellMap]
willApplyToTable was not called or didApplyToTable called twice
-[TSTConcurrentCellMap pushInverseMergeAction:]
willApplyToTable should have been called
+[TSTConcurrentCellList cellListWithContext:cellUIDRange:repeatCellVectorPattern:patternDirection:]
expected a pattern for a row of cells
expected a pattern for a column of cells
-[TSTConcurrentCellList addCell:atViewCellCoord:]
index should be somewhere in the in the cell list's area
-[TSTConcurrentCellList addCell:atIndex:]
can only use index interface with celluid map
-[TSTConcurrentCellList p_setObjectLocale:]
-[TSTConcurrentCellList p_setupInterestingCells:interestingCellIndexes:forAdding:]
cell lists size mismatch
-[TSTConcurrentCellList p_invokeBlock:]
base rows needs to match uids
base cols needs to match uids
cells size needs to match area range
only valid viewRowIndexes should remain
only valid baseRowIndexes should remain
-[TSTConcurrentCellList p_convertToInverseCellMap]
oldCells size mismatch in cellList
-[TSTConcurrentCellList p_gatherRowState:]
-[TSTConcurrentCellList p_accumulateBordersConcurrentlyUsingBlock:accumulateCellsConcurrentlyUsingBlock:]
_tilesPerRow
_rowInfosPerRow
_tilesPerRow size mismatch in cellList
_rowInfosPerRow size mismatch in cellList
-[TSTConcurrentCellList p_enumerateRowsOfCellsConcurrentlyUsingBlock:]
_oldCells size mismatch in cellList
-[TSTConcurrentCellList p_enumerateNewAndOldCellsSeriallyUsingBlock:]
-[TSTConcurrentCellList p_enumerateNewAndOldCellsSeriallyUsingPreBNCBlock:]
-[TSTConcurrentCellList p_enumerateCellsAddedAndRemovedOfType:usingBlock:]
_interestingCells
-[TSTConcurrentCellList p_enumerateCellsAddedOfType:usingBlock:]
v32@?0@"TSKFormat"8@"NSMutableIndexSet"16^B24
v32@?0@"NSNumber"8@"NSMutableIndexSet"16^B24
-[TSTConcurrentCellList p_enumerateColumnCellCountDiffUsingBlock:]
_baseColumns and _cellCountDiffsPerColumn sizes should match
-[TSTConcurrentCellList p_enumerateRowCellCountDiffUsingBlock:]
_baseRows and _cellCountDiffsPerRow sizes should match
_baseRows and _tilesPerRow sizes should match
_baseRows and _rowInfosPerRow sizes should match
-[TSTConcurrentCellList p_enumerateCustomFormatsBeingAddedUsingReplacementBlock:]_block_invoke
Expected the custom format replacement to be of the same type as the original.
-[TSTConcurrentCellList p_enumerateCustomFormatsBeingAddedUsingReplacementBlock:]
customFormatToRemove can not be nil.
replacementCustomFormat can not be nil.
-[TSTConcurrentCellList saveToArchiver:]
Archiving is not correctly implemented for subclasses.
-[TSTConcurrentSparseCellList addCell:atViewCellCoord:]
-[TSTConcurrentSparseCellList appendCellUIDRange:]
appending cellUIDRanges must have the same set of columns
-[TSTConcurrentSparseCellList p_invokeBlock:]
-[TSTConcurrentSparseCellList p_accumulateBordersConcurrentlyUsingBlock:accumulateCellsConcurrentlyUsingBlock:]
-[TSTConcurrentSparseCellList p_enumerateRowsOfCellsConcurrentlyUsingBlock:]
v12@?0B8
virtual NSString *TSCEStringValue::string(TSCEFunctionSpec *__strong, int, TSULocale *__strong) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEStringValue.mm
customFormat.customFormat.defaultFormatData
-[TSTTableDataList setRichTextParentInfo:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableDataList.mm
The richTextParentInfo only applied to the Rich Text Payload datalist.
Tables/DataList
-[TSTTableDataList loadFromUnarchiver:]_block_invoke_2
cfWrapper.customFormat
v24@?0@"TSTTableDataObject"8^B16
-[TSTTableDataList p_nextAvailableKey]
-[TSTTableDataList wrappedObjectForPayload:]
Custom Format datalists are obsolete and should never be added to!
-[TSTTableDataList p_setPayload:atSuggestedKey:callWillModify:]
No object with key %u in %{public}@ datalist!
-[TSTTableDataList enumerateFormatsUsingBlock:]
Can't enumerate formats on a non-format list!
-[TSTTableDataList enumerateLegacyCustomFormatsUsingBlock:]
Can't enumerate custom formats on a non-custom format list!
-[TSTTableDataList repairStyleDatalistStylesheetIfNecessary]_block_invoke
Expected new style to be in the document stylesheet
-[TSTTableDataList takeReferences:forKey:callWillModify:]
Cannot add reference for custom format
-[TSTTableDataList dropReferences:forKey:callWillModify:]
custom format should not have more than one reference
Comment
Conditional Style
Custom Format
Format
Formula
ControlCellSpec
Formula Error
Import Warning
Multiple Choice List
Rich Text
String
Style
-[TSTTableDataList(Type_Specific_API) allRichTextStorages]
API is intended for kTSTTableDataListTypeRichText lists
-[TSTTableDataList(Type_Specific_API) allRichTextStorages]_block_invoke
richTextObject
richTextObject.richTextStorage
-[TSTTableDataList(Type_Specific_API) containsControlCellSpecs]
API is intended for kTSTTableDataListTypeFormat lists
-[TSTTableDataList(Type_Specific_API) containsFormulas]
API is intended for kTSTTableDataListTypeCellSpec lists
-[TSTTableDataList(Type_Specific_API) replaceCustomFormatsWithBlock:]
This reassign code is for the Format list only.
@"TSKCustomFormatWrapper"16@?0@"TSKCustomFormatWrapper"8
-[TSTTableDataList(Type_Specific_API) cellFormatForKey:]
Can only store formats in this list!
-[TSTTableDataList(Type_Specific_API) commentStorageForKey:]
Can only store cell comment storage objects in this list!
-[TSTTableDataList(Type_Specific_API) conditionalStyleSetForKey:]
Can only store conditional styles in this list!
-[TSTTableDataList(Type_Specific_API) formulaForKey:]
Can only store formulas in this list!
-[TSTTableDataList(Type_Specific_API) controlCellSpecForKey:]
Can only store controls in this list!
-[TSTTableDataList(Type_Specific_API) formulaErrorForKey:]
Can only store formulaErrors in this list!
-[TSTTableDataList(Type_Specific_API) importWarningSetForKey:]
Can only store import warning set objects in this list!
-[TSTTableDataList(Type_Specific_API) multipleChoiceListFormatForKey:]
Can only store pop up menu model in this list!
-[TSTTableDataList(Type_Specific_API) richTextForKey:]
Can only store text storages in this list!
-[TSTTableDataList(Type_Specific_API) stringForKey:]
Can only store strings in this list!
-[TSTTableDataList(Type_Specific_API) stringForKey:shouldWrap:]
-[TSTTableDataList(Type_Specific_API) styleForKey:]
Can only store styles in this list!
-[TSTTableDataList(Upgrade) upgradeCellFormatsU2_0]
This upgrade code is only for the Format list.
-[TSTTableDataList(Upgrade) upgradeCellFormatsU2_0]_block_invoke
-[TSTTableDataList(Upgrade) upgradeConditionalStylesToLinkedRefWithTableUID:]
This upgrade is for conditional style only.
v24@?0I8I12^B16
[%lu,%lu]
(%lu x %lu)
q24@?0@8@16
table
tableStyle
+[TSTTableStyle propertiesAllowingNSNull]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableStyle.mm
+[TSTTableStyle nonEmphasisTableProperties]_block_invoke
-[TSTTableStyle validate]
orphaned table style %@
Table style not in its stylesheet
-[TSCENilCellValue compareToCellValue:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCENilCellValue.mm
-[TSTArchivedCellSelection selection]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTArchivedCellSelection.mm
Call selectionWithParent:
-[TSTArchivedCellSelection selectionWithParent:]
tableInfo
-[TSTArchivedCellSelection setSelection:]
Wrong type of class %@ (expected TSTCellSelection)
<%@: %p> %@
%@ for column %@ at level %lu with show as type %lu %@
(running total on: %@)
-[TSCEStringCellValue initWithString:locale:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEStringCellValue.mm
Creating a TSCEStringCellValue with a nil string.
str_
-[TSCEStringCellValue compareToCellValue:]
-[TSCEStringCellValue encodeToArchive:]
Avoid using nil to mean empty string in a TSCEStringValue, string is: %@
v24@?0^{TSCEASTNodeArray=*QQB}8^{TSCEASTNodeArgInfo=i[3i]{TSKUIDStruct=QQ}{TSUCellCoord=ISBB}}16
TSCEFormulaCreator TSCEFormulaCreationMagic::array(uint8_t, uint16_t, TSCEFormulaCreator, TSCEFormulaCreator, TSCEFormulaCreator)_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulaCreator.mm
Need 3 elements here
v16@?0^{TSCEASTNodeArray=*QQB}8
TSCEFormulaCreator::TSCEFormulaCreator(std::nullptr_t)
Passing NULL as an arg to TSCEFormulaCreator() - it doesn't like that
void TSCEASTNodeArray::write(const T &) [T = unsigned long]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTNodeArray.h
_nodeArray
NSString *localizedModeName(TSCEStockAttribute, TSCEFunctionSpec *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERemoteDataFunctions.mm
Unexpected function %@!
%@%@=X
TSCEValue evaluateCurrencyFunction(TSCEEvaluationContext &, TSCEFunctionSpec *__strong)
Failed to transform date %@ for CURRENCYH function!
TSCEValue evaluateStockFunction(TSCEEvaluationContext &, TSCEFunctionSpec *__strong)
Failed to transform date %@ for STOCKH function!
v16@?0@"TSPLazyReference"8
B24@?0r^v8r^v16
-[TSTTableTileStorage _upgradeFromTileIDMap:referenceMap:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableTileStorage.mm
Tile upgrade can't find tile for ID %tu!
error
Fatal Assertion failure: %{public}s %{public}s:%d Failed to load a table tile during upgrade: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
recoverable=YES, 
Failed to load a table tile during upgrade: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
v32@?0@"TSPLazyReference"8Q16^B24
-[TSTTableTileStorage saveToStorageArchive:treeArchive:archiver:]
Unexpected categories feature version in TSTTableTileStorage.
v28@?0@"TSTTableTile"8I16^B20
-[TSTTableTileStorage setShouldUseWideRows:]
v20@?0@"TSTTableTile"8I16
Fatal Assertion failure: %{public}s %{public}s:%d Bad tile group index!
-[TSTTableTileStorage _groupForTileID:]
Bad tile group index!
-[TSTTableTileStorage _tileForID:createIfMissing:]
tile
v32@?0@"TSTTableTile"8Q16^B24
v24@?0@"TSTTableTileGroup"8^B16
-[TSTTableTileStorage _clearContentAtIndex:count:]
Corrupt tile map during clear!
-[TSTTableTileStorage _shiftRowsDownAtIndex:count:]
Tile insertion got confused!
-[TSTTableTileStorage _insertRowsAtIndex:count:]
Should only have whole-tile moves left in insert!
Corrupt tile map during insert!
Fatal Assertion failure: %{public}s %{public}s:%d Lost track of deletion start point!
-[TSTTableTileStorage _removeRowsAtIndex:count:]
Lost track of deletion start point!
Fatal Assertion failure: %{public}s %{public}s:%d Lost track of tiles during delete!
Lost track of tiles during delete!
Corrupt tile map during delete!
Fatal Assertion failure: %{public}s %{public}s:%d Tile should be empty during delete!
Tile should be empty during delete!
Fatal Assertion failure: %{public}s %{public}s:%d Shifting tiles too far during delete!
Shifting tiles too far during delete!
Fatal Assertion failure: %{public}s %{public}s:%d We removed too many rows during delete!
We removed too many rows during delete!
Shift too big during delete!
v32@?0^v8Q16^B24
TSTTilesCat
-[TSTTableTileStorage moveRowIndexRange:toIndex:]
Move row ranges cannot overlap!
v32@?0q8q16^B24
-[TSTTableTileStorage populatedRows]_block_invoke
Fatal Assertion failure: %{public}s %{public}s:%d Corrupt tile ID set!
-[TSTTableTileStorage lastPopulatedRowIndex]_block_invoke
Corrupt tile ID set!
RowInfo Cell Count Audit
Tile ID %lu, firstRow:%d
Tile Overlap Audit
-[TSTTableTileStorage auditTilesForRowOverlapAndExtensionPastTableBounds:withDataStore:result:]_block_invoke
Expected non-empty tile.
Tile with rows %d-%d overlaps with previous tiles in the table.
TileLastRow:%d tileMaxColumn:%d extends beyond tableModelLastRow:%d lastColumn:%d
v28@?0^{TSTCellStorage=}8S16^B20
-[TSTTableTileStorage prepareToApplyConcurrentCellMap:]_block_invoke
@"TSUPair"12@?0I8
TSKUIDStruct TSTUidApplyingAggregateIndex(const TSKUIDStruct &, NSUInteger)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTUIDTypes.mm
aggregateIndex * 2 had better fit in a UInt8
static TSKUIDStruct TSTUidGenerator::newUID(const char *, const char *, bool)
Not expecting null pointers here
Fatal Assertion failure: %{public}s %{public}s:%d Bad header bucket index for creation: %u
-[TSTTableHeaderStorage _allocateBucketsForIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableHeaderStorage.mm
Bad header bucket index for creation: %u
Fatal Assertion failure: %{public}s %{public}s:%d Can't be missing the first bucket!
Can't be missing the first bucket!
Fatal Assertion failure: %{public}s %{public}s:%d Asked to create buckets when we've already done so!
-[TSTTableHeaderStorage _allocateBuckets]
Asked to create buckets when we've already done so!
-[TSTTableHeaderStorage _bucketForIndex:]
Unexpected header bucket index: %u!
-[TSTTableHeaderStorage initFromArchive:unarchiver:owner:]
Don't know how to handle this bucket hash function!
-[TSTTableHeaderStorage initFromArchive:unarchiver:owner:]_block_invoke
Bad header bucket count!
Fatal Assertion failure: %{public}s %{public}s:%d Bad bucket count during archiving!
-[TSTTableHeaderStorage encodeToArchive:archiver:]
Bad bucket count during archiving!
-[TSTTableHeaderStorage shiftIndexesForwardAtIndex:count:]
Headers spilled out of our last bucket during shift!
-[TSTTableHeaderStorage shiftIndexesBackAtIndex:count:]
Headers spilled below zero!
Fatal Assertion failure: %{public}s %{public}s:%d Move ranges cannot overlap!
-[TSTTableHeaderStorage moveIndexRange:toIndex:]
Move ranges cannot overlap!
<%@:%p index %lu baseCol %u rules %@
-[TSTTableHeaderStorageBucket initWithContext:bounds:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableHeaderStorageBucket.mm
Can't initialize a bucket with a bad range!
v32@?0@"TSTTableHeaderInfo"8Q16^B24
Fatal Assertion failure: %{public}s %{public}s:%d Index out of range for bucket!
-[TSTTableHeaderStorageBucket _makeHeaderAtIndex:]
Index out of range for bucket!
-[TSTTableHeaderStorageBucket shiftIndexesBackAtIndex:count:]
Can't shift indexes below zero!
-[TSTTableHeaderStorageBucket headerAtIndex:]
-[TSTTableHeaderStorageBucket setHeader:atIndex:]
Tables/HeaderStorageBucket
-[TSTTableHeaderStorageBucket(Archiving) loadFromUnarchiver:]
Fatal Assertion failure: %{public}s %{public}s:%d Cached style count was wrong!
-[TSTTableHeaderStorageBucket(Archiving) saveToArchiver:]
Cached style count was wrong!
-[TSCELogicalTest initWithCriterion:functionSpec:evaluationContext:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCELogicalTest.mm
type not handled: %d
<%@: %p>: operation: %d value: %@ string: %@ date: %@ -> cost: %lu
<%@: %p>
[%lu]: %@
-[TSCEAbstractGrid deepType:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEAbstractGrid.mm
TSCEAbstrctGrid subclasses must override
-[TSCEAbstractGrid dimensions]
-[TSCEAbstractGrid valueAtGridCoord:accessContext:]
-[TSCEAbstractGrid valueAtIndex:accessContext:]
-[TSCEAbstractGrid count]
-[TSCEAbstractGrid subGridValueAtGridCoord:width:height:accessContext:]
TSCEAbstractGrid subclasses must override
-[TSCEAbstractGrid newCorrespondingAST:argIndex:bakeReferences:evaluationContext:]
too many arguments to fit in a node!
-[TSCEAbstractGrid value]
v24@?0@"TSTLayoutSpace"8^B16
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTLayout.mm
CGRect TSTLayoutGetCanvasFrame(TSTLayout *__strong)
Passing in a nil layout to TSTLayoutGetCanvasFrame.
{CGRect={CGPoint=dd}{CGSize=dd}}32@?0@"TSTLayoutSpace"8{?={?=II}{?=II}}16
v24@?0{?={?=II}{?=II}}8
@"TSUBezierPath"16@?0@"NSArray"8
v40@?0Q8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16^B32
-[TSTLayout p_spillRangeForMaskingRichTextLayout:]
alignment should have already been resolved
-[TSTLayout p_prepareAttachmentCellsIfNeeded]_block_invoke_2
cell
iterator should return a valid cellID
storage should be nil since iterator is searching with TSTCellIteratorSearchForRichText
v24@?0@"TSWPStorage"8^B16
v32@?0@"TSTWPLayout"8Q16^B24
-[TSTLayout positionForColumnIndex:bodyWidth:target:outWidth:outGap:]
created an undersized column
-[TSTLayout naturalAlignmentForCellID:]
Contained text editing layout but invalid editing cell ID?
-[TSTLayout p_cellIDForWPLayout:]
TSTLayout should only parent layouts for editing text or cells with inline attachments!
-[TSTLayout maxAutoGrowLineWidthForTextLayout:]
should only be asking max width for unwrapped rich layouts
-[TSTLayout p_computeSpillingTextFrameForEditingLayout:textSize:editingSpillRange:]
B24@?0@"TSTLayout"8^B16
-[TSTAccumulator valueForType:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTAccumulator.mm
%@ does not handle TSCEAggType_StDev/_VAR/_CountDistinct request - a higher level should have handled that
%@ does not handle TSCEAggType_GroupValue/_BodyRows/_Indirect request - a higher level should have handled that
v32@?0@"TSTColumnAggregate"8Q16^B24
-[TSCEReferencesToDirty setCalculationEngine:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEReferencesToDirty.mm
-[TSCEReferencesToDirty dirtyAllCellsInOwner:]
depTracker
-[TSCEReferencesToDirty dirtyRangeRef:]
v32@?0r^{TSKUIDStruct=QQ}8r^v16^B24
B8@?0
TSCEErrorValue (type %d %@)
-[TSTRefNamer nameForBaseTractRef:namingContext:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTRefNamer.mm
baseString
v24@?0r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}8^B16
-[TSTRefNamer nameForViewTractRef:namingContext:coordMapper:]_block_invoke
viewString
%@::
Categories
Body
 (%@)
%@<%p>: %@
-[TSCENamedReferenceManager initWithContext:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCENamedReferenceManager.mm
use initWithContext:calculationEngine: instead
v16@?0@"TSCETrackedReferenceStore"8
-[TSCENamedReferenceManager setFormulaOwnerUID:]
Invalid formulaOwnerUID
-[TSCESumAccumulator addValue:function:evaluationContext:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCESumAccumulator.mm
Shouldn't get a nil date from something that says it's a date
com.apple.Numbers.TST.PivotCellSetter
(blank)
CellDiffArray
-[TSCECoordMapper chromeTractRefForViewTractRef:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECoordMapper.mm
Not able to find valid indexes
Wasn't expecting this to be possible with valid input
v16@?0I8I12
-[TSTStrokeSidecar initForUpgradeWithTableModel:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTStrokeSidecar.mm
No usable root style in the document stylesheet or the deprecated theme stylesheet. Dropping the cell style on the floor.
v16@?0{TSUModelCellCoord={TSUCellCoord=ISBB}}8
v56@?0{TSTSimpleRange=qQ}8@"TSDStroke"24i32@"TSDStroke"36i44^B48
-[TSTStrokeSidecar flattenStrokeOrder]
left and right column stroke count should be identical
top and bottom row stroke count should be identical
v44@?0@"TSDStroke"8{TSTSimpleRange=qQ}16i32^B36
v24@?0@"NSArray"8@"NSPointerArray"16
-[TSTStrokeSidecar saveToArchiver:]
top and bottom stroke run arrays have different counts
left and right stroke run arrays have different counts
-[TSTCellRangeCache clear]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellRangeCache.mm
Clear with a BitGridTransaction open
v32@?0r^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16^B24
v32@?0{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8^B24
v40@?0Q8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16^B32
-[TSTCellRangeCache mergedGridIndicesForDimension:]
Invalid table dimension
-[TSTLayoutSpace invalidateCoordinatesForEditingCellID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTLayoutSpace.mm
Invalidating for an editing cell range that is not a single logical cell.
-[TSTLayoutSpace nearestRangeForLayoutRect:]
Failed to get nearest cell range from space %@ for layout rect %{public}@
-[TSTLayoutSpace frameForTableNameBorder]
this API is intended to run on the main space
-[TSTLayoutSpace strokeFrameForTableNameBorder]
-[TSTLayoutSpace alignedStrokeFrameForTableNameBorder]
WARNING: vertical stroke ( %f %@ => %@ ) length <= 0.0
WARNING: horizontal stroke ( %f %@ => %@ ) length <= 0.0
v48@?0@"TSDStroke"8{TSTSimpleRange=qQ}16i32i36^B40
-[TSTLayoutSpace validateCoordinateCache:]
There are no column coordinates
-[TSTCoordinateArray setTableWidthForRightToLeft:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCoordinateArray.mm
Setting a table width on a LTR coordinate array has no effect.
CGFloat TSTCoordinateArrayGetCoordinate(TSTCoordinateArray *__strong, TSTGridIndex)
coordinateArray
CGFloat TSTCoordinateArrayGetRawCoordinate(TSTCoordinateArray *__strong, TSTGridIndex)
<%@ %p offset=%u average=%f
 coordinates={empty}>
 coordinates={
  { offset=%u -> coordinate=%f }
-[TSCECellDirtier dirtyNewCellRef:forSeconds:fromStartTime:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECellDirtier.mm
%p Still working on dirtying: %@
igami
%d, 
(%@ %@ %@)
(%@)
(%@%@)
%@,%@
%@(%@)
NSString *TSCEASTDescriptionIterator::prettyDescription()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTDescriptionIterator.mm
Should only have one argument on _argStack at this point, the final result. ArgStack: %@
virtual TSCEASTElement *TSCEASTDescriptionIterator::binaryInfixOperatorNode(TSCEASTBinaryElement *)
Unknown operator tag: %d
op- 
op+ 
virtual TSCEASTElement *TSCEASTDescriptionIterator::unaryOperatorNode(TSCEASTUnaryElement *, BOOL)
((%@)%%)
%@{%i args, ws:'%@'} 
%@{%i args} 
unknownFunction: %@{%i args} 
[: %@]
Unexpected refType: %@
v24@?0r^{TSCEAnyRef=S{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}{TSKUIDStruct=QQ}B@}8^B16
%@::%@:%@
[%@]
<error in colonTractNode() - got nil>
virtual TSCEASTElement *TSCEASTDescriptionIterator::colonTractNode(TSCEASTColonTractElement *)
Why would this happen?
%@{%@}
<#REF! VTR>
ViewTractRef(%@ Preserve:%u) 
"%@"
"%@" 
unit;%lf
unit; %lf
<empty>
<empty> 
<token>
token 
array; cols:%d rows:%d 
%@; %@
{%@ %@}
<list, len:%d>
list; length:%d 
thunk[
let %@ = %@ in
<%@>
(var %u)
virtual TSCEASTElement *TSCEASTDescriptionIterator::anyReferenceNode(TSCEASTRelativeCoordRefElement *)
We shouldn't actually reach here - the tag indicates this reference is valid or spanning
#REF!
%@%@%@%@
[%@%@]
[%@%@, %@%@]
append ws: '%@'
prepend ws: '%@'
#REF! 
#REF(%@%@, %@:: %@)! 
#REF(%@%@, %@)! 
linkedCellRef(%@) 
linkedColumnRef(%@) 
linkedRowRef(%@) 
UidRef(%@ Preserve:%u) 
%@::%@ 
virtual NSString *TSCEDateValue::string(TSCEFunctionSpec *__strong, int, TSULocale *__strong) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEDateValue.mm
dateFormat.customFormat.defaultFormatData
<%@ %p>: expressionNode:%@, parenNestingLevel:%lu argumentIndex:%lu
-[TSCEFormulaObject initWithNodeArray:translationFlags:hostTableUID:hostColumnUID:hostRowUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulaObject.mm
Can only set hostCellUID on uid-form formula
-[TSCEFormulaObject evaluateWithContext:]
Uncaught exception: %{public}@
-[TSCEFormulaObject copyByRewritingForTranspose:calcEngine:containingCell:outTransposeWarning:]
Expect rewriteSpec -willModifyTable: (or variant) to have been called before rewriting formulas.
Expect rewriteSpec -didModifyTable: (or variant) to have been called before rewriting formulas.
-[TSCEFormulaObject copyByRewritingWithSpec:calcEngine:containingCell:]
Warning, no rewriter created for this formula rewrite type (yet).
-[TSCEFormulaObject copyBySettingHostTableUID:hostColumnUID:hostRowUID:]
-[TSCEFormulaObject copyByRewritingReferencesToUidForm:]
preserveHostCell requested, but resolverTableUID %@ not found
-[TSCEFormulaObject copyByRewritingReferencesToGeometricForm:]
Over-riding hostTableUID for %@
conditional style
=__CHART(
+[TSCEFormulaObject parseFormula:calcEngine:unqualifiedReferenceTableUID:containingCell:outError:outNeedsImportRewrite:isChartFormula:isSageUpgrade:]
Only chart formulas should start with the chart prefix.
formula string does not start with =
TSCEThreadAllocatorKey
invalid symbol
-[TSTVariableNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTVariableNode.mm
Unexpected object in initAsCopyOf:... expected TSTVariableNode, got %@
invalid symbol in copy
invalid symbol in setter
-[TSTVariableNode insertFormulaText:includeWhitespace:]
NumberNode shouldn't have any children
-[TSTVariableNode buildASTNodeArray:hostCell:symbolTable:]
VariableNode shouldn't have any children
void TSTCellRegionGathererMap::joinAndAddRange(TSTCellRange, NSUInteger)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellRegionGatherer.mm
_cellRanges does not match encodedCoordToCandidateIndexMap
v24@?0{TSTCellRegionGathererKey=QI}8
TSUCellRect TSUMakeCellRectFromNSRanges(NSRange, NSRange)
Invalid column range
Invalid row range
TSCEASTElement *TSCEASTRewriter::loadAsTree()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTRewriter.mm
An incomplete node needs one argument - the root of the thunk expression
Not enough arguments for let node
%d is not a valid node tag, seen at offset: %lu, seen in %{public}@
virtual void TSCEASTRewriter::rewrite()
_symbolTable
void TSCEASTIteratorBase::willModify()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTIteratorBase.h
Attempting to modify an iterator marked as readOnly.
void TSCEASTNodeArray::writeBytes(const uint8_t *, size_t)
%@ group-by: %@ for column: %@
-[TSTTableStylePreset setStyleNetwork:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableStylePreset.mm
styleNetwork
-[TSTTableStylePreset presetID]
No valid preset ID
-[TSTTableStylePreset initWithStyleNetwork:]
-[TSTTableStylePreset initWithContext:]
Should always be intialized with a network and an ID
-[TSTTableStylePreset drawSwatchInRect:inContext:]
_styleNetwork
-[TSTTableStylePreset loadFromUnarchiver:]_block_invoke
_tempUpgradePresetID
_styleNetwork.presetID
v16@?0@"TSTTableStyleNetwork"8
-[TSTTableStylePreset saveToArchive:archiver:]
TSCERemoteDataServerStatusChangeNotification
TSCERemoteDataServerStatusChangesKey
TSCERemoteDataServerStatusChangeToOnlineKey
TSCERemoteDataServerStatusChangeToOfflineKey
TSCERemoteDataCat
ask_price.raw
ask_size.raw
avg_3m_volume.raw
beta_coefficient.raw
bid_price.raw
bid_size.raw
change.raw
currency
day_high.raw
day_low.raw
dividend_per_share.raw
dividend_yield.raw
eps.raw
exchange
fiftytwo_week_high.raw
fiftytwo_week_low.raw
market_cap.raw
name
one_year_target.raw
open.raw
pe_ratio.raw
percent_change.raw
prev_close.raw
price.raw
volume.raw
symbol
time.raw
Not Set
Ask Price
Ask Size
Avg 3M Volume
Beta
Bid Price
Bid Size
Change
Currency
High
Annual Dividend
Dividend Yield
Exchange
52 Week High
52 Week Low
Market Cap
Name
One Year Target
Open
P/E Ratio
Percent Change
Close
Price
Volume
Symbol
Time
-[TSCERelativeTractRef addRelativeColumn:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERelativeTractRef.mm
Cannot mix spanning and non-spanning column
-[TSCERelativeTractRef addRelativeRow:]
Cannot mix spanning and non-spanning row
-[TSCERelativeTractRef verifySpanningSettings]
Wrong count
Wrong index present
Invalid seen in non-spanning
No column found, but not marked as spanning
No row found, but not marked as spanning
Should match existing asserts
-[TSCERelativeTractRef relativeTopLeft]
-[TSCERelativeTractRef relativeBottomRight]
Non-spanning ref has %d relative columns
No columns found, but not marked as spanning
Non-spanning ref has %d absolute columns
Non-spanning ref has %d relative rows
No rows found, but not marked as spanning
Non-spanning ref has %d absolute rows
static void TSCERelativeCellCoordinate::assertColumnInMaxRange(TSURelativeColumnIndex)
TSCERelativeCellCoordinate: column outside valid range: %d
static void TSCERelativeCellCoordinate::assertRowInMaxRange(TSURelativeRowIndex)
TSCERelativeCellCoordinate row outside valid range: %d
TSCEValue TSCEComputeSubtraction(TSCEValue, int, TSCEValue, int, TSCEFunctionSpec *__strong, TSCEEvaluationContext *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEAggregateEval.mm
map::at:  key not found
tableName
textStyle
shapeStyle
@"TSSStyle"40@?0@"TSSStyle"8@"NSString"16Q24Q32
+[TSTTableStyleNetwork createStylesInStylesheet:presetID:colors:alternate:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableStyleNetwork.mm
Style network is missing styles. %{public}@
+[TSTTableStyleNetwork networkFromStylesheet:presetID:]
no default table style in stylesheet %p
nameStyle
tableNameShapeStyle
+[TSTTableStyleNetwork networkFromTheme:presetID:]
theme
+[TSTTableStyleNetwork networkFromTheme:presetIndex:]
+[TSTTableStyleNetwork networkWithContext:presetID:styleProvider:tableStyleMorphingBlock:nameStyleMorphingBlock:nameShapeStyleMorphingBlock:cellStyleMorphingBlockByStyleArea:textStyleMorphingBlockByStyleArea:]
All styles are not present and accounted for.
v24@?0Q8Q16
-[TSTTableStyleNetwork initWithContext:styleProvider:presetID:]
Cannot set styles from a different context
-[TSTTableStyleNetwork isEqual:]
Cell style array length mismatch
Cell style array element nillity mismatch at position %zu
Text style array length mismatch
Text style array element nillity mismatch at position %zu
-[TSTTableStyleNetwork setTextStyle:forTableStyleArea:]
Pivot areas use the equivalent default area textStyle. Don't try to set it.
-[TSTTableStyleNetwork loadFromArchive:unarchiver:]_block_invoke
_tableStyle must be nil when loading from an archive
-[TSTTableStyleNetwork loadFromArchive:unarchiver:]_block_invoke_14
_tableNameStyle must be nil when loading from an archive
-[TSTTableStyleNetwork loadFromArchive:unarchiver:]_block_invoke_15
_tableNameShapeStyle must be nil when loading from an archive
sheet-0-sheetStyle
%@, %@
cellID:%u, %u, count:%lu
void TSCEASTNodeArray::resizeCapacity(size_t)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTNodeArray.mm
No nodeArray allocated.
You are going to crash very soon. You have overwritten your node array: %{public}@
resize didn't grow array enough
empty nodeArray
uint8_t _nodeArray[%d] = {
void TSCEASTNodeArrayReader::setOffset(size_t)
Can't set offset above capacity: %lu / %lu
Can't set offset more than one past bytes used, offset: %lu formula: %{public}@
void TSCEASTNodeArrayReader::pushEndPoint(size_t)
We shouldn't be making the array seem larger when pushing a new end-point
void TSCEASTNodeArrayReader::skipIndexSet()
skipIndexSet going off rails, numRanges: %lu for formula: %{public}@
void TSCEASTNodeArray::write(const T &) [T = TSKUIDStruct]
void TSCEASTNodeArray::write(const T &) [T = int]
-[TSTOwnerUidMapper p_recreateUIDs]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTOwnerUidMapper.mm
Check for non subOwner formula UIDs
-[TSTOwnerUidMapper setToUpgradeMapping]
kTSCERecalcLoopGroupEmpty
CalculationEngine
TSCECalculationEngine
TSCENamedReferenceManager
TSCETrackedReferenceStore
TSCETrackedReferenceTSPObjectDeprecated
TSCERemoteDataStore
TSCEFormulaOwnerDependencies
TSCECellRecordTileWrapper
TSCERangePrecedentsTile
TSCEReferencesToDirty
-[TSTTableStrokePresetList setStrokePreset:atIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableStrokePresetList.mm
preset index higher than count
-[TSTTableStrokePresetList initWithArchive:unarchiver:]
invalid preset count
-[TSTTableStrokePresetList horizontalStrokeForStrokePreset:]
illegal preset index
-[TSTTableStrokePresetList verticalStrokeForStrokePreset:]
-[TSTTableStrokePresetList exteriorStrokeForStrokePreset:]
-[TSTTableStrokePresetList maskForStrokePreset:]
-[TSCEFormulaRewriteSpec addCoordMapper:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulaRewriteSpec.mm
Replacing same tableUID with a different coordMapper - expect trouble: %@
 type: %@ %@
(inverse)
 tableUID: %@
Nested rewrites:
   (nested): %@
-[TSCEFormulaRewriteSpec affectedOwnerUID]
Shouldn't ask for the affected owner ID of a move, since there may be two.
Not a meaningful question, there are numerous tables affected
-[TSCEFormulaRewriteSpec affectedConditionalStyleOwnerUID]
Not implemented for these rewrite types.
-[TSCEFormulaRewriteSpec adjustViewTractRef:calcEngine:containingCellRef:undoTractList:]
subclasses must override
-[TSCEFormulaRewriteSpec restoreViewTractRefFromUndoTractList:calcEngine:containingCellRef:]
-[TSCEFormulaRewriteSpec willModifyTable:uidResolver:calcEngine:]
Move region requires the two tables version will/didModifySrcTable:dstTable: be called instead
-[TSCEFormulaRewriteSpec willModifySrcTable:srcUidResolver:dstTable:dstUidResolver:]
Only move region takes two tables
-[TSCEFormulaRewriteSpec didModifySrcTable:dstTable:]
-[TSCEFormulaRewriteSpec didModifyTable:calcEngine:]
Move region requires the two table version didModifySrcTable:dstTable: be called instead
-[TSCEFormulaRewriteSpec affectedRange]
Not implemented yet for this type
Not implemented for this type
Not yet implemented for this type
-[TSCEFormulaRewriteSpec expandedRowColumnUuids]
+[TSCETablesByName containerNameForTable:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCETablesByName.mm
+[TSCETablesByName tableNameForTable:]
%@<%p>:
  ContainerName: '%@' TableName: '%@' Table: %@
v16@?0@"TSSStylesheet"8
-[TSSTheme(TSTArchiving) tstLoadFromArchive:unarchiver:]_block_invoke_2
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSSTheme_TSTArchiving.mm
Preset style network is missing styles when unarchiving. %{public}@
-[TSTExpressionNode exportString]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTExpressionNode.mm
Children of TSTExpressionNode that is tokenized should implement exportString().
v32@?0@"TSTExpressionNode"8Q16^B24
-[TSTExpressionNode recordHashesForSubexpressions:]
subclasses must override recordHashesForSubexpressions so CSE works properly
<%@ %p>: '%@'
-[TSTFormula reparseWithStorage:adjustExpressionTree:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTFormula.mm
Formula storage exceeds maximum length.
'%C%C
'%C%C%C%C
%C%C%C%C%C%C%C%C%C%C%C
+[TSTFormula formulaQuoteContextAtCharIndex:inStorage:]
charIndex %lu not within storage range %@
+-*/^&=><:
%C%C%C%C%C%C%C%C
%C%C%C%C%C%C%C%C%C%C
%C%C%C%C%C
-[TSTFormula p_fixFormula:]
expected a function node with a function start token
expected non-empty storage
expected a function node on the stack
v24@?0@"TSTExpressionNode"8^B16
virtual NSDate *TSCEViewTractRefValue::date(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEViewTractRefValue.mm
Error: couldn't resolve TSCEViewTractRefValue
virtual NSString *TSCEViewTractRefValue::rawString(TSCEFunctionSpec *__strong, int, TSULocale *__strong) const
unsupported
virtual BOOL TSCEViewTractRefValue::boolean(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
virtual TSCERichTextStorage TSCEViewTractRefValue::richTextStorage(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
virtual TSCERichTextStorage TSCEViewTractRefValue::rawRichTextStorage(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
virtual TSCEGrid TSCEViewTractRefValue::formattedGrid(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
virtual TSCENumberValue TSCEViewTractRefValue::number() const
virtual NSDate *TSCEViewTractRefValue::date() const
stdtr
stdtri
+[TSTCellChooserControlSpec cellSpecFromTSKFormat:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellChooserControlSpec.mm
mcFormat
-[TSTCellChooserControlSpec initWithArchive:unarchiver:]
Wrong interaction type for a popup.
v16@?0@"TSTPopUpMenuModel"8
TSCEValue TSCEFunctionArgSpec::valueForModeIndex(short) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFunctionArgSpec.mm
Requesting value for non-mode argument.
Requesting value for out of bounds index.
%C%@_ARGUMENT_%d%C
%@ (%@)
Found duplicate for internal ownerID %@, %d and %d
void TSCEIDMap::loadFromArchive(const TSCE::OwnerIDMapArchive &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEIDMap.mm
Got an invalid ownerUID during loadFromArchive, internalOwnerID: %lu
Repaired duplicate internal formula ownerIDs:
%d -> %d (%@)
TSCEInternalFormulaOwnerID TSCEIDMap::registerUID(TSCEOwnerUID)
new ID %lu is already in use by %@ - attempted reuse by %@
About to overwrite a reference in _uidToInternalIDMap: %d -> %d for ownerUID: %{public}@ in Map: %{public}@
TSCEIDMap:
  %d -> %@
  %d -> <UNREGISTERED>
-[TSTOperatorNode initWithContext:operatorChar:children:firstIndex:lastIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTOperatorNode.mm
Operators should only have 2 children.  There are %lu arguments to operator '%hu'
-[TSTOperatorNode initAsCopyOf:intoContext:children:]
Unexpected object in initAsCopyOf:... expected TSTOperatorNode, got %@
-[TSTOperatorNode insertFormulaText:includeWhitespace:]
OperatorNode doesn't have two arguments
-[TSTOperatorNode buildASTNodeArray:hostCell:symbolTable:]
Operator node doesn't have two arguments
Undefined operator node
virtual TSCEASTElement *TSCEASTRefExtractionIterator::functionNode(TSCEASTFunctionElement *)_block_invoke_2
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTRefExtractionIterator.mm
unhandled case for refType: %d
v28@?0I8@"TSUCustomFormat"12^B20
^%@$
v32@?0@"NSTextCheckingResult"8Q16^B24
-[TSTNumberNode initWithContext:string:locale:firstIndex:lastIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTNumberNode.mm
numberString
-[TSTNumberNode initAsCopyOf:intoContext:children:]
Unexpected object in initAsCopyOf:... expected TSTNumberNode, got %@
-[TSTNumberNode insertFormulaText:includeWhitespace:]
-[TSTNumberNode buildASTNodeArray:hostCell:symbolTable:]
NSString *TSTStringForDouble(double, TSULocale *__strong)
A locale is required here
Warning: Creating brave new cell with value type %@ but mismatched format type %@, repairing
-[TSTCell_PreBNC upgradedBraveNewCell]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCell_PreBNC.mm
-[TSTCell_PreBNC initWithLocale:]
The formula should not begin with an equals sign.
The formula contains a syntax error.
-[TSTCell_PreBNC stringForEditing]
durationFormat
-[TSTCell_PreBNC setCellStyle:clearingID:]
expected cell style got %{public}@
-[TSTCell_PreBNC setTextStyle:clearingID:]
-[TSTCell_PreBNC setConditionalStyle:clearingID:]
expected conditional style got %{public}@
B20@?0@"TSKFormat"8S16
-[TSTCell_PreBNC copyAllFormatsToCell:]
dest
<%@:%p: value type %@ value %@>
No content
Number
DEPRECATED
Date
Bool
Duration
FormulaError
RichText
Cell Spec: 
Value: 
<number: %f>
<rich text: '%@'>
<string: '%@'>
<date: '%@'>
<bool: '%@'>
<duration: %f>
<error>
<unknown cell type>
v24@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8^B16
v32@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8r^{TSKUIDStruct=QQ}16^B24
-[TSTCellMap loadFromUnarchiver:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellMap.mm
serious error: flag out of sync with content.
-[TSTCellMap loadFromUnarchiver:]_block_invoke
creating a one-to-many cell map but starting with more than one cell
-[TSTCellMap saveToArchiver:]
We should never archive shallow copies. That's not what they are for
v32@?0@"TSTCellList"8Q16^B24
-[TSTCellMap cellIDAtIndex:]
cannot examine cellIDs in UID mode
-[TSTCellMap enumerateCellsWithIDsUsingBlock:]
can't enumerate IDs since have UIDs
-[TSTCellMap enumerateCellsWithUIDsUsingBlock:]
can't enumerate by UIDs since have IDs
-[TSTCellMap findCellForCellID:]
cannot use find with a UID based cell map
v40@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8@"TSTCell"16Q24^B32
-[TSTCellMap addCell:andCellUID:]
cannot add UIDs in ID mode
cannot add cells in one-to-many mode
-[TSTCellMap addPrecopiedCells:andCellUIDs:]
Cell and CellUID sizes don't match up
-[TSTCellMap addCell:andCellID:]
Cannot add cellIDs while in UID mode.
-[TSTCellMap replaceCellAtIndex0:]
-[TSTCellMap appendCellMap:precopied:]
Trying to append a cellID cellMap to a uidBased map. Aborting.
Trying to append a uidBased cellMap to a cellID map. Aborting.
-[TSTCellMap p_addPrecopiedCells:]
Shallow copy not supported in this path
-[TSTCellMap p_copyCellsAndUUIDsFromCellMap:convertingToCellIDsWithTableInfo:]
This should only be called with a UID based cell map.
-[TSTCellList cellAtIndex:]
Out of range in  %@
-[TSTCellList replaceCell:atIndex:]
Asking to replace where we currently have no cell at all - invalid replaceCell: call
Should now fit in real range
-[TSTCellList loadFromUnarchiver:]_block_invoke
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::functionNode(TSCEASTFunctionElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTSCEASTNodeExpressionNodeFunction.mm
improper number of arguments for function node.
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::unknownFunctionNode(TSCEASTUnknownFunctionElement *)
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::colonNode(TSCEASTColonElement *)
improper number of arguments for colon node.
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::arrayNode(TSCEASTArrayElement *)
improper number of arguments for array.
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::listNode(TSCEASTListElement *)
improper number of arguments for list node.
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::viewTractRefNode(TSCEASTViewTractRefElement *)
viewTractRef is expected to have an active tract
TSTExpressionNode *TSTTSCEASTNodeExpressionNodeFunction::expressionNode()
Unable to properly create a TSTExpressionNode. Possibly a bad ASTNodeArray?
void TSTTSCEASTNodeExpressionNodeFunction::processOperatorNode(unichar)
improper number of arguments for operator node.
void TSTTSCEASTNodeExpressionNodeFunction::processPostfixOperatorNode(unichar)
improper number of arguments for postfix operator node.
void TSTTSCEASTNodeExpressionNodeFunction::processPrefixOperatorNode(unichar)
improper number of arguments for prefix operator node.
unichar operatorCharForTag(TSCEASTNodeTag)
v40@?0d8{TSTSimpleRange=qQ}16^B32
-[TSTColumnRowUIDMap initWithContext:tableUUID:numberOfRows:numberOfColumns:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTColumnRowUIDMap.mm
tableUUID
-[TSTColumnRowUIDMap insertColumnsWithUIDs:atIndex:]
cannot insert columns at invalid columnIndex
-[TSTColumnRowUIDMap insertRowsWithUIDs:atIndex:]
cannot insert rows at invalid rowIndex
v28@?0I8r^{TSKUIDStruct=QQ}12^B20
v32@?0r^{TSTLookupKeyCoord=I}8Q16^B24
v28@?0S8r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}12^B20
-[TSTImmutableColumnRowUIDMap initWithColumnRowUIDMap:]
@e need to ensure versionCounter was preserved
gamma
lgam
-[TSTCategoryOwner setTableModel:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCategoryOwner.mm
tableModel
%@<%p> (on table %@)
-[TSTCategoryOwner registerWithCalcEngine:baseOwnerUID:]
Already registered with calcEngine
GroupBy shouldn't be registered yet.
-[TSTCategoryOwner registerGroupByForColumns:ownerIndex:hiddenStates:groupBySet:]
Bad ownerIndex (%d) for groupBy
If ownerIndex matches up, then so should groupByUid
-[TSTCategoryOwner updateWithDocumentRoot:]
TSTPivotTables_v2
%@ @ %@
-[TSTAggNode encodeToArchive:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTAggNode.mm
Not expecting an invalid coord here
NSInteger StockAttributeFromString(NSString *__strong, NSUInteger, NSString *__strong, NSInteger, TSULocale *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERemoteDataModeUtility.m
documentLocale
-[TSTFunctionNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTFunctionNode.mm
Unexpected object in initAsCopyOf:... expected TSTFunctionNode, got %@
-[TSTFunctionNode buildASTNodeArray:hostCell:symbolTable:]
Remote Data Coordinator
-[TSCERemoteDataCoordinator registerStore:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERemoteDataCoordinator.mm
%@ is already registered!
-[TSCERemoteDataCoordinator unregisterStore:]
%@ is not registered
-[TSCERemoteDataCoordinator p_fetcherForDataKind:]
No configured fetcher for this data kind!
-[TSCERemoteDataCoordinator addRemoteDataInterest:forStore:]_block_invoke
Unclaimed specifiers after register!
^IXIC
^NYA
^FTSE
^FTAS
^FTAI
^FCHI
^GDAXI
^AXJO
^AORD
^ATX
^BFX
^BVSP
^GSPTSE
000001.SS
399001.SZ
OMXC20.CO
^OMXH25
^HSI
^NSEI
^BSESN
^JKSE
^ISEQ
^IETP
T25.TA
^TA100
FTSEMIB.MI
^N225
^KLSE
^MXX
^AEX
^NZ50
^OSEAX
RTS.RS
^STI
^KS11
^IBEX
^OMX
^SSMI
^TWII
^DJI
AAPL
SBUX
-[TSCERemoteDataCoordinator p_dataSourceFetcherForRemoteData:]
No matching remote data source fetcher for %@
-[TSCERemoteDataCoordinator p_removeRemoteDataInterest:forStore:]
Unclaimed specifiers after unregister!
-[TSCERemoteDataCoordinator isOnlineForDataKind:]
No status for this data kind!
v32@?0@"NSString"8@"TSCEStock"16^B24
-[TSCERemoteDataCoordinator sourceFetcherDidUpdate:withValues:quotes:]_block_invoke_2
Unexpected changes!
-[TSTLetNode initWithContext:children:firstIndex:lastIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTLetNode.mm
Let nodes should have exactly 0 or 3 children.  There are %lu arguments to let
A let node's first child must be an identifier.
-[TSTLetNode initAsCopyOf:intoContext:children:]
variable %u
-[TSTLetNode setChildren:]
let nodes must have zero or three children
-[TSTLetNode boundSymbol]
identifier is not of proper type: %@
-[TSTLetNode copyByResolvingIdentifiers:hostTable:baseHostCell:forceReferenceInterpretation:symbolTable:oldToNewNodeMap:]
Let nodes must have exactly zero or three children
-[TSTLetNode addAllIdentifiersToSymbolTable:]
Let nodes must have exactly three children
-[TSTLetNode insertFormulaText:includeWhitespace:]
Let node doesn't have three arguments
-[TSTLetNode buildASTNodeArray:hostCell:symbolTable:]
-[TSTSummaryModel resetForPivotingWithRowUids:columnUids:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTSummaryModel.mm
Resetting a categories summary model for pivoting
-[TSTSummaryModel resetForCategoriesWithForce:]
Resetting a pivoting summary model for categories
-[TSTSummaryModel resetForCategoriesWithForce:]_block_invoke_2
we should have a valid coordinate
v24@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8@"TSTCell"16
v16@?0@"TSTSummaryCellVendor"8
-[TSTSummaryModel p_setPivotCell:atCellUID:formulaReplacer:]
Attempting to set cell at illegal summary model cell UID:%{public}@
-[TSTSummaryModel allRichTextStorages]
TODO
-[TSTSummaryModel heightOfRowAtIndex:isDefault:]
Individual row heights can only be used for pivot tables.
-[TSTSummaryModel widthOfColumnAtIndex:isDefault:]
Individual column widths can only be used for pivot tables.
-[TSTSummaryModel setHeight:ofRowAtIndex:]
-[TSTSummaryModel setWidth:ofColumnAtIndex:]
-[TSTSummaryModel setLabelRowVisibility:atCategoryLevel:]
-[TSTSummaryModel willRemoveGroup:]
GroupBy tried to remove a summaryRow that doesn't exist in the summaryModel.
+[TSTSummaryModel categoryLevelForTableStyleArea:]
Calling categoryLevelForTableStyleArea with an invalid style area
v16@?0@"TSTCellMap"8
+[TSTCellToggleControlSpec cellSpecFromTSKFormat:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellToggleControlSpec.mm
Expected checkbox format.
-[TSTCellToggleControlSpec initWithArchive:unarchiver:]
Wrong interaction type for a checkbox.
-[TSTStrokeOrderedLayer initWithContext:majorStrokeLayer:minorStrokeLayer:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTStrokeOrderedLayer.m
majorStrokeLayer
minorStrokeLayer
-[TSTStrokeOrderedLayer appendStroke:inRange:order:]
-[TSTStrokeOrderedLayer insertStroke:inRange:order:]
-[TSTStrokeOrderedLayer invalidate]
-[TSTStrokeOrderedLayer invalidateRange:]
-[TSWPStorage(TSTAdditions) tst_selectionForImplicitlyEditingWithFormatType:percentSymbol:currencySymbol:adjustSelectionForCurrencyOrPercentSymbols:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSWPStorage+TSTAdditions.mm
currencySymbol
-[TSWPStorage(TSTAdditions) tst_tableInfo]
parentInfo of a TSWPKindTable TSWPStorage must be a TSTTableInfo
-[TSWPStorage(TSTAdditions) rangeForCellID:includingBreak:]
cell attribute not found
TSCEEvaluationContext::TSCEEvaluationContext(TSCECalculationEngine *__strong, const TSCEOwnerUID &, TSUCellCoord)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEEvaluationContext.mm
Didn't get a calc engine
void TSCEEvaluationContext::runBlockUnlessAborted(__strong dispatch_block_t)
failed to create dispatch group
static NSDate *TSCEEvaluationContext::newDateConversionOfString(NSString *__strong, TSCEEvaluationContext *)
Should not have reached this point with a NULL context - you are lucky you are getting any date at all.
TSCEValue TSCEFunction_MULTINOMIAL::evaluateWithContext(TSCEEvaluationContext &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEMathTrigFunctions.mm
MULTINOMIAL accepts nonnegative arguments only.
v32@?0@"TSCETrackedReference"8Q16^B24
v16@?0@"TSCETrackedReference"8
TSTWPTokenAttachment *TSTLexer::nextTokenAttachment()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTLexerAdditions.mm
No more tokenAttachments.
tokenAttachment
virtual TSCEASTElement *TSTTrackingRangeExtractor::anyReferenceNode(TSCEASTRelativeCoordRefElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTrackingRangeExtractor.mm
Too many coordinates in tracking range!
tracking region should not yet be initialized
+[TSTFormulaPredArgData getPredArgDataFromCell:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTFormulaPredArg.mm
predArgData
-[TSTFormulaPredArgData string]
Wrong data type for call: %d
-[TSTFormulaPredArgData date]
-[TSTFormulaPredArgData number]
-[TSTFormulaPredArgData doubleValue]
-[TSTFormulaPredArgData boolValue]
-[TSTFormulaPredArgData durationValue]
-[TSTFormulaPredArgData durationUnits]
-[TSTFormulaPredArgData duration]
-[TSTFormulaPredArg boolValue]
Wrong type accessor called on %@
-[TSTFormulaPredArg setBoolValue:]
-[TSTFormulaPredArg number]
-[TSTFormulaPredArg setNumber:]
-[TSTFormulaPredArg preserveFlags]
-[TSTFormulaPredArg setPreserveFlags:]
Must set the entire relative reference, if you are relative
-[TSTFormulaPredArg date]
-[TSTFormulaPredArg setDate:]
-[TSTFormulaPredArg string]
-[TSTFormulaPredArg setString:]
-[TSTFormulaPredArg dataList]
-[TSTFormulaPredArg relativeCellRef]
Asking for a relative cell-ref, but we don't have one
-[TSTFormulaPredArg setRelativeCellRef:]
-[TSTFormulaPredArg crossTableRef]
Need a host-cell if we aren't storing a relativeRef
-[TSTFormulaPredArg categoryRef]
-[TSTFormulaPredArg viewTractRef]
-[TSTFormulaPredArg baseCellRef]
-[TSTFormulaPredArg cellRefForHostCoord:]
-[TSTFormulaPredArg setBaseCellRef:]
-[TSTFormulaPredArg durationValue]
-[TSTFormulaPredArg setDurationValue:]
-[TSTFormulaPredArg durationUnits]
-[TSTFormulaPredArg duration]
-[TSTFormulaPredArg setDurationUnits:]
-[TSTFormulaPredArg rewriteWithContext:forArgAt:usingLinkedRef:useColumnRef:hostCellRef:rewriteBlock:]
Not expecting no result
-[TSTFormulaPredArg formulaCreatorForPredArg]
Need a host-cell for this
-[TSTFormulaPredArg formulaCreatorForPredArg0UsingLinkedRef:useColumnRef:]
Only references types are supported for predArg0, saw %d
-[TSTHiddenStatesOwner hiddenStates]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTHiddenStatesOwner.mm
We should only have one hiddenStates per table, at the moment
%@<%p>(on table %@)
 Hidden States:
  - %@
-[TSTHiddenStatesOwner registerHiddenStates:baseOwnerUID:]
HiddenStates couldn't register with calc-engine
%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X
TSCEOwnerUID TSCESubFormulaOwnerID::formulaOwnerUIDForBaseUIDAndSubownerIndex(const TSCEOwnerUID &, TSCESubFormulaOwnerIndex)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCETypes.mm
OwnerIndex %d doesn't correspond to a subFormulaOwner
TSUCellCoord TSCEMakeAbsoluteCellCoordinateFromRelativeCellCoordinate(TSUCellCoord, TSCERelativeCellCoordinate, const TSUPreserveFlags &)
Wrong sticky setting
tableUID: %@
%@ %@ couldBeIntersection: %@
(include headers)
%@::(%@%d,_)
%@::(_,%@%d)
%@::(%@%d,%@%d)
aggType=%d
-[TSTBooleanNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTBooleanNode.mm
Unexpected object in initAsCopyOf:... expected TSTBooleanNode, got %@
true
false
-[TSTBooleanNode insertFormulaText:includeWhitespace:]
BooleanNode shouldn't have any children
-[TSTBooleanNode buildASTNodeArray:hostCell:symbolTable:]
rewriteType=%d
-[TSCEFormulaRewrite_Uids initWithUids:atIndexes:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulaRewriteInfo_RowColumnInfo.mm
Size mismatch for our vectors
-[TSCEFormulaRewrite_Uids containsIndex:]
The %{public}@ API requires -[%{public}@ loadIndexesForTable:] be called first.
-[TSCEFormulaRewrite_Uids rowIndexForUid:]
Warning, %{public}@ did not find the uuid: %@
-[TSCEFormulaRewrite_Uids columnIndexForUid:]
Uids: %@
Indexes: %@
-[TSCEFormulaRewriteInfo_RowColumnInfo saveToMessage:]
Cannot archive until we have called loadIndexesForTable
-[TSCEFormulaRewriteInfo_RowColumnInfo offsetForRowIndex:]
-[TSCEFormulaRewriteInfo_RowColumnInfo offsetForUpdatedRowIndex:isRemoveRows:]
This should be the same offset, then, right
-[TSCEFormulaRewriteInfo_RowColumnInfo updatedCellRefForRewriteType:originalCellRef:]
Not implemented for this rewrite type
Should not see this call, we should get either the insert or remove rewrite types
Should not see this call, its more complex than that
-[TSCEFormulaRewriteInfo_RowColumnInfo originalCellRefForRewriteType:updatedCellRef:]
-[TSCEFormulaRewriteInfo_RowColumnInfo indexIsAffected:]
-[TSCEFormulaRewriteInfo_RowColumnInfo uuidForIndex:]
-[TSCEFormulaRewriteInfo_RowColumnInfo columnIndexForUuid:]
-[TSCEFormulaRewriteInfo_RowColumnInfo rowIndexForUuid:]
-[TSCEFormulaRewriteInfo_RowColumnInfo rowOrColumnIndices]
-[TSCEFormulaRewriteInfo_RowColumnInfo tableRange]
-[TSCEFormulaRewriteInfo_RowColumnInfo affectedRangeForRemoveRows]
-[TSCEFormulaRewriteInfo_RowColumnInfo affectedRangeForMoveRows]
insertInfo
-[TSCEFormulaRewriteInfo_RowColumnInfo uuidsInRange:]
-[TSCEFormulaRewriteInfo_RowColumnInfo uuidsForIndexes:]
%@ uuids: %@
<TSKUIDStructVector: %p>
-[TSTArrayNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTArrayNode.mm
Unexpected object in initAsCopyOf:... expected TSTArrayNode, got %@
-[TSTArrayNode string]
We shouldn't call the arrayNode's string method, because it won't actually return a proper tokenized string
-[TSTArrayNode insertFormulaText:includeWhitespace:]
invalid TSTArrayNode children
expected n-1 delimiter whitespace elements
-[TSTArrayNode buildASTNodeArray:hostCell:symbolTable:]
We don't support more than UINT16_MAX rows in an array
We don't support more than UIN8_MAX columns in an array
-[TSTListNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTListNode.mm
Unexpected object in initAsCopyOf:... expected TSTListNode, got %@
<%@ %p>
-[TSTListNode string]
We shouldn't call the listNode's string method, because it won't actually return a proper tokenized string
-[TSTListNode buildASTNodeArray:hostCell:symbolTable:]
TSCEValue TSCEEvaluationStack::valueForArgumentAtIndexSingletonMode(int, TSCEFunctionSpec *__strong, TSCEEvaluationContext &, TSCEFunctionArgSpec *, TSCEArgumentType, int)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEEvaluationStack.mm
unsupported computed reference type found. See TSCECalcEngine::referenceWasGuaranteedCleanAtRecalcCycleStart
TSCEValue TSCEEvaluationStack::valueForArgumentAtIndexSwitch(int, TSCEFunctionSpec *__strong, TSCEEvaluationContext &, TSCEFunctionArgSpec *, TSCEArgumentType, TSCEArgumentAccessorMode, int)
Invalid accessorMode (%d)
TSCEValue TSCEEvaluationStack::valueForArgumentAtIndex(int, TSCEFunctionSpec *__strong, TSCEEvaluationContext &)
Have to set argument count before you call valueForArgumentAtIndex()
void TSCEEvaluationStack::replaceArgumentAtIndex(int, TSCEValue)
cannot replace an invalid index
virtual void TSCEASTStreamIterator::rewrite()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTStreamIterator.mm
Unexpected incomplete embedded node type found
virtual TSCEArgumentType TSCEAbstractValue::nativeType() const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEAbstractValue.mm
Subclasses must override nativeType
virtual TSCEValue TSCEAbstractValue::value() const
virtual NSString *TSCEAbstractValue::bakedString(TSULocale *__strong) const
Shouldn't get a reference type from deepType
these cases shouldn't happen
virtual BOOL TSCEAbstractValue::isNativelyEqual(const TSCEValue &, TSCEEvaluationContext *) const
isNativelyEqual not implemented for type: %d
virtual TSCEReferenceValue TSCEAbstractValue::reference(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
virtual size_t TSCEAbstractValue::hash() const
subclasses must override TSCEAbstractValue::hash()
virtual TSCEASTNodeArray *TSCEAbstractValue::newCorrespondingAST(TSCEEvaluationContext &, TSCEFunctionSpec *__strong, int, bool) const
subclasses must override newCorrespondingAST
-[TSTGroupNodeFormatManager reset]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGroupNodeFormatManager.mm
_cellValue
-[TSTGroupNodeFormatManager p_recalculateMergedFormatWithGroupBy:]
Expected duration format.
-[TSTGroupNodeFormatManager mergedFormatChangedByAddingRowUID:andCellValue:groupBy:]
format
groupBy
-[TSTGroupNodeFormatManager mergedFormatChangedByRemovingRowUID:groupBy:]
CellValue:%@
Cache:%@
-[TSTGroupNodeFormatManager updateWithDocumentRoot:]
-[TSTGroupNodeFormatManager initWithArchive:]
Expected equal size arrays for the format dictionary.
-[TSTGroupNodeFormatManager encodeToArchive:forGroupBy:backwardCompat:]_block_invoke
-[TSTStringNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTStringNode.mm
Unexpected object in initAsCopyOf:... expected TSTStringNode, got %@
\U201C\U2006\U201D
\U201C%@\U201D
-[TSTStringNode insertFormulaText:includeWhitespace:]
StringNode shouldn't have any children
-[TSTStringNode buildASTNodeArray:hostCell:symbolTable:]
-[TSTDateNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTDateNode.mm
Unexpected object in initAsCopyOf:... expected TSTDateNode, got %@
-[TSTDateNode insertFormulaText:includeWhitespace:]
DateNode shouldn't have any children
-[TSTDateNode buildASTNodeArray:hostCell:symbolTable:]
DATE(%ld%@%ld%@%ld)
(DATE(%ld%@%ld%@%ld)+TIMEVALUE(TIME(%ld%@%ld%@%ld)))
<%@ %p>: '%@'%@
 (BLANK)
-[TSTReferenceNode initWithContext:calculationEngine:uidRectRef:categoryRef:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTReferenceNode.mm
Expected uidRectRef to have same calculation engine as the one that was passed in.
-[TSTReferenceNode initWithReferenceStart:referenceEnd:suppressAutomaticNamedReferenceInvalidation:]
Creating a range reference with two references with different ownerUIDs
Creating a range reference with two references with different calculationEngines
-[TSTReferenceNode initAsCopyOf:intoContext:children:]
Unexpected object in initAsCopyOf:... expected TSTReferenceNode, got %@
unable to resurrect calcEngine in document context.
+[TSTReferenceNode p_spanningCategoryRefForViewRangeRef:groupByUid:categoryLevel:calculationEngine:]
trying to create a spanning category summary ref to more than one column
-[TSTReferenceNode p_categoryRefViewTractRef]
invalidCellTractRef
expected to create an invalid cell tract ref
-[TSTReferenceNode categoryRefTableUID]
asking a non-category ref node for its category ref table UID
-[TSTReferenceNode setHostTableUID:]
invalid tableUID
-[TSTReferenceNode referenceAsStringWithContext:]
nil calculationEngine.  Can't generate string for categoryRefNode.
nil calculationEngine.  Can't generate string for referenceNode.
-[TSTReferenceNode referenceAsStringWithContext:]_block_invoke
-[TSTReferenceNode insertFormulaText:includeWhitespace:]
ReferenceNode shouldn't have any children
-[TSTReferenceNode buildASTNodeArray:hostCell:symbolTable:]
-[TSTReferenceNode exportString]
%@ :: 
-[TSTReferenceNode excludeSummaryAndLabelRows]
Need a calcEngine set to do this
-[TSTReferenceNode loadFromArchive:unarchiver:]
Invalid TSTReferenceNode archive
TSCECellRefSet TSCEInternalCellRefSet::asCellRefSet(TSCEDependencyTracker *) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEInternalCellRefSet.mm
Need a dependency tracker to do this conversion
v32@?0r^S8r^v16^B24
-[TSTPencilAnnotation initWithContext:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPencilAnnotation.mm
v16@?0@"TSDPencilAnnotationStorage"8
-[TSTPencilAnnotation loadFromArchive:unarchiver:]
A TSTPencilAnnotation must have a pencilAnnotationStorage
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTInsertRowsRewriter.mm
virtual TSCEASTElement *TSCEASTInsertRowsRewriter::uidReferenceNode(TSCEASTUidReferenceElement *)
TSCEASTInsertRowsRewriter - only move rows uses uuid-form references
virtual TSCEASTElement *TSCEASTRewriteUsingValuesRewriter::binaryInfixOperatorNode(TSCEASTBinaryElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTRewriteUsingValuesRewriter.mm
evaluation stack is too small
virtual TSCEASTElement *TSCEASTRewriteUsingValuesRewriter::unaryOperatorNode(TSCEASTUnaryElement *, BOOL)
virtual TSCEASTElement *TSCEASTRewriteUsingValuesRewriter::linkedRefNode(TSCEASTLinkedRefElement *)
Unsupporeted by TSCEASTRewriteUsingValuesRewriter: linkedRefNode
virtual TSCEASTElement *TSCEASTRewriteUsingValuesRewriter::uidReferenceNode(TSCEASTUidReferenceElement *)
Unsupporeted by TSCEASTRewriteUsingValuesRewriter: uidReferenceNode
virtual TSCEASTElement *TSCEASTRewriteUsingValuesRewriter::letBindNode(TSCEASTLetBindElement *)
Not expecting let usage in this rewriter
virtual TSCEASTElement *TSCEASTRewriteUsingValuesRewriter::letVariableNode(TSCEASTLetVariableElement *)
virtual TSCEASTElement *TSCEASTRewriteUsingValuesRewriter::letEndScopeNode(TSCEASTLetEndScopeElement *)
TSCEValue TSCEASTRewriteUsingValuesRewriter::evaluationResult()
an evaluation result is undefined
bool TSCEASTRewriteUsingValuesRewriter::rewriteFunctionCallByRemovingNumberToDateCoercions(uint16_t, uint32_t)
All TSCEASTRewriteUsingValuesRewriter callbacks need to adjust _evaluationStackElementOriginSizes and _copiedNodes appropriately.
-[TSTDurationNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTDurationNode.mm
Unexpected object in initAsCopyOf:... expected TSTDurationNode, got %@
-[TSTDurationNode insertFormulaText:includeWhitespace:]
DurationNode shouldn't have any children
-[TSTDurationNode buildASTNodeArray:hostCell:symbolTable:]
DURATION(%g%@%g%@%g%@%g%@%g%@%g)
-[TSTDurationNode date]
We shouldn't ask a Duration for its date.
-[TSTDurationNode format]
We shouldn't ask a Duration for its format.
sLocalizedTrue
sLocalizedTrueStrings
sLocalizedFalse
sLocalizedFalseStrings
mappings_functionLocalizationDictionary
mappings_localizedTypeStringForArgumentType
an error
an empty cell
empty
a number
a string
a Boolean
a date
a reference
a vector
a duration
anything
a number, date, or duration
localizedFunctionNameForMenuTag
Mean
Median
Mode
localizedNameForFunction:
%@_TOOLTIP
localizedCategoryForFunction:
%@_ARGUMENT_%d
%@_ARGUMENT_%d_TOOLTIP
%@_ARGUMENT_%d_MODE_%d
%@_ARGUMENT_%d_MODE_%d_TOOLTIP
arguments
Localizable
strings
-[TSULocale(TSCELocalization) localizedNamesForFunctions:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCELocalization.mm
Either %@ was translated improperly, or some other function was translated to the same name.
localizedFunctionCategoryDictionary
Date and Time
Engineering
Financial
Logical and Information
Reference
Numeric
Trigonometric
Statistical
Text
localizedCategoryArray
allLocalizedFunctions
localizedLabelForAggType
No Summary
Count (All)
Average (All)
Minimum
Maximum
Category
Group Name
Label
Count
Count (Unique)
Rows
Count (Duplicates)
Count (Blank)
Average
Product
RANGE
localizedShortLabelForAggType
Count All
Average All
Min.
Max.
Unique
Count Duplicates
Count Blank
Base Value
% of Grand Total
% of Column Total
% of Row Total
% of Parent Column Total
% of Parent Row Total
Index
incbet
-[TSTArgumentPlaceholderNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTArgumentPlaceholderNode.mm
Unexpected object in initAsCopyOf:... expected TSTArgumentPlaceholderNode, got %@
-[TSTArgumentPlaceholderNode copyIntoContext:bakeModes:children:]
Unexpected mode value type
value
-[TSTArgumentPlaceholderNode detokenizedText]
expected set placeholder node to return a different node for bakedValue
-[TSTArgumentPlaceholderNode buildASTNodeArray:hostCell:symbolTable:]
ArgumentPlaceholderNode shouldn't have children
-[NSDate(TSCEAdditions) tsce_weekNumberForType:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECalculationUtilities.mm
Incorrect month number in function WEEKNUM
Incorrect type number in function WEEKNUM.
BOOL TSCEValueHasError(TSCEValue, int, TSCEEvaluationContext *)
actual values shouldn't have TSCEAnyArgumentType
actual values shouldn't have TSCEDurationArgumentType
actual values shouldn't have TSCENoCoerceScalarArgumentType
NSComparisonResult TSCECaseInsensitiveCompareValues(const TSCEValue &, const TSCEValue &, TSCEEvaluationContext &)
TSCEInvalidComparisonError should not be raised when both numbers are durations
TSCEInvalidComparisonError should not be raised when both numbers are currencies
Dimension here should be duration, TSCEInvalidComparisonError should not be raised if it's a currency
TSCEInvalidComparisonError should not be raised when both numbers have no units
We should never reach here unless you pass in nodes with unsupported types, leftType: %d rightType: %d
+[(){}^$|\./
.{1}
NSString *TSCEConvertWildcardStringToICURegex(NSString *__strong)
We don't want to quote a character that doesn't need to be quoted.
BOOL TSCEValueSufficesForArgumentType(const TSCEValue &, TSCEArgumentType, TSCEArgumentType, TSCEArgumentType, TSCEEvaluationContext *)
empty arguments should never be required
TSCEValue TSCEMultifactorial(TSCEFunctionSpec *__strong, TSCEValue, TSCENumberValue, TSCENumberValue, TSCEEvaluationContext *)
Multifactorial shouldn't have i less than zero.  Please file a bug.
TSCEValue TSCEEvaluateAverageIgnoringError(TSCECalculationEngine *__strong, TSUCellCoord, const TSCEOwnerUID &, TSCERangeCoordinate, const TSCEOwnerUID &)
Unregistered tableUID found when calculating average
NSDictionary<NSString *,NSMutableIndexSet *> *TSCEEvaluateUniqueIgnoringError(TSCECalculationEngine *__strong, TSUCellCoord, const TSCEOwnerUID &, TSCERangeCoordinate, const TSCEOwnerUID &)
Unregistered tableUID found when calculating unique
TSCEValue TSCEEvaluateLargeOrSmallIgnoringError(TSCECalculationEngine *__strong, TSUCellCoord, const TSCEOwnerUID &, TSCERangeCoordinate, const TSCEOwnerUID &, BOOL, double, BOOL)
Unregistered tableUID found when calculating large/small
TSCEValue TSCEEvaluateCountIgnoringError(TSCECalculationEngine *__strong, TSUCellCoord, const TSCEOwnerUID &, TSCERangeCoordinate, const TSCEOwnerUID &)
Unregistered tableUID found when calculating count
-[TSTPostfixOperatorNode insertFormulaText:includeWhitespace:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPostfixOperatorNode.mm
PostfixOperatorNode doesn't have one argument
-[TSTPostfixOperatorNode buildASTNodeArray:hostCell:symbolTable:]
-[TSTStrokeDefaultVendor p_strokeTypeForColumn:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTStrokeDefaultVendor.mm
expected a pivot table for footer columns
-[TSTStrokeDefaultVendor p_updateStrokeLayer:forColumnStrokeType:]
unexpected column strokeType %zu
-[TSTStrokeDefaultVendor p_updateStrokeLayer:forRowStrokeType:]
unexpected row strokeType %zu
-[TSCEDenseGrid initWithValueGrid:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEDenseGrid.mm
Warning, making a TSCEDenseGrid with a non-zero based offset: %@
-[TSTUidCoordsPerRunningCellValue getUidCoordforRunningAggregate:tupleForCoord:newUidCoord:addNewUidCoordEvenIfNotFound:inContext:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTRunningTotalContext.mm
Got a too-large insertIndex: %lu
-[TSTRunningTotalContext getPreviousUidCoordForAggIndex:fromNewUidCoord:addNewUidCoordEvenIfNotFound:]
We need to locate (or create) a tuple
365.2425
14593.9
453.59237
28.349523125
1.6605390402E-24
0.06479891
1609.344
.9144
.3048
.0254
1E-10
1.143
30,856,775,814,913,673
1609.347218694
6894.75729
133.3223684210526
1E-5
4.4482216152605
0.009806649999788
1E-7
4.184
4.1868
1.602176634E-19
1.3558179483314
1055.05585257348
745.69987158227022
735.49875
1.25
4046.872609874252
1E-20
0.092903
.0295735295625
0.473176473
0.56826125
0.946352946
3.785411784
0.005
1.13652
4.54609
1E-30
35.2391
28.3168
0.0163871
0.44704
0.3048
1.852
grain
shweight
uk_cwt
lcwt
hweight
stone
uk_ton
LTON
brton
Pica
Picapt
parsec
survey_mi
mmHg
Torr
pond
Rank
Reau
tbsp
fl oz
us_pt
uk_pt
tspm
uk_qt
uk_gal
ang3
ang^3
barrel
bushel
ft^3
in^3
ly^3
mi^3
yd^3
Nmi3
Nmi^3
Picapt3
Picapt^3
Pica3
Pica^3
regton
MTON
mi/h
m/sec
mi/mn
ft/mn
ft/s
m/hr
m/mn
admkn
uk_acre
us_acre
ang2
ang^2
ft^2
in^2
ly^2
Morgen
mi^2
Nmi2
Nmi^2
Picapt2
Picapt^2
Pica2
Pica^2
yd^2
byte
+[TSCEUnitRegistry unitForCurrencyCode:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEUnitRegistry.mm
can't look up unit for a nil currency code
+[TSCEUnitRegistry canonicalUnitForDimension:]
Unknown dimension found in canonicalUnitForDimension
+[TSCEUnitRegistry multiplierForUnitPrefix:]
Shouldn't try to get the multiplier of an invalid unit prefix
Shouldn't try to get the multiplier of an unknown unit prefix
+[TSCEUnitRegistry convert:fromUnit:toUnit:]
Invalid unit found in convert:
Can't convert across dimensions.
+[TSCEUnitRegistry dimensionForUnit:]
unit out of bounds in dimensionForUnit:.
-[TSTPrefixOperatorNode insertFormulaText:includeWhitespace:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPrefixOperatorNode.mm
PrefixOperatorNode doesn't have one argument
-[TSTPrefixOperatorNode buildASTNodeArray:hostCell:symbolTable:]
-[TSTFunctionEndNode insertFormulaText:includeWhitespace:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTFunctionEndNode.mm
We shouldn't ever buildFormulaText: with a functionEndNode
-[TSTFunctionEndNode buildASTNodeArray:hostCell:symbolTable:]
We shouldn't ever buildASTNodeArray: with a functionEndNode
const TSCEValue TSCEValueBindingEnvironment::lookup(const TSCESymbol &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEValueBindingEnvironment.mm
unbound symbol found: %u
void TSCEValueBindingEnvironment::endScope()
_undoSymbols is empty at endScope() - beginScope() never called?
TSCEFunctor(%u args)=%@
TSCECellValue *TSCEFunctor::evaluateWithArgs(NSArray *__strong, TSCECalculationEngine *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFunctor.mm
Wrong number of arguments for functor: %@, args: %@
-[TSTCellFormatAndValue stringValue]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellFormatAndValue.mm
Getting a non-string value as string from a TSTCellFormatAndValue.
-[TSTCellFormatAndValue richTextOrErrorTextStorageValue]
Getting a non-rich-text/non-formula-error value as rich text from a TSTCellFormatAndValue.
+[TSTCellFormatAndValue formatAndValueFromRichTextCell:updatingStorageWithBlock:]
expected rich text cell when creating format and value
-[TSTCellFormatAndValue initFromCell:useAllSpareFormats:forceNoContent:suppressApplyValue:applySpareFormatOnly:]
useAllSpareFormats and spareFormatOnly are mutually exclusive!
deprecated cell value type found
-[TSTCellFormatAndValue copyWithZone:]
-[TSTCellFormatAndValue numberOrCurrencyDecimalValue]
Getting a non-double value as double from a TSTCellFormatAndValue.
-[TSTCellFormatAndValue hasStringContentMatchingCell:]
no string content comparison implemented for value type %d
-[TSTCellFormatAndValue applyToCell:]
-[TSTCellFormatAndValue objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:]
shouldn't remove the value and format from a cell
-[TSTCellFormatAndValue initFromPropertyCommandMessage:unarchiver:]
rich text cells should have a rich text payload
-[TSTCellFormatAndValue saveToPropertyCommandMessage:archiver:]
Non-nil string resulted in NULL protobufString: '%@'
static NSDate *TSCEFinancialFunctions::prevCoupDateWithSettlement(NSDate *__strong, NSDate *__strong, int)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFinancialFunctions.mm
Setlement date should not be larger than maturity date
static NSDate *TSCEFinancialFunctions::nextCoupDateWithSettlement(NSDate *__strong, NSDate *__strong, int)
TSCEValue TSCEFunction_ACCRINT::evaluateWithContext(TSCEEvaluationContext &)
ACCRINT: should not reach here if numCoponsLeft is not 1
#%lu[%@]
%@<%p> for ownerUID %@:
Table %@ <- %@
Table %@, Uid: %@ <- %@
-[TSTPivotOwner registerWithCalcEngine:forTableModel:baseOwnerUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPivotOwner.mm
_tableModel
-[TSTPivotOwner linkToCalcEngine:forTableModel:]
-[TSTPivotOwner setPivotSourceHeaderTract:]
pivot source header range expected to span all columns
Columns
Values
-[TSTPivotOwner p_setEmptyPivotTableLabels]
These labels are only for empty pivots
-[TSTPivotOwner p_setPivotHeaderCellsResettingPivotHidden:preservingStyles:]
Row group not found
Column group not found
v32@?0r^{TSKUIDStruct=QQ}8@"TSTPivotGroupingColumnOptions"16^B24
-[TSTPivotOwner p_formulaForCellCoord:runningTotalContext:]
Invalid ShowAs Type
-[TSTPivotOwner p_sortRowsInMode:sortDirection:columnIndex:level:aggregateIndex:resetLabels:]_block_invoke
Expected a valid category level for all body rows
-[TSTPivotOwner p_sortColumnsInMode:sortDirection:rowIndex:level:aggregateIndex:resetLabels:]_block_invoke
Expected a valid category level for all body columns
-[TSTPivotOwner p_sortFullTable:]
Full table sort is only appropriate for implicit sort modes.
v16@?0@"TSTPivotGroupingColumnOptionsMap"8
-[TSTPivotOwner evaluateFormulaAt:withCalcEngine:recalcOptions:]
Unexpected formulaCoord seen in TSTPivotOwner: %@
virtual NSDate *TSCECategoryRefValue::date(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECategoryRefValue.mm
Error: couldn't resolve TSCECategoryRefValue
virtual NSString *TSCECategoryRefValue::rawString(TSCEFunctionSpec *__strong, int, TSULocale *__strong) const
virtual BOOL TSCECategoryRefValue::boolean(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
virtual TSCERichTextStorage TSCECategoryRefValue::richTextStorage(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
virtual TSCERichTextStorage TSCECategoryRefValue::rawRichTextStorage(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
virtual TSCEGrid TSCECategoryRefValue::formattedGrid(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
virtual TSCENumberValue TSCECategoryRefValue::number() const
virtual NSDate *TSCECategoryRefValue::date() const
virtual size_t TSCEASTElement::size(TSCEASTIteratorBase *) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTElements.mm
Need to override size() method for derived element types.
TSCEASTAdditionNode
TSCEASTSubtractionNode
TSCEASTMultiplicationNode
TSCEASTDivisionNode
TSCEASTPowerNode
TSCEASTConcatenationNode
TSCEASTGreaterThanNode
TSCEASTGreaterThanOrEqualToNode
TSCEASTLessThanNode
TSCEASTLessThanOrEqualToNode
TSCEASTEqualToNode
TSCEASTNotEqualToNode
TSCEASTNegationNode
TSCEASTPlusSignNode
TSCEASTPercentNode
TSCEASTFunctionNode
TSCEASTFunctionLongNode
TSCEASTNumberNode
TSCEASTBooleanNode
TSCEASTStringNode
TSCEASTDateNode
TSCEASTDurationNode
TSCEASTEmptyArgumentNode
TSCEASTTokenNode
TSCEASTArrayNode
TSCEASTListNode
TSCEASTThunkNode
TSCEASTColonNode
TSCEASTReferenceErrorNode
TSCEASTUnknownFunctionNode
TSCEASTPrependWhitespaceNode
TSCEASTAppendWhitespaceNode
TSCEASTFunctionNodeWithWhitespace
TSCEASTCellReferenceNode
TSCEASTColonWithUidsNode
TSCEASTLinkedCellRefNode
TSCEASTLinkedColumnRefNode
TSCEASTLinkedRowRefNode
TSCEASTUidReferenceNode
TSCEASTLetBindNode
TSCEASTLetVarNode
TSCEASTLetEndScopeNode
TSCEASTCategoryRefNode
TSCEASTColonTractNode
TSCEASTViewTractRefNode
static NSString *TSCEASTElement::stringForTag(TSCEASTNodeTag)
%d is not a valid node tag
Tag: %@ @offset: %lu size=%lu
TSCEASTElement *TSCEASTElementWithChildren::setChildAtIndex(TSCEASTElement *, uint32_t, TSCEASTRewriter *)
Must set children in order
TSCEASTElement *TSCEASTElementWithUidTractsWithChildren::setChildAtIndex(TSCEASTElement *, uint32_t, TSCEASTRewriter *)
void TSCEASTElementWithUidTracts::setRefFlags(TSCEASTRefFlags, TSCEASTIteratorBase *)
Don't call setRefFlags() on this type until it supports them
TSCERangeRef TSCEASTColonElement::rangeReference(TSCEASTIteratorBase *, TSUPreserveFlags &, const TSUCellCoord &)
A calculationEngine needs to be set on this rewriter to use TSCEASTColonElement::rangeReference() method.
virtual size_t TSCEASTFunctionElement::size(TSCEASTIteratorBase *) const
Unknown tag for TSCEASTFunctionElement: %d
void TSCEASTFunctionElement::setNumArgs(uint32_t, TSCEASTIteratorBase *)
Unhandled function tag: %d
static size_t TSCEASTWhitespaceElement::appendWhitespaceElement(TSCEASTNodeArray *, TSCEASTNodeTag, NSString *__strong)
Not a whitespace tag
static TSCECellTractRef *TSCEASTRelativeCoordRefElement::tractRefUsingUuids(TSCEASTIteratorBase *, const TSCEOwnerUID &, const TSKUIDStructVector &, const TSKUIDStructVector &, TSCEMutableUIDSet *__autoreleasing &, TSCEMutableUIDSet *__autoreleasing &, BOOL)
How can we be spanning in both rows and columns.
static bool TSCEASTRelativeCoordRefElement::expandTractRefUsingUuids(TSCEASTIteratorBase *, const TSCEOwnerUID &, TSCECellTractRef *__strong, const TSKUIDStructVector &, TSKUIDStructVector &, BOOL)
Don't use this method for non-existing ranges, use tractRefUsingUuids() instead.
static bool TSCEASTRelativeCoordRefElement::expandRangeCoordinateUsingUuids(TSCEASTIteratorBase *, const TSCEOwnerUID &, TSCERangeCoordinate &, const TSKUIDStructVector &, TSKUIDStructVector &, BOOL)
Don't use this method for non-existing ranges, use rangeCoordinateUsingUuids() instead.
void TSCEASTRelativeCoordRefElement::setTableUID(const TSCEOwnerUID &, TSCEASTIteratorBase *)
Cannot use setTableUID on a tag that isn't already cross-table
void TSCEASTRelativeCoordRefElement::setRelativeCoord(const TSCERelativeCellCoordinate &, TSCEASTIteratorBase *)
Can't setRelativeCoord on type: %d
Can't use setRelativeCoord to switch from spanning (%d,%d) to not spanning (%d,%d)
TSCECrossTableReference TSCEASTRelativeCoordRefElement::crossTableRef(TSCEASTIteratorBase *) const
Incorrect tag for use with crossTableRef: %d
virtual TSCECellRef TSCEASTRelativeCoordRefElement::absoluteCellRef(TSCEASTIteratorBase *, const TSUCellCoord &) const
Invalid tag: %d
void TSCEASTUidReferenceElement::setTableUID(const TSCEOwnerUID &, TSCEASTIteratorBase *)
void TSCEASTViewTractRefElement::setTableUID(const TSCEOwnerUID &, TSCEASTIteratorBase *)
void TSCEASTNodeArray::write(const T &) [T = TSCEBaseUnit]
void TSCEASTNodeArray::write(const T &) [T = unsigned char]
void TSCEASTNodeArray::write(const T &) [T = TSUDurationStyle]
void TSCEASTNodeArray::write(const T &) [T = bool]
void TSCEASTNodeArray::write(const T &) [T = short]
virtual TSCEASTNodeArray *TSCENilValue::newCorrespondingAST(TSCEEvaluationContext &, TSCEFunctionSpec *__strong, int, bool) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCENilValue.mm
nil values are unexpected on the evaluation stack
Malformed Reference Node - Unexpected Path Delimiter
Malformed Reference Node
TSCEASTNodeArray *processReference(TSCEParser *, TSCEASTNode *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECAST.mm
Wrong parser state?
Missing sibling in function call
Malformed Reference Node - Function with trailing crap
Whitespace missing between leaves.
Too many nodes inside a reference node
id TSCEASTLeafGetString(TSCEASTLeaf *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECAST.h
Can't have a string type leaf with type function.
TSCEASTNodeArray *TSCEASTLeafGetFunction(TSCEASTLeaf *)
Can't have a non function type leaf return a function.
TSCEOwnerUID formulaOwnerUIDFromNativeIDString(NSString *__strong, TSCECalculationEngine *__strong, TSCEFormulaSyntaxType)
ResolverId_
We should have successfully registered the parsedOwnerID: %@
Invalid Reference
void gatherNativeReferenceInformation(TSCERegionAllocator *__strong, TSCEASTLeaf *, TSCEOwnerUID, TSCERangeCoordinate *, TSUPreserveFlagsEnum *, NSString *__autoreleasing *, NSString *__autoreleasing *, TSCEASTLeaf **)
We shouldn't have quoted labels on import
-[TSTHiddenStates copyFromHiddenStates:forRange:withContext:isWholeTableCopy:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTHiddenStates.mm
Failed to hide row during copy.
Failed to hide column during copy.
-[TSTStrokeSidecarIterator initWithStrokeSidecar:region:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTStrokeSidecarIterator.mm
-[TSTStrokeSidecarIterator updateCellData:]
invalid cellID in cellData
cellID %@ should be before cursor cellID %@
TSCEASTElement *TSCEASTElementIterator::nextElement()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTElementIterator.mm
virtual void TSCEASTElementIterator::rewrite()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTElementIterator.h
No rewrite method implemented for this class - use nextElement() API, or derive from a different AST iterator base class
-[TSTGroupBy didCreateGroup:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGroupBy.mm
_deferredGroupByChangeNotifications
-[TSTGroupBy willRemoveGroup:]
-[TSTGroupBy didRemoveGroup:]
-[TSTGroupBy didAddRowUID:toGroup:]
-[TSTGroupBy didRemoveRowUID:fromGroup:]
-[TSTGroupBy startOfGroupingChangesBatch]
-[TSTGroupBy endOfGroupingChangesBatch]
-[TSTGroupBy didChangeGroupByStructure]
v16@?0@"TSTGroupNode"8
-[TSTGroupBy encodeToArchive:archiver:backwardCompatOptions:]
Caller should already have tested we think we can fit in a single message.
Wasn't expecting this not set
-[TSTGroupBy updateWithDocumentRoot:]
-[TSTGroupBy changeForSettingGroupingColumnList:]
New grouping column list is nil
-[TSTGroupBy mapGroupUidsForChange:]
wrong groupByUid
-[TSTGroupBy _addAggregates:atLevel:]
-[TSTGroupBy _removeAggregates:]
-[TSTGroupBy runChange:withAggregates:]
Uh, we were expecting this to be us
-[TSTGroupBy usesPrePivotAggregateTypesOnly]
Should never see TSCEAggType_Indirect on a columnAggregate
-[TSTGroupBy setAggregateType:forColumnUID:atGroupLevel:]
aggType of (%d) is not a valid aggregate type for an entire column
-[TSTGroupBy findGroupNodeForValue:atLevel:createIfMissing:]
Was expecting to have created a groupNode for this groupValue: %@
-[TSTGroupBy beginDeferringRebuildFormulas]
overflow in beginDeferringRebuildFormulas
-[TSTGroupBy endDeferringRebuildFormulas]
endDeferringRebuildFormulas called without matching beginDeferringRebuildFormulas - avoided underflow
-[TSTGroupBy deferGroupByChangeNotifications]
overflow in deferGroupByChangeNotifications
-[TSTGroupBy resumeGroupByChangeNotifications]
resumeGroupByChangeNotifications called without matching deferGroupByChangeNotifications - avoided underflow
-[TSTGroupBy resetGroupings]
Can't resetGroupings with no calcEngine
-[TSTGroupBy insertRowUids:]
Column missing from table model when grouping
-[TSTGroupBy createAggregatorsIfMissingAndAssert:]
No TSTAggregator found for column %@
Couldn't create an aggreator for column: %@
-[TSTGroupBy isValidCategoryRef:]
%@: %@
<Relative Ancestor>
-[TSTGroupBy captureCategoryRefsFromIterator:atLevel:asSpanning:]_block_invoke
formula
-[TSTGroupBy captureCategoryLabelRefsForViewRegion:atLevel:asSpanning:forRows:]_block_invoke
No level for agg function labels!
-[TSTGroupBy prettyStringForCategoryRef:forHostCellRef:namingContext:]
-[TSTGroupBy rowUIDForLookupKey:]
Warning, rowUidLookupList is empty, we're not going to find anything.
blank
(error)
+[TSTGroupBy validateNumberOfGroupsForGroupingColumnList:sourceTableModel:sourceBodyTract:limit:groupNodeCount:]
Column missing from table model when validating
TSCEDependencyTracker::~TSCEDependencyTracker()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEDependencyTracker.mm
dirty cell batching must not be left on when a command finishes!
TSCEOwnerRegistrationCat
TSUError TSCEDependencyTracker::registerOwner(TSCEInternalFormulaOwnerID, __strong id<TSCEFormulaOwning>, TSCESubFormulaOwnerIndex)
registerOwner() doesn't accept class: %@ (not id<TSCEFormulaOwning>)
void TSCEDependencyTracker::resetAllExternalFormulasReferringToOwnerUIDs(const TSCEOwnerUIDVector &, __strong id<TSCEFormulaReplacing>)
Need upgradeMinion for resetAllExternalFormulasReferringToOwnerUIDs
void TSCEDependencyTracker::dgl_replaceCellWithFormula(TSCEInternalFormulaOwnerID, TSUCellCoord, TSCEReferenceSetWrapper *__strong, TSCEReplaceFormulaOptions)
Attempting to call dgl_replaceCellWithFormula with an invalid coord: %@
void TSCEDependencyTracker::dgl_replaceCellWithFormula(TSCEInternalFormulaOwnerID, TSUCellCoord, TSCEReferenceSetWrapper *__strong, TSCEReplaceFormulaOptions)_block_invoke
nonspanning range %{public}@ found in a spanning reference
v24@?0r^{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}8^B16
v24@?0r^{TSKUIDStruct=QQ}8^B16
v32@?0r^{TSKUIDStruct=QQ}8r^{TSKUIDStruct=QQ}16^B24
v24@?0@"TSCECategoryRef"8^B16
unimplemented reference type found: %d
failure adding a formula
void TSCEDependencyTracker::replaceCellWithFormula(const TSCEOwnerUID &, TSUCellCoord, TSCEReferenceSetWrapper *__strong, TSCEReplaceFormulaOptions)
Not expecting insane, or spanning coordinates here: (%lu,%lu)
void TSCEDependencyTracker::dgl_replaceRemoteDataKeysInterestedInForCell(const TSCECellRef &, TSCERemoteDataSpecifierSet *__strong)
Attempted to replace remote data key interest in a cell whose owner isn't registered.
v32@?0r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}8Q16^B24
void TSCEDependencyTracker::endSuppressingWillModifyCalls()
not suppressing willModify calls, so cannot end suppressing them
BOOL TSCEDependencyTracker::endBatchingGroupCellDirtying()
cannot end group cell dirtying batching if it is not already on.
void TSCEDependencyTracker::encodeToArchive(TSCE::DependencyTrackerArchive &, BOOL, BOOL, TSPArchiver *__strong)
failed to get an object to archive for a formula owner that needs registration. Registration failure at unarchive time is likely.
TSCEDependencyTracker::TSCEDependencyTracker(const TSCE::DependencyTrackerArchive &, TSPUnarchiver *__strong, TSCECalculationEngine *__strong)_block_invoke
Unarchiving formulaOwnerDependencies: Want to replace owner %@ (%lu) with %@ (%lu) - highly unexpected
v16@?0@"TSPObject<TSCECalculationEngineRegistration>"8
void TSCEDependencyTracker::upgradeToSubOwnerUIDForOwners(TSTOwnerUidMapper *__strong)
Not expecting tableUID to be changing
virtual TSCEASTElement *TSCEASTNodeFormulaStringIterator::binaryInfixOperatorNode(TSCEASTBinaryElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTNodeFormulaStringIterator.mm
virtual TSCEASTElement *TSCEASTNodeFormulaStringIterator::unaryOperatorNode(TSCEASTUnaryElement *, BOOL)
virtual TSCEASTElement *TSCEASTNodeFormulaStringIterator::colonNode(TSCEASTColonElement *)
%@%@%@%@%@%@
%@%@%@%@%@
%.17G
DATE(%li,%li,%li)
(DATE(%li,%li,%li)+TIMEVALUE(TIME(%li,%li,%li)))
DURATION(%@,%@,%@,%@,%@,%@)
%C%C
virtual TSCEASTElement *TSCEASTNodeFormulaStringIterator::uidReferenceNode(TSCEASTUidReferenceElement *)
Shouldn't see uid-form references when making Sage formula strings.
virtual TSCEASTElement *TSCEASTNodeFormulaStringIterator::viewTractRefNode(TSCEASTViewTractRefElement *)
Shouldn't see view cellRef references when making Sage formula strings.
NSString *TSCEASTNodeFormulaStringIterator::formulaString()
Unable to properly create a formula string. Possibly a bad ASTNodeArray?
virtual TSCEASTElement *TSCEASTNodeFormulaStringIterator::letBindNode(TSCEASTLetBindElement *)
Let nodes should have been removed prior to Sage export
virtual TSCEASTElement *TSCEASTNodeFormulaStringIterator::letVariableNode(TSCEASTLetVariableElement *)
Variable nodes should have been removed prior to Sage export
void TSCEASTNodeFormulaStringIterator::processOperatorNode(NSString *__strong)
void TSCEASTNodeFormulaStringIterator::processPostfixOperatorNode(NSString *__strong)
void TSCEASTNodeFormulaStringIterator::processPrefixOperatorNode(NSString *__strong)
void TSCEASTNodeFormulaStringIterator::processFunctionNode(uint32_t, TSCEFunctionSpec *__strong, NSString *__strong, NSString *__strong)
Have to either specify a function spec or an unknown function name.
%s error
unknown
domain
singularity
overflow
underflow
total loss of precision
partial loss of precision
TSTLookupKeyCoord::TSTLookupKeyCoord(TSCEUidLookupKey, TSCEUidLookupKey)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellUIDLookupList.mm
Can't support a column key larger than %lu
Can't support a row key larger than %lu
TSTCellUIDLookupList::TSTCellUIDLookupList(const TSTCellUIDLookupList &, TSTTableInfo *__strong, TSTPruneBehavior, BOOL (^__strong)(const TSTCellUID &, NSUInteger))
Oh in what case do we need to prune away base cells?
Allowing both summary cells and wildcards makes little sense
Allowing both label cells and wildcards makes little sense
fdtr
fdtri
Remote Data Store
Remote Data Store Update
-[TSCERemoteDataStore dealloc]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERemoteDataStore.mm
Failed to unregister store before dealloc
-[TSCERemoteDataStore registerWithCoordinator]_block_invoke
Store is already registered!
-[TSCERemoteDataStore unregisterWithCoordinator]_block_invoke
Store is already unregistered!
-[TSCERemoteDataStore valueForRemoteData:]
Cold specifiers must have dates!
-[TSCERemoteDataStore cachedQuoteForSymbol:]
We're about to capture the coordinator's queue lock. We should NOT have the write lock at this time.
B24@?0@"NSString"8@"NSDictionary"16
-[TSCERemoteDataStore remoteDataDidUpdateValues:quotes:]
Shouldn't get an empty update!
-[TSCERemoteDataStore p_tsceValueFromTsceCellValue:]
Attempted to create a TSCEvalue from an unsupported TSCECellValue of class: %@
v24@?0@"TSCERemoteDataSpecifier"8^B16
-[TSCERemoteDataStore updateWithRemoteDataMap:quotes:syncKey:]
Should never get a docserver update for an unshared file!
v24@?0@"NSString"8^B16
-[TSTCellBorder applyToCell:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellBorder.mm
currentCellBorder
-[TSTCellBorder objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:]
shouldn't remove the cell border from a cell
-[TSTStrokeLayerAbstractStack p_strokeLayerVector]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTStrokeLayerStack.mm
-[TSTStrokeLayerAbstractStack count]
-[TSTStrokeLayerAbstractStack enumerateStrokesAndCapsInRange:usingBlock:]_block_invoke
should never see portal strokes here
-[TSTStrokeLayerAbstractStack enumerateStrokesAndCapsInRange:usingBlock:]
-[TSTStrokeLayerStack insertClearedStrokeAtRange:]
You can't add non-default strokes to a DefaultsOnly TSTStrokeLayerStack.
-[TSTStrokeLayerStack insertDynamicStroke:strokeOrder:atRange:]
-[TSTStrokeLayerStack insertSpillStroke:atRange:]
You can't add non-default strokes to a Defaults Only TSTStrokeLayerStack.
Fatal Assertion failure: %{public}s %{public}s:%d You can't add non-default strokes to a DefaultsOnly TSTStrokeLayerStack.
-[TSTStrokeLayerStack replaceCustomStrokeLayerWith:]
-[TSTStrokeLayerMergedStack lockForWrite]
-[TSTStrokeExporter p_strokeExportCacheForColumnBefore:columnAfter:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTStrokeExporter.mm
looking for two visible columns around the gridline
-[TSTStrokeExporter p_strokeExportCacheForRowAbove:rowBelow:]
looking for two visible rows around the gridline
TSCESymbol TSCESymbolTable::addSymbol(__strong TSCEIdentifier)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCESymbolTable.mm
can't add a symbol if not in any scope
<TSCESymbolTable %p>: 
%@: %u
void TSCESymbolTable::endScope()
Calling endScope() without beginScope()
-[TSTHiddenStateExtent setupAfterUnarchive]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTHiddenStateExtent.mm
-[TSTHiddenStateExtent p_addHiddenIndex:viewIndex:forAction:]
Not allowing user-hidden as view only
Not allowing pivot-hidden for base indexes.
-[TSTHiddenStateExtent hideAtUid:forAction:]
Can't show/hide at a uuid without a TSTTableTranslator to translate to an index
-[TSTHiddenStateExtent hideAtUid:forIndex:forViewIndex:forAction:]
Pivot Hiding not allowed on base rows or columns.
-[TSTHiddenStateExtent showAtUid:forAction:]
-[TSTHiddenStateExtent p_summaryFilteredIndexes]
translator
-[TSTHiddenStateExtent p_summaryPivotHiddenIndexes]
-[TSTHiddenStateExtent hideAtViewIndex:forAction:]
Can't show/hide at an index without a TSTTableTranslator to translate to uuid
-[TSTHiddenStateExtent showAtViewIndex:forAction:]
-[TSTHiddenStateExtent hideAtBaseIndex:forAction:]
-[TSTHiddenStateExtent showAtBaseIndex:forAction:]
-[TSTHiddenStateExtent clearAllFiltered]
Expected counts to match.
-[TSTHiddenStateExtent hidingActionForViewIndex:]
-[TSTHiddenStateExtent hidingActionForBaseIndex:]
-[TSTHiddenStateExtent indexOfVisibleAfterIndex:]
Can't use this method without a TSTTableTranslator to provide tableSize
-[TSTHiddenStateExtent indexOfVisibleAfterAndIncludingIndex:]
-[TSTHiddenStateExtent p_registerAllFormulasReturningCoords:]
Expecting at most one filter rule on a pivotTable
Only support PivotSourceFiltered filter for pivotTable
-[TSTHiddenStateExtent p_calculateTopOrBottomThresholdWithCalcEngine:formulaCoord:isTop:keyScale:]
Unexpected key scale found: %d
-[TSTHiddenStateExtent p_createThresholdCellValue:locale:]
Unexpected threshold value type found: %d
-[TSTHiddenStateExtent p_calculateUniqueDistinctIndexWithCalcEngine:formulaCoord:tableModel:rule:]
uniqueKeyToRowIndexes
-[TSTHiddenStateExtent evaluateFormulaAt:withCalcEngine:recalcOptions:]
should have nil _rewrittenFilterSet
Unexpected predicate type found when calculating threshold: %d
Only grandTotal predicates are supported for view indexes, not predType %d
Only expect this on pivot tables, atm.
-[TSTHiddenStateExtent setFilterSet:]
filterset should be in geometric form
@"TSCEFormulaObject"16@?0@"TSCEFormulaObject"8
v24@?0@"TSTEphemeralFilter"8^B16
Fatal Assertion failure: %{public}s %{public}s:%d Corrupt cell memory. Crashing!
UInt16 TSTCellStorageSizePreBNC(TSTCellStoragePreBNC *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellStorage_Deprecated.mm
Corrupt cell memory. Crashing!
BOOL TSTCellStorageVersionCheckPreBNC(TSTCellStoragePreBNC *)
Can't parse cell storage header version %d as PreBNC!
void TSTV1CellStorageToCell(TSTV1CellStorage *, TSTCell_PreBNC *__strong)
wrong version of the storage used here
Failed to process all storage elements in TSTV1CellStorageToCell! Starting flags:%u Final flags:%u
void TSTV3CellStorageToCell(TSTV3CellStorage *, TSTCell_PreBNC *__strong)
Failed to process all storage elements in TSTV3CellStorageToCell! Starting flags:%u Final flags:%u Starting format flags:%u Final format flags:%u
void TSTCellStorageToCell_PreBNC(TSTCellStoragePreBNC *, TSTCell_PreBNC *__strong)
Failed to process all storage elements in TSTCellStorageToCell! Starting flags:%u Final flags:%u Starting format flags:%u Final format flags:%u
UInt16 p_OffsetForFormatInStoragePreBNC(TSTCellStoragePreBNC *, TSTCellStorageFormatFlagsPreBNC)
Can't get offset for unknown element 0x%02x!
Fatal Assertion failure: %{public}s %{public}s:%d Can't get offset for unknown element 0x%02x!
UInt16 p_OffsetForElementInStorage(TSTCellStoragePreBNC *, TSTCellStorageHeaderFlagsPreBNC)
void p_TSTCellToCellStoragePreBNC(TSTCell *__strong, TSTCellStoragePreBNC *, TSTNineKeyStructPreBNC *)
Failed to process all storage elements in TSTCellToCellStorage! Starting flags:%u Final flags:%u Starting format flags:%u Final format flags:%u
TSTMergeOwnerDetailedLogCat
-[TSTMergeOwner initWithTableModel:ownerUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTMergeOwner.mm
valid ownerUID is required
-[TSTMergeOwner mergeIndexesForRange:]
The tableModel must be set on the mergeOwner before this API can be used.
-[TSTMergeOwner isValidMergeRange:]
-[TSTMergeOwner insertBaseMergeRange:]
-[TSTMergeOwner removeBaseMergeRange:]
Unexpectedly not just removing one range
-[TSTMergeOwner performActionReturningInverse:]
Invalid merge action
-[TSTMergeOwner shrinkReturningInverseForBaseCellRegion:]
-[TSTMergeOwner p_growRangeFrom:toDesired:]
-[TSTMergeOwner p_growReturningInverseForAction:]
-[TSTMergeOwner rewriteMergesForRemovedRange:uids:isRows:]
-[TSTMergeOwner rewriteMergesForInsertedRange:uids:isRows:]
<%@: %p>
+[TSTCellSpec interactionTypeForShimControlFormatType:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellSpec.mm
Unconvertible format type.
+[TSTCellSpec shimControlFormatTypeForInteractionType:]
Unconvertible interaction type.
Stepper
Slider
Star Rating
Pop-Up Menu
Checkbox
TSTCellInteractionTypeValueEditing
TSTCellInteractionTypeFormulaEditing
TSTCellInteractionTypeStock
TSTCellInteractionTypeStepper
TSTCellInteractionTypeRating
TSTCellInteractionTypePopup
TSTCellInteractionTypeToggle
TSTCellInteractionTypeCategorySummary
-[TSTSortRuleReferenceTracker p_columnForTrackedReference:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTSortRuleReferenceTracker.mm
Ranges should be one column!
-[TSTSortRuleReferenceTracker updateForSortRules:]
Couldn't track reference!
-[TSTSortRuleReferenceTracker setOwnerUID:]
You should have called setBaseTableUID: instead (it sets both base and subOwner UIDs
void TSCEWholeOwnerDependencies::readFromArchive(const TSCE::WholeOwnerDependenciesArchive &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEWholeOwnerDependencies.mm
NULL whole owner dependencies
void TSCEWholeOwnerDependencies::unpackAfterUnarchive()_block_invoke
bool TSCEWholeOwnerDependencies::addOwnerReference(const TSCEInternalCellReference &)
TSTLayoutEngineDidChangeEmptyFilteredState
cell id to wp column $
dup $
temp wp column $
layout engine concurrent queue
table fonts and metric cache
<%@:%p "%@" range:%@ dynamic_mode:%@ >
TSTCellRange TSTLayoutEngineGetRangeForHint(TSTLayoutEngine *__strong, TSTLayoutHint *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTLayoutEngine.mm
layoutHint
-[TSTLayoutEngine numberOfRows]
Size invariants violated by dynamic add/remove
-[TSTLayoutEngine numberOfColumns]
B32@?0{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8^B24
d8@?0
B24@?0@8^B16
v32@?0@"TSTChangeDescriptor"8Q16^B24
v76@?0{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8d24{UIEdgeInsets=dddd}32B64^B68
-[TSTLayoutEngine p_validateFittingInfoWithCellRangeWorker:widthHeightCollection:containsMerges:validationBundle:]_block_invoke
this layout pass should be only merge cells
v40@?0@"TSWPCharacterStyle"8{_NSRange=QQ}16^B32
-[TSTLayoutEngine p_containsGradientThatFillsContainerInStyle:]
style must be character or paragraph.
@"TSTWidthHeightCollection"24@?0{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
@32@?0@"<TSTCellIteratorData>"8@"TSTWidthHeightCollection"16@24
-[TSTLayoutEngine measureWithLayoutState:]
stringContents
v24@?0@"TSTCellStateForLayout"8^B16
-[TSTLayoutEngine formattedDataParagraphStylePropertyMapForCell:atCellID:]
Trying create a text engine for a merged cell other than origin.
#REF!:#REF!
-[TSTLayoutHint copyForArchiving]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTLayoutHint.mm
copy
-[TSTLayoutHint overlapsWithSelectionPath:]
selectionPath
B16@?0@"TSDDrawableSelection"8
-[TSTLayoutHint overlapsWithSelectionPath:]_block_invoke_2
Invalid cell selection index %lu for %@
B16@?0@"TSTCellSelection"8
ID: %@ 
Range: %@ 
-[TSWPParagraphStyle(CellDiffAdditions) objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:optionalConcurrentStylesheet:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSWPParagraphStyle+CellDiffAdditions.m
Can't specify both a text style and a text style change at the same time.
Stylesheet should not be nil. Attempting repair.
No usable style or stylesheet to vary against!
v32@?0i8C12@16^B24
-[TSTTablePartitioner initWithInfo:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTablePartitioner.m
Incorrect info class in the table partitioner!
-[TSTTablePartitioner measureCellRangeForNextPartitionOfSize:previousHint:horizontally:]
Partitioner can't continue from an invalid range.
-[TSTTablePartitioner calculateCellRangeForNextPartition:nextPartitionRange:additionalHeightForCaption:availableSizeRemaining:previousHint:]
Partitioner measured an invalid range.
-[TSTTablePartitioner nextHintForSize:parentLayout:previousHint:horizontally:outFinished:]
previousHint must be nil, or of type TSTLayoutHint.
Hint is for the wrong table info.
-[TSTTablePartitioner p_didFinishPartitioningHint:horizontally:]
Horizontal partitioning went beyond the table bounds!
Vertical partitioning went beyond the table bounds!
-[TSTTablePartitioner partitioningPassForFirstPartitionSize:]
partitioningPassForFirstPartitionSize: Invalid partition size
(%@,%@)
chdtrc
chdtri
-[TSCEFormulaOwnerDependencies unpackAfterUnarchive]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulaOwnerDependencies.mm
_cellDependencies->dependencyTracker()
-[TSCEFormulaOwnerDependencies saveToArchiver:]
-[TSCEFormulaOwnerDependencies resetOwnerUIDForUpgrade:forBaseOwner:ownerKind:]
OwnerIndex must be set to use this method
Tables cannot use this method
Charts cannot use this method
Fatal Assertion failure: %{public}s %{public}s:%d Datalist segment range start out of bounds on set
-[TSTTableDataListSegment setKeyRange:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableDataListSegment.mm
Datalist segment range start out of bounds on set
Fatal Assertion failure: %{public}s %{public}s:%d Datalist segment range length out of bounds on set!
Datalist segment range length out of bounds on set!
Fatal Assertion failure: %{public}s %{public}s:%d Bad key during split enumeration!
-[TSTTableDataListSegment split]_block_invoke
Bad key during split enumeration!
Fatal Assertion failure: %{public}s %{public}s:%d New segment is empty during split!
-[TSTTableDataListSegment split]
New segment is empty during split!
Fatal Assertion failure: %{public}s %{public}s:%d Datalist segment changed during split!
Datalist segment changed during split!
Fatal Assertion failure: %{public}s %{public}s:%d Keys overlap during split!
Keys overlap during split!
Fatal Assertion failure: %{public}s %{public}s:%d Segment ranges are discontiguous!
Segment ranges are discontiguous!
Fatal Assertion failure: %{public}s %{public}s:%d Existing datalist segment range start out of bounds on split!
Existing datalist segment range start out of bounds on split!
Fatal Assertion failure: %{public}s %{public}s:%d Existing datalist segment range length out of bounds on split!
Existing datalist segment range length out of bounds on split!
Fatal Assertion failure: %{public}s %{public}s:%d New datalist segment range start out of bounds on split!
New datalist segment range start out of bounds on split!
Fatal Assertion failure: %{public}s %{public}s:%d New datalist segment range length out of bounds on split!
New datalist segment range length out of bounds on split!
Fatal Assertion failure: %{public}s %{public}s:%d Got an object with a bad key!
-[TSTTableDataListSegment objectAtIndexedSubscript:]
Got an object with a bad key!
Tables/DataList/Segment
v16@?0@"TSTTableDataObject"8
-[TSTTableDataListSegment saveToArchiver:]
Datalist segment range out of bounds on archive!
-[TSTTableDataListSegment loadObjectsFromDataListArchive:unarchiver:]
Need to set up a segment before doing an upgrade-type load of it!
-[TSTConcurrentCellIterator initWithTableInfo:tableModel:region:forcingRegion:clampingRect:flags:searchFlags:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConcurrentCellIterator.mm
XOR expectation on getting a tableInfo or tableModel.
-[TSTConcurrentCellIterator enumerateModelConcurrentlyUsingChunkBeginBlock:concurrentBlock:finalBlock:]
You must initialize the iterator with a TSTTableModel to use this enumeration method.
@24@?0{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8
-[TSTConcurrentCellIterator enumerateConcurrentlyUsingChunkBeginBlock:perDispatchThreadBlock:concurrentBlock:finalBlock:]
You may not initialize this iterator with a TSTTableModel to use this enumeration method.
v40@?0{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8@24Q32
-[TSTMergeAction verify]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTMergeAction.mm
%@ has %lu covering ranges and %lu formulas with %lu indexes
Invalid action
Insert action
Remove action
Shrink action
Grow action
-[TSTCellUIDIterator p_nextCellRefIdWithUIDIndexList:UIDs:index:remainDup:lastDiffPos:recentResults:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellUIDList.mm
Unexpected back reference value.
Unexpected ID reference value.
TSCEValue::TSCEValue(const TSCENumberValue &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEValue.mm
nil TSCENumberValue
TSCEValue::TSCEValue(const TSCEStringValue &)
nil TSCEStringValue
TSCEValue::TSCEValue(const TSCEDateValue &)
nil TSCEDateValue
TSCEValue::TSCEValue(const TSCEGrid &)
nil TSCEGrid
TSCEValue::TSCEValue(const TSCEReferenceValue &)
nil TSCEReferenceValue
TSCEValue::TSCEValue(const TSCEErrorValue &)
nil TSCEErrorValue
TSCEValue::TSCEValue(const TSCEThunkValue &)
nil TSCEThunkValue
TSCEValue::TSCEValue(const TSCEValueGridValue &)
nil TSCEValueGridValue
TSCEArgumentType TSCEValue::nativeType() const
Undefined type. Returning nonsensical value.
TSCEArgumentType TSCEValue::deepType(TSCEEvaluationContext *) const
TSCENumberValue TSCEValue::number(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
NSDate *TSCEValue::date(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
NSString *TSCEValue::string(TSCEFunctionSpec *__strong, int, TSULocale *__strong) const
TSCERichTextStorage TSCEValue::richTextStorage(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
NSString *TSCEValue::rawString(TSCEFunctionSpec *__strong, int, TSULocale *__strong) const
TSCERichTextStorage TSCEValue::rawRichTextStorage(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
BOOL TSCEValue::boolean(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
TSCEGrid TSCEValue::formattedGrid(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
TSCEReferenceValue TSCEValue::reference(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
TSCEError *TSCEValue::error() const
TSCECategoryRef *TSCEValue::categoryRef() const
This TSCEValue was not of type TSCEValueTypeCategoryRef, its type %d
TSCEFormat TSCEValue::format() const
BOOL TSCEValue::isNativelyEqual(const TSCEValue &, TSCEEvaluationContext *) const
NSString *TSCEValue::bakedString(TSULocale *__strong) const
bool TSCEValue::isNil() const
TSCEASTNodeArray *TSCEValue::newCorrespondingAST(TSCEEvaluationContext &, TSCEFunctionSpec *__strong, int, bool) const
TSCEValue TSCEValue::valueBySettingFormat(const TSCEFormat &)
const TSCEASTNodeArray *TSCEValue::unwrapThunk() const
can't call unwrapThunk() on a non-thunk!
-[TSCEBooleanCellValue compareToCellValue:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEBooleanCellValue.mm
-[TSCERemoteDataSpecifier initWithFunctionIndex:symbol:attribute:year:month:day:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERemoteDataSpecifier.mm
How does a hot specifier have a date?
How does a cold specifier not have a date?
-[TSCERemoteDataSpecifier encodeToArchive:]
 [%04zd/%02zd/%02zd]
<%@ %@ %@%@>
-[TSTTableTileGroup init]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableTileGroup.mm
-[TSTTableTileGroup _tileForLazyReference:]
Fatal Assertion failure: %{public}s %{public}s:%d Failed to load a lazy table tile in TSTTableTileGroup: %@ with error: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
Failed to load a lazy table tile in TSTTableTileGroup: %@ with error: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
Fatal Assertion failure: %{public}s %{public}s:%d Tile ID too low for this group!
NSUInteger _indexForTileID(TSTTableTileID, TSTTableTileID)
Tile ID too low for this group!
Fatal Assertion failure: %{public}s %{public}s:%d Tile ID too high for this group!
Tile ID too high for this group!
dur_
num_
-[TSCENumberCellValue compareToCellValue:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCENumberCellValue.mm
-[TSCENumberCellValue encodeToArchive:]
Expected a currency code for unit %d, locale:%@
v32@?0Q8@"NSMutableSet"16^B24
year
month
attribute
B24@?0@"TSCERemoteDataSpecifier"8^B16
(empty) 
<%tu specifiers: %tu hot, %tu cold>
-[TSTMergeRegionMap saveToArchiver:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTMergeRegionMap.mm
this should never be called!
%@, %p: for PivotTable: %@
-[TSTPencilAnnotationOwner addAnnotation:withFormula:atIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPencilAnnotationOwner.mm
Adding a formula at an index that already has an annotation
-[TSTPencilAnnotationOwner addAnnotation:withFormulaObject:atIndex:]
-[TSTPencilAnnotationOwner removeAnnotation:]
Annotations and formulas out of sync!
v32@?0@"TSTPencilAnnotation"8Q16^B24
Fatal Assertion failure: %{public}s %{public}s:%d Attempting to remove annotation at bad index %tu!
-[TSTPencilAnnotationOwner removeAnnotationAtIndex:]
Attempting to remove annotation at bad index %tu!
-[TSTPencilAnnotationOwner cellRangeForAnnotation:]
Unexpected merge range!
-[TSTPencilAnnotationOwner enumerateAnnotationsWithBlock:]
-[TSTPencilAnnotationOwner enumerateAnnotationsWithBlock:]_block_invoke
Unexpected table info on this annotation.
-[TSTPencilAnnotationOwner _enumerateAnnotationsAndFormulasWithIndexes:block:]_block_invoke
-[TSTPencilAnnotationOwner _annotationsForIndexes:]_block_invoke
annotation
-[TSTPencilAnnotationOwner _indexesForRange:startingOnly:]
self.tableModel
self.calculationEngine
-[TSTPencilAnnotationOwner _indexesForRows:]
-[TSTPencilAnnotationOwner _indexesForRows:]_block_invoke
How do we have a zero-row range here?
-[TSTPencilAnnotationOwner _enumerateIndexesIntersectingRegion:block:]
v48@?0@"TSTCellRegion"8r^{TSUCellCoord=ISBB}16Q24{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32
-[TSTPencilAnnotationOwner initWithArchive:unarchiver:forTableModel:]
Mismatched number of annotations and formulas.
TSKCellPencilAnnotations
gdtr
TSTPivotGroupingColumnOptionsMap %p
uid:%@, sortByGrTotal:%@, sortDesc:%@, repeatLbls:%@, hideTtls:%@, sortAggRuleUid:%@
v32@?0{TSUCellCoord=ISBB}8d16^B24
v28@?0S8d12^B20
-[TSTWidthHeightCache p_insertColumns:atColumn:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTWidthHeightCache.mm
attempt to insert column range beyond column width cache max columns; truncating
-[TSTWidthHeightCache p_insertRows:atRow:]
attempt to insert row range beyond row height cache max rows; truncating
-[TSTWidthHeightCache p_moveRowsFrom:toRow:]
destination cannot be within the source range.
src range for move exceeds max
dest range for move exceeds max
-[TSTWidthHeightCache p_moveColumnsFrom:toColumn:]
_columnModelWidths is not sized correctly before move
-[TSTWidthHeightCache resetFittingRowHeightsStartingWith:upToRow:]
startRow should be before endRow
-[TSTWidthHeightCache validateRowsNeedingFittingInfo:validationRegion:layoutEngine:]
rowsNeedingFittingInfo
-[TSCERemoteDataSourceFetcher init]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERemoteDataSourceFetcher.mm
Remote Data Fetcher: %@
v20@?0q8I16
-[TSCERemoteDataSourceFetcher dataKind]
-[TSCERemoteDataSourceFetcher identifier]
-[TSCERemoteDataSourceFetcher canFetchKey:]
-[TSCERemoteDataSourceFetcher sendRequestForKeys:]
-[TSCERemoteDataSourceFetcher fetchQuotesWithTickers:completion:]
-[TSCERemoteDataSourceFetcher autoCompleteQuotesWithInput:completion:]
com.apple.Numbers.TSCE.PrecedentLoading
-[TSCEFormulasToSet commonInit]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulasToSet.mm
_precedentLoadingQueue
_precedentLoadingGroup
com.apple.Numbers.TSCE.BackgroundFormulas
_backgroundProcessingQueue
-[TSCEFormulasToSet initWithCalcEngine:forMinion:options:]
A minion is required to use TSCEFormulasToSet object
-[TSCEFormulasToSet dealloc]
Deallocing %@ with %lu formulasToReset
Deallocing %@ with %lu formulasToRemove
Deallocing %@ with %lu formulasToReplace
-[TSCEFormulasToSet replaceFormula:atCellCoord:inOwner:replaceOptions:]_block_invoke
Can only place formulas at valid, non-spanning cell coords, not: %@
precedents
-[TSCEFormulasToSet _flushFormulasToReplaceWithDepTracker:startTime:timeout:]_block_invoke
-[TSCEFormulasToSet flushAllFormulaChanges]
We should be empty now, always
-[TSTTableSortOrder initWithRules:type:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableSortOrder.mm
sortRules
-[TSTTableSortOrder sortOrderByReplacingRuleAtIndex:withRule:]
Group Sort Order: trying to replace an object at an index that doesn't exist
B24@?0@"TSTTableSortRule"8@"NSDictionary"16
TSCEValue TSCEFunction___CHART::evaluateWithContext(TSCEEvaluationContext &)_block_invoke_2
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEChartFunctions.mm
apparentTractRefForTractRef let us exceeed tableSize?? (%d,%d)
-[TSTConcurrentMutableCellUIDSet reapAccumulatedCellRegionWithTable:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConcurrentMutableCellUIDSet.mm
Search not found: %{public}@
void TSCERecalcPhaseState::addNewLeaf(const TSCEInternalCellReference &, TSCEDependencyTracker *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECalcEngine.mm
Invalid ownerId for solving, leaf: %@ for formulaOwner %@ %@
(UNREGISTERED)
com.apple.Numbers.TSCE.RecalcLowPriority
com.apple.Numbers.TSCE.RecalcHighPriority
void TSCECalcEngine::initializeDispatchObjects()
_recalcLowPriorityQueue
_recalcHighPriorityQueue
_recalcDispatchGroup
_recalcLoopGroup
TSCEDebugEnableLocalVariables
com.apple.iWork.CalculationEngine
Performance
com.apple.Numbers.TSCE.writeExclusionQueue
Functions used:
void TSCECalcEngine::assertNonCalcEngineException(NSString *__strong, NSException *__strong, TSCEFormulaObject *__strong) const
Non-calcEngine NSException passed up to %{public}@: %{public}@ with formula: %{public}@
Non-calcEngine type exception passed up to %{public}@ for formula %{public}@.
Non-calcEngine NSException passed up to %{public}@: %{public}@
Non-calcEngine type exception passed up to %{public}@.
void TSCECalcEngine::dispatchOnePhase(TSCERecalcPhaseState *)
phase
dispatchOnePhase
void TSCECalcEngine::dispatchOnePhase(TSCERecalcPhaseState *)_block_invoke
Unexpected calc-engine exception passed up to enqueueTaskForCell: %{public}@
recalcPhaseHoldingReadLock
void TSCECalcEngine::recalcPhaseHoldingReadLock(TSCERecalcPhaseState *)
Unexpected calc-engine exception passed up to recalcPhaseHoldingReadLock: %{public}@ formulaOwner is: %{public}@
void TSCECalcEngine::startRecalculationTask()
cannot start recalculation thread because it is in the wrong state
void TSCECalcEngine::startRecalculationTask()_block_invoke_2
no access controller!
startRecalculationTask
Unexpected calc-engine exception passed up to startRecalculationTask loop: %{public}@
TSUError TSCECalcEngine::registerOwnerWithOwnerUID(const TSCEOwnerUID &, __strong id<TSCEFormulaOwning>, __strong id<TSCEReferenceResolving>, const TSCEOwnerUID &, TSCESubFormulaOwnerIndex)
Resolver doesn't conform to the TSCEReferenceResolving protocol.
%@ doesn't implement: -multiEvaluateFormulasAt:withCalcEngine:recalcOptions:
TSCETransaction *TSCECalcEngine::openTransaction()
There is already an open transaction on this calc-engine: %@
_currentTransaction
void TSCECalcEngine::closeTransaction(TSCETransaction *__strong)
Invalid transaction object passed in: %@
void TSCECalcEngine::replaceFormula(__strong id<TSCEFormulaReturning>, const TSUCellCoord &, const TSCEOwnerUID &, TSCEReplaceFormulaOptions)
void TSCECalcEngine::setRewritingMinion(TSCERewritingMinion *__strong)
Warning: Overwriting a pre-existing rewritingMinion with a new one
NSArray *TSCECalcEngine::rewriteSpecStack()
Need to add locking to run this on multiple threads
void TSCECalcEngine::popRewriteSpec(TSCEFormulaRewriteSpec *__strong)
Popping wrong rewriteSpec off rewriteSpecStack
Have no rewriteSpecs to pop
void TSCECalcEngine::blockUntilRecalcIsCompleteWithTimeout(NSTimeInterval)
Can't block on the calc-engine before it is started up.
void TSCECalcEngine::blockUntilRecalcTaskExitedWithTimeout(NSTimeInterval)
Can't block without an access controller
void TSCECalcEngine::resumeRecalculation()
Can't resume calculation on a closing document!
TSCEValue TSCECalcEngine::evaluateSynchedWithCalcEngineWithFormula(TSCEFormulaObject *__strong, TSCEEvaluationContext &)
TSTHeaderNameMgr *TSCECalcEngine::headerNameMgr() const
_headerNameMgr
TSCEReduceCalcEngineMsgSize
v16@?0@"TSCENamedReferenceManager"8
v16@?0@"TSTHeaderNameMgr"8
v16@?0@"TSCERemoteDataStore"8
v16@?0@"TSCEReferencesToDirty"8
TSCENumberValue::TSCENumberValue(const TSUDecimal &, TSCEBaseUnit, BOOL)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCENumberValue.mm
can't make a unitless zero with a number other than zero!
can't make a unitless zero with a unit!
virtual NSString *TSCENumberValue::string(TSCEFunctionSpec *__strong, int, TSULocale *__strong) const
No locale, falling back to current locale.
NSComparisonResult TSCENumberValue::compare(const TSCENumberValue &) const
Support for non-duration, non-currency unit comparisons is not implemented.
TSCENumberValue TSCENumberValue::percent() const
Should never call percent on a unit value!
-[TSTCellStateForLayout hasContent]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellStateForLayout.m
TSUCastAsClass(TSWPColumn, [self cellContents])
v16@?0@"TSTExpressionNode"8
<%@ %p>: isActive:%@, expressionNode:%@
B16@?0r^{TSKUIDStruct=QQ}8
Fatal Assertion failure: %{public}s %{public}s:%d Not implemented.
-[TSTPivotRowColumnOrder targetGroupFromIndex:minSourceLevel:templateUID:forDimension:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPivotRowColumnOrder.mm
Not implemented.
Fatal Assertion failure: %{public}s %{public}s:%d Not implemented for columns.
-[TSTPivotRowColumnOrder minimumCategoryLevelInRange:forDimension:]
Not implemented for columns.
<%@ %p>: completionText '%@', prefixRange %@
-[TSTStrokeLayer strokeLayerAtIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTStrokeLayer.mm
should never call this with index > 0
-[TSTMutableStrokeLayer applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:]
this interface can't be used on complex stroke layers
bodyIndexes
-[TSCEGetPivotDataBundle enumerateDataKeyValuePairsUsingBlock:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEGetPivotDataBundle.mm
Size mismatch in data/value pairs
TSCETaggedDecimal TSCETaggedDecimalList::findPivot()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCETaggedDecimalList.mm
We shouldn't be finding the pivot of a 0 length array
size_t TSCETaggedDecimalList::partitionTaggedDecimals(const TSCETaggedDecimal &)
_size == 0?
+[TSCETaggedDecimalListObject createFromVector:functionSpec:argumentIndex:evaluationContext:ignoreError:ignoreDuplicates:]
Have to set the type of vector appropriately. currentType = %d
-[TSTConcurrentStylesheet variationOfStyle:propertyMap:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConcurrentStylesheet.mm
stylesheet used should be same as the one owning the style
All at Once
By Row
By Column
By Cell
By Row Content
By Column Content
By Cell Content
By Row Reverse
By Row Content Reverse
By Column Reverse
By Column Content Reverse
By Cell Reverse
By Cell Content Reverse
+[TSTAnimation textureDeliveryStyleFromDeliveryString:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTAnimation.mm
bad delivery string to delivery style mapping
void TSTHeaderPerTable::addHeaderUid(const TSKUIDStruct &, BOOL)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTHeaderNameMgr.mm
_headerRowUids
-[TSTHeaderNameMgrTile saveToArchiver:]
-[TSTHeaderNameSubset headerCellsMatchingPrefix:]
Warning: asking for prefix matching, but this search result didn't specify prefixes when it was created
%@ for '%@'
-[TSTHeaderNameMgr findTileForString:findClosest:foundAtOffset:]
midTile
-[TSTHeaderNameMgr handleFullTile:]
Could NOT split tile of %lu size for some reason
-[TSTHeaderNameMgr spanningRangeForHeaderCell:]
tracked header reference is not in a header?  (%@ vs body %@)
@"TSTIndexingChunk"24@?0{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
@32@?0@"<TSTCellIteratorData>"8@"TSTIndexingChunk"16@24
-[TSTCellDiffMap initWithContext:cellDiffArray:cellUIDList:uidBased:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellDiffMap.mm
Nil cellDiffArray
Nil cellUIDList
unexpected diff/uidlist ratio
-[TSTCellDiffMap addCellDiff:andCellUID:avoidCopy:]
cannot add cellUIDs in cellID mode
can't add cells to a one-to-many mapping
-[TSTCellDiffMap addCellDiff:andCellID:avoidCopy:]
cannot add cellIDs in UID mode
-[TSTCellDiffMap addCellDiffMap:]
both maps should match isUIDBased state
-[TSTCellDiffMap addCellDiffs:atCellUIDs:]
map should be UIDBased
cellDiffs and cellUIDList should match in length
-[TSTCellDiffMap appendCellDiffMap:]
Trying to append a cellID cellDiffMap to a uidBased diff map. Aborting.
v64@?0@"TSTCellDiff"8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16Q48^B56
Trying to append a uidBased cellDiffMap to a cellID diff map. Aborting.
v40@?0@"TSTCellDiff"8{TSUCellCoord=ISBB}16Q24^B32
B24@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8Q16
B24@?0{TSKUIDStruct=QQ}8
-[TSTCellDiffMap enumerateElementsUsingBlock:]
cannot enumerate cellUIDs in cellID mode
-[TSTCellDiffMap enumerateCellIDElementsUsingBlock:]
cannot enumerate cellIDs in UID mode
v16@?0@"TSTCellDiffArray"8
<%@: %p>:
-[TSTTableViewSortRule baseIndex]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableSortRule.mm
Base index is not valid on TSTTableViewSortRule.
-[TSTTableViewSortRule encodeToArchive:]
TSTTableViewColumnSortRule should never be archived
-[TSTTableViewSortRule initFromArchive:]
TSTTableViewColumnSortRule should never be unarchived
-[TSTGroupValueTuple updateWithDocumentRoot:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGroupValueTuple.mm
+[TSTGroupValueTuple groupValueUidForTuple:appendingTuple:]
upperTuple
lowerTuple
-[TSTGroupValueTuple groupValueTupleByReplacingValue:atLevel:]
Don't try to replace value for the root
%{public}@: level %d is beyond this tuple's size
-[TSTGroupValueTuple groupValueTupleByRemovingValueAtLevel:]
Removing from level %d of a %d-level tuple
%@ [
%@'%@'
[%@] = 
TSTiOSCheckboxChecked6
TSTiOSCheckboxChecked12
TSTiOSCheckboxChecked18
TSTiOSCheckboxChecked24
TSTiOSCheckboxUnchecked6
TSTiOSCheckboxUnchecked12
TSTiOSCheckboxUnchecked18
TSTiOSCheckboxUnchecked24
+[TSTCheckboxRenderer frameWithViewScale:contentFrame:checked:outCheckboxImage:outCheckboxSize:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCheckboxRenderer.m
No checkbox image for rendering!
v28@?0I8d12^B20
-[TSTColumnRowUIDMapper disconnect]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTColumnRowUIDMapper.mm
No longer have a mapper - disconnected multiple times?
Mappers version counter was already off %lu vs %lu
Should have preserved the versionCounter
-[TSTCategoryStoreIterator initWithInfo:region:flags:searchMask:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCategoryStoreIterator.mm
_info.baseTableModel.dataStore
_info.summaryModel.dataStore
searchMask remain 0x%x, should be consumed by this point
-[TSTCategoryStoreIterator dealloc]
iteration should be terminated
-[TSTCategoryStoreIterator updateCellData:]
_baseTile
_baseRow
incomplete map.
cellRef
this is odd case, iterator found cell at this cellID, but then no cellRef
-[TSTCategoryStoreIterator updateFormulaForCellData:]
this is an odd case, iterator found cell at this cellID, but then no cellRef
-[TSTCategoryStoreIterator getNext]
invalid columnUID
should now have a row that intersects the region
couldn't find offset, that's not good.
should now have a valid cellID at this point
-[TSCEFormulaOwnerWrapper initWithFormulaOwnerUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulaTranslationFlags.mm
Requires a valid ownerUID
-[TSWPStorage(TablesAdditions) hyperlinkCellID]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSWPStorage_TablesAdditions.mm
cell attribute array should not be empty
-[TSTCategoryAggregateFormulaOwner tableInfo]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCategoryAggregateFormulaOwner.mm
Someone is asking for a tableInfo, but we are not registered with the calcEngine yet
Table %@ is not registered with the calcEngine yet
-[TSTCategoryAggregateFormulaOwner setTableInfo:]
don't allow overwriting table info pointer, should go from nil -> info
Wrong class passed to setTableInfo: %@
-[TSTCategoryAggregateFormulaOwner evaluateFormulaAt:withCalcEngine:recalcOptions:]
Table has no calc engine. Aborting recalculation.
-[TSTRichTextPayload initWithContext:storage:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTRichTextPayload.mm
v24@?0r^{TSCEColumnReference=ISC}8^B16
v24@?0r^{TSCEColumnRangeReference=IISC}8^B16
void TSCESpanningDependencies::readFromArchive(const TSCE::SpanningDependenciesArchive &)_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCESpanningDependencies.mm
NULL spanning dependencies for table: %{public}@
v28@?0{TSCEColumnRangeContextPair=IC}8{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16
void TSCESpanningDependencies::unpackAfterUnarchive()_block_invoke
v32@?0r^{TSCEColumnRangeReference=IISC}8r^{TSUCellCoord=ISBB}16^B24
v32@?0r^{TSCEColumnReference=ISC}8r^{TSUCellCoord=ISBB}16^B24
void TSCESpanningDependencies::dirtyAllFormulasReferencingRange(TSCERangeCoordinate)
invalid input range
dirty precedents count consistency error - cell: %@ in table: %@
v20@?0{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}8
TSCEFormulaRangeContext formulaRangeContextForArchivedContext(const TSCE::SpanningDependenciesExpandedArchive::RangeContext &)
unknown range dependency context found in archive! Archive is corrupt.
virtual TSCEASTElement *TSCEASTConvertToUidRefsRewriter::anyReferenceNode(TSCEASTRelativeCoordRefElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTConvertToUidRefsRewriter.mm
Unhandled reference type
virtual TSCEASTElement *TSCEASTConvertToUidRefsRewriter::colonTractNode(TSCEASTColonTractElement *)
-[TSTSummaryCellVendor setAggregateType:forColumnUID:atGroupLevel:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTSummaryCellVendor.mm
Not implemented for pivot tables.
-[TSTSummaryCellVendor cellSpecForAggregateType:forColumnUID:atGroupLevel:]
-[TSTSummaryCellVendor setCell:atCellUID:]
Setting vendor cell for a pivot table
Setting vendor cell with an invalid cellUID
Invalid aggregate type in summary cell vendor - BodyRows
Invalid aggregate type in summary cell vendor - Label
-[TSTSummaryCellVendor getCell:atCellUID:]
Getting vendor cell for a pivot table
cell should never be nil
Getting vendor cell with an invalid cellUID
-[TSTSummaryCellVendor removeCellsInColumnUid:]
-[TSTSummaryCellVendor cellMapForWildcardCells]
-[TSTSummaryCellVendor runChange:withSummaryCellMap:migrationHelper:]
kTSCERecalcLoopGroupEmpty%u
+[TSTTableFilterRule getPredArgDataFromCell:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableFilterRule.mm
Expected a cell without an error to make a quick filter rule.
TSTTableFilterRule %p: %@
-[TSTTableFilterRule matchesCell:]
Unexpected predicate argument type!
-[TSTTableFilterSet p_downgradedFilterRuleForListItem:fromPredicate:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableFilterSet.mm
Don't have a TSTFormulaPredicateTypeDateIsNotTheDate predicate type, but need one.
Invalid Predicate Arg Data for list item
-[TSTTableFilterSet downgradeFilterSetForBackwardCompatWithLocale:]
newRule
Unexpected predicate type during downgrade!
-[TSTTableFilterSet p_thresholdComparisonMatchesFilter:withPredicateType:]
Unexpected predicate type found when calculating threshold
-[TSTTableFilterSet rowIsShown:withHiddenStateExtent:withCalcEngine:]
Unexpected threshold value type found
-[TSTTableFilterSet ruleInFilter:atIndex:]
filter index invalid
rule index invalid
-[TSTTableFilterSet filterAtIndex:inTable:]
-[TSTTableFilterSet removeRulesWithAbsoluteIndices:]
invalid rule index passed in
-[TSTTableFilterSet removeRulesWithIndices:inFilter:]
filter index is out of bounds
rule indices are out of bounds
-[TSTTableFilterSet p_addRules:atRuleIndices:inFilter:isNew:]
no rules given
-[TSTTableFilterSet addRules:inFilter:]
-[TSTTableFilterSet replaceRule:atRuleIndex:inFilter:]
-[TSTTableFilterSet replaceRuleAtAbsoluteIndex:withRule:]
Insufficient rules to replaceRuleAtAbsoluteIndex: %lu
-[TSTTableFilterSet enumerateRulesInFilterIndex:usingBlock:]
-[TSTTableFilterSet ruleIndexInFilter:matchingCell:]
-[TSTTableFilterSet numberOfRulesInFilter:]
Fatal Assertion failure: %{public}s %{public}s:%d Modern filter sets shouldn't have pre-pivot rules!
-[TSTTableFilterSet loadFromArchive:unarchiver:]
Modern filter sets shouldn't have pre-pivot rules!
+[TSCECategoryRef relativeAncestorGroupUid:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECategoryRef.mm
levelsUp of %d is too large.
-[TSTFormulaPredicate initWithPredicateType:arg1:arg2:qualifier1:qualifier2:argumentCellRef:hostCell:forConditionalStyle:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTFormulaPredicate.mm
Conditional styles are not allowed to use anything other than an arg0 of (+0,+0) relative coordinate
-[TSTFormulaPredicate p_creatorForPeriodBoundaryWithScale:direction:offset:argIndex:earlierBound:isCalPers:]
Not a valid date scale
This is expected to be unreachable.
-[TSTFormulaPredicate recreateFormula]
Should already have _predArg0 defined
-[TSTFormulaPredicate p_argTypeForPredArg:argNum:calculationEngine:hostCell:]
A categoryRef as arg 0, I don't think so
A viewTractRef as arg 0, I don't think so
-[TSTFormulaPredicate evaluateAtCellID:onOwnerUID:calcEngine:]
Need both of these set
-[TSTFormulaPredicate setArgumentAt:withPredArg:]
Only a limited set of types are allowed for predArg0, and not %d
%@: Not allowed for argument at position %d
-[TSTFormulaPredicate p_populateMembersFromFormula]
We don't have valid offsets at the moment
-[TSTFormulaPredicate copyByRewritingWithSpec:inOwner:inCellCoordinate:]
-[TSTFormulaPredicate upgradeTopAndBottom]
_predArg0
-[TSTFormulaPredicate encodeToPrePivotArchive:archiver:encodingForSOS:]
We need to be backward compatible to use this archiving method
-[TSTFormulaPredicate initFromArchive:]
Have to have archived the _predArg0 argument for upgraded archive format
-[TSTArchivedStrokeSelection setSelection:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTArchivedStrokeSelection.mm
Wrong type of class %@ (expected TSTStrokeSelection)
TSTTableBadgeImageCache
TSUImage *TSTTableBadgeCachedImageForName(NSString *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableBadge.m
TSTTableBadge failed to load image %@
TSTErrorMessageIcon
+[NSCharacterSet(TSCEAdditions) tsce_singleQuoteCharacterSet]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/NSCharacterSetAdditions.m
(){}+-*/^%:,!&=><$"'#;|
%C%C%C
%C%C%C%C%C%C%C
%C%C
%C%C%C%C%C%C%C%C%C%C%C%C%C%C%C%C%C%C%C%C%C%C
+[NSCharacterSet(TSCEAdditions) tsce_characterSetRequiringSingleQuotes]_block_invoke
.%C%C
+[NSCharacterSet(TSCEAdditions) tsce_periodCharacterSet]_block_invoke
+[NSCharacterSet(TSCEAdditions) tsce_internationalWhitespaceCharacterSet]_block_invoke
+[NSCharacterSet(TSCEAdditions) tsce_internationalWhitespaceAndNewlineCharacterSet]_block_invoke
+[NSCharacterSet(TSCEAdditions) tsce_internationalColonCharacterSet]_block_invoke
+[NSCharacterSet(TSCEAdditions) tsce_dollarSignCharacterSet]_block_invoke
,%C%C;%C%C%C
+[NSCharacterSet(TSCEAdditions) tsce_listDelimiterCharacterSet]_block_invoke
-[TSTCellRegion regionByTrimmingAroundRowIndices:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellRegion.mm
-[TSTCellRegion regionByTrimmingAroundColumnIndices:]_block_invoke
-[TSTCellRegion prunedCellRegionAgainstTable:behavior:usingBlock:]
-[TSTCellRegion containsCellRange:]_block_invoke
areaRemaining should be greater than the intersection area
-[TSTCellRegion p_copyFromRegion:]
-[TSTCellRegion p_insertRangeIntoRegion:]
Added range:%{public}@ should never overlap previous range:%{public}@ in region:%{public}@.
<%@ %p boundingbox={ %@ }
 cellRanges={empty}>
 cellRanges={
  { %@ }
-[TSCEUndoTractList addToIncludedUidsTractColumnUids:rowUids:isRangeRef:preserveRectangularRange:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEUndoTractList.mm
Combining a spanning and non-spanning TSKUIDStructVector vector
<%@> sticky:%d Tracts: 
  %@
-[TSCEUndoTractList(FullTuple) initAsFullTupleForColumnHeaderUid:rowHeaderUid:aggregateRuleUid:flatteningDimension:]
Not a valid TSTTableDimension value: %d
-[TSCEStock init]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEStock.mm
-[TSCEStock initFromArchive:]
-[TSCEStock encodeToArchive:]
_symbol
NULL
-[TSCEStock valueForAttribute:]
Can't fetch an unknown attribute!
-[TSCEStock valueForAttribute:forLocale:]
en_US
MMMdyyyyhhmmzzz
%1.2F
%1.0F
Number suffix - trillions
Number suffix - billions
Number suffix - millions
Number suffix - thousands
-[TSCEStock p_populateAttributesFromArray:]
self.symbol
en_US_POSIX
yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'
void TSCECellRecordTile::updateIndexesForCellRecord(const TSCECellRecord &, TSCECellDependencies *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECellRecordTile.mm
cellDependencies
BOOL TSCECellRecordTile::replaceCellRecord(TSCECellRecord &, TSCECellDependencies *)
cellRecord can't handle multiple self references
BOOL TSCECellRecordTile::replaceCellRecord(TSCECellRecord &, TSCECellDependencies *)_block_invoke
edge pointing to nonexistant table found: %lu
BOOL TSCECellRecordTile::deleteCellRecord(TSCECellRecord *, TSCECellDependencies *)
invalid cell record delete attempt
failed to realloc cell record storage
void TSCECellRecordTile::sortCellRecords()
no duplicate cell records permitted
std::vector<TSCECellRecord *> TSCECellRecordTile::sortedCellRecordVector() const
void TSCECellRecordTile::appendExpandedEdgeToArchive(TSCE::ExpandedEdgesArchive *, const TSCEInternalCellReference &) const
_wrapper
-[TSCECellRecordTileWrapper unpackAfterUnarchiveForCellDependencies:]
-[TSTTableTranslator init]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableTranslator.mm
-[TSTTableTranslator tableAreaForCellID:]
expecting this method to be overridden
-[TSTTableTranslator cellValueTypeAtCellID:]
-[TSTTableTranslator defaultCellStyleForCellID:useSoftDefault:outSource:]
-[TSTTableTranslator defaultTextStyleForCellID:useSoftDefault:outSource:]
-[TSTTableTranslator cellStyleAtCellID:isDefault:]
-[TSTTableTranslator textStyleAtCellID:isDefault:]
-[TSTTableTranslator defaultStylesForCellID:useSoftDefault:outCellStyle:outTextStyle:]
-[TSTTableTranslator conditionalStyleSetAtCellID:]
-[TSTTableTranslator stringAtCellID:optionalCell:]
-[TSTTableTranslator getCell:atCellID:suppressCellBorder:]
-[TSTTableTranslator hasFormulaAtCellID:]
-[TSTTableTranslator formulaAtCellID:]
-[TSTTableTranslator postCommentNotificationForStorage:atViewCellCoord:notificationKey:]
-[TSTTableTranslator commentHostingAtCellID:forCommentStorage:]
-[TSTTableTranslator commentHostingAtCellID:]
-[TSTTableTranslator mergeRangeAtCellID:]
-[TSTTableTranslator mergeOriginForCellID:]
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@?0{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
-[TSTTableTranslator cellUIDForSummaryCellCoord:]
no summeries in normal table mode
-[TSTTableTranslator cellExistsAtCellID:]
-[TSTTableTranslator hasCommentAtCellID:]
requires identity mapping from view to model space
-[TSTTableTranslator resetViewMap]
view and base must be the same while uncategorized.
+[TSCEFunctionSpec functionSpecForFunctionName:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFunctionSpec.mm
functionSpecForFunctionName: expects US function names, but %@ (US is %@) was passed in.
+[TSCEFunctionSpec unsupportedFunctionNameForLocale:]
Unsupported
-[TSCEFunctionSpec loadRepeatingArguments]
I don't think we ever use higher than 2, actually, certainly not repeatingGroupSize: %hd
origArgIndex out of bounds: %lu
-[TSCEFunctionSpec argumentSpecForIndex:]
translatedIndex out of bounds: %lu
%@%i%@
TSCEValue TSCEFunction_INTERSECT_RANGES::evaluateWithContext(TSCEEvaluationContext &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCELookupReferenceFunctions.mm
Should have detected bad reference during loop
Bad reference should have been detected earlier
TSCEValue TSCEFunction_LOOKUP::evaluateWithContext(TSCEEvaluationContext &)
In function LOOKUP, Should not reach here, user result table should be 1-D.
static NSComparisonResult TSCEFunction_MATCH::compareValue(TSCEValue &, TSCEValue &, TSCEEvaluationContext &)
In function MATCH, should not reach here.
void TSCEFunction_UNION_RANGES::determineShapeOfCellList(std::vector<TSCECellRef>, bool, bool &, bool &, bool &, NSUInteger &)
can't have invalid cell references here
0 first row width should be impossible.
TSCEValue TSCEFunction_UNION_RANGES::evaluateWithContext(TSCEEvaluationContext &)
indices inside a range reference should be references.
each index inside a range reference should be just one cell.
contiguous should imply rectangular
rectangular references should have rowWidth rows
-[TSTIdentifierNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTIdentifierNode.mm
Unexpected object in initAsCopyOf:... expected TSTIdentifierNode, got %@
-[TSTIdentifierNode buildASTNodeArray:hostCell:symbolTable:]
IdentifierNode shouldn't have any children
<%@:%p size %f count %u hiding 0x%02hx cstyle %p tstyle %p
-[TSTConditionalStyleRule predicateType]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConditionalStyleRule.mm
_predicate
-[TSTConditionalStyleRule setCellStyle:textStyle:]
Can't replace styles!
TSTConditionalStyleRule %p: %@ => %@, %@
CS Predicate: %@
<%@>:
  %@ = %@
  %@ = null
-[TSCEFormulasForUndo splitIntoChunksForExcessiveSize]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulasForUndo.mm
Can't split FormulasForOwner that uses formulaStrings (TSTCommandRewriteFormulasForTranspose)
v24@?0@"TSCEFormulaObject"8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
  ownerKind %d = %@
static TSCENumberFormat TSCENumberFormat::defaultNumberFormatForCurrency(TSULocale *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormat.mm
TSCEBaseFormat::TSCEBaseFormat(TSKBaseFormat *__unsafe_unretained)
TSCEBaseFormat has no defaults for nil TSKBaseFormat
TSCEFormat::TSCEFormat(const TSUFormatType)
This TSCEFormat constructor not supported for this type: %d
static TSCEFormat TSCEFormat::createDefaultCurrencyUsingLocale(TSULocale *__strong)
For currency, use the constructor that passes in a locale, and use the document locale.
void TSCEFormat::setFormatType(TSUFormatType)
setFormatType() not allowed in general, type change attempted: %d -> %d
TSCEFormat::TSCEFormat(const TSUFormatType, const TSCENumberFormat &)
Creating a non-number formatType but initializing the numberFormat iVar.
bool TSCEFormat::isEqualNotCountingExplicitness(const TSCEFormat &) const
Trying to compare unexpected type %d.
TSCENumberFormat TSCEFormat::numberFormat() const
Format is not of this type.  Can't return this.
TSCEFractionFormat TSCEFormat::fractionFormat() const
TSCEBaseFormat TSCEFormat::baseFormat() const
TSCEDurationFormat TSCEFormat::durationFormat() const
TSKDateTimeFormat *TSCEFormat::dateTimeFormat() const
TSKCustomFormatWrapper *TSCEFormat::customFormat() const
TSKBooleanFormat *TSCEFormat::booleanFormat() const
-[TSTConditionalStyleSet copyToGeometricFormWithRewriteContext:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConditionalStyleSet.mm
Trying to rewrite a conditional style with a non-conditionalStyleFormulaOwner containing ownerUID: %@
-[TSTConditionalStyleSet copyByRepairingBadReferences:]
<%@: %p>: Rules:
CS Rules: 
-[TSTConditionalStyleFormulaOwner initWithTableModel:ownerUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConditionalStyleFormulaOwner.mm
TSTConditionalStyleFormulaOwner: requires a valid ownerUID, table is: %@ (%@)
TSCEReferenceValue::TSCEReferenceValue(TSCEEvaluationContext &, const TSCEOwnerUID &, const TSCERangeCoordinate &, const TSUPreserveFlags &, BOOL)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEReferenceValue.mm
Invalid attempt to create a reference value with an invalid tableUID.
TSCEReferenceValue::TSCEReferenceValue(TSCEEvaluationContext &, const TSCEOwnerUID &, const TSCERelativeRangeCoordinate &, const TSUPreserveFlags &)
TSCEReferenceValue::TSCEReferenceValue(TSCEEvaluationContext &, const TSCEOwnerUID &, const TSCERelativeCellCoordinate &, const TSUPreserveFlags &)
-[TSCETrackedReference replaceContentsWithContentsOfTrackedReference:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCETrackedReference.mm
can't replace contents with contents of a nil tracked reference
-[TSCETrackedReference referencesForCalcEngine:referenceTrackerUID:]
Non-nil TSCEReferenceSetWrapper is required to use referencesForCalcEngine:
-[TSCETrackedReference precedentsWithCalcEngine:hostOwnerUID:]
Non-nil precedents pointer is required to use precedentsWithCalcEngine:
static TSCECellRef TSTConvertFormulasToBaseForCategoriesRewriter::convertedContainingCellRefForColonTractRewrites(TSCEFormulaRewriteContext &, TSTFormulaCoordinateSpace, TSTFormulaRewriteSpec *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConvertFormulasFromBaseForCategoriesRewriter.mm
convertedContainingCellRefForColonTractRewrites: No coordMapper found for tableUID: %@
virtual TSCEASTElement *TSTConvertFormulasToBaseForCategoriesRewriter::colonTractNode(TSCEASTColonTractElement *)
How did this happen? refTableUID is invalid in TSTConvertFormulasFromChromeToBaseForCategoriesRewriter::colonTractNode
srcCoordMapper
v36@?0r^{TSUCellCoord=ISBB}8S16r^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}20^B28
TSCERangePrecedentsTile *TSCERangeDependencies::findTileForToOwnerId(TSCEInternalFormulaOwnerID, BOOL)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERangeDependencies.mm
v32@?0r^{TSUCellCoord=ISBB}8r^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16^B24
void TSCERangeDependencies::readFromArchive(const TSCE::RangeDependenciesArchive &)
corrupted range dependencies archive
void TSCERangeDependencies::readFromExpandedArchive(const TSCE::RangeDependenciesArchive &)
void TSCERangeDependencies::unpackAfterUnarchive()
precedentRangeDependencies
Fatal Assertion failure: %{public}s %{public}s:%d at the moment we don't handle this well
-[TSTCategoryOrder targetGroupFromRowIndex:minSourceLevel:templateRowUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCategoryOrder.mm
at the moment we don't handle this well
TSURowIndex TSTUidOrderNode::firstIndex()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTUidOrderNode.mm
Sorting category/pivot order: Never should a group be empty
void TSTUidOrderNode::_orderUsingGroupByAndMaps(TSTGroupBy *__strong, BOOL, int, int, TSTColumnRowUIDMap *__strong, TSTColumnRowUIDMap *__strong, BOOL)
Too many number of levels for this order algorithm.
Level mismatch between the groupBy and the order node tree
TSCECellTractRefCore::TSCECellTractRefCore(const TSUCellCoord &, const TSUCellCoord &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECellTractRefCore.mm
Both coords must be spanning in the same direction %{public}@ vs %{public}@
TSCECellTractRefCore::TSCECellTractRefCore(const TSUCellCoord &, const TSUCellCoord &, const TSKUIDStruct &)
uint32_t TSCECellTractRefCore::numColumns() const
Don't ask for numColumns when we spansAllColumns
uint32_t TSCECellTractRefCore::numRows() const
Don't ask for numRows when we spanAllRows
void TSCECellTractRefCore::addColumn(TSUColumnIndex)
void TSCECellTractRefCore::addRow(TSURowIndex)
void TSCECellTractRefCore::addColumnRange(const TSUIndexRange &)
addColumnRange: should only be used with absolute indexes: %@
void TSCECellTractRefCore::addRowRange(const TSUIndexRange &)
addRowRange: should only be used with absolute indexes: %@
TSUCellCoord TSCECellTractRefCore::coordAtColumnOffset(TSUColumnOrRowIndex, TSUColumnOrRowIndex) const
Not really expecting spanning CellTractRef to be used here
ndtri
+[TSTGroupBy(ChangeGroups) groupingComboForGroupingType:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGroupBy_ChangeGroups.mm
This grouping type isn't supported in this release
+[TSTGroupBy(ChangeGroups) p_dateBySettingUnit:value:ofDate:inCalendar:]
Continued looping trying to set date %@ to week number %lu
v24@?0r^{TSTGroupingLevelAndType=SC}8^B16
-[TSTTableInfo(Reorganize) p_mappingForSortingRowsOrColumns:withRules:dimension:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableInfo_Reorganize.mm
Can't sort by an empty rule list!
Expected sort tag count:%lu to match itemCount:%lu.
q24@?0@"TSTTableSortTag"8@"TSTTableSortTag"16
Index out of range!
-[TSTTableInfo(Reorganize) sortTagsForSortingColumns:byRows:]_block_invoke
reorganizeValue
v32@?0@"TSTTableSortTag"8Q16^B24
-[TSTTableInfo(Reorganize) sortTagsForSortingRows:byColumns:]_block_invoke
-[TSTTableInfo(Reorganize) mappingFromRowUids:toRowUids:]
From index out of range!
-[TSTCategoryTranslator maxVisibleRowLevel]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCategoryTranslator.mm
Unimplemented!
-[TSTCategoryTranslator startOfGroupingChangesBatch]
overflow in _groupingsChangingLevel
-[TSTCategoryTranslator endOfGroupingChangesBatch]
endOfGroupingChangesBatch called without matching startOfGroupingChangesBatch - avoided underflow
-[TSTCategoryTranslator resetViewMap]
view and base cannot be the same while categorized
-[TSTCategoryTranslator suspendChangeDescriptorNotificationsDuringBlock:]
not expecting multiple suspensions
+[TSTCategoryTranslator tableStyleAreaForCategoryLevel:isLabel:]
Calling tableStyleAreaForCategoryLevel with an invalid level
Category Column
i28@?0r^{TSUModelCellCoord={TSUCellCoord=ISBB}}8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16C24
i20@?0C8r^{TSKUIDStruct=QQ}12
i12@?0{TSUViewRowIndex=I}8
-[TSTCategoryTranslator setCellStyle:ofRowAtIndex:]
Categories: cannot set cell style for that row
-[TSTCategoryTranslator setTextStyle:ofRowAtIndex:]
Categories: cannot set text style for that row
-[TSTCategoryTranslator setCellStyle:ofColumnAtIndex:]
Categories: setting cell style on unknown column
-[TSTCategoryTranslator setTextStyle:ofColumnAtIndex:]
Categories: setting text style on unknown column
v18@?0{TSUModelColumnIndex=S}8r^{TSKUIDStruct=QQ}10
-[TSTCategoryTranslator conditionalStyleSetAtCellID:]
Categories: cannot get conditional style for that cell
-[TSTCategoryTranslator regionForValueOrCommentCellsInRange:]
Categories: cannot resolve region for cell rect
-[TSTCategoryTranslator p_applyViewCellCoord:toSummaryUsingBlock:toLabelUsingBlock:toCategoryColumnUsingBlock:toBaseUsingBlock:]
summary row does not have a valid summary row uid
-[TSTCategoryTranslator p_applyViewColumnIndex:toCategoryColumnUsingBlock:toBaseUsingBlock:toBeyondBoundsUsingBlock:]
Categories: this column is not is not in the base table
-[TSTCategoryTranslator heightOfRowAtIndex:isDefault:]
uid must be label or summary
-[TSTCategoryTranslator rowHeights]
Categories: cannot get row heights.
-[TSTCategoryTranslator columnWidths]
Categories: cannot get column widths.
-[TSTCategoryTranslator setHeight:ofRowAtIndex:]
Categories: cannot set height of this row
-[TSTCategoryTranslator setWidth:ofColumnAtIndex:]
Categories: cannot set width of this column
-[TSTCategoryTranslator removeRowsAtIndex:count:]
Categories: row removal method is not supported.
-[TSTCategoryTranslator removeColumnsAtIndex:count:]
Categories: column removal method is not supported.
-[TSTCategoryTranslator postCommentNotificationForStorage:atViewCellCoord:notificationKey:]
Categories: cannot post notification for comment/cell/key
-[TSTCategoryTranslator commentHostingAtCellID:forCommentStorage:]
Categories: cannot resolve comment for cell/storage
-[TSTCategoryTranslator commentHostingAtCellID:]
Categories: cannot resolve comment for cell
-[TSTCategoryTranslator moveColumnRange:toColumnIndex:]
Categories: could not move column
-[TSTCategoryTranslator cellIDForCellContainingRichTextStorage:]
Categories: cannot resolve cell for this rich text storage
-[TSTCategoryTranslator mergeCellRange:]
attempting to merge a disjoint cell region
-[TSTCategoryTranslator mergeRangeAtCellID:]
found a disjoint merge range
-[TSTCategoryTranslator mergedGridIndicesForDimension:]
should not be any merged row grid indexes in the body range
-[TSTCategoryTranslator enumerateMergesIntersectingCellRegion:usingBlock:]_block_invoke
Unexpected view source merge region for categorized table: %@
-[TSTCategoryTranslator mergeRangesIntersectingRange:]_block_invoke
-[TSTCategoryTranslator mergeRangesIntersectingCellRegion:]_block_invoke
-[TSTCategoryTranslator mergeRangesAndCrumbsIntersectingRange:]_block_invoke_2
-[TSTCategoryTranslator insertColumnsAtIndex:uids:metadatas:tableArea:]
Categories: destination column is not in the header
Categories: table area should be body
-[TSTCategoryTranslator insertRowsAtIndex:uids:metadatas:tableArea:unsetFilterHidingAction:]
Categories: destination row is not in the actual header
Categories: destination row is not in the footer
columnUids: %@
rowUids: %@
%@ mergeSource: %@ mergeRegion: %@
merge origin map:
%@ -> %@
srcTableUID: %@
srcColumnUids: %@
srcRowUids: %@
dstTableUID: %@
dstColumnUids: %@
dstRowUids: %@
-[TSCEFormulaRewrite_RegionMovedInfo loadIndexesFromRegions]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulaRewrite_RegionInfo.mm
Expecting source and dest regions to be the same size
No rows match the filter conditions.
@8@?0
v32@?0{_NSRange=QQ}8@24
BOOL TSTCellCoerceCellToFormat(TSTCell *__strong, TSUFormatType)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCell_CoercionEngine.mm
Illegal format type for coercion: %{public}@
Attempting to coerce a cell with mismatched format and value types
BOOL TSTCellCoerceEmptyCellToFormat(TSTCell *__strong, TSUFormatType)
Cannot coerce to %@
BOOL TSTCellCoerceTextCellToNumberFormatWithSeparatorFixing(TSTCell *__strong, TSUFormatType)
Need to have a locale set here.
BOOL TSTCellcoerceTextCellToBestNumberFormatUsingLimitedParsing(TSTCell *__strong, BOOL, BOOL)
unexpected format type
-[TSTCell(Coercion) replaceContentWithParsableString:tableInfo:cellID:flags:outControlWasRemoved:]
Cell must have its locale set in replaceContentWithParsableString:
-[TSTCellStyle(CellDiffAdditions) objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:optionalConcurrentStylesheet:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellStyle+CellDiffAdditions.m
Can't specify both a cell style and a cell style change at the same time.
-[TSTDataStoreIterator initWithModel:region:flags:searchMask:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTDataStoreIterator.mm
_dataStore
cannot specify both walk right to left and walk bottom to top
-[TSTDataStoreIterator updateCellData:]
_curTile
_curRow
-[TSTDataStoreIterator updateFormulaForCellData:]
-[TSTDataStoreIterator getNext]
-[TSCEAggregateGrid initWithGrids:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEAggregateGrid.mm
failed to allocate memory
-[TSCEAggregateGrid valueAtGridCoord:accessContext:]
2D array access not implemented for class %@
-[TSCEAggregateGrid valueAtIndex:accessContext:]
SFTArgumentAccessor consistency violation
-[TSCEAggregateGrid deepType:]
Shouldn't call deepType on an %@ class
-[TSCEAggregateGrid string:argIndex:locale:]
TSCEAggregateGrid doesn't have a meaningful string() to provide
void TSCEVolatileDependencies::readFromArchive(const TSCE::VolatileDependenciesArchive &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEVolatileDependencies.mm
corrupt volatile dependency tracker archive
bool TSCEVolatileDependencies::addVolatileGeometryReference(const TSCEInternalCellReference &)
NULL volatile dependencies
com.apple.iWork.TSTPerformance
General
-[TSTGroupingColumn setFunctorForType]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGroupingColumn.mm
should not attempt to use an invalid grouping type
-[TSTGroupingColumn p_groupingFormatWithLocale:]
yyyy
LLLL yyyy
EEEE
M/d/yyyy
yyyy'-W'w
yyyy-QQQ
LLLL
Value
Year
Year-Month
Day of Week
Year-Month-Day
Year-Week
Year-Quarter
Month
Quarter
TSCEArchives.proto
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/messages/src/TSCEArchives.pb.cc
-[TSTConvertFormulasForCategoriesByRewritingWrapper initWithCalcEngine:rewriteSpec:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConvertFormulasForCategoriesByRewritingWrapper.mm
Why are we even being created for a non-move rewriteSpec: %d
-[TSTConvertFormulasForCategoriesByRewritingWrapper convertFromBaseToChromeForCategorizedTableMove:containingCell:]
srcColumnUids
srcRowUids
dstColumnUids
dstRowUids
-[TSTConvertFormulasForCategoriesByRewritingWrapper convertFromChromeToBaseForCategorizedTableMove:containingCell:]
void TSCECellRefSet::encodeToArchive(TSCE::InternalCellRefSetArchive &, TSCEDependencyTracker *) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECellRefSet.mm
-[TSTPivotStoreIterator initWithInfo:region:flags:searchMask:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPivotStoreIterator.mm
info.baseTableModel.dataStore
info.summaryModel.dataStore
-[TSTPivotStoreIterator updateCellData:]
_summaryRow
-[TSTPivotStoreIterator updateFormulaForCellData:]
-[TSTPivotStoreIterator getNext]
Unexpected cell coordinate while iterating.
-[TSTTableModel(FormulaOwner) registerWithCalcEngineForDocumentLoad:ownerKind:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTable_FormulaOwner.mm
-[TSTTableModel(FormulaOwner) registerWithCalcEngineForDocumentLoad:ownerKind:]_block_invoke
can't translate a non-formula cell
-[TSTTableModel(FormulaOwner) performReadForOneOffFormulaEvaluation:forCellCoord:]
Evaluating non-formula cell.
-[TSTTableModel(FormulaOwner) evaluateFormulaAt:withCalcEngine:recalcOptions:]
Table model has no calc engine. Aborting recalculation.
Inconsistent calcEngines
Cell %@::%@ said hasFormula=YES, but had no formula in it
TSTTable_FormulaOwner evaluateFormulaAt
 %C 
-[TSTTableModel(FormulaOwner) writeResultsForCalcEngine:]
expect calc engines to be the same
-[TSTTableModel(FormulaOwner) invalidateForCalcEngine:]
-[TSCEAnyReference referenceTextWithCalculationEngine:hostTableUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEAnyReference.mm
referenceTextWithCalculationEngine currently only supports cell and range references
-[TSCEAnyReference referenceTextWithCalculationEngine:contextSheetName:]
TSTStrokeAssociatedObject
virtual TSCEValue TSTTableResolver::valueForCellCoord(const TSUCellCoord &, BOOL) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableResolver.mm
something went wrong fetching data from the table.
virtual TSCEValue TSTTableResolver::scalarValue(TSCEEvalRef *__strong _Nonnull, const TSCEOwnerUID &, const TSUCellCoord &, BOOL, BOOL) const
Invalid table pointer in a reference to be resolved. Returning a bogus value. Please file a bug.
virtual TSCEHidingAction TSTTableResolver::getHidingAction(TSCEEvalRef *__strong _Nonnull, BOOL) const
can't get hiding action of a range
virtual TSCEValueGrid *TSTTableResolver::valuesForViewTractRef(TSCEViewTractRef *__strong _Nonnull, TSCEHidingAction, TSCEError *__autoreleasing  _Nonnull * _Nullable, TSCECellRefSet * _Nullable, BOOL) const
Need a tableUID set to use this interface
Need to implement group level restrictions for categorized tables
virtual TSCEValueGrid *TSTTableResolver::valuesForViewTractRef(TSCEViewTractRef *__strong _Nonnull, TSCEHidingAction, TSCEError *__autoreleasing  _Nonnull * _Nullable, TSCECellRefSet * _Nullable, BOOL) const_block_invoke_2
%@: Should have had all precedents already, but missing: %@
v32@?0r^{TSCEGridCoord=II}8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16^B24
v40@?0Q8@"NSString"16r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24^B32
virtual TSCECellTractRef *TSTTableResolver::cellTractRefForViewTractRef(TSCEViewTractRef *__strong _Nonnull)
The error in the cell was removed.
The formula was updated because it refers to a table that was transposed.
The formula was updated because it refers to a table that was transposed. You may need to make additional changes.
The formula refers to a table that was transposed. You may want to review it.
The formula was replaced with its last calculated value.
The function %@ might have produced a different result than in Excel. The formula was replaced by a formula that will give the same result.
 Original formula: %@
The following conditional highlighting rules are not supported and were removed: Equal or Above Average, Equal or Below Average.
Conditional highlighting rules using standard deviation are not supported and were removed.
Conditional highlighting rules using formulas are not supported and were removed.
The following conditional highlighting rules are not supported and were removed: Contains Errors.
The following conditional highlighting rules are not supported and were removed: Contains No Errors.
Conditional highlighting rules containing unsupported operators were removed.
Conditional highlighting rules using unsupported style attributes were removed.
The conditional formatting containing an unsupported time period was removed.
Unsupported conditional highlighting rules were removed.
The cell was updated with a more accurate duration format. You may want to review formulas that refer to this cell.
-[TSTImportWarningSet TSTImportFormulaWarningTypeToArchive]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTImportWarningSet.mm
Unhandled FormulaWarningType encountered while saving to archive.
v32@?0@"NSString"8Q16^B24
-[TSTWrappedFormula nodesToCheckForBareArgumentPlaceholders]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTWrappedFormula.mm
Expected function node for %@ at the top of parse tree
-[TSTWrappedFormula insertFormulaText:includeWhitespace:]
-[TSTWrappedFormula reparseWithStorage:adjustExpressionTree:]_block_invoke
Unexpected attachment passed to block
-[TSTWrappedFormula reparseWithStorage:adjustExpressionTree:]
-[TSTWrappedFormula reparseWithStorage:adjustExpressionTree:]_block_invoke_2
Expected top function node to be at index 0
Expected top function node to end at index %lu
expected non-top node to be past index %lu
TSCEErrorTypeKey
TSCEFunctionNameKey
TSCEExtraInfoStringKey
TSCEExtraInfoNumberKey
kTSCEDateAsTimeIntervalKey
kTSCEOwnerUIDKey
kTSCERangeReferenceKey
kTSCEReferenceArrayKey
kTSCEAnyReferenceKey
kTSCEArgumentIndexKey
kTSCEExpectedTypeKey
kTSCEFoundTypeKey
TSCELowerBoundKey
TSCEUpperBoundKey
TSCELowerBoundInclusiveKey
TSCEUpperBoundInclusiveKey
TSCEValueToMatchKey
TSCEArgumentsAscendingKey
TSCEEqualityPermittedKey
TSCEAfterMatchKey
TSCEOccurrenceKey
TSCEMatchsFoundKey
TSCEPreviousMatchKey
TSCEPreviousValueIsRegexKey
TSCEProblemExpressionStringKey
TSCEProblemModeKey
TSCEProblemNodeIsCellReferenceKey
TSCEAttachmentErrorRaisedInTextCellKey
TSCEInvalidReferenceToMergeKey
TSCEReferenceEndCellInvalidKey
TSCEUnitNameKey
TSCEChooseIndexKey
kTSCEMaxArgsAllowedKey
kTSCEArgsProvideddKey
+[TSCEError errorWithDictionary:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEError.mm
Must have errorTypeKey set to use this API
-[TSCEError displayStringWithCalculationEngine:forTable:andCellID:]
Unknown error.
\U201C%@\U201D isn\U2019t a valid cell reference.
\U201C%@\U201D isn\U2019t a valid function name.
Numbers can\U2019t be divided by zero.
The formula calculates zero to the power of zero, which can\U2019t be computed.
The operator \U201C%@\U201D
The function \U201C%@\U201D
Argument %d of %@
 can\U2019t be %@.
 can\U2019t take %@.
 expects %@
, but cell %@ contains %@.
 but found \U201C%@.\U201D
 but found an empty cell.
This formula can\U2019t reference its own cell, or depend on another formula that references this cell.
Running Total In requires field to be a grouping column.
Argument %d of %@ must refer to a pivot table.
Argument %d of %@ must refer to an aggregate value of the pivot table.
Argument %d of %@ must refer to a grouping column of the pivot table.
invalid number of arguments error exception
spec not found for function %@
one argument
%d arguments
%@ requires at least %@.
%@ requires at least %@, but was given %@.
%@ requires between %d and %d arguments, but was given %@.
%@ requires %@, but was given %@.
%@ requires its arguments to result in a number within the valid range.
The formula contains a number outside the valid range.
The formula contains an invalid reference.
The formula refers to a cell which contains an error.
Cell \U201C%@\U201D contains an error.
Argument %d of %@ is invalid.
The formula contains a page number or page count, which aren\U2019t allowed in formulas.
The formula refers to a cell with a shape or media file. This isn\U2019t supported.
There are no cells in the intersection of the ranges \U201C%@.\U201D
%@ must have a cell or range reference as an argument.
%@ must have a cell reference as an argument.
%@ must have a range reference as an argument.
%@ couldn\U2019t find the value \U201C%@\U201D.
%@ must begin searching from a number within the length of the search text.
Arguments %d and later
Argument %d
Can't be out of bounds without bounds specified
%@ in %@ must be greater than or equal to %g.
%@ in %@ must be greater than %g.
%@ in %@ must be less than or equal to %g.
%@ in %@ must be less than %g.
%@ in %@ must be greater than or equal to %g and less than or equal to %g.
%@ in %@ must be greater than or equal to %g and less than %g.
%@ in %@ must be greater than %g and less than or equal to %g.
%@ in %@ must be greater than %g and less than %g.
Arrays can contain only constant values.
%@ couldn\U2019t find the requested value.
The two ranges in %@ must be the same size.
The formula contains a list where a single argument is expected.
The formula\U2019s arguments can only include one date value.
%@ requires all arguments to be of the same type, either dates, numbers, or durations.
MODE requires that its arguments contain repeated values.
You must specify a value for all the required arguments.
The function doesn\U2019t allow empty arguments.
Argument %d can\U2019t be empty.
The range %@ can\U2019t be used as a single value.
All arguments to %@ must be the same length.
The formula can\U2019t be calculated because the resulting text would be too long.
Lists of references can\U2019t intersect.
%@ requires %@, but none were found.
no bigger than
at least as big as
smaller than
larger than
Argument %d must be %@ argument %d.
Argument %d must be different from argument %d.
The first argument of %@ must be an index of another argument, but there is no argument at index %d.
An empty string can\U2019t be used as an argument of %@.
%@ requires a string specifying a number, but found \U201C%@\U201D instead.
%@ requires a string specifying a date/time value, but found \U201C%@\U201D instead.
%@ requires both arguments to be positive or negative.
Argument %d of %@ must sum to 1.
R1C1-style references aren\U2019t supported.
The date returned by the formula isn\U2019t valid.
The time returned by the formula isn\U2019t valid.
Vector arguments can contain only one row or column.
%@ requires that all arguments be between 0 and 1.
All arguments must be equal to or larger than zero.
Argument %d of %@ can\U2019t be equal to zero.
%@ requires the position argument to be smaller than or equal to the size of the array.
Argument %d of %@ must be equal to 1, 2, or 4.
Argument %d of %@ must be equal to 0 or 1.
Argument %d of %@ must be equal to 1 or 2.
SUBTOTAL requires that its first argument be between 1 and 11 or 101 and 111.
%@ couldn\U2019t reach a result.
%@ couldn\U2019t reach a result. Try adjusting the estimate argument.
%@ requires multiple pairs of cash-flows and dates.
%@ requires dates to be on or after the starting date.
%@ requires at least one positive and one negative argument.
%@ refers to an empty cell.
%@ refers to %@, which is empty.
The operator \U201C-\U201D can\U2019t subtract a date from a number.
Different currency types can\U2019t be compared.
Durations can\U2019t be compared to other data types.
%@ requires that its arguments use the same type of unit.
%@ requires that arguments %@ use the same type of unit.
Argument %d of %@ can\U2019t be a currency or duration.
Arguments %d and later of %@ can\U2019t contain currency or duration values.
Argument %d of %@ can\U2019t be a currency.
Arguments %d and later of %@ can\U2019t be currency values.
Argument %d of %@ can\U2019t be a duration.
The function \U201C%@\U201D expects %@ but found a duration.
%@ requires that all monetary values use the same currency.
Values being summed by %@ must be either all durations or all numbers, unless one value is a date.
Argument %d of %@ requires at least %@ values.
%@ requires an odd number of arguments, at least three.
%@ requires an even number of arguments.
%@ requires that all range arguments are the same size.
Arrays can\U2019t be empty.
\U2018%@\U2019 isn\U2019t a valid character in the base %d numeral system.
\U201C%@\U201D isn\U2019t a valid unit.
%@ requires that all its arguments have the same type of unit (for example, time or temperature).
Prefixes require metric units. The unit \U201C%@\U201D isn\U2019t metric.
The number to convert has units that conflict with the units to convert from.
The index position in the array must contain data.
The x and y arrays must have the same length and width.
The x and y arrays must have the same length.
The x and y arrays must have the same width.
RECEIVED must evaluate to a value greater than zero.
MATCH requires the third argument to be equal to 1, 0, or -1.
Formulas can\U2019t be longer than 8,192 characters.
RANDBETWEEN requires that both durations have the same maximum unit.
%@ requires all values in argument %d to be numbers.
The first argument of CHAR must represent a valid character, generally between 32 and 65535.
When using duration values with NORMDIST, the cumulative argument must be TRUE.
An x variable is too highly correlated with one or more other x variables for LINEST to calculate a result.
You can\U2019t compare %@ with %@ because their data types are different.
%@ can\U2019t be given multiple durations.
LINEST requires more data points to calculate a result.
%@ requires all numbers in argument %d to be positive.
PERCENTRANK requires that argument 2 be within the range specified in argument 1.
PERCENTRANK.EXC requires that argument 2 be within the range specified in argument 1.
Location services are not enabled on the device.
Bearing information can\U2019t be determined right now.
Location service is unable to obtain a location value right now.
Access to the location service was denied by the user.
The network was unavailable or a network error occurred.
Bearing information can\U2019t be determined due to strong interference from nearby magnetic fields.
The latitude and longitude values are invalid
The altitude value is invalid
The bearing value is invalid
The formula contains an unsupported function
%@ requires at least one TRUE condition, but none were found.
The requested STOCK attribute is invalid.
The requested CURRENCY attribute is invalid.
The requested STOCKH attribute is invalid.
The requested CURRENCYH attribute is invalid.
The requested historical date is invalid or is in the future.
There is no historical data on the requested date. The next available is on %@.
There is no historical data in the entire year of the requested date. Historical data may not be available for all securities.
No information about the specified currency pair.
Unable to retrieve information from the remote data server.
Data for the \U2018%@\U2019 attribute isn\U2019t available for the selected symbol.
\U2026
Ask Price data is not available.
Bid Price data is not available.
Ask Size data is not available.
Bid Size data is not available.
The formula refers to a cell without a formula.
The requested REFERENCE.NAME attribute is invalid.
No specified error, type %d %{public}@ dictionary: %{public}@
#NAME!
#DIV/0!
#VALUE!
#CIRC!
#ARGS!
#NUM!
#SYN!
-[TSCEError rangeRef]
Wrong type stored for kTSCERangeReferenceKey in errorDictionary: %@
+[TSCEError typeErrorForValue:functionSpec:argumentIndex:locale:]
No functionName available from functionSpec: %{public}@
-[TSCEError isNativelyEqual:]
v32@?0@"TSCERemoteDataSpecifier"8@"TSCECellValue"16^B24
v32@?0Q8@"NSMutableDictionary"16^B24
-[TSCERemoteDataValueMap updateWithValuesFromMap:overwriteValues:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERemoteDataValueMap.mm
-[TSCERemoteDataValueMap initFromArchive:]
Failed to unarchive value for %@!
@"TSTExpressionNode"16@?0@"TSTExpressionNode"8
Fatal Assertion failure: %{public}s %{public}s:%d Unarchiving is incomplete. Equality comparison is bogus and can lead to document corruption. Crashing now.
-[TSTPopUpMenuModel isEqualToChoices:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPopUpMenuModel.mm
Unarchiving is incomplete. Equality comparison is bogus and can lead to document corruption. Crashing now.
TSTPopUpMenuModel: (
-[TSTPopUpMenuModel p_mcListTypeForArgType:]
Unexpected TSCEArgumentType for popup list.
-[TSTPopUpMenuModel loadFromArchive:]
We are not handling this type of TSCECellValue
TSTPopUpMenuModel Archiving: Only one of item and tsce_item should exist
TSTPopUpMenuModel Archiving: No items to unarchive
Item 1
Item 2
Item 3
+[TSTPopUpMenuModel popupMenuModelReorderingModel:fromIndex:toIndex:]
Bad index
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTIteratorBase.mm
virtual TSCEASTElement *TSCEASTIteratorBase::visitNode(TSCEASTElement *)
TSTArchives.sos.proto
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/messages/src/TSTArchives.sos.pb.cc
-[TSTTableDataObject loadFromArchive:unarchiver:completion:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableDataObject.mm
-[TSTTableDataObject dropReferences:]
dropping data list ref count by more than the total count
-[TSTTableDataObject estimateByteSize]
refCount: %d   commentStorage: %@
refCount: %d   _conditionalStyleSet: %@
-[TSTTableDataCustomFormat encodeToArchive:archiver:]
Should never archive a new custom format datalist!
refCount: %d   _customFormat: %@
refCount: %d   format: %@
-[TSTTableDataCellSpec loadFromArchive:unarchiver:completion:]
Shouldn't find unsupported formulas in documents. This document is corrupted.
refCount: %d   _cellSpec: %@
refCount: %d   _formulaError: %@
refCount: %d   importWarningSet: %@
refCount: %d   popUpMenuModel: %@
v16@?0@"TSTRichTextPayload"8
refCount: %d   storage: %@
-[TSTTableDataString initObjectWithString:refCount:]
created a string table entry with a nil string
refCount: %d   string: %@
v16@?0@"TSSStyle"8
refCount: %d   _style: %@
BOOL TSCEBitGridTile::clearBit(TSUColumnOrRowIndex, TSURowIndex)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEBitGrid.mm
clearBit, out of range [%d,%d]->[%d,%d]: request was [%d,%d]
TSUColumnOrRowIndex TSCEBitGridTile::countInRange(TSUColumnOrRowIndex, TSURowIndex, TSUColumnOrRowIndex, TSURowIndex, const TSCEBitGridTile *) const
countInRange: first row/column must be <= last row/column
countInRange: exclude tile does not correspond to this tile.
countInRange: how did we end up masking off *all* bits?
uint8_t findLowestBitNum(uint32_t)
Can't find a bit set in zero.
Can't find a lowestBitOnly in zero.
TSCEInternalCellReference: #%lu::%@
-[TSTCellDictionary setCell:atCellID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellDictionary.mm
can't insert an invalid cell ID
-[TSTCellDictionary cellAtCellID:]
can't look up an invalid cell ID
-[TSTCellDictionary hasCellAtCellID:]
v32@?0{_NSRange=QQ}8@"TSTConcurrentSparseCellList"24
TSCEWarningClassKey
TSCEWarningTypeKey
TSCEWarningContextEntityKey
TSCENativeWarningClass
TSCEBlankReferencingWarning
TSCENonNumericReferencingWarning
TSCEComparisonWarning
TSCEInvalidHyperlinkWarning
TSCENonintegerISODDWarning
TSCENonintegerISEVENWarning
TSCEMonthOutOfRangeWarning
TSCEDayOutOfRangeWarning
TSCEBoolToNumberConversionWarning
TSCEMismatchedSizesWarning
TSCELossOfUnitsWarning
TSCEAutomaticUnitConversionWarning
SFTGlobalID_
<%@ %p with %d key/value pairs 
  { key: string   : %@
         width    : %f
         height   : %f
         vertical : %@
         direction : %@
wpColumn:  object : %@
           string : %@
  },
v32@?0@"TSTLayoutContentCachedKey"8@"TSWPColumn"16^B24
TSCEExtraInfoKey
TSCEArgument1Key
TSCEArgument2Key
TSCESyntaxError
TSCEInvalidTokenInFormulaError
TSCEUnknownError
TSCEUnknownFunctionError
TSCEUnknownLabelError
TSCEInvalidReferenceError
TSCEDivideByZeroError
TSCEZeroToPowerOfZeroError
TSCECircularReferenceError
TSCEValueError
TSCENumberOfArgumentsError
TSCETooManyArgumentsError
TSCENumberError
TSCEErrorReferenceError
TSCEInvalidArgumentsError
TSCEAutoNumberAttachmentError
TSCEAttachmentError
TSCEMissingTableError
TSCEInvalidIntersectionError
TSCENotAReferenceError
TSCENotACellReferenceError
TSCENotARangeReferenceError
TSCEMatchNotFoundError
TSCERegexMatchNotFoundError
TSCEOutOfBoundsArgumentError
TSCEInvalidArrayContentsError
TSCEValueNotAvailableError
TSCEArgumentSetUsedOutOfContextError
TSCEDifferentNumberOfDataPointsError
TSCEInvalidDateManipulationError
TSCEMixedTypeManipulationError
TSCENoModeError
TSCEEmptyArgumentError
TSCEEmptyArgumentSpecificError
TSCEInvalidHyperlinkError
TSCEDifferentNumberOfElementsError
TSCEStringTooLongError
TSCEUnionInsideIntersectionError
TSCEStartNumberExceedsStringLengthError
TSCENoSuitableArgumentsError
TSCEInvalidArgumentRelationshipError
TSCEInvalidArgumentEqualityRelationshipError
TSCEInvalidIndexForChooseError
TSCENonEmptyStringRequiredError
TSCEStringDoesNotRepresentANumberError
TSCEStringDoesNotRepresentDateError
TSCESignsMustMatchError
TSCERangeDoesNotSumToOneError
TSCEUnsupportedR1C1Error
TSCEInvalidDateError
TSCEInvalidTimeError
TSCENotAVectorError
TSCEInvalidProbabiltyError
TSCENumberSmallerThanZeroError
TSCEArgumentEqualsToZeroError
TSCEPositionLargerThanArrayError
TSCEInvalidFrequencyError
TSCEInvalidTypeError
TSCEInvalidTailError
TSCEInvalidSubtotalFunctionNumberError
TSCENumberDoesNotConvergeError
TSCENumberDoesNotConvergeWithEstimateError
TSCEReferenceToEmptyCellError
TSCENumberMinusDateError
TSCETooFewDataPointsError
TSCEDateEarlierThanStartingDateError
TSCEOnlyPositiveOrNegativeError
TSCEInvalidCurrencyComparisonError
TSCEInvalidComparisonError
TSCEMismatchedUnitsError
TSCEUnitsNotAllowedError
TSCECurrencyNotAllowedError
TSCEDurationNotAllowedError
TSCEMismatchedCurrenciesError
TSCESumMixedDurationsAndUnitlessWithoutADateError
TSCENotEnoughInputsError
TSCEInvalidArgumentPairingsError
TSCERangeSizeMismatchError
TSCEEmptyArrayError
TSCEInvalidBaseCharacterError
TSCEInvalidUnitStringError
TSCEDifferentDimensionsError
TSCENonMetricUnitPrefixError
TSCEConvertOriginUnitMismatchError
TSCEArrayElementNoDataError
TSCEDataInvalidDimensionsError
TSCEDataInvalidLengthError
TSCEDataInvalidWidthError
TSCENegativeReceivedAmountError
TSCEInvalidMatchModeError
TSCEFormulaTooLongError
TSCEMismatchedMaxUnitsError
TSCEGridValueNotNumberError
TSCECharInputOutOfBoundsError
TSCENormdistPDFDurationError
TSCELinestHighlyCorrelatedVariableError
TSCEComparisonTypeError
TSCEMultipleDurationsError
TSCELinestMatrixUnderdeterminedError
TSCENegativeVectorValueError
TSCEPercentRankInputOutOfRangeError
TSCEPercentRankExcInputOutOfRangeError
TSCELocationServicesNotEnabledError
TSCELocationHeadingUnknownError
TSCELocationUnknownError
TSCELocationUserDeniedError
TSCELocationNetworkError
TSCELocationHeadingFailureError
TSCEInvalidLatitudeLongitudeError
TSCEInvalidAltitudeError
TSCEInvalidHeadingError
TSCEInvalidRegexError
TSCEUnsupportedFunctionError
TSCEUnsupportedFeatureError
TSCENoConditionIsTrueError
TSCEInvalidLiveStockAttributeError
TSCENotAReferenceToAFormulaError
TSCEInvalidReferenceNameAttributeError
TSCEInvalidLiveCurrencyAttributeError
TSCEInvalidHistoricalStockAttributeError
TSCEInvalidHistoricalCurrencyAttributeError
TSCEInvalidHistoricalDateError
TSCENoTradingInformationError
TSCEInvalidStockCodeError
TSCEInvalidCurrencyPairError
TSCERemoteDataServerError
TSCERemoteDataUnavailableError
TSCENotReadyError
TSCEDisallowedStockModeError
TSCEInvalidRangeUsageError
TSCEMissingRunningTotalInFieldError
TSCEMissingPivotTableError
TSCEInvalidAggregateColumnError
TSCEInvalidGroupingColumnError
TSCEAbortedError
void TSCECellRecord::switchToEdgeListStructure(TSCECellRecordEdgeLists *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECellRecord.mm
Overriding existing _edges pointer
void TSCECellRecord::addEdge(const TSCEInternalCellReference &, BOOL)
Should already have an _edges structure allocated
void TSCECellRecord::readExpandedPrecedentsWithOwners(const TSCE::ExpandedEdgesArchive &)
void TSCEEvaluateViewTractRefWithContext(TSCEViewTractRef *__strong, TSCEEvaluationContext &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTNodeArrayUtilities.mm
TSCEValue TSCEEvaluateASTNodeArrayWithContext(const TSCEASTNodeArray *, TSCEEvaluationContext &)
Not expecting to see UID references during evaluation.
%d is not a valid node tag, seen in: %{public}@
TSCEEvaluateASTNodeArrayWithContext ended up with an empty evaluation stack for %@
void TSCEASTNodeArrayEncodeToArchiveProcessFirstNode(TSCE::ASTNodeArrayArchive *, TSPArchiver *__strong, TSCEASTElement *, TSCEASTElementIterator *, std::vector<TSCENodeArrayEncodingState> &, TSCEASTNodeArrayArchiveOptionsEnum)
verifySpanningSettings failed while archiving, with options: %d
TSCEASTFeatureNodesSeen TSCEASTNodeArrayEncodeToArchiveWithOptions(TSCE::ASTNodeArrayArchive *, TSCEASTNodeArray *, TSPArchiver *__strong, TSCEASTNodeArrayArchiveOptionsEnum)
TSCEASTNodeArray *TSCEFormulaUnarchivingContext::createNodeArrayFromArchive(const TSCE::ASTNodeArrayArchive &)
unarchived invalid spanning settings
can't end an embedded node array with no previous begin
can't unarchive a let node with insufficient embedded node arrays
TSTArchives.proto
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/messages/src/TSTArchives.pb.cc
-[TSCEEvalRef scalarValueForEvalContext:permitAccessInsideMergeRegions:fetchRichTextAttributesIfPlainText:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEEvalRef.mm
v32@?0@"NSNumber"8@16^B24
v16@?0@"NSMutableDictionary"8
bdtr
-[TSTCell initWithLocale:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCell.mm
-[TSTCell copyToCell:]
srcStorage
-[TSTCell copyValueAndFormatToCell:]
-[TSTCell cellByApplyingCellDiff:toTable:andUpdateInverse:optionalConcurrentStylesheet:]
cellStyle
-[TSTCell setProvidedValueTypeBeforeUpgrade]
Provided cells only allowed before Pre-UFF upgrade.
-[TSTCell formattedValue]
Cell number format failed to produce return string.
Cell currency format failed to produce return string.
Impossible cell value type reached.
%@ Total
-[TSTCell stringForEditing]
-[TSTCell bakeFormulaToValue]
can't bake non-formula cells
-[TSTCell setCellStyle:clearingID:]
-[TSTCell setTextStyle:clearingID:]
-[TSTCell setConditionalStyle:clearingID:]
v40@?0@"TSWPAttachment"8Q16Q24^B32
-[TSTCell interactionType]
Cell must be inflated to determine interaction type
-[TSTCell hasStockFormulaForStockUI]
Cell must be inflated to ask if it contains a stock formula
-[TSTCell popupChoiceIndex]
Not a popup cell.
-[TSTCell applyPopupChoiceIndex:]
Unexpected argument type for popup TSCECellValue.
Cannot apply popup choice
v40@?0@8{_NSRange=QQ}16^B32
unhandled formula result type found.
-[TSTCell copyAllFormatsToCell:]
-[TSTCell setFormatID:forStorageFlag:]
Inappropriate storage flag.
-[TSTCell formatForStorageFlag:]
-[TSTCell formatIDForStorageFlag:]
<cellSpec: %@>
<cellSpec not populated>
bool TSCEReferenceSet::operator==(const TSCEReferenceSet &) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEReferenceSet.mm
Can't compare reference sets from different calcEngines
BOOL TSCEReferenceSet::isEqualToDepTrackerPrecedents(const TSCEReferenceSet &) const
void TSCEReferenceSet::insertRef(TSCEReferenceType)
Inserting these refTypes requires accompanying data, refType was %d
void TSCEReferenceSet::insertRef(const TSCEInternalCellReference &)
Dependency tracker is required to use this method
void TSCEReferenceSet::insertRef(const TSCESpanningRangeRef &)
Why are we getting invalid tableUID here?
void TSCEReferenceSet::removeRef(TSCEReferenceType)
Removing these refTypes requires accompanying data, refType was %d
bool TSCEReferenceSet::containsRef(const TSCEInternalCellReference &) const
void TSCEReferenceSet::foreachInternalCellRef(__strong TSCEForEachInternalCellRefBlock) const
-[TSTTableGroupSortOrderUID groupSortOrderByReplacingRuleAtIndex:withRule:withTableInfo:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableGroupSortOrderUID.mm
v32@?0@"TSTTableGroupSortRuleUID"8Q16^B24
-[TSTTableDataStore decrementColumnCellCount:byAmount:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableDataStore.mm
Can't drive cell count below zero!
-[TSTTableDataStore getCell:atCellID:]
Retrieving corrupt cell storage data for cellID:%@
v28@?0^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}8S16^B20
void p_performRichTextStorageDOLC(TSTTableDataStore *__strong, TSTCell *__strong, TSTCellStorageRef)
newStorage.documentRoot
-[TSTTableDataStore p_updatePreBNCDataListsForCurrentFormat:numberFormat:currencyFormat:dateFormat:durationFormat:baseFormat:customFormat:stepperSliderFormat:mcListFormat:oldPreBNCStorageRef:callWillModify:]
newMCData
I20@?0@"TSKFormat"8i16
void p_UpdateDataListsForNewCell(TSTTableDataStore *const __strong, TSTCell *const __strong, TSTCellStorageRef, const TSCEOwnerUID &, const __strong id<TSCEFormulaReplacing>, BOOL)
Cell of string value type has no value. Setting to NoContent.
Handed a bad string key! Setting to NoContent.
Expected a formula cell spec
Handed a bad formula key! Repairing.
Expected a control cell spec
Handed a bad formula error key! Repairing.
Handed a bad text storage key! Repairing.
Handed a cell comment key! Repairing.
Handed an import warning set key! Repairing.
Handed a bad cell style key! Repairing.
Handed a bad text style key! Repairing.
Handed a bad conditional style key! Repairing.
-[TSTTableDataStore _setCell:atCellID:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:richTextDOLCHint:]
Failed to get tile for cell!
-[TSTTableDataStore setCellMap:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormulas:skipDirtyingNonFormulaCells:doRichTextDOLC:]_block_invoke
Failed to get a tile while setting a map!
-[TSTTableDataStore p_preBNCKeysForCell:oldPreBNCStorageRef:callWillModify:]
Illegal format type %@ for preBNC stepper/slider display format.
preBNCPopupTable
-[TSTTableDataStore resolveDataListKeysForPreBNCCell:suppressTransmutation:sourceStorageVersion:]
String cell has bad string!
StringTable
Formula cell has bad formula!
FormulaTable
NULL formula
FormulaErrorTable
RichTextTable
CommentTable
ImportWarningTable
StyleTable
ConditionalStyleTable
preBNCFormatTable
-[TSTTableDataStore resolveDataListKeysForCell:cache:suppressTransmutation:sourceStorageVersion:]
This cell is corrupt. It has a key for both formula and control.
ControlCellSpecTable
FormatTable
Fatal Assertion failure: %{public}s %{public}s:%d Datalist reference is unexpectedly nil during load!
-[TSTTableDataStore p_loadDatalist:forLazyReference:completionBlock:]
Datalist reference is unexpectedly nil during load!
Fatal Assertion failure: %{public}s %{public}s:%d Failed to load a lazy datalist in TSTTableDataStore: %@ in table: %@ with error: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
Failed to load a lazy datalist in TSTTableDataStore: %@ in table: %@ with error: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
Fatal Assertion failure: %{public}s %{public}s:%d Conditional style datalist reference is unexpectedly nil!
-[TSTTableDataStore conditionalStyleSetDataList]
Conditional style datalist reference is unexpectedly nil!
Fatal Assertion failure: %{public}s %{public}s:%d String datalist reference is unexpectedly nil!
-[TSTTableDataStore stringDataList]
String datalist reference is unexpectedly nil!
Fatal Assertion failure: %{public}s %{public}s:%d Style datalist reference is unexpectedly nil!
-[TSTTableDataStore styleDataList]
Style datalist reference is unexpectedly nil!
Fatal Assertion failure: %{public}s %{public}s:%d Formula datalist reference is unexpectedly nil!
-[TSTTableDataStore formulaDataList]
Formula datalist reference is unexpectedly nil!
Fatal Assertion failure: %{public}s %{public}s:%d Control cellspec datalist reference is unexpectedly nil!
-[TSTTableDataStore controlCellSpecDataList]
Control cellspec datalist reference is unexpectedly nil!
v16@?0@"TSTTableDataList"8
Fatal Assertion failure: %{public}s %{public}s:%d Formula error datalist reference is unexpectedly nil!
-[TSTTableDataStore formulaErrorDataList]
Formula error datalist reference is unexpectedly nil!
Fatal Assertion failure: %{public}s %{public}s:%d Rich text datalist reference is unexpectedly nil!
-[TSTTableDataStore richTextDataList]
Rich text datalist reference is unexpectedly nil!
-[TSTTableDataStore richTextDataList]_block_invoke
Expected non-nil richTextParentInfo back pointer. Should have been set at initialization.
Fatal Assertion failure: %{public}s %{public}s:%d Format datalist reference is unexpectedly nil!
-[TSTTableDataStore formatDataList]
Format datalist reference is unexpectedly nil!
Fatal Assertion failure: %{public}s %{public}s:%d Comment storage datalist reference is unexpectedly nil!
-[TSTTableDataStore commentStorageDataList]
Comment storage datalist reference is unexpectedly nil!
Fatal Assertion failure: %{public}s %{public}s:%d Import warning datalist reference is unexpectedly nil!
-[TSTTableDataStore importWarningSetDataList]
Import warning datalist reference is unexpectedly nil!
Fatal Assertion failure: %{public}s %{public}s:%d Pre-BNC format datalist reference is unexpectedly nil!
-[TSTTableDataStore preBNCFormatDataList]
Pre-BNC format datalist reference is unexpectedly nil!
-[TSTTableDataStore p_addPasteboardCustomFormat:key:toDocument:]
The pasteboard should have had every custom format.
v16@?0@"TSTTableHeaderStorageBucket"8
v16@?0@"TSTMergeRegionMap"8
v28@?0I8@"TSKFormat"12^B20
%@, key:%d, cellCount:%d, datalist count:%d
%@, key:%d, cellCount:%d, datalist count:0
v32@?0@"TSTTableDataList"8^v16@"NSString"24
condStyles
styles
cellSpecs
f-errors
rich text
formats
comments
imp warns
DataList RefCount Audit good:%d bad:%d dead:%d
Datalist Duplication Audit
Conditional Styles list has dupes.
Strings List has dupes.
Styles List has dupes.
Formula List has dupes.
Control Cell Spec List has dupes.
Format List has dupes.
Import Warnings List has dupes.
ColumnRowCellCount Audit
Cell count mismatch at row %d: header has %td, row has %td
Cell count mismatch at column %d: header should have %td, has %td
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke
v24@?0@"TSTCell"8@"TSTCell"16
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_2
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_3
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_4
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_5
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_6
cells[idx]
v40@?0B8@"TSKFormat"12I20@"NSIndexSet"24^v32
-[TSTTableDataStore setCellsConcurrently:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:]_block_invoke
the newCells array and the set of column indexes should be the same size
{vector<long, std::allocator<long>>=^q^q{__compressed_pair<long *, std::allocator<long>>=^q}}40@?0@"TSTTableTileRowInfo"8^v16^v24^v32
-[TSTTableDataStore setCellsConcurrently:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:]_block_invoke_2
newFormulaSpec
v18@?0{TSUModelColumnIndex=S}8q10
v36@?0{TSUModelRowIndex=I}8q12@"TSTTableTile"20@"TSTTableTileRowInfo"28
v32@?0@"TSTTableTile"8@"NSMutableIndexSet"16^B24
-[TSTTableDataStore accumulateCurrentCellsConcurrentlyInRow:rowInfo:atColumns:usingCellCreationBlock:]
-[TSTTableDataStore tsceValueFromCell:atCellID:tableUID:]
unhandled table cell type found
-[TSTTableDataStore tsceValueForCellStorageRef:cellCoord:hostTableUID:outValue:]
Can't get a value from a null cell reference!
TSUDecimal TSTCellStorageDecimalValue(TSTCellStorage *)
Asked for TSUDecimal value from an inappropriate cell.
BOOL TSTCellStorageBoolValue(TSTCellStorage *)
Asked for bool value from non-bool cell.
double TSTCellStorageRawDateValue(TSTCellStorage *)
Asked for date value from non-date cell.
-[TSCEValueGrid initWithColumnRange:rowRange:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEValueGrid.mm
Can't set an extent with invalid ranges
-[TSCEValueGrid clearValueAtCoord:]
Can't clear value with a spanning coordinate: %@
-[TSCEValueGrid valueAtCoord:]
Can't read value with a spanning coordinate: %@
-[TSCEValueGrid valueAt1DIndex:]
Index %lu exceeds area: %lu
Can't use valueAt1DIndex: with no dimensions set
-[TSCEValueGrid expandToIncludeCoord:]
Can't expand with a spanning coordinate: %@
-[TSCEValueGrid setValue:atCoord:]
Can't set a value at a spanning coordinate: %@
-[TSCEValueGrid setEmptyValueAtCoord:]
-[TSCEValueGrid subGridAtGridCoord:width:height:]
can't access beyond the end of a vector
Exceeded rowLimit: %d
TSCEValue TSCEFunction_AVERAGEA::evaluateWithContext(TSCEEvaluationContext &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEStatisticalFunctions.mm
Have to set the type of vector appropriately.
TSCEValue TSCEFunction_CRITBINOM::evaluateWithContext(TSCEEvaluationContext &)
CRITBINOM binary search has a bug.
TSCEValue TSCEFunction_FORECAST::evaluateWithContext(TSCEEvaluationContext &)
Should have at least one x if we're going to successfullly compute FORECAST
TSCEValue TSCEFunction_FREQUENCY::evaluateWithContext(TSCEEvaluationContext &)
static TSCEValue TSCEFunction_GEOMEAN::geometricMeanOfVector(TSCEGrid *, TSCEFunctionSpec *__strong, int, NSArray *__strong, TSCEEvaluationContext *)
static TSCEValue TSCEFunction_HARMEAN::harmonicMeanOfVector(TSCEGrid *, TSCEFunctionSpec *__strong, int, NSArray *__strong, TSCEEvaluationContext *)
static TSCEValue TSCEFunction_LARGE::evaluateWithContext(TSCEEvaluationContext *, TSCEFunctionSpec *__strong, BOOL, BOOL, BOOL)
Out of memory
static TSCEValue TSCEFunction_MAX::extremum(TSCEEvaluationContext *, TSCEFunctionSpec *__strong, int, BOOL, BOOL)
TSCEValue TSCEFunction_MEDIAN::evaluateVector(TSCEFunctionSpec *__strong, TSCEGrid *, TSCEEvaluationContext *)
TSCEValue TSCEFunction_MODE::evaluateVector(TSCEFunctionSpec *__strong, TSCEGrid *, TSCEEvaluationContext *, const TSCEFormat &)
In function MODE, should not reach here.
TSCEValue TSCEFunction_MODE_MULT::evaluateWithContext(TSCEEvaluationContext &)
1, 2, and 3
2 and 3
static TSCEValue TSCEFunction_PERCENTILE::computeWithVector(const TSCEGrid &, const TSUDecimal &, bool, bool, TSCEFunctionSpec *__strong, TSCEEvaluationContext *)
1, 3, and 4
1 and 3
TSCEGrid TSCEFunction_TTEST::subtractVectors(TSCEGrid &, TSCEGrid &, TSCEEvaluationContext &)
Vectors have different number of data points
Vectors have mismatched dimensions.
TSCEValue TSCEFunction_TTEST::evaluateWithContext(TSCEEvaluationContext &)
We probably have a date returned as the variance of these inputs. We should have raised an error earlier in the subtraction code.
Undefined t-test type passed to TTEST. Please file a bug.
1 and 2
-[TSCEReferenceBackedGrid string:argIndex:locale:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEReferenceBackedGrid.mm
TSCEReferenceBackedGrid doesn't have a meaningful string() to provide
-[TSCEReferenceBackedGrid valueAtGridCoord:accessContext:]
-[TSTCommentHosting initWithStorage:forTableInfo:cellUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCommentHosting.mm
Expecting valid cell UID!
-[TSTCommentHosting initWithStorage:forTableInfo:baseCellCoord:]
Expecting valid cell ID!
%@@(%@, %@)
TSTTextCellColumnAutocomplete
-[TSTFormulaRewriteSpec initFromMessage:unarchiver:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTFormulaRewriteSpec.mm
Move rewriteSpec should have AUX rowColumnInfo in archive
Sort/Reorder rewriteSpec should have AUX rowColumnInfo in archive
virtual TSCEASTElement *TSCEASTRowColumnUidMapRewriter::anyReferenceNode(TSCEASTRelativeCoordRefElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTRowColumnUidMapRewriter.mm
Expected to be called on uid-form formulas only.
TSTStylePropertyArchiving.proto
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/messages/src/TSTStylePropertyArchiving.pb.cc
-[TSTArchivedAutofillSelection setSelection:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTArchivedAutofillSelection.mm
Wrong type of class %@ (expected TSTAutofillSelection)
-[TSTTableRep hyperlinkRegions]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableRep.mm
Bounds of hyperlink {%@} are not finite
v16@?0^{CGContext=}8
v16@?0@"TSDTexturedRectangle"8
+[TSTTableRep p_countOfIdenticalCellsBetweenOutgoingTableInfo:incomingTableInfo:]
numberOfColumns not equal!
+[TSTTableRep magicMoveAttributeMatchPercentBetweenOutgoingObject:incomingObject:mixingTypeContext:]
equalCellCount(%d) > totalCellCount(%d)!
delegate
void TSTTableRepPrepareToDrawLayoutSpace(TSTTableRep *__strong _Nonnull, TSTLayoutSpace *__strong _Nullable, CGContextRef _Nullable)
space
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}
WARNING: invalid cell fill %@ %@
v32@?0@8@16^B24
-[TSTTableRep p_drawGroupingArrowInContext:contentFrame:cell:cellID:groupingArrowState:alignedClipFrame:verticalAlignment:wpColumn:]
should only be called on grouping cells
should only be called on tables that are grouped
{%@->%@}
{invalid, invalid}
{invalid, %u}
{%u, invalid}
{%u, %u}
TSTCellRange TSTTableRepDrawIndividualCellContent(TSTTableRep *__strong, TSTLayoutSpace *__strong, TSTGridRange, TSTCell *__strong, TSTCellID, __strong id, __strong id<TSTCellIteratorData>, TSTCellRange, BOOL, NSMutableArray<TSTTableBadge *> *__strong, BOOL, TSWPSelection * _Nullable __strong, CGContextRef)
No TSWPColumn layout rock found.
void TSTTableRepDrawGridRange(TSTTableRep *__strong, TSTLayoutSpace *__strong, TSTGridRange, TSTAnimation *__strong, CGContextRef)
background fill is not supported yet
yyFlexLexer::yylex invoked but %option yyclass used
virtual int TSTDefaultLexer::yylex()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTDefaultLexer.lmm
Unable to lex tokenAttachment.
fatal flex scanner internal error--no action found
fatal flex scanner internal error--end of buffer missed
fatal error - scanner input buffer overflow
input in flex scanner failed
out of dynamic memory in yy_get_next_buffer()
out of dynamic memory in yy_create_buffer()
out of dynamic memory in yyensure_buffer_stack()
Starting parse
Stack size increased to %lu
Entering state %d
Reading a token: 
Now at end of input.
Next token is
Shifting
int TSTyyparse(TSTParser *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGrammar.ymm
Parser: the quoted string length is less than 2.
-> $$ =
Error: popping
Cleanup: discarding lookahead
Cleanup: popping
token %s (
nterm %s (
%d.%d-%d.%d
$end
$undefined
TOK_LPAREN
TOK_RPAREN
TOK_LBRACK
TOK_RBRACK
TOK_ARG_SEPARATOR
TOK_DOUBLE_COLON
TOK_UNKNOWN
TOK_IN
TOK_LET
TOK_UNQUOTED_IDENTIFIER
TOK_QUOTED_IDENTIFIER
TOK_AGG_IDENTIFIER_WITH_PARENS
TOK_UNQUOTED_IDENTIFIER_WITH_PARENS
TOK_WS
TOK_QUOTEDSTRING
TOK_FUNCTION_TOKEN
TOK_FUNCTION_END_TOKEN
TOK_NUMBER
TOK_BOOLEAN_TOKEN
TOK_DATE_TOKEN
TOK_DURATION_TOKEN
TOK_VARIABLE_TOKEN
TOK_IDENTIFIER_TOKEN
TOK_ARRAY_LINE_DELIMITER
TOK_REFERENCE_TOKEN
TOK_STRING_TOKEN
TOK_ARGUMENT_PLACEHOLDER_TOKEN
TOK_EMPTY_TOKEN
TOK_COLON
TOK_LESS_OR_EQUAL
TOK_GREATER_OR_EQUAL
TOK_GREATER_THAN
TOK_LESS_THAN
TOK_NOT_EQUAL
TOK_EQUALS
TOK_AMPERSAND
TOK_MINUS
TOK_PLUS
TOK_DIV
TOK_TIMES
TOK_POWER
TOK_PIPE
TOK_PERCENT
UPLUS
UMINUS
$accept
root
expr
unquoted_identifier_component
quoted_identifier_component
identifier_component
identifier
reference
piped_reference_list
list
array
list_of_array_rows
list_head
expr_opt
function
Reducing stack by rule %d (line %lu):
   $%d = 
Stack now
Deleting
virtual int TSTCommaLexer::yylex()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCommaLexer.lmm
Reference Construction - Manual Error
int TSCEyyparse(void *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEGrammar.ymm
Invalid Native Syntax String for Argument Token.
ARGUMENT
Invalid Function String specified in Token initialization.
Malformed reference
syntax error
memory exhausted
HIGHER
TOK_BANG
TOK_DOLLAR
TOK_REFERENCE_TOKEN_BEGIN
TOK_REFERENCE_TOKEN_END
TOK_UNQUOTED_LABEL
TOK_QUOTED_LABEL
TOK_ERROR
TOK_TOKEN
label
label_end_token
number
number_end_token
list_tail
scoped_reference
scoped_reference_end_token
scoped_reference_tokenized
unscoped_reference
unscoped_reference_end_token
unscoped_reference_tokenized
cell_ref
cell_ref_tokenized
cell_ref_end_token
void TSCEASTNodeAddChild(TSCEASTNode *, TSCEAST *)
Adding child to leaf
_TtP8TSTables35TSTFixedColumnWidthGeometryProvider_
d24@0:8d16
25TSTArgumentAtIndexLocator
25TSTReparentGroupsRewriter
26TSCEASTExcludeUidsRewriter
25TSCEASTMoveRegionRewriter
24TSCEASTTransposeRewriter
14TSCEThunkValue
@36TSCEASTConvertFromColonTractRewriter
27TSTCellSpecFormulaExtractor
14TSCETokenValue
MbP?
A16TSCEErrorWrapper
28TSCEASTRepairBadRefsRewriter
14TSCEErrorValue
29TSCEASTFunctionsInUseRewriter
15TSCEStringValue
16TSCEBooleanValue
8TSCEGrid
category column
aggre names col
aggre names row
0E43TSCEASTSearchForSageTranslationNeedIterator
?26TSCEASTDescriptionIterator
13TSCEDateValue
@C30TSCEASTNodeCategoryRefIterator
25TSCEASTSageExportRewriter
15TSCEASTRewriter
19TSCEASTUnaryElement
20TSCEASTNumberElement
21TSCEASTBooleanElement
21TSCEASTTagOnlyElement
19TSCEASTTokenElement
19TSCEASTArrayElement
25TSCEASTLetVariableElement
25TSCEASTLetEndScopeElement
xV42?)
=19TSCEFunction_MEDIAN
16TSCEFunctionNode
17TSCEFunction_MODE
21TSCEViewTractRefValue
19TSCEIDAllocatorFull
28TSCEASTRefExtractionIterator
KD#B
;37TSCEASTExcelImportTranslationRewriter
26TSCEASTExcelImportRewriter
36TSTTSCEASTNodeExpressionNodeFunction
UUUUUU
?18TSCEValueGridValue
?8TSTLexer
25TSTTrackingRangeExtractor
28TSTUIDTrackingRangeExtractor
;24TSCEASTClearUidsRewriter
21TSCEASTStreamIterator
17TSCEAbstractValue
42TSCEASTRemoveNumberToDateCoercionsRewriter
?_Zu
?]Zu
<_Zu
25TSCEASTInsertRowsRewriter
33TSCEASTRewriteUsingValuesRewriter
16TSCEAdditionNode
19TSCESubtractionNode
22TSCEMultiplicationNode
16TSCEDivisionNode
13TSCEPowerNode
21TSCEConcatenationNode
19TSCEGreaterThanNode
29TSCEBinaryBooleanOperatorNode
28TSCEGreaterThanOrEqualToNode
16TSCELessThanNode
25TSCELessThanOrEqualToNode
15TSCEEqualToNode
18TSCENotEqualToNode
16TSCENegationNode
16TSCEPlusSignNode
15TSCEPercentNode
13TSCEColonNode
ffffff
0C)Q
26TSCEASTDeleteOwnerRewriter
]r2<
~@fffff
40TSCEASTSearchForExternalOwnerUIDIterator
9TSCELexer
26TSCEASTOwnerUidMapRewriter
28TSCEASTForceOwnerUidRewriter
42TSCEASTHostCellAgnosticOwnerUidMapRewriter
34TSCEASTBadRefWithUidInfoIdentifier
44TSCEASTNumberToDurationForSageImportRewriter
25TSCEASTLetRemovalRewriter
20TSCECategoryRefValue
22TSCEEmptyArgumentValue
14TSCEASTElement
27TSCEASTElementWithUidTracts
26TSCEASTElementWithChildren
39TSCEASTElementWithUidTractsWithChildren
20TSCEASTBinaryElement
19TSCEASTColonElement
24TSCEASTColonTractElement
20TSCEASTStringElement
18TSCEASTDateElement
22TSCEASTDurationElement
22TSCEASTFunctionElement
29TSCEASTUnknownFunctionElement
24TSCEASTWhitespaceElement
30TSCEASTRelativeCoordRefElement
23TSCEASTLinkedRefElement
26TSCEASTUidReferenceElement
26TSCEASTViewTractRefElement
18TSCEASTListElement
19TSCEASTThunkElement
21TSCEASTLetBindElement
25TSCEASTCategoryRefElement
12TSCENilValue
22TSCEASTElementIterator
17TSCEASTEndElement
23TSTBakeFormulasDetector
32TSCEASTNodeFormulaStringIterator
@25TSCEASTRemoveRowsRewriter
?333333
?15TSCENumberValue
25TSCEASTSageImportRewriter
20TSTPivotUidOrderNode
15TSTUidOrderNode
32TSCEASTSearchForUidTractIterator
31TSCEASTConvertToUidRefsRewriter
16TSCEUnitlessZero
25TSCEASTMergeCellsRewriter
29TSCEASTUndoMergeCellsRewriter
18TSCEEmptyCellValue
18TSCEReferenceValue
NSt3__120__shared_ptr_emplaceI9TSCEValueNS_9allocatorIS1_EEEE
24TSCEASTLinkedRefRewriter
47TSTConvertFormulasFromBaseForCategoriesRewriter
45TSTConvertFormulasToBaseForCategoriesRewriter
26TSCEASTExcelExportRewriter
5RTreeIjLi2EdLi16ELi8EE
23TSTCategoryUidOrderNode
?333333
31TSCEASTMergeOriginMovedRewriter
44TSCEASTSearchForNumberToDateCoercionIterator
26TSCEASTReorderRowsRewriter
17TSCERichTextValue
26TSCEASTInsertOwnerRewriter
25TSCEASTFreezeRefsRewriter
23TSCEASTThawRefsRewriter
33TSCEASTConvertFromUidRefsRewriter
34TSCEASTConvertToColonTractRewriter
23TSCEASTGroupUIDRewriter
28TSCEASTGroupNodeUIDsRewriter
25TSCEASTSetAggTypeRewriter
32TSCEASTGroupNodesChangedRewriter
34TSTResolveRelativeAncestorRewriter
36TSTConvertToRelativeAncestorRewriter
TSCEArchives.proto
TSCE
TSPMessages.proto
TSKArchives.proto"Y
CellReferenceArchive
column
table_id
.TSP.CFUUIDArchive"a
InternalCellReferenceArchive
coordinate
.TSCE.CellCoordinateArchive
owner_id
RelativeCellRefArchive
relative_row_offset
relative_column_offset
table_uid
.TSP.UUID
preserve_column
preserve_row
is_spanning_column
is_spanning_row
RangeReferenceArchive
table_id
.TSP.CFUUIDArchive
top_left_column
top_left_row
bottom_right_column
bottom_right_row
InternalRangeReferenceArchive
owner_id
range
.TSCE.RangeCoordinateArchive"
IndexSetArchive
entries
2#.TSCE.IndexSetArchive.IndexSetEntry
IndexSetEntry
range_begin
range_end
CellCoordSetArchive
column_entries
2%.TSCE.CellCoordSetArchive.ColumnEntry
ColumnEntry
column
row_set
.TSCE.IndexSetArchive"
InternalCellRefSetArchive
owner_entries
2*.TSCE.InternalCellRefSetArchive.OwnerEntry
OwnerEntry
owner_id
coord_set
.TSCE.CellCoordSetArchive"<
ColumnRowSize
num_columns
num_rows
CellRectArchive
origin
.TSCE.CellCoordinateArchive
size
.TSCE.ColumnRowSize"
CellRefSetArchive
owner_entries
2".TSCE.CellRefSetArchive.OwnerEntry
OwnerEntry
owner_uid
.TSP.UUID
coord_set
.TSCE.CellCoordSetArchive"
UidCoordSetArchive
column_entries
2$.TSCE.UidCoordSetArchive.ColumnEntry
ColumnEntry
column
.TSP.UUID
row_set
.TSP.UUID"
UidCellRefSetArchive
owner_entries
2%.TSCE.UidCellRefSetArchive.OwnerEntry
OwnerEntry
owner_uid
.TSP.UUID
coord_set
.TSCE.UidCoordSetArchive"
ReferencesToDirtyArchive
to_dirty_owner_ids
.TSCE.IndexSetArchive
to_dirty_cells
.TSCE.InternalCellRefSetArchive
to_dirty_cells_additional
.TSCE.InternalCellRefSetArchive
to_dirty_range_refs
2#.TSCE.InternalRangeReferenceArchive
calc_in_progress_cells
.TSCE.InternalCellRefSetArchive
to_update_precedents_cells
.TSCE.InternalCellRefSetArchive"
CoordMapperArchive
table_uid
.TSP.UUID
summary_rows_set
.TSCE.IndexSetArchive
summary_columns_set
.TSCE.IndexSetArchive
label_rows_set
.TSCE.IndexSetArchive
base_to_view_row_map
2(.TSCE.CoordMapperArchive.BaseToViewEntry
base_to_view_column_map
2(.TSCE.CoordMapperArchive.BaseToViewEntry
summary_to_view_row_map
2+.TSCE.CoordMapperArchive.SummaryToViewEntry
summary_to_view_column_map
2+.TSCE.CoordMapperArchive.SummaryToViewEntry
BaseToViewEntry
base_column_or_row
view_column_or_row
SummaryToViewEntry
summary_column_or_row
view_column_or_row
ReferenceArchive
reference_type
2$.TSCE.ReferenceArchive.ReferenceType
cell_reference
.TSCE.CellReferenceArchive
range_reference
.TSCE.RangeReferenceArchive"M
ReferenceType
CELL_REFERENCE
RANGE_REFERENCE
NAME_DEPENDENCY
EdgeArchive
column
is_precedent
owner_id
.TSP.CFUUIDArchive"
EdgesArchive
packed_edge_without_owner
packed_edge_with_owner
owner_id_for_edge
.TSP.CFUUIDArchive
internal_owner_id_for_edge
ExpandedEdgesArchive
edge_without_owner_rows
edge_without_owner_columns
edge_with_owner_rows
edge_with_owner_columns
internal_owner_id_for_edge
CellRecordArchive
column
 dirty_self_plus_precedents_count
is_in_a_cycle
false
edge
.TSCE.EdgeArchiveB
contains_a_formula
true
has_calculated_precedents
false
#calculate_precedents_on_next_recalc
falseB
)translate_for_excel_import_on_next_recalc
false
edges
.TSCE.EdgesArchive"`
CellDependenciesArchive
cell_record
.TSCE.CellRecordArchive
num_dirty_cells
CellRecordExpandedArchive
column
 dirty_self_plus_precedents_count
is_in_a_cycle
false
has_calculated_precedents
false
expanded_edges
.TSCE.ExpandedEdgesArchive"W
CellDependenciesExpandedArchive
cell_record
.TSCE.CellRecordExpandedArchive"
CellRecordTileArchive
internal_owner_id
tile_column_begin
tile_row_begin
cell_records
.TSCE.CellRecordExpandedArchive"I
CellDependenciesTiledArchive
cell_record_tiles
.TSP.Reference"
VolatileDependenciesArchive
volatile_time_cell_column
volatile_time_cell_row
volatile_random_cell_column
volatile_random_cell_row
volatile_locale_cell_column
volatile_locale_cell_row
volatile_location_cell_column
volatile_location_cell_row
volatile_compass_cell_column
volatile_compass_cell_row
 volatile_remote_data_cell_column
volatile_remote_data_cell_row
%volatile_sheet_table_name_cell_column
"volatile_sheet_table_name_cell_row
!calculated_dependency_cell_column
calculated_dependency_cell_row
 volatile_geometry_cell_reference
.TSCE.CellReferenceArchive
volatile_geometry_cell
.TSCE.CellCoordinateArchive"
#VolatileDependenciesExpandedArchive
volatile_time_cells
.TSCE.CellCoordSetArchive
volatile_random_cells
.TSCE.CellCoordSetArchive
volatile_locale_cells
.TSCE.CellCoordSetArchive
volatile_sheet_table_name_cells
.TSCE.CellCoordSetArchive
volatile_remote_data_cells
.TSCE.CellCoordSetArchive
volatile_geometry_cell_refs
.TSCE.InternalCellRefSetArchive"c
 RTreeInternalNodeContentsArchive
child
.TSCE.RTreeNodeArchive"l
RTreeLeafNodeContentsArchive
cell_reference
.TSCE.CellReferenceArchive"
RTreeNodeArchive
level
count
internal_node_contents
2&.TSCE.RTreeInternalNodeContentsArchive
leaf_node_contents
2".TSCE.RTreeLeafNodeContentsArchive"
RTreeArchive
data_file_id
data_size
data_num_dims
data_elem_size
data_elem_real_size
data_max_nodes
data_min_nodes
root
.TSCE.RTreeNodeArchive"
RangeBackDependencyArchive
cell_coord_row
cell_coord_column
range_reference
.TSCE.RangeReferenceArchive
internal_range_reference
2#.TSCE.InternalRangeReferenceArchive"U
RangeDependenciesArchive
back_dependency
2 .TSCE.RangeBackDependencyArchive"
RangePrecedentsTileArchive
to_owner_id
from_to_range
23.TSCE.RangePrecedentsTileArchive.FromToRangeArchive
FromToRangeArchive
from_coord
.TSCE.CellCoordinateArchive
refers_to_rect
.TSCE.CellRectArchive"N
RangeDependenciesTiledArchive
range_precedents_tile
.TSP.Reference"
SpanningDependenciesArchive
column
range_context
2..TSCE.SpanningDependenciesArchive.RangeContext
cell
.TSCE.CellReferenceArchive
total_range_for_deleted_table
.TSCE.RangeCoordinateArchive
body_range_for_deleted_table
.TSCE.RangeCoordinateArchive
referring_column_to_local_cells
2=.TSCE.SpanningDependenciesArchive.ReferringColumnToLocalCells
 referring_column_to_remote_cells
2>.TSCE.SpanningDependenciesArchive.ReferringColumnToRemoteCells
ReferringColumnToLocalCells
column
range_context
2..TSCE.SpanningDependenciesArchive.RangeContext
cell_coordinate
.TSCE.CellCoordinateArchive
ReferringColumnToRemoteCells
column
range_context
2..TSCE.SpanningDependenciesArchive.RangeContext
internal_cell_reference
2".TSCE.InternalCellReferenceArchive"0
RangeContext
DEFAULT
INCLUDE_HEADERS
#SpanningDependenciesExpandedArchive
coord_refers_to_spans
2B.TSCE.SpanningDependenciesExpandedArchive.CellCoordRefersToExtents
total_range_for_table
.TSCE.RangeCoordinateArchive
body_range_for_table
.TSCE.RangeCoordinateArchive
ExtentRange
extent_begin
extent_end
ExtentRangeWithTableWithContext
owner_id
range_context
26.TSCE.SpanningDependenciesExpandedArchive.RangeContext
ranges
25.TSCE.SpanningDependenciesExpandedArchive.ExtentRange
CellCoordRefersToExtents
coordinate
.TSCE.CellCoordinateArchive
ranges_by_table_context
2I.TSCE.SpanningDependenciesExpandedArchive.ExtentRangeWithTableWithContext"0
RangeContext
DEFAULT
INCLUDE_HEADERS
WholeOwnerDependenciesArchive
dependent_cell
2".TSCE.InternalCellReferenceArchive"a
%WholeOwnerDependenciesExpandedArchive
dependent_cells
.TSCE.InternalCellRefSetArchive"
CellErrorsArchive
errors
2$.TSCE.CellErrorsArchive.ErrorForCell
ErrorForCell
coordinate
.TSCE.CellCoordinateArchive
error_flavor
2#.TSCE.CellErrorsArchive.ErrorFlavor
err_due_to_cell
2".TSCE.InternalCellReferenceArchive"i
ErrorFlavor
NONE
ERROR
REF_ERROR
CIRCULAR_REF_ERROR
UNSUPPORTED_FUNCTION_ERROR
UuidReferencesArchive
table_refs
2$.TSCE.UuidReferencesArchive.TableRef
table_uuid_refs
2,.TSCE.UuidReferencesArchive.TableWithUuidRef
TableRef
owner_uuid
.TSP.UUID
coord_set
.TSCE.CellCoordSetArchive
UuidRef
uuid
.TSP.UUID
coord_set
.TSCE.CellCoordSetArchive
TableWithUuidRef
owner_uuid
.TSP.UUID
uuid_refs
2#.TSCE.UuidReferencesArchive.UuidRef"
FormulaOwnerDependenciesArchive
formula_owner_uid
.TSP.UUID
internal_formula_owner_id
owner_kind
cell_dependencies
2%.TSCE.CellDependenciesExpandedArchive
range_dependencies
.TSCE.RangeDependenciesArchive
volatile_dependencies
2).TSCE.VolatileDependenciesExpandedArchive
spanning_column_dependencies
2).TSCE.SpanningDependenciesExpandedArchive
spanning_row_dependencies
2).TSCE.SpanningDependenciesExpandedArchive
whole_owner_dependencies
2+.TSCE.WholeOwnerDependenciesExpandedArchive
cell_errors
.TSCE.CellErrorsArchive
formula_owner
.TSP.Reference
base_owner_uid
.TSP.UUID
tiled_cell_dependencies
2".TSCE.CellDependenciesTiledArchive
uuid_references
.TSCE.UuidReferencesArchive
tiled_range_dependencies
2#.TSCE.RangeDependenciesTiledArchive"
FormulaOwnerInfoArchive
formula_owner_id
.TSP.CFUUIDArchive
cell_dependencies
.TSCE.CellDependenciesArchive
range_dependencies
.TSCE.RangeDependenciesArchive
volatile_dependencies
2!.TSCE.VolatileDependenciesArchive
spanning_column_dependencies
2!.TSCE.SpanningDependenciesArchive
spanning_row_dependencies
2!.TSCE.SpanningDependenciesArchive
whole_owner_dependencies
2#.TSCE.WholeOwnerDependenciesArchive
cell_errors
.TSCE.CellErrorsArchive
formula_owner
.TSP.Reference"Q
SubFormulaOwnerIDArchive
base_owner_uid
.TSP.UUID
owner_kind
OwnerIDMapArchive
map_entry
2..TSCE.OwnerIDMapArchive.OwnerIDMapArchiveEntry
unregistered_internal_owner_id
OwnerIDMapArchiveEntry
internal_owner_id
owner_id
.TSP.CFUUIDArchive"0
UidLookupListArchive
uuids
.TSP.UUID"
DependencyTrackerArchive
formula_owner_info
.TSCE.FormulaOwnerInfoArchive
dirty_leaf
.TSCE.CellReferenceArchiveB
owner_id_map
.TSCE.OwnerIDMapArchive
internal_dirty_leaf
2".TSCE.InternalCellReferenceArchiveB
number_of_formulas
formula_owner_dependencies
.TSP.Reference"e
RemoteDataSpecifierArchive
function_index
symbol
attribute
date
RemoteDataValueMapArchive
entry
22.TSCE.RemoteDataValueMapArchive.RemoteDataMapEntry
RemoteDataMapEntry
specifier
2 .TSCE.RemoteDataSpecifierArchive
value
.TSCE.CellValueArchive"
StockArchive
symbol
date
attribute
2!.TSCE.StockArchive.AttributeEntry
AttributeEntry
attribute
value
RemoteDataStoreArchive
value_map
.TSCE.RemoteDataValueMapArchive
stocks
.TSCE.StockArchive"q
NameTrackedReferencePair
name
tracked_reference
.TSP.Reference
tracked_reference_id
NamesByTrackedReferenceArchive
table_id
.TSP.CFUUIDArchive
name_tracked_reference_pair
.TSCE.NameTrackedReferencePair"
NamedReferenceManagerArchive
reference_tracker
.TSP.Reference
#names_by_tracked_reference_by_table
2$.TSCE.NamesByTrackedReferenceArchiveB
UuidSetStoreArchive
uuidSet
2!.TSCE.UuidSetStoreArchive.UuidSet
UuidSet
uuid
.TSP.UUID
index_of_set
UuidReferenceMapArchive
cell_refs_for_uuid
2-.TSCE.UuidReferenceMapArchive.CellRefsForUuid
CellRefsForUuid
uuid
.TSP.UUID
cell_ref
2".TSCE.InternalCellReferenceArchive
cell_refs
.TSCE.InternalCellRefSetArchive"
GroupByNodeMapArchive
refs_for_group_by
20.TSCE.GroupByNodeMapArchive.GroupNodesForGroupBy
CellRefsForGroupNode
group_node_uid
.TSP.UUID
cell_refs
.TSCE.InternalCellRefSetArchive
GroupNodesForGroupBy
group_by_uid
.TSP.UUID
refs_for_group_node
20.TSCE.GroupByNodeMapArchive.CellRefsForGroupNode"
CalculationEngineArchive
base_date_1904
dependency_tracker
.TSCE.DependencyTrackerArchive
named_reference_manager
.TSP.Reference
excel_import_date_mode
22.TSCE.CalculationEngineArchive.ExcelImportDateMode:
DATE_MODE_1900
saved_locale_identifier_for_4_2
document_random_seed
uuid_reference_map
.TSCE.UuidReferenceMapArchive
document_timestamp
document_timezone
table_uid_history
2 .TSCE.RewriteTableUIDInfoArchive
remote_data_store
.TSP.Reference
group_node_map
.TSCE.GroupByNodeMapArchive
header_name_manager
.TSP.Reference
refs_to_dirty
.TSP.Reference
saved_locale_identifier
begin_tracking_names_legacy_nrm
.TSP.UUID
end_tracking_names_legacy_nrm
.TSP.UUID"_
ExcelImportDateMode
DATE_MODE_1900
DATE_MODE_1900_LEGACY
DATE_MODE_1904_LEGACY
PreserveColumnRowFlagsArchive
begin_row_is_absolute
begin_column_is_absolute
end_row_is_absolute
end_column_is_absolute
CategoryReferenceArchive
group_by_uid
.TSP.UUID
column_uid
.TSP.UUID
aggregate_type
group_level
group_uids
2,.TSCE.CategoryReferenceArchive.CatRefUidList
preserve_flags
2#.TSCE.PreserveColumnRowFlagsArchive
relative_column
relative_group_uid
.TSP.UUID
absolute_group_uid
.TSP.UUID
option_refers_to_pivot_rows
option_refers_to_pivot_columns
agg_index_level
option_show_aggregate_name
CatRefUidList
.TSP.UUID"
ASTNodeArrayArchive
AST_node
2(.TSCE.ASTNodeArrayArchive.ASTNodeArchive
 ASTLocalCellReferenceNodeArchive
row_handle
column_handle
row_is_sticky
column_is_sticky
%ASTCrossTableCellReferenceNodeArchive
row_handle
column_handle
row_is_sticky
column_is_sticky
table_id
.TSP.CFUUIDArchive
)AST_reference_whitespace_after_sheet_name
*AST_reference_whitespace_before_table_name
)AST_reference_whitespace_after_table_name
,AST_reference_whitespace_before_cell_address
ASTColumnCoordinateArchive
column
absolute
false
ASTRowCoordinateArchive
absolute
false
ASTUidList
.TSP.UUID
ASTUidTract
columnUids
2$.TSCE.ASTNodeArrayArchive.ASTUidList
rowUids
2$.TSCE.ASTNodeArrayArchive.ASTUidList
is_range_ref
purpose
2,.TSCE.ASTNodeArrayArchive.ASTUidTractPurpose
preserve_rectangular
true
ASTStickyBits
begin_row_is_absolute
begin_column_is_absolute
end_row_is_absolute
end_column_is_absolute
ASTUidTractList
tract
2%.TSCE.ASTNodeArrayArchive.ASTUidTract
sticky_bits
2'.TSCE.ASTNodeArrayArchive.ASTStickyBits
ASTUidCoordinateArchive
column_uid
.TSP.UUID
row_uid
.TSP.UUID
column_absolute
row_absolute
ASTCategoryLevels
AST_column_group_level
AST_row_group_level
AST_agg_index_level
ASTCategoryReferenceArchive
category_ref
.TSCE.CategoryReferenceArchive
ASTColonTractArchive
relative_column
2P.TSCE.ASTNodeArrayArchive.ASTColonTractArchive.ASTColonTractRelativeRangeArchive
relative_row
2P.TSCE.ASTNodeArrayArchive.ASTColonTractArchive.ASTColonTractRelativeRangeArchive
absolute_column
2P.TSCE.ASTNodeArrayArchive.ASTColonTractArchive.ASTColonTractAbsoluteRangeArchive
absolute_row
2P.TSCE.ASTNodeArrayArchive.ASTColonTractArchive.ASTColonTractAbsoluteRangeArchive
preserve_rectangular
true
!ASTColonTractRelativeRangeArchive
range_begin
range_end
!ASTColonTractAbsoluteRangeArchive
range_begin
range_end
&ASTCrossTableReferenceExtraInfoArchive
table_id
.TSP.CFUUIDArchive
)AST_reference_whitespace_after_sheet_name
*AST_reference_whitespace_before_table_name
)AST_reference_whitespace_after_table_name
,AST_reference_whitespace_before_cell_address
ASTLetNodeWhitespace
AST_let_whitespace_after_let
#AST_let_whitespace_after_identifier
AST_let_whitespace_after_equals
"AST_let_whitespace_after_delimiter
ASTNodeArchive
AST_node_type
2%.TSCE.ASTNodeArrayArchive.ASTNodeType
AST_function_node_index
AST_function_node_numArgs
AST_number_node_number
AST_boolean_node_boolean
AST_string_node_string
AST_date_node_dateNum
"AST_date_node_suppress_date_format
"AST_date_node_suppress_time_format
AST_date_node_date_time_format
AST_duration_node_unitNum
AST_duration_node_unit
AST_duration_node_style
'AST_duration_node_duration_unit_largest
(AST_duration_node_duration_unit_smallest
%AST_duration_node_use_automatic_units
AST_token_node_boolean
AST_array_node_numCol
AST_array_node_numRow
AST_list_node_numArgs
AST_thunk_node_array
.TSCE.ASTNodeArrayArchive
'AST_local_cell_reference_node_reference
2:.TSCE.ASTNodeArrayArchive.ASTLocalCellReferenceNodeArchive
-AST_cross_table_cell_reference_node_reference
2?.TSCE.ASTNodeArrayArchive.ASTCrossTableCellReferenceNodeArchive
 AST_unknown_function_node_string
!AST_unknown_function_node_numArgs
AST_whitespace
AST_column
24.TSCE.ASTNodeArrayArchive.ASTColumnCoordinateArchive
AST_row
21.TSCE.ASTNodeArrayArchive.ASTRowCoordinateArchive
$AST_cross_table_reference_extra_info
2@.TSCE.ASTNodeArrayArchive.ASTCrossTableReferenceExtraInfoArchive
AST_uid_coordinate
21.TSCE.ASTNodeArrayArchive.ASTUidCoordinateArchive
AST_sticky_bits
2'.TSCE.ASTNodeArrayArchive.ASTStickyBits
AST_frozen_sticky_bits
2'.TSCE.ASTNodeArrayArchive.ASTStickyBits
AST_let_identifier
AST_let_e2
.TSCE.ASTNodeArrayArchive
AST_let_whitespace
2..TSCE.ASTNodeArrayArchive.ASTLetNodeWhitespace
AST_symbol
AST_tract_list
2).TSCE.ASTNodeArrayArchive.ASTUidTractList
AST_category_ref
25.TSCE.ASTNodeArrayArchive.ASTCategoryReferenceArchive
AST_colon_tract
2..TSCE.ASTNodeArrayArchive.ASTColonTractArchive
AST_number_node_decimal_low
AST_number_node_decimal_high
AST_category_levels
2+.TSCE.ASTNodeArrayArchive.ASTCategoryLevels"
ASTNodeType
ADDITION_NODE
SUBTRACTION_NODE
MULTIPLICATION_NODE
DIVISION_NODE
POWER_NODE
CONCATENATION_NODE
GREATER_THAN_NODE
GREATER_THAN_OR_EQUAL_TO_NODE
LESS_THAN_NODE
LESS_THAN_OR_EQUAL_TO_NODE
EQUAL_TO_NODE
NOT_EQUAL_TO_NODE
NEGATION_NODE
PLUS_SIGN_NODE
PERCENT_NODE
FUNCTION_NODE
NUMBER_NODE
BOOLEAN_NODE
STRING_NODE
DATE_NODE
DURATION_NODE
EMPTY_ARGUMENT_NODE
TOKEN_NODE
ARRAY_NODE
LIST_NODE
THUNK_NODE
LOCAL_CELL_REFERENCE_NODE
CROSS_TABLE_CELL_REFERENCE_NODE
COLON_NODE
REFERENCE_ERROR_NODE
UNKNOWN_FUNCTION_NODE
APPEND_WHITESPACE_NODE
PREPEND_WHITESPACE_NODE
BEGIN_EMBEDDED_NODE_ARRAY
END_THUNK_NODE
CELL_REFERENCE_NODE
COLON_NODE_WITH_UIDS
REFERENCE_ERROR_WITH_UIDS
UID_REFERENCE_NODE
LET_BIND_NODE
LET_VAR_NODE
LET_END_SCOPE_NODE
LINKED_CELL_REF_NODE
LINKED_COLUMN_REF_NODE
LINKED_ROW_REF_NODE
CATEGORY_REF_NODE
COLON_TRACT_NODE
VIEW_TRACT_REF_NODE
ASTUidTractPurpose
UIDS_INCLUDED
UIDS_PREMERGE
UIDS_PREMOVEREGION
UIDS_EXCLUDED
UIDS_ACTIVE
UIDS_PREMERGE_TOPLEFT
UIDS_REMOVED_BY_MOVE
FULLTUPLE_ROW_COLUMN_HEADER
FULLTUPLE_AGGREGATE_RULE_UID
%FULLTUPLE_ROW_COLUMN_RULE_VALUE_PAIRS
FormulaTranslationFlagsArchive
excel_import_translation
false
+number_to_date_coercion_removal_translation
false
contains_uid_form_references
false
contains_frozen_references
false
returns_percent_formatted
false"
FormulaArchive
AST_node_array
.TSCE.ASTNodeArrayArchive
host_column
host_row
host_column_is_negative
false
host_row_is_negative
false
translation_flags
2$.TSCE.FormulaTranslationFlagsArchive
host_table_uid
.TSP.UUID
host_column_uid
.TSP.UUID
host_row_uid
.TSP.UUID"I
FunctorArchive
formula
.TSCE.FormulaArchive
num_args
FormatStructArchive
format_type
decimal_places
currency_code
negative_style
show_thousands_separator
use_accounting_style
duration_style
base
base_places
base_use_minus_sign
fraction_accuracy
suppress_date_format
suppress_time_format
date_time_format
duration_unit_largest
duration_unit_smallest
RangeCoordinateArchive
top_left_column
top_left_row
bottom_right_column
bottom_right_row
TableTransposeInfoArchive
number_of_footer_rows
body_range_for_transposed_table
.TSCE.RangeCoordinateArchive"c
MergeOriginMovedArchive
src_column
src_row
dst_column
dst_row
OwnerUIDMapperArchive
table_uid
.TSP.UUID
next_table_uid
.TSP.UUID
hidden_state_for_rows_owner_uid
.TSP.UUID
$next_hidden_state_for_rows_owner_uid
.TSP.UUID
"hidden_state_for_columns_owner_uid
.TSP.UUID
'next_hidden_state_for_columns_owner_uid
.TSP.UUID
conditional_style_owner_uid
.TSP.UUID
 next_conditional_style_owner_uid
.TSP.UUID
%sort_rule_reference_tracker_owner_uid
.TSP.UUID
*next_sort_rule_reference_tracker_owner_uid
.TSP.UUID
merge_owner_uid
.TSP.UUID
next_merge_owner_uid
.TSP.UUID
category_aggregates_owner_uid
.TSP.UUID
"next_category_aggregates_owner_uid
.TSP.UUID
group_by_uid
.TSP.UUID
next_group_by_uid
.TSP.UUID
pencil_annotation_owner_uid
.TSP.UUID
 next_pencil_annotation_owner_uid
.TSP.UUID"
RewriteTableUIDInfoArchive
table_uid_map
28.TSCE.RewriteTableUIDInfoArchive.TableUIDMapEntryArchive
TableUIDMapEntryArchive
prev_table_uid
.TSP.UUID
new_table_uid
.TSP.UUID"
GroupByChangeArchive
change_type
2%.TSCE.GroupByChangeArchive.ChangeType
group_by_uid
.TSP.UUID
previous_level
updated_level
previous_to_updated_map
.TSP.UUIDMapArchive
updated_to_previous_map
.TSP.UUIDMapArchive
removed_group_uids
.TSP.UUID
grouping_column_changes
26.TSCE.GroupByChangeArchive.GroupingColumnChangeArchive
GroupingColumnChangeArchive
old_level
new_level
ChangeType
NONE
GROUP_VALUE_CHANGE
GROUP_DEFINITION_CHANGE
REMOVE_GROUP_LEVEL
ADD_GROUP_LEVEL
PROMOTE
DEMOTE
RewriteGroupNodeUIDInfoArchive
group_by_uid
.TSP.UUID
group_node_uid_map
.TSP.UUIDMapArchive"
IndexedUidsArchive
uids
2#.TSCE.IndexedUidsArchive.IndexedUid
IndexedUid
uid_for_index
.TSP.UUID
index_for_uid
RewriteRangeEntryArchive
range_location
range_length
range_uids
.TSP.UUID
offset
ColumnOrRowUuidsInfoArchive
is_rows
table_uid
.TSP.UUID
cond_style_owner_uid
.TSP.UUID
group_by_uid
.TSP.UUID
uids
.TSCE.IndexedUidsArchive
range_entries
.TSCE.RewriteRangeEntryArchive
table_range
.TSCE.RangeCoordinateArchive
insert_at_uid
.TSP.UUID
insert_opposite_uid
.TSP.UUID"
RegionInfoArchive
table_uid
.TSP.UUID
column_uids
.TSCE.IndexedUidsArchive
row_uids
.TSCE.IndexedUidsArchive"
RegionMovedInfoArchive
src_region
.TSCE.RegionInfoArchive
dst_region
.TSCE.RegionInfoArchive
span_rows
span_columns
original_src_region
.TSCE.RegionInfoArchive
final_dest_table_uid
.TSP.UUID"=
MergeSourceArchive
coord_column
coord_row
HauntedOwnerArchive
owner_uid
.TSP.UUID"H
CellCoordinateArchive
packedData
column
CellCoordinateVectorArchive
cell_coord
.TSCE.CellCoordinateArchive"p
 ExpandedCellRefObjectPairArchive
cell_ref
.TSCE.CellReferenceArchive
object
.TSP.Reference"g
ExpandedCellRefObjectMapArchive
cell_ref_object_pair
2&.TSCE.ExpandedCellRefObjectPairArchive"
FormulaAtCoordArchive
column
formula
.TSCE.FormulaArchive
repeat_previous_formula
false"
FormulaCoordPairsByOwnerArchive
owner_kind
owner_uid
.TSP.UUID
formula_at_coords
.TSCE.FormulaAtCoordArchive"[
FormulasForUndoArchive
formulas_for_owner
2%.TSCE.FormulaCoordPairsByOwnerArchive"q
FormulaRewriteCommandArchive
table_rewrite_command
.TSP.Reference
super
.TSK.CommandArchive"U
TrackedReferenceArchive
.TSCE.ASTNodeArrayArchive
formula_id
ExpandedTrackedReferenceArchive
.TSCE.ASTNodeArrayArchive
formula_column
formula_row
TrackedReferenceStoreArchive
uuid
.TSP.CFUUIDArchive
tracked_reference
.TSP.ReferenceB
contained_tracked_reference
.TSCE.TrackedReferenceArchive
$contained_expanded_tracked_reference
2%.TSCE.ExpandedTrackedReferenceArchive"
ViewTractRefArchive
table_uid
.TSP.UUID
uid_tract
2%.TSCE.ASTNodeArrayArchive.ASTUidTract
preserve_flags
2#.TSCE.PreserveColumnRowFlagsArchive
agg_index_level
column_group_level
row_group_level
BooleanCellValueArchive
value
format
.TSK.FormatStructArchive
format_is_explicit
false"
DateCellValueArchive
value
format
.TSK.FormatStructArchive
format_is_implicit
format_is_explicit
false"
NumberCellValueArchive
value
unit_index
currency_code
format
.TSK.FormatStructArchive
format_is_implicit
format_is_explicit
false
decimal_low
decimal_high
StringCellValueArchive
value
format
.TSK.FormatStructArchive
format_is_implicit
format_is_explicit
false
is_regex
false
is_case_sensitive_regex
false"y
ErrorCellValueArchive
error_type
extra_info_int
extra_info_string
extra_info_double
CellValueArchive
cell_value_type
2$.TSCE.CellValueArchive.CellValueType
boolean_value
.TSCE.BooleanCellValueArchive
date_value
.TSCE.DateCellValueArchive
number_value
.TSCE.NumberCellValueArchive
string_value
.TSCE.StringCellValueArchive
error_value
.TSCE.ErrorCellValueArchive"`
CellValueType
NIL_TYPE
BOOLEAN_TYPE
DATE_TYPE
NUMBER_TYPE
STRING_TYPE
N4TSCE20CellReferenceArchiveE
N4TSCE28InternalCellReferenceArchiveE
N4TSCE22RelativeCellRefArchiveE
N4TSCE21RangeReferenceArchiveE
N4TSCE29InternalRangeReferenceArchiveE
N4TSCE29IndexSetArchive_IndexSetEntryE
N4TSCE15IndexSetArchiveE
N4TSCE31CellCoordSetArchive_ColumnEntryE
N4TSCE19CellCoordSetArchiveE
N4TSCE36InternalCellRefSetArchive_OwnerEntryE
N4TSCE25InternalCellRefSetArchiveE
N4TSCE13ColumnRowSizeE
N4TSCE15CellRectArchiveE
N4TSCE28CellRefSetArchive_OwnerEntryE
N4TSCE17CellRefSetArchiveE
N4TSCE30UidCoordSetArchive_ColumnEntryE
N4TSCE18UidCoordSetArchiveE
N4TSCE31UidCellRefSetArchive_OwnerEntryE
N4TSCE20UidCellRefSetArchiveE
N4TSCE24ReferencesToDirtyArchiveE
N4TSCE34CoordMapperArchive_BaseToViewEntryE
N4TSCE37CoordMapperArchive_SummaryToViewEntryE
N4TSCE18CoordMapperArchiveE
N4TSCE16ReferenceArchiveE
N4TSCE11EdgeArchiveE
N4TSCE12EdgesArchiveE
N4TSCE20ExpandedEdgesArchiveE
N4TSCE17CellRecordArchiveE
N4TSCE23CellDependenciesArchiveE
N4TSCE25CellRecordExpandedArchiveE
N4TSCE31CellDependenciesExpandedArchiveE
N4TSCE21CellRecordTileArchiveE
N4TSCE28CellDependenciesTiledArchiveE
N4TSCE27VolatileDependenciesArchiveE
N4TSCE35VolatileDependenciesExpandedArchiveE
N4TSCE32RTreeInternalNodeContentsArchiveE
N4TSCE28RTreeLeafNodeContentsArchiveE
N4TSCE16RTreeNodeArchiveE
N4TSCE12RTreeArchiveE
N4TSCE26RangeBackDependencyArchiveE
N4TSCE24RangeDependenciesArchiveE
N4TSCE45RangePrecedentsTileArchive_FromToRangeArchiveE
N4TSCE26RangePrecedentsTileArchiveE
N4TSCE29RangeDependenciesTiledArchiveE
N4TSCE55SpanningDependenciesArchive_ReferringColumnToLocalCellsE
N4TSCE56SpanningDependenciesArchive_ReferringColumnToRemoteCellsE
N4TSCE27SpanningDependenciesArchiveE
N4TSCE47SpanningDependenciesExpandedArchive_ExtentRangeE
N4TSCE67SpanningDependenciesExpandedArchive_ExtentRangeWithTableWithContextE
N4TSCE60SpanningDependenciesExpandedArchive_CellCoordRefersToExtentsE
N4TSCE35SpanningDependenciesExpandedArchiveE
N4TSCE29WholeOwnerDependenciesArchiveE
N4TSCE37WholeOwnerDependenciesExpandedArchiveE
N4TSCE30CellErrorsArchive_ErrorForCellE
N4TSCE17CellErrorsArchiveE
N4TSCE30UuidReferencesArchive_TableRefE
N4TSCE29UuidReferencesArchive_UuidRefE
N4TSCE38UuidReferencesArchive_TableWithUuidRefE
N4TSCE21UuidReferencesArchiveE
N4TSCE31FormulaOwnerDependenciesArchiveE
N4TSCE23FormulaOwnerInfoArchiveE
N4TSCE24SubFormulaOwnerIDArchiveE
N4TSCE40OwnerIDMapArchive_OwnerIDMapArchiveEntryE
N4TSCE17OwnerIDMapArchiveE
N4TSCE20UidLookupListArchiveE
N4TSCE24DependencyTrackerArchiveE
N4TSCE26RemoteDataSpecifierArchiveE
N4TSCE44RemoteDataValueMapArchive_RemoteDataMapEntryE
N4TSCE25RemoteDataValueMapArchiveE
N4TSCE27StockArchive_AttributeEntryE
N4TSCE12StockArchiveE
N4TSCE22RemoteDataStoreArchiveE
N4TSCE24NameTrackedReferencePairE
N4TSCE30NamesByTrackedReferenceArchiveE
N4TSCE28NamedReferenceManagerArchiveE
N4TSCE27UuidSetStoreArchive_UuidSetE
N4TSCE19UuidSetStoreArchiveE
N4TSCE39UuidReferenceMapArchive_CellRefsForUuidE
N4TSCE23UuidReferenceMapArchiveE
N4TSCE42GroupByNodeMapArchive_CellRefsForGroupNodeE
N4TSCE42GroupByNodeMapArchive_GroupNodesForGroupByE
N4TSCE21GroupByNodeMapArchiveE
N4TSCE24CalculationEngineArchiveE
N4TSCE29PreserveColumnRowFlagsArchiveE
N4TSCE38CategoryReferenceArchive_CatRefUidListE
N4TSCE24CategoryReferenceArchiveE
N4TSCE52ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchiveE
N4TSCE57ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchiveE
N4TSCE46ASTNodeArrayArchive_ASTColumnCoordinateArchiveE
N4TSCE43ASTNodeArrayArchive_ASTRowCoordinateArchiveE
N4TSCE30ASTNodeArrayArchive_ASTUidListE
N4TSCE31ASTNodeArrayArchive_ASTUidTractE
N4TSCE33ASTNodeArrayArchive_ASTStickyBitsE
N4TSCE35ASTNodeArrayArchive_ASTUidTractListE
N4TSCE43ASTNodeArrayArchive_ASTUidCoordinateArchiveE
N4TSCE37ASTNodeArrayArchive_ASTCategoryLevelsE
N4TSCE47ASTNodeArrayArchive_ASTCategoryReferenceArchiveE
N4TSCE74ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractRelativeRangeArchiveE
N4TSCE74ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractAbsoluteRangeArchiveE
N4TSCE40ASTNodeArrayArchive_ASTColonTractArchiveE
N4TSCE58ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchiveE
N4TSCE40ASTNodeArrayArchive_ASTLetNodeWhitespaceE
N4TSCE34ASTNodeArrayArchive_ASTNodeArchiveE
N4TSCE19ASTNodeArrayArchiveE
N4TSCE30FormulaTranslationFlagsArchiveE
N4TSCE14FormulaArchiveE
N4TSCE14FunctorArchiveE
N4TSCE19FormatStructArchiveE
N4TSCE22RangeCoordinateArchiveE
N4TSCE25TableTransposeInfoArchiveE
N4TSCE23MergeOriginMovedArchiveE
N4TSCE21OwnerUIDMapperArchiveE
N4TSCE50RewriteTableUIDInfoArchive_TableUIDMapEntryArchiveE
N4TSCE26RewriteTableUIDInfoArchiveE
N4TSCE48GroupByChangeArchive_GroupingColumnChangeArchiveE
N4TSCE20GroupByChangeArchiveE
N4TSCE30RewriteGroupNodeUIDInfoArchiveE
N4TSCE29IndexedUidsArchive_IndexedUidE
N4TSCE18IndexedUidsArchiveE
N4TSCE24RewriteRangeEntryArchiveE
N4TSCE27ColumnOrRowUuidsInfoArchiveE
N4TSCE17RegionInfoArchiveE
N4TSCE22RegionMovedInfoArchiveE
N4TSCE18MergeSourceArchiveE
N4TSCE19HauntedOwnerArchiveE
N4TSCE21CellCoordinateArchiveE
N4TSCE27CellCoordinateVectorArchiveE
N4TSCE32ExpandedCellRefObjectPairArchiveE
N4TSCE31ExpandedCellRefObjectMapArchiveE
N4TSCE21FormulaAtCoordArchiveE
N4TSCE31FormulaCoordPairsByOwnerArchiveE
N4TSCE22FormulasForUndoArchiveE
N4TSCE28FormulaRewriteCommandArchiveE
N4TSCE23TrackedReferenceArchiveE
N4TSCE31ExpandedTrackedReferenceArchiveE
N4TSCE28TrackedReferenceStoreArchiveE
N4TSCE19ViewTractRefArchiveE
N4TSCE23BooleanCellValueArchiveE
N4TSCE20DateCellValueArchiveE
N4TSCE22NumberCellValueArchiveE
N4TSCE22StringCellValueArchiveE
N4TSCE21ErrorCellValueArchiveE
N4TSCE16CellValueArchiveE
N6google8protobuf8internal16InternalMetadata9ContainerINS0_15UnknownFieldSetEEE
N6google8protobuf8internal16InternalMetadata13ContainerBaseE
31TSCEASTOffsetReferencesRewriter
 !"#$%&'(*+,-./012356789ABCD`afghijklmno
   ! " # $ % & ' ( ) / 0 1 2 3 4 5 6 7 8 9 : ; < = > ? @ A B C D E F G H I J K L M N O P Q R S T W _ p q t u v w x y z { | } ~ 
! !!!"!#!$!%!&!'!(!)!*!+!,!-!.!/!0!1!2!3!4!5!6!7!8!9!:!;!=!>!?!@!A!B!C!D!E!F!G!H!I!J!K!S!T!U!V!W!X!Y!Z![!\!]!^!_!`!a!b!c!d!e!f!g!h!i!j!k!l!m!n!o!p!q!r!s!t!u!v!w!x!y!z!{!|!}!~!
" "!"""#"$"%"&"'"(")"*"+","-"."/"0"1"2"3"4"5"6"7"8"9":";"<"=">"?"@"A"B"C"D"E"F"G"H"I"J"K"L"M"N"O"P"Q"R"S"T"U"V"W"X"Y"Z"["\"]"^"_"`"a"b"c"d"e"f"g"h"i"j"k"l"m"n"o"p"q"r"s"t"u"v"w"x"y"z"{"|"}"~"
# #!#"###$#%#&#'#(#)#*#+#,#-#.#/#0#1#2#3#4#5#6#7#8#9#:#;#<#=#>#?#@#A#B#C#D#E#F#G#H#I#J#K#L#M#N#O#P#Q#R#S#T#U#V#W#X#Y#Z#[#\#]#^#_#`#a#b#c#d#e#f#g#h#i#j#k#l#m#n#o#p#q#r#s#t#u#v#w#x#y#z#{#|#}#~#
$ $!$"$#$$$%$&$@$A$B$C$D$E$F$G$H$I$J$`$a$b$c$d$e$f$g$h$i$j$k$l$m$n$o$p$q$r$s$t$u$v$w$x$y$z${$|$}$~$
% %!%"%#%$%%%&%'%(%)%*%+%,%-%.%/%0%1%2%3%4%5%6%7%8%9%:%;%<%=%>%?%@%A%B%C%D%E%F%G%H%I%J%K%L%M%N%O%P%Q%R%S%T%U%V%W%X%Y%Z%[%\%]%^%_%`%a%b%c%d%e%f%g%h%i%j%k%l%m%n%o%p%q%r%s%t%u%v%w%x%y%z%{%|%}%~%
& &!&"&#&$&%&&&'&(&)&*&+&,&-&.&/&0&1&2&3&4&5&6&7&8&9&:&;&<&=&>&?&@&A&B&C&D&E&F&G&H&I&J&K&L&M&N&O&P&Q&R&S&T&U&V&W&X&Y&Z&[&\&]&^&_&`&a&b&c&d&e&f&g&h&i&j&k&l&m&n&o&p&q&r&s&t&u&v&w&x&y&z&{&|&}&
' '!'"'#'$'%'&''')'*'+','-'.'/'0'1'2'3'4'5'6'7'8'9':';'<'='>'?'@'A'B'C'D'E'F'G'H'I'J'K'M'O'P'Q'R'V'X'Y'Z'['\']'^'a'b'c'd'e'f'g'h'i'j'k'l'm'n'o'p'q'r's't'u'v'w'x'y'z'{'|'}'~'
( (!("(#($(%(&('((()(*(+(,(-(.(/(0(1(2(3(4(5(6(7(8(9(:(;(<(=(>(?(@(A(B(C(D(E(F(G(H(I(J(K(L(M(N(O(P(Q(R(S(T(U(V(W(X(Y(Z([(\(](^(_(`(a(b(c(d(e(f(g(h(i(j(k(l(m(n(o(p(q(r(s(t(u(v(w(x(y(z({(|(}(~(
) )!)")#)$)%)&)')()))*)+),)-).)/)0)1)2)3)4)5)6)7)8)9):);)<)=)>)?)@)A)B)C)D)E)F)G)H)I)J)K)L)M)N)O)P)Q)R)S)T)U)V)W)X)Y)Z)[)\)])^)_)`)a)b)c)d)e)f)g)h)i)j)k)l)m)n)o)p)q)r)s)t)u)v)w)x)y)z){)|)})~)
* *!*"*#*$*%*&*'*(*)***+*,*-*.*/*0*1*2*3*4*5*6*7*8*9*:*;*<*=*>*?*@*A*B*C*D*E*F*G*H*I*J*K*L*M*N*O*P*Q*R*S*T*U*V*W*X*Y*Z*[*\*]*^*_*`*a*b*c*d*e*f*g*h*i*j*k*l*m*n*o*p*q*r*s*t*u*v*w*x*y*z*{*|*}*~*
/ /!/"/#/$/%/&/'/(/)/*/+/,/-/.///0/1/2/3/4/5/6/7/8/9/:/;/</=/>/?/@/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S/T/U/V/W/X/Y/Z/[/\/]/^/_/`/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/{/|/}/~/
0 0!0"0#0$0%0&0'0(0)000102030405060708090:0;0<0=0>0?0A0B0C0D0E0F0G0H0I0J0K0L0M0N0O0P0Q0R0S0T0U0V0W0X0Y0Z0[0\0]0^0_0`0a0b0c0d0e0f0g0h0i0j0k0l0m0n0o0p0q0r0s0t0u0v0w0x0y0z0{0|0}0~0
1 1!1"1#1$1%1&1'1(1)1*1+1,1112131415161718191:1;1<1=1>1?1@1A1B1C1D1E1F1G1H1I1J1K1L1M1N1O1P1Q1R1S1T1U1V1W1X1Y1Z1[1\1]1^1_1`1a1b1c1d1e1f1g1h1i1j1k1l1m1n1o1p1q1r1s1t1u1v1w1x1y1z1{1|1}1~1
2 2!2"2#2$2%2&2'2(2)2*2+2,2-2.2/202122232425262728292:2;2<2=2>2?2@2A2B2C2P2Q2R2S2T2U2V2W2X2Y2Z2[2\2]2^2_2`2a2b2c2d2e2f2g2h2i2j2k2l2m2n2o2p2q2r2s2t2u2v2w2x2y2z2{2|2}2
3 3!3"3#3$3%3&3'3(3)3*3+3,3-3.3/303132333435363738393:3;3<3=3>3?3@3A3B3C3D3E3F3G3H3I3J3K3L3M3N3O3P3Q3R3S3T3U3V3W3X3Y3Z3[3\3]3^3_3`3a3b3c3d3e3f3g3h3i3j3k3l3m3n3o3p3q3r3s3t3u3v3w3x3y3z3{3|3}3~3
16TSTTableResolver
17TSCETableResolver
23TSCEASTSortRowsRewriter
19TSCEASTIteratorBase
TSTArchives.sos.proto
TSTSOS
TSDArchives.sos.proto
TSSArchives.sos.proto
TSTStylePropertyArchiving.proto
TSWPArchives.sos.proto"t
#SpecSetTableStrokePresetListArchive
table_stroke_preset_list
.TST.StrokePresetListArchive
unset
 SpecTableStrokePresetListArchive
!spec_set_table_stroke_preset_list
2+.TSTSOS.SpecSetTableStrokePresetListArchive"
&TableCellStylePropertyChangeSetArchive
text_wrap
.TSSSOS.SpecBoolArchive
text_wrap_undefined
type
.TSSSOS.SpecIntegerArchive
type_undefined
fill
.TSDSOS.SpecFillArchive
fill_undefined
vertical_alignment
.TSSSOS.SpecIntegerArchive
vertical_alignment_undefined
padding
.TSWPSOS.SpecPaddingArchive
padding_undefined
"TableStylePropertyChangeSetArchive
auto_resize
.TSSSOS.SpecBoolArchive
auto_resize_undefined
banded_rows
.TSSSOS.SpecBoolArchive
banded_rows_undefined
banded_cell_fill
.TSDSOS.SpecFillArchive
banded_cell_fill_undefined
behaves_like_spreadsheet
.TSSSOS.SpecBoolArchive
"behaves_like_spreadsheet_undefined
body_horizontal_border_stroke
.TSDSOS.SpecStrokeArchive
'body_horizontal_border_stroke_undefined
body_vertical_border_stroke
.TSDSOS.SpecStrokeArchive
%body_vertical_border_stroke_undefined
body_horizontal_stroke
.TSDSOS.SpecStrokeArchive
 body_horizontal_stroke_undefined
body_vertical_stroke
.TSDSOS.SpecStrokeArchive
body_vertical_stroke_undefined
header_column_border_stroke
.TSDSOS.SpecStrokeArchive
%header_column_border_stroke_undefined
header_column_vertical_stroke
.TSDSOS.SpecStrokeArchive
'header_column_vertical_stroke_undefined
header_column_horizontal_stroke
.TSDSOS.SpecStrokeArchive
)header_column_horizontal_stroke_undefined
header_column_separator_stroke
.TSDSOS.SpecStrokeArchive
(header_column_separator_stroke_undefined
header_row_border_stroke
.TSDSOS.SpecStrokeArchive
"header_row_border_stroke_undefined
header_row_horizontal_stroke
.TSDSOS.SpecStrokeArchive
&header_row_horizontal_stroke_undefined
header_row_vertical_stroke
.TSDSOS.SpecStrokeArchive
$header_row_vertical_stroke_undefined
header_row_separator_stroke
.TSDSOS.SpecStrokeArchive
%header_row_separator_stroke_undefined
footer_row_border_stroke
.TSDSOS.SpecStrokeArchive
"footer_row_border_stroke_undefined
footer_row_horizontal_stroke
.TSDSOS.SpecStrokeArchive
&footer_row_horizontal_stroke_undefined
footer_row_vertical_stroke
.TSDSOS.SpecStrokeArchive
$footer_row_vertical_stroke_undefined
footer_row_separator_stroke
.TSDSOS.SpecStrokeArchive
%footer_row_separator_stroke_undefined
stroke_preset_list_object
2(.TSTSOS.SpecTableStrokePresetListArchive
#stroke_preset_list_object_undefined
vertical_strokes_visible
.TSSSOS.SpecBoolArchive
"vertical_strokes_visible_undefined
horizontal_strokes_visible
.TSSSOS.SpecBoolArchive
$horizontal_strokes_visible_undefined
header_row_sep_visible
.TSSSOS.SpecBoolArchive
 header_row_sep_visible_undefined
header_row_verticals_visible
.TSSSOS.SpecBoolArchive
&header_row_verticals_visible_undefined
header_col_sep_visible
.TSSSOS.SpecBoolArchive
 header_col_sep_visible_undefined
header_col_horizontals_visible
.TSSSOS.SpecBoolArchive
(header_col_horizontals_visible_undefined
footer_sep_visible
.TSSSOS.SpecBoolArchive
footer_sep_visible_undefined
footer_verticals_visible
.TSSSOS.SpecBoolArchive
"footer_verticals_visible_undefined
border_strokes_visible
.TSSSOS.SpecBoolArchive
 border_strokes_visible_undefined
master_font_family
.TSSSOS.SpecStringArchive
master_font_family_undefined
writing_direction
.TSSSOS.SpecIntegerArchive
writing_direction_undefined
category_level1_top_stroke
.TSDSOS.SpecStrokeArchive
$category_level1_top_stroke_undefined
category_level2_top_stroke
.TSDSOS.SpecStrokeArchive
$category_level2_top_stroke_undefined
category_level3_top_stroke
.TSDSOS.SpecStrokeArchive
$category_level3_top_stroke_undefined
category_level4_top_stroke
.TSDSOS.SpecStrokeArchive
$category_level4_top_stroke_undefined
category_level5_top_stroke
.TSDSOS.SpecStrokeArchive
$category_level5_top_stroke_undefined
&category_level1_label_separator_stroke
.TSDSOS.SpecStrokeArchive
0category_level1_label_separator_stroke_undefined
&category_level2_label_separator_stroke
.TSDSOS.SpecStrokeArchive
0category_level2_label_separator_stroke_undefined
&category_level3_label_separator_stroke
.TSDSOS.SpecStrokeArchive
0category_level3_label_separator_stroke_undefined
&category_level4_label_separator_stroke
.TSDSOS.SpecStrokeArchive
0category_level4_label_separator_stroke_undefined
&category_level5_label_separator_stroke
.TSDSOS.SpecStrokeArchive
0category_level5_label_separator_stroke_undefined
category_level1_bottom_stroke
.TSDSOS.SpecStrokeArchive
'category_level1_bottom_stroke_undefined
category_level2_bottom_stroke
.TSDSOS.SpecStrokeArchive
'category_level2_bottom_stroke_undefined
category_level3_bottom_stroke
.TSDSOS.SpecStrokeArchive
'category_level3_bottom_stroke_undefined
category_level4_bottom_stroke
.TSDSOS.SpecStrokeArchive
'category_level4_bottom_stroke_undefined
category_level5_bottom_stroke
.TSDSOS.SpecStrokeArchive
'category_level5_bottom_stroke_undefined
category_level1_interior_stroke
.TSDSOS.SpecStrokeArchive
)category_level1_interior_stroke_undefined
category_level2_interior_stroke
.TSDSOS.SpecStrokeArchive
)category_level2_interior_stroke_undefined
category_level3_interior_stroke
.TSDSOS.SpecStrokeArchive
)category_level3_interior_stroke_undefined
category_level4_interior_stroke
.TSDSOS.SpecStrokeArchive
)category_level4_interior_stroke_undefined
category_level5_interior_stroke
.TSDSOS.SpecStrokeArchive
)category_level5_interior_stroke_undefined
"body_pivot_group_horizontal_stroke
.TSDSOS.SpecStrokeArchive
,body_pivot_group_horizontal_stroke_undefined
 body_pivot_group_vertical_stroke
.TSDSOS.SpecStrokeArchive
*body_pivot_group_vertical_stroke_undefined
(body_pivot_de_emphasis_horizontal_stroke
.TSDSOS.SpecStrokeArchive
2body_pivot_de_emphasis_horizontal_stroke_undefined
#body_pivot_emphasis_vertical_stroke
.TSDSOS.SpecStrokeArchive
-body_pivot_emphasis_vertical_stroke_undefined
+header_column_pivot_group_horizontal_stroke
.TSDSOS.SpecStrokeArchive
5header_column_pivot_group_horizontal_stroke_undefined
,header_column_pivot_group_de_emphasis_stroke
.TSDSOS.SpecStrokeArchive
6header_column_pivot_group_de_emphasis_stroke_undefined
$header_column_pivot_separator_stroke
.TSDSOS.SpecStrokeArchive
.header_column_pivot_separator_stroke_undefined
&header_row_pivot_group_vertical_stroke
.TSDSOS.SpecStrokeArchive
0header_row_pivot_group_vertical_stroke_undefined
)header_row_pivot_group_de_emphasis_stroke
.TSDSOS.SpecStrokeArchive
3header_row_pivot_group_de_emphasis_stroke_undefined
header_row_pivot_title_stroke
.TSDSOS.SpecStrokeArchive
'header_row_pivot_title_stroke_undefined
&footer_row_pivot_group_vertical_stroke
.TSDSOS.SpecStrokeArchive
0footer_row_pivot_group_vertical_stroke_undefined
N6TSTSOS35SpecSetTableStrokePresetListArchiveE
N6TSTSOS32SpecTableStrokePresetListArchiveE
N6TSTSOS38TableCellStylePropertyChangeSetArchiveE
N6TSTSOS34TableStylePropertyChangeSetArchiveE
31TSCEASTIsSingleNodeTypeRewriter
16TSCEFunction_ABS
20TSCEFunction_ACCRINT
22TSCEFinancialFunctions
21TSCEFunction_ACCRINTM
17TSCEFunction_ACOS
18TSCEFunction_ACOSH
20TSCEFunction_ADDRESS
16TSCEFunction_AND
18TSCEFunction_AREAS
17TSCEFunction_ASIN
18TSCEFunction_ASINH
17TSCEFunction_ATAN
18TSCEFunction_ATAN2
18TSCEFunction_ATANH
19TSCEFunction_AVEDEV
20TSCEFunction_AVERAGE
21TSCEFunction_AVERAGEA
22TSCEFunction_AVERAGEIF
23TSCEFunction_AVERAGEIFS
22TSCEFunction_BASETONUM
20TSCEFunction_BESSELJ
20TSCEFunction_BESSELY
21TSCEFunction_BETADIST
20TSCEFunction_BETAINV
20TSCEFunction_BIN2DEC
20TSCEFunction_BIN2HEX
20TSCEFunction_BIN2OCT
22TSCEFunction_BINOMDIST
25TSCEFunction_BONDDURATION
26TSCEFunction_BONDMDURATION
20TSCEFunction_CEILING
17TSCEFunction_CHAR
20TSCEFunction_CHIDIST
19TSCEFunction_CHIINV
20TSCEFunction_CHITEST
19TSCEFunction_CHOOSE
18TSCEFunction_CLEAN
17TSCEFunction_CODE
19TSCEFunction_COLUMN
20TSCEFunction_COLUMNS
19TSCEFunction_COMBIN
24TSCEFunction_CONCATENATE
23TSCEFunction_CONFIDENCE
25TSCEFunction_CONFIDENCE_T
20TSCEFunction_CONVERT
19TSCEFunction_CORREL
16TSCEFunction_COS
17TSCEFunction_COSH
18TSCEFunction_COUNT
19TSCEFunction_COUNTA
23TSCEFunction_COUNTBLANK
20TSCEFunction_COUNTIF
21TSCEFunction_COUNTIFS
25TSCEFunction_COUNTMATCHES
22TSCEFunction_COUPDAYBS
21TSCEFunction_COUPDAYS
23TSCEFunction_COUPDAYSNC
20TSCEFunction_COUPNUM
18TSCEFunction_COVAR
25TSCEFunction_COVARIANCE_S
22TSCEFunction_CRITBINOM
20TSCEFunction_CUMIPMT
21TSCEFunction_CUMPRINC
17TSCEFunction_DATE
20TSCEFunction_DATEDIF
22TSCEFunction_DATEVALUE
16TSCEFunction_DAY
20TSCEFunction_DAYNAME
20TSCEFunction_DAYS360
15TSCEFunction_DB
16TSCEFunction_DDB
20TSCEFunction_DEC2BIN
20TSCEFunction_DEC2HEX
20TSCEFunction_DEC2OCT
20TSCEFunction_DEGREES
18TSCEFunction_DELTA
18TSCEFunction_DEVSQ
17TSCEFunction_DISC
19TSCEFunction_DOLLAR
21TSCEFunction_DUR2DAYS
22TSCEFunction_DUR2HOURS
29TSCEFunction_DUR2MILLISECONDS
24TSCEFunction_DUR2MINUTES
24TSCEFunction_DUR2SECONDS
22TSCEFunction_DUR2WEEKS
21TSCEFunction_DURATION
18TSCEFunction_EDATE
19TSCEFunction_EFFECT
20TSCEFunction_EOMONTH
16TSCEFunction_ERF
17TSCEFunction_ERFC
17TSCEFunction_EVEN
18TSCEFunction_EXACT
16TSCEFunction_EXP
22TSCEFunction_EXPONDIST
17TSCEFunction_FACT
23TSCEFunction_FACTDOUBLE
18TSCEFunction_FALSE
18TSCEFunction_FDIST
17TSCEFunction_FIND
33TSCEFunction_FIND_CASEINSENSITIVE
17TSCEFunction_FINV
18TSCEFunction_FIXED
18TSCEFunction_FLOOR
21TSCEFunction_FORECAST
19TSCELineFitFunction
24TSCEFunction_FORMULATEXT
22TSCEFunction_FREQUENCY
15TSCEFunction_FV
21TSCEFunction_CURRENCY
25TSCEFunction_CURRENCYCODE
28TSCEFunction_CURRENCYCONVERT
22TSCEFunction_CURRENCYH
22TSCEFunction_GAMMADIST
21TSCEFunction_GAMMAINV
20TSCEFunction_GAMMALN
16TSCEFunction_GCD
20TSCEFunction_GEOMEAN
19TSCEFunction_GESTEP
25TSCEFunction_GETPIVOTDATA
20TSCEFunction_HARMEAN
20TSCEFunction_HEX2BIN
20TSCEFunction_HEX2DEC
20TSCEFunction_HEX2OCT
20TSCEFunction_HLOOKUP
17TSCEFunction_HOUR
22TSCEFunction_HYPERLINK
15TSCEFunction_IF
20TSCEFunction_IFERROR
16TSCEFunction_IFS
18TSCEFunction_INDEX
21TSCEFunction_INDIRECT
16TSCEFunction_INT
22TSCEFunction_INTERCEPT
29TSCEFunction_INTERSECT_RANGES
20TSCEFunction_INTRATE
17TSCEFunction_IPMT
16TSCEFunction_IRR
20TSCEFunction_ISBLANK
19TSCEFunction_ISDATE
20TSCEFunction_ISERROR
19TSCEFunction_ISEVEN
21TSCEFunction_ISNUMBER
18TSCEFunction_ISODD
18TSCEFunction_ISPMT
19TSCEFunction_ISTEXT
18TSCEFunction_LARGE
16TSCEFunction_LCM
17TSCEFunction_LEFT
16TSCEFunction_LEN
19TSCEFunction_LINEST
15TSCEFunction_LN
16TSCEFunction_LOG
18TSCEFunction_LOG10
19TSCEFunction_LOGINV
24TSCEFunction_LOGNORMDIST
19TSCEFunction_LOOKUP
18TSCEFunction_LOWER
18TSCEFunction_MATCH
16TSCEFunction_MAX
17TSCEFunction_MAXA
19TSCEFunction_MAXIFS
16TSCEFunction_MID
16TSCEFunction_MIN
17TSCEFunction_MINA
19TSCEFunction_MINIFS
19TSCEFunction_MINUTE
17TSCEFunction_MIRR
16TSCEFunction_MOD
22TSCEFunction_MODE_MULT
18TSCEFunction_MONTH
22TSCEFunction_MONTHNAME
19TSCEFunction_MROUND
24TSCEFunction_MULTINOMIAL
25TSCEFunction_NEGBINOMDIST
24TSCEFunction_NETWORKDAYS
20TSCEFunction_NOMINAL
21TSCEFunction_NORMDIST
20TSCEFunction_NORMINV
22TSCEFunction_NORMSDIST
21TSCEFunction_NORMSINV
16TSCEFunction_NOT
16TSCEFunction_NOW
17TSCEFunction_NPER
16TSCEFunction_NPV
22TSCEFunction_NUMTOBASE
20TSCEFunction_OCT2BIN
20TSCEFunction_OCT2DEC
20TSCEFunction_OCT2HEX
16TSCEFunction_ODD
19TSCEFunction_OFFSET
15TSCEFunction_OR
23TSCEFunction_PERCENTILE
27TSCEFunction_PERCENTILE_EXC
24TSCEFunction_PERCENTRANK
28TSCEFunction_PERCENTRANK_EXC
19TSCEFunction_PERMUT
15TSCEFunction_PI
22TSCEFunction_PLAINTEXT
16TSCEFunction_PMT
20TSCEFunction_POISSON
23TSCEFunction_POLYNOMIAL
18TSCEFunction_POWER
17TSCEFunction_PPMT
18TSCEFunction_PRICE
22TSCEFunction_PRICEDISC
21TSCEFunction_PRICEMAT
17TSCEFunction_PROB
20TSCEFunction_PRODUCT
19TSCEFunction_PROPER
15TSCEFunction_PV
21TSCEFunction_QUARTILE
25TSCEFunction_QUARTILE_EXC
21TSCEFunction_QUOTIENT
20TSCEFunction_RADIANS
17TSCEFunction_RAND
24TSCEFunction_RANDBETWEEN
17TSCEFunction_RANK
21TSCEFunction_RANK_AVG
17TSCEFunction_RATE
21TSCEFunction_RECEIVED
27TSCEFunction_REFERENCE_NAME
18TSCEFunction_REGEX
26TSCEFunction_REGEX_EXTRACT
20TSCEFunction_REPLACE
17TSCEFunction_REPT
18TSCEFunction_RIGHT
18TSCEFunction_ROMAN
18TSCEFunction_ROUND
22TSCEFunction_ROUNDDOWN
20TSCEFunction_ROUNDUP
16TSCEFunction_ROW
17TSCEFunction_ROWS
19TSCEFunction_SEARCH
19TSCEFunction_SECOND
22TSCEFunction_SERIESSUM
17TSCEFunction_SIGN
16TSCEFunction_SIN
17TSCEFunction_SINH
16TSCEFunction_SLN
18TSCEFunction_SLOPE
18TSCEFunction_SMALL
17TSCEFunction_SQRT
19TSCEFunction_SQRTPI
24TSCEFunction_STANDARDIZE
18TSCEFunction_STDEV
19TSCEFunction_STDEVA
19TSCEFunction_STDEVP
20TSCEFunction_STDEVPA
18TSCEFunction_STOCK
19TSCEFunction_STOCKH
26TSCEFunction_STRIPDURATION
23TSCEFunction_SUBSTITUTE
21TSCEFunction_SUBTOTAL
16TSCEFunction_SUM
18TSCEFunction_SUMIF
19TSCEFunction_SUMIFS
23TSCEFunction_SUMPRODUCT
18TSCEFunction_SUMSQ
21TSCEFunction_SUMX2MY2
21TSCEFunction_SUMX2PY2
20TSCEFunction_SUMXMY2
16TSCEFunction_SYD
14TSCEFunction_T
16TSCEFunction_TAN
17TSCEFunction_TANH
18TSCEFunction_TDIST
22TSCEFunction_TEXTAFTER
23TSCEFunction_TEXTBEFORE
24TSCEFunction_TEXTBETWEEN
17TSCEFunction_TIME
22TSCEFunction_TIMEVALUE
17TSCEFunction_TINV
18TSCEFunction_TODAY
22TSCEFunction_TRANSPOSE
17TSCEFunction_TRIM
17TSCEFunction_TRUE
18TSCEFunction_TRUNC
18TSCEFunction_TTEST
25TSCEFunction_UNION_RANGES
18TSCEFunction_UPPER
18TSCEFunction_VALUE
16TSCEFunction_VAR
17TSCEFunction_VARA
17TSCEFunction_VARP
18TSCEFunction_VARPA
16TSCEFunction_VDB
20TSCEFunction_VLOOKUP
20TSCEFunction_WEEKDAY
20TSCEFunction_WEEKNUM
20TSCEFunction_WEIBULL
20TSCEFunction_WORKDAY
17TSCEFunction_XIRR
20TSCEFunction_XLOOKUP
19TSCEFunction_XMATCH
17TSCEFunction_XNPV
17TSCEFunction_YEAR
21TSCEFunction_YEARFRAC
18TSCEFunction_YIELD
22TSCEFunction_YIELDDISC
21TSCEFunction_YIELDMAT
18TSCEFunction_ZTEST
20TSCEFunction___CHART
28TSCEFunction___CELLVALUETYPE
30TSCEFunction___INTERACTIONTYPE
TSTArchives.proto
TSPMessages.proto
TSDArchives.proto
TSKArchives.proto
TSSArchives.proto
TSCEArchives.proto
TSWPArchives.proto
TSTStylePropertyArchiving.proto"Q
CellID
packedData
expanded_coord
.TSCE.CellCoordinateArchive"
CellUIDLookupListArchive
column_uids
.TSCE.UidLookupListArchive
row_uids
.TSCE.UidLookupListArchive
column_indexes
row_indexes
CellUIDListArchive
row_uids
.TSP.UUID
column_uids
.TSP.UUID
compressed_row_indexes
compressed_column_indexes
uncompressed_lookup_list
.TST.CellUIDLookupListArchive"F
TableSize
packedData
num_columns
num_rows
ExpandedTableSize
num_columns
num_rows
CellRange
origin
.TST.CellID
size
.TST.TableSize"f
ExpandedCellRange
origin
.TSCE.CellCoordinateArchive
size
.TST.ExpandedTableSize"
TableSelection
cellRange
.TST.CellRange
extendedCellRange
.TST.CellRange
extendedCellRangeValid
selection_type
.TST.SelectionTypeArchive"
TileRowInfo
tile_row_index
cell_count
cell_storage_buffer_pre_bnc
cell_offsets_pre_bnc
storage_version
cell_storage_buffer
cell_offsets
has_wide_offsets
Tile
maxColumn
maxRow
numCells
numrows
rowInfos
.TST.TileRowInfo
storage_version
last_saved_in_BNC
should_use_wide_rows
TileStorage
tiles
.TST.TileStorage.Tile
tile_size
should_use_wide_rows
Tile
tileid
tile
.TSP.Reference"
PopUpMenuModel
item
.TST.PopUpMenuModel.CellValueB
tsce_item
.TSCE.CellValueArchive
CellValue
cell_value_type
2!.TST.PopUpMenuModel.CellValueType
boolean_value
.TSCE.BooleanCellValueArchive
date_value
.TSCE.DateCellValueArchive
number_value
.TSCE.NumberCellValueArchive
string_value
.TSCE.StringCellValueArchive"`
CellValueType
NIL_TYPE
BOOLEAN_TYPE
DATE_TYPE
NUMBER_TYPE
STRING_TYPE
ImportWarningSetArchive
formula_import_warning
21.TST.ImportWarningSetArchive.FormulaImportWarning
cond_format_above_avg_equal_avg
false
cond_format_above_avg_std_dev
false
cond_format_complex_formula
false
cond_format_contains_errors
false
cond_format_expr
false
cond_format_not_contains_errors
false
(cond_format_parameters_not_all_same_type
false
cond_format_stop_if_true
false
 cond_format_unsupported_operator
false
cond_format_unsupported_styling
false
#cond_format_unsupported_time_period
false
error_cell_with_no_formula
false
unsupported_cond_format
false
original_data_format
2formula_warning_filtered_column_formula_not_copied
false
duration_format_range_changed
false
FormulaImportWarning
formula_warning_type
2/.TST.ImportWarningSetArchive.FormulaWarningType
original_formula
supplementary_text
formula_warning_type_int
FormulaWarningType
THREE_D_REFERENCE
ARRAYED_FORMULA
DIFFERENT_BEHAVIOR_FOR_FUNCTION
ERROR_TOKEN
EXTERNAL_REFERENCE
NATURAL_LANGUAGE_FORMULA
REFERENCE_OUT_OF_BOUNDS
SHARED_FORMULA_BASE_NOT_FOUND
UNKNOWN_NAME
UNSUPPORTED_FORMULA
UNSUPPORTED_FUNCTION
UNSUPPORTED_NAME
TRANSPOSED_NO_ISSUES
TRANSPOSED_WITH_ISSUES
 TRANSPOSED_WITH_ISSUES_UNCHANGED
"CellRefImportWarningSetPairArchive
cell_ref
.TSCE.CellReferenceArchive
warning_set
.TST.ImportWarningSetArchive"m
 ImportWarningSetByCellRefArchive
cellref_warning_set_pair
2'.TST.CellRefImportWarningSetPairArchive"
TableDataList
listType
.TST.TableDataList.ListType
nextListID
entries
.TST.TableDataList.ListEntry
segments
.TSP.Reference
ListEntry
refcount
string
reference
.TSP.Reference
formula
.TSCE.FormulaArchive
format
.TSK.FormatStructArchive
custom_format
.TSK.CustomFormatArchive
rich_text_payload
.TSP.Reference
comment_storage
.TSP.Reference
import_warning_set
.TST.ImportWarningSetArchive
cell_spec
.TST.CellSpecArchive"
ListType
STRING
FORMAT
FORMULA
STYLE
FORMULA_ERROR
CUSTOM_FORMAT
MULTIPLE_CHOICE_LIST_FORMAT
RICH_TEXT_PAYLOAD
CONDITIONAL_STYLE
COMMENT_STORAGE
IMPORT_WARNING
CONTROL_CELL_SPEC
TableDataListSegment
list_type
.TST.TableDataList.ListType
key_range
.TSP.Range
entries
.TST.TableDataList.ListEntry"W
TableRBTree
nodes
.TST.TableRBTree.Node
Node
value
HeaderStorageBucket
bucketHashFunction
headers
.TST.HeaderStorageBucket.Header
Header
index
size
hidingState
numberOfCells
cell_style
.TSP.Reference
text_style
.TSP.Reference"L
HeaderStorage
bucketHashFunction
buckets
.TSP.Reference"
DataStore
rowHeaders
.TST.HeaderStorage
columnHeaders
.TSP.Reference
tiles
.TST.TileStorage
stringTable
.TSP.Reference
styleTable
.TSP.Reference
formula_table
.TSP.Reference
formulaErrorTable
.TSP.Reference
format_table_pre_bnc
.TSP.Reference
multipleChoiceListFormatTable
.TSP.Reference
merge_region_map
.TSP.Reference
deprecated_custom_format_table
.TSP.Reference
nextRowStripID
nextColumnStripID
rowTileTree
.TST.TableRBTree
columnTileTree
.TST.TableRBTree
storage_version_pre_bnc
rich_text_table
.TSP.Reference
conditionalstyletable
.TSP.Reference
commentStorageTable
.TSP.Reference
importWarningSetTable
.TSP.Reference
control_cell_spec_table
.TSP.Reference
format_table
.TSP.Reference"
TableInfoArchive
super
.TSD.DrawableArchive
tableModel
.TSP.Reference
editing_state
.TSP.ReferenceB
summary_model
.TSP.Reference
category_order
.TSP.Reference
view_column_row_uids
.TSP.Reference
group_by_uuid
.TSP.UUID
hidden_states_uuid
.TSP.UUID
formula_coord_space_in_pre40
formula_coord_space
pasteboard_coord_mapper
.TSCE.CoordMapperArchive
layout_engine
.TST.LayoutEngineArchive
pivot_data_model
.TSP.Reference
is_a_pivot_table
pivot_order
.TSP.Reference"^
CategoryInfoArchive
super
.TSD.DrawableArchive
tableModel
.TSP.Reference"[
WPTableInfoArchive
super
.TST.TableInfoArchive
storage
.TSP.Reference"
TableStyleNetworkArchive
body_text_style
.TSP.Reference
header_row_text_style
.TSP.Reference
header_column_text_style
.TSP.Reference
footer_row_text_style
.TSP.Reference
body_cell_style
.TSP.Reference
header_row_style
.TSP.Reference
header_column_style
.TSP.Reference
footer_row_style
.TSP.Reference
table_style
.TSP.Reference
table_name_style
.TSP.Reference
table_name_shape_style
.TSP.Reference
preset_id
category_level_1_text_style
.TSP.Reference
category_level_2_text_style
.TSP.Reference
category_level_3_text_style
.TSP.Reference
category_level_4_text_style
.TSP.Reference
category_level_5_text_style
.TSP.Reference
category_level_1_style
.TSP.Reference
category_level_2_style
.TSP.Reference
category_level_3_style
.TSP.Reference
category_level_4_style
.TSP.Reference
category_level_5_style
.TSP.Reference
label_level_1_text_style
.TSP.Reference
label_level_2_text_style
.TSP.Reference
label_level_3_text_style
.TSP.Reference
label_level_4_text_style
.TSP.Reference
label_level_5_text_style
.TSP.Reference
label_level_1_style
.TSP.Reference
label_level_2_style
.TSP.Reference
label_level_3_style
.TSP.Reference
label_level_4_style
.TSP.Reference
label_level_5_style
.TSP.Reference
pivot_body_summary_row_style
.TSP.Reference
pivot_body_summary_column_style
.TSP.Reference
!pivot_header_column_summary_style
.TSP.Reference"
TableGroupSortOrderUIDArchive
group_sort_rules
2:.TST.TableGroupSortOrderUIDArchive.GroupSortRuleUIDArchive
GroupSortRuleUIDArchive
grouping_column_uid
.TSP.UUID
column_uid
.TSP.UUID
direction
2D.TST.TableGroupSortOrderUIDArchive.GroupSortRuleUIDArchive.Direction"*
Direction
ascending
descending
TableSortOrderArchive
type
2#.TST.TableSortOrderArchive.SortType
rules
2*.TST.TableSortOrderArchive.SortRuleArchive
SortRuleArchive
index
direction
24.TST.TableSortOrderArchive.SortRuleArchive.Direction"*
Direction
ascending
descending
SortType
entire_table
row_range
TableSortOrderUIDArchive
type
2&.TST.TableSortOrderUIDArchive.SortType
rules
2-.TST.TableSortOrderUIDArchive.SortRuleArchive
SortRuleArchive
column_uid
.TSP.UUID
direction
27.TST.TableSortOrderUIDArchive.SortRuleArchive.Direction"*
Direction
ascending
descending
SortType
entire_table
row_range
SortRuleReferenceTrackerArchive
reference_tracker
.TSP.Reference"1
CellRegion
cell_ranges
.TST.CellRange"E
CellUIDRegionArchive
cell_uid_ranges
.TSP.UUIDRectArchive"
StructuredTextImportRecord
import_settings
2!.TSK.StructuredTextImportSettings
import_source
import_date
source_data
source_encoding
confidence
imported_region
.TST.CellRegion
source_row_count
source_column_count
TableModelArchive
table_id
from_table_id
was_cut
table_style
.TSP.Reference
body_text_style
.TSP.Reference
header_row_text_style
.TSP.Reference
header_column_text_style
.TSP.Reference
footer_row_text_style
.TSP.Reference
body_cell_style
.TSP.Reference
header_row_style
.TSP.Reference
header_column_style
.TSP.Reference
footer_row_style
.TSP.Reference
table_name_style
.TSP.Reference
table_name_shape_style
.TSP.Reference
table_style_preset
.TSP.Reference
preset_index
base_data_store
.TST.DataStore
provider
.TSP.Reference
number_of_rows
number_of_columns
table_name
table_name_enabled
table_name_height
table_name_border_enabled
number_of_header_rows
number_of_header_columns
number_of_footer_rows
header_rows_frozen
header_columns_frozen
number_of_hidden_rows
number_of_hidden_columns
number_of_user_hidden_rows
number_of_user_hidden_columns
number_of_filtered_rows
default_row_height
default_column_width
origin_offset
.TST.CellIDB
repeating_header_rows_enabled
style_apply_clears_all
 repeating_header_columns_enabled
&hidden_state_formula_owner_for_columns
.TSP.Reference
#hidden_state_formula_owner_for_rows
.TSP.Reference
row_filter_set_pre_pivot
.TSP.Reference
"conditional_style_formula_owner_id
.TSP.CFUUIDArchive
sort_order
.TST.TableSortOrderArchive
sort_rule_reference_tracker
2$.TST.SortRuleReferenceTrackerArchive
base_column_row_uids
.TSP.Reference
merge_owner
.TST.MergeOwnerArchive
stroke_sidecar
.TSP.Reference
preset_needs_strong_ownership
text_import_record
.TST.StructuredTextImportRecord
category_level_1_style
.TSP.Reference
category_level_2_style
.TSP.Reference
category_level_3_style
.TSP.Reference
category_level_4_style
.TSP.Reference
category_level_5_style
.TSP.Reference
category_level_1_text_style
.TSP.Reference
category_level_2_text_style
.TSP.Reference
category_level_3_text_style
.TSP.Reference
category_level_4_text_style
.TSP.Reference
category_level_5_text_style
.TSP.Reference
hidden_states_owner
.TST.HiddenStatesOwnerArchive
label_level_1_style
.TSP.Reference
label_level_2_style
.TSP.Reference
label_level_3_style
.TSP.Reference
label_level_4_style
.TSP.Reference
label_level_5_style
.TSP.Reference
label_level_1_text_style
.TSP.Reference
label_level_2_text_style
.TSP.Reference
label_level_3_text_style
.TSP.Reference
label_level_4_text_style
.TSP.Reference
label_level_5_text_style
.TSP.Reference
category_owner_deprecated
.TST.CategoryOwnerArchive
pencil_annotation_owner
2!.TST.PencilAnnotationOwnerArchive
from_group_by_uid
haunted_owner
.TSCE.HauntedOwnerArchive
pivot_owner
.TSP.Reference
category_owner
.TSP.Reference
pivot_body_summary_row_style
.TSP.Reference
pivot_body_summary_column_style
.TSP.Reference
!pivot_header_column_summary_style
.TSP.Reference
pivot_value_types_by_col
pivot_date_grouping_columns
pivot_date_grouping_types
SummaryModelArchive
table_info
.TSP.Reference
data_store
.TST.DataStore
column_row_uids
.TSP.Reference
aggregate_formula_owner_uuid
.TSP.UUID
summary_cell_vendor
.TSP.Reference
category_column_width
summary_row_level_1_height
summary_row_level_2_height
summary_row_level_3_height
summary_row_level_4_height
summary_row_level_5_height
 summary_label_row_level_1_height
 summary_label_row_level_2_height
 summary_label_row_level_3_height
 summary_label_row_level_4_height
 summary_label_row_level_5_height
label_row_visibility_1
label_row_visibility_2
label_row_visibility_3
label_row_visibility_4
label_row_visibility_5
summary_row_height_list
label_row_height_list
label_row_visibility_list
group_sort_order
2".TST.TableGroupSortOrderUIDArchive"
%SummaryModelGroupByChangeStateArchive
cell_map
.TSP.Reference
summary_row_height_list
label_row_height_list
label_row_visibility_list
ColumnRowUIDMapArchive
sorted_column_uids
.TSP.UUID
column_index_for_uid
column_uid_for_index
sorted_row_uids
.TSP.UUID
row_index_for_uid
row_uid_for_index
StrokeLayerArchive
row_column_index
stroke_runs
2(.TST.StrokeLayerArchive.StrokeRunArchive
StrokeRunArchive
origin
length
stroke
.TSD.StrokeArchive
order
StrokeSidecarArchive
max_order
column_count
row_count
left_column_stroke_layers
.TSP.Reference
right_column_stroke_layers
.TSP.Reference
top_row_stroke_layers
.TSP.Reference
bottom_row_stroke_layers
.TSP.Reference"
DurationWrapperArchive"
Cell
valueType
.TST.CellValueType
cell_style
.TSP.Reference
text_style
.TSP.Reference
numberValue
stringValue
boolValue
current_format
.TSK.FormatStructArchive
formulaError
.TSP.Reference
number_format
.TSK.FormatStructArchive
currency_format
.TSK.FormatStructArchive
duration_format
.TSK.FormatStructArchive
date_format
.TSK.FormatStructArchive
custom_format
.TSK.FormatStructArchive
base_format
.TSK.FormatStructArchive
explicit_format_flags
richText
.TSP.Reference
conditional_style
.TSP.Reference
comment_storage
.TSP.Reference
conditional_style_applied_rule
import_warning_set
.TST.ImportWarningSetArchive
custom_format_object
.TSK.CustomFormatArchive
cell_border
.TST.CellBorderArchive
cell_spec
.TST.CellSpecArchive
cell_format_kind
text_format
.TSK.FormatStructArchive
boolean_format
.TSK.FormatStructArchive
decimal_value_low
decimal_value_high
MergeRegionMapArchive
cell_range
.TST.CellRange"
CellMapArchive
cell_tiles
.TSP.Reference
uid_based
expanded_cell_ids
.TSCE.CellCoordinateArchive
cell_uid_list
.TST.CellUIDListArchive
merge_uid_ranges
.TSP.UUIDRectArchive
unmerge_uid_ranges
.TSP.UUIDRectArchive
merge_actions
.TST.MergeOperationArchive
may_modify_formulas_in_cells
true
(may_modify_values_referenced_by_formulas
true"
CellListArchive
cells
2!.TST.CellListArchive.OptionalCell
trailing_empty_cell_count
OptionalCell
cell
.TST.Cell"
ConcurrentCellMapArchive
cell_lists
.TSP.Reference
uid_based
merge_actions
.TST.MergeOperationArchive
may_modify_formulas_in_cells
true
(may_modify_values_referenced_by_formulas
true
affects_cell_borders
true"
ConcurrentCellListArchive
cells
2+.TST.ConcurrentCellListArchive.OptionalCell
cell_uid_range
.TSP.UUIDRectArchive
cell_range
.TST.CellRange
OptionalCell
cell
.TST.Cell"
CellFormatAndValueArchive
valueType
.TST.CellValueType
numberValue
stringValue
boolValue
richTextStorage
.TSP.Reference
use_all_spare_formats
explicit_flags
cell_format_kind
number_format
.TSK.FormatStructArchive
currency_format
.TSK.FormatStructArchive
date_format
.TSK.FormatStructArchive
duration_format
.TSK.FormatStructArchive
text_format
.TSK.FormatStructArchive
boolean_format
.TSK.FormatStructArchive
formatted_value
formatted_rich_text_value
.TSP.Reference
apply_spare_format_only
spare_format_type
decimal_low
decimal_high
suppress_apply_value
CellSpecArchive
interaction_type
formula
.TSCE.FormulaArchive
range_control_min
range_control_max
range_control_inc
chooser_control_popup_model
.TSP.Reference
chooser_control_start_w_first
%category_summary_should_display_label
CommentStorageWrapperArchive
comment_storage
.TSP.Reference"
CellDiffArchive
property_map_to_set
.TSS.CommandPropertyMapArchive
property_map_to_reset
.TSS.CommandPropertyMapArchive"5
CellDiffArray
large_array
.TSP.LargeArray"s
CellDiffArraySegment
large_array_segment
.TSP.LargeArraySegment
elements
.TST.CellDiffArchive"
CellDiffMapArchive
uid_based
expanded_cell_ids
.TSCE.CellCoordinateArchive
cell_uids
.TST.CellUIDListArchive
cell_diff_array
.TSP.Reference"
HierarchicalCellDiffMapArchive
num_row_rules
num_column_rules
row_header_uids
.TSP.UUID
column_header_uids
.TSP.UUID
aggregate_rule_uids
.TSP.UUID
active_flattening_dimension
.TST.TableDimensionArchive
row_value_uids
.TSP.UUID
row_level_preorder
column_value_uids
.TSP.UUID
column_level_preorder
cell_diff_storage
2,.TST.HierarchicalCellDiffMapArchive.BoxedRow
row_sizes
column_sizes
BoxedRow
column_index_set
.TSP.IndexSet
cell_diff_list
.TST.CellDiffArchive"
DoubleStyleMapArchive
capacity
count
cell_map_entry
25.TST.DoubleStyleMapArchive.DoubleStyleMapEntryArchive
DoubleStyleMapEntryArchive
cell_id
.TST.CellID
old_style
.TSP.Reference
new_style
.TSP.Reference"
StyleTableMapArchive
capacity
count
map_entry
23.TST.StyleTableMapArchive.StyleTableMapEntryArchive
StyleTableMapEntryArchive
old_style
.TSP.Reference
new_style
.TSP.Reference"
SelectionArchive
tableModel
.TSP.ReferenceB
selection_type
.TST.SelectionTypeArchive
anchor_cell
.TST.CellID
cell_ranges
.TST.CellRange
base_ranges
.TST.CellRange
cursor_cell
.TST.CellID
table_info
.TSP.Reference
cell_uid_region
.TST.CellUIDRegionArchive
base_uid_region
.TST.CellUIDRegionArchive
anchor_cell_uid
.TSP.UUIDCoordArchive
cursor_cell_uid
.TSP.UUIDCoordArchive"
)DeathhawkRdar39989167CellSelectionArchive
table_info
.TSP.Reference
selection_type
.TST.SelectionTypeArchive
cell_uid_region
.TST.CellUIDRegionArchive
base_uid_region
.TST.CellUIDRegionArchive
anchor_cell_uid
.TSP.UUIDCoordArchive
cursor_cell_uid
.TSP.UUIDCoordArchive"&
StrokeSelectionArchive
mask
ControlCellSelectionArchive"
StockCellSelectionArchive"
TableNameSelectionArchive"p
AutofillSelectionArchive
source_cell_range
.TST.CellRange
target_cell_range
.TST.CellRange"f
FilterRulePrePivotArchive
predicate
2$.TST.FormulaPredicatePrePivotArchive
disabled
FilterRuleArchive
predicate
.TST.FormulaPredicateArchive"
TableStyleArchive
super
.TSS.StyleArchive
override_count
table_properties
2 .TST.TableStylePropertiesArchive"
CellStyleArchive
super
.TSS.StyleArchive
override_count
cell_properties
.TST.CellStylePropertiesArchive"
FormulaPredArgDataArchive
double_value
decimal_low
decimal_high
string_value
date_value
duration_timeinterval
duration_units
boolean_value
FormulaPredArgArchive
arg_type
arg_value
.TST.FormulaPredArgDataArchive
base_cell_ref
.TSCE.CellReferenceArchive
relative_cell_ref
.TSCE.RelativeCellRefArchive
category_ref
.TSCE.CategoryReferenceArchive
uid_tract_list
2).TSCE.ASTNodeArrayArchive.ASTUidTractList
host_cell_coord
.TSCE.CellCoordinateArchive
preserve_row
preserve_column
list_entries
.TST.FormulaPredArgDataArchive
view_tract_ref
.TSCE.ViewTractRefArchive"
FormulaPredicatePrePivotArchive
formula
.TSCE.FormulaArchive
predicate_type
qualifier1
qualifier2
param_index1
param_index2
param_index0
FormulaPredicateArchive
predicate_type
qualifier1
qualifier2
param_value0
.TST.FormulaPredArgArchive
param_value1
.TST.FormulaPredArgArchive
param_value2
.TST.FormulaPredArgArchive
formula
.TSCE.FormulaArchive
for_conditional_style
host_table_uid
.TSP.UUID
host_column_uid
.TSP.UUID
host_row_uid
.TSP.UUID"
ConditionalStyleSetArchive
ruleCount
rules_prepivot
2<.TST.ConditionalStyleSetArchive.ConditionalStyleRulePrePivot
rules
25.TST.ConditionalStyleSetArchive.ConditionalStyleRules
ConditionalStyleRulePrePivot
predicate
2$.TST.FormulaPredicatePrePivotArchive
cell_style
.TSP.Reference
text_style
.TSP.Reference
ConditionalStyleRule
predicate
.TST.FormulaPredicateArchive
cell_style
.TSP.Reference
text_style
.TSP.Reference
ConditionalStyleRules
rule
24.TST.ConditionalStyleSetArchive.ConditionalStyleRule"
FilterSetArchive
type
2#.TST.FilterSetArchive.FilterSetType:
FilterSetArchiveTypeAll
is_enabled
true
filter_rules_prepivot
.TST.FilterRulePrePivotArchive
 needs_formula_rewrite_for_import
false
filter_offsets
filter_enabled
filter_rules
.TST.FilterRuleArchive"I
FilterSetType
FilterSetArchiveTypeAll
FilterSetArchiveTypeAny
UniqueIndexArchive
column_uid
.TSP.UUID
unique_entries
2/.TST.UniqueIndexArchive.UniqueIndexEntryArchive
UniqueIndexEntryArchive
string_value
row_uids
.TSP.UUID"
HiddenStateExtentArchive
hidden_state_extent_uid
.TSP.UUID
base_hidden_states
2..TST.HiddenStateExtentArchive.RowOrColumnState
row_or_column_direction
22.TST.HiddenStateExtentArchive.RowOrColumnDirection
threshold_value
.TSCE.CellValueArchive
%needs_to_update_filter_set_for_import
false
collapsed_group_uids
.TSP.UUID
filter_set
.TSP.Reference
summary_pivot_hidden_indexes
.TSCE.IndexSetArchive
summary_filtered_indexes
.TSCE.IndexSetArchive
unique_indexes
.TST.UniqueIndexArchive
summary_hidden_states
2..TST.HiddenStateExtentArchive.RowOrColumnState
RowOrColumnState
row_or_column_uid
.TSP.UUID
user_hidden
filtered
pivot_hidden
RowOrColumnDirection
ColumnDirection
RowDirection
HiddenStatesArchive
hidden_states_uid
.TSP.UUID
column_hidden_state_extent
.TST.HiddenStateExtentArchive
row_hidden_state_extent
.TST.HiddenStateExtentArchive"i
HiddenStatesOwnerArchive
owner_uid
.TSP.UUID
hidden_states
.TST.HiddenStatesArchive"
ExpandCollapseStateArchive
uids_collapsed
.TSP.UUID
uids_expanded
.TSP.UUID
dimension
.TST.TableDimensionArchive"l
TokenAttachmentArchive
super
.TSWP.UIGraphicalAttachment
expressionNode
.TSP.Reference"8
FormulaArchive
expressionTree
.TSP.Reference"h
ExpressionNodeArchive
children
.TSP.Reference
first_index
last_index
BooleanNodeArchive
super
.TST.ExpressionNodeArchive
value
NumberNodeArchive
super
.TST.ExpressionNodeArchive
number
decimal_low
decimal_high
StringNodeArchive
super
.TST.ExpressionNodeArchive
value
IdentifierNodeArchive
super
.TST.ExpressionNodeArchive
identifier
symbol
ArrayNodeArchive
super
.TST.ExpressionNodeArchive
columns
rows
ListNodeArchive
super
.TST.ExpressionNodeArchive"V
OperatorNodeArchive
super
.TST.ExpressionNodeArchive
operatorChar
PostfixOperatorNodeArchive
super
.TST.OperatorNodeArchive"D
PrefixOperatorNodeArchive
super
.TST.OperatorNodeArchive"t
FunctionNodeArchive
super
.TST.ExpressionNodeArchive
functionIndex
invalidFunctionName
FunctionEndNodeArchive
super
.TST.ExpressionNodeArchive"[
DateNodeArchive
super
.TST.ExpressionNodeArchive
value
format
ReferenceNodeArchive
super
.TST.ExpressionNodeArchive
rangeReference
.TSCE.RangeReferenceArchive
preserve_flags
hostTableID
host_cell_ref
.TSCE.CellReferenceArchive
table_uid
.TSP.UUID
range_top_left
.TSP.UUIDCoordArchive
range_bottom_right
.TSP.UUIDCoordArchive
category_ref
.TSCE.CategoryReferenceArchive
uid_range_rect
.TSP.UUIDRectArchive"
DurationNodeArchive
super
.TST.ExpressionNodeArchive
timeinterval
smallest
largest
style
ArgumentPlaceholderNodeArchive
super
.TST.ExpressionNodeArchive
functionIndex
argumentIndex
mode
EmptyExpressionNodeArchive
super
.TST.ExpressionNodeArchive"
LetNodeArchive
super
.TST.ExpressionNodeArchive
whitespace_after_let
whitespace_after_identifier
whitespace_after_equals
whitespace_after_delimiter
InNodeArchive
super
.TST.ExpressionNodeArchive"d
VariableNodeArchive
super
.TST.ExpressionNodeArchive
identifier
symbol
LayoutHintArchive
isValid
cellRange
.TST.CellRange
hintID
.TST.CellID
maximumSize
.TSP.Size
partitionPosition
horizontal
effectiveSize
.TSP.Size
partitioningPass
 CompletionTokenAttachmentArchive
super
.TST.TokenAttachmentArchive
completionText
caretPosition
prefixStart
HiddenStateFormulaOwnerArchive
owner_id
.TSP.CFUUIDArchive
threshold_value
.TSCE.CellValueArchive
%needs_to_update_filter_set_for_import
false"
FormulaStoreArchive
next_formula_index
formulas
2).TST.FormulaStoreArchive.FormulaStorePair
FormulaStorePair
formula_index
formula
.TSCE.FormulaArchive"
MergeOperationArchive
merge_type
.TST.MergeActionArchive
merge_ranges
.TSP.UUIDRectArchive
merge_formulas
.TSCE.FormulaArchive
merge_formula_indexes
MergeOwnerArchive
owner_id
.TSP.CFUUIDArchive
formula_store
.TST.FormulaStoreArchive"p
PencilAnnotationArchive
table_info
.TSP.Reference
pencil_annotation_storage
.TSP.Reference"
PencilAnnotationOwnerArchive
owner_id
.TSP.CFUUIDArchive
formula_store
.TST.FormulaStoreArchive
annotations
.TSP.Reference"
AccumulatorArchive
bool_count
number_count
date_count
duration_count
string_count
min_value
.TSCE.CellValueArchive
max_value
.TSCE.CellValueArchive
number_total_value
.TSCE.CellValueArchive
first_date_seen
.TSCE.CellValueArchive
total_secs_since_ref_date
secs_to_add
bool_true_count
error_count
is_circular_ref
product_value
.TSCE.CellValueArchive
no_content_count
GroupColumnArchive
column_uid
.TSP.UUID
grouping_type
grouping_functor
.TSCE.FunctorArchive
grouping_column_uid
.TSP.UUID"G
GroupColumnListArchive
group_column
.TST.GroupColumnArchive"
ColumnAggregateArchive
column_uid
.TSP.UUID
level
agg_type
show_as_type
column_aggregate_uid
.TSP.UUID
running_total_group_column_uid
.TSP.UUID"M
ColumnAggregateListArchive
aggregates
.TST.ColumnAggregateArchive"
GroupByArchive
group_by_uid
.TSP.UUID
group_column
.TST.GroupColumnArchive
group_node_root
2$.TST.GroupByArchive.GroupNodeArchive
aggregator
2%.TST.GroupByArchive.AggregatorArchive
column_agg_type
.TST.ColumnAggregateArchive
is_enabled
 indirect_agg_type_change_formula
.TSCE.CellCoordinateArchive
grouping_columns_formula
.TSCE.CellCoordinateArchive
aggs_in_group_root_formula
.TSCE.CellCoordinateArchive
grouping_column_headers_formula
.TSCE.CellCoordinateArchive
column_order_changed_formula
.TSCE.CellCoordinateArchive
row_order_changed_formula
.TSCE.CellCoordinateArchive
)row_order_changed_ignoring_recalc_formula
.TSCE.CellCoordinateArchive
owner_index
row_uid_lookup
.TSCE.UidLookupListArchive
hidden_states_changed_formula
.TSCE.CellCoordinateArchive
aggregator_ref
.TSP.Reference
group_node_root_ref
.TSP.Reference
AggNodeArchive
formula_coord
.TSCE.CellCoordinateArchive
accum
.TST.AccumulatorArchive
child
2".TST.GroupByArchive.AggNodeArchive
AggregatorArchive
column_uid
.TSP.UUID
agg_node
2".TST.GroupByArchive.AggNodeArchive
GroupNodeArchive
group_uid
.TSP.UUID
child
2$.TST.GroupByArchive.GroupNodeArchive
row_uid
.TSP.UUID
agg_formula_coords
.TSCE.CellCoordinateArchive
format_manager
29.TST.GroupByArchive.GroupNodeArchive.FormatManagerArchive
group_cell_value
.TSCE.CellValueArchive
row_indexes
.TSCE.IndexSetArchive
row_lookup_uids
.TSCE.IndexSetArchive
child_ref
.TSP.Reference
FormatManagerArchive
cell_value
.TSCE.CellValueArchive
formats
.TSK.FormatStructArchive
row_sets
2G.TST.GroupByArchive.GroupNodeArchive.FormatManagerArchive.RowSetArchive
row_uid_lookup_sets
.TSCE.IndexSetArchive
RowSetArchive
row_uids
.TSP.UUID"[
CategoryOwnerArchive
owner_uid
.TSP.UUID
group_by
.TST.GroupByArchive";
CategoryOwnerRefArchive
group_by
.TSP.Reference"v
$PivotGroupingColumnOptionsMapArchive
uids
.TSP.UUID
flags
aggregate_rule_uids
.TSP.UUID"
PivotOwnerArchive
pivot_owner_uid
.TSP.UUID
grouping_columns_for_rows
.TST.GroupColumnListArchive
grouping_columns_for_columns
.TST.GroupColumnListArchive
aggregate_columns
.TST.ColumnAggregateListArchive
flattening_dimension
is_empty_pivot
source_table_uid
.TSP.UUID
refresh_timestamp
grpg_col_options_map
.TSP.Reference
hide_grand_total_rows
source_table_name
hide_grand_total_columns
formula_store
.TST.FormulaStoreArchive
refresh_uid
.TSP.UUID
row_column_rule_change_uid
.TSP.UUID
aggregate_rule_change_uid
.TSP.UUID"q
RichTextPayloadArchive
storage
.TSP.Reference
range
.TSP.Range
cellid
.TST.CellID"Q
#FormulaEqualsTokenAttachmentArchive
super
.TSWP.UIGraphicalAttachment"
CellFillStandIn
fill
.TSD.FillArchive
type_is_mixed
color_has_been_modified
color_is_mixed
first_color_has_been_modified
first_color_is_mixed
last_color_has_been_modified
last_color_is_mixed
gradient_type_has_been_modified
gradient_type_is_mixed
 gradient_angle_has_been_modified
gradient_angle_is_mixed
image_data_has_been_modified
image_data_is_mixed
tint_color_has_been_modified
tint_color_is_mixed
scale_has_been_modified
scale_is_mixed
technique_has_been_modified
technique_is_mixed
FormulaSelectionArchive
super
.TSWP.SelectionArchive
activeTokenCharIndex
CellBorderArchive
top_stroke
.TSD.StrokeArchive
top_stroke_order
right_stroke
.TSD.StrokeArchive
right_stroke_order
bottom_stroke
.TSD.StrokeArchive
bottom_stroke_order
left_stroke
.TSD.StrokeArchive
left_stroke_order
!DefaultCellStylesContainerArchive
table_style_network
.TSP.Reference
row_uids
.TSP.UUID
column_uids
.TSP.UUID
row_types
column_types
is_a_pivot_table
MultiTableRemapperArchive
mapping_purpose
2&.TST.MultiTableRemapperArchive.Purpose
should_steal_references
can_reuse_table_names
owner_uid_mapper
.TSCE.OwnerUIDMapperArchive
backing_tables_for_charts
.TSP.UUIDMapArchive
cross_document_paste
nested_inner_mapper
Purpose
DEFAULT
GROUPING
#PAGES_SECTION_DUPLICATION_NONCOLLAB
ChangePropagationMapWrapper
replacement_behavior
style_replace_prototypes
.TSP.Reference
style_replace_replacements
.TSP.Reference
style_modify_styles
.TSP.Reference
style_modify_old_prop_maps
.TSP.Reference
style_modify_new_prop_maps
.TSP.Reference
style_delete_prototypes
.TSP.Reference
style_delete_replacements
.TSP.Reference
table_preset_replace_prototype
.TSP.Reference
 table_preset_replace_replacement
.TSP.Reference
table_preset_delete_prototype
.TSP.Reference
table_preset_delete_replacement
.TSP.Reference"
SummaryCellVendorArchive
table_info
.TSP.Reference
entries
2..TST.SummaryCellVendorArchive.SummaryCellEntry
SummaryCellEntry
wildcardUID
.TSP.UUID
columnUID
.TSP.UUID
cell
.TST.Cell"[
CategoryOrderArchive
table_info
.TSP.Reference
uid_map
.TSP.Reference"4
PivotOrderArchive
uid_map
.TSP.Reference"
HeaderNameMgrTileArchive
first_fragment
last_fragment
name_frag_entries
21.TST.HeaderNameMgrTileArchive.NameFragmentArchive
NameFragmentArchive
name_fragment
name_precedent
.TSCE.CellCoordinateArchive
uses_of_name_fragment
.TSCE.UidCellRefSetArchive"
HeaderNameMgrArchive
owner_uid
.TSP.UUID
nrm_owner_uid
.TSP.UUID
per_tables
2).TST.HeaderNameMgrArchive.PerTableArchive
name_frag_tiles
.TSP.Reference
PerTableArchive
table_uid
.TSP.UUID
per_table_precedent
.TSCE.CellCoordinateArchive
is_deleted
header_row_uids
.TSP.UUID
header_column_uids
.TSP.UUID
update_header_row_uids
.TSP.UUID
update_header_column_uids
.TSP.UUID"K
WidthHeightCacheFittingEntry
fitting_index
fitting_size
WidthHeightCache
rows_fitting_entries
2!.TST.WidthHeightCacheFittingEntry
columns_count
LayoutEngineArchive
width_height_cache
.TST.WidthHeightCache*
CellType
genericCellType
spanCellType
numberCellType
textCellType
formulaCellType
dateCellType
boolCellType
durationCellType
formulaErrorCellType
automaticCellType
CellValueType
emptyCellValueType
numberCellValueType
stringCellValueType
providedCellValueType
dateCellValueType
boolCellValueType
durationCellValueType
errorCellValueType
richTextCellType
currencyCellValueType
TableDimensionArchive
dimensionNeither
dimensionRow
dimensionColumn
SelectionTypeArchive
deprecatedCellSelectionType
rowSelectionType
columnSelectionType
"deprecatedCellEditingSelectionType
 deprecatedTableNameSelectionType
deprecatedTableSelectionType
regionSelectionType
noSelectionType
FillDirectionArchive
kTSTFillDownArchive
kTSTFillUpArchive
kTSTFillRightArchive
kTSTFillLeftArchive
MergeActionArchive
mergeActionInsert
mergeActionRemove
mergeActionShrink
mergeActionGrow
HideShowActionArchive
hideShowActionHide
hideShowActionShow
import_warning_set
 .TSS.CommandPropertyEntryArchive
.TST.ImportWarningSetArchive:[
format_and_value
 .TSS.CommandPropertyEntryArchive
.TST.CellFormatAndValueArchive:N
cell_border
 .TSS.CommandPropertyEntryArchive
.TST.CellBorderArchive:]
comment_storage
 .TSS.CommandPropertyEntryArchive
2!.TST.CommentStorageWrapperArchive:J
cell_spec
 .TSS.CommandPropertyEntryArchive
.TST.CellSpecArchive
N3TST6CellIDE
N3TST24CellUIDLookupListArchiveE
N3TST18CellUIDListArchiveE
N3TST9TableSizeE
N3TST17ExpandedTableSizeE
N3TST9CellRangeE
N3TST17ExpandedCellRangeE
N3TST14TableSelectionE
N3TST11TileRowInfoE
N3TST4TileE
N3TST16TileStorage_TileE
N3TST11TileStorageE
N3TST24PopUpMenuModel_CellValueE
N3TST14PopUpMenuModelE
N3TST44ImportWarningSetArchive_FormulaImportWarningE
N3TST23ImportWarningSetArchiveE
N3TST34CellRefImportWarningSetPairArchiveE
N3TST32ImportWarningSetByCellRefArchiveE
N3TST23TableDataList_ListEntryE
N3TST13TableDataListE
N3TST20TableDataListSegmentE
N3TST16TableRBTree_NodeE
N3TST11TableRBTreeE
N3TST26HeaderStorageBucket_HeaderE
N3TST19HeaderStorageBucketE
N3TST13HeaderStorageE
N3TST9DataStoreE
N3TST16TableInfoArchiveE
N3TST19CategoryInfoArchiveE
N3TST18WPTableInfoArchiveE
N3TST24TableStyleNetworkArchiveE
N3TST53TableGroupSortOrderUIDArchive_GroupSortRuleUIDArchiveE
N3TST29TableGroupSortOrderUIDArchiveE
N3TST37TableSortOrderArchive_SortRuleArchiveE
N3TST21TableSortOrderArchiveE
N3TST40TableSortOrderUIDArchive_SortRuleArchiveE
N3TST24TableSortOrderUIDArchiveE
N3TST31SortRuleReferenceTrackerArchiveE
N3TST10CellRegionE
N3TST20CellUIDRegionArchiveE
N3TST26StructuredTextImportRecordE
N3TST17TableModelArchiveE
N3TST19SummaryModelArchiveE
N3TST37SummaryModelGroupByChangeStateArchiveE
N3TST22ColumnRowUIDMapArchiveE
N3TST35StrokeLayerArchive_StrokeRunArchiveE
N3TST18StrokeLayerArchiveE
N3TST20StrokeSidecarArchiveE
N3TST22DurationWrapperArchiveE
N3TST4CellE
N3TST21MergeRegionMapArchiveE
N3TST14CellMapArchiveE
N3TST28CellListArchive_OptionalCellE
N3TST15CellListArchiveE
N3TST24ConcurrentCellMapArchiveE
N3TST38ConcurrentCellListArchive_OptionalCellE
N3TST25ConcurrentCellListArchiveE
N3TST25CellFormatAndValueArchiveE
N3TST15CellSpecArchiveE
N3TST28CommentStorageWrapperArchiveE
N3TST15CellDiffArchiveE
N3TST13CellDiffArrayE
N3TST20CellDiffArraySegmentE
N3TST18CellDiffMapArchiveE
N3TST39HierarchicalCellDiffMapArchive_BoxedRowE
N3TST30HierarchicalCellDiffMapArchiveE
N3TST48DoubleStyleMapArchive_DoubleStyleMapEntryArchiveE
N3TST21DoubleStyleMapArchiveE
N3TST46StyleTableMapArchive_StyleTableMapEntryArchiveE
N3TST20StyleTableMapArchiveE
N3TST16SelectionArchiveE
N3TST41DeathhawkRdar39989167CellSelectionArchiveE
N3TST22StrokeSelectionArchiveE
N3TST27ControlCellSelectionArchiveE
N3TST25StockCellSelectionArchiveE
N3TST25TableNameSelectionArchiveE
N3TST24AutofillSelectionArchiveE
N3TST25FilterRulePrePivotArchiveE
N3TST17FilterRuleArchiveE
N3TST17TableStyleArchiveE
N3TST16CellStyleArchiveE
N3TST25FormulaPredArgDataArchiveE
N3TST21FormulaPredArgArchiveE
N3TST31FormulaPredicatePrePivotArchiveE
N3TST23FormulaPredicateArchiveE
N3TST55ConditionalStyleSetArchive_ConditionalStyleRulePrePivotE
N3TST47ConditionalStyleSetArchive_ConditionalStyleRuleE
N3TST48ConditionalStyleSetArchive_ConditionalStyleRulesE
N3TST26ConditionalStyleSetArchiveE
N3TST16FilterSetArchiveE
N3TST42UniqueIndexArchive_UniqueIndexEntryArchiveE
N3TST18UniqueIndexArchiveE
N3TST41HiddenStateExtentArchive_RowOrColumnStateE
N3TST24HiddenStateExtentArchiveE
N3TST19HiddenStatesArchiveE
N3TST24HiddenStatesOwnerArchiveE
N3TST26ExpandCollapseStateArchiveE
N3TST22TokenAttachmentArchiveE
N3TST14FormulaArchiveE
N3TST21ExpressionNodeArchiveE
N3TST18BooleanNodeArchiveE
N3TST17NumberNodeArchiveE
N3TST17StringNodeArchiveE
N3TST21IdentifierNodeArchiveE
N3TST16ArrayNodeArchiveE
N3TST15ListNodeArchiveE
N3TST19OperatorNodeArchiveE
N3TST26PostfixOperatorNodeArchiveE
N3TST25PrefixOperatorNodeArchiveE
N3TST19FunctionNodeArchiveE
N3TST22FunctionEndNodeArchiveE
N3TST15DateNodeArchiveE
N3TST20ReferenceNodeArchiveE
N3TST19DurationNodeArchiveE
N3TST30ArgumentPlaceholderNodeArchiveE
N3TST26EmptyExpressionNodeArchiveE
N3TST14LetNodeArchiveE
N3TST13InNodeArchiveE
N3TST19VariableNodeArchiveE
N3TST17LayoutHintArchiveE
N3TST32CompletionTokenAttachmentArchiveE
N3TST30HiddenStateFormulaOwnerArchiveE
N3TST36FormulaStoreArchive_FormulaStorePairE
N3TST19FormulaStoreArchiveE
N3TST21MergeOperationArchiveE
N3TST17MergeOwnerArchiveE
N3TST23PencilAnnotationArchiveE
N3TST28PencilAnnotationOwnerArchiveE
N3TST18AccumulatorArchiveE
N3TST18GroupColumnArchiveE
N3TST22GroupColumnListArchiveE
N3TST22ColumnAggregateArchiveE
N3TST26ColumnAggregateListArchiveE
N3TST29GroupByArchive_AggNodeArchiveE
N3TST32GroupByArchive_AggregatorArchiveE
N3TST66GroupByArchive_GroupNodeArchive_FormatManagerArchive_RowSetArchiveE
N3TST52GroupByArchive_GroupNodeArchive_FormatManagerArchiveE
N3TST31GroupByArchive_GroupNodeArchiveE
N3TST14GroupByArchiveE
N3TST20CategoryOwnerArchiveE
N3TST23CategoryOwnerRefArchiveE
N3TST36PivotGroupingColumnOptionsMapArchiveE
N3TST17PivotOwnerArchiveE
N3TST22RichTextPayloadArchiveE
N3TST35FormulaEqualsTokenAttachmentArchiveE
N3TST15CellFillStandInE
N3TST23FormulaSelectionArchiveE
N3TST17CellBorderArchiveE
N3TST33DefaultCellStylesContainerArchiveE
N3TST25MultiTableRemapperArchiveE
N3TST27ChangePropagationMapWrapperE
N3TST41SummaryCellVendorArchive_SummaryCellEntryE
N3TST24SummaryCellVendorArchiveE
N3TST20CategoryOrderArchiveE
N3TST17PivotOrderArchiveE
N3TST44HeaderNameMgrTileArchive_NameFragmentArchiveE
N3TST24HeaderNameMgrTileArchiveE
N3TST36HeaderNameMgrArchive_PerTableArchiveE
N3TST20HeaderNameMgrArchiveE
N3TST28WidthHeightCacheFittingEntryE
N3TST16WidthHeightCacheE
N3TST19LayoutEngineArchiveE
16TSCEReferenceSet
?7}!(#
7@V1T!&G
?30TSCEASTRowColumnUidMapRewriter
44TSCEASTSearchForExcelTranslationNeedIterator
TSTStylePropertyArchiving.proto
TSPMessages.proto
TSDArchives.proto
TSKArchives.proto
TSSArchives.proto
TSWPArchives.proto"
Deprecated_TableStrokeArchive
stroke
.TSD.StrokeArchive
background
opacity
empty
CellStylePropertiesArchive
cell_fill
.TSD.FillArchive
text_wrap
deprecated_top_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_right_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_bottom_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_left_stroke
2".TST.Deprecated_TableStrokeArchive
vertical_alignment
padding
.TSWP.PaddingArchive
top_stroke
.TSD.StrokeArchive
right_stroke
.TSD.StrokeArchive
bottom_stroke
.TSD.StrokeArchive
left_stroke
.TSD.StrokeArchive"
"Deprecated_StrokePresetDataArchive
deprecated_horizontal_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_vertical_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_exterior_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_visible_mask
StrokePresetDataArchive
horizontal_stroke
.TSD.StrokeArchive
vertical_stroke
.TSD.StrokeArchive
exterior_stroke
.TSD.StrokeArchive
visible_mask
StrokePresetListArchive
count
deprecated_preset
2'.TST.Deprecated_StrokePresetDataArchive
preset
.TST.StrokePresetDataArchive"
TableStylePropertiesArchive
banded_rows
banded_fill
.TSD.FillArchive
behaves_like_spreadsheet
auto_resize
&deprecated_header_row_separator_stroke
2".TST.Deprecated_TableStrokeArchive
#deprecated_header_row_border_stroke
2".TST.Deprecated_TableStrokeArchive
'deprecated_header_row_horizontal_stroke
2".TST.Deprecated_TableStrokeArchive
%deprecated_header_row_vertical_stroke
2".TST.Deprecated_TableStrokeArchive
&deprecated_header_column_border_stroke
2".TST.Deprecated_TableStrokeArchive
)deprecated_header_column_separator_stroke
2".TST.Deprecated_TableStrokeArchive
*deprecated_header_column_horizontal_stroke
2".TST.Deprecated_TableStrokeArchive
(deprecated_header_column_vertical_stroke
2".TST.Deprecated_TableStrokeArchive
&deprecated_footer_row_separator_stroke
2".TST.Deprecated_TableStrokeArchive
#deprecated_footer_row_border_stroke
2".TST.Deprecated_TableStrokeArchive
'deprecated_footer_row_horizontal_stroke
2".TST.Deprecated_TableStrokeArchive
%deprecated_footer_row_vertical_stroke
2".TST.Deprecated_TableStrokeArchive
.deprecated_table_body_horizontal_border_stroke
2".TST.Deprecated_TableStrokeArchive
,deprecated_table_body_vertical_border_stroke
2".TST.Deprecated_TableStrokeArchive
'deprecated_table_body_horizontal_stroke
2".TST.Deprecated_TableStrokeArchive
%deprecated_table_body_vertical_stroke
2".TST.Deprecated_TableStrokeArchive
stroke_preset_list
.TST.StrokePresetListArchive
v_strokes_visible
h_strokes_visible
hr_separator_visible
hc_separator_visible
footer_separator_visible
table_border_visible
table_header_border_visible
table_hc_divider_visible
table_hr_divider_visible
table_footer_divider_visible
OBSOLETE_master_font_size
master_font_family
writing_direction
.TSWP.WritingDirectionType
header_row_separator_stroke
.TSD.StrokeArchive
header_row_border_stroke
.TSD.StrokeArchive
header_row_horizontal_stroke
.TSD.StrokeArchive
header_row_vertical_stroke
.TSD.StrokeArchive
header_column_border_stroke
.TSD.StrokeArchive
header_column_separator_stroke
.TSD.StrokeArchive
header_column_horizontal_stroke
.TSD.StrokeArchive
header_column_vertical_stroke
.TSD.StrokeArchive
footer_row_separator_stroke
.TSD.StrokeArchive
footer_row_border_stroke
.TSD.StrokeArchive
footer_row_horizontal_stroke
.TSD.StrokeArchive
footer_row_vertical_stroke
.TSD.StrokeArchive
#table_body_horizontal_border_stroke
.TSD.StrokeArchive
!table_body_vertical_border_stroke
.TSD.StrokeArchive
table_body_horizontal_stroke
.TSD.StrokeArchive
table_body_vertical_stroke
.TSD.StrokeArchive
category_level1_top_stroke
.TSD.StrokeArchive
category_level2_top_stroke
.TSD.StrokeArchive
category_level3_top_stroke
.TSD.StrokeArchive
category_level4_top_stroke
.TSD.StrokeArchive
category_level5_top_stroke
.TSD.StrokeArchive
category_level1_bottom_stroke
.TSD.StrokeArchive
category_level2_bottom_stroke
.TSD.StrokeArchive
category_level3_bottom_stroke
.TSD.StrokeArchive
category_level4_bottom_stroke
.TSD.StrokeArchive
category_level5_bottom_stroke
.TSD.StrokeArchive
category_level1_interior_stroke
.TSD.StrokeArchive
category_level2_interior_stroke
.TSD.StrokeArchive
category_level3_interior_stroke
.TSD.StrokeArchive
category_level4_interior_stroke
.TSD.StrokeArchive
category_level5_interior_stroke
.TSD.StrokeArchive
&category_level1_label_separator_stroke
.TSD.StrokeArchive
&category_level2_label_separator_stroke
.TSD.StrokeArchive
&category_level3_label_separator_stroke
.TSD.StrokeArchive
&category_level4_label_separator_stroke
.TSD.StrokeArchive
&category_level5_label_separator_stroke
.TSD.StrokeArchive
(table_body_pivot_group_horizontal_stroke
.TSD.StrokeArchive
&table_body_pivot_group_vertical_stroke
.TSD.StrokeArchive
-table_body_pivot_deemphasis_horizontal_stroke
.TSD.StrokeArchive
)table_body_pivot_emphasis_vertical_stroke
.TSD.StrokeArchive
+header_column_pivot_group_horizontal_stroke
.TSD.StrokeArchive
+header_column_pivot_group_deemphasis_stroke
.TSD.StrokeArchive
$header_column_pivot_separator_stroke
.TSD.StrokeArchive
&header_row_pivot_group_vertical_stroke
.TSD.StrokeArchive
(header_row_pivot_group_deemphasis_stroke
.TSD.StrokeArchive
header_row_pivot_title_stroke
.TSD.StrokeArchive
&footer_row_pivot_group_vertical_stroke
.TSD.StrokeArchive"n
TableStylePresetArchive
index
image
.TSP.Reference
style_network
.TSP.Reference")
TableStrokePresetArchive
index
ThemePresetsArchive
table_style_presets
.TSP.Reference
table_cell_stroke_presets
.TSP.Reference2?
extension
.TSS.ThemeArchive
.TST.ThemePresetsArchive
N3TST29Deprecated_TableStrokeArchiveE
N3TST26CellStylePropertiesArchiveE
N3TST34Deprecated_StrokePresetDataArchiveE
N3TST23StrokePresetDataArchiveE
N3TST23StrokePresetListArchiveE
N3TST27TableStylePropertiesArchiveE
N3TST23TableStylePresetArchiveE
N3TST24TableStrokePresetArchiveE
N3TST19ThemePresetsArchiveE
!"#$%&'()*+,-./0123444456789:;<=>?@ABCDEFGHIJJJKLLLMNOOPQRSTUVWXYYZ[\\\\\\\\\\\\\\\\\\\]^_``````abcdefghijklmnopYYYYYYYYYYYYYYYY
-23
'67
?@
/ g 
"%"+"5"?"C"M"W"a"k"u"
#!#+#5#?#I#S#]#g#m#w#
$)$/$9$D$N$X$^$f$p$t$~$
%&%0%3%=%G%Q%Y%c%g%q%t%~%
&)&4&>&H&L&V&`&j&t&x&
'!'+'.'1';'E'O'Y'_'i's'{'
15TSTDefaultLexer
21TSTDefaultyyFlexLexer
 !"#$%&'()*+,-./
pSDA
xCuT
IAVW
?w@CR!"#$%&'()*+,-/0123
LH;<=>?I@
yz{|}~
UDJ@
XYZ[\]^_`abcdefg
hijk
456789:;<=>?
@456789:;<=>?
456789:;<=>?
AB:;<=>?C@
DDDDDDDDDDDDDDDDDD
()*46
DDDDDDDDDDDDDDDDBDDDD,DDD@
!&"%$'
DDDD
(+527
0318?:?D
012222222222222222222222222222333344444556667777777778899:;;<<==>>??
PNO 
'(23456789:>?????????????
????? !"#$%&'()*+-
2<=;<
3<?22???????????????????????
3>222222222222355>7>
6>????%??=<?22
??22
2%?2
2$?2
2#?2
2 ?2
2"?2
2!?2
2&?2
2(?2
2'?2
2*?2
2)?2
2+?2
?3%?2
?%?2
8,?7
!"#$%&'()*+,-./0123444456789:;<=>?@ABCDEFGHIJJJKLLLMNOOPQRSTUVWXYYZ[\\\\\\\\\\\\\\\\\\\]^_``````abcdefghijklmnopYYYYYYYYYYYYYYYY
r'r'o
r'r'r'
r'r'r'
r'r'r'r'`
r'r'r'r'
r'r'
r'r'
r'r'r'
" "*"."8"B"L"V"`"j"t"~"
# #*#4#>#H#R#X#b#l#p#z#
$$$/$9$C$I$Q$[$_$i$s$w$
%(%2%<%D%N%R%\%_%i%s%{%
&)&3&7&A&K&U&_&c&m&w&
'&'0':'D'J'T'^'f'
13TSTCommaLexer
#$%&'()*+,-./012334555556789:;<=>?@ABBCDDDEFEEEGHHHHIHHHHJKLMNONPPQRRRRRRRRRRRRRRRRRRRRSRTUUUUUUVWXYZZZZZZZZZZ[\PPPPPPPPPPPPPPPP
16TSCEDefaultLexer
22TSCEDefaultyyFlexLexer
9FlexLexer
 !"#$%&'(
0123456789:;<
FGHIJK
 !"#$%&
_fgh]^
hi]^fg}&v
#$%&
 !"#$%&!"#$%&PQRSTUVWXYZ[
%&fg
E'=F
)*+,-./|
@PQRSTUVWXYZ[\B]^_v`
 cdefgh
0123456789:;<>?{
wyxz=<'
AHANO
 9:;<GK6789:;<789:;<jklmnopqrstu
BBBBBBBB
$&'15:""BBB@?
%',>
BBBBBBBBBBBBB
BBB4B#!!BBBBBB8B
()*+23
9BBB(-/*.076
)*++++++++++++++++++++,,--./0112233444555556666678888999::;;;<==>>
!"+,.014578:;<>>
-/5689=>>>>>>>>
 !"#$%&1
++>>>>>>>>>>>>>>>>>22>>>>>>>++++++++++++
8:8:;<,0
89=89==;
>>>3
+ >+
+">+
+!>+
+$>+
+#>+
+%>+
$).38=BFJNPSVX[^aeilpsz
_A15At
$s8TSTables35TSTFixedColumnWidthGeometryProviderP
TSCEUnpersistedStorage
TSTFormulaAdditions
TSCERewritingMinion
TSCEFormulaReplacing
NSObject
TSTGroupNode
TSCEWarning
TSTCellSelection
TSDTextSelection
TSTRefParser
TSCERefParsingProtocol
TSTFormsSheetProvider
TSTTableModel
TSDMixing
TSTCompatibilityVersionProviding
TSTCustomStrokeProviding
TSTStyleProviding
TSTTableStrokeProviding
TSTTableTileCreating
TSTMutableCellIteratorData
TSTCellIteratorData
TSTTableTile
TSTWidthHeightCollection
TSCEDateCellValue
TSTCellRangeControlSpec
TSCETableNameChangeProtocol
TSCETablesByNameDistributor
TSCECellCoordinateVector
TSCEAutogeneratedSpecList
TSCECellTractRef
NSCopying
TSTResolverContainerNameProvider
TSCECalculationEngineRegistration
TSKModel
TSTTableInfo
TSDContainerInfo
TSDInfo
TSPCopying
TSDInfoUsingObjectPlaceholderGeometry
TSKSearchable
TSSPresetSource
TSSStyleClient
TSCEColumnRowUIDMapping
TSTTableHiddenRowColumnProviding
TSTAdditionalHiddenRowColumnProviding
TSTTableInternalGeometryProviding
TSTTableMergeRangeProviding
TSWPStorageParent
TSWPTextStatisticsTrackerProvider
TSSPropertySource
CellMap
TSTRichTextReferenceWrapper
TSTCellIterating
TSCECellValue
TSTMergeListWrapper
TSTUIDRectRef
TSTCellIterator
TSTCellStyle
TSTInNode
TSTCSEData
TSTPivotTranslator
TSCEUpgradingTablesMinion
TSTStockDetails
TSTTableTileRowInfo
TSTExpandCollapseState
TSTCellFormulaSpec
TSCEFormulaReturning
TSCEStringManipulator
TSCENameTrie
TSCEReferenceParsingContext
NumericCompare
TSCEEdgeListPrinter
TSCECellDependencyRowPrinter
TSCECellDependenciesPrinter
TSTGroupingColumnList
TSTAdditions
TSCEDistributor
TSTGroupBySet
TSCETrackedReferenceTSPObjectDeprecated
TSTCellDiff
TSCEFunctionsInUse
TSTConcurrentCellMap
TSTCellMapChangeDescriptorDelivering
TSTConcurrentCellList
TSTConcurrentSparseCellList
TSTCellDiffArraySegment
TSTStructuredTextImportRecord
TSTTableDataList
Type_Specific_API
Upgrade
TSTTableStyle
TSCENilCellValue
TSTArchivedCellSelection
TSKArchivedSelection
TSTArchivedRdar39989167CellSelection
TSTColumnAggregate
TSCEStringCellValue
TSTTableTileStorage
TSTTableHeaderStorage
TSTEphemeralFilter
TSTTableHeaderStorageBucket
Archiving
TSCELogicalTest
TSTFormulaStore
TSCEAbstractGrid
Analytics
TSTLayoutProcessChangesActions
TSWPStyleProviding
TSTLayout
TSWPColumnMetrics
TSWPLayoutParent
TSWPStorageObserver
TSTAccumulator
TSTColumnAggregateList
TSCEReferencesToDirty
Helper
TSCEErrorCellValue
TSTRangeRefPair
TSTRefNamer
TSCERefNamingProtocol
TSCETransaction
TSCENamedReferenceManager
TSCEFormulaOwning
TSCESumAccumulator
TSTPivotCellSetter
TSTCellDiffArray
TSCECoordMapper
TSCECoordMappingProtocol
TSTWPTableInfo
TSTStrokeSidecar
TSTStrokeSidecarLookupMap
TSTCellRangeCache
TSTTableInfoHint
TSDDrawableContainerInfo
TSDReplaceableMediaContainer
TSDReducibleImageContainer
TSDCompatibilityAwareMediaContainer
TSDSelectableHintMediaContainer
TSTLayoutSpace
TSTCoordinateArray
TSCECellDirtier
TSTCellWillChangeProtocol
TSTCellWillChangeDistributor
TSTMergeChangeProtocol
TSTMergeChangeDistributor
TSCEUIDSet
NSMutableCopying
TSCEMutableUIDSet
TSCEConfiguration
TSTFormulaTokenContext
TSCEFormulaObject
TSTVariableNode
TSTWPFormulaSelection
TSTWPFormulaArchivedSelection
TSTWPFormulaFieldSelection
TSTCellRegionGatherer
TSCERegionAllocator
TSTAggregator
TSTTableStylePreset
TSSPreset
TSTHiddenStateIndexSet
TSTTableStrokePreset
TSCERelativeTractRef
TSTTableStyleNetwork
TSTLocalStylesKey
TSTLocalAccumulator
TSCERefNamingContext
TSTOwnerUidMapper
TSCEAbortObject
TSCECalculationEngine
TSCEGroupByChange
TSTTableArchivedControlCellSelection
TSTTableDataListItemCache
TSTTableDataListCache
TSTTableStrokePresetList
TSCEFormulaRewriteSpec
TSTTableStrokePresetData
TSCESageSizedList
TSCE_PrefixMatch
TSCETablesByName
TSTArchiving
TSTLayoutCellIterator
TSTExpressionNode
TSTFormulaToken
TSTFormula
TSTFormulaHelperMethods
ValidationSidecarAdditions
TSCEAdditions
TSTCellChooserControlSpec
TSTTextStyleToFontHeightCache
TSCEFunctionArgumentSpec
TSTHiddenStateFormulaOwner
TSTOperatorNode
TSTStrokeSelection
TSTCustomFormatListUpgradeHelper
TSTCustomFormatListReferenceWrapper
TSTTableControlCellSelection
TSCERegexMatcher
TSTNumberNode
!`&`"@
TSTCell_PreBNC
TSTCellMap
TSTCellMapIterator
TSTCellList
TSTStrokeWidthCache
TSTTableNameSelection
TSTColumnRowUIDMap
TSTImmutableColumnRowUIDMap
TSTCategoryOwner
TSTAggNode
TSTFunctionNode
TSCERemoteDataCoordinator
TSTLetNode
TSTSummaryModel
TSTGroupByChangeProtocol
TSTSummaryModelGroupByChangeState
TSTCellToggleControlSpec
TSCEHauntedOwner
TSTStrokeOrderedLayerToken
TSTStrokeLayerStrokeAndRange
TSTStrokeOrderedLayer
TSCEValueContainer
TSCETrackedReferenceStore
TSTFormulaPredArgData
TSTFormulaPredArg
TSTHiddenStatesOwner
TSCEWrappedCellRef
TSCEWrappedRangeRef
TSTBooleanNode
TSCEFormulaRewrite_Uids
TSCEFormulaRewriteInfo_RangeEntry
TSCEFormulaRewriteInfo_RowColumnInfo
TSTArrayNode
TSTListNode
TSTGroupNodeFormatManager
TSTWPLayout
TSTStringNode
TSTCellUIDRegion
TSTDateNode
TSTReferenceNode
TSTStarRatingRenderer
TSTPencilAnnotation
TSKPencilAnnotation
TSCERangePrecedentsTile
TSTDurationNode
TSCELocalization
TSTArgumentPlaceholderNode
TSTPostfixOperatorNode
TSTStrokeDefaultVendor
TSCEDenseGrid
TSTUidCoordsForLevelAndType
TSTUidCoordsPerGroupValueTuple
TSTUidCoordsPerRunningCellValue
TSTRunningTotalContext
TSCEUnitRegistry
TSTPrefixOperatorNode
TSTFunctionEndNode
TSCEColumnRowIndexMapper
TSTCellFormatAndValue
TSTCellDiffing
TSSPropertyCommandSerializing
TSTLayoutValidationBundle
TSCEUuidReferences
TSTPivotOwner
TSTWPRep
TSTHiddenStates
TSTStrokeSidecarIterator
TSTCellRegionIterating
TSTMutableCellIteratorDataUpdating
TSTGroupBy
TSTCellUIDLookupListWrapper
TSTTableGroupSortRuleUID
TSCERemoteDataStore
TSTEmptyExpressionNode
TSTCellBorder
TSTStrokeLayerAbstractStack
TSTStrokeLayerStack
TSTStrokeLayerMergedStack
TSTStrokeExporter
TSTUniqueValuesToRows
TSTHiddenStateExtent
TSTMergeOwner
TSTCellSpec
TSTSortRuleReferenceTracker
TSTAutofillSelection
TSTLayoutEngine
'2R2
TSTLayoutHint
TSDHint
TSTArchivedLayoutHint
TSDArchivedHint
CellDiffAdditions
TSTTablePartitionerParticipating
TSTTablePartitioner
TSDPartitioner
TSTLayoutSpaceBundle
TSCEFormulaOwnerDependencies
TSTTableDataListSegment
TSTConcurrentCellIterator
TSTConcurrentCellIteratorFourArgRock
TSTMergeAction
TSTCellUIDList
TSTCellUIDIterator
TSTGroupByChangeDelayedNotification
TSTGroupByChangeDistributor
TSCEBooleanCellValue
TSCERemoteDataSpecifier
TSTTableTileGroup
TSCENumberCellValue
TSCERemoteDataSpecifierSet
TSTMergeRegionMap
TSTFormulaRewrite_PivotInfo
TSTPencilAnnotationOwner
TSTPivotGroupingColumnOptions
TSTPivotGroupingColumnOptionsMap
TSTWidthHeightCache
TSCERemoteDataSourceFetcher
TSCEFormulasToSet
TSTChangeDescriptor
TSTCustomFormatList
TSTTextEngineDelegate
TSWPTextDelegate
TSTTableSortOrder
TSTLayoutTask
TSTConcurrentMutableCellUIDSet
TSCEReferenceResolving
TSTCellStateForLayout
TSTWPTokenAttachment
TSCEBulkCellChangeMinion
TSTPivotRowColumnOrder
TSTCompletionToken
TSTStrokeLayerToken
TSTStrokeLayer
TSTStrokeLayerEnumerating
TSTMutableStrokeLayer
TSCEGetPivotDataBundle
TSCETaggedDecimalListObject
TSTConcurrentStylesheetKey
TSTConcurrentStylesheet
TSTAnimation
TSTFontInfoCacheEntry
TSTFontInfoCache
TSTIndexingChunk
TSTHeaderNameMgrTile
TSTHeaderNameSubset
TSTHeaderNameMgr
TSTCellDiffMap
TSCETableTransposedInfo
TSCERewriteTableUIDInfo
TSCERewriteGroupNodeUIDInfo
TSTTableSortRule
TSTTableViewSortRule
TSTGroupValueTuple
TSCEQuotedRefPathWord
TSCEQuotedRefPathComponent
TSCEQuotedRefPathSplitter
TSCEUUidReferenceMap
TSTCheckboxRenderer
TSTMergeRangeSortedSet
TSTLayoutContentCachedKey
TSTLayoutDynamicResizeInfo
TSTLayoutDynamicResizeInfoProtocol
TSTColumnRowUIDMapper
TSTCategoryStoreIterator
TSCEFormulaOwnerWrapper
ReferenceResolving
TablesAdditions
TSTCategoryAggregateFormulaOwner
TSTRichTextPayload
TSCEViewTractRef
TSTSummaryCellVendor
TSCECalcTimeoutObject
TSTTableFilterRule
TSTTableFilterSet
TSCECategoryRef
TSTFormulaPredicate
TSTArchivedStrokeSelection
TSTTableBadge
TSTCellRegion
ModelCoordinateSupport
ViewCoordinateSupport
TSTMutableCellRegion
TSTCellRegionRowMajorIterator
TSTCellRegionColMajorIterator
TSTCellRegionRowMajorReverseIterator
TSTCellRegionColumnMajorReverseIterator
TSCEUndoTract
FullTuple
TSCEUndoTractList
NSFastEnumeration
TSCEStock
TSCECellRecordTileWrapper
TSTTableTranslator
TSCETableTranslatorProtocol
TSCEFunctionSpec
TSTStrokeExportCache
TSCEGroupByNodeMap
TSTIdentifierNode
TSTTableHeaderInfo
TSTTemporaryCollectionNode
TSTConditionalStyleRule
TSCEFormulasForUndoForOwnerKind
TSCEFormulasForUndo
TSTConditionalStyleSet
TSTConcurrentMutableIndexSet
TSTConditionalStyleFormulaOwner
TSCETrackedReference
TSTLayoutDynamicResizeInfoUnify
TSTLayoutDynamicResizeInfoAccordion
TSTCategoryOrder
TSTPasteMap
TSTTableSortTag
TSCECalendar
ChangeGroups
TSTColumnRowMetadata
TSTContentComposingIterator
Reorganize
TSTCategoryTranslator
TSCEFormulaRewrite_RegionInfo
TSCEFormulaRewrite_RegionMergedInfo
TSCEFormulaRewrite_MergeOriginMovedInfo
TSCEFormulaRewrite_RegionMovedInfo
TSTFilteredTableDynamicContentDelegate
TSTLayoutDynamicContentProtocol
TSTHiddenRowsColumnsCacheValidationCollection
TSTHiddenRowsColumnsCache
Coercion
TSTDataStoreIterator
TSCEAggregateGrid
TSTArchivedLayoutEngineBundle
TSTFormulaEqualsTokenAttachment
TSTFormulaEqualsTokenAttachmentRenderer
TSWPGraphicalAttachmentRenderer
FormulaAdditions
TSTArchivedTableNameSelection
TSTPerformanceLogging
TSTGroupingColumn
TSTConvertFormulasForCategoriesByRewritingWrapper
TSTPivotStoreIterator
FormulaOwner
TSCEAnyReference
TSTStrokeAssociatedObject
TSTTableResolverFactory
TSCETableResolverFactoryProtocol
TSCEResolverLocatingProtocol
TSTImportWarningSet
TSTImportWarningSetByCellRef
TSTWrappedFormula
TSCEError
TSCERemoteDataValueMap
TSTChartReferenceFormula
TSCECellValueCombinator
TSTPopUpMenuModel
TSUMultipleChoiceListChoiceProviding
TSTTableDataObject
TSTTableDataCommentStorage
TSTTableDataConditionalStyleSet
TSTTableDataCustomFormat
TSTTableDataFormat
TSTTableDataCellSpec
TSTTableDataFormulaError
TSTTableDataImportWarningSet
TSTTableDataMultipleChoiceList
TSTTableDataRichText
TSTTableDataString
TSTTableDataStyle
TSTTableDataPayload
TSTCellDictionary
TSTDupContentCache
TSCEEvalRef
TSTWPColumnCache
TSTCell
TSCEReferenceSetWrapper
TSTTableGroupSortOrderUID
TSTTableDataStore
TSTCellReorganizeValue
TSCEValueGrid
AbstractGrid
TSTCommentStorageWrapper
TSCEReferenceBackedGrid
TSTLayoutSpaceBezierPathCacheKey
TSTLayoutSpaceBezierPathCache
TSTCommentHosting
TSDComment
TSDAnnotation
TSKAnnotation
TSTConfiguration
TSTFormulaRewriteSpec
TSCEAutogeneratedSpecTypes
TSTArchivedAutofillSelection
TSTTableRepProcessChangesActions
TSTTableRep
TSWPRepParent
TSDContainerRep
TSTTableRepInternal
UITextFieldDelegate
CALayerDelegate
TSTPdfTagger
TSKPdfTagger
TSDMasterDrawableDelegate
context
stylesheet
initWithContext:string:stylesheet:kind:
insertStorage:atCharIndex:dolcContext:undoTransaction:
copyStorageUnpersisted:
willModify
copyPersistedWithContext:
mutableCopy
copy
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:isFatal:description:
logBacktraceThrottled
string
paragraphStyleAtParIndex:effectiveRange:
propertyMap
properties
filterWithProperties:
characterStyleAtCharIndex:effectiveRange:
addValuesFromPropertyMap:
initWithContext:name:overridePropertyMap:isVariation:
setCharacterStyle:range:undoTransaction:
length
paragraphCount
tableResolverForTableUID:
wpKind
defaultListStyle
initWithContext:string:kind:stylesheet:paragraphStyle:listStyle:section:columnStyle:
textRangeForParagraphAtIndex:
setParagraphStyle:forCharRange:undoTransaction:
insertString:atCharIndex:undoTransaction:
appendString:
replaceCharactersInRange:withStorage:usePasteRules:dolcContext:undoTransaction:
replaceCharactersInRange:withString:undoTransaction:
substringToIndex:
substringFromIndex:
replaceCharactersInRange:withString:
canBeStoredInAStringValueCell
rangeOfComposedCharacterSequencesForRange:
newSubstorageWithRange:context:flags:
UTF8String
substringWithRange:
isEqualToString:
enumerateSubstringsInRange:options:usingBlock:
uppercaseWithUndoTransaction:locale:
uppercaseString
lowercaseWithUndoTransaction:locale:
lowercaseString
capitalizeWithUndoTransaction:locale:
capitalizedString
characterAtIndex:
firstIndex
lastIndex
initWithContext:functionNode:firstIndex:lastIndex:
functionNode
children
count
arrayWithCapacity:
countByEnumeratingWithState:objects:count:
tokenAttachment
objectForKey:
expressionNode
deepCopyIntoContext:bakeModes:withTokenDict:
addObject:
arrayWithArray:
setChildren:
documentRoot
i_copyIntoContext:stylesheet:paragraphStyle:listStyle:bakeModes:resettingHostTableToMatch:referenceColorHelper:disableMenus:
writingDirectionForParagraphAtParIndex:
initWithContext:string:kind:stylesheet:paragraphStyle:listStyle:section:columnStyle:paragraphDirection:
defaultParagraphStyle
range
attachmentIndexRangeForTextRange:
initWithCapacity:
attachmentAtAttachmentIndex:outCharIndex:
tokenType
removeObject:
p_processEndNode:startNode:bakeModes:tokenDict:
initWithContext:expressionNode:
copyIntoContext:bakeModes:
isLocalReference
tableUID
setHostTableUID:
baseBoundingBox
basePreserveFlags
setBaseRangeRef:preserveFlags:
setReferenceColorHelper:
suppressReferenceOptionsMenu
setObject:forUncopiedKey:
functionEndNode
setNeverShowsMenu:
deleteRange:undoTransaction:
insertAttachmentOrFootnote:range:
anyObject
attachmentAtCharIndex:
performBlockIgnoringModifications:
enumerateAttachmentsOfClass:inTextRange:usingBlock:
stringWithFormat:
exceptionWithName:reason:userInfo:
isEqualToExpressionNode:
letString
p_rangeOfString:orNodeClass:range:
inString
whitespaceAndNewlineCharacterSet
characterIsMember:
takeText:withLanguage:
replaceText:withLanguage:atRange:
setLanguage:forCharRange:undoTransaction:
insertUIGraphicalAttachment:withLanguage:
stringWithFormulaPlainTextFromRange:
p_stringWithFormulaAsTextFromRange:returningTokenValues:
stringWithFormulaDetokenizedTextFromRange:
detokenizedText
formulaPlainText
appendFormat:
p_detokenizeEverythingInRange:
p_detokenizeTokenAtCharIndex:
p_replaceTokenAtCharIndex:withText:
componentsSeparatedByString:
firstObject
p_replaceUnknownDirectionText:atRange:
subarrayWithRange:
p_replaceMixedDirectionText:atRange:
alphanumericCharacterSet
documentLocale
isLanguageFormulasDirectionRightToLeft
replaceText:atRange:
deleteCharactersInRange:
i_copyIntoContext:stylesheet:
hasDamagedTokenAttachments
isFormulaSyntaxErrorEqual:
rangeOfLetWithinRange:
rangeOfInWithinRange:
previousNonWhitespaceOrNewlineIndexStartingAtIndex:
nextNonWhitespaceOrNewlineIndexStartingAtIndex:
takeText:
insertUIGraphicalAttachment:
stringWithFormulaPlainText
stringWithFormulaDetokenizedText
detokenizeEntireStorage
init
initWithCalcEngine:forMinion:options:
calcEngine
replaceFormula:atCellCoord:inOwner:
replaceFormula:atCellCoord:inOwner:replaceOptions:
replaceFormulaAt:inOwner:precedents:replaceOptions:
removeFormulaAt:inOwner:
removeFormulasAt:
removeAllFormulasFromOwner:
resetFormulaAt:
markCellRefAsDirty:
markRangeRefAsDirty:
flushAllFormulaChanges
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
initWithCalcEngine:
addRewrittenCellAt:
hasRewrittenCellAt:
addPendingCellRemovalAt:
flushAllChanges
.cxx_destruct
.cxx_construct
_formulasToSet
_rewrittenCells
_pendingCellsToRemove
T@"TSCECalculationEngine",R,N
canonicalKeyString
groupByRootUid
groupValueUid
groupUid
groupValueTuple
groupValueTupleByAppendingValue:
initWithValueArray:
computedGroupValueTuple
groupBy
isForPivotTable
hiddenStates
rowHiddenStateExtent
hasActiveFilters
mutableFilteredIndexes
containsIndexes:
rowCount
setParentNode:
initWithCellValue:
cellValue
initWithContext:
setupWithGroupCellValue:groupBy:atLevel:groupUid:children:
initWithGroupCellValue:groupBy:atLevel:groupUid:children:
loadFromArchive:unarchiver:forGroupBy:
currentLocale
cellValueWithArchive:locale:
addRowUid:
groupCellValue
setObject:forKey:
enumerateRowUidsWithBlock:
initWithArchive:forGroupBy:
initWithArchive:
groupNodesByGroupUid
unpackAfterUnarchiveForGroupBy:
unpackAfterUnarchiveForGroupBy:atLevel:
aggNodeForAggFormulaCoord:
setGroupNode:
addAggNode:
encodeToArchive:backwardCompatOptions:archiver:
dealloc
removeObjectForKey:
encodeCellValueToArchive:
safeChildren
setStrongReferenceArray:message:
aggNodes
formulaCoord
encodeToArchive:forGroupBy:backwardCompat:
valueType
lookupKeyForRowUID:
foreachUuid:
setGroupBy:
setLocale:
customFormatList
updateWithCustomFormatList:
updateWithDocumentRoot:
removeAllObjects
addChild:withKey:
hasUnfilteredRows
addUUID:
p_addChildGroupUidsIntoSet:recursively:skipFiltered:
groupByUid
initWithGroupByUID:absGroupUid:columnUid:aggType:groupLevel:
groupLevel
canonicalKeyStringAtLevel:
findGroupNodeForValue:atLevel:locale:
componentAtIndex:
wordAtIndex:
hasPreserveFlag
trimmedStringStartingAtWord:
localizedBlankGroupName
caseInsensitiveCompare:
localizedErrorGroupName
localizedTrueGroupName
localizedTrueGroupNameForColumn
localizedFalseGroupName
localizedFalseGroupNameForColumn
locale
lowercaseStringWithLocale:
normalizedStringForCompare:
localizedStringForCellValue:categoryLevel:groupBy:
findGroupNodeForDisplayValuesFromSplitter:atLevel:startAtComponent:startAtWord:preserveFlags:
groupValueTupleByReplacingValue:atLevel:
mapPreviousGroupNodeUid:toUpdatedGroupNodeUid:
addChangesTo:forReplacingValue:atLevel:
groupValueTupleByRemovingValueAtLevel:
numberOfLevels
addChangesTo:forRemovingValueAtLevel:
groupValueTupleByPromotingValueAtLevel:toLevel:
addChangesTo:forPromotingValueAtLevel:toLevel:
groupValueTupleByDemotingValueAtLevel:toLevel:
addChangesTo:forDemotingValueAtLevel:toLevel:
groupValueAtLevel:
mergedFormatChangedByAddingRowUID:andCellValue:groupBy:
p_refreshGroupValue
didAddRowUID:toGroup:
prefixTupleToLevel:
didAddGroupNode:
insertRowUid:atRowIndex:forGroupValueTuple:atLevel:withLocale:createdGroupNodeCount:
aggregators
aggNodeForGroupNode:
isRebuildFormulasDeferred
setNeedsRebuildOfAggFormulas:
rebuildFormulasForAggNode:
containsRowUid:
mergedFormatChangedByRemovingRowUID:groupBy:
didRemoveRowUID:fromGroup:
removeRowUid:forGroupValueTuple:atLevel:withLocale:
willRemoveGroupNode:
removeChildForKey:
clearAllGroupNodes
allKeys
findKeyForRowUid:
removeRowUids:
categoryOwner
aggregator
columnUid
aggNodeForColumnUid:
addChild:skipWillModify:
enumerateDirectChildren:
tableModel
cellRefsForRowIndexes:tableUID:
referenceToHiddenStateFromRow:toRow:
columnRowUIDMap
rowUidsAsVector
rowIndexesForUIDs:
cellRefsForAggNodesAtGroup:
anyAggregateTypeForColumnUID:
minion
emptyReferenceSetWrapper
insertCellRef:
insertRangeRef:
hiddenStatesChangedPrecedent
markOnlyDependentsDirty:
rowUIDForLookupKey:
uuidsAsVector
containsUuid:
reset
removeAllRowUids
clearEmptyNodes
parentNode
stringByReplacingOccurrencesOfString:withString:
localizedNameForBlankGroupForDocumentLocale:
localizedNameForErrorGroupForDocumentLocale:
tsceValue
tableInfo
columnDisplayNameForCategoryLevel:
localizedTrueStringForBooleanGroupWithString:documentLocale:
localizedFalseStringForBooleanGroupWithString:documentLocale:
trueString
falseString
displayString
errorValue
isCircularReferenceError
initWithString:locale:
localizedStringForKey:value:table:
compactDescriptionForAggregateIndex:locale:
groupValueHierarchyStringWithDelimiterString:
groupValueHierarchyStringWithDelimiterString:namingContext:
quoteComponents
forFormulaPlainText
tsce_internationalWhitespaceCharacterSet
rangeOfCharacterFromSet:
tsce_newStringByForcingSingleQuoteEscapes:
isLeaf
isGroupUIDCollapsed:
unfilteredDirectChildGroupUids
directChildGroupUids
firstUidFromUIDSet:isRows:
groupNodeForGroupUid:
firstVisibleNodeUsingColumnRowUIDMap:forDimension:leafLevel:pivotTableHiddenExtent:
enumerateAllGroupsWithStop:withBlock:
enumerateGroupsBetweenLevel:andLevel:withStop:withBlock:
enumerateGroupsBetweenLevel:andLevel:withBlock:
groupNodeForRowUid:atLevel:
needFormulasForAggregateType:
groupUuid
groupValueUuid
labelUid
initWithGroupCellValue:context:atLevel:groupUid:children:
initAsRootNodeForGroupBy:
initAsRootNodeForContext:
loadFromUnarchiver:
saveToArchiver:
isBlankNode
isErrorNode
uidReturn
childGroupUids
unfilteredChildGroupUids
aggregateRefForType:atLevel:forColumnUid:
groupValueRefAtLevel:
groupValueHierarchyRefAtLevel:
updateGroupCellValueIfKeyMatches:
markAsDirtyWithCalcEngine:
markDependentsAsDirtyWithCalcEngine:
pivotOnlyRowIndexes
containsAnyRowUidInRowUidSet:
rawGroupValueCellValue
groupValueCellValue
groupValueCellValueForGroupBySet:aggIndex:appendAggregateName:
groupValueHierarchyForChart:
groupValueHierarchyForChart:groupBySet:aggIndex:appendAggregateName:
groupHierarchyTreeAsFiltered:usingOrder:forDimension:
enumerateGroupsAtLevel:withStop:withBlock:
enumerateGroupsAtLevel:withBlock:
nodePath
_groupUid
_groupCellValue
_cachedGroupValueTuple
_groupBy
_groupLevel
_aggNodes
_children
_childrenLock
_rowUidsIndexSet
_pivotOnlyRowIndexes
_parentNode
_formatManager
_childNodesByRowUid
_disconnectedRowUids
_aggNodeCoordsToUnpack
T@"TSTGroupBy",N,V_groupBy
T{TSKUIDStruct=QQ},R,V_groupUid
T{TSKUIDStruct=QQ},R
T@"NSUUID",R
T@"TSTGroupValueTuple",R,N
T@"TSCECellValue",R,N,V_groupCellValue
TC,R,N,V_groupLevel
TI,R,N
TB,R,N
T@"TSTGroupNode",N,V_parentNode
T@"TSCEUIDSet",R,N
T^v,R,N
readRepeatedReferenceMessage:class:protocol:completion:
messageWithDescriptor:
messageWithNewFunction:descriptor:
initWithDouble:
initWithString:
initWithDate:
initWithDuration:units:
initWithCategoryRef:
initWithViewTractRef:
initWithCrossTableRef:
setUidTractList:
setPreserveFlags:
initAsBadRefWithTableUID:uidTractList:
initWithTableUID:uidTractList:
absoluteGroupUid
groupByForUID:withCalcEngine:
translator
rowUIDForBaseRowIndex:
setAbsoluteGroupUid:
astNodeArrayCopy
translationFlags
initWithNodeArray:translationFlags:
allocWithZone:
initWithDictionary:
ignored
setIgnored:
sharedCalculationEngineConfiguration
warnWhenFormulasReferToEmptyCells
referenceTextWithCalculationEngine:hostTableUID:
rangeRef
intValue
localizedTypeStringForArgumentType:
displayStringWithCalculationEngine:forTable:andCellID:
objectEnumerator
nextObject
isIgnored
initWithRangeRef:
initWithObjectsAndKeys:
numberWithInt:
setHasVisibleWarnings:
reportNonNumericCellWarningInContext:reference:
reportMonthOutOfRangeWarningInContext:
reportDayOutOfRangeWarningInContext:
reportBoolToNumberConversionWarningInContext:
reportMismatchedSizesWarningInContext:
reportLossOfUnitsWarningInContext:
reportAutomaticUnitConversionWarningInContext:
reportComparisonWarningInContext:leftType:rightType:
copyWithZone:
copyByRemappingEntityIDs:
type
metadata
setMetadata:
_ignored
_metadata
T@"NSDictionary",&,N,V_metadata
TB,N,V_ignored
cellUIDRegionFromCellRegion:
cellUIDForCellID:
initWithTableInfo:cellUIDRegion:anchorCellUID:cursorCellUID:baseCellUIDRegion:selectionType:searchReferenceRange:beginImplicitEditing:
baseTableModel
cellUIDRegionFromRegion:inTableModel:
initWithTableInfo:cellRegion:anchorCellID:cursorCellID:baseRegion:selectionType:searchReferenceRange:beginImplicitEditing:
initWithTableInfo:cellRegion:anchorCellID:cursorCellID:baseRegion:selectionType:
regionFromRange:
initWithTableInfo:cellRegion:anchorCellID:cursorCellID:baseRegion:
expandCellRangeToCoverMergedCells:
initWithTableInfo:cellRegion:anchorCellID:cursorCellID:selectionType:
initWithTableInfo:cellRange:type:anchorCellID:cursorCellID:
numberOfColumns
numberOfRows
initWithTableInfo:startingRowIndex:numberOfRows:
initWithTableInfo:startingColumnIndex:numberOfColumns:
cellRegion
regionOffsetBy:
anchorCellID
cursorCellID
baseRegion
selectionType
suitableAnchor
suitableCursor
regionFromRowIndices:columnRange:
regionFromColumnIndices:rowRange:
initWithTableInfo:andCellID:
cellIDForCellUID:
selectionWithTableInfo:cellID:
initWithTableInfo:cellRegion:
initWithTableInfo:rowIndices:
initWithTableInfo:columnIndices:
firstCellID
versionCounter
cellRegionFromCellUIDRegion:
p_cacheCellRegion:
invalidRegion
p_cacheBaseRegion:
cellCount
isRectangle
containsSingleCellOrMergeInTable:
mergeOriginForCellID:
sizeClass
initFromMessage:
addFinalizeHandler:
saveToMessage:
setWeakReference:message:
setIgnoreAndPreserveUntilModifiedRuleForField:message:
enumerateCellRangesUsingBlock:
containsCellID:
regionByAddingRange:
regionBySubtractingRange:
selectionAdjustedForVisibilityInTableInfo:alwaysCheckColumns:
isValidForInteraction
intersectingColumnsIndexSet
selectionWithTableInfo:columnIndices:
p_selectionRemovingHiddenRowsInTableInfo:
isAPivotTable
intersectingRowsIndexSet
selectionWithTableInfo:rowIndices:
p_selectionRemovingHiddenColumnsInTableInfo:
indexesOfVisibleRowsInRowRange:
regionByTrimmingAroundRowIndices:
indexesForSummaryRows
indexOfVisibleRowAfterAndIncludingRowAtIndex:
indexOfVisibleRowBeforeAndIncludingRowAtIndex:
tsu_intersectsIndexesInIndexSet:
containsIndex:
indexesForGrandTotalRows
indexSetWithIndex:
regionFromColumnIndexes:rowIndexes:
selectionWithTableInfo:cellRegion:
boundingCellRange
indexesOfVisibleColumnsInCellRange:
regionByTrimmingAroundColumnIndices:
indexesForSummaryColumns
indexOfVisibleColumnAfterAndIncludingColumnAtIndex:
indexOfVisibleColumnBeforeAndIncludingColumnAtIndex:
indexesForGrandTotalColumns
equalsCellRange:
isCategorized
isGroupingRowCollapsed:
rowRangeUnderSummaryOrLabelRow:
addIndexesInRange:
isEqualToSelection:
anchorCellUID
cursorCellUID
searchReferenceRange
beginImplicitEditing
equalsCellRegion:
tableAreaForCellID:
containsCellRegion:
isSingleCellOrMergeRange:
hasMergeFragmentAtCellID:
canEditWithControlCellSubselectionInTable:
cellAtCellID:
hasControl
interactionType
headerColumnRange
intersectsCellRange:
headerRowRange
bodyRowRange
bodyColumnRange
footerRowRange
indexesForCategoryColumnsInRegion:
indexesForSummaryRowsInRegion:
indexesForLabelRowsInRegion:
containsCellsInSummaryRow
containsCellsInLabelRow
containsCellsInCategoryColumn
containsCellsInSummaryOrLabelRows
indexesForGroupingColumnsInRegion:
intersectsCellRegion:
isEmpty
indexesForSummaryAndLabelRowsInRegion:
containsOnlySpecialCategoryCells
containsOnlySpecialPivotCells
numberOfIntersectingColumns
categoryColumnIndex
intersectsColumn:
regionBySubtractingColumnIndexes:
indexesForSummaryAndLabelRows
tsu_indexSetByIntersectingWithIndexes:
layoutEngine
visibleRowIndices
visibleColumnIndices
indexesForNonSummaryBodyRows
indexesForNonSummaryBodyColumns
containsOnlyCellsInSummaryRow
canEditWithCellSubselectionInTable:
boundingTopLeftCellID
mergeRangeAtCellID:
newCell
getCell:atCellID:
isCategoryColumn:
isSummaryRow:
mergeRangesIntersectingRange:
containsCellRange:
groupLevelForGroupUid:
aggregateTypeForColumnUID:atGroupLevel:
chromeRangeRefForViewRangeRef:
setSuppressIdenticalEndReference:
setUseSymbolicNames:
setAllowSpanningColumnReferenceBodyQualifier:
namer
nameForChromeRangeRef:namingContext:
selectionWithTableInfo:cellUID:
archivedSelectionClass
isAtEndOfLine
T{_NSRange=QQ},R,N
initForUpgradeWithTableInfo:cellRegion:anchorCellID:cursorCellID:baseRegion:selectionType:
initWithTableInfo:cellRegion:anchorCellID:cursorCellID:
initWithTableInfo:selectionType:
initWithTableInfo:andCellRange:
initWithTableInfo:cellID:selectionType:
initWithTableInfo:rowOrColumn:index:count:
initWithTableInfo:andPreviousSelection:offsetBy:
isValid
logicalCellIDInTable:
initWithArchive:unarchiver:
saveToArchive:archiver:
initWithRdar39989167Archive:unarchiver:
selectionByExtendingWithCellRange:inTable:selectionType:cursorCell:
selectionByAddingCellRange:inTable:withAnchor:cursor:selectionType:
selectionByRemovingCellRange:inTable:withAnchor:cursor:selectionType:
selectionAdjustedForVisibilityInTableInfo:
selectionAdjustedForGeometryInTableInfo:
setCellRange:
selectionToBeginImplicitEditingInTableInfo:
selectionExpandedToCoverCollapsedRows
insert:atIndex:count:
remove:atIndex:count:
areCellsInTheSameRegionInTable:
containsSelection:
containsCell:
selectsSingleControlCellWithInteractionUIInTable:
containsHeaderColumns
containsHeaderRows
containsBodyRows
containsBodyColumns
containsFooterRows
containsCellsInCategoryColumnsOrRows
containsCellsInCategoryGroupingColumn
containsGroupValueCells
containsOnlyCellsInCategoryColumn
containsOnlyCellsInSummaryAndLabelRows
containsOnlySpecialCategoryOrPivotCells
containsOnlyGroupValueCells
canEditWithStockCellSubselectionInTable:
briefDescription
intersectsPartialMergeRangeInTable:
getAggregateType:
cellSelectionNameForContextAndActionMenus
setSearchReferenceRange:
setTableInfo:
cellUIDRegion
setCellUIDRegion:
setAnchorCellUID:
setCursorCellUID:
baseCellUIDRegion
setBaseCellUIDRegion:
cachedCellRegion
setCachedCellRegion:
cachedCellRegionVersionCounter
setCachedCellRegionVersionCounter:
cachedBaseRegion
setCachedBaseRegion:
cachedBaseRegionVersionCounter
setCachedBaseRegionVersionCounter:
_beginImplicitEditing
_selectionType
_tableInfo
_cellUIDRegion
_baseCellUIDRegion
_cachedCellRegion
_cachedCellRegionVersionCounter
_cachedBaseRegion
_cachedBaseRegionVersionCounter
_searchReferenceRange
_anchorCellUID
_cursorCellUID
T@"TSTTableInfo",W,N,V_tableInfo
T@"TSTCellUIDRegion",&,N,V_cellUIDRegion
T{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}},N,V_anchorCellUID
T{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}},N,V_cursorCellUID
T@"TSTCellUIDRegion",&,N,V_baseCellUIDRegion
T@"TSTCellRegion",&,N,V_cachedCellRegion
TQ,N,V_cachedCellRegionVersionCounter
T@"TSTCellRegion",&,N,V_cachedBaseRegion
TQ,N,V_cachedBaseRegionVersionCounter
valid
TB,R,N,GisValid
T@"TSTCellRegion",R,N
Tq,R,N,V_selectionType
T{TSUCellCoord=ISBB},R,N
TQ,R,N
TB,R,N,V_beginImplicitEditing
T{_NSRange=QQ},N,V_searchReferenceRange
T@"NSString",R,N
readWeakReferenceMessage:class:protocol:completion:
whitespaceCharacterSet
initWithCellRef:
setWasConstructedViaNames:
setOverrideText:
arrayWithObject:
contextTableResolver
hasPrefix:
referenceIsComplete
headerNameMgr
headerCellsMatching:limitToTable:includePrefixes:
setNamesUsed:
array
localizedCaseInsensitiveIsEqual:toString:
anyRefForRangeForHeaderCell:usePreserveFlags:
filterColons
rangeOfString:
rangeReference
compare:options:range:locale:
tsce_stringByFoldingForNamedReferenceMatchingWithLocale:
referencesMatchingInputAsPrefix
componentsJoinedByString:
abortObject
isAborted
spanningRangeForHeaderCell:
subsetForReferenceName:limitToTable:includePrefixes:
headerCellsExactlyMatching:
headerCellsMatchingPrefix:
allHeaderCellRefsLimitedToTable:
stringInHeaderCell:
tsce_stringByAddingSingleQuoteEscapes
tsce_needsReferenceSingleQuoteEscaping
setOverrideTextAsTyped:
p_parseStringAsGeometricReferenceComponent:inResolver:outPreserveFlags:gettingReferencesMatchingInputAsPrefix:
addObjectsFromArray:
objectAtIndex:
preserveFlags
p_chromeReferencesForMixedReferences:calcEngine:
wasConstructedViaNames
parseAsBaseTableReference
p_chromeRangeRefForBaseRangeRef:calcEngine:
sheetName
setSheetNameUnquoted:
tableName
setTableNameUnquoted:
sheetNameUnquoted
tableNameUnquoted
contextResolver
resolverContainerMatchingName:
resolverMatchingName:
resolverMatchingName:contextResolver:
contextSheetName
resolverMatchingNameWithContextContainer:contextContainerName:
rest
resolverUID
setTableUID:
parseAsChromeRefWithParsingContext:
tableResolverForRefResolver:
p_parseStringAsReferenceComponentIntersection:inResolver:inTableNamed:preferredGeometricResolver:withParsingContext:
setReferencesMatchingInputAsPrefix:
setReferenceIsComplete:
namesUsed
referenceTextForAutocompleteWithCalculationEngine:hostTableUID:preserveFlags:inputString:inputStringIsComplete:
referenceTextForAutocompleteWithCalculationEngine:contextSheetName:preserveFlags:inputString:inputStringIsComplete:
referenceTextWithCalculationEngine:contextSheetName:
stringByAppendingString:
initWithContextTableResolver:
setContextSheetName:
setFilterColons:
setAbortObject:
anyRef
p_parseComponentsOfReference:gettingSheetName:gettingTableName:gettingRest:
trimNames
whitespaceCharSet
stringByTrimmingCharactersInSet:
setSheetName:
setTableName:
setRest:
parseStringAsChromeReference:withParsingContext:
p_baseReferencesForChromeReferences:calcEngine:
p_baseRangeRefForChromeRangeRef:calcEngine:
resolverForTableUID:
parseR1C1Coord:containingCell:preserveFlagsOut:
rangeOfString:options:
hasSuffix:
setCharactersToBeSkipped:
scanInt:
isAtEnd
trimmedString
tableInfoForTableUID:withCalcEngine:
columnUIDForBaseColumnIndex:
viewColumnIndexForChromeColumnIndex:
columnUIDForColumnIndex:
wasQuoted
refPathSplitter
numComponents
aggregateFunction
aggregateTypeForAggregateLabel:
numWords
rangeOfString:options:range:
setAggregateFunction:
removeRefPathWordAtIndex:
p_findFirstColumnNameInComponent:tableName:refResolver:calcEngine:outPreserveFlags:usedWordCount:
objectLocale
setLocalizedBlankGroupName:
setLocalizedErrorGroupName:
setLocalizedTrueGroupName:
setLocalizedFalseGroupName:
columnIndexForColumnUID:
chromeColumnIndexForViewColumnIndex:
nameForChromeColumnIndex:inTable:useSymbolicNames:
setLocalizedTrueGroupNameForColumn:
setLocalizedFalseGroupNameForColumn:
groupNodeForGroupValueHierarchyFromSplitter:startAtComponent:startAtWord:preserveFlags:
initWithReferenceString:
setRefPathSplitter:
parseAsCategoryRefWithParsingContext:
p_parseAsCategoryRefWithSheet:tableName:columnNameAndGroupValuesStartAt:withParsingContext:
p_baseReferenceForChromeReference:calcEngine:
overrideText
overrideTextAsTyped
p_chromeReferenceForBaseReference:calcEngine:
baseTractRefForChromeTractRef:
boundingRangeRef
chromeTractRefForBaseTractRef:
parseStringAsBaseReference:withParsingContext:
parseR1C1Reference:containingCell:preserveFlagsOut:
parseStringAsCategoryRef:withParsingContext:
parseAsTractRefWithParsingContext:
setWhitespaceCharSet:
_stringManipulator
_calcEngine
_whitespaceCharSet
T@"NSCharacterSet",&,N,V_whitespaceCharSet
T@"TSCECalculationEngine",R,W,N,V_calcEngine
initWithBaseTableModel:
willModifyForUpgrade
tableStylePreset
theme
presetsOfKind:
presetID
setTableStylePreset:
enumerateObjectsUsingBlock:
makeStyleMapper
mapTableStylesToStylesheet:withMapper:
p_clearDefaultStyles
tableStyle
setTableStyle:
bodyCellStyle
setBodyCellStyle:
headerRowCellStyle
setHeaderRowCellStyle:
headerColumnCellStyle
setHeaderColumnCellStyle:
footerRowCellStyle
setFooterRowCellStyle:
categoryLevel1CellStyle
setCategoryLevel1CellStyle:
categoryLevel2CellStyle
setCategoryLevel2CellStyle:
categoryLevel3CellStyle
setCategoryLevel3CellStyle:
categoryLevel4CellStyle
setCategoryLevel4CellStyle:
categoryLevel5CellStyle
setCategoryLevel5CellStyle:
labelLevel1CellStyle
setLabelLevel1CellStyle:
labelLevel2CellStyle
setLabelLevel2CellStyle:
labelLevel3CellStyle
setLabelLevel3CellStyle:
labelLevel4CellStyle
setLabelLevel4CellStyle:
labelLevel5CellStyle
setLabelLevel5CellStyle:
bodyTextStyle
setBodyTextStyle:
headerRowTextStyle
setHeaderRowTextStyle:
headerColumnTextStyle
setHeaderColumnTextStyle:
footerRowTextStyle
setFooterRowTextStyle:
categoryLevel1TextStyle
setCategoryLevel1TextStyle:
categoryLevel2TextStyle
setCategoryLevel2TextStyle:
categoryLevel3TextStyle
setCategoryLevel3TextStyle:
categoryLevel4TextStyle
setCategoryLevel4TextStyle:
categoryLevel5TextStyle
setCategoryLevel5TextStyle:
labelLevel1TextStyle
setLabelLevel1TextStyle:
labelLevel2TextStyle
setLabelLevel2TextStyle:
labelLevel3TextStyle
setLabelLevel3TextStyle:
labelLevel4TextStyle
setLabelLevel4TextStyle:
labelLevel5TextStyle
setLabelLevel5TextStyle:
tableNameStyle
setTableNameStyle:
tableNameShapeStyle
setTableNameShapeStyle:
pivotBodySummaryRowCellStyle
setPivotBodySummaryRowCellStyle:
pivotBodySummaryColumnCellStyle
setPivotBodySummaryColumnCellStyle:
pivotHeaderColumnSummaryCellStyle
setPivotHeaderColumnSummaryCellStyle:
sharedPropertiesProvider
designModeEnabled
validateTableStylesInSameStylesheetExpectingDocSS:
initWithLocale:
sharedTableConfiguration
calculationEngine
initWithOwner:
setStorageParentToInfo:
unnamedTableString
tableNameEnabledInNewTables
initWithTableModel:
initWithBaseTable:
initWithTableInfo:baseTableUID:context:
initWithBaseTableUID:
initWithContext:ownerUID:
initWithRules:type:
styleNetwork
setStyleNetwork:
tableSizeClass
setShouldUseWideRows:
verifySubOwnerUIDsUsed
initWithContext:columnUIDs:rowUIDs:
initWithContext:tableUID:columnRowUIDMap:styles:stylePreset:tableInfo:
objectUUID
initWithContext:tableUUID:numberOfRows:numberOfColumns:
initWithContext:fromSourceModel:region:tableInfo:waitForCalcEngine:formulaCoordSpace:
regionByIntersectingRange:
networkFromStyleProvider:
blockUntilRecalcIsCompleteWithTimeout:
rowUIDsForRowRange:
columnUIDsForColumnRange:
initWithContext:rowUids:columnUids:styles:stylePreset:tableInfo:
fromTableUID
fromGroupByUID
repeatingHeaderRowsEnabled
repeatingHeaderColumnsEnabled
headerRowsFrozen
headerColumnsFrozen
tableNameEnabled
tableNameBorderEnabled
setTableNameBorderEnabled:
tableNameHeight
setTableNameHeight:
styleApplyClearsAll
setStyleApplyClearsAll:
defaultRowHeight
setDefaultRowHeight:
defaultColumnWidth
setDefaultColumnWidth:
heightOfRowAtIndex:isDefault:
setHeight:ofRowAtIndex:
widthOfColumnAtIndex:isDefault:
setWidth:ofColumnAtIndex:
sortOrder
mergeOwner
mergeRangesIntersectingBaseCellRegion:
tableAreaForBaseCellCoord:
insertBaseMergeRange:
pencilAnnotationOwner
formulaStore
rangeFromFormulaAtIndex:useBoundingRange:
pencilAnnotationStorage
copyWithContext:
initWithTableInfo:pencilAnnotationStorage:
addAnnotation:withAnchorRange:
enumerateAnnotationsAndFormulasContainedInRegion:withBlock:
dataStore
copyPasteboardCustomFormatsFromDataStore:
coordinateMapper
initForCategorizedTableBaseToChromeRewriterWithSrcTableUID:srcTract:dstTableUID:destTract:coordMapper:
cellID
cell
clearDataListIDs
hasFormulaSyntaxError
formulaSyntaxError
setFormulaSyntaxError:
hasRichText
richTextValue
setRichTextValue:
hasCommentStorage
commentStorage
setCommentStorage:
cellSpec
asChooserControlSpec
popupModel
startWithFirstItem
popupCellSpec:startWithFirstItem:
setCellSpec:
hasFormula
formulaObject
setFormulaObject:
hasConditionalStyle
conditionalStyle
conditionalStyleFormulaOwnerUID
copyByRewritingWithContext:rewriteBlock:
setConditionalStyle:
setCell:atCellID:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:doRichTextDOLC:
p_iterateDataStoreCellsInRegion:searchFlags:usingBlock:
strokeSidecar
setStroke:forTopOfRow:order:columnRange:
setStroke:forBottomOfRow:order:columnRange:
setStroke:forLeftOfColumn:order:rowRange:
setStroke:forRightOfColumn:order:rowRange:
enumerateStrokesInRegion:usingTopStrokeBlock:usingBottomStrokeBlock:usingLeftStrokeBlock:usingRightStrokeBlock:
flattenStrokeOrder
numberOfHeaderRows
rows
addRowRange:
removeRowRange:
isRecalculationStarted
recalculationIsPaused
columns
columnUIDsForColumnIndexes:
rowUIDsForRowIndexes:
initForUpgradeWithTableModel:
p_updateMergesAndCellsAsPivotDataWithSourceModel:sourceRegion:sourceBodyRegion:
setCalcEngine:
dropAllTargets
removeValueForProperty:
updateTableRowColumnStylesWithBlock:
replaceRowsWithUids:
replaceColumnsWithUids:
clearAllMergeRanges
updateCalcEngineForTableSize
conditionalStyleFormulaOwner
ownerUID
resetAlmostEverything
resetAllColumnRowSizes
isRegisteredWithCalcEngine
hiddenStatesOwner
clearAllFiltered
resetMergeCache
mergeRanges
cellUIDRangeForCellRange:
enumerateIndexesUsingBlock:
rowUIDForRowIndex:
rowIndexForRowUID:
distantFuture
distantPast
pairWithFirst:second:
indexSet
initWithTableModel:baseRegion:flags:searchFlags:
initWithContext:uidBased:
rockWithFirst:second:third:fourth:
first
currentFormat
currentFormatIsExplicit
setCurrentFormat:isExplicit:
boolValue
setBoolValue:
dateValue
setDateValue:
durationTimeIntervalValue
setDurationTimeIntervalValue:
numberDecimalValue
setNumberDecimalValue:
currencyDecimalValue
setCurrencyDecimalValue:
stringValue
setStringValue:
clear
addCell:andCellID:
second
objectAtIndexedSubscript:
earlierDate:
setFirst:
laterDate:
setSecond:
third
addIndex:
addIndexes:
enumerateModelConcurrentlyUsingChunkBeginBlock:concurrentBlock:finalBlock:
indexGreaterThanOrEqualToIndex:
indexSetWithIndexesInRange:
removeIndexes:
removeRowsAtBaseIndexes:
cellRangeForUIDRange:
enumerateCellsWithIDsUsingBlock:
filterSetUpdated
markOwnerAsDirty:
dateGroupingTypeForMinMaxDatePair:
initWithTableModel:baseRegion:flags:searchFlags:baseClampingRange:
iterateCellsUsingBlock:
isIdentityMapping
mappedIndexForSourceIndex:
appendCellMap:precopied:
timeIntervalSinceDate:
currentCalendar
components:fromDate:
month
isReadCancelled
insertNewRowsInIndexRange:
insertNewColumnsInIndexRange:
initWithDelegate:
cellMapWithContext:
inflateFromStorageRef:dataStore:suppressingTransmutation:
enumerateCellStoragesRowByRowToMaxID:getPreBNC:withBlock:
setCellsWithBaseCellMap:ignoreFormulas:skipDirtyingNonFormulaCells:
auditTilesForRowOverlapAndExtensionPastTableBounds:result:
logTableTileAuditStatus:withVersion:
p_auditTilesForRowOverlapAndExtensionPastTableBoundsWithVersion:
auditDatalistDuplicationReturningResult:
auditColumnRowCellCountsReturningResult:hasUndercounts:
confirmRefCountsReturningResult:
setUpgrading:
upgradeDataStoreCellStorageIfNeededWithTableUID:conditionalStyleOwner:
repairStyleDatalistStylesheetIfNecessary
p_auditTableHealthUpgradingFromVersion:
p_rebuildTheTable:
shouldUseWideRows
p_upgradeDefaultCellStylesForStrokeSidecar
indexesOfUserHiddenRowsInCellRange:
showRowAtIndex:forAction:
indexesOfUserHiddenColumnsInCellRange:
showColumnAtIndex:forAction:
upgradeConditionalStylesToLinkedRefWithTableUID:
archivingCompatibilityVersion
embiggenTableForUpgrade
viewCellRegionForBaseCellRect:
NRM_formulaOwnerUID
supportsControlCells
forceLoadHeaderStorages
baseCellCoordForViewCellCoord:
clearValue
willBeRemovedFromDocumentRoot:
wasRemovedFromDocumentRoot:
willBeAddedToDocumentRoot:dolcContext:
wasAddedToDocumentRoot:dolcContext:
hasMismatchedFormatAndValue
formatType
setNumberDoubleValue:
setDefaultFormatForValue
customFormat
clearFormatOfType:
processCustomFormatsWithBlock:
removeControlCellSpec
cellStyle
cellStyleForCellWithEmptyStyleAtBaseCellCoord:isDefault:
setCellStyle:
isVariation
parent
defaultCellStyleForBaseCellCoord:
variationOfStyle:propertyMap:
textStyle
textStyleForCellWithEmptyStyleAtBaseCellCoord:isDefault:
setTextStyle:
defaultTextStyleForBaseCellCoord:
addFunctionUsesInFormula:atCellRef:outContainsVolatileFunction:
copyByClearingUids:containingTableUID:
validateAndRepair
addCell:atViewCellCoord:
initWithContext:affectsCellBorders:
initWithTableInfo:region:flags:searchFlags:
initWithContext:viewCellRect:
appendCellLists:
enumerateConcurrentlyUsingChunkBeginBlock:concurrentBlock:finalBlock:
hasCells
convertToUuidBasedCellMapUsingTableInfo:pruneCategorizedCells:
willApplyToTable:
prepareToApplyConcurrentCellMap:
accumulateCurrentCellsConcurrently:
setCellsConcurrently:ignoreFormula:clearImportWarnings:formulaReplacer:
didApplyConcurrentCellMap:
validate
dirtyCellsUsingFunction:
generateCategoryStylesConnectedToStylesheet:
defaultCellStyleForTableStyleArea:
addStyle:withParent:identifier:shouldDoDOLC:
defaultTextStyleForTableStyleArea:
upgradeForNewAggregateTypes:
generatePivotStylesConnectedToStylesheet:
pivotOwner
upgradeSourceTractsForHostCellChange
upgradeSourceTractsForAbsoluteRefs
scheduleRepairingSpanningFormulasInOwner:
endTrackingNamesInTableForLegacyNRM:
fileFormatVersion
messageVersion
initWithArchive:unarchiver:owner:
tsp_stringWithProtobufString:
isFromCopy
isCrossAppPaste
initWithArchive:unarchiver:forBaseTable:
initWithTableModel:ownerUID:
initWithArchive:unarchiver:forTableModel:
initFromArchive:
initFromArchive:unarchiver:
initWithArchive:unarchiver:forBaseTableUID:
hasPreUFFVersion
nsTableUID
setTableModelDuringUnarchive:
unpackAfterUnarchive:
p_upgradeMerges
updateForTableSize:
tsp_isInDocument
saveToArchive:archiver:isInTheDocument:
setStrongReference:message:
presetNeedsStrongOwnership
tsp_protobufString
isForCopy
numberOfHiddenRows
numberOfUserHiddenRows
mutableFilteredRowIndexes
numberOfHiddenColumns
numberOfUserHiddenColumns
encodeToArchive:
encodeToArchive:archiver:
backwardCompatibleToPrePivot
requiresDocumentVersion:featureIdentifier:
hauntedOwner
filterSet
ruleCount
setIgnoreAndPreserveUntilModifiedRuleForFieldPath:message:
setMessageVersion:
requiresDocumentVersion:
bodyRange
setTableRange:bodyRange:forTableUID:
markIndirectCallsAsDirty
ownerKindForOwnerUID:
importSettings
summaryModel
aggregateFormulaOwnerUID
hiddenStateOwnerForRowsUID
hiddenStateOwnerForColumnsUID
initWithTableUID:pasteBoardTableUID:hiddenStateOwnerForRowsUID:hiddenStateOwnerForColumnsUID:conditionalStyleOwnerUID:sortRuleReferenceTrackerOwnerUID:mergeOwnerUID:pencilAnnotationOwnerUID:categoryAggregatesOwnerUID:groupByUID:
ownerUIDMapper
setToUpgradeMapping
needsSubOwnerIDUpgrade
verifySubOwnerUIDsUsed:
setToIdentityMapping
intValueForProperty:
valueForProperty:
metadataForRowIndex:hidingAction:uuid:
metadataForColumnIndex:hidingAction:uuid:defaultColumnWidth:
initWithKeyOptions:valueOptions:capacity:
sortOrderWithRules:type:
rules
updateForSortRules:
setBaseTableUID:
sortRuleReferenceTracker
aggregateFormulaOwner
stringFromNumber:
cellRangeForTableArea:givenTableSize:numberOfHeaderRows:numberOfFooterRows:numberOfHeaderColumns:
tableAreaForCellID:inTableWithHeaderColumns:headerRows:footerRows:totalRows:
numberOfHeaderColumns
actualHeaderColumnRange
topCornerRange
bottomCornerRange
tableStyleAreaForBaseCellCoord:
getDefaultCell:forTableStyleArea:
cellExistsAtCellID:
mightHaveCellBorderAtCellID:
cellBorderAtCellID:
setCellBorder:
hasContent
getCell:atBaseCellCoord:suppressCellBorder:
cellExistsAtBaseCellCoord:
getCell:atBaseCellCoord:
hasFormulaAtCellID:
isEmptyForDataStore
maxNumberOfPopulatedCells
numberOfPopulatedCells
hasMaxNumFormulas
p_shouldAllowSetCell:atBaseCellCoord:
cellWillChangeDistributor
willApplyCell:baseCellCoord:tableUID:
setCell:atCellID:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:
cellBorder
setCellBorder:atCellID:
setCell:atBaseCellCoord:ignoreFormula:clearImportWarnings:calcEngine:
formulaSyntaxErrorAtCellID:
formulaAtCellID:
formulaSpecAtCellID:
isUIDBased
p_shouldAllowApplyBaseCellMap:
startOfGroupingChangesBatch
willApplyBaseCellMap:tableUID:
setBordersWithCellMap:
setCellMap:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormulas:skipDirtyingNonFormulaCells:doRichTextDOLC:
endOfGroupingChangesBatch
cellWillBeModifiedInCurrentRecalcCycle:
currentFormatIsExplicitForCalcEngine
asDurationFormat
formatByFixingUnitsIfNecessaryForTimeInterval:
formatForCalcEngineAtCellID:formatIsExplicitOut:refIfAvailable:
useAutomaticUnits
cellStorageRefAtCellID:
valueTypeAtCellID:
textStyleAtModelCellCoord:isDefault:
numberOfComments
hasCommentAtBaseCellCoord:
commentHostingMap
initWithStorage:forTableInfo:baseCellCoord:
storage
commentStorageAtCellID:
commentHostingAtBaseCellCoord:forCommentStorage:
commentWillBeAddedToDocumentRoot
postCommentNotificationForStorage:baseCellCoord:notificationKey:
setCell:atBaseCellCoord:ignoreFormula:clearImportWarnings:
arrayWithObjects:count:
dictionaryWithObjects:forKeys:count:
defaultCenter
postNotificationName:object:userInfo:
clearCommentHostingMapForCommentStorage:
setCellStyle:ofRowAtIndex:
setTextStyle:ofRowAtIndex:
cellStyleOfRowAtIndex:
textStyleOfRowAtIndex:
setCellStyle:ofColumnAtIndex:
setTextStyle:ofColumnAtIndex:
cellStyleOfColumnAtIndex:
textStyleOfColumnAtIndex:
defaultCellStyleForBaseCellCoord:useSoftDefault:outSource:
defaultTextStyleForBaseCellCoord:useSoftDefault:outSource:
cellStyleAtCellID:
textStyleAtCellID:
defaultStylesOfRowAtIndex:outCellStyle:outTextStyle:
defaultStylesOfColumnAtIndex:outCellStyle:outTextStyle:
defaultStylesForTableStyleArea:outCellStyle:outTextStyle:
conditionalStyleSetAtCellID:
heightOfRowAtIndex:
widthOfColumnAtIndex:
numberWithDouble:
CGFloatValue
computeDefaultFontHeightForTableStyleArea:
topInset
bottomInset
p_tableSize
mergedRangeForBaseCellCoord:
maxNumberOfRows
insertRows:
insertRowsWithUIDs:atIndex:
insertNewRowsInBaseRange:
updateRowHeaderAtIndex:fromMetadata:
hidingAction
showBaseRowAtIndex:forAction:
hideBaseRowAtIndex:forAction:
rewriteMergesForInsertedRange:uids:isRows:
dirtyCellsForInsertionOfRows:forTable:tableRange:headerRange:
maxNumberOfColumns
insertColumns:
insertColumnsWithUIDs:atIndex:
insertNewColumnsInBaseRange:
updateColumnHeaderAtIndex:fromMetadata:
hideBaseColumnAtIndex:forAction:
setNumberOfHeaderColumns:
dirtyCellsForInsertionOfColumns:forTable:tableRange:headerRange:
setNumberOfHeaderRows:
setNumberOfFooterRows:
didAddRows:
dirtyCellsForRemovalOfRows:fromTable:tableRange:
removeFormulasFromRange:
removeFormulasInRange:
rewriteMergesForRemovedRange:uids:isRows:
deleteRowsFromBaseRange:rowUids:
removeRows:
removeRowsAtIndexes:
dirtyCellsForRemovalOfColumns:fromTable:tableRange:
deleteColumnsFromBaseRange:columnUids:
removeColumns:
removeColumnsAtIndexes:
removeRowsAtIndex:count:
enumerateRangesWithOptions:usingBlock:
removeColumnsAtIndex:count:
_removeAnnotationsFromDeleteRange:
enumerateRangesUsingBlock:
moveRowIndexRange:toIndex:
moveBaseRowRange:toRowIndex:
updateTrackedHeaders:
moveColumnIndexRange:toIndex:
moveBaseColumnRange:toColumnIndex:
swapRowAtIndex:withRowAtIndex:
swapBaseRowAtIndex:withRowAtIndex:
hidingStateOfRowAtIndex:
hidingStateOfColumnAtIndex:
lastArchivedAppVersion
headerInfo_hidingActionForRowAtIndex:
hideRowAtIndex:forAction:
headerInfo_hidingActionForColumnAtIndex:
hideColumnAtIndex:forAction:
needsToUpdateFilterSetForImport
setHidingState:ofRowAtIndex:
setHidingState:ofColumnAtIndex:
formattedValue
stringAtCellID:
hasMigratableStylesInCells
regionFromCellIDVector:
identityTranslator
columnNameForCellCoord:restrictToBodyRange:translator:cellRangeContainingName:
p_displayNameForColumnAtIndex:documentLocalized:derivation:
columnNameForCellID:restrictToBodyRange:
displayNameForColumnName:
displayNameForColumnAtIndex:derivation:
cellStyleOfRowAtIndex:isDefault:
maxOrder
strokeLayerForLeftSideOfColumn:
strokeLayerForRightSideOfColumn:
strokeLayerForTopOfRow:
strokeLayerForBottomOfRow:
tsceValueFromCell:atCellID:tableUID:
newCellValueFromTSCEValue:withLocale:
getValue:atBaseCellCoord:fetchRichTextAttributesIfPlainText:
getValue:atBaseCellCoord:fetchRichTextAttributesIfPlainText:skipPendingWrites:
tsceValueForCellStorageRef:cellCoord:hostTableUID:outValue:
nextTableUID
updateTableUIDFrom:toTableUID:
nextConditionalStyleOwnerUID
setOwnerUID:
nextMergeOwnerUID
nextPencilAnnotationOwnerUID
resetBaseOwnerUID
setFormulaOwnerUIDsWithMap:
ownerUIDMap
remapTableUIDsInFormulasWithMap:calcEngine:
isAPivotDataModel
nextCategoryAggregatesOwnerUID
setAggregateFormulaOwnerUID:
nextGroupByUID
setGroupByUid:
addReceiverToGroupBy:
containsForms
isTableLinkedToAForm:
tableUID:changedToTableUID:
platformSupportsForms
copyByRemappingHostCellAgnosticOwnerUIDs:calcEngine:containingCell:outError:
replaceFormulasUsingBlock:
copyByRemappingHostCellAgnosticOwnerUIDsWithMap:calcEngine:ownerUID:error:
replaceConditionalStyleSetsUsingBlock:
formulaID
copyByRemappingOwnerUIDs:calcEngine:containingCell:outBadRefFound:
bakeFormulaToValue
isEqualToFormula:
conditionalStyleID
copyByRemappingOwnerUIDsWithMap:calcEngine:error:
setConditionalStyleAppliedRule:
remapTableUIDsInFormulasWithMap:
updateCustomFormatsAtKey:
cellMapForAddingPasteboardCustomFormats
mapReassigningPasteboardCustomFormatKeys:
beginBatchingGroupCellDirtying
currentTransaction
isSkippingRepairBadRefsForOwnerUID:
duringRollback
tableUIDHistory
hasBadRefWithUidInfo
supportsCategorization
supportsPivotTables
copyByConvertingColonTractToColon:breakUpIntoRefs:
const_astNodeArray
hasFormulaEvaluationError
copyByRepairingBadReferences:
asFormulaSpec
updateCalculationEngineForFormula:inBaseCellCoord:usingCalcEngine:
copyByMakingAllCategoryRefsIndirect:containingCell:
iterateFormulasWithContext:block:
replaceFormulaForConditionalStyle:atCellID:
coordFromIndex:
referenceSet
getPrecedents:calcEngine:hostCell:doImplicitIntersection:returnUidReferences:
enumerateMergeFormulasUsingBlock:
endBatchingGroupCellDirtying
containsFormulas
numberOfConditionalStyles
initForCategorizedTableChromeToBaseRewriterWithSrcTableUID:srcTract:dstTableUID:destTract:coordMapper:srcCoordMapper:fromTableUID:
setConditionalStyleOwnerUID:
cellHasFormula
formulaCoordSpace
cellHasConditionalStyle
setFormulaCoordSpace:
allCellCoords
clearErrorForCells:
mappedStyleForStyle:
supportsBidiTablesUI
setIntValue:forProperty:
networkWithContext:presetID:styleProvider:styleMorphingBlock:
updateHeaderStorageStylesWithBlock:
supportsInlineAttachments
adoptStylesheet:withMapper:supportsInlineAttachments:
assertListTilesAndRows
isAncestorOf:
enumerateAllStylesWithBlock:
annotationsContainedByRegion:
removeAnnotations:
upgradeCellFormatsU2_0
networkFromTheme:presetID:
textStyleForTableStyleArea:
enumerateWithAttributeKind:inRange:usingBlock:
defaultFormatWithFormatType:locale:
copyToCell:
rangeForCellID:includingBreak:
newSubstorageWithRange:context:flags:kind:
paragraphStyleAtCharIndex:effectiveRange:
mergedRects
insertBaseMergeRangeRemovingOverlaps:
containsImportWarnings
containsControlCellSpecs
allRichTextStorages
tableNameBorderStroke
initWithTableInfo:tableModel:region:flags:searchFlags:clampingRange:
getNextCellData:
hasEqualContentToCell:
terminate
hasAlternatingRows
initWithContext:fromSourceModel:region:tableInfo:waitForCalcEngine:
setTableNameEnabled:
initWithModel:region:flags:searchMask:
auditRowInfoCellCountsReturningResult:
affectsCellBorders
accumulateCellBordersConcurrentlyInRow:atColumns:
accumulateCurrentCellsConcurrentlyInRow:rowInfo:atColumns:usingCellCreationBlock:
accumulateBordersConcurrentlyUsingBlock:accumulateCellsConcurrentlyUsingBlock:
containsUidReferences
copyToGeometricFormWithRewriteContext:
copyByConvertingToRelativeAncestorsWithRewriteContext:
enumerateCellsAddedAndRemovedOfType:withOptions:usingBlock:
copyByRewritingReferencesToGeometricForm:
updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:
upgradingFormulasMinion
setCellsConcurrently:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:
willApplyConcurrentCellMap:tableUID:
needsObjectUUID
mixingTypeWithObject:context:
mixedObjectWithFraction:ofObject:
mixedBaseObjectWithObject:
canMixWithNilObjects
mixableObjectClasses
T@"TSTTableStyle",&,N
T@"TSTCellStyle",&,N
T@"TSWPParagraphStyle",&,N
T@"TSWPShapeStyle",&,N
defaultHorizontalBorderStroke
defaultHorizontalBorderStrokeEvenIfNotVisible
defaultVerticalBorderStroke
bodyColumnStroke
bodyRowStroke
bodyRowStrokeEvenIfNotVisible
headerColumnBorderStroke
headerColumnBodyColumnStroke
headerColumnBodyRowStroke
headerColumnSeparatorStroke
headerRowBorderStroke
headerRowBodyColumnStroke
headerRowBodyRowStroke
headerRowSeparatorStroke
footerRowBorderStroke
footerRowBodyColumnStroke
footerRowBodyRowStroke
footerRowSeparatorStroke
categoryLevel1TopStroke
categoryLevel2TopStroke
categoryLevel3TopStroke
categoryLevel4TopStroke
categoryLevel5TopStroke
categoryLevel1LabelSeparatorStroke
categoryLevel2LabelSeparatorStroke
categoryLevel3LabelSeparatorStroke
categoryLevel4LabelSeparatorStroke
categoryLevel5LabelSeparatorStroke
categoryLevel1BottomStroke
categoryLevel2BottomStroke
categoryLevel3BottomStroke
categoryLevel4BottomStroke
categoryLevel5BottomStroke
categoryLevel1InteriorStroke
categoryLevel2InteriorStroke
categoryLevel3InteriorStroke
categoryLevel4InteriorStroke
categoryLevel5InteriorStroke
bodyPivotGroupHorizontalStroke
bodyPivotGroupVerticalStroke
bodyPivotDeEmphasisHorizontalStroke
bodyPivotEmphasisVerticalStroke
headerColumnPivotGroupHorizontalStroke
headerColumnPivotGroupDeEmphasisStroke
headerColumnPivotSeparatorStroke
headerRowPivotGroupVerticalStroke
headerRowPivotGroupDeEmphasisStroke
headerRowPivotTitleStroke
footerRowPivotGroupVerticalStroke
T@"TSDStroke",R,N
enumerateCellsForSOSSerializationWithBlock:
T{TSUModelRowIndex=I},R,N
T{TSUModelColumnIndex=S},R,N
setStrokeSidecar:
willClose
documentLocaleDidChange
setStylesheetForUpgradeToSingleStylesheet:
initWithContext:rows:columns:styles:stylePreset:tableInfo:
initAsPivotDataWithContext:tableInfo:sourceModel:sourceBody:sourceHeader:
resetForPivotingWithRowUids:columnUids:numberOfHeaderRows:numberOfHeaderColumns:
updateMergesAndCellsAsPivotDataWithSourceModel:
hasUsefulPivotDataInSourceBodyTract:
copyPivotDetailDataFromSourceModel:inSourceRegion:columnMapping:rowMapping:
pivotDataCellValueTypeForColumn:
upgradeDuringDocumentUpgradeIfNeeded:tableInfo:
setPresetNeedsStrongOwnership:
setRepeatingHeaderRowsEnabled:
setRepeatingHeaderColumnsEnabled:
setHeaderRowsFrozen:
setHeaderColumnsFrozen:
setIsAPivotDataModel:
createPivotOwner
clearPivotOwner
numberOfFooterRows
setlabelLevel1CellStyle:
setlabelLevel2CellStyle:
setlabelLevel3CellStyle:
setlabelLevel4CellStyle:
setlabelLevel5CellStyle:
setlabelLevel1TextStyle:
setlabelLevel2TextStyle:
setlabelLevel3TextStyle:
setlabelLevel4TextStyle:
setlabelLevel5TextStyle:
setColumnRowUIDMap:
setTextImportRecord:
upgradeToSubOwnerUIDMapper
identityOwnerUIDMapper
hasTableBorder
tableWritingDirection
metadataForRowIndex:hidingAction:
metadataForColumnIndex:hidingAction:
setSortOrder:
resetSortRuleReferenceTrackerForInsert
setFromTableUID:
clearFromTableUID
setFromGroupByUID:
clearFromGroupByUID
wasCut
setWasCut:
setIsRegisteredWithCalcEngine:
cellRangeForTableArea:
tableAreaForRow:
tableAreaForColumn:
tableStyleAreaForRow:
tableAreasForBaseCellRect:
getDefaultCell:forBaseCellCoord:
cellAtBaseCellCoord:
hasFormulaAtBaseCellCoord:
formulaSyntaxErrorAtBaseCellCoord:
formulaAtBaseCellCoord:
formulaSpecAtBaseCellCoord:
formatForCalcEngineAtBaseCellCoord:formatIsExplicitOut:
cellValueTypeAtBaseCellCoord:
textStyleForCalcEngineAtBaseCellCoord:isDefault:
hasCommentStorageAtBaseCellCoord:
commentHostingAtBaseCellCoord:
setCommentStorage:atBaseCellCoord:
removeCommentStorageAtBaseCellCoord:
textStyleOfRowAtIndex:isDefault:
cellStyleOfColumnAtIndex:isDefault:
textStyleOfColumnAtIndex:isDefault:
cellStyleAtModelCellCoord:isDefault:
defaultStylesAtBaseCellCoord:useSoftDefault:outCellStyle:outTextStyle:
conditionalStyleSetAtBaseCellCoord:
setHeight:ofRow:
setWidth:ofColumn:
rowHeights
columnWidths
setColumnWidths:
setRowHeights:
computeDefaultRowHeight
hasNamesInHeaders
insertRowsInBaseRange:uids:metadata:unsetFilterHidingAction:
insertColumnsAtIndex:uids:metadatas:tableArea:
insertRowsAtIndex:uids:metadatas:tableArea:unsetFilterHidingAction:
removeColumnsAtBaseIndexes:
removeAnnotationsFromRowsAtBaseIndexes:
removeAnnotationsFromColumnsAtBaseIndexes:
upgradeHiddenStates
upgradeHiddenFormulaOwnerForColumnsUID
upgradeHiddenFormulaOwnerForRowsUID
upgradeNeedsToUpdateFilterSetForImport
hiddenStateFormulaOwnerForRows
hiddenStateFormulaOwnerForColumns
setHidingState:atRowIndex:
setHidingState:atColumnIndex:
stringAtBaseCellCoord:optionalCell:
regionForValueOrCommentCellsInBaseCellRect:
documentLocalizedDisplayNameForColumnAtIndex:
displayNameForColumnAtIndex:
fillForRow:
maxStrokeOrder
setStroke:forTopOfRow:order:
setStroke:forBottomOfRow:order:
setStroke:forLeftOfColumn:order:
setStroke:forRightOfColumn:order:
cellValueFromCell:atBaseCellCoord:
cellValueAtBaseCellCoord:
setFormulaOwnerUIDsWithMap:shouldStealReferences:
remapTableUIDsInFormulasWithMap:calcEngine:bakeForBadRefs:
addPasteboardCustomFormatsToDocumentAndUpdateCells
copyPasteboardCustomFormatsFromTableModel:
registerAllFormulasWithCalculationEngine:wasCrossDocumentPaste:infoIsCategorized:wasUndo:
prepareForPasteWithCalculationEngine:sourceOffset:bakeFormulas:
hasFormulas
cellsModifiedInCurrentRecalcCycle
addCellRefToClearError:
clearErrors
adoptStylesheet:withMapper:
allDataAsString
assertCollaborationConvergence
upgradeFormatsForCustomFormatListU2_0
upgradeFromPreUFF
hasImportWarnings
hasControls
baseCellCoordForCellContainingRichTextStorage:
shouldAllowApplyConcurrentCellMap:
setDataStore:
localOwnerID
setLocalOwnerID:
presetIDForUpgrade
setPresetIDForUpgrade:
cellsPendingWrite
cellsToInvalidateAfterRecalc
cellsToInvalidateNonoverflowingAfterRecalc
setConditionalStyleFormulaOwner:
deprecatedProvider
setDeprecatedProvider:
wasUnarchivedFromAProvidedTable
setWasUnarchivedFromAProvidedTable:
textImportRecord
prePivotRowFilterSet
setPrePivotRowFilterSet:
pivotValueTypesByColumn
pivotDateGroupingTypesByColumn
_hiddenStateFormulaOwnerForRows
_hiddenStateFormulaOwnerForColumns
_strokeSidecar
_clearErrorCells
_clearErrorLock
_pivotValueTypesByColumn
_pivotDateGroupingTypesByColumn
_isRegisteredWithCalcEngine
_wasCut
_headerRowsFrozen
_headerColumnsFrozen
_tableNameEnabled
_tableNameBorderEnabled
_repeatingHeaderRowsEnabled
_repeatingHeaderColumnsEnabled
_styleApplyClearsAll
_presetNeedsStrongOwnership
_wasUnarchivedFromAProvidedTable
_isAPivotDataModel
_localOwnerID
_numberOfHeaderColumns
_numberOfHeaderRows
_numberOfFooterRows
_lastArchivedAppVersion
_archivingCompatibilityVersion
_dataStore
_defaultRowHeight
_defaultColumnWidth
_tableName
_tableNameHeight
_presetIDForUpgrade
_tableStylePreset
_tableStyle
_identityTranslator
_bodyCellStyle
_headerRowCellStyle
_headerColumnCellStyle
_footerRowCellStyle
_categoryLevel1CellStyle
_categoryLevel2CellStyle
_categoryLevel3CellStyle
_categoryLevel4CellStyle
_categoryLevel5CellStyle
_labelLevel1CellStyle
_labelLevel2CellStyle
_labelLevel3CellStyle
_labelLevel4CellStyle
_labelLevel5CellStyle
_bodyTextStyle
_headerRowTextStyle
_headerColumnTextStyle
_footerRowTextStyle
_categoryLevel1TextStyle
_categoryLevel2TextStyle
_categoryLevel3TextStyle
_categoryLevel4TextStyle
_categoryLevel5TextStyle
_labelLevel1TextStyle
_labelLevel2TextStyle
_labelLevel3TextStyle
_labelLevel4TextStyle
_labelLevel5TextStyle
_tableNameStyle
_tableNameShapeStyle
_pivotBodySummaryRowCellStyle
_pivotBodySummaryColumnCellStyle
_pivotHeaderColumnSummaryCellStyle
_cellsPendingWrite
_cellsToInvalidateAfterRecalc
_cellsToInvalidateNonoverflowingAfterRecalc
_conditionalStyleFormulaOwner
_mergeOwner
_categoryOwner
_pivotOwner
_hiddenStatesOwner
_hauntedOwner
_sortOrder
_sortRuleReferenceTracker
_columnRowUIDMap
_cellWillChangeDistributor
_deprecatedProvider
_commentHostingMap
_textImportRecord
_prePivotRowFilterSet
_pencilAnnotationOwner
_tableUID
_fromTableUID
_fromGroupByUID
T@"TSTColumnRowUIDMap",&,N,V_columnRowUIDMap
T@"TSTTableDataStore",&,N,V_dataStore
TQ,N,V_presetIDForUpgrade
T@"TSTConditionalStyleFormulaOwner",&,N,V_conditionalStyleFormulaOwner
T@"TSWPStorage",&,N,V_deprecatedProvider
T@"NSMapTable",R,N,V_commentHostingMap
TQ,R,N,V_lastArchivedAppVersion
T^v,R,N,V_pivotValueTypesByColumn
T^v,R,N,V_pivotDateGroupingTypesByColumn
T@"TSTTableInfo",N,V_tableInfo
T@"TSTTableTranslator",R,N,V_identityTranslator
TB,N,V_isAPivotDataModel
T{TSKUIDStruct=QQ},R,N
T@"TSTTableFilterSet",&,N,V_prePivotRowFilterSet
T@"TSCECalculationEngine",N,V_calcEngine
TB,N,V_wasCut
T{TSKUIDStruct=QQ},N,V_tableUID
T{TSKUIDStruct=QQ},N,V_fromTableUID
T{TSKUIDStruct=QQ},N,V_fromGroupByUID
TS,N,V_localOwnerID
T@"TSTOwnerUidMapper",R,N
T@"NSUUID",R,N
T@"NSString",&,N,V_tableName
TB,N,V_tableNameEnabled
Td,N,V_tableNameHeight
TB,N,V_tableNameBorderEnabled
TB,N,V_repeatingHeaderRowsEnabled
TB,N,V_repeatingHeaderColumnsEnabled
Ti,R,N
T{TSUModelRowIndex=I},N,V_numberOfHeaderRows
T{TSUModelRowIndex=I},N,V_numberOfFooterRows
T{TSUModelColumnIndex=S},N,V_numberOfHeaderColumns
TB,N,V_headerRowsFrozen
TB,N,V_headerColumnsFrozen
TB,N,V_styleApplyClearsAll
T@"TSTTableStylePreset",&,N,V_tableStylePreset
T@"TSTSortRuleReferenceTracker",R,N,V_sortRuleReferenceTracker
T@"TSTMergeOwner",R,N,V_mergeOwner
T@"TSTCategoryOwner",R,N,V_categoryOwner
T@"TSTHiddenStatesOwner",R,N,V_hiddenStatesOwner
T@"TSTPencilAnnotationOwner",R,N,V_pencilAnnotationOwner
T@"TSTPivotOwner",R,N,V_pivotOwner
T@"TSCEHauntedOwner",R,N,V_hauntedOwner
T@"TSTCellDictionary",R,N,V_cellsPendingWrite
T@"TSTConcurrentMutableCellUIDSet",R,N,V_cellsToInvalidateAfterRecalc
T@"TSTConcurrentMutableCellUIDSet",R,N,V_cellsToInvalidateNonoverflowingAfterRecalc
T@"TSTTableSortOrder",C,N,V_sortOrder
T@"TSTStrokeSidecar",&,N
T@"TSTCellWillChangeDistributor",R,N,V_cellWillChangeDistributor
TB,N,V_presetNeedsStrongOwnership
TB,N,V_wasUnarchivedFromAProvidedTable
T@"TSTStructuredTextImportRecord",&,N,V_textImportRecord
TB,N
Td,N,V_defaultRowHeight
Td,N,V_defaultColumnWidth
T@"NSArray",R,N
TQ,R,N,V_archivingCompatibilityVersion
T@"TSTTableStyle",&,N,V_tableStyle
T@"TSTCellStyle",&,N,V_bodyCellStyle
T@"TSTCellStyle",&,N,V_headerRowCellStyle
T@"TSTCellStyle",&,N,V_headerColumnCellStyle
T@"TSTCellStyle",&,N,V_footerRowCellStyle
T@"TSTCellStyle",&,N,V_categoryLevel1CellStyle
T@"TSTCellStyle",&,N,V_categoryLevel2CellStyle
T@"TSTCellStyle",&,N,V_categoryLevel3CellStyle
T@"TSTCellStyle",&,N,V_categoryLevel4CellStyle
T@"TSTCellStyle",&,N,V_categoryLevel5CellStyle
T@"TSTCellStyle",&,N,V_labelLevel1CellStyle
T@"TSTCellStyle",&,N,V_labelLevel2CellStyle
T@"TSTCellStyle",&,N,V_labelLevel3CellStyle
T@"TSTCellStyle",&,N,V_labelLevel4CellStyle
T@"TSTCellStyle",&,N,V_labelLevel5CellStyle
T@"TSWPParagraphStyle",&,N,V_bodyTextStyle
T@"TSWPParagraphStyle",&,N,V_headerRowTextStyle
T@"TSWPParagraphStyle",&,N,V_headerColumnTextStyle
T@"TSWPParagraphStyle",&,N,V_footerRowTextStyle
T@"TSWPParagraphStyle",&,N,V_categoryLevel1TextStyle
T@"TSWPParagraphStyle",&,N,V_categoryLevel2TextStyle
T@"TSWPParagraphStyle",&,N,V_categoryLevel3TextStyle
T@"TSWPParagraphStyle",&,N,V_categoryLevel4TextStyle
T@"TSWPParagraphStyle",&,N,V_categoryLevel5TextStyle
T@"TSWPParagraphStyle",&,N,V_labelLevel1TextStyle
T@"TSWPParagraphStyle",&,N,V_labelLevel2TextStyle
T@"TSWPParagraphStyle",&,N,V_labelLevel3TextStyle
T@"TSWPParagraphStyle",&,N,V_labelLevel4TextStyle
T@"TSWPParagraphStyle",&,N,V_labelLevel5TextStyle
T@"TSWPParagraphStyle",&,N,V_tableNameStyle
T@"TSWPShapeStyle",&,N,V_tableNameShapeStyle
T@"TSTCellStyle",&,N,V_pivotBodySummaryRowCellStyle
T@"TSTCellStyle",&,N,V_pivotBodySummaryColumnCellStyle
T@"TSTCellStyle",&,N,V_pivotHeaderColumnSummaryCellStyle
readReferenceMessage:class:protocol:completion:
setCell:
setFormulaSpec:
setMergeRange:
setCellID:
hasAnyCustomFormat
formulaSpec
mergeRange
cellValueType
cellHasCustomFormat
cellHasCommentStorage
cellIsEmpty
T@"TSTCell",R,N
T@"TSTCellFormulaSpec",R,N
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},R,N
TC,R,N
cellIDIsValid
setCellIDIsValid:
cellIsValid
setCellIsValid:
formulaSpecIsValid
setFormulaSpecIsValid:
mergeRangeIsValid
setMergeRangeIsValid:
_cellIDIsValid
_cellIsValid
_formulaSpecIsValid
_mergeRangeIsValid
_cellID
_cell
_formulaSpec
_mergeRange
TB,N,V_cellIDIsValid
TB,N,V_cellIsValid
TB,N,V_formulaSpecIsValid
TB,N,V_mergeRangeIsValid
T{TSUCellCoord=ISBB},N,V_cellID
T@"TSTCell",&,N,V_cell
T@"TSTCellFormulaSpec",&,N,V_formulaSpec
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_mergeRange
pointerAtIndex:
enumerateRowsWithBlock:
maxColumnIndex
enumerateRowsAndIndexesWithBlock:
strongObjectsPointerArray
initWithRows:shouldUseWideRows:context:
bncStorageBufferExists
maxRow
setCount:
setTileRowIndex:
replacePointerAtIndex:withPointer:
p_pruneRowCount
rowInfoFromArchive:
tileRowIndex
rowInfoForTileRowIndex:
_setRowInfo:atTileRowIndex:
usesWideOffsets
willModifyForUpgradeWithOptions:
convertToWideOffsets
numRows
populatedRows
rowInfoWithTileRowIndex:wideOffsets:
cellStorageRefAtIndex:
preBNCStorageRefAtIndex:
findOrAddRowInfoAtTileRowIndex:
setCell:atIndex:formatKeys:
_removeRowInfo:atTileRowIndex:
insertColumnsAtIndex:count:
setInt:forKey:
pruneEmptyRows
moveColumnsFromIndex:toIndex:count:
_removeRowsAtTileRowIndex:numberOfRows:shiftingContent:
yankRowsAtTileRowIndex:count:
shiftUpAtTileRowIndex:count:
tsu_enumerateNonNullObjectUsingBlock:
maxColumn
initWithRows:context:
packageLocator
lastSavedInBNC
rowInfoAtOrAfterTileRowIndex:outTileRowIndex:
cellStorageRefAtColumnIndex:tileRowIndex:
preBNCCellStorageRefAtColumnIndex:tileRowIndex:
setCell:atColumnIndex:tileRowIndex:formatKeys:
insertColumnsAtColumnIndex:numberOfColumns:
removeColumnsAtColumnIndex:numberOfColumns:
moveColumnsAtColumnIndex:numberOfColumns:toDestColumnIndex:
insertRowsAtTileRowIndex:numberOfRows:
clearRowsAtTileRowIndex:numberOfRows:
shiftUpAndYankBy:
yankRowInfoAtTileRowIndex:
yankRowsAtTileRowIndex:
spliceRowInfo:atTileRowIndex:overwrite:
spliceRows:atTileRowIndex:
swapRowAtTileRowIndex:withRowAtTileRowIndex:
widenAllRowsForUpgrade
assertListRows
setLastSavedInBNC:
rowInfos
setRowInfos:
_storageVersion
_lastSavedInBNC
_shouldUseWideRows
_pruningCount
_rowInfos
T@"NSPointerArray",&,N,V_rowInfos
TS,R,N
T@"NSIndexSet",R,N
TB,N,V_lastSavedInBNC
excludedUidsTract
rowColumnInfo
isRows
rowUids
columnUids
affectedOwnerUID
mutableIndexesForUIDs:isRows:
rowOrColumnUuids
UIDForIndex:isRows:
removeFromExcludedUidsTractRowUidsSet:
removeFromExcludedUidsTractColumnUidsSet:
initWithAbsoluteTractRef:hostCell:
hasTableUID
absoluteCellTractRefForHostCell:
topLeft
bottomRight
setTopLeft:
setBottomRight:
hasWorkItems
addFittingHeight:forCellID:
addFittingWidth:forCellID:
enumerateFittingHeightsUsingBlock:
enumerateFittingWidthsUsingBlock:
_fittingHeights
_columnToMaxFittingWidths
initWithDateValue:locale:
isEqualToDate:
compare:
formatFromArchive:
dateWithTimeIntervalSinceReferenceDate:
timeIntervalSinceReferenceDate
format
encodeToArchive:archivingCustomFormats:
initWithDate:locale:
isEqualToCellValue:
compareToCellValue:
initWithArchive:locale:
setPopulatedCustomFormat:
_dateValue
legalRangeControlMinimum:maximum:increment:
initWithInteractionType:minimum:maximum:increment:
minimum
maximum
increment
numberValueFromString:locale:outDoubleValue:
recomputedValueFromValue:changed:
getCurrentFormat
numberOrCurrencyDecimalValue
asStepperSliderFormat
displayFormatType
defaultRangeControlSpecOfType:
initWithFormatType:minimum:maximum:increment:displayFormatType:
defaultCellValueForInteractionType:
stepperSpecWithMinimum:maximum:increment:
sliderSpecWithMinimum:maximum:increment:
cellSpecFromTSKFormat:
instanceWithArchive:unarchiver:
asRangeControlSpec
valueFromString:locale:
validateFormatAndValue:
tskStepperSliderFormatWithDisplayFormatType:
legacyDisplayFormatType
_interactionType
_legacyDisplayFormatType
_minimum
_maximum
_increment
Td,R,N,V_minimum
Td,R,N,V_maximum
Td,R,N,V_increment
TI,R,N,V_legacyDisplayFormatType
regionMovedInfo
originalSrcTableUID
srcTableUID
tableOrLinkedResolverForTableUID:
relativeGroupUid
setAsAbsoluteWithGroupUid:
flattenedCellRefForCategoryRef:calcEngine:
categoryRefsForSpanningCategoryRef:
initWithCellRefVector:
setPreserveRectangular:
dstTableUID
setAsRelativeWithGroupUid:
srcColumnUids
srcRowUids
chromeCellCoordForBaseCellCoord:
baseCellCoordForChromeCellCoord:
spanningRows
spanningColumns
originalSrcColumnUids
originalSrcRowUids
dstColumnUids
dstRowUids
updatedCellRefForOriginalCellRef:
uidForIndex:
initWithColumnUid:rowUid:purpose:
isInverse
preMoveRegionUidTract
dropTract:
dstUidForSrcUid:
columnIndexForUid:
rowIndexForUid:
chromeCellRefForBaseCellRef:
dstUidForSrcUid
remapUsingUidMap:
appendUidTract:
srcCondStyleOwnerUID
originalSrcCondStyleOwnerUID
initWithGroupByUID:relGroupUID:absGroupUid:columnUid:aggType:groupLevel:aggrIndexLevel:preserveFlags:
initWithColumnUids:rowUids:purpose:
setIsRangeRef:
adjustIndexesBy:
viewTractRefForChromeTractRef:
setRows:
receivers
didAddTableName:forTableUID:
distributeBlock:
didRemoveTableName:forTableUID:
didChangeTableName:fromTableName:forTableUID:
protocol
addCellCoordinate:
cellCoordinates
cellCoordinatesSet
removeAllCellCoordinates
saveToArchive:
_cellCoordinates
_sem
argSpecWithType:accessorMode:rangeContext:
specWithFunctionName:minArgs:maxArgs:repeatingGroupSize:isOperator:shipVersion:arguments:functionIndex:
argSpecWithType:accessorMode:rangeContext:minValue:minInclusive:maxValue:maxInclusive:disallowedTypes:disallowDuration:disallowCurrency:
argSpecWithType:accessorMode:rangeContext:argumentContext:minValue:minInclusive:maxValue:maxInclusive:isInteger:disallowedTypes:disallowDuration:disallowCurrency:modeValues:defaultModeIndex:referenceForGeometryOnly:forceArrayMode:
argSpecWithType:accessorMode:rangeContext:disallowedTypes:disallowDuration:disallowCurrency:
argSpecWithType:accessorMode:rangeContext:modeValues:defaultModeIndex:
argSpecWithType:accessorMode:rangeContext:argumentContext:
argSpecWithType:accessorMode:rangeContext:argumentContext:disallowedTypes:referenceForGeometryOnly:
functionSpecList
initWithTopLeft:bottomRight:tableUID:
initWithColumns:rows:tableUID:
mutableColumnIndexesForUIDs:
mutableRowIndexesForUIDs:
activeUidTract
isRangeRef
initWithUUIDVector:
preserveRectangularRange
includedUidsTract
addUuidsFromVector:
isAllInvalid
removeAllUuids
isInCollaborationMode
edgeExpandTractUsingIncludeUidTract:resolver:forRows:isInverse:
isSingleCellOrSpanningRange
addUuidsFromSet:
addToIncludedUidsTractColumnUids:rowUids:
cppCellTractRef
spansAllColumns
spansAllRows
boundingRange
setPreserveFlagsOnSubrange:
foreachCellRect:
expandUsingIndexes:forRows:
edgeExpandUsingIndexes:forRows:
UIDSetForIndexes:isRows:
reducedSetMinusUuidsFromVector:
addToIncludedUidsTractColumnUids:rowUids:isRangeRef:preserveRectangularRange:
removedByMoveUidTract
rowOrColumnUids
indexes
uuidsForIndexes:
indexLessThanIndex:
enumerateRangesInRange:options:usingBlock:
indexGreaterThanIndex:
addColumnRange:
cellTractRefWithUidTractList:onTable:preserveFlags:rewriteContext:
initWithCppCellTractRef:
initWithTopLeft:bottomRight:
initWithUidTract:calcEngine:tableUID:
setSpansAllColumns:
setSpansAllRows:
preserveRectangular
mixedColumnStartedWithPreserve
setMixedColumnStartedWithPreserve:
mixedRowStartedWithPreserve
setMixedRowStartedWithPreserve:
numColumns
isSingleCell
isRectangularRange
isPreservedColumn:preferStart:
isPreservedRow:preferStart:
preserveFlagsForCoord:preferStart:
addColumn:
addRow:
addColumns:
addRows:
removeColumnRange:
setColumns:
uidTractWithCalcEngine:hostTableUID:
intersectWithCellRect:
intersectWithCellRectIgnoringSpanning:
coordAtColumnOffset:rowOffset:
foreachAnyRef:
foreachRangeRef:
transpose
insertColumnGapsAtIndexes:
insertRowGapsAtIndexes:
collapseOutColumnIndexes:
collapseOutRowIndexes:
fillInColumnGapsUsingIndexes:
fillInRowGapsUsingIndexes:
edgeExpandUsingMovingUids:tractList:
setCppCellTractRef:
_cppCellTractRef
T{TSCECellTractRefCore={TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSKUIDStruct=QQ}C{TSUPreserveFlags=C}BBB},N,V_cppCellTractRef
T{TSKUIDStruct=QQ},N
T{TSUPreserveFlags=C},N
conditionalStyleOwnerUID
transposedInfo
transposedBodyRange
initWithContext:geometry:
tableModelClass
initWithTableInfo:
groupByByUid:
initWithGroupings:categoryOwner:
linkGroupBy:
initWithHiddenStatesOwner:
p_updateStorageParentInfoForModels
setupReceiver
setTableModel:
initWithInfo:
size
p_initializeDefaultHeight:andWidth:
initWithContext:geometry:rows:columns:stylePreset:styles:
presetOfKind:index:
initWithPosition:size:
networkWithContext:presetID:colors:alternate:
geometry
initPivotTableWithContext:sourceTableInfo:sourceBodyRange:sourceHeaderRowRange:optionalDataModel:
baseTractRefForViewTractRef:
networkForPivotTables
pivotTableNameForSourceTable:
exteriorTextWrap
setExteriorTextWrap:
setCategoryColumnWidth:
setPivotSourceTableUID:
setPivotSourceTableName:
setPivotDataRefreshUID:
setPivotDataRefreshTimestamp:
setPivotSourceBodyTract:
setPivotSourceHeaderTract:
initWithColumnAggregates:
applyPivotWithColumns:rows:aggregates:flatteningDimension:optionsMap:pivotRowColumnRuleChangeUid:pivotAggregateRuleChangeUid:
resetCellsForNewPivotRules
commitPivotChanges
initPivotTableWithContext:sourceTableInfo:sourceBodyRange:sourceHeaderRowRange:
pivotDataModel
groupBySet
pivotDataModelRowIndexesNeededForCell:
hiddenRowIndexes
contentWritingDirection
setContentWritingDirection:
initAsCompressionMapForIndexes:
pivotDetailTableNameFromSourcePivotTableInfo:pivotSourceCell:
_initWithContext:flatteningFromComplexInfo:cellRegion:waitForCalcEngine:flatteningOptions:isSnapshot:
logFullBacktrace
_initWithContext:fromSourceInfo:cellRegion:tableModel:waitForCalcEngine:formulaCoordSpace:
expandCellRegionToCoverMergedCells:
flatteningDimension
aggregates
baseCellRegionForViewCellRegion:
regionByIntersectingRegion:
indexesForCategoryColumns
intersectsIndexesInRange:
enumerateRowRangesUsingBlock:
accessController
hasWrite
mergeOriginForBaseCellCoord:
flattenGroupValuesIfNeededForCell:viewCellCoord:summaryAndLabelRows:categoryColumns:
conditionalStyleAppliedRule
ruleAtIndex:
copyPropertyMap
defaultTextStyleForCellID:
performWrite:
defaultCellStyleForCellID:
hasCellStyle
hasTextStyle
getTextPropertiesWithCell:cellID:wraps:alignment:verticalAlignment:padding:
initWithPropertiesAndValues:
iterateCellsInRegion:flags:searchFlags:usingBlock:
position
setPrimitiveGeometry:
copyFromHiddenStates:forRange:withContext:isWholeTableCopy:
setParentInfo:
_correctAndCheckStateSuppressingAssertions:
_setCellBordersFlatteningFromComplexInfo:sourceRegion:
indexesOfHiddenRowsInCellRange:
indexesOfHiddenColumnsInCellRange:
caption
setCaption:
setDocumentIsClosing:
clearPartitioner
releaseLayoutEngine
teardown
initWithContext:fromSourceInfo:cellRegion:waitForCalcEngine:flattenCategories:isSnapshot:
setParent:
p_setupTableModelforNewForm
headersFrozenByDefault
checkboxFormat
toggleControlSpec
setCell:atCellUID:ignoreFormula:clearImportWarnings:
p_setupTableModelforStockPrototype
p_setupTableModelforStockSwatch
createLargeDefaultTables
numberOfRowsForProtoIndex:
numberOfColumnsForProtoIndex:
tablePrototypeWithIndex:context:geometry:stylePreset:forTableInsertOnly:
setupTableModelForPrototypeIndex:forTableInsertOnly:
tableModelForTableUID:withCalcEngine:
columnUIDs
p_setFillOnCell:positive:
rowUIDs
initWithNodeArray:
p_setFormula:atCellID:
initWithCreator:
p_positiveImageFill
p_negativeImageFill
setObject:forProperty:
objectForKeyedSubscript:
resourceURL
URLByAppendingPathComponent:
dataFromURL:context:
initWithImageData:technique:tintColor:size:
setObject:forKeyedSubscript:
p_fillResourceWithFilename:
tableNameTextSize
effectiveTableNameHeightForTable:
isSafeToConvertToImage
p_layoutEngineCreateIfNeeded:
archivedLayoutEngineBundle
initWithInfo:layoutEngineBundle:
changeNotifier
setChangeNotifier:
isCategoryGroupValueCell:
isReimportable
isLocked
isInReadOnlyMode
importDate
timeIntervalSinceNow
filteringTableUID
pivotSourceTableUID
pivotSourceTableName
pivotSourceTableInfo
pivotSourceBodyTract
pivotSourceRangeName
descriptionForPivotBodyCellForUidCoord:
tableRangeCoordinate
numberOfGrandTotalColumns
numberOfFooterOrGrandTotalRows
minNumberOfHeaderColumns
maxNumberOfHeaderColumns
groupSortOrder
setGroupSortOrder:
isRegisteredWithCalcEngine:
registerWithCalcEngine:ownerKind:
registerWithCalcEngine:baseOwnerUID:
linkToCalcEngine:ownerKind:
groupingColumnListCopy
applyGroupingColumns:
setIsCategoryEnabled:
setNeedsFormulaReset:
resetForCategoriesWithForce:
resetViewMap
unregisterFromCalcEngine:
unregisterFromCalcEngine
performReadForOneOffFormulaEvaluation:forCellCoord:
registerLast
filteringTableTranslator
baseColumnRange
columnNameForColumnIndex:withFallbackFormat:translator:
columnNameForColumnIndex:
filteringColumnNameForColumnIndex:
viewColumnIndexForBaseColumnIndex:
filterSetForPivotDataTable:
filterSetForRows
containsFilterRulesInUIDForm
copyByRewritingFilterRulesToGeometricFormWithContext:withTableInfo:
p_setFilterSet:
setFilterSet:forPivotDataTable:
filterCount
isEnabled
initWithNotBlankRowGroupsWithContext:withPivotTable:
setFilterSetForRows:
initWithNotBlankColumnGroupsWithContext:withPivotTable:
setFilterSetForColumns:
enableFilterSet:
filteringChangedPrecedentForTableUID:
intendToChangePrecedent:
stageCountForTextureDeliveryStyle:tableProvider:
textureDeliveryStylesLocalized:
textureDeliveryStyleFromDeliveryString:
cellIteratorWithFlags:searchFlags:
cellFlags
setCellFlags:
topStroke
topStrokeOrder
setTopStroke:order:
leftStroke
leftStrokeOrder
setLeftStroke:order:
bottomStroke
bottomStrokeOrder
setBottomStroke:order:
rightStroke
rightStrokeOrder
setRightStroke:order:
setCellsWithCellMap:ignoreFormulas:skipDirtyingNonFormulaCells:
p_bakeMixedCellStrokesIntoTable:outgoingTable:incomingTable:fraction:
angle
setAngle:
setGeometry:
partitioner
resetScaleToFit
widthValid
heightValid
horizontalFlip
verticalFlip
initWithPosition:size:widthValid:heightValid:horizontalFlip:verticalFlip:angle:
childEnumerator
aggregateEnumeratorWithObjects:
visitTSTTableInfo:
bootstrapPresetsOfKind:inTheme:alternate:reservedCount:
documentStylesheet
colors
createStylesInStylesheet:presetID:colors:alternate:
initWithStyleNetwork:
setPresets:ofKind:
setWithObject:
iterateCellsWithFlags:searchFlags:usingBlock:
initShallowMapWithContext:uidBased:
defaultCellStyleForCellID:useSoftDefault:outSource:
defaultTextStyleForCellID:useSoftDefault:outSource:
addCell:andCellUID:
mergedStorageRepresentation
setPosition:
removeAnnotationsFromRowsAtIndexes:
removeAnnotationsFromColumnsAtIndexes:
setDrawableIsBeingCopied:
supportsAutoResizedTables
dupContentCache
cellIDToWPColumnCache
resolverContainerNameForResolver:
nameForResolverContainer:
resolverContainerForName:caseSensitive:
resolverContainerNamesMatchingPrefix:
resolverMatchingName:contextContainerName:
resolversMatchingPrefix:
isPendingTableNameUniquification
resolverNameIsUsed:
floatValue
isEquivalentForCrossDocumentPasteMasterComparison:objectComparisonBlock:
hasEqualContentToCell:usingRichTextObjectComparisonBlock:
initWithOwnerInsertion:fromOwnerUID:
willModifyTable:uidResolver:calcEngine:
didModifyTable:calcEngine:
allOwnersRegistered
shouldForceRegisterAllTables
loadFromFileVersion
childEnumeratorForUserSearch
childEnumeratorForUserFlags:
modelPathComponentForChild:
acceptVisitor:
registerWithCalcEngineForDocumentLoad:ownerKind:
formulaOwnerUID
ownerKind
objectToArchiveInDependencyTracker
formulaOwner
modelEnumeratorForObjectsConformingToProtocol:
chooseUniqueNameInContainer:forPaste:
registerWithCalcEngine:
registerAllFormulasWithCalculationEngine:
beginTrackingNamesInTable:
beginTrackingNamesInTableForLegacyNRM:
ownerIsRegistered:
scheduleDetectAndRepairConsistencyViolations
upgradeSubOwnerUidForMapperOnCalcEngine:
setNeedsSubOwnerIDUpgrade:
hasCommentAtCellID:
setCommentStorage:atCellUID:
removeCommentStorageAtCellUID:
postCommentNotificationForStorage:atViewCellCoord:notificationKey:
commentHostingAtCellID:forCommentStorage:
commentHostingAtCellID:
beginUpgradingFormulasMode
modelEnumeratorForObjectsOfClass:
upgradeDuringDocumentUpgradeIfNeeded:
uuidBasedCellMapWithContext:
writingDirection
writingDirectionForCellwithTableDefault:
setParagraphWritingDirection:forCharRange:undoTransaction:
textStyleAtCellID:isDefault:
propertyMapWithPropertiesAndValues:
isCategoryGroupValueLabelCell:
isSummaryOrLabelRow:
groupLevelAtRow:
leftInset
rightInset
paddingWithTopInset:leftInset:bottomInset:rightInset:
hasGroupingArrowAtCellID:
pivotOptionsForRowGroupsAtLevel:
repeatLabels
isPivotTrailingAligned:
isPivotUnwrapped:
effectiveTextStyle
cellStyleAtCellID:isDefault:
currentFormatUsesAccountingStyle
modifiedTextPropertiesForCategoryOrPivotCellAtCellID:wraps:padding:alignment:
duplicateFilterSetInUidFormWithTable:
needsFormulaRewriteForImport
setNeedsFormulaRewriteForImport:
hiddenStatesForPivotDataTable:
setFilterSetType:
dirtyFilterState
hasFilterRulesWithTable:inBaseColumns:
numberOfVisibleBaseBodyRows
preventsRowInsertion
getPredArgDataFromCell:
containsObject:
hasCategoryRules
decimalDigitCharacterSet
rangeOfCharacterFromSet:options:
numberValueFromString:locale:outDoubleValue:outValueType:
regularExpressionWithPattern:options:error:
matchesInString:options:range:
chooseUniqueNameInContainer:forPaste:needsNewName:avoidNames:
remappedTableNames
parseNumberFromTableName:
checkoutNumberFormatter
initWithUnsignedInt:
createStringWithNumber:
returnNumberFormatter:
cellRegionForTableStyleArea:
tableAreaForDroppingRowAtIndex:
tableStyleAreaForCellUID:
tableStyleAreaForCellID:
initWithIndexSet:
getDefaultCell:forCellID:
getCell:atCellID:suppressCellBorder:
hasFormulaAtCellUID:
copyToUidFormForTableInfo:inCellCoordinate:preserveHostCell:
copyByRewritingReferencesToUidForm:
setCell:atCellUID:ignoreFormula:clearImportWarnings:formulaReplacer:
emptyFilteredTable
isEmptyPivot
textFormat
prunedCellRegionAgainstTable:behavior:
regionBySubtractingRegion:
cellUIDListFromCellRegion:useCategoriesWildcards:
getCell:atCellUID:
enumerateCellUIDsUsingBlock:
copyJustStrokesToCell:
convertFormulasToUidForm:atCellID:preserveHostCell:
mergeActionForRegion:
addMergeAction:
containsMergeChanges
initWithContext:uidBased:affectsCellBorders:
performRead:
cellValueTypeAtCellID:
cellValueTypeAtCellUID:
setCellStyle:ofRowAtUID:
setTextStyle:ofRowAtUID:
setCellStyle:ofColumnAtUID:
setTextStyle:ofColumnAtUID:
cellStyleAtCellUID:isDefault:
textStyleAtCellUID:isDefault:
defaultStylesForCellID:useSoftDefault:outCellStyle:outTextStyle:
initWithContext:rules:
rowNameForCellCoord:restrictToBodyRange:translator:cellRangeContainingName:
columnNameForColumnIndex:withFallbackFormat:
newlineCharacterSet
componentsSeparatedByCharactersInSet:
baseColumnIndexForGroupingAtColumnIndex:
pivotDataLocalizedColumnNameAtDataColumnIndex:
lowestCategoryLevelAsLeadingColumnGroupName:
baseColumnIndexForGroupingAtRowIndex:
lowestCategoryLevelAsLeadingRowGroupName:
cellRangeNameFromChromeRangeRef:namingContext:
usedSymbolicName
translatedCellRangeName:usedSymbolicName:
chromeRowIndexForViewRowIndex:
chromeLabelForColumn:
chromeLabelForRow:
indexOfVisibleColumnBeforeColumnAtIndex:
indexOfVisibleColumnAfterColumnAtIndex:
indexOfVisibleRowBeforeRowAtIndex:
indexOfVisibleRowAfterRowAtIndex:
bodyRangeForLowestLevelGroupEnclosingCellAtCellID:
categoryColumnRange
insertRowsAtIndex:uids:metadatas:tableArea:
hideAtViewIndex:forAction:
moveRowRange:toRowIndex:
moveColumnRange:toColumnIndex:
hasHiddenColumnsOrRows
numberOfHiddenRowsInCellRange:
numberOfUserHiddenRowsInCellRange:
numberOfHiddenColumnsInCellRange:
hasHiddenRowAtIndex:forAction:
hasHiddenColumnAtIndex:forAction:
indexesOfFilteredColumnsInCellRange:
indexesOfVisibleColumnsInCellRegion:
indexesOfVisibleColumnsInColumnRange:
indexesOfFilteredRowsInCellRange:
indexesOfVisibleRowsInCellRange:
indexesOfVisibleRowsInCellRegion:
indexesOfUserVisibleRowsInCellRange:
indexesOfCollapsedRowsInCellRange:
hidingActionForRowAtIndex:
hidingActionForColumnAtIndex:
anyHiddenRowsInCellRange:forAction:
numberOfBaseBodyRows
hasHiddenRowAtIndex:
hasHiddenColumnAtIndex:
anyHiddenRowsInCellRange:
anyHiddenColumnsInCellRange:
stringAtCellID:optionalCell:
characterFillAtCellID:optionalCell:
hasValueOrError
descriptionForPivotGroupCellForColumnUid:upToLevel:
descriptionForPivotGroupCellForRowUid:upToLevel:
stringForUnderlyingValue
isSummaryColumn:
columnGroupLevelAtColumn:outAggregateIndex:
rowGroupLevelAtRow:outAggregateIndex:
mergeCellRange:
unmergeCellRange:
mergeRangesPartiallyIntersectCellRange:
mergeRangesPartiallyIntersectCellRegion:
hasMergeRangeSpanningRowsForCellRange:
hasMergeRangesIntersectingCellRegion:
mergedGridIndicesForDimension:
regionForValueOrCommentCellsInRange:
hasRangeSpanningRowsForCellRange:
hasMergeRanges
shrinkReturningInverseForRegion:
removeReturningInverseForRegion:
performActionReturningInverse:
mergeActionForRegion:nonOriginPartialsOnly:
enumerateMergesIntersectingCellRegion:usingBlock:
mergeRangesIntersectingCellRegion:
mergeRangesAndCrumbsIntersectingRange:
initWithMergeList:
isValidMergeRange:
initWithDefaultStrokeProvider:customStrokeProvider:tableInfo:
strokeExporterReturningDefaultStrokes:
initWithStrokeProvider:tableProvider:tableInfo:
changeDescriptorWithType:cellRange:
validateChangeDescriptors:
strokeLayerForRow:
mutableStrokeLayerWithContext:subtractingDefaultsFrom:forRange:
setStrokeLayer:forTopOfRow:
setStrokeLayer:forBottomOfRow:
strokeLayerForColumn:
setStrokeLayer:forLeftOfColumn:
setStrokeLayer:forRightOfColumn:
getValue:atCellID:fetchRichTextAttributesIfPlainText:
cellValueFromCell:atCellID:
enumerateCellIDsUsingBlock:
pivotDataTableMapper
registerAllFormulasWithCalculationEngine:wasCrossDocumentPaste:wasUndo:
registerAllFormulasWithCalculationEngine:wasCrossDocumentPaste:
referenceToHiddenStateFromColumn:toColumn:
applyCollapseExpandState:outUndoState:
collapseExpandChanged:forState:
numberDoubleValue
iterateCellsInRange:flags:searchFlags:usingBlock:
numberOfCategoryColumns
numberOfBaseHeaderColumns
isLabelRow:
valueIsText
cellIDForCellContainingRichTextStorage:
writeCellIDsInCellUIDList:toVector:prunedCellUIDs:
convertCellUIDLookupList:toCellRangeVector:prunedSummaryCellUIDs:
orderedRowUidsFromUids:
columnIndexesForUIDs:
orderedColumnUidsFromUids:
getUUIDBytes:forRowIndex:
getUUIDBytes:forColumnIndex:
rowIndexForUUIDBytes:
columnIndexForUUIDBytes:
prunedColumnUIDsFromColumnUIDs:
prunedRowUIDsFromRowUIDs:
mutableIndexesForUIDSet:isRows:
mutableIndexesForUIDSet:isRows:notFoundUIDs:
rowUuids
columnUuids
rowRangeForUIDs:
columnRangeForUIDs:
uncompressedCellUIDs
indexesForLabelRows
regionBySubtractingRowIndexes:
UIDLookupList
regionByIntersectingRowIndices:
numberOfRowLevels
groupLevelAtSummaryRow:
addCellUID:
groupLevelAtLabelRow:
compressedSize
cellRegionFromCellUIDLookupList:
cellRegionFromCellUIDList:includeLabelsWithSummaries:didAddLabels:
cellRegionFromCellUIDLookupList:includeLabelsWithSummaries:didAddLabels:
p_cellRegionFromWildcardCellUIDs:includeLabelsWithSummaries:didAddLabels:
regionByAddingRegion:
regionFromCellRangeVector:
indexesForSummaryRowsAtGroupLevel:
indexesForLabelRowsAtGroupLevel:
tsu_indexSetByAddingIndexes:
region:addingRegion:
cellUIDRegionFromRegion:inTable:
cellRegionFromTable:
cellRegionForUIDRange:
cellTractRefForUIDRectRef:
getDefaultCell:forCellUID:
getCell:atCellUID:suppressCellBorder:
isGroupedForRows
isGroupedForColumns
groupByForRows
groupByForColumns
numberOfColumnLevels
maxRowLevel
maxColumnLevel
filteringTableModel
checkStateForArchiving:
categoryOrder
hasValidInfo
hasValidUidMap
checkMapsAndAssert:
groupByChangeDistributor
hasReceiver:
hasMergeRangeSpanningRowsForBaseCellRect:
enumerateAggregates:
setRowOrder:
setSummaryModel:
resetForCategories
checkState
removeReceiver:
willChangeGroupByTo:
duringSubOwnerUIDUpgrade
unregisterGroupBy:
setGroupingColumnList:
resetGroupBy
setIsEnabled:
setTranslator:
groupingColumns
setPivotSourceBodyUidTract:
setOrderUsingViewOrderForDimension:
didChangeGroupByStructure
initAsDetailTableWithContext:sourcePivotTableInfo:pivotSourceCell:
groupLevelAtSummaryColumn:
numberOfCategoryLevels
populatedCategoryGroupLevelsInColumn:
isGroupingColumn:
requiresTrailingAlignment:
requiresUnwrapping:
indexesForLeadingRows
indexesForLeadingColumns
hasHeaderColumnForAggregateNames
hasHeaderRowForAggregateNames
allRowGroupUIDs
allColumnGroupUIDs
indexesForRowsContainedByGroupUIDs:
indexesForColumnsContainedByGroupUIDs:
collapseSummaryRowGroupUIDs:
expandSummaryRowGroupUIDs:
isGroupOrParentsCollapsed:dimension:
isGroupCollapsedAndVisible:dimension:
indexesForSummaryColumnsAtGroupLevel:
indexesForLeadingRowsAtGroupLevel:
indexesForLeadingSummaryRowsAtGroupLevel:
indexesForLeadingColumnsAtGroupLevel:
indexesForLeadingSummaryColumnsAtGroupLevel:
rowAggregateGroupSize
columnAggregateGroupSize
indexesForGroupingColumns
groupingColumnAtCategoryLevel:
groupingColumnLevelsForColumn:
groupingType
enumerateGroupingColumnsForColumn:withBlock:
groupingArrowStateAtCellID:
isRowGroupUIDCollapsed:
isColumnGroupUIDCollapsed:
regionByIntersectingColumnIndices:
peerCellRegionForCellRegion:
setAggregateType:forColumnUID:atGroupLevel:
labelRowVisibilityAtCategoryLevel:
summaryRowHeightAtCategoryLevel:
setSummaryRowHeight:atCategoryLevel:
labelRowHeightAtCategoryLevel:
setLabelRowHeight:atCategoryLevel:
categoryColumnWidth
didMakeGroupingChangesInRowUIDs:
regionFromRowIndices:
iteratorClass
loadFromArchive:unarchiver:
setCategoryOrder:
setLayoutEngine:
newObjectUUIDWithOffset:
initWithGroupings:categoryOwner:groupByUid:ownerIndex:
setupAfterUnarchiveForPivotTable:pivotDataTable:
setHiddenStates:
setHiddenStateOwnerForColumnsUID:
setHiddenStateOwnerForRowsUID:
setNeedsToUpdateFilterSetForImport:
initWithContext:tableInfo:rowUids:
setRowUIDsWithPendingGroupingChanges:
setPartitioner:
preUFFVersion
shiftGeometryToIncludeTableNameHeight
sourceType
reassignPasteboardCustomFormatKeys
isInlineWithText
pushScopeForField:message:usingBlock:
initWithLayoutEngine:
hiddenStateExtentUid
localizedDescriptionForProtoIndex:
geometryForPrototypeIndex:withCanvasPoint:
tablePrototypeWithIndex:context:geometry:stylePreset:
canPartitionInline
canPartitionForPrinting
bootstrapPresetsOfKind:inTheme:alternate:
presetKinds
validateNewName:forTable:
performRewritesForInsertedTableInfos:
ensureAllTablesAreRegisteredInDocumentRoot:
upgradeTablesIfNeeded:forDocumentRoot:
tableStyleAreaForCellID:inTableWithHeaderColumns:headerRows:footerRows:totalRows:
matchesObjectPlaceholderGeometry
setMatchesObjectPlaceholderGeometry:
clearBackPointerToParentInfoIfNeeded:
isSelectable
layoutClass
repClass
isThemeContent
parentInfo
owningAttachment
setOwningAttachment:
owningAttachmentNoRecurse
isFloatingAboveText
isAnchoredToText
isInlineWithTextWithWrap
isAttachedToBodyText
isAllowedToAddCaptionToChildInfo:
uuidPathPrefixComponentsProvider
collaboratorCursorForSelectionPath:
T@"TSDInfoGeometry",C,N
T@"NSObject<TSDInfo>",N
T@"TSPObject<TSDOwningAttachment>",N
T@"TSPObject<TSDOwningAttachment>",R,N
floatingAboveText
TB,R,N,GisFloatingAboveText
anchoredToText
TB,R,N,GisAnchoredToText
inlineWithText
TB,R,N,GisInlineWithText
inlineWithTextWithWrap
TB,R,N,GisInlineWithTextWithWrap
attachedToBodyText
TB,R,N,GisAttachedToBodyText
childInfos
prohibitsModificationToChildren
isMaster
T@"NSArray",R,C,N
searchForAnnotationsWithHitBlock:
enumerateAllAnnotationsInModelWithHitBlock:
continueAnnotationSearch:
commandForReplaceAllWithProvider:
T@"NSSet",R,N
replaceReferencedStylesUsingBlock:
referencedStyles
afterReplacingReferencedStylesSetStylesheet:
referencedStyleWasUpdated:
mergesIntersectingRange:
mergesIntersectingCellRegion:
textIsVerticalAtCharIndex:
autoListRecognition
autoListTermination
textIsLinked
preventsComments
preventsChangeTracking
supportsMultipleColumns
storageChangesInvalidateWrap
supportsVerticalTextLayoutInChildStorages
supportsDropCapsInChildStorages
Tq,R,N
initWithContext:geometry:rows:columns:stylePreset:
initWithContext:geometry:rows:columns:
initForTestingWithContext:rows:columns:
initWithContext:otherTableInfo:
initPivotTableWithContext:sourceTableInfo:
hasUsefulPivotSourceCellsInBodyRange:
p_popupItemsForStrings:
p_setPopupMenuOnCell:withItems:andSelectedIndex:
p_setFormulaWithSymbolCellCoord:andAttributeCellCoord:atCellID:
p_setFormulaWithSymbolString:atCellID:
additionalObjectsToCopy
componentRootObject
layoutEngineEffectiveTableNameHeight
isSafeToConvertToImageForImagePaste
isSafeToConvertToAttributedString
isSafeToConvertToText
resolver
supportsHyperlinks
elementKind
supportsAttachedComments
supportsRichTextUndoAtCellID:
isNewlyImported
nsFilteringTableUID
pivotSourceNSTableUID
pivotTableCanBeRefreshed
pivotSourceIsRangeBased
notifyTableOfNewResults
filteringRange
filteringBodyRange
filteringBodyRowRange
filteringBaseColumnRange
filteringColumnNameForBaseColumnIndex:
filteringDisplayColumnNameForBaseColumnIndex:
setFilterSet:
chunkCountForTextureDeliveryStyle:animationFilter:
textureDeliveryStylesLocalized:animationFilter:
requiresStagesBuildingInReverse
suppliesFinalTextures
scaleInfoGeometry:
canAspectRatioLockBeChangedByUser
mergedContainedStorages
infoForSelectionPath:
presetKind
shouldCancelScrollingToSelectionPath:forChanges:
setInsertionCenterPosition:
geometryForRTLTableWithGeometry:
contentsAreRightToLeft
allowsCaption
canCommentInCaptionOrTitle
allowsTitle
typeName
setHasReference:
willCopyWithOtherDrawables:
didCopy
didReplaceTextsInStoragesWithPlaceHolderString
prepareForPasteWithSourceOffset:bakeFormulas:
postCommentNotificationForStorage:atCellID:notificationKey:
allAnnotations
bakeFormulas
applyWritingDirection:toCell:cellID:
notifyAboutStructuredTextImportState
duplicateFilterSet
duplicateFilterSetInUidForm
needsFilterFormulaRewriteForImport
setNeedsFilterFormulaRewriteForImport:
hasFilterRulesInBaseColumns:
hasFilterRulesAffectingInsertRows
allBodyValuesAsPregArgDataListForColumnIndex:
canTranspose
useBandedFill
bandedFillObject
hasUntitledTableNameFormat
chooseUniqueNameInContainer:forPaste:needsNewName:
cellIDIsLegal:
tableAreasForCellRange:
setCell:atCellCoord:
cellMapForRegion:uidBased:suppressMergeContent:useCategoriesWildcards:
concurrentCellMapForRegion:suppressMergeContent:gatherCellBorders:
getCell:atCellID:holdingReadLockWithAccessController:
noRuleConditionalStyleSet
rowNameForCellID:restrictToBodyRange:
pivotHeaderColumnDisplayNameAtIndex:
pivotLeadingColumnDisplayNameAtIndex:
pivotHeaderRowDisplayNameAtIndex:
pivotLeadingRowDisplayNameAtIndex:
cellRangeName:usedSymbolicName:
chromeLabelForCellID:
numberOfCells
cellIDLeftOfCellID:
cellIDRightOfCellID:
cellIDAboveCellID:
cellIDBelowCellID:
insertRowsAtIndex:count:addBefore:
insertColumnsAtIndex:count:addBefore:
importDeferredRemoveGroupingRowsAtIndexes:
processDeferredImportActions
hasDeferredImportActions
isCellRangeHidden:
numberOfVisibleBodyRows
numberOfUserVisibleBodyRows
numberOfVisibleBodyColumns
cellValueViewStringAtCellID:optionalCell:
labelValueViewStringAtCellID:optionalCell:
backgroundFill
bodyFill
headerColumnsFill
headerRowsFill
footerRowsFill
fillForColumn:
valueToUseForSummaryCellFormulaError
hasCellID:
cellRegionWithConditionalStyleMatchingCell:
minPopulatedCellRange
findChartableRangesFromTableRange:getBodyRange:headerColumnRange:headerRowRange:
cellUIDListFromCellRegion:
cellRegionFromCellUIDList:
cellUIDForCellID:useCategoriesWildcards:
textStyleForCellWithEmptyStyleAtCellUID:isDefault:
fromTableCoordMapperForPasteboard
pivotSizeClass
pivotDataModelSizeClass
startPivotChanges
updatePivotDataModel:pivotDataRefreshUID:pivotDataRefreshTimestamp:uidBodyTract:
handlePivotSorting:
resetPivotOrder
createDetailTableForPivotTableCell:
numberOfBaseColumns
numberOfBaseRows
numberOfBaseHeaderRows
numberOfBaseFooterRows
numberOfChromeColumns
numberOfChromeRows
numberOfChromeHeaderColumns
numberOfChromeHeaderRows
numberOfChromeFooterRows
numberOfGroupLevelsShowingLabelsUnderGroupAtIndex:
isSummaryCell:
isCategoryLabelCell:
isCategoryColumnUneditableCell:
isCategoryGroupingColumn:
isCategoryAnyKindOfCell:
isPivotAnyKindOfCell:
isPivotGrandTotalRow:
isPivotGrandTotalColumn:
isPivotLeadingRow:
isPivotLeadingColumn:
columnIndexForGroupingColumn:
allRowUIDsAtGroupLevel:withFilter:
allColumnUIDsAtGroupLevel:withFilter:
collapseSummaryGroupUIDs:
expandSummaryGroupUIDs:
isGroupingRowCollapsedAndVisible:
isGroupingColumnCollapsed:
isGroupingColumnCollapsedAndVisible:
hasSummaryRowsInRegion:
indexesForSummaryRowsAtGroupLevel:inRegion:
indexesForSummaryRowsUpToGroupLevel:omitGroupsWithUids:
indexesForSummaryRowsFromGroupLevel:toGroupLevel:
indexesForSummaryColumnsFromGroupLevel:toGroupLevel:
indexesForSummaryColumnsInRegion:
indexesForLabelRowsAtGroupLevel:inRegion:
indexesForLabelRowsUpToGroupLevel:omitGroupsWithUids:
indexesForLeadingRowsInRegion:
indexesForLeadingColumnsInRegion:
indexesForBodyAndFooterRows
indexesForBodyRowsInGroupWithRowAtIndex:
regionSubtractingCategoryColumnsAndRows:
groupingColumnLevelCountForColumn:
groupingTypesAreUniqueForColumn:
hasGroupingArrowInCellRegion:
baseTableUID
categoryRefReferringToCellRef:
shouldDisplaySummaryLabelRowAtGroupLevel:
willMakeGroupingChangesInRowUIDs:
processRowsWithPendingGroupingChangesAndReturnAffectedCellRegion
commandForSettingTableDirection:icc:
verifyPivotTableConnections
editorClass
rowUIDsWithPendingGroupingChanges
dragAndDropDetails
setDragAndDropDetails:
isCopyContainingCategoryColumn
setIsCopyContainingCategoryColumn:
hasReference
overrideLayoutHint
setOverrideLayoutHint:
pivotOrder
hiddenStatesUid
setHiddenStatesUid:
setFromTableCoordMapperForPasteboard:
wasRemovedFromDocument
migratingStylesOnly
setMigratingStylesOnly:
rowUIDsForImportedGroupingRows
setRowUIDsForImportedGroupingRows:
documentIsClosing
tableTranslatorBaseMapForPasteboard
setTableTranslatorBaseMapForPasteboard:
tableTranslatorViewMapForPasteboard
setTableTranslatorViewMapForPasteboard:
setArchivedLayoutEngineBundle:
_tableModel
_noRuleConditionalStyleSet
_needsFilterSetUpdated
_resetGroupingsOnUpgrade
_isCopyContainingCategoryColumn
_hasReference
_isAPivotTable
_wasRemovedFromDocument
_migratingStylesOnly
_documentIsClosing
_partitioner
_layoutEngine
_summaryModel
_rowUIDsWithPendingGroupingChanges
_formulaCoordSpace
_dragAndDropDetails
_overrideLayoutHint
_categoryOrder
_pivotDataModel
_pivotOrder
_hiddenStates
_translator
_fromTableCoordMapperForPasteboard
_rowUIDsForImportedGroupingRows
_archivedLayoutEngineBundle
_groupByUid
_hiddenStatesUid
_tableTranslatorBaseMapForPasteboard
_tableTranslatorViewMapForPasteboard
T@"TSCEMutableUIDSet",&,N,V_rowUIDsWithPendingGroupingChanges
TB,N,V_migratingStylesOnly
T@"TSCEMutableUIDSet",&,N,V_rowUIDsForImportedGroupingRows
TB,N,V_documentIsClosing
T{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}},N,V_tableTranslatorBaseMapForPasteboard
T{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}},N,V_tableTranslatorViewMapForPasteboard
T@"TSTArchivedLayoutEngineBundle",&,N,V_archivedLayoutEngineBundle
Tq,N,V_formulaCoordSpace
T@"NSDictionary",&,N,V_dragAndDropDetails
TB,N,V_isCopyContainingCategoryColumn
TB,N,V_hasReference
T@"TSTTablePartitioner",&,N,V_partitioner
T@"TSTLayoutHint",&,N,V_overrideLayoutHint
T@"TSTLayoutEngine",&,N,V_layoutEngine
categorized
TB,R,N,GisCategorized
T@"TSCECalculationEngine",N
T@"TSTSummaryModel",R,N,V_summaryModel
T@"TSTColumnRowUIDMap",R,N,V_columnRowUIDMap
T@"TSTCategoryOrder",R,N,V_categoryOrder
TB,R,N,V_isAPivotTable
T@"TSTTableModel",R,N,V_pivotDataModel
T@"TSTTableModel",R,N
T@"TSTTableTranslator",R,N
T@"TSTPivotRowColumnOrder",R,N,V_pivotOrder
T@"TSTPivotOwner",R,N
T@"TSTGroupBy",R,N
TI,N
Td,N
T@"NSString",&,N
Tq,N
T@"TSTTableStylePreset",&,N
T@"TSDFill",R,N
T@"TSTConcurrentMutableCellUIDSet",R,N
T@"TSTConditionalStyleFormulaOwner",R,N
T@"TSTCategoryOwner",R,N
T@"TSTHiddenStatesOwner",R,N
T@"TSTHiddenStates",&,N,V_hiddenStates
T@"TSTTableInfo",R,N
T@"TSTPencilAnnotationOwner",R,N
T@"TSTTableFilterSet",C,N
T{TSKUIDStruct=QQ},N,V_hiddenStatesUid
T@"TSTTableGroupSortOrderUID",N
T@"TSTTableSortOrder",C,N
T@"TSTSortRuleReferenceTracker",R,N
T@"TSTStrokeSidecar",R,N
T@"TSTCellWillChangeDistributor",R,N
T@"TSTTableTranslator",&,N,V_translator
T@"TSCECoordMapper",&,N,V_fromTableCoordMapperForPasteboard
T@"TSTStructuredTextImportRecord",&,N
reimportable
TB,R,N,GisReimportable
newlyImported
TB,R,N,GisNewlyImported
TB,R,N,V_wasRemovedFromDocument
T@"TSTGroupBy",&,N,V_groupBy
T{TSUChromeColumnIndex=S},R,N
T{TSUChromeRowIndex=I},R,N
T{TSKUIDStruct=QQ},N,V_groupByUid
T@"TSDInfoGeometry",C,D,N
T@"NSObject<TSDInfo>",D,N
T@"TSPObject<TSDOwningAttachment>",D,N
T@"TSPObject<TSDOwningAttachment>",R,D,N
TB,R,D,N,GisFloatingAboveText
TB,R,D,N,GisAnchoredToText
TB,R,D,N,GisInlineWithText
containsProperty:
performBlockWithTemporaryLayout:
objectForProperty:
floatValueForProperty:
boxedObjectForProperty:
doubleValueForProperty:
CGFloatValueForProperty:
cellDiffMapWithContext:
cellDiff
cellAfterApplyDiff:toCell:atCellUID:migrationMap:inverseCellDiff:concurrentStylesheet:defaultCellStyle:defaultTextStyle:
p_performCommentStorageDOLC:
doesSetProperty:
boolValueForSetProperty:
customFormatKey
addCustomFormat:oldKey:fuzzyNameMatching:
customFormatForKey:
initWithFormatType:customFormatKey:customFormat:
updateCustomFormatFromPaste:
containsAnyPropertiesInSet:
canBeVendorStorageUid:
setCell:atCellUID:
summaryCellVendor
copyToUidFormForTableInfo:inCellCoordinate:
cellByApplyingCellDiff:toTable:andUpdateInverse:optionalConcurrentStylesheet:
tableUIDMap
p_postCommentNotificationFromDiff:inverseDiff:cellID:
applyCellDiffMap:migrationHelper:updateProperties:
applyCellMap:outPrunedCellMap:outInverseCellMap:options:stylesContainer:
applyCellDiff:atCellUID:migrationMap:inverseCellDiff:defaultCellStyle:defaultTextStyle:
applyConcurrentCellMapToBaseTable:options:requestInverseMap:requestPruneMap:stylesContainer:migrationHelper:
initWithOwnerId:tileColumnBegin:tileRowBegin:context:
cppTile
unpackAfterUnarchiveForCellDependencies:
numCellRecords
isRecalculationRunning
willModifyWithOptions:
rewriteType
originalCellRefForUpdatedCellRef:
mergeRangeAtOriginalCellRef:
affectedRangeForRemoveRows
affectedRangeForInsertRows
affectedRangeForMoveRows
stringForOwnerKind:
setOwnerName:
setNumDirtyCells:
rangeDependencies
spanningRowDependencies
spanningColumnDependencies
formulaOwnerId
cellDependencies
allowUnarchivingObjectClass:
setCurrencyDoubleValue:
object
setRichTextValueWithoutPlaintextCollapse:
setFormat:isExplicit:
suggestCellFormatKind:
initFromMessage:unarchiver:
currencyDoubleValue
replies
numberFormat
currencyFormat
dateFormat
durationFormat
booleanFormat
cellFormatKind
explicitFormatFlags
saveToMessage:archiver:
initWithLayoutEngine:range:flags:searchFlags:
cellIteratorWithRange:flags:searchFlags:
iterateCellsAndTerminateWithIterator:usingBlock:
initWithNumberValue:locale:
initWithBooleanValue:locale:
initWithStringValue:locale:
initWithErrorValue:locale:
asCustomFormatWrapper
keyForCustomFormat:
setValueType:
_valueType
_locale
Tc,N,V_valueType
T@"TSULocale",&,N,V_locale
regionFromMergeList:
addRange:
mergeListWrapperWithRangesPassingTest:
regionForList
_mergeList
TB,R
grabViewUidMapper
setViewRangeRef:preserveFlags:
setChromeRangeRef:preserveFlags:
convertUIDRefToViewTractRef
convertViewTractRefToUID
copyOnWriteUIDMapper
viewTractRef
initWithCalcEngine:viewTractRef:
initWithCalcEngine:tableUID:uidRange:preserveFlags:
viewMap
baseTractRef
viewTractRefForBaseTractRef:
uidRange
viewColumnIndexesForUIDs:
viewRowIndexesForUIDs:
viewRangeRefs
baseRangeRefs
tsu_indexSetByExcludingIndexes:
baseRowIndexForViewRowIndex:
baseToViewPreserveFlagsAreInverted
setViewPreserveFlags:
viewRowIndexesForChromeRowIndexes:
viewColumnIndexesForChromeColumnIndexes:
viewPreserveFlags
chromeTractRefForViewTractRef:
viewCellRegionForBaseCellRegion:
referenceIsValidIncludingSheet:
uidTractListWithPurpose:
initWithCalcEngine:viewRangeRef:preserveFlags:
initWithCalcEngine:chromeRangeRef:preserveFlags:
initWithCalcEngine:baseRangeRef:preserveFlags:
excludeSummaryAndLabelRows
isViewRectangle
isBaseRectangle
baseRangeRef
viewRangeRef
chromeTractRef
viewTractRefIfFullyValid
viewTopLeftCoord
viewBottomRightCoord
baseTopLeftCoord
baseBottomRightCoord
viewCellRegionWithRangeContext:
isValidReference
includeUidTractList
area
singleReferencedColumnUid
setBasePreserveFlags:
needsUidRectUpgrade
setNeedsUidRectUpgrade:
chromeRangeRef
setChromeRangeRef:
_uidRange
_lastKnownViewTractRef
_viewMapVersionCounter
_needsUidRectUpgrade
_viewUidMapper
_basePreserveFlags
_chromeRangeRef
T@"TSCECalculationEngine",W,N,V_calcEngine
TC,N,V_basePreserveFlags
TC,N
T{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}},R,N
T{TSKUIDStruct=QQ},R,N,V_tableUID
T{TSUViewCellCoord={TSUCellCoord=ISBB}},R
T{TSUModelCellCoord={TSUCellCoord=ISBB}},R
TB,N,V_needsUidRectUpgrade
T{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}},N,V_chromeRangeRef
hiddenColumnIndexes
indexesOfHiddenColumnsInBaseCellRange:
indexesOfHiddenRowsInBaseCellRange:
initWithInfo:region:flags:searchMask:
initWithStrokeSidecar:region:
addIterator:
newRightToLeftIterator
newIterator
getNext
p_getNextCellID
p_updateDataForCellID:
setRegionIterator:
advanceToCellID:
mergeRangesIntersectingBaseCellRect:
mergeListFromModelMergeList:
updateCellData:
updateFormulaForCellData:
p_updateDataForMergeAtCellID:
nextCellData
initWithTableInfo:region:flags:searchFlags:clampingRange:
initWithTableInfo:flags:searchFlags:
initWithTableInfo:range:flags:searchFlags:
returnCellContents
region
cellData
setCellData:
returnEmptyCells
setReturnEmptyCells:
returnOneEmptyCell
setReturnOneEmptyCell:
terminateRegionIterator
setTerminateRegionIterator:
returnOnlyFormulas
setReturnOnlyFormulas:
returnMergeRanges
setReturnMergeRanges:
contentIterator
setContentIterator:
strokeIterator
setStrokeIterator:
regionIterator
dataStoreIterator
setDataStoreIterator:
rowForColumnIndexesWithMerges
setRowForColumnIndexesWithMerges:
_columnIndexToMergeRangeMap
_returnCellContents
_returnEmptyCells
_returnOneEmptyCell
_terminateRegionIterator
_returnOnlyFormulas
_returnMergeRanges
_rowForColumnIndexesWithMerges
_region
_cellData
_contentIterator
_strokeIterator
_regionIterator
_dataStoreIterator
T@"TSTTableInfo",&,N,V_tableInfo
T@"TSTTableModel",&,N,V_tableModel
T@"TSTCellRegion",R,N,V_region
T@"TSTMutableCellIteratorData",&,N,V_cellData
TB,N,V_returnEmptyCells
TB,N,V_returnOneEmptyCell
TB,N,V_terminateRegionIterator
TB,N,V_returnOnlyFormulas
TB,N,V_returnMergeRanges
T@"<TSTCellRegionIterating><TSTMutableCellIteratorDataUpdating>",&,N,V_contentIterator
T@"<TSTCellRegionIterating><TSTMutableCellIteratorDataUpdating>",&,N,V_strokeIterator
T@"<TSTCellRegionIterating>",&,N,V_regionIterator
T@"<TSTCellRegionIterating><TSTMutableCellIteratorDataUpdating>",&,N,V_dataStoreIterator
TI,N,V_rowForColumnIndexesWithMerges
TB,R,N,V_returnCellContents
initWithProperties:
p_regionStringForTableStyleArea:
colorWithColor:
blackColor
whiteColor
colorWithRed:green:blue:alpha:
p_initBodyRegionPropertyMap:presetID:colors:alternate:
p_initHeaderRowRegionPropertyMap:presetID:colors:alternate:
p_initHeaderColumnRegionPropertyMap:presetID:colors:alternate:
p_initFooterRowRegionPropertyMap:presetID:colors:alternate:
validateIntValue:forProperty:
validateObjectValue:withClass:forProperty:
loadCellStylePropertiesIntoPropertyMap:fromArchive:unarchiver:
overrideCount
saveCellStylePropertiesToArchive:archiver:
loadCellStyleFromArchive:unarchiver:
saveCellStyleToArchive:archiver:
isIdentified
styleIdentifier
imageData
renderedImageSizeForObjectSize:
definesProperty:
null
setValue:forProperty:
propertySet
allProperties
addProperties:
boxedValueForProperty:
enumeratePropertiesUsingBlock:
setBoxedValue:forProperty:
propertiesAllowingNSNull
nonEmphasisCellProperties
categoriesCellProperties
styleIDForPreset:andTableStyleArea:
textStyleIDForPreset:andTableStyleArea:
initDefaultPropertyMap:forTableStyleArea:presetID:colors:alternate:
targetSizeForImageData:associatedHint:
upgradeIfNecessary
containsStyle:
argumentSpec
insertFormulaText:includeWhitespace:
numberWithUnsignedInteger:
setWithSet:
expressionsMatchingCSENodeData:forNode:
recordExpression:data:
expressionsIdenticalToExpression:
expressionSize:
_nodesToData
_hashesToNodeSets
_retainedExpressions
strongToStrongObjectsMapTable
groupByForRowGroups
groupByForColumnGroups
rowGroupings
columnGroupings
threadCollector
changeDescriptorWithType:cellRange:strokeRange:
registerChange:details:forChangeSource:
baseMap
orderedUidsForDimension:
activeFlatteningDimension
rowUidsForRowGroupUid:
columnUidsForColumnGroupUid:
invalidateViewGeometry
flushCachedIndexSets
initWithTableUID:summaryColumns:summaryRows:labelRows:
setChromeCoordsAreViewCoords:
mapBaseRow:toViewRow:
mapBaseColumn:toViewColumn:
summaryMap
mapSummaryRow:toViewRow:
mapSummaryColumn:toViewColumn:
viewCellCoordForCellUID:
p_columnRowTypeForColumnIndex:
p_columnRowTypeForRowIndex:
styleAreaForColumnType:rowType:forAPivotTable:
cellValueTypeAtSummaryModelCoord:
p_applyViewCellCoord:toSummaryUsingBlock:toBaseUsingBlock:
p_applyViewRowIndex:toSummaryUsingBlock:toBaseUsingBlock:toBeyondBoundsUsingBlock:
p_applyViewColumnIndex:toSummaryUsingBlock:toBaseUsingBlock:toBeyondBoundsUsingBlock:
baseColumnIndexForViewColumnIndex:
summaryColumnIndexForViewColumnIndex:
summaryCellCoordForViewCellCoord:
getCell:atCellCoord:
baseCellCoordForCellUID:
summaryRowIndexForViewRowIndex:
cellExistsAtCellCoord:
regionFromCellCoordSet:
viewRowIndexForRowUID:
viewColumnIndexForColumnUID:
rowGroupUidForRowUid:outAggregateIndex:
columnGroupUidForColumnUid:outAggregateIndex:
i_populatePivotCachedIndexSetsIfNeeded
numberWithUnsignedChar:
i_indexesForSummaryColumnsAtGroupLevel:
i_indexesForLeadingColumnsAtGroupLevel:
i_indexesForLeadingSummaryColumnsAtGroupLevel:
i_populateIndexesForSummaryColumns
i_populateIndexesForLeadingColumns
i_populateIndexesForLeadingSummaryColumns
minRowLevel
minColumnLevel
maxVisibleRowLevel
maxVisibleColumnLevel
resetViewMapAndNotify
metadataForColumnIndex:
aggregateIndexForColumnIndex:
aggregateIndexForRowIndex:
i_indexesForSummaryRowsAtGroupLevel:
cachedPivotIndexSetsAreValid
setCachedPivotIndexSetsAreValid:
pivotCachedIndexesUnfairLock
setPivotCachedIndexesUnfairLock:
cachedIndexesForSummaryColumns
setCachedIndexesForSummaryColumns:
cachedSummaryColumnIndexesAtLevels
setCachedSummaryColumnIndexesAtLevels:
cachedIndexesForLeadingColumns
setCachedIndexesForLeadingColumns:
cachedLeadingColumnIndexesAtLevels
setCachedLeadingColumnIndexesAtLevels:
cachedLeadingSummaryColumnIndexesAtLevels
setCachedLeadingSummaryColumnIndexesAtLevels:
_cachedPivotIndexSetsAreValid
_pivotCachedIndexesUnfairLock
_cachedIndexesForSummaryColumns
_cachedSummaryColumnIndexesAtLevels
_cachedIndexesForLeadingColumns
_cachedLeadingColumnIndexesAtLevels
_cachedLeadingSummaryColumnIndexesAtLevels
TB,N,V_cachedPivotIndexSetsAreValid
T{os_unfair_lock_s=I},N,V_pivotCachedIndexesUnfairLock
T@"NSIndexSet",&,N,V_cachedIndexesForSummaryColumns
T@"NSMapTable",&,N,V_cachedSummaryColumnIndexesAtLevels
T@"NSIndexSet",&,N,V_cachedIndexesForLeadingColumns
T@"NSMapTable",&,N,V_cachedLeadingColumnIndexesAtLevels
T@"NSMapTable",&,N,V_cachedLeadingSummaryColumnIndexesAtLevels
cppCalcEngine
flushRemoveFormulas
flushResetFormulas
flushReplaceFormulas
flush
initWithSymbol:attribute:
symbol
attribute
detailsWithSymbol:attribute:
isEqualToStockDetails:
setSymbol:
setAttribute:
_symbol
_attribute
T@"NSString",&,N,V_symbol
Tq,N,V_attribute
initWithTileRowIndex:wideOffsets:
_archivedColumnCount
_replaceCellAtIndex:withCell:formatKeys:
_insertCell:atIndex:formatKeys:
_removeCellAtIndex:
enumerateStoragesInColumnRange:getPreBNC:withBlock:
validateWithResult:
stringWithString:
accumulateCurrentCellsConcurrentlyAtColumns:usingCellCreationBlock:
lockForConcurrentAccess
unlockForConcurrentAccess
cellIndexAtOrAfterIndex:
cellIndexAtOrBeforeIndex:
enumerateStoragesInColumnRange:withBlock:
searchCellStorageRefAtColumnIndex:searchMask:
_currentData
_preBNCData
_maxColumnIndexPrivate
_maxColumnIndexIsValidPrivate
_unfairLock
_tileRowIndex
_cellCount
TI,N,V_tileRowIndex
TQ,R,N,V_cellCount
uuidsAsTSUVector
uidsCollapsed
uidsExpanded
initWithCollapsed:expanded:dimension:
initWithTSUUUIDVector:
makeInverse
dimension
_collapsedGroupUIDs
_expandedGroupUIDs
_dimension
_uidsCollapsed
_uidsExpanded
T@"TSCEUIDSet",R,N,V_uidsCollapsed
T@"TSCEUIDSet",R,N,V_uidsExpanded
Tq,R,N,V_dimension
numberWithInteger:
integerValue
p_computeinteractionType:
initWithFormulaObject:locale:
p_mightBeEqual:
isEquivalentToFormula:
initWithArchive:isPreUFF:
T@"TSCEFormulaObject",R,N
initWithFormulaObject:fromTableInfo:fromCellID:
cellSpecReplacingFormulaObject:locale:
hasTSCEFormula
isEquivalent:
categoryAggregateType
stockDetails
_formulaObject
_categoryAggregateType
_stockDetails
T@"TSCEFormulaObject",R,N,V_formulaObject
TC,R,N,V_categoryAggregateType
T@"TSTStockDetails",R,N,V_stockDetails
initWithFormat:
tsce_singleQuoteCharacterSet
tsce_periodCharacterSet
tsce_internationalColonCharacterSet
characterSetWithCharactersInString:
tsce_characterSetRequiringSingleQuotes
formUnionWithCharacterSet:
scannerWithString:
scanUpToCharactersFromSet:intoString:
scanCharactersFromSet:intoString:
replaceOccurrencesOfString:withString:options:range:
insertString:atIndex:
mutableCopyWithZone:
rangeOfCharacterFromSet:options:range:
stringByFoldingWithOptions:locale:
_straightQuote
_straightQuoteEscaped
_fullwidthApostrophe
_fullwidthApostropheEscaped
_rightSingleQuotationMark
_rightSingleQuotationMarkEscaped
_leftSingleQuotationMark
_leftSingleQuotationMarkEscaped
_temporaryStraightQuoteString
_temporaryFullwidthApostropheString
_temporaryLeftSingleQuoteString
_temporaryRightSingleQuoteString
_singleQuoteCharacterSet
_periodCharacterSet
_colonCharacterSet
_asciiSpaceCharacterSet
_intlWhitespaceCharacterSet
_singleQuoteOrWhitespaceCharacterSet
_singleCurlyQuoteCharacterSet
_doubleCurlyQuoteCharacterSet
_requiringSingleQuotesCharacterSet
nodeForName:createIfMissing:
foldName:
insertFoldedName:
insertName:
containsName:
removeName:
enumerateNamesMatchingPrefix:block:
_root
raiseTypeExceptionForValue:functionSpec:argumentIndex:locale:
initWithContextTableResolver:components:
initWithContextResolver:components:
setParseAsBaseTableReference:
setTrimNames:
initWithContextResolver:
setContextTableResolver:
components
setComponents:
_filterColons
_referenceIsComplete
_parseAsBaseTableReference
_trimNames
_namesUsed
_preserveFlags
_contextTableResolver
_contextSheetName
_components
_aggregateFunction
_refPathSplitter
_abortObject
_sheetName
_rest
_sheetNameUnquoted
_tableNameUnquoted
_referencesMatchingInputAsPrefix
T^{TSCETableResolver=^^?},N,V_contextTableResolver
T@"<TSCEReferenceResolving>",R,N
T@"NSString",&,N,V_contextSheetName
T@"NSArray",&,N,V_components
T@"NSString",&,N,V_aggregateFunction
T@"TSCEQuotedRefPathSplitter",&,N,V_refPathSplitter
TB,N,V_filterColons
TB,N,V_referenceIsComplete
T@"TSCEAbortObject",&,N,V_abortObject
TB,N,V_parseAsBaseTableReference
TB,N,V_trimNames
TB,N,V_namesUsed
T{TSUPreserveFlags=C},N,V_preserveFlags
T@"NSString",&,N,V_sheetName
T@"NSString",&,N,V_rest
T@"NSString",&,N,V_sheetNameUnquoted
T@"NSString",&,N,V_tableNameUnquoted
T@"NSMutableArray",&,N,V_referencesMatchingInputAsPrefix
hasNumberFormat
hasCurrencyFormat
hasDateFormat
hasDurationFormat
hasTextFormat
hasBooleanFormat
hasImportWarningSet
underlyingDoubleValue
stringID
richTextID
cellStyleID
textStyleID
controlCellSpecID
formulaSyntaxErrorID
numberFormatID
currencyFormatID
dateFormatID
durationFormatID
textFormatID
booleanFormatID
commentStorageID
importWarningSetID
setExplicitFormatFlags:
setCurrencyDecimalValue:roundToDoublePrecision:
setNumberDecimalValue:roundToDoublePrecision:
setStringID:
setRichTextID:
setCellStyleID:
setTextStyleID:
setConditionalStyleID:
setFormulaID:
setControlCellSpecID:
setFormulaSyntaxErrorID:
setNumberFormatID:
setCurrencyFormatID:
setDateFormatID:
setDurationFormatID:
setTextFormatID:
setBooleanFormatID:
setCommentStorageID:
setImportWarningSetID:
compare:options:
tsce_numericCompare:
sortedArrayUsingSelector:
stringForOwnerID:withLimit:
addEdge:forOwner:
stringForEdgesWithLimit:
_edgesForOwner
dirtyPrecedentCount
isInCycle
isFormula
initWithCellID:dirtyPrecedentCount:
addPrecedentWithCellID:forOwner:
addDependentWithCellID:forOwner:
stringForDependencyRow
setDirtyPrecedentCount:
setIsFormula:
setIsInCycle:
precedentsList
setPrecedentsList:
dependentsList
setDependentsList:
_isFormula
_isInCycle
_dirtyPrecedentCount
_precedentsList
_dependentsList
T@"TSCEEdgeListPrinter",&,N,V_precedentsList
T@"TSCEEdgeListPrinter",&,N,V_dependentsList
T@"NSString",&,N,V_cellID
TQ,N,V_dirtyPrecedentCount
TB,N,V_isFormula
TB,N,V_isInCycle
setShowCleanCells:
showCleanCells
numDirtyCells
ownerName
addDependencyRow:
dirtyCellDependencyRows
setDirtyCellDependencyRows:
cleanCellDependencyRows
setCleanCellDependencyRows:
_showCleanCells
_ownerName
_numDirtyCells
_dirtyCellDependencyRows
_cleanCellDependencyRows
T@"NSMutableArray",&,N,V_dirtyCellDependencyRows
T@"NSMutableArray",&,N,V_cleanCellDependencyRows
T@"NSString",&,N,V_ownerName
TQ,N,V_numDirtyCells
TB,N,V_showCleanCells
ruleAtGroupLevel:
p_isEqual:
groupingColumnUid
insertObject:atIndex:
removeObjectAtIndex:
initWithGroupingColumnUid:columnUid:groupingType:
replaceRuleAtIndex:withRule:
replaceObjectAtIndex:withObject:
addRule:atIndex:
removeRuleAtIndex:
moveRuleFromIndex:toIndex:
changeGroupingTypeForRuleIndex:toType:
initWithGroupingColumns:
groupingColumnForColumnUID:
isGroupingColumnUidsEqual:
isFunctionallyEquivalent:
appendRules:
addRule:atGroupLevel:
removeRuleAtGroupLevel:
moveRuleFromGroupLevel:toLevel:
changeGroupingTypeForGroupLevel:toType:
replaceRuleAtGroupLevel:withRule:
groupingColumnUidList
_groupingColumns
initWithFormatString:
formatString
datePortionOfDateTimeFormatString:
formatStringContainsOnlyDate
formatStringContainsAMPMSpecifier
todayFormatForLocale:
nowFormatForLocale:
raiseOutOfBoundsArgumentErrorForArgument:functionName:lowerBound:lowerBoundInclusive:upperBound:upperBoundInclusive:
tsce_dateWithYear:month:day:hour:minute:second:
tsce_year
tsce_month
tsce_day
raiseInvalidDateError
defaultDateOnlyShortFormatForLocale:
raiseInvalidArgumentRelationshipErrorForFunctionName:argIndex1:argIndex2:argsAscending:equalityPermitted:
components:fromDate:toDate:options:
year
raiseInvalidArgumentsErrorForFunctionName:argumentIndex:
defaultFormatData
raiseStringDoesNotRepresentDateErrorForFunctionName:string:
isAbortedError
weekday
raiseDurationNotAllowedError:argumentNumber:
standaloneWeekdaySymbols
functionName
raiseNoSuitableArgumentsFoundErrorForFunctionName:requiredType:
initWithUseAutomaticUnits:durationUnitSmallest:durationUnitLargest:durationStyle:
setMonth:
dateByAddingComponents:toDate:options:
tsce_hour
tsce_minute
standaloneMonthSymbols
tsce_addObjectNonNil:
sortUsingSelector:
tsce_weekday
setDay:
raiseWrongNumberOfArgumentsErrorForFunctionName:provided:
currentDate
currentTimeZoneCalendar
dateWithIdenticalComponentsInGMTForDate:
tsce_second
raiseInvalidTimeError
dateByAddingTimeInterval:
errorType
extractComponentsFromDate:year:month:day:
tsce_weekNumberForType:
setPreserveRectangularRange:
addReceiver:
removeObjectIdenticalTo:
indexOfObjectIdenticalTo:
addReceiverIfMissing:
disconnect
suspendDuringBlock:
_receivers
T@"Protocol",R,N
T@"NSArray",R,N,V_receivers
raiseException
resetGroupingList
resetGroupings
asArray
columnAggregateUid
pivotDataTableUID
setGroupBySet:
clearMissingCombinations
aggregateAtIndex:
setMinion:
numPracticalGroupBys
groupingColumnsForOwnerIndex:
registerGroupByForColumns:ownerIndex:hiddenStates:groupBySet:
setAggregates:
p_resetAllGroupUids:baseGroupUids:summaryGroupUids:forGroupBy:uptoLevel:isFlattening:
initialGroupOrderForGroupBy:baseLevel:outAllUids:outBaseUids:outSummaryUids:
groupColumnIndexesForOwnerIndex:
groupByForOwnerIndex:createIfMissing:
topLevelGroupNode
showAsType
aggregateIndexForUidCoord:
descriptionForAggregateIndex:useShortLabel:allowDuplicateNames:locale:
aggregateType
localizedShortLabelForAggType:
localizedLabelForAggType:
columnNameForAggregateIndex:allowDuplicateNames:
compactDescriptionForAggregateIndex:useShortLabel:allowDuplicateNames:locale:
localizedCaseInsensitiveCompare:
groupByForColumnLevel:rowLevel:
groupValueUidForTuple:appendingTuple:
setAggregateIndex:
setAggregateType:
setShowAsType:
setAggregateFieldName:
columnNameForCategoryLevel:shortForm:
addDataField:withValue:
getPivotDataBundleForUidCoord:upToLevel:
enclosingGroupNameForGroupCellValue:
p_descriptionForPivotGroupValueTuple:upToLevel:locale:
descriptionForAggregateIndex:locale:
ownerIndex
findGroupNodeForValue:atLevel:createIfMissing:
topLevelGroupUid
categoryRefForUidCoord:outShowAsType:
setColumnUid:
setType:
firstAggregate
groupingColumnForIndex:
percentRunningDenominatorCategoryRefFor:inGroupBy:runningOnColumnUid:forAggregate:
groupingIndexForColumnUID:
ownerIndexForGroupingCombination:
findExistingGroupNodeInGroupBy:usingValues:upToLevel:
columnGroupLevelForColumnUID:
rowGroupLevelForRowUID:
anyAggregator
groupNodeForUuidCoord:
groupByForUuidCoord:
groupValueTupleByAppendingTuple:
initWithPivotTableUID:
linkToCalcEngine:
restoreFromPivotDataTable:columnGroupings:rowGroupings:aggregates:flatteningDimension:
setPivotRulesWithPivotDataTable:columnGroupings:rowGroupings:aggregates:flatteningDimension:
maxGroupByIndex
sawMissingCombination:
allGroupRoots
allColumnGroupUids
allRowGroupUids
baseColumnGroupUids
baseRowGroupUids
summaryColumnGroupUids
summaryRowGroupUids
allColumnUids
allRowUids
baseColumnUids
baseRowUids
hasRunningTotalAggregates
expandGroupUidsForFlattening:forDimension:
aggregateIndexForColumnUid:
aggregateIndexForRowUid:
aggregateForUidCoord:
aggregateIndexForAggName:locale:
columnUIDForGroupingColumnName:
getPivotDataBundleForUidCoord:
grandGrandTotalCategoryRefForAggregate:
grandTotalCategoryRefForColumn:forAggregate:
grandTotalCategoryRefForRow:forAggregate:
percentParentDenominatorCategoryRefFor:inGroupBy:forAggregate:forShowAsType:
restrictColumnIndexes:toColumnGroupLevel:forPivotTable:
restrictRowIndexes:toRowGroupLevel:forPivotTable:
restrictColumnIndexes:forAggrIndexLevel:forPivotTable:
restrictRowIndexes:forAggrIndexLevel:forPivotTable:
hasUnfilteredAt:forDimension:
filteringCategoryRefAt:forDimension:
getPivotHidingIndexesForGroupingColumn:columns:rows:forHiding:forPivotTable:
getHidingIndexesForGrandTotalsForPivotTable:columns:rows:
groupValueTupleForUuidCoord:createIfMissing:
verifyConnectionsWithPivotDataModel:pivotTableUID:
pivotTableUID
setPivotTableUID:
pivotDataTable
bodyGroupingList
setBodyGroupingList:
_inUseGroupBys
_aggregateUidList
_aggregateUidMap
_allColumnGroupUids
_baseColumnGroupUids
_summaryColumnGroupUids
_allRowGroupUids
_baseRowGroupUids
_summaryRowGroupUids
_allFlattenedUids
_baseFlattenedUids
_groupAggregateUidFlatteningMap
_groupAggregateUidUnflatteningMap
_assertedOnMissingCombinations
_filterSet
_pivotDataTable
_columnGroupings
_rowGroupings
_aggregates
_flatteningDimension
_activeFlatteningDimension
_bodyGroupingList
_pivotTableUID
T@"TSTGroupingColumnList",&,N,V_bodyGroupingList
TB,R,N,V_isRegisteredWithCalcEngine
T{TSKUIDStruct=QQ},N,V_pivotTableUID
T@"TSTTableModel",R,N,V_pivotDataTable
T@"TSCECalculationEngine",&,N,V_calcEngine
T@"TSTGroupingColumnList",R,N,V_columnGroupings
T@"TSTGroupingColumnList",R,N,V_rowGroupings
T@"TSTColumnAggregateList",R,N,V_aggregates
Tq,R,N,V_flatteningDimension
Tq,R,N,V_activeFlatteningDimension
T@"TSTTableFilterSet",C,N,V_filterSet
validatedLoadFromUnarchiver:
mAST
mFormulaID
setMessageType:messagePrototype:descriptor:unarchiveClassname:
setDeprecatedMessageType:
setUpgradeMessageType:messagePrototype:unarchiveClassname:
intersectsProperties:
propertySetFromUnionOfPropertySets:
objectForSetProperty:
objectForResetProperty:
addProperty:
p_resetCachedFlags
setBoolValue:forProperty:
setFloatValue:forProperty:
removeProperty:
removeAllPropertyValues
objectApplyingDiffToObject:andUpdateInverse:optionalConcurrentStylesheet:
cellDiffProperties
objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:
objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:optionalConcurrentStylesheet:
resetPropertiesFromMap:
setPropertiesFromMap:
initFromCommandPropertyMapMessage:unarchiver:
saveToCommandPropertyMapMessage:archiver:
containsStringProperties
doesSetAnyProperties:
doesResetProperty:
doesResetAnyProperties:
containsCellStyleProperties
containsTextStyleProperties
resetObject:forProperty:
resetIntValue:forProperty:
resetFloatValue:forProperty:
propertyMapToSetWithProperties:
removeObjectsToSetForProperty:
objectApplyingDiffToObject:andUpdateInverse:
estimatedByteSize
propertyMapToSet
setPropertyMapToSet:
propertySetToSet
setPropertySetToSet:
propertyMapToReset
setPropertyMapToReset:
propertySetToReset
setPropertySetToReset:
hasCachedContainsCellStyleProperties
setHasCachedContainsCellStyleProperties:
cachedContainsCellStyleProperties
setCachedContainsCellStyleProperties:
hasCachedContainsTextStyleProperties
setHasCachedContainsTextStyleProperties:
cachedContainsTextStyleProperties
setCachedContainsTextStyleProperties:
hasCachedContainsStringProperties
setHasCachedContainsStringProperties:
cachedContainsStringProperties
setCachedContainsStringProperties:
_hasCachedContainsCellStyleProperties
_cachedContainsCellStyleProperties
_hasCachedContainsTextStyleProperties
_cachedContainsTextStyleProperties
_hasCachedContainsStringProperties
_cachedContainsStringProperties
_propertyMapToSet
_propertySetToSet
_propertyMapToReset
_propertySetToReset
T@"TSSPropertyMap",&,N,V_propertyMapToSet
T@"TSSMutablePropertySet",&,N,V_propertySetToSet
T@"TSSPropertyMap",&,N,V_propertyMapToReset
T@"TSSMutablePropertySet",&,N,V_propertySetToReset
TB,N,V_hasCachedContainsCellStyleProperties
TB,N,V_cachedContainsCellStyleProperties
TB,N,V_hasCachedContainsTextStyleProperties
TB,N,V_cachedContainsTextStyleProperties
TB,N,V_hasCachedContainsStringProperties
TB,N,V_cachedContainsStringProperties
empty
TB,R,N,GisEmpty
dependencyTracker
addUseOfFunctions:atCellRef:
initWithReferenceSet:
markCellRefsAsDirty:
englishFunctionNameFromFunctionIndex:
functionsUsed
_cellRefsUsingFunction
_mutex
T@"TSCECalculationEngine",R,&,N,V_calcEngine
initWithCellUIDRange:
rowBasedSubRangesOfCellCount:
cellListWithContext:cellUIDRange:repeatCellVectorPattern:patternDirection:
appendCellList:
p_convertToUuidBasedCellListUsingTableInfo:pruneCategorizedCells:
viewCellRect
cellUIDRange
p_cacheRowColumnUIDs
p_accumulateBordersConcurrentlyUsingBlock:accumulateCellsConcurrentlyUsingBlock:
cellRegionWithTableInfo:
changeDescriptorWithType:cellRegion:
gatherer
cellRanges
gatheredCellRegion
changeDescriptorWithType:strokeRegion:
mergeActions
cellRegionForTable:
changeDescriptorWithType:cellRegion:strokeRegion:
p_clearDataListIDs
p_baseColumnIndexes
p_baseRowIndexes
cellUIDRanges
initWithCellUIDRangeVector:
viewCellRects
regionFromViewCellRectVector:
p_simpleInvokeBlock:
addRegion:
p_invokeBlock:
p_enumerateNewAndOldCellsSeriallyUsingBlock:
p_enumerateNewAndOldCellsSeriallyUsingPreBNCBlock:
p_enumerateCellsAddedAndRemovedOfType:usingBlock:
p_enumerateCellsAddedOfType:usingBlock:
p_enumerateCellsAddedAndRemovedForFormatsUsingBlock:
p_gatherRowState:
p_enumerateRowsOfCellsConcurrentlyUsingBlock:
p_enumerateCellsAddedAndRemovedForFormatsWithOptions:usingBlock:
hasFormulaAnyError
hasAnyFormats
p_enumerateColumnCellCountDiffUsingBlock:
p_enumerateRowCellCountDiffUsingBlock:
p_enumerateCustomFormatsBeingAddedUsingReplacementBlock:
p_pruneToBaseWithBaseMap:viewMap:
p_convertToInverseCellMap
verify
p_setObjectLocale:
cellLists
setCellLists:
setUidBased:
initWithArray:
setMergeActions:
concurrentCellMapWithContext:cellUIDRange:repeatCellVectorPattern:patternDirection:uidBased:affectsCellBorders:
changeDescriptorsForTable:
containsCellChanges
hasMultipleCells
affectedBaseColumnAndRowIndexes
cellRegionWithTableInfo:passingTest:
enumerateSeriallyUsingBlock:
enumerateCellsAddedOfType:withOptions:usingBlock:
gatherRowState:
enumerateRowsOfCellsConcurrentlyUsingBlock:
updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:
enumerateColumnCellCountDiffUsingBlock:
enumerateRowCellCountDiffUsingBlock:
enumerateCustomFormatsBeingAddedUsingReplacementBlock:
willApplyToTableModel:
convertToInverseCellMap
addHeadMergeAction:
addMergeActions:
pushInverseMergeAction:
clearMerges
mayModifyFormulasInCells
setMayModifyFormulasInCells:
mayModifyValuesReferencedByFormulas
setMayModifyValuesReferencedByFormulas:
inverseMergeActions
setInverseMergeActions:
cachedRowUIDs
setCachedRowUIDs:
cachedColumnUIDs
setCachedColumnUIDs:
applyingToTable
setApplyingToTable:
_uidBased
_mayModifyFormulasInCells
_mayModifyValuesReferencedByFormulas
_affectsCellBorders
_applyingToTable
_mergeActions
_cellLists
_inverseMergeActions
_cachedRowUIDs
_cachedColumnUIDs
uidBased
TB,N,GisUIDBased,V_uidBased
T@"NSMutableArray",&,N,V_cellLists
T@"NSMutableArray",&,N,V_mergeActions
T@"NSMutableArray",&,N,V_inverseMergeActions
T{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}},N,V_cachedRowUIDs
T{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}},N,V_cachedColumnUIDs
TB,N,V_applyingToTable
TB,N,V_mayModifyFormulasInCells
TB,N,V_mayModifyValuesReferencedByFormulas
TB,R,N,V_affectsCellBorders
initWithContext:viewCellRect:cellUIDRange:
hasCellSpec
regionFromViewCellRect:
p_pruneCellsAtRow:rowsSize:columnsSize:
enumerateIndexesWithOptions:usingBlock:
p_pruneCellsAtColumn:rowsSize:columnsSize:
p_interestingCellIndexes
p_setupInterestingCells:interestingCellIndexes:forAdding:
dictionary
formatIDForStorageFlag:
numberWithUnsignedInt:
enumerateKeysAndObjectsUsingBlock:
unsignedIntegerValue
initWithContext:cellUIDRange:
addCell:atIndex:
p_cells
setViewCellRect:
setCellUIDRange:
interestingCells
setInterestingCells:
formatsAdded
setFormatsAdded:
formatsRemoved
setFormatsRemoved:
tilesPerRow
setTilesPerRow:
rowInfosPerRow
setRowInfosPerRow:
_viewCellRect
_cellUIDRange
_tilesPerRow
_rowInfosPerRow
_cells
_baseRows
_baseColumns
_viewRows
_viewColumns
_cellCountDiffsPerRow
_cellCountDiffsPerColumn
_preBNCKeysList
_oldCells
_interestingCells
_formatsAdded
_formatsRemoved
TB,R,N,GisUIDBased,V_uidBased
T{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}},N,V_viewCellRect
T{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}},N,V_cellUIDRange
T@"NSArray",&,N,V_interestingCells
T@"TSUPointerKeyDictionary",&,N,V_formatsAdded
T@"NSMutableDictionary",&,N,V_formatsRemoved
T@"NSMutableArray",&,N,V_tilesPerRow
T@"NSMutableArray",&,N,V_rowInfosPerRow
getIndexes:maxCount:inIndexRange:
shiftIndexesStartingAtIndex:by:
addCell:atUidOffset:
appendCellUIDRange:
validCells
setValidCells:
_validCells
T@"NSMutableIndexSet",&,N,V_validCells
isInvalidReferenceError
isEqualViaFormattingAsDouble::
setEstimatedByteSize:
addObject:willModify:
estimatedByteSizeOfElement:
componentReadVersion
setImportSettings:
setImportSource:
setImportDate:
setSourceData:
setConfidence:
setImportedRegion:
setSourceColumnCount:
setSourceRowCount:
isWholeTableImport
settingsFromArchive:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
dataWithBytes:length:
dataWithContentsOfURL:
sourceEncoding
setSourceEncoding:
fileSystemRepresentation
bytes
record
recordFromArchive:
importSource
sourceData
confidence
importedRegion
sourceColumnCount
sourceRowCount
pasteInverseCommands
setPasteInverseCommands:
pasteType
setPasteType:
pasteWasUpdate
setPasteWasUpdate:
_pasteWasUpdate
_importSettings
_importSource
_importDate
_sourceData
_confidence
_importedRegion
_sourceColumnCount
_sourceRowCount
_pasteInverseCommands
_pasteType
T@"TSKStructuredTextImportSettings",&,N,V_importSettings
T@"NSURL",&,N,V_importSource
T@"NSDate",&,N,V_importDate
T@"NSData",C,N,V_sourceData
Td,N,V_confidence
T@"TSTCellRegion",&,N,V_importedRegion
TQ,N,V_sourceColumnCount
TQ,N,V_sourceRowCount
T@"NSArray",&,N,V_pasteInverseCommands
TQ,N,V_pasteType
TB,N,V_pasteWasUpdate
wholeTableImport
TB,R,N,GisWholeTableImport
numberValueFromString:locale:outDecimalValue:outValueType:outCurrencyCode:
typeErrorForValue:functionSpec:argumentIndex:locale:
unitForCurrencyCode:
listType
initWithType:keyRange:context:
p_shouldUseReverseMap
p_setupWithType:nextKeyID:
p_addInitialSegment
loadObjectsFromDataListArchive:unarchiver:
keys
asCurrencyFormat
currencyCode
decimalPlaces
negativeStyle
showThousandsSeparator
accountingStyle
initWithDecimalPlaces:negativeStyle:showSeparator:accountingStyle:currencyCode:
setPayload:
populatedCustomFormatWrapperFromCFWrapper:customFormat:
payload
p_enumerateDataObjectsUsingBlock:
isNewForBraveNewCell
encodeObjectsToDataListArchive:archiver:
keyRange
p_segmentForKey:
setObject:atIndexedSubscript:
shouldSplit
split
indexOfObject:
removeIndex:
initObjectWithString:refCount:
initObjectWithFormat:refCount:
initObjectWithCellSpec:refCount:
initObjectWithStyle:refCount:
initObjectWithFormulaError:refCount:
initObjectWithPopUpMenuModel:refCount:
richTextParentInfo
payloadWithStorage:
initObjectWithRichTextPayload:refCount:
initObjectWithConditionalStyleSet:refCount:
initObjectWithCommentStorage:refCount:
initObjectWithImportWarningSet:refCount:
p_objectForPayload:
p_objectForKey:
tst_dataObjectIsEqual:
p_nextAvailableKey
wrappedObjectForPayload:
p_setObject:atKey:updateReverseMap:
listTypeString
takeReference
refCount
p_setPayload:atSuggestedKey:callWillModify:
takeReferences:
richTextStorage
p_clearReverseMapForObject:atKey:
enumerateObjectsWithBlock:
conditionalStyleSet
style
p_objectCount
takeReferences:forKey:callWillModify:
dropReferences:forKey:callWillModify:
dropReferences:
stringForListType:
classForUnarchiver:
setRichTextParentInfo:
initWithType:context:
p_replaceObjectAtKey:withObject:
enumerateFormatsUsingBlock:
enumerateLegacyCustomFormatsUsingBlock:
enumerateKeysAndCountsUsingBlock:
refCountForKey:
takeReferenceForKey:callWillModify:
dropReferenceForKey:callWillModify:
setListType:
setIsNewForBraveNewCell:
mightHaveCustomFormats
nextID
setNextID:
useReverseMap
cachedSegment
setCachedSegment:
_segments
_payloadToObjectMap
_unusedKeySet
_isNewForBraveNewCell
_mightHaveCustomFormats
_useReverseMap
_listType
_nextID
_richTextParentInfo
_cachedSegment
Ti,N,V_listType
TI,N,V_nextID
TB,R,N,V_useReverseMap
T@"TSTTableDataListSegment",N,V_cachedSegment
TB,N,V_isNewForBraveNewCell
T@"NSObject<TSDContainerInfo><TSWPStorageParent>",N,V_richTextParentInfo
TB,R,N,V_mightHaveCustomFormats
foreach:
replaceCustomFormatsWithBlock:
formulaError
importWarningSet
popUpMenuModel
shouldWrap
addCellFormat:atSuggestedKey:callWillModify:
addCommentStorage:atSuggestedKey:callWillModify:
addConditionalStyleSet:atSuggestedKey:callWillModify:
addFormula:atSuggestedKey:callWillModify:
addControlCellSpec:atSuggestedKey:callWillModify:
addFormulaError:atSuggestedKey:callWillModify:
addImportWarningSet:atSuggestedKey:callWillModify:
addMultipleChoiceListFormat:atSuggestedKey:callWillModify:
addRichText:atSuggestedKey:callWillModify:
addString:atSuggestedKey:callWillModify:
addStyle:atSuggestedKey:callWillModify:
cellFormatForKey:
commentStorageForKey:
conditionalStyleSetForKey:
formulaForKey:
controlCellSpecForKey:
formulaErrorForKey:
importWarningSetForKey:
multipleChoiceListFormatForKey:
richTextForKey:
stringForKey:
stringForKey:shouldWrap:
styleForKey:
documentObject
legacyID
upgradedCustomFormatKeyForLegacyID:
setKey:
copyByUpgradingToLinkedRefAtHostCellRef:
UUID
hasDuplicatedElements
reassignCustomFormatUIDForPaste:
getRefCountsFromDataList
tst_dataObjectHash
stringFromBool:locale:
localizedTrueString
localizedFalseString
argumentSpecForIndex:
nativeType
deepType:
number:argIndex:evaluationContext:
date:argIndex:evaluationContext:
string:argIndex:locale:
rawString:argIndex:locale:
boolean:argIndex:evaluationContext:
reference:argIndex:evaluationContext:
dimensions
valueAtGridCoord:accessContext:
valueAtIndex:accessContext:
errorForErrorType:
flattenedGrid:
flattenedGridNoThrow:
containsError:evaluationContext:
gridKind
subGridValueAtGridCoord:width:height:accessContext:
cost
sortedArrayUsingComparator:
raiseAbortError
value
raiseArgumentSetUsedOutOfContextError
compare:withContext:
newCorrespondingAST:argIndex:bakeReferences:evaluationContext:
strokeWithColor:width:
deriveCategoryTopStrokeFromFooterRowSeparatorStroke:
deriveCategoryBottomStrokeFromFooterRowSeparatorStroke:
deriveCategoryInteriorStrokeFromFooterRowVerticalStroke:
emptyStrokeWithWidth:
deriveBodyPivotGroupHorizontalStrokeFromTableStyle:propertyMap:
deriveBodyPivotGroupVerticalStrokeFromTableStyle:propertyMap:
deriveBodyPivotDeEmphasisHorizontalStrokeFromTableStyle:propertyMap:
deriveBodyPivotEmphasisVerticalStrokeFromTableStyle:propertyMap:
deriveHeaderColumnPivotGroupHorizontalStrokeFromTableStyle:propertyMap:
deriveHeaderColumnPivotGroupDeEmphasisStrokeFromTableStyle:propertyMap:
deriveHeaderColumnPivotSeparatorStrokeFromTableStyle:propertyMap:
deriveHeaderRowPivotGroupVerticalStrokeFromTableStyle:propertyMap:
deriveHeaderRowPivotGroupDeEmphasisStrokeFromTableStyle:propertyMap:
deriveHeaderRowPivotTitleStrokeFromTableStyle:propertyMap:
deriveFooterRowPivotGroupVerticalStrokeFromTableStyle:propertyMap:
strokePresetListForDefaultPropertyMapForTablePresetID:colors:
horizontalStrokeForStrokePreset:
verticalStrokeForStrokePreset:
exteriorStrokeForStrokePreset:
maskForStrokePreset:
maskForStrokePresets:
validateIntValueAsBool:forProperty:
tsp_initWithProtobufString:
tsp_saveToProtobufString:
loadTableStylePropertiesIntoPropertyMap:fromArchive:unarchiver:
saveTableStylePropertiesToArchive:archiver:
curatedTableStylePropertySetForCrossDocumentPasteMasterComparison
hasEqualValues:forProperties:
strokeByTransformingByTransform:
boxedValueForProperty:oldBoxedValue:transformedByTransform:
nonEmphasisTableProperties
presetIDForStyleID:
styleIDForPreset:
defaultIntValueForProperty:
initDefaultStrokePresetListInPropertyMap:presetID:colors:
initDefaultPropertyMap:presetID:colors:alternate:
strokeForStrokePreset:
isEquivalentForCrossDocumentPasteMasterComparison:
infos
setSelection:
lastCellID
selection
selectionWithParent:
T@"TSKSelection",&,N
_cellSelection
_isLegacyBasedIDSelection
_legacyAnchorCellID
_legacyCursorCellID
_legacyCellRegion
_legacyBaseCellRegion
initWithColumnAggregateUid:columnUid:aggregateType:level:showAsType:runningTotalGroupingColumnUid:
runningTotalGroupingColumnUid
level
initForCategoriesWithColumnUid:aggregateType:level:
initForPivotWithColumnUid:aggregateType:
initForPivotWithColumnUid:aggregateType:showAsType:runningTotalGroupingColumnUid:
initForPivotWithColumnAggregateUid:columnUid:aggregateType:showAsType:runningTotalGroupingColumnUid:
initAsEmptyAggregate
getUUIDBytesForColumnAggregate:
getUUIDBytesForColumn:
getUUIDBytesForRunningTotalGroupingColumn:
_columnUid
_aggregateType
_level
_showAsType
_columnAggregateUid
_runningTotalGroupingColumnUid
_definedColumnAggregateUid
_definedRunningTotalGroupingColumnUid
Ti,R,N,V_level
TC,N,V_aggregateType
TC,R,N,V_showAsType
_stringValue
tract
columnGroupLevel
rowGroupLevel
aggregateIndexLevel
functionIndex
localizedModeNameForArgument:modeIndex:ofFunction:
raiseInvalidHistoricalCurrencyAttributeError
raiseInvalidHistoricalDateError
raiseInvalidLiveCurrencyAttributeError
raiseDisallowedStockModeError:
specifierWithFunctionIndex:symbol:attribute:year:month:day:
valueForRemoteData:
raiseRemoteDataUnavailableErrorWithAttribute:
currencyCodeForUnit:
uppercaseStringWithLocale:
specifierWithFunctionIndex:symbol:attribute:
raiseInvalidHistoricalStockAttributeError
raiseInvalidLiveStockAttributeError
mergeLeftRef:rightRef:outError:
raiseErrorForInvalidReference
absoluteCellTractRefForHostCell:offTable:
initWithTableResolver:tractRefCore:
invalidReferenceError
referenceToNonexistentTableError:
_createTileWithID:
setKeepObjectInMemory:
_groupForTileID:
setReference:forTileID:
pruneTilesForRows:
_upgradeFromTileIDMap:referenceMap:
objectAndReturnError:
domain
code
tsp_isRecoverable
tsp_hintsDescription
_tileForID:createIfMissing:
setStrongLazyReference:message:
enumerateReferencesWithBlock:
isEmbiggened
_enumerateLoadedTiles:
enumerateTilesConcurrentlyUsingBlock:
groupWithStartingTileID:
owner
_setTile:forID:
enumerateTilesWithBlock:
_enumerateGroups:
enumerateLoadedTilesWithBlock:
_removeTileForID:
tileSize
lastPopulatedRowIndex
_shiftRowsDownAtIndex:count:
_yankRowRange:
_spliceRows:atIndex:
_clearContentAtIndex:count:
_shiftRowsUpAtIndex:count:
tsu_addPointersFromPointerArray:
tsu_enumerateNonNullPointersUsingBlock:
_sharedQueue
performAsync:
_enumerateTiles:
performSync:
indexLessThanOrEqualToIndex:
_insertRowsAtIndex:count:
_removeRowsAtIndex:count:
incrementValueForKey:
enumerateRowsInRange:withBlock:
enumerateKeysAndValuesUsingBlock:
removeAllIndexes
initWithStorageArchive:treeArchive:nextTileID:unarchiver:owner:
saveToStorageArchive:treeArchive:archiver:
nextTileID
enumerateRowByRowInRange:withBlock:
rowInfoAtIndex:
tileForWritingAtRowIndex:outTileRange:
tileStartingAtOrBeforeRowIndex:outTileRange:
tileStartingAtOrAfterRowIndex:outTileRange:
insertRowsAtIndex:count:
columnCellCountsOfRowsInRange:
populatedTiles
pruneTileForRowIndex:
needToUpgradeCellStorage
auditTilesForRowOverlapAndExtensionPastTableBounds:withDataStore:result:
widenTilesForUpgrade
makeStorageMap
upgradeRepairedTiles
_tileIDSet
_tileGroups
_upgradeRepairedTiles
TB,R,D,N
TB,R,N,V_upgradeRepairedTiles
TB,N,V_shouldUseWideRows
readLazyReferenceMessage:class:protocol:completion:
initWithSize:hidingAction:cellStyle:textStyle:columnRowUID:
shiftIndexesBackAtIndex:count:
shiftIndexesForwardAtIndex:count:
initWithBucket:owner:
firstBucketForArchiving
initFromArchive:unarchiver:owner:
sizeAtIndex:
setSize:atIndex:
hidingStateAtIndex:
setHidingState:atIndex:
cellStyleAtIndex:
setCellStyle:atIndex:
textStyleAtIndex:
setTextStyle:atIndex:
defaultStylesAtIndex:outCellStyle:outTextStyle:
updateStylesWithBlock:
metadataAtIndex:hidingAction:defaultSize:uuid:
updateHeaderAtIndex:fromMetadata:
removeIndexesAtIndex:count:
swapIndex:withIndex:
moveIndexRange:toIndex:
cellCountAtIndex:
decrementCellCountAtIndex:byAmount:
incrementCellCountAtIndex:byAmount:
resetAllCellCounts
totalCellCount
forceLoadHeaders
minIndex
maxIndex
populatedIndexes
_buckets
_bucketCount
T@"TSPObject",R,N
initWithIndex:baseColumnIndex:rules:
initWithArray:copyItems:
filterWithIndex:baseColumnIndex:rules:
arrayByAddingObject:
filterWithRule:atIndex:
filterByAddingRule:
filterByRemovingRuleAtIndex:
filterByClearingRules
enumerateRulesUsingBlock:
filterIndex
baseColumnIndex
_filterIndex
_baseColumnIndex
_rules
TQ,R,N,V_filterIndex
T{TSUModelColumnIndex=S},R,N,V_baseColumnIndex
minKey
maxKey
hasHeaderContent
data
setData:
styleCount
setStyleCount:
_data
_styleCount
_bounds
T@"TSUSparseArray",&,N,V_data
TQ,N,V_styleCount
initWithCriterion:functionSpec:evaluationContext:
setDate:
regexMatcherWithRegexString:caseSensitive:
setMatcher:
criteriaParser:
raiseNumberError
setString:
regexMatcherWithStringMatch:
raiseInvalidComparisonError
containsMatchInString:
logicalTestWithCriterion:functionSpec:evaluationContext:
date
matcher
evaluationContext
setEvaluationContext:
_operation
_value
_string
_date
_matcher
_evaluationContext
T@"TSCERegexMatcher",&,N,V_matcher
T^v,N,V_evaluationContext
T@"NSString",&,N,V_string
T@"NSDate",&,N,V_date
reserveNextIndex
clearFormulaAtIndex:
setFormulaObject:atIndex:
initWithCreator:translationFlags:
formulaObjectAtIndex:
rangeFromFormulaObject:atCoord:useBoundingRange:
tableUIDFromFormula:atCoord:
copyByForceSettingOwnerUIDs:calcEngine:
initWithOwnerUID:
indexFromCoord:
createFormulaForUIDRange:tableUID:
createFormulaForUIDTract:tableUID:
rangeFromFormulaObject:atCoord:
setFormulaOwnerUID:
formulaCount
reserveNextCoordinate
markForRollback
rollbackToMark:
appendIndexedFormula:
registerAllFormulaToCalculationEngine
createFormulaObjectForRange:atIndex:tableUID:
tableUIDFromFormulaAtIndex:
remapRangeFormulasToOwnerUID:
initWithOwnerUID:archive:unarchiver:
usesOnlyFixedCoords
setUsesOnlyFixedCoords:
_formulaOwnerUID
_formulas
_nextIndex
_usesOnlyFixedCoords
TB,N,V_usesOnlyFixedCoords
T{TSKUIDStruct=QQ},N,V_formulaOwnerUID
isForTable:
relativeRows
setRelativeRows:
relativeColumns
setRelativeColumns:
initWithValues:gridKind:
initWithValues:
formatAtIndex:accessContext:
valueAtIndexNoThrow:accessContext:
preferredFormatOptions:
error
strokeRegion
layoutSpacesInvalidateCoordinatesAfterRow:
layoutInvalidate
setLayoutInvalidate:
layoutInvalidateProvider
setLayoutInvalidateProvider:
layoutInvalidateSize
setLayoutInvalidateSize:
layoutInvalidateTableNameVisibility
setLayoutInvalidateTableNameVisibility:
layoutSpacesInvalidateCoordinates
setLayoutSpacesInvalidateCoordinates:
layoutSpacesInvalidateCoordinatesAfterRow
setLayoutSpacesInvalidateCoordinatesAfterRow:
layoutSpacesInvalidateTableOffsets
setLayoutSpacesInvalidateTableOffsets:
layoutInvalidateChildren
setLayoutInvalidateChildren:
layoutUpdateChildren
setLayoutUpdateChildren:
editingCellIDForInvalidation
setEditingCellIDForInvalidation:
layoutResetScaleToFit
setLayoutResetScaleToFit:
_layoutInvalidate
_layoutInvalidateProvider
_layoutInvalidateSize
_layoutInvalidateTableNameVisibility
_layoutSpacesInvalidateCoordinates
_layoutSpacesInvalidateTableOffsets
_layoutInvalidateChildren
_layoutUpdateChildren
_layoutResetScaleToFit
_layoutSpacesInvalidateCoordinatesAfterRow
_editingCellIDForInvalidation
TB,N,V_layoutInvalidate
TB,N,V_layoutInvalidateProvider
TB,N,V_layoutInvalidateSize
TB,N,V_layoutInvalidateTableNameVisibility
TB,N,V_layoutSpacesInvalidateCoordinates
TI,N,V_layoutSpacesInvalidateCoordinatesAfterRow
TB,N,V_layoutSpacesInvalidateTableOffsets
TB,N,V_layoutInvalidateChildren
TB,N,V_layoutUpdateChildren
T{TSUCellCoord=ISBB},N,V_editingCellIDForInvalidation
TB,N,V_layoutResetScaleToFit
info
setLayout:
initWithLayout:
p_getLayoutDirectionLeftToRight
newLayoutHint
initWithInfo:layoutHint:
removeContainedTextEditingLayout
removeAttachmentCellLayouts
layoutState
offsetGeometryBy:
strokeFrame
isFrozen
layoutDirectionIsLeftToRight
frame
capturedInfoPositionForAttachment
spaceBundle
space
tableOffset
isDynamicallyChangingInfoGeometry
dynamicInfoGeometry
tableEnvironment
initWithFrame:
layoutGeometryFromInfo
maximumFrameSizeForChild:
alignmentFrame
invalidateLayoutSpaceTableOffsets
invalidateLayoutSpaceCoordinates
fullTransform
geometryFromFullTransform:
transform
isDynamicallyRowTabResizing
dynamicFooterHeight
styleProvidingSource
_visibleFrameForOverscrolledChildFrame:
layoutController
canvas
isAnchoredAtRight
geometryByTranslatingBy:
details
shouldShowCaption
layoutHint
validateLayoutHint:
updateChildrenFromInfo
validateTableNameVisibility
validateLayoutSpaces
setNeedsDisplay
validatePageNumberCount
setNeedsDisplayInRect:
layoutRectForCanvasRect:
invalidateLayoutSpaceCoordinatesAfterColumn:
invalidateLayoutSpaceCoordinatesAfterRow:
containedTextEditingLayout
invalidateSize
addChangeDescriptor:
invalidateChildren
invalidate
gridRangeOfLayoutSpace:
frameForGridRange:
invalidateTableOffsets
invalidateCoordinates
invalidateCoordinatesAfterColumn:
invalidateCoordinatesAfterRow:
setIsValid:
invalidateExteriorWrap
invalidatePosition
widthOfColumn:skipDynamicSwap:returnZeroIfHidden:outIsFitting:
maximumSize
heightOfRow:skipDynamicSwap:withStrokeHeights:returnZeroIfHidden:clampToPartitionSize:maximumPartitionSize:outIsFitting:
setGridRange:
entireFooterRowsCellRange
cacheHintID
headerRowsRepeat
headerColumnsRepeat
cellRange
enumerateLayoutSpacesUsingBlock:
partitionPosition
frozenHeaderColumnsSpace
frozenHeaderRowsSpace
frozenHeaderCornerSpace
repeatHeaderColumnsSpace
repeatHeaderRowsSpace
repeatHeaderCornerSpace
lockForRead
alignedStrokeFrame
canvasRectForLayoutRect:
alignedFrame
unlock
frameInRoot
setTransformToCanvas:
transformToCanvas
transformToDevice
setViewScale:
viewScale
layoutPointForCanvasPoint:
canvasPointForLayoutPoint:
canvasFrame
canvasStrokeFrame
isDynamicallyColumnTabResizing
dynamicColumnTabSize
dynamicRowTabSize
tabsRowWidthAndOptionalLeftGap:
supportsFrozenHeaders
inFindReplaceMode
suppressFrozenHeadersForEditing
isStrokeEditing
entireHeaderColumnsCellRange
isEntireCellRangeHidden:
entireHeaderRowsCellRange
setNewCanvasRevealedHorizontally:
setNewCanvasRevealedVertically:
invalidateFrame
frameHasWidthAndHeight
rangeIntersectingLayoutRect:
isDynamicallyRepressingFrozenHeaderRows
_floatingCellRangeAtRect:inLayoutSpace:withTransform:
isDynamicallyRepressingFrozenHeaderColumns
cellRangeVisibleRect
isRepeat
alignedStrokeFrameForGridRange:
region:addingRange:
layoutSpaceType
layout
gridPointHitByCanvasPoint:tabsViewable:
canvasFrameForGridRange:
intersectionCellRange:
intersectsGridRange:
intersectionGridRange:ofLayoutSpace:
canvasStrokeFrameForGridRange:
containsGridRange:
contentFrameForGridRange:
alignedOverrideFrameForGridRange:strokeWidthOverride:
intersectsRowGridRange:
intersectionRowGridRange:ofLayoutSpace:
alignedStrokeLineForRowGridRange:
intersectsColumnGridRange:
intersectionColumnGridRange:ofLayoutSpace:
alignedStrokeLineForColumnGridRange:
alignedStrokeFramePathForGridRange:frameType:viewScale:inset:reoriginToZero:clipToVisibleRect:cornerRadius:outMaskPath:
alignedStrokeLinePathForRowGridRange:transform:inset:reoriginToZero:cornerRadius:
alignedStrokeLinePathForColumnGridRange:transform:inset:reoriginToZero:cornerRadius:
alignedStrokeFramePathForGridRange:transform:inset:reoriginToZero:cornerRadius:
transformUsingAffineTransform:
bezierPathWithRect:
subtractBezierPath:
uniteWithPolygonalBezierPath:
uniteWithBezierPath:
alignedMaskStrokeFramePathForTransform:cornerRadius:
enumerateMissingRowsIntersectingCellRange:usingBlock:
enumerateRowsIntersectingCellRange:usingBlock:
bounds
appendBezierPath:
enumerateMissingColumnsIntersectingCellRange:usingBlock:
enumerateColumnsIntersectingCellRange:usingBlock:
alignedContentFrameForGridRange:
visiblePartOfRange:
alignedStrokeFramePathForRange:frameType:viewScale:inset:reoriginToZero:clipToVisibleRect:cornerRadius:outMaskPath:
setTableNameEditingStorage:
addObserver:
tableNameEditingStorage
removeObserver:
invalidateTableNameHeight
tableNameHeightForStorage:withMaxWidth:
width
alignedRectForLayoutRect:
frameForTableNameBorder
strokeFrameForTableNameBorder
alignedStrokeFrameForTableNameBorder
isBeingManipulated
isInDynamicLayoutMode
dynamicRepResize
isDynamicallyChangingContent
dynamicContentDelegate
cell:forCellID:
modelCellIDForLayoutCellID:
isDynamicallyChangingRowOrColumnCount
naturalAlignmentForCellID:
pageNumber
pageCount
validateCellForDrawing:cell:contents:wrap:verticalAlignment:padding:layoutCacheFlags:pageNumber:pageCount:
cachedCellID
cachedMergeRange
cachedCellWraps
cachedParagraphAlignment
extendedPartitionRangeSingleSpaceIntersectionWithCellRange:
p_maximumSpillRangeForCellID:
p_spillRangeToRightForCellID:
cachedAutosizedFrame
setWithArray:
reverseObjectEnumerator
richTextStorageForLayout
attachmentCount
isDynamicallyHidingContentOfCellID:
isDynamicallyHidingRowsColsCellID:
isDynamicallyHidingTextOfCellID:
cachedCellStyle
cachedTextStyle
initialTextSize
initWithStorage:cellID:frame:
removeFromParent
addChild:
computedEditingCellContentFrame
cachedPadding
maxSize
p_layoutWhollyContainsGridRange:
contentSizeForCellRange:skipDynamicSwap:
captionEdgeInsets
p_prepareAttachmentCellsIfNeeded
childInfosForChildLayouts
arrayByAddingObjectsFromArray:
clearDynamicStrokesForCellRange:
layoutForInfo:
viewScaleForZoomingToSelectionPath:targetPointSize:
initWithLeftAnchor:rightAnchor:isVertical:
rectInRootForSelectionPath:
orderedSelections
lastObject
edgeInsets
paddingForCellID:
adjustedInsetsForTarget:
p_defaultAlignmentForTableWritingDirection
writingDirectionForParagraphAtCharIndex:
valueIsNumberOrTime
cachedAutoSizeFlags
cachedVerticalAlignment
p_nonAutosizedFrameForTextEditingLayout:
p_nonAutosizedFrameForRichTextLayout:
p_rangeUpAndLeftOfIntersectionRangeOfGridRange:
isCorner
isColumns
p_autosizedFrameForTextEditingLayout:textSize:
p_autosizedFrameForRichTextLayout:textSize:
setCachedAutosizedFrame:
dependentLayouts
allValues
p_maskRectForTextEditingLayout:
p_maskRectForRichTextLayout:
cachedMaskRect
p_spillRangeForMaskingRichTextLayout:
setCachedMaskRect:
setCachedMaskSpillRange:
styleProvider
styleProviderForTextLayout:
wantsToProvideStylesForTextLayout:
objectsPassingTest:
p_getStyleProvidingAncestorLayout
findLayoutIfAvailableInSet:intersectingRow:
widthForColumnIndex:bodyWidth:
gapForColumnIndex:bodyWidth:
positionForColumnIndex:bodyWidth:target:outWidth:outGap:
layoutMargins
columnCount
alwaysStartsNewTarget
shrinkTextToFit
columnsAreLeftToRight
layoutMarginsForTarget:
textScaleFactor
T@"TSWPPadding",R,N
Td,R,N
autosizeFlagsForTextLayout:
verticalAlignmentForTextLayout:
nonAutosizedFrameForTextLayout:
autosizedFrameForTextLayout:textSize:
dependentsOfTextLayout:
repClassForTextLayout:
descendersCannotClip
forceParentAutosizeFlagsForTextLayout:
forceParentAutosizedFrameForTextLayout:
invalidateForAutosizingTextLayout:
reliedOnLayoutsForTextLayout:
maxAutoGrowLineWidthForTextLayout:
maxAutoGrowBlockHeightForTextLayout:
initialCharIndex
textLayoutShouldWrapAroundExternalDrawables:
textLayoutShouldLayoutVertically:
maskRectForTextLayout:
naturalAlignmentForTextLayout:
pageCountForAttachment:
pageNumberForAttachment:
adjustRect:forScrollingToSelectionPath:forZoom:
storage:didChangeRange:delta:broadcastKind:attributeKindChanges:
tearDown
scaleToFit
setScaleToFit:
setLayoutHint:
scaleToFitParent
supportsRotation
canRotateChildLayout:
resizeMayChangeAspectRatio
isDraggable
computeLayoutGeometry
computeInfoGeometryFromPureLayoutGeometry:
initialInfoGeometry
wrapFitType
selectionHighlightFrameFittingParentWidthForChildWithFrame:
frameForCaptionPositioning
inspectorGeometry
inspectorGeometryIsAffectedByChangeRecord:
inPrintPreviewMode
minimumPositionOffset
setCellRangeVisibleRect:
floatingHeaderRowRangeAtRect:
floatingHeaderColumnRangeAtRect:
alignedStrokeFrameForRange:
bezierPathsForCellRegion:selectionMask:transform:viewScale:inset:clipToVisibleRect:cornerRadius:block:
willBeginTableNameEditingWithStorage:
didEndTableNameEditing
invalidateTableNameVisibility
p_updateCachedStyleInformationFromCellID:
setupContainedTextEditingLayout:
attachmentCellLayoutForCellID:optionalCell:
calculatePointFromSearchReference:
calculatePointFromSearchReferenceWithoutValidation:
activityLineUnscaledEndPointForSearchReference:
unscaledCommentFlagAnchorInfoForSearchReference:
orderedBefore:
canvasShouldScrollForSelectionPath:
textIsVertical
p_textFrameForWrappingCell:defaultRowHeight:
p_cellIDForWPLayout:
p_computeSpillingTextFrameForEditingLayout:textSize:editingSpillRange:
reapCoordinatesChangedMaskForChrome
setContainedTextEditingLayout:
containedTextEditorSpills
containedTextEditorWraps
editingSpillingTextRange
newCanvasRevealedHorizontally
newCanvasRevealedVertically
paddingForEditingCell
prevEditingSpillingTextRange
setPrevEditingSpillingTextRange:
setSpaceBundle:
processChangesFiltering
setProcessChangesFiltering:
attachmentCellStorageToLayoutMap
mLayoutHint
mCanvasVisibleRect
mCanvasSafeRect
mPreviousVisibleStrokeFrame
mProcessChangesFiltering
mTabsVisible
mTableNameVisibilityIsValid
mTableNameVisible
mNewCanvasRevealedHorizontally
mNewCanvasRevealedVertically
mLayoutDirectionIsLeftToRight
mSpaceBundle
mCached
mRenderingFrameForLayoutGeometryFromInfo
mContainedTextEditingLayout
mCachedPaddingForEditingCell
mComputedEditingCellContentFrame
mCachedVerticalAlignmentForEditingCell
mAdjustableTableSize
mFixedTableSize
mCapturedStrokeFrameSizeForInline
mEditingSpillingTextRange
mPrevEditingSpillingTextRange
mContainedTextEditorParagraphAlignment
mContainedTextEditorTextWraps
mRemovingContainedTextEditorLayout
mContainedTextEditorSpills
mSpillingTextSize
mCoordinatesChangedMaskForChrome
mShouldUpdateAttachmentChildren
mPageCount
mPageNumber
_attachmentCellStorageToLayoutMap
_tableNameEditingStorage
_cellRangeVisibleRect
T@"TSUPointerKeyDictionary",R,V_attachmentCellStorageToLayoutMap
T@"TSWPStorage",W,N,V_tableNameEditingStorage
T@"TSTLayoutHint",&,N,VmLayoutHint
T@"TSTLayoutSpaceBundle",&,N,VmSpaceBundle
TB,N,VmProcessChangesFiltering
TB,N,VmNewCanvasRevealedHorizontally
TB,N,VmNewCanvasRevealedVertically
TB,R,N,VmLayoutDirectionIsLeftToRight
T{CGSize=dd},N
T@"TSWPLayout",&,N,VmContainedTextEditingLayout
T{UIEdgeInsets=dddd},R,N,VmCachedPaddingForEditingCell
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},R,N,VmEditingSpillingTextRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,VmPrevEditingSpillingTextRange
TB,R,N,VmContainedTextEditorSpills
TB,R,N,VmContainedTextEditorTextWraps
T{CGSize=dd},R,N
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cellRangeVisibleRect
numberWithUnsignedLongLong:
headerColumnsWidth
headerRowsHeight
initWithLayoutSpaceBundle:type:
setFrozenHeaderColumnsSpace:
setFrozenHeaderRowsSpace:
setFrozenHeaderCornerSpace:
setUserSpaceToDeviceSpaceTransform:
enumerateFrozenLayoutSpacesUsingBlock:
setRepeatHeaderColumnsSpace:
setRepeatHeaderRowsSpace:
setRepeatHeaderCornerSpace:
setHeaderRowsRepeat:
setHeaderColumnsRepeat:
enumerateRepeatLayoutSpacesUsingBlock:
countA
boolCount
boolTrueCount
numberCount
dateCount
durationCount
stringCount
errorCount
noContentCount
minValue
maxValue
functionSpecForFunctionIndex:
sumMixedDurationsAndUnitlessWithoutADateErrorForFunctionName:
invalidDateManipulationError
countOfNumberDateDurationOrBool
countRows
initWithFormatType:decimalPlaces:negativeStyle:showSeparator:
p_averageValueWithA:
isCircularReference
circularReferenceError
countAValue
totalValue
avgAValue
productValue
countValue
countBlankValue
avgValue
countRowsValue
rangeValue
accumulateValue:
accumulate:
valueForType:
setIsCircularReference:
_boolCount
_boolTrueCount
_numberCount
_dateCount
_durationCount
_stringCount
_errorCount
_noContentCount
_minValue
_maxValue
_productValue
_numberTotalValue
_firstDateSeen
_totalSecsSinceReferenceDate
_secondsToAdd
_isCircularReference
TI,R,N,V_boolCount
TI,R,N,V_boolTrueCount
TI,R,N,V_numberCount
TI,R,N,V_dateCount
TI,R,N,V_durationCount
TI,R,N,V_stringCount
TI,R,N,V_errorCount
TI,R,N,V_noContentCount
T{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C},R,N
TB,N,V_isCircularReference
aggregatesOnLevel:
columnAggregateUidList
columnAggregateUuids
_columnAggregates
commonInit
initWithDependencyTracker:
isDoneDirtying
isEmptyForDirtying
dirtyAllCellsInOwnerId:
dirtyInternalRangeRef:
dirtyNewCellRef:forSeconds:fromStartTime:
dirtyCellsNow
_flushUpdatePrecedentsCellRefSetWithDepTracker:startTime:timeout:
shouldCleanGraphForConsistencyViolation
setShouldCleanGraphForConsistencyViolation:
dirtyCellsForSeconds:fromStartTime:
_flushDirtyOwnerIdsWithDepTracker:startTime:timeout:
_flushCellRefSetWithDepTracker:startTime:timeout:
_flushDependentOnlyCellRefSetWithDepTracker:startTime:timeout:
_flushRangeRefsWithDepTracker:startTime:timeout:
_flushInternalCellRefSetWithDepTracker:startTime:timeout:
flushDirtyReferencesForSeconds:
setCalculationEngine:
setShouldPerformDetectAndRepairConsistencyViolations:
isEmptyForArchiving
dirtyAllCellsInOwner:
dirtyCellRef:
dirtyInternalCellRef:
dirtyOnlyDependentsOfCellRef:
dirtyCoords:inOwnerId:
dirtyCellRefs:
dirtyInternalCellRefs:
dirtyCellRefsInReferenceSet:
updatePrecedentCountForCellRef:
hasPrecedentCountUpdatesPending
dirtyRangeRef:
hasDirtyingToPerformForOwnerId:
flushCellDirtier
flushAllDirtyReferences
addInProgressCalcCellRefs:
isInProgressCalcIntCellRef:
numberOfInProgressCalcCellRef
clearInProgressCalcCellRefs
shouldPerformDetectAndRepairConsistencyViolations
debugOnly_DidDetectAndRepairConsistencyViolations
debugOnly_DidCleanGraphForConsistencyViolation
_dirtyingMutex
_cellRefDirtier
_toDirtyOwnerIds
_toDirtyInternalCellRefs
_toDirtyCellRefs
_toDirtyDependentsOnlyCellRefs
_toUpdateDirtyPrecedentCountCellRefs
_toDirtyRangeRefs
_shouldPerformDetectAndRepairConsistencyViolations
_shouldCleanGraphForConsistencyViolation
_calcCellsInProgress
_debugOnly_DidDetectAndRepairConsistencyViolations
_debugOnly_DidCleanGraphForConsistencyViolation
T@"TSCECalculationEngine",R,N,V_calcEngine
TB,N,V_shouldPerformDetectAndRepairConsistencyViolations
TB,N,V_shouldCleanGraphForConsistencyViolation
TB,R,N,V_debugOnly_DidDetectAndRepairConsistencyViolations
TB,R,N,V_debugOnly_DidCleanGraphForConsistencyViolation
initWithContext:calculationEngine:viewHostCell:formula:ownerUID:
formulaForCell:atCellID:inTable:
errorTypeKey
errorDictionary
setByAddingObjectsFromArray:
isEqualToNumber:
setDateAsTimeInterval:
setExtraInfoString:
dateAsTimeInterval
doubleValue
extraInfoString
_errorValue
initWithChromeTractRef:calcEngine:
initWithBaseTractRef:calcEngine:
setBaseTractRef:
setChromeTractRef:
_baseTractRef
_chromeTractRef
T@"TSCECellTractRef",&,N,V_baseTractRef
T@"TSCECellTractRef",&,N,V_chromeTractRef
T{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}},R,N
T{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}},R,N
invertedSet
stringForRangeRefPair:namingContext:
nameForBaseRangeRef:namingContext:
categoryRefForAggregateRangeRef:
hostTableUID
prettyStringForCategoryRef:forHostCellRef:namingContext:
useSymbolicNames
allowTableName
setAllowTableName:
rangeIsWithinTable:
forceEscaping
allowSpanningColumnReferenceBodyQualifier
setQuoteComponents:
setForceEscaping:
cellRangeName:namingContext:
referenceNameIsUnique:forReference:contextTable:
forceTableName
forceSheetName
tsce_stringByForcingSingleQuoteEscapes:
stringValueAtCellCoord:translator:
tsce_stringByAddingSingleQuoteEscapesIfNecessary
createNameComponentWithChromeRangeRef:rowOrColumnName:isSticky:namingContext:
disableImplicitNaming
p_symbolicColumnNameForRefPair:useTopLeft:isSticky:foundRange:inTableModel:namingContext:
p_symbolicRowNameForRefPair:useTopLeft:isSticky:foundRange:inTableModel:namingContext:
showGeometricAsBase
suppressIdenticalEndReference
nameForBaseTractRef:namingContext:
stringByAppendingFormat:
setUsedSymbolicName:
chromeNameForBaseRangeRef:namingContext:
nameForViewTractRef:namingContext:coordMapper:
nameForWrappedRangeRef:namingContext:
whitespaceAndNewlineCharSet
setWhitespaceAndNewlineCharSet:
nonWhitespaceAndNewlineCharSet
setNonWhitespaceAndNewlineCharSet:
_whitespaceAndNewlineCharSet
_nonWhitespaceAndNewlineCharSet
T@"NSCharacterSet",&,N,V_whitespaceAndNewlineCharSet
T@"NSCharacterSet",&,N,V_nonWhitespaceAndNewlineCharSet
raiseInvalidDateManipulationError
raiseComparisonTypeExceptionForLeftType:rightType:
regexMatcherWithRegexString:caseSensitive:entireMatch:
emptyReferenceSet
addCellRefToCheck:
cellRefsToCheck
skipRepairBadRefsForOwnerUID:
_cellRefsToCheck
_skipRepairBadRefsOwnerUID
versionShippedIn
trackedReferencesExistForTable:
beginTrackingNamesInTable:limitedToRange:
beginTrackingNamesInRange:ofTableUID:addingTrackedReferencesTo:
beginTrackingNameInCell:ofTableUID:addingTrackedReferencesTo:
beginTrackingReferenceWithCellRef:
allTrackedReferences
referencesForCalcEngine:referenceTrackerUID:
endTrackingReference:
foreachCellRef:
registerOwnerWithOwnerUID:owner:referenceResolver:baseOwnerUID:ownerKind:
unregisterOwner:
beginTrackingReference:calcEngine:
beginTrackingReference:
endTrackingReference:calcEngine:
trackedReferenceAtCoord:
corruptCellRefs
formulaOwnerUIDForInternalFormulaOwnerID:
ownerKindForOwnerID:
refersToCellRefForCalculationEngine:referenceTrackerUID:
namedReferenceManager
endTrackingNamesInTable:
resetCorruptCellRefs:
linkedResolver
evaluationMode
writeResultsForCalcEngine:
invalidateForCalcEngine:
evaluateFormulaAt:withCalcEngine:recalcOptions:
multiEvaluateFormulasAt:withCalcEngine:recalcOptions:
initWithContext:calculationEngine:
_ownerUID
_trackedRefsStore
_weakTrackedRefsStore
_isRegisteredWithCalculationEngine
T@"TSCECalculationEngine",W,V_calcEngine
raiseSumMixedDurationsAndUnitlessWithoutADateErrorForFunctionName:
addValue:function:evaluationContext:
resultForFunction:
dateAccumulator
setDateAccumulator:
numberAccumulator
secondsToAdd
setSecondsToAdd:
mixedDurationsAndNumbers
setMixedDurationsAndNumbers:
foundANumber
setFoundANumber:
_dateAccumulator
_numberAccumulator
_mixedDurationsAndNumbers
_foundANumber
T@"NSDate",N,V_dateAccumulator
T^{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB},R,N,V_numberAccumulator
Td,N,V_secondsToAdd
TB,N,V_mixedDurationsAndNumbers
TB,N,V_foundANumber
applyFormulaResult:
initWithPivotTable:minion:preservingStyles:
applyFormula:atUidCoord:
applyCellValue:atUidCoord:appendTotalForPivotsFlag:
setStringValue:atUidCoord:
blockUntilCompleted
madeChange
_pivotTable
_minion
_preservingStyles
_madeChange
_workerQueue
_documentLocale
_blankString
TB,R,N,V_madeChange
arraySegmentClass
packageLocatorForSegments
initWithTableUID:
viewRowIndexForChromeRowIndex:
viewRowIndexForBaseRowIndex:
countOfIndexesInRange:
viewColumnIndexesForBaseColumnIndexes:
baseColumnIndexForChromeColumnIndex:
baseRowIndexForChromeRowIndex:
chromeColumnIndexForBaseColumnIndex:
chromeRowIndexForBaseRowIndex:
viewColumnIndexForSummaryColumnIndex:
viewRowIndexForSummaryRowIndex:
chromeCellCoordForViewCellCoord:
viewCellCoordForBaseCellCoord:
viewCellCoordForChromeCellCoord:
baseColumnIndexesForViewColumnIndexes:
baseRowIndexesForViewRowIndexes:
chromeColumnIndexesForViewColumnIndexes:
chromeRowIndexesForViewRowIndexes:
viewRowIndexesForBaseRowIndexes:
sourceIndexes
initWithStartIndex:endIndex:
enumerateMappingFollowingSwapsUsingBlock:
viewCellCoordForSummaryCellCoord:
baseCellRefForChromeCellRef:
baseCellRefForViewCellRef:
chromeCellRefForViewCellRef:
viewCellRefForBaseCellRef:
viewCellRefForChromeCellRef:
viewRangeRefForChromeRangeRef:
baseShuffleMapForViewShuffleMap:
chromeCoordsAreViewCoords
initWithTableUID:summaryRows:labelRows:
_isIdentityMapping
_chromeCoordsAreViewCoords
_baseRowToViewRow
_viewRowToBaseRow
_summaryRowIndexes
_summaryColumnIndexes
_labelRowIndexes
_summaryAndLabelRowIndexes
_baseColumnToViewColumn
_viewColumnToBaseColumn
_summaryRowToViewRow
_viewRowToSummaryRow
_summaryColumnToViewColumn
_viewColumnToSummaryColumn
TB,R,N,V_isIdentityMapping
TB,N,V_chromeCoordsAreViewCoords
zeroWidthEmptyStroke
p_setLeftStroke:order:atCellID:
p_setRightStroke:order:atCellID:
p_setTopStroke:order:atCellID:
p_setBottomStroke:order:atCellID:
overridePropertyMap
baseStyleForVariation
cascadedStyleWithIdentifier:
initWithContext:columnOrRowIndex:
invalidateRange:
setMaxOrder:
setStroke:inRange:order:
leftColumnStrokes
p_setStroke:order:inStrokesArray:atIndex:atRange:
rightColumnStrokes
topRowStrokes
bottomRowStrokes
findStrokeAndRangeAtIndex:
stroke
order
columnOrRowIndex
initWithContext:majorStrokeLayer:minorStrokeLayer:
enumerateRawStrokesSegmentsUsingBlock:
p_flattenMajorStrokeLayer:minorStrokeLayer:
p_strokeRect
enumerateStrokesInRange:usingBlock:
tsu_insertRange:
insertSpaceAtRange:
tsu_removeRange:
removeRange:
moveRange:toIndex:
swapSegmentAtIndex:withSegmentAtIndex:
unretainedStrokeLayerForTopOfRow:
unretainedStrokeLayerForBottomOfRow:
unretainedStrokeLayerForLeftSideOfColumn:
unretainedStrokeLayerForRightSideOfColumn:
setColumnOrRowIndex:
setBordersWithConcurrentCellMap:forTableInfo:
_maxOrder
_leftColumnStrokes
_rightColumnStrokes
_topRowStrokes
_bottomRowStrokes
T@"NSPointerArray",R,N,V_leftColumnStrokes
T@"NSPointerArray",R,N,V_rightColumnStrokes
T@"NSPointerArray",R,N,V_topRowStrokes
T@"NSPointerArray",R,N,V_bottomRowStrokes
Ti,N,V_maxOrder
intersectingColumnsInRow:
removeIndexesInRange:
setColumnIndexesInRow:
columnIndexesInRow
setIteratorToRow:
anyCellBordersInThisRow
cellBorderAtColumn:
setRegion:
topStrokeLayer
setTopStrokeLayer:
bottomStrokeLayer
setBottomStrokeLayer:
_columnIndexesInRow
_topStrokeLayer
_bottomStrokeLayer
T@"TSTStrokeSidecar",&,N,V_strokeSidecar
T@"TSTCellRegion",&,N,V_region
T@"NSIndexSet",&,N,V_columnIndexesInRow
T@"TSTStrokeLayer",&,N,V_topStrokeLayer
T@"TSTStrokeLayer",&,N,V_bottomStrokeLayer
cellRangeAtIndex:
p_updateIndexesForReplacingRangeAtIndex:withRange:
indexesForRange:
enumerateModelCellRectsUsingBlock:
enumerateCacheItemsIntersectingBaseCellRect:includeCrumbs:usingBlock:
indexesForBaseCellRegion:
enumerateCacheItemsUsingBlock:
mergeRangesIntersectingBaseCellRect:includeCrumbs:
enumerateCacheItemsIntersectingBaseCellRegion:usingBlock:
enumerateCacheItemsIntersectingBaseCellRect:usingBlock:
partiallyIntersectsModelCellRect:
openRewritingTransaction
commitRewritingTransaction
setCellRange:atIndex:
removeCellRangeAtIndex:
partiallyIntersectsBaseCellRect:
partiallyIntersectsBaseCellRegion:
hasRangeSpanningRowsForCellRect:
expandBaseCellRectToCoverMergedCells:
expandBaseCellRegionToCoverMergedCells:
hasRangeSpanningRowsForCellRegion:
_mergeRanges
_mergeRangesRTree
_mergedAtCellIds
_transaction
addTableStyleIndex:
hasTableStyles
containsStyleNetworkIndex:
enumerateTableStylesUsingBlock:
addCellUID:flags:addingMaximumSize:
hasStylesInCells
cellUIDs
tableStyleIndexes
_cellUIDs
_tableStyleIndexes
_maximumSize
_cellFlags
T{CGSize=dd},R,N,V_maximumSize
T{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}},R,N,V_cellFlags
T@"TSTCellUIDList",R,N,V_cellUIDs
T@"NSMutableIndexSet",R,N,V_tableStyleIndexes
highestScaleFactorForRenderingDrawableInfo:
isTopmostContainerInfo
initWithImageData:
p_fillPropertyForStyle:
compatibilityCheckerForData:associatedHint:
mediaCompatibilityTypeForData:associatedHint:
bundle
lockForWrite
validateCachedFrames
validateCoordinateCache:
validateTableOffset:
bezierPathCache
setTableWidthForRightToLeft:
gridRange
strokeHeightOfGridRow:inColumnRange:
strokeWidthOfGridColumn:inRowRange:
setTableOffset:
isMain
p_headerColumnsGridRange
p_headerRowsGridRange
p_footerRowsGridRange
p_tableRectForLayoutRect:
p_gridRangeForTableRect:
gridRangeForLayoutRect:
p_rangeForLayoutRect:
frameForRange:
p_tableCoordinateForGridColumn:
p_tableCoordinateForGridRow:
p_layoutPointForTablePoint:
p_tableRectForGridRange:
p_layoutRectForTableRect:
p_frameSpecForGridRange:frameType:strokeWidthOverride:
strokeFrameForGridRange:
p_rawTableCoordinateForGridColumn:
p_layoutCoordinateForGridColumn:
p_layoutCoordinateForGridRow:
p_alignedFrameSpecForGridRange:strokeWidthOverride:
gridPointHitByLayoutPoint:
p_tablePointForLayoutPoint:
p_gridPointForTablePoint:
visibleRange
drawPreventAntialias
p_alignStrokeWidth:deviceWidth:scaledWidth:
p_alignStrokeHeight:deviceWidth:scaledWidth:
p_alignedFrameSpecForRowGridRange:
p_alignedFrameSpecForColumnGridRange:
enumerateMergedStrokesForGridColumn:from:to:usingBlock:
enumerateMergedStrokesForGridRow:from:to:usingBlock:
bezierPathWithContinuousCornerRoundedRect:cornerRadius:
bezierPathForGridRange:transform:inset:reoriginToZero:
mergeRangeEmptyStroke
insertBezierPath:gridRange:transform:inset:reoriginToZero:
alignedFrameForGridRange:
setWidth:
solid
dontClearBackground
color
alphaComponent
newBlendedColorWithFraction:ofColor:
clearColor
setColor:
isRoundDash
paintPath:inContext:
drawBlackAndWhite
strokeHeightOfGridRow:beginColumn:endColumn:
alignStrokeCoordinatesOfBeginPoint:endPoint:width:
strokeWidthForDrawingWithAlignedWidth:originalWidth:
drawSingleStroke:context:beginPoint:endPoint:width:strokeWidthForDrawing:strokeFrame:
enumerateMergedStrokesAndCapsForGridColumn:from:to:usingBlock:
strokeWidthOfGridColumn:beginRow:endRow:
enumerateMergedStrokesAndCapsForGridRow:from:to:usingBlock:
numberOfNonHiddenFooterRows
p_drawStrokeForGridColumn:strokeRect:clearStroke:shadowType:context:
p_drawStrokeForGridRow:strokeRect:clearStroke:shadowType:context:
p_bodyGridRange
initWithCount:atOffset:layoutDirectionIsLeftToRight:
p_topLeftCornerGridRange
p_createRowCoordinatesForGridRange:invalidRowIndex:previousCoordinates:validateSingleRow:outCoordinatesChanged:
p_extendedBodyGridRange
p_createColumnCoordinatesForGridRange:invalidColumnIndex:previousCoordinates:outCoordinatesChanged:
p_gridColumnForTableCoordinate:
p_gridRowForTableCoordinate:
p_bodyTranslationX
p_bodyTranslationY
p_tableCoordinateForX:
p_tableCoordinateForY:
p_cellTypeForGridPoint:
p_layoutOffsetForGridPoint:
p_layoutOffsetForTablePoint:
strokeWidthOfGridColumn:atRowIndex:
strokeHeightOfGridRow:atColumnIndex:
p_alignFrameSpec:
invalidateTableOffset
invalidateCoordinatesForEditingCellID:
validate:
validateCoordinateDirection
nearestRangeForLayoutRect:
contentFrameForRange:
strokeFrameForRange:
canvasFrameForCellRange:
canvasPositionForGridColumn:
canvasPositionForGridRow:
alignedStrokeFrameForCellRange:
drawStrokesInGridRange:clearStrokes:context:
setLayoutDirectionIsLeftToRight:
transformFromCanvas
setTransformFromCanvas:
setTransformToDevice:
transformFromDevice
setTransformFromDevice:
setDrawBlackAndWhite:
setDrawPreventAntialias:
setBezierPathCache:
headerRowColumnCoordinates
setHeaderRowColumnCoordinates:
bodyColumnCoordinates
setBodyColumnCoordinates:
headerColumnRowCoordinates
setHeaderColumnRowCoordinates:
bodyRowCoordinates
setBodyRowCoordinates:
invalidatedForEditingCell
setInvalidatedForEditingCell:
invalidTableOffset
setInvalidTableOffset:
invalidColumnIndex
setInvalidColumnIndex:
invalidRowIndex
setInvalidRowIndex:
cachedFrame
setCachedFrame:
cachedAlignedFrame
setCachedAlignedFrame:
cachedStrokeFrame
setCachedStrokeFrame:
cachedAlignedStrokeFrame
setCachedAlignedStrokeFrame:
mLock
_layoutDirectionIsLeftToRight
_headerColumnsRepeat
_headerRowsRepeat
_drawBlackAndWhite
_drawPreventAntialias
_invalidatedForEditingCell
_invalidTableOffset
_invalidColumnIndex
_layoutSpaceType
_invalidRowIndex
_bundle
_viewScale
_bezierPathCache
_headerRowColumnCoordinates
_bodyColumnCoordinates
_headerColumnRowCoordinates
_bodyRowCoordinates
_tableOffset
_gridRange
_cachedFrame
_cachedAlignedFrame
_cachedStrokeFrame
_cachedAlignedStrokeFrame
_transformToCanvas
_transformFromCanvas
_transformToDevice
_transformFromDevice
T{?={?=II}{?=II}},N,V_gridRange
T@"TSTCoordinateArray",&,N,V_headerRowColumnCoordinates
T@"TSTCoordinateArray",&,N,V_bodyColumnCoordinates
T@"TSTCoordinateArray",&,N,V_headerColumnRowCoordinates
T@"TSTCoordinateArray",&,N,V_bodyRowCoordinates
T@"TSTLayoutSpaceBezierPathCache",&,N,V_bezierPathCache
TB,N,V_invalidatedForEditingCell
TB,N,V_invalidTableOffset
TS,N,V_invalidColumnIndex
TI,N,V_invalidRowIndex
TB,N,V_layoutDirectionIsLeftToRight
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedAlignedFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedStrokeFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedAlignedStrokeFrame
T@"TSTLayoutSpaceBundle",R,W,N,V_bundle
Ti,R,N,V_layoutSpaceType
T@"TSTLayout",R,W,N
T@"TSTLayoutEngine",R,W,N
TB,N,V_headerColumnsRepeat
TB,N,V_headerRowsRepeat
Td,N,V_viewScale
T{CGAffineTransform=dddddd},N,V_transformToCanvas
T{CGAffineTransform=dddddd},N,V_transformFromCanvas
T{CGAffineTransform=dddddd},N,V_transformToDevice
T{CGAffineTransform=dddddd},N,V_transformFromDevice
TB,N,V_drawBlackAndWhite
TB,N,V_drawPreventAntialias
T{CGPoint=dd},N,V_tableOffset
initWithIndexesInRange:
_offset
_count
_coordinates
_average
_visibleIndices
_tableWidth
_dirtyCellsWithNoLockForSeconds:fromStartTime:
dependentsToDirtyByFromRef
startDirtyingCellRef
stopDirtyingCellRef
dependTracker
startTime
timeout
startCellRef
dirtyingInProgress
setDirtyingInProgress:
_dependTracker
_startCellRef
_dirtyingInProgress
_dirtyingLock
_startTime
_timeout
_dependentsToDirtyByFromRef
TB,N,V_dirtyingInProgress
T^v,R,N,V_dependTracker
T@"NSDate",R,N,V_startTime
Td,R,N,V_timeout
T{TSCEInternalCellReference={TSUCellCoord=ISBB}SS},R,N,V_startCellRef
willRemoveRows:tableUID:
didMergeRange:
didUnmergeRange:
p_reserve:
intersectsSet:
anyUuid
p_addUUID:
p_removeUUID:
p_addUUIDs:
p_removeUUIDs:
p_addUUIDsFromVector:
p_removeUUIDsFromVector:
initWithUUIDSet:
initWithUUID:
isSubsetOf:
setByUnionWithSet:
expandedSetWithUuid:
reducedSetMinusUuid:
expandedSetWithUuids:
reducedSetMinusUuids:
expandedSetWithUuidsFromVector:
_uuidSet
removeUUID:
addUUIDs:
removeUUIDs:
addUuidsFromSetReturningAdded:
removeUuidsFromSet:
removeUuidsFromSetReturningRemoved:
removeUuidsFromVector:
remapWithMap:
reserve:
removeLastObject
tractCount
relativeTopLeft
relativeBottomRight
setWarnWhenFormulasReferToEmptyCells:
mWarnWhenFormulasReferToEmptyCells
initWithTimeIntervalSinceReferenceDate:
defaultDateTimeFormatForLocale:
initWithExpressionNode:parenNestingLevel:argumentIndex:
initWithExpressionNode:parenNestingLevel:
tokenContextWithExpressionNode:parenNestingLevel:
tokenContextWithExpressionNode:parenNestingLevel:argumentIndex:
parenNestingLevel
argumentIndex
_expressionNode
_parenNestingLevel
_argumentIndex
T@"TSTExpressionNode",R,N,V_expressionNode
TQ,R,N,V_parenNestingLevel
TQ,R,N,V_argumentIndex
arrayWithObjects:
raiseInvalidBaseCharacterErrorForCharacter:base:
initWithBase:basePlaces:baseUseMinusSign:
initWithCreator:argInfo:translationFlags:
formulaResultForFormattedValue:context:suppressCycleCheck:formatAsPercent:
raiseEmptyArrayError
valueAtCoord:
raiseInvalidRangeUsageErrorForReference:
syntaxError
formulaResultForFormattedValueWithKnownCycleState:context:isInACycle:outErrorIsDueToCycle:formatAsPercent:
copyByConvertingColonToColonTract:
isEquivalentToFormula:context:thisContainingCell:thatContainingCell:
descriptionForLevel:
hostedDescriptionAtCell:calcEngine:hideUids:
willModifyWasCalled
didModifyWasCalled
indexIsAffected:
updatedCellRefForRewriteType:originalCellRef:
auxRowColumnInfo
tableUIDInfo
groupNodeUIDInfo
groupNodeUIDMap
hasHostCell
copyBySettingHostTableUID:hostColumnUID:hostRowUID:
XLImportDateMode
tsce_dateWithSerialNumber:dateMode:
currentThread
threadDictionary
initWithInitialCapacity:
parseFormula:calcEngine:unqualifiedReferenceTableUID:containingCell:outError:outNeedsImportRewrite:isChartFormula:isSageUpgrade:
parseFormula:calcEngine:containingCell:outError:
initWithNodeArray:translationFlags:hostTableUID:hostColumnUID:hostRowUID:
containsInvalidRef
appendExternalTableUIDs:groupByUIDs:
usesFunctionsWithDateArgs
hasUidTracts
evaluateWithContext:isInACycle:outErrorIsDueToCycle:
evaluateWithContext:
evaluateWithContextGridResult:
getCategoryReferencesWithCalcEngine:
hostedDescriptionAtCell:calcEngine:
hostedDescriptionAtCell:
sageFormulaStringForContainingCell:outHasSageUnsupportedFunctions:
copyByRewritingForTranspose:calcEngine:containingCell:outTransposeWarning:
copyByRewritingWithSpec:calcEngine:containingCell:
copyByClearingHostCell
copyBySettingTranslationFlags:
iterateWithBlock:stop:block:
copyByFreezingRefs:containingCell:
copyByThawingRefs:containingCell:
copyByConvertingColonTractToColon:
copyByRemappingOwnerUIDs:calcEngine:badRefFound:
copyByRemappingUids:rowMap:ownerMap:clearIfMissing:
copyByUpdatingLinkedTable:outfoundLinkedRef:
copyByRewritingForSageExport:targetDocumentSupportsCrossTableReferences:outshouldBakeWholeFormula:outFeaturesUsed:
copyByRewritingForSageImport:containingCell:
copyByRewritingForExcelImport:outFormulaResult:outDidModifyFormula:outFormulaReplacedForExcelCompatWarning:functionNameReplacedForExcelCompat:formulaFormatFromCell:
copyByRemovingNumberToDateCoercion:outFormulaResult:outDidModifyFormula:
copyByRewritingForExcelExport:
copyByRewritingNumberToDurationForSageImport:durationUnitLargest:
copyByOffsettingRelativeReferences:oldContainingCell:newContainingTable:offset:
copyByOffsettingRelativeReferences:
copyByRewritingGroupUid:groupByUID:
hostColumnUID
hostRowUID
_astNodeArray
_translationFlags
_hash
_hostTableUID
_hostColumnUID
_hostRowUID
Tr^{TSKUIDStruct=QQ},R,N,V_hostTableUID
Tr^{TSKUIDStruct=QQ},R,N,V_hostColumnUID
Tr^{TSKUIDStruct=QQ},R,N,V_hostRowUID
T{TSCEFormulaTranslationFlags=C},R,N,V_translationFlags
initWithContext:children:firstIndex:lastIndex:
initWithContext:identifier:symbol:firstIndex:lastIndex:
initAsCopyOf:intoContext:children:
whitespaceAfter
setWhitespaceAfter:
whitespaceBefore
setIdentifier:
recordHashesForSubexpressions:
copyByResolvingIdentifiers:hostTable:baseHostCell:forceReferenceInterpretation:symbolTable:oldToNewNodeMap:
buildASTNodeArray:hostCell:symbolTable:
exportString
identifier
_identifier
T@"NSString",&,N,V_identifier
TI,N,V_symbol
initWithType:range:validVisualRanges:styleInsertionBehavior:caretAffinity:smartFieldRange:caretIsLeadingEdge:leadingCharIndex:headCharIndex:tailCharIndex:activeTokenCharIndex:
superRange
rangeArrayWithRange:
initWithType:ranges:validVisualRanges:styleInsertionBehavior:caretAffinity:smartFieldRange:caretIsLeadingEdge:leadingCharIndex:headCharIndex:tailCharIndex:
initWithType:range:styleInsertionBehavior:caretAffinity:smartFieldRange:caretIsLeadingEdge:leadingCharIndex:
initWithType:range:styleInsertionBehavior:caretAffinity:smartFieldRange:caretIsLeadingEdge:leadingCharIndex:activeTokenCharIndex:
allowsKeyCommandCaching
activeTokenCharIndex
setActiveTokenCharIndex:
mActiveTokenCharIndex
TQ,N,VmActiveTokenCharIndex
selectionFromWPSelection:
tst_isCompatibleWithCell:
tst_isCompatibleWithCellRegion:mergeRange:
p_addRange:
p_cleanupStashedRangeIffExists
regionByMovingColumnsFromRange:toIndex:
regionByMovingRowsFromRange:toIndex:
p_gatherCellRegionViaCellRegionAddition
p_gatherCellRegionViaReducedOverlap
combineNonOverlappingCellRanges:addingOverlappingCellRanges:
moveColumnsFromRange:toIndex:
moveRowsFromRange:toIndex:
mightOverlap
setMightOverlap:
lastCellRangeAdded
setLastCellRangeAdded:
_gathererMap
_originToRangeMap
_mightOverlap
_lastCellRangeAdded
TB,N,V_mightOverlap
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_lastCellRangeAdded
managedNodeArrayWithCapacity:
malloc:
_head
_curBlock
_blockOffset
_managedNodeArrays
initWithColumn:context:
initWithColumn:forGroupBy:
initWithArchive:aggregator:
loadFromArchive:
getNextAggFormulaCoord
initWithFormulaCoord:groupNode:aggregator:
allowRegistrationOfAggFormulas
enumerateAllGroupsWithBlock:
clearAggFormulas:inOwner:
upgradeForNewAggregateTypes:inOwner:
initWithArchive:groupBy:
rebuildAggFormulas
clearAggFormulas:
_aggRoot
T@"TSTGroupBy",W,N,V_groupBy
T{TSKUIDStruct=QQ},R,N,V_columnUid
drawSwatchInRect:inContext:
p_documentRoot
swatchImage
tableHasStrongOwnership
setTableHasStrongOwnership:
tempUpgradePresetID
setTempUpgradePresetID:
_styleNetwork
_tableHasStrongOwnership
_tempUpgradePresetID
TQ,N,V_tempUpgradePresetID
T@"TSTTableStyleNetwork",C,N
TB,N,V_tableHasStrongOwnership
containsIndexesInRange:
enumerateIndexesInRange:options:usingBlock:
tsu_moveIndexesInRange:toOffset:
isIndexHidden:
setHidden:atIndex:
setVisibleIndexSet:
setHidden:atIndexes:
setHidden:inRange:
visibleIndices
numberHiddenIndicesInRange:
numberVisibleIndicesInRange:
anyHiddenIndicesInRange:
visibleIndexAfterIndex:
visibleIndexAfterAndIncludingIndex:
visibleIndexBeforeIndex:
visibleIndexBeforeAndIncludingIndex:
findNthPreviousVisibleIndex:fromIndex:
findNthNextVisibleIndex:fromIndex:
enumerateVisibleIndexesInRange:usingBlock:
moveRangeFrom:toIndex:
deleteRange:
insertRange:
visibleIndexSet
_visibleIndexSet
T@"NSMutableIndexSet",&,N,V_visibleIndexSet
index
setIndex:
mIndex
initWithTableUID:preserveFlags:
repairSpanningColumnSetting
repairSpanningRowSetting
preserveFlagsFixingInversionsForTract:absFromRelColumns:absFromRelRows:
initWithRangeRef:hostCell:
numRelativeColumns
numRelativeRows
addRelativeColumn:
addRelativeRow:
addRelativeColumnRange:
addRelativeRowRange:
removeRelativeColumnRange:
removeRelativeRowRange:
verifySpanningSettings
relativeBoundingRangeWithContainingCell:
adjustRelativeIndexesBy:
_absTractRef
_relativeColumns
_relativeRows
T{TSUPreserveFlags=C},R,N
subtotalPrecedentForTableUID:
cellDependentsOfCell:
raiseMismatchedUnitsErrorForFunctionName:
raiseDivideByZeroError
isMismatchedUnitsError
durationNotAllowedError:argumentNumber:
countForObject:
raiseNumberMinusDateError
initWithContext:styleProvider:
defaultStyleWithContext:
defaultValueForProperty:
setCGFloatValue:forProperty:
defaultTableNameShapeStyleWithContext:
networkWithContext:presetID:styleProvider:tableStyleMorphingBlock:nameStyleMorphingBlock:nameShapeStyleMorphingBlock:cellStyleMorphingBlockByStyleArea:textStyleMorphingBlockByStyleArea:
addStyle:withIdentifier:
defaultPropertyMap
tableNameStyleIDForPreset:
tableNameShapeStyleIDForPreset:
networkFromStylesheet:presetID:
setCellStyle:forTableStyleArea:
setTextStyle:forTableStyleArea:
setPresetID:
nonValidatedNetworkWithContext:presetID:styleProvider:tableStyleMorphingBlock:nameStyleMorphingBlock:nameShapeStyleMorphingBlock:cellStyleMorphingBlockByStyleArea:textStyleMorphingBlockByStyleArea:
initWithContext:styleProvider:presetID:
cellStyleForTableStyleArea:
emptyStroke
padding
rootAncestor
copyWithZone:context:
cellStyles
textStyles
propertySetWithProperties:
overridePropertyMapIsEqualTo:
removeProperties:
styleForStyleNetworkIndex:
p_saveToArchive:archiver:isPre30Alternate:
shouldSaveAlternates
alternateForVersion:
p_clearCategoryStyles
deriveCategoryCellStyleForTableStyleArea:connectedToStylesheet:
deriveCategoryTextStyleForTableStyleArea:connectedToStylesheet:
addStyle:
p_deriveCategoryCellStyleForTableStyleArea:fromCellStyle:connectedToStylesheet:
styleWithIdentifier:
sheetFill
referenceColor
hueComponent
saturationComponent
brightnessComponent
colorWithHue:saturation:brightness:alpha:
fullPropertyMap
p_deriveCategoryTextStyleForTableStyleArea:fromTextStyle:connectedToStylesheet:
p_clearPivotStyles
p_derivePivotCellStyleFromCellStyle:optionalSourceFill:brightnessShift:connectedToStylesheet:styleArea:
lightGrayColor
strokeApplyingEmphasis
strokeApplyingWidth:
p_deriveHeaderColumnPivotSeparatorAndHeaderRowPivotGroupVerticalStrokeFromTableStyle:propertyMap:returnHeaderRowPivotGroupVerticalStroke:
networkFromTheme:presetIndex:
identifiersForPresetID:
pivotTableStyleAreaForRowLevel:columnLevel:numberOfRowLevels:numberOfColumnLevels:columnIndex:
stylesInStylesheet:
dictionaryWithPreset:
initWithContext:fromDictionary:withPreset:
clearAndGenerateCategoryStylesConnectedToStylesheet:
generateCategoryStrokesInTableStyle:
generatePivotStrokesInTableStyle:
maintainPivotStrokesInTableStyle:fromTable:
clearAndGeneratePivotStylesConnectedToStylesheet:
_presetIndex
_cellStyles
_textStyles
TQ,N
_cellStyle
_textStyle
T@"TSTCellStyle",&,N,V_cellStyle
T@"TSWPParagraphStyle",&,N,V_textStyle
idOfFirstOccurence
setIdOfFirstOccurence:
_idOfFirstOccurence
T{TSUCellCoord=ISBB},N,V_idOfFirstOccurence
TQ,N,V_count
purpose
uidTractAtIndex:
setPurpose:
initWithGroupByUID:relGroupUID:absGroupUid:columnUid:aggType:groupLevel:aggrIndexLevel:preserveFlags:relativeColumn:options:
setShowGeometricAsBase:
setForceTableName:
setForceSheetName:
setForFormulaPlainText:
_suppressIdenticalEndReference
_useSymbolicNames
_allowTableName
_allowSpanningColumnReferenceBodyQualifier
_showGeometricAsBase
_quoteComponents
_forceEscaping
_forceTableName
_forceSheetName
_forFormulaPlainText
_usedSymbolicName
T{TSKUIDStruct=QQ},N,V_hostTableUID
TB,N,V_suppressIdenticalEndReference
TB,N,V_useSymbolicNames
TB,N,V_allowTableName
TB,N,V_allowSpanningColumnReferenceBodyQualifier
TB,N,V_showGeometricAsBase
TB,N,V_quoteComponents
TB,N,V_forceEscaping
TB,N,V_forceTableName
TB,N,V_forceSheetName
TB,N,V_forFormulaPlainText
TB,N,V_usedSymbolicName
p_recreateUIDs
nextHiddenStateForRowsOwnerUID
nextHiddenStateForColumnsOwnerUID
nextSortRuleReferenceTrackerOwnerUID
initForPivotDataTableWithMapper:
setNextTableUID:
sortRuleReferenceTrackerOwnerUID
hiddenStateForRowsOwnerUID
hiddenStateForColumnsOwnerUID
mergeOwnerUID
pencilAnnotationOwnerUID
categoryAggregatesOwnerUID
groupByUID
setNextHiddenStateForRowsOwnerUID:
setNextHiddenStateForColumnsOwnerUID:
setNextConditionalStyleOwnerUID:
setNextSortRuleReferenceTrackerOwnerUID:
setNextMergeOwnerUID:
setNextPencilAnnotationOwnerUID:
setNextCategoryAggregatesOwnerUID:
setNextGroupByUID:
usesAllSubOwnerUIDs
initWithFormulaOwnerUID:
initWithIdentityMapping
fullDescription
pbTableUID
categoryOwnerUID
nextCategoryOwnerUID
setNextCategoryOwnerUID:
_nextTableUID
_hiddenStateForRowsOwnerUID
_nextHiddenStateForRowsOwnerUID
_hiddenStateForColumnsOwnerUID
_nextHiddenStateForColumnsOwnerUID
_conditionalStyleOwnerUID
_nextConditionalStyleOwnerUID
_sortRuleReferenceTrackerOwnerUID
_nextSortRuleReferenceTrackerOwnerUID
_mergeOwnerUID
_nextMergeOwnerUID
_pencilAnnotationOwnerUID
_nextPencilAnnotationOwnerUID
_categoryAggregatesOwnerUID
_nextCategoryAggregatesOwnerUID
_groupByUID
_nextGroupByUID
_pbTableUID
_uidMap
_categoryOwnerUID
_nextCategoryOwnerUID
T{TSKUIDStruct=QQ},R,N,V_pbTableUID
T{TSKUIDStruct=QQ},R,N,V_categoryOwnerUID
T{TSKUIDStruct=QQ},N,V_nextCategoryOwnerUID
initWithSecondsTillAbort:
_isAborted
TB,R,V_isAborted
p_addApplicationNotification
p_removeApplicationNotification
resolverContainerMatchingName:inDocumentRoot:
resolverMatchingName:inDocumentRoot:contextResolver:
resolverMatchingNameWithContextContainer:inDocumentRoot:contextContainerName:
timeoutInterval
blockingIdentifier
signalIdentifier:
referencesToDirty
pauseRecalculationForBlock:
localVariablesEnabled
pauseEvaluationForPotentialTermination
confirmTermination
resumeEvaluationIfNotTerminated
isPotentiallyTerminating
generateRandomSeed
randomSeedFromRandomLo:hi:
splitRandomSeed:intoLo:hi:
legacyGlobalIDStringToOwnerUIDMap
documentRandomSeed
setDocumentRandomSeed:
setCurrentDate:
currentTimeZone
setCurrentTimeZone:
setCurrentDate:timeZone:markVolatilesDirty:
shouldAbortRecalculation
setXLImportDateMode:
previousLocaleIdentifier
clearPreviousLocaleIdentifier
setLoadFromFileVersion:
tablesByName
tableNameChangeDistributor
currentTableIdRemapper
setCurrentTableIdRemapper:
setDuringRollback:
applicationDidBecomeActive:
applicationWillResignActive:
setAccessController:
documentDidLoad
recalculateWithTimeout:
dirtyCellsForUpgrade
verifyTableAndBodyRangesForTable:
forwardRegisterOwnerWithOwnerUID:legacyGlobalID:
ownerForOwnerUID:
ownerForUUIDBytes:
allRefResolverOwnerUIDs
enumerateFormulaOwnersUsingBlock:
cellDependMemoryUseEstimate
clearLegacyGlobalIDs
addSubOwnerAliasesForUpgrade:
upgradeToSubOwnerUIDForOwners:
resolverForCellRef:
anyResolver
resolverForTableID:
tableResolverForTableID:
internalFormulaOwnerIDForFormulaOwnerUID:
ownerUIDForLegacyGlobalID:registeringIfNeeded:
setOwnerUIDForLegacyGlobalID:ownerUID:
uuidForTableUID:andIndex:direction:
openTransaction
closeTransaction:
updateCalculatedPrecedents:forFormula:atCellRef:withState:
setError:forCell:
clearErrorForCell:
rootCauseForErrorInCell:atRootCell:
formulaCoordsReferringToRange:fromOwner:
formulaCoordsReferringToRange:fromOwner:skipSpanning:
formulaCoordsInRange:inOwner:
allFormulaCoordsInOwner:
hasFormulaAt:
hasFormulaCellsUsingNowTodayRandom
dirtyCellCountInOwner:
dirtyCellCount
allCellsAreClean
allCellsAreCleanNonBlocking
cellIsInACycle:
cellsInACycleInOwner:
referenceWasGuaranteedCleanAtRecalcCycleStart:
rewritingMinion
setRewritingMinion:
extendTableUIDHistoryWithRewrite:
rollbackTableUIDHistoryWithRewriteInfo:
mapOwnerUID:
markCoordsDirty:inOwner:
headerStateOfTableChanged:changedRows:
headerStateOfTableChanged:
dirtyCellsForColumnRange:fromTable:tableRange:
dirtyCellsForRowRange:fromTable:tableRange:
dirtyCellsForMergingRange:forTable:headerRowRange:headerColumnRange:
markAllExternalGroupByRefsDirty:
markAllFunctionsAsDirty
hasDateTimeVolatileFunctions
hasRemoteDataFunctions
markDateTimeVolatileFunctionsAsDirty
markDateTimeVolatileFunctionsAsDirtyForCurrentDateTime
rewriteSpecStack
pushRewriteSpec:
popRewriteSpec:
shouldSendSetNowCommand
markRandomVolatileFunctionsAsDirty
markLocaleVolatileFunctionsAsDirty
markGeometryVolatileFunctionsAsDirtyInOwner:
markRemoteDataVolatileFunctionsAsDirty
markAllVolatileFunctionsAsDirty
cellContainsAFormula:
isCellReferenceDirty:
p_blockUntilRecalcIsCompleteOnNewThreadWithTimeout:
debugFlushAllDirtyReferences
beginSuppressingWillModifyCalls
endSuppressingWillModifyCalls
pauseRecalculation
pauseRecalculationSometimeSoon
resumeRecalculation
resumeRecalculationForBlock:
startRecalculation
startRecalcTaskIfNecessary
superWillModify
executeBlockWhileCalculationEngineIsNotWriting:
evaluateSynchedWithCalcEngineWithFormula:evalContext:
hasRunRecalculationALongTime
recalcTimeInSecs
clearRecalculationTimer
assertAt:nonCalcEngineException:evaluatingFormula:
remoteDataStore
setRemoteDataStore:
replaceRemoteDataKeysInterestedIn:forCell:
markRemoteDataVolatileFunctionsAsDirtyForKeys:
referenceIsValid:
refParser
setDisallowHeaderIndexingForTableUID:
clearDisallowHeaderIndexingForTableUID:
hasDisallowedHeaderIndexingForTableUID:
cellHasPrecedents:
precedentsOfCell:
aggregateTypeForCategoryRef:
cellRefsForCategoryRef:atRowUid:
unorderedCellRefsForCategoryRef:atRowUid:
valuesForCategoryRef:atRowUid:hidingActionMask:error:
valueGridForCategoryRef:atRowUid:hidingActionMask:error:
aggregateRangeRefForCategoryRef:
addCalculationStateObserver:
removeCalculationStateObserver:
addAllFormulasCleanObserver:
removeAllFormulasCleanObserver:
numberOfCellsWithFormulas
numFormulaCellsInOwner:
assertDirtyPrecedentsCountConsistency
detectAndRepairDirtyCellsAreOnLeafQueue
allFormulaOwnersAsString
allCellDependenciesAsString
cellDependenciesAsStringForOwner:
allRangeDependenciesAsString
allSpanningDependenciesAsString
verifyAllOwnersAreKnown
cellCoordinatesNeedingExcelImportForTable:
foundConsistencyIssues
shouldDelayArchiving
delayedArchivingPriority
setCppCalcEngine:
_cppCalcEngine
_isUnarchiving
_calculationWillShutDown
T^v,N,V_cppCalcEngine
T@"TSKAccessController",W,N
T@"TSKChangeNotifier",W,N
T@"NSDate",&
T@"NSTimeZone",&
T@"TSULocale",&,V_locale
T@"NSString",R
T@"<TSCEFormulaReplacing>",R,N
T@"TSCETablesByName",R
T@"TSCETablesByNameDistributor",R
T@"TSCETransaction",R
T@"TSCERewritingMinion",&,N
T@"TSCERemoteDataStore",R
T@"<TSCERefNamingProtocol>",R,&,N
T@"<TSCERefParsingProtocol>",R,&,N
T@"TSTHeaderNameMgr",R,&,N
T@"TSCENamedReferenceManager",R,N
T@"TSCERewriteTableUIDInfo",R
T@"<TSKMultiTableRemapping>",&
initWithType:groupByUid:
initWithType:groupingColumnChanges:groupByUid:
setPreviousLevel:
setUpdatedLevel:
setIsInverse:
stringForGroupByChangeType:
addRemoveOfGroupUid:
previousGroupNodeUidForUpdatedGroupNodeUid:
updatedGroupNodeUidForPreviousGroupNodeUid:
previousRelativeAncestorLevelForUpdatedAncestorCategoryLevel:numLevels:
updatedRelativeAncestorLevelForPreviousAncestorCategoryLevel:numLevels:
changeType
setChangeType:
previousLevel
updatedLevel
groupingColumnChanges
previousGroupNodeToUpdated
previousGroupNodeUids
updatedGroupNodeUids
removedGroupNodeUids
updatedGroupNodeToPrevious
_previousGroupNodeUids
_updatedGroupNodeUids
_removedGroupNodeUids
_changeType
_previousLevel
_updatedLevel
_isInverse
_groupingColumnChanges
_previousGroupNodeToUpdated
_updatedGroupNodeToPrevious
T^v,R,N,V_updatedGroupNodeToPrevious
TC,N,V_changeType
TC,N,V_previousLevel
TC,N,V_updatedLevel
TB,N,V_isInverse
T{TSKUIDStruct=QQ},R,N,V_groupByUid
T^v,R,N,V_groupingColumnChanges
T^v,R,N,V_previousGroupNodeToUpdated
T@"TSCEUIDSet",R,N,V_previousGroupNodeUids
T@"TSCEUIDSet",R,N,V_updatedGroupNodeUids
T@"TSCEUIDSet",R,N,V_removedGroupNodeUids
initWithKeyboardShown:
controlCellSelection
setControlCellSelection:
_controlCellSelection
T@"TSTTableControlCellSelection",&,N,V_controlCellSelection
mapTableWithKeyOptions:valueOptions:
cache
initWithDataStore:
i_formatForDataListKey:
i_styleForDataListKey:
cacheWithDataStore:
formatForKey:
formats
setFormats:
styles
setStyles:
_formats
_styles
T@"TSTTableDataListItemCache",&,N,V_formats
T@"TSTTableDataListItemCache",&,N,V_styles
presetAtIndex:
strokePresetListForDefaultPropertyMapWithHorizontalStroke:verticalStroke:exteriorStroke:
initWithMask:horizontalStroke:verticalStroke:exteriorStroke:
setStrokePreset:atIndex:
initWithDeprecatedArchive:unarchiver:
horizontalStroke
verticalStroke
exteriorStroke
mask
strokePresetListForDefaultPropertyMapWithFatStroke:andThinStroke:
setStroke:forPresetIndex:
presets
setPresets:
mCount
_presets
T@"NSPointerArray",&,N,V_presets
insertAtUid
setInsertAtUid:
insertOppositeUid
setInsertOppositeUid:
addCoordMapper:
uuidForIndex:
rowIndexForUuid:
columnIndexForUuid:
dstCondStyleOwnerUID
mergeRegion
mergeSource
topLeftCellCoord
mergeOriginsMap
originalCellRefForRewriteType:updatedCellRef:
isForDstTable:
srcUidForDstUid:
reverseOriginsMap
finalDstTableUID
srcRegion
viewOrderUids
finalTopRowIndex
rowOrColumnIndices
loadIndexesForTable:uidResolver:forRemoveRows:shuffleMap:
loadMergeRangesContainingFormulasInTable:calcEngine:
createAuxRowColumnInfoForMove
loadIndexesForTable:uidResolver:
prepareToRewriteWithCalcEngine:
canBeNested
loadIndexesForSrcTable:srcUidResolver:dstTable:dstUidResolver:
amendRewriteWithCalcEngine:
unloadIndexes
expandedRowColumnUuids
rewriteTypeUsesAmendRewriteSpec:
initWithRewriteType:
conditionalStylesForUndo
coordMapperForTableUID:calcEngine:
miniDescription
affectedOwnerUIDs
affectedConditionalStyleOwnerUID
tableRangeForTable:calcEngine:
adjustViewTractRef:calcEngine:containingCellRef:undoTractList:
restoreViewTractRefFromUndoTractList:calcEngine:containingCellRef:
addNestedRewrite:
nestedRewrites
willModifySrcTable:srcUidResolver:dstTable:dstUidResolver:
didModifySrcTable:dstTable:
didModifyTable:
clearTableIndexes
affectedRange
setGroupByUID:
rewriteSpecBaseToChrome
setRewriteSpecBaseToChrome:
rewriteSpecChromeToBase
setRewriteSpecChromeToBase:
setTransposedInfo:
setRowColumnInfo:
setRegionMovedInfo:
mergeInfo
setMergeInfo:
mergeOriginMovedInfo
setMergeOriginMovedInfo:
setTableUIDInfo:
setGroupNodeUIDInfo:
groupByChange
setGroupByChange:
shuffleMap
setShuffleMap:
formulasForUndo
setFormulasForUndo:
warningSetsForUndo
setWarningSetsForUndo:
setCanBeNested:
coordMapper
setCoordMapper:
srcCoordMapper
setSrcCoordMapper:
_rewriteType
_tableRange
_canBeNested
_willModifyWasCalled
_didModifyWasCalled
_transposedInfo
_rowColumnInfo
_regionMovedInfo
_mergeInfo
_mergeOriginMovedInfo
_shuffleMap
_tableUIDInfo
_groupNodeUIDInfo
_groupByChange
_formulasForUndo
_warningSetsForUndo
_conditionalStylesForUndo
_nestedRewrites
_mergeRangesContainingFormulas
_coordMappersLock
_coordMappersByTableUID
_rewriteSpecBaseToChrome
_rewriteSpecChromeToBase
_coordMapper
_srcCoordMapper
TI,R,N,V_rewriteType
T{TSKUIDStruct=QQ},N,V_conditionalStyleOwnerUID
T{TSKUIDStruct=QQ},N,V_groupByUID
T@"TSCEFormulaRewriteSpec",&,N,V_rewriteSpecBaseToChrome
T@"TSCEFormulaRewriteSpec",&,N,V_rewriteSpecChromeToBase
T@"TSCETableTransposedInfo",&,N,V_transposedInfo
T@"TSCEFormulaRewriteInfo_RowColumnInfo",&,N,V_rowColumnInfo
T@"TSCEFormulaRewrite_RegionMovedInfo",&,N,V_regionMovedInfo
T@"TSCEFormulaRewrite_RegionMergedInfo",&,N,V_mergeInfo
T@"TSCEFormulaRewrite_MergeOriginMovedInfo",&,N,V_mergeOriginMovedInfo
T@"TSCERewriteTableUIDInfo",&,N,V_tableUIDInfo
T@"TSCERewriteGroupNodeUIDInfo",&,N,V_groupNodeUIDInfo
T@"TSCEGroupByChange",&,N,V_groupByChange
T@"TSKShuffleMapping",&,N,V_shuffleMap
T@"TSCEFormulasForUndo",&,N,V_formulasForUndo
T@,&,N,V_warningSetsForUndo
TB,R,N,V_willModifyWasCalled
TB,R,N,V_didModifyWasCalled
TB,N,V_canBeNested
T@"TSCECoordMapper",&,N,V_coordMapper
T@"TSCECoordMapper",&,N,V_srcCoordMapper
setHorizontalStroke:
setVerticalStroke:
setExteriorStroke:
setMask:
mHorizontalStroke
mVerticalStroke
mExteriorStroke
mVisibleMask
T@"TSDStroke",&,N,VmHorizontalStroke
T@"TSDStroke",&,N,VmVerticalStroke
T@"TSDStroke",&,N,VmExteriorStroke
TI,N,VmVisibleMask
numberOfItems
initWithParser:
setTrailingWhitespace:
isArray
trailingWhitespace
functionSpecForFunctionName:
appendNodeArray:
makeListWithFirstElem:trailingWhitespace:isArray:parser:
arrayOrListNode:
functionNode:functionName:whitespaceAfterLabel:
_nodeArrays
_trailingWhitespace
_isArray
T@"NSString",&,N,V_trailingWhitespace
TB,R,N,V_isArray
rangeOfString:options:range:locale:
tsce_hasCaseInsensitivePrefix:withLocale:
containerNameForTable:
tableNameForTable:
dropTable:withTableName:withContainerName:
addTable:
tableForTableName:containerName:
dropTable:
renameTable:fromName:
anyTableForTableName:
_tablesByTableNameByContainerName
_tableNameChangeDistributor
T@"TSCETablesByNameDistributor",R,N,V_tableNameChangeDistributor
upgradeStylesWithBlock:
tstLoadFromArchive:unarchiver:
tstSaveToArchive:archiver:
registerPresetSourceClass:
tstRegisterPresetSourceClasses
isDynamicallyHidingRowsCols
isDynamicallyRemovingText
isDynamicallyHidingRowsCols:rowColIndex:
isDynamicallyRemovingTextOfCellID:
shallowCopyToCell:
initWithLayout:range:flags:searchFlags:
layoutRange
layoutCellID
layoutCell
modelIteratorData
setModelIteratorData:
queriedModel
setQueriedModel:
modelIteratorHasCell
setModelIteratorHasCell:
columnOrderReversed
setColumnOrderReversed:
numberOfLayoutColumns
setNumberOfLayoutColumns:
setNumberOfColumns:
setNumberOfRows:
setIsDynamicallyChangingContent:
setIsDynamicallyChangingRowOrColumnCount:
setIsDynamicallyHidingRowsCols:
setIsDynamicallyRemovingText:
layoutCellData
setLayoutCellData:
_queriedModel
_modelIteratorHasCell
_columnOrderReversed
_isDynamicallyChangingContent
_isDynamicallyChangingRowOrColumnCount
_isDynamicallyHidingRowsCols
_isDynamicallyRemovingText
_numberOfLayoutColumns
_numberOfColumns
_numberOfRows
_layoutCellID
_layoutCell
_modelIteratorData
_layoutCellData
_layoutRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},R,N,V_layoutRange
T{TSUCellCoord=ISBB},R,N,V_layoutCellID
T@"TSTCell",R,N,V_layoutCell
T@"<TSTCellIteratorData>",N,V_modelIteratorData
TB,N,V_queriedModel
TB,N,V_modelIteratorHasCell
TB,N,V_columnOrderReversed
TI,N,V_numberOfLayoutColumns
TI,N,V_numberOfColumns
TI,N,V_numberOfRows
TB,N,V_isDynamicallyChangingContent
TB,N,V_isDynamicallyChangingRowOrColumnCount
TB,N,V_isDynamicallyHidingRowsCols
TB,N,V_isDynamicallyRemovingText
T@"TSTMutableCellIteratorData",&,N,V_layoutCellData
T@"TSTLayoutEngine",R,N,V_layoutEngine
copyIntoContext:bakeModes:children:
forceReferenceInterpretationOfChildren
setFunctionEndNode:
fixStorageLanguage:
addTSTCanvasReferencesToSet:inRangeContext:withColorHelper:preferringNodesFromStorage:allVisitedNodes:
initWithObjects:
firstIndexOfSubtree
lastIndexOfSubtree
mostSpecificNodeContainingIndex:correspondingIndex:
subtreeContainsIndex:
addVariablesMatchingPrefix:forFormulaIndex:toDictionary:symbolTable:
largestCommonSubexpressionExcludingExisting:cseData:
unionSet:
addAllIdentifiersToSymbolTable:
replaceOccurrencesOfChildrenInSet:withIdentifier:symbol:
largestCommonSubexpression
eliminateLargestCommonSubexpression:withSymbolTable:newIdentifierOut:
lowestCommonAncestor:
defaultNameWithIndex:
initWithContext:identifier:firstIndex:lastIndex:
setWhitespaceAfterDelimiter:
p_eliminateLargestCommonSubexpressionWithLCA:expressions:withSymbolTable:newIdentifierOut:
initWithContext:firstIndex:lastIndex:
isOptional
setArgumentSpec:
buildASTNodeArray:hostCell:
popover
hasMenu
enumerateExpressionNodesUsingBlock:
compareFirstLastIndices:
rangeEncompassingExpressionNodesInRange:
isFunctionNode
canEliminateLargestCommonSubexpressionWithSymbolTable:
eliminateLargestCommonSubexpressionWithSymbolTable:newIdentifierOut:
setTokenAttachment:
setFirstIndex:
setLastIndex:
setWhitespaceBefore:
_argumentSpec
_tokenAttachment
_firstIndex
_lastIndex
_whitespaceBefore
_whitespaceAfter
T@"NSArray",&,N
T^v,N
T@"TSTWPTokenAttachment",W,N,V_tokenAttachment
TQ,N,V_firstIndex
TQ,N,V_lastIndex
T@"NSString",&,N,V_whitespaceBefore
T@"NSString",&,N,V_whitespaceAfter
T@"UIViewController",R,N
Ti,R,D,N
T@"NSString",R,D,N
initWithContext:calculationEngine:baseHostCell:formula:ownerUID:suppressAutomaticNamedReferenceInvalidation:
initWithCalculationEngine:expressionTree:baseHostCell:hostTable:
initWithContext:calculationEngine:viewHostCell:formula:ownerUID:suppressAutomaticNamedReferenceInvalidation:
initWithCalculationEngine:baseHostCell:hostTable:
setExpressionTree:
setInitialWhitespace:
setSyntaxError:
setEmpty:
geometricFormula
nodesToCheckForBareArgumentPlaceholders
isCategoryRef
categoryRef
resolveCategoryRef:atRowUid:inHostTable:
setCategoryRef:
refersToPivotTable
reparseWithStorage:adjustExpressionTree:
storageExceedsMaxFormulaLength:
p_fixFormula:
fixPreserveFlagsForCategoryRefInNode:
singleQuoteCharacters
doubleQuoteCharacters
quoteContextAtCharIndex:previousContext:inStorage:
parenCountAtCharIndex:unmatchedParenCount:quoteContext:inStorage:
leftParenCharacters
rightParenCharacters
expressionTree
addCharactersInString:
tsu_push:
tsu_pop
tst_hasFormulaEqualsPrefix
p_charactersToTemporarilyChopOffEndToFixSyntaxError
stringByPaddingToLength:withString:startingAtIndex:
insertAttachmentOrFootnote:range:dolcContext:undoTransaction:changeSession:
p_formulaAsTextReturningTokenValues:
leadingSingleQuoteEscapeCharacters
isFormulaEqualsCharacter:
formulaQuoteContextAtCharIndex:inStorage:
parenCountAtCharIndex:inStorage:
initWithContext:calculationEngine:baseHostCell:formula:ownerUID:
initWithCalculationEngine:viewHostCell:hostTable:
formula
hasBareArgumentPlaceholders
reparseWithStorage:
formulaDetokenizedText
canSimplify
simplify
isSyntaxError
fixupFormulas
setFixupFormulas:
formulaWasFixable
formulaFixupsShouldStick
initialWhitespace
_expressionTree
_calculationEngine
_hostInfo
_initialWhitespace
_hostCell
_syntaxError
_fixupFormulas
_formulaWasFixable
_formulaFixupsShouldStick
_empty
T@"TSCECalculationEngine",W,N,V_calculationEngine
TB,N,GisSyntaxError,V_syntaxError
T@"NSString",C,N,V_initialWhitespace
TB,N,V_fixupFormulas
TB,R,N,V_formulaWasFixable
TB,R,N,V_formulaFixupsShouldStick
T@"TSTExpressionNode",&,N,V_expressionTree
TB,N,GisEmpty,V_empty
tst_hasLeadingCharacterInSet:
characterSetWithRange:
tsu_stringByRemovingCharactersInSet:
tst_isEqualToFormulaEqualsString
tst_hasLeadingSingleQuoteEscape
tst_isOneCharacterInSet:
tst_cleanForFormulaEditor
enumerateCellStringsForRows:rowCount:usingBlock:
enumerateCellStringsUsingBlock:
tsce_p_initializeQuotes
tsce_stringByUnescapingPartialQuotedStringWithEmptyQuotedStringOK:preserveTrailingUnquotedWhitespace:
ptsce_referenceComponentsSeparatedByCharacterInSet:
tsce_replaceCharactersInSet:withString:
tsce_newStringByAddingSingleQuoteEscapesIfNecessary
tsce_stringByUnescapingSingleQuotes
tsce_isSingleQuoted
tsce_stringByUnescapingPartialQuotedString
tsce_stringByUnescapingPartialQuotedStringWithEmptyQuotedStringOK:
tsce_newStringByAddingDoubleQuoteEscapesIfNecessary
tsce_stringByReplacingTabsAndNewlinesWithASingleSpace
tsce_stringByRemovingNewlines
tsce_referenceComponentsSeparatedByPathDelimiter
tsce_referenceComponentsSeparatedByColon
tsce_referenceComponentsSeparatedBySpace
initWithPopupModel:startWithFirstItem:
choices
displayStringAtIndex:
cellValueWithLocale:
indexForValue:
asMultipleChoiceListFormat
initialValue
initWithInitialValue:multipleChoiceListFormatID:popupModel:
setPopupModel:
displayChoicesForInspector
valueForIndex:
tskMultipleChoiceListFormat
_displayChoices
_startWithFirstItem
_popupModel
T@"TSTPopUpMenuModel",&,N,V_popupModel
TB,R,N,V_startWithFirstItem
setHeight:forTextStyle:
heightForTextStyle:
textStyleReferences
setTextStyleReferences:
textStyleToFontHeight
setTextStyleToFontHeight:
_rwLock
_textStyleReferences
_textStyleToFontHeight
T@"NSMutableArray",&,N,V_textStyleReferences
T@"TSUPointerKeyDictionary",&,N,V_textStyleToFontHeight
localizedNameForArgument:ofFunction:
localizedToolTipForArgument:ofFunction:
minArguments
localizedModeToolTipForArgument:modeIndex:ofFunction:
localizedFunctionNameForLocale:
isModeEnabled:functionIndex:
_argSpec
setThresholdCellValues:
thresholdCellValues
_thresholdCellValues
_needsToUpdateFilterSetForImport
T{TSKUIDStruct=QQ},N,V_ownerUID
TB,N,V_needsToUpdateFilterSetForImport
T@"NSArray",&,N,V_thresholdCellValues
initWithContext:operatorChar:children:firstIndex:lastIndex:
operatorChar
initWithContext:children:
setOperatorChar:
_operatorChar
TS,N,V_operatorChar
randomPrecedentForTableUID:
nowPrecedentForTableUID:
todayPrecedentForTableUID:
localePrecedentForTableUID:
sheetTableNamePrecedentForTableUID:
maxArguments
insertAnyRef:
setRelativeGroupUid:
pivotRulesChangedPrecedentForTableUID:
pivotSortChangedPrecedentForTableUID:
summaryModelIsCleanPrecedentForTableUID:
initWithStrokeVisibilityMask:
strokeSelectionWithMask:
_mask
TI,R,N,V_mask
aggrIndexLevel
relativeColumn
options
initWithPurpose:
initWithTract:tableUID:preserveFlags:columnGroupLevel:rowGroupLevel:aggrIndexLevel:
addCustomFormatForUpgrade:legacyKey:
upgradedCustomFormatList:
isKeyboardShown
_keyboardShown
keyboardShown
TB,R,N,GisKeyboardShown,V_keyboardShown
initWithRegexString:caseSensitive:entireMatch:
initWithPattern:options:error:
raiseInvalidRegexError:
initWithString:caseSensitive:entireMatch:
rangeOfFirstMatchInString:
rangeOfFirstMatchInString:options:range:
rangeOfMatchInString:occurrence:matchesFound:
enumerateMatchesInString:options:range:usingBlock:
numberOfMatchesInString:options:range:
stringByReplacingMatchesInString:options:range:withTemplate:
regexMatcherWithStringMatch:caseSensitive:entireMatch:
regexMatcherWithRegexString:
rangeOfMatchInString:occurrence:
regularExpression
_regularExpression
T@"NSRegularExpression",R,N,V_regularExpression
initWithContext:number:string:firstIndex:lastIndex:
initWithContext:number:locale:firstIndex:lastIndex:
initWithContext:string:locale:firstIndex:lastIndex:
setNumber:withLocale:
number
_number
T{TSUDecimal={?=[2Q]}},R,V_number
checkoutScientificNumberFormatter
createStringWithValue:
returnScientificNumberFormatter:
prefixedUnitForString:
raiseInvalidUnitStringError:
unitIsMetric:
raiseNonMetricUnitPrefixErrorForUnitString:
dimensionForUnit:
raiseDifferentDimensionsErrorForFunctionName:
convert:fromUnit:toUnit:
hasExplicitFormatOfType:allowMismatchedSpare:
p_mostRecentlySetNumberFormatType
baseFormat
setProvidedValueTypeBeforeUpgrade
cellValueTypeDescription
setImportWarningSet:
inflateFromStorageRef:dataStore:
resolveDataListKeysForPreBNCCell:suppressTransmutation:sourceStorageVersion:
p_currentFormatIsEqualToOtherCellFormat:
compareRange:otherStorage:otherRange:options:objectComparisonBlock:
setStringValue:clearingID:shouldWrap:
setStringValue:clearingID:
setFormulaSyntaxError:clearingID:
setRichTextValue:clearingID:convertToPlaintextIfPossible:
stringFromString:locale:
stringFromDouble:locale:
stringFromDate:locale:
stringFromDurationTimeInterval:locale:
percentSymbol
asNumberFormat
durationUnitSmallest
durationUnitLargest
durationStyle
stringFromDurationTimeInterval:locale:showPrecision:
stringForEditing
defaultCustomFormatData
storageByApplyingCustomFormat:
characterStyleAttributeCount
characterCount
setFormula:
setCellStyle:clearingID:
setTextStyle:clearingID:
setConditionalStyle:clearingID:
overridesProperty:
cellFill
p_setFormatFlags:explicit:
setCellSpec:clearingID:
spareFormatOfType:allowMismatchedSpare:
applyPopupChoiceIndex:
clearSpareFormatOfType:
setFormula:clearingID:
defaultCellSpec
setDoubleValue:
isControl
p_setFormatExplicit:fromFormatType:setMostRecentlySet:
setFormat:shouldSetExplFlags:isExplicit:makeCurrent:clearingID:
p_TSTCellFormatIsANumberFormatTypeForMostRecentlySet:
p_mostRecentlySetDateFormatType
p_mostRecentlySetTextFormatType
p_TSTCellSetMostRecentlySetNumberFormat:
p_TSTCellSetMostRecentlySetDateFormat:
p_TSTCellSetMostRecentlySetTextFormat:
p_spareFormatOfType:allowMismatchedSpare:explicitOnly:
customFormatDataForValue:
useAccountingStyle
mismatchBetweenValueType:andFormatType:
setCommentStorage:clearingID:
setImportWarningSet:clearingID:
cellValueDescription
stringForCellValueType:
formatType:sharesASpareSlotWithFormatType:
hasASlotForFormatType:
upgradedBraveNewCell
initWithStorageRef:dataStore:
formulaSyntaxErrorString
valueIsStringOrNumber
dataIsReplaceable
hasEqualValueToCell:
copyJustStyleAndStrokesToCell:
clearStrokes
cellFillComparedToDefault:suppressCS:isDefault:
setCellSpecRepairingFormats:
cellSpecForDiff
setSpareFormat:isExplicit:
setCurrentFormat:flags:
p_setFormatForFormulaResult:propagation:
clearNoncurrentImplicitFormats
clearAllFormats
copyAllFormatsToCell:
hasCurrentFormat
hasFormatOfType:allowMismatchedSpare:
customFormatString
currentFormatNegativeStyle
isMostRecentlyExplicitPercent
currentFormatID
setCurrentFormatID:
customFormatID
setCustomFormatID:
baseFormatID
setBaseFormatID:
controlFormatID
setControlFormatID:
multipleChoiceListFormatID
setMultipleChoiceListFormatID:
controlFormat
multipleChoiceListFormat
_valueDouble
_valueID
_valueObject
_conditionalStyleAppliedRule
_explicitFormatFlags
_cellStyleID
_textStyleID
_conditionalStyleID
_formulaID
_currentFormatID
_numberFormatID
_currencyFormatID
_dateFormatID
_durationFormatID
_customFormatID
_baseFormatID
_controlFormatID
_multipleChoiceListFormatID
_commentStorageID
_importWarningSetID
_conditionalStyle
_cellBorder
_currentFormat
_numberFormat
_currencyFormat
_dateFormat
_durationFormat
_customFormat
_baseFormat
_controlFormat
_multipleChoiceListFormat
_commentStorage
_importWarningSet
_cellSpec
TI,N,V_cellStyleID
TI,N,V_textStyleID
TI,N,V_conditionalStyleID
TI,N,V_formulaID
TI,N,V_currentFormatID
TI,N,V_numberFormatID
TI,N,V_currencyFormatID
TI,N,V_dateFormatID
TI,N,V_durationFormatID
TI,N,V_customFormatID
TI,N,V_baseFormatID
TI,N,V_commentStorageID
TI,N,V_importWarningSetID
TI,N,V_controlFormatID
TI,N,V_multipleChoiceListFormatID
T@"TSKFormat",R,N,V_controlFormat
T@"TSKFormat",R,N,V_multipleChoiceListFormat
TC,N,V_valueType
T@"NSDate",&,N
T@"TSWPStorage",&,N
T@"TSWPStorage",R,N
T@"TSTConditionalStyleSet",&,N,V_conditionalStyle
TC,N,V_conditionalStyleAppliedRule
T@"TSTCellBorder",&,N,V_cellBorder
T@"TSWPParagraphStyle",R,N
T@"TSTCellSpec",&,N,V_cellSpec
T@"TSCEFormulaObject",&,N
T@"TSTCellSpec",R,N
TS,N,V_explicitFormatFlags
T@"TSKFormat",R,N,V_currentFormat
T@"TSKFormat",R,N,V_numberFormat
T@"TSKFormat",R,N,V_currencyFormat
T@"TSKFormat",R,N,V_dateFormat
T@"TSKFormat",R,N,V_durationFormat
T@"TSKFormat",R,N,V_customFormat
T@"TSKFormat",R,N,V_baseFormat
TS,N,V_cellFlags
T@"TSULocale",R,N,V_locale
T@"TSDCommentStorage",&,N,V_commentStorage
T@"TSTImportWarningSet",&,N,V_importWarningSet
p_addCell:
initWithContext:cell:cellUIDList:skipCellUIDListCopy:
p_cellCount
copyWithZone:copyingCells:
setCellUIDs:
cellUIDList
isOneToMany
p_cellAtIndex:inCellListArray:
cellAtIndex:
initWithCellMap:
enumerateCellsWithUIDsUsingBlock:
addCellUIDs:
p_addPrecopiedCells:
replaceCell:atIndex:
remapUIDsByColumnMap:rowMap:ownerMap:
p_copyCellsAndUUIDsFromCellMap:convertingToCellIDsWithTableInfo:
p_resolveCellIDsToUUIDsByTableInfo:
cellIDAtIndex:
p_shallowAddCell:atCellCoord:
shallowAddCell:
addCell:
addPrecopiedCell:
regionFromCellMap:withTableInfo:
initWithContext:cell:cellUIDList:
initWithContext:cell:cellIDList:
cellIDs
iterator
findCellForCellID:
findCellForCellUID:
addPrecopiedCells:andCellUIDs:
replaceCellAtIndex0:
cellIDBasedCellMapByTableInfo:
uuidBasedCellMapByTableInfo:
coordinatesForTableInfo:passingTest:
shallowCopyToCoordFormUsingMap:
cellMapMaskedByUIDs:inRows:
shallowCopy
setShallowCopy:
_cellIDs
_searchableIDMap
_searchableUIDMap
_oneToMany
_shallowCopy
T@"TSTCellUIDList",&,N,V_cellUIDs
oneToMany
TB,R,N,GisOneToMany,V_oneToMany
TB,N,V_shallowCopy
nextCellUID
nextCellAndCellUID
currentCellUID
currentCell
_cellMap
_cellUIDIterator
_index
_currentCellUID
_currentCell
trailingEmptyCellCount
lastCell
_trailingEmptyCellCount
initWithContext:functionIndex:children:firstIndex:lastIndex:
setWhitespaceAfterFunctionName:
resurrectModeTokens
removeObjectsInRange:
setInvalidFunctionName:
initWithContext:calculationEngine:uidRectRef:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:
initWithContext:calculationEngine:baseRangeRef:preserveFlags:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:
initWithReferenceStart:referenceEnd:suppressAutomaticNamedReferenceInvalidation:
setRangeWithFunction:
initWithContext:boolValue:firstIndex:lastIndex:
initWithContext:stringValue:firstIndex:lastIndex:
initWithContext:dateValue:firstIndex:lastIndex:
setDateFormat:
initWithContext:durationInterval:durationFormat:firstIndex:lastIndex:
initWithContext:children:columns:rows:firstIndex:lastIndex:
setWhitespaceAfterLet:
setWhitespaceAfterIdentifier:
setWhitespaceAfterEquals:
isFixedAtZeroRef
initWithContext:calculationEngine:categoryRef:hostCellRef:referenceColorHelper:
stackReferences
enumerateWidthsInLayers:usingBlock:
strokeWidthForGridIndex:inRange:
strokeWidthForGridIndex:outWidth:outNextWidth:
updateCacheForGridIndex:withMajorStrokes:andMinorStrokes:
lockForWriting
rwlock
setRwlock:
_indexToCacheEntriesMap
_rwlock
T{_opaque_pthread_rwlock_t=q[192c]},N,V_rwlock
tableNameSelection
_checkStructure
initWithColumnRowUIDMap:
p_mutableRowIndexesForUIDSet:notFoundUIDs:
p_mutableColumnIndexesForUIDSet:notFoundUIDs:
incrementVersionCounter
nextCellUIDsBatch:batchSize:
uidRectRefForCellTractRef:
applyMap:toRows:
_columnUidForIndex
_rowUidForIndex
_columnIndexForUid
_rowIndexForUid
_versionCounter
_copyOnWriteUIDMapper
TQ,R,N,V_versionCounter
_originalMap
usesPrePivotAggregateTypesOnly
p_compareGroupByViaOwnerIndexes:otherGroupBy:
groupBys
addGroupByInSortedOrder:
mergeChangeDistributor
unregisterFromDistributors
checkForFormulaCoordUpgrade
registerWithDistributors
setCategoryOwner:
groupByForOwnerIndex:
resetWithGroupings:categoryOwner:hiddenStates:groupBySet:
initWithGroupings:isEnabled:categoryOwner:groupByUid:ownerIndex:
initWithArchive:forCategoryOwner:unarchiver:
isPrePivotV2Compatible
encodeToArchive:archiver:backwardCompatOptions:
groupValueTupleForRowUid:atLevel:
groupValueForValue:calcEngine:
removeRowUid:forGroupValue:
insertRowUid:atRowIndex:forGroupValue:
hasEnabledGroupBys
p_willApplyCell:baseCellCoord:refreshCategoryInfo:
insertRowUids:
sortGroupBys
resetAllGroupings
verifyConnectionsWithPivotDataModel:
_baseTableUID
_lock
_groupBys
T@"TSTTableModel",W,N,V_tableModel
T{TSKUIDStruct=QQ},N,V_baseTableUID
T@"<TSCEFormulaReplacing>",&,N,V_minion
setAggNode:forFormulaCoord:
descriptionWithGroupBy:
setAccumulator:
accumulator
groupNode
_formulaCoord
_accumulator
_childrenCoordSet
_groupNode
_aggregator
T{TSUCellCoord=ISBB},R,N,V_formulaCoord
T@"TSTAccumulator",&,N,V_accumulator
T@"TSTGroupNode",W,N,V_groupNode
T@"TSTAggregator",R,W,N,V_aggregator
T@"NSMutableArray",&,N,V_children
modeNumberForLocalizedString:argumentSpecIndex:attributeMax:locale:
numArguments
initWithContext:argumentSpec:firstIndex:lastIndex:
p_resetArgumentSpecForChildren
enumerateObjectsWithOptions:usingBlock:
p_functionSpec
setFunctionNode:
setMode:
mode
isDescendantOfChild:
unsupportedFunctionNameForLocale:
insertFormulaText:includeWhitespace:unwrapped:
listSeparator
newDefaultFunctionNodeWithContext:functionIndex:
newSumNodeWithContext:children:
isEmptyFunctionNode
isMissingRequiredArgument
isInvalidFunction
whitespaceAfterLeftParen
setWhitespaceAfterLeftParen:
whitespaceAfterDelimiters
setWhitespaceAfterDelimiters:
whitespaceAfterFunctionName
invalidFunctionName
_functionEndNode
_functionIndex
_whitespaceAfterLeftParen
_whitespaceAfterDelimiters
_whitespaceAfterFunctionName
_invalidFunctionName
TS,R,N,V_functionIndex
T@"TSTFunctionEndNode",&,N
Ts,R,N
T@"NSString",&,V_whitespaceAfterLeftParen
T@"NSArray",&,N,V_whitespaceAfterDelimiters
T@"NSString",&,N,V_whitespaceAfterFunctionName
T@"NSString",&,N,V_invalidFunctionName
invalidFunction
TB,R,N,GisInvalidFunction
storeMap
p_removeRemoteDataInterest:forStore:
sourceFetchers
dataKind
p_defaultStockList
p_fetcherForDataKind:
cachedQuotes
fetchQuotesWithTickers:completion:
autoCompleteQuotesWithInput:completion:
cachedSpecifiers
updateCachedStocksIntoStore:
setOfSpecifiersContainedInSet:
insertSpecifiersFromSet:
removeSpecifiersFromSet:
mapForSpecifiersInSet:
p_canUpdateStore:
remoteDataDidUpdateValues:quotes:
allSpecifiers
coldSpecifierSet
addRemoteDataInterest:
p_localeStocks
canFetchKey:
setByIntersectingWithSet:
removeRemoteDataInterest:
offline
containsKey:
intForKey:
p_revalidateOnlineStatus
containsSpecifiersWithSymbol:
addEntriesFromDictionary:
updateWithValuesFromMap:overwriteValues:
containsSpecifiersFromSet:
p_actionMapForKeys:quotes:
setByIntersectingWithSymbolsOfSet:
sharedCoordinator
registerStore:
unregisterStore:
valueForSingleKey:
cachedQuoteForSingleSymbol:
updateKnownCachedStocksInStore:
addRemoteDataInterest:forStore:
removeRemoteDataInterest:forStore:
p_dataSourceFetcherForRemoteData:
isOnlineForDataKind:
sourceFetcherDidUpdate:withValues:quotes:
sourceFetcherDidGoOffline:forKeys:
sourceFetcherDidGoOnline:forKeys:
queue
dataKindStatus
_sourceFetchers
_storeMap
_cachedSpecifiers
_cachedQuotes
_queue
_dataKindStatus
T@"NSMutableSet",R,N,V_sourceFetchers
T@"TSUPointerKeyDictionary",R,N,V_storeMap
T@"TSCERemoteDataValueMap",R,N,V_cachedSpecifiers
T@"NSMutableDictionary",R,N,V_cachedQuotes
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"TSUIntToIntDictionary",R,N,V_dataKindStatus
topLeftCoord
compressToZeroBased
initWithValueGrid:
tst_hasCaseInsensitivePrefix:withLocale:
p_fixupNodeIfFunctionNode:
whitespaceAfterLet
whitespaceAfterIdentifier
whitespaceAfterEquals
whitespaceAfterDelimiter
newBareLetNodeWithContext:
boundSymbol
_whitespaceAfterLet
_whitespaceAfterIdentifier
_whitespaceAfterEquals
_whitespaceAfterDelimiter
T@"NSString",&,N,V_whitespaceAfterLet
T@"NSString",&,N,V_whitespaceAfterIdentifier
T@"NSString",&,N,V_whitespaceAfterEquals
T@"NSString",&,N,V_whitespaceAfterDelimiter
initWithContext:tableInfo:
initWithTableUID:ownerUID:
initWithGroupRules:withTableInfo:
removeColumnsAtSummaryIndexes:
needsFormulaReset
cellAtCellUID:
enumerateCellsUsingBlock:
setUpgradingToSubOwnerUIDs:
cellSpecForAggregateType:forColumnUID:atGroupLevel:
copyJustValueToCell:
markAllDependentsAsDirty
setCell:atCellUID:formulaReplacer:
p_setPivotCell:atCellUID:formulaReplacer:
p_setCategoryCell:atCellUID:formulaReplacer:
columnRowUID
removeCellsInColumnUid:
formatOfCellFormatKind:isExplicit:
currencyIsMostRecentlySet
enumerateCellStoragesInRange:withBlock:
p_tableStyleAreaForCellCoord:
defaultCellStyleForCellCoord:
defaultTextStyleForCellCoord:
summaryRowHeightList
labelRowHeightList
labelRowVisibilityList
cellMapForWildcardCells
setCellMap:
p_removeRows:
clearPasteboardCustomFormatMap
categoryLevelForTableStyleArea:
didCreateGroup:
willRemoveGroup:
didRemoveGroup:
formulaAtCellCoord:
hasFormulaAtCellCoord:
resetForPivotingWithRowUids:columnUids:
upgradeFormulasForGroupByUIDChange
setFormulaResultCellsWithCellMap:
insertColumnsAtIndex:metadatas:
removeCategoryColumnCellsForRows:
explicitFormatOfKind:atModelCellCoord:currencyIsMostRecentlySet:
p_RowCategoryLevelForCellCoord:isLabel:
p_ColumnCategoryLevelForCellCoord:
setLabelRowVisibility:atCategoryLevel:
currentState
runChange:withSummaryChangeState:migrationHelper:
_needsFormulaReset
_summaryCellVendor
_aggregateFormulaOwner
_groupSortOrder
_categoryColumnWidth
_aggregateFormulaOwnerUID
_summaryRowHeightList
_labelRowHeightList
_labelRowVisibilityList
T^v,R,N,V_summaryRowHeightList
T^v,R,N,V_labelRowHeightList
T^v,R,N,V_labelRowVisibilityList
TB,N,V_needsFormulaReset
T@"TSTTableDataStore",R,N,V_dataStore
T@"TSTSummaryCellVendor",R,N,V_summaryCellVendor
T@"TSTCategoryAggregateFormulaOwner",R,N,V_aggregateFormulaOwner
T@"TSTTableInfo",R,N,V_tableInfo
T@"TSTTableGroupSortOrderUID",&,N,V_groupSortOrder
T{TSKUIDStruct=QQ},N,V_aggregateFormulaOwnerUID
Td,N,V_categoryColumnWidth
initWithMessage:unarchiver:
cellMap
_definedCellMap
T@"TSTCellMap",&,N,V_cellMap
asToggleControlSpec
initWithBaseTableUID:ownerUID:
geometryPrecedentForTableUID:
userHiddenChangedPrecedentForTableUID:
formulaDefinitionPrecedentForTableUID:
groupByChangedPrecedentForTableUID:
anyHeaderNameChangedPrecedentForTableUID:
summaryModelIsCleanForSortPrecedentForTableUID:
uniqueDistinctPrecedentForTableUID:
dirtyNowVolatileCells
dirtyNowAndTodayVolatileCells
dirtyRandomVolatileCells
dirtyGeometryVolatileCells
dirtySheetTableNameVolatileCells
initWithStroke:range:order:majorStrokeLayerToken:minorStrokeLayerToken:
tokenWithStroke:range:order:majorStrokeLayerToken:minorStrokeLayerToken:
T{TSTSimpleRange=qQ},R,N
setStroke:
setRange:
setOrder:
majorStrokeLayerToken
setMajorStrokeLayerToken:
minorStrokeLayerToken
setMinorStrokeLayerToken:
_order
_stroke
_majorStrokeLayerToken
_minorStrokeLayerToken
_range
T@"TSDStroke",&,N,V_stroke
T{TSTSimpleRange=qQ},N,V_range
Ti,N,V_order
T@"<TSTStrokeLayerStrokeAndRange>",&,N,V_majorStrokeLayerToken
T@"<TSTStrokeLayerStrokeAndRange>",&,N,V_minorStrokeLayerToken
majorStrokeLayer
startingIndex
minorStrokeLayer
nextStrokeAndRange:
p_findStrokeAndRangeAtIndex:highOrderToken:updatingLowOrderToken:lowOrderLayer:
isPortalStroke
findWidthAndRangeAtIndex:
nextWidthAndRange:
enumerateStrokesUsingBlock:
appendStroke:inRange:order:
insertStroke:inRange:order:
setMajorStrokeLayer:
setMinorStrokeLayer:
_majorStrokeLayer
_minorStrokeLayer
T@"TSTStrokeLayer",&,N,V_majorStrokeLayer
T@"TSTStrokeLayer",&,N,V_minorStrokeLayer
currencySymbolForCurrencyCode:
tst_selectionForImplicitlyEditingWithFormatType:percentSymbol:currencySymbol:adjustSelectionForCurrencyOrPercentSymbols:
selectionWithRange:
attributeArrayForKind:
tst_selectionForImplicitlyEditingCellWithFormat:adjustSelectionForCurrencyOrPercentSymbols:
tst_tableInfo
insertSpecifier:
initWithValue:
mValue
raiseUnitsNotAllowedErrorForFunctionName:argumentNumber:
raiseSignsMustMatchErrorForFunctionName:
raiseMismatchedCurrenciesErrorForFunctionName:
raiseArgumentEqualsToZeroErrorForFunctionName:argumentNumber:
raiseNumberSmallerThanZeroError
raiseNumberErrorForFunctionName:
raiseMultipleDurationsErrorForFunctionName:
raiseMismatchedMaxUnitsError
raiseOutOfBoundsArgumentErrorForArgument:functionName:lowerBound:lowerBoundInclusive:
raiseOutOfBoundsArgumentErrorForArgument:functionName:upperBound:upperBoundInclusive:
raiseNotEnoughInputsErrorForFunctionName:argumentNumber:required:
raiseRangeSizeMismatchErrorForFunctionName:
raiseDifferentNumberOfElementsErrorForFunctionName:
raiseEmptyArgumentError
lock
setFormulaCoord:
hasObjectForKey:
precedentsWithCalcEngine:hostOwnerUID:
initWithSpanningRangeRef:
initFromExpandedArchive:
initWithTrackedReferenceTSPObjectDeprecated:
beginTrackingReferenceWithCellRef:calcEngine:
beginTrackingReferenceWithSpanningRef:calcEngine:
_trackedRefsLock
_trackedReferences
_nextEmptyTrackedReferencesIndex
initWithUTF8String:
aggregateTypeForAggregateLabel:locale:
tsu_isSingleContiguousRange
initWithBool:
dataType
durationValue
durationUnits
initWithNumber:
duration
_decimal
_dataType
_units
_year
_month
_day
TC,R,N,V_dataType
T@"NSString",R,N,V_string
T@"NSDate",R,N
Tq,R,N,V_year
Tq,R,N,V_month
Tq,R,N,V_day
T@"NSNumber",R,N
T{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB},R
setNumber:
isStringValueInList:
underlyingDecimalValue
isNumberValueInList:locale:
isDateValueInListYear:month:day:
isBoolValueInList:
isDurationValueInList:
setRelativeCellRef:
initWithRelativeCellRef:
relativeCellRef
hasCategoryRef
setViewTractRef:
hasViewTractRef
cellRefForHostCoord:
uidRectRef
baseCellRef
crossTableRef
setBaseCellRef:
initWithBaseCellRef:preserveFlags:
cellRef
setBaseCellRef:preserveFlags:
dataList
initWithDataList:
hasRelativeCellRef
uidTractList
preserveColumn
preserveRow
needsFormulaRewriting
formulaCreatorForPredArg0UsingLinkedRef:useColumnRef:
formulaCreatorForPredArg
numberValue
defaultPredicateArg
setNumberValue:
isCellValueInList:
convertToRelativeRefIfPossible
setBaseCellRef:preserveColumn:preserveRow:
initWithBaseCellReference:preserveColumn:preserveRow:
cellReference
setBaseCellReference:
setBaseCellReference:preserveColumn:preserveRow:
setDurationValue:
setDurationUnits:
isEqual:atHostCoord:
rewriteWithContext:forArgAt:usingLinkedRef:useColumnRef:hostCellRef:rewriteBlock:
hostCellCoord
setHostCellCoord:
_categoryRef
_viewTractRef
_hostCellCoord
_baseCellRef
_dataList
_uidTractList
_relativeCellRef
_hasRelativeCellRef
_type
_listItemsSet
TC,R,N,V_type
T@"TSTFormulaPredArgData",R,N,V_data
T@"NSNumber",&,N
T@"NSString",C,N
TB,R,N,V_hasRelativeCellRef
T@"TSCECategoryRef",&,N
T@"TSCEViewTractRef",&,N
T@"TSCEUndoTractList",&,N,V_uidTractList
T@"TSTUIDRectRef",R,N
T{TSUModelCellCoord={TSUCellCoord=ISBB}},N,V_hostCellCoord
columnHiddenStateExtent
initWithArchive:unarchiver:forHiddenStatesOwner:
registerHiddenStates:baseOwnerUID:
hiddenStatesByExtentUid:
unregisterHiddenStates:
willChangeExtentUids:
didChangeExtentUids:
_hiddenStatesByRowExtentUuid
_hiddenStatesByColumnExtentUuid
forallRefs:
coordinate
invalidCellRef
initWithCellCoord:tableUID:
initWithCellCoord:tableID:
tableID
_cellRef
T{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}},R,N,V_cellRef
T@"NSUUID",R,&,N
invalidRangeRef
initWithRangeCoord:tableUID:
initWithRangeCoord:tableID:
initWithRangeRefRect:tableID:
rangeCoord
_rangeRef
T{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}},R,N,V_rangeRef
T{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}},R,N
setValue:
TB,N,V_value
mapIndex:
initWithUids:
initWithUids:atIndexes:
loadIndexesForTable:isRows:shuffleMap:
uidsForIndexes:
indexSetBySubtractingOurIndexesFromIndexSet:
uids
_uids
_indexes
_indexesForUids
_uidsForIndexes
_viewOrderUids
Tr^v,R,V_uids
Tr^v,R,V_viewOrderUids
T@"NSIndexSet",R,V_indexes
initWithRange:orderedUuids:offset:
orderedUuids
offset
setOffset:
_orderedUuids
T{_NSRange=QQ},R,V_range
Tr^v,R,V_orderedUuids
TI,V_offset
reverseMapIndex:
orderedUuidsForRange:inTable:areRows:shuffleMap:
initWithFormulaOwnerUID:uuids:areRows:
offsetForRowIndex:
offsetForUpdatedRowIndex:isRemoveRows:
uuidsInRange:
initWithTableUID:condStyleOwnerUID:groupByUID:uuids:atIndexes:areRows:
tableRange
coordRangesForInsertRemove
setAuxRowColumnInfo:
useWholeTableForInsertionDependencies
setUseWholeTableForInsertionDependencies:
_rowOrColumnUids
_rowOrColumnUuids
_isRows
_rangeEntries
_auxRowColumnInfo
_expandedRowColumnUuids
_insertAtUid
_insertOppositeUid
_useWholeTableForInsertionDependencies
Tr^{TSKUIDStruct=QQ},R,N,V_tableUID
Tr^{TSKUIDStruct=QQ},R,N,V_conditionalStyleOwnerUID
Tr^{TSKUIDStruct=QQ},R,N,V_groupByUID
TB,R,N,V_isRows
T@"TSCEFormulaRewrite_Uids",R,N,V_rowOrColumnUids
Tr^v,R,N,V_rowOrColumnUuids
T@"TSCEUIDSet",R,N,V_expandedRowColumnUuids
T@"TSCEFormulaRewriteInfo_RowColumnInfo",&,N,V_auxRowColumnInfo
TB,N,V_useWholeTableForInsertionDependencies
T{TSKUIDStruct=QQ},N,V_insertAtUid
T{TSKUIDStruct=QQ},N,V_insertOppositeUid
whitespaceBeforeFirstChild
setWhitespaceBeforeFirstChild:
_dimensions
_whitespaceBeforeFirstChild
T{TSCEGridDimensions=II},R,V_dimensions
T@"NSString",&,V_whitespaceBeforeFirstChild
T@"NSArray",&,V_whitespaceAfterDelimiters
raiseEmptyArgumentSpecificErrorForArgumentNumber:
initWithValues:gridKind:isFlattened:
initWithGrids:
currencyCodeForValue:
p_recalculateMergedFormatWithGroupBy:
_rowLookupKeysForFormat
_noFormatMergingNeeded
_upgradeRowUidsForFormat
_cellValue
T@"TSCECellValue",R,N,V_cellValue
initWithInfo:frame:
isLayingOutIntoTarget
setCacheIsValid:
cacheIsValid
setCachedCellWraps:
setCachedVerticalAlignment:
setCachedParagraphAlignment:
setCachedMergeRange:
setCachedAutoSizeFlags:
setCachedCellStyle:
setCachedTextStyle:
setCachedPadding:
invalidateForPageCountChange
isDynamicallyChangingAvailableSpaceForContainedChild
repClassOverride
setCachedCellID:
cachedMaskSpillRange
_cachedCellWraps
_cacheIsValid
_cachedVerticalAlignment
_cachedCellID
_cachedCellStyle
_cachedTextStyle
_cachedParagraphAlignment
_cachedAutoSizeFlags
_cachedPadding
_cachedMergeRange
_cachedMaskSpillRange
_cachedMaskRect
_cachedAutosizedFrame
T{TSUCellCoord=ISBB},N,V_cachedCellID
T@"TSTCellStyle",&,N,V_cachedCellStyle
T@"TSWPParagraphStyle",&,N,V_cachedTextStyle
TB,N,V_cachedCellWraps
Ti,N,V_cachedVerticalAlignment
Tq,N,V_cachedParagraphAlignment
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_cachedMergeRange
TQ,N,V_cachedAutoSizeFlags
T@"TSWPPadding",&,N,V_cachedPadding
TB,N,V_cacheIsValid
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedMaskRect
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_cachedMaskSpillRange
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedAutosizedFrame
tokenizeFormulaStringLiterals
T@"NSString",&,N,V_value
pruneAgainstTable:
enumerateCellUIDRangesUsingBlock:
enumerateCellUIDUsingBlock:
_cellUIDRangeList
initWithContext:asBlank:firstIndex:lastIndex:
isBlank
setIsBlank:
_isBlank
T@"NSDate",&,N,V_value
TB,N,V_isBlank
T@"NSString",&,N,V_dateFormat
p_convertCategoryRefToRelativeForHostCell:
initWithContext:calculationEngine:uidRectRef:categoryRef:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:
p_expandedViewRangeRefForViewRangeRef:forLabelRowsInTable:
p_singleCategoryRefForViewRangeRef:rangeContext:calculationEngine:hostCellRef:
isRangeExpression
hostCellRef
referenceColorHelper
p_resetMenu
p_boundingViewRangeRef
isSpanningCategorySummaryRef
p_spanningCategoryRefForViewRangeRef:groupByUid:categoryLevel:calculationEngine:
rangeContext
p_rangeRef:isContainedWithinSummaryAndLabelRowsInTable:
p_cellRangeForSingleCategoryRefInViewRangeRef:inTable:rangeContext:
p_categoryRefViewTractRef
isValidCategoryRef:
viewCellTractRefForCategoryRef:atRowUid:
isSingleColumnSpanningReference
isSingleRowSpanningReference
isCategorySummaryRef
isSpanningCategoryRef:
isRangeWithFunction
p_subregionForRange:rangeContext:
referenceAsStringWithContext:
convertCategoryRefToRelativeAncestorUid:atRowUid:inHostTable:
p_buildASTNodeArray:forCoord:preserveFlags:hostCell:
preserveFlagsForReference:calcEngine:
initWithContext:calculationEngine:viewRangeRef:preserveFlags:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:
initWithContext:calculationEngine:chromeRangeRef:preserveFlags:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:
viewBoundingBox
viewRangeRefDeprecated
categoryRefTableUID
isNonSpanningRangeExpression
setIsBlankForKeyboardInsertion:
isResizable
subregionForReference:range:
subregionForRange:
processChanges:forChangeSource:
setHostCellRef:
setRangeContext:
isBlankForKeyboardInsertion
suppressAutomaticNamedReferenceInvalidation
hasCachedIsValidReference
setHasCachedIsValidReference:
cachedIsValidReference
setCachedIsValidReference:
_refString
_formulaPlainText
_rangeContext
_rangeWithFunction
_isBlankForKeyboardInsertion
_suppressAutomaticNamedReferenceInvalidation
_isCategoryRef
_hasCachedIsValidReference
_cachedIsValidReference
_uidRectRef
_referenceColorHelper
_hostCellRef
T@"TSKDocumentRoot",R,N
T@"TSKChangeNotifier",R,N
TB,N,V_hasCachedIsValidReference
TB,N,V_cachedIsValidReference
T@"TSTUIDRectRef",R,N,V_uidRectRef
T{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}},N,V_hostCellRef
T{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}},R
TC,N,V_rangeContext
rangeWithFunction
TB,N,GisRangeWithFunction,V_rangeWithFunction
TB,N,V_isBlankForKeyboardInsertion
TB,R,N,V_suppressAutomaticNamedReferenceInvalidation
TB,R,N,V_isCategoryRef
T@"TSCECategoryRef",&,N,V_categoryRef
T@"TSTReferenceColorHelper",&,N,V_referenceColorHelper
renderRating:intoContext:rect:showDots:color:useMinimalSpace:
p_newStarPath:
renderRating:intoContext:rect:showDots:color:
initWithContext:tableInfo:pencilAnnotationStorage:
UUIDString
table
cellRangeForAnnotation:
uuid
T@"<TSKPencilAnnotationStorage>",R,N
setTable:
_cellRange
_pencilAnnotationStorage
_table
T@"TSTTableInfo",W,N,V_table
T@"TSDPencilAnnotationStorage",R,N,V_pencilAnnotationStorage
addRect:fromCoord:
initWithOwnerId:context:
numRangeRecords
removeRect:fromCoord:
containsFromCoord:
containsRect:fromCoord:
removeRectsForFromCoord:
enumerateAllRangesForFromCoord:usingBlock:
enumerateAllRanges:
toInternalOwnerID
_toInternalOwnerID
_fromCoordToReferRect
TS,R,N,V_toInternalOwnerID
raiseTooManyArguments:maximum:provided:
raiseInvalidArgumentPairingsErrorForFunctionName:hasInitialUnrelatedArgument:
raiseNoConditionIsTrueErrorForFunctionName:
UIDsForRange:isRows:
addToExcludedTractUids:isRows:
raiseUnknownFunctionErrorForString:
timePortionOfDateTimeFormatString:
raiseInvalidTokenInFormulaError
initWithValues:gridKind:isFlattened:dimensions:
preferredTypeForArgumentIndex:
durationInterval
setDurationInterval:
setDurationFormat:
setBlank:
_blank
_durationInterval
Td,N,V_durationInterval
T@"TSKDurationFormat",&,N,V_durationFormat
blank
TB,N,GisBlank,V_blank
localeSpecificStorageForKey:
setLocaleSpecificStorage:forKey:
functionLocalizationDictionary
dictionaryWithCapacity:
_localizedStringFromArgumentsTable:
localizedFunctionCategoryDictionary
localizations
pathForResource:ofType:inDirectory:forLocalization:
dictionaryWithContentsOfFile:
loadLocalizedStrings
localizedTrueStrings
localizedFalseStrings
localizedNameForFunction:
localizedCompare:toString:
localizedNamesForFunctions:
functionNameForLocalizedString:
supportedFunctions
localizedStringIsTrue:
localizedStringIsFalse:
localizedFunctionNameForMenuTag:
localizedToolTipForFunction:
localizedCategoryForFunction:
localizedCategoryArray
allLocalizedFunctions
localizedLabelForShowAsType:
p_invalidate
numberWithShort:
bakedValue
argumentSpecForFunctionIndex:argumentIndex:
modes
argumentName
_detokenizedText
_mode
Ts,N,V_mode
tsce_appendSpaces:
setYear:
initWithCalendarIdentifier:
timeZoneWithName:
setTimeZone:
dateFromComponents:
initWithTimeInterval:sinceDate:
setHour:
setMinute:
hour
minute
tsce_mapToDouble
createHarmonizedDecimalFormatterOfStyle:
setFormat:
setMinFractionDigits:maxFractionDigits:
usEnglishLocale
initWithCalendarIdentifier:timeZone:
raiseCurrencyNotAllowedErrorForFunctionName:argumentNumber:
addToIncludedUidsTractColumnUid:rowUid:
UIDsForIndexes:isRows:
p_strokeTypeForColumn:
strokeLayerForStrokeType:
p_strokeTypeForRow:
strokeTypeToLayerMap
strokeLayerStackForStrokeType:
strokeTypeToLayerStackMap
defaultsOnlyStrokeLayerStack
replaceDefaultStrokeLayerWith:
validateGeometry
changeDescriptor
strokeLayer
p_updateStrokeLayer:forColumnStrokeType:
p_updateStrokeLayer:forRowStrokeType:
strokeProvider
applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:
p_headerColumnSeparatorColumnRangeIsValid
p_headerRowSeparatorRowRangeIsValid
strokeLayerStackForColumn:
strokeLayerStackForRow:
setStrokeProvider:
tableProvider
setTableProvider:
setStrokeTypeToLayerMap:
setStrokeTypeToLayerStackMap:
headerSideBorderColumnRange
setHeaderSideBorderColumnRange:
headerColumnSeparatorColumnRange
setHeaderColumnSeparatorColumnRange:
footerColumnSeparatorColumnRange
setFooterColumnSeparatorColumnRange:
bodySideBorderColumnRange
setBodySideBorderColumnRange:
topBorderRowRange
setTopBorderRowRange:
headerRowSeparatorRowRange
setHeaderRowSeparatorRowRange:
footerRowSeparatorRowRange
setFooterRowSeparatorRowRange:
bottomBorderRowRange
setBottomBorderRowRange:
_isValid
_strokeProvider
_tableProvider
_strokeTypeToLayerMap
_strokeTypeToLayerStackMap
_headerSideBorderColumnRange
_headerColumnSeparatorColumnRange
_footerColumnSeparatorColumnRange
_bodySideBorderColumnRange
_topBorderRowRange
_headerRowSeparatorRowRange
_footerRowSeparatorRowRange
_bottomBorderRowRange
T@"<TSTTableHiddenRowColumnProviding><TSTTableInternalGeometryProviding>",W,N,V_tableProvider
TB,N,V_isValid
T@"NSPointerArray",&,N,V_strokeTypeToLayerMap
T@"NSPointerArray",&,N,V_strokeTypeToLayerStackMap
T{_NSRange=QQ},N,V_headerSideBorderColumnRange
T{_NSRange=QQ},N,V_headerColumnSeparatorColumnRange
T{_NSRange=QQ},N,V_footerColumnSeparatorColumnRange
T{_NSRange=QQ},N,V_bodySideBorderColumnRange
T{_NSRange=QQ},N,V_topBorderRowRange
T{_NSRange=QQ},N,V_headerRowSeparatorRowRange
T{_NSRange=QQ},N,V_footerRowSeparatorRowRange
T{_NSRange=QQ},N,V_bottomBorderRowRange
T@"<TSTTableStrokeProviding>",W,N,V_strokeProvider
initWithValueVector:dimensions:
firstValue
valueAt1DIndex:
getHidingActionForRows:
subGridAtGridCoord:width:height:
_valueGrid
_gridKind
_isFlattened
clearResolver
addUidCoord:atRunningLevel:
uuidCoordAtRunningLevel:
_uidCoordsPerRunLevel
addUidCoord:tupleForCoord:atRunningLevel:
uuidCoordForGroupTuple:runningLevel:
_uidCoordsPerTuple
uuidCoordAtIndex:templateTuple:runningLevel:
getUidCoordforRunningAggregate:tupleForCoord:newUidCoord:addNewUidCoordEvenIfNotFound:inContext:
_cellValues
_uidCoords
initWithGroupBySet:
isMissingRunningTotalFieldForAggIndex:
getPreviousUidCoordForAggIndex:fromNewUidCoord:addNewUidCoordEvenIfNotFound:
_groupBySet
_runAggrForAggIndex
_valuesForRunningAggregatePerRunDirectionUid
T@"TSTGroupBySet",R,N,V_groupBySet
availableCurrencyCodes
initWithInt:
unitForString:
unitPrefixForCharacter:
binaryUnitPrefixForChars::
multiplierForUnitPrefix:
initialize
canonicalUnitForDimension:
pivotTableUid
_functionNode
T@"TSTFunctionNode",N,V_functionNode
_indexMap
initFromCell:useAllSpareFormats:
initFromCell:useAllSpareFormats:forceNoContent:suppressApplyValue:applySpareFormatOnly:
formatAndValueFromCell:useAllSpareFormats:
p_copyStorage:
richTextOrErrorTextStorageValue
copyForApplyingNoContentWithSuppressApplyValue:
p_formatForFormatType:
initWithBoolean:locale:
durationUnitLargestWithTimeInterval:
formatType:isSameCellFormatKindAs:
cellFormatKindForValueType:
formatAndValueFromCell:useAllSpareFormats:forceNoContent:
formatAndValueFromCell:useAllSpareFormats:suppressApplyingValue:
formatAndValueFromRichTextCell:updatingStorageWithBlock:
formatAndValueFromCell:applySpareFormatOnly:
initFromPropertyCommandMessage:unarchiver:
saveToPropertyCommandMessage:archiver:
copyForApplyingNoContent
copyForNotApplyingValue
isFormulaSyntaxError
isApplySpareFormatOnly
hasStringContentMatchingCell:
applyToCell:
_useAllSpareFormats
_suppressApplyValue
_applySpareFormatOnly
_spareFormatType
_boolValue
_decimalValue
_objValue
_formattedValue
_formattedRichTextStorage
_explicitFlags
_cellFormatKind
_booleanFormat
_textFormat
T@"NSDate",R,C,N
T{TSUDecimal={?=[2Q]}},R,N
T@"NSString",R,C,N
raiseInvalidFrequencyErrorForFunctionName:argumentNumber:
raiseInvalidTypeErrorForFunctionName:argumentNumber:
raiseOnlyPositiveOrNegativeErrorForFunctionName:
raiseNumberDoesNotConvergeWithEstimateErrorForFunctionName:
raiseNegativeReceivedAmountError
raiseDifferentNumberOfDataPointsErrorForFunctionName:
raiseTooFewDataPointsErrorForFunctionName:
raiseDateEarlierThanStartingDateErrorForFunctionName:
raiseNumberDoesNotConvergeErrorForFunctionName:
cacheWidth:ofColumn:
widthOfColumn:handleCacheMissUsingBlock:
generateWidthHeightCollection
widthHeightCollections
setWidthHeightCollections:
_columnToWidth
_widthHeightCollections
T@"NSMutableArray",&,N,V_widthHeightCollections
isBadRef
addCellCoord:referringToTableUID:forColumnRowUuid:
addCellCoord:referringToTableUID:
removeCellCoord:referringToTableUID:forColumnRowUuid:
removeCellCoord:referringToTableUID:
getCellRefs:referringToOwner:
_stringForInternalCellRef:
addCellCoord:referringToCategoryRef:
removeCellCoord:referringToCategoryRef:
removeCellCoord:
getCellRefs:referringToOwners:
getAllCellRefs:referringToOwnerUID:
getCellRefs:referringToOwnerUID:referringToUuids:
initFromArchive:ownerUID:
unpackAfterUnarchive
_coordSetsReferringToTable
_coordSetsReferringToUuidInTable
_uuidsByCoord
p_referenceNodeFromTractRef:
pivotSourceRangeNameWithTractRef:
p_ensureHiddenStatesExistsWithPivotDataTable:
pivotOptionsForUID:
emptyOptions
p_resetHiddenGrandTotals
p_formulaForCellCoord:runningTotalContext:
p_setEmptyPivotTableLabels
p_setPivotHeaderCellsResettingPivotHidden:preservingStyles:
p_resetSummaryFormulasForRunningTotalsOnly:preservingStyles:
clearAllPivotHiddenAndInvalidate:
invalidateAllCollapsed
hideColumnsAtIndexes:forAction:invalidate:
showColumnsAtIndexes:forAction:invalidate:
hideRowsAtIndexes:forAction:invalidate:
showRowsAtIndexes:forAction:invalidate:
groupingTypeIsAnyDateType:
shortStringForGroupingType:locale:
clearAllPivotHiddenAndFiltered:
p_resetAllHiddenTotals
hideTotals
p_resetHiddenTotalsForGroupingColumnUid:hideTotals:
enumerateOptionsUsingBlock:
enclosingGroupNameForRowIndex:level:
enclosingGroupNameForColumnIndex:level:
p_resetSortingStructures
p_sortRowsInMode:sortDirection:columnIndex:level:aggregateIndex:resetLabels:
p_commitSort
p_sortColumnsInMode:sortDirection:rowIndex:level:aggregateIndex:resetLabels:
p_sortFullTable:
sortByGrandTotal
sortingAggregateRuleUid
sortDescending
initWithViewIndex:direction:
mappingForSortingRows:withRules:
isBlankGroupUid:
mappingForSortingColumns:withRules:
setTemporaryOrder:forDimension:
p_commitSortAsync
registerWithCalcEngine:forTableModel:baseOwnerUID:
linkToCalcEngine:forTableModel:
pivotSourceBodyReferenceEmbeddedInFormula
pivotSourceHeaderTract
pivotSourceBodyUidTract
groupingColumnOptionsMapCopy
pivotOptionsForGroupingColumn:
pivotOptionsForGroupingColumnUid:
pivotOptionsForColumnGroupsAtLevel:
groupingColumnUidExists:
setPivotOptions:groupingColumnUid:forSortingOptions:redoSort:
isHidingGrandTotalColumns
setHidingGrandTotalColumns:
isHidingGrandTotalRows
setHidingGrandTotalRows:
resetCellsForNewPivotOrder
rewriteForPaste
columnGroupLevelForHeaderRow:
rowGroupLevelForHeaderColumn:
sortRowsByColumnIndex:level:aggregateIndex:sortDirection:
sortColumnsByRowIndex:level:aggregateIndex:sortDirection:
filteringChanged:forDimension:
pivotRowUIDs
pivotColumnUIDs
pivotDataRefreshTimestamp
pivotDataRefreshUID
pivotRowColumnRuleChangeUID
setPivotRowColumnRuleChangeUID:
pivotAggregateRuleChangeUID
setPivotAggregateRuleChangeUID:
shouldSkipNextAsyncSort
setShouldSkipNextAsyncSort:
_groupingColumnOptionsMap
_sortedColumnUids
_sortedRowUids
_resetHeaderLabelsAfterSort
_invalidateAfterAsyncSort
_autoImplicitSort
_shouldSkipNextAsyncSort
_isHidingGrandTotalColumns
_isHidingGrandTotalRows
_isEmptyPivot
_formulaStore
_pivotSourceTableName
_pivotDataRefreshTimestamp
_pivotSourceTableUID
_pivotDataRefreshUID
_pivotRowColumnRuleChangeUID
_pivotAggregateRuleChangeUID
_pivotRowUIDs
_pivotColumnUIDs
TB,R,N,V_isEmptyPivot
T@"TSTTableModel",R,N,V_tableModel
T@"TSTPivotGroupingColumnOptionsMap",R,N
T@"TSTFormulaStore",R,N,V_formulaStore
T{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}},R,N,V_pivotRowUIDs
T{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}},R,N,V_pivotColumnUIDs
T{TSKUIDStruct=QQ},N,V_pivotSourceTableUID
T@"NSString",&,N,V_pivotSourceTableName
Td,N,V_pivotDataRefreshTimestamp
T@"TSCECellTractRef",&,N
T@"TSTFormula",R,N
T{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}},N
T{TSKUIDStruct=QQ},N,V_pivotDataRefreshUID
T{TSKUIDStruct=QQ},N,V_pivotRowColumnRuleChangeUID
T{TSKUIDStruct=QQ},N,V_pivotAggregateRuleChangeUID
TB,N,V_shouldSkipNextAsyncSort
tableLayout
maskRect
recursivelyDrawInContext:keepingChildrenPassingTest:
masksToBounds
addTractAtFront:
mainBundle
stringWithCString:encoding:
setProblemExpressionString:
raiseUnsupportedFeatureError
filterFormulaCoordinateForType:columnOrRowIndex:
initWithHiddenStatesOwner:forRows:
initWithHiddenStatesOwner:shouldRegister:
loadIndexesFromTable:
showAtViewIndex:forAction:
hideAtViewIndexes:forAction:
invalidateForChangingIndexes:isRow:forTable:
showAtViewIndexes:forAction:
hideAtBaseIndex:forAction:
showAtBaseIndex:forAction:
mutablePivotHiddenIndexes
clearAllPivotHidden
hidingActionForViewIndex:
hidingActionForBaseIndex:
indexesOfHiddenInRange:
indexesOfUserHiddenInRange:
indexesOfFilteredInRange:
indexesOfVisibleInRange:
indexesOfUserVisibleInRange:
indexesOfVisibleIndexesInIndexes:
indexesOfCollapsedInRange:
numberOfHiddenInRange:
numberOfUserHiddenInRange:
anyHiddenInRange:
anyHiddenInRange:forAction:
enumerateColumnRangesUsingBlock:
hasHiddenAtIndex:
indexOfVisibleBeforeIndex:
indexOfVisibleBeforeAndIncludingIndex:
indexOfVisibleAfterIndex:
indexOfVisibleAfterAndIncludingIndex:
numberOfHiddenInBaseRange:
indexesOfHiddenInBaseRange:
numberOfUserHiddenInBaseRange:
syncUpHiddenStateFormulaOwnerUIDs
setupAfterUnarchive
setHiddenStateExtentUid:
setGroupUID:asCollapsed:
collapsedGroupUids
copyCollapsedStateToUpdatedGroupUids:dimension:
pruneCollapsedGroupsInDimension:
mutateFormulaFiltersWithTable:usingBlock:
dirtyFilterStateForHeaders
dirtyFilterStateForFooters
anyCollapsed
anyHidden
numberOfHidden
numberOfUserHidden
insertBaseRange:
deleteBaseRange:withUids:
moveViewRangeOnlyFrom:toIndex:
moveBaseRangeFrom:toIndex:
swapBaseIndex:withIndex:
mutableUserHiddenIndexes
hiddenOrCollapsedIndexes
initWithFilterRules:type:context:
filterCoordTypeForFilterCoordinate:
columnOrRowIndexForFilterCoordinate:
filterFormulaCoordinateForColumnOrRow:
filterFormulaContainingCell
filterFormulaCoordForViewColumnRow:
mutableIndexSetByIntersecting:withRange:
showBaseColumnAtIndex:forAction:
hidingActionForBaseRowAtIndex:
indexesOfCollapsedColumnsInCellRange:
hidingActionForBaseColumnAtIndex:
anyHiddenColumnsInCellRange:forAction:
numberOfHiddenColumnsInBaseCellRange:
numberOfHiddenRowsInBaseCellRange:
numberOfUserHiddenRowsInBaseCellRange:
setRowGroupUID:asCollapsed:
setColumnGroupUID:asCollapsed:
collapsedRowGroupUids
collapseSummaryColumnGroupUIDs:
expandSummaryColumnGroupUIDs:
collapsedColumnGroupUids
copyCollapsedStateToUpdatedRowGroupUids:
pruneCollapsedRowGroups
pruneCollapsedColumnGroups
filterSetForColumns
hasCollapsedRows
hasCollapsedColumns
moveViewColumnRange:toColumnIndex:
mutableUserHiddenRowIndexes
mutableUserHiddenColumnIndexes
mutablePivotHiddenRowIndexes
mutablePivotHiddenColumnIndexes
mutableFilteredColumnIndexes
verifyConnectionsWithTableModel:
setHiddenStatesOwner:
loadedIndexesAfterUnarchive
_rowHiddenStateExtent
_columnHiddenStateExtent
_loadedIndexesAfterUnarchive
T@"TSTHiddenStatesOwner",W,N,V_hiddenStatesOwner
T@"TSTHiddenStateExtent",R,N,V_rowHiddenStateExtent
T@"TSTHiddenStateExtent",R,N,V_columnHiddenStateExtent
T@"TSTTableTranslator",R,N,V_translator
TB,R,N,V_loadedIndexesAfterUnarchive
T@"TSTTableFilterSet",&,N
p_filterRegion:strokeSidecar:
enumerateColumnsUsingBlock:
enumerateRowsUsingBlock:
curCellID
setCurCellID:
_curCellID
T@"TSTStrokeSidecar",R,N,V_strokeSidecar
T@"NSObject<TSTCellRegionIterating>",R,N,V_regionIterator
T{TSUCellCoord=ISBB},N,V_curCellID
refersToPivotTableRows
refersToPivotTableColumns
groupByForCategoryRef:withCalcEngine:
relativeAncestorGroupUid:
relativeLevelOfAncestorGroupUid:
isRelativeAncestorGroupUid:
resolveRelativeAncestorUid:atRowUid:
convertToRelativeAncestorUid:atRowUid:
rebuildAllAggFormulas
dropAllAggregators
baseColumnIndexForColumnUID:
insertSpanningRangeRef:
initWithNotifyType:group:
isDeferringGroupByChangeNotifications
initWithNotifyType:group:rowUid:
beginDeferringRebuildFormulas
deferGroupByChangeNotifications
endDeferringRebuildFormulas
resumeGroupByChangeNotifications
addAggregator:
usedAggFormulaCoord:
numberOfGroupsUptoLevel:
p_setupCustomFormatsWithLocale:
resetAllAggsFormula
resetGroupingColumnsFormula
groupValueTupleByMergingTuple:toLevel:
columnAggregateListCopy
_removeAggregates:
_addAggregates:atLevel:
aggregatorForColumn:
dropAggregator:
createAggregatorOnColumn:
distinctValuesAtLevel:
allObjects
notifyType
sendToDistributor:
sendDeferredNotifictions:
allGroupNodeUids
setValue:forFormulaCoord:
valueForFormulaCoord:
hidingActionForUid:
p_columnNameForColumnUid:
shortStringForGroupingType:
stringForGroupingType:
aggregateLabelForCategoryRef:
columnNameForCategoryRef:
valuesForCategoryRef:atRowUid:
valueGridForCategoryRef:atRowUid:hidingActionMask:
valueGridForCategoryRef:atRowUid:
setEmptyValueAtCoord:
setValue:atCoord:
missingRunningTotalInFieldError
raiseErrorForError:
showAggregateName
sortedArrayFromArray:forDimension:
sortedArrayFromArray:
valueGridForCategoryRef:
cellRefsForCategoryRef:atRowUid:ordered:
bodyRowUidsForCategoryRef:atRowUid:ordered:
baseRowIndexForRowUID:
setGroupLevel:
rowUIDForViewRowIndex:
p_promoteSpanningReferences:withCaptured:atLevel:
cellIteratorWithRegion:flags:searchFlags:
captureCategoryRefsFromIterator:atLevel:asSpanning:
uidRectRefForCategoryRef:atRowUid:
groupValueHierarchyStringForCategoryRef:forHostCellRef:namingContext:
customFormatData
setFormatString:
initWithName:formatType:data:
localizedStringWithFormat:
tswp_stringWithUnambiguousNeutralEnding
validateNumberOfGroupsForGroupingColumnList:sourceTableModel:sourceBodyTract:limit:groupNodeCount:
tableUIDForCategoryRef:withCalcEngine:
validateNumberOfGroupsForGroupingColumnList:pivotDataModel:limit:groupNodeCount:
didInitFromSOS
columnOrderChangedPrecedent
rowOrderChangedPrecedent
rowOrderChangedPrecedentIgnoringRecalc
columnAggregatesOnColumnUids:
changeForUpdatingGroupValueOnNode:toValue:
changeForMovingBaseRows:toDestGroup:
changeForSettingGroupingColumnList:
mapGroupUidsForChange:
runChange:withAggregates:
numberOfGroupsAtLevel:
indexOfGroupingColumn:
markAllAggregatesAsDirty
enumerateAggregatesAtLevel:withBlock:
numberOfAggregatesAtLevel:
groupNodeForGroupUuid:
groupLevelForGroupUid:isBlank:isError:
groupLevelForGroupingColumnUid:
markAllGroupNodesDirty
groupsAtLevel:
rowsForGroupValue:atLevel:
rowUidsForGroupUids:
enumerateRowsUidsAtLevel:withBlock:
childGroupUidsForGroupUids:
labelRowUidsForGroupUids:
labelRowUIDSet
labelRowUIDSetForCategoryLevel:labelRowVisibility:
rowUIDSetForCategoryLevel:
indexesOfGroupUidsInUids:
removeRowUid:
sortedValuesAtLevel:
aggregateRefOnValue:forColumnUid:forType:atLevel:
groupValueRefOnValue:atLevel:
groupValueHierarchyRefOnValue:atLevel:
enterCalcEngineMode
exitCalcEngineMode
inCalcEngineMode
updateAggFormulaCoord:
clearValueForFormulaCoord:
clearAggNode:forFormulaCoord:
createAggregatorsIfMissingAndAssert:
labelForCategoryRef:
valuesForCategoryRef:
valuesForCategoryRef:atRowUid:hidingActionMask:
countOfValuesForCategoryRef:
expandSpanningCategoryRef:
promoteSpanningReferences:
captureCategoryLabelRefsForViewRegion:atLevel:asSpanning:forRows:
captureAnyCategoryRefsForViewRegion:atLevel:asSpanning:
captureCategoryRefsForViewRegion:atLevel:asSpanning:
viewCellTractRefForCategoryRef:
stringForCategoryRef:hostTableUID:
analyze
isErrorGroupUid:
columnAggregates
indirectAggTypeChangeFormulaCoord
groupingColumnsFormulaCoord
groupingColumnHeadersFormulaCoord
allAggsInGroupRootFormulaCoord
needsRebuildOfAggFormulas
customFormatForBlankGroup
customFormatForErrorGroup
_isEnabled
_groupRoot
_ownerIndex
_aggregators
_indirectAggTypeChangeFormulaCoord
_groupingColumnsFormulaCoord
_groupingColumnHeadersFormulaCoord
_allAggsInGroupRootFormulaCoord
_columnOrderChangedCoord
_rowOrderChangedCoord
_rowOrderChangedIgnoringRecalcCoord
_hiddenStatesChangedCoord
_groupByChangeDistributor
_nextAggFormulaCoord
_aggValuesLock
_aggNodesByFormulaCoord
_groupNodesByGroupUid
_rebuildFormulasDeferredLevel
_needsRebuildOfAggFormulas
_deferGroupByChangeNotificationsLevel
_deferredGroupByChangeNotifications
_calcEngineGroupByChangeNotifications
_inCalcEngineMode
_groupingColumnHeadersChanged
_rowUidLookupList
_customFormatForBlankGroup
_customFormatForErrorGroup
T@"TSTCategoryOwner",W,N,V_categoryOwner
T@"TSTGroupBySet",W,N,V_groupBySet
T@"NSArray",R,V_groupingColumns
TC,R
TB,N,V_isEnabled
T@"TSTGroupByChangeDistributor",R,N,V_groupByChangeDistributor
T@"NSMutableArray",R,N,V_aggregators
T@"NSArray",R,N,V_columnAggregates
T@"TSULocale",R,N
TS,R,N,V_ownerIndex
TB,N,V_isRegisteredWithCalcEngine
T@"TSTGroupNode",R,N
T{TSUCellCoord=ISBB},R,N,V_indirectAggTypeChangeFormulaCoord
T{TSUCellCoord=ISBB},R,N,V_groupingColumnsFormulaCoord
T{TSUCellCoord=ISBB},R,N,V_groupingColumnHeadersFormulaCoord
T{TSUCellCoord=ISBB},R,N,V_allAggsInGroupRootFormulaCoord
T{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}},R,N
TB,N,V_needsRebuildOfAggFormulas
T@"TSKCustomFormatWrapper",R,N,V_customFormatForBlankGroup
T@"TSKCustomFormatWrapper",R,N,V_customFormatForErrorGroup
initWithContext:dependencyTracker:ownerID:ownerUID:owner:ownerIndex:
setOwnerIndex:
setFormulaOwner:
volatileDependencies
formulaOwnerUid
removeCellRef:
errors
isErrorReferenceError
isUnsupportedFunctionError
wholeOwnerDependencies
removeAllCellRefsInOwner:
uuidReferences
addCellRef:forUuid:
addCellRef:usingCategoryRef:
mergingRange
originalGroupNodeUIDs
originalTableUIDs
pushRangeAndSpanningDependentsWithCounts:fromCoord:cellIsInACycle:
embiggenedCellCoord
setSaveAsEmbiggenedFormat:
setDependencyTracker:
setCalcEngineRegistrationObject:
calcEngineRegistrationObject
resetOwnerUIDForUpgrade:forBaseOwner:ownerKind:
stringWithCapacity:
nativeSyntaxStringForArgument:
copyByPruningAgainstTable:behavior:usingBlock:
initWithCellUIDList:
addCellRegion:withColumnUIDs:rowUIDs:
cellUIDAtIndex:
_UIDLookupList
initWithGroupingColumnUID:columnUID:direction:
groupingColumnUID
columnUID
ruleWithGroupingColumnUID:columnUID:direction:
direction
setColumnUID:
setGroupingColumnUID:
ruleByChangingDirectionTo:
ruleByChangingSummaryColumnTo:
groupLevelInTable:
setDirection:
_groupingColumnUID
_columnUID
_direction
_definedGroupingColumnUID
_definedColumnUID
_definedDirection
Ti,N,V_direction
setName:
setMaxConcurrentOperationCount:
p_initializeQueue
registeredWithCoordinator
setRegisteredWithCoordinator:
p_recursiveWriteWillModify:withBlock:
isCold
remoteDataMap
p_tsceValueFromTsceCellValue:
raiseNotReadyError
cachedStocks
coordinator
unSyncedStocks
ownerMap
interestingKeys
setOfSpecifiersNotContainedInSet:
predicateWithBlock:
filterUsingPredicate:
tsu_allKeysAsSet
tsu_setBySubtractingSet:
p_isInCollaborationMode
delegate
p_updateCachesWithMap:quotes:overwriteValues:
setRemoteDataSyncKey:
remoteDataDidUpdateValues:quotes:fromStore:syncKey:
addOperationWithBlock:
remoteDataServerError
dictionaryWithDictionary:
enumerateSpecifiersWithBlock:
hasArchivableState
containsValueForAllSpecifiersInSet:
tsu_setByIntersectingSet:
updateCachedStocksFromKnownStocks:
hasInterestingKeys
stockFromArchive:
allSymbols
setByRemovingSpecifiersFromSet:
registerWithCoordinator
unregisterWithCoordinator
cachedQuoteForSymbol:
addRemoteDataInterest:forOwner:
removeRemoteDataInterest:forOwner:
remoteDataSyncKey
allRemoteData
allQuotes
p_dictionaryForRemoteData:
updateWithRemoteDataMap:quotes:syncKey:
hasFullyPopulatedCache
setDelegate:
updateQueue
tspSemaphore
setHasInterestingKeys:
setUnSyncedStocks:
_hasInterestingKeys
_registeredWithCoordinator
_delegate
_updateQueue
_tspSemaphore
_remoteDataMap
_cachedStocks
_interestingKeys
_ownerMap
_remoteDataSyncKey
_unSyncedStocks
T@"NSOperationQueue",R,N,V_updateQueue
T@"NSObject<OS_dispatch_semaphore>",R,N,V_tspSemaphore
T@"TSCERemoteDataCoordinator",R,N
T@"TSCERemoteDataValueMap",R,N,V_remoteDataMap
T@"NSMutableDictionary",R,N,V_cachedStocks
T@"TSCERemoteDataSpecifierSet",R,N,V_interestingKeys
TB,N,V_hasInterestingKeys
T@"NSMutableDictionary",R,N,V_ownerMap
TB,N,V_registeredWithCoordinator
Td,N,V_remoteDataSyncKey
T@"NSMutableSet",&,N,V_unSyncedStocks
T@"<TSCERemoteDataStoreDelegate>",W,N,V_delegate
_clearTopStroke
_clearLeftStroke
_clearBottomStroke
_clearRightStroke
definedTopStroke
definedLeftStroke
definedBottomStroke
definedRightStroke
cellBorderForResettingAllStrokes
_topStroke
_topStrokeOrder
_rightStroke
_rightStrokeOrder
_bottomStroke
_bottomStrokeOrder
_leftStroke
_leftStrokeOrder
_definedTopStroke
_definedTopStrokeOrder
_definedRightStroke
_definedRightStrokeOrder
_definedBottomStroke
_definedBottomStrokeOrder
_definedLeftStroke
_definedLeftStrokeOrder
TB,R,N,V_definedTopStroke
TB,R,N,V_definedLeftStroke
TB,R,N,V_definedBottomStroke
TB,R,N,V_definedRightStroke
T@"TSDStroke",R,N,V_topStroke
Ti,R,N,V_topStrokeOrder
T@"TSDStroke",R,N,V_leftStroke
Ti,R,N,V_leftStrokeOrder
T@"TSDStroke",R,N,V_bottomStroke
Ti,R,N,V_bottomStrokeOrder
T@"TSDStroke",R,N,V_rightStroke
Ti,R,N,V_rightStrokeOrder
p_strokeLayerVector
portalledStrokeLayer
enumerateWidthsInRange:usingBlock:
enumerateStrokesAndCapsInRange:usingBlock:
isEqualToStroke:
lookupStrokeAtIndex:
enumerateStrokesFrom:to:usingBlock:
enumerateStrokesAndCapsFrom:to:usingBlock:
mRWLock
defaultStrokeLayer
clearedStrokeLayer
setClearedStrokeLayer:
dynamicStrokeLayer
setDynamicStrokeLayer:
spillStrokeLayer
setSpillStrokeLayer:
hasStrokeInRange:
setDefaultStrokeLayer:
customStrokeLayer
setCustomStrokeLayer:
strokeLayerStack
replacementWithDefaults
isEligibleForDefaultsOnlyReplacement
verifyWithExpectedDefaultStrokeLayer:
insertClearedStrokeAtRange:
insertDynamicStroke:strokeOrder:atRange:
insertSpillStroke:atRange:
hasSpillStrokeInRange:
replaceCustomStrokeLayerWith:
invalidateCustomStrokes
invalidateClearedStrokesInRange:
invalidateDynamicStrokes
invalidateDynamicStrokesInRange:
invalidateSpillStrokes
isDefaultsOnly
_isDefaultsOnly
_defaultStrokeLayer
_customStrokeLayer
_clearedStrokeLayer
_dynamicStrokeLayer
_spillStrokeLayer
T@"TSTStrokeLayer",&,N,V_defaultStrokeLayer
T@"TSTStrokeLayer",&,N,V_customStrokeLayer
T@"TSTMutableStrokeLayer",&,N,V_clearedStrokeLayer
T@"TSTMutableStrokeLayer",&,N,V_dynamicStrokeLayer
T@"TSTMutableStrokeLayer",&,N,V_spillStrokeLayer
TB,R,N,V_isDefaultsOnly
startingStrokeOrder
defaultMinorStrokeLayer
defaultMajorStrokeLayer
customUnorderedStrokeLayer
customOrderedStrokeLayer
clearedMinorStrokeLayer
clearedMajorStrokeLayer
dynamicUnorderedStrokeLayer
dynamicOrderedStrokeLayer
spillMinorStrokeLayer
spillMajorStrokeLayer
setSpillMinorStrokeLayer:
setSpillMajorStrokeLayer:
initWithCopyOfMajorStrokes:andMinorStrokes:
mergeTopStrokes:withBottomStrokes:
mergeLeftStrokes:withRightStrokes:
maxWidthOfStrokesInRange:cachedMax:
p_widthOfStrokesAtIndex:
setDefaultMinorStrokeLayer:
setDefaultMajorStrokeLayer:
setCustomUnorderedStrokeLayer:
setCustomOrderedStrokeLayer:
setClearedMinorStrokeLayer:
setClearedMajorStrokeLayer:
setDynamicUnorderedStrokeLayer:
setDynamicOrderedStrokeLayer:
_defaultMinorStrokeLayer
_defaultMajorStrokeLayer
_customUnorderedStrokeLayer
_customOrderedStrokeLayer
_clearedMinorStrokeLayer
_clearedMajorStrokeLayer
_dynamicUnorderedStrokeLayer
_dynamicOrderedStrokeLayer
_spillMinorStrokeLayer
_spillMajorStrokeLayer
T@"TSTStrokeLayer",&,N,V_defaultMinorStrokeLayer
T@"TSTStrokeLayer",&,N,V_defaultMajorStrokeLayer
T@"TSTStrokeLayer",&,N,V_customUnorderedStrokeLayer
T@"TSTStrokeOrderedLayer",&,N,V_customOrderedStrokeLayer
T@"TSTMutableStrokeLayer",&,N,V_clearedMinorStrokeLayer
T@"TSTMutableStrokeLayer",&,N,V_clearedMajorStrokeLayer
T@"TSTMutableStrokeLayer",&,N,V_dynamicUnorderedStrokeLayer
T@"TSTStrokeOrderedLayer",&,N,V_dynamicOrderedStrokeLayer
T@"TSTMutableStrokeLayer",&,N,V_spillMinorStrokeLayer
T@"TSTMutableStrokeLayer",&,N,V_spillMajorStrokeLayer
p_resolveStrokes
customStrokeProvider
defaultStrokeProvider
p_strokeExportCacheForGridRow:
strokeAtIndex:
p_strokeExportCacheForGridColumn:
mergedStrokes
p_strokeExportCacheForColumnBefore:columnAfter:
p_strokeExportCacheForRowAbove:rowBelow:
initWithMergedStack:
strokesForCellID:top:left:bottom:right:
rowStrokeExportCache
setRowStrokeExportCache:
columnStrokeExportCache
setColumnStrokeExportCache:
_defaultStrokeProvider
_customStrokeProvider
_rowStrokeExportCache
_columnStrokeExportCache
T@"<TSTTableStrokeProviding>",R,N,V_defaultStrokeProvider
T@"<TSTCustomStrokeProviding>",R,N,V_customStrokeProvider
T@"TSUIntegerKeyDictionary",&,N,V_rowStrokeExportCache
T@"TSUIntegerKeyDictionary",&,N,V_columnStrokeExportCache
clearRowIndexesCache
uniqueValueToRowUids
setUniqueValueToRowUids:
uniqueValueToRowIndexes
setUniqueValueToRowIndexes:
_uniqueValueToRowUids
_uniqueValueToRowIndexes
T@"NSMutableDictionary",&,N,V_uniqueValueToRowUids
T@"NSMutableDictionary",&,N,V_uniqueValueToRowIndexes
firstIndexNotInIndexSet:beginRange:pastEndRange:
lastIndexNotInIndexSet:beginRange:pastEndRange:
p_canUsePrePivotFilterSet
forRows
p_registerAllFormulas
tableTranslator
areMapsStale
p_viewIndexForBaseIndex:
p_summaryFilteredIndexes
p_summaryPivotHiddenIndexes
hideAtUid:forIndex:forViewIndex:forAction:
p_addHiddenIndex:viewIndex:forAction:
p_hiddenStateChangedForBaseIndex:viewIndex:forAction:
showAtUid:forIndex:forViewIndex:forAction:
p_removeHiddenIndex:viewIndex:forAction:
p_summaryHiddenIndexes
p_collapsedIndexes
p_hiddenIndexes
p_baseHiddenIndexes
mutableBaseRowIndexesForUIDs:
mutableBaseColumnIndexesForUIDs:
verifyIndexesAreConsistent
clearInvalidIndexes
hideAtUid:forAction:
showAtUid:forAction:
p_userHiddenIndexes
p_filteredIndexes
firstIndexNotInIndexSet:orIndexSet:beginRange:pastEndRange:
lastIndexNotInIndexSet:orIndexSet:beginRange:pastEndRange:
findLastVisibleIndexInBegin:afterEnd:
findFirstVisibleIndexInBegin:afterEnd:
clearAllCachedRowIndexes
dirtyFilterStateForRowRange:
swapIndexesWithIndexSet:index:withIndex:
uniqueValuesLock
uniqueValuesUnlock
ruleAtAbsoluteIndex:
predicate
remapOwnerUIDsWithMap:calcEngine:error:
needsThreshold
predicateType
baseColumnIndexForFilterRuleInTableModel:
precedentsForFilterSet:calcEngine:hostOwnerUID:hostCellID:
p_registerAllFormulasReturningCoords:
numberParam1
p_calculateUniqueThresholdWithCalcEngine:formulaCoord:
rewriteNumberToDurationForSageImport:durationUnitLargest:
p_calculateAverageThresholdWithCalcEngine:formulaCoord:
qualifier1
p_calculateTopOrBottomThresholdWithCalcEngine:formulaCoord:isTop:keyScale:
p_calculateUniqueDistinctIndexWithCalcEngine:formulaCoord:tableModel:rule:
p_createThresholdCellValue:locale:
rowIsShown:withHiddenStateExtent:withCalcEngine:
downgradeFilterSetForBackwardCompatWithLocale:
copyByRewritingFilterRulesToUidFormWithContext:withTableInfo:
rewriteFormulaWithBlock:
p_removeAllFormulaFromCalculationEngine
enumerateFiltersInTable:usingBlock:
cellReferenceForIndex:
uniqueValuesForColumnUID:
removeUid:
anyUserHidden
_hiddenStateExtentUid
_baseHiddenByUid
_summaryHiddenByUid
_forRows
_collapsedGroupUids
_baseUserHiddenIndexes
_baseFilteredIndexes
_viewIndexesMutex
_userHiddenIndexes
_filteredIndexes
_combinedHiddenIndexes
_collapsedIndexes
_summaryFilteredIndexes
_summaryPivotHiddenIndexes
_uniqueValuesByColumnUid
_columnUidsWithUniqueIndexes
_rewrittenFilterSet
_pendingComputedLock
_pendingColumnsOrRowsShown
_pendingColumnsOrRowsHidden
_pendingViewColumnsOrRowsShown
_pendingViewColumnsOrRowsHidden
_cellRangesToInvalidate
_invalidateViewGeometry
_invalidateCollapsed
_uniqueValuesLock
_needsSummaryUidUpgrade
T{TSKUIDStruct=QQ},N,V_hiddenStateExtentUid
TB,R,N,V_forRows
T@"TSCEUIDSet",R,N,V_collapsedGroupUids
T@"NSArray",R,N,V_thresholdCellValues
getUUIDBytes:
popupChoiceIndex
mergeRangeCache
loadMergeCache
mergeIndexesForRange:
p_updateOriginMapWithSourceCellCoord:destCellCoord:
initWithType:uidRanges:
addFormula:
addFormulaIndex:
modelCellRanges
p_moveCellFromCellCoord:toCellCoord:
hasMergeFormulas
mergeActionForBaseCellRegion:nonOriginPartialsOnly:
mergeIndexesForBaseCellRegion:
containsModelCellCoord:
mergeFormulas
reloadMergeCacheForIndexes:
p_dirtyCellsForMerge:
removeBaseMergeRange:
p_shrinkReturningInverseForAction:
p_growReturningInverseForAction:
p_shrinkMergesAtIndexes:intersectedByBaseRegion:
uidRanges
shrinkReturningInverseForBaseCellRegion:
regionByAddingModelCellRect:
regionBySubtractingModelCellRect:
mergeFormulaIndexes
boundingModelCellRect
regionFromModelCellRect:
regionBySubtractingModelCellRegion:
p_growRangeFrom:toDesired:
intersectsModelCellRect:
allValidMergesForMergeList:
p_enumerateMergesUsingBlock:
enumerateMergesIntersectingBaseCellRegion:usingBlock:
initForRemoveRowsOrColumnsFromTable:rowColumnUuids:areRows:
initForInsertingRowsOrColumnsIntoTable:rowColumnUuids:areRows:
allMergesAsString
resetMergeOriginMap
mergeActionForBaseCellRegion:
removeReturningInverseForBaseCellRegion:
find:
mergeRangesAndCrumbsIntersectingBaseCellRect:
hasMergeRangesIntersectingBaseCellRect:
hasMergeRangesIntersectingBaseCellRegion:
mergeRangesPartiallyIntersectBaseCellRect:
mergeRangesPartiallyIntersectBaseCellRegion:
rewroteFormula:atCoordinate:withRewriteSpec:isUndo:
setFormulaStore:
mergeCacheLoaded
setMergeCacheLoaded:
setMergeRangeCache:
setMergeChangeDistributor:
_mergeOriginsMap
_reverseOriginsMap
_mergeCacheLoaded
_mergeRangeCache
_mergeChangeDistributor
T@"TSTCellRangeCache",&,N,V_mergeRangeCache
TB,N,V_mergeCacheLoaded
T@"TSTTableModel",R,W,N,V_tableModel
T@"TSTFormulaStore",&,N,V_formulaStore
T@"TSTMergeChangeDistributor",&,N,V_mergeChangeDistributor
Tr^v,R,N,V_mergeOriginsMap
Tr^v,R,N,V_reverseOriginsMap
interactionTypeIsControl:
setInteractionTypeFromTheFuture:
interactionTypeFromTheFuture
isShimControlFormatType:
interactionTypeForShimControlFormatType:
shimControlFormatTypeForInteractionType:
displayNameForInteractionType:
propertiesMatchingThoseInMap:
_interactionTypeFromTheFuture
TI,N,V_interactionTypeFromTheFuture
registerWithCalcEngine:reregister:
foreachSpanningRangeRef:
isEqualToTrackedReference:
baseIndex
p_referenceForColumnIndex:
beginTrackingReferenceWithSpanningRef:
p_columnForTrackedReference:
p_hasRuleReferenceForTrackedReference:
initWithSourceCellRange:
initWithSourceCellRange:targetCellRange:
targetCellRange
sourceCellRange
autofillSelectionWithSourceCellRange:
autofillSelectionWithSourceCellRange:targetCellRange:
isValidForCellSelection:inTable:
isValidForRowVisibilityChangeInRegion:table:
setSourceCellRange:
setTargetCellRange:
_sourceCellRange
_targetCellRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_sourceCellRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_targetCellRange
scaledLayout
addChangeDescriptorWithType:andCellRange:
fixedColumnWidthStack
styleProviderStack
setStyleProviderStack:
addPointer:
setStyleProvidingSource:
modifySafelyUsingBlock:
removePointerAtIndex:
setFixedColumnWidthStack:
initWithName:
widthHeightCacheFromBundle:withNumberOfRows:andNumberOfColumns:
initWithLimit:
tableRowsBehaviorForTable:andEnvironment:
updateCellRange
enqueueBootstrapChangeDescriptors
hiddenRowsColumnsCache
validateStrokesArrays:
p_validateStrokesForRegion:
verifyStrokes
p_validateStrokeWidthCachesForRegion:invalidateStrokeDefaults:
setMaximumSize:
setCacheHintID:
setPartitionPosition:
widthHeightCache
resetModelCache
resetModelCacheRange:
initWithStylesheet:paragraphStyle:listStyle:columnStyle:alignmentForNaturalAlignment:naturalDirection:
typesettingLocale
shouldHyphenate
initWithPadding:verticalAlignment:locale:shouldHyphenate:
setTableNameTextEngineDelegate:
tableNameTextEngineDelegate
tableNameTextEngineWithTableNameStyle:
tableNameTextSizeForTableName:maxWidth:tableNameStyle:
measureText:withMaxWidth:
paragraphStyle
calculatedTableNameHeight
tableNameHeightCache
calculatedTableNameHeightIncludingDynamicResize:
isDynamicallyResizingTableName
dynamicTableNameResize
numberOfVisibleRowsInCellRange:
tableStyleAreaForCategoryLevel:isLabel:
fixedWidthProvider
fixedColumnWidth:
isDynamicallyResizingForColumnRowAdd:rowColIndex:
hasWidthForColumn:
getColumnWidth:
getModelWidthForColumn:
setModelWidth:forColumn:
scaleIsValid
tableRowsBehavior
hasHeightForRow:
getRowHeight:
getFitHeight:andModelHeight:forRow:
setModelHeight:forRow:
clampRowHeightAccountingForMaximumPartitionSize:rowIndex:rowHeight:
getModelHeightForRow:
defaultPaddingForCellID:
newTextEngineForCell:atCellID:textStyle:
layoutText:context:kind:minSize:maxSize:anchor:flags:
fontHeightOfParagraphStyle:
typographicBounds
frameBounds
getFitHeightForRow:
resetFittingRowHeightsStartingWith:upToRow:
invalidateBandedFill
p_strokesForGridColumn:isLeft:takeStrokeWriteLock:
p_strokesForGridRow:isTop:takeStrokeWriteLock:
adjustGridColumnForVisibility:isLeft:
adjustGridRowForVisibility:isTop:
p_setDynamicStroke:strokeOrder:forGridRow:isTop:beginColumn:endColumn:
p_setDynamicStroke:strokeOrder:forGridColumn:isLeft:beginRow:endRow:
mergedStrokesForGridRow:
mergedStrokesForGridColumn:
setClearedStrokeForGridColumn:beginRow:endRow:
setClearedStrokeForGridRow:beginColumn:endColumn:
contentWidthForCellRange:skipDynamicSwap:
contentHeightForCellRange:skipDynamicSwap:maximumPartitionSize:
p_contentWidthForCellRange:skipDynamicSwap:validationBundle:
regionByUnioningEveryRangeInRegionWithRange:
shuffleMapping
invalidateStrokeDefaults
invalidateStrokeSpills
isDynamicallyChangingRowCount
hiddenColumnIndices
hiddenRowIndices
p_invalidateClearedStrokesForCellRegion:
p_clearStrokesForMergesInCellRegion:
strokeLayerModifiedByInsertingSpaceAt:
strokeLayerModifiedByRemovingRangeAt:
strokesDefaultVendor
modelRowForLayoutRow:
p_validateStrokeWidthCachesForGridRow:
p_validateStrokeWidthCachesForGridColumn:
isDynamicallySettingBandedFill
dynamicBandedFill
dynamicBandedFillSetting
numberOfVisibleRowsFromStartRowIndex:toEndRowIndex:
numberOfVisibleRowsFromHeader:
setModelCellID:
setCellPropsRowHeight:
setNeedWPColumn:
setCellWraps:
setPaddingInsets:
setMinSize:
setMaxSize:
setForDrawing:
setLayoutMergeRange:
setInDynamicLayout:
setCellContents:
setLayoutCacheFlags:
setPageNumber:
setPageCount:
measureWithLayoutState:
sizeOfText
p_setDefaultFontHeight:forTableStyleArea:
dynamicContentMustDrawOnMainThread
isMainThread
modelColumnForLayoutColumn:
layoutRowForModelRow:
layoutColumnForModelColumn:
mergeRange:forCellID:
isDynamicallyRevealingRowsCols:rowColIndex:
processHiddenRowsForExport
isRowUserHidden:
numberOfVisibleColumnsInCellRange:
anyRowsUserHiddenInCellRange:
nonUserHiddenRowAfterAndIncludingRow:
entireBodyRowsCellRange
dynamicLayoutParticipants
isDynamicallyChangingColumnCount
addChangeDescriptorWithType:andCellRange:andStrokeRange:
processedByLayoutEngine
changeDescriptors
setProcessedByLayoutEngine:
validateTableNameEnabled
validateBandedFill
validateDynamicResizeInfo
validateChangeDescriptorQueue
validateTableNameHeight
invalidateDefaultFontHeights
validateRowVisibility:
p_validateCellIDToWPColumnCacheForChangeDescriptors:
validateChangeDescriptors:tableInfo:numberOfRows:numberOfColumns:
validateLayoutEngineForChangeDescriptors:
validateDefaultFontHeights
validateStrokesForChangeDescriptors:
validateFittingRegionForChangeDescriptors:
validateRowsNeedingFittingInfo:validationRegion:layoutEngine:
validateFittingInfoForValidationRegion:rowsNeedingFittingInfo:
waitForLayoutToComplete:
finalizeLayoutPassWithRowsNeedingFittingInfo:
willModifyIfNeeded:
setFitHeight:forCellID:
enumerateMergeRangesUsingBlock:
regionFromColumnIndices:
postNotificationName:object:
overrideCGFloatValueForProperty:
overrideValueForProperty:
edgeInsetsFromPadding:
queueCellForValidation:cell:textStyle:modelMergeRange:wrap:verticalAlignment:padding:prop:layoutCacheFlags:validationBundle:layoutTask:
p_addFittingInfoForEmptyMergeRange:
p_validateFittingInfoForEmptyCellsBetween:andCellID:inRange:widthHeightCollection:
validateFittingInfoForCell:cellID:mergeRange:setFitting:layoutTask:widthHeightCollection:validationBundle:
processLayoutTask:validationBundle:
limit
p_validateFittingInfoWithCellRangeWorker:widthHeightCollection:containsMerges:validationBundle:
enumerateVisibleColumnIndexesInRange:usingBlock:
p_validateFittingInfoForEmptyCellsOnSingleRowBetween:andEndCellID:widthHeightCollection:
addRange:height:paddingInsets:isCheckbox:
mergeRangesProppingRowHeightsInRegion:
regionFillingRowsFromRegion:
p_containsGradientThatFillsContainerInStyle:
fillType
p_validationFittingCellRegionForColumnsDeleted:cellRegionGatherer:
p_validationFittingCellRegionForColumnsInserted:cellRegionGatherer:
p_validationFittingCellRegionForColumnsVisibility:cellRegionGatherer:
p_validationFittingCellRegionForColumnsMovedFrom:toColumnIndex:cellRegionGatherer:
p_validationFittingCellRegionForRowsDeleted:cellRegionGatherer:
p_validationFittingCellRegionForRowsInserted:cellRegionGatherer:
p_validationFittingCellRegionForRowsMovedFrom:toRowIndex:cellRegionGatherer:
p_validationFittingCellRegionForRangeMergeUnmerge:cellRegionGatherer:
p_validationFittingCellRegionForStrokesChanged:cellRegionGatherer:
p_validationFittingForChangeDescriptorType:regionFromChangeDescriptor:cellRegionGatherer:
tsu_intersectionWithIndexSet:
p_validationBundleForRegionToValidate:
validateFittingInfoWithCellRange:validationBundle:
setShouldFastPathMeasureFitWidth:
setVerticalAlignment:
layoutCellIDForModelCellID:
hasAttachmentsThatChangeWithPageNumberOrPageCount
wpColumn
keyVal
columnToWidthMapFromCollectionArray:
unsignedIntValue
p_containsGradientFillThatFillsContainerInCell:cellContents:
layoutCacheFlags
cellContents
contentWidthForCellRange:validationBundle:
setMaxWidthForChildren:
addCellState:
numberOfCellStates
numCellsPerTask
modelCellID
minSize
cellWraps
needWPColumn
p_resolvedTextStyleForCell:atCellID:textStyle:outNaturalAlignment:outCellDirection:
fontInfoForTextStyle:withString:
newTextEngineForCell:atCellID:textStyle:naturalAlignment:cellDirection:
setTextColorOverride:
paddingInsets
verticalAlignment
naturalAlignment
initWithString:width:height:paragraphStyle:cellWraps:valueType:paddingInsets:verticalAlignment:writingDirection:naturalAlignment:styleProvidingSource:
setKeyVal:
maxWidthForChildren
layoutTextStorage:minSize:maxSize:anchor:pageNumber:pageCount:flags:
setWpColumn:
setSizeOfText:
columnLayoutWidthForBodyWidth:insets:
shouldFastPathMeasureFitWidth
heightForString:width:outFitWidth:
enumerateCellStatesUsingBlock:
writeToLayoutEngineCaches:
setFittingHeightsFromCollectionArray:
widthForString:
boundingBottomRightCellID
unwrappedFittingWidthsForColumnInCellRegionWorker:
redColor
resolvedTextStyleWithPropertyMap:
formattedDataParagraphStylePropertyMapForCell:atCellID:
defaultColumnStyle
isDynamicallyChangingFontColorOfCellID:
dynamicFontColor
setAlignment:
tabs
insertTab:
setProcessHiddenRowsForExport:
pushToStyleProviderStack:
popFromStyleProviderStack
pushToFixedColumnWidthStack:
popFromFixedColumnWidthStack
tableStrokeProvider
hintIsValid:
resetModelHeightWidthCache
clearModelHeightWidthCacheForCellRange:
tableNameTextEngine
categoryColumnsCellRange
entireActualHeaderColumnsCellRange
entireBodyCellRange
heightOfRowIgnoringFitting:withStrokeHeights:
fittingHeightOfRow:
setStrokeSpillForRightGridColumn:leftGridColumn:inRow:
hasStrokeSpillForLeftGridColumn:inRow:
p_strokesForValidationOfGridRow:isTop:
setDynamicCellBorder:forCellID:
shouldRowUseBandedFill:
beginDynamicMode:
endDynamicMode:
modelCellRegionForLayoutCellRegion:
layoutCellRegionForModelCellRegion:
isDynamicallyResizingForColumnRowAdd:
isDynamicallyResizingCellIDForColumnRowAdd:
expandCellRangeToVisibleNeighbors:
firstEmptyBodyRow
containsAnyContentInRange:
dynamicLayout
isDynamicallyRevealingRowsCols
updateDynamicTableNameSize:
isDynamicallyChangingSelection
updateDynamicFontColor:andRange:
dynamicCellFillDelegate
isDynamicallyChangingCellFill
captureDynamicResizeInfo
updateDynamicResizeInfo:
invalidateDynamicResizeInfo
isGrouped
fittingWidthsMapForColumns:includeStrokes:
setMaxConcurrentTasks:
unwrappedFittingWidthsForColumnsInCellRegion:
clearRenderingCaches
isCategoryLastSummaryRowCollapsed
isLastVisibleBodyRowCategorySummaryOrLabelRow
readSafelyUsingBlock:
setStrokesDefaultVendor:
setCellIDToWPColumnCache:
setDupContentCache:
tempWPColumnCache
setTempWPColumnCache:
setWidthHeightCache:
setHiddenRowsColumnsCache:
maxConcurrentTasks
setNumCellsPerTask:
setBandedFillObject:
setTableEnvironment:
setTableRowsBehavior:
setInDynamicLayoutMode:
dynamicAddOrRemoveColumnElementSize
setDynamicAddOrRemoveColumnElementSize:
dynamicAddOrRemoveRowElementSize
setDynamicAddOrRemoveRowElementSize:
setDynamicBandedFill:
setDynamicBandedFillSetting:
dynamicColumnAdjustment
setDynamicColumnAdjustment:
setDynamicColumnTabSize:
setDynamicFontColor:
dynamicFontColorCellRange
setDynamicFontColorCellRange:
setDynamicRepResize:
dynamicRepResizeSessionInProgress
setDynamicRepResizeSessionInProgress:
setDynamicInfoGeometry:
dynamicWidthResize
setDynamicWidthResize:
dynamicHeightResize
setDynamicHeightResize:
dynamicResizingColumns
setDynamicResizingColumns:
dynamicResizingColumnRange
setDynamicResizingColumnRange:
dynamicResizingColumnAdjustment
setDynamicResizingColumnAdjustment:
dynamicResizingRows
setDynamicResizingRows:
dynamicResizingRowRange
setDynamicResizingRowRange:
dynamicResizingRowAdjustment
setDynamicResizingRowAdjustment:
dynamicRowAdjustment
setDynamicRowAdjustment:
setDynamicRowTabSize:
dynamicSavedLayoutGeometry
setDynamicSavedLayoutGeometry:
dynamicSelection
setDynamicSelection:
setDynamicTableNameResize:
dynamicSuppressingConditionalStylesCellID
setDynamicSuppressingConditionalStylesCellID:
setChangeDescriptors:
mergeRangesForLayoutPass
setMergeRangesForLayoutPass:
fontInfoCache
setFontInfoCache:
layoutValidateQueue
setLayoutValidateQueue:
layoutMeasureQueue
setLayoutMeasureQueue:
layoutConcurrentQueue
setLayoutConcurrentQueue:
setTopRowStrokes:
setBottomRowStrokes:
setLeftColumnStrokes:
setRightColumnStrokes:
spillStrokeColumns
setSpillStrokeColumns:
cellRegionForClearedMergeStrokes
setCellRegionForClearedMergeStrokes:
columnToStrokeWidthCache
setColumnToStrokeWidthCache:
rowToStrokeHeightCache
setRowToStrokeHeightCache:
paraStyleToHeightCache
setParaStyleToHeightCache:
tableNameBounds
setTableNameBounds:
cachedTableNameHeight
setCachedTableNameHeight:
tableNameHeightValid
setTableNameHeightValid:
cachedNumberOfColumns
setCachedNumberOfColumns:
cachedNumberOfRows
setCachedNumberOfRows:
cachedNumberOfHeaderColumns
setCachedNumberOfHeaderColumns:
cachedNumberOfHeaderRows
setCachedNumberOfHeaderRows:
cachedNumberOfGrandTotalColumns
setCachedNumberOfGrandTotalColumns:
cachedNumberOfFooterRows
setCachedNumberOfFooterRows:
cachedNumberOfFooterOrGrandTotalRows
setCachedNumberOfFooterOrGrandTotalRows:
cachedMaxNumberOfColumns
setCachedMaxNumberOfColumns:
cachedMaxNumberOfRows
setCachedMaxNumberOfRows:
bandedFillIsValid
setBandedFillIsValid:
setUseBandedFill:
tableDefaultFontHeightsAreValid
setTableDefaultFontHeightsAreValid:
contentReadingThreads
setContentReadingThreads:
setEmptyFilteredTable:
setIsGrouped:
setDynamicLayoutParticipants:
setDynamicLayout:
setDynamicContentDelegate:
dynamicHidingContent
setDynamicHidingContent:
dynamicHidingRowsCols
setDynamicHidingRowsCols:
dynamicHidingRowsColsDirection
setDynamicHidingRowsColsDirection:
dynamicHidingText
setDynamicHidingText:
dynamicRemovingText
setDynamicRemovingText:
dynamicRepressFrozenHeaderRows
setDynamicRepressFrozenHeaderRows:
dynamicRepressFrozenHeaderColumns
setDynamicRepressFrozenHeaderColumns:
dynamicResizeInfo
setDynamicResizeInfo:
dynamicRevealingRowsCols
setDynamicRevealingRowsCols:
dynamicRevealingRowsColsDirection
setDynamicRevealingRowsColsDirection:
setDynamicCellFillDelegate:
_tableDefaultFontHeightForArea
_layoutInFlight
_strokesRWLock
_contentRWLock
_dynamicModeUnfairLock
_inDynamicLayoutMode
_dynamicBandedFill
_dynamicBandedFillSetting
_dynamicRepResize
_dynamicRepResizeSessionInProgress
_dynamicResizingColumns
_dynamicResizingRows
_processHiddenRowsForExport
_tableNameHeightValid
_bandedFillIsValid
_useBandedFill
_tableDefaultFontHeightsAreValid
_emptyFilteredTable
_isGrouped
_dynamicRepressFrozenHeaderRows
_dynamicRepressFrozenHeaderColumns
_maxConcurrentTasks
_numCellsPerTask
_tableEnvironment
_tableRowsBehavior
_dynamicColumnAdjustment
_dynamicRowAdjustment
_cachedNumberOfColumns
_cachedNumberOfRows
_cachedNumberOfHeaderColumns
_cachedNumberOfHeaderRows
_cachedNumberOfGrandTotalColumns
_cachedNumberOfFooterRows
_cachedNumberOfFooterOrGrandTotalRows
_changeNotifier
_strokesDefaultVendor
_cellIDToWPColumnCache
_dupContentCache
_tempWPColumnCache
_widthHeightCache
_hiddenRowsColumnsCache
_bandedFillObject
_dynamicAddOrRemoveColumnElementSize
_dynamicAddOrRemoveRowElementSize
_dynamicColumnTabSize
_dynamicFontColor
_dynamicInfoGeometry
_dynamicWidthResize
_dynamicHeightResize
_dynamicResizingColumnAdjustment
_dynamicResizingRowAdjustment
_dynamicRowTabSize
_dynamicSavedLayoutGeometry
_dynamicSelection
_dynamicTableNameResize
_dynamicSuppressingConditionalStylesCellID
_dynamicFooterHeight
_changeDescriptors
_mergeRangesForLayoutPass
_styleProvidingSource
_fontInfoCache
_layoutValidateQueue
_layoutMeasureQueue
_layoutConcurrentQueue
_spillStrokeColumns
_cellRegionForClearedMergeStrokes
_columnToStrokeWidthCache
_rowToStrokeHeightCache
_paraStyleToHeightCache
_cachedTableNameHeight
_tableNameHeightCache
_cachedMaxNumberOfColumns
_cachedMaxNumberOfRows
_contentReadingThreads
_dynamicLayoutParticipants
_dynamicLayout
_dynamicContentDelegate
_dynamicHidingRowsColsDirection
_dynamicResizeInfo
_dynamicRevealingRowsColsDirection
_dynamicCellFillDelegate
_defaultColumnStyle
_tableNameTextEngineDelegate
_styleProviderStack
_fixedColumnWidthStack
_dynamicFontColorCellRange
_dynamicResizingColumnRange
_dynamicResizingRowRange
_dynamicHidingContent
_dynamicHidingRowsCols
_dynamicHidingText
_dynamicRemovingText
_dynamicRevealingRowsCols
_tableNameBounds
T@"TSTWPColumnCache",&,N,V_cellIDToWPColumnCache
T@"TSTDupContentCache",&,N,V_dupContentCache
T@"TSTWPColumnCache",&,N,V_tempWPColumnCache
T@"TSTWidthHeightCache",&,N,V_widthHeightCache
T@"TSTHiddenRowsColumnsCache",&,N,V_hiddenRowsColumnsCache
T@"TSTFontInfoCache",&,N,V_fontInfoCache
T@"TSUWidthLimitedQueue",&,N,V_layoutValidateQueue
T@"TSUWidthLimitedQueue",&,N,V_layoutMeasureQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_layoutConcurrentQueue
T@"TSTStrokeDefaultVendor",&,N,V_strokesDefaultVendor
T@"NSPointerArray",&,N,V_topRowStrokes
T@"NSPointerArray",&,N,V_bottomRowStrokes
T@"NSPointerArray",&,N,V_leftColumnStrokes
T@"NSPointerArray",&,N,V_rightColumnStrokes
T@"TSTConcurrentMutableIndexSet",&,N,V_spillStrokeColumns
T@"TSTCellRegion",&,N,V_cellRegionForClearedMergeStrokes
T@"TSTStrokeWidthCache",&,N,V_columnToStrokeWidthCache
T@"TSTStrokeWidthCache",&,N,V_rowToStrokeHeightCache
T@"TSTTextStyleToFontHeightCache",&,N,V_paraStyleToHeightCache
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_tableNameBounds
Td,N,V_cachedTableNameHeight
TB,N,V_tableNameHeightValid
T@"NSMutableDictionary",R,N,V_tableNameHeightCache
TI,N,V_cachedNumberOfColumns
TI,N,V_cachedNumberOfRows
TI,N,V_cachedNumberOfHeaderColumns
TI,N,V_cachedNumberOfHeaderRows
TI,N,V_cachedNumberOfGrandTotalColumns
TI,N,V_cachedNumberOfFooterRows
TI,N,V_cachedNumberOfFooterOrGrandTotalRows
TQ,N,V_cachedMaxNumberOfColumns
TQ,N,V_cachedMaxNumberOfRows
TB,N,V_bandedFillIsValid
TB,N,V_useBandedFill
T@"TSDFill",&,N,V_bandedFillObject
Ti,N,V_tableRowsBehavior
TB,N,V_tableDefaultFontHeightsAreValid
T@"NSMutableSet",&,N,V_contentReadingThreads
TB,N,V_emptyFilteredTable
T@"NSMutableArray",&,N,V_changeDescriptors
TB,N,V_isGrouped
inDynamicLayoutMode
TB,N,GisInDynamicLayoutMode,V_inDynamicLayoutMode
T@"NSCountedSet",&,N,V_dynamicLayoutParticipants
T@"TSTLayout",&,N,V_dynamicLayout
Td,N,V_dynamicAddOrRemoveColumnElementSize
Td,N,V_dynamicAddOrRemoveRowElementSize
TB,N,V_dynamicBandedFill
TB,N,V_dynamicBandedFillSetting
Ti,N,V_dynamicColumnAdjustment
Td,N,V_dynamicColumnTabSize
T@"<TSTLayoutDynamicContentProtocol>",&,N,V_dynamicContentDelegate
T@"TSUColor",&,N,V_dynamicFontColor
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicFontColorCellRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicHidingContent
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicHidingRowsCols
Tq,N,V_dynamicHidingRowsColsDirection
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicHidingText
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicRemovingText
T@"TSDInfoGeometry",&,N,V_dynamicInfoGeometry
TB,N,V_dynamicRepressFrozenHeaderRows
TB,N,V_dynamicRepressFrozenHeaderColumns
T@"TSTLayoutDynamicResizeInfo",&,N,V_dynamicResizeInfo
TB,N,V_dynamicResizingColumns
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicResizingColumnRange
Td,N,V_dynamicResizingColumnAdjustment
TB,N,V_dynamicResizingRows
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicResizingRowRange
Td,N,V_dynamicResizingRowAdjustment
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicRevealingRowsCols
Tq,N,V_dynamicRevealingRowsColsDirection
Ti,N,V_dynamicRowAdjustment
Td,N,V_dynamicRowTabSize
T@"TSTCellSelection",&,N,V_dynamicSelection
Td,N,V_dynamicTableNameResize
T{TSUCellCoord=ISBB},N,V_dynamicSuppressingConditionalStylesCellID
T@"<TSTLayoutDynamicCellFillProtocol>",&,N,V_dynamicCellFillDelegate
T@"TSWPColumnStyle",R,N,V_defaultColumnStyle
T@"TSTTextEngineDelegate",&,N,V_tableNameTextEngineDelegate
T@"NSPointerArray",&,N,V_styleProviderStack
T@"NSPointerArray",&,N,V_fixedColumnWidthStack
T@"TSKChangeNotifier",W,N,V_changeNotifier
TI,N,V_maxConcurrentTasks
TI,N,V_numCellsPerTask
Ti,N,V_tableEnvironment
TB,N,V_dynamicRepResize
TB,N,V_dynamicRepResizeSessionInProgress
Td,N,V_dynamicWidthResize
Td,N,V_dynamicHeightResize
T@"TSDLayoutGeometry",C,N,V_dynamicSavedLayoutGeometry
Td,R,N,V_dynamicFooterHeight
T@"TSTMergeRangeSortedSet",&,N,V_mergeRangesForLayoutPass
TB,N,V_processHiddenRowsForExport
T@"<TSWPStyleProviding>",R,N,V_styleProvidingSource
initWithRange:hintId:partitionPosition:maximumSize:effectiveSize:layout:validity:horizontal:
indexForSelection:
selectionAtIndex:
cellSelection
mostSpecificSelectionOfClass:
setPartitioningPass:
horizontal
archivedHintClass
overlapsWithSelectionPath:
copyForArchiving
firstChildHint
lastChildHint
isFirstHint
effectiveSize
T@"<TSDHint>",R,N
T#,R,N
partitioningPass
setEffectiveSize:
setHorizontal:
_horizontal
_partitionPosition
_cacheHintID
_partitioningPass
_layout
_effectiveSize
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_cellRange
T{TSUCellCoord=ISBB},N,V_cacheHintID
T@"NSNumber",&,N,V_partitioningPass
TI,N,V_partitionPosition
T{CGSize=dd},N,V_maximumSize
T{CGSize=dd},N,V_effectiveSize
T@"TSTLayout",W,N,V_layout
TB,N,V_horizontal
initWithContext:hint:
hint
setHint:
T@"<TSDHint>",&,N
mHint
T@"TSTLayoutHint",&,N,VmHint
propertySetByAddingProperties:
containsAnyPropertyInProperties:
repairOrReplaceErrantStyle:
propertyMapWithProperties:
setBoxedObject:forProperty:
enumeratePropertiesAndObjectsUsingBlock:
setInfoGeometry:
validateScaledLayout
calculateCellRangeForNextPartition:nextPartitionRange:additionalHeightForCaption:availableSizeRemaining:previousHint:
participatesInLastRowHeight
p_didFinishPartitioningHint:horizontally:
rootLayout
infoGeometry
measureCellRangeForNextPartitionOfSize:previousHint:horizontally:
partitioningPassForHint:withPreviousHint:
nextHintForSize:parentLayout:previousHint:horizontally:outFinished:
layoutForHint:parentLayout:
hintCacheKeyForHint:
shouldReuseLayout:forSize:parentLayout:hint:
invalidateTextLayout
p_flushCacheAfterPartitioningFinished:lastHint:horizontally:
partitioningPassForFirstPartitionSize:
hintCacheKeyForPartitioningPass:andHintID:
nextLayoutForSize:parentLayout:previousHint:horizontally:outFinished:
didHint:syncWithNextHint:horizontally:
hintForLayout:
setLayoutPartititionsRightToLeft:contentPartitionsRightToLeft:
totalPartitionFrame
inlineTableWidth
setScaledLayout:
tableIsLTR
setTableIsLTR:
layoutIsLTR
setLayoutIsLTR:
firstPartitionWidth
setFirstPartitionWidth:
hintMatricesByCanvas
setHintMatricesByCanvas:
partitioningPassCache
setPartitioningPassCache:
_tableIsLTR
_layoutIsLTR
_infoGeometry
_scaledLayout
_firstPartitionWidth
_hintMatricesByCanvas
_partitioningPassCache
_scaleToFit
T@"TSDInfoGeometry",C,N,V_infoGeometry
T@"TSTLayout",&,N,V_scaledLayout
TB,N,V_tableIsLTR
TB,N,V_layoutIsLTR
Td,N,V_firstPartitionWidth
T@"TSUPointerKeyDictionary",&,N,V_hintMatricesByCanvas
T@"NSMutableDictionary",&,N,V_partitioningPassCache
T{CGSize=dd},N,V_scaleToFit
getSpaceContainingCellID:
setSpace:
_space
_frozenHeaderColumnsSpace
_frozenHeaderRowsSpace
_frozenHeaderCornerSpace
_repeatHeaderColumnsSpace
_repeatHeaderRowsSpace
_repeatHeaderCornerSpace
T@"TSTLayoutSpace",&,N,V_space
T@"TSTLayoutSpace",&,N,V_frozenHeaderColumnsSpace
T@"TSTLayoutSpace",&,N,V_frozenHeaderRowsSpace
T@"TSTLayoutSpace",&,N,V_frozenHeaderCornerSpace
T@"TSTLayoutSpace",&,N,V_repeatHeaderColumnsSpace
T@"TSTLayoutSpace",&,N,V_repeatHeaderRowsSpace
T@"TSTLayoutSpace",&,N,V_repeatHeaderCornerSpace
removeFromExcludedUidsTractRowUids:
removeFromExcludedUidsTractColumnUids:
saveAsEmbiggenedFormat
_saveAsEmbiggenedFormat
_formulaOwnerId
_cellDependencies
_rangeDependencies
_spanningColumnDependencies
_spanningRowDependencies
_volatileDependencies
_wholeOwnerDependencies
_errors
_uuidReferences
_formulaOwner
_calcEngineRegistrationObject
_formulaOwnerUid
TS,R,N,V_formulaOwnerId
TS,N,V_ownerIndex
T{TSKUIDStruct=QQ},R,N,V_formulaOwnerUid
T^v,R,N,V_cellDependencies
T^v,R,N,V_rangeDependencies
T^v,R,N,V_spanningColumnDependencies
T^v,R,N,V_spanningRowDependencies
T^v,R,N,V_volatileDependencies
T^v,R,N,V_wholeOwnerDependencies
T^v,R,N,V_errors
T@"TSCEUuidReferences",R,&,N,V_uuidReferences
T@"<TSCEFormulaOwning>",&,N,V_formulaOwner
T@"<TSCECalculationEngineRegistration>",&,N,V_calcEngineRegistrationObject
TB,N,V_saveAsEmbiggenedFormat
byteSizeForArchiving
isEqualToIndexSet:
setKeyRange:
loadObjectFromArchive:listType:unarchiver:completion:
setKeys:
_estimatedByteSize
_keys
_keyRange
T@"NSMutableIndexSet",&,N,V_keys
Ti,R,N,V_listType
TQ,R,N,V_estimatedByteSize
T{_NSRange=QQ},N,V_keyRange
initWithTableInfo:tableModel:region:forcingRegion:clampingRect:flags:searchFlags:
enumerateConcurrentlyUsingChunkBeginBlock:perDispatchThreadBlock:concurrentBlock:finalBlock:
p_enumerateConcurrentlyUsingChunkBeginBlock:perDispatchThreadBlock:concurrentBlock:finalBlock:
flags
iterateCellsInRegion:flags:searchFlags:clampingRange:usingBlock:
initWithTableInfo:region:clampingViewRect:flags:searchFlags:
initWithTableInfo:region:forcingRegion:flags:searchFlags:
cellsPerSubRegion
setCellsPerSubRegion:
forcingRegion
setForcingRegion:
arrayOfChunkRocks
setArrayOfChunkRocks:
setFlags:
searchFlags
setSearchFlags:
clampingRect
setClampingRect:
_cellsPerSubRegion
_forcingRegion
_arrayOfChunkRocks
_flags
_searchFlags
_clampingRect
T@"TSTCellRegion",&,N,V_forcingRegion
T@"NSPointerArray",&,N,V_arrayOfChunkRocks
TQ,N,V_flags
TQ,N,V_searchFlags
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_clampingRect
TQ,N,V_cellsPerSubRegion
initWithFirst:second:third:fourth:
setThird:
fourth
setFourth:
_first
_second
_third
_fourth
T@,&,N,V_first
T@,&,N,V_second
T@,&,N,V_third
T@,&,N,V_fourth
stringForMergeType:
setUidRanges:
setMergeFormulas:
setMergeFormulaIndexes:
initWithType:uidRange:
mergeActionForGrowingRange:coveringRange:inTable:
cellUIDRangeFromMergeFormula:calcEngine:
mergeActionForRemovingRanges:inTable:
mergeActionForInsertingRange:inTable:
initWithType:
hasMultiRowMerge
shrinkAction
actionByExpandingWithAction:
_uidRanges
_mergeFormulas
_mergeFormulaIndexes
Ti,N,V_type
Tr^v,N,V_uidRanges
Tr^v,N,V_mergeFormulas
Tr^v,N,V_mergeFormulaIndexes
compress
p_compressUID:index:UIDtoIndexMap:UIDs:compressedIndexes:lastSameUIDIndex:
compressUIDIndexListFrom:withUIDCount:to:
pruneCellUIDListAgainstTable:behavior:usingBlock:
cellUIDListFromRange:
compressedRowUIDs
compressedColumnUIDs
compressedRowIndexes
compressedColumnIndexes
setCompressedColumnIndexes:
computeValidCount
addCellUIDRanges:
pruneCellUIDListAgainstTable:behavior:
_rowIdList
_columnIdList
_rowUIDIndexList
_columnUIDIndexList
_uncompressedCellUIDs
_compressedSize
TQ,R,N,V_compressedSize
p_nextCellRefIdWithUIDIndexList:UIDs:index:remainDup:lastDiffPos:recentResults:
_nextCellUID_NoDispatch
setCellUIDList:
rowIndex
setRowIndex:
columnIndex
setColumnIndex:
rowRemainDup
setRowRemainDup:
columnRemainDup
setColumnRemainDup:
lastRowDiffPos
setLastRowDiffPos:
lastColumnDiffPos
setLastColumnDiffPos:
cellUID
setCellUID:
_recentRowResults
_recentColumnResults
_cellUIDList
_rowIndex
_columnIndex
_rowRemainDup
_columnRemainDup
_lastRowDiffPos
_lastColumnDiffPos
_cellUID
T@"TSTCellUIDList",&,N,V_cellUIDList
TQ,N,V_index
TQ,N,V_rowIndex
TQ,N,V_columnIndex
TQ,N,V_rowRemainDup
TQ,N,V_columnRemainDup
TQ,N,V_lastRowDiffPos
TQ,N,V_lastColumnDiffPos
T{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}},N,V_cellUID
localizedCaseInsensitiveCompare:toString:
setNotifyType:
rowUID
setRowUID:
_notifyType
_rowUID
Ti,N,V_notifyType
T@"TSTGroupNode",&,N,V_groupNode
T{TSKUIDStruct=QQ},N,V_rowUID
booleanValue
_booleanValue
initWithFunctionIndex:symbol:attribute:year:month:day:
p_timeInterval
invalidLiveStockAttributeError
invalidHistoricalStockAttributeError
invalidLiveCurrencyAttributeError
invalidHistoricalCurrencyAttributeError
invalidCurrencyPairError
invalidStockCodeError:
specifierFromArchive:
specifierByChangingAttributeTo:
hasDateEqualToDate:
isCurrency
invalidAttributeErrorValue
invalidSymbolErrorValue
hashVal
_hashVal
TQ,R,N,V_hashVal
T@"NSString",R,N,V_symbol
Tq,R,N,V_attribute
initWithStartingTileID:
_tileForLazyReference:
referenceForObject:
startingTileID
setStartingTileID:
_tiles
_references
_startingTileID
TQ,N,V_startingTileID
initWithDouble:locale:
initWithDecimal:locale:
_numberValue
initWithSpecifiers:
initWithSpecifierArray:
p_enumerateYearSetsWithBlock:
isEqualToSet:
yearsReferenced
p_coldSpecifierCount
hotData
minusSet:
containsColdSpecifiers
isSubsetOfSet:
sortDescriptorWithKey:ascending:
sortedArrayUsingDescriptors:
hotSpecifiers
setWithSpecifiers:
intersectSet:
setOfSpecifiersPassingTest:
p_description:
setWithSpecifier:
setWithSpecifierArray:
removeSpecifier:
insertSpecifiersFromArray:
removeSpecifiersFromArray:
removeAllSpecifiers
containsSpecifier:
hotSpecifierArray
coldSpecifiers
coldSpecifiersForYear:
coldSpecifierArrayForYear:
sortedArrayOfSpecifiers
hotSpecifierSet
setByRemovingSpecifiersWithSymbols:
setOfSpecifiersWithSymbol:
setOfSpecifiersWithDate:
shortDescription
setHotData:
_coldDataByYear
_hotData
T@"NSMutableSet",&,N,V_hotData
_mergedRects
Tr^v,R,N,V_mergedRects
initWithTableUID:beforeViewColumnRowUIDMap:beforeRewriteMap:
beforeRewriteMap
setBeforeRewriteMap:
beforeColumnRowUIDMap
setBeforeColumnRowUIDMap:
afterRewriteMap
setAfterRewriteMap:
_beforeRewriteMap
_beforeColumnRowUIDMap
_afterRewriteMap
T@"TSTHierarchicalCellDiffMap",&,N,V_beforeRewriteMap
T@"TSTColumnRowUIDMapper",&,N,V_beforeColumnRowUIDMap
T@"TSTHierarchicalCellDiffMap",&,N,V_afterRewriteMap
initWithTableModel:ownerUID:annotations:formulaStore:
addAnnotation:withFormulaObject:atIndex:
annotations
indexOfAnnotation:
removeAnnotation:
enumerateAnnotationsWithBlock:
_indexesForRange:startingOnly:
_enumerateAnnotationsAndFormulasWithIndexes:block:
_indexesContainedByRegion:
_annotationsForIndexes:
_indexesForRows:
_indexesIntersectingButNotContainingBaseCellRegion:
containsModelCellRect:
_enumerateIndexesIntersectingRegion:block:
requiresDocumentReadVersion:writeVersion:featureIdentifier:
addAnnotation:withFormula:atIndex:
removeAllAnnotations
removeAnnotationAtIndex:
enumerateAnnotationsAndFormulasInRange:withBlock:
containsAnnotation:
annotationsStartingInRange:
_annotationsInRows:
_annotationsIntersectingButNotContainingBaseCellRegion:
setAnnotations:
_annotations
T@"TSCECalculationEngine",R,W,N,V_calculationEngine
T@"TSUSparseArray",&,N,V_annotations
initWithFlags:sortingAggregateRuleUid:
isNotEmpty
_sortingAggregateRuleUid
Tq,R,N,V_flags
T{TSKUIDStruct=QQ},R,N,V_sortingAggregateRuleUid
setPivotOptions:forUid:
prunedCopyWithUids:
_optionsForUidMap
p_resetToRows:andNumColumns:
p_setFittingHeightsFromCollectionWithLock:
numberWithUnsignedShort:
willModifyIfPossible:
hasBeforeAfterCounts
p_deleteRowsStartingWith:upToRow:
enumerateRowRangesInReverseUsingBlock:
p_insertRows:atRow:
p_deleteColumnsStartingWith:upToColumn:
enumerateColumnRangesInReverseUsingBlock:
p_insertColumns:atColumn:
p_moveRowsUsingShuffleMapping:
applyMappingToIndexSet:
p_moveRowsFrom:toRow:
p_moveColumnsFrom:toColumn:
p_resetFittingHeightsForRange:
canModify
initWithNumRows:andNumColumns:
setFittingHeightsFromCollection:
needsToBeArchived
setNeedsToBeArchived:
_rowHeights
_columnModelWidths
_needsToBeArchived
TB,N,V_needsToBeArchived
setWithCapacity:
initWithCoordinator:
reachabilityCheckHost
p_configureReachabilityWithHost:
setOffline:
setDoFullRefresh:
allRequestedKeys
newlyRequestedKeys
p_refreshSpecifiers
networkReachabilityWithHostName:
setServerReachability:
serverReachability
setReachabilityUpdatedBlock:
networkReachabilityForInternetConnection
setInternetReachability:
internetReachability
enableNotifier
internetReachabilityStatusWithQueue:completion:
fetchableKeysFromSet:
resumeUpdating
stopUpdating
sendRequestForKeys:
requestsInFlight
setRequestsInFlight:
state
setState:
minimumTimeBetweenRequests
lastRequestDate
lastFullRefreshDate
recommendedTimeBetweenRequests
doFullRefresh
setLastFullRefreshDate:
setLastRequestDate:
disableNotifier
earlyRefreshRequested
setEarlyRefreshRequested:
fetcherWithCoordinator:
enqueueRequestForKeys:
requestLaunched
requestCompleted
recommendedTimeBetweenRequestsForWWAN
timer
setTimer:
_offline
_doFullRefresh
_earlyRefreshRequested
_coordinator
_allRequestedKeys
_newlyRequestedKeys
_serverReachability
_internetReachability
_timer
_lastRequestDate
_lastFullRefreshDate
_state
_requestsInFlight
T@"TSCERemoteDataSpecifierSet",R,N,V_allRequestedKeys
T@"TSCERemoteDataSpecifierSet",R,N,V_newlyRequestedKeys
T@"TSUNetworkReachability",&,N,V_serverReachability
T@"TSUNetworkReachability",&,N,V_internetReachability
T@"NSObject<OS_dispatch_source>",&,N,V_timer
T@"NSDate",&,N,V_lastRequestDate
T@"NSDate",&,N,V_lastFullRefreshDate
TB,V_offline
TB,V_doFullRefresh
TB,V_earlyRefreshRequested
Tq,V_state
Tq,V_requestsInFlight
T@"TSCERemoteDataCoordinator",R,W,N,V_coordinator
raiseReferenceToEmptyCellErrorForFunctionName:rangeReference:
numberValueFromString:locale:outDecimalValue:
raiseValueErrorForFunctionName:
_flushFormulasToRemoveWithDepTracker:startTime:timeout:
_flushFormulasToReplaceWithDepTracker:startTime:timeout:
_flushFormulasToResetWithDepTracker:startTime:timeout:
processInBackgroundIfNecessary
waitForAllPrecedentsToLoad
flushFormulaChangesForSeconds:
removeFormulasAt:inOwner:removeOutstandingReplaces:
_removeReplaceMutex
_options
_formulasToRemove
_formulasToReset
_formulasToReplace
_precedentLoadingQueue
_precedentLoadingGroup
_flushAllInProgress
_runningInBackground
_backgroundProcessingQueue
initWithChangeDescriptorType:cellRegion:cellID:strokeRegion:referenceIdentifiers:shuffleMapping:annotations:
initWithChangeDescriptorType:cellRegion:cellID:strokeRegion:referenceIdentifiers:shuffleMapping:
setBeforeCountValue:
setAfterCountValue:
changeDescriptorWithType:cellID:cellRegion:strokeRegion:
changeDescriptorWithType:cellRegion:strokeRegion:beforeCount:afterCount:
changeDescriptorWithType:cellRegion:beforeCount:afterCount:
changeDescriptorWithType:
changeDescriptorWithType:cellID:cellRange:
changeDescriptorWithType:cellID:cellRange:strokeRange:
changeDescriptorWithType:cellID:strokeRange:
changeDescriptorWithType:strokeRange:
changeDescriptorWithType:referenceIdentifiers:
changeDescriptorWithType:shuffleMapping:
changeDescriptorWithAnnotationsRemovedForMerge:
enumerateChangeRecords:withType:block:
markAsProcessed
strokeRange
referenceIdentifiers
setReferenceIdentifiers:
setChangeDescriptor:
setCellRegion:
setStrokeRegion:
setShuffleMapping:
beforeCountValue
afterCountValue
_processedByLayoutEngine
_changeDescriptor
_referenceIdentifiers
_cellRegion
_strokeRegion
_shuffleMapping
_beforeCountValue
_afterCountValue
Ti,N,V_changeDescriptor
T@"TSTCellRegion",&,N,V_cellRegion
T@"TSTCellRegion",&,N,V_strokeRegion
T@"NSHashTable",&,N,V_referenceIdentifiers
T@"TSKShuffleMapping",&,N,V_shuffleMapping
T@"NSSet",&,N,V_annotations
TQ,N,V_beforeCountValue
TQ,N,V_afterCountValue
TB,N,V_processedByLayoutEngine
initWithTopInset:leftInset:bottomInset:rightInset:
forceWesternLineBreaking
T@"<TSWPStyleProviding>",R,W,N
mPadding
mVerticalAlignment
mMaxWidthForChildren
mLocale
mShouldHyphenate
mStyleProvidingSource
Td,N,VmMaxWidthForChildren
T@"<TSWPStyleProviding>",W,N,VmStyleProvidingSource
T@"TSULocale",R,N,VmLocale
TB,R,N,VmShouldHyphenate
ruleWithBaseIndex:direction:
isEqualToArray:
filteredArrayUsingPredicate:
sortOrderWithBaseColumn:direction:type:
baseColumnIndices
sortOrderByChangingTypeTo:
sortOrderByAddingRule:
sortOrderByRemovingRuleAtIndex:
sortOrderByReplacingRuleAtIndex:withRule:
sortOrderByReplacingRulesWithRules:
sortOrderByRemovingBaseColumnIndices:
containsAnyRulesInBaseColumns:
cachedIndexes
setCachedIndexes:
_cachedIndexes
T@"NSIndexSet",&,N,V_cachedIndexes
T@"NSArray",R,N,V_rules
Ti,R,N,V_type
tableResolver
tableRangeOfTable
cellStatesToLayout
layoutMergeRange
inDynamicLayout
cellPropsRowHeight
initWithLayoutTask:
_cellStatesToLayout
T@"TSTLayoutEngine",R,W,N,V_layoutEngine
T@"NSMutableArray",R,N,V_cellStatesToLayout
reapAccumulatedCellRegionWithTable:
_rowUIDToColumnUIDSetMap
extractComponentsFromDate:year:month:day:hour:minute:second:
isEqualToTimeZone:
standardUserDefaults
boolForKey:
initWithContext:calcEngine:
defaultTimeZone
processInfo
processorCount
dateParserLibrary
prepareDateParserInBackground
recalcInProgressUpdate:
allFormulaCellsAreClean
integrateReservedPrecedents
initWithTimeIntervalSinceNow:
performReadAllowingOverlappingImplicitRead:thenWrite:thenReadOnPrimaryThread:
setValue:forKey:
drawableInfo
newTableResolverForResolver:
initWithTableUIDMap:
extendMappingWithTableUIDs:calcEngine:
rollbackMappings:
initWithTimeout:
detachNewThreadSelector:toTarget:withObject:
hasRead
waitOnIdentifier:untilDate:releaseReadWhileWaiting:
localeIdentifier
formattingSymbols
updateTrackedHeadersForDocumentLocaleChange:
tooManyCellRefsFor31FormatArchive
name
encodeToArchive:alsoSave31Format:archiver:
initFromArchive:dependencyTracker:
setNRM_formulaOwnerUID:
tableWasAdded:
raiseInvalidCurrencyComparisonError
raiseZeroToPowerOfZeroError
forDrawing
_cellPropsRowHeight
_cellWraps
_needWPColumn
_shouldFastPathMeasureFitWidth
_forDrawing
_inDynamicLayout
_verticalAlignment
_layoutCacheFlags
_modelCellID
_cellContents
_maxWidthForChildren
_keyVal
_wpColumn
_pageNumber
_pageCount
_layoutMergeRange
_minSize
_maxSize
_sizeOfText
_paddingInsets
T{TSUCellCoord=ISBB},N,V_modelCellID
T@"TSTCell",C,N,V_cell
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_layoutMergeRange
T@,&,N,V_cellContents
T{CGSize=dd},N,V_minSize
T{CGSize=dd},N,V_maxSize
Td,N,V_maxWidthForChildren
T{UIEdgeInsets=dddd},N,V_paddingInsets
Ti,N,V_verticalAlignment
TB,N,V_cellPropsRowHeight
TB,N,V_cellWraps
TB,N,V_needWPColumn
TB,N,V_shouldFastPathMeasureFitWidth
TB,N,V_forDrawing
TB,N,V_inDynamicLayout
Ti,N,V_layoutCacheFlags
T{CGSize=dd},N,V_sizeOfText
T@"TSTLayoutContentCachedKey",&,N,V_keyVal
T@"TSWPColumn",&,N,V_wpColumn
TQ,N,V_pageNumber
TQ,N,V_pageCount
setExpressionNode:
setCachedImage:
copyIntoContext:
requestRedraw
isActive
setActive:
isSelected
setSelected:
isHighlighted
setHighlighted:
neverShowsMenu
cachedImage
cachedImageScreenScale
setCachedImageScreenScale:
inInvalidate
setInInvalidate:
_active
_selected
_highlighted
_neverShowsMenu
_inInvalidate
_cachedImage
_cachedImageScreenScale
TB,N,V_inInvalidate
T@"TSTExpressionNode",&,N,V_expressionNode
active
TB,N,GisActive,V_active
selected
TB,N,GisSelected,V_selected
highlighted
TB,N,GisHighlighted,V_highlighted
TB,N,GneverShowsMenu,V_neverShowsMenu
T^{CGImage=},N,V_cachedImage
Td,N,V_cachedImageScreenScale
initWithContext:tableInfo:rowUids:columnUids:
_groupBy:
_numberOfLevels:
orderedUidsFromUids:forDimension:
setOrder:forDimension:
orderForDimension:
_maxLevel:
initWithTableInfo:rowUids:columnUids:
copyWithContext:tableInfo:
targetGroupFromIndex:minSourceLevel:templateUID:forDimension:
minimumCategoryLevelInRange:forDimension:
insertUids:beforeUid:forDimension:
removeUids:forDimension:
groupUidsGivenUids:selectedLevels:forDimension:
uidMap
setUidMap:
isRowOrderTemporary
setIsRowOrderTemporary:
isColumnOrderTemporary
setIsColumnOrderTemporary:
_isRowOrderTemporary
_isColumnOrderTemporary
T@"TSTColumnRowUIDMap",&,V_uidMap
TB,V_isRowOrderTemporary
TB,V_isColumnOrderTemporary
T@"TSTGroupBy",R,V_groupBy
p_removeCanvasReference
p_createCanvasReference
initWithContext:completionText:
setCompletionText:
setPrefixRange:
setReferenceColor:
setEditingReferenceNode:
tokenText
makeTokenReflectChoice:
completionText
prefixRange
renderAsTokenType
editingReferenceNode
canvasReferenceProvider
setCanvasReferenceProvider:
_renderAsTokenType
_completionText
_editingReferenceNode
_referenceColor
_canvasReferenceProvider
_prefixRange
T@"NSString",&,N,V_completionText
T{_NSRange=QQ},N,V_prefixRange
Ti,R,N,V_renderAsTokenType
T@"TSTReferenceNode",&,N,V_editingReferenceNode
T@"TSUColor",&,N,V_referenceColor
T@"<TSTCanvasReferenceProvider>",W,N,V_canvasReferenceProvider
initWithStroke:range:order:andPosition:
tokenWithStroke:range:order:andPosition:
_position
TQ,N,V_position
contextForTransientObjects
p_mergeStrokeRunsAtPosition:
p_appendStroke:inRange:order:
strokeLayerAtIndex:
strokeLayerCount
p_setStroke:inRange:order:
p_invalidateRange:
p_insertSpaceAtRange:
p_removeRange:
p_flattenStrokeOrder
_strokeRuns
_columnOrRowIndex
TI,N,V_columnOrRowIndex
TI,D,N
keyValuePairCount
setMissingDataFieldAtIndex:
firstMissingDataField
enumerateDataKeyValuePairsUsingBlock:
aggregateIndex
aggregateFieldName
_dataFields
_dataValues
_missingGroupingColumn
_aggregateIndex
_aggregateFieldName
T@"NSString",&,N,V_aggregateFieldName
TS,N,V_aggregateIndex
TC,N,V_showAsType
taggedDecimalList
raiseMixedTypeManipulationErrorForFunctionName:
createFromVector:functionSpec:argumentIndex:evaluationContext:ignoreError:ignoreDuplicates:
_taggedList
isEqualToPropertyMap:
initWithStyle:andPropertyMap:
setStyle:
setPropertyMap:
_style
_propertyMap
T@"TSSStyle",&,N,V_style
T@"TSSPropertyMap",&,N,V_propertyMap
initWithStylesheet:
setStylesheet:
repairOrReplaceMap
setRepairOrReplaceMap:
variationMap
setVariationMap:
_repairOrReplaceLock
_variationLock
_stylesheet
_repairOrReplaceMap
_variationMap
T@"TSSStylesheet",&,N,V_stylesheet
T@"NSMapTable",&,N,V_repairOrReplaceMap
T@"NSMapTable",&,N,V_variationMap
addCellRange:
p_NumberOfColumnBuilds:
p_NumberOfRowBuilds:
p_NumberOfCellBuilds:
p_stageCountForProvider:withAnimationKind:
enabled
drawsBlackAndWhite
drawCellContent
newAnimationWithLayout:andDeliveryStyle:
newAnimationWithLayout:andCellRange:
deliveryStyleSupportedForExport:
setStage:andFinal:
cellRangeCount
clearCellRanges
drawTableName
drawTableBackground
drawCellBackground
clipStrokes
drawStrokes
isHidingContentOfCellID:
stageCount
stage
final
showsTableChrome
setShowsTableChrome:
showsOverlayLayers
setShowsOverlayLayers:
expandBackgroundFill
setExpandBackgroundFill:
setDrawsBlackAndWhite:
mKind
mCellRanges
mCellRangeCount
mStageCount
mStage
mFinal
mByColumn
mByRow
mByCell
mByContent
mByCellRange
mByMissingCellRange
mReverse
mShowsTableChrome
mShowsOverlayLayers
mExpandBackgroundFill
mDrawsBlackAndWhite
mLayout
T@"TSTLayout",W,N,VmLayout
TQ,R,VmStageCount
TQ,R,VmStage
TB,R,VmFinal
TB,VmShowsTableChrome
TB,VmShowsOverlayLayers
TB,VmExpandBackgroundFill
TB,VmDrawsBlackAndWhite
heightForString:textMeasurerBundle:width:outFitWidth:
widthForString:textMeasurerBundle:
initWithTextMeasurerBundle:
textMeasurerBundle
setTextMeasurerBundle:
_dupContentEntryToHeightCache
_dupContentEntryToWidthCache
_textMeasurerBundle
T@"TSWPTextMeasurerBundle",&,N,V_textMeasurerBundle
p_didReceiveMemoryWarning:
sharedApplication
addObserver:selector:name:object:
p_didEnterBackground:
canQuicklyMeasureParagraphStyle:
textMeasurerBundleForParagraphStyle:
fontInfoForTextStyle:
canQuicklyMeasureString:textMeasurerBundle:
setCache:
propertyMapToTextStyleMap
setPropertyMapToTextStyleMap:
_resolvedTextStyleLock
_cache
_propertyMapToTextStyleMap
T@"NSMapTable",&,N,V_cache
T@"NSMapTable",&,N,V_propertyMapToTextStyleMap
_wordFragmentsList
_headerCoords
unpackEntryAfterUnarchive:
addChangedTile:
getNextPrecedentCoord:
setEntry:forPrecedentCoord:
initWithHeaderNameMgr:context:
lastFragment
setLastFragment:
firstFragment
setFirstFragment:
medianStringFromArray:
fragmentEntryForString:
createFragmentEntryForString:createIfMissingUsingPrecedentCoord:
splitTile
_tileLock
_firstFragment
_lastFragment
_nameFragmentToEntry
_headerNameMgr
T@"NSString",&,N,V_firstFragment
T@"NSString",&,N,V_lastFragment
namePrefixIndex
wordFragmentsFromString:savePreserveFlags:
includesPrefixes
initWithHeaderNameMgr:limitToTableUID:
loadSubsetWithExactMatches:prefixMatches:
limitedToTableUID
setIncludesPrefixes:
originalFullReferenceString
_hnm
_limitedToTableUID
_includesPrefixes
_stringsInHeaderCells
_prefixStringsInHeaderCells
_originalFullReferenceString
T{TSKUIDStruct=QQ},R,N,V_limitedToTableUID
TB,N,V_includesPrefixes
T@"NSString",R,N,V_originalFullReferenceString
setup
usedPrecedentCoord:
waitForQueueToDrain
findTileForString:findClosest:
setForceSplitting:
splitRefPath:
trimmedStringWithPreserveFlag:
perTableEntryForTable:createIfMissing:
updateTrackedHeaders:checkForEmptyHeaders:
fragmentEntryForNameFragmentPrecedent:
findTileForString:findClosest:foundAtOffset:
handleFullTile:
p_updateWithWordFragments:atCellCoord:tableUID:
p_updateText:atCellCoord:tableUID:
updateText:atCellCoord:tableUID:
reservePrecedent:forNameFragment:
scalarValueFromCoord:permitAccessInsideMergeRegions:fetchRichTextAttributesIfPlainText:
p_willApplyCell:baseCellCoord:tableUID:
tileForEntry:
columnUIDForViewColumnIndex:
updateWithIndexingChunks:
isClosing
p_processWorkForTable:
numberOfTiles
reservedPrecedentForNameFragment:
clearTextAtCellCoord:tableUID:
nameFragmentPrecedentsForReferenceString:
baseHeaderColumnsForCell:
baseHeaderRowsForCell:
_weakCalcEngine
_headerNameMgrReadWriteLock
_nextPrecedentCoord
_nextPrecedentCoordLock
_allHeaderPerTablesPrecedent
_needsTileSplittingPrecedent
_nameFragmentTiles
_fragPrecedentToEntry
_fragPrecedentsUsedByCellRef
_perTableInfo
_headerPerTablePrecedentToTableUID
_namePrefixIndex
_reservedFragmentPrecedentsLock
_reservedFragmentPrecedents
_tilesToConsiderSplitting
_isClosing
_nrm_ownerUID
_whitespaceToBreakAt
initWithContext:cellDiffArray:cellUIDList:uidBased:
initWithArray:context:
p_scanCellDiffArrayForCellBorderChanges:
p_scanCellDiffArrayForSuppressCustomFormatHandlingProperty:
addCellDiff:andCellUID:avoidCopy:
addCellDiff:andCellID:avoidCopy:
cellDiffArray
containsCellBorderChanges
containsSuppressCustomFormatHandlingProperty
p_scanNSArrayOfDiffsForCellBorderChanges:
p_scanNSArrayOfDiffsForSuppressCustomFormatHandlingProperty:
addCellDiff:andCellUID:
enumerateElementsUsingBlock:
addCellDiff:andCellID:
enumerateCellIDElementsUsingBlock:
pruneCellDiffMapAgainstTable:behavior:usingBlock:
setCellDiffArray:
setContainsCellBorderChanges:
initWithContext:cellDiff:cellUIDList:
addCellDiffMap:
addCellDiffs:atCellUIDs:
appendCellDiffMap:
pruneCellDiffMapAgainstTable:behavior:
uuidBasedCellDiffMapByTableInfo:
cellDiffMapByIntersectingUIDs:inRows:
cellDiffMapByRemovingRows:
cellDiffMapByRemovingColumns:
setContainsSuppressCustomFormatHandlingProperty:
_containsCellBorderChanges
_containsSuppressCustomFormatHandlingProperty
_cellDiffArray
T@"TSTCellDiffArray",&,N,V_cellDiffArray
TB,N,V_containsCellBorderChanges
TB,N,V_containsSuppressCustomFormatHandlingProperty
setTransposedBodyRange:
_transposedBodyRange
T{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}},N,V_transposedBodyRange
TI,N,V_numberOfFooterRows
_tableUIDMap
initWithGroupByUid:groupNodeUIDMap:
_groupNodeUIDMap
initWithBaseIndex:direction:
ruleByChangingBaseIndexTo:
_baseIndex
T{TSUModelColumnOrRowIndex=I},R,N,V_baseIndex
Ti,R,N,V_direction
ruleWithViewIndex:direction:
viewIndex
_viewIndex
T{TSUViewColumnOrRowIndex=I},R,N,V_viewIndex
combinedCanonicalKeyStringAsUtf8
initWithTSCEValues:locale:
_groupValues
_groupValueUid
_combinedCanonicalKeyStringAsUtf8
p_iterateCellsAndTerminateWithIterator:usingBlock:
cellIteratorWithRegion:flags:searchFlags:clampingRange:
isLeftParen:
isRightParen:
initWithRawString:
quoteStringIfNeeded
setWasQuoted:
setHasPreserveFlag:
rawString
setRawString:
_wasQuoted
_hasPreserveFlag
_rawString
TB,N,V_wasQuoted
TB,N,V_hasPreserveFlag
T@"NSString",&,N,V_rawString
trimmedStringStartingAtWord:withPreserveFlags:
addRefPathWord:
_refPathWords
isSingleQuote:
addCharactersInRange:
refPathInterestingCharactersSet
initWithComponents:aggregateFunction:
addComponent:
forceSplitting
_quotedComponents
_forceSplitting
_localizedBlankGroupName
_localizedErrorGroupName
_localizedTrueGroupName
_localizedFalseGroupName
_localizedTrueGroupNameForColumn
_localizedFalseGroupNameForColumn
T@"NSString",&,N,V_localizedBlankGroupName
T@"NSString",&,N,V_localizedErrorGroupName
T@"NSString",&,N,V_localizedTrueGroupName
T@"NSString",&,N,V_localizedFalseGroupName
T@"NSString",&,N,V_localizedTrueGroupNameForColumn
T@"NSString",&,N,V_localizedFalseGroupNameForColumn
TB,N,V_forceSplitting
removeCellRef:forUuid:
getCellRefs:referringToUuids:
upgradeForOwners:
_cellRefsByUuid
_uuidsByCellRef
frameWithViewScale:contentFrame:checked:outCheckboxImage:outCheckboxSize:
imageForScale:checked:outDrawingScale:
CGImageForSize:inContext:orContentsScaleProvider:
frameWithViewScale:contentFrame:
renderCheckbox:viewScale:intoContext:rect:color:
_set
height
isEqualToLayoutContentCachedKey:
_writingDirection
_width
_height
_paragraphStyle
_naturalAlignment
Td,R,N,V_width
Td,R,N,V_height
T@"TSWPParagraphStyle",R,N,V_paragraphStyle
TB,R,N,V_cellWraps
TC,R,N,V_valueType
T{UIEdgeInsets=dddd},R,N,V_paddingInsets
Ti,R,N,V_verticalAlignment
Ti,R,N,V_writingDirection
Tq,R,N,V_naturalAlignment
T@"<TSWPStyleProviding>",R,W,N,V_styleProvidingSource
p_captureRowColumnInformation:columnRegion:rowRegion:
initWithLayoutEngine:columnRegion:rowRegion:
rowRegion
startRowIndex
capturedRowHeightTotal
columnRegion
startColumnIndex
capturedColumnWidthTotal
numberOfIntersectingRows
applyResizeHeightFactor:
applyResizeWidthFactor:
enumerateRowHeightsUsingBlock:
enumerateColumnWidthsUsingBlock:
getMinimumRowHeight:
getMinimumColumnWidth:
initWithLayoutEngine:columnRegion:
initWithLayoutEngine:rowRegion:
initWithDynamicResizeInfo:
getRowInitialHeight:
getColumnInitialWidth:
getRowHeightResize:
getColumnWidthResize:
captureNewMinimumRowHeights:
totalCapturedRowHeights
totalCapturedColumnWidths
totalCurrentRowHeights
totalCurrentColumnWidths
totalMinimumRowHeights
totalMinimumColumnWidths
applyRowTotalHeight:
applyColumnTotalWidth:
capturedTableSize
numberOfResizableRows
numberOfResizableColumns
setRowRegion:
setColumnRegion:
_capturedRowHeights
_currentRowHeights
_minimumRowHeights
_capturedColumnWidths
_currentColumnWidths
_minimumColumnWidths
_valid
_startColumnIndex
_startRowIndex
_numberOfResizableRows
_numberOfResizableColumns
_capturedRowHeightTotal
_capturedColumnWidthTotal
_rowRegion
_columnRegion
TB,R,N,V_valid
Ti,R,N,V_tableRowsBehavior
TI,R,N,V_startRowIndex
TI,R,N,V_numberOfRows
TI,R,N,V_numberOfResizableRows
Td,R,N,V_capturedRowHeightTotal
TS,R,N,V_startColumnIndex
TI,R,N,V_numberOfColumns
TI,R,N,V_numberOfResizableColumns
Td,R,N,V_capturedColumnWidthTotal
T@"TSTCellRegion",&,N,V_rowRegion
T@"TSTCellRegion",&,N,V_columnRegion
isConnected
_originalUIDMap
_originalVersionCounter
_copiedUIDMap
inflateFromStorageRef:dataStore:cache:
formulaSpecForStorageRef:
setBaseRow:
setBaseTile:
tempSummaryCell
checkCell:searchFlags:
i_tileStartingAtOrBeforeRowIndex:outTileRange:
intersectsRow:
searchMask
setSearchMask:
baseDataStore
baseDataListCache
curRowIndex
setCurRowIndex:
isSummaryRow
setIsSummaryRow:
isLabelRow
setIsLabelRow:
setUuid:
baseRowIndex
setBaseRowIndex:
baseTile
baseTileRange
setBaseTileRange:
baseRow
terminated
setTerminated:
populatedColumnsForGroupLevel1
setPopulatedColumnsForGroupLevel1:
populatedColumnsForGroupLevel2
setPopulatedColumnsForGroupLevel2:
populatedColumnsForGroupLevel3
setPopulatedColumnsForGroupLevel3:
populatedColumnsForGroupLevel4
setPopulatedColumnsForGroupLevel4:
populatedColumnsForGroupLevel5
setPopulatedColumnsForGroupLevel5:
viewColumnIndexesInCurrentRow
setViewColumnIndexesInCurrentRow:
_mapFromViewToBaseColumnInCurrentRow
_tempSummaryCell
_isSummaryRow
_isLabelRow
_terminated
_categoryColumnIndex
_curRowIndex
_baseRowIndex
_info
_searchMask
_baseDataStore
_baseDataListCache
_baseMap
_viewMap
_summaryMap
_baseTile
_baseRow
_populatedColumnsForGroupLevel1
_populatedColumnsForGroupLevel2
_populatedColumnsForGroupLevel3
_populatedColumnsForGroupLevel4
_populatedColumnsForGroupLevel5
_viewColumnIndexesInCurrentRow
_uuid
_baseTileRange
T@"TSTGroupBy",R,W,N,V_groupBy
T@"TSTCategoryTranslator",R,N,V_translator
T@"TSTTableDataStore",R,W,N,V_baseDataStore
T@"TSTTableDataListCache",R,N,V_baseDataListCache
T@"TSTColumnRowUIDMap",R,W,N,V_baseMap
T@"TSTColumnRowUIDMap",R,W,N,V_viewMap
T@"TSTSummaryCellVendor",R,W,N,V_summaryCellVendor
T@"TSTColumnRowUIDMap",R,W,N,V_summaryMap
TQ,N,V_searchMask
TI,N,V_curRowIndex
TS,R,N,V_categoryColumnIndex
TB,N,V_isSummaryRow
TB,N,V_isLabelRow
TC,N,V_groupLevel
T{TSKUIDStruct=QQ},N,V_uuid
TI,N,V_baseRowIndex
T@"TSTTableTile",&,N,V_baseTile
T{_NSRange=QQ},N,V_baseTileRange
T@"TSTTableTileRowInfo",&,N,V_baseRow
T@"TSTCell",R,N,V_cell
TB,N,V_terminated
T@"NSIndexSet",&,N,V_populatedColumnsForGroupLevel1
T@"NSIndexSet",&,N,V_populatedColumnsForGroupLevel2
T@"NSIndexSet",&,N,V_populatedColumnsForGroupLevel3
T@"NSIndexSet",&,N,V_populatedColumnsForGroupLevel4
T@"NSIndexSet",&,N,V_populatedColumnsForGroupLevel5
T@"NSIndexSet",&,N,V_viewColumnIndexesInCurrentRow
T@"TSTTableInfo",R,N,V_info
isEqualToTSCEFormulaOwnerWrapper:
Tr^{TSKUIDStruct=QQ},R,N
resetDependenciesForCell:
UIDSetForRange:isRows:
changesWithPageNumber
hyperlinkCellID
attributeArrayForKind:withCreate:
variationOfCharacterStyle:paragraphStyle:propertyMap:
changesWithPageCount
setHyperlinkCellID:
nonUndoableAppendStoragePreservingEmphasis:
T{TSUCellCoord=ISBB},D,N
removeAllCells
applyFormulaResult:context:hasWarnings:outWriteDidBeginOrEndWithTextCell:propagateCheckboxesAndRatings:
setCell:atCellID:
Tr^{TSKUIDStruct=QQ},N,V_tableUID
Tr^{TSKUIDStruct=QQ},N,V_ownerUID
T@"TSTTableInfo",W,N
initWithContext:storage:
initWithStorage:
setStorage:
_storage
T@"TSWPStorage",&,N,V_storage
initWithTract:tableUID:preserveFlags:
setTract:
isValidOrSpanning
setAggregateIndexLevel:
setColumnGroupLevel:
setRowGroupLevel:
_tract
_aggregateIndexLevel
_columnGroupLevel
_rowGroupLevel
T@"TSCEUndoTract",&,N,V_tract
TS,N,V_aggregateIndexLevel
TC,N,V_columnGroupLevel
TC,N,V_rowGroupLevel
upgradingToSubOwnerUIDs
p_resolveCellUIDToVendorCellUID:
setHasCustomFormatsToPaste:
hasCustomFormatsToPaste
setTableInfoForGSSP:
runChange:withSummaryCellMap:migrationHelper:
cellUIDMap
_upgradingToSubOwnerUIDs
_hasCustomFormatsToPaste
_cellUIDMap
T^v,R,N,V_cellUIDMap
TB,N,V_hasCustomFormatsToPaste
T@"TSTTableInfo",R,W,N,V_tableInfo
TB,N,V_upgradingToSubOwnerUIDs
_timeoutInterval
_blockingIdentifier
Td,R,V_timeoutInterval
T@"NSString",R,V_blockingIdentifier
initWithFormulaPredicate:
initWithPredicateType:arg1:arg2:qualifier1:qualifier2:argumentCellRef:hostCell:
initRuleWhereValuesInTable:andDataList:inBaseColumn:matchCell:
copyToUidFormForHiddenRowsWithTableInfo:
copyToGeometricFormForHiddenRowsWithTableInfo:containsBadRef:
copyByOffsettingRelativeReferencesWithOffset:
evaluateAtCellID:onOwnerUID:calcEngine:
predArg1Type
dataList1
encodeToPrePivotArchive:archiver:
initFromPrePivotArchive:
ruleWithFormulaPredicate:
ruleWhereValuesInTable:inBaseColumn:matchCell:
copyByRewritingToUidFormWithTableInfo:
copyByRewritingToGeometricFormWithTableInfo:containsBadRef:
copyByRewritingFromTableModel:toTableModel:
isUniquesOrDuplicates
setDoesNotNeedFormulaRewriteForImport
matchesRow:withFormulaTableUID:withCalculationEngine:
matchesCell:
setPredicate:
doesNotNeedFormulaRewriteForImport
setDoesNotNeedFormulaRewriteForImport:
_doesNotNeedFormulaRewriteForImport
_predicate
T@"TSTFormulaPredicate",&,N,V_predicate
TB,N,V_doesNotNeedFormulaRewriteForImport
defaultPredicateForType:argumentCellRef:hostCell:
removeRulesWithAbsoluteIndices:
predArg0
forConditionalStyle
initWithPredicateType:arg0:arg1:arg2:qualifier1:qualifier2:forConditionalStyle:
filterSetType
backwardCompatiblePrePivot
canDowngradeForPrePivotFormat
p_downgradedFilterRuleForListItem:fromPredicate:
downgradeForPrePivotFormatForLocale:
setDowngradedForPrePivot:
p_thresholdComparisonMatchesFilter:withPredicateType:
numberOfRulesInFilter:
objectsAtIndexes:
removeObjectsAtIndexes:
insertObjects:atIndexes:
p_addRules:atRuleIndices:inFilter:isNew:
replaceRuleAtAbsoluteIndex:withRule:
filterAtIndex:inTable:
baseColumnIndicesForRulesInTable:
copyByRewritingFilterRulesWithContext:fromTableModel:toTableModel:
ruleInFilter:atIndex:
canAddRules
newFilterIndex
removeRulesWithIndices:inFilter:
removeRulesForBaseColumnIndices:withTableInfo:
addRules:inFilter:
replaceRule:atRuleIndex:inFilter:
enumerateFilterIndicesInTable:usingBlock:
enumerateFiltersForColumn:withTable:usingBlock:
enumerateRulesInFilterIndex:usingBlock:
filterIndicesForBaseColumn:inTable:
firstFilterIndexForBaseColumn:inTable:
ruleIndexInFilter:matchingCell:
absoluteRuleIndicesForColumn:inTable:
viewColumnIndicesForRulesInTable:
setRules:
downgradedForPrePivot
_needsFormulaRewriteForImport
_filterOffsets
_downgradedForPrePivot
T@"NSArray",&,N,V_rules
Ti,N
TB,N,V_needsFormulaRewriteForImport
TB,N,V_downgradedForPrePivot
initWithGroupByUID:absGroupUid:columnUid:aggType:groupLevel:aggrIndexLevel:
setShowAggregateName:
copyAndReplaceGroupUIDs:
convertToBadRef
restoreFromBadRef
setAggrIndexLevel:
setRelativeColumn:
setOptions:
_relativeGroupUid
_absoluteGroupUid
_aggType
_aggrIndexLevel
_relativeColumn
T{TSKUIDStruct=QQ},N,V_relativeGroupUid
T{TSKUIDStruct=QQ},N,V_absoluteGroupUid
T{TSKUIDStruct=QQ},N,V_columnUid
TC,N,V_aggType
TS,N,V_aggrIndexLevel
Ts,N,V_relativeColumn
TC,N,V_options
p_isEqualForNonFormulaItems:
predicateArg1atBaseHostCoord:calcEngine:
predicateArg2atBaseHostCoord:calcEngine:
recreateFormula
useColumnRefForArg0
initWithPredicateType:arg1:arg2:qualifier1:qualifier2:argumentCellRef:hostCell:forConditionalStyle:
initWithLiteralDateType:date1:date2:number1:number2:qualifier1:qualifier2:argumentCellRef:hostCell:forConditionalStyle:
p_creatorForPeriodBoundaryWithScale:direction:offset:argIndex:earlierBound:isCalPers:
p_populateMembersFromFormula
p_smokeTestThePredicate
p_setPredicateType:
setPredArg0:
setPredArg1:
setPredArg2:
p_setQualifier1:
p_setQualifier2:
copyToUidFormWithRewriteContext:
crossTableRefParam1
crossTableRefParam2
p_argTypeForPredArg:argNum:calculationEngine:hostCell:
predArg1
predArg2
p_testDataTypesForArg0:arg1:arg2:predShouldReturn:
setArgumentAt:withPredArg:
isMoveRewriteType:
initWithCalcEngine:rewriteSpec:
convertFromBaseToChromeForCategorizedTableMove:containingCell:
convertFromChromeToBaseForCategorizedTableMove:containingCell:
qualifier2
copyByUpgradingToLinkedRefForTable:hostCell:
encodeToPrePivotArchive:archiver:encodingForSOS:
upgradeTopAndBottom
defaultPredicateForType:argumentCellReference:hostCell:
isThresholdNeededForType:
isEqualForInspector:atHostCoordinate:
initWithPredicateType:arg1:arg2:qualifier1:qualifier2:argumentCellReference:hostCell:forConditionalStyle:
initWithLiteralDateType:date1:date2:number1:number2:qualifier1:qualifier2:argumentCellRef:hostCell:
initWithLiteralNumberType:number1:number2:qualifier:argumentCellRef:hostCell:
initWithLiteralDurationType:duration1:durationUnits1:duration2:durationUnits2:qualifier:argumentCellRef:hostCell:
initWithLiteralTextType:string:argumentCellRef:hostCell:
copyToUidFormForConditionalStylesWithTableInfo:containingCell:preserveHostCell:
setHostCell:hostColumnUID:hostRowUID:
getPrecedents:calcEngine:hostOwnerUID:hostCellID:
predArg0Type
predArg2Type
numberParam2
stringParam1
dateTimeParam1
dateTimeParam2
durationParam1
durationParam2
copyByConvertingBaseToChrome:inOwner:inCellCoordinate:
copyByConvertingChromeToBase:inOwner:inCellCoordinate:
copyByRewritingWithSpec:inOwner:inCellCoordinate:
copyByUpdatingLinkedTable:hostCell:
iterateFormulasWithContext:shouldStop:block:
expectedArgTypeForPredicateType:firstArg:
setForConditionalStyle:
_formula
_predicateType
_qualifier1
_qualifier2
_argIndex0
_argIndex1
_argIndex2
_predArg0
_predArg1
_predArg2
_forConditionalStyle
T{TSCEUidCellRef={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}{TSKUIDStruct=QQ}},N,V_hostCellRef
TC,R,N,V_predicateType
TC,R,N,V_qualifier1
TC,R,N,V_qualifier2
TB,N,V_forConditionalStyle
T@"TSTFormulaPredArg",&,N,V_predArg0
T@"TSTFormulaPredArg",&,N,V_predArg1
T@"TSTFormulaPredArg",&,N,V_predArg2
mStrokeSelection
T@"TSKSelection",&,N,VmStrokeSelection
imageNamed:
CGColor
showsCellOverflowIndicator
bezierPathWithLegacyRoundedRect:cornerRadius:
CGPath
showsCellWarningIndicator
colorWithAlphaComponent:
setBadgeType:
setFrame:
badgeType
p_drawCellCommentBadgeInContext:
p_drawCellWarningBadgeInContext:
p_drawCellErrorIndicatorInContext:
badgeWithType:color:viewScale:frame:
drawInContext:
_badgeType
_color
_frame
Ti,N,V_badgeType
T@"TSUColor",&,N,V_color
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_frame
tsce_internationalWhitespaceAndNewlineCharacterSet
tsce_dollarSignCharacterSet
tsce_listDelimiterCharacterSet
p_calculateAncillaryInformation
p_insertRangeIntoRegion:
regionFromCellMap:withTableInfo:passingTest:
p_copy
region:subtractingRange:
region:subtractingRowIndexes:
region:subtractingColumnIndexes:
region:intersectingRange:
unionEveryRangeInRegion:withRange:
region:subtractingRegion:
region:intersectingRegion:
regionByRemovingRows:
regionByRemovingColumns:
regionByAddingRows:
regionByAddingColumns:
tsu_indexSetByIntersectingWithRange:
prunedCellRegionAgainstTable:behavior:usingBlock:
numberWithBool:
p_copyFromRegion:
initWithCellRegion:
regionFromCellDiffMap:withTableInfo:
regionFromCellUIDVector:withTableInfo:
regionFromOverlappingCellRangeVector:
regionFromModelMergeList:
regionFromMergeActionArray:withTableInfo:
regionFillingColumnsFromRegion:
regionFromPropertyListRepresentation:
regionByCollapsingRangesForRemovedRows:
regionByCollapsingRangesForRemovedColumns:
regionByApplyingRowMapping:
regionUpToColumnIndex:
regionUpToColumnIndexRtoL:maxColumnIndex:
regionAfterColumnIndex:
regionAfterColumnIndexRtoL:
regionUpToRowIndex:
regionAfterRowIndex:
propertyListRepresentation
asCellCoordSet
largestRangeContainingCellID:
partiallyIntersectsCellRange:
isSingleCellWideOrHigh:
newBottomToTopIterator
enumerateColumnsInReverseUsingBlock:
enumerateRowsInReverseUsingBlock:
enumerateInDirection:usingBlock:
enumerateGridColumnsUsingBlock:
enumerateGridRowsUsingBlock:
setBoundingCellRange:
setCellCount:
setFirstCellID:
setLastCellID:
setIntersectingColumnsIndexSet:
setIntersectingRowsIndexSet:
_cellRanges
_boundingCellRange
_intersectingColumnsIndexSet
_intersectingRowsIndexSet
_firstCellID
_lastCellID
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_boundingCellRange
TQ,N,V_cellCount
T@"NSIndexSet",&,N,V_intersectingColumnsIndexSet
T@"NSIndexSet",&,N,V_intersectingRowsIndexSet
T{TSUCellCoord=ISBB},N,V_firstCellID
T{TSUCellCoord=ISBB},N,V_lastCellID
Tr^v,R,N,V_cellRanges
regionByAddingModelCellRegion:
T{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}},R,N
boundingViewCellRect
regionByAddingViewCellRect:
regionBySubtractingViewCellRect:
regionByAddingViewCellRegion:
regionBySubtractingViewCellRegion:
enumerateViewCellRectsUsingBlock:
T{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}},R,N
p_addRange:calculateAncillaryInfo:
getBytes:length:
fillCellRangeRowMajorSet:leftToRight:
mCellRangeSet
mCellID
mBoundingCellRange
fillCellRangeColMajorSet:topToBottom:
saveToArchive:columnUids:rowUids:purpose:isRangeRef:preserveRectangularRange:
p_remapUidVector:usingUidMap:clearIfMissing:
stringForPurpose:
saveToArchive:tsuColumnUids:tsuRowUids:purpose:isRangeRef:preserveRectangularRange:
remapUsingColumnUidMap:rowUidMap:clearIfMissing:
_columnUids
_rowUids
_purpose
_isRangeRef
_preserveRectangularRange
TB,N,V_isRangeRef
TB,N,V_preserveRectangularRange
TC,N,V_purpose
T^v,R,V_columnUids
T^v,R,V_rowUids
appendColumnUid:rowUid:
firstTractWithPurpose:
preMergeUidTract
addToExcludedUidsTractColumnUids:
addToExcludedUidsTractRowUids:
pruneMergeUidTractsAtAndAboveIndex:
_tracts
initAsFullTupleForColumnHeaderUid:rowHeaderUid:aggregateRuleUid:flatteningDimension:
addRowColumnRuleValuePair:valueUid:
hasFullTupleInformation
columnHeaderUid
rowHeaderUid
aggregateRuleUid
enumerateRowColumnRuleValuePairsUsingBlock:
initWithAttributes:
initWithSymbol:
p_populateAttributesFromArray:
attributes
kNilStockAttributeString
valueForAttribute:
nativeLocaleIdentifier
groupingSeparator
numberFromString:
initWithLocaleIdentifier:
setLocalizedDateFormatFromTemplate:
stringFromDate:
timeZoneForSecondsFromGMT:
dateFromString:
p_setFormattedAttr:fromArray:
stockWithAttributes:
valueForAttribute:forLocale:
dateString
abbreviatedNumberForAttribute:atLocale:
_attributes
T@"TSUSparseArray",R,N,V_attributes
internalOwnerID
setInternalOwnerID:
_internalOwnerID
_tileColumnBegin
_tileRowBegin
_tile
_unarchivedCellRecords
TS,N,V_internalOwnerID
columnUIDsForBaseColumnIndexes:
rowUIDsForBaseRowIndexes:
columnUIDsForViewColumnIndexes:
rowUIDsForViewRowIndexes:
baseColumnIndexesForUIDs:
baseRowIndexesForUIDs:
viewColumnGridIndexesForBaseColumnGridIndexes:
bodyBoundingRangeForBaseLevel
metadataForRowIndex:
cellUIDforBaseCellCoord:
cellUIDForSummaryCellCoord:
baseCellRegionForUIDRange:
baseCellRegionForViewCellRect:
cellAtGroupLevel:columnUID:
forceGroupingChangeReset
_baseTableModel
T{TSUViewRowIndex=I},R,N
T{TSUViewColumnIndex=S},R,N
T{TSUViewRowIndex=I},N
T{TSUViewColumnIndex=S},N
T@"TSTTableModel",R,N,V_baseTableModel
T@"TSTColumnRowUIDMap",R,N
condStyleOwnerUID
initWithFunctionName:minArgs:maxArgs:repeatingGroupSize:isOperator:shipVersion:arguments:functionIndex:
loadSpecDictionary
loadRepeatingArguments
p_ValidateArguments
localizedToolTipStringForLocale:
displayStringForLocale:
arguments
accessorModeForArgumentIndex:
isOperator
repeatingGroupSize
_functionName
_minArguments
_maxArguments
_repeatingGroupSize
_arguments
_repeatingArguments
_isOperator
_shipVersion
TS,R,V_functionIndex
Tr^v,R
Ts,R,N,V_minArguments
Ts,R,N,V_maxArguments
TB,R,N,V_isOperator
Ti,R,N,V_shipVersion
Ts,R,N,V_repeatingGroupSize
setMergedStrokes:
_mergedStrokes
T@"TSTStrokeLayerMergedStack",&,N,V_mergedStrokes
raiseNotAReferenceErrorForFunctionName:
isInvalidMergeReference
errorIsRangeUsageError
raiseInvalidIndexForChooseError:
raiseErrorForInvalidReference:orString:contextEntityUID:
notAReferenceToAFormulaError
raiseValueNotAvailableErrorForFunctionName:
newArrayByScanningString:scanRange:
URLFragmentAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
raiseInvalidHyperlinkError
raiseNonEmptyStringRequiredErrorForFunctionName:
initWithContext:url:
addSmartField:toRange:dolcContext:undoTransaction:
hyperlinkStyle
raiseCircularReferenceErrorWithReference:
raiseInvalidIntersectionError:hostTableUID:calcEngine:
raiseNotAVectorError
raiseInvalidMatchModeError
isFromCalcEngine
raiseMatchNotFoundErrorForValue:isRegex:functionName:
raiseInvalidReferenceNameAttributeError
missingPivotTableErrorForFunctionName:argumentNumber:
invalidGroupingColumnErrorForFunctionName:argumentNumber:
getCellRefs:inGroupBy:
removeCellRef:usingCategoryRef:
getCellRefs:referringToGroupNodes:inGroupBy:
getCellRefs:forGroupRootInGroupBy:
getCellRefs:inGroupBys:
upgradeGroupByUid:toUid:
_cellRefsByGroupNodeByGroupBy
_groupNodesByCellRef
lastIdentifierComponent
fullIdentifier
lastComponentWithWhitespaceAppended
componentCount
identifierComponents
addIdentifierComponent:
appendToLastComponent:
_hidingState
_numberOfCells
_size
setDimensions:
T{TSCEGridDimensions=II},N,V_dimensions
T@"NSString",&,N,V_whitespaceBeforeFirstChild
T@"NSMutableArray",&,N,V_whitespaceAfterDelimiters
initWithPredicate:cellStyle:textStyle:
isEqualToStyle:ignoreObjectUUID:
conditionalStyleRuleWithRule:
isEqualForInspector:
privateCellStyle
privateTextStyle
setCellStyle:textStyle:
evaluateFormulaAtCellID:withCalcEngine:onOwnerUID:
predicateDescription
copyByUpdatingHostCellRef:
T@"TSTFormulaPredicate",R,C,N
T@"TSTCellStyle",R,C,N
T@"TSWPParagraphStyle",R,C,N
addFormula:atCellRef:
formulaOwnerUIDs
foreachFormula:
setOwnerKind:
_ownerKind
_nonFormulaCells
_formulaOwnerUIDs
TS,N,V_ownerKind
addFormulaObject:atCellRef:forOwnerKind:
ownerUIDsForOwnerKind:
allOwnerKinds
subsetForOwnerKind:
countForOwnerKind:
splitIntoChunksForExcessiveSize
foreachFormulaInOwnerKind:performBlock:
addFormulaString:atCellRef:
formulaStringAtCellRef:
_formulasForOwnerKind
_formulaStringsForCellRefs
cfLocale
fractionAccuracy
initWithFractionAccuracy:
base
basePlaces
baseUseMinusSign
asFractionFormat
asBaseFormat
asBooleanFormat
defaultDecimalPlacesForCurrencyCode:
asDateTimeFormat
setAllowsMissingPropertiesWithNoParentStyleForUpgrade:
initWithConditionalStyleSet:
copyByReparenting:groupByUID:rewriteContext:
copyByResolvingRelativeAncestorsWithRewriteContext:
precedentsWithCalcEngine:hostOwnerUID:hostCellID:
rulesDescription
currentRules
_conditionalStyleSetRules
T@"NSArray",R,N,V_conditionalStyleSetRules
mutableIndexSet
_mutableIndexSet
T@"NSMutableIndexSet",R,N,V_mutableIndexSet
removeFormulaAtCellID:
addFormulaForConditionalStyle:atCellID:
checkConditionForCellID:withConditionalStyle:withIndex:
allCondStyleFormulasForTable:
changedConditionForCellID:
_cellsToInvalidate
T@"TSTTableModel",N,V_tableModel
hasCachedValue
cachedValueWasFetchedWithRichTextAttributes
cachedValue
scalarValueForEvalContext:permitAccessInsideMergeRegions:fetchRichTextAttributesIfPlainText:
setCachedValue:
setCachedValueWasFetchedWithRichTextAttributes:
initWitRefValue:rangeContext:
getResolverUID
tractRef
initByCopyingASTNodeArray:atFormulaCoord:
replaceContentsWithContentsOfTrackedReference:
getPrecedentsWithCalcEngine:hostOwnerUID:
registerWithCalcEngine:inOwner:
encodeToExpandedArchive:archiver:
_AST
T{TSUCellCoord=ISBB},N,V_formulaCoord
p_applyUnifyResizeFactor:region:direction:totalOfCaptured:count:capturedArray:currentArray:minimumArray:
p_applyUnifyFixedSize:region:direction:count:currentArray:minimumArray:
applyFixedHeight:
applyFixedWidth:
targetWidth
targetHeight
mTargetWidth
mTargetHeight
Td,R,N,VmTargetWidth
Td,R,N,VmTargetHeight
p_applyAccordionResizeFactor:region:direction:totalOfCaptured:count:capturedArray:currentArray:minimumArray:
heightFactor
widthFactor
_heightFactor
_widthFactor
Td,R,N,V_heightFactor
Td,R,N,V_widthFactor
orderedRowUidsWithLabels
rowOrder
initWithTableInfo:rowUids:
targetGroupFromRowIndex:minSourceLevel:templateRowUID:
minimumCategoryLevelInRowRange:
setTemporaryRowOrder:
setRowOrderUsingViewOrder
insertRowUids:beforeUid:
groupUidsGivenRowUids:selectedLevels:
T@"TSTTableInfo",R,W,V_tableInfo
p_tgtRangeFromPbRange:andMap:
p_tgtRangeForPbRange:givenColumnMaps:rowMaps:
p_indexForTgtToPbMaps:andMap:
p_tgtCellIDForPbCellID:givenColumnMaps:rowMaps:
pbRangeForTgtRange:
pbCellIDForTgtCellID:
p_tgtRangesForPbRange:givenColumnMaps:rowMaps:
initWithPbRange:tgtRange:
initWithPbTable:pbRange:tgtTable:tgtRange:flag:
createTgtRegionFromPbRegion:
createTgtRegionByIntersectingPbRegion:tgtTableInfo:tgtRegion:
createTgtMergeMapFromPbMergeMap:andTgtRegion:andTgtBodyRange:
_rowTgtToPbMaps
_columnTgtToPbMaps
initWithNumberOfSortRules:
setReorganizeValue:atIndex:
reorganizeValueAtIndex:
reorganizeValues
setReorganizeValues:
_reorganizeValues
T@"NSMutableArray",&,N,V_reorganizeValues
_calendar
component:fromDate:
setValue:forComponent:
rangeOfUnit:inUnit:forDate:
groupingComboForGroupingType:
changesPerColumnMapToBeInGroup:
p_setCell:groupingCellPlan:groupValue:toGroup:templateCell:
p_cellDiffForFinishedCell:
p_setCell:groupingTypeCombo:groupingCellValue:toBeInGroup:
p_setCell:forUniqueGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forYearGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forYearQuarterGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forMonthGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forYearWeekGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forDayOfWeekGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forDayGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forMonthOfYearGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forQuarterOfYearGroupingTypeWithGroupColumnValue:toBeInGroup:
copyValueAndFormatToCell:
defaultDateForGrouping
p_dateBySettingUnit:value:ofDate:inCalendar:
ordinalityOfUnit:inUnit:forDate:
changeCell:atCellUID:toBeInGroup:
changeCellDiffMapToMoveRows:toGroup:templateRowUID:
cellDiffForCell:applyingGroupCellValue:groupingType:toBeInGroup:
tsu_resourcesBundle
migratedStyleForStyle:
metadataWithUid:
migrateStylesToDocument:
_columnRowUID
_hidingAction
_definedCellStyle
_definedTextStyle
T@"TSTCellStyle",R,N,V_cellStyle
T@"TSWPParagraphStyle",R,N,V_textStyle
Td,R,N,V_size
TC,R,N,V_hidingAction
hasAnyDateArgumentsToFunction:
minCursorCellID
setMinCursorCellID:
cursorCellIDs
setCursorCellIDs:
iterators
setIterators:
_minCursorCellID
_iterators
_cursorCellIDs
T{TSUCellCoord=ISBB},N,V_minCursorCellID
T{vector<TSUCellCoord, std::allocator<TSUCellCoord>>=^{TSUCellCoord}^{TSUCellCoord}{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>=^{TSUCellCoord}}},N,V_cursorCellIDs
T@"NSMutableArray",&,N,V_iterators
rank
sortTagsForSortingRows:byColumns:
sortTagsForSortingColumns:byRows:
mapping
p_mappingForSortingRowsOrColumns:withRules:dimension:
reorganizeValueForSorting
mappingSize
startIndex
mappingFromRowUids:toRowUids:
rearrangeWithMapping:
changeDescriptorsForReorganizingFromRowUids:toRowUids:
withinGroupingChangesBatch
p_applyViewCellCoord:toSummaryUsingBlock:toLabelUsingBlock:toCategoryColumnUsingBlock:toBaseUsingBlock:
p_defaultCellStyleOfSummaryOrLabelRowAtLevel:isLabel:
p_applyViewRowIndex:toSummaryUsingBlock:toLabelUsingBlock:toBaseUsingBlock:toBeyondBoundsUsingBlock:
p_defaultTextStyleOfSummaryOrLabelRowAtLevel:isLabel:
p_applyViewColumnIndex:toCategoryColumnUsingBlock:toBaseUsingBlock:toBeyondBoundsUsingBlock:
p_defaultStylesOfSummaryOrLabelRowAtLevel:isLabel:outCellStyle:outTextStyle:
nonCustomCurrencyFormatSansAccountingStyleForLocale:
initWithTrueString:falseString:
setByAddingObjectsFromSet:
i_populateCachedIndexSetsIfNeeded
i_indexesForLabelRowsAtGroupLevel:
i_indexesForLeadingRowsAtGroupLevel:
i_indexesForLeadingSummaryRowsAtGroupLevel:
i_populateIndexesForSummaryRows
i_populateIndexesForLabelRows
i_populateIndexesForSummaryAndLabelRows
i_populateIndexesForLeadingRows
i_populateIndexesForLeadingSummaryRows
suspendChangeDescriptorNotificationsDuringBlock:
summaryCellCoordForCellUID:
baseCoordFromViewCoord:
indexesForLeadingSummaryRows
suspendNotify
setSuspendNotify:
cachedIndexSetsAreValid
setCachedIndexSetsAreValid:
cachedIndexesUnfairLock
setCachedIndexesUnfairLock:
cachedIndexesForSummaryRows
setCachedIndexesForSummaryRows:
cachedSummaryRowIndexesAtLevels
setCachedSummaryRowIndexesAtLevels:
cachedIndexesForLabelRows
setCachedIndexesForLabelRows:
cachedLabelRowIndexesAtLevels
setCachedLabelRowIndexesAtLevels:
cachedIndexesForSummaryAndLabelRows
setCachedIndexesForSummaryAndLabelRows:
cachedIndexesForLeadingRows
setCachedIndexesForLeadingRows:
cachedLeadingRowIndexesAtLevels
setCachedLeadingRowIndexesAtLevels:
cachedIndexesForLeadingSummaryRows
setCachedIndexesForLeadingSummaryRows:
cachedLeadingSummaryRowIndexesAtLevels
setCachedLeadingSummaryRowIndexesAtLevels:
_groupingsChangingLevel
_sawGroupingChangeNeedingReset
_suspendNotify
_cachedIndexSetsAreValid
_cachedIndexesUnfairLock
_cachedIndexesForSummaryRows
_cachedSummaryRowIndexesAtLevels
_cachedIndexesForLabelRows
_cachedLabelRowIndexesAtLevels
_cachedIndexesForSummaryAndLabelRows
_cachedIndexesForLeadingRows
_cachedLeadingRowIndexesAtLevels
_cachedIndexesForLeadingSummaryRows
_cachedLeadingSummaryRowIndexesAtLevels
TB,N,V_suspendNotify
TB,N,V_cachedIndexSetsAreValid
T{os_unfair_lock_s=I},N,V_cachedIndexesUnfairLock
T@"NSIndexSet",&,N,V_cachedIndexesForSummaryRows
T@"NSMapTable",&,N,V_cachedSummaryRowIndexesAtLevels
T@"NSIndexSet",&,N,V_cachedIndexesForLabelRows
T@"NSMapTable",&,N,V_cachedLabelRowIndexesAtLevels
T@"NSIndexSet",&,N,V_cachedIndexesForSummaryAndLabelRows
T@"NSIndexSet",&,N,V_cachedIndexesForLeadingRows
T@"NSMapTable",&,N,V_cachedLeadingRowIndexesAtLevels
T@"NSIndexSet",&,N,V_cachedIndexesForLeadingSummaryRows
T@"NSMapTable",&,N,V_cachedLeadingSummaryRowIndexesAtLevels
bottomRightCellCoord
initWithTableUID:columnUids:rowUids:
_condStyleOwnerUID
T{TSKUIDStruct=QQ},R,N,V_condStyleOwnerUID
T@"TSCEFormulaRewrite_Uids",R,N,V_columnUids
T@"TSCEFormulaRewrite_Uids",R,N,V_rowUids
initWithMergeRegion:mergeSource:
setMergeSource:
_mergeSource
_mergeRegion
Tr^{TSUCellCoord=ISBB},N,V_mergeSource
T@"TSCEFormulaRewrite_RegionInfo",R,N,V_mergeRegion
initWithMergeOriginsMap:reverseMap:
loadIndexesFromRegions
initWithSrcTableUID:srcTract:dstTableUID:destTract:
isForSrcTable:
dstRegion
originalSrcRegion
setOriginalSrcRegion:
setFinalDstTableUID:
srcUidForDstUid
setSpanningRows:
setSpanningColumns:
setFinalTopRowIndex:
_srcRegion
_dstRegion
_originalSrcRegion
_finalDstTableUID
_srcUidForDstUid
_dstUidForSrcUid
_spanningRows
_spanningColumns
_finalTopRowIndex
T@"TSCEFormulaRewrite_RegionInfo",R,N,V_srcRegion
T@"TSCEFormulaRewrite_RegionInfo",R,N,V_dstRegion
T@"TSCEFormulaRewrite_RegionInfo",&,N,V_originalSrcRegion
T{TSKUIDStruct=QQ},N,V_finalDstTableUID
TI,N,V_finalTopRowIndex
T@"TSCEFormulaRewrite_Uids",R,N
Tr^v,R,N,V_srcUidForDstUid
Tr^v,R,N,V_dstUidForSrcUid
TB,N,V_spanningRows
TB,N,V_spanningColumns
visible
setVisible:
hidden
setHidden:
userVisible
setUserVisible:
userHidden
setUserHidden:
_visible
_hidden
_userVisible
_userHidden
T@"NSMutableIndexSet",&,N,V_visible
T@"NSMutableIndexSet",&,N,V_hidden
T@"NSMutableIndexSet",&,N,V_userVisible
T@"NSMutableIndexSet",&,N,V_userHidden
rowMarkIndex
setRowMarkIndex:
tsu_enumerateRangesConcurrentlyUsingBeginBlock:concurrentBlock:finalBlock:
previousNthVisibleRow:fromRowIndex:
previousNthVisibleColumn:fromColumnIndex:
visibleCellOffsetBy:fromCellID:
userVisibleRowIndices
rowsVisible
setRowsVisible:
rowsUserVisible
setRowsUserVisible:
rowsInvalid
setRowsInvalid:
columnsVisible
setColumnsVisible:
columnsInvalid
setColumnsInvalid:
_rowsVisible
_rowsUserVisible
_rowsInvalid
_rowMarkIndex
_columnsVisible
_columnsInvalid
T@"TSTHiddenStateIndexSet",&,N,V_rowsVisible
T@"TSTHiddenStateIndexSet",&,N,V_rowsUserVisible
T@"NSMutableIndexSet",&,N,V_rowsInvalid
TQ,N,V_rowMarkIndex
T@"TSTHiddenStateIndexSet",&,N,V_columnsVisible
T@"NSMutableIndexSet",&,N,V_columnsInvalid
tswp_spaceCharacterSet
removeCharactersInString:
tswp_smartSingleQuotesCharacterSet
stringByReplacingCharactersInRange:withString:
automaticMaxAndMinDurationUnitsForTimeInterval:
currencyCodeIndex
currencyCodeForCurrencySymbol:
formatOfType:allowMismatchedSpare:
defaultHexadecimalFormat
usesLimitedAutomaticFormatParsing
supportsFormulaEditing
decimalSeparator
setCurrencyOrNumberDoubleValue:
cellValueFromCell:locale:
coerceToFormatType:
coerceToBaseFormat:
coerceTextCellToBestNumberFormatUsingLimitedParsing:
coerceCellToFormatTypeUsingSpares:
replaceContentWithParsableString:tableInfo:cellID:flags:outControlWasRemoved:
propertySetByAddingProperty:
p_setupTileAndRowAtCellID:
setCurRow:
setCurTile:
i_tileStartingAtOrAfterRowIndex:outTileRange:
dataListCache
curTile
curTileRange
setCurTileRange:
curRow
logToken
setLogToken:
_dataListCache
_curTile
_curRow
_curTileRange
_logToken
T@"TSTTableDataListCache",R,N,V_dataListCache
T@"TSTTableTile",&,N,V_curTile
T{_NSRange=QQ},N,V_curTileRange
T@"TSTTableTileRowInfo",&,N,V_curRow
T{TSTPerformanceLoggingToken=@Q},N,V_logToken
_grids
_argumentCounts
_lastReturnedIndex
_lastReturnedArgIndex
_lastReturnedSubindex
tsk_phoneUI
wantsSelectionAtPoint:
rendererForAttachment
baselineOffset
drawAttachment:inContext:selection:
deprecatedProperties
propertySetByRemovingPropertiesFromSet:
boxedDefaultValueForProperty:
defaultStyleWithDefaultPropertiesInContext:
setTableNameSelection:
_tableNameSelection
T@"TSTTableNameSelection",&,N,V_tableNameSelection
logForCategory:
T@"NSObject<OS_os_log>",R,N
setFunctorForType
initWithColumnUid:groupingType:
p_groupingFormatWithLocale:
shortStringForYearType
shortStringForMonthType
shortStringForDayOfWeekType
shortStringForDayType
shortStringForYearWeekType
shortStringForYearQuarterType
shortStringForMonthOfYearType
shortStringForQuarterOfYearType
stringForUniqueType
stringForYearType
stringForMonthType
stringForDayOfWeekType
stringForDayType
stringForYearWeekType
stringForYearQuarterType
stringForMonthOfYearType
stringForQuarterOfYearType
stringForYearTypeForLocale:
stringForMonthTypeForLocale:
stringForDayOfWeekTypeForLocale:
stringForDayTypeForLocale:
stringForYearWeekTypeForLocale:
stringForYearQuarterTypeForLocale:
stringForMonthOfYearTypeForLocale:
stringForQuarterOfYearTypeForLocale:
stringForUniqueTypeForLocale:
shortStringForYearTypeForLocale:
shortStringForMonthTypeForLocale:
shortStringForDayOfWeekTypeForLocale:
shortStringForDayTypeForLocale:
shortStringForYearWeekTypeForLocale:
shortStringForYearQuarterTypeForLocale:
shortStringForMonthOfYearTypeForLocale:
shortStringForQuarterOfYearTypeForLocale:
coarserGroupingTypeFor:
finerGroupingTypeFor:
stringForGroupingType:locale:
coarserGroupingTypeFor:groupTypesToAvoid:
finerGroupingTypeFor:groupTypesToAvoid:
initWithColumnIndex:groupingType:inTableInfo:
getUUIDBytesForGroupingColumnUid:
getUUIDBytesForColumnUid:
groupingFunctor
uniqueObjectUID
_groupingColumnUid
_groupingType
_groupingFunctor
_groupingFormat
_groupingFormatComputed
_docLocale
_uniqueObjectUID
T{TSKUIDStruct=QQ},R,N,V_uniqueObjectUID
Tr^{TSCEFunctor=@C},R,N,V_groupingFunctor
Tq,R,N,V_groupingType
rewriteSpec
_rewriteSpec
T@"TSTFormulaRewriteSpec",R,N,V_rewriteSpec
i_rowInfoAtIndex:
_currentViewCellID
_currentBaseCellID
_currentSummaryCellID
_currentCellIDIsBase
_currentRowIndex
_summaryDataStore
_summaryDataListCache
_summaryRow
registerWithCalcEngine:ownerKind:linkOnly:
defaultCharacterStyle
isNotReadyError
warningSetForFormulaReplacedForExcelCompat:originalFormula:
warningSetByAddingWarningsFromSet:
concurrentCellMapForTable:
requestAutosaveForExpensiveCalculation
p_stringByUnescapingQuotedStringWithPossibleDollarPrefix:partial:
_ref
_overrideText
_overrideTextAsTyped
_wasConstructedViaNames
T@"NSString",C,V_overrideText
T@"NSString",C,V_overrideTextAsTyped
TB,N,V_wasConstructedViaNames
T{TSCEAnyRef=S{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}{TSKUIDStruct=QQ}B@},R,N
T{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}},R,N
T@"TSCEWrappedRangeRef",R,N
setDontClearBackground:
TB,N,VdontClearBackground
pattern
patternType
emptyPattern
initWithColor:width:cap:join:pattern:
portalStroke
TB,D,N
raiseCharInputOutOfBoundsError
initWithBytes:length:encoding:
illegalCharacterSet
controlCharacterSet
stringWithCharacters:length:
scanLocation
dataUsingEncoding:
formattedForDollarFunction:precision:forLocale:
raiseStartNumberExceedsStringLengthErrorForFunctionName:
numberFormatWithValueType:formatString:decimalPlaces:currencyCode:useAccountingStyle:negativeStyle:showThousandsSeparator:fractionAccuracy:
raiseMatchNotFoundErrorForValue:isRegex:afterMatch:previousValueToMatch:previousValueIsRegex:occurrence:matchesFound:functionName:
numberOfRanges
rangeAtIndex:
raiseStringTooLongError
raiseStringDoesNotRepresentNumberErrorForFunctionName:string:
initWithTableResolver:topLeft:bottomRight:preserveFlags:
upgradeStyleForFormulatextForCellCoord:
intersectionWithCellRect:
invalidMergeReference:contextEntityUID:
initWithColumnRange:rowRange:
enumerateValuesUsingBlock:
invalidAggregateColumnErrorForFunctionName:argumentNumber:
p_warningSetForFormulaWarningType:originalFormula:supplementaryText:
warningSetForCondFormatAboveAvgEqualAvg
warningSetForCondFormatAboveAvgStdDev
warningSetForCondFormatComplexFormula
warningSetForCondFormatContainsErrors
warningSetForCondFormatExpr
warningSetForCondFormatNotContainsErrors
warningSetForCondFormatParamatersNotAllTheSame
warningSetForCondFormatStopIfTrue
warningSetForCondFormatUnsupportedOperator
warningSetForCondFormatUnsupportedStyling
warningSetForCondFormatUnsupportedTimePeriod
warningSetForUnsupportedCondFormat
warningSetForDurationFormatRangeChanged
warningSetForUnsupportedDataFormat:
emptyWarningSet
TSTImportFormulaWarningTypeFromArchive:
p_isPersistedWithFormulaWarningTypeEnumeration
TSTImportFormulaWarningTypeToArchive
descriptionWithObject:
localizedWarningStrings
addFieldValue:
descriptionString
warningSetFor3DReferenceFormula:
warningSetForArrayedFormula:
warningSetForDifferentBehaviorForFunctionFormula:originalFormula:
warningSetForErrorTokenFormula:
warningSetForExternalReferenceFormula:
warningSetForNaturalLanguageFormula:
warningSetForReferenceOutOfBoundsFormula:
warningSetForSharedFormulaBaseNotFoundFormula:
warningSetForUnknownName:originalFormula:
warningSetForUnsupportedFormula:
warningSetForUnsupportedFunction:originalFormula:
warningSetForUnsupportedNameFormula:originalFormula:
warningSetForTransposedWithoutIssues:
warningSetForTransposedWithIssues:
warningSetForTransposeUnmodifiedWithIssues
warningSetForFilteredColumnFormulaNotCopied
cellDiffClearingAllWarningsWithContext:
areAnySet
individualWarnings
cellDiffClearingWarningsWithContext:
warningSetByRemovingWarningsFromSet:
_cellWarning
_originalDataFormat
_formulaWarning
addWarning:atCellRef:
cellRefForIndex:
warningSetAtCellRef:
_warningSetForCoordinate
setFunctionIndex:
TS,N,V_functionIndex
initWithErrorType:
setFunctionName:
errorForErrorType:functionName:
setArgIndex:
argIndex1
setArgIndex1:
problemNodeIsCellReference
problemExpressionString
argIndex
extraInfoNumber
maxArgsAllowed
shortValue
providedArgs
referenceArray
valueToMatch
afterMatch
previousMatch
previousValueIsRegex
occurrence
matchesFound
lowerBound
lowerBoundInclusive
upperBound
upperBoundInclusive
argIndex2
argsAscending
equalityPermitted
chooseIndex
unitName
problemMode
userInfo
setAttachmentErrorRaisedInTextCell:
p_DictionaryRepresentsInvalidMergeReference:
wrappedRangeRef
abortError
notReadyError
setProblemMode:
setProblemNodeIsCellReference:
setWrappedRangeRef:
raiseErrorForInvalidReference:orString:contextEntityUID:invalidMergeReference:disqualifiedFromEndCell:
setInvalidReferenceToMerge:
setReferenceEndCellInvalid:
errorForErrorType:functionName:argIndex:
setLowerBound:
setLowerBoundInclusive:
setUpperBound:
setUpperBoundInclusive:
setAfterMatch:
setOccurrence:
setMatchesFound:
setPreviousMatch:
setPreviousValueIsRegex:
setValueToMatch:
indirectErrorForRangeReference:hostTableUID:
setAnyReference:
setArgIndex2:
setArgsAscending:
setEqualityPermitted:
setChooseIndex:
setExtraInfoNumber:
setMaxArgsAllowed:
setProvidedArgs:
raiseMismatchedUnitsErrorForFunctionName:argumentNumberString:
setReferenceArray:
setUnitName:
invalidReferenceNameAttributeError
invalidHistoricalDateError
remoteDataUnavailableErrorWithAttribute:
autoNumberAttachmentError
attachmentError
errorWithDictionary:
errorForToken:
exceptionIsFromCalcEngine:
exceptionIsCircularReferenceError:
exceptionIsRangeUsageError:
exceptionIsInvalidMergeReference:
raiseInvalidArrayContentsError
raiseAutoNumberAttachmentErrorInTextCell:
raiseAttachmentErrorInTextCell:
raiseIndirectErrorForRangeReference:hostTableUID:
raiseNoModeError
raiseUnionInsideIntersectionError
raiseInvalidArgumentEqualityRelationshipErrorForFunctionName:argIndex1:argIndex2:
raiseRangeDoesNotSumToOneForFunctionName:argumentNumber:
raiseUnsupportedR1C1StyleError
raiseInvalidProbabilityErrorForFunctionName:
raisePositionLargerThanArrayErrorForFunctionName:
raiseInvalidTailErrorForFunctionName:argumentNumber:
raiseInvalidSubtotalFunctionNumberError
raiseConvertOriginUnitMismatchError
raiseArrayElementNoDataError
raiseDataInvalidDimensionsError
raiseDataInvalidLengthError
raiseDataInvalidWidthError
raiseVectorValueNotNumberErrorForFunctionName:argumentNumber:
raiseDurationDisallowedForNormdistPDFError
raiseLinestHighlyCorrelatedVariableError
raiseLinestMatrixUnderdeterminedError
raiseNegativeVectorValueErrorForFunctionName:argumentNumber:
raisePercentRankInputOutOfRangeError
raisePercentRankExcInputOutOfRangeError
raiseLocationServicesNotEnabledError
raiseLocationHeadingUnknownError
raiseLocationUnknownError
raiseLocationUserDeniedError
raiseLocationNetworkError
raiseLocationHeadingFailureError
raiseInvalidLatitudeLongitudeError
raiseInvalidAltitudeError
raiseInvalidHeadingError
raiseUnsupportedFunctionError
raiseNotAReferenceToAFormulaError
noTradingInformationErrorWithNextAvailableDate:
errorForRichTextStorage:outValue:
attachmentErrorRaisedInTextCell
invalidReferenceToMerge
referenceEndCellInvalid
anyReference
tokenString
isUnsupportedFeatureError
deepType
numberForFunction:argumentIndex:warningReportingContext:
dateForFunction:argumentIndex:warningReportingContext:
stringForFunction:argumentIndex:warningReportingContext:
booleanForFunction:argumentIndex:warningReportingContext:
formattedGridForFunction:argumentIndex:context:format:
referenceValueForFunction:argumentIndex:warningReportingContext:
boolean
vector
referenceValue
isNativelyEqual:
bakedString
setErrorType:
_errorType
_errorDictionary
Tq,N,V_errorType
T@"TSCEWrappedRangeRef",&,N
T@"TSCEAnyReference",&,N
p_enumerateYearMapsWithBlock:
enumerateSpecifiersAndValuesWithBlock:
removeObjectsForKeys:
containsValueForSpecifier:
valueMap
valueForSpecifier:
setValue:forSpecifier:
p_saveMap:toArchive:
valueMapWithSpecifier:value:
initWithData:
removeValueForSpecifier:
addValuesFromMap:
removeValuesForSpecifierSet:
removeAllValues
mapForSingleSpecifier:
T@"NSMutableDictionary",&,N,V_data
addValuesForDimension:
enumerateCombinationsWithBlock:
_valuesForDimension
isEqualToChoices:
p_mcListTypeForArgType:
p_mcListTypeOfListItem:
p_listItemAtIndex:
p_numberForListItem:
p_stringForListItem:
p_dateForListItem:
p_booleanForListItem:
initWithItems:context:
tsu_stringWithoutAttachmentCharacters
p_appendChoices:uniquelyToChoices:
p_PopUpMenuModelDefaultWithContext:locale:
p_cellValueFromCellWithCustomFormat:locale:
popupMenuModelFromTable:region:initialValue:overflow:
popupMenuModelDeletingItemFromModel:index:
popupMenuModelEditingItemInModel:index:newContent:
popupMenuModelReorderingModel:fromIndex:toIndex:
valueTypeOfItemAtIndex:
numberAtIndex:
stringAtIndex:
dateAtIndex:
booleanAtIndex:
formatAtIndex:
popUpItemFromNumber:format:
popUpItemFromBoolean:
popUpItemFromString:
popUpItemFromDate:format:
_items
initWithRefCount:
loadFromArchive:unarchiver:completion:
p_sharedInitWithRefCount:key:
estimateByteSize
objectWithRefCount:
sharedLoadFromArchive:
dropReference
addReferencesFromObject:
_payload
_key
_refCount
_byteSizeForArchiving
TI,R,N,V_refCount
TQ,R,N,V_byteSizeForArchiving
TI,N,V_key
T@"NSObject<TSTTableDataPayloadHashing>",&,N,V_payload
T@"TSDCommentStorage",R,D,N
T@"TSTConditionalStyleSet",R,D,N
T@"TSUCustomFormat",R,D,N
T@"TSKFormat",R,D,N
T@"TSTCellSpec",R,D,N
T@"TSWPStorage",R,D,N
T@"TSTImportWarningSet",R,D,N
T@"TSTPopUpMenuModel",R,D,N
T@"TSSStyle",R,D,N
objectWithCommentStorage:refCount:
objectWithConditionalStyleSet:refCount:
initObjectWithCustomFormat:refCount:
formatName
objectWithCustomFormat:refCount:
p_setUpFormat:
asLegacyCustomFormat
objectWithFormat:refCount:
objectWithCellSpec:refCount:
objectWithFormulaError:refCount:
objectWithImportWarningSet:refCount:
objectWithPopUpMenuModel:refCount:
richTextPayload
objectWithRichTextPayload:refCount:
objectWithString:refCount:
_shouldWrap
TB,R,N,V_shouldWrap
objectWithStyle:refCount:
noLockShouldUpgradeStyleForFormulatextForCellCoord:
hasCellAtCellID:
applyBlockToAllCells:
shouldUpgradeStyleForFormulatextForCellCoord:
hasAnyRichTextCells
setHasAnyRichTextCells:
temporaryObjectContextDelegate
temporaryContext
rowIndexes
setRowIndexes:
minColumn
setMinColumn:
setMaxColumn:
_cellsByCoord
_cellCoordsToStyleUpgradeForFormulatext
_hasAnyRichTextCells
_minColumn
_maxColumn
_temporaryObjectContextDelegate
_temporaryContext
_rowIndexes
T@"TSPTemporaryObjectContextDelegate",R,N,V_temporaryObjectContextDelegate
T@"TSPObjectContext",R,N,V_temporaryContext
T@"NSMutableIndexSet",&,N,V_rowIndexes
TB,N,V_hasAnyRichTextCells
TS,N,V_minColumn
TS,N,V_maxColumn
initWithCalcEngine:tableUID:topLeft:bottomRight:preserveFlags:
bodyRangeOfTable
makeCellReferenceForOffset:apparentTractRef:
makeCellReferenceInSameTable:
format:
canonicalCellReferenceForReference
_tableResolver
_tractRef
_cachedValue
_cachedValueWasFetchedWithRichTextAttributes
T^{TSCETableResolver=^^?},R,N
T{shared_ptr<TSCEValue>=^{TSCEValue}^{__shared_weak_count}},N,V_cachedValue
TB,N,V_cachedValueWasFetchedWithRichTextAttributes
unsignedLongLongValue
performSyncWriteWithUnderlyingDictionary:
invalidateObjectsWithKeysInCellRange:
inflateFromStorageRef:dataStore:cache:suppressingTransmutation:
cellValueTypeIsExpected:
cellFormatKindIsExpected:
resolveDataListKeysForCell:cache:suppressTransmutation:sourceStorageVersion:
initWithCommentStorage:
conditionalFormatDataForValue:outKey:
valueRepresentsDateWithoutTime
gregorianCalendarLocale
startOfDayForDate:
isDrawable
enumerateAttachmentsInTextRange:usingBlock:
setFormulaObject:clearingID:
supportsStockUI
smartFieldKind
enumerateSmartFieldsWithAttributeKind:inRange:usingBlock:
p_formatOfCellFormatKind:create:outCreated:
p_setFormatExplicit:fromCellFormatKind:setMostRecentlySet:
_validateCustomFormatWrapper:
p_formatTypeIsANumberFormatTypeForMostRecentlySet:
p_clearFormatOfCellFormatKind:
p_clearIfImplicitAndNotCurrentForKind:format:explicitFormatMask:
p_TSTCellSetMostRecentlySetNumberFormatWithCurrencyFlag:
p_hasExplicitFormatOfCellFormatKind:
formatType:isSameCellFormatKindAs:allowNumberCurrencyMismatch:
p_mismatchBetweenValueType:andCellFormatKind:
setRank:
formatTypeIsExpected:
setCurrencyOrNumberDecimalValue:
mightBeInterestedInMigration
stringForDisplayWithoutColor
hasContentBreakingMergeFragment
hasStockFormulaForStockUI
setCurrentFormat:isExplicit:forExcel:
candidateFormatForSliderStepperControlWithIsCurrent:
hasAnyExplicitFormats
setFormatID:forStorageFlag:
formatForStorageFlag:
hasAnyWarning
_valueBigNumber
_controlCellSpecID
_textFormatID
_booleanFormatID
TC,R,N,V_cellFormatKind
TI,N,V_controlCellSpecID
TI,N,V_textFormatID
TI,N,V_booleanFormatID
T@"TSULocale",N,V_locale
T{TSUDecimal={?=[2Q]}},N
T@"TSTStockDetails",R,N
T@"TSKFormat",R,N
T@"TSKFormat",R,N,V_textFormat
T@"TSKFormat",R,N,V_booleanFormat
insertRefs:
_referenceSet
sortRulesWithTableInfo:
groupSortRules
groupSortOrderWithRules:withTableInfo:
groupSortRulesForLevel:tableInfo:
groupSortOrderWithTableInfo:
groupSortOrderByRemovingColumnUIDs:tableInfo:
groupSortOrderByReplacingRuleAtIndex:withRule:withTableInfo:
containsAnyRulesInColumnUIDList:
_groupSortRules
T@"NSArray",R,N,V_groupSortRules
styleDataList
richTextDataList
formulaErrorDataList
decrementColumnCellCount:byAmount:
p_updateNumberOfPopulatedCells
conditionalStyleSetDataList
commentStorageDataList
stringDataList
formatDataList
formulaDataList
importWarningSetDataList
controlCellSpecDataList
upgrading
multipleChoiceListFormatDataList
preBNCFormatDataList
_setCell:atCellID:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:richTextDOLCHint:
assertIsNotIterating
p_preBNCKeysForCell:atCellID:
incrementCellCountsAtCellID:
decrementCellCountsAtCellID:
p_preBNCKeysForCell:oldPreBNCStorageRef:callWillModify:
unpopulatedCustomFormatWrapperWithFormatType:customFormatKey:
p_updatePreBNCDataListsForCurrentFormat:numberFormat:currencyFormat:dateFormat:durationFormat:baseFormat:customFormat:stepperSliderFormat:mcListFormat:oldPreBNCStorageRef:callWillModify:
p_stashBadKey:forList:
p_preBNCpopulatedCustomFormat:value:
p_populatedMultipleChoiceListFormat:
p_clearDataListEntriesForStorageRef:cellID:
p_clearDataListEntriesInRange:
p_loadDatalist:forLazyReference:completionBlock:
p_loadDatalist:forLazyReference:
p_makeALazyDatalistOfType:isNewForBNC:
initWithObject:
p_makeALazyDatalistOfType:
p_addPasteboardCustomFormat:key:toDocument:
p_pasteboardCustomFormatMap
_needToUpgradeCellStorage
p_cellMapForUpgradingToBraveNewCell
tsu_enumerateKeysAndObjectsUsingBlock:
stringForCalcEngineAtCellID:refIfAvailable:
richTextStorageForCalcEngineAtCellID:refIfAvailable:
cellCountOfRowAtIndex:
cellCountOfColumnAtIndex:
hasFormulaSyntaxErrorAtCellID:
beginIteration
endIteration
copyWithOwner:
tileStorage
setTileStorage:
rowHeaderStorage
setRowHeaderStorage:
columnHeaderStorage
setColumnHeaderStorage:
styleTableReference
setStyleTableReference:
conditionalStyleSetTableReference
setConditionalStyleSetTableReference:
stringTableReference
setStringTableReference:
formulaTableReference
setFormulaTableReference:
controlCellSpecTableReference
setControlCellSpecTableReference:
formulaErrorTableReference
setFormulaErrorTableReference:
richTextTableReference
setRichTextTableReference:
formatTableReference
setFormatTableReference:
commentStorageTableReference
setCommentStorageTableReference:
importWarningSetTableReference
setImportWarningSetTableReference:
preBNCFormatTableReference
setPreBNCFormatTableReference:
pasteboardCustomFormatMap
setPasteboardCustomFormatMap:
mergedCellRanges
setMergedCellRanges:
cellCountValid
setCellCountValid:
storageVersionPreBNC
setStorageVersionPreBNC:
missingPostBNCDatalists
setMissingPostBNCDatalists:
_iteratorRunningCount
_styleDataList
_conditionalStyleSetDataList
_stringDataList
_formulaDataList
_controlCellSpecDataList
_formulaErrorDataList
_richTextDataList
_formatDataList
_commentStorageDataList
_importWarningSetDataList
_preBNCFormatDataList
_foundABadDatalistKey
_upgrading
_cellCountValid
_storageVersionPreBNC
_missingPostBNCDatalists
_tileStorage
_rowHeaderStorage
_columnHeaderStorage
_styleTableReference
_conditionalStyleSetTableReference
_stringTableReference
_formulaTableReference
_controlCellSpecTableReference
_formulaErrorTableReference
_richTextTableReference
_formatTableReference
_commentStorageTableReference
_importWarningSetTableReference
_preBNCFormatTableReference
_multipleChoiceListFormatDataList
_pasteboardCustomFormatMap
_mergedCellRanges
T@"TSTTableTileStorage",&,N,V_tileStorage
T@"TSTTableHeaderStorage",&,N,V_rowHeaderStorage
T@"TSTTableHeaderStorage",&,N,V_columnHeaderStorage
T@"TSPLazyReference",&,N,V_styleTableReference
T@"TSPLazyReference",&,N,V_conditionalStyleSetTableReference
T@"TSPLazyReference",&,N,V_stringTableReference
T@"TSPLazyReference",&,N,V_formulaTableReference
T@"TSPLazyReference",&,N,V_controlCellSpecTableReference
T@"TSPLazyReference",&,N,V_formulaErrorTableReference
T@"TSPLazyReference",&,N,V_richTextTableReference
T@"TSPLazyReference",&,N,V_formatTableReference
T@"TSPLazyReference",&,N,V_commentStorageTableReference
T@"TSPLazyReference",&,N,V_importWarningSetTableReference
T@"TSPLazyReference",&,N,V_preBNCFormatTableReference
T@"TSTTableDataList",R,N,V_multipleChoiceListFormatDataList
T@"NSObject<TSDContainerInfo><TSWPStorageParent>",W,N,V_richTextParentInfo
T@"NSMutableDictionary",&,N,V_pasteboardCustomFormatMap
T@"TSTMergeRegionMap",&,N,V_mergedCellRanges
TI,N,V_cellCount
TB,N,V_cellCountValid
TC,N,V_storageVersionPreBNC
TB,N,V_missingPostBNCDatalists
TB,N,V_upgrading
_rank
_doubleValue
Ti,N,V_rank
Td,N,V_doubleValue
hasValueAtCoord:
clearValueAtCoord:
valueAtColumn:row:
expandToIncludeCoord:
populatedColumns
initWithValueVector:
numberOfPopulatedColumns
numberOfPopulatedRows
hasValueAtColumn:row:
clearValueAtColumn:row:
populatedSliceByIndex:byRow:
enumerateValuesForRow:usingBlock:
enumerateValuesForColumn:usingBlock:
_coords
_topLeftCoord
_valueForCoord
T{TSCEGridDimensions=II},R,N
T{TSCEGridCoord=II},R,N
initAffineWithMappings:xs:ys:xDimension:
initNonAffineWithMappings:xs:ys:xDimension:desiredIntercept:
coefficientAtIndex:
coefficientStandardErrorAtIndex:
rSquared
standardError
fStatistic
degreesFreedom
regressionSumSquares
errorSumSquares
dictionaryRepresentation
descriptionWithLocale:
T@"TSDCommentStorage",R,N,V_commentStorage
_evalRef
_apparentTractRef
inset
reoriginToZero
setTransform:
setInset:
setReoriginToZero:
_reoriginToZero
_inset
_transform
T{CGAffineTransform=dddddd},N,V_transform
Td,N,V_inset
TB,N,V_reoriginToZero
p_updateAnnotationUUID
initWithStorage:forTableInfo:cellUID:
setAnnotationUUID:
author
copyWithAuthor:
creationDate
text
isInDocument
isFloatingComment
annotationUUID
annotationType
setAuthor:
annotationDisplayStringType
T@"TSKAnnotationAuthor",&,N
isHighlight
T@"TSDCommentStorage",C,N
viewCellCoord
baseCellCoord
mStorage
_annotationUUID
T@"NSString",&,N,V_annotationUUID
T{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}},R,N,V_cellUID
T{TSUViewCellCoord={TSUCellCoord=ISBB}},R,N
T{TSUModelCellCoord={TSUCellCoord=ISBB}},R,N
resetSharedTableConfiguration
T@"TSTConfiguration",R,N
supportsExpandedTables
setMaxNumberOfRows:
setMaxNumberOfColumns:
setMaxNumberOfPopulatedCells:
supportsContainedTextEditing
setSupportsContainedTextEditing:
showsCellEditingToolbar
setShowsCellEditingToolbar:
supportsAutomaticNumberKeyboard
setSupportsAutomaticNumberKeyboard:
supportsMergedCells
setSupportsMergedCells:
supportsHiddenCells
setSupportsHiddenCells:
returnWhileEditingNavigates
setReturnWhileEditingNavigates:
tabWhileEditingNavigates
setTabWhileEditingNavigates:
continuesEditingAfterNavigation
setContinuesEditingAfterNavigation:
arrowKeyAtEdgeWhileEditingNavigates
setArrowKeyAtEdgeWhileEditingNavigates:
arrowKeysWrap
setArrowKeysWrap:
arrowKeysNavigateWhenEditingBeganByTyping
setArrowKeysNavigateWhenEditingBeganByTyping:
backTabWraps
setBackTabWraps:
tabAtEdgeAddsRow
setTabAtEdgeAddsRow:
tabAtEdgeAddsColumn
setTabAtEdgeAddsColumn:
pastesTile
setPastesTile:
allowHorizontalAutoresize
setAllowHorizontalAutoresize:
selectsCellOnInitialTap
setSelectsCellOnInitialTap:
dragByHandleOnly
setDragByHandleOnly:
cornersCanDragResize
setCornersCanDragResize:
setSupportsControlCells:
controlCellUIAlwaysVisible
setControlCellUIAlwaysVisible:
supportsActionMenu
setSupportsActionMenu:
hasLargerFonts
setHasLargerFonts:
setSupportsFrozenHeaders:
setSupportsAutoResizedTables:
supportsCreateChartFromSelection
setSupportsCreateChartFromSelection:
selectionUsesBezierPath
setSelectionUsesBezierPath:
usesSelectionChromeResizer
setUsesSelectionChromeResizer:
showsChromeWhileEditingCell
setShowsChromeWhileEditingCell:
showsSelectionKnobsWhileEditingCell
setShowsSelectionKnobsWhileEditingCell:
setShowsCellWarningIndicator:
supportsCanvasReferenceEditing
setSupportsCanvasReferenceEditing:
setUsesLimitedAutomaticFormatParsing:
setSupportsFormulaEditing:
supportsImplicitEditing
setSupportsImplicitEditing:
allowFreeformFormulaText
setAllowFreeformFormulaText:
allowWhitespaceInFormulas
setAllowWhitespaceInFormulas:
showsHideUnhideUI
setShowsHideUnhideUI:
exportPermanentHidingState
setExportPermanentHidingState:
setShowsCellOverflowIndicator:
supportsAutofill
setSupportsAutofill:
usesLimitedNumberFormatInspector
setUsesLimitedNumberFormatInspector:
setHeadersFrozenByDefault:
setCreateLargeDefaultTables:
setTableNameEnabledInNewTables:
supportsRowColumnAdderKnob
setSupportsRowColumnAdderKnob:
supportsDragDropMoveMode
setSupportsDragDropMoveMode:
supportsDynamicallyHidingRowColumnForDragDrop
setSupportsDynamicallyHidingRowColumnForDragDrop:
formulaEditorEvaluatesFormulas
setFormulaEditorEvaluatesFormulas:
showReferenceHighlightsOnFormulaCellSelection
setShowReferenceHighlightsOnFormulaCellSelection:
setTokenizeFormulaStringLiterals:
exportsCellComments
setExportsCellComments:
exportsCellAnnotations
setExportsCellAnnotations:
supportsCellCommentsActivityLines
setSupportsCellCommentsActivityLines:
cellEditorsCanScrollToNonLocalTableSelection
setCellEditorsCanScrollToNonLocalTableSelection:
supportsRepeatHeaderRowsOnEachPage
setSupportsRepeatHeaderRowsOnEachPage:
supportsTableTranspose
setSupportsTableTranspose:
supportsRowMovesInPaginatedTables
setSupportsRowMovesInPaginatedTables:
setDisableImplicitNaming:
supportsComplexReorganizeUI
setSupportsComplexReorganizeUI:
supportsQuickFilterUI
setSupportsQuickFilterUI:
pasteFilterHidingAsUserHiding
setPasteFilterHidingAsUserHiding:
allowsFullyFilteredTables
setAllowsFullyFilteredTables:
supportsTableColumnAutocomplete
setSupportsTableColumnAutocomplete:
setSupportsInlineAttachments:
followsLinksOnFirstTap
setFollowsLinksOnFirstTap:
setSupportsBidiTablesUI:
supportsPlaceholderGeometry
setSupportsPlaceholderGeometry:
setSupportsStockUI:
shouldZoomOutOnEndEditing
setShouldZoomOutOnEndEditing:
forceZoomInOnBeginEditing
setForceZoomInOnBeginEditing:
setSupportsCategorization:
setSupportsPivotTables:
supportsCopySnapshot
setSupportsCopySnapshot:
structuredTextImportConfidenceThreshold
setStructuredTextImportConfidenceThreshold:
structuredTextImportConfidenceThresholdForCanvas
setStructuredTextImportConfidenceThresholdForCanvas:
structuredTextImportSizeLimit
setStructuredTextImportSizeLimit:
allowsBlackDragDropBackground
setAllowsBlackDragDropBackground:
supportsAddBodyRowAtBottomSiriKitIntent
setSupportsAddBodyRowAtBottomSiriKitIntent:
_supportsContainedTextEditing
_showsCellEditingToolbar
_supportsAutomaticNumberKeyboard
_supportsMergedCells
_supportsHiddenCells
_returnWhileEditingNavigates
_tabWhileEditingNavigates
_continuesEditingAfterNavigation
_arrowKeyAtEdgeWhileEditingNavigates
_arrowKeysWrap
_arrowKeysNavigateWhenEditingBeganByTyping
_backTabWraps
_tabAtEdgeAddsRow
_tabAtEdgeAddsColumn
_pastesTile
_allowHorizontalAutoresize
_selectsCellOnInitialTap
_dragByHandleOnly
_cornersCanDragResize
_supportsControlCells
_controlCellUIAlwaysVisible
_supportsActionMenu
_hasLargerFonts
_supportsFrozenHeaders
_supportsAutoResizedTables
_supportsCreateChartFromSelection
_selectionUsesBezierPath
_usesSelectionChromeResizer
_showsChromeWhileEditingCell
_showsSelectionKnobsWhileEditingCell
_showsCellWarningIndicator
_supportsCanvasReferenceEditing
_usesLimitedAutomaticFormatParsing
_supportsFormulaEditing
_supportsImplicitEditing
_allowFreeformFormulaText
_allowWhitespaceInFormulas
_showsHideUnhideUI
_exportPermanentHidingState
_showsCellOverflowIndicator
_supportsAutofill
_usesLimitedNumberFormatInspector
_headersFrozenByDefault
_createLargeDefaultTables
_tableNameEnabledInNewTables
_supportsRowColumnAdderKnob
_supportsDragDropMoveMode
_supportsDynamicallyHidingRowColumnForDragDrop
_formulaEditorEvaluatesFormulas
_showReferenceHighlightsOnFormulaCellSelection
_tokenizeFormulaStringLiterals
_exportsCellComments
_exportsCellAnnotations
_supportsCellCommentsActivityLines
_cellEditorsCanScrollToNonLocalTableSelection
_supportsRepeatHeaderRowsOnEachPage
_supportsTableTranspose
_supportsRowMovesInPaginatedTables
_disableImplicitNaming
_supportsComplexReorganizeUI
_supportsQuickFilterUI
_pasteFilterHidingAsUserHiding
_allowsFullyFilteredTables
_supportsTableColumnAutocomplete
_supportsInlineAttachments
_followsLinksOnFirstTap
_supportsBidiTablesUI
_supportsPlaceholderGeometry
_supportsStockUI
_shouldZoomOutOnEndEditing
_forceZoomInOnBeginEditing
_supportsCategorization
_supportsPivotTables
_supportsCopySnapshot
_allowsBlackDragDropBackground
_supportsAddBodyRowAtBottomSiriKitIntent
_maxNumberOfRows
_maxNumberOfColumns
_maxNumberOfPopulatedCells
_structuredTextImportConfidenceThreshold
_structuredTextImportConfidenceThresholdForCanvas
_structuredTextImportSizeLimit
TI,N,V_maxNumberOfRows
TI,N,V_maxNumberOfColumns
TI,N,V_maxNumberOfPopulatedCells
TB,N,V_supportsContainedTextEditing
TB,N,V_showsCellEditingToolbar
TB,N,V_supportsAutomaticNumberKeyboard
TB,N,V_supportsMergedCells
TB,N,V_supportsHiddenCells
TB,N,V_returnWhileEditingNavigates
TB,N,V_tabWhileEditingNavigates
TB,N,V_continuesEditingAfterNavigation
TB,N,V_arrowKeyAtEdgeWhileEditingNavigates
TB,N,V_arrowKeysWrap
TB,N,V_arrowKeysNavigateWhenEditingBeganByTyping
TB,N,V_backTabWraps
TB,N,V_tabAtEdgeAddsRow
TB,N,V_tabAtEdgeAddsColumn
TB,N,V_pastesTile
TB,N,V_allowHorizontalAutoresize
TB,N,V_selectsCellOnInitialTap
TB,N,V_dragByHandleOnly
TB,N,V_cornersCanDragResize
TB,N,V_supportsControlCells
TB,N,V_controlCellUIAlwaysVisible
TB,N,V_supportsActionMenu
TB,N,V_hasLargerFonts
TB,N,V_supportsFrozenHeaders
TB,N,V_supportsAutoResizedTables
TB,N,V_supportsCreateChartFromSelection
TB,N,V_selectionUsesBezierPath
TB,N,V_usesSelectionChromeResizer
TB,N,V_showsChromeWhileEditingCell
TB,N,V_showsSelectionKnobsWhileEditingCell
TB,N,V_showsCellWarningIndicator
TB,N,V_supportsCanvasReferenceEditing
TB,N,V_usesLimitedAutomaticFormatParsing
TB,N,V_supportsFormulaEditing
TB,N,V_supportsImplicitEditing
TB,N,V_allowFreeformFormulaText
TB,N,V_allowWhitespaceInFormulas
TB,N,V_showsHideUnhideUI
TB,N,V_exportPermanentHidingState
TB,N,V_showsCellOverflowIndicator
TB,N,V_supportsAutofill
TB,N,V_usesLimitedNumberFormatInspector
TB,N,V_headersFrozenByDefault
TB,N,V_createLargeDefaultTables
TB,N,V_tableNameEnabledInNewTables
TB,N,V_supportsRowColumnAdderKnob
TB,N,V_supportsDragDropMoveMode
TB,N,V_supportsDynamicallyHidingRowColumnForDragDrop
TB,N,V_formulaEditorEvaluatesFormulas
TB,N,V_showReferenceHighlightsOnFormulaCellSelection
TB,N,V_tokenizeFormulaStringLiterals
TB,N,V_exportsCellComments
TB,N,V_exportsCellAnnotations
TB,N,V_supportsCellCommentsActivityLines
TB,N,V_cellEditorsCanScrollToNonLocalTableSelection
TB,N,V_supportsRepeatHeaderRowsOnEachPage
TB,N,V_supportsTableTranspose
TB,N,V_supportsRowMovesInPaginatedTables
TB,N,V_disableImplicitNaming
TB,N,V_supportsComplexReorganizeUI
TB,N,V_supportsQuickFilterUI
TB,N,V_pasteFilterHidingAsUserHiding
TB,N,V_allowsFullyFilteredTables
TB,N,V_supportsTableColumnAutocomplete
TB,N,V_supportsInlineAttachments
TB,N,V_followsLinksOnFirstTap
TB,N,V_supportsBidiTablesUI
TB,N,V_supportsPlaceholderGeometry
TB,N,V_supportsStockUI
TB,N,V_shouldZoomOutOnEndEditing
TB,N,V_forceZoomInOnBeginEditing
TB,N,V_supportsCategorization
TB,N,V_supportsPivotTables
TB,N,V_supportsCopySnapshot
Td,N,V_structuredTextImportConfidenceThreshold
Td,N,V_structuredTextImportConfidenceThresholdForCanvas
TQ,N,V_structuredTextImportSizeLimit
TB,N,V_allowsBlackDragDropBackground
TB,N,V_supportsAddBodyRowAtBottomSiriKitIntent
initWithOwnerDeletion:
initWithTransposeTable:transposedBodyRange:numberOfFooterRows:
initForMovingRowsOrColumnsInTable:rowColumnUuids:shuffleMap:areRows:srcTract:destTract:
initForSortWithTableUID:rowUids:shuffleMap:
initForReorderRowsWithTableUID:rowUids:shuffleMap:
initForMovingRegionWithSrcTableUID:srcTract:dstTableUID:destTract:
initForMergeCellsWithTableUID:columnUids:rowUids:mergeSource:
initForUndoMergeCellsWithTableUID:columnUids:rowUids:mergeSource:
initForMergeOriginsMovedWithMap:reverseMap:inTableUID:
initForPastingCellsWithTableUID:columnUids:rowUids:
initForTableUIDReassignment:
initForGroupBy:withGroupByChange:
initForGroupBy:groupNodeUIDReassignment:
initWithPivotRuleChange:
pivotInfo
setPivotInfo:
_pivotInfo
T@"TSTFormulaRewrite_PivotInfo",&,N,V_pivotInfo
autofillSelection
setAutofillSelection:
_autofillSelection
T@"TSTAutofillSelection",&,N,V_autofillSelection
setDirtyCellRange:
dirtyCellRanges
setDirtyStrokeRange:
dirtyStrokeRange
invalidateAllChrome
setInvalidateAllChrome:
invalidateAllChromeCaches
setInvalidateAllChromeCaches:
invalidateColumnChrome
setInvalidateColumnChrome:
invalidateRowChrome
setInvalidateRowChrome:
hideChromeContextMenuButton
setHideChromeContextMenuButton:
invalidateKnobs
setInvalidateKnobs:
invalidateSelection
setInvalidateSelection:
invalidateTableName
setInvalidateTableName:
updateEditorRemainders
setUpdateEditorRemainders:
syncReferenceHighlightState
setSyncReferenceHighlightState:
setSetNeedsDisplay:
hideStepperHUD
setHideStepperHUD:
expandDirtyRegionForReferences
setExpandDirtyRegionForReferences:
repositionStockPopover
setRepositionStockPopover:
_dirtyCellRanges
_invalidateAllChrome
_invalidateAllChromeCaches
_invalidateColumnChrome
_invalidateRowChrome
_hideChromeContextMenuButton
_invalidateKnobs
_invalidateSelection
_invalidateTableName
_updateEditorRemainders
_syncReferenceHighlightState
_setNeedsDisplay
_hideStepperHUD
_expandDirtyRegionForReferences
_repositionStockPopover
_dirtyStrokeRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dirtyStrokeRange
TB,N,V_invalidateAllChrome
TB,N,V_invalidateAllChromeCaches
TB,N,V_invalidateColumnChrome
TB,N,V_invalidateRowChrome
TB,N,V_hideChromeContextMenuButton
TB,N,V_invalidateKnobs
TB,N,V_invalidateSelection
TB,N,V_invalidateTableName
TB,N,V_updateEditorRemainders
TB,N,V_syncReferenceHighlightState
TB,N,V_setNeedsDisplay
TB,N,V_hideStepperHUD
TB,N,V_expandDirtyRegionForReferences
TB,N,V_repositionStockPopover
frameInUnscaledCanvas
visibleUnscaledRectForClippingReps
editorSelection
repForLayout:
transformInRoot
convertUnscaledToBoundsRect:
currentScreenScale
initWithLayout:canvas:
contentsScale
finishInit
setCurrentScreenScale:
layerFrameInScaledCanvas
willBeRemoved
updateChildrenFromLayout
deviceBoundsForCellRange:
removeObjectForKey:andWait:
parentStorage
p_cellIDForHyperlinkField:
p_columnForCellID:useCache:
p_contentFrameWithCellID:
p_horizontalAlignmentTransformForHyperlinkWithColumn:cell:cellID:
p_naturalBoundsRectForHyperlinkField:cellID:column:contentFrame:horizontalAlignmentTransform:
boundsRectForSelection:columnArray:includeRuby:includePaginatedAttachments:
p_horizontalAlignmentTransformForHyperlinkWithBounds:inCell:
hyperlinkRegions
smartFieldsWithAttributeKind:intersectingRange:
hyperlinkRegionWithURL:bezierPath:
validateVisibleRect
dirtyCellRegionGatherer
setDirtyCellRegionGatherer:
isTableNameValid
setTableNameValid:
updateFromLayout
canvasVisibleRect
animationStack
deliveryStyle
shouldSuppressBackgrounds
p_getImageFrameForAnimation:
isPrinting
isDrawingIntoPDF
p_drawAnimation:inContext:
initWithSize:offset:renderBlock:
setTextureType:
setTextureOpacity:
addRenderable:forStage:
enumerateChildTexturesForDescription:passingTest:withBlock:
addFinalTexture:forStage:
setRep:
isMagicMove
setIsMagicMove:
setObjectType:
p_addTexture:forAnimationStage:isFinal:description:
p_countOfIdenticalCellsBetweenOutgoingTableInfo:incomingTableInfo:
beginTableNameForChunk:
isRecursivelyDrawingInContext
p_isTableRenderingRotated
isDrawingInFlippedContext
drawText:inContext:minSize:maxSize:anchor:flags:isFlipped:viewScale:
endTableNameForChunk:
currentAnimation
isCanvasInteractive
isClear
paintRect:inContext:
getValue:
valueWithBytes:objCType:
changingCellFillAtCellID:
didDrawCellImageFill:inCellRange:
beginTableRow:
beginTableCell:withCellID:cellHasContents:cellIsPrimary:
endTableCell:withCellID:cellHasContents:cellIsPrimary:
endTableRow:
p_drawLayoutSpace:range:inContext:
p_drawLayoutSpace:dirtyRect:inContext:
mustDrawOnMainThreadForInteractiveCanvas
isInGroup
setRecursivelyDrawingInContext:
p_drawTableNameInContext:animation:
p_lockAndDrawLayoutSpace:checkFrameHasWidthAndHeight:dirtyRect:inContext:
p_fontColorAtCellID:cell:
beginCheckboxCell:
endCheckboxCell
beginRatingCell:
endRatingCell
fontHeightInfoAtCharIndex:
baselineOfLineFragmentAtIndex:
boundsOfLineFragmentAtIndex:
pushAnimation:
childReps
popAnimation
imageWithCGImage:
p_cellAtUnscaledPoint:
tableRepDelegateClass
magicMoveAttributeMatchPercentBetweenOutgoingObject:incomingObject:mixingTypeContext:
containerInfo
T@"NSObject<TSDContainerInfo>",R,N
searchSelectionBounds
setSearchSelectionBounds:
ratingsDragCellID
setRatingsDragCellID:
references
aspectOperationIsInProgress
zoomOperationIsInProgress
cellDragController
setCellDragController:
selectionDragAbortedOnNewSelection
setSelectionDragAbortedOnNewSelection:
visibleFillKnobs
setVisibleFillKnobs:
T{CGRect={CGPoint=dd}{CGSize=dd}},N
T{TSUCellCoord=ISBB},N
T@"TSTTableReferences",R,N
T@"TSTSelectionDragController",W,N
T@"NSSet",C,N
textFieldShouldBeginEditing:
textFieldDidBeginEditing:
textFieldShouldEndEditing:
textFieldDidEndEditing:
textFieldDidEndEditing:reason:
textField:shouldChangeCharactersInRange:replacementString:
textFieldDidChangeSelection:
textFieldShouldClear:
textFieldShouldReturn:
textField:editMenuForCharactersInRange:suggestedActions:
displayLayer:
drawLayer:inContext:
layerWillDraw:
layoutSublayersOfLayer:
actionForLayer:forKey:
hitRep:withPrecision:
attachmentCellRepForCellID:optionalCell:
hasVisibleCellWarnings
viewsOverlappingTableCells
p_removeObservers
p_addObservers
asyncPostTextChangedInRange:
invalidateEditingCell
canvasBoundsForCellRange:
boundsForCellSelection:
contentsRectForCellRangeAcrossSpaces:contentsCenterInfo:canvasFrame:contentsRect:
logicalCellIDForUnscaledCanvasPoint:
naturalBoundsRectForHyperlinkField:
hyperlinkContainerRep
validateStrokesInEditingSpillingTextRange
isFullyVisibleWithBorder:
p_updateDynamicModePropertiesForContainedTextEditing
p_updateDynamicModePropertiesForContainedTextEditingWithSpillingTextRange:
p_resetDynamicModePropertiesForContainedTextEditing
wantsActivityLine
setTableChrome:
textureForDescription:
p_alignedLayerFrameForLayoutSpace:transform:
validateFrozenHeaderCorner
validateFrozenHeaderRows
validateFrozenHeaderColumns
validateFrozenHeaderTableBodyMask
invalidateFrozenHeaders
p_drawBackgroundFillInLayoutSpace:gridRange:context:
p_drawFinalElements:inContext:
canDrawInBackgroundDuringScroll
canDrawInParallel
p_manageEmptyPivotMessage
p_scaledCanvasFrame
p_positionEmptyPivotMessage
p_deleteEmptyPivotMessage
p_drawingCheckboxOrRatingInCell:cellID:
p_drawCheckboxOrRatingInContext:viewScale:contentFrame:cell:cellID:
p_drawGroupingArrowInContext:contentFrame:cell:cellID:groupingArrowState:alignedClipFrame:verticalAlignment:wpColumn:
tappedControlCellAtUnscaledPoint:
tappedStockCellAtUnscaledPoint:
tableRepIsBeingRemovedFromBackgroundLayout
setTableRepIsBeingRemovedFromBackgroundLayout:
animationController
setAnimationController:
tableChrome
canvasReferenceController
isZoomToEditOperationInProgress
shouldRepositionStockPopover
setShouldRepositionStockPopover:
zoomToEditOperationIsInProgress
setZoomToEditOperationIsInProgress:
setAspectOperationIsInProgress:
setZoomOperationIsInProgress:
zoomToEditVisibleCellRange
setZoomToEditVisibleCellRange:
cellEditingMaskLayers
setCellEditingMaskLayers:
findSelectionHighlightLayer
setFindSelectionHighlightLayer:
_tableRepIsBeingRemovedFromBackgroundLayout
_selectionDragAbortedOnNewSelection
_isZoomToEditOperationInProgress
_tableNameValid
_shouldRepositionStockPopover
_zoomToEditOperationIsInProgress
_aspectOperationIsInProgress
_zoomOperationIsInProgress
_recursivelyDrawingInContext
_ratingsDragCellID
_cellDragController
_visibleFillKnobs
_animationController
_tableChrome
_canvasReferenceController
_currentScreenScale
_dirtyCellRegionGatherer
_animationStack
_cellEditingMaskLayers
_findSelectionHighlightLayer
_zoomToEditVisibleCellRange
_searchSelectionBounds
tableNameValid
TB,N,GisTableNameValid,V_tableNameValid
TB,N,V_shouldRepositionStockPopover
TB,N,V_zoomToEditOperationIsInProgress
TB,N,V_aspectOperationIsInProgress
TB,N,V_zoomOperationIsInProgress
Td,N,V_currentScreenScale
T@"TSTCellRegionGatherer",&,N,V_dirtyCellRegionGatherer
recursivelyDrawingInContext
TB,N,GisRecursivelyDrawingInContext,V_recursivelyDrawingInContext
T@"NSMutableArray",R,N,V_animationStack
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_zoomToEditVisibleCellRange
TB,R,N,V_dragByHandleOnly
T@"NSMutableArray",&,N,V_cellEditingMaskLayers
T@"CAShapeLayer",&,N,V_findSelectionHighlightLayer
TB,V_tableRepIsBeingRemovedFromBackgroundLayout
T@"TSTLayout",R,N
T@"TSTLayoutEngine",R,N
T@"<TSTTableAnimationController>",W,N,V_animationController
T@"<TSTTableRepDelegate>",R,N,V_delegate
T{CGAffineTransform=dddddd},R,N
T@"<TSTTableChromeProvider>",R,N,V_tableChrome
T@"<TSTCanvasReferenceController>",R,W,N,V_canvasReferenceController
T@"TSTCellSelection",R,N
TB,R,N,V_isZoomToEditOperationInProgress
T@"TSTAnimation",R,N
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_searchSelectionBounds
T{TSUCellCoord=ISBB},N,V_ratingsDragCellID
T@"TSTTableReferences",R,N,V_references
T@"TSTSelectionDragController",W,N,V_cellDragController
TB,N,V_selectionDragAbortedOnNewSelection
TB,R,N,V_selectionUsesBezierPath
TB,R,N,V_selectsCellOnInitialTap
TB,R,N,V_usesSelectionChromeResizer
T@"NSSet",C,N,V_visibleFillKnobs
beginTableChunk:
endTableChunk:
beginTableLayoutSpace:
endTableLayoutSpace:
parentRep
childRepIsOnDocSetupCanvas:
childRepIsMasterDrawable:
listStartAtCharIndex:
transformInParent
drawColumn:selection:inContext:isFlipped:viewScale:renderMode:
isStringValidArgumentToken:
@24@0:8@16
v16@0:8
@44@0:8@16@24B32@36
@32@0:8@16@24
@72@0:8@16@24@32@40B48@52@60B68
B16@0:8
{_NSRange=QQ}48@0:8@16#24{_NSRange=QQ}32
B24@0:8@16
{_NSRange=QQ}32@0:8{_NSRange=QQ}16
Q24@0:8Q16
v24@0:8@16
v40@0:8@16{_NSRange=QQ}24
v32@0:8@16@24
v48@0:8@16@24{_NSRange=QQ}32
@16@0:8
@32@0:8{_NSRange=QQ}16
@36@0:8{_NSRange=QQ}16B32
v32@0:8{_NSRange=QQ}16
v24@0:8Q16
v32@0:8Q16@24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16r^{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32
v72@0:8@16r^{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32{TSCEReplaceFormulaOptions=BBBBB{TSKUIDStruct=QQ}@}40
v48@0:8r^{TSUCellCoord=ISBB}16r^{TSKUIDStruct=QQ}24@32r^{TSCEReplaceFormulaOptions=BBBBB{TSKUIDStruct=QQ}@}40
v32@0:8r^{TSUCellCoord=ISBB}16r^{TSKUIDStruct=QQ}24
v24@0:8r^v16
v24@0:8r^{TSKUIDStruct=QQ}16
v24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
v24@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16
@"TSCECalculationEngine"16@0:8
v40@0:8@"<TSCEFormulaReturning>"16r^{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32
v72@0:8@"<TSCEFormulaReturning>"16r^{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32{TSCEReplaceFormulaOptions=BBBBB{TSKUIDStruct=QQ}@}40
v48@0:8r^{TSUCellCoord=ISBB}16r^{TSKUIDStruct=QQ}24@"TSCEReferenceSetWrapper"32r^{TSCEReplaceFormulaOptions=BBBBB{TSKUIDStruct=QQ}@}40
B24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
@"TSCEFormulasToSet"
{TSCECellRefSet="_coordsForOwnerUid"{map<TSKUIDStruct, TSCECellCoordSet, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECellCoordSet>>>="__tree_"{__tree<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSCECellCoordSet>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>>="__value_"Q}}}}
B20@0:8C16
@36@0:8@16C24@28
{TSKUIDStruct=QQ}16@0:8
I16@0:8
^v16@0:8
v60@0:8@16@24C32{TSKUIDStruct=QQ}36@52
@60@0:8@16@24C32{TSKUIDStruct=QQ}36@52
@32@0:8r^v16@24
v40@0:8r^v16@24@32
v28@0:8@16C24
v40@0:8^v16Q24@32
v32@0:8@16B24B28
@32@0:8C16C20r^{TSKUIDStruct=QQ}24
@20@0:8C16
@52@0:8@16C24Q28Q36^{TSUPreserveFlags=C}44
v36@0:8@16@24C32
v32@0:8@16C24C28
@56@0:8r^{TSKUIDStruct=QQ}16I24@28C36@40^Q48
v44@0:8r^{TSKUIDStruct=QQ}16@24C32@36
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}16@0:8
{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16@0:8
v24@0:8@?16
B24@0:8r^{TSKUIDStruct=QQ}16
@32@0:8@16S24B28
@20@0:8B16
@36@0:8B16@20S28B32
{TSKUIDStruct=QQ}44@0:8@16q24C32@36
@36@0:8B16@20q28
v32@0:8^B16@?24
v36@0:8C16^B20@?28
v28@0:8C16@?20
v40@0:8C16C20^B24@?32
v32@0:8C16C20@?24
@24@0:8r^{TSKUIDStruct=QQ}16
@28@0:8r^{TSKUIDStruct=QQ}16C24
C16@0:8
{TSKUIDStruct="_lower"Q"_upper"Q}
@"TSCECellValue"
@"TSTGroupValueTuple"
@"TSTGroupBy"
{unordered_map<TSKUIDStruct, TSTAggNode *, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSTAggNode *>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
@"NSMutableDictionary"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
{TSUIndexSet="_isEmpty"b1"_hasSingleRange"b1"_singleRange"{TSUIndexRange="_begin"q"_end"q}"_multipleRanges"^{?}}
@"TSTGroupNode"
@"TSTGroupNodeFormatManager"
{unordered_map<TSKUIDStruct, TSTGroupNode *, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSTGroupNode *>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
@"TSCEMutableUIDSet"
{vector<TSUCellCoord, std::allocator<TSUCellCoord>>="__begin_"^{TSUCellCoord}"__end_"^{TSUCellCoord}"__end_cap_"{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>="__value_"^{TSUCellCoord}}}
v32@0:8^{TSCEWarningReportingContext=BB@}16@24
v24@0:8^{TSCEWarningReportingContext=BB@}16
v32@0:8^{TSCEWarningReportingContext=BB@}16c24c28
@24@0:8^{_NSZone=}16
@40@0:8@16r^{TSKUIDStruct=QQ}24{TSUCellCoord=ISBB}32
v20@0:8B16
@"NSDictionary"
@32@0:8@16{TSUCellCoord=ISBB}24
@32@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24
{_NSRange=QQ}16@0:8
@84@0:8@16@24^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}32^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}40@48q56{_NSRange=QQ}64B80
@84@0:8@16@24{TSUCellCoord=ISBB}32{TSUCellCoord=ISBB}40@48q56{_NSRange=QQ}64B80
@64@0:8@16@24{TSUCellCoord=ISBB}32{TSUCellCoord=ISBB}40@48q56
@56@0:8@16@24{TSUCellCoord=ISBB}32{TSUCellCoord=ISBB}40@48
@56@0:8@16@24{TSUCellCoord=ISBB}32{TSUCellCoord=ISBB}40q48
@48@0:8@16@24{TSUCellCoord=ISBB}32{TSUCellCoord=ISBB}40
@64@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24q40{TSUCellCoord=ISBB}48{TSUCellCoord=ISBB}56
@32@0:8@16q24
@40@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24
@40@0:8@16{TSUCellCoord=ISBB}24q32
@32@0:8@16I24I28
@32@0:8@16S24I28
@40@0:8@16q24I32I36
@40@0:8@16@24{TSUColumnRowOffset=ii}32
{TSUCellCoord=ISBB}16@0:8
{TSUCellCoord=ISBB}24@0:8@16
v32@0:8^v16@24
@56@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32q40{TSUCellCoord=ISBB}48
@64@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32{TSUCellCoord=ISBB}40{TSUCellCoord=ISBB}48q56
@28@0:8@16B24
v32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
v32@0:8q16I24I28
B24@0:8{TSUCellCoord=ISBB}16
B24@0:8o^C16
q16@0:8
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@0:8
v48@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@"TSTTableInfo"
@"TSTCellUIDRegion"
@"TSTCellRegion"
{_NSRange="location"Q"length"Q}
{TSKUIDStructCoord="_column"{TSKUIDStruct="_lower"Q"_upper"Q}"_row"{TSKUIDStruct="_lower"Q"_upper"Q}}
{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}56@0:8{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16@48
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}56@0:8{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16@48
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}32@0:8@16@24
{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}32@0:8@16@24
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}40@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24^{TSUPreserveFlags=C}32
{TSUCellCoord=ISBB}40@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24^{TSUPreserveFlags=C}32
@24@0:8@"TSCECalculationEngine"16
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}32@0:8@"NSString"16@"TSCEReferenceParsingContext"24
{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}32@0:8@"NSString"16@"TSCEReferenceParsingContext"24
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}40@0:8@"NSString"16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24^{TSUPreserveFlags=C}32
{TSUCellCoord=ISBB}40@0:8@"NSString"16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24^{TSUPreserveFlags=C}32
@"TSCECategoryRef"32@0:8@"NSString"16@"TSCEReferenceParsingContext"24
@"TSCECategoryRef"24@0:8@"TSCEReferenceParsingContext"16
@"TSCEWrappedRangeRef"24@0:8@"TSCEReferenceParsingContext"16
@"TSCECellTractRef"24@0:8@"TSCEReferenceParsingContext"16
{TSUChromeCellCoord={TSUCellCoord=ISBB}}48@0:8@16^{TSCETableResolver=^^?}24^{TSUPreserveFlags=C}32^@40
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}56@0:8@16^{TSCETableResolver=^^?}24@32^{TSCETableResolver=^^?}40@48
B48@0:8@16^@24^@32^@40
{TSKUIDStruct=QQ}64@0:8@16@24@32@40^{TSUPreserveFlags=C}48^Q56
@48@0:8@16@24Q32@40
@"TSCEStringManipulator"
@"TSCECalculationEngine"
@"NSCharacterSet"
B32@0:8{TSKUIDStruct=QQ}16
v32@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24
q24@0:8@16
q32@0:8@16@24
@32@0:8d16@24
q32@0:8@16@"<TSDMixingTypeContext>"24
@"NSArray"16@0:8
@20@0:8S16
@20@0:8I16
@"TSTStrokeLayer"20@0:8S16
@"TSTStrokeLayer"20@0:8I16
@"TSTTableStyle"16@0:8
v24@0:8@"TSTTableStyle"16
@"TSTCellStyle"16@0:8
v24@0:8@"TSTCellStyle"16
@"TSWPParagraphStyle"16@0:8
v24@0:8@"TSWPParagraphStyle"16
@"TSWPShapeStyle"16@0:8
v24@0:8@"TSWPShapeStyle"16
@"TSDStroke"16@0:8
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16@0:8
@32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16o^B24
{TSUModelRowIndex=I}16@0:8
{TSUModelColumnIndex=S}16@0:8
@"TSWPParagraphStyle"32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16o^B24
v24@0:8@?<v@?@"TSTCell"{TSUCellCoord=ISBB}^B>16
@72@0:8@16{TSKUIDStruct=QQ}24@40@48@56@64
@64@0:8@16r^v24r^v32@40@48@56
@56@0:8@16I24I28@32@40@48
@52@0:8@16@24@32@40B48
@60@0:8@16@24@32@40B48q52
@56@0:8@16@24@32@40@48
v38@0:8r^v16r^v24{TSUModelRowIndex=I}32{TSUModelColumnIndex=S}36
v40@0:8@16@24@32
v48@0:8@16@24@32@40
C18@0:8{TSUModelColumnIndex=S}16
B24@0:8Q16
{?=II}16@0:8
d16@0:8
v24@0:8d16
v20@0:8{TSUModelRowIndex=I}16
v18@0:8{TSUModelColumnIndex=S}16
i16@0:8
@24@0:8{TSUModelRowIndex=I}16C20
@22@0:8{TSUModelColumnIndex=S}16C18
v32@0:8{TSKUIDStruct=QQ}16
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@0:8Q16
Q24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
Q20@0:8{TSUModelRowIndex=I}16
Q18@0:8{TSUModelColumnIndex=S}16
@32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
i32@0:8o@16Q24
i32@0:8o@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24
B24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
i36@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32
i32@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24
@24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
v40@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24@32
i48@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32B36@40
i40@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32B36
i24@0:8@16
i32@0:8@16B24B28
@32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16^B24
C24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
@32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16@24
i24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
i28@0:8@16{TSUModelRowIndex=I}24
@28@0:8{TSUModelRowIndex=I}16o^B20
i26@0:8@16{TSUModelColumnIndex=S}24
@26@0:8{TSUModelColumnIndex=S}16o^B18
@36@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16B24o^Q28
@24@0:8Q16
v44@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16B24^@28^@36
v40@0:8Q16^@24^@32
d28@0:8{TSUModelRowIndex=I}16o^B20
d26@0:8{TSUModelColumnIndex=S}16o^B18
v28@0:8d16{TSUModelRowIndex=I}24
v26@0:8d16{TSUModelColumnIndex=S}24
d24@0:8Q16
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
i52@0:8{_NSRange=QQ}16r^v32@40B48
i42@0:8{TSUModelColumnIndex=S}16r^v18@26Q34
i48@0:8{TSUModelRowIndex=I}16r^v20@28Q36B44
v24@0:8{TSUModelRowIndex=I}16{TSUModelRowIndex=I}20
v20@0:8{TSUModelColumnIndex=S}16{TSUModelColumnIndex=S}18
v36@0:8{_NSRange=QQ}16{TSUModelRowIndex=I}32
v34@0:8{_NSRange=QQ}16{TSUModelColumnIndex=S}32
C20@0:8{TSUModelRowIndex=I}16
v28@0:8C16r^{TSUModelRowIndex=I}20
v28@0:8C16r^{TSUModelColumnIndex=S}20
@28@0:8{TSUCellCoord=ISBB}16B24
@28@0:8S16o^q20
@32@0:8S16B20o^q24
@20@0:8{TSUModelRowIndex=I}16
@24@0:8{TSUCellCoord=ISBB}16
v32@0:8@16I24i28
v32@0:8@16S24i28
v48@0:8@16I24i28{TSTSimpleRange=qQ}32
v48@0:8@16S24i28{TSTSimpleRange=qQ}32
@32@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24
i36@0:8o^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32
i40@0:8o^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32B36
v28@0:8@16B24
v36@0:8r^v16@24B32
v36@0:8@16B24B28B32
v36@0:8@16{TSUColumnRowOffset=ii}24B32
{TSCECellCoordSet={map<unsigned short, TSUIndexSet, std::less<unsigned short>, std::allocator<std::pair<const unsigned short, TSUIndexSet>>>={__tree<std::__value_type<unsigned short, TSUIndexSet>, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>, std::allocator<std::__value_type<unsigned short, TSUIndexSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned short, TSUIndexSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>>=Q}}}}16@0:8
v32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUModelCellCoord={TSUCellCoord=ISBB}}24@0:8@16
v40@0:8@16Q24@?32
B32@0:8{TSUCellCoord=ISBB}16^@24
B24@0:8^@16
B32@0:8^@16^B24
v40@0:8@16B24B28@32
S16@0:8
v20@0:8S16
@"TSTHiddenStateFormulaOwner"
@"TSTStrokeSidecar"
{vector<TSTCellValueType, std::allocator<TSTCellValueType>>="__begin_"^C"__end_"^C"__end_cap_"{__compressed_pair<TSTCellValueType *, std::allocator<TSTCellValueType>>="__value_"^C}}
{map<unsigned long, TSTGroupingType, std::less<unsigned long>, std::allocator<std::pair<const unsigned long, TSTGroupingType>>>="__tree_"{__tree<std::__value_type<unsigned long, TSTGroupingType>, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, TSTGroupingType>, std::less<unsigned long>, true>, std::allocator<std::__value_type<unsigned long, TSTGroupingType>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned long, TSTGroupingType>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, TSTGroupingType>, std::less<unsigned long>, true>>="__value_"Q}}}
{TSUModelColumnIndex="_column"S}
{TSUModelRowIndex="_row"I}
@"TSTTableDataStore"
@"NSString"
@"TSTTableStylePreset"
@"TSTTableStyle"
@"TSTTableTranslator"
@"TSTCellStyle"
@"TSWPParagraphStyle"
@"TSWPShapeStyle"
@"TSTCellDictionary"
@"TSTConcurrentMutableCellUIDSet"
@"TSTConditionalStyleFormulaOwner"
@"TSTMergeOwner"
@"TSTCategoryOwner"
@"TSTPivotOwner"
@"TSTHiddenStatesOwner"
@"TSCEHauntedOwner"
@"TSTTableSortOrder"
@"TSTSortRuleReferenceTracker"
@"TSTColumnRowUIDMap"
@"TSTCellWillChangeDistributor"
@"TSWPStorage"
@"NSMapTable"
@"TSTStructuredTextImportRecord"
@"TSTTableFilterSet"
@"TSTPencilAnnotationOwner"
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@0:8
@"TSTCell"16@0:8
@"TSTCellFormulaSpec"16@0:8
v24@0:8{TSUCellCoord=ISBB}16
{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}
@"TSTCell"
@"TSTCellFormulaSpec"
{TSUCellRect="origin"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"size"{?="numberOfColumns"I"numberOfRows"I}}
@36@0:8@16B24@28
v28@0:8@16I24
@28@0:8I16o^I20
^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}24@0:8S16I20
q40@0:8@16S24I28^{?=IIIIIIIIIS}32
i24@0:8S16I20
@24@0:8S16I20
v28@0:8S16I20S24
v24@0:8I16I20
v28@0:8I16I20B24
@24@0:8I16I20
v32@0:8@16I24B28
@"NSPointerArray"
v32@0:8d16{TSUCellCoord=ISBB}24
{vector<std::pair<TSUCellCoord, double>, std::allocator<std::pair<TSUCellCoord, double>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::pair<TSUCellCoord, double> *, std::allocator<std::pair<TSUCellCoord, double>>>="__value_"^v}}
{unordered_map<unsigned short, double, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, double>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, double>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, double>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, double>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, double>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, double>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, double>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}
@32@0:8^{TSCEDateValue=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}16@24
^{TSCEDateValue=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}16@0:8
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@0:8
v24@0:8^v16
^{TSCEDateValue=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}
B40@0:8d16d24d32
d20@0:8I16
@40@0:8d16d24d32
@44@0:8I16d20d28d36
d32@0:8d16^B24
d32@0:8@16@24
v40@0:8@16{TSKUIDStruct=QQ}24
v48@0:8@16@24{TSKUIDStruct=QQ}32
v40@0:8@"NSString"16{TSKUIDStruct=QQ}24
v48@0:8@"NSString"16@"NSString"24{TSKUIDStruct=QQ}32
{unordered_set<TSUCellCoord, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<TSUCellCoord>>={__hash_table<TSUCellCoord, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<TSUCellCoord>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSUCellCoord, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSUCellCoord, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSUCellCoord, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSUCellCoord, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSUCellCoord, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSUCellCoord, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSUCellCoord, void *> *>, std::allocator<std::__hash_node<TSUCellCoord, void *>>>={__hash_node_base<std::__hash_node<TSUCellCoord, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSUCellCoord>>=Q}{__compressed_pair<float, std::equal_to<TSUCellCoord>>=f}}}16@0:8
@24@0:8r^v16
@"NSObject<OS_dispatch_semaphore>"
@41@0:8@16r^{TSKUIDStruct=QQ}24{TSUPreserveFlags=C}32^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}33
@40@0:8r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}24r^{TSKUIDStruct=QQ}32
@24@0:8r^{TSCECellTractRefCore={TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSKUIDStruct=QQ}C{TSUPreserveFlags=C}BBB}16
@32@0:8r^{TSUCellCoord=ISBB}16r^{TSUCellCoord=ISBB}24
@40@0:8r^{TSUCellCoord=ISBB}16r^{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32
@24@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16
@40@0:8r^v16@24r^{TSKUIDStruct=QQ}32
{TSUPreserveFlags=C}16@0:8
v17@0:8{TSUPreserveFlags=C}16
B24@0:8S16B20
B24@0:8I16B20
{TSUPreserveFlags=C}28@0:8r^{TSUCellCoord=ISBB}16B24
v24@0:8^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16
v20@0:8I16
v24@0:8r^{TSUIndexRange=qq}16
v24@0:8r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16
r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16@0:8
v24@0:8r^{TSUColumnRowOffset=ii}16
{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16@0:8
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16@0:8
v24@0:8r^{TSUCellCoord=ISBB}16
{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}32@0:8@16r^{TSKUIDStruct=QQ}24
v24@0:8r^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
{TSUCellCoord=ISBB}24@0:8I16I20
B40@0:8@16@24B32B36
B32@0:8@16@24
{TSCECellTractRefCore={TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSKUIDStruct=QQ}C{TSUPreserveFlags=C}BBB}16@0:8
v104@0:8{TSCECellTractRefCore={TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSKUIDStruct=QQ}C{TSUPreserveFlags=C}BBB}16
{TSCECellTractRefCore="_columns"{TSUIndexSet="_isEmpty"b1"_hasSingleRange"b1"_singleRange"{TSUIndexRange="_begin"q"_end"q}"_multipleRanges"^{?}}"_rows"{TSUIndexSet="_isEmpty"b1"_hasSingleRange"b1"_singleRange"{TSUIndexRange="_begin"q"_end"q}"_multipleRanges"^{?}}"_tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}"_spanType"C"_preserveFlags"{TSUPreserveFlags="_flags"C}"_preserveRectangular"B"_mixedColumnStartedWithPreserve"B"_mixedRowStartedWithPreserve"B}
@"NSString"24@0:8@"<TSCEReferenceResolving>"16
@"NSString"24@0:8@"<TSCEResolverContainer>"16
@"<TSCEResolverContainer>"28@0:8@"NSString"16B24
@"NSArray"24@0:8@"NSString"16
@"<TSCEReferenceResolving>"32@0:8@"NSString"16@"<TSCEReferenceResolving>"24
@"<TSCEReferenceResolving>"32@0:8@"NSString"16@"NSString"24
@"NSEnumerator"16@0:8
@"NSEnumerator"24@0:8Q16
@"NSString"24@0:8@"<TSKModel>"16
v24@0:8@"<TSKModelVisitor>"16
v28@0:8@16S24
v28@0:8@"TSCECalculationEngine"16S24
v24@0:8@"TSCECalculationEngine"16
@"TSPObject<TSCECalculationEngineRegistration>"16@0:8
@"<TSCEFormulaOwning>"16@0:8
I24@0:8Q16
@40@0:8q16{CGPoint=dd}24
@48@0:8q16@24@32@40
@52@0:8q16@24@32@40B48
@40@0:8{TSKUIDStruct=QQ}16@32
v40@0:8@16@24Q32
v48@0:8@16@24Q32Q40
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}44@0:8Q16{?=II}24I32I36I40
Q40@0:8{TSUCellCoord=ISBB}16I24I28I32I36
@24@0:8@"TSPObjectContext"16
v24@0:8@"TSDInfoGeometry"16
v24@0:8@"NSObject<TSDInfo>"16
@"TSDInfoGeometry"16@0:8
@"NSObject<TSDInfo>"16@0:8
@"TSPObject<TSDOwningAttachment>"16@0:8
v24@0:8@"TSPObject<TSDOwningAttachment>"16
B24@0:8@"NSObject<TSDInfo>"16
@"<TSDInfoUUIDPathPrefixComponentsProvider>"16@0:8
@"TSKCollaboratorCursor"24@0:8@"TSKSelectionPath"16
@24@0:8@?16
@"TSKSearch"24@0:8@?<v@?@"<TSKSearchReference>">16
v24@0:8@?<v@?@"<TSKSearchReference>">16
v24@0:8@"TSKSearch"16
@"TSKCommand"24@0:8@"NSObject<TSKSearchReplaceProvider>"16
v40@0:8@"NSString"16@"TSSTheme"24Q32
@"NSSet"16@0:8
v24@0:8@?<@"TSSStyle"@?@"TSSStyle">16
v24@0:8@"TSSStylesheet"16
v24@0:8@"TSSStyle"16
{TSKUIDStruct=QQ}20@0:8S16
{TSKUIDStruct=QQ}20@0:8I16
S32@0:8{TSKUIDStruct=QQ}16
I32@0:8{TSKUIDStruct=QQ}16
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}24@0:8@16
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}32@0:8{_NSRange=QQ}16
{_NSRange=QQ}24@0:8r^v16
r^v16@0:8
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}24@0:8r^v16
v28@0:8[16C]16I24
v28@0:8[16C]16S24
I24@0:8[16C]16
S24@0:8[16C]16
{TSKUIDStruct=QQ}28@0:8@16B24
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@0:8r^v16
{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}24@0:8@"NSIndexSet"16
@"NSMutableIndexSet"24@0:8r^v16
@"NSIndexSet"24@0:8r^v16
@"TSCEMutableUIDSet"28@0:8@"NSIndexSet"16B24
@"NSMutableIndexSet"28@0:8@"TSCEUIDSet"16B24
@"NSMutableIndexSet"36@0:8@"TSCEUIDSet"16B24@"TSCEMutableUIDSet"28
{TSKUIDStruct=QQ}28@0:8@"TSCEUIDSet"16B24
B20@0:8I16
B20@0:8S16
I20@0:8I16
S20@0:8S16
B32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
I32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
@32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
B36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16C32
B24@0:8I16C20
B24@0:8S16C20
C20@0:8I16
C20@0:8S16
@"NSIndexSet"32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
@"NSMutableIndexSet"32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
@"NSIndexSet"24@0:8@"TSTCellRegion"16
@"NSIndexSet"24@0:8@"NSIndexSet"16
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
@"TSTMergeListWrapper"32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
@"TSTMergeListWrapper"24@0:8@"TSTCellRegion"16
@"TSTCellRegion"24@0:8@"TSTCellRegion"16
@56@0:8@16@24I32I36@40@48
@48@0:8@16@24I32I36@40
@40@0:8@16@24I32I36
@64@0:8@16@24{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32{_NSRange=QQ}48
@72@0:8@16@24{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32{_NSRange=QQ}48@64
@40@0:8@16@24{TSUCellCoord=ISBB}32
@56@0:8@16@24@32B40q44B52
v28@0:8q16B24
v40@0:8@16@24d32
v40@0:8{TSUCellCoord=ISBB}16{TSUCellCoord=ISBB}24{TSUCellCoord=ISBB}32
v32@0:8@16{TSUCellCoord=ISBB}24
@18@0:8{TSUModelColumnIndex=S}16
Q32@0:8Q16@24
@28@0:8B16@20
Q24@0:8@16
v48@0:8@16@24@32d40
v24@0:8q16
v32@0:8{CGSize=dd}16
v32@0:8{CGPoint=dd}16
v32@0:8d16d24
v28@0:8{TSUColumnRowOffset=ii}16B24
B32@0:8@16@?24
i32@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24
i24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
v40@0:8@16{TSUCellCoord=ISBB}24@32
@32@0:8{TSUCellCoord=ISBB}16@24
v36@0:8i16@20{TSUCellCoord=ISBB}28
v48@0:8{TSUCellCoord=ISBB}16^B24^@32^q40
v64@0:8@16{TSUCellCoord=ISBB}24^B32^q40^i48^@56
v20@0:8i16
@18@0:8{TSUViewColumnIndex=S}16
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@0:8Q16
Q24@0:8{TSUCellCoord=ISBB}16
Q20@0:8I16
Q20@0:8S16
Q48@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
i32@0:8@16Q24
i32@0:8o@16{TSUCellCoord=ISBB}24
i36@0:8@16{TSUCellCoord=ISBB}24B32
i32@0:8@16{TSUCellCoord=ISBB}24
B24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
v36@0:8@16{TSUCellCoord=ISBB}24B32
i48@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24B32B36@40
i40@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24B32B36
v48@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24@32@40
@36@0:8@16B24B28B32
@32@0:8@16B24B28
i40@0:8@16{TSUCellCoord=ISBB}24@32
C24@0:8{TSUCellCoord=ISBB}16
C24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
i32@0:8@16r^{TSKUIDStruct=QQ}24
@28@0:8I16o^B20
@28@0:8S16o^B20
@36@0:8{TSUCellCoord=ISBB}16B24o^Q28
@32@0:8{TSUCellCoord=ISBB}16o^B24
@32@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16o^B24
v44@0:8{TSUCellCoord=ISBB}16B24^@28^@36
@28@0:8S16@20
@40@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16o^B32
{TSUCellCoord=ISBB}24@0:8{TSUCellCoord=ISBB}16
d28@0:8I16o^B20
d28@0:8S16o^B20
v28@0:8d16S24
v28@0:8d16I24
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@0:8{TSUCellCoord=ISBB}16
v28@0:8S16I20B24
i44@0:8S16r^v20@28Q36
i44@0:8I16r^v20@28Q36
i48@0:8I16r^v20@28Q36B44
v24@0:8S16I20
v36@0:8{_NSRange=QQ}16I32
v36@0:8{_NSRange=QQ}16S32
@24@0:8q16
v32@0:8@16@?24
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}24@0:8@16
i36@0:8o^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16{TSUCellCoord=ISBB}24B32
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}24@0:8I16I20
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}24@0:8S16S20
@32@0:8@16^@24
B56@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16o^{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}32o^{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}40o^{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}48
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@0:8{TSUCellCoord=ISBB}16
{TSUCellCoord=ISBB}48@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
B40@0:8@16^v24^v32
v40@0:8@16^v24^v32
@36@0:8@16B24^B28
@52@0:8{vector<TSKUIDStructCoord, std::allocator<TSKUIDStructCoord>>=^{TSKUIDStructCoord}^{TSKUIDStructCoord}{__compressed_pair<TSKUIDStructCoord *, std::allocator<TSKUIDStructCoord>>=^{TSKUIDStructCoord}}}16B40^B44
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}28@0:8{TSUCellCoord=ISBB}16B24
i32@0:8o@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24
i36@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24B32
@56@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16o^B48
B20@0:8B16
v96@0:8@16{TSKUIDStruct=QQ}24d40{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}48
v88@0:8@16@24@32q40@48{TSKUIDStruct=QQ}56{TSKUIDStruct=QQ}72
{TSUChromeColumnIndex=S}16@0:8
{TSUChromeRowIndex=I}16@0:8
S24@0:8@16
@28@0:8C16@?20
@28@0:8C16@20
@28@0:8C16r^v20
@24@0:8C16C20
{_NSRange=QQ}20@0:8I16
q24@0:8{TSUCellCoord=ISBB}16
B40@0:8{TSKUIDStruct=QQ}16q32
C24@0:8r^{TSKUIDStruct=QQ}16
C36@0:8{TSKUIDStruct=QQ}16C32
v40@0:8C16{TSKUIDStruct=QQ}20C36
d20@0:8C16
v28@0:8d16C24
@28@0:8i16@20
v32@0:8r^v16@24
{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}16@0:8
v64@0:8{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}16
@"TSTTableModel"
@"TSTConditionalStyleSet"
@"TSTTablePartitioner"
@"TSTLayoutEngine"
@"TSTSummaryModel"
@"TSTLayoutHint"
@"TSTCategoryOrder"
@"TSTPivotRowColumnOrder"
@"TSTHiddenStates"
@"TSCECoordMapper"
@"TSTArchivedLayoutEngineBundle"
{TSKUIDStructTract="_colIdList"{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}"_rowIdList"{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}}
B20@0:8i16
@20@0:8i16
f20@0:8i16
i20@0:8i16
d20@0:8i16
v40@0:8@16@24{TSUCellCoord=ISBB}32
@40@0:8@16@24@32
v56@0:8@16@24@32Q40@48
@64@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@32@40@48@56
@80@0:8@16@24r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}32@40@48@56@64@72
@56@0:8@16Q24B32B36@40@48
@48@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16Q32Q40
v56@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16Q32Q40@?48
@32@0:8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@24
c16@0:8
v20@0:8c16
@"TSULocale"
{vector<TSUCellRect, std::allocator<TSUCellRect>>="__begin_"^{TSUCellRect}"__end_"^{TSUCellRect}"__end_cap_"{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>="__value_"^{TSUCellRect}}}
@36@0:8@16r^v24C32
@44@0:8@16r^{TSKUIDStruct=QQ}24r^v32C40
v20@0:8C16
v28@0:8r^v16C24
{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16@0:8
{RefTypeHolder<TSCERangeRef, 1>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16@0:8
{vector<RefTypeHolder<TSCERangeRef, 0>, std::allocator<RefTypeHolder<TSCERangeRef, 0>>>=^v^v{__compressed_pair<RefTypeHolder<TSCERangeRef, 0> *, std::allocator<RefTypeHolder<TSCERangeRef, 0>>>=^v}}16@0:8
{vector<RefTypeHolder<TSCERangeRef, 1>, std::allocator<RefTypeHolder<TSCERangeRef, 1>>>=^v^v{__compressed_pair<RefTypeHolder<TSCERangeRef, 1> *, std::allocator<RefTypeHolder<TSCERangeRef, 1>>>=^v}}16@0:8
{TSUViewCellCoord={TSUCellCoord=ISBB}}16@0:8
{TSUModelCellCoord={TSUCellCoord=ISBB}}16@0:8
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16@0:8
v48@0:8{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16
@"TSCECellTractRef"
@"TSTColumnRowUIDMapper"
{RefTypeHolder<TSCERangeRef, 2>="_ref"{TSCERangeRef="range"{TSCERangeCoordinate="_topLeft"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"_bottomRight"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}}"_tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}}}
v24@0:8@?<v@?@"<TSTCellIteratorData>"^B>16
@"<TSTCellIteratorData>"16@0:8
@"TSTTableInfo"16@0:8
@72@0:8@16@24@32Q40Q48{TSUCellRect={TSUCellCoord=ISBB}{?=II}}56
@64@0:8@16@24Q32Q40{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48
@40@0:8@16Q24Q32
@56@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24Q40Q48
@48@0:8@16@24Q32Q40
{unordered_map<unsigned short, TSUCellRect, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, TSUCellRect>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, TSUCellRect>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSUCellRect>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSUCellRect>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, TSUCellRect>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSUCellRect>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSUCellRect>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}
@"TSTMutableCellIteratorData"
@"<TSTCellRegionIterating><TSTMutableCellIteratorDataUpdating>"
@"<TSTCellRegionIterating>"
@32@0:8Q16Q24
v48@0:8@16Q24@32Q40
v56@0:8@16Q24Q32@40Q48
v40@0:8@16r^v24@32
{CGSize=dd}32@0:8@16@24
^{TSCEFunctionArgSpec=}16@0:8
v40@0:8@16{TSTCSENodeData=QQ}24
@40@0:8{TSTCSENodeData=QQ}16@32
{unordered_map<unsigned long, TSTCSENodeData, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, TSTCSENodeData>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, TSTCSENodeData>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSTCSENodeData>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSTCSENodeData>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, TSTCSENodeData>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSTCSENodeData>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSTCSENodeData>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
@"NSMutableArray"
Q24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
C18@0:8{TSUViewColumnIndex=S}16
C20@0:8{TSUViewRowIndex=I}16
Q20@0:8{TSUViewRowIndex=I}16
{TSUViewColumnIndex=S}16@0:8
{TSUViewRowIndex=I}16@0:8
C24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
v44@0:8{TSUViewRowIndex=I}16@?20@?28@?36
@28@0:8{TSUViewRowIndex=I}16o^B20
v42@0:8{TSUViewColumnIndex=S}16@?18@?26@?34
@26@0:8{TSUViewColumnIndex=S}16o^B18
i40@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16@?24@?32
@36@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16B24o^Q28
v44@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16B24^@28^@36
@32@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16o^B24
i36@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24B32
i36@0:8o^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16{TSUViewCellCoord={TSUCellCoord=ISBB}}24B32
d28@0:8{TSUViewRowIndex=I}16o^B20
d26@0:8{TSUViewColumnIndex=S}16o^B18
v28@0:8d16{TSUViewRowIndex=I}24
v26@0:8d16{TSUViewColumnIndex=S}24
B24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
C28@0:8{TSUViewRowIndex=I}16^Q20
C26@0:8{TSUViewColumnIndex=S}16^Q18
Q18@0:8{TSUViewColumnIndex=S}16
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
@"NSIndexSet"
@24@0:8I16B20
{vector<TSTCell *, std::allocator<TSTCell *>>=^@^@{__compressed_pair<TSTCell *__strong *, std::allocator<TSTCell *>>=^@}}32@0:8^v16@?24
^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}20@0:8S16
v36@0:8S16@20^{?=IIIIIIIIIS}28
v36@0:8@16S24^{?=IIIIIIIIIS}28
q36@0:8@16S24^{?=IIIIIIIIIS}28
Q24@0:8S16I20
v28@0:8S16S20I24
v40@0:8{_NSRange=QQ}16@?32
v44@0:8{_NSRange=QQ}16B32@?36
B28@0:8S16Q20
{TSTTableTileRowBuffer="_private"{?="cellData"*"cellBufferSize"Q"allocatedCellBufferSize"Q"offsets"^S"offsetBufferCount"S"wideOffsets"B}}
@40@0:8@16@24q32
{vector<TSU::UUIDData<TSP::UUIDData>, std::allocator<TSU::UUIDData<TSP::UUIDData>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::allocator<TSU::UUIDData<TSP::UUIDData>>>="__value_"^v}}
@"TSCEUIDSet"
@"TSCEFormulaObject"16@0:8
@"TSCEFormulaObject"
@"TSTStockDetails"
^v28@0:8@16B24
{TSCENameTrieNode="_children"{unordered_map<unsigned short, TSCENameTrieNode *, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, TSCENameTrieNode *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSCENameTrieNode *>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSCENameTrieNode *>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, TSCENameTrieNode *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSCENameTrieNode *>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSCENameTrieNode *>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}"_name"@"NSString"}
@32@0:8^{TSCETableResolver=^^?}16@24
@24@0:8^{TSCETableResolver=^^?}16
^{TSCETableResolver=^^?}16@0:8
v24@0:8^{TSCETableResolver=^^?}16
{TSUPreserveFlags="_flags"C}
^{TSCETableResolver=^^?}
@"NSArray"
@"TSCEQuotedRefPathSplitter"
@"TSCEAbortObject"
@32@0:8@16Q24
@"TSCEEdgeListPrinter"
@32@0:8{TSKUIDStruct=QQ}16
v32@0:8@16Q24
v32@0:8Q16Q24
v32@0:8Q16q24
v24@0:8C16C20
v28@0:8C16q20
v28@0:8C16@20
v56@0:8@16@24@32@40q48
v56@0:8^v16^v24^v32@40C48B52
{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}}20@0:8S16
q24@0:8r^{TSKUIDStruct=QQ}16
S24@0:8r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16
B24@0:8r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16
@24@0:8S16B20
{vector<TSTGroupNode *, std::allocator<TSTGroupNode *>>=^@^@{__compressed_pair<TSTGroupNode *__strong *, std::allocator<TSTGroupNode *>>=^@}}16@0:8
r^v24@0:8r^{TSKUIDStruct=QQ}16
{TSKUIDStruct=QQ}32@0:8r^{TSKUIDStruct=QQ}16^Q24
Q24@0:8r^{TSKUIDStruct=QQ}16
S24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@28@0:8Q16B24
@32@0:8Q16@24
@40@0:8Q16B24B28@32
S32@0:8@16@24
{TSKUIDStruct=QQ}24@0:8@16
@32@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16^C24
@28@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16C24
{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@40@0:8@16r^v24Q32
@32@0:8r^{TSKUIDStruct=QQ}16@24
@44@0:8@16@24@32C40
@48@0:8@16@24r^{TSKUIDStruct=QQ}32@40
@36@0:8@16S24@28
B32@0:8r^{TSKUIDStruct=QQ}16q24
@32@0:8r^{TSKUIDStruct=QQ}16q24
v52@0:8r^{TSKUIDStruct=QQ}16@24@32B40@44
@28@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16B24
B40@0:8@16{TSKUIDStruct=QQ}24
{vector<TSTGroupBy *, std::allocator<TSTGroupBy *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSTGroupBy *__strong *, std::allocator<TSTGroupBy *>>="__value_"^@}}
{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}
{unordered_map<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{vector<TSUIndexSet, std::allocator<TSUIndexSet>>="__begin_"^{TSUIndexSet}"__end_"^{TSUIndexSet}"__end_cap_"{__compressed_pair<TSUIndexSet *, std::allocator<TSUIndexSet>>="__value_"^{TSUIndexSet}}}
@"TSTGroupingColumnList"
@"TSTColumnAggregateList"
^{TSCEASTNodeArray=*QQB}16@0:8
{?=b48}16@0:8
^{TSCEASTNodeArray=*QQB}
{?="formulaID"b48}
v28@0:8@16i24
v24@0:8i16i20
v24@0:8B16i20
v24@0:8f16i20
@"TSSPropertyMap"
@"TSSMutablePropertySet"
{vector<TSCEFunctionIndex, std::allocator<TSCEFunctionIndex>>=^S^S{__compressed_pair<TSCEFunctionIndex *, std::allocator<TSCEFunctionIndex>>=^S}}16@0:8
v32@0:8r^v16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24
v40@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24^B32
{unordered_map<TSCEFunctionIndex, TSCEReferenceSet *, std::hash<TSCEFunctionIndex>, std::equal_to<TSCEFunctionIndex>, std::allocator<std::pair<const TSCEFunctionIndex, TSCEReferenceSet *>>>="__table_"{__hash_table<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, std::__unordered_map_hasher<TSCEFunctionIndex, std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, std::hash<TSCEFunctionIndex>, std::equal_to<TSCEFunctionIndex>, true>, std::__unordered_map_equal<TSCEFunctionIndex, std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, std::equal_to<TSCEFunctionIndex>, std::hash<TSCEFunctionIndex>, true>, std::allocator<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCEFunctionIndex, std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, std::hash<TSCEFunctionIndex>, std::equal_to<TSCEFunctionIndex>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCEFunctionIndex, std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, std::equal_to<TSCEFunctionIndex>, std::hash<TSCEFunctionIndex>, true>>="__value_"f}}}
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
@96@0:8@16{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}24r^v72q80B88B92
@"TSUPair"24@0:8@"TSTTableInfo"16
{vector<TSUViewCellRect, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}^{TSUViewCellRect}{__compressed_pair<TSUViewCellRect *, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}}}16@0:8
{vector<TSKUIDStructTract, std::allocator<TSKUIDStructTract>>=^{TSKUIDStructTract}^{TSKUIDStructTract}{__compressed_pair<TSKUIDStructTract *, std::allocator<TSKUIDStructTract>>=^{TSKUIDStructTract}}}16@0:8
v32@0:8@?16@?24
@32@0:8@16@?24
v40@0:8Q16Q24@?32
v32@0:8Q16@?24
v112@0:8@?16@?24@?32@?40@?48@?56@?64@?72@?80@?88@?96@?104
v40@0:8{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}16
@88@0:8@16{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}24r^v72q80
@88@0:8@16{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}40
@40@0:8@16{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24
@72@0:8@16{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}24
v32@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24
v40@0:8Q16Q24Q32
v36@0:8^v16@24B32
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16@0:8
v32@0:8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUViewCellRect="_rect"{TSUCellRect="origin"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"size"{?="numberOfColumns"I"numberOfRows"I}}}
{vector<TSTCell *, std::allocator<TSTCell *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSTCell *__strong *, std::allocator<TSTCell *>>="__value_"^@}}
{vector<TSUModelRowIndex, std::allocator<TSUModelRowIndex>>="__begin_"^{TSUModelRowIndex}"__end_"^{TSUModelRowIndex}"__end_cap_"{__compressed_pair<TSUModelRowIndex *, std::allocator<TSUModelRowIndex>>="__value_"^{TSUModelRowIndex}}}
{vector<TSUModelColumnIndex, std::allocator<TSUModelColumnIndex>>="__begin_"^{TSUModelColumnIndex}"__end_"^{TSUModelColumnIndex}"__end_cap_"{__compressed_pair<TSUModelColumnIndex *, std::allocator<TSUModelColumnIndex>>="__value_"^{TSUModelColumnIndex}}}
{vector<TSUViewRowIndex, std::allocator<TSUViewRowIndex>>="__begin_"^{TSUViewRowIndex}"__end_"^{TSUViewRowIndex}"__end_cap_"{__compressed_pair<TSUViewRowIndex *, std::allocator<TSUViewRowIndex>>="__value_"^{TSUViewRowIndex}}}
{vector<TSUViewColumnIndex, std::allocator<TSUViewColumnIndex>>="__begin_"^{TSUViewColumnIndex}"__end_"^{TSUViewColumnIndex}"__end_cap_"{__compressed_pair<TSUViewColumnIndex *, std::allocator<TSUViewColumnIndex>>="__value_"^{TSUViewColumnIndex}}}
{vector<long, std::allocator<long>>="__begin_"^q"__end_"^q"__end_cap_"{__compressed_pair<long *, std::allocator<long>>="__value_"^q}}
{vector<TSTNineKeyStructPreBNC, std::allocator<TSTNineKeyStructPreBNC>>="__begin_"^{?}"__end_"^{?}"__end_cap_"{__compressed_pair<TSTNineKeyStructPreBNC *, std::allocator<TSTNineKeyStructPreBNC>>="__value_"^{?}}}
@"TSUPointerKeyDictionary"
v32@0:8@16{TSUColumnRowOffset=ii}24
@"NSMutableIndexSet"
@"TSKStructuredTextImportSettings"
@"NSURL"
@"NSDate"
@"NSData"
#24@0:8@16
v24@0:8i16I20
@32@0:8@16I24B28
v28@0:8I16@20
v24@0:8I16B20
{unordered_map<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *, TSTTableDataPayloadHash, TSTTableDataPayloadEqual, std::allocator<std::pair<NSObject<TSTTableDataPayloadHashing> *const, TSTTableDataObject *>>>="__table_"{__hash_table<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, std::__unordered_map_hasher<NSObject<TSTTableDataPayloadHashing> *, std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, TSTTableDataPayloadHash, TSTTableDataPayloadEqual, true>, std::__unordered_map_equal<NSObject<TSTTableDataPayloadHashing> *, std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, TSTTableDataPayloadEqual, TSTTableDataPayloadHash, true>, std::allocator<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<NSObject<TSTTableDataPayloadHashing> *, std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, TSTTableDataPayloadHash, TSTTableDataPayloadEqual, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<NSObject<TSTTableDataPayloadHashing> *, std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, TSTTableDataPayloadEqual, TSTTableDataPayloadHash, true>>="__value_"f}}}
@"NSObject<TSDContainerInfo><TSWPStorageParent>"
@"TSTTableDataListSegment"
I32@0:8@16I24B28
@28@0:8I16^B20
v40@0:8@16Q24@32
@44@0:8@16@24@32B40
I24@0:8@16
@76@0:8i16@20{CGAffineTransform=dddddd}28
@"TSKSelection"16@0:8
v24@0:8@"TSKSelection"16
@"TSKSelection"24@0:8@"TSKSelection"16
@"TSTCellSelection"
@76@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32C48i52C56{TSKUIDStruct=QQ}60
@40@0:8{TSKUIDStruct=QQ}16C32i36
@36@0:8{TSKUIDStruct=QQ}16C32
@56@0:8{TSKUIDStruct=QQ}16C32C36{TSKUIDStruct=QQ}40
@72@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32C48C52{TSKUIDStruct=QQ}56
v24@0:8[16C]16
{UUIDData<TSP::UUIDData>=""(?="_uuid"[16C]"_cfuuid"{?="byte0"C"byte1"C"byte2"C"byte3"C"byte4"C"byte5"C"byte6"C"byte7"C"byte8"C"byte9"C"byte10"C"byte11"C"byte12"C"byte13"C"byte14"C"byte15"C}""{?="_lower"Q"_upper"Q})}
@32@0:8r^{TSCEStringValue=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}b1b1b1}16@24
^{TSCEStringValue=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}b1b1b1}16@0:8
^{TSCEStringValue=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}b1b1b1}
@56@0:8r^v16r^v24Q32@40@48
v32@0:8^v16^v24
v40@0:8^v16^v24@32
@28@0:8I16^{_NSRange=QQ}20
B40@0:8{TSUCellCoord=ISBB}16@24^@32
{multimap<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>, std::less<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>>>={__tree<std::__value_type<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>, std::__map_value_compare<TSUCellCoord, std::__value_type<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>, std::less<TSUCellCoord>, true>, std::allocator<std::__value_type<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSUCellCoord, std::__value_type<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>, std::less<TSUCellCoord>, true>>=Q}}}16@0:8
[16@"TSTTableTileGroup"]
@40@0:8r^v16@24@32
v24@0:8C16I20
Q36@0:8I16^@20^@28
@48@0:8I16C20d24{TSKUIDStruct=QQ}32
v28@0:8I16Q20
[16@"TSTTableHeaderStorageBucket"]
@34@0:8Q16{TSUModelColumnIndex=S}24@26
@"TSUSparseArray"
@128@0:8{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@112^v120
B120@0:8{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16^v112
{TSCENumberValue="_vptr$TSCEAbstractValue"^^?"_decimal"{TSUDecimal="_decimal"{?="w"[2Q]}}"_format"{TSCEFormat="_tskFormat"@"TSKFormat""_formatType"I"_formatState"C"_durationFormat"{TSCEDurationFormat="_useAutomaticUnits"b1"_durationUnitSmallest"b6"_durationUnitLargest"b6"_durationStyle"b3}"_baseFormat"{TSCEBaseFormat="base"C"basePlaces"C"baseUseMinusSign"B}"_fractionFormat"{TSCEFractionFormat="fractionAccuracy"c}"_numberFormat"{TSCENumberFormat="decimalPlaces"C"negativeStyle"b3"showThousandsSeparator"b1"useAccountingStyle"b1"currencyCodeIndex"S}}"_baseUnit"S"_isUnitlessZero"B}
@"TSCERegexMatcher"
Q24@0:8r^{TSUCellCoord=ISBB}16
{TSUCellCoord=ISBB}24@0:8Q16
@32@0:8r^v16r^{TSKUIDStruct=QQ}24
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32@0:8@16r^{TSUModelCellCoord={TSUCellCoord=ISBB}}24
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}36@0:8@16r^{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32
{TSKUIDStruct=QQ}32@0:8@16r^{TSUModelCellCoord={TSUCellCoord=ISBB}}24
@48@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16Q32r^{TSKUIDStruct=QQ}40
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}28@0:8Q16B24
{TSKUIDStruct=QQ}24@0:8Q16
@40@0:8r^{TSKUIDStruct=QQ}16r^v24@32
c24@0:8^v16
{TSCEGridDimensions=II}16@0:8
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}32@0:8r^{TSCEGridCoord=II}16^{TSCEGridAccessContext=@^{TSCEFunctionArgSpec}i^{TSCEEvaluationContext}BBBBBCC}24
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}32@0:8Q16^{TSCEGridAccessContext=@^{TSCEFunctionArgSpec}i^{TSCEEvaluationContext}BBBBBCC}24
{TSCEGrid=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}24@0:8^{TSCEGridAccessContext=@^{TSCEFunctionArgSpec}i^{TSCEEvaluationContext}BBBBBCC}16
{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}32@0:8Q16^{TSCEGridAccessContext=@^{TSCEFunctionArgSpec}i^{TSCEEvaluationContext}BBBBBCC}24
{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}24@0:8^{TSCEGridAccessContext=@^{TSCEFunctionArgSpec}i^{TSCEEvaluationContext}BBBBBCC}16
B28@0:8i16^v20
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}40@0:8r^{TSCEGridCoord=II}16i24i28^{TSCEGridAccessContext=@^{TSCEFunctionArgSpec}i^{TSCEEvaluationContext}BBBBBCC}32
^{TSCEASTNodeArray=*QQB}40@0:8@16i24B28^v32
{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB}36@0:8@16i24^v28
@36@0:8@16i24^v28
B36@0:8@16i24^v28
@36@0:8@16i24@28
{TSCEReferenceValue=^^?@{TSUCellCoord=ISBB}{TSUPreserveFlags=C}BB}36@0:8@16i24^v28
v28@0:8B16Q20
@"<TSWPStyleProvider>"16@0:8
@"<TSWPStyleProvider>"24@0:8@"TSWPLayout"16
B24@0:8@"TSWPLayout"16
@28@0:8@16I24
d32@0:8Q16d24
d56@0:8Q16d24@32^d40^d48
{UIEdgeInsets=dddd}24@0:8@16
d56@0:8Q16d24@"<TSWPLayoutTarget>"32^d40^d48
{UIEdgeInsets=dddd}24@0:8@"<TSWPLayoutTarget>"16
@"TSWPPadding"16@0:8
@"TSWPPadding"24@0:8@"<TSWPLayoutTarget>"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}40@0:8@16{CGSize=dd}24
d24@0:8@16
{CGSize=dd}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48B56
Q24@0:8@"TSWPLayout"16
i24@0:8@"TSWPLayout"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"TSWPLayout"16
{CGRect={CGPoint=dd}{CGSize=dd}}40@0:8@"TSWPLayout"16{CGSize=dd}24
@"<NSFastEnumeration>"24@0:8@"TSWPLayout"16
#24@0:8@"TSWPLayout"16
v24@0:8@"TSWPLayout"16
@"NSSet"24@0:8@"TSWPLayout"16
d24@0:8@"TSWPLayout"16
q24@0:8@"TSWPLayout"16
Q24@0:8@"TSWPAttachment"16
{CGRect={CGPoint=dd}{CGSize=dd}}60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@"TSKSelectionPath"48B56
v64@0:8@16{_NSRange=QQ}24q40Q48@56
v64@0:8@"TSWPStorage"16{_NSRange=QQ}24q40Q48@"NSArray"56
{CGPoint=dd}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
d24@0:8o^d16
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}104@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48{CGAffineTransform=dddddd}56
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{?={?=II}{?=II}}16
@76@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16i32d36d44B52B56d60^@68
@76@0:8{?={?=II}{?=II}}16i32d36d44B52B56d60^@68
v112@0:8@16I24{CGAffineTransform=dddddd}28d76d84B92d96@?104
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@0:8@16
{CGSize=dd}24@0:8@16
{UIEdgeInsets=dddd}16@0:8
d32@0:8@16d24
{CGPoint=dd}24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{TSUCellCoord=ISBB}16^B24
{CGSize=dd}32@0:8{?={?=II}{?=II}}16
B32@0:8{?={?=II}{?=II}}16
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8@16{CGSize=dd}24^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}40
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"TSTLayoutSpaceBundle"
{?="tableNameHeight"d"scaleToFitParent"{CGSize="width"d"height"d}"scaleToFitEnclosingTextColumn"{CGSize="width"d"height"d}}
@"TSWPLayout"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
{CGSize="width"d"height"d}
v24@0:8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}20@0:8B16
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}20@0:8C16
{TSCEValue=""(?="DONT_USE_fakeTSCENumberValueStandIn"{?="_decimal"{?="w"[2Q]}"_formatFake"[24C]"_baseUnit"S"_isUnitlessZero"B}"_buff"[9Q])"_type"C}
{TSCEDateValue="_vptr$TSCEAbstractValue"^^?"mDate"@"NSDate""mFormat"{TSCEFormat="_tskFormat"@"TSKFormat""_formatType"I"_formatState"C"_durationFormat"{TSCEDurationFormat="_useAutomaticUnits"b1"_durationUnitSmallest"b6"_durationUnitLargest"b6"_durationStyle"b3}"_baseFormat"{TSCEBaseFormat="base"C"basePlaces"C"baseUseMinusSign"B}"_fractionFormat"{TSCEFractionFormat="fractionAccuracy"c}"_numberFormat"{TSCENumberFormat="decimalPlaces"C"negativeStyle"b3"showThousandsSeparator"b1"useAccountingStyle"b1"currencyCodeIndex"S}}}
v24@0:8r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16
v28@0:8r^v16S24
v24@0:8r^{TSCEInternalRangeReference={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}S}16
v40@0:8^v16@24d32
B24@0:8d16
B24@0:8r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16
@"TSCECellDirtier"
{TSCEInternalCellRefSet="_coordsForOwnerId"{unordered_map<unsigned short, TSCECellCoordSet, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, TSCECellCoordSet>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, TSCECellCoordSet>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}}
{vector<TSCEInternalRangeReference, std::allocator<TSCEInternalRangeReference>>="__begin_"^{TSCEInternalRangeReference}"__end_"^{TSCEInternalRangeReference}"__end_cap_"{__compressed_pair<TSCEInternalRangeReference *, std::allocator<TSCEInternalRangeReference>>="__value_"^{TSCEInternalRangeReference}}}
@40@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24@32
@32@0:8^{TSCEErrorValue=^^?@}16@24
^{TSCEErrorValue=^^?@}16@0:8
^{TSCEErrorValue=^^?@}
@36@0:8r^{TSUChromeColumnIndex=S}16r^{TSKUIDStruct=QQ}24B32
@"NSString"32@0:8r^v16@"TSCERefNamingContext"24
@"NSString"32@0:8@"TSCECellTractRef"16@"TSCERefNamingContext"24
@"NSString"40@0:8@"TSCECellTractRef"16@"TSCERefNamingContext"24@"TSCECoordMapper"32
@"NSString"36@0:8r^{TSUChromeColumnIndex=S}16r^{TSKUIDStruct=QQ}24B32
@"NSString"32@0:8@"TSCEWrappedRangeRef"16@"TSCERefNamingContext"24
@32@0:8r^{TSUCellCoord=ISBB}16@24
@44@0:8r^{TSUCellCoord=ISBB}16B24@28^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}36
@36@0:8S16@20@28
@44@0:8r^v16@24B32@36
@56@0:8@16B24B28^{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32@40@48
{TSCERecalculationState=C}33@0:8{TSUCellCoord=ISBB}16@24{TSCERecalculationState=C}32
{TSCERecalculationState=C}33@0:8r^v16@24{TSCERecalculationState=C}32
@"<TSCEReferenceResolving>"16@0:8
{TSCERecalculationState=C}33@0:8{TSUCellCoord=ISBB}16@"TSCECalculationEngine"24{TSCERecalculationState=C}32
{TSCERecalculationState=C}33@0:8r^v16@"TSCECalculationEngine"24{TSCERecalculationState=C}32
@40@0:8r^{TSKUIDStruct=QQ}16{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}24
v48@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16r^{TSKUIDStruct=QQ}32@40
v40@0:8{TSUCellCoord=ISBB}16r^{TSKUIDStruct=QQ}24@32
@24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
@"TSCETrackedReferenceStore"
v40@0:8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@24^v32
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24@0:8@16
^{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB}16@0:8
@36@0:8@16@24B32
v56@0:8@16{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24
v60@0:8@16{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24B56
@"TSCEBulkCellChangeMinion"
@"NSObject<OS_dispatch_queue>"
{TSUModelColumnIndex=S}18@0:8{TSUViewColumnIndex=S}16
{TSUModelRowIndex=I}20@0:8{TSUViewRowIndex=I}16
{TSUModelColumnIndex=S}18@0:8{TSUChromeColumnIndex=S}16
{TSUModelRowIndex=I}20@0:8{TSUChromeRowIndex=I}16
{TSUChromeColumnIndex=S}18@0:8{TSUModelColumnIndex=S}16
{TSUChromeRowIndex=I}20@0:8{TSUModelRowIndex=I}16
{TSUViewColumnIndex=S}18@0:8{TSUModelColumnIndex=S}16
{TSUViewRowIndex=I}20@0:8{TSUModelRowIndex=I}16
{TSUChromeColumnIndex=S}18@0:8{TSUViewColumnIndex=S}16
{TSUChromeRowIndex=I}20@0:8{TSUViewRowIndex=I}16
{TSUViewColumnIndex=S}18@0:8{TSUChromeColumnIndex=S}16
{TSUViewRowIndex=I}20@0:8{TSUChromeRowIndex=I}16
{TSUModelCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
{TSUModelCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUChromeCellCoord={TSUCellCoord=ISBB}}16
{TSUChromeCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
{TSUChromeCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
{TSUViewCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
{TSUViewCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUChromeCellCoord={TSUCellCoord=ISBB}}16
{RefTypeHolder<TSCECellRef, 0>={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}}24@0:8r^v16
{RefTypeHolder<TSCECellRef, 2>={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}}24@0:8r^v16
{RefTypeHolder<TSCECellRef, 1>={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}}24@0:8r^v16
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}24@0:8r^v16
{RefTypeHolder<TSCERangeRef, 1>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}24@0:8r^v16
r^{TSKUIDStruct=QQ}16@0:8
@"TSCECellTractRef"24@0:8@"TSCECellTractRef"16
@"TSKShuffleMapping"24@0:8@"TSKShuffleMapping"16
@48@0:8r^{TSKUIDStruct=QQ}16@24@32@40
@40@0:8r^{TSKUIDStruct=QQ}16@24@32
v24@0:8S16S20
{unordered_map<unsigned int, unsigned int, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned int, unsigned int>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, unsigned int>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, unsigned int>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>, std::allocator<std::__hash_value_type<unsigned int, unsigned int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, unsigned int>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, unsigned int>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>>="__value_"f}}}
{unordered_map<unsigned short, unsigned short, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, unsigned short>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, unsigned short>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, unsigned short>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, unsigned short>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, unsigned short>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, unsigned short>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, unsigned short>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}
v56@0:8@16i24@28I36{TSTSimpleRange=qQ}40
v36@0:8@16i24{TSUCellCoord=ISBB}28
v24@0:8{?=II}16
v56@0:8@16@?24@?32@?40@?48
{vector<TSTCellBorder *, std::allocator<TSTCellBorder *>>=^@^@{__compressed_pair<TSTCellBorder *__strong *, std::allocator<TSTCellBorder *>>=^@}}28@0:8{TSUModelRowIndex=I}16^v20
@"TSTStrokeLayer"
v40@0:8Q16{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24
v40@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16Q32
v44@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16B32@?36
v40@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16@?32
{vector<TSUModelCellRect, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}^{TSUModelCellRect}{__compressed_pair<TSUModelCellRect *, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}}}16@0:8
{vector<TSUModelCellRect, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}^{TSUModelCellRect}{__compressed_pair<TSUModelCellRect *, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}}}36@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16B32
{vector<TSUModelCellRect, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}^{TSUModelCellRect}{__compressed_pair<TSUModelCellRect *, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}}}32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{vector<TSUModelCellRect, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}^{TSUModelCellRect}{__compressed_pair<TSUModelCellRect *, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}}}24@0:8@16
B32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{unordered_map<unsigned long, TSUModelCellRect, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, TSUModelCellRect>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, TSUModelCellRect>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSUModelCellRect>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSUModelCellRect>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, TSUModelCellRect>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSUModelCellRect>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSUModelCellRect>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
{TSCECellRangeRTree="_rTree"{TSCECellRangeRTree_Int="m_root"^{Node}}}
{TSCEBitGrid="_tiles"{vector<TSCEBitGridTile *, std::allocator<TSCEBitGridTile *>>="__begin_"^^{TSCEBitGridTile}"__end_"^^{TSCEBitGridTile}"__end_cap_"{__compressed_pair<TSCEBitGridTile **, std::allocator<TSCEBitGridTile *>>="__value_"^^{TSCEBitGridTile}}}"_count"Q"_lastTileFoundAtIndex"Q"_bitsInColumn"{unordered_map<unsigned int, TSUIndexSet *, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, TSUIndexSet *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned int, TSUIndexSet *>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, TSUIndexSet *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, TSUIndexSet *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>, std::allocator<std::__hash_value_type<unsigned int, TSUIndexSet *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, TSUIndexSet *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, TSUIndexSet *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>>="__value_"f}}}}
v48@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16Q24{CGSize=dd}32
{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}}16@0:8
@"TSTCellUIDList"
{vector<unsigned long, std::allocator<unsigned long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::allocator<unsigned long>>="__value_"^Q}}
d24@0:8@"TSDDrawableInfo"16
{CGSize=dd}32@0:8@"TSPData"16@"<NSObject>"24
{?={?=II}{?=II}}24@0:8@16
{?={?=II}{?=II}}40@0:8{?={?=II}{?=II}}16@32
@28@0:8@16i24
v32@0:8{?={?=II}{?=II}}16
{?={?=II}{?=II}}16@0:8
{?={?=II}{?=II}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v64@0:8{CGAffineTransform=dddddd}16
{CGPoint=dd}32@0:8{CGPoint=dd}16
{?=II}36@0:8{CGPoint=dd}16B32
{?=II}32@0:8{CGPoint=dd}16
v40@0:8d16^d24^d32
d32@0:8d16d24
v40@0:8^{CGPoint=dd}16^{CGPoint=dd}24^d32
@60@0:8{?={?=II}{?=II}}16^{CGAffineTransform=dddddd}32d40B48d52
@32@0:8^{CGAffineTransform=dddddd}16d24
{CGRect={CGPoint=dd}{CGSize=dd}}40@0:8{?={?=II}{?=II}}16d32
v112@0:8@16^{CGContext=}24{CGPoint=dd}32{CGPoint=dd}48d64d72{CGRect={CGPoint=dd}{CGSize=dd}}80
B52@0:8I16{?={?=II}{?=II}}20B36i40^{CGContext=}44
v44@0:8{?={?=II}{?=II}}16B32^{CGContext=}36
@52@0:8{?={?=II}{?=II}}16S32@36^B44
@56@0:8{?={?=II}{?=II}}16I32@36B44^B48
I24@0:8d16
d24@0:8d16
i24@0:8{?=II}16
{CGPoint=dd}24@0:8{?=II}16
{?={CGPoint=dd}{CGPoint=dd}{CGPoint=dd}{CGPoint=dd}dddd}44@0:8{?={?=II}{?=II}}16i32^d36
v24@0:8^{?={CGPoint=dd}{CGPoint=dd}{CGPoint=dd}{CGPoint=dd}dddd}16
{?={CGPoint=dd}{CGPoint=dd}{CGPoint=dd}{CGPoint=dd}dddd}40@0:8{?={?=II}{?=II}}16^d32
{?={CGPoint=dd}{CGPoint=dd}{CGPoint=dd}{CGPoint=dd}dddd}32@0:8{?={?=II}{?=II}}16
{CGAffineTransform=dddddd}16@0:8
{_opaque_pthread_rwlock_t="__sig"q"__opaque"[192c]}
@"TSTLayoutSpaceBezierPathCache"
@"TSTCoordinateArray"
{CGPoint="x"d"y"d}
{?="topLeft"{?="column"I"row"I}"bottomRight"{?="column"I"row"I}}
{CGAffineTransform="a"d"b"d"c"d"d"d"tx"d"ty"d}
@28@0:8I16I20B24
@24@0:8^v16
B32@0:8d16@24
B40@0:8r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16d24@32
{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16@0:8
{TSCEInternalCellReference="coordinate"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"tableID"S"reserved"S}
{unordered_map<TSCEInternalCellReference, TSCECountedInternalCellRefSet, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, std::allocator<std::pair<const TSCEInternalCellReference, TSCECountedInternalCellRefSet>>>="__table_"{__hash_table<std::__hash_value_type<TSCEInternalCellReference, TSCECountedInternalCellRefSet>, std::__unordered_map_hasher<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, TSCECountedInternalCellRefSet>, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, true>, std::__unordered_map_equal<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, TSCECountedInternalCellRefSet>, std::equal_to<TSCEInternalCellReference>, std::hash<TSCEInternalCellReference>, true>, std::allocator<std::__hash_value_type<TSCEInternalCellReference, TSCECountedInternalCellRefSet>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, TSCECountedInternalCellRefSet>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, TSCECountedInternalCellRefSet>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, TSCECountedInternalCellRefSet>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, TSCECountedInternalCellRefSet>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, TSCECountedInternalCellRefSet>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, TSCECountedInternalCellRefSet>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, TSCECountedInternalCellRefSet>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, TSCECountedInternalCellRefSet>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, TSCECountedInternalCellRefSet>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, TSCECountedInternalCellRefSet>, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, TSCECountedInternalCellRefSet>, std::equal_to<TSCEInternalCellReference>, std::hash<TSCEInternalCellReference>, true>>="__value_"f}}}
v40@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24r^{TSKUIDStruct=QQ}32
v32@0:8@16r^{TSKUIDStruct=QQ}24
v32@0:8r^v16r^{TSKUIDStruct=QQ}24
v40@0:8@"TSTCell"16{TSUModelCellCoord={TSUCellCoord=ISBB}}24r^{TSKUIDStruct=QQ}32
v32@0:8@"TSTCellMap"16r^{TSKUIDStruct=QQ}24
v32@0:8@"TSTConcurrentCellMap"16r^{TSKUIDStruct=QQ}24
{vector<TSU::UUIDData<TSP::UUIDData>, std::allocator<TSU::UUIDData<TSP::UUIDData>>>=^v^v{__compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::allocator<TSU::UUIDData<TSP::UUIDData>>>=^v}}16@0:8
{unordered_set<TSKUIDStruct, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<TSKUIDStruct>>="__table_"{__hash_table<TSKUIDStruct, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<TSKUIDStruct>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *>, std::allocator<std::__hash_node<TSKUIDStruct, void *>>>="__value_"{__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::hash<TSKUIDStruct>>="__value_"Q}"__p3_"{__compressed_pair<float, std::equal_to<TSKUIDStruct>>="__value_"f}}}
@"TSTExpressionNode"
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}48@0:8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16^v24B32^B36B44
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}40@0:8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16^v24B32B36
@72@0:8@16@24r^{TSKUIDStruct=QQ}32r^{TSUCellCoord=ISBB}40^@48^B56B64B68
@48@0:8@16@24r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32^@40
r^{TSCEASTNodeArray=*QQB}16@0:8
@49@0:8r^{TSCEASTNodeArray=*QQB}16{TSCEFormulaTranslationFlags=C}24r^{TSKUIDStruct=QQ}25r^{TSKUIDStruct=QQ}33r^{TSKUIDStruct=QQ}41
@25@0:8r^{TSCEASTNodeArray=*QQB}16{TSCEFormulaTranslationFlags=C}24
@24@0:8r^{TSCEASTNodeArray=*QQB}16
@33@0:8{TSCEFormulaCreator=@?}16^{TSCEASTNodeArgInfo=i[3i]{TSKUIDStruct=QQ}{TSUCellCoord=ISBB}}24{TSCEFormulaTranslationFlags=C}32
@25@0:8{TSCEFormulaCreator=@?}16{TSCEFormulaTranslationFlags=C}24
@24@0:8{TSCEFormulaCreator=@?}16
@28@0:8r^v16B24
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}36@0:8^v16B24^B28
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24@0:8^v16
B48@0:8@16Q24^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}40
v48@0:8^v16@24r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32B40B44
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}24@0:8@16
@36@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16@24B32
@32@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16@24
@32@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16^B24
@48@0:8@16@24r^{TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}32^B40
@40@0:8@16@24r^{TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}32
@40@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32
@17@0:8{TSCEFormulaTranslationFlags=C}16
@32@0:8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16@?24
v40@0:8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16^B24@?32
@24@0:8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16
@32@0:8@16r^{TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}24
@28@0:8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16B24
@32@0:8@16r^{TSKUIDStruct=QQ}24
@48@0:8r^v16@24r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32^B40
@40@0:8r^v16@24^B32
@44@0:8r^v16r^v24r^v32B40
@32@0:8r^{TSKUIDStruct=QQ}16^B24
@44@0:8^v16B24^B28*36
@32@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24
@60@0:8^v16^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24^B32^B40^@48I56
@40@0:8^v16^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24^B32
@28@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16C24
@48@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24r^{TSKUIDStruct=QQ}32{TSUColumnRowOffset=ii}40
@24@0:8{TSUColumnRowOffset=ii}16
@32@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24
C32@0:8^v16@24
{TSCEFormulaTranslationFlags=C}16@0:8
{TSCEFormulaTranslationFlags="_flags"C}
@52@0:8@16@24I32Q36Q44
{TSTCSENodeData=QQ}24@0:8@16
@60@0:8@16@24{TSUCellCoord=ISBB}32B40^v44@52
v40@0:8^{TSCEASTNodeArray=*QQB}16{TSUCellCoord=ISBB}24^v32
@84@0:8q16{_NSRange=QQ}24q40q48{_NSRange=QQ}56B72Q76
@96@0:8q16@24B32q36q44{_NSRange=QQ}52B68Q72Q80Q88
@112@0:8q16{_NSRange=QQ}24B40q44q52{_NSRange=QQ}60B76Q80Q88Q96Q104
@92@0:8q16{_NSRange=QQ}24q40q48{_NSRange=QQ}56B72Q76Q84
B40@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24
{TSTCellRegionGathererMap="_cellRangeIndex"Q"_rowRange"{_NSRange="location"Q"length"Q}"_cellRanges"{unordered_map<unsigned long, TSUCellRect, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, TSUCellRect>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, TSUCellRect>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSUCellRect>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSUCellRect>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, TSUCellRect>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSUCellRect>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSUCellRect>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}"_encodedJoinCoordToCandidateIndexMap"{unordered_map<TSTCellRegionGathererKey, unsigned long, std::hash<TSTCellRegionGathererKey>, std::equal_to<TSTCellRegionGathererKey>, std::allocator<std::pair<const TSTCellRegionGathererKey, unsigned long>>>="__table_"{__hash_table<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, std::__unordered_map_hasher<TSTCellRegionGathererKey, std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, std::hash<TSTCellRegionGathererKey>, std::equal_to<TSTCellRegionGathererKey>, true>, std::__unordered_map_equal<TSTCellRegionGathererKey, std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, std::equal_to<TSTCellRegionGathererKey>, std::hash<TSTCellRegionGathererKey>, true>, std::allocator<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSTCellRegionGathererKey, std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, std::hash<TSTCellRegionGathererKey>, std::equal_to<TSTCellRegionGathererKey>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSTCellRegionGathererKey, std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, std::equal_to<TSTCellRegionGathererKey>, std::hash<TSTCellRegionGathererKey>, true>>="__value_"f}}}}
{unordered_map<TSUCellCoord, TSUCellRect, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSUCellRect>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSUCellRect>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellRect>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellRect>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSUCellRect>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellRect>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellRect>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
^{TSCEASTNodeArray=*QQB}24@0:8Q16
^v24@0:8Q16
^{TSCERegionNode=Q^{TSCERegionNode}^v}
{vector<TSCEASTNodeArray *, std::allocator<TSCEASTNodeArray *>>="__begin_"^^{TSCEASTNodeArray}"__end_"^^{TSCEASTNodeArray}"__end_cap_"{__compressed_pair<TSCEASTNodeArray **, std::allocator<TSCEASTNodeArray *>>="__value_"^^{TSCEASTNodeArray}}}
{vector<TSCECellRef, std::allocator<TSCECellRef>>=^{TSCECellRef}^{TSCECellRef}{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>=^{TSCECellRef}}}32@0:8r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16r^{TSKUIDStruct=QQ}24
{vector<TSCECellRef, std::allocator<TSCECellRef>>=^{TSCECellRef}^{TSCECellRef}{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>=^{TSCECellRef}}}24@0:8@16
@"TSTAggNode"
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGContext=}48
@"TSTTableStyleNetwork"
v28@0:8B16@20
v36@0:8B16{_NSRange=QQ}20
Q32@0:8{_NSRange=QQ}16
B32@0:8{_NSRange=QQ}16
Q32@0:8Q16Q24
v40@0:8{_NSRange=QQ}16Q32
@32@0:8r^{TSKUIDStruct=QQ}16r^{TSUPreserveFlags=C}24
@32@0:8@16r^{TSUCellCoord=ISBB}24
@32@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16r^{TSUCellCoord=ISBB}24
v20@0:8s16
{TSCERelativeCellCoordinate=isBB}16@0:8
{?={TSCERelativeCellCoordinate=isBB}{TSCERelativeCellCoordinate=isBB}}24@0:8r^{TSUCellCoord=ISBB}16
v40@0:8@16r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}24r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}32
@32@0:8r^{TSUCellCoord=ISBB}16^B24
@24@0:8r^{TSUCellCoord=ISBB}16
@48@0:8@16Q24@32Q40
@80@0:8@16Q24@32@?40@?48@?56@?64@?72
@48@0:8@16Q24@32@?40
Q42@0:8C16C20Q24Q32{TSUViewColumnIndex=S}40
Q28@0:8C16C20B24
@40@0:8@16@24Q32
@32@0:8^{_NSZone=}16@24
@36@0:8Q16@24B32
@52@0:8@16@24d32B40Q44
{vector<TSTCellStyle *, std::allocator<TSTCellStyle *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSTCellStyle *__strong *, std::allocator<TSTCellStyle *>>="__value_"^@}}
{vector<TSWPParagraphStyle *, std::allocator<TSWPParagraphStyle *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSWPParagraphStyle *__strong *, std::allocator<TSWPParagraphStyle *>>="__value_"^@}}
@96@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32r^{TSKUIDStruct=QQ}40r^{TSKUIDStruct=QQ}48r^{TSKUIDStruct=QQ}56r^{TSKUIDStruct=QQ}64r^{TSKUIDStruct=QQ}72r^{TSKUIDStruct=QQ}80r^{TSKUIDStruct=QQ}88
{TSKUIDStructMap="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
Q24@0:8i16i20
v40@0:8Q16^i24^i32
v36@0:8@16@24B32
v56@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}32r^{TSKUIDStruct=QQ}48
i40@0:8{TSKUIDStruct=QQ}16@32
i68@0:8{TSKUIDStruct=QQ}16@32@40{TSKUIDStruct=QQ}48S64
@24@0:8[16C]16
^{TSCETableResolver=^^?}24@0:8r^{TSKUIDStruct=QQ}16
^{TSCETableResolver=^^?}20@0:8S16
^{TSCETableResolver=^^?}24@0:8@16
{TSKUIDStruct=QQ}40@0:8{TSKUIDStruct=QQ}16I32B36
v48@0:8@16{TSUCellCoord=ISBB}24{TSKUIDStruct=QQ}32
{TSCERecalculationState=C}41@0:8^v16@24r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32{TSCERecalculationState=C}40
v32@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16^B24
{vector<TSUCellCoord, std::allocator<TSUCellCoord>>=^{TSUCellCoord}^{TSUCellCoord}{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>=^{TSUCellCoord}}}32@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16r^{TSKUIDStruct=QQ}24
{vector<TSUCellCoord, std::allocator<TSUCellCoord>>=^{TSUCellCoord}^{TSUCellCoord}{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>=^{TSUCellCoord}}}36@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16r^{TSKUIDStruct=QQ}24B32
{vector<TSUCellCoord, std::allocator<TSUCellCoord>>=^{TSUCellCoord}^{TSUCellCoord}{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>=^{TSUCellCoord}}}32@0:8r^{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16r^{TSKUIDStruct=QQ}24
{TSCECellCoordSet={map<unsigned short, TSUIndexSet, std::less<unsigned short>, std::allocator<std::pair<const unsigned short, TSUIndexSet>>>={__tree<std::__value_type<unsigned short, TSUIndexSet>, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>, std::allocator<std::__value_type<unsigned short, TSUIndexSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned short, TSUIndexSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>>=Q}}}}24@0:8r^{TSKUIDStruct=QQ}16
B24@0:8r^{TSCEAnyRef=S{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}{TSKUIDStruct=QQ}B@}16
{TSKUIDStruct=QQ}24@0:8r^{TSKUIDStruct=QQ}16
v36@0:8{TSKUIDStruct=QQ}16B32
v56@0:8{_NSRange=QQ}16r^{TSKUIDStruct=QQ}32{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}40
v72@0:8{_NSRange=QQ}16r^{TSKUIDStruct=QQ}32{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}40{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}56
v72@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16r^{TSKUIDStruct=QQ}32{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}40{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}56
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}32@0:8@16^v24
{TSCEInternalCellRefSet={unordered_map<unsigned short, TSCECellCoordSet, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, TSCECellCoordSet>>>={__hash_table<std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, TSCECellCoordSet>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>=f}}}}16@0:8
B24@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16
{TSCEReferenceSet=^^?^{TSCEDependencyTracker}{unordered_map<TSKUIDStruct, std::unordered_set<TSUCellCoord>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::unordered_set<TSUCellCoord>>>>={__hash_table<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>=f}}}{map<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>>>={__tree<std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>, std::less<TSKUIDStruct>, true>>=Q}}}^v^v^v^v^v@^v}24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
{TSCECellRefSet={map<TSKUIDStruct, TSCECellCoordSet, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECellCoordSet>>>={__tree<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSCECellCoordSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>>=Q}}}}24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
{TSCEReferenceSet=^^?^{TSCEDependencyTracker}{unordered_map<TSKUIDStruct, std::unordered_set<TSUCellCoord>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::unordered_set<TSUCellCoord>>>>={__hash_table<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>=f}}}{map<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>>>={__tree<std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>, std::less<TSKUIDStruct>, true>>=Q}}}^v^v^v^v^v@^v}16@0:8
C24@0:8@16
{vector<TSCECellRef, std::allocator<TSCECellRef>>=^{TSCECellRef}^{TSCECellRef}{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>=^{TSCECellRef}}}32@0:8@16r^{TSKUIDStruct=QQ}24
{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}44@0:8@16r^{TSKUIDStruct=QQ}24C32^@36
@44@0:8@16r^{TSKUIDStruct=QQ}24C32^@36
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}24@0:8@16
@28@0:8C16r^{TSKUIDStruct=QQ}20
@36@0:8C16r^v20r^{TSKUIDStruct=QQ}28
C24@0:8C16C20
{vector<TSCEGroupingColumnChange, std::allocator<TSCEGroupingColumnChange>>="__begin_"^{TSCEGroupingColumnChange}"__end_"^{TSCEGroupingColumnChange}"__end_cap_"{__compressed_pair<TSCEGroupingColumnChange *, std::allocator<TSCEGroupingColumnChange>>="__value_"^{TSCEGroupingColumnChange}}}
@"TSTTableControlCellSelection"
@"TSTTableDataListItemCache"
{unordered_set<TSKUIDStruct, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<TSKUIDStruct>>={__hash_table<TSKUIDStruct, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<TSKUIDStruct>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *>, std::allocator<std::__hash_node<TSKUIDStruct, void *>>>={__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSKUIDStruct>>=Q}{__compressed_pair<float, std::equal_to<TSKUIDStruct>>=f}}}16@0:8
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32@0:8r^{TSKUIDStruct=QQ}16@24
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32@0:8@16@24
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
B48@0:8@16@24r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32^@40
@40@0:8@16@24r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32
@"TSCETableTransposedInfo"
@"TSCEFormulaRewriteInfo_RowColumnInfo"
@"TSCEFormulaRewrite_RegionMovedInfo"
@"TSCEFormulaRewrite_RegionMergedInfo"
@"TSCEFormulaRewrite_MergeOriginMovedInfo"
@"TSKShuffleMapping"
@"TSCERewriteTableUIDInfo"
@"TSCERewriteGroupNodeUIDInfo"
@"TSCEGroupByChange"
@"TSCEFormulasForUndo"
{unordered_map<TSCECellRef, TSTConditionalStyleSet *, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, std::allocator<std::pair<const TSCECellRef, TSTConditionalStyleSet *>>>="__table_"{__hash_table<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>, std::allocator<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>>="__value_"f}}}
{unordered_map<TSCECellRef, TSUCellRect, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, std::allocator<std::pair<const TSCECellRef, TSUCellRect>>>="__table_"{__hash_table<std::__hash_value_type<TSCECellRef, TSUCellRect>, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSUCellRect>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSUCellRect>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>, std::allocator<std::__hash_value_type<TSCECellRef, TSUCellRect>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSUCellRect>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSUCellRect>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>>="__value_"f}}}
{unordered_map<TSKUIDStruct, TSCECoordMapper *, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECoordMapper *>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
@"TSCEFormulaRewriteSpec"
@44@0:8I16@20@28@36
@"TSDStroke"
@24@0:8^{TSCEParser=@^{TSCELexer}^{TSCEASTNodeArray}^v@{TSKUIDStruct=QQ}{TSUCellCoord=ISBB}BB@}16
v24@0:8^{TSCEASTNodeArray=*QQB}16
@44@0:8^{TSCEASTNodeArray=*QQB}16@24B32^{TSCEParser=@^{TSCELexer}^{TSCEASTNodeArray}^v@{TSKUIDStruct=QQ}{TSUCellCoord=ISBB}BB@}36
^{TSCEASTNodeArray=*QQB}24@0:8^{TSCEParser=@^{TSCELexer}^{TSCEASTNodeArray}^v@{TSKUIDStruct=QQ}{TSUCellCoord=ISBB}BB@}16
^{TSCEASTNodeArray=*QQB}40@0:8^{TSCEParser=@^{TSCELexer}^{TSCEASTNodeArray}^v@{TSKUIDStruct=QQ}{TSUCellCoord=ISBB}BB@}16@24@32
@"TSCETablesByNameDistributor"
@"<TSTCellIteratorData>"
v32@0:8^{TSCEASTNodeArray=*QQB}16{TSUCellCoord=ISBB}24
v52@0:8@16C24@28@36@44
v48@0:8@16Q24@32^v40
v36@0:8@16@24I32
B24@0:8^v16
@32@0:8^v16^@24
@48@0:8@16@24^v32^@40
@40@0:8@16^v24^@32
@"TSTWPTokenAttachment"
i36@0:8Q16i24@28
i32@0:8Q16@24
Q44@0:8Q16Q24i32@36
@48@0:8@16@24{TSUModelCellCoord={TSUCellCoord=ISBB}}32@40
@60@0:8@16@24{TSUViewCellCoord={TSUCellCoord=ISBB}}32@40r^{TSKUIDStruct=QQ}48B56
@60@0:8@16@24{TSUModelCellCoord={TSUCellCoord=ISBB}}32@40r^{TSKUIDStruct=QQ}48B56
@56@0:8@16@24{TSUViewCellCoord={TSUCellCoord=ISBB}}32@40r^{TSKUIDStruct=QQ}48
@56@0:8@16@24{TSUModelCellCoord={TSUCellCoord=ISBB}}32@40r^{TSKUIDStruct=QQ}48
@40@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24@32
{TSUModelCellCoord="_coord"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}}
v32@0:8I16I20@?24
@24@0:8B16B20
@"TSTPopUpMenuModel"
v32@0:8d16@24
{TSCEFunctionArgSpec=ciCi{unordered_set<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={__hash_table<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>, std::allocator<std::__hash_node<TSCEArgumentType, void *>>>={__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSCEArgumentType>>=Q}{__compressed_pair<float, std::equal_to<TSCEArgumentType>>=f}}}{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}s@ddsBBBBBBB}28@0:8c16i20C24
{TSCEFunctionArgSpec=ciCi{unordered_set<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={__hash_table<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>, std::allocator<std::__hash_node<TSCEArgumentType, void *>>>={__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSCEArgumentType>>=Q}{__compressed_pair<float, std::equal_to<TSCEArgumentType>>=f}}}{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}s@ddsBBBBBBB}32@0:8c16i20C24i28
{TSCEFunctionArgSpec=ciCi{unordered_set<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={__hash_table<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>, std::allocator<std::__hash_node<TSCEArgumentType, void *>>>={__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSCEArgumentType>>=Q}{__compressed_pair<float, std::equal_to<TSCEArgumentType>>=f}}}{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}s@ddsBBBBBBB}44@0:8c16i20C24r^v28B36B40
{TSCEFunctionArgSpec=ciCi{unordered_set<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={__hash_table<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>, std::allocator<std::__hash_node<TSCEArgumentType, void *>>>={__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSCEArgumentType>>=Q}{__compressed_pair<float, std::equal_to<TSCEArgumentType>>=f}}}{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}s@ddsBBBBBBB}40@0:8c16i20C24r^v28s36
{TSCEFunctionArgSpec=ciCi{unordered_set<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={__hash_table<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>, std::allocator<std::__hash_node<TSCEArgumentType, void *>>>={__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSCEArgumentType>>=Q}{__compressed_pair<float, std::equal_to<TSCEArgumentType>>=f}}}{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}s@ddsBBBBBBB}44@0:8c16i20C24i28r^v32B40
{TSCEFunctionArgSpec=ciCi{unordered_set<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={__hash_table<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>, std::allocator<std::__hash_node<TSCEArgumentType, void *>>>={__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSCEArgumentType>>=Q}{__compressed_pair<float, std::equal_to<TSCEArgumentType>>=f}}}{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}s@ddsBBBBBBB}68@0:8c16i20C24d28B36d40B48r^v52B60B64
{TSCEFunctionArgSpec=ciCi{unordered_set<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={__hash_table<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>, std::allocator<std::__hash_node<TSCEArgumentType, void *>>>={__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSCEArgumentType>>=Q}{__compressed_pair<float, std::equal_to<TSCEArgumentType>>=f}}}{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}s@ddsBBBBBBB}96@0:8c16i20C24i28d32B40d44B52B56r^v60B68B72r^v76s84B88B92
{TSCEFunctionArgSpec="_argumentType"c"_accessorMode"i"_rangeContext"C"_argumentContext"i"_disallowedTypes"{unordered_set<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>="__table_"{__hash_table<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>, std::allocator<std::__hash_node<TSCEArgumentType, void *>>>="__value_"{__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::hash<TSCEArgumentType>>="__value_"Q}"__p3_"{__compressed_pair<float, std::equal_to<TSCEArgumentType>>="__value_"f}}}"_modeValues"{vector<TSCEValue, std::allocator<TSCEValue>>="__begin_"^{TSCEValue}"__end_"^{TSCEValue}"__end_cap_"{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>="__value_"^{TSCEValue}}}"_defaultModeIndex"s"_functionSpec"@"TSCEFunctionSpec""_minValue"d"_maxValue"d"_index"s"_minInclusive"B"_maxInclusive"B"_disallowDuration"B"_disallowCurrency"B"_isInteger"B"_forceArrayMode"B"_referenceForGeometryOnly"B}
@52@0:8@16S24@28Q36Q44
{_NSRange=QQ}24@0:8@16
{_NSRange=QQ}32@0:8@16q24
{_NSRange=QQ}40@0:8@16q24o^q32
{_NSRange=QQ}48@0:8@16Q24{_NSRange=QQ}32
@48@0:8@16Q24{_NSRange=QQ}32
Q48@0:8@16Q24{_NSRange=QQ}32
@56@0:8@16Q24{_NSRange=QQ}32@48
@"NSRegularExpression"
@56@0:8@16r^{TSUDecimal={?=[2Q]}}24@32Q40Q48
@56@0:8@16@24@32Q40Q48
v32@0:8r^{TSUDecimal={?=[2Q]}}16@24
{TSUDecimal={?=[2Q]}}16@0:8
{TSUDecimal="_decimal"{?="w"[2Q]}}
B24@0:8I16I20
B24@0:8C16I20
@32@0:8^{?={?=Cb8b16b16b16b16b16}[0C]}16@24
v32@0:8^{?={?=Cb8b16b16b16b16b16}[0C]}16@24
v36@0:8^{?={?=Cb8b16b16b16b16b16}[0C]}16@24B32
v40@0:8@16B24B28B32B36
v24@0:8S16B20
v28@0:8B16I20B24
@28@0:8I16B20B24
@"NSObject"
@"TSTCellBorder"
@"TSKFormat"
@"TSDCommentStorage"
@"TSTImportWarningSet"
@"TSTCellSpec"
@40@0:8@16@24r^v32
@28@0:8^{_NSZone=}16B24
v32@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24
v40@0:8r^v16r^v24r^v32
{TSCECellCoordSet={map<unsigned short, TSUIndexSet, std::less<unsigned short>, std::allocator<std::pair<const unsigned short, TSUIndexSet>>>={__tree<std::__value_type<unsigned short, TSUIndexSet>, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>, std::allocator<std::__value_type<unsigned short, TSUIndexSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned short, TSUIndexSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>>=Q}}}}32@0:8@16@?24
{unordered_map<TSUCellCoord, TSTCell *, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSTCell *>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSTCell *>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTCell *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTCell *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSTCell *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTCell *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTCell *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
{unordered_map<TSKUIDStructCoord, TSTCell *, std::hash<TSKUIDStructCoord>, std::equal_to<TSKUIDStructCoord>, std::allocator<std::pair<const TSKUIDStructCoord, TSTCell *>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, std::__unordered_map_hasher<TSKUIDStructCoord, std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, std::hash<TSKUIDStructCoord>, std::equal_to<TSKUIDStructCoord>, true>, std::__unordered_map_equal<TSKUIDStructCoord, std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, std::equal_to<TSKUIDStructCoord>, std::hash<TSKUIDStructCoord>, true>, std::allocator<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStructCoord, std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, std::hash<TSKUIDStructCoord>, std::equal_to<TSKUIDStructCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStructCoord, std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, std::equal_to<TSKUIDStructCoord>, std::hash<TSKUIDStructCoord>, true>>="__value_"f}}}
{pair<TSTCell *, TSKUIDStructCoord>=@{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}}16@0:8
r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@0:8
@"TSTCellMap"
@"TSTCellUIDIterator"
d36@0:8I16{TSTSimpleRange=qQ}20
v36@0:8I16^d20^d28
v36@0:8I16@20@28
{_opaque_pthread_rwlock_t=q[192c]}16@0:8
v216@0:8{_opaque_pthread_rwlock_t=q[192c]}16
{vector<TSTStrokeWidthCacheEntry, std::allocator<TSTStrokeWidthCacheEntry>>="__begin_"^{TSTStrokeWidthCacheEntry}"__end_"^{TSTStrokeWidthCacheEntry}"__end_cap_"{__compressed_pair<TSTStrokeWidthCacheEntry *, std::allocator<TSTStrokeWidthCacheEntry>>="__value_"^{TSTStrokeWidthCacheEntry}}}
@40@0:8@16r^v24r^v32
v28@0:8r^v16I24
v28@0:8r^v16B24
{unordered_map<TSKUIDStruct, unsigned short, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, unsigned short>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, unsigned short>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned short>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned short>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, unsigned short>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned short>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned short>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSKUIDStruct, unsigned int, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, unsigned int>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, unsigned int>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned int>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned int>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, unsigned int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned int>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned int>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
@44@0:8@16S24@28@36
{TSKUIDStruct=QQ}36@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32
@"<TSCEFormulaReplacing>"
@40@0:8{TSUCellCoord=ISBB}16@24@32
@"TSTAccumulator"
{TSCECellCoordSet="_rowsPerColumn"{map<unsigned short, TSUIndexSet, std::less<unsigned short>, std::allocator<std::pair<const unsigned short, TSUIndexSet>>>="__tree_"{__tree<std::__value_type<unsigned short, TSUIndexSet>, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>, std::allocator<std::__value_type<unsigned short, TSUIndexSet>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned short, TSUIndexSet>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>>="__value_"Q}}}}
@"TSTAggregator"
@28@0:8@16S24
s16@0:8
@"TSTFunctionEndNode"
B24@0:8q16
@"NSMutableSet"
@"TSCERemoteDataValueMap"
@"TSUIntToIntDictionary"
C24@0:8Q16
v40@0:8{TSKUIDStruct=QQ}16@32
v24@0:8@"TSTGroupNode"16
v40@0:8{TSKUIDStruct=QQ}16@"TSTGroupNode"32
v32@0:8r^v16r^v24
i40@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@32
i26@0:8{TSUModelColumnIndex=S}16@18
v32@0:8C16r^{TSKUIDStruct=QQ}20C28
@36@0:8C16{TSUModelCellCoord={TSUCellCoord=ISBB}}20^B28
C32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16^B24
v28@0:8Q16C24
Q20@0:8C16
@"TSTSummaryCellVendor"
@"TSTCategoryAggregateFormulaOwner"
@"TSTTableGroupSortOrderUID"
{vector<double, std::allocator<double>>="__begin_"^d"__end_"^d"__end_cap_"{__compressed_pair<double *, std::allocator<double>>="__value_"^d}}
{vector<int, std::allocator<int>>="__begin_"^i"__end_"^i"__end_cap_"{__compressed_pair<int *, std::allocator<int>>="__value_"^i}}
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24@0:8r^{TSKUIDStruct=QQ}16
@60@0:8@16{TSTSimpleRange=qQ}24i40@44@52
{TSTSimpleRange=qQ}16@0:8
v32@0:8{TSTSimpleRange=qQ}16
@"<TSTStrokeLayerStrokeAndRange>"
{TSTSimpleRange="origin"q"length"Q}
@48@0:8q16@24^@32@40
{?=d{TSTSimpleRange=qQ}BQ}24@0:8q16
{?=d{TSTSimpleRange=qQ}BQ}56@0:8{?=d{TSTSimpleRange=qQ}BQ}16
v44@0:8@16{TSTSimpleRange=qQ}24i40
@40@0:8I16@20@28B36
{_NSRange=QQ}28@0:8{TSUCellCoord=ISBB}16B24
@112@0:8{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16
@32@0:8r^{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}16@24
@"NSLock"
@24@0:8d16
@28@0:8d16C24
{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB}16@0:8
B40@0:8q16q24q32
B32@0:8r^{TSUDecimal={?=[2Q]}}16@24
@24@0:8r^{TSCERelativeCellRef={TSCERelativeCellCoordinate=isBB}{TSKUIDStruct=QQ}b1b1b1b1}16
r^{TSCERelativeCellRef={TSCERelativeCellCoordinate=isBB}{TSKUIDStruct=QQ}b1b1b1b1}16@0:8
v24@0:8r^{TSCERelativeCellRef={TSCERelativeCellCoordinate=isBB}{TSKUIDStruct=QQ}b1b1b1b1}16
@24@0:8r^{TSCECrossTableReference={TSKUIDStruct=QQ}{TSCERelativeCellCoordinate=isBB}}16
{TSCECrossTableReference={TSKUIDStruct=QQ}{TSCERelativeCellCoordinate=isBB}}16@0:8
@32@0:8r^v16r^{TSUPreserveFlags=C}24
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
v32@0:8r^v16r^{TSUPreserveFlags=C}24
v32@0:8r^v16B24B28
B32@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24
@56@0:8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16q24B32B36^{TSCEUidCellRef={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}40@?48
{TSCEFormulaCreator=@?}16@0:8
{TSCEFormulaCreator=@?}24@0:8B16B20
v24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
@"TSCECategoryRef"
@"TSCEViewTractRef"
{RefTypeHolder<TSCECellRef, 0>="_ref"{TSCECellRef="coordinate"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"_tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}}}
@"TSTFormulaPredArgData"
@"TSCEUndoTractList"
{TSCERelativeCellRef="relativeCoord"{TSCERelativeCellCoordinate="row"i"column"s"_preserveRow"B"_preserveColumn"B}"tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}"preserveColumn"b1"preserveRow"b1"isSpanningColumn"b1"isSpanningRow"b1}
@40@0:8{TSUCellCoord=ISBB}16{TSKUIDStruct=QQ}24
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16@0:8
{TSCECellRef="coordinate"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"_tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}}
@48@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16{TSKUIDStruct=QQ}32
@40@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16@32
@40@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32
{TSCERangeRef="range"{TSCERangeCoordinate="_topLeft"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"_bottomRight"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}}"_tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}}
@44@0:8@16B24Q28Q36
@32@0:8r^v16r^v24
v36@0:8@16B24@28
I24@0:8r^{TSKUIDStruct=QQ}16
S24@0:8r^{TSKUIDStruct=QQ}16
{unordered_map<unsigned int, TSKUIDStruct, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, TSKUIDStruct>>>="__table_"{__hash_table<std::__hash_value_type<unsigned int, TSKUIDStruct>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, TSKUIDStruct>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, TSKUIDStruct>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>, std::allocator<std::__hash_value_type<unsigned int, TSKUIDStruct>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, TSKUIDStruct>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, TSKUIDStruct>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>>="__value_"f}}}
@44@0:8{_NSRange=QQ}16r^v32I40
@36@0:8r^{TSKUIDStruct=QQ}16r^v24B32
@60@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32r^v40r^v48B56
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}52@0:8{_NSRange=QQ}16@32B40@44
v44@0:8@16@24B32@36
I24@0:8I16B20
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}28@0:8I16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}20
{vector<TSCERangeCoordinate, std::allocator<TSCERangeCoordinate>>=^{TSCERangeCoordinate}^{TSCERangeCoordinate}{__compressed_pair<TSCERangeCoordinate *, std::allocator<TSCERangeCoordinate>>=^{TSCERangeCoordinate}}}16@0:8
@"TSCEFormulaRewrite_Uids"
{TSCERangeCoordinate="_topLeft"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"_bottomRight"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}}
@56@0:8@16@24I32I36Q40Q48
{TSCEGridDimensions="width"I"height"I}
B40@0:8r^{TSKUIDStruct=QQ}16@24@32
B32@0:8r^{TSKUIDStruct=QQ}16@24
@64@0:8@16{TSUCellCoord=ISBB}24{CGRect={CGPoint=dd}{CGSize=dd}}32
@"TSWPPadding"
{vector<TSKUIDStructTract, std::allocator<TSKUIDStructTract>>=^{TSKUIDStructTract}^{TSKUIDStructTract}{__compressed_pair<TSKUIDStructTract *, std::allocator<TSKUIDStructTract>>=^{TSKUIDStructTract}}}24@0:8Q16
{vector<TSKUIDStructTract, std::allocator<TSKUIDStructTract>>="__begin_"^{TSKUIDStructTract}"__end_"^{TSKUIDStructTract}"__end_cap_"{__compressed_pair<TSKUIDStructTract *, std::allocator<TSKUIDStructTract>>="__value_"^{TSKUIDStructTract}}}
@44@0:8r^v16C24@28r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}36
@52@0:8r^v16{TSKUIDStruct=QQ}24C40@44
{RefTypeHolder<TSCERangeRef, 1>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}32@0:8r^v16@24
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}36@0:8r^v16@24C32
B32@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16@24
C32@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16@24
@68@0:8@16@24@32@40r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}48@56B64
@60@0:8@16@24@32r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}40@48B56
@64@0:8@16@24r^v32C40r^v44@52B60
@64@0:8@16@24r^v32C40r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}44@52B60
@56@0:8@16@24@32r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}40@48
@28@0:8@16C24
v44@0:8^{TSCEASTNodeArray=*QQB}16{TSUCellCoord=ISBB}24C32{TSUCellCoord=ISBB}36
v40@0:8{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
@"TSTUIDRectRef"
@"TSTReferenceColorHelper"
^{CGPath=}24@0:8d16
v76@0:8d16^{CGContext=}24{CGRect={CGPoint=dd}{CGSize=dd}}32B64^{CGColor=}68
v80@0:8d16^{CGContext=}24{CGRect={CGPoint=dd}{CGSize=dd}}32B64^{CGColor=}68B76
@"<TSKPencilAnnotationStorage>"16@0:8
@"TSDPencilAnnotationStorage"
v32@0:8r^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16r^{TSUCellCoord=ISBB}24
B24@0:8r^{TSUCellCoord=ISBB}16
B32@0:8r^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16r^{TSUCellCoord=ISBB}24
v32@0:8r^{TSUCellCoord=ISBB}16@?24
{map<TSUCellCoord, std::set<TSUCellRect>, std::less<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, std::set<TSUCellRect>>>>="__tree_"{__tree<std::__value_type<TSUCellCoord, std::set<TSUCellRect>>, std::__map_value_compare<TSUCellCoord, std::__value_type<TSUCellCoord, std::set<TSUCellRect>>, std::less<TSUCellCoord>, true>, std::allocator<std::__value_type<TSUCellCoord, std::set<TSUCellRect>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSUCellCoord, std::set<TSUCellRect>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<TSUCellCoord, std::__value_type<TSUCellCoord, std::set<TSUCellRect>>, std::less<TSUCellCoord>, true>>="__value_"Q}}}
@56@0:8@16d24@32Q40Q48
@"TSKDurationFormat"
@20@0:8c16
@28@0:8s16@20
@32@0:8s16s20@24
^v24@0:8S16i20
@48@0:8@16^v24Q32Q40
q20@0:8i16
@28@0:8d16i24
@64@0:8q16q24q32q40q48q56
@"<TSTTableStrokeProviding>"
@"<TSTTableHiddenRowColumnProviding><TSTTableInternalGeometryProviding>"
@28@0:8r^v16c24
@32@0:8r^v16c24B28
@40@0:8r^v16c24B28r^{TSCEGridDimensions=II}32
@"TSCEValueGrid"
v28@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16C24
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}20@0:8C16
{unordered_map<TSCECategoryLevel, TSKUIDStructCoord, std::hash<TSCECategoryLevel>, std::equal_to<TSCECategoryLevel>, std::allocator<std::pair<const TSCECategoryLevel, TSKUIDStructCoord>>>="__table_"{__hash_table<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, std::__unordered_map_hasher<TSCECategoryLevel, std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, std::hash<TSCECategoryLevel>, std::equal_to<TSCECategoryLevel>, true>, std::__unordered_map_equal<TSCECategoryLevel, std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, std::equal_to<TSCECategoryLevel>, std::hash<TSCECategoryLevel>, true>, std::allocator<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCECategoryLevel, std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, std::hash<TSCECategoryLevel>, std::equal_to<TSCECategoryLevel>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCECategoryLevel, std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, std::equal_to<TSCECategoryLevel>, std::hash<TSCECategoryLevel>, true>>="__value_"f}}}
v36@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@24C32
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}28@0:8@16C24
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}36@0:8Q16@24C32
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}52@0:8^{TSTRunningAggregate={TSKUIDStruct=QQ}BB}16@24r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}32B40@44
{vector<TSCECellValue *, std::allocator<TSCECellValue *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSCECellValue *__strong *, std::allocator<TSCECellValue *>>="__value_"^@}}
{vector<TSTUidCoordsPerGroupValueTuple *, std::allocator<TSTUidCoordsPerGroupValueTuple *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSTUidCoordsPerGroupValueTuple *__strong *, std::allocator<TSTUidCoordsPerGroupValueTuple *>>="__value_"^@}}
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}32@0:8S16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}20B28
@"TSTGroupBySet"
{unordered_map<unsigned short, TSTRunningAggregate, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, TSTRunningAggregate>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, TSTRunningAggregate>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSTRunningAggregate>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSTRunningAggregate>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, TSTRunningAggregate>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSTRunningAggregate>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSTRunningAggregate>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}
{unordered_map<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}
S20@0:8C16
C24@0:8S16S20
{?=CS}24@0:8@16
{TSUDecimal={?=[2Q]}}32@0:8r^{TSUDecimal={?=[2Q]}}16{?=CS}24{?=CS}28
v40@0:8^{TSCEASTNodeArray=}16{TSUCellCoord=ISBB}24^v32
@"TSTFunctionNode"
@48@0:8@16@24@32@40
@48@0:8@"TSSPropertyMap"16@"TSSPropertyMap"24@"TSSPropertyMap"32@"TSSPropertyMap"40
@"TSSPropertySet"16@0:8
@56@0:8@"TSSPropertyMap"16@"TSSPropertyMap"24@"TSSPropertyMap"32@"TSSPropertyMap"40@"TSTConcurrentStylesheet"48
@32@0:8r^{Message=^^?{InternalMetadata=^v}}16@24
v32@0:8^{Message=^^?{InternalMetadata=^v}}16@24
@32@0:8r^{Message=^^?{InternalMetadata=^v}}16@"TSPUnarchiver"24
v32@0:8^{Message=^^?{InternalMetadata=^v}}16@"TSPArchiver"24
@40@0:8@16B24B28B32I36
d28@0:8S16@?20
@24@0:8r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16
v40@0:8r^{TSUCellCoord=ISBB}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32
v32@0:8r^{TSUCellCoord=ISBB}16@24
v32@0:8^v16r^{TSKUIDStruct=QQ}24
v32@0:8^v16r^v24
B40@0:8^v16r^{TSKUIDStruct=QQ}24r^v32
{unordered_map<TSKUIDStruct, TSCECellCoordSet, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECellCoordSet>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSUCellCoord, std::unordered_set<TSCEUuidPair>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, std::unordered_set<TSCEUuidPair>>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
i40@0:8@16@24r^{TSKUIDStruct=QQ}32
i32@0:8@16@24
v48@0:8@16{TSKUIDStruct=QQ}24B40B44
v24@0:8B16B20
v28@0:8r^{TSKUIDStruct=QQ}16B24
@24@0:8S16C20
@24@0:8I16C20
{TSUModelColumnIndex=S}20@0:8S16
{TSUModelColumnIndex=S}20@0:8I16
@56@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@48
v36@0:8I16C20Q24i32
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}52@0:8Q16i24I28C32Q36^B44
v32@0:8@16q24
v32@0:8r^{TSKUIDStruct=QQ}16@24
@"TSTPivotGroupingColumnOptionsMap"
@"TSTFormulaStore"
v32@0:8^{CGContext=}16@?24
{TSUCellCoord=ISBB}24@0:8S16I20
S24@0:8r^{TSUCellCoord=ISBB}16
I24@0:8r^{TSUCellCoord=ISBB}16
{TSUCellCoord=ISBB}20@0:8I16
@40@0:8@16{_NSRange=QQ}24
v32@0:8@16C24B28
B24@0:8{TSUModelRowIndex=I}16C20
B22@0:8{TSUModelColumnIndex=S}16C18
{TSUModelColumnIndex=S}32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUModelRowIndex=I}32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
v40@0:8{_NSRange=QQ}16r^v32
v34@0:8{_NSRange=QQ}16{TSUViewColumnIndex=S}32
v52@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@40B48
@"TSTHiddenStateExtent"
v24@0:8@"TSTMutableCellIteratorData"16
@"NSObject<TSTCellRegionIterating>"
{TSKUIDStruct=QQ}32@0:8@16@24
{TSKUIDStruct=QQ}20@0:8i16
i24@0:8r^{TSKUIDStruct=QQ}16
C32@0:8@16@24
B48@0:8@16@24Q32^Q40
B56@0:8@16@24@32Q40^Q48
@44@0:8@16@24r^{TSKUIDStruct=QQ}32S40
@48@0:8@16B24@28r^{TSKUIDStruct=QQ}36S44
{TSKUIDStruct=QQ}32@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24
@40@0:8@16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32
v40@0:8^v16@24Q32
{vector<TSCECategoryLevel, std::allocator<TSCECategoryLevel>>=^C^C{__compressed_pair<TSCECategoryLevel *, std::allocator<TSCECategoryLevel>>=^C}}24@0:8r^{TSKUIDStruct=QQ}16
v40@0:8{TSKUIDStruct=QQ}16@?32
C32@0:8{TSKUIDStruct=QQ}16
C40@0:8r^{TSKUIDStruct=QQ}16^B24^B32
@28@0:8C16Q20
v36@0:8r^{TSKUIDStruct=QQ}16I24@28
@32@0:8@16C24B28
@40@0:8@16r^{TSKUIDStruct=QQ}24C32C36
v32@0:8@16r^{TSUCellCoord=ISBB}24
@24@0:8C16B20
@40@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24@32
@48@0:8@16Q24Q32^{TSUPreserveFlags=C}40
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}36@0:8@16r^{TSKUIDStruct=QQ}24B32
{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}24@0:8@16
{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}32@0:8@16r^{TSKUIDStruct=QQ}24
{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}36@0:8@16r^{TSKUIDStruct=QQ}24C32
@36@0:8@16r^{TSKUIDStruct=QQ}24C32
{vector<TSCECellRef, std::allocator<TSCECellRef>>=^{TSCECellRef}^{TSCECellRef}{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>=^{TSCECellRef}}}36@0:8@16r^{TSKUIDStruct=QQ}24B32
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}32@0:8@16C24B28
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}40@0:8{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}16
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}52@0:8{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}16@40C48
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}36@0:8@16C24B28B32
@"TSTGroupByChangeDistributor"
{unordered_map<TSUCellCoord, TSTAggNode *, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSTAggNode *>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSTAggNode *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
{TSCEUidLookupList="_uids"{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}"_uidHashToLookupKeyMap"{unordered_map<unsigned long, unsigned int, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, unsigned int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, unsigned int>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, unsigned int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}"_uidHashOverflowMap"{unordered_map<unsigned long, std::unordered_set<unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, std::unordered_set<unsigned int>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}}
@"TSKCustomFormatWrapper"
@40@0:8@16Q24@?32
v24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
v40@0:8@16r^v24r^v32
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@0:8Q16
{TSTCellUIDLookupList="_columnUidLookupList"{TSCEUidLookupList="_uids"{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}"_uidHashToLookupKeyMap"{unordered_map<unsigned long, unsigned int, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, unsigned int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, unsigned int>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, unsigned int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}"_uidHashOverflowMap"{unordered_map<unsigned long, std::unordered_set<unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, std::unordered_set<unsigned int>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}}"_rowUidLookupList"{TSCEUidLookupList="_uids"{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}"_uidHashToLookupKeyMap"{unordered_map<unsigned long, unsigned int, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, unsigned int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, unsigned int>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, unsigned int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}"_uidHashOverflowMap"{unordered_map<unsigned long, std::unordered_set<unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, std::unordered_set<unsigned int>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}}"_cellLookupCoords"{vector<TSTLookupKeyCoord, std::allocator<TSTLookupKeyCoord>>="__begin_"^{TSTLookupKeyCoord}"__end_"^{TSTLookupKeyCoord}"__end_cap_"{__compressed_pair<TSTLookupKeyCoord *, std::allocator<TSTLookupKeyCoord>>="__value_"^{TSTLookupKeyCoord}}}}
@52@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32i48
v28@0:8B16@?20
@"<TSCERemoteDataStoreDelegate>"
@"NSOperationQueue"
@"TSCERemoteDataSpecifierSet"
{vector<TSTStrokeLayer *__unsafe_unretained, std::allocator<TSTStrokeLayer *__unsafe_unretained>>=^@^@{__compressed_pair<TSTStrokeLayer *__unsafe_unretained *, std::allocator<TSTStrokeLayer *__unsafe_unretained>>=^@}}16@0:8
v40@0:8{TSTSimpleRange=qQ}16@?32
@48@0:8@16@24{TSTSimpleRange=qQ}32
v44@0:8@16i24{TSTSimpleRange=qQ}28
v40@0:8@16{TSTSimpleRange=qQ}24
B32@0:8{TSTSimpleRange=qQ}16
{?=@@@@@}16@0:8
@"TSTMutableStrokeLayer"
v32@0:8^v16@?24
d40@0:8{TSTSimpleRange=qQ}16d32
d24@0:8q16
@"TSTStrokeOrderedLayer"
v56@0:8{TSUCellCoord=ISBB}16^@24^@32^@40^@48
@24@0:8S16S20
@"<TSTCustomStrokeProviding>"
@"TSUIntegerKeyDictionary"
Q40@0:8@16Q24Q32
Q48@0:8@16@24Q32Q40
v40@0:8@16Q24Q32
{TSUViewColumnOrRowIndex=I}20@0:8{TSUModelColumnOrRowIndex=I}16
v28@0:8{TSUModelColumnOrRowIndex=I}16{TSUViewColumnOrRowIndex=I}20C24
B28@0:8r^{TSKUIDStruct=QQ}16C24
B36@0:8r^{TSKUIDStruct=QQ}16{TSUModelColumnOrRowIndex=I}24{TSUViewColumnOrRowIndex=I}28C32
B24@0:8{TSUViewColumnOrRowIndex=I}16C20
B24@0:8{TSUModelColumnOrRowIndex=I}16C20
C20@0:8{TSUViewColumnOrRowIndex=I}16
C20@0:8{TSUModelColumnOrRowIndex=I}16
I32@0:8{_NSRange=QQ}16
B36@0:8{_NSRange=QQ}16C32
I24@0:8I16I20
v36@0:8{_NSRange=QQ}16{TSUModelColumnOrRowIndex=I}32
v36@0:8{_NSRange=QQ}16{TSUViewColumnOrRowIndex=I}32
v24@0:8{TSUModelColumnOrRowIndex=I}16{TSUModelColumnOrRowIndex=I}20
@48@0:8@16@24r^{TSKUIDStruct=QQ}32r^{TSUCellCoord=ISBB}40
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}32@0:8@16r^{TSUCellCoord=ISBB}24
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}40@0:8@16r^{TSUCellCoord=ISBB}24B32C36
@120@0:8{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@112
v48@0:8@16r^{TSUCellCoord=ISBB}24@32@40
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}20@0:8{TSUModelColumnOrRowIndex=I}16
{unordered_map<TSKUIDStruct, unsigned char, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, unsigned char>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, unsigned char>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned char>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned char>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, unsigned char>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned char>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned char>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}24@0:8r^v16
v32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16{TSUModelCellCoord={TSUCellCoord=ISBB}}24
v24@0:8r^{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}48@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32
{vector<TSUModelCellRect, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}^{TSUModelCellRect}{__compressed_pair<TSUModelCellRect *, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}}}24@0:8r^v16
B24@0:8r^{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUModelCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}44@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24@32B40
v44@0:8{_NSRange=QQ}16r^v32B40
{unordered_map<TSUModelCellCoord, TSUModelCellCoord, std::hash<TSUModelCellCoord>, std::equal_to<TSUModelCellCoord>, std::allocator<std::pair<const TSUModelCellCoord, TSUModelCellCoord>>>="__table_"{__hash_table<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::__unordered_map_hasher<TSUModelCellCoord, std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::hash<TSUModelCellCoord>, std::equal_to<TSUModelCellCoord>, true>, std::__unordered_map_equal<TSUModelCellCoord, std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::equal_to<TSUModelCellCoord>, std::hash<TSUModelCellCoord>, true>, std::allocator<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUModelCellCoord, std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::hash<TSUModelCellCoord>, std::equal_to<TSUModelCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUModelCellCoord, std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::equal_to<TSUModelCellCoord>, std::hash<TSUModelCellCoord>, true>>="__value_"f}}}
@"TSTCellRangeCache"
@"TSTMergeChangeDistributor"
@40@0:8@16r^{TSKUIDStruct=QQ}24@32
{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}20@0:8S16
@24@0:8r^{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}16
@48@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32
i28@0:8@16i24
{CGSize=dd}40@0:8@16d24@32
d20@0:8B16
d36@0:8S16B20B24^B28
d60@0:8I16B20B24B28B32{CGSize=dd}36^B52
d44@0:8{CGSize=dd}16I32d36
d24@0:8I16B20
v44@0:8@16i24I28B32I36I40
v28@0:8I16I20I24
B28@0:8^I16B24
d28@0:8I16I20I24
d24@0:8I16I20
v36@0:8I16I20I24@?28
{CGSize=dd}36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16B32
d36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16B32
d40@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32
d44@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16B32@36
d52@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16B32{CGSize=dd}36
v32@0:8d16Q24
B32@0:8^@16{TSUCellCoord=ISBB}24
B28@0:8q16I24
v40@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24
v36@0:8i16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}20
v52@0:8i16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}20{TSUCellRect={TSUCellCoord=ISBB}{?=II}}36
v76@0:8@16{TSUCellCoord=ISBB}24{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32B48@52@60@68
v52@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32B40@44
v40@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32
v40@0:8{TSUCellCoord=ISBB}16{TSUCellCoord=ISBB}24@32
{TSUCellCoord=ISBB}56@0:8{TSUCellCoord=ISBB}16{TSUCellCoord=ISBB}24{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32@48
v36@0:8@16S24@28
v36@0:8@16I24@28
v36@0:8i16@20@28
@76@0:8{TSUCellCoord=ISBB}16@24@32B40i44@48i56Q60Q68
v104@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32@40{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48B64i68@72B80i84@88@96
@56@0:8@16{TSUCellCoord=ISBB}24@32^q40^i48
@52@0:8@16{TSUCellCoord=ISBB}24@32q40i48
@40@0:8@16{TSUCellCoord=ISBB}24@32
{UIEdgeInsets=dddd}24@0:8{TSUCellCoord=ISBB}16
@"NSObject<OS_dispatch_group>"
@"TSKChangeNotifier"
@"TSTStrokeDefaultVendor"
@"TSTWPColumnCache"
@"TSTDupContentCache"
@"TSTWidthHeightCache"
@"TSTHiddenRowsColumnsCache"
@"TSDFill"
@"TSUColor"
@"TSDInfoGeometry"
@"TSDLayoutGeometry"
@"TSTMergeRangeSortedSet"
@"<TSWPStyleProviding>"
@"TSTFontInfoCache"
@"TSUWidthLimitedQueue"
@"TSTConcurrentMutableIndexSet"
@"TSTStrokeWidthCache"
@"TSTTextStyleToFontHeightCache"
@"NSCountedSet"
@"TSTLayout"
@"<TSTLayoutDynamicContentProtocol>"
@"TSTLayoutDynamicResizeInfo"
@"<TSTLayoutDynamicCellFillProtocol>"
@"TSWPColumnStyle"
@"TSTTextEngineDelegate"
B24@0:8@"TSKSelectionPath"16
@"<TSDHint>"16@0:8
@92@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16{TSUCellCoord=ISBB}32I40{CGSize=dd}44{CGSize=dd}60@76B84B88
@"NSNumber"
@32@0:8@"TSPObjectContext"16@"<TSDHint>"24
v24@0:8@"<TSDHint>"16
@60@0:8{CGSize=dd}16@32@40B48o^B52
B36@0:8@16@24B32
@"TSDLayout"60@0:8{CGSize=dd}16@"TSDLayout"32@"<TSDHint>"40B48o^B52
@"<TSDHint>"60@0:8{CGSize=dd}16@"TSDLayout"32@"<TSDHint>"40B48o^B52
@"TSDLayout"32@0:8@"<TSDHint>"16@"TSDLayout"24
B36@0:8@"<TSDHint>"16@"<TSDHint>"24B32
@"<TSDHint>"24@0:8@"TSDLayout"16
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}44@0:8{CGSize=dd}16@32B40
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}68@0:8S16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}20d36{CGSize=dd}44@60
B28@0:8@16B24
B56@0:8@16{CGSize=dd}24@40@48
@32@0:8{CGSize=dd}16
B24@0:8@?16
@"TSTLayoutSpace"
@56@0:8@16^v24S32r^{TSKUIDStruct=QQ}36@44S52
v36@0:8^v16r^{TSUCellCoord=ISBB}24B32
v36@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24S32
@"TSCEUuidReferences"
@"<TSCEFormulaOwning>"
@"<TSCECalculationEngineRegistration>"
@44@0:8i16{_NSRange=QQ}20@36
{unordered_map<unsigned int, TSTTableDataObject *, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, TSTTableDataObject *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned int, TSTTableDataObject *>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, TSTTableDataObject *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, TSTTableDataObject *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>, std::allocator<std::__hash_value_type<unsigned int, TSTTableDataObject *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, TSTTableDataObject *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, TSTTableDataObject *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>>="__value_"f}}}
@64@0:8@16@24{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32Q48Q56
@80@0:8@16@24@32@40{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48Q64Q72
v40@0:8@?16@?24@?32
v48@0:8@?16@?24@?32@?40
{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}32@0:8@16@24
@40@0:8r^v16r^v24@32
@28@0:8i16r^v20
@40@0:8r^v16r^v24r^v32
{vector<TSCEFormulaObject *, std::allocator<TSCEFormulaObject *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSCEFormulaObject *__strong *, std::allocator<TSCEFormulaObject *>>="__value_"^@}}
v64@0:8r^{TSKUIDStruct=QQ}16Q24^v32^v40^v48^v56
v40@0:8r^v16Q24^v32
@"TSTCellUIDLookupListWrapper"
{TSKUIDStruct=QQ}64@0:8r^v16r^v24^Q32^Q40^Q48^v56
B32@0:8^v16Q24
{deque<TSKUIDStruct, std::allocator<TSKUIDStruct>>="__map_"{__split_buffer<TSKUIDStruct *, std::allocator<TSKUIDStruct *>>="__first_"^^{TSKUIDStruct}"__begin_"^^{TSKUIDStruct}"__end_"^^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct **, std::allocator<TSKUIDStruct *>>="__value_"^^{TSKUIDStruct}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<TSKUIDStruct>>="__value_"Q}}
@44@0:8i16@20{TSKUIDStruct=QQ}28
@32@0:8^{TSCEBooleanValue=^^?B{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}16@24
^{TSCEBooleanValue=^^?B{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}16@0:8
^{TSCEBooleanValue=^^?B{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}
@36@0:8S16@20q28
@60@0:8S16@20q28q36q44q52
[256@"TSTTableTile"]
[256@"TSPLazyReference"]
@32@0:8r^{TSUDecimal={?=[2Q]}}16@24
@32@0:8^{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB}16@24
^{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB}
{unordered_map<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
@"TSTHierarchicalCellDiffMap"
@56@0:8@16{TSKUIDStruct=QQ}24@40@48
Q40@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24
@36@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16B32
@40@0:8q16{TSKUIDStruct=QQ}24
{map<TSKUIDStruct, TSTPivotGroupingColumnOptions *, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSTPivotGroupingColumnOptions *>>>="__tree_"{__tree<std::__value_type<TSKUIDStruct, TSTPivotGroupingColumnOptions *>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSTPivotGroupingColumnOptions *>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSTPivotGroupingColumnOptions *>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSTPivotGroupingColumnOptions *>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSTPivotGroupingColumnOptions *>, std::less<TSKUIDStruct>, true>>="__value_"Q}}}
d20@0:8S16
v36@0:8^d16^d24I32
B24@0:8I16S20
v36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16I32
v36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16S32
@40@0:8@16@24I32S36
{vector<TSTWidthHeightCacheEntry<4>, std::allocator<TSTWidthHeightCacheEntry<4>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<TSTWidthHeightCacheEntry<4> *, std::allocator<TSTWidthHeightCacheEntry<4>>>="__value_"^v}}
@"TSCERemoteDataCoordinator"
@"TSUNetworkReachability"
@"NSObject<OS_dispatch_source>"
@36@0:8@16@24C32
v36@0:8r^v16r^{TSKUIDStruct=QQ}24B32
{unordered_map<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
@36@0:8i16@20@28
@44@0:8i16{TSUCellCoord=ISBB}20@28@36
@52@0:8i16@20@28Q36Q44
@44@0:8i16@20Q28Q36
@44@0:8i16{TSUCellCoord=ISBB}20{TSUCellRect={TSUCellCoord=ISBB}{?=II}}28
@60@0:8i16{TSUCellCoord=ISBB}20{TSUCellRect={TSUCellCoord=ISBB}{?=II}}28{TSUCellRect={TSUCellCoord=ISBB}{?=II}}44
@36@0:8i16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}20
@52@0:8i16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}20{TSUCellRect={TSUCellCoord=ISBB}{?=II}}36
v36@0:8@16i24@?28
@68@0:8i16@20{TSUCellCoord=ISBB}28@36@44@52@60
@60@0:8i16@20{TSUCellCoord=ISBB}28@36@44@52
@"NSHashTable"
@"NSSet"
@"TSULocale"16@0:8
@"<TSWPStyleProviding>"16@0:8
@64@0:8{UIEdgeInsets=dddd}16i48@52B60
@26@0:8{TSUModelColumnIndex=S}16i18i22
{unordered_map<TSKUIDStruct, TSCEMutableUIDSet *, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCEMutableUIDSet *>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{TSKUIDStruct=QQ}24@0:8I16B20
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}28@0:8@16B24
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}36@0:8{_NSRange=QQ}16B32
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}28@0:8@"NSIndexSet"16B24
@"NSMutableIndexSet"28@0:8r^v16B24
v48@0:8{UIEdgeInsets=dddd}16
@"TSTLayoutContentCachedKey"
@"TSWPColumn"
v24@0:8^{CGImage=}16
^{CGImage=}16@0:8
^{CGImage=}
v52@0:8@16C24^v28^v36^v44
@48@0:8@16@24r^v32r^v40
Q20@0:8B16
C20@0:8B16
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}32@0:8r^v16q24
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}24@0:8q16
@40@0:8I16C20^{TSKUIDStruct=QQ}24q32
C40@0:8{_NSRange=QQ}16q32
r^v24@0:8q16
v32@0:8r^v16q24
v40@0:8r^v16r^{TSKUIDStruct=QQ}24q32
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}40@0:8r^v16r^v24q32
@"TSTReferenceNode"
@"<TSTCanvasReferenceProvider>"
@52@0:8@16{TSTSimpleRange=qQ}24i40Q44
@"TSTStrokeLayer"24@0:8Q16
@32@0:8{TSTSimpleRange=qQ}16
{vector<TSTStrokeLayerRun, std::allocator<TSTStrokeLayerRun>>="__begin_"^{TSTStrokeLayerRun}"__end_"^{TSTStrokeLayerRun}"__end_cap_"{__compressed_pair<TSTStrokeLayerRun *, std::allocator<TSTStrokeLayerRun>>="__value_"^{TSTStrokeLayerRun}}}
v32@0:8q16q24
v40@0:8{_NSRange=QQ}16q32
v116@0:8@16@24i32@36@44i52@56@64i72@76@84i92@96@104i112
v32@0:8@16r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24
{vector<NSString *, std::allocator<NSString *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<NSString *__strong *, std::allocator<NSString *>>="__value_"^@}}
{vector<TSCEValue, std::allocator<TSCEValue>>="__begin_"^{TSCEValue}"__end_"^{TSCEValue}"__end_cap_"{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>="__value_"^{TSCEValue}}}
{vector<bool, std::allocator<bool>>="__begin_"^Q"__size_"Q"__cap_alloc_"{__compressed_pair<unsigned long, std::allocator<unsigned long>>="__value_"Q}}
@52@0:8r^{TSCEGrid=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}16@24i32^{TSCEEvaluationContext=}36B44B48
{TSCETaggedDecimalList="_list"{vector<TSCETaggedDecimal, std::allocator<TSCETaggedDecimal>>="__begin_"^{TSCETaggedDecimal}"__end_"^{TSCETaggedDecimal}"__end_cap_"{__compressed_pair<TSCETaggedDecimal *, std::allocator<TSCETaggedDecimal>>="__value_"^{TSCETaggedDecimal}}}"_startIdx"Q"_size"Q}
@"TSSStyle"
@"TSSStylesheet"
Q28@0:8@16i24
v28@0:8Q16B24
^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}
d40@0:8@16d24N^d32
[8{os_unfair_lock_s="_os_unfair_lock_opaque"I}]
[8{unordered_map<TSTFontInfoCacheDupContentEntry, double, std::hash<TSTFontInfoCacheDupContentEntry>, std::equal_to<TSTFontInfoCacheDupContentEntry>, std::allocator<std::pair<const TSTFontInfoCacheDupContentEntry, double>>>="__table_"{__hash_table<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, std::__unordered_map_hasher<TSTFontInfoCacheDupContentEntry, std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, std::hash<TSTFontInfoCacheDupContentEntry>, std::equal_to<TSTFontInfoCacheDupContentEntry>, true>, std::__unordered_map_equal<TSTFontInfoCacheDupContentEntry, std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, std::equal_to<TSTFontInfoCacheDupContentEntry>, std::hash<TSTFontInfoCacheDupContentEntry>, true>, std::allocator<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSTFontInfoCacheDupContentEntry, std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, std::hash<TSTFontInfoCacheDupContentEntry>, std::equal_to<TSTFontInfoCacheDupContentEntry>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSTFontInfoCacheDupContentEntry, std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, std::equal_to<TSTFontInfoCacheDupContentEntry>, std::hash<TSTFontInfoCacheDupContentEntry>, true>>="__value_"f}}}]
@"TSWPTextMeasurerBundle"
{vector<std::vector<NSString *>, std::allocator<std::vector<NSString *>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<NSString *> *, std::allocator<std::vector<NSString *>>>="__value_"^v}}
{vector<TSKUIDStructCoord, std::allocator<TSKUIDStructCoord>>="__begin_"^{TSKUIDStructCoord}"__end_"^{TSKUIDStructCoord}"__end_cap_"{__compressed_pair<TSKUIDStructCoord *, std::allocator<TSKUIDStructCoord>>="__value_"^{TSKUIDStructCoord}}}
^v24@0:8@16
^v32@0:8@16r^{TSUCellCoord=ISBB}24
{map<NSString *, TSTHeaderNameMgrEntry *, std::less<NSString *>, std::allocator<std::pair<NSString *const, TSTHeaderNameMgrEntry *>>>="__tree_"{__tree<std::__value_type<NSString *, TSTHeaderNameMgrEntry *>, std::__map_value_compare<NSString *, std::__value_type<NSString *, TSTHeaderNameMgrEntry *>, std::less<NSString *>, true>, std::allocator<std::__value_type<NSString *, TSTHeaderNameMgrEntry *>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<NSString *, TSTHeaderNameMgrEntry *>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<NSString *, std::__value_type<NSString *, TSTHeaderNameMgrEntry *>, std::less<NSString *>, true>>="__value_"Q}}}
@"TSTHeaderNameMgr"
{TSCECellRefSet={map<TSKUIDStruct, TSCECellCoordSet, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECellCoordSet>>>={__tree<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSCECellCoordSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>>=Q}}}}24@0:8@16
{unordered_map<NSString *, TSCECellRefSet, std::hash<NSString *>, std::equal_to<NSString *>, std::allocator<std::pair<NSString *const, TSCECellRefSet>>>="__table_"{__hash_table<std::__hash_value_type<NSString *, TSCECellRefSet>, std::__unordered_map_hasher<NSString *, std::__hash_value_type<NSString *, TSCECellRefSet>, std::hash<NSString *>, std::equal_to<NSString *>, true>, std::__unordered_map_equal<NSString *, std::__hash_value_type<NSString *, TSCECellRefSet>, std::equal_to<NSString *>, std::hash<NSString *>, true>, std::allocator<std::__hash_value_type<NSString *, TSCECellRefSet>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<NSString *, std::__hash_value_type<NSString *, TSCECellRefSet>, std::hash<NSString *>, std::equal_to<NSString *>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<NSString *, std::__hash_value_type<NSString *, TSCECellRefSet>, std::equal_to<NSString *>, std::hash<NSString *>, true>>="__value_"f}}}
v32@0:8^v16r^{TSUCellCoord=ISBB}24
{TSUCellCoord=ISBB}20@0:8B16
{TSUCellCoord=ISBB}32@0:8r^{TSUCellCoord=ISBB}16@24
{vector<NSString *, std::allocator<NSString *>>=^@^@{__compressed_pair<NSString *__strong *, std::allocator<NSString *>>=^@}}28@0:8@16B24
^{TSTHeaderPerTable={TSKUIDStruct=QQ}{TSUCellCoord=ISBB}@@@@B}28@0:8r^{TSKUIDStruct=QQ}16B24
^v24@0:8r^{TSUCellCoord=ISBB}16
@36@0:8@16B24^Q28
v40@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24r^{TSKUIDStruct=QQ}32
v40@0:8r^v16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24r^{TSKUIDStruct=QQ}32
v32@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16r^{TSKUIDStruct=QQ}24
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
B40@0:8@16r^v24r^{TSKUIDStruct=QQ}32
@28@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16B24
@36@0:8@16r^{TSKUIDStruct=QQ}24B32
{TSCECellRefSet={map<TSKUIDStruct, TSCECellCoordSet, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECellCoordSet>>>={__tree<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSCECellCoordSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>>=Q}}}}36@0:8@16r^{TSKUIDStruct=QQ}24B32
{TSCECellRefSet={map<TSKUIDStruct, TSCECellCoordSet, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECellCoordSet>>>={__tree<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSCECellCoordSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>>=Q}}}}24@0:8r^{TSKUIDStruct=QQ}16
{vector<TSTHeaderNameMgrTile *, std::allocator<TSTHeaderNameMgrTile *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSTHeaderNameMgrTile *__strong *, std::allocator<TSTHeaderNameMgrTile *>>="__value_"^@}}
{unordered_map<TSUCellCoord, TSTHeaderNameMgrEntry *, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSTHeaderNameMgrEntry *>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
{unordered_map<TSCEUidCellRef, TSCECellCoordSet, std::hash<TSCEUidCellRef>, std::equal_to<TSCEUidCellRef>, std::allocator<std::pair<const TSCEUidCellRef, TSCECellCoordSet>>>="__table_"{__hash_table<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, std::__unordered_map_hasher<TSCEUidCellRef, std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, std::hash<TSCEUidCellRef>, std::equal_to<TSCEUidCellRef>, true>, std::__unordered_map_equal<TSCEUidCellRef, std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, std::equal_to<TSCEUidCellRef>, std::hash<TSCEUidCellRef>, true>, std::allocator<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCEUidCellRef, std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, std::hash<TSCEUidCellRef>, std::equal_to<TSCEUidCellRef>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCEUidCellRef, std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, std::equal_to<TSCEUidCellRef>, std::hash<TSCEUidCellRef>, true>>="__value_"f}}}
{unordered_map<TSKUIDStruct, TSTHeaderPerTable *, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSTHeaderPerTable *>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSUCellCoord, TSKUIDStruct, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSKUIDStruct>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
@"TSCENameTrie"
{unordered_map<NSString *, TSUCellCoord, std::hash<NSString *>, std::equal_to<NSString *>, std::allocator<std::pair<NSString *const, TSUCellCoord>>>="__table_"{__hash_table<std::__hash_value_type<NSString *, TSUCellCoord>, std::__unordered_map_hasher<NSString *, std::__hash_value_type<NSString *, TSUCellCoord>, std::hash<NSString *>, std::equal_to<NSString *>, true>, std::__unordered_map_equal<NSString *, std::__hash_value_type<NSString *, TSUCellCoord>, std::equal_to<NSString *>, std::hash<NSString *>, true>, std::allocator<std::__hash_value_type<NSString *, TSUCellCoord>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<NSString *, std::__hash_value_type<NSString *, TSUCellCoord>, std::hash<NSString *>, std::equal_to<NSString *>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<NSString *, std::__hash_value_type<NSString *, TSUCellCoord>, std::equal_to<NSString *>, std::hash<NSString *>, true>>="__value_"f}}}
@60@0:8@16{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24B56
@36@0:8@16{TSUCellCoord=ISBB}24B32
@"TSTCellDiffArray"
v32@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16
@32@0:8r^{TSKUIDStruct=QQ}16r^v24
@24@0:8{TSUModelColumnOrRowIndex=I}16i20
@20@0:8{TSUModelColumnOrRowIndex=I}16
{TSUModelColumnOrRowIndex=I}16@0:8
{TSUModelColumnOrRowIndex="_index"I}
@24@0:8{TSUViewColumnOrRowIndex=I}16i20
{TSUViewColumnOrRowIndex=I}16@0:8
{TSUViewColumnOrRowIndex="_index"I}
r*16@0:8
{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__l"{__long="__cap_"Q"__size_"Q"__data_"*}"__s"{__short=""(?="__size_"C"__lx"c)"__data_"[23c]}"__r"{__raw="__words"[3Q]})}}}
@56@0:8@16Q24Q32{TSUCellRect={TSUCellCoord=ISBB}{?=II}}40
v48@0:8@16Q24Q32@?40
v64@0:8@16Q24Q32{TSUCellRect={TSUCellCoord=ISBB}{?=II}}40@?56
v32@0:8r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16r^{TSKUIDStruct=QQ}24
@32@0:8r^v16^v24
v36@0:8^v16B24@28
{unordered_map<TSKUIDStruct, TSCEInternalCellRefSet, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCEInternalCellRefSet>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, std::allocator<std::pair<const TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>>>="__table_"{__hash_table<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, std::__unordered_map_hasher<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, true>, std::__unordered_map_equal<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, std::equal_to<TSCEInternalCellReference>, std::hash<TSCEInternalCellReference>, true>, std::allocator<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, std::equal_to<TSCEInternalCellReference>, std::hash<TSCEInternalCellReference>, true>>="__value_"f}}}
@36@0:8d16B24o^d28
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8d16{CGRect={CGPoint=dd}{CGSize=dd}}24
{CGRect={CGPoint=dd}{CGSize=dd}}76@0:8d16{CGRect={CGPoint=dd}{CGSize=dd}}24B56o^@60o^{CGSize=dd}68
v76@0:8B16d20^{CGContext=}28{CGRect={CGPoint=dd}{CGSize=dd}}36@68
v76@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16d32{UIEdgeInsets=dddd}40B72
{set<TSTMergeRangeElem, TSTMergeRangeElemCompare, std::allocator<TSTMergeRangeElem>>="__tree_"{__tree<TSTMergeRangeElem, TSTMergeRangeElemCompare, std::allocator<TSTMergeRangeElem>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<TSTMergeRangeElem, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, TSTMergeRangeElemCompare>="__value_"Q}}}
@112@0:8@16d24d32@40B48C52{UIEdgeInsets=dddd}56i88i92q96@104
@40@0:8@"TSTLayoutEngine"16@"TSTCellRegion"24@"TSTCellRegion"32
@24@0:8@"TSTLayoutEngine"16
@32@0:8@"TSTLayoutEngine"16@"TSTCellRegion"24
@24@0:8@"<TSTLayoutDynamicResizeInfoProtocol>"16
v24@0:8@"TSTLayoutEngine"16
@"TSTImmutableColumnRowUIDMap"
B32@0:8@16Q24
{unordered_map<TSUViewColumnIndex, TSUModelColumnIndex, std::hash<TSUViewColumnIndex>, std::equal_to<TSUViewColumnIndex>, std::allocator<std::pair<const TSUViewColumnIndex, TSUModelColumnIndex>>>="__table_"{__hash_table<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::__unordered_map_hasher<TSUViewColumnIndex, std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::hash<TSUViewColumnIndex>, std::equal_to<TSUViewColumnIndex>, true>, std::__unordered_map_equal<TSUViewColumnIndex, std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::equal_to<TSUViewColumnIndex>, std::hash<TSUViewColumnIndex>, true>, std::allocator<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUViewColumnIndex, std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::hash<TSUViewColumnIndex>, std::equal_to<TSUViewColumnIndex>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUViewColumnIndex, std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::equal_to<TSUViewColumnIndex>, std::hash<TSUViewColumnIndex>, true>>="__value_"f}}}
@"TSTCategoryTranslator"
@"TSTTableDataListCache"
@"TSTTableTile"
@"TSTTableTileRowInfo"
@45@0:8@16r^{TSKUIDStruct=QQ}24{TSUPreserveFlags=C}32C33C37S41
@33@0:8@16r^{TSKUIDStruct=QQ}24{TSUPreserveFlags=C}32
@"TSCEUndoTract"
@40@0:8C16{TSKUIDStruct=QQ}20C36
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
v24@0:8^{TSKUIDStruct=QQ}16
{map<TSKUIDStructCoord, TSTCell *, std::less<TSKUIDStructCoord>, std::allocator<std::pair<const TSKUIDStructCoord, TSTCell *>>>="__tree_"{__tree<std::__value_type<TSKUIDStructCoord, TSTCell *>, std::__map_value_compare<TSKUIDStructCoord, std::__value_type<TSKUIDStructCoord, TSTCell *>, std::less<TSKUIDStructCoord>, true>, std::allocator<std::__value_type<TSKUIDStructCoord, TSTCell *>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStructCoord, TSTCell *>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStructCoord, std::__value_type<TSKUIDStructCoord, TSTCell *>, std::less<TSKUIDStructCoord>, true>>="__value_"Q}}}
@34@0:8@16{TSUModelColumnIndex=S}24@26
@42@0:8@16@24{TSUModelColumnIndex=S}32@34
@32@0:8@16^B24
B36@0:8I16r^{TSKUIDStruct=QQ}20@28
{TSUModelColumnIndex=S}24@0:8@16
@"TSTFormulaPredicate"
B28@0:8q16C24
B36@0:8I16@20@28
v44@0:8@16@24Q32B40
v34@0:8{TSUModelColumnIndex=S}16@18@?26
@26@0:8{TSUModelColumnIndex=S}16@18
Q26@0:8{TSUModelColumnIndex=S}16@18
@76@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32r^{TSKUIDStruct=QQ}40C48C52S56r^{TSUPreserveFlags=C}60s68C72
@68@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32r^{TSKUIDStruct=QQ}40C48C52S56r^{TSUPreserveFlags=C}60
@52@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32C40C44S48
@48@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32C40C44
@52@0:8C16{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}20{TSUCellCoord=ISBB}44
@36@0:8C16@20{TSUCellCoord=ISBB}28
B32@0:8@16{TSUCellCoord=ISBB}24
@56@0:8C16@20@28@36C44C48B52
@80@0:8C16@20@28C36C40{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}44{TSUCellCoord=ISBB}68B76
@64@0:8C16@20@28C36C40@44{TSUCellCoord=ISBB}52B60
@76@0:8C16@20@28C36C40{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}44{TSUCellCoord=ISBB}68
{TSCEFormulaCreator=@?}44@0:8C16C20@24I32B36B40
@96@0:8C16@20@28d36d44C52C56{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}60{TSUCellCoord=ISBB}84B92
@92@0:8C16@20@28d36d44C52C56{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}60{TSUCellCoord=ISBB}84
@72@0:8C16d20d28C36{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}40{TSUCellCoord=ISBB}64
@80@0:8C16d20C28d32C40C44{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}48{TSUCellCoord=ISBB}72
@60@0:8C16@20{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}28{TSUCellCoord=ISBB}52
v40@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32
v48@0:8^v16@24r^{TSKUIDStruct=QQ}32r^{TSUCellCoord=ISBB}40
C48@0:8@16Q24@32{TSUCellCoord=ISBB}40
B36@0:8C16C20C24^B28
B40@0:8{TSUCellCoord=ISBB}16r^{TSKUIDStruct=QQ}24@32
v32@0:8q16@24
v40@0:8r^v16@24^B32
v28@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16C24
@48@0:8r^v16@24r^{TSKUIDStruct=QQ}32^B40
@32@0:8r^{TSKUIDStruct=QQ}16{TSUCellCoord=ISBB}24
C24@0:8C16B20
{TSCEUidCellRef={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@0:8
v64@0:8{TSCEUidCellRef={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@"TSTFormulaPredArg"
{TSCEUidCellRef="_columnUid"{TSKUIDStruct="_lower"Q"_upper"Q}"_rowUid"{TSKUIDStruct="_lower"Q"_upper"Q}"_tableUid"{TSKUIDStruct="_lower"Q"_upper"Q}}
@"TSTStrokeSelection"
@68@0:8i16@20d28{CGRect={CGPoint=dd}{CGSize=dd}}36
v24@0:8^{CGContext=}16
@40@0:8@16@24@?32
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}32@0:8^v16^v24
@36@0:8{_NSRange=QQ}16I32
@36@0:8{_NSRange=QQ}16S32
v32@0:8q16@?24
v40@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@?32
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}24@0:8Q16
@32@0:8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
v36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16B32
{set<TSUCellRect, TSTCellRangeRowMajorLess, std::allocator<TSUCellRect>>="__tree_"{__tree<TSUCellRect, TSTCellRangeRowMajorLess, std::allocator<TSUCellRect>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<TSUCellRect, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, TSTCellRangeRowMajorLess>="__value_"Q}}}
v28@0:8^v16B24
{set<TSUCellRect, TSTCellRangeColumnMajorLess, std::allocator<TSUCellRect>>="__tree_"{__tree<TSUCellRect, TSTCellRangeColumnMajorLess, std::allocator<TSUCellRect>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<TSUCellRect, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, TSTCellRangeColumnMajorLess>="__value_"Q}}}
v52@0:8^v16r^v24r^v32C40B44B48
B36@0:8^v16r^v24B32
@52@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32C48
@36@0:8r^v16r^v24C32
B24@0:8r^v16
B36@0:8r^v16r^v24B32
v48@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
v40@0:8r^v16r^v24B32B36
@68@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32{TSKUIDStruct=QQ}48i64
@32@0:8q16@24
@36@0:8S16S20I24@28
^{TSCECellRecordTile=SI^{TSCECellRecord}QQQ@}16@0:8
^{TSCECellRecordTile=SI^{TSCECellRecord}QQQ@}
{TSKUIDStruct=QQ}18@0:8{TSUModelColumnIndex=S}16
{TSKUIDStruct=QQ}20@0:8{TSUModelRowIndex=I}16
{TSUModelColumnIndex=S}32@0:8{TSKUIDStruct=QQ}16
{TSUModelRowIndex=I}32@0:8{TSKUIDStruct=QQ}16
{TSUViewColumnIndex=S}32@0:8{TSKUIDStruct=QQ}16
{TSUViewRowIndex=I}32@0:8{TSKUIDStruct=QQ}16
{TSKUIDStruct=QQ}18@0:8{TSUViewColumnIndex=S}16
{TSKUIDStruct=QQ}20@0:8{TSUViewRowIndex=I}16
@"NSMutableIndexSet"24@0:8@"NSMutableIndexSet"16
v20@0:8{TSUViewRowIndex=I}16
v18@0:8{TSUViewColumnIndex=S}16
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@0:8{TSUCellCoord=ISBB}16
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@0:8Q16
@32@0:8r^v16o^B24
i32@0:8o@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24
@24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
@20@0:8{TSUViewRowIndex=I}16
@32@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16@24
i32@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24
d20@0:8{TSUViewRowIndex=I}16
d18@0:8{TSUViewColumnIndex=S}16
i42@0:8{TSUViewColumnIndex=S}16r^v18@26Q34
i48@0:8{TSUViewRowIndex=I}16r^v20@28Q36B44
v24@0:8{TSUViewRowIndex=I}16{TSUViewRowIndex=I}20
v20@0:8{TSUViewColumnIndex=S}16{TSUViewColumnIndex=S}18
v36@0:8{_NSRange=QQ}16{TSUViewRowIndex=I}32
v40@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24@32
@32@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24
{TSUViewCellCoord={TSUCellCoord=ISBB}}24@0:8@16
B32@0:8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
{TSUViewCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32@0:8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{vector<TSUViewCellRect, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}^{TSUViewCellRect}{__compressed_pair<TSUViewCellRect *, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}}}32@0:8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{vector<TSUViewCellRect, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}^{TSUViewCellRect}{__compressed_pair<TSUViewCellRect *, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}}}24@0:8@16
{TSUModelCellCoord={TSUCellCoord=ISBB}}48@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
{TSUViewCellCoord={TSUCellCoord=ISBB}}48@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@56@0:8@16i24i28s32B36i40r^v44S52
B24@0:8s16s20
i24@0:8Q16
c24@0:8Q16
q48@0:8@16Q24q32@40
{vector<TSCEFunctionArgSpec, std::allocator<TSCEFunctionArgSpec>>="__begin_"^{TSCEFunctionArgSpec}"__end_"^{TSCEFunctionArgSpec}"__end_cap_"{__compressed_pair<TSCEFunctionArgSpec *, std::allocator<TSCEFunctionArgSpec>>="__value_"^{TSCEFunctionArgSpec}}}
@"TSTStrokeLayerMergedStack"
v32@0:8r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16@24
B40@0:8^v16r^v24r^{TSKUIDStruct=QQ}32
{unordered_map<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, std::allocator<std::pair<const TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>>>="__table_"{__hash_table<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, std::__unordered_map_hasher<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, true>, std::__unordered_map_equal<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, std::equal_to<TSCEInternalCellReference>, std::hash<TSCEInternalCellReference>, true>, std::allocator<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, std::equal_to<TSCEInternalCellReference>, std::hash<TSCEInternalCellReference>, true>>="__value_"f}}}
v24@0:8{TSCEGridDimensions=II}16
B40@0:8{TSUCellCoord=ISBB}16@24r^{TSKUIDStruct=QQ}32
{unordered_map<TSCECellRef, TSCEFormulaObject *, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, std::allocator<std::pair<const TSCECellRef, TSCEFormulaObject *>>>="__table_"{__hash_table<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>, std::allocator<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>>="__value_"f}}}
{unordered_set<TSCECellRef, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, std::allocator<TSCECellRef>>="__table_"{__hash_table<TSCECellRef, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, std::allocator<TSCECellRef>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<TSCECellRef, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCECellRef, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCECellRef, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCECellRef, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCECellRef, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCECellRef, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCECellRef, void *> *>, std::allocator<std::__hash_node<TSCECellRef, void *>>>="__value_"{__hash_node_base<std::__hash_node<TSCECellRef, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::hash<TSCECellRef>>="__value_"Q}"__p3_"{__compressed_pair<float, std::equal_to<TSCECellRef>>="__value_"f}}}
v36@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24S32
{unordered_set<TSKUIDStruct, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<TSKUIDStruct>>={__hash_table<TSKUIDStruct, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<TSKUIDStruct>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *>, std::allocator<std::__hash_node<TSKUIDStruct, void *>>>={__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSKUIDStruct>>=Q}{__compressed_pair<float, std::equal_to<TSKUIDStruct>>=f}}}20@0:8S16
{vector<TSCESubFormulaOwnerIndex, std::allocator<TSCESubFormulaOwnerIndex>>=^S^S{__compressed_pair<TSCESubFormulaOwnerIndex *, std::allocator<TSCESubFormulaOwnerIndex>>=^S}}16@0:8
v28@0:8S16@?20
{unordered_map<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *, std::hash<TSCESubFormulaOwnerIndex>, std::equal_to<TSCESubFormulaOwnerIndex>, std::allocator<std::pair<const TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>>>="__table_"{__hash_table<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, std::__unordered_map_hasher<TSCESubFormulaOwnerIndex, std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, std::hash<TSCESubFormulaOwnerIndex>, std::equal_to<TSCESubFormulaOwnerIndex>, true>, std::__unordered_map_equal<TSCESubFormulaOwnerIndex, std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, std::equal_to<TSCESubFormulaOwnerIndex>, std::hash<TSCESubFormulaOwnerIndex>, true>, std::allocator<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCESubFormulaOwnerIndex, std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, std::hash<TSCESubFormulaOwnerIndex>, std::equal_to<TSCESubFormulaOwnerIndex>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCESubFormulaOwnerIndex, std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, std::equal_to<TSCESubFormulaOwnerIndex>, std::hash<TSCESubFormulaOwnerIndex>, true>>="__value_"f}}}
{unordered_map<TSCECellRef, NSString *, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, std::allocator<std::pair<const TSCECellRef, NSString *>>>="__table_"{__hash_table<std::__hash_value_type<TSCECellRef, NSString *>, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, NSString *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, NSString *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>, std::allocator<std::__hash_value_type<TSCECellRef, NSString *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, NSString *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, NSString *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>>="__value_"f}}}
v32@0:8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16@?24
@40@0:8@16r^{TSKUIDStruct=QQ}24^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}32
@40@0:8@16r^{TSKUIDStruct=QQ}24r^{TSUCellCoord=ISBB}32
B40@0:8{TSUCellCoord=ISBB}16@24^Q32
@"TSCECellCoordinateVector"
@32@0:8^{TSCEASTNodeArray=*QQB}16r^{TSUCellCoord=ISBB}24
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32@0:8@16r^{TSKUIDStruct=QQ}24
d76@0:8d16@24q32d40I48^v52^v60^v68
B60@0:8d16@24q32I40^v44^v52
@32@0:8@16r^v24
@32@0:8I16C20^{TSKUIDStruct=QQ}24
C32@0:8{_NSRange=QQ}16
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}32@0:8r^v16r^v24
@68@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@40{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48i64
I32@0:8^v16^{TSTColumnOrRowMap=IIIB}24
{_NSRange=QQ}32@0:8r^{TSTColumnOrRowMap=IIIB}16r^v24
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16r^v32r^v40
{TSUCellCoord=ISBB}40@0:8{TSUCellCoord=ISBB}16r^v24r^v32
^v48@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16r^v32r^v40
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}48@0:8r^v16^@24{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32
{set<TSTColumnOrRowMap, TSTColumnOrRowMapTgtLess, std::allocator<TSTColumnOrRowMap>>="__tree_"{__tree<TSTColumnOrRowMap, TSTColumnOrRowMapTgtLess, std::allocator<TSTColumnOrRowMap>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<TSTColumnOrRowMap, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, TSTColumnOrRowMapTgtLess>="__value_"Q}}}
@48@0:8Q16@24@32Q40
v72@0:8@16^q24^q32^q40^q48^q56^q64
v48@0:8@16^q24^q32^q40
@"NSCalendar"
{unordered_map<TSKUIDStruct, TSTPlanForGroupingCell, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSTPlanForGroupingCell>>>={__hash_table<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>=f}}}24@0:8@16
B40@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@32
@48@0:8@16@24q32@40
v44@0:8@16S24@28@36
B56@0:8@16r^v24@32@40@48
S24@0:8q16
@48@0:8Q16q24@32@40
@60@0:8d16C24@28@36{TSKUIDStruct=QQ}44
{vector<TSUCellCoord, std::allocator<TSUCellCoord>>=^{TSUCellCoord}^{TSUCellCoord}{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>=^{TSUCellCoord}}}16@0:8
v40@0:8{vector<TSUCellCoord, std::allocator<TSUCellCoord>>=^{TSUCellCoord}^{TSUCellCoord}{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>=^{TSUCellCoord}}}16
Q24@0:8C16B20
i28@0:8@16{TSUViewRowIndex=I}24
v40@0:8C16B20^@24^@32
i26@0:8@16{TSUViewColumnIndex=S}24
i56@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16@?24@?32@?40@?48
v52@0:8{TSUViewRowIndex=I}16@?20@?28@?36@?44
{TSUModelCellCoord={TSUCellCoord=ISBB}}24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@40@0:8r^{TSKUIDStruct=QQ}16r^v24r^v32
r^{TSUCellCoord=ISBB}16@0:8
@"TSCEFormulaRewrite_RegionInfo"
{unordered_map<TSUCellCoord, TSUCellCoord, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSUCellCoord>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSUCellCoord>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
@48@0:8r^{TSKUIDStruct=QQ}16r^v24r^{TSKUIDStruct=QQ}32r^v40
B32@0:8^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16{TSUCellCoord=ISBB}24
S24@0:8I16S20
{TSUCellCoord=ISBB}32@0:8{TSUColumnRowOffset=ii}16{TSUCellCoord=ISBB}24
I28@0:8Q16I24
@"TSTHiddenStateIndexSet"
v56@0:8@16@24{TSUCellCoord=ISBB}32Q40^B48
{TSTPerformanceLoggingToken=@Q}16@0:8
v32@0:8{TSTPerformanceLoggingToken=@Q}16
{TSTPerformanceLoggingToken="logHandle"@"NSObject<OS_os_log>""signpostID"Q}
c24@0:8^{TSCEEvaluationContext=}16
{vector<TSCEGrid, std::allocator<TSCEGrid>>="__begin_"^{TSCEGrid}"__end_"^{TSCEGrid}"__end_cap_"{__compressed_pair<TSCEGrid *, std::allocator<TSCEGrid>>="__value_"^{TSCEGrid}}}
B32@0:8{CGPoint=dd}16
v40@0:8@16^{CGContext=}24@32
v40@0:8@"TSWPUIGraphicalAttachment"16^{CGContext=}24@"TSWPSelection"32
@"TSTTableNameSelection"
@24@0:8r*16
q24@0:8q16
q32@0:8q16@24
@56@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32q48
@40@0:8{TSKUIDStruct=QQ}16q32
@34@0:8{TSUModelColumnIndex=S}16q18@26
r^{TSCEFunctor=@C}16@0:8
{TSCEFunctor="_formula"@"TSCEFormulaObject""_numArgs"C}
@"TSTFormulaRewriteSpec"
{TSUViewCellCoord="_coord"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}}
@"TSTPivotTranslator"
i32@0:8@16S24B28
i28@0:8@16S24
{TSCEAnyRef=S{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}{TSKUIDStruct=QQ}B@}16@0:8
@45@0:8@16r^{TSKUIDStruct=QQ}24{TSUPreserveFlags=C}32@33B41
@45@0:8@16@24{TSUPreserveFlags=C}32@33B41
{TSCEAnyRef="_refType"S"_spanningRef"{TSCESpanningRangeRef="rangeRef"{TSCERangeRef="range"{TSCERangeCoordinate="_topLeft"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"_bottomRight"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}}"_tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}}"rangeContext"C}"_uuidValue"{TSKUIDStruct="_lower"Q"_upper"Q}"_couldBeIntersection"B"_refSet"@"TSCEReferenceSetWrapper"}
^{TSCETableResolver=^^?}24@0:8@"<TSCEReferenceResolving>"16
C24@0:8@"TSCECategoryRef"16
{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}44@0:8@"TSCECategoryRef"16r^{TSKUIDStruct=QQ}24C32^@36
@"TSCEValueGrid"44@0:8@"TSCECategoryRef"16r^{TSKUIDStruct=QQ}24C32^@36
{vector<TSCECellRef, std::allocator<TSCECellRef>>=^{TSCECellRef}^{TSCECellRef}{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>=^{TSCECellRef}}}32@0:8@"TSCECategoryRef"16r^{TSKUIDStruct=QQ}24
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}24@0:8@"TSCECategoryRef"16
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}24@0:8@"TSCECategoryRef"16
@"<TSCEResolverContainer>"32@0:8@"NSString"16@"TSKDocumentRoot"24
@"<TSCEReferenceResolving>"40@0:8@"NSString"16@"TSKDocumentRoot"24@"<TSCEReferenceResolving>"32
@"<TSCEReferenceResolving>"40@0:8@"NSString"16@"TSKDocumentRoot"24@"NSString"32
@40@0:8q16@24@32
{TSTImportWarningSetCellWarningFlags="mCondFormatAboveAvgEqualAverageImportWarning"b1"mCondFormatAboveAvgStdDevImportWarning"b1"mCondFormatComplexFormulaImportWarning"b1"mCondFormatContainsErrorsImportWarning"b1"mCondFormatExprImportWarning"b1"mCondFormatNotContainsErrorsImportWarning"b1"mCondFormatParametersNotAllTheSameTypeImportWarning"b1"mCondFormatStopIfTrueImportWarning"b1"mCondFormatUnsupportedOperatorImportWarning"b1"mCondFormatUnsupportedStylingImportWarning"b1"mCondFormatUnsupportedTimePeriodImportWarning"b1"mUnsupportedConditionalFormatImportWarning"b1"mUnsupportedDataFormatImportWarning"b1"mDurationFormatRangeChangedUpgradeWarning"b1}
{TSTImportFormulaWarning="mType"q"mOriginalFormula"@"NSString""mSupplementaryText"@"NSString"}
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24@0:8Q16
{unordered_map<TSCECellRef, TSTImportWarningSet *, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, std::allocator<std::pair<const TSCECellRef, TSTImportWarningSet *>>>="__table_"{__hash_table<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>, std::allocator<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>>="__value_"f}}}
{vector<TSCECellRef, std::allocator<TSCECellRef>>="__begin_"^{TSCECellRef}"__end_"^{TSCECellRef}"__end_cap_"{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>="__value_"^{TSCECellRef}}}
@36@0:8q16@24i32
@132@0:8{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@112i120@124
v132@0:8{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@112i120@124
v64@0:8{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16@48r^{TSKUIDStruct=QQ}56
v72@0:8{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16@48r^{TSKUIDStruct=QQ}56B64B68
@56@0:8{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16r^{TSKUIDStruct=QQ}48
v40@0:8i16@20d28B36
v52@0:8i16@20d28B36d40B48
v60@0:8@16B24B28@32B40i44i48@52
v56@0:8{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16r^{TSKUIDStruct=QQ}48
v48@0:8{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16
v28@0:8@16c24
v40@0:8@16i24i28B32B36
v32@0:8@16i24i28
v56@0:8@16{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}24
v56@0:8{vector<TSCEReferenceValue, std::allocator<TSCEReferenceValue>>=^{TSCEReferenceValue}^{TSCEReferenceValue}{__compressed_pair<TSCEReferenceValue *, std::allocator<TSCEReferenceValue>>=^{TSCEReferenceValue}}}16r^{TSKUIDStruct=QQ}40@48
v24@0:8S16s20
v24@0:8c16c20
B32@0:8@16^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24
@48@0:8@16{TSKUIDStruct=QQ}24{TSUCellCoord=ISBB}40
^{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB}36@0:8@16i24^{TSCEWarningReportingContext=BB@}28
@36@0:8@16i24^{TSCEWarningReportingContext=BB@}28
B36@0:8@16i24^{TSCEWarningReportingContext=BB@}28
{TSCEGrid=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}44@0:8@16i24^{TSCEEvaluationContext=}28r^{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}36
^{TSCEReferenceValue=^^?@{TSUCellCoord=ISBB}{TSUPreserveFlags=C}BB}36@0:8@16i24^{TSCEWarningReportingContext=BB@}28
^{TSCEGrid=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}16@0:8
^{TSCEReferenceValue=^^?@{TSUCellCoord=ISBB}{TSUPreserveFlags=C}BB}16@0:8
B112@0:8{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16
v32@0:8@16^v24
{unordered_map<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
@48@0:8@16@24^B32^B40
@40@0:8@16Q24@32
B24@0:8@"<TSUMultipleChoiceListChoiceProviding>"16
@"NSString"24@0:8Q16
@"NSDate"24@0:8Q16
i20@0:8c16
v44@0:8r^v16i24@28@?36
v40@0:8r^v16@24@?32
@"NSObject<TSTTableDataPayloadHashing>"
@"TSPTemporaryObjectContextDelegate"
@"TSPObjectContext"
@40@0:8@16@24^i32
@48@0:8^{TSCETableResolver=^^?}16r^{TSUCellCoord=ISBB}24r^{TSUCellCoord=ISBB}32r^{TSUPreserveFlags=C}40
@32@0:8^{TSCETableResolver=^^?}16r^{TSCECellTractRefCore={TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSKUIDStruct=QQ}C{TSUPreserveFlags=C}BBB}24
@56@0:8^v16r^{TSKUIDStruct=QQ}24r^{TSUCellCoord=ISBB}32r^{TSUCellCoord=ISBB}40r^{TSUPreserveFlags=C}48
r^{TSCECellTractRefCore={TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSKUIDStruct=QQ}C{TSUPreserveFlags=C}BBB}16@0:8
@32@0:8r^{TSCEGridCoord=II}16r^{TSCECellTractRefCore={TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSKUIDStruct=QQ}C{TSUPreserveFlags=C}BBB}24
{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}24@0:8{TSUCellCoord=ISBB}16
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}32@0:8^v16B24B28
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}32@0:8r^{TSUCellCoord=ISBB}16B24B28
{shared_ptr<TSCEValue>=^{TSCEValue}^{__shared_weak_count}}16@0:8
v32@0:8{shared_ptr<TSCEValue>=^{TSCEValue}^{__shared_weak_count}}16
{shared_ptr<TSCEValue>="__ptr_"^{TSCEValue}"__cntrl_"^{__shared_weak_count}}
B28@0:8I16I20B24
C20@0:8C16
B24@0:8C16C20
@32@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16@24
v32@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16@24
v40@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16@24@32
v36@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16@24B32
v44@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16@24@32B40
v36@0:8{TSUDecimal={?=[2Q]}}16B32
v32@0:8{TSUDecimal={?=[2Q]}}16
v24@0:8r^{TSUDecimal={?=[2Q]}}16
v48@0:8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@24B32^B36B44
@32@0:8C16B20^B24
B32@0:8C16@20S28
v28@0:8B16C20B24
@28@0:8C16^B20
@24@0:8^B16
v24@0:8r^{TSCEAnyRef=S{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}{TSKUIDStruct=QQ}B@}16
v24@0:8r^{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}16
@40@0:8Q16@24@32
@40@0:8I16C20{TSKUIDStruct=QQ}24
@48@0:8S16C20{TSKUIDStruct=QQ}24d40
v28@0:8S16@20
v24@0:8C16S20
Q36@0:8S16^@20^@28
v28@0:8S16Q20
^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}24@0:8{TSUCellCoord=ISBB}16
v36@0:8{TSUCellCoord=ISBB}16B24@?28
@40@0:8{TSUCellCoord=ISBB}16^B24^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}32
@32@0:8{TSUCellCoord=ISBB}16^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}24
{?=IIIIIIIIIS}100@0:8@16@24@32@40@48@56@64@72@80^{?={?=Cb8b16b16b16b16b16}[0C]}88B96
v68@0:8@16{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32@40@48B56B60B64
v64@0:8@16{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32@40@48B56B60
v72@0:8@16{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32@40@48B56B60^B64
v60@0:8@16r^{TSKUIDStruct=QQ}24@32@40B48B52B56
{?=IIIIIIIIIS}32@0:8@16{TSUCellCoord=ISBB}24
{?=IIIIIIIIIS}36@0:8@16^{?={?=Cb8b16b16b16b16b16}[0C]}24B32
@32@0:8@16d24
v32@0:8@16B24C28
v40@0:8@16@24B32C36
v32@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16{TSUCellCoord=ISBB}24
@24@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}16@0:8
v32@0:8^@16@24
v40@0:8^@16@24@?32
@24@0:8i16B20
v56@0:8@16r^{TSKUIDStruct=QQ}24@32@40B48B52
{vector<TSTCell *, std::allocator<TSTCell *>>=^@^@{__compressed_pair<TSTCell *__strong *, std::allocator<TSTCell *>>=^@}}44@0:8{TSUModelRowIndex=I}16@20^v28@?36
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}40@0:8@16{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32
v48@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16r^{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}40
@"TSTTableDataList"
@"TSTTableTileStorage"
@"TSTTableHeaderStorage"
@"TSPLazyReference"
@"TSTMergeRegionMap"
@48@0:8{_NSRange=QQ}16{_NSRange=QQ}32
@32@0:8r^v16r^{TSCEGridDimensions=II}24
{TSCEGridCoord=II}16@0:8
B24@0:8r^{TSCEGridCoord=II}16
v24@0:8r^{TSCEGridCoord=II}16
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24@0:8I16I20
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24@0:8r^{TSCEGridCoord=II}16
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24@0:8Q16
{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}16@0:8
v32@0:8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16r^{TSCEGridCoord=II}24
@32@0:8r^{TSCEGridCoord=II}16i24i28
v28@0:8I16@?20
{TSCEGridCoord="column"I"row"I}
{unordered_map<TSCEGridCoord, TSCEValue, std::hash<TSCEGridCoord>, std::equal_to<TSCEGridCoord>, std::allocator<std::pair<const TSCEGridCoord, TSCEValue>>>="__table_"{__hash_table<std::__hash_value_type<TSCEGridCoord, TSCEValue>, std::__unordered_map_hasher<TSCEGridCoord, std::__hash_value_type<TSCEGridCoord, TSCEValue>, std::hash<TSCEGridCoord>, std::equal_to<TSCEGridCoord>, true>, std::__unordered_map_equal<TSCEGridCoord, std::__hash_value_type<TSCEGridCoord, TSCEValue>, std::equal_to<TSCEGridCoord>, std::hash<TSCEGridCoord>, true>, std::allocator<std::__hash_value_type<TSCEGridCoord, TSCEValue>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCEGridCoord, std::__hash_value_type<TSCEGridCoord, TSCEValue>, std::hash<TSCEGridCoord>, std::equal_to<TSCEGridCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCEGridCoord, std::__hash_value_type<TSCEGridCoord, TSCEValue>, std::equal_to<TSCEGridCoord>, std::hash<TSCEGridCoord>, true>>="__value_"f}}}
@24@0:8^{TSCEGridAccessContext=@^{TSCEFunctionArgSpec}i^{TSCEEvaluationContext}BBBBBCC}16
@28@0:8r^{TSCEReferenceValue=^^?@{TSUCellCoord=ISBB}{TSUPreserveFlags=C}BB}16C24
@"TSCEEvalRef"
@52@0:8{?={?=II}{?=II}}16^{CGAffineTransform=dddddd}32d40B48
v60@0:8@16{?={?=II}{?=II}}24^{CGAffineTransform=dddddd}40d48B56
@"TSKAnnotationAuthor"16@0:8
v24@0:8@"TSKAnnotationAuthor"16
@"NSDate"16@0:8
@"TSDCommentStorage"16@0:8
v24@0:8@"TSDCommentStorage"16
@64@0:8@16@24{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}32
@40@0:8@16@24{TSUModelCellCoord={TSUCellCoord=ISBB}}32
@44@0:8r^{TSKUIDStruct=QQ}16{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}24I40
@60@0:8r^{TSKUIDStruct=QQ}16r^v24@32B40r^v44r^v52
@56@0:8r^{TSKUIDStruct=QQ}16r^v24r^{TSKUIDStruct=QQ}32r^v40@48
@72@0:8r^{TSKUIDStruct=QQ}16r^v24r^{TSKUIDStruct=QQ}32r^v40@48@56r^{TSKUIDStruct=QQ}64
@48@0:8r^{TSKUIDStruct=QQ}16r^v24r^v32{TSUCellCoord=ISBB}40
@40@0:8r^v16r^v24r^{TSKUIDStruct=QQ}32
@"TSTFormulaRewrite_PivotInfo"
@"TSTAutofillSelection"
Q32@0:8@16@24
d40@0:8@16@24@32
@"NSObject<TSDContainerInfo>"16@0:8
@"TSTTableReferences"16@0:8
@"TSTSelectionDragController"16@0:8
v24@0:8@"TSTSelectionDragController"16
v24@0:8@"NSSet"16
B48@0:8@16{_NSRange=QQ}24@40
@48@0:8@16{_NSRange=QQ}24@40
B24@0:8@"UITextField"16
v24@0:8@"UITextField"16
v32@0:8@"UITextField"16q24
B48@0:8@"UITextField"16{_NSRange=QQ}24@"NSString"40
@"UIMenu"48@0:8@"UITextField"16{_NSRange=QQ}24@"NSArray"40
v32@0:8@16^{CGContext=}24
v24@0:8@"CALayer"16
v32@0:8@"CALayer"16^{CGContext=}24
@"<CAAction>"32@0:8@"CALayer"16@"NSString"24
@36@0:8{CGPoint=dd}16B32
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8{TSUCellCoord=ISBB}16
v56@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16^{?=Bdddddd}32^{CGRect={CGPoint=dd}{CGSize=dd}}40^{CGRect={CGPoint=dd}{CGSize=dd}}48
{TSUCellCoord=ISBB}32@0:8{CGPoint=dd}16
{CGAffineTransform=dddddd}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{TSUCellCoord=ISBB}48
{CGRect={CGPoint=dd}{CGSize=dd}}120@0:8@16{TSUCellCoord=ISBB}24@32{CGRect={CGPoint=dd}{CGSize=dd}}40{CGAffineTransform=dddddd}72
{CGAffineTransform=dddddd}40@0:8@16@24{TSUCellCoord=ISBB}32
v44@0:8@16Q24B32@36
v32@0:8^{CGContext=}16@24
{CGRect={CGPoint=dd}{CGSize=dd}}72@0:8@16{CGAffineTransform=dddddd}24
v48@0:8@16{?={?=II}{?=II}}24^{CGContext=}40
v48@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24^{CGContext=}40
v64@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24^{CGContext=}56
v68@0:8@16B24{CGRect={CGPoint=dd}{CGSize=dd}}28^{CGContext=}60
v80@0:8^{CGContext=}16d24{CGRect={CGPoint=dd}{CGSize=dd}}32@64{TSUCellCoord=ISBB}72
v124@0:8^{CGContext=}16{CGRect={CGPoint=dd}{CGSize=dd}}24@56{TSUCellCoord=ISBB}64q72{CGRect={CGPoint=dd}{CGSize=dd}}80i112@116
@32@0:8{CGPoint=dd}16
@"TSTTableReferences"
@"TSTSelectionDragController"
@"<TSTTableAnimationController>"
@"<TSTTableRepDelegate>"
@"<TSTTableChromeProvider>"
@"<TSTCanvasReferenceController>"
@"TSTCellRegionGatherer"
@"CAShapeLayer"
v40@0:8@16{TSUCellCoord=ISBB}24B32B36
v24@0:8@"TSTTableRep"16
v24@0:8@"TSTLayoutSpace"16
v40@0:8@"TSTCell"16{TSUCellCoord=ISBB}24B32B36
B24@0:8@"TSDRep"16
4tl:4
t*@es
"@M,
r<S[
Tg*
af3'P
KUUUUU
r-Yr
YUUUU
U@_6
F@>F
lz9~
/@o)
?Q&^
?M5i
3?4"L)L
>=kv
@R0-
$h
(|
L\
L\
L\
L\
P`
L\
L\
Xh
P`
L\
Td
L\
L\
P`
L\
P`
P`
P`
P`
P`
L\
L\
P`
L\
L\
Xh
P`
P`
P`
P`
L\
P`
L\
P`
L\
L\
L\
P`
L\
L\
L\
Td
L\
L\
Td
L\
Td
Td
L\
Xh
L\
P`
P`
L\
P`
P`
L\
L\
P`
L\
P`
P`
P`
Td
P`
P`
P`
L\
Td
Xh
P`
P`
P`
Td
P`
P`
L\
L\
P`
L\
P`
L\
P`
P`
Xh
P`
25TSTArgumentAtIndexLocator
25TSTReparentGroupsRewriter
&0:DNXblv
26TSCEASTExcludeUidsRewriter
@25TSCEASTMoveRegionRewriter
24TSCEASTTransposeRewriter
*6BNZ
'+14TSCEThunkValue
"&77
n *1nn8
9Mccccc
636TSCEASTConvertFromColonTractRewriter
`m@8?
{{{{{{{{{{
27TSTCellSpecFormulaExtractor
14TSCETokenValue
MbP?
kosx~{
\EIMQV16TSCEErrorWrapper
28TSCEASTRepairBadRefsRewriter
14TSCEErrorValue
29TSCEASTFunctionsInUseRewriter
 8Ph
15TSCEStringValue
l16TSCEBooleanValue
8TSCEGrid
98'*
!-WW
category column
aggre names col
aggre names row
'!#%4
IIIIII
43TSCEASTSearchForSageTranslationNeedIterator
26TSCEASTDescriptionIterator
13TSCEDateValue
30TSCEASTNodeCategoryRefIterator
25TSCEASTSageExportRewriter
15TSCEASTRewriter
19TSCEASTUnaryElement
20TSCEASTNumberElement
xV42?)
# 17TSCEFunction_MODE
 #&),/49>CHMRW\afkpux|
..666
WZ88;
21TSCEViewTractRefValue
19TSCEIDAllocatorFull
28TSCEASTRefExtractionIterator
KD#B
37TSCEASTExcelImportTranslationRewriter
26TSCEASTExcelImportRewriter
"(-D
<EQ&
+T8F
'W*1
'W*1
*k?NY
%47:=(@+.C
136TSTTSCEASTNodeExpressionNodeFunction
#0^^
UUUUUU
?18TSCEValueGridValue
8TSTLexer
25TSTTrackingRangeExtractor
28TSTUIDTrackingRangeExtractor
..#)..
LjpXd
")UU-3D9@
$0>M
444444
24TSCEASTClearUidsRewriter
21TSCEASTStreamIterator
17TSCEAbstractValue
42TSCEASTRemoveNumberToDateCoercionsRewriter
?_Zu
?]Zu
<_Zu
25TSCEASTInsertRowsRewriter
8?*M
lKV5w
*33TSCEASTRewriteUsingValuesRewriter
16TSCEAdditionNode
19TSCESubtractionNode
22TSCEMultiplicationNode
13TSCEPowerNode
21TSCEConcatenationNode
19TSCEGreaterThanNode
29TSCEBinaryBooleanOperatorNode
28TSCEGreaterThanOrEqualToNode
25TSCELessThanOrEqualToNode
15TSCEEqualToNode
18TSCENotEqualToNode
16TSCEPlusSignNode
ffffff
"%(+.147:>
v@26TSCEASTDeleteOwnerRewriter
.147
]r2<
~@fffff
|58;>ADF3HKNQTWZ]`ocfrtikvmxz
40TSCEASTSearchForExternalOwnerUIDIterator
9TSCELexer
26TSCEASTOwnerUidMapRewriter
28TSCEASTForceOwnerUidRewriter
42TSCEASTHostCellAgnosticOwnerUidMapRewriter
34TSCEASTBadRefWithUidInfoIdentifier
!%HM)T
)RBM
44TSCEASTNumberToDurationForSageImportRewriter
25TSCEASTLetRemovalRewriter
20TSCECategoryRefValue
22TSCEEmptyArgumentValue
!$'*-0369<?BEHKNQTWZ]`cfil
llllllll
llll
llllllll
14TSCEASTElement
27TSCEASTElementWithUidTracts
26TSCEASTElementWithChildren
39TSCEASTElementWithUidTractsWithChildren
20TSCEASTBinaryElement
19TSCEASTColonElement
24TSCEASTColonTractElement
20TSCEASTStringElement
18TSCEASTDateElement
22TSCEASTDurationElement
22TSCEASTFunctionElement
29TSCEASTUnknownFunctionElement
24TSCEASTWhitespaceElement
30TSCEASTRelativeCoordRefElement
23TSCEASTLinkedRefElement
26TSCEASTUidReferenceElement
26TSCEASTViewTractRefElement
18TSCEASTListElement
19TSCEASTThunkElement
21TSCEASTLetBindElement
25TSCEASTCategoryRefElement
12TSCENilValue
22TSCEASTElementIterator
17TSCEASTEndElement
21TSCEASTBooleanElement
21TSCEASTTagOnlyElement
19TSCEASTTokenElement
19TSCEASTArrayElement
25TSCEASTLetVariableElement
25TSCEASTLetEndScopeElement
23TSTBakeFormulasDetector
32TSCEASTNodeFormulaStringIterator
:Iss
77U77<777
cENW
25TSCEASTRemoveRowsRewriter
I!M%P)-U:>
I!M%P)-U:>
&/8AJS\enw
&.6>FNV^fnv~
&/8AJS\enw
(08@HPX`hpx
&/8AJS\enw
(08@HPX`hpx
%-5=EMU]emu}
'/7?GOW_gow
*2:BJRZbjrz
$+29@GNU\cjqx
$+29@GNU\cjqx
&/8AJS\enw
c8???
V?8???J
333333
15TSCENumberValue
25TSCEASTSageImportRewriter
20TSTPivotUidOrderNode
15TSTUidOrderNode
*<Ouu
  00AARR
32TSCEASTSearchForUidTractIterator
31TSCEASTConvertToUidRefsRewriter
16TSCEUnitlessZero
'C[[
25TSCEASTMergeCellsRewriter
29TSCEASTUndoMergeCellsRewriter
18TSCEEmptyCellValue
&3WW
&3WW
:2:?wE~w
!*18TSCEReferenceValue
NSt3__120__shared_ptr_emplaceI9TSCEValueNS_9allocatorIS1_EEEE
24TSCEASTLinkedRefRewriter
47TSTConvertFormulasFromBaseForCategoriesRewriter
45TSTConvertFormulasToBaseForCategoriesRewriter
26TSCEASTExcelExportRewriter
5RTreeIjLi2EdLi16ELi8EE
23TSTCategoryUidOrderNode
!#%')+,
$A*AAA0
333333
@31TSCEASTMergeOriginMovedRewriter
44TSCEASTSearchForNumberToDateCoercionIterator
26TSCEASTReorderRowsRewriter
17TSCERichTextValue
!%)-Z_d{
&&&&&
26TSCEASTInsertOwnerRewriter
25TSCEASTFreezeRefsRewriter
23TSCEASTThawRefsRewriter
\KK:
Ud55s
33TSCEASTConvertFromUidRefsRewriter
6CFILORU
X[^bfi
?Ufw
111?1]
34TSCEASTConvertToColonTractRewriter
23TSCEASTGroupUIDRewriter
28TSCEASTGroupNodeUIDsRewriter
25TSCEASTSetAggTypeRewriter
32TSCEASTGroupNodesChangedRewriter
34TSTResolveRelativeAncestorRewriter
36TSTConvertToRelativeAncestorRewriter
$6HZl~
1@O^
&5Gy
,;m|
-<gU
,9FS`
!.@Rds
);M\n
@Rdq
,9KVal
$1@Oap
*7FUbo|
(5BQc
#2AS
$6CS
,;JYf
!0?N
$6HZ
TSCEArchives.proto
TSCE
TSPMessages.proto
TSKArchives.proto"Y
CellReferenceArchive
column
table_id
.TSP.CFUUIDArchive"a
InternalCellReferenceArchive
coordinate
.TSCE.CellCoordinateArchive
owner_id
RelativeCellRefArchive
relative_row_offset
relative_column_offset
table_uid
.TSP.UUID
preserve_column
preserve_row
is_spanning_column
is_spanning_row
RangeReferenceArchive
table_id
.TSP.CFUUIDArchive
top_left_column
top_left_row
bottom_right_column
bottom_right_row
InternalRangeReferenceArchive
owner_id
range
.TSCE.RangeCoordinateArchive"
IndexSetArchive
entries
2#.TSCE.IndexSetArchive.IndexSetEntry
IndexSetEntry
range_begin
range_end
CellCoordSetArchive
column_entries
2%.TSCE.CellCoordSetArchive.ColumnEntry
ColumnEntry
column
row_set
.TSCE.IndexSetArchive"
InternalCellRefSetArchive
owner_entries
2*.TSCE.InternalCellRefSetArchive.OwnerEntry
OwnerEntry
owner_id
coord_set
.TSCE.CellCoordSetArchive"<
ColumnRowSize
num_columns
num_rows
CellRectArchive
origin
.TSCE.CellCoordinateArchive
size
.TSCE.ColumnRowSize"
CellRefSetArchive
owner_entries
2".TSCE.CellRefSetArchive.OwnerEntry
OwnerEntry
owner_uid
.TSP.UUID
coord_set
.TSCE.CellCoordSetArchive"
UidCoordSetArchive
column_entries
2$.TSCE.UidCoordSetArchive.ColumnEntry
ColumnEntry
column
.TSP.UUID
row_set
.TSP.UUID"
UidCellRefSetArchive
owner_entries
2%.TSCE.UidCellRefSetArchive.OwnerEntry
OwnerEntry
owner_uid
.TSP.UUID
coord_set
.TSCE.UidCoordSetArchive"
ReferencesToDirtyArchive
to_dirty_owner_ids
.TSCE.IndexSetArchive
to_dirty_cells
.TSCE.InternalCellRefSetArchive
to_dirty_cells_additional
.TSCE.InternalCellRefSetArchive
to_dirty_range_refs
2#.TSCE.InternalRangeReferenceArchive
calc_in_progress_cells
.TSCE.InternalCellRefSetArchive
to_update_precedents_cells
.TSCE.InternalCellRefSetArchive"
CoordMapperArchive
table_uid
.TSP.UUID
summary_rows_set
.TSCE.IndexSetArchive
summary_columns_set
.TSCE.IndexSetArchive
label_rows_set
.TSCE.IndexSetArchive
base_to_view_row_map
2(.TSCE.CoordMapperArchive.BaseToViewEntry
base_to_view_column_map
2(.TSCE.CoordMapperArchive.BaseToViewEntry
summary_to_view_row_map
2+.TSCE.CoordMapperArchive.SummaryToViewEntry
summary_to_view_column_map
2+.TSCE.CoordMapperArchive.SummaryToViewEntry
BaseToViewEntry
base_column_or_row
view_column_or_row
SummaryToViewEntry
summary_column_or_row
view_column_or_row
ReferenceArchive
reference_type
2$.TSCE.ReferenceArchive.ReferenceType
cell_reference
.TSCE.CellReferenceArchive
range_reference
.TSCE.RangeReferenceArchive"M
ReferenceType
CELL_REFERENCE
RANGE_REFERENCE
NAME_DEPENDENCY
EdgeArchive
column
is_precedent
owner_id
.TSP.CFUUIDArchive"
EdgesArchive
packed_edge_without_owner
packed_edge_with_owner
owner_id_for_edge
.TSP.CFUUIDArchive
internal_owner_id_for_edge
ExpandedEdgesArchive
edge_without_owner_rows
edge_without_owner_columns
edge_with_owner_rows
edge_with_owner_columns
internal_owner_id_for_edge
CellRecordArchive
column
 dirty_self_plus_precedents_count
is_in_a_cycle
false
edge
.TSCE.EdgeArchiveB
contains_a_formula
true
has_calculated_precedents
false
#calculate_precedents_on_next_recalc
falseB
)translate_for_excel_import_on_next_recalc
false
edges
.TSCE.EdgesArchive"`
CellDependenciesArchive
cell_record
.TSCE.CellRecordArchive
num_dirty_cells
CellRecordExpandedArchive
column
 dirty_self_plus_precedents_count
is_in_a_cycle
false
has_calculated_precedents
false
expanded_edges
.TSCE.ExpandedEdgesArchive"W
CellDependenciesExpandedArchive
cell_record
.TSCE.CellRecordExpandedArchive"
CellRecordTileArchive
internal_owner_id
tile_column_begin
tile_row_begin
cell_records
.TSCE.CellRecordExpandedArchive"I
CellDependenciesTiledArchive
cell_record_tiles
.TSP.Reference"
VolatileDependenciesArchive
volatile_time_cell_column
volatile_time_cell_row
volatile_random_cell_column
volatile_random_cell_row
volatile_locale_cell_column
volatile_locale_cell_row
volatile_location_cell_column
volatile_location_cell_row
volatile_compass_cell_column
volatile_compass_cell_row
 volatile_remote_data_cell_column
volatile_remote_data_cell_row
%volatile_sheet_table_name_cell_column
"volatile_sheet_table_name_cell_row
!calculated_dependency_cell_column
calculated_dependency_cell_row
 volatile_geometry_cell_reference
.TSCE.CellReferenceArchive
volatile_geometry_cell
.TSCE.CellCoordinateArchive"
#VolatileDependenciesExpandedArchive
volatile_time_cells
.TSCE.CellCoordSetArchive
volatile_random_cells
.TSCE.CellCoordSetArchive
volatile_locale_cells
.TSCE.CellCoordSetArchive
volatile_sheet_table_name_cells
.TSCE.CellCoordSetArchive
volatile_remote_data_cells
.TSCE.CellCoordSetArchive
volatile_geometry_cell_refs
.TSCE.InternalCellRefSetArchive"c
 RTreeInternalNodeContentsArchive
child
.TSCE.RTreeNodeArchive"l
RTreeLeafNodeContentsArchive
cell_reference
.TSCE.CellReferenceArchive"
RTreeNodeArchive
level
count
internal_node_contents
2&.TSCE.RTreeInternalNodeContentsArchive
leaf_node_contents
2".TSCE.RTreeLeafNodeContentsArchive"
RTreeArchive
data_file_id
data_size
data_num_dims
data_elem_size
data_elem_real_size
data_max_nodes
data_min_nodes
root
.TSCE.RTreeNodeArchive"
RangeBackDependencyArchive
cell_coord_row
cell_coord_column
range_reference
.TSCE.RangeReferenceArchive
internal_range_reference
2#.TSCE.InternalRangeReferenceArchive"U
RangeDependenciesArchive
back_dependency
2 .TSCE.RangeBackDependencyArchive"
RangePrecedentsTileArchive
to_owner_id
from_to_range
23.TSCE.RangePrecedentsTileArchive.FromToRangeArchive
FromToRangeArchive
from_coord
.TSCE.CellCoordinateArchive
refers_to_rect
.TSCE.CellRectArchive"N
RangeDependenciesTiledArchive
range_precedents_tile
.TSP.Reference"
SpanningDependenciesArchive
column
range_context
2..TSCE.SpanningDependenciesArchive.RangeContext
cell
.TSCE.CellReferenceArchive
total_range_for_deleted_table
.TSCE.RangeCoordinateArchive
body_range_for_deleted_table
.TSCE.RangeCoordinateArchive
referring_column_to_local_cells
2=.TSCE.SpanningDependenciesArchive.ReferringColumnToLocalCells
 referring_column_to_remote_cells
2>.TSCE.SpanningDependenciesArchive.ReferringColumnToRemoteCells
ReferringColumnToLocalCells
column
range_context
2..TSCE.SpanningDependenciesArchive.RangeContext
cell_coordinate
.TSCE.CellCoordinateArchive
ReferringColumnToRemoteCells
column
range_context
2..TSCE.SpanningDependenciesArchive.RangeContext
internal_cell_reference
2".TSCE.InternalCellReferenceArchive"0
RangeContext
DEFAULT
INCLUDE_HEADERS
#SpanningDependenciesExpandedArchive
coord_refers_to_spans
2B.TSCE.SpanningDependenciesExpandedArchive.CellCoordRefersToExtents
total_range_for_table
.TSCE.RangeCoordinateArchive
body_range_for_table
.TSCE.RangeCoordinateArchive
ExtentRange
extent_begin
extent_end
ExtentRangeWithTableWithContext
owner_id
range_context
26.TSCE.SpanningDependenciesExpandedArchive.RangeContext
ranges
25.TSCE.SpanningDependenciesExpandedArchive.ExtentRange
CellCoordRefersToExtents
coordinate
.TSCE.CellCoordinateArchive
ranges_by_table_context
2I.TSCE.SpanningDependenciesExpandedArchive.ExtentRangeWithTableWithContext"0
RangeContext
DEFAULT
INCLUDE_HEADERS
WholeOwnerDependenciesArchive
dependent_cell
2".TSCE.InternalCellReferenceArchive"a
%WholeOwnerDependenciesExpandedArchive
dependent_cells
.TSCE.InternalCellRefSetArchive"
CellErrorsArchive
errors
2$.TSCE.CellErrorsArchive.ErrorForCell
ErrorForCell
coordinate
.TSCE.CellCoordinateArchive
error_flavor
2#.TSCE.CellErrorsArchive.ErrorFlavor
err_due_to_cell
2".TSCE.InternalCellReferenceArchive"i
ErrorFlavor
NONE
ERROR
REF_ERROR
CIRCULAR_REF_ERROR
UNSUPPORTED_FUNCTION_ERROR
UuidReferencesArchive
table_refs
2$.TSCE.UuidReferencesArchive.TableRef
table_uuid_refs
2,.TSCE.UuidReferencesArchive.TableWithUuidRef
TableRef
owner_uuid
.TSP.UUID
coord_set
.TSCE.CellCoordSetArchive
UuidRef
uuid
.TSP.UUID
coord_set
.TSCE.CellCoordSetArchive
TableWithUuidRef
owner_uuid
.TSP.UUID
uuid_refs
2#.TSCE.UuidReferencesArchive.UuidRef"
FormulaOwnerDependenciesArchive
formula_owner_uid
.TSP.UUID
internal_formula_owner_id
owner_kind
cell_dependencies
2%.TSCE.CellDependenciesExpandedArchive
range_dependencies
.TSCE.RangeDependenciesArchive
volatile_dependencies
2).TSCE.VolatileDependenciesExpandedArchive
spanning_column_dependencies
2).TSCE.SpanningDependenciesExpandedArchive
spanning_row_dependencies
2).TSCE.SpanningDependenciesExpandedArchive
whole_owner_dependencies
2+.TSCE.WholeOwnerDependenciesExpandedArchive
cell_errors
.TSCE.CellErrorsArchive
formula_owner
.TSP.Reference
base_owner_uid
.TSP.UUID
tiled_cell_dependencies
2".TSCE.CellDependenciesTiledArchive
uuid_references
.TSCE.UuidReferencesArchive
tiled_range_dependencies
2#.TSCE.RangeDependenciesTiledArchive"
FormulaOwnerInfoArchive
formula_owner_id
.TSP.CFUUIDArchive
cell_dependencies
.TSCE.CellDependenciesArchive
range_dependencies
.TSCE.RangeDependenciesArchive
volatile_dependencies
2!.TSCE.VolatileDependenciesArchive
spanning_column_dependencies
2!.TSCE.SpanningDependenciesArchive
spanning_row_dependencies
2!.TSCE.SpanningDependenciesArchive
whole_owner_dependencies
2#.TSCE.WholeOwnerDependenciesArchive
cell_errors
.TSCE.CellErrorsArchive
formula_owner
.TSP.Reference"Q
SubFormulaOwnerIDArchive
base_owner_uid
.TSP.UUID
owner_kind
OwnerIDMapArchive
map_entry
2..TSCE.OwnerIDMapArchive.OwnerIDMapArchiveEntry
unregistered_internal_owner_id
OwnerIDMapArchiveEntry
internal_owner_id
owner_id
.TSP.CFUUIDArchive"0
UidLookupListArchive
uuids
.TSP.UUID"
DependencyTrackerArchive
formula_owner_info
.TSCE.FormulaOwnerInfoArchive
dirty_leaf
.TSCE.CellReferenceArchiveB
owner_id_map
.TSCE.OwnerIDMapArchive
internal_dirty_leaf
2".TSCE.InternalCellReferenceArchiveB
number_of_formulas
formula_owner_dependencies
.TSP.Reference"e
RemoteDataSpecifierArchive
function_index
symbol
attribute
date
RemoteDataValueMapArchive
entry
22.TSCE.RemoteDataValueMapArchive.RemoteDataMapEntry
RemoteDataMapEntry
specifier
2 .TSCE.RemoteDataSpecifierArchive
value
.TSCE.CellValueArchive"
StockArchive
symbol
date
attribute
2!.TSCE.StockArchive.AttributeEntry
AttributeEntry
attribute
value
RemoteDataStoreArchive
value_map
.TSCE.RemoteDataValueMapArchive
stocks
.TSCE.StockArchive"q
NameTrackedReferencePair
name
tracked_reference
.TSP.Reference
tracked_reference_id
NamesByTrackedReferenceArchive
table_id
.TSP.CFUUIDArchive
name_tracked_reference_pair
.TSCE.NameTrackedReferencePair"
NamedReferenceManagerArchive
reference_tracker
.TSP.Reference
#names_by_tracked_reference_by_table
2$.TSCE.NamesByTrackedReferenceArchiveB
UuidSetStoreArchive
uuidSet
2!.TSCE.UuidSetStoreArchive.UuidSet
UuidSet
uuid
.TSP.UUID
index_of_set
UuidReferenceMapArchive
cell_refs_for_uuid
2-.TSCE.UuidReferenceMapArchive.CellRefsForUuid
CellRefsForUuid
uuid
.TSP.UUID
cell_ref
2".TSCE.InternalCellReferenceArchive
cell_refs
.TSCE.InternalCellRefSetArchive"
GroupByNodeMapArchive
refs_for_group_by
20.TSCE.GroupByNodeMapArchive.GroupNodesForGroupBy
CellRefsForGroupNode
group_node_uid
.TSP.UUID
cell_refs
.TSCE.InternalCellRefSetArchive
GroupNodesForGroupBy
group_by_uid
.TSP.UUID
refs_for_group_node
20.TSCE.GroupByNodeMapArchive.CellRefsForGroupNode"
CalculationEngineArchive
base_date_1904
dependency_tracker
.TSCE.DependencyTrackerArchive
named_reference_manager
.TSP.Reference
excel_import_date_mode
22.TSCE.CalculationEngineArchive.ExcelImportDateMode:
DATE_MODE_1900
saved_locale_identifier_for_4_2
document_random_seed
uuid_reference_map
.TSCE.UuidReferenceMapArchive
document_timestamp
document_timezone
table_uid_history
2 .TSCE.RewriteTableUIDInfoArchive
remote_data_store
.TSP.Reference
group_node_map
.TSCE.GroupByNodeMapArchive
header_name_manager
.TSP.Reference
refs_to_dirty
.TSP.Reference
saved_locale_identifier
begin_tracking_names_legacy_nrm
.TSP.UUID
end_tracking_names_legacy_nrm
.TSP.UUID"_
ExcelImportDateMode
DATE_MODE_1900
DATE_MODE_1900_LEGACY
DATE_MODE_1904_LEGACY
PreserveColumnRowFlagsArchive
begin_row_is_absolute
begin_column_is_absolute
end_row_is_absolute
end_column_is_absolute
CategoryReferenceArchive
group_by_uid
.TSP.UUID
column_uid
.TSP.UUID
aggregate_type
group_level
group_uids
2,.TSCE.CategoryReferenceArchive.CatRefUidList
preserve_flags
2#.TSCE.PreserveColumnRowFlagsArchive
relative_column
relative_group_uid
.TSP.UUID
absolute_group_uid
.TSP.UUID
option_refers_to_pivot_rows
option_refers_to_pivot_columns
agg_index_level
option_show_aggregate_name
CatRefUidList
.TSP.UUID"
ASTNodeArrayArchive
AST_node
2(.TSCE.ASTNodeArrayArchive.ASTNodeArchive
 ASTLocalCellReferenceNodeArchive
row_handle
column_handle
row_is_sticky
column_is_sticky
%ASTCrossTableCellReferenceNodeArchive
row_handle
column_handle
row_is_sticky
column_is_sticky
table_id
.TSP.CFUUIDArchive
)AST_reference_whitespace_after_sheet_name
*AST_reference_whitespace_before_table_name
)AST_reference_whitespace_after_table_name
,AST_reference_whitespace_before_cell_address
ASTColumnCoordinateArchive
column
absolute
false
ASTRowCoordinateArchive
absolute
false
ASTUidList
.TSP.UUID
ASTUidTract
columnUids
2$.TSCE.ASTNodeArrayArchive.ASTUidList
rowUids
2$.TSCE.ASTNodeArrayArchive.ASTUidList
is_range_ref
purpose
2,.TSCE.ASTNodeArrayArchive.ASTUidTractPurpose
preserve_rectangular
true
ASTStickyBits
begin_row_is_absolute
begin_column_is_absolute
end_row_is_absolute
end_column_is_absolute
ASTUidTractList
tract
2%.TSCE.ASTNodeArrayArchive.ASTUidTract
sticky_bits
2'.TSCE.ASTNodeArrayArchive.ASTStickyBits
ASTUidCoordinateArchive
column_uid
.TSP.UUID
row_uid
.TSP.UUID
column_absolute
row_absolute
ASTCategoryLevels
AST_column_group_level
AST_row_group_level
AST_agg_index_level
ASTCategoryReferenceArchive
category_ref
.TSCE.CategoryReferenceArchive
ASTColonTractArchive
relative_column
2P.TSCE.ASTNodeArrayArchive.ASTColonTractArchive.ASTColonTractRelativeRangeArchive
relative_row
2P.TSCE.ASTNodeArrayArchive.ASTColonTractArchive.ASTColonTractRelativeRangeArchive
absolute_column
2P.TSCE.ASTNodeArrayArchive.ASTColonTractArchive.ASTColonTractAbsoluteRangeArchive
absolute_row
2P.TSCE.ASTNodeArrayArchive.ASTColonTractArchive.ASTColonTractAbsoluteRangeArchive
preserve_rectangular
true
!ASTColonTractRelativeRangeArchive
range_begin
range_end
!ASTColonTractAbsoluteRangeArchive
range_begin
range_end
&ASTCrossTableReferenceExtraInfoArchive
table_id
.TSP.CFUUIDArchive
)AST_reference_whitespace_after_sheet_name
*AST_reference_whitespace_before_table_name
)AST_reference_whitespace_after_table_name
,AST_reference_whitespace_before_cell_address
ASTLetNodeWhitespace
AST_let_whitespace_after_let
#AST_let_whitespace_after_identifier
AST_let_whitespace_after_equals
"AST_let_whitespace_after_delimiter
ASTNodeArchive
AST_node_type
2%.TSCE.ASTNodeArrayArchive.ASTNodeType
AST_function_node_index
AST_function_node_numArgs
AST_number_node_number
AST_boolean_node_boolean
AST_string_node_string
AST_date_node_dateNum
"AST_date_node_suppress_date_format
"AST_date_node_suppress_time_format
AST_date_node_date_time_format
AST_duration_node_unitNum
AST_duration_node_unit
AST_duration_node_style
'AST_duration_node_duration_unit_largest
(AST_duration_node_duration_unit_smallest
%AST_duration_node_use_automatic_units
AST_token_node_boolean
AST_array_node_numCol
AST_array_node_numRow
AST_list_node_numArgs
AST_thunk_node_array
.TSCE.ASTNodeArrayArchive
'AST_local_cell_reference_node_reference
2:.TSCE.ASTNodeArrayArchive.ASTLocalCellReferenceNodeArchive
-AST_cross_table_cell_reference_node_reference
2?.TSCE.ASTNodeArrayArchive.ASTCrossTableCellReferenceNodeArchive
 AST_unknown_function_node_string
!AST_unknown_function_node_numArgs
AST_whitespace
AST_column
24.TSCE.ASTNodeArrayArchive.ASTColumnCoordinateArchive
AST_row
21.TSCE.ASTNodeArrayArchive.ASTRowCoordinateArchive
$AST_cross_table_reference_extra_info
2@.TSCE.ASTNodeArrayArchive.ASTCrossTableReferenceExtraInfoArchive
AST_uid_coordinate
21.TSCE.ASTNodeArrayArchive.ASTUidCoordinateArchive
AST_sticky_bits
2'.TSCE.ASTNodeArrayArchive.ASTStickyBits
AST_frozen_sticky_bits
2'.TSCE.ASTNodeArrayArchive.ASTStickyBits
AST_let_identifier
AST_let_e2
.TSCE.ASTNodeArrayArchive
AST_let_whitespace
2..TSCE.ASTNodeArrayArchive.ASTLetNodeWhitespace
AST_symbol
AST_tract_list
2).TSCE.ASTNodeArrayArchive.ASTUidTractList
AST_category_ref
25.TSCE.ASTNodeArrayArchive.ASTCategoryReferenceArchive
AST_colon_tract
2..TSCE.ASTNodeArrayArchive.ASTColonTractArchive
AST_number_node_decimal_low
AST_number_node_decimal_high
AST_category_levels
2+.TSCE.ASTNodeArrayArchive.ASTCategoryLevels"
ASTNodeType
ADDITION_NODE
SUBTRACTION_NODE
MULTIPLICATION_NODE
DIVISION_NODE
POWER_NODE
CONCATENATION_NODE
GREATER_THAN_NODE
GREATER_THAN_OR_EQUAL_TO_NODE
LESS_THAN_NODE
LESS_THAN_OR_EQUAL_TO_NODE
EQUAL_TO_NODE
NOT_EQUAL_TO_NODE
NEGATION_NODE
PLUS_SIGN_NODE
PERCENT_NODE
FUNCTION_NODE
NUMBER_NODE
BOOLEAN_NODE
STRING_NODE
DATE_NODE
DURATION_NODE
EMPTY_ARGUMENT_NODE
TOKEN_NODE
ARRAY_NODE
LIST_NODE
THUNK_NODE
LOCAL_CELL_REFERENCE_NODE
CROSS_TABLE_CELL_REFERENCE_NODE
COLON_NODE
REFERENCE_ERROR_NODE
UNKNOWN_FUNCTION_NODE
APPEND_WHITESPACE_NODE
PREPEND_WHITESPACE_NODE
BEGIN_EMBEDDED_NODE_ARRAY
END_THUNK_NODE
CELL_REFERENCE_NODE
COLON_NODE_WITH_UIDS
REFERENCE_ERROR_WITH_UIDS
UID_REFERENCE_NODE
LET_BIND_NODE
LET_VAR_NODE
LET_END_SCOPE_NODE
LINKED_CELL_REF_NODE
LINKED_COLUMN_REF_NODE
LINKED_ROW_REF_NODE
CATEGORY_REF_NODE
COLON_TRACT_NODE
VIEW_TRACT_REF_NODE
ASTUidTractPurpose
UIDS_INCLUDED
UIDS_PREMERGE
UIDS_PREMOVEREGION
UIDS_EXCLUDED
UIDS_ACTIVE
UIDS_PREMERGE_TOPLEFT
UIDS_REMOVED_BY_MOVE
FULLTUPLE_ROW_COLUMN_HEADER
FULLTUPLE_AGGREGATE_RULE_UID
%FULLTUPLE_ROW_COLUMN_RULE_VALUE_PAIRS
FormulaTranslationFlagsArchive
excel_import_translation
false
+number_to_date_coercion_removal_translation
false
contains_uid_form_references
false
contains_frozen_references
false
returns_percent_formatted
false"
FormulaArchive
AST_node_array
.TSCE.ASTNodeArrayArchive
host_column
host_row
host_column_is_negative
false
host_row_is_negative
false
translation_flags
2$.TSCE.FormulaTranslationFlagsArchive
host_table_uid
.TSP.UUID
host_column_uid
.TSP.UUID
host_row_uid
.TSP.UUID"I
FunctorArchive
formula
.TSCE.FormulaArchive
num_args
FormatStructArchive
format_type
decimal_places
currency_code
negative_style
show_thousands_separator
use_accounting_style
duration_style
base
base_places
base_use_minus_sign
fraction_accuracy
suppress_date_format
suppress_time_format
date_time_format
duration_unit_largest
duration_unit_smallest
RangeCoordinateArchive
top_left_column
top_left_row
bottom_right_column
bottom_right_row
TableTransposeInfoArchive
number_of_footer_rows
body_range_for_transposed_table
.TSCE.RangeCoordinateArchive"c
MergeOriginMovedArchive
src_column
src_row
dst_column
dst_row
OwnerUIDMapperArchive
table_uid
.TSP.UUID
next_table_uid
.TSP.UUID
hidden_state_for_rows_owner_uid
.TSP.UUID
$next_hidden_state_for_rows_owner_uid
.TSP.UUID
"hidden_state_for_columns_owner_uid
.TSP.UUID
'next_hidden_state_for_columns_owner_uid
.TSP.UUID
conditional_style_owner_uid
.TSP.UUID
 next_conditional_style_owner_uid
.TSP.UUID
%sort_rule_reference_tracker_owner_uid
.TSP.UUID
*next_sort_rule_reference_tracker_owner_uid
.TSP.UUID
merge_owner_uid
.TSP.UUID
next_merge_owner_uid
.TSP.UUID
category_aggregates_owner_uid
.TSP.UUID
"next_category_aggregates_owner_uid
.TSP.UUID
group_by_uid
.TSP.UUID
next_group_by_uid
.TSP.UUID
pencil_annotation_owner_uid
.TSP.UUID
 next_pencil_annotation_owner_uid
.TSP.UUID"
RewriteTableUIDInfoArchive
table_uid_map
28.TSCE.RewriteTableUIDInfoArchive.TableUIDMapEntryArchive
TableUIDMapEntryArchive
prev_table_uid
.TSP.UUID
new_table_uid
.TSP.UUID"
GroupByChangeArchive
change_type
2%.TSCE.GroupByChangeArchive.ChangeType
group_by_uid
.TSP.UUID
previous_level
updated_level
previous_to_updated_map
.TSP.UUIDMapArchive
updated_to_previous_map
.TSP.UUIDMapArchive
removed_group_uids
.TSP.UUID
grouping_column_changes
26.TSCE.GroupByChangeArchive.GroupingColumnChangeArchive
GroupingColumnChangeArchive
old_level
new_level
ChangeType
NONE
GROUP_VALUE_CHANGE
GROUP_DEFINITION_CHANGE
REMOVE_GROUP_LEVEL
ADD_GROUP_LEVEL
PROMOTE
DEMOTE
RewriteGroupNodeUIDInfoArchive
group_by_uid
.TSP.UUID
group_node_uid_map
.TSP.UUIDMapArchive"
IndexedUidsArchive
uids
2#.TSCE.IndexedUidsArchive.IndexedUid
IndexedUid
uid_for_index
.TSP.UUID
index_for_uid
RewriteRangeEntryArchive
range_location
range_length
range_uids
.TSP.UUID
offset
ColumnOrRowUuidsInfoArchive
is_rows
table_uid
.TSP.UUID
cond_style_owner_uid
.TSP.UUID
group_by_uid
.TSP.UUID
uids
.TSCE.IndexedUidsArchive
range_entries
.TSCE.RewriteRangeEntryArchive
table_range
.TSCE.RangeCoordinateArchive
insert_at_uid
.TSP.UUID
insert_opposite_uid
.TSP.UUID"
RegionInfoArchive
table_uid
.TSP.UUID
column_uids
.TSCE.IndexedUidsArchive
row_uids
.TSCE.IndexedUidsArchive"
RegionMovedInfoArchive
src_region
.TSCE.RegionInfoArchive
dst_region
.TSCE.RegionInfoArchive
span_rows
span_columns
original_src_region
.TSCE.RegionInfoArchive
final_dest_table_uid
.TSP.UUID"=
MergeSourceArchive
coord_column
coord_row
HauntedOwnerArchive
owner_uid
.TSP.UUID"H
CellCoordinateArchive
packedData
column
CellCoordinateVectorArchive
cell_coord
.TSCE.CellCoordinateArchive"p
 ExpandedCellRefObjectPairArchive
cell_ref
.TSCE.CellReferenceArchive
object
.TSP.Reference"g
ExpandedCellRefObjectMapArchive
cell_ref_object_pair
2&.TSCE.ExpandedCellRefObjectPairArchive"
FormulaAtCoordArchive
column
formula
.TSCE.FormulaArchive
repeat_previous_formula
false"
FormulaCoordPairsByOwnerArchive
owner_kind
owner_uid
.TSP.UUID
formula_at_coords
.TSCE.FormulaAtCoordArchive"[
FormulasForUndoArchive
formulas_for_owner
2%.TSCE.FormulaCoordPairsByOwnerArchive"q
FormulaRewriteCommandArchive
table_rewrite_command
.TSP.Reference
super
.TSK.CommandArchive"U
TrackedReferenceArchive
.TSCE.ASTNodeArrayArchive
formula_id
ExpandedTrackedReferenceArchive
.TSCE.ASTNodeArrayArchive
formula_column
formula_row
TrackedReferenceStoreArchive
uuid
.TSP.CFUUIDArchive
tracked_reference
.TSP.ReferenceB
contained_tracked_reference
.TSCE.TrackedReferenceArchive
$contained_expanded_tracked_reference
2%.TSCE.ExpandedTrackedReferenceArchive"
ViewTractRefArchive
table_uid
.TSP.UUID
uid_tract
2%.TSCE.ASTNodeArrayArchive.ASTUidTract
preserve_flags
2#.TSCE.PreserveColumnRowFlagsArchive
agg_index_level
column_group_level
row_group_level
BooleanCellValueArchive
value
format
.TSK.FormatStructArchive
format_is_explicit
false"
DateCellValueArchive
value
format
.TSK.FormatStructArchive
format_is_implicit
format_is_explicit
false"
NumberCellValueArchive
value
unit_index
currency_code
format
.TSK.FormatStructArchive
format_is_implicit
format_is_explicit
false
decimal_low
decimal_high
StringCellValueArchive
value
format
.TSK.FormatStructArchive
format_is_implicit
format_is_explicit
false
is_regex
false
is_case_sensitive_regex
false"y
ErrorCellValueArchive
error_type
extra_info_int
extra_info_string
extra_info_double
CellValueArchive
cell_value_type
2$.TSCE.CellValueArchive.CellValueType
boolean_value
.TSCE.BooleanCellValueArchive
date_value
.TSCE.DateCellValueArchive
number_value
.TSCE.NumberCellValueArchive
string_value
.TSCE.StringCellValueArchive
error_value
.TSCE.ErrorCellValueArchive"`
CellValueType
NIL_TYPE
BOOLEAN_TYPE
DATE_TYPE
NUMBER_TYPE
STRING_TYPE
N4TSCE20CellReferenceArchiveE
N4TSCE28InternalCellReferenceArchiveE
N4TSCE22RelativeCellRefArchiveE
N4TSCE21RangeReferenceArchiveE
N4TSCE29InternalRangeReferenceArchiveE
N4TSCE29IndexSetArchive_IndexSetEntryE
N4TSCE15IndexSetArchiveE
N4TSCE31CellCoordSetArchive_ColumnEntryE
N4TSCE19CellCoordSetArchiveE
N4TSCE36InternalCellRefSetArchive_OwnerEntryE
N4TSCE25InternalCellRefSetArchiveE
N4TSCE13ColumnRowSizeE
N4TSCE15CellRectArchiveE
N4TSCE28CellRefSetArchive_OwnerEntryE
N4TSCE17CellRefSetArchiveE
N4TSCE30UidCoordSetArchive_ColumnEntryE
N4TSCE18UidCoordSetArchiveE
N4TSCE31UidCellRefSetArchive_OwnerEntryE
N4TSCE20UidCellRefSetArchiveE
N4TSCE24ReferencesToDirtyArchiveE
N4TSCE34CoordMapperArchive_BaseToViewEntryE
N4TSCE37CoordMapperArchive_SummaryToViewEntryE
N4TSCE18CoordMapperArchiveE
N4TSCE16ReferenceArchiveE
N4TSCE11EdgeArchiveE
N4TSCE12EdgesArchiveE
N4TSCE20ExpandedEdgesArchiveE
N4TSCE17CellRecordArchiveE
N4TSCE23CellDependenciesArchiveE
N4TSCE25CellRecordExpandedArchiveE
N4TSCE31CellDependenciesExpandedArchiveE
N4TSCE21CellRecordTileArchiveE
N4TSCE28CellDependenciesTiledArchiveE
N4TSCE27VolatileDependenciesArchiveE
N4TSCE35VolatileDependenciesExpandedArchiveE
N4TSCE32RTreeInternalNodeContentsArchiveE
N4TSCE28RTreeLeafNodeContentsArchiveE
N4TSCE16RTreeNodeArchiveE
N4TSCE12RTreeArchiveE
N4TSCE26RangeBackDependencyArchiveE
N4TSCE24RangeDependenciesArchiveE
N4TSCE45RangePrecedentsTileArchive_FromToRangeArchiveE
N4TSCE26RangePrecedentsTileArchiveE
N4TSCE29RangeDependenciesTiledArchiveE
N4TSCE55SpanningDependenciesArchive_ReferringColumnToLocalCellsE
N4TSCE56SpanningDependenciesArchive_ReferringColumnToRemoteCellsE
N4TSCE27SpanningDependenciesArchiveE
N4TSCE47SpanningDependenciesExpandedArchive_ExtentRangeE
N4TSCE67SpanningDependenciesExpandedArchive_ExtentRangeWithTableWithContextE
N4TSCE60SpanningDependenciesExpandedArchive_CellCoordRefersToExtentsE
N4TSCE35SpanningDependenciesExpandedArchiveE
N4TSCE29WholeOwnerDependenciesArchiveE
N4TSCE37WholeOwnerDependenciesExpandedArchiveE
N4TSCE30CellErrorsArchive_ErrorForCellE
N4TSCE17CellErrorsArchiveE
N4TSCE30UuidReferencesArchive_TableRefE
N4TSCE29UuidReferencesArchive_UuidRefE
N4TSCE38UuidReferencesArchive_TableWithUuidRefE
N4TSCE21UuidReferencesArchiveE
N4TSCE31FormulaOwnerDependenciesArchiveE
N4TSCE23FormulaOwnerInfoArchiveE
N4TSCE24SubFormulaOwnerIDArchiveE
N4TSCE40OwnerIDMapArchive_OwnerIDMapArchiveEntryE
N4TSCE17OwnerIDMapArchiveE
N4TSCE20UidLookupListArchiveE
N4TSCE24DependencyTrackerArchiveE
N4TSCE26RemoteDataSpecifierArchiveE
N4TSCE44RemoteDataValueMapArchive_RemoteDataMapEntryE
N4TSCE25RemoteDataValueMapArchiveE
N4TSCE27StockArchive_AttributeEntryE
N4TSCE12StockArchiveE
N4TSCE22RemoteDataStoreArchiveE
N4TSCE24NameTrackedReferencePairE
N4TSCE30NamesByTrackedReferenceArchiveE
N4TSCE28NamedReferenceManagerArchiveE
N4TSCE27UuidSetStoreArchive_UuidSetE
N4TSCE19UuidSetStoreArchiveE
N4TSCE39UuidReferenceMapArchive_CellRefsForUuidE
N4TSCE23UuidReferenceMapArchiveE
N4TSCE42GroupByNodeMapArchive_CellRefsForGroupNodeE
N4TSCE42GroupByNodeMapArchive_GroupNodesForGroupByE
N4TSCE21GroupByNodeMapArchiveE
N4TSCE24CalculationEngineArchiveE
N4TSCE29PreserveColumnRowFlagsArchiveE
N4TSCE38CategoryReferenceArchive_CatRefUidListE
N4TSCE24CategoryReferenceArchiveE
N4TSCE52ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchiveE
N4TSCE57ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchiveE
N4TSCE46ASTNodeArrayArchive_ASTColumnCoordinateArchiveE
N4TSCE43ASTNodeArrayArchive_ASTRowCoordinateArchiveE
N4TSCE30ASTNodeArrayArchive_ASTUidListE
N4TSCE31ASTNodeArrayArchive_ASTUidTractE
N4TSCE33ASTNodeArrayArchive_ASTStickyBitsE
N4TSCE35ASTNodeArrayArchive_ASTUidTractListE
N4TSCE43ASTNodeArrayArchive_ASTUidCoordinateArchiveE
N4TSCE37ASTNodeArrayArchive_ASTCategoryLevelsE
N4TSCE47ASTNodeArrayArchive_ASTCategoryReferenceArchiveE
N4TSCE74ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractRelativeRangeArchiveE
N4TSCE74ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractAbsoluteRangeArchiveE
N4TSCE40ASTNodeArrayArchive_ASTColonTractArchiveE
N4TSCE58ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchiveE
N4TSCE40ASTNodeArrayArchive_ASTLetNodeWhitespaceE
N4TSCE34ASTNodeArrayArchive_ASTNodeArchiveE
N4TSCE19ASTNodeArrayArchiveE
N4TSCE30FormulaTranslationFlagsArchiveE
N4TSCE14FormulaArchiveE
N4TSCE14FunctorArchiveE
N4TSCE19FormatStructArchiveE
N4TSCE22RangeCoordinateArchiveE
N4TSCE25TableTransposeInfoArchiveE
N4TSCE23MergeOriginMovedArchiveE
N4TSCE21OwnerUIDMapperArchiveE
N4TSCE50RewriteTableUIDInfoArchive_TableUIDMapEntryArchiveE
N4TSCE26RewriteTableUIDInfoArchiveE
N4TSCE48GroupByChangeArchive_GroupingColumnChangeArchiveE
N4TSCE20GroupByChangeArchiveE
N4TSCE30RewriteGroupNodeUIDInfoArchiveE
N4TSCE29IndexedUidsArchive_IndexedUidE
N4TSCE18IndexedUidsArchiveE
N4TSCE24RewriteRangeEntryArchiveE
N4TSCE27ColumnOrRowUuidsInfoArchiveE
N4TSCE17RegionInfoArchiveE
N4TSCE22RegionMovedInfoArchiveE
N4TSCE18MergeSourceArchiveE
N4TSCE19HauntedOwnerArchiveE
N4TSCE21CellCoordinateArchiveE
N4TSCE27CellCoordinateVectorArchiveE
N4TSCE32ExpandedCellRefObjectPairArchiveE
N4TSCE31ExpandedCellRefObjectMapArchiveE
N4TSCE21FormulaAtCoordArchiveE
N4TSCE31FormulaCoordPairsByOwnerArchiveE
N4TSCE22FormulasForUndoArchiveE
N4TSCE28FormulaRewriteCommandArchiveE
N4TSCE23TrackedReferenceArchiveE
N4TSCE31ExpandedTrackedReferenceArchiveE
N4TSCE28TrackedReferenceStoreArchiveE
N4TSCE19ViewTractRefArchiveE
N4TSCE23BooleanCellValueArchiveE
N4TSCE20DateCellValueArchiveE
N4TSCE22NumberCellValueArchiveE
N4TSCE22StringCellValueArchiveE
N4TSCE21ErrorCellValueArchiveE
N4TSCE16CellValueArchiveE
N6google8protobuf8internal16InternalMetadata9ContainerINS0_15UnknownFieldSetEEE
N6google8protobuf8internal16InternalMetadata13ContainerBaseE
31TSCEASTOffsetReferencesRewriter
 !"#$%&'(*+,-./012356789ABCD`afghijklmno
   ! " # $ % & ' ( ) / 0 1 2 3 4 5 6 7 8 9 : ; < = > ? @ A B C D E F G H I J K L M N O P Q R S T W _ p q t u v w x y z { | } ~ 
! !!!"!#!$!%!&!'!(!)!*!+!,!-!.!/!0!1!2!3!4!5!6!7!8!9!:!;!=!>!?!@!A!B!C!D!E!F!G!H!I!J!K!S!T!U!V!W!X!Y!Z![!\!]!^!_!`!a!b!c!d!e!f!g!h!i!j!k!l!m!n!o!p!q!r!s!t!u!v!w!x!y!z!{!|!}!~!
" "!"""#"$"%"&"'"(")"*"+","-"."/"0"1"2"3"4"5"6"7"8"9":";"<"=">"?"@"A"B"C"D"E"F"G"H"I"J"K"L"M"N"O"P"Q"R"S"T"U"V"W"X"Y"Z"["\"]"^"_"`"a"b"c"d"e"f"g"h"i"j"k"l"m"n"o"p"q"r"s"t"u"v"w"x"y"z"{"|"}"~"
# #!#"###$#%#&#'#(#)#*#+#,#-#.#/#0#1#2#3#4#5#6#7#8#9#:#;#<#=#>#?#@#A#B#C#D#E#F#G#H#I#J#K#L#M#N#O#P#Q#R#S#T#U#V#W#X#Y#Z#[#\#]#^#_#`#a#b#c#d#e#f#g#h#i#j#k#l#m#n#o#p#q#r#s#t#u#v#w#x#y#z#{#|#}#~#
$ $!$"$#$$$%$&$@$A$B$C$D$E$F$G$H$I$J$`$a$b$c$d$e$f$g$h$i$j$k$l$m$n$o$p$q$r$s$t$u$v$w$x$y$z${$|$}$~$
% %!%"%#%$%%%&%'%(%)%*%+%,%-%.%/%0%1%2%3%4%5%6%7%8%9%:%;%<%=%>%?%@%A%B%C%D%E%F%G%H%I%J%K%L%M%N%O%P%Q%R%S%T%U%V%W%X%Y%Z%[%\%]%^%_%`%a%b%c%d%e%f%g%h%i%j%k%l%m%n%o%p%q%r%s%t%u%v%w%x%y%z%{%|%}%~%
& &!&"&#&$&%&&&'&(&)&*&+&,&-&.&/&0&1&2&3&4&5&6&7&8&9&:&;&<&=&>&?&@&A&B&C&D&E&F&G&H&I&J&K&L&M&N&O&P&Q&R&S&T&U&V&W&X&Y&Z&[&\&]&^&_&`&a&b&c&d&e&f&g&h&i&j&k&l&m&n&o&p&q&r&s&t&u&v&w&x&y&z&{&|&}&
' '!'"'#'$'%'&''')'*'+','-'.'/'0'1'2'3'4'5'6'7'8'9':';'<'='>'?'@'A'B'C'D'E'F'G'H'I'J'K'M'O'P'Q'R'V'X'Y'Z'['\']'^'a'b'c'd'e'f'g'h'i'j'k'l'm'n'o'p'q'r's't'u'v'w'x'y'z'{'|'}'~'
( (!("(#($(%(&('((()(*(+(,(-(.(/(0(1(2(3(4(5(6(7(8(9(:(;(<(=(>(?(@(A(B(C(D(E(F(G(H(I(J(K(L(M(N(O(P(Q(R(S(T(U(V(W(X(Y(Z([(\(](^(_(`(a(b(c(d(e(f(g(h(i(j(k(l(m(n(o(p(q(r(s(t(u(v(w(x(y(z({(|(}(~(
) )!)")#)$)%)&)')()))*)+),)-).)/)0)1)2)3)4)5)6)7)8)9):);)<)=)>)?)@)A)B)C)D)E)F)G)H)I)J)K)L)M)N)O)P)Q)R)S)T)U)V)W)X)Y)Z)[)\)])^)_)`)a)b)c)d)e)f)g)h)i)j)k)l)m)n)o)p)q)r)s)t)u)v)w)x)y)z){)|)})~)
* *!*"*#*$*%*&*'*(*)***+*,*-*.*/*0*1*2*3*4*5*6*7*8*9*:*;*<*=*>*?*@*A*B*C*D*E*F*G*H*I*J*K*L*M*N*O*P*Q*R*S*T*U*V*W*X*Y*Z*[*\*]*^*_*`*a*b*c*d*e*f*g*h*i*j*k*l*m*n*o*p*q*r*s*t*u*v*w*x*y*z*{*|*}*~*
/ /!/"/#/$/%/&/'/(/)/*/+/,/-/.///0/1/2/3/4/5/6/7/8/9/:/;/</=/>/?/@/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S/T/U/V/W/X/Y/Z/[/\/]/^/_/`/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/{/|/}/~/
0 0!0"0#0$0%0&0'0(0)000102030405060708090:0;0<0=0>0?0A0B0C0D0E0F0G0H0I0J0K0L0M0N0O0P0Q0R0S0T0U0V0W0X0Y0Z0[0\0]0^0_0`0a0b0c0d0e0f0g0h0i0j0k0l0m0n0o0p0q0r0s0t0u0v0w0x0y0z0{0|0}0~0
1 1!1"1#1$1%1&1'1(1)1*1+1,1112131415161718191:1;1<1=1>1?1@1A1B1C1D1E1F1G1H1I1J1K1L1M1N1O1P1Q1R1S1T1U1V1W1X1Y1Z1[1\1]1^1_1`1a1b1c1d1e1f1g1h1i1j1k1l1m1n1o1p1q1r1s1t1u1v1w1x1y1z1{1|1}1~1
2 2!2"2#2$2%2&2'2(2)2*2+2,2-2.2/202122232425262728292:2;2<2=2>2?2@2A2B2C2P2Q2R2S2T2U2V2W2X2Y2Z2[2\2]2^2_2`2a2b2c2d2e2f2g2h2i2j2k2l2m2n2o2p2q2r2s2t2u2v2w2x2y2z2{2|2}2
3 3!3"3#3$3%3&3'3(3)3*3+3,3-3.3/303132333435363738393:3;3<3=3>3?3@3A3B3C3D3E3F3G3H3I3J3K3L3M3N3O3P3Q3R3S3T3U3V3W3X3Y3Z3[3\3]3^3_3`3a3b3c3d3e3f3g3h3i3j3k3l3m3n3o3p3q3r3s3t3u3v3w3x3y3z3{3|3}3~3
16TSTTableResolver
17TSCETableResolver
3@MZg
S8:<>@BDFHJLNPR
23TSCEASTSortRowsRewriter
!$'*-0369
<DGJ
MxMMMMMMMM
MMMM{M~
MMMMMMMM
19TSCEASTIteratorBase
&5DVew
TSTArchives.sos.proto
TSTSOS
TSDArchives.sos.proto
TSSArchives.sos.proto
TSTStylePropertyArchiving.proto
TSWPArchives.sos.proto"t
#SpecSetTableStrokePresetListArchive
table_stroke_preset_list
.TST.StrokePresetListArchive
unset
 SpecTableStrokePresetListArchive
!spec_set_table_stroke_preset_list
2+.TSTSOS.SpecSetTableStrokePresetListArchive"
&TableCellStylePropertyChangeSetArchive
text_wrap
.TSSSOS.SpecBoolArchive
text_wrap_undefined
type
.TSSSOS.SpecIntegerArchive
type_undefined
fill
.TSDSOS.SpecFillArchive
fill_undefined
vertical_alignment
.TSSSOS.SpecIntegerArchive
vertical_alignment_undefined
padding
.TSWPSOS.SpecPaddingArchive
padding_undefined
"TableStylePropertyChangeSetArchive
auto_resize
.TSSSOS.SpecBoolArchive
auto_resize_undefined
banded_rows
.TSSSOS.SpecBoolArchive
banded_rows_undefined
banded_cell_fill
.TSDSOS.SpecFillArchive
banded_cell_fill_undefined
behaves_like_spreadsheet
.TSSSOS.SpecBoolArchive
"behaves_like_spreadsheet_undefined
body_horizontal_border_stroke
.TSDSOS.SpecStrokeArchive
'body_horizontal_border_stroke_undefined
body_vertical_border_stroke
.TSDSOS.SpecStrokeArchive
%body_vertical_border_stroke_undefined
body_horizontal_stroke
.TSDSOS.SpecStrokeArchive
 body_horizontal_stroke_undefined
body_vertical_stroke
.TSDSOS.SpecStrokeArchive
body_vertical_stroke_undefined
header_column_border_stroke
.TSDSOS.SpecStrokeArchive
%header_column_border_stroke_undefined
header_column_vertical_stroke
.TSDSOS.SpecStrokeArchive
'header_column_vertical_stroke_undefined
header_column_horizontal_stroke
.TSDSOS.SpecStrokeArchive
)header_column_horizontal_stroke_undefined
header_column_separator_stroke
.TSDSOS.SpecStrokeArchive
(header_column_separator_stroke_undefined
header_row_border_stroke
.TSDSOS.SpecStrokeArchive
"header_row_border_stroke_undefined
header_row_horizontal_stroke
.TSDSOS.SpecStrokeArchive
&header_row_horizontal_stroke_undefined
header_row_vertical_stroke
.TSDSOS.SpecStrokeArchive
$header_row_vertical_stroke_undefined
header_row_separator_stroke
.TSDSOS.SpecStrokeArchive
%header_row_separator_stroke_undefined
footer_row_border_stroke
.TSDSOS.SpecStrokeArchive
"footer_row_border_stroke_undefined
footer_row_horizontal_stroke
.TSDSOS.SpecStrokeArchive
&footer_row_horizontal_stroke_undefined
footer_row_vertical_stroke
.TSDSOS.SpecStrokeArchive
$footer_row_vertical_stroke_undefined
footer_row_separator_stroke
.TSDSOS.SpecStrokeArchive
%footer_row_separator_stroke_undefined
stroke_preset_list_object
2(.TSTSOS.SpecTableStrokePresetListArchive
#stroke_preset_list_object_undefined
vertical_strokes_visible
.TSSSOS.SpecBoolArchive
"vertical_strokes_visible_undefined
horizontal_strokes_visible
.TSSSOS.SpecBoolArchive
$horizontal_strokes_visible_undefined
header_row_sep_visible
.TSSSOS.SpecBoolArchive
 header_row_sep_visible_undefined
header_row_verticals_visible
.TSSSOS.SpecBoolArchive
&header_row_verticals_visible_undefined
header_col_sep_visible
.TSSSOS.SpecBoolArchive
 header_col_sep_visible_undefined
header_col_horizontals_visible
.TSSSOS.SpecBoolArchive
(header_col_horizontals_visible_undefined
footer_sep_visible
.TSSSOS.SpecBoolArchive
footer_sep_visible_undefined
footer_verticals_visible
.TSSSOS.SpecBoolArchive
"footer_verticals_visible_undefined
border_strokes_visible
.TSSSOS.SpecBoolArchive
 border_strokes_visible_undefined
master_font_family
.TSSSOS.SpecStringArchive
master_font_family_undefined
writing_direction
.TSSSOS.SpecIntegerArchive
writing_direction_undefined
category_level1_top_stroke
.TSDSOS.SpecStrokeArchive
$category_level1_top_stroke_undefined
category_level2_top_stroke
.TSDSOS.SpecStrokeArchive
$category_level2_top_stroke_undefined
category_level3_top_stroke
.TSDSOS.SpecStrokeArchive
$category_level3_top_stroke_undefined
category_level4_top_stroke
.TSDSOS.SpecStrokeArchive
$category_level4_top_stroke_undefined
category_level5_top_stroke
.TSDSOS.SpecStrokeArchive
$category_level5_top_stroke_undefined
&category_level1_label_separator_stroke
.TSDSOS.SpecStrokeArchive
0category_level1_label_separator_stroke_undefined
&category_level2_label_separator_stroke
.TSDSOS.SpecStrokeArchive
0category_level2_label_separator_stroke_undefined
&category_level3_label_separator_stroke
.TSDSOS.SpecStrokeArchive
0category_level3_label_separator_stroke_undefined
&category_level4_label_separator_stroke
.TSDSOS.SpecStrokeArchive
0category_level4_label_separator_stroke_undefined
&category_level5_label_separator_stroke
.TSDSOS.SpecStrokeArchive
0category_level5_label_separator_stroke_undefined
category_level1_bottom_stroke
.TSDSOS.SpecStrokeArchive
'category_level1_bottom_stroke_undefined
category_level2_bottom_stroke
.TSDSOS.SpecStrokeArchive
'category_level2_bottom_stroke_undefined
category_level3_bottom_stroke
.TSDSOS.SpecStrokeArchive
'category_level3_bottom_stroke_undefined
category_level4_bottom_stroke
.TSDSOS.SpecStrokeArchive
'category_level4_bottom_stroke_undefined
category_level5_bottom_stroke
.TSDSOS.SpecStrokeArchive
'category_level5_bottom_stroke_undefined
category_level1_interior_stroke
.TSDSOS.SpecStrokeArchive
)category_level1_interior_stroke_undefined
category_level2_interior_stroke
.TSDSOS.SpecStrokeArchive
)category_level2_interior_stroke_undefined
category_level3_interior_stroke
.TSDSOS.SpecStrokeArchive
)category_level3_interior_stroke_undefined
category_level4_interior_stroke
.TSDSOS.SpecStrokeArchive
)category_level4_interior_stroke_undefined
category_level5_interior_stroke
.TSDSOS.SpecStrokeArchive
)category_level5_interior_stroke_undefined
"body_pivot_group_horizontal_stroke
.TSDSOS.SpecStrokeArchive
,body_pivot_group_horizontal_stroke_undefined
 body_pivot_group_vertical_stroke
.TSDSOS.SpecStrokeArchive
*body_pivot_group_vertical_stroke_undefined
(body_pivot_de_emphasis_horizontal_stroke
.TSDSOS.SpecStrokeArchive
2body_pivot_de_emphasis_horizontal_stroke_undefined
#body_pivot_emphasis_vertical_stroke
.TSDSOS.SpecStrokeArchive
-body_pivot_emphasis_vertical_stroke_undefined
+header_column_pivot_group_horizontal_stroke
.TSDSOS.SpecStrokeArchive
5header_column_pivot_group_horizontal_stroke_undefined
,header_column_pivot_group_de_emphasis_stroke
.TSDSOS.SpecStrokeArchive
6header_column_pivot_group_de_emphasis_stroke_undefined
$header_column_pivot_separator_stroke
.TSDSOS.SpecStrokeArchive
.header_column_pivot_separator_stroke_undefined
&header_row_pivot_group_vertical_stroke
.TSDSOS.SpecStrokeArchive
0header_row_pivot_group_vertical_stroke_undefined
)header_row_pivot_group_de_emphasis_stroke
.TSDSOS.SpecStrokeArchive
3header_row_pivot_group_de_emphasis_stroke_undefined
header_row_pivot_title_stroke
.TSDSOS.SpecStrokeArchive
'header_row_pivot_title_stroke_undefined
&footer_row_pivot_group_vertical_stroke
.TSDSOS.SpecStrokeArchive
0footer_row_pivot_group_vertical_stroke_undefined
N6TSTSOS35SpecSetTableStrokePresetListArchiveE
N6TSTSOS32SpecTableStrokePresetListArchiveE
N6TSTSOS38TableCellStylePropertyChangeSetArchiveE
N6TSTSOS34TableStylePropertyChangeSetArchiveE
31TSCEASTIsSingleNodeTypeRewriter
16TSCEFunctionNode
16TSCEDivisionNode
16TSCELessThanNode
16TSCENegationNode
15TSCEPercentNode
13TSCEColonNode
16TSCEFunction_ABS
20TSCEFunction_ACCRINT
22TSCEFinancialFunctions
21TSCEFunction_ACCRINTM
17TSCEFunction_ACOS
18TSCEFunction_ACOSH
20TSCEFunction_ADDRESS
16TSCEFunction_AND
18TSCEFunction_AREAS
17TSCEFunction_ASIN
18TSCEFunction_ASINH
17TSCEFunction_ATAN
18TSCEFunction_ATAN2
18TSCEFunction_ATANH
19TSCEFunction_AVEDEV
20TSCEFunction_AVERAGE
21TSCEFunction_AVERAGEA
22TSCEFunction_AVERAGEIF
23TSCEFunction_AVERAGEIFS
22TSCEFunction_BASETONUM
20TSCEFunction_BESSELJ
20TSCEFunction_BESSELY
21TSCEFunction_BETADIST
20TSCEFunction_BETAINV
20TSCEFunction_BIN2DEC
20TSCEFunction_BIN2HEX
20TSCEFunction_BIN2OCT
22TSCEFunction_BINOMDIST
25TSCEFunction_BONDDURATION
26TSCEFunction_BONDMDURATION
20TSCEFunction_CEILING
17TSCEFunction_CHAR
20TSCEFunction_CHIDIST
19TSCEFunction_CHIINV
20TSCEFunction_CHITEST
19TSCEFunction_CHOOSE
18TSCEFunction_CLEAN
17TSCEFunction_CODE
19TSCEFunction_COLUMN
20TSCEFunction_COLUMNS
19TSCEFunction_COMBIN
24TSCEFunction_CONCATENATE
23TSCEFunction_CONFIDENCE
25TSCEFunction_CONFIDENCE_T
20TSCEFunction_CONVERT
19TSCEFunction_CORREL
16TSCEFunction_COS
17TSCEFunction_COSH
18TSCEFunction_COUNT
19TSCEFunction_COUNTA
23TSCEFunction_COUNTBLANK
20TSCEFunction_COUNTIF
21TSCEFunction_COUNTIFS
25TSCEFunction_COUNTMATCHES
22TSCEFunction_COUPDAYBS
21TSCEFunction_COUPDAYS
23TSCEFunction_COUPDAYSNC
20TSCEFunction_COUPNUM
18TSCEFunction_COVAR
25TSCEFunction_COVARIANCE_S
22TSCEFunction_CRITBINOM
20TSCEFunction_CUMIPMT
21TSCEFunction_CUMPRINC
17TSCEFunction_DATE
20TSCEFunction_DATEDIF
22TSCEFunction_DATEVALUE
16TSCEFunction_DAY
20TSCEFunction_DAYNAME
20TSCEFunction_DAYS360
15TSCEFunction_DB
16TSCEFunction_DDB
20TSCEFunction_DEC2BIN
20TSCEFunction_DEC2HEX
20TSCEFunction_DEC2OCT
20TSCEFunction_DEGREES
18TSCEFunction_DELTA
18TSCEFunction_DEVSQ
17TSCEFunction_DISC
19TSCEFunction_DOLLAR
21TSCEFunction_DUR2DAYS
22TSCEFunction_DUR2HOURS
29TSCEFunction_DUR2MILLISECONDS
24TSCEFunction_DUR2MINUTES
24TSCEFunction_DUR2SECONDS
22TSCEFunction_DUR2WEEKS
21TSCEFunction_DURATION
18TSCEFunction_EDATE
19TSCEFunction_EFFECT
20TSCEFunction_EOMONTH
16TSCEFunction_ERF
17TSCEFunction_ERFC
17TSCEFunction_EVEN
18TSCEFunction_EXACT
16TSCEFunction_EXP
22TSCEFunction_EXPONDIST
17TSCEFunction_FACT
23TSCEFunction_FACTDOUBLE
18TSCEFunction_FALSE
18TSCEFunction_FDIST
17TSCEFunction_FIND
33TSCEFunction_FIND_CASEINSENSITIVE
17TSCEFunction_FINV
18TSCEFunction_FIXED
18TSCEFunction_FLOOR
21TSCEFunction_FORECAST
19TSCELineFitFunction
24TSCEFunction_FORMULATEXT
22TSCEFunction_FREQUENCY
15TSCEFunction_FV
21TSCEFunction_CURRENCY
25TSCEFunction_CURRENCYCODE
28TSCEFunction_CURRENCYCONVERT
22TSCEFunction_CURRENCYH
22TSCEFunction_GAMMADIST
21TSCEFunction_GAMMAINV
20TSCEFunction_GAMMALN
16TSCEFunction_GCD
20TSCEFunction_GEOMEAN
19TSCEFunction_GESTEP
25TSCEFunction_GETPIVOTDATA
20TSCEFunction_HARMEAN
20TSCEFunction_HEX2BIN
20TSCEFunction_HEX2DEC
20TSCEFunction_HEX2OCT
20TSCEFunction_HLOOKUP
17TSCEFunction_HOUR
22TSCEFunction_HYPERLINK
15TSCEFunction_IF
20TSCEFunction_IFERROR
16TSCEFunction_IFS
18TSCEFunction_INDEX
21TSCEFunction_INDIRECT
16TSCEFunction_INT
22TSCEFunction_INTERCEPT
29TSCEFunction_INTERSECT_RANGES
20TSCEFunction_INTRATE
17TSCEFunction_IPMT
16TSCEFunction_IRR
20TSCEFunction_ISBLANK
19TSCEFunction_ISDATE
20TSCEFunction_ISERROR
19TSCEFunction_ISEVEN
21TSCEFunction_ISNUMBER
18TSCEFunction_ISODD
18TSCEFunction_ISPMT
19TSCEFunction_ISTEXT
18TSCEFunction_LARGE
16TSCEFunction_LCM
17TSCEFunction_LEFT
16TSCEFunction_LEN
19TSCEFunction_LINEST
15TSCEFunction_LN
16TSCEFunction_LOG
18TSCEFunction_LOG10
19TSCEFunction_LOGINV
24TSCEFunction_LOGNORMDIST
19TSCEFunction_LOOKUP
18TSCEFunction_LOWER
18TSCEFunction_MATCH
16TSCEFunction_MAX
17TSCEFunction_MAXA
19TSCEFunction_MAXIFS
19TSCEFunction_MEDIAN
16TSCEFunction_MID
16TSCEFunction_MIN
17TSCEFunction_MINA
19TSCEFunction_MINIFS
19TSCEFunction_MINUTE
17TSCEFunction_MIRR
16TSCEFunction_MOD
22TSCEFunction_MODE_MULT
18TSCEFunction_MONTH
22TSCEFunction_MONTHNAME
19TSCEFunction_MROUND
24TSCEFunction_MULTINOMIAL
25TSCEFunction_NEGBINOMDIST
24TSCEFunction_NETWORKDAYS
20TSCEFunction_NOMINAL
21TSCEFunction_NORMDIST
20TSCEFunction_NORMINV
22TSCEFunction_NORMSDIST
21TSCEFunction_NORMSINV
16TSCEFunction_NOT
16TSCEFunction_NOW
17TSCEFunction_NPER
16TSCEFunction_NPV
22TSCEFunction_NUMTOBASE
20TSCEFunction_OCT2BIN
20TSCEFunction_OCT2DEC
20TSCEFunction_OCT2HEX
16TSCEFunction_ODD
19TSCEFunction_OFFSET
15TSCEFunction_OR
23TSCEFunction_PERCENTILE
27TSCEFunction_PERCENTILE_EXC
24TSCEFunction_PERCENTRANK
28TSCEFunction_PERCENTRANK_EXC
19TSCEFunction_PERMUT
15TSCEFunction_PI
22TSCEFunction_PLAINTEXT
16TSCEFunction_PMT
20TSCEFunction_POISSON
23TSCEFunction_POLYNOMIAL
18TSCEFunction_POWER
17TSCEFunction_PPMT
18TSCEFunction_PRICE
22TSCEFunction_PRICEDISC
21TSCEFunction_PRICEMAT
17TSCEFunction_PROB
20TSCEFunction_PRODUCT
19TSCEFunction_PROPER
15TSCEFunction_PV
21TSCEFunction_QUARTILE
25TSCEFunction_QUARTILE_EXC
21TSCEFunction_QUOTIENT
20TSCEFunction_RADIANS
17TSCEFunction_RAND
24TSCEFunction_RANDBETWEEN
17TSCEFunction_RANK
21TSCEFunction_RANK_AVG
17TSCEFunction_RATE
21TSCEFunction_RECEIVED
27TSCEFunction_REFERENCE_NAME
18TSCEFunction_REGEX
26TSCEFunction_REGEX_EXTRACT
20TSCEFunction_REPLACE
17TSCEFunction_REPT
18TSCEFunction_RIGHT
18TSCEFunction_ROMAN
18TSCEFunction_ROUND
22TSCEFunction_ROUNDDOWN
20TSCEFunction_ROUNDUP
16TSCEFunction_ROW
17TSCEFunction_ROWS
19TSCEFunction_SEARCH
19TSCEFunction_SECOND
22TSCEFunction_SERIESSUM
17TSCEFunction_SIGN
16TSCEFunction_SIN
17TSCEFunction_SINH
16TSCEFunction_SLN
18TSCEFunction_SLOPE
18TSCEFunction_SMALL
17TSCEFunction_SQRT
19TSCEFunction_SQRTPI
24TSCEFunction_STANDARDIZE
18TSCEFunction_STDEV
19TSCEFunction_STDEVA
19TSCEFunction_STDEVP
20TSCEFunction_STDEVPA
18TSCEFunction_STOCK
19TSCEFunction_STOCKH
26TSCEFunction_STRIPDURATION
23TSCEFunction_SUBSTITUTE
21TSCEFunction_SUBTOTAL
16TSCEFunction_SUM
18TSCEFunction_SUMIF
19TSCEFunction_SUMIFS
23TSCEFunction_SUMPRODUCT
18TSCEFunction_SUMSQ
21TSCEFunction_SUMX2MY2
21TSCEFunction_SUMX2PY2
20TSCEFunction_SUMXMY2
16TSCEFunction_SYD
14TSCEFunction_T
16TSCEFunction_TAN
17TSCEFunction_TANH
18TSCEFunction_TDIST
22TSCEFunction_TEXTAFTER
23TSCEFunction_TEXTBEFORE
24TSCEFunction_TEXTBETWEEN
17TSCEFunction_TIME
22TSCEFunction_TIMEVALUE
17TSCEFunction_TINV
18TSCEFunction_TODAY
22TSCEFunction_TRANSPOSE
17TSCEFunction_TRIM
17TSCEFunction_TRUE
18TSCEFunction_TRUNC
18TSCEFunction_TTEST
25TSCEFunction_UNION_RANGES
18TSCEFunction_UPPER
18TSCEFunction_VALUE
16TSCEFunction_VAR
17TSCEFunction_VARA
17TSCEFunction_VARP
18TSCEFunction_VARPA
16TSCEFunction_VDB
20TSCEFunction_VLOOKUP
20TSCEFunction_WEEKDAY
20TSCEFunction_WEEKNUM
20TSCEFunction_WEIBULL
20TSCEFunction_WORKDAY
17TSCEFunction_XIRR
20TSCEFunction_XLOOKUP
19TSCEFunction_XMATCH
17TSCEFunction_XNPV
17TSCEFunction_YEAR
21TSCEFunction_YEARFRAC
18TSCEFunction_YIELD
22TSCEFunction_YIELDDISC
21TSCEFunction_YIELDMAT
18TSCEFunction_ZTEST
20TSCEFunction___CHART
28TSCEFunction___CELLVALUETYPE
30TSCEFunction___INTERACTIONTYPE
*5BMc
,9kx
&5DSbq
&5DSbq
")8EM_l
$+2:L[
#2DS
&5<DQ
$6HZl~
$1>KX
,;J\n}
)6EWfx
&8GTcu
,9FUds
!0=LYr
%4fx
TSTArchives.proto
TSPMessages.proto
TSDArchives.proto
TSKArchives.proto
TSSArchives.proto
TSCEArchives.proto
TSWPArchives.proto
TSTStylePropertyArchiving.proto"Q
CellID
packedData
expanded_coord
.TSCE.CellCoordinateArchive"
CellUIDLookupListArchive
column_uids
.TSCE.UidLookupListArchive
row_uids
.TSCE.UidLookupListArchive
column_indexes
row_indexes
CellUIDListArchive
row_uids
.TSP.UUID
column_uids
.TSP.UUID
compressed_row_indexes
compressed_column_indexes
uncompressed_lookup_list
.TST.CellUIDLookupListArchive"F
TableSize
packedData
num_columns
num_rows
ExpandedTableSize
num_columns
num_rows
CellRange
origin
.TST.CellID
size
.TST.TableSize"f
ExpandedCellRange
origin
.TSCE.CellCoordinateArchive
size
.TST.ExpandedTableSize"
TableSelection
cellRange
.TST.CellRange
extendedCellRange
.TST.CellRange
extendedCellRangeValid
selection_type
.TST.SelectionTypeArchive"
TileRowInfo
tile_row_index
cell_count
cell_storage_buffer_pre_bnc
cell_offsets_pre_bnc
storage_version
cell_storage_buffer
cell_offsets
has_wide_offsets
Tile
maxColumn
maxRow
numCells
numrows
rowInfos
.TST.TileRowInfo
storage_version
last_saved_in_BNC
should_use_wide_rows
TileStorage
tiles
.TST.TileStorage.Tile
tile_size
should_use_wide_rows
Tile
tileid
tile
.TSP.Reference"
PopUpMenuModel
item
.TST.PopUpMenuModel.CellValueB
tsce_item
.TSCE.CellValueArchive
CellValue
cell_value_type
2!.TST.PopUpMenuModel.CellValueType
boolean_value
.TSCE.BooleanCellValueArchive
date_value
.TSCE.DateCellValueArchive
number_value
.TSCE.NumberCellValueArchive
string_value
.TSCE.StringCellValueArchive"`
CellValueType
NIL_TYPE
BOOLEAN_TYPE
DATE_TYPE
NUMBER_TYPE
STRING_TYPE
ImportWarningSetArchive
formula_import_warning
21.TST.ImportWarningSetArchive.FormulaImportWarning
cond_format_above_avg_equal_avg
false
cond_format_above_avg_std_dev
false
cond_format_complex_formula
false
cond_format_contains_errors
false
cond_format_expr
false
cond_format_not_contains_errors
false
(cond_format_parameters_not_all_same_type
false
cond_format_stop_if_true
false
 cond_format_unsupported_operator
false
cond_format_unsupported_styling
false
#cond_format_unsupported_time_period
false
error_cell_with_no_formula
false
unsupported_cond_format
false
original_data_format
2formula_warning_filtered_column_formula_not_copied
false
duration_format_range_changed
false
FormulaImportWarning
formula_warning_type
2/.TST.ImportWarningSetArchive.FormulaWarningType
original_formula
supplementary_text
formula_warning_type_int
FormulaWarningType
THREE_D_REFERENCE
ARRAYED_FORMULA
DIFFERENT_BEHAVIOR_FOR_FUNCTION
ERROR_TOKEN
EXTERNAL_REFERENCE
NATURAL_LANGUAGE_FORMULA
REFERENCE_OUT_OF_BOUNDS
SHARED_FORMULA_BASE_NOT_FOUND
UNKNOWN_NAME
UNSUPPORTED_FORMULA
UNSUPPORTED_FUNCTION
UNSUPPORTED_NAME
TRANSPOSED_NO_ISSUES
TRANSPOSED_WITH_ISSUES
 TRANSPOSED_WITH_ISSUES_UNCHANGED
"CellRefImportWarningSetPairArchive
cell_ref
.TSCE.CellReferenceArchive
warning_set
.TST.ImportWarningSetArchive"m
 ImportWarningSetByCellRefArchive
cellref_warning_set_pair
2'.TST.CellRefImportWarningSetPairArchive"
TableDataList
listType
.TST.TableDataList.ListType
nextListID
entries
.TST.TableDataList.ListEntry
segments
.TSP.Reference
ListEntry
refcount
string
reference
.TSP.Reference
formula
.TSCE.FormulaArchive
format
.TSK.FormatStructArchive
custom_format
.TSK.CustomFormatArchive
rich_text_payload
.TSP.Reference
comment_storage
.TSP.Reference
import_warning_set
.TST.ImportWarningSetArchive
cell_spec
.TST.CellSpecArchive"
ListType
STRING
FORMAT
FORMULA
STYLE
FORMULA_ERROR
CUSTOM_FORMAT
MULTIPLE_CHOICE_LIST_FORMAT
RICH_TEXT_PAYLOAD
CONDITIONAL_STYLE
COMMENT_STORAGE
IMPORT_WARNING
CONTROL_CELL_SPEC
TableDataListSegment
list_type
.TST.TableDataList.ListType
key_range
.TSP.Range
entries
.TST.TableDataList.ListEntry"W
TableRBTree
nodes
.TST.TableRBTree.Node
Node
value
HeaderStorageBucket
bucketHashFunction
headers
.TST.HeaderStorageBucket.Header
Header
index
size
hidingState
numberOfCells
cell_style
.TSP.Reference
text_style
.TSP.Reference"L
HeaderStorage
bucketHashFunction
buckets
.TSP.Reference"
DataStore
rowHeaders
.TST.HeaderStorage
columnHeaders
.TSP.Reference
tiles
.TST.TileStorage
stringTable
.TSP.Reference
styleTable
.TSP.Reference
formula_table
.TSP.Reference
formulaErrorTable
.TSP.Reference
format_table_pre_bnc
.TSP.Reference
multipleChoiceListFormatTable
.TSP.Reference
merge_region_map
.TSP.Reference
deprecated_custom_format_table
.TSP.Reference
nextRowStripID
nextColumnStripID
rowTileTree
.TST.TableRBTree
columnTileTree
.TST.TableRBTree
storage_version_pre_bnc
rich_text_table
.TSP.Reference
conditionalstyletable
.TSP.Reference
commentStorageTable
.TSP.Reference
importWarningSetTable
.TSP.Reference
control_cell_spec_table
.TSP.Reference
format_table
.TSP.Reference"
TableInfoArchive
super
.TSD.DrawableArchive
tableModel
.TSP.Reference
editing_state
.TSP.ReferenceB
summary_model
.TSP.Reference
category_order
.TSP.Reference
view_column_row_uids
.TSP.Reference
group_by_uuid
.TSP.UUID
hidden_states_uuid
.TSP.UUID
formula_coord_space_in_pre40
formula_coord_space
pasteboard_coord_mapper
.TSCE.CoordMapperArchive
layout_engine
.TST.LayoutEngineArchive
pivot_data_model
.TSP.Reference
is_a_pivot_table
pivot_order
.TSP.Reference"^
CategoryInfoArchive
super
.TSD.DrawableArchive
tableModel
.TSP.Reference"[
WPTableInfoArchive
super
.TST.TableInfoArchive
storage
.TSP.Reference"
TableStyleNetworkArchive
body_text_style
.TSP.Reference
header_row_text_style
.TSP.Reference
header_column_text_style
.TSP.Reference
footer_row_text_style
.TSP.Reference
body_cell_style
.TSP.Reference
header_row_style
.TSP.Reference
header_column_style
.TSP.Reference
footer_row_style
.TSP.Reference
table_style
.TSP.Reference
table_name_style
.TSP.Reference
table_name_shape_style
.TSP.Reference
preset_id
category_level_1_text_style
.TSP.Reference
category_level_2_text_style
.TSP.Reference
category_level_3_text_style
.TSP.Reference
category_level_4_text_style
.TSP.Reference
category_level_5_text_style
.TSP.Reference
category_level_1_style
.TSP.Reference
category_level_2_style
.TSP.Reference
category_level_3_style
.TSP.Reference
category_level_4_style
.TSP.Reference
category_level_5_style
.TSP.Reference
label_level_1_text_style
.TSP.Reference
label_level_2_text_style
.TSP.Reference
label_level_3_text_style
.TSP.Reference
label_level_4_text_style
.TSP.Reference
label_level_5_text_style
.TSP.Reference
label_level_1_style
.TSP.Reference
label_level_2_style
.TSP.Reference
label_level_3_style
.TSP.Reference
label_level_4_style
.TSP.Reference
label_level_5_style
.TSP.Reference
pivot_body_summary_row_style
.TSP.Reference
pivot_body_summary_column_style
.TSP.Reference
!pivot_header_column_summary_style
.TSP.Reference"
TableGroupSortOrderUIDArchive
group_sort_rules
2:.TST.TableGroupSortOrderUIDArchive.GroupSortRuleUIDArchive
GroupSortRuleUIDArchive
grouping_column_uid
.TSP.UUID
column_uid
.TSP.UUID
direction
2D.TST.TableGroupSortOrderUIDArchive.GroupSortRuleUIDArchive.Direction"*
Direction
ascending
descending
TableSortOrderArchive
type
2#.TST.TableSortOrderArchive.SortType
rules
2*.TST.TableSortOrderArchive.SortRuleArchive
SortRuleArchive
index
direction
24.TST.TableSortOrderArchive.SortRuleArchive.Direction"*
Direction
ascending
descending
SortType
entire_table
row_range
TableSortOrderUIDArchive
type
2&.TST.TableSortOrderUIDArchive.SortType
rules
2-.TST.TableSortOrderUIDArchive.SortRuleArchive
SortRuleArchive
column_uid
.TSP.UUID
direction
27.TST.TableSortOrderUIDArchive.SortRuleArchive.Direction"*
Direction
ascending
descending
SortType
entire_table
row_range
SortRuleReferenceTrackerArchive
reference_tracker
.TSP.Reference"1
CellRegion
cell_ranges
.TST.CellRange"E
CellUIDRegionArchive
cell_uid_ranges
.TSP.UUIDRectArchive"
StructuredTextImportRecord
import_settings
2!.TSK.StructuredTextImportSettings
import_source
import_date
source_data
source_encoding
confidence
imported_region
.TST.CellRegion
source_row_count
source_column_count
TableModelArchive
table_id
from_table_id
was_cut
table_style
.TSP.Reference
body_text_style
.TSP.Reference
header_row_text_style
.TSP.Reference
header_column_text_style
.TSP.Reference
footer_row_text_style
.TSP.Reference
body_cell_style
.TSP.Reference
header_row_style
.TSP.Reference
header_column_style
.TSP.Reference
footer_row_style
.TSP.Reference
table_name_style
.TSP.Reference
table_name_shape_style
.TSP.Reference
table_style_preset
.TSP.Reference
preset_index
base_data_store
.TST.DataStore
provider
.TSP.Reference
number_of_rows
number_of_columns
table_name
table_name_enabled
table_name_height
table_name_border_enabled
number_of_header_rows
number_of_header_columns
number_of_footer_rows
header_rows_frozen
header_columns_frozen
number_of_hidden_rows
number_of_hidden_columns
number_of_user_hidden_rows
number_of_user_hidden_columns
number_of_filtered_rows
default_row_height
default_column_width
origin_offset
.TST.CellIDB
repeating_header_rows_enabled
style_apply_clears_all
 repeating_header_columns_enabled
&hidden_state_formula_owner_for_columns
.TSP.Reference
#hidden_state_formula_owner_for_rows
.TSP.Reference
row_filter_set_pre_pivot
.TSP.Reference
"conditional_style_formula_owner_id
.TSP.CFUUIDArchive
sort_order
.TST.TableSortOrderArchive
sort_rule_reference_tracker
2$.TST.SortRuleReferenceTrackerArchive
base_column_row_uids
.TSP.Reference
merge_owner
.TST.MergeOwnerArchive
stroke_sidecar
.TSP.Reference
preset_needs_strong_ownership
text_import_record
.TST.StructuredTextImportRecord
category_level_1_style
.TSP.Reference
category_level_2_style
.TSP.Reference
category_level_3_style
.TSP.Reference
category_level_4_style
.TSP.Reference
category_level_5_style
.TSP.Reference
category_level_1_text_style
.TSP.Reference
category_level_2_text_style
.TSP.Reference
category_level_3_text_style
.TSP.Reference
category_level_4_text_style
.TSP.Reference
category_level_5_text_style
.TSP.Reference
hidden_states_owner
.TST.HiddenStatesOwnerArchive
label_level_1_style
.TSP.Reference
label_level_2_style
.TSP.Reference
label_level_3_style
.TSP.Reference
label_level_4_style
.TSP.Reference
label_level_5_style
.TSP.Reference
label_level_1_text_style
.TSP.Reference
label_level_2_text_style
.TSP.Reference
label_level_3_text_style
.TSP.Reference
label_level_4_text_style
.TSP.Reference
label_level_5_text_style
.TSP.Reference
category_owner_deprecated
.TST.CategoryOwnerArchive
pencil_annotation_owner
2!.TST.PencilAnnotationOwnerArchive
from_group_by_uid
haunted_owner
.TSCE.HauntedOwnerArchive
pivot_owner
.TSP.Reference
category_owner
.TSP.Reference
pivot_body_summary_row_style
.TSP.Reference
pivot_body_summary_column_style
.TSP.Reference
!pivot_header_column_summary_style
.TSP.Reference
pivot_value_types_by_col
pivot_date_grouping_columns
pivot_date_grouping_types
SummaryModelArchive
table_info
.TSP.Reference
data_store
.TST.DataStore
column_row_uids
.TSP.Reference
aggregate_formula_owner_uuid
.TSP.UUID
summary_cell_vendor
.TSP.Reference
category_column_width
summary_row_level_1_height
summary_row_level_2_height
summary_row_level_3_height
summary_row_level_4_height
summary_row_level_5_height
 summary_label_row_level_1_height
 summary_label_row_level_2_height
 summary_label_row_level_3_height
 summary_label_row_level_4_height
 summary_label_row_level_5_height
label_row_visibility_1
label_row_visibility_2
label_row_visibility_3
label_row_visibility_4
label_row_visibility_5
summary_row_height_list
label_row_height_list
label_row_visibility_list
group_sort_order
2".TST.TableGroupSortOrderUIDArchive"
%SummaryModelGroupByChangeStateArchive
cell_map
.TSP.Reference
summary_row_height_list
label_row_height_list
label_row_visibility_list
ColumnRowUIDMapArchive
sorted_column_uids
.TSP.UUID
column_index_for_uid
column_uid_for_index
sorted_row_uids
.TSP.UUID
row_index_for_uid
row_uid_for_index
StrokeLayerArchive
row_column_index
stroke_runs
2(.TST.StrokeLayerArchive.StrokeRunArchive
StrokeRunArchive
origin
length
stroke
.TSD.StrokeArchive
order
StrokeSidecarArchive
max_order
column_count
row_count
left_column_stroke_layers
.TSP.Reference
right_column_stroke_layers
.TSP.Reference
top_row_stroke_layers
.TSP.Reference
bottom_row_stroke_layers
.TSP.Reference"
DurationWrapperArchive"
Cell
valueType
.TST.CellValueType
cell_style
.TSP.Reference
text_style
.TSP.Reference
numberValue
stringValue
boolValue
current_format
.TSK.FormatStructArchive
formulaError
.TSP.Reference
number_format
.TSK.FormatStructArchive
currency_format
.TSK.FormatStructArchive
duration_format
.TSK.FormatStructArchive
date_format
.TSK.FormatStructArchive
custom_format
.TSK.FormatStructArchive
base_format
.TSK.FormatStructArchive
explicit_format_flags
richText
.TSP.Reference
conditional_style
.TSP.Reference
comment_storage
.TSP.Reference
conditional_style_applied_rule
import_warning_set
.TST.ImportWarningSetArchive
custom_format_object
.TSK.CustomFormatArchive
cell_border
.TST.CellBorderArchive
cell_spec
.TST.CellSpecArchive
cell_format_kind
text_format
.TSK.FormatStructArchive
boolean_format
.TSK.FormatStructArchive
decimal_value_low
decimal_value_high
MergeRegionMapArchive
cell_range
.TST.CellRange"
CellMapArchive
cell_tiles
.TSP.Reference
uid_based
expanded_cell_ids
.TSCE.CellCoordinateArchive
cell_uid_list
.TST.CellUIDListArchive
merge_uid_ranges
.TSP.UUIDRectArchive
unmerge_uid_ranges
.TSP.UUIDRectArchive
merge_actions
.TST.MergeOperationArchive
may_modify_formulas_in_cells
true
(may_modify_values_referenced_by_formulas
true"
CellListArchive
cells
2!.TST.CellListArchive.OptionalCell
trailing_empty_cell_count
OptionalCell
cell
.TST.Cell"
ConcurrentCellMapArchive
cell_lists
.TSP.Reference
uid_based
merge_actions
.TST.MergeOperationArchive
may_modify_formulas_in_cells
true
(may_modify_values_referenced_by_formulas
true
affects_cell_borders
true"
ConcurrentCellListArchive
cells
2+.TST.ConcurrentCellListArchive.OptionalCell
cell_uid_range
.TSP.UUIDRectArchive
cell_range
.TST.CellRange
OptionalCell
cell
.TST.Cell"
CellFormatAndValueArchive
valueType
.TST.CellValueType
numberValue
stringValue
boolValue
richTextStorage
.TSP.Reference
use_all_spare_formats
explicit_flags
cell_format_kind
number_format
.TSK.FormatStructArchive
currency_format
.TSK.FormatStructArchive
date_format
.TSK.FormatStructArchive
duration_format
.TSK.FormatStructArchive
text_format
.TSK.FormatStructArchive
boolean_format
.TSK.FormatStructArchive
formatted_value
formatted_rich_text_value
.TSP.Reference
apply_spare_format_only
spare_format_type
decimal_low
decimal_high
suppress_apply_value
CellSpecArchive
interaction_type
formula
.TSCE.FormulaArchive
range_control_min
range_control_max
range_control_inc
chooser_control_popup_model
.TSP.Reference
chooser_control_start_w_first
%category_summary_should_display_label
CommentStorageWrapperArchive
comment_storage
.TSP.Reference"
CellDiffArchive
property_map_to_set
.TSS.CommandPropertyMapArchive
property_map_to_reset
.TSS.CommandPropertyMapArchive"5
CellDiffArray
large_array
.TSP.LargeArray"s
CellDiffArraySegment
large_array_segment
.TSP.LargeArraySegment
elements
.TST.CellDiffArchive"
CellDiffMapArchive
uid_based
expanded_cell_ids
.TSCE.CellCoordinateArchive
cell_uids
.TST.CellUIDListArchive
cell_diff_array
.TSP.Reference"
HierarchicalCellDiffMapArchive
num_row_rules
num_column_rules
row_header_uids
.TSP.UUID
column_header_uids
.TSP.UUID
aggregate_rule_uids
.TSP.UUID
active_flattening_dimension
.TST.TableDimensionArchive
row_value_uids
.TSP.UUID
row_level_preorder
column_value_uids
.TSP.UUID
column_level_preorder
cell_diff_storage
2,.TST.HierarchicalCellDiffMapArchive.BoxedRow
row_sizes
column_sizes
BoxedRow
column_index_set
.TSP.IndexSet
cell_diff_list
.TST.CellDiffArchive"
DoubleStyleMapArchive
capacity
count
cell_map_entry
25.TST.DoubleStyleMapArchive.DoubleStyleMapEntryArchive
DoubleStyleMapEntryArchive
cell_id
.TST.CellID
old_style
.TSP.Reference
new_style
.TSP.Reference"
StyleTableMapArchive
capacity
count
map_entry
23.TST.StyleTableMapArchive.StyleTableMapEntryArchive
StyleTableMapEntryArchive
old_style
.TSP.Reference
new_style
.TSP.Reference"
SelectionArchive
tableModel
.TSP.ReferenceB
selection_type
.TST.SelectionTypeArchive
anchor_cell
.TST.CellID
cell_ranges
.TST.CellRange
base_ranges
.TST.CellRange
cursor_cell
.TST.CellID
table_info
.TSP.Reference
cell_uid_region
.TST.CellUIDRegionArchive
base_uid_region
.TST.CellUIDRegionArchive
anchor_cell_uid
.TSP.UUIDCoordArchive
cursor_cell_uid
.TSP.UUIDCoordArchive"
)DeathhawkRdar39989167CellSelectionArchive
table_info
.TSP.Reference
selection_type
.TST.SelectionTypeArchive
cell_uid_region
.TST.CellUIDRegionArchive
base_uid_region
.TST.CellUIDRegionArchive
anchor_cell_uid
.TSP.UUIDCoordArchive
cursor_cell_uid
.TSP.UUIDCoordArchive"&
StrokeSelectionArchive
mask
ControlCellSelectionArchive"
StockCellSelectionArchive"
TableNameSelectionArchive"p
AutofillSelectionArchive
source_cell_range
.TST.CellRange
target_cell_range
.TST.CellRange"f
FilterRulePrePivotArchive
predicate
2$.TST.FormulaPredicatePrePivotArchive
disabled
FilterRuleArchive
predicate
.TST.FormulaPredicateArchive"
TableStyleArchive
super
.TSS.StyleArchive
override_count
table_properties
2 .TST.TableStylePropertiesArchive"
CellStyleArchive
super
.TSS.StyleArchive
override_count
cell_properties
.TST.CellStylePropertiesArchive"
FormulaPredArgDataArchive
double_value
decimal_low
decimal_high
string_value
date_value
duration_timeinterval
duration_units
boolean_value
FormulaPredArgArchive
arg_type
arg_value
.TST.FormulaPredArgDataArchive
base_cell_ref
.TSCE.CellReferenceArchive
relative_cell_ref
.TSCE.RelativeCellRefArchive
category_ref
.TSCE.CategoryReferenceArchive
uid_tract_list
2).TSCE.ASTNodeArrayArchive.ASTUidTractList
host_cell_coord
.TSCE.CellCoordinateArchive
preserve_row
preserve_column
list_entries
.TST.FormulaPredArgDataArchive
view_tract_ref
.TSCE.ViewTractRefArchive"
FormulaPredicatePrePivotArchive
formula
.TSCE.FormulaArchive
predicate_type
qualifier1
qualifier2
param_index1
param_index2
param_index0
FormulaPredicateArchive
predicate_type
qualifier1
qualifier2
param_value0
.TST.FormulaPredArgArchive
param_value1
.TST.FormulaPredArgArchive
param_value2
.TST.FormulaPredArgArchive
formula
.TSCE.FormulaArchive
for_conditional_style
host_table_uid
.TSP.UUID
host_column_uid
.TSP.UUID
host_row_uid
.TSP.UUID"
ConditionalStyleSetArchive
ruleCount
rules_prepivot
2<.TST.ConditionalStyleSetArchive.ConditionalStyleRulePrePivot
rules
25.TST.ConditionalStyleSetArchive.ConditionalStyleRules
ConditionalStyleRulePrePivot
predicate
2$.TST.FormulaPredicatePrePivotArchive
cell_style
.TSP.Reference
text_style
.TSP.Reference
ConditionalStyleRule
predicate
.TST.FormulaPredicateArchive
cell_style
.TSP.Reference
text_style
.TSP.Reference
ConditionalStyleRules
rule
24.TST.ConditionalStyleSetArchive.ConditionalStyleRule"
FilterSetArchive
type
2#.TST.FilterSetArchive.FilterSetType:
FilterSetArchiveTypeAll
is_enabled
true
filter_rules_prepivot
.TST.FilterRulePrePivotArchive
 needs_formula_rewrite_for_import
false
filter_offsets
filter_enabled
filter_rules
.TST.FilterRuleArchive"I
FilterSetType
FilterSetArchiveTypeAll
FilterSetArchiveTypeAny
UniqueIndexArchive
column_uid
.TSP.UUID
unique_entries
2/.TST.UniqueIndexArchive.UniqueIndexEntryArchive
UniqueIndexEntryArchive
string_value
row_uids
.TSP.UUID"
HiddenStateExtentArchive
hidden_state_extent_uid
.TSP.UUID
base_hidden_states
2..TST.HiddenStateExtentArchive.RowOrColumnState
row_or_column_direction
22.TST.HiddenStateExtentArchive.RowOrColumnDirection
threshold_value
.TSCE.CellValueArchive
%needs_to_update_filter_set_for_import
false
collapsed_group_uids
.TSP.UUID
filter_set
.TSP.Reference
summary_pivot_hidden_indexes
.TSCE.IndexSetArchive
summary_filtered_indexes
.TSCE.IndexSetArchive
unique_indexes
.TST.UniqueIndexArchive
summary_hidden_states
2..TST.HiddenStateExtentArchive.RowOrColumnState
RowOrColumnState
row_or_column_uid
.TSP.UUID
user_hidden
filtered
pivot_hidden
RowOrColumnDirection
ColumnDirection
RowDirection
HiddenStatesArchive
hidden_states_uid
.TSP.UUID
column_hidden_state_extent
.TST.HiddenStateExtentArchive
row_hidden_state_extent
.TST.HiddenStateExtentArchive"i
HiddenStatesOwnerArchive
owner_uid
.TSP.UUID
hidden_states
.TST.HiddenStatesArchive"
ExpandCollapseStateArchive
uids_collapsed
.TSP.UUID
uids_expanded
.TSP.UUID
dimension
.TST.TableDimensionArchive"l
TokenAttachmentArchive
super
.TSWP.UIGraphicalAttachment
expressionNode
.TSP.Reference"8
FormulaArchive
expressionTree
.TSP.Reference"h
ExpressionNodeArchive
children
.TSP.Reference
first_index
last_index
BooleanNodeArchive
super
.TST.ExpressionNodeArchive
value
NumberNodeArchive
super
.TST.ExpressionNodeArchive
number
decimal_low
decimal_high
StringNodeArchive
super
.TST.ExpressionNodeArchive
value
IdentifierNodeArchive
super
.TST.ExpressionNodeArchive
identifier
symbol
ArrayNodeArchive
super
.TST.ExpressionNodeArchive
columns
rows
ListNodeArchive
super
.TST.ExpressionNodeArchive"V
OperatorNodeArchive
super
.TST.ExpressionNodeArchive
operatorChar
PostfixOperatorNodeArchive
super
.TST.OperatorNodeArchive"D
PrefixOperatorNodeArchive
super
.TST.OperatorNodeArchive"t
FunctionNodeArchive
super
.TST.ExpressionNodeArchive
functionIndex
invalidFunctionName
FunctionEndNodeArchive
super
.TST.ExpressionNodeArchive"[
DateNodeArchive
super
.TST.ExpressionNodeArchive
value
format
ReferenceNodeArchive
super
.TST.ExpressionNodeArchive
rangeReference
.TSCE.RangeReferenceArchive
preserve_flags
hostTableID
host_cell_ref
.TSCE.CellReferenceArchive
table_uid
.TSP.UUID
range_top_left
.TSP.UUIDCoordArchive
range_bottom_right
.TSP.UUIDCoordArchive
category_ref
.TSCE.CategoryReferenceArchive
uid_range_rect
.TSP.UUIDRectArchive"
DurationNodeArchive
super
.TST.ExpressionNodeArchive
timeinterval
smallest
largest
style
ArgumentPlaceholderNodeArchive
super
.TST.ExpressionNodeArchive
functionIndex
argumentIndex
mode
EmptyExpressionNodeArchive
super
.TST.ExpressionNodeArchive"
LetNodeArchive
super
.TST.ExpressionNodeArchive
whitespace_after_let
whitespace_after_identifier
whitespace_after_equals
whitespace_after_delimiter
InNodeArchive
super
.TST.ExpressionNodeArchive"d
VariableNodeArchive
super
.TST.ExpressionNodeArchive
identifier
symbol
LayoutHintArchive
isValid
cellRange
.TST.CellRange
hintID
.TST.CellID
maximumSize
.TSP.Size
partitionPosition
horizontal
effectiveSize
.TSP.Size
partitioningPass
 CompletionTokenAttachmentArchive
super
.TST.TokenAttachmentArchive
completionText
caretPosition
prefixStart
HiddenStateFormulaOwnerArchive
owner_id
.TSP.CFUUIDArchive
threshold_value
.TSCE.CellValueArchive
%needs_to_update_filter_set_for_import
false"
FormulaStoreArchive
next_formula_index
formulas
2).TST.FormulaStoreArchive.FormulaStorePair
FormulaStorePair
formula_index
formula
.TSCE.FormulaArchive"
MergeOperationArchive
merge_type
.TST.MergeActionArchive
merge_ranges
.TSP.UUIDRectArchive
merge_formulas
.TSCE.FormulaArchive
merge_formula_indexes
MergeOwnerArchive
owner_id
.TSP.CFUUIDArchive
formula_store
.TST.FormulaStoreArchive"p
PencilAnnotationArchive
table_info
.TSP.Reference
pencil_annotation_storage
.TSP.Reference"
PencilAnnotationOwnerArchive
owner_id
.TSP.CFUUIDArchive
formula_store
.TST.FormulaStoreArchive
annotations
.TSP.Reference"
AccumulatorArchive
bool_count
number_count
date_count
duration_count
string_count
min_value
.TSCE.CellValueArchive
max_value
.TSCE.CellValueArchive
number_total_value
.TSCE.CellValueArchive
first_date_seen
.TSCE.CellValueArchive
total_secs_since_ref_date
secs_to_add
bool_true_count
error_count
is_circular_ref
product_value
.TSCE.CellValueArchive
no_content_count
GroupColumnArchive
column_uid
.TSP.UUID
grouping_type
grouping_functor
.TSCE.FunctorArchive
grouping_column_uid
.TSP.UUID"G
GroupColumnListArchive
group_column
.TST.GroupColumnArchive"
ColumnAggregateArchive
column_uid
.TSP.UUID
level
agg_type
show_as_type
column_aggregate_uid
.TSP.UUID
running_total_group_column_uid
.TSP.UUID"M
ColumnAggregateListArchive
aggregates
.TST.ColumnAggregateArchive"
GroupByArchive
group_by_uid
.TSP.UUID
group_column
.TST.GroupColumnArchive
group_node_root
2$.TST.GroupByArchive.GroupNodeArchive
aggregator
2%.TST.GroupByArchive.AggregatorArchive
column_agg_type
.TST.ColumnAggregateArchive
is_enabled
 indirect_agg_type_change_formula
.TSCE.CellCoordinateArchive
grouping_columns_formula
.TSCE.CellCoordinateArchive
aggs_in_group_root_formula
.TSCE.CellCoordinateArchive
grouping_column_headers_formula
.TSCE.CellCoordinateArchive
column_order_changed_formula
.TSCE.CellCoordinateArchive
row_order_changed_formula
.TSCE.CellCoordinateArchive
)row_order_changed_ignoring_recalc_formula
.TSCE.CellCoordinateArchive
owner_index
row_uid_lookup
.TSCE.UidLookupListArchive
hidden_states_changed_formula
.TSCE.CellCoordinateArchive
aggregator_ref
.TSP.Reference
group_node_root_ref
.TSP.Reference
AggNodeArchive
formula_coord
.TSCE.CellCoordinateArchive
accum
.TST.AccumulatorArchive
child
2".TST.GroupByArchive.AggNodeArchive
AggregatorArchive
column_uid
.TSP.UUID
agg_node
2".TST.GroupByArchive.AggNodeArchive
GroupNodeArchive
group_uid
.TSP.UUID
child
2$.TST.GroupByArchive.GroupNodeArchive
row_uid
.TSP.UUID
agg_formula_coords
.TSCE.CellCoordinateArchive
format_manager
29.TST.GroupByArchive.GroupNodeArchive.FormatManagerArchive
group_cell_value
.TSCE.CellValueArchive
row_indexes
.TSCE.IndexSetArchive
row_lookup_uids
.TSCE.IndexSetArchive
child_ref
.TSP.Reference
FormatManagerArchive
cell_value
.TSCE.CellValueArchive
formats
.TSK.FormatStructArchive
row_sets
2G.TST.GroupByArchive.GroupNodeArchive.FormatManagerArchive.RowSetArchive
row_uid_lookup_sets
.TSCE.IndexSetArchive
RowSetArchive
row_uids
.TSP.UUID"[
CategoryOwnerArchive
owner_uid
.TSP.UUID
group_by
.TST.GroupByArchive";
CategoryOwnerRefArchive
group_by
.TSP.Reference"v
$PivotGroupingColumnOptionsMapArchive
uids
.TSP.UUID
flags
aggregate_rule_uids
.TSP.UUID"
PivotOwnerArchive
pivot_owner_uid
.TSP.UUID
grouping_columns_for_rows
.TST.GroupColumnListArchive
grouping_columns_for_columns
.TST.GroupColumnListArchive
aggregate_columns
.TST.ColumnAggregateListArchive
flattening_dimension
is_empty_pivot
source_table_uid
.TSP.UUID
refresh_timestamp
grpg_col_options_map
.TSP.Reference
hide_grand_total_rows
source_table_name
hide_grand_total_columns
formula_store
.TST.FormulaStoreArchive
refresh_uid
.TSP.UUID
row_column_rule_change_uid
.TSP.UUID
aggregate_rule_change_uid
.TSP.UUID"q
RichTextPayloadArchive
storage
.TSP.Reference
range
.TSP.Range
cellid
.TST.CellID"Q
#FormulaEqualsTokenAttachmentArchive
super
.TSWP.UIGraphicalAttachment"
CellFillStandIn
fill
.TSD.FillArchive
type_is_mixed
color_has_been_modified
color_is_mixed
first_color_has_been_modified
first_color_is_mixed
last_color_has_been_modified
last_color_is_mixed
gradient_type_has_been_modified
gradient_type_is_mixed
 gradient_angle_has_been_modified
gradient_angle_is_mixed
image_data_has_been_modified
image_data_is_mixed
tint_color_has_been_modified
tint_color_is_mixed
scale_has_been_modified
scale_is_mixed
technique_has_been_modified
technique_is_mixed
FormulaSelectionArchive
super
.TSWP.SelectionArchive
activeTokenCharIndex
CellBorderArchive
top_stroke
.TSD.StrokeArchive
top_stroke_order
right_stroke
.TSD.StrokeArchive
right_stroke_order
bottom_stroke
.TSD.StrokeArchive
bottom_stroke_order
left_stroke
.TSD.StrokeArchive
left_stroke_order
!DefaultCellStylesContainerArchive
table_style_network
.TSP.Reference
row_uids
.TSP.UUID
column_uids
.TSP.UUID
row_types
column_types
is_a_pivot_table
MultiTableRemapperArchive
mapping_purpose
2&.TST.MultiTableRemapperArchive.Purpose
should_steal_references
can_reuse_table_names
owner_uid_mapper
.TSCE.OwnerUIDMapperArchive
backing_tables_for_charts
.TSP.UUIDMapArchive
cross_document_paste
nested_inner_mapper
Purpose
DEFAULT
GROUPING
#PAGES_SECTION_DUPLICATION_NONCOLLAB
ChangePropagationMapWrapper
replacement_behavior
style_replace_prototypes
.TSP.Reference
style_replace_replacements
.TSP.Reference
style_modify_styles
.TSP.Reference
style_modify_old_prop_maps
.TSP.Reference
style_modify_new_prop_maps
.TSP.Reference
style_delete_prototypes
.TSP.Reference
style_delete_replacements
.TSP.Reference
table_preset_replace_prototype
.TSP.Reference
 table_preset_replace_replacement
.TSP.Reference
table_preset_delete_prototype
.TSP.Reference
table_preset_delete_replacement
.TSP.Reference"
SummaryCellVendorArchive
table_info
.TSP.Reference
entries
2..TST.SummaryCellVendorArchive.SummaryCellEntry
SummaryCellEntry
wildcardUID
.TSP.UUID
columnUID
.TSP.UUID
cell
.TST.Cell"[
CategoryOrderArchive
table_info
.TSP.Reference
uid_map
.TSP.Reference"4
PivotOrderArchive
uid_map
.TSP.Reference"
HeaderNameMgrTileArchive
first_fragment
last_fragment
name_frag_entries
21.TST.HeaderNameMgrTileArchive.NameFragmentArchive
NameFragmentArchive
name_fragment
name_precedent
.TSCE.CellCoordinateArchive
uses_of_name_fragment
.TSCE.UidCellRefSetArchive"
HeaderNameMgrArchive
owner_uid
.TSP.UUID
nrm_owner_uid
.TSP.UUID
per_tables
2).TST.HeaderNameMgrArchive.PerTableArchive
name_frag_tiles
.TSP.Reference
PerTableArchive
table_uid
.TSP.UUID
per_table_precedent
.TSCE.CellCoordinateArchive
is_deleted
header_row_uids
.TSP.UUID
header_column_uids
.TSP.UUID
update_header_row_uids
.TSP.UUID
update_header_column_uids
.TSP.UUID"K
WidthHeightCacheFittingEntry
fitting_index
fitting_size
WidthHeightCache
rows_fitting_entries
2!.TST.WidthHeightCacheFittingEntry
columns_count
LayoutEngineArchive
width_height_cache
.TST.WidthHeightCache*
CellType
genericCellType
spanCellType
numberCellType
textCellType
formulaCellType
dateCellType
boolCellType
durationCellType
formulaErrorCellType
automaticCellType
CellValueType
emptyCellValueType
numberCellValueType
stringCellValueType
providedCellValueType
dateCellValueType
boolCellValueType
durationCellValueType
errorCellValueType
richTextCellType
currencyCellValueType
TableDimensionArchive
dimensionNeither
dimensionRow
dimensionColumn
SelectionTypeArchive
deprecatedCellSelectionType
rowSelectionType
columnSelectionType
"deprecatedCellEditingSelectionType
 deprecatedTableNameSelectionType
deprecatedTableSelectionType
regionSelectionType
noSelectionType
FillDirectionArchive
kTSTFillDownArchive
kTSTFillUpArchive
kTSTFillRightArchive
kTSTFillLeftArchive
MergeActionArchive
mergeActionInsert
mergeActionRemove
mergeActionShrink
mergeActionGrow
HideShowActionArchive
hideShowActionHide
hideShowActionShow
import_warning_set
 .TSS.CommandPropertyEntryArchive
.TST.ImportWarningSetArchive:[
format_and_value
 .TSS.CommandPropertyEntryArchive
.TST.CellFormatAndValueArchive:N
cell_border
 .TSS.CommandPropertyEntryArchive
.TST.CellBorderArchive:]
comment_storage
 .TSS.CommandPropertyEntryArchive
2!.TST.CommentStorageWrapperArchive:J
cell_spec
 .TSS.CommandPropertyEntryArchive
.TST.CellSpecArchive
N3TST6CellIDE
N3TST24CellUIDLookupListArchiveE
N3TST18CellUIDListArchiveE
N3TST9TableSizeE
N3TST17ExpandedTableSizeE
N3TST9CellRangeE
N3TST17ExpandedCellRangeE
N3TST14TableSelectionE
N3TST11TileRowInfoE
N3TST4TileE
N3TST16TileStorage_TileE
N3TST11TileStorageE
N3TST24PopUpMenuModel_CellValueE
N3TST14PopUpMenuModelE
N3TST44ImportWarningSetArchive_FormulaImportWarningE
N3TST23ImportWarningSetArchiveE
N3TST34CellRefImportWarningSetPairArchiveE
N3TST32ImportWarningSetByCellRefArchiveE
N3TST23TableDataList_ListEntryE
N3TST13TableDataListE
N3TST20TableDataListSegmentE
N3TST16TableRBTree_NodeE
N3TST11TableRBTreeE
N3TST26HeaderStorageBucket_HeaderE
N3TST19HeaderStorageBucketE
N3TST13HeaderStorageE
N3TST9DataStoreE
N3TST16TableInfoArchiveE
N3TST19CategoryInfoArchiveE
N3TST18WPTableInfoArchiveE
N3TST24TableStyleNetworkArchiveE
N3TST53TableGroupSortOrderUIDArchive_GroupSortRuleUIDArchiveE
N3TST29TableGroupSortOrderUIDArchiveE
N3TST37TableSortOrderArchive_SortRuleArchiveE
N3TST21TableSortOrderArchiveE
N3TST40TableSortOrderUIDArchive_SortRuleArchiveE
N3TST24TableSortOrderUIDArchiveE
N3TST31SortRuleReferenceTrackerArchiveE
N3TST10CellRegionE
N3TST20CellUIDRegionArchiveE
N3TST26StructuredTextImportRecordE
N3TST17TableModelArchiveE
N3TST19SummaryModelArchiveE
N3TST37SummaryModelGroupByChangeStateArchiveE
N3TST22ColumnRowUIDMapArchiveE
N3TST35StrokeLayerArchive_StrokeRunArchiveE
N3TST18StrokeLayerArchiveE
N3TST20StrokeSidecarArchiveE
N3TST22DurationWrapperArchiveE
N3TST4CellE
N3TST21MergeRegionMapArchiveE
N3TST14CellMapArchiveE
N3TST28CellListArchive_OptionalCellE
N3TST15CellListArchiveE
N3TST24ConcurrentCellMapArchiveE
N3TST38ConcurrentCellListArchive_OptionalCellE
N3TST25ConcurrentCellListArchiveE
N3TST25CellFormatAndValueArchiveE
N3TST15CellSpecArchiveE
N3TST28CommentStorageWrapperArchiveE
N3TST15CellDiffArchiveE
N3TST13CellDiffArrayE
N3TST20CellDiffArraySegmentE
N3TST18CellDiffMapArchiveE
N3TST39HierarchicalCellDiffMapArchive_BoxedRowE
N3TST30HierarchicalCellDiffMapArchiveE
N3TST48DoubleStyleMapArchive_DoubleStyleMapEntryArchiveE
N3TST21DoubleStyleMapArchiveE
N3TST46StyleTableMapArchive_StyleTableMapEntryArchiveE
N3TST20StyleTableMapArchiveE
N3TST16SelectionArchiveE
N3TST41DeathhawkRdar39989167CellSelectionArchiveE
N3TST22StrokeSelectionArchiveE
N3TST27ControlCellSelectionArchiveE
N3TST25StockCellSelectionArchiveE
N3TST25TableNameSelectionArchiveE
N3TST24AutofillSelectionArchiveE
N3TST25FilterRulePrePivotArchiveE
N3TST17FilterRuleArchiveE
N3TST17TableStyleArchiveE
N3TST16CellStyleArchiveE
N3TST25FormulaPredArgDataArchiveE
N3TST21FormulaPredArgArchiveE
N3TST31FormulaPredicatePrePivotArchiveE
N3TST23FormulaPredicateArchiveE
N3TST55ConditionalStyleSetArchive_ConditionalStyleRulePrePivotE
N3TST47ConditionalStyleSetArchive_ConditionalStyleRuleE
N3TST48ConditionalStyleSetArchive_ConditionalStyleRulesE
N3TST26ConditionalStyleSetArchiveE
N3TST16FilterSetArchiveE
N3TST42UniqueIndexArchive_UniqueIndexEntryArchiveE
N3TST18UniqueIndexArchiveE
N3TST41HiddenStateExtentArchive_RowOrColumnStateE
N3TST24HiddenStateExtentArchiveE
N3TST19HiddenStatesArchiveE
N3TST24HiddenStatesOwnerArchiveE
N3TST26ExpandCollapseStateArchiveE
N3TST22TokenAttachmentArchiveE
N3TST14FormulaArchiveE
N3TST21ExpressionNodeArchiveE
N3TST18BooleanNodeArchiveE
N3TST17NumberNodeArchiveE
N3TST17StringNodeArchiveE
N3TST21IdentifierNodeArchiveE
N3TST16ArrayNodeArchiveE
N3TST15ListNodeArchiveE
N3TST19OperatorNodeArchiveE
N3TST26PostfixOperatorNodeArchiveE
N3TST25PrefixOperatorNodeArchiveE
N3TST19FunctionNodeArchiveE
N3TST22FunctionEndNodeArchiveE
N3TST15DateNodeArchiveE
N3TST20ReferenceNodeArchiveE
N3TST19DurationNodeArchiveE
N3TST30ArgumentPlaceholderNodeArchiveE
N3TST26EmptyExpressionNodeArchiveE
N3TST14LetNodeArchiveE
N3TST13InNodeArchiveE
N3TST19VariableNodeArchiveE
N3TST17LayoutHintArchiveE
N3TST32CompletionTokenAttachmentArchiveE
N3TST30HiddenStateFormulaOwnerArchiveE
N3TST36FormulaStoreArchive_FormulaStorePairE
N3TST19FormulaStoreArchiveE
N3TST21MergeOperationArchiveE
N3TST17MergeOwnerArchiveE
N3TST23PencilAnnotationArchiveE
N3TST28PencilAnnotationOwnerArchiveE
N3TST18AccumulatorArchiveE
N3TST18GroupColumnArchiveE
N3TST22GroupColumnListArchiveE
N3TST22ColumnAggregateArchiveE
N3TST26ColumnAggregateListArchiveE
N3TST29GroupByArchive_AggNodeArchiveE
N3TST32GroupByArchive_AggregatorArchiveE
N3TST66GroupByArchive_GroupNodeArchive_FormatManagerArchive_RowSetArchiveE
N3TST52GroupByArchive_GroupNodeArchive_FormatManagerArchiveE
N3TST31GroupByArchive_GroupNodeArchiveE
N3TST14GroupByArchiveE
N3TST20CategoryOwnerArchiveE
N3TST23CategoryOwnerRefArchiveE
N3TST36PivotGroupingColumnOptionsMapArchiveE
N3TST17PivotOwnerArchiveE
N3TST22RichTextPayloadArchiveE
N3TST35FormulaEqualsTokenAttachmentArchiveE
N3TST15CellFillStandInE
N3TST23FormulaSelectionArchiveE
N3TST17CellBorderArchiveE
N3TST33DefaultCellStylesContainerArchiveE
N3TST25MultiTableRemapperArchiveE
N3TST27ChangePropagationMapWrapperE
N3TST41SummaryCellVendorArchive_SummaryCellEntryE
N3TST24SummaryCellVendorArchiveE
N3TST20CategoryOrderArchiveE
N3TST17PivotOrderArchiveE
N3TST44HeaderNameMgrTileArchive_NameFragmentArchiveE
N3TST24HeaderNameMgrTileArchiveE
N3TST36HeaderNameMgrArchive_PerTableArchiveE
N3TST20HeaderNameMgrArchiveE
N3TST28WidthHeightCacheFittingEntryE
N3TST16WidthHeightCacheE
N3TST19LayoutEngineArchiveE
~~s~~~~x~
 0@R
+A6
i%n9HS
'/16TSCEReferenceSet
[f/q|
A7}!(#
?V1T!&G
AAAA
C`}"
C`}"
30TSCEASTRowColumnUidMapRewriter
44TSCEASTSearchForExcelTranslationNeedIterator
&5DSer
TSTStylePropertyArchiving.proto
TSPMessages.proto
TSDArchives.proto
TSKArchives.proto
TSSArchives.proto
TSWPArchives.proto"
Deprecated_TableStrokeArchive
stroke
.TSD.StrokeArchive
background
opacity
empty
CellStylePropertiesArchive
cell_fill
.TSD.FillArchive
text_wrap
deprecated_top_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_right_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_bottom_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_left_stroke
2".TST.Deprecated_TableStrokeArchive
vertical_alignment
padding
.TSWP.PaddingArchive
top_stroke
.TSD.StrokeArchive
right_stroke
.TSD.StrokeArchive
bottom_stroke
.TSD.StrokeArchive
left_stroke
.TSD.StrokeArchive"
"Deprecated_StrokePresetDataArchive
deprecated_horizontal_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_vertical_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_exterior_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_visible_mask
StrokePresetDataArchive
horizontal_stroke
.TSD.StrokeArchive
vertical_stroke
.TSD.StrokeArchive
exterior_stroke
.TSD.StrokeArchive
visible_mask
StrokePresetListArchive
count
deprecated_preset
2'.TST.Deprecated_StrokePresetDataArchive
preset
.TST.StrokePresetDataArchive"
TableStylePropertiesArchive
banded_rows
banded_fill
.TSD.FillArchive
behaves_like_spreadsheet
auto_resize
&deprecated_header_row_separator_stroke
2".TST.Deprecated_TableStrokeArchive
#deprecated_header_row_border_stroke
2".TST.Deprecated_TableStrokeArchive
'deprecated_header_row_horizontal_stroke
2".TST.Deprecated_TableStrokeArchive
%deprecated_header_row_vertical_stroke
2".TST.Deprecated_TableStrokeArchive
&deprecated_header_column_border_stroke
2".TST.Deprecated_TableStrokeArchive
)deprecated_header_column_separator_stroke
2".TST.Deprecated_TableStrokeArchive
*deprecated_header_column_horizontal_stroke
2".TST.Deprecated_TableStrokeArchive
(deprecated_header_column_vertical_stroke
2".TST.Deprecated_TableStrokeArchive
&deprecated_footer_row_separator_stroke
2".TST.Deprecated_TableStrokeArchive
#deprecated_footer_row_border_stroke
2".TST.Deprecated_TableStrokeArchive
'deprecated_footer_row_horizontal_stroke
2".TST.Deprecated_TableStrokeArchive
%deprecated_footer_row_vertical_stroke
2".TST.Deprecated_TableStrokeArchive
.deprecated_table_body_horizontal_border_stroke
2".TST.Deprecated_TableStrokeArchive
,deprecated_table_body_vertical_border_stroke
2".TST.Deprecated_TableStrokeArchive
'deprecated_table_body_horizontal_stroke
2".TST.Deprecated_TableStrokeArchive
%deprecated_table_body_vertical_stroke
2".TST.Deprecated_TableStrokeArchive
stroke_preset_list
.TST.StrokePresetListArchive
v_strokes_visible
h_strokes_visible
hr_separator_visible
hc_separator_visible
footer_separator_visible
table_border_visible
table_header_border_visible
table_hc_divider_visible
table_hr_divider_visible
table_footer_divider_visible
OBSOLETE_master_font_size
master_font_family
writing_direction
.TSWP.WritingDirectionType
header_row_separator_stroke
.TSD.StrokeArchive
header_row_border_stroke
.TSD.StrokeArchive
header_row_horizontal_stroke
.TSD.StrokeArchive
header_row_vertical_stroke
.TSD.StrokeArchive
header_column_border_stroke
.TSD.StrokeArchive
header_column_separator_stroke
.TSD.StrokeArchive
header_column_horizontal_stroke
.TSD.StrokeArchive
header_column_vertical_stroke
.TSD.StrokeArchive
footer_row_separator_stroke
.TSD.StrokeArchive
footer_row_border_stroke
.TSD.StrokeArchive
footer_row_horizontal_stroke
.TSD.StrokeArchive
footer_row_vertical_stroke
.TSD.StrokeArchive
#table_body_horizontal_border_stroke
.TSD.StrokeArchive
!table_body_vertical_border_stroke
.TSD.StrokeArchive
table_body_horizontal_stroke
.TSD.StrokeArchive
table_body_vertical_stroke
.TSD.StrokeArchive
category_level1_top_stroke
.TSD.StrokeArchive
category_level2_top_stroke
.TSD.StrokeArchive
category_level3_top_stroke
.TSD.StrokeArchive
category_level4_top_stroke
.TSD.StrokeArchive
category_level5_top_stroke
.TSD.StrokeArchive
category_level1_bottom_stroke
.TSD.StrokeArchive
category_level2_bottom_stroke
.TSD.StrokeArchive
category_level3_bottom_stroke
.TSD.StrokeArchive
category_level4_bottom_stroke
.TSD.StrokeArchive
category_level5_bottom_stroke
.TSD.StrokeArchive
category_level1_interior_stroke
.TSD.StrokeArchive
category_level2_interior_stroke
.TSD.StrokeArchive
category_level3_interior_stroke
.TSD.StrokeArchive
category_level4_interior_stroke
.TSD.StrokeArchive
category_level5_interior_stroke
.TSD.StrokeArchive
&category_level1_label_separator_stroke
.TSD.StrokeArchive
&category_level2_label_separator_stroke
.TSD.StrokeArchive
&category_level3_label_separator_stroke
.TSD.StrokeArchive
&category_level4_label_separator_stroke
.TSD.StrokeArchive
&category_level5_label_separator_stroke
.TSD.StrokeArchive
(table_body_pivot_group_horizontal_stroke
.TSD.StrokeArchive
&table_body_pivot_group_vertical_stroke
.TSD.StrokeArchive
-table_body_pivot_deemphasis_horizontal_stroke
.TSD.StrokeArchive
)table_body_pivot_emphasis_vertical_stroke
.TSD.StrokeArchive
+header_column_pivot_group_horizontal_stroke
.TSD.StrokeArchive
+header_column_pivot_group_deemphasis_stroke
.TSD.StrokeArchive
$header_column_pivot_separator_stroke
.TSD.StrokeArchive
&header_row_pivot_group_vertical_stroke
.TSD.StrokeArchive
(header_row_pivot_group_deemphasis_stroke
.TSD.StrokeArchive
header_row_pivot_title_stroke
.TSD.StrokeArchive
&footer_row_pivot_group_vertical_stroke
.TSD.StrokeArchive"n
TableStylePresetArchive
index
image
.TSP.Reference
style_network
.TSP.Reference")
TableStrokePresetArchive
index
ThemePresetsArchive
table_style_presets
.TSP.Reference
table_cell_stroke_presets
.TSP.Reference2?
extension
.TSS.ThemeArchive
.TST.ThemePresetsArchive
N3TST29Deprecated_TableStrokeArchiveE
N3TST26CellStylePropertiesArchiveE
N3TST34Deprecated_StrokePresetDataArchiveE
N3TST23StrokePresetDataArchiveE
N3TST23StrokePresetListArchiveE
N3TST27TableStylePropertiesArchiveE
N3TST23TableStylePresetArchiveE
N3TST24TableStrokePresetArchiveE
N3TST19ThemePresetsArchiveE
!"#$%&'()*+,-./0123444456789:;<=>?@ABCDEFGHIJJJKLLLMNOOPQRSTUVWXYYZ[\\\\\\\\\\\\\\\\\\\]^_``````abcdefghijklmnopYYYYYYYYYYYYYYYY
-23
'67
?@
/ g 
"%"+"5"?"C"M"W"a"k"u"
#!#+#5#?#I#S#]#g#m#w#
$)$/$9$D$N$X$^$f$p$t$~$
%&%0%3%=%G%Q%Y%c%g%q%t%~%
&)&4&>&H&L&V&`&j&t&x&
'!'+'.'1';'E'O'Y'_'i's'{'
15TSTDefaultLexer
21TSTDefaultyyFlexLexer
9FlexLexer
 !"#$%&'()*+,-./
pSDA
xCuT
IAVW
?w@CR!"#$%&'()*+,-/0123
LH;<=>?I@
yz{|}~
UDJ@
XYZ[\]^_`abcdefg
hijk
456789:;<=>?
@456789:;<=>?
456789:;<=>?
AB:;<=>?C@DC
DDDDDDDDDDDDDDDDDD
()*46
DDDDDDDDDDDDDDDDBDDDD,DDD@
!&"%$'
DDDD
(+527
0318?:?D
012222222222222222222222222222333344444556667777777778899:;;<<==>>??
PNO 
'(23456789:>?????????????
????? !"#$%&'()*+-
2<=;<
3<?22???????????????????????
3>222222222222355>7>
6>????%??=<?22
??22
2%?2
2$?2
2#?2
2 ?2
2"?2
2!?2
2&?2
2(?2
2'?2
2*?2
2)?2
2+?2
?3%?2
?%?2
8,?7
!#%')+-/
!"#$%&'()*+,-./0123444456789:;<=>?@ABCDEFGHIJJJKLLLMNOOPQRSTUVWXYYZ[\\\\\\\\\\\\\\\\\\\]^_``````abcdefghijklmnopYYYYYYYYYYYYYYYY
r'r'o
r'r'r'
r'r'r'
r'r'r'r'`
r'r'r'r'
r'r'
r'r'
r'r'r'
" "*"."8"B"L"V"`"j"t"~"
# #*#4#>#H#R#X#b#l#p#z#
$$$/$9$C$I$Q$[$_$i$s$w$
%(%2%<%D%N%R%\%_%i%s%{%
&)&3&7&A&K&U&_&c&m&w&
'&'0':'D'J'T'^'f'
13TSTCommaLexer
#$%&'()*+,-./012334555556789:;<=>?@ABBCDDDEFEEEGHHHHIHHHHJKLMNONPPQRRRRRRRRRRRRRRRRRRRRSRTUUUUUUVWXYZZZZZZZZZZ[\PPPPPPPPPPPPPPPP
16TSCEDefaultLexer
22TSCEDefaultyyFlexLexer
 !"#$%&'(
0123456789:;<
FGHIJK
 !"#$%&
_fgh]^
hi]^fg}&v
#$%&
 !"#$%&!"#$%&PQRSTUVWXYZ[
%&fg
E'=F
)*+,-./|
@PQRSTUVWXYZ[\B]^_v`
 cdefgh
0123456789:;<>?{
wyxz=<'
AHANO
 9:;<GK6789:;<789:;<jklmnopqrstu
H~#BA
BBBBBBBB
$&'15:""BBB@?
%',>
BBBBBBBBBBBBB
BBB4B#!!BBBBBB8B
()*+23
9BBB(-/*.076
)*++++++++++++++++++++,,--./0112233444555556666678888999::;;;<==>>
!"+,.014578:;<>>
-/5689=>>>>>>>>
 !"#$%&1
++>>>>>>>>>>>>>>>>>22>>>>>>>++++++++++++
8:8:;<,0
89=89==;
>>>3
+ >+
+">+
+!>+
+$>+
+#>+
+%>+
$).38=BFJNPSVX[^aeilpsz
TSWPStorage *TSCERichTextStorage::wpStorage() const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERichTextStorage.mm
can't access TSWPStorage of non-rich rich text storage
TSCERichTextStorage TSCERichTextStorage::substringWithRange(const NSRange &) const
Couldn't convert string obtained from storage to UTF-8 - broke a composed character, perhaps?
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
@"NSString"16@?0@"NSString"8
-[TSWPStorage(TSTFormulaAdditions) i_copyIntoContext:stylesheet:paragraphStyle:listStyle:bakeModes:resettingHostTableToMatch:referenceColorHelper:disableMenus:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSWPStorage_FormulaAdditions.mm
Creating a copy of the storage resulted in a smaller storage.
-[TSWPStorage(TSTFormulaAdditions) i_copyIntoContext:stylesheet:paragraphStyle:listStyle:bakeModes:resettingHostTableToMatch:referenceColorHelper:disableMenus:]_block_invoke
Found an attachment that wasn't a TSTWPTokenAttachment
attachment character index out of bounds. Bailing.
Expected destination storage to have an attachment character at this index.
v8@?0
TSUDefaultCat
v40@?0@"TSTWPTokenAttachment"8Q16Q24^B32
-[TSWPStorage(TSTFormulaAdditions) p_rangeOfString:orNodeClass:range:]
Do not call method
%s: %s
-[TSWPStorage(TSTFormulaAdditions) p_stringWithFormulaAsTextFromRange:returningTokenValues:]
Attachment index mismatch
-[TSWPStorage(TSTFormulaAdditions) p_detokenizeTokenAtCharIndex:]
expected only token attachments within the detokenization range
-[TSWPStorage(TSTFormulaAdditions) p_replaceTokenAtCharIndex:withText:]
invalid nil value for '%{public}s'
token
text
-[TSTGroupNode computedGroupValueTuple]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGroupNode.mm
Only the root groupNode should have no parentNode pointer
-[TSTGroupNode setupWithGroupCellValue:groupBy:atLevel:groupUid:children:]
Root node shouldn't have a cellValue
v24@?0q8^B16
-[TSTGroupNode loadFromArchive:unarchiver:forGroupBy:]
unarchiver
v32@?0{TSKUIDStruct=QQ}8^B24
v16@?0@"NSMutableArray"8
-[TSTGroupNode encodeToArchive:backwardCompatOptions:archiver:]
Only the root node has a nil groupCellValue?!
-[TSTGroupNode updateWithDocumentRoot:]
documentRoot
-[TSTGroupNode findGroupNodeForDisplayValuesFromSplitter:atLevel:startAtComponent:startAtWord:preserveFlags:]
Not supported for disconnected GroupNodes
boo_TRUE
boo_FALSE
str_%@
-[TSTGroupNode p_refreshGroupValue]
Unexpected new key:%{public}@, expected:%{public}@
-[TSTGroupNode updateGroupCellValueIfKeyMatches:]
canonicalKeyString shouldn't change here
-[TSTGroupNode insertRowUid:atRowIndex:forGroupValueTuple:atLevel:withLocale:createdGroupNodeCount:]
Pivot table groupBy's EXPECT to be provided with valid rowIndexes
Invalid rowUids should only be coming in for disconnected GroupNodes - normally, we should only add valid rows
-[TSTGroupNode removeRowUid:forGroupValueTuple:atLevel:withLocale:]
Pivot groupBys shouldn't need removeRowUid - we'll need to fix _pivotOnlyRowIndexes if they do
-[TSTGroupNode removeRowUids:]
Pivot groupBys shouldn't need removeRowUids - we'll need to fix _pivotOnlyRowIndexes if they do
+[TSTGroupNode needFormulasForAggregateType:]
Shouldn't be asking if TSCEAggType_Indirect needs formulas
Shouldn't be asking if TSCEAggType_INVALID needs formulas
-[TSTGroupNode rebuildFormulasForAggNode:]
v24@?0@"TSTGroupNode"8^B16
v24@?0r^{TSUIndexRange=qq}8^B16
-[TSTGroupNode containsAnyRowUidInRowUidSet:]
-[TSTGroupNode clearAllGroupNodes]
-[TSTGroupNode clearEmptyNodes]
+[TSTGroupNode localizedStringForCellValue:categoryLevel:groupBy:]
result
-[TSTGroupNode rawGroupValueCellValue]
-[TSTGroupNode groupValueCellValue]
-[TSTGroupNode groupValueCellValueForGroupBySet:aggIndex:appendAggregateName:]
Grand Total
TSTables
%@ %@
-[TSTGroupNode groupValueHierarchyForChart:]
-[TSTGroupNode groupValueHierarchyForChart:groupBySet:aggIndex:appendAggregateName:]
-[TSTGroupNode groupValueHierarchyStringWithDelimiterString:namingContext:]
-[TSTGroupNode firstVisibleNodeUsingColumnRowUIDMap:forDimension:leafLevel:pivotTableHiddenExtent:]
columnRowUIDMap
-[TSTGroupNode addAggNode:]
Aggregator needs to be setup already
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
void TSTArgumentAtIndexLocator::setArgumentAt(NSInteger, TSTFormulaPredArg *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTArgumentAtIndexLocator.mm
Position %d not supported
virtual TSCEASTElement *TSTArgumentAtIndexLocator::linkedRefNode(TSCEASTLinkedRefElement *)
Never used - now deprecated TSCEASTLinkedRowRefNode
-[TSCEWarning copyByRemappingEntityIDs:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEWarning.mm
TSCE_PORT_ENABLE_REFERENCES: This is probably a bug.
-[TSCEWarning displayStringWithCalculationEngine:forTable:andCellID:]
empty cell warnings are not supported
The formula refers to %@, which contains a cell without a number.
TSCalculationEngine
The formula refers to %@, which contains cells without numbers.
The formula refers to cells without numbers.
The formula compares %@ to %@.
The link is invalid.
ISODD arguments must be integers.
ISEVEN arguments must be integers.
DATE day argument should be between 1 and 31.
DATE month argument should be between 1 and 12.
The formula uses a Boolean in place of a number.
The ranges given to SUMIF have different sizes.
Duration units were removed.
The units of all arguments were converted to match the units of the first argument.
%@%@%@
 (ignored) 
-[TSTCellSelection initWithTableInfo:selectionType:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellSelection.mm
expected inequality between %{public}s and %{public}s
selectionType
kNoSelection
-[TSTCellSelection initWithTableInfo:rowOrColumn:index:count:]
Invalid selection type used with rowOrColumn initializer.
-[TSTCellSelection logicalCellIDInTable:]
Cannot provide a logical cell ID for a selection that is not rectangular or does not represent a single cell or merge
v16@?0@"TSTTableInfo"8
v32@?0{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8^B24
-[TSTCellSelection selectionByExtendingWithCellRange:inTable:selectionType:cursorCell:]
Can't extend a selection with an invalid cell range
-[TSTCellSelection selectionByAddingCellRange:inTable:withAnchor:cursor:selectionType:]
-[TSTCellSelection selectionByRemovingCellRange:inTable:withAnchor:cursor:selectionType:]
Can't remove an invalid cell range
<%@: %p type: %@ region: %@ base region: %@ anchor: %@ cursor: %@>
<%@: %p type: %@ anchor: %@ cursor: %@>
TSTSelectionType TSTArchivedToNativeSelectionType(const TST::SelectionTypeArchive)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTArchiveUtilities.h
shouldn't be converting from deprecated archived selection type %d
region
column
noSelection
<unknown>
-[TSTRefParser p_parseStringAsGeometricReferenceComponent:inResolver:outPreserveFlags:gettingReferencesMatchingInputAsPrefix:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTRefParser.mm
can't look for geometric references in no particular table
v24@?0r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}8^B16
%@%@ %@%@
%@%@
-[TSTRefParser parseAsTractRefWithParsingContext:]
We should only have a nil preferred geometric resolver if a non-unique table name on another sheet is given without sheet name
-[TSTRefParser parseAsChromeRefWithParsingContext:]
%@:%@
bug in reference parser - only ranges expected here
If there is only one range reference, it should match resultRangeRef.
-[TSTTableModel setStylesheetForUpgradeToSingleStylesheet:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableModel.mm
presets
v32@?0@8Q16^B24
Fatal Assertion failure: %{public}s %{public}s:%d Caller must provide preset or styles or both.
-[TSTTableModel initWithContext:tableUID:columnRowUIDMap:styles:stylePreset:tableInfo:]_block_invoke
Caller must provide preset or styles or both.
v12@?0{TSUModelRowIndex=I}8
v10@?0{TSUModelColumnIndex=S}8
TSTPencilCat
v40@?0@"TSTPencilAnnotation"8@"TSCEFormulaObject"16Q24^B32
@"TSCEFormulaObject"24@?0@"TSCEFormulaObject"8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16
v24@?0@"<TSTCellIteratorData>"8^B16
v48@?0I8@"TSDStroke"12{TSTSimpleRange=qQ}20i36^B40
v48@?0S8@"TSDStroke"12{TSTSimpleRange=qQ}20i36^B40
Fatal Assertion failure: %{public}s %{public}s:%d Problem making sourceBodyRef with range: %@
-[TSTTableModel initAsPivotDataWithContext:tableInfo:sourceModel:sourceBody:sourceHeader:]
Problem making sourceBodyRef with range: %@
calcEngine
expected nil value for '%{public}s'
_tableStylePreset
 as Pivot Source Table
@"TSSStyle"16@?0@"TSSStyle"8
v24@?0Q8^B16
@"TSTConcurrentCellIteratorFourArgRock"24@?0{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
@32@?0@"<TSTCellIteratorData>"8@"TSTConcurrentCellIteratorFourArgRock"16@24
v32@?0@"TSUMutablePair"8Q16^B24
v16@?0@"NSArray"8
-[TSTTableModel p_updateMergesAndCellsAsPivotDataWithSourceModel:sourceRegion:sourceBodyRegion:]
We should really have rows in a pivot source.
v40@?0{TSUCellCoord=ISBB}8@"TSTCell"16Q24^B32
@"TSTCellMap"24@?0{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
@32@?0@"<TSTCellIteratorData>"8@"TSTCellMap"16@24
v32@?0^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}8{TSUCellCoord=ISBB}16^B24
-[TSTTableModel upgradeDuringDocumentUpgradeIfNeeded:tableInfo:]
Invalid parameter not satisfying: %{public}s
tableInfo != nil
hiddenStates
v24@?0@"TSKCustomFormatWrapper"8^B16
@32@?0@"<TSTCellIteratorData>"8@"TSTConcurrentCellList"16@24
@"TSTConcurrentSparseCellList"24@?0{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
v16@?0@"TSTTableStyle"8
v16@?0@"TSTCellStyle"8
v16@?0@"TSWPParagraphStyle"8
v16@?0@"TSWPShapeStyle"8
v16@?0@"TSTTableStylePreset"8
v16@?0@"TSTHiddenStateFormulaOwner"8
v16@?0@"TSTTableFilterSet"8
v16@?0@"TSTCategoryOwner"8
v16@?0@"TSTPivotOwner"8
v16@?0@"TSWPStorage"8
v16@?0@"TSTColumnRowUIDMap"8
v16@?0@"TSTStrokeSidecar"8
-[TSTTableModel loadFromUnarchiver:]
Unequal date grouping columns and values. We can't make a map.
TSTPivotTables
Fatal Assertion failure: %{public}s %{public}s:%d Bad table model feature version!
-[TSTTableModel saveToArchiver:]
Bad table model feature version!
Unexpected categories feature version in TSTTableModel.
-[TSTTableModel setTableInfo:]
Do not set a tableInfo pointer on a pivotDataModel
Fatal Assertion failure: %{public}s %{public}s:%d Trying to set a non-nil tableInfo on tableModel of type %d, not allowed.
Trying to set a non-nil tableInfo on tableModel of type %d, not allowed.
-[TSTTableModel setIsAPivotDataModel:]
A pivotDataModel cannot have a tableInfo pointer.
-[TSTTableModel setTextImportRecord:]
Bad import record type!
-[TSTTableModel verifySubOwnerUIDsUsed]
Conditional styles ownerUid isn't subOwner uid for table:%@
TableModel %@: Sort Rule ownerUid isn't subOwner uid table:%@
Merge ownerUid isn't subOwner uid table:%@
Pencil Annotation ownerUid isn't subOwner uid table:%@
Pivot ownerUid isn't subOwner uid table:%@
TSTHiddenStateFORMULAOwner ownerUid isn't subOwner uid table:%@
<%@> %@ (%@%@)
 From: %@
-[TSTTableModel unnamedTableString]
locale
Table %@
untitledTableNameFormat
-[TSTTableModel setCellsWithBaseCellMap:ignoreFormulas:skipDirtyingNonFormulaCells:]
using a uid based cellmap where a coord based one is expected
-[TSTTableModel clearCommentHostingMapForCommentStorage:]
Tables Comment Storage should not be empty
-[TSTTableModel commentHostingAtBaseCellCoord:forCommentStorage:]
Comment storages should be equal
-[TSTTableModel heightOfRowAtIndex:isDefault:]
Bad row index!
-[TSTTableModel widthOfColumnAtIndex:isDefault:]
Bad column index!
-[TSTTableModel setHeight:ofRowAtIndex:]
-[TSTTableModel setWidth:ofColumnAtIndex:]
v32@?0@"NSNumber"8Q16^B24
-[TSTTableModel insertColumnsAtIndex:uids:metadatas:tableArea:]
invalid table area for column insert
not enough room in the header
-[TSTTableModel insertRowsAtIndex:uids:metadatas:tableArea:unsetFilterHidingAction:]
invalid table area for row insert
not enough room in the header for insert
not enough room in the footer for insert
v32@?0{_NSRange=QQ}8^B24
-[TSTTableModel setHidingState:atRowIndex:]
-[TSTTableModel setHidingState:atColumnIndex:]
-[TSTTableModel columnNameForCellID:restrictToBodyRange:]
refNamer
Column %@
-[TSTTableModel setFormulaOwnerUIDsWithMap:shouldStealReferences:]
Really needed an ownerUIDMapper here - tableModel is %@ (%@)
@"TSCEFormulaObject"28@?0@"TSCEFormulaObject"8I16^B20
@"TSTConditionalStyleSet"28@?0@"TSTConditionalStyleSet"8I16^B20
v32@?0@"TSCEFormulaObject"8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16^B24
-[TSTTableModel registerAllFormulasWithCalculationEngine:wasCrossDocumentPaste:infoIsCategorized:wasUndo:]
expect the locally set calc engine to be the same as the one passed in
v24@?0Q8@"TSCEFormulaObject"16
@"TSSStyle"32@?0@"TSSStyle"8@"NSString"16Q24
-[TSTTableModel adoptStylesheet:withMapper:]
we expect the table to not be registered yet
 Document or Theme
-[TSTTableModel validateTableStylesInSameStylesheetExpectingDocSS:]
Expected non-nil document stylesheet for validation.
-[TSTTableModel validateTableStylesInSameStylesheetExpectingDocSS:]_block_invoke
styleStylesheet
Expected%{public}@ stylesheet %p on table network style %lu, got %p
v40@?0@"TSSStyle"8@"NSString"16Q24^B32
v40@?0@"TSWPParagraphStyle"8{_NSRange=QQ}16^B32
-[TSTTableModel baseCellCoordForCellContainingRichTextStorage:]
storage
{vector<TSTCellBorder *, std::allocator<TSTCellBorder *>>=^@^@{__compressed_pair<TSTCellBorder *__strong *, std::allocator<TSTCellBorder *>>=^@}}20@?0{TSUModelRowIndex=I}8^v12
@"TSTCell"24@?0^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}8Q16
{vector<TSTCell *, std::allocator<TSTCell *>>=^@^@{__compressed_pair<TSTCell *__strong *, std::allocator<TSTCell *>>=^@}}44@?0{TSUModelRowIndex=I}8@"TSTTableTile"12@"TSTTableTileRowInfo"20^v28^v36
v40@?0{TSUModelCellCoord={TSUCellCoord=ISBB}}8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@"TSTCell"24@"TSTCell"32
-[TSTTableModel setCellsConcurrently:ignoreFormula:clearImportWarnings:formulaReplacer:]_block_invoke_3
baseCoord should be valid
-[TSTTableModel setCellsConcurrently:ignoreFormula:clearImportWarnings:formulaReplacer:]_block_invoke_4
cells called should have rich text
TSTCategorizedTables
TSTExpandedTables
TSTFutureProofCell
TSTPivotTables v2
NSString *TSTFeatureIdentifierForCompatibilityVersion(TSPVersion)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCompatibility.h
Unimplemented version for TSTCompatibility: %@
double TSTCellStorageDurationValue(TSTCellStorage *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellStorage.h
Asked for duration value from non-duration cell.
TSUCellRect TSUCellRangeFromRowRange(NSRange, TSUColumnRowSize)
/Library/Caches/com.apple.xbs/Binaries/iWorkImport_Sim/install/Symbols/BuiltProducts/TSUtility.framework/Headers/TSUColumnRowRect.h
out of bounds
TSUCellRect TSUCellRangeFromColumnRange(NSRange, TSUColumnRowSize)
-[TSTMutableCellIteratorData cellID]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTMutableCellIteratorData.m
cellID read before it was set
-[TSTMutableCellIteratorData cell]
cell read before it was set
-[TSTMutableCellIteratorData mergeRange]
mergeRange read before it was set
-[TSTMutableCellIteratorData formulaSpec]
formulaSpec read before it was set
v24@?0@"TSTTableTileRowInfo"8^B16
v28@?0@"TSTTableTileRowInfo"8I16^B20
Tables/Tile
-[TSTTableTile _setRowInfo:atTileRowIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableTile.mm
Duplicate row indexes!
Fatal Assertion failure: %{public}s %{public}s:%d Table embiggening is a one-way process
-[TSTTableTile setShouldUseWideRows:]
Table embiggening is a one-way process
-[TSTTableTile populatedRows]_block_invoke
rowInfo
<%@:%p %lu cells/ rows %@ >
Couldn't find row info for row index %lu
-[TSTTableTile setCell:atColumnIndex:tileRowIndex:formatKeys:]
Fatal Assertion failure: %{public}s %{public}s:%d Missing formatKeys when we need them!.
Missing formatKeys when we need them!.
v32@?0@"NSObject"8Q16^B24
-[TSTTableTile assertListRows]_block_invoke
In assertListRows, saw a row info that has no cells
void _assertTileIndexMatch(TSURowIndex, TSURowIndex)
TableTile row index %u should match array index %u.
dat_
-[TSCEDateCellValue compareToCellValue:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEDateCellValue.mm
Unexpected value type found
-[TSTCellRangeControlSpec initWithInteractionType:minimum:maximum:increment:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellRangeControlSpec.mm
Illegal interaction type:%@
Illegal parameters: %f, %f, %f
+[TSTCellRangeControlSpec cellSpecFromTSKFormat:]
TSTCellRangeControlSpec can only be created from TSKFormats for Stepper, Slider, and Rating.
virtual TSCEASTElement *TSCEASTMoveRegionRewriter::colonTractNode(TSCEASTColonTractElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTMoveRegionRewriter.mm
Not expected to need to combine RelativeTractRef rewrites
v16@?0@8
ACCRINT
ACCRINTM
ACOS
ACOSH
ADDRESS
AREAS
ASIN
ASINH
ATAN
ATAN2
ATANH
AVEDEV
AVERAGE
AVERAGEA
CEILING
CHAR
CHOOSE
CLEAN
CODE
COLUMN
COLUMNS
COMBIN
CONCATENATE
CONFIDENCE
CORREL
COSH
COUNT
COUNTA
COUNTBLANK
COUNTIF
COUPDAYBS
COUPDAYS
COUPDAYSNC
COUPNUM
COVAR
DATE
DATEDIF
DEGREES
DISC
DOLLAR
EDATE
EVEN
EXACT
FACT
FALSE
FIND
FIXED
FLOOR
FORECAST
HLOOKUP
HOUR
HYPERLINK
INDEX
INDIRECT
INTERCEPT
IPMT
ISBLANK
ISERROR
ISEVEN
ISODD
ISPMT
LARGE
LEFT
LOG10
LOOKUP
LOWER
MATCH
MAXA
MEDIAN
MINA
MINUTE
MIRR
MODE
MONTH
MROUND
NPER
OFFSET
PERCENTILE
POISSON
POWER
PPMT
PRICE
PRICEDISC
PRICEMAT
PROB
PRODUCT
PROPER
QUOTIENT
RADIANS
RAND
RANDBETWEEN
RANK
RATE
REPLACE
REPT
RIGHT
ROMAN
ROUND
ROUNDDOWN
ROUNDUP
ROWS
SEARCH
SECOND
SIGN
SINH
SLOPE
SMALL
SQRT
STDEV
STDEVA
STDEVP
STDEVPA
SUBSTITUTE
SUMIF
SUMPRODUCT
SUMSQ
TANH
TIME
TIMEVALUE
TODAY
TRIM
TRUE
TRUNC
UPPER
VALUE
VARA
VARP
VARPA
VLOOKUP
WEEKDAY
YEAR
op_Multiply
op_Divide
op_Power
op_Percent
op_PlusSign
op_Negate
__CHART
op_Add
op_Subtract
op_Concat
op_LT
op_GT
op_LE
op_GE
op_EQ
op_NE
EFFECT
NOMINAL
NORMDIST
NORMSDIST
NORMINV
NORMSINV
YIELD
YIELDDISC
YIELDMAT
BONDDURATION
BONDMDURATION
ERFC
STANDARDIZE
INTRATE
RECEIVED
CUMIPMT
CUMPRINC
EOMONTH
WORKDAY
MONTHNAME
WEEKNUM
DUR2HOURS
DUR2MINUTES
DUR2SECONDS
DUR2DAYS
DUR2WEEKS
DURATION
EXPONDIST
YEARFRAC
ZTEST
SUMX2MY2
SUMX2PY2
SUMXMY2
SQRTPI
TRANSPOSE
DEVSQ
FREQUENCY
DELTA
FACTDOUBLE
GESTEP
PERCENTRANK
GAMMALN
DATEVALUE
GAMMADIST
GAMMAINV
SUMIFS
AVERAGEIFS
COUNTIFS
AVERAGEIF
IFERROR
DAYNAME
BESSELJ
BESSELY
LOGNORMDIST
LOGINV
TDIST
BINOMDIST
NEGBINOMDIST
FDIST
PERMUT
CHIDIST
CHITEST
TTEST
QUARTILE
MULTINOMIAL
CRITBINOM
BASETONUM
NUMTOBASE
TINV
CONVERT
CHIINV
FINV
BETADIST
BETAINV
NETWORKDAYS
DAYS360
HARMEAN
GEOMEAN
DEC2HEX
DEC2BIN
DEC2OCT
BIN2HEX
BIN2DEC
BIN2OCT
OCT2BIN
OCT2DEC
OCT2HEX
HEX2BIN
HEX2DEC
HEX2OCT
LINEST
DUR2MILLISECONDS
STRIPDURATION
op_Colon
INTERSECT.RANGES
LATITUDE
LONGITUDE
BEARING
ALTITUDE
UNION.RANGES
SERIESSUM
POLYNOMIAL
WEIBULL
CONFIDENCE.T
COVARIANCE.S
MODE.MULT
PERCENTILE.EXC
PERCENTRANK.EXC
QUARTILE.EXC
RANK.AVG
FIND.CASEINSENSITIVE
PLAINTEXT
STOCK
STOCKH
CURRENCY
CURRENCYH
CURRENCYCONVERT
CURRENCYCODE
ISNUMBER
ISTEXT
ISDATE
MAXIFS
MINIFS
XIRR
XNPV
XLOOKUP
XMATCH
SUBTOTAL
COUNTMATCHES
TEXTBEFORE
TEXTBETWEEN
TEXTAFTER
REGEX
REFERENCE.NAME
FORMULATEXT
REGEX.EXTRACT
GETPIVOTDATA
__INTERACTIONTYPE
__CELLVALUETYPE
+[TSCEFunctionSpec(TSCEAutogeneratedSpecList) functionSpecList]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFunctionSpecDictionary.mm
Couldn't create functionSpecList of %@
-[TSCECellTractRef initWithUidTract:calcEngine:tableUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECellTractRef.mm
+[TSCECellTractRef cellTractRefWithUidTractList:onTable:preserveFlags:rewriteContext:]
Can't be spanning on both row and column, tractList: %{public}@
-[TSCECellTractRef uidTractWithCalcEngine:hostTableUID:]
 | %@
v24@?0r^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8^B16
TSCEASTElement *TSCEASTTransposeRewriter::shouldTransformSpanningColumnToBodyRangeReference(TSCEASTElement *, const TSCEOwnerUID &, TSUColumnIndex, BOOL, TSUCellCoord)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTTransposeRewriter.mm
Table's bodyRange wasn't valid
TSCECellTractRef *TSCEASTTransposeRewriter::transformSpanningColumnToBodyRangeReference(TSCEASTElement *, TSCECellTractRef *__strong, TSUCellCoord)
absTractRef
Couldn't locate a table with uid: %@ in calcEngine %p
Table %@ bodyRange wasn't valid
TSUColumnIndex TSCEMakeAbsoluteColumnFromRelativeColumn(TSUCellCoord, TSURelativeColumnIndex, BOOL)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCETypes.h
overflow in column
TSURowIndex TSCEMakeAbsoluteRowFromRelativeRow(TSUCellCoord, TSURelativeRowIndex, BOOL)
overflow in row, input row: %d with host row: %lu
Calling TSCEMakeAbsoluteRowFromRelativeRow with an invalid hostCell row: %@
%@ Pivot
-[TSTTableInfo initWithContext:geometry:rows:columns:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableInfo.mm
stylePreset
-[TSTTableInfo initWithContext:geometry:]
call - (instancetype) initWithContext: (TSPObjectContext *) context geometry: (TSDInfoGeometry *) geometry styles:(TSTTableStyleNetwork *)styles please
-[TSTTableInfo initAsDetailTableWithContext:sourcePivotTableInfo:pivotSourceCell:]
Expect only pivotTable to be passed in.
-[TSTTableInfo initWithContext:fromSourceInfo:cellRegion:waitForCalcEngine:flattenCategories:isSnapshot:]
Copying a categorized table without flattening. If you know how you got here, please write a bug.
v20@?0I8^B12
v20@?0S8^B12
-[TSTTableInfo _initWithContext:flatteningFromComplexInfo:cellRegion:waitForCalcEngine:flatteningOptions:isSnapshot:]
not expecting categorized or pivot table
-[TSTTableInfo _initWithContext:fromSourceInfo:cellRegion:tableModel:waitForCalcEngine:formulaCoordSpace:]
not expecting a categorized table
%@ %p: %@ (tableUID: %@ tableName: %@)
Headers table
Basic table
Checklist table
Stocks table
Plain table
Headers and footers table
+[TSTTableInfo localizedDescriptionForProtoIndex:]
No description for table proto index: %lu
Field 1
Field 2
Field 3
remotedata_positive_fill@2x.png
remotedata_negative_fill@2x.png
-[TSTTableInfo componentRootObject]
Component root object is nil!
-[TSTTableInfo performReadForOneOffFormulaEvaluation:forCellCoord:]
_translator
-[TSTTableInfo notifyTableOfNewResults]
There are no callers of this, but its needed to conform to TSCECalculationEngineRegistration protocol
-[TSTTableInfo filteringColumnNameForColumnIndex:]
-[TSTTableInfo p_setFilterSet:]
Must convert filters to geometric before setting
+[TSTTableInfo bootstrapPresetsOfKind:inTheme:alternate:reservedCount:]
expected equality between %{public}s and %{public}s
p.context
context
-[TSTTableInfo replaceReferencedStylesUsingBlock:]
failed cell map application
Table
+[TSTTableInfo validateNewName:forTable:]
Unable to get sheetNameProvider
B24@?0@"NSArray"8@"NSArray"16
TableInfo %p with tableName: '%@' and tableUID %@ is not registered with the calc-engine properly.
Repaired by renaming table to '%@' with tableUID: %@
-[TSTTableInfo allAnnotations]_block_invoke
iterator shoul only return cells with comments
^%@\s\d+(-\d+)?$
%@-%@
-[TSTTableInfo chooseUniqueNameInContainer:forPaste:needsNewName:avoidNames:]
Fresh table name is the same as the old one - aborting infinite loop.
-[TSTTableInfo getDefaultCell:forCellID:]
trying to get a default cell for an invalid cell ID
-[TSTTableInfo getCell:atCellID:suppressCellBorder:]
-[TSTTableInfo getCell:atCellID:]
-[TSTTableInfo hasFormulaAtCellUID:]
-[TSTTableInfo formulaAtCellID:]
-[TSTTableInfo setCell:atCellUID:ignoreFormula:clearImportWarnings:formulaReplacer:]
-[TSTTableInfo setCell:atCellUID:ignoreFormula:clearImportWarnings:]
-[TSTTableInfo setCellsWithCellMap:ignoreFormulas:skipDirtyingNonFormulaCells:]
coord based cellmaps no longer ok
v32@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8Q16^B24
@"TSTCellMap"24@?0{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
@"TSTConcurrentCellList"24@?0{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
-[TSTTableInfo cellValueTypeAtCellID:]
-[TSTTableInfo cellValueTypeAtCellUID:]
-[TSTTableInfo setCellStyle:ofRowAtUID:]
-[TSTTableInfo setTextStyle:ofRowAtUID:]
-[TSTTableInfo cellStyleOfRowAtIndex:isDefault:]
-[TSTTableInfo textStyleOfRowAtIndex:isDefault:]
-[TSTTableInfo setCellStyle:ofColumnAtUID:]
-[TSTTableInfo setTextStyle:ofColumnAtUID:]
-[TSTTableInfo cellStyleOfColumnAtIndex:isDefault:]
-[TSTTableInfo textStyleOfColumnAtIndex:isDefault:]
-[TSTTableInfo defaultCellStyleForCellID:useSoftDefault:outSource:]
-[TSTTableInfo defaultCellStyleForTableStyleArea:]
-[TSTTableInfo defaultTextStyleForCellID:useSoftDefault:outSource:]
-[TSTTableInfo defaultTextStyleForTableStyleArea:]
-[TSTTableInfo cellStyleAtCellID:isDefault:]
-[TSTTableInfo textStyleAtCellID:isDefault:]
-[TSTTableInfo cellStyleAtCellUID:isDefault:]
-[TSTTableInfo textStyleAtCellUID:isDefault:]
-[TSTTableInfo conditionalStyleSetAtCellID:]
-[TSTTableInfo columnNameForCellID:restrictToBodyRange:]
-[TSTTableInfo rowNameForCellID:restrictToBodyRange:]
-[TSTTableInfo columnNameForColumnIndex:withFallbackFormat:]
-[TSTTableInfo pivotDataLocalizedColumnNameAtDataColumnIndex:]
Only ask about the pivotDataModel on a pivot table.
-[TSTTableInfo stringAtCellID:optionalCell:]
-[TSTTableInfo characterFillAtCellID:optionalCell:]
Value Field
Field
Total
Row Group
Column Group
Summary
v40@?0Q8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16^B32
v16@?0Q8
-[TSTTableInfo getValue:atCellID:fetchRichTextAttributesIfPlainText:]
-[TSTTableInfo cellValueFromCell:atCellID:]
v24@?0{TSUCellCoord=ISBB}8^B16
-[TSTTableInfo cellUIDListFromCellRegion:useCategoriesWildcards:]_block_invoke
Invalid level for a summary row. We're about to crash. summaryRowIndex:%lu intersectingSummaryRowIndexes:{public}%@ translator:{public}%@
-[TSTTableInfo cellUIDListFromCellRegion:useCategoriesWildcards:]_block_invoke_3
Invalid level for a label row. We're about to crash. labelRowIndex:%lu intersectingLabelRowIndexes:{public}%@ translator:{public}%@
v40@?0C8{TSKUIDStruct=QQ}12C28^B32
-[TSTTableInfo _correctAndCheckStateSuppressingAssertions:]
TableChecker: correcting nil categoryOrder in normal/disabled state
TableChecker: correcting missing backpointer in normal/disabled state
TableChecker: correcting uid map in normal/disabled state
TableChecker: correcting strokeSidecar
TableChecker: correcting summaryModel
TableChecker: correcting maps
-[TSTTableInfo setGroupByUid:]
Hey, don't set an invalid groupByUid on TSTTableInfo - ignoring your silly request.
Not expecting our pointer to change during subOwnerUIDUpgrade, if so, categoryOwner will need to update its structures
_groupBy.groupByUid and _groupByUid should match
-[TSTTableInfo setIsCategoryEnabled:]
Cannot enable/disable categories without a groupBy
-[TSTTableInfo isEmptyPivot]
self.pivotOwner
-[TSTTableInfo applyPivotWithColumns:rows:aggregates:flatteningDimension:optionsMap:pivotRowColumnRuleChangeUid:pivotAggregateRuleChangeUid:]
Cannot apply pivot rules to a non-pivot table
v24@?0@"TSTGroupingColumn"8^B16
-[TSTTableInfo verifySubOwnerUIDsUsed]
Row hidden state ownerUid isn't subOwner uid: %@
Column hidden state ownerUid isn't subOwner uid
Category Aggregate ownerUid isn't subOwner uid
GroupBy uid isn't subOwner uid
PivotDataModel uid isn't subOwner uid
v16@?0@"TSTTableModel"8
v16@?0@"TSTSummaryModel"8
v16@?0@"TSTCategoryOrder"8
v16@?0@"TSTPivotRowColumnOrder"8
-[TSTTableInfo saveToArchive:archiver:]
Out-of-bounds type assignment was clamped to max
Out-of-bounds type assignment was clamped to min
_pivotDataModel
_pivotOrder
v16@?0@"TSDLayout"8
-[TSTTableInfo(CellMap) applyCellDiff:atCellUID:migrationMap:inverseCellDiff:defaultCellStyle:defaultTextStyle:]_block_invoke
customFormat
-[TSTTableInfo(CellMap) applyCellDiff:atCellUID:migrationMap:inverseCellDiff:defaultCellStyle:defaultTextStyle:]
TSU_SUCCESS
virtual NSString *TSCEThunkValue::string(TSCEFunctionSpec *__strong, int, TSULocale *__strong) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEThunkValue.mm
ThunkValue doesn't have a meaningful string() to provide
TSCECellDependencies::TSCECellDependencies(TSCEDependencyTracker *, TSCEInternalFormulaOwnerID, const TSCEOwnerUID &, TSCESubFormulaOwnerIndex)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECellDependencies.mm
tile.cppTile
void TSCECellDependencies::readPrecedentsWithOwners(const TSCE::EdgesArchive &, TSCECellRecord *)
corrupted file
Couldn't locate tableID found in cross-table reference: %{public}@
void TSCECellDependencies::readExpandedPrecedentsWithOwners(const TSCE::ExpandedEdgesArchive &, TSCECellRecord *)
void TSCECellDependencies::readFromArchive(const TSCE::CellDependenciesArchive &)
void TSCECellDependencies::unpackAfterUnarchive()
_dependencyTracker
v24@?0r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}8^B16
v24@?0^{TSCECellRecord=^{TSCECellRecordEdgeLists}{os_unfair_lock_s=I}Q{TSCEPackedEdge=[8c]}ISS}8^B16
void TSCECellDependencies::readFromTiledArchive(const TSCE::CellDependenciesTiledArchive &, TSPUnarchiver *__strong)_block_invoke
TSCECellRecordTileWrapper *TSCECellDependencies::tileForCoord(const TSUCellCoord &, BOOL)
Expect cppTile to be filled in already
Uh, why are we returning a tile with no insides?
v16@?0^{TSCECellRecord=^{TSCECellRecordEdgeLists}{os_unfair_lock_s=I}Q{TSCEPackedEdge=[8c]}ISS}8
v24@?0r^{TSUCellCoord=ISBB}8^B16
v28@?0S8r^v12^B20
CYCLE 
(formula) 
%@, 
void TSCECellDependencies::findAndRecordCyclesInDirtyCells(TSCETarjanState &, TSCEInternalCellRefQueue &)_block_invoke
Cycle grid out of sync.
IsDirty grid out of sync.
IsDirtyAndNotInACycle grid out of sync.
Avoided underflow in dirtySelfPlusPrecedentsCount for cell: %@
BOOL TSCECellDependencies::dirtyPrecedentCountsAreConsistent(BOOL)_block_invoke
cellRecord
%@:%@ recomputed: <clean> vs stored %lu - inconsistency.
%@...<truncated>
  +1: This cell is dirty
recomputed: %lu vs stored %lu - inconsistency, explanation:
%@precedents:%@
dirty precedents count consistency error in %@ (count is %lu, should be >1)
v16@?0@"TSDCommentStorage"8
v16@?0@"TSTRichTextReferenceWrapper"8
v16@?0@"TSTConditionalStyleSet"8
void TSTEncodeCellToArchive(TSTCell *__strong, TST::Cell *, TSPArchiver *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTArchiveUtilities.mm
stringValue in string cell is nil
TSDThreadedComments
incbi
-[TSCECellValue tsceValue]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECellValue.mm
Abstract method not overridden by %{public}@
Abstract method not overridden by %@: %s
-[TSCECellValue copyWithZone:]
-[TSCECellValue displayString]
Children of TSCECellValue should implement %@.
-[TSCECellValue canonicalKeyString]
-[TSCECellValue format]
-[TSCECellValue isEqualToCellValue:]
-[TSCECellValue hash]
-[TSCECellValue compareToCellValue:]
-[TSCECellValue updateWithCustomFormatList:]
customFormatList
-[TSCECellValue encodeCellValueToArchive:]
Unexpected value type found in archiving in TSCECellValue
-[TSTUIDRectRef convertUIDRefToViewTractRef]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTUIDRectRef.mm
If we're already uid-form, why do we have a mapper?
-[TSTUIDRectRef excludeSummaryAndLabelRows]
_calcEngine
-[TSTUIDRectRef baseRangeRef]
This API can't support multiple base ranges, had %lu
-[TSTUIDRectRef viewRangeRef]
This API can't support multiple view ranges, had %lu
%@<%p> base:
-[TSTCellIterator initWithTableInfo:tableModel:region:flags:searchFlags:clampingRange:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellIterator.mm
caller should pass in region pointer
Tried to create iterator with range larger than is possible.
cannot use iterator flags to return all empty cells and also use flags to only search for specific kinds of cells
unsupported options, searching for borders but not fetching them
flags remain 0x%lx, flags should all be consumed by this point 
searchFlags remain 0x%lx, searchFlags should all be consumed by this point 
-[TSTCellIterator p_updateDataForMergeAtCellID:]
found this column in the cached merge ranges, so expected a merge range
-[TSTCellIterator p_updateDataForCellID:]
cell iterator was asked for cellID %@ that is outside the table bounds
tableCell
tableCellText
+[TSTCellStyle properties]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellStyle.mm
sProperties
+[TSTCellStyle propertiesAllowingNSNull]_block_invoke
s_nullProperties
+[TSTCellStyle nonEmphasisCellProperties]_block_invoke
s_nonEmphasisProperties
+[TSTCellStyle categoriesCellProperties]_block_invoke
bodyStyle
headerRowStyle
headerColumnStyle
footerRowStyle
categoryLevel1Row
categoryLevel2Row
categoryLevel3Row
categoryLevel4Row
categoryLevel5Row
labelLevel1Row
labelLevel2Row
labelLevel3Row
labelLevel4Row
labelLevel5Row
pivotBodySummaryRow
pivotBodySummaryColumn
pivotHeaderColumnSummary
+[TSTCellStyle p_regionStringForTableStyleArea:]
Unexpected value for region.
+[TSTCellStyle initDefaultPropertyMap:forTableStyleArea:presetID:colors:alternate:]
-[TSTCellStyle validate]
orphaned cell style %@
Cell style not in its stylesheet
-[TSTCellStyle targetSizeForImageData:associatedHint:]_block_invoke
preset
-[TSTCellStyle targetSizeForImageData:associatedHint:]
Expected that the imageData would be from the style's fill
v20@?0i8^B12
AggregateDescriptionFormatString
%1$@ of %2$@
AggregateDescriptionWithParensFormatString
%1$@ (%2$@)
PivotCellDescriptionWithPrefixFormatString
%1$@: %2$@
PivotCellDescription5FieldsFormatString
%1$@: %2$@: %3$@: %4$@: %5$@
PivotCellDescription4FieldsFormatString
%1$@: %2$@: %3$@: %4$@
PivotCellDescription3FieldsFormatString
%1$@: %2$@: %3$@
PivotCellDescription2FieldsFormatString
PivotCellDescription1FieldsFormatString
%1$@
PivotCellDescription2FieldHolderFormatString
PivotCellDescription1FieldHolderFormatString
%@ -> %@
-[TSTPivotTranslator resetViewMap]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPivotTranslator.mm
view and base cannot be the same for a pivot table
-[TSTPivotTranslator tableStyleAreaForRow:]
Unimplemented for pivot tables, because it doesn't make sense.
i32@?0r^{TSUModelCellCoord={TSUCellCoord=ISBB}}8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16C24C28
i24@?0r^{TSUModelCellCoord={TSUCellCoord=ISBB}}8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
v12@?0C8
v24@?0r^{TSUModelRowIndex=I}8r^{TSKUIDStruct=QQ}16
v24@?0r^{TSUModelColumnIndex=S}8r^{TSKUIDStruct=QQ}16
-[TSTPivotTranslator p_applyViewCellCoord:toSummaryUsingBlock:toBaseUsingBlock:]
cell in summary row is in viewMap, but not in summaryMap
-[TSTPivotTranslator indexesForRowsContainedByGroupUIDs:]_block_invoke
do not call with root group
-[TSTPivotTranslator indexesForColumnsContainedByGroupUIDs:]_block_invoke
TSTColumnRowTypeWithIndex TSTMakeColumnRowTypeWithIndex(TSTColumnRowType, NSUInteger)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableConstants.h
Type:%ldl or index:%lul is too large for TSTIndexedColumnRowType.
-[TSTTableTileRowInfo initFromArchive:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableTileRowInfo.mm
Can't find the last valid column during unarchive!
lastPreBNCCellRef
Mismatches between buffers.
-[TSTTableTileRowInfo encodeToArchive:archiver:]
should not be archiving an empty row info
Expected current storage version.
-[TSTTableTileRowInfo _insertCell:atIndex:formatKeys:]
Can't insert over an existing cell!
Fatal Assertion failure: %{public}s %{public}s:%d Attempting to write cells to a preBNC row.
-[TSTTableTileRowInfo setCell:atIndex:formatKeys:]
Attempting to write cells to a preBNC row.
Fatal Assertion failure: %{public}s %{public}s:%d Attempting to insert columns in a preBNC row.
-[TSTTableTileRowInfo insertColumnsAtIndex:count:]
Attempting to insert columns in a preBNC row.
Fatal Assertion failure: %{public}s %{public}s:%d Attempting to remove columns in a preBNC row.
-[TSTTableTileRowInfo removeColumnsAtIndex:count:]
Attempting to remove columns in a preBNC row.
-[TSTTableTileRowInfo moveColumnsFromIndex:toIndex:count:]
Move column ranges cannot overlap!
cellsMoved
cellsMovedPreBNC
Incorrect maximum column!
-[TSTTableTileRowInfo validateWithResult:]
%{public}@
 Misaligned cell storage offsets!
 Cell storage overflow!
 Found an extra cell in this row!
 Bad cell version!
 Mismatched presence of cells.
 Misaligned cell storage offsets in PreBNC!
 Cell storage overflow in PreBNC!
 Found an extra preBNC cell in this row!
 Cell storage overflow in Pre BNC!
 Incorrect cell count! Expected:%tu Found:%tu.
 Incorrect PreBNC cell count! Expected:%tu Found:%tu.
<%@:%p tileRowIndex %lu cellCount %lu>
Fatal Assertion failure: %{public}s %{public}s:%d Never call me without a row
TSUColumnIndex _maxColumnIndex(TSTTableTileRowInfo *__unsafe_unretained)
Never call me without a row
void _invalidateMaxColumnIndex(TSTTableTileRowInfo *__unsafe_unretained)
void _updateCellBufferSize(TSTTableTileRowBuffer *, NSUInteger)
Row data buffer is too small!
Fatal Assertion failure: %{public}s %{public}s:%d Can't grow to wide columns in a row buffer not converted for wide offsets
void _extendOffsetArrayForMaxIndex(TSTTableTileRowBuffer *, TSUColumnIndex)
Can't grow to wide columns in a row buffer not converted for wide offsets
Fatal Assertion failure: %{public}s %{public}s:%d Too many columns for our row storage!
Too many columns for our row storage!
Fatal Assertion failure: %{public}s %{public}s:%d Encountered a bad offset while widening!
void _convertBufferToWideIndexes(TSTTableTileRowBuffer *)
Encountered a bad offset while widening!
void _shiftCellStorageInBuffer(TSTTableTileRowBuffer *, NSUInteger, NSInteger)
Row storage buffer overflow!
Fatal Assertion failure: %{public}s %{public}s:%d Corrupt cellStorage shift. Crashing!
Corrupt cellStorage shift. Crashing!
Fatal Assertion failure: %{public}s %{public}s:%d Computed impossible insertion point.
NSUInteger _offsetForInsertInBuffer(TSTTableTileRowBuffer *, TSUColumnIndex, TSUColumnIndex, NSInteger)
Computed impossible insertion point.
void _invalidateMaxColumnIndexForColumnIndex(TSTTableTileRowInfo *__unsafe_unretained, TSUColumnIndex)
NSUInteger _applyMovingCellBuffer(TSTTableTileRowBuffer *, TSTTableTileRowBuffer *, TSUColumnIndex, TSUColumnRowCount)
Overwriting a column in move!
NSUInteger _storageSizeInBuffer(TSTTableTileRowBuffer *, TSUColumnIndex, TSUColumnIndex)
Couldn't find next storage offset for non-last cell!
virtual TSCEASTElement *TSTCellSpecFormulaExtractor::functionNode(TSCEASTFunctionElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellFormulaSpec.mm
Need a locale to parse stock formulas.
-[TSTCellFormulaSpec initWithFormulaObject:locale:]
TSTCellFormulaSpec requires a formula.
<%@: %p>: %@
null formula
%C%C%C%%C
%C%C%C%C%C%C%C%C%C
'%C%C%C%C%C%C%C
-[TSCENameTrie removeName:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCENameTrie.mm
Verify we are deleting the correct node
UInt16 TSTCellStorageSizeForHeaderFlags(TSTCellStorageFieldFlags)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellStorage.mm
Storage size should be four-byte-aligned!
BOOL TSTCellStorageVersionCheck(TSTCellStorage *)
Can't parse cell storage header version %d!
void TSTCellToCellStorage(TSTCell *__strong, TSTCellStorage *)
Cell claims to have a string, but has no key for it!
Cell claims to have rich text, but has no key for it!
Cell claims to have a cell style, but has no key for it!
Cell claims to have a text style, but has no key for it!
Cell claims to have conditional style, but has no key for it!
Cell claims to have a formula, but has no key for it!
Cell claims to have a control, but has no key for it!
Cell claims to have a formula syntax error, but has no key for it!
Can't archive a bad format kind!
Cell claims to have a number format, but has no key for it!
Cell claims to have a currency format, but has no key for it!
Cell claims to have a date format, but has no key for it!
Cell claims to have a duration format, but has no key for it!
Cell claims to have a text format, but has no key for it!
Cell claims to have a boolean format, but has no key for it!
Cell claims to have a comment storage, but has no key for it!
Cell claims to have an import warning set, but has no key for it!
Could not archive all computed storage elements!
Failed to process all storage elements in TSTCellToCellStorage! Starting flags:%u Final flags:%u
Size miscalculation!
void TSTCellStorageToCell(TSTCellStorage *, TSTCell *__strong)
Fatal Assertion failure: %{public}s %{public}s:%d Can't get offset for unknown element 0x%02x, offset:%hu!
UInt16 p_OffsetForElementInStorage(TSTCellStorage *, TSTCellStorageFieldFlags)
Can't get offset for unknown element 0x%02x, offset:%hu!
, %@
%@::{%@}
%@::{%@, ...}
%@::%@
%@, ...
%@<%lu> %@%@
refers to: %@
; referenced by: %@
---Cell dependencies for %@ (%lu dirty cells):
-[TSTGroupingColumnList addRule:atGroupLevel:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGroupingColumnList.mm
Can't call this on root level
-[TSTGroupingColumnList removeRuleAtGroupLevel:]
-[TSTGroupingColumnList moveRuleFromGroupLevel:toLevel:]
-[TSTGroupingColumnList changeGroupingTypeForGroupLevel:toType:]
-[TSTGroupingColumnList replaceRuleAtGroupLevel:withRule:]
v32@?0@"TSTGroupingColumn"8Q16^B24
TSCEValue TSCEFunction_DAYNAME::evaluateWithContext(TSCEEvaluationContext &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEDateTimeFunctions.mm
weekday symbols: %@
TSCEValue TSCEFunction_DUR2DAYS::evaluateWithContext(TSCEEvaluationContext &)
Shouldn't get a non-duration in DUR2DAYS
TSCEValue TSCEFunction_DUR2WEEKS::evaluateWithContext(TSCEEvaluationContext &)
Shouldn't get a non-duration in DUR2WEEKS
TSCEValue TSCEFunction_DUR2HOURS::evaluateWithContext(TSCEEvaluationContext &)
Shouldn't get a non-duration in DUR2HOURS
TSCEValue TSCEFunction_DUR2MILLISECONDS::evaluateWithContext(TSCEEvaluationContext &)
Shouldn't get a non-duration in DUR2MILLISECONDS
TSCEValue TSCEFunction_DUR2MINUTES::evaluateWithContext(TSCEEvaluationContext &)
Shouldn't get a non-duration in DUR2MINUTES
TSCEValue TSCEFunction_DUR2SECONDS::evaluateWithContext(TSCEEvaluationContext &)
Shouldn't get a non-duration in DUR2SECONDS
static NSDate *TSCEFunction_WORKDAY::dateByAddingNumberOfDaysExcludingWeekends(NSDate *__strong, int, NSDateComponents *__strong)
Incorrect weekday number in function WORKDAY
virtual TSCEASTElement *TSCEASTRepairBadRefsRewriter::colonTractNode(TSCEASTColonTractElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTRepairBadRefsRewriter.mm
Can't have a reference spanning both columns and rows
-[TSCEDistributor protocol]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEDistributor.m
-[TSCEDistributor addReceiver:]
protocol MUST be defined before addReceiver can be used
Error %@: Target %@ does not conform to protocol %@ required for TSCEDistributor class %@.
-[TSCEDistributor suspendDuringBlock:]
someone added a receiver when we were not expecting it
TSCEErrorValue::TSCEErrorValue(TSCEError *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEErrorValue.mm
1)Creating a TSCEErrorValue with a nil TSCEError
TSCEErrorValue::TSCEErrorValue(const TSCEErrorValue &)
2)Creating a TSCEErrorValue with a nil TSCEError
virtual TSCEReferenceValue TSCEErrorValue::reference(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
evaluationContext
TSTGroupBySet<%p> for pivot: %@
  GroupBy %d: %@
-[TSTGroupBySet restoreFromPivotDataTable:columnGroupings:rowGroupings:aggregates:flatteningDimension:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGroupBySet.mm
Pivot data model missing when restoring rules for a pivot table
-[TSTGroupBySet setPivotRulesWithPivotDataTable:columnGroupings:rowGroupings:aggregates:flatteningDimension:]
Pivot data model missing when setting rules for a pivot table
-[TSTGroupBySet groupByForColumnLevel:rowLevel:]
columnLevel exceeds columnGroupings.count
rowLevel exceeds rowGroupings.count
No groupBy set for columnLevel: %d
-[TSTGroupBySet groupColumnIndexesForOwnerIndex:]
Exceeded our set of practical groupBys
-[TSTGroupBySet groupingColumnsForOwnerIndex:]
Expected to get a grouping column for index: %d
-[TSTGroupBySet groupByForOwnerIndex:createIfMissing:]
ownerIndex out of range: %d
Fatal Assertion failure: %{public}s %{public}s:%d Asking for flattened column aggregate uids while not flattening on columns
-[TSTGroupBySet columnUidsForColumnGroupUid:]
Asking for flattened column aggregate uids while not flattening on columns
Fatal Assertion failure: %{public}s %{public}s:%d Asking for flattened row aggregate uids while not flattening on rows
-[TSTGroupBySet rowUidsForRowGroupUid:]
Asking for flattened row aggregate uids while not flattening on rows
-[TSTGroupBySet columnNameForAggregateIndex:allowDuplicateNames:]
Re-constructing a non-empty pivot table without the calc engine
-[TSTGroupBySet descriptionForAggregateIndex:useShortLabel:allowDuplicateNames:locale:]
Requires a locale here
<Invalid AggType>: %@
Expecting to have localized label for all correct aggregate types
-[TSTGroupBySet compactDescriptionForAggregateIndex:useShortLabel:allowDuplicateNames:locale:]
-[TSTGroupBySet percentParentDenominatorCategoryRefFor:inGroupBy:forAggregate:forShowAsType:]
Only expecting these two showAsTypes, got: %d
-[TSTGroupBySet restrictColumnIndexes:toColumnGroupLevel:forPivotTable:]
Only expected this call with pivotTableInfo
-[TSTGroupBySet groupValueTupleForUuidCoord:createIfMissing:]
Couldn't locate rowGroupNode or columnGroupNode
Need a groupBy for this coordinate - why didn't you help?
TSTTableInfo
TSTTableModel
TSTTableStyle
TSTCellStyle
TSTConditionalStyleSet
TSTTableTile
TSTTableDataList
TSTTableDataListSegment
TSTTableHeaderStorageBucket
TSTWPTableInfo
TSTTableStrokePreset
TSTTableStylePreset
TSTArchivedCellSelection
TSTArchivedRdar39989167CellSelection
TSTArchivedStrokeSelection
TSTArchivedAutofillSelection
TSTCellMap
TSTConcurrentCellMap
TSTConcurrentCellList
TSTFormulaEqualsTokenAttachment
TSTWPTokenAttachment
TSTExpressionNode
TSTBooleanNode
TSTNumberNode
TSTStringNode
TSTArrayNode
TSTListNode
TSTLetNode
TSTVariableNode
TSTInNode
TSTOperatorNode
TSTPostfixOperatorNode
TSTPrefixOperatorNode
TSTFunctionNode
TSTFunctionEndNode
TSTDateNode
TSTReferenceNode
TSTDurationNode
TSTArgumentPlaceholderNode
TSTIdentifierNode
TSTMergeRegionMap
TSTEmptyExpressionNode
TSTArchivedLayoutHint
TSTCompletionToken
TSTHiddenStateFormulaOwner
TSTPopUpMenuModel
TSTRichTextPayload
TSTTableFilterSet
TSTTableStyleNetwork
TSTColumnRowUIDMap
TSTSummaryModel
TSTSummaryCellVendor
TSTCategoryOrder
TSTStrokeSidecar
TSTStrokeLayer
TSTPencilAnnotation
TSTHeaderNameMgrTile
TSTHeaderNameMgr
TSTPivotOwner
TSTPivotGroupingColumnOptionsMap
TSTPivotRowColumnOrder
TSTCategoryOwner
TSTGroupBy
TSTAggregator
TSTGroupNode
TSTCellDiffArray
TSTCellDiffArraySegment
<%@>
  %@ used at: %@
-[TSTConcurrentCellMap viewCellRects]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConcurrentCellMap.mm
can't use cellid interface with celluid map
-[TSTConcurrentCellMap cellUIDRanges]
can't use celluid interface with cellid map
-[TSTConcurrentCellMap p_cacheRowColumnUIDs]
-[TSTConcurrentCellMap appendCellList:]
cell list uid state doesn't match cell map
-[TSTConcurrentCellMap appendCellLists:]
v40@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8{TSUViewCellCoord={TSUCellCoord=ISBB}}16{TSUModelCellCoord={TSUCellCoord=ISBB}}24@"TSTCell"32
-[TSTConcurrentCellMap enumerateSeriallyUsingBlock:]
need a celluid based map
check that willApplyToTable was called already
-[TSTConcurrentCellMap p_enumerateNewAndOldCellsSeriallyUsingBlock:]
-[TSTConcurrentCellMap p_enumerateNewAndOldCellsSeriallyUsingPreBNCBlock:]
-[TSTConcurrentCellMap enumerateRowsOfCellsConcurrentlyUsingBlock:]
willApplyToTable should be called first
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]_block_invoke_2
should only be enumerating the cells of interest (stringValue)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]_block_invoke_3
should only be enumerating the cells of interest (hasFormula)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]_block_invoke_5
should only be enumerating the cells of interest (hasFormulaAnyError)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]_block_invoke_6
should only be enumerating the cells of interest (hasRichText)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]_block_invoke_7
should only be enumerating the cells of interest (hasConditionalStyle)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]_block_invoke_8
should only be enumerating the cells of interest (hasCommentStorage)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]_block_invoke_9
should only be enumerating the cells of interest (hasImportWarningSet)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]_block_invoke_10
should only be enumerating the cells of interest (hasControl)
{?=IIIIIIIIIS}34@?0@"TSTCell"8@"TSTCell"16@"TSTTableTileRowInfo"24{TSUModelColumnIndex=S}32
-[TSTConcurrentCellMap willApplyToTable:]
applyingToTable already called
need a uidBased cell map
-[TSTConcurrentCellMap willApplyToTableModel:]
-[TSTConcurrentCellMap convertToInverseCellMap]
willApplyToTable was not called or didApplyToTable called twice
-[TSTConcurrentCellMap pushInverseMergeAction:]
willApplyToTable should have been called
+[TSTConcurrentCellList cellListWithContext:cellUIDRange:repeatCellVectorPattern:patternDirection:]
expected a pattern for a row of cells
expected a pattern for a column of cells
-[TSTConcurrentCellList addCell:atViewCellCoord:]
index should be somewhere in the in the cell list's area
-[TSTConcurrentCellList addCell:atIndex:]
can only use index interface with celluid map
-[TSTConcurrentCellList p_setObjectLocale:]
-[TSTConcurrentCellList p_setupInterestingCells:interestingCellIndexes:forAdding:]
cell lists size mismatch
-[TSTConcurrentCellList p_invokeBlock:]
base rows needs to match uids
base cols needs to match uids
cells size needs to match area range
only valid viewRowIndexes should remain
only valid baseRowIndexes should remain
-[TSTConcurrentCellList p_convertToInverseCellMap]
oldCells size mismatch in cellList
-[TSTConcurrentCellList p_gatherRowState:]
-[TSTConcurrentCellList p_accumulateBordersConcurrentlyUsingBlock:accumulateCellsConcurrentlyUsingBlock:]
_tilesPerRow
_rowInfosPerRow
_tilesPerRow size mismatch in cellList
_rowInfosPerRow size mismatch in cellList
-[TSTConcurrentCellList p_enumerateRowsOfCellsConcurrentlyUsingBlock:]
_oldCells size mismatch in cellList
-[TSTConcurrentCellList p_enumerateNewAndOldCellsSeriallyUsingBlock:]
-[TSTConcurrentCellList p_enumerateNewAndOldCellsSeriallyUsingPreBNCBlock:]
-[TSTConcurrentCellList p_enumerateCellsAddedAndRemovedOfType:usingBlock:]
_interestingCells
-[TSTConcurrentCellList p_enumerateCellsAddedOfType:usingBlock:]
v32@?0@"TSKFormat"8@"NSMutableIndexSet"16^B24
v32@?0@"NSNumber"8@"NSMutableIndexSet"16^B24
-[TSTConcurrentCellList p_enumerateColumnCellCountDiffUsingBlock:]
_baseColumns and _cellCountDiffsPerColumn sizes should match
-[TSTConcurrentCellList p_enumerateRowCellCountDiffUsingBlock:]
_baseRows and _cellCountDiffsPerRow sizes should match
_baseRows and _tilesPerRow sizes should match
_baseRows and _rowInfosPerRow sizes should match
-[TSTConcurrentCellList p_enumerateCustomFormatsBeingAddedUsingReplacementBlock:]_block_invoke
Expected the custom format replacement to be of the same type as the original.
-[TSTConcurrentCellList p_enumerateCustomFormatsBeingAddedUsingReplacementBlock:]
customFormatToRemove can not be nil.
replacementCustomFormat can not be nil.
-[TSTConcurrentCellList saveToArchiver:]
Archiving is not correctly implemented for subclasses.
-[TSTConcurrentSparseCellList addCell:atViewCellCoord:]
-[TSTConcurrentSparseCellList appendCellUIDRange:]
appending cellUIDRanges must have the same set of columns
-[TSTConcurrentSparseCellList p_invokeBlock:]
-[TSTConcurrentSparseCellList p_accumulateBordersConcurrentlyUsingBlock:accumulateCellsConcurrentlyUsingBlock:]
-[TSTConcurrentSparseCellList p_enumerateRowsOfCellsConcurrentlyUsingBlock:]
v12@?0B8
virtual NSString *TSCEStringValue::string(TSCEFunctionSpec *__strong, int, TSULocale *__strong) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEStringValue.mm
customFormat.customFormat.defaultFormatData
-[TSTTableDataList setRichTextParentInfo:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableDataList.mm
The richTextParentInfo only applied to the Rich Text Payload datalist.
Tables/DataList
-[TSTTableDataList loadFromUnarchiver:]_block_invoke_3
cfWrapper.customFormat
v24@?0@"TSTTableDataObject"8^B16
-[TSTTableDataList p_nextAvailableKey]
-[TSTTableDataList wrappedObjectForPayload:]
Custom Format datalists are obsolete and should never be added to!
-[TSTTableDataList p_setPayload:atSuggestedKey:callWillModify:]
No object with key %u in %{public}@ datalist!
-[TSTTableDataList enumerateFormatsUsingBlock:]
Can't enumerate formats on a non-format list!
-[TSTTableDataList enumerateLegacyCustomFormatsUsingBlock:]
Can't enumerate custom formats on a non-custom format list!
-[TSTTableDataList repairStyleDatalistStylesheetIfNecessary]_block_invoke
Expected new style to be in the document stylesheet
-[TSTTableDataList takeReferences:forKey:callWillModify:]
Cannot add reference for custom format
-[TSTTableDataList dropReferences:forKey:callWillModify:]
custom format should not have more than one reference
Comment
Conditional Style
Custom Format
Format
Formula
ControlCellSpec
Formula Error
Import Warning
Multiple Choice List
Rich Text
String
Style
-[TSTTableDataList(Type_Specific_API) allRichTextStorages]
API is intended for kTSTTableDataListTypeRichText lists
-[TSTTableDataList(Type_Specific_API) allRichTextStorages]_block_invoke
richTextObject
richTextObject.richTextStorage
-[TSTTableDataList(Type_Specific_API) containsControlCellSpecs]
API is intended for kTSTTableDataListTypeFormat lists
-[TSTTableDataList(Type_Specific_API) containsFormulas]
API is intended for kTSTTableDataListTypeCellSpec lists
-[TSTTableDataList(Type_Specific_API) replaceCustomFormatsWithBlock:]
This reassign code is for the Format list only.
@"TSKCustomFormatWrapper"16@?0@"TSKCustomFormatWrapper"8
-[TSTTableDataList(Type_Specific_API) cellFormatForKey:]
Can only store formats in this list!
-[TSTTableDataList(Type_Specific_API) commentStorageForKey:]
Can only store cell comment storage objects in this list!
-[TSTTableDataList(Type_Specific_API) conditionalStyleSetForKey:]
Can only store conditional styles in this list!
-[TSTTableDataList(Type_Specific_API) formulaForKey:]
Can only store formulas in this list!
-[TSTTableDataList(Type_Specific_API) controlCellSpecForKey:]
Can only store controls in this list!
-[TSTTableDataList(Type_Specific_API) formulaErrorForKey:]
Can only store formulaErrors in this list!
-[TSTTableDataList(Type_Specific_API) importWarningSetForKey:]
Can only store import warning set objects in this list!
-[TSTTableDataList(Type_Specific_API) multipleChoiceListFormatForKey:]
Can only store pop up menu model in this list!
-[TSTTableDataList(Type_Specific_API) richTextForKey:]
Can only store text storages in this list!
-[TSTTableDataList(Type_Specific_API) stringForKey:]
Can only store strings in this list!
-[TSTTableDataList(Type_Specific_API) stringForKey:shouldWrap:]
-[TSTTableDataList(Type_Specific_API) styleForKey:]
Can only store styles in this list!
-[TSTTableDataList(Upgrade) upgradeCellFormatsU2_0]
This upgrade code is only for the Format list.
-[TSTTableDataList(Upgrade) upgradeCellFormatsU2_0]_block_invoke
-[TSTTableDataList(Upgrade) upgradeConditionalStylesToLinkedRefWithTableUID:]
This upgrade is for conditional style only.
v24@?0I8I12^B16
[%lu,%lu]
(%lu x %lu)
q24@?0@8@16
table
tableStyle
+[TSTTableStyle propertiesAllowingNSNull]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableStyle.mm
+[TSTTableStyle nonEmphasisTableProperties]_block_invoke
-[TSTTableStyle validate]
orphaned table style %@
Table style not in its stylesheet
-[TSCENilCellValue compareToCellValue:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCENilCellValue.mm
-[TSTArchivedCellSelection selection]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTArchivedCellSelection.mm
Call selectionWithParent:
-[TSTArchivedCellSelection selectionWithParent:]
tableInfo
-[TSTArchivedCellSelection setSelection:]
Wrong type of class %@ (expected TSTCellSelection)
<%@: %p> %@
%@ for column %@ at level %lu with show as type %lu %@
(running total on: %@)
-[TSCEStringCellValue initWithString:locale:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEStringCellValue.mm
Creating a TSCEStringCellValue with a nil string.
str_
-[TSCEStringCellValue compareToCellValue:]
-[TSCEStringCellValue encodeToArchive:]
Avoid using nil to mean empty string in a TSCEStringValue, string is: %@
v24@?0^{TSCEASTNodeArray=*QQB}8^{TSCEASTNodeArgInfo=i[3i]{TSKUIDStruct=QQ}{TSUCellCoord=ISBB}}16
TSCEFormulaCreator TSCEFormulaCreationMagic::array(uint8_t, uint16_t, TSCEFormulaCreator, TSCEFormulaCreator, TSCEFormulaCreator)_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulaCreator.mm
Need 3 elements here
v16@?0^{TSCEASTNodeArray=*QQB}8
TSCEFormulaCreator::TSCEFormulaCreator(std::nullptr_t)
Passing NULL as an arg to TSCEFormulaCreator() - it doesn't like that
void TSCEASTNodeArray::write(const T &) [T = unsigned long]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTNodeArray.h
_nodeArray
NSString *localizedModeName(TSCEStockAttribute, TSCEFunctionSpec *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERemoteDataFunctions.mm
Unexpected function %@!
%@%@=X
TSCEValue evaluateCurrencyFunction(TSCEEvaluationContext &, TSCEFunctionSpec *__strong)
Failed to transform date %@ for CURRENCYH function!
TSCEValue evaluateStockFunction(TSCEEvaluationContext &, TSCEFunctionSpec *__strong)
Failed to transform date %@ for STOCKH function!
v16@?0@"TSPLazyReference"8
B24@?0r^v8r^v16
-[TSTTableTileStorage _upgradeFromTileIDMap:referenceMap:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableTileStorage.mm
Tile upgrade can't find tile for ID %tu!
error
Fatal Assertion failure: %{public}s %{public}s:%d Failed to load a table tile during upgrade: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
recoverable=YES, 
Failed to load a table tile during upgrade: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
v32@?0@"TSPLazyReference"8Q16^B24
-[TSTTableTileStorage saveToStorageArchive:treeArchive:archiver:]
Unexpected categories feature version in TSTTableTileStorage.
v28@?0@"TSTTableTile"8I16^B20
-[TSTTableTileStorage setShouldUseWideRows:]
v20@?0@"TSTTableTile"8I16
Fatal Assertion failure: %{public}s %{public}s:%d Bad tile group index!
-[TSTTableTileStorage _groupForTileID:]
Bad tile group index!
-[TSTTableTileStorage _tileForID:createIfMissing:]
tile
v32@?0@"TSTTableTile"8Q16^B24
v24@?0@"TSTTableTileGroup"8^B16
-[TSTTableTileStorage _clearContentAtIndex:count:]
Corrupt tile map during clear!
-[TSTTableTileStorage _shiftRowsDownAtIndex:count:]
Tile insertion got confused!
-[TSTTableTileStorage _insertRowsAtIndex:count:]
Should only have whole-tile moves left in insert!
Corrupt tile map during insert!
Fatal Assertion failure: %{public}s %{public}s:%d Lost track of deletion start point!
-[TSTTableTileStorage _removeRowsAtIndex:count:]
Lost track of deletion start point!
Fatal Assertion failure: %{public}s %{public}s:%d Lost track of tiles during delete!
Lost track of tiles during delete!
Corrupt tile map during delete!
Fatal Assertion failure: %{public}s %{public}s:%d Tile should be empty during delete!
Tile should be empty during delete!
Fatal Assertion failure: %{public}s %{public}s:%d Shifting tiles too far during delete!
Shifting tiles too far during delete!
Fatal Assertion failure: %{public}s %{public}s:%d We removed too many rows during delete!
We removed too many rows during delete!
Shift too big during delete!
v32@?0^v8Q16^B24
TSTTilesCat
-[TSTTableTileStorage moveRowIndexRange:toIndex:]
Move row ranges cannot overlap!
v32@?0q8q16^B24
-[TSTTableTileStorage populatedRows]_block_invoke
Fatal Assertion failure: %{public}s %{public}s:%d Corrupt tile ID set!
-[TSTTableTileStorage lastPopulatedRowIndex]_block_invoke
Corrupt tile ID set!
RowInfo Cell Count Audit
Tile ID %lu, firstRow:%d
Tile Overlap Audit
-[TSTTableTileStorage auditTilesForRowOverlapAndExtensionPastTableBounds:withDataStore:result:]_block_invoke
Expected non-empty tile.
Tile with rows %d-%d overlaps with previous tiles in the table.
TileLastRow:%d tileMaxColumn:%d extends beyond tableModelLastRow:%d lastColumn:%d
v28@?0^{TSTCellStorage=}8S16^B20
-[TSTTableTileStorage prepareToApplyConcurrentCellMap:]_block_invoke
@"TSUPair"12@?0I8
TSKUIDStruct TSTUidApplyingAggregateIndex(const TSKUIDStruct &, NSUInteger)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTUIDTypes.mm
aggregateIndex * 2 had better fit in a UInt8
static TSKUIDStruct TSTUidGenerator::newUID(const char *, const char *, bool)
Not expecting null pointers here
Fatal Assertion failure: %{public}s %{public}s:%d Bad header bucket index for creation: %u
-[TSTTableHeaderStorage _allocateBucketsForIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableHeaderStorage.mm
Bad header bucket index for creation: %u
Fatal Assertion failure: %{public}s %{public}s:%d Can't be missing the first bucket!
Can't be missing the first bucket!
Fatal Assertion failure: %{public}s %{public}s:%d Asked to create buckets when we've already done so!
-[TSTTableHeaderStorage _allocateBuckets]
Asked to create buckets when we've already done so!
-[TSTTableHeaderStorage _bucketForIndex:]
Unexpected header bucket index: %u!
-[TSTTableHeaderStorage initFromArchive:unarchiver:owner:]
Don't know how to handle this bucket hash function!
-[TSTTableHeaderStorage initFromArchive:unarchiver:owner:]_block_invoke
Bad header bucket count!
Fatal Assertion failure: %{public}s %{public}s:%d Bad bucket count during archiving!
-[TSTTableHeaderStorage encodeToArchive:archiver:]
Bad bucket count during archiving!
-[TSTTableHeaderStorage shiftIndexesForwardAtIndex:count:]
Headers spilled out of our last bucket during shift!
-[TSTTableHeaderStorage shiftIndexesBackAtIndex:count:]
Headers spilled below zero!
Fatal Assertion failure: %{public}s %{public}s:%d Move ranges cannot overlap!
-[TSTTableHeaderStorage moveIndexRange:toIndex:]
Move ranges cannot overlap!
<%@:%p index %lu baseCol %u rules %@
-[TSTTableHeaderStorageBucket initWithContext:bounds:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableHeaderStorageBucket.mm
Can't initialize a bucket with a bad range!
v32@?0@"TSTTableHeaderInfo"8Q16^B24
Fatal Assertion failure: %{public}s %{public}s:%d Index out of range for bucket!
-[TSTTableHeaderStorageBucket _makeHeaderAtIndex:]
Index out of range for bucket!
-[TSTTableHeaderStorageBucket shiftIndexesBackAtIndex:count:]
Can't shift indexes below zero!
-[TSTTableHeaderStorageBucket headerAtIndex:]
-[TSTTableHeaderStorageBucket setHeader:atIndex:]
Tables/HeaderStorageBucket
-[TSTTableHeaderStorageBucket(Archiving) loadFromUnarchiver:]
Fatal Assertion failure: %{public}s %{public}s:%d Cached style count was wrong!
-[TSTTableHeaderStorageBucket(Archiving) saveToArchiver:]
Cached style count was wrong!
-[TSCELogicalTest initWithCriterion:functionSpec:evaluationContext:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCELogicalTest.mm
type not handled: %d
<%@: %p>: operation: %d value: %@ string: %@ date: %@ -> cost: %lu
<%@: %p>
[%lu]: %@
-[TSCEAbstractGrid deepType:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEAbstractGrid.mm
TSCEAbstrctGrid subclasses must override
-[TSCEAbstractGrid dimensions]
-[TSCEAbstractGrid valueAtGridCoord:accessContext:]
-[TSCEAbstractGrid valueAtIndex:accessContext:]
-[TSCEAbstractGrid count]
-[TSCEAbstractGrid subGridValueAtGridCoord:width:height:accessContext:]
TSCEAbstractGrid subclasses must override
-[TSCEAbstractGrid newCorrespondingAST:argIndex:bakeReferences:evaluationContext:]
too many arguments to fit in a node!
-[TSCEAbstractGrid value]
v24@?0@"TSTLayoutSpace"8^B16
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTLayout.mm
CGRect TSTLayoutGetCanvasFrame(TSTLayout *__strong)
Passing in a nil layout to TSTLayoutGetCanvasFrame.
{CGRect={CGPoint=dd}{CGSize=dd}}32@?0@"TSTLayoutSpace"8{?={?=II}{?=II}}16
v24@?0{?={?=II}{?=II}}8
@"TSUBezierPath"16@?0@"NSArray"8
v40@?0Q8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16^B32
-[TSTLayout p_spillRangeForMaskingRichTextLayout:]
alignment should have already been resolved
-[TSTLayout p_prepareAttachmentCellsIfNeeded]_block_invoke_2
cell
iterator should return a valid cellID
storage should be nil since iterator is searching with TSTCellIteratorSearchForRichText
v24@?0@"TSWPStorage"8^B16
v32@?0@"TSTWPLayout"8Q16^B24
-[TSTLayout positionForColumnIndex:bodyWidth:target:outWidth:outGap:]
created an undersized column
-[TSTLayout naturalAlignmentForCellID:]
Contained text editing layout but invalid editing cell ID?
-[TSTLayout p_cellIDForWPLayout:]
TSTLayout should only parent layouts for editing text or cells with inline attachments!
-[TSTLayout maxAutoGrowLineWidthForTextLayout:]
should only be asking max width for unwrapped rich layouts
-[TSTLayout p_computeSpillingTextFrameForEditingLayout:textSize:editingSpillRange:]
B24@?0@"TSTLayout"8^B16
-[TSTAccumulator valueForType:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTAccumulator.mm
%@ does not handle TSCEAggType_StDev/_VAR/_CountDistinct request - a higher level should have handled that
%@ does not handle TSCEAggType_GroupValue/_BodyRows/_Indirect request - a higher level should have handled that
v32@?0@"TSTColumnAggregate"8Q16^B24
-[TSCEReferencesToDirty setCalculationEngine:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEReferencesToDirty.mm
-[TSCEReferencesToDirty dirtyAllCellsInOwner:]
depTracker
-[TSCEReferencesToDirty dirtyRangeRef:]
v32@?0r^{TSKUIDStruct=QQ}8r^v16^B24
B8@?0
TSCEErrorValue (type %d %@)
-[TSTRefNamer nameForBaseTractRef:namingContext:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTRefNamer.mm
baseString
v24@?0r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}8^B16
-[TSTRefNamer nameForViewTractRef:namingContext:coordMapper:]_block_invoke
viewString
%@::
Categories
Body
 (%@)
%@<%p>: %@
-[TSCENamedReferenceManager initWithContext:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCENamedReferenceManager.mm
use initWithContext:calculationEngine: instead
v16@?0@"TSCETrackedReferenceStore"8
-[TSCENamedReferenceManager setFormulaOwnerUID:]
Invalid formulaOwnerUID
-[TSCESumAccumulator addValue:function:evaluationContext:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCESumAccumulator.mm
Shouldn't get a nil date from something that says it's a date
com.apple.Numbers.TST.PivotCellSetter
(blank)
CellDiffArray
-[TSCECoordMapper chromeTractRefForViewTractRef:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECoordMapper.mm
Not able to find valid indexes
Wasn't expecting this to be possible with valid input
v16@?0I8I12
-[TSTStrokeSidecar initForUpgradeWithTableModel:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTStrokeSidecar.mm
No usable root style in the document stylesheet or the deprecated theme stylesheet. Dropping the cell style on the floor.
v16@?0{TSUModelCellCoord={TSUCellCoord=ISBB}}8
v56@?0{TSTSimpleRange=qQ}8@"TSDStroke"24i32@"TSDStroke"36i44^B48
-[TSTStrokeSidecar flattenStrokeOrder]
left and right column stroke count should be identical
top and bottom row stroke count should be identical
v44@?0@"TSDStroke"8{TSTSimpleRange=qQ}16i32^B36
v24@?0@"NSArray"8@"NSPointerArray"16
-[TSTStrokeSidecar saveToArchiver:]
top and bottom stroke run arrays have different counts
left and right stroke run arrays have different counts
-[TSTCellRangeCache clear]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellRangeCache.mm
Clear with a BitGridTransaction open
v32@?0r^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16^B24
v32@?0{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8^B24
v40@?0Q8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16^B32
-[TSTCellRangeCache mergedGridIndicesForDimension:]
Invalid table dimension
-[TSTLayoutSpace invalidateCoordinatesForEditingCellID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTLayoutSpace.mm
Invalidating for an editing cell range that is not a single logical cell.
-[TSTLayoutSpace nearestRangeForLayoutRect:]
Failed to get nearest cell range from space %@ for layout rect %{public}@
-[TSTLayoutSpace frameForTableNameBorder]
this API is intended to run on the main space
-[TSTLayoutSpace strokeFrameForTableNameBorder]
-[TSTLayoutSpace alignedStrokeFrameForTableNameBorder]
WARNING: vertical stroke ( %f %@ => %@ ) length <= 0.0
WARNING: horizontal stroke ( %f %@ => %@ ) length <= 0.0
v48@?0@"TSDStroke"8{TSTSimpleRange=qQ}16i32i36^B40
-[TSTLayoutSpace validateCoordinateCache:]
There are no column coordinates
-[TSTCoordinateArray setTableWidthForRightToLeft:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCoordinateArray.mm
Setting a table width on a LTR coordinate array has no effect.
CGFloat TSTCoordinateArrayGetCoordinate(TSTCoordinateArray *__strong, TSTGridIndex)
coordinateArray
CGFloat TSTCoordinateArrayGetRawCoordinate(TSTCoordinateArray *__strong, TSTGridIndex)
<%@ %p offset=%u average=%f
 coordinates={empty}>
 coordinates={
  { offset=%u -> coordinate=%f }
-[TSCECellDirtier dirtyNewCellRef:forSeconds:fromStartTime:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECellDirtier.mm
%p Still working on dirtying: %@
igami
%d, 
(%@ %@ %@)
(%@)
(%@%@)
%@,%@
%@(%@)
NSString *TSCEASTDescriptionIterator::prettyDescription()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTDescriptionIterator.mm
Should only have one argument on _argStack at this point, the final result. ArgStack: %@
virtual TSCEASTElement *TSCEASTDescriptionIterator::binaryInfixOperatorNode(TSCEASTBinaryElement *)
Unknown operator tag: %d
op- 
op+ 
virtual TSCEASTElement *TSCEASTDescriptionIterator::unaryOperatorNode(TSCEASTUnaryElement *, BOOL)
((%@)%%)
%@{%i args, ws:'%@'} 
%@{%i args} 
unknownFunction: %@{%i args} 
[: %@]
Unexpected refType: %@
v24@?0r^{TSCEAnyRef=S{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}{TSKUIDStruct=QQ}B@}8^B16
%@::%@:%@
[%@]
<error in colonTractNode() - got nil>
virtual TSCEASTElement *TSCEASTDescriptionIterator::colonTractNode(TSCEASTColonTractElement *)
Why would this happen?
%@{%@}
<#REF! VTR>
ViewTractRef(%@ Preserve:%u) 
"%@"
"%@" 
unit;%lf
unit; %lf
<empty>
<empty> 
<token>
token 
array; cols:%d rows:%d 
%@; %@
{%@ %@}
<list, len:%d>
list; length:%d 
thunk[
let %@ = %@ in
<%@>
(var %u)
virtual TSCEASTElement *TSCEASTDescriptionIterator::anyReferenceNode(TSCEASTRelativeCoordRefElement *)
We shouldn't actually reach here - the tag indicates this reference is valid or spanning
#REF!
%@%@%@%@
[%@%@]
[%@%@, %@%@]
append ws: '%@'
prepend ws: '%@'
#REF! 
#REF(%@%@, %@:: %@)! 
#REF(%@%@, %@)! 
linkedCellRef(%@) 
linkedColumnRef(%@) 
linkedRowRef(%@) 
UidRef(%@ Preserve:%u) 
%@::%@ 
virtual NSString *TSCEDateValue::string(TSCEFunctionSpec *__strong, int, TSULocale *__strong) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEDateValue.mm
dateFormat.customFormat.defaultFormatData
<%@ %p>: expressionNode:%@, parenNestingLevel:%lu argumentIndex:%lu
-[TSCEFormulaObject initWithNodeArray:translationFlags:hostTableUID:hostColumnUID:hostRowUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulaObject.mm
Can only set hostCellUID on uid-form formula
-[TSCEFormulaObject evaluateWithContext:]
Uncaught exception: %{public}@
-[TSCEFormulaObject copyByRewritingForTranspose:calcEngine:containingCell:outTransposeWarning:]
Expect rewriteSpec -willModifyTable: (or variant) to have been called before rewriting formulas.
Expect rewriteSpec -didModifyTable: (or variant) to have been called before rewriting formulas.
-[TSCEFormulaObject copyByRewritingWithSpec:calcEngine:containingCell:]
Warning, no rewriter created for this formula rewrite type (yet).
-[TSCEFormulaObject copyBySettingHostTableUID:hostColumnUID:hostRowUID:]
-[TSCEFormulaObject copyByRewritingReferencesToUidForm:]
preserveHostCell requested, but resolverTableUID %@ not found
-[TSCEFormulaObject copyByRewritingReferencesToGeometricForm:]
Over-riding hostTableUID for %@
conditional style
=__CHART(
+[TSCEFormulaObject parseFormula:calcEngine:unqualifiedReferenceTableUID:containingCell:outError:outNeedsImportRewrite:isChartFormula:isSageUpgrade:]
Only chart formulas should start with the chart prefix.
formula string does not start with =
TSCEThreadAllocatorKey
invalid symbol
-[TSTVariableNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTVariableNode.mm
Unexpected object in initAsCopyOf:... expected TSTVariableNode, got %@
invalid symbol in copy
invalid symbol in setter
-[TSTVariableNode insertFormulaText:includeWhitespace:]
NumberNode shouldn't have any children
-[TSTVariableNode buildASTNodeArray:hostCell:symbolTable:]
VariableNode shouldn't have any children
void TSTCellRegionGathererMap::joinAndAddRange(TSTCellRange, NSUInteger)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellRegionGatherer.mm
_cellRanges does not match encodedCoordToCandidateIndexMap
v24@?0{TSTCellRegionGathererKey=QI}8
TSUCellRect TSUMakeCellRectFromNSRanges(NSRange, NSRange)
Invalid column range
Invalid row range
TSCEASTElement *TSCEASTRewriter::loadAsTree()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTRewriter.mm
An incomplete node needs one argument - the root of the thunk expression
Not enough arguments for let node
%d is not a valid node tag, seen at offset: %lu, seen in %{public}@
virtual void TSCEASTRewriter::rewrite()
_symbolTable
void TSCEASTIteratorBase::willModify()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTIteratorBase.h
Attempting to modify an iterator marked as readOnly.
void TSCEASTNodeArray::writeBytes(const uint8_t *, size_t)
%@ group-by: %@ for column: %@
-[TSTTableStylePreset setStyleNetwork:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableStylePreset.mm
styleNetwork
-[TSTTableStylePreset presetID]
No valid preset ID
-[TSTTableStylePreset initWithStyleNetwork:]
-[TSTTableStylePreset initWithContext:]
Should always be intialized with a network and an ID
-[TSTTableStylePreset drawSwatchInRect:inContext:]
_styleNetwork
-[TSTTableStylePreset loadFromUnarchiver:]_block_invoke
_tempUpgradePresetID
_styleNetwork.presetID
v16@?0@"TSTTableStyleNetwork"8
-[TSTTableStylePreset saveToArchive:archiver:]
TSCERemoteDataServerStatusChangeNotification
TSCERemoteDataServerStatusChangesKey
TSCERemoteDataServerStatusChangeToOnlineKey
TSCERemoteDataServerStatusChangeToOfflineKey
TSCERemoteDataCat
ask_price.raw
ask_size.raw
avg_3m_volume.raw
beta_coefficient.raw
bid_price.raw
bid_size.raw
change.raw
currency
day_high.raw
day_low.raw
dividend_per_share.raw
dividend_yield.raw
eps.raw
exchange
fiftytwo_week_high.raw
fiftytwo_week_low.raw
market_cap.raw
name
one_year_target.raw
open.raw
pe_ratio.raw
percent_change.raw
prev_close.raw
price.raw
volume.raw
symbol
time.raw
Not Set
Ask Price
Ask Size
Avg 3M Volume
Beta
Bid Price
Bid Size
Change
Currency
High
Annual Dividend
Dividend Yield
Exchange
52 Week High
52 Week Low
Market Cap
Name
One Year Target
Open
P/E Ratio
Percent Change
Close
Price
Volume
Symbol
Time
-[TSCERelativeTractRef addRelativeColumn:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERelativeTractRef.mm
Cannot mix spanning and non-spanning column
-[TSCERelativeTractRef addRelativeRow:]
Cannot mix spanning and non-spanning row
-[TSCERelativeTractRef verifySpanningSettings]
Wrong count
Wrong index present
Invalid seen in non-spanning
No column found, but not marked as spanning
No row found, but not marked as spanning
Should match existing asserts
-[TSCERelativeTractRef relativeTopLeft]
-[TSCERelativeTractRef relativeBottomRight]
Non-spanning ref has %d relative columns
No columns found, but not marked as spanning
Non-spanning ref has %d absolute columns
Non-spanning ref has %d relative rows
No rows found, but not marked as spanning
Non-spanning ref has %d absolute rows
static void TSCERelativeCellCoordinate::assertColumnInMaxRange(TSURelativeColumnIndex)
TSCERelativeCellCoordinate: column outside valid range: %d
static void TSCERelativeCellCoordinate::assertRowInMaxRange(TSURelativeRowIndex)
TSCERelativeCellCoordinate row outside valid range: %d
TSCEValue TSCEComputeSubtraction(TSCEValue, int, TSCEValue, int, TSCEFunctionSpec *__strong, TSCEEvaluationContext *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEAggregateEval.mm
map::at:  key not found
tableName
textStyle
shapeStyle
@"TSSStyle"40@?0@"TSSStyle"8@"NSString"16Q24Q32
+[TSTTableStyleNetwork createStylesInStylesheet:presetID:colors:alternate:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableStyleNetwork.mm
Style network is missing styles. %{public}@
+[TSTTableStyleNetwork networkFromStylesheet:presetID:]
no default table style in stylesheet %p
nameStyle
tableNameShapeStyle
+[TSTTableStyleNetwork networkFromTheme:presetID:]
theme
+[TSTTableStyleNetwork networkFromTheme:presetIndex:]
+[TSTTableStyleNetwork networkWithContext:presetID:styleProvider:tableStyleMorphingBlock:nameStyleMorphingBlock:nameShapeStyleMorphingBlock:cellStyleMorphingBlockByStyleArea:textStyleMorphingBlockByStyleArea:]
All styles are not present and accounted for.
v24@?0Q8Q16
-[TSTTableStyleNetwork initWithContext:styleProvider:presetID:]
Cannot set styles from a different context
-[TSTTableStyleNetwork isEqual:]
Cell style array length mismatch
Cell style array element nillity mismatch at position %zu
Text style array length mismatch
Text style array element nillity mismatch at position %zu
-[TSTTableStyleNetwork setTextStyle:forTableStyleArea:]
Pivot areas use the equivalent default area textStyle. Don't try to set it.
-[TSTTableStyleNetwork loadFromArchive:unarchiver:]_block_invoke
_tableStyle must be nil when loading from an archive
-[TSTTableStyleNetwork loadFromArchive:unarchiver:]_block_invoke_30
_tableNameStyle must be nil when loading from an archive
-[TSTTableStyleNetwork loadFromArchive:unarchiver:]_block_invoke_31
_tableNameShapeStyle must be nil when loading from an archive
sheet-0-sheetStyle
%@, %@
cellID:%u, %u, count:%lu
void TSCEASTNodeArray::resizeCapacity(size_t)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTNodeArray.mm
No nodeArray allocated.
You are going to crash very soon. You have overwritten your node array: %{public}@
resize didn't grow array enough
empty nodeArray
uint8_t _nodeArray[%d] = {
void TSCEASTNodeArrayReader::setOffset(size_t)
Can't set offset above capacity: %lu / %lu
Can't set offset more than one past bytes used, offset: %lu formula: %{public}@
void TSCEASTNodeArrayReader::pushEndPoint(size_t)
We shouldn't be making the array seem larger when pushing a new end-point
void TSCEASTNodeArrayReader::skipIndexSet()
skipIndexSet going off rails, numRanges: %lu for formula: %{public}@
void TSCEASTNodeArray::write(const T &) [T = TSKUIDStruct]
void TSCEASTNodeArray::write(const T &) [T = int]
-[TSTOwnerUidMapper p_recreateUIDs]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTOwnerUidMapper.mm
Check for non subOwner formula UIDs
-[TSTOwnerUidMapper setToUpgradeMapping]
kTSCERecalcLoopGroupEmpty
CalculationEngine
TSCECalculationEngine
TSCENamedReferenceManager
TSCETrackedReferenceStore
TSCETrackedReferenceTSPObjectDeprecated
TSCERemoteDataStore
TSCEFormulaOwnerDependencies
TSCECellRecordTileWrapper
TSCERangePrecedentsTile
TSCEReferencesToDirty
-[TSTTableStrokePresetList setStrokePreset:atIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableStrokePresetList.mm
preset index higher than count
-[TSTTableStrokePresetList initWithArchive:unarchiver:]
invalid preset count
-[TSTTableStrokePresetList horizontalStrokeForStrokePreset:]
illegal preset index
-[TSTTableStrokePresetList verticalStrokeForStrokePreset:]
-[TSTTableStrokePresetList exteriorStrokeForStrokePreset:]
-[TSTTableStrokePresetList maskForStrokePreset:]
-[TSCEFormulaRewriteSpec addCoordMapper:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulaRewriteSpec.mm
Replacing same tableUID with a different coordMapper - expect trouble: %@
 type: %@ %@
(inverse)
 tableUID: %@
Nested rewrites:
   (nested): %@
-[TSCEFormulaRewriteSpec affectedOwnerUID]
Shouldn't ask for the affected owner ID of a move, since there may be two.
Not a meaningful question, there are numerous tables affected
-[TSCEFormulaRewriteSpec affectedConditionalStyleOwnerUID]
Not implemented for these rewrite types.
-[TSCEFormulaRewriteSpec adjustViewTractRef:calcEngine:containingCellRef:undoTractList:]
subclasses must override
-[TSCEFormulaRewriteSpec restoreViewTractRefFromUndoTractList:calcEngine:containingCellRef:]
-[TSCEFormulaRewriteSpec willModifyTable:uidResolver:calcEngine:]
Move region requires the two tables version will/didModifySrcTable:dstTable: be called instead
-[TSCEFormulaRewriteSpec willModifySrcTable:srcUidResolver:dstTable:dstUidResolver:]
Only move region takes two tables
-[TSCEFormulaRewriteSpec didModifySrcTable:dstTable:]
-[TSCEFormulaRewriteSpec didModifyTable:calcEngine:]
Move region requires the two table version didModifySrcTable:dstTable: be called instead
-[TSCEFormulaRewriteSpec affectedRange]
Not implemented yet for this type
Not implemented for this type
Not yet implemented for this type
-[TSCEFormulaRewriteSpec expandedRowColumnUuids]
+[TSCETablesByName containerNameForTable:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCETablesByName.mm
+[TSCETablesByName tableNameForTable:]
%@<%p>:
  ContainerName: '%@' TableName: '%@' Table: %@
v16@?0@"TSSStylesheet"8
-[TSSTheme(TSTArchiving) tstLoadFromArchive:unarchiver:]_block_invoke_3
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSSTheme_TSTArchiving.mm
Preset style network is missing styles when unarchiving. %{public}@
-[TSTExpressionNode exportString]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTExpressionNode.mm
Children of TSTExpressionNode that is tokenized should implement exportString().
v32@?0@"TSTExpressionNode"8Q16^B24
-[TSTExpressionNode recordHashesForSubexpressions:]
subclasses must override recordHashesForSubexpressions so CSE works properly
<%@ %p>: '%@'
-[TSTFormula reparseWithStorage:adjustExpressionTree:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTFormula.mm
Formula storage exceeds maximum length.
'%C%C
'%C%C%C%C
%C%C%C%C%C%C%C%C%C%C%C
+[TSTFormula formulaQuoteContextAtCharIndex:inStorage:]
charIndex %lu not within storage range %@
+-*/^&=><:
%C%C%C%C%C%C%C%C
%C%C%C%C%C%C%C%C%C%C
%C%C%C%C%C
-[TSTFormula p_fixFormula:]
expected a function node with a function start token
expected non-empty storage
expected a function node on the stack
v24@?0@"TSTExpressionNode"8^B16
virtual NSDate *TSCEViewTractRefValue::date(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEViewTractRefValue.mm
Error: couldn't resolve TSCEViewTractRefValue
virtual NSString *TSCEViewTractRefValue::rawString(TSCEFunctionSpec *__strong, int, TSULocale *__strong) const
unsupported
virtual BOOL TSCEViewTractRefValue::boolean(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
virtual TSCERichTextStorage TSCEViewTractRefValue::richTextStorage(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
virtual TSCERichTextStorage TSCEViewTractRefValue::rawRichTextStorage(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
virtual TSCEGrid TSCEViewTractRefValue::formattedGrid(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
virtual TSCENumberValue TSCEViewTractRefValue::number() const
virtual NSDate *TSCEViewTractRefValue::date() const
stdtr
stdtri
+[TSTCellChooserControlSpec cellSpecFromTSKFormat:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellChooserControlSpec.mm
mcFormat
-[TSTCellChooserControlSpec initWithArchive:unarchiver:]
Wrong interaction type for a popup.
v16@?0@"TSTPopUpMenuModel"8
TSCEValue TSCEFunctionArgSpec::valueForModeIndex(short) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFunctionArgSpec.mm
Requesting value for non-mode argument.
Requesting value for out of bounds index.
%C%@_ARGUMENT_%d%C
%@ (%@)
Found duplicate for internal ownerID %@, %d and %d
void TSCEIDMap::loadFromArchive(const TSCE::OwnerIDMapArchive &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEIDMap.mm
Got an invalid ownerUID during loadFromArchive, internalOwnerID: %lu
Repaired duplicate internal formula ownerIDs:
%d -> %d (%@)
TSCEInternalFormulaOwnerID TSCEIDMap::registerUID(TSCEOwnerUID)
new ID %lu is already in use by %@ - attempted reuse by %@
About to overwrite a reference in _uidToInternalIDMap: %d -> %d for ownerUID: %{public}@ in Map: %{public}@
TSCEIDMap:
  %d -> %@
  %d -> <UNREGISTERED>
-[TSTOperatorNode initWithContext:operatorChar:children:firstIndex:lastIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTOperatorNode.mm
Operators should only have 2 children.  There are %lu arguments to operator '%hu'
-[TSTOperatorNode initAsCopyOf:intoContext:children:]
Unexpected object in initAsCopyOf:... expected TSTOperatorNode, got %@
-[TSTOperatorNode insertFormulaText:includeWhitespace:]
OperatorNode doesn't have two arguments
-[TSTOperatorNode buildASTNodeArray:hostCell:symbolTable:]
Operator node doesn't have two arguments
Undefined operator node
virtual TSCEASTElement *TSCEASTRefExtractionIterator::functionNode(TSCEASTFunctionElement *)_block_invoke_2
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTRefExtractionIterator.mm
unhandled case for refType: %d
v28@?0I8@"TSUCustomFormat"12^B20
^%@$
v32@?0@"NSTextCheckingResult"8Q16^B24
-[TSTNumberNode initWithContext:string:locale:firstIndex:lastIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTNumberNode.mm
numberString
-[TSTNumberNode initAsCopyOf:intoContext:children:]
Unexpected object in initAsCopyOf:... expected TSTNumberNode, got %@
-[TSTNumberNode insertFormulaText:includeWhitespace:]
-[TSTNumberNode buildASTNodeArray:hostCell:symbolTable:]
NSString *TSTStringForDouble(double, TSULocale *__strong)
A locale is required here
Warning: Creating brave new cell with value type %@ but mismatched format type %@, repairing
-[TSTCell_PreBNC upgradedBraveNewCell]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCell_PreBNC.mm
-[TSTCell_PreBNC initWithLocale:]
The formula should not begin with an equals sign.
The formula contains a syntax error.
-[TSTCell_PreBNC stringForEditing]
durationFormat
-[TSTCell_PreBNC setCellStyle:clearingID:]
expected cell style got %{public}@
-[TSTCell_PreBNC setTextStyle:clearingID:]
-[TSTCell_PreBNC setConditionalStyle:clearingID:]
expected conditional style got %{public}@
B20@?0@"TSKFormat"8S16
-[TSTCell_PreBNC copyAllFormatsToCell:]
dest
<%@:%p: value type %@ value %@>
No content
Number
DEPRECATED
Date
Bool
Duration
FormulaError
RichText
Cell Spec: 
Value: 
<number: %f>
<rich text: '%@'>
<string: '%@'>
<date: '%@'>
<bool: '%@'>
<duration: %f>
<error>
<unknown cell type>
v24@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8^B16
v32@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8r^{TSKUIDStruct=QQ}16^B24
-[TSTCellMap loadFromUnarchiver:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellMap.mm
serious error: flag out of sync with content.
-[TSTCellMap loadFromUnarchiver:]_block_invoke_2
creating a one-to-many cell map but starting with more than one cell
-[TSTCellMap saveToArchiver:]
We should never archive shallow copies. That's not what they are for
v32@?0@"TSTCellList"8Q16^B24
-[TSTCellMap cellIDAtIndex:]
cannot examine cellIDs in UID mode
-[TSTCellMap enumerateCellsWithIDsUsingBlock:]
can't enumerate IDs since have UIDs
-[TSTCellMap enumerateCellsWithUIDsUsingBlock:]
can't enumerate by UIDs since have IDs
-[TSTCellMap findCellForCellID:]
cannot use find with a UID based cell map
v40@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8@"TSTCell"16Q24^B32
-[TSTCellMap addCell:andCellUID:]
cannot add UIDs in ID mode
cannot add cells in one-to-many mode
-[TSTCellMap addPrecopiedCells:andCellUIDs:]
Cell and CellUID sizes don't match up
-[TSTCellMap addCell:andCellID:]
Cannot add cellIDs while in UID mode.
-[TSTCellMap replaceCellAtIndex0:]
-[TSTCellMap appendCellMap:precopied:]
Trying to append a cellID cellMap to a uidBased map. Aborting.
Trying to append a uidBased cellMap to a cellID map. Aborting.
-[TSTCellMap p_addPrecopiedCells:]
Shallow copy not supported in this path
-[TSTCellMap p_copyCellsAndUUIDsFromCellMap:convertingToCellIDsWithTableInfo:]
This should only be called with a UID based cell map.
-[TSTCellList cellAtIndex:]
Out of range in  %@
-[TSTCellList replaceCell:atIndex:]
Asking to replace where we currently have no cell at all - invalid replaceCell: call
Should now fit in real range
-[TSTCellList loadFromUnarchiver:]_block_invoke
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::functionNode(TSCEASTFunctionElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTSCEASTNodeExpressionNodeFunction.mm
improper number of arguments for function node.
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::unknownFunctionNode(TSCEASTUnknownFunctionElement *)
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::colonNode(TSCEASTColonElement *)
improper number of arguments for colon node.
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::arrayNode(TSCEASTArrayElement *)
improper number of arguments for array.
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::listNode(TSCEASTListElement *)
improper number of arguments for list node.
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::viewTractRefNode(TSCEASTViewTractRefElement *)
viewTractRef is expected to have an active tract
TSTExpressionNode *TSTTSCEASTNodeExpressionNodeFunction::expressionNode()
Unable to properly create a TSTExpressionNode. Possibly a bad ASTNodeArray?
void TSTTSCEASTNodeExpressionNodeFunction::processOperatorNode(unichar)
improper number of arguments for operator node.
void TSTTSCEASTNodeExpressionNodeFunction::processPostfixOperatorNode(unichar)
improper number of arguments for postfix operator node.
void TSTTSCEASTNodeExpressionNodeFunction::processPrefixOperatorNode(unichar)
improper number of arguments for prefix operator node.
unichar operatorCharForTag(TSCEASTNodeTag)
v40@?0d8{TSTSimpleRange=qQ}16^B32
-[TSTColumnRowUIDMap initWithContext:tableUUID:numberOfRows:numberOfColumns:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTColumnRowUIDMap.mm
tableUUID
-[TSTColumnRowUIDMap insertColumnsWithUIDs:atIndex:]
cannot insert columns at invalid columnIndex
-[TSTColumnRowUIDMap insertRowsWithUIDs:atIndex:]
cannot insert rows at invalid rowIndex
v28@?0I8r^{TSKUIDStruct=QQ}12^B20
v32@?0r^{TSTLookupKeyCoord=I}8Q16^B24
v28@?0S8r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}12^B20
-[TSTImmutableColumnRowUIDMap initWithColumnRowUIDMap:]
@e need to ensure versionCounter was preserved
gamma
lgam
-[TSTCategoryOwner setTableModel:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCategoryOwner.mm
tableModel
%@<%p> (on table %@)
-[TSTCategoryOwner registerWithCalcEngine:baseOwnerUID:]
Already registered with calcEngine
GroupBy shouldn't be registered yet.
-[TSTCategoryOwner registerGroupByForColumns:ownerIndex:hiddenStates:groupBySet:]
Bad ownerIndex (%d) for groupBy
If ownerIndex matches up, then so should groupByUid
-[TSTCategoryOwner updateWithDocumentRoot:]
TSTPivotTables_v2
%@ @ %@
-[TSTAggNode encodeToArchive:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTAggNode.mm
Not expecting an invalid coord here
NSInteger StockAttributeFromString(NSString *__strong, NSUInteger, NSString *__strong, NSInteger, TSULocale *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERemoteDataModeUtility.m
documentLocale
-[TSTFunctionNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTFunctionNode.mm
Unexpected object in initAsCopyOf:... expected TSTFunctionNode, got %@
-[TSTFunctionNode buildASTNodeArray:hostCell:symbolTable:]
Remote Data Coordinator
-[TSCERemoteDataCoordinator registerStore:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERemoteDataCoordinator.mm
%@ is already registered!
-[TSCERemoteDataCoordinator unregisterStore:]
%@ is not registered
-[TSCERemoteDataCoordinator p_fetcherForDataKind:]
No configured fetcher for this data kind!
-[TSCERemoteDataCoordinator addRemoteDataInterest:forStore:]_block_invoke
Unclaimed specifiers after register!
^IXIC
^NYA
^FTSE
^FTAS
^FTAI
^FCHI
^GDAXI
^AXJO
^AORD
^ATX
^BFX
^BVSP
^GSPTSE
000001.SS
399001.SZ
OMXC20.CO
^OMXH25
^HSI
^NSEI
^BSESN
^JKSE
^ISEQ
^IETP
T25.TA
^TA100
FTSEMIB.MI
^N225
^KLSE
^MXX
^AEX
^NZ50
^OSEAX
RTS.RS
^STI
^KS11
^IBEX
^OMX
^SSMI
^TWII
^DJI
AAPL
SBUX
-[TSCERemoteDataCoordinator p_dataSourceFetcherForRemoteData:]
No matching remote data source fetcher for %@
-[TSCERemoteDataCoordinator p_removeRemoteDataInterest:forStore:]
Unclaimed specifiers after unregister!
-[TSCERemoteDataCoordinator isOnlineForDataKind:]
No status for this data kind!
v32@?0@"NSString"8@"TSCEStock"16^B24
-[TSCERemoteDataCoordinator sourceFetcherDidUpdate:withValues:quotes:]_block_invoke
Unexpected changes!
-[TSTLetNode initWithContext:children:firstIndex:lastIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTLetNode.mm
Let nodes should have exactly 0 or 3 children.  There are %lu arguments to let
A let node's first child must be an identifier.
-[TSTLetNode initAsCopyOf:intoContext:children:]
variable %u
-[TSTLetNode setChildren:]
let nodes must have zero or three children
-[TSTLetNode boundSymbol]
identifier is not of proper type: %@
-[TSTLetNode copyByResolvingIdentifiers:hostTable:baseHostCell:forceReferenceInterpretation:symbolTable:oldToNewNodeMap:]
Let nodes must have exactly zero or three children
-[TSTLetNode addAllIdentifiersToSymbolTable:]
Let nodes must have exactly three children
-[TSTLetNode insertFormulaText:includeWhitespace:]
Let node doesn't have three arguments
-[TSTLetNode buildASTNodeArray:hostCell:symbolTable:]
-[TSTSummaryModel resetForPivotingWithRowUids:columnUids:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTSummaryModel.mm
Resetting a categories summary model for pivoting
-[TSTSummaryModel resetForCategoriesWithForce:]
Resetting a pivoting summary model for categories
-[TSTSummaryModel resetForCategoriesWithForce:]_block_invoke_3
we should have a valid coordinate
v24@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8@"TSTCell"16
v16@?0@"TSTSummaryCellVendor"8
-[TSTSummaryModel p_setPivotCell:atCellUID:formulaReplacer:]
Attempting to set cell at illegal summary model cell UID:%{public}@
-[TSTSummaryModel allRichTextStorages]
TODO
-[TSTSummaryModel heightOfRowAtIndex:isDefault:]
Individual row heights can only be used for pivot tables.
-[TSTSummaryModel widthOfColumnAtIndex:isDefault:]
Individual column widths can only be used for pivot tables.
-[TSTSummaryModel setHeight:ofRowAtIndex:]
-[TSTSummaryModel setWidth:ofColumnAtIndex:]
-[TSTSummaryModel setLabelRowVisibility:atCategoryLevel:]
-[TSTSummaryModel willRemoveGroup:]
GroupBy tried to remove a summaryRow that doesn't exist in the summaryModel.
+[TSTSummaryModel categoryLevelForTableStyleArea:]
Calling categoryLevelForTableStyleArea with an invalid style area
v16@?0@"TSTCellMap"8
+[TSTCellToggleControlSpec cellSpecFromTSKFormat:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellToggleControlSpec.mm
Expected checkbox format.
-[TSTCellToggleControlSpec initWithArchive:unarchiver:]
Wrong interaction type for a checkbox.
-[TSTStrokeOrderedLayer initWithContext:majorStrokeLayer:minorStrokeLayer:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTStrokeOrderedLayer.m
majorStrokeLayer
minorStrokeLayer
-[TSTStrokeOrderedLayer appendStroke:inRange:order:]
-[TSTStrokeOrderedLayer insertStroke:inRange:order:]
-[TSTStrokeOrderedLayer invalidate]
-[TSTStrokeOrderedLayer invalidateRange:]
-[TSWPStorage(TSTAdditions) tst_selectionForImplicitlyEditingWithFormatType:percentSymbol:currencySymbol:adjustSelectionForCurrencyOrPercentSymbols:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSWPStorage+TSTAdditions.mm
currencySymbol
-[TSWPStorage(TSTAdditions) tst_tableInfo]
parentInfo of a TSWPKindTable TSWPStorage must be a TSTTableInfo
-[TSWPStorage(TSTAdditions) rangeForCellID:includingBreak:]
cell attribute not found
TSCEEvaluationContext::TSCEEvaluationContext(TSCECalculationEngine *__strong, const TSCEOwnerUID &, TSUCellCoord)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEEvaluationContext.mm
Didn't get a calc engine
void TSCEEvaluationContext::runBlockUnlessAborted(__strong dispatch_block_t)
failed to create dispatch group
static NSDate *TSCEEvaluationContext::newDateConversionOfString(NSString *__strong, TSCEEvaluationContext *)
Should not have reached this point with a NULL context - you are lucky you are getting any date at all.
TSCEValue TSCEFunction_MULTINOMIAL::evaluateWithContext(TSCEEvaluationContext &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEMathTrigFunctions.mm
MULTINOMIAL accepts nonnegative arguments only.
v32@?0@"TSCETrackedReference"8Q16^B24
v16@?0@"TSCETrackedReference"8
TSTWPTokenAttachment *TSTLexer::nextTokenAttachment()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTLexerAdditions.mm
No more tokenAttachments.
tokenAttachment
virtual TSCEASTElement *TSTTrackingRangeExtractor::anyReferenceNode(TSCEASTRelativeCoordRefElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTrackingRangeExtractor.mm
Too many coordinates in tracking range!
tracking region should not yet be initialized
+[TSTFormulaPredArgData getPredArgDataFromCell:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTFormulaPredArg.mm
predArgData
-[TSTFormulaPredArgData string]
Wrong data type for call: %d
-[TSTFormulaPredArgData date]
-[TSTFormulaPredArgData number]
-[TSTFormulaPredArgData doubleValue]
-[TSTFormulaPredArgData boolValue]
-[TSTFormulaPredArgData durationValue]
-[TSTFormulaPredArgData durationUnits]
-[TSTFormulaPredArgData duration]
-[TSTFormulaPredArg boolValue]
Wrong type accessor called on %@
-[TSTFormulaPredArg setBoolValue:]
-[TSTFormulaPredArg number]
-[TSTFormulaPredArg setNumber:]
-[TSTFormulaPredArg preserveFlags]
-[TSTFormulaPredArg setPreserveFlags:]
Must set the entire relative reference, if you are relative
-[TSTFormulaPredArg date]
-[TSTFormulaPredArg setDate:]
-[TSTFormulaPredArg string]
-[TSTFormulaPredArg setString:]
-[TSTFormulaPredArg dataList]
-[TSTFormulaPredArg relativeCellRef]
Asking for a relative cell-ref, but we don't have one
-[TSTFormulaPredArg setRelativeCellRef:]
-[TSTFormulaPredArg crossTableRef]
Need a host-cell if we aren't storing a relativeRef
-[TSTFormulaPredArg categoryRef]
-[TSTFormulaPredArg viewTractRef]
-[TSTFormulaPredArg baseCellRef]
-[TSTFormulaPredArg cellRefForHostCoord:]
-[TSTFormulaPredArg setBaseCellRef:]
-[TSTFormulaPredArg durationValue]
-[TSTFormulaPredArg setDurationValue:]
-[TSTFormulaPredArg durationUnits]
-[TSTFormulaPredArg duration]
-[TSTFormulaPredArg setDurationUnits:]
-[TSTFormulaPredArg rewriteWithContext:forArgAt:usingLinkedRef:useColumnRef:hostCellRef:rewriteBlock:]
Not expecting no result
-[TSTFormulaPredArg formulaCreatorForPredArg]
Need a host-cell for this
-[TSTFormulaPredArg formulaCreatorForPredArg0UsingLinkedRef:useColumnRef:]
Only references types are supported for predArg0, saw %d
-[TSTHiddenStatesOwner hiddenStates]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTHiddenStatesOwner.mm
We should only have one hiddenStates per table, at the moment
%@<%p>(on table %@)
 Hidden States:
  - %@
-[TSTHiddenStatesOwner registerHiddenStates:baseOwnerUID:]
HiddenStates couldn't register with calc-engine
%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X
TSCEOwnerUID TSCESubFormulaOwnerID::formulaOwnerUIDForBaseUIDAndSubownerIndex(const TSCEOwnerUID &, TSCESubFormulaOwnerIndex)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCETypes.mm
OwnerIndex %d doesn't correspond to a subFormulaOwner
TSUCellCoord TSCEMakeAbsoluteCellCoordinateFromRelativeCellCoordinate(TSUCellCoord, TSCERelativeCellCoordinate, const TSUPreserveFlags &)
Wrong sticky setting
tableUID: %@
%@ %@ couldBeIntersection: %@
(include headers)
%@::(%@%d,_)
%@::(_,%@%d)
%@::(%@%d,%@%d)
aggType=%d
-[TSTBooleanNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTBooleanNode.mm
Unexpected object in initAsCopyOf:... expected TSTBooleanNode, got %@
true
false
-[TSTBooleanNode insertFormulaText:includeWhitespace:]
BooleanNode shouldn't have any children
-[TSTBooleanNode buildASTNodeArray:hostCell:symbolTable:]
rewriteType=%d
-[TSCEFormulaRewrite_Uids initWithUids:atIndexes:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulaRewriteInfo_RowColumnInfo.mm
Size mismatch for our vectors
-[TSCEFormulaRewrite_Uids containsIndex:]
The %{public}@ API requires -[%{public}@ loadIndexesForTable:] be called first.
-[TSCEFormulaRewrite_Uids rowIndexForUid:]
Warning, %{public}@ did not find the uuid: %@
-[TSCEFormulaRewrite_Uids columnIndexForUid:]
Uids: %@
Indexes: %@
-[TSCEFormulaRewriteInfo_RowColumnInfo saveToMessage:]
Cannot archive until we have called loadIndexesForTable
-[TSCEFormulaRewriteInfo_RowColumnInfo offsetForRowIndex:]
-[TSCEFormulaRewriteInfo_RowColumnInfo offsetForUpdatedRowIndex:isRemoveRows:]
This should be the same offset, then, right
-[TSCEFormulaRewriteInfo_RowColumnInfo updatedCellRefForRewriteType:originalCellRef:]
Not implemented for this rewrite type
Should not see this call, we should get either the insert or remove rewrite types
Should not see this call, its more complex than that
-[TSCEFormulaRewriteInfo_RowColumnInfo originalCellRefForRewriteType:updatedCellRef:]
-[TSCEFormulaRewriteInfo_RowColumnInfo indexIsAffected:]
-[TSCEFormulaRewriteInfo_RowColumnInfo uuidForIndex:]
-[TSCEFormulaRewriteInfo_RowColumnInfo columnIndexForUuid:]
-[TSCEFormulaRewriteInfo_RowColumnInfo rowIndexForUuid:]
-[TSCEFormulaRewriteInfo_RowColumnInfo rowOrColumnIndices]
-[TSCEFormulaRewriteInfo_RowColumnInfo tableRange]
-[TSCEFormulaRewriteInfo_RowColumnInfo affectedRangeForRemoveRows]
-[TSCEFormulaRewriteInfo_RowColumnInfo affectedRangeForMoveRows]
insertInfo
-[TSCEFormulaRewriteInfo_RowColumnInfo uuidsInRange:]
-[TSCEFormulaRewriteInfo_RowColumnInfo uuidsForIndexes:]
%@ uuids: %@
<TSKUIDStructVector: %p>
-[TSTArrayNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTArrayNode.mm
Unexpected object in initAsCopyOf:... expected TSTArrayNode, got %@
-[TSTArrayNode string]
We shouldn't call the arrayNode's string method, because it won't actually return a proper tokenized string
-[TSTArrayNode insertFormulaText:includeWhitespace:]
invalid TSTArrayNode children
expected n-1 delimiter whitespace elements
-[TSTArrayNode buildASTNodeArray:hostCell:symbolTable:]
We don't support more than UINT16_MAX rows in an array
We don't support more than UIN8_MAX columns in an array
-[TSTListNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTListNode.mm
Unexpected object in initAsCopyOf:... expected TSTListNode, got %@
<%@ %p>
-[TSTListNode string]
We shouldn't call the listNode's string method, because it won't actually return a proper tokenized string
-[TSTListNode buildASTNodeArray:hostCell:symbolTable:]
TSCEValue TSCEEvaluationStack::valueForArgumentAtIndexSingletonMode(int, TSCEFunctionSpec *__strong, TSCEEvaluationContext &, TSCEFunctionArgSpec *, TSCEArgumentType, int)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEEvaluationStack.mm
unsupported computed reference type found. See TSCECalcEngine::referenceWasGuaranteedCleanAtRecalcCycleStart
TSCEValue TSCEEvaluationStack::valueForArgumentAtIndexSwitch(int, TSCEFunctionSpec *__strong, TSCEEvaluationContext &, TSCEFunctionArgSpec *, TSCEArgumentType, TSCEArgumentAccessorMode, int)
Invalid accessorMode (%d)
TSCEValue TSCEEvaluationStack::valueForArgumentAtIndex(int, TSCEFunctionSpec *__strong, TSCEEvaluationContext &)
Have to set argument count before you call valueForArgumentAtIndex()
void TSCEEvaluationStack::replaceArgumentAtIndex(int, TSCEValue)
cannot replace an invalid index
virtual void TSCEASTStreamIterator::rewrite()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTStreamIterator.mm
Unexpected incomplete embedded node type found
virtual TSCEArgumentType TSCEAbstractValue::nativeType() const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEAbstractValue.mm
Subclasses must override nativeType
virtual TSCEValue TSCEAbstractValue::value() const
virtual NSString *TSCEAbstractValue::bakedString(TSULocale *__strong) const
Shouldn't get a reference type from deepType
these cases shouldn't happen
virtual BOOL TSCEAbstractValue::isNativelyEqual(const TSCEValue &, TSCEEvaluationContext *) const
isNativelyEqual not implemented for type: %d
virtual TSCEReferenceValue TSCEAbstractValue::reference(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
virtual size_t TSCEAbstractValue::hash() const
subclasses must override TSCEAbstractValue::hash()
virtual TSCEASTNodeArray *TSCEAbstractValue::newCorrespondingAST(TSCEEvaluationContext &, TSCEFunctionSpec *__strong, int, bool) const
subclasses must override newCorrespondingAST
-[TSTGroupNodeFormatManager reset]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGroupNodeFormatManager.mm
_cellValue
-[TSTGroupNodeFormatManager p_recalculateMergedFormatWithGroupBy:]
Expected duration format.
-[TSTGroupNodeFormatManager mergedFormatChangedByAddingRowUID:andCellValue:groupBy:]
format
groupBy
-[TSTGroupNodeFormatManager mergedFormatChangedByRemovingRowUID:groupBy:]
CellValue:%@
Cache:%@
-[TSTGroupNodeFormatManager updateWithDocumentRoot:]
-[TSTGroupNodeFormatManager initWithArchive:]
Expected equal size arrays for the format dictionary.
-[TSTGroupNodeFormatManager encodeToArchive:forGroupBy:backwardCompat:]_block_invoke
-[TSTStringNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTStringNode.mm
Unexpected object in initAsCopyOf:... expected TSTStringNode, got %@
\U201C\U2006\U201D
\U201C%@\U201D
-[TSTStringNode insertFormulaText:includeWhitespace:]
StringNode shouldn't have any children
-[TSTStringNode buildASTNodeArray:hostCell:symbolTable:]
-[TSTDateNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTDateNode.mm
Unexpected object in initAsCopyOf:... expected TSTDateNode, got %@
-[TSTDateNode insertFormulaText:includeWhitespace:]
DateNode shouldn't have any children
-[TSTDateNode buildASTNodeArray:hostCell:symbolTable:]
DATE(%ld%@%ld%@%ld)
(DATE(%ld%@%ld%@%ld)+TIMEVALUE(TIME(%ld%@%ld%@%ld)))
<%@ %p>: '%@'%@
 (BLANK)
-[TSTReferenceNode initWithContext:calculationEngine:uidRectRef:categoryRef:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTReferenceNode.mm
Expected uidRectRef to have same calculation engine as the one that was passed in.
-[TSTReferenceNode initWithReferenceStart:referenceEnd:suppressAutomaticNamedReferenceInvalidation:]
Creating a range reference with two references with different ownerUIDs
Creating a range reference with two references with different calculationEngines
-[TSTReferenceNode initAsCopyOf:intoContext:children:]
Unexpected object in initAsCopyOf:... expected TSTReferenceNode, got %@
unable to resurrect calcEngine in document context.
+[TSTReferenceNode p_spanningCategoryRefForViewRangeRef:groupByUid:categoryLevel:calculationEngine:]
trying to create a spanning category summary ref to more than one column
-[TSTReferenceNode p_categoryRefViewTractRef]
invalidCellTractRef
expected to create an invalid cell tract ref
-[TSTReferenceNode categoryRefTableUID]
asking a non-category ref node for its category ref table UID
-[TSTReferenceNode setHostTableUID:]
invalid tableUID
-[TSTReferenceNode referenceAsStringWithContext:]
nil calculationEngine.  Can't generate string for categoryRefNode.
nil calculationEngine.  Can't generate string for referenceNode.
-[TSTReferenceNode referenceAsStringWithContext:]_block_invoke
-[TSTReferenceNode insertFormulaText:includeWhitespace:]
ReferenceNode shouldn't have any children
-[TSTReferenceNode buildASTNodeArray:hostCell:symbolTable:]
-[TSTReferenceNode exportString]
%@ :: 
-[TSTReferenceNode excludeSummaryAndLabelRows]
Need a calcEngine set to do this
-[TSTReferenceNode loadFromArchive:unarchiver:]
Invalid TSTReferenceNode archive
TSCECellRefSet TSCEInternalCellRefSet::asCellRefSet(TSCEDependencyTracker *) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEInternalCellRefSet.mm
Need a dependency tracker to do this conversion
v32@?0r^S8r^v16^B24
-[TSTPencilAnnotation initWithContext:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPencilAnnotation.mm
v16@?0@"TSDPencilAnnotationStorage"8
-[TSTPencilAnnotation loadFromArchive:unarchiver:]
A TSTPencilAnnotation must have a pencilAnnotationStorage
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTInsertRowsRewriter.mm
virtual TSCEASTElement *TSCEASTInsertRowsRewriter::uidReferenceNode(TSCEASTUidReferenceElement *)
TSCEASTInsertRowsRewriter - only move rows uses uuid-form references
virtual TSCEASTElement *TSCEASTRewriteUsingValuesRewriter::binaryInfixOperatorNode(TSCEASTBinaryElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTRewriteUsingValuesRewriter.mm
evaluation stack is too small
virtual TSCEASTElement *TSCEASTRewriteUsingValuesRewriter::unaryOperatorNode(TSCEASTUnaryElement *, BOOL)
virtual TSCEASTElement *TSCEASTRewriteUsingValuesRewriter::linkedRefNode(TSCEASTLinkedRefElement *)
Unsupporeted by TSCEASTRewriteUsingValuesRewriter: linkedRefNode
virtual TSCEASTElement *TSCEASTRewriteUsingValuesRewriter::uidReferenceNode(TSCEASTUidReferenceElement *)
Unsupporeted by TSCEASTRewriteUsingValuesRewriter: uidReferenceNode
virtual TSCEASTElement *TSCEASTRewriteUsingValuesRewriter::letBindNode(TSCEASTLetBindElement *)
Not expecting let usage in this rewriter
virtual TSCEASTElement *TSCEASTRewriteUsingValuesRewriter::letVariableNode(TSCEASTLetVariableElement *)
virtual TSCEASTElement *TSCEASTRewriteUsingValuesRewriter::letEndScopeNode(TSCEASTLetEndScopeElement *)
TSCEValue TSCEASTRewriteUsingValuesRewriter::evaluationResult()
an evaluation result is undefined
bool TSCEASTRewriteUsingValuesRewriter::rewriteFunctionCallByRemovingNumberToDateCoercions(uint16_t, uint32_t)
All TSCEASTRewriteUsingValuesRewriter callbacks need to adjust _evaluationStackElementOriginSizes and _copiedNodes appropriately.
-[TSTDurationNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTDurationNode.mm
Unexpected object in initAsCopyOf:... expected TSTDurationNode, got %@
-[TSTDurationNode insertFormulaText:includeWhitespace:]
DurationNode shouldn't have any children
-[TSTDurationNode buildASTNodeArray:hostCell:symbolTable:]
DURATION(%g%@%g%@%g%@%g%@%g%@%g)
-[TSTDurationNode date]
We shouldn't ask a Duration for its date.
-[TSTDurationNode format]
We shouldn't ask a Duration for its format.
sLocalizedTrue
sLocalizedTrueStrings
sLocalizedFalse
sLocalizedFalseStrings
mappings_functionLocalizationDictionary
mappings_localizedTypeStringForArgumentType
an error
an empty cell
empty
a number
a string
a Boolean
a date
a reference
a vector
a duration
anything
a number, date, or duration
localizedFunctionNameForMenuTag
Mean
Median
Mode
localizedNameForFunction:
%@_TOOLTIP
localizedCategoryForFunction:
%@_ARGUMENT_%d
%@_ARGUMENT_%d_TOOLTIP
%@_ARGUMENT_%d_MODE_%d
%@_ARGUMENT_%d_MODE_%d_TOOLTIP
arguments
Localizable
strings
-[TSULocale(TSCELocalization) localizedNamesForFunctions:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCELocalization.mm
Either %@ was translated improperly, or some other function was translated to the same name.
localizedFunctionCategoryDictionary
Date and Time
Engineering
Financial
Logical and Information
Reference
Numeric
Trigonometric
Statistical
Text
localizedCategoryArray
allLocalizedFunctions
localizedLabelForAggType
No Summary
Count (All)
Average (All)
Minimum
Maximum
Category
Group Name
Label
Count
Count (Unique)
Rows
Count (Duplicates)
Count (Blank)
Average
Product
RANGE
localizedShortLabelForAggType
Count All
Average All
Min.
Max.
Unique
Count Duplicates
Count Blank
Base Value
% of Grand Total
% of Column Total
% of Row Total
% of Parent Column Total
% of Parent Row Total
Index
incbet
-[TSTArgumentPlaceholderNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTArgumentPlaceholderNode.mm
Unexpected object in initAsCopyOf:... expected TSTArgumentPlaceholderNode, got %@
-[TSTArgumentPlaceholderNode copyIntoContext:bakeModes:children:]
Unexpected mode value type
value
-[TSTArgumentPlaceholderNode detokenizedText]
expected set placeholder node to return a different node for bakedValue
-[TSTArgumentPlaceholderNode buildASTNodeArray:hostCell:symbolTable:]
ArgumentPlaceholderNode shouldn't have children
-[NSDate(TSCEAdditions) tsce_weekNumberForType:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECalculationUtilities.mm
Incorrect month number in function WEEKNUM
Incorrect type number in function WEEKNUM.
BOOL TSCEValueHasError(TSCEValue, int, TSCEEvaluationContext *)
actual values shouldn't have TSCEAnyArgumentType
actual values shouldn't have TSCEDurationArgumentType
actual values shouldn't have TSCENoCoerceScalarArgumentType
NSComparisonResult TSCECaseInsensitiveCompareValues(const TSCEValue &, const TSCEValue &, TSCEEvaluationContext &)
TSCEInvalidComparisonError should not be raised when both numbers are durations
TSCEInvalidComparisonError should not be raised when both numbers are currencies
Dimension here should be duration, TSCEInvalidComparisonError should not be raised if it's a currency
TSCEInvalidComparisonError should not be raised when both numbers have no units
We should never reach here unless you pass in nodes with unsupported types, leftType: %d rightType: %d
+[(){}^$|\./
.{1}
NSString *TSCEConvertWildcardStringToICURegex(NSString *__strong)
We don't want to quote a character that doesn't need to be quoted.
BOOL TSCEValueSufficesForArgumentType(const TSCEValue &, TSCEArgumentType, TSCEArgumentType, TSCEArgumentType, TSCEEvaluationContext *)
empty arguments should never be required
TSCEValue TSCEMultifactorial(TSCEFunctionSpec *__strong, TSCEValue, TSCENumberValue, TSCENumberValue, TSCEEvaluationContext *)
Multifactorial shouldn't have i less than zero.  Please file a bug.
TSCEValue TSCEEvaluateAverageIgnoringError(TSCECalculationEngine *__strong, TSUCellCoord, const TSCEOwnerUID &, TSCERangeCoordinate, const TSCEOwnerUID &)
Unregistered tableUID found when calculating average
NSDictionary<NSString *,NSMutableIndexSet *> *TSCEEvaluateUniqueIgnoringError(TSCECalculationEngine *__strong, TSUCellCoord, const TSCEOwnerUID &, TSCERangeCoordinate, const TSCEOwnerUID &)
Unregistered tableUID found when calculating unique
TSCEValue TSCEEvaluateLargeOrSmallIgnoringError(TSCECalculationEngine *__strong, TSUCellCoord, const TSCEOwnerUID &, TSCERangeCoordinate, const TSCEOwnerUID &, BOOL, double, BOOL)
Unregistered tableUID found when calculating large/small
TSCEValue TSCEEvaluateCountIgnoringError(TSCECalculationEngine *__strong, TSUCellCoord, const TSCEOwnerUID &, TSCERangeCoordinate, const TSCEOwnerUID &)
Unregistered tableUID found when calculating count
-[TSTPostfixOperatorNode insertFormulaText:includeWhitespace:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPostfixOperatorNode.mm
PostfixOperatorNode doesn't have one argument
-[TSTPostfixOperatorNode buildASTNodeArray:hostCell:symbolTable:]
-[TSTStrokeDefaultVendor p_strokeTypeForColumn:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTStrokeDefaultVendor.mm
expected a pivot table for footer columns
-[TSTStrokeDefaultVendor p_updateStrokeLayer:forColumnStrokeType:]
unexpected column strokeType %zu
-[TSTStrokeDefaultVendor p_updateStrokeLayer:forRowStrokeType:]
unexpected row strokeType %zu
-[TSCEDenseGrid initWithValueGrid:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEDenseGrid.mm
Warning, making a TSCEDenseGrid with a non-zero based offset: %@
-[TSTUidCoordsPerRunningCellValue getUidCoordforRunningAggregate:tupleForCoord:newUidCoord:addNewUidCoordEvenIfNotFound:inContext:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTRunningTotalContext.mm
Got a too-large insertIndex: %lu
-[TSTRunningTotalContext getPreviousUidCoordForAggIndex:fromNewUidCoord:addNewUidCoordEvenIfNotFound:]
We need to locate (or create) a tuple
365.2425
14593.9
453.59237
28.349523125
1.6605390402E-24
0.06479891
1609.344
.9144
.3048
.0254
1E-10
1.143
30,856,775,814,913,673
1609.347218694
6894.75729
133.3223684210526
1E-5
4.4482216152605
0.009806649999788
1E-7
4.184
4.1868
1.602176634E-19
1.3558179483314
1055.05585257348
745.69987158227022
735.49875
1.25
4046.872609874252
1E-20
0.092903
.0295735295625
0.473176473
0.56826125
0.946352946
3.785411784
0.005
1.13652
4.54609
1E-30
35.2391
28.3168
0.0163871
0.44704
0.3048
1.852
grain
shweight
uk_cwt
lcwt
hweight
stone
uk_ton
LTON
brton
Pica
Picapt
parsec
survey_mi
mmHg
Torr
pond
Rank
Reau
tbsp
fl oz
us_pt
uk_pt
tspm
uk_qt
uk_gal
ang3
ang^3
barrel
bushel
ft^3
in^3
ly^3
mi^3
yd^3
Nmi3
Nmi^3
Picapt3
Picapt^3
Pica3
Pica^3
regton
MTON
mi/h
m/sec
mi/mn
ft/mn
ft/s
m/hr
m/mn
admkn
uk_acre
us_acre
ang2
ang^2
ft^2
in^2
ly^2
Morgen
mi^2
Nmi2
Nmi^2
Picapt2
Picapt^2
Pica2
Pica^2
yd^2
byte
+[TSCEUnitRegistry unitForCurrencyCode:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEUnitRegistry.mm
can't look up unit for a nil currency code
+[TSCEUnitRegistry canonicalUnitForDimension:]
Unknown dimension found in canonicalUnitForDimension
+[TSCEUnitRegistry multiplierForUnitPrefix:]
Shouldn't try to get the multiplier of an invalid unit prefix
Shouldn't try to get the multiplier of an unknown unit prefix
+[TSCEUnitRegistry convert:fromUnit:toUnit:]
Invalid unit found in convert:
Can't convert across dimensions.
+[TSCEUnitRegistry dimensionForUnit:]
unit out of bounds in dimensionForUnit:.
-[TSTPrefixOperatorNode insertFormulaText:includeWhitespace:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPrefixOperatorNode.mm
PrefixOperatorNode doesn't have one argument
-[TSTPrefixOperatorNode buildASTNodeArray:hostCell:symbolTable:]
-[TSTFunctionEndNode insertFormulaText:includeWhitespace:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTFunctionEndNode.mm
We shouldn't ever buildFormulaText: with a functionEndNode
-[TSTFunctionEndNode buildASTNodeArray:hostCell:symbolTable:]
We shouldn't ever buildASTNodeArray: with a functionEndNode
const TSCEValue TSCEValueBindingEnvironment::lookup(const TSCESymbol &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEValueBindingEnvironment.mm
unbound symbol found: %u
void TSCEValueBindingEnvironment::endScope()
_undoSymbols is empty at endScope() - beginScope() never called?
TSCEFunctor(%u args)=%@
TSCECellValue *TSCEFunctor::evaluateWithArgs(NSArray *__strong, TSCECalculationEngine *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFunctor.mm
Wrong number of arguments for functor: %@, args: %@
-[TSTCellFormatAndValue stringValue]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellFormatAndValue.mm
Getting a non-string value as string from a TSTCellFormatAndValue.
-[TSTCellFormatAndValue richTextOrErrorTextStorageValue]
Getting a non-rich-text/non-formula-error value as rich text from a TSTCellFormatAndValue.
+[TSTCellFormatAndValue formatAndValueFromRichTextCell:updatingStorageWithBlock:]
expected rich text cell when creating format and value
-[TSTCellFormatAndValue initFromCell:useAllSpareFormats:forceNoContent:suppressApplyValue:applySpareFormatOnly:]
useAllSpareFormats and spareFormatOnly are mutually exclusive!
deprecated cell value type found
-[TSTCellFormatAndValue copyWithZone:]
-[TSTCellFormatAndValue numberOrCurrencyDecimalValue]
Getting a non-double value as double from a TSTCellFormatAndValue.
-[TSTCellFormatAndValue hasStringContentMatchingCell:]
no string content comparison implemented for value type %d
-[TSTCellFormatAndValue applyToCell:]
-[TSTCellFormatAndValue objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:]
shouldn't remove the value and format from a cell
-[TSTCellFormatAndValue initFromPropertyCommandMessage:unarchiver:]
rich text cells should have a rich text payload
-[TSTCellFormatAndValue saveToPropertyCommandMessage:archiver:]
Non-nil string resulted in NULL protobufString: '%@'
static NSDate *TSCEFinancialFunctions::prevCoupDateWithSettlement(NSDate *__strong, NSDate *__strong, int)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFinancialFunctions.mm
Setlement date should not be larger than maturity date
static NSDate *TSCEFinancialFunctions::nextCoupDateWithSettlement(NSDate *__strong, NSDate *__strong, int)
TSCEValue TSCEFunction_ACCRINT::evaluateWithContext(TSCEEvaluationContext &)
ACCRINT: should not reach here if numCoponsLeft is not 1
#%lu[%@]
%@<%p> for ownerUID %@:
Table %@ <- %@
Table %@, Uid: %@ <- %@
-[TSTPivotOwner registerWithCalcEngine:forTableModel:baseOwnerUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPivotOwner.mm
_tableModel
-[TSTPivotOwner linkToCalcEngine:forTableModel:]
-[TSTPivotOwner setPivotSourceHeaderTract:]
pivot source header range expected to span all columns
Columns
Values
-[TSTPivotOwner p_setEmptyPivotTableLabels]
These labels are only for empty pivots
-[TSTPivotOwner p_setPivotHeaderCellsResettingPivotHidden:preservingStyles:]
Row group not found
Column group not found
v32@?0r^{TSKUIDStruct=QQ}8@"TSTPivotGroupingColumnOptions"16^B24
-[TSTPivotOwner p_formulaForCellCoord:runningTotalContext:]
Invalid ShowAs Type
-[TSTPivotOwner p_sortRowsInMode:sortDirection:columnIndex:level:aggregateIndex:resetLabels:]_block_invoke
Expected a valid category level for all body rows
-[TSTPivotOwner p_sortColumnsInMode:sortDirection:rowIndex:level:aggregateIndex:resetLabels:]_block_invoke
Expected a valid category level for all body columns
-[TSTPivotOwner p_sortFullTable:]
Full table sort is only appropriate for implicit sort modes.
v16@?0@"TSTPivotGroupingColumnOptionsMap"8
-[TSTPivotOwner evaluateFormulaAt:withCalcEngine:recalcOptions:]
Unexpected formulaCoord seen in TSTPivotOwner: %@
virtual NSDate *TSCECategoryRefValue::date(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECategoryRefValue.mm
Error: couldn't resolve TSCECategoryRefValue
virtual NSString *TSCECategoryRefValue::rawString(TSCEFunctionSpec *__strong, int, TSULocale *__strong) const
virtual BOOL TSCECategoryRefValue::boolean(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
virtual TSCERichTextStorage TSCECategoryRefValue::richTextStorage(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
virtual TSCERichTextStorage TSCECategoryRefValue::rawRichTextStorage(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
virtual TSCEGrid TSCECategoryRefValue::formattedGrid(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
virtual TSCENumberValue TSCECategoryRefValue::number() const
virtual NSDate *TSCECategoryRefValue::date() const
virtual size_t TSCEASTElement::size(TSCEASTIteratorBase *) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTElements.mm
Need to override size() method for derived element types.
TSCEASTAdditionNode
TSCEASTSubtractionNode
TSCEASTMultiplicationNode
TSCEASTDivisionNode
TSCEASTPowerNode
TSCEASTConcatenationNode
TSCEASTGreaterThanNode
TSCEASTGreaterThanOrEqualToNode
TSCEASTLessThanNode
TSCEASTLessThanOrEqualToNode
TSCEASTEqualToNode
TSCEASTNotEqualToNode
TSCEASTNegationNode
TSCEASTPlusSignNode
TSCEASTPercentNode
TSCEASTFunctionNode
TSCEASTFunctionLongNode
TSCEASTNumberNode
TSCEASTBooleanNode
TSCEASTStringNode
TSCEASTDateNode
TSCEASTDurationNode
TSCEASTEmptyArgumentNode
TSCEASTTokenNode
TSCEASTArrayNode
TSCEASTListNode
TSCEASTThunkNode
TSCEASTColonNode
TSCEASTReferenceErrorNode
TSCEASTUnknownFunctionNode
TSCEASTPrependWhitespaceNode
TSCEASTAppendWhitespaceNode
TSCEASTFunctionNodeWithWhitespace
TSCEASTCellReferenceNode
TSCEASTColonWithUidsNode
TSCEASTLinkedCellRefNode
TSCEASTLinkedColumnRefNode
TSCEASTLinkedRowRefNode
TSCEASTUidReferenceNode
TSCEASTLetBindNode
TSCEASTLetVarNode
TSCEASTLetEndScopeNode
TSCEASTCategoryRefNode
TSCEASTColonTractNode
TSCEASTViewTractRefNode
static NSString *TSCEASTElement::stringForTag(TSCEASTNodeTag)
%d is not a valid node tag
Tag: %@ @offset: %lu size=%lu
TSCEASTElement *TSCEASTElementWithChildren::setChildAtIndex(TSCEASTElement *, uint32_t, TSCEASTRewriter *)
Must set children in order
TSCEASTElement *TSCEASTElementWithUidTractsWithChildren::setChildAtIndex(TSCEASTElement *, uint32_t, TSCEASTRewriter *)
void TSCEASTElementWithUidTracts::setRefFlags(TSCEASTRefFlags, TSCEASTIteratorBase *)
Don't call setRefFlags() on this type until it supports them
TSCERangeRef TSCEASTColonElement::rangeReference(TSCEASTIteratorBase *, TSUPreserveFlags &, const TSUCellCoord &)
A calculationEngine needs to be set on this rewriter to use TSCEASTColonElement::rangeReference() method.
virtual size_t TSCEASTFunctionElement::size(TSCEASTIteratorBase *) const
Unknown tag for TSCEASTFunctionElement: %d
void TSCEASTFunctionElement::setNumArgs(uint32_t, TSCEASTIteratorBase *)
Unhandled function tag: %d
static size_t TSCEASTWhitespaceElement::appendWhitespaceElement(TSCEASTNodeArray *, TSCEASTNodeTag, NSString *__strong)
Not a whitespace tag
static TSCECellTractRef *TSCEASTRelativeCoordRefElement::tractRefUsingUuids(TSCEASTIteratorBase *, const TSCEOwnerUID &, const TSKUIDStructVector &, const TSKUIDStructVector &, TSCEMutableUIDSet *__autoreleasing &, TSCEMutableUIDSet *__autoreleasing &, BOOL)
How can we be spanning in both rows and columns.
static bool TSCEASTRelativeCoordRefElement::expandTractRefUsingUuids(TSCEASTIteratorBase *, const TSCEOwnerUID &, TSCECellTractRef *__strong, const TSKUIDStructVector &, TSKUIDStructVector &, BOOL)
Don't use this method for non-existing ranges, use tractRefUsingUuids() instead.
static bool TSCEASTRelativeCoordRefElement::expandRangeCoordinateUsingUuids(TSCEASTIteratorBase *, const TSCEOwnerUID &, TSCERangeCoordinate &, const TSKUIDStructVector &, TSKUIDStructVector &, BOOL)
Don't use this method for non-existing ranges, use rangeCoordinateUsingUuids() instead.
void TSCEASTRelativeCoordRefElement::setTableUID(const TSCEOwnerUID &, TSCEASTIteratorBase *)
Cannot use setTableUID on a tag that isn't already cross-table
void TSCEASTRelativeCoordRefElement::setRelativeCoord(const TSCERelativeCellCoordinate &, TSCEASTIteratorBase *)
Can't setRelativeCoord on type: %d
Can't use setRelativeCoord to switch from spanning (%d,%d) to not spanning (%d,%d)
TSCECrossTableReference TSCEASTRelativeCoordRefElement::crossTableRef(TSCEASTIteratorBase *) const
Incorrect tag for use with crossTableRef: %d
virtual TSCECellRef TSCEASTRelativeCoordRefElement::absoluteCellRef(TSCEASTIteratorBase *, const TSUCellCoord &) const
Invalid tag: %d
void TSCEASTUidReferenceElement::setTableUID(const TSCEOwnerUID &, TSCEASTIteratorBase *)
void TSCEASTViewTractRefElement::setTableUID(const TSCEOwnerUID &, TSCEASTIteratorBase *)
void TSCEASTNodeArray::write(const T &) [T = TSCEBaseUnit]
void TSCEASTNodeArray::write(const T &) [T = unsigned char]
void TSCEASTNodeArray::write(const T &) [T = TSUDurationStyle]
void TSCEASTNodeArray::write(const T &) [T = bool]
void TSCEASTNodeArray::write(const T &) [T = short]
virtual TSCEASTNodeArray *TSCENilValue::newCorrespondingAST(TSCEEvaluationContext &, TSCEFunctionSpec *__strong, int, bool) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCENilValue.mm
nil values are unexpected on the evaluation stack
Malformed Reference Node - Unexpected Path Delimiter
Malformed Reference Node
TSCEASTNodeArray *processReference(TSCEParser *, TSCEASTNode *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECAST.mm
Wrong parser state?
Missing sibling in function call
Malformed Reference Node - Function with trailing crap
Whitespace missing between leaves.
Too many nodes inside a reference node
id TSCEASTLeafGetString(TSCEASTLeaf *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECAST.h
Can't have a string type leaf with type function.
TSCEASTNodeArray *TSCEASTLeafGetFunction(TSCEASTLeaf *)
Can't have a non function type leaf return a function.
TSCEOwnerUID formulaOwnerUIDFromNativeIDString(NSString *__strong, TSCECalculationEngine *__strong, TSCEFormulaSyntaxType)
ResolverId_
We should have successfully registered the parsedOwnerID: %@
Invalid Reference
void gatherNativeReferenceInformation(TSCERegionAllocator *__strong, TSCEASTLeaf *, TSCEOwnerUID, TSCERangeCoordinate *, TSUPreserveFlagsEnum *, NSString *__autoreleasing *, NSString *__autoreleasing *, TSCEASTLeaf **)
We shouldn't have quoted labels on import
-[TSTHiddenStates copyFromHiddenStates:forRange:withContext:isWholeTableCopy:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTHiddenStates.mm
Failed to hide row during copy.
Failed to hide column during copy.
-[TSTStrokeSidecarIterator initWithStrokeSidecar:region:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTStrokeSidecarIterator.mm
-[TSTStrokeSidecarIterator updateCellData:]
invalid cellID in cellData
cellID %@ should be before cursor cellID %@
TSCEASTElement *TSCEASTElementIterator::nextElement()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTElementIterator.mm
virtual void TSCEASTElementIterator::rewrite()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTElementIterator.h
No rewrite method implemented for this class - use nextElement() API, or derive from a different AST iterator base class
-[TSTGroupBy didCreateGroup:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGroupBy.mm
_deferredGroupByChangeNotifications
-[TSTGroupBy willRemoveGroup:]
-[TSTGroupBy didRemoveGroup:]
-[TSTGroupBy didAddRowUID:toGroup:]
-[TSTGroupBy didRemoveRowUID:fromGroup:]
-[TSTGroupBy startOfGroupingChangesBatch]
-[TSTGroupBy endOfGroupingChangesBatch]
-[TSTGroupBy didChangeGroupByStructure]
v16@?0@"TSTGroupNode"8
-[TSTGroupBy encodeToArchive:archiver:backwardCompatOptions:]
Caller should already have tested we think we can fit in a single message.
Wasn't expecting this not set
-[TSTGroupBy updateWithDocumentRoot:]
-[TSTGroupBy changeForSettingGroupingColumnList:]
New grouping column list is nil
-[TSTGroupBy mapGroupUidsForChange:]
wrong groupByUid
-[TSTGroupBy _addAggregates:atLevel:]
-[TSTGroupBy _removeAggregates:]
-[TSTGroupBy runChange:withAggregates:]
Uh, we were expecting this to be us
-[TSTGroupBy usesPrePivotAggregateTypesOnly]
Should never see TSCEAggType_Indirect on a columnAggregate
-[TSTGroupBy setAggregateType:forColumnUID:atGroupLevel:]
aggType of (%d) is not a valid aggregate type for an entire column
-[TSTGroupBy findGroupNodeForValue:atLevel:createIfMissing:]
Was expecting to have created a groupNode for this groupValue: %@
-[TSTGroupBy beginDeferringRebuildFormulas]
overflow in beginDeferringRebuildFormulas
-[TSTGroupBy endDeferringRebuildFormulas]
endDeferringRebuildFormulas called without matching beginDeferringRebuildFormulas - avoided underflow
-[TSTGroupBy deferGroupByChangeNotifications]
overflow in deferGroupByChangeNotifications
-[TSTGroupBy resumeGroupByChangeNotifications]
resumeGroupByChangeNotifications called without matching deferGroupByChangeNotifications - avoided underflow
-[TSTGroupBy resetGroupings]
Can't resetGroupings with no calcEngine
-[TSTGroupBy insertRowUids:]
Column missing from table model when grouping
-[TSTGroupBy createAggregatorsIfMissingAndAssert:]
No TSTAggregator found for column %@
Couldn't create an aggreator for column: %@
-[TSTGroupBy isValidCategoryRef:]
%@: %@
<Relative Ancestor>
-[TSTGroupBy captureCategoryRefsFromIterator:atLevel:asSpanning:]_block_invoke
formula
-[TSTGroupBy captureCategoryLabelRefsForViewRegion:atLevel:asSpanning:forRows:]_block_invoke_2
No level for agg function labels!
-[TSTGroupBy prettyStringForCategoryRef:forHostCellRef:namingContext:]
-[TSTGroupBy rowUIDForLookupKey:]
Warning, rowUidLookupList is empty, we're not going to find anything.
blank
(error)
+[TSTGroupBy validateNumberOfGroupsForGroupingColumnList:sourceTableModel:sourceBodyTract:limit:groupNodeCount:]
Column missing from table model when validating
TSCEDependencyTracker::~TSCEDependencyTracker()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEDependencyTracker.mm
dirty cell batching must not be left on when a command finishes!
TSCEOwnerRegistrationCat
TSUError TSCEDependencyTracker::registerOwner(TSCEInternalFormulaOwnerID, __strong id<TSCEFormulaOwning>, TSCESubFormulaOwnerIndex)
registerOwner() doesn't accept class: %@ (not id<TSCEFormulaOwning>)
void TSCEDependencyTracker::resetAllExternalFormulasReferringToOwnerUIDs(const TSCEOwnerUIDVector &, __strong id<TSCEFormulaReplacing>)
Need upgradeMinion for resetAllExternalFormulasReferringToOwnerUIDs
void TSCEDependencyTracker::dgl_replaceCellWithFormula(TSCEInternalFormulaOwnerID, TSUCellCoord, TSCEReferenceSetWrapper *__strong, TSCEReplaceFormulaOptions)
Attempting to call dgl_replaceCellWithFormula with an invalid coord: %@
void TSCEDependencyTracker::dgl_replaceCellWithFormula(TSCEInternalFormulaOwnerID, TSUCellCoord, TSCEReferenceSetWrapper *__strong, TSCEReplaceFormulaOptions)_block_invoke_3
nonspanning range %{public}@ found in a spanning reference
v24@?0r^{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}8^B16
v24@?0r^{TSKUIDStruct=QQ}8^B16
v32@?0r^{TSKUIDStruct=QQ}8r^{TSKUIDStruct=QQ}16^B24
v24@?0@"TSCECategoryRef"8^B16
void TSCEDependencyTracker::dgl_replaceCellWithFormula(TSCEInternalFormulaOwnerID, TSUCellCoord, TSCEReferenceSetWrapper *__strong, TSCEReplaceFormulaOptions)_block_invoke_9
unimplemented reference type found: %d
failure adding a formula
void TSCEDependencyTracker::replaceCellWithFormula(const TSCEOwnerUID &, TSUCellCoord, TSCEReferenceSetWrapper *__strong, TSCEReplaceFormulaOptions)
Not expecting insane, or spanning coordinates here: (%lu,%lu)
void TSCEDependencyTracker::dgl_replaceRemoteDataKeysInterestedInForCell(const TSCECellRef &, TSCERemoteDataSpecifierSet *__strong)
Attempted to replace remote data key interest in a cell whose owner isn't registered.
v32@?0r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}8Q16^B24
void TSCEDependencyTracker::endSuppressingWillModifyCalls()
not suppressing willModify calls, so cannot end suppressing them
BOOL TSCEDependencyTracker::endBatchingGroupCellDirtying()
cannot end group cell dirtying batching if it is not already on.
void TSCEDependencyTracker::encodeToArchive(TSCE::DependencyTrackerArchive &, BOOL, BOOL, TSPArchiver *__strong)
failed to get an object to archive for a formula owner that needs registration. Registration failure at unarchive time is likely.
TSCEDependencyTracker::TSCEDependencyTracker(const TSCE::DependencyTrackerArchive &, TSPUnarchiver *__strong, TSCECalculationEngine *__strong)_block_invoke
Unarchiving formulaOwnerDependencies: Want to replace owner %@ (%lu) with %@ (%lu) - highly unexpected
v16@?0@"TSPObject<TSCECalculationEngineRegistration>"8
void TSCEDependencyTracker::upgradeToSubOwnerUIDForOwners(TSTOwnerUidMapper *__strong)
Not expecting tableUID to be changing
virtual TSCEASTElement *TSCEASTNodeFormulaStringIterator::binaryInfixOperatorNode(TSCEASTBinaryElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTNodeFormulaStringIterator.mm
virtual TSCEASTElement *TSCEASTNodeFormulaStringIterator::unaryOperatorNode(TSCEASTUnaryElement *, BOOL)
virtual TSCEASTElement *TSCEASTNodeFormulaStringIterator::colonNode(TSCEASTColonElement *)
%@%@%@%@%@%@
%@%@%@%@%@
%.17G
DATE(%li,%li,%li)
(DATE(%li,%li,%li)+TIMEVALUE(TIME(%li,%li,%li)))
DURATION(%@,%@,%@,%@,%@,%@)
%C%C
virtual TSCEASTElement *TSCEASTNodeFormulaStringIterator::uidReferenceNode(TSCEASTUidReferenceElement *)
Shouldn't see uid-form references when making Sage formula strings.
virtual TSCEASTElement *TSCEASTNodeFormulaStringIterator::viewTractRefNode(TSCEASTViewTractRefElement *)
Shouldn't see view cellRef references when making Sage formula strings.
NSString *TSCEASTNodeFormulaStringIterator::formulaString()
Unable to properly create a formula string. Possibly a bad ASTNodeArray?
virtual TSCEASTElement *TSCEASTNodeFormulaStringIterator::letBindNode(TSCEASTLetBindElement *)
Let nodes should have been removed prior to Sage export
virtual TSCEASTElement *TSCEASTNodeFormulaStringIterator::letVariableNode(TSCEASTLetVariableElement *)
Variable nodes should have been removed prior to Sage export
void TSCEASTNodeFormulaStringIterator::processOperatorNode(NSString *__strong)
void TSCEASTNodeFormulaStringIterator::processPostfixOperatorNode(NSString *__strong)
void TSCEASTNodeFormulaStringIterator::processPrefixOperatorNode(NSString *__strong)
void TSCEASTNodeFormulaStringIterator::processFunctionNode(uint32_t, TSCEFunctionSpec *__strong, NSString *__strong, NSString *__strong)
Have to either specify a function spec or an unknown function name.
%s error
unknown
domain
singularity
overflow
underflow
total loss of precision
partial loss of precision
TSTLookupKeyCoord::TSTLookupKeyCoord(TSCEUidLookupKey, TSCEUidLookupKey)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellUIDLookupList.mm
Can't support a column key larger than %lu
Can't support a row key larger than %lu
TSTCellUIDLookupList::TSTCellUIDLookupList(const TSTCellUIDLookupList &, TSTTableInfo *__strong, TSTPruneBehavior, BOOL (^__strong)(const TSTCellUID &, NSUInteger))
Oh in what case do we need to prune away base cells?
Allowing both summary cells and wildcards makes little sense
Allowing both label cells and wildcards makes little sense
fdtr
fdtri
Remote Data Store
Remote Data Store Update
-[TSCERemoteDataStore dealloc]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERemoteDataStore.mm
Failed to unregister store before dealloc
-[TSCERemoteDataStore registerWithCoordinator]_block_invoke
Store is already registered!
-[TSCERemoteDataStore unregisterWithCoordinator]_block_invoke
Store is already unregistered!
-[TSCERemoteDataStore valueForRemoteData:]
Cold specifiers must have dates!
-[TSCERemoteDataStore cachedQuoteForSymbol:]
We're about to capture the coordinator's queue lock. We should NOT have the write lock at this time.
B24@?0@"NSString"8@"NSDictionary"16
-[TSCERemoteDataStore remoteDataDidUpdateValues:quotes:]
Shouldn't get an empty update!
-[TSCERemoteDataStore p_tsceValueFromTsceCellValue:]
Attempted to create a TSCEvalue from an unsupported TSCECellValue of class: %@
v24@?0@"TSCERemoteDataSpecifier"8^B16
-[TSCERemoteDataStore updateWithRemoteDataMap:quotes:syncKey:]
Should never get a docserver update for an unshared file!
v24@?0@"NSString"8^B16
-[TSTCellBorder applyToCell:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellBorder.mm
currentCellBorder
-[TSTCellBorder objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:]
shouldn't remove the cell border from a cell
-[TSTStrokeLayerAbstractStack p_strokeLayerVector]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTStrokeLayerStack.mm
-[TSTStrokeLayerAbstractStack count]
-[TSTStrokeLayerAbstractStack enumerateStrokesAndCapsInRange:usingBlock:]_block_invoke
should never see portal strokes here
-[TSTStrokeLayerAbstractStack enumerateStrokesAndCapsInRange:usingBlock:]
-[TSTStrokeLayerStack insertClearedStrokeAtRange:]
You can't add non-default strokes to a DefaultsOnly TSTStrokeLayerStack.
-[TSTStrokeLayerStack insertDynamicStroke:strokeOrder:atRange:]
-[TSTStrokeLayerStack insertSpillStroke:atRange:]
You can't add non-default strokes to a Defaults Only TSTStrokeLayerStack.
Fatal Assertion failure: %{public}s %{public}s:%d You can't add non-default strokes to a DefaultsOnly TSTStrokeLayerStack.
-[TSTStrokeLayerStack replaceCustomStrokeLayerWith:]
-[TSTStrokeLayerMergedStack lockForWrite]
-[TSTStrokeExporter p_strokeExportCacheForColumnBefore:columnAfter:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTStrokeExporter.mm
looking for two visible columns around the gridline
-[TSTStrokeExporter p_strokeExportCacheForRowAbove:rowBelow:]
looking for two visible rows around the gridline
TSCESymbol TSCESymbolTable::addSymbol(__strong TSCEIdentifier)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCESymbolTable.mm
can't add a symbol if not in any scope
<TSCESymbolTable %p>: 
%@: %u
void TSCESymbolTable::endScope()
Calling endScope() without beginScope()
-[TSTHiddenStateExtent setupAfterUnarchive]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTHiddenStateExtent.mm
-[TSTHiddenStateExtent p_addHiddenIndex:viewIndex:forAction:]
Not allowing user-hidden as view only
Not allowing pivot-hidden for base indexes.
-[TSTHiddenStateExtent hideAtUid:forAction:]
Can't show/hide at a uuid without a TSTTableTranslator to translate to an index
-[TSTHiddenStateExtent hideAtUid:forIndex:forViewIndex:forAction:]
Pivot Hiding not allowed on base rows or columns.
-[TSTHiddenStateExtent showAtUid:forAction:]
-[TSTHiddenStateExtent p_summaryFilteredIndexes]
translator
-[TSTHiddenStateExtent p_summaryPivotHiddenIndexes]
-[TSTHiddenStateExtent hideAtViewIndex:forAction:]
Can't show/hide at an index without a TSTTableTranslator to translate to uuid
-[TSTHiddenStateExtent showAtViewIndex:forAction:]
-[TSTHiddenStateExtent hideAtBaseIndex:forAction:]
-[TSTHiddenStateExtent showAtBaseIndex:forAction:]
-[TSTHiddenStateExtent clearAllFiltered]
Expected counts to match.
-[TSTHiddenStateExtent hidingActionForViewIndex:]
-[TSTHiddenStateExtent hidingActionForBaseIndex:]
-[TSTHiddenStateExtent indexOfVisibleAfterIndex:]
Can't use this method without a TSTTableTranslator to provide tableSize
-[TSTHiddenStateExtent indexOfVisibleAfterAndIncludingIndex:]
-[TSTHiddenStateExtent p_registerAllFormulasReturningCoords:]
Expecting at most one filter rule on a pivotTable
Only support PivotSourceFiltered filter for pivotTable
-[TSTHiddenStateExtent p_calculateTopOrBottomThresholdWithCalcEngine:formulaCoord:isTop:keyScale:]
Unexpected key scale found: %d
-[TSTHiddenStateExtent p_createThresholdCellValue:locale:]
Unexpected threshold value type found: %d
-[TSTHiddenStateExtent p_calculateUniqueDistinctIndexWithCalcEngine:formulaCoord:tableModel:rule:]
uniqueKeyToRowIndexes
-[TSTHiddenStateExtent evaluateFormulaAt:withCalcEngine:recalcOptions:]
should have nil _rewrittenFilterSet
Unexpected predicate type found when calculating threshold: %d
Only grandTotal predicates are supported for view indexes, not predType %d
Only expect this on pivot tables, atm.
-[TSTHiddenStateExtent setFilterSet:]
filterset should be in geometric form
@"TSCEFormulaObject"16@?0@"TSCEFormulaObject"8
v24@?0@"TSTEphemeralFilter"8^B16
Fatal Assertion failure: %{public}s %{public}s:%d Corrupt cell memory. Crashing!
UInt16 TSTCellStorageSizePreBNC(TSTCellStoragePreBNC *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellStorage_Deprecated.mm
Corrupt cell memory. Crashing!
BOOL TSTCellStorageVersionCheckPreBNC(TSTCellStoragePreBNC *)
Can't parse cell storage header version %d as PreBNC!
void TSTV1CellStorageToCell(TSTV1CellStorage *, TSTCell_PreBNC *__strong)
wrong version of the storage used here
Failed to process all storage elements in TSTV1CellStorageToCell! Starting flags:%u Final flags:%u
void TSTV3CellStorageToCell(TSTV3CellStorage *, TSTCell_PreBNC *__strong)
Failed to process all storage elements in TSTV3CellStorageToCell! Starting flags:%u Final flags:%u Starting format flags:%u Final format flags:%u
void TSTCellStorageToCell_PreBNC(TSTCellStoragePreBNC *, TSTCell_PreBNC *__strong)
Failed to process all storage elements in TSTCellStorageToCell! Starting flags:%u Final flags:%u Starting format flags:%u Final format flags:%u
UInt16 p_OffsetForFormatInStoragePreBNC(TSTCellStoragePreBNC *, TSTCellStorageFormatFlagsPreBNC)
Can't get offset for unknown element 0x%02x!
Fatal Assertion failure: %{public}s %{public}s:%d Can't get offset for unknown element 0x%02x!
UInt16 p_OffsetForElementInStorage(TSTCellStoragePreBNC *, TSTCellStorageHeaderFlagsPreBNC)
void p_TSTCellToCellStoragePreBNC(TSTCell *__strong, TSTCellStoragePreBNC *, TSTNineKeyStructPreBNC *)
Failed to process all storage elements in TSTCellToCellStorage! Starting flags:%u Final flags:%u Starting format flags:%u Final format flags:%u
TSTMergeOwnerDetailedLogCat
-[TSTMergeOwner initWithTableModel:ownerUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTMergeOwner.mm
valid ownerUID is required
-[TSTMergeOwner mergeIndexesForRange:]
The tableModel must be set on the mergeOwner before this API can be used.
-[TSTMergeOwner isValidMergeRange:]
-[TSTMergeOwner insertBaseMergeRange:]
-[TSTMergeOwner removeBaseMergeRange:]
Unexpectedly not just removing one range
-[TSTMergeOwner performActionReturningInverse:]
Invalid merge action
-[TSTMergeOwner shrinkReturningInverseForBaseCellRegion:]
-[TSTMergeOwner p_growRangeFrom:toDesired:]
-[TSTMergeOwner p_growReturningInverseForAction:]
-[TSTMergeOwner rewriteMergesForRemovedRange:uids:isRows:]
-[TSTMergeOwner rewriteMergesForInsertedRange:uids:isRows:]
<%@: %p>
+[TSTCellSpec interactionTypeForShimControlFormatType:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellSpec.mm
Unconvertible format type.
+[TSTCellSpec shimControlFormatTypeForInteractionType:]
Unconvertible interaction type.
Stepper
Slider
Star Rating
Pop-Up Menu
Checkbox
TSTCellInteractionTypeValueEditing
TSTCellInteractionTypeFormulaEditing
TSTCellInteractionTypeStock
TSTCellInteractionTypeStepper
TSTCellInteractionTypeRating
TSTCellInteractionTypePopup
TSTCellInteractionTypeToggle
TSTCellInteractionTypeCategorySummary
-[TSTSortRuleReferenceTracker p_columnForTrackedReference:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTSortRuleReferenceTracker.mm
Ranges should be one column!
-[TSTSortRuleReferenceTracker updateForSortRules:]
Couldn't track reference!
-[TSTSortRuleReferenceTracker setOwnerUID:]
You should have called setBaseTableUID: instead (it sets both base and subOwner UIDs
void TSCEWholeOwnerDependencies::readFromArchive(const TSCE::WholeOwnerDependenciesArchive &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEWholeOwnerDependencies.mm
NULL whole owner dependencies
void TSCEWholeOwnerDependencies::unpackAfterUnarchive()_block_invoke
bool TSCEWholeOwnerDependencies::addOwnerReference(const TSCEInternalCellReference &)
TSTLayoutEngineDidChangeEmptyFilteredState
cell id to wp column $
dup $
temp wp column $
layout engine concurrent queue
table fonts and metric cache
<%@:%p "%@" range:%@ dynamic_mode:%@ >
TSTCellRange TSTLayoutEngineGetRangeForHint(TSTLayoutEngine *__strong, TSTLayoutHint *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTLayoutEngine.mm
layoutHint
-[TSTLayoutEngine numberOfRows]
Size invariants violated by dynamic add/remove
-[TSTLayoutEngine numberOfColumns]
B32@?0{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8^B24
d8@?0
B24@?0@8^B16
v32@?0@"TSTChangeDescriptor"8Q16^B24
v76@?0{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8d24{UIEdgeInsets=dddd}32B64^B68
-[TSTLayoutEngine p_validateFittingInfoWithCellRangeWorker:widthHeightCollection:containsMerges:validationBundle:]_block_invoke
this layout pass should be only merge cells
v40@?0@"TSWPCharacterStyle"8{_NSRange=QQ}16^B32
-[TSTLayoutEngine p_containsGradientThatFillsContainerInStyle:]
style must be character or paragraph.
@"TSTWidthHeightCollection"24@?0{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
@32@?0@"<TSTCellIteratorData>"8@"TSTWidthHeightCollection"16@24
-[TSTLayoutEngine measureWithLayoutState:]
stringContents
v24@?0@"TSTCellStateForLayout"8^B16
-[TSTLayoutEngine formattedDataParagraphStylePropertyMapForCell:atCellID:]
Trying create a text engine for a merged cell other than origin.
#REF!:#REF!
-[TSTLayoutHint copyForArchiving]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTLayoutHint.mm
copy
-[TSTLayoutHint overlapsWithSelectionPath:]
selectionPath
B16@?0@"TSDDrawableSelection"8
-[TSTLayoutHint overlapsWithSelectionPath:]_block_invoke_2
Invalid cell selection index %lu for %@
B16@?0@"TSTCellSelection"8
ID: %@ 
Range: %@ 
-[TSWPParagraphStyle(CellDiffAdditions) objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:optionalConcurrentStylesheet:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSWPParagraphStyle+CellDiffAdditions.m
Can't specify both a text style and a text style change at the same time.
Stylesheet should not be nil. Attempting repair.
No usable style or stylesheet to vary against!
v32@?0i8C12@16^B24
-[TSTTablePartitioner initWithInfo:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTablePartitioner.m
Incorrect info class in the table partitioner!
-[TSTTablePartitioner measureCellRangeForNextPartitionOfSize:previousHint:horizontally:]
Partitioner can't continue from an invalid range.
-[TSTTablePartitioner calculateCellRangeForNextPartition:nextPartitionRange:additionalHeightForCaption:availableSizeRemaining:previousHint:]
Partitioner measured an invalid range.
-[TSTTablePartitioner nextHintForSize:parentLayout:previousHint:horizontally:outFinished:]
previousHint must be nil, or of type TSTLayoutHint.
Hint is for the wrong table info.
-[TSTTablePartitioner p_didFinishPartitioningHint:horizontally:]
Horizontal partitioning went beyond the table bounds!
Vertical partitioning went beyond the table bounds!
-[TSTTablePartitioner partitioningPassForFirstPartitionSize:]
partitioningPassForFirstPartitionSize: Invalid partition size
(%@,%@)
chdtrc
chdtri
-[TSCEFormulaOwnerDependencies unpackAfterUnarchive]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulaOwnerDependencies.mm
_cellDependencies->dependencyTracker()
-[TSCEFormulaOwnerDependencies saveToArchiver:]
-[TSCEFormulaOwnerDependencies resetOwnerUIDForUpgrade:forBaseOwner:ownerKind:]
OwnerIndex must be set to use this method
Tables cannot use this method
Charts cannot use this method
Fatal Assertion failure: %{public}s %{public}s:%d Datalist segment range start out of bounds on set
-[TSTTableDataListSegment setKeyRange:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableDataListSegment.mm
Datalist segment range start out of bounds on set
Fatal Assertion failure: %{public}s %{public}s:%d Datalist segment range length out of bounds on set!
Datalist segment range length out of bounds on set!
Fatal Assertion failure: %{public}s %{public}s:%d Bad key during split enumeration!
-[TSTTableDataListSegment split]_block_invoke
Bad key during split enumeration!
Fatal Assertion failure: %{public}s %{public}s:%d New segment is empty during split!
-[TSTTableDataListSegment split]
New segment is empty during split!
Fatal Assertion failure: %{public}s %{public}s:%d Datalist segment changed during split!
Datalist segment changed during split!
Fatal Assertion failure: %{public}s %{public}s:%d Keys overlap during split!
Keys overlap during split!
Fatal Assertion failure: %{public}s %{public}s:%d Segment ranges are discontiguous!
Segment ranges are discontiguous!
Fatal Assertion failure: %{public}s %{public}s:%d Existing datalist segment range start out of bounds on split!
Existing datalist segment range start out of bounds on split!
Fatal Assertion failure: %{public}s %{public}s:%d Existing datalist segment range length out of bounds on split!
Existing datalist segment range length out of bounds on split!
Fatal Assertion failure: %{public}s %{public}s:%d New datalist segment range start out of bounds on split!
New datalist segment range start out of bounds on split!
Fatal Assertion failure: %{public}s %{public}s:%d New datalist segment range length out of bounds on split!
New datalist segment range length out of bounds on split!
Fatal Assertion failure: %{public}s %{public}s:%d Got an object with a bad key!
-[TSTTableDataListSegment objectAtIndexedSubscript:]
Got an object with a bad key!
Tables/DataList/Segment
v16@?0@"TSTTableDataObject"8
-[TSTTableDataListSegment saveToArchiver:]
Datalist segment range out of bounds on archive!
-[TSTTableDataListSegment loadObjectsFromDataListArchive:unarchiver:]
Need to set up a segment before doing an upgrade-type load of it!
-[TSTConcurrentCellIterator initWithTableInfo:tableModel:region:forcingRegion:clampingRect:flags:searchFlags:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConcurrentCellIterator.mm
XOR expectation on getting a tableInfo or tableModel.
-[TSTConcurrentCellIterator enumerateModelConcurrentlyUsingChunkBeginBlock:concurrentBlock:finalBlock:]
You must initialize the iterator with a TSTTableModel to use this enumeration method.
@24@?0{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8
-[TSTConcurrentCellIterator enumerateConcurrentlyUsingChunkBeginBlock:perDispatchThreadBlock:concurrentBlock:finalBlock:]
You may not initialize this iterator with a TSTTableModel to use this enumeration method.
v40@?0{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8@24Q32
-[TSTMergeAction verify]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTMergeAction.mm
%@ has %lu covering ranges and %lu formulas with %lu indexes
Invalid action
Insert action
Remove action
Shrink action
Grow action
-[TSTCellUIDIterator p_nextCellRefIdWithUIDIndexList:UIDs:index:remainDup:lastDiffPos:recentResults:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellUIDList.mm
Unexpected back reference value.
Unexpected ID reference value.
TSCEValue::TSCEValue(const TSCENumberValue &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEValue.mm
nil TSCENumberValue
TSCEValue::TSCEValue(const TSCEStringValue &)
nil TSCEStringValue
TSCEValue::TSCEValue(const TSCEDateValue &)
nil TSCEDateValue
TSCEValue::TSCEValue(const TSCEGrid &)
nil TSCEGrid
TSCEValue::TSCEValue(const TSCEReferenceValue &)
nil TSCEReferenceValue
TSCEValue::TSCEValue(const TSCEErrorValue &)
nil TSCEErrorValue
TSCEValue::TSCEValue(const TSCEThunkValue &)
nil TSCEThunkValue
TSCEValue::TSCEValue(const TSCEValueGridValue &)
nil TSCEValueGridValue
TSCEArgumentType TSCEValue::nativeType() const
Undefined type. Returning nonsensical value.
TSCEArgumentType TSCEValue::deepType(TSCEEvaluationContext *) const
TSCENumberValue TSCEValue::number(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
NSDate *TSCEValue::date(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
NSString *TSCEValue::string(TSCEFunctionSpec *__strong, int, TSULocale *__strong) const
TSCERichTextStorage TSCEValue::richTextStorage(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
NSString *TSCEValue::rawString(TSCEFunctionSpec *__strong, int, TSULocale *__strong) const
TSCERichTextStorage TSCEValue::rawRichTextStorage(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
BOOL TSCEValue::boolean(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
TSCEGrid TSCEValue::formattedGrid(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
TSCEReferenceValue TSCEValue::reference(TSCEFunctionSpec *__strong, int, TSCEEvaluationContext *) const
TSCEError *TSCEValue::error() const
TSCECategoryRef *TSCEValue::categoryRef() const
This TSCEValue was not of type TSCEValueTypeCategoryRef, its type %d
TSCEFormat TSCEValue::format() const
BOOL TSCEValue::isNativelyEqual(const TSCEValue &, TSCEEvaluationContext *) const
NSString *TSCEValue::bakedString(TSULocale *__strong) const
bool TSCEValue::isNil() const
TSCEASTNodeArray *TSCEValue::newCorrespondingAST(TSCEEvaluationContext &, TSCEFunctionSpec *__strong, int, bool) const
TSCEValue TSCEValue::valueBySettingFormat(const TSCEFormat &)
const TSCEASTNodeArray *TSCEValue::unwrapThunk() const
can't call unwrapThunk() on a non-thunk!
-[TSCEBooleanCellValue compareToCellValue:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEBooleanCellValue.mm
-[TSCERemoteDataSpecifier initWithFunctionIndex:symbol:attribute:year:month:day:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERemoteDataSpecifier.mm
How does a hot specifier have a date?
How does a cold specifier not have a date?
-[TSCERemoteDataSpecifier encodeToArchive:]
 [%04zd/%02zd/%02zd]
<%@ %@ %@%@>
-[TSTTableTileGroup init]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableTileGroup.mm
-[TSTTableTileGroup _tileForLazyReference:]
Fatal Assertion failure: %{public}s %{public}s:%d Failed to load a lazy table tile in TSTTableTileGroup: %@ with error: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
Failed to load a lazy table tile in TSTTableTileGroup: %@ with error: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
Fatal Assertion failure: %{public}s %{public}s:%d Tile ID too low for this group!
NSUInteger _indexForTileID(TSTTableTileID, TSTTableTileID)
Tile ID too low for this group!
Fatal Assertion failure: %{public}s %{public}s:%d Tile ID too high for this group!
Tile ID too high for this group!
dur_
num_
-[TSCENumberCellValue compareToCellValue:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCENumberCellValue.mm
-[TSCENumberCellValue encodeToArchive:]
Expected a currency code for unit %d, locale:%@
v32@?0Q8@"NSMutableSet"16^B24
year
month
attribute
B24@?0@"TSCERemoteDataSpecifier"8^B16
(empty) 
<%tu specifiers: %tu hot, %tu cold>
-[TSTMergeRegionMap saveToArchiver:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTMergeRegionMap.mm
this should never be called!
%@, %p: for PivotTable: %@
-[TSTPencilAnnotationOwner addAnnotation:withFormula:atIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPencilAnnotationOwner.mm
Adding a formula at an index that already has an annotation
-[TSTPencilAnnotationOwner addAnnotation:withFormulaObject:atIndex:]
-[TSTPencilAnnotationOwner removeAnnotation:]
Annotations and formulas out of sync!
v32@?0@"TSTPencilAnnotation"8Q16^B24
Fatal Assertion failure: %{public}s %{public}s:%d Attempting to remove annotation at bad index %tu!
-[TSTPencilAnnotationOwner removeAnnotationAtIndex:]
Attempting to remove annotation at bad index %tu!
-[TSTPencilAnnotationOwner cellRangeForAnnotation:]
Unexpected merge range!
-[TSTPencilAnnotationOwner enumerateAnnotationsWithBlock:]
-[TSTPencilAnnotationOwner enumerateAnnotationsWithBlock:]_block_invoke
Unexpected table info on this annotation.
-[TSTPencilAnnotationOwner _enumerateAnnotationsAndFormulasWithIndexes:block:]_block_invoke
-[TSTPencilAnnotationOwner _annotationsForIndexes:]_block_invoke
annotation
-[TSTPencilAnnotationOwner _indexesForRange:startingOnly:]
self.tableModel
self.calculationEngine
-[TSTPencilAnnotationOwner _indexesForRows:]
-[TSTPencilAnnotationOwner _indexesForRows:]_block_invoke
How do we have a zero-row range here?
-[TSTPencilAnnotationOwner _enumerateIndexesIntersectingRegion:block:]
v48@?0@"TSTCellRegion"8r^{TSUCellCoord=ISBB}16Q24{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32
-[TSTPencilAnnotationOwner initWithArchive:unarchiver:forTableModel:]
Mismatched number of annotations and formulas.
TSKCellPencilAnnotations
gdtr
TSTPivotGroupingColumnOptionsMap %p
uid:%@, sortByGrTotal:%@, sortDesc:%@, repeatLbls:%@, hideTtls:%@, sortAggRuleUid:%@
v32@?0{TSUCellCoord=ISBB}8d16^B24
v28@?0S8d12^B20
-[TSTWidthHeightCache p_insertColumns:atColumn:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTWidthHeightCache.mm
attempt to insert column range beyond column width cache max columns; truncating
-[TSTWidthHeightCache p_insertRows:atRow:]
attempt to insert row range beyond row height cache max rows; truncating
-[TSTWidthHeightCache p_moveRowsFrom:toRow:]
destination cannot be within the source range.
src range for move exceeds max
dest range for move exceeds max
-[TSTWidthHeightCache p_moveColumnsFrom:toColumn:]
_columnModelWidths is not sized correctly before move
-[TSTWidthHeightCache resetFittingRowHeightsStartingWith:upToRow:]
startRow should be before endRow
-[TSTWidthHeightCache validateRowsNeedingFittingInfo:validationRegion:layoutEngine:]
rowsNeedingFittingInfo
-[TSCERemoteDataSourceFetcher init]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERemoteDataSourceFetcher.mm
Remote Data Fetcher: %@
v20@?0q8I16
-[TSCERemoteDataSourceFetcher dataKind]
-[TSCERemoteDataSourceFetcher identifier]
-[TSCERemoteDataSourceFetcher canFetchKey:]
-[TSCERemoteDataSourceFetcher sendRequestForKeys:]
-[TSCERemoteDataSourceFetcher fetchQuotesWithTickers:completion:]
-[TSCERemoteDataSourceFetcher autoCompleteQuotesWithInput:completion:]
com.apple.Numbers.TSCE.PrecedentLoading
-[TSCEFormulasToSet commonInit]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulasToSet.mm
_precedentLoadingQueue
_precedentLoadingGroup
com.apple.Numbers.TSCE.BackgroundFormulas
_backgroundProcessingQueue
-[TSCEFormulasToSet initWithCalcEngine:forMinion:options:]
A minion is required to use TSCEFormulasToSet object
-[TSCEFormulasToSet dealloc]
Deallocing %@ with %lu formulasToReset
Deallocing %@ with %lu formulasToRemove
Deallocing %@ with %lu formulasToReplace
-[TSCEFormulasToSet replaceFormula:atCellCoord:inOwner:replaceOptions:]_block_invoke
Can only place formulas at valid, non-spanning cell coords, not: %@
precedents
-[TSCEFormulasToSet _flushFormulasToReplaceWithDepTracker:startTime:timeout:]_block_invoke
-[TSCEFormulasToSet flushAllFormulaChanges]
We should be empty now, always
-[TSTTableSortOrder initWithRules:type:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableSortOrder.mm
sortRules
-[TSTTableSortOrder sortOrderByReplacingRuleAtIndex:withRule:]
Group Sort Order: trying to replace an object at an index that doesn't exist
B24@?0@"TSTTableSortRule"8@"NSDictionary"16
TSCEValue TSCEFunction___CHART::evaluateWithContext(TSCEEvaluationContext &)_block_invoke_2
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEChartFunctions.mm
apparentTractRefForTractRef let us exceeed tableSize?? (%d,%d)
-[TSTConcurrentMutableCellUIDSet reapAccumulatedCellRegionWithTable:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConcurrentMutableCellUIDSet.mm
Search not found: %{public}@
void TSCERecalcPhaseState::addNewLeaf(const TSCEInternalCellReference &, TSCEDependencyTracker *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECalcEngine.mm
Invalid ownerId for solving, leaf: %@ for formulaOwner %@ %@
(UNREGISTERED)
com.apple.Numbers.TSCE.RecalcLowPriority
com.apple.Numbers.TSCE.RecalcHighPriority
void TSCECalcEngine::initializeDispatchObjects()
_recalcLowPriorityQueue
_recalcHighPriorityQueue
_recalcDispatchGroup
_recalcLoopGroup
TSCEDebugEnableLocalVariables
com.apple.iWork.CalculationEngine
Performance
com.apple.Numbers.TSCE.writeExclusionQueue
Functions used:
void TSCECalcEngine::assertNonCalcEngineException(NSString *__strong, NSException *__strong, TSCEFormulaObject *__strong) const
Non-calcEngine NSException passed up to %{public}@: %{public}@ with formula: %{public}@
Non-calcEngine type exception passed up to %{public}@ for formula %{public}@.
Non-calcEngine NSException passed up to %{public}@: %{public}@
Non-calcEngine type exception passed up to %{public}@.
void TSCECalcEngine::dispatchOnePhase(TSCERecalcPhaseState *)
phase
dispatchOnePhase
void TSCECalcEngine::dispatchOnePhase(TSCERecalcPhaseState *)_block_invoke
Unexpected calc-engine exception passed up to enqueueTaskForCell: %{public}@
recalcPhaseHoldingReadLock
void TSCECalcEngine::recalcPhaseHoldingReadLock(TSCERecalcPhaseState *)
Unexpected calc-engine exception passed up to recalcPhaseHoldingReadLock: %{public}@ formulaOwner is: %{public}@
void TSCECalcEngine::startRecalculationTask()
cannot start recalculation thread because it is in the wrong state
void TSCECalcEngine::startRecalculationTask()_block_invoke
no access controller!
startRecalculationTask
Unexpected calc-engine exception passed up to startRecalculationTask loop: %{public}@
TSUError TSCECalcEngine::registerOwnerWithOwnerUID(const TSCEOwnerUID &, __strong id<TSCEFormulaOwning>, __strong id<TSCEReferenceResolving>, const TSCEOwnerUID &, TSCESubFormulaOwnerIndex)
Resolver doesn't conform to the TSCEReferenceResolving protocol.
%@ doesn't implement: -multiEvaluateFormulasAt:withCalcEngine:recalcOptions:
TSCETransaction *TSCECalcEngine::openTransaction()
There is already an open transaction on this calc-engine: %@
_currentTransaction
void TSCECalcEngine::closeTransaction(TSCETransaction *__strong)
Invalid transaction object passed in: %@
void TSCECalcEngine::replaceFormula(__strong id<TSCEFormulaReturning>, const TSUCellCoord &, const TSCEOwnerUID &, TSCEReplaceFormulaOptions)
void TSCECalcEngine::setRewritingMinion(TSCERewritingMinion *__strong)
Warning: Overwriting a pre-existing rewritingMinion with a new one
NSArray *TSCECalcEngine::rewriteSpecStack()
Need to add locking to run this on multiple threads
void TSCECalcEngine::popRewriteSpec(TSCEFormulaRewriteSpec *__strong)
Popping wrong rewriteSpec off rewriteSpecStack
Have no rewriteSpecs to pop
void TSCECalcEngine::blockUntilRecalcIsCompleteWithTimeout(NSTimeInterval)
Can't block on the calc-engine before it is started up.
void TSCECalcEngine::blockUntilRecalcTaskExitedWithTimeout(NSTimeInterval)
Can't block without an access controller
void TSCECalcEngine::resumeRecalculation()
Can't resume calculation on a closing document!
TSCEValue TSCECalcEngine::evaluateSynchedWithCalcEngineWithFormula(TSCEFormulaObject *__strong, TSCEEvaluationContext &)
TSTHeaderNameMgr *TSCECalcEngine::headerNameMgr() const
_headerNameMgr
TSCEReduceCalcEngineMsgSize
v16@?0@"TSCENamedReferenceManager"8
v16@?0@"TSTHeaderNameMgr"8
v16@?0@"TSCERemoteDataStore"8
v16@?0@"TSCEReferencesToDirty"8
TSCENumberValue::TSCENumberValue(const TSUDecimal &, TSCEBaseUnit, BOOL)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCENumberValue.mm
can't make a unitless zero with a number other than zero!
can't make a unitless zero with a unit!
virtual NSString *TSCENumberValue::string(TSCEFunctionSpec *__strong, int, TSULocale *__strong) const
No locale, falling back to current locale.
NSComparisonResult TSCENumberValue::compare(const TSCENumberValue &) const
Support for non-duration, non-currency unit comparisons is not implemented.
TSCENumberValue TSCENumberValue::percent() const
Should never call percent on a unit value!
-[TSTCellStateForLayout hasContent]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellStateForLayout.m
TSUCastAsClass(TSWPColumn, [self cellContents])
v16@?0@"TSTExpressionNode"8
<%@ %p>: isActive:%@, expressionNode:%@
B16@?0r^{TSKUIDStruct=QQ}8
Fatal Assertion failure: %{public}s %{public}s:%d Not implemented.
-[TSTPivotRowColumnOrder targetGroupFromIndex:minSourceLevel:templateUID:forDimension:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPivotRowColumnOrder.mm
Not implemented.
Fatal Assertion failure: %{public}s %{public}s:%d Not implemented for columns.
-[TSTPivotRowColumnOrder minimumCategoryLevelInRange:forDimension:]
Not implemented for columns.
<%@ %p>: completionText '%@', prefixRange %@
-[TSTStrokeLayer strokeLayerAtIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTStrokeLayer.mm
should never call this with index > 0
-[TSTMutableStrokeLayer applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:]
this interface can't be used on complex stroke layers
bodyIndexes
-[TSCEGetPivotDataBundle enumerateDataKeyValuePairsUsingBlock:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEGetPivotDataBundle.mm
Size mismatch in data/value pairs
TSCETaggedDecimal TSCETaggedDecimalList::findPivot()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCETaggedDecimalList.mm
We shouldn't be finding the pivot of a 0 length array
size_t TSCETaggedDecimalList::partitionTaggedDecimals(const TSCETaggedDecimal &)
_size == 0?
+[TSCETaggedDecimalListObject createFromVector:functionSpec:argumentIndex:evaluationContext:ignoreError:ignoreDuplicates:]
Have to set the type of vector appropriately. currentType = %d
-[TSTConcurrentStylesheet variationOfStyle:propertyMap:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConcurrentStylesheet.mm
stylesheet used should be same as the one owning the style
All at Once
By Row
By Column
By Cell
By Row Content
By Column Content
By Cell Content
By Row Reverse
By Row Content Reverse
By Column Reverse
By Column Content Reverse
By Cell Reverse
By Cell Content Reverse
+[TSTAnimation textureDeliveryStyleFromDeliveryString:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTAnimation.mm
bad delivery string to delivery style mapping
void TSTHeaderPerTable::addHeaderUid(const TSKUIDStruct &, BOOL)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTHeaderNameMgr.mm
_headerRowUids
-[TSTHeaderNameMgrTile saveToArchiver:]
-[TSTHeaderNameSubset headerCellsMatchingPrefix:]
Warning: asking for prefix matching, but this search result didn't specify prefixes when it was created
%@ for '%@'
-[TSTHeaderNameMgr findTileForString:findClosest:foundAtOffset:]
midTile
-[TSTHeaderNameMgr handleFullTile:]
Could NOT split tile of %lu size for some reason
-[TSTHeaderNameMgr spanningRangeForHeaderCell:]
tracked header reference is not in a header?  (%@ vs body %@)
@"TSTIndexingChunk"24@?0{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
@32@?0@"<TSTCellIteratorData>"8@"TSTIndexingChunk"16@24
-[TSTCellDiffMap initWithContext:cellDiffArray:cellUIDList:uidBased:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellDiffMap.mm
Nil cellDiffArray
Nil cellUIDList
unexpected diff/uidlist ratio
-[TSTCellDiffMap addCellDiff:andCellUID:avoidCopy:]
cannot add cellUIDs in cellID mode
can't add cells to a one-to-many mapping
-[TSTCellDiffMap addCellDiff:andCellID:avoidCopy:]
cannot add cellIDs in UID mode
-[TSTCellDiffMap addCellDiffMap:]
both maps should match isUIDBased state
-[TSTCellDiffMap addCellDiffs:atCellUIDs:]
map should be UIDBased
cellDiffs and cellUIDList should match in length
-[TSTCellDiffMap appendCellDiffMap:]
Trying to append a cellID cellDiffMap to a uidBased diff map. Aborting.
v64@?0@"TSTCellDiff"8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16Q48^B56
Trying to append a uidBased cellDiffMap to a cellID diff map. Aborting.
v40@?0@"TSTCellDiff"8{TSUCellCoord=ISBB}16Q24^B32
B24@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8Q16
B24@?0{TSKUIDStruct=QQ}8
-[TSTCellDiffMap enumerateElementsUsingBlock:]
cannot enumerate cellUIDs in cellID mode
-[TSTCellDiffMap enumerateCellIDElementsUsingBlock:]
cannot enumerate cellIDs in UID mode
v16@?0@"TSTCellDiffArray"8
<%@: %p>:
-[TSTTableViewSortRule baseIndex]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableSortRule.mm
Base index is not valid on TSTTableViewSortRule.
-[TSTTableViewSortRule encodeToArchive:]
TSTTableViewColumnSortRule should never be archived
-[TSTTableViewSortRule initFromArchive:]
TSTTableViewColumnSortRule should never be unarchived
-[TSTGroupValueTuple updateWithDocumentRoot:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGroupValueTuple.mm
+[TSTGroupValueTuple groupValueUidForTuple:appendingTuple:]
upperTuple
lowerTuple
-[TSTGroupValueTuple groupValueTupleByReplacingValue:atLevel:]
Don't try to replace value for the root
%{public}@: level %d is beyond this tuple's size
-[TSTGroupValueTuple groupValueTupleByRemovingValueAtLevel:]
Removing from level %d of a %d-level tuple
%@ [
%@'%@'
[%@] = 
TSTiOSCheckboxChecked6
TSTiOSCheckboxChecked12
TSTiOSCheckboxChecked18
TSTiOSCheckboxChecked24
TSTiOSCheckboxUnchecked6
TSTiOSCheckboxUnchecked12
TSTiOSCheckboxUnchecked18
TSTiOSCheckboxUnchecked24
+[TSTCheckboxRenderer frameWithViewScale:contentFrame:checked:outCheckboxImage:outCheckboxSize:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCheckboxRenderer.m
No checkbox image for rendering!
v28@?0I8d12^B20
-[TSTColumnRowUIDMapper disconnect]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTColumnRowUIDMapper.mm
No longer have a mapper - disconnected multiple times?
Mappers version counter was already off %lu vs %lu
Should have preserved the versionCounter
-[TSTCategoryStoreIterator initWithInfo:region:flags:searchMask:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCategoryStoreIterator.mm
_info.baseTableModel.dataStore
_info.summaryModel.dataStore
searchMask remain 0x%x, should be consumed by this point
-[TSTCategoryStoreIterator dealloc]
iteration should be terminated
-[TSTCategoryStoreIterator updateCellData:]
_baseTile
_baseRow
incomplete map.
cellRef
this is odd case, iterator found cell at this cellID, but then no cellRef
-[TSTCategoryStoreIterator updateFormulaForCellData:]
this is an odd case, iterator found cell at this cellID, but then no cellRef
-[TSTCategoryStoreIterator getNext]
invalid columnUID
should now have a row that intersects the region
couldn't find offset, that's not good.
should now have a valid cellID at this point
-[TSCEFormulaOwnerWrapper initWithFormulaOwnerUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulaTranslationFlags.mm
Requires a valid ownerUID
-[TSWPStorage(TablesAdditions) hyperlinkCellID]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSWPStorage_TablesAdditions.mm
cell attribute array should not be empty
-[TSTCategoryAggregateFormulaOwner tableInfo]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCategoryAggregateFormulaOwner.mm
Someone is asking for a tableInfo, but we are not registered with the calcEngine yet
Table %@ is not registered with the calcEngine yet
-[TSTCategoryAggregateFormulaOwner setTableInfo:]
don't allow overwriting table info pointer, should go from nil -> info
Wrong class passed to setTableInfo: %@
-[TSTCategoryAggregateFormulaOwner evaluateFormulaAt:withCalcEngine:recalcOptions:]
Table has no calc engine. Aborting recalculation.
-[TSTRichTextPayload initWithContext:storage:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTRichTextPayload.mm
v24@?0r^{TSCEColumnReference=ISC}8^B16
v24@?0r^{TSCEColumnRangeReference=IISC}8^B16
void TSCESpanningDependencies::readFromArchive(const TSCE::SpanningDependenciesArchive &)_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCESpanningDependencies.mm
NULL spanning dependencies for table: %{public}@
v28@?0{TSCEColumnRangeContextPair=IC}8{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16
void TSCESpanningDependencies::unpackAfterUnarchive()_block_invoke
v32@?0r^{TSCEColumnRangeReference=IISC}8r^{TSUCellCoord=ISBB}16^B24
v32@?0r^{TSCEColumnReference=ISC}8r^{TSUCellCoord=ISBB}16^B24
void TSCESpanningDependencies::dirtyAllFormulasReferencingRange(TSCERangeCoordinate)
invalid input range
dirty precedents count consistency error - cell: %@ in table: %@
v20@?0{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}8
TSCEFormulaRangeContext formulaRangeContextForArchivedContext(const TSCE::SpanningDependenciesExpandedArchive::RangeContext &)
unknown range dependency context found in archive! Archive is corrupt.
virtual TSCEASTElement *TSCEASTConvertToUidRefsRewriter::anyReferenceNode(TSCEASTRelativeCoordRefElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTConvertToUidRefsRewriter.mm
Unhandled reference type
virtual TSCEASTElement *TSCEASTConvertToUidRefsRewriter::colonTractNode(TSCEASTColonTractElement *)
-[TSTSummaryCellVendor setAggregateType:forColumnUID:atGroupLevel:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTSummaryCellVendor.mm
Not implemented for pivot tables.
-[TSTSummaryCellVendor cellSpecForAggregateType:forColumnUID:atGroupLevel:]
-[TSTSummaryCellVendor setCell:atCellUID:]
Setting vendor cell for a pivot table
Setting vendor cell with an invalid cellUID
Invalid aggregate type in summary cell vendor - BodyRows
Invalid aggregate type in summary cell vendor - Label
-[TSTSummaryCellVendor getCell:atCellUID:]
Getting vendor cell for a pivot table
cell should never be nil
Getting vendor cell with an invalid cellUID
-[TSTSummaryCellVendor removeCellsInColumnUid:]
-[TSTSummaryCellVendor cellMapForWildcardCells]
-[TSTSummaryCellVendor runChange:withSummaryCellMap:migrationHelper:]
kTSCERecalcLoopGroupEmpty%u
+[TSTTableFilterRule getPredArgDataFromCell:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableFilterRule.mm
Expected a cell without an error to make a quick filter rule.
TSTTableFilterRule %p: %@
-[TSTTableFilterRule matchesCell:]
Unexpected predicate argument type!
-[TSTTableFilterSet p_downgradedFilterRuleForListItem:fromPredicate:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableFilterSet.mm
Don't have a TSTFormulaPredicateTypeDateIsNotTheDate predicate type, but need one.
Invalid Predicate Arg Data for list item
-[TSTTableFilterSet downgradeFilterSetForBackwardCompatWithLocale:]
newRule
Unexpected predicate type during downgrade!
-[TSTTableFilterSet p_thresholdComparisonMatchesFilter:withPredicateType:]
Unexpected predicate type found when calculating threshold
-[TSTTableFilterSet rowIsShown:withHiddenStateExtent:withCalcEngine:]
Unexpected threshold value type found
-[TSTTableFilterSet ruleInFilter:atIndex:]
filter index invalid
rule index invalid
-[TSTTableFilterSet filterAtIndex:inTable:]
-[TSTTableFilterSet removeRulesWithAbsoluteIndices:]
invalid rule index passed in
-[TSTTableFilterSet removeRulesWithIndices:inFilter:]
filter index is out of bounds
rule indices are out of bounds
-[TSTTableFilterSet p_addRules:atRuleIndices:inFilter:isNew:]
no rules given
-[TSTTableFilterSet addRules:inFilter:]
-[TSTTableFilterSet replaceRule:atRuleIndex:inFilter:]
-[TSTTableFilterSet replaceRuleAtAbsoluteIndex:withRule:]
Insufficient rules to replaceRuleAtAbsoluteIndex: %lu
-[TSTTableFilterSet enumerateRulesInFilterIndex:usingBlock:]
-[TSTTableFilterSet ruleIndexInFilter:matchingCell:]
-[TSTTableFilterSet numberOfRulesInFilter:]
Fatal Assertion failure: %{public}s %{public}s:%d Modern filter sets shouldn't have pre-pivot rules!
-[TSTTableFilterSet loadFromArchive:unarchiver:]
Modern filter sets shouldn't have pre-pivot rules!
+[TSCECategoryRef relativeAncestorGroupUid:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECategoryRef.mm
levelsUp of %d is too large.
-[TSTFormulaPredicate initWithPredicateType:arg1:arg2:qualifier1:qualifier2:argumentCellRef:hostCell:forConditionalStyle:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTFormulaPredicate.mm
Conditional styles are not allowed to use anything other than an arg0 of (+0,+0) relative coordinate
-[TSTFormulaPredicate p_creatorForPeriodBoundaryWithScale:direction:offset:argIndex:earlierBound:isCalPers:]
Not a valid date scale
This is expected to be unreachable.
-[TSTFormulaPredicate recreateFormula]
Should already have _predArg0 defined
-[TSTFormulaPredicate p_argTypeForPredArg:argNum:calculationEngine:hostCell:]
A categoryRef as arg 0, I don't think so
A viewTractRef as arg 0, I don't think so
-[TSTFormulaPredicate evaluateAtCellID:onOwnerUID:calcEngine:]
Need both of these set
-[TSTFormulaPredicate setArgumentAt:withPredArg:]
Only a limited set of types are allowed for predArg0, and not %d
%@: Not allowed for argument at position %d
-[TSTFormulaPredicate p_populateMembersFromFormula]
We don't have valid offsets at the moment
-[TSTFormulaPredicate copyByRewritingWithSpec:inOwner:inCellCoordinate:]
-[TSTFormulaPredicate upgradeTopAndBottom]
_predArg0
-[TSTFormulaPredicate encodeToPrePivotArchive:archiver:encodingForSOS:]
We need to be backward compatible to use this archiving method
-[TSTFormulaPredicate initFromArchive:]
Have to have archived the _predArg0 argument for upgraded archive format
-[TSTArchivedStrokeSelection setSelection:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTArchivedStrokeSelection.mm
Wrong type of class %@ (expected TSTStrokeSelection)
TSTTableBadgeImageCache
TSUImage *TSTTableBadgeCachedImageForName(NSString *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableBadge.m
TSTTableBadge failed to load image %@
TSTErrorMessageIcon
+[NSCharacterSet(TSCEAdditions) tsce_singleQuoteCharacterSet]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/NSCharacterSetAdditions.m
(){}+-*/^%:,!&=><$"'#;|
%C%C%C
%C%C%C%C%C%C%C
%C%C
%C%C%C%C%C%C%C%C%C%C%C%C%C%C%C%C%C%C%C%C%C%C
+[NSCharacterSet(TSCEAdditions) tsce_characterSetRequiringSingleQuotes]_block_invoke
.%C%C
+[NSCharacterSet(TSCEAdditions) tsce_periodCharacterSet]_block_invoke
+[NSCharacterSet(TSCEAdditions) tsce_internationalWhitespaceCharacterSet]_block_invoke
+[NSCharacterSet(TSCEAdditions) tsce_internationalWhitespaceAndNewlineCharacterSet]_block_invoke
+[NSCharacterSet(TSCEAdditions) tsce_internationalColonCharacterSet]_block_invoke
+[NSCharacterSet(TSCEAdditions) tsce_dollarSignCharacterSet]_block_invoke
,%C%C;%C%C%C
+[NSCharacterSet(TSCEAdditions) tsce_listDelimiterCharacterSet]_block_invoke
-[TSTCellRegion regionByTrimmingAroundRowIndices:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellRegion.mm
-[TSTCellRegion regionByTrimmingAroundColumnIndices:]_block_invoke
-[TSTCellRegion prunedCellRegionAgainstTable:behavior:usingBlock:]
-[TSTCellRegion containsCellRange:]_block_invoke
areaRemaining should be greater than the intersection area
-[TSTCellRegion p_copyFromRegion:]
-[TSTCellRegion p_insertRangeIntoRegion:]
Added range:%{public}@ should never overlap previous range:%{public}@ in region:%{public}@.
<%@ %p boundingbox={ %@ }
 cellRanges={empty}>
 cellRanges={
  { %@ }
-[TSCEUndoTractList addToIncludedUidsTractColumnUids:rowUids:isRangeRef:preserveRectangularRange:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEUndoTractList.mm
Combining a spanning and non-spanning TSKUIDStructVector vector
<%@> sticky:%d Tracts: 
  %@
-[TSCEUndoTractList(FullTuple) initAsFullTupleForColumnHeaderUid:rowHeaderUid:aggregateRuleUid:flatteningDimension:]
Not a valid TSTTableDimension value: %d
-[TSCEStock init]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEStock.mm
-[TSCEStock initFromArchive:]
-[TSCEStock encodeToArchive:]
_symbol
NULL
-[TSCEStock valueForAttribute:]
Can't fetch an unknown attribute!
-[TSCEStock valueForAttribute:forLocale:]
en_US
MMMdyyyyhhmmzzz
%1.2F
%1.0F
Number suffix - trillions
Number suffix - billions
Number suffix - millions
Number suffix - thousands
-[TSCEStock p_populateAttributesFromArray:]
self.symbol
en_US_POSIX
yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'
void TSCECellRecordTile::updateIndexesForCellRecord(const TSCECellRecord &, TSCECellDependencies *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECellRecordTile.mm
cellDependencies
BOOL TSCECellRecordTile::replaceCellRecord(TSCECellRecord &, TSCECellDependencies *)
cellRecord can't handle multiple self references
BOOL TSCECellRecordTile::replaceCellRecord(TSCECellRecord &, TSCECellDependencies *)_block_invoke_2
edge pointing to nonexistant table found: %lu
BOOL TSCECellRecordTile::deleteCellRecord(TSCECellRecord *, TSCECellDependencies *)
invalid cell record delete attempt
failed to realloc cell record storage
void TSCECellRecordTile::sortCellRecords()
no duplicate cell records permitted
std::vector<TSCECellRecord *> TSCECellRecordTile::sortedCellRecordVector() const
void TSCECellRecordTile::appendExpandedEdgeToArchive(TSCE::ExpandedEdgesArchive *, const TSCEInternalCellReference &) const
_wrapper
-[TSCECellRecordTileWrapper unpackAfterUnarchiveForCellDependencies:]
-[TSTTableTranslator init]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableTranslator.mm
-[TSTTableTranslator tableAreaForCellID:]
expecting this method to be overridden
-[TSTTableTranslator cellValueTypeAtCellID:]
-[TSTTableTranslator defaultCellStyleForCellID:useSoftDefault:outSource:]
-[TSTTableTranslator defaultTextStyleForCellID:useSoftDefault:outSource:]
-[TSTTableTranslator cellStyleAtCellID:isDefault:]
-[TSTTableTranslator textStyleAtCellID:isDefault:]
-[TSTTableTranslator defaultStylesForCellID:useSoftDefault:outCellStyle:outTextStyle:]
-[TSTTableTranslator conditionalStyleSetAtCellID:]
-[TSTTableTranslator stringAtCellID:optionalCell:]
-[TSTTableTranslator getCell:atCellID:suppressCellBorder:]
-[TSTTableTranslator hasFormulaAtCellID:]
-[TSTTableTranslator formulaAtCellID:]
-[TSTTableTranslator postCommentNotificationForStorage:atViewCellCoord:notificationKey:]
-[TSTTableTranslator commentHostingAtCellID:forCommentStorage:]
-[TSTTableTranslator commentHostingAtCellID:]
-[TSTTableTranslator mergeRangeAtCellID:]
-[TSTTableTranslator mergeOriginForCellID:]
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@?0{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
-[TSTTableTranslator cellUIDForSummaryCellCoord:]
no summeries in normal table mode
-[TSTTableTranslator cellExistsAtCellID:]
-[TSTTableTranslator hasCommentAtCellID:]
requires identity mapping from view to model space
-[TSTTableTranslator resetViewMap]
view and base must be the same while uncategorized.
+[TSCEFunctionSpec functionSpecForFunctionName:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFunctionSpec.mm
functionSpecForFunctionName: expects US function names, but %@ (US is %@) was passed in.
+[TSCEFunctionSpec unsupportedFunctionNameForLocale:]
Unsupported
-[TSCEFunctionSpec loadRepeatingArguments]
I don't think we ever use higher than 2, actually, certainly not repeatingGroupSize: %hd
origArgIndex out of bounds: %lu
-[TSCEFunctionSpec argumentSpecForIndex:]
translatedIndex out of bounds: %lu
%@%i%@
TSCEValue TSCEFunction_INTERSECT_RANGES::evaluateWithContext(TSCEEvaluationContext &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCELookupReferenceFunctions.mm
Should have detected bad reference during loop
Bad reference should have been detected earlier
TSCEValue TSCEFunction_LOOKUP::evaluateWithContext(TSCEEvaluationContext &)
In function LOOKUP, Should not reach here, user result table should be 1-D.
static NSComparisonResult TSCEFunction_MATCH::compareValue(TSCEValue &, TSCEValue &, TSCEEvaluationContext &)
In function MATCH, should not reach here.
void TSCEFunction_UNION_RANGES::determineShapeOfCellList(std::vector<TSCECellRef>, bool, bool &, bool &, bool &, NSUInteger &)
can't have invalid cell references here
0 first row width should be impossible.
TSCEValue TSCEFunction_UNION_RANGES::evaluateWithContext(TSCEEvaluationContext &)
indices inside a range reference should be references.
each index inside a range reference should be just one cell.
contiguous should imply rectangular
rectangular references should have rowWidth rows
-[TSTIdentifierNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTIdentifierNode.mm
Unexpected object in initAsCopyOf:... expected TSTIdentifierNode, got %@
-[TSTIdentifierNode buildASTNodeArray:hostCell:symbolTable:]
IdentifierNode shouldn't have any children
<%@:%p size %f count %u hiding 0x%02hx cstyle %p tstyle %p
-[TSTConditionalStyleRule predicateType]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConditionalStyleRule.mm
_predicate
-[TSTConditionalStyleRule setCellStyle:textStyle:]
Can't replace styles!
TSTConditionalStyleRule %p: %@ => %@, %@
CS Predicate: %@
<%@>:
  %@ = %@
  %@ = null
-[TSCEFormulasForUndo splitIntoChunksForExcessiveSize]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulasForUndo.mm
Can't split FormulasForOwner that uses formulaStrings (TSTCommandRewriteFormulasForTranspose)
v24@?0@"TSCEFormulaObject"8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
  ownerKind %d = %@
static TSCENumberFormat TSCENumberFormat::defaultNumberFormatForCurrency(TSULocale *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormat.mm
TSCEBaseFormat::TSCEBaseFormat(TSKBaseFormat *__unsafe_unretained)
TSCEBaseFormat has no defaults for nil TSKBaseFormat
TSCEFormat::TSCEFormat(const TSUFormatType)
This TSCEFormat constructor not supported for this type: %d
static TSCEFormat TSCEFormat::createDefaultCurrencyUsingLocale(TSULocale *__strong)
For currency, use the constructor that passes in a locale, and use the document locale.
void TSCEFormat::setFormatType(TSUFormatType)
setFormatType() not allowed in general, type change attempted: %d -> %d
TSCEFormat::TSCEFormat(const TSUFormatType, const TSCENumberFormat &)
Creating a non-number formatType but initializing the numberFormat iVar.
bool TSCEFormat::isEqualNotCountingExplicitness(const TSCEFormat &) const
Trying to compare unexpected type %d.
TSCENumberFormat TSCEFormat::numberFormat() const
Format is not of this type.  Can't return this.
TSCEFractionFormat TSCEFormat::fractionFormat() const
TSCEBaseFormat TSCEFormat::baseFormat() const
TSCEDurationFormat TSCEFormat::durationFormat() const
TSKDateTimeFormat *TSCEFormat::dateTimeFormat() const
TSKCustomFormatWrapper *TSCEFormat::customFormat() const
TSKBooleanFormat *TSCEFormat::booleanFormat() const
-[TSTConditionalStyleSet copyToGeometricFormWithRewriteContext:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConditionalStyleSet.mm
Trying to rewrite a conditional style with a non-conditionalStyleFormulaOwner containing ownerUID: %@
-[TSTConditionalStyleSet copyByRepairingBadReferences:]
<%@: %p>: Rules:
CS Rules: 
-[TSTConditionalStyleFormulaOwner initWithTableModel:ownerUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConditionalStyleFormulaOwner.mm
TSTConditionalStyleFormulaOwner: requires a valid ownerUID, table is: %@ (%@)
TSCEReferenceValue::TSCEReferenceValue(TSCEEvaluationContext &, const TSCEOwnerUID &, const TSCERangeCoordinate &, const TSUPreserveFlags &, BOOL)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEReferenceValue.mm
Invalid attempt to create a reference value with an invalid tableUID.
TSCEReferenceValue::TSCEReferenceValue(TSCEEvaluationContext &, const TSCEOwnerUID &, const TSCERelativeRangeCoordinate &, const TSUPreserveFlags &)
TSCEReferenceValue::TSCEReferenceValue(TSCEEvaluationContext &, const TSCEOwnerUID &, const TSCERelativeCellCoordinate &, const TSUPreserveFlags &)
-[TSCETrackedReference replaceContentsWithContentsOfTrackedReference:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCETrackedReference.mm
can't replace contents with contents of a nil tracked reference
-[TSCETrackedReference referencesForCalcEngine:referenceTrackerUID:]
Non-nil TSCEReferenceSetWrapper is required to use referencesForCalcEngine:
-[TSCETrackedReference precedentsWithCalcEngine:hostOwnerUID:]
Non-nil precedents pointer is required to use precedentsWithCalcEngine:
static TSCECellRef TSTConvertFormulasToBaseForCategoriesRewriter::convertedContainingCellRefForColonTractRewrites(TSCEFormulaRewriteContext &, TSTFormulaCoordinateSpace, TSTFormulaRewriteSpec *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConvertFormulasFromBaseForCategoriesRewriter.mm
convertedContainingCellRefForColonTractRewrites: No coordMapper found for tableUID: %@
virtual TSCEASTElement *TSTConvertFormulasToBaseForCategoriesRewriter::colonTractNode(TSCEASTColonTractElement *)
How did this happen? refTableUID is invalid in TSTConvertFormulasFromChromeToBaseForCategoriesRewriter::colonTractNode
srcCoordMapper
v36@?0r^{TSUCellCoord=ISBB}8S16r^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}20^B28
TSCERangePrecedentsTile *TSCERangeDependencies::findTileForToOwnerId(TSCEInternalFormulaOwnerID, BOOL)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERangeDependencies.mm
v32@?0r^{TSUCellCoord=ISBB}8r^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16^B24
void TSCERangeDependencies::readFromArchive(const TSCE::RangeDependenciesArchive &)
corrupted range dependencies archive
void TSCERangeDependencies::readFromExpandedArchive(const TSCE::RangeDependenciesArchive &)
void TSCERangeDependencies::unpackAfterUnarchive()
precedentRangeDependencies
Fatal Assertion failure: %{public}s %{public}s:%d at the moment we don't handle this well
-[TSTCategoryOrder targetGroupFromRowIndex:minSourceLevel:templateRowUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCategoryOrder.mm
at the moment we don't handle this well
TSURowIndex TSTUidOrderNode::firstIndex()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTUidOrderNode.mm
Sorting category/pivot order: Never should a group be empty
void TSTUidOrderNode::_orderUsingGroupByAndMaps(TSTGroupBy *__strong, BOOL, int, int, TSTColumnRowUIDMap *__strong, TSTColumnRowUIDMap *__strong, BOOL)
Too many number of levels for this order algorithm.
Level mismatch between the groupBy and the order node tree
TSCECellTractRefCore::TSCECellTractRefCore(const TSUCellCoord &, const TSUCellCoord &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECellTractRefCore.mm
Both coords must be spanning in the same direction %{public}@ vs %{public}@
TSCECellTractRefCore::TSCECellTractRefCore(const TSUCellCoord &, const TSUCellCoord &, const TSKUIDStruct &)
uint32_t TSCECellTractRefCore::numColumns() const
Don't ask for numColumns when we spansAllColumns
uint32_t TSCECellTractRefCore::numRows() const
Don't ask for numRows when we spanAllRows
void TSCECellTractRefCore::addColumn(TSUColumnIndex)
void TSCECellTractRefCore::addRow(TSURowIndex)
void TSCECellTractRefCore::addColumnRange(const TSUIndexRange &)
addColumnRange: should only be used with absolute indexes: %@
void TSCECellTractRefCore::addRowRange(const TSUIndexRange &)
addRowRange: should only be used with absolute indexes: %@
TSUCellCoord TSCECellTractRefCore::coordAtColumnOffset(TSUColumnOrRowIndex, TSUColumnOrRowIndex) const
Not really expecting spanning CellTractRef to be used here
ndtri
+[TSTGroupBy(ChangeGroups) groupingComboForGroupingType:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGroupBy_ChangeGroups.mm
This grouping type isn't supported in this release
+[TSTGroupBy(ChangeGroups) p_dateBySettingUnit:value:ofDate:inCalendar:]
Continued looping trying to set date %@ to week number %lu
v24@?0r^{TSTGroupingLevelAndType=SC}8^B16
-[TSTTableInfo(Reorganize) p_mappingForSortingRowsOrColumns:withRules:dimension:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableInfo_Reorganize.mm
Can't sort by an empty rule list!
Expected sort tag count:%lu to match itemCount:%lu.
q24@?0@"TSTTableSortTag"8@"TSTTableSortTag"16
Index out of range!
-[TSTTableInfo(Reorganize) sortTagsForSortingColumns:byRows:]_block_invoke
reorganizeValue
v32@?0@"TSTTableSortTag"8Q16^B24
-[TSTTableInfo(Reorganize) sortTagsForSortingRows:byColumns:]_block_invoke
-[TSTTableInfo(Reorganize) mappingFromRowUids:toRowUids:]
From index out of range!
-[TSTCategoryTranslator maxVisibleRowLevel]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCategoryTranslator.mm
Unimplemented!
-[TSTCategoryTranslator startOfGroupingChangesBatch]
overflow in _groupingsChangingLevel
-[TSTCategoryTranslator endOfGroupingChangesBatch]
endOfGroupingChangesBatch called without matching startOfGroupingChangesBatch - avoided underflow
-[TSTCategoryTranslator resetViewMap]
view and base cannot be the same while categorized
-[TSTCategoryTranslator suspendChangeDescriptorNotificationsDuringBlock:]
not expecting multiple suspensions
+[TSTCategoryTranslator tableStyleAreaForCategoryLevel:isLabel:]
Calling tableStyleAreaForCategoryLevel with an invalid level
Category Column
i28@?0r^{TSUModelCellCoord={TSUCellCoord=ISBB}}8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16C24
i20@?0C8r^{TSKUIDStruct=QQ}12
i12@?0{TSUViewRowIndex=I}8
-[TSTCategoryTranslator setCellStyle:ofRowAtIndex:]
Categories: cannot set cell style for that row
-[TSTCategoryTranslator setTextStyle:ofRowAtIndex:]
Categories: cannot set text style for that row
-[TSTCategoryTranslator setCellStyle:ofColumnAtIndex:]
Categories: setting cell style on unknown column
-[TSTCategoryTranslator setTextStyle:ofColumnAtIndex:]
Categories: setting text style on unknown column
v18@?0{TSUModelColumnIndex=S}8r^{TSKUIDStruct=QQ}10
-[TSTCategoryTranslator conditionalStyleSetAtCellID:]
Categories: cannot get conditional style for that cell
-[TSTCategoryTranslator regionForValueOrCommentCellsInRange:]
Categories: cannot resolve region for cell rect
-[TSTCategoryTranslator p_applyViewCellCoord:toSummaryUsingBlock:toLabelUsingBlock:toCategoryColumnUsingBlock:toBaseUsingBlock:]
summary row does not have a valid summary row uid
-[TSTCategoryTranslator p_applyViewColumnIndex:toCategoryColumnUsingBlock:toBaseUsingBlock:toBeyondBoundsUsingBlock:]
Categories: this column is not is not in the base table
-[TSTCategoryTranslator heightOfRowAtIndex:isDefault:]
uid must be label or summary
-[TSTCategoryTranslator rowHeights]
Categories: cannot get row heights.
-[TSTCategoryTranslator columnWidths]
Categories: cannot get column widths.
-[TSTCategoryTranslator setHeight:ofRowAtIndex:]
Categories: cannot set height of this row
-[TSTCategoryTranslator setWidth:ofColumnAtIndex:]
Categories: cannot set width of this column
-[TSTCategoryTranslator removeRowsAtIndex:count:]
Categories: row removal method is not supported.
-[TSTCategoryTranslator removeColumnsAtIndex:count:]
Categories: column removal method is not supported.
-[TSTCategoryTranslator postCommentNotificationForStorage:atViewCellCoord:notificationKey:]
Categories: cannot post notification for comment/cell/key
-[TSTCategoryTranslator commentHostingAtCellID:forCommentStorage:]
Categories: cannot resolve comment for cell/storage
-[TSTCategoryTranslator commentHostingAtCellID:]
Categories: cannot resolve comment for cell
-[TSTCategoryTranslator moveColumnRange:toColumnIndex:]
Categories: could not move column
-[TSTCategoryTranslator cellIDForCellContainingRichTextStorage:]
Categories: cannot resolve cell for this rich text storage
-[TSTCategoryTranslator mergeCellRange:]
attempting to merge a disjoint cell region
-[TSTCategoryTranslator mergeRangeAtCellID:]
found a disjoint merge range
-[TSTCategoryTranslator mergedGridIndicesForDimension:]
should not be any merged row grid indexes in the body range
-[TSTCategoryTranslator enumerateMergesIntersectingCellRegion:usingBlock:]_block_invoke
Unexpected view source merge region for categorized table: %@
-[TSTCategoryTranslator mergeRangesIntersectingRange:]_block_invoke
-[TSTCategoryTranslator mergeRangesIntersectingCellRegion:]_block_invoke
-[TSTCategoryTranslator mergeRangesAndCrumbsIntersectingRange:]_block_invoke_2
-[TSTCategoryTranslator insertColumnsAtIndex:uids:metadatas:tableArea:]
Categories: destination column is not in the header
Categories: table area should be body
-[TSTCategoryTranslator insertRowsAtIndex:uids:metadatas:tableArea:unsetFilterHidingAction:]
Categories: destination row is not in the actual header
Categories: destination row is not in the footer
columnUids: %@
rowUids: %@
%@ mergeSource: %@ mergeRegion: %@
merge origin map:
%@ -> %@
srcTableUID: %@
srcColumnUids: %@
srcRowUids: %@
dstTableUID: %@
dstColumnUids: %@
dstRowUids: %@
-[TSCEFormulaRewrite_RegionMovedInfo loadIndexesFromRegions]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulaRewrite_RegionInfo.mm
Expecting source and dest regions to be the same size
No rows match the filter conditions.
@8@?0
v32@?0{_NSRange=QQ}8@24
BOOL TSTCellCoerceCellToFormat(TSTCell *__strong, TSUFormatType)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCell_CoercionEngine.mm
Illegal format type for coercion: %{public}@
Attempting to coerce a cell with mismatched format and value types
BOOL TSTCellCoerceEmptyCellToFormat(TSTCell *__strong, TSUFormatType)
Cannot coerce to %@
BOOL TSTCellCoerceTextCellToNumberFormatWithSeparatorFixing(TSTCell *__strong, TSUFormatType)
Need to have a locale set here.
BOOL TSTCellcoerceTextCellToBestNumberFormatUsingLimitedParsing(TSTCell *__strong, BOOL, BOOL)
unexpected format type
-[TSTCell(Coercion) replaceContentWithParsableString:tableInfo:cellID:flags:outControlWasRemoved:]
Cell must have its locale set in replaceContentWithParsableString:
-[TSTCellStyle(CellDiffAdditions) objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:optionalConcurrentStylesheet:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellStyle+CellDiffAdditions.m
Can't specify both a cell style and a cell style change at the same time.
-[TSTDataStoreIterator initWithModel:region:flags:searchMask:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTDataStoreIterator.mm
_dataStore
cannot specify both walk right to left and walk bottom to top
-[TSTDataStoreIterator updateCellData:]
_curTile
_curRow
-[TSTDataStoreIterator updateFormulaForCellData:]
-[TSTDataStoreIterator getNext]
-[TSCEAggregateGrid initWithGrids:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEAggregateGrid.mm
failed to allocate memory
-[TSCEAggregateGrid valueAtGridCoord:accessContext:]
2D array access not implemented for class %@
-[TSCEAggregateGrid valueAtIndex:accessContext:]
SFTArgumentAccessor consistency violation
-[TSCEAggregateGrid deepType:]
Shouldn't call deepType on an %@ class
-[TSCEAggregateGrid string:argIndex:locale:]
TSCEAggregateGrid doesn't have a meaningful string() to provide
void TSCEVolatileDependencies::readFromArchive(const TSCE::VolatileDependenciesArchive &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEVolatileDependencies.mm
corrupt volatile dependency tracker archive
bool TSCEVolatileDependencies::addVolatileGeometryReference(const TSCEInternalCellReference &)
NULL volatile dependencies
com.apple.iWork.TSTPerformance
General
-[TSTGroupingColumn setFunctorForType]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGroupingColumn.mm
should not attempt to use an invalid grouping type
-[TSTGroupingColumn p_groupingFormatWithLocale:]
yyyy
LLLL yyyy
EEEE
M/d/yyyy
yyyy'-W'w
yyyy-QQQ
LLLL
Value
Year
Year-Month
Day of Week
Year-Month-Day
Year-Week
Year-Quarter
Month
Quarter
TSCEArchives.proto
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/messages/src/TSCEArchives.pb.cc
-[TSTConvertFormulasForCategoriesByRewritingWrapper initWithCalcEngine:rewriteSpec:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConvertFormulasForCategoriesByRewritingWrapper.mm
Why are we even being created for a non-move rewriteSpec: %d
-[TSTConvertFormulasForCategoriesByRewritingWrapper convertFromBaseToChromeForCategorizedTableMove:containingCell:]
srcColumnUids
srcRowUids
dstColumnUids
dstRowUids
-[TSTConvertFormulasForCategoriesByRewritingWrapper convertFromChromeToBaseForCategorizedTableMove:containingCell:]
void TSCECellRefSet::encodeToArchive(TSCE::InternalCellRefSetArchive &, TSCEDependencyTracker *) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECellRefSet.mm
-[TSTPivotStoreIterator initWithInfo:region:flags:searchMask:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPivotStoreIterator.mm
info.baseTableModel.dataStore
info.summaryModel.dataStore
-[TSTPivotStoreIterator updateCellData:]
_summaryRow
-[TSTPivotStoreIterator updateFormulaForCellData:]
-[TSTPivotStoreIterator getNext]
Unexpected cell coordinate while iterating.
-[TSTTableModel(FormulaOwner) registerWithCalcEngineForDocumentLoad:ownerKind:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTable_FormulaOwner.mm
-[TSTTableModel(FormulaOwner) registerWithCalcEngineForDocumentLoad:ownerKind:]_block_invoke
can't translate a non-formula cell
-[TSTTableModel(FormulaOwner) performReadForOneOffFormulaEvaluation:forCellCoord:]
Evaluating non-formula cell.
-[TSTTableModel(FormulaOwner) evaluateFormulaAt:withCalcEngine:recalcOptions:]
Table model has no calc engine. Aborting recalculation.
Inconsistent calcEngines
Cell %@::%@ said hasFormula=YES, but had no formula in it
TSTTable_FormulaOwner evaluateFormulaAt
 %C 
-[TSTTableModel(FormulaOwner) writeResultsForCalcEngine:]
expect calc engines to be the same
-[TSTTableModel(FormulaOwner) invalidateForCalcEngine:]
-[TSCEAnyReference referenceTextWithCalculationEngine:hostTableUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEAnyReference.mm
referenceTextWithCalculationEngine currently only supports cell and range references
-[TSCEAnyReference referenceTextWithCalculationEngine:contextSheetName:]
TSTStrokeAssociatedObject
virtual TSCEValue TSTTableResolver::valueForCellCoord(const TSUCellCoord &, BOOL) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableResolver.mm
something went wrong fetching data from the table.
virtual TSCEValue TSTTableResolver::scalarValue(TSCEEvalRef *__strong _Nonnull, const TSCEOwnerUID &, const TSUCellCoord &, BOOL, BOOL) const
Invalid table pointer in a reference to be resolved. Returning a bogus value. Please file a bug.
virtual TSCEHidingAction TSTTableResolver::getHidingAction(TSCEEvalRef *__strong _Nonnull, BOOL) const
can't get hiding action of a range
virtual TSCEValueGrid *TSTTableResolver::valuesForViewTractRef(TSCEViewTractRef *__strong _Nonnull, TSCEHidingAction, TSCEError *__autoreleasing  _Nonnull * _Nullable, TSCECellRefSet * _Nullable, BOOL) const
Need a tableUID set to use this interface
Need to implement group level restrictions for categorized tables
virtual TSCEValueGrid *TSTTableResolver::valuesForViewTractRef(TSCEViewTractRef *__strong _Nonnull, TSCEHidingAction, TSCEError *__autoreleasing  _Nonnull * _Nullable, TSCECellRefSet * _Nullable, BOOL) const_block_invoke_4
%@: Should have had all precedents already, but missing: %@
v32@?0r^{TSCEGridCoord=II}8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16^B24
v40@?0Q8@"NSString"16r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24^B32
virtual TSCECellTractRef *TSTTableResolver::cellTractRefForViewTractRef(TSCEViewTractRef *__strong _Nonnull)
The error in the cell was removed.
The formula was updated because it refers to a table that was transposed.
The formula was updated because it refers to a table that was transposed. You may need to make additional changes.
The formula refers to a table that was transposed. You may want to review it.
The formula was replaced with its last calculated value.
The function %@ might have produced a different result than in Excel. The formula was replaced by a formula that will give the same result.
 Original formula: %@
The following conditional highlighting rules are not supported and were removed: Equal or Above Average, Equal or Below Average.
Conditional highlighting rules using standard deviation are not supported and were removed.
Conditional highlighting rules using formulas are not supported and were removed.
The following conditional highlighting rules are not supported and were removed: Contains Errors.
The following conditional highlighting rules are not supported and were removed: Contains No Errors.
Conditional highlighting rules containing unsupported operators were removed.
Conditional highlighting rules using unsupported style attributes were removed.
The conditional formatting containing an unsupported time period was removed.
Unsupported conditional highlighting rules were removed.
The cell was updated with a more accurate duration format. You may want to review formulas that refer to this cell.
-[TSTImportWarningSet TSTImportFormulaWarningTypeToArchive]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTImportWarningSet.mm
Unhandled FormulaWarningType encountered while saving to archive.
v32@?0@"NSString"8Q16^B24
-[TSTWrappedFormula nodesToCheckForBareArgumentPlaceholders]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTWrappedFormula.mm
Expected function node for %@ at the top of parse tree
-[TSTWrappedFormula insertFormulaText:includeWhitespace:]
-[TSTWrappedFormula reparseWithStorage:adjustExpressionTree:]_block_invoke
Unexpected attachment passed to block
-[TSTWrappedFormula reparseWithStorage:adjustExpressionTree:]
-[TSTWrappedFormula reparseWithStorage:adjustExpressionTree:]_block_invoke_2
Expected top function node to be at index 0
Expected top function node to end at index %lu
expected non-top node to be past index %lu
TSCEErrorTypeKey
TSCEFunctionNameKey
TSCEExtraInfoStringKey
TSCEExtraInfoNumberKey
kTSCEDateAsTimeIntervalKey
kTSCEOwnerUIDKey
kTSCERangeReferenceKey
kTSCEReferenceArrayKey
kTSCEAnyReferenceKey
kTSCEArgumentIndexKey
kTSCEExpectedTypeKey
kTSCEFoundTypeKey
TSCELowerBoundKey
TSCEUpperBoundKey
TSCELowerBoundInclusiveKey
TSCEUpperBoundInclusiveKey
TSCEValueToMatchKey
TSCEArgumentsAscendingKey
TSCEEqualityPermittedKey
TSCEAfterMatchKey
TSCEOccurrenceKey
TSCEMatchsFoundKey
TSCEPreviousMatchKey
TSCEPreviousValueIsRegexKey
TSCEProblemExpressionStringKey
TSCEProblemModeKey
TSCEProblemNodeIsCellReferenceKey
TSCEAttachmentErrorRaisedInTextCellKey
TSCEInvalidReferenceToMergeKey
TSCEReferenceEndCellInvalidKey
TSCEUnitNameKey
TSCEChooseIndexKey
kTSCEMaxArgsAllowedKey
kTSCEArgsProvideddKey
+[TSCEError errorWithDictionary:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEError.mm
Must have errorTypeKey set to use this API
-[TSCEError displayStringWithCalculationEngine:forTable:andCellID:]
Unknown error.
\U201C%@\U201D isn\U2019t a valid cell reference.
\U201C%@\U201D isn\U2019t a valid function name.
Numbers can\U2019t be divided by zero.
The formula calculates zero to the power of zero, which can\U2019t be computed.
The operator \U201C%@\U201D
The function \U201C%@\U201D
Argument %d of %@
 can\U2019t be %@.
 can\U2019t take %@.
 expects %@
, but cell %@ contains %@.
 but found \U201C%@.\U201D
 but found an empty cell.
This formula can\U2019t reference its own cell, or depend on another formula that references this cell.
Running Total In requires field to be a grouping column.
Argument %d of %@ must refer to a pivot table.
Argument %d of %@ must refer to an aggregate value of the pivot table.
Argument %d of %@ must refer to a grouping column of the pivot table.
invalid number of arguments error exception
spec not found for function %@
one argument
%d arguments
%@ requires at least %@.
%@ requires at least %@, but was given %@.
%@ requires between %d and %d arguments, but was given %@.
%@ requires %@, but was given %@.
%@ requires its arguments to result in a number within the valid range.
The formula contains a number outside the valid range.
The formula contains an invalid reference.
The formula refers to a cell which contains an error.
Cell \U201C%@\U201D contains an error.
Argument %d of %@ is invalid.
The formula contains a page number or page count, which aren\U2019t allowed in formulas.
The formula refers to a cell with a shape or media file. This isn\U2019t supported.
There are no cells in the intersection of the ranges \U201C%@.\U201D
%@ must have a cell or range reference as an argument.
%@ must have a cell reference as an argument.
%@ must have a range reference as an argument.
%@ couldn\U2019t find the value \U201C%@\U201D.
%@ must begin searching from a number within the length of the search text.
Arguments %d and later
Argument %d
Can't be out of bounds without bounds specified
%@ in %@ must be greater than or equal to %g.
%@ in %@ must be greater than %g.
%@ in %@ must be less than or equal to %g.
%@ in %@ must be less than %g.
%@ in %@ must be greater than or equal to %g and less than or equal to %g.
%@ in %@ must be greater than or equal to %g and less than %g.
%@ in %@ must be greater than %g and less than or equal to %g.
%@ in %@ must be greater than %g and less than %g.
Arrays can contain only constant values.
%@ couldn\U2019t find the requested value.
The two ranges in %@ must be the same size.
The formula contains a list where a single argument is expected.
The formula\U2019s arguments can only include one date value.
%@ requires all arguments to be of the same type, either dates, numbers, or durations.
MODE requires that its arguments contain repeated values.
You must specify a value for all the required arguments.
The function doesn\U2019t allow empty arguments.
Argument %d can\U2019t be empty.
The range %@ can\U2019t be used as a single value.
All arguments to %@ must be the same length.
The formula can\U2019t be calculated because the resulting text would be too long.
Lists of references can\U2019t intersect.
%@ requires %@, but none were found.
no bigger than
at least as big as
smaller than
larger than
Argument %d must be %@ argument %d.
Argument %d must be different from argument %d.
The first argument of %@ must be an index of another argument, but there is no argument at index %d.
An empty string can\U2019t be used as an argument of %@.
%@ requires a string specifying a number, but found \U201C%@\U201D instead.
%@ requires a string specifying a date/time value, but found \U201C%@\U201D instead.
%@ requires both arguments to be positive or negative.
Argument %d of %@ must sum to 1.
R1C1-style references aren\U2019t supported.
The date returned by the formula isn\U2019t valid.
The time returned by the formula isn\U2019t valid.
Vector arguments can contain only one row or column.
%@ requires that all arguments be between 0 and 1.
All arguments must be equal to or larger than zero.
Argument %d of %@ can\U2019t be equal to zero.
%@ requires the position argument to be smaller than or equal to the size of the array.
Argument %d of %@ must be equal to 1, 2, or 4.
Argument %d of %@ must be equal to 0 or 1.
Argument %d of %@ must be equal to 1 or 2.
SUBTOTAL requires that its first argument be between 1 and 11 or 101 and 111.
%@ couldn\U2019t reach a result.
%@ couldn\U2019t reach a result. Try adjusting the estimate argument.
%@ requires multiple pairs of cash-flows and dates.
%@ requires dates to be on or after the starting date.
%@ requires at least one positive and one negative argument.
%@ refers to an empty cell.
%@ refers to %@, which is empty.
The operator \U201C-\U201D can\U2019t subtract a date from a number.
Different currency types can\U2019t be compared.
Durations can\U2019t be compared to other data types.
%@ requires that its arguments use the same type of unit.
%@ requires that arguments %@ use the same type of unit.
Argument %d of %@ can\U2019t be a currency or duration.
Arguments %d and later of %@ can\U2019t contain currency or duration values.
Argument %d of %@ can\U2019t be a currency.
Arguments %d and later of %@ can\U2019t be currency values.
Argument %d of %@ can\U2019t be a duration.
The function \U201C%@\U201D expects %@ but found a duration.
%@ requires that all monetary values use the same currency.
Values being summed by %@ must be either all durations or all numbers, unless one value is a date.
Argument %d of %@ requires at least %@ values.
%@ requires an odd number of arguments, at least three.
%@ requires an even number of arguments.
%@ requires that all range arguments are the same size.
Arrays can\U2019t be empty.
\U2018%@\U2019 isn\U2019t a valid character in the base %d numeral system.
\U201C%@\U201D isn\U2019t a valid unit.
%@ requires that all its arguments have the same type of unit (for example, time or temperature).
Prefixes require metric units. The unit \U201C%@\U201D isn\U2019t metric.
The number to convert has units that conflict with the units to convert from.
The index position in the array must contain data.
The x and y arrays must have the same length and width.
The x and y arrays must have the same length.
The x and y arrays must have the same width.
RECEIVED must evaluate to a value greater than zero.
MATCH requires the third argument to be equal to 1, 0, or -1.
Formulas can\U2019t be longer than 8,192 characters.
RANDBETWEEN requires that both durations have the same maximum unit.
%@ requires all values in argument %d to be numbers.
The first argument of CHAR must represent a valid character, generally between 32 and 65535.
When using duration values with NORMDIST, the cumulative argument must be TRUE.
An x variable is too highly correlated with one or more other x variables for LINEST to calculate a result.
You can\U2019t compare %@ with %@ because their data types are different.
%@ can\U2019t be given multiple durations.
LINEST requires more data points to calculate a result.
%@ requires all numbers in argument %d to be positive.
PERCENTRANK requires that argument 2 be within the range specified in argument 1.
PERCENTRANK.EXC requires that argument 2 be within the range specified in argument 1.
Location services are not enabled on the device.
Bearing information can\U2019t be determined right now.
Location service is unable to obtain a location value right now.
Access to the location service was denied by the user.
The network was unavailable or a network error occurred.
Bearing information can\U2019t be determined due to strong interference from nearby magnetic fields.
The latitude and longitude values are invalid
The altitude value is invalid
The bearing value is invalid
The formula contains an unsupported function
%@ requires at least one TRUE condition, but none were found.
The requested STOCK attribute is invalid.
The requested CURRENCY attribute is invalid.
The requested STOCKH attribute is invalid.
The requested CURRENCYH attribute is invalid.
The requested historical date is invalid or is in the future.
There is no historical data on the requested date. The next available is on %@.
There is no historical data in the entire year of the requested date. Historical data may not be available for all securities.
No information about the specified currency pair.
Unable to retrieve information from the remote data server.
Data for the \U2018%@\U2019 attribute isn\U2019t available for the selected symbol.
\U2026
Ask Price data is not available.
Bid Price data is not available.
Ask Size data is not available.
Bid Size data is not available.
The formula refers to a cell without a formula.
The requested REFERENCE.NAME attribute is invalid.
No specified error, type %d %{public}@ dictionary: %{public}@
#NAME!
#DIV/0!
#VALUE!
#CIRC!
#ARGS!
#NUM!
#SYN!
-[TSCEError rangeRef]
Wrong type stored for kTSCERangeReferenceKey in errorDictionary: %@
+[TSCEError typeErrorForValue:functionSpec:argumentIndex:locale:]
No functionName available from functionSpec: %{public}@
-[TSCEError isNativelyEqual:]
v32@?0@"TSCERemoteDataSpecifier"8@"TSCECellValue"16^B24
v32@?0Q8@"NSMutableDictionary"16^B24
-[TSCERemoteDataValueMap updateWithValuesFromMap:overwriteValues:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERemoteDataValueMap.mm
-[TSCERemoteDataValueMap initFromArchive:]
Failed to unarchive value for %@!
@"TSTExpressionNode"16@?0@"TSTExpressionNode"8
Fatal Assertion failure: %{public}s %{public}s:%d Unarchiving is incomplete. Equality comparison is bogus and can lead to document corruption. Crashing now.
-[TSTPopUpMenuModel isEqualToChoices:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPopUpMenuModel.mm
Unarchiving is incomplete. Equality comparison is bogus and can lead to document corruption. Crashing now.
TSTPopUpMenuModel: (
-[TSTPopUpMenuModel p_mcListTypeForArgType:]
Unexpected TSCEArgumentType for popup list.
-[TSTPopUpMenuModel loadFromArchive:]
We are not handling this type of TSCECellValue
TSTPopUpMenuModel Archiving: Only one of item and tsce_item should exist
TSTPopUpMenuModel Archiving: No items to unarchive
Item 1
Item 2
Item 3
+[TSTPopUpMenuModel popupMenuModelReorderingModel:fromIndex:toIndex:]
Bad index
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTIteratorBase.mm
virtual TSCEASTElement *TSCEASTIteratorBase::visitNode(TSCEASTElement *)
TSTArchives.sos.proto
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/messages/src/TSTArchives.sos.pb.cc
-[TSTTableDataObject loadFromArchive:unarchiver:completion:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableDataObject.mm
-[TSTTableDataObject dropReferences:]
dropping data list ref count by more than the total count
-[TSTTableDataObject estimateByteSize]
refCount: %d   commentStorage: %@
refCount: %d   _conditionalStyleSet: %@
-[TSTTableDataCustomFormat encodeToArchive:archiver:]
Should never archive a new custom format datalist!
refCount: %d   _customFormat: %@
refCount: %d   format: %@
-[TSTTableDataCellSpec loadFromArchive:unarchiver:completion:]
Shouldn't find unsupported formulas in documents. This document is corrupted.
refCount: %d   _cellSpec: %@
refCount: %d   _formulaError: %@
refCount: %d   importWarningSet: %@
refCount: %d   popUpMenuModel: %@
v16@?0@"TSTRichTextPayload"8
refCount: %d   storage: %@
-[TSTTableDataString initObjectWithString:refCount:]
created a string table entry with a nil string
refCount: %d   string: %@
v16@?0@"TSSStyle"8
refCount: %d   _style: %@
BOOL TSCEBitGridTile::clearBit(TSUColumnOrRowIndex, TSURowIndex)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEBitGrid.mm
clearBit, out of range [%d,%d]->[%d,%d]: request was [%d,%d]
TSUColumnOrRowIndex TSCEBitGridTile::countInRange(TSUColumnOrRowIndex, TSURowIndex, TSUColumnOrRowIndex, TSURowIndex, const TSCEBitGridTile *) const
countInRange: first row/column must be <= last row/column
countInRange: exclude tile does not correspond to this tile.
countInRange: how did we end up masking off *all* bits?
uint8_t findLowestBitNum(uint32_t)
Can't find a bit set in zero.
Can't find a lowestBitOnly in zero.
TSCEInternalCellReference: #%lu::%@
-[TSTCellDictionary setCell:atCellID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellDictionary.mm
can't insert an invalid cell ID
-[TSTCellDictionary cellAtCellID:]
can't look up an invalid cell ID
-[TSTCellDictionary hasCellAtCellID:]
v32@?0{_NSRange=QQ}8@"TSTConcurrentSparseCellList"24
TSCEWarningClassKey
TSCEWarningTypeKey
TSCEWarningContextEntityKey
TSCENativeWarningClass
TSCEBlankReferencingWarning
TSCENonNumericReferencingWarning
TSCEComparisonWarning
TSCEInvalidHyperlinkWarning
TSCENonintegerISODDWarning
TSCENonintegerISEVENWarning
TSCEMonthOutOfRangeWarning
TSCEDayOutOfRangeWarning
TSCEBoolToNumberConversionWarning
TSCEMismatchedSizesWarning
TSCELossOfUnitsWarning
TSCEAutomaticUnitConversionWarning
SFTGlobalID_
<%@ %p with %d key/value pairs 
  { key: string   : %@
         width    : %f
         height   : %f
         vertical : %@
         direction : %@
wpColumn:  object : %@
           string : %@
  },
v32@?0@"TSTLayoutContentCachedKey"8@"TSWPColumn"16^B24
TSCEExtraInfoKey
TSCEArgument1Key
TSCEArgument2Key
TSCESyntaxError
TSCEInvalidTokenInFormulaError
TSCEUnknownError
TSCEUnknownFunctionError
TSCEUnknownLabelError
TSCEInvalidReferenceError
TSCEDivideByZeroError
TSCEZeroToPowerOfZeroError
TSCECircularReferenceError
TSCEValueError
TSCENumberOfArgumentsError
TSCETooManyArgumentsError
TSCENumberError
TSCEErrorReferenceError
TSCEInvalidArgumentsError
TSCEAutoNumberAttachmentError
TSCEAttachmentError
TSCEMissingTableError
TSCEInvalidIntersectionError
TSCENotAReferenceError
TSCENotACellReferenceError
TSCENotARangeReferenceError
TSCEMatchNotFoundError
TSCERegexMatchNotFoundError
TSCEOutOfBoundsArgumentError
TSCEInvalidArrayContentsError
TSCEValueNotAvailableError
TSCEArgumentSetUsedOutOfContextError
TSCEDifferentNumberOfDataPointsError
TSCEInvalidDateManipulationError
TSCEMixedTypeManipulationError
TSCENoModeError
TSCEEmptyArgumentError
TSCEEmptyArgumentSpecificError
TSCEInvalidHyperlinkError
TSCEDifferentNumberOfElementsError
TSCEStringTooLongError
TSCEUnionInsideIntersectionError
TSCEStartNumberExceedsStringLengthError
TSCENoSuitableArgumentsError
TSCEInvalidArgumentRelationshipError
TSCEInvalidArgumentEqualityRelationshipError
TSCEInvalidIndexForChooseError
TSCENonEmptyStringRequiredError
TSCEStringDoesNotRepresentANumberError
TSCEStringDoesNotRepresentDateError
TSCESignsMustMatchError
TSCERangeDoesNotSumToOneError
TSCEUnsupportedR1C1Error
TSCEInvalidDateError
TSCEInvalidTimeError
TSCENotAVectorError
TSCEInvalidProbabiltyError
TSCENumberSmallerThanZeroError
TSCEArgumentEqualsToZeroError
TSCEPositionLargerThanArrayError
TSCEInvalidFrequencyError
TSCEInvalidTypeError
TSCEInvalidTailError
TSCEInvalidSubtotalFunctionNumberError
TSCENumberDoesNotConvergeError
TSCENumberDoesNotConvergeWithEstimateError
TSCEReferenceToEmptyCellError
TSCENumberMinusDateError
TSCETooFewDataPointsError
TSCEDateEarlierThanStartingDateError
TSCEOnlyPositiveOrNegativeError
TSCEInvalidCurrencyComparisonError
TSCEInvalidComparisonError
TSCEMismatchedUnitsError
TSCEUnitsNotAllowedError
TSCECurrencyNotAllowedError
TSCEDurationNotAllowedError
TSCEMismatchedCurrenciesError
TSCESumMixedDurationsAndUnitlessWithoutADateError
TSCENotEnoughInputsError
TSCEInvalidArgumentPairingsError
TSCERangeSizeMismatchError
TSCEEmptyArrayError
TSCEInvalidBaseCharacterError
TSCEInvalidUnitStringError
TSCEDifferentDimensionsError
TSCENonMetricUnitPrefixError
TSCEConvertOriginUnitMismatchError
TSCEArrayElementNoDataError
TSCEDataInvalidDimensionsError
TSCEDataInvalidLengthError
TSCEDataInvalidWidthError
TSCENegativeReceivedAmountError
TSCEInvalidMatchModeError
TSCEFormulaTooLongError
TSCEMismatchedMaxUnitsError
TSCEGridValueNotNumberError
TSCECharInputOutOfBoundsError
TSCENormdistPDFDurationError
TSCELinestHighlyCorrelatedVariableError
TSCEComparisonTypeError
TSCEMultipleDurationsError
TSCELinestMatrixUnderdeterminedError
TSCENegativeVectorValueError
TSCEPercentRankInputOutOfRangeError
TSCEPercentRankExcInputOutOfRangeError
TSCELocationServicesNotEnabledError
TSCELocationHeadingUnknownError
TSCELocationUnknownError
TSCELocationUserDeniedError
TSCELocationNetworkError
TSCELocationHeadingFailureError
TSCEInvalidLatitudeLongitudeError
TSCEInvalidAltitudeError
TSCEInvalidHeadingError
TSCEInvalidRegexError
TSCEUnsupportedFunctionError
TSCEUnsupportedFeatureError
TSCENoConditionIsTrueError
TSCEInvalidLiveStockAttributeError
TSCENotAReferenceToAFormulaError
TSCEInvalidReferenceNameAttributeError
TSCEInvalidLiveCurrencyAttributeError
TSCEInvalidHistoricalStockAttributeError
TSCEInvalidHistoricalCurrencyAttributeError
TSCEInvalidHistoricalDateError
TSCENoTradingInformationError
TSCEInvalidStockCodeError
TSCEInvalidCurrencyPairError
TSCERemoteDataServerError
TSCERemoteDataUnavailableError
TSCENotReadyError
TSCEDisallowedStockModeError
TSCEInvalidRangeUsageError
TSCEMissingRunningTotalInFieldError
TSCEMissingPivotTableError
TSCEInvalidAggregateColumnError
TSCEInvalidGroupingColumnError
TSCEAbortedError
void TSCECellRecord::switchToEdgeListStructure(TSCECellRecordEdgeLists *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECellRecord.mm
Overriding existing _edges pointer
void TSCECellRecord::addEdge(const TSCEInternalCellReference &, BOOL)
Should already have an _edges structure allocated
void TSCECellRecord::readExpandedPrecedentsWithOwners(const TSCE::ExpandedEdgesArchive &)
void TSCEEvaluateViewTractRefWithContext(TSCEViewTractRef *__strong, TSCEEvaluationContext &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTNodeArrayUtilities.mm
TSCEValue TSCEEvaluateASTNodeArrayWithContext(const TSCEASTNodeArray *, TSCEEvaluationContext &)
Not expecting to see UID references during evaluation.
%d is not a valid node tag, seen in: %{public}@
TSCEEvaluateASTNodeArrayWithContext ended up with an empty evaluation stack for %@
void TSCEASTNodeArrayEncodeToArchiveProcessFirstNode(TSCE::ASTNodeArrayArchive *, TSPArchiver *__strong, TSCEASTElement *, TSCEASTElementIterator *, std::vector<TSCENodeArrayEncodingState> &, TSCEASTNodeArrayArchiveOptionsEnum)
verifySpanningSettings failed while archiving, with options: %d
TSCEASTFeatureNodesSeen TSCEASTNodeArrayEncodeToArchiveWithOptions(TSCE::ASTNodeArrayArchive *, TSCEASTNodeArray *, TSPArchiver *__strong, TSCEASTNodeArrayArchiveOptionsEnum)
TSCEASTNodeArray *TSCEFormulaUnarchivingContext::createNodeArrayFromArchive(const TSCE::ASTNodeArrayArchive &)
unarchived invalid spanning settings
can't end an embedded node array with no previous begin
can't unarchive a let node with insufficient embedded node arrays
TSTArchives.proto
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/messages/src/TSTArchives.pb.cc
-[TSCEEvalRef scalarValueForEvalContext:permitAccessInsideMergeRegions:fetchRichTextAttributesIfPlainText:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEEvalRef.mm
v32@?0@"NSNumber"8@16^B24
v16@?0@"NSMutableDictionary"8
bdtr
-[TSTCell initWithLocale:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCell.mm
-[TSTCell copyToCell:]
srcStorage
-[TSTCell copyValueAndFormatToCell:]
-[TSTCell cellByApplyingCellDiff:toTable:andUpdateInverse:optionalConcurrentStylesheet:]
cellStyle
-[TSTCell setProvidedValueTypeBeforeUpgrade]
Provided cells only allowed before Pre-UFF upgrade.
-[TSTCell formattedValue]
Cell number format failed to produce return string.
Cell currency format failed to produce return string.
Impossible cell value type reached.
%@ Total
-[TSTCell stringForEditing]
-[TSTCell bakeFormulaToValue]
can't bake non-formula cells
-[TSTCell setCellStyle:clearingID:]
-[TSTCell setTextStyle:clearingID:]
-[TSTCell setConditionalStyle:clearingID:]
v40@?0@"TSWPAttachment"8Q16Q24^B32
-[TSTCell interactionType]
Cell must be inflated to determine interaction type
-[TSTCell hasStockFormulaForStockUI]
Cell must be inflated to ask if it contains a stock formula
-[TSTCell popupChoiceIndex]
Not a popup cell.
-[TSTCell applyPopupChoiceIndex:]
Unexpected argument type for popup TSCECellValue.
Cannot apply popup choice
v40@?0@8{_NSRange=QQ}16^B32
unhandled formula result type found.
-[TSTCell copyAllFormatsToCell:]
-[TSTCell setFormatID:forStorageFlag:]
Inappropriate storage flag.
-[TSTCell formatForStorageFlag:]
-[TSTCell formatIDForStorageFlag:]
<cellSpec: %@>
<cellSpec not populated>
bool TSCEReferenceSet::operator==(const TSCEReferenceSet &) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEReferenceSet.mm
Can't compare reference sets from different calcEngines
BOOL TSCEReferenceSet::isEqualToDepTrackerPrecedents(const TSCEReferenceSet &) const
void TSCEReferenceSet::insertRef(TSCEReferenceType)
Inserting these refTypes requires accompanying data, refType was %d
void TSCEReferenceSet::insertRef(const TSCEInternalCellReference &)
Dependency tracker is required to use this method
void TSCEReferenceSet::insertRef(const TSCESpanningRangeRef &)
Why are we getting invalid tableUID here?
void TSCEReferenceSet::removeRef(TSCEReferenceType)
Removing these refTypes requires accompanying data, refType was %d
bool TSCEReferenceSet::containsRef(const TSCEInternalCellReference &) const
void TSCEReferenceSet::foreachInternalCellRef(__strong TSCEForEachInternalCellRefBlock) const
-[TSTTableGroupSortOrderUID groupSortOrderByReplacingRuleAtIndex:withRule:withTableInfo:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableGroupSortOrderUID.mm
v32@?0@"TSTTableGroupSortRuleUID"8Q16^B24
-[TSTTableDataStore decrementColumnCellCount:byAmount:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableDataStore.mm
Can't drive cell count below zero!
-[TSTTableDataStore getCell:atCellID:]
Retrieving corrupt cell storage data for cellID:%@
v28@?0^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}8S16^B20
void p_performRichTextStorageDOLC(TSTTableDataStore *__strong, TSTCell *__strong, TSTCellStorageRef)
newStorage.documentRoot
-[TSTTableDataStore p_updatePreBNCDataListsForCurrentFormat:numberFormat:currencyFormat:dateFormat:durationFormat:baseFormat:customFormat:stepperSliderFormat:mcListFormat:oldPreBNCStorageRef:callWillModify:]
newMCData
I20@?0@"TSKFormat"8i16
void p_UpdateDataListsForNewCell(TSTTableDataStore *const __strong, TSTCell *const __strong, TSTCellStorageRef, const TSCEOwnerUID &, const __strong id<TSCEFormulaReplacing>, BOOL)
Cell of string value type has no value. Setting to NoContent.
Handed a bad string key! Setting to NoContent.
Expected a formula cell spec
Handed a bad formula key! Repairing.
Expected a control cell spec
Handed a bad formula error key! Repairing.
Handed a bad text storage key! Repairing.
Handed a cell comment key! Repairing.
Handed an import warning set key! Repairing.
Handed a bad cell style key! Repairing.
Handed a bad text style key! Repairing.
Handed a bad conditional style key! Repairing.
-[TSTTableDataStore _setCell:atCellID:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:richTextDOLCHint:]
Failed to get tile for cell!
-[TSTTableDataStore setCellMap:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormulas:skipDirtyingNonFormulaCells:doRichTextDOLC:]_block_invoke
Failed to get a tile while setting a map!
-[TSTTableDataStore p_preBNCKeysForCell:oldPreBNCStorageRef:callWillModify:]
Illegal format type %@ for preBNC stepper/slider display format.
preBNCPopupTable
-[TSTTableDataStore resolveDataListKeysForPreBNCCell:suppressTransmutation:sourceStorageVersion:]
String cell has bad string!
StringTable
Formula cell has bad formula!
FormulaTable
NULL formula
FormulaErrorTable
RichTextTable
CommentTable
ImportWarningTable
StyleTable
ConditionalStyleTable
preBNCFormatTable
-[TSTTableDataStore resolveDataListKeysForCell:cache:suppressTransmutation:sourceStorageVersion:]
This cell is corrupt. It has a key for both formula and control.
ControlCellSpecTable
FormatTable
Fatal Assertion failure: %{public}s %{public}s:%d Datalist reference is unexpectedly nil during load!
-[TSTTableDataStore p_loadDatalist:forLazyReference:completionBlock:]
Datalist reference is unexpectedly nil during load!
Fatal Assertion failure: %{public}s %{public}s:%d Failed to load a lazy datalist in TSTTableDataStore: %@ in table: %@ with error: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
Failed to load a lazy datalist in TSTTableDataStore: %@ in table: %@ with error: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
Fatal Assertion failure: %{public}s %{public}s:%d Conditional style datalist reference is unexpectedly nil!
-[TSTTableDataStore conditionalStyleSetDataList]
Conditional style datalist reference is unexpectedly nil!
Fatal Assertion failure: %{public}s %{public}s:%d String datalist reference is unexpectedly nil!
-[TSTTableDataStore stringDataList]
String datalist reference is unexpectedly nil!
Fatal Assertion failure: %{public}s %{public}s:%d Style datalist reference is unexpectedly nil!
-[TSTTableDataStore styleDataList]
Style datalist reference is unexpectedly nil!
Fatal Assertion failure: %{public}s %{public}s:%d Formula datalist reference is unexpectedly nil!
-[TSTTableDataStore formulaDataList]
Formula datalist reference is unexpectedly nil!
Fatal Assertion failure: %{public}s %{public}s:%d Control cellspec datalist reference is unexpectedly nil!
-[TSTTableDataStore controlCellSpecDataList]
Control cellspec datalist reference is unexpectedly nil!
v16@?0@"TSTTableDataList"8
Fatal Assertion failure: %{public}s %{public}s:%d Formula error datalist reference is unexpectedly nil!
-[TSTTableDataStore formulaErrorDataList]
Formula error datalist reference is unexpectedly nil!
Fatal Assertion failure: %{public}s %{public}s:%d Rich text datalist reference is unexpectedly nil!
-[TSTTableDataStore richTextDataList]
Rich text datalist reference is unexpectedly nil!
-[TSTTableDataStore richTextDataList]_block_invoke
Expected non-nil richTextParentInfo back pointer. Should have been set at initialization.
Fatal Assertion failure: %{public}s %{public}s:%d Format datalist reference is unexpectedly nil!
-[TSTTableDataStore formatDataList]
Format datalist reference is unexpectedly nil!
Fatal Assertion failure: %{public}s %{public}s:%d Comment storage datalist reference is unexpectedly nil!
-[TSTTableDataStore commentStorageDataList]
Comment storage datalist reference is unexpectedly nil!
Fatal Assertion failure: %{public}s %{public}s:%d Import warning datalist reference is unexpectedly nil!
-[TSTTableDataStore importWarningSetDataList]
Import warning datalist reference is unexpectedly nil!
Fatal Assertion failure: %{public}s %{public}s:%d Pre-BNC format datalist reference is unexpectedly nil!
-[TSTTableDataStore preBNCFormatDataList]
Pre-BNC format datalist reference is unexpectedly nil!
-[TSTTableDataStore p_addPasteboardCustomFormat:key:toDocument:]
The pasteboard should have had every custom format.
v16@?0@"TSTTableHeaderStorageBucket"8
v16@?0@"TSTMergeRegionMap"8
v28@?0I8@"TSKFormat"12^B20
%@, key:%d, cellCount:%d, datalist count:%d
%@, key:%d, cellCount:%d, datalist count:0
v32@?0@"TSTTableDataList"8^v16@"NSString"24
condStyles
styles
cellSpecs
f-errors
rich text
formats
comments
imp warns
DataList RefCount Audit good:%d bad:%d dead:%d
Datalist Duplication Audit
Conditional Styles list has dupes.
Strings List has dupes.
Styles List has dupes.
Formula List has dupes.
Control Cell Spec List has dupes.
Format List has dupes.
Import Warnings List has dupes.
ColumnRowCellCount Audit
Cell count mismatch at row %d: header has %td, row has %td
Cell count mismatch at column %d: header should have %td, has %td
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke
v24@?0@"TSTCell"8@"TSTCell"16
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_2
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_3
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_4
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_5
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_6
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_7
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_8
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_9
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_12
cells[idx]
v40@?0B8@"TSKFormat"12I20@"NSIndexSet"24^v32
-[TSTTableDataStore setCellsConcurrently:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:]_block_invoke
the newCells array and the set of column indexes should be the same size
{vector<long, std::allocator<long>>=^q^q{__compressed_pair<long *, std::allocator<long>>=^q}}40@?0@"TSTTableTileRowInfo"8^v16^v24^v32
-[TSTTableDataStore setCellsConcurrently:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:]_block_invoke_2
newFormulaSpec
v18@?0{TSUModelColumnIndex=S}8q10
v36@?0{TSUModelRowIndex=I}8q12@"TSTTableTile"20@"TSTTableTileRowInfo"28
v32@?0@"TSTTableTile"8@"NSMutableIndexSet"16^B24
-[TSTTableDataStore accumulateCurrentCellsConcurrentlyInRow:rowInfo:atColumns:usingCellCreationBlock:]
-[TSTTableDataStore tsceValueFromCell:atCellID:tableUID:]
unhandled table cell type found
-[TSTTableDataStore tsceValueForCellStorageRef:cellCoord:hostTableUID:outValue:]
Can't get a value from a null cell reference!
TSUDecimal TSTCellStorageDecimalValue(TSTCellStorage *)
Asked for TSUDecimal value from an inappropriate cell.
BOOL TSTCellStorageBoolValue(TSTCellStorage *)
Asked for bool value from non-bool cell.
double TSTCellStorageRawDateValue(TSTCellStorage *)
Asked for date value from non-date cell.
-[TSCEValueGrid initWithColumnRange:rowRange:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEValueGrid.mm
Can't set an extent with invalid ranges
-[TSCEValueGrid clearValueAtCoord:]
Can't clear value with a spanning coordinate: %@
-[TSCEValueGrid valueAtCoord:]
Can't read value with a spanning coordinate: %@
-[TSCEValueGrid valueAt1DIndex:]
Index %lu exceeds area: %lu
Can't use valueAt1DIndex: with no dimensions set
-[TSCEValueGrid expandToIncludeCoord:]
Can't expand with a spanning coordinate: %@
-[TSCEValueGrid setValue:atCoord:]
Can't set a value at a spanning coordinate: %@
-[TSCEValueGrid setEmptyValueAtCoord:]
-[TSCEValueGrid subGridAtGridCoord:width:height:]
can't access beyond the end of a vector
Exceeded rowLimit: %d
TSCEValue TSCEFunction_AVERAGEA::evaluateWithContext(TSCEEvaluationContext &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEStatisticalFunctions.mm
Have to set the type of vector appropriately.
TSCEValue TSCEFunction_CRITBINOM::evaluateWithContext(TSCEEvaluationContext &)
CRITBINOM binary search has a bug.
TSCEValue TSCEFunction_FORECAST::evaluateWithContext(TSCEEvaluationContext &)
Should have at least one x if we're going to successfullly compute FORECAST
TSCEValue TSCEFunction_FREQUENCY::evaluateWithContext(TSCEEvaluationContext &)
static TSCEValue TSCEFunction_GEOMEAN::geometricMeanOfVector(TSCEGrid *, TSCEFunctionSpec *__strong, int, NSArray *__strong, TSCEEvaluationContext *)
static TSCEValue TSCEFunction_HARMEAN::harmonicMeanOfVector(TSCEGrid *, TSCEFunctionSpec *__strong, int, NSArray *__strong, TSCEEvaluationContext *)
static TSCEValue TSCEFunction_LARGE::evaluateWithContext(TSCEEvaluationContext *, TSCEFunctionSpec *__strong, BOOL, BOOL, BOOL)
Out of memory
static TSCEValue TSCEFunction_MAX::extremum(TSCEEvaluationContext *, TSCEFunctionSpec *__strong, int, BOOL, BOOL)
TSCEValue TSCEFunction_MEDIAN::evaluateVector(TSCEFunctionSpec *__strong, TSCEGrid *, TSCEEvaluationContext *)
TSCEValue TSCEFunction_MODE::evaluateVector(TSCEFunctionSpec *__strong, TSCEGrid *, TSCEEvaluationContext *, const TSCEFormat &)
In function MODE, should not reach here.
TSCEValue TSCEFunction_MODE_MULT::evaluateWithContext(TSCEEvaluationContext &)
1, 2, and 3
2 and 3
static TSCEValue TSCEFunction_PERCENTILE::computeWithVector(const TSCEGrid &, const TSUDecimal &, bool, bool, TSCEFunctionSpec *__strong, TSCEEvaluationContext *)
1, 3, and 4
1 and 3
TSCEGrid TSCEFunction_TTEST::subtractVectors(TSCEGrid &, TSCEGrid &, TSCEEvaluationContext &)
Vectors have different number of data points
Vectors have mismatched dimensions.
TSCEValue TSCEFunction_TTEST::evaluateWithContext(TSCEEvaluationContext &)
We probably have a date returned as the variance of these inputs. We should have raised an error earlier in the subtraction code.
Undefined t-test type passed to TTEST. Please file a bug.
1 and 2
-[TSCEReferenceBackedGrid string:argIndex:locale:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEReferenceBackedGrid.mm
TSCEReferenceBackedGrid doesn't have a meaningful string() to provide
-[TSCEReferenceBackedGrid valueAtGridCoord:accessContext:]
-[TSTCommentHosting initWithStorage:forTableInfo:cellUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCommentHosting.mm
Expecting valid cell UID!
-[TSTCommentHosting initWithStorage:forTableInfo:baseCellCoord:]
Expecting valid cell ID!
%@@(%@, %@)
TSTTextCellColumnAutocomplete
-[TSTFormulaRewriteSpec initFromMessage:unarchiver:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTFormulaRewriteSpec.mm
Move rewriteSpec should have AUX rowColumnInfo in archive
Sort/Reorder rewriteSpec should have AUX rowColumnInfo in archive
virtual TSCEASTElement *TSCEASTRowColumnUidMapRewriter::anyReferenceNode(TSCEASTRelativeCoordRefElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTRowColumnUidMapRewriter.mm
Expected to be called on uid-form formulas only.
TSTStylePropertyArchiving.proto
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/messages/src/TSTStylePropertyArchiving.pb.cc
-[TSTArchivedAutofillSelection setSelection:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTArchivedAutofillSelection.mm
Wrong type of class %@ (expected TSTAutofillSelection)
-[TSTTableRep hyperlinkRegions]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableRep.mm
Bounds of hyperlink {%@} are not finite
v16@?0^{CGContext=}8
v16@?0@"TSDTexturedRectangle"8
+[TSTTableRep p_countOfIdenticalCellsBetweenOutgoingTableInfo:incomingTableInfo:]
numberOfColumns not equal!
+[TSTTableRep magicMoveAttributeMatchPercentBetweenOutgoingObject:incomingObject:mixingTypeContext:]
equalCellCount(%d) > totalCellCount(%d)!
delegate
void TSTTableRepPrepareToDrawLayoutSpace(TSTTableRep *__strong _Nonnull, TSTLayoutSpace *__strong _Nullable, CGContextRef _Nullable)
space
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}
WARNING: invalid cell fill %@ %@
v32@?0@8@16^B24
-[TSTTableRep p_drawGroupingArrowInContext:contentFrame:cell:cellID:groupingArrowState:alignedClipFrame:verticalAlignment:wpColumn:]
should only be called on grouping cells
should only be called on tables that are grouped
{%@->%@}
{invalid, invalid}
{invalid, %u}
{%u, invalid}
{%u, %u}
TSTCellRange TSTTableRepDrawIndividualCellContent(TSTTableRep *__strong, TSTLayoutSpace *__strong, TSTGridRange, TSTCell *__strong, TSTCellID, __strong id, __strong id<TSTCellIteratorData>, TSTCellRange, BOOL, NSMutableArray<TSTTableBadge *> *__strong, BOOL, TSWPSelection * _Nullable __strong, CGContextRef)
No TSWPColumn layout rock found.
void TSTTableRepDrawGridRange(TSTTableRep *__strong, TSTLayoutSpace *__strong, TSTGridRange, TSTAnimation *__strong, CGContextRef)
background fill is not supported yet
yyFlexLexer::yylex invoked but %option yyclass used
virtual int TSTDefaultLexer::yylex()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTDefaultLexer.lmm
Unable to lex tokenAttachment.
fatal flex scanner internal error--no action found
fatal flex scanner internal error--end of buffer missed
fatal error - scanner input buffer overflow
input in flex scanner failed
out of dynamic memory in yy_get_next_buffer()
out of dynamic memory in yy_create_buffer()
out of dynamic memory in yyensure_buffer_stack()
Starting parse
Stack size increased to %lu
Entering state %d
Reading a token: 
Now at end of input.
Next token is
Shifting
int TSTyyparse(TSTParser *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGrammar.ymm
Parser: the quoted string length is less than 2.
-> $$ =
Error: popping
Cleanup: discarding lookahead
Cleanup: popping
token %s (
nterm %s (
%d.%d-%d.%d
$end
$undefined
TOK_LPAREN
TOK_RPAREN
TOK_LBRACK
TOK_RBRACK
TOK_ARG_SEPARATOR
TOK_DOUBLE_COLON
TOK_UNKNOWN
TOK_IN
TOK_LET
TOK_UNQUOTED_IDENTIFIER
TOK_QUOTED_IDENTIFIER
TOK_AGG_IDENTIFIER_WITH_PARENS
TOK_UNQUOTED_IDENTIFIER_WITH_PARENS
TOK_WS
TOK_QUOTEDSTRING
TOK_FUNCTION_TOKEN
TOK_FUNCTION_END_TOKEN
TOK_NUMBER
TOK_BOOLEAN_TOKEN
TOK_DATE_TOKEN
TOK_DURATION_TOKEN
TOK_VARIABLE_TOKEN
TOK_IDENTIFIER_TOKEN
TOK_ARRAY_LINE_DELIMITER
TOK_REFERENCE_TOKEN
TOK_STRING_TOKEN
TOK_ARGUMENT_PLACEHOLDER_TOKEN
TOK_EMPTY_TOKEN
TOK_COLON
TOK_LESS_OR_EQUAL
TOK_GREATER_OR_EQUAL
TOK_GREATER_THAN
TOK_LESS_THAN
TOK_NOT_EQUAL
TOK_EQUALS
TOK_AMPERSAND
TOK_MINUS
TOK_PLUS
TOK_DIV
TOK_TIMES
TOK_POWER
TOK_PIPE
TOK_PERCENT
UPLUS
UMINUS
$accept
root
expr
unquoted_identifier_component
quoted_identifier_component
identifier_component
identifier
reference
piped_reference_list
list
array
list_of_array_rows
list_head
expr_opt
function
Reducing stack by rule %d (line %lu):
   $%d = 
Stack now
Deleting
virtual int TSTCommaLexer::yylex()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCommaLexer.lmm
Reference Construction - Manual Error
int TSCEyyparse(void *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEGrammar.ymm
Invalid Native Syntax String for Argument Token.
ARGUMENT
Invalid Function String specified in Token initialization.
Malformed reference
syntax error
memory exhausted
HIGHER
TOK_BANG
TOK_DOLLAR
TOK_REFERENCE_TOKEN_BEGIN
TOK_REFERENCE_TOKEN_END
TOK_UNQUOTED_LABEL
TOK_QUOTED_LABEL
TOK_ERROR
TOK_TOKEN
label
label_end_token
number
number_end_token
list_tail
scoped_reference
scoped_reference_end_token
scoped_reference_tokenized
unscoped_reference
unscoped_reference_end_token
unscoped_reference_tokenized
cell_ref
cell_ref_tokenized
cell_ref_end_token
void TSCEASTNodeAddChild(TSCEASTNode *, TSCEAST *)
Adding child to leaf
_TtP8TSTables35TSTFixedColumnWidthGeometryProvider_
d24@0:8d16
_A15At
$s8TSTables35TSTFixedColumnWidthGeometryProviderP
TSCEUnpersistedStorage
TSTFormulaAdditions
TSCERewritingMinion
TSCEFormulaReplacing
NSObject
TSTGroupNode
TSCEWarning
TSTCellSelection
TSDTextSelection
TSTRefParser
TSCERefParsingProtocol
TSTFormsSheetProvider
TSTTableModel
TSDMixing
TSTCompatibilityVersionProviding
TSTCustomStrokeProviding
TSTStyleProviding
TSTTableStrokeProviding
TSTTableTileCreating
TSTMutableCellIteratorData
TSTCellIteratorData
TSTTableTile
TSTWidthHeightCollection
TSCEDateCellValue
TSTCellRangeControlSpec
TSCETableNameChangeProtocol
TSCETablesByNameDistributor
TSCECellCoordinateVector
TSCEAutogeneratedSpecList
TSCECellTractRef
NSCopying
TSTResolverContainerNameProvider
TSCECalculationEngineRegistration
TSKModel
TSTTableInfo
TSDContainerInfo
TSDInfo
TSPCopying
TSDInfoUsingObjectPlaceholderGeometry
TSKSearchable
TSSPresetSource
TSSStyleClient
TSCEColumnRowUIDMapping
TSTTableHiddenRowColumnProviding
TSTAdditionalHiddenRowColumnProviding
TSTTableInternalGeometryProviding
TSTTableMergeRangeProviding
TSWPStorageParent
TSWPTextStatisticsTrackerProvider
TSSPropertySource
CellMap
TSTRichTextReferenceWrapper
TSTCellIterating
TSCECellValue
TSTMergeListWrapper
TSTUIDRectRef
TSTCellIterator
TSTCellStyle
TSTInNode
TSTCSEData
TSTPivotTranslator
TSCEUpgradingTablesMinion
TSTStockDetails
TSTTableTileRowInfo
TSTExpandCollapseState
TSTCellFormulaSpec
TSCEFormulaReturning
TSCEStringManipulator
TSCENameTrie
TSCEReferenceParsingContext
NumericCompare
TSCEEdgeListPrinter
TSCECellDependencyRowPrinter
TSCECellDependenciesPrinter
TSTGroupingColumnList
TSTAdditions
TSCEDistributor
TSTGroupBySet
TSCETrackedReferenceTSPObjectDeprecated
TSTCellDiff
TSCEFunctionsInUse
TSTConcurrentCellMap
TSTCellMapChangeDescriptorDelivering
TSTConcurrentCellList
TSTConcurrentSparseCellList
TSTCellDiffArraySegment
TSTStructuredTextImportRecord
TSTTableDataList
Type_Specific_API
Upgrade
TSTTableStyle
TSCENilCellValue
TSTArchivedCellSelection
TSKArchivedSelection
TSTArchivedRdar39989167CellSelection
TSTColumnAggregate
TSCEStringCellValue
TSTTableTileStorage
TSTTableHeaderStorage
TSTEphemeralFilter
TSTTableHeaderStorageBucket
Archiving
TSCELogicalTest
TSTFormulaStore
TSCEAbstractGrid
Analytics
TSTLayoutProcessChangesActions
TSWPStyleProviding
TSTLayout
TSWPColumnMetrics
TSWPLayoutParent
TSWPStorageObserver
TSTAccumulator
TSTColumnAggregateList
TSCEReferencesToDirty
Helper
TSCEErrorCellValue
TSTRangeRefPair
TSTRefNamer
TSCERefNamingProtocol
TSCETransaction
TSCENamedReferenceManager
TSCEFormulaOwning
TSCESumAccumulator
TSTPivotCellSetter
TSTCellDiffArray
TSCECoordMapper
TSCECoordMappingProtocol
TSTWPTableInfo
TSTStrokeSidecar
TSTStrokeSidecarLookupMap
TSTCellRangeCache
TSTTableInfoHint
TSDDrawableContainerInfo
TSDReplaceableMediaContainer
TSDReducibleImageContainer
TSDCompatibilityAwareMediaContainer
TSDSelectableHintMediaContainer
TSTLayoutSpace
TSTCoordinateArray
TSCECellDirtier
TSTCellWillChangeProtocol
TSTCellWillChangeDistributor
TSTMergeChangeProtocol
TSTMergeChangeDistributor
TSCEUIDSet
NSMutableCopying
TSCEMutableUIDSet
TSCEConfiguration
TSTFormulaTokenContext
TSCEFormulaObject
TSTVariableNode
TSTWPFormulaSelection
TSTWPFormulaArchivedSelection
TSTWPFormulaFieldSelection
TSTCellRegionGatherer
TSCERegionAllocator
TSTAggregator
TSTTableStylePreset
TSSPreset
TSTHiddenStateIndexSet
TSTTableStrokePreset
TSCERelativeTractRef
TSTTableStyleNetwork
TSTLocalStylesKey
TSTLocalAccumulator
TSCERefNamingContext
TSTOwnerUidMapper
TSCEAbortObject
TSCECalculationEngine
TSCEGroupByChange
TSTTableArchivedControlCellSelection
TSTTableDataListItemCache
TSTTableDataListCache
TSTTableStrokePresetList
TSCEFormulaRewriteSpec
TSTTableStrokePresetData
TSCESageSizedList
TSCE_PrefixMatch
TSCETablesByName
TSTArchiving
TSTLayoutCellIterator
TSTExpressionNode
TSTFormulaToken
TSTFormula
TSTFormulaHelperMethods
ValidationSidecarAdditions
TSCEAdditions
TSTCellChooserControlSpec
TSTTextStyleToFontHeightCache
TSCEFunctionArgumentSpec
TSTHiddenStateFormulaOwner
TSTOperatorNode
TSTStrokeSelection
TSTCustomFormatListUpgradeHelper
TSTCustomFormatListReferenceWrapper
TSTTableControlCellSelection
TSCERegexMatcher
TSTNumberNode
!`&`"@
TSTCell_PreBNC
TSTCellMap
TSTCellMapIterator
TSTCellList
TSTStrokeWidthCache
TSTTableNameSelection
TSTColumnRowUIDMap
TSTImmutableColumnRowUIDMap
TSTCategoryOwner
TSTAggNode
TSTFunctionNode
TSCERemoteDataCoordinator
TSTLetNode
TSTSummaryModel
TSTGroupByChangeProtocol
TSTSummaryModelGroupByChangeState
TSTCellToggleControlSpec
TSCEHauntedOwner
TSTStrokeOrderedLayerToken
TSTStrokeLayerStrokeAndRange
TSTStrokeOrderedLayer
TSCEValueContainer
TSCETrackedReferenceStore
TSTFormulaPredArgData
TSTFormulaPredArg
TSTHiddenStatesOwner
TSCEWrappedCellRef
TSCEWrappedRangeRef
TSTBooleanNode
TSCEFormulaRewrite_Uids
TSCEFormulaRewriteInfo_RangeEntry
TSCEFormulaRewriteInfo_RowColumnInfo
TSTArrayNode
TSTListNode
TSTGroupNodeFormatManager
TSTWPLayout
TSTStringNode
TSTCellUIDRegion
TSTDateNode
TSTReferenceNode
TSTStarRatingRenderer
TSTPencilAnnotation
TSKPencilAnnotation
TSCERangePrecedentsTile
TSTDurationNode
TSCELocalization
TSTArgumentPlaceholderNode
TSTPostfixOperatorNode
TSTStrokeDefaultVendor
TSCEDenseGrid
TSTUidCoordsForLevelAndType
TSTUidCoordsPerGroupValueTuple
TSTUidCoordsPerRunningCellValue
TSTRunningTotalContext
TSCEUnitRegistry
TSTPrefixOperatorNode
TSTFunctionEndNode
TSCEColumnRowIndexMapper
TSTCellFormatAndValue
TSTCellDiffing
TSSPropertyCommandSerializing
TSTLayoutValidationBundle
TSCEUuidReferences
TSTPivotOwner
TSTWPRep
TSTHiddenStates
TSTStrokeSidecarIterator
TSTCellRegionIterating
TSTMutableCellIteratorDataUpdating
TSTGroupBy
TSTCellUIDLookupListWrapper
TSTTableGroupSortRuleUID
TSCERemoteDataStore
TSTEmptyExpressionNode
TSTCellBorder
TSTStrokeLayerAbstractStack
TSTStrokeLayerStack
TSTStrokeLayerMergedStack
TSTStrokeExporter
TSTUniqueValuesToRows
TSTHiddenStateExtent
TSTMergeOwner
TSTCellSpec
TSTSortRuleReferenceTracker
TSTAutofillSelection
TSTLayoutEngine
'2R2
TSTLayoutHint
TSDHint
TSTArchivedLayoutHint
TSDArchivedHint
CellDiffAdditions
TSTTablePartitionerParticipating
TSTTablePartitioner
TSDPartitioner
TSTLayoutSpaceBundle
TSCEFormulaOwnerDependencies
TSTTableDataListSegment
TSTConcurrentCellIterator
TSTConcurrentCellIteratorFourArgRock
TSTMergeAction
TSTCellUIDList
TSTCellUIDIterator
TSTGroupByChangeDelayedNotification
TSTGroupByChangeDistributor
TSCEBooleanCellValue
TSCERemoteDataSpecifier
TSTTableTileGroup
TSCENumberCellValue
TSCERemoteDataSpecifierSet
TSTMergeRegionMap
TSTFormulaRewrite_PivotInfo
TSTPencilAnnotationOwner
TSTPivotGroupingColumnOptions
TSTPivotGroupingColumnOptionsMap
TSTWidthHeightCache
TSCERemoteDataSourceFetcher
TSCEFormulasToSet
TSTChangeDescriptor
TSTCustomFormatList
TSTTextEngineDelegate
TSWPTextDelegate
TSTTableSortOrder
TSTLayoutTask
TSTConcurrentMutableCellUIDSet
TSCEReferenceResolving
TSTCellStateForLayout
TSTWPTokenAttachment
TSCEBulkCellChangeMinion
TSTPivotRowColumnOrder
TSTCompletionToken
TSTStrokeLayerToken
TSTStrokeLayer
TSTStrokeLayerEnumerating
TSTMutableStrokeLayer
TSCEGetPivotDataBundle
TSCETaggedDecimalListObject
TSTConcurrentStylesheetKey
TSTConcurrentStylesheet
TSTAnimation
TSTFontInfoCacheEntry
TSTFontInfoCache
TSTIndexingChunk
TSTHeaderNameMgrTile
TSTHeaderNameSubset
TSTHeaderNameMgr
TSTCellDiffMap
TSCETableTransposedInfo
TSCERewriteTableUIDInfo
TSCERewriteGroupNodeUIDInfo
TSTTableSortRule
TSTTableViewSortRule
TSTGroupValueTuple
TSCEQuotedRefPathWord
TSCEQuotedRefPathComponent
TSCEQuotedRefPathSplitter
TSCEUUidReferenceMap
TSTCheckboxRenderer
TSTMergeRangeSortedSet
TSTLayoutContentCachedKey
TSTLayoutDynamicResizeInfo
TSTLayoutDynamicResizeInfoProtocol
TSTColumnRowUIDMapper
TSTCategoryStoreIterator
TSCEFormulaOwnerWrapper
ReferenceResolving
TablesAdditions
TSTCategoryAggregateFormulaOwner
TSTRichTextPayload
TSCEViewTractRef
TSTSummaryCellVendor
TSCECalcTimeoutObject
TSTTableFilterRule
TSTTableFilterSet
TSCECategoryRef
TSTFormulaPredicate
TSTArchivedStrokeSelection
TSTTableBadge
TSTCellRegion
ModelCoordinateSupport
ViewCoordinateSupport
TSTMutableCellRegion
TSTCellRegionRowMajorIterator
TSTCellRegionColMajorIterator
TSTCellRegionRowMajorReverseIterator
TSTCellRegionColumnMajorReverseIterator
TSCEUndoTract
FullTuple
TSCEUndoTractList
NSFastEnumeration
TSCEStock
TSCECellRecordTileWrapper
TSTTableTranslator
TSCETableTranslatorProtocol
TSCEFunctionSpec
TSTStrokeExportCache
TSCEGroupByNodeMap
TSTIdentifierNode
TSTTableHeaderInfo
TSTTemporaryCollectionNode
TSTConditionalStyleRule
TSCEFormulasForUndoForOwnerKind
TSCEFormulasForUndo
TSTConditionalStyleSet
TSTConcurrentMutableIndexSet
TSTConditionalStyleFormulaOwner
TSCETrackedReference
TSTLayoutDynamicResizeInfoUnify
TSTLayoutDynamicResizeInfoAccordion
TSTCategoryOrder
TSTPasteMap
TSTTableSortTag
TSCECalendar
ChangeGroups
TSTColumnRowMetadata
TSTContentComposingIterator
Reorganize
TSTCategoryTranslator
TSCEFormulaRewrite_RegionInfo
TSCEFormulaRewrite_RegionMergedInfo
TSCEFormulaRewrite_MergeOriginMovedInfo
TSCEFormulaRewrite_RegionMovedInfo
TSTFilteredTableDynamicContentDelegate
TSTLayoutDynamicContentProtocol
TSTHiddenRowsColumnsCacheValidationCollection
TSTHiddenRowsColumnsCache
Coercion
TSTDataStoreIterator
TSCEAggregateGrid
TSTArchivedLayoutEngineBundle
TSTFormulaEqualsTokenAttachment
TSTFormulaEqualsTokenAttachmentRenderer
TSWPGraphicalAttachmentRenderer
FormulaAdditions
TSTArchivedTableNameSelection
TSTPerformanceLogging
TSTGroupingColumn
TSTConvertFormulasForCategoriesByRewritingWrapper
TSTPivotStoreIterator
FormulaOwner
TSCEAnyReference
TSTStrokeAssociatedObject
TSTTableResolverFactory
TSCETableResolverFactoryProtocol
TSCEResolverLocatingProtocol
TSTImportWarningSet
TSTImportWarningSetByCellRef
TSTWrappedFormula
TSCEError
TSCERemoteDataValueMap
TSTChartReferenceFormula
TSCECellValueCombinator
TSTPopUpMenuModel
TSUMultipleChoiceListChoiceProviding
TSTTableDataObject
TSTTableDataCommentStorage
TSTTableDataConditionalStyleSet
TSTTableDataCustomFormat
TSTTableDataFormat
TSTTableDataCellSpec
TSTTableDataFormulaError
TSTTableDataImportWarningSet
TSTTableDataMultipleChoiceList
TSTTableDataRichText
TSTTableDataString
TSTTableDataStyle
TSTTableDataPayload
TSTCellDictionary
TSTDupContentCache
TSCEEvalRef
TSTWPColumnCache
TSTCell
TSCEReferenceSetWrapper
TSTTableGroupSortOrderUID
TSTTableDataStore
TSTCellReorganizeValue
TSCEValueGrid
AbstractGrid
TSTCommentStorageWrapper
TSCEReferenceBackedGrid
TSTLayoutSpaceBezierPathCacheKey
TSTLayoutSpaceBezierPathCache
TSTCommentHosting
TSDComment
TSDAnnotation
TSKAnnotation
TSTConfiguration
TSTFormulaRewriteSpec
TSCEAutogeneratedSpecTypes
TSTArchivedAutofillSelection
TSTTableRepProcessChangesActions
TSTTableRep
TSWPRepParent
TSDContainerRep
TSTTableRepInternal
UITextFieldDelegate
CALayerDelegate
TSTPdfTagger
TSKPdfTagger
TSDMasterDrawableDelegate
CGColor
writingDirectionForParagraphAtParIndex:
writingDirectionForParagraphAtCharIndex:
wpKind
willModifyWithOptions:
willModifyForUpgradeWithOptions:
willModifyForUpgrade
willBeRemovedFromDocumentRoot:
willBeAddedToDocumentRoot:dolcContext:
widthValid
widthForString:textMeasurerBundle:
whitespaceCharacterSet
whitespaceAndNewlineCharacterSet
whiteColor
weekday
wasRemovedFromDocumentRoot:
wasAddedToDocumentRoot:dolcContext:
waitOnIdentifier:untilDate:releaseReadWhileWaiting:
visitTSTTableInfo:
visibleUnscaledRectForClippingReps
verticalFlip
variationOfCharacterStyle:paragraphStyle:propertyMap:
valueWithBytes:objCType:
valueForProperty:
validateObjectValue:withClass:forProperty:
validateIntValueAsBool:forProperty:
validateIntValue:forProperty:
userInfo
useAutomaticUnits
useAccountingStyle
usEnglishLocale
uppercaseWithUndoTransaction:locale:
uppercaseStringWithLocale:
uppercaseString
upgradedCustomFormatKeyForLegacyID:
upgradeStylesWithBlock:
unsignedLongLongValue
unsignedIntegerValue
unsignedIntValue
unpopulatedCustomFormatWrapperWithFormatType:customFormatKey:
uniteWithPolygonalBezierPath:
uniteWithBezierPath:
unionSet:
typographicBounds
typesettingLocale
tswp_stringWithUnambiguousNeutralEnding
tswp_spaceCharacterSet
tswp_smartSingleQuotesCharacterSet
tsu_stringWithoutAttachmentCharacters
tsu_stringByRemovingCharactersInSet:
tsu_setBySubtractingSet:
tsu_setByIntersectingSet:
tsu_resourcesBundle
tsu_removeRange:
tsu_push:
tsu_pop
tsu_moveIndexesInRange:toOffset:
tsu_isSingleContiguousRange
tsu_intersectsIndexesInIndexSet:
tsu_intersectionWithIndexSet:
tsu_insertRange:
tsu_indexSetByIntersectingWithRange:
tsu_indexSetByIntersectingWithIndexes:
tsu_indexSetByExcludingIndexes:
tsu_indexSetByAddingIndexes:
tsu_enumerateRangesConcurrentlyUsingBeginBlock:concurrentBlock:finalBlock:
tsu_enumerateNonNullPointersUsingBlock:
tsu_enumerateNonNullObjectUsingBlock:
tsu_enumerateKeysAndObjectsUsingBlock:
tsu_allKeysAsSet
tsu_addPointersFromPointerArray:
tst_hasCaseInsensitivePrefix:withLocale:
tsp_stringWithProtobufString:
tsp_saveToProtobufString:
tsp_protobufString
tsp_isRecoverable
tsp_isInDocument
tsp_initWithProtobufString:
tsp_hintsDescription
tsk_phoneUI
trueString
transformUsingAffineTransform:
transformInRoot
transformInParent
topInset
timeZoneWithName:
timeZoneForSecondsFromGMT:
timePortionOfDateTimeFormatString:
timeIntervalSinceReferenceDate
timeIntervalSinceNow
timeIntervalSinceDate:
threadDictionary
threadCollector
theme
textRangeForParagraphAtIndex:
textMeasurerBundleForParagraphStyle:
text
tabs
superRange
subtractBezierPath:
substringWithRange:
substringToIndex:
substringFromIndex:
subarrayWithRange:
styleWithIdentifier:
styleIdentifier
strongToStrongObjectsMapTable
strongObjectsPointerArray
strokeWithColor:width:
strokeByTransformingByTransform:
stringWithUTF8String:
stringWithString:
stringWithFormat:
stringWithCharacters:length:
stringWithCapacity:
stringWithCString:encoding:
stringFromString:locale:
stringFromNumber:
stringFromDurationTimeInterval:locale:showPrecision:
stringFromDurationTimeInterval:locale:
stringFromDouble:locale:
stringFromDate:locale:
stringFromDate:
stringFromBool:locale:
stringByTrimmingCharactersInSet:
stringByReplacingOccurrencesOfString:withString:
stringByReplacingCharactersInRange:withString:
stringByPaddingToLength:withString:startingAtIndex:
stringByFoldingWithOptions:locale:
stringByAppendingString:
stringByAppendingFormat:
stringByAddingPercentEncodingWithAllowedCharacters:
storageByApplyingCustomFormat:
startOfDayForDate:
startIndex
standardUserDefaults
standardError
standaloneWeekdaySymbols
standaloneMonthSymbols
sourceType
sourceIndexes
sourceEncoding
sortedArrayUsingSelector:
sortedArrayUsingDescriptors:
sortedArrayUsingComparator:
sortUsingSelector:
sortDescriptorWithKey:ascending:
smartFieldsWithAttributeKind:intersectingRange:
smartFieldKind
signalIdentifier:
showThousandsSeparator
shouldSuppressBackgrounds
shouldSaveAlternates
shortValue
shiftIndexesStartingAtIndex:by:
sharedPropertiesProvider
sharedApplication
settingsFromArchive:
setYear:
setWithSet:
setWithObject:
setWithCapacity:
setWithArray:
setWidth:
setWeakReference:message:
setValue:forProperty:
setValue:forKey:
setValue:forComponent:
setUpgradeMessageType:messagePrototype:unarchiveClassname:
setTimeZone:
setTextureType:
setTextureOpacity:
setTextColorOverride:
setStrongReferenceArray:message:
setStrongReference:message:
setStrongLazyReference:message:
setSourceEncoding:
setRep:
setReachabilityUpdatedBlock:
setPresets:ofKind:
setParent:
setParagraphWritingDirection:forCharRange:undoTransaction:
setParagraphStyle:forCharRange:undoTransaction:
setObjectType:
setObject:forUncopiedKey:
setName:
setMonth:
setMinute:
setMinFractionDigits:maxFractionDigits:
setMessageVersion:
setMessageType:messagePrototype:descriptor:unarchiveClassname:
setMaxConcurrentOperationCount:
setLocalizedDateFormatFromTemplate:
setLocaleSpecificStorage:forKey:
setLanguage:forCharRange:undoTransaction:
setKeepObjectInMemory:
setIsMagicMove:
setInt:forKey:
setIgnoreAndPreserveUntilModifiedRuleForFieldPath:message:
setIgnoreAndPreserveUntilModifiedRuleForField:message:
setHour:
setFormatString:
setFormat:
setExteriorTextWrap:
setEstimatedByteSize:
setDeprecatedMessageType:
setDay:
setCharactersToBeSkipped:
setCharacterStyle:range:undoTransaction:
setCaption:
setCGFloatValue:forProperty:
setByAddingObjectsFromSet:
setByAddingObjectsFromArray:
setBoxedValue:forProperty:
setBoxedObject:forProperty:
setAngle:
setAllowsMissingPropertiesWithNoParentStyleForUpgrade:
setAlignment:
selectionWithRange:
selectionFromWPSelection:
selectionAtIndex:
scannerWithString:
scanUpToCharactersFromSet:intoString:
scanLocation
scanInt:
scanCharactersFromSet:intoString:
saveToCommandPropertyMapMessage:archiver:
saturationComponent
rootLayout
rootAncestor
rightInset
reverseObjectEnumerator
reverseMapIndex:
returnScientificNumberFormatter:
returnNumberFormatter:
resourceURL
requiresDocumentVersion:featureIdentifier:
requiresDocumentVersion:
requiresDocumentReadVersion:writeVersion:featureIdentifier:
requestAutosaveForExpensiveCalculation
replies
replacePointerAtIndex:withPointer:
replaceOccurrencesOfString:withString:options:range:
replaceObjectAtIndex:withObject:
replaceCharactersInRange:withString:undoTransaction:
replaceCharactersInRange:withString:
replaceCharactersInRange:withStorage:usePasteRules:dolcContext:undoTransaction:
repForLayout:
renderedImageSizeForObjectSize:
removeValueForProperty:
removeProperty:
removeProperties:
removePointerAtIndex:
removeObserver:
removeObjectsInRange:
removeObjectsForKeys:
removeObjectsAtIndexes:
removeObjectIdenticalTo:
removeObjectForKey:andWait:
removeObjectAtIndex:
removeObject:
removeLastObject
removeIndexesInRange:
removeIndexes:
removeIndex:
removeFromParent
removeCharactersInString:
removeAllPropertyValues
remoteDataDidUpdateValues:quotes:fromStore:syncKey:
remappedTableNames
regularExpressionWithPattern:options:error:
regressionSumSquares
registerPresetSourceClass:
registerChange:details:forChangeSource:
referenceForObject:
redColor
rectInRootForSelectionPath:
recalcInProgressUpdate:
readWeakReferenceMessage:class:protocol:completion:
readRepeatedReferenceMessage:class:protocol:completion:
readReferenceMessage:class:protocol:completion:
readLazyReferenceMessage:class:protocol:completion:
rangeOfUnit:inUnit:forDate:
rangeOfString:options:range:locale:
rangeOfString:options:range:
rangeOfString:options:
rangeOfString:
rangeOfComposedCharacterSequencesForRange:
rangeOfCharacterFromSet:options:range:
rangeOfCharacterFromSet:options:
rangeOfCharacterFromSet:
rangeAtIndex:
rangeArrayWithRange:
rSquared
pushScopeForField:message:usingBlock:
propertySetWithProperties:
propertySetFromUnionOfPropertySets:
propertySetByRemovingPropertiesFromSet:
propertySetByAddingProperty:
propertySetByAddingProperties:
propertySet
propertyMapWithPropertiesAndValues:
propertyMapWithProperties:
processorCount
processInfo
presetsOfKind:
presetOfKind:index:
prepareDateParserInBackground
predicateWithBlock:
preUFFVersion
postNotificationName:object:userInfo:
postNotificationName:object:
populatedCustomFormatWrapperFromCFWrapper:customFormat:
pointerAtIndex:
performWrite:
performSyncWriteWithUnderlyingDictionary:
performSync:
performReadAllowingOverlappingImplicitRead:thenWrite:thenReadOnPrimaryThread:
performRead:
performBlockWithTemporaryLayout:
performBlockIgnoringModifications:
performAsync:
percentSymbol
patternType
pattern
pathForResource:ofType:inDirectory:forLocalization:
parentStorage
parentRep
parent
paragraphStyleAtParIndex:effectiveRange:
paragraphStyleAtCharIndex:effectiveRange:
paragraphCount
pairWithFirst:second:
paintRect:inContext:
paintPath:inContext:
paddingWithTopInset:leftInset:bottomInset:rightInset:
owner
overridesProperty:
overrideValueForProperty:
overridePropertyMapIsEqualTo:
overridePropertyMap
overrideCount
overrideCGFloatValueForProperty:
ordinalityOfUnit:inUnit:forDate:
orderedSelections
objectsPassingTest:
objectsAtIndexes:
objectUUID
objectEnumerator
objectAtIndex:
objectAndReturnError:
object
numberWithUnsignedShort:
numberWithUnsignedLongLong:
numberWithUnsignedInteger:
numberWithUnsignedInt:
numberWithUnsignedChar:
numberWithShort:
numberWithInteger:
numberWithInt:
numberWithDouble:
numberWithBool:
numberValueFromString:locale:outDoubleValue:outValueType:
numberValueFromString:locale:outDoubleValue:
numberValueFromString:locale:outDecimalValue:outValueType:outCurrencyCode:
numberValueFromString:locale:outDecimalValue:
numberOfRanges
numberFromString:
numberFormatWithValueType:formatString:decimalPlaces:currencyCode:useAccountingStyle:negativeStyle:showThousandsSeparator:fractionAccuracy:
null
nonCustomCurrencyFormatSansAccountingStyleForLocale:
nextObject
newlineCharacterSet
newSubstorageWithRange:context:flags:kind:
newSubstorageWithRange:context:flags:
newObjectUUIDWithOffset:
newBlendedColorWithFraction:ofColor:
newArrayByScanningString:scanRange:
networkReachabilityWithHostName:
networkReachabilityForInternetConnection
negativeStyle
name
mutableCopy
mostSpecificSelectionOfClass:
modelEnumeratorForObjectsOfClass:
modelEnumeratorForObjectsConformingToProtocol:
minute
minusSet:
minKey
migratedStyleForStyle:
messageWithNewFunction:descriptor:
messageWithDescriptor:
messageVersion
mergedStorageRepresentation
measureText:withMaxWidth:
maxKey
maskRect
mappingSize
mapping
mappedStyleForStyle:
mapTableWithKeyOptions:valueOptions:
mapIndex:
makeStyleMapper
mainBundle
lowercaseWithUndoTransaction:locale:
lowercaseStringWithLocale:
lowercaseString
logFullBacktrace
logBacktraceThrottled
lock
localizedStringWithFormat:
localizedStringForKey:value:table:
localizedCompare:toString:
localizedCaseInsensitiveIsEqual:toString:
localizedCaseInsensitiveCompare:toString:
localizedCaseInsensitiveCompare:
localizations
localeSpecificStorageForKey:
localeIdentifier
listStartAtCharIndex:
listSeparator
limit
lightGrayColor
length
legacyID
leftInset
layoutTextStorage:minSize:maxSize:anchor:pageNumber:pageCount:flags:
layoutText:context:kind:minSize:maxSize:anchor:flags:
layoutState
layoutForInfo:
layoutController
laterDate:
lastObject
keyForCustomFormat:
isVariation
isSubsetOfSet:
isStringValidArgumentToken:
isRoundDash
isReadCancelled
isPrinting
isMainThread
isMagicMove
isLocked
isLayingOutIntoTarget
isLanguageFormulasDirectionRightToLeft
isInReadOnlyMode
isInGroup
isIdentified
isFromCopy
isForCopy
isEqualViaFormattingAsDouble::
isEqualToTimeZone:
isEqualToStyle:ignoreObjectUUID:
isEqualToString:
isEqualToSet:
isEqualToPropertyMap:
isEqualToNumber:
isEqualToIndexSet:
isEqualToDate:
isEqualToArray:
isDrawingIntoPDF
isDrawingInFlippedContext
isDrawable
isCrossAppPaste
isClear
isCanvasInteractive
isAtEnd
isAnchoredAtRight
isAncestorOf:
invertedSet
invalidateTextLayout
invalidateExteriorWrap
invalidateChildren
intersectsIndexesInRange:
intersectsProperties:
intersectSet:
internetReachabilityStatusWithQueue:completion:
integerValue
intValue
intForKey:
insertTab:
insertString:atIndex:
insertString:atCharIndex:undoTransaction:
insertStorage:atCharIndex:dolcContext:undoTransaction:
insertObjects:atIndexes:
insertObject:atIndex:
insertAttachmentOrFootnote:range:dolcContext:undoTransaction:changeSession:
insertAttachmentOrFootnote:range:
initialValue
initWithUseAutomaticUnits:durationUnitSmallest:durationUnitLargest:durationStyle:
initWithUnsignedInt:
initWithUTF8String:
initWithTrueString:falseString:
initWithTopInset:leftInset:bottomInset:rightInset:
initWithTimeIntervalSinceReferenceDate:
initWithTimeIntervalSinceNow:
initWithTimeInterval:sinceDate:
initWithStylesheet:paragraphStyle:listStyle:columnStyle:alignmentForNaturalAlignment:naturalDirection:
initWithStartIndex:endIndex:
initWithSize:offset:renderBlock:
initWithPropertiesAndValues:
initWithProperties:
initWithPosition:size:widthValid:heightValid:horizontalFlip:verticalFlip:angle:
initWithPosition:size:
initWithPattern:options:error:
initWithObjectsAndKeys:
initWithObjects:
initWithObject:
initWithName:formatType:data:
initWithLocaleIdentifier:
initWithLimit:
initWithLeftAnchor:rightAnchor:isVertical:
initWithKeyOptions:valueOptions:capacity:
initWithInt:
initWithInitialValue:multipleChoiceListFormatID:popupModel:
initWithIndexesInRange:
initWithIndexSet:
initWithImageData:technique:tintColor:size:
initWithImageData:
initWithFrame:
initWithFractionAccuracy:
initWithFormatType:minimum:maximum:increment:displayFormatType:
initWithFormatType:decimalPlaces:negativeStyle:showSeparator:
initWithFormatType:customFormatKey:customFormat:
initWithFormatString:
initWithFormat:
initWithDelegate:
initWithDecimalPlaces:negativeStyle:showSeparator:accountingStyle:currencyCode:
initWithContext:url:
initWithContext:string:stylesheet:kind:
initWithContext:string:kind:stylesheet:paragraphStyle:listStyle:section:columnStyle:paragraphDirection:
initWithContext:string:kind:stylesheet:paragraphStyle:listStyle:section:columnStyle:
initWithColor:width:cap:join:pattern:
initWithCapacity:
initWithCalendarIdentifier:
initWithBytes:length:encoding:
initWithBase:basePlaces:baseUseMinusSign:
initWithArray:copyItems:
initWithArray:context:
initWithArray:
initNonAffineWithMappings:xs:ys:xDimension:desiredIntercept:
initFromCommandPropertyMapMessage:unarchiver:
initAffineWithMappings:xs:ys:xDimension:
infos
indexSetWithIndexesInRange:
indexSetWithIndex:
indexSet
indexOfObjectIdenticalTo:
indexOfObject:
indexLessThanOrEqualToIndex:
indexLessThanIndex:
indexGreaterThanOrEqualToIndex:
indexGreaterThanIndex:
indexForSelection:
incrementValueForKey:
imageNamed:
imageData
illegalCharacterSet
hyperlinkStyle
hyperlinkRegionWithURL:bezierPath:
hueComponent
hour
horizontalFlip
heightValid
heightForString:textMeasurerBundle:width:outFitWidth:
hasWrite
hasSuffix:
hasRead
hasPreUFFVersion
hasObjectForKey:
hasEqualValues:forProperties:
handleFailureInFunction:file:lineNumber:isFatal:description:
groupingSeparator
gregorianCalendarLocale
getValue:
getUUIDBytes:
getIndexes:maxCount:inIndexRange:
getBytes:length:
geometryFromFullTransform:
geometryByTranslatingBy:
fullTransform
fullPropertyMap
frameInUnscaledCanvas
frameInRoot
frameBounds
fractionAccuracy
formattingSymbols
formattedForDollarFunction:precision:forLocale:
formatString
formatName
formatFromArchive:
formatByFixingUnitsIfNecessaryForTimeInterval:
formUnionWithCharacterSet:
fontHeightInfoAtCharIndex:
floatValue
firstObject
filteredArrayUsingPredicate:
filterWithProperties:
filterUsingPredicate:
fillType
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
fileSystemRepresentation
fileFormatVersion
falseString
fStatistic
exteriorTextWrap
exceptionWithName:reason:userInfo:
errorSumSquares
enumerateWithAttributeKind:inRange:usingBlock:
enumerateSubstringsInRange:options:usingBlock:
enumerateSmartFieldsWithAttributeKind:inRange:usingBlock:
enumerateRangesWithOptions:usingBlock:
enumerateRangesInRange:options:usingBlock:
enumeratePropertiesUsingBlock:
enumeratePropertiesAndObjectsUsingBlock:
enumerateObjectsWithOptions:usingBlock:
enumerateObjectsUsingBlock:
enumerateMatchesInString:options:range:usingBlock:
enumerateMappingFollowingSwapsUsingBlock:
enumerateKeysAndValuesUsingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateIndexesWithOptions:usingBlock:
enumerateIndexesInRange:options:usingBlock:
enumerateChildTexturesForDescription:passingTest:withBlock:
enumerateAttachmentsOfClass:inTextRange:usingBlock:
enumerateAttachmentsInTextRange:usingBlock:
encodeToArchive:archivingCustomFormats:
enableNotifier
emptyStroke
emptyPattern
edgeInsets
earlierDate:
durationUnitSmallest
durationUnitLargestWithTimeInterval:
durationUnitLargest
durationStyle
drawText:inContext:minSize:maxSize:anchor:flags:isFlipped:viewScale:
drawColumn:selection:inContext:isFlipped:viewScale:renderMode:
domain
documentStylesheet
documentObject
distantPast
distantFuture
displayFormatType
disableNotifier
dictionaryWithObjects:forKeys:count:
dictionaryWithDictionary:
dictionaryWithContentsOfFile:
dictionaryWithCapacity:
dictionaryRepresentation
dictionary
details
detachNewThreadSelector:toTarget:withObject:
designModeEnabled
descriptionWithObject:
descriptionWithLocale:
descriptionString
deprecatedProperties
deliveryStyle
deleteRange:undoTransaction:
deleteCharactersInRange:
degreesFreedom
definesProperty:
defaultValueForProperty:
defaultTimeZone
defaultStyleWithContext:
defaultPropertyMap
defaultParagraphStyle
defaultListStyle
defaultHexadecimalFormat
defaultFormatWithFormatType:locale:
defaultFormatData
defaultDecimalPlacesForCurrencyCode:
defaultDateTimeFormatForLocale:
defaultDateOnlyShortFormatForLocale:
defaultCustomFormatData
defaultCenter
decimalSeparator
decimalPlaces
decimalDigitCharacterSet
dateWithTimeIntervalSinceReferenceDate:
datePortionOfDateTimeFormatString:
dateParserLibrary
dateFromString:
dateByAddingTimeInterval:
dataWithContentsOfURL:
dataWithBytes:length:
dataUsingEncoding:
dataFromURL:context:
customFormatList
customFormatKey
customFormatForKey:
customFormatDataForValue:
customFormatData
currentThread
currentLocale
currentCalendar
currencySymbolForCurrencyCode:
currencyCodeIndex
currencyCodeForValue:
currencyCodeForCurrencySymbol:
currencyCode
creationDate
createStringWithValue:
createStringWithNumber:
createHarmonizedDecimalFormatterOfStyle:
countOfIndexesInRange:
countForObject:
copyWithAuthor:
copyPropertyMap
convertUnscaledToBoundsRect:
controlCharacterSet
contextForTransientObjects
context
contentsScale
containsStyle:
containsObject:
containsKey:
containsIndexesInRange:
containsIndexes:
containsAnyPropertyInProperties:
conditionalFormatDataForValue:outKey:
componentsSeparatedByString:
componentsSeparatedByCharactersInSet:
componentsJoinedByString:
component:fromDate:
compareRange:otherStorage:otherRange:options:objectComparisonBlock:
compare:options:range:locale:
compare:options:
columnLayoutWidthForBodyWidth:insets:
colors
colorWithRed:green:blue:alpha:
colorWithHue:saturation:brightness:alpha:
colorWithColor:
colorWithAlphaComponent:
coefficientStandardErrorAtIndex:
coefficientAtIndex:
code
clearColor
checkoutScientificNumberFormatter
checkoutNumberFormatter
checkboxFormat
characterStyleAttributeCount
characterStyleAtCharIndex:effectiveRange:
characterSetWithRange:
characterSetWithCharactersInString:
characterIsMember:
characterCount
characterAtIndex:
changingCellFillAtCellID:
cfLocale
cellSelection
caseInsensitiveCompare:
cascadedStyleWithIdentifier:
caption
capitalizedString
capitalizeWithUndoTransaction:locale:
canvas
canQuicklyMeasureString:textMeasurerBundle:
canQuicklyMeasureParagraphStyle:
canModify
canBeStoredInAStringValueCell
bytes
brightnessComponent
boxedValueForProperty:
boxedDefaultValueForProperty:
boundsRectForSelection:columnArray:includeRuby:includePaginatedAttachments:
boundsOfLineFragmentAtIndex:
bounds
bottomInset
boolForKey:
blackColor
bezierPathWithRect:
bezierPathWithLegacyRoundedRect:cornerRadius:
bezierPathWithContinuousCornerRoundedRect:cornerRadius:
baselineOfLineFragmentAtIndex:
baseUseMinusSign
baseStyleForVariation
basePlaces
base
availableCurrencyCodes
automaticMaxAndMinDurationUnitsForTimeInterval:
attributeArrayForKind:withCreate:
attributeArrayForKind:
attachmentIndexRangeForTextRange:
attachmentCount
attachmentAtCharIndex:
attachmentAtAttachmentIndex:outCharIndex:
asStepperSliderFormat
asNumberFormat
asMultipleChoiceListFormat
asLegacyCustomFormat
asFractionFormat
asDurationFormat
asDateTimeFormat
asCustomFormatWrapper
asCurrencyFormat
asBooleanFormat
asBaseFormat
arrayWithObjects:count:
arrayWithObjects:
arrayWithObject:
arrayWithCapacity:
arrayWithArray:
arrayByAddingObjectsFromArray:
arrayByAddingObject:
array
applyMappingToIndexSet:
appendString:
appendFormat:
appendBezierPath:
anyObject
angle
alternateForVersion:
alphanumericCharacterSet
alphaComponent
allocWithZone:
allObjects
allKeys
allFormulaCellsAreClean
aggregateEnumeratorWithObjects:
addValuesFromPropertyMap:
addStyle:withParent:identifier:shouldDoDOLC:
addStyle:withIdentifier:
addStyle:
addSmartField:toRange:dolcContext:undoTransaction:
addRenderable:forStage:
addProperty:
addProperties:
addPointer:
addOperationWithBlock:
addObserver:selector:name:object:
addObserver:
addObjectsFromArray:
addObject:willModify:
addObject:
addIndexesInRange:
addIndexes:
addFinalizeHandler:
addFinalTexture:forStage:
addFieldValue:
addEntriesFromDictionary:
addCustomFormatForUpgrade:legacyKey:
addCustomFormat:oldKey:fuzzyNameMatching:
addCharactersInString:
addCharactersInRange:
accountingStyle
CGFloatValue
CGImageForSize:inContext:orContentsScaleProvider:
CGPath
UUID
UUIDString
UTF8String
URLByAppendingPathComponent:
URLFragmentAllowedCharacterSet
copyStorageUnpersisted:
willModify
copyPersistedWithContext:
p_processEndNode:startNode:bakeModes:tokenDict:
i_copyIntoContext:stylesheet:
i_copyIntoContext:stylesheet:paragraphStyle:listStyle:bakeModes:resettingHostTableToMatch:referenceColorHelper:disableMenus:
hasDamagedTokenAttachments
p_rangeOfString:orNodeClass:range:
isFormulaSyntaxErrorEqual:
rangeOfLetWithinRange:
rangeOfInWithinRange:
previousNonWhitespaceOrNewlineIndexStartingAtIndex:
nextNonWhitespaceOrNewlineIndexStartingAtIndex:
takeText:
replaceText:atRange:
takeText:withLanguage:
replaceText:withLanguage:atRange:
insertUIGraphicalAttachment:
insertUIGraphicalAttachment:withLanguage:
stringWithFormulaPlainText
stringWithFormulaPlainTextFromRange:
stringWithFormulaDetokenizedText
stringWithFormulaDetokenizedTextFromRange:
p_stringWithFormulaAsTextFromRange:returningTokenValues:
detokenizeEntireStorage
p_detokenizeEverythingInRange:
p_detokenizeTokenAtCharIndex:
p_replaceTokenAtCharIndex:withText:
p_replaceUnknownDirectionText:atRange:
p_replaceMixedDirectionText:atRange:
init
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
calcEngine
replaceFormula:atCellCoord:inOwner:
replaceFormula:atCellCoord:inOwner:replaceOptions:
replaceFormulaAt:inOwner:precedents:replaceOptions:
removeFormulaAt:inOwner:
removeFormulasAt:
removeAllFormulasFromOwner:
resetFormulaAt:
markCellRefAsDirty:
markRangeRefAsDirty:
initWithCalcEngine:
addRewrittenCellAt:
hasRewrittenCellAt:
addPendingCellRemovalAt:
flushAllChanges
.cxx_destruct
.cxx_construct
_formulasToSet
_rewrittenCells
_pendingCellsToRemove
T@"TSCECalculationEngine",R,N
initWithContext:
dealloc
needFormulasForAggregateType:
normalizedStringForCompare:
localizedStringForCellValue:categoryLevel:groupBy:
groupValueUid
groupUuid
groupValueUuid
rowCount
labelUid
computedGroupValueTuple
groupValueTuple
aggNodes
hasUnfilteredRows
setupWithGroupCellValue:groupBy:atLevel:groupUid:children:
initWithGroupCellValue:groupBy:atLevel:groupUid:children:
initWithGroupCellValue:context:atLevel:groupUid:children:
initAsRootNodeForGroupBy:
initAsRootNodeForContext:
initWithArchive:forGroupBy:
loadFromArchive:unarchiver:forGroupBy:
unpackAfterUnarchiveForGroupBy:atLevel:
loadFromUnarchiver:
saveToArchiver:
addChild:withKey:
removeChildForKey:
safeChildren
encodeToArchive:backwardCompatOptions:archiver:
isLeaf
isBlankNode
isErrorNode
setGroupBy:
updateWithDocumentRoot:
uidReturn
p_addChildGroupUidsIntoSet:recursively:skipFiltered:
childGroupUids
unfilteredChildGroupUids
directChildGroupUids
unfilteredDirectChildGroupUids
aggregateRefForType:atLevel:forColumnUid:
groupValueRefAtLevel:
groupValueHierarchyRefAtLevel:
findGroupNodeForValue:atLevel:locale:
findGroupNodeForDisplayValuesFromSplitter:atLevel:startAtComponent:startAtWord:preserveFlags:
addChangesTo:forReplacingValue:atLevel:
addChangesTo:forRemovingValueAtLevel:
addChangesTo:forPromotingValueAtLevel:toLevel:
addChangesTo:forDemotingValueAtLevel:toLevel:
p_refreshGroupValue
updateGroupCellValueIfKeyMatches:
insertRowUid:atRowIndex:forGroupValueTuple:atLevel:withLocale:createdGroupNodeCount:
removeRowUid:forGroupValueTuple:atLevel:withLocale:
removeRowUids:
rebuildFormulasForAggNode:
markAsDirtyWithCalcEngine:
markDependentsAsDirtyWithCalcEngine:
rowUidsAsVector
pivotOnlyRowIndexes
enumerateRowUidsWithBlock:
addRowUid:
containsRowUid:
containsAnyRowUidInRowUidSet:
removeAllRowUids
clearAllGroupNodes
clearEmptyNodes
groupValueAtLevel:
canonicalKeyStringAtLevel:
rawGroupValueCellValue
groupValueCellValue
groupValueCellValueForGroupBySet:aggIndex:appendAggregateName:
groupValueHierarchyForChart:
groupValueHierarchyForChart:groupBySet:aggIndex:appendAggregateName:
groupValueHierarchyStringWithDelimiterString:namingContext:
groupValueHierarchyStringWithDelimiterString:
firstVisibleNodeUsingColumnRowUIDMap:forDimension:leafLevel:pivotTableHiddenExtent:
groupHierarchyTreeAsFiltered:usingOrder:forDimension:
enumerateAllGroupsWithStop:withBlock:
enumerateGroupsAtLevel:withStop:withBlock:
enumerateGroupsAtLevel:withBlock:
enumerateGroupsBetweenLevel:andLevel:withStop:withBlock:
enumerateGroupsBetweenLevel:andLevel:withBlock:
enumerateDirectChildren:
addAggNode:
groupNodeForGroupUid:
groupNodeForRowUid:atLevel:
aggNodeForColumnUid:
nodePath
groupBy
groupUid
groupCellValue
groupLevel
parentNode
setParentNode:
_groupUid
_groupCellValue
_cachedGroupValueTuple
_groupBy
_groupLevel
_aggNodes
_children
_childrenLock
_rowUidsIndexSet
_pivotOnlyRowIndexes
_parentNode
_formatManager
_childNodesByRowUid
_disconnectedRowUids
_aggNodeCoordsToUnpack
T@"TSTGroupBy",N,V_groupBy
T{TSKUIDStruct=QQ},R,V_groupUid
T{TSKUIDStruct=QQ},R
T@"NSUUID",R
T@"TSTGroupValueTuple",R,N
T@"TSCECellValue",R,N,V_groupCellValue
TC,R,N,V_groupLevel
TI,R,N
TB,R,N
T@"TSTGroupNode",N,V_parentNode
T@"TSCEUIDSet",R,N
T^v,R,N
setHasVisibleWarnings:
reportNonNumericCellWarningInContext:reference:
reportMonthOutOfRangeWarningInContext:
reportDayOutOfRangeWarningInContext:
reportBoolToNumberConversionWarningInContext:
reportMismatchedSizesWarningInContext:
reportLossOfUnitsWarningInContext:
reportAutomaticUnitConversionWarningInContext:
reportComparisonWarningInContext:leftType:rightType:
initWithDictionary:
copyWithZone:
copyByRemappingEntityIDs:
type
isIgnored
displayStringWithCalculationEngine:forTable:andCellID:
ignored
setIgnored:
metadata
setMetadata:
_ignored
_metadata
T@"NSDictionary",&,N,V_metadata
TB,N,V_ignored
selectionWithTableInfo:cellID:
selectionWithTableInfo:cellUID:
selectionWithTableInfo:cellRegion:
selectionWithTableInfo:rowIndices:
selectionWithTableInfo:columnIndices:
archivedSelectionClass
range
isAtEndOfLine
T{_NSRange=QQ},R,N
initWithTableInfo:cellUIDRegion:anchorCellUID:cursorCellUID:baseCellUIDRegion:selectionType:searchReferenceRange:beginImplicitEditing:
initWithTableInfo:cellRegion:anchorCellID:cursorCellID:baseRegion:selectionType:searchReferenceRange:beginImplicitEditing:
initForUpgradeWithTableInfo:cellRegion:anchorCellID:cursorCellID:baseRegion:selectionType:
initWithTableInfo:cellRegion:anchorCellID:cursorCellID:baseRegion:selectionType:
initWithTableInfo:cellRegion:anchorCellID:cursorCellID:baseRegion:
initWithTableInfo:cellRegion:anchorCellID:cursorCellID:selectionType:
initWithTableInfo:cellRegion:anchorCellID:cursorCellID:
initWithTableInfo:cellRange:type:anchorCellID:cursorCellID:
initWithTableInfo:selectionType:
initWithTableInfo:andCellRange:
initWithTableInfo:cellID:selectionType:
initWithTableInfo:andCellID:
initWithTableInfo:startingRowIndex:numberOfRows:
initWithTableInfo:startingColumnIndex:numberOfColumns:
initWithTableInfo:rowOrColumn:index:count:
initWithTableInfo:andPreviousSelection:offsetBy:
initWithTableInfo:cellRegion:
initWithTableInfo:rowIndices:
initWithTableInfo:columnIndices:
isValid
p_cacheCellRegion:
cellRegion
anchorCellID
p_cacheBaseRegion:
baseRegion
cursorCellID
cellCount
logicalCellIDInTable:
sizeClass
initWithArchive:unarchiver:
saveToArchive:archiver:
initWithRdar39989167Archive:unarchiver:
selectionByExtendingWithCellRange:inTable:selectionType:cursorCell:
selectionByAddingCellRange:inTable:withAnchor:cursor:selectionType:
selectionByRemovingCellRange:inTable:withAnchor:cursor:selectionType:
selectionAdjustedForVisibilityInTableInfo:
selectionAdjustedForVisibilityInTableInfo:alwaysCheckColumns:
p_selectionRemovingHiddenRowsInTableInfo:
p_selectionRemovingHiddenColumnsInTableInfo:
selectionAdjustedForGeometryInTableInfo:
setCellRange:
selectionToBeginImplicitEditingInTableInfo:
selectionExpandedToCoverCollapsedRows
insert:atIndex:count:
remove:atIndex:count:
isEqualToSelection:
areCellsInTheSameRegionInTable:
containsSelection:
containsCell:
containsSingleCellOrMergeInTable:
selectsSingleControlCellWithInteractionUIInTable:
containsHeaderColumns
containsHeaderRows
containsBodyRows
containsBodyColumns
containsFooterRows
containsCellsInCategoryColumn
containsCellsInSummaryRow
containsCellsInLabelRow
containsCellsInSummaryOrLabelRows
containsCellsInCategoryColumnsOrRows
containsCellsInCategoryGroupingColumn
containsGroupValueCells
containsOnlyCellsInCategoryColumn
containsOnlyCellsInSummaryRow
containsOnlyCellsInSummaryAndLabelRows
containsOnlySpecialCategoryOrPivotCells
containsOnlySpecialCategoryCells
containsOnlySpecialPivotCells
containsOnlyGroupValueCells
canEditWithCellSubselectionInTable:
canEditWithControlCellSubselectionInTable:
canEditWithStockCellSubselectionInTable:
briefDescription
intersectsPartialMergeRangeInTable:
getAggregateType:
cellSelectionNameForContextAndActionMenus
selectionType
beginImplicitEditing
searchReferenceRange
setSearchReferenceRange:
tableInfo
setTableInfo:
cellUIDRegion
setCellUIDRegion:
anchorCellUID
setAnchorCellUID:
cursorCellUID
setCursorCellUID:
baseCellUIDRegion
setBaseCellUIDRegion:
cachedCellRegion
setCachedCellRegion:
cachedCellRegionVersionCounter
setCachedCellRegionVersionCounter:
cachedBaseRegion
setCachedBaseRegion:
cachedBaseRegionVersionCounter
setCachedBaseRegionVersionCounter:
_beginImplicitEditing
_selectionType
_tableInfo
_cellUIDRegion
_baseCellUIDRegion
_cachedCellRegion
_cachedCellRegionVersionCounter
_cachedBaseRegion
_cachedBaseRegionVersionCounter
_searchReferenceRange
_anchorCellUID
_cursorCellUID
T@"TSTTableInfo",W,N,V_tableInfo
T@"TSTCellUIDRegion",&,N,V_cellUIDRegion
T{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}},N,V_anchorCellUID
T{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}},N,V_cursorCellUID
T@"TSTCellUIDRegion",&,N,V_baseCellUIDRegion
T@"TSTCellRegion",&,N,V_cachedCellRegion
TQ,N,V_cachedCellRegionVersionCounter
T@"TSTCellRegion",&,N,V_cachedBaseRegion
TQ,N,V_cachedBaseRegionVersionCounter
valid
TB,R,N,GisValid
T@"TSTCellRegion",R,N
Tq,R,N,V_selectionType
T{TSUCellCoord=ISBB},R,N
TQ,R,N
TB,R,N,V_beginImplicitEditing
T{_NSRange=QQ},N,V_searchReferenceRange
T@"NSString",R,N
p_baseReferencesForChromeReferences:calcEngine:
p_chromeReferencesForMixedReferences:calcEngine:
p_baseReferenceForChromeReference:calcEngine:
p_chromeReferenceForBaseReference:calcEngine:
p_baseRangeRefForChromeRangeRef:calcEngine:
p_chromeRangeRefForBaseRangeRef:calcEngine:
parseStringAsChromeReference:withParsingContext:
parseStringAsBaseReference:withParsingContext:
parseR1C1Reference:containingCell:preserveFlagsOut:
parseR1C1Coord:containingCell:preserveFlagsOut:
parseStringAsCategoryRef:withParsingContext:
parseAsCategoryRefWithParsingContext:
parseAsChromeRefWithParsingContext:
parseAsTractRefWithParsingContext:
p_parseStringAsGeometricReferenceComponent:inResolver:outPreserveFlags:gettingReferencesMatchingInputAsPrefix:
p_parseStringAsReferenceComponentIntersection:inResolver:inTableNamed:preferredGeometricResolver:withParsingContext:
p_parseComponentsOfReference:gettingSheetName:gettingTableName:gettingRest:
p_findFirstColumnNameInComponent:tableName:refResolver:calcEngine:outPreserveFlags:usedWordCount:
p_parseAsCategoryRefWithSheet:tableName:columnNameAndGroupValuesStartAt:withParsingContext:
whitespaceCharSet
setWhitespaceCharSet:
_stringManipulator
_calcEngine
_whitespaceCharSet
T@"NSCharacterSet",&,N,V_whitespaceCharSet
T@"TSCECalculationEngine",R,W,N,V_calcEngine
containsForms
isTableLinkedToAForm:
tableUID:changedToTableUID:
platformSupportsForms
dateGroupingTypeForMinMaxDatePair:
needsObjectUUID
mixingTypeWithObject:context:
mixedObjectWithFraction:ofObject:
mixedBaseObjectWithObject:
canMixWithNilObjects
mixableObjectClasses
archivingCompatibilityVersion
strokeLayerForLeftSideOfColumn:
strokeLayerForRightSideOfColumn:
strokeLayerForTopOfRow:
strokeLayerForBottomOfRow:
tableStyle
setTableStyle:
bodyCellStyle
setBodyCellStyle:
headerRowCellStyle
setHeaderRowCellStyle:
headerColumnCellStyle
setHeaderColumnCellStyle:
footerRowCellStyle
setFooterRowCellStyle:
categoryLevel1CellStyle
setCategoryLevel1CellStyle:
categoryLevel2CellStyle
setCategoryLevel2CellStyle:
categoryLevel3CellStyle
setCategoryLevel3CellStyle:
categoryLevel4CellStyle
setCategoryLevel4CellStyle:
categoryLevel5CellStyle
setCategoryLevel5CellStyle:
labelLevel1CellStyle
setLabelLevel1CellStyle:
labelLevel2CellStyle
setLabelLevel2CellStyle:
labelLevel3CellStyle
setLabelLevel3CellStyle:
labelLevel4CellStyle
setLabelLevel4CellStyle:
labelLevel5CellStyle
setLabelLevel5CellStyle:
bodyTextStyle
setBodyTextStyle:
headerRowTextStyle
setHeaderRowTextStyle:
headerColumnTextStyle
setHeaderColumnTextStyle:
footerRowTextStyle
setFooterRowTextStyle:
categoryLevel1TextStyle
setCategoryLevel1TextStyle:
categoryLevel2TextStyle
setCategoryLevel2TextStyle:
categoryLevel3TextStyle
setCategoryLevel3TextStyle:
categoryLevel4TextStyle
setCategoryLevel4TextStyle:
categoryLevel5TextStyle
setCategoryLevel5TextStyle:
labelLevel1TextStyle
setLabelLevel1TextStyle:
labelLevel2TextStyle
setLabelLevel2TextStyle:
labelLevel3TextStyle
setLabelLevel3TextStyle:
labelLevel4TextStyle
setLabelLevel4TextStyle:
labelLevel5TextStyle
setLabelLevel5TextStyle:
tableNameStyle
setTableNameStyle:
tableNameShapeStyle
setTableNameShapeStyle:
pivotBodySummaryRowCellStyle
setPivotBodySummaryRowCellStyle:
pivotBodySummaryColumnCellStyle
setPivotBodySummaryColumnCellStyle:
pivotHeaderColumnSummaryCellStyle
setPivotHeaderColumnSummaryCellStyle:
T@"TSTTableStyle",&,N
T@"TSTCellStyle",&,N
T@"TSWPParagraphStyle",&,N
T@"TSWPShapeStyle",&,N
defaultHorizontalBorderStroke
defaultHorizontalBorderStrokeEvenIfNotVisible
defaultVerticalBorderStroke
bodyColumnStroke
bodyRowStroke
bodyRowStrokeEvenIfNotVisible
headerColumnBorderStroke
headerColumnBodyColumnStroke
headerColumnBodyRowStroke
headerColumnSeparatorStroke
headerRowBorderStroke
headerRowBodyColumnStroke
headerRowBodyRowStroke
headerRowSeparatorStroke
footerRowBorderStroke
footerRowBodyColumnStroke
footerRowBodyRowStroke
footerRowSeparatorStroke
categoryLevel1TopStroke
categoryLevel2TopStroke
categoryLevel3TopStroke
categoryLevel4TopStroke
categoryLevel5TopStroke
categoryLevel1LabelSeparatorStroke
categoryLevel2LabelSeparatorStroke
categoryLevel3LabelSeparatorStroke
categoryLevel4LabelSeparatorStroke
categoryLevel5LabelSeparatorStroke
categoryLevel1BottomStroke
categoryLevel2BottomStroke
categoryLevel3BottomStroke
categoryLevel4BottomStroke
categoryLevel5BottomStroke
categoryLevel1InteriorStroke
categoryLevel2InteriorStroke
categoryLevel3InteriorStroke
categoryLevel4InteriorStroke
categoryLevel5InteriorStroke
bodyPivotGroupHorizontalStroke
bodyPivotGroupVerticalStroke
bodyPivotDeEmphasisHorizontalStroke
bodyPivotEmphasisVerticalStroke
headerColumnPivotGroupHorizontalStroke
headerColumnPivotGroupDeEmphasisStroke
headerColumnPivotSeparatorStroke
headerRowPivotGroupVerticalStroke
headerRowPivotGroupDeEmphasisStroke
headerRowPivotTitleStroke
footerRowPivotGroupVerticalStroke
T@"TSDStroke",R,N
textStyleAtModelCellCoord:isDefault:
enumerateCellsForSOSSerializationWithBlock:
numberOfRows
numberOfColumns
T{TSUModelRowIndex=I},R,N
T{TSUModelColumnIndex=S},R,N
strokeSidecar
setStrokeSidecar:
willClose
documentLocaleDidChange
identityTranslator
setStylesheetForUpgradeToSingleStylesheet:
p_clearDefaultStyles
setStyleNetwork:
newCell
initWithContext:tableUID:columnRowUIDMap:styles:stylePreset:tableInfo:
initWithContext:rowUids:columnUids:styles:stylePreset:tableInfo:
initWithContext:rows:columns:styles:stylePreset:tableInfo:
initWithContext:fromSourceModel:region:tableInfo:waitForCalcEngine:
initWithContext:fromSourceModel:region:tableInfo:waitForCalcEngine:formulaCoordSpace:
initAsPivotDataWithContext:tableInfo:sourceModel:sourceBody:sourceHeader:
p_upgradeDefaultCellStylesForStrokeSidecar
resetForPivotingWithRowUids:columnUids:numberOfHeaderRows:numberOfHeaderColumns:
updateMergesAndCellsAsPivotDataWithSourceModel:
p_updateMergesAndCellsAsPivotDataWithSourceModel:sourceRegion:sourceBodyRegion:
hasUsefulPivotDataInSourceBodyTract:
copyPivotDetailDataFromSourceModel:inSourceRegion:columnMapping:rowMapping:
pivotDataCellValueTypeForColumn:
p_rebuildTheTable:
p_auditTilesForRowOverlapAndExtensionPastTableBoundsWithVersion:
p_auditTableHealthUpgradingFromVersion:
upgradeDuringDocumentUpgradeIfNeeded:tableInfo:
p_tableSize
updateCalcEngineForTableSize
presetNeedsStrongOwnership
setPresetNeedsStrongOwnership:
conditionalStyleFormulaOwnerUID
setTableName:
tableNameEnabled
setTableNameEnabled:
tableNameBorderEnabled
setTableNameBorderEnabled:
tableNameHeight
setTableNameHeight:
repeatingHeaderRowsEnabled
setRepeatingHeaderRowsEnabled:
repeatingHeaderColumnsEnabled
setRepeatingHeaderColumnsEnabled:
styleApplyClearsAll
setStyleApplyClearsAll:
headerRowsFrozen
setHeaderRowsFrozen:
headerColumnsFrozen
setHeaderColumnsFrozen:
setIsAPivotDataModel:
createPivotOwner
clearPivotOwner
numberOfHeaderRows
setNumberOfHeaderRows:
numberOfFooterRows
setNumberOfFooterRows:
numberOfHeaderColumns
setNumberOfHeaderColumns:
tableStylePreset
setTableStylePreset:
setlabelLevel1CellStyle:
setlabelLevel2CellStyle:
setlabelLevel3CellStyle:
setlabelLevel4CellStyle:
setlabelLevel5CellStyle:
setlabelLevel1TextStyle:
setlabelLevel2TextStyle:
setlabelLevel3TextStyle:
setlabelLevel4TextStyle:
setlabelLevel5TextStyle:
columnRowUIDMap
setColumnRowUIDMap:
setTextImportRecord:
ownerUIDMapper
upgradeToSubOwnerUIDMapper
verifySubOwnerUIDsUsed
identityOwnerUIDMapper
hasTableBorder
hasAlternatingRows
tableWritingDirection
tableNameBorderStroke
metadataForRowIndex:hidingAction:
metadataForColumnIndex:hidingAction:
commentHostingMap
tableSizeClass
shouldUseWideRows
setShouldUseWideRows:
sortOrder
setSortOrder:
resetSortRuleReferenceTrackerForInsert
cellWillChangeDistributor
setTableUID:
nsTableUID
setFromTableUID:
clearFromTableUID
setFromGroupByUID:
clearFromGroupByUID
wasCut
setWasCut:
isRegisteredWithCalcEngine
setIsRegisteredWithCalcEngine:
setStorageParentToInfo:
unnamedTableString
cellRangeForTableArea:
tableAreaForBaseCellCoord:
tableAreaForRow:
tableAreaForColumn:
tableStyleAreaForBaseCellCoord:
tableStyleAreaForRow:
tableAreasForBaseCellRect:
getDefaultCell:forTableStyleArea:
getDefaultCell:forBaseCellCoord:
cellExistsAtBaseCellCoord:
getCell:atBaseCellCoord:suppressCellBorder:
getCell:atBaseCellCoord:
cellAtBaseCellCoord:
updateCalculationEngineForFormula:inBaseCellCoord:usingCalcEngine:
hasFormulaAtBaseCellCoord:
p_shouldAllowSetCell:atBaseCellCoord:
setCell:atBaseCellCoord:ignoreFormula:clearImportWarnings:calcEngine:
setCell:atBaseCellCoord:ignoreFormula:clearImportWarnings:
formulaSyntaxErrorAtBaseCellCoord:
formulaAtBaseCellCoord:
formulaSpecAtBaseCellCoord:
p_shouldAllowApplyBaseCellMap:
setCellsWithBaseCellMap:ignoreFormulas:skipDirtyingNonFormulaCells:
formatForCalcEngineAtBaseCellCoord:formatIsExplicitOut:
cellValueTypeAtBaseCellCoord:
textStyleForCalcEngineAtBaseCellCoord:isDefault:
numberOfComments
hasCommentAtBaseCellCoord:
hasCommentStorageAtBaseCellCoord:
clearCommentHostingMapForCommentStorage:
commentHostingAtBaseCellCoord:forCommentStorage:
commentHostingAtBaseCellCoord:
setCommentStorage:atBaseCellCoord:
removeCommentStorageAtBaseCellCoord:
postCommentNotificationForStorage:baseCellCoord:notificationKey:
setCellStyle:ofRowAtIndex:
setTextStyle:ofRowAtIndex:
cellStyleOfRowAtIndex:isDefault:
textStyleOfRowAtIndex:isDefault:
setCellStyle:ofColumnAtIndex:
setTextStyle:ofColumnAtIndex:
cellStyleOfColumnAtIndex:isDefault:
textStyleOfColumnAtIndex:isDefault:
defaultCellStyleForBaseCellCoord:
defaultCellStyleForBaseCellCoord:useSoftDefault:outSource:
defaultCellStyleForTableStyleArea:
cellStyleForCellWithEmptyStyleAtBaseCellCoord:isDefault:
defaultTextStyleForBaseCellCoord:
defaultTextStyleForBaseCellCoord:useSoftDefault:outSource:
defaultTextStyleForTableStyleArea:
textStyleForCellWithEmptyStyleAtBaseCellCoord:isDefault:
cellStyleAtModelCellCoord:isDefault:
defaultStylesAtBaseCellCoord:useSoftDefault:outCellStyle:outTextStyle:
defaultStylesForTableStyleArea:outCellStyle:outTextStyle:
conditionalStyleSetAtBaseCellCoord:
numberOfPopulatedCells
setDefaultRowHeight:
setDefaultColumnWidth:
heightOfRowAtIndex:isDefault:
widthOfColumnAtIndex:isDefault:
setHeight:ofRowAtIndex:
setWidth:ofColumnAtIndex:
setHeight:ofRow:
setWidth:ofColumn:
rowHeights
columnWidths
setColumnWidths:
setRowHeights:
computeDefaultRowHeight
computeDefaultFontHeightForTableStyleArea:
bodyRange
bodyColumnRange
bodyRowRange
headerRowRange
headerColumnRange
actualHeaderColumnRange
footerRowRange
topCornerRange
bottomCornerRange
hasNamesInHeaders
mergedRangeForBaseCellCoord:
insertRowsInBaseRange:uids:metadata:unsetFilterHidingAction:
insertColumnsAtIndex:uids:metadatas:tableArea:
insertRowsAtIndex:uids:metadatas:tableArea:unsetFilterHidingAction:
removeRowsAtIndex:count:
removeColumnsAtIndex:count:
removeRowsAtBaseIndexes:
removeColumnsAtBaseIndexes:
removeAnnotationsFromRowsAtBaseIndexes:
removeAnnotationsFromColumnsAtBaseIndexes:
moveBaseRowRange:toRowIndex:
moveBaseColumnRange:toColumnIndex:
swapRowAtIndex:withRowAtIndex:
headerInfo_hidingActionForRowAtIndex:
headerInfo_hidingActionForColumnAtIndex:
upgradeHiddenStates
upgradeHiddenFormulaOwnerForColumnsUID
upgradeHiddenFormulaOwnerForRowsUID
upgradeNeedsToUpdateFilterSetForImport
hiddenStateFormulaOwnerForRows
hiddenStateFormulaOwnerForColumns
setHidingState:atRowIndex:
setHidingState:atColumnIndex:
stringAtBaseCellCoord:optionalCell:
hasMigratableStylesInCells
regionForValueOrCommentCellsInBaseCellRect:
columnNameForCellID:restrictToBodyRange:
documentLocalizedDisplayNameForColumnAtIndex:
displayNameForColumnAtIndex:derivation:
p_displayNameForColumnAtIndex:documentLocalized:derivation:
displayNameForColumnAtIndex:
fillForRow:
maxStrokeOrder
cellBorderAtCellID:
setStroke:forTopOfRow:order:
setStroke:forBottomOfRow:order:
setStroke:forLeftOfColumn:order:
setStroke:forRightOfColumn:order:
setStroke:forTopOfRow:order:columnRange:
setStroke:forBottomOfRow:order:columnRange:
setStroke:forLeftOfColumn:order:rowRange:
setStroke:forRightOfColumn:order:rowRange:
cellValueFromCell:atBaseCellCoord:
cellValueAtBaseCellCoord:
getValue:atBaseCellCoord:fetchRichTextAttributesIfPlainText:
getValue:atBaseCellCoord:fetchRichTextAttributesIfPlainText:skipPendingWrites:
setFormulaOwnerUIDsWithMap:shouldStealReferences:
remapTableUIDsInFormulasWithMap:calcEngine:bakeForBadRefs:
updateCustomFormatsAtKey:
addPasteboardCustomFormatsToDocumentAndUpdateCells
mapReassigningPasteboardCustomFormatKeys:
copyPasteboardCustomFormatsFromTableModel:
registerAllFormulasWithCalculationEngine:wasCrossDocumentPaste:infoIsCategorized:wasUndo:
prepareForPasteWithCalculationEngine:sourceOffset:bakeFormulas:
hasFormulas
cellsModifiedInCurrentRecalcCycle
addCellRefToClearError:
clearErrors
mapTableStylesToStylesheet:withMapper:
updateTableRowColumnStylesWithBlock:
adoptStylesheet:withMapper:
assertListTilesAndRows
validateTableStylesInSameStylesheetExpectingDocSS:
allDataAsString
validate
_removeAnnotationsFromDeleteRange:
assertCollaborationConvergence
upgradeFormatsForCustomFormatListU2_0
upgradeFromPreUFF
p_upgradeMerges
hasImportWarnings
hasControls
allRichTextStorages
baseCellCoordForCellContainingRichTextStorage:
p_iterateDataStoreCellsInRegion:searchFlags:usingBlock:
auditTilesForRowOverlapAndExtensionPastTableBounds:result:
confirmRefCountsReturningResult:
auditDatalistDuplicationReturningResult:
auditRowInfoCellCountsReturningResult:
auditColumnRowCellCountsReturningResult:hasUndercounts:
accumulateCurrentCellsConcurrently:
setCellsConcurrently:ignoreFormula:clearImportWarnings:formulaReplacer:
shouldAllowApplyConcurrentCellMap:
prepareToApplyConcurrentCellMap:
didApplyConcurrentCellMap:
lastArchivedAppVersion
setCalcEngine:
dataStore
setDataStore:
tableUID
fromTableUID
localOwnerID
setLocalOwnerID:
defaultRowHeight
defaultColumnWidth
tableName
presetIDForUpgrade
setPresetIDForUpgrade:
cellsPendingWrite
cellsToInvalidateAfterRecalc
cellsToInvalidateNonoverflowingAfterRecalc
conditionalStyleFormulaOwner
setConditionalStyleFormulaOwner:
mergeOwner
categoryOwner
pivotOwner
hiddenStatesOwner
hauntedOwner
sortRuleReferenceTracker
deprecatedProvider
setDeprecatedProvider:
wasUnarchivedFromAProvidedTable
setWasUnarchivedFromAProvidedTable:
textImportRecord
isAPivotDataModel
prePivotRowFilterSet
setPrePivotRowFilterSet:
fromGroupByUID
pencilAnnotationOwner
pivotValueTypesByColumn
pivotDateGroupingTypesByColumn
_hiddenStateFormulaOwnerForRows
_hiddenStateFormulaOwnerForColumns
_strokeSidecar
_clearErrorCells
_clearErrorLock
_pivotValueTypesByColumn
_pivotDateGroupingTypesByColumn
_isRegisteredWithCalcEngine
_wasCut
_headerRowsFrozen
_headerColumnsFrozen
_tableNameEnabled
_tableNameBorderEnabled
_repeatingHeaderRowsEnabled
_repeatingHeaderColumnsEnabled
_styleApplyClearsAll
_presetNeedsStrongOwnership
_wasUnarchivedFromAProvidedTable
_isAPivotDataModel
_localOwnerID
_numberOfHeaderColumns
_numberOfHeaderRows
_numberOfFooterRows
_lastArchivedAppVersion
_archivingCompatibilityVersion
_dataStore
_defaultRowHeight
_defaultColumnWidth
_tableName
_tableNameHeight
_presetIDForUpgrade
_tableStylePreset
_tableStyle
_identityTranslator
_bodyCellStyle
_headerRowCellStyle
_headerColumnCellStyle
_footerRowCellStyle
_categoryLevel1CellStyle
_categoryLevel2CellStyle
_categoryLevel3CellStyle
_categoryLevel4CellStyle
_categoryLevel5CellStyle
_labelLevel1CellStyle
_labelLevel2CellStyle
_labelLevel3CellStyle
_labelLevel4CellStyle
_labelLevel5CellStyle
_bodyTextStyle
_headerRowTextStyle
_headerColumnTextStyle
_footerRowTextStyle
_categoryLevel1TextStyle
_categoryLevel2TextStyle
_categoryLevel3TextStyle
_categoryLevel4TextStyle
_categoryLevel5TextStyle
_labelLevel1TextStyle
_labelLevel2TextStyle
_labelLevel3TextStyle
_labelLevel4TextStyle
_labelLevel5TextStyle
_tableNameStyle
_tableNameShapeStyle
_pivotBodySummaryRowCellStyle
_pivotBodySummaryColumnCellStyle
_pivotHeaderColumnSummaryCellStyle
_cellsPendingWrite
_cellsToInvalidateAfterRecalc
_cellsToInvalidateNonoverflowingAfterRecalc
_conditionalStyleFormulaOwner
_mergeOwner
_categoryOwner
_pivotOwner
_hiddenStatesOwner
_hauntedOwner
_sortOrder
_sortRuleReferenceTracker
_columnRowUIDMap
_cellWillChangeDistributor
_deprecatedProvider
_commentHostingMap
_textImportRecord
_prePivotRowFilterSet
_pencilAnnotationOwner
_tableUID
_fromTableUID
_fromGroupByUID
T@"TSTColumnRowUIDMap",&,N,V_columnRowUIDMap
T@"TSTTableDataStore",&,N,V_dataStore
TQ,N,V_presetIDForUpgrade
T@"TSTConditionalStyleFormulaOwner",&,N,V_conditionalStyleFormulaOwner
T@"TSWPStorage",&,N,V_deprecatedProvider
T@"NSMapTable",R,N,V_commentHostingMap
TQ,R,N,V_lastArchivedAppVersion
T^v,R,N,V_pivotValueTypesByColumn
T^v,R,N,V_pivotDateGroupingTypesByColumn
T@"TSTTableInfo",N,V_tableInfo
T@"TSTTableTranslator",R,N,V_identityTranslator
TB,N,V_isAPivotDataModel
T{TSKUIDStruct=QQ},R,N
T@"TSTTableFilterSet",&,N,V_prePivotRowFilterSet
T@"TSCECalculationEngine",N,V_calcEngine
TB,N,V_wasCut
T{TSKUIDStruct=QQ},N,V_tableUID
T{TSKUIDStruct=QQ},N,V_fromTableUID
T{TSKUIDStruct=QQ},N,V_fromGroupByUID
TS,N,V_localOwnerID
T@"TSTOwnerUidMapper",R,N
T@"NSUUID",R,N
T@"NSString",&,N,V_tableName
TB,N,V_tableNameEnabled
Td,N,V_tableNameHeight
TB,N,V_tableNameBorderEnabled
TB,N,V_repeatingHeaderRowsEnabled
TB,N,V_repeatingHeaderColumnsEnabled
Ti,R,N
T{TSUModelRowIndex=I},N,V_numberOfHeaderRows
T{TSUModelRowIndex=I},N,V_numberOfFooterRows
T{TSUModelColumnIndex=S},N,V_numberOfHeaderColumns
TB,N,V_headerRowsFrozen
TB,N,V_headerColumnsFrozen
TB,N,V_styleApplyClearsAll
T@"TSTTableStylePreset",&,N,V_tableStylePreset
T@"TSTSortRuleReferenceTracker",R,N,V_sortRuleReferenceTracker
T@"TSTMergeOwner",R,N,V_mergeOwner
T@"TSTCategoryOwner",R,N,V_categoryOwner
T@"TSTHiddenStatesOwner",R,N,V_hiddenStatesOwner
T@"TSTPencilAnnotationOwner",R,N,V_pencilAnnotationOwner
T@"TSTPivotOwner",R,N,V_pivotOwner
T@"TSCEHauntedOwner",R,N,V_hauntedOwner
T@"TSTCellDictionary",R,N,V_cellsPendingWrite
T@"TSTConcurrentMutableCellUIDSet",R,N,V_cellsToInvalidateAfterRecalc
T@"TSTConcurrentMutableCellUIDSet",R,N,V_cellsToInvalidateNonoverflowingAfterRecalc
T@"TSTTableSortOrder",C,N,V_sortOrder
T@"TSTStrokeSidecar",&,N
T@"TSTCellWillChangeDistributor",R,N,V_cellWillChangeDistributor
TB,N,V_presetNeedsStrongOwnership
TB,N,V_wasUnarchivedFromAProvidedTable
T@"TSTStructuredTextImportRecord",&,N,V_textImportRecord
TB,N
Td,N,V_defaultRowHeight
Td,N,V_defaultColumnWidth
T@"NSArray",R,N
TQ,R,N,V_archivingCompatibilityVersion
T@"TSTTableStyle",&,N,V_tableStyle
T@"TSTCellStyle",&,N,V_bodyCellStyle
T@"TSTCellStyle",&,N,V_headerRowCellStyle
T@"TSTCellStyle",&,N,V_headerColumnCellStyle
T@"TSTCellStyle",&,N,V_footerRowCellStyle
T@"TSTCellStyle",&,N,V_categoryLevel1CellStyle
T@"TSTCellStyle",&,N,V_categoryLevel2CellStyle
T@"TSTCellStyle",&,N,V_categoryLevel3CellStyle
T@"TSTCellStyle",&,N,V_categoryLevel4CellStyle
T@"TSTCellStyle",&,N,V_categoryLevel5CellStyle
T@"TSTCellStyle",&,N,V_labelLevel1CellStyle
T@"TSTCellStyle",&,N,V_labelLevel2CellStyle
T@"TSTCellStyle",&,N,V_labelLevel3CellStyle
T@"TSTCellStyle",&,N,V_labelLevel4CellStyle
T@"TSTCellStyle",&,N,V_labelLevel5CellStyle
T@"TSWPParagraphStyle",&,N,V_bodyTextStyle
T@"TSWPParagraphStyle",&,N,V_headerRowTextStyle
T@"TSWPParagraphStyle",&,N,V_headerColumnTextStyle
T@"TSWPParagraphStyle",&,N,V_footerRowTextStyle
T@"TSWPParagraphStyle",&,N,V_categoryLevel1TextStyle
T@"TSWPParagraphStyle",&,N,V_categoryLevel2TextStyle
T@"TSWPParagraphStyle",&,N,V_categoryLevel3TextStyle
T@"TSWPParagraphStyle",&,N,V_categoryLevel4TextStyle
T@"TSWPParagraphStyle",&,N,V_categoryLevel5TextStyle
T@"TSWPParagraphStyle",&,N,V_labelLevel1TextStyle
T@"TSWPParagraphStyle",&,N,V_labelLevel2TextStyle
T@"TSWPParagraphStyle",&,N,V_labelLevel3TextStyle
T@"TSWPParagraphStyle",&,N,V_labelLevel4TextStyle
T@"TSWPParagraphStyle",&,N,V_labelLevel5TextStyle
T@"TSWPParagraphStyle",&,N,V_tableNameStyle
T@"TSWPShapeStyle",&,N,V_tableNameShapeStyle
T@"TSTCellStyle",&,N,V_pivotBodySummaryRowCellStyle
T@"TSTCellStyle",&,N,V_pivotBodySummaryColumnCellStyle
T@"TSTCellStyle",&,N,V_pivotHeaderColumnSummaryCellStyle
cellID
cell
formulaSpec
mergeRange
cellValueType
cellHasFormula
cellHasConditionalStyle
cellHasCustomFormat
cellHasCommentStorage
cellIsEmpty
T@"TSTCell",R,N
T@"TSTCellFormulaSpec",R,N
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},R,N
TC,R,N
setCellID:
setCell:
setMergeRange:
setFormulaSpec:
reset
cellIDIsValid
setCellIDIsValid:
cellIsValid
setCellIsValid:
formulaSpecIsValid
setFormulaSpecIsValid:
mergeRangeIsValid
setMergeRangeIsValid:
_cellIDIsValid
_cellIsValid
_formulaSpecIsValid
_mergeRangeIsValid
_cellID
_cell
_formulaSpec
_mergeRange
TB,N,V_cellIDIsValid
TB,N,V_cellIsValid
TB,N,V_formulaSpecIsValid
TB,N,V_mergeRangeIsValid
T{TSUCellCoord=ISBB},N,V_cellID
T@"TSTCell",&,N,V_cell
T@"TSTCellFormulaSpec",&,N,V_formulaSpec
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_mergeRange
maxRow
numRows
isEmpty
maxColumn
initWithRows:shouldUseWideRows:context:
initWithRows:context:
packageLocator
lastSavedInBNC
p_pruneRowCount
_setRowInfo:atTileRowIndex:
rowInfoForTileRowIndex:
populatedRows
pruneEmptyRows
findOrAddRowInfoAtTileRowIndex:
_removeRowInfo:atTileRowIndex:
enumerateRowsAndIndexesWithBlock:
enumerateRowsWithBlock:
rowInfoAtOrAfterTileRowIndex:outTileRowIndex:
cellStorageRefAtColumnIndex:tileRowIndex:
preBNCCellStorageRefAtColumnIndex:tileRowIndex:
setCell:atColumnIndex:tileRowIndex:formatKeys:
insertColumnsAtColumnIndex:numberOfColumns:
removeColumnsAtColumnIndex:numberOfColumns:
moveColumnsAtColumnIndex:numberOfColumns:toDestColumnIndex:
insertRowsAtTileRowIndex:numberOfRows:
_removeRowsAtTileRowIndex:numberOfRows:shiftingContent:
clearRowsAtTileRowIndex:numberOfRows:
shiftUpAtTileRowIndex:count:
shiftUpAndYankBy:
yankRowInfoAtTileRowIndex:
yankRowsAtTileRowIndex:count:
yankRowsAtTileRowIndex:
spliceRowInfo:atTileRowIndex:overwrite:
spliceRows:atTileRowIndex:
swapRowAtTileRowIndex:withRowAtTileRowIndex:
widenAllRowsForUpgrade
assertListRows
setLastSavedInBNC:
rowInfos
setRowInfos:
_storageVersion
_lastSavedInBNC
_shouldUseWideRows
_pruningCount
_rowInfos
T@"NSPointerArray",&,N,V_rowInfos
TS,R,N
T@"NSIndexSet",R,N
TB,N,V_lastSavedInBNC
hasWorkItems
addFittingHeight:forCellID:
addFittingWidth:forCellID:
enumerateFittingHeightsUsingBlock:
enumerateFittingWidthsUsingBlock:
_fittingHeights
_columnToMaxFittingWidths
initWithLocale:
initWithDate:locale:
initWithDateValue:locale:
dateValue
tsceValue
format
displayString
canonicalKeyString
isEqualToCellValue:
compareToCellValue:
initWithArchive:locale:
setPopulatedCustomFormat:
encodeToArchive:
_dateValue
legalRangeControlMinimum:maximum:increment:
defaultCellValueForInteractionType:
defaultRangeControlSpecOfType:
stepperSpecWithMinimum:maximum:increment:
sliderSpecWithMinimum:maximum:increment:
cellSpecFromTSKFormat:
instanceWithArchive:unarchiver:
initWithInteractionType:minimum:maximum:increment:
asRangeControlSpec
recomputedValueFromValue:changed:
valueFromString:locale:
validateFormatAndValue:
tskStepperSliderFormatWithDisplayFormatType:
interactionType
minimum
maximum
increment
legacyDisplayFormatType
_interactionType
_legacyDisplayFormatType
_minimum
_maximum
_increment
Td,R,N,V_minimum
Td,R,N,V_maximum
Td,R,N,V_increment
TI,R,N,V_legacyDisplayFormatType
didAddTableName:forTableUID:
didRemoveTableName:forTableUID:
didChangeTableName:fromTableName:forTableUID:
protocol
cellCoordinates
cellCoordinatesSet
addCellCoordinate:
removeAllCellCoordinates
initWithArchive:
saveToArchive:
_cellCoordinates
_sem
functionSpecList
cellTractRefWithUidTractList:onTable:preserveFlags:rewriteContext:
initWithColumns:rows:tableUID:
initWithCppCellTractRef:
initWithTopLeft:bottomRight:
initWithTopLeft:bottomRight:tableUID:
initWithRangeRef:
initWithCellRefVector:
initWithUidTract:calcEngine:tableUID:
spansAllColumns
setSpansAllColumns:
spansAllRows
setSpansAllRows:
preserveRectangular
setPreserveRectangular:
mixedColumnStartedWithPreserve
setMixedColumnStartedWithPreserve:
mixedRowStartedWithPreserve
setMixedRowStartedWithPreserve:
preserveFlags
setPreserveFlags:
hasTableUID
numColumns
isSingleCell
isSingleCellOrSpanningRange
isRectangularRange
isPreservedColumn:preferStart:
isPreservedRow:preferStart:
preserveFlagsForCoord:preferStart:
setPreserveFlagsOnSubrange:
addColumn:
addRow:
addColumnRange:
addRowRange:
addColumns:
addRows:
removeColumnRange:
removeRowRange:
removeColumns:
removeRows:
columns
rows
setColumns:
setRows:
adjustIndexesBy:
topLeft
bottomRight
boundingRange
boundingRangeRef
setTopLeft:
setBottomRight:
uidTractWithCalcEngine:hostTableUID:
intersectWithCellRect:
intersectWithCellRectIgnoringSpanning:
coordAtColumnOffset:rowOffset:
foreachAnyRef:
foreachCellRect:
foreachRangeRef:
transpose
insertColumnGapsAtIndexes:
insertRowGapsAtIndexes:
collapseOutColumnIndexes:
collapseOutRowIndexes:
fillInColumnGapsUsingIndexes:
fillInRowGapsUsingIndexes:
edgeExpandTractUsingIncludeUidTract:resolver:forRows:isInverse:
edgeExpandUsingMovingUids:tractList:
edgeExpandUsingIndexes:forRows:
expandUsingIndexes:forRows:
cppCellTractRef
setCppCellTractRef:
_cppCellTractRef
T{TSCECellTractRefCore={TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSKUIDStruct=QQ}C{TSUPreserveFlags=C}BBB},N,V_cppCellTractRef
T{TSKUIDStruct=QQ},N
T{TSUPreserveFlags=C},N
initWithContext:geometry:
setGeometry:
childEnumerator
resolverContainerNameForResolver:
nameForResolverContainer:
resolverContainerForName:caseSensitive:
resolverContainerNamesMatchingPrefix:
resolverMatchingName:contextResolver:
resolverMatchingName:contextContainerName:
resolversMatchingPrefix:
isPendingTableNameUniquification
childEnumeratorForUserSearch
childEnumeratorForUserFlags:
modelPathComponentForChild:
acceptVisitor:
registerWithCalcEngineForDocumentLoad:ownerKind:
unregisterFromCalcEngine:
registerLast
formulaOwnerUID
ownerKind
objectToArchiveInDependencyTracker
formulaOwner
loadFromArchive:unarchiver:
pivotTableNameForSourceTable:
localizedDescriptionForProtoIndex:
numberOfRowsForProtoIndex:
numberOfColumnsForProtoIndex:
geometryForPrototypeIndex:withCanvasPoint:
tablePrototypeWithIndex:context:geometry:stylePreset:
tablePrototypeWithIndex:context:geometry:stylePreset:forTableInsertOnly:
tableInfoForTableUID:withCalcEngine:
canPartitionInline
canPartitionForPrinting
pivotDetailTableNameFromSourcePivotTableInfo:pivotSourceCell:
bootstrapPresetsOfKind:inTheme:alternate:
bootstrapPresetsOfKind:inTheme:alternate:reservedCount:
presetKinds
validateNewName:forTable:
performRewritesForInsertedTableInfos:
ensureAllTablesAreRegisteredInDocumentRoot:
upgradeTablesIfNeeded:forDocumentRoot:
upgradeSubOwnerUidForMapperOnCalcEngine:
cellRangeForTableArea:givenTableSize:numberOfHeaderRows:numberOfFooterRows:numberOfHeaderColumns:
tableStyleAreaForCellID:inTableWithHeaderColumns:headerRows:footerRows:totalRows:
tableAreaForCellID:inTableWithHeaderColumns:headerRows:footerRows:totalRows:
displayNameForColumnName:
copyWithContext:
matchesObjectPlaceholderGeometry
setMatchesObjectPlaceholderGeometry:
setPrimitiveGeometry:
clearBackPointerToParentInfoIfNeeded:
isSelectable
layoutClass
repClass
isThemeContent
geometry
parentInfo
setParentInfo:
owningAttachment
setOwningAttachment:
owningAttachmentNoRecurse
isFloatingAboveText
isAnchoredToText
isInlineWithText
isInlineWithTextWithWrap
isAttachedToBodyText
isAllowedToAddCaptionToChildInfo:
uuidPathPrefixComponentsProvider
collaboratorCursorForSelectionPath:
T@"TSDInfoGeometry",C,N
T@"NSObject<TSDInfo>",N
T@"TSPObject<TSDOwningAttachment>",N
T@"TSPObject<TSDOwningAttachment>",R,N
floatingAboveText
TB,R,N,GisFloatingAboveText
anchoredToText
TB,R,N,GisAnchoredToText
inlineWithText
TB,R,N,GisInlineWithText
inlineWithTextWithWrap
TB,R,N,GisInlineWithTextWithWrap
attachedToBodyText
TB,R,N,GisAttachedToBodyText
childInfos
prohibitsModificationToChildren
isMaster
T@"NSArray",R,C,N
searchForAnnotationsWithHitBlock:
enumerateAllAnnotationsInModelWithHitBlock:
continueAnnotationSearch:
commandForReplaceAllWithProvider:
T@"NSSet",R,N
replaceReferencedStylesUsingBlock:
referencedStyles
afterReplacingReferencedStylesSetStylesheet:
referencedStyleWasUpdated:
columnUIDForColumnIndex:
rowUIDForRowIndex:
columnIndexForColumnUID:
rowIndexForRowUID:
columnUIDsForColumnIndexes:
rowUIDsForRowIndexes:
mutableColumnIndexesForUIDs:
mutableRowIndexesForUIDs:
columnIndexesForUIDs:
rowIndexesForUIDs:
columnUIDsForColumnRange:
rowUIDsForRowRange:
columnRangeForUIDs:
rowRangeForUIDs:
columnUIDs
rowUIDs
orderedColumnUidsFromUids:
orderedRowUidsFromUids:
columnUuids
rowUuids
getUUIDBytes:forRowIndex:
getUUIDBytes:forColumnIndex:
rowIndexForUUIDBytes:
columnIndexForUUIDBytes:
UIDSetForIndexes:isRows:
mutableIndexesForUIDSet:isRows:
mutableIndexesForUIDSet:isRows:notFoundUIDs:
firstUidFromUIDSet:isRows:
prunedColumnUIDsFromColumnUIDs:
prunedRowUIDsFromRowUIDs:
cellRangeForUIDRange:
cellUIDRangeForCellRange:
tableRangeCoordinate
hasHiddenRowAtIndex:
hasHiddenColumnAtIndex:
indexOfVisibleRowBeforeRowAtIndex:
indexOfVisibleRowBeforeAndIncludingRowAtIndex:
indexOfVisibleRowAfterRowAtIndex:
indexOfVisibleRowAfterAndIncludingRowAtIndex:
indexOfVisibleColumnBeforeColumnAtIndex:
indexOfVisibleColumnBeforeAndIncludingColumnAtIndex:
indexOfVisibleColumnAfterColumnAtIndex:
indexOfVisibleColumnAfterAndIncludingColumnAtIndex:
anyHiddenRowsInCellRange:
anyHiddenColumnsInCellRange:
hasHiddenColumnsOrRows
numberOfHiddenRows
numberOfHiddenColumns
numberOfUserHiddenRows
numberOfUserHiddenColumns
numberOfHiddenRowsInCellRange:
numberOfUserHiddenRowsInCellRange:
numberOfHiddenColumnsInCellRange:
indexesOfHiddenRowsInCellRange:
indexesOfUserHiddenRowsInCellRange:
indexesOfFilteredRowsInCellRange:
indexesOfCollapsedRowsInCellRange:
indexesOfVisibleRowsInCellRange:
indexesOfVisibleRowsInCellRegion:
indexesOfUserVisibleRowsInCellRange:
indexesOfVisibleRowsInRowRange:
indexesOfHiddenColumnsInCellRange:
indexesOfUserHiddenColumnsInCellRange:
indexesOfFilteredColumnsInCellRange:
indexesOfVisibleColumnsInCellRange:
indexesOfVisibleColumnsInCellRegion:
indexesOfVisibleColumnsInColumnRange:
anyHiddenRowsInCellRange:forAction:
hasHiddenRowAtIndex:forAction:
hasHiddenColumnAtIndex:forAction:
hidingActionForRowAtIndex:
hidingActionForColumnAtIndex:
hideRowAtIndex:forAction:
showRowAtIndex:forAction:
hideColumnAtIndex:forAction:
showColumnAtIndex:forAction:
numberOfGrandTotalColumns
numberOfFooterOrGrandTotalRows
mergesIntersectingRange:
mergesIntersectingCellRegion:
hasRangeSpanningRowsForCellRange:
expandCellRangeToCoverMergedCells:
expandCellRegionToCoverMergedCells:
textIsVerticalAtCharIndex:
autoListRecognition
autoListTermination
textIsLinked
preventsComments
preventsChangeTracking
supportsMultipleColumns
contentWritingDirection
storageChangesInvalidateWrap
supportsVerticalTextLayoutInChildStorages
supportsDropCapsInChildStorages
Tq,R,N
initWithContext:geometry:rows:columns:stylePreset:styles:
initWithContext:geometry:rows:columns:stylePreset:
initWithContext:geometry:rows:columns:
initForTestingWithContext:rows:columns:
initWithContext:otherTableInfo:
initPivotTableWithContext:sourceTableInfo:sourceBodyRange:sourceHeaderRowRange:
initPivotTableWithContext:sourceTableInfo:sourceBodyRange:sourceHeaderRowRange:optionalDataModel:
initPivotTableWithContext:sourceTableInfo:
hasUsefulPivotSourceCellsInBodyRange:
initAsDetailTableWithContext:sourcePivotTableInfo:pivotSourceCell:
initWithContext:fromSourceInfo:cellRegion:waitForCalcEngine:flattenCategories:isSnapshot:
_initWithContext:flatteningFromComplexInfo:cellRegion:waitForCalcEngine:flatteningOptions:isSnapshot:
_initWithContext:fromSourceInfo:cellRegion:tableModel:waitForCalcEngine:formulaCoordSpace:
releaseLayoutEngine
setupTableModelForPrototypeIndex:forTableInsertOnly:
p_setupTableModelforNewForm
p_setupTableModelforStockSwatch
p_setupTableModelforStockPrototype
p_popupItemsForStrings:
p_setPopupMenuOnCell:withItems:andSelectedIndex:
p_setFormulaWithSymbolCellCoord:andAttributeCellCoord:atCellID:
p_setFormulaWithSymbolString:atCellID:
p_setFormula:atCellID:
p_setFillOnCell:positive:
p_fillResourceWithFilename:
p_positiveImageFill
p_negativeImageFill
additionalObjectsToCopy
componentRootObject
shiftGeometryToIncludeTableNameHeight
layoutEngineEffectiveTableNameHeight
isSafeToConvertToImage
isSafeToConvertToImageForImagePaste
isSafeToConvertToAttributedString
isSafeToConvertToText
tableModelClass
baseTableModel
resolver
supportsHyperlinks
partitioner
clearPartitioner
layoutEngine
p_layoutEngineCreateIfNeeded:
elementKind
supportsAttachedComments
supportsRichTextUndoAtCellID:
isReimportable
isNewlyImported
p_updateStorageParentInfoForModels
nsFilteringTableUID
pivotSourceTableUID
pivotSourceNSTableUID
pivotSourceTableName
pivotSourceTableInfo
pivotTableCanBeRefreshed
pivotSourceIsRangeBased
pivotSourceRangeName
filteringTableUID
minNumberOfHeaderColumns
maxNumberOfHeaderColumns
groupSortOrder
setGroupSortOrder:
isRegisteredWithCalcEngine:
registerWithCalcEngine:
performReadForOneOffFormulaEvaluation:forCellCoord:
notifyTableOfNewResults
filteringRange
filteringBodyRange
filteringBodyRowRange
filteringBaseColumnRange
filteringColumnNameForColumnIndex:
filteringColumnNameForBaseColumnIndex:
filteringDisplayColumnNameForBaseColumnIndex:
filterSet
setFilterSet:
p_setFilterSet:
chunkCountForTextureDeliveryStyle:animationFilter:
textureDeliveryStylesLocalized:animationFilter:
textureDeliveryStyleFromDeliveryString:
requiresStagesBuildingInReverse
suppliesFinalTextures
p_bakeMixedCellStrokesIntoTable:outgoingTable:incomingTable:fraction:
setContentWritingDirection:
scaleInfoGeometry:
canAspectRatioLockBeChangedByUser
mergedContainedStorages
infoForSelectionPath:
presetKind
shouldCancelScrollingToSelectionPath:forChanges:
setInsertionCenterPosition:
geometryForRTLTableWithGeometry:
contentsAreRightToLeft
allowsCaption
canCommentInCaptionOrTitle
allowsTitle
typeName
removeAnnotationsFromRowsAtIndexes:
removeAnnotationsFromColumnsAtIndexes:
setHasReference:
willCopyWithOtherDrawables:
didCopy
p_initializeDefaultHeight:andWidth:
didReplaceTextsInStoragesWithPlaceHolderString
prepareForPasteWithSourceOffset:bakeFormulas:
isEquivalentForCrossDocumentPasteMasterComparison:objectComparisonBlock:
hasCommentAtCellID:
setCommentStorage:atCellUID:
removeCommentStorageAtCellUID:
postCommentNotificationForStorage:atCellID:notificationKey:
commentHostingAtCellID:forCommentStorage:
commentHostingAtCellID:
allAnnotations
upgradeDuringDocumentUpgradeIfNeeded:
setDrawableIsBeingCopied:
bakeFormulas
writingDirectionForCellwithTableDefault:
applyWritingDirection:toCell:cellID:
modifiedTextPropertiesForCategoryOrPivotCellAtCellID:wraps:padding:alignment:
getTextPropertiesWithCell:cellID:wraps:alignment:verticalAlignment:padding:
notifyAboutStructuredTextImportState
duplicateFilterSet
duplicateFilterSetInUidForm
needsFilterFormulaRewriteForImport
setNeedsFilterFormulaRewriteForImport:
enableFilterSet:
setFilterSetType:
hasActiveFilters
filterSetUpdated
dirtyFilterState
hasFilterRulesInBaseColumns:
hasFilterRulesAffectingInsertRows
allBodyValuesAsPregArgDataListForColumnIndex:
canTranspose
useBandedFill
bandedFillObject
parseNumberFromTableName:
hasUntitledTableNameFormat
chooseUniqueNameInContainer:forPaste:
chooseUniqueNameInContainer:forPaste:needsNewName:
chooseUniqueNameInContainer:forPaste:needsNewName:avoidNames:
cellIDIsLegal:
cellRegionForTableStyleArea:
tableAreaForCellID:
tableAreaForDroppingRowAtIndex:
tableStyleAreaForCellUID:
tableStyleAreaForCellID:
tableAreasForCellRange:
getDefaultCell:forCellID:
cellExistsAtCellID:
getCell:atCellID:suppressCellBorder:
getCell:atCellID:
cellAtCellID:
hasFormulaAtCellID:
hasFormulaAtCellUID:
convertFormulasToUidForm:atCellID:preserveHostCell:
formulaAtCellID:
setCell:atCellCoord:
setCell:atCellUID:ignoreFormula:clearImportWarnings:formulaReplacer:
setCell:atCellUID:ignoreFormula:clearImportWarnings:
setCellsWithCellMap:ignoreFormulas:skipDirtyingNonFormulaCells:
isValidForInteraction
flattenGroupValuesIfNeededForCell:viewCellCoord:summaryAndLabelRows:categoryColumns:
cellMapForRegion:uidBased:suppressMergeContent:useCategoriesWildcards:
concurrentCellMapForRegion:suppressMergeContent:gatherCellBorders:
getCell:atCellID:holdingReadLockWithAccessController:
cellValueTypeAtCellID:
cellValueTypeAtCellUID:
setCellStyle:ofRowAtUID:
setTextStyle:ofRowAtUID:
setCellStyle:ofColumnAtUID:
setTextStyle:ofColumnAtUID:
defaultCellStyleForCellID:
defaultCellStyleForCellID:useSoftDefault:outSource:
defaultTextStyleForCellID:
defaultTextStyleForCellID:useSoftDefault:outSource:
cellStyleAtCellID:isDefault:
textStyleAtCellID:isDefault:
cellStyleAtCellUID:isDefault:
textStyleAtCellUID:isDefault:
defaultStylesForCellID:useSoftDefault:outCellStyle:outTextStyle:
conditionalStyleSetAtCellID:
noRuleConditionalStyleSet
rowNameForCellID:restrictToBodyRange:
columnNameForColumnIndex:
columnNameForColumnIndex:withFallbackFormat:
pivotDataLocalizedColumnNameAtDataColumnIndex:
pivotHeaderColumnDisplayNameAtIndex:
pivotLeadingColumnDisplayNameAtIndex:
pivotHeaderRowDisplayNameAtIndex:
pivotLeadingRowDisplayNameAtIndex:
cellRangeName:usedSymbolicName:
chromeLabelForColumn:
chromeLabelForRow:
chromeLabelForCellID:
numberOfCells
cellIDLeftOfCellID:
cellIDRightOfCellID:
cellIDAboveCellID:
cellIDBelowCellID:
bodyRangeForLowestLevelGroupEnclosingCellAtCellID:
categoryColumnRange
baseColumnRange
insertRowsAtIndex:count:addBefore:
insertColumnsAtIndex:count:addBefore:
insertRowsAtIndex:uids:metadatas:tableArea:
removeRowsAtIndexes:
importDeferredRemoveGroupingRowsAtIndexes:
processDeferredImportActions
hasDeferredImportActions
removeColumnsAtIndexes:
moveRowRange:toRowIndex:
moveColumnRange:toColumnIndex:
isCellRangeHidden:
numberOfVisibleBodyRows
numberOfUserVisibleBodyRows
numberOfVisibleBaseBodyRows
numberOfVisibleBodyColumns
stringAtCellID:optionalCell:
characterFillAtCellID:optionalCell:
cellValueViewStringAtCellID:optionalCell:
labelValueViewStringAtCellID:optionalCell:
mergeCellRange:
unmergeCellRange:
mergeRangeAtCellID:
mergeOriginForCellID:
mergeRangesPartiallyIntersectCellRange:
mergeRangesPartiallyIntersectCellRegion:
hasMergeRangeSpanningRowsForCellRange:
isSingleCellOrMergeRange:
hasMergeFragmentAtCellID:
hasMergeRangesIntersectingCellRegion:
mergedGridIndicesForDimension:
regionForValueOrCommentCellsInRange:
hasMergeRanges
shrinkReturningInverseForRegion:
removeReturningInverseForRegion:
performActionReturningInverse:
mergeActionForRegion:
mergeActionForRegion:nonOriginPartialsOnly:
enumerateMergesIntersectingCellRegion:usingBlock:
mergeRangesIntersectingRange:
mergeRangesIntersectingCellRegion:
mergeRangesAndCrumbsIntersectingRange:
isValidMergeRange:
backgroundFill
bodyFill
headerColumnsFill
headerRowsFill
footerRowsFill
fillForColumn:
strokeExporterReturningDefaultStrokes:
_setCellBordersFlatteningFromComplexInfo:sourceRegion:
valueToUseForSummaryCellFormulaError
getValue:atCellID:fetchRichTextAttributesIfPlainText:
cellValueFromCell:atCellID:
hasCellID:
cellRegionWithConditionalStyleMatchingCell:
reassignPasteboardCustomFormatKeys
registerAllFormulasWithCalculationEngine:
registerAllFormulasWithCalculationEngine:wasCrossDocumentPaste:wasUndo:
referenceToHiddenStateFromRow:toRow:
referenceToHiddenStateFromColumn:toColumn:
applyCollapseExpandState:outUndoState:
minPopulatedCellRange
findChartableRangesFromTableRange:getBodyRange:headerColumnRange:headerRowRange:
cellIDForCellContainingRichTextStorage:
cellUIDForCellID:
cellIDForCellUID:
writeCellIDsInCellUIDList:toVector:prunedCellUIDs:
convertCellUIDLookupList:toCellRangeVector:prunedSummaryCellUIDs:
cellUIDListFromCellRegion:
cellUIDListFromCellRegion:useCategoriesWildcards:
cellRegionFromCellUIDList:
cellRegionFromCellUIDList:includeLabelsWithSummaries:didAddLabels:
cellRegionFromCellUIDLookupList:
cellRegionFromCellUIDLookupList:includeLabelsWithSummaries:didAddLabels:
p_cellRegionFromWildcardCellUIDs:includeLabelsWithSummaries:didAddLabels:
cellUIDRegionFromCellRegion:
cellRegionFromCellUIDRegion:
cellUIDForCellID:useCategoriesWildcards:
setCategoryOrder:
setSummaryModel:
cellRegionForUIDRange:
cellTractRefForUIDRectRef:
getDefaultCell:forCellUID:
getCell:atCellUID:
getCell:atCellUID:suppressCellBorder:
textStyleForCellWithEmptyStyleAtCellUID:isDefault:
fromTableCoordMapperForPasteboard
isGroupedForRows
isGroupedForColumns
groupByForRows
groupByForColumns
numberOfRowLevels
numberOfColumnLevels
maxRowLevel
maxColumnLevel
filteringTableModel
filteringTableTranslator
pivotSizeClass
pivotDataModelSizeClass
checkState
checkStateForArchiving:
_correctAndCheckStateSuppressingAssertions:
setGroupByUid:
applyGroupingColumns:
setIsCategoryEnabled:
isEmptyPivot
startPivotChanges
updatePivotDataModel:pivotDataRefreshUID:pivotDataRefreshTimestamp:uidBodyTract:
applyPivotWithColumns:rows:aggregates:flatteningDimension:optionsMap:pivotRowColumnRuleChangeUid:pivotAggregateRuleChangeUid:
handlePivotSorting:
resetCellsForNewPivotRules
resetPivotOrder
commitPivotChanges
createDetailTableForPivotTableCell:
isSummaryRow:
isLabelRow:
isSummaryOrLabelRow:
groupLevelAtSummaryRow:
groupLevelAtLabelRow:
groupLevelAtSummaryColumn:
groupLevelAtRow:
numberOfCategoryLevels
numberOfCategoryColumns
numberOfBaseColumns
numberOfBaseRows
numberOfBaseHeaderColumns
numberOfBaseHeaderRows
numberOfBaseFooterRows
numberOfBaseBodyRows
numberOfChromeColumns
numberOfChromeRows
numberOfChromeHeaderColumns
numberOfChromeHeaderRows
numberOfChromeFooterRows
numberOfGroupLevelsShowingLabelsUnderGroupAtIndex:
categoryColumnIndex
populatedCategoryGroupLevelsInColumn:
isCategoryColumn:
isSummaryColumn:
isSummaryCell:
isCategoryLabelCell:
isCategoryColumnUneditableCell:
isCategoryGroupValueCell:
isCategoryGroupValueLabelCell:
isCategoryGroupingColumn:
isCategoryAnyKindOfCell:
isPivotAnyKindOfCell:
isPivotTrailingAligned:
isPivotUnwrapped:
isPivotGrandTotalRow:
isPivotGrandTotalColumn:
isPivotLeadingRow:
isPivotLeadingColumn:
hasHeaderColumnForAggregateNames
hasHeaderRowForAggregateNames
columnIndexForGroupingColumn:
allRowGroupUIDs
allColumnGroupUIDs
allRowUIDsAtGroupLevel:withFilter:
allColumnUIDsAtGroupLevel:withFilter:
indexesForRowsContainedByGroupUIDs:
indexesForColumnsContainedByGroupUIDs:
collapseSummaryGroupUIDs:
expandSummaryGroupUIDs:
isGroupingRowCollapsed:
isGroupingRowCollapsedAndVisible:
isGroupingColumnCollapsed:
isGroupingColumnCollapsedAndVisible:
indexesForSummaryRowsInRegion:
hasSummaryRowsInRegion:
indexesForSummaryRowsAtGroupLevel:inRegion:
indexesForSummaryRowsAtGroupLevel:
indexesForSummaryRowsUpToGroupLevel:omitGroupsWithUids:
indexesForSummaryRowsFromGroupLevel:toGroupLevel:
indexesForSummaryColumnsAtGroupLevel:
indexesForSummaryColumnsFromGroupLevel:toGroupLevel:
indexesForSummaryColumns
indexesForSummaryColumnsInRegion:
indexesForSummaryRows
indexesForLabelRowsInRegion:
indexesForLabelRowsAtGroupLevel:inRegion:
indexesForLabelRowsAtGroupLevel:
indexesForLabelRowsUpToGroupLevel:omitGroupsWithUids:
indexesForLabelRows
indexesForSummaryAndLabelRows
indexesForSummaryAndLabelRowsInRegion:
indexesForLeadingRows
indexesForLeadingRowsInRegion:
indexesForLeadingRowsAtGroupLevel:
indexesForLeadingSummaryRowsAtGroupLevel:
indexesForLeadingColumns
indexesForLeadingColumnsInRegion:
indexesForLeadingColumnsAtGroupLevel:
indexesForLeadingSummaryColumnsAtGroupLevel:
indexesForGrandTotalRows
indexesForGrandTotalColumns
rowAggregateGroupSize
columnAggregateGroupSize
indexesForNonSummaryBodyRows
indexesForBodyAndFooterRows
indexesForNonSummaryBodyColumns
indexesForCategoryColumns
indexesForCategoryColumnsInRegion:
indexesForGroupingColumns
indexesForGroupingColumnsInRegion:
rowRangeUnderSummaryOrLabelRow:
indexesForBodyRowsInGroupWithRowAtIndex:
regionSubtractingCategoryColumnsAndRows:
columnDisplayNameForCategoryLevel:
groupingColumnLevelCountForColumn:
groupingTypesAreUniqueForColumn:
hasGroupingArrowAtCellID:
groupingArrowStateAtCellID:
hasGroupingArrowInCellRegion:
peerCellRegionForCellRegion:
baseTableUID
isCategorized
hasCategoryRules
isGroupOrParentsCollapsed:dimension:
isGroupCollapsedAndVisible:dimension:
categoryRefReferringToCellRef:
groupLevelForGroupUid:
aggregateTypeForColumnUID:atGroupLevel:
setAggregateType:forColumnUID:atGroupLevel:
shouldDisplaySummaryLabelRowAtGroupLevel:
summaryRowHeightAtCategoryLevel:
setSummaryRowHeight:atCategoryLevel:
labelRowHeightAtCategoryLevel:
setLabelRowHeight:atCategoryLevel:
categoryColumnWidth
setCategoryColumnWidth:
willMakeGroupingChangesInRowUIDs:
processRowsWithPendingGroupingChangesAndReturnAffectedCellRegion
resetViewMap
commandForSettingTableDirection:icc:
verifyPivotTableConnections
editorClass
iteratorClass
setPartitioner:
setLayoutEngine:
summaryModel
groupByUid
rowUIDsWithPendingGroupingChanges
setRowUIDsWithPendingGroupingChanges:
formulaCoordSpace
setFormulaCoordSpace:
dragAndDropDetails
setDragAndDropDetails:
isCopyContainingCategoryColumn
setIsCopyContainingCategoryColumn:
hasReference
overrideLayoutHint
setOverrideLayoutHint:
categoryOrder
isAPivotTable
pivotDataModel
pivotOrder
hiddenStates
setHiddenStates:
hiddenStatesUid
setHiddenStatesUid:
translator
setTranslator:
setFromTableCoordMapperForPasteboard:
wasRemovedFromDocument
migratingStylesOnly
setMigratingStylesOnly:
rowUIDsForImportedGroupingRows
setRowUIDsForImportedGroupingRows:
documentIsClosing
setDocumentIsClosing:
tableTranslatorBaseMapForPasteboard
setTableTranslatorBaseMapForPasteboard:
tableTranslatorViewMapForPasteboard
setTableTranslatorViewMapForPasteboard:
archivedLayoutEngineBundle
setArchivedLayoutEngineBundle:
_tableModel
_noRuleConditionalStyleSet
_needsFilterSetUpdated
_resetGroupingsOnUpgrade
_isCopyContainingCategoryColumn
_hasReference
_isAPivotTable
_wasRemovedFromDocument
_migratingStylesOnly
_documentIsClosing
_partitioner
_layoutEngine
_summaryModel
_rowUIDsWithPendingGroupingChanges
_formulaCoordSpace
_dragAndDropDetails
_overrideLayoutHint
_categoryOrder
_pivotDataModel
_pivotOrder
_hiddenStates
_translator
_fromTableCoordMapperForPasteboard
_rowUIDsForImportedGroupingRows
_archivedLayoutEngineBundle
_groupByUid
_hiddenStatesUid
_tableTranslatorBaseMapForPasteboard
_tableTranslatorViewMapForPasteboard
T@"TSCEMutableUIDSet",&,N,V_rowUIDsWithPendingGroupingChanges
TB,N,V_migratingStylesOnly
T@"TSCEMutableUIDSet",&,N,V_rowUIDsForImportedGroupingRows
TB,N,V_documentIsClosing
T{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}},N,V_tableTranslatorBaseMapForPasteboard
T{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}},N,V_tableTranslatorViewMapForPasteboard
T@"TSTArchivedLayoutEngineBundle",&,N,V_archivedLayoutEngineBundle
Tq,N,V_formulaCoordSpace
T@"NSDictionary",&,N,V_dragAndDropDetails
TB,N,V_isCopyContainingCategoryColumn
TB,N,V_hasReference
T@"TSTTablePartitioner",&,N,V_partitioner
T@"TSTLayoutHint",&,N,V_overrideLayoutHint
T@"TSTLayoutEngine",&,N,V_layoutEngine
categorized
TB,R,N,GisCategorized
T@"TSCECalculationEngine",N
T@"TSTSummaryModel",R,N,V_summaryModel
T@"TSTColumnRowUIDMap",R,N,V_columnRowUIDMap
T@"TSTCategoryOrder",R,N,V_categoryOrder
TB,R,N,V_isAPivotTable
T@"TSTTableModel",R,N,V_pivotDataModel
T@"TSTTableModel",R,N
T@"TSTTableTranslator",R,N
T@"TSTPivotRowColumnOrder",R,N,V_pivotOrder
T@"TSTPivotOwner",R,N
T@"TSTGroupBy",R,N
TI,N
Td,N
T@"NSString",&,N
Tq,N
T@"TSTTableStylePreset",&,N
T@"TSDFill",R,N
T@"TSTConcurrentMutableCellUIDSet",R,N
T@"TSTConditionalStyleFormulaOwner",R,N
T@"TSTCategoryOwner",R,N
T@"TSTHiddenStatesOwner",R,N
T@"TSTHiddenStates",&,N,V_hiddenStates
T@"TSTTableInfo",R,N
T@"TSTPencilAnnotationOwner",R,N
T@"TSTTableFilterSet",C,N
T{TSKUIDStruct=QQ},N,V_hiddenStatesUid
T@"TSTTableGroupSortOrderUID",N
T@"TSTTableSortOrder",C,N
T@"TSTSortRuleReferenceTracker",R,N
T@"TSTStrokeSidecar",R,N
T@"TSTCellWillChangeDistributor",R,N
T@"TSTTableTranslator",&,N,V_translator
T@"TSCECoordMapper",&,N,V_fromTableCoordMapperForPasteboard
T@"TSTStructuredTextImportRecord",&,N
reimportable
TB,R,N,GisReimportable
newlyImported
TB,R,N,GisNewlyImported
TB,R,N,V_wasRemovedFromDocument
T@"TSTGroupBy",&,N,V_groupBy
T{TSUChromeColumnIndex=S},R,N
T{TSUChromeRowIndex=I},R,N
T{TSKUIDStruct=QQ},N,V_groupByUid
T@"TSDInfoGeometry",C,D,N
T@"NSObject<TSDInfo>",D,N
T@"TSPObject<TSDOwningAttachment>",D,N
T@"TSPObject<TSDOwningAttachment>",R,D,N
TB,R,D,N,GisFloatingAboveText
TB,R,D,N,GisAnchoredToText
TB,R,D,N,GisInlineWithText
containsProperty:
objectForProperty:
floatValueForProperty:
boxedObjectForProperty:
intValueForProperty:
doubleValueForProperty:
CGFloatValueForProperty:
p_postCommentNotificationFromDiff:inverseDiff:cellID:
applyCellDiffMap:migrationHelper:updateProperties:
applyCellMap:outPrunedCellMap:outInverseCellMap:options:stylesContainer:
applyCellDiff:atCellUID:migrationMap:inverseCellDiff:defaultCellStyle:defaultTextStyle:
cellAfterApplyDiff:toCell:atCellUID:migrationMap:inverseCellDiff:concurrentStylesheet:defaultCellStyle:defaultTextStyle:
p_performCommentStorageDOLC:
applyConcurrentCellMapToBaseTable:options:requestInverseMap:requestPruneMap:stylesContainer:migrationHelper:
allowUnarchivingObjectClass:
cellIteratorWithRange:flags:searchFlags:
iterateCellsAndTerminateWithIterator:usingBlock:
iterateCellsInRange:flags:searchFlags:usingBlock:
newCellValueFromTSCEValue:withLocale:
cellValueWithArchive:locale:
compare:
updateWithCustomFormatList:
encodeCellValueToArchive:
valueType
setValueType:
locale
setLocale:
_valueType
_locale
Tc,N,V_valueType
T@"TSULocale",&,N,V_locale
initWithMergeList:
count
addRange:
enumerateRangesUsingBlock:
mergeListWrapperWithRangesPassingTest:
regionForList
_mergeList
TB,R
initWithCalcEngine:viewTractRef:
initWithCalcEngine:viewRangeRef:preserveFlags:
initWithCalcEngine:chromeRangeRef:preserveFlags:
initWithCalcEngine:baseRangeRef:preserveFlags:
initWithCalcEngine:tableUID:uidRange:preserveFlags:
tableModel
uidRange
grabViewUidMapper
convertViewTractRefToUID
convertUIDRefToViewTractRef
excludeSummaryAndLabelRows
isViewRectangle
isBaseRectangle
baseToViewPreserveFlagsAreInverted
viewPreserveFlags
setViewPreserveFlags:
setViewRangeRef:preserveFlags:
setChromeRangeRef:preserveFlags:
setBaseRangeRef:preserveFlags:
baseRangeRef
viewRangeRef
baseRangeRefs
viewRangeRefs
baseTractRef
viewTractRef
chromeTractRef
viewTractRefIfFullyValid
viewTopLeftCoord
viewBottomRightCoord
baseTopLeftCoord
baseBottomRightCoord
viewCellRegionWithRangeContext:
isValidReference
uidTractListWithPurpose:
includeUidTractList
area
singleReferencedColumnUid
basePreserveFlags
setBasePreserveFlags:
needsUidRectUpgrade
setNeedsUidRectUpgrade:
chromeRangeRef
setChromeRangeRef:
_uidRange
_lastKnownViewTractRef
_viewMapVersionCounter
_needsUidRectUpgrade
_viewUidMapper
_basePreserveFlags
_chromeRangeRef
T@"TSCECalculationEngine",W,N,V_calcEngine
TC,N,V_basePreserveFlags
TC,N
T{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}},R,N
T{TSKUIDStruct=QQ},R,N,V_tableUID
T{TSUViewCellCoord={TSUCellCoord=ISBB}},R
T{TSUModelCellCoord={TSUCellCoord=ISBB}},R
TB,N,V_needsUidRectUpgrade
T{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}},N,V_chromeRangeRef
iterateCellsUsingBlock:
nextCellData
getNextCellData:
terminate
initWithTableInfo:tableModel:region:flags:searchFlags:clampingRange:
initWithTableInfo:region:flags:searchFlags:clampingRange:
initWithTableInfo:flags:searchFlags:
initWithTableInfo:range:flags:searchFlags:
initWithTableInfo:region:flags:searchFlags:
initWithTableModel:baseRegion:flags:searchFlags:baseClampingRange:
p_getNextCellID
p_updateDataForMergeAtCellID:
p_updateDataForCellID:
returnCellContents
setTableModel:
region
cellData
setCellData:
returnEmptyCells
setReturnEmptyCells:
returnOneEmptyCell
setReturnOneEmptyCell:
terminateRegionIterator
setTerminateRegionIterator:
returnOnlyFormulas
setReturnOnlyFormulas:
returnMergeRanges
setReturnMergeRanges:
contentIterator
setContentIterator:
strokeIterator
setStrokeIterator:
regionIterator
setRegionIterator:
dataStoreIterator
setDataStoreIterator:
rowForColumnIndexesWithMerges
setRowForColumnIndexesWithMerges:
_columnIndexToMergeRangeMap
_returnCellContents
_returnEmptyCells
_returnOneEmptyCell
_terminateRegionIterator
_returnOnlyFormulas
_returnMergeRanges
_rowForColumnIndexesWithMerges
_region
_cellData
_contentIterator
_strokeIterator
_regionIterator
_dataStoreIterator
T@"TSTTableInfo",&,N,V_tableInfo
T@"TSTTableModel",&,N,V_tableModel
T@"TSTCellRegion",R,N,V_region
T@"TSTMutableCellIteratorData",&,N,V_cellData
TB,N,V_returnEmptyCells
TB,N,V_returnOneEmptyCell
TB,N,V_terminateRegionIterator
TB,N,V_returnOnlyFormulas
TB,N,V_returnMergeRanges
T@"<TSTCellRegionIterating><TSTMutableCellIteratorDataUpdating>",&,N,V_contentIterator
T@"<TSTCellRegionIterating><TSTMutableCellIteratorDataUpdating>",&,N,V_strokeIterator
T@"<TSTCellRegionIterating>",&,N,V_regionIterator
T@"<TSTCellRegionIterating><TSTMutableCellIteratorDataUpdating>",&,N,V_dataStoreIterator
TI,N,V_rowForColumnIndexesWithMerges
TB,R,N,V_returnCellContents
properties
propertiesAllowingNSNull
nonEmphasisCellProperties
categoriesCellProperties
p_regionStringForTableStyleArea:
styleIDForPreset:andTableStyleArea:
textStyleIDForPreset:andTableStyleArea:
p_initBodyRegionPropertyMap:presetID:colors:alternate:
p_initHeaderRowRegionPropertyMap:presetID:colors:alternate:
p_initHeaderColumnRegionPropertyMap:presetID:colors:alternate:
p_initFooterRowRegionPropertyMap:presetID:colors:alternate:
initDefaultPropertyMap:forTableStyleArea:presetID:colors:alternate:
loadCellStylePropertiesIntoPropertyMap:fromArchive:unarchiver:
saveCellStylePropertiesToArchive:archiver:
loadCellStyleFromArchive:unarchiver:
saveCellStyleToArchive:archiver:
targetSizeForImageData:associatedHint:
upgradeIfNecessary
inString
tokenType
string
argumentSpec
insertFormulaText:includeWhitespace:
formulaPlainText
recordExpression:data:
expressionsMatchingCSENodeData:forNode:
expressionsIdenticalToExpression:
expressionSize:
_nodesToData
_hashesToNodeSets
_retainedExpressions
initWithTableInfo:
flushCachedIndexSets
groupBySet
minRowLevel
minColumnLevel
maxVisibleRowLevel
maxVisibleColumnLevel
summaryCellVendor
aggregateFormulaOwner
resetViewMapAndNotify
coordinateMapper
p_columnRowTypeForColumnIndex:
p_columnRowTypeForRowIndex:
p_applyViewRowIndex:toSummaryUsingBlock:toBaseUsingBlock:toBeyondBoundsUsingBlock:
p_applyViewColumnIndex:toSummaryUsingBlock:toBaseUsingBlock:toBeyondBoundsUsingBlock:
p_applyViewCellCoord:toSummaryUsingBlock:toBaseUsingBlock:
metadataForColumnIndex:
rowGroupLevelAtRow:outAggregateIndex:
columnGroupLevelAtColumn:outAggregateIndex:
aggregateIndexForColumnIndex:
aggregateIndexForRowIndex:
i_populateIndexesForSummaryColumns
i_indexesForSummaryColumnsAtGroupLevel:
i_populateIndexesForLeadingColumns
i_indexesForLeadingColumnsAtGroupLevel:
i_populateIndexesForLeadingSummaryColumns
i_indexesForLeadingSummaryColumnsAtGroupLevel:
i_indexesForSummaryRowsAtGroupLevel:
i_populatePivotCachedIndexSetsIfNeeded
cachedPivotIndexSetsAreValid
setCachedPivotIndexSetsAreValid:
pivotCachedIndexesUnfairLock
setPivotCachedIndexesUnfairLock:
cachedIndexesForSummaryColumns
setCachedIndexesForSummaryColumns:
cachedSummaryColumnIndexesAtLevels
setCachedSummaryColumnIndexesAtLevels:
cachedIndexesForLeadingColumns
setCachedIndexesForLeadingColumns:
cachedLeadingColumnIndexesAtLevels
setCachedLeadingColumnIndexesAtLevels:
cachedLeadingSummaryColumnIndexesAtLevels
setCachedLeadingSummaryColumnIndexesAtLevels:
_cachedPivotIndexSetsAreValid
_pivotCachedIndexesUnfairLock
_cachedIndexesForSummaryColumns
_cachedSummaryColumnIndexesAtLevels
_cachedIndexesForLeadingColumns
_cachedLeadingColumnIndexesAtLevels
_cachedLeadingSummaryColumnIndexesAtLevels
TB,N,V_cachedPivotIndexSetsAreValid
T{os_unfair_lock_s=I},N,V_pivotCachedIndexesUnfairLock
T@"NSIndexSet",&,N,V_cachedIndexesForSummaryColumns
T@"NSMapTable",&,N,V_cachedSummaryColumnIndexesAtLevels
T@"NSIndexSet",&,N,V_cachedIndexesForLeadingColumns
T@"NSMapTable",&,N,V_cachedLeadingColumnIndexesAtLevels
T@"NSMapTable",&,N,V_cachedLeadingSummaryColumnIndexesAtLevels
flush
detailsWithSymbol:attribute:
initWithSymbol:attribute:
isEqualToStockDetails:
symbol
setSymbol:
attribute
setAttribute:
_symbol
_attribute
T@"NSString",&,N,V_symbol
Tq,N,V_attribute
rowInfoWithTileRowIndex:wideOffsets:
rowInfoFromArchive:
accumulateCurrentCellsConcurrentlyAtColumns:usingCellCreationBlock:
lockForConcurrentAccess
unlockForConcurrentAccess
maxColumnIndex
initWithTileRowIndex:wideOffsets:
initFromArchive:
_archivedColumnCount
encodeToArchive:archiver:
usesWideOffsets
convertToWideOffsets
cellStorageRefAtIndex:
preBNCStorageRefAtIndex:
cellIndexAtOrAfterIndex:
cellIndexAtOrBeforeIndex:
_replaceCellAtIndex:withCell:formatKeys:
_insertCell:atIndex:formatKeys:
_removeCellAtIndex:
setCell:atIndex:formatKeys:
insertColumnsAtIndex:count:
moveColumnsFromIndex:toIndex:count:
enumerateStoragesInColumnRange:withBlock:
enumerateStoragesInColumnRange:getPreBNC:withBlock:
searchCellStorageRefAtColumnIndex:searchMask:
bncStorageBufferExists
validateWithResult:
tileRowIndex
setTileRowIndex:
_currentData
_preBNCData
_maxColumnIndexPrivate
_maxColumnIndexIsValidPrivate
_unfairLock
_tileRowIndex
_cellCount
TI,N,V_tileRowIndex
TQ,R,N,V_cellCount
initWithCollapsed:expanded:dimension:
makeInverse
uidsCollapsed
uidsExpanded
dimension
_collapsedGroupUIDs
_expandedGroupUIDs
_dimension
_uidsCollapsed
_uidsExpanded
T@"TSCEUIDSet",R,N,V_uidsCollapsed
T@"TSCEUIDSet",R,N,V_uidsExpanded
Tq,R,N,V_dimension
formulaObject
T@"TSCEFormulaObject",R,N
p_computeinteractionType:
initWithFormulaObject:locale:
initWithFormulaObject:fromTableInfo:fromCellID:
cellSpecReplacingFormulaObject:locale:
hasTSCEFormula
asFormulaSpec
p_mightBeEqual:
isEquivalent:
categoryAggregateType
stockDetails
_formulaObject
_categoryAggregateType
_stockDetails
T@"TSCEFormulaObject",R,N,V_formulaObject
TC,R,N,V_categoryAggregateType
T@"TSTStockDetails",R,N,V_stockDetails
_straightQuote
_straightQuoteEscaped
_fullwidthApostrophe
_fullwidthApostropheEscaped
_rightSingleQuotationMark
_rightSingleQuotationMarkEscaped
_leftSingleQuotationMark
_leftSingleQuotationMarkEscaped
_temporaryStraightQuoteString
_temporaryFullwidthApostropheString
_temporaryLeftSingleQuoteString
_temporaryRightSingleQuoteString
_singleQuoteCharacterSet
_periodCharacterSet
_colonCharacterSet
_asciiSpaceCharacterSet
_intlWhitespaceCharacterSet
_singleQuoteOrWhitespaceCharacterSet
_singleCurlyQuoteCharacterSet
_doubleCurlyQuoteCharacterSet
_requiringSingleQuotesCharacterSet
nodeForName:createIfMissing:
foldName:
insertFoldedName:
insertName:
containsName:
removeName:
enumerateNamesMatchingPrefix:block:
_root
initWithContextTableResolver:components:
initWithContextTableResolver:
initWithContextResolver:components:
initWithContextResolver:
contextResolver
contextTableResolver
setContextTableResolver:
contextSheetName
setContextSheetName:
components
setComponents:
aggregateFunction
setAggregateFunction:
refPathSplitter
setRefPathSplitter:
filterColons
setFilterColons:
referenceIsComplete
setReferenceIsComplete:
abortObject
setAbortObject:
parseAsBaseTableReference
setParseAsBaseTableReference:
trimNames
setTrimNames:
namesUsed
setNamesUsed:
sheetName
setSheetName:
rest
setRest:
sheetNameUnquoted
setSheetNameUnquoted:
tableNameUnquoted
setTableNameUnquoted:
referencesMatchingInputAsPrefix
setReferencesMatchingInputAsPrefix:
_filterColons
_referenceIsComplete
_parseAsBaseTableReference
_trimNames
_namesUsed
_preserveFlags
_contextTableResolver
_contextSheetName
_components
_aggregateFunction
_refPathSplitter
_abortObject
_sheetName
_rest
_sheetNameUnquoted
_tableNameUnquoted
_referencesMatchingInputAsPrefix
T^{TSCETableResolver=^^?},N,V_contextTableResolver
T@"<TSCEReferenceResolving>",R,N
T@"NSString",&,N,V_contextSheetName
T@"NSArray",&,N,V_components
T@"NSString",&,N,V_aggregateFunction
T@"TSCEQuotedRefPathSplitter",&,N,V_refPathSplitter
TB,N,V_filterColons
TB,N,V_referenceIsComplete
T@"TSCEAbortObject",&,N,V_abortObject
TB,N,V_parseAsBaseTableReference
TB,N,V_trimNames
TB,N,V_namesUsed
T{TSUPreserveFlags=C},N,V_preserveFlags
T@"NSString",&,N,V_sheetName
T@"NSString",&,N,V_rest
T@"NSString",&,N,V_sheetNameUnquoted
T@"NSString",&,N,V_tableNameUnquoted
T@"NSMutableArray",&,N,V_referencesMatchingInputAsPrefix
tsce_numericCompare:
addEdge:forOwner:
stringForOwnerID:withLimit:
stringForEdgesWithLimit:
_edgesForOwner
initWithCellID:dirtyPrecedentCount:
addPrecedentWithCellID:forOwner:
addDependentWithCellID:forOwner:
stringForDependencyRow
dirtyPrecedentCount
setDirtyPrecedentCount:
isFormula
setIsFormula:
isInCycle
setIsInCycle:
precedentsList
setPrecedentsList:
dependentsList
setDependentsList:
_isFormula
_isInCycle
_dirtyPrecedentCount
_precedentsList
_dependentsList
T@"TSCEEdgeListPrinter",&,N,V_precedentsList
T@"TSCEEdgeListPrinter",&,N,V_dependentsList
T@"NSString",&,N,V_cellID
TQ,N,V_dirtyPrecedentCount
TB,N,V_isFormula
TB,N,V_isInCycle
stringForOwnerKind:
addDependencyRow:
ownerName
setOwnerName:
numDirtyCells
setNumDirtyCells:
showCleanCells
setShowCleanCells:
dirtyCellDependencyRows
setDirtyCellDependencyRows:
cleanCellDependencyRows
setCleanCellDependencyRows:
_showCleanCells
_ownerName
_numDirtyCells
_dirtyCellDependencyRows
_cleanCellDependencyRows
T@"NSMutableArray",&,N,V_dirtyCellDependencyRows
T@"NSMutableArray",&,N,V_cleanCellDependencyRows
T@"NSString",&,N,V_ownerName
TQ,N,V_numDirtyCells
TB,N,V_showCleanCells
initWithGroupingColumns:
groupingColumns
ruleAtIndex:
ruleAtGroupLevel:
groupingColumnForColumnUID:
p_isEqual:
isGroupingColumnUidsEqual:
isFunctionallyEquivalent:
hasPrefix:
addRule:atIndex:
removeRuleAtIndex:
moveRuleFromIndex:toIndex:
appendRules:
changeGroupingTypeForRuleIndex:toType:
replaceRuleAtIndex:withRule:
addRule:atGroupLevel:
removeRuleAtGroupLevel:
moveRuleFromGroupLevel:toLevel:
changeGroupingTypeForGroupLevel:toType:
replaceRuleAtGroupLevel:withRule:
groupingColumnUidList
_groupingColumns
formatStringContainsOnlyDate
formatStringContainsAMPMSpecifier
todayFormatForLocale:
nowFormatForLocale:
addReceiver:
addReceiverIfMissing:
removeReceiver:
hasReceiver:
dropAllTargets
disconnect
distributeBlock:
suspendDuringBlock:
receivers
_receivers
T@"Protocol",R,N
T@"NSArray",R,N,V_receivers
initWithPivotTableUID:
registerWithCalcEngine:baseOwnerUID:
linkToCalcEngine:
unregisterFromCalcEngine
pivotDataTableUID
restoreFromPivotDataTable:columnGroupings:rowGroupings:aggregates:flatteningDimension:
setPivotRulesWithPivotDataTable:columnGroupings:rowGroupings:aggregates:flatteningDimension:
resetGroupingList
p_resetAllGroupUids:baseGroupUids:summaryGroupUids:forGroupBy:uptoLevel:isFlattening:
groupByForColumnLevel:rowLevel:
groupByForColumnGroups
groupByForRowGroups
numPracticalGroupBys
maxGroupByIndex
groupColumnIndexesForOwnerIndex:
groupingColumnsForOwnerIndex:
groupingIndexForColumnUID:
groupingColumnForIndex:
ownerIndexForGroupingCombination:
clearMissingCombinations
sawMissingCombination:
groupByForOwnerIndex:createIfMissing:
allGroupRoots
allColumnGroupUids
allRowGroupUids
baseColumnGroupUids
baseRowGroupUids
summaryColumnGroupUids
summaryRowGroupUids
allColumnUids
allRowUids
baseColumnUids
baseRowUids
columnUidsForColumnGroupUid:
rowUidsForRowGroupUid:
hasRunningTotalAggregates
columnGroupUidForColumnUid:outAggregateIndex:
rowGroupUidForRowUid:outAggregateIndex:
expandGroupUidsForFlattening:forDimension:
aggregateIndexForColumnUid:
aggregateIndexForRowUid:
aggregateIndexForUidCoord:
aggregateForUidCoord:
columnNameForAggregateIndex:allowDuplicateNames:
descriptionForAggregateIndex:locale:
descriptionForAggregateIndex:useShortLabel:allowDuplicateNames:locale:
compactDescriptionForAggregateIndex:locale:
compactDescriptionForAggregateIndex:useShortLabel:allowDuplicateNames:locale:
aggregateIndexForAggName:locale:
columnUIDForGroupingColumnName:
columnGroupLevelForColumnUID:
rowGroupLevelForRowUID:
categoryRefForUidCoord:outShowAsType:
getPivotDataBundleForUidCoord:upToLevel:
getPivotDataBundleForUidCoord:
p_descriptionForPivotGroupValueTuple:upToLevel:locale:
descriptionForPivotGroupCellForColumnUid:upToLevel:
descriptionForPivotGroupCellForRowUid:upToLevel:
descriptionForPivotBodyCellForUidCoord:
pivotDataModelRowIndexesNeededForCell:
findExistingGroupNodeInGroupBy:usingValues:upToLevel:
grandGrandTotalCategoryRefForAggregate:
firstAggregate
grandTotalCategoryRefForColumn:forAggregate:
grandTotalCategoryRefForRow:forAggregate:
percentParentDenominatorCategoryRefFor:inGroupBy:forAggregate:forShowAsType:
percentRunningDenominatorCategoryRefFor:inGroupBy:runningOnColumnUid:forAggregate:
restrictColumnIndexes:toColumnGroupLevel:forPivotTable:
restrictRowIndexes:toRowGroupLevel:forPivotTable:
restrictColumnIndexes:forAggrIndexLevel:forPivotTable:
restrictRowIndexes:forAggrIndexLevel:forPivotTable:
hasUnfilteredAt:forDimension:
filteringCategoryRefAt:forDimension:
getPivotHidingIndexesForGroupingColumn:columns:rows:forHiding:forPivotTable:
getHidingIndexesForGrandTotalsForPivotTable:columns:rows:
groupByForUuidCoord:
groupNodeForUuidCoord:
groupValueTupleForUuidCoord:createIfMissing:
verifyConnectionsWithPivotDataModel:pivotTableUID:
pivotTableUID
setPivotTableUID:
pivotDataTable
columnGroupings
rowGroupings
aggregates
flatteningDimension
activeFlatteningDimension
bodyGroupingList
setBodyGroupingList:
_inUseGroupBys
_aggregateUidList
_aggregateUidMap
_allColumnGroupUids
_baseColumnGroupUids
_summaryColumnGroupUids
_allRowGroupUids
_baseRowGroupUids
_summaryRowGroupUids
_allFlattenedUids
_baseFlattenedUids
_groupAggregateUidFlatteningMap
_groupAggregateUidUnflatteningMap
_assertedOnMissingCombinations
_filterSet
_pivotDataTable
_columnGroupings
_rowGroupings
_aggregates
_flatteningDimension
_activeFlatteningDimension
_bodyGroupingList
_pivotTableUID
T@"TSTGroupingColumnList",&,N,V_bodyGroupingList
TB,R,N,V_isRegisteredWithCalcEngine
T{TSKUIDStruct=QQ},N,V_pivotTableUID
T@"TSTTableModel",R,N,V_pivotDataTable
T@"TSCECalculationEngine",&,N,V_calcEngine
T@"TSTGroupingColumnList",R,N,V_columnGroupings
T@"TSTGroupingColumnList",R,N,V_rowGroupings
T@"TSTColumnAggregateList",R,N,V_aggregates
Tq,R,N,V_flatteningDimension
Tq,R,N,V_activeFlatteningDimension
T@"TSTTableFilterSet",C,N,V_filterSet
validatedLoadFromUnarchiver:
formulaID
mAST
mFormulaID
cellDiff
doesSetProperty:
doesSetAnyProperties:
objectForSetProperty:
boolValueForSetProperty:
doesResetProperty:
doesResetAnyProperties:
objectForResetProperty:
allProperties
containsAnyPropertiesInSet:
containsCellStyleProperties
containsTextStyleProperties
containsStringProperties
p_resetCachedFlags
setObject:forProperty:
setIntValue:forProperty:
setBoolValue:forProperty:
setFloatValue:forProperty:
resetObject:forProperty:
resetIntValue:forProperty:
resetFloatValue:forProperty:
setPropertiesFromMap:
resetPropertiesFromMap:
propertyMapToSetWithProperties:
removeObjectsToSetForProperty:
clear
objectApplyingDiffToObject:andUpdateInverse:
objectApplyingDiffToObject:andUpdateInverse:optionalConcurrentStylesheet:
estimatedByteSize
propertyMapToSet
setPropertyMapToSet:
propertySetToSet
setPropertySetToSet:
propertyMapToReset
setPropertyMapToReset:
propertySetToReset
setPropertySetToReset:
hasCachedContainsCellStyleProperties
setHasCachedContainsCellStyleProperties:
cachedContainsCellStyleProperties
setCachedContainsCellStyleProperties:
hasCachedContainsTextStyleProperties
setHasCachedContainsTextStyleProperties:
cachedContainsTextStyleProperties
setCachedContainsTextStyleProperties:
hasCachedContainsStringProperties
setHasCachedContainsStringProperties:
cachedContainsStringProperties
setCachedContainsStringProperties:
_hasCachedContainsCellStyleProperties
_cachedContainsCellStyleProperties
_hasCachedContainsTextStyleProperties
_cachedContainsTextStyleProperties
_hasCachedContainsStringProperties
_cachedContainsStringProperties
_propertyMapToSet
_propertySetToSet
_propertyMapToReset
_propertySetToReset
T@"TSSPropertyMap",&,N,V_propertyMapToSet
T@"TSSMutablePropertySet",&,N,V_propertySetToSet
T@"TSSPropertyMap",&,N,V_propertyMapToReset
T@"TSSMutablePropertySet",&,N,V_propertySetToReset
TB,N,V_hasCachedContainsCellStyleProperties
TB,N,V_cachedContainsCellStyleProperties
TB,N,V_hasCachedContainsTextStyleProperties
TB,N,V_cachedContainsTextStyleProperties
TB,N,V_hasCachedContainsStringProperties
TB,N,V_cachedContainsStringProperties
empty
TB,R,N,GisEmpty
functionsUsed
addUseOfFunctions:atCellRef:
addFunctionUsesInFormula:atCellRef:outContainsVolatileFunction:
dirtyCellsUsingFunction:
_cellRefsUsingFunction
_mutex
T@"TSCECalculationEngine",R,&,N,V_calcEngine
concurrentCellMapWithContext:cellUIDRange:repeatCellVectorPattern:patternDirection:uidBased:affectsCellBorders:
changeDescriptorsForTable:
initWithContext:uidBased:affectsCellBorders:
initWithContext:affectsCellBorders:
convertToUuidBasedCellMapUsingTableInfo:pruneCategorizedCells:
containsCellChanges
hasCells
hasMultipleCells
viewCellRects
cellUIDRanges
p_cacheRowColumnUIDs
accumulateBordersConcurrentlyUsingBlock:accumulateCellsConcurrentlyUsingBlock:
appendCellList:
appendCellLists:
clearDataListIDs
affectedBaseColumnAndRowIndexes
cellRegionWithTableInfo:
cellRegionWithTableInfo:passingTest:
enumerateSeriallyUsingBlock:
p_enumerateNewAndOldCellsSeriallyUsingBlock:
p_enumerateNewAndOldCellsSeriallyUsingPreBNCBlock:
enumerateCellsAddedAndRemovedOfType:withOptions:usingBlock:
enumerateCellsAddedOfType:withOptions:usingBlock:
p_enumerateCellsAddedAndRemovedForFormatsWithOptions:usingBlock:
gatherRowState:
enumerateRowsOfCellsConcurrentlyUsingBlock:
updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:
enumerateColumnCellCountDiffUsingBlock:
enumerateRowCellCountDiffUsingBlock:
enumerateCustomFormatsBeingAddedUsingReplacementBlock:
willApplyToTable:
willApplyToTableModel:
convertToInverseCellMap
addMergeAction:
addHeadMergeAction:
addMergeActions:
pushInverseMergeAction:
containsMergeChanges
clearMerges
isUIDBased
setUidBased:
mayModifyFormulasInCells
setMayModifyFormulasInCells:
mayModifyValuesReferencedByFormulas
setMayModifyValuesReferencedByFormulas:
affectsCellBorders
mergeActions
setMergeActions:
cellLists
setCellLists:
inverseMergeActions
setInverseMergeActions:
cachedRowUIDs
setCachedRowUIDs:
cachedColumnUIDs
setCachedColumnUIDs:
applyingToTable
setApplyingToTable:
_uidBased
_mayModifyFormulasInCells
_mayModifyValuesReferencedByFormulas
_affectsCellBorders
_applyingToTable
_mergeActions
_cellLists
_inverseMergeActions
_cachedRowUIDs
_cachedColumnUIDs
uidBased
TB,N,GisUIDBased,V_uidBased
T@"NSMutableArray",&,N,V_cellLists
T@"NSMutableArray",&,N,V_mergeActions
T@"NSMutableArray",&,N,V_inverseMergeActions
T{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}},N,V_cachedRowUIDs
T{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}},N,V_cachedColumnUIDs
TB,N,V_applyingToTable
TB,N,V_mayModifyFormulasInCells
TB,N,V_mayModifyValuesReferencedByFormulas
TB,R,N,V_affectsCellBorders
cellListWithContext:cellUIDRange:repeatCellVectorPattern:patternDirection:
initWithContext:viewCellRect:cellUIDRange:
initWithContext:viewCellRect:
initWithContext:cellUIDRange:
addCell:atViewCellCoord:
addCell:atIndex:
p_cells
p_convertToUuidBasedCellListUsingTableInfo:pruneCategorizedCells:
p_setObjectLocale:
p_clearDataListIDs
p_pruneCellsAtRow:rowsSize:columnsSize:
p_pruneCellsAtColumn:rowsSize:columnsSize:
p_pruneToBaseWithBaseMap:viewMap:
p_setupInterestingCells:interestingCellIndexes:forAdding:
p_invokeBlock:
p_simpleInvokeBlock:
p_convertToInverseCellMap
p_gatherRowState:
p_accumulateBordersConcurrentlyUsingBlock:accumulateCellsConcurrentlyUsingBlock:
p_enumerateRowsOfCellsConcurrentlyUsingBlock:
p_enumerateCellsAddedAndRemovedOfType:usingBlock:
p_enumerateCellsAddedOfType:usingBlock:
p_enumerateCellsAddedAndRemovedForFormatsUsingBlock:
p_enumerateColumnCellCountDiffUsingBlock:
p_enumerateRowCellCountDiffUsingBlock:
p_enumerateCustomFormatsBeingAddedUsingReplacementBlock:
p_baseColumnIndexes
p_baseRowIndexes
p_interestingCellIndexes
viewCellRect
setViewCellRect:
cellUIDRange
setCellUIDRange:
interestingCells
setInterestingCells:
formatsAdded
setFormatsAdded:
formatsRemoved
setFormatsRemoved:
tilesPerRow
setTilesPerRow:
rowInfosPerRow
setRowInfosPerRow:
_viewCellRect
_cellUIDRange
_tilesPerRow
_rowInfosPerRow
_cells
_baseRows
_baseColumns
_viewRows
_viewColumns
_cellCountDiffsPerRow
_cellCountDiffsPerColumn
_preBNCKeysList
_oldCells
_interestingCells
_formatsAdded
_formatsRemoved
TB,R,N,GisUIDBased,V_uidBased
T{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}},N,V_viewCellRect
T{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}},N,V_cellUIDRange
T@"NSArray",&,N,V_interestingCells
T@"TSUPointerKeyDictionary",&,N,V_formatsAdded
T@"NSMutableDictionary",&,N,V_formatsRemoved
T@"NSMutableArray",&,N,V_tilesPerRow
T@"NSMutableArray",&,N,V_rowInfosPerRow
addCell:atUidOffset:
appendCellUIDRange:
validCells
setValidCells:
_validCells
T@"NSMutableIndexSet",&,N,V_validCells
estimatedByteSizeOfElement:
componentReadVersion
record
recordFromArchive:
isWholeTableImport
importSettings
setImportSettings:
importSource
setImportSource:
importDate
setImportDate:
sourceData
setSourceData:
confidence
setConfidence:
importedRegion
setImportedRegion:
sourceColumnCount
setSourceColumnCount:
sourceRowCount
setSourceRowCount:
pasteInverseCommands
setPasteInverseCommands:
pasteType
setPasteType:
pasteWasUpdate
setPasteWasUpdate:
_pasteWasUpdate
_importSettings
_importSource
_importDate
_sourceData
_confidence
_importedRegion
_sourceColumnCount
_sourceRowCount
_pasteInverseCommands
_pasteType
T@"TSKStructuredTextImportSettings",&,N,V_importSettings
T@"NSURL",&,N,V_importSource
T@"NSDate",&,N,V_importDate
T@"NSData",C,N,V_sourceData
Td,N,V_confidence
T@"TSTCellRegion",&,N,V_importedRegion
TQ,N,V_sourceColumnCount
TQ,N,V_sourceRowCount
T@"NSArray",&,N,V_pasteInverseCommands
TQ,N,V_pasteType
TB,N,V_pasteWasUpdate
wholeTableImport
TB,R,N,GisWholeTableImport
classForUnarchiver:
stringForListType:
setRichTextParentInfo:
p_shouldUseReverseMap
p_addInitialSegment
p_setupWithType:nextKeyID:
initWithType:context:
p_segmentForKey:
p_setObject:atKey:updateReverseMap:
p_clearReverseMapForObject:atKey:
p_nextAvailableKey
p_objectCount
wrappedObjectForPayload:
p_objectForPayload:
p_setPayload:atSuggestedKey:callWillModify:
p_replaceObjectAtKey:withObject:
removeObjectForKey:
p_objectForKey:
p_enumerateDataObjectsUsingBlock:
enumerateFormatsUsingBlock:
enumerateLegacyCustomFormatsUsingBlock:
enumerateKeysAndCountsUsingBlock:
replaceFormulasUsingBlock:
replaceConditionalStyleSetsUsingBlock:
repairStyleDatalistStylesheetIfNecessary
refCountForKey:
takeReferenceForKey:callWillModify:
takeReferences:forKey:callWillModify:
dropReferenceForKey:callWillModify:
dropReferences:forKey:callWillModify:
listTypeString
richTextParentInfo
listType
setListType:
isNewForBraveNewCell
setIsNewForBraveNewCell:
mightHaveCustomFormats
nextID
setNextID:
useReverseMap
cachedSegment
setCachedSegment:
_segments
_payloadToObjectMap
_unusedKeySet
_isNewForBraveNewCell
_mightHaveCustomFormats
_useReverseMap
_listType
_nextID
_richTextParentInfo
_cachedSegment
Ti,N,V_listType
TI,N,V_nextID
TB,R,N,V_useReverseMap
T@"TSTTableDataListSegment",N,V_cachedSegment
TB,N,V_isNewForBraveNewCell
T@"NSObject<TSDContainerInfo><TSWPStorageParent>",N,V_richTextParentInfo
TB,R,N,V_mightHaveCustomFormats
containsControlCellSpecs
containsFormulas
replaceCustomFormatsWithBlock:
addCellFormat:atSuggestedKey:callWillModify:
addCommentStorage:atSuggestedKey:callWillModify:
addConditionalStyleSet:atSuggestedKey:callWillModify:
addFormula:atSuggestedKey:callWillModify:
addControlCellSpec:atSuggestedKey:callWillModify:
addFormulaError:atSuggestedKey:callWillModify:
addImportWarningSet:atSuggestedKey:callWillModify:
addMultipleChoiceListFormat:atSuggestedKey:callWillModify:
addRichText:atSuggestedKey:callWillModify:
addString:atSuggestedKey:callWillModify:
addStyle:atSuggestedKey:callWillModify:
cellFormatForKey:
commentStorageForKey:
conditionalStyleSetForKey:
formulaForKey:
controlCellSpecForKey:
formulaErrorForKey:
importWarningSetForKey:
multipleChoiceListFormatForKey:
richTextForKey:
stringForKey:
stringForKey:shouldWrap:
styleForKey:
hasDuplicatedElements
upgradeCellFormatsU2_0
upgradeConditionalStylesToLinkedRefWithTableUID:
reassignCustomFormatUIDForPaste:
getRefCountsFromDataList
initWithContext:name:overridePropertyMap:isVariation:
boxedValueForProperty:oldBoxedValue:transformedByTransform:
nonEmphasisTableProperties
presetIDForStyleID:
styleIDForPreset:
defaultIntValueForProperty:
initDefaultStrokePresetListInPropertyMap:presetID:colors:
initDefaultPropertyMap:presetID:colors:alternate:
strokeForStrokePreset:
horizontalStrokeForStrokePreset:
verticalStrokeForStrokePreset:
exteriorStrokeForStrokePreset:
maskForStrokePreset:
maskForStrokePresets:
loadTableStylePropertiesIntoPropertyMap:fromArchive:unarchiver:
saveTableStylePropertiesToArchive:archiver:
isEquivalentForCrossDocumentPasteMasterComparison:
selection
setSelection:
selectionWithParent:
T@"TSKSelection",&,N
_cellSelection
_isLegacyBasedIDSelection
_legacyAnchorCellID
_legacyCursorCellID
_legacyCellRegion
_legacyBaseCellRegion
initWithColumnAggregateUid:columnUid:aggregateType:level:showAsType:runningTotalGroupingColumnUid:
initForCategoriesWithColumnUid:aggregateType:level:
initForPivotWithColumnUid:aggregateType:
initForPivotWithColumnUid:aggregateType:showAsType:runningTotalGroupingColumnUid:
initForPivotWithColumnAggregateUid:columnUid:aggregateType:showAsType:runningTotalGroupingColumnUid:
initAsEmptyAggregate
columnUid
columnAggregateUid
runningTotalGroupingColumnUid
getUUIDBytesForColumnAggregate:
getUUIDBytesForColumn:
getUUIDBytesForRunningTotalGroupingColumn:
level
aggregateType
setAggregateType:
showAsType
_columnUid
_aggregateType
_level
_showAsType
_columnAggregateUid
_runningTotalGroupingColumnUid
_definedColumnAggregateUid
_definedRunningTotalGroupingColumnUid
Ti,R,N,V_level
TC,N,V_aggregateType
TC,R,N,V_showAsType
initWithString:locale:
initWithStringValue:locale:
stringValue
_stringValue
initWithOwner:
tileSize
_sharedQueue
initWithStorageArchive:treeArchive:nextTileID:unarchiver:owner:
_upgradeFromTileIDMap:referenceMap:
saveToStorageArchive:treeArchive:archiver:
isEmbiggened
nextTileID
_groupForTileID:
_tileForID:createIfMissing:
_setTile:forID:
_createTileWithID:
_removeTileForID:
_enumerateGroups:
_enumerateTiles:
_enumerateLoadedTiles:
_clearContentAtIndex:count:
_shiftRowsUpAtIndex:count:
_shiftRowsDownAtIndex:count:
_insertRowsAtIndex:count:
_removeRowsAtIndex:count:
_yankRowRange:
_spliceRows:atIndex:
enumerateTilesConcurrentlyUsingBlock:
enumerateRowsInRange:withBlock:
enumerateRowByRowInRange:withBlock:
rowInfoAtIndex:
tileForWritingAtRowIndex:outTileRange:
tileStartingAtOrBeforeRowIndex:outTileRange:
tileStartingAtOrAfterRowIndex:outTileRange:
insertRowsAtIndex:count:
moveRowIndexRange:toIndex:
columnCellCountsOfRowsInRange:
moveColumnIndexRange:toIndex:
populatedTiles
lastPopulatedRowIndex
pruneTileForRowIndex:
pruneTilesForRows:
needToUpgradeCellStorage
auditTilesForRowOverlapAndExtensionPastTableBounds:withDataStore:result:
widenTilesForUpgrade
makeStorageMap
upgradeRepairedTiles
_tileIDSet
_tileGroups
_upgradeRepairedTiles
TB,R,D,N
TB,R,N,V_upgradeRepairedTiles
TB,N,V_shouldUseWideRows
initWithBucket:owner:
firstBucketForArchiving
initFromArchive:unarchiver:owner:
sizeAtIndex:
setSize:atIndex:
hidingStateAtIndex:
setHidingState:atIndex:
cellStyleAtIndex:
setCellStyle:atIndex:
textStyleAtIndex:
setTextStyle:atIndex:
defaultStylesAtIndex:outCellStyle:outTextStyle:
updateStylesWithBlock:
metadataAtIndex:hidingAction:defaultSize:uuid:
updateHeaderAtIndex:fromMetadata:
removeIndexesAtIndex:count:
shiftIndexesForwardAtIndex:count:
shiftIndexesBackAtIndex:count:
swapIndex:withIndex:
moveIndexRange:toIndex:
cellCountAtIndex:
decrementCellCountAtIndex:byAmount:
incrementCellCountAtIndex:byAmount:
resetAllCellCounts
totalCellCount
forceLoadHeaders
minIndex
maxIndex
populatedIndexes
_buckets
_bucketCount
T@"TSPObject",R,N
filterWithIndex:baseColumnIndex:rules:
initWithIndex:baseColumnIndex:rules:
ruleCount
filterWithRule:atIndex:
filterByAddingRule:
filterByRemovingRuleAtIndex:
filterByClearingRules
enumerateRulesUsingBlock:
filterIndex
baseColumnIndex
_filterIndex
_baseColumnIndex
_rules
TQ,R,N,V_filterIndex
T{TSUModelColumnIndex=S},R,N,V_baseColumnIndex
data
setData:
styleCount
setStyleCount:
_data
_styleCount
_bounds
T@"TSUSparseArray",&,N,V_data
TQ,N,V_styleCount
logicalTestWithCriterion:functionSpec:evaluationContext:
initWithCriterion:functionSpec:evaluationContext:
criteriaParser:
compare:withContext:
cost
setString:
date
setDate:
matcher
setMatcher:
evaluationContext
setEvaluationContext:
_operation
_value
_string
_date
_matcher
_evaluationContext
T@"TSCERegexMatcher",&,N,V_matcher
T^v,N,V_evaluationContext
T@"NSString",&,N,V_string
T@"NSDate",&,N,V_date
indexFromCoord:
coordFromIndex:
createFormulaForUIDRange:tableUID:
createFormulaForUIDTract:tableUID:
rangeFromFormulaObject:atCoord:
rangeFromFormulaObject:atCoord:useBoundingRange:
tableUIDFromFormula:atCoord:
setFormulaOwnerUID:
formulaCount
initWithOwnerUID:
reserveNextCoordinate
reserveNextIndex
markForRollback
rollbackToMark:
appendIndexedFormula:
setFormulaObject:atIndex:
clearFormulaAtIndex:
registerAllFormulaToCalculationEngine
formulaObjectAtIndex:
foreach:
createFormulaObjectForRange:atIndex:tableUID:
rangeFromFormulaAtIndex:useBoundingRange:
tableUIDFromFormulaAtIndex:
remapRangeFormulasToOwnerUID:
initWithOwnerUID:archive:unarchiver:
usesOnlyFixedCoords
setUsesOnlyFixedCoords:
_formulaOwnerUID
_formulas
_nextIndex
_usesOnlyFixedCoords
TB,N,V_usesOnlyFixedCoords
T{TSKUIDStruct=QQ},N,V_formulaOwnerUID
nativeType
gridKind
deepType:
dimensions
valueAtGridCoord:accessContext:
valueAtIndex:accessContext:
valueAtIndexNoThrow:accessContext:
flattenedGrid:
flattenedGridNoThrow:
formatAtIndex:accessContext:
preferredFormatOptions:
containsError:evaluationContext:
error
subGridValueAtGridCoord:width:height:accessContext:
newCorrespondingAST:argIndex:bakeReferences:evaluationContext:
value
number:argIndex:evaluationContext:
date:argIndex:evaluationContext:
boolean:argIndex:evaluationContext:
string:argIndex:locale:
rawString:argIndex:locale:
reference:argIndex:evaluationContext:
logTableTileAuditStatus:withVersion:
layoutSpacesInvalidateCoordinatesAfterRow:
layoutInvalidate
setLayoutInvalidate:
layoutInvalidateProvider
setLayoutInvalidateProvider:
layoutInvalidateSize
setLayoutInvalidateSize:
layoutInvalidateTableNameVisibility
setLayoutInvalidateTableNameVisibility:
layoutSpacesInvalidateCoordinates
setLayoutSpacesInvalidateCoordinates:
layoutSpacesInvalidateCoordinatesAfterRow
setLayoutSpacesInvalidateCoordinatesAfterRow:
layoutSpacesInvalidateTableOffsets
setLayoutSpacesInvalidateTableOffsets:
layoutInvalidateChildren
setLayoutInvalidateChildren:
layoutUpdateChildren
setLayoutUpdateChildren:
editingCellIDForInvalidation
setEditingCellIDForInvalidation:
layoutResetScaleToFit
setLayoutResetScaleToFit:
_layoutInvalidate
_layoutInvalidateProvider
_layoutInvalidateSize
_layoutInvalidateTableNameVisibility
_layoutSpacesInvalidateCoordinates
_layoutSpacesInvalidateTableOffsets
_layoutInvalidateChildren
_layoutUpdateChildren
_layoutResetScaleToFit
_layoutSpacesInvalidateCoordinatesAfterRow
_editingCellIDForInvalidation
TB,N,V_layoutInvalidate
TB,N,V_layoutInvalidateProvider
TB,N,V_layoutInvalidateSize
TB,N,V_layoutInvalidateTableNameVisibility
TB,N,V_layoutSpacesInvalidateCoordinates
TI,N,V_layoutSpacesInvalidateCoordinatesAfterRow
TB,N,V_layoutSpacesInvalidateTableOffsets
TB,N,V_layoutInvalidateChildren
TB,N,V_layoutUpdateChildren
T{TSUCellCoord=ISBB},N,V_editingCellIDForInvalidation
TB,N,V_layoutResetScaleToFit
initWithInfo:
offsetGeometryBy:
capturedInfoPositionForAttachment
setNeedsDisplay
setNeedsDisplayInRect:
invalidate
invalidateSize
invalidatePosition
isBeingManipulated
maximumFrameSizeForChild:
captionEdgeInsets
updateChildrenFromInfo
childInfosForChildLayouts
viewScaleForZoomingToSelectionPath:targetPointSize:
dependentLayouts
styleProvider
styleProviderForTextLayout:
wantsToProvideStylesForTextLayout:
pageNumber
pageCount
findLayoutIfAvailableInSet:intersectingRow:
widthForColumnIndex:bodyWidth:
gapForColumnIndex:bodyWidth:
positionForColumnIndex:bodyWidth:target:outWidth:outGap:
adjustedInsetsForTarget:
layoutMargins
columnCount
alwaysStartsNewTarget
shrinkTextToFit
columnsAreLeftToRight
layoutMarginsForTarget:
textScaleFactor
T@"TSWPPadding",R,N
Td,R,N
autosizeFlagsForTextLayout:
verticalAlignmentForTextLayout:
nonAutosizedFrameForTextLayout:
autosizedFrameForTextLayout:textSize:
dependentsOfTextLayout:
repClassForTextLayout:
descendersCannotClip
forceParentAutosizeFlagsForTextLayout:
forceParentAutosizedFrameForTextLayout:
invalidateForAutosizingTextLayout:
reliedOnLayoutsForTextLayout:
maxAutoGrowLineWidthForTextLayout:
maxAutoGrowBlockHeightForTextLayout:
initialCharIndex
textLayoutShouldWrapAroundExternalDrawables:
textLayoutShouldLayoutVertically:
maskRectForTextLayout:
naturalAlignmentForTextLayout:
initialTextSize
pageCountForAttachment:
pageNumberForAttachment:
adjustRect:forScrollingToSelectionPath:forZoom:
storage:didChangeRange:delta:broadcastKind:attributeKindChanges:
tearDown
scaleToFit
setScaleToFit:
setLayoutHint:
scaleToFitParent
initWithInfo:layoutHint:
supportsRotation
canRotateChildLayout:
resizeMayChangeAspectRatio
isDraggable
layoutGeometryFromInfo
computeLayoutGeometry
computeInfoGeometryFromPureLayoutGeometry:
initialInfoGeometry
wrapFitType
selectionHighlightFrameFittingParentWidthForChildWithFrame:
frameForCaptionPositioning
alignmentFrame
inspectorGeometry
inspectorGeometryIsAffectedByChangeRecord:
inPrintPreviewMode
inFindReplaceMode
suppressFrozenHeadersForEditing
isStrokeEditing
invalidateLayoutSpaceTableOffsets
invalidateLayoutSpaceCoordinates
invalidateLayoutSpaceCoordinatesAfterColumn:
invalidateLayoutSpaceCoordinatesAfterRow:
extendedPartitionRangeSingleSpaceIntersectionWithCellRange:
tabsRowWidthAndOptionalLeftGap:
minimumPositionOffset
setCellRangeVisibleRect:
cellRangeVisibleRect
floatingHeaderRowRangeAtRect:
floatingHeaderColumnRangeAtRect:
_floatingCellRangeAtRect:inLayoutSpace:withTransform:
alignedStrokeFrame
alignedStrokeFrameForRange:
alignedStrokeFrameForGridRange:
alignedStrokeFramePathForRange:frameType:viewScale:inset:reoriginToZero:clipToVisibleRect:cornerRadius:outMaskPath:
alignedStrokeFramePathForGridRange:frameType:viewScale:inset:reoriginToZero:clipToVisibleRect:cornerRadius:outMaskPath:
bezierPathsForCellRegion:selectionMask:transform:viewScale:inset:clipToVisibleRect:cornerRadius:block:
willBeginTableNameEditingWithStorage:
didEndTableNameEditing
invalidateTableNameVisibility
validateTableNameVisibility
p_maximumSpillRangeForCellID:
p_spillRangeToRightForCellID:
p_spillRangeForMaskingRichTextLayout:
p_updateCachedStyleInformationFromCellID:
setupContainedTextEditingLayout:
p_prepareAttachmentCellsIfNeeded
containedTextEditingLayout
removeContainedTextEditingLayout
removeAttachmentCellLayouts
attachmentCellLayoutForCellID:optionalCell:
calculatePointFromSearchReference:
calculatePointFromSearchReferenceWithoutValidation:
activityLineUnscaledEndPointForSearchReference:
unscaledCommentFlagAnchorInfoForSearchReference:
orderedBefore:
canvasShouldScrollForSelectionPath:
textIsVertical
p_textFrameForWrappingCell:defaultRowHeight:
computedEditingCellContentFrame
naturalAlignmentForCellID:
p_cellIDForWPLayout:
p_nonAutosizedFrameForTextEditingLayout:
p_nonAutosizedFrameForRichTextLayout:
p_rangeUpAndLeftOfIntersectionRangeOfGridRange:
p_layoutWhollyContainsGridRange:
p_autosizedFrameForTextEditingLayout:textSize:
p_autosizedFrameForRichTextLayout:textSize:
p_computeSpillingTextFrameForEditingLayout:textSize:editingSpillRange:
p_maskRectForTextEditingLayout:
p_maskRectForRichTextLayout:
reapCoordinatesChangedMaskForChrome
p_getStyleProvidingAncestorLayout
p_defaultAlignmentForTableWritingDirection
p_getLayoutDirectionLeftToRight
validatePageNumberCount
shouldShowCaption
_visibleFrameForOverscrolledChildFrame:
setContainedTextEditingLayout:
containedTextEditorSpills
containedTextEditorWraps
editingSpillingTextRange
layoutDirectionIsLeftToRight
newCanvasRevealedHorizontally
setNewCanvasRevealedHorizontally:
newCanvasRevealedVertically
setNewCanvasRevealedVertically:
paddingForEditingCell
prevEditingSpillingTextRange
setPrevEditingSpillingTextRange:
spaceBundle
setSpaceBundle:
layoutHint
processChangesFiltering
setProcessChangesFiltering:
attachmentCellStorageToLayoutMap
tableNameEditingStorage
setTableNameEditingStorage:
mLayoutHint
mCanvasVisibleRect
mCanvasSafeRect
mPreviousVisibleStrokeFrame
mProcessChangesFiltering
mTabsVisible
mTableNameVisibilityIsValid
mTableNameVisible
mNewCanvasRevealedHorizontally
mNewCanvasRevealedVertically
mLayoutDirectionIsLeftToRight
mSpaceBundle
mCached
mRenderingFrameForLayoutGeometryFromInfo
mContainedTextEditingLayout
mCachedPaddingForEditingCell
mComputedEditingCellContentFrame
mCachedVerticalAlignmentForEditingCell
mAdjustableTableSize
mFixedTableSize
mCapturedStrokeFrameSizeForInline
mEditingSpillingTextRange
mPrevEditingSpillingTextRange
mContainedTextEditorParagraphAlignment
mContainedTextEditorTextWraps
mRemovingContainedTextEditorLayout
mContainedTextEditorSpills
mSpillingTextSize
mCoordinatesChangedMaskForChrome
mShouldUpdateAttachmentChildren
mPageCount
mPageNumber
_attachmentCellStorageToLayoutMap
_tableNameEditingStorage
_cellRangeVisibleRect
T@"TSUPointerKeyDictionary",R,V_attachmentCellStorageToLayoutMap
T@"TSWPStorage",W,N,V_tableNameEditingStorage
T@"TSTLayoutHint",&,N,VmLayoutHint
T@"TSTLayoutSpaceBundle",&,N,VmSpaceBundle
TB,N,VmProcessChangesFiltering
TB,N,VmNewCanvasRevealedHorizontally
TB,N,VmNewCanvasRevealedVertically
TB,R,N,VmLayoutDirectionIsLeftToRight
T{CGSize=dd},N
T@"TSWPLayout",&,N,VmContainedTextEditingLayout
T{UIEdgeInsets=dddd},R,N,VmCachedPaddingForEditingCell
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},R,N,VmEditingSpillingTextRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,VmPrevEditingSpillingTextRange
TB,R,N,VmContainedTextEditorSpills
TB,R,N,VmContainedTextEditorTextWraps
T{CGSize=dd},R,N
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cellRangeVisibleRect
countA
countRows
countOfNumberDateDurationOrBool
accumulateValue:
accumulate:
totalValue
countAValue
countValue
countRowsValue
p_averageValueWithA:
avgAValue
avgValue
minValue
maxValue
rangeValue
productValue
countBlankValue
valueForType:
boolCount
boolTrueCount
numberCount
dateCount
durationCount
stringCount
errorCount
noContentCount
isCircularReference
setIsCircularReference:
_boolCount
_boolTrueCount
_numberCount
_dateCount
_durationCount
_stringCount
_errorCount
_noContentCount
_minValue
_maxValue
_productValue
_numberTotalValue
_firstDateSeen
_totalSecsSinceReferenceDate
_secondsToAdd
_isCircularReference
TI,R,N,V_boolCount
TI,R,N,V_boolTrueCount
TI,R,N,V_numberCount
TI,R,N,V_dateCount
TI,R,N,V_durationCount
TI,R,N,V_stringCount
TI,R,N,V_errorCount
TI,R,N,V_noContentCount
T{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C},R,N
TB,N,V_isCircularReference
initWithColumnAggregates:
aggregateAtIndex:
asArray
aggregatesOnLevel:
columnAggregateUidList
columnAggregateUuids
_columnAggregates
commonInit
setCalculationEngine:
setShouldPerformDetectAndRepairConsistencyViolations:
setShouldCleanGraphForConsistencyViolation:
isEmptyForDirtying
isEmptyForArchiving
dirtyAllCellsInOwner:
dirtyAllCellsInOwnerId:
dirtyCellRef:
dirtyInternalCellRef:
dirtyOnlyDependentsOfCellRef:
dirtyCoords:inOwnerId:
dirtyCellRefs:
dirtyInternalCellRefs:
dirtyCellRefsInReferenceSet:
updatePrecedentCountForCellRef:
hasPrecedentCountUpdatesPending
dirtyRangeRef:
dirtyInternalRangeRef:
hasDirtyingToPerformForOwnerId:
_flushDirtyOwnerIdsWithDepTracker:startTime:timeout:
_flushCellRefSetWithDepTracker:startTime:timeout:
_flushDependentOnlyCellRefSetWithDepTracker:startTime:timeout:
_flushRangeRefsWithDepTracker:startTime:timeout:
_flushInternalCellRefSetWithDepTracker:startTime:timeout:
_flushUpdatePrecedentsCellRefSetWithDepTracker:startTime:timeout:
flushDirtyReferencesForSeconds:
flushCellDirtier
flushAllDirtyReferences
addInProgressCalcCellRefs:
isInProgressCalcIntCellRef:
numberOfInProgressCalcCellRef
clearInProgressCalcCellRefs
shouldPerformDetectAndRepairConsistencyViolations
shouldCleanGraphForConsistencyViolation
debugOnly_DidDetectAndRepairConsistencyViolations
debugOnly_DidCleanGraphForConsistencyViolation
_dirtyingMutex
_cellRefDirtier
_toDirtyOwnerIds
_toDirtyInternalCellRefs
_toDirtyCellRefs
_toDirtyDependentsOnlyCellRefs
_toUpdateDirtyPrecedentCountCellRefs
_toDirtyRangeRefs
_shouldPerformDetectAndRepairConsistencyViolations
_shouldCleanGraphForConsistencyViolation
_calcCellsInProgress
_debugOnly_DidDetectAndRepairConsistencyViolations
_debugOnly_DidCleanGraphForConsistencyViolation
T@"TSCECalculationEngine",R,N,V_calcEngine
TB,N,V_shouldPerformDetectAndRepairConsistencyViolations
TB,N,V_shouldCleanGraphForConsistencyViolation
TB,R,N,V_debugOnly_DidDetectAndRepairConsistencyViolations
TB,R,N,V_debugOnly_DidCleanGraphForConsistencyViolation
formulaForCell:atCellID:inTable:
initWithErrorValue:locale:
errorValue
_errorValue
initWithChromeTractRef:calcEngine:
initWithBaseTractRef:calcEngine:
setBaseTractRef:
setChromeTractRef:
_baseTractRef
_chromeTractRef
T@"TSCECellTractRef",&,N,V_baseTractRef
T@"TSCECellTractRef",&,N,V_chromeTractRef
T{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}},R,N
T{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}},R,N
nameForBaseRangeRef:namingContext:
chromeNameForBaseRangeRef:namingContext:
nameForChromeRangeRef:namingContext:
nameForBaseTractRef:namingContext:
nameForViewTractRef:namingContext:coordMapper:
cellRangeNameFromChromeRangeRef:namingContext:
nameForChromeColumnIndex:inTable:useSymbolicNames:
nameForWrappedRangeRef:namingContext:
stringForRangeRefPair:namingContext:
stringValueAtCellCoord:translator:
columnNameForCellCoord:restrictToBodyRange:translator:cellRangeContainingName:
rowNameForCellCoord:restrictToBodyRange:translator:cellRangeContainingName:
columnNameForColumnIndex:withFallbackFormat:translator:
createNameComponentWithChromeRangeRef:rowOrColumnName:isSticky:namingContext:
p_symbolicColumnNameForRefPair:useTopLeft:isSticky:foundRange:inTableModel:namingContext:
p_symbolicRowNameForRefPair:useTopLeft:isSticky:foundRange:inTableModel:namingContext:
cellRangeName:namingContext:
whitespaceAndNewlineCharSet
setWhitespaceAndNewlineCharSet:
nonWhitespaceAndNewlineCharSet
setNonWhitespaceAndNewlineCharSet:
_whitespaceAndNewlineCharSet
_nonWhitespaceAndNewlineCharSet
T@"NSCharacterSet",&,N,V_whitespaceAndNewlineCharSet
T@"NSCharacterSet",&,N,V_nonWhitespaceAndNewlineCharSet
addCellRefToCheck:
cellRefsToCheck
skipRepairBadRefsForOwnerUID:
isSkippingRepairBadRefsForOwnerUID:
_cellRefsToCheck
_skipRepairBadRefsOwnerUID
linkedResolver
evaluationMode
writeResultsForCalcEngine:
invalidateForCalcEngine:
ownerUID
evaluateFormulaAt:withCalcEngine:recalcOptions:
multiEvaluateFormulasAt:withCalcEngine:recalcOptions:
initWithContext:calculationEngine:
beginTrackingNamesInTable:
beginTrackingNamesInTable:limitedToRange:
beginTrackingNamesInRange:ofTableUID:addingTrackedReferencesTo:
beginTrackingNameInCell:ofTableUID:addingTrackedReferencesTo:
endTrackingNamesInTable:
updateTrackedHeaders:
trackedReferencesExistForTable:
beginTrackingReference:
beginTrackingReferenceWithCellRef:
endTrackingReference:
trackedReferenceAtCoord:
_ownerUID
_trackedRefsStore
_weakTrackedRefsStore
_isRegisteredWithCalculationEngine
T@"TSCECalculationEngine",W,V_calcEngine
addValue:function:evaluationContext:
resultForFunction:
dateAccumulator
setDateAccumulator:
numberAccumulator
secondsToAdd
setSecondsToAdd:
mixedDurationsAndNumbers
setMixedDurationsAndNumbers:
foundANumber
setFoundANumber:
_dateAccumulator
_numberAccumulator
_mixedDurationsAndNumbers
_foundANumber
T@"NSDate",N,V_dateAccumulator
T^{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB},R,N,V_numberAccumulator
Td,N,V_secondsToAdd
TB,N,V_mixedDurationsAndNumbers
TB,N,V_foundANumber
initWithPivotTable:minion:preservingStyles:
applyFormula:atUidCoord:
applyCellValue:atUidCoord:appendTotalForPivotsFlag:
setStringValue:atUidCoord:
blockUntilCompleted
madeChange
_pivotTable
_minion
_preservingStyles
_madeChange
_workerQueue
_documentLocale
_blankString
TB,R,N,V_madeChange
arraySegmentClass
packageLocatorForSegments
baseColumnIndexForViewColumnIndex:
baseRowIndexForViewRowIndex:
baseColumnIndexForChromeColumnIndex:
baseRowIndexForChromeRowIndex:
chromeColumnIndexForBaseColumnIndex:
chromeRowIndexForBaseRowIndex:
viewColumnIndexForBaseColumnIndex:
viewRowIndexForBaseRowIndex:
chromeColumnIndexForViewColumnIndex:
chromeRowIndexForViewRowIndex:
viewColumnIndexForChromeColumnIndex:
viewRowIndexForChromeRowIndex:
summaryColumnIndexForViewColumnIndex:
summaryRowIndexForViewRowIndex:
viewColumnIndexForSummaryColumnIndex:
viewRowIndexForSummaryRowIndex:
baseColumnIndexesForViewColumnIndexes:
baseRowIndexesForViewRowIndexes:
viewColumnIndexesForBaseColumnIndexes:
viewRowIndexesForBaseRowIndexes:
chromeColumnIndexesForViewColumnIndexes:
chromeRowIndexesForViewRowIndexes:
viewColumnIndexesForChromeColumnIndexes:
viewRowIndexesForChromeRowIndexes:
baseCellCoordForViewCellCoord:
baseCellCoordForChromeCellCoord:
chromeCellCoordForBaseCellCoord:
chromeCellCoordForViewCellCoord:
viewCellCoordForBaseCellCoord:
viewCellCoordForChromeCellCoord:
summaryCellCoordForViewCellCoord:
viewCellCoordForSummaryCellCoord:
baseCellRefForChromeCellRef:
baseCellRefForViewCellRef:
chromeCellRefForBaseCellRef:
chromeCellRefForViewCellRef:
viewCellRefForBaseCellRef:
viewCellRefForChromeCellRef:
chromeRangeRefForViewRangeRef:
viewRangeRefForChromeRangeRef:
baseTractRefForChromeTractRef:
baseTractRefForViewTractRef:
chromeTractRefForBaseTractRef:
chromeTractRefForViewTractRef:
viewTractRefForBaseTractRef:
viewTractRefForChromeTractRef:
baseShuffleMapForViewShuffleMap:
isIdentityMapping
chromeCoordsAreViewCoords
setChromeCoordsAreViewCoords:
initWithTableUID:
initWithTableUID:summaryColumns:summaryRows:labelRows:
initWithTableUID:summaryRows:labelRows:
mapBaseRow:toViewRow:
mapBaseColumn:toViewColumn:
mapSummaryRow:toViewRow:
mapSummaryColumn:toViewColumn:
_isIdentityMapping
_chromeCoordsAreViewCoords
_baseRowToViewRow
_viewRowToBaseRow
_summaryRowIndexes
_summaryColumnIndexes
_labelRowIndexes
_summaryAndLabelRowIndexes
_baseColumnToViewColumn
_viewColumnToBaseColumn
_summaryRowToViewRow
_viewRowToSummaryRow
_summaryColumnToViewColumn
_viewColumnToSummaryColumn
TB,R,N,V_isIdentityMapping
TB,N,V_chromeCoordsAreViewCoords
maxOrder
setMaxOrder:
initWithTableModel:
initForUpgradeWithTableModel:
p_setStroke:order:inStrokesArray:atIndex:atRange:
p_setLeftStroke:order:atCellID:
p_setRightStroke:order:atCellID:
p_setTopStroke:order:atCellID:
p_setBottomStroke:order:atCellID:
mightHaveCellBorderAtCellID:
setCellBorder:atCellID:
setBordersWithCellMap:
p_flattenMajorStrokeLayer:minorStrokeLayer:
flattenStrokeOrder
updateForTableSize:
p_strokeRect
enumerateStrokesInRegion:usingTopStrokeBlock:usingBottomStrokeBlock:usingLeftStrokeBlock:usingRightStrokeBlock:
insertColumns:
insertRows:
unretainedStrokeLayerForLeftSideOfColumn:
unretainedStrokeLayerForRightSideOfColumn:
unretainedStrokeLayerForTopOfRow:
unretainedStrokeLayerForBottomOfRow:
setBordersWithConcurrentCellMap:forTableInfo:
accumulateCellBordersConcurrentlyInRow:atColumns:
setStrokeLayer:forTopOfRow:
setStrokeLayer:forBottomOfRow:
setStrokeLayer:forLeftOfColumn:
setStrokeLayer:forRightOfColumn:
leftColumnStrokes
rightColumnStrokes
topRowStrokes
bottomRowStrokes
_maxOrder
_leftColumnStrokes
_rightColumnStrokes
_topRowStrokes
_bottomRowStrokes
T@"NSPointerArray",R,N,V_leftColumnStrokes
T@"NSPointerArray",R,N,V_rightColumnStrokes
T@"NSPointerArray",R,N,V_topRowStrokes
T@"NSPointerArray",R,N,V_bottomRowStrokes
Ti,N,V_maxOrder
initWithStrokeSidecar:region:
setIteratorToRow:
anyCellBordersInThisRow
cellBorderAtColumn:
setRegion:
columnIndexesInRow
setColumnIndexesInRow:
topStrokeLayer
setTopStrokeLayer:
bottomStrokeLayer
setBottomStrokeLayer:
_columnIndexesInRow
_topStrokeLayer
_bottomStrokeLayer
T@"TSTStrokeSidecar",&,N,V_strokeSidecar
T@"TSTCellRegion",&,N,V_region
T@"NSIndexSet",&,N,V_columnIndexesInRow
T@"TSTStrokeLayer",&,N,V_topStrokeLayer
T@"TSTStrokeLayer",&,N,V_bottomStrokeLayer
cellRangeAtIndex:
openRewritingTransaction
commitRewritingTransaction
p_updateIndexesForReplacingRangeAtIndex:withRange:
setCellRange:atIndex:
removeCellRangeAtIndex:
indexesForRange:
indexesForBaseCellRegion:
enumerateCacheItemsUsingBlock:
enumerateCacheItemsIntersectingBaseCellRect:includeCrumbs:usingBlock:
enumerateCacheItemsIntersectingBaseCellRect:usingBlock:
enumerateCacheItemsIntersectingBaseCellRegion:usingBlock:
mergeRanges
mergeRangesIntersectingBaseCellRect:includeCrumbs:
mergeRangesIntersectingBaseCellRect:
mergeRangesIntersectingBaseCellRegion:
partiallyIntersectsBaseCellRect:
partiallyIntersectsBaseCellRegion:
hasRangeSpanningRowsForCellRect:
expandBaseCellRectToCoverMergedCells:
expandBaseCellRegionToCoverMergedCells:
hasRangeSpanningRowsForCellRegion:
_mergeRanges
_mergeRangesRTree
_mergedAtCellIds
_transaction
addTableStyleIndex:
hasTableStyles
containsStyleNetworkIndex:
enumerateTableStylesUsingBlock:
addCellUID:flags:addingMaximumSize:
hasStylesInCells
enumerateCellUIDsUsingBlock:
maximumSize
cellFlags
cellUIDs
tableStyleIndexes
_cellUIDs
_tableStyleIndexes
_maximumSize
_cellFlags
T{CGSize=dd},R,N,V_maximumSize
T{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}},R,N,V_cellFlags
T@"TSTCellUIDList",R,N,V_cellUIDs
T@"NSMutableIndexSet",R,N,V_tableStyleIndexes
highestScaleFactorForRenderingDrawableInfo:
isTopmostContainerInfo
p_fillPropertyForStyle:
compatibilityCheckerForData:associatedHint:
mediaCompatibilityTypeForData:associatedHint:
gridRangeOfLayoutSpace:
intersectionGridRange:ofLayoutSpace:
intersectionRowGridRange:ofLayoutSpace:
intersectionColumnGridRange:ofLayoutSpace:
layout
isMain
isFrozen
isRepeat
isColumns
isRows
isCorner
initWithLayoutSpaceBundle:type:
lockForRead
lockForWrite
unlock
invalidateCoordinates
invalidateCoordinatesAfterColumn:
invalidateCoordinatesAfterRow:
invalidateTableOffset
invalidateCoordinatesForEditingCellID:
validate:
validateCoordinateDirection
setGridRange:
cellRange
validateTableOffset:
p_headerRowsGridRange
p_footerRowsGridRange
p_headerColumnsGridRange
p_topLeftCornerGridRange
p_bodyGridRange
containsGridRange:
containsCellRange:
intersectsCellRange:
intersectsGridRange:
intersectionCellRange:
intersectsRowGridRange:
intersectsColumnGridRange:
gridRangeForLayoutRect:
p_rangeForLayoutRect:
nearestRangeForLayoutRect:
rangeIntersectingLayoutRect:
p_layoutCoordinateForGridColumn:
p_layoutCoordinateForGridRow:
frameForGridRange:
contentFrameForGridRange:
strokeFrameForGridRange:
frameForRange:
contentFrameForRange:
strokeFrameForRange:
headerColumnsWidth
headerRowsHeight
frame
strokeFrame
frameForTableNameBorder
strokeFrameForTableNameBorder
alignedStrokeFrameForTableNameBorder
frameHasWidthAndHeight
setTransformToCanvas:
setViewScale:
layoutPointForCanvasPoint:
canvasPointForLayoutPoint:
layoutRectForCanvasRect:
canvasRectForLayoutRect:
canvasFrameForGridRange:
canvasFrameForCellRange:
canvasFrame
canvasStrokeFrameForGridRange:
canvasStrokeFrame
canvasPositionForGridColumn:
canvasPositionForGridRow:
gridPointHitByCanvasPoint:tabsViewable:
gridPointHitByLayoutPoint:
visibleRange
visiblePartOfRange:
setUserSpaceToDeviceSpaceTransform:
alignedRectForLayoutRect:
p_alignStrokeWidth:deviceWidth:scaledWidth:
p_alignStrokeHeight:deviceWidth:scaledWidth:
strokeWidthForDrawingWithAlignedWidth:originalWidth:
alignStrokeCoordinatesOfBeginPoint:endPoint:width:
alignedFrameForGridRange:
alignedContentFrameForGridRange:
alignedStrokeFrameForCellRange:
alignedStrokeLineForRowGridRange:
alignedStrokeLineForColumnGridRange:
alignedStrokeFramePathForGridRange:transform:inset:reoriginToZero:cornerRadius:
alignedMaskStrokeFramePathForTransform:cornerRadius:
alignedStrokeLinePathForRowGridRange:transform:inset:reoriginToZero:cornerRadius:
alignedStrokeLinePathForColumnGridRange:transform:inset:reoriginToZero:cornerRadius:
alignedOverrideFrameForGridRange:strokeWidthOverride:
alignedFrame
drawSingleStroke:context:beginPoint:endPoint:width:strokeWidthForDrawing:strokeFrame:
p_drawStrokeForGridColumn:strokeRect:clearStroke:shadowType:context:
p_drawStrokeForGridRow:strokeRect:clearStroke:shadowType:context:
drawStrokesInGridRange:clearStrokes:context:
p_extendedBodyGridRange
p_bodyTranslationX
p_bodyTranslationY
p_createColumnCoordinatesForGridRange:invalidColumnIndex:previousCoordinates:outCoordinatesChanged:
p_createRowCoordinatesForGridRange:invalidRowIndex:previousCoordinates:validateSingleRow:outCoordinatesChanged:
validateCachedFrames
validateCoordinateCache:
p_tableCoordinateForGridColumn:
p_rawTableCoordinateForGridColumn:
p_tableCoordinateForGridRow:
p_gridColumnForTableCoordinate:
p_gridRowForTableCoordinate:
p_gridRangeForTableRect:
p_gridPointForTablePoint:
p_tableRectForGridRange:
p_tableCoordinateForX:
p_tableCoordinateForY:
p_tablePointForLayoutPoint:
p_cellTypeForGridPoint:
p_layoutOffsetForGridPoint:
p_layoutOffsetForTablePoint:
p_layoutPointForTablePoint:
p_tableRectForLayoutRect:
p_layoutRectForTableRect:
p_frameSpecForGridRange:frameType:strokeWidthOverride:
p_alignFrameSpec:
p_alignedFrameSpecForGridRange:strokeWidthOverride:
p_alignedFrameSpecForRowGridRange:
p_alignedFrameSpecForColumnGridRange:
bundle
layoutSpaceType
setLayoutDirectionIsLeftToRight:
headerColumnsRepeat
setHeaderColumnsRepeat:
headerRowsRepeat
setHeaderRowsRepeat:
viewScale
transformToCanvas
transformFromCanvas
setTransformFromCanvas:
transformToDevice
setTransformToDevice:
transformFromDevice
setTransformFromDevice:
drawBlackAndWhite
setDrawBlackAndWhite:
drawPreventAntialias
setDrawPreventAntialias:
tableOffset
setTableOffset:
bezierPathCache
setBezierPathCache:
gridRange
headerRowColumnCoordinates
setHeaderRowColumnCoordinates:
bodyColumnCoordinates
setBodyColumnCoordinates:
headerColumnRowCoordinates
setHeaderColumnRowCoordinates:
bodyRowCoordinates
setBodyRowCoordinates:
invalidatedForEditingCell
setInvalidatedForEditingCell:
invalidTableOffset
setInvalidTableOffset:
invalidColumnIndex
setInvalidColumnIndex:
invalidRowIndex
setInvalidRowIndex:
cachedFrame
setCachedFrame:
cachedAlignedFrame
setCachedAlignedFrame:
cachedStrokeFrame
setCachedStrokeFrame:
cachedAlignedStrokeFrame
setCachedAlignedStrokeFrame:
mLock
_layoutDirectionIsLeftToRight
_headerColumnsRepeat
_headerRowsRepeat
_drawBlackAndWhite
_drawPreventAntialias
_invalidatedForEditingCell
_invalidTableOffset
_invalidColumnIndex
_layoutSpaceType
_invalidRowIndex
_bundle
_viewScale
_bezierPathCache
_headerRowColumnCoordinates
_bodyColumnCoordinates
_headerColumnRowCoordinates
_bodyRowCoordinates
_tableOffset
_gridRange
_cachedFrame
_cachedAlignedFrame
_cachedStrokeFrame
_cachedAlignedStrokeFrame
_transformToCanvas
_transformFromCanvas
_transformToDevice
_transformFromDevice
T{?={?=II}{?=II}},N,V_gridRange
T@"TSTCoordinateArray",&,N,V_headerRowColumnCoordinates
T@"TSTCoordinateArray",&,N,V_bodyColumnCoordinates
T@"TSTCoordinateArray",&,N,V_headerColumnRowCoordinates
T@"TSTCoordinateArray",&,N,V_bodyRowCoordinates
T@"TSTLayoutSpaceBezierPathCache",&,N,V_bezierPathCache
TB,N,V_invalidatedForEditingCell
TB,N,V_invalidTableOffset
TS,N,V_invalidColumnIndex
TI,N,V_invalidRowIndex
TB,N,V_layoutDirectionIsLeftToRight
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedAlignedFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedStrokeFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedAlignedStrokeFrame
T@"TSTLayoutSpaceBundle",R,W,N,V_bundle
Ti,R,N,V_layoutSpaceType
T@"TSTLayout",R,W,N
T@"TSTLayoutEngine",R,W,N
TB,N,V_headerColumnsRepeat
TB,N,V_headerRowsRepeat
Td,N,V_viewScale
T{CGAffineTransform=dddddd},N,V_transformToCanvas
T{CGAffineTransform=dddddd},N,V_transformFromCanvas
T{CGAffineTransform=dddddd},N,V_transformToDevice
T{CGAffineTransform=dddddd},N,V_transformFromDevice
TB,N,V_drawBlackAndWhite
TB,N,V_drawPreventAntialias
T{CGPoint=dd},N,V_tableOffset
initWithCount:atOffset:layoutDirectionIsLeftToRight:
setTableWidthForRightToLeft:
_offset
_count
_coordinates
_average
_visibleIndices
_tableWidth
initWithDependencyTracker:
dependentsToDirtyByFromRef
isDoneDirtying
dirtyCellsNow
startDirtyingCellRef
stopDirtyingCellRef
_dirtyCellsWithNoLockForSeconds:fromStartTime:
dirtyCellsForSeconds:fromStartTime:
dirtyNewCellRef:forSeconds:fromStartTime:
dependTracker
startTime
timeout
startCellRef
dirtyingInProgress
setDirtyingInProgress:
_dependTracker
_startCellRef
_dirtyingInProgress
_dirtyingLock
_startTime
_timeout
_dependentsToDirtyByFromRef
TB,N,V_dirtyingInProgress
T^v,R,N,V_dependTracker
T@"NSDate",R,N,V_startTime
Td,R,N,V_timeout
T{TSCEInternalCellReference={TSUCellCoord=ISBB}SS},R,N,V_startCellRef
willApplyCell:baseCellCoord:tableUID:
willApplyBaseCellMap:tableUID:
willApplyConcurrentCellMap:tableUID:
willRemoveRows:tableUID:
didMergeRange:
didUnmergeRange:
mutableCopyWithZone:
initWithUUID:
initWithUUIDSet:
initWithUUIDVector:
initWithTSUUUIDVector:
uuidsAsVector
uuidsAsTSUVector
containsUuid:
intersectsSet:
isSubsetOf:
setByUnionWithSet:
anyUuid
isAllInvalid
expandedSetWithUuid:
reducedSetMinusUuid:
expandedSetWithUuids:
reducedSetMinusUuids:
expandedSetWithUuidsFromVector:
reducedSetMinusUuidsFromVector:
foreachUuid:
p_addUUID:
p_removeUUID:
p_reserve:
p_addUUIDs:
p_removeUUIDs:
p_addUUIDsFromVector:
p_removeUUIDsFromVector:
_uuidSet
removeAllUuids
addUUID:
removeUUID:
addUUIDs:
removeUUIDs:
addUuidsFromSet:
addUuidsFromSetReturningAdded:
addUuidsFromVector:
removeUuidsFromSet:
removeUuidsFromSetReturningRemoved:
removeUuidsFromVector:
remapWithMap:
reserve:
sharedCalculationEngineConfiguration
warnWhenFormulasReferToEmptyCells
setWarnWhenFormulasReferToEmptyCells:
mWarnWhenFormulasReferToEmptyCells
tokenContextWithExpressionNode:parenNestingLevel:
tokenContextWithExpressionNode:parenNestingLevel:argumentIndex:
initWithExpressionNode:parenNestingLevel:
initWithExpressionNode:parenNestingLevel:argumentIndex:
expressionNode
parenNestingLevel
argumentIndex
_expressionNode
_parenNestingLevel
_argumentIndex
T@"TSTExpressionNode",R,N,V_expressionNode
TQ,R,N,V_parenNestingLevel
TQ,R,N,V_argumentIndex
formulaResultForFormattedValueWithKnownCycleState:context:isInACycle:outErrorIsDueToCycle:formatAsPercent:
formulaResultForFormattedValue:context:suppressCycleCheck:formatAsPercent:
parseFormula:calcEngine:unqualifiedReferenceTableUID:containingCell:outError:outNeedsImportRewrite:isChartFormula:isSageUpgrade:
parseFormula:calcEngine:containingCell:outError:
const_astNodeArray
initWithNodeArray:translationFlags:hostTableUID:hostColumnUID:hostRowUID:
initWithNodeArray:translationFlags:
initWithNodeArray:
initWithCreator:argInfo:translationFlags:
initWithCreator:translationFlags:
initWithCreator:
initWithArchive:isPreUFF:
hasHostCell
containsInvalidRef
containsUidReferences
hasBadRefWithUidInfo
appendExternalTableUIDs:groupByUIDs:
usesFunctionsWithDateArgs
hasUidTracts
astNodeArrayCopy
evaluateWithContext:isInACycle:outErrorIsDueToCycle:
evaluateWithContext:
evaluateWithContextGridResult:
isEqualToFormula:
isEquivalentToFormula:context:thisContainingCell:thatContainingCell:
isEquivalentToFormula:
getPrecedents:calcEngine:hostCell:doImplicitIntersection:returnUidReferences:
getCategoryReferencesWithCalcEngine:
descriptionForLevel:
hostedDescriptionAtCell:calcEngine:hideUids:
hostedDescriptionAtCell:calcEngine:
hostedDescriptionAtCell:
sageFormulaStringForContainingCell:outHasSageUnsupportedFunctions:
copyByRewritingForTranspose:calcEngine:containingCell:outTransposeWarning:
copyByRewritingWithSpec:calcEngine:containingCell:
copyBySettingHostTableUID:hostColumnUID:hostRowUID:
copyByClearingHostCell
copyBySettingTranslationFlags:
copyByRewritingWithContext:rewriteBlock:
iterateWithBlock:stop:block:
copyByRewritingReferencesToUidForm:
copyByRewritingReferencesToGeometricForm:
copyByRepairingBadReferences:
copyByFreezingRefs:containingCell:
copyByThawingRefs:containingCell:
copyByConvertingColonTractToColon:breakUpIntoRefs:
copyByConvertingColonTractToColon:
copyByConvertingColonToColonTract:
copyByClearingUids:containingTableUID:
copyByMakingAllCategoryRefsIndirect:containingCell:
copyByRemappingOwnerUIDs:calcEngine:containingCell:outBadRefFound:
copyByRemappingHostCellAgnosticOwnerUIDs:calcEngine:containingCell:outError:
copyByRemappingOwnerUIDs:calcEngine:badRefFound:
copyByForceSettingOwnerUIDs:calcEngine:
copyByRemappingUids:rowMap:ownerMap:clearIfMissing:
copyByUpdatingLinkedTable:outfoundLinkedRef:
copyByRewritingForSageExport:targetDocumentSupportsCrossTableReferences:outshouldBakeWholeFormula:outFeaturesUsed:
copyByRewritingForSageImport:containingCell:
copyByRewritingForExcelImport:outFormulaResult:outDidModifyFormula:outFormulaReplacedForExcelCompatWarning:functionNameReplacedForExcelCompat:formulaFormatFromCell:
copyByRemovingNumberToDateCoercion:outFormulaResult:outDidModifyFormula:
copyByRewritingForExcelExport:
copyByRewritingNumberToDurationForSageImport:durationUnitLargest:
copyByOffsettingRelativeReferences:oldContainingCell:newContainingTable:offset:
copyByOffsettingRelativeReferences:
copyByRewritingGroupUid:groupByUID:
hostTableUID
hostColumnUID
hostRowUID
translationFlags
_astNodeArray
_translationFlags
_hash
_hostTableUID
_hostColumnUID
_hostRowUID
Tr^{TSKUIDStruct=QQ},R,N,V_hostTableUID
Tr^{TSKUIDStruct=QQ},R,N,V_hostColumnUID
Tr^{TSKUIDStruct=QQ},R,N,V_hostRowUID
T{TSCEFormulaTranslationFlags=C},R,N,V_translationFlags
initWithContext:children:firstIndex:lastIndex:
initAsCopyOf:intoContext:children:
isEqualToExpressionNode:
initWithContext:identifier:symbol:firstIndex:lastIndex:
setIdentifier:
recordHashesForSubexpressions:
copyByResolvingIdentifiers:hostTable:baseHostCell:forceReferenceInterpretation:symbolTable:oldToNewNodeMap:
detokenizedText
buildASTNodeArray:hostCell:symbolTable:
exportString
identifier
_identifier
T@"NSString",&,N,V_identifier
TI,N,V_symbol
initWithType:ranges:validVisualRanges:styleInsertionBehavior:caretAffinity:smartFieldRange:caretIsLeadingEdge:leadingCharIndex:headCharIndex:tailCharIndex:
initWithType:range:styleInsertionBehavior:caretAffinity:smartFieldRange:caretIsLeadingEdge:leadingCharIndex:
initWithType:range:validVisualRanges:styleInsertionBehavior:caretAffinity:smartFieldRange:caretIsLeadingEdge:leadingCharIndex:headCharIndex:tailCharIndex:activeTokenCharIndex:
initWithType:range:styleInsertionBehavior:caretAffinity:smartFieldRange:caretIsLeadingEdge:leadingCharIndex:activeTokenCharIndex:
allowsKeyCommandCaching
activeTokenCharIndex
setActiveTokenCharIndex:
mActiveTokenCharIndex
TQ,N,VmActiveTokenCharIndex
tst_isCompatibleWithCell:
tst_isCompatibleWithCellRegion:mergeRange:
gatherer
addRegion:
moveColumnsFromRange:toIndex:
moveRowsFromRange:toIndex:
p_cleanupStashedRangeIffExists
p_addRange:
gatheredCellRegion
p_gatherCellRegionViaCellRegionAddition
p_gatherCellRegionViaReducedOverlap
mightOverlap
setMightOverlap:
lastCellRangeAdded
setLastCellRangeAdded:
_gathererMap
_originToRangeMap
_mightOverlap
_lastCellRangeAdded
TB,N,V_mightOverlap
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_lastCellRangeAdded
initWithInitialCapacity:
managedNodeArrayWithCapacity:
malloc:
_head
_curBlock
_blockOffset
_managedNodeArrays
initWithColumn:context:
initWithColumn:forGroupBy:
initWithArchive:groupBy:
loadFromArchive:
unpackAfterUnarchiveForGroupBy:
cellRefsForRowIndexes:tableUID:
cellRefsForAggNodesAtGroup:
aggNodeForGroupNode:
rebuildAggFormulas
clearAggFormulas:
upgradeForNewAggregateTypes:
_aggRoot
T@"TSTGroupBy",W,N,V_groupBy
T{TSKUIDStruct=QQ},R,N,V_columnUid
drawSwatchInRect:inContext:
presetID
styleNetwork
p_documentRoot
initWithStyleNetwork:
swatchImage
tableHasStrongOwnership
setTableHasStrongOwnership:
tempUpgradePresetID
setTempUpgradePresetID:
_styleNetwork
_tableHasStrongOwnership
_tempUpgradePresetID
TQ,N,V_tempUpgradePresetID
T@"TSTTableStyleNetwork",C,N
TB,N,V_tableHasStrongOwnership
setCount:
setHidden:atIndex:
setHidden:atIndexes:
setHidden:inRange:
visibleIndices
isIndexHidden:
numberHiddenIndicesInRange:
numberVisibleIndicesInRange:
anyHiddenIndicesInRange:
visibleIndexAfterIndex:
visibleIndexAfterAndIncludingIndex:
visibleIndexBeforeIndex:
visibleIndexBeforeAndIncludingIndex:
findNthPreviousVisibleIndex:fromIndex:
findNthNextVisibleIndex:fromIndex:
enumerateVisibleIndexesInRange:usingBlock:
moveRangeFrom:toIndex:
deleteRange:
insertRange:
visibleIndexSet
setVisibleIndexSet:
_visibleIndexSet
T@"NSMutableIndexSet",&,N,V_visibleIndexSet
index
setIndex:
mIndex
initWithTableUID:preserveFlags:
initWithAbsoluteTractRef:hostCell:
initWithRangeRef:hostCell:
repairSpanningColumnSetting
repairSpanningRowSetting
numRelativeColumns
numRelativeRows
addRelativeColumn:
addRelativeRow:
addRelativeColumnRange:
addRelativeRowRange:
removeRelativeColumnRange:
removeRelativeRowRange:
relativeColumns
relativeRows
setRelativeColumns:
setRelativeRows:
verifySpanningSettings
relativeTopLeft
relativeBottomRight
relativeBoundingRangeWithContainingCell:
preserveFlagsFixingInversionsForTract:absFromRelColumns:absFromRelRows:
absoluteCellTractRefForHostCell:offTable:
absoluteCellTractRefForHostCell:
adjustRelativeIndexesBy:
_absTractRef
_relativeColumns
_relativeRows
T{TSUPreserveFlags=C},R,N
networkFromStyleProvider:
networkWithContext:presetID:colors:alternate:
createStylesInStylesheet:presetID:colors:alternate:
networkFromStylesheet:presetID:
networkFromTheme:presetID:
networkFromTheme:presetIndex:
networkWithContext:presetID:styleProvider:tableStyleMorphingBlock:nameStyleMorphingBlock:nameShapeStyleMorphingBlock:cellStyleMorphingBlockByStyleArea:textStyleMorphingBlockByStyleArea:
nonValidatedNetworkWithContext:presetID:styleProvider:tableStyleMorphingBlock:nameStyleMorphingBlock:nameShapeStyleMorphingBlock:cellStyleMorphingBlockByStyleArea:textStyleMorphingBlockByStyleArea:
networkWithContext:presetID:styleProvider:styleMorphingBlock:
tableNameStyleIDForPreset:
tableNameShapeStyleIDForPreset:
defaultTableNameShapeStyleWithContext:
curatedTableStylePropertySetForCrossDocumentPasteMasterComparison
identifiersForPresetID:
deriveCategoryTopStrokeFromFooterRowSeparatorStroke:
deriveCategoryBottomStrokeFromFooterRowSeparatorStroke:
deriveCategoryInteriorStrokeFromFooterRowVerticalStroke:
pivotTableStyleAreaForRowLevel:columnLevel:numberOfRowLevels:numberOfColumnLevels:columnIndex:
styleAreaForColumnType:rowType:forAPivotTable:
deriveHeaderColumnPivotGroupHorizontalStrokeFromTableStyle:propertyMap:
deriveHeaderColumnPivotGroupDeEmphasisStrokeFromTableStyle:propertyMap:
p_deriveHeaderColumnPivotSeparatorAndHeaderRowPivotGroupVerticalStrokeFromTableStyle:propertyMap:returnHeaderRowPivotGroupVerticalStroke:
deriveHeaderColumnPivotSeparatorStrokeFromTableStyle:propertyMap:
deriveHeaderRowPivotGroupVerticalStrokeFromTableStyle:propertyMap:
deriveHeaderRowPivotGroupDeEmphasisStrokeFromTableStyle:propertyMap:
deriveHeaderRowPivotTitleStrokeFromTableStyle:propertyMap:
deriveFooterRowPivotGroupVerticalStrokeFromTableStyle:propertyMap:
deriveBodyPivotGroupHorizontalStrokeFromTableStyle:propertyMap:
deriveBodyPivotGroupVerticalStrokeFromTableStyle:propertyMap:
deriveBodyPivotDeEmphasisHorizontalStrokeFromTableStyle:propertyMap:
deriveBodyPivotEmphasisVerticalStrokeFromTableStyle:propertyMap:
setPresetID:
cellStyles
textStyles
networkForPivotTables
initWithContext:styleProvider:
initWithContext:styleProvider:presetID:
copyWithZone:context:
copy
stylesInStylesheet:
cellStyleForTableStyleArea:
textStyleForTableStyleArea:
setCellStyle:forTableStyleArea:
setTextStyle:forTableStyleArea:
styleForStyleNetworkIndex:
enumerateAllStylesWithBlock:
dictionaryWithPreset:
initWithContext:fromDictionary:withPreset:
p_saveToArchive:archiver:isPre30Alternate:
p_clearCategoryStyles
clearAndGenerateCategoryStylesConnectedToStylesheet:
generateCategoryStylesConnectedToStylesheet:
generateCategoryStrokesInTableStyle:
generatePivotStrokesInTableStyle:
maintainPivotStrokesInTableStyle:fromTable:
deriveCategoryCellStyleForTableStyleArea:connectedToStylesheet:
sheetFill
p_deriveCategoryCellStyleForTableStyleArea:fromCellStyle:connectedToStylesheet:
deriveCategoryTextStyleForTableStyleArea:connectedToStylesheet:
p_deriveCategoryTextStyleForTableStyleArea:fromTextStyle:connectedToStylesheet:
p_clearPivotStyles
clearAndGeneratePivotStylesConnectedToStylesheet:
generatePivotStylesConnectedToStylesheet:
p_derivePivotCellStyleFromCellStyle:optionalSourceFill:brightnessShift:connectedToStylesheet:styleArea:
_presetIndex
_cellStyles
_textStyles
TQ,N
cellStyle
setCellStyle:
textStyle
setTextStyle:
_cellStyle
_textStyle
T@"TSTCellStyle",&,N,V_cellStyle
T@"TSWPParagraphStyle",&,N,V_textStyle
idOfFirstOccurence
setIdOfFirstOccurence:
_idOfFirstOccurence
T{TSUCellCoord=ISBB},N,V_idOfFirstOccurence
TQ,N,V_count
setHostTableUID:
suppressIdenticalEndReference
setSuppressIdenticalEndReference:
useSymbolicNames
setUseSymbolicNames:
allowTableName
setAllowTableName:
allowSpanningColumnReferenceBodyQualifier
setAllowSpanningColumnReferenceBodyQualifier:
showGeometricAsBase
setShowGeometricAsBase:
quoteComponents
setQuoteComponents:
forceEscaping
setForceEscaping:
forceTableName
setForceTableName:
forceSheetName
setForceSheetName:
forFormulaPlainText
setForFormulaPlainText:
usedSymbolicName
setUsedSymbolicName:
_suppressIdenticalEndReference
_useSymbolicNames
_allowTableName
_allowSpanningColumnReferenceBodyQualifier
_showGeometricAsBase
_quoteComponents
_forceEscaping
_forceTableName
_forceSheetName
_forFormulaPlainText
_usedSymbolicName
T{TSKUIDStruct=QQ},N,V_hostTableUID
TB,N,V_suppressIdenticalEndReference
TB,N,V_useSymbolicNames
TB,N,V_allowTableName
TB,N,V_allowSpanningColumnReferenceBodyQualifier
TB,N,V_showGeometricAsBase
TB,N,V_quoteComponents
TB,N,V_forceEscaping
TB,N,V_forceTableName
TB,N,V_forceSheetName
TB,N,V_forFormulaPlainText
TB,N,V_usedSymbolicName
hiddenStateForRowsOwnerUID
hiddenStateForColumnsOwnerUID
conditionalStyleOwnerUID
sortRuleReferenceTrackerOwnerUID
mergeOwnerUID
pencilAnnotationOwnerUID
categoryAggregatesOwnerUID
groupByUID
nextTableUID
nextHiddenStateForRowsOwnerUID
nextHiddenStateForColumnsOwnerUID
nextConditionalStyleOwnerUID
nextSortRuleReferenceTrackerOwnerUID
nextMergeOwnerUID
nextPencilAnnotationOwnerUID
nextCategoryAggregatesOwnerUID
nextGroupByUID
setNextHiddenStateForRowsOwnerUID:
setNextHiddenStateForColumnsOwnerUID:
setNextConditionalStyleOwnerUID:
setNextSortRuleReferenceTrackerOwnerUID:
setNextMergeOwnerUID:
setNextPencilAnnotationOwnerUID:
setNextCategoryAggregatesOwnerUID:
setNextGroupByUID:
setNextTableUID:
p_recreateUIDs
usesAllSubOwnerUIDs
initWithTableUID:pasteBoardTableUID:hiddenStateOwnerForRowsUID:hiddenStateOwnerForColumnsUID:conditionalStyleOwnerUID:sortRuleReferenceTrackerOwnerUID:mergeOwnerUID:pencilAnnotationOwnerUID:categoryAggregatesOwnerUID:groupByUID:
pivotDataTableMapper
initForPivotDataTableWithMapper:
initWithFormulaOwnerUID:
initWithIdentityMapping
setToIdentityMapping
setToUpgradeMapping
fullDescription
ownerUIDMap
pbTableUID
categoryOwnerUID
nextCategoryOwnerUID
setNextCategoryOwnerUID:
_nextTableUID
_hiddenStateForRowsOwnerUID
_nextHiddenStateForRowsOwnerUID
_hiddenStateForColumnsOwnerUID
_nextHiddenStateForColumnsOwnerUID
_conditionalStyleOwnerUID
_nextConditionalStyleOwnerUID
_sortRuleReferenceTrackerOwnerUID
_nextSortRuleReferenceTrackerOwnerUID
_mergeOwnerUID
_nextMergeOwnerUID
_pencilAnnotationOwnerUID
_nextPencilAnnotationOwnerUID
_categoryAggregatesOwnerUID
_nextCategoryAggregatesOwnerUID
_groupByUID
_nextGroupByUID
_pbTableUID
_uidMap
_categoryOwnerUID
_nextCategoryOwnerUID
T{TSKUIDStruct=QQ},R,N,V_pbTableUID
T{TSKUIDStruct=QQ},R,N,V_categoryOwnerUID
T{TSKUIDStruct=QQ},N,V_nextCategoryOwnerUID
initWithSecondsTillAbort:
isAborted
_isAborted
TB,R,V_isAborted
localVariablesEnabled
pauseEvaluationForPotentialTermination
confirmTermination
resumeEvaluationIfNotTerminated
isPotentiallyTerminating
generateRandomSeed
randomSeedFromRandomLo:hi:
splitRandomSeed:intoLo:hi:
legacyGlobalIDStringToOwnerUIDMap
documentRandomSeed
setDocumentRandomSeed:
currentDate
setCurrentDate:
currentTimeZone
setCurrentTimeZone:
setCurrentDate:timeZone:markVolatilesDirty:
currentTimeZoneCalendar
shouldAbortRecalculation
XLImportDateMode
setXLImportDateMode:
currentTransaction
previousLocaleIdentifier
clearPreviousLocaleIdentifier
loadFromFileVersion
setLoadFromFileVersion:
tablesByName
tableNameChangeDistributor
tableUIDHistory
currentTableIdRemapper
setCurrentTableIdRemapper:
duringRollback
setDuringRollback:
p_addApplicationNotification
p_removeApplicationNotification
applicationDidBecomeActive:
applicationWillResignActive:
accessController
setAccessController:
changeNotifier
setChangeNotifier:
documentDidLoad
isInCollaborationMode
recalculateWithTimeout:
dirtyCellsForUpgrade
upgradingFormulasMinion
beginUpgradingFormulasMode
scheduleRepairingSpanningFormulasInOwner:
setTableRange:bodyRange:forTableUID:
verifyTableAndBodyRangesForTable:
forwardRegisterOwnerWithOwnerUID:legacyGlobalID:
registerOwnerWithOwnerUID:owner:referenceResolver:baseOwnerUID:ownerKind:
ownerKindForOwnerUID:
ownerKindForOwnerID:
unregisterOwner:
ownerIsRegistered:
ownerForOwnerUID:
ownerForUUIDBytes:
allOwnersRegistered
shouldForceRegisterAllTables
allRefResolverOwnerUIDs
enumerateFormulaOwnersUsingBlock:
cellDependMemoryUseEstimate
clearLegacyGlobalIDs
needsSubOwnerIDUpgrade
setNeedsSubOwnerIDUpgrade:
addSubOwnerAliasesForUpgrade:
upgradeToSubOwnerUIDForOwners:
duringSubOwnerUIDUpgrade
resolverForCellRef:
anyResolver
resolverForTableUID:
resolverForTableID:
tableResolverForTableUID:
tableResolverForTableID:
tableOrLinkedResolverForTableUID:
tableResolverForRefResolver:
internalFormulaOwnerIDForFormulaOwnerUID:
formulaOwnerUIDForInternalFormulaOwnerID:
resolverContainerMatchingName:
resolverMatchingNameWithContextContainer:contextContainerName:
ownerUIDForLegacyGlobalID:registeringIfNeeded:
setOwnerUIDForLegacyGlobalID:ownerUID:
uuidForTableUID:andIndex:direction:
openTransaction
closeTransaction:
updateCalculatedPrecedents:forFormula:atCellRef:withState:
removeFormulasFromRange:
setError:forCell:
clearErrorForCell:
clearErrorForCells:
rootCauseForErrorInCell:atRootCell:
formulaCoordsReferringToRange:fromOwner:
formulaCoordsReferringToRange:fromOwner:skipSpanning:
formulaCoordsInRange:inOwner:
allFormulaCoordsInOwner:
hasFormulaAt:
hasFormulaCellsUsingNowTodayRandom
dirtyCellCountInOwner:
dirtyCellCount
allCellsAreClean
allCellsAreCleanNonBlocking
cellIsInACycle:
cellsInACycleInOwner:
cellWillBeModifiedInCurrentRecalcCycle:
referenceWasGuaranteedCleanAtRecalcCycleStart:
rewritingMinion
setRewritingMinion:
extendTableUIDHistoryWithRewrite:
rollbackTableUIDHistoryWithRewriteInfo:
mapOwnerUID:
intendToChangePrecedent:
markCellRefsAsDirty:
markCoordsDirty:inOwner:
headerStateOfTableChanged:changedRows:
headerStateOfTableChanged:
dirtyCellsForColumnRange:fromTable:tableRange:
dirtyCellsForRowRange:fromTable:tableRange:
dirtyCellsForRemovalOfColumns:fromTable:tableRange:
dirtyCellsForRemovalOfRows:fromTable:tableRange:
dirtyCellsForInsertionOfColumns:forTable:tableRange:headerRange:
dirtyCellsForInsertionOfRows:forTable:tableRange:headerRange:
dirtyCellsForMergingRange:forTable:headerRowRange:headerColumnRange:
markAllExternalGroupByRefsDirty:
markAllFunctionsAsDirty
markIndirectCallsAsDirty
markOnlyDependentsDirty:
referencesToDirty
scheduleDetectAndRepairConsistencyViolations
hasDateTimeVolatileFunctions
hasRemoteDataFunctions
markDateTimeVolatileFunctionsAsDirty
markDateTimeVolatileFunctionsAsDirtyForCurrentDateTime
rewriteSpecStack
pushRewriteSpec:
popRewriteSpec:
shouldSendSetNowCommand
markRandomVolatileFunctionsAsDirty
markLocaleVolatileFunctionsAsDirty
markGeometryVolatileFunctionsAsDirtyInOwner:
markRemoteDataVolatileFunctionsAsDirty
markAllVolatileFunctionsAsDirty
markOwnerAsDirty:
cellContainsAFormula:
isCellReferenceDirty:
p_blockUntilRecalcIsCompleteOnNewThreadWithTimeout:
debugFlushAllDirtyReferences
blockUntilRecalcIsCompleteWithTimeout:
beginSuppressingWillModifyCalls
endSuppressingWillModifyCalls
pauseRecalculation
pauseRecalculationSometimeSoon
resumeRecalculation
recalculationIsPaused
pauseRecalculationForBlock:
resumeRecalculationForBlock:
startRecalculation
isRecalculationStarted
isRecalculationRunning
startRecalcTaskIfNecessary
superWillModify
executeBlockWhileCalculationEngineIsNotWriting:
evaluateSynchedWithCalcEngineWithFormula:evalContext:
beginBatchingGroupCellDirtying
endBatchingGroupCellDirtying
hasRunRecalculationALongTime
recalcTimeInSecs
clearRecalculationTimer
assertAt:nonCalcEngineException:evaluatingFormula:
corruptCellRefs
resetCorruptCellRefs:
remoteDataStore
setRemoteDataStore:
replaceRemoteDataKeysInterestedIn:forCell:
markRemoteDataVolatileFunctionsAsDirtyForKeys:
rangeIsWithinTable:
referenceIsValid:
referenceIsValidIncludingSheet:
namer
refParser
headerNameMgr
namedReferenceManager
beginTrackingNamesInTableForLegacyNRM:
endTrackingNamesInTableForLegacyNRM:
setDisallowHeaderIndexingForTableUID:
clearDisallowHeaderIndexingForTableUID:
hasDisallowedHeaderIndexingForTableUID:
cellHasPrecedents:
precedentsOfCell:
cellDependentsOfCell:
emptyReferenceSet
emptyReferenceSetWrapper
dependencyTracker
aggregateTypeForCategoryRef:
cellRefsForCategoryRef:atRowUid:
categoryRefsForSpanningCategoryRef:
unorderedCellRefsForCategoryRef:atRowUid:
valuesForCategoryRef:atRowUid:hidingActionMask:error:
valueGridForCategoryRef:atRowUid:hidingActionMask:error:
aggregateRangeRefForCategoryRef:
addCalculationStateObserver:
removeCalculationStateObserver:
addAllFormulasCleanObserver:
removeAllFormulasCleanObserver:
numberOfCellsWithFormulas
numFormulaCellsInOwner:
hasMaxNumFormulas
documentRoot
documentLocale
assertDirtyPrecedentsCountConsistency
detectAndRepairDirtyCellsAreOnLeafQueue
allFormulaOwnersAsString
allCellDependenciesAsString
cellDependenciesAsStringForOwner:
allRangeDependenciesAsString
allSpanningDependenciesAsString
verifyAllOwnersAreKnown
cellCoordinatesNeedingExcelImportForTable:
foundConsistencyIssues
shouldDelayArchiving
delayedArchivingPriority
cppCalcEngine
setCppCalcEngine:
_cppCalcEngine
_isUnarchiving
_calculationWillShutDown
T^v,N,V_cppCalcEngine
T@"TSKAccessController",W,N
T@"TSKChangeNotifier",W,N
T@"NSDate",&
T@"NSTimeZone",&
T@"TSULocale",&,V_locale
T@"NSString",R
T@"<TSCEFormulaReplacing>",R,N
T@"TSCETablesByName",R
T@"TSCETablesByNameDistributor",R
T@"TSCETransaction",R
T@"TSCERewritingMinion",&,N
T@"TSCERemoteDataStore",R
T@"<TSCERefNamingProtocol>",R,&,N
T@"<TSCERefParsingProtocol>",R,&,N
T@"TSTHeaderNameMgr",R,&,N
T@"TSCENamedReferenceManager",R,N
T@"TSCERewriteTableUIDInfo",R
T@"<TSKMultiTableRemapping>",&
stringForGroupByChangeType:
initWithType:groupByUid:
initWithType:groupingColumnChanges:groupByUid:
addRemoveOfGroupUid:
mapPreviousGroupNodeUid:toUpdatedGroupNodeUid:
previousGroupNodeUidForUpdatedGroupNodeUid:
updatedGroupNodeUidForPreviousGroupNodeUid:
previousRelativeAncestorLevelForUpdatedAncestorCategoryLevel:numLevels:
updatedRelativeAncestorLevelForPreviousAncestorCategoryLevel:numLevels:
changeType
setChangeType:
previousLevel
setPreviousLevel:
updatedLevel
setUpdatedLevel:
isInverse
setIsInverse:
groupingColumnChanges
previousGroupNodeToUpdated
previousGroupNodeUids
updatedGroupNodeUids
removedGroupNodeUids
updatedGroupNodeToPrevious
_previousGroupNodeUids
_updatedGroupNodeUids
_removedGroupNodeUids
_changeType
_previousLevel
_updatedLevel
_isInverse
_groupingColumnChanges
_previousGroupNodeToUpdated
_updatedGroupNodeToPrevious
T^v,R,N,V_updatedGroupNodeToPrevious
TC,N,V_changeType
TC,N,V_previousLevel
TC,N,V_updatedLevel
TB,N,V_isInverse
T{TSKUIDStruct=QQ},R,N,V_groupByUid
T^v,R,N,V_groupingColumnChanges
T^v,R,N,V_previousGroupNodeToUpdated
T@"TSCEUIDSet",R,N,V_previousGroupNodeUids
T@"TSCEUIDSet",R,N,V_updatedGroupNodeUids
T@"TSCEUIDSet",R,N,V_removedGroupNodeUids
controlCellSelection
setControlCellSelection:
_controlCellSelection
T@"TSTTableControlCellSelection",&,N,V_controlCellSelection
cache
setObject:forKey:
objectForKey:
removeAllObjects
cacheWithDataStore:
initWithDataStore:
formatForKey:
formats
setFormats:
styles
setStyles:
_formats
_styles
T@"TSTTableDataListItemCache",&,N,V_formats
T@"TSTTableDataListItemCache",&,N,V_styles
strokePresetListForDefaultPropertyMapForTablePresetID:colors:
strokePresetListForDefaultPropertyMapWithHorizontalStroke:verticalStroke:exteriorStroke:
strokePresetListForDefaultPropertyMapWithFatStroke:andThinStroke:
presetAtIndex:
setStrokePreset:atIndex:
setStroke:forPresetIndex:
presets
setPresets:
mCount
_presets
T@"NSPointerArray",&,N,V_presets
rewriteTypeUsesAmendRewriteSpec:
initWithRewriteType:
insertAtUid
setInsertAtUid:
insertOppositeUid
setInsertOppositeUid:
conditionalStylesForUndo
coordMapperForTableUID:calcEngine:
addCoordMapper:
miniDescription
affectedOwnerUID
affectedOwnerUIDs
affectedConditionalStyleOwnerUID
isForTable:
tableRangeForTable:calcEngine:
updatedCellRefForOriginalCellRef:
originalCellRefForUpdatedCellRef:
flattenedCellRefForCategoryRef:calcEngine:
mergeRangeAtOriginalCellRef:
loadMergeRangesContainingFormulasInTable:calcEngine:
adjustViewTractRef:calcEngine:containingCellRef:undoTractList:
restoreViewTractRefFromUndoTractList:calcEngine:containingCellRef:
willModifyTable:uidResolver:calcEngine:
addNestedRewrite:
nestedRewrites
prepareToRewriteWithCalcEngine:
amendRewriteWithCalcEngine:
willModifySrcTable:srcUidResolver:dstTable:dstUidResolver:
didModifySrcTable:dstTable:
didModifyTable:
didModifyTable:calcEngine:
clearTableIndexes
affectedRange
expandedRowColumnUuids
rewriteType
willModifyWasCalled
didModifyWasCalled
setConditionalStyleOwnerUID:
setGroupByUID:
rewriteSpecBaseToChrome
setRewriteSpecBaseToChrome:
rewriteSpecChromeToBase
setRewriteSpecChromeToBase:
transposedInfo
setTransposedInfo:
rowColumnInfo
setRowColumnInfo:
regionMovedInfo
setRegionMovedInfo:
mergeInfo
setMergeInfo:
mergeOriginMovedInfo
setMergeOriginMovedInfo:
tableUIDInfo
setTableUIDInfo:
groupNodeUIDInfo
setGroupNodeUIDInfo:
groupByChange
setGroupByChange:
shuffleMap
setShuffleMap:
formulasForUndo
setFormulasForUndo:
warningSetsForUndo
setWarningSetsForUndo:
canBeNested
setCanBeNested:
coordMapper
setCoordMapper:
srcCoordMapper
setSrcCoordMapper:
_rewriteType
_tableRange
_canBeNested
_willModifyWasCalled
_didModifyWasCalled
_transposedInfo
_rowColumnInfo
_regionMovedInfo
_mergeInfo
_mergeOriginMovedInfo
_shuffleMap
_tableUIDInfo
_groupNodeUIDInfo
_groupByChange
_formulasForUndo
_warningSetsForUndo
_conditionalStylesForUndo
_nestedRewrites
_mergeRangesContainingFormulas
_coordMappersLock
_coordMappersByTableUID
_rewriteSpecBaseToChrome
_rewriteSpecChromeToBase
_coordMapper
_srcCoordMapper
TI,R,N,V_rewriteType
T{TSKUIDStruct=QQ},N,V_conditionalStyleOwnerUID
T{TSKUIDStruct=QQ},N,V_groupByUID
T@"TSCEFormulaRewriteSpec",&,N,V_rewriteSpecBaseToChrome
T@"TSCEFormulaRewriteSpec",&,N,V_rewriteSpecChromeToBase
T@"TSCETableTransposedInfo",&,N,V_transposedInfo
T@"TSCEFormulaRewriteInfo_RowColumnInfo",&,N,V_rowColumnInfo
T@"TSCEFormulaRewrite_RegionMovedInfo",&,N,V_regionMovedInfo
T@"TSCEFormulaRewrite_RegionMergedInfo",&,N,V_mergeInfo
T@"TSCEFormulaRewrite_MergeOriginMovedInfo",&,N,V_mergeOriginMovedInfo
T@"TSCERewriteTableUIDInfo",&,N,V_tableUIDInfo
T@"TSCERewriteGroupNodeUIDInfo",&,N,V_groupNodeUIDInfo
T@"TSCEGroupByChange",&,N,V_groupByChange
T@"TSKShuffleMapping",&,N,V_shuffleMap
T@"TSCEFormulasForUndo",&,N,V_formulasForUndo
T@,&,N,V_warningSetsForUndo
TB,R,N,V_willModifyWasCalled
TB,R,N,V_didModifyWasCalled
TB,N,V_canBeNested
T@"TSCECoordMapper",&,N,V_coordMapper
T@"TSCECoordMapper",&,N,V_srcCoordMapper
initWithMask:horizontalStroke:verticalStroke:exteriorStroke:
initWithDeprecatedArchive:unarchiver:
horizontalStroke
setHorizontalStroke:
verticalStroke
setVerticalStroke:
exteriorStroke
setExteriorStroke:
mask
setMask:
mHorizontalStroke
mVerticalStroke
mExteriorStroke
mVisibleMask
T@"TSDStroke",&,N,VmHorizontalStroke
T@"TSDStroke",&,N,VmVerticalStroke
T@"TSDStroke",&,N,VmExteriorStroke
TI,N,VmVisibleMask
initWithParser:
numberOfItems
appendNodeArray:
makeListWithFirstElem:trailingWhitespace:isArray:parser:
arrayOrListNode:
functionNode:functionName:whitespaceAfterLabel:
trailingWhitespace
setTrailingWhitespace:
isArray
_nodeArrays
_trailingWhitespace
_isArray
T@"NSString",&,N,V_trailingWhitespace
TB,R,N,V_isArray
tsce_hasCaseInsensitivePrefix:withLocale:
containerNameForTable:
tableNameForTable:
addTable:
dropTable:withTableName:withContainerName:
dropTable:
renameTable:fromName:
tableForTableName:containerName:
anyTableForTableName:
resolverMatchingName:
resolverNameIsUsed:
_tablesByTableNameByContainerName
_tableNameChangeDistributor
T@"TSCETablesByNameDistributor",R,N,V_tableNameChangeDistributor
tstLoadFromArchive:unarchiver:
tstSaveToArchive:archiver:
tstRegisterPresetSourceClasses
initWithLayout:range:flags:searchFlags:
initWithLayoutEngine:range:flags:searchFlags:
layoutRange
layoutCellID
layoutCell
modelIteratorData
setModelIteratorData:
queriedModel
setQueriedModel:
modelIteratorHasCell
setModelIteratorHasCell:
columnOrderReversed
setColumnOrderReversed:
numberOfLayoutColumns
setNumberOfLayoutColumns:
setNumberOfColumns:
setNumberOfRows:
isDynamicallyChangingContent
setIsDynamicallyChangingContent:
isDynamicallyChangingRowOrColumnCount
setIsDynamicallyChangingRowOrColumnCount:
isDynamicallyHidingRowsCols
setIsDynamicallyHidingRowsCols:
isDynamicallyRemovingText
setIsDynamicallyRemovingText:
layoutCellData
setLayoutCellData:
_queriedModel
_modelIteratorHasCell
_columnOrderReversed
_isDynamicallyChangingContent
_isDynamicallyChangingRowOrColumnCount
_isDynamicallyHidingRowsCols
_isDynamicallyRemovingText
_numberOfLayoutColumns
_numberOfColumns
_numberOfRows
_layoutCellID
_layoutCell
_modelIteratorData
_layoutCellData
_layoutRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},R,N,V_layoutRange
T{TSUCellCoord=ISBB},R,N,V_layoutCellID
T@"TSTCell",R,N,V_layoutCell
T@"<TSTCellIteratorData>",N,V_modelIteratorData
TB,N,V_queriedModel
TB,N,V_modelIteratorHasCell
TB,N,V_columnOrderReversed
TI,N,V_numberOfLayoutColumns
TI,N,V_numberOfColumns
TI,N,V_numberOfRows
TB,N,V_isDynamicallyChangingContent
TB,N,V_isDynamicallyChangingRowOrColumnCount
TB,N,V_isDynamicallyHidingRowsCols
TB,N,V_isDynamicallyRemovingText
T@"TSTMutableCellIteratorData",&,N,V_layoutCellData
T@"TSTLayoutEngine",R,N,V_layoutEngine
initWithContext:firstIndex:lastIndex:
copyIntoContext:bakeModes:children:
deepCopyIntoContext:bakeModes:withTokenDict:
isOptional
forceReferenceInterpretationOfChildren
setArgumentSpec:
children
setChildren:
fixStorageLanguage:
buildASTNodeArray:hostCell:
popover
hasMenu
addTSTCanvasReferencesToSet:inRangeContext:withColorHelper:preferringNodesFromStorage:allVisitedNodes:
enumerateExpressionNodesUsingBlock:
compareFirstLastIndices:
firstIndexOfSubtree
lastIndexOfSubtree
rangeEncompassingExpressionNodesInRange:
subtreeContainsIndex:
mostSpecificNodeContainingIndex:correspondingIndex:
isFunctionNode
addVariablesMatchingPrefix:forFormulaIndex:toDictionary:symbolTable:
largestCommonSubexpression
largestCommonSubexpressionExcludingExisting:cseData:
addAllIdentifiersToSymbolTable:
replaceOccurrencesOfChildrenInSet:withIdentifier:symbol:
canEliminateLargestCommonSubexpressionWithSymbolTable:
eliminateLargestCommonSubexpressionWithSymbolTable:newIdentifierOut:
lowestCommonAncestor:
p_eliminateLargestCommonSubexpressionWithLCA:expressions:withSymbolTable:newIdentifierOut:
eliminateLargestCommonSubexpression:withSymbolTable:newIdentifierOut:
tokenAttachment
setTokenAttachment:
firstIndex
setFirstIndex:
lastIndex
setLastIndex:
whitespaceBefore
setWhitespaceBefore:
whitespaceAfter
setWhitespaceAfter:
_argumentSpec
_tokenAttachment
_firstIndex
_lastIndex
_whitespaceBefore
_whitespaceAfter
T@"NSArray",&,N
T^v,N
T@"TSTWPTokenAttachment",W,N,V_tokenAttachment
TQ,N,V_firstIndex
TQ,N,V_lastIndex
T@"NSString",&,N,V_whitespaceBefore
T@"NSString",&,N,V_whitespaceAfter
T@"UIViewController",R,N
Ti,R,D,N
T@"NSString",R,D,N
storageExceedsMaxFormulaLength:
singleQuoteCharacters
leadingSingleQuoteEscapeCharacters
doubleQuoteCharacters
leftParenCharacters
rightParenCharacters
isFormulaEqualsCharacter:
quoteContextAtCharIndex:previousContext:inStorage:
formulaQuoteContextAtCharIndex:inStorage:
parenCountAtCharIndex:inStorage:
parenCountAtCharIndex:unmatchedParenCount:quoteContext:inStorage:
p_charactersToTemporarilyChopOffEndToFixSyntaxError
initWithCalculationEngine:expressionTree:baseHostCell:hostTable:
initWithContext:calculationEngine:viewHostCell:formula:ownerUID:suppressAutomaticNamedReferenceInvalidation:
initWithContext:calculationEngine:baseHostCell:formula:ownerUID:suppressAutomaticNamedReferenceInvalidation:
initWithContext:calculationEngine:viewHostCell:formula:ownerUID:
initWithContext:calculationEngine:baseHostCell:formula:ownerUID:
initWithCalculationEngine:baseHostCell:hostTable:
initWithCalculationEngine:viewHostCell:hostTable:
geometricFormula
formula
hasBareArgumentPlaceholders
nodesToCheckForBareArgumentPlaceholders
fixPreserveFlagsForCategoryRefInNode:
reparseWithStorage:
reparseWithStorage:adjustExpressionTree:
p_fixFormula:
formulaDetokenizedText
p_formulaAsTextReturningTokenValues:
canSimplify
simplify
expressionTree
setExpressionTree:
calculationEngine
isSyntaxError
setSyntaxError:
fixupFormulas
setFixupFormulas:
formulaWasFixable
formulaFixupsShouldStick
setEmpty:
initialWhitespace
setInitialWhitespace:
_expressionTree
_calculationEngine
_hostInfo
_initialWhitespace
_hostCell
_syntaxError
_fixupFormulas
_formulaWasFixable
_formulaFixupsShouldStick
_empty
T@"TSCECalculationEngine",W,N,V_calculationEngine
syntaxError
TB,N,GisSyntaxError,V_syntaxError
T@"NSString",C,N,V_initialWhitespace
TB,N,V_fixupFormulas
TB,R,N,V_formulaWasFixable
TB,R,N,V_formulaFixupsShouldStick
T@"TSTExpressionNode",&,N,V_expressionTree
TB,N,GisEmpty,V_empty
tst_hasFormulaEqualsPrefix
tst_isEqualToFormulaEqualsString
tst_hasLeadingSingleQuoteEscape
tst_isOneCharacterInSet:
tst_hasLeadingCharacterInSet:
tst_cleanForFormulaEditor
enumerateCellStringsUsingBlock:
enumerateCellStringsForRows:rowCount:usingBlock:
tsce_p_initializeQuotes
tsce_needsReferenceSingleQuoteEscaping
tsce_newStringByForcingSingleQuoteEscapes:
tsce_stringByAddingSingleQuoteEscapes
tsce_stringByAddingSingleQuoteEscapesIfNecessary
tsce_stringByForcingSingleQuoteEscapes:
tsce_newStringByAddingSingleQuoteEscapesIfNecessary
tsce_stringByUnescapingSingleQuotes
tsce_isSingleQuoted
tsce_stringByUnescapingPartialQuotedString
tsce_stringByUnescapingPartialQuotedStringWithEmptyQuotedStringOK:
tsce_stringByUnescapingPartialQuotedStringWithEmptyQuotedStringOK:preserveTrailingUnquotedWhitespace:
tsce_newStringByAddingDoubleQuoteEscapesIfNecessary
tsce_stringByReplacingTabsAndNewlinesWithASingleSpace
tsce_stringByRemovingNewlines
tsce_referenceComponentsSeparatedByPathDelimiter
ptsce_referenceComponentsSeparatedByCharacterInSet:
tsce_referenceComponentsSeparatedByColon
tsce_referenceComponentsSeparatedBySpace
tsce_stringByFoldingForNamedReferenceMatchingWithLocale:
popupCellSpec:startWithFirstItem:
initWithPopupModel:startWithFirstItem:
displayChoicesForInspector
asChooserControlSpec
indexForValue:
displayStringAtIndex:
valueForIndex:
tskMultipleChoiceListFormat
popupModel
setPopupModel:
startWithFirstItem
_displayChoices
_startWithFirstItem
_popupModel
T@"TSTPopUpMenuModel",&,N,V_popupModel
TB,R,N,V_startWithFirstItem
setHeight:forTextStyle:
heightForTextStyle:
textStyleReferences
setTextStyleReferences:
textStyleToFontHeight
setTextStyleToFontHeight:
_rwLock
_textStyleReferences
_textStyleToFontHeight
T@"NSMutableArray",&,N,V_textStyleReferences
T@"TSUPointerKeyDictionary",&,N,V_textStyleToFontHeight
argSpecWithType:accessorMode:rangeContext:
argSpecWithType:accessorMode:rangeContext:argumentContext:
argSpecWithType:accessorMode:rangeContext:disallowedTypes:disallowDuration:disallowCurrency:
argSpecWithType:accessorMode:rangeContext:modeValues:defaultModeIndex:
argSpecWithType:accessorMode:rangeContext:argumentContext:disallowedTypes:referenceForGeometryOnly:
argSpecWithType:accessorMode:rangeContext:minValue:minInclusive:maxValue:maxInclusive:disallowedTypes:disallowDuration:disallowCurrency:
argSpecWithType:accessorMode:rangeContext:argumentContext:minValue:minInclusive:maxValue:maxInclusive:isInteger:disallowedTypes:disallowDuration:disallowCurrency:modeValues:defaultModeIndex:referenceForGeometryOnly:forceArrayMode:
_argSpec
initWithContext:ownerUID:
setOwnerUID:
setNeedsToUpdateFilterSetForImport:
setThresholdCellValues:
needsToUpdateFilterSetForImport
thresholdCellValues
_thresholdCellValues
_needsToUpdateFilterSetForImport
T{TSKUIDStruct=QQ},N,V_ownerUID
TB,N,V_needsToUpdateFilterSetForImport
T@"NSArray",&,N,V_thresholdCellValues
initWithContext:operatorChar:children:firstIndex:lastIndex:
initWithContext:children:
setOperatorChar:
operatorChar
_operatorChar
TS,N,V_operatorChar
strokeSelectionWithMask:
initWithStrokeVisibilityMask:
_mask
TI,R,N,V_mask
upgradedCustomFormatList:
initWithKeyboardShown:
isKeyboardShown
_keyboardShown
keyboardShown
TB,R,N,GisKeyboardShown,V_keyboardShown
regexMatcherWithStringMatch:caseSensitive:entireMatch:
regexMatcherWithStringMatch:
regexMatcherWithRegexString:caseSensitive:entireMatch:
regexMatcherWithRegexString:caseSensitive:
regexMatcherWithRegexString:
initWithString:caseSensitive:entireMatch:
initWithRegexString:caseSensitive:entireMatch:
containsMatchInString:
rangeOfFirstMatchInString:
rangeOfMatchInString:occurrence:
rangeOfMatchInString:occurrence:matchesFound:
rangeOfFirstMatchInString:options:range:
matchesInString:options:range:
numberOfMatchesInString:options:range:
stringByReplacingMatchesInString:options:range:withTemplate:
regularExpression
_regularExpression
T@"NSRegularExpression",R,N,V_regularExpression
initWithContext:number:string:firstIndex:lastIndex:
initWithContext:number:locale:firstIndex:lastIndex:
initWithContext:string:locale:firstIndex:lastIndex:
setNumber:withLocale:
number
_number
T{TSUDecimal={?=[2Q]}},R,V_number
p_TSTCellFormatIsANumberFormatTypeForMostRecentlySet:
formatType:sharesASpareSlotWithFormatType:
hasASlotForFormatType:
mismatchBetweenValueType:andFormatType:
stringForCellValueType:
upgradedBraveNewCell
initWithStorageRef:dataStore:
copyToCell:
inflateFromStorageRef:dataStore:
inflateFromStorageRef:dataStore:suppressingTransmutation:
p_currentFormatIsEqualToOtherCellFormat:
hasEqualContentToCell:
hasEqualContentToCell:usingRichTextObjectComparisonBlock:
isEmptyForDataStore
stringID
setStringID:
formulaSyntaxErrorID
setFormulaSyntaxErrorID:
richTextID
setRichTextID:
doubleValue
setDoubleValue:
boolValue
setBoolValue:
durationTimeIntervalValue
setDurationTimeIntervalValue:
setDateValue:
setStringValue:clearingID:
setStringValue:clearingID:shouldWrap:
setStringValue:
formulaSyntaxError
setFormulaSyntaxError:clearingID:
setFormulaSyntaxError:
richTextValue
setRichTextValue:clearingID:convertToPlaintextIfPossible:
setRichTextValue:
setRichTextValueWithoutPlaintextCollapse:
clearValue
hasFormulaSyntaxError
hasRichText
formulaSyntaxErrorString
formattedValue
stringForEditing
stringForUnderlyingValue
richTextStorageForLayout
bakeFormulaToValue
valueIsText
valueIsStringOrNumber
valueIsNumberOrTime
hasValueOrError
dataIsReplaceable
hasEqualValueToCell:
setCellStyle:clearingID:
setTextStyle:clearingID:
effectiveTextStyle
setConditionalStyle:clearingID:
setConditionalStyle:
hasCellStyle
hasTextStyle
hasConditionalStyle
copyJustStrokesToCell:
copyJustStyleAndStrokesToCell:
clearStrokes
writingDirection
cellFill
cellFillComparedToDefault:suppressCS:isDefault:
setCellSpec:clearingID:
setCellSpec:
setCellSpecRepairingFormats:
setFormula:clearingID:
setFormula:
hasCellSpec
cellSpecForDiff
hasFormula
applyPopupChoiceIndex:
hasFormulaEvaluationError
hasFormulaAnyError
hasControl
formatType
setFormat:shouldSetExplFlags:isExplicit:makeCurrent:clearingID:
setCurrentFormat:isExplicit:
setSpareFormat:isExplicit:
setCurrentFormat:flags:
p_setFormatForFormulaResult:propagation:
clearSpareFormatOfType:
clearNoncurrentImplicitFormats
clearAllFormats
copyAllFormatsToCell:
updateCustomFormatFromPaste:
p_TSTCellSetMostRecentlySetNumberFormat:
p_TSTCellSetMostRecentlySetDateFormat:
p_TSTCellSetMostRecentlySetTextFormat:
p_setFormatFlags:explicit:
p_setFormatExplicit:fromFormatType:setMostRecentlySet:
hasCurrentFormat
currentFormatIsExplicit
p_spareFormatOfType:allowMismatchedSpare:explicitOnly:
spareFormatOfType:allowMismatchedSpare:
hasFormatOfType:allowMismatchedSpare:
hasExplicitFormatOfType:allowMismatchedSpare:
p_mostRecentlySetNumberFormatType
p_mostRecentlySetDateFormatType
p_mostRecentlySetTextFormatType
customFormatString
currentFormatUsesAccountingStyle
currentFormatNegativeStyle
hasAnyFormats
isMostRecentlyExplicitPercent
hasMismatchedFormatAndValue
setDefaultFormatForValue
setCommentStorage:clearingID:
setCommentStorage:
setImportWarningSet:clearingID:
setImportWarningSet:
hasCommentStorage
hasImportWarningSet
cellValueTypeDescription
cellValueDescription
cellStyleID
setCellStyleID:
textStyleID
setTextStyleID:
conditionalStyleID
setConditionalStyleID:
setFormulaID:
currentFormatID
setCurrentFormatID:
numberFormatID
setNumberFormatID:
currencyFormatID
setCurrencyFormatID:
dateFormatID
setDateFormatID:
durationFormatID
setDurationFormatID:
customFormatID
setCustomFormatID:
baseFormatID
setBaseFormatID:
controlFormatID
setControlFormatID:
multipleChoiceListFormatID
setMultipleChoiceListFormatID:
commentStorageID
setCommentStorageID:
importWarningSetID
setImportWarningSetID:
conditionalStyle
conditionalStyleAppliedRule
setConditionalStyleAppliedRule:
cellBorder
setCellBorder:
explicitFormatFlags
setExplicitFormatFlags:
currentFormat
numberFormat
currencyFormat
dateFormat
durationFormat
customFormat
baseFormat
controlFormat
multipleChoiceListFormat
setCellFlags:
commentStorage
importWarningSet
cellSpec
_valueDouble
_valueID
_valueObject
_conditionalStyleAppliedRule
_explicitFormatFlags
_cellStyleID
_textStyleID
_conditionalStyleID
_formulaID
_currentFormatID
_numberFormatID
_currencyFormatID
_dateFormatID
_durationFormatID
_customFormatID
_baseFormatID
_controlFormatID
_multipleChoiceListFormatID
_commentStorageID
_importWarningSetID
_conditionalStyle
_cellBorder
_currentFormat
_numberFormat
_currencyFormat
_dateFormat
_durationFormat
_customFormat
_baseFormat
_controlFormat
_multipleChoiceListFormat
_commentStorage
_importWarningSet
_cellSpec
TI,N,V_cellStyleID
TI,N,V_textStyleID
TI,N,V_conditionalStyleID
TI,N,V_formulaID
TI,N,V_currentFormatID
TI,N,V_numberFormatID
TI,N,V_currencyFormatID
TI,N,V_dateFormatID
TI,N,V_durationFormatID
TI,N,V_customFormatID
TI,N,V_baseFormatID
TI,N,V_commentStorageID
TI,N,V_importWarningSetID
TI,N,V_controlFormatID
TI,N,V_multipleChoiceListFormatID
T@"TSKFormat",R,N,V_controlFormat
T@"TSKFormat",R,N,V_multipleChoiceListFormat
TC,N,V_valueType
T@"NSDate",&,N
T@"TSWPStorage",&,N
T@"TSWPStorage",R,N
T@"TSTConditionalStyleSet",&,N,V_conditionalStyle
TC,N,V_conditionalStyleAppliedRule
T@"TSTCellBorder",&,N,V_cellBorder
T@"TSWPParagraphStyle",R,N
T@"TSTCellSpec",&,N,V_cellSpec
T@"TSCEFormulaObject",&,N
T@"TSTCellSpec",R,N
TS,N,V_explicitFormatFlags
T@"TSKFormat",R,N,V_currentFormat
T@"TSKFormat",R,N,V_numberFormat
T@"TSKFormat",R,N,V_currencyFormat
T@"TSKFormat",R,N,V_dateFormat
T@"TSKFormat",R,N,V_durationFormat
T@"TSKFormat",R,N,V_customFormat
T@"TSKFormat",R,N,V_baseFormat
TS,N,V_cellFlags
T@"TSULocale",R,N,V_locale
T@"TSDCommentStorage",&,N,V_commentStorage
T@"TSTImportWarningSet",&,N,V_importWarningSet
uuidBasedCellMapWithContext:
cellMapWithContext:
initWithContext:uidBased:
initWithContext:cell:cellUIDList:skipCellUIDListCopy:
initWithContext:cell:cellUIDList:
initWithContext:cell:cellIDList:
initShallowMapWithContext:uidBased:
copyWithZone:copyingCells:
cellIDAtIndex:
cellAtIndex:
enumerateCellsWithIDsUsingBlock:
enumerateCellsWithUIDsUsingBlock:
cellIDs
iterator
findCellForCellID:
findCellForCellUID:
addCell:andCellUID:
addPrecopiedCells:andCellUIDs:
addCell:andCellID:
replaceCellAtIndex0:
remapUIDsByColumnMap:rowMap:ownerMap:
appendCellMap:precopied:
cellIDBasedCellMapByTableInfo:
uuidBasedCellMapByTableInfo:
coordinatesForTableInfo:passingTest:
shallowCopyToCoordFormUsingMap:
cellMapMaskedByUIDs:inRows:
p_cellAtIndex:inCellListArray:
p_shallowAddCell:atCellCoord:
p_addCell:
p_addPrecopiedCells:
p_copyCellsAndUUIDsFromCellMap:convertingToCellIDsWithTableInfo:
p_resolveCellIDsToUUIDsByTableInfo:
p_cellCount
setCellUIDs:
isOneToMany
shallowCopy
setShallowCopy:
_cellIDs
_searchableIDMap
_searchableUIDMap
_oneToMany
_shallowCopy
T@"TSTCellUIDList",&,N,V_cellUIDs
oneToMany
TB,R,N,GisOneToMany,V_oneToMany
TB,N,V_shallowCopy
initWithCellMap:
nextCellAndCellUID
currentCellUID
currentCell
_cellMap
_cellUIDIterator
_index
_currentCellUID
_currentCell
trailingEmptyCellCount
addPrecopiedCell:
addCell:
shallowAddCell:
replaceCell:atIndex:
lastCell
_trailingEmptyCellCount
strokeWidthForGridIndex:inRange:
strokeWidthForGridIndex:outWidth:outNextWidth:
updateCacheForGridIndex:withMajorStrokes:andMinorStrokes:
lockForWriting
rwlock
setRwlock:
_indexToCacheEntriesMap
_rwlock
T{_opaque_pthread_rwlock_t=q[192c]},N,V_rwlock
tableNameSelection
initWithContext:tableUUID:numberOfRows:numberOfColumns:
initWithContext:columnUIDs:rowUIDs:
incrementVersionCounter
copyOnWriteUIDMapper
p_mutableColumnIndexesForUIDSet:notFoundUIDs:
p_mutableRowIndexesForUIDSet:notFoundUIDs:
uidRectRefForCellTractRef:
replaceRowsWithUids:
replaceColumnsWithUids:
insertNewRowsInIndexRange:
insertNewColumnsInIndexRange:
insertColumnsWithUIDs:atIndex:
insertRowsWithUIDs:atIndex:
applyMap:toRows:
_checkStructure
versionCounter
_columnUidForIndex
_rowUidForIndex
_columnIndexForUid
_rowIndexForUid
_versionCounter
_copyOnWriteUIDMapper
TQ,R,N,V_versionCounter
initWithColumnRowUIDMap:
_originalMap
p_compareGroupByViaOwnerIndexes:otherGroupBy:
initWithBaseTableModel:
groupBys
setBaseTableUID:
hasEnabledGroupBys
backwardCompatibleToPrePivot
addGroupByInSortedOrder:
sortGroupBys
registerWithDistributors
unregisterFromDistributors
teardown
linkGroupBy:
resetAllGroupings
groupByByUid:
groupByForOwnerIndex:
registerGroupByForColumns:ownerIndex:hiddenStates:groupBySet:
unregisterGroupBy:
allowRegistrationOfAggFormulas
initWithArchive:unarchiver:forBaseTable:
unpackAfterUnarchive:
remapTableUIDsInFormulasWithMap:calcEngine:
setFormulaOwnerUIDsWithMap:
verifySubOwnerUIDsUsed:
p_willApplyCell:baseCellCoord:refreshCategoryInfo:
didAddRows:
verifyConnectionsWithPivotDataModel:
minion
setMinion:
_baseTableUID
_lock
_groupBys
T@"TSTTableModel",W,N,V_tableModel
T{TSKUIDStruct=QQ},N,V_baseTableUID
T@"<TSCEFormulaReplacing>",&,N,V_minion
initWithFormulaCoord:groupNode:aggregator:
setAccumulator:
addChild:
addChild:skipWillModify:
clearAggFormulas:inOwner:
upgradeForNewAggregateTypes:inOwner:
descriptionWithGroupBy:
initWithArchive:aggregator:
formulaCoord
accumulator
groupNode
setGroupNode:
aggregator
_formulaCoord
_accumulator
_childrenCoordSet
_groupNode
_aggregator
T{TSUCellCoord=ISBB},R,N,V_formulaCoord
T@"TSTAccumulator",&,N,V_accumulator
T@"TSTGroupNode",W,N,V_groupNode
T@"TSTAggregator",R,W,N,V_aggregator
T@"NSMutableArray",&,N,V_children
newDefaultFunctionNodeWithContext:functionIndex:
newSumNodeWithContext:children:
initWithContext:functionIndex:children:firstIndex:lastIndex:
numArguments
minArguments
maxArguments
functionEndNode
setFunctionEndNode:
resurrectModeTokens
isEmptyFunctionNode
isMissingRequiredArgument
isDescendantOfChild:
isInvalidFunction
insertFormulaText:includeWhitespace:unwrapped:
p_functionSpec
p_resetArgumentSpecForChildren
functionIndex
whitespaceAfterLeftParen
setWhitespaceAfterLeftParen:
whitespaceAfterDelimiters
setWhitespaceAfterDelimiters:
whitespaceAfterFunctionName
setWhitespaceAfterFunctionName:
invalidFunctionName
setInvalidFunctionName:
_functionEndNode
_functionIndex
_whitespaceAfterLeftParen
_whitespaceAfterDelimiters
_whitespaceAfterFunctionName
_invalidFunctionName
TS,R,N,V_functionIndex
T@"TSTFunctionEndNode",&,N
Ts,R,N
T@"NSString",&,V_whitespaceAfterLeftParen
T@"NSArray",&,N,V_whitespaceAfterDelimiters
T@"NSString",&,N,V_whitespaceAfterFunctionName
T@"NSString",&,N,V_invalidFunctionName
invalidFunction
TB,R,N,GisInvalidFunction
sharedCoordinator
registerStore:
unregisterStore:
p_canUpdateStore:
p_fetcherForDataKind:
fetchQuotesWithTickers:completion:
autoCompleteQuotesWithInput:completion:
valueForSingleKey:
cachedQuoteForSingleSymbol:
updateKnownCachedStocksInStore:
addRemoteDataInterest:forStore:
removeRemoteDataInterest:forStore:
p_localeStocks
p_defaultStockList
p_dataSourceFetcherForRemoteData:
p_removeRemoteDataInterest:forStore:
p_revalidateOnlineStatus
isOnlineForDataKind:
p_actionMapForKeys:quotes:
sourceFetcherDidUpdate:withValues:quotes:
sourceFetcherDidGoOffline:forKeys:
sourceFetcherDidGoOnline:forKeys:
sourceFetchers
storeMap
cachedSpecifiers
cachedQuotes
queue
dataKindStatus
_sourceFetchers
_storeMap
_cachedSpecifiers
_cachedQuotes
_queue
_dataKindStatus
T@"NSMutableSet",R,N,V_sourceFetchers
T@"TSUPointerKeyDictionary",R,N,V_storeMap
T@"TSCERemoteDataValueMap",R,N,V_cachedSpecifiers
T@"NSMutableDictionary",R,N,V_cachedQuotes
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"TSUIntToIntDictionary",R,N,V_dataKindStatus
letString
newBareLetNodeWithContext:
defaultNameWithIndex:
boundSymbol
p_fixupNodeIfFunctionNode:
whitespaceAfterLet
setWhitespaceAfterLet:
whitespaceAfterIdentifier
setWhitespaceAfterIdentifier:
whitespaceAfterEquals
setWhitespaceAfterEquals:
whitespaceAfterDelimiter
setWhitespaceAfterDelimiter:
_whitespaceAfterLet
_whitespaceAfterIdentifier
_whitespaceAfterEquals
_whitespaceAfterDelimiter
T@"NSString",&,N,V_whitespaceAfterLet
T@"NSString",&,N,V_whitespaceAfterIdentifier
T@"NSString",&,N,V_whitespaceAfterEquals
T@"NSString",&,N,V_whitespaceAfterDelimiter
categoryLevelForTableStyleArea:
startOfGroupingChangesBatch
endOfGroupingChangesBatch
didCreateGroup:
willRemoveGroup:
didRemoveGroup:
didAddRowUID:toGroup:
didRemoveRowUID:fromGroup:
didChangeGroupByStructure
formulaAtCellCoord:
hasFormulaAtCellCoord:
getCell:atCellCoord:
initWithContext:tableInfo:
setupReceiver
resetForCategories
resetForPivotingWithRowUids:columnUids:
resetForCategoriesWithForce:
upgradeFormulasForGroupByUIDChange
registerAllFormulasWithCalculationEngine:wasCrossDocumentPaste:
p_setCategoryCell:atCellUID:formulaReplacer:
p_setPivotCell:atCellUID:formulaReplacer:
setCell:atCellUID:
setCell:atCellUID:formulaReplacer:
setFormulaResultCellsWithCellMap:
insertColumnsAtIndex:metadatas:
removeColumnsAtSummaryIndexes:
removeCategoryColumnCellsForRows:
p_removeRows:
cellValueTypeAtSummaryModelCoord:
explicitFormatOfKind:atModelCellCoord:currencyIsMostRecentlySet:
cellExistsAtCellCoord:
p_RowCategoryLevelForCellCoord:isLabel:
p_ColumnCategoryLevelForCellCoord:
p_tableStyleAreaForCellCoord:
defaultCellStyleForCellCoord:
defaultTextStyleForCellCoord:
setLabelRowVisibility:atCategoryLevel:
labelRowVisibilityAtCategoryLevel:
currentState
runChange:withSummaryChangeState:migrationHelper:
needsFormulaReset
setNeedsFormulaReset:
aggregateFormulaOwnerUID
setAggregateFormulaOwnerUID:
summaryRowHeightList
labelRowHeightList
labelRowVisibilityList
_needsFormulaReset
_summaryCellVendor
_aggregateFormulaOwner
_groupSortOrder
_categoryColumnWidth
_aggregateFormulaOwnerUID
_summaryRowHeightList
_labelRowHeightList
_labelRowVisibilityList
T^v,R,N,V_summaryRowHeightList
T^v,R,N,V_labelRowHeightList
T^v,R,N,V_labelRowVisibilityList
TB,N,V_needsFormulaReset
T@"TSTTableDataStore",R,N,V_dataStore
T@"TSTSummaryCellVendor",R,N,V_summaryCellVendor
T@"TSTCategoryAggregateFormulaOwner",R,N,V_aggregateFormulaOwner
T@"TSTTableInfo",R,N,V_tableInfo
T@"TSTTableGroupSortOrderUID",&,N,V_groupSortOrder
T{TSKUIDStruct=QQ},N,V_aggregateFormulaOwnerUID
Td,N,V_categoryColumnWidth
saveToMessage:archiver:
initWithMessage:unarchiver:
setCellMap:
cellMap
_definedCellMap
T@"TSTCellMap",&,N,V_cellMap
toggleControlSpec
asToggleControlSpec
nowPrecedentForTableUID:
todayPrecedentForTableUID:
randomPrecedentForTableUID:
subtotalPrecedentForTableUID:
filteringChangedPrecedentForTableUID:
userHiddenChangedPrecedentForTableUID:
formulaDefinitionPrecedentForTableUID:
groupByChangedPrecedentForTableUID:
geometryPrecedentForTableUID:
localePrecedentForTableUID:
sheetTableNamePrecedentForTableUID:
anyHeaderNameChangedPrecedentForTableUID:
summaryModelIsCleanPrecedentForTableUID:
summaryModelIsCleanForSortPrecedentForTableUID:
pivotRulesChangedPrecedentForTableUID:
uniqueDistinctPrecedentForTableUID:
pivotSortChangedPrecedentForTableUID:
initWithBaseTableUID:ownerUID:
initWithBaseTableUID:
dirtyNowVolatileCells
dirtyNowAndTodayVolatileCells
dirtyRandomVolatileCells
dirtyGeometryVolatileCells
dirtySheetTableNameVolatileCells
initWithArchive:unarchiver:forBaseTableUID:
tokenWithStroke:range:order:majorStrokeLayerToken:minorStrokeLayerToken:
stroke
order
T{TSTSimpleRange=qQ},R,N
initWithStroke:range:order:majorStrokeLayerToken:minorStrokeLayerToken:
setStroke:
setRange:
setOrder:
majorStrokeLayerToken
setMajorStrokeLayerToken:
minorStrokeLayerToken
setMinorStrokeLayerToken:
_order
_stroke
_majorStrokeLayerToken
_minorStrokeLayerToken
_range
T@"TSDStroke",&,N,V_stroke
T{TSTSimpleRange=qQ},N,V_range
Ti,N,V_order
T@"<TSTStrokeLayerStrokeAndRange>",&,N,V_majorStrokeLayerToken
T@"<TSTStrokeLayerStrokeAndRange>",&,N,V_minorStrokeLayerToken
initWithContext:columnOrRowIndex:
initWithContext:majorStrokeLayer:minorStrokeLayer:
startingIndex
p_findStrokeAndRangeAtIndex:highOrderToken:updatingLowOrderToken:lowOrderLayer:
findStrokeAndRangeAtIndex:
findWidthAndRangeAtIndex:
nextStrokeAndRange:
nextWidthAndRange:
enumerateStrokesUsingBlock:
appendStroke:inRange:order:
insertStroke:inRange:order:
invalidateRange:
enumerateRawStrokesSegmentsUsingBlock:
majorStrokeLayer
setMajorStrokeLayer:
minorStrokeLayer
setMinorStrokeLayer:
_majorStrokeLayer
_minorStrokeLayer
T@"TSTStrokeLayer",&,N,V_majorStrokeLayer
T@"TSTStrokeLayer",&,N,V_minorStrokeLayer
tst_selectionForImplicitlyEditingCellWithFormat:adjustSelectionForCurrencyOrPercentSymbols:
tst_selectionForImplicitlyEditingWithFormatType:percentSymbol:currencySymbol:adjustSelectionForCurrencyOrPercentSymbols:
tst_tableInfo
rangeForCellID:includingBreak:
initWithValue:
mValue
beginTrackingReference:calcEngine:
beginTrackingReferenceWithCellRef:calcEngine:
beginTrackingReferenceWithSpanningRef:calcEngine:
endTrackingReference:calcEngine:
allTrackedReferences
_trackedRefsLock
_trackedReferences
_nextEmptyTrackedReferencesIndex
getPredArgDataFromCell:
initWithBool:
initWithDouble:
initWithNumber:
initWithDate:
initWithString:
initWithDuration:units:
durationValue
durationUnits
duration
dataType
year
month
_decimal
_dataType
_units
_year
_month
_day
TC,R,N,V_dataType
T@"NSString",R,N,V_string
T@"NSDate",R,N
Tq,R,N,V_year
Tq,R,N,V_month
Tq,R,N,V_day
T@"NSNumber",R,N
T{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB},R
defaultPredicateArg
setNumber:
numberValue
setNumberValue:
preserveRow
preserveColumn
initWithDataList:
dataList
isStringValueInList:
isDateValueInListYear:month:day:
isNumberValueInList:locale:
isDurationValueInList:
isBoolValueInList:
isCellValueInList:
initWithRelativeCellRef:
relativeCellRef
setRelativeCellRef:
initWithCrossTableRef:
crossTableRef
uidRectRef
initWithCategoryRef:
hasCategoryRef
categoryRef
setCategoryRef:
initWithViewTractRef:
hasViewTractRef
setViewTractRef:
initAsBadRefWithTableUID:uidTractList:
initWithTableUID:uidTractList:
initWithBaseCellRef:preserveFlags:
baseCellRef
cellRefForHostCoord:
convertToRelativeRefIfPossible
setBaseCellRef:
setBaseCellRef:preserveFlags:
setBaseCellRef:preserveColumn:preserveRow:
initWithBaseCellReference:preserveColumn:preserveRow:
cellReference
setBaseCellReference:
setBaseCellReference:preserveColumn:preserveRow:
setDurationValue:
setDurationUnits:
isEqual:atHostCoord:
needsFormulaRewriting
rewriteWithContext:forArgAt:usingLinkedRef:useColumnRef:hostCellRef:rewriteBlock:
formulaCreatorForPredArg
formulaCreatorForPredArg0UsingLinkedRef:useColumnRef:
uidTractList
setUidTractList:
hasRelativeCellRef
hostCellCoord
setHostCellCoord:
_categoryRef
_viewTractRef
_hostCellCoord
_baseCellRef
_dataList
_uidTractList
_relativeCellRef
_hasRelativeCellRef
_type
_listItemsSet
TC,R,N,V_type
T@"TSTFormulaPredArgData",R,N,V_data
T@"NSNumber",&,N
T@"NSString",C,N
TB,R,N,V_hasRelativeCellRef
T@"TSCECategoryRef",&,N
T@"TSCEViewTractRef",&,N
T@"TSCEUndoTractList",&,N,V_uidTractList
T@"TSTUIDRectRef",R,N
T{TSUModelCellCoord={TSUCellCoord=ISBB}},N,V_hostCellCoord
initWithBaseTable:
registerHiddenStates:baseOwnerUID:
hiddenStatesByExtentUid:
unregisterHiddenStates:
willChangeExtentUids:
didChangeExtentUids:
_hiddenStatesByRowExtentUuid
_hiddenStatesByColumnExtentUuid
invalidCellRef
initWithCellRef:
initWithCellCoord:tableUID:
initWithCellCoord:tableID:
tableID
coordinate
cellRef
_cellRef
T{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}},R,N,V_cellRef
T@"NSUUID",R,&,N
invalidRangeRef
initWithRangeCoord:tableUID:
initWithRangeCoord:tableID:
initWithRangeRefRect:tableID:
rangeCoord
rangeRef
_rangeRef
T{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}},R,N,V_rangeRef
T{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}},R,N
initWithContext:boolValue:firstIndex:lastIndex:
setValue:
TB,N,V_value
resolverUID
initWithUids:
initWithUids:atIndexes:
loadIndexesForTable:isRows:shuffleMap:
unloadIndexes
containsIndex:
uidForIndex:
rowIndexForUid:
columnIndexForUid:
uidsForIndexes:
indexSetBySubtractingOurIndexesFromIndexSet:
initFromMessage:
saveToMessage:
uids
viewOrderUids
indexes
_uids
_indexes
_indexesForUids
_uidsForIndexes
_viewOrderUids
Tr^v,R,V_uids
Tr^v,R,V_viewOrderUids
T@"NSIndexSet",R,V_indexes
initWithRange:orderedUuids:offset:
orderedUuids
offset
setOffset:
_orderedUuids
T{_NSRange=QQ},R,V_range
Tr^v,R,V_orderedUuids
TI,V_offset
initWithFormulaOwnerUID:uuids:areRows:
initWithTableUID:condStyleOwnerUID:groupByUID:uuids:atIndexes:areRows:
orderedUuidsForRange:inTable:areRows:shuffleMap:
loadIndexesForTable:uidResolver:forRemoveRows:shuffleMap:
createAuxRowColumnInfoForMove
offsetForRowIndex:
offsetForUpdatedRowIndex:isRemoveRows:
updatedCellRefForRewriteType:originalCellRef:
originalCellRefForRewriteType:updatedCellRef:
indexIsAffected:
uuidForIndex:
columnIndexForUuid:
rowIndexForUuid:
rowOrColumnIndices
tableRange
affectedRangeForRemoveRows
affectedRangeForInsertRows
affectedRangeForMoveRows
coordRangesForInsertRemove
uuidsInRange:
uuidsForIndexes:
rowOrColumnUids
rowOrColumnUuids
auxRowColumnInfo
setAuxRowColumnInfo:
useWholeTableForInsertionDependencies
setUseWholeTableForInsertionDependencies:
_rowOrColumnUids
_rowOrColumnUuids
_isRows
_rangeEntries
_auxRowColumnInfo
_expandedRowColumnUuids
_insertAtUid
_insertOppositeUid
_useWholeTableForInsertionDependencies
Tr^{TSKUIDStruct=QQ},R,N,V_tableUID
Tr^{TSKUIDStruct=QQ},R,N,V_conditionalStyleOwnerUID
Tr^{TSKUIDStruct=QQ},R,N,V_groupByUID
TB,R,N,V_isRows
T@"TSCEFormulaRewrite_Uids",R,N,V_rowOrColumnUids
Tr^v,R,N,V_rowOrColumnUuids
T@"TSCEUIDSet",R,N,V_expandedRowColumnUuids
T@"TSCEFormulaRewriteInfo_RowColumnInfo",&,N,V_auxRowColumnInfo
TB,N,V_useWholeTableForInsertionDependencies
T{TSKUIDStruct=QQ},N,V_insertAtUid
T{TSKUIDStruct=QQ},N,V_insertOppositeUid
initWithContext:children:columns:rows:firstIndex:lastIndex:
whitespaceBeforeFirstChild
setWhitespaceBeforeFirstChild:
_dimensions
_whitespaceBeforeFirstChild
T{TSCEGridDimensions=II},R,V_dimensions
T@"NSString",&,V_whitespaceBeforeFirstChild
T@"NSArray",&,V_whitespaceAfterDelimiters
initWithCellValue:
p_recalculateMergedFormatWithGroupBy:
mergedFormatChangedByAddingRowUID:andCellValue:groupBy:
mergedFormatChangedByRemovingRowUID:groupBy:
encodeToArchive:forGroupBy:backwardCompat:
cellValue
_rowLookupKeysForFormat
_noFormatMergingNeeded
_upgradeRowUidsForFormat
_cellValue
T@"TSCECellValue",R,N,V_cellValue
initWithInfo:frame:
invalidateForPageCountChange
isDynamicallyChangingAvailableSpaceForContainedChild
initWithStorage:cellID:frame:
repClassOverride
cachedCellID
setCachedCellID:
cachedCellStyle
setCachedCellStyle:
cachedTextStyle
setCachedTextStyle:
cachedCellWraps
setCachedCellWraps:
cachedVerticalAlignment
setCachedVerticalAlignment:
cachedParagraphAlignment
setCachedParagraphAlignment:
cachedMergeRange
setCachedMergeRange:
cachedAutoSizeFlags
setCachedAutoSizeFlags:
cachedMaskRect
setCachedMaskRect:
cachedMaskSpillRange
setCachedMaskSpillRange:
cachedPadding
setCachedPadding:
cachedAutosizedFrame
setCachedAutosizedFrame:
cacheIsValid
setCacheIsValid:
_cachedCellWraps
_cacheIsValid
_cachedVerticalAlignment
_cachedCellID
_cachedCellStyle
_cachedTextStyle
_cachedParagraphAlignment
_cachedAutoSizeFlags
_cachedPadding
_cachedMergeRange
_cachedMaskSpillRange
_cachedMaskRect
_cachedAutosizedFrame
T{TSUCellCoord=ISBB},N,V_cachedCellID
T@"TSTCellStyle",&,N,V_cachedCellStyle
T@"TSWPParagraphStyle",&,N,V_cachedTextStyle
TB,N,V_cachedCellWraps
Ti,N,V_cachedVerticalAlignment
Tq,N,V_cachedParagraphAlignment
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_cachedMergeRange
TQ,N,V_cachedAutoSizeFlags
T@"TSWPPadding",&,N,V_cachedPadding
TB,N,V_cacheIsValid
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedMaskRect
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_cachedMaskSpillRange
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedAutosizedFrame
initWithContext:stringValue:firstIndex:lastIndex:
T@"NSString",&,N,V_value
cellUIDRegionFromRegion:inTable:
cellUIDRegionFromRegion:inTableModel:
initWithCellUIDRange:
initWithCellUIDRangeVector:
cellRegionFromTable:
pruneAgainstTable:
enumerateCellUIDRangesUsingBlock:
enumerateCellUIDUsingBlock:
rowBasedSubRangesOfCellCount:
_cellUIDRangeList
initWithContext:dateValue:firstIndex:lastIndex:
initWithContext:asBlank:firstIndex:lastIndex:
setDateFormat:
isBlank
setIsBlank:
_isBlank
T@"NSDate",&,N,V_value
TB,N,V_isBlank
T@"NSString",&,N,V_dateFormat
p_singleCategoryRefForViewRangeRef:rangeContext:calculationEngine:hostCellRef:
p_spanningCategoryRefForViewRangeRef:groupByUid:categoryLevel:calculationEngine:
p_expandedViewRangeRefForViewRangeRef:forLabelRowsInTable:
p_cellRangeForSingleCategoryRefInViewRangeRef:inTable:rangeContext:
p_rangeRef:isContainedWithinSummaryAndLabelRowsInTable:
preserveFlagsForReference:calcEngine:
initWithContext:calculationEngine:uidRectRef:categoryRef:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:
initWithContext:calculationEngine:uidRectRef:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:
initWithContext:calculationEngine:viewRangeRef:preserveFlags:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:
initWithContext:calculationEngine:chromeRangeRef:preserveFlags:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:
initWithContext:calculationEngine:baseRangeRef:preserveFlags:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:
initWithContext:calculationEngine:categoryRef:hostCellRef:referenceColorHelper:
initWithReferenceStart:referenceEnd:suppressAutomaticNamedReferenceInvalidation:
setRangeWithFunction:
viewBoundingBox
baseBoundingBox
viewRangeRefDeprecated
p_boundingViewRangeRef
p_categoryRefViewTractRef
categoryRefTableUID
isRangeExpression
isSingleColumnSpanningReference
isSingleRowSpanningReference
isNonSpanningRangeExpression
isLocalReference
isCategorySummaryRef
isSpanningCategorySummaryRef
setIsBlankForKeyboardInsertion:
isResizable
subregionForReference:range:
subregionForRange:
p_subregionForRange:rangeContext:
referenceAsStringWithContext:
p_buildASTNodeArray:forCoord:preserveFlags:hostCell:
p_convertCategoryRefToRelativeForHostCell:
processChanges:forChangeSource:
p_resetMenu
suppressReferenceOptionsMenu
hostCellRef
setHostCellRef:
rangeContext
setRangeContext:
isRangeWithFunction
isBlankForKeyboardInsertion
suppressAutomaticNamedReferenceInvalidation
isCategoryRef
referenceColorHelper
setReferenceColorHelper:
hasCachedIsValidReference
setHasCachedIsValidReference:
cachedIsValidReference
setCachedIsValidReference:
_refString
_formulaPlainText
_rangeContext
_rangeWithFunction
_isBlankForKeyboardInsertion
_suppressAutomaticNamedReferenceInvalidation
_isCategoryRef
_hasCachedIsValidReference
_cachedIsValidReference
_uidRectRef
_referenceColorHelper
_hostCellRef
T@"TSKDocumentRoot",R,N
T@"TSKChangeNotifier",R,N
TB,N,V_hasCachedIsValidReference
TB,N,V_cachedIsValidReference
T@"TSTUIDRectRef",R,N,V_uidRectRef
T{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}},N,V_hostCellRef
T{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}},R
TC,N,V_rangeContext
rangeWithFunction
TB,N,GisRangeWithFunction,V_rangeWithFunction
TB,N,V_isBlankForKeyboardInsertion
TB,R,N,V_suppressAutomaticNamedReferenceInvalidation
TB,R,N,V_isCategoryRef
T@"TSCECategoryRef",&,N,V_categoryRef
T@"TSTReferenceColorHelper",&,N,V_referenceColorHelper
p_newStarPath:
renderRating:intoContext:rect:showDots:color:
renderRating:intoContext:rect:showDots:color:useMinimalSpace:
uuid
pencilAnnotationStorage
T@"<TSKPencilAnnotationStorage>",R,N
setTable:
initWithTableInfo:pencilAnnotationStorage:
initWithContext:tableInfo:pencilAnnotationStorage:
_cellRange
table
_pencilAnnotationStorage
_table
T@"TSTTableInfo",W,N,V_table
T@"TSDPencilAnnotationStorage",R,N,V_pencilAnnotationStorage
initWithOwnerId:context:
numRangeRecords
addRect:fromCoord:
removeRect:fromCoord:
containsFromCoord:
containsRect:fromCoord:
removeRectsForFromCoord:
enumerateAllRangesForFromCoord:usingBlock:
enumerateAllRanges:
toInternalOwnerID
_toInternalOwnerID
_fromCoordToReferRect
TS,R,N,V_toInternalOwnerID
initWithContext:durationInterval:durationFormat:firstIndex:lastIndex:
setDurationInterval:
setDurationFormat:
durationInterval
setBlank:
_blank
_durationInterval
Td,N,V_durationInterval
T@"TSKDurationFormat",&,N,V_durationFormat
blank
TB,N,GisBlank,V_blank
functionLocalizationDictionary
functionNameForLocalizedString:
supportedFunctions
localizedTypeStringForArgumentType:
localizedStringIsTrue:
localizedTrueString
localizedStringIsFalse:
localizedFalseString
localizedFunctionNameForMenuTag:
localizedNameForFunction:
localizedToolTipForFunction:
localizedCategoryForFunction:
localizedNameForArgument:ofFunction:
localizedToolTipForArgument:ofFunction:
localizedModeNameForArgument:modeIndex:ofFunction:
localizedModeToolTipForArgument:modeIndex:ofFunction:
_localizedStringFromArgumentsTable:
loadLocalizedStrings
localizedTrueStrings
localizedFalseStrings
localizedNamesForFunctions:
localizedFunctionCategoryDictionary
localizedCategoryArray
allLocalizedFunctions
localizedLabelForAggType:
localizedShortLabelForAggType:
localizedLabelForShowAsType:
argumentSpecForFunctionIndex:argumentIndex:
initWithContext:argumentSpec:firstIndex:lastIndex:
p_invalidate
setMode:
modes
argumentName
bakedValue
mode
_detokenizedText
_mode
Ts,N,V_mode
tsce_appendSpaces:
tsce_replaceCharactersInSet:withString:
tsce_year
tsce_month
tsce_day
tsce_hour
tsce_minute
tsce_second
tsce_weekday
tsce_weekNumberForType:
tsce_mapToDouble
tsce_dateWithSerialNumber:dateMode:
tsce_dateWithYear:month:day:hour:minute:second:
tsce_addObjectNonNil:
initWithStrokeProvider:tableProvider:tableInfo:
strokeLayerForColumn:
strokeLayerForRow:
strokeLayerForStrokeType:
strokeLayerStackForColumn:
strokeLayerStackForRow:
strokeLayerStackForStrokeType:
validateGeometry
validateChangeDescriptors:
p_strokeTypeForColumn:
p_headerColumnSeparatorColumnRangeIsValid
p_strokeTypeForRow:
p_headerRowSeparatorRowRangeIsValid
p_updateStrokeLayer:forColumnStrokeType:
p_updateStrokeLayer:forRowStrokeType:
strokeProvider
setStrokeProvider:
tableProvider
setTableProvider:
setIsValid:
strokeTypeToLayerMap
setStrokeTypeToLayerMap:
strokeTypeToLayerStackMap
setStrokeTypeToLayerStackMap:
headerSideBorderColumnRange
setHeaderSideBorderColumnRange:
headerColumnSeparatorColumnRange
setHeaderColumnSeparatorColumnRange:
footerColumnSeparatorColumnRange
setFooterColumnSeparatorColumnRange:
bodySideBorderColumnRange
setBodySideBorderColumnRange:
topBorderRowRange
setTopBorderRowRange:
headerRowSeparatorRowRange
setHeaderRowSeparatorRowRange:
footerRowSeparatorRowRange
setFooterRowSeparatorRowRange:
bottomBorderRowRange
setBottomBorderRowRange:
_isValid
_strokeProvider
_tableProvider
_strokeTypeToLayerMap
_strokeTypeToLayerStackMap
_headerSideBorderColumnRange
_headerColumnSeparatorColumnRange
_footerColumnSeparatorColumnRange
_bodySideBorderColumnRange
_topBorderRowRange
_headerRowSeparatorRowRange
_footerRowSeparatorRowRange
_bottomBorderRowRange
T@"<TSTTableHiddenRowColumnProviding><TSTTableInternalGeometryProviding>",W,N,V_tableProvider
TB,N,V_isValid
T@"NSPointerArray",&,N,V_strokeTypeToLayerMap
T@"NSPointerArray",&,N,V_strokeTypeToLayerStackMap
T{_NSRange=QQ},N,V_headerSideBorderColumnRange
T{_NSRange=QQ},N,V_headerColumnSeparatorColumnRange
T{_NSRange=QQ},N,V_footerColumnSeparatorColumnRange
T{_NSRange=QQ},N,V_bodySideBorderColumnRange
T{_NSRange=QQ},N,V_topBorderRowRange
T{_NSRange=QQ},N,V_headerRowSeparatorRowRange
T{_NSRange=QQ},N,V_footerRowSeparatorRowRange
T{_NSRange=QQ},N,V_bottomBorderRowRange
T@"<TSTTableStrokeProviding>",W,N,V_strokeProvider
initWithValueGrid:
initWithValues:
initWithValues:gridKind:
initWithValues:gridKind:isFlattened:
initWithValues:gridKind:isFlattened:dimensions:
_valueGrid
_gridKind
_isFlattened
addUidCoord:atRunningLevel:
uuidCoordAtRunningLevel:
_uidCoordsPerRunLevel
addUidCoord:tupleForCoord:atRunningLevel:
uuidCoordForGroupTuple:runningLevel:
_uidCoordsPerTuple
uuidCoordAtIndex:templateTuple:runningLevel:
getUidCoordforRunningAggregate:tupleForCoord:newUidCoord:addNewUidCoordEvenIfNotFound:inContext:
_cellValues
_uidCoords
initWithGroupBySet:
isMissingRunningTotalFieldForAggIndex:
getPreviousUidCoordForAggIndex:fromNewUidCoord:addNewUidCoordEvenIfNotFound:
_groupBySet
_runAggrForAggIndex
_valuesForRunningAggregatePerRunDirectionUid
T@"TSTGroupBySet",R,N,V_groupBySet
initialize
unitForCurrencyCode:
currencyCodeForUnit:
canonicalUnitForDimension:
unitForString:
multiplierForUnitPrefix:
unitPrefixForCharacter:
binaryUnitPrefixForChars::
prefixedUnitForString:
unitIsMetric:
convert:fromUnit:toUnit:
dimensionForUnit:
initWithContext:functionNode:firstIndex:lastIndex:
functionNode
setFunctionNode:
_functionNode
T@"TSTFunctionNode",N,V_functionNode
initAsCompressionMapForIndexes:
mappedIndexForSourceIndex:
_indexMap
formatAndValueFromCell:useAllSpareFormats:
formatAndValueFromCell:useAllSpareFormats:forceNoContent:
formatAndValueFromCell:useAllSpareFormats:suppressApplyingValue:
formatAndValueFromRichTextCell:updatingStorageWithBlock:
formatAndValueFromCell:applySpareFormatOnly:
cellDiffProperties
objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:
objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:optionalConcurrentStylesheet:
initFromPropertyCommandMessage:unarchiver:
saveToPropertyCommandMessage:archiver:
richTextOrErrorTextStorageValue
initFromCell:useAllSpareFormats:
initFromCell:useAllSpareFormats:forceNoContent:suppressApplyValue:applySpareFormatOnly:
copyForApplyingNoContent
copyForNotApplyingValue
copyForApplyingNoContentWithSuppressApplyValue:
p_copyStorage:
numberOrCurrencyDecimalValue
isFormulaSyntaxError
isApplySpareFormatOnly
getCurrentFormat
hasStringContentMatchingCell:
cellValueWithLocale:
applyToCell:
p_formatForFormatType:
_useAllSpareFormats
_suppressApplyValue
_applySpareFormatOnly
_spareFormatType
_boolValue
_decimalValue
_objValue
_formattedValue
_formattedRichTextStorage
_explicitFlags
_cellFormatKind
_booleanFormat
_textFormat
T@"NSDate",R,C,N
T{TSUDecimal={?=[2Q]}},R,N
T@"NSString",R,C,N
cacheWidth:ofColumn:
widthOfColumn:handleCacheMissUsingBlock:
generateWidthHeightCollection
widthHeightCollections
setWidthHeightCollections:
_columnToWidth
_widthHeightCollections
T@"NSMutableArray",&,N,V_widthHeightCollections
_stringForInternalCellRef:
addCellCoord:referringToTableUID:
removeCellCoord:referringToTableUID:
addCellCoord:referringToTableUID:forColumnRowUuid:
removeCellCoord:referringToTableUID:forColumnRowUuid:
addCellCoord:referringToCategoryRef:
removeCellCoord:referringToCategoryRef:
removeCellCoord:
getCellRefs:referringToOwner:
getCellRefs:referringToOwners:
getAllCellRefs:referringToOwnerUID:
getCellRefs:referringToOwnerUID:referringToUuids:
initFromArchive:ownerUID:
unpackAfterUnarchive
_coordSetsReferringToTable
_coordSetsReferringToUuidInTable
_uuidsByCoord
enclosingGroupNameForGroupCellValue:
resetBaseOwnerUID
setTableModelDuringUnarchive:
registerWithCalcEngine:forTableModel:baseOwnerUID:
linkToCalcEngine:forTableModel:
pivotSourceBodyTract
setPivotSourceBodyTract:
p_referenceNodeFromTractRef:
pivotSourceBodyReferenceEmbeddedInFormula
pivotSourceRangeNameWithTractRef:
pivotSourceHeaderTract
setPivotSourceHeaderTract:
pivotSourceBodyUidTract
setPivotSourceBodyUidTract:
upgradeSourceTractsForHostCellChange
upgradeSourceTractsForAbsoluteRefs
p_ensureHiddenStatesExistsWithPivotDataTable:
hiddenStatesForPivotDataTable:
filterSetForPivotDataTable:
setFilterSet:forPivotDataTable:
setPivotSourceTableUID:
setPivotSourceTableName:
groupingColumnOptionsMapCopy
pivotOptionsForGroupingColumn:
pivotOptionsForGroupingColumnUid:
pivotOptionsForColumnGroupsAtLevel:
pivotOptionsForRowGroupsAtLevel:
groupingColumnUidExists:
setPivotOptions:groupingColumnUid:forSortingOptions:redoSort:
isHidingGrandTotalColumns
setHidingGrandTotalColumns:
isHidingGrandTotalRows
setHidingGrandTotalRows:
p_resetSummaryFormulasForRunningTotalsOnly:preservingStyles:
p_setEmptyPivotTableLabels
resetCellsForNewPivotOrder
rewriteForPaste
clearAllPivotHiddenAndFiltered:
p_resetHiddenGrandTotals
p_resetHiddenTotalsForGroupingColumnUid:hideTotals:
enclosingGroupNameForColumnIndex:level:
enclosingGroupNameForRowIndex:level:
requiresTrailingAlignment:
requiresUnwrapping:
columnGroupLevelForHeaderRow:
rowGroupLevelForHeaderColumn:
p_setPivotHeaderCellsResettingPivotHidden:preservingStyles:
p_resetAllHiddenTotals
lowestCategoryLevelAsLeadingRowGroupName:
lowestCategoryLevelAsLeadingColumnGroupName:
baseColumnIndexForGroupingAtColumnIndex:
baseColumnIndexForGroupingAtRowIndex:
p_formulaForCellCoord:runningTotalContext:
p_resetSortingStructures
sortRowsByColumnIndex:level:aggregateIndex:sortDirection:
sortColumnsByRowIndex:level:aggregateIndex:sortDirection:
p_sortRowsInMode:sortDirection:columnIndex:level:aggregateIndex:resetLabels:
p_sortColumnsInMode:sortDirection:rowIndex:level:aggregateIndex:resetLabels:
p_sortFullTable:
p_commitSortAsync
p_commitSort
collapseExpandChanged:forState:
filteringChanged:forDimension:
setupAfterUnarchiveForPivotTable:pivotDataTable:
formulaStore
pivotRowUIDs
pivotColumnUIDs
pivotDataRefreshTimestamp
setPivotDataRefreshTimestamp:
pivotDataRefreshUID
setPivotDataRefreshUID:
pivotRowColumnRuleChangeUID
setPivotRowColumnRuleChangeUID:
pivotAggregateRuleChangeUID
setPivotAggregateRuleChangeUID:
shouldSkipNextAsyncSort
setShouldSkipNextAsyncSort:
_groupingColumnOptionsMap
_sortedColumnUids
_sortedRowUids
_resetHeaderLabelsAfterSort
_invalidateAfterAsyncSort
_autoImplicitSort
_shouldSkipNextAsyncSort
_isHidingGrandTotalColumns
_isHidingGrandTotalRows
_isEmptyPivot
_formulaStore
_pivotSourceTableName
_pivotDataRefreshTimestamp
_pivotSourceTableUID
_pivotDataRefreshUID
_pivotRowColumnRuleChangeUID
_pivotAggregateRuleChangeUID
_pivotRowUIDs
_pivotColumnUIDs
TB,R,N,V_isEmptyPivot
T@"TSTTableModel",R,N,V_tableModel
T@"TSTPivotGroupingColumnOptionsMap",R,N
T@"TSTFormulaStore",R,N,V_formulaStore
T{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}},R,N,V_pivotRowUIDs
T{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}},R,N,V_pivotColumnUIDs
T{TSKUIDStruct=QQ},N,V_pivotSourceTableUID
T@"NSString",&,N,V_pivotSourceTableName
Td,N,V_pivotDataRefreshTimestamp
T@"TSCECellTractRef",&,N
T@"TSTFormula",R,N
T{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}},N
T{TSKUIDStruct=QQ},N,V_pivotDataRefreshUID
T{TSKUIDStruct=QQ},N,V_pivotRowColumnRuleChangeUID
T{TSKUIDStruct=QQ},N,V_pivotAggregateRuleChangeUID
TB,N,V_shouldSkipNextAsyncSort
recursivelyDrawInContext:keepingChildrenPassingTest:
tableLayout
masksToBounds
filterFormulaCoordinateForType:columnOrRowIndex:
filterCoordTypeForFilterCoordinate:
columnOrRowIndexForFilterCoordinate:
filterFormulaCoordinateForColumnOrRow:
filterFormulaContainingCell
filterFormulaCoordForViewColumnRow:
mutableIndexSetByIntersecting:withRange:
invalidateForChangingIndexes:isRow:forTable:
initWithHiddenStatesOwner:shouldRegister:
initWithHiddenStatesOwner:
loadIndexesFromTable:
initWithArchive:unarchiver:forHiddenStatesOwner:
hideRowsAtIndexes:forAction:invalidate:
showRowsAtIndexes:forAction:invalidate:
hideColumnsAtIndexes:forAction:invalidate:
showColumnsAtIndexes:forAction:invalidate:
hideBaseRowAtIndex:forAction:
showBaseRowAtIndex:forAction:
hideBaseColumnAtIndex:forAction:
showBaseColumnAtIndex:forAction:
clearAllPivotHiddenAndInvalidate:
clearAllFiltered
invalidateAllCollapsed
invalidateViewGeometry
hidingActionForBaseRowAtIndex:
indexesOfCollapsedColumnsInCellRange:
hidingActionForBaseColumnAtIndex:
anyHiddenColumnsInCellRange:forAction:
numberOfHiddenColumnsInBaseCellRange:
indexesOfHiddenColumnsInBaseCellRange:
numberOfHiddenRowsInBaseCellRange:
numberOfUserHiddenRowsInBaseCellRange:
indexesOfHiddenRowsInBaseCellRange:
syncUpHiddenStateFormulaOwnerUIDs
willChangeGroupByTo:
hiddenStateOwnerForRowsUID
hiddenStateOwnerForColumnsUID
setHiddenStateOwnerForRowsUID:
setHiddenStateOwnerForColumnsUID:
isRowGroupUIDCollapsed:
setRowGroupUID:asCollapsed:
isColumnGroupUIDCollapsed:
setColumnGroupUID:asCollapsed:
collapseSummaryRowGroupUIDs:
expandSummaryRowGroupUIDs:
collapsedRowGroupUids
collapseSummaryColumnGroupUIDs:
expandSummaryColumnGroupUIDs:
collapsedColumnGroupUids
copyCollapsedStateToUpdatedRowGroupUids:
pruneCollapsedRowGroups
pruneCollapsedColumnGroups
filterSetForRows
setFilterSetForRows:
filterSetForColumns
setFilterSetForColumns:
duplicateFilterSetInUidFormWithTable:
mutateFormulaFiltersWithTable:usingBlock:
dirtyFilterStateForHeaders
dirtyFilterStateForFooters
hasFilterRulesWithTable:inBaseColumns:
hasCollapsedRows
hasCollapsedColumns
insertNewRowsInBaseRange:
insertNewColumnsInBaseRange:
deleteRowsFromBaseRange:rowUids:
deleteColumnsFromBaseRange:columnUids:
moveViewColumnRange:toColumnIndex:
swapBaseRowAtIndex:withRowAtIndex:
mutableUserHiddenRowIndexes
mutableUserHiddenColumnIndexes
mutablePivotHiddenRowIndexes
mutablePivotHiddenColumnIndexes
mutableFilteredRowIndexes
mutableFilteredColumnIndexes
hiddenRowIndexes
hiddenColumnIndexes
copyFromHiddenStates:forRange:withContext:isWholeTableCopy:
verifyConnectionsWithTableModel:
setHiddenStatesOwner:
rowHiddenStateExtent
columnHiddenStateExtent
loadedIndexesAfterUnarchive
_rowHiddenStateExtent
_columnHiddenStateExtent
_loadedIndexesAfterUnarchive
T@"TSTHiddenStatesOwner",W,N,V_hiddenStatesOwner
T@"TSTHiddenStateExtent",R,N,V_rowHiddenStateExtent
T@"TSTHiddenStateExtent",R,N,V_columnHiddenStateExtent
T@"TSTTableTranslator",R,N,V_translator
TB,R,N,V_loadedIndexesAfterUnarchive
T@"TSTTableFilterSet",&,N
p_filterRegion:strokeSidecar:
getNext
advanceToCellID:
updateCellData:
updateFormulaForCellData:
curCellID
setCurCellID:
_curCellID
T@"TSTStrokeSidecar",R,N,V_strokeSidecar
T@"NSObject<TSTCellRegionIterating>",R,N,V_regionIterator
T{TSUCellCoord=ISBB},N,V_curCellID
groupByForUID:withCalcEngine:
groupByForCategoryRef:withCalcEngine:
tableUIDForCategoryRef:withCalcEngine:
relativeAncestorGroupUid:
relativeLevelOfAncestorGroupUid:
isRelativeAncestorGroupUid:
aggregateTypeForAggregateLabel:locale:
localizedNameForBlankGroupForDocumentLocale:
localizedNameForErrorGroupForDocumentLocale:
localizedTrueStringForBooleanGroupWithString:documentLocale:
localizedFalseStringForBooleanGroupWithString:documentLocale:
validateNumberOfGroupsForGroupingColumnList:pivotDataModel:limit:groupNodeCount:
validateNumberOfGroupsForGroupingColumnList:sourceTableModel:sourceBodyTract:limit:groupNodeCount:
initWithGroupings:categoryOwner:
initWithGroupings:categoryOwner:groupByUid:ownerIndex:
initWithGroupings:isEnabled:categoryOwner:groupByUid:ownerIndex:
resetWithGroupings:categoryOwner:hiddenStates:groupBySet:
didInitFromSOS
setCategoryOwner:
resolveRelativeAncestorUid:atRowUid:
convertToRelativeAncestorUid:atRowUid:
resolveCategoryRef:atRowUid:inHostTable:
convertCategoryRefToRelativeAncestorUid:atRowUid:inHostTable:
isForPivotTable
resetGroupBy
setIsEnabled:
numberOfLevels
topLevelGroupUid
topLevelGroupNode
columnOrderChangedPrecedent
rowOrderChangedPrecedent
rowOrderChangedPrecedentIgnoringRecalc
hiddenStatesChangedPrecedent
resetGroupingColumnsFormula
resetAllAggsFormula
didAddGroupNode:
willRemoveGroupNode:
groupNodesByGroupUid
initWithArchive:forCategoryOwner:unarchiver:
isPrePivotV2Compatible
encodeToArchive:archiver:backwardCompatOptions:
checkForFormulaCoordUpgrade
groupingColumnListCopy
columnAggregateListCopy
columnAggregatesOnColumnUids:
setGroupingColumnList:
changeForUpdatingGroupValueOnNode:toValue:
changeForMovingBaseRows:toDestGroup:
changeForSettingGroupingColumnList:
mapGroupUidsForChange:
_addAggregates:atLevel:
_removeAggregates:
runChange:withAggregates:
numberOfGroupsAtLevel:
numberOfGroupsUptoLevel:
isGroupingColumn:
groupingColumnLevelsForColumn:
enumerateGroupingColumnsForColumn:withBlock:
indexOfGroupingColumn:
groupingColumnAtCategoryLevel:
allGroupNodeUids
markAllAggregatesAsDirty
markAllDependentsAsDirty
anyAggregateTypeForColumnUID:
usesPrePivotAggregateTypesOnly
setAggregates:
enumerateAggregates:
enumerateAggregatesAtLevel:withBlock:
numberOfAggregatesAtLevel:
enumerateAllGroupsWithBlock:
groupNodeForGroupUuid:
groupLevelForGroupUid:isBlank:isError:
groupLevelForGroupingColumnUid:
markAllGroupNodesDirty
groupsAtLevel:
rowsForGroupValue:atLevel:
rowUidsForGroupUids:
enumerateRowsUidsAtLevel:withBlock:
childGroupUidsForGroupUids:
labelRowUidsForGroupUids:
labelRowUIDSet
labelRowUIDSetForCategoryLevel:labelRowVisibility:
rowUIDSetForCategoryLevel:
indexesOfGroupUidsInUids:
groupValueTupleForRowUid:atLevel:
insertRowUid:atRowIndex:forGroupValue:
removeRowUid:forGroupValue:
removeRowUid:
findGroupNodeForValue:atLevel:createIfMissing:
distinctValuesAtLevel:
sortedValuesAtLevel:
aggregateRefOnValue:forColumnUid:forType:atLevel:
groupValueRefOnValue:atLevel:
groupValueHierarchyRefOnValue:atLevel:
beginDeferringRebuildFormulas
endDeferringRebuildFormulas
isRebuildFormulasDeferred
deferGroupByChangeNotifications
sendDeferredNotifictions:
resumeGroupByChangeNotifications
isDeferringGroupByChangeNotifications
enterCalcEngineMode
exitCalcEngineMode
inCalcEngineMode
rebuildAllAggFormulas
resetGroupings
insertRowUids:
getNextAggFormulaCoord
usedAggFormulaCoord:
updateAggFormulaCoord:
setValue:forFormulaCoord:
clearValueForFormulaCoord:
valueForFormulaCoord:
setAggNode:forFormulaCoord:
clearAggNode:forFormulaCoord:
aggNodeForAggFormulaCoord:
addAggregator:
createAggregatorOnColumn:
anyAggregator
dropAggregator:
createAggregatorsIfMissingAndAssert:
dropAllAggregators
aggregatorForColumn:
isValidCategoryRef:
isSpanningCategoryRef:
columnNameForCategoryRef:
columnNameForCategoryLevel:shortForm:
p_columnNameForColumnUid:
aggregateLabelForCategoryRef:
aggregateTypeForAggregateLabel:
labelForCategoryRef:
groupValueHierarchyStringForCategoryRef:forHostCellRef:namingContext:
groupNodeForGroupValueHierarchyFromSplitter:startAtComponent:startAtWord:preserveFlags:
bodyRowUidsForCategoryRef:atRowUid:ordered:
valuesForCategoryRef:
valuesForCategoryRef:atRowUid:
valuesForCategoryRef:atRowUid:hidingActionMask:
valueGridForCategoryRef:
valueGridForCategoryRef:atRowUid:
valueGridForCategoryRef:atRowUid:hidingActionMask:
countOfValuesForCategoryRef:
cellRefsForCategoryRef:atRowUid:ordered:
uidRectRefForCategoryRef:atRowUid:
expandSpanningCategoryRef:
captureCategoryRefsFromIterator:atLevel:asSpanning:
promoteSpanningReferences:
p_promoteSpanningReferences:withCaptured:atLevel:
captureCategoryLabelRefsForViewRegion:atLevel:asSpanning:forRows:
captureAnyCategoryRefsForViewRegion:atLevel:asSpanning:
captureCategoryRefsForViewRegion:atLevel:asSpanning:
viewCellTractRefForCategoryRef:
viewCellTractRefForCategoryRef:atRowUid:
stringForCategoryRef:hostTableUID:
prettyStringForCategoryRef:forHostCellRef:namingContext:
lookupKeyForRowUID:
findKeyForRowUid:
rowUIDForLookupKey:
analyze
p_setupCustomFormatsWithLocale:
isBlankGroupUid:
isErrorGroupUid:
categoryRefForAggregateRangeRef:
setGroupBySet:
isEnabled
groupByChangeDistributor
aggregators
ownerIndex
columnAggregates
indirectAggTypeChangeFormulaCoord
groupingColumnsFormulaCoord
groupingColumnHeadersFormulaCoord
allAggsInGroupRootFormulaCoord
needsRebuildOfAggFormulas
setNeedsRebuildOfAggFormulas:
customFormatForBlankGroup
customFormatForErrorGroup
_isEnabled
_groupRoot
_ownerIndex
_aggregators
_indirectAggTypeChangeFormulaCoord
_groupingColumnsFormulaCoord
_groupingColumnHeadersFormulaCoord
_allAggsInGroupRootFormulaCoord
_columnOrderChangedCoord
_rowOrderChangedCoord
_rowOrderChangedIgnoringRecalcCoord
_hiddenStatesChangedCoord
_groupByChangeDistributor
_nextAggFormulaCoord
_aggValuesLock
_aggNodesByFormulaCoord
_groupNodesByGroupUid
_rebuildFormulasDeferredLevel
_needsRebuildOfAggFormulas
_deferGroupByChangeNotificationsLevel
_deferredGroupByChangeNotifications
_calcEngineGroupByChangeNotifications
_inCalcEngineMode
_groupingColumnHeadersChanged
_rowUidLookupList
_customFormatForBlankGroup
_customFormatForErrorGroup
T@"TSTCategoryOwner",W,N,V_categoryOwner
T@"TSTGroupBySet",W,N,V_groupBySet
T@"NSArray",R,V_groupingColumns
TC,R
TB,N,V_isEnabled
T@"TSTGroupByChangeDistributor",R,N,V_groupByChangeDistributor
T@"NSMutableArray",R,N,V_aggregators
T@"NSArray",R,N,V_columnAggregates
T@"TSULocale",R,N
TS,R,N,V_ownerIndex
TB,N,V_isRegisteredWithCalcEngine
T@"TSTGroupNode",R,N
T{TSUCellCoord=ISBB},R,N,V_indirectAggTypeChangeFormulaCoord
T{TSUCellCoord=ISBB},R,N,V_groupingColumnsFormulaCoord
T{TSUCellCoord=ISBB},R,N,V_groupingColumnHeadersFormulaCoord
T{TSUCellCoord=ISBB},R,N,V_allAggsInGroupRootFormulaCoord
T{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}},R,N
TB,N,V_needsRebuildOfAggFormulas
T@"TSKCustomFormatWrapper",R,N,V_customFormatForBlankGroup
T@"TSKCustomFormatWrapper",R,N,V_customFormatForErrorGroup
copyByPruningAgainstTable:behavior:usingBlock:
UIDLookupList
initWithCellUIDList:
addCellUID:
addCellRegion:withColumnUIDs:rowUIDs:
cellUIDAtIndex:
_UIDLookupList
ruleWithGroupingColumnUID:columnUID:direction:
initWithGroupingColumnUID:columnUID:direction:
groupingColumnUID
columnUID
setColumnUID:
setGroupingColumnUID:
ruleByChangingDirectionTo:
ruleByChangingSummaryColumnTo:
groupLevelInTable:
direction
setDirection:
_groupingColumnUID
_columnUID
_direction
_definedGroupingColumnUID
_definedColumnUID
_definedDirection
Ti,N,V_direction
p_initializeQueue
p_recursiveWriteWillModify:withBlock:
p_isInCollaborationMode
coordinator
registerWithCoordinator
unregisterWithCoordinator
valueForRemoteData:
cachedQuoteForSymbol:
addRemoteDataInterest:forOwner:
removeRemoteDataInterest:forOwner:
p_updateCachesWithMap:quotes:overwriteValues:
remoteDataSyncKey
remoteDataDidUpdateValues:quotes:
p_tsceValueFromTsceCellValue:
allRemoteData
allQuotes
p_dictionaryForRemoteData:
updateWithRemoteDataMap:quotes:syncKey:
hasFullyPopulatedCache
updateCachedStocksFromKnownStocks:
updateCachedStocksIntoStore:
hasArchivableState
delegate
setDelegate:
updateQueue
tspSemaphore
remoteDataMap
cachedStocks
interestingKeys
hasInterestingKeys
setHasInterestingKeys:
ownerMap
registeredWithCoordinator
setRegisteredWithCoordinator:
setRemoteDataSyncKey:
unSyncedStocks
setUnSyncedStocks:
_hasInterestingKeys
_registeredWithCoordinator
_delegate
_updateQueue
_tspSemaphore
_remoteDataMap
_cachedStocks
_interestingKeys
_ownerMap
_remoteDataSyncKey
_unSyncedStocks
T@"NSOperationQueue",R,N,V_updateQueue
T@"NSObject<OS_dispatch_semaphore>",R,N,V_tspSemaphore
T@"TSCERemoteDataCoordinator",R,N
T@"TSCERemoteDataValueMap",R,N,V_remoteDataMap
T@"NSMutableDictionary",R,N,V_cachedStocks
T@"TSCERemoteDataSpecifierSet",R,N,V_interestingKeys
TB,N,V_hasInterestingKeys
T@"NSMutableDictionary",R,N,V_ownerMap
TB,N,V_registeredWithCoordinator
Td,N,V_remoteDataSyncKey
T@"NSMutableSet",&,N,V_unSyncedStocks
T@"<TSCERemoteDataStoreDelegate>",W,N,V_delegate
cellBorderForResettingAllStrokes
setTopStroke:order:
setLeftStroke:order:
setBottomStroke:order:
setRightStroke:order:
_clearTopStroke
_clearLeftStroke
_clearBottomStroke
_clearRightStroke
hasContent
initFromMessage:unarchiver:
topStroke
topStrokeOrder
leftStroke
leftStrokeOrder
bottomStroke
bottomStrokeOrder
rightStroke
rightStrokeOrder
definedTopStroke
definedLeftStroke
definedBottomStroke
definedRightStroke
_topStroke
_topStrokeOrder
_rightStroke
_rightStrokeOrder
_bottomStroke
_bottomStrokeOrder
_leftStroke
_leftStrokeOrder
_definedTopStroke
_definedTopStrokeOrder
_definedRightStroke
_definedRightStrokeOrder
_definedBottomStroke
_definedBottomStrokeOrder
_definedLeftStroke
_definedLeftStrokeOrder
TB,R,N,V_definedTopStroke
TB,R,N,V_definedLeftStroke
TB,R,N,V_definedBottomStroke
TB,R,N,V_definedRightStroke
T@"TSDStroke",R,N,V_topStroke
Ti,R,N,V_topStrokeOrder
T@"TSDStroke",R,N,V_leftStroke
Ti,R,N,V_leftStrokeOrder
T@"TSDStroke",R,N,V_bottomStroke
Ti,R,N,V_bottomStrokeOrder
T@"TSDStroke",R,N,V_rightStroke
Ti,R,N,V_rightStrokeOrder
p_strokeLayerVector
lookupStrokeAtIndex:
enumerateStrokesFrom:to:usingBlock:
enumerateStrokesInRange:usingBlock:
enumerateWidthsInRange:usingBlock:
enumerateStrokesAndCapsFrom:to:usingBlock:
enumerateStrokesAndCapsInRange:usingBlock:
portalledStrokeLayer
mutableStrokeLayerWithContext:subtractingDefaultsFrom:forRange:
mRWLock
strokeLayerStack
defaultsOnlyStrokeLayerStack
replacementWithDefaults
isEligibleForDefaultsOnlyReplacement
verifyWithExpectedDefaultStrokeLayer:
insertClearedStrokeAtRange:
insertDynamicStroke:strokeOrder:atRange:
insertSpillStroke:atRange:
hasSpillStrokeInRange:
replaceDefaultStrokeLayerWith:
replaceCustomStrokeLayerWith:
invalidateCustomStrokes
invalidateClearedStrokesInRange:
invalidateDynamicStrokes
invalidateDynamicStrokesInRange:
invalidateSpillStrokes
stackReferences
isDefaultsOnly
defaultStrokeLayer
setDefaultStrokeLayer:
customStrokeLayer
setCustomStrokeLayer:
clearedStrokeLayer
setClearedStrokeLayer:
dynamicStrokeLayer
setDynamicStrokeLayer:
spillStrokeLayer
setSpillStrokeLayer:
_isDefaultsOnly
_defaultStrokeLayer
_customStrokeLayer
_clearedStrokeLayer
_dynamicStrokeLayer
_spillStrokeLayer
T@"TSTStrokeLayer",&,N,V_defaultStrokeLayer
T@"TSTStrokeLayer",&,N,V_customStrokeLayer
T@"TSTMutableStrokeLayer",&,N,V_clearedStrokeLayer
T@"TSTMutableStrokeLayer",&,N,V_dynamicStrokeLayer
T@"TSTMutableStrokeLayer",&,N,V_spillStrokeLayer
TB,R,N,V_isDefaultsOnly
mergeTopStrokes:withBottomStrokes:
mergeLeftStrokes:withRightStrokes:
enumerateWidthsInLayers:usingBlock:
initWithCopyOfMajorStrokes:andMinorStrokes:
maxWidthOfStrokesInRange:cachedMax:
p_widthOfStrokesAtIndex:
defaultMinorStrokeLayer
setDefaultMinorStrokeLayer:
defaultMajorStrokeLayer
setDefaultMajorStrokeLayer:
customUnorderedStrokeLayer
setCustomUnorderedStrokeLayer:
customOrderedStrokeLayer
setCustomOrderedStrokeLayer:
clearedMinorStrokeLayer
setClearedMinorStrokeLayer:
clearedMajorStrokeLayer
setClearedMajorStrokeLayer:
dynamicUnorderedStrokeLayer
setDynamicUnorderedStrokeLayer:
dynamicOrderedStrokeLayer
setDynamicOrderedStrokeLayer:
spillMinorStrokeLayer
setSpillMinorStrokeLayer:
spillMajorStrokeLayer
setSpillMajorStrokeLayer:
_defaultMinorStrokeLayer
_defaultMajorStrokeLayer
_customUnorderedStrokeLayer
_customOrderedStrokeLayer
_clearedMinorStrokeLayer
_clearedMajorStrokeLayer
_dynamicUnorderedStrokeLayer
_dynamicOrderedStrokeLayer
_spillMinorStrokeLayer
_spillMajorStrokeLayer
T@"TSTStrokeLayer",&,N,V_defaultMinorStrokeLayer
T@"TSTStrokeLayer",&,N,V_defaultMajorStrokeLayer
T@"TSTStrokeLayer",&,N,V_customUnorderedStrokeLayer
T@"TSTStrokeOrderedLayer",&,N,V_customOrderedStrokeLayer
T@"TSTMutableStrokeLayer",&,N,V_clearedMinorStrokeLayer
T@"TSTMutableStrokeLayer",&,N,V_clearedMajorStrokeLayer
T@"TSTMutableStrokeLayer",&,N,V_dynamicUnorderedStrokeLayer
T@"TSTStrokeOrderedLayer",&,N,V_dynamicOrderedStrokeLayer
T@"TSTMutableStrokeLayer",&,N,V_spillMinorStrokeLayer
T@"TSTMutableStrokeLayer",&,N,V_spillMajorStrokeLayer
initWithDefaultStrokeProvider:customStrokeProvider:tableInfo:
p_resolveStrokes
strokesForCellID:top:left:bottom:right:
p_strokeExportCacheForGridColumn:
p_strokeExportCacheForGridRow:
p_strokeExportCacheForColumnBefore:columnAfter:
p_strokeExportCacheForRowAbove:rowBelow:
defaultStrokeProvider
customStrokeProvider
rowStrokeExportCache
setRowStrokeExportCache:
columnStrokeExportCache
setColumnStrokeExportCache:
_defaultStrokeProvider
_customStrokeProvider
_rowStrokeExportCache
_columnStrokeExportCache
T@"<TSTTableStrokeProviding>",R,N,V_defaultStrokeProvider
T@"<TSTCustomStrokeProviding>",R,N,V_customStrokeProvider
T@"TSUIntegerKeyDictionary",&,N,V_rowStrokeExportCache
T@"TSUIntegerKeyDictionary",&,N,V_columnStrokeExportCache
clearRowIndexesCache
uniqueValueToRowUids
setUniqueValueToRowUids:
uniqueValueToRowIndexes
setUniqueValueToRowIndexes:
_uniqueValueToRowUids
_uniqueValueToRowIndexes
T@"NSMutableDictionary",&,N,V_uniqueValueToRowUids
T@"NSMutableDictionary",&,N,V_uniqueValueToRowIndexes
firstIndexNotInIndexSet:beginRange:pastEndRange:
lastIndexNotInIndexSet:beginRange:pastEndRange:
firstIndexNotInIndexSet:orIndexSet:beginRange:pastEndRange:
lastIndexNotInIndexSet:orIndexSet:beginRange:pastEndRange:
swapIndexesWithIndexSet:index:withIndex:
initWithHiddenStatesOwner:forRows:
tableTranslator
p_canUsePrePivotFilterSet
setupAfterUnarchive
uniqueValuesLock
uniqueValuesUnlock
setHiddenStateExtentUid:
p_viewIndexForBaseIndex:
p_addHiddenIndex:viewIndex:forAction:
p_removeHiddenIndex:viewIndex:forAction:
hideAtUid:forAction:
hideAtUid:forIndex:forViewIndex:forAction:
showAtUid:forAction:
showAtUid:forIndex:forViewIndex:forAction:
hidingActionForUid:
removeUid:
anyHidden
anyCollapsed
anyUserHidden
numberOfHidden
numberOfUserHidden
clearInvalidIndexes
p_collapsedIndexes
p_hiddenIndexes
p_filteredIndexes
p_summaryFilteredIndexes
p_userHiddenIndexes
p_summaryPivotHiddenIndexes
hideAtViewIndex:forAction:
showAtViewIndex:forAction:
hideAtViewIndexes:forAction:
showAtViewIndexes:forAction:
hideAtBaseIndex:forAction:
showAtBaseIndex:forAction:
clearAllPivotHidden
hidingActionForViewIndex:
hidingActionForBaseIndex:
indexesOfHiddenInRange:
indexesOfHiddenInBaseRange:
indexesOfUserHiddenInRange:
indexesOfFilteredInRange:
indexesOfCollapsedInRange:
indexesOfVisibleInRange:
indexesOfUserVisibleInRange:
indexesOfVisibleIndexesInIndexes:
numberOfHiddenInRange:
numberOfHiddenInBaseRange:
numberOfUserHiddenInBaseRange:
numberOfUserHiddenInRange:
anyHiddenInRange:
anyHiddenInRange:forAction:
hasHiddenAtIndex:
findFirstVisibleIndexInBegin:afterEnd:
findLastVisibleIndexInBegin:afterEnd:
indexOfVisibleBeforeIndex:
indexOfVisibleBeforeAndIncludingIndex:
indexOfVisibleAfterIndex:
indexOfVisibleAfterAndIncludingIndex:
insertBaseRange:
deleteBaseRange:withUids:
moveBaseRangeFrom:toIndex:
moveViewRangeOnlyFrom:toIndex:
swapBaseIndex:withIndex:
p_baseHiddenIndexes
p_summaryHiddenIndexes
mutableUserHiddenIndexes
mutableFilteredIndexes
hiddenOrCollapsedIndexes
mutablePivotHiddenIndexes
p_removeAllFormulaFromCalculationEngine
precedentsForFilterSet:calcEngine:hostOwnerUID:hostCellID:
p_registerAllFormulasReturningCoords:
p_registerAllFormulas
isGroupUIDCollapsed:
setGroupUID:asCollapsed:
copyCollapsedStateToUpdatedGroupUids:dimension:
pruneCollapsedGroupsInDimension:
p_calculateAverageThresholdWithCalcEngine:formulaCoord:
p_calculateUniqueThresholdWithCalcEngine:formulaCoord:
p_calculateTopOrBottomThresholdWithCalcEngine:formulaCoord:isTop:keyScale:
p_createThresholdCellValue:locale:
p_calculateUniqueDistinctIndexWithCalcEngine:formulaCoord:tableModel:rule:
dirtyFilterStateForRowRange:
cellReferenceForIndex:
p_hiddenStateChangedForBaseIndex:viewIndex:forAction:
uniqueValuesForColumnUID:
clearAllCachedRowIndexes
verifyIndexesAreConsistent
hiddenStateExtentUid
forRows
collapsedGroupUids
_hiddenStateExtentUid
_baseHiddenByUid
_summaryHiddenByUid
_forRows
_collapsedGroupUids
_baseUserHiddenIndexes
_baseFilteredIndexes
_viewIndexesMutex
_userHiddenIndexes
_filteredIndexes
_combinedHiddenIndexes
_collapsedIndexes
_summaryFilteredIndexes
_summaryPivotHiddenIndexes
_uniqueValuesByColumnUid
_columnUidsWithUniqueIndexes
_rewrittenFilterSet
_pendingComputedLock
_pendingColumnsOrRowsShown
_pendingColumnsOrRowsHidden
_pendingViewColumnsOrRowsShown
_pendingViewColumnsOrRowsHidden
_cellRangesToInvalidate
_invalidateViewGeometry
_invalidateCollapsed
_uniqueValuesLock
_needsSummaryUidUpgrade
T{TSKUIDStruct=QQ},N,V_hiddenStateExtentUid
TB,R,N,V_forRows
T@"TSCEUIDSet",R,N,V_collapsedGroupUids
T@"NSArray",R,N,V_thresholdCellValues
mergeListFromModelMergeList:
initWithTableModel:ownerUID:
mergeChangeDistributor
allMergesAsString
initWithArchive:unarchiver:forTableModel:
resetMergeOriginMap
mergeIndexesForRange:
mergeIndexesForBaseCellRegion:
p_updateOriginMapWithSourceCellCoord:destCellCoord:
p_moveCellFromCellCoord:toCellCoord:
p_shrinkMergesAtIndexes:intersectedByBaseRegion:
mergeActionForBaseCellRegion:
mergeActionForBaseCellRegion:nonOriginPartialsOnly:
reloadMergeCacheForIndexes:
resetMergeCache
loadMergeCache
p_dirtyCellsForMerge:
insertBaseMergeRange:
insertBaseMergeRangeRemovingOverlaps:
removeBaseMergeRange:
removeReturningInverseForBaseCellRegion:
shrinkReturningInverseForBaseCellRegion:
p_shrinkReturningInverseForAction:
p_growRangeFrom:toDesired:
p_growReturningInverseForAction:
find:
p_enumerateMergesUsingBlock:
enumerateMergesIntersectingBaseCellRegion:usingBlock:
enumerateMergeFormulasUsingBlock:
allValidMergesForMergeList:
clearAllMergeRanges
mergeRangesAndCrumbsIntersectingBaseCellRect:
hasMergeRangesIntersectingBaseCellRect:
hasMergeRangesIntersectingBaseCellRegion:
mergeOriginForBaseCellCoord:
mergeRangesPartiallyIntersectBaseCellRect:
mergeRangesPartiallyIntersectBaseCellRegion:
hasMergeRangeSpanningRowsForBaseCellRect:
rewroteFormula:atCoordinate:withRewriteSpec:isUndo:
rewriteMergesForRemovedRange:uids:isRows:
rewriteMergesForInsertedRange:uids:isRows:
setFormulaStore:
mergeOriginsMap
reverseOriginsMap
mergeCacheLoaded
setMergeCacheLoaded:
mergeRangeCache
setMergeRangeCache:
setMergeChangeDistributor:
_mergeOriginsMap
_reverseOriginsMap
_mergeCacheLoaded
_mergeRangeCache
_mergeChangeDistributor
T@"TSTCellRangeCache",&,N,V_mergeRangeCache
TB,N,V_mergeCacheLoaded
T@"TSTTableModel",R,W,N,V_tableModel
T@"TSTFormulaStore",&,N,V_formulaStore
T@"TSTMergeChangeDistributor",&,N,V_mergeChangeDistributor
Tr^v,R,N,V_mergeOriginsMap
Tr^v,R,N,V_reverseOriginsMap
defaultCellSpec
interactionTypeIsControl:
interactionTypeForShimControlFormatType:
shimControlFormatTypeForInteractionType:
isShimControlFormatType:
displayNameForInteractionType:
isControl
propertiesMatchingThoseInMap:
interactionTypeFromTheFuture
setInteractionTypeFromTheFuture:
_interactionTypeFromTheFuture
TI,N,V_interactionTypeFromTheFuture
initWithTableInfo:baseTableUID:context:
registerWithCalcEngine:reregister:
p_referenceForColumnIndex:
p_columnForTrackedReference:
p_hasRuleReferenceForTrackedReference:
beginTrackingReferenceWithSpanningRef:
updateForSortRules:
initFromArchive:unarchiver:
autofillSelectionWithSourceCellRange:
autofillSelectionWithSourceCellRange:targetCellRange:
initWithSourceCellRange:
initWithSourceCellRange:targetCellRange:
isValidForCellSelection:inTable:
isValidForRowVisibilityChangeInRegion:table:
sourceCellRange
setSourceCellRange:
targetCellRange
setTargetCellRange:
_sourceCellRange
_targetCellRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_sourceCellRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_targetCellRange
mergeRange:forCellID:
effectiveTableNameHeightForTable:
tableRowsBehaviorForTable:andEnvironment:
emptyFilteredTable
setProcessHiddenRowsForExport:
setStyleProvidingSource:
fixedWidthProvider
pushToStyleProviderStack:
popFromStyleProviderStack
pushToFixedColumnWidthStack:
popFromFixedColumnWidthStack
initWithInfo:layoutEngineBundle:
tableStrokeProvider
newLayoutHint
hintIsValid:
validateLayoutHint:
resetModelHeightWidthCache
clearModelHeightWidthCacheForCellRange:
tableNameTextEngineWithTableNameStyle:
tableNameTextEngine
tableNameTextSize
tableNameTextSizeForTableName:maxWidth:tableNameStyle:
tableNameHeightForStorage:withMaxWidth:
calculatedTableNameHeight
calculatedTableNameHeightIncludingDynamicResize:
invalidateTableNameHeight
validateTableNameHeight
validateTableNameEnabled
updateCellRange
numberOfNonHiddenFooterRows
categoryColumnsCellRange
entireHeaderColumnsCellRange
entireActualHeaderColumnsCellRange
entireHeaderRowsCellRange
entireFooterRowsCellRange
entireBodyRowsCellRange
entireBodyCellRange
mergeRangesProppingRowHeightsInRegion:
widthOfColumn:skipDynamicSwap:returnZeroIfHidden:outIsFitting:
heightOfRow:skipDynamicSwap:withStrokeHeights:returnZeroIfHidden:clampToPartitionSize:maximumPartitionSize:outIsFitting:
clampRowHeightAccountingForMaximumPartitionSize:rowIndex:rowHeight:
heightOfRowIgnoringFitting:withStrokeHeights:
fittingHeightOfRow:
invalidateStrokeDefaults
invalidateStrokeSpills
validateStrokesArrays:
p_setDynamicStroke:strokeOrder:forGridColumn:isLeft:beginRow:endRow:
setStrokeSpillForRightGridColumn:leftGridColumn:inRow:
hasStrokeSpillForLeftGridColumn:inRow:
setClearedStrokeForGridColumn:beginRow:endRow:
setClearedStrokeForGridRow:beginColumn:endColumn:
adjustGridColumnForVisibility:isLeft:
p_strokesForGridColumn:isLeft:takeStrokeWriteLock:
mergedStrokesForGridColumn:
strokeWidthOfGridColumn:inRowRange:
strokeWidthOfGridColumn:beginRow:endRow:
strokeWidthOfGridColumn:atRowIndex:
p_setDynamicStroke:strokeOrder:forGridRow:isTop:beginColumn:endColumn:
adjustGridRowForVisibility:isTop:
p_strokesForGridRow:isTop:takeStrokeWriteLock:
p_strokesForValidationOfGridRow:isTop:
mergedStrokesForGridRow:
p_validateStrokeWidthCachesForGridRow:
p_validateStrokeWidthCachesForGridColumn:
strokeHeightOfGridRow:inColumnRange:
strokeHeightOfGridRow:beginColumn:endColumn:
strokeHeightOfGridRow:atColumnIndex:
setDynamicCellBorder:forCellID:
clearDynamicStrokesForCellRange:
enumerateMergedStrokesForGridColumn:from:to:usingBlock:
enumerateMergedStrokesForGridRow:from:to:usingBlock:
enumerateMergedStrokesAndCapsForGridColumn:from:to:usingBlock:
enumerateMergedStrokesAndCapsForGridRow:from:to:usingBlock:
p_invalidateClearedStrokesForCellRegion:
p_clearStrokesForMergesInCellRegion:
contentSizeForCellRange:skipDynamicSwap:
contentWidthForCellRange:skipDynamicSwap:
contentWidthForCellRange:validationBundle:
p_contentWidthForCellRange:skipDynamicSwap:validationBundle:
contentHeightForCellRange:skipDynamicSwap:maximumPartitionSize:
validateStrokesForChangeDescriptors:
p_validateStrokesForRegion:
verifyStrokes
p_validateStrokeWidthCachesForRegion:invalidateStrokeDefaults:
shouldRowUseBandedFill:
invalidateBandedFill
validateBandedFill
invalidateDefaultFontHeights
validateDefaultFontHeights
p_setDefaultFontHeight:forTableStyleArea:
beginDynamicMode:
endDynamicMode:
cell:forCellID:
modelRowForLayoutRow:
modelColumnForLayoutColumn:
modelCellIDForLayoutCellID:
modelCellRegionForLayoutCellRegion:
layoutRowForModelRow:
layoutColumnForModelColumn:
layoutCellIDForModelCellID:
layoutCellRegionForModelCellRegion:
isDynamicallyResizingForColumnRowAdd:
isDynamicallyResizingForColumnRowAdd:rowColIndex:
isDynamicallyResizingCellIDForColumnRowAdd:
isRowUserHidden:
isEntireCellRangeHidden:
anyRowsUserHiddenInCellRange:
nonUserHiddenRowAfterAndIncludingRow:
visibleRowIndices
visibleColumnIndices
hiddenRowIndices
hiddenColumnIndices
expandCellRangeToVisibleNeighbors:
firstEmptyBodyRow
containsAnyContentInRange:
dynamicLayout
isDynamicallyHidingRowsCols:rowColIndex:
isDynamicallyHidingRowsColsCellID:
isDynamicallyHidingContentOfCellID:
isDynamicallyHidingTextOfCellID:
isDynamicallyRemovingTextOfCellID:
isDynamicallyChangingInfoGeometry
isDynamicallyRevealingRowsCols
isDynamicallyRevealingRowsCols:rowColIndex:
updateDynamicTableNameSize:
isDynamicallyResizingTableName
isDynamicallyChangingRowCount
isDynamicallyChangingColumnCount
isDynamicallyChangingSelection
isDynamicallyColumnTabResizing
isDynamicallyRowTabResizing
isDynamicallySettingBandedFill
isDynamicallyRepressingFrozenHeaderRows
isDynamicallyRepressingFrozenHeaderColumns
updateDynamicFontColor:andRange:
dynamicCellFillDelegate
isDynamicallyChangingCellFill
dynamicContentDelegate
isDynamicallyChangingFontColorOfCellID:
captureDynamicResizeInfo
updateDynamicResizeInfo:
invalidateDynamicResizeInfo
validateDynamicResizeInfo
isGrouped
addChangeDescriptorWithType:andCellRange:
addChangeDescriptorWithType:andCellRange:andStrokeRange:
addChangeDescriptor:
validateLayoutEngineForChangeDescriptors:
validateChangeDescriptorQueue
p_validateCellIDToWPColumnCacheForChangeDescriptors:
finalizeLayoutPassWithRowsNeedingFittingInfo:
validateRowVisibility:
validateFittingInfoForCell:cellID:mergeRange:setFitting:layoutTask:widthHeightCollection:validationBundle:
p_validateFittingInfoWithCellRangeWorker:widthHeightCollection:containsMerges:validationBundle:
validateFittingInfoWithCellRange:validationBundle:
p_validateFittingInfoForEmptyCellsOnSingleRowBetween:andEndCellID:widthHeightCollection:
p_validateFittingInfoForEmptyCellsBetween:andCellID:inRange:widthHeightCollection:
p_addFittingInfoForEmptyMergeRange:
p_validationFittingCellRegionForColumnsDeleted:cellRegionGatherer:
p_validationFittingCellRegionForColumnsInserted:cellRegionGatherer:
p_validationFittingCellRegionForColumnsVisibility:cellRegionGatherer:
p_validationFittingCellRegionForColumnsMovedFrom:toColumnIndex:cellRegionGatherer:
p_validationFittingCellRegionForRowsDeleted:cellRegionGatherer:
p_validationFittingCellRegionForRowsInserted:cellRegionGatherer:
p_validationFittingCellRegionForRowsMovedFrom:toRowIndex:cellRegionGatherer:
p_validationFittingCellRegionForRangeMergeUnmerge:cellRegionGatherer:
p_validationFittingCellRegionForStrokesChanged:cellRegionGatherer:
p_validationFittingForChangeDescriptorType:regionFromChangeDescriptor:cellRegionGatherer:
p_containsGradientFillThatFillsContainerInCell:cellContents:
p_containsGradientThatFillsContainerInStyle:
validateFittingRegionForChangeDescriptors:
validateFittingInfoForValidationRegion:rowsNeedingFittingInfo:
fittingWidthsMapForColumns:includeStrokes:
validateCellForDrawing:cell:contents:wrap:verticalAlignment:padding:layoutCacheFlags:pageNumber:pageCount:
queueCellForValidation:cell:textStyle:modelMergeRange:wrap:verticalAlignment:padding:prop:layoutCacheFlags:validationBundle:layoutTask:
measureWithLayoutState:
processLayoutTask:validationBundle:
waitForLayoutToComplete:
setMaxConcurrentTasks:
unwrappedFittingWidthsForColumnInCellRegionWorker:
unwrappedFittingWidthsForColumnsInCellRegion:
p_validationBundleForRegionToValidate:
enqueueBootstrapChangeDescriptors
p_resolvedTextStyleForCell:atCellID:textStyle:outNaturalAlignment:outCellDirection:
newTextEngineForCell:atCellID:textStyle:naturalAlignment:cellDirection:
newTextEngineForCell:atCellID:textStyle:
formattedDataParagraphStylePropertyMapForCell:atCellID:
edgeInsetsFromPadding:
paddingForCellID:
defaultPaddingForCellID:
fontHeightOfParagraphStyle:
clearRenderingCaches
isCategoryLastSummaryRowCollapsed
isLastVisibleBodyRowCategorySummaryOrLabelRow
modifySafelyUsingBlock:
readSafelyUsingBlock:
strokesDefaultVendor
setStrokesDefaultVendor:
cellIDToWPColumnCache
setCellIDToWPColumnCache:
dupContentCache
setDupContentCache:
tempWPColumnCache
setTempWPColumnCache:
widthHeightCache
setWidthHeightCache:
hiddenRowsColumnsCache
setHiddenRowsColumnsCache:
maxConcurrentTasks
numCellsPerTask
setNumCellsPerTask:
setBandedFillObject:
tableEnvironment
setTableEnvironment:
tableRowsBehavior
setTableRowsBehavior:
isInDynamicLayoutMode
setInDynamicLayoutMode:
dynamicAddOrRemoveColumnElementSize
setDynamicAddOrRemoveColumnElementSize:
dynamicAddOrRemoveRowElementSize
setDynamicAddOrRemoveRowElementSize:
dynamicBandedFill
setDynamicBandedFill:
dynamicBandedFillSetting
setDynamicBandedFillSetting:
dynamicColumnAdjustment
setDynamicColumnAdjustment:
dynamicColumnTabSize
setDynamicColumnTabSize:
dynamicFontColor
setDynamicFontColor:
dynamicFontColorCellRange
setDynamicFontColorCellRange:
dynamicRepResize
setDynamicRepResize:
dynamicRepResizeSessionInProgress
setDynamicRepResizeSessionInProgress:
dynamicInfoGeometry
setDynamicInfoGeometry:
dynamicWidthResize
setDynamicWidthResize:
dynamicHeightResize
setDynamicHeightResize:
dynamicResizingColumns
setDynamicResizingColumns:
dynamicResizingColumnRange
setDynamicResizingColumnRange:
dynamicResizingColumnAdjustment
setDynamicResizingColumnAdjustment:
dynamicResizingRows
setDynamicResizingRows:
dynamicResizingRowRange
setDynamicResizingRowRange:
dynamicResizingRowAdjustment
setDynamicResizingRowAdjustment:
dynamicRowAdjustment
setDynamicRowAdjustment:
dynamicRowTabSize
setDynamicRowTabSize:
dynamicSavedLayoutGeometry
setDynamicSavedLayoutGeometry:
dynamicSelection
setDynamicSelection:
dynamicTableNameResize
setDynamicTableNameResize:
dynamicSuppressingConditionalStylesCellID
setDynamicSuppressingConditionalStylesCellID:
dynamicFooterHeight
changeDescriptors
setChangeDescriptors:
mergeRangesForLayoutPass
setMergeRangesForLayoutPass:
processHiddenRowsForExport
styleProvidingSource
fontInfoCache
setFontInfoCache:
layoutValidateQueue
setLayoutValidateQueue:
layoutMeasureQueue
setLayoutMeasureQueue:
layoutConcurrentQueue
setLayoutConcurrentQueue:
setTopRowStrokes:
setBottomRowStrokes:
setLeftColumnStrokes:
setRightColumnStrokes:
spillStrokeColumns
setSpillStrokeColumns:
cellRegionForClearedMergeStrokes
setCellRegionForClearedMergeStrokes:
columnToStrokeWidthCache
setColumnToStrokeWidthCache:
rowToStrokeHeightCache
setRowToStrokeHeightCache:
paraStyleToHeightCache
setParaStyleToHeightCache:
tableNameBounds
setTableNameBounds:
cachedTableNameHeight
setCachedTableNameHeight:
tableNameHeightValid
setTableNameHeightValid:
tableNameHeightCache
cachedNumberOfColumns
setCachedNumberOfColumns:
cachedNumberOfRows
setCachedNumberOfRows:
cachedNumberOfHeaderColumns
setCachedNumberOfHeaderColumns:
cachedNumberOfHeaderRows
setCachedNumberOfHeaderRows:
cachedNumberOfGrandTotalColumns
setCachedNumberOfGrandTotalColumns:
cachedNumberOfFooterRows
setCachedNumberOfFooterRows:
cachedNumberOfFooterOrGrandTotalRows
setCachedNumberOfFooterOrGrandTotalRows:
cachedMaxNumberOfColumns
setCachedMaxNumberOfColumns:
cachedMaxNumberOfRows
setCachedMaxNumberOfRows:
bandedFillIsValid
setBandedFillIsValid:
setUseBandedFill:
tableDefaultFontHeightsAreValid
setTableDefaultFontHeightsAreValid:
contentReadingThreads
setContentReadingThreads:
setEmptyFilteredTable:
setIsGrouped:
dynamicLayoutParticipants
setDynamicLayoutParticipants:
setDynamicLayout:
setDynamicContentDelegate:
dynamicHidingContent
setDynamicHidingContent:
dynamicHidingRowsCols
setDynamicHidingRowsCols:
dynamicHidingRowsColsDirection
setDynamicHidingRowsColsDirection:
dynamicHidingText
setDynamicHidingText:
dynamicRemovingText
setDynamicRemovingText:
dynamicRepressFrozenHeaderRows
setDynamicRepressFrozenHeaderRows:
dynamicRepressFrozenHeaderColumns
setDynamicRepressFrozenHeaderColumns:
dynamicResizeInfo
setDynamicResizeInfo:
dynamicRevealingRowsCols
setDynamicRevealingRowsCols:
dynamicRevealingRowsColsDirection
setDynamicRevealingRowsColsDirection:
setDynamicCellFillDelegate:
defaultColumnStyle
tableNameTextEngineDelegate
setTableNameTextEngineDelegate:
styleProviderStack
setStyleProviderStack:
fixedColumnWidthStack
setFixedColumnWidthStack:
_tableDefaultFontHeightForArea
_layoutInFlight
_strokesRWLock
_contentRWLock
_dynamicModeUnfairLock
_inDynamicLayoutMode
_dynamicBandedFill
_dynamicBandedFillSetting
_dynamicRepResize
_dynamicRepResizeSessionInProgress
_dynamicResizingColumns
_dynamicResizingRows
_processHiddenRowsForExport
_tableNameHeightValid
_bandedFillIsValid
_useBandedFill
_tableDefaultFontHeightsAreValid
_emptyFilteredTable
_isGrouped
_dynamicRepressFrozenHeaderRows
_dynamicRepressFrozenHeaderColumns
_maxConcurrentTasks
_numCellsPerTask
_tableEnvironment
_tableRowsBehavior
_dynamicColumnAdjustment
_dynamicRowAdjustment
_cachedNumberOfColumns
_cachedNumberOfRows
_cachedNumberOfHeaderColumns
_cachedNumberOfHeaderRows
_cachedNumberOfGrandTotalColumns
_cachedNumberOfFooterRows
_cachedNumberOfFooterOrGrandTotalRows
_changeNotifier
_strokesDefaultVendor
_cellIDToWPColumnCache
_dupContentCache
_tempWPColumnCache
_widthHeightCache
_hiddenRowsColumnsCache
_bandedFillObject
_dynamicAddOrRemoveColumnElementSize
_dynamicAddOrRemoveRowElementSize
_dynamicColumnTabSize
_dynamicFontColor
_dynamicInfoGeometry
_dynamicWidthResize
_dynamicHeightResize
_dynamicResizingColumnAdjustment
_dynamicResizingRowAdjustment
_dynamicRowTabSize
_dynamicSavedLayoutGeometry
_dynamicSelection
_dynamicTableNameResize
_dynamicSuppressingConditionalStylesCellID
_dynamicFooterHeight
_changeDescriptors
_mergeRangesForLayoutPass
_styleProvidingSource
_fontInfoCache
_layoutValidateQueue
_layoutMeasureQueue
_layoutConcurrentQueue
_spillStrokeColumns
_cellRegionForClearedMergeStrokes
_columnToStrokeWidthCache
_rowToStrokeHeightCache
_paraStyleToHeightCache
_cachedTableNameHeight
_tableNameHeightCache
_cachedMaxNumberOfColumns
_cachedMaxNumberOfRows
_contentReadingThreads
_dynamicLayoutParticipants
_dynamicLayout
_dynamicContentDelegate
_dynamicHidingRowsColsDirection
_dynamicResizeInfo
_dynamicRevealingRowsColsDirection
_dynamicCellFillDelegate
_defaultColumnStyle
_tableNameTextEngineDelegate
_styleProviderStack
_fixedColumnWidthStack
_dynamicFontColorCellRange
_dynamicResizingColumnRange
_dynamicResizingRowRange
_dynamicHidingContent
_dynamicHidingRowsCols
_dynamicHidingText
_dynamicRemovingText
_dynamicRevealingRowsCols
_tableNameBounds
T@"TSTWPColumnCache",&,N,V_cellIDToWPColumnCache
T@"TSTDupContentCache",&,N,V_dupContentCache
T@"TSTWPColumnCache",&,N,V_tempWPColumnCache
T@"TSTWidthHeightCache",&,N,V_widthHeightCache
T@"TSTHiddenRowsColumnsCache",&,N,V_hiddenRowsColumnsCache
T@"TSTFontInfoCache",&,N,V_fontInfoCache
T@"TSUWidthLimitedQueue",&,N,V_layoutValidateQueue
T@"TSUWidthLimitedQueue",&,N,V_layoutMeasureQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_layoutConcurrentQueue
T@"TSTStrokeDefaultVendor",&,N,V_strokesDefaultVendor
T@"NSPointerArray",&,N,V_topRowStrokes
T@"NSPointerArray",&,N,V_bottomRowStrokes
T@"NSPointerArray",&,N,V_leftColumnStrokes
T@"NSPointerArray",&,N,V_rightColumnStrokes
T@"TSTConcurrentMutableIndexSet",&,N,V_spillStrokeColumns
T@"TSTCellRegion",&,N,V_cellRegionForClearedMergeStrokes
T@"TSTStrokeWidthCache",&,N,V_columnToStrokeWidthCache
T@"TSTStrokeWidthCache",&,N,V_rowToStrokeHeightCache
T@"TSTTextStyleToFontHeightCache",&,N,V_paraStyleToHeightCache
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_tableNameBounds
Td,N,V_cachedTableNameHeight
TB,N,V_tableNameHeightValid
T@"NSMutableDictionary",R,N,V_tableNameHeightCache
TI,N,V_cachedNumberOfColumns
TI,N,V_cachedNumberOfRows
TI,N,V_cachedNumberOfHeaderColumns
TI,N,V_cachedNumberOfHeaderRows
TI,N,V_cachedNumberOfGrandTotalColumns
TI,N,V_cachedNumberOfFooterRows
TI,N,V_cachedNumberOfFooterOrGrandTotalRows
TQ,N,V_cachedMaxNumberOfColumns
TQ,N,V_cachedMaxNumberOfRows
TB,N,V_bandedFillIsValid
TB,N,V_useBandedFill
T@"TSDFill",&,N,V_bandedFillObject
Ti,N,V_tableRowsBehavior
TB,N,V_tableDefaultFontHeightsAreValid
T@"NSMutableSet",&,N,V_contentReadingThreads
TB,N,V_emptyFilteredTable
T@"NSMutableArray",&,N,V_changeDescriptors
TB,N,V_isGrouped
inDynamicLayoutMode
TB,N,GisInDynamicLayoutMode,V_inDynamicLayoutMode
T@"NSCountedSet",&,N,V_dynamicLayoutParticipants
T@"TSTLayout",&,N,V_dynamicLayout
Td,N,V_dynamicAddOrRemoveColumnElementSize
Td,N,V_dynamicAddOrRemoveRowElementSize
TB,N,V_dynamicBandedFill
TB,N,V_dynamicBandedFillSetting
Ti,N,V_dynamicColumnAdjustment
Td,N,V_dynamicColumnTabSize
T@"<TSTLayoutDynamicContentProtocol>",&,N,V_dynamicContentDelegate
T@"TSUColor",&,N,V_dynamicFontColor
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicFontColorCellRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicHidingContent
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicHidingRowsCols
Tq,N,V_dynamicHidingRowsColsDirection
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicHidingText
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicRemovingText
T@"TSDInfoGeometry",&,N,V_dynamicInfoGeometry
TB,N,V_dynamicRepressFrozenHeaderRows
TB,N,V_dynamicRepressFrozenHeaderColumns
T@"TSTLayoutDynamicResizeInfo",&,N,V_dynamicResizeInfo
TB,N,V_dynamicResizingColumns
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicResizingColumnRange
Td,N,V_dynamicResizingColumnAdjustment
TB,N,V_dynamicResizingRows
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicResizingRowRange
Td,N,V_dynamicResizingRowAdjustment
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicRevealingRowsCols
Tq,N,V_dynamicRevealingRowsColsDirection
Ti,N,V_dynamicRowAdjustment
Td,N,V_dynamicRowTabSize
T@"TSTCellSelection",&,N,V_dynamicSelection
Td,N,V_dynamicTableNameResize
T{TSUCellCoord=ISBB},N,V_dynamicSuppressingConditionalStylesCellID
T@"<TSTLayoutDynamicCellFillProtocol>",&,N,V_dynamicCellFillDelegate
T@"TSWPColumnStyle",R,N,V_defaultColumnStyle
T@"TSTTextEngineDelegate",&,N,V_tableNameTextEngineDelegate
T@"NSPointerArray",&,N,V_styleProviderStack
T@"NSPointerArray",&,N,V_fixedColumnWidthStack
T@"TSKChangeNotifier",W,N,V_changeNotifier
TI,N,V_maxConcurrentTasks
TI,N,V_numCellsPerTask
Ti,N,V_tableEnvironment
TB,N,V_dynamicRepResize
TB,N,V_dynamicRepResizeSessionInProgress
Td,N,V_dynamicWidthResize
Td,N,V_dynamicHeightResize
T@"TSDLayoutGeometry",C,N,V_dynamicSavedLayoutGeometry
Td,R,N,V_dynamicFooterHeight
T@"TSTMergeRangeSortedSet",&,N,V_mergeRangesForLayoutPass
TB,N,V_processHiddenRowsForExport
T@"<TSWPStyleProviding>",R,N,V_styleProvidingSource
archivedHintClass
overlapsWithSelectionPath:
copyForArchiving
firstChildHint
lastChildHint
isFirstHint
effectiveSize
T@"<TSDHint>",R,N
T#,R,N
initWithRange:hintId:partitionPosition:maximumSize:effectiveSize:layout:validity:horizontal:
cacheHintID
setCacheHintID:
partitioningPass
setPartitioningPass:
partitionPosition
setPartitionPosition:
setMaximumSize:
setEffectiveSize:
setLayout:
horizontal
setHorizontal:
_horizontal
_partitionPosition
_cacheHintID
_partitioningPass
_layout
_effectiveSize
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_cellRange
T{TSUCellCoord=ISBB},N,V_cacheHintID
T@"NSNumber",&,N,V_partitioningPass
TI,N,V_partitionPosition
T{CGSize=dd},N,V_maximumSize
T{CGSize=dd},N,V_effectiveSize
T@"TSTLayout",W,N,V_layout
TB,N,V_horizontal
initWithContext:hint:
hint
setHint:
T@"<TSDHint>",&,N
mHint
T@"TSTLayoutHint",&,N,VmHint
participatesInLastRowHeight
nextLayoutForSize:parentLayout:previousHint:horizontally:outFinished:
nextHintForSize:parentLayout:previousHint:horizontally:outFinished:
layoutForHint:parentLayout:
didHint:syncWithNextHint:horizontally:
hintForLayout:
setLayoutPartititionsRightToLeft:contentPartitionsRightToLeft:
totalPartitionFrame
inlineTableWidth
validateScaledLayout
measureCellRangeForNextPartitionOfSize:previousHint:horizontally:
calculateCellRangeForNextPartition:nextPartitionRange:additionalHeightForCaption:availableSizeRemaining:previousHint:
p_didFinishPartitioningHint:horizontally:
shouldReuseLayout:forSize:parentLayout:hint:
scaleIsValid
scaledLayout
resetScaleToFit
partitioningPassForFirstPartitionSize:
partitioningPassForHint:withPreviousHint:
hintCacheKeyForPartitioningPass:andHintID:
hintCacheKeyForHint:
p_flushCacheAfterPartitioningFinished:lastHint:horizontally:
infoGeometry
setInfoGeometry:
setScaledLayout:
tableIsLTR
setTableIsLTR:
layoutIsLTR
setLayoutIsLTR:
firstPartitionWidth
setFirstPartitionWidth:
hintMatricesByCanvas
setHintMatricesByCanvas:
partitioningPassCache
setPartitioningPassCache:
_tableIsLTR
_layoutIsLTR
_infoGeometry
_scaledLayout
_firstPartitionWidth
_hintMatricesByCanvas
_partitioningPassCache
_scaleToFit
T@"TSDInfoGeometry",C,N,V_infoGeometry
T@"TSTLayout",&,N,V_scaledLayout
TB,N,V_tableIsLTR
TB,N,V_layoutIsLTR
Td,N,V_firstPartitionWidth
T@"TSUPointerKeyDictionary",&,N,V_hintMatricesByCanvas
T@"NSMutableDictionary",&,N,V_partitioningPassCache
T{CGSize=dd},N,V_scaleToFit
initWithLayout:
invalidateTableOffsets
getSpaceContainingCellID:
validateLayoutSpaces
enumerateLayoutSpacesUsingBlock:
enumerateFrozenLayoutSpacesUsingBlock:
enumerateRepeatLayoutSpacesUsingBlock:
space
setSpace:
frozenHeaderColumnsSpace
setFrozenHeaderColumnsSpace:
frozenHeaderRowsSpace
setFrozenHeaderRowsSpace:
frozenHeaderCornerSpace
setFrozenHeaderCornerSpace:
repeatHeaderColumnsSpace
setRepeatHeaderColumnsSpace:
repeatHeaderRowsSpace
setRepeatHeaderRowsSpace:
repeatHeaderCornerSpace
setRepeatHeaderCornerSpace:
_space
_frozenHeaderColumnsSpace
_frozenHeaderRowsSpace
_frozenHeaderCornerSpace
_repeatHeaderColumnsSpace
_repeatHeaderRowsSpace
_repeatHeaderCornerSpace
T@"TSTLayoutSpace",&,N,V_space
T@"TSTLayoutSpace",&,N,V_frozenHeaderColumnsSpace
T@"TSTLayoutSpace",&,N,V_frozenHeaderRowsSpace
T@"TSTLayoutSpace",&,N,V_frozenHeaderCornerSpace
T@"TSTLayoutSpace",&,N,V_repeatHeaderColumnsSpace
T@"TSTLayoutSpace",&,N,V_repeatHeaderRowsSpace
T@"TSTLayoutSpace",&,N,V_repeatHeaderCornerSpace
initWithContext:dependencyTracker:ownerID:ownerUID:owner:ownerIndex:
setDependencyTracker:
setOwnerIndex:
embiggenedCellCoord
pushRangeAndSpanningDependentsWithCounts:fromCoord:cellIsInACycle:
resetOwnerUIDForUpgrade:forBaseOwner:ownerKind:
saveAsEmbiggenedFormat
setSaveAsEmbiggenedFormat:
formulaOwnerId
formulaOwnerUid
cellDependencies
rangeDependencies
spanningColumnDependencies
spanningRowDependencies
volatileDependencies
wholeOwnerDependencies
errors
uuidReferences
setFormulaOwner:
calcEngineRegistrationObject
setCalcEngineRegistrationObject:
_saveAsEmbiggenedFormat
_formulaOwnerId
_cellDependencies
_rangeDependencies
_spanningColumnDependencies
_spanningRowDependencies
_volatileDependencies
_wholeOwnerDependencies
_errors
_uuidReferences
_formulaOwner
_calcEngineRegistrationObject
_formulaOwnerUid
TS,R,N,V_formulaOwnerId
TS,N,V_ownerIndex
T{TSKUIDStruct=QQ},R,N,V_formulaOwnerUid
T^v,R,N,V_cellDependencies
T^v,R,N,V_rangeDependencies
T^v,R,N,V_spanningColumnDependencies
T^v,R,N,V_spanningRowDependencies
T^v,R,N,V_volatileDependencies
T^v,R,N,V_wholeOwnerDependencies
T^v,R,N,V_errors
T@"TSCEUuidReferences",R,&,N,V_uuidReferences
T@"<TSCEFormulaOwning>",&,N,V_formulaOwner
T@"<TSCECalculationEngineRegistration>",&,N,V_calcEngineRegistrationObject
TB,N,V_saveAsEmbiggenedFormat
initWithType:keyRange:context:
setKeyRange:
shouldSplit
split
objectAtIndexedSubscript:
setObject:atIndexedSubscript:
enumerateObjectsWithBlock:
loadObjectsFromDataListArchive:unarchiver:
encodeObjectsToDataListArchive:archiver:
keyRange
keys
setKeys:
_estimatedByteSize
_keys
_keyRange
T@"NSMutableIndexSet",&,N,V_keys
Ti,R,N,V_listType
TQ,R,N,V_estimatedByteSize
T{_NSRange=QQ},N,V_keyRange
initWithTableInfo:region:clampingViewRect:flags:searchFlags:
initWithTableInfo:region:forcingRegion:flags:searchFlags:
initWithTableModel:baseRegion:flags:searchFlags:
initWithTableInfo:tableModel:region:forcingRegion:clampingRect:flags:searchFlags:
enumerateConcurrentlyUsingChunkBeginBlock:concurrentBlock:finalBlock:
enumerateModelConcurrentlyUsingChunkBeginBlock:concurrentBlock:finalBlock:
enumerateConcurrentlyUsingChunkBeginBlock:perDispatchThreadBlock:concurrentBlock:finalBlock:
p_enumerateConcurrentlyUsingChunkBeginBlock:perDispatchThreadBlock:concurrentBlock:finalBlock:
cellsPerSubRegion
setCellsPerSubRegion:
forcingRegion
setForcingRegion:
arrayOfChunkRocks
setArrayOfChunkRocks:
flags
setFlags:
searchFlags
setSearchFlags:
clampingRect
setClampingRect:
_cellsPerSubRegion
_forcingRegion
_arrayOfChunkRocks
_flags
_searchFlags
_clampingRect
T@"TSTCellRegion",&,N,V_forcingRegion
T@"NSPointerArray",&,N,V_arrayOfChunkRocks
TQ,N,V_flags
TQ,N,V_searchFlags
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_clampingRect
TQ,N,V_cellsPerSubRegion
rockWithFirst:second:third:fourth:
initWithFirst:second:third:fourth:
first
setFirst:
second
setSecond:
third
setThird:
fourth
setFourth:
_first
_second
_third
_fourth
T@,&,N,V_first
T@,&,N,V_second
T@,&,N,V_third
T@,&,N,V_fourth
stringForMergeType:
cellUIDRangeFromMergeFormula:calcEngine:
mergeActionForRemovingRanges:inTable:
mergeActionForGrowingRange:coveringRange:inTable:
mergeActionForInsertingRange:inTable:
verify
initWithType:uidRange:
initWithType:
initWithType:uidRanges:
hasMergeFormulas
hasMultiRowMerge
addFormula:
addFormulaIndex:
cellRegionForTable:
shrinkAction
actionByExpandingWithAction:
setType:
uidRanges
setUidRanges:
mergeFormulas
setMergeFormulas:
mergeFormulaIndexes
setMergeFormulaIndexes:
_uidRanges
_mergeFormulas
_mergeFormulaIndexes
Ti,N,V_type
Tr^v,N,V_uidRanges
Tr^v,N,V_mergeFormulas
Tr^v,N,V_mergeFormulaIndexes
cellUIDList
cellUIDListFromRange:
compressedRowUIDs
compressedColumnUIDs
compressedRowIndexes
compressedColumnIndexes
setCompressedColumnIndexes:
uncompressedCellUIDs
computeValidCount
addCellUIDs:
addCellUIDRanges:
compress
p_compressUID:index:UIDtoIndexMap:UIDs:compressedIndexes:lastSameUIDIndex:
compressUIDIndexListFrom:withUIDCount:to:
pruneCellUIDListAgainstTable:behavior:
pruneCellUIDListAgainstTable:behavior:usingBlock:
compressedSize
_rowIdList
_columnIdList
_rowUIDIndexList
_columnUIDIndexList
_uncompressedCellUIDs
_compressedSize
TQ,R,N,V_compressedSize
p_nextCellRefIdWithUIDIndexList:UIDs:index:remainDup:lastDiffPos:recentResults:
_nextCellUID_NoDispatch
nextCellUID
nextCellUIDsBatch:batchSize:
setCellUIDList:
rowIndex
setRowIndex:
columnIndex
setColumnIndex:
rowRemainDup
setRowRemainDup:
columnRemainDup
setColumnRemainDup:
lastRowDiffPos
setLastRowDiffPos:
lastColumnDiffPos
setLastColumnDiffPos:
cellUID
setCellUID:
_recentRowResults
_recentColumnResults
_cellUIDList
_rowIndex
_columnIndex
_rowRemainDup
_columnRemainDup
_lastRowDiffPos
_lastColumnDiffPos
_cellUID
T@"TSTCellUIDList",&,N,V_cellUIDList
TQ,N,V_index
TQ,N,V_rowIndex
TQ,N,V_columnIndex
TQ,N,V_rowRemainDup
TQ,N,V_columnRemainDup
TQ,N,V_lastRowDiffPos
TQ,N,V_lastColumnDiffPos
T{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}},N,V_cellUID
initWithNotifyType:group:
initWithNotifyType:group:rowUid:
sendToDistributor:
notifyType
setNotifyType:
rowUID
setRowUID:
_notifyType
_rowUID
Ti,N,V_notifyType
T@"TSTGroupNode",&,N,V_groupNode
T{TSKUIDStruct=QQ},N,V_rowUID
initWithBoolean:locale:
initWithBooleanValue:locale:
booleanValue
_booleanValue
specifierWithFunctionIndex:symbol:attribute:
specifierWithFunctionIndex:symbol:attribute:year:month:day:
specifierFromArchive:
initWithFunctionIndex:symbol:attribute:year:month:day:
specifierByChangingAttributeTo:
hasDateEqualToDate:
p_timeInterval
isCold
isCurrency
invalidAttributeErrorValue
invalidSymbolErrorValue
functionName
hashVal
_hashVal
TQ,R,N,V_hashVal
T@"NSString",R,N,V_symbol
Tq,R,N,V_attribute
groupWithStartingTileID:
initWithStartingTileID:
setReference:forTileID:
_tileForLazyReference:
enumerateTilesWithBlock:
enumerateLoadedTilesWithBlock:
enumerateReferencesWithBlock:
startingTileID
setStartingTileID:
_tiles
_references
_startingTileID
TQ,N,V_startingTileID
initWithDouble:locale:
initWithDecimal:locale:
initWithNumberValue:locale:
_numberValue
setWithSpecifier:
setWithSpecifiers:
setWithSpecifierArray:
p_enumerateYearSetsWithBlock:
p_coldSpecifierCount
initWithSpecifiers:
initWithSpecifierArray:
insertSpecifier:
removeSpecifier:
insertSpecifiersFromArray:
removeSpecifiersFromArray:
insertSpecifiersFromSet:
removeSpecifiersFromSet:
removeAllSpecifiers
containsSpecifier:
containsSpecifiersFromSet:
containsSpecifiersWithSymbol:
containsColdSpecifiers
allSpecifiers
hotSpecifiers
hotSpecifierArray
coldSpecifiers
coldSpecifiersForYear:
coldSpecifierArrayForYear:
sortedArrayOfSpecifiers
allSymbols
enumerateSpecifiersWithBlock:
coldSpecifierSet
hotSpecifierSet
yearsReferenced
setOfSpecifiersContainedInSet:
setOfSpecifiersNotContainedInSet:
setByIntersectingWithSet:
setByRemovingSpecifiersFromSet:
setByRemovingSpecifiersWithSymbols:
setOfSpecifiersPassingTest:
setByIntersectingWithSymbolsOfSet:
setOfSpecifiersWithSymbol:
setOfSpecifiersWithDate:
p_description:
shortDescription
hotData
setHotData:
_coldDataByYear
_hotData
T@"NSMutableSet",&,N,V_hotData
mergedRects
_mergedRects
Tr^v,R,N,V_mergedRects
initWithTableUID:beforeViewColumnRowUIDMap:beforeRewriteMap:
beforeRewriteMap
setBeforeRewriteMap:
beforeColumnRowUIDMap
setBeforeColumnRowUIDMap:
afterRewriteMap
setAfterRewriteMap:
_beforeRewriteMap
_beforeColumnRowUIDMap
_afterRewriteMap
T@"TSTHierarchicalCellDiffMap",&,N,V_beforeRewriteMap
T@"TSTColumnRowUIDMapper",&,N,V_beforeColumnRowUIDMap
T@"TSTHierarchicalCellDiffMap",&,N,V_afterRewriteMap
initWithTableModel:ownerUID:annotations:formulaStore:
addAnnotation:withAnchorRange:
addAnnotation:withFormula:atIndex:
addAnnotation:withFormulaObject:atIndex:
removeAnnotation:
removeAllAnnotations
removeAnnotations:
removeAnnotationAtIndex:
cellRangeForAnnotation:
enumerateAnnotationsWithBlock:
_enumerateAnnotationsAndFormulasWithIndexes:block:
enumerateAnnotationsAndFormulasInRange:withBlock:
enumerateAnnotationsAndFormulasContainedInRegion:withBlock:
containsAnnotation:
indexOfAnnotation:
_annotationsForIndexes:
annotationsStartingInRange:
_annotationsInRows:
annotationsContainedByRegion:
_annotationsIntersectingButNotContainingBaseCellRegion:
_indexesForRange:startingOnly:
_indexesForRows:
_enumerateIndexesIntersectingRegion:block:
_indexesContainedByRegion:
_indexesIntersectingButNotContainingBaseCellRegion:
remapTableUIDsInFormulasWithMap:
annotations
setAnnotations:
_annotations
T@"TSCECalculationEngine",R,W,N,V_calculationEngine
T@"TSUSparseArray",&,N,V_annotations
emptyOptions
initWithFlags:sortingAggregateRuleUid:
hideTotals
repeatLabels
sortByGrandTotal
sortDescending
isNotEmpty
sortingAggregateRuleUid
_sortingAggregateRuleUid
Tq,R,N,V_flags
T{TSKUIDStruct=QQ},R,N,V_sortingAggregateRuleUid
pivotOptionsForUID:
setPivotOptions:forUid:
enumerateOptionsUsingBlock:
prunedCopyWithUids:
_optionsForUidMap
initWithNumRows:andNumColumns:
p_resetToRows:andNumColumns:
setFitHeight:forCellID:
p_setFittingHeightsFromCollectionWithLock:
setFittingHeightsFromCollection:
setFittingHeightsFromCollectionArray:
columnToWidthMapFromCollectionArray:
getFitHeightForRow:
setModelWidth:forColumn:
setModelHeight:forRow:
resetModelCache
resetModelCacheRange:
getModelHeightForRow:
getModelWidthForColumn:
getFitHeight:andModelHeight:forRow:
p_deleteColumnsStartingWith:upToColumn:
p_deleteRowsStartingWith:upToRow:
p_insertColumns:atColumn:
p_insertRows:atRow:
p_moveRowsFrom:toRow:
p_moveColumnsFrom:toColumn:
p_moveRowsUsingShuffleMapping:
resetFittingRowHeightsStartingWith:upToRow:
p_resetFittingHeightsForRange:
validateChangeDescriptors:tableInfo:numberOfRows:numberOfColumns:
validateRowsNeedingFittingInfo:validationRegion:layoutEngine:
willModifyIfNeeded:
willModifyIfPossible:
needsToBeArchived
setNeedsToBeArchived:
_rowHeights
_columnModelWidths
_needsToBeArchived
TB,N,V_needsToBeArchived
fetcherWithCoordinator:
initWithCoordinator:
p_configureReachabilityWithHost:
addRemoteDataInterest:
removeRemoteDataInterest:
enqueueRequestForKeys:
requestLaunched
requestCompleted
p_refreshSpecifiers
resumeUpdating
stopUpdating
dataKind
minimumTimeBetweenRequests
recommendedTimeBetweenRequests
recommendedTimeBetweenRequestsForWWAN
reachabilityCheckHost
canFetchKey:
fetchableKeysFromSet:
sendRequestForKeys:
allRequestedKeys
newlyRequestedKeys
serverReachability
setServerReachability:
internetReachability
setInternetReachability:
timer
setTimer:
lastRequestDate
setLastRequestDate:
lastFullRefreshDate
setLastFullRefreshDate:
offline
setOffline:
doFullRefresh
setDoFullRefresh:
earlyRefreshRequested
setEarlyRefreshRequested:
state
setState:
requestsInFlight
setRequestsInFlight:
_offline
_doFullRefresh
_earlyRefreshRequested
_coordinator
_allRequestedKeys
_newlyRequestedKeys
_serverReachability
_internetReachability
_timer
_lastRequestDate
_lastFullRefreshDate
_state
_requestsInFlight
T@"TSCERemoteDataSpecifierSet",R,N,V_allRequestedKeys
T@"TSCERemoteDataSpecifierSet",R,N,V_newlyRequestedKeys
T@"TSUNetworkReachability",&,N,V_serverReachability
T@"TSUNetworkReachability",&,N,V_internetReachability
T@"NSObject<OS_dispatch_source>",&,N,V_timer
T@"NSDate",&,N,V_lastRequestDate
T@"NSDate",&,N,V_lastFullRefreshDate
TB,V_offline
TB,V_doFullRefresh
TB,V_earlyRefreshRequested
Tq,V_state
Tq,V_requestsInFlight
T@"TSCERemoteDataCoordinator",R,W,N,V_coordinator
initWithCalcEngine:forMinion:options:
processInBackgroundIfNecessary
waitForAllPrecedentsToLoad
removeFormulasAt:inOwner:removeOutstandingReplaces:
_flushFormulasToRemoveWithDepTracker:startTime:timeout:
_flushFormulasToReplaceWithDepTracker:startTime:timeout:
_flushFormulasToResetWithDepTracker:startTime:timeout:
flushRemoveFormulas
flushReplaceFormulas
flushResetFormulas
flushAllFormulaChanges
flushFormulaChangesForSeconds:
_removeReplaceMutex
_options
_formulasToRemove
_formulasToReset
_formulasToReplace
_precedentLoadingQueue
_precedentLoadingGroup
_flushAllInProgress
_runningInBackground
_backgroundProcessingQueue
changeDescriptorWithType:cellRegion:
changeDescriptorWithType:cellRegion:strokeRegion:
changeDescriptorWithType:strokeRegion:
changeDescriptorWithType:cellID:cellRegion:strokeRegion:
changeDescriptorWithType:cellRegion:strokeRegion:beforeCount:afterCount:
changeDescriptorWithType:cellRegion:beforeCount:afterCount:
changeDescriptorWithType:
changeDescriptorWithType:cellID:cellRange:
changeDescriptorWithType:cellID:cellRange:strokeRange:
changeDescriptorWithType:cellID:strokeRange:
changeDescriptorWithType:cellRange:
changeDescriptorWithType:strokeRange:
changeDescriptorWithType:cellRange:strokeRange:
changeDescriptorWithType:referenceIdentifiers:
changeDescriptorWithType:shuffleMapping:
changeDescriptorWithAnnotationsRemovedForMerge:
enumerateChangeRecords:withType:block:
initWithChangeDescriptorType:cellRegion:cellID:strokeRegion:referenceIdentifiers:shuffleMapping:annotations:
initWithChangeDescriptorType:cellRegion:cellID:strokeRegion:referenceIdentifiers:shuffleMapping:
markAsProcessed
strokeRange
hasBeforeAfterCounts
referenceIdentifiers
setReferenceIdentifiers:
changeDescriptor
setChangeDescriptor:
setCellRegion:
strokeRegion
setStrokeRegion:
shuffleMapping
setShuffleMapping:
beforeCountValue
setBeforeCountValue:
afterCountValue
setAfterCountValue:
processedByLayoutEngine
setProcessedByLayoutEngine:
_processedByLayoutEngine
_changeDescriptor
_referenceIdentifiers
_cellRegion
_strokeRegion
_shuffleMapping
_beforeCountValue
_afterCountValue
Ti,N,V_changeDescriptor
T@"TSTCellRegion",&,N,V_cellRegion
T@"TSTCellRegion",&,N,V_strokeRegion
T@"NSHashTable",&,N,V_referenceIdentifiers
T@"TSKShuffleMapping",&,N,V_shuffleMapping
T@"NSSet",&,N,V_annotations
TQ,N,V_beforeCountValue
TQ,N,V_afterCountValue
TB,N,V_processedByLayoutEngine
verticalAlignment
padding
maxWidthForChildren
shouldHyphenate
forceWesternLineBreaking
T@"<TSWPStyleProviding>",R,W,N
initWithPadding:verticalAlignment:locale:shouldHyphenate:
setMaxWidthForChildren:
mPadding
mVerticalAlignment
mMaxWidthForChildren
mLocale
mShouldHyphenate
mStyleProvidingSource
Td,N,VmMaxWidthForChildren
T@"<TSWPStyleProviding>",W,N,VmStyleProvidingSource
T@"TSULocale",R,N,VmLocale
TB,R,N,VmShouldHyphenate
sortOrderWithRules:type:
sortOrderWithBaseColumn:direction:type:
initWithRules:type:
baseColumnIndices
sortOrderByChangingTypeTo:
sortOrderByAddingRule:
sortOrderByRemovingRuleAtIndex:
sortOrderByReplacingRuleAtIndex:withRule:
sortOrderByReplacingRulesWithRules:
sortOrderByRemovingBaseColumnIndices:
containsAnyRulesInBaseColumns:
rules
cachedIndexes
setCachedIndexes:
_cachedIndexes
T@"NSIndexSet",&,N,V_cachedIndexes
T@"NSArray",R,N,V_rules
Ti,R,N,V_type
initWithLayoutEngine:
initWithLayoutTask:
numberOfCellStates
addCellState:
enumerateCellStatesUsingBlock:
writeToLayoutEngineCaches:
cellStatesToLayout
_cellStatesToLayout
T@"TSTLayoutEngine",R,W,N,V_layoutEngine
T@"NSMutableArray",R,N,V_cellStatesToLayout
reapAccumulatedCellRegionWithTable:
_rowUIDToColumnUIDSetMap
drawableInfo
UIDForIndex:isRows:
UIDsForIndexes:isRows:
UIDsForRange:isRows:
mutableIndexesForUIDs:isRows:
cellContents
modelCellID
setModelCellID:
layoutMergeRange
setLayoutMergeRange:
setCellContents:
minSize
setMinSize:
maxSize
setMaxSize:
paddingInsets
setPaddingInsets:
setVerticalAlignment:
cellPropsRowHeight
setCellPropsRowHeight:
cellWraps
setCellWraps:
needWPColumn
setNeedWPColumn:
shouldFastPathMeasureFitWidth
setShouldFastPathMeasureFitWidth:
forDrawing
setForDrawing:
inDynamicLayout
setInDynamicLayout:
layoutCacheFlags
setLayoutCacheFlags:
sizeOfText
setSizeOfText:
keyVal
setKeyVal:
wpColumn
setWpColumn:
setPageNumber:
setPageCount:
_cellPropsRowHeight
_cellWraps
_needWPColumn
_shouldFastPathMeasureFitWidth
_forDrawing
_inDynamicLayout
_verticalAlignment
_layoutCacheFlags
_modelCellID
_cellContents
_maxWidthForChildren
_keyVal
_wpColumn
_pageNumber
_pageCount
_layoutMergeRange
_minSize
_maxSize
_sizeOfText
_paddingInsets
T{TSUCellCoord=ISBB},N,V_modelCellID
T@"TSTCell",C,N,V_cell
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_layoutMergeRange
T@,&,N,V_cellContents
T{CGSize=dd},N,V_minSize
T{CGSize=dd},N,V_maxSize
Td,N,V_maxWidthForChildren
T{UIEdgeInsets=dddd},N,V_paddingInsets
Ti,N,V_verticalAlignment
TB,N,V_cellPropsRowHeight
TB,N,V_cellWraps
TB,N,V_needWPColumn
TB,N,V_shouldFastPathMeasureFitWidth
TB,N,V_forDrawing
TB,N,V_inDynamicLayout
Ti,N,V_layoutCacheFlags
T{CGSize=dd},N,V_sizeOfText
T@"TSTLayoutContentCachedKey",&,N,V_keyVal
T@"TSWPColumn",&,N,V_wpColumn
TQ,N,V_pageNumber
TQ,N,V_pageCount
setExpressionNode:
initWithContext:expressionNode:
copyIntoContext:
copyIntoContext:bakeModes:
requestRedraw
setCachedImage:
isActive
setActive:
isSelected
setSelected:
isHighlighted
setHighlighted:
neverShowsMenu
setNeverShowsMenu:
cachedImage
cachedImageScreenScale
setCachedImageScreenScale:
inInvalidate
setInInvalidate:
_active
_selected
_highlighted
_neverShowsMenu
_inInvalidate
_cachedImage
_cachedImageScreenScale
TB,N,V_inInvalidate
T@"TSTExpressionNode",&,N,V_expressionNode
active
TB,N,GisActive,V_active
selected
TB,N,GisSelected,V_selected
highlighted
TB,N,GisHighlighted,V_highlighted
TB,N,GneverShowsMenu,V_neverShowsMenu
T^{CGImage=},N,V_cachedImage
Td,N,V_cachedImageScreenScale
initialGroupOrderForGroupBy:baseLevel:outAllUids:outBaseUids:outSummaryUids:
initWithContext:tableInfo:rowUids:columnUids:
initWithTableInfo:rowUids:columnUids:
copyWithContext:tableInfo:
_groupBy:
_numberOfLevels:
_maxLevel:
orderedUidsFromUids:forDimension:
orderedUidsForDimension:
targetGroupFromIndex:minSourceLevel:templateUID:forDimension:
minimumCategoryLevelInRange:forDimension:
sortedArrayFromArray:forDimension:
hasValidInfo
hasValidUidMap
orderForDimension:
setOrder:forDimension:
setTemporaryOrder:forDimension:
setOrderUsingViewOrderForDimension:
insertUids:beforeUid:forDimension:
removeUids:forDimension:
groupUidsGivenUids:selectedLevels:forDimension:
uidMap
setUidMap:
isRowOrderTemporary
setIsRowOrderTemporary:
isColumnOrderTemporary
setIsColumnOrderTemporary:
_isRowOrderTemporary
_isColumnOrderTemporary
T@"TSTColumnRowUIDMap",&,V_uidMap
TB,V_isRowOrderTemporary
TB,V_isColumnOrderTemporary
T@"TSTGroupBy",R,V_groupBy
setCompletionText:
setPrefixRange:
setEditingReferenceNode:
tokenText
makeTokenReflectChoice:
initWithContext:completionText:
p_removeCanvasReference
p_createCanvasReference
completionText
prefixRange
renderAsTokenType
editingReferenceNode
referenceColor
setReferenceColor:
canvasReferenceProvider
setCanvasReferenceProvider:
_renderAsTokenType
_completionText
_editingReferenceNode
_referenceColor
_canvasReferenceProvider
_prefixRange
T@"NSString",&,N,V_completionText
T{_NSRange=QQ},N,V_prefixRange
Ti,R,N,V_renderAsTokenType
T@"TSTReferenceNode",&,N,V_editingReferenceNode
T@"TSUColor",&,N,V_referenceColor
T@"<TSTCanvasReferenceProvider>",W,N,V_canvasReferenceProvider
tokenWithStroke:range:order:andPosition:
initWithStroke:range:order:andPosition:
position
setPosition:
_position
TQ,N,V_position
strokeLayer
strokeLayerAtIndex:
strokeLayerCount
startingStrokeOrder
strokeLayerModifiedByInsertingSpaceAt:
strokeLayerModifiedByRemovingRangeAt:
p_appendStroke:inRange:order:
p_setStroke:inRange:order:
p_invalidateRange:
p_mergeStrokeRunsAtPosition:
p_insertSpaceAtRange:
p_removeRange:
p_flattenStrokeOrder
columnOrRowIndex
setColumnOrRowIndex:
_strokeRuns
_columnOrRowIndex
TI,N,V_columnOrRowIndex
setStroke:inRange:order:
hasStrokeInRange:
insertSpaceAtRange:
removeRange:
swapSegmentAtIndex:withSegmentAtIndex:
moveRange:toIndex:
applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:
TI,D,N
keyValuePairCount
addDataField:withValue:
setMissingDataFieldAtIndex:
firstMissingDataField
enumerateDataKeyValuePairsUsingBlock:
aggregateIndex
setAggregateIndex:
aggregateFieldName
setAggregateFieldName:
setShowAsType:
_dataFields
_dataValues
_missingGroupingColumn
_aggregateIndex
_aggregateFieldName
T@"NSString",&,N,V_aggregateFieldName
TS,N,V_aggregateIndex
TC,N,V_showAsType
createFromVector:functionSpec:argumentIndex:evaluationContext:ignoreError:ignoreDuplicates:
taggedDecimalList
_taggedList
initWithStyle:andPropertyMap:
style
setStyle:
propertyMap
setPropertyMap:
_style
_propertyMap
T@"TSSStyle",&,N,V_style
T@"TSSPropertyMap",&,N,V_propertyMap
initWithStylesheet:
repairOrReplaceErrantStyle:
variationOfStyle:propertyMap:
stylesheet
setStylesheet:
repairOrReplaceMap
setRepairOrReplaceMap:
variationMap
setVariationMap:
_repairOrReplaceLock
_variationLock
_stylesheet
_repairOrReplaceMap
_variationMap
T@"TSSStylesheet",&,N,V_stylesheet
T@"NSMapTable",&,N,V_repairOrReplaceMap
T@"NSMapTable",&,N,V_variationMap
newAnimationWithLayout:andDeliveryStyle:
newAnimationWithLayout:andCellRange:
p_NumberOfCellBuilds:
p_NumberOfRowBuilds:
p_NumberOfColumnBuilds:
p_stageCountForProvider:withAnimationKind:
textureDeliveryStylesLocalized:
stageCountForTextureDeliveryStyle:tableProvider:
deliveryStyleSupportedForExport:
setStage:andFinal:
cellRangeCount
addCellRange:
clearCellRanges
enabled
drawTableName
drawTableBackground
drawCellBackground
drawCellContent
clipStrokes
drawStrokes
isHidingContentOfCellID:
stageCount
stage
final
showsTableChrome
setShowsTableChrome:
showsOverlayLayers
setShowsOverlayLayers:
expandBackgroundFill
setExpandBackgroundFill:
drawsBlackAndWhite
setDrawsBlackAndWhite:
mKind
mCellRanges
mCellRangeCount
mStageCount
mStage
mFinal
mByColumn
mByRow
mByCell
mByContent
mByCellRange
mByMissingCellRange
mReverse
mShowsTableChrome
mShowsOverlayLayers
mExpandBackgroundFill
mDrawsBlackAndWhite
mLayout
T@"TSTLayout",W,N,VmLayout
TQ,R,VmStageCount
TQ,R,VmStage
TB,R,VmFinal
TB,VmShowsTableChrome
TB,VmShowsOverlayLayers
TB,VmExpandBackgroundFill
TB,VmDrawsBlackAndWhite
initWithTextMeasurerBundle:
heightForString:width:outFitWidth:
widthForString:
textMeasurerBundle
setTextMeasurerBundle:
_dupContentEntryToHeightCache
_dupContentEntryToWidthCache
_textMeasurerBundle
T@"TSWPTextMeasurerBundle",&,N,V_textMeasurerBundle
p_didReceiveMemoryWarning:
p_didEnterBackground:
initWithName:
fontInfoForTextStyle:
fontInfoForTextStyle:withString:
resolvedTextStyleWithPropertyMap:
setCache:
propertyMapToTextStyleMap
setPropertyMapToTextStyleMap:
_resolvedTextStyleLock
_cache
_propertyMapToTextStyleMap
T@"NSMapTable",&,N,V_cache
T@"NSMapTable",&,N,V_propertyMapToTextStyleMap
_wordFragmentsList
_headerCoords
medianStringFromArray:
initWithHeaderNameMgr:context:
fragmentEntryForString:
createFragmentEntryForString:createIfMissingUsingPrecedentCoord:
splitTile
firstFragment
setFirstFragment:
lastFragment
setLastFragment:
_tileLock
_firstFragment
_lastFragment
_nameFragmentToEntry
_headerNameMgr
T@"NSString",&,N,V_firstFragment
T@"NSString",&,N,V_lastFragment
initWithHeaderNameMgr:limitToTableUID:
loadSubsetWithExactMatches:prefixMatches:
headerCellsExactlyMatching:
headerCellsMatchingPrefix:
limitedToTableUID
includesPrefixes
setIncludesPrefixes:
originalFullReferenceString
_hnm
_limitedToTableUID
_includesPrefixes
_stringsInHeaderCells
_prefixStringsInHeaderCells
_originalFullReferenceString
T{TSKUIDStruct=QQ},R,N,V_limitedToTableUID
TB,N,V_includesPrefixes
T@"NSString",R,N,V_originalFullReferenceString
initWithContext:calcEngine:
setup
namePrefixIndex
waitForQueueToDrain
addChangedTile:
isClosing
numberOfTiles
setEntry:forPrecedentCoord:
NRM_formulaOwnerUID
setNRM_formulaOwnerUID:
getNextPrecedentCoord:
usedPrecedentCoord:
reservedPrecedentForNameFragment:
reservePrecedent:forNameFragment:
integrateReservedPrecedents
wordFragmentsFromString:savePreserveFlags:
perTableEntryForTable:createIfMissing:
updateTrackedHeaders:checkForEmptyHeaders:
updateTrackedHeadersForDocumentLocaleChange:
updateTableUIDFrom:toTableUID:
unpackEntryAfterUnarchive:
fragmentEntryForNameFragmentPrecedent:
tileForEntry:
findTileForString:findClosest:
findTileForString:findClosest:foundAtOffset:
handleFullTile:
updateWithIndexingChunks:
updateText:atCellCoord:tableUID:
p_updateText:atCellCoord:tableUID:
p_updateWithWordFragments:atCellCoord:tableUID:
clearTextAtCellCoord:tableUID:
nameFragmentPrecedentsForReferenceString:
spanningRangeForHeaderCell:
stringInHeaderCell:
referenceNameIsUnique:forReference:contextTable:
anyRefForRangeForHeaderCell:usePreserveFlags:
p_willApplyCell:baseCellCoord:tableUID:
p_processWorkForTable:
subsetForReferenceName:limitToTable:includePrefixes:
headerCellsMatching:limitToTable:includePrefixes:
allHeaderCellRefsLimitedToTable:
baseHeaderColumnsForCell:
baseHeaderRowsForCell:
_weakCalcEngine
_headerNameMgrReadWriteLock
_nextPrecedentCoord
_nextPrecedentCoordLock
_allHeaderPerTablesPrecedent
_needsTileSplittingPrecedent
_nameFragmentTiles
_fragPrecedentToEntry
_fragPrecedentsUsedByCellRef
_perTableInfo
_headerPerTablePrecedentToTableUID
_namePrefixIndex
_reservedFragmentPrecedentsLock
_reservedFragmentPrecedents
_tilesToConsiderSplitting
_isClosing
_nrm_ownerUID
_whitespaceToBreakAt
cellDiffMapWithContext:
initWithContext:cellDiff:cellUIDList:
initWithContext:cellDiffArray:cellUIDList:uidBased:
addCellDiff:andCellUID:
addCellDiff:andCellID:
addCellDiff:andCellUID:avoidCopy:
addCellDiff:andCellID:avoidCopy:
addCellDiffMap:
addCellDiffs:atCellUIDs:
appendCellDiffMap:
pruneCellDiffMapAgainstTable:behavior:
pruneCellDiffMapAgainstTable:behavior:usingBlock:
uuidBasedCellDiffMapByTableInfo:
cellDiffMapByIntersectingUIDs:inRows:
cellDiffMapByRemovingRows:
cellDiffMapByRemovingColumns:
enumerateElementsUsingBlock:
enumerateCellIDElementsUsingBlock:
p_scanNSArrayOfDiffsForCellBorderChanges:
p_scanCellDiffArrayForCellBorderChanges:
p_scanNSArrayOfDiffsForSuppressCustomFormatHandlingProperty:
p_scanCellDiffArrayForSuppressCustomFormatHandlingProperty:
cellDiffArray
setCellDiffArray:
containsCellBorderChanges
setContainsCellBorderChanges:
containsSuppressCustomFormatHandlingProperty
setContainsSuppressCustomFormatHandlingProperty:
_containsCellBorderChanges
_containsSuppressCustomFormatHandlingProperty
_cellDiffArray
T@"TSTCellDiffArray",&,N,V_cellDiffArray
TB,N,V_containsCellBorderChanges
TB,N,V_containsSuppressCustomFormatHandlingProperty
transposedBodyRange
setTransposedBodyRange:
_transposedBodyRange
T{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}},N,V_transposedBodyRange
TI,N,V_numberOfFooterRows
initWithTableUIDMap:
tableUIDMap
originalTableUIDs
extendMappingWithTableUIDs:calcEngine:
tableWasAdded:
rollbackMappings:
_tableUIDMap
initWithGroupByUid:groupNodeUIDMap:
originalGroupNodeUIDs
groupNodeUIDMap
_groupNodeUIDMap
ruleWithBaseIndex:direction:
initWithBaseIndex:direction:
ruleByChangingBaseIndexTo:
baseIndex
_baseIndex
T{TSUModelColumnOrRowIndex=I},R,N,V_baseIndex
Ti,R,N,V_direction
ruleWithViewIndex:direction:
initWithViewIndex:direction:
viewIndex
_viewIndex
T{TSUViewColumnOrRowIndex=I},R,N,V_viewIndex
groupValueUidForTuple:appendingTuple:
initWithValueArray:
initWithTSCEValues:locale:
combinedCanonicalKeyStringAsUtf8
groupValueTupleByReplacingValue:atLevel:
groupValueTupleByAppendingValue:
groupValueTupleByAppendingTuple:
groupValueTupleByMergingTuple:toLevel:
groupValueTupleByRemovingValueAtLevel:
groupValueTupleByPromotingValueAtLevel:toLevel:
groupValueTupleByDemotingValueAtLevel:toLevel:
prefixTupleToLevel:
_groupValues
_groupValueUid
_combinedCanonicalKeyStringAsUtf8
cellIteratorWithFlags:searchFlags:
cellIteratorWithRegion:flags:searchFlags:
cellIteratorWithRegion:flags:searchFlags:clampingRange:
p_iterateCellsAndTerminateWithIterator:usingBlock:
iterateCellsWithFlags:searchFlags:usingBlock:
iterateCellsInRegion:flags:searchFlags:usingBlock:
iterateCellsInRegion:flags:searchFlags:clampingRange:usingBlock:
initWithRawString:
trimmedStringWithPreserveFlag:
trimmedString
quoteStringIfNeeded
wasQuoted
setWasQuoted:
hasPreserveFlag
setHasPreserveFlag:
rawString
setRawString:
_wasQuoted
_hasPreserveFlag
_rawString
TB,N,V_wasQuoted
TB,N,V_hasPreserveFlag
T@"NSString",&,N,V_rawString
addRefPathWord:
removeRefPathWordAtIndex:
numWords
wordAtIndex:
trimmedStringStartingAtWord:withPreserveFlags:
trimmedStringStartingAtWord:
_refPathWords
isSingleQuote:
isLeftParen:
isRightParen:
refPathInterestingCharactersSet
initWithReferenceString:
initWithComponents:aggregateFunction:
splitRefPath:
addComponent:
numComponents
componentAtIndex:
localizedBlankGroupName
setLocalizedBlankGroupName:
localizedErrorGroupName
setLocalizedErrorGroupName:
localizedTrueGroupName
setLocalizedTrueGroupName:
localizedFalseGroupName
setLocalizedFalseGroupName:
localizedTrueGroupNameForColumn
setLocalizedTrueGroupNameForColumn:
localizedFalseGroupNameForColumn
setLocalizedFalseGroupNameForColumn:
forceSplitting
setForceSplitting:
_quotedComponents
_forceSplitting
_localizedBlankGroupName
_localizedErrorGroupName
_localizedTrueGroupName
_localizedFalseGroupName
_localizedTrueGroupNameForColumn
_localizedFalseGroupNameForColumn
T@"NSString",&,N,V_localizedBlankGroupName
T@"NSString",&,N,V_localizedErrorGroupName
T@"NSString",&,N,V_localizedTrueGroupName
T@"NSString",&,N,V_localizedFalseGroupName
T@"NSString",&,N,V_localizedTrueGroupNameForColumn
T@"NSString",&,N,V_localizedFalseGroupNameForColumn
TB,N,V_forceSplitting
addCellRef:forUuid:
removeCellRef:forUuid:
removeCellRef:
removeAllCellRefsInOwner:
getCellRefs:referringToUuids:
initFromArchive:dependencyTracker:
tooManyCellRefsFor31FormatArchive
upgradeForOwners:
encodeToArchive:alsoSave31Format:archiver:
_cellRefsByUuid
_uuidsByCellRef
imageForScale:checked:outDrawingScale:
frameWithViewScale:contentFrame:
frameWithViewScale:contentFrame:checked:outCheckboxImage:outCheckboxSize:
renderCheckbox:viewScale:intoContext:rect:color:
addRange:height:paddingInsets:isCheckbox:
enumerateMergeRangesUsingBlock:
_set
initWithString:width:height:paragraphStyle:cellWraps:valueType:paddingInsets:verticalAlignment:writingDirection:naturalAlignment:styleProvidingSource:
isEqualToLayoutContentCachedKey:
width
height
paragraphStyle
naturalAlignment
_writingDirection
_width
_height
_paragraphStyle
_naturalAlignment
Td,R,N,V_width
Td,R,N,V_height
T@"TSWPParagraphStyle",R,N,V_paragraphStyle
TB,R,N,V_cellWraps
TC,R,N,V_valueType
T{UIEdgeInsets=dddd},R,N,V_paddingInsets
Ti,R,N,V_verticalAlignment
Ti,R,N,V_writingDirection
Tq,R,N,V_naturalAlignment
T@"<TSWPStyleProviding>",R,W,N,V_styleProvidingSource
initWithLayoutEngine:columnRegion:rowRegion:
initWithLayoutEngine:columnRegion:
initWithLayoutEngine:rowRegion:
initWithDynamicResizeInfo:
hasHeightForRow:
hasWidthForColumn:
getRowInitialHeight:
getColumnInitialWidth:
getRowHeight:
getColumnWidth:
getRowHeightResize:
getColumnWidthResize:
applyResizeHeightFactor:
applyResizeWidthFactor:
captureNewMinimumRowHeights:
totalCapturedRowHeights
totalCapturedColumnWidths
totalCurrentRowHeights
totalCurrentColumnWidths
totalMinimumRowHeights
totalMinimumColumnWidths
p_captureRowColumnInformation:columnRegion:rowRegion:
getMinimumRowHeight:
getMinimumColumnWidth:
applyRowTotalHeight:
applyColumnTotalWidth:
capturedTableSize
enumerateColumnWidthsUsingBlock:
enumerateRowHeightsUsingBlock:
startRowIndex
numberOfResizableRows
capturedRowHeightTotal
startColumnIndex
numberOfResizableColumns
capturedColumnWidthTotal
rowRegion
setRowRegion:
columnRegion
setColumnRegion:
_capturedRowHeights
_currentRowHeights
_minimumRowHeights
_capturedColumnWidths
_currentColumnWidths
_minimumColumnWidths
_valid
_startColumnIndex
_startRowIndex
_numberOfResizableRows
_numberOfResizableColumns
_capturedRowHeightTotal
_capturedColumnWidthTotal
_rowRegion
_columnRegion
TB,R,N,V_valid
Ti,R,N,V_tableRowsBehavior
TI,R,N,V_startRowIndex
TI,R,N,V_numberOfRows
TI,R,N,V_numberOfResizableRows
Td,R,N,V_capturedRowHeightTotal
TS,R,N,V_startColumnIndex
TI,R,N,V_numberOfColumns
TI,R,N,V_numberOfResizableColumns
Td,R,N,V_capturedColumnWidthTotal
T@"TSTCellRegion",&,N,V_rowRegion
T@"TSTCellRegion",&,N,V_columnRegion
isConnected
_originalUIDMap
_originalVersionCounter
_copiedUIDMap
initWithInfo:region:flags:searchMask:
tempSummaryCell
checkCell:searchFlags:
info
searchMask
setSearchMask:
baseDataStore
baseDataListCache
baseMap
viewMap
summaryMap
curRowIndex
setCurRowIndex:
isSummaryRow
setIsSummaryRow:
isLabelRow
setIsLabelRow:
setGroupLevel:
setUuid:
baseRowIndex
setBaseRowIndex:
baseTile
setBaseTile:
baseTileRange
setBaseTileRange:
baseRow
setBaseRow:
terminated
setTerminated:
populatedColumnsForGroupLevel1
setPopulatedColumnsForGroupLevel1:
populatedColumnsForGroupLevel2
setPopulatedColumnsForGroupLevel2:
populatedColumnsForGroupLevel3
setPopulatedColumnsForGroupLevel3:
populatedColumnsForGroupLevel4
setPopulatedColumnsForGroupLevel4:
populatedColumnsForGroupLevel5
setPopulatedColumnsForGroupLevel5:
viewColumnIndexesInCurrentRow
setViewColumnIndexesInCurrentRow:
_mapFromViewToBaseColumnInCurrentRow
_tempSummaryCell
_isSummaryRow
_isLabelRow
_terminated
_categoryColumnIndex
_curRowIndex
_baseRowIndex
_info
_searchMask
_baseDataStore
_baseDataListCache
_baseMap
_viewMap
_summaryMap
_baseTile
_baseRow
_populatedColumnsForGroupLevel1
_populatedColumnsForGroupLevel2
_populatedColumnsForGroupLevel3
_populatedColumnsForGroupLevel4
_populatedColumnsForGroupLevel5
_viewColumnIndexesInCurrentRow
_uuid
_baseTileRange
T@"TSTGroupBy",R,W,N,V_groupBy
T@"TSTCategoryTranslator",R,N,V_translator
T@"TSTTableDataStore",R,W,N,V_baseDataStore
T@"TSTTableDataListCache",R,N,V_baseDataListCache
T@"TSTColumnRowUIDMap",R,W,N,V_baseMap
T@"TSTColumnRowUIDMap",R,W,N,V_viewMap
T@"TSTSummaryCellVendor",R,W,N,V_summaryCellVendor
T@"TSTColumnRowUIDMap",R,W,N,V_summaryMap
TQ,N,V_searchMask
TI,N,V_curRowIndex
TS,R,N,V_categoryColumnIndex
TB,N,V_isSummaryRow
TB,N,V_isLabelRow
TC,N,V_groupLevel
T{TSKUIDStruct=QQ},N,V_uuid
TI,N,V_baseRowIndex
T@"TSTTableTile",&,N,V_baseTile
T{_NSRange=QQ},N,V_baseTileRange
T@"TSTTableTileRowInfo",&,N,V_baseRow
T@"TSTCell",R,N,V_cell
TB,N,V_terminated
T@"NSIndexSet",&,N,V_populatedColumnsForGroupLevel1
T@"NSIndexSet",&,N,V_populatedColumnsForGroupLevel2
T@"NSIndexSet",&,N,V_populatedColumnsForGroupLevel3
T@"NSIndexSet",&,N,V_populatedColumnsForGroupLevel4
T@"NSIndexSet",&,N,V_populatedColumnsForGroupLevel5
T@"NSIndexSet",&,N,V_viewColumnIndexesInCurrentRow
T@"TSTTableInfo",R,N,V_info
isEqualToTSCEFormulaOwnerWrapper:
Tr^{TSKUIDStruct=QQ},R,N
resetDependenciesForCell:
UIDSetForRange:isRows:
tableModelForTableUID:withCalcEngine:
changesWithPageNumber
hyperlinkCellID
setHyperlinkCellID:
nonUndoableAppendStoragePreservingEmphasis:
changesWithPageCount
hasAttachmentsThatChangeWithPageNumberOrPageCount
T{TSUCellCoord=ISBB},D,N
initWithTableUID:ownerUID:
Tr^{TSKUIDStruct=QQ},N,V_tableUID
Tr^{TSKUIDStruct=QQ},N,V_ownerUID
T@"TSTTableInfo",W,N
payloadWithStorage:
storage
setStorage:
initWithStorage:
initWithContext:storage:
_storage
T@"TSWPStorage",&,N,V_storage
initWithTract:tableUID:preserveFlags:columnGroupLevel:rowGroupLevel:aggrIndexLevel:
initWithTract:tableUID:preserveFlags:
setTract:
isValidOrSpanning
isFixedAtZeroRef
tract
aggregateIndexLevel
setAggregateIndexLevel:
columnGroupLevel
setColumnGroupLevel:
rowGroupLevel
setRowGroupLevel:
_tract
_aggregateIndexLevel
_columnGroupLevel
_rowGroupLevel
T@"TSCEUndoTract",&,N,V_tract
TS,N,V_aggregateIndexLevel
TC,N,V_columnGroupLevel
TC,N,V_rowGroupLevel
canBeVendorStorageUid:
setTableInfoForGSSP:
enumerateCellsUsingBlock:
cellSpecForAggregateType:forColumnUID:atGroupLevel:
p_resolveCellUIDToVendorCellUID:
cellAtCellUID:
removeCellsInColumnUid:
cellMapForWildcardCells
runChange:withSummaryCellMap:migrationHelper:
upgradingToSubOwnerUIDs
setUpgradingToSubOwnerUIDs:
cellUIDMap
hasCustomFormatsToPaste
setHasCustomFormatsToPaste:
_upgradingToSubOwnerUIDs
_hasCustomFormatsToPaste
_cellUIDMap
T^v,R,N,V_cellUIDMap
TB,N,V_hasCustomFormatsToPaste
T@"TSTTableInfo",R,W,N,V_tableInfo
TB,N,V_upgradingToSubOwnerUIDs
initWithTimeout:
timeoutInterval
blockingIdentifier
_timeoutInterval
_blockingIdentifier
Td,R,V_timeoutInterval
T@"NSString",R,V_blockingIdentifier
ruleWithFormulaPredicate:
ruleWhereValuesInTable:inBaseColumn:matchCell:
initWithFormulaPredicate:
initRuleWhereValuesInTable:andDataList:inBaseColumn:matchCell:
copyByRewritingToUidFormWithTableInfo:
copyByRewritingToGeometricFormWithTableInfo:containsBadRef:
copyByRewritingFromTableModel:toTableModel:
needsThreshold
isUniquesOrDuplicates
setDoesNotNeedFormulaRewriteForImport
needsFormulaRewriteForImport
matchesRow:withFormulaTableUID:withCalculationEngine:
baseColumnIndexForFilterRuleInTableModel:
matchesCell:
encodeToPrePivotArchive:archiver:
initFromPrePivotArchive:
predicate
setPredicate:
doesNotNeedFormulaRewriteForImport
setDoesNotNeedFormulaRewriteForImport:
_doesNotNeedFormulaRewriteForImport
_predicate
T@"TSTFormulaPredicate",&,N,V_predicate
TB,N,V_doesNotNeedFormulaRewriteForImport
initWithFilterRules:type:context:
initWithNotBlankColumnGroupsWithContext:withPivotTable:
initWithNotBlankRowGroupsWithContext:withPivotTable:
copyByRewritingFilterRulesToUidFormWithContext:withTableInfo:
copyByRewritingFilterRulesToGeometricFormWithContext:withTableInfo:
copyByRewritingFilterRulesWithContext:fromTableModel:toTableModel:
p_downgradedFilterRuleForListItem:fromPredicate:
downgradeFilterSetForBackwardCompatWithLocale:
containsFilterRulesInUIDForm
p_thresholdComparisonMatchesFilter:withPredicateType:
rowIsShown:withHiddenStateExtent:withCalcEngine:
ruleAtAbsoluteIndex:
ruleInFilter:atIndex:
filterAtIndex:inTable:
canAddRules
filterSetType
newFilterIndex
filterCount
removeRulesWithAbsoluteIndices:
removeRulesWithIndices:inFilter:
removeRulesForBaseColumnIndices:withTableInfo:
p_addRules:atRuleIndices:inFilter:isNew:
addRules:inFilter:
replaceRule:atRuleIndex:inFilter:
replaceRuleAtAbsoluteIndex:withRule:
enumerateFiltersInTable:usingBlock:
enumerateFilterIndicesInTable:usingBlock:
enumerateFiltersForColumn:withTable:usingBlock:
enumerateRulesInFilterIndex:usingBlock:
filterIndicesForBaseColumn:inTable:
firstFilterIndexForBaseColumn:inTable:
ruleIndexInFilter:matchingCell:
numberOfRulesInFilter:
absoluteRuleIndicesForColumn:inTable:
baseColumnIndicesForRulesInTable:
viewColumnIndicesForRulesInTable:
preventsRowInsertion
setNeedsFormulaRewriteForImport:
setRules:
downgradedForPrePivot
setDowngradedForPrePivot:
_needsFormulaRewriteForImport
_filterOffsets
_downgradedForPrePivot
T@"NSArray",&,N,V_rules
Ti,N
TB,N,V_needsFormulaRewriteForImport
TB,N,V_downgradedForPrePivot
groupByRootUid
initWithGroupByUID:relGroupUID:absGroupUid:columnUid:aggType:groupLevel:aggrIndexLevel:preserveFlags:relativeColumn:options:
initWithGroupByUID:relGroupUID:absGroupUid:columnUid:aggType:groupLevel:aggrIndexLevel:preserveFlags:
initWithGroupByUID:absGroupUid:columnUid:aggType:groupLevel:aggrIndexLevel:
initWithGroupByUID:absGroupUid:columnUid:aggType:groupLevel:
pivotTableUid
refersToPivotTable
refersToPivotTableRows
refersToPivotTableColumns
showAggregateName
setShowAggregateName:
copyAndReplaceGroupUIDs:
setAsAbsoluteWithGroupUid:
setAsRelativeWithGroupUid:
isBadRef
convertToBadRef
restoreFromBadRef
relativeGroupUid
setRelativeGroupUid:
absoluteGroupUid
setAbsoluteGroupUid:
setColumnUid:
aggrIndexLevel
setAggrIndexLevel:
relativeColumn
setRelativeColumn:
options
setOptions:
_relativeGroupUid
_absoluteGroupUid
_aggType
_aggrIndexLevel
_relativeColumn
T{TSKUIDStruct=QQ},N,V_relativeGroupUid
T{TSKUIDStruct=QQ},N,V_absoluteGroupUid
T{TSKUIDStruct=QQ},N,V_columnUid
TC,N,V_aggType
TS,N,V_aggrIndexLevel
Ts,N,V_relativeColumn
TC,N,V_options
defaultPredicateForType:argumentCellRef:hostCell:
defaultPredicateForType:argumentCellReference:hostCell:
isThresholdNeededForType:
predArg1
predArg2
p_isEqualForNonFormulaItems:
isEqualForInspector:atHostCoordinate:
initWithPredicateType:arg0:arg1:arg2:qualifier1:qualifier2:forConditionalStyle:
initWithPredicateType:arg1:arg2:qualifier1:qualifier2:argumentCellRef:hostCell:forConditionalStyle:
initWithPredicateType:arg1:arg2:qualifier1:qualifier2:argumentCellReference:hostCell:forConditionalStyle:
initWithPredicateType:arg1:arg2:qualifier1:qualifier2:argumentCellRef:hostCell:
p_creatorForPeriodBoundaryWithScale:direction:offset:argIndex:earlierBound:isCalPers:
initWithLiteralDateType:date1:date2:number1:number2:qualifier1:qualifier2:argumentCellRef:hostCell:forConditionalStyle:
initWithLiteralDateType:date1:date2:number1:number2:qualifier1:qualifier2:argumentCellRef:hostCell:
initWithLiteralNumberType:number1:number2:qualifier:argumentCellRef:hostCell:
initWithLiteralDurationType:duration1:durationUnits1:duration2:durationUnits2:qualifier:argumentCellRef:hostCell:
initWithLiteralTextType:string:argumentCellRef:hostCell:
useColumnRefForArg0
recreateFormula
copyToUidFormWithRewriteContext:
copyToGeometricFormWithRewriteContext:
copyToUidFormForHiddenRowsWithTableInfo:
copyToGeometricFormForHiddenRowsWithTableInfo:containsBadRef:
copyToUidFormForConditionalStylesWithTableInfo:containingCell:preserveHostCell:
setHostCell:hostColumnUID:hostRowUID:
getPrecedents:calcEngine:hostOwnerUID:hostCellID:
p_argTypeForPredArg:argNum:calculationEngine:hostCell:
p_testDataTypesForArg0:arg1:arg2:predShouldReturn:
evaluateAtCellID:onOwnerUID:calcEngine:
predicateType
qualifier1
qualifier2
p_setPredicateType:
p_setQualifier1:
p_setQualifier2:
setArgumentAt:withPredArg:
predArg0Type
predArg1Type
predArg2Type
numberParam1
numberParam2
stringParam1
dateTimeParam1
dateTimeParam2
durationParam1
durationParam2
crossTableRefParam1
crossTableRefParam2
dataList1
predicateArg1atBaseHostCoord:calcEngine:
predicateArg2atBaseHostCoord:calcEngine:
p_populateMembersFromFormula
copyByRemappingOwnerUIDsWithMap:calcEngine:error:
remapOwnerUIDsWithMap:calcEngine:error:
rewriteNumberToDurationForSageImport:durationUnitLargest:
rewriteFormulaWithBlock:
copyByRemappingHostCellAgnosticOwnerUIDsWithMap:calcEngine:ownerUID:error:
copyByConvertingBaseToChrome:inOwner:inCellCoordinate:
copyByConvertingChromeToBase:inOwner:inCellCoordinate:
copyByRewritingWithSpec:inOwner:inCellCoordinate:
copyByOffsettingRelativeReferencesWithOffset:
copyByUpgradingToLinkedRefForTable:hostCell:
copyByUpdatingLinkedTable:hostCell:
iterateFormulasWithContext:shouldStop:block:
upgradeTopAndBottom
backwardCompatiblePrePivot
canDowngradeForPrePivotFormat
downgradeForPrePivotFormatForLocale:
encodeToPrePivotArchive:archiver:encodingForSOS:
expectedArgTypeForPredicateType:firstArg:
p_smokeTestThePredicate
predArg0
setPredArg0:
setPredArg1:
setPredArg2:
forConditionalStyle
setForConditionalStyle:
_formula
_predicateType
_qualifier1
_qualifier2
_argIndex0
_argIndex1
_argIndex2
_predArg0
_predArg1
_predArg2
_forConditionalStyle
T{TSCEUidCellRef={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}{TSKUIDStruct=QQ}},N,V_hostCellRef
TC,R,N,V_predicateType
TC,R,N,V_qualifier1
TC,R,N,V_qualifier2
TB,N,V_forConditionalStyle
T@"TSTFormulaPredArg",&,N,V_predArg0
T@"TSTFormulaPredArg",&,N,V_predArg1
T@"TSTFormulaPredArg",&,N,V_predArg2
mStrokeSelection
T@"TSKSelection",&,N,VmStrokeSelection
badgeWithType:color:viewScale:frame:
p_drawCellErrorIndicatorInContext:
p_drawCellCommentBadgeInContext:
p_drawCellWarningBadgeInContext:
drawInContext:
badgeType
setBadgeType:
color
setColor:
setFrame:
_badgeType
_color
_frame
Ti,N,V_badgeType
T@"TSUColor",&,N,V_color
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_frame
tsce_singleQuoteCharacterSet
tsce_characterSetRequiringSingleQuotes
tsce_periodCharacterSet
tsce_internationalWhitespaceCharacterSet
tsce_internationalWhitespaceAndNewlineCharacterSet
tsce_internationalColonCharacterSet
tsce_dollarSignCharacterSet
tsce_listDelimiterCharacterSet
regionFromRange:
regionFromCellCoordSet:
regionFromCellMap:withTableInfo:
regionFromCellMap:withTableInfo:passingTest:
regionFromCellDiffMap:withTableInfo:
regionFromCellIDVector:
regionFromCellUIDVector:withTableInfo:
regionFromCellRangeVector:
regionFromOverlappingCellRangeVector:
regionFromMergeList:
regionFromModelMergeList:
regionFromMergeActionArray:withTableInfo:
region:addingRange:
region:subtractingRange:
region:subtractingRowIndexes:
region:subtractingColumnIndexes:
region:intersectingRange:
unionEveryRangeInRegion:withRange:
region:addingRegion:
region:subtractingRegion:
region:intersectingRegion:
invalidRegion
regionFillingColumnsFromRegion:
regionFillingRowsFromRegion:
regionFromRowIndices:columnRange:
regionFromRowIndices:
regionFromColumnIndices:rowRange:
regionFromColumnIndices:
regionFromColumnIndexes:rowIndexes:
regionFromPropertyListRepresentation:
combineNonOverlappingCellRanges:addingOverlappingCellRanges:
regionByAddingRange:
regionBySubtractingRange:
regionBySubtractingRowIndexes:
regionBySubtractingColumnIndexes:
regionByIntersectingRange:
regionByUnioningEveryRangeInRegionWithRange:
regionByAddingRegion:
regionBySubtractingRegion:
regionByIntersectingRegion:
regionOffsetBy:
regionByRemovingRows:
regionByRemovingColumns:
regionByCollapsingRangesForRemovedRows:
regionByCollapsingRangesForRemovedColumns:
regionByIntersectingRowIndices:
regionByIntersectingColumnIndices:
regionByAddingRows:
regionByAddingColumns:
regionByApplyingRowMapping:
regionByMovingRowsFromRange:toIndex:
regionByMovingColumnsFromRange:toIndex:
regionUpToColumnIndex:
regionUpToColumnIndexRtoL:maxColumnIndex:
regionAfterColumnIndex:
regionAfterColumnIndexRtoL:
regionUpToRowIndex:
regionAfterRowIndex:
regionByTrimmingAroundRowIndices:
regionByTrimmingAroundColumnIndices:
prunedCellRegionAgainstTable:behavior:
prunedCellRegionAgainstTable:behavior:usingBlock:
boundingTopLeftCellID
boundingBottomRightCellID
isRectangle
propertyListRepresentation
asCellCoordSet
largestRangeContainingCellID:
containsCellID:
containsCellRegion:
equalsCellRegion:
equalsCellRange:
partiallyIntersectsCellRange:
intersectsCellRegion:
intersectsColumn:
intersectsRow:
isSingleCellWideOrHigh:
numberOfIntersectingColumns
numberOfIntersectingRows
intersectingColumnsInRow:
p_copyFromRegion:
p_copy
suitableAnchor
suitableCursor
newIterator
newRightToLeftIterator
newBottomToTopIterator
enumerateCellIDsUsingBlock:
enumerateCellRangesUsingBlock:
enumerateColumnsUsingBlock:
enumerateColumnsInReverseUsingBlock:
enumerateRowsUsingBlock:
enumerateRowsInReverseUsingBlock:
enumerateInDirection:usingBlock:
enumerateRowRangesUsingBlock:
enumerateRowRangesInReverseUsingBlock:
enumerateColumnRangesUsingBlock:
enumerateColumnRangesInReverseUsingBlock:
enumerateRowsIntersectingCellRange:usingBlock:
enumerateMissingRowsIntersectingCellRange:usingBlock:
enumerateColumnsIntersectingCellRange:usingBlock:
enumerateMissingColumnsIntersectingCellRange:usingBlock:
enumerateGridColumnsUsingBlock:
enumerateGridRowsUsingBlock:
p_insertRangeIntoRegion:
p_calculateAncillaryInformation
cellRanges
boundingCellRange
setBoundingCellRange:
setCellCount:
firstCellID
setFirstCellID:
lastCellID
setLastCellID:
intersectingColumnsIndexSet
setIntersectingColumnsIndexSet:
intersectingRowsIndexSet
setIntersectingRowsIndexSet:
_cellRanges
_boundingCellRange
_intersectingColumnsIndexSet
_intersectingRowsIndexSet
_firstCellID
_lastCellID
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_boundingCellRange
TQ,N,V_cellCount
T@"NSIndexSet",&,N,V_intersectingColumnsIndexSet
T@"NSIndexSet",&,N,V_intersectingRowsIndexSet
T{TSUCellCoord=ISBB},N,V_firstCellID
T{TSUCellCoord=ISBB},N,V_lastCellID
Tr^v,R,N,V_cellRanges
boundingModelCellRect
containsModelCellCoord:
containsModelCellRect:
intersectsModelCellRect:
partiallyIntersectsModelCellRect:
regionByAddingModelCellRect:
regionBySubtractingModelCellRect:
regionByAddingModelCellRegion:
regionBySubtractingModelCellRegion:
enumerateModelCellRectsUsingBlock:
modelCellRanges
regionFromModelCellRect:
T{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}},R,N
boundingViewCellRect
regionByAddingViewCellRect:
regionBySubtractingViewCellRect:
regionByAddingViewCellRegion:
regionBySubtractingViewCellRegion:
enumerateViewCellRectsUsingBlock:
regionFromViewCellRect:
regionFromViewCellRectVector:
T{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}},R,N
p_addRange:calculateAncillaryInfo:
initWithCellRegion:
mCellRangeSet
mCellID
mBoundingCellRange
fillCellRangeRowMajorSet:leftToRight:
fillCellRangeColMajorSet:topToBottom:
stringForPurpose:
saveToArchive:tsuColumnUids:tsuRowUids:purpose:isRangeRef:preserveRectangularRange:
saveToArchive:columnUids:rowUids:purpose:isRangeRef:preserveRectangularRange:
p_remapUidVector:usingUidMap:clearIfMissing:
initWithPurpose:
initWithColumnUid:rowUid:purpose:
initWithColumnUids:rowUids:purpose:
remapUsingUidMap:
remapUsingColumnUidMap:rowUidMap:clearIfMissing:
columnUids
rowUids
purpose
setPurpose:
isRangeRef
setIsRangeRef:
preserveRectangularRange
setPreserveRectangularRange:
_columnUids
_rowUids
_purpose
_isRangeRef
_preserveRectangularRange
TB,N,V_isRangeRef
TB,N,V_preserveRectangularRange
TC,N,V_purpose
T^v,R,V_columnUids
T^v,R,V_rowUids
appendColumnUid:rowUid:
countByEnumeratingWithState:objects:count:
tractCount
includedUidsTract
excludedUidsTract
preMergeUidTract
preMoveRegionUidTract
activeUidTract
removedByMoveUidTract
addToIncludedUidsTractColumnUid:rowUid:
addToIncludedUidsTractColumnUids:rowUids:isRangeRef:preserveRectangularRange:
addToIncludedUidsTractColumnUids:rowUids:
addToExcludedUidsTractColumnUids:
addToExcludedUidsTractRowUids:
addToExcludedTractUids:isRows:
removeFromExcludedUidsTractColumnUidsSet:
removeFromExcludedUidsTractRowUidsSet:
removeFromExcludedUidsTractColumnUids:
removeFromExcludedUidsTractRowUids:
addTractAtFront:
firstTractWithPurpose:
dropTract:
appendUidTract:
uidTractAtIndex:
pruneMergeUidTractsAtAndAboveIndex:
_tracts
initAsFullTupleForColumnHeaderUid:rowHeaderUid:aggregateRuleUid:flatteningDimension:
addRowColumnRuleValuePair:valueUid:
hasFullTupleInformation
columnHeaderUid
rowHeaderUid
aggregateRuleUid
enumerateRowColumnRuleValuePairsUsingBlock:
stockWithAttributes:
stockFromArchive:
kNilStockAttributeString
nativeLocaleIdentifier
initWithSymbol:
initWithAttributes:
valueForAttribute:
valueForAttribute:forLocale:
dateString
p_setFormattedAttr:fromArray:
abbreviatedNumberForAttribute:atLocale:
p_populateAttributesFromArray:
attributes
_attributes
T@"TSUSparseArray",R,N,V_attributes
initWithOwnerId:tileColumnBegin:tileRowBegin:context:
cppTile
numCellRecords
unpackAfterUnarchiveForCellDependencies:
internalOwnerID
setInternalOwnerID:
_internalOwnerID
_tileColumnBegin
_tileRowBegin
_tile
_unarchivedCellRecords
TS,N,V_internalOwnerID
columnUIDsForBaseColumnIndexes:
rowUIDsForBaseRowIndexes:
columnUIDsForViewColumnIndexes:
rowUIDsForViewRowIndexes:
mutableBaseColumnIndexesForUIDs:
mutableBaseRowIndexesForUIDs:
baseColumnIndexesForUIDs:
baseRowIndexesForUIDs:
viewColumnIndexesForUIDs:
viewRowIndexesForUIDs:
viewColumnGridIndexesForBaseColumnGridIndexes:
columnUIDForBaseColumnIndex:
rowUIDForBaseRowIndex:
baseColumnIndexForColumnUID:
baseRowIndexForRowUID:
viewColumnIndexForColumnUID:
viewRowIndexForRowUID:
columnUIDForViewColumnIndex:
rowUIDForViewRowIndex:
objectLocale
bodyBoundingRangeForBaseLevel
translatedCellRangeName:usedSymbolicName:
metadataForRowIndex:
heightOfRowAtIndex:
widthOfColumnAtIndex:
postCommentNotificationForStorage:atViewCellCoord:notificationKey:
baseCellCoordForCellUID:
cellUIDforBaseCellCoord:
cellUIDForSummaryCellCoord:
viewCellCoordForCellUID:
baseCellRegionForUIDRange:
baseCellRegionForViewCellRect:
baseCellRegionForViewCellRegion:
viewCellRegionForBaseCellRect:
viewCellRegionForBaseCellRegion:
addReceiverToGroupBy:
cellAtGroupLevel:columnUID:
didMakeGroupingChangesInRowUIDs:
checkMapsAndAssert:
forceGroupingChangeReset
areMapsStale
_baseTableModel
T{TSUViewRowIndex=I},R,N
T{TSUViewColumnIndex=S},R,N
T{TSUViewRowIndex=I},N
T{TSUViewColumnIndex=S},N
T@"TSTTableModel",R,N,V_baseTableModel
T@"TSTColumnRowUIDMap",R,N
specWithFunctionName:minArgs:maxArgs:repeatingGroupSize:isOperator:shipVersion:arguments:functionIndex:
loadSpecDictionary
functionSpecForFunctionIndex:
englishFunctionNameFromFunctionIndex:
functionSpecForFunctionName:
isModeEnabled:functionIndex:
unsupportedFunctionNameForLocale:
p_ValidateArguments
initWithFunctionName:minArgs:maxArgs:repeatingGroupSize:isOperator:shipVersion:arguments:functionIndex:
localizedFunctionNameForLocale:
localizedToolTipStringForLocale:
displayStringForLocale:
arguments
loadRepeatingArguments
argumentSpecForIndex:
accessorModeForArgumentIndex:
preferredTypeForArgumentIndex:
nativeSyntaxStringForArgument:
modeNumberForLocalizedString:argumentSpecIndex:attributeMax:locale:
isOperator
versionShippedIn
repeatingGroupSize
_functionName
_minArguments
_maxArguments
_repeatingGroupSize
_arguments
_repeatingArguments
_isOperator
_shipVersion
TS,R,V_functionIndex
Tr^v,R
Ts,R,N,V_minArguments
Ts,R,N,V_maxArguments
TB,R,N,V_isOperator
Ti,R,N,V_shipVersion
Ts,R,N,V_repeatingGroupSize
initWithMergedStack:
strokeAtIndex:
mergedStrokes
setMergedStrokes:
_mergedStrokes
T@"TSTStrokeLayerMergedStack",&,N,V_mergedStrokes
addCellRef:usingCategoryRef:
removeCellRef:usingCategoryRef:
getCellRefs:referringToGroupNodes:inGroupBy:
getCellRefs:forGroupRootInGroupBy:
getCellRefs:inGroupBy:
getCellRefs:inGroupBys:
upgradeGroupByUid:toUid:
_cellRefsByGroupNodeByGroupBy
_groupNodesByCellRef
initWithContext:identifier:firstIndex:lastIndex:
componentCount
identifierComponents
addIdentifierComponent:
lastIdentifierComponent
fullIdentifier
lastComponentWithWhitespaceAppended
appendToLastComponent:
_hidingState
_numberOfCells
_size
setDimensions:
T{TSCEGridDimensions=II},N,V_dimensions
T@"NSString",&,N,V_whitespaceBeforeFirstChild
T@"NSMutableArray",&,N,V_whitespaceAfterDelimiters
conditionalStyleRuleWithRule:
initWithPredicate:cellStyle:textStyle:
isEqualForInspector:
privateCellStyle
privateTextStyle
setCellStyle:textStyle:
evaluateFormulaAtCellID:withCalcEngine:onOwnerUID:
predicateDescription
copyByUpgradingToLinkedRefAtHostCellRef:
copyByUpdatingHostCellRef:
copyToUidFormForTableInfo:inCellCoordinate:preserveHostCell:
T@"TSTFormulaPredicate",R,C,N
T@"TSTCellStyle",R,C,N
T@"TSWPParagraphStyle",R,C,N
addFormula:atCellRef:
formulaOwnerUIDs
foreachFormula:
setOwnerKind:
_ownerKind
_nonFormulaCells
_formulaOwnerUIDs
TS,N,V_ownerKind
addFormulaObject:atCellRef:forOwnerKind:
ownerUIDsForOwnerKind:
allOwnerKinds
subsetForOwnerKind:
countForOwnerKind:
splitIntoChunksForExcessiveSize
foreachFormulaInOwnerKind:performBlock:
addFormulaString:atCellRef:
formulaStringAtCellRef:
_formulasForOwnerKind
_formulaStringsForCellRefs
initWithConditionalStyleSet:
initWithContext:rules:
iterateFormulasWithContext:block:
copyByReparenting:groupByUID:rewriteContext:
copyByResolvingRelativeAncestorsWithRewriteContext:
copyByConvertingToRelativeAncestorsWithRewriteContext:
copyToUidFormForTableInfo:inCellCoordinate:
precedentsWithCalcEngine:hostOwnerUID:hostCellID:
rulesDescription
currentRules
_conditionalStyleSetRules
T@"NSArray",R,N,V_conditionalStyleSetRules
enumerateIndexesUsingBlock:
addIndex:
removeAllIndexes
mutableIndexSet
_mutableIndexSet
T@"NSMutableIndexSet",R,N,V_mutableIndexSet
allCondStyleFormulasForTable:
checkConditionForCellID:withConditionalStyle:withIndex:
addFormulaForConditionalStyle:atCellID:
removeFormulaAtCellID:
removeFormulasInRange:
replaceFormulaForConditionalStyle:atCellID:
changedConditionForCellID:
_cellsToInvalidate
T@"TSTTableModel",N,V_tableModel
isEqualToTrackedReference:
initWithSpanningRangeRef:
initByCopyingASTNodeArray:atFormulaCoord:
replaceContentsWithContentsOfTrackedReference:
refersToCellRefForCalculationEngine:referenceTrackerUID:
referencesForCalcEngine:referenceTrackerUID:
getPrecedentsWithCalcEngine:hostOwnerUID:
precedentsWithCalcEngine:hostOwnerUID:
registerWithCalcEngine:inOwner:
encodeToExpandedArchive:archiver:
initFromExpandedArchive:
initWithTrackedReferenceTSPObjectDeprecated:
setFormulaCoord:
_AST
T{TSUCellCoord=ISBB},N,V_formulaCoord
p_applyUnifyResizeFactor:region:direction:totalOfCaptured:count:capturedArray:currentArray:minimumArray:
p_applyUnifyFixedSize:region:direction:count:currentArray:minimumArray:
applyFixedHeight:
applyFixedWidth:
targetWidth
targetHeight
mTargetWidth
mTargetHeight
Td,R,N,VmTargetWidth
Td,R,N,VmTargetHeight
p_applyAccordionResizeFactor:region:direction:totalOfCaptured:count:capturedArray:currentArray:minimumArray:
heightFactor
widthFactor
_heightFactor
_widthFactor
Td,R,N,V_heightFactor
Td,R,N,V_widthFactor
initWithContext:tableInfo:rowUids:
initWithTableInfo:rowUids:
orderedRowUidsWithLabels
targetGroupFromRowIndex:minSourceLevel:templateRowUID:
minimumCategoryLevelInRowRange:
sortedArrayFromArray:
rowOrder
setRowOrder:
setTemporaryRowOrder:
setRowOrderUsingViewOrder
insertRowUids:beforeUid:
groupUidsGivenRowUids:selectedLevels:
T@"TSTTableInfo",R,W,V_tableInfo
initWithPbRange:tgtRange:
initWithPbTable:pbRange:tgtTable:tgtRange:flag:
p_indexForTgtToPbMaps:andMap:
p_tgtRangeFromPbRange:andMap:
p_tgtRangeForPbRange:givenColumnMaps:rowMaps:
p_tgtCellIDForPbCellID:givenColumnMaps:rowMaps:
pbRangeForTgtRange:
pbCellIDForTgtCellID:
createTgtRegionFromPbRegion:
createTgtRegionByIntersectingPbRegion:tgtTableInfo:tgtRegion:
p_tgtRangesForPbRange:givenColumnMaps:rowMaps:
createTgtMergeMapFromPbMergeMap:andTgtRegion:andTgtBodyRange:
_rowTgtToPbMaps
_columnTgtToPbMaps
initWithNumberOfSortRules:
setReorganizeValue:atIndex:
reorganizeValueAtIndex:
reorganizeValues
setReorganizeValues:
_reorganizeValues
T@"NSMutableArray",&,N,V_reorganizeValues
initWithCalendarIdentifier:timeZone:
dateFromComponents:
components:fromDate:
dateByAddingComponents:toDate:options:
components:fromDate:toDate:options:
extractComponentsFromDate:year:month:day:hour:minute:second:
extractComponentsFromDate:year:month:day:
dateWithIdenticalComponentsInGMTForDate:
_calendar
changesPerColumnMapToBeInGroup:
changeCell:atCellUID:toBeInGroup:
changeCellDiffMapToMoveRows:toGroup:templateRowUID:
cellDiffForCell:applyingGroupCellValue:groupingType:toBeInGroup:
p_cellDiffForFinishedCell:
p_setCell:groupingTypeCombo:groupingCellValue:toBeInGroup:
p_setCell:groupingCellPlan:groupValue:toGroup:templateCell:
p_setCell:forUniqueGroupingTypeWithGroupColumnValue:toBeInGroup:
defaultDateForGrouping
p_setCell:forYearGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forMonthGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forDayOfWeekGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forDayGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forYearWeekGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forYearQuarterGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forMonthOfYearGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forQuarterOfYearGroupingTypeWithGroupColumnValue:toBeInGroup:
groupingComboForGroupingType:
p_dateBySettingUnit:value:ofDate:inCalendar:
metadataWithUid:
initWithSize:hidingAction:cellStyle:textStyle:columnRowUID:
hasHeaderContent
migrateStylesToDocument:
columnRowUID
size
hidingAction
_columnRowUID
_hidingAction
_definedCellStyle
_definedTextStyle
T@"TSTCellStyle",R,N,V_cellStyle
T@"TSWPParagraphStyle",R,N,V_textStyle
Td,R,N,V_size
TC,R,N,V_hidingAction
addIterator:
minCursorCellID
setMinCursorCellID:
cursorCellIDs
setCursorCellIDs:
iterators
setIterators:
_minCursorCellID
_iterators
_cursorCellIDs
T{TSUCellCoord=ISBB},N,V_minCursorCellID
T{vector<TSUCellCoord, std::allocator<TSUCellCoord>>=^{TSUCellCoord}^{TSUCellCoord}{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>=^{TSUCellCoord}}},N,V_cursorCellIDs
T@"NSMutableArray",&,N,V_iterators
p_mappingForSortingRowsOrColumns:withRules:dimension:
mappingForSortingColumns:withRules:
mappingForSortingRows:withRules:
sortTagsForSortingColumns:byRows:
sortTagsForSortingRows:byColumns:
rearrangeWithMapping:
mappingFromRowUids:toRowUids:
changeDescriptorsForReorganizingFromRowUids:toRowUids:
tableStyleAreaForCategoryLevel:isLabel:
withinGroupingChangesBatch
suspendChangeDescriptorNotificationsDuringBlock:
p_defaultCellStyleOfSummaryOrLabelRowAtLevel:isLabel:
p_defaultTextStyleOfSummaryOrLabelRowAtLevel:isLabel:
p_defaultStylesOfSummaryOrLabelRowAtLevel:isLabel:outCellStyle:outTextStyle:
p_applyViewCellCoord:toSummaryUsingBlock:toLabelUsingBlock:toCategoryColumnUsingBlock:toBaseUsingBlock:
p_applyViewRowIndex:toSummaryUsingBlock:toLabelUsingBlock:toBaseUsingBlock:toBeyondBoundsUsingBlock:
p_applyViewColumnIndex:toCategoryColumnUsingBlock:toBaseUsingBlock:toBeyondBoundsUsingBlock:
summaryCellCoordForCellUID:
baseCoordFromViewCoord:
i_populateIndexesForSummaryRows
i_populateIndexesForLabelRows
i_indexesForLabelRowsAtGroupLevel:
i_populateIndexesForSummaryAndLabelRows
i_populateIndexesForLeadingRows
i_indexesForLeadingRowsAtGroupLevel:
indexesForLeadingSummaryRows
i_populateIndexesForLeadingSummaryRows
i_indexesForLeadingSummaryRowsAtGroupLevel:
i_populateCachedIndexSetsIfNeeded
suspendNotify
setSuspendNotify:
cachedIndexSetsAreValid
setCachedIndexSetsAreValid:
cachedIndexesUnfairLock
setCachedIndexesUnfairLock:
cachedIndexesForSummaryRows
setCachedIndexesForSummaryRows:
cachedSummaryRowIndexesAtLevels
setCachedSummaryRowIndexesAtLevels:
cachedIndexesForLabelRows
setCachedIndexesForLabelRows:
cachedLabelRowIndexesAtLevels
setCachedLabelRowIndexesAtLevels:
cachedIndexesForSummaryAndLabelRows
setCachedIndexesForSummaryAndLabelRows:
cachedIndexesForLeadingRows
setCachedIndexesForLeadingRows:
cachedLeadingRowIndexesAtLevels
setCachedLeadingRowIndexesAtLevels:
cachedIndexesForLeadingSummaryRows
setCachedIndexesForLeadingSummaryRows:
cachedLeadingSummaryRowIndexesAtLevels
setCachedLeadingSummaryRowIndexesAtLevels:
_groupingsChangingLevel
_sawGroupingChangeNeedingReset
_suspendNotify
_cachedIndexSetsAreValid
_cachedIndexesUnfairLock
_cachedIndexesForSummaryRows
_cachedSummaryRowIndexesAtLevels
_cachedIndexesForLabelRows
_cachedLabelRowIndexesAtLevels
_cachedIndexesForSummaryAndLabelRows
_cachedIndexesForLeadingRows
_cachedLeadingRowIndexesAtLevels
_cachedIndexesForLeadingSummaryRows
_cachedLeadingSummaryRowIndexesAtLevels
TB,N,V_suspendNotify
TB,N,V_cachedIndexSetsAreValid
T{os_unfair_lock_s=I},N,V_cachedIndexesUnfairLock
T@"NSIndexSet",&,N,V_cachedIndexesForSummaryRows
T@"NSMapTable",&,N,V_cachedSummaryRowIndexesAtLevels
T@"NSIndexSet",&,N,V_cachedIndexesForLabelRows
T@"NSMapTable",&,N,V_cachedLabelRowIndexesAtLevels
T@"NSIndexSet",&,N,V_cachedIndexesForSummaryAndLabelRows
T@"NSIndexSet",&,N,V_cachedIndexesForLeadingRows
T@"NSMapTable",&,N,V_cachedLeadingRowIndexesAtLevels
T@"NSIndexSet",&,N,V_cachedIndexesForLeadingSummaryRows
T@"NSMapTable",&,N,V_cachedLeadingSummaryRowIndexesAtLevels
initWithTableUID:columnUids:rowUids:
loadIndexesForTable:uidResolver:
topLeftCellCoord
bottomRightCellCoord
mergingRange
condStyleOwnerUID
_condStyleOwnerUID
T{TSKUIDStruct=QQ},R,N,V_condStyleOwnerUID
T@"TSCEFormulaRewrite_Uids",R,N,V_columnUids
T@"TSCEFormulaRewrite_Uids",R,N,V_rowUids
initWithMergeRegion:mergeSource:
mergeSource
setMergeSource:
mergeRegion
_mergeSource
_mergeRegion
Tr^{TSUCellCoord=ISBB},N,V_mergeSource
T@"TSCEFormulaRewrite_RegionInfo",R,N,V_mergeRegion
initWithMergeOriginsMap:reverseMap:
initWithSrcTableUID:srcTract:dstTableUID:destTract:
srcTableUID
dstTableUID
originalSrcTableUID
srcCondStyleOwnerUID
dstCondStyleOwnerUID
originalSrcCondStyleOwnerUID
srcColumnUids
srcRowUids
dstColumnUids
dstRowUids
originalSrcColumnUids
originalSrcRowUids
isForSrcTable:
isForDstTable:
loadIndexesFromRegions
loadIndexesForSrcTable:srcUidResolver:dstTable:dstUidResolver:
dstUidForSrcUid:
srcUidForDstUid:
srcRegion
dstRegion
originalSrcRegion
setOriginalSrcRegion:
finalDstTableUID
setFinalDstTableUID:
srcUidForDstUid
dstUidForSrcUid
spanningRows
setSpanningRows:
spanningColumns
setSpanningColumns:
finalTopRowIndex
setFinalTopRowIndex:
_srcRegion
_dstRegion
_originalSrcRegion
_finalDstTableUID
_srcUidForDstUid
_dstUidForSrcUid
_spanningRows
_spanningColumns
_finalTopRowIndex
T@"TSCEFormulaRewrite_RegionInfo",R,N,V_srcRegion
T@"TSCEFormulaRewrite_RegionInfo",R,N,V_dstRegion
T@"TSCEFormulaRewrite_RegionInfo",&,N,V_originalSrcRegion
T{TSKUIDStruct=QQ},N,V_finalDstTableUID
TI,N,V_finalTopRowIndex
T@"TSCEFormulaRewrite_Uids",R,N
Tr^v,R,N,V_srcUidForDstUid
Tr^v,R,N,V_dstUidForSrcUid
TB,N,V_spanningRows
TB,N,V_spanningColumns
dynamicContentMustDrawOnMainThread
visible
setVisible:
hidden
setHidden:
userVisible
setUserVisible:
userHidden
setUserHidden:
_visible
_hidden
_userVisible
_userHidden
T@"NSMutableIndexSet",&,N,V_visible
T@"NSMutableIndexSet",&,N,V_hidden
T@"NSMutableIndexSet",&,N,V_userVisible
T@"NSMutableIndexSet",&,N,V_userHidden
numberOfVisibleRowsInCellRange:
numberOfVisibleColumnsInCellRange:
previousNthVisibleRow:fromRowIndex:
previousNthVisibleColumn:fromColumnIndex:
visibleCellOffsetBy:fromCellID:
userVisibleRowIndices
numberOfVisibleRowsFromHeader:
numberOfVisibleRowsFromStartRowIndex:toEndRowIndex:
enumerateVisibleColumnIndexesInRange:usingBlock:
rowsVisible
setRowsVisible:
rowsUserVisible
setRowsUserVisible:
rowsInvalid
setRowsInvalid:
rowMarkIndex
setRowMarkIndex:
columnsVisible
setColumnsVisible:
columnsInvalid
setColumnsInvalid:
_rowsVisible
_rowsUserVisible
_rowsInvalid
_rowMarkIndex
_columnsVisible
_columnsInvalid
T@"TSTHiddenStateIndexSet",&,N,V_rowsVisible
T@"TSTHiddenStateIndexSet",&,N,V_rowsUserVisible
T@"NSMutableIndexSet",&,N,V_rowsInvalid
TQ,N,V_rowMarkIndex
T@"TSTHiddenStateIndexSet",&,N,V_columnsVisible
T@"NSMutableIndexSet",&,N,V_columnsInvalid
removeControlCellSpec
coerceToFormatType:
coerceToBaseFormat:
coerceTextCellToBestNumberFormatUsingLimitedParsing:
coerceCellToFormatTypeUsingSpares:
replaceContentWithParsableString:tableInfo:cellID:flags:outControlWasRemoved:
initWithModel:region:flags:searchMask:
p_setupTileAndRowAtCellID:
dataListCache
curTile
setCurTile:
curTileRange
setCurTileRange:
curRow
setCurRow:
logToken
setLogToken:
_dataListCache
_curTile
_curRow
_curTileRange
_logToken
T@"TSTTableDataListCache",R,N,V_dataListCache
T@"TSTTableTile",&,N,V_curTile
T{_NSRange=QQ},N,V_curTileRange
T@"TSTTableTileRowInfo",&,N,V_curRow
T{TSTPerformanceLoggingToken=@Q},N,V_logToken
initWithGrids:
_grids
_argumentCounts
_lastReturnedIndex
_lastReturnedArgIndex
_lastReturnedSubindex
widthHeightCacheFromBundle:withNumberOfRows:andNumberOfColumns:
wantsSelectionAtPoint:
rendererForAttachment
baselineOffset
drawAttachment:inContext:selection:
defaultStyleWithDefaultPropertiesInContext:
setTableNameSelection:
_tableNameSelection
T@"TSTTableNameSelection",&,N,V_tableNameSelection
logForCategory:
T@"NSObject<OS_os_log>",R,N
stringForUniqueType
stringForYearType
stringForMonthType
stringForDayOfWeekType
stringForDayType
stringForYearWeekType
stringForYearQuarterType
stringForMonthOfYearType
stringForQuarterOfYearType
shortStringForYearType
shortStringForMonthType
shortStringForDayOfWeekType
shortStringForDayType
shortStringForYearWeekType
shortStringForYearQuarterType
shortStringForMonthOfYearType
shortStringForQuarterOfYearType
stringForUniqueTypeForLocale:
stringForYearTypeForLocale:
stringForMonthTypeForLocale:
stringForDayOfWeekTypeForLocale:
stringForDayTypeForLocale:
stringForYearWeekTypeForLocale:
stringForYearQuarterTypeForLocale:
stringForMonthOfYearTypeForLocale:
stringForQuarterOfYearTypeForLocale:
shortStringForYearTypeForLocale:
shortStringForMonthTypeForLocale:
shortStringForDayOfWeekTypeForLocale:
shortStringForDayTypeForLocale:
shortStringForYearWeekTypeForLocale:
shortStringForYearQuarterTypeForLocale:
shortStringForMonthOfYearTypeForLocale:
shortStringForQuarterOfYearTypeForLocale:
shortStringForGroupingType:
stringForGroupingType:
stringForGroupingType:locale:
shortStringForGroupingType:locale:
groupingTypeIsAnyDateType:
coarserGroupingTypeFor:
coarserGroupingTypeFor:groupTypesToAvoid:
finerGroupingTypeFor:
finerGroupingTypeFor:groupTypesToAvoid:
initWithGroupingColumnUid:columnUid:groupingType:
initWithColumnUid:groupingType:
initWithColumnIndex:groupingType:inTableInfo:
groupingColumnUid
getUUIDBytesForGroupingColumnUid:
getUUIDBytesForColumnUid:
setFunctorForType
p_groupingFormatWithLocale:
groupValueForValue:calcEngine:
groupingType
groupingFunctor
uniqueObjectUID
_groupingColumnUid
_groupingType
_groupingFunctor
_groupingFormat
_groupingFormatComputed
_docLocale
_uniqueObjectUID
T{TSKUIDStruct=QQ},R,N,V_uniqueObjectUID
Tr^{TSCEFunctor=@C},R,N,V_groupingFunctor
Tq,R,N,V_groupingType
isMoveRewriteType:
initWithCalcEngine:rewriteSpec:
convertFromBaseToChromeForCategorizedTableMove:containingCell:
convertFromChromeToBaseForCategorizedTableMove:containingCell:
rewriteSpec
_rewriteSpec
T@"TSTFormulaRewriteSpec",R,N,V_rewriteSpec
_currentViewCellID
_currentBaseCellID
_currentSummaryCellID
_currentCellIDIsBase
_currentRowIndex
_summaryDataStore
_summaryDataListCache
_summaryRow
registerWithCalcEngine:ownerKind:linkOnly:
registerWithCalcEngine:ownerKind:
linkToCalcEngine:ownerKind:
anyRef
rangeReference
referenceTextWithCalculationEngine:hostTableUID:
referenceTextWithCalculationEngine:contextSheetName:
p_stringByUnescapingQuotedStringWithPossibleDollarPrefix:partial:
referenceTextForAutocompleteWithCalculationEngine:hostTableUID:preserveFlags:inputString:inputStringIsComplete:
referenceTextForAutocompleteWithCalculationEngine:contextSheetName:preserveFlags:inputString:inputStringIsComplete:
overrideText
setOverrideText:
overrideTextAsTyped
setOverrideTextAsTyped:
wasConstructedViaNames
setWasConstructedViaNames:
_ref
_overrideText
_overrideTextAsTyped
_wasConstructedViaNames
T@"NSString",C,V_overrideText
T@"NSString",C,V_overrideTextAsTyped
TB,N,V_wasConstructedViaNames
T{TSCEAnyRef=S{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}{TSKUIDStruct=QQ}B@},R,N
T{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}},R,N
T@"TSCEWrappedRangeRef",R,N
dontClearBackground
setDontClearBackground:
TB,N,VdontClearBackground
solid
isEqualToStroke:
isPortalStroke
strokeApplyingEmphasis
strokeApplyingWidth:
emptyStrokeWithWidth:
zeroWidthEmptyStroke
mergeRangeEmptyStroke
portalStroke
TB,D,N
newTableResolverForResolver:
resolverContainerMatchingName:inDocumentRoot:
resolverMatchingName:inDocumentRoot:contextResolver:
resolverMatchingNameWithContextContainer:inDocumentRoot:contextContainerName:
p_warningSetForFormulaWarningType:originalFormula:supplementaryText:
emptyWarningSet
warningSetFor3DReferenceFormula:
warningSetForArrayedFormula:
warningSetForDifferentBehaviorForFunctionFormula:originalFormula:
warningSetForErrorTokenFormula:
warningSetForExternalReferenceFormula:
warningSetForNaturalLanguageFormula:
warningSetForReferenceOutOfBoundsFormula:
warningSetForSharedFormulaBaseNotFoundFormula:
warningSetForUnknownName:originalFormula:
warningSetForUnsupportedFormula:
warningSetForUnsupportedFunction:originalFormula:
warningSetForUnsupportedNameFormula:originalFormula:
warningSetForTransposedWithoutIssues:
warningSetForTransposedWithIssues:
warningSetForTransposeUnmodifiedWithIssues
warningSetForFilteredColumnFormulaNotCopied
warningSetForFormulaReplacedForExcelCompat:originalFormula:
warningSetForCondFormatAboveAvgEqualAvg
warningSetForCondFormatAboveAvgStdDev
warningSetForCondFormatComplexFormula
warningSetForCondFormatContainsErrors
warningSetForCondFormatExpr
warningSetForCondFormatNotContainsErrors
warningSetForCondFormatParamatersNotAllTheSame
warningSetForCondFormatStopIfTrue
warningSetForCondFormatUnsupportedOperator
warningSetForCondFormatUnsupportedStyling
warningSetForCondFormatUnsupportedTimePeriod
warningSetForUnsupportedCondFormat
warningSetForDurationFormatRangeChanged
warningSetForUnsupportedDataFormat:
cellDiffClearingAllWarningsWithContext:
areAnySet
individualWarnings
localizedWarningStrings
warningSetByAddingWarningsFromSet:
cellDiffClearingWarningsWithContext:
warningSetByRemovingWarningsFromSet:
p_isPersistedWithFormulaWarningTypeEnumeration
TSTImportFormulaWarningTypeFromArchive:
TSTImportFormulaWarningTypeToArchive
_cellWarning
_originalDataFormat
_formulaWarning
addWarning:atCellRef:
cellRefForIndex:
warningSetAtCellRef:
_warningSetForCoordinate
setFunctionIndex:
TS,N,V_functionIndex
errorForErrorType:
errorForErrorType:functionName:
errorForErrorType:functionName:argIndex:
errorWithDictionary:
errorForToken:
exceptionIsFromCalcEngine:
exceptionIsCircularReferenceError:
exceptionIsRangeUsageError:
p_DictionaryRepresentsInvalidMergeReference:
circularReferenceError
missingRunningTotalInFieldError
missingPivotTableErrorForFunctionName:argumentNumber:
invalidAggregateColumnErrorForFunctionName:argumentNumber:
invalidGroupingColumnErrorForFunctionName:argumentNumber:
referenceToNonexistentTableError:
autoNumberAttachmentError
attachmentError
exceptionIsInvalidMergeReference:
raiseErrorForError:
raiseInvalidArrayContentsError
raiseValueErrorForFunctionName:
abortError
raiseAbortError
notReadyError
raiseNotReadyError
raiseDisallowedStockModeError:
typeErrorForValue:functionSpec:argumentIndex:locale:
raiseTypeExceptionForValue:functionSpec:argumentIndex:locale:
raiseUnknownFunctionErrorForString:
raiseNumberError
raiseNumberErrorForFunctionName:
raiseDivideByZeroError
raiseZeroToPowerOfZeroError
raiseAutoNumberAttachmentErrorInTextCell:
raiseAttachmentErrorInTextCell:
raiseValueNotAvailableErrorForFunctionName:
raiseArgumentSetUsedOutOfContextError
raiseErrorForInvalidReference
invalidReferenceError
raiseErrorForInvalidReference:orString:contextEntityUID:
raiseErrorForInvalidReference:orString:contextEntityUID:invalidMergeReference:disqualifiedFromEndCell:
invalidMergeReference:contextEntityUID:
raiseOutOfBoundsArgumentErrorForArgument:functionName:lowerBound:lowerBoundInclusive:
raiseOutOfBoundsArgumentErrorForArgument:functionName:upperBound:upperBoundInclusive:
raiseOutOfBoundsArgumentErrorForArgument:functionName:lowerBound:lowerBoundInclusive:upperBound:upperBoundInclusive:
raiseMatchNotFoundErrorForValue:isRegex:afterMatch:previousValueToMatch:previousValueIsRegex:occurrence:matchesFound:functionName:
raiseMatchNotFoundErrorForValue:isRegex:functionName:
raiseStartNumberExceedsStringLengthErrorForFunctionName:
raiseDifferentNumberOfDataPointsErrorForFunctionName:
invalidDateManipulationError
raiseInvalidDateManipulationError
raiseMixedTypeManipulationErrorForFunctionName:
raiseInvalidArgumentsErrorForFunctionName:argumentIndex:
indirectErrorForRangeReference:hostTableUID:
raiseIndirectErrorForRangeReference:hostTableUID:
raiseNoModeError
raiseInvalidTokenInFormulaError
raiseEmptyArgumentError
raiseEmptyArgumentSpecificErrorForArgumentNumber:
raiseInvalidRangeUsageErrorForReference:
raiseInvalidHyperlinkError
raiseDifferentNumberOfElementsErrorForFunctionName:
raiseUnionInsideIntersectionError
raiseCircularReferenceErrorWithReference:
raiseNotAReferenceErrorForFunctionName:
raiseNoSuitableArgumentsFoundErrorForFunctionName:requiredType:
raiseInvalidArgumentRelationshipErrorForFunctionName:argIndex1:argIndex2:argsAscending:equalityPermitted:
raiseInvalidArgumentEqualityRelationshipErrorForFunctionName:argIndex1:argIndex2:
raiseInvalidIndexForChooseError:
raiseNonEmptyStringRequiredErrorForFunctionName:
raiseStringDoesNotRepresentNumberErrorForFunctionName:string:
raiseStringDoesNotRepresentDateErrorForFunctionName:string:
raiseSignsMustMatchErrorForFunctionName:
raiseRangeDoesNotSumToOneForFunctionName:argumentNumber:
raiseUnsupportedR1C1StyleError
raiseInvalidDateError
raiseInvalidTimeError
raiseNotAVectorError
raiseInvalidProbabilityErrorForFunctionName:
raiseNumberSmallerThanZeroError
raiseArgumentEqualsToZeroErrorForFunctionName:argumentNumber:
raisePositionLargerThanArrayErrorForFunctionName:
raiseInvalidFrequencyErrorForFunctionName:argumentNumber:
raiseInvalidTypeErrorForFunctionName:argumentNumber:
raiseInvalidTailErrorForFunctionName:argumentNumber:
raiseInvalidSubtotalFunctionNumberError
raiseNumberDoesNotConvergeErrorForFunctionName:
raiseNumberDoesNotConvergeWithEstimateErrorForFunctionName:
raiseTooFewDataPointsErrorForFunctionName:
raiseDateEarlierThanStartingDateErrorForFunctionName:
raiseOnlyPositiveOrNegativeErrorForFunctionName:
raiseReferenceToEmptyCellErrorForFunctionName:rangeReference:
raiseNumberMinusDateError
raiseWrongNumberOfArgumentsErrorForFunctionName:provided:
raiseTooManyArguments:maximum:provided:
raiseInvalidCurrencyComparisonError
raiseInvalidComparisonError
raiseMismatchedUnitsErrorForFunctionName:argumentNumberString:
raiseMismatchedUnitsErrorForFunctionName:
raiseUnitsNotAllowedErrorForFunctionName:argumentNumber:
raiseCurrencyNotAllowedErrorForFunctionName:argumentNumber:
raiseDurationNotAllowedError:argumentNumber:
durationNotAllowedError:argumentNumber:
raiseMismatchedCurrenciesErrorForFunctionName:
sumMixedDurationsAndUnitlessWithoutADateErrorForFunctionName:
raiseSumMixedDurationsAndUnitlessWithoutADateErrorForFunctionName:
raiseNotEnoughInputsErrorForFunctionName:argumentNumber:required:
raiseInvalidIntersectionError:hostTableUID:calcEngine:
raiseInvalidArgumentPairingsErrorForFunctionName:hasInitialUnrelatedArgument:
raiseRangeSizeMismatchErrorForFunctionName:
raiseEmptyArrayError
raiseInvalidBaseCharacterErrorForCharacter:base:
raiseInvalidUnitStringError:
raiseDifferentDimensionsErrorForFunctionName:
raiseNonMetricUnitPrefixErrorForUnitString:
raiseConvertOriginUnitMismatchError
raiseArrayElementNoDataError
raiseDataInvalidDimensionsError
raiseDataInvalidLengthError
raiseDataInvalidWidthError
raiseNegativeReceivedAmountError
raiseInvalidMatchModeError
raiseMismatchedMaxUnitsError
raiseVectorValueNotNumberErrorForFunctionName:argumentNumber:
raiseCharInputOutOfBoundsError
raiseDurationDisallowedForNormdistPDFError
raiseLinestHighlyCorrelatedVariableError
raiseComparisonTypeExceptionForLeftType:rightType:
raiseMultipleDurationsErrorForFunctionName:
raiseLinestMatrixUnderdeterminedError
raiseNegativeVectorValueErrorForFunctionName:argumentNumber:
raisePercentRankInputOutOfRangeError
raisePercentRankExcInputOutOfRangeError
raiseLocationServicesNotEnabledError
raiseLocationHeadingUnknownError
raiseLocationUnknownError
raiseLocationUserDeniedError
raiseLocationNetworkError
raiseLocationHeadingFailureError
raiseInvalidLatitudeLongitudeError
raiseInvalidAltitudeError
raiseInvalidHeadingError
raiseInvalidRegexError:
raiseStringTooLongError
raiseUnsupportedFunctionError
raiseUnsupportedFeatureError
raiseNoConditionIsTrueErrorForFunctionName:
raiseInvalidLiveStockAttributeError
raiseNotAReferenceToAFormulaError
raiseInvalidReferenceNameAttributeError
raiseInvalidHistoricalStockAttributeError
raiseInvalidLiveCurrencyAttributeError
raiseInvalidHistoricalCurrencyAttributeError
raiseInvalidHistoricalDateError
raiseRemoteDataUnavailableErrorWithAttribute:
invalidLiveStockAttributeError
notAReferenceToAFormulaError
invalidReferenceNameAttributeError
invalidHistoricalStockAttributeError
invalidLiveCurrencyAttributeError
invalidHistoricalCurrencyAttributeError
invalidHistoricalDateError
noTradingInformationErrorWithNextAvailableDate:
invalidStockCodeError:
invalidCurrencyPairError
remoteDataServerError
remoteDataUnavailableErrorWithAttribute:
errorForRichTextStorage:outValue:
initWithErrorType:
errorTypeKey
extraInfoString
setExtraInfoString:
extraInfoNumber
setExtraInfoNumber:
dateAsTimeInterval
setDateAsTimeInterval:
setFunctionName:
argIndex
setArgIndex:
argIndex1
setArgIndex1:
argIndex2
setArgIndex2:
lowerBound
setLowerBound:
upperBound
setUpperBound:
lowerBoundInclusive
setLowerBoundInclusive:
upperBoundInclusive
setUpperBoundInclusive:
valueToMatch
setValueToMatch:
argsAscending
setArgsAscending:
equalityPermitted
setEqualityPermitted:
afterMatch
setAfterMatch:
occurrence
setOccurrence:
matchesFound
setMatchesFound:
previousMatch
setPreviousMatch:
previousValueIsRegex
setPreviousValueIsRegex:
problemExpressionString
setProblemExpressionString:
problemMode
setProblemMode:
problemNodeIsCellReference
setProblemNodeIsCellReference:
wrappedRangeRef
setWrappedRangeRef:
attachmentErrorRaisedInTextCell
setAttachmentErrorRaisedInTextCell:
invalidReferenceToMerge
setInvalidReferenceToMerge:
referenceEndCellInvalid
setReferenceEndCellInvalid:
unitName
setUnitName:
chooseIndex
setChooseIndex:
referenceArray
setReferenceArray:
anyReference
setAnyReference:
maxArgsAllowed
setMaxArgsAllowed:
providedArgs
setProvidedArgs:
raiseException
tokenString
isFromCalcEngine
isCircularReferenceError
isMismatchedUnitsError
errorIsRangeUsageError
isInvalidMergeReference
isAbortedError
isNotReadyError
isUnsupportedFunctionError
isUnsupportedFeatureError
isErrorReferenceError
errorDictionary
isInvalidReferenceError
deepType
numberForFunction:argumentIndex:warningReportingContext:
dateForFunction:argumentIndex:warningReportingContext:
stringForFunction:argumentIndex:warningReportingContext:
booleanForFunction:argumentIndex:warningReportingContext:
formattedGridForFunction:argumentIndex:context:format:
referenceValueForFunction:argumentIndex:warningReportingContext:
boolean
vector
referenceValue
isNativelyEqual:
bakedString
errorType
setErrorType:
_errorType
_errorDictionary
Tq,N,V_errorType
T@"TSCEWrappedRangeRef",&,N
T@"TSCEAnyReference",&,N
valueMap
valueMapWithSpecifier:value:
p_enumerateYearMapsWithBlock:
initWithData:
setValue:forSpecifier:
removeValueForSpecifier:
addValuesFromMap:
updateWithValuesFromMap:overwriteValues:
removeValuesForSpecifierSet:
removeAllValues
containsValueForSpecifier:
valueForSpecifier:
containsValueForAllSpecifiersInSet:
mapForSpecifiersInSet:
mapForSingleSpecifier:
enumerateSpecifiersAndValuesWithBlock:
objectForKeyedSubscript:
setObject:forKeyedSubscript:
p_saveMap:toArchive:
T@"NSMutableDictionary",&,N,V_data
addValuesForDimension:
enumerateCombinationsWithBlock:
_valuesForDimension
popupMenuModelFromTable:region:initialValue:overflow:
p_appendChoices:uniquelyToChoices:
p_PopUpMenuModelDefaultWithContext:locale:
p_cellValueFromCellWithCustomFormat:locale:
cellValueFromCell:locale:
popupMenuModelDeletingItemFromModel:index:
popupMenuModelEditingItemInModel:index:newContent:
popupMenuModelReorderingModel:fromIndex:toIndex:
choices
isEqualToChoices:
valueTypeOfItemAtIndex:
numberAtIndex:
stringAtIndex:
dateAtIndex:
booleanAtIndex:
initWithItems:context:
p_listItemAtIndex:
p_mcListTypeForArgType:
p_mcListTypeOfListItem:
p_numberForListItem:
p_stringForListItem:
p_dateForListItem:
p_booleanForListItem:
formatAtIndex:
popUpItemFromNumber:format:
popUpItemFromBoolean:
popUpItemFromString:
popUpItemFromDate:format:
_items
objectWithRefCount:
loadObjectFromArchive:listType:unarchiver:completion:
p_sharedInitWithRefCount:key:
initWithRefCount:
sharedLoadFromArchive:
loadFromArchive:unarchiver:completion:
takeReference
takeReferences:
dropReference
dropReferences:
addReferencesFromObject:
byteSizeForArchiving
estimateByteSize
conditionalStyleSet
formulaError
popUpMenuModel
richTextStorage
refCount
payload
setPayload:
setKey:
_payload
_key
_refCount
_byteSizeForArchiving
TI,R,N,V_refCount
TQ,R,N,V_byteSizeForArchiving
TI,N,V_key
T@"NSObject<TSTTableDataPayloadHashing>",&,N,V_payload
T@"TSDCommentStorage",R,D,N
T@"TSTConditionalStyleSet",R,D,N
T@"TSUCustomFormat",R,D,N
T@"TSKFormat",R,D,N
T@"TSTCellSpec",R,D,N
T@"TSWPStorage",R,D,N
T@"TSTImportWarningSet",R,D,N
T@"TSTPopUpMenuModel",R,D,N
T@"TSSStyle",R,D,N
objectWithCommentStorage:refCount:
initObjectWithCommentStorage:refCount:
objectWithConditionalStyleSet:refCount:
initObjectWithConditionalStyleSet:refCount:
objectWithCustomFormat:refCount:
initObjectWithCustomFormat:refCount:
objectWithFormat:refCount:
p_setUpFormat:
initObjectWithFormat:refCount:
objectWithCellSpec:refCount:
initObjectWithCellSpec:refCount:
objectWithFormulaError:refCount:
initObjectWithFormulaError:refCount:
objectWithImportWarningSet:refCount:
initObjectWithImportWarningSet:refCount:
objectWithPopUpMenuModel:refCount:
initObjectWithPopUpMenuModel:refCount:
objectWithRichTextPayload:refCount:
richTextPayload
initObjectWithRichTextPayload:refCount:
objectWithString:refCount:
initObjectWithString:refCount:
shouldWrap
_shouldWrap
TB,R,N,V_shouldWrap
objectWithStyle:refCount:
initObjectWithStyle:refCount:
tst_dataObjectHash
tst_dataObjectIsEqual:
setCell:atCellID:
hasCellAtCellID:
removeAllCells
concurrentCellMapForTable:
allCellCoords
applyBlockToAllCells:
upgradeStyleForFormulatextForCellCoord:
shouldUpgradeStyleForFormulatextForCellCoord:
noLockShouldUpgradeStyleForFormulatextForCellCoord:
hasAnyRichTextCells
setHasAnyRichTextCells:
temporaryObjectContextDelegate
temporaryContext
rowIndexes
setRowIndexes:
minColumn
setMinColumn:
setMaxColumn:
_cellsByCoord
_cellCoordsToStyleUpgradeForFormulatext
_hasAnyRichTextCells
_minColumn
_maxColumn
_temporaryObjectContextDelegate
_temporaryContext
_rowIndexes
T@"TSPTemporaryObjectContextDelegate",R,N,V_temporaryObjectContextDelegate
T@"TSPObjectContext",R,N,V_temporaryContext
T@"NSMutableIndexSet",&,N,V_rowIndexes
TB,N,V_hasAnyRichTextCells
TS,N,V_minColumn
TS,N,V_maxColumn
mergeLeftRef:rightRef:outError:
initWithTableResolver:topLeft:bottomRight:preserveFlags:
initWithTableResolver:tractRefCore:
initWithCalcEngine:tableUID:topLeft:bottomRight:preserveFlags:
tableResolver
tractRef
clearResolver
bodyRangeOfTable
tableRangeOfTable
makeCellReferenceForOffset:apparentTractRef:
makeCellReferenceInSameTable:
format:
getResolverUID
getHidingActionForRows:
hasCachedValue
canonicalCellReferenceForReference
scalarValueForEvalContext:permitAccessInsideMergeRegions:fetchRichTextAttributesIfPlainText:
scalarValueFromCoord:permitAccessInsideMergeRegions:fetchRichTextAttributesIfPlainText:
cachedValue
setCachedValue:
cachedValueWasFetchedWithRichTextAttributes
setCachedValueWasFetchedWithRichTextAttributes:
_tableResolver
_tractRef
_cachedValue
_cachedValueWasFetchedWithRichTextAttributes
T^{TSCETableResolver=^^?},R,N
T{shared_ptr<TSCEValue>=^{TSCEValue}^{__shared_weak_count}},N,V_cachedValue
TB,N,V_cachedValueWasFetchedWithRichTextAttributes
invalidateObjectsWithKeysInCellRange:
cellValueTypeIsExpected:
cellFormatKindIsExpected:
formatTypeIsExpected:
formatType:isSameCellFormatKindAs:
formatType:isSameCellFormatKindAs:allowNumberCurrencyMismatch:
cellFormatKindForValueType:
p_mismatchBetweenValueType:andCellFormatKind:
shallowCopyToCell:
copyJustValueToCell:
copyValueAndFormatToCell:
inflateFromStorageRef:dataStore:cache:
inflateFromStorageRef:dataStore:cache:suppressingTransmutation:
cellByApplyingCellDiff:toTable:andUpdateInverse:optionalConcurrentStylesheet:
setProvidedValueTypeBeforeUpgrade
numberDecimalValue
setNumberDecimalValue:roundToDoublePrecision:
setNumberDecimalValue:
currencyDecimalValue
setCurrencyDecimalValue:roundToDoublePrecision:
setCurrencyDecimalValue:
numberDoubleValue
setNumberDoubleValue:
currencyDoubleValue
setCurrencyDoubleValue:
underlyingDoubleValue
underlyingDecimalValue
setCurrencyOrNumberDoubleValue:
setCurrencyOrNumberDecimalValue:
mightBeInterestedInMigration
stringForDisplayWithoutColor
hasContentBreakingMergeFragment
valueRepresentsDateWithoutTime
adoptStylesheet:withMapper:supportsInlineAttachments:
setFormulaObject:clearingID:
setFormulaObject:
hasStockFormulaForStockUI
popupChoiceIndex
applyFormulaResult:
applyFormulaResult:context:hasWarnings:outWriteDidBeginOrEndWithTextCell:propagateCheckboxesAndRatings:
suggestCellFormatKind:
p_formatOfCellFormatKind:create:outCreated:
setCurrentFormat:isExplicit:forExcel:
setFormat:isExplicit:
p_clearFormatOfCellFormatKind:
clearFormatOfType:
p_clearIfImplicitAndNotCurrentForKind:format:explicitFormatMask:
validateAndRepair
hasNumberFormat
hasCurrencyFormat
hasDateFormat
hasDurationFormat
hasTextFormat
hasBooleanFormat
hasAnyCustomFormat
processCustomFormatsWithBlock:
_validateCustomFormatWrapper:
p_formatTypeIsANumberFormatTypeForMostRecentlySet:
p_TSTCellSetMostRecentlySetNumberFormatWithCurrencyFlag:
p_setFormatExplicit:fromCellFormatKind:setMostRecentlySet:
currentFormatIsExplicitForCalcEngine
formatOfType:allowMismatchedSpare:
p_hasExplicitFormatOfCellFormatKind:
formatOfCellFormatKind:isExplicit:
currencyIsMostRecentlySet
candidateFormatForSliderStepperControlWithIsCurrent:
hasAnyExplicitFormats
setFormatID:forStorageFlag:
formatForStorageFlag:
formatIDForStorageFlag:
hasAnyWarning
reorganizeValueForSorting
textFormat
booleanFormat
cellFormatKind
controlCellSpecID
setControlCellSpecID:
textFormatID
setTextFormatID:
booleanFormatID
setBooleanFormatID:
_valueBigNumber
_controlCellSpecID
_textFormatID
_booleanFormatID
TC,R,N,V_cellFormatKind
TI,N,V_controlCellSpecID
TI,N,V_textFormatID
TI,N,V_booleanFormatID
T@"TSULocale",N,V_locale
T{TSUDecimal={?=[2Q]}},N
T@"TSTStockDetails",R,N
T@"TSKFormat",R,N
T@"TSKFormat",R,N,V_textFormat
T@"TSKFormat",R,N,V_booleanFormat
initWithReferenceSet:
referenceSet
insertAnyRef:
insertCellRef:
insertRangeRef:
insertSpanningRangeRef:
insertRefs:
forallRefs:
foreachCellRef:
foreachSpanningRangeRef:
_referenceSet
groupSortOrderWithRules:withTableInfo:
initWithGroupRules:withTableInfo:
groupSortOrderWithTableInfo:
groupSortOrderByRemovingColumnUIDs:tableInfo:
groupSortOrderByReplacingRuleAtIndex:withRule:withTableInfo:
sortRulesWithTableInfo:
containsAnyRulesInColumnUIDList:
groupSortRulesForLevel:tableInfo:
groupSortRules
_groupSortRules
T@"NSArray",R,N,V_groupSortRules
metadataForRowIndex:hidingAction:uuid:
metadataForColumnIndex:hidingAction:uuid:defaultColumnWidth:
updateRowHeaderAtIndex:fromMetadata:
updateColumnHeaderAtIndex:fromMetadata:
forceLoadHeaderStorages
updateHeaderStorageStylesWithBlock:
cellCountOfRowAtIndex:
cellCountOfColumnAtIndex:
hidingStateOfRowAtIndex:
hidingStateOfColumnAtIndex:
setHidingState:ofRowAtIndex:
setHidingState:ofColumnAtIndex:
cellStyleOfRowAtIndex:
cellStyleOfColumnAtIndex:
textStyleOfRowAtIndex:
textStyleOfColumnAtIndex:
defaultStylesOfRowAtIndex:outCellStyle:outTextStyle:
defaultStylesOfColumnAtIndex:outCellStyle:outTextStyle:
decrementColumnCellCount:byAmount:
decrementCellCountsAtCellID:
incrementCellCountsAtCellID:
p_updateNumberOfPopulatedCells
numberOfConditionalStyles
commentStorageAtCellID:
i_tileStartingAtOrBeforeRowIndex:outTileRange:
i_tileStartingAtOrAfterRowIndex:outTileRange:
i_rowInfoAtIndex:
cellStorageRefAtCellID:
stringAtCellID:
enumerateCellStoragesInRange:withBlock:
enumerateCellStoragesRowByRowToMaxID:getPreBNC:withBlock:
cellStyleAtCellID:
textStyleAtCellID:
formatForCalcEngineAtCellID:formatIsExplicitOut:refIfAvailable:
stringForCalcEngineAtCellID:refIfAvailable:
richTextStorageForCalcEngineAtCellID:refIfAvailable:
valueTypeAtCellID:
hasFormulaSyntaxErrorAtCellID:
containsImportWarnings
p_updatePreBNCDataListsForCurrentFormat:numberFormat:currencyFormat:dateFormat:durationFormat:baseFormat:customFormat:stepperSliderFormat:mcListFormat:oldPreBNCStorageRef:callWillModify:
setCell:atCellID:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:doRichTextDOLC:
setCell:atCellID:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:
_setCell:atCellID:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:richTextDOLCHint:
setCellMap:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormulas:skipDirtyingNonFormulaCells:doRichTextDOLC:
p_preBNCKeysForCell:atCellID:
p_preBNCKeysForCell:oldPreBNCStorageRef:callWillModify:
p_preBNCpopulatedCustomFormat:value:
p_populatedMultipleChoiceListFormat:
p_stashBadKey:forList:
resolveDataListKeysForPreBNCCell:suppressTransmutation:sourceStorageVersion:
resolveDataListKeysForCell:cache:suppressTransmutation:sourceStorageVersion:
p_clearDataListEntriesInRange:
p_clearDataListEntriesForStorageRef:cellID:
formulaSyntaxErrorAtCellID:
formulaSpecAtCellID:
formulaSpecForStorageRef:
p_loadDatalist:forLazyReference:
p_loadDatalist:forLazyReference:completionBlock:
conditionalStyleSetDataList
stringDataList
styleDataList
formulaDataList
controlCellSpecDataList
formulaErrorDataList
richTextDataList
formatDataList
commentStorageDataList
importWarningSetDataList
preBNCFormatDataList
p_makeALazyDatalistOfType:
p_makeALazyDatalistOfType:isNewForBNC:
i_formatForDataListKey:
i_styleForDataListKey:
resetAllColumnRowSizes
resetAlmostEverything
p_addPasteboardCustomFormat:key:toDocument:
cellMapForAddingPasteboardCustomFormats
p_pasteboardCustomFormatMap
copyPasteboardCustomFormatsFromDataStore:
clearPasteboardCustomFormatMap
initWithArchive:unarchiver:owner:
_needToUpgradeCellStorage
upgradeDataStoreCellStorageIfNeededWithTableUID:conditionalStyleOwner:
p_cellMapForUpgradingToBraveNewCell
embiggenTableForUpgrade
saveToArchive:archiver:isInTheDocument:
beginIteration
endIteration
assertIsNotIterating
copyWithOwner:
updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:
setCellsConcurrently:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:
accumulateCurrentCellsConcurrentlyInRow:rowInfo:atColumns:usingCellCreationBlock:
tsceValueFromCell:atCellID:tableUID:
tsceValueForCellStorageRef:cellCoord:hostTableUID:outValue:
upgrading
setUpgrading:
tileStorage
setTileStorage:
rowHeaderStorage
setRowHeaderStorage:
columnHeaderStorage
setColumnHeaderStorage:
styleTableReference
setStyleTableReference:
conditionalStyleSetTableReference
setConditionalStyleSetTableReference:
stringTableReference
setStringTableReference:
formulaTableReference
setFormulaTableReference:
controlCellSpecTableReference
setControlCellSpecTableReference:
formulaErrorTableReference
setFormulaErrorTableReference:
richTextTableReference
setRichTextTableReference:
formatTableReference
setFormatTableReference:
commentStorageTableReference
setCommentStorageTableReference:
importWarningSetTableReference
setImportWarningSetTableReference:
preBNCFormatTableReference
setPreBNCFormatTableReference:
multipleChoiceListFormatDataList
pasteboardCustomFormatMap
setPasteboardCustomFormatMap:
mergedCellRanges
setMergedCellRanges:
cellCountValid
setCellCountValid:
storageVersionPreBNC
setStorageVersionPreBNC:
missingPostBNCDatalists
setMissingPostBNCDatalists:
_iteratorRunningCount
_styleDataList
_conditionalStyleSetDataList
_stringDataList
_formulaDataList
_controlCellSpecDataList
_formulaErrorDataList
_richTextDataList
_formatDataList
_commentStorageDataList
_importWarningSetDataList
_preBNCFormatDataList
_foundABadDatalistKey
_upgrading
_cellCountValid
_storageVersionPreBNC
_missingPostBNCDatalists
_tileStorage
_rowHeaderStorage
_columnHeaderStorage
_styleTableReference
_conditionalStyleSetTableReference
_stringTableReference
_formulaTableReference
_controlCellSpecTableReference
_formulaErrorTableReference
_richTextTableReference
_formatTableReference
_commentStorageTableReference
_importWarningSetTableReference
_preBNCFormatTableReference
_multipleChoiceListFormatDataList
_pasteboardCustomFormatMap
_mergedCellRanges
T@"TSTTableTileStorage",&,N,V_tileStorage
T@"TSTTableHeaderStorage",&,N,V_rowHeaderStorage
T@"TSTTableHeaderStorage",&,N,V_columnHeaderStorage
T@"TSPLazyReference",&,N,V_styleTableReference
T@"TSPLazyReference",&,N,V_conditionalStyleSetTableReference
T@"TSPLazyReference",&,N,V_stringTableReference
T@"TSPLazyReference",&,N,V_formulaTableReference
T@"TSPLazyReference",&,N,V_controlCellSpecTableReference
T@"TSPLazyReference",&,N,V_formulaErrorTableReference
T@"TSPLazyReference",&,N,V_richTextTableReference
T@"TSPLazyReference",&,N,V_formatTableReference
T@"TSPLazyReference",&,N,V_commentStorageTableReference
T@"TSPLazyReference",&,N,V_importWarningSetTableReference
T@"TSPLazyReference",&,N,V_preBNCFormatTableReference
T@"TSTTableDataList",R,N,V_multipleChoiceListFormatDataList
T@"NSObject<TSDContainerInfo><TSWPStorageParent>",W,N,V_richTextParentInfo
T@"NSMutableDictionary",&,N,V_pasteboardCustomFormatMap
T@"TSTMergeRegionMap",&,N,V_mergedCellRanges
TI,N,V_cellCount
TB,N,V_cellCountValid
TC,N,V_storageVersionPreBNC
TB,N,V_missingPostBNCDatalists
TB,N,V_upgrading
rank
setRank:
_rank
_doubleValue
Ti,N,V_rank
Td,N,V_doubleValue
initWithColumnRange:rowRange:
initWithValueVector:
initWithValueVector:dimensions:
topLeftCoord
numberOfPopulatedColumns
numberOfPopulatedRows
populatedColumns
hasValueAtColumn:row:
clearValueAtColumn:row:
hasValueAtCoord:
clearValueAtCoord:
valueAtColumn:row:
valueAtCoord:
valueAt1DIndex:
firstValue
allValues
expandToIncludeCoord:
setValue:atCoord:
setEmptyValueAtCoord:
subGridAtGridCoord:width:height:
populatedSliceByIndex:byRow:
intersectionWithCellRect:
compressToZeroBased
enumerateValuesUsingBlock:
enumerateValuesForRow:usingBlock:
enumerateValuesForColumn:usingBlock:
_coords
_topLeftCoord
_valueForCoord
T{TSCEGridDimensions=II},R,N
T{TSCEGridCoord=II},R,N
initWithCommentStorage:
T@"TSDCommentStorage",R,N,V_commentStorage
initWitRefValue:rangeContext:
_evalRef
_apparentTractRef
transform
setTransform:
inset
setInset:
reoriginToZero
setReoriginToZero:
_reoriginToZero
_inset
_transform
T{CGAffineTransform=dddddd},N,V_transform
Td,N,V_inset
TB,N,V_reoriginToZero
bezierPathForGridRange:transform:inset:reoriginToZero:
insertBezierPath:gridRange:transform:inset:reoriginToZero:
isInDocument
isFloatingComment
annotationUUID
annotationType
author
setAuthor:
annotationDisplayStringType
T@"TSKAnnotationAuthor",&,N
commentWillBeAddedToDocumentRoot
isHighlight
T@"TSDCommentStorage",C,N
initWithStorage:forTableInfo:cellUID:
initWithStorage:forTableInfo:baseCellCoord:
p_updateAnnotationUUID
viewCellCoord
baseCellCoord
setAnnotationUUID:
mStorage
_annotationUUID
T@"NSString",&,N,V_annotationUUID
T{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}},R,N,V_cellUID
T{TSUViewCellCoord={TSUCellCoord=ISBB}},R,N
T{TSUModelCellCoord={TSUCellCoord=ISBB}},R,N
sharedTableConfiguration
resetSharedTableConfiguration
T@"TSTConfiguration",R,N
supportsExpandedTables
maxNumberOfRows
setMaxNumberOfRows:
maxNumberOfColumns
setMaxNumberOfColumns:
maxNumberOfPopulatedCells
setMaxNumberOfPopulatedCells:
supportsContainedTextEditing
setSupportsContainedTextEditing:
showsCellEditingToolbar
setShowsCellEditingToolbar:
supportsAutomaticNumberKeyboard
setSupportsAutomaticNumberKeyboard:
supportsMergedCells
setSupportsMergedCells:
supportsHiddenCells
setSupportsHiddenCells:
returnWhileEditingNavigates
setReturnWhileEditingNavigates:
tabWhileEditingNavigates
setTabWhileEditingNavigates:
continuesEditingAfterNavigation
setContinuesEditingAfterNavigation:
arrowKeyAtEdgeWhileEditingNavigates
setArrowKeyAtEdgeWhileEditingNavigates:
arrowKeysWrap
setArrowKeysWrap:
arrowKeysNavigateWhenEditingBeganByTyping
setArrowKeysNavigateWhenEditingBeganByTyping:
backTabWraps
setBackTabWraps:
tabAtEdgeAddsRow
setTabAtEdgeAddsRow:
tabAtEdgeAddsColumn
setTabAtEdgeAddsColumn:
pastesTile
setPastesTile:
allowHorizontalAutoresize
setAllowHorizontalAutoresize:
selectsCellOnInitialTap
setSelectsCellOnInitialTap:
dragByHandleOnly
setDragByHandleOnly:
cornersCanDragResize
setCornersCanDragResize:
supportsControlCells
setSupportsControlCells:
controlCellUIAlwaysVisible
setControlCellUIAlwaysVisible:
supportsActionMenu
setSupportsActionMenu:
hasLargerFonts
setHasLargerFonts:
supportsFrozenHeaders
setSupportsFrozenHeaders:
supportsAutoResizedTables
setSupportsAutoResizedTables:
supportsCreateChartFromSelection
setSupportsCreateChartFromSelection:
selectionUsesBezierPath
setSelectionUsesBezierPath:
usesSelectionChromeResizer
setUsesSelectionChromeResizer:
showsChromeWhileEditingCell
setShowsChromeWhileEditingCell:
showsSelectionKnobsWhileEditingCell
setShowsSelectionKnobsWhileEditingCell:
showsCellWarningIndicator
setShowsCellWarningIndicator:
supportsCanvasReferenceEditing
setSupportsCanvasReferenceEditing:
usesLimitedAutomaticFormatParsing
setUsesLimitedAutomaticFormatParsing:
supportsFormulaEditing
setSupportsFormulaEditing:
supportsImplicitEditing
setSupportsImplicitEditing:
allowFreeformFormulaText
setAllowFreeformFormulaText:
allowWhitespaceInFormulas
setAllowWhitespaceInFormulas:
showsHideUnhideUI
setShowsHideUnhideUI:
exportPermanentHidingState
setExportPermanentHidingState:
showsCellOverflowIndicator
setShowsCellOverflowIndicator:
supportsAutofill
setSupportsAutofill:
usesLimitedNumberFormatInspector
setUsesLimitedNumberFormatInspector:
headersFrozenByDefault
setHeadersFrozenByDefault:
createLargeDefaultTables
setCreateLargeDefaultTables:
tableNameEnabledInNewTables
setTableNameEnabledInNewTables:
supportsRowColumnAdderKnob
setSupportsRowColumnAdderKnob:
supportsDragDropMoveMode
setSupportsDragDropMoveMode:
supportsDynamicallyHidingRowColumnForDragDrop
setSupportsDynamicallyHidingRowColumnForDragDrop:
formulaEditorEvaluatesFormulas
setFormulaEditorEvaluatesFormulas:
showReferenceHighlightsOnFormulaCellSelection
setShowReferenceHighlightsOnFormulaCellSelection:
tokenizeFormulaStringLiterals
setTokenizeFormulaStringLiterals:
exportsCellComments
setExportsCellComments:
exportsCellAnnotations
setExportsCellAnnotations:
supportsCellCommentsActivityLines
setSupportsCellCommentsActivityLines:
cellEditorsCanScrollToNonLocalTableSelection
setCellEditorsCanScrollToNonLocalTableSelection:
supportsRepeatHeaderRowsOnEachPage
setSupportsRepeatHeaderRowsOnEachPage:
supportsTableTranspose
setSupportsTableTranspose:
supportsRowMovesInPaginatedTables
setSupportsRowMovesInPaginatedTables:
disableImplicitNaming
setDisableImplicitNaming:
supportsComplexReorganizeUI
setSupportsComplexReorganizeUI:
supportsQuickFilterUI
setSupportsQuickFilterUI:
pasteFilterHidingAsUserHiding
setPasteFilterHidingAsUserHiding:
allowsFullyFilteredTables
setAllowsFullyFilteredTables:
supportsTableColumnAutocomplete
setSupportsTableColumnAutocomplete:
supportsInlineAttachments
setSupportsInlineAttachments:
followsLinksOnFirstTap
setFollowsLinksOnFirstTap:
supportsBidiTablesUI
setSupportsBidiTablesUI:
supportsPlaceholderGeometry
setSupportsPlaceholderGeometry:
supportsStockUI
setSupportsStockUI:
shouldZoomOutOnEndEditing
setShouldZoomOutOnEndEditing:
forceZoomInOnBeginEditing
setForceZoomInOnBeginEditing:
supportsCategorization
setSupportsCategorization:
supportsPivotTables
setSupportsPivotTables:
supportsCopySnapshot
setSupportsCopySnapshot:
structuredTextImportConfidenceThreshold
setStructuredTextImportConfidenceThreshold:
structuredTextImportConfidenceThresholdForCanvas
setStructuredTextImportConfidenceThresholdForCanvas:
structuredTextImportSizeLimit
setStructuredTextImportSizeLimit:
allowsBlackDragDropBackground
setAllowsBlackDragDropBackground:
supportsAddBodyRowAtBottomSiriKitIntent
setSupportsAddBodyRowAtBottomSiriKitIntent:
_supportsContainedTextEditing
_showsCellEditingToolbar
_supportsAutomaticNumberKeyboard
_supportsMergedCells
_supportsHiddenCells
_returnWhileEditingNavigates
_tabWhileEditingNavigates
_continuesEditingAfterNavigation
_arrowKeyAtEdgeWhileEditingNavigates
_arrowKeysWrap
_arrowKeysNavigateWhenEditingBeganByTyping
_backTabWraps
_tabAtEdgeAddsRow
_tabAtEdgeAddsColumn
_pastesTile
_allowHorizontalAutoresize
_selectsCellOnInitialTap
_dragByHandleOnly
_cornersCanDragResize
_supportsControlCells
_controlCellUIAlwaysVisible
_supportsActionMenu
_hasLargerFonts
_supportsFrozenHeaders
_supportsAutoResizedTables
_supportsCreateChartFromSelection
_selectionUsesBezierPath
_usesSelectionChromeResizer
_showsChromeWhileEditingCell
_showsSelectionKnobsWhileEditingCell
_showsCellWarningIndicator
_supportsCanvasReferenceEditing
_usesLimitedAutomaticFormatParsing
_supportsFormulaEditing
_supportsImplicitEditing
_allowFreeformFormulaText
_allowWhitespaceInFormulas
_showsHideUnhideUI
_exportPermanentHidingState
_showsCellOverflowIndicator
_supportsAutofill
_usesLimitedNumberFormatInspector
_headersFrozenByDefault
_createLargeDefaultTables
_tableNameEnabledInNewTables
_supportsRowColumnAdderKnob
_supportsDragDropMoveMode
_supportsDynamicallyHidingRowColumnForDragDrop
_formulaEditorEvaluatesFormulas
_showReferenceHighlightsOnFormulaCellSelection
_tokenizeFormulaStringLiterals
_exportsCellComments
_exportsCellAnnotations
_supportsCellCommentsActivityLines
_cellEditorsCanScrollToNonLocalTableSelection
_supportsRepeatHeaderRowsOnEachPage
_supportsTableTranspose
_supportsRowMovesInPaginatedTables
_disableImplicitNaming
_supportsComplexReorganizeUI
_supportsQuickFilterUI
_pasteFilterHidingAsUserHiding
_allowsFullyFilteredTables
_supportsTableColumnAutocomplete
_supportsInlineAttachments
_followsLinksOnFirstTap
_supportsBidiTablesUI
_supportsPlaceholderGeometry
_supportsStockUI
_shouldZoomOutOnEndEditing
_forceZoomInOnBeginEditing
_supportsCategorization
_supportsPivotTables
_supportsCopySnapshot
_allowsBlackDragDropBackground
_supportsAddBodyRowAtBottomSiriKitIntent
_maxNumberOfRows
_maxNumberOfColumns
_maxNumberOfPopulatedCells
_structuredTextImportConfidenceThreshold
_structuredTextImportConfidenceThresholdForCanvas
_structuredTextImportSizeLimit
TI,N,V_maxNumberOfRows
TI,N,V_maxNumberOfColumns
TI,N,V_maxNumberOfPopulatedCells
TB,N,V_supportsContainedTextEditing
TB,N,V_showsCellEditingToolbar
TB,N,V_supportsAutomaticNumberKeyboard
TB,N,V_supportsMergedCells
TB,N,V_supportsHiddenCells
TB,N,V_returnWhileEditingNavigates
TB,N,V_tabWhileEditingNavigates
TB,N,V_continuesEditingAfterNavigation
TB,N,V_arrowKeyAtEdgeWhileEditingNavigates
TB,N,V_arrowKeysWrap
TB,N,V_arrowKeysNavigateWhenEditingBeganByTyping
TB,N,V_backTabWraps
TB,N,V_tabAtEdgeAddsRow
TB,N,V_tabAtEdgeAddsColumn
TB,N,V_pastesTile
TB,N,V_allowHorizontalAutoresize
TB,N,V_selectsCellOnInitialTap
TB,N,V_dragByHandleOnly
TB,N,V_cornersCanDragResize
TB,N,V_supportsControlCells
TB,N,V_controlCellUIAlwaysVisible
TB,N,V_supportsActionMenu
TB,N,V_hasLargerFonts
TB,N,V_supportsFrozenHeaders
TB,N,V_supportsAutoResizedTables
TB,N,V_supportsCreateChartFromSelection
TB,N,V_selectionUsesBezierPath
TB,N,V_usesSelectionChromeResizer
TB,N,V_showsChromeWhileEditingCell
TB,N,V_showsSelectionKnobsWhileEditingCell
TB,N,V_showsCellWarningIndicator
TB,N,V_supportsCanvasReferenceEditing
TB,N,V_usesLimitedAutomaticFormatParsing
TB,N,V_supportsFormulaEditing
TB,N,V_supportsImplicitEditing
TB,N,V_allowFreeformFormulaText
TB,N,V_allowWhitespaceInFormulas
TB,N,V_showsHideUnhideUI
TB,N,V_exportPermanentHidingState
TB,N,V_showsCellOverflowIndicator
TB,N,V_supportsAutofill
TB,N,V_usesLimitedNumberFormatInspector
TB,N,V_headersFrozenByDefault
TB,N,V_createLargeDefaultTables
TB,N,V_tableNameEnabledInNewTables
TB,N,V_supportsRowColumnAdderKnob
TB,N,V_supportsDragDropMoveMode
TB,N,V_supportsDynamicallyHidingRowColumnForDragDrop
TB,N,V_formulaEditorEvaluatesFormulas
TB,N,V_showReferenceHighlightsOnFormulaCellSelection
TB,N,V_tokenizeFormulaStringLiterals
TB,N,V_exportsCellComments
TB,N,V_exportsCellAnnotations
TB,N,V_supportsCellCommentsActivityLines
TB,N,V_cellEditorsCanScrollToNonLocalTableSelection
TB,N,V_supportsRepeatHeaderRowsOnEachPage
TB,N,V_supportsTableTranspose
TB,N,V_supportsRowMovesInPaginatedTables
TB,N,V_disableImplicitNaming
TB,N,V_supportsComplexReorganizeUI
TB,N,V_supportsQuickFilterUI
TB,N,V_pasteFilterHidingAsUserHiding
TB,N,V_allowsFullyFilteredTables
TB,N,V_supportsTableColumnAutocomplete
TB,N,V_supportsInlineAttachments
TB,N,V_followsLinksOnFirstTap
TB,N,V_supportsBidiTablesUI
TB,N,V_supportsPlaceholderGeometry
TB,N,V_supportsStockUI
TB,N,V_shouldZoomOutOnEndEditing
TB,N,V_forceZoomInOnBeginEditing
TB,N,V_supportsCategorization
TB,N,V_supportsPivotTables
TB,N,V_supportsCopySnapshot
Td,N,V_structuredTextImportConfidenceThreshold
Td,N,V_structuredTextImportConfidenceThresholdForCanvas
TQ,N,V_structuredTextImportSizeLimit
TB,N,V_allowsBlackDragDropBackground
TB,N,V_supportsAddBodyRowAtBottomSiriKitIntent
initWithOwnerDeletion:
initWithOwnerInsertion:fromOwnerUID:
initWithTransposeTable:transposedBodyRange:numberOfFooterRows:
initForRemoveRowsOrColumnsFromTable:rowColumnUuids:areRows:
initForInsertingRowsOrColumnsIntoTable:rowColumnUuids:areRows:
initForMovingRowsOrColumnsInTable:rowColumnUuids:shuffleMap:areRows:srcTract:destTract:
initForSortWithTableUID:rowUids:shuffleMap:
initForReorderRowsWithTableUID:rowUids:shuffleMap:
initForMovingRegionWithSrcTableUID:srcTract:dstTableUID:destTract:
initForCategorizedTableBaseToChromeRewriterWithSrcTableUID:srcTract:dstTableUID:destTract:coordMapper:
initForCategorizedTableChromeToBaseRewriterWithSrcTableUID:srcTract:dstTableUID:destTract:coordMapper:srcCoordMapper:fromTableUID:
initForMergeCellsWithTableUID:columnUids:rowUids:mergeSource:
initForUndoMergeCellsWithTableUID:columnUids:rowUids:mergeSource:
initForMergeOriginsMovedWithMap:reverseMap:inTableUID:
initForPastingCellsWithTableUID:columnUids:rowUids:
initForTableUIDReassignment:
initForGroupBy:withGroupByChange:
initForGroupBy:groupNodeUIDReassignment:
initWithPivotRuleChange:
pivotInfo
setPivotInfo:
_pivotInfo
T@"TSTFormulaRewrite_PivotInfo",&,N,V_pivotInfo
hasAnyDateArgumentsToFunction:
autofillSelection
setAutofillSelection:
_autofillSelection
T@"TSTAutofillSelection",&,N,V_autofillSelection
setDirtyCellRange:
dirtyCellRanges
setDirtyStrokeRange:
dirtyStrokeRange
invalidateAllChrome
setInvalidateAllChrome:
invalidateAllChromeCaches
setInvalidateAllChromeCaches:
invalidateColumnChrome
setInvalidateColumnChrome:
invalidateRowChrome
setInvalidateRowChrome:
hideChromeContextMenuButton
setHideChromeContextMenuButton:
invalidateKnobs
setInvalidateKnobs:
invalidateSelection
setInvalidateSelection:
invalidateTableName
setInvalidateTableName:
updateEditorRemainders
setUpdateEditorRemainders:
syncReferenceHighlightState
setSyncReferenceHighlightState:
setSetNeedsDisplay:
hideStepperHUD
setHideStepperHUD:
expandDirtyRegionForReferences
setExpandDirtyRegionForReferences:
repositionStockPopover
setRepositionStockPopover:
_dirtyCellRanges
_invalidateAllChrome
_invalidateAllChromeCaches
_invalidateColumnChrome
_invalidateRowChrome
_hideChromeContextMenuButton
_invalidateKnobs
_invalidateSelection
_invalidateTableName
_updateEditorRemainders
_syncReferenceHighlightState
_setNeedsDisplay
_hideStepperHUD
_expandDirtyRegionForReferences
_repositionStockPopover
_dirtyStrokeRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dirtyStrokeRange
TB,N,V_invalidateAllChrome
TB,N,V_invalidateAllChromeCaches
TB,N,V_invalidateColumnChrome
TB,N,V_invalidateRowChrome
TB,N,V_hideChromeContextMenuButton
TB,N,V_invalidateKnobs
TB,N,V_invalidateSelection
TB,N,V_invalidateTableName
TB,N,V_updateEditorRemainders
TB,N,V_syncReferenceHighlightState
TB,N,V_setNeedsDisplay
TB,N,V_hideStepperHUD
TB,N,V_expandDirtyRegionForReferences
TB,N,V_repositionStockPopover
initWithLayout:canvas:
finishInit
willBeRemoved
updateChildrenFromLayout
hyperlinkRegions
updateFromLayout
tableRepDelegateClass
p_countOfIdenticalCellsBetweenOutgoingTableInfo:incomingTableInfo:
magicMoveAttributeMatchPercentBetweenOutgoingObject:incomingObject:mixingTypeContext:
containerInfo
T@"NSObject<TSDContainerInfo>",R,N
searchSelectionBounds
setSearchSelectionBounds:
ratingsDragCellID
setRatingsDragCellID:
references
aspectOperationIsInProgress
zoomOperationIsInProgress
cellDragController
setCellDragController:
selectionDragAbortedOnNewSelection
setSelectionDragAbortedOnNewSelection:
visibleFillKnobs
setVisibleFillKnobs:
T{CGRect={CGPoint=dd}{CGSize=dd}},N
T{TSUCellCoord=ISBB},N
T@"TSTTableReferences",R,N
T@"TSTSelectionDragController",W,N
T@"NSSet",C,N
textFieldShouldBeginEditing:
textFieldDidBeginEditing:
textFieldShouldEndEditing:
textFieldDidEndEditing:
textFieldDidEndEditing:reason:
textField:shouldChangeCharactersInRange:replacementString:
textFieldDidChangeSelection:
textFieldShouldClear:
textFieldShouldReturn:
textField:editMenuForCharactersInRange:suggestedActions:
displayLayer:
drawLayer:inContext:
layerWillDraw:
layoutSublayersOfLayer:
actionForLayer:forKey:
canvasVisibleRect
hitRep:withPrecision:
attachmentCellRepForCellID:optionalCell:
hasVisibleCellWarnings
viewsOverlappingTableCells
p_isTableRenderingRotated
layerFrameInScaledCanvas
p_removeObservers
p_addObservers
asyncPostTextChangedInRange:
invalidateEditingCell
deviceBoundsForCellRange:
canvasBoundsForCellRange:
boundsForCellSelection:
contentsRectForCellRangeAcrossSpaces:contentsCenterInfo:canvasFrame:contentsRect:
editorSelection
logicalCellIDForUnscaledCanvasPoint:
p_columnForCellID:useCache:
p_cellIDForHyperlinkField:
p_horizontalAlignmentTransformForHyperlinkWithBounds:inCell:
naturalBoundsRectForHyperlinkField:
p_naturalBoundsRectForHyperlinkField:cellID:column:contentFrame:horizontalAlignmentTransform:
hyperlinkContainerRep
p_contentFrameWithCellID:
p_horizontalAlignmentTransformForHyperlinkWithColumn:cell:cellID:
validateStrokesInEditingSpillingTextRange
validateVisibleRect
isFullyVisibleWithBorder:
p_updateDynamicModePropertiesForContainedTextEditing
p_updateDynamicModePropertiesForContainedTextEditingWithSpillingTextRange:
p_resetDynamicModePropertiesForContainedTextEditing
wantsActivityLine
setTableChrome:
didDrawCellImageFill:inCellRange:
currentAnimation
pushAnimation:
popAnimation
p_addTexture:forAnimationStage:isFinal:description:
textureForDescription:
p_drawTableNameInContext:animation:
p_alignedLayerFrameForLayoutSpace:transform:
validateFrozenHeaderCorner
validateFrozenHeaderRows
validateFrozenHeaderColumns
validateFrozenHeaderTableBodyMask
invalidateFrozenHeaders
p_drawBackgroundFillInLayoutSpace:gridRange:context:
p_drawFinalElements:inContext:
p_drawLayoutSpace:range:inContext:
p_drawLayoutSpace:dirtyRect:inContext:
p_lockAndDrawLayoutSpace:checkFrameHasWidthAndHeight:dirtyRect:inContext:
canDrawInBackgroundDuringScroll
mustDrawOnMainThreadForInteractiveCanvas
canDrawInParallel
p_manageEmptyPivotMessage
p_scaledCanvasFrame
p_positionEmptyPivotMessage
p_deleteEmptyPivotMessage
p_fontColorAtCellID:cell:
p_drawingCheckboxOrRatingInCell:cellID:
p_drawCheckboxOrRatingInContext:viewScale:contentFrame:cell:cellID:
p_drawGroupingArrowInContext:contentFrame:cell:cellID:groupingArrowState:alignedClipFrame:verticalAlignment:wpColumn:
p_drawAnimation:inContext:
p_getImageFrameForAnimation:
p_cellAtUnscaledPoint:
tappedControlCellAtUnscaledPoint:
tappedStockCellAtUnscaledPoint:
tableRepIsBeingRemovedFromBackgroundLayout
setTableRepIsBeingRemovedFromBackgroundLayout:
animationController
setAnimationController:
tableChrome
canvasReferenceController
isZoomToEditOperationInProgress
isTableNameValid
setTableNameValid:
shouldRepositionStockPopover
setShouldRepositionStockPopover:
zoomToEditOperationIsInProgress
setZoomToEditOperationIsInProgress:
setAspectOperationIsInProgress:
setZoomOperationIsInProgress:
currentScreenScale
setCurrentScreenScale:
dirtyCellRegionGatherer
setDirtyCellRegionGatherer:
isRecursivelyDrawingInContext
setRecursivelyDrawingInContext:
animationStack
zoomToEditVisibleCellRange
setZoomToEditVisibleCellRange:
cellEditingMaskLayers
setCellEditingMaskLayers:
findSelectionHighlightLayer
setFindSelectionHighlightLayer:
_tableRepIsBeingRemovedFromBackgroundLayout
_selectionDragAbortedOnNewSelection
_isZoomToEditOperationInProgress
_tableNameValid
_shouldRepositionStockPopover
_zoomToEditOperationIsInProgress
_aspectOperationIsInProgress
_zoomOperationIsInProgress
_recursivelyDrawingInContext
_ratingsDragCellID
_cellDragController
_visibleFillKnobs
_animationController
_tableChrome
_canvasReferenceController
_currentScreenScale
_dirtyCellRegionGatherer
_animationStack
_cellEditingMaskLayers
_findSelectionHighlightLayer
_zoomToEditVisibleCellRange
_searchSelectionBounds
tableNameValid
TB,N,GisTableNameValid,V_tableNameValid
TB,N,V_shouldRepositionStockPopover
TB,N,V_zoomToEditOperationIsInProgress
TB,N,V_aspectOperationIsInProgress
TB,N,V_zoomOperationIsInProgress
Td,N,V_currentScreenScale
T@"TSTCellRegionGatherer",&,N,V_dirtyCellRegionGatherer
recursivelyDrawingInContext
TB,N,GisRecursivelyDrawingInContext,V_recursivelyDrawingInContext
T@"NSMutableArray",R,N,V_animationStack
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_zoomToEditVisibleCellRange
TB,R,N,V_dragByHandleOnly
T@"NSMutableArray",&,N,V_cellEditingMaskLayers
T@"CAShapeLayer",&,N,V_findSelectionHighlightLayer
TB,V_tableRepIsBeingRemovedFromBackgroundLayout
T@"TSTLayout",R,N
T@"TSTLayoutEngine",R,N
T@"<TSTTableAnimationController>",W,N,V_animationController
T@"<TSTTableRepDelegate>",R,N,V_delegate
T{CGAffineTransform=dddddd},R,N
T@"<TSTTableChromeProvider>",R,N,V_tableChrome
T@"<TSTCanvasReferenceController>",R,W,N,V_canvasReferenceController
T@"TSTCellSelection",R,N
TB,R,N,V_isZoomToEditOperationInProgress
T@"TSTAnimation",R,N
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_searchSelectionBounds
T{TSUCellCoord=ISBB},N,V_ratingsDragCellID
T@"TSTTableReferences",R,N,V_references
T@"TSTSelectionDragController",W,N,V_cellDragController
TB,N,V_selectionDragAbortedOnNewSelection
TB,R,N,V_selectionUsesBezierPath
TB,R,N,V_selectsCellOnInitialTap
TB,R,N,V_usesSelectionChromeResizer
T@"NSSet",C,N,V_visibleFillKnobs
beginTableChunk:
endTableChunk:
beginTableNameForChunk:
endTableNameForChunk:
beginTableLayoutSpace:
endTableLayoutSpace:
beginTableRow:
endTableRow:
beginTableCell:withCellID:cellHasContents:cellIsPrimary:
endTableCell:withCellID:cellHasContents:cellIsPrimary:
beginCheckboxCell:
endCheckboxCell
beginRatingCell:
endRatingCell
childRepIsOnDocSetupCanvas:
childRepIsMasterDrawable:
fixedColumnWidth:
@24@0:8@16
v16@0:8
@44@0:8@16@24B32@36
@32@0:8@16@24
@72@0:8@16@24@32@40B48@52@60B68
B16@0:8
{_NSRange=QQ}48@0:8@16#24{_NSRange=QQ}32
B24@0:8@16
{_NSRange=QQ}32@0:8{_NSRange=QQ}16
Q24@0:8Q16
v24@0:8@16
v40@0:8@16{_NSRange=QQ}24
v32@0:8@16@24
v48@0:8@16@24{_NSRange=QQ}32
@16@0:8
@32@0:8{_NSRange=QQ}16
@36@0:8{_NSRange=QQ}16B32
v32@0:8{_NSRange=QQ}16
v24@0:8Q16
v32@0:8Q16@24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16r^{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32
v72@0:8@16r^{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32{TSCEReplaceFormulaOptions=BBBBB{TSKUIDStruct=QQ}@}40
v48@0:8r^{TSUCellCoord=ISBB}16r^{TSKUIDStruct=QQ}24@32r^{TSCEReplaceFormulaOptions=BBBBB{TSKUIDStruct=QQ}@}40
v32@0:8r^{TSUCellCoord=ISBB}16r^{TSKUIDStruct=QQ}24
v24@0:8r^v16
v24@0:8r^{TSKUIDStruct=QQ}16
v24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
v24@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16
@"TSCECalculationEngine"16@0:8
v40@0:8@"<TSCEFormulaReturning>"16r^{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32
v72@0:8@"<TSCEFormulaReturning>"16r^{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32{TSCEReplaceFormulaOptions=BBBBB{TSKUIDStruct=QQ}@}40
v48@0:8r^{TSUCellCoord=ISBB}16r^{TSKUIDStruct=QQ}24@"TSCEReferenceSetWrapper"32r^{TSCEReplaceFormulaOptions=BBBBB{TSKUIDStruct=QQ}@}40
B24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
@"TSCEFormulasToSet"
{TSCECellRefSet="_coordsForOwnerUid"{map<TSKUIDStruct, TSCECellCoordSet, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECellCoordSet>>>="__tree_"{__tree<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSCECellCoordSet>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>>="__value_"Q}}}}
B20@0:8C16
@36@0:8@16C24@28
{TSKUIDStruct=QQ}16@0:8
I16@0:8
^v16@0:8
v60@0:8@16@24C32{TSKUIDStruct=QQ}36@52
@60@0:8@16@24C32{TSKUIDStruct=QQ}36@52
@32@0:8r^v16@24
v40@0:8r^v16@24@32
v28@0:8@16C24
v40@0:8^v16Q24@32
v32@0:8@16B24B28
@32@0:8C16C20r^{TSKUIDStruct=QQ}24
@20@0:8C16
@52@0:8@16C24Q28Q36^{TSUPreserveFlags=C}44
v36@0:8@16@24C32
v32@0:8@16C24C28
@56@0:8r^{TSKUIDStruct=QQ}16I24@28C36@40^Q48
v44@0:8r^{TSKUIDStruct=QQ}16@24C32@36
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}16@0:8
{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16@0:8
v24@0:8@?16
B24@0:8r^{TSKUIDStruct=QQ}16
@32@0:8@16S24B28
@20@0:8B16
@36@0:8B16@20S28B32
{TSKUIDStruct=QQ}44@0:8@16q24C32@36
@36@0:8B16@20q28
v32@0:8^B16@?24
v36@0:8C16^B20@?28
v28@0:8C16@?20
v40@0:8C16C20^B24@?32
v32@0:8C16C20@?24
@24@0:8r^{TSKUIDStruct=QQ}16
@28@0:8r^{TSKUIDStruct=QQ}16C24
C16@0:8
{TSKUIDStruct="_lower"Q"_upper"Q}
@"TSCECellValue"
@"TSTGroupValueTuple"
@"TSTGroupBy"
{unordered_map<TSKUIDStruct, TSTAggNode *, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSTAggNode *>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
@"NSMutableDictionary"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
{TSUIndexSet="_isEmpty"b1"_hasSingleRange"b1"_singleRange"{TSUIndexRange="_begin"q"_end"q}"_multipleRanges"^{?}}
@"TSTGroupNode"
@"TSTGroupNodeFormatManager"
{unordered_map<TSKUIDStruct, TSTGroupNode *, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSTGroupNode *>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
@"TSCEMutableUIDSet"
{vector<TSUCellCoord, std::allocator<TSUCellCoord>>="__begin_"^{TSUCellCoord}"__end_"^{TSUCellCoord}"__end_cap_"{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>="__value_"^{TSUCellCoord}}}
v32@0:8^{TSCEWarningReportingContext=BB@}16@24
v24@0:8^{TSCEWarningReportingContext=BB@}16
v32@0:8^{TSCEWarningReportingContext=BB@}16c24c28
@24@0:8^{_NSZone=}16
@40@0:8@16r^{TSKUIDStruct=QQ}24{TSUCellCoord=ISBB}32
v20@0:8B16
@"NSDictionary"
@32@0:8@16{TSUCellCoord=ISBB}24
@32@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24
{_NSRange=QQ}16@0:8
@84@0:8@16@24^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}32^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}40@48q56{_NSRange=QQ}64B80
@84@0:8@16@24{TSUCellCoord=ISBB}32{TSUCellCoord=ISBB}40@48q56{_NSRange=QQ}64B80
@64@0:8@16@24{TSUCellCoord=ISBB}32{TSUCellCoord=ISBB}40@48q56
@56@0:8@16@24{TSUCellCoord=ISBB}32{TSUCellCoord=ISBB}40@48
@56@0:8@16@24{TSUCellCoord=ISBB}32{TSUCellCoord=ISBB}40q48
@48@0:8@16@24{TSUCellCoord=ISBB}32{TSUCellCoord=ISBB}40
@64@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24q40{TSUCellCoord=ISBB}48{TSUCellCoord=ISBB}56
@32@0:8@16q24
@40@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24
@40@0:8@16{TSUCellCoord=ISBB}24q32
@32@0:8@16I24I28
@32@0:8@16S24I28
@40@0:8@16q24I32I36
@40@0:8@16@24{TSUColumnRowOffset=ii}32
{TSUCellCoord=ISBB}16@0:8
{TSUCellCoord=ISBB}24@0:8@16
v32@0:8^v16@24
@56@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32q40{TSUCellCoord=ISBB}48
@64@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32{TSUCellCoord=ISBB}40{TSUCellCoord=ISBB}48q56
@28@0:8@16B24
v32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
v32@0:8q16I24I28
B24@0:8{TSUCellCoord=ISBB}16
B24@0:8o^C16
q16@0:8
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@0:8
v48@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@"TSTTableInfo"
@"TSTCellUIDRegion"
@"TSTCellRegion"
{_NSRange="location"Q"length"Q}
{TSKUIDStructCoord="_column"{TSKUIDStruct="_lower"Q"_upper"Q}"_row"{TSKUIDStruct="_lower"Q"_upper"Q}}
{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}56@0:8{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16@48
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}56@0:8{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16@48
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}32@0:8@16@24
{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}32@0:8@16@24
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}40@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24^{TSUPreserveFlags=C}32
{TSUCellCoord=ISBB}40@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24^{TSUPreserveFlags=C}32
@24@0:8@"TSCECalculationEngine"16
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}32@0:8@"NSString"16@"TSCEReferenceParsingContext"24
{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}32@0:8@"NSString"16@"TSCEReferenceParsingContext"24
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}40@0:8@"NSString"16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24^{TSUPreserveFlags=C}32
{TSUCellCoord=ISBB}40@0:8@"NSString"16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24^{TSUPreserveFlags=C}32
@"TSCECategoryRef"32@0:8@"NSString"16@"TSCEReferenceParsingContext"24
@"TSCECategoryRef"24@0:8@"TSCEReferenceParsingContext"16
@"TSCEWrappedRangeRef"24@0:8@"TSCEReferenceParsingContext"16
@"TSCECellTractRef"24@0:8@"TSCEReferenceParsingContext"16
{TSUChromeCellCoord={TSUCellCoord=ISBB}}48@0:8@16^{TSCETableResolver=^^?}24^{TSUPreserveFlags=C}32^@40
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}56@0:8@16^{TSCETableResolver=^^?}24@32^{TSCETableResolver=^^?}40@48
B48@0:8@16^@24^@32^@40
{TSKUIDStruct=QQ}64@0:8@16@24@32@40^{TSUPreserveFlags=C}48^Q56
@48@0:8@16@24Q32@40
@"TSCEStringManipulator"
@"TSCECalculationEngine"
@"NSCharacterSet"
B32@0:8{TSKUIDStruct=QQ}16
v32@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24
q24@0:8@16
q32@0:8@16@24
@32@0:8d16@24
q32@0:8@16@"<TSDMixingTypeContext>"24
@"NSArray"16@0:8
@20@0:8S16
@20@0:8I16
@"TSTStrokeLayer"20@0:8S16
@"TSTStrokeLayer"20@0:8I16
@"TSTTableStyle"16@0:8
v24@0:8@"TSTTableStyle"16
@"TSTCellStyle"16@0:8
v24@0:8@"TSTCellStyle"16
@"TSWPParagraphStyle"16@0:8
v24@0:8@"TSWPParagraphStyle"16
@"TSWPShapeStyle"16@0:8
v24@0:8@"TSWPShapeStyle"16
@"TSDStroke"16@0:8
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16@0:8
@32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16o^B24
{TSUModelRowIndex=I}16@0:8
{TSUModelColumnIndex=S}16@0:8
@"TSWPParagraphStyle"32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16o^B24
v24@0:8@?<v@?@"TSTCell"{TSUCellCoord=ISBB}^B>16
@72@0:8@16{TSKUIDStruct=QQ}24@40@48@56@64
@64@0:8@16r^v24r^v32@40@48@56
@56@0:8@16I24I28@32@40@48
@52@0:8@16@24@32@40B48
@60@0:8@16@24@32@40B48q52
@56@0:8@16@24@32@40@48
v38@0:8r^v16r^v24{TSUModelRowIndex=I}32{TSUModelColumnIndex=S}36
v40@0:8@16@24@32
v48@0:8@16@24@32@40
C18@0:8{TSUModelColumnIndex=S}16
B24@0:8Q16
{?=II}16@0:8
d16@0:8
v24@0:8d16
v20@0:8{TSUModelRowIndex=I}16
v18@0:8{TSUModelColumnIndex=S}16
i16@0:8
@24@0:8{TSUModelRowIndex=I}16C20
@22@0:8{TSUModelColumnIndex=S}16C18
v32@0:8{TSKUIDStruct=QQ}16
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@0:8Q16
Q24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
Q20@0:8{TSUModelRowIndex=I}16
Q18@0:8{TSUModelColumnIndex=S}16
@32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
i32@0:8o@16Q24
i32@0:8o@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24
B24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
i36@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32
i32@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24
@24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
v40@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24@32
i48@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32B36@40
i40@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32B36
i24@0:8@16
i32@0:8@16B24B28
@32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16^B24
C24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
@32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16@24
i24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
i28@0:8@16{TSUModelRowIndex=I}24
@28@0:8{TSUModelRowIndex=I}16o^B20
i26@0:8@16{TSUModelColumnIndex=S}24
@26@0:8{TSUModelColumnIndex=S}16o^B18
@36@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16B24o^Q28
@24@0:8Q16
v44@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16B24^@28^@36
v40@0:8Q16^@24^@32
d28@0:8{TSUModelRowIndex=I}16o^B20
d26@0:8{TSUModelColumnIndex=S}16o^B18
v28@0:8d16{TSUModelRowIndex=I}24
v26@0:8d16{TSUModelColumnIndex=S}24
d24@0:8Q16
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
i52@0:8{_NSRange=QQ}16r^v32@40B48
i42@0:8{TSUModelColumnIndex=S}16r^v18@26Q34
i48@0:8{TSUModelRowIndex=I}16r^v20@28Q36B44
v24@0:8{TSUModelRowIndex=I}16{TSUModelRowIndex=I}20
v20@0:8{TSUModelColumnIndex=S}16{TSUModelColumnIndex=S}18
v36@0:8{_NSRange=QQ}16{TSUModelRowIndex=I}32
v34@0:8{_NSRange=QQ}16{TSUModelColumnIndex=S}32
C20@0:8{TSUModelRowIndex=I}16
v28@0:8C16r^{TSUModelRowIndex=I}20
v28@0:8C16r^{TSUModelColumnIndex=S}20
@28@0:8{TSUCellCoord=ISBB}16B24
@28@0:8S16o^q20
@32@0:8S16B20o^q24
@20@0:8{TSUModelRowIndex=I}16
@24@0:8{TSUCellCoord=ISBB}16
v32@0:8@16I24i28
v32@0:8@16S24i28
v48@0:8@16I24i28{TSTSimpleRange=qQ}32
v48@0:8@16S24i28{TSTSimpleRange=qQ}32
@32@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24
i36@0:8o^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32
i40@0:8o^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32B36
v28@0:8@16B24
v36@0:8r^v16@24B32
v36@0:8@16B24B28B32
v36@0:8@16{TSUColumnRowOffset=ii}24B32
{TSCECellCoordSet={map<unsigned short, TSUIndexSet, std::less<unsigned short>, std::allocator<std::pair<const unsigned short, TSUIndexSet>>>={__tree<std::__value_type<unsigned short, TSUIndexSet>, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>, std::allocator<std::__value_type<unsigned short, TSUIndexSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned short, TSUIndexSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>>=Q}}}}16@0:8
v32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUModelCellCoord={TSUCellCoord=ISBB}}24@0:8@16
v40@0:8@16Q24@?32
B32@0:8{TSUCellCoord=ISBB}16^@24
B24@0:8^@16
B32@0:8^@16^B24
v40@0:8@16B24B28@32
S16@0:8
v20@0:8S16
@"TSTHiddenStateFormulaOwner"
@"TSTStrokeSidecar"
{vector<TSTCellValueType, std::allocator<TSTCellValueType>>="__begin_"^C"__end_"^C"__end_cap_"{__compressed_pair<TSTCellValueType *, std::allocator<TSTCellValueType>>="__value_"^C}}
{map<unsigned long, TSTGroupingType, std::less<unsigned long>, std::allocator<std::pair<const unsigned long, TSTGroupingType>>>="__tree_"{__tree<std::__value_type<unsigned long, TSTGroupingType>, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, TSTGroupingType>, std::less<unsigned long>, true>, std::allocator<std::__value_type<unsigned long, TSTGroupingType>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned long, TSTGroupingType>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, TSTGroupingType>, std::less<unsigned long>, true>>="__value_"Q}}}
{TSUModelColumnIndex="_column"S}
{TSUModelRowIndex="_row"I}
@"TSTTableDataStore"
@"NSString"
@"TSTTableStylePreset"
@"TSTTableStyle"
@"TSTTableTranslator"
@"TSTCellStyle"
@"TSWPParagraphStyle"
@"TSWPShapeStyle"
@"TSTCellDictionary"
@"TSTConcurrentMutableCellUIDSet"
@"TSTConditionalStyleFormulaOwner"
@"TSTMergeOwner"
@"TSTCategoryOwner"
@"TSTPivotOwner"
@"TSTHiddenStatesOwner"
@"TSCEHauntedOwner"
@"TSTTableSortOrder"
@"TSTSortRuleReferenceTracker"
@"TSTColumnRowUIDMap"
@"TSTCellWillChangeDistributor"
@"TSWPStorage"
@"NSMapTable"
@"TSTStructuredTextImportRecord"
@"TSTTableFilterSet"
@"TSTPencilAnnotationOwner"
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@0:8
@"TSTCell"16@0:8
@"TSTCellFormulaSpec"16@0:8
v24@0:8{TSUCellCoord=ISBB}16
{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}
@"TSTCell"
@"TSTCellFormulaSpec"
{TSUCellRect="origin"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"size"{?="numberOfColumns"I"numberOfRows"I}}
@36@0:8@16B24@28
v28@0:8@16I24
@28@0:8I16o^I20
^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}24@0:8S16I20
q40@0:8@16S24I28^{?=IIIIIIIIIS}32
i24@0:8S16I20
@24@0:8S16I20
v28@0:8S16I20S24
v24@0:8I16I20
v28@0:8I16I20B24
@24@0:8I16I20
v32@0:8@16I24B28
@"NSPointerArray"
v32@0:8d16{TSUCellCoord=ISBB}24
{vector<std::pair<TSUCellCoord, double>, std::allocator<std::pair<TSUCellCoord, double>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::pair<TSUCellCoord, double> *, std::allocator<std::pair<TSUCellCoord, double>>>="__value_"^v}}
{unordered_map<unsigned short, double, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, double>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, double>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, double>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, double>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, double>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, double>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, double>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}
@32@0:8^{TSCEDateValue=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}16@24
^{TSCEDateValue=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}16@0:8
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@0:8
v24@0:8^v16
^{TSCEDateValue=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}
B40@0:8d16d24d32
d20@0:8I16
@40@0:8d16d24d32
@44@0:8I16d20d28d36
d32@0:8d16^B24
d32@0:8@16@24
v40@0:8@16{TSKUIDStruct=QQ}24
v48@0:8@16@24{TSKUIDStruct=QQ}32
v40@0:8@"NSString"16{TSKUIDStruct=QQ}24
v48@0:8@"NSString"16@"NSString"24{TSKUIDStruct=QQ}32
{unordered_set<TSUCellCoord, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<TSUCellCoord>>={__hash_table<TSUCellCoord, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<TSUCellCoord>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSUCellCoord, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSUCellCoord, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSUCellCoord, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSUCellCoord, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSUCellCoord, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSUCellCoord, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSUCellCoord, void *> *>, std::allocator<std::__hash_node<TSUCellCoord, void *>>>={__hash_node_base<std::__hash_node<TSUCellCoord, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSUCellCoord>>=Q}{__compressed_pair<float, std::equal_to<TSUCellCoord>>=f}}}16@0:8
@24@0:8r^v16
@"NSObject<OS_dispatch_semaphore>"
@41@0:8@16r^{TSKUIDStruct=QQ}24{TSUPreserveFlags=C}32^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}33
@40@0:8r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}24r^{TSKUIDStruct=QQ}32
@24@0:8r^{TSCECellTractRefCore={TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSKUIDStruct=QQ}C{TSUPreserveFlags=C}BBB}16
@32@0:8r^{TSUCellCoord=ISBB}16r^{TSUCellCoord=ISBB}24
@40@0:8r^{TSUCellCoord=ISBB}16r^{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32
@24@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16
@40@0:8r^v16@24r^{TSKUIDStruct=QQ}32
{TSUPreserveFlags=C}16@0:8
v17@0:8{TSUPreserveFlags=C}16
B24@0:8S16B20
B24@0:8I16B20
{TSUPreserveFlags=C}28@0:8r^{TSUCellCoord=ISBB}16B24
v24@0:8^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16
v20@0:8I16
v24@0:8r^{TSUIndexRange=qq}16
v24@0:8r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16
r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16@0:8
v24@0:8r^{TSUColumnRowOffset=ii}16
{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16@0:8
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16@0:8
v24@0:8r^{TSUCellCoord=ISBB}16
{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}32@0:8@16r^{TSKUIDStruct=QQ}24
v24@0:8r^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
{TSUCellCoord=ISBB}24@0:8I16I20
B40@0:8@16@24B32B36
B32@0:8@16@24
{TSCECellTractRefCore={TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSKUIDStruct=QQ}C{TSUPreserveFlags=C}BBB}16@0:8
v104@0:8{TSCECellTractRefCore={TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSKUIDStruct=QQ}C{TSUPreserveFlags=C}BBB}16
{TSCECellTractRefCore="_columns"{TSUIndexSet="_isEmpty"b1"_hasSingleRange"b1"_singleRange"{TSUIndexRange="_begin"q"_end"q}"_multipleRanges"^{?}}"_rows"{TSUIndexSet="_isEmpty"b1"_hasSingleRange"b1"_singleRange"{TSUIndexRange="_begin"q"_end"q}"_multipleRanges"^{?}}"_tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}"_spanType"C"_preserveFlags"{TSUPreserveFlags="_flags"C}"_preserveRectangular"B"_mixedColumnStartedWithPreserve"B"_mixedRowStartedWithPreserve"B}
@"NSString"24@0:8@"<TSCEReferenceResolving>"16
@"NSString"24@0:8@"<TSCEResolverContainer>"16
@"<TSCEResolverContainer>"28@0:8@"NSString"16B24
@"NSArray"24@0:8@"NSString"16
@"<TSCEReferenceResolving>"32@0:8@"NSString"16@"<TSCEReferenceResolving>"24
@"<TSCEReferenceResolving>"32@0:8@"NSString"16@"NSString"24
@"NSEnumerator"16@0:8
@"NSEnumerator"24@0:8Q16
@"NSString"24@0:8@"<TSKModel>"16
v24@0:8@"<TSKModelVisitor>"16
v28@0:8@16S24
v28@0:8@"TSCECalculationEngine"16S24
v24@0:8@"TSCECalculationEngine"16
@"TSPObject<TSCECalculationEngineRegistration>"16@0:8
@"<TSCEFormulaOwning>"16@0:8
I24@0:8Q16
@40@0:8q16{CGPoint=dd}24
@48@0:8q16@24@32@40
@52@0:8q16@24@32@40B48
@40@0:8{TSKUIDStruct=QQ}16@32
v40@0:8@16@24Q32
v48@0:8@16@24Q32Q40
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}44@0:8Q16{?=II}24I32I36I40
Q40@0:8{TSUCellCoord=ISBB}16I24I28I32I36
@24@0:8@"TSPObjectContext"16
v24@0:8@"TSDInfoGeometry"16
v24@0:8@"NSObject<TSDInfo>"16
@"TSDInfoGeometry"16@0:8
@"NSObject<TSDInfo>"16@0:8
@"TSPObject<TSDOwningAttachment>"16@0:8
v24@0:8@"TSPObject<TSDOwningAttachment>"16
B24@0:8@"NSObject<TSDInfo>"16
@"<TSDInfoUUIDPathPrefixComponentsProvider>"16@0:8
@"TSKCollaboratorCursor"24@0:8@"TSKSelectionPath"16
@24@0:8@?16
@"TSKSearch"24@0:8@?<v@?@"<TSKSearchReference>">16
v24@0:8@?<v@?@"<TSKSearchReference>">16
v24@0:8@"TSKSearch"16
@"TSKCommand"24@0:8@"NSObject<TSKSearchReplaceProvider>"16
v40@0:8@"NSString"16@"TSSTheme"24Q32
@"NSSet"16@0:8
v24@0:8@?<@"TSSStyle"@?@"TSSStyle">16
v24@0:8@"TSSStylesheet"16
v24@0:8@"TSSStyle"16
{TSKUIDStruct=QQ}20@0:8S16
{TSKUIDStruct=QQ}20@0:8I16
S32@0:8{TSKUIDStruct=QQ}16
I32@0:8{TSKUIDStruct=QQ}16
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}24@0:8@16
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}32@0:8{_NSRange=QQ}16
{_NSRange=QQ}24@0:8r^v16
r^v16@0:8
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}24@0:8r^v16
v28@0:8[16C]16I24
v28@0:8[16C]16S24
I24@0:8[16C]16
S24@0:8[16C]16
{TSKUIDStruct=QQ}28@0:8@16B24
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@0:8r^v16
{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}24@0:8@"NSIndexSet"16
@"NSMutableIndexSet"24@0:8r^v16
@"NSIndexSet"24@0:8r^v16
@"TSCEMutableUIDSet"28@0:8@"NSIndexSet"16B24
@"NSMutableIndexSet"28@0:8@"TSCEUIDSet"16B24
@"NSMutableIndexSet"36@0:8@"TSCEUIDSet"16B24@"TSCEMutableUIDSet"28
{TSKUIDStruct=QQ}28@0:8@"TSCEUIDSet"16B24
B20@0:8I16
B20@0:8S16
I20@0:8I16
S20@0:8S16
B32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
I32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
@32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
B36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16C32
B24@0:8I16C20
B24@0:8S16C20
C20@0:8I16
C20@0:8S16
@"NSIndexSet"32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
@"NSMutableIndexSet"32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
@"NSIndexSet"24@0:8@"TSTCellRegion"16
@"NSIndexSet"24@0:8@"NSIndexSet"16
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
@"TSTMergeListWrapper"32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
@"TSTMergeListWrapper"24@0:8@"TSTCellRegion"16
@"TSTCellRegion"24@0:8@"TSTCellRegion"16
@56@0:8@16@24I32I36@40@48
@48@0:8@16@24I32I36@40
@40@0:8@16@24I32I36
@64@0:8@16@24{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32{_NSRange=QQ}48
@72@0:8@16@24{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32{_NSRange=QQ}48@64
@40@0:8@16@24{TSUCellCoord=ISBB}32
@56@0:8@16@24@32B40q44B52
v28@0:8q16B24
v40@0:8@16@24d32
v40@0:8{TSUCellCoord=ISBB}16{TSUCellCoord=ISBB}24{TSUCellCoord=ISBB}32
v32@0:8@16{TSUCellCoord=ISBB}24
@18@0:8{TSUModelColumnIndex=S}16
Q32@0:8Q16@24
@28@0:8B16@20
Q24@0:8@16
v48@0:8@16@24@32d40
v24@0:8q16
v32@0:8{CGSize=dd}16
v32@0:8{CGPoint=dd}16
v32@0:8d16d24
v28@0:8{TSUColumnRowOffset=ii}16B24
B32@0:8@16@?24
i32@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24
i24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
v40@0:8@16{TSUCellCoord=ISBB}24@32
@32@0:8{TSUCellCoord=ISBB}16@24
v36@0:8i16@20{TSUCellCoord=ISBB}28
v48@0:8{TSUCellCoord=ISBB}16^B24^@32^q40
v64@0:8@16{TSUCellCoord=ISBB}24^B32^q40^i48^@56
v20@0:8i16
@18@0:8{TSUViewColumnIndex=S}16
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@0:8Q16
Q24@0:8{TSUCellCoord=ISBB}16
Q20@0:8I16
Q20@0:8S16
Q48@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
i32@0:8@16Q24
i32@0:8o@16{TSUCellCoord=ISBB}24
i36@0:8@16{TSUCellCoord=ISBB}24B32
i32@0:8@16{TSUCellCoord=ISBB}24
B24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
v36@0:8@16{TSUCellCoord=ISBB}24B32
i48@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24B32B36@40
i40@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24B32B36
v48@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24@32@40
@36@0:8@16B24B28B32
@32@0:8@16B24B28
i40@0:8@16{TSUCellCoord=ISBB}24@32
C24@0:8{TSUCellCoord=ISBB}16
C24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
i32@0:8@16r^{TSKUIDStruct=QQ}24
@28@0:8I16o^B20
@28@0:8S16o^B20
@36@0:8{TSUCellCoord=ISBB}16B24o^Q28
@32@0:8{TSUCellCoord=ISBB}16o^B24
@32@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16o^B24
v44@0:8{TSUCellCoord=ISBB}16B24^@28^@36
@28@0:8S16@20
@40@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16o^B32
{TSUCellCoord=ISBB}24@0:8{TSUCellCoord=ISBB}16
d28@0:8I16o^B20
d28@0:8S16o^B20
v28@0:8d16S24
v28@0:8d16I24
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@0:8{TSUCellCoord=ISBB}16
v28@0:8S16I20B24
i44@0:8S16r^v20@28Q36
i44@0:8I16r^v20@28Q36
i48@0:8I16r^v20@28Q36B44
v24@0:8S16I20
v36@0:8{_NSRange=QQ}16I32
v36@0:8{_NSRange=QQ}16S32
@24@0:8q16
v32@0:8@16@?24
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}24@0:8@16
i36@0:8o^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16{TSUCellCoord=ISBB}24B32
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}24@0:8I16I20
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}24@0:8S16S20
@32@0:8@16^@24
B56@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16o^{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}32o^{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}40o^{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}48
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@0:8{TSUCellCoord=ISBB}16
{TSUCellCoord=ISBB}48@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
B40@0:8@16^v24^v32
v40@0:8@16^v24^v32
@36@0:8@16B24^B28
@52@0:8{vector<TSKUIDStructCoord, std::allocator<TSKUIDStructCoord>>=^{TSKUIDStructCoord}^{TSKUIDStructCoord}{__compressed_pair<TSKUIDStructCoord *, std::allocator<TSKUIDStructCoord>>=^{TSKUIDStructCoord}}}16B40^B44
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}28@0:8{TSUCellCoord=ISBB}16B24
i32@0:8o@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24
i36@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24B32
@56@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16o^B48
B20@0:8B16
v96@0:8@16{TSKUIDStruct=QQ}24d40{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}48
v88@0:8@16@24@32q40@48{TSKUIDStruct=QQ}56{TSKUIDStruct=QQ}72
{TSUChromeColumnIndex=S}16@0:8
{TSUChromeRowIndex=I}16@0:8
S24@0:8@16
@28@0:8C16@?20
@28@0:8C16@20
@28@0:8C16r^v20
@24@0:8C16C20
{_NSRange=QQ}20@0:8I16
q24@0:8{TSUCellCoord=ISBB}16
B40@0:8{TSKUIDStruct=QQ}16q32
C24@0:8r^{TSKUIDStruct=QQ}16
C36@0:8{TSKUIDStruct=QQ}16C32
v40@0:8C16{TSKUIDStruct=QQ}20C36
d20@0:8C16
v28@0:8d16C24
@28@0:8i16@20
v32@0:8r^v16@24
{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}16@0:8
v64@0:8{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}16
@"TSTTableModel"
@"TSTConditionalStyleSet"
@"TSTTablePartitioner"
@"TSTLayoutEngine"
@"TSTSummaryModel"
@"TSTLayoutHint"
@"TSTCategoryOrder"
@"TSTPivotRowColumnOrder"
@"TSTHiddenStates"
@"TSCECoordMapper"
@"TSTArchivedLayoutEngineBundle"
{TSKUIDStructTract="_colIdList"{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}"_rowIdList"{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}}
B20@0:8i16
@20@0:8i16
f20@0:8i16
i20@0:8i16
d20@0:8i16
v40@0:8@16@24{TSUCellCoord=ISBB}32
@40@0:8@16@24@32
v56@0:8@16@24@32Q40@48
@64@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@32@40@48@56
@80@0:8@16@24r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}32@40@48@56@64@72
@56@0:8@16Q24B32B36@40@48
@48@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16Q32Q40
v56@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16Q32Q40@?48
@32@0:8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@24
c16@0:8
v20@0:8c16
@"TSULocale"
{vector<TSUCellRect, std::allocator<TSUCellRect>>="__begin_"^{TSUCellRect}"__end_"^{TSUCellRect}"__end_cap_"{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>="__value_"^{TSUCellRect}}}
@36@0:8@16r^v24C32
@44@0:8@16r^{TSKUIDStruct=QQ}24r^v32C40
v20@0:8C16
v28@0:8r^v16C24
{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16@0:8
{RefTypeHolder<TSCERangeRef, 1>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16@0:8
{vector<RefTypeHolder<TSCERangeRef, 0>, std::allocator<RefTypeHolder<TSCERangeRef, 0>>>=^v^v{__compressed_pair<RefTypeHolder<TSCERangeRef, 0> *, std::allocator<RefTypeHolder<TSCERangeRef, 0>>>=^v}}16@0:8
{vector<RefTypeHolder<TSCERangeRef, 1>, std::allocator<RefTypeHolder<TSCERangeRef, 1>>>=^v^v{__compressed_pair<RefTypeHolder<TSCERangeRef, 1> *, std::allocator<RefTypeHolder<TSCERangeRef, 1>>>=^v}}16@0:8
{TSUViewCellCoord={TSUCellCoord=ISBB}}16@0:8
{TSUModelCellCoord={TSUCellCoord=ISBB}}16@0:8
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16@0:8
v48@0:8{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16
@"TSCECellTractRef"
@"TSTColumnRowUIDMapper"
{RefTypeHolder<TSCERangeRef, 2>="_ref"{TSCERangeRef="range"{TSCERangeCoordinate="_topLeft"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"_bottomRight"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}}"_tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}}}
v24@0:8@?<v@?@"<TSTCellIteratorData>"^B>16
@"<TSTCellIteratorData>"16@0:8
@"TSTTableInfo"16@0:8
@72@0:8@16@24@32Q40Q48{TSUCellRect={TSUCellCoord=ISBB}{?=II}}56
@64@0:8@16@24Q32Q40{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48
@40@0:8@16Q24Q32
@56@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24Q40Q48
@48@0:8@16@24Q32Q40
{unordered_map<unsigned short, TSUCellRect, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, TSUCellRect>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, TSUCellRect>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSUCellRect>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSUCellRect>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, TSUCellRect>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSUCellRect>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSUCellRect>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}
@"TSTMutableCellIteratorData"
@"<TSTCellRegionIterating><TSTMutableCellIteratorDataUpdating>"
@"<TSTCellRegionIterating>"
@32@0:8Q16Q24
v48@0:8@16Q24@32Q40
v56@0:8@16Q24Q32@40Q48
v40@0:8@16r^v24@32
{CGSize=dd}32@0:8@16@24
^{TSCEFunctionArgSpec=}16@0:8
v40@0:8@16{TSTCSENodeData=QQ}24
@40@0:8{TSTCSENodeData=QQ}16@32
{unordered_map<unsigned long, TSTCSENodeData, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, TSTCSENodeData>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, TSTCSENodeData>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSTCSENodeData>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSTCSENodeData>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, TSTCSENodeData>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSTCSENodeData>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSTCSENodeData>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
@"NSMutableArray"
Q24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
C18@0:8{TSUViewColumnIndex=S}16
C20@0:8{TSUViewRowIndex=I}16
Q20@0:8{TSUViewRowIndex=I}16
{TSUViewColumnIndex=S}16@0:8
{TSUViewRowIndex=I}16@0:8
C24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
v44@0:8{TSUViewRowIndex=I}16@?20@?28@?36
@28@0:8{TSUViewRowIndex=I}16o^B20
v42@0:8{TSUViewColumnIndex=S}16@?18@?26@?34
@26@0:8{TSUViewColumnIndex=S}16o^B18
i40@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16@?24@?32
@36@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16B24o^Q28
v44@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16B24^@28^@36
@32@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16o^B24
i36@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24B32
i36@0:8o^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16{TSUViewCellCoord={TSUCellCoord=ISBB}}24B32
d28@0:8{TSUViewRowIndex=I}16o^B20
d26@0:8{TSUViewColumnIndex=S}16o^B18
v28@0:8d16{TSUViewRowIndex=I}24
v26@0:8d16{TSUViewColumnIndex=S}24
B24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
C28@0:8{TSUViewRowIndex=I}16^Q20
C26@0:8{TSUViewColumnIndex=S}16^Q18
Q18@0:8{TSUViewColumnIndex=S}16
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
@"NSIndexSet"
@24@0:8I16B20
{vector<TSTCell *, std::allocator<TSTCell *>>=^@^@{__compressed_pair<TSTCell *__strong *, std::allocator<TSTCell *>>=^@}}32@0:8^v16@?24
^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}20@0:8S16
v36@0:8S16@20^{?=IIIIIIIIIS}28
v36@0:8@16S24^{?=IIIIIIIIIS}28
q36@0:8@16S24^{?=IIIIIIIIIS}28
Q24@0:8S16I20
v28@0:8S16S20I24
v40@0:8{_NSRange=QQ}16@?32
v44@0:8{_NSRange=QQ}16B32@?36
B28@0:8S16Q20
{TSTTableTileRowBuffer="_private"{?="cellData"*"cellBufferSize"Q"allocatedCellBufferSize"Q"offsets"^S"offsetBufferCount"S"wideOffsets"B}}
@40@0:8@16@24q32
{vector<TSU::UUIDData<TSP::UUIDData>, std::allocator<TSU::UUIDData<TSP::UUIDData>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::allocator<TSU::UUIDData<TSP::UUIDData>>>="__value_"^v}}
@"TSCEUIDSet"
@"TSCEFormulaObject"16@0:8
@"TSCEFormulaObject"
@"TSTStockDetails"
^v28@0:8@16B24
{TSCENameTrieNode="_children"{unordered_map<unsigned short, TSCENameTrieNode *, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, TSCENameTrieNode *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSCENameTrieNode *>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSCENameTrieNode *>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, TSCENameTrieNode *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSCENameTrieNode *>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSCENameTrieNode *>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}"_name"@"NSString"}
@32@0:8^{TSCETableResolver=^^?}16@24
@24@0:8^{TSCETableResolver=^^?}16
^{TSCETableResolver=^^?}16@0:8
v24@0:8^{TSCETableResolver=^^?}16
{TSUPreserveFlags="_flags"C}
^{TSCETableResolver=^^?}
@"NSArray"
@"TSCEQuotedRefPathSplitter"
@"TSCEAbortObject"
@32@0:8@16Q24
@"TSCEEdgeListPrinter"
@32@0:8{TSKUIDStruct=QQ}16
v32@0:8@16Q24
v32@0:8Q16Q24
v32@0:8Q16q24
v24@0:8C16C20
v28@0:8C16q20
v28@0:8C16@20
v56@0:8@16@24@32@40q48
v56@0:8^v16^v24^v32@40C48B52
{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}}20@0:8S16
q24@0:8r^{TSKUIDStruct=QQ}16
S24@0:8r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16
B24@0:8r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16
@24@0:8S16B20
{vector<TSTGroupNode *, std::allocator<TSTGroupNode *>>=^@^@{__compressed_pair<TSTGroupNode *__strong *, std::allocator<TSTGroupNode *>>=^@}}16@0:8
r^v24@0:8r^{TSKUIDStruct=QQ}16
{TSKUIDStruct=QQ}32@0:8r^{TSKUIDStruct=QQ}16^Q24
Q24@0:8r^{TSKUIDStruct=QQ}16
S24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@28@0:8Q16B24
@32@0:8Q16@24
@40@0:8Q16B24B28@32
S32@0:8@16@24
{TSKUIDStruct=QQ}24@0:8@16
@32@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16^C24
@28@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16C24
{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@40@0:8@16r^v24Q32
@32@0:8r^{TSKUIDStruct=QQ}16@24
@44@0:8@16@24@32C40
@48@0:8@16@24r^{TSKUIDStruct=QQ}32@40
@36@0:8@16S24@28
B32@0:8r^{TSKUIDStruct=QQ}16q24
@32@0:8r^{TSKUIDStruct=QQ}16q24
v52@0:8r^{TSKUIDStruct=QQ}16@24@32B40@44
@28@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16B24
B40@0:8@16{TSKUIDStruct=QQ}24
{vector<TSTGroupBy *, std::allocator<TSTGroupBy *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSTGroupBy *__strong *, std::allocator<TSTGroupBy *>>="__value_"^@}}
{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}
{unordered_map<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{vector<TSUIndexSet, std::allocator<TSUIndexSet>>="__begin_"^{TSUIndexSet}"__end_"^{TSUIndexSet}"__end_cap_"{__compressed_pair<TSUIndexSet *, std::allocator<TSUIndexSet>>="__value_"^{TSUIndexSet}}}
@"TSTGroupingColumnList"
@"TSTColumnAggregateList"
^{TSCEASTNodeArray=*QQB}16@0:8
{?=b48}16@0:8
^{TSCEASTNodeArray=*QQB}
{?="formulaID"b48}
v28@0:8@16i24
v24@0:8i16i20
v24@0:8B16i20
v24@0:8f16i20
@"TSSPropertyMap"
@"TSSMutablePropertySet"
{vector<TSCEFunctionIndex, std::allocator<TSCEFunctionIndex>>=^S^S{__compressed_pair<TSCEFunctionIndex *, std::allocator<TSCEFunctionIndex>>=^S}}16@0:8
v32@0:8r^v16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24
v40@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24^B32
{unordered_map<TSCEFunctionIndex, TSCEReferenceSet *, std::hash<TSCEFunctionIndex>, std::equal_to<TSCEFunctionIndex>, std::allocator<std::pair<const TSCEFunctionIndex, TSCEReferenceSet *>>>="__table_"{__hash_table<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, std::__unordered_map_hasher<TSCEFunctionIndex, std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, std::hash<TSCEFunctionIndex>, std::equal_to<TSCEFunctionIndex>, true>, std::__unordered_map_equal<TSCEFunctionIndex, std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, std::equal_to<TSCEFunctionIndex>, std::hash<TSCEFunctionIndex>, true>, std::allocator<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCEFunctionIndex, std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, std::hash<TSCEFunctionIndex>, std::equal_to<TSCEFunctionIndex>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCEFunctionIndex, std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, std::equal_to<TSCEFunctionIndex>, std::hash<TSCEFunctionIndex>, true>>="__value_"f}}}
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
@96@0:8@16{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}24r^v72q80B88B92
@"TSUPair"24@0:8@"TSTTableInfo"16
{vector<TSUViewCellRect, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}^{TSUViewCellRect}{__compressed_pair<TSUViewCellRect *, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}}}16@0:8
{vector<TSKUIDStructTract, std::allocator<TSKUIDStructTract>>=^{TSKUIDStructTract}^{TSKUIDStructTract}{__compressed_pair<TSKUIDStructTract *, std::allocator<TSKUIDStructTract>>=^{TSKUIDStructTract}}}16@0:8
v32@0:8@?16@?24
@32@0:8@16@?24
v40@0:8Q16Q24@?32
v32@0:8Q16@?24
v112@0:8@?16@?24@?32@?40@?48@?56@?64@?72@?80@?88@?96@?104
v40@0:8{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}16
@88@0:8@16{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}24r^v72q80
@88@0:8@16{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}40
@40@0:8@16{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24
@72@0:8@16{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}24
v32@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24
v40@0:8Q16Q24Q32
v36@0:8^v16@24B32
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16@0:8
v32@0:8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUViewCellRect="_rect"{TSUCellRect="origin"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"size"{?="numberOfColumns"I"numberOfRows"I}}}
{vector<TSTCell *, std::allocator<TSTCell *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSTCell *__strong *, std::allocator<TSTCell *>>="__value_"^@}}
{vector<TSUModelRowIndex, std::allocator<TSUModelRowIndex>>="__begin_"^{TSUModelRowIndex}"__end_"^{TSUModelRowIndex}"__end_cap_"{__compressed_pair<TSUModelRowIndex *, std::allocator<TSUModelRowIndex>>="__value_"^{TSUModelRowIndex}}}
{vector<TSUModelColumnIndex, std::allocator<TSUModelColumnIndex>>="__begin_"^{TSUModelColumnIndex}"__end_"^{TSUModelColumnIndex}"__end_cap_"{__compressed_pair<TSUModelColumnIndex *, std::allocator<TSUModelColumnIndex>>="__value_"^{TSUModelColumnIndex}}}
{vector<TSUViewRowIndex, std::allocator<TSUViewRowIndex>>="__begin_"^{TSUViewRowIndex}"__end_"^{TSUViewRowIndex}"__end_cap_"{__compressed_pair<TSUViewRowIndex *, std::allocator<TSUViewRowIndex>>="__value_"^{TSUViewRowIndex}}}
{vector<TSUViewColumnIndex, std::allocator<TSUViewColumnIndex>>="__begin_"^{TSUViewColumnIndex}"__end_"^{TSUViewColumnIndex}"__end_cap_"{__compressed_pair<TSUViewColumnIndex *, std::allocator<TSUViewColumnIndex>>="__value_"^{TSUViewColumnIndex}}}
{vector<long, std::allocator<long>>="__begin_"^q"__end_"^q"__end_cap_"{__compressed_pair<long *, std::allocator<long>>="__value_"^q}}
{vector<TSTNineKeyStructPreBNC, std::allocator<TSTNineKeyStructPreBNC>>="__begin_"^{?}"__end_"^{?}"__end_cap_"{__compressed_pair<TSTNineKeyStructPreBNC *, std::allocator<TSTNineKeyStructPreBNC>>="__value_"^{?}}}
@"TSUPointerKeyDictionary"
v32@0:8@16{TSUColumnRowOffset=ii}24
@"NSMutableIndexSet"
@"TSKStructuredTextImportSettings"
@"NSURL"
@"NSDate"
@"NSData"
#24@0:8@16
v24@0:8i16I20
@32@0:8@16I24B28
v28@0:8I16@20
v24@0:8I16B20
{unordered_map<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *, TSTTableDataPayloadHash, TSTTableDataPayloadEqual, std::allocator<std::pair<NSObject<TSTTableDataPayloadHashing> *const, TSTTableDataObject *>>>="__table_"{__hash_table<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, std::__unordered_map_hasher<NSObject<TSTTableDataPayloadHashing> *, std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, TSTTableDataPayloadHash, TSTTableDataPayloadEqual, true>, std::__unordered_map_equal<NSObject<TSTTableDataPayloadHashing> *, std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, TSTTableDataPayloadEqual, TSTTableDataPayloadHash, true>, std::allocator<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<NSObject<TSTTableDataPayloadHashing> *, std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, TSTTableDataPayloadHash, TSTTableDataPayloadEqual, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<NSObject<TSTTableDataPayloadHashing> *, std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, TSTTableDataPayloadEqual, TSTTableDataPayloadHash, true>>="__value_"f}}}
@"NSObject<TSDContainerInfo><TSWPStorageParent>"
@"TSTTableDataListSegment"
I32@0:8@16I24B28
@28@0:8I16^B20
v40@0:8@16Q24@32
@44@0:8@16@24@32B40
I24@0:8@16
@76@0:8i16@20{CGAffineTransform=dddddd}28
@"TSKSelection"16@0:8
v24@0:8@"TSKSelection"16
@"TSKSelection"24@0:8@"TSKSelection"16
@"TSTCellSelection"
@76@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32C48i52C56{TSKUIDStruct=QQ}60
@40@0:8{TSKUIDStruct=QQ}16C32i36
@36@0:8{TSKUIDStruct=QQ}16C32
@56@0:8{TSKUIDStruct=QQ}16C32C36{TSKUIDStruct=QQ}40
@72@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32C48C52{TSKUIDStruct=QQ}56
v24@0:8[16C]16
{UUIDData<TSP::UUIDData>=""(?="_uuid"[16C]"_cfuuid"{?="byte0"C"byte1"C"byte2"C"byte3"C"byte4"C"byte5"C"byte6"C"byte7"C"byte8"C"byte9"C"byte10"C"byte11"C"byte12"C"byte13"C"byte14"C"byte15"C}""{?="_lower"Q"_upper"Q})}
@32@0:8r^{TSCEStringValue=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}b1b1b1}16@24
^{TSCEStringValue=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}b1b1b1}16@0:8
^{TSCEStringValue=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}b1b1b1}
@56@0:8r^v16r^v24Q32@40@48
v32@0:8^v16^v24
v40@0:8^v16^v24@32
@28@0:8I16^{_NSRange=QQ}20
B40@0:8{TSUCellCoord=ISBB}16@24^@32
{multimap<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>, std::less<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>>>={__tree<std::__value_type<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>, std::__map_value_compare<TSUCellCoord, std::__value_type<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>, std::less<TSUCellCoord>, true>, std::allocator<std::__value_type<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSUCellCoord, std::__value_type<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>, std::less<TSUCellCoord>, true>>=Q}}}16@0:8
[16@"TSTTableTileGroup"]
@40@0:8r^v16@24@32
v24@0:8C16I20
Q36@0:8I16^@20^@28
@48@0:8I16C20d24{TSKUIDStruct=QQ}32
v28@0:8I16Q20
[16@"TSTTableHeaderStorageBucket"]
@34@0:8Q16{TSUModelColumnIndex=S}24@26
@"TSUSparseArray"
@128@0:8{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@112^v120
B120@0:8{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16^v112
{TSCENumberValue="_vptr$TSCEAbstractValue"^^?"_decimal"{TSUDecimal="_decimal"{?="w"[2Q]}}"_format"{TSCEFormat="_tskFormat"@"TSKFormat""_formatType"I"_formatState"C"_durationFormat"{TSCEDurationFormat="_useAutomaticUnits"b1"_durationUnitSmallest"b6"_durationUnitLargest"b6"_durationStyle"b3}"_baseFormat"{TSCEBaseFormat="base"C"basePlaces"C"baseUseMinusSign"B}"_fractionFormat"{TSCEFractionFormat="fractionAccuracy"c}"_numberFormat"{TSCENumberFormat="decimalPlaces"C"negativeStyle"b3"showThousandsSeparator"b1"useAccountingStyle"b1"currencyCodeIndex"S}}"_baseUnit"S"_isUnitlessZero"B}
@"TSCERegexMatcher"
Q24@0:8r^{TSUCellCoord=ISBB}16
{TSUCellCoord=ISBB}24@0:8Q16
@32@0:8r^v16r^{TSKUIDStruct=QQ}24
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32@0:8@16r^{TSUModelCellCoord={TSUCellCoord=ISBB}}24
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}36@0:8@16r^{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32
{TSKUIDStruct=QQ}32@0:8@16r^{TSUModelCellCoord={TSUCellCoord=ISBB}}24
@48@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16Q32r^{TSKUIDStruct=QQ}40
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}28@0:8Q16B24
{TSKUIDStruct=QQ}24@0:8Q16
@40@0:8r^{TSKUIDStruct=QQ}16r^v24@32
c24@0:8^v16
{TSCEGridDimensions=II}16@0:8
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}32@0:8r^{TSCEGridCoord=II}16^{TSCEGridAccessContext=@^{TSCEFunctionArgSpec}i^{TSCEEvaluationContext}BBBBBCC}24
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}32@0:8Q16^{TSCEGridAccessContext=@^{TSCEFunctionArgSpec}i^{TSCEEvaluationContext}BBBBBCC}24
{TSCEGrid=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}24@0:8^{TSCEGridAccessContext=@^{TSCEFunctionArgSpec}i^{TSCEEvaluationContext}BBBBBCC}16
{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}32@0:8Q16^{TSCEGridAccessContext=@^{TSCEFunctionArgSpec}i^{TSCEEvaluationContext}BBBBBCC}24
{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}24@0:8^{TSCEGridAccessContext=@^{TSCEFunctionArgSpec}i^{TSCEEvaluationContext}BBBBBCC}16
B28@0:8i16^v20
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}40@0:8r^{TSCEGridCoord=II}16i24i28^{TSCEGridAccessContext=@^{TSCEFunctionArgSpec}i^{TSCEEvaluationContext}BBBBBCC}32
^{TSCEASTNodeArray=*QQB}40@0:8@16i24B28^v32
{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB}36@0:8@16i24^v28
@36@0:8@16i24^v28
B36@0:8@16i24^v28
@36@0:8@16i24@28
{TSCEReferenceValue=^^?@{TSUCellCoord=ISBB}{TSUPreserveFlags=C}BB}36@0:8@16i24^v28
v28@0:8B16Q20
@"<TSWPStyleProvider>"16@0:8
@"<TSWPStyleProvider>"24@0:8@"TSWPLayout"16
B24@0:8@"TSWPLayout"16
@28@0:8@16I24
d32@0:8Q16d24
d56@0:8Q16d24@32^d40^d48
{UIEdgeInsets=dddd}24@0:8@16
d56@0:8Q16d24@"<TSWPLayoutTarget>"32^d40^d48
{UIEdgeInsets=dddd}24@0:8@"<TSWPLayoutTarget>"16
@"TSWPPadding"16@0:8
@"TSWPPadding"24@0:8@"<TSWPLayoutTarget>"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}40@0:8@16{CGSize=dd}24
d24@0:8@16
{CGSize=dd}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48B56
Q24@0:8@"TSWPLayout"16
i24@0:8@"TSWPLayout"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"TSWPLayout"16
{CGRect={CGPoint=dd}{CGSize=dd}}40@0:8@"TSWPLayout"16{CGSize=dd}24
@"<NSFastEnumeration>"24@0:8@"TSWPLayout"16
#24@0:8@"TSWPLayout"16
v24@0:8@"TSWPLayout"16
@"NSSet"24@0:8@"TSWPLayout"16
d24@0:8@"TSWPLayout"16
q24@0:8@"TSWPLayout"16
Q24@0:8@"TSWPAttachment"16
{CGRect={CGPoint=dd}{CGSize=dd}}60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@"TSKSelectionPath"48B56
v64@0:8@16{_NSRange=QQ}24q40Q48@56
v64@0:8@"TSWPStorage"16{_NSRange=QQ}24q40Q48@"NSArray"56
{CGPoint=dd}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
d24@0:8o^d16
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}104@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48{CGAffineTransform=dddddd}56
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{?={?=II}{?=II}}16
@76@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16i32d36d44B52B56d60^@68
@76@0:8{?={?=II}{?=II}}16i32d36d44B52B56d60^@68
v112@0:8@16I24{CGAffineTransform=dddddd}28d76d84B92d96@?104
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@0:8@16
{CGSize=dd}24@0:8@16
{UIEdgeInsets=dddd}16@0:8
d32@0:8@16d24
{CGPoint=dd}24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{TSUCellCoord=ISBB}16^B24
{CGSize=dd}32@0:8{?={?=II}{?=II}}16
B32@0:8{?={?=II}{?=II}}16
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8@16{CGSize=dd}24^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}40
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"TSTLayoutSpaceBundle"
{?="tableNameHeight"d"scaleToFitParent"{CGSize="width"d"height"d}"scaleToFitEnclosingTextColumn"{CGSize="width"d"height"d}}
@"TSWPLayout"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
{CGSize="width"d"height"d}
v24@0:8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}20@0:8B16
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}20@0:8C16
{TSCEValue=""(?="DONT_USE_fakeTSCENumberValueStandIn"{?="_decimal"{?="w"[2Q]}"_formatFake"[24C]"_baseUnit"S"_isUnitlessZero"B}"_buff"[9Q])"_type"C}
{TSCEDateValue="_vptr$TSCEAbstractValue"^^?"mDate"@"NSDate""mFormat"{TSCEFormat="_tskFormat"@"TSKFormat""_formatType"I"_formatState"C"_durationFormat"{TSCEDurationFormat="_useAutomaticUnits"b1"_durationUnitSmallest"b6"_durationUnitLargest"b6"_durationStyle"b3}"_baseFormat"{TSCEBaseFormat="base"C"basePlaces"C"baseUseMinusSign"B}"_fractionFormat"{TSCEFractionFormat="fractionAccuracy"c}"_numberFormat"{TSCENumberFormat="decimalPlaces"C"negativeStyle"b3"showThousandsSeparator"b1"useAccountingStyle"b1"currencyCodeIndex"S}}}
v24@0:8r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16
v28@0:8r^v16S24
v24@0:8r^{TSCEInternalRangeReference={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}S}16
v40@0:8^v16@24d32
B24@0:8d16
B24@0:8r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16
@"TSCECellDirtier"
{TSCEInternalCellRefSet="_coordsForOwnerId"{unordered_map<unsigned short, TSCECellCoordSet, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, TSCECellCoordSet>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, TSCECellCoordSet>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}}
{vector<TSCEInternalRangeReference, std::allocator<TSCEInternalRangeReference>>="__begin_"^{TSCEInternalRangeReference}"__end_"^{TSCEInternalRangeReference}"__end_cap_"{__compressed_pair<TSCEInternalRangeReference *, std::allocator<TSCEInternalRangeReference>>="__value_"^{TSCEInternalRangeReference}}}
@40@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24@32
@32@0:8^{TSCEErrorValue=^^?@}16@24
^{TSCEErrorValue=^^?@}16@0:8
^{TSCEErrorValue=^^?@}
@36@0:8r^{TSUChromeColumnIndex=S}16r^{TSKUIDStruct=QQ}24B32
@"NSString"32@0:8r^v16@"TSCERefNamingContext"24
@"NSString"32@0:8@"TSCECellTractRef"16@"TSCERefNamingContext"24
@"NSString"40@0:8@"TSCECellTractRef"16@"TSCERefNamingContext"24@"TSCECoordMapper"32
@"NSString"36@0:8r^{TSUChromeColumnIndex=S}16r^{TSKUIDStruct=QQ}24B32
@"NSString"32@0:8@"TSCEWrappedRangeRef"16@"TSCERefNamingContext"24
@32@0:8r^{TSUCellCoord=ISBB}16@24
@44@0:8r^{TSUCellCoord=ISBB}16B24@28^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}36
@36@0:8S16@20@28
@44@0:8r^v16@24B32@36
@56@0:8@16B24B28^{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32@40@48
{TSCERecalculationState=C}33@0:8{TSUCellCoord=ISBB}16@24{TSCERecalculationState=C}32
{TSCERecalculationState=C}33@0:8r^v16@24{TSCERecalculationState=C}32
@"<TSCEReferenceResolving>"16@0:8
{TSCERecalculationState=C}33@0:8{TSUCellCoord=ISBB}16@"TSCECalculationEngine"24{TSCERecalculationState=C}32
{TSCERecalculationState=C}33@0:8r^v16@"TSCECalculationEngine"24{TSCERecalculationState=C}32
@40@0:8r^{TSKUIDStruct=QQ}16{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}24
v48@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16r^{TSKUIDStruct=QQ}32@40
v40@0:8{TSUCellCoord=ISBB}16r^{TSKUIDStruct=QQ}24@32
@24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
@"TSCETrackedReferenceStore"
v40@0:8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@24^v32
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24@0:8@16
^{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB}16@0:8
@36@0:8@16@24B32
v56@0:8@16{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24
v60@0:8@16{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24B56
@"TSCEBulkCellChangeMinion"
@"NSObject<OS_dispatch_queue>"
{TSUModelColumnIndex=S}18@0:8{TSUViewColumnIndex=S}16
{TSUModelRowIndex=I}20@0:8{TSUViewRowIndex=I}16
{TSUModelColumnIndex=S}18@0:8{TSUChromeColumnIndex=S}16
{TSUModelRowIndex=I}20@0:8{TSUChromeRowIndex=I}16
{TSUChromeColumnIndex=S}18@0:8{TSUModelColumnIndex=S}16
{TSUChromeRowIndex=I}20@0:8{TSUModelRowIndex=I}16
{TSUViewColumnIndex=S}18@0:8{TSUModelColumnIndex=S}16
{TSUViewRowIndex=I}20@0:8{TSUModelRowIndex=I}16
{TSUChromeColumnIndex=S}18@0:8{TSUViewColumnIndex=S}16
{TSUChromeRowIndex=I}20@0:8{TSUViewRowIndex=I}16
{TSUViewColumnIndex=S}18@0:8{TSUChromeColumnIndex=S}16
{TSUViewRowIndex=I}20@0:8{TSUChromeRowIndex=I}16
{TSUModelCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
{TSUModelCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUChromeCellCoord={TSUCellCoord=ISBB}}16
{TSUChromeCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
{TSUChromeCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
{TSUViewCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
{TSUViewCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUChromeCellCoord={TSUCellCoord=ISBB}}16
{RefTypeHolder<TSCECellRef, 0>={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}}24@0:8r^v16
{RefTypeHolder<TSCECellRef, 2>={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}}24@0:8r^v16
{RefTypeHolder<TSCECellRef, 1>={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}}24@0:8r^v16
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}24@0:8r^v16
{RefTypeHolder<TSCERangeRef, 1>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}24@0:8r^v16
r^{TSKUIDStruct=QQ}16@0:8
@"TSCECellTractRef"24@0:8@"TSCECellTractRef"16
@"TSKShuffleMapping"24@0:8@"TSKShuffleMapping"16
@48@0:8r^{TSKUIDStruct=QQ}16@24@32@40
@40@0:8r^{TSKUIDStruct=QQ}16@24@32
v24@0:8S16S20
{unordered_map<unsigned int, unsigned int, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned int, unsigned int>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, unsigned int>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, unsigned int>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>, std::allocator<std::__hash_value_type<unsigned int, unsigned int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, unsigned int>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, unsigned int>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>>="__value_"f}}}
{unordered_map<unsigned short, unsigned short, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, unsigned short>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, unsigned short>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, unsigned short>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, unsigned short>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, unsigned short>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, unsigned short>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, unsigned short>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}
v56@0:8@16i24@28I36{TSTSimpleRange=qQ}40
v36@0:8@16i24{TSUCellCoord=ISBB}28
v24@0:8{?=II}16
v56@0:8@16@?24@?32@?40@?48
{vector<TSTCellBorder *, std::allocator<TSTCellBorder *>>=^@^@{__compressed_pair<TSTCellBorder *__strong *, std::allocator<TSTCellBorder *>>=^@}}28@0:8{TSUModelRowIndex=I}16^v20
@"TSTStrokeLayer"
v40@0:8Q16{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24
v40@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16Q32
v44@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16B32@?36
v40@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16@?32
{vector<TSUModelCellRect, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}^{TSUModelCellRect}{__compressed_pair<TSUModelCellRect *, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}}}16@0:8
{vector<TSUModelCellRect, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}^{TSUModelCellRect}{__compressed_pair<TSUModelCellRect *, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}}}36@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16B32
{vector<TSUModelCellRect, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}^{TSUModelCellRect}{__compressed_pair<TSUModelCellRect *, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}}}32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{vector<TSUModelCellRect, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}^{TSUModelCellRect}{__compressed_pair<TSUModelCellRect *, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}}}24@0:8@16
B32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{unordered_map<unsigned long, TSUModelCellRect, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, TSUModelCellRect>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, TSUModelCellRect>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSUModelCellRect>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSUModelCellRect>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, TSUModelCellRect>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSUModelCellRect>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSUModelCellRect>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
{TSCECellRangeRTree="_rTree"{TSCECellRangeRTree_Int="m_root"^{Node}}}
{TSCEBitGrid="_tiles"{vector<TSCEBitGridTile *, std::allocator<TSCEBitGridTile *>>="__begin_"^^{TSCEBitGridTile}"__end_"^^{TSCEBitGridTile}"__end_cap_"{__compressed_pair<TSCEBitGridTile **, std::allocator<TSCEBitGridTile *>>="__value_"^^{TSCEBitGridTile}}}"_count"Q"_lastTileFoundAtIndex"Q"_bitsInColumn"{unordered_map<unsigned int, TSUIndexSet *, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, TSUIndexSet *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned int, TSUIndexSet *>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, TSUIndexSet *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, TSUIndexSet *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>, std::allocator<std::__hash_value_type<unsigned int, TSUIndexSet *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, TSUIndexSet *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, TSUIndexSet *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>>="__value_"f}}}}
v48@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16Q24{CGSize=dd}32
{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}}16@0:8
@"TSTCellUIDList"
{vector<unsigned long, std::allocator<unsigned long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::allocator<unsigned long>>="__value_"^Q}}
d24@0:8@"TSDDrawableInfo"16
{CGSize=dd}32@0:8@"TSPData"16@"<NSObject>"24
{?={?=II}{?=II}}24@0:8@16
{?={?=II}{?=II}}40@0:8{?={?=II}{?=II}}16@32
@28@0:8@16i24
v32@0:8{?={?=II}{?=II}}16
{?={?=II}{?=II}}16@0:8
{?={?=II}{?=II}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v64@0:8{CGAffineTransform=dddddd}16
{CGPoint=dd}32@0:8{CGPoint=dd}16
{?=II}36@0:8{CGPoint=dd}16B32
{?=II}32@0:8{CGPoint=dd}16
v40@0:8d16^d24^d32
d32@0:8d16d24
v40@0:8^{CGPoint=dd}16^{CGPoint=dd}24^d32
@60@0:8{?={?=II}{?=II}}16^{CGAffineTransform=dddddd}32d40B48d52
@32@0:8^{CGAffineTransform=dddddd}16d24
{CGRect={CGPoint=dd}{CGSize=dd}}40@0:8{?={?=II}{?=II}}16d32
v112@0:8@16^{CGContext=}24{CGPoint=dd}32{CGPoint=dd}48d64d72{CGRect={CGPoint=dd}{CGSize=dd}}80
B52@0:8I16{?={?=II}{?=II}}20B36i40^{CGContext=}44
v44@0:8{?={?=II}{?=II}}16B32^{CGContext=}36
@52@0:8{?={?=II}{?=II}}16S32@36^B44
@56@0:8{?={?=II}{?=II}}16I32@36B44^B48
I24@0:8d16
d24@0:8d16
i24@0:8{?=II}16
{CGPoint=dd}24@0:8{?=II}16
{?={CGPoint=dd}{CGPoint=dd}{CGPoint=dd}{CGPoint=dd}dddd}44@0:8{?={?=II}{?=II}}16i32^d36
v24@0:8^{?={CGPoint=dd}{CGPoint=dd}{CGPoint=dd}{CGPoint=dd}dddd}16
{?={CGPoint=dd}{CGPoint=dd}{CGPoint=dd}{CGPoint=dd}dddd}40@0:8{?={?=II}{?=II}}16^d32
{?={CGPoint=dd}{CGPoint=dd}{CGPoint=dd}{CGPoint=dd}dddd}32@0:8{?={?=II}{?=II}}16
{CGAffineTransform=dddddd}16@0:8
{_opaque_pthread_rwlock_t="__sig"q"__opaque"[192c]}
@"TSTLayoutSpaceBezierPathCache"
@"TSTCoordinateArray"
{CGPoint="x"d"y"d}
{?="topLeft"{?="column"I"row"I}"bottomRight"{?="column"I"row"I}}
{CGAffineTransform="a"d"b"d"c"d"d"d"tx"d"ty"d}
@28@0:8I16I20B24
@24@0:8^v16
B32@0:8d16@24
B40@0:8r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16d24@32
{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16@0:8
{TSCEInternalCellReference="coordinate"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"tableID"S"reserved"S}
{unordered_map<TSCEInternalCellReference, TSCECountedInternalCellRefSet, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, std::allocator<std::pair<const TSCEInternalCellReference, TSCECountedInternalCellRefSet>>>="__table_"{__hash_table<std::__hash_value_type<TSCEInternalCellReference, TSCECountedInternalCellRefSet>, std::__unordered_map_hasher<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, TSCECountedInternalCellRefSet>, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, true>, std::__unordered_map_equal<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, TSCECountedInternalCellRefSet>, std::equal_to<TSCEInternalCellReference>, std::hash<TSCEInternalCellReference>, true>, std::allocator<std::__hash_value_type<TSCEInternalCellReference, TSCECountedInternalCellRefSet>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, TSCECountedInternalCellRefSet>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, TSCECountedInternalCellRefSet>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, TSCECountedInternalCellRefSet>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, TSCECountedInternalCellRefSet>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, TSCECountedInternalCellRefSet>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, TSCECountedInternalCellRefSet>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, TSCECountedInternalCellRefSet>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, TSCECountedInternalCellRefSet>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, TSCECountedInternalCellRefSet>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, TSCECountedInternalCellRefSet>, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, TSCECountedInternalCellRefSet>, std::equal_to<TSCEInternalCellReference>, std::hash<TSCEInternalCellReference>, true>>="__value_"f}}}
v40@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24r^{TSKUIDStruct=QQ}32
v32@0:8@16r^{TSKUIDStruct=QQ}24
v32@0:8r^v16r^{TSKUIDStruct=QQ}24
v40@0:8@"TSTCell"16{TSUModelCellCoord={TSUCellCoord=ISBB}}24r^{TSKUIDStruct=QQ}32
v32@0:8@"TSTCellMap"16r^{TSKUIDStruct=QQ}24
v32@0:8@"TSTConcurrentCellMap"16r^{TSKUIDStruct=QQ}24
{vector<TSU::UUIDData<TSP::UUIDData>, std::allocator<TSU::UUIDData<TSP::UUIDData>>>=^v^v{__compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::allocator<TSU::UUIDData<TSP::UUIDData>>>=^v}}16@0:8
{unordered_set<TSKUIDStruct, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<TSKUIDStruct>>="__table_"{__hash_table<TSKUIDStruct, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<TSKUIDStruct>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *>, std::allocator<std::__hash_node<TSKUIDStruct, void *>>>="__value_"{__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::hash<TSKUIDStruct>>="__value_"Q}"__p3_"{__compressed_pair<float, std::equal_to<TSKUIDStruct>>="__value_"f}}}
@"TSTExpressionNode"
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}48@0:8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16^v24B32^B36B44
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}40@0:8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16^v24B32B36
@72@0:8@16@24r^{TSKUIDStruct=QQ}32r^{TSUCellCoord=ISBB}40^@48^B56B64B68
@48@0:8@16@24r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32^@40
r^{TSCEASTNodeArray=*QQB}16@0:8
@49@0:8r^{TSCEASTNodeArray=*QQB}16{TSCEFormulaTranslationFlags=C}24r^{TSKUIDStruct=QQ}25r^{TSKUIDStruct=QQ}33r^{TSKUIDStruct=QQ}41
@25@0:8r^{TSCEASTNodeArray=*QQB}16{TSCEFormulaTranslationFlags=C}24
@24@0:8r^{TSCEASTNodeArray=*QQB}16
@33@0:8{TSCEFormulaCreator=@?}16^{TSCEASTNodeArgInfo=i[3i]{TSKUIDStruct=QQ}{TSUCellCoord=ISBB}}24{TSCEFormulaTranslationFlags=C}32
@25@0:8{TSCEFormulaCreator=@?}16{TSCEFormulaTranslationFlags=C}24
@24@0:8{TSCEFormulaCreator=@?}16
@28@0:8r^v16B24
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}36@0:8^v16B24^B28
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24@0:8^v16
B48@0:8@16Q24^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}40
v48@0:8^v16@24r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32B40B44
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}24@0:8@16
@36@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16@24B32
@32@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16@24
@32@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16^B24
@48@0:8@16@24r^{TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}32^B40
@40@0:8@16@24r^{TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}32
@40@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32
@17@0:8{TSCEFormulaTranslationFlags=C}16
@32@0:8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16@?24
v40@0:8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16^B24@?32
@24@0:8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16
@32@0:8@16r^{TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}24
@28@0:8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16B24
@32@0:8@16r^{TSKUIDStruct=QQ}24
@48@0:8r^v16@24r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32^B40
@40@0:8r^v16@24^B32
@44@0:8r^v16r^v24r^v32B40
@32@0:8r^{TSKUIDStruct=QQ}16^B24
@44@0:8^v16B24^B28*36
@32@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24
@60@0:8^v16^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24^B32^B40^@48I56
@40@0:8^v16^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24^B32
@28@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16C24
@48@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24r^{TSKUIDStruct=QQ}32{TSUColumnRowOffset=ii}40
@24@0:8{TSUColumnRowOffset=ii}16
@32@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24
C32@0:8^v16@24
{TSCEFormulaTranslationFlags=C}16@0:8
{TSCEFormulaTranslationFlags="_flags"C}
@52@0:8@16@24I32Q36Q44
{TSTCSENodeData=QQ}24@0:8@16
@60@0:8@16@24{TSUCellCoord=ISBB}32B40^v44@52
v40@0:8^{TSCEASTNodeArray=*QQB}16{TSUCellCoord=ISBB}24^v32
@84@0:8q16{_NSRange=QQ}24q40q48{_NSRange=QQ}56B72Q76
@96@0:8q16@24B32q36q44{_NSRange=QQ}52B68Q72Q80Q88
@112@0:8q16{_NSRange=QQ}24B40q44q52{_NSRange=QQ}60B76Q80Q88Q96Q104
@92@0:8q16{_NSRange=QQ}24q40q48{_NSRange=QQ}56B72Q76Q84
B40@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24
{TSTCellRegionGathererMap="_cellRangeIndex"Q"_rowRange"{_NSRange="location"Q"length"Q}"_cellRanges"{unordered_map<unsigned long, TSUCellRect, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, TSUCellRect>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, TSUCellRect>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSUCellRect>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSUCellRect>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, TSUCellRect>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSUCellRect>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSUCellRect>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}"_encodedJoinCoordToCandidateIndexMap"{unordered_map<TSTCellRegionGathererKey, unsigned long, std::hash<TSTCellRegionGathererKey>, std::equal_to<TSTCellRegionGathererKey>, std::allocator<std::pair<const TSTCellRegionGathererKey, unsigned long>>>="__table_"{__hash_table<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, std::__unordered_map_hasher<TSTCellRegionGathererKey, std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, std::hash<TSTCellRegionGathererKey>, std::equal_to<TSTCellRegionGathererKey>, true>, std::__unordered_map_equal<TSTCellRegionGathererKey, std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, std::equal_to<TSTCellRegionGathererKey>, std::hash<TSTCellRegionGathererKey>, true>, std::allocator<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSTCellRegionGathererKey, std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, std::hash<TSTCellRegionGathererKey>, std::equal_to<TSTCellRegionGathererKey>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSTCellRegionGathererKey, std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, std::equal_to<TSTCellRegionGathererKey>, std::hash<TSTCellRegionGathererKey>, true>>="__value_"f}}}}
{unordered_map<TSUCellCoord, TSUCellRect, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSUCellRect>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSUCellRect>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellRect>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellRect>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSUCellRect>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellRect>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellRect>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
^{TSCEASTNodeArray=*QQB}24@0:8Q16
^v24@0:8Q16
^{TSCERegionNode=Q^{TSCERegionNode}^v}
{vector<TSCEASTNodeArray *, std::allocator<TSCEASTNodeArray *>>="__begin_"^^{TSCEASTNodeArray}"__end_"^^{TSCEASTNodeArray}"__end_cap_"{__compressed_pair<TSCEASTNodeArray **, std::allocator<TSCEASTNodeArray *>>="__value_"^^{TSCEASTNodeArray}}}
{vector<TSCECellRef, std::allocator<TSCECellRef>>=^{TSCECellRef}^{TSCECellRef}{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>=^{TSCECellRef}}}32@0:8r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16r^{TSKUIDStruct=QQ}24
{vector<TSCECellRef, std::allocator<TSCECellRef>>=^{TSCECellRef}^{TSCECellRef}{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>=^{TSCECellRef}}}24@0:8@16
@"TSTAggNode"
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGContext=}48
@"TSTTableStyleNetwork"
v28@0:8B16@20
v36@0:8B16{_NSRange=QQ}20
Q32@0:8{_NSRange=QQ}16
B32@0:8{_NSRange=QQ}16
Q32@0:8Q16Q24
v40@0:8{_NSRange=QQ}16Q32
@32@0:8r^{TSKUIDStruct=QQ}16r^{TSUPreserveFlags=C}24
@32@0:8@16r^{TSUCellCoord=ISBB}24
@32@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16r^{TSUCellCoord=ISBB}24
v20@0:8s16
{TSCERelativeCellCoordinate=isBB}16@0:8
{?={TSCERelativeCellCoordinate=isBB}{TSCERelativeCellCoordinate=isBB}}24@0:8r^{TSUCellCoord=ISBB}16
v40@0:8@16r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}24r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}32
@32@0:8r^{TSUCellCoord=ISBB}16^B24
@24@0:8r^{TSUCellCoord=ISBB}16
@48@0:8@16Q24@32Q40
@80@0:8@16Q24@32@?40@?48@?56@?64@?72
@48@0:8@16Q24@32@?40
Q42@0:8C16C20Q24Q32{TSUViewColumnIndex=S}40
Q28@0:8C16C20B24
@40@0:8@16@24Q32
@32@0:8^{_NSZone=}16@24
@36@0:8Q16@24B32
@52@0:8@16@24d32B40Q44
{vector<TSTCellStyle *, std::allocator<TSTCellStyle *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSTCellStyle *__strong *, std::allocator<TSTCellStyle *>>="__value_"^@}}
{vector<TSWPParagraphStyle *, std::allocator<TSWPParagraphStyle *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSWPParagraphStyle *__strong *, std::allocator<TSWPParagraphStyle *>>="__value_"^@}}
@96@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32r^{TSKUIDStruct=QQ}40r^{TSKUIDStruct=QQ}48r^{TSKUIDStruct=QQ}56r^{TSKUIDStruct=QQ}64r^{TSKUIDStruct=QQ}72r^{TSKUIDStruct=QQ}80r^{TSKUIDStruct=QQ}88
{TSKUIDStructMap="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
Q24@0:8i16i20
v40@0:8Q16^i24^i32
v36@0:8@16@24B32
v56@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}32r^{TSKUIDStruct=QQ}48
i40@0:8{TSKUIDStruct=QQ}16@32
i68@0:8{TSKUIDStruct=QQ}16@32@40{TSKUIDStruct=QQ}48S64
@24@0:8[16C]16
^{TSCETableResolver=^^?}24@0:8r^{TSKUIDStruct=QQ}16
^{TSCETableResolver=^^?}20@0:8S16
^{TSCETableResolver=^^?}24@0:8@16
{TSKUIDStruct=QQ}40@0:8{TSKUIDStruct=QQ}16I32B36
v48@0:8@16{TSUCellCoord=ISBB}24{TSKUIDStruct=QQ}32
{TSCERecalculationState=C}41@0:8^v16@24r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32{TSCERecalculationState=C}40
v32@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16^B24
{vector<TSUCellCoord, std::allocator<TSUCellCoord>>=^{TSUCellCoord}^{TSUCellCoord}{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>=^{TSUCellCoord}}}32@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16r^{TSKUIDStruct=QQ}24
{vector<TSUCellCoord, std::allocator<TSUCellCoord>>=^{TSUCellCoord}^{TSUCellCoord}{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>=^{TSUCellCoord}}}36@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16r^{TSKUIDStruct=QQ}24B32
{vector<TSUCellCoord, std::allocator<TSUCellCoord>>=^{TSUCellCoord}^{TSUCellCoord}{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>=^{TSUCellCoord}}}32@0:8r^{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16r^{TSKUIDStruct=QQ}24
{TSCECellCoordSet={map<unsigned short, TSUIndexSet, std::less<unsigned short>, std::allocator<std::pair<const unsigned short, TSUIndexSet>>>={__tree<std::__value_type<unsigned short, TSUIndexSet>, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>, std::allocator<std::__value_type<unsigned short, TSUIndexSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned short, TSUIndexSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>>=Q}}}}24@0:8r^{TSKUIDStruct=QQ}16
B24@0:8r^{TSCEAnyRef=S{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}{TSKUIDStruct=QQ}B@}16
{TSKUIDStruct=QQ}24@0:8r^{TSKUIDStruct=QQ}16
v36@0:8{TSKUIDStruct=QQ}16B32
v56@0:8{_NSRange=QQ}16r^{TSKUIDStruct=QQ}32{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}40
v72@0:8{_NSRange=QQ}16r^{TSKUIDStruct=QQ}32{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}40{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}56
v72@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16r^{TSKUIDStruct=QQ}32{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}40{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}56
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}32@0:8@16^v24
{TSCEInternalCellRefSet={unordered_map<unsigned short, TSCECellCoordSet, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, TSCECellCoordSet>>>={__hash_table<std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, TSCECellCoordSet>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>=f}}}}16@0:8
B24@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16
{TSCEReferenceSet=^^?^{TSCEDependencyTracker}{unordered_map<TSKUIDStruct, std::unordered_set<TSUCellCoord>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::unordered_set<TSUCellCoord>>>>={__hash_table<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>=f}}}{map<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>>>={__tree<std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>, std::less<TSKUIDStruct>, true>>=Q}}}^v^v^v^v^v@^v}24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
{TSCECellRefSet={map<TSKUIDStruct, TSCECellCoordSet, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECellCoordSet>>>={__tree<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSCECellCoordSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>>=Q}}}}24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
{TSCEReferenceSet=^^?^{TSCEDependencyTracker}{unordered_map<TSKUIDStruct, std::unordered_set<TSUCellCoord>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::unordered_set<TSUCellCoord>>>>={__hash_table<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>=f}}}{map<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>>>={__tree<std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>, std::less<TSKUIDStruct>, true>>=Q}}}^v^v^v^v^v@^v}16@0:8
C24@0:8@16
{vector<TSCECellRef, std::allocator<TSCECellRef>>=^{TSCECellRef}^{TSCECellRef}{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>=^{TSCECellRef}}}32@0:8@16r^{TSKUIDStruct=QQ}24
{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}44@0:8@16r^{TSKUIDStruct=QQ}24C32^@36
@44@0:8@16r^{TSKUIDStruct=QQ}24C32^@36
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}24@0:8@16
@28@0:8C16r^{TSKUIDStruct=QQ}20
@36@0:8C16r^v20r^{TSKUIDStruct=QQ}28
C24@0:8C16C20
{vector<TSCEGroupingColumnChange, std::allocator<TSCEGroupingColumnChange>>="__begin_"^{TSCEGroupingColumnChange}"__end_"^{TSCEGroupingColumnChange}"__end_cap_"{__compressed_pair<TSCEGroupingColumnChange *, std::allocator<TSCEGroupingColumnChange>>="__value_"^{TSCEGroupingColumnChange}}}
@"TSTTableControlCellSelection"
@"TSTTableDataListItemCache"
{unordered_set<TSKUIDStruct, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<TSKUIDStruct>>={__hash_table<TSKUIDStruct, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<TSKUIDStruct>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *>, std::allocator<std::__hash_node<TSKUIDStruct, void *>>>={__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSKUIDStruct>>=Q}{__compressed_pair<float, std::equal_to<TSKUIDStruct>>=f}}}16@0:8
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32@0:8r^{TSKUIDStruct=QQ}16@24
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32@0:8@16@24
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
B48@0:8@16@24r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32^@40
@40@0:8@16@24r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32
@"TSCETableTransposedInfo"
@"TSCEFormulaRewriteInfo_RowColumnInfo"
@"TSCEFormulaRewrite_RegionMovedInfo"
@"TSCEFormulaRewrite_RegionMergedInfo"
@"TSCEFormulaRewrite_MergeOriginMovedInfo"
@"TSKShuffleMapping"
@"TSCERewriteTableUIDInfo"
@"TSCERewriteGroupNodeUIDInfo"
@"TSCEGroupByChange"
@"TSCEFormulasForUndo"
{unordered_map<TSCECellRef, TSTConditionalStyleSet *, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, std::allocator<std::pair<const TSCECellRef, TSTConditionalStyleSet *>>>="__table_"{__hash_table<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>, std::allocator<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>>="__value_"f}}}
{unordered_map<TSCECellRef, TSUCellRect, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, std::allocator<std::pair<const TSCECellRef, TSUCellRect>>>="__table_"{__hash_table<std::__hash_value_type<TSCECellRef, TSUCellRect>, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSUCellRect>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSUCellRect>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>, std::allocator<std::__hash_value_type<TSCECellRef, TSUCellRect>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSUCellRect>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSUCellRect>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>>="__value_"f}}}
{unordered_map<TSKUIDStruct, TSCECoordMapper *, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECoordMapper *>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
@"TSCEFormulaRewriteSpec"
@44@0:8I16@20@28@36
@"TSDStroke"
@24@0:8^{TSCEParser=@^{TSCELexer}^{TSCEASTNodeArray}^v@{TSKUIDStruct=QQ}{TSUCellCoord=ISBB}BB@}16
v24@0:8^{TSCEASTNodeArray=*QQB}16
@44@0:8^{TSCEASTNodeArray=*QQB}16@24B32^{TSCEParser=@^{TSCELexer}^{TSCEASTNodeArray}^v@{TSKUIDStruct=QQ}{TSUCellCoord=ISBB}BB@}36
^{TSCEASTNodeArray=*QQB}24@0:8^{TSCEParser=@^{TSCELexer}^{TSCEASTNodeArray}^v@{TSKUIDStruct=QQ}{TSUCellCoord=ISBB}BB@}16
^{TSCEASTNodeArray=*QQB}40@0:8^{TSCEParser=@^{TSCELexer}^{TSCEASTNodeArray}^v@{TSKUIDStruct=QQ}{TSUCellCoord=ISBB}BB@}16@24@32
@"TSCETablesByNameDistributor"
@"<TSTCellIteratorData>"
v32@0:8^{TSCEASTNodeArray=*QQB}16{TSUCellCoord=ISBB}24
v52@0:8@16C24@28@36@44
v48@0:8@16Q24@32^v40
v36@0:8@16@24I32
B24@0:8^v16
@32@0:8^v16^@24
@48@0:8@16@24^v32^@40
@40@0:8@16^v24^@32
@"TSTWPTokenAttachment"
i36@0:8Q16i24@28
i32@0:8Q16@24
Q44@0:8Q16Q24i32@36
@48@0:8@16@24{TSUModelCellCoord={TSUCellCoord=ISBB}}32@40
@60@0:8@16@24{TSUViewCellCoord={TSUCellCoord=ISBB}}32@40r^{TSKUIDStruct=QQ}48B56
@60@0:8@16@24{TSUModelCellCoord={TSUCellCoord=ISBB}}32@40r^{TSKUIDStruct=QQ}48B56
@56@0:8@16@24{TSUViewCellCoord={TSUCellCoord=ISBB}}32@40r^{TSKUIDStruct=QQ}48
@56@0:8@16@24{TSUModelCellCoord={TSUCellCoord=ISBB}}32@40r^{TSKUIDStruct=QQ}48
@40@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24@32
{TSUModelCellCoord="_coord"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}}
v32@0:8I16I20@?24
@24@0:8B16B20
@"TSTPopUpMenuModel"
v32@0:8d16@24
{TSCEFunctionArgSpec=ciCi{unordered_set<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={__hash_table<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>, std::allocator<std::__hash_node<TSCEArgumentType, void *>>>={__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSCEArgumentType>>=Q}{__compressed_pair<float, std::equal_to<TSCEArgumentType>>=f}}}{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}s@ddsBBBBBBB}28@0:8c16i20C24
{TSCEFunctionArgSpec=ciCi{unordered_set<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={__hash_table<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>, std::allocator<std::__hash_node<TSCEArgumentType, void *>>>={__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSCEArgumentType>>=Q}{__compressed_pair<float, std::equal_to<TSCEArgumentType>>=f}}}{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}s@ddsBBBBBBB}32@0:8c16i20C24i28
{TSCEFunctionArgSpec=ciCi{unordered_set<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={__hash_table<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>, std::allocator<std::__hash_node<TSCEArgumentType, void *>>>={__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSCEArgumentType>>=Q}{__compressed_pair<float, std::equal_to<TSCEArgumentType>>=f}}}{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}s@ddsBBBBBBB}44@0:8c16i20C24r^v28B36B40
{TSCEFunctionArgSpec=ciCi{unordered_set<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={__hash_table<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>, std::allocator<std::__hash_node<TSCEArgumentType, void *>>>={__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSCEArgumentType>>=Q}{__compressed_pair<float, std::equal_to<TSCEArgumentType>>=f}}}{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}s@ddsBBBBBBB}40@0:8c16i20C24r^v28s36
{TSCEFunctionArgSpec=ciCi{unordered_set<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={__hash_table<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>, std::allocator<std::__hash_node<TSCEArgumentType, void *>>>={__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSCEArgumentType>>=Q}{__compressed_pair<float, std::equal_to<TSCEArgumentType>>=f}}}{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}s@ddsBBBBBBB}44@0:8c16i20C24i28r^v32B40
{TSCEFunctionArgSpec=ciCi{unordered_set<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={__hash_table<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>, std::allocator<std::__hash_node<TSCEArgumentType, void *>>>={__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSCEArgumentType>>=Q}{__compressed_pair<float, std::equal_to<TSCEArgumentType>>=f}}}{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}s@ddsBBBBBBB}68@0:8c16i20C24d28B36d40B48r^v52B60B64
{TSCEFunctionArgSpec=ciCi{unordered_set<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={__hash_table<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>, std::allocator<std::__hash_node<TSCEArgumentType, void *>>>={__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSCEArgumentType>>=Q}{__compressed_pair<float, std::equal_to<TSCEArgumentType>>=f}}}{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}s@ddsBBBBBBB}96@0:8c16i20C24i28d32B40d44B52B56r^v60B68B72r^v76s84B88B92
{TSCEFunctionArgSpec="_argumentType"c"_accessorMode"i"_rangeContext"C"_argumentContext"i"_disallowedTypes"{unordered_set<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>="__table_"{__hash_table<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>, std::allocator<std::__hash_node<TSCEArgumentType, void *>>>="__value_"{__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::hash<TSCEArgumentType>>="__value_"Q}"__p3_"{__compressed_pair<float, std::equal_to<TSCEArgumentType>>="__value_"f}}}"_modeValues"{vector<TSCEValue, std::allocator<TSCEValue>>="__begin_"^{TSCEValue}"__end_"^{TSCEValue}"__end_cap_"{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>="__value_"^{TSCEValue}}}"_defaultModeIndex"s"_functionSpec"@"TSCEFunctionSpec""_minValue"d"_maxValue"d"_index"s"_minInclusive"B"_maxInclusive"B"_disallowDuration"B"_disallowCurrency"B"_isInteger"B"_forceArrayMode"B"_referenceForGeometryOnly"B}
@52@0:8@16S24@28Q36Q44
{_NSRange=QQ}24@0:8@16
{_NSRange=QQ}32@0:8@16q24
{_NSRange=QQ}40@0:8@16q24o^q32
{_NSRange=QQ}48@0:8@16Q24{_NSRange=QQ}32
@48@0:8@16Q24{_NSRange=QQ}32
Q48@0:8@16Q24{_NSRange=QQ}32
@56@0:8@16Q24{_NSRange=QQ}32@48
@"NSRegularExpression"
@56@0:8@16r^{TSUDecimal={?=[2Q]}}24@32Q40Q48
@56@0:8@16@24@32Q40Q48
v32@0:8r^{TSUDecimal={?=[2Q]}}16@24
{TSUDecimal={?=[2Q]}}16@0:8
{TSUDecimal="_decimal"{?="w"[2Q]}}
B24@0:8I16I20
B24@0:8C16I20
@32@0:8^{?={?=Cb8b16b16b16b16b16}[0C]}16@24
v32@0:8^{?={?=Cb8b16b16b16b16b16}[0C]}16@24
v36@0:8^{?={?=Cb8b16b16b16b16b16}[0C]}16@24B32
v40@0:8@16B24B28B32B36
v24@0:8S16B20
v28@0:8B16I20B24
@28@0:8I16B20B24
@"NSObject"
@"TSTCellBorder"
@"TSKFormat"
@"TSDCommentStorage"
@"TSTImportWarningSet"
@"TSTCellSpec"
@40@0:8@16@24r^v32
@28@0:8^{_NSZone=}16B24
v32@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24
v40@0:8r^v16r^v24r^v32
{TSCECellCoordSet={map<unsigned short, TSUIndexSet, std::less<unsigned short>, std::allocator<std::pair<const unsigned short, TSUIndexSet>>>={__tree<std::__value_type<unsigned short, TSUIndexSet>, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>, std::allocator<std::__value_type<unsigned short, TSUIndexSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned short, TSUIndexSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>>=Q}}}}32@0:8@16@?24
{unordered_map<TSUCellCoord, TSTCell *, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSTCell *>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSTCell *>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTCell *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTCell *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSTCell *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTCell *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTCell *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
{unordered_map<TSKUIDStructCoord, TSTCell *, std::hash<TSKUIDStructCoord>, std::equal_to<TSKUIDStructCoord>, std::allocator<std::pair<const TSKUIDStructCoord, TSTCell *>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, std::__unordered_map_hasher<TSKUIDStructCoord, std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, std::hash<TSKUIDStructCoord>, std::equal_to<TSKUIDStructCoord>, true>, std::__unordered_map_equal<TSKUIDStructCoord, std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, std::equal_to<TSKUIDStructCoord>, std::hash<TSKUIDStructCoord>, true>, std::allocator<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStructCoord, std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, std::hash<TSKUIDStructCoord>, std::equal_to<TSKUIDStructCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStructCoord, std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, std::equal_to<TSKUIDStructCoord>, std::hash<TSKUIDStructCoord>, true>>="__value_"f}}}
{pair<TSTCell *, TSKUIDStructCoord>=@{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}}16@0:8
r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@0:8
@"TSTCellMap"
@"TSTCellUIDIterator"
d36@0:8I16{TSTSimpleRange=qQ}20
v36@0:8I16^d20^d28
v36@0:8I16@20@28
{_opaque_pthread_rwlock_t=q[192c]}16@0:8
v216@0:8{_opaque_pthread_rwlock_t=q[192c]}16
{vector<TSTStrokeWidthCacheEntry, std::allocator<TSTStrokeWidthCacheEntry>>="__begin_"^{TSTStrokeWidthCacheEntry}"__end_"^{TSTStrokeWidthCacheEntry}"__end_cap_"{__compressed_pair<TSTStrokeWidthCacheEntry *, std::allocator<TSTStrokeWidthCacheEntry>>="__value_"^{TSTStrokeWidthCacheEntry}}}
@40@0:8@16r^v24r^v32
v28@0:8r^v16I24
v28@0:8r^v16B24
{unordered_map<TSKUIDStruct, unsigned short, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, unsigned short>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, unsigned short>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned short>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned short>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, unsigned short>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned short>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned short>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSKUIDStruct, unsigned int, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, unsigned int>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, unsigned int>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned int>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned int>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, unsigned int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned int>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned int>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
@44@0:8@16S24@28@36
{TSKUIDStruct=QQ}36@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32
@"<TSCEFormulaReplacing>"
@40@0:8{TSUCellCoord=ISBB}16@24@32
@"TSTAccumulator"
{TSCECellCoordSet="_rowsPerColumn"{map<unsigned short, TSUIndexSet, std::less<unsigned short>, std::allocator<std::pair<const unsigned short, TSUIndexSet>>>="__tree_"{__tree<std::__value_type<unsigned short, TSUIndexSet>, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>, std::allocator<std::__value_type<unsigned short, TSUIndexSet>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned short, TSUIndexSet>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>>="__value_"Q}}}}
@"TSTAggregator"
@28@0:8@16S24
s16@0:8
@"TSTFunctionEndNode"
B24@0:8q16
@"NSMutableSet"
@"TSCERemoteDataValueMap"
@"TSUIntToIntDictionary"
C24@0:8Q16
v40@0:8{TSKUIDStruct=QQ}16@32
v24@0:8@"TSTGroupNode"16
v40@0:8{TSKUIDStruct=QQ}16@"TSTGroupNode"32
v32@0:8r^v16r^v24
i40@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@32
i26@0:8{TSUModelColumnIndex=S}16@18
v32@0:8C16r^{TSKUIDStruct=QQ}20C28
@36@0:8C16{TSUModelCellCoord={TSUCellCoord=ISBB}}20^B28
C32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16^B24
v28@0:8Q16C24
Q20@0:8C16
@"TSTSummaryCellVendor"
@"TSTCategoryAggregateFormulaOwner"
@"TSTTableGroupSortOrderUID"
{vector<double, std::allocator<double>>="__begin_"^d"__end_"^d"__end_cap_"{__compressed_pair<double *, std::allocator<double>>="__value_"^d}}
{vector<int, std::allocator<int>>="__begin_"^i"__end_"^i"__end_cap_"{__compressed_pair<int *, std::allocator<int>>="__value_"^i}}
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24@0:8r^{TSKUIDStruct=QQ}16
@60@0:8@16{TSTSimpleRange=qQ}24i40@44@52
{TSTSimpleRange=qQ}16@0:8
v32@0:8{TSTSimpleRange=qQ}16
@"<TSTStrokeLayerStrokeAndRange>"
{TSTSimpleRange="origin"q"length"Q}
@48@0:8q16@24^@32@40
{?=d{TSTSimpleRange=qQ}BQ}24@0:8q16
{?=d{TSTSimpleRange=qQ}BQ}56@0:8{?=d{TSTSimpleRange=qQ}BQ}16
v44@0:8@16{TSTSimpleRange=qQ}24i40
@40@0:8I16@20@28B36
{_NSRange=QQ}28@0:8{TSUCellCoord=ISBB}16B24
@112@0:8{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16
@32@0:8r^{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}16@24
@"NSLock"
@24@0:8d16
@28@0:8d16C24
{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB}16@0:8
B40@0:8q16q24q32
B32@0:8r^{TSUDecimal={?=[2Q]}}16@24
@24@0:8r^{TSCERelativeCellRef={TSCERelativeCellCoordinate=isBB}{TSKUIDStruct=QQ}b1b1b1b1}16
r^{TSCERelativeCellRef={TSCERelativeCellCoordinate=isBB}{TSKUIDStruct=QQ}b1b1b1b1}16@0:8
v24@0:8r^{TSCERelativeCellRef={TSCERelativeCellCoordinate=isBB}{TSKUIDStruct=QQ}b1b1b1b1}16
@24@0:8r^{TSCECrossTableReference={TSKUIDStruct=QQ}{TSCERelativeCellCoordinate=isBB}}16
{TSCECrossTableReference={TSKUIDStruct=QQ}{TSCERelativeCellCoordinate=isBB}}16@0:8
@32@0:8r^v16r^{TSUPreserveFlags=C}24
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
v32@0:8r^v16r^{TSUPreserveFlags=C}24
v32@0:8r^v16B24B28
B32@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24
@56@0:8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16q24B32B36^{TSCEUidCellRef={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}40@?48
{TSCEFormulaCreator=@?}16@0:8
{TSCEFormulaCreator=@?}24@0:8B16B20
v24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
@"TSCECategoryRef"
@"TSCEViewTractRef"
{RefTypeHolder<TSCECellRef, 0>="_ref"{TSCECellRef="coordinate"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"_tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}}}
@"TSTFormulaPredArgData"
@"TSCEUndoTractList"
{TSCERelativeCellRef="relativeCoord"{TSCERelativeCellCoordinate="row"i"column"s"_preserveRow"B"_preserveColumn"B}"tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}"preserveColumn"b1"preserveRow"b1"isSpanningColumn"b1"isSpanningRow"b1}
@40@0:8{TSUCellCoord=ISBB}16{TSKUIDStruct=QQ}24
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16@0:8
{TSCECellRef="coordinate"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"_tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}}
@48@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16{TSKUIDStruct=QQ}32
@40@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16@32
@40@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32
{TSCERangeRef="range"{TSCERangeCoordinate="_topLeft"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"_bottomRight"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}}"_tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}}
@44@0:8@16B24Q28Q36
@32@0:8r^v16r^v24
v36@0:8@16B24@28
I24@0:8r^{TSKUIDStruct=QQ}16
S24@0:8r^{TSKUIDStruct=QQ}16
{unordered_map<unsigned int, TSKUIDStruct, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, TSKUIDStruct>>>="__table_"{__hash_table<std::__hash_value_type<unsigned int, TSKUIDStruct>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, TSKUIDStruct>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, TSKUIDStruct>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>, std::allocator<std::__hash_value_type<unsigned int, TSKUIDStruct>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, TSKUIDStruct>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, TSKUIDStruct>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>>="__value_"f}}}
@44@0:8{_NSRange=QQ}16r^v32I40
@36@0:8r^{TSKUIDStruct=QQ}16r^v24B32
@60@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32r^v40r^v48B56
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}52@0:8{_NSRange=QQ}16@32B40@44
v44@0:8@16@24B32@36
I24@0:8I16B20
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}28@0:8I16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}20
{vector<TSCERangeCoordinate, std::allocator<TSCERangeCoordinate>>=^{TSCERangeCoordinate}^{TSCERangeCoordinate}{__compressed_pair<TSCERangeCoordinate *, std::allocator<TSCERangeCoordinate>>=^{TSCERangeCoordinate}}}16@0:8
@"TSCEFormulaRewrite_Uids"
{TSCERangeCoordinate="_topLeft"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"_bottomRight"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}}
@56@0:8@16@24I32I36Q40Q48
{TSCEGridDimensions="width"I"height"I}
B40@0:8r^{TSKUIDStruct=QQ}16@24@32
B32@0:8r^{TSKUIDStruct=QQ}16@24
@64@0:8@16{TSUCellCoord=ISBB}24{CGRect={CGPoint=dd}{CGSize=dd}}32
@"TSWPPadding"
{vector<TSKUIDStructTract, std::allocator<TSKUIDStructTract>>=^{TSKUIDStructTract}^{TSKUIDStructTract}{__compressed_pair<TSKUIDStructTract *, std::allocator<TSKUIDStructTract>>=^{TSKUIDStructTract}}}24@0:8Q16
{vector<TSKUIDStructTract, std::allocator<TSKUIDStructTract>>="__begin_"^{TSKUIDStructTract}"__end_"^{TSKUIDStructTract}"__end_cap_"{__compressed_pair<TSKUIDStructTract *, std::allocator<TSKUIDStructTract>>="__value_"^{TSKUIDStructTract}}}
@44@0:8r^v16C24@28r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}36
@52@0:8r^v16{TSKUIDStruct=QQ}24C40@44
{RefTypeHolder<TSCERangeRef, 1>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}32@0:8r^v16@24
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}36@0:8r^v16@24C32
B32@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16@24
C32@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16@24
@68@0:8@16@24@32@40r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}48@56B64
@60@0:8@16@24@32r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}40@48B56
@64@0:8@16@24r^v32C40r^v44@52B60
@64@0:8@16@24r^v32C40r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}44@52B60
@56@0:8@16@24@32r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}40@48
@28@0:8@16C24
v44@0:8^{TSCEASTNodeArray=*QQB}16{TSUCellCoord=ISBB}24C32{TSUCellCoord=ISBB}36
v40@0:8{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
@"TSTUIDRectRef"
@"TSTReferenceColorHelper"
^{CGPath=}24@0:8d16
v76@0:8d16^{CGContext=}24{CGRect={CGPoint=dd}{CGSize=dd}}32B64^{CGColor=}68
v80@0:8d16^{CGContext=}24{CGRect={CGPoint=dd}{CGSize=dd}}32B64^{CGColor=}68B76
@"<TSKPencilAnnotationStorage>"16@0:8
@"TSDPencilAnnotationStorage"
v32@0:8r^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16r^{TSUCellCoord=ISBB}24
B24@0:8r^{TSUCellCoord=ISBB}16
B32@0:8r^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16r^{TSUCellCoord=ISBB}24
v32@0:8r^{TSUCellCoord=ISBB}16@?24
{map<TSUCellCoord, std::set<TSUCellRect>, std::less<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, std::set<TSUCellRect>>>>="__tree_"{__tree<std::__value_type<TSUCellCoord, std::set<TSUCellRect>>, std::__map_value_compare<TSUCellCoord, std::__value_type<TSUCellCoord, std::set<TSUCellRect>>, std::less<TSUCellCoord>, true>, std::allocator<std::__value_type<TSUCellCoord, std::set<TSUCellRect>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSUCellCoord, std::set<TSUCellRect>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<TSUCellCoord, std::__value_type<TSUCellCoord, std::set<TSUCellRect>>, std::less<TSUCellCoord>, true>>="__value_"Q}}}
@56@0:8@16d24@32Q40Q48
@"TSKDurationFormat"
@20@0:8c16
@28@0:8s16@20
@32@0:8s16s20@24
^v24@0:8S16i20
@48@0:8@16^v24Q32Q40
q20@0:8i16
@28@0:8d16i24
@64@0:8q16q24q32q40q48q56
@"<TSTTableStrokeProviding>"
@"<TSTTableHiddenRowColumnProviding><TSTTableInternalGeometryProviding>"
@28@0:8r^v16c24
@32@0:8r^v16c24B28
@40@0:8r^v16c24B28r^{TSCEGridDimensions=II}32
@"TSCEValueGrid"
v28@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16C24
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}20@0:8C16
{unordered_map<TSCECategoryLevel, TSKUIDStructCoord, std::hash<TSCECategoryLevel>, std::equal_to<TSCECategoryLevel>, std::allocator<std::pair<const TSCECategoryLevel, TSKUIDStructCoord>>>="__table_"{__hash_table<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, std::__unordered_map_hasher<TSCECategoryLevel, std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, std::hash<TSCECategoryLevel>, std::equal_to<TSCECategoryLevel>, true>, std::__unordered_map_equal<TSCECategoryLevel, std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, std::equal_to<TSCECategoryLevel>, std::hash<TSCECategoryLevel>, true>, std::allocator<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCECategoryLevel, std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, std::hash<TSCECategoryLevel>, std::equal_to<TSCECategoryLevel>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCECategoryLevel, std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, std::equal_to<TSCECategoryLevel>, std::hash<TSCECategoryLevel>, true>>="__value_"f}}}
v36@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@24C32
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}28@0:8@16C24
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}36@0:8Q16@24C32
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}52@0:8^{TSTRunningAggregate={TSKUIDStruct=QQ}BB}16@24r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}32B40@44
{vector<TSCECellValue *, std::allocator<TSCECellValue *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSCECellValue *__strong *, std::allocator<TSCECellValue *>>="__value_"^@}}
{vector<TSTUidCoordsPerGroupValueTuple *, std::allocator<TSTUidCoordsPerGroupValueTuple *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSTUidCoordsPerGroupValueTuple *__strong *, std::allocator<TSTUidCoordsPerGroupValueTuple *>>="__value_"^@}}
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}32@0:8S16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}20B28
@"TSTGroupBySet"
{unordered_map<unsigned short, TSTRunningAggregate, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, TSTRunningAggregate>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, TSTRunningAggregate>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSTRunningAggregate>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSTRunningAggregate>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, TSTRunningAggregate>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSTRunningAggregate>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSTRunningAggregate>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}
{unordered_map<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}
S20@0:8C16
C24@0:8S16S20
{?=CS}24@0:8@16
{TSUDecimal={?=[2Q]}}32@0:8r^{TSUDecimal={?=[2Q]}}16{?=CS}24{?=CS}28
v40@0:8^{TSCEASTNodeArray=}16{TSUCellCoord=ISBB}24^v32
@"TSTFunctionNode"
@48@0:8@16@24@32@40
@48@0:8@"TSSPropertyMap"16@"TSSPropertyMap"24@"TSSPropertyMap"32@"TSSPropertyMap"40
@"TSSPropertySet"16@0:8
@56@0:8@"TSSPropertyMap"16@"TSSPropertyMap"24@"TSSPropertyMap"32@"TSSPropertyMap"40@"TSTConcurrentStylesheet"48
@32@0:8r^{Message=^^?{InternalMetadata=^v}}16@24
v32@0:8^{Message=^^?{InternalMetadata=^v}}16@24
@32@0:8r^{Message=^^?{InternalMetadata=^v}}16@"TSPUnarchiver"24
v32@0:8^{Message=^^?{InternalMetadata=^v}}16@"TSPArchiver"24
@40@0:8@16B24B28B32I36
d28@0:8S16@?20
@24@0:8r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16
v40@0:8r^{TSUCellCoord=ISBB}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32
v32@0:8r^{TSUCellCoord=ISBB}16@24
v32@0:8^v16r^{TSKUIDStruct=QQ}24
v32@0:8^v16r^v24
B40@0:8^v16r^{TSKUIDStruct=QQ}24r^v32
{unordered_map<TSKUIDStruct, TSCECellCoordSet, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECellCoordSet>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSUCellCoord, std::unordered_set<TSCEUuidPair>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, std::unordered_set<TSCEUuidPair>>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
i40@0:8@16@24r^{TSKUIDStruct=QQ}32
i32@0:8@16@24
v48@0:8@16{TSKUIDStruct=QQ}24B40B44
v24@0:8B16B20
v28@0:8r^{TSKUIDStruct=QQ}16B24
@24@0:8S16C20
@24@0:8I16C20
{TSUModelColumnIndex=S}20@0:8S16
{TSUModelColumnIndex=S}20@0:8I16
@56@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@48
v36@0:8I16C20Q24i32
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}52@0:8Q16i24I28C32Q36^B44
v32@0:8@16q24
v32@0:8r^{TSKUIDStruct=QQ}16@24
@"TSTPivotGroupingColumnOptionsMap"
@"TSTFormulaStore"
v32@0:8^{CGContext=}16@?24
{TSUCellCoord=ISBB}24@0:8S16I20
S24@0:8r^{TSUCellCoord=ISBB}16
I24@0:8r^{TSUCellCoord=ISBB}16
{TSUCellCoord=ISBB}20@0:8I16
@40@0:8@16{_NSRange=QQ}24
v32@0:8@16C24B28
B24@0:8{TSUModelRowIndex=I}16C20
B22@0:8{TSUModelColumnIndex=S}16C18
{TSUModelColumnIndex=S}32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUModelRowIndex=I}32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
v40@0:8{_NSRange=QQ}16r^v32
v34@0:8{_NSRange=QQ}16{TSUViewColumnIndex=S}32
v52@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@40B48
@"TSTHiddenStateExtent"
v24@0:8@"TSTMutableCellIteratorData"16
@"NSObject<TSTCellRegionIterating>"
{TSKUIDStruct=QQ}32@0:8@16@24
{TSKUIDStruct=QQ}20@0:8i16
i24@0:8r^{TSKUIDStruct=QQ}16
C32@0:8@16@24
B48@0:8@16@24Q32^Q40
B56@0:8@16@24@32Q40^Q48
@44@0:8@16@24r^{TSKUIDStruct=QQ}32S40
@48@0:8@16B24@28r^{TSKUIDStruct=QQ}36S44
{TSKUIDStruct=QQ}32@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24
@40@0:8@16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32
v40@0:8^v16@24Q32
{vector<TSCECategoryLevel, std::allocator<TSCECategoryLevel>>=^C^C{__compressed_pair<TSCECategoryLevel *, std::allocator<TSCECategoryLevel>>=^C}}24@0:8r^{TSKUIDStruct=QQ}16
v40@0:8{TSKUIDStruct=QQ}16@?32
C32@0:8{TSKUIDStruct=QQ}16
C40@0:8r^{TSKUIDStruct=QQ}16^B24^B32
@28@0:8C16Q20
v36@0:8r^{TSKUIDStruct=QQ}16I24@28
@32@0:8@16C24B28
@40@0:8@16r^{TSKUIDStruct=QQ}24C32C36
v32@0:8@16r^{TSUCellCoord=ISBB}24
@24@0:8C16B20
@40@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24@32
@48@0:8@16Q24Q32^{TSUPreserveFlags=C}40
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}36@0:8@16r^{TSKUIDStruct=QQ}24B32
{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}24@0:8@16
{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}32@0:8@16r^{TSKUIDStruct=QQ}24
{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}36@0:8@16r^{TSKUIDStruct=QQ}24C32
@36@0:8@16r^{TSKUIDStruct=QQ}24C32
{vector<TSCECellRef, std::allocator<TSCECellRef>>=^{TSCECellRef}^{TSCECellRef}{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>=^{TSCECellRef}}}36@0:8@16r^{TSKUIDStruct=QQ}24B32
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}32@0:8@16C24B28
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}40@0:8{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}16
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}52@0:8{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}16@40C48
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}36@0:8@16C24B28B32
@"TSTGroupByChangeDistributor"
{unordered_map<TSUCellCoord, TSTAggNode *, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSTAggNode *>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSTAggNode *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
{TSCEUidLookupList="_uids"{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}"_uidHashToLookupKeyMap"{unordered_map<unsigned long, unsigned int, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, unsigned int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, unsigned int>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, unsigned int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}"_uidHashOverflowMap"{unordered_map<unsigned long, std::unordered_set<unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, std::unordered_set<unsigned int>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}}
@"TSKCustomFormatWrapper"
@40@0:8@16Q24@?32
v24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
v40@0:8@16r^v24r^v32
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@0:8Q16
{TSTCellUIDLookupList="_columnUidLookupList"{TSCEUidLookupList="_uids"{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}"_uidHashToLookupKeyMap"{unordered_map<unsigned long, unsigned int, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, unsigned int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, unsigned int>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, unsigned int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}"_uidHashOverflowMap"{unordered_map<unsigned long, std::unordered_set<unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, std::unordered_set<unsigned int>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}}"_rowUidLookupList"{TSCEUidLookupList="_uids"{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}"_uidHashToLookupKeyMap"{unordered_map<unsigned long, unsigned int, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, unsigned int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, unsigned int>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, unsigned int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}"_uidHashOverflowMap"{unordered_map<unsigned long, std::unordered_set<unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, std::unordered_set<unsigned int>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}}"_cellLookupCoords"{vector<TSTLookupKeyCoord, std::allocator<TSTLookupKeyCoord>>="__begin_"^{TSTLookupKeyCoord}"__end_"^{TSTLookupKeyCoord}"__end_cap_"{__compressed_pair<TSTLookupKeyCoord *, std::allocator<TSTLookupKeyCoord>>="__value_"^{TSTLookupKeyCoord}}}}
@52@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32i48
v28@0:8B16@?20
@"<TSCERemoteDataStoreDelegate>"
@"NSOperationQueue"
@"TSCERemoteDataSpecifierSet"
{vector<TSTStrokeLayer *__unsafe_unretained, std::allocator<TSTStrokeLayer *__unsafe_unretained>>=^@^@{__compressed_pair<TSTStrokeLayer *__unsafe_unretained *, std::allocator<TSTStrokeLayer *__unsafe_unretained>>=^@}}16@0:8
v40@0:8{TSTSimpleRange=qQ}16@?32
@48@0:8@16@24{TSTSimpleRange=qQ}32
v44@0:8@16i24{TSTSimpleRange=qQ}28
v40@0:8@16{TSTSimpleRange=qQ}24
B32@0:8{TSTSimpleRange=qQ}16
{?=@@@@@}16@0:8
@"TSTMutableStrokeLayer"
v32@0:8^v16@?24
d40@0:8{TSTSimpleRange=qQ}16d32
d24@0:8q16
@"TSTStrokeOrderedLayer"
v56@0:8{TSUCellCoord=ISBB}16^@24^@32^@40^@48
@24@0:8S16S20
@"<TSTCustomStrokeProviding>"
@"TSUIntegerKeyDictionary"
Q40@0:8@16Q24Q32
Q48@0:8@16@24Q32Q40
v40@0:8@16Q24Q32
{TSUViewColumnOrRowIndex=I}20@0:8{TSUModelColumnOrRowIndex=I}16
v28@0:8{TSUModelColumnOrRowIndex=I}16{TSUViewColumnOrRowIndex=I}20C24
B28@0:8r^{TSKUIDStruct=QQ}16C24
B36@0:8r^{TSKUIDStruct=QQ}16{TSUModelColumnOrRowIndex=I}24{TSUViewColumnOrRowIndex=I}28C32
B24@0:8{TSUViewColumnOrRowIndex=I}16C20
B24@0:8{TSUModelColumnOrRowIndex=I}16C20
C20@0:8{TSUViewColumnOrRowIndex=I}16
C20@0:8{TSUModelColumnOrRowIndex=I}16
I32@0:8{_NSRange=QQ}16
B36@0:8{_NSRange=QQ}16C32
I24@0:8I16I20
v36@0:8{_NSRange=QQ}16{TSUModelColumnOrRowIndex=I}32
v36@0:8{_NSRange=QQ}16{TSUViewColumnOrRowIndex=I}32
v24@0:8{TSUModelColumnOrRowIndex=I}16{TSUModelColumnOrRowIndex=I}20
@48@0:8@16@24r^{TSKUIDStruct=QQ}32r^{TSUCellCoord=ISBB}40
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}32@0:8@16r^{TSUCellCoord=ISBB}24
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}40@0:8@16r^{TSUCellCoord=ISBB}24B32C36
@120@0:8{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@112
v48@0:8@16r^{TSUCellCoord=ISBB}24@32@40
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}20@0:8{TSUModelColumnOrRowIndex=I}16
{unordered_map<TSKUIDStruct, unsigned char, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, unsigned char>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, unsigned char>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned char>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned char>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, unsigned char>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned char>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned char>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}24@0:8r^v16
v32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16{TSUModelCellCoord={TSUCellCoord=ISBB}}24
v24@0:8r^{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}48@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32
{vector<TSUModelCellRect, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}^{TSUModelCellRect}{__compressed_pair<TSUModelCellRect *, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}}}24@0:8r^v16
B24@0:8r^{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUModelCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}44@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24@32B40
v44@0:8{_NSRange=QQ}16r^v32B40
{unordered_map<TSUModelCellCoord, TSUModelCellCoord, std::hash<TSUModelCellCoord>, std::equal_to<TSUModelCellCoord>, std::allocator<std::pair<const TSUModelCellCoord, TSUModelCellCoord>>>="__table_"{__hash_table<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::__unordered_map_hasher<TSUModelCellCoord, std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::hash<TSUModelCellCoord>, std::equal_to<TSUModelCellCoord>, true>, std::__unordered_map_equal<TSUModelCellCoord, std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::equal_to<TSUModelCellCoord>, std::hash<TSUModelCellCoord>, true>, std::allocator<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUModelCellCoord, std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::hash<TSUModelCellCoord>, std::equal_to<TSUModelCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUModelCellCoord, std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::equal_to<TSUModelCellCoord>, std::hash<TSUModelCellCoord>, true>>="__value_"f}}}
@"TSTCellRangeCache"
@"TSTMergeChangeDistributor"
@40@0:8@16r^{TSKUIDStruct=QQ}24@32
{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}20@0:8S16
@24@0:8r^{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}16
@48@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32
i28@0:8@16i24
{CGSize=dd}40@0:8@16d24@32
d20@0:8B16
d36@0:8S16B20B24^B28
d60@0:8I16B20B24B28B32{CGSize=dd}36^B52
d44@0:8{CGSize=dd}16I32d36
d24@0:8I16B20
v44@0:8@16i24I28B32I36I40
v28@0:8I16I20I24
B28@0:8^I16B24
d28@0:8I16I20I24
d24@0:8I16I20
v36@0:8I16I20I24@?28
{CGSize=dd}36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16B32
d36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16B32
d40@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32
d44@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16B32@36
d52@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16B32{CGSize=dd}36
v32@0:8d16Q24
B32@0:8^@16{TSUCellCoord=ISBB}24
B28@0:8q16I24
v40@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24
v36@0:8i16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}20
v52@0:8i16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}20{TSUCellRect={TSUCellCoord=ISBB}{?=II}}36
v76@0:8@16{TSUCellCoord=ISBB}24{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32B48@52@60@68
v52@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32B40@44
v40@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32
v40@0:8{TSUCellCoord=ISBB}16{TSUCellCoord=ISBB}24@32
{TSUCellCoord=ISBB}56@0:8{TSUCellCoord=ISBB}16{TSUCellCoord=ISBB}24{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32@48
v36@0:8@16S24@28
v36@0:8@16I24@28
v36@0:8i16@20@28
@76@0:8{TSUCellCoord=ISBB}16@24@32B40i44@48i56Q60Q68
v104@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32@40{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48B64i68@72B80i84@88@96
@56@0:8@16{TSUCellCoord=ISBB}24@32^q40^i48
@52@0:8@16{TSUCellCoord=ISBB}24@32q40i48
@40@0:8@16{TSUCellCoord=ISBB}24@32
{UIEdgeInsets=dddd}24@0:8{TSUCellCoord=ISBB}16
@"NSObject<OS_dispatch_group>"
@"TSKChangeNotifier"
@"TSTStrokeDefaultVendor"
@"TSTWPColumnCache"
@"TSTDupContentCache"
@"TSTWidthHeightCache"
@"TSTHiddenRowsColumnsCache"
@"TSDFill"
@"TSUColor"
@"TSDInfoGeometry"
@"TSDLayoutGeometry"
@"TSTMergeRangeSortedSet"
@"<TSWPStyleProviding>"
@"TSTFontInfoCache"
@"TSUWidthLimitedQueue"
@"TSTConcurrentMutableIndexSet"
@"TSTStrokeWidthCache"
@"TSTTextStyleToFontHeightCache"
@"NSCountedSet"
@"TSTLayout"
@"<TSTLayoutDynamicContentProtocol>"
@"TSTLayoutDynamicResizeInfo"
@"<TSTLayoutDynamicCellFillProtocol>"
@"TSWPColumnStyle"
@"TSTTextEngineDelegate"
B24@0:8@"TSKSelectionPath"16
@"<TSDHint>"16@0:8
@92@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16{TSUCellCoord=ISBB}32I40{CGSize=dd}44{CGSize=dd}60@76B84B88
@"NSNumber"
@32@0:8@"TSPObjectContext"16@"<TSDHint>"24
v24@0:8@"<TSDHint>"16
@60@0:8{CGSize=dd}16@32@40B48o^B52
B36@0:8@16@24B32
@"TSDLayout"60@0:8{CGSize=dd}16@"TSDLayout"32@"<TSDHint>"40B48o^B52
@"<TSDHint>"60@0:8{CGSize=dd}16@"TSDLayout"32@"<TSDHint>"40B48o^B52
@"TSDLayout"32@0:8@"<TSDHint>"16@"TSDLayout"24
B36@0:8@"<TSDHint>"16@"<TSDHint>"24B32
@"<TSDHint>"24@0:8@"TSDLayout"16
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}44@0:8{CGSize=dd}16@32B40
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}68@0:8S16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}20d36{CGSize=dd}44@60
B28@0:8@16B24
B56@0:8@16{CGSize=dd}24@40@48
@32@0:8{CGSize=dd}16
B24@0:8@?16
@"TSTLayoutSpace"
@56@0:8@16^v24S32r^{TSKUIDStruct=QQ}36@44S52
v36@0:8^v16r^{TSUCellCoord=ISBB}24B32
v36@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24S32
@"TSCEUuidReferences"
@"<TSCEFormulaOwning>"
@"<TSCECalculationEngineRegistration>"
@44@0:8i16{_NSRange=QQ}20@36
{unordered_map<unsigned int, TSTTableDataObject *, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, TSTTableDataObject *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned int, TSTTableDataObject *>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, TSTTableDataObject *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, TSTTableDataObject *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>, std::allocator<std::__hash_value_type<unsigned int, TSTTableDataObject *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, TSTTableDataObject *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, TSTTableDataObject *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>>="__value_"f}}}
@64@0:8@16@24{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32Q48Q56
@80@0:8@16@24@32@40{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48Q64Q72
v40@0:8@?16@?24@?32
v48@0:8@?16@?24@?32@?40
{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}32@0:8@16@24
@40@0:8r^v16r^v24@32
@28@0:8i16r^v20
@40@0:8r^v16r^v24r^v32
{vector<TSCEFormulaObject *, std::allocator<TSCEFormulaObject *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSCEFormulaObject *__strong *, std::allocator<TSCEFormulaObject *>>="__value_"^@}}
v64@0:8r^{TSKUIDStruct=QQ}16Q24^v32^v40^v48^v56
v40@0:8r^v16Q24^v32
@"TSTCellUIDLookupListWrapper"
{TSKUIDStruct=QQ}64@0:8r^v16r^v24^Q32^Q40^Q48^v56
B32@0:8^v16Q24
{deque<TSKUIDStruct, std::allocator<TSKUIDStruct>>="__map_"{__split_buffer<TSKUIDStruct *, std::allocator<TSKUIDStruct *>>="__first_"^^{TSKUIDStruct}"__begin_"^^{TSKUIDStruct}"__end_"^^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct **, std::allocator<TSKUIDStruct *>>="__value_"^^{TSKUIDStruct}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<TSKUIDStruct>>="__value_"Q}}
@44@0:8i16@20{TSKUIDStruct=QQ}28
@32@0:8^{TSCEBooleanValue=^^?B{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}16@24
^{TSCEBooleanValue=^^?B{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}16@0:8
^{TSCEBooleanValue=^^?B{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}
@36@0:8S16@20q28
@60@0:8S16@20q28q36q44q52
[256@"TSTTableTile"]
[256@"TSPLazyReference"]
@32@0:8r^{TSUDecimal={?=[2Q]}}16@24
@32@0:8^{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB}16@24
^{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB}
{unordered_map<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
@"TSTHierarchicalCellDiffMap"
@56@0:8@16{TSKUIDStruct=QQ}24@40@48
Q40@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24
@36@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16B32
@40@0:8q16{TSKUIDStruct=QQ}24
{map<TSKUIDStruct, TSTPivotGroupingColumnOptions *, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSTPivotGroupingColumnOptions *>>>="__tree_"{__tree<std::__value_type<TSKUIDStruct, TSTPivotGroupingColumnOptions *>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSTPivotGroupingColumnOptions *>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSTPivotGroupingColumnOptions *>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSTPivotGroupingColumnOptions *>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSTPivotGroupingColumnOptions *>, std::less<TSKUIDStruct>, true>>="__value_"Q}}}
d20@0:8S16
v36@0:8^d16^d24I32
B24@0:8I16S20
v36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16I32
v36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16S32
@40@0:8@16@24I32S36
{vector<TSTWidthHeightCacheEntry<4>, std::allocator<TSTWidthHeightCacheEntry<4>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<TSTWidthHeightCacheEntry<4> *, std::allocator<TSTWidthHeightCacheEntry<4>>>="__value_"^v}}
@"TSCERemoteDataCoordinator"
@"TSUNetworkReachability"
@"NSObject<OS_dispatch_source>"
@36@0:8@16@24C32
v36@0:8r^v16r^{TSKUIDStruct=QQ}24B32
{unordered_map<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
@36@0:8i16@20@28
@44@0:8i16{TSUCellCoord=ISBB}20@28@36
@52@0:8i16@20@28Q36Q44
@44@0:8i16@20Q28Q36
@44@0:8i16{TSUCellCoord=ISBB}20{TSUCellRect={TSUCellCoord=ISBB}{?=II}}28
@60@0:8i16{TSUCellCoord=ISBB}20{TSUCellRect={TSUCellCoord=ISBB}{?=II}}28{TSUCellRect={TSUCellCoord=ISBB}{?=II}}44
@36@0:8i16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}20
@52@0:8i16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}20{TSUCellRect={TSUCellCoord=ISBB}{?=II}}36
v36@0:8@16i24@?28
@68@0:8i16@20{TSUCellCoord=ISBB}28@36@44@52@60
@60@0:8i16@20{TSUCellCoord=ISBB}28@36@44@52
@"NSHashTable"
@"NSSet"
@"TSULocale"16@0:8
@"<TSWPStyleProviding>"16@0:8
@64@0:8{UIEdgeInsets=dddd}16i48@52B60
@26@0:8{TSUModelColumnIndex=S}16i18i22
{unordered_map<TSKUIDStruct, TSCEMutableUIDSet *, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCEMutableUIDSet *>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{TSKUIDStruct=QQ}24@0:8I16B20
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}28@0:8@16B24
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}36@0:8{_NSRange=QQ}16B32
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}28@0:8@"NSIndexSet"16B24
@"NSMutableIndexSet"28@0:8r^v16B24
v48@0:8{UIEdgeInsets=dddd}16
@"TSTLayoutContentCachedKey"
@"TSWPColumn"
v24@0:8^{CGImage=}16
^{CGImage=}16@0:8
^{CGImage=}
v52@0:8@16C24^v28^v36^v44
@48@0:8@16@24r^v32r^v40
Q20@0:8B16
C20@0:8B16
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}32@0:8r^v16q24
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}24@0:8q16
@40@0:8I16C20^{TSKUIDStruct=QQ}24q32
C40@0:8{_NSRange=QQ}16q32
r^v24@0:8q16
v32@0:8r^v16q24
v40@0:8r^v16r^{TSKUIDStruct=QQ}24q32
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}40@0:8r^v16r^v24q32
@"TSTReferenceNode"
@"<TSTCanvasReferenceProvider>"
@52@0:8@16{TSTSimpleRange=qQ}24i40Q44
@"TSTStrokeLayer"24@0:8Q16
@32@0:8{TSTSimpleRange=qQ}16
{vector<TSTStrokeLayerRun, std::allocator<TSTStrokeLayerRun>>="__begin_"^{TSTStrokeLayerRun}"__end_"^{TSTStrokeLayerRun}"__end_cap_"{__compressed_pair<TSTStrokeLayerRun *, std::allocator<TSTStrokeLayerRun>>="__value_"^{TSTStrokeLayerRun}}}
v32@0:8q16q24
v40@0:8{_NSRange=QQ}16q32
v116@0:8@16@24i32@36@44i52@56@64i72@76@84i92@96@104i112
v32@0:8@16r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24
{vector<NSString *, std::allocator<NSString *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<NSString *__strong *, std::allocator<NSString *>>="__value_"^@}}
{vector<TSCEValue, std::allocator<TSCEValue>>="__begin_"^{TSCEValue}"__end_"^{TSCEValue}"__end_cap_"{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>="__value_"^{TSCEValue}}}
{vector<bool, std::allocator<bool>>="__begin_"^Q"__size_"Q"__cap_alloc_"{__compressed_pair<unsigned long, std::allocator<unsigned long>>="__value_"Q}}
@52@0:8r^{TSCEGrid=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}16@24i32^{TSCEEvaluationContext=}36B44B48
{TSCETaggedDecimalList="_list"{vector<TSCETaggedDecimal, std::allocator<TSCETaggedDecimal>>="__begin_"^{TSCETaggedDecimal}"__end_"^{TSCETaggedDecimal}"__end_cap_"{__compressed_pair<TSCETaggedDecimal *, std::allocator<TSCETaggedDecimal>>="__value_"^{TSCETaggedDecimal}}}"_startIdx"Q"_size"Q}
@"TSSStyle"
@"TSSStylesheet"
Q28@0:8@16i24
v28@0:8Q16B24
^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}
d40@0:8@16d24N^d32
[8{os_unfair_lock_s="_os_unfair_lock_opaque"I}]
[8{unordered_map<TSTFontInfoCacheDupContentEntry, double, std::hash<TSTFontInfoCacheDupContentEntry>, std::equal_to<TSTFontInfoCacheDupContentEntry>, std::allocator<std::pair<const TSTFontInfoCacheDupContentEntry, double>>>="__table_"{__hash_table<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, std::__unordered_map_hasher<TSTFontInfoCacheDupContentEntry, std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, std::hash<TSTFontInfoCacheDupContentEntry>, std::equal_to<TSTFontInfoCacheDupContentEntry>, true>, std::__unordered_map_equal<TSTFontInfoCacheDupContentEntry, std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, std::equal_to<TSTFontInfoCacheDupContentEntry>, std::hash<TSTFontInfoCacheDupContentEntry>, true>, std::allocator<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSTFontInfoCacheDupContentEntry, std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, std::hash<TSTFontInfoCacheDupContentEntry>, std::equal_to<TSTFontInfoCacheDupContentEntry>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSTFontInfoCacheDupContentEntry, std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, std::equal_to<TSTFontInfoCacheDupContentEntry>, std::hash<TSTFontInfoCacheDupContentEntry>, true>>="__value_"f}}}]
@"TSWPTextMeasurerBundle"
{vector<std::vector<NSString *>, std::allocator<std::vector<NSString *>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<NSString *> *, std::allocator<std::vector<NSString *>>>="__value_"^v}}
{vector<TSKUIDStructCoord, std::allocator<TSKUIDStructCoord>>="__begin_"^{TSKUIDStructCoord}"__end_"^{TSKUIDStructCoord}"__end_cap_"{__compressed_pair<TSKUIDStructCoord *, std::allocator<TSKUIDStructCoord>>="__value_"^{TSKUIDStructCoord}}}
^v24@0:8@16
^v32@0:8@16r^{TSUCellCoord=ISBB}24
{map<NSString *, TSTHeaderNameMgrEntry *, std::less<NSString *>, std::allocator<std::pair<NSString *const, TSTHeaderNameMgrEntry *>>>="__tree_"{__tree<std::__value_type<NSString *, TSTHeaderNameMgrEntry *>, std::__map_value_compare<NSString *, std::__value_type<NSString *, TSTHeaderNameMgrEntry *>, std::less<NSString *>, true>, std::allocator<std::__value_type<NSString *, TSTHeaderNameMgrEntry *>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<NSString *, TSTHeaderNameMgrEntry *>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<NSString *, std::__value_type<NSString *, TSTHeaderNameMgrEntry *>, std::less<NSString *>, true>>="__value_"Q}}}
@"TSTHeaderNameMgr"
{TSCECellRefSet={map<TSKUIDStruct, TSCECellCoordSet, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECellCoordSet>>>={__tree<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSCECellCoordSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>>=Q}}}}24@0:8@16
{unordered_map<NSString *, TSCECellRefSet, std::hash<NSString *>, std::equal_to<NSString *>, std::allocator<std::pair<NSString *const, TSCECellRefSet>>>="__table_"{__hash_table<std::__hash_value_type<NSString *, TSCECellRefSet>, std::__unordered_map_hasher<NSString *, std::__hash_value_type<NSString *, TSCECellRefSet>, std::hash<NSString *>, std::equal_to<NSString *>, true>, std::__unordered_map_equal<NSString *, std::__hash_value_type<NSString *, TSCECellRefSet>, std::equal_to<NSString *>, std::hash<NSString *>, true>, std::allocator<std::__hash_value_type<NSString *, TSCECellRefSet>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<NSString *, std::__hash_value_type<NSString *, TSCECellRefSet>, std::hash<NSString *>, std::equal_to<NSString *>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<NSString *, std::__hash_value_type<NSString *, TSCECellRefSet>, std::equal_to<NSString *>, std::hash<NSString *>, true>>="__value_"f}}}
v32@0:8^v16r^{TSUCellCoord=ISBB}24
{TSUCellCoord=ISBB}20@0:8B16
{TSUCellCoord=ISBB}32@0:8r^{TSUCellCoord=ISBB}16@24
{vector<NSString *, std::allocator<NSString *>>=^@^@{__compressed_pair<NSString *__strong *, std::allocator<NSString *>>=^@}}28@0:8@16B24
^{TSTHeaderPerTable={TSKUIDStruct=QQ}{TSUCellCoord=ISBB}@@@@B}28@0:8r^{TSKUIDStruct=QQ}16B24
^v24@0:8r^{TSUCellCoord=ISBB}16
@36@0:8@16B24^Q28
v40@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24r^{TSKUIDStruct=QQ}32
v40@0:8r^v16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24r^{TSKUIDStruct=QQ}32
v32@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16r^{TSKUIDStruct=QQ}24
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
B40@0:8@16r^v24r^{TSKUIDStruct=QQ}32
@28@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16B24
@36@0:8@16r^{TSKUIDStruct=QQ}24B32
{TSCECellRefSet={map<TSKUIDStruct, TSCECellCoordSet, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECellCoordSet>>>={__tree<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSCECellCoordSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>>=Q}}}}36@0:8@16r^{TSKUIDStruct=QQ}24B32
{TSCECellRefSet={map<TSKUIDStruct, TSCECellCoordSet, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECellCoordSet>>>={__tree<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSCECellCoordSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>>=Q}}}}24@0:8r^{TSKUIDStruct=QQ}16
{vector<TSTHeaderNameMgrTile *, std::allocator<TSTHeaderNameMgrTile *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSTHeaderNameMgrTile *__strong *, std::allocator<TSTHeaderNameMgrTile *>>="__value_"^@}}
{unordered_map<TSUCellCoord, TSTHeaderNameMgrEntry *, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSTHeaderNameMgrEntry *>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
{unordered_map<TSCEUidCellRef, TSCECellCoordSet, std::hash<TSCEUidCellRef>, std::equal_to<TSCEUidCellRef>, std::allocator<std::pair<const TSCEUidCellRef, TSCECellCoordSet>>>="__table_"{__hash_table<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, std::__unordered_map_hasher<TSCEUidCellRef, std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, std::hash<TSCEUidCellRef>, std::equal_to<TSCEUidCellRef>, true>, std::__unordered_map_equal<TSCEUidCellRef, std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, std::equal_to<TSCEUidCellRef>, std::hash<TSCEUidCellRef>, true>, std::allocator<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCEUidCellRef, std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, std::hash<TSCEUidCellRef>, std::equal_to<TSCEUidCellRef>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCEUidCellRef, std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, std::equal_to<TSCEUidCellRef>, std::hash<TSCEUidCellRef>, true>>="__value_"f}}}
{unordered_map<TSKUIDStruct, TSTHeaderPerTable *, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSTHeaderPerTable *>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSUCellCoord, TSKUIDStruct, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSKUIDStruct>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
@"TSCENameTrie"
{unordered_map<NSString *, TSUCellCoord, std::hash<NSString *>, std::equal_to<NSString *>, std::allocator<std::pair<NSString *const, TSUCellCoord>>>="__table_"{__hash_table<std::__hash_value_type<NSString *, TSUCellCoord>, std::__unordered_map_hasher<NSString *, std::__hash_value_type<NSString *, TSUCellCoord>, std::hash<NSString *>, std::equal_to<NSString *>, true>, std::__unordered_map_equal<NSString *, std::__hash_value_type<NSString *, TSUCellCoord>, std::equal_to<NSString *>, std::hash<NSString *>, true>, std::allocator<std::__hash_value_type<NSString *, TSUCellCoord>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<NSString *, std::__hash_value_type<NSString *, TSUCellCoord>, std::hash<NSString *>, std::equal_to<NSString *>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<NSString *, std::__hash_value_type<NSString *, TSUCellCoord>, std::equal_to<NSString *>, std::hash<NSString *>, true>>="__value_"f}}}
@60@0:8@16{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24B56
@36@0:8@16{TSUCellCoord=ISBB}24B32
@"TSTCellDiffArray"
v32@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16
@32@0:8r^{TSKUIDStruct=QQ}16r^v24
@24@0:8{TSUModelColumnOrRowIndex=I}16i20
@20@0:8{TSUModelColumnOrRowIndex=I}16
{TSUModelColumnOrRowIndex=I}16@0:8
{TSUModelColumnOrRowIndex="_index"I}
@24@0:8{TSUViewColumnOrRowIndex=I}16i20
{TSUViewColumnOrRowIndex=I}16@0:8
{TSUViewColumnOrRowIndex="_index"I}
r*16@0:8
{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__l"{__long="__data_"*"__size_"Q"__cap_"Q}"__s"{__short="__data_"[23c]""{?="__size_"C}}"__r"{__raw="__words"[3Q]})}}}
@56@0:8@16Q24Q32{TSUCellRect={TSUCellCoord=ISBB}{?=II}}40
v48@0:8@16Q24Q32@?40
v64@0:8@16Q24Q32{TSUCellRect={TSUCellCoord=ISBB}{?=II}}40@?56
v32@0:8r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16r^{TSKUIDStruct=QQ}24
@32@0:8r^v16^v24
v36@0:8^v16B24@28
{unordered_map<TSKUIDStruct, TSCEInternalCellRefSet, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCEInternalCellRefSet>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, std::allocator<std::pair<const TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>>>="__table_"{__hash_table<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, std::__unordered_map_hasher<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, true>, std::__unordered_map_equal<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, std::equal_to<TSCEInternalCellReference>, std::hash<TSCEInternalCellReference>, true>, std::allocator<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, std::equal_to<TSCEInternalCellReference>, std::hash<TSCEInternalCellReference>, true>>="__value_"f}}}
@36@0:8d16B24o^d28
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8d16{CGRect={CGPoint=dd}{CGSize=dd}}24
{CGRect={CGPoint=dd}{CGSize=dd}}76@0:8d16{CGRect={CGPoint=dd}{CGSize=dd}}24B56o^@60o^{CGSize=dd}68
v76@0:8B16d20^{CGContext=}28{CGRect={CGPoint=dd}{CGSize=dd}}36@68
v76@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16d32{UIEdgeInsets=dddd}40B72
{set<TSTMergeRangeElem, TSTMergeRangeElemCompare, std::allocator<TSTMergeRangeElem>>="__tree_"{__tree<TSTMergeRangeElem, TSTMergeRangeElemCompare, std::allocator<TSTMergeRangeElem>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<TSTMergeRangeElem, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, TSTMergeRangeElemCompare>="__value_"Q}}}
@112@0:8@16d24d32@40B48C52{UIEdgeInsets=dddd}56i88i92q96@104
@40@0:8@"TSTLayoutEngine"16@"TSTCellRegion"24@"TSTCellRegion"32
@24@0:8@"TSTLayoutEngine"16
@32@0:8@"TSTLayoutEngine"16@"TSTCellRegion"24
@24@0:8@"<TSTLayoutDynamicResizeInfoProtocol>"16
v24@0:8@"TSTLayoutEngine"16
@"TSTImmutableColumnRowUIDMap"
B32@0:8@16Q24
{unordered_map<TSUViewColumnIndex, TSUModelColumnIndex, std::hash<TSUViewColumnIndex>, std::equal_to<TSUViewColumnIndex>, std::allocator<std::pair<const TSUViewColumnIndex, TSUModelColumnIndex>>>="__table_"{__hash_table<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::__unordered_map_hasher<TSUViewColumnIndex, std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::hash<TSUViewColumnIndex>, std::equal_to<TSUViewColumnIndex>, true>, std::__unordered_map_equal<TSUViewColumnIndex, std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::equal_to<TSUViewColumnIndex>, std::hash<TSUViewColumnIndex>, true>, std::allocator<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUViewColumnIndex, std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::hash<TSUViewColumnIndex>, std::equal_to<TSUViewColumnIndex>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUViewColumnIndex, std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::equal_to<TSUViewColumnIndex>, std::hash<TSUViewColumnIndex>, true>>="__value_"f}}}
@"TSTCategoryTranslator"
@"TSTTableDataListCache"
@"TSTTableTile"
@"TSTTableTileRowInfo"
@45@0:8@16r^{TSKUIDStruct=QQ}24{TSUPreserveFlags=C}32C33C37S41
@33@0:8@16r^{TSKUIDStruct=QQ}24{TSUPreserveFlags=C}32
@"TSCEUndoTract"
@40@0:8C16{TSKUIDStruct=QQ}20C36
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
v24@0:8^{TSKUIDStruct=QQ}16
{map<TSKUIDStructCoord, TSTCell *, std::less<TSKUIDStructCoord>, std::allocator<std::pair<const TSKUIDStructCoord, TSTCell *>>>="__tree_"{__tree<std::__value_type<TSKUIDStructCoord, TSTCell *>, std::__map_value_compare<TSKUIDStructCoord, std::__value_type<TSKUIDStructCoord, TSTCell *>, std::less<TSKUIDStructCoord>, true>, std::allocator<std::__value_type<TSKUIDStructCoord, TSTCell *>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStructCoord, TSTCell *>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStructCoord, std::__value_type<TSKUIDStructCoord, TSTCell *>, std::less<TSKUIDStructCoord>, true>>="__value_"Q}}}
@34@0:8@16{TSUModelColumnIndex=S}24@26
@42@0:8@16@24{TSUModelColumnIndex=S}32@34
@32@0:8@16^B24
B36@0:8I16r^{TSKUIDStruct=QQ}20@28
{TSUModelColumnIndex=S}24@0:8@16
@"TSTFormulaPredicate"
B28@0:8q16C24
B36@0:8I16@20@28
v44@0:8@16@24Q32B40
v34@0:8{TSUModelColumnIndex=S}16@18@?26
@26@0:8{TSUModelColumnIndex=S}16@18
Q26@0:8{TSUModelColumnIndex=S}16@18
@76@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32r^{TSKUIDStruct=QQ}40C48C52S56r^{TSUPreserveFlags=C}60s68C72
@68@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32r^{TSKUIDStruct=QQ}40C48C52S56r^{TSUPreserveFlags=C}60
@52@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32C40C44S48
@48@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32C40C44
@52@0:8C16{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}20{TSUCellCoord=ISBB}44
@36@0:8C16@20{TSUCellCoord=ISBB}28
B32@0:8@16{TSUCellCoord=ISBB}24
@56@0:8C16@20@28@36C44C48B52
@80@0:8C16@20@28C36C40{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}44{TSUCellCoord=ISBB}68B76
@64@0:8C16@20@28C36C40@44{TSUCellCoord=ISBB}52B60
@76@0:8C16@20@28C36C40{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}44{TSUCellCoord=ISBB}68
{TSCEFormulaCreator=@?}44@0:8C16C20@24I32B36B40
@96@0:8C16@20@28d36d44C52C56{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}60{TSUCellCoord=ISBB}84B92
@92@0:8C16@20@28d36d44C52C56{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}60{TSUCellCoord=ISBB}84
@72@0:8C16d20d28C36{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}40{TSUCellCoord=ISBB}64
@80@0:8C16d20C28d32C40C44{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}48{TSUCellCoord=ISBB}72
@60@0:8C16@20{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}28{TSUCellCoord=ISBB}52
v40@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32
v48@0:8^v16@24r^{TSKUIDStruct=QQ}32r^{TSUCellCoord=ISBB}40
C48@0:8@16Q24@32{TSUCellCoord=ISBB}40
B36@0:8C16C20C24^B28
B40@0:8{TSUCellCoord=ISBB}16r^{TSKUIDStruct=QQ}24@32
v32@0:8q16@24
v40@0:8r^v16@24^B32
v28@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16C24
@48@0:8r^v16@24r^{TSKUIDStruct=QQ}32^B40
@32@0:8r^{TSKUIDStruct=QQ}16{TSUCellCoord=ISBB}24
C24@0:8C16B20
{TSCEUidCellRef={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@0:8
v64@0:8{TSCEUidCellRef={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@"TSTFormulaPredArg"
{TSCEUidCellRef="_columnUid"{TSKUIDStruct="_lower"Q"_upper"Q}"_rowUid"{TSKUIDStruct="_lower"Q"_upper"Q}"_tableUid"{TSKUIDStruct="_lower"Q"_upper"Q}}
@"TSTStrokeSelection"
@68@0:8i16@20d28{CGRect={CGPoint=dd}{CGSize=dd}}36
v24@0:8^{CGContext=}16
@40@0:8@16@24@?32
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}32@0:8^v16^v24
@36@0:8{_NSRange=QQ}16I32
@36@0:8{_NSRange=QQ}16S32
v32@0:8q16@?24
v40@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@?32
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}24@0:8Q16
@32@0:8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
v36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16B32
{set<TSUCellRect, TSTCellRangeRowMajorLess, std::allocator<TSUCellRect>>="__tree_"{__tree<TSUCellRect, TSTCellRangeRowMajorLess, std::allocator<TSUCellRect>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<TSUCellRect, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, TSTCellRangeRowMajorLess>="__value_"Q}}}
v28@0:8^v16B24
{set<TSUCellRect, TSTCellRangeColumnMajorLess, std::allocator<TSUCellRect>>="__tree_"{__tree<TSUCellRect, TSTCellRangeColumnMajorLess, std::allocator<TSUCellRect>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<TSUCellRect, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, TSTCellRangeColumnMajorLess>="__value_"Q}}}
v52@0:8^v16r^v24r^v32C40B44B48
B36@0:8^v16r^v24B32
@52@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32C48
@36@0:8r^v16r^v24C32
B24@0:8r^v16
B36@0:8r^v16r^v24B32
v48@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
v40@0:8r^v16r^v24B32B36
@68@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32{TSKUIDStruct=QQ}48i64
@32@0:8q16@24
@36@0:8S16S20I24@28
^{TSCECellRecordTile=SI^{TSCECellRecord}QQQ@}16@0:8
^{TSCECellRecordTile=SI^{TSCECellRecord}QQQ@}
{TSKUIDStruct=QQ}18@0:8{TSUModelColumnIndex=S}16
{TSKUIDStruct=QQ}20@0:8{TSUModelRowIndex=I}16
{TSUModelColumnIndex=S}32@0:8{TSKUIDStruct=QQ}16
{TSUModelRowIndex=I}32@0:8{TSKUIDStruct=QQ}16
{TSUViewColumnIndex=S}32@0:8{TSKUIDStruct=QQ}16
{TSUViewRowIndex=I}32@0:8{TSKUIDStruct=QQ}16
{TSKUIDStruct=QQ}18@0:8{TSUViewColumnIndex=S}16
{TSKUIDStruct=QQ}20@0:8{TSUViewRowIndex=I}16
@"NSMutableIndexSet"24@0:8@"NSMutableIndexSet"16
v20@0:8{TSUViewRowIndex=I}16
v18@0:8{TSUViewColumnIndex=S}16
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@0:8{TSUCellCoord=ISBB}16
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@0:8Q16
@32@0:8r^v16o^B24
i32@0:8o@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24
@24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
@20@0:8{TSUViewRowIndex=I}16
@32@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16@24
i32@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24
d20@0:8{TSUViewRowIndex=I}16
d18@0:8{TSUViewColumnIndex=S}16
i42@0:8{TSUViewColumnIndex=S}16r^v18@26Q34
i48@0:8{TSUViewRowIndex=I}16r^v20@28Q36B44
v24@0:8{TSUViewRowIndex=I}16{TSUViewRowIndex=I}20
v20@0:8{TSUViewColumnIndex=S}16{TSUViewColumnIndex=S}18
v36@0:8{_NSRange=QQ}16{TSUViewRowIndex=I}32
v40@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24@32
@32@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24
{TSUViewCellCoord={TSUCellCoord=ISBB}}24@0:8@16
B32@0:8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
{TSUViewCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32@0:8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{vector<TSUViewCellRect, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}^{TSUViewCellRect}{__compressed_pair<TSUViewCellRect *, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}}}32@0:8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{vector<TSUViewCellRect, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}^{TSUViewCellRect}{__compressed_pair<TSUViewCellRect *, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}}}24@0:8@16
{TSUModelCellCoord={TSUCellCoord=ISBB}}48@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
{TSUViewCellCoord={TSUCellCoord=ISBB}}48@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@56@0:8@16i24i28s32B36i40r^v44S52
B24@0:8s16s20
i24@0:8Q16
c24@0:8Q16
q48@0:8@16Q24q32@40
{vector<TSCEFunctionArgSpec, std::allocator<TSCEFunctionArgSpec>>="__begin_"^{TSCEFunctionArgSpec}"__end_"^{TSCEFunctionArgSpec}"__end_cap_"{__compressed_pair<TSCEFunctionArgSpec *, std::allocator<TSCEFunctionArgSpec>>="__value_"^{TSCEFunctionArgSpec}}}
@"TSTStrokeLayerMergedStack"
v32@0:8r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16@24
B40@0:8^v16r^v24r^{TSKUIDStruct=QQ}32
{unordered_map<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, std::allocator<std::pair<const TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>>>="__table_"{__hash_table<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, std::__unordered_map_hasher<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, true>, std::__unordered_map_equal<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, std::equal_to<TSCEInternalCellReference>, std::hash<TSCEInternalCellReference>, true>, std::allocator<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, std::equal_to<TSCEInternalCellReference>, std::hash<TSCEInternalCellReference>, true>>="__value_"f}}}
v24@0:8{TSCEGridDimensions=II}16
B40@0:8{TSUCellCoord=ISBB}16@24r^{TSKUIDStruct=QQ}32
{unordered_map<TSCECellRef, TSCEFormulaObject *, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, std::allocator<std::pair<const TSCECellRef, TSCEFormulaObject *>>>="__table_"{__hash_table<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>, std::allocator<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>>="__value_"f}}}
{unordered_set<TSCECellRef, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, std::allocator<TSCECellRef>>="__table_"{__hash_table<TSCECellRef, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, std::allocator<TSCECellRef>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<TSCECellRef, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCECellRef, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCECellRef, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCECellRef, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCECellRef, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCECellRef, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCECellRef, void *> *>, std::allocator<std::__hash_node<TSCECellRef, void *>>>="__value_"{__hash_node_base<std::__hash_node<TSCECellRef, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::hash<TSCECellRef>>="__value_"Q}"__p3_"{__compressed_pair<float, std::equal_to<TSCECellRef>>="__value_"f}}}
v36@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24S32
{unordered_set<TSKUIDStruct, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<TSKUIDStruct>>={__hash_table<TSKUIDStruct, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<TSKUIDStruct>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *>, std::allocator<std::__hash_node<TSKUIDStruct, void *>>>={__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSKUIDStruct>>=Q}{__compressed_pair<float, std::equal_to<TSKUIDStruct>>=f}}}20@0:8S16
{vector<TSCESubFormulaOwnerIndex, std::allocator<TSCESubFormulaOwnerIndex>>=^S^S{__compressed_pair<TSCESubFormulaOwnerIndex *, std::allocator<TSCESubFormulaOwnerIndex>>=^S}}16@0:8
v28@0:8S16@?20
{unordered_map<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *, std::hash<TSCESubFormulaOwnerIndex>, std::equal_to<TSCESubFormulaOwnerIndex>, std::allocator<std::pair<const TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>>>="__table_"{__hash_table<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, std::__unordered_map_hasher<TSCESubFormulaOwnerIndex, std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, std::hash<TSCESubFormulaOwnerIndex>, std::equal_to<TSCESubFormulaOwnerIndex>, true>, std::__unordered_map_equal<TSCESubFormulaOwnerIndex, std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, std::equal_to<TSCESubFormulaOwnerIndex>, std::hash<TSCESubFormulaOwnerIndex>, true>, std::allocator<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCESubFormulaOwnerIndex, std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, std::hash<TSCESubFormulaOwnerIndex>, std::equal_to<TSCESubFormulaOwnerIndex>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCESubFormulaOwnerIndex, std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, std::equal_to<TSCESubFormulaOwnerIndex>, std::hash<TSCESubFormulaOwnerIndex>, true>>="__value_"f}}}
{unordered_map<TSCECellRef, NSString *, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, std::allocator<std::pair<const TSCECellRef, NSString *>>>="__table_"{__hash_table<std::__hash_value_type<TSCECellRef, NSString *>, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, NSString *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, NSString *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>, std::allocator<std::__hash_value_type<TSCECellRef, NSString *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, NSString *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, NSString *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>>="__value_"f}}}
v32@0:8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16@?24
@40@0:8@16r^{TSKUIDStruct=QQ}24^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}32
@40@0:8@16r^{TSKUIDStruct=QQ}24r^{TSUCellCoord=ISBB}32
B40@0:8{TSUCellCoord=ISBB}16@24^Q32
@"TSCECellCoordinateVector"
@32@0:8^{TSCEASTNodeArray=*QQB}16r^{TSUCellCoord=ISBB}24
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32@0:8@16r^{TSKUIDStruct=QQ}24
d76@0:8d16@24q32d40I48^v52^v60^v68
B60@0:8d16@24q32I40^v44^v52
@32@0:8@16r^v24
@32@0:8I16C20^{TSKUIDStruct=QQ}24
C32@0:8{_NSRange=QQ}16
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}32@0:8r^v16r^v24
@68@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@40{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48i64
I32@0:8^v16^{TSTColumnOrRowMap=IIIB}24
{_NSRange=QQ}32@0:8r^{TSTColumnOrRowMap=IIIB}16r^v24
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16r^v32r^v40
{TSUCellCoord=ISBB}40@0:8{TSUCellCoord=ISBB}16r^v24r^v32
^v48@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16r^v32r^v40
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}48@0:8r^v16^@24{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32
{set<TSTColumnOrRowMap, TSTColumnOrRowMapTgtLess, std::allocator<TSTColumnOrRowMap>>="__tree_"{__tree<TSTColumnOrRowMap, TSTColumnOrRowMapTgtLess, std::allocator<TSTColumnOrRowMap>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<TSTColumnOrRowMap, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, TSTColumnOrRowMapTgtLess>="__value_"Q}}}
@48@0:8Q16@24@32Q40
v72@0:8@16^q24^q32^q40^q48^q56^q64
v48@0:8@16^q24^q32^q40
@"NSCalendar"
{unordered_map<TSKUIDStruct, TSTPlanForGroupingCell, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSTPlanForGroupingCell>>>={__hash_table<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>=f}}}24@0:8@16
B40@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@32
@48@0:8@16@24q32@40
v44@0:8@16S24@28@36
B56@0:8@16r^v24@32@40@48
S24@0:8q16
@48@0:8Q16q24@32@40
@60@0:8d16C24@28@36{TSKUIDStruct=QQ}44
{vector<TSUCellCoord, std::allocator<TSUCellCoord>>=^{TSUCellCoord}^{TSUCellCoord}{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>=^{TSUCellCoord}}}16@0:8
v40@0:8{vector<TSUCellCoord, std::allocator<TSUCellCoord>>=^{TSUCellCoord}^{TSUCellCoord}{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>=^{TSUCellCoord}}}16
Q24@0:8C16B20
i28@0:8@16{TSUViewRowIndex=I}24
v40@0:8C16B20^@24^@32
i26@0:8@16{TSUViewColumnIndex=S}24
i56@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16@?24@?32@?40@?48
v52@0:8{TSUViewRowIndex=I}16@?20@?28@?36@?44
{TSUModelCellCoord={TSUCellCoord=ISBB}}24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@40@0:8r^{TSKUIDStruct=QQ}16r^v24r^v32
r^{TSUCellCoord=ISBB}16@0:8
@"TSCEFormulaRewrite_RegionInfo"
{unordered_map<TSUCellCoord, TSUCellCoord, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSUCellCoord>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSUCellCoord>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
@48@0:8r^{TSKUIDStruct=QQ}16r^v24r^{TSKUIDStruct=QQ}32r^v40
B32@0:8^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16{TSUCellCoord=ISBB}24
S24@0:8I16S20
{TSUCellCoord=ISBB}32@0:8{TSUColumnRowOffset=ii}16{TSUCellCoord=ISBB}24
I28@0:8Q16I24
@"TSTHiddenStateIndexSet"
v56@0:8@16@24{TSUCellCoord=ISBB}32Q40^B48
{TSTPerformanceLoggingToken=@Q}16@0:8
v32@0:8{TSTPerformanceLoggingToken=@Q}16
{TSTPerformanceLoggingToken="logHandle"@"NSObject<OS_os_log>""signpostID"Q}
c24@0:8^{TSCEEvaluationContext=}16
{vector<TSCEGrid, std::allocator<TSCEGrid>>="__begin_"^{TSCEGrid}"__end_"^{TSCEGrid}"__end_cap_"{__compressed_pair<TSCEGrid *, std::allocator<TSCEGrid>>="__value_"^{TSCEGrid}}}
B32@0:8{CGPoint=dd}16
v40@0:8@16^{CGContext=}24@32
v40@0:8@"TSWPUIGraphicalAttachment"16^{CGContext=}24@"TSWPSelection"32
@"TSTTableNameSelection"
@24@0:8r*16
q24@0:8q16
q32@0:8q16@24
@56@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32q48
@40@0:8{TSKUIDStruct=QQ}16q32
@34@0:8{TSUModelColumnIndex=S}16q18@26
r^{TSCEFunctor=@C}16@0:8
{TSCEFunctor="_formula"@"TSCEFormulaObject""_numArgs"C}
@"TSTFormulaRewriteSpec"
{TSUViewCellCoord="_coord"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}}
@"TSTPivotTranslator"
i32@0:8@16S24B28
i28@0:8@16S24
{TSCEAnyRef=S{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}{TSKUIDStruct=QQ}B@}16@0:8
@45@0:8@16r^{TSKUIDStruct=QQ}24{TSUPreserveFlags=C}32@33B41
@45@0:8@16@24{TSUPreserveFlags=C}32@33B41
{TSCEAnyRef="_refType"S"_spanningRef"{TSCESpanningRangeRef="rangeRef"{TSCERangeRef="range"{TSCERangeCoordinate="_topLeft"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"_bottomRight"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}}"_tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}}"rangeContext"C}"_uuidValue"{TSKUIDStruct="_lower"Q"_upper"Q}"_couldBeIntersection"B"_refSet"@"TSCEReferenceSetWrapper"}
^{TSCETableResolver=^^?}24@0:8@"<TSCEReferenceResolving>"16
C24@0:8@"TSCECategoryRef"16
{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}44@0:8@"TSCECategoryRef"16r^{TSKUIDStruct=QQ}24C32^@36
@"TSCEValueGrid"44@0:8@"TSCECategoryRef"16r^{TSKUIDStruct=QQ}24C32^@36
{vector<TSCECellRef, std::allocator<TSCECellRef>>=^{TSCECellRef}^{TSCECellRef}{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>=^{TSCECellRef}}}32@0:8@"TSCECategoryRef"16r^{TSKUIDStruct=QQ}24
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}24@0:8@"TSCECategoryRef"16
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}24@0:8@"TSCECategoryRef"16
@"<TSCEResolverContainer>"32@0:8@"NSString"16@"TSKDocumentRoot"24
@"<TSCEReferenceResolving>"40@0:8@"NSString"16@"TSKDocumentRoot"24@"<TSCEReferenceResolving>"32
@"<TSCEReferenceResolving>"40@0:8@"NSString"16@"TSKDocumentRoot"24@"NSString"32
@40@0:8q16@24@32
{TSTImportWarningSetCellWarningFlags="mCondFormatAboveAvgEqualAverageImportWarning"b1"mCondFormatAboveAvgStdDevImportWarning"b1"mCondFormatComplexFormulaImportWarning"b1"mCondFormatContainsErrorsImportWarning"b1"mCondFormatExprImportWarning"b1"mCondFormatNotContainsErrorsImportWarning"b1"mCondFormatParametersNotAllTheSameTypeImportWarning"b1"mCondFormatStopIfTrueImportWarning"b1"mCondFormatUnsupportedOperatorImportWarning"b1"mCondFormatUnsupportedStylingImportWarning"b1"mCondFormatUnsupportedTimePeriodImportWarning"b1"mUnsupportedConditionalFormatImportWarning"b1"mUnsupportedDataFormatImportWarning"b1"mDurationFormatRangeChangedUpgradeWarning"b1}
{TSTImportFormulaWarning="mType"q"mOriginalFormula"@"NSString""mSupplementaryText"@"NSString"}
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24@0:8Q16
{unordered_map<TSCECellRef, TSTImportWarningSet *, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, std::allocator<std::pair<const TSCECellRef, TSTImportWarningSet *>>>="__table_"{__hash_table<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>, std::allocator<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>>="__value_"f}}}
{vector<TSCECellRef, std::allocator<TSCECellRef>>="__begin_"^{TSCECellRef}"__end_"^{TSCECellRef}"__end_cap_"{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>="__value_"^{TSCECellRef}}}
@36@0:8q16@24i32
@132@0:8{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@112i120@124
v132@0:8{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@112i120@124
v64@0:8{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16@48r^{TSKUIDStruct=QQ}56
v72@0:8{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16@48r^{TSKUIDStruct=QQ}56B64B68
@56@0:8{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16r^{TSKUIDStruct=QQ}48
v40@0:8i16@20d28B36
v52@0:8i16@20d28B36d40B48
v60@0:8@16B24B28@32B40i44i48@52
v56@0:8{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16r^{TSKUIDStruct=QQ}48
v48@0:8{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16
v28@0:8@16c24
v40@0:8@16i24i28B32B36
v32@0:8@16i24i28
v56@0:8@16{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}24
v56@0:8{vector<TSCEReferenceValue, std::allocator<TSCEReferenceValue>>=^{TSCEReferenceValue}^{TSCEReferenceValue}{__compressed_pair<TSCEReferenceValue *, std::allocator<TSCEReferenceValue>>=^{TSCEReferenceValue}}}16r^{TSKUIDStruct=QQ}40@48
v24@0:8S16s20
v24@0:8c16c20
B32@0:8@16^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24
@48@0:8@16{TSKUIDStruct=QQ}24{TSUCellCoord=ISBB}40
^{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB}36@0:8@16i24^{TSCEWarningReportingContext=BB@}28
@36@0:8@16i24^{TSCEWarningReportingContext=BB@}28
B36@0:8@16i24^{TSCEWarningReportingContext=BB@}28
{TSCEGrid=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}44@0:8@16i24^{TSCEEvaluationContext=}28r^{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}36
^{TSCEReferenceValue=^^?@{TSUCellCoord=ISBB}{TSUPreserveFlags=C}BB}36@0:8@16i24^{TSCEWarningReportingContext=BB@}28
^{TSCEGrid=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}16@0:8
^{TSCEReferenceValue=^^?@{TSUCellCoord=ISBB}{TSUPreserveFlags=C}BB}16@0:8
B112@0:8{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16
v32@0:8@16^v24
{unordered_map<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
@48@0:8@16@24^B32^B40
@40@0:8@16Q24@32
B24@0:8@"<TSUMultipleChoiceListChoiceProviding>"16
@"NSString"24@0:8Q16
@"NSDate"24@0:8Q16
i20@0:8c16
v44@0:8r^v16i24@28@?36
v40@0:8r^v16@24@?32
@"NSObject<TSTTableDataPayloadHashing>"
@"TSPTemporaryObjectContextDelegate"
@"TSPObjectContext"
@40@0:8@16@24^i32
@48@0:8^{TSCETableResolver=^^?}16r^{TSUCellCoord=ISBB}24r^{TSUCellCoord=ISBB}32r^{TSUPreserveFlags=C}40
@32@0:8^{TSCETableResolver=^^?}16r^{TSCECellTractRefCore={TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSKUIDStruct=QQ}C{TSUPreserveFlags=C}BBB}24
@56@0:8^v16r^{TSKUIDStruct=QQ}24r^{TSUCellCoord=ISBB}32r^{TSUCellCoord=ISBB}40r^{TSUPreserveFlags=C}48
r^{TSCECellTractRefCore={TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSKUIDStruct=QQ}C{TSUPreserveFlags=C}BBB}16@0:8
@32@0:8r^{TSCEGridCoord=II}16r^{TSCECellTractRefCore={TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSKUIDStruct=QQ}C{TSUPreserveFlags=C}BBB}24
{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}24@0:8{TSUCellCoord=ISBB}16
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}32@0:8^v16B24B28
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}32@0:8r^{TSUCellCoord=ISBB}16B24B28
{shared_ptr<TSCEValue>=^{TSCEValue}^{__shared_weak_count}}16@0:8
v32@0:8{shared_ptr<TSCEValue>=^{TSCEValue}^{__shared_weak_count}}16
{shared_ptr<TSCEValue>="__ptr_"^{TSCEValue}"__cntrl_"^{__shared_weak_count}}
B28@0:8I16I20B24
C20@0:8C16
B24@0:8C16C20
@32@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16@24
v32@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16@24
v40@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16@24@32
v36@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16@24B32
v44@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16@24@32B40
v36@0:8{TSUDecimal={?=[2Q]}}16B32
v32@0:8{TSUDecimal={?=[2Q]}}16
v24@0:8r^{TSUDecimal={?=[2Q]}}16
v48@0:8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@24B32^B36B44
@32@0:8C16B20^B24
B32@0:8C16@20S28
v28@0:8B16C20B24
@28@0:8C16^B20
@24@0:8^B16
v24@0:8r^{TSCEAnyRef=S{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}{TSKUIDStruct=QQ}B@}16
v24@0:8r^{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}16
@40@0:8Q16@24@32
@40@0:8I16C20{TSKUIDStruct=QQ}24
@48@0:8S16C20{TSKUIDStruct=QQ}24d40
v28@0:8S16@20
v24@0:8C16S20
Q36@0:8S16^@20^@28
v28@0:8S16Q20
^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}24@0:8{TSUCellCoord=ISBB}16
v36@0:8{TSUCellCoord=ISBB}16B24@?28
@40@0:8{TSUCellCoord=ISBB}16^B24^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}32
@32@0:8{TSUCellCoord=ISBB}16^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}24
{?=IIIIIIIIIS}100@0:8@16@24@32@40@48@56@64@72@80^{?={?=Cb8b16b16b16b16b16}[0C]}88B96
v68@0:8@16{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32@40@48B56B60B64
v64@0:8@16{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32@40@48B56B60
v72@0:8@16{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32@40@48B56B60^B64
v60@0:8@16r^{TSKUIDStruct=QQ}24@32@40B48B52B56
{?=IIIIIIIIIS}32@0:8@16{TSUCellCoord=ISBB}24
{?=IIIIIIIIIS}36@0:8@16^{?={?=Cb8b16b16b16b16b16}[0C]}24B32
@32@0:8@16d24
v32@0:8@16B24C28
v40@0:8@16@24B32C36
v32@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16{TSUCellCoord=ISBB}24
@24@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}16@0:8
v32@0:8^@16@24
v40@0:8^@16@24@?32
@24@0:8i16B20
v56@0:8@16r^{TSKUIDStruct=QQ}24@32@40B48B52
{vector<TSTCell *, std::allocator<TSTCell *>>=^@^@{__compressed_pair<TSTCell *__strong *, std::allocator<TSTCell *>>=^@}}44@0:8{TSUModelRowIndex=I}16@20^v28@?36
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}40@0:8@16{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32
v48@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16r^{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}40
@"TSTTableDataList"
@"TSTTableTileStorage"
@"TSTTableHeaderStorage"
@"TSPLazyReference"
@"TSTMergeRegionMap"
@48@0:8{_NSRange=QQ}16{_NSRange=QQ}32
@32@0:8r^v16r^{TSCEGridDimensions=II}24
{TSCEGridCoord=II}16@0:8
B24@0:8r^{TSCEGridCoord=II}16
v24@0:8r^{TSCEGridCoord=II}16
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24@0:8I16I20
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24@0:8r^{TSCEGridCoord=II}16
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24@0:8Q16
{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}16@0:8
v32@0:8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16r^{TSCEGridCoord=II}24
@32@0:8r^{TSCEGridCoord=II}16i24i28
v28@0:8I16@?20
{TSCEGridCoord="column"I"row"I}
{unordered_map<TSCEGridCoord, TSCEValue, std::hash<TSCEGridCoord>, std::equal_to<TSCEGridCoord>, std::allocator<std::pair<const TSCEGridCoord, TSCEValue>>>="__table_"{__hash_table<std::__hash_value_type<TSCEGridCoord, TSCEValue>, std::__unordered_map_hasher<TSCEGridCoord, std::__hash_value_type<TSCEGridCoord, TSCEValue>, std::hash<TSCEGridCoord>, std::equal_to<TSCEGridCoord>, true>, std::__unordered_map_equal<TSCEGridCoord, std::__hash_value_type<TSCEGridCoord, TSCEValue>, std::equal_to<TSCEGridCoord>, std::hash<TSCEGridCoord>, true>, std::allocator<std::__hash_value_type<TSCEGridCoord, TSCEValue>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCEGridCoord, std::__hash_value_type<TSCEGridCoord, TSCEValue>, std::hash<TSCEGridCoord>, std::equal_to<TSCEGridCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCEGridCoord, std::__hash_value_type<TSCEGridCoord, TSCEValue>, std::equal_to<TSCEGridCoord>, std::hash<TSCEGridCoord>, true>>="__value_"f}}}
@24@0:8^{TSCEGridAccessContext=@^{TSCEFunctionArgSpec}i^{TSCEEvaluationContext}BBBBBCC}16
@28@0:8r^{TSCEReferenceValue=^^?@{TSUCellCoord=ISBB}{TSUPreserveFlags=C}BB}16C24
@"TSCEEvalRef"
@52@0:8{?={?=II}{?=II}}16^{CGAffineTransform=dddddd}32d40B48
v60@0:8@16{?={?=II}{?=II}}24^{CGAffineTransform=dddddd}40d48B56
@"TSKAnnotationAuthor"16@0:8
v24@0:8@"TSKAnnotationAuthor"16
@"NSDate"16@0:8
@"TSDCommentStorage"16@0:8
v24@0:8@"TSDCommentStorage"16
@64@0:8@16@24{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}32
@40@0:8@16@24{TSUModelCellCoord={TSUCellCoord=ISBB}}32
@44@0:8r^{TSKUIDStruct=QQ}16{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}24I40
@60@0:8r^{TSKUIDStruct=QQ}16r^v24@32B40r^v44r^v52
@56@0:8r^{TSKUIDStruct=QQ}16r^v24r^{TSKUIDStruct=QQ}32r^v40@48
@72@0:8r^{TSKUIDStruct=QQ}16r^v24r^{TSKUIDStruct=QQ}32r^v40@48@56r^{TSKUIDStruct=QQ}64
@48@0:8r^{TSKUIDStruct=QQ}16r^v24r^v32{TSUCellCoord=ISBB}40
@40@0:8r^v16r^v24r^{TSKUIDStruct=QQ}32
@"TSTFormulaRewrite_PivotInfo"
@"TSTAutofillSelection"
Q32@0:8@16@24
d40@0:8@16@24@32
@"NSObject<TSDContainerInfo>"16@0:8
@"TSTTableReferences"16@0:8
@"TSTSelectionDragController"16@0:8
v24@0:8@"TSTSelectionDragController"16
v24@0:8@"NSSet"16
B48@0:8@16{_NSRange=QQ}24@40
@48@0:8@16{_NSRange=QQ}24@40
B24@0:8@"UITextField"16
v24@0:8@"UITextField"16
v32@0:8@"UITextField"16q24
B48@0:8@"UITextField"16{_NSRange=QQ}24@"NSString"40
@"UIMenu"48@0:8@"UITextField"16{_NSRange=QQ}24@"NSArray"40
v32@0:8@16^{CGContext=}24
v24@0:8@"CALayer"16
v32@0:8@"CALayer"16^{CGContext=}24
@"<CAAction>"32@0:8@"CALayer"16@"NSString"24
@36@0:8{CGPoint=dd}16B32
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8{TSUCellCoord=ISBB}16
v56@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16^{?=Bdddddd}32^{CGRect={CGPoint=dd}{CGSize=dd}}40^{CGRect={CGPoint=dd}{CGSize=dd}}48
{TSUCellCoord=ISBB}32@0:8{CGPoint=dd}16
{CGAffineTransform=dddddd}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{TSUCellCoord=ISBB}48
{CGRect={CGPoint=dd}{CGSize=dd}}120@0:8@16{TSUCellCoord=ISBB}24@32{CGRect={CGPoint=dd}{CGSize=dd}}40{CGAffineTransform=dddddd}72
{CGAffineTransform=dddddd}40@0:8@16@24{TSUCellCoord=ISBB}32
v44@0:8@16Q24B32@36
v32@0:8^{CGContext=}16@24
{CGRect={CGPoint=dd}{CGSize=dd}}72@0:8@16{CGAffineTransform=dddddd}24
v48@0:8@16{?={?=II}{?=II}}24^{CGContext=}40
v48@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24^{CGContext=}40
v64@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24^{CGContext=}56
v68@0:8@16B24{CGRect={CGPoint=dd}{CGSize=dd}}28^{CGContext=}60
v80@0:8^{CGContext=}16d24{CGRect={CGPoint=dd}{CGSize=dd}}32@64{TSUCellCoord=ISBB}72
v124@0:8^{CGContext=}16{CGRect={CGPoint=dd}{CGSize=dd}}24@56{TSUCellCoord=ISBB}64q72{CGRect={CGPoint=dd}{CGSize=dd}}80i112@116
@32@0:8{CGPoint=dd}16
@"TSTTableReferences"
@"TSTSelectionDragController"
@"<TSTTableAnimationController>"
@"<TSTTableRepDelegate>"
@"<TSTTableChromeProvider>"
@"<TSTCanvasReferenceController>"
@"TSTCellRegionGatherer"
@"CAShapeLayer"
v40@0:8@16{TSUCellCoord=ISBB}24B32B36
v24@0:8@"TSTTableRep"16
v24@0:8@"TSTLayoutSpace"16
v40@0:8@"TSTCell"16{TSUCellCoord=ISBB}24B32B36
B24@0:8@"TSDRep"16
4tl:4
t*@es
"@M,
r<S[
Tg*
af3'P
KUUUUU
r-Yr
YUUUU
U@_6
F@>F
lz9~
/@o)
?Q&^
?M5i
3?4"L)L
>=kv
@R0-
