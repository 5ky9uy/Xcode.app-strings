@(#)PROGRAM:CoreSpeechFoundation  PROJECT:CoreSpeech-1
pbhw
pbtb
pbiu
otua
ciov
bhev
eltb
siar
tdtb
cvdh
cvpc
tcid
tsop
rtsh
tvps
tvmr
pbmr
ciov
emoh
cvad
fff?
(knN
?ffffff
mcpl
supo
samples_fed
best_start
best_end
best_score
is_secondchance
isEarlyDetect
[_phId = %lu]
[_decision = %lu]
[_combinedScore = %f]
[_ndapiScore = %f]
[_ndapiResult = %@]
[_recognizerScore = %f]
[_isSecondChance = %i]
[_isSecondChanceCandidate = %i]
[_isRunningQuasar = %i]
v8@?0
CSAudioTimeConverterPool
-[CSAudioTimeConverterPool _getAudioTimeConverterWithAudioStreamId:]_block_invoke
-[CSAudioChunkForTV initWithXPCObject:]
avgPower
peakPower
timeStamp
numChannels
audioFormat
streamHandleID
packets
com.apple.MobileAsset.VoiceTriggerAssets
com.apple.MobileAsset.VoiceTriggerAssetsIPad
com.apple.MobileAsset.VoiceTriggerHSAssetsIPad
com.apple.MobileAsset.VoiceTriggerAssetsWatch
com.apple.MobileAsset.VoiceTriggerHSAssetsWatch
com.apple.MobileAsset.VoiceTriggerAssetsMarsh
com.apple.MobileAsset.VoiceTriggerAssetsMac
com.apple.MobileAsset.VoiceTriggerAssetsTV
com.apple.MobileAsset.VoiceTriggerHSAssets
com.apple.corespeech
Framework
en_US_POSIX
yyyyMMdd-HHmmss
CSLogInitIfNeeded_block_invoke
Unknown
com.apple.ssr
SSRLogInitIfNeeded_block_invoke
corespeech.json
assets.json
speakerRecognition.json
adBlockerPayload.bin
mitigation.json
hybridendpointer.json
hybridendpointer_marsh.json
/System/Library/PrivateFrameworks/CoreSpeechDarwin.framework
PrivateFrameworks/CoreSpeech.framework
+[CSAsset fallBackAssetResourcePath]
defaultFallbackHearst
defaultFallbackAdBlocker
-[CSAsset initWithResourcePath:configFile:configVersion:assetProvderType:]
+[CSAsset decodeJson:]
-[CSAsset getNumberForKey:category:default:]
-[CSAsset getStringForKey:category:default:]
-[CSAsset getValueForKey:category:]
configVersion:%@ resourcePath:%@ path:%@
MobileAssets
Trial
+[CSAsset isLeftConfigVersion:newerThanRightConfigVersion:]
Premium
%@_%@
nohash
((?:[a-z]|[0-9])*)\.asset
-[CSAsset assetHashInResourcePath:]
%02x
-[CSReusableBufferBackingStore configureWithBytes:length:]
CSInitialContinousZeros
CSMaxContinousZeros
CSMidSegmentContinousZeros
start
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
best_phrase
early_warning
is_rescoring
CSOSTransactionStat
-[CSOSTransactionStat reportCreation]_block_invoke
-[CSOSTransactionStat reportDestroy]_block_invoke
+[CSUtils(Security) checkEntitlementForToken:withEntitlement:]
+[CSUtils(Security) getTokenFromDictionary:withTokenKey:]
com.apple.da
liveOnHomePod
DeviceClassNumber
IsVirtualDevice
CSIsVirtualMachine_block_invoke
U+73bmG4kBGj6kpreQXUTQ
DeviceSupportsUSBTypeC
InternalBuild
CSResourcePathInSystemDomainMaskByAppending
CSSafeSetOutErrorWithNSError
+N9mZUAHooNvMiQnjeTJ8g
PTQ+ABwag03BwO/CKvIK/A
+[CSUtils isIOSDeviceSupportingBargeIn]_block_invoke
BuildVersion
IOPlatformExpertDevice
+[CSUtils deviceHwRevision]
config-number
yyyyMMdd
Siri
BluetoothFeatures
AnnounceTelephony
hang_up
RingtoneOverA2DP
CoreSpeech
support_js
+[CSUtils(AudioDevice) isHeadphoneDeviceWithRecordRoute:playbackRoute:]
+[CSUtils(AudioDevice) isBluetoothAudioDeviceConnected]
BTDetails_IsHFPRoute
+[CSUtils(AudioDevice) isBluetoothVehicleOutput]
+[CSAudioRecordContext defaultContext]
CSAudioRecordTypeUnspecified
CSAudioRecordTypeHomePress
CSAudioRecordTypeWiredHeadsetButtonPress
CSAudioRecordTypeBluetoothHeadSetButtonPress
CSAudioRecordTypeUIButtonPress
CSAudioRecordTypeServerInvoke
CSAudioRecordTypeVoiceTrigger
CSAudioRecordTypeStark
CSAudioRecordTypeTVRemote
CSAudioRecordTypeRaiseToSpeak
CSAudioRecordTypeHearstDoubleTap
CSAudioRecordTypeHearstVoice
CSAudioRecordTypeJarvis
CSAudioRecordTypePost
CSAudioRecordTypeDictation
CSAudioRecordTypeVoiceTriggerTraining
CSAudioRecordTypeOpportuneSpeaker
CSAudioRecordTypeOpportuneSpeakerListenerWithCall
CSAudioRecordTypeRemoraVoice
CSAudioRecordTypeRemoraButton
CSAudioRecordTypeDarwinVoice
CSAudioRecordTypeUnknown
recordType[%@] deviceId[%@] turnIdentifier[%@] alwaysUseBuiltInMic[%d] isRequestDuringActiveCall[%d] triggerEventInfo[%@] spokenNotification [%d]
type
alwaysUseRemoteBuiltInMic
deviceId
isRequestDuringActiveCall
triggerEventInfo
turnIdentifier
isSpokenNotification
samples_at_fire
start_sample_count
-[CSKeywordAnalyzerNDAPI initWithConfigPath:resourcePath:]
-[CSKeywordAnalyzerNDAPI _setStartAnalyzeTime:]
threshold_normal
-[CSKeywordAnalyzerNDAPI getThreshold]
threshold_logging
-[CSKeywordAnalyzerNDAPI getLoggingThreshold]
threshold_reject_logging
-[CSKeywordAnalyzerNDAPI getRejectLoggingThreshold]
CSSampleCountHostTimeConverter
Serial CSPolicy queue
triggerEndSeconds
triggerFireSeconds
earlyDetectFiredMachTime
triggerStartMachTime
triggerEndMachTime
triggerFireMachTime
twoShotAudibleFeedbackDelay
firstPassTriggerSource
Darwin
CSDarwinVoiceTriggerEventInfoProvider
CSUncompressedAudioLogging
-[CSUncompressedAudioLogging prepareLogging]_block_invoke
-[CSUncompressedAudioLogging _prepareFileForLogging]
%.0f
%.6f
-[CSUncompressedAudioLogging _setupFilePath]
%@_%@_%@.pcm
%@_%@_%@.plist
-[CSUncompressedAudioLogging appendAudioData:]_block_invoke
-[CSUncompressedAudioLogging _createFileDescriptor:protectionClass:]
interactionIdentifier
samplingTimestamp
language
samplingRate
-[CSUncompressedAudioLogging _writePlistFile]
deque
-[CSAudioChunk chunkForChannel:]
v24@?0^v8Q16
-[CSAudioChunk subChunkFrom:numSamples:forChannel:]
-[CSAudioChunk subChunkFrom:numSamples:]
-[CSAudioChunk copySubAudioChunkFrom:numSamples:to:dstBufferSize:]
-[CSAudioChunk splitAudioChunkSuchThatNumSamplesReceivedSoFar:reachesACountOf:completionHandler:]
numSamples
sampleByteDepth
startSampleCount
hostTime
arrivalHostTimeToAudioRecorder
wasBufferedAudio
data
remoteVAD
-[CSAudioCircularBuffer initWithNumChannels:recordingDuration:samplingRate:audioTimeConverter:]
-[CSAudioCircularBuffer copySamplesFromHostTime:]
-[CSAudioCircularBuffer copySamplesFrom:to:]
-[CSAudioCircularBuffer copySamplesFrom:to:channelIdx:]
-[CSAudioCircularBuffer copybufferFrom:to:]
-[CSAudioCircularBuffer copyBufferWithNumSamplesCopiedIn:]
-[CSAudioCircularBuffer reset]
copySamples
phrase
name
Hey Siri
threshold
2ndChanceThreshold
loggingThreshold
ndapiScaleFactor
recognizerThresholdOffset
recognizerScoreScaleFactor
preTriggerSilenceOffset
recognizerToken
hey_Siri
twoShotFeedbackDelayPhatic
twoShotFeedbackDelayPhaticRemora
twoShotFeedbackDelayBeep
rejectLoggingThreshold
phsRejectLoggingThreshold
kCSFSelfLoggingMHUUID
kCSFSelfLoggingSecondPassResult
-[CSFVoiceTriggerEventInfoSelfLogger logStartEventWithFirstPassStartedInfo:withMHUUID:]
CSFVoiceTriggerEventInfoSelfLogger.m
-[CSFVoiceTriggerEventInfoSelfLogger logTriggerEventWithVTEI:withMHUUID:]
-[CSFVoiceTriggerEventInfoSelfLogger logRejectEventWithVTEI:withMHUUID:withSecondPassResult:]
-[CSFVoiceTriggerEventInfoSelfLogger logCancelledEventWithMHUUID:]
-[CSFVoiceTriggerEventInfoSelfLogger logTwoShotEndEventWithSuppresedAlert:withTimedOut:withMHUUID:]
-[CSFVoiceTriggerEventInfoSelfLogger logTwoShotStartEventWithPromptType:withMHUUID:]
-[CSFVoiceTriggerEventInfoSelfLogger logTwoShotDetectedWithMHUUID:]
-[CSFVoiceTriggerEventInfoSelfLogger logSiriLaunchStartedWithVoiceTriggerEventInfo:]
-[CSFVoiceTriggerEventInfoSelfLogger logSiriLaunchCompletedWithVoiceTriggerEventInfo:]
%@-%@
-[CSOSTransaction initWithDescription:]
-[CSOSTransaction dealloc]
continuousVoiceTrigger
configFileNDAPI
twoShotThreshold
twoShotDecisionWaitTime
voiceTriggerPhraseIds
silencePhraseIds
config.txt
config_marsh.txt
self.integerValue
+[CSFTimeUtils hostTimeFromSampleCount:anchorHostTime:anchorSampleCount:sampleRate:]
+[CSFTimeUtils sampleCountFromHostTime:anchorHostTime:anchorSampleCount:sampleRate:]
+[CSFTimeUtils macHostTimeFromBridgeHostTime:]
i32@?0^I8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16^^{AudioStreamPacketDescription}24
-[CSPlainAudioFileWriter initWithURL:inputFormat:outputFormat:]
-[CSPlainAudioFileWriter addSamples:numSamples:]
json
yyyy_MM_dd-HHmmss.SSS
productType
productVersion
buildVersion
-[CSPlainAudioFileWriter addContextKey:withContext:]
-SL.json
-[CSPlainAudioFileWriter createAcousticMetaFileForContext:withContext:]
-[CSPlainAudioFileWriter addContextKey:fromMetaFile:]
+[CSPlainAudioFileWriter saveAudioChunck:toURL:]
com.apple.voicetrigger
com.apple.voicetrigger.notbackedup
kCSPreferencesJarvisTriggerModeDidChangeDarwinNotification
VoiceTrigger Enabled
Phrase Detector Enabled
VoiceTriggerEverUsed
AttentiveSiri AudioLogging Enabled
-[CSFPreferences isAttentiveSiriAudioLoggingEnabled]
Enable Two Shot Notification
Attending Timeout
-[CSFPreferences getAttendingTimeoutConfig]
com.apple.demo-settings
StoreDemoMode
HomePod
Mosquito
Adaptive Siri Volume Disabled
File Logging Level
/var/mobile
Library
Logs/CrashReporter/VoiceTrigger/audio/
VoiceTrigger/nearmiss/audio/
/Logs/CrashReporter/Assistant/MHLog/
VoiceTrigger/RemoteP2PLogs/
RemoteGradingData/
/Logs/CrashReporter/Assistant/smartSiriVolumeContextAwareLogs/
Logs/CrashReporter/Assistant/smartSiriVolumeContextAwareLogs/
-[CSFPreferences getSSVLogFilePathWithSessionIdentifier:]
/tmp
%@/SSV_%@.json
VoiceTrigger/TrialAssetData
/Logs/CrashReporter/Assistant/
SpeechLogs
-[CSFPreferences assistantAudioFileLogDirectory]
VoiceTrigger
siriBC
Second Pass Audio Logging Enabled
Speaker Recognition Audio Logging Enabled
Personalized Siri Enrollment Audio Logging Enabled
Jarvis Audio Logging Enabled
Jarvis Trigger Mode
Enable SoS Audio Logging
Force VoiceTrigger AP Mode
-[CSFPreferences forceVoiceTriggerAPMode]_block_invoke
Force VoiceTrigger AOP Mode
-[CSFPreferences forceVoiceTriggerAOPMode]_block_invoke
RemoraDevices
@"NSMutableDictionary"16@?0@"NSMutableDictionary"8
Accessory Media Playback Status
Accessory Media Playback Interrupted Time
Accessory Alarm Playback Status
Accessory Timer Playback Status
com.apple.corespeech.CSPreferencesSetValueForKey
mobile
com.apple.corespeech._CSNotBackedupPreferencesSetValueForKey
Logs/CrashReporter/CoreSpeech/sos/
-[CSFPreferences getStartOfSpeechAudioLogFilePath]
yyyyMMdd_HHmmss.SSS
%@/%@
Remote VoiceTrigger Delay
Remote VoiceTrigger Endpoint Timeout
VoiceTrigger/interstitial
Myriad File Logging Enabled
Audio Injection Enabled
Programmable Audio Injection Enabled
Speex Audio Injection Enabled
-[CSFPreferences enableAudioInjection:withKey:]
-[CSFPreferences audioInjectionEnabledWithKey:]_block_invoke
-[CSFPreferences setAudioInjectionFilePath:]
Audio Injection File Path
-[CSFPreferences audioInjectionFilePath]
-[CSFPreferences audioInjectionFilePath]_block_invoke
v32@?0@8Q16^B24
SpeakerId Enabled
SpeakerId Score Type
SmartSiriVolume SoftVolume Enabled
Adaptive Siri Volume State Intent Time
Adaptive Siri Volume State Intent Valid For Seconds
Adaptive Siri Volume State Permanent Offset Enabled
Adaptive Siri Volume State Permanent Offset Factor
Adaptive Siri Volume State Intent Type
Audio Session Activation Delay
Max Number Logging Files
Max Number Grading Files
Enable SiriActivation HomePod
Enable SiriActivation watchOS
Overwrite Remote VAD Score
Hearst First Pass Model Version
Hearst Second Pass Model Version
Hearst Fake Model Path
VoiceTrigger Companion Sync Enabled
Enable OpportuneSpeakListener Bypass
Bypass Personalized HeySiri
MultiPhraseVTEnabled
MultiChannelAudioLoggingEnabled
Enable AdBlocker Audio Logging
Enable Self Trigger Audio Logging
Adaptive Siri Volume State Intent Volume
Adaptive Siri Volume State Latest Volume Time
Adaptive Siri Volume State Latest Volume
-[CSFPreferences getASVUserIntent:]
-[CSFPreferences setSiriLanguageCodeDarwin:]
Siri Language Code Darwin
-[CSFPreferences languageCodeDarwin]
Remote Darwin Ever Connected
Idle User Prevent Sleep Assertion Acquition Time
Enable P2P Transfer
Enable Reduced PHS Threshold
Enable Model Benchmarking
NearMissAudioLoggingLevel
Endpoint Enhanced Logging
Endpoint Asset Overriding Enabled
Endpoint Asset Overriding File Path
Endpoint Asset Bypass Trial Enabled
VoiceTrigger Asset Overriding File Path
Mitigation Asset Overriding File Path
Bypass Trial Assets
-[CSFPreferences setSelfTriggerEnabledGibraltar:]
-[CSFPreferences isSelfTriggerEnabledGibraltar]
Enable VoiceTrigger Mlock
Bypass SpeakerId based Mitigation
SpeakerID Score Override Map
First Pass Debug
Force Mitigate For HybridSDSD
Power Logging Current Asset Config Version
Power Logging Current Language
beepLocation
statsComputed
beepPower
signalPower
originalPower
absMaxVal
above95pcOfMax
totalInputSamples
totalOutputSamples
jbl_begin.bin
-[CSBeepCanceller init]
-[CSBeepCanceller willBeep]
-[CSBeepCanceller reset]
voiceTriggerFirstPass
delaySecondsForChannelSelection
masterChannelScoreBoost
processingChunkSeconds
processingChannelsBitset
+[CSVoiceTriggerFirstPassConfigDecoder decodeConfigFrom:]
-[CSFRangeUtils initWithStartPoint:endPoint:]
-[CSFRangeUtils hasIntersectionWithRange:]
Dispose Log Queue
+[CSUtils(Directory) removeLogFilesInDirectory:matchingPattern:beforeDays:]_block_invoke
v24@?0@"NSArray"8^@16
+[CSUtils(Directory) clearLogFilesInDirectory:matchingPattern:exceedNumber:]_block_invoke_2
+[CSUtils(Directory) clearLogFilesInDirectory:matchingPattern:exceedNumber:]_block_invoke
+[CSUtils(Directory) loggingFilePathWithDirectory:token:postfix:]
%@-%@.%@
+[CSUtils(Directory) _createLoggingDirectoryIfNeeded:]
Unable to get %@ for file at %@: %@
q24@?0@"NSURL"8@"NSURL"16
B24@?0@"NSURL"8@"NSDictionary"16
+[CSUtils(Directory) _contentsOfDirectoryAtURL:matchingPattern:includingPropertiesForKeys:error:]
assetDownloadfailed
assetFetchfailed
VoiceId
satinitfailed
satmodelfilefailed
satvectorfailed
tdsrfailed
tdsrtimeout
retrainsatfailed
explicituttrejected
toolessaudiofiles
unrecognizedmetadata
delayedscores
missinghomeidforclouduser
voiceidstaleprofiledetected
Audio
didStartWatchDogFire
didStopWatchDogFire
audioDeliveryWatchDogFire
streamDeallocDuringStreaming
resourceNotAvailable
recordStoppedBySessionInterruption
recordStoppedByMixedSessionInterruption
InsufficientPriority
audioCodecError
hardwareConfigurationChanged
speechStopFailure
speechPrepareFailure
speechStartFailure
hardwareRemoved
noHardwareError
noRouteAvailable
secondPassCompleteWatchDogFire
APLeak
APStuckInTransition
launchSlow
Endpointer
endpointerModelVersionIsNil
Ures
requestRCNotFound
SiriPower
consectutiveFalseFirstPassTriggers
remoteCoreSpeech
remoteCoreSpeechSubtypeStartAudioRecordingFailed
-[CSPhraseDetector dealloc]
-[CSPhraseDetector setRunAsSecondChance:]
-[CSPhraseDetector reset]
-[CSPhraseDetector setConfig:]
enabled
disabled
-[CSPhraseDetector _phraseDetectorResultFromNDAPIResults:quasarResult:forceMaximized:]
-[CSPhraseDetector _getResultWithPhId:phraseDetectorInfo:ndapiResult:quasarResult:forceMaximized:]
-[CSPhraseDetector _resultCopyWithKeywordDetectorDecision:bestPhId:phraseResult:]
Dictation
triggerConfidence = %lf
-[CSSyncKeywordAnalyzerQuasar initWithConfigPath:triggerTokensArray:preventDuplicatedReset:memoryLock:]
-[CSSyncKeywordAnalyzerQuasar reset]
-[CSSyncKeywordAnalyzerQuasar getResultsFromFlushedAudio]
-[CSSyncKeywordAnalyzerQuasar getAnalyzedResultsFromAudioChunk:]
-[CSSyncKeywordAnalyzerQuasar _getAnalyzedResults:]
+[CSSyncKeywordAnalyzerQuasar dumpEARSpeechRecognitionResults:]
-[CSAudioZeroCounter getZeroStatisticsFromBuffer:entireSamples:]
-[CSAudioZeroCounter stopCountingZeroStatisticsWithReporter:]
com.apple.transcribe.Transcriber
-[CSKeywordAnalyzerQuasar initWithConfigPath:triggerTokens:useKeywordSpotting:]
-[CSKeywordAnalyzerQuasar initWithConfigPath:triggerTokens:useKeywordSpotting:]_block_invoke
-[CSKeywordAnalyzerQuasar reset]
-[CSKeywordAnalyzerQuasar dealloc]
-[CSKeywordAnalyzerQuasar runRecognition]
-[CSKeywordAnalyzerQuasar runRecognition]_block_invoke
-[CSKeywordAnalyzerQuasar endAudio]
-[CSKeywordAnalyzerQuasar endAudio]_block_invoke
-[CSKeywordAnalyzerQuasar _recognizeWavData:length:]
-[CSKeywordAnalyzerQuasar speechRecognizer:didRecognizePartialResult:]_block_invoke
-[CSKeywordAnalyzerQuasar speechRecognizer:didRecognizeFinalResults:]_block_invoke
-[CSKeywordAnalyzerQuasar _phIdToCtcScoreMap]
-[CSKeywordAnalyzerQuasar speechRecognizer:didFinishRecognitionWithError:]_block_invoke
-[CSKeywordAnalyzerQuasar _getConfidence:]_block_invoke
v32@?0@"_EARSpeechRecognitionToken"8Q16^B24
OPP-
PCM-
OPUS_
Ads-
PHS-
OSD-
-synced
com.apple.CoreSpeech.AudioLogging
+[CSAudioFileManager generateDeviceAudioLogging:speechId:]_block_invoke
FLLR
+[CSAudioFileManager _readDataFromFileHandle:toFileHandle:]
%@%@.wav
%@/%@%@%@.wav
%@/%@%@.wav
+[CSAudioFileManager _createAudioFileWriterForAdBlockerWithLoggingDir:inputFormat:outputFormat:withAccessoryID:]
+[CSAudioFileManager _createAudioFileWriterForOpportuneSpeakListenerWithLoggingDir:inputFormat:outputFormat:]
+[CSAudioFileManager _createAudioFileWriterWithLoggingDir:withLoggingUUID:inputFormat:outputFormat:]
+[CSAudioFileManager _createAudioFileWriterForPHSTrainingWithLoggingDir:inputFormat:outputFormat:]
+[CSAudioFileManager _createAudioFileWriterForOSDWithLoggingDir:inputFormat:outputFormat:]
^%@*
%@(%@)?.wav$
+[CSAudioFileManager cleanupOrphanedGradingFiles]
+[CSAudioFileManager cleanupOrphanedGradingFiles]_block_invoke
v32@?0@"NSString"8@"NSURL"16^B24
attsiri
+[CSAudioFileManager audioFileWriterForAttentiveSiri]
%@.wav
CSFVoiceTriggerEventInfoSelfLoggerDarwin Queue
event
startVoiceTrigger
stopVoiceTrigger
HeySiriEnabled
Language
ModelVersion
languageCode
resourcePath
configVersion
assetHash
CSRemoteAssetManager
en-US
-[CSRemoteAssetManager _loadPreinstalledAssetMetaIfNeeded]
preinstalledMeta.json
VoiceTrigger/assetMeta.json
-[CSRemoteAssetManager _writeToJsonFile:]
-[CSRemoteAssetManager _loadJsonDataFromFile:]
-[CSRemoteAssetManager setLanguageCode:resourcePath:configVersion:assetHash:assetType:]
-[CSSelectiveChannelAudioFileWriter initWithURL:inputFormat:outputFormat:channelBitset:]
v16@?0Q8
-[CSSelectiveChannelAudioFileWriter addSamples:numSamples:]
%@ {backingStoreCapacity = %tu (bytes), minimalNumberOfBackingStores = %tu, maximumNumberOfBackingStores = %tu, backingStoreIdleTimeout = %f (seconds)}
-[CSDispatchGroup leave]
voiceTriggerSecondPass
voiceTriggerSecondPassAOP
voiceTriggerSecondPassAP
voiceTriggerSecondPassHearst
voiceTriggerSecondPassJarvis
voiceTriggerSecondPassRemora
voiceTriggerSecondPassPlus
voiceTriggerSecondPassDuringRingtone
voiceTriggerSecondPassDuringConnectedCall
preTriggerAudioTime
analyzerPrependingAudioTime
analyzerTrailingAudioTime
configFileRecognizer
recognizer.json
useKeywordSpotting
remoteVADThreshold
minimumPhraseLengthForVADGating
remoteVADMyriadThreshold
secondPassShadowMicScoreThresholdForVADGating
phrasesToSkipBoronDecisionMaking
%s Requested audioTimeConverter on invalid streamHandleId
%s invalid packets
%s ::: CoreSpeech logging initialized (%s)
%s ::: SSR logging initialized (%s)
%s Fallback asset resource path : %{public}@
%s %{public}@
%s Cannot find corespeech asset from resourcePath : %{public}@
%s Configuration file is not exists : %{public}@
%s Cannot read configuration file : %{public}@
%s Cannot decode configuration json file : %{public}@
%s Configuration json file is not expected format
%s Cannot access to %{public}@ %{public}@ using default value=%{public}@
%s Cannot access to %{public}@ %{public}@
%s Comparing %{public}@ with %{public}@
%s Invalid rightConfig syntax : %{public}@
%s Invalid leftConfig syntax : %{public}@
%s Not comparable with %{public}@, ignore
%s Failed to create regular expression : %{public}@
%s Failed to allocate buffer since length zero
%s Failed to allocate buffer since length is larger than configuration
%s NumTransactionNow = %d
%s Entitlement was nil. We will assume process is not entitled.
%s Attempting to check %@ for entitlement: %@
%s Error creating audit token for: %@
%s Warning SecTaskCopyValueForEntitlement failed for token %@ with error (%ld)
%s Error Issue retrieving entitlement
%s Token dict: %@ and tokenString: %@ both must be non nil
%s isVirtualMachine ? %{public}@
%s Resource path %@ is not founded in system domain mask, returning nil path
%s More than 1 path %@ are founded in system domain mask, returning the last one as default
%s ERR: %{public}@
%s Device supporting barge-in ? %{public}@
%s Failed to find matching service to IOPlatformExpertDevice
%s Fetched hardware revision : %{public}@
%s Failed to find property "config-number"
%s Record route = %{public}@, playback route = %{public}@
%s Device endpointType = %{public}lu
%s hypotheticalRoute = %{public}@
%s Audio route changing to HFP is expected
%s default to recordContext : %{public}@
%s NDAPI initialization failed
%s set StartAnalyzeSampleCount = %{public}lld
%s NDAPI config doesn't contain threshold_normal
%s NDAPI config doesn't contain threshold_logging
%s NDAPI config doesn't contain threshold_reject_logging
%s Assistant Sampling: uncompressed audio logging will be enabled for this Siri request
%s Assistant Sampling: uncompressed audio logging will be disabled for this Siri request
%s Assistant Sampling: Unable to create FD on audioFilePath : (%{public}@)
%s Assistant Sampling: Failed to create directory : %@
%s Assistant Sampling: Unable to writeData : %{public}@
%s Assistant Sampling: Creating logging file : %@
%s Assistant Sampling: Failed to serialize plistRoot into plist : %{public}@
%s Failed to create FD for plist file
%s channelId %d out of bound %d
%s Cannot generate subChunk since channel(%{public}tu) is larger than number of channels(%{public}tu)
%s Cannot generate subChunk if it reuqest more than it has : %{public}tu %{public}tu %{public}tu
%s Unable to write subChunk into dstBufferSize(%d) : required buffer size (%d)
%s SpkrId:: Processing ended at: numSamplesProcessed=%lu, totalSampleCountToReach=%lu
%s numChannels: %{public}lu, recordingDuration: %{public}f, sampleRate: %{public}f
%s Cannot copy samples since this is empty
%s Could NOT copyFrom: %{public}lu to: %{public}lu, retSampleCount: %{public}lu
%s copyBuffer: oldestSample: %{public}lu latestSample: %{public}lu, numSamplesCopied: %{public}lu
%s CSAudioCircularBuffer.reset
%s Invalid request: reqStartSample=%{public}lu, reqEndSample=%{public}lu, oldestSampleInBuffer: %{public}lu, latestSampleInBuffer=%{public}lu
%s Creating OS Transaction for %{public}@
%s Release OS Transaction for %{public}@
%s Delta is larger than anchorHostTime: anchorSampleCount = %{public}lld, sampleTime = %{public}lld, anchorHostTime = %{public}lld
%s Delta is larger than anchorSampleCount
%s Not supported on this platform
%s ::: Error creating output file %{public}@, err: %{public}d
%s ::: Error writing to output wave file. : %{public}ld
%s metaInfo passed is nil - Bailing out
%s Unable to read data from file: %@
%s Could not read existing %@ file: err: %@
%s ERR: Failed to create json %{public}@ with %{public}@
%s saveAudioChunk toURL: %{public}@
%s Invalid request: nothing to write to file
%s enabled:%u
%s attendingTimeout: %f
%s Couldn't create SSV log directory at path %{public}@ %{public}@
%s Couldn't create speech log directory at path %{public}@ %{public}@
%s Force enabling VoiceTrigger AP mode ? %{public}@
%s Force enabling VoiceTrigger AOP mode ? %{public}@
%s Couldn't create SoS log directory at path %{public}@ %{public}@
%s enableAudioInection: is only available on internal builds
%s enabled: %@
%s setAudioInjectionFilePath: is only available on internal builds
%s kCSAudioInjectionFilePathKey is not array type
%s kCSAudioInjectionFilePathKey array size = %d
%s kCSAudioInjectionFilePathKey doesn't have NSString as an array entry
%s Adaptive Siri Volume failed to load user intent type. Ignoring intent
%s Adaptive Siri Volume failed to load user intent time. Ignoring intent
%s Adaptive Siri Volume failed to load user intent volume. Ignoring intent
%s Adaptive Siri Volume failed to load latest volume time. Ignoring intent
%s Adaptive Siri Volume failed to latest volume. Ignoring intent
%s Adaptive Siri Volume failed to load permanent offset status. Defaulting to no permanent volume offset
%s Adaptive Siri Volume failed to load permanent offset factor. Defaulting to unity permanent volume offset factor
%s Loaded Adaptive Siri Volume intentType: %{public}llu, intentTime: %{public}llu, intentVolume: %{public}f, latestVolumeTime: %{public}lld, latestVolume:%{public}f, permanentOffsetIsEnabled: %{public}d, permanentOffsetFactor: %{public}f
%s Called in unexpected platform!
%s BeepCanceller asset file loading from : %{public}@
%s Could not read beep file: %@
%s beepVector Size = %{public}lu
%s Cannot initialize beep canceller
%s Beep canceller initialized with maxNumSamples = %{public}d
%s It will beep now
%s Reset beep cancellation
%s Loading 1stPass-config=%@
%s Invalid input : startPoint = %{public}llu, endPoint = %{public}llu
%s Invalid input range
%s CS logging files under %{public}@ created before %{public}@ will be removed.
%s Couldn't get creation date: %{public}@
%s Could not remove %{public}@: %{public}@
%s CS logging files number %{public}lu with pattern %{public}@ under %{public}@ exceeding limit, only keep the latest %{public}lu ones
%s Invalid token or postfix
%s Invalid log directory
%s Couldn't create logging directory at path %{public}@ %{public}@
%s Regular expression is nil!
%s Directory URL is nil!
%s CSPhraseDetector Deallocated
%s Using second chance threshold for voice trigger second pass: %{public}f
%s Failed to fetch config
%s Invalid assets config!
%s VoiceTrigger memory lock %@
%s Reset all thresholds to HUGE_VALF since NDAPI is nil
%s Using threshold from NDAPI since we are not able to use Quasar, threshold = %{public}f, logging threshold = %{public}f
%s Unable to process due to number of result mismatch, ndapiResults number = %d
%s Received invalid result with %tu
%s Phrase detector results fall-into unexpected use case
%s [(%lu)] : NDAPI second pass best score = %{public}f with analyzed samples:                   %{public}tu with quasar score = %{public}f, ndapi scale factor = %{public}f, quasar scale factor = %{public}f
%s [(%tu)] : Trigger detected with %{public}tu analyzed samples in NDAPI,                   combined score = %{public}lf, effective threshold = %{public}f
%s [(%tu)] : Detected near miss at %{public}lu samples                       with best score up to: %{public}.3f
%s [(%tu)] : Waiting for logging near miss                               until timeout %{public}lu samples
%s [(%tu)] : Detected near miss candidate at %{public}tu,                       let's wait %{public}tu samples to log
%s [(%tu)] : Notify second pass reject at: %{public}tu                   with best score up to: %{public}.3f
%s Reporting decision (%tu) from (%tu)
%s Initializing Quasar with config: %{public}@
%s Failed initialization in _EARSyncSpeechRecognizer initWithConfiguration
%s ERR: Exception initializing _EARSyncSpeechRecognizer: %{public}s
%s Speech model loading took %{public}.3fms
%s endAudio failed
%s processAudioChunk failed
%s Invalid token : %{public}@
%s %tu, token = %{public}@
%s Unable to handle: %d
%s Res-%lu: 
%s tok=%@
%s In %@: Continuous digital zero detected, lasting %{public}u samples per channel
%s In %@: Continuous digital zero in this audio chunk detected, lasting %{public}u samples per channel
%s Transcriber trigger token list: %{public}@
%s runRecognition failed
%s recognizeWavData failed
%s Partial result confidence: %{public}f
%s CTC: Adding tok=%{public}@
%s CTC: Ignoring tok=%{public}@
%s MpVT: phId=%{public}@, tok=%{public}@
%s ERROR: %{public}s
%s CTC: Final-tok: %@(%f):%@
%s Final result confidence: %{public}f
%s EAR Token[%{public}lu]: %s (%{public}f)
%s Plan removing the temp file %{public}@
%s Failed to remove temp file %{public}@ reason: %{public}@
%s Start copying %{public}u bytes of data to crashreporter with wav file header offset %{public}llu
%s Failed to read data from %{public}@
%s Finished copying data to crashreporter.
%s Logging audio file into : %{public}@
%s ERR: reading contents of gradingDir: %{public}@ with error %{public}@
%s Deleting orphaned grading file %{public}@
%s ERR: Failed to delete %{public}@ with error %{public}@
%s Removing non-dir at AttentiveSiri AudioLog dir: %@
%s Error removing %@: err: %@
%s Failed to create AudioLogging directory for AttentiveSiri: %@
%s Created AudioLogging dir for AttentiveSiri at: %@
%s Skip reload assets, already up-to-date
%s preinstalled model meta not found : %{public}@
%s Invalid rawRemoteAssetMeta : %{public}@
%s Cannot create json file : %{public}@
%s Creating directory : %{public}@
%s Cannot remove asset meta file : %{public}@, %{public}@
%s Remote asset file is not exists : %{public}@
%s LanguageCode : %{public}@, resourcePath : %{public}@, configVersion : %{public}@, assetHash : %{public}@
%s unbalanced dispatch_group_enter and leave : ignore we are ignore dispatch_group_leave
CSKeywordAnalyzerNDEAPIResult
CSKeywordAnalyzerNDEAPI
CSSinglePhraseResult
NSCopying
CSVoiceTriggerAirPodWearerDetectionConfig
CSAudioTimeConverterPool
CSVoiceTriggerFirstPassConfig
CSAudioChunkForTV
CSMobileAssetVersions
CSAsset
CSVoiceTriggerSecondPassConfig
CSVTUITrainingSelfLogger
CSVoiceTriggerPhraseConfig
CSReusableBufferBackingStore
CSReusableSharedMemoryBackingStore
CSReusablePrivateMemoryBackingStore
CSAudioZeroFilter
CSNovDetectorResult
CSNovDetector
CSOSTransactionStat
CSFAudioMetricsSelfLogger
CSAudioPlayingAppMonitor
Security
CSUtils
AudioDevice
CSAudioRecordContext
CSADPPreventStandbyAssertion
CSKeywordAnalyzerNDAPIResult
CSKeywordAnalyzerNDAPI
CSAudioTimeConverter
CSPolicy
CSEventMonitorDelegate
NSObject
CSDarwinVoiceTriggerEventInfoProvider
CSUncompressedAudioLogging
CSAudioChunk
CSAudioCircularBuffer
CSAudioPlayingApp
CSVoiceTriggerPhraseConfigDecoder
CSConfig
CSFVoiceTriggerEventInfoSelfLogger
CSOSTransaction
CSContinuousVoiceTriggerConfigDecoder
CSFTimeUtils
CSAudioDecoder
CSPlainAudioFileWriter
CSAudioFileWriter
CSFPreferences
CSBeepCanceller
CSVoiceTriggerFirstPassConfigDecoder
CSPowerAssertionAccessory
CSFRangeUtils
Directory
CSDiagnosticReporter
CSAudioPowerMeter
CSPhraseDetector
CSFVoiceTriggerEventInfoSelfLoggerEmbedded
CSSyncKeywordAnalyzerQuasarResult
CSSyncKeywordAnalyzerQuasar
CSAudioZeroCounter
CSContinuousVoiceTriggerConfig
CSKeywordAnalyzerQuasar
_EARSpeechRecognitionResultStream
CSPhraseDetectorInfo
CSReusableBufferPool
CSAudioFileManager
CSFCircularEventsCacheBuffer
CSFVoiceTriggerEventInfoSelfLoggerDarwin
CSPowerLogger
CSRemoteAssetManager
CSSelectiveChannelAudioFileWriter
CSReusableBufferPoolConfiguration
CSFLPCMTypeConverter
CSDispatchGroup
CSFAudioStreamBasicDescriptionFactory
CSVoiceTriggerSecondPassConfigDecoder
init
bytes
numberWithUnsignedInteger:
numberWithFloat:
numberWithBool:
dictionaryWithObjects:forKeys:count:
initWithBlob:isEarlyDetected:
dictionary
samplesFed
setSamplesFed:
bestStart
setBestStart:
bestEnd
setBestEnd:
bestScore
setBestScore:
isSecondChance
setIsSecondChance:
isEarlyDetect
setIsEarlyDetect:
_isSecondChance
_isEarlyDetect
_bestScore
_samplesFed
_bestStart
_bestEnd
TQ,N,V_samplesFed
TQ,N,V_bestStart
TQ,N,V_bestEnd
Tf,N,V_bestScore
TB,N,V_isSecondChance
TB,N,V_isEarlyDetect
T@"NSDictionary",R,N
dealloc
initWithBlob:
checkForTriggerWithBytes:withNumberOfSamples:
processAudioBytes:withNumberOfSamples:
processAudioChunk:
getLastResult
reset
activeChannel
setActiveChannel:
delegate
setDelegate:
.cxx_destruct
_currentBlob
_lastResult
_activeChannel
_delegate
TQ,N,V_activeChannel
T@"<CSKeywordAnalyzerNDEAPIScoreDelegate>",W,N,V_delegate
string
appendFormat:
copy
initWithPhId:keywordDetectorDecision:combinedScore:ndapiScore:ndapiResult:recognizerScore:isSecondChance:isSecondChanceCandidate:isRunningQuasar:
copyWithZone:
description
phId
decision
combinedScore
ndapiScore
ndapiResult
recognizerScore
isSecondChanceCandidate
isRunningQuasar
_isSecondChanceCandidate
_isRunningQuasar
_combinedScore
_ndapiScore
_recognizerScore
_phId
_decision
_ndapiResult
TQ,R,N,V_phId
TQ,R,N,V_decision
Tf,R,N,V_combinedScore
Tf,R,N,V_ndapiScore
T@"CSKeywordAnalyzerNDAPIResult",R,N,V_ndapiResult
Tf,R,N,V_recognizerScore
TB,R,N,V_isSecondChance
TB,R,N,V_isSecondChanceCandidate
TB,R,N,V_isRunningQuasar
initWithThreshold:minimumPhraseLength:shadowMicScoreThreshold:myriadThreshold:phrasesToSkipBoronDecisionMaking:
threshold
minimumPhraseLength
shadowMicScoreThreshold
myriadThreshold
phrasesToSkipBoronDecisionMaking
_threshold
_minimumPhraseLength
_shadowMicScoreThreshold
_myriadThreshold
_phrasesToSkipBoronDecisionMaking
Tf,R,N,V_threshold
Tf,R,N,V_minimumPhraseLength
Tf,R,N,V_shadowMicScoreThreshold
Tf,R,N,V_myriadThreshold
T@"NSArray",R,N,V_phrasesToSkipBoronDecisionMaking
_getAudioTimeConverterWithAudioStreamId:
objectForKeyedSubscript:
setObject:forKeyedSubscript:
sharedInstance
defaultConverter
converterForAudioStreamId:
queue
setQueue:
pool
setPool:
_queue
_pool
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSMutableDictionary",&,N,V_pool
initWithConfigPathNDAPI:threshold:delaySecondsForChannelSelection:masterChannelScoreBoost:processingChunkSeconds:processingChannelsBitset:
configPathNDAPI
delaySecondsForChannelSelection
masterChannelScoreBoost
processingChunkSeconds
processingChannelsBitset
_delaySecondsForChannelSelection
_masterChannelScoreBoost
_processingChunkSeconds
_configPathNDAPI
_processingChannelsBitset
T@"NSString",R,N,V_configPathNDAPI
Tf,R,N,V_delaySecondsForChannelSelection
Tf,R,N,V_masterChannelScoreBoost
Tf,R,N,V_processingChunkSeconds
TQ,R,N,V_processingChannelsBitset
_cs_initWithXPCObject:
_cs_xpcObject
initWithXPCObject:
xpcObject
packets
setPackets:
avgPower
setAvgPower:
peakPower
setPeakPower:
timeStamp
setTimeStamp:
numChannels
setNumChannels:
audioFormat
setAudioFormat:
streamHandleID
setStreamHandleID:
_avgPower
_peakPower
_numChannels
_audioFormat
_packets
_timeStamp
_streamHandleID
T@"NSArray",&,N,V_packets
Tf,N,V_avgPower
Tf,N,V_peakPower
TQ,N,V_timeStamp
TI,N,V_numChannels
TI,N,V_audioFormat
TQ,N,V_streamHandleID
supportMphAssets
getVoiceTriggerAssetTypeStringWithSupportMphAssets:deviceIsIPad:deviceIsWatch:deviceIsHorseman:deviceIsOSX:deviceIsTV:deviceIsIOS:
getVoiceTriggerCurrentCompatibilityVersionWithSupportMphAssets:deviceIsIPad:deviceIsWatch:deviceIsHorseman:deviceIsOSX:deviceIsTV:deviceIsIOS:
getVoiceTriggerAssetTypeString
getVoiceTriggerCurrentCompatibilityVersion
localeWithLocaleIdentifier:
setLocale:
setDateFormat:
assetForAssetType:resourcePath:configVersion:assetProvider:
hybridEndpointerAssetFilename
defaultManager
contentsOfDirectoryAtPath:error:
count
firstObject
initWithResourcePath:configFile:configVersion:assetProvderType:
isDarwinOS
getResourcePathInSystemDomainMaskFromRootPathByAppending:
fallBackAssetResourcePath
componentsSeparatedByString:
objectAtIndexedSubscript:
integerValue
stringByAppendingPathComponent:
fileExistsAtPath:
decodeJson:
dataWithContentsOfFile:
JSONObjectWithData:options:error:
localizedDescription
getNumberForKey:category:default:
boolValue
resourcePath
assetHashInResourcePath:
stringWithFormat:
path
isEqualToString:
_sha1ForString:
assetProvider
assetHashForTrial:
regularExpressionWithPattern:options:error:
length
firstMatchInString:options:range:
numberOfRanges
rangeAtIndex:
substringWithRange:
dataUsingEncoding:
stringWithCapacity:
assetForAssetType:resourcePath:configVersion:
getConfigFileNameForAssetType:
defaultFallBackAssetForSmartSiriVolume
defaultFallBackAssetForHearst
defaultFallBackAssetForAdBlocker
parseCompatibilityFromConfigVersion:
isLeftConfigVersion:newerThanRightConfigVersion:
getBoolForKey:category:default:
getStringForKey:category:default:
getValueForKey:category:
containsKey:category:
containsCategory:
hashFromResourcePath
isEqualAsset:
stringForCurrentAssetProviderType
configVersion
_decodedInfo
_path
_resourcePath
_configVersion
_assetProvider
T@"NSString",R,N,V_path
T@"NSString",R,N,V_resourcePath
T@"NSString",R,N
T@"NSString",R,N,V_configVersion
TQ,R,N,V_assetProvider
initWithPreTriggerAudioTime:prependingAudioTime:trailingAudioTime:resourcePath:configPathNDAPI:useRecognizerCombination:configPathRecognizer:useKeywordSpotting:phraseConfigs:wearerDetectionConfig:
preTriggerAudioTime
prependingAudioTime
trailingAudioTime
useRecognizerCombination
configPathRecognizer
useKeywordSpotting
phraseConfigs
wearerDetectionConfig
_useRecognizerCombination
_useKeywordSpotting
_preTriggerAudioTime
_prependingAudioTime
_trailingAudioTime
_configPathRecognizer
_phraseConfigs
_wearerDetectionConfig
Tf,R,N,V_preTriggerAudioTime
Tf,R,N,V_prependingAudioTime
Tf,R,N,V_trailingAudioTime
TB,R,N,V_useRecognizerCombination
T@"NSString",R,N,V_configPathRecognizer
TB,R,N,V_useKeywordSpotting
T@"NSArray",R,N,V_phraseConfigs
T@"CSVoiceTriggerAirPodWearerDetectionConfig",R,N,V_wearerDetectionConfig
sharedLogger
logSiriSetupPHSEnrollmentUtteranceCompletedWithSiriSetupID:withPageNumber:withPhId:withTopScoreForUtterance:withStartSampleCount:withEndSampleCount:withHasSpeechDetected:
logSiriSetupPHSEnrollmentDigitalZeroDetectionCompletedWithSiriSetupID:PageNumber:withPhId:withMaxNumContinuousZeros:withMaxNumAllowedContinuousZeros:withIsMaxNumContinuousZerosOverThreshold:
name
recognizerToken
twoShotFeedbackDelay
remoraTwoShotFeedbackDelay
speakerRejectLoggingThreshold
preTriggerSilenceOffset
initWithName:threshold:secondChanceThreshold:loggingThreshold:ndapiScaleFactor:recognizerScoreOffset:recognizerScoreScaleFactor:recognizerToken:twoShotFeedbackDelay:remoraTwoShotFeedbackDelay:keywordRejectLoggingThreshold:speakerRejectLoggingThreshold:preTriggerSilenceOffset:
copyWithThreshold:secondChanceThreshold:loggingThreshold:ndapiScaleFactor:recognizerScoreOffset:recognizerScoreScaleFactor:keywordRejectLoggingThreshold:
secondChanceThreshold
loggingThreshold
ndapiScaleFactor
recognizerScoreOffset
recognizerScoreScaleFactor
keywordRejectLoggingThreshold
_secondChanceThreshold
_loggingThreshold
_ndapiScaleFactor
_recognizerScoreOffset
_recognizerScoreScaleFactor
_twoShotFeedbackDelay
_remoraTwoShotFeedbackDelay
_keywordRejectLoggingThreshold
_speakerRejectLoggingThreshold
_preTriggerSilenceOffset
_name
_recognizerToken
T@"NSString",R,N,V_name
Tf,R,N,V_secondChanceThreshold
Tf,R,N,V_loggingThreshold
Tf,R,N,V_ndapiScaleFactor
Tf,R,N,V_recognizerScoreOffset
Tf,R,N,V_recognizerScoreScaleFactor
T@"NSString",R,N,V_recognizerToken
Tf,R,N,V_twoShotFeedbackDelay
Tf,R,N,V_remoraTwoShotFeedbackDelay
Tf,R,N,V_keywordRejectLoggingThreshold
Tf,R,N,V_speakerRejectLoggingThreshold
Tf,R,N,V_preTriggerSilenceOffset
initWithBuffer:bufferSize:deallocator:
configureWithBytes:length:
recycleHostTime
setRecycleHostTime:
_buffer
_bufferSize
_deallocator
_recycleHostTime
Tr^v,R,N
TQ,N,V_recycleHostTime
initWithBufferSize:
dataWithBytes:length:
array
numberWithUnsignedLong:
addObject:
initWithZeroWindowSize:approxAbsSpeechThreshold:numHostTicksPerAudioSample:
filterZerosInAudioPacket:atBufferHostTime:filteredPacket:
endAudioAndFetchAnyTrailingZerosPacket:
metrics
.cxx_construct
_audioZeroFilterImpl
sampleFed
bestPhrase
earlyWarning
initWithResult:
setSampleFed:
setBestPhrase:
setEarlyWarning:
isRescoring
setIsRescoring:
_earlyWarning
_isRescoring
_sampleFed
_bestPhrase
TQ,N,V_sampleFed
TQ,N,V_bestPhrase
TB,N,V_earlyWarning
TB,N,V_isRescoring
initWithConfigPath:resourcePath:
resetBest
analyzeWavData:numSamples:
analyzeWavFloatData:numSamples:
numResultsAvailable
getAnalyzedResultForPhId:
getBestAnalyzedResult
getSuperVectorWithEndPoint:
getOptionValue:
reportCreation
reportDestroy
numTransaction
numTransactionNow
setNumTransactionNow:
_numTransactionNow
Ti,N,V_numTransactionNow
logCoreSpeechPreprocessorCompletedWithMHUUID:withMetricsDictionary:
logMHASRAudioConfigureStartedWithMHUUID:withAudioCodecString:withAudioSkippedNumSamples:
logMHAssistantDaemonAudioStartRecordingContextWithMHUUID:withStartRecordingContext:withFanInfoArray:withActiveSessionDisplayIDs:
logMHAssistantDaemonAudioInitContextWithMHUUID:withInitStarted:
logMHAssistantDaemonAudioConfigureContextWithMHUUID:withConfigureStarted:
logMHAssistantDaemonAudioPrepareContextWithMHUUID:withPrepareStarted:
logMHAssistantDaemonAudioPrewarmContextWithMHUUID:withPrewarmStarted:
logMHAssistantDaemonAudioStopRecordingContextWithMHUUID:withStopRecordingStarted:withADStopRecordingEvent:
logMHAssistantDaemonAudioSessionSetActivateContextWithMHUUID:withSetActivateStarted:
logMHAssistantDaemonAudioSessionSetInactiveWithMHUUID:withSetInactiveStarted:
logMHAssistantDaemonAudioFetchRouteContextWithMHUUID:withFetchRouteContextStarted:
logMHAssistantDaemonAudioRecordingContextWithMHUUID:withAudioRecordingStarted:withAudioInputRoute:withAudioSource:withAudioInterfaceVendorId:withAudioInterfaceProductId:
logMHAssistantDaemonAudioRecordingMissedBufferDetectedWithMHUUID:
logMHAssistantDaemonAudioLateBufferDetectedWithMHUUID:withBufferReceiptTimeInNs:
logMHAssistantDaemonAudioRecordingFirstBufferWithMHUUID:withStartEvent:withFirstBufferStartTimeOffsetNs:withFirstBufferReceiptTimeOffsetNs:
logMHAssistantDaemonAudioRecordingLastBufferWithMHUUID:withStartEvent:withLastBufferStartTimeOffsetNs:withLastBufferReceiptTimeOffsetNs:
logMHAssistantDaemonAudioRecordingInterruptionContextWithMHUUID:withStartEvent:withLinkID:withAvAudioSessionInterruptorName:withAVAudioSessionInterrupterType:
logMHAssistantDaemonAudioRecordingInterruptionStartedTier1WithMHUUID:withLinkID:withActiveSessionDisplayIDs:
logMHAssistantDaemonAudioBluetoothInfoWithMHUUID:withWirelessSplitterSessionState:withAudioDeviceCategory:
logMHApplicationPlaybackAttemptedWithMHUUID:withAppBundleName:withAppBundleVersion:
logMHAssistantDaemonAudioRecordingFailedWithMHUUID:withReason:vendorId:productId:
sharedMonitor
playingApps
auditTokenToString:
appendString:
checkEntitlementForToken:withEntitlement:
getTokenFromDictionary:withTokenKey:
sharedConnection
effectiveRestrictedBoolValueForSetting:
effectiveBoolValueForSetting:
countByEnumeratingWithState:objects:count:
supportRaiseToSpeak
supportHearstVoiceTrigger
supportPremiumWatchAssets
isLocalVoiceTriggerAvailable
supportTTS
supportsEndpointingOnATV
supportJarvisVoiceTrigger
supportBluetoothDeviceVoiceTrigger
UTF8String
rootQueueWithFixedPriority:
supportHybridEndpointer
initWithData:encoding:
characterSetWithCharactersInString:
componentsSeparatedByCharactersInSet:
dateWithTimeIntervalSinceNow:
stringFromDate:
isIOSDeviceSupportingBargeIn
isDictationOnSRDEnabled
supportsUnderstandingOnDevice
supportsDictationOnDevice
processInfo
processIdentifier
isTVPushToTalkEnabled
supportContinuousVoiceTrigger
supportKeywordDetector
supportPremiumAssets
supportOpportunisticZLL
supportSelfTriggerSuppression:refChannelIdx:
supportCSTwoShotDecision
supportEndpointerWhileHostAsleep
supportSmartVolume
supportSAT
supportCompactPlus
supportAdBlocker
supportContinuousAudioFingerprint
supportPremiumModel
supportPhatic
shouldDelayPhaticForMyriadDecision
supportSessionActivateDelay
supportLanguageDetector
shouldDownloadVTAssetsOnDaemon
supportLazySessionActivation
supportMyriadLightHouse
supportAcousticProgressiveChecker
hasRemoteCoreSpeech
supportRemoraVoiceTrigger
supportVoiceTriggerChannelSelection
supportHomeKitAccessory
supportRemoteDarwinVoiceTrigger
shouldDeinterleaveAudioOnCS
supportCircularBuffer
supportBeepCanceller:
supportZeroFilter:
getFixedPrioritySerialQueueWithLabel:fixedPriority:
getFixedHighPrioritySerialQueueWithLabel:priority:
getSerialQueue:qualityOfService:
getSerialQueue:withQualityOfService:andTargetQueue:
deviceProductType
deviceProductVersion
deviceIdentifier
systemUpTime
deviceUserAssignedName
deviceBuildVersion
deviceHwRevision
timeStampWithSaltGrain
supportsSpeakerRecognitionAssets
supportsSiriLiminal
supportNonInterruptibleSiri
supportHandsFree
supportsVoiceTriggerFides
supportsANE
supportsHybridUnderstandingOnDevice
supportsSpeechRecognitionOnDevice
isAttentiveSiriEnabled
deviceRequirePowerAssertionHeld
deviceRequirePreventStandbyAssertion
supportHangUp
supportTrialMitigationAssets
supportRingtoneA2DP
supportMph
horsemanDeviceType
getResourcePathInSystemDomainMaskByAppending:
allowExtendedRingBufferSize
platformSupportsImplcitUttAddition
supportRelayCall
currentRoute
outputs
endpointType
pickedRoute
isHFPWithRecordRoute:
isHeadphoneDeviceWithRecordRoute:playbackRoute:
isBluetoothAudioDeviceConnected
isBluetoothVehicleOutput
audioPortSubtypeAsString:
initWithRecordType:deviceId:
setAlwaysUseRemoteBuiltInMic:
contextForServerInvoke
stringWithUTF8String:
recordTypeFromAVVCActivationMode:
setType:
setDeviceId:
setIsRequestDuringActiveCall:
setActivationMetadata:
setTurnIdentifier:
setIsRequestFromSpokenNotification:
_createAVVCContextWithType:deviceId:
avvcActivationMode:
numberWithInteger:
setObject:forKey:
type
deviceId
isBuiltInVoiceTriggered
isHearstVoiceTriggered
isJarvisVoiceTriggered
isRemoraVoiceTriggered
isDarwinVoiceTriggered
isGibraltarVoiceTriggered
hasRemoteBuiltInMic
isHearstDoubleTapTriggered
recordTypeString:
contextForHearstVoiceTriggerWithDeviceId:
contextForRemoraVoiceTriggerWithDeviceId:
contextForRemoraButtonTriggerWithDeviceId:
contextForOpportuneSpeakerListener
contextForOpportuneSpeakerListenerWithCall
contextForBuiltInVoiceTrigger
contextForJarvisWithDeviceId:
contextForBTLEWithDeviceId:
contextForVoiceTriggerTraining
contextForHomeButton
contextForDarwinVoiceTriggerWithDeviceId:
contextForDictation
defaultContext
initWithAVVCContext:
avvcContext
isEqual:
isVoiceTriggered
isVoiceTriggeredFromRemoteXPCDevice
isTriggeredFromHearst
isRTSTriggered
isRemoraTriggered
isRemoraButtonPress
isHomePressed
isTVRemote
isServerInvoked
isStarkTriggered
isDictation
isiOSButtonPress
isUIButtonPress
isAudioRecordTypeSupportedByRemora
alwaysUseRemoteBuiltInMic
isRequestDuringActiveCall
activationMetadata
turnIdentifier
isRequestFromSpokenNotification
_alwaysUseRemoteBuiltInMic
_isRequestDuringActiveCall
_isRequestFromSpokenNotification
_type
_deviceId
_activationMetadata
_turnIdentifier
Tq,N,V_type
T@"NSString",&,N,V_deviceId
TB,N,V_alwaysUseRemoteBuiltInMic
TB,N,V_isRequestDuringActiveCall
T@"NSDictionary",&,N,V_activationMetadata
T@"NSString",&,N,V_turnIdentifier
T@"NSObject<OS_xpc_object>",R,N
TB,N,V_isRequestFromSpokenNotification
initWithName:clientQueue:
setPhId:
setIsEarlyWarning:
setSamplesAtFire:
setStartSampleCount:
isEarlyWarning
samplesAtFire
startSampleCount
_isEarlyWarning
_samplesAtFire
_startSampleCount
TQ,N,V_phId
TB,N,V_isEarlyWarning
TQ,N,V_samplesAtFire
TQ,N,V_startSampleCount
_resetStartAnalyzeTime
getAnalyzedResultsFromAudioChunk:
_processAudioChunk:
getAnalyzedResults
getBestAnalyzedResults
_setStartAnalyzeTime:
numSamples
inputRecordingIsFloat
dataForChannel:
_keywordAnalyzerNDAPIResultFromNovDetectorResult:phId:
floatValue
getBestAnalyzedResultsFromAudioChunk:
getThreshold
getLoggingThreshold
getRejectLoggingThreshold
activePhId
setActivePhId:
_novDetector
_startAnalyzeSampleCount
_isStartSampleCountMarked
_lastSampleFed
_sampleFedWrapAroundOffset
_activePhId
TI,N,V_activePhId
inputRecordingSampleRate
hostTimeFromSampleCount:anchorHostTime:anchorSampleCount:sampleRate:
sampleCountFromHostTime:anchorHostTime:anchorSampleCount:sampleRate:
processSampleCount:hostTime:
hostTimeFromSampleCount:
sampleCountFromHostTime:
anchorSampleCount
setAnchorSampleCount:
anchorHostTime
setAnchorHostTime:
_anchorSampleCount
_anchorHostTime
TQ,N,V_anchorSampleCount
TQ,N,V_anchorHostTime
removeObserver:
addObserver:
_checkAllConditionsEnabled
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
CSEventMonitorDidReceiveEvent:
setCallback:
addConditions:
subscribeEventMonitor:
isEnabled
notifyCallback:option:
notifyCallbackWithOption:
_monitors
_conditions
_callback
voiceTriggerEventInfoWithAdjustedMachTime:deviceUUID:anchorHostMachTime:anchorDarwinMachTime:
mutableCopy
removeObjectForKey:
unsignedLongLongValue
getHostClockFrequency
numberWithUnsignedLongLong:
setRawVoiceTriggerEventInfo:fromDeviceUUID:anchorHostMachTime:anchorDarwinMachTime:
getMachTimeAdjustedVoiceTriggerEventInfoForDeviceUUID:
triggerInfos
setTriggerInfos:
_triggerInfos
T@"NSMutableDictionary",&,N,V_triggerInfos
sharedPreferences
siriDataSharingOptInStatus
_setupFilePath
_prepareFileForLogging
_createFileDescriptor:protectionClass:
initWithFileDescriptor:closeOnDealloc:
date
timeIntervalSince1970
createSamplingDirectory
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
audioFileHandle
writeData:error:
closeFile
_writePlistFile
dataWithPropertyList:format:options:error:
writeData:
initWithRequestId:languageCode:
prepareLogging
appendAudioData:
endAudio
requestId
setRequestId:
languageCode
setLanguageCode:
samplingDate
setSamplingDate:
samplingTimestamp
setSamplingTimestamp:
samplingTimestampDetail
setSamplingTimestampDetail:
samplingDirectory
setSamplingDirectory:
audioFilePath
setAudioFilePath:
plistFilePath
setPlistFilePath:
setAudioFileHandle:
_requestId
_languageCode
_samplingDate
_samplingTimestamp
_samplingTimestampDetail
_samplingDirectory
_audioFilePath
_plistFilePath
_audioFileHandle
T@"NSString",&,N,V_requestId
T@"NSString",&,N,V_languageCode
T@"NSString",&,N,V_samplingDate
T@"NSString",&,N,V_samplingTimestamp
T@"NSString",&,N,V_samplingTimestampDetail
T@"NSString",&,N,V_samplingDirectory
T@"NSString",&,N,V_audioFilePath
T@"NSString",&,N,V_plistFilePath
T@"NSFileHandle",&,N,V_audioFileHandle
initWithData:numChannels:numSamples:sampleByteDepth:startSampleCount:hostTime:arrivalHostTimeToAudioRecorder:wasBuffered:remoteVAD:
initWithBytes:length:
initWithBytesNoCopy:length:deallocator:
dataWithLength:
dataWithCapacity:
subdataWithRange:
appendData:
apply12dBGainToFloatBuffer:
apply12dBGainToShortBuffer:
subChunkFrom:numSamples:
initWithData:numChannels:numSamples:sampleByteDepth:startSampleCount:hostTime:remoteVAD:
chunkForChannel:
dataWithRemoteVADWithScaleFactor:numAudioSamplesPerRemoteVAD:
remoteVADAvailable
subChunkFrom:numSamples:forChannel:
copySubAudioChunkFrom:numSamples:to:dstBufferSize:
remoteVADSubChunkFrom:numSamples:numAudioSamplesPerRemoteVAD:
gainCompensatedChunk
skipSamplesAtStartSuchThatNumSamplesReceivedSoFar:reachesACountOf:completionHandler:
splitAudioChunkSuchThatNumSamplesReceivedSoFar:reachesACountOf:completionHandler:
data
sampleByteDepth
hostTime
arrivalHostTimeToAudioRecorder
wasBuffered
remoteVAD
setRemoteVAD:
_wasBuffered
_data
_numSamples
_sampleByteDepth
_hostTime
_arrivalHostTimeToAudioRecorder
_remoteVAD
T@"NSData",R,N,V_data
TQ,R,N,V_numChannels
TQ,R,N,V_numSamples
TQ,R,N,V_sampleByteDepth
TQ,R,N,V_startSampleCount
TQ,R,N,V_hostTime
TQ,R,N,V_arrivalHostTimeToAudioRecorder
TB,R,N,V_wasBuffered
TB,R,N
T@"NSData",&,N,V_remoteVAD
initWithNumChannels:recordingDuration:samplingRate:audioTimeConverter:
addSamples:numSamples:atHostTime:
sampleCount
copySamplesFrom:to:
initWithNumChannels:recordingDuration:samplingRate:
numInputChannels
inputRecordingDuration
addSamples:numSamples:
copySamplesFromHostTime:
copySamplesFrom:to:channelIdx:
copybufferFrom:to:
copyBufferWithNumSamplesCopiedIn:
bufferLength
setBufferLength:
audioTimeConverter
setAudioTimeConverter:
setNumInputChannels:
setInputRecordingDuration:
_csAudioCircularBufferImpl
_inputRecordingDuration
_bufferLength
_audioTimeConverter
_numInputChannels
TQ,N,V_bufferLength
T@"CSAudioTimeConverter",&,N,V_audioTimeConverter
TQ,N,V_numInputChannels
Tf,N,V_inputRecordingDuration
initWithPid:
bundleId
appName
version
_bundleId
_appName
_version
T@"NSString",R,N,V_bundleId
T@"NSString",R,N,V_appName
T@"NSString",R,N,V_version
decodeConfigV2:category:
decodeConfigV1:category:
arrayWithObjects:count:
twoShotDelayConfigKey
defaultTwoShotDelay
adjustTwoShotDelay:
decodeConfigFrom:category:
inputRecordingSampleByteDepth
inputRecordingFramesPerPacket
fileLoggingIsEnabled
inputRecordingDurationInSecs
inputRecordingSampleRateNarrowBand
inputRecordingBytesPerFrame
inputRecordingBytesPerPacket
hearstNumberOfBytesPerChunk
hearstNumberOfSamplesPerChunk
inputRecordingNumberOfChannels
inputRecordingDurationInSecsExtended
inputRecordingSampleBitDepth
EncryptionAudioSampleByteDepth
inputRecordingEncoderAudioQuality
inputRecordingSampleRateConverterAlgorithm
inputRecordingBufferDuration
audioConverterBitrate
channelForOutputReference
channelForProcessedInput
zeroFilterWindowSizeInMs
zeroFilterWindowSizeInMsForReport
zeroFilterApproxAbsSpeechThreshold
csAudioProcessingQueuePriority
daysBeforeRemovingLogFiles
remoteVADDuration
serverLoggingChannelBitset
defaultContinousFingerprintBufferDuration
defaultContinousFingerprintBufferDurationForRemora
fetchAndClearCachedVoiceTriggerEventsWithCompletion:
logStartEventWithFirstPassStartedInfo:withMHUUID:
logTriggerEventWithVTEI:withMHUUID:
logRejectEventWithVTEI:withMHUUID:withSecondPassResult:
logCancelledEventWithMHUUID:
logTwoShotEndEventWithSuppresedAlert:withTimedOut:withMHUUID:
logTwoShotStartEventWithPromptType:withMHUUID:
logTwoShotDetectedWithMHUUID:
logSiriLaunchStartedWithVoiceTriggerEventInfo:
logSiriLaunchCompletedWithVoiceTriggerEventInfo:
UUID
UUIDString
initWithDescription:
_transaction
_description
valueForKeyPath:
arrayWithObject:
initWithConfigPathNDAPI:threshold:twoShotThreshold:twoShotDecisionWaitTime:voiceTriggerPhIds:silencePhIds:
decodeConfigFrom:
hostTimeToTimeInterval:
secondsToHostTime:
hostTimeToSeconds:
macHostTimeFromBridgeHostTime:
isReceivedTimeInterval:matchCurrentTimeInterval:
convertSampleCountToNs:sampleRate:
secondsToNs:
millisecondsToNs:
hostTimeToNs:
absoluteHostTimeToContinuousHostTime:
initWithLength:
mutableBytes
convertToFloatLPCMBufFromShortLPCMBuf:
audioDecoderDidDecodePackets:audioStreamHandleId:buffer:remoteVAD:timestamp:arrivalTimestampToAudioRecorder:wasBuffered:receivedNumChannels:
initWithInASBD:outASBD:
addPackets:audioStreamHandleId:remoteVAD:timestamp:arrivalTimestampToAudioRecorder:wasBuffered:receivedNumChannels:
_decoder
_inASBD
_outASBD
T@"<CSAudioDecoderDelegate>",W,V_delegate
utteranceFileASBD
lpcmInt16ASBD
initWithURL:inputFormat:outputFormat:
fileURLWithPath:
URLByDeletingPathExtension
URLByAppendingPathExtension:
dictionaryWithDictionary:
dataWithJSONObject:options:error:
writeToFile:atomically:
lastPathComponent
stringByDeletingPathExtension
stringByAppendingString:
URLByDeletingLastPathComponent
addContextKey:withContext:
lpcmNonInterleavedASBDWithSampleRate:numberOfChannels:
lpcmInterleavedASBDWithSampleRate:numberOfChannels:
saveAudioChunck:toURL:
initWithURL:
initWithFilepath:
createAcousticMetaFileForContext:withContext:
addContextKey:fromMetaFile:
fileURL
isWriting
fFile
inASBD
outASBD
_fileURL
T@"NSURL",R,N,V_fileURL
_storeModeEnabled
setFileLoggingLevel:
fileLoggingLevel
intValue
baseDir
remoteP2pLogDirectory
fileExistsAtPath:isDirectory:
assistantLogDirectory
myriadHashDirectory
objectForKey:
_updatePreferenceSettingsForAccessory:settingsUpdateBlock:
numberWithDouble:
doubleValue
_clearAccessorySettingForKeys:forAccessory:
getBooleanAccessorySettingValueForKey:forAccessory:
setMediaPlayingSettingForAccessory:isMediaPlaying:isInterrupted:interruptedTime:
setBooleanAccessorySettingValue:forKey:forAccessory:
initWithName:timeout:
stringByReplacingOccurrencesOfString:withString:
interstitialRelativeDirForLevel:
enableAudioInjection:withKey:
audioInjectionEnabledWithKey:
enumerateObjectsUsingBlock:
unsignedIntegerValue
smartSiriVolumeContextAwareEnabled
_isAdaptiveSiriVolumeDisabled
longLongValue
userIntentType
userIntentTime
numberWithLongLong:
userIntentVolume
latestVolumeTime
latestVolume
permanentOffsetIsEnabled
permanentOffsetFactor
userIntentValidForSeconds
setUserIntentType:
setUserIntentTime:
setUserIntentVolume:
setLatestVolumeTime:
setLatestVolume:
setPermanentOffsetIsEnabled:
setPermanentOffsetFactor:
voiceTriggerEnabled
phraseSpotterEnabled
setVoiceTriggerEverUsed
isAttentiveSiriAudioLoggingEnabled
twoShotNotificationEnabled
getAttendingTimeoutConfig
setFileLoggingIsEnabled:
disableAdaptiveSiriVolume:
voiceTriggerAudioLogDirectory
geckoAudioLogDirectory
mhLogDirectory
remoteGradingDataDirectory
ssvLogDirectory
getSSVLogFilePathWithSessionIdentifier:
trialBaseAssetDirectory
assistantAudioFileLogDirectory
myriadHashFilePath
secondPassAudioLoggingEnabled
speakerRecognitionAudioLoggingEnabled
personalizedSiriEnrollmentAudioLoggingEnabled
jarvisAudioLoggingEnabled
setJarvisTriggerMode:
getJarvisTriggerMode
startOfSpeechAudioLoggingEnabled
forceVoiceTriggerAPMode
forceVoiceTriggerAOPMode
getMediaPlaybackInterruptedTime:
clearMediaPlaybackInterruptedTimeOnAccessory:
isMediaPlayingOnAccessory:
setIsMediaPlayingOnAccessory:isMediaPlaying:isInterrupted:interruptedTime:
clearMediaPlayingStatusOnAccessory:
isAlarmPlayingOnAccessory:
setIsAlarmPlayingOnAccessory:isAlarmPlaying:
clearAlarmPlayingStatusOnAccessory:
isTimerPlayingOnAccessory:
setIsTimerPlayingOnAccessory:isTimerPlaying:
clearTimerPlayingStatusOnAccessory:
clearMyriadSettingsOnAccessory:
getStartOfSpeechAudioLogFilePath
_isDirectory:
remoteVoiceTriggerDelayTime
remoteVoiceTriggerEndpointTimeoutWithDefault:
interstitialAbsoluteDirForLevel:
myriadFileLoggingEnabled
enableAudioInjection:
audioInjectionEnabled
enableProgrammableAudioInjection:
useSpeexForAudioInjection
programmableAudioInjectionEnabled
setAudioInjectionFilePath:
audioInjectionFilePath
isPHSSupported
_isRemoteVoiceTriggerAvailable
isSpeakerRecognitionAvailable
speakerIdScoreReportingType
smartSiriVolumeSoftVolumeEnabled
smartSiriVolumeContextAwareLoggingEnabled
isAdaptiveSiriVolumeTemporaryIntentValid
isAdaptiveSiriVolumePermanentOffsetEnabled
adaptiveSiriVolumePermanentOffset
adaptiveSiriVolumeRecentIntent
audioSessionActivationDelay
maxNumLoggingFiles
maxNumGradingFiles
useSiriActivationSPIForHomePod
useSiriActivationSPIForwatchOS
shouldOverwriteRemoteVADScore
overwritingRemoteVADScore
setHearstFirstPassModelVersion:
setHearstSecondPassModelVersion:
fakeHearstModelPath
setFakeHearstModelPath:
companionSyncVoiceTriggerUtterancesEnabled
opportuneSpeakListenerBypassEnabled
bypassPersonalizedHeySiri
isMphVTEnabled
isMultiChannelAudioLoggingEnabled
isAdBlockerAudioLoggingEnabled
isSelfTriggerFileLoggingEnabled
setASVUserIntent:
getASVUserIntent:
setSiriLanguageCodeDarwin:
languageCodeDarwin
setRemoteDarwinEverConnectedWithNotifyKey:
setIdleUserPreventSleepAssertionAcquitionDate:
getIdleUserPreventSleepAssertionAcquitionDate
isP2PTransferEnabled
isReducedPHSThresholdEnabled
isModelBenchmarkingEnabled
geckoLoggingLevel
enableEndpointEnhancedLogging:
isEndpointEnhancedLoggingEnabled
isEndpointAssetOverridingEnabled
fakeEndpointAssetPath
isEndpointAssetBypassTrialEnabled
isVoiceTriggerAssetOverridingEnabled
fakeVoiceTriggerAssetPath
isMitigationAssetOverridingEnabled
fakeMitigationAssetPath
bypassTrialAssets
setSelfTriggerEnabledGibraltar:
isSelfTriggerEnabledGibraltar
shouldOverwriteVoiceTriggerMLock
overwritingVoiceTriggerMLock
bypassSpeakerIdForMitigation
readSpeakerIdScoreOverrrideConfig
firstPassDebuggingEnabled
forceMitigateForHybridSDSD
setPowerLoggingCurrentAssetConfigVersion:
powerLoggingCurrentAssetConfigVersion
setPowerLoggingCurrentLanguage:
powerLoggingCurrentLanguage
bundleForClass:
bundlePath
dataWithContentsOfFile:options:error:
convertToShortLPCMBufFromFloatLPCMBuf:
beepCancellerDidCancelSamples:buffer:timestamp:
numberWithInt:
cancelBeepFromSamples:timestamp:
willBeep
flush
_beepCanceller
_beepFloatVec
_floatBuffer
_shortBuffer
_numTotalInputSamples
_numTotalOutputSamples
T@"<CSBeepCancellerDelegate>",W,N,V_delegate
invalidate
startPoint
endPoint
initWithStartPoint:endPoint:
hasIntersectionWithRange:
_startPoint
_endPoint
TQ,R,N,V_startPoint
TQ,R,N,V_endPoint
_sharedDisposeLoggingQueue
distantFuture
getResourceValue:forKey:error:
compare:
removeItemAtURL:error:
URLsInDirectory:matchingPattern:completion:
objectAtIndex:
_sortedURLsInDirectory:matchingPattern:completion:
_createLoggingDirectoryIfNeeded:
_timeStampString
_contentsOfDirectoryAtURL:matchingPattern:includingPropertiesForKeys:error:
sortedArrayUsingComparator:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
numberOfMatchesInString:options:range:
predicateWithBlock:
filteredArrayUsingPredicate:
removeLogFilesInDirectory:matchingPattern:beforeDays:
clearLogFilesInDirectory:matchingPattern:exceedNumber:
loggingFilePathWithDirectory:token:postfix:
submitVoiceIdIssueReport:
submitAudioIssueReport:
submitVoiceTriggerIssueReport:
submitEndpointerIssueReport:
submitTrialIssueReport:
submitUresIssueReport:
submitSiriPowerIssueReport:
submitRemoteCoreSpeechReport:context:
_reset
_scaleDecayConstants:
_savePeaks:averagePower:maxSample:
peakValueSinceLastCall
setPeakValueSinceLastCall:
setSawNotANumber:
setSawInfinity:
_zapgremlins:
_linearToDB:
_ampToDB:
initWithSampleRate:
processShortBuffer:stride:inFrameToProcess:
processFloatBuffer:stride:inFrameToProcess:
getPeakPowerDB
getAveragePowerDB
_averagePowerI
_averagePowerF
_instantaneousMode
_peak
_maxPeak
_decay
_peakDecay
_averagePowerPeak
_peakHoldCount
_sampleRate
_previousBlockSize
_decay1
_peakDecay1
_clipping
phraseConfig
setEffectiveKeywordThreshold:
removeAllObjects
initWithPhraseConfig:
initWithConfigPath:triggerTokensArray:preventDuplicatedReset:memoryLock:
setPhraseConfig:
_phraseDetectorResultFromNDAPIResults:quasarResult:forceMaximized:
getResultsFromFlushedAudio
_getResultWithPhId:phraseDetectorInfo:ndapiResult:quasarResult:forceMaximized:
setObject:atIndexedSubscript:
_resultCopyWithKeywordDetectorDecision:bestPhId:phraseResult:
hasPendingNearMiss
effectiveKeywordThreshold
triggerConfidence
setHasPendingNearMiss:
_isSecondChanceCandidateWithScore:effectiveThreshold:secondChanceThreshold:
setRunAsSecondChance:
setConfig:
getAnalyzedResultFromAudioChunk:
getAnalyzedResultFromFlushedAudio
phraseDetectorInfoFromPhId:
syncKeywordAnalyzerNDAPI
setSyncKeywordAnalyzerNDAPI:
syncKeywordAnalyzerQuasar
setSyncKeywordAnalyzerQuasar:
phraseDetectorInfos
setPhraseDetectorInfos:
nearMissDelayTimeout
setNearMissDelayTimeout:
nearMissCandidateDetectedSamples
setNearMissCandidateDetectedSamples:
phraseResult
setPhraseResult:
_syncKeywordAnalyzerNDAPI
_syncKeywordAnalyzerQuasar
_phraseDetectorInfos
_nearMissDelayTimeout
_nearMissCandidateDetectedSamples
_phraseResult
T@"CSKeywordAnalyzerNDAPI",&,N,V_syncKeywordAnalyzerNDAPI
T@"CSSyncKeywordAnalyzerQuasar",&,N,V_syncKeywordAnalyzerQuasar
T@"NSMutableArray",&,N,V_phraseDetectorInfos
TQ,N,V_nearMissDelayTimeout
TQ,N,V_nearMissCandidateDetectedSamples
T@"NSMutableArray",&,N,V_phraseResult
initWithConfidence:
setTriggerConfidence:
_triggerConfidence
Td,N,V_triggerConfidence
_phToPhIdMapFromTriggerTokensArray:
systemUptime
initWithConfiguration:memoryLock:
resetWithSamplingRate:language:taskType:userId:sessionId:deviceId:farField:audioSource:maxAudioBufferSizeSeconds:
resultsWithEndedAudio
_getAnalyzedResults:
resultsWithAddedFloatAudio:numberOfSamples:taskName:
resultsWithAddedAudio:numberOfSamples:taskName:
tokens
lastObject
tokenName
confidence
dumpEARSpeechRecognitionResults:
flushAudio
_syncRecognizer
_requireReset
_preventDuplicatedReset
_phToPhIdMap
_numPhrases
reportDigitalZerosWithAudioZeroRun:
initWithToken:sampleRate:numChannels:
resetWithSampleRate:
getZeroStatisticsFromBuffer:entireSamples:
stopCountingZeroStatisticsWithReporter:
_methodToken
_continuousZeroCounter
_zeroCounterWinSz
_zeroCounterWinSzForReport
_maxContinuousZeroCount
_analyzeStep
_shouldDeinterleaveAudio
twoShotThreshold
twoShotDecisionWaitTime
voiceTriggerPhIds
silencePhIds
_twoShotThreshold
_twoShotDecisionWaitTime
_voiceTriggerPhIds
_silencePhIds
Tf,R,N,V_twoShotThreshold
Tf,R,N,V_twoShotDecisionWaitTime
T@"NSArray",R,N,V_voiceTriggerPhIds
T@"NSArray",R,N,V_silencePhIds
initWithConfiguration:
runRecognitionWithResultStream:
_recognizeWavData:length:
addAudioSamples:count:
_getConfidence:
keywordAnalyzerQuasar:hasResultAvailable:forChannel:
containsObject:
dictionaryWithCapacity:
_phIdToCtcScoreMap
caseInsensitiveCompare:
speechRecognizer:didRecognizePartialResult:
speechRecognizer:didFinishRecognitionWithError:
speechRecognizer:didRecognizeFinalResults:
speechRecognizer:didRecognizeFinalResults:tokenSausage:nBestChoices:
speechRecognizer:didRecognizeFinalResultPackage:
speechRecognizer:didProcessAudioDuration:
speechRecognizer:didRecognizeRawEagerRecognitionCandidate:
speechRecognizer:didProduceEndpointFeaturesWithWordCount:trailingSilenceDuration:eosLikelihood:pauseCounts:silencePosterior:processedAudioDurationInMilliseconds:
speechRecognizer:didRecognizePartialResultNbest:
speechRecognizer:didProduceLoggablePackage:
speechRecognizer:didRecognizeFinalResultCandidatePackage:
initWithConfigPath:triggerTokens:useKeywordSpotting:
runRecognition
ctcKwdToPhIdMap
setCtcKwdToPhIdMap:
_previousUtteranceTokens
_triggerTokenList
_recognizer
_recognizerBuffer
_ctcKwdToPhIdMap
T@"NSDictionary",&,N,V_ctcKwdToPhIdMap
Td,R,N,V_triggerConfidence
T@"<CSKeywordAnalyzerQuasarScoreDelegate>",W,N,V_delegate
_hasPendingNearMiss
_effectiveKeywordThreshold
_phraseConfig
Tf,N,V_effectiveKeywordThreshold
TB,N,V_hasPendingNearMiss
T@"CSVoiceTriggerPhraseConfig",&,N,V_phraseConfig
_getAvailableBackingStore
_createNewBackingStore
handleUsedBackingStore:
_checkIdleBackingStores
_recycleUsedBackingStore:
removeLastObject
_canCreateNewBackingStore
backingStoreCapacity
maximumNumberOfBackingStores
minimalNumberOfBackingStores
backingStoreIdleTimeout
removeObjectsInRange:
cleanup
configuration
_lock
_numberOfBackingStores
_recycledBackingStores
_configuration
T@"CSReusableBufferPoolConfiguration",R,N,V_configuration
_sharedAudioLoggingQueue
containsString:
seekToEndOfFile
seekToFileOffset:
readDataOfLength:
getBytes:length:
offsetInFile
opportuneSpeakingFileLoggingIsEnabled
_createAudioFileWriterForOpportuneSpeakListenerWithLoggingDir:inputFormat:outputFormat:
_createAudioFileWriterForPHSTrainingWithLoggingDir:inputFormat:outputFormat:
_createAudioFileWriterWithLoggingDir:withLoggingUUID:inputFormat:outputFormat:
_getDateLabel
getNumElementInBitset:
initWithURL:inputFormat:outputFormat:channelBitset:
_createAudioFileWriterForAdBlockerWithLoggingDir:inputFormat:outputFormat:withAccessoryID:
_createAudioFileWriterForOSDWithLoggingDir:inputFormat:outputFormat:
pruneLogFiles
URLWithString:
pruneNumberOfGradingFilesTo:
pruneNumberOfLogFilesTo:
arrayWithObjects:
cleanupOrphanedGradingFiles
absoluteString
removeItemAtPath:error:
enumerateKeysAndObjectsUsingBlock:
generateDeviceAudioLogging:speechId:
_readDataFromFileHandle:toFileHandle:
createAudioFileWriterForOpportuneSpeakListenerWithInputFormat:outputFormat:
createAudioFileWriterForPHSTrainingWithInputFormat:outputFormat:
createAudioFileWriterForRemoteVADWithInputFormat:outputFormat:withLoggingUUID:
createAudioFileWriterWithInputFormat:outputFormat:withLoggingUUID:
createSelectiveChannelAudioFileWriterWithChannelBitset:
createAudioFileWriterForAdBlockerWithInputFormat:outputFormat:withAccessoryID:
createAudioFileWriterForOSDWithInputFormat:outputFormat:
removeOpportunisticAudioLoggingOlderThanNDays:
removeLogFilesOlderThanNDays:
removeRemoteP2PLogFilesOlderThanNDays:
audioFileWriterForAttentiveSiri
initWithCapacity:
insertObject:atIndex:
addEventToCacheBuffer:
clearBuffer
eventsArray
_lastEventIndex
_eventsArray
T@"NSMutableArray",R,N,V_eventsArray
firstPassEvents
rejectEvents
cancelledEvents
setValue:forKey:
setFirstPassEvents:
setRejectEvents:
setCancelledEvents:
_firstPassEvents
_rejectEvents
_cancelledEvents
T@"CSFCircularEventsCacheBuffer",&,N,V_firstPassEvents
T@"CSFCircularEventsCacheBuffer",&,N,V_rejectEvents
T@"CSFCircularEventsCacheBuffer",&,N,V_cancelledEvents
_borealisPowerlog:
_updateConfigToPreferencesWithLanguage:withModelVersion:
_configPowerlog:
sharedPowerLogger
powerLogVoiceTriggerStart
powerLogVoiceTriggerStop
powerWithNumFalseWakeup:withDuration:withPhraseDict:
powerLogSiriConfigWithVoiceTriggerEnabled:withLanguage:withModelVersion:
weakObjectsHashTable
_remoteAssetMetaPath
_loadFromJsonFile:
_loadJsonDataFromFile:
_setAssetsInfoFromMetaData:
_writeToJsonFile:
_loadPreinstalledAssetMetaIfNeeded
stringByDeletingLastPathComponent
CSRemoteAssetManagerDidDownloadNewAsset:
removeObject:
sharedManager
assetForCurrentLanguageOfType:
setLanguageCode:resourcePath:configVersion:assetHash:assetType:
assetConfigVersionForAssetType:
assetHashForAssetType:
resourcePathForAssetType:
addObserver:forAssetType:
removeObserver:forAssetType:
_currentLanguageCode
_assetHash
_observers
iterateBitset:block:
numberOfChannels
selectedChannelList
_numberOfChannels
TI,R,N,V_numberOfChannels
initWithFormat:
initWithBackingStoreCapacity:minimalNumberOfBackingStores:maximumNumberOfBackingStores:backingStoreIdleTimeout:
_backingStoreCapacity
_minimalNumberOfBackingStores
_maximumNumberOfBackingStores
_backingStoreIdleTimeout
TQ,R,N,V_backingStoreCapacity
TQ,R,N,V_minimalNumberOfBackingStores
TQ,R,N,V_maximumNumberOfBackingStores
Td,R,N,V_backingStoreIdleTimeout
applyGain:toShortBuffer:
applyGain:toFloatBuffer:
applyNegative32dBGainToShortBuffer:
applyNegative32dBGainToFloatBuffer:
applyNegative20dBGainToShortBuffer:
applyNegative20dBGainToFloatBuffer:
enter
leave
waitWithTimeout:
_dispatchGroup
_dispatchGroupCounter
lpcmInt16NarrowBandASBD
lpcmFloatASBD
opusASBD
opusNarrowBandASBD
speexASBD
lpcmInterleavedASBD
lpcmMonoInterleavedASBD
lpcmInterleavedWithRemoteVADASBD
lpcmMonoInterleavedWithRemoteVADASBD
lpcmNonInterleavedASBD
lpcmMonoNonInterleavedASBD
lpcmNonInterleavedWithRemoteVADASBD
lpcmMonoNonInterleavedWithRemoteVADASBD
lpcmASBD
lpcmNarrowBandASBD
aiffFileASBD
categoryForFirstPass:
decodePreTriggerAudioTime:fromCategory:
decodePrependingAudioTime:fromCategory:
decodeTrailingAudioTime:fromCategory:
decodeConfigFileNDAPI:fromCategory:
decodeUseRecognizerCombination:fromCategory:
decodeConfigFileRecognizer:fromCategory:
decodeUseKeywordSpotting:fromCategory:
decodeWearerDetectionConfig:fromCategory:
decodeConfigFrom:forFirstPassSource:
@16@0:8
@28@0:8@16B24
Q16@0:8
v24@0:8Q16
f16@0:8
v20@0:8f16
B16@0:8
v20@0:8B16
@24@0:8@16
v16@0:8
@32@0:8r^s16q24
@32@0:8^v16q24
v24@0:8@16
@"NSMutableData"
@"CSKeywordAnalyzerNDEAPIResult"
@"<CSKeywordAnalyzerNDEAPIScoreDelegate>"
@24@0:8^{_NSZone=}16
@64@0:8Q16Q24f32f36@40f48B52B56B60
@"CSKeywordAnalyzerNDAPIResult"
@40@0:8f16f20f24f28@32
@"NSArray"
@24@0:8Q16
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
@48@0:8@16f24f28f32f36Q40
@"NSString"
I16@0:8
v20@0:8I16
@44@0:8B16B20B24B28B32B36B40
Q44@0:8B16B20B24B28B32B36B40
@40@0:8Q16@24@32
@48@0:8Q16@24@32Q40
Q24@0:8@16
B32@0:8@16@24
@48@0:8@16@24@32Q40
@40@0:8@16@24@32
B36@0:8@16@24B32
@32@0:8@16@24
B24@0:8@16
@"NSDictionary"
@76@0:8f16f20f24@28@36B44@48B56@60@68
@"CSVoiceTriggerAirPodWearerDetectionConfig"
v52@0:8@16i24@28f36i40i44i48
v48@0:8@16i24@28i36i40B44
@76@0:8@16f24f28f32f36f40f44@48f56f60f64f68f72
@44@0:8f16f20f24f28f32f36f40
r^v16@0:8
@40@0:8^v16Q24@?32
B32@0:8r^v16Q24
@36@0:8Q16S24d28
Q40@0:8@16Q24^@32
Q24@0:8^@16
{unique_ptr<CSAudioZeroFilterImpl<unsigned short>, std::default_delete<CSAudioZeroFilterImpl<unsigned short>>>="__ptr_"{__compressed_pair<CSAudioZeroFilterImpl<unsigned short> *, std::default_delete<CSAudioZeroFilterImpl<unsigned short>>>="__value_"^v}}
v32@0:8@16Q24
@20@0:8I16
i16@0:8
v20@0:8i16
v32@0:8@16@24
v40@0:8@16@24Q32
v44@0:8@16B24@28@36
v28@0:8@16B24
v32@0:8@16B24S28
v52@0:8@16B24i28i32@36@44
v44@0:8@16B24Q28Q36
v52@0:8@16B24@28@36@44
v40@0:8@16@24@32
v36@0:8@16i24@28
v48@0:8@16q24@32@40
B56@0:8{?=[8I]}16@48
{?=[8I]}32@0:8@16@24
@48@0:8{?=[8I]}16
B32@0:8Q16Q24
B24@0:8Q16
@20@0:8i16
@28@0:8@16i24
@28@0:8@16I24
@36@0:8@16I24@28
d16@0:8
q16@0:8
@24@0:8q16
@32@0:8q16@24
q24@0:8q16
v24@0:8q16
@32@0:8@16Q24
@"CSNovDetector"
v32@0:8Q16Q24
Q24@0:8Q16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v28@0:8B16Q20
@"NSMutableArray"
@48@0:8@16@24Q32Q40
v48@0:8@16@24Q32Q40
i28@0:8@16i24
@"NSFileHandle"
@84@0:8@16Q24Q32Q40Q48Q56Q64B72@76
@72@0:8@16Q24Q32Q40Q48Q56@64
@28@0:8f16Q20
@40@0:8Q16Q24Q32
@32@0:8Q16Q24
Q48@0:8Q16Q24^v32Q40
v40@0:8Q16Q24@?32
@"NSData"
@32@0:8Q16f24f28
@40@0:8Q16f24f28@32
v32@0:8r^v16Q24
v40@0:8r^v16Q24Q32
@24@0:8^Q16
{unique_ptr<corespeech::CSAudioCircularBufferImpl<unsigned short>, std::default_delete<corespeech::CSAudioCircularBufferImpl<unsigned short>>>="__ptr_"{__compressed_pair<corespeech::CSAudioCircularBufferImpl<unsigned short> *, std::default_delete<corespeech::CSAudioCircularBufferImpl<unsigned short>>>="__value_"^v}}
@"CSAudioTimeConverter"
f20@0:8f16
S16@0:8
v32@0:8B16B20@24
v28@0:8I16@20
@"NSObject<OS_os_transaction>"
Q20@0:8f16
f24@0:8Q16
d24@0:8Q16
Q44@0:8Q16Q24Q32f40
B32@0:8d16d24
Q28@0:8Q16f24
@96@0:8{AudioStreamBasicDescription=dIIIIIIII}16{AudioStreamBasicDescription=dIIIIIIII}56
v64@0:8@16Q24@32Q40Q48B56I60
^{OpaqueAudioConverter=}
{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}
@"<CSAudioDecoderDelegate>"
@104@0:8@16{AudioStreamBasicDescription=dIIIIIIII}24{AudioStreamBasicDescription=dIIIIIIII}64
B32@0:8r^v16q24
^{OpaqueExtAudioFile=}
@"NSURL"
v32@0:8@16@?24
v36@0:8B16@20@28
v40@0:8@16B24B28d32
d24@0:8@16
d24@0:8d16
B20@0:8B16
B28@0:8B16^{__CFString=}20
B24@0:8^{__CFString=}16
v24@0:8r*16
{unique_ptr<BatchBeepCanceller, std::default_delete<BatchBeepCanceller>>="__ptr_"{__compressed_pair<BatchBeepCanceller *, std::default_delete<BatchBeepCanceller>>="__value_"^{BatchBeepCanceller}}}
{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}
{vector<short, std::allocator<short>>="__begin_"^s"__end_"^s"__end_cap_"{__compressed_pair<short *, std::allocator<short>>="__value_"^s}}
@"<CSBeepCancellerDelegate>"
@32@0:8@16d24
v36@0:8@16@24f32
v40@0:8@16@24@?32
@48@0:8@16@24@32^@40
@20@0:8f16
v32@0:8r^s16i24i28
v32@0:8r^f16i24i28
v28@0:8i16i20i24
v24@0:8^d16
@"CSAudioUnitMeterClipping"
@36@0:8@16@24B32
@52@0:8Q16@24@32@40B48
B28@0:8f16f20f24
@40@0:8Q16Q24@32
@"CSKeywordAnalyzerNDAPI"
@"CSSyncKeywordAnalyzerQuasar"
@24@0:8d16
v24@0:8d16
@40@0:8@16@24B32B36
@"_EARSyncSpeechRecognizer"
@32@0:8@16f24I28
v28@0:8@16I24
@52@0:8@16f24f28f32@36@44
v48@0:8@16@24@32@40
v32@0:8@16d24
v72@0:8@16q24q32d40@48d56q64
v32@0:8@"_EARSpeechRecognizer"16@"_EARSpeechRecognitionResult"24
v32@0:8@"_EARSpeechRecognizer"16@"NSError"24
v32@0:8@"_EARSpeechRecognizer"16@"NSArray"24
v48@0:8@"_EARSpeechRecognizer"16@"NSArray"24@"NSArray"32@"NSArray"40
v32@0:8@"_EARSpeechRecognizer"16@"_EARSpeechRecognitionResultPackage"24
v32@0:8@"_EARSpeechRecognizer"16d24
v32@0:8@"_EARSpeechRecognizer"16@"_EARSpeechRecognition"24
v72@0:8@"_EARSpeechRecognizer"16q24q32d40@"NSArray"48d56q64
v28@0:8r^s16i24
@"_EARSpeechRecognizer"
@"_EARSpeechRecognitionAudioBuffer"
@"<CSKeywordAnalyzerQuasarScoreDelegate>"
@"CSVoiceTriggerPhraseConfig"
@32@0:8r^v16Q24
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"CSReusableBufferPoolConfiguration"
@104@0:8{AudioStreamBasicDescription=dIIIIIIII}16{AudioStreamBasicDescription=dIIIIIIII}56@96
@112@0:8@16{AudioStreamBasicDescription=dIIIIIIII}24{AudioStreamBasicDescription=dIIIIIIII}64@104
@112@0:8@16@24{AudioStreamBasicDescription=dIIIIIIII}32{AudioStreamBasicDescription=dIIIIIIII}72
@"CSFCircularEventsCacheBuffer"
v40@0:8Q16d24@32
v56@0:8@16@24@32@40Q48
@"NSHashTable"
@112@0:8@16{AudioStreamBasicDescription=dIIIIIIII}24{AudioStreamBasicDescription=dIIIIIIII}64Q104
@48@0:8Q16Q24Q32d40
v28@0:8f16@20
q24@0:8Q16
@"NSObject<OS_dispatch_group>"
{AudioStreamBasicDescription=dIIIIIIII}16@0:8
{AudioStreamBasicDescription=dIIIIIIII}24@0:8f16I20
f32@0:8@16@24
@(#)PROGRAM:CoreSpeechFoundation  PROJECT:CoreSpeech-1
pbhw
pbtb
pbiu
otua
ciov
bhev
eltb
siar
tdtb
cvdh
cvpc
tcid
tsop
rtsh
tvps
tvmr
pbmr
ciov
emoh
cvad
fff?
(knN
ffffff
mcpl
supo
mcpl
mcpl
samples_fed
best_start
best_end
best_score
is_secondchance
isEarlyDetect
[_phId = %lu]
[_decision = %lu]
[_combinedScore = %f]
[_ndapiScore = %f]
[_ndapiResult = %@]
[_recognizerScore = %f]
[_isSecondChance = %i]
[_isSecondChanceCandidate = %i]
[_isRunningQuasar = %i]
v8@?0
CSAudioTimeConverterPool
-[CSAudioTimeConverterPool _getAudioTimeConverterWithAudioStreamId:]_block_invoke
-[CSAudioChunkForTV initWithXPCObject:]
avgPower
peakPower
timeStamp
numChannels
audioFormat
streamHandleID
packets
com.apple.MobileAsset.VoiceTriggerAssets
com.apple.MobileAsset.VoiceTriggerAssetsIPad
com.apple.MobileAsset.VoiceTriggerHSAssetsIPad
com.apple.MobileAsset.VoiceTriggerAssetsWatch
com.apple.MobileAsset.VoiceTriggerHSAssetsWatch
com.apple.MobileAsset.VoiceTriggerAssetsMarsh
com.apple.MobileAsset.VoiceTriggerAssetsMac
com.apple.MobileAsset.VoiceTriggerAssetsTV
com.apple.MobileAsset.VoiceTriggerHSAssets
com.apple.corespeech
Framework
en_US_POSIX
yyyyMMdd-HHmmss
CSLogInitIfNeeded_block_invoke
Unknown
com.apple.ssr
SSRLogInitIfNeeded_block_invoke
corespeech.json
assets.json
speakerRecognition.json
adBlockerPayload.bin
mitigation.json
hybridendpointer.json
hybridendpointer_marsh.json
/System/Library/PrivateFrameworks/CoreSpeechDarwin.framework
PrivateFrameworks/CoreSpeech.framework
+[CSAsset fallBackAssetResourcePath]
defaultFallbackHearst
defaultFallbackAdBlocker
-[CSAsset initWithResourcePath:configFile:configVersion:assetProvderType:]
+[CSAsset decodeJson:]
-[CSAsset getNumberForKey:category:default:]
-[CSAsset getStringForKey:category:default:]
-[CSAsset getValueForKey:category:]
configVersion:%@ resourcePath:%@ path:%@
MobileAssets
Trial
+[CSAsset isLeftConfigVersion:newerThanRightConfigVersion:]
Premium
%@_%@
nohash
((?:[a-z]|[0-9])*)\.asset
-[CSAsset assetHashInResourcePath:]
%02x
-[CSReusableBufferBackingStore configureWithBytes:length:]
CSInitialContinousZeros
CSMaxContinousZeros
CSMidSegmentContinousZeros
start
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
best_phrase
early_warning
is_rescoring
CSOSTransactionStat
-[CSOSTransactionStat reportCreation]_block_invoke
-[CSOSTransactionStat reportDestroy]_block_invoke
+[CSUtils(Security) checkEntitlementForToken:withEntitlement:]
+[CSUtils(Security) getTokenFromDictionary:withTokenKey:]
com.apple.da
liveOnHomePod
DeviceClassNumber
IsVirtualDevice
CSIsVirtualMachine_block_invoke
U+73bmG4kBGj6kpreQXUTQ
DeviceSupportsUSBTypeC
InternalBuild
CSResourcePathInSystemDomainMaskByAppending
CSSafeSetOutErrorWithNSError
+N9mZUAHooNvMiQnjeTJ8g
PTQ+ABwag03BwO/CKvIK/A
+[CSUtils isIOSDeviceSupportingBargeIn]_block_invoke
BuildVersion
IOPlatformExpertDevice
+[CSUtils deviceHwRevision]
config-number
yyyyMMdd
Siri
BluetoothFeatures
AnnounceTelephony
hang_up
RingtoneOverA2DP
CoreSpeech
support_js
+[CSUtils(AudioDevice) isHeadphoneDeviceWithRecordRoute:playbackRoute:]
+[CSUtils(AudioDevice) isBluetoothAudioDeviceConnected]
BTDetails_IsHFPRoute
+[CSUtils(AudioDevice) isBluetoothVehicleOutput]
+[CSAudioRecordContext defaultContext]
CSAudioRecordTypeUnspecified
CSAudioRecordTypeHomePress
CSAudioRecordTypeWiredHeadsetButtonPress
CSAudioRecordTypeBluetoothHeadSetButtonPress
CSAudioRecordTypeUIButtonPress
CSAudioRecordTypeServerInvoke
CSAudioRecordTypeVoiceTrigger
CSAudioRecordTypeStark
CSAudioRecordTypeTVRemote
CSAudioRecordTypeRaiseToSpeak
CSAudioRecordTypeHearstDoubleTap
CSAudioRecordTypeHearstVoice
CSAudioRecordTypeJarvis
CSAudioRecordTypePost
CSAudioRecordTypeDictation
CSAudioRecordTypeVoiceTriggerTraining
CSAudioRecordTypeOpportuneSpeaker
CSAudioRecordTypeOpportuneSpeakerListenerWithCall
CSAudioRecordTypeRemoraVoice
CSAudioRecordTypeRemoraButton
CSAudioRecordTypeDarwinVoice
CSAudioRecordTypeUnknown
recordType[%@] deviceId[%@] turnIdentifier[%@] alwaysUseBuiltInMic[%d] isRequestDuringActiveCall[%d] triggerEventInfo[%@] spokenNotification [%d]
type
alwaysUseRemoteBuiltInMic
deviceId
isRequestDuringActiveCall
triggerEventInfo
turnIdentifier
isSpokenNotification
samples_at_fire
start_sample_count
-[CSKeywordAnalyzerNDAPI initWithConfigPath:resourcePath:]
-[CSKeywordAnalyzerNDAPI _setStartAnalyzeTime:]
threshold_normal
-[CSKeywordAnalyzerNDAPI getThreshold]
threshold_logging
-[CSKeywordAnalyzerNDAPI getLoggingThreshold]
threshold_reject_logging
-[CSKeywordAnalyzerNDAPI getRejectLoggingThreshold]
CSSampleCountHostTimeConverter
Serial CSPolicy queue
triggerEndSeconds
triggerFireSeconds
earlyDetectFiredMachTime
triggerStartMachTime
triggerEndMachTime
triggerFireMachTime
twoShotAudibleFeedbackDelay
firstPassTriggerSource
Darwin
CSDarwinVoiceTriggerEventInfoProvider
CSUncompressedAudioLogging
-[CSUncompressedAudioLogging prepareLogging]_block_invoke
-[CSUncompressedAudioLogging _prepareFileForLogging]
%.0f
%.6f
-[CSUncompressedAudioLogging _setupFilePath]
%@_%@_%@.pcm
%@_%@_%@.plist
-[CSUncompressedAudioLogging appendAudioData:]_block_invoke
-[CSUncompressedAudioLogging _createFileDescriptor:protectionClass:]
interactionIdentifier
samplingTimestamp
language
samplingRate
-[CSUncompressedAudioLogging _writePlistFile]
deque
-[CSAudioChunk chunkForChannel:]
v24@?0^v8Q16
-[CSAudioChunk subChunkFrom:numSamples:forChannel:]
-[CSAudioChunk subChunkFrom:numSamples:]
-[CSAudioChunk copySubAudioChunkFrom:numSamples:to:dstBufferSize:]
-[CSAudioChunk splitAudioChunkSuchThatNumSamplesReceivedSoFar:reachesACountOf:completionHandler:]
numSamples
sampleByteDepth
startSampleCount
hostTime
arrivalHostTimeToAudioRecorder
wasBufferedAudio
data
remoteVAD
-[CSAudioCircularBuffer initWithNumChannels:recordingDuration:samplingRate:audioTimeConverter:]
-[CSAudioCircularBuffer copySamplesFromHostTime:]
-[CSAudioCircularBuffer copySamplesFrom:to:]
-[CSAudioCircularBuffer copySamplesFrom:to:channelIdx:]
-[CSAudioCircularBuffer copybufferFrom:to:]
-[CSAudioCircularBuffer copyBufferWithNumSamplesCopiedIn:]
-[CSAudioCircularBuffer reset]
copySamples
phrase
name
Hey Siri
threshold
2ndChanceThreshold
loggingThreshold
ndapiScaleFactor
recognizerThresholdOffset
recognizerScoreScaleFactor
preTriggerSilenceOffset
recognizerToken
hey_Siri
twoShotFeedbackDelayPhatic
twoShotFeedbackDelayPhaticRemora
twoShotFeedbackDelayBeep
rejectLoggingThreshold
phsRejectLoggingThreshold
kCSFSelfLoggingMHUUID
kCSFSelfLoggingSecondPassResult
-[CSFVoiceTriggerEventInfoSelfLogger logStartEventWithFirstPassStartedInfo:withMHUUID:]
CSFVoiceTriggerEventInfoSelfLogger.m
-[CSFVoiceTriggerEventInfoSelfLogger logTriggerEventWithVTEI:withMHUUID:]
-[CSFVoiceTriggerEventInfoSelfLogger logRejectEventWithVTEI:withMHUUID:withSecondPassResult:]
-[CSFVoiceTriggerEventInfoSelfLogger logCancelledEventWithMHUUID:]
-[CSFVoiceTriggerEventInfoSelfLogger logTwoShotEndEventWithSuppresedAlert:withTimedOut:withMHUUID:]
-[CSFVoiceTriggerEventInfoSelfLogger logTwoShotStartEventWithPromptType:withMHUUID:]
-[CSFVoiceTriggerEventInfoSelfLogger logTwoShotDetectedWithMHUUID:]
-[CSFVoiceTriggerEventInfoSelfLogger logSiriLaunchStartedWithVoiceTriggerEventInfo:]
-[CSFVoiceTriggerEventInfoSelfLogger logSiriLaunchCompletedWithVoiceTriggerEventInfo:]
%@-%@
-[CSOSTransaction initWithDescription:]
-[CSOSTransaction dealloc]
continuousVoiceTrigger
configFileNDAPI
twoShotThreshold
twoShotDecisionWaitTime
voiceTriggerPhraseIds
silencePhraseIds
config.txt
config_marsh.txt
self.integerValue
+[CSFTimeUtils hostTimeFromSampleCount:anchorHostTime:anchorSampleCount:sampleRate:]
+[CSFTimeUtils sampleCountFromHostTime:anchorHostTime:anchorSampleCount:sampleRate:]
+[CSFTimeUtils macHostTimeFromBridgeHostTime:]
i32@?0^I8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16^^{AudioStreamPacketDescription}24
-[CSPlainAudioFileWriter initWithURL:inputFormat:outputFormat:]
-[CSPlainAudioFileWriter addSamples:numSamples:]
json
yyyy_MM_dd-HHmmss.SSS
productType
productVersion
buildVersion
-[CSPlainAudioFileWriter addContextKey:withContext:]
-SL.json
-[CSPlainAudioFileWriter createAcousticMetaFileForContext:withContext:]
-[CSPlainAudioFileWriter addContextKey:fromMetaFile:]
+[CSPlainAudioFileWriter saveAudioChunck:toURL:]
com.apple.voicetrigger
com.apple.voicetrigger.notbackedup
kCSPreferencesJarvisTriggerModeDidChangeDarwinNotification
VoiceTrigger Enabled
Phrase Detector Enabled
VoiceTriggerEverUsed
AttentiveSiri AudioLogging Enabled
-[CSFPreferences isAttentiveSiriAudioLoggingEnabled]
Enable Two Shot Notification
Attending Timeout
-[CSFPreferences getAttendingTimeoutConfig]
com.apple.demo-settings
StoreDemoMode
HomePod
Mosquito
Adaptive Siri Volume Disabled
File Logging Level
/var/mobile
Library
Logs/CrashReporter/VoiceTrigger/audio/
VoiceTrigger/nearmiss/audio/
/Logs/CrashReporter/Assistant/MHLog/
VoiceTrigger/RemoteP2PLogs/
RemoteGradingData/
/Logs/CrashReporter/Assistant/smartSiriVolumeContextAwareLogs/
Logs/CrashReporter/Assistant/smartSiriVolumeContextAwareLogs/
-[CSFPreferences getSSVLogFilePathWithSessionIdentifier:]
/tmp
%@/SSV_%@.json
VoiceTrigger/TrialAssetData
/Logs/CrashReporter/Assistant/
SpeechLogs
-[CSFPreferences assistantAudioFileLogDirectory]
VoiceTrigger
siriBC
Second Pass Audio Logging Enabled
Speaker Recognition Audio Logging Enabled
Personalized Siri Enrollment Audio Logging Enabled
Jarvis Audio Logging Enabled
Jarvis Trigger Mode
Enable SoS Audio Logging
Force VoiceTrigger AP Mode
-[CSFPreferences forceVoiceTriggerAPMode]_block_invoke
Force VoiceTrigger AOP Mode
-[CSFPreferences forceVoiceTriggerAOPMode]_block_invoke
RemoraDevices
@"NSMutableDictionary"16@?0@"NSMutableDictionary"8
Accessory Media Playback Status
Accessory Media Playback Interrupted Time
Accessory Alarm Playback Status
Accessory Timer Playback Status
com.apple.corespeech.CSPreferencesSetValueForKey
mobile
com.apple.corespeech._CSNotBackedupPreferencesSetValueForKey
Logs/CrashReporter/CoreSpeech/sos/
-[CSFPreferences getStartOfSpeechAudioLogFilePath]
yyyyMMdd_HHmmss.SSS
%@/%@
Remote VoiceTrigger Delay
Remote VoiceTrigger Endpoint Timeout
VoiceTrigger/interstitial
Myriad File Logging Enabled
Audio Injection Enabled
Programmable Audio Injection Enabled
Speex Audio Injection Enabled
-[CSFPreferences enableAudioInjection:withKey:]
-[CSFPreferences audioInjectionEnabledWithKey:]_block_invoke
-[CSFPreferences setAudioInjectionFilePath:]
Audio Injection File Path
-[CSFPreferences audioInjectionFilePath]
-[CSFPreferences audioInjectionFilePath]_block_invoke
v32@?0@8Q16^B24
SpeakerId Enabled
SpeakerId Score Type
SmartSiriVolume SoftVolume Enabled
Adaptive Siri Volume State Intent Time
Adaptive Siri Volume State Intent Valid For Seconds
Adaptive Siri Volume State Permanent Offset Enabled
Adaptive Siri Volume State Permanent Offset Factor
Adaptive Siri Volume State Intent Type
Audio Session Activation Delay
Max Number Logging Files
Max Number Grading Files
Enable SiriActivation HomePod
Enable SiriActivation watchOS
Overwrite Remote VAD Score
Hearst First Pass Model Version
Hearst Second Pass Model Version
Hearst Fake Model Path
VoiceTrigger Companion Sync Enabled
Enable OpportuneSpeakListener Bypass
Bypass Personalized HeySiri
MultiPhraseVTEnabled
MultiChannelAudioLoggingEnabled
Enable AdBlocker Audio Logging
Enable Self Trigger Audio Logging
Adaptive Siri Volume State Intent Volume
Adaptive Siri Volume State Latest Volume Time
Adaptive Siri Volume State Latest Volume
-[CSFPreferences getASVUserIntent:]
-[CSFPreferences setSiriLanguageCodeDarwin:]
Siri Language Code Darwin
-[CSFPreferences languageCodeDarwin]
Remote Darwin Ever Connected
Idle User Prevent Sleep Assertion Acquition Time
Enable P2P Transfer
Enable Reduced PHS Threshold
Enable Model Benchmarking
NearMissAudioLoggingLevel
Endpoint Enhanced Logging
Endpoint Asset Overriding Enabled
Endpoint Asset Overriding File Path
Endpoint Asset Bypass Trial Enabled
VoiceTrigger Asset Overriding File Path
Mitigation Asset Overriding File Path
Bypass Trial Assets
-[CSFPreferences setSelfTriggerEnabledGibraltar:]
-[CSFPreferences isSelfTriggerEnabledGibraltar]
Enable VoiceTrigger Mlock
Bypass SpeakerId based Mitigation
SpeakerID Score Override Map
First Pass Debug
Force Mitigate For HybridSDSD
Power Logging Current Asset Config Version
Power Logging Current Language
beepLocation
statsComputed
beepPower
signalPower
originalPower
absMaxVal
above95pcOfMax
totalInputSamples
totalOutputSamples
jbl_begin.bin
-[CSBeepCanceller init]
-[CSBeepCanceller willBeep]
-[CSBeepCanceller reset]
voiceTriggerFirstPass
delaySecondsForChannelSelection
masterChannelScoreBoost
processingChunkSeconds
processingChannelsBitset
+[CSVoiceTriggerFirstPassConfigDecoder decodeConfigFrom:]
-[CSFRangeUtils initWithStartPoint:endPoint:]
-[CSFRangeUtils hasIntersectionWithRange:]
Dispose Log Queue
+[CSUtils(Directory) removeLogFilesInDirectory:matchingPattern:beforeDays:]_block_invoke
v24@?0@"NSArray"8^@16
+[CSUtils(Directory) clearLogFilesInDirectory:matchingPattern:exceedNumber:]_block_invoke_2
+[CSUtils(Directory) clearLogFilesInDirectory:matchingPattern:exceedNumber:]_block_invoke
+[CSUtils(Directory) loggingFilePathWithDirectory:token:postfix:]
%@-%@.%@
+[CSUtils(Directory) _createLoggingDirectoryIfNeeded:]
Unable to get %@ for file at %@: %@
q24@?0@"NSURL"8@"NSURL"16
B24@?0@"NSURL"8@"NSDictionary"16
+[CSUtils(Directory) _contentsOfDirectoryAtURL:matchingPattern:includingPropertiesForKeys:error:]
assetDownloadfailed
assetFetchfailed
VoiceId
satinitfailed
satmodelfilefailed
satvectorfailed
tdsrfailed
tdsrtimeout
retrainsatfailed
explicituttrejected
toolessaudiofiles
unrecognizedmetadata
delayedscores
missinghomeidforclouduser
voiceidstaleprofiledetected
Audio
didStartWatchDogFire
didStopWatchDogFire
audioDeliveryWatchDogFire
streamDeallocDuringStreaming
resourceNotAvailable
recordStoppedBySessionInterruption
recordStoppedByMixedSessionInterruption
InsufficientPriority
audioCodecError
hardwareConfigurationChanged
speechStopFailure
speechPrepareFailure
speechStartFailure
hardwareRemoved
noHardwareError
noRouteAvailable
secondPassCompleteWatchDogFire
APLeak
APStuckInTransition
launchSlow
Endpointer
endpointerModelVersionIsNil
Ures
requestRCNotFound
SiriPower
consectutiveFalseFirstPassTriggers
remoteCoreSpeech
remoteCoreSpeechSubtypeStartAudioRecordingFailed
-[CSPhraseDetector dealloc]
-[CSPhraseDetector setRunAsSecondChance:]
-[CSPhraseDetector reset]
-[CSPhraseDetector setConfig:]
enabled
disabled
-[CSPhraseDetector _phraseDetectorResultFromNDAPIResults:quasarResult:forceMaximized:]
-[CSPhraseDetector _getResultWithPhId:phraseDetectorInfo:ndapiResult:quasarResult:forceMaximized:]
-[CSPhraseDetector _resultCopyWithKeywordDetectorDecision:bestPhId:phraseResult:]
Dictation
triggerConfidence = %lf
-[CSSyncKeywordAnalyzerQuasar initWithConfigPath:triggerTokensArray:preventDuplicatedReset:memoryLock:]
-[CSSyncKeywordAnalyzerQuasar reset]
-[CSSyncKeywordAnalyzerQuasar getResultsFromFlushedAudio]
-[CSSyncKeywordAnalyzerQuasar getAnalyzedResultsFromAudioChunk:]
-[CSSyncKeywordAnalyzerQuasar _getAnalyzedResults:]
+[CSSyncKeywordAnalyzerQuasar dumpEARSpeechRecognitionResults:]
-[CSAudioZeroCounter getZeroStatisticsFromBuffer:entireSamples:]
-[CSAudioZeroCounter stopCountingZeroStatisticsWithReporter:]
com.apple.transcribe.Transcriber
-[CSKeywordAnalyzerQuasar initWithConfigPath:triggerTokens:useKeywordSpotting:]
-[CSKeywordAnalyzerQuasar initWithConfigPath:triggerTokens:useKeywordSpotting:]_block_invoke
-[CSKeywordAnalyzerQuasar reset]
-[CSKeywordAnalyzerQuasar dealloc]
-[CSKeywordAnalyzerQuasar runRecognition]
-[CSKeywordAnalyzerQuasar runRecognition]_block_invoke
-[CSKeywordAnalyzerQuasar endAudio]
-[CSKeywordAnalyzerQuasar endAudio]_block_invoke
-[CSKeywordAnalyzerQuasar _recognizeWavData:length:]
-[CSKeywordAnalyzerQuasar speechRecognizer:didRecognizePartialResult:]_block_invoke
-[CSKeywordAnalyzerQuasar speechRecognizer:didRecognizeFinalResults:]_block_invoke
-[CSKeywordAnalyzerQuasar _phIdToCtcScoreMap]
-[CSKeywordAnalyzerQuasar speechRecognizer:didFinishRecognitionWithError:]_block_invoke
-[CSKeywordAnalyzerQuasar _getConfidence:]_block_invoke
v32@?0@"_EARSpeechRecognitionToken"8Q16^B24
OPP-
PCM-
OPUS_
Ads-
PHS-
OSD-
-synced
com.apple.CoreSpeech.AudioLogging
+[CSAudioFileManager generateDeviceAudioLogging:speechId:]_block_invoke
FLLR
+[CSAudioFileManager _readDataFromFileHandle:toFileHandle:]
%@%@.wav
%@/%@%@%@.wav
%@/%@%@.wav
+[CSAudioFileManager _createAudioFileWriterForAdBlockerWithLoggingDir:inputFormat:outputFormat:withAccessoryID:]
+[CSAudioFileManager _createAudioFileWriterForOpportuneSpeakListenerWithLoggingDir:inputFormat:outputFormat:]
+[CSAudioFileManager _createAudioFileWriterWithLoggingDir:withLoggingUUID:inputFormat:outputFormat:]
+[CSAudioFileManager _createAudioFileWriterForPHSTrainingWithLoggingDir:inputFormat:outputFormat:]
+[CSAudioFileManager _createAudioFileWriterForOSDWithLoggingDir:inputFormat:outputFormat:]
^%@*
%@(%@)?.wav$
+[CSAudioFileManager cleanupOrphanedGradingFiles]
+[CSAudioFileManager cleanupOrphanedGradingFiles]_block_invoke
v32@?0@"NSString"8@"NSURL"16^B24
attsiri
+[CSAudioFileManager audioFileWriterForAttentiveSiri]
%@.wav
CSFVoiceTriggerEventInfoSelfLoggerDarwin Queue
event
startVoiceTrigger
stopVoiceTrigger
HeySiriEnabled
Language
ModelVersion
languageCode
resourcePath
configVersion
assetHash
CSRemoteAssetManager
en-US
-[CSRemoteAssetManager _loadPreinstalledAssetMetaIfNeeded]
preinstalledMeta.json
VoiceTrigger/assetMeta.json
-[CSRemoteAssetManager _writeToJsonFile:]
-[CSRemoteAssetManager _loadJsonDataFromFile:]
-[CSRemoteAssetManager setLanguageCode:resourcePath:configVersion:assetHash:assetType:]
-[CSSelectiveChannelAudioFileWriter initWithURL:inputFormat:outputFormat:channelBitset:]
v16@?0Q8
-[CSSelectiveChannelAudioFileWriter addSamples:numSamples:]
%@ {backingStoreCapacity = %tu (bytes), minimalNumberOfBackingStores = %tu, maximumNumberOfBackingStores = %tu, backingStoreIdleTimeout = %f (seconds)}
-[CSDispatchGroup leave]
voiceTriggerSecondPass
voiceTriggerSecondPassAOP
voiceTriggerSecondPassAP
voiceTriggerSecondPassHearst
voiceTriggerSecondPassJarvis
voiceTriggerSecondPassRemora
voiceTriggerSecondPassPlus
voiceTriggerSecondPassDuringRingtone
voiceTriggerSecondPassDuringConnectedCall
preTriggerAudioTime
analyzerPrependingAudioTime
analyzerTrailingAudioTime
configFileRecognizer
recognizer.json
useKeywordSpotting
remoteVADThreshold
minimumPhraseLengthForVADGating
remoteVADMyriadThreshold
secondPassShadowMicScoreThresholdForVADGating
phrasesToSkipBoronDecisionMaking
%s Requested audioTimeConverter on invalid streamHandleId
%s invalid packets
%s ::: CoreSpeech logging initialized (%s)
%s ::: SSR logging initialized (%s)
%s Fallback asset resource path : %{public}@
%s %{public}@
%s Cannot find corespeech asset from resourcePath : %{public}@
%s Configuration file is not exists : %{public}@
%s Cannot read configuration file : %{public}@
%s Cannot decode configuration json file : %{public}@
%s Configuration json file is not expected format
%s Cannot access to %{public}@ %{public}@ using default value=%{public}@
%s Cannot access to %{public}@ %{public}@
%s Comparing %{public}@ with %{public}@
%s Invalid rightConfig syntax : %{public}@
%s Invalid leftConfig syntax : %{public}@
%s Not comparable with %{public}@, ignore
%s Failed to create regular expression : %{public}@
%s Failed to allocate buffer since length zero
%s Failed to allocate buffer since length is larger than configuration
%s NumTransactionNow = %d
%s Entitlement was nil. We will assume process is not entitled.
%s Attempting to check %@ for entitlement: %@
%s Error creating audit token for: %@
%s Warning SecTaskCopyValueForEntitlement failed for token %@ with error (%ld)
%s Error Issue retrieving entitlement
%s Token dict: %@ and tokenString: %@ both must be non nil
%s isVirtualMachine ? %{public}@
%s Resource path %@ is not founded in system domain mask, returning nil path
%s More than 1 path %@ are founded in system domain mask, returning the last one as default
%s ERR: %{public}@
%s Device supporting barge-in ? %{public}@
%s Failed to find matching service to IOPlatformExpertDevice
%s Fetched hardware revision : %{public}@
%s Failed to find property "config-number"
%s Record route = %{public}@, playback route = %{public}@
%s Device endpointType = %{public}lu
%s hypotheticalRoute = %{public}@
%s Audio route changing to HFP is expected
%s default to recordContext : %{public}@
%s NDAPI initialization failed
%s set StartAnalyzeSampleCount = %{public}lld
%s NDAPI config doesn't contain threshold_normal
%s NDAPI config doesn't contain threshold_logging
%s NDAPI config doesn't contain threshold_reject_logging
%s Assistant Sampling: uncompressed audio logging will be enabled for this Siri request
%s Assistant Sampling: uncompressed audio logging will be disabled for this Siri request
%s Assistant Sampling: Unable to create FD on audioFilePath : (%{public}@)
%s Assistant Sampling: Failed to create directory : %@
%s Assistant Sampling: Unable to writeData : %{public}@
%s Assistant Sampling: Creating logging file : %@
%s Assistant Sampling: Failed to serialize plistRoot into plist : %{public}@
%s Failed to create FD for plist file
%s channelId %d out of bound %d
%s Cannot generate subChunk since channel(%{public}tu) is larger than number of channels(%{public}tu)
%s Cannot generate subChunk if it reuqest more than it has : %{public}tu %{public}tu %{public}tu
%s Unable to write subChunk into dstBufferSize(%d) : required buffer size (%d)
%s SpkrId:: Processing ended at: numSamplesProcessed=%lu, totalSampleCountToReach=%lu
%s numChannels: %{public}lu, recordingDuration: %{public}f, sampleRate: %{public}f
%s Cannot copy samples since this is empty
%s Could NOT copyFrom: %{public}lu to: %{public}lu, retSampleCount: %{public}lu
%s copyBuffer: oldestSample: %{public}lu latestSample: %{public}lu, numSamplesCopied: %{public}lu
%s CSAudioCircularBuffer.reset
%s Invalid request: reqStartSample=%{public}lu, reqEndSample=%{public}lu, oldestSampleInBuffer: %{public}lu, latestSampleInBuffer=%{public}lu
%s Creating OS Transaction for %{public}@
%s Release OS Transaction for %{public}@
%s Delta is larger than anchorHostTime: anchorSampleCount = %{public}lld, sampleTime = %{public}lld, anchorHostTime = %{public}lld
%s Delta is larger than anchorSampleCount
%s Not supported on this platform
%s ::: Error creating output file %{public}@, err: %{public}d
%s ::: Error writing to output wave file. : %{public}ld
%s metaInfo passed is nil - Bailing out
%s Unable to read data from file: %@
%s Could not read existing %@ file: err: %@
%s ERR: Failed to create json %{public}@ with %{public}@
%s saveAudioChunk toURL: %{public}@
%s Invalid request: nothing to write to file
%s enabled:%u
%s attendingTimeout: %f
%s Couldn't create SSV log directory at path %{public}@ %{public}@
%s Couldn't create speech log directory at path %{public}@ %{public}@
%s Force enabling VoiceTrigger AP mode ? %{public}@
%s Force enabling VoiceTrigger AOP mode ? %{public}@
%s Couldn't create SoS log directory at path %{public}@ %{public}@
%s enableAudioInection: is only available on internal builds
%s enabled: %@
%s setAudioInjectionFilePath: is only available on internal builds
%s kCSAudioInjectionFilePathKey is not array type
%s kCSAudioInjectionFilePathKey array size = %d
%s kCSAudioInjectionFilePathKey doesn't have NSString as an array entry
%s Adaptive Siri Volume failed to load user intent type. Ignoring intent
%s Adaptive Siri Volume failed to load user intent time. Ignoring intent
%s Adaptive Siri Volume failed to load user intent volume. Ignoring intent
%s Adaptive Siri Volume failed to load latest volume time. Ignoring intent
%s Adaptive Siri Volume failed to latest volume. Ignoring intent
%s Adaptive Siri Volume failed to load permanent offset status. Defaulting to no permanent volume offset
%s Adaptive Siri Volume failed to load permanent offset factor. Defaulting to unity permanent volume offset factor
%s Loaded Adaptive Siri Volume intentType: %{public}llu, intentTime: %{public}llu, intentVolume: %{public}f, latestVolumeTime: %{public}lld, latestVolume:%{public}f, permanentOffsetIsEnabled: %{public}d, permanentOffsetFactor: %{public}f
%s Called in unexpected platform!
%s BeepCanceller asset file loading from : %{public}@
%s Could not read beep file: %@
%s beepVector Size = %{public}lu
%s Cannot initialize beep canceller
%s Beep canceller initialized with maxNumSamples = %{public}d
%s It will beep now
%s Reset beep cancellation
%s Loading 1stPass-config=%@
%s Invalid input : startPoint = %{public}llu, endPoint = %{public}llu
%s Invalid input range
%s CS logging files under %{public}@ created before %{public}@ will be removed.
%s Couldn't get creation date: %{public}@
%s Could not remove %{public}@: %{public}@
%s CS logging files number %{public}lu with pattern %{public}@ under %{public}@ exceeding limit, only keep the latest %{public}lu ones
%s Invalid token or postfix
%s Invalid log directory
%s Couldn't create logging directory at path %{public}@ %{public}@
%s Regular expression is nil!
%s Directory URL is nil!
%s CSPhraseDetector Deallocated
%s Using second chance threshold for voice trigger second pass: %{public}f
%s Failed to fetch config
%s Invalid assets config!
%s VoiceTrigger memory lock %@
%s Reset all thresholds to HUGE_VALF since NDAPI is nil
%s Using threshold from NDAPI since we are not able to use Quasar, threshold = %{public}f, logging threshold = %{public}f
%s Unable to process due to number of result mismatch, ndapiResults number = %d
%s Received invalid result with %tu
%s Phrase detector results fall-into unexpected use case
%s [(%lu)] : NDAPI second pass best score = %{public}f with analyzed samples:                   %{public}tu with quasar score = %{public}f, ndapi scale factor = %{public}f, quasar scale factor = %{public}f
%s [(%tu)] : Trigger detected with %{public}tu analyzed samples in NDAPI,                   combined score = %{public}lf, effective threshold = %{public}f
%s [(%tu)] : Detected near miss at %{public}lu samples                       with best score up to: %{public}.3f
%s [(%tu)] : Waiting for logging near miss                               until timeout %{public}lu samples
%s [(%tu)] : Detected near miss candidate at %{public}tu,                       let's wait %{public}tu samples to log
%s [(%tu)] : Notify second pass reject at: %{public}tu                   with best score up to: %{public}.3f
%s Reporting decision (%tu) from (%tu)
%s Initializing Quasar with config: %{public}@
%s Failed initialization in _EARSyncSpeechRecognizer initWithConfiguration
%s ERR: Exception initializing _EARSyncSpeechRecognizer: %{public}s
%s Speech model loading took %{public}.3fms
%s endAudio failed
%s processAudioChunk failed
%s Invalid token : %{public}@
%s %tu, token = %{public}@
%s Unable to handle: %d
%s Res-%lu: 
%s tok=%@
%s In %@: Continuous digital zero detected, lasting %{public}u samples per channel
%s In %@: Continuous digital zero in this audio chunk detected, lasting %{public}u samples per channel
%s Transcriber trigger token list: %{public}@
%s runRecognition failed
%s recognizeWavData failed
%s Partial result confidence: %{public}f
%s CTC: Adding tok=%{public}@
%s CTC: Ignoring tok=%{public}@
%s MpVT: phId=%{public}@, tok=%{public}@
%s ERROR: %{public}s
%s CTC: Final-tok: %@(%f):%@
%s Final result confidence: %{public}f
%s EAR Token[%{public}lu]: %s (%{public}f)
%s Plan removing the temp file %{public}@
%s Failed to remove temp file %{public}@ reason: %{public}@
%s Start copying %{public}u bytes of data to crashreporter with wav file header offset %{public}llu
%s Failed to read data from %{public}@
%s Finished copying data to crashreporter.
%s Logging audio file into : %{public}@
%s ERR: reading contents of gradingDir: %{public}@ with error %{public}@
%s Deleting orphaned grading file %{public}@
%s ERR: Failed to delete %{public}@ with error %{public}@
%s Removing non-dir at AttentiveSiri AudioLog dir: %@
%s Error removing %@: err: %@
%s Failed to create AudioLogging directory for AttentiveSiri: %@
%s Created AudioLogging dir for AttentiveSiri at: %@
%s Skip reload assets, already up-to-date
%s preinstalled model meta not found : %{public}@
%s Invalid rawRemoteAssetMeta : %{public}@
%s Cannot create json file : %{public}@
%s Creating directory : %{public}@
%s Cannot remove asset meta file : %{public}@, %{public}@
%s Remote asset file is not exists : %{public}@
%s LanguageCode : %{public}@, resourcePath : %{public}@, configVersion : %{public}@, assetHash : %{public}@
%s unbalanced dispatch_group_enter and leave : ignore we are ignore dispatch_group_leave
CSKeywordAnalyzerNDEAPIResult
CSKeywordAnalyzerNDEAPI
CSSinglePhraseResult
NSCopying
CSVoiceTriggerAirPodWearerDetectionConfig
CSAudioTimeConverterPool
CSVoiceTriggerFirstPassConfig
CSAudioChunkForTV
CSMobileAssetVersions
CSAsset
CSVoiceTriggerSecondPassConfig
CSVTUITrainingSelfLogger
CSVoiceTriggerPhraseConfig
CSReusableBufferBackingStore
CSReusableSharedMemoryBackingStore
CSReusablePrivateMemoryBackingStore
CSAudioZeroFilter
CSNovDetectorResult
CSNovDetector
CSOSTransactionStat
CSFAudioMetricsSelfLogger
CSAudioPlayingAppMonitor
Security
CSUtils
AudioDevice
CSAudioRecordContext
CSADPPreventStandbyAssertion
CSKeywordAnalyzerNDAPIResult
CSKeywordAnalyzerNDAPI
CSAudioTimeConverter
CSPolicy
CSEventMonitorDelegate
NSObject
CSDarwinVoiceTriggerEventInfoProvider
CSUncompressedAudioLogging
CSAudioChunk
CSAudioCircularBuffer
CSAudioPlayingApp
CSVoiceTriggerPhraseConfigDecoder
CSConfig
CSFVoiceTriggerEventInfoSelfLogger
CSOSTransaction
CSContinuousVoiceTriggerConfigDecoder
CSFTimeUtils
CSAudioDecoder
CSPlainAudioFileWriter
CSAudioFileWriter
CSFPreferences
CSBeepCanceller
CSVoiceTriggerFirstPassConfigDecoder
CSPowerAssertionAccessory
CSFRangeUtils
Directory
CSDiagnosticReporter
CSAudioPowerMeter
CSPhraseDetector
CSFVoiceTriggerEventInfoSelfLoggerEmbedded
CSSyncKeywordAnalyzerQuasarResult
CSSyncKeywordAnalyzerQuasar
CSAudioZeroCounter
CSContinuousVoiceTriggerConfig
CSKeywordAnalyzerQuasar
_EARSpeechRecognitionResultStream
CSPhraseDetectorInfo
CSReusableBufferPool
CSAudioFileManager
CSFCircularEventsCacheBuffer
CSFVoiceTriggerEventInfoSelfLoggerDarwin
CSPowerLogger
CSRemoteAssetManager
CSSelectiveChannelAudioFileWriter
CSReusableBufferPoolConfiguration
CSFLPCMTypeConverter
CSDispatchGroup
CSFAudioStreamBasicDescriptionFactory
CSVoiceTriggerSecondPassConfigDecoder
setPermanentOffsetIsEnabled:
defaultManager
dataWithCapacity:
arrayWithObject:
opportuneSpeakingFileLoggingIsEnabled
URLByDeletingPathExtension
enumerateObjectsUsingBlock:
userIntentType
dataWithContentsOfFile:
outputs
siriDataSharingOptInStatus
resetWithSamplingRate:language:taskType:userId:sessionId:deviceId:farField:audioSource:maxAudioBufferSizeSeconds:
containsObject:
arrayWithObjects:
URLWithString:
absoluteString
userIntentValidForSeconds
_cs_initWithXPCObject:
arrayWithObjects:count:
lastObject
dataWithContentsOfFile:options:error:
getNumElementInBitset:
addAudioSamples:count:
lastPathComponent
containsString:
userIntentVolume
bundleForClass:
setDateFormat:
_cs_xpcObject
dataWithJSONObject:options:error:
contentsOfDirectoryAtPath:error:
fileExistsAtPath:
UTF8String
initWithBytes:length:
sortedArrayUsingComparator:
latestVolume
resultsWithAddedAudio:numberOfSamples:taskName:
bundlePath
dataWithLength:
peakValueSinceLastCall
UUID
fileExistsAtPath:isDirectory:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
initWithBytesNoCopy:length:deallocator:
resultsWithAddedFloatAudio:numberOfSamples:taskName:
valueForKeyPath:
latestVolumeTime
dataWithPropertyList:format:options:error:
permanentOffsetFactor
addObject:
UUIDString
numberOfMatchesInString:options:range:
length
regularExpressionWithPattern:options:error:
resultsWithEndedAudio
initWithCapacity:
date
permanentOffsetIsEnabled
numberOfRanges
addObserver:
localeWithLocaleIdentifier:
dateWithTimeIntervalSinceNow:
isDictationOnSRDEnabled
caseInsensitiveCompare:
getResourceValue:forKey:error:
string
numberWithBool:
runRecognitionWithResultStream:
localizedDescription
setSawInfinity:
weakObjectsHashTable
copy
stringByAppendingPathComponent:
fileURLWithPath:
numberWithDouble:
writeData:
characterSetWithCharactersInString:
setSawNotANumber:
dictionaryWithCapacity:
isEqualToString:
numberWithFloat:
systemUptime
stringByAppendingString:
longLongValue
filteredArrayUsingPredicate:
writeData:error:
dictionaryWithDictionary:
numberWithInt:
audioDecoderDidDecodePackets:audioStreamHandleId:buffer:remoteVAD:timestamp:arrivalTimestampToAudioRecorder:wasBuffered:receivedNumChannels:
firstMatchInString:options:range:
dictionaryWithObjects:forKeys:count:
stringByDeletingLastPathComponent
writeToFile:atomically:
removeAllObjects
pickedRoute
timeIntervalSince1970
firstObject
numberWithInteger:
stringByDeletingPathExtension
distantFuture
removeItemAtPath:error:
count
setLatestVolume:
stringByReplacingOccurrencesOfString:withString:
numberWithLongLong:
tokenName
closeFile
doubleValue
removeItemAtURL:error:
initWithConfiguration:memoryLock:
setLatestVolumeTime:
predicateWithBlock:
numberWithUnsignedInteger:
countByEnumeratingWithState:objects:count:
stringFromDate:
floatValue
tokens
appendData:
initWithData:encoding:
setUserIntentTime:
compare:
removeLastObject
setLocale:
appendFormat:
stringWithCapacity:
numberWithUnsignedLong:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
effectiveBoolValueForSetting:
componentsSeparatedByCharactersInSet:
seekToEndOfFile
setUserIntentType:
processInfo
numberWithUnsignedLongLong:
createSamplingDirectory
stringWithFormat:
appendString:
seekToFileOffset:
componentsSeparatedByString:
initWithFileDescriptor:closeOnDealloc:
setUserIntentVolume:
setObject:atIndexedSubscript:
removeObject:
currentRoute
stringWithUTF8String:
removeObjectForKey:
objectAtIndex:
confidence
setValue:forKey:
setObject:forKey:
initWithFormat:
hasRemoteBuiltInMic
objectAtIndexedSubscript:
sharedConnection
mutableBytes
initWithLength:
removeObjectsInRange:
setObject:forKeyedSubscript:
isTVPushToTalkEnabled
unsignedIntegerValue
beepCancellerDidCancelSamples:buffer:timestamp:
subdataWithRange:
objectForKey:
JSONObjectWithData:options:error:
removeObserver:
mutableCopy
rangeAtIndex:
unsignedLongLongValue
setPeakValueSinceLastCall:
objectForKeyedSubscript:
substringWithRange:
iterateBitset:block:
dataUsingEncoding:
endpointType
insertObject:atIndex:
URLByAppendingPathExtension:
reportDigitalZerosWithAudioZeroRun:
setPermanentOffsetFactor:
keywordAnalyzerQuasar:hasResultAvailable:forChannel:
readDataOfLength:
array
intValue
offsetInFile
URLByDeletingLastPathComponent
getBytes:length:
enumerateKeysAndObjectsUsingBlock:
userIntentTime
integerValue
init
initWithBlob:isEarlyDetected:
dictionary
samplesFed
setSamplesFed:
bestStart
setBestStart:
bestEnd
setBestEnd:
bestScore
setBestScore:
isSecondChance
setIsSecondChance:
isEarlyDetect
setIsEarlyDetect:
_isSecondChance
_isEarlyDetect
_bestScore
_samplesFed
_bestStart
_bestEnd
TQ,N,V_samplesFed
TQ,N,V_bestStart
TQ,N,V_bestEnd
Tf,N,V_bestScore
TB,N,V_isSecondChance
TB,N,V_isEarlyDetect
T@"NSDictionary",R,N
dealloc
initWithBlob:
checkForTriggerWithBytes:withNumberOfSamples:
processAudioBytes:withNumberOfSamples:
processAudioChunk:
getLastResult
reset
activeChannel
setActiveChannel:
delegate
setDelegate:
.cxx_destruct
_currentBlob
_lastResult
_activeChannel
_delegate
TQ,N,V_activeChannel
T@"<CSKeywordAnalyzerNDEAPIScoreDelegate>",W,N,V_delegate
copyWithZone:
initWithPhId:keywordDetectorDecision:combinedScore:ndapiScore:ndapiResult:recognizerScore:isSecondChance:isSecondChanceCandidate:isRunningQuasar:
description
phId
decision
combinedScore
ndapiScore
ndapiResult
recognizerScore
isSecondChanceCandidate
isRunningQuasar
_isSecondChanceCandidate
_isRunningQuasar
_combinedScore
_ndapiScore
_recognizerScore
_phId
_decision
_ndapiResult
TQ,R,N,V_phId
TQ,R,N,V_decision
Tf,R,N,V_combinedScore
Tf,R,N,V_ndapiScore
T@"CSKeywordAnalyzerNDAPIResult",R,N,V_ndapiResult
Tf,R,N,V_recognizerScore
TB,R,N,V_isSecondChance
TB,R,N,V_isSecondChanceCandidate
TB,R,N,V_isRunningQuasar
initWithThreshold:minimumPhraseLength:shadowMicScoreThreshold:myriadThreshold:phrasesToSkipBoronDecisionMaking:
threshold
minimumPhraseLength
shadowMicScoreThreshold
myriadThreshold
phrasesToSkipBoronDecisionMaking
_threshold
_minimumPhraseLength
_shadowMicScoreThreshold
_myriadThreshold
_phrasesToSkipBoronDecisionMaking
Tf,R,N,V_threshold
Tf,R,N,V_minimumPhraseLength
Tf,R,N,V_shadowMicScoreThreshold
Tf,R,N,V_myriadThreshold
T@"NSArray",R,N,V_phrasesToSkipBoronDecisionMaking
sharedInstance
defaultConverter
converterForAudioStreamId:
_getAudioTimeConverterWithAudioStreamId:
queue
setQueue:
pool
setPool:
_queue
_pool
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSMutableDictionary",&,N,V_pool
initWithConfigPathNDAPI:threshold:delaySecondsForChannelSelection:masterChannelScoreBoost:processingChunkSeconds:processingChannelsBitset:
configPathNDAPI
delaySecondsForChannelSelection
masterChannelScoreBoost
processingChunkSeconds
processingChannelsBitset
_delaySecondsForChannelSelection
_masterChannelScoreBoost
_processingChunkSeconds
_configPathNDAPI
_processingChannelsBitset
T@"NSString",R,N,V_configPathNDAPI
Tf,R,N,V_delaySecondsForChannelSelection
Tf,R,N,V_masterChannelScoreBoost
Tf,R,N,V_processingChunkSeconds
TQ,R,N,V_processingChannelsBitset
initWithXPCObject:
xpcObject
packets
setPackets:
avgPower
setAvgPower:
peakPower
setPeakPower:
timeStamp
setTimeStamp:
numChannels
setNumChannels:
audioFormat
setAudioFormat:
streamHandleID
setStreamHandleID:
_avgPower
_peakPower
_numChannels
_audioFormat
_packets
_timeStamp
_streamHandleID
T@"NSArray",&,N,V_packets
Tf,N,V_avgPower
Tf,N,V_peakPower
TQ,N,V_timeStamp
TI,N,V_numChannels
TI,N,V_audioFormat
TQ,N,V_streamHandleID
getVoiceTriggerAssetTypeStringWithSupportMphAssets:deviceIsIPad:deviceIsWatch:deviceIsHorseman:deviceIsOSX:deviceIsTV:deviceIsIOS:
getVoiceTriggerCurrentCompatibilityVersionWithSupportMphAssets:deviceIsIPad:deviceIsWatch:deviceIsHorseman:deviceIsOSX:deviceIsTV:deviceIsIOS:
getVoiceTriggerAssetTypeString
getVoiceTriggerCurrentCompatibilityVersion
hybridEndpointerAssetFilename
assetForAssetType:resourcePath:configVersion:
getConfigFileNameForAssetType:
assetForAssetType:resourcePath:configVersion:assetProvider:
fallBackAssetResourcePath
defaultFallBackAssetForSmartSiriVolume
defaultFallBackAssetForHearst
defaultFallBackAssetForAdBlocker
parseCompatibilityFromConfigVersion:
decodeJson:
isLeftConfigVersion:newerThanRightConfigVersion:
initWithResourcePath:configFile:configVersion:assetProvderType:
getNumberForKey:category:default:
getBoolForKey:category:default:
getStringForKey:category:default:
getValueForKey:category:
containsKey:category:
containsCategory:
hashFromResourcePath
isEqualAsset:
stringForCurrentAssetProviderType
assetHashForTrial:
assetHashInResourcePath:
_sha1ForString:
path
resourcePath
configVersion
assetProvider
_decodedInfo
_path
_resourcePath
_configVersion
_assetProvider
T@"NSString",R,N,V_path
T@"NSString",R,N,V_resourcePath
T@"NSString",R,N
T@"NSString",R,N,V_configVersion
TQ,R,N,V_assetProvider
initWithPreTriggerAudioTime:prependingAudioTime:trailingAudioTime:resourcePath:configPathNDAPI:useRecognizerCombination:configPathRecognizer:useKeywordSpotting:phraseConfigs:wearerDetectionConfig:
preTriggerAudioTime
prependingAudioTime
trailingAudioTime
useRecognizerCombination
configPathRecognizer
useKeywordSpotting
phraseConfigs
wearerDetectionConfig
_useRecognizerCombination
_useKeywordSpotting
_preTriggerAudioTime
_prependingAudioTime
_trailingAudioTime
_configPathRecognizer
_phraseConfigs
_wearerDetectionConfig
Tf,R,N,V_preTriggerAudioTime
Tf,R,N,V_prependingAudioTime
Tf,R,N,V_trailingAudioTime
TB,R,N,V_useRecognizerCombination
T@"NSString",R,N,V_configPathRecognizer
TB,R,N,V_useKeywordSpotting
T@"NSArray",R,N,V_phraseConfigs
T@"CSVoiceTriggerAirPodWearerDetectionConfig",R,N,V_wearerDetectionConfig
sharedLogger
logSiriSetupPHSEnrollmentUtteranceCompletedWithSiriSetupID:withPageNumber:withPhId:withTopScoreForUtterance:withStartSampleCount:withEndSampleCount:withHasSpeechDetected:
logSiriSetupPHSEnrollmentDigitalZeroDetectionCompletedWithSiriSetupID:PageNumber:withPhId:withMaxNumContinuousZeros:withMaxNumAllowedContinuousZeros:withIsMaxNumContinuousZerosOverThreshold:
initWithName:threshold:secondChanceThreshold:loggingThreshold:ndapiScaleFactor:recognizerScoreOffset:recognizerScoreScaleFactor:recognizerToken:twoShotFeedbackDelay:remoraTwoShotFeedbackDelay:keywordRejectLoggingThreshold:speakerRejectLoggingThreshold:preTriggerSilenceOffset:
copyWithThreshold:secondChanceThreshold:loggingThreshold:ndapiScaleFactor:recognizerScoreOffset:recognizerScoreScaleFactor:keywordRejectLoggingThreshold:
name
secondChanceThreshold
loggingThreshold
ndapiScaleFactor
recognizerScoreOffset
recognizerScoreScaleFactor
recognizerToken
twoShotFeedbackDelay
remoraTwoShotFeedbackDelay
keywordRejectLoggingThreshold
speakerRejectLoggingThreshold
preTriggerSilenceOffset
_secondChanceThreshold
_loggingThreshold
_ndapiScaleFactor
_recognizerScoreOffset
_recognizerScoreScaleFactor
_twoShotFeedbackDelay
_remoraTwoShotFeedbackDelay
_keywordRejectLoggingThreshold
_speakerRejectLoggingThreshold
_preTriggerSilenceOffset
_name
_recognizerToken
T@"NSString",R,N,V_name
Tf,R,N,V_secondChanceThreshold
Tf,R,N,V_loggingThreshold
Tf,R,N,V_ndapiScaleFactor
Tf,R,N,V_recognizerScoreOffset
Tf,R,N,V_recognizerScoreScaleFactor
T@"NSString",R,N,V_recognizerToken
Tf,R,N,V_twoShotFeedbackDelay
Tf,R,N,V_remoraTwoShotFeedbackDelay
Tf,R,N,V_keywordRejectLoggingThreshold
Tf,R,N,V_speakerRejectLoggingThreshold
Tf,R,N,V_preTriggerSilenceOffset
bytes
initWithBuffer:bufferSize:deallocator:
configureWithBytes:length:
recycleHostTime
setRecycleHostTime:
_buffer
_bufferSize
_deallocator
_recycleHostTime
Tr^v,R,N
TQ,N,V_recycleHostTime
initWithBufferSize:
initWithZeroWindowSize:approxAbsSpeechThreshold:numHostTicksPerAudioSample:
filterZerosInAudioPacket:atBufferHostTime:filteredPacket:
endAudioAndFetchAnyTrailingZerosPacket:
metrics
.cxx_construct
_audioZeroFilterImpl
initWithResult:
sampleFed
setSampleFed:
bestPhrase
setBestPhrase:
earlyWarning
setEarlyWarning:
isRescoring
setIsRescoring:
_earlyWarning
_isRescoring
_sampleFed
_bestPhrase
TQ,N,V_sampleFed
TQ,N,V_bestPhrase
TB,N,V_earlyWarning
TB,N,V_isRescoring
initWithConfigPath:resourcePath:
resetBest
analyzeWavData:numSamples:
analyzeWavFloatData:numSamples:
numResultsAvailable
getAnalyzedResultForPhId:
getBestAnalyzedResult
getSuperVectorWithEndPoint:
getOptionValue:
reportCreation
reportDestroy
numTransaction
numTransactionNow
setNumTransactionNow:
_numTransactionNow
Ti,N,V_numTransactionNow
logCoreSpeechPreprocessorCompletedWithMHUUID:withMetricsDictionary:
logMHASRAudioConfigureStartedWithMHUUID:withAudioCodecString:withAudioSkippedNumSamples:
logMHAssistantDaemonAudioStartRecordingContextWithMHUUID:withStartRecordingContext:withFanInfoArray:withActiveSessionDisplayIDs:
logMHAssistantDaemonAudioInitContextWithMHUUID:withInitStarted:
logMHAssistantDaemonAudioConfigureContextWithMHUUID:withConfigureStarted:
logMHAssistantDaemonAudioPrepareContextWithMHUUID:withPrepareStarted:
logMHAssistantDaemonAudioPrewarmContextWithMHUUID:withPrewarmStarted:
logMHAssistantDaemonAudioStopRecordingContextWithMHUUID:withStopRecordingStarted:withADStopRecordingEvent:
logMHAssistantDaemonAudioSessionSetActivateContextWithMHUUID:withSetActivateStarted:
logMHAssistantDaemonAudioSessionSetInactiveWithMHUUID:withSetInactiveStarted:
logMHAssistantDaemonAudioFetchRouteContextWithMHUUID:withFetchRouteContextStarted:
logMHAssistantDaemonAudioRecordingContextWithMHUUID:withAudioRecordingStarted:withAudioInputRoute:withAudioSource:withAudioInterfaceVendorId:withAudioInterfaceProductId:
logMHAssistantDaemonAudioRecordingMissedBufferDetectedWithMHUUID:
logMHAssistantDaemonAudioLateBufferDetectedWithMHUUID:withBufferReceiptTimeInNs:
logMHAssistantDaemonAudioRecordingFirstBufferWithMHUUID:withStartEvent:withFirstBufferStartTimeOffsetNs:withFirstBufferReceiptTimeOffsetNs:
logMHAssistantDaemonAudioRecordingLastBufferWithMHUUID:withStartEvent:withLastBufferStartTimeOffsetNs:withLastBufferReceiptTimeOffsetNs:
logMHAssistantDaemonAudioRecordingInterruptionContextWithMHUUID:withStartEvent:withLinkID:withAvAudioSessionInterruptorName:withAVAudioSessionInterrupterType:
logMHAssistantDaemonAudioRecordingInterruptionStartedTier1WithMHUUID:withLinkID:withActiveSessionDisplayIDs:
logMHAssistantDaemonAudioBluetoothInfoWithMHUUID:withWirelessSplitterSessionState:withAudioDeviceCategory:
logMHApplicationPlaybackAttemptedWithMHUUID:withAppBundleName:withAppBundleVersion:
logMHAssistantDaemonAudioRecordingFailedWithMHUUID:withReason:vendorId:productId:
sharedMonitor
playingApps
checkEntitlementForToken:withEntitlement:
getTokenFromDictionary:withTokenKey:
auditTokenToString:
isDarwinOS
isLocalVoiceTriggerAvailable
supportContinuousVoiceTrigger
supportKeywordDetector
supportPremiumAssets
supportOpportunisticZLL
supportSelfTriggerSuppression:refChannelIdx:
supportCSTwoShotDecision
supportHybridEndpointer
supportEndpointerWhileHostAsleep
supportSmartVolume
supportSAT
supportTTS
supportRaiseToSpeak
supportCompactPlus
supportPremiumWatchAssets
isIOSDeviceSupportingBargeIn
supportAdBlocker
supportContinuousAudioFingerprint
supportPremiumModel
supportPhatic
shouldDelayPhaticForMyriadDecision
supportSessionActivateDelay
supportLanguageDetector
shouldDownloadVTAssetsOnDaemon
supportLazySessionActivation
supportMyriadLightHouse
supportAcousticProgressiveChecker
hasRemoteCoreSpeech
supportHearstVoiceTrigger
supportJarvisVoiceTrigger
supportRemoraVoiceTrigger
supportVoiceTriggerChannelSelection
supportHomeKitAccessory
supportBluetoothDeviceVoiceTrigger
supportRemoteDarwinVoiceTrigger
shouldDeinterleaveAudioOnCS
supportCircularBuffer
supportBeepCanceller:
supportZeroFilter:
rootQueueWithFixedPriority:
getFixedPrioritySerialQueueWithLabel:fixedPriority:
getFixedHighPrioritySerialQueueWithLabel:priority:
getSerialQueue:qualityOfService:
getSerialQueue:withQualityOfService:andTargetQueue:
deviceProductType
deviceProductVersion
deviceIdentifier
systemUpTime
deviceUserAssignedName
deviceBuildVersion
deviceHwRevision
timeStampWithSaltGrain
supportsSpeakerRecognitionAssets
supportsSiriLiminal
supportNonInterruptibleSiri
supportHandsFree
supportsVoiceTriggerFides
supportsANE
supportsUnderstandingOnDevice
supportsHybridUnderstandingOnDevice
supportsDictationOnDevice
supportsSpeechRecognitionOnDevice
isAttentiveSiriEnabled
deviceRequirePowerAssertionHeld
deviceRequirePreventStandbyAssertion
processIdentifier
supportsEndpointingOnATV
supportHangUp
supportTrialMitigationAssets
supportRingtoneA2DP
supportMph
supportMphAssets
horsemanDeviceType
getResourcePathInSystemDomainMaskByAppending:
getResourcePathInSystemDomainMaskFromRootPathByAppending:
allowExtendedRingBufferSize
platformSupportsImplcitUttAddition
supportRelayCall
isHFPWithRecordRoute:
isHeadphoneDeviceWithRecordRoute:playbackRoute:
isBluetoothAudioDeviceConnected
isBluetoothVehicleOutput
audioPortSubtypeAsString:
contextForHearstVoiceTriggerWithDeviceId:
contextForRemoraVoiceTriggerWithDeviceId:
contextForRemoraButtonTriggerWithDeviceId:
contextForOpportuneSpeakerListener
contextForOpportuneSpeakerListenerWithCall
contextForBuiltInVoiceTrigger
contextForJarvisWithDeviceId:
contextForBTLEWithDeviceId:
contextForVoiceTriggerTraining
contextForServerInvoke
contextForHomeButton
contextForDarwinVoiceTriggerWithDeviceId:
contextForDictation
defaultContext
recordTypeString:
initWithAVVCContext:
initWithRecordType:deviceId:
avvcContext
_createAVVCContextWithType:deviceId:
isEqual:
isVoiceTriggered
isBuiltInVoiceTriggered
isVoiceTriggeredFromRemoteXPCDevice
isGibraltarVoiceTriggered
isTriggeredFromHearst
isHearstVoiceTriggered
isHearstDoubleTapTriggered
isRTSTriggered
isJarvisVoiceTriggered
isRemoraVoiceTriggered
isRemoraTriggered
isRemoraButtonPress
isDarwinVoiceTriggered
isHomePressed
isTVRemote
isServerInvoked
isStarkTriggered
isDictation
isiOSButtonPress
isUIButtonPress
isAudioRecordTypeSupportedByRemora
recordTypeFromAVVCActivationMode:
avvcActivationMode:
type
setType:
deviceId
setDeviceId:
alwaysUseRemoteBuiltInMic
setAlwaysUseRemoteBuiltInMic:
isRequestDuringActiveCall
setIsRequestDuringActiveCall:
activationMetadata
setActivationMetadata:
turnIdentifier
setTurnIdentifier:
isRequestFromSpokenNotification
setIsRequestFromSpokenNotification:
_alwaysUseRemoteBuiltInMic
_isRequestDuringActiveCall
_isRequestFromSpokenNotification
_type
_deviceId
_activationMetadata
_turnIdentifier
Tq,N,V_type
T@"NSString",&,N,V_deviceId
TB,N,V_alwaysUseRemoteBuiltInMic
TB,N,V_isRequestDuringActiveCall
T@"NSDictionary",&,N,V_activationMetadata
T@"NSString",&,N,V_turnIdentifier
T@"NSObject<OS_xpc_object>",R,N
TB,N,V_isRequestFromSpokenNotification
initWithName:clientQueue:
setPhId:
isEarlyWarning
setIsEarlyWarning:
samplesAtFire
setSamplesAtFire:
startSampleCount
setStartSampleCount:
_isEarlyWarning
_samplesAtFire
_startSampleCount
TQ,N,V_phId
TB,N,V_isEarlyWarning
TQ,N,V_samplesAtFire
TQ,N,V_startSampleCount
_resetStartAnalyzeTime
_setStartAnalyzeTime:
getAnalyzedResultsFromAudioChunk:
getBestAnalyzedResultsFromAudioChunk:
_processAudioChunk:
_keywordAnalyzerNDAPIResultFromNovDetectorResult:phId:
getAnalyzedResults
getBestAnalyzedResults
getThreshold
getLoggingThreshold
getRejectLoggingThreshold
activePhId
setActivePhId:
_novDetector
_startAnalyzeSampleCount
_isStartSampleCountMarked
_lastSampleFed
_sampleFedWrapAroundOffset
_activePhId
TI,N,V_activePhId
processSampleCount:hostTime:
hostTimeFromSampleCount:
sampleCountFromHostTime:
anchorSampleCount
setAnchorSampleCount:
anchorHostTime
setAnchorHostTime:
_anchorSampleCount
_anchorHostTime
TQ,N,V_anchorSampleCount
TQ,N,V_anchorHostTime
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
CSEventMonitorDidReceiveEvent:
setCallback:
addConditions:
subscribeEventMonitor:
_checkAllConditionsEnabled
isEnabled
notifyCallback:option:
notifyCallbackWithOption:
_monitors
_conditions
_callback
voiceTriggerEventInfoWithAdjustedMachTime:deviceUUID:anchorHostMachTime:anchorDarwinMachTime:
setRawVoiceTriggerEventInfo:fromDeviceUUID:anchorHostMachTime:anchorDarwinMachTime:
getMachTimeAdjustedVoiceTriggerEventInfoForDeviceUUID:
triggerInfos
setTriggerInfos:
_triggerInfos
T@"NSMutableDictionary",&,N,V_triggerInfos
initWithRequestId:languageCode:
prepareLogging
_prepareFileForLogging
_setupFilePath
appendAudioData:
endAudio
_createFileDescriptor:protectionClass:
_writePlistFile
requestId
setRequestId:
languageCode
setLanguageCode:
samplingDate
setSamplingDate:
samplingTimestamp
setSamplingTimestamp:
samplingTimestampDetail
setSamplingTimestampDetail:
samplingDirectory
setSamplingDirectory:
audioFilePath
setAudioFilePath:
plistFilePath
setPlistFilePath:
audioFileHandle
setAudioFileHandle:
_requestId
_languageCode
_samplingDate
_samplingTimestamp
_samplingTimestampDetail
_samplingDirectory
_audioFilePath
_plistFilePath
_audioFileHandle
T@"NSString",&,N,V_requestId
T@"NSString",&,N,V_languageCode
T@"NSString",&,N,V_samplingDate
T@"NSString",&,N,V_samplingTimestamp
T@"NSString",&,N,V_samplingTimestampDetail
T@"NSString",&,N,V_samplingDirectory
T@"NSString",&,N,V_audioFilePath
T@"NSString",&,N,V_plistFilePath
T@"NSFileHandle",&,N,V_audioFileHandle
initWithData:numChannels:numSamples:sampleByteDepth:startSampleCount:hostTime:arrivalHostTimeToAudioRecorder:wasBuffered:remoteVAD:
initWithData:numChannels:numSamples:sampleByteDepth:startSampleCount:hostTime:remoteVAD:
chunkForChannel:
dataForChannel:
dataWithRemoteVADWithScaleFactor:numAudioSamplesPerRemoteVAD:
remoteVADAvailable
subChunkFrom:numSamples:forChannel:
subChunkFrom:numSamples:
copySubAudioChunkFrom:numSamples:to:dstBufferSize:
remoteVADSubChunkFrom:numSamples:numAudioSamplesPerRemoteVAD:
gainCompensatedChunk
skipSamplesAtStartSuchThatNumSamplesReceivedSoFar:reachesACountOf:completionHandler:
splitAudioChunkSuchThatNumSamplesReceivedSoFar:reachesACountOf:completionHandler:
data
numSamples
sampleByteDepth
hostTime
arrivalHostTimeToAudioRecorder
wasBuffered
remoteVAD
setRemoteVAD:
_wasBuffered
_data
_numSamples
_sampleByteDepth
_hostTime
_arrivalHostTimeToAudioRecorder
_remoteVAD
T@"NSData",R,N,V_data
TQ,R,N,V_numChannels
TQ,R,N,V_numSamples
TQ,R,N,V_sampleByteDepth
TQ,R,N,V_startSampleCount
TQ,R,N,V_hostTime
TQ,R,N,V_arrivalHostTimeToAudioRecorder
TB,R,N,V_wasBuffered
TB,R,N
T@"NSData",&,N,V_remoteVAD
initWithNumChannels:recordingDuration:samplingRate:
initWithNumChannels:recordingDuration:samplingRate:audioTimeConverter:
numInputChannels
inputRecordingDuration
addSamples:numSamples:
addSamples:numSamples:atHostTime:
copySamplesFromHostTime:
copySamplesFrom:to:
copySamplesFrom:to:channelIdx:
copybufferFrom:to:
copyBufferWithNumSamplesCopiedIn:
sampleCount
bufferLength
setBufferLength:
audioTimeConverter
setAudioTimeConverter:
setNumInputChannels:
setInputRecordingDuration:
_csAudioCircularBufferImpl
_inputRecordingDuration
_bufferLength
_audioTimeConverter
_numInputChannels
TQ,N,V_bufferLength
T@"CSAudioTimeConverter",&,N,V_audioTimeConverter
TQ,N,V_numInputChannels
Tf,N,V_inputRecordingDuration
initWithPid:
bundleId
appName
version
_bundleId
_appName
_version
T@"NSString",R,N,V_bundleId
T@"NSString",R,N,V_appName
T@"NSString",R,N,V_version
decodeConfigFrom:category:
decodeConfigV2:category:
decodeConfigV1:category:
defaultTwoShotDelay
twoShotDelayConfigKey
adjustTwoShotDelay:
inputRecordingSampleRate
inputRecordingSampleRateNarrowBand
inputRecordingFramesPerPacket
inputRecordingBytesPerFrame
inputRecordingBytesPerPacket
hearstNumberOfBytesPerChunk
hearstNumberOfSamplesPerChunk
inputRecordingNumberOfChannels
inputRecordingDurationInSecs
inputRecordingDurationInSecsExtended
inputRecordingSampleBitDepth
inputRecordingSampleByteDepth
inputRecordingIsFloat
EncryptionAudioSampleByteDepth
inputRecordingEncoderAudioQuality
inputRecordingSampleRateConverterAlgorithm
inputRecordingBufferDuration
audioConverterBitrate
channelForOutputReference
channelForProcessedInput
zeroFilterWindowSizeInMs
zeroFilterWindowSizeInMsForReport
zeroFilterApproxAbsSpeechThreshold
csAudioProcessingQueuePriority
daysBeforeRemovingLogFiles
remoteVADDuration
serverLoggingChannelBitset
defaultContinousFingerprintBufferDuration
defaultContinousFingerprintBufferDurationForRemora
fetchAndClearCachedVoiceTriggerEventsWithCompletion:
logStartEventWithFirstPassStartedInfo:withMHUUID:
logTriggerEventWithVTEI:withMHUUID:
logRejectEventWithVTEI:withMHUUID:withSecondPassResult:
logCancelledEventWithMHUUID:
logTwoShotEndEventWithSuppresedAlert:withTimedOut:withMHUUID:
logTwoShotStartEventWithPromptType:withMHUUID:
logTwoShotDetectedWithMHUUID:
logSiriLaunchStartedWithVoiceTriggerEventInfo:
logSiriLaunchCompletedWithVoiceTriggerEventInfo:
initWithDescription:
_transaction
_description
decodeConfigFrom:
secondsToHostTime:
hostTimeToSeconds:
hostTimeToTimeInterval:
getHostClockFrequency
hostTimeFromSampleCount:anchorHostTime:anchorSampleCount:sampleRate:
sampleCountFromHostTime:anchorHostTime:anchorSampleCount:sampleRate:
macHostTimeFromBridgeHostTime:
isReceivedTimeInterval:matchCurrentTimeInterval:
convertSampleCountToNs:sampleRate:
secondsToNs:
millisecondsToNs:
hostTimeToNs:
absoluteHostTimeToContinuousHostTime:
initWithInASBD:outASBD:
addPackets:audioStreamHandleId:remoteVAD:timestamp:arrivalTimestampToAudioRecorder:wasBuffered:receivedNumChannels:
_decoder
_inASBD
_outASBD
T@"<CSAudioDecoderDelegate>",W,V_delegate
saveAudioChunck:toURL:
initWithURL:
initWithFilepath:
initWithURL:inputFormat:outputFormat:
addContextKey:withContext:
createAcousticMetaFileForContext:withContext:
addContextKey:fromMetaFile:
fileURL
isWriting
fFile
inASBD
outASBD
_fileURL
T@"NSURL",R,N,V_fileURL
boolValue
sharedPreferences
voiceTriggerEnabled
phraseSpotterEnabled
setVoiceTriggerEverUsed
isAttentiveSiriAudioLoggingEnabled
twoShotNotificationEnabled
getAttendingTimeoutConfig
_storeModeEnabled
setFileLoggingIsEnabled:
fileLoggingIsEnabled
_isAdaptiveSiriVolumeDisabled
disableAdaptiveSiriVolume:
fileLoggingLevel
setFileLoggingLevel:
baseDir
voiceTriggerAudioLogDirectory
geckoAudioLogDirectory
mhLogDirectory
remoteP2pLogDirectory
remoteGradingDataDirectory
ssvLogDirectory
getSSVLogFilePathWithSessionIdentifier:
trialBaseAssetDirectory
assistantLogDirectory
assistantAudioFileLogDirectory
myriadHashDirectory
myriadHashFilePath
secondPassAudioLoggingEnabled
speakerRecognitionAudioLoggingEnabled
personalizedSiriEnrollmentAudioLoggingEnabled
jarvisAudioLoggingEnabled
setJarvisTriggerMode:
getJarvisTriggerMode
startOfSpeechAudioLoggingEnabled
forceVoiceTriggerAPMode
forceVoiceTriggerAOPMode
_updatePreferenceSettingsForAccessory:settingsUpdateBlock:
setBooleanAccessorySettingValue:forKey:forAccessory:
setMediaPlayingSettingForAccessory:isMediaPlaying:isInterrupted:interruptedTime:
getBooleanAccessorySettingValueForKey:forAccessory:
_clearAccessorySettingForKeys:forAccessory:
getMediaPlaybackInterruptedTime:
clearMediaPlaybackInterruptedTimeOnAccessory:
isMediaPlayingOnAccessory:
setIsMediaPlayingOnAccessory:isMediaPlaying:isInterrupted:interruptedTime:
clearMediaPlayingStatusOnAccessory:
isAlarmPlayingOnAccessory:
setIsAlarmPlayingOnAccessory:isAlarmPlaying:
clearAlarmPlayingStatusOnAccessory:
isTimerPlayingOnAccessory:
setIsTimerPlayingOnAccessory:isTimerPlaying:
clearTimerPlayingStatusOnAccessory:
clearMyriadSettingsOnAccessory:
getStartOfSpeechAudioLogFilePath
_isDirectory:
remoteVoiceTriggerDelayTime
remoteVoiceTriggerEndpointTimeoutWithDefault:
interstitialRelativeDirForLevel:
interstitialAbsoluteDirForLevel:
myriadFileLoggingEnabled
enableAudioInjection:
audioInjectionEnabled
enableProgrammableAudioInjection:
useSpeexForAudioInjection
programmableAudioInjectionEnabled
enableAudioInjection:withKey:
audioInjectionEnabledWithKey:
setAudioInjectionFilePath:
audioInjectionFilePath
isPHSSupported
_isRemoteVoiceTriggerAvailable
isSpeakerRecognitionAvailable
speakerIdScoreReportingType
smartSiriVolumeSoftVolumeEnabled
smartSiriVolumeContextAwareLoggingEnabled
smartSiriVolumeContextAwareEnabled
isAdaptiveSiriVolumeTemporaryIntentValid
isAdaptiveSiriVolumePermanentOffsetEnabled
adaptiveSiriVolumePermanentOffset
adaptiveSiriVolumeRecentIntent
audioSessionActivationDelay
maxNumLoggingFiles
maxNumGradingFiles
useSiriActivationSPIForHomePod
useSiriActivationSPIForwatchOS
shouldOverwriteRemoteVADScore
overwritingRemoteVADScore
setHearstFirstPassModelVersion:
setHearstSecondPassModelVersion:
fakeHearstModelPath
setFakeHearstModelPath:
companionSyncVoiceTriggerUtterancesEnabled
opportuneSpeakListenerBypassEnabled
bypassPersonalizedHeySiri
isMphVTEnabled
isMultiChannelAudioLoggingEnabled
isAdBlockerAudioLoggingEnabled
isSelfTriggerFileLoggingEnabled
setASVUserIntent:
getASVUserIntent:
setSiriLanguageCodeDarwin:
languageCodeDarwin
setRemoteDarwinEverConnectedWithNotifyKey:
setIdleUserPreventSleepAssertionAcquitionDate:
getIdleUserPreventSleepAssertionAcquitionDate
isP2PTransferEnabled
isReducedPHSThresholdEnabled
isModelBenchmarkingEnabled
geckoLoggingLevel
enableEndpointEnhancedLogging:
isEndpointEnhancedLoggingEnabled
isEndpointAssetOverridingEnabled
fakeEndpointAssetPath
isEndpointAssetBypassTrialEnabled
isVoiceTriggerAssetOverridingEnabled
fakeVoiceTriggerAssetPath
isMitigationAssetOverridingEnabled
fakeMitigationAssetPath
bypassTrialAssets
setSelfTriggerEnabledGibraltar:
isSelfTriggerEnabledGibraltar
shouldOverwriteVoiceTriggerMLock
overwritingVoiceTriggerMLock
bypassSpeakerIdForMitigation
readSpeakerIdScoreOverrrideConfig
firstPassDebuggingEnabled
forceMitigateForHybridSDSD
setPowerLoggingCurrentAssetConfigVersion:
powerLoggingCurrentAssetConfigVersion
setPowerLoggingCurrentLanguage:
powerLoggingCurrentLanguage
cancelBeepFromSamples:timestamp:
willBeep
flush
_beepCanceller
_beepFloatVec
_floatBuffer
_shortBuffer
_numTotalInputSamples
_numTotalOutputSamples
T@"<CSBeepCancellerDelegate>",W,N,V_delegate
initWithName:timeout:
invalidate
initWithStartPoint:endPoint:
hasIntersectionWithRange:
startPoint
endPoint
_startPoint
_endPoint
TQ,R,N,V_startPoint
TQ,R,N,V_endPoint
_sharedDisposeLoggingQueue
removeLogFilesInDirectory:matchingPattern:beforeDays:
clearLogFilesInDirectory:matchingPattern:exceedNumber:
loggingFilePathWithDirectory:token:postfix:
_createLoggingDirectoryIfNeeded:
_timeStampString
URLsInDirectory:matchingPattern:completion:
_sortedURLsInDirectory:matchingPattern:completion:
_contentsOfDirectoryAtURL:matchingPattern:includingPropertiesForKeys:error:
submitVoiceIdIssueReport:
submitAudioIssueReport:
submitVoiceTriggerIssueReport:
submitEndpointerIssueReport:
submitTrialIssueReport:
submitUresIssueReport:
submitSiriPowerIssueReport:
submitRemoteCoreSpeechReport:context:
initWithSampleRate:
_reset
_scaleDecayConstants:
processShortBuffer:stride:inFrameToProcess:
processFloatBuffer:stride:inFrameToProcess:
_savePeaks:averagePower:maxSample:
getPeakPowerDB
getAveragePowerDB
_ampToDB:
_linearToDB:
_zapgremlins:
_averagePowerI
_averagePowerF
_instantaneousMode
_peak
_maxPeak
_decay
_peakDecay
_averagePowerPeak
_peakHoldCount
_sampleRate
_previousBlockSize
_decay1
_peakDecay1
_clipping
setRunAsSecondChance:
setConfig:
getAnalyzedResultFromAudioChunk:
getAnalyzedResultFromFlushedAudio
phraseDetectorInfoFromPhId:
_phraseDetectorResultFromNDAPIResults:quasarResult:forceMaximized:
_getResultWithPhId:phraseDetectorInfo:ndapiResult:quasarResult:forceMaximized:
_isSecondChanceCandidateWithScore:effectiveThreshold:secondChanceThreshold:
_resultCopyWithKeywordDetectorDecision:bestPhId:phraseResult:
syncKeywordAnalyzerNDAPI
setSyncKeywordAnalyzerNDAPI:
syncKeywordAnalyzerQuasar
setSyncKeywordAnalyzerQuasar:
phraseDetectorInfos
setPhraseDetectorInfos:
nearMissDelayTimeout
setNearMissDelayTimeout:
nearMissCandidateDetectedSamples
setNearMissCandidateDetectedSamples:
phraseResult
setPhraseResult:
_syncKeywordAnalyzerNDAPI
_syncKeywordAnalyzerQuasar
_phraseDetectorInfos
_nearMissDelayTimeout
_nearMissCandidateDetectedSamples
_phraseResult
T@"CSKeywordAnalyzerNDAPI",&,N,V_syncKeywordAnalyzerNDAPI
T@"CSSyncKeywordAnalyzerQuasar",&,N,V_syncKeywordAnalyzerQuasar
T@"NSMutableArray",&,N,V_phraseDetectorInfos
TQ,N,V_nearMissDelayTimeout
TQ,N,V_nearMissCandidateDetectedSamples
T@"NSMutableArray",&,N,V_phraseResult
initWithConfidence:
triggerConfidence
setTriggerConfidence:
_triggerConfidence
Td,N,V_triggerConfidence
_phToPhIdMapFromTriggerTokensArray:
dumpEARSpeechRecognitionResults:
initWithConfigPath:triggerTokensArray:preventDuplicatedReset:memoryLock:
flushAudio
getResultsFromFlushedAudio
_getAnalyzedResults:
_syncRecognizer
_requireReset
_preventDuplicatedReset
_phToPhIdMap
_numPhrases
initWithToken:sampleRate:numChannels:
resetWithSampleRate:
getZeroStatisticsFromBuffer:entireSamples:
stopCountingZeroStatisticsWithReporter:
_methodToken
_continuousZeroCounter
_zeroCounterWinSz
_zeroCounterWinSzForReport
_maxContinuousZeroCount
_analyzeStep
_shouldDeinterleaveAudio
initWithConfigPathNDAPI:threshold:twoShotThreshold:twoShotDecisionWaitTime:voiceTriggerPhIds:silencePhIds:
twoShotThreshold
twoShotDecisionWaitTime
voiceTriggerPhIds
silencePhIds
_twoShotThreshold
_twoShotDecisionWaitTime
_voiceTriggerPhIds
_silencePhIds
Tf,R,N,V_twoShotThreshold
Tf,R,N,V_twoShotDecisionWaitTime
T@"NSArray",R,N,V_voiceTriggerPhIds
T@"NSArray",R,N,V_silencePhIds
speechRecognizer:didRecognizePartialResult:
speechRecognizer:didFinishRecognitionWithError:
speechRecognizer:didRecognizeFinalResults:
speechRecognizer:didRecognizeFinalResults:tokenSausage:nBestChoices:
speechRecognizer:didRecognizeFinalResultPackage:
speechRecognizer:didProcessAudioDuration:
speechRecognizer:didRecognizeRawEagerRecognitionCandidate:
speechRecognizer:didProduceEndpointFeaturesWithWordCount:trailingSilenceDuration:eosLikelihood:pauseCounts:silencePosterior:processedAudioDurationInMilliseconds:
speechRecognizer:didRecognizePartialResultNbest:
speechRecognizer:didProduceLoggablePackage:
speechRecognizer:didRecognizeFinalResultCandidatePackage:
initWithConfigPath:triggerTokens:useKeywordSpotting:
runRecognition
_recognizeWavData:length:
_phIdToCtcScoreMap
_getConfidence:
ctcKwdToPhIdMap
setCtcKwdToPhIdMap:
_previousUtteranceTokens
_triggerTokenList
_recognizer
_recognizerBuffer
_ctcKwdToPhIdMap
T@"NSDictionary",&,N,V_ctcKwdToPhIdMap
Td,R,N,V_triggerConfidence
T@"<CSKeywordAnalyzerQuasarScoreDelegate>",W,N,V_delegate
initWithPhraseConfig:
effectiveKeywordThreshold
setEffectiveKeywordThreshold:
hasPendingNearMiss
setHasPendingNearMiss:
phraseConfig
setPhraseConfig:
_hasPendingNearMiss
_effectiveKeywordThreshold
_phraseConfig
Tf,N,V_effectiveKeywordThreshold
TB,N,V_hasPendingNearMiss
T@"CSVoiceTriggerPhraseConfig",&,N,V_phraseConfig
initWithConfiguration:
dataWithBytes:length:
cleanup
handleUsedBackingStore:
_getAvailableBackingStore
_createNewBackingStore
_canCreateNewBackingStore
_recycleUsedBackingStore:
_checkIdleBackingStores
configuration
_lock
_numberOfBackingStores
_recycledBackingStores
_configuration
T@"CSReusableBufferPoolConfiguration",R,N,V_configuration
_sharedAudioLoggingQueue
generateDeviceAudioLogging:speechId:
_readDataFromFileHandle:toFileHandle:
createAudioFileWriterForOpportuneSpeakListenerWithInputFormat:outputFormat:
createAudioFileWriterForPHSTrainingWithInputFormat:outputFormat:
createAudioFileWriterForRemoteVADWithInputFormat:outputFormat:withLoggingUUID:
createAudioFileWriterWithInputFormat:outputFormat:withLoggingUUID:
createSelectiveChannelAudioFileWriterWithChannelBitset:
createAudioFileWriterForAdBlockerWithInputFormat:outputFormat:withAccessoryID:
createAudioFileWriterForOSDWithInputFormat:outputFormat:
_createAudioFileWriterForAdBlockerWithLoggingDir:inputFormat:outputFormat:withAccessoryID:
_createAudioFileWriterForOpportuneSpeakListenerWithLoggingDir:inputFormat:outputFormat:
_createAudioFileWriterWithLoggingDir:withLoggingUUID:inputFormat:outputFormat:
_createAudioFileWriterForPHSTrainingWithLoggingDir:inputFormat:outputFormat:
_createAudioFileWriterForOSDWithLoggingDir:inputFormat:outputFormat:
_getDateLabel
removeOpportunisticAudioLoggingOlderThanNDays:
removeLogFilesOlderThanNDays:
removeRemoteP2PLogFilesOlderThanNDays:
pruneLogFiles
pruneNumberOfLogFilesTo:
pruneNumberOfGradingFilesTo:
cleanupOrphanedGradingFiles
audioFileWriterForAttentiveSiri
addEventToCacheBuffer:
clearBuffer
eventsArray
_lastEventIndex
_eventsArray
T@"NSMutableArray",R,N,V_eventsArray
firstPassEvents
setFirstPassEvents:
rejectEvents
setRejectEvents:
cancelledEvents
setCancelledEvents:
_firstPassEvents
_rejectEvents
_cancelledEvents
T@"CSFCircularEventsCacheBuffer",&,N,V_firstPassEvents
T@"CSFCircularEventsCacheBuffer",&,N,V_rejectEvents
T@"CSFCircularEventsCacheBuffer",&,N,V_cancelledEvents
sharedPowerLogger
powerLogVoiceTriggerStart
powerLogVoiceTriggerStop
powerWithNumFalseWakeup:withDuration:withPhraseDict:
powerLogSiriConfigWithVoiceTriggerEnabled:withLanguage:withModelVersion:
_borealisPowerlog:
_configPowerlog:
_updateConfigToPreferencesWithLanguage:withModelVersion:
CSRemoteAssetManagerDidDownloadNewAsset:
sharedManager
_loadPreinstalledAssetMetaIfNeeded
_remoteAssetMetaPath
assetForCurrentLanguageOfType:
_writeToJsonFile:
_loadFromJsonFile:
_setAssetsInfoFromMetaData:
_loadJsonDataFromFile:
setLanguageCode:resourcePath:configVersion:assetHash:assetType:
assetConfigVersionForAssetType:
assetHashForAssetType:
resourcePathForAssetType:
addObserver:forAssetType:
removeObserver:forAssetType:
_currentLanguageCode
_assetHash
_observers
initWithURL:inputFormat:outputFormat:channelBitset:
numberOfChannels
selectedChannelList
_numberOfChannels
TI,R,N,V_numberOfChannels
initWithBackingStoreCapacity:minimalNumberOfBackingStores:maximumNumberOfBackingStores:backingStoreIdleTimeout:
backingStoreCapacity
minimalNumberOfBackingStores
maximumNumberOfBackingStores
backingStoreIdleTimeout
_backingStoreCapacity
_minimalNumberOfBackingStores
_maximumNumberOfBackingStores
_backingStoreIdleTimeout
TQ,R,N,V_backingStoreCapacity
TQ,R,N,V_minimalNumberOfBackingStores
TQ,R,N,V_maximumNumberOfBackingStores
Td,R,N,V_backingStoreIdleTimeout
convertToFloatLPCMBufFromShortLPCMBuf:
convertToShortLPCMBufFromFloatLPCMBuf:
applyGain:toShortBuffer:
applyGain:toFloatBuffer:
apply12dBGainToShortBuffer:
apply12dBGainToFloatBuffer:
applyNegative32dBGainToShortBuffer:
applyNegative32dBGainToFloatBuffer:
applyNegative20dBGainToShortBuffer:
applyNegative20dBGainToFloatBuffer:
enter
leave
waitWithTimeout:
_dispatchGroup
_dispatchGroupCounter
lpcmInt16ASBD
lpcmInt16NarrowBandASBD
lpcmFloatASBD
opusASBD
opusNarrowBandASBD
speexASBD
lpcmInterleavedASBD
lpcmMonoInterleavedASBD
lpcmInterleavedWithRemoteVADASBD
lpcmMonoInterleavedWithRemoteVADASBD
lpcmInterleavedASBDWithSampleRate:numberOfChannels:
lpcmNonInterleavedASBD
lpcmMonoNonInterleavedASBD
lpcmNonInterleavedWithRemoteVADASBD
lpcmMonoNonInterleavedWithRemoteVADASBD
lpcmNonInterleavedASBDWithSampleRate:numberOfChannels:
lpcmASBD
lpcmNarrowBandASBD
utteranceFileASBD
aiffFileASBD
categoryForFirstPass:
decodeConfigFrom:forFirstPassSource:
decodePreTriggerAudioTime:fromCategory:
decodePrependingAudioTime:fromCategory:
decodeTrailingAudioTime:fromCategory:
decodeConfigFileNDAPI:fromCategory:
decodeUseRecognizerCombination:fromCategory:
decodeConfigFileRecognizer:fromCategory:
decodeUseKeywordSpotting:fromCategory:
decodeWearerDetectionConfig:fromCategory:
@16@0:8
@28@0:8@16B24
Q16@0:8
v24@0:8Q16
f16@0:8
v20@0:8f16
B16@0:8
v20@0:8B16
@24@0:8@16
v16@0:8
@32@0:8r^s16q24
@32@0:8^v16q24
v24@0:8@16
@"NSMutableData"
@"CSKeywordAnalyzerNDEAPIResult"
@"<CSKeywordAnalyzerNDEAPIScoreDelegate>"
@24@0:8^{_NSZone=}16
@64@0:8Q16Q24f32f36@40f48B52B56B60
@"CSKeywordAnalyzerNDAPIResult"
@40@0:8f16f20f24f28@32
@"NSArray"
@24@0:8Q16
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
@48@0:8@16f24f28f32f36Q40
@"NSString"
I16@0:8
v20@0:8I16
@44@0:8B16B20B24B28B32B36B40
Q44@0:8B16B20B24B28B32B36B40
@40@0:8Q16@24@32
@48@0:8Q16@24@32Q40
Q24@0:8@16
B32@0:8@16@24
@48@0:8@16@24@32Q40
@40@0:8@16@24@32
B36@0:8@16@24B32
@32@0:8@16@24
B24@0:8@16
@"NSDictionary"
@76@0:8f16f20f24@28@36B44@48B56@60@68
@"CSVoiceTriggerAirPodWearerDetectionConfig"
v52@0:8@16i24@28f36i40i44i48
v48@0:8@16i24@28i36i40B44
@76@0:8@16f24f28f32f36f40f44@48f56f60f64f68f72
@44@0:8f16f20f24f28f32f36f40
r^v16@0:8
@40@0:8^v16Q24@?32
B32@0:8r^v16Q24
@36@0:8Q16S24d28
Q40@0:8@16Q24^@32
Q24@0:8^@16
{unique_ptr<CSAudioZeroFilterImpl<unsigned short>, std::default_delete<CSAudioZeroFilterImpl<unsigned short>>>="__ptr_"{__compressed_pair<CSAudioZeroFilterImpl<unsigned short> *, std::default_delete<CSAudioZeroFilterImpl<unsigned short>>>="__value_"^v}}
v32@0:8@16Q24
@20@0:8I16
i16@0:8
v20@0:8i16
v32@0:8@16@24
v40@0:8@16@24Q32
v44@0:8@16B24@28@36
v28@0:8@16B24
v32@0:8@16B24S28
v52@0:8@16B24i28i32@36@44
v44@0:8@16B24Q28Q36
v52@0:8@16B24@28@36@44
v40@0:8@16@24@32
v36@0:8@16i24@28
v48@0:8@16q24@32@40
B56@0:8{?=[8I]}16@48
{?=[8I]}32@0:8@16@24
@48@0:8{?=[8I]}16
B32@0:8Q16Q24
B24@0:8Q16
@20@0:8i16
@28@0:8@16i24
@28@0:8@16I24
@36@0:8@16I24@28
d16@0:8
q16@0:8
@24@0:8q16
@32@0:8q16@24
q24@0:8q16
v24@0:8q16
@32@0:8@16Q24
@"CSNovDetector"
v32@0:8Q16Q24
Q24@0:8Q16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v28@0:8B16Q20
@"NSMutableArray"
@48@0:8@16@24Q32Q40
v48@0:8@16@24Q32Q40
i28@0:8@16i24
@"NSFileHandle"
@84@0:8@16Q24Q32Q40Q48Q56Q64B72@76
@72@0:8@16Q24Q32Q40Q48Q56@64
@28@0:8f16Q20
@40@0:8Q16Q24Q32
@32@0:8Q16Q24
Q48@0:8Q16Q24^v32Q40
v40@0:8Q16Q24@?32
@"NSData"
@32@0:8Q16f24f28
@40@0:8Q16f24f28@32
v32@0:8r^v16Q24
v40@0:8r^v16Q24Q32
@24@0:8^Q16
{unique_ptr<corespeech::CSAudioCircularBufferImpl<unsigned short>, std::default_delete<corespeech::CSAudioCircularBufferImpl<unsigned short>>>="__ptr_"{__compressed_pair<corespeech::CSAudioCircularBufferImpl<unsigned short> *, std::default_delete<corespeech::CSAudioCircularBufferImpl<unsigned short>>>="__value_"^v}}
@"CSAudioTimeConverter"
f20@0:8f16
S16@0:8
v32@0:8B16B20@24
v28@0:8I16@20
@"NSObject<OS_os_transaction>"
Q20@0:8f16
f24@0:8Q16
d24@0:8Q16
Q44@0:8Q16Q24Q32f40
B32@0:8d16d24
Q28@0:8Q16f24
@96@0:8{AudioStreamBasicDescription=dIIIIIIII}16{AudioStreamBasicDescription=dIIIIIIII}56
v64@0:8@16Q24@32Q40Q48B56I60
^{OpaqueAudioConverter=}
{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}
@"<CSAudioDecoderDelegate>"
@104@0:8@16{AudioStreamBasicDescription=dIIIIIIII}24{AudioStreamBasicDescription=dIIIIIIII}64
B32@0:8r^v16q24
^{OpaqueExtAudioFile=}
@"NSURL"
v32@0:8@16@?24
v36@0:8B16@20@28
v40@0:8@16B24B28d32
d24@0:8@16
d24@0:8d16
B20@0:8B16
B28@0:8B16^{__CFString=}20
B24@0:8^{__CFString=}16
v24@0:8r*16
{unique_ptr<BatchBeepCanceller, std::default_delete<BatchBeepCanceller>>="__ptr_"{__compressed_pair<BatchBeepCanceller *, std::default_delete<BatchBeepCanceller>>="__value_"^{BatchBeepCanceller}}}
{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}
{vector<short, std::allocator<short>>="__begin_"^s"__end_"^s"__end_cap_"{__compressed_pair<short *, std::allocator<short>>="__value_"^s}}
@"<CSBeepCancellerDelegate>"
@32@0:8@16d24
v36@0:8@16@24f32
v40@0:8@16@24@?32
@48@0:8@16@24@32^@40
@20@0:8f16
v32@0:8r^s16i24i28
v32@0:8r^f16i24i28
v28@0:8i16i20i24
v24@0:8^d16
@"CSAudioUnitMeterClipping"
@36@0:8@16@24B32
@52@0:8Q16@24@32@40B48
B28@0:8f16f20f24
@40@0:8Q16Q24@32
@"CSKeywordAnalyzerNDAPI"
@"CSSyncKeywordAnalyzerQuasar"
@24@0:8d16
v24@0:8d16
@40@0:8@16@24B32B36
@"_EARSyncSpeechRecognizer"
@32@0:8@16f24I28
v28@0:8@16I24
@52@0:8@16f24f28f32@36@44
v48@0:8@16@24@32@40
v32@0:8@16d24
v72@0:8@16q24q32d40@48d56q64
v32@0:8@"_EARSpeechRecognizer"16@"_EARSpeechRecognitionResult"24
v32@0:8@"_EARSpeechRecognizer"16@"NSError"24
v32@0:8@"_EARSpeechRecognizer"16@"NSArray"24
v48@0:8@"_EARSpeechRecognizer"16@"NSArray"24@"NSArray"32@"NSArray"40
v32@0:8@"_EARSpeechRecognizer"16@"_EARSpeechRecognitionResultPackage"24
v32@0:8@"_EARSpeechRecognizer"16d24
v32@0:8@"_EARSpeechRecognizer"16@"_EARSpeechRecognition"24
v72@0:8@"_EARSpeechRecognizer"16q24q32d40@"NSArray"48d56q64
v28@0:8r^s16i24
@"_EARSpeechRecognizer"
@"_EARSpeechRecognitionAudioBuffer"
@"<CSKeywordAnalyzerQuasarScoreDelegate>"
@"CSVoiceTriggerPhraseConfig"
@32@0:8r^v16Q24
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"CSReusableBufferPoolConfiguration"
@104@0:8{AudioStreamBasicDescription=dIIIIIIII}16{AudioStreamBasicDescription=dIIIIIIII}56@96
@112@0:8@16{AudioStreamBasicDescription=dIIIIIIII}24{AudioStreamBasicDescription=dIIIIIIII}64@104
@112@0:8@16@24{AudioStreamBasicDescription=dIIIIIIII}32{AudioStreamBasicDescription=dIIIIIIII}72
@"CSFCircularEventsCacheBuffer"
v40@0:8Q16d24@32
v56@0:8@16@24@32@40Q48
@"NSHashTable"
@112@0:8@16{AudioStreamBasicDescription=dIIIIIIII}24{AudioStreamBasicDescription=dIIIIIIII}64Q104
@48@0:8Q16Q24Q32d40
v28@0:8f16@20
q24@0:8Q16
@"NSObject<OS_dispatch_group>"
{AudioStreamBasicDescription=dIIIIIIII}16@0:8
{AudioStreamBasicDescription=dIIIIIIII}24@0:8f16I20
f32@0:8@16@24
