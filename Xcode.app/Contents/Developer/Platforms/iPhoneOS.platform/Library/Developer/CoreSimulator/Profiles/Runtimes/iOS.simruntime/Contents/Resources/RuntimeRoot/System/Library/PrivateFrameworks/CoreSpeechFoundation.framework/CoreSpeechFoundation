@(#)PROGRAM:CoreSpeechFoundation  PROJECT:CoreSpeech-1
pbhw
pbtb
pbiu
otua
ciov
bhev
eltb
siar
tdtb
cvdh
cvpc
tcid
tsop
rtsh
tvps
tvmr
pbmr
ciov
emoh
cvad
fff?
(knN
?ffffff
mcpl
supo
samples_fed
best_start
best_end
best_score
is_secondchance
isEarlyDetect
[_phId = %lu]
[_decision = %lu]
[_combinedScore = %f]
[_ndapiScore = %f]
[_ndapiResult = %@]
[_recognizerScore = %f]
[_isSecondChance = %i]
[_isSecondChanceCandidate = %i]
[_isRunningQuasar = %i]
v8@?0
CSAudioTimeConverterPool
-[CSAudioTimeConverterPool _getAudioTimeConverterWithAudioStreamId:]_block_invoke
-[CSAudioChunkForTV initWithXPCObject:]
avgPower
peakPower
timeStamp
numChannels
audioFormat
streamHandleID
packets
com.apple.MobileAsset.VoiceTriggerAssets
com.apple.MobileAsset.VoiceTriggerAssetsIPad
com.apple.MobileAsset.VoiceTriggerHSAssetsIPad
com.apple.MobileAsset.VoiceTriggerAssetsWatch
com.apple.MobileAsset.VoiceTriggerHSAssetsWatch
com.apple.MobileAsset.VoiceTriggerAssetsMarsh
com.apple.MobileAsset.VoiceTriggerAssetsMac
com.apple.MobileAsset.VoiceTriggerAssetsTV
com.apple.MobileAsset.VoiceTriggerHSAssets
com.apple.corespeech
Framework
en_US_POSIX
yyyyMMdd-HHmmss
CSLogInitIfNeeded_block_invoke
Unknown
com.apple.ssr
SSRLogInitIfNeeded_block_invoke
corespeech.json
assets.json
speakerRecognition.json
adBlockerPayload.bin
mitigation.json
hybridendpointer.json
hybridendpointer_marsh.json
/System/Library/PrivateFrameworks/CoreSpeechDarwin.framework
PrivateFrameworks/CoreSpeech.framework
+[CSAsset fallBackAssetResourcePath]
defaultFallbackHearst
defaultFallbackAdBlocker
-[CSAsset initWithResourcePath:configFile:configVersion:assetProvderType:]
+[CSAsset decodeJson:]
-[CSAsset getNumberForKey:category:default:]
-[CSAsset getStringForKey:category:default:]
-[CSAsset getValueForKey:category:]
configVersion:%@ resourcePath:%@ path:%@
MobileAssets
Trial
+[CSAsset isLeftConfigVersion:newerThanRightConfigVersion:]
Premium
%@_%@
nohash
((?:[a-z]|[0-9])*)\.asset
-[CSAsset assetHashInResourcePath:]
%02x
-[CSReusableBufferBackingStore configureWithBytes:length:]
CSInitialContinousZeros
CSMaxContinousZeros
CSMidSegmentContinousZeros
start
vector
best_phrase
early_warning
is_rescoring
CSOSTransactionStat
-[CSOSTransactionStat reportCreation]_block_invoke
-[CSOSTransactionStat reportDestroy]_block_invoke
+[CSUtils(Security) checkEntitlementForToken:withEntitlement:]
+[CSUtils(Security) getTokenFromDictionary:withTokenKey:]
com.apple.da
liveOnHomePod
DeviceClassNumber
IsVirtualDevice
CSIsVirtualMachine_block_invoke
U+73bmG4kBGj6kpreQXUTQ
DeviceSupportsUSBTypeC
InternalBuild
CSResourcePathInSystemDomainMaskByAppending
CSSafeSetOutErrorWithNSError
+N9mZUAHooNvMiQnjeTJ8g
PTQ+ABwag03BwO/CKvIK/A
+[CSUtils isIOSDeviceSupportingBargeIn]_block_invoke
BuildVersion
IOPlatformExpertDevice
+[CSUtils deviceHwRevision]
config-number
yyyyMMdd
Siri
BluetoothFeatures
AnnounceTelephony
en-US
hang_up
RingtoneOverA2DP
CoreSpeech
support_js
+[CSUtils(AudioDevice) isHeadphoneDeviceWithRecordRoute:playbackRoute:]
+[CSUtils(AudioDevice) isBluetoothAudioDeviceConnected]
BTDetails_IsHFPRoute
+[CSUtils(AudioDevice) isBluetoothVehicleOutput]
+[CSAudioRecordContext defaultContext]
CSAudioRecordTypeUnspecified
CSAudioRecordTypeHomePress
CSAudioRecordTypeWiredHeadsetButtonPress
CSAudioRecordTypeBluetoothHeadSetButtonPress
CSAudioRecordTypeUIButtonPress
CSAudioRecordTypeServerInvoke
CSAudioRecordTypeVoiceTrigger
CSAudioRecordTypeStark
CSAudioRecordTypeTVRemote
CSAudioRecordTypeRaiseToSpeak
CSAudioRecordTypeHearstDoubleTap
CSAudioRecordTypeHearstVoice
CSAudioRecordTypeJarvis
CSAudioRecordTypePost
CSAudioRecordTypeDictation
CSAudioRecordTypeVoiceTriggerTraining
CSAudioRecordTypeOpportuneSpeaker
CSAudioRecordTypeOpportuneSpeakerListenerWithCall
CSAudioRecordTypeRemoraVoice
CSAudioRecordTypeRemoraButton
CSAudioRecordTypeDarwinVoice
CSAudioRecordTypeUnknown
recordType[%@] deviceId[%@] turnIdentifier[%@] alwaysUseBuiltInMic[%d] isRequestDuringActiveCall[%d] triggerEventInfo[%@] spokenNotification [%d]
type
alwaysUseRemoteBuiltInMic
deviceId
isRequestDuringActiveCall
triggerEventInfo
turnIdentifier
isSpokenNotification
samples_at_fire
start_sample_count
-[CSKeywordAnalyzerNDAPI initWithConfigPath:resourcePath:]
-[CSKeywordAnalyzerNDAPI _setStartAnalyzeTime:]
threshold_normal
-[CSKeywordAnalyzerNDAPI getThreshold]
threshold_logging
-[CSKeywordAnalyzerNDAPI getLoggingThreshold]
threshold_reject_logging
-[CSKeywordAnalyzerNDAPI getRejectLoggingThreshold]
CSSampleCountHostTimeConverter
Serial CSPolicy queue
triggerEndSeconds
triggerFireSeconds
earlyDetectFiredMachTime
triggerStartMachTime
triggerEndMachTime
triggerFireMachTime
twoShotAudibleFeedbackDelay
firstPassTriggerSource
Darwin
CSDarwinVoiceTriggerEventInfoProvider
CSUncompressedAudioLogging
-[CSUncompressedAudioLogging prepareLogging]_block_invoke
-[CSUncompressedAudioLogging _prepareFileForLogging]
%.0f
%.6f
-[CSUncompressedAudioLogging _setupFilePath]
%@_%@_%@.pcm
%@_%@_%@.plist
-[CSUncompressedAudioLogging appendAudioData:]_block_invoke
-[CSUncompressedAudioLogging _createFileDescriptor:protectionClass:]
interactionIdentifier
samplingTimestamp
language
samplingRate
-[CSUncompressedAudioLogging _writePlistFile]
deque
-[CSAudioChunk chunkForChannel:]
v24@?0^v8Q16
-[CSAudioChunk subChunkFrom:numSamples:forChannel:]
-[CSAudioChunk subChunkFrom:numSamples:]
-[CSAudioChunk copySubAudioChunkFrom:numSamples:to:dstBufferSize:]
-[CSAudioChunk splitAudioChunkSuchThatNumSamplesReceivedSoFar:reachesACountOf:completionHandler:]
numSamples
sampleByteDepth
startSampleCount
hostTime
arrivalHostTimeToAudioRecorder
wasBufferedAudio
data
remoteVAD
-[CSAudioCircularBuffer initWithNumChannels:recordingDuration:samplingRate:audioTimeConverter:]
-[CSAudioCircularBuffer copySamplesFromHostTime:]
-[CSAudioCircularBuffer copySamplesFrom:to:]
-[CSAudioCircularBuffer copySamplesFrom:to:channelIdx:]
-[CSAudioCircularBuffer copybufferFrom:to:]
-[CSAudioCircularBuffer copyBufferWithNumSamplesCopiedIn:]
-[CSAudioCircularBuffer reset]
copySamples
phrase
name
Hey Siri
threshold
2ndChanceThreshold
loggingThreshold
ndapiScaleFactor
recognizerThresholdOffset
recognizerScoreScaleFactor
preTriggerSilenceOffset
recognizerToken
hey_Siri
twoShotFeedbackDelayPhatic
twoShotFeedbackDelayPhaticRemora
twoShotFeedbackDelayBeep
rejectLoggingThreshold
phsRejectLoggingThreshold
kCSFSelfLoggingMHUUID
kCSFSelfLoggingSecondPassResult
-[CSFVoiceTriggerEventInfoSelfLogger logStartEventWithFirstPassStartedInfo:withMHUUID:]
CSFVoiceTriggerEventInfoSelfLogger.m
-[CSFVoiceTriggerEventInfoSelfLogger logTriggerEventWithVTEI:withMHUUID:]
-[CSFVoiceTriggerEventInfoSelfLogger logRejectEventWithVTEI:withMHUUID:withSecondPassResult:]
-[CSFVoiceTriggerEventInfoSelfLogger logCancelledEventWithMHUUID:]
-[CSFVoiceTriggerEventInfoSelfLogger logTwoShotEndEventWithSuppresedAlert:withTimedOut:withMHUUID:]
-[CSFVoiceTriggerEventInfoSelfLogger logTwoShotStartEventWithPromptType:withMHUUID:]
-[CSFVoiceTriggerEventInfoSelfLogger logTwoShotDetectedWithMHUUID:]
-[CSFVoiceTriggerEventInfoSelfLogger logSiriLaunchStartedWithVoiceTriggerEventInfo:]
-[CSFVoiceTriggerEventInfoSelfLogger logSiriLaunchCompletedWithVoiceTriggerEventInfo:]
%@-%@
-[CSOSTransaction initWithDescription:]
-[CSOSTransaction dealloc]
continuousVoiceTrigger
configFileNDAPI
twoShotThreshold
twoShotDecisionWaitTime
voiceTriggerPhraseIds
silencePhraseIds
config.txt
config_marsh.txt
self.integerValue
+[CSFTimeUtils hostTimeFromSampleCount:anchorHostTime:anchorSampleCount:sampleRate:]
+[CSFTimeUtils sampleCountFromHostTime:anchorHostTime:anchorSampleCount:sampleRate:]
+[CSFTimeUtils macHostTimeFromBridgeHostTime:]
i32@?0^I8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16^^{AudioStreamPacketDescription}24
-[CSPlainAudioFileWriter initWithURL:inputFormat:outputFormat:]
-[CSPlainAudioFileWriter addSamples:numSamples:]
json
yyyy_MM_dd-HHmmss.SSS
productType
productVersion
buildVersion
-[CSPlainAudioFileWriter addContextKey:withContext:]
-SL.json
-[CSPlainAudioFileWriter createAcousticMetaFileForContext:withContext:]
-[CSPlainAudioFileWriter addContextKey:fromMetaFile:]
+[CSPlainAudioFileWriter saveAudioChunck:toURL:]
com.apple.voicetrigger
com.apple.voicetrigger.notbackedup
kCSPreferencesJarvisTriggerModeDidChangeDarwinNotification
VoiceTrigger Enabled
Phrase Detector Enabled
VoiceTriggerEverUsed
AttentiveSiri AudioLogging Enabled
-[CSFPreferences isAttentiveSiriAudioLoggingEnabled]
Enable Two Shot Notification
Attending Timeout
-[CSFPreferences getAttendingTimeoutConfig]
com.apple.demo-settings
StoreDemoMode
HomePod
Mosquito
Adaptive Siri Volume Disabled
File Logging Level
/var/mobile
Library
Logs/CrashReporter/VoiceTrigger/audio/
VoiceTrigger/nearmiss/audio/
/Logs/CrashReporter/Assistant/MHLog/
VoiceTrigger/RemoteP2PLogs/
RemoteGradingData/
/Logs/CrashReporter/Assistant/smartSiriVolumeContextAwareLogs/
Logs/CrashReporter/Assistant/smartSiriVolumeContextAwareLogs/
-[CSFPreferences getSSVLogFilePathWithSessionIdentifier:]
/tmp
%@/SSV_%@.json
VoiceTrigger/TrialAssetData
/Logs/CrashReporter/Assistant/
SpeechLogs
-[CSFPreferences assistantAudioFileLogDirectory]
VoiceTrigger
siriBC
Second Pass Audio Logging Enabled
Speaker Recognition Audio Logging Enabled
Personalized Siri Enrollment Audio Logging Enabled
Jarvis Audio Logging Enabled
Jarvis Trigger Mode
Enable SoS Audio Logging
Force VoiceTrigger AP Mode
-[CSFPreferences forceVoiceTriggerAPMode]_block_invoke
Force VoiceTrigger AOP Mode
-[CSFPreferences forceVoiceTriggerAOPMode]_block_invoke
RemoraDevices
@"NSMutableDictionary"16@?0@"NSMutableDictionary"8
Accessory Media Playback Status
Accessory Media Playback Interrupted Time
Accessory Alarm Playback Status
Accessory Timer Playback Status
com.apple.corespeech.CSPreferencesSetValueForKey
mobile
com.apple.corespeech._CSNotBackedupPreferencesSetValueForKey
Logs/CrashReporter/CoreSpeech/sos/
-[CSFPreferences getStartOfSpeechAudioLogFilePath]
yyyyMMdd_HHmmss.SSS
%@/%@
Remote VoiceTrigger Delay
Remote VoiceTrigger Endpoint Timeout
VoiceTrigger/interstitial
Myriad File Logging Enabled
Audio Injection Enabled
Programmable Audio Injection Enabled
Speex Audio Injection Enabled
-[CSFPreferences enableAudioInjection:withKey:]
-[CSFPreferences audioInjectionEnabledWithKey:]_block_invoke
-[CSFPreferences setAudioInjectionFilePath:]
Audio Injection File Path
-[CSFPreferences audioInjectionFilePath]
-[CSFPreferences audioInjectionFilePath]_block_invoke
v32@?0@8Q16^B24
SpeakerId Enabled
SpeakerId Score Type
SmartSiriVolume SoftVolume Enabled
Adaptive Siri Volume State Intent Time
Adaptive Siri Volume State Intent Valid For Seconds
Adaptive Siri Volume State Permanent Offset Enabled
Adaptive Siri Volume State Permanent Offset Factor
Adaptive Siri Volume State Intent Type
Audio Session Activation Delay
Max Number Logging Files
Max Number Grading Files
Enable SiriActivation HomePod
Enable SiriActivation watchOS
Overwrite Remote VAD Score
Hearst First Pass Model Version
Hearst Second Pass Model Version
Hearst Fake Model Path
VoiceTrigger Companion Sync Enabled
Enable OpportuneSpeakListener Bypass
Bypass Personalized HeySiri
MultiPhraseVTEnabled
MultiChannelAudioLoggingEnabled
Enable AdBlocker Audio Logging
Enable Self Trigger Audio Logging
Adaptive Siri Volume State Intent Volume
Adaptive Siri Volume State Latest Volume Time
Adaptive Siri Volume State Latest Volume
-[CSFPreferences getASVUserIntent:]
-[CSFPreferences setSiriLanguageCodeDarwin:]
Siri Language Code Darwin
-[CSFPreferences languageCodeDarwin]
Remote Darwin Ever Connected
Idle User Prevent Sleep Assertion Acquition Time
Enable P2P Transfer
Enable Reduced PHS Threshold
Enable Model Benchmarking
NearMissAudioLoggingLevel
Endpoint Enhanced Logging
Endpoint Asset Overriding Enabled
Endpoint Asset Overriding File Path
Endpoint Asset Bypass Trial Enabled
VoiceTrigger Asset Overriding File Path
Mitigation Asset Overriding File Path
Bypass Trial Assets
SelfTrigger Enabled in Accessory
-[CSFPreferences setSelfTriggerEnabledAccessory:]
-[CSFPreferences isSelfTriggerEnabledAccessory]
Enable VoiceTrigger Mlock
Bypass SpeakerId based Mitigation
SpeakerID Score Override Map
First Pass Debug
Force Mitigate For HybridSDSD
Power Logging Current Asset Config Version
Power Logging Current Language
beepLocation
statsComputed
beepPower
signalPower
originalPower
absMaxVal
above95pcOfMax
totalInputSamples
totalOutputSamples
jbl_begin.bin
-[CSBeepCanceller init]
-[CSBeepCanceller willBeep]
-[CSBeepCanceller reset]
voiceTriggerFirstPass
delaySecondsForChannelSelection
masterChannelScoreBoost
processingChunkSeconds
processingChannelsBitset
+[CSVoiceTriggerFirstPassConfigDecoder decodeConfigFrom:]
-[CSFRangeUtils initWithStartPoint:endPoint:]
-[CSFRangeUtils hasIntersectionWithRange:]
Dispose Log Queue
+[CSUtils(Directory) removeLogFilesInDirectory:matchingPattern:beforeDays:]_block_invoke
v24@?0@"NSArray"8^@16
+[CSUtils(Directory) clearLogFilesInDirectory:matchingPattern:exceedNumber:]_block_invoke_2
+[CSUtils(Directory) clearLogFilesInDirectory:matchingPattern:exceedNumber:]_block_invoke
+[CSUtils(Directory) loggingFilePathWithDirectory:token:postfix:]
%@-%@.%@
+[CSUtils(Directory) _createLoggingDirectoryIfNeeded:]
Unable to get %@ for file at %@: %@
q24@?0@"NSURL"8@"NSURL"16
B24@?0@"NSURL"8@"NSDictionary"16
+[CSUtils(Directory) _contentsOfDirectoryAtURL:matchingPattern:includingPropertiesForKeys:error:]
assetDownloadfailed
assetFetchfailed
VoiceId
satinitfailed
satmodelfilefailed
satvectorfailed
tdsrfailed
tdsrtimeout
retrainsatfailed
explicituttrejected
toolessaudiofiles
unrecognizedmetadata
delayedscores
missinghomeidforclouduser
voiceidstaleprofiledetected
Audio
didStartWatchDogFire
didStopWatchDogFire
audioDeliveryWatchDogFire
streamDeallocDuringStreaming
resourceNotAvailable
recordStoppedBySessionInterruption
recordStoppedByMixedSessionInterruption
InsufficientPriority
audioCodecError
hardwareConfigurationChanged
speechStopFailure
speechPrepareFailure
speechStartFailure
hardwareRemoved
noHardwareError
noRouteAvailable
secondPassCompleteWatchDogFire
APLeak
APStuckInTransition
launchSlow
Endpointer
endpointerModelVersionIsNil
Ures
requestRCNotFound
SiriPower
consectutiveFalseFirstPassTriggers
remoteCoreSpeech
remoteCoreSpeechSubtypeStartAudioRecordingFailed
-[CSPhraseDetector dealloc]
-[CSPhraseDetector setRunAsSecondChance:]
-[CSPhraseDetector reset]
-[CSPhraseDetector setConfig:]
enabled
disabled
-[CSPhraseDetector _phraseDetectorResultFromNDAPIResults:quasarResult:forceMaximized:]
-[CSPhraseDetector _getResultWithPhId:phraseDetectorInfo:ndapiResult:quasarResult:forceMaximized:]
-[CSPhraseDetector _resultCopyWithKeywordDetectorDecision:bestPhId:phraseResult:]
Dictation
triggerConfidence = %lf
-[CSSyncKeywordAnalyzerQuasar initWithConfigPath:triggerTokensArray:preventDuplicatedReset:memoryLock:]
-[CSSyncKeywordAnalyzerQuasar reset]
-[CSSyncKeywordAnalyzerQuasar getResultsFromFlushedAudio]
-[CSSyncKeywordAnalyzerQuasar getAnalyzedResultsFromAudioChunk:]
-[CSSyncKeywordAnalyzerQuasar _getAnalyzedResults:]
+[CSSyncKeywordAnalyzerQuasar dumpEARSpeechRecognitionResults:]
-[CSAudioZeroCounter getZeroStatisticsFromBuffer:entireSamples:]
-[CSAudioZeroCounter stopCountingZeroStatisticsWithReporter:]
com.apple.transcribe.Transcriber
-[CSKeywordAnalyzerQuasar initWithConfigPath:triggerTokens:useKeywordSpotting:]
-[CSKeywordAnalyzerQuasar initWithConfigPath:triggerTokens:useKeywordSpotting:]_block_invoke
-[CSKeywordAnalyzerQuasar reset]
-[CSKeywordAnalyzerQuasar dealloc]
-[CSKeywordAnalyzerQuasar runRecognition]
-[CSKeywordAnalyzerQuasar runRecognition]_block_invoke
-[CSKeywordAnalyzerQuasar endAudio]
-[CSKeywordAnalyzerQuasar endAudio]_block_invoke
-[CSKeywordAnalyzerQuasar _recognizeWavData:length:]
-[CSKeywordAnalyzerQuasar speechRecognizer:didRecognizePartialResult:]_block_invoke
-[CSKeywordAnalyzerQuasar speechRecognizer:didRecognizeFinalResults:]_block_invoke
-[CSKeywordAnalyzerQuasar _phIdToCtcScoreMap]
-[CSKeywordAnalyzerQuasar speechRecognizer:didFinishRecognitionWithError:]_block_invoke
-[CSKeywordAnalyzerQuasar _getConfidence:]_block_invoke
v32@?0@"_EARSpeechRecognitionToken"8Q16^B24
OPP-
PCM-
OPUS_
Ads-
PHS-
OSD-
-synced
com.apple.CoreSpeech.AudioLogging
+[CSAudioFileManager generateDeviceAudioLogging:speechId:]_block_invoke
FLLR
+[CSAudioFileManager _readDataFromFileHandle:toFileHandle:]
%@%@.wav
%@/%@%@%@.wav
%@/%@%@.wav
+[CSAudioFileManager _createAudioFileWriterForAdBlockerWithLoggingDir:inputFormat:outputFormat:withAccessoryID:]
+[CSAudioFileManager _createAudioFileWriterForOpportuneSpeakListenerWithLoggingDir:inputFormat:outputFormat:]
+[CSAudioFileManager _createAudioFileWriterWithLoggingDir:withLoggingUUID:inputFormat:outputFormat:]
+[CSAudioFileManager _createAudioFileWriterForPHSTrainingWithLoggingDir:inputFormat:outputFormat:]
+[CSAudioFileManager _createAudioFileWriterForOSDWithLoggingDir:inputFormat:outputFormat:]
^%@*
%@(%@)?.wav$
+[CSAudioFileManager cleanupOrphanedGradingFiles]
+[CSAudioFileManager cleanupOrphanedGradingFiles]_block_invoke
v32@?0@"NSString"8@"NSURL"16^B24
attsiri
+[CSAudioFileManager audioFileWriterForAttentiveSiri]
%@.wav
CSFVoiceTriggerEventInfoSelfLoggerDarwin Queue
event
startVoiceTrigger
stopVoiceTrigger
HeySiriEnabled
Language
ModelVersion
languageCode
resourcePath
configVersion
assetHash
CSRemoteAssetManager
-[CSRemoteAssetManager _loadPreinstalledAssetMetaIfNeeded]
preinstalledMeta.json
VoiceTrigger/assetMeta.json
-[CSRemoteAssetManager _writeToJsonFile:]
-[CSRemoteAssetManager _loadJsonDataFromFile:]
-[CSRemoteAssetManager setLanguageCode:resourcePath:configVersion:assetHash:assetType:]
-[CSSelectiveChannelAudioFileWriter initWithURL:inputFormat:outputFormat:channelBitset:]
v16@?0Q8
-[CSSelectiveChannelAudioFileWriter addSamples:numSamples:]
%@ {backingStoreCapacity = %tu (bytes), minimalNumberOfBackingStores = %tu, maximumNumberOfBackingStores = %tu, backingStoreIdleTimeout = %f (seconds)}
-[CSDispatchGroup leave]
voiceTriggerSecondPass
voiceTriggerSecondPassAOP
voiceTriggerSecondPassAP
voiceTriggerSecondPassHearst
voiceTriggerSecondPassJarvis
voiceTriggerSecondPassRemora
voiceTriggerSecondPassPlus
voiceTriggerSecondPassDuringRingtone
voiceTriggerSecondPassDuringConnectedCall
voiceTriggerSecondPassEnrollment
preTriggerAudioTime
analyzerPrependingAudioTime
analyzerTrailingAudioTime
configFileRecognizer
recognizer.json
useKeywordSpotting
remoteVADThreshold
minimumPhraseLengthForVADGating
remoteVADMyriadThreshold
secondPassShadowMicScoreThresholdForVADGating
phrasesToSkipBoronDecisionMaking
+[CSVoiceTriggerSecondPassConfigDecoder decodeConfigFrom:forFirstPassSource:]
%s Requested audioTimeConverter on invalid streamHandleId
%s invalid packets
%s ::: CoreSpeech logging initialized (%s)
%s ::: SSR logging initialized (%s)
%s Fallback asset resource path : %{public}@
%s %{public}@
%s Cannot find corespeech asset from resourcePath : %{public}@
%s Configuration file is not exists : %{public}@
%s Cannot read configuration file : %{public}@
%s Cannot decode configuration json file : %{public}@
%s Configuration json file is not expected format
%s Cannot access to %{public}@ %{public}@ using default value=%{public}@
%s Cannot access to %{public}@ %{public}@
%s Comparing %{public}@ with %{public}@
%s Invalid rightConfig syntax : %{public}@
%s Invalid leftConfig syntax : %{public}@
%s Not comparable with %{public}@, ignore
%s Failed to create regular expression : %{public}@
%s Failed to allocate buffer since length zero
%s Failed to allocate buffer since length is larger than configuration
%s NumTransactionNow = %d
%s Entitlement was nil. We will assume process is not entitled.
%s Attempting to check %@ for entitlement: %@
%s Error creating audit token for: %@
%s Warning SecTaskCopyValueForEntitlement failed for token %@ with error (%ld)
%s Error Issue retrieving entitlement
%s Token dict: %@ and tokenString: %@ both must be non nil
%s isVirtualMachine ? %{public}@
%s Resource path %@ is not founded in system domain mask, returning nil path
%s More than 1 path %@ are founded in system domain mask, returning the last one as default
%s ERR: %{public}@
%s Device supporting barge-in ? %{public}@
%s Failed to find matching service to IOPlatformExpertDevice
%s Fetched hardware revision : %{public}@
%s Failed to find property "config-number"
%s Record route = %{public}@, playback route = %{public}@
%s Device endpointType = %{public}lu
%s hypotheticalRoute = %{public}@
%s Audio route changing to HFP is expected
%s default to recordContext : %{public}@
%s NDAPI initialization failed
%s set StartAnalyzeSampleCount = %{public}lld
%s NDAPI config doesn't contain threshold_normal
%s NDAPI config doesn't contain threshold_logging
%s NDAPI config doesn't contain threshold_reject_logging
%s Assistant Sampling: uncompressed audio logging will be enabled for this Siri request
%s Assistant Sampling: uncompressed audio logging will be disabled for this Siri request
%s Assistant Sampling: Unable to create FD on audioFilePath : (%{public}@)
%s Assistant Sampling: Failed to create directory : %@
%s Assistant Sampling: Unable to writeData : %{public}@
%s Assistant Sampling: Creating logging file : %@
%s Assistant Sampling: Failed to serialize plistRoot into plist : %{public}@
%s Failed to create FD for plist file
%s channelId %d out of bound %d
%s Cannot generate subChunk since channel(%{public}tu) is larger than number of channels(%{public}tu)
%s Cannot generate subChunk if it reuqest more than it has : %{public}tu %{public}tu %{public}tu
%s Unable to write subChunk into dstBufferSize(%d) : required buffer size (%d)
%s SpkrId:: Processing ended at: numSamplesProcessed=%lu, totalSampleCountToReach=%lu
%s numChannels: %{public}lu, recordingDuration: %{public}f, sampleRate: %{public}f
%s Cannot copy samples since this is empty
%s Could NOT copyFrom: %{public}lu to: %{public}lu, retSampleCount: %{public}lu
%s copyBuffer: oldestSample: %{public}lu latestSample: %{public}lu, numSamplesCopied: %{public}lu
%s CSAudioCircularBuffer.reset
%s Invalid request: reqStartSample=%{public}lu, reqEndSample=%{public}lu, oldestSampleInBuffer: %{public}lu, latestSampleInBuffer=%{public}lu
%s Creating OS Transaction for %{public}@
%s Release OS Transaction for %{public}@
%s Delta is larger than anchorHostTime: anchorSampleCount = %{public}lld, sampleTime = %{public}lld, anchorHostTime = %{public}lld
%s Delta is larger than anchorSampleCount
%s Not supported on this platform
%s ::: Error creating output file %{public}@, err: %{public}d
%s ::: Error writing to output wave file. : %{public}ld
%s metaInfo passed is nil - Bailing out
%s Unable to read data from file: %@
%s Could not read existing %@ file: err: %@
%s ERR: Failed to create json %{public}@ with %{public}@
%s saveAudioChunk toURL: %{public}@
%s Invalid request: nothing to write to file
%s enabled:%u
%s attendingTimeout: %f
%s Couldn't create SSV log directory at path %{public}@ %{public}@
%s Couldn't create speech log directory at path %{public}@ %{public}@
%s Force enabling VoiceTrigger AP mode ? %{public}@
%s Force enabling VoiceTrigger AOP mode ? %{public}@
%s Couldn't create SoS log directory at path %{public}@ %{public}@
%s enableAudioInection: is only available on internal builds
%s enabled: %@
%s setAudioInjectionFilePath: is only available on internal builds
%s kCSAudioInjectionFilePathKey is not array type
%s kCSAudioInjectionFilePathKey array size = %d
%s kCSAudioInjectionFilePathKey doesn't have NSString as an array entry
%s Adaptive Siri Volume failed to load user intent type. Ignoring intent
%s Adaptive Siri Volume failed to load user intent time. Ignoring intent
%s Adaptive Siri Volume failed to load user intent volume. Ignoring intent
%s Adaptive Siri Volume failed to load latest volume time. Ignoring intent
%s Adaptive Siri Volume failed to latest volume. Ignoring intent
%s Adaptive Siri Volume failed to load permanent offset status. Defaulting to no permanent volume offset
%s Adaptive Siri Volume failed to load permanent offset factor. Defaulting to unity permanent volume offset factor
%s Loaded Adaptive Siri Volume intentType: %{public}llu, intentTime: %{public}llu, intentVolume: %{public}f, latestVolumeTime: %{public}lld, latestVolume:%{public}f, permanentOffsetIsEnabled: %{public}d, permanentOffsetFactor: %{public}f
%s Called in unexpected platform!
%s BeepCanceller asset file loading from : %{public}@
%s Could not read beep file: %@
%s beepVector Size = %{public}lu
%s Cannot initialize beep canceller
%s Beep canceller initialized with maxNumSamples = %{public}d
%s It will beep now
%s Reset beep cancellation
%s Loading 1stPass-config=%@
%s Invalid input : startPoint = %{public}llu, endPoint = %{public}llu
%s Invalid input range
%s CS logging files under %{public}@ created before %{public}@ will be removed.
%s Couldn't get creation date: %{public}@
%s Could not remove %{public}@: %{public}@
%s CS logging files number %{public}lu with pattern %{public}@ under %{public}@ exceeding limit, only keep the latest %{public}lu ones
%s Invalid token or postfix
%s Invalid log directory
%s Couldn't create logging directory at path %{public}@ %{public}@
%s Regular expression is nil!
%s Directory URL is nil!
%s CSPhraseDetector Deallocated
%s Using second chance threshold for voice trigger second pass: %{public}f
%s Failed to fetch config
%s Invalid assets config!
%s VoiceTrigger memory lock %@
%s Reset all thresholds to HUGE_VALF since NDAPI is nil
%s Using threshold from NDAPI since we are not able to use Quasar, threshold = %{public}f, logging threshold = %{public}f
%s Unable to process due to number of result mismatch, ndapiResults number = %d
%s Received invalid result with %tu
%s Phrase detector results fall-into unexpected use case
%s [(%lu)] : NDAPI second pass best score = %{public}f with analyzed samples:                   %{public}tu with quasar score = %{public}f, ndapi scale factor = %{public}f, quasar scale factor = %{public}f
%s [(%tu)] : Trigger detected with %{public}tu analyzed samples in NDAPI,                   combined score = %{public}lf, effective threshold = %{public}f
%s [(%tu)] : Detected near miss at %{public}lu samples                       with best score up to: %{public}.3f
%s [(%tu)] : Waiting for logging near miss                               until timeout %{public}lu samples
%s [(%tu)] : Detected near miss candidate at %{public}tu,                       let's wait %{public}tu samples to log
%s [(%tu)] : Notify second pass reject at: %{public}tu                   with best score up to: %{public}.3f
%s Reporting decision (%tu) from (%tu)
%s Initializing Quasar with config: %{public}@
%s Failed initialization in _EARSyncSpeechRecognizer initWithConfiguration
%s ERR: Exception initializing _EARSyncSpeechRecognizer: %{public}s
%s Speech model loading took %{public}.3fms
%s endAudio failed
%s processAudioChunk failed
%s Invalid token : %{public}@
%s %tu, token = %{public}@
%s Unable to handle: %d
%s Res-%lu: 
%s tok=%@
%s In %@: Continuous digital zero detected, lasting %{public}u samples per channel
%s In %@: Continuous digital zero in this audio chunk detected, lasting %{public}u samples per channel
%s Transcriber trigger token list: %{public}@
%s runRecognition failed
%s recognizeWavData failed
%s Partial result confidence: %{public}f
%s CTC: Adding tok=%{public}@
%s CTC: Ignoring tok=%{public}@
%s MpVT: phId=%{public}@, tok=%{public}@
%s ERROR: %{public}s
%s CTC: Final-tok: %@(%f):%@
%s Final result confidence: %{public}f
%s EAR Token[%{public}lu]: %s (%{public}f)
%s Plan removing the temp file %{public}@
%s Failed to remove temp file %{public}@ reason: %{public}@
%s Start copying %{public}u bytes of data to crashreporter with wav file header offset %{public}llu
%s Failed to read data from %{public}@
%s Finished copying data to crashreporter.
%s Logging audio file into : %{public}@
%s ERR: reading contents of gradingDir: %{public}@ with error %{public}@
%s Deleting orphaned grading file %{public}@
%s ERR: Failed to delete %{public}@ with error %{public}@
%s Removing non-dir at AttentiveSiri AudioLog dir: %@
%s Error removing %@: err: %@
%s Failed to create AudioLogging directory for AttentiveSiri: %@
%s Created AudioLogging dir for AttentiveSiri at: %@
%s Skip reload assets, already up-to-date
%s preinstalled model meta not found : %{public}@
%s Invalid rawRemoteAssetMeta : %{public}@
%s Cannot create json file : %{public}@
%s Creating directory : %{public}@
%s Cannot remove asset meta file : %{public}@, %{public}@
%s Remote asset file is not exists : %{public}@
%s LanguageCode : %{public}@, resourcePath : %{public}@, configVersion : %{public}@, assetHash : %{public}@
%s unbalanced dispatch_group_enter and leave : ignore we are ignore dispatch_group_leave
%s CategoryKey %{public}@ not found, falling back to default
CSKeywordAnalyzerNDEAPIResult
CSKeywordAnalyzerNDEAPI
CSSinglePhraseResult
NSCopying
CSVoiceTriggerAirPodWearerDetectionConfig
CSAudioTimeConverterPool
CSVoiceTriggerFirstPassConfig
CSAudioChunkForTV
CSMobileAssetVersions
CSAsset
CSVoiceTriggerSecondPassConfig
CSVTUITrainingSelfLogger
CSVoiceTriggerPhraseConfig
CSReusableBufferBackingStore
CSReusableSharedMemoryBackingStore
CSReusablePrivateMemoryBackingStore
CSAudioZeroFilter
CSNovDetectorResult
CSNovDetector
CSOSTransactionStat
CSFAudioMetricsSelfLogger
CSAudioPlayingAppMonitor
Security
CSUtils
AudioDevice
CSAudioRecordContext
CSADPPreventStandbyAssertion
CSKeywordAnalyzerNDAPIResult
CSKeywordAnalyzerNDAPI
CSAudioTimeConverter
CSPolicy
CSEventMonitorDelegate
NSObject
CSDarwinVoiceTriggerEventInfoProvider
CSUncompressedAudioLogging
CSAudioChunk
CSAudioCircularBuffer
CSAudioPlayingApp
CSVoiceTriggerPhraseConfigDecoder
CSConfig
CSFVoiceTriggerEventInfoSelfLogger
CSOSTransaction
CSContinuousVoiceTriggerConfigDecoder
CSFTimeUtils
CSAudioDecoder
CSPlainAudioFileWriter
CSAudioFileWriter
CSFPreferences
CSBeepCanceller
CSVoiceTriggerFirstPassConfigDecoder
CSPowerAssertionAccessory
CSFRangeUtils
Directory
CSDiagnosticReporter
CSAudioPowerMeter
CSPhraseDetector
CSFVoiceTriggerEventInfoSelfLoggerEmbedded
CSSyncKeywordAnalyzerQuasarResult
CSSyncKeywordAnalyzerQuasar
CSAudioZeroCounter
CSContinuousVoiceTriggerConfig
CSKeywordAnalyzerQuasar
_EARSpeechRecognitionResultStream
CSPhraseDetectorInfo
CSReusableBufferPool
CSAudioFileManager
CSFCircularEventsCacheBuffer
CSFVoiceTriggerEventInfoSelfLoggerDarwin
CSPowerLogger
CSRemoteAssetManager
CSSelectiveChannelAudioFileWriter
CSReusableBufferPoolConfiguration
CSFLPCMTypeConverter
CSDispatchGroup
CSFAudioStreamBasicDescriptionFactory
CSVoiceTriggerSecondPassConfigDecoder
T@"CSSyncKeywordAnalyzerQuasar",&,N,V_syncKeywordAnalyzerQuasar
.cxx_destruct
T@"NSObject<OS_xpc_object>",R,N
CSRemoteAssetManagerDidDownloadNewAsset:
T@"NSString",&,N,V_samplingDate
JSONObjectWithData:options:error:
Tf,N,V_avgPower
T@"<CSAudioDecoderDelegate>",W,V_delegate
_anchorHostTime
T@"<CSKeywordAnalyzerNDEAPIScoreDelegate>",W,N,V_delegate
_buffer
T@"CSAudioTimeConverter",&,N,V_audioTimeConverter
_getConfidence:
T@"CSFCircularEventsCacheBuffer",&,N,V_firstPassEvents
_isEarlyWarning
T@"CSKeywordAnalyzerNDAPI",&,N,V_syncKeywordAnalyzerNDAPI
_lastEventIndex
T@"CSReusableBufferPoolConfiguration",R,N,V_configuration
_streamHandleID
T@"CSVoiceTriggerPhraseConfig",&,N,V_phraseConfig
_turnIdentifier
T@"NSArray",R,N,V_phrasesToSkipBoronDecisionMaking
analyzeWavFloatData:numSamples:
T@"NSArray",R,N,V_voiceTriggerPhIds
assetConfigVersionForAssetType:
T@"NSData",R,N,V_data
audioFileWriterForAttentiveSiri
T@"NSDictionary",&,N,V_ctcKwdToPhIdMap
bestEnd
T@"NSFileHandle",&,N,V_audioFileHandle
cancelledEvents
T@"NSMutableArray",&,N,V_phraseResult
clearMyriadSettingsOnAccessory:
T@"NSMutableDictionary",&,N,V_pool
containsObject:
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
ctcKwdToPhIdMap
T@"NSString",&,N,V_deviceId
dataWithLength:
T@"NSString",&,N,V_requestId
delaySecondsForChannelSelection
T@"NSString",&,N,V_samplingTimestamp
fileURL
T@"NSString",&,N,V_turnIdentifier
getBoolForKey:category:default:
T@"NSString",R,N
initWithFormat:
T@"NSString",R,N,V_bundleId
initWithRequestId:languageCode:
T@"NSString",R,N,V_configPathRecognizer
initWithResult:
T@"NSString",R,N,V_name
isProxy
T@"NSString",R,N,V_recognizerToken
isRunningQuasar
T@"NSURL",R,N,V_fileURL
isServerInvoked
TB,N,V_earlyWarning
logMHAssistantDaemonAudioInitContextWithMHUUID:withInitStarted:
TB,N,V_isEarlyDetect
myriadThreshold
TB,N,V_isRequestDuringActiveCall
outASBD
TB,N,V_isRescoring
packets
TB,R,N
recognizerToken
TB,R,N,V_isSecondChance
release
TB,R,N,V_useKeywordSpotting
runRecognitionWithResultStream:
TB,R,N,V_wasBuffered
seekToEndOfFile
TI,N,V_audioFormat
setHearstFirstPassModelVersion:
TI,R,N,V_numberOfChannels
setLanguageCode:resourcePath:configVersion:assetHash:assetType:
TQ,N,V_anchorHostTime
setPowerLoggingCurrentLanguage:
TQ,N,V_bestEnd
setSelfTriggerEnabledAccessory:
TQ,N,V_bestStart
ssvLogDirectory
TQ,N,V_nearMissCandidateDetectedSamples
stringFromDate:
TQ,N,V_numInputChannels
version
.cxx_construct
T@"NSArray",R,N,V_phraseConfigs
CSEventMonitorDidReceiveEvent:
T@"NSString",&,N,V_languageCode
EncryptionAudioSampleByteDepth
T@"NSString",R,N,V_resourcePath
T#,R
Tf,R,N,V_processingChunkSeconds
T@"<CSBeepCancellerDelegate>",W,N,V_delegate
_arrivalHostTimeToAudioRecorder
T@"<CSKeywordAnalyzerQuasarScoreDelegate>",W,N,V_delegate
_decay1
T@"CSFCircularEventsCacheBuffer",&,N,V_cancelledEvents
_inASBD
T@"CSFCircularEventsCacheBuffer",&,N,V_rejectEvents
_isSecondChance
T@"CSKeywordAnalyzerNDAPIResult",R,N,V_ndapiResult
_sha1ForString:
T@"CSVoiceTriggerAirPodWearerDetectionConfig",R,N,V_wearerDetectionConfig
_syncRecognizer
T@"NSArray",&,N,V_packets
_writePlistFile
T@"NSArray",R,N,V_silencePhIds
appName
T@"NSData",&,N,V_remoteVAD
audioFileHandle
T@"NSDictionary",&,N,V_activationMetadata
baseDir
T@"NSDictionary",R,N
bundleForClass:
T@"NSMutableArray",&,N,V_phraseDetectorInfos
cleanup
T@"NSMutableArray",R,N,V_eventsArray
configPathNDAPI
T@"NSMutableDictionary",&,N,V_triggerInfos
containsString:
T@"NSString",&,N,V_audioFilePath
dataForChannel:
T@"NSString",&,N,V_plistFilePath
dealloc
T@"NSString",&,N,V_samplingDirectory
deviceRequirePowerAssertionHeld
T@"NSString",&,N,V_samplingTimestampDetail
firstPassEvents
T@"NSString",R,C
getOptionValue:
T@"NSString",R,N,V_appName
initWithLength:
T@"NSString",R,N,V_configPathNDAPI
initWithResourcePath:configFile:configVersion:assetProvderType:
T@"NSString",R,N,V_configVersion
isBluetoothAudioDeviceConnected
T@"NSString",R,N,V_path
isRequestFromSpokenNotification
T@"NSString",R,N,V_version
isSelfTriggerFileLoggingEnabled
TB,N,V_alwaysUseRemoteBuiltInMic
isUIButtonPress
TB,N,V_hasPendingNearMiss
metrics
TB,N,V_isEarlyWarning
numberWithBool:
TB,N,V_isRequestFromSpokenNotification
outputs
TB,N,V_isSecondChance
recognizerScore
TB,R,N,V_isRunningQuasar
recycleHostTime
TB,R,N,V_isSecondChanceCandidate
removeObserver:
TB,R,N,V_useRecognizerCombination
sampleByteDepth
TI,N,V_activePhId
setAudioFormat:
TI,N,V_numChannels
setIsRescoring:
TQ,N,V_activeChannel
setNumChannels:
TQ,N,V_anchorSampleCount
setSawInfinity:
TQ,N,V_bestPhrase
setWithObjects:
TQ,N,V_bufferLength
stringByAppendingPathComponent:
TQ,N,V_nearMissDelayTimeout
supportRemoteDarwinVoiceTrigger
TQ,N,V_phId
TQ,N,V_recycleHostTime
TQ,N,V_sampleFed
TQ,N,V_samplesAtFire
TQ,N,V_samplesFed
TQ,N,V_startSampleCount
TQ,N,V_streamHandleID
TQ,N,V_timeStamp
TQ,R
TQ,R,N,V_arrivalHostTimeToAudioRecorder
TQ,R,N,V_assetProvider
TQ,R,N,V_backingStoreCapacity
TQ,R,N,V_decision
TQ,R,N,V_endPoint
TQ,R,N,V_hostTime
TQ,R,N,V_maximumNumberOfBackingStores
TQ,R,N,V_minimalNumberOfBackingStores
TQ,R,N,V_numChannels
TQ,R,N,V_numSamples
TQ,R,N,V_phId
TQ,R,N,V_processingChannelsBitset
TQ,R,N,V_sampleByteDepth
TQ,R,N,V_startPoint
TQ,R,N,V_startSampleCount
Td,N,V_triggerConfidence
Td,R,N,V_backingStoreIdleTimeout
Td,R,N,V_triggerConfidence
Tf,N,V_bestScore
Tf,N,V_effectiveKeywordThreshold
Tf,N,V_inputRecordingDuration
Tf,N,V_peakPower
Tf,R,N,V_combinedScore
Tf,R,N,V_delaySecondsForChannelSelection
Tf,R,N,V_keywordRejectLoggingThreshold
Tf,R,N,V_loggingThreshold
Tf,R,N,V_masterChannelScoreBoost
Tf,R,N,V_minimumPhraseLength
Tf,R,N,V_myriadThreshold
Tf,R,N,V_ndapiScaleFactor
Tf,R,N,V_ndapiScore
Tf,R,N,V_preTriggerAudioTime
Tf,R,N,V_preTriggerSilenceOffset
Tf,R,N,V_prependingAudioTime
Tf,R,N,V_recognizerScore
Tf,R,N,V_recognizerScoreOffset
Tf,R,N,V_recognizerScoreScaleFactor
Tf,R,N,V_remoraTwoShotFeedbackDelay
Tf,R,N,V_secondChanceThreshold
Tf,R,N,V_shadowMicScoreThreshold
Tf,R,N,V_speakerRejectLoggingThreshold
Tf,R,N,V_threshold
Tf,R,N,V_trailingAudioTime
Tf,R,N,V_twoShotDecisionWaitTime
Tf,R,N,V_twoShotFeedbackDelay
Tf,R,N,V_twoShotThreshold
Ti,N,V_numTransactionNow
Tq,N,V_type
Tr^v,R,N
URLByAppendingPathExtension:
URLByDeletingLastPathComponent
URLByDeletingPathExtension
URLWithString:
URLsInDirectory:matchingPattern:completion:
UTF8String
UUID
UUIDString
_activationMetadata
_activeChannel
_activePhId
_alwaysUseRemoteBuiltInMic
_ampToDB:
_analyzeStep
_anchorSampleCount
_appName
_assetHash
_assetProvider
_audioFileHandle
_audioFilePath
_audioFormat
_audioTimeConverter
_audioZeroFilterImpl
_averagePowerF
_averagePowerI
_averagePowerPeak
_avgPower
_backingStoreCapacity
_backingStoreIdleTimeout
_beepCanceller
_beepFloatVec
_bestEnd
_bestPhrase
_bestScore
_bestStart
_borealisPowerlog:
_bufferLength
_bufferSize
_bundleId
_callback
_canCreateNewBackingStore
_cancelledEvents
_checkAllConditionsEnabled
_checkIdleBackingStores
_clearAccessorySettingForKeys:forAccessory:
_clipping
_combinedScore
_conditions
_configPathNDAPI
_configPathRecognizer
_configPowerlog:
_configVersion
_configuration
_contentsOfDirectoryAtURL:matchingPattern:includingPropertiesForKeys:error:
_continuousZeroCounter
_createAVVCContextWithType:deviceId:
_createAudioFileWriterForAdBlockerWithLoggingDir:inputFormat:outputFormat:withAccessoryID:
_createAudioFileWriterForOSDWithLoggingDir:inputFormat:outputFormat:
_createAudioFileWriterForOpportuneSpeakListenerWithLoggingDir:inputFormat:outputFormat:
_createAudioFileWriterForPHSTrainingWithLoggingDir:inputFormat:outputFormat:
_createAudioFileWriterWithLoggingDir:withLoggingUUID:inputFormat:outputFormat:
_createFileDescriptor:protectionClass:
_createLoggingDirectoryIfNeeded:
_createNewBackingStore
_csAudioCircularBufferImpl
_cs_initWithXPCObject:
_cs_xpcObject
_ctcKwdToPhIdMap
_currentBlob
_currentLanguageCode
_data
_deallocator
_decay
_decision
_decodedInfo
_decoder
_delaySecondsForChannelSelection
_delegate
_description
_deviceId
_dispatchGroup
_dispatchGroupCounter
_earlyWarning
_effectiveKeywordThreshold
_endPoint
_eventsArray
_fileURL
_firstPassEvents
_floatBuffer
_getAnalyzedResults:
_getAudioTimeConverterWithAudioStreamId:
_getAvailableBackingStore
_getDateLabel
_getResultWithPhId:phraseDetectorInfo:ndapiResult:quasarResult:forceMaximized:
_hasPendingNearMiss
_hostTime
_inputRecordingDuration
_instantaneousMode
_isAdaptiveSiriVolumeDisabled
_isDirectory:
_isEarlyDetect
_isRemoteVoiceTriggerAvailable
_isRequestDuringActiveCall
_isRequestFromSpokenNotification
_isRescoring
_isRunningQuasar
_isSecondChanceCandidate
_isSecondChanceCandidateWithScore:effectiveThreshold:secondChanceThreshold:
_isStartSampleCountMarked
_keywordAnalyzerNDAPIResultFromNovDetectorResult:phId:
_keywordRejectLoggingThreshold
_languageCode
_lastResult
_lastSampleFed
_linearToDB:
_loadFromJsonFile:
_loadJsonDataFromFile:
_loadPreinstalledAssetMetaIfNeeded
_lock
_loggingThreshold
_masterChannelScoreBoost
_maxContinuousZeroCount
_maxPeak
_maximumNumberOfBackingStores
_methodToken
_minimalNumberOfBackingStores
_minimumPhraseLength
_monitors
_myriadThreshold
_name
_ndapiResult
_ndapiScaleFactor
_ndapiScore
_nearMissCandidateDetectedSamples
_nearMissDelayTimeout
_novDetector
_numChannels
_numInputChannels
_numPhrases
_numSamples
_numTotalInputSamples
_numTotalOutputSamples
_numTransactionNow
_numberOfBackingStores
_numberOfChannels
_observers
_outASBD
_packets
_path
_peak
_peakDecay
_peakDecay1
_peakHoldCount
_peakPower
_phId
_phIdToCtcScoreMap
_phToPhIdMap
_phToPhIdMapFromTriggerTokensArray:
_phraseConfig
_phraseConfigs
_phraseDetectorInfos
_phraseDetectorResultFromNDAPIResults:quasarResult:forceMaximized:
_phraseResult
_phrasesToSkipBoronDecisionMaking
_plistFilePath
_pool
_preTriggerAudioTime
_preTriggerSilenceOffset
_prepareFileForLogging
_prependingAudioTime
_preventDuplicatedReset
_previousBlockSize
_previousUtteranceTokens
_processAudioChunk:
_processingChannelsBitset
_processingChunkSeconds
_queue
_readDataFromFileHandle:toFileHandle:
_recognizeWavData:length:
_recognizer
_recognizerBuffer
_recognizerScore
_recognizerScoreOffset
_recognizerScoreScaleFactor
_recognizerToken
_recycleHostTime
_recycleUsedBackingStore:
_recycledBackingStores
_rejectEvents
_remoraTwoShotFeedbackDelay
_remoteAssetMetaPath
_remoteVAD
_requestId
_requireReset
_reset
_resetStartAnalyzeTime
_resourcePath
_resultCopyWithKeywordDetectorDecision:bestPhId:phraseResult:
_sampleByteDepth
_sampleFed
_sampleFedWrapAroundOffset
_sampleRate
_samplesAtFire
_samplesFed
_samplingDate
_samplingDirectory
_samplingTimestamp
_samplingTimestampDetail
_savePeaks:averagePower:maxSample:
_scaleDecayConstants:
_secondChanceThreshold
_setAssetsInfoFromMetaData:
_setStartAnalyzeTime:
_setupFilePath
_shadowMicScoreThreshold
_sharedAudioLoggingQueue
_sharedDisposeLoggingQueue
_shortBuffer
_shouldDeinterleaveAudio
_silencePhIds
_sortedURLsInDirectory:matchingPattern:completion:
_speakerRejectLoggingThreshold
_startAnalyzeSampleCount
_startPoint
_startSampleCount
_storeModeEnabled
_syncKeywordAnalyzerNDAPI
_syncKeywordAnalyzerQuasar
_threshold
_timeStamp
_timeStampString
_trailingAudioTime
_transaction
_triggerConfidence
_triggerInfos
_triggerTokenList
_twoShotDecisionWaitTime
_twoShotFeedbackDelay
_twoShotThreshold
_type
_updateConfigToPreferencesWithLanguage:withModelVersion:
_updatePreferenceSettingsForAccessory:settingsUpdateBlock:
_useKeywordSpotting
_useRecognizerCombination
_version
_voiceTriggerPhIds
_wasBuffered
_wearerDetectionConfig
_writeToJsonFile:
_zapgremlins:
_zeroCounterWinSz
_zeroCounterWinSzForReport
absoluteHostTimeToContinuousHostTime:
absoluteString
activationMetadata
activeChannel
activePhId
adaptiveSiriVolumePermanentOffset
adaptiveSiriVolumeRecentIntent
addAudioSamples:count:
addConditions:
addContextKey:fromMetaFile:
addContextKey:withContext:
addEventToCacheBuffer:
addObject:
addObserver:
addObserver:forAssetType:
addPackets:audioStreamHandleId:remoteVAD:timestamp:arrivalTimestampToAudioRecorder:wasBuffered:receivedNumChannels:
addSamples:numSamples:
addSamples:numSamples:atHostTime:
adjustTwoShotDelay:
aiffFileASBD
allowExtendedRingBufferSize
alwaysUseRemoteBuiltInMic
analyzeWavData:numSamples:
anchorHostTime
anchorSampleCount
appendAudioData:
appendData:
appendFormat:
appendString:
apply12dBGainToFloatBuffer:
apply12dBGainToShortBuffer:
applyGain:toFloatBuffer:
applyGain:toShortBuffer:
applyNegative20dBGainToFloatBuffer:
applyNegative20dBGainToShortBuffer:
applyNegative32dBGainToFloatBuffer:
applyNegative32dBGainToShortBuffer:
array
arrayWithObject:
arrayWithObjects:
arrayWithObjects:count:
arrivalHostTimeToAudioRecorder
assetForAssetType:resourcePath:configVersion:
assetForAssetType:resourcePath:configVersion:assetProvider:
assetForCurrentLanguageOfType:
assetHashForAssetType:
assetHashForTrial:
assetHashInResourcePath:
assetProvider
assistantAudioFileLogDirectory
assistantLogDirectory
audioConverterBitrate
audioDecoderDidDecodePackets:audioStreamHandleId:buffer:remoteVAD:timestamp:arrivalTimestampToAudioRecorder:wasBuffered:receivedNumChannels:
audioFilePath
audioFormat
audioInjectionEnabled
audioInjectionEnabledWithKey:
audioInjectionFilePath
audioPortSubtypeAsString:
audioSessionActivationDelay
audioTimeConverter
auditTokenToString:
autorelease
avgPower
avvcActivationMode:
avvcContext
backingStoreCapacity
backingStoreIdleTimeout
beepCancellerDidCancelSamples:buffer:timestamp:
bestPhrase
bestScore
bestStart
boolValue
bufferLength
bundleId
bundlePath
bypassPersonalizedHeySiri
bypassSpeakerIdForMitigation
bypassTrialAssets
bytes
cancelBeepFromSamples:timestamp:
caseInsensitiveCompare:
categoryForFirstPass:
channelForOutputReference
channelForProcessedInput
characterSetWithCharactersInString:
checkEntitlementForToken:withEntitlement:
checkForTriggerWithBytes:withNumberOfSamples:
chunkForChannel:
class
cleanupOrphanedGradingFiles
clearAlarmPlayingStatusOnAccessory:
clearBuffer
clearLogFilesInDirectory:matchingPattern:exceedNumber:
clearMediaPlaybackInterruptedTimeOnAccessory:
clearMediaPlayingStatusOnAccessory:
clearTimerPlayingStatusOnAccessory:
closeFile
combinedScore
companionSyncVoiceTriggerUtterancesEnabled
compare:
componentsSeparatedByCharactersInSet:
componentsSeparatedByString:
confidence
configPathRecognizer
configVersion
configuration
configureWithBytes:length:
conformsToProtocol:
containsCategory:
containsKey:category:
contentsOfDirectoryAtPath:error:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
contextForBTLEWithDeviceId:
contextForBuiltInVoiceTrigger
contextForDarwinVoiceTriggerWithDeviceId:
contextForDictation
contextForHearstVoiceTriggerWithDeviceId:
contextForHomeButton
contextForJarvisWithDeviceId:
contextForOpportuneSpeakerListener
contextForOpportuneSpeakerListenerWithCall
contextForRemoraButtonTriggerWithDeviceId:
contextForRemoraVoiceTriggerWithDeviceId:
contextForServerInvoke
contextForVoiceTriggerTraining
convertSampleCountToNs:sampleRate:
convertToFloatLPCMBufFromShortLPCMBuf:
convertToShortLPCMBufFromFloatLPCMBuf:
converterForAudioStreamId:
copy
copyBufferWithNumSamplesCopiedIn:
copySamplesFrom:to:
copySamplesFrom:to:channelIdx:
copySamplesFromHostTime:
copySubAudioChunkFrom:numSamples:to:dstBufferSize:
copyWithThreshold:secondChanceThreshold:loggingThreshold:ndapiScaleFactor:recognizerScoreOffset:recognizerScoreScaleFactor:keywordRejectLoggingThreshold:
copyWithZone:
copybufferFrom:to:
count
countByEnumeratingWithState:objects:count:
createAcousticMetaFileForContext:withContext:
createAudioFileWriterForAdBlockerWithInputFormat:outputFormat:withAccessoryID:
createAudioFileWriterForOSDWithInputFormat:outputFormat:
createAudioFileWriterForOpportuneSpeakListenerWithInputFormat:outputFormat:
createAudioFileWriterForPHSTrainingWithInputFormat:outputFormat:
createAudioFileWriterForRemoteVADWithInputFormat:outputFormat:withLoggingUUID:
createAudioFileWriterWithInputFormat:outputFormat:withLoggingUUID:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createSamplingDirectory
createSelectiveChannelAudioFileWriterWithChannelBitset:
csAudioProcessingQueuePriority
currentRoute
data
dataUsingEncoding:
dataWithBytes:length:
dataWithCapacity:
dataWithContentsOfFile:
dataWithContentsOfFile:options:error:
dataWithJSONObject:options:error:
dataWithPropertyList:format:options:error:
dataWithRemoteVADWithScaleFactor:numAudioSamplesPerRemoteVAD:
date
dateWithTimeIntervalSinceNow:
daysBeforeRemovingLogFiles
debugDescription
decision
decodeConfigFileNDAPI:fromCategory:
decodeConfigFileRecognizer:fromCategory:
decodeConfigFrom:
decodeConfigFrom:category:
decodeConfigFrom:forFirstPassSource:
decodeConfigV1:category:
decodeConfigV2:category:
decodeJson:
decodePreTriggerAudioTime:fromCategory:
decodePrependingAudioTime:fromCategory:
decodeTrailingAudioTime:fromCategory:
decodeUseKeywordSpotting:fromCategory:
decodeUseRecognizerCombination:fromCategory:
decodeWearerDetectionConfig:fromCategory:
defaultContext
defaultContinousFingerprintBufferDuration
defaultContinousFingerprintBufferDurationForRemora
defaultConverter
defaultFallBackAssetForAdBlocker
defaultFallBackAssetForHearst
defaultFallBackAssetForSmartSiriVolume
defaultManager
defaultTwoShotDelay
delegate
description
deviceBuildVersion
deviceHwRevision
deviceId
deviceIdentifier
deviceProductType
deviceProductVersion
deviceRequirePreventStandbyAssertion
deviceUserAssignedName
dictionary
dictionaryWithCapacity:
dictionaryWithDictionary:
dictionaryWithObjects:forKeys:count:
disableAdaptiveSiriVolume:
distantFuture
doubleValue
dumpEARSpeechRecognitionResults:
earlyWarning
effectiveBoolValueForSetting:
effectiveKeywordThreshold
effectiveRestrictedBoolValueForSetting:
enableAudioInjection:
enableAudioInjection:withKey:
enableEndpointEnhancedLogging:
enableProgrammableAudioInjection:
endAudio
endAudioAndFetchAnyTrailingZerosPacket:
endPoint
endpointType
enter
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
eventsArray
fFile
fakeEndpointAssetPath
fakeHearstModelPath
fakeMitigationAssetPath
fakeVoiceTriggerAssetPath
fallBackAssetResourcePath
fetchAndClearCachedVoiceTriggerEventsWithCompletion:
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileLoggingIsEnabled
fileLoggingLevel
fileURLWithPath:
filterZerosInAudioPacket:atBufferHostTime:filteredPacket:
filteredArrayUsingPredicate:
firstMatchInString:options:range:
firstObject
firstPassDebuggingEnabled
floatValue
flush
flushAudio
forceMitigateForHybridSDSD
forceVoiceTriggerAOPMode
forceVoiceTriggerAPMode
gainCompensatedChunk
geckoAudioLogDirectory
geckoLoggingLevel
generateDeviceAudioLogging:speechId:
getASVUserIntent:
getAnalyzedResultForPhId:
getAnalyzedResultFromAudioChunk:
getAnalyzedResultFromFlushedAudio
getAnalyzedResults
getAnalyzedResultsFromAudioChunk:
getAttendingTimeoutConfig
getAveragePowerDB
getBestAnalyzedResult
getBestAnalyzedResults
getBestAnalyzedResultsFromAudioChunk:
getBooleanAccessorySettingValueForKey:forAccessory:
getBytes:length:
getConfigFileNameForAssetType:
getFixedHighPrioritySerialQueueWithLabel:priority:
getFixedPrioritySerialQueueWithLabel:fixedPriority:
getHostClockFrequency
getIdleUserPreventSleepAssertionAcquitionDate
getJarvisTriggerMode
getLastResult
getLoggingThreshold
getLosingPhraseResultsWithDetectedPhId:
getMachTimeAdjustedVoiceTriggerEventInfoForDeviceUUID:
getMediaPlaybackInterruptedTime:
getNumElementInBitset:
getNumberForKey:category:default:
getPeakPowerDB
getRejectLoggingThreshold
getResourcePathInSystemDomainMaskByAppending:
getResourcePathInSystemDomainMaskFromRootPathByAppending:
getResourceValue:forKey:error:
getResultsFromFlushedAudio
getSSVLogFilePathWithSessionIdentifier:
getSerialQueue:qualityOfService:
getSerialQueue:withQualityOfService:andTargetQueue:
getStartOfSpeechAudioLogFilePath
getStringForKey:category:default:
getSuperVectorWithEndPoint:
getThreshold
getTokenFromDictionary:withTokenKey:
getValueForKey:category:
getVoiceTriggerAssetTypeString
getVoiceTriggerAssetTypeStringWithSupportMphAssets:deviceIsIPad:deviceIsWatch:deviceIsHorseman:deviceIsOSX:deviceIsTV:deviceIsIOS:
getVoiceTriggerCurrentCompatibilityVersion
getVoiceTriggerCurrentCompatibilityVersionWithSupportMphAssets:deviceIsIPad:deviceIsWatch:deviceIsHorseman:deviceIsOSX:deviceIsTV:deviceIsIOS:
getZeroStatisticsFromBuffer:entireSamples:
handleUsedBackingStore:
hasIntersectionWithRange:
hasPendingNearMiss
hasRemoteBuiltInMic
hasRemoteCoreSpeech
hash
hashFromResourcePath
hearstNumberOfBytesPerChunk
hearstNumberOfSamplesPerChunk
horsemanDeviceType
hostTime
hostTimeFromSampleCount:
hostTimeFromSampleCount:anchorHostTime:anchorSampleCount:sampleRate:
hostTimeToNs:
hostTimeToSeconds:
hostTimeToTimeInterval:
hybridEndpointerAssetFilename
inASBD
init
initWithAVVCContext:
initWithBackingStoreCapacity:minimalNumberOfBackingStores:maximumNumberOfBackingStores:backingStoreIdleTimeout:
initWithBlob:
initWithBlob:isEarlyDetected:
initWithBuffer:bufferSize:deallocator:
initWithBufferSize:
initWithBytes:length:
initWithBytesNoCopy:length:deallocator:
initWithCapacity:
initWithConfidence:
initWithConfigPath:resourcePath:
initWithConfigPath:triggerTokens:useKeywordSpotting:
initWithConfigPath:triggerTokensArray:preventDuplicatedReset:memoryLock:
initWithConfigPathNDAPI:threshold:delaySecondsForChannelSelection:masterChannelScoreBoost:processingChunkSeconds:processingChannelsBitset:
initWithConfigPathNDAPI:threshold:twoShotThreshold:twoShotDecisionWaitTime:voiceTriggerPhIds:silencePhIds:
initWithConfiguration:
initWithConfiguration:memoryLock:
initWithData:encoding:
initWithData:numChannels:numSamples:sampleByteDepth:startSampleCount:hostTime:arrivalHostTimeToAudioRecorder:wasBuffered:remoteVAD:
initWithData:numChannels:numSamples:sampleByteDepth:startSampleCount:hostTime:remoteVAD:
initWithDescription:
initWithFileDescriptor:closeOnDealloc:
initWithFilepath:
initWithInASBD:outASBD:
initWithName:clientQueue:
initWithName:threshold:secondChanceThreshold:loggingThreshold:ndapiScaleFactor:recognizerScoreOffset:recognizerScoreScaleFactor:recognizerToken:twoShotFeedbackDelay:remoraTwoShotFeedbackDelay:keywordRejectLoggingThreshold:speakerRejectLoggingThreshold:preTriggerSilenceOffset:
initWithName:timeout:
initWithNumChannels:recordingDuration:samplingRate:
initWithNumChannels:recordingDuration:samplingRate:audioTimeConverter:
initWithPhId:keywordDetectorDecision:combinedScore:ndapiScore:ndapiResult:recognizerScore:isSecondChance:isSecondChanceCandidate:isRunningQuasar:
initWithPhraseConfig:
initWithPid:
initWithPreTriggerAudioTime:prependingAudioTime:trailingAudioTime:resourcePath:configPathNDAPI:useRecognizerCombination:configPathRecognizer:useKeywordSpotting:phraseConfigs:wearerDetectionConfig:
initWithRecordType:deviceId:
initWithSampleRate:
initWithStartPoint:endPoint:
initWithThreshold:minimumPhraseLength:shadowMicScoreThreshold:myriadThreshold:phrasesToSkipBoronDecisionMaking:
initWithToken:sampleRate:numChannels:
initWithURL:
initWithURL:inputFormat:outputFormat:
initWithURL:inputFormat:outputFormat:channelBitset:
initWithXPCObject:
initWithZeroWindowSize:approxAbsSpeechThreshold:numHostTicksPerAudioSample:
inputRecordingBufferDuration
inputRecordingBytesPerFrame
inputRecordingBytesPerPacket
inputRecordingDuration
inputRecordingDurationInSecs
inputRecordingDurationInSecsExtended
inputRecordingEncoderAudioQuality
inputRecordingFramesPerPacket
inputRecordingIsFloat
inputRecordingNumberOfChannels
inputRecordingSampleBitDepth
inputRecordingSampleByteDepth
inputRecordingSampleRate
inputRecordingSampleRateConverterAlgorithm
inputRecordingSampleRateNarrowBand
insertObject:atIndex:
intValue
integerValue
interstitialAbsoluteDirForLevel:
interstitialRelativeDirForLevel:
invalidate
isAdBlockerAudioLoggingEnabled
isAdaptiveSiriVolumePermanentOffsetEnabled
isAdaptiveSiriVolumeTemporaryIntentValid
isAlarmPlayingOnAccessory:
isAttentiveSiriAudioLoggingEnabled
isAttentiveSiriEnabled
isAudioRecordTypeSupportedByRemora
isBluetoothVehicleOutput
isBuiltInVoiceTriggered
isDarwinOS
isDarwinVoiceTriggered
isDictation
isDictationOnSRDEnabled
isEarlyDetect
isEarlyWarning
isEnabled
isEndpointAssetBypassTrialEnabled
isEndpointAssetOverridingEnabled
isEndpointEnhancedLoggingEnabled
isEqual:
isEqualAsset:
isEqualToString:
isGibraltarVoiceTriggered
isHFPWithRecordRoute:
isHeadphoneDeviceWithRecordRoute:playbackRoute:
isHearstDoubleTapTriggered
isHearstVoiceTriggered
isHomePressed
isIOSDeviceSupportingBargeIn
isJarvisVoiceTriggered
isKindOfClass:
isLeftConfigVersion:newerThanRightConfigVersion:
isLocalVoiceTriggerAvailable
isMediaPlayingOnAccessory:
isMemberOfClass:
isMitigationAssetOverridingEnabled
isModelBenchmarkingEnabled
isMphVTEnabled
isMultiChannelAudioLoggingEnabled
isP2PTransferEnabled
isPHSSupported
isRTSTriggered
isReceivedTimeInterval:matchCurrentTimeInterval:
isReducedPHSThresholdEnabled
isRemoraButtonPress
isRemoraTriggered
isRemoraVoiceTriggered
isRequestDuringActiveCall
isRescoring
isSecondChance
isSecondChanceCandidate
isSelfTriggerEnabledAccessory
isSpeakerRecognitionAvailable
isStarkTriggered
isTVPushToTalkEnabled
isTVRemote
isTimerPlayingOnAccessory:
isTriggeredFromHearst
isVoiceTriggerAssetOverridingEnabled
isVoiceTriggered
isVoiceTriggeredFromRemoteXPCDevice
isWriting
isiOSButtonPress
iterateBitset:block:
jarvisAudioLoggingEnabled
keywordAnalyzerQuasar:hasResultAvailable:forChannel:
keywordRejectLoggingThreshold
languageCode
languageCodeDarwin
lastObject
lastPathComponent
latestVolume
latestVolumeTime
leave
length
localeWithLocaleIdentifier:
localizedDescription
logCancelledEventWithMHUUID:
logCoreSpeechPreprocessorCompletedWithMHUUID:withMetricsDictionary:
logMHASRAudioConfigureStartedWithMHUUID:withAudioCodecString:withAudioSkippedNumSamples:
logMHApplicationPlaybackAttemptedWithMHUUID:withAppBundleName:withAppBundleVersion:
logMHAssistantDaemonAudioBluetoothInfoWithMHUUID:withWirelessSplitterSessionState:withAudioDeviceCategory:
logMHAssistantDaemonAudioConfigureContextWithMHUUID:withConfigureStarted:
logMHAssistantDaemonAudioFetchRouteContextWithMHUUID:withFetchRouteContextStarted:
logMHAssistantDaemonAudioLateBufferDetectedWithMHUUID:withBufferReceiptTimeInNs:
logMHAssistantDaemonAudioPrepareContextWithMHUUID:withPrepareStarted:
logMHAssistantDaemonAudioPrewarmContextWithMHUUID:withPrewarmStarted:
logMHAssistantDaemonAudioRecordingContextWithMHUUID:withAudioRecordingStarted:withAudioInputRoute:withAudioSource:withAudioInterfaceVendorId:withAudioInterfaceProductId:
logMHAssistantDaemonAudioRecordingFailedWithMHUUID:withReason:vendorId:productId:
logMHAssistantDaemonAudioRecordingFirstBufferWithMHUUID:withStartEvent:withFirstBufferStartTimeOffsetNs:withFirstBufferReceiptTimeOffsetNs:
logMHAssistantDaemonAudioRecordingInterruptionContextWithMHUUID:withStartEvent:withLinkID:withAvAudioSessionInterruptorName:withAVAudioSessionInterrupterType:
logMHAssistantDaemonAudioRecordingInterruptionStartedTier1WithMHUUID:withLinkID:withActiveSessionDisplayIDs:
logMHAssistantDaemonAudioRecordingLastBufferWithMHUUID:withStartEvent:withLastBufferStartTimeOffsetNs:withLastBufferReceiptTimeOffsetNs:
logMHAssistantDaemonAudioRecordingMissedBufferDetectedWithMHUUID:
logMHAssistantDaemonAudioSessionSetActivateContextWithMHUUID:withSetActivateStarted:
logMHAssistantDaemonAudioSessionSetInactiveWithMHUUID:withSetInactiveStarted:
logMHAssistantDaemonAudioStartRecordingContextWithMHUUID:withStartRecordingContext:withFanInfoArray:withActiveSessionDisplayIDs:
logMHAssistantDaemonAudioStopRecordingContextWithMHUUID:withStopRecordingStarted:withADStopRecordingEvent:
logRejectEventWithVTEI:withMHUUID:withSecondPassResult:
logSiriLaunchCompletedWithVoiceTriggerEventInfo:
logSiriLaunchStartedWithVoiceTriggerEventInfo:
logSiriSetupPHSEnrollmentDigitalZeroDetectionCompletedWithSiriSetupID:PageNumber:withPhId:withMaxNumContinuousZeros:withMaxNumAllowedContinuousZeros:withIsMaxNumContinuousZerosOverThreshold:
logSiriSetupPHSEnrollmentUtteranceCompletedWithSiriSetupID:withPageNumber:withPhId:withTopScoreForUtterance:withStartSampleCount:withEndSampleCount:withHasSpeechDetected:
logStartEventWithFirstPassStartedInfo:withMHUUID:
logTriggerEventWithVTEI:withMHUUID:
logTwoShotDetectedWithMHUUID:
logTwoShotEndEventWithSuppresedAlert:withTimedOut:withMHUUID:
logTwoShotStartEventWithPromptType:withMHUUID:
loggingFilePathWithDirectory:token:postfix:
loggingThreshold
longLongValue
lpcmASBD
lpcmFloatASBD
lpcmInt16ASBD
lpcmInt16NarrowBandASBD
lpcmInterleavedASBD
lpcmInterleavedASBDWithSampleRate:numberOfChannels:
lpcmInterleavedWithRemoteVADASBD
lpcmMonoInterleavedASBD
lpcmMonoInterleavedWithRemoteVADASBD
lpcmMonoNonInterleavedASBD
lpcmMonoNonInterleavedWithRemoteVADASBD
lpcmNarrowBandASBD
lpcmNonInterleavedASBD
lpcmNonInterleavedASBDWithSampleRate:numberOfChannels:
lpcmNonInterleavedWithRemoteVADASBD
macHostTimeFromBridgeHostTime:
masterChannelScoreBoost
maxNumGradingFiles
maxNumLoggingFiles
maximumNumberOfBackingStores
mhLogDirectory
millisecondsToNs:
minimalNumberOfBackingStores
minimumPhraseLength
mutableBytes
mutableCopy
myriadFileLoggingEnabled
myriadHashDirectory
myriadHashFilePath
name
ndapiResult
ndapiScaleFactor
ndapiScore
nearMissCandidateDetectedSamples
nearMissDelayTimeout
notifyCallback:option:
notifyCallbackWithOption:
numChannels
numInputChannels
numResultsAvailable
numSamples
numTransaction
numTransactionNow
numberOfChannels
numberOfMatchesInString:options:range:
numberOfRanges
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
offsetInFile
opportuneSpeakListenerBypassEnabled
opportuneSpeakingFileLoggingIsEnabled
opusASBD
opusNarrowBandASBD
overwritingRemoteVADScore
overwritingVoiceTriggerMLock
parseCompatibilityFromConfigVersion:
path
peakPower
peakValueSinceLastCall
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
permanentOffsetFactor
permanentOffsetIsEnabled
personalizedSiriEnrollmentAudioLoggingEnabled
phId
phraseConfig
phraseConfigs
phraseDetectorInfoFromPhId:
phraseDetectorInfos
phraseResult
phraseSpotterEnabled
phrasesToSkipBoronDecisionMaking
pickedRoute
platformSupportsImplicitUttAddition
playingApps
plistFilePath
pool
powerLogSecondPassWithResult:withSecondPassScore:withPhId:
powerLogSiriConfigWithVoiceTriggerEnabled:withLanguage:withModelVersion:
powerLogVoiceTriggerStart
powerLogVoiceTriggerStop
powerLoggingCurrentAssetConfigVersion
powerLoggingCurrentLanguage
powerWithNumFalseWakeup:withDuration:withPhraseDict:
preTriggerAudioTime
preTriggerSilenceOffset
predicateWithBlock:
prepareLogging
prependingAudioTime
processAudioBytes:withNumberOfSamples:
processAudioChunk:
processFloatBuffer:stride:inFrameToProcess:
processIdentifier
processInfo
processSampleCount:hostTime:
processShortBuffer:stride:inFrameToProcess:
processingChannelsBitset
processingChunkSeconds
programmableAudioInjectionEnabled
pruneLogFiles
pruneNumberOfGradingFilesTo:
pruneNumberOfLogFilesTo:
queue
rangeAtIndex:
readDataOfLength:
readSpeakerIdScoreOverrrideConfig
recognizerScoreOffset
recognizerScoreScaleFactor
recordTypeFromAVVCActivationMode:
recordTypeString:
regularExpressionWithPattern:options:error:
rejectEvents
remoraTwoShotFeedbackDelay
remoteGradingDataDirectory
remoteP2pLogDirectory
remoteVAD
remoteVADAvailable
remoteVADDuration
remoteVADSubChunkFrom:numSamples:numAudioSamplesPerRemoteVAD:
remoteVoiceTriggerDelayTime
remoteVoiceTriggerEndpointTimeoutWithDefault:
removeAllObjects
removeItemAtPath:error:
removeItemAtURL:error:
removeLastObject
removeLogFilesInDirectory:matchingPattern:beforeDays:
removeLogFilesOlderThanNDays:
removeObject:
removeObjectForKey:
removeObjectsInRange:
removeObserver:forAssetType:
removeOpportunisticAudioLoggingOlderThanNDays:
removeRemoteP2PLogFilesOlderThanNDays:
reportCreation
reportDestroy
reportDigitalZerosWithAudioZeroRun:
requestId
reset
resetBest
resetWithSampleRate:
resetWithSamplingRate:language:taskType:userId:sessionId:deviceId:farField:audioSource:maxAudioBufferSizeSeconds:
resourcePath
resourcePathForAssetType:
respondsToSelector:
resultsWithAddedAudio:numberOfSamples:taskName:
resultsWithAddedFloatAudio:numberOfSamples:taskName:
resultsWithEndedAudio
retain
retainCount
rootQueueWithFixedPriority:
runRecognition
sampleCount
sampleCountFromHostTime:
sampleCountFromHostTime:anchorHostTime:anchorSampleCount:sampleRate:
sampleFed
samplesAtFire
samplesFed
samplingDate
samplingDirectory
samplingTimestamp
samplingTimestampDetail
saveAudioChunck:toURL:
secondChanceThreshold
secondPassAudioLoggingEnabled
secondsToHostTime:
secondsToNs:
seekToFileOffset:
selectedChannelList
self
serverLoggingChannelBitset
setASVUserIntent:
setActivationMetadata:
setActiveChannel:
setActivePhId:
setAlwaysUseRemoteBuiltInMic:
setAnchorHostTime:
setAnchorSampleCount:
setAudioFileHandle:
setAudioFilePath:
setAudioInjectionFilePath:
setAudioTimeConverter:
setAvgPower:
setBestEnd:
setBestPhrase:
setBestScore:
setBestStart:
setBooleanAccessorySettingValue:forKey:forAccessory:
setBufferLength:
setCallback:
setCancelledEvents:
setConfig:
setCtcKwdToPhIdMap:
setDateFormat:
setDelegate:
setDeviceId:
setEarlyWarning:
setEffectiveKeywordThreshold:
setFakeHearstModelPath:
setFileLoggingIsEnabled:
setFileLoggingLevel:
setFirstPassEvents:
setHasPendingNearMiss:
setHearstSecondPassModelVersion:
setIdleUserPreventSleepAssertionAcquitionDate:
setInputRecordingDuration:
setIsAlarmPlayingOnAccessory:isAlarmPlaying:
setIsEarlyDetect:
setIsEarlyWarning:
setIsMediaPlayingOnAccessory:isMediaPlaying:isInterrupted:interruptedTime:
setIsRequestDuringActiveCall:
setIsRequestFromSpokenNotification:
setIsSecondChance:
setIsTimerPlayingOnAccessory:isTimerPlaying:
setJarvisTriggerMode:
setLanguageCode:
setLatestVolume:
setLatestVolumeTime:
setLocale:
setMediaPlayingSettingForAccessory:isMediaPlaying:isInterrupted:interruptedTime:
setNearMissCandidateDetectedSamples:
setNearMissDelayTimeout:
setNumInputChannels:
setNumTransactionNow:
setObject:atIndexedSubscript:
setObject:forKey:
setObject:forKeyedSubscript:
setPackets:
setPeakPower:
setPeakValueSinceLastCall:
setPermanentOffsetFactor:
setPermanentOffsetIsEnabled:
setPhId:
setPhraseConfig:
setPhraseDetectorInfos:
setPhraseResult:
setPlistFilePath:
setPool:
setPowerLoggingCurrentAssetConfigVersion:
setQueue:
setRawVoiceTriggerEventInfo:fromDeviceUUID:anchorHostMachTime:anchorDarwinMachTime:
setRecycleHostTime:
setRejectEvents:
setRemoteDarwinEverConnectedWithNotifyKey:
setRemoteVAD:
setRequestId:
setRunAsSecondChance:
setSampleFed:
setSamplesAtFire:
setSamplesFed:
setSamplingDate:
setSamplingDirectory:
setSamplingTimestamp:
setSamplingTimestampDetail:
setSawNotANumber:
setSiriLanguageCodeDarwin:
setStartSampleCount:
setStreamHandleID:
setSyncKeywordAnalyzerNDAPI:
setSyncKeywordAnalyzerQuasar:
setTimeStamp:
setTriggerConfidence:
setTriggerInfos:
setTurnIdentifier:
setType:
setUserIntentTime:
setUserIntentType:
setUserIntentVolume:
setValue:forKey:
setVoiceTriggerEverUsed
shadowMicScoreThreshold
sharedConnection
sharedInstance
sharedLogger
sharedManager
sharedMonitor
sharedPowerLogger
sharedPreferences
shouldDeinterleaveAudioOnCS
shouldDelayPhaticForMyriadDecision
shouldDownloadVTAssetsOnDaemon
shouldOverwriteRemoteVADScore
shouldOverwriteVoiceTriggerMLock
silencePhIds
siriDataSharingOptInStatus
skipSamplesAtStartSuchThatNumSamplesReceivedSoFar:reachesACountOf:completionHandler:
smartSiriVolumeContextAwareEnabled
smartSiriVolumeContextAwareLoggingEnabled
smartSiriVolumeSoftVolumeEnabled
sortedArrayUsingComparator:
speakerIdScoreReportingType
speakerRecognitionAudioLoggingEnabled
speakerRejectLoggingThreshold
speechRecognizer:didFinishRecognitionWithError:
speechRecognizer:didProcessAudioDuration:
speechRecognizer:didProduceEndpointFeaturesWithWordCount:trailingSilenceDuration:eosLikelihood:pauseCounts:silencePosterior:processedAudioDurationInMilliseconds:
speechRecognizer:didProduceLoggablePackage:
speechRecognizer:didRecognizeFinalResultCandidatePackage:
speechRecognizer:didRecognizeFinalResultPackage:
speechRecognizer:didRecognizeFinalResults:
speechRecognizer:didRecognizeFinalResults:tokenSausage:nBestChoices:
speechRecognizer:didRecognizePartialResult:
speechRecognizer:didRecognizePartialResultNbest:
speechRecognizer:didRecognizeRawEagerRecognitionCandidate:
speechRecognizer:didReportStatus:statusContext:
speexASBD
splitAudioChunkSuchThatNumSamplesReceivedSoFar:reachesACountOf:completionHandler:
startOfSpeechAudioLoggingEnabled
startPoint
startSampleCount
stopCountingZeroStatisticsWithReporter:
streamHandleID
string
stringByAppendingString:
stringByDeletingLastPathComponent
stringByDeletingPathExtension
stringByReplacingOccurrencesOfString:withString:
stringForCurrentAssetProviderType
stringWithCapacity:
stringWithFormat:
stringWithUTF8String:
subChunkFrom:numSamples:
subChunkFrom:numSamples:forChannel:
subdataWithRange:
submitAudioIssueReport:
submitAudioIssueReport:withContext:
submitEndpointerIssueReport:
submitRemoteCoreSpeechReport:context:
submitSiriPowerIssueReport:
submitTrialIssueReport:
submitUresIssueReport:
submitVoiceIdIssueReport:
submitVoiceTriggerIssueReport:
subscribeEventMonitor:
substringWithRange:
superclass
supportAcousticProgressiveChecker
supportAdBlocker
supportAudioTappingSelfTrigger
supportBeepCanceller:
supportBluetoothDeviceVoiceTrigger
supportCSTwoShotDecision
supportCircularBuffer
supportCompactPlus
supportContinuousAudioFingerprint
supportContinuousVoiceTrigger
supportEndpointerWhileHostAsleep
supportHandsFree
supportHangUp
supportHearstVoiceTrigger
supportHomeKitAccessory
supportHybridEndpointer
supportJarvisVoiceTrigger
supportKeywordDetector
supportLanguageDetector
supportLazySessionActivation
supportMph
supportMphAssets
supportMyriadLightHouse
supportNonInterruptibleSiri
supportOpportunisticZLL
supportPhatic
supportPremiumAssets
supportPremiumModel
supportPremiumWatchAssets
supportRaiseToSpeak
supportRelayCall
supportRemoraVoiceTrigger
supportRingtoneA2DP
supportSAT
supportSelfTriggerSuppression:refChannelIdx:
supportSessionActivateDelay
supportSmartVolume
supportTTS
supportTrialMitigationAssets
supportVoiceTriggerChannelSelection
supportZeroFilter:
supportsANE
supportsDictationOnDevice
supportsEndpointingOnATV
supportsHybridSDSDForLanguageCode:
supportsHybridUnderstandingOnDevice
supportsSiriLiminal
supportsSpeakerRecognitionAssets
supportsSpeechRecognitionOnDevice
supportsUnderstandingOnDevice
supportsVoiceTriggerFides
syncKeywordAnalyzerNDAPI
syncKeywordAnalyzerQuasar
systemUpTime
systemUptime
threshold
timeIntervalSince1970
timeStamp
timeStampWithSaltGrain
tokenName
tokens
trailingAudioTime
trialBaseAssetDirectory
triggerConfidence
triggerInfos
turnIdentifier
twoShotDecisionWaitTime
twoShotDelayConfigKey
twoShotFeedbackDelay
twoShotNotificationEnabled
twoShotThreshold
type
unsignedIntegerValue
unsignedLongLongValue
useKeywordSpotting
useRecognizerCombination
useSiriActivationSPIForHomePod
useSiriActivationSPIForwatchOS
useSpeexForAudioInjection
userIntentTime
userIntentType
userIntentValidForSeconds
userIntentVolume
utteranceFileASBD
valueForKeyPath:
voiceTriggerAudioLogDirectory
voiceTriggerEnabled
voiceTriggerEventInfoWithAdjustedMachTime:deviceUUID:anchorHostMachTime:anchorDarwinMachTime:
voiceTriggerPhIds
waitWithTimeout:
wasBuffered
weakObjectsHashTable
wearerDetectionConfig
willBeep
writeData:
writeData:error:
writeToFile:atomically:
xpcObject
zeroFilterApproxAbsSpeechThreshold
zeroFilterWindowSizeInMs
zeroFilterWindowSizeInMsForReport
zone
@16@0:8
@28@0:8@16B24
Q16@0:8
v24@0:8Q16
f16@0:8
v20@0:8f16
B16@0:8
v20@0:8B16
@24@0:8@16
v16@0:8
@32@0:8r^s16q24
@32@0:8^v16q24
v24@0:8@16
@"NSMutableData"
@"CSKeywordAnalyzerNDEAPIResult"
@"<CSKeywordAnalyzerNDEAPIScoreDelegate>"
@24@0:8^{_NSZone=}16
@64@0:8Q16Q24f32f36@40f48B52B56B60
@"CSKeywordAnalyzerNDAPIResult"
@40@0:8f16f20f24f28@32
@"NSArray"
@24@0:8Q16
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
@48@0:8@16f24f28f32f36Q40
@"NSString"
I16@0:8
v20@0:8I16
@44@0:8B16B20B24B28B32B36B40
Q44@0:8B16B20B24B28B32B36B40
@40@0:8Q16@24@32
@48@0:8Q16@24@32Q40
Q24@0:8@16
B32@0:8@16@24
@48@0:8@16@24@32Q40
@40@0:8@16@24@32
B36@0:8@16@24B32
@32@0:8@16@24
B24@0:8@16
@"NSDictionary"
@76@0:8f16f20f24@28@36B44@48B56@60@68
@"CSVoiceTriggerAirPodWearerDetectionConfig"
v52@0:8@16i24@28f36i40i44i48
v48@0:8@16i24@28i36i40B44
@76@0:8@16f24f28f32f36f40f44@48f56f60f64f68f72
@44@0:8f16f20f24f28f32f36f40
r^v16@0:8
@40@0:8^v16Q24@?32
B32@0:8r^v16Q24
@36@0:8Q16S24d28
Q40@0:8@16Q24^@32
Q24@0:8^@16
{unique_ptr<CSAudioZeroFilterImpl<unsigned short>, std::default_delete<CSAudioZeroFilterImpl<unsigned short>>>="__ptr_"{__compressed_pair<CSAudioZeroFilterImpl<unsigned short> *, std::default_delete<CSAudioZeroFilterImpl<unsigned short>>>="__value_"^v}}
v32@0:8@16Q24
@20@0:8I16
i16@0:8
v20@0:8i16
v32@0:8@16@24
v40@0:8@16@24Q32
v44@0:8@16B24@28@36
v28@0:8@16B24
v32@0:8@16B24S28
v52@0:8@16B24i28i32@36@44
v44@0:8@16B24Q28Q36
v52@0:8@16B24@28@36@44
v40@0:8@16@24@32
v36@0:8@16i24@28
v48@0:8@16q24@32@40
B56@0:8{?=[8I]}16@48
{?=[8I]}32@0:8@16@24
@48@0:8{?=[8I]}16
B32@0:8Q16Q24
B24@0:8Q16
@20@0:8i16
@28@0:8@16i24
@28@0:8@16I24
@36@0:8@16I24@28
d16@0:8
q16@0:8
@24@0:8q16
@32@0:8q16@24
q24@0:8q16
v24@0:8q16
@32@0:8@16Q24
@"CSNovDetector"
v32@0:8Q16Q24
Q24@0:8Q16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v28@0:8B16Q20
@"NSMutableArray"
@48@0:8@16@24Q32Q40
v48@0:8@16@24Q32Q40
i28@0:8@16i24
@"NSFileHandle"
@84@0:8@16Q24Q32Q40Q48Q56Q64B72@76
@72@0:8@16Q24Q32Q40Q48Q56@64
@28@0:8f16Q20
@40@0:8Q16Q24Q32
@32@0:8Q16Q24
Q48@0:8Q16Q24^v32Q40
v40@0:8Q16Q24@?32
@"NSData"
@32@0:8Q16f24f28
@40@0:8Q16f24f28@32
v32@0:8r^v16Q24
v40@0:8r^v16Q24Q32
@24@0:8^Q16
{unique_ptr<corespeech::CSAudioCircularBufferImpl<unsigned short>, std::default_delete<corespeech::CSAudioCircularBufferImpl<unsigned short>>>="__ptr_"{__compressed_pair<corespeech::CSAudioCircularBufferImpl<unsigned short> *, std::default_delete<corespeech::CSAudioCircularBufferImpl<unsigned short>>>="__value_"^v}}
@"CSAudioTimeConverter"
f20@0:8f16
S16@0:8
v32@0:8B16B20@24
v28@0:8I16@20
@"NSObject<OS_os_transaction>"
Q20@0:8f16
f24@0:8Q16
d24@0:8Q16
Q44@0:8Q16Q24Q32f40
B32@0:8d16d24
Q28@0:8Q16f24
@96@0:8{AudioStreamBasicDescription=dIIIIIIII}16{AudioStreamBasicDescription=dIIIIIIII}56
v64@0:8@16Q24@32Q40Q48B56I60
^{OpaqueAudioConverter=}
{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}
@"<CSAudioDecoderDelegate>"
@104@0:8@16{AudioStreamBasicDescription=dIIIIIIII}24{AudioStreamBasicDescription=dIIIIIIII}64
B32@0:8r^v16q24
^{OpaqueExtAudioFile=}
@"NSURL"
v32@0:8@16@?24
v36@0:8B16@20@28
v40@0:8@16B24B28d32
d24@0:8@16
d24@0:8d16
B20@0:8B16
B28@0:8B16^{__CFString=}20
B24@0:8^{__CFString=}16
v24@0:8r*16
{unique_ptr<BatchBeepCanceller, std::default_delete<BatchBeepCanceller>>="__ptr_"{__compressed_pair<BatchBeepCanceller *, std::default_delete<BatchBeepCanceller>>="__value_"^{BatchBeepCanceller}}}
{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}
{vector<short, std::allocator<short>>="__begin_"^s"__end_"^s"__end_cap_"{__compressed_pair<short *, std::allocator<short>>="__value_"^s}}
@"<CSBeepCancellerDelegate>"
@32@0:8@16d24
v36@0:8@16@24f32
v40@0:8@16@24@?32
@48@0:8@16@24@32^@40
@20@0:8f16
v32@0:8r^s16i24i28
v32@0:8r^f16i24i28
v28@0:8i16i20i24
v24@0:8^d16
@"CSAudioUnitMeterClipping"
@36@0:8@16@24B32
@52@0:8Q16@24@32@40B48
B28@0:8f16f20f24
@40@0:8Q16Q24@32
@"CSKeywordAnalyzerNDAPI"
@"CSSyncKeywordAnalyzerQuasar"
@24@0:8d16
v24@0:8d16
@40@0:8@16@24B32B36
@"_EARSyncSpeechRecognizer"
@32@0:8@16f24I28
v28@0:8@16I24
@52@0:8@16f24f28f32@36@44
v48@0:8@16@24@32@40
v32@0:8@16d24
v72@0:8@16q24q32d40@48d56q64
v40@0:8@16Q24@32
v32@0:8@"_EARSpeechRecognizer"16@"_EARSpeechRecognitionResult"24
v32@0:8@"_EARSpeechRecognizer"16@"NSError"24
v32@0:8@"_EARSpeechRecognizer"16@"NSArray"24
v48@0:8@"_EARSpeechRecognizer"16@"NSArray"24@"NSArray"32@"NSArray"40
v32@0:8@"_EARSpeechRecognizer"16@"_EARSpeechRecognitionResultPackage"24
v32@0:8@"_EARSpeechRecognizer"16d24
v32@0:8@"_EARSpeechRecognizer"16@"_EARSpeechRecognition"24
v72@0:8@"_EARSpeechRecognizer"16q24q32d40@"NSArray"48d56q64
v40@0:8@"_EARSpeechRecognizer"16Q24@"NSDictionary"32
v28@0:8r^s16i24
@"_EARSpeechRecognizer"
@"_EARSpeechRecognitionAudioBuffer"
@"<CSKeywordAnalyzerQuasarScoreDelegate>"
@"CSVoiceTriggerPhraseConfig"
@32@0:8r^v16Q24
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"CSReusableBufferPoolConfiguration"
@104@0:8{AudioStreamBasicDescription=dIIIIIIII}16{AudioStreamBasicDescription=dIIIIIIII}56@96
@112@0:8@16{AudioStreamBasicDescription=dIIIIIIII}24{AudioStreamBasicDescription=dIIIIIIII}64@104
@112@0:8@16@24{AudioStreamBasicDescription=dIIIIIIII}32{AudioStreamBasicDescription=dIIIIIIII}72
@"CSFCircularEventsCacheBuffer"
v40@0:8Q16d24@32
v36@0:8Q16f24Q28
v56@0:8@16@24@32@40Q48
@"NSHashTable"
@112@0:8@16{AudioStreamBasicDescription=dIIIIIIII}24{AudioStreamBasicDescription=dIIIIIIII}64Q104
@48@0:8Q16Q24Q32d40
v28@0:8f16@20
q24@0:8Q16
@"NSObject<OS_dispatch_group>"
{AudioStreamBasicDescription=dIIIIIIII}16@0:8
{AudioStreamBasicDescription=dIIIIIIII}24@0:8f16I20
f32@0:8@16@24
@(#)PROGRAM:CoreSpeechFoundation  PROJECT:CoreSpeech-1
pbhw
pbtb
pbiu
otua
ciov
bhev
eltb
siar
tdtb
cvdh
cvpc
tcid
tsop
rtsh
tvps
tvmr
pbmr
ciov
emoh
cvad
fff?
(knN
ffffff
mcpl
supo
mcpl
mcpl
samples_fed
best_start
best_end
best_score
is_secondchance
isEarlyDetect
[_phId = %lu]
[_decision = %lu]
[_combinedScore = %f]
[_ndapiScore = %f]
[_ndapiResult = %@]
[_recognizerScore = %f]
[_isSecondChance = %i]
[_isSecondChanceCandidate = %i]
[_isRunningQuasar = %i]
v8@?0
CSAudioTimeConverterPool
-[CSAudioTimeConverterPool _getAudioTimeConverterWithAudioStreamId:]_block_invoke
-[CSAudioChunkForTV initWithXPCObject:]
avgPower
peakPower
timeStamp
numChannels
audioFormat
streamHandleID
packets
com.apple.MobileAsset.VoiceTriggerAssets
com.apple.MobileAsset.VoiceTriggerAssetsIPad
com.apple.MobileAsset.VoiceTriggerHSAssetsIPad
com.apple.MobileAsset.VoiceTriggerAssetsWatch
com.apple.MobileAsset.VoiceTriggerHSAssetsWatch
com.apple.MobileAsset.VoiceTriggerAssetsMarsh
com.apple.MobileAsset.VoiceTriggerAssetsMac
com.apple.MobileAsset.VoiceTriggerAssetsTV
com.apple.MobileAsset.VoiceTriggerHSAssets
com.apple.corespeech
Framework
en_US_POSIX
yyyyMMdd-HHmmss
CSLogInitIfNeeded_block_invoke
Unknown
com.apple.ssr
SSRLogInitIfNeeded_block_invoke
corespeech.json
assets.json
speakerRecognition.json
adBlockerPayload.bin
mitigation.json
hybridendpointer.json
hybridendpointer_marsh.json
/System/Library/PrivateFrameworks/CoreSpeechDarwin.framework
PrivateFrameworks/CoreSpeech.framework
+[CSAsset fallBackAssetResourcePath]
defaultFallbackHearst
defaultFallbackAdBlocker
-[CSAsset initWithResourcePath:configFile:configVersion:assetProvderType:]
+[CSAsset decodeJson:]
-[CSAsset getNumberForKey:category:default:]
-[CSAsset getStringForKey:category:default:]
-[CSAsset getValueForKey:category:]
configVersion:%@ resourcePath:%@ path:%@
MobileAssets
Trial
+[CSAsset isLeftConfigVersion:newerThanRightConfigVersion:]
Premium
%@_%@
nohash
((?:[a-z]|[0-9])*)\.asset
-[CSAsset assetHashInResourcePath:]
%02x
-[CSReusableBufferBackingStore configureWithBytes:length:]
CSInitialContinousZeros
CSMaxContinousZeros
CSMidSegmentContinousZeros
start
vector
best_phrase
early_warning
is_rescoring
CSOSTransactionStat
-[CSOSTransactionStat reportCreation]_block_invoke
-[CSOSTransactionStat reportDestroy]_block_invoke
+[CSUtils(Security) checkEntitlementForToken:withEntitlement:]
+[CSUtils(Security) getTokenFromDictionary:withTokenKey:]
com.apple.da
liveOnHomePod
DeviceClassNumber
IsVirtualDevice
CSIsVirtualMachine_block_invoke
U+73bmG4kBGj6kpreQXUTQ
DeviceSupportsUSBTypeC
InternalBuild
CSResourcePathInSystemDomainMaskByAppending
CSSafeSetOutErrorWithNSError
+N9mZUAHooNvMiQnjeTJ8g
PTQ+ABwag03BwO/CKvIK/A
+[CSUtils isIOSDeviceSupportingBargeIn]_block_invoke
BuildVersion
IOPlatformExpertDevice
+[CSUtils deviceHwRevision]
config-number
yyyyMMdd
Siri
BluetoothFeatures
AnnounceTelephony
en-US
hang_up
RingtoneOverA2DP
CoreSpeech
support_js
+[CSUtils(AudioDevice) isHeadphoneDeviceWithRecordRoute:playbackRoute:]
+[CSUtils(AudioDevice) isBluetoothAudioDeviceConnected]
BTDetails_IsHFPRoute
+[CSUtils(AudioDevice) isBluetoothVehicleOutput]
+[CSAudioRecordContext defaultContext]
CSAudioRecordTypeUnspecified
CSAudioRecordTypeHomePress
CSAudioRecordTypeWiredHeadsetButtonPress
CSAudioRecordTypeBluetoothHeadSetButtonPress
CSAudioRecordTypeUIButtonPress
CSAudioRecordTypeServerInvoke
CSAudioRecordTypeVoiceTrigger
CSAudioRecordTypeStark
CSAudioRecordTypeTVRemote
CSAudioRecordTypeRaiseToSpeak
CSAudioRecordTypeHearstDoubleTap
CSAudioRecordTypeHearstVoice
CSAudioRecordTypeJarvis
CSAudioRecordTypePost
CSAudioRecordTypeDictation
CSAudioRecordTypeVoiceTriggerTraining
CSAudioRecordTypeOpportuneSpeaker
CSAudioRecordTypeOpportuneSpeakerListenerWithCall
CSAudioRecordTypeRemoraVoice
CSAudioRecordTypeRemoraButton
CSAudioRecordTypeDarwinVoice
CSAudioRecordTypeUnknown
recordType[%@] deviceId[%@] turnIdentifier[%@] alwaysUseBuiltInMic[%d] isRequestDuringActiveCall[%d] triggerEventInfo[%@] spokenNotification [%d]
type
alwaysUseRemoteBuiltInMic
deviceId
isRequestDuringActiveCall
triggerEventInfo
turnIdentifier
isSpokenNotification
samples_at_fire
start_sample_count
-[CSKeywordAnalyzerNDAPI initWithConfigPath:resourcePath:]
-[CSKeywordAnalyzerNDAPI _setStartAnalyzeTime:]
threshold_normal
-[CSKeywordAnalyzerNDAPI getThreshold]
threshold_logging
-[CSKeywordAnalyzerNDAPI getLoggingThreshold]
threshold_reject_logging
-[CSKeywordAnalyzerNDAPI getRejectLoggingThreshold]
CSSampleCountHostTimeConverter
Serial CSPolicy queue
triggerEndSeconds
triggerFireSeconds
earlyDetectFiredMachTime
triggerStartMachTime
triggerEndMachTime
triggerFireMachTime
twoShotAudibleFeedbackDelay
firstPassTriggerSource
Darwin
CSDarwinVoiceTriggerEventInfoProvider
CSUncompressedAudioLogging
-[CSUncompressedAudioLogging prepareLogging]_block_invoke
-[CSUncompressedAudioLogging _prepareFileForLogging]
%.0f
%.6f
-[CSUncompressedAudioLogging _setupFilePath]
%@_%@_%@.pcm
%@_%@_%@.plist
-[CSUncompressedAudioLogging appendAudioData:]_block_invoke
-[CSUncompressedAudioLogging _createFileDescriptor:protectionClass:]
interactionIdentifier
samplingTimestamp
language
samplingRate
-[CSUncompressedAudioLogging _writePlistFile]
deque
-[CSAudioChunk chunkForChannel:]
v24@?0^v8Q16
-[CSAudioChunk subChunkFrom:numSamples:forChannel:]
-[CSAudioChunk subChunkFrom:numSamples:]
-[CSAudioChunk copySubAudioChunkFrom:numSamples:to:dstBufferSize:]
-[CSAudioChunk splitAudioChunkSuchThatNumSamplesReceivedSoFar:reachesACountOf:completionHandler:]
numSamples
sampleByteDepth
startSampleCount
hostTime
arrivalHostTimeToAudioRecorder
wasBufferedAudio
data
remoteVAD
-[CSAudioCircularBuffer initWithNumChannels:recordingDuration:samplingRate:audioTimeConverter:]
-[CSAudioCircularBuffer copySamplesFromHostTime:]
-[CSAudioCircularBuffer copySamplesFrom:to:]
-[CSAudioCircularBuffer copySamplesFrom:to:channelIdx:]
-[CSAudioCircularBuffer copybufferFrom:to:]
-[CSAudioCircularBuffer copyBufferWithNumSamplesCopiedIn:]
-[CSAudioCircularBuffer reset]
copySamples
phrase
name
Hey Siri
threshold
2ndChanceThreshold
loggingThreshold
ndapiScaleFactor
recognizerThresholdOffset
recognizerScoreScaleFactor
preTriggerSilenceOffset
recognizerToken
hey_Siri
twoShotFeedbackDelayPhatic
twoShotFeedbackDelayPhaticRemora
twoShotFeedbackDelayBeep
rejectLoggingThreshold
phsRejectLoggingThreshold
kCSFSelfLoggingMHUUID
kCSFSelfLoggingSecondPassResult
-[CSFVoiceTriggerEventInfoSelfLogger logStartEventWithFirstPassStartedInfo:withMHUUID:]
CSFVoiceTriggerEventInfoSelfLogger.m
-[CSFVoiceTriggerEventInfoSelfLogger logTriggerEventWithVTEI:withMHUUID:]
-[CSFVoiceTriggerEventInfoSelfLogger logRejectEventWithVTEI:withMHUUID:withSecondPassResult:]
-[CSFVoiceTriggerEventInfoSelfLogger logCancelledEventWithMHUUID:]
-[CSFVoiceTriggerEventInfoSelfLogger logTwoShotEndEventWithSuppresedAlert:withTimedOut:withMHUUID:]
-[CSFVoiceTriggerEventInfoSelfLogger logTwoShotStartEventWithPromptType:withMHUUID:]
-[CSFVoiceTriggerEventInfoSelfLogger logTwoShotDetectedWithMHUUID:]
-[CSFVoiceTriggerEventInfoSelfLogger logSiriLaunchStartedWithVoiceTriggerEventInfo:]
-[CSFVoiceTriggerEventInfoSelfLogger logSiriLaunchCompletedWithVoiceTriggerEventInfo:]
%@-%@
-[CSOSTransaction initWithDescription:]
-[CSOSTransaction dealloc]
continuousVoiceTrigger
configFileNDAPI
twoShotThreshold
twoShotDecisionWaitTime
voiceTriggerPhraseIds
silencePhraseIds
config.txt
config_marsh.txt
self.integerValue
+[CSFTimeUtils hostTimeFromSampleCount:anchorHostTime:anchorSampleCount:sampleRate:]
+[CSFTimeUtils sampleCountFromHostTime:anchorHostTime:anchorSampleCount:sampleRate:]
+[CSFTimeUtils macHostTimeFromBridgeHostTime:]
i32@?0^I8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16^^{AudioStreamPacketDescription}24
-[CSPlainAudioFileWriter initWithURL:inputFormat:outputFormat:]
-[CSPlainAudioFileWriter addSamples:numSamples:]
json
yyyy_MM_dd-HHmmss.SSS
productType
productVersion
buildVersion
-[CSPlainAudioFileWriter addContextKey:withContext:]
-SL.json
-[CSPlainAudioFileWriter createAcousticMetaFileForContext:withContext:]
-[CSPlainAudioFileWriter addContextKey:fromMetaFile:]
+[CSPlainAudioFileWriter saveAudioChunck:toURL:]
com.apple.voicetrigger
com.apple.voicetrigger.notbackedup
kCSPreferencesJarvisTriggerModeDidChangeDarwinNotification
VoiceTrigger Enabled
Phrase Detector Enabled
VoiceTriggerEverUsed
AttentiveSiri AudioLogging Enabled
-[CSFPreferences isAttentiveSiriAudioLoggingEnabled]
Enable Two Shot Notification
Attending Timeout
-[CSFPreferences getAttendingTimeoutConfig]
com.apple.demo-settings
StoreDemoMode
HomePod
Mosquito
Adaptive Siri Volume Disabled
File Logging Level
/var/mobile
Library
Logs/CrashReporter/VoiceTrigger/audio/
VoiceTrigger/nearmiss/audio/
/Logs/CrashReporter/Assistant/MHLog/
VoiceTrigger/RemoteP2PLogs/
RemoteGradingData/
/Logs/CrashReporter/Assistant/smartSiriVolumeContextAwareLogs/
Logs/CrashReporter/Assistant/smartSiriVolumeContextAwareLogs/
-[CSFPreferences getSSVLogFilePathWithSessionIdentifier:]
/tmp
%@/SSV_%@.json
VoiceTrigger/TrialAssetData
/Logs/CrashReporter/Assistant/
SpeechLogs
-[CSFPreferences assistantAudioFileLogDirectory]
VoiceTrigger
siriBC
Second Pass Audio Logging Enabled
Speaker Recognition Audio Logging Enabled
Personalized Siri Enrollment Audio Logging Enabled
Jarvis Audio Logging Enabled
Jarvis Trigger Mode
Enable SoS Audio Logging
Force VoiceTrigger AP Mode
-[CSFPreferences forceVoiceTriggerAPMode]_block_invoke
Force VoiceTrigger AOP Mode
-[CSFPreferences forceVoiceTriggerAOPMode]_block_invoke
RemoraDevices
@"NSMutableDictionary"16@?0@"NSMutableDictionary"8
Accessory Media Playback Status
Accessory Media Playback Interrupted Time
Accessory Alarm Playback Status
Accessory Timer Playback Status
com.apple.corespeech.CSPreferencesSetValueForKey
mobile
com.apple.corespeech._CSNotBackedupPreferencesSetValueForKey
Logs/CrashReporter/CoreSpeech/sos/
-[CSFPreferences getStartOfSpeechAudioLogFilePath]
yyyyMMdd_HHmmss.SSS
%@/%@
Remote VoiceTrigger Delay
Remote VoiceTrigger Endpoint Timeout
VoiceTrigger/interstitial
Myriad File Logging Enabled
Audio Injection Enabled
Programmable Audio Injection Enabled
Speex Audio Injection Enabled
-[CSFPreferences enableAudioInjection:withKey:]
-[CSFPreferences audioInjectionEnabledWithKey:]_block_invoke
-[CSFPreferences setAudioInjectionFilePath:]
Audio Injection File Path
-[CSFPreferences audioInjectionFilePath]
-[CSFPreferences audioInjectionFilePath]_block_invoke
v32@?0@8Q16^B24
SpeakerId Enabled
SpeakerId Score Type
SmartSiriVolume SoftVolume Enabled
Adaptive Siri Volume State Intent Time
Adaptive Siri Volume State Intent Valid For Seconds
Adaptive Siri Volume State Permanent Offset Enabled
Adaptive Siri Volume State Permanent Offset Factor
Adaptive Siri Volume State Intent Type
Audio Session Activation Delay
Max Number Logging Files
Max Number Grading Files
Enable SiriActivation HomePod
Enable SiriActivation watchOS
Overwrite Remote VAD Score
Hearst First Pass Model Version
Hearst Second Pass Model Version
Hearst Fake Model Path
VoiceTrigger Companion Sync Enabled
Enable OpportuneSpeakListener Bypass
Bypass Personalized HeySiri
MultiPhraseVTEnabled
MultiChannelAudioLoggingEnabled
Enable AdBlocker Audio Logging
Enable Self Trigger Audio Logging
Adaptive Siri Volume State Intent Volume
Adaptive Siri Volume State Latest Volume Time
Adaptive Siri Volume State Latest Volume
-[CSFPreferences getASVUserIntent:]
-[CSFPreferences setSiriLanguageCodeDarwin:]
Siri Language Code Darwin
-[CSFPreferences languageCodeDarwin]
Remote Darwin Ever Connected
Idle User Prevent Sleep Assertion Acquition Time
Enable P2P Transfer
Enable Reduced PHS Threshold
Enable Model Benchmarking
NearMissAudioLoggingLevel
Endpoint Enhanced Logging
Endpoint Asset Overriding Enabled
Endpoint Asset Overriding File Path
Endpoint Asset Bypass Trial Enabled
VoiceTrigger Asset Overriding File Path
Mitigation Asset Overriding File Path
Bypass Trial Assets
SelfTrigger Enabled in Accessory
-[CSFPreferences setSelfTriggerEnabledAccessory:]
-[CSFPreferences isSelfTriggerEnabledAccessory]
Enable VoiceTrigger Mlock
Bypass SpeakerId based Mitigation
SpeakerID Score Override Map
First Pass Debug
Force Mitigate For HybridSDSD
Power Logging Current Asset Config Version
Power Logging Current Language
beepLocation
statsComputed
beepPower
signalPower
originalPower
absMaxVal
above95pcOfMax
totalInputSamples
totalOutputSamples
jbl_begin.bin
-[CSBeepCanceller init]
-[CSBeepCanceller willBeep]
-[CSBeepCanceller reset]
voiceTriggerFirstPass
delaySecondsForChannelSelection
masterChannelScoreBoost
processingChunkSeconds
processingChannelsBitset
+[CSVoiceTriggerFirstPassConfigDecoder decodeConfigFrom:]
-[CSFRangeUtils initWithStartPoint:endPoint:]
-[CSFRangeUtils hasIntersectionWithRange:]
Dispose Log Queue
+[CSUtils(Directory) removeLogFilesInDirectory:matchingPattern:beforeDays:]_block_invoke
v24@?0@"NSArray"8^@16
+[CSUtils(Directory) clearLogFilesInDirectory:matchingPattern:exceedNumber:]_block_invoke_2
+[CSUtils(Directory) clearLogFilesInDirectory:matchingPattern:exceedNumber:]_block_invoke
+[CSUtils(Directory) loggingFilePathWithDirectory:token:postfix:]
%@-%@.%@
+[CSUtils(Directory) _createLoggingDirectoryIfNeeded:]
Unable to get %@ for file at %@: %@
q24@?0@"NSURL"8@"NSURL"16
B24@?0@"NSURL"8@"NSDictionary"16
+[CSUtils(Directory) _contentsOfDirectoryAtURL:matchingPattern:includingPropertiesForKeys:error:]
assetDownloadfailed
assetFetchfailed
VoiceId
satinitfailed
satmodelfilefailed
satvectorfailed
tdsrfailed
tdsrtimeout
retrainsatfailed
explicituttrejected
toolessaudiofiles
unrecognizedmetadata
delayedscores
missinghomeidforclouduser
voiceidstaleprofiledetected
Audio
didStartWatchDogFire
didStopWatchDogFire
audioDeliveryWatchDogFire
streamDeallocDuringStreaming
resourceNotAvailable
recordStoppedBySessionInterruption
recordStoppedByMixedSessionInterruption
InsufficientPriority
audioCodecError
hardwareConfigurationChanged
speechStopFailure
speechPrepareFailure
speechStartFailure
hardwareRemoved
noHardwareError
noRouteAvailable
secondPassCompleteWatchDogFire
APLeak
APStuckInTransition
launchSlow
Endpointer
endpointerModelVersionIsNil
Ures
requestRCNotFound
SiriPower
consectutiveFalseFirstPassTriggers
remoteCoreSpeech
remoteCoreSpeechSubtypeStartAudioRecordingFailed
-[CSPhraseDetector dealloc]
-[CSPhraseDetector setRunAsSecondChance:]
-[CSPhraseDetector reset]
-[CSPhraseDetector setConfig:]
enabled
disabled
-[CSPhraseDetector _phraseDetectorResultFromNDAPIResults:quasarResult:forceMaximized:]
-[CSPhraseDetector _getResultWithPhId:phraseDetectorInfo:ndapiResult:quasarResult:forceMaximized:]
-[CSPhraseDetector _resultCopyWithKeywordDetectorDecision:bestPhId:phraseResult:]
Dictation
triggerConfidence = %lf
-[CSSyncKeywordAnalyzerQuasar initWithConfigPath:triggerTokensArray:preventDuplicatedReset:memoryLock:]
-[CSSyncKeywordAnalyzerQuasar reset]
-[CSSyncKeywordAnalyzerQuasar getResultsFromFlushedAudio]
-[CSSyncKeywordAnalyzerQuasar getAnalyzedResultsFromAudioChunk:]
-[CSSyncKeywordAnalyzerQuasar _getAnalyzedResults:]
+[CSSyncKeywordAnalyzerQuasar dumpEARSpeechRecognitionResults:]
-[CSAudioZeroCounter getZeroStatisticsFromBuffer:entireSamples:]
-[CSAudioZeroCounter stopCountingZeroStatisticsWithReporter:]
com.apple.transcribe.Transcriber
-[CSKeywordAnalyzerQuasar initWithConfigPath:triggerTokens:useKeywordSpotting:]
-[CSKeywordAnalyzerQuasar initWithConfigPath:triggerTokens:useKeywordSpotting:]_block_invoke
-[CSKeywordAnalyzerQuasar reset]
-[CSKeywordAnalyzerQuasar dealloc]
-[CSKeywordAnalyzerQuasar runRecognition]
-[CSKeywordAnalyzerQuasar runRecognition]_block_invoke
-[CSKeywordAnalyzerQuasar endAudio]
-[CSKeywordAnalyzerQuasar endAudio]_block_invoke
-[CSKeywordAnalyzerQuasar _recognizeWavData:length:]
-[CSKeywordAnalyzerQuasar speechRecognizer:didRecognizePartialResult:]_block_invoke
-[CSKeywordAnalyzerQuasar speechRecognizer:didRecognizeFinalResults:]_block_invoke
-[CSKeywordAnalyzerQuasar _phIdToCtcScoreMap]
-[CSKeywordAnalyzerQuasar speechRecognizer:didFinishRecognitionWithError:]_block_invoke
-[CSKeywordAnalyzerQuasar _getConfidence:]_block_invoke
v32@?0@"_EARSpeechRecognitionToken"8Q16^B24
OPP-
PCM-
OPUS_
Ads-
PHS-
OSD-
-synced
com.apple.CoreSpeech.AudioLogging
+[CSAudioFileManager generateDeviceAudioLogging:speechId:]_block_invoke
FLLR
+[CSAudioFileManager _readDataFromFileHandle:toFileHandle:]
%@%@.wav
%@/%@%@%@.wav
%@/%@%@.wav
+[CSAudioFileManager _createAudioFileWriterForAdBlockerWithLoggingDir:inputFormat:outputFormat:withAccessoryID:]
+[CSAudioFileManager _createAudioFileWriterForOpportuneSpeakListenerWithLoggingDir:inputFormat:outputFormat:]
+[CSAudioFileManager _createAudioFileWriterWithLoggingDir:withLoggingUUID:inputFormat:outputFormat:]
+[CSAudioFileManager _createAudioFileWriterForPHSTrainingWithLoggingDir:inputFormat:outputFormat:]
+[CSAudioFileManager _createAudioFileWriterForOSDWithLoggingDir:inputFormat:outputFormat:]
^%@*
%@(%@)?.wav$
+[CSAudioFileManager cleanupOrphanedGradingFiles]
+[CSAudioFileManager cleanupOrphanedGradingFiles]_block_invoke
v32@?0@"NSString"8@"NSURL"16^B24
attsiri
+[CSAudioFileManager audioFileWriterForAttentiveSiri]
%@.wav
CSFVoiceTriggerEventInfoSelfLoggerDarwin Queue
event
startVoiceTrigger
stopVoiceTrigger
HeySiriEnabled
Language
ModelVersion
languageCode
resourcePath
configVersion
assetHash
CSRemoteAssetManager
-[CSRemoteAssetManager _loadPreinstalledAssetMetaIfNeeded]
preinstalledMeta.json
VoiceTrigger/assetMeta.json
-[CSRemoteAssetManager _writeToJsonFile:]
-[CSRemoteAssetManager _loadJsonDataFromFile:]
-[CSRemoteAssetManager setLanguageCode:resourcePath:configVersion:assetHash:assetType:]
-[CSSelectiveChannelAudioFileWriter initWithURL:inputFormat:outputFormat:channelBitset:]
v16@?0Q8
-[CSSelectiveChannelAudioFileWriter addSamples:numSamples:]
%@ {backingStoreCapacity = %tu (bytes), minimalNumberOfBackingStores = %tu, maximumNumberOfBackingStores = %tu, backingStoreIdleTimeout = %f (seconds)}
-[CSDispatchGroup leave]
voiceTriggerSecondPass
voiceTriggerSecondPassAOP
voiceTriggerSecondPassAP
voiceTriggerSecondPassHearst
voiceTriggerSecondPassJarvis
voiceTriggerSecondPassRemora
voiceTriggerSecondPassPlus
voiceTriggerSecondPassDuringRingtone
voiceTriggerSecondPassDuringConnectedCall
voiceTriggerSecondPassEnrollment
preTriggerAudioTime
analyzerPrependingAudioTime
analyzerTrailingAudioTime
configFileRecognizer
recognizer.json
useKeywordSpotting
remoteVADThreshold
minimumPhraseLengthForVADGating
remoteVADMyriadThreshold
secondPassShadowMicScoreThresholdForVADGating
phrasesToSkipBoronDecisionMaking
+[CSVoiceTriggerSecondPassConfigDecoder decodeConfigFrom:forFirstPassSource:]
%s Requested audioTimeConverter on invalid streamHandleId
%s invalid packets
%s ::: CoreSpeech logging initialized (%s)
%s ::: SSR logging initialized (%s)
%s Fallback asset resource path : %{public}@
%s %{public}@
%s Cannot find corespeech asset from resourcePath : %{public}@
%s Configuration file is not exists : %{public}@
%s Cannot read configuration file : %{public}@
%s Cannot decode configuration json file : %{public}@
%s Configuration json file is not expected format
%s Cannot access to %{public}@ %{public}@ using default value=%{public}@
%s Cannot access to %{public}@ %{public}@
%s Comparing %{public}@ with %{public}@
%s Invalid rightConfig syntax : %{public}@
%s Invalid leftConfig syntax : %{public}@
%s Not comparable with %{public}@, ignore
%s Failed to create regular expression : %{public}@
%s Failed to allocate buffer since length zero
%s Failed to allocate buffer since length is larger than configuration
%s NumTransactionNow = %d
%s Entitlement was nil. We will assume process is not entitled.
%s Attempting to check %@ for entitlement: %@
%s Error creating audit token for: %@
%s Warning SecTaskCopyValueForEntitlement failed for token %@ with error (%ld)
%s Error Issue retrieving entitlement
%s Token dict: %@ and tokenString: %@ both must be non nil
%s isVirtualMachine ? %{public}@
%s Resource path %@ is not founded in system domain mask, returning nil path
%s More than 1 path %@ are founded in system domain mask, returning the last one as default
%s ERR: %{public}@
%s Device supporting barge-in ? %{public}@
%s Failed to find matching service to IOPlatformExpertDevice
%s Fetched hardware revision : %{public}@
%s Failed to find property "config-number"
%s Record route = %{public}@, playback route = %{public}@
%s Device endpointType = %{public}lu
%s hypotheticalRoute = %{public}@
%s Audio route changing to HFP is expected
%s default to recordContext : %{public}@
%s NDAPI initialization failed
%s set StartAnalyzeSampleCount = %{public}lld
%s NDAPI config doesn't contain threshold_normal
%s NDAPI config doesn't contain threshold_logging
%s NDAPI config doesn't contain threshold_reject_logging
%s Assistant Sampling: uncompressed audio logging will be enabled for this Siri request
%s Assistant Sampling: uncompressed audio logging will be disabled for this Siri request
%s Assistant Sampling: Unable to create FD on audioFilePath : (%{public}@)
%s Assistant Sampling: Failed to create directory : %@
%s Assistant Sampling: Unable to writeData : %{public}@
%s Assistant Sampling: Creating logging file : %@
%s Assistant Sampling: Failed to serialize plistRoot into plist : %{public}@
%s Failed to create FD for plist file
%s channelId %d out of bound %d
%s Cannot generate subChunk since channel(%{public}tu) is larger than number of channels(%{public}tu)
%s Cannot generate subChunk if it reuqest more than it has : %{public}tu %{public}tu %{public}tu
%s Unable to write subChunk into dstBufferSize(%d) : required buffer size (%d)
%s SpkrId:: Processing ended at: numSamplesProcessed=%lu, totalSampleCountToReach=%lu
%s numChannels: %{public}lu, recordingDuration: %{public}f, sampleRate: %{public}f
%s Cannot copy samples since this is empty
%s Could NOT copyFrom: %{public}lu to: %{public}lu, retSampleCount: %{public}lu
%s copyBuffer: oldestSample: %{public}lu latestSample: %{public}lu, numSamplesCopied: %{public}lu
%s CSAudioCircularBuffer.reset
%s Invalid request: reqStartSample=%{public}lu, reqEndSample=%{public}lu, oldestSampleInBuffer: %{public}lu, latestSampleInBuffer=%{public}lu
%s Creating OS Transaction for %{public}@
%s Release OS Transaction for %{public}@
%s Delta is larger than anchorHostTime: anchorSampleCount = %{public}lld, sampleTime = %{public}lld, anchorHostTime = %{public}lld
%s Delta is larger than anchorSampleCount
%s Not supported on this platform
%s ::: Error creating output file %{public}@, err: %{public}d
%s ::: Error writing to output wave file. : %{public}ld
%s metaInfo passed is nil - Bailing out
%s Unable to read data from file: %@
%s Could not read existing %@ file: err: %@
%s ERR: Failed to create json %{public}@ with %{public}@
%s saveAudioChunk toURL: %{public}@
%s Invalid request: nothing to write to file
%s enabled:%u
%s attendingTimeout: %f
%s Couldn't create SSV log directory at path %{public}@ %{public}@
%s Couldn't create speech log directory at path %{public}@ %{public}@
%s Force enabling VoiceTrigger AP mode ? %{public}@
%s Force enabling VoiceTrigger AOP mode ? %{public}@
%s Couldn't create SoS log directory at path %{public}@ %{public}@
%s enableAudioInection: is only available on internal builds
%s enabled: %@
%s setAudioInjectionFilePath: is only available on internal builds
%s kCSAudioInjectionFilePathKey is not array type
%s kCSAudioInjectionFilePathKey array size = %d
%s kCSAudioInjectionFilePathKey doesn't have NSString as an array entry
%s Adaptive Siri Volume failed to load user intent type. Ignoring intent
%s Adaptive Siri Volume failed to load user intent time. Ignoring intent
%s Adaptive Siri Volume failed to load user intent volume. Ignoring intent
%s Adaptive Siri Volume failed to load latest volume time. Ignoring intent
%s Adaptive Siri Volume failed to latest volume. Ignoring intent
%s Adaptive Siri Volume failed to load permanent offset status. Defaulting to no permanent volume offset
%s Adaptive Siri Volume failed to load permanent offset factor. Defaulting to unity permanent volume offset factor
%s Loaded Adaptive Siri Volume intentType: %{public}llu, intentTime: %{public}llu, intentVolume: %{public}f, latestVolumeTime: %{public}lld, latestVolume:%{public}f, permanentOffsetIsEnabled: %{public}d, permanentOffsetFactor: %{public}f
%s Called in unexpected platform!
%s BeepCanceller asset file loading from : %{public}@
%s Could not read beep file: %@
%s beepVector Size = %{public}lu
%s Cannot initialize beep canceller
%s Beep canceller initialized with maxNumSamples = %{public}d
%s It will beep now
%s Reset beep cancellation
%s Loading 1stPass-config=%@
%s Invalid input : startPoint = %{public}llu, endPoint = %{public}llu
%s Invalid input range
%s CS logging files under %{public}@ created before %{public}@ will be removed.
%s Couldn't get creation date: %{public}@
%s Could not remove %{public}@: %{public}@
%s CS logging files number %{public}lu with pattern %{public}@ under %{public}@ exceeding limit, only keep the latest %{public}lu ones
%s Invalid token or postfix
%s Invalid log directory
%s Couldn't create logging directory at path %{public}@ %{public}@
%s Regular expression is nil!
%s Directory URL is nil!
%s CSPhraseDetector Deallocated
%s Using second chance threshold for voice trigger second pass: %{public}f
%s Failed to fetch config
%s Invalid assets config!
%s VoiceTrigger memory lock %@
%s Reset all thresholds to HUGE_VALF since NDAPI is nil
%s Using threshold from NDAPI since we are not able to use Quasar, threshold = %{public}f, logging threshold = %{public}f
%s Unable to process due to number of result mismatch, ndapiResults number = %d
%s Received invalid result with %tu
%s Phrase detector results fall-into unexpected use case
%s [(%lu)] : NDAPI second pass best score = %{public}f with analyzed samples:                   %{public}tu with quasar score = %{public}f, ndapi scale factor = %{public}f, quasar scale factor = %{public}f
%s [(%tu)] : Trigger detected with %{public}tu analyzed samples in NDAPI,                   combined score = %{public}lf, effective threshold = %{public}f
%s [(%tu)] : Detected near miss at %{public}lu samples                       with best score up to: %{public}.3f
%s [(%tu)] : Waiting for logging near miss                               until timeout %{public}lu samples
%s [(%tu)] : Detected near miss candidate at %{public}tu,                       let's wait %{public}tu samples to log
%s [(%tu)] : Notify second pass reject at: %{public}tu                   with best score up to: %{public}.3f
%s Reporting decision (%tu) from (%tu)
%s Initializing Quasar with config: %{public}@
%s Failed initialization in _EARSyncSpeechRecognizer initWithConfiguration
%s ERR: Exception initializing _EARSyncSpeechRecognizer: %{public}s
%s Speech model loading took %{public}.3fms
%s endAudio failed
%s processAudioChunk failed
%s Invalid token : %{public}@
%s %tu, token = %{public}@
%s Unable to handle: %d
%s Res-%lu: 
%s tok=%@
%s In %@: Continuous digital zero detected, lasting %{public}u samples per channel
%s In %@: Continuous digital zero in this audio chunk detected, lasting %{public}u samples per channel
%s Transcriber trigger token list: %{public}@
%s runRecognition failed
%s recognizeWavData failed
%s Partial result confidence: %{public}f
%s CTC: Adding tok=%{public}@
%s CTC: Ignoring tok=%{public}@
%s MpVT: phId=%{public}@, tok=%{public}@
%s ERROR: %{public}s
%s CTC: Final-tok: %@(%f):%@
%s Final result confidence: %{public}f
%s EAR Token[%{public}lu]: %s (%{public}f)
%s Plan removing the temp file %{public}@
%s Failed to remove temp file %{public}@ reason: %{public}@
%s Start copying %{public}u bytes of data to crashreporter with wav file header offset %{public}llu
%s Failed to read data from %{public}@
%s Finished copying data to crashreporter.
%s Logging audio file into : %{public}@
%s ERR: reading contents of gradingDir: %{public}@ with error %{public}@
%s Deleting orphaned grading file %{public}@
%s ERR: Failed to delete %{public}@ with error %{public}@
%s Removing non-dir at AttentiveSiri AudioLog dir: %@
%s Error removing %@: err: %@
%s Failed to create AudioLogging directory for AttentiveSiri: %@
%s Created AudioLogging dir for AttentiveSiri at: %@
%s Skip reload assets, already up-to-date
%s preinstalled model meta not found : %{public}@
%s Invalid rawRemoteAssetMeta : %{public}@
%s Cannot create json file : %{public}@
%s Creating directory : %{public}@
%s Cannot remove asset meta file : %{public}@, %{public}@
%s Remote asset file is not exists : %{public}@
%s LanguageCode : %{public}@, resourcePath : %{public}@, configVersion : %{public}@, assetHash : %{public}@
%s unbalanced dispatch_group_enter and leave : ignore we are ignore dispatch_group_leave
%s CategoryKey %{public}@ not found, falling back to default
CSKeywordAnalyzerNDEAPIResult
CSKeywordAnalyzerNDEAPI
CSSinglePhraseResult
NSCopying
CSVoiceTriggerAirPodWearerDetectionConfig
CSAudioTimeConverterPool
CSVoiceTriggerFirstPassConfig
CSAudioChunkForTV
CSMobileAssetVersions
CSAsset
CSVoiceTriggerSecondPassConfig
CSVTUITrainingSelfLogger
CSVoiceTriggerPhraseConfig
CSReusableBufferBackingStore
CSReusableSharedMemoryBackingStore
CSReusablePrivateMemoryBackingStore
CSAudioZeroFilter
CSNovDetectorResult
CSNovDetector
CSOSTransactionStat
CSFAudioMetricsSelfLogger
CSAudioPlayingAppMonitor
Security
CSUtils
AudioDevice
CSAudioRecordContext
CSADPPreventStandbyAssertion
CSKeywordAnalyzerNDAPIResult
CSKeywordAnalyzerNDAPI
CSAudioTimeConverter
CSPolicy
CSEventMonitorDelegate
NSObject
CSDarwinVoiceTriggerEventInfoProvider
CSUncompressedAudioLogging
CSAudioChunk
CSAudioCircularBuffer
CSAudioPlayingApp
CSVoiceTriggerPhraseConfigDecoder
CSConfig
CSFVoiceTriggerEventInfoSelfLogger
CSOSTransaction
CSContinuousVoiceTriggerConfigDecoder
CSFTimeUtils
CSAudioDecoder
CSPlainAudioFileWriter
CSAudioFileWriter
CSFPreferences
CSBeepCanceller
CSVoiceTriggerFirstPassConfigDecoder
CSPowerAssertionAccessory
CSFRangeUtils
Directory
CSDiagnosticReporter
CSAudioPowerMeter
CSPhraseDetector
CSFVoiceTriggerEventInfoSelfLoggerEmbedded
CSSyncKeywordAnalyzerQuasarResult
CSSyncKeywordAnalyzerQuasar
CSAudioZeroCounter
CSContinuousVoiceTriggerConfig
CSKeywordAnalyzerQuasar
_EARSpeechRecognitionResultStream
CSPhraseDetectorInfo
CSReusableBufferPool
CSAudioFileManager
CSFCircularEventsCacheBuffer
CSFVoiceTriggerEventInfoSelfLoggerDarwin
CSPowerLogger
CSRemoteAssetManager
CSSelectiveChannelAudioFileWriter
CSReusableBufferPoolConfiguration
CSFLPCMTypeConverter
CSDispatchGroup
CSFAudioStreamBasicDescriptionFactory
CSVoiceTriggerSecondPassConfigDecoder
T@"CSSyncKeywordAnalyzerQuasar",&,N,V_syncKeywordAnalyzerQuasar
.cxx_destruct
T@"NSObject<OS_xpc_object>",R,N
CSRemoteAssetManagerDidDownloadNewAsset:
T@"NSString",&,N,V_samplingDate
JSONObjectWithData:options:error:
Tf,N,V_avgPower
T@"<CSAudioDecoderDelegate>",W,V_delegate
_anchorHostTime
T@"<CSKeywordAnalyzerNDEAPIScoreDelegate>",W,N,V_delegate
_buffer
T@"CSAudioTimeConverter",&,N,V_audioTimeConverter
_getConfidence:
T@"CSFCircularEventsCacheBuffer",&,N,V_firstPassEvents
_isEarlyWarning
T@"CSKeywordAnalyzerNDAPI",&,N,V_syncKeywordAnalyzerNDAPI
_lastEventIndex
T@"CSReusableBufferPoolConfiguration",R,N,V_configuration
_streamHandleID
T@"CSVoiceTriggerPhraseConfig",&,N,V_phraseConfig
_turnIdentifier
T@"NSArray",R,N,V_phrasesToSkipBoronDecisionMaking
analyzeWavFloatData:numSamples:
T@"NSArray",R,N,V_voiceTriggerPhIds
assetConfigVersionForAssetType:
T@"NSData",R,N,V_data
audioFileWriterForAttentiveSiri
T@"NSDictionary",&,N,V_ctcKwdToPhIdMap
bestEnd
T@"NSFileHandle",&,N,V_audioFileHandle
cancelledEvents
T@"NSMutableArray",&,N,V_phraseResult
clearMyriadSettingsOnAccessory:
T@"NSMutableDictionary",&,N,V_pool
containsObject:
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
ctcKwdToPhIdMap
T@"NSString",&,N,V_deviceId
dataWithLength:
T@"NSString",&,N,V_requestId
delaySecondsForChannelSelection
T@"NSString",&,N,V_samplingTimestamp
fileURL
T@"NSString",&,N,V_turnIdentifier
getBoolForKey:category:default:
T@"NSString",R,N
initWithFormat:
T@"NSString",R,N,V_bundleId
initWithRequestId:languageCode:
T@"NSString",R,N,V_configPathRecognizer
initWithResult:
T@"NSString",R,N,V_name
isProxy
T@"NSString",R,N,V_recognizerToken
isRunningQuasar
T@"NSURL",R,N,V_fileURL
isServerInvoked
TB,N,V_earlyWarning
logMHAssistantDaemonAudioInitContextWithMHUUID:withInitStarted:
TB,N,V_isEarlyDetect
myriadThreshold
TB,N,V_isRequestDuringActiveCall
outASBD
TB,N,V_isRescoring
packets
TB,R,N
recognizerToken
TB,R,N,V_isSecondChance
release
TB,R,N,V_useKeywordSpotting
runRecognitionWithResultStream:
TB,R,N,V_wasBuffered
seekToEndOfFile
TI,N,V_audioFormat
setHearstFirstPassModelVersion:
TI,R,N,V_numberOfChannels
setLanguageCode:resourcePath:configVersion:assetHash:assetType:
TQ,N,V_anchorHostTime
setPowerLoggingCurrentLanguage:
TQ,N,V_bestEnd
setSelfTriggerEnabledAccessory:
TQ,N,V_bestStart
ssvLogDirectory
TQ,N,V_nearMissCandidateDetectedSamples
stringFromDate:
TQ,N,V_numInputChannels
version
.cxx_construct
T@"NSArray",R,N,V_phraseConfigs
CSEventMonitorDidReceiveEvent:
T@"NSString",&,N,V_languageCode
EncryptionAudioSampleByteDepth
T@"NSString",R,N,V_resourcePath
T#,R
Tf,R,N,V_processingChunkSeconds
T@"<CSBeepCancellerDelegate>",W,N,V_delegate
_arrivalHostTimeToAudioRecorder
T@"<CSKeywordAnalyzerQuasarScoreDelegate>",W,N,V_delegate
_decay1
T@"CSFCircularEventsCacheBuffer",&,N,V_cancelledEvents
_inASBD
T@"CSFCircularEventsCacheBuffer",&,N,V_rejectEvents
_isSecondChance
T@"CSKeywordAnalyzerNDAPIResult",R,N,V_ndapiResult
_sha1ForString:
T@"CSVoiceTriggerAirPodWearerDetectionConfig",R,N,V_wearerDetectionConfig
_syncRecognizer
T@"NSArray",&,N,V_packets
_writePlistFile
T@"NSArray",R,N,V_silencePhIds
appName
T@"NSData",&,N,V_remoteVAD
audioFileHandle
T@"NSDictionary",&,N,V_activationMetadata
baseDir
T@"NSDictionary",R,N
bundleForClass:
T@"NSMutableArray",&,N,V_phraseDetectorInfos
cleanup
T@"NSMutableArray",R,N,V_eventsArray
configPathNDAPI
T@"NSMutableDictionary",&,N,V_triggerInfos
containsString:
T@"NSString",&,N,V_audioFilePath
dataForChannel:
T@"NSString",&,N,V_plistFilePath
dealloc
T@"NSString",&,N,V_samplingDirectory
deviceRequirePowerAssertionHeld
T@"NSString",&,N,V_samplingTimestampDetail
firstPassEvents
T@"NSString",R,C
getOptionValue:
T@"NSString",R,N,V_appName
initWithLength:
T@"NSString",R,N,V_configPathNDAPI
initWithResourcePath:configFile:configVersion:assetProvderType:
T@"NSString",R,N,V_configVersion
isBluetoothAudioDeviceConnected
T@"NSString",R,N,V_path
isRequestFromSpokenNotification
T@"NSString",R,N,V_version
isSelfTriggerFileLoggingEnabled
TB,N,V_alwaysUseRemoteBuiltInMic
isUIButtonPress
TB,N,V_hasPendingNearMiss
metrics
TB,N,V_isEarlyWarning
numberWithBool:
TB,N,V_isRequestFromSpokenNotification
outputs
TB,N,V_isSecondChance
recognizerScore
TB,R,N,V_isRunningQuasar
recycleHostTime
TB,R,N,V_isSecondChanceCandidate
removeObserver:
TB,R,N,V_useRecognizerCombination
sampleByteDepth
TI,N,V_activePhId
setAudioFormat:
TI,N,V_numChannels
setIsRescoring:
TQ,N,V_activeChannel
setNumChannels:
TQ,N,V_anchorSampleCount
setSawInfinity:
TQ,N,V_bestPhrase
setWithObjects:
TQ,N,V_bufferLength
stringByAppendingPathComponent:
TQ,N,V_nearMissDelayTimeout
supportRemoteDarwinVoiceTrigger
TQ,N,V_phId
TQ,N,V_recycleHostTime
TQ,N,V_sampleFed
TQ,N,V_samplesAtFire
TQ,N,V_samplesFed
TQ,N,V_startSampleCount
TQ,N,V_streamHandleID
TQ,N,V_timeStamp
TQ,R
TQ,R,N,V_arrivalHostTimeToAudioRecorder
TQ,R,N,V_assetProvider
TQ,R,N,V_backingStoreCapacity
TQ,R,N,V_decision
TQ,R,N,V_endPoint
TQ,R,N,V_hostTime
TQ,R,N,V_maximumNumberOfBackingStores
TQ,R,N,V_minimalNumberOfBackingStores
TQ,R,N,V_numChannels
TQ,R,N,V_numSamples
TQ,R,N,V_phId
TQ,R,N,V_processingChannelsBitset
TQ,R,N,V_sampleByteDepth
TQ,R,N,V_startPoint
TQ,R,N,V_startSampleCount
Td,N,V_triggerConfidence
Td,R,N,V_backingStoreIdleTimeout
Td,R,N,V_triggerConfidence
Tf,N,V_bestScore
Tf,N,V_effectiveKeywordThreshold
Tf,N,V_inputRecordingDuration
Tf,N,V_peakPower
Tf,R,N,V_combinedScore
Tf,R,N,V_delaySecondsForChannelSelection
Tf,R,N,V_keywordRejectLoggingThreshold
Tf,R,N,V_loggingThreshold
Tf,R,N,V_masterChannelScoreBoost
Tf,R,N,V_minimumPhraseLength
Tf,R,N,V_myriadThreshold
Tf,R,N,V_ndapiScaleFactor
Tf,R,N,V_ndapiScore
Tf,R,N,V_preTriggerAudioTime
Tf,R,N,V_preTriggerSilenceOffset
Tf,R,N,V_prependingAudioTime
Tf,R,N,V_recognizerScore
Tf,R,N,V_recognizerScoreOffset
Tf,R,N,V_recognizerScoreScaleFactor
Tf,R,N,V_remoraTwoShotFeedbackDelay
Tf,R,N,V_secondChanceThreshold
Tf,R,N,V_shadowMicScoreThreshold
Tf,R,N,V_speakerRejectLoggingThreshold
Tf,R,N,V_threshold
Tf,R,N,V_trailingAudioTime
Tf,R,N,V_twoShotDecisionWaitTime
Tf,R,N,V_twoShotFeedbackDelay
Tf,R,N,V_twoShotThreshold
Ti,N,V_numTransactionNow
Tq,N,V_type
Tr^v,R,N
URLByAppendingPathExtension:
URLByDeletingLastPathComponent
URLByDeletingPathExtension
URLWithString:
URLsInDirectory:matchingPattern:completion:
UTF8String
UUID
UUIDString
_activationMetadata
_activeChannel
_activePhId
_alwaysUseRemoteBuiltInMic
_ampToDB:
_analyzeStep
_anchorSampleCount
_appName
_assetHash
_assetProvider
_audioFileHandle
_audioFilePath
_audioFormat
_audioTimeConverter
_audioZeroFilterImpl
_averagePowerF
_averagePowerI
_averagePowerPeak
_avgPower
_backingStoreCapacity
_backingStoreIdleTimeout
_beepCanceller
_beepFloatVec
_bestEnd
_bestPhrase
_bestScore
_bestStart
_borealisPowerlog:
_bufferLength
_bufferSize
_bundleId
_callback
_canCreateNewBackingStore
_cancelledEvents
_checkAllConditionsEnabled
_checkIdleBackingStores
_clearAccessorySettingForKeys:forAccessory:
_clipping
_combinedScore
_conditions
_configPathNDAPI
_configPathRecognizer
_configPowerlog:
_configVersion
_configuration
_contentsOfDirectoryAtURL:matchingPattern:includingPropertiesForKeys:error:
_continuousZeroCounter
_createAVVCContextWithType:deviceId:
_createAudioFileWriterForAdBlockerWithLoggingDir:inputFormat:outputFormat:withAccessoryID:
_createAudioFileWriterForOSDWithLoggingDir:inputFormat:outputFormat:
_createAudioFileWriterForOpportuneSpeakListenerWithLoggingDir:inputFormat:outputFormat:
_createAudioFileWriterForPHSTrainingWithLoggingDir:inputFormat:outputFormat:
_createAudioFileWriterWithLoggingDir:withLoggingUUID:inputFormat:outputFormat:
_createFileDescriptor:protectionClass:
_createLoggingDirectoryIfNeeded:
_createNewBackingStore
_csAudioCircularBufferImpl
_cs_initWithXPCObject:
_cs_xpcObject
_ctcKwdToPhIdMap
_currentBlob
_currentLanguageCode
_data
_deallocator
_decay
_decision
_decodedInfo
_decoder
_delaySecondsForChannelSelection
_delegate
_description
_deviceId
_dispatchGroup
_dispatchGroupCounter
_earlyWarning
_effectiveKeywordThreshold
_endPoint
_eventsArray
_fileURL
_firstPassEvents
_floatBuffer
_getAnalyzedResults:
_getAudioTimeConverterWithAudioStreamId:
_getAvailableBackingStore
_getDateLabel
_getResultWithPhId:phraseDetectorInfo:ndapiResult:quasarResult:forceMaximized:
_hasPendingNearMiss
_hostTime
_inputRecordingDuration
_instantaneousMode
_isAdaptiveSiriVolumeDisabled
_isDirectory:
_isEarlyDetect
_isRemoteVoiceTriggerAvailable
_isRequestDuringActiveCall
_isRequestFromSpokenNotification
_isRescoring
_isRunningQuasar
_isSecondChanceCandidate
_isSecondChanceCandidateWithScore:effectiveThreshold:secondChanceThreshold:
_isStartSampleCountMarked
_keywordAnalyzerNDAPIResultFromNovDetectorResult:phId:
_keywordRejectLoggingThreshold
_languageCode
_lastResult
_lastSampleFed
_linearToDB:
_loadFromJsonFile:
_loadJsonDataFromFile:
_loadPreinstalledAssetMetaIfNeeded
_lock
_loggingThreshold
_masterChannelScoreBoost
_maxContinuousZeroCount
_maxPeak
_maximumNumberOfBackingStores
_methodToken
_minimalNumberOfBackingStores
_minimumPhraseLength
_monitors
_myriadThreshold
_name
_ndapiResult
_ndapiScaleFactor
_ndapiScore
_nearMissCandidateDetectedSamples
_nearMissDelayTimeout
_novDetector
_numChannels
_numInputChannels
_numPhrases
_numSamples
_numTotalInputSamples
_numTotalOutputSamples
_numTransactionNow
_numberOfBackingStores
_numberOfChannels
_observers
_outASBD
_packets
_path
_peak
_peakDecay
_peakDecay1
_peakHoldCount
_peakPower
_phId
_phIdToCtcScoreMap
_phToPhIdMap
_phToPhIdMapFromTriggerTokensArray:
_phraseConfig
_phraseConfigs
_phraseDetectorInfos
_phraseDetectorResultFromNDAPIResults:quasarResult:forceMaximized:
_phraseResult
_phrasesToSkipBoronDecisionMaking
_plistFilePath
_pool
_preTriggerAudioTime
_preTriggerSilenceOffset
_prepareFileForLogging
_prependingAudioTime
_preventDuplicatedReset
_previousBlockSize
_previousUtteranceTokens
_processAudioChunk:
_processingChannelsBitset
_processingChunkSeconds
_queue
_readDataFromFileHandle:toFileHandle:
_recognizeWavData:length:
_recognizer
_recognizerBuffer
_recognizerScore
_recognizerScoreOffset
_recognizerScoreScaleFactor
_recognizerToken
_recycleHostTime
_recycleUsedBackingStore:
_recycledBackingStores
_rejectEvents
_remoraTwoShotFeedbackDelay
_remoteAssetMetaPath
_remoteVAD
_requestId
_requireReset
_reset
_resetStartAnalyzeTime
_resourcePath
_resultCopyWithKeywordDetectorDecision:bestPhId:phraseResult:
_sampleByteDepth
_sampleFed
_sampleFedWrapAroundOffset
_sampleRate
_samplesAtFire
_samplesFed
_samplingDate
_samplingDirectory
_samplingTimestamp
_samplingTimestampDetail
_savePeaks:averagePower:maxSample:
_scaleDecayConstants:
_secondChanceThreshold
_setAssetsInfoFromMetaData:
_setStartAnalyzeTime:
_setupFilePath
_shadowMicScoreThreshold
_sharedAudioLoggingQueue
_sharedDisposeLoggingQueue
_shortBuffer
_shouldDeinterleaveAudio
_silencePhIds
_sortedURLsInDirectory:matchingPattern:completion:
_speakerRejectLoggingThreshold
_startAnalyzeSampleCount
_startPoint
_startSampleCount
_storeModeEnabled
_syncKeywordAnalyzerNDAPI
_syncKeywordAnalyzerQuasar
_threshold
_timeStamp
_timeStampString
_trailingAudioTime
_transaction
_triggerConfidence
_triggerInfos
_triggerTokenList
_twoShotDecisionWaitTime
_twoShotFeedbackDelay
_twoShotThreshold
_type
_updateConfigToPreferencesWithLanguage:withModelVersion:
_updatePreferenceSettingsForAccessory:settingsUpdateBlock:
_useKeywordSpotting
_useRecognizerCombination
_version
_voiceTriggerPhIds
_wasBuffered
_wearerDetectionConfig
_writeToJsonFile:
_zapgremlins:
_zeroCounterWinSz
_zeroCounterWinSzForReport
absoluteHostTimeToContinuousHostTime:
absoluteString
activationMetadata
activeChannel
activePhId
adaptiveSiriVolumePermanentOffset
adaptiveSiriVolumeRecentIntent
addAudioSamples:count:
addConditions:
addContextKey:fromMetaFile:
addContextKey:withContext:
addEventToCacheBuffer:
addObject:
addObserver:
addObserver:forAssetType:
addPackets:audioStreamHandleId:remoteVAD:timestamp:arrivalTimestampToAudioRecorder:wasBuffered:receivedNumChannels:
addSamples:numSamples:
addSamples:numSamples:atHostTime:
adjustTwoShotDelay:
aiffFileASBD
allowExtendedRingBufferSize
alwaysUseRemoteBuiltInMic
analyzeWavData:numSamples:
anchorHostTime
anchorSampleCount
appendAudioData:
appendData:
appendFormat:
appendString:
apply12dBGainToFloatBuffer:
apply12dBGainToShortBuffer:
applyGain:toFloatBuffer:
applyGain:toShortBuffer:
applyNegative20dBGainToFloatBuffer:
applyNegative20dBGainToShortBuffer:
applyNegative32dBGainToFloatBuffer:
applyNegative32dBGainToShortBuffer:
array
arrayWithObject:
arrayWithObjects:
arrayWithObjects:count:
arrivalHostTimeToAudioRecorder
assetForAssetType:resourcePath:configVersion:
assetForAssetType:resourcePath:configVersion:assetProvider:
assetForCurrentLanguageOfType:
assetHashForAssetType:
assetHashForTrial:
assetHashInResourcePath:
assetProvider
assistantAudioFileLogDirectory
assistantLogDirectory
audioConverterBitrate
audioDecoderDidDecodePackets:audioStreamHandleId:buffer:remoteVAD:timestamp:arrivalTimestampToAudioRecorder:wasBuffered:receivedNumChannels:
audioFilePath
audioFormat
audioInjectionEnabled
audioInjectionEnabledWithKey:
audioInjectionFilePath
audioPortSubtypeAsString:
audioSessionActivationDelay
audioTimeConverter
auditTokenToString:
autorelease
avgPower
avvcActivationMode:
avvcContext
backingStoreCapacity
backingStoreIdleTimeout
beepCancellerDidCancelSamples:buffer:timestamp:
bestPhrase
bestScore
bestStart
boolValue
bufferLength
bundleId
bundlePath
bypassPersonalizedHeySiri
bypassSpeakerIdForMitigation
bypassTrialAssets
bytes
cancelBeepFromSamples:timestamp:
caseInsensitiveCompare:
categoryForFirstPass:
channelForOutputReference
channelForProcessedInput
characterSetWithCharactersInString:
checkEntitlementForToken:withEntitlement:
checkForTriggerWithBytes:withNumberOfSamples:
chunkForChannel:
class
cleanupOrphanedGradingFiles
clearAlarmPlayingStatusOnAccessory:
clearBuffer
clearLogFilesInDirectory:matchingPattern:exceedNumber:
clearMediaPlaybackInterruptedTimeOnAccessory:
clearMediaPlayingStatusOnAccessory:
clearTimerPlayingStatusOnAccessory:
closeFile
combinedScore
companionSyncVoiceTriggerUtterancesEnabled
compare:
componentsSeparatedByCharactersInSet:
componentsSeparatedByString:
confidence
configPathRecognizer
configVersion
configuration
configureWithBytes:length:
conformsToProtocol:
containsCategory:
containsKey:category:
contentsOfDirectoryAtPath:error:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
contextForBTLEWithDeviceId:
contextForBuiltInVoiceTrigger
contextForDarwinVoiceTriggerWithDeviceId:
contextForDictation
contextForHearstVoiceTriggerWithDeviceId:
contextForHomeButton
contextForJarvisWithDeviceId:
contextForOpportuneSpeakerListener
contextForOpportuneSpeakerListenerWithCall
contextForRemoraButtonTriggerWithDeviceId:
contextForRemoraVoiceTriggerWithDeviceId:
contextForServerInvoke
contextForVoiceTriggerTraining
convertSampleCountToNs:sampleRate:
convertToFloatLPCMBufFromShortLPCMBuf:
convertToShortLPCMBufFromFloatLPCMBuf:
converterForAudioStreamId:
copy
copyBufferWithNumSamplesCopiedIn:
copySamplesFrom:to:
copySamplesFrom:to:channelIdx:
copySamplesFromHostTime:
copySubAudioChunkFrom:numSamples:to:dstBufferSize:
copyWithThreshold:secondChanceThreshold:loggingThreshold:ndapiScaleFactor:recognizerScoreOffset:recognizerScoreScaleFactor:keywordRejectLoggingThreshold:
copyWithZone:
copybufferFrom:to:
count
countByEnumeratingWithState:objects:count:
createAcousticMetaFileForContext:withContext:
createAudioFileWriterForAdBlockerWithInputFormat:outputFormat:withAccessoryID:
createAudioFileWriterForOSDWithInputFormat:outputFormat:
createAudioFileWriterForOpportuneSpeakListenerWithInputFormat:outputFormat:
createAudioFileWriterForPHSTrainingWithInputFormat:outputFormat:
createAudioFileWriterForRemoteVADWithInputFormat:outputFormat:withLoggingUUID:
createAudioFileWriterWithInputFormat:outputFormat:withLoggingUUID:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createSamplingDirectory
createSelectiveChannelAudioFileWriterWithChannelBitset:
csAudioProcessingQueuePriority
currentRoute
data
dataUsingEncoding:
dataWithBytes:length:
dataWithCapacity:
dataWithContentsOfFile:
dataWithContentsOfFile:options:error:
dataWithJSONObject:options:error:
dataWithPropertyList:format:options:error:
dataWithRemoteVADWithScaleFactor:numAudioSamplesPerRemoteVAD:
date
dateWithTimeIntervalSinceNow:
daysBeforeRemovingLogFiles
debugDescription
decision
decodeConfigFileNDAPI:fromCategory:
decodeConfigFileRecognizer:fromCategory:
decodeConfigFrom:
decodeConfigFrom:category:
decodeConfigFrom:forFirstPassSource:
decodeConfigV1:category:
decodeConfigV2:category:
decodeJson:
decodePreTriggerAudioTime:fromCategory:
decodePrependingAudioTime:fromCategory:
decodeTrailingAudioTime:fromCategory:
decodeUseKeywordSpotting:fromCategory:
decodeUseRecognizerCombination:fromCategory:
decodeWearerDetectionConfig:fromCategory:
defaultContext
defaultContinousFingerprintBufferDuration
defaultContinousFingerprintBufferDurationForRemora
defaultConverter
defaultFallBackAssetForAdBlocker
defaultFallBackAssetForHearst
defaultFallBackAssetForSmartSiriVolume
defaultManager
defaultTwoShotDelay
delegate
description
deviceBuildVersion
deviceHwRevision
deviceId
deviceIdentifier
deviceProductType
deviceProductVersion
deviceRequirePreventStandbyAssertion
deviceUserAssignedName
dictionary
dictionaryWithCapacity:
dictionaryWithDictionary:
dictionaryWithObjects:forKeys:count:
disableAdaptiveSiriVolume:
distantFuture
doubleValue
dumpEARSpeechRecognitionResults:
earlyWarning
effectiveBoolValueForSetting:
effectiveKeywordThreshold
enableAudioInjection:
enableAudioInjection:withKey:
enableEndpointEnhancedLogging:
enableProgrammableAudioInjection:
endAudio
endAudioAndFetchAnyTrailingZerosPacket:
endPoint
endpointType
enter
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
eventsArray
fFile
fakeEndpointAssetPath
fakeHearstModelPath
fakeMitigationAssetPath
fakeVoiceTriggerAssetPath
fallBackAssetResourcePath
fetchAndClearCachedVoiceTriggerEventsWithCompletion:
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileLoggingIsEnabled
fileLoggingLevel
fileURLWithPath:
filterZerosInAudioPacket:atBufferHostTime:filteredPacket:
filteredArrayUsingPredicate:
firstMatchInString:options:range:
firstObject
firstPassDebuggingEnabled
floatValue
flush
flushAudio
forceMitigateForHybridSDSD
forceVoiceTriggerAOPMode
forceVoiceTriggerAPMode
gainCompensatedChunk
geckoAudioLogDirectory
geckoLoggingLevel
generateDeviceAudioLogging:speechId:
getASVUserIntent:
getAnalyzedResultForPhId:
getAnalyzedResultFromAudioChunk:
getAnalyzedResultFromFlushedAudio
getAnalyzedResults
getAnalyzedResultsFromAudioChunk:
getAttendingTimeoutConfig
getAveragePowerDB
getBestAnalyzedResult
getBestAnalyzedResults
getBestAnalyzedResultsFromAudioChunk:
getBooleanAccessorySettingValueForKey:forAccessory:
getBytes:length:
getConfigFileNameForAssetType:
getFixedHighPrioritySerialQueueWithLabel:priority:
getFixedPrioritySerialQueueWithLabel:fixedPriority:
getHostClockFrequency
getIdleUserPreventSleepAssertionAcquitionDate
getJarvisTriggerMode
getLastResult
getLoggingThreshold
getLosingPhraseResultsWithDetectedPhId:
getMachTimeAdjustedVoiceTriggerEventInfoForDeviceUUID:
getMediaPlaybackInterruptedTime:
getNumElementInBitset:
getNumberForKey:category:default:
getPeakPowerDB
getRejectLoggingThreshold
getResourcePathInSystemDomainMaskByAppending:
getResourcePathInSystemDomainMaskFromRootPathByAppending:
getResourceValue:forKey:error:
getResultsFromFlushedAudio
getSSVLogFilePathWithSessionIdentifier:
getSerialQueue:qualityOfService:
getSerialQueue:withQualityOfService:andTargetQueue:
getStartOfSpeechAudioLogFilePath
getStringForKey:category:default:
getSuperVectorWithEndPoint:
getThreshold
getTokenFromDictionary:withTokenKey:
getValueForKey:category:
getVoiceTriggerAssetTypeString
getVoiceTriggerAssetTypeStringWithSupportMphAssets:deviceIsIPad:deviceIsWatch:deviceIsHorseman:deviceIsOSX:deviceIsTV:deviceIsIOS:
getVoiceTriggerCurrentCompatibilityVersion
getVoiceTriggerCurrentCompatibilityVersionWithSupportMphAssets:deviceIsIPad:deviceIsWatch:deviceIsHorseman:deviceIsOSX:deviceIsTV:deviceIsIOS:
getZeroStatisticsFromBuffer:entireSamples:
handleUsedBackingStore:
hasIntersectionWithRange:
hasPendingNearMiss
hasRemoteBuiltInMic
hasRemoteCoreSpeech
hash
hashFromResourcePath
hearstNumberOfBytesPerChunk
hearstNumberOfSamplesPerChunk
horsemanDeviceType
hostTime
hostTimeFromSampleCount:
hostTimeFromSampleCount:anchorHostTime:anchorSampleCount:sampleRate:
hostTimeToNs:
hostTimeToSeconds:
hostTimeToTimeInterval:
hybridEndpointerAssetFilename
inASBD
init
initWithAVVCContext:
initWithBackingStoreCapacity:minimalNumberOfBackingStores:maximumNumberOfBackingStores:backingStoreIdleTimeout:
initWithBlob:
initWithBlob:isEarlyDetected:
initWithBuffer:bufferSize:deallocator:
initWithBufferSize:
initWithBytes:length:
initWithBytesNoCopy:length:deallocator:
initWithCapacity:
initWithConfidence:
initWithConfigPath:resourcePath:
initWithConfigPath:triggerTokens:useKeywordSpotting:
initWithConfigPath:triggerTokensArray:preventDuplicatedReset:memoryLock:
initWithConfigPathNDAPI:threshold:delaySecondsForChannelSelection:masterChannelScoreBoost:processingChunkSeconds:processingChannelsBitset:
initWithConfigPathNDAPI:threshold:twoShotThreshold:twoShotDecisionWaitTime:voiceTriggerPhIds:silencePhIds:
initWithConfiguration:
initWithConfiguration:memoryLock:
initWithData:encoding:
initWithData:numChannels:numSamples:sampleByteDepth:startSampleCount:hostTime:arrivalHostTimeToAudioRecorder:wasBuffered:remoteVAD:
initWithData:numChannels:numSamples:sampleByteDepth:startSampleCount:hostTime:remoteVAD:
initWithDescription:
initWithFileDescriptor:closeOnDealloc:
initWithFilepath:
initWithInASBD:outASBD:
initWithName:clientQueue:
initWithName:threshold:secondChanceThreshold:loggingThreshold:ndapiScaleFactor:recognizerScoreOffset:recognizerScoreScaleFactor:recognizerToken:twoShotFeedbackDelay:remoraTwoShotFeedbackDelay:keywordRejectLoggingThreshold:speakerRejectLoggingThreshold:preTriggerSilenceOffset:
initWithName:timeout:
initWithNumChannels:recordingDuration:samplingRate:
initWithNumChannels:recordingDuration:samplingRate:audioTimeConverter:
initWithPhId:keywordDetectorDecision:combinedScore:ndapiScore:ndapiResult:recognizerScore:isSecondChance:isSecondChanceCandidate:isRunningQuasar:
initWithPhraseConfig:
initWithPid:
initWithPreTriggerAudioTime:prependingAudioTime:trailingAudioTime:resourcePath:configPathNDAPI:useRecognizerCombination:configPathRecognizer:useKeywordSpotting:phraseConfigs:wearerDetectionConfig:
initWithRecordType:deviceId:
initWithSampleRate:
initWithStartPoint:endPoint:
initWithThreshold:minimumPhraseLength:shadowMicScoreThreshold:myriadThreshold:phrasesToSkipBoronDecisionMaking:
initWithToken:sampleRate:numChannels:
initWithURL:
initWithURL:inputFormat:outputFormat:
initWithURL:inputFormat:outputFormat:channelBitset:
initWithXPCObject:
initWithZeroWindowSize:approxAbsSpeechThreshold:numHostTicksPerAudioSample:
inputRecordingBufferDuration
inputRecordingBytesPerFrame
inputRecordingBytesPerPacket
inputRecordingDuration
inputRecordingDurationInSecs
inputRecordingDurationInSecsExtended
inputRecordingEncoderAudioQuality
inputRecordingFramesPerPacket
inputRecordingIsFloat
inputRecordingNumberOfChannels
inputRecordingSampleBitDepth
inputRecordingSampleByteDepth
inputRecordingSampleRate
inputRecordingSampleRateConverterAlgorithm
inputRecordingSampleRateNarrowBand
insertObject:atIndex:
intValue
integerValue
interstitialAbsoluteDirForLevel:
interstitialRelativeDirForLevel:
invalidate
isAdBlockerAudioLoggingEnabled
isAdaptiveSiriVolumePermanentOffsetEnabled
isAdaptiveSiriVolumeTemporaryIntentValid
isAlarmPlayingOnAccessory:
isAttentiveSiriAudioLoggingEnabled
isAttentiveSiriEnabled
isAudioRecordTypeSupportedByRemora
isBluetoothVehicleOutput
isBuiltInVoiceTriggered
isDarwinOS
isDarwinVoiceTriggered
isDictation
isDictationOnSRDEnabled
isEarlyDetect
isEarlyWarning
isEnabled
isEndpointAssetBypassTrialEnabled
isEndpointAssetOverridingEnabled
isEndpointEnhancedLoggingEnabled
isEqual:
isEqualAsset:
isEqualToString:
isGibraltarVoiceTriggered
isHFPWithRecordRoute:
isHeadphoneDeviceWithRecordRoute:playbackRoute:
isHearstDoubleTapTriggered
isHearstVoiceTriggered
isHomePressed
isIOSDeviceSupportingBargeIn
isJarvisVoiceTriggered
isKindOfClass:
isLeftConfigVersion:newerThanRightConfigVersion:
isLocalVoiceTriggerAvailable
isMediaPlayingOnAccessory:
isMemberOfClass:
isMitigationAssetOverridingEnabled
isModelBenchmarkingEnabled
isMphVTEnabled
isMultiChannelAudioLoggingEnabled
isP2PTransferEnabled
isPHSSupported
isRTSTriggered
isReceivedTimeInterval:matchCurrentTimeInterval:
isReducedPHSThresholdEnabled
isRemoraButtonPress
isRemoraTriggered
isRemoraVoiceTriggered
isRequestDuringActiveCall
isRescoring
isSecondChance
isSecondChanceCandidate
isSelfTriggerEnabledAccessory
isSpeakerRecognitionAvailable
isStarkTriggered
isTVPushToTalkEnabled
isTVRemote
isTimerPlayingOnAccessory:
isTriggeredFromHearst
isVoiceTriggerAssetOverridingEnabled
isVoiceTriggered
isVoiceTriggeredFromRemoteXPCDevice
isWriting
isiOSButtonPress
iterateBitset:block:
jarvisAudioLoggingEnabled
keywordAnalyzerQuasar:hasResultAvailable:forChannel:
keywordRejectLoggingThreshold
languageCode
languageCodeDarwin
lastObject
lastPathComponent
latestVolume
latestVolumeTime
leave
length
localeWithLocaleIdentifier:
localizedDescription
logCancelledEventWithMHUUID:
logCoreSpeechPreprocessorCompletedWithMHUUID:withMetricsDictionary:
logMHASRAudioConfigureStartedWithMHUUID:withAudioCodecString:withAudioSkippedNumSamples:
logMHApplicationPlaybackAttemptedWithMHUUID:withAppBundleName:withAppBundleVersion:
logMHAssistantDaemonAudioBluetoothInfoWithMHUUID:withWirelessSplitterSessionState:withAudioDeviceCategory:
logMHAssistantDaemonAudioConfigureContextWithMHUUID:withConfigureStarted:
logMHAssistantDaemonAudioFetchRouteContextWithMHUUID:withFetchRouteContextStarted:
logMHAssistantDaemonAudioLateBufferDetectedWithMHUUID:withBufferReceiptTimeInNs:
logMHAssistantDaemonAudioPrepareContextWithMHUUID:withPrepareStarted:
logMHAssistantDaemonAudioPrewarmContextWithMHUUID:withPrewarmStarted:
logMHAssistantDaemonAudioRecordingContextWithMHUUID:withAudioRecordingStarted:withAudioInputRoute:withAudioSource:withAudioInterfaceVendorId:withAudioInterfaceProductId:
logMHAssistantDaemonAudioRecordingFailedWithMHUUID:withReason:vendorId:productId:
logMHAssistantDaemonAudioRecordingFirstBufferWithMHUUID:withStartEvent:withFirstBufferStartTimeOffsetNs:withFirstBufferReceiptTimeOffsetNs:
logMHAssistantDaemonAudioRecordingInterruptionContextWithMHUUID:withStartEvent:withLinkID:withAvAudioSessionInterruptorName:withAVAudioSessionInterrupterType:
logMHAssistantDaemonAudioRecordingInterruptionStartedTier1WithMHUUID:withLinkID:withActiveSessionDisplayIDs:
logMHAssistantDaemonAudioRecordingLastBufferWithMHUUID:withStartEvent:withLastBufferStartTimeOffsetNs:withLastBufferReceiptTimeOffsetNs:
logMHAssistantDaemonAudioRecordingMissedBufferDetectedWithMHUUID:
logMHAssistantDaemonAudioSessionSetActivateContextWithMHUUID:withSetActivateStarted:
logMHAssistantDaemonAudioSessionSetInactiveWithMHUUID:withSetInactiveStarted:
logMHAssistantDaemonAudioStartRecordingContextWithMHUUID:withStartRecordingContext:withFanInfoArray:withActiveSessionDisplayIDs:
logMHAssistantDaemonAudioStopRecordingContextWithMHUUID:withStopRecordingStarted:withADStopRecordingEvent:
logRejectEventWithVTEI:withMHUUID:withSecondPassResult:
logSiriLaunchCompletedWithVoiceTriggerEventInfo:
logSiriLaunchStartedWithVoiceTriggerEventInfo:
logSiriSetupPHSEnrollmentDigitalZeroDetectionCompletedWithSiriSetupID:PageNumber:withPhId:withMaxNumContinuousZeros:withMaxNumAllowedContinuousZeros:withIsMaxNumContinuousZerosOverThreshold:
logSiriSetupPHSEnrollmentUtteranceCompletedWithSiriSetupID:withPageNumber:withPhId:withTopScoreForUtterance:withStartSampleCount:withEndSampleCount:withHasSpeechDetected:
logStartEventWithFirstPassStartedInfo:withMHUUID:
logTriggerEventWithVTEI:withMHUUID:
logTwoShotDetectedWithMHUUID:
logTwoShotEndEventWithSuppresedAlert:withTimedOut:withMHUUID:
logTwoShotStartEventWithPromptType:withMHUUID:
loggingFilePathWithDirectory:token:postfix:
loggingThreshold
longLongValue
lpcmASBD
lpcmFloatASBD
lpcmInt16ASBD
lpcmInt16NarrowBandASBD
lpcmInterleavedASBD
lpcmInterleavedASBDWithSampleRate:numberOfChannels:
lpcmInterleavedWithRemoteVADASBD
lpcmMonoInterleavedASBD
lpcmMonoInterleavedWithRemoteVADASBD
lpcmMonoNonInterleavedASBD
lpcmMonoNonInterleavedWithRemoteVADASBD
lpcmNarrowBandASBD
lpcmNonInterleavedASBD
lpcmNonInterleavedASBDWithSampleRate:numberOfChannels:
lpcmNonInterleavedWithRemoteVADASBD
macHostTimeFromBridgeHostTime:
masterChannelScoreBoost
maxNumGradingFiles
maxNumLoggingFiles
maximumNumberOfBackingStores
mhLogDirectory
millisecondsToNs:
minimalNumberOfBackingStores
minimumPhraseLength
mutableBytes
mutableCopy
myriadFileLoggingEnabled
myriadHashDirectory
myriadHashFilePath
name
ndapiResult
ndapiScaleFactor
ndapiScore
nearMissCandidateDetectedSamples
nearMissDelayTimeout
notifyCallback:option:
notifyCallbackWithOption:
numChannels
numInputChannels
numResultsAvailable
numSamples
numTransaction
numTransactionNow
numberOfChannels
numberOfMatchesInString:options:range:
numberOfRanges
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
offsetInFile
opportuneSpeakListenerBypassEnabled
opportuneSpeakingFileLoggingIsEnabled
opusASBD
opusNarrowBandASBD
overwritingRemoteVADScore
overwritingVoiceTriggerMLock
parseCompatibilityFromConfigVersion:
path
peakPower
peakValueSinceLastCall
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
permanentOffsetFactor
permanentOffsetIsEnabled
personalizedSiriEnrollmentAudioLoggingEnabled
phId
phraseConfig
phraseConfigs
phraseDetectorInfoFromPhId:
phraseDetectorInfos
phraseResult
phraseSpotterEnabled
phrasesToSkipBoronDecisionMaking
pickedRoute
platformSupportsImplicitUttAddition
playingApps
plistFilePath
pool
powerLogSecondPassWithResult:withSecondPassScore:withPhId:
powerLogSiriConfigWithVoiceTriggerEnabled:withLanguage:withModelVersion:
powerLogVoiceTriggerStart
powerLogVoiceTriggerStop
powerLoggingCurrentAssetConfigVersion
powerLoggingCurrentLanguage
powerWithNumFalseWakeup:withDuration:withPhraseDict:
preTriggerAudioTime
preTriggerSilenceOffset
predicateWithBlock:
prepareLogging
prependingAudioTime
processAudioBytes:withNumberOfSamples:
processAudioChunk:
processFloatBuffer:stride:inFrameToProcess:
processIdentifier
processInfo
processSampleCount:hostTime:
processShortBuffer:stride:inFrameToProcess:
processingChannelsBitset
processingChunkSeconds
programmableAudioInjectionEnabled
pruneLogFiles
pruneNumberOfGradingFilesTo:
pruneNumberOfLogFilesTo:
queue
rangeAtIndex:
readDataOfLength:
readSpeakerIdScoreOverrrideConfig
recognizerScoreOffset
recognizerScoreScaleFactor
recordTypeFromAVVCActivationMode:
recordTypeString:
regularExpressionWithPattern:options:error:
rejectEvents
remoraTwoShotFeedbackDelay
remoteGradingDataDirectory
remoteP2pLogDirectory
remoteVAD
remoteVADAvailable
remoteVADDuration
remoteVADSubChunkFrom:numSamples:numAudioSamplesPerRemoteVAD:
remoteVoiceTriggerDelayTime
remoteVoiceTriggerEndpointTimeoutWithDefault:
removeAllObjects
removeItemAtPath:error:
removeItemAtURL:error:
removeLastObject
removeLogFilesInDirectory:matchingPattern:beforeDays:
removeLogFilesOlderThanNDays:
removeObject:
removeObjectForKey:
removeObjectsInRange:
removeObserver:forAssetType:
removeOpportunisticAudioLoggingOlderThanNDays:
removeRemoteP2PLogFilesOlderThanNDays:
reportCreation
reportDestroy
reportDigitalZerosWithAudioZeroRun:
requestId
reset
resetBest
resetWithSampleRate:
resetWithSamplingRate:language:taskType:userId:sessionId:deviceId:farField:audioSource:maxAudioBufferSizeSeconds:
resourcePath
resourcePathForAssetType:
respondsToSelector:
resultsWithAddedAudio:numberOfSamples:taskName:
resultsWithAddedFloatAudio:numberOfSamples:taskName:
resultsWithEndedAudio
retain
retainCount
rootQueueWithFixedPriority:
runRecognition
sampleCount
sampleCountFromHostTime:
sampleCountFromHostTime:anchorHostTime:anchorSampleCount:sampleRate:
sampleFed
samplesAtFire
samplesFed
samplingDate
samplingDirectory
samplingTimestamp
samplingTimestampDetail
saveAudioChunck:toURL:
secondChanceThreshold
secondPassAudioLoggingEnabled
secondsToHostTime:
secondsToNs:
seekToFileOffset:
selectedChannelList
self
serverLoggingChannelBitset
setASVUserIntent:
setActivationMetadata:
setActiveChannel:
setActivePhId:
setAlwaysUseRemoteBuiltInMic:
setAnchorHostTime:
setAnchorSampleCount:
setAudioFileHandle:
setAudioFilePath:
setAudioInjectionFilePath:
setAudioTimeConverter:
setAvgPower:
setBestEnd:
setBestPhrase:
setBestScore:
setBestStart:
setBooleanAccessorySettingValue:forKey:forAccessory:
setBufferLength:
setCallback:
setCancelledEvents:
setConfig:
setCtcKwdToPhIdMap:
setDateFormat:
setDelegate:
setDeviceId:
setEarlyWarning:
setEffectiveKeywordThreshold:
setFakeHearstModelPath:
setFileLoggingIsEnabled:
setFileLoggingLevel:
setFirstPassEvents:
setHasPendingNearMiss:
setHearstSecondPassModelVersion:
setIdleUserPreventSleepAssertionAcquitionDate:
setInputRecordingDuration:
setIsAlarmPlayingOnAccessory:isAlarmPlaying:
setIsEarlyDetect:
setIsEarlyWarning:
setIsMediaPlayingOnAccessory:isMediaPlaying:isInterrupted:interruptedTime:
setIsRequestDuringActiveCall:
setIsRequestFromSpokenNotification:
setIsSecondChance:
setIsTimerPlayingOnAccessory:isTimerPlaying:
setJarvisTriggerMode:
setLanguageCode:
setLatestVolume:
setLatestVolumeTime:
setLocale:
setMediaPlayingSettingForAccessory:isMediaPlaying:isInterrupted:interruptedTime:
setNearMissCandidateDetectedSamples:
setNearMissDelayTimeout:
setNumInputChannels:
setNumTransactionNow:
setObject:atIndexedSubscript:
setObject:forKey:
setObject:forKeyedSubscript:
setPackets:
setPeakPower:
setPeakValueSinceLastCall:
setPermanentOffsetFactor:
setPermanentOffsetIsEnabled:
setPhId:
setPhraseConfig:
setPhraseDetectorInfos:
setPhraseResult:
setPlistFilePath:
setPool:
setPowerLoggingCurrentAssetConfigVersion:
setQueue:
setRawVoiceTriggerEventInfo:fromDeviceUUID:anchorHostMachTime:anchorDarwinMachTime:
setRecycleHostTime:
setRejectEvents:
setRemoteDarwinEverConnectedWithNotifyKey:
setRemoteVAD:
setRequestId:
setRunAsSecondChance:
setSampleFed:
setSamplesAtFire:
setSamplesFed:
setSamplingDate:
setSamplingDirectory:
setSamplingTimestamp:
setSamplingTimestampDetail:
setSawNotANumber:
setSiriLanguageCodeDarwin:
setStartSampleCount:
setStreamHandleID:
setSyncKeywordAnalyzerNDAPI:
setSyncKeywordAnalyzerQuasar:
setTimeStamp:
setTriggerConfidence:
setTriggerInfos:
setTurnIdentifier:
setType:
setUserIntentTime:
setUserIntentType:
setUserIntentVolume:
setValue:forKey:
setVoiceTriggerEverUsed
shadowMicScoreThreshold
sharedConnection
sharedInstance
sharedLogger
sharedManager
sharedMonitor
sharedPowerLogger
sharedPreferences
shouldDeinterleaveAudioOnCS
shouldDelayPhaticForMyriadDecision
shouldDownloadVTAssetsOnDaemon
shouldOverwriteRemoteVADScore
shouldOverwriteVoiceTriggerMLock
silencePhIds
siriDataSharingOptInStatus
skipSamplesAtStartSuchThatNumSamplesReceivedSoFar:reachesACountOf:completionHandler:
smartSiriVolumeContextAwareEnabled
smartSiriVolumeContextAwareLoggingEnabled
smartSiriVolumeSoftVolumeEnabled
sortedArrayUsingComparator:
speakerIdScoreReportingType
speakerRecognitionAudioLoggingEnabled
speakerRejectLoggingThreshold
speechRecognizer:didFinishRecognitionWithError:
speechRecognizer:didProcessAudioDuration:
speechRecognizer:didProduceEndpointFeaturesWithWordCount:trailingSilenceDuration:eosLikelihood:pauseCounts:silencePosterior:processedAudioDurationInMilliseconds:
speechRecognizer:didProduceLoggablePackage:
speechRecognizer:didRecognizeFinalResultCandidatePackage:
speechRecognizer:didRecognizeFinalResultPackage:
speechRecognizer:didRecognizeFinalResults:
speechRecognizer:didRecognizeFinalResults:tokenSausage:nBestChoices:
speechRecognizer:didRecognizePartialResult:
speechRecognizer:didRecognizePartialResultNbest:
speechRecognizer:didRecognizeRawEagerRecognitionCandidate:
speechRecognizer:didReportStatus:statusContext:
speexASBD
splitAudioChunkSuchThatNumSamplesReceivedSoFar:reachesACountOf:completionHandler:
startOfSpeechAudioLoggingEnabled
startPoint
startSampleCount
stopCountingZeroStatisticsWithReporter:
streamHandleID
string
stringByAppendingString:
stringByDeletingLastPathComponent
stringByDeletingPathExtension
stringByReplacingOccurrencesOfString:withString:
stringForCurrentAssetProviderType
stringWithCapacity:
stringWithFormat:
stringWithUTF8String:
subChunkFrom:numSamples:
subChunkFrom:numSamples:forChannel:
subdataWithRange:
submitAudioIssueReport:
submitAudioIssueReport:withContext:
submitEndpointerIssueReport:
submitRemoteCoreSpeechReport:context:
submitSiriPowerIssueReport:
submitTrialIssueReport:
submitUresIssueReport:
submitVoiceIdIssueReport:
submitVoiceTriggerIssueReport:
subscribeEventMonitor:
substringWithRange:
superclass
supportAcousticProgressiveChecker
supportAdBlocker
supportAudioTappingSelfTrigger
supportBeepCanceller:
supportBluetoothDeviceVoiceTrigger
supportCSTwoShotDecision
supportCircularBuffer
supportCompactPlus
supportContinuousAudioFingerprint
supportContinuousVoiceTrigger
supportEndpointerWhileHostAsleep
supportHandsFree
supportHangUp
supportHearstVoiceTrigger
supportHomeKitAccessory
supportHybridEndpointer
supportJarvisVoiceTrigger
supportKeywordDetector
supportLanguageDetector
supportLazySessionActivation
supportMph
supportMphAssets
supportMyriadLightHouse
supportNonInterruptibleSiri
supportOpportunisticZLL
supportPhatic
supportPremiumAssets
supportPremiumModel
supportPremiumWatchAssets
supportRaiseToSpeak
supportRelayCall
supportRemoraVoiceTrigger
supportRingtoneA2DP
supportSAT
supportSelfTriggerSuppression:refChannelIdx:
supportSessionActivateDelay
supportSmartVolume
supportTTS
supportTrialMitigationAssets
supportVoiceTriggerChannelSelection
supportZeroFilter:
supportsANE
supportsDictationOnDevice
supportsEndpointingOnATV
supportsHybridSDSDForLanguageCode:
supportsHybridUnderstandingOnDevice
supportsSiriLiminal
supportsSpeakerRecognitionAssets
supportsSpeechRecognitionOnDevice
supportsUnderstandingOnDevice
supportsVoiceTriggerFides
syncKeywordAnalyzerNDAPI
syncKeywordAnalyzerQuasar
systemUpTime
systemUptime
threshold
timeIntervalSince1970
timeStamp
timeStampWithSaltGrain
tokenName
tokens
trailingAudioTime
trialBaseAssetDirectory
triggerConfidence
triggerInfos
turnIdentifier
twoShotDecisionWaitTime
twoShotDelayConfigKey
twoShotFeedbackDelay
twoShotNotificationEnabled
twoShotThreshold
type
unsignedIntegerValue
unsignedLongLongValue
useKeywordSpotting
useRecognizerCombination
useSiriActivationSPIForHomePod
useSiriActivationSPIForwatchOS
useSpeexForAudioInjection
userIntentTime
userIntentType
userIntentValidForSeconds
userIntentVolume
utteranceFileASBD
valueForKeyPath:
voiceTriggerAudioLogDirectory
voiceTriggerEnabled
voiceTriggerEventInfoWithAdjustedMachTime:deviceUUID:anchorHostMachTime:anchorDarwinMachTime:
voiceTriggerPhIds
waitWithTimeout:
wasBuffered
weakObjectsHashTable
wearerDetectionConfig
willBeep
writeData:
writeData:error:
writeToFile:atomically:
xpcObject
zeroFilterApproxAbsSpeechThreshold
zeroFilterWindowSizeInMs
zeroFilterWindowSizeInMsForReport
zone
@16@0:8
@28@0:8@16B24
Q16@0:8
v24@0:8Q16
f16@0:8
v20@0:8f16
B16@0:8
v20@0:8B16
@24@0:8@16
v16@0:8
@32@0:8r^s16q24
@32@0:8^v16q24
v24@0:8@16
@"NSMutableData"
@"CSKeywordAnalyzerNDEAPIResult"
@"<CSKeywordAnalyzerNDEAPIScoreDelegate>"
@24@0:8^{_NSZone=}16
@64@0:8Q16Q24f32f36@40f48B52B56B60
@"CSKeywordAnalyzerNDAPIResult"
@40@0:8f16f20f24f28@32
@"NSArray"
@24@0:8Q16
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
@48@0:8@16f24f28f32f36Q40
@"NSString"
I16@0:8
v20@0:8I16
@44@0:8B16B20B24B28B32B36B40
Q44@0:8B16B20B24B28B32B36B40
@40@0:8Q16@24@32
@48@0:8Q16@24@32Q40
Q24@0:8@16
B32@0:8@16@24
@48@0:8@16@24@32Q40
@40@0:8@16@24@32
B36@0:8@16@24B32
@32@0:8@16@24
B24@0:8@16
@"NSDictionary"
@76@0:8f16f20f24@28@36B44@48B56@60@68
@"CSVoiceTriggerAirPodWearerDetectionConfig"
v52@0:8@16i24@28f36i40i44i48
v48@0:8@16i24@28i36i40B44
@76@0:8@16f24f28f32f36f40f44@48f56f60f64f68f72
@44@0:8f16f20f24f28f32f36f40
r^v16@0:8
@40@0:8^v16Q24@?32
B32@0:8r^v16Q24
@36@0:8Q16S24d28
Q40@0:8@16Q24^@32
Q24@0:8^@16
{unique_ptr<CSAudioZeroFilterImpl<unsigned short>, std::default_delete<CSAudioZeroFilterImpl<unsigned short>>>="__ptr_"{__compressed_pair<CSAudioZeroFilterImpl<unsigned short> *, std::default_delete<CSAudioZeroFilterImpl<unsigned short>>>="__value_"^v}}
v32@0:8@16Q24
@20@0:8I16
i16@0:8
v20@0:8i16
v32@0:8@16@24
v40@0:8@16@24Q32
v44@0:8@16B24@28@36
v28@0:8@16B24
v32@0:8@16B24S28
v52@0:8@16B24i28i32@36@44
v44@0:8@16B24Q28Q36
v52@0:8@16B24@28@36@44
v40@0:8@16@24@32
v36@0:8@16i24@28
v48@0:8@16q24@32@40
B56@0:8{?=[8I]}16@48
{?=[8I]}32@0:8@16@24
@48@0:8{?=[8I]}16
B32@0:8Q16Q24
B24@0:8Q16
@20@0:8i16
@28@0:8@16i24
@28@0:8@16I24
@36@0:8@16I24@28
d16@0:8
q16@0:8
@24@0:8q16
@32@0:8q16@24
q24@0:8q16
v24@0:8q16
@32@0:8@16Q24
@"CSNovDetector"
v32@0:8Q16Q24
Q24@0:8Q16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v28@0:8B16Q20
@"NSMutableArray"
@48@0:8@16@24Q32Q40
v48@0:8@16@24Q32Q40
i28@0:8@16i24
@"NSFileHandle"
@84@0:8@16Q24Q32Q40Q48Q56Q64B72@76
@72@0:8@16Q24Q32Q40Q48Q56@64
@28@0:8f16Q20
@40@0:8Q16Q24Q32
@32@0:8Q16Q24
Q48@0:8Q16Q24^v32Q40
v40@0:8Q16Q24@?32
@"NSData"
@32@0:8Q16f24f28
@40@0:8Q16f24f28@32
v32@0:8r^v16Q24
v40@0:8r^v16Q24Q32
@24@0:8^Q16
{unique_ptr<corespeech::CSAudioCircularBufferImpl<unsigned short>, std::default_delete<corespeech::CSAudioCircularBufferImpl<unsigned short>>>="__ptr_"{__compressed_pair<corespeech::CSAudioCircularBufferImpl<unsigned short> *, std::default_delete<corespeech::CSAudioCircularBufferImpl<unsigned short>>>="__value_"^v}}
@"CSAudioTimeConverter"
f20@0:8f16
S16@0:8
v32@0:8B16B20@24
v28@0:8I16@20
@"NSObject<OS_os_transaction>"
Q20@0:8f16
f24@0:8Q16
d24@0:8Q16
Q44@0:8Q16Q24Q32f40
B32@0:8d16d24
Q28@0:8Q16f24
@96@0:8{AudioStreamBasicDescription=dIIIIIIII}16{AudioStreamBasicDescription=dIIIIIIII}56
v64@0:8@16Q24@32Q40Q48B56I60
^{OpaqueAudioConverter=}
{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}
@"<CSAudioDecoderDelegate>"
@104@0:8@16{AudioStreamBasicDescription=dIIIIIIII}24{AudioStreamBasicDescription=dIIIIIIII}64
B32@0:8r^v16q24
^{OpaqueExtAudioFile=}
@"NSURL"
v32@0:8@16@?24
v36@0:8B16@20@28
v40@0:8@16B24B28d32
d24@0:8@16
d24@0:8d16
B20@0:8B16
B28@0:8B16^{__CFString=}20
B24@0:8^{__CFString=}16
v24@0:8r*16
{unique_ptr<BatchBeepCanceller, std::default_delete<BatchBeepCanceller>>="__ptr_"{__compressed_pair<BatchBeepCanceller *, std::default_delete<BatchBeepCanceller>>="__value_"^{BatchBeepCanceller}}}
{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}
{vector<short, std::allocator<short>>="__begin_"^s"__end_"^s"__end_cap_"{__compressed_pair<short *, std::allocator<short>>="__value_"^s}}
@"<CSBeepCancellerDelegate>"
@32@0:8@16d24
v36@0:8@16@24f32
v40@0:8@16@24@?32
@48@0:8@16@24@32^@40
@20@0:8f16
v32@0:8r^s16i24i28
v32@0:8r^f16i24i28
v28@0:8i16i20i24
v24@0:8^d16
@"CSAudioUnitMeterClipping"
@36@0:8@16@24B32
@52@0:8Q16@24@32@40B48
B28@0:8f16f20f24
@40@0:8Q16Q24@32
@"CSKeywordAnalyzerNDAPI"
@"CSSyncKeywordAnalyzerQuasar"
@24@0:8d16
v24@0:8d16
@40@0:8@16@24B32B36
@"_EARSyncSpeechRecognizer"
@32@0:8@16f24I28
v28@0:8@16I24
@52@0:8@16f24f28f32@36@44
v48@0:8@16@24@32@40
v32@0:8@16d24
v72@0:8@16q24q32d40@48d56q64
v40@0:8@16Q24@32
v32@0:8@"_EARSpeechRecognizer"16@"_EARSpeechRecognitionResult"24
v32@0:8@"_EARSpeechRecognizer"16@"NSError"24
v32@0:8@"_EARSpeechRecognizer"16@"NSArray"24
v48@0:8@"_EARSpeechRecognizer"16@"NSArray"24@"NSArray"32@"NSArray"40
v32@0:8@"_EARSpeechRecognizer"16@"_EARSpeechRecognitionResultPackage"24
v32@0:8@"_EARSpeechRecognizer"16d24
v32@0:8@"_EARSpeechRecognizer"16@"_EARSpeechRecognition"24
v72@0:8@"_EARSpeechRecognizer"16q24q32d40@"NSArray"48d56q64
v40@0:8@"_EARSpeechRecognizer"16Q24@"NSDictionary"32
v28@0:8r^s16i24
@"_EARSpeechRecognizer"
@"_EARSpeechRecognitionAudioBuffer"
@"<CSKeywordAnalyzerQuasarScoreDelegate>"
@"CSVoiceTriggerPhraseConfig"
@32@0:8r^v16Q24
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"CSReusableBufferPoolConfiguration"
@104@0:8{AudioStreamBasicDescription=dIIIIIIII}16{AudioStreamBasicDescription=dIIIIIIII}56@96
@112@0:8@16{AudioStreamBasicDescription=dIIIIIIII}24{AudioStreamBasicDescription=dIIIIIIII}64@104
@112@0:8@16@24{AudioStreamBasicDescription=dIIIIIIII}32{AudioStreamBasicDescription=dIIIIIIII}72
@"CSFCircularEventsCacheBuffer"
v40@0:8Q16d24@32
v36@0:8Q16f24Q28
v56@0:8@16@24@32@40Q48
@"NSHashTable"
@112@0:8@16{AudioStreamBasicDescription=dIIIIIIII}24{AudioStreamBasicDescription=dIIIIIIII}64Q104
@48@0:8Q16Q24Q32d40
v28@0:8f16@20
q24@0:8Q16
@"NSObject<OS_dispatch_group>"
{AudioStreamBasicDescription=dIIIIIIII}16@0:8
{AudioStreamBasicDescription=dIIIIIIII}24@0:8f16I20
f32@0:8@16@24
