@333333
u2A333333
MbP?
@(#)PROGRAM:CoreSuggestionsInternals  PROJECT:Suggestions-1193.0.4
N3re28CompilerE
N3re26Regexp6WalkerINS_4FragEEE
N3re217NumCapturesWalkerE
N3re219NamedCapturesWalkerE
N3re218CaptureNamesWalkerE
 * . ` d f o 
 * . ` d f o 
 d f p t ~ 
!%!'!)!,!1!3!M!O!_!
$&$@$J$`$
)L+P+Y+
0 00070<0?0
1 2_2
-%-'-'-----
,.,0,^,0
&!&!
0!0)080;0
.0/011
2`2~2`
 *0-0
3W3f
(*359==XY`a
q q 
!$!$!&!&!(!(!*!-!/!9!<!?!E!I!N!N!
,.,0,^,`,
-%-'-'-----0-g-o-o-
-/./.
01050;0<0A0
1-111
q q 
 *!+!2!2!N!N!`!
!/!/!4!4!9!9!<!=!F!I!N!N!
!0,^,a,a,e,f,h,h,j,j,l,l,q,q,s,t,v,{,
-%-'-'-----A
q q 
 |,},o-o-/./.
01050;0;0
(*359==XY`a
5!8!0-g-
0<0<0A0
1-111
!$!$!&!&!(!(!*!-!0!3!>!?!E!E!
,.,`,`,b,d,g,g,i,i,k,k,m,p,r,r,u,u,~,
>DFHJMUVbc
-*0/0
AD
.0/0#
>@FHJMUVbc
-*0-0
fox~
p p t y 
0!0)080:0
1 2)2H2O2Q2_2
fo
0!0)080:0
x~p
p p t y 
 P!_!
1 2)2H2O2Q2_2
 ' 0 C E Q S ^ } ~ 
#)#*#h'u'
,p-p-
...0.;.
00000=0=0
? @ T T 3
.:.;.
00000
F F ~ ~ 
#*#*#i'i'k'k'm'm'o'o'q'q's's'u'u'
)#.#.%.%.'.'.).).
 : : 
.!.!.@
 9 9 
...
. . .
   ' 0 8 ; > A C G Q S S U ^ 
,p-p-
.*...0.9.
0=0=0
 E E } } 
#)#)#h'h'j'j'l'l'n'n'p'p'r'r't't'
)".".$.$.&.&.(.(.
000
D D R R z | 
!#!%!%!'!'!)!)!.!.!:!;!@!D!J!M!O!O!
##(#+#
$&$@$J$
)L+P+Y+
0 0 06070>0?0
2*2G2P2P2`2
D D R R z | 
!@!D!K!K!
" #!#|#|#
%o&o&
*0+D+G+L+)
!#!%!%!'!'!)!)!.!.!:!;!J!J!L!M!O!O!
#"#(#+#{#}#
$&$@$J$
&n&p&
+/+E+F+P+Y+
0 0 06070>0?0
2*2G2P2P2`2
(*359=DFHJMUVXY`cfox
0-g-o-p-
 ( ) / / _ _ 
0( ( ) ) 
 / / _ _ 
?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?
N3re214ToStringWalkerE
N3re26Regexp6WalkerIiEE
N3re210PCREWalkerE
N3re26Regexp6WalkerIbEE
N3re217EmptyStringWalkerE
N3re214SimplifyWalkerE
N3re26Regexp6WalkerIPS0_EE
N3re29Prefilter4Info6WalkerE
N3re26Regexp6WalkerIPNS_9Prefilter4InfoEEE
com_apple_mobilesms_suggested_contact_name
com_apple_mobilesms_suggested_contact_photo
urn:biz:
SGTextMessage.m
Invalid parameter not satisfying: %@
searchableItem.domainIdentifier
attachmentDomain
conversationIdentifier
senderIsAccountOwner
sender
SGMissingDomainIdentifier.uniqueIdentifierFallback.%@
identifier
PER_MESSAGE_TRANSFORMER
SGConversationFlatteningTransformer.m
Unexpected input type for %@: %@, 
INPUT_CONVERSATION
SG_MODEL_INPUT_TARGET_MESSAGE_INDEX
INPUT_TEXT
DD_MATCHES
TARGET_MATCH
SG_MODEL_INPUT_TARGET_RANGE
SG_MODEL_DISABLE_TARGET_MAPPING
SG_FEATURE_TARGET_SENT__
SG_FEATURE_END_OF_MESSAGE
@type
http://schema.org/Organization
reservationFor
arrivalTime
departureTime
arrivalPlatform
departurePlatform
provider
http://schema.org/BusReservation
http://schema.org/BusTrip
http://schema.org/BusStation
busName
busNumber
arrivalBusStop
departureBusStop
Bus Trip
SelfIdModelScore
%@ %@
model
result
supervision
SGMSelfIdModelTypeRegex
SGMSelfIdModelTypeLogistic
SGMSelfIdModelTypeLinear
SGMSelfIdModelTypeCoreNLP
(unknown: %i)
SGMSelfIdSupervisionTypeNone
SGMSelfIdSupervisionTypeContact
SGMSelfIdSupervisionTypeAppleContact
SGMSelfIdSupervisionTypePreviousModel
SGMSelfIdSupervisionTypeRegex
http://schema.org/GeoCoordinates
latitude
longitude
SuggestdExitReason
exitCode
AutocompleteUserSelectedContact
wasSuggestedContact
wasKnownContact
SGMContactDetailUsedAppMessages
SGMContactDetailUsedAppPhone
SGMContactDetailUsedAppMail
SGMContactDetailUsedAppCalendar
SGMContactDetailUsedAppOther
SGMContactDetailUsedAppFaceTime
SGMContactDetailUsedAppAddressBook
SGMContactDetailUsedAppSpringBoard
SGMContactDetailUsedAppHome
SGMContactDetailUsedAppMaps
SGMContactDetailUsedAppFitness
SGMContactDetailUsedAppReminders
BundleIdsTrackedAsOther
bundleId
SGInteractionParser.m
interaction
person
interactionIdentifier
v24@?0@"NSString"8@"NSString"16
ContactCreated
SELECT  url, title, received_from_handle, bundle_id, group_id, doc_id, seconds_from_1970, document_title, document_seconds_from_1970, document_time_interval, flags  FROM urls ORDER BY seconds_from_1970 DESC LIMIT :limit
 AND _pas_block(:containingSubstringBlock, url) 
 AND (flags & :flagFilter) = 0 
SELECT  url, title, received_from_handle, bundle_id, group_id, doc_id, seconds_from_1970, document_title, document_seconds_from_1970, document_time_interval, flags  FROM urls WHERE bundle_id NOT IN _pas_nsset(:excludingBundleIdentifiers)   AND (seconds_from_1970 BETWEEN :startDate AND :endDate        OR document_seconds_from_1970 BETWEEN :startDate AND :endDate)   %@ %@ ORDER BY seconds_from_1970 DESC LIMIT :limit
:excludingBundleIdentifiers
:containingSubstringBlock
:flagFilter
UPDATE urls SET flags = (flags | :flagsToSet) WHERE _pas_block(:block, url)
:flagsToSet
urls
seconds_from_1970
document_seconds_from_1970
document_time_interval
bundle_id
doc_id
received_from_handle
group_id
document_title
flags
INSERT OR REPLACE INTO urls (url, title, received_from_handle, bundle_id, group_id, doc_id, seconds_from_1970, document_title, document_seconds_from_1970, document_time_interval, flags) VALUES (:url, :title, :receivedFromHandle, :bundleIdentifier, :groupIdentifier, :documentIdentifier, :secondsFrom1970, :documentTitle, :documentDate, :documentTimeInterval, :flags)
:url
:receivedFromHandle
:groupIdentifier
:documentIdentifier
:secondsFrom1970
:documentTitle
:documentDate
:documentTimeInterval
:flags
DELETE FROM urls ORDER BY id DESC LIMIT -1 OFFSET :keepThisMany
:keepThisMany
DELETE FROM urls WHERE seconds_from_1970 < :seconds
:seconds
SELECT  url, title, received_from_handle, bundle_id, group_id, doc_id, seconds_from_1970, document_title, document_seconds_from_1970, document_time_interval, flags  FROM urls WHERE bundle_id = :bundleId  AND (seconds_from_1970 BETWEEN :startDate AND :endDate       OR document_seconds_from_1970 BETWEEN :startDate AND :endDate)
DELETE FROM urls WHERE bundle_id = :bundleIdentifier
DELETE FROM urls WHERE bundle_id = ? AND ((group_id GLOB ?) 
OR (group_id GLOB ?) 
DELETE FROM urls WHERE bundle_id = :bundleIdentifier AND doc_id IN _pas_nsarray(:documentIdentifiers)
:documentIdentifiers
locale
featurizer
modelSource
[vector isKindOfClass:PMLSparseVector.class]
-[SGModel predictForInput:]
SGModels.m
[[self class] isEqual:features.source.modelClass]
@"SGTransformerInstance"8@?0
Undefined class for model objective %lu
%@ must implement +newTransformerInstanceForLanguage:
%PHONE%
transformer
sessionDescriptor
modelClass
self.transformer
self.modelClass
TOKEN_WINDOW
NGRAMS
TW=%@&NG=%@&FV=%@
SGDetectedAttributeDissector
SGDDMatchPhone
SGDDMatchEmailAddress
SGDDMatchPostalAddress
SGDDMatchEmailAddressForIMessage
SGDDMatchPostalAddressForIMessage
SelfIdentificationPhrase
ContactSharing
TextMessageBirthdayCongrats
NSString *rulesKeyForObjective(SGModelObjective)
Unknown SGModelObjective = %lu
SG_FIM_ML_PREDICT_KEY
SG_FIM_ML_EVALUATE_KEY
SG_FIM_ML_TRAIN_KEY
NSString *rulesKeyForMode(SGModelMode)
Unknown SGModelMode = %lu
ContactDetailExtraction
source
detail
outcome
foundInSenderCNContact
extractionModelVersion
isUnlikelyPhone
extractionSignatureSource
SGMDocumentTypeEmail
SGMDocumentTypeMessage
SGMContactDetailTypeEmail
SGMContactDetailTypePhone
SGMContactDetailTypeAddress
SGMContactDetailTypeOther
SGMContactDetailTypeBirthday
SGMContactDetailExtractionOutcomeExtracted
SGMContactDetailExtractionOutcomeIgnoredSuspectedBulkMail
SGMContactDetailExtractionOutcomeIgnoredQuotedRegion
SGMContactDetailExtractionOutcomeIgnoredPattern
SGMContactDetailExtractionOutcomeIgnored
SGMContactDetailOwnerNotFound
SGMContactDetailOwnerSender
SGMContactDetailOwnerNotSender
SGMContactDetailExtractionSignatureSourceHMM
SGMContactDetailExtractionSignatureSourceDataDetectors
SGMContactDetailExtractionSignatureSourceNoSignatureSource
ContactDetailSent
foundIn
hasName
tokens
SGMContactDetailFoundInNotFound
SGMContactDetailFoundInSenderCNContact
SGMContactDetailFoundInOtherCNContact
SGMContactDetailFoundInSuggestions
SGMLowCount0
SGMLowCount1
SGMLowCount2
SGMLowCount3to4
SGMLowCount5orMore
ContactsInterfaceCacheCount
SELECT title, dueDateComponents, dueLocationId, dueLocationType, dueLocationTrigger, creationDate, contactIdentifier, reminderStatus FROM reminders WHERE id = ?
:dueDateComponents
:dueLocationId
:dueLocationType
:dueLocationTrigger
:sourceUrl
:creationDate
:opaqueKey
:uniqueKey
:contactIdentifier
:reminderStatus
INSERT INTO reminders (entityId, duplicateKey, sourceKey, title, dueDateComponents, dueLocationId, dueLocationType, dueLocationTrigger, sourceUrl, creationDate, opaqueKey, uniqueKey, contactIdentifier, reminderStatus) VALUES (:entityId, :duplicateKey, :sourceKey, :title, :dueDateComponents, :dueLocationId, :dueLocationType, :dueLocationTrigger, :sourceUrl, :creationDate, :opaqueKey, :uniqueKey, :contactIdentifier, :reminderStatus)
SELECT sourceKey FROM reminders WHERE duplicateKey = ?
SELECT duplicateKey FROM reminders WHERE entityId = ?
SELECT entityId FROM reminders WHERE duplicateKey = ?
SELECT duplicateKey, sourceKey FROM reminders WHERE id = :primaryKey
SGSqlEntityStore+Reminders.m
origin
SELECT entityId FROM reminders WHERE id = ?
SELECT id FROM reminders WHERE entityId = ?
ContactsInterfaceCacheHit
cacheHit
FoundInMailModelScore
contactDetail
correct
mode
SGMFoundInMailModelTypeRegex
SGMFoundInMailModelTypeLogistic
SGMFoundInMailModelTypeLinear
SGMFoundInMailModelTypeNaiveBayes
SGFoundInMailModelModeTraining
SGFoundInMailModelModeEvaluation
SGFoundInMailModelModePrediction
SGMFoundInMailSupervisionTypeNone
SGMFoundInMailSupervisionTypeContact
SGMFoundInMailSupervisionTypeAppleContact
SGMFoundInMailSupervisionTypePreviousModel
INSERT OR REPLACE INTO metadata (key, value) VALUES (:key, :value)
DELETE FROM metadata WHERE key = :key
SELECT value FROM metadata WHERE key = :key LIMIT 1
@16@?0@"_PASSqliteStatement"8
PREDICTION_PARAMETERS
TARGET_LANGUAGE
CONFIDENCE_THRESHOLDS
@"NSMutableDictionary"24@?0@"NSDictionary"8@"NSString"16
NEGATIVE_SAMPLE_CHOPLESS
B12@?0I8
core
location
time
polarity
EVENT_CORE__RESERVATION_ID
EVENT_LOCATION__START_ADDRESS
EVENT_LOCATION__END_ADDRESS
EVENT_LOCATION__START_PLACE
EVENT_LOCATION__END_PLACE
EVENT_TIME__START_DATETIME
EVENT_TIME__END_DATETIME
TITLE__HOTEL_RESTAURANT_NAME
TITLE__MOVIE_TICKET_NAME
TITLE__CAR_RENTAL_NAME
TITLE__EVENT_NAME
POLARITY__EVENT_YES
SGStructuredEventDocument: reservationId, unable to resolve candidates
SGStructuredEventDocument: address, unable to resolve candidates
SGStructuredEventDocument: %@, unable to resolve candidates
idx (%lu) is out of range (%lu)
trialMetadata
backgroundTrialMetadata
hoursSinceReference
ctsJobConstraints
hoursSinceLastIncrementalUpdate
isSubmodelRebuilt
daysAvailableDuringIncrementalUpdate
daysProcessedDuringIncrementalUpdate
mailsProcessedDuringIncrementalUpdate
deletedTokensCountToComplyToCappingPolicy
deletedEmailsCount
rollbackedSlicesCountToComplyToPostDeletionPolicy
rollbackedEmailsCountToComplyToPostDeletionPolicy
submodelsStats
biomeAggregationPerformanceInMilliSeconds
submodelsUpdatePerformanceInMilliSeconds
submodelsPruningForCappingPolicyPerformanceInMilliSeconds
cumulatedSubmodelsRollbackForPostDeletionPolicyPerformanceInMilliSeconds
CancelAfterDeadline
CpuIntensive
DiskIntensive
StartHandler
SuspendHandler
MemoryIntensive
SchedulingPriorityBackground
SchedulingPriorityDefault
SchedulingPriorityMaintenance
SchedulingPriorityUtility
SchedulingPriorityUserInitiated
SchedulingPriorityUserInitiatedOvercommit
RequestsApplicationLaunch
RequiresInexpensiveNetworking
RequiresNetwork
RequiresPlugin
TriggersRestart
No proposal found
No title found for message
No dueDate nor dueLocation found in message
No confirmation found
isSent
body
suggest_tool_preprocess
ReminderDissector full extraction
suggest_tool
extractionStatus
errorMessage
processingLanguage
modelDescription
SGReminderDissector.m
textMessage.isSent
polarityEmojisMapping
verbsMapping
ACCOUNT_OWNER
CONTACT
IS_%@
SG_QA_REMINDER_TEST
TEST REMINDER
defaultManager
RTRoutineManager
Class getRTRoutineManagerClass(void)_block_invoke
Unable to find class %s
void *CoreRoutineLibrary(void)
SearchResultsIncludedPureSuggestion
SMS_FILTER_INEN_CLASSIFICATION
trialEventExtractionAssets
trialEventClassifierModel
trialEventClassifierThreshold
trialEventExtractionMessageProcessingLimit
trialEventExtractionRateLimitInterval
v16@?0@"<TRINamespaceUpdateProtocol>"8
v16@?0@"SGMessageEventDissectorTrialClientWrapperGuardedData"8
SearchResultsUserSelectedContact
SerializedContactsCacheHit
SqliteErrors
errorCode
com.apple.suggestions.plugin.SGURLPlugin
All Mailboxes
Unknown Mailbox
lastMailboxCheckedForTopSGMISaliency
lastLimitCheckedForTopSGMISaliency
SELECT score, mailboxId, isSalient, isGteSalient, isCounted, creationTimestamp FROM mailIntelligence_saliency WHERE messageId = :messageId
score
isSalient
isGteSalient
isCounted
mailboxId
SELECT messageId, score, isSalient, creationTimestamp FROM mailIntelligence_saliency WHERE isSalient != 0
 AND mailboxId = :mailboxId
 ORDER BY creationTimestamp DESC LIMIT :limit
:mailboxId
SELECT messageId, mailboxId, score, isSalient, creationTimestamp FROM mailIntelligence_saliency WHERE 1
 AND mailboxId IN _pas_nsarray(:mailboxIds)
 AND creationTimestamp > :minDate
%@ ORDER BY score %@ LIMIT :limit
DESC
:mailboxTypes
:mailboxIds
:minDate
SELECT id FROM mailIntelligence_saliency WHERE messageId = :messageId
UPDATE mailIntelligence_saliency SET messageId = :messageId, mailboxId = :mailboxId, score = :score, isSalient = :isSalient, isGteSalient = :isGteSalient, isCounted = :isCounted WHERE id = :id
:score
:isSalient
:isGteSalient
:isCounted
INSERT INTO mailIntelligence_saliency (creationTimestamp, messageId, mailboxId, score, isSalient, isGteSalient, isCounted) VALUES (:creationTimestamp, :messageId, :mailboxId, :score, :isSalient, :isGteSalient, :isCounted)
UPDATE mailIntelligence_saliency SET creationTimestamp = :creationTimestamp WHERE id = :id
DELETE FROM mailIntelligence_saliency
UPDATE mailIntelligence_saliency SET isSalient=1, score=1
UPDATE mailIntelligence_saliency SET isSalient=0, score=0
SELECT stagedLog, isLogged FROM mailIntelligence_saliency WHERE messageId = :messageId
stagedLog
isLogged
UPDATE mailIntelligence_saliency SET stagedLog=:stagedLog WHERE messageId = :messageId
:stagedLog
UPDATE mailIntelligence_saliency SET isLogged = TRUE, stagedLog = NULL WHERE messageId = :messageId
SuggestedContactDetailShown
activeTrialMetadata
activeAggregatedAccuracyLogForThePastFourWeeks
activeAggregatedAccuracyLogSinceModelInitialization
backgroundAggregatedAccuracyLogForThePastFourWeeks
backgroundAggregatedAccuracyLogSinceModelInitialization
SuggestedContactDetailUsed
UnknownShown
kMDItemEmailAddresses
kMDItemRecipientEmailAddresses
kMDItemAuthorEmailAddresses
kMDItemInstantMessageAddresses
kMDItemRecipientAddresses
kMDItemAuthorAddresses
kMDItemPhoneNumbers
 (%@ == "*%@*"cwdt) 
 ( %@ ) 
 || 
$time.this_year(-1)
$time.iso(%@)
$time.today(1)
 (kMDItemContentType == '%@') 
%@ %@ InRange(kMDItemContentCreationDate,%@,%@) %@ %@
PerfXPCLatency
method
SGMSuggestionsFromMessage
customResponsesAfterPruning
SELECT uniqueIdentifier FROM mailIntelligence_spotlightMapping WHERE messageId = :messageId
<html.*?>
<html>
malloc failed
blockquote
strong
table
href
mailto:
http://
_link_
head
script
style
span
header
hgroup
article
details
fieldset
figcaption
footer
form
noscript
section
summary
%i. 
reservedTicket
http://schema.org/Seat
seat
ticketedSeat
seatRow
seatSection
seatNumber
seatingType
airplaneSeat
airplaneSeatClass
DDMATCH
void appendStringToBuf(char **, const char *, NSString *__strong, BOOL)
SGAggregateLogging+PET.m
Logging string too long
SGMessageKey.m
serialized
Invalid serialization
Unknown entity type: %lu
<SGMessageKey source:%@ uniqueIdentifier:%@>
@16@?0@"SGDataDetectorMatch"8
SGDelivery_ctEmlSub_%lu
SGDelivery_ctEmlBod_%lu
SGDelivery_ctTxtMsg_%lu
@24@?0@"NSSet"8@"SGPipelineEnrichment"16
SGDelivery_pr_%@
SGDelivery_ctNumUniq_%lu
application-identifier
<SGTextMessageKey source=%@ uniqueIdentifier=%@>
SGDSuggestManagerErrorDomain
<SGRealtimeSuggestionsTuple c:%tu e:%tu r:%tu d:%tu i:%tu>
@"EKEventStore"8@?0
v16@?0@?<v@?@"EKEventStore">8
v24@?0@"CNChangeHistoryContactChange"8^B16
@"_PASLock"8@?0
com.apple.MailCompositionService
com.apple.MobileAddressBook.ContactsViewService
com.apple.MobileAddressBook.ContactViewViewService
com.apple.mobilesms.compose
FaceTime
com.apple.FaceTime
InCallService
com.apple.telephonyutilities.callservicesd
MobilePhone
SGDSuggestManager-purgeDeletionDropBox
@"SGDPurgeDeletionBox"8@?0
v16@?0@"SGDPurgeDeletionBox"8
My phone is 515-555-5555. My address is 1234 Hey Street.
htmlBody
from
Warm Up <warm@up.com>
subject
Warm up! Awaken!
date
<hey@example.com>
sourceId
warmUpSuggestions
contact
completion
contactIdentifier
contactIdentifiers
emailAddress
none
Unexpected number of matches
v16@?0@"SGXPCResponse1"8
cnContactMatchesForRecordIds
@"NSArray"16@?0@"SGRecordId"8
query
prefix
v16@?0Q8
message
Couldn't find event with that record id
storageReminder.recordId
@"SGEntity"16@?0@"SGEntity"8
com.apple.suggestions.SGEKCalendarWrite
foundEvent.suggestionInfo.opaqueKey
@"SGRealtimeEventResponse"16@?0@"SGEntity"8
@"_PASTuple2"16@?0@"SGRealtimeEventResponse"8
en_US_POSIX
yyyy-MM-dd HH:mm:ss
-[SGDSuggestManager realtimeContactsFromEntity:enrichments:sourceTextMessage:store:]_block_invoke
SGDSuggestManager.m
enrichment.duplicateKey.parentKey
@"SGStorageContact"16@?0@"SGContactEntity"8
@"SGContact"16@?0@"SGEntity"8
B16@?0@"SGEmailAddress"8
@"SGRealtimeContact"16@?0@"SGContact"8
q24@?0@"SGContactMatch"8@"SGContactMatch"16
socialProfile
messagesToRefreshWithCompletion
@"SGMailMessageKey"16@?0@"SGEmailKey"8
updateMessages
@"SGEmailKey"16@?0@"SGMailMessageKey"8
reportMessagesFound
fullDownloadRequestBatch
resolveFullDownloadRequests
uniqueId
INGetReservationDetailsIntent
SGSuggestedEventLaunchInfo intent must have an associated userActivity
SGSuggestedEventLaunchInfo object must have either intent or sourceURL to open
confirm
v16@?0@"SGLabeledObject"8
reject
message-id
SGSuggestManager-addInteractions
com.apple.
0123456789@
processReservationInteractions
deleteSpotlightReferencesWithBundleIdentifier
isEventCandidateForURL
suggestionsFromURL
-[SGDSuggestManager geocodeEnrichmentsInPipelineEntity:withCompletion:]_block_invoke
@"SGRealtimeEvent"16@?0@"SGPipelineEnrichment"8
com.apple.suggestions.suggestManagerKeepDirty
hits
misses
v20@?0B8Q12
notFromSuggestions
x-apple-eventkit:///SuggestedEventInfo/
uniqueKey
com.apple.suggestd.event-metrics-queue
Maybe: %@
Show in %@
@"SGSimpleMailMessage"8@?0
v40@?0@"NSError"8@"NSArray"16@"NSArray"24@"NSArray"32
q24@?0@"SGRealtimeEvent"8@"SGRealtimeEvent"16
com.apple.suggestions.internal.messages.processed.
SGRecordId not valid (didn't find entity)
Unable to find localizedAppName
com.apple.CoreSuggestionsInternals.SGDSuggestManager
v24@?0@"SGDPurgeDeletionBox"8^B16
v24@?0@"NSString"8@"_PASDomainSelection"16
v24@?0@"NSString"8@"NSSet"16
htmlParserNonNull != nil
SGSuggestManager-consumeInteractionWithContext
An error occurred while formatting the string.
AppCanShowSiriSuggestionsBlacklist
com.apple.suggestions
EMAIL_MAPPING
LINK_MAPPING
-[SGEntityMappingTransformer transform:]
SGEntityMappingTransformer.m
[input isKindOfClass:[NSString class]]
mailto
com.apple.suggestions.ml.datadetector
salientPredictedAsSalient
salientPredictedAsNeutral
salientPredictedAsIgnorable
neutralPredictedAsSalient
neutralPredictedAsNeutral
neutralPredictedAsIgnorable
ignorablePredictedAsSalient
ignorablePredictedAsNeutral
ignorablePredictedAsIgnorable
is_sender_name
is_sender_email
is_sender_domain
is_recipient_name
is_recipient_email
is_present_in_subject
StructuredEventInputMapping
StructuredEventOutputMapping
SupportedProviders
extractionSenders
shadowSenders
mlDefaultExtractionSenders
schemaOrgSenders
StructuredEventEngineConfig
sectionLabelTokenMergeDistance
defaultLabelTokenMergeDistance
addressComponentThreshold
stripRepeatedContentInSections
Structured Event model inference
%@.%@.%@
SG_TARGET_EMAIL
SG_FEATURE_PHONENUMBER
SG_FEATURE_EMAIL
SG_FEATURE_ADDRESS
SG_FEATURE_DATE
SG_FEATURE_LINK
SG_FEATURE_FULLNAME
SG_FEATURE_FIRSTNAME
SG_FEATURE_LASTNAME
SG_POSSESSIVE
SG_FEATURE_NUMBER
SG_FEATURE_SYMBOL
SignificantEmailAddressForIMessage
documentSource
highPriority
receivedOnBattery
harvestedOnBattery
harvestSource
otherFirstParty
otherThirdParty
Safari
News
Mail
Messages
Notes
Reminders
SGM2HarvestSourceInMemory
SGM2HarvestSourceRealtime
SGM2HarvestSourceRealtimeNoBudget
SGM2HarvestSourceOnDiskOverflow
SGM2HarvestSourceOnDiskNoBudget
SGM2HarvestSourceOnDiskTimeout
SGM2HarvestSourceOnDiskClosed
SGM2HarvestSourceOnDiskLegacy
SGM2HarvestSourceProactiveHarvesting
SGRe2PrefilterTree.m
data.length > 7*sizeof(uint32_t)
(const uint8_t *)(_rpns) <= (const uint8_t *)end
(const uint8_t *)(_rpns) <= (const uint8_t *)(_h1)
(const uint8_t *)(_h1) <= (const uint8_t *)(_h2)
(const uint8_t *)(_h2) <= (const uint8_t *)(_h3)
(const uint8_t *)(_h1) <= (const uint8_t *)end
(const uint8_t *)(_h2) <= (const uint8_t *)end
(const uint8_t *)(_h3) <= (const uint8_t *)end
(const uint8_t *)(_h3) <= (const uint8_t *)(_s1)
(const uint8_t *)(_s1) <= (const uint8_t *)(_s2)
(const uint8_t *)(_s2) <= (const uint8_t *)(_s3)
(const uint8_t *)(_s1) <= (const uint8_t *)end
(const uint8_t *)(_s2) <= (const uint8_t *)end
(const uint8_t *)(_s3) <= (const uint8_t *)end
_h1 + _n1 + 1 == _h2
_h2 + _n2 + 1 == _h3
(const void *)(_h3 + _n3 + 0) == (const void *)_s1
com_apple_suggestions_targetPlugins
com.apple.suggestd.ma-metadata-download
com.apple.suggestd.trim
com.apple.suggestd.vacuum
com.apple.suggestd.identityanalysis
com.apple.suggestd.sendrtc
v20@?0B8@"NSError"12
com.apple.suggestd.cd-cache-rebuild
com.apple.suggestd.process-pending-geocodes
com.apple.suggestions.geocode-write
-[SGDManagerForCTS _performProcessPendingGeocodesActivity:]_block_invoke_2
SGDManagerForCTS.m
[nextGeocode.timeRange isValidAllDayRange]
v16@?0@"SGStorageEvent"8
com.apple.suggestd.process-pending-verification
com.apple.suggestions.verification-write
Unexpected failure of CTS deferral
facetime.apple.com/join
offeredCount
acceptedCount
bundleIdentifier
urlType
com.apple.proactive.fia.url
item
processSearchableItem-plugins
backgroundDissectAndWrite
backgroundDissect
@"NSArray"16@?0@"<NSFastEnumeration>"8
@"NSMutableDictionary"16@?0@"<NSFastEnumeration>"8
@"NSMutableArray"16@?0@"<NSFastEnumeration>"8
i16@?0@8
reservationId
B24@?0@8@16
@"NSString"16@?0@"SGContactDetail"8
SGDeduper.m
postal address details should be filtered out
@"NSArray"16@?0@"SGContactDetail"8
@"NSNumber"16@?0@"SGContactDetail"8
Abu Dhabi
Asia/Muscat
Adelaide
Australia/Adelaide
Afghanistan
Asia/Kabul
Alaska
America/Anchorage
Alaskan
Aleutian
America/Adak
Almaty
Asia/Almaty
Altai
Asia/Barnaul
Amsterdam
Europe/Berlin
Arab
Asia/Riyadh
Arabian
Arabic
Asia/Baghdad
Argentina
America/Argentina/Buenos_Aires
Arizona
America/Phoenix
Astana
Asia/Dhaka
Astrakhan
Europe/Astrakhan
Athens
Europe/Athens
Atlantic
America/Halifax
Auckland
Pacific/Auckland
AUS Central
Australia/Darwin
Aus Central W.
Australia/Eucla
AUS Eastern
Australia/Sydney
Azerbaijan
Asia/Baku
Azores
Atlantic/Azores
Baghdad
Bahia
America/Bahia
Baku
Bangkok
Asia/Bangkok
Bangladesh
Beijing
Asia/Shanghai
Belarus
Europe/Minsk
Belgrade
Europe/Prague
Bogota
America/Bogota
Bougainville
Pacific/Bougainville
Brasilia
America/Sao_Paulo
Brisbane
Australia/Brisbane
Brussels
Europe/Paris
Bucharest
Europe/Bucharest
Buenos Aires
Cairo
Africa/Cairo
Canberra
Cape Verde
Atlantic/Cape_Verde
Cape Verde Is.
Cape Verde Islands
Canada Central
America/Regina
Caracas
America/Caracas
Casablanca
Africa/Casablanca
Caucasus
Asia/Yerevan
Cen. Australia
Central
America/Chicago
Central America
America/Guatemala
Central Asia
Central Brazilian
America/Manaus
Central Europe
Central European
Europe/Belgrade
Central Pacific
Pacific/Guadalcanal
Central Standard Time (Mexico)
America/Mexico_City
Chatham Islands
Pacific/Chatham
Chennai
Asia/Kolkata
Chihuahua
America/Chihuahua
China
Cuba
America/Havana
Darwin
Dateline
Etc/GMT+12
E. Africa
Africa/Nairobi
E. Australia
E. Europe
E. South America
East Africa
Easter Island
Pacific/Easter
Eastern
America/New_York
Eastern Standard Time (Mexico)
America/Cancun
Egypt
Ekaterinburg
Asia/Yekaterinburg
Eniwetok
Pacific/Kwajalein
Fiji
Pacific/Fiji
Fiji Islands
Europe/Helsinki
Georgian Standard Time
Asia/Tbilisi
GMT Standard Time
Europe/London
Greenland
America/Godthab
Greenwich
Atlantic/Reykjavik
Greenwich Mean Time
Greenwich Standard Time
Guadalajara
Guam
Pacific/Guam
Haiti
America/Port-au-Prince
Harare
Africa/Harare
Hawaii
Pacific/Honolulu
Hawaiian
Helsinki
Hobart
Australia/Hobart
India
Indiana (East)
America/Indiana/Indianapolis
Iran
Asia/Tehran
Irkutsk
Asia/Irkutsk
Islamabad
Asia/Karachi
Israel
Asia/Jerusalem
Jerusalem
Jordan
Asia/Amman
Kabul
Kaliningrad
Europe/Kaliningrad
Kathmandu
Asia/Kathmandu
Kolkata
Asia/Calcutta
Korea
Asia/Seoul
Krasnoyarsk
Asia/Krasnoyarsk
Kuala Lumpur
Asia/Singapore
Kuwait
Libya
Africa/Tripoli
Line Islands
Pacific/Kiritimati
Lord Howe
Australia/Lord_Howe
Magadan
Asia/Magadan
Marquesas
Pacific/Marquesas
Mauritius
Indian/Mauritius
Mexico
Mexico City
Mexico Standard Time
Mexico Standard Time 2
Mid-Atlantic
Atlantic/South_Georgia
Middle East
Asia/Beirut
Midway Island
Pacific/Midway
Montevideo
America/Montevideo
Morocco
Moscow
Europe/Moscow
Mountain
America/Denver
Mountain Standard Time (Mexico)
Myanmar
Asia/Rangoon
N. Central Asia
Asia/Novosibirsk
Nairobi
Namibia
Africa/Windhoek
Nepal Standard Time
New Zealand
Norfolk
Pacific/Norfolk
Newfoundland
America/St_Johns
Newfoundland and Labrador
North Asia East
Asia/Ulaanbaatar
North Asia
North Korea
Asia/Pyongyang
Nuku'alofa
Pacific/Tongatapu
Osaka
Asia/Tokyo
Pacific
America/Los_Angeles
Pacific SA
America/Santiago
Pacific Standard Time (Mexico)
America/Tijuana
Pacific Time
Pakistan
Paraguay
America/Asuncion
Paris
Perth
Australia/Perth
Prague
Prague Bratislava
Rangoon
Romance
Russia Time Zone 10
Asia/Srednekolymsk
Russia Time Zone 11
Asia/Kamchatka
Russia Time Zone 3
Europe/Samara
Russian
SA Eastern
America/Buenos_Aires
SA Pacific
SA Western
Santiago
Sarajevo
Europe/Sarajevo
Saskatchewan
America/Edmonton
SE Asia
Seoul
Saint Pierre
America/Miquelon
Sakhalin
Asia/Sakhalin
Samoa
Pacific/Apia
Saudi Arabia
Singapore
South Africa
Sri Jayawardenepura
Asia/Colombo
Sri Lanka
Syria
Asia/Damascus
Sydney
Taipei
Asia/Taipei
Tasmania
Tehran
Tocantins
America/Araguaina
Tokyo
Tomsk
Asia/Tomsk
Tonga
Transbaikal
Asia/Chita
Turkey
Europe/Istanbul
Turks And Caicos
America/Grand_Turk
Universal Coordinated Time
US Eastern
America/Indianapolis
US Mountain
Ulaanbaatar
Venezuela
Vladivostok
Asia/Vladivostok
W. Australia
W. Central Africa
Africa/Luanda
W. Europe
Warsaw
Europe/Warsaw
West Asia
West Bank
Asia/Hebron
West Central Africa
West Pacific
Western Brazilian
America/Rio_Branco
Yakutsk
Asia/Yakutsk
Yangon Rangoon
@"NSTimeZone"16@?0@"NSString"8
 Standard Time
 Daylight Time
 Summer Time
 Time
SGCalendarAttachmentDissector.m
hourString
Etc/GMT
@"NSString"16@?0@"ICSUserAddress"8
%@;%@
B16@?0@"SGMailAttachment"8
Google
Gmail
Yahoo
Outook
@icloud.com
@me.com
@mac.com
@gmail.com
@googlemail.com
@google.com
@yahoo.com
@yahoo.co.uk
@ymail.com
@sbcglobal.net
@rocketmail.com
@outlook.com
@hotmail.com
@hotmail.co.uk
@rocketmaill.com
BEGIN:
END:
END:VCALENDAR
VTIMEZONE
VEVENT
VCALENDAR
UID:
DTSTART
DTEND
EXDATE
RDATE
RECURRENCE-ID
TZID=
;TZID=
END:VCALENDAR
floating
GREGORIAN
ATTACH
<SGStorageContact: %@ - %lu profile(s)>
SGStorageContact.m
Merging with a contact that isn't mergable
@"NSArray"16@?0Q8
@"SGPhoneNumber"16@?0@"SGContactDetail"8
@"SGPostalAddress"16@?0@"SGContactDetail"8
Street
City
State
Country
@"SGEmailAddress"16@?0@"SGContactDetail"8
@"SGSocialProfile"16@?0@"SGContactDetail"8
Cannot use SearchOnePass for unanchored matches.
CREATE TABLE snippets (id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER,title TEXT,content TEXT,contentRangeOfInterest TEXT)
CREATE UNIQUE INDEX entityIdIdx ON snippets(entityId)
migration_MoveContentToSnippets
CREATE TABLE emailSnippets (id INTEGER PRIMARY KEY AUTOINCREMENT,emailId INTEGER,title TEXT,content TEXT)
CREATE UNIQUE INDEX ix_emailSnippets_emailId ON emailSnippets(emailId)
migration_separateMessageSnippets
CREATE TABLE messages (id integer PRIMARY KEY AUTOINCREMENT NOT NULL,uuid char(128) NOT NULL,conversationId char(128) NOT NULL,content text(128) NOT NULL,creationTimestamp REAL NOT NULL,isSent integer(1) NOT NULL)
CREATE INDEX ix_messages_conversationId ON messages (conversationId ASC)
CREATE UNIQUE INDEX ix_messages_id ON messages (id ASC)
CREATE UNIQUE INDEX ix_messages_uuid ON messages (uuid ASC)
CREATE TABLE userQueries (id integer PRIMARY KEY AUTOINCREMENT NOT NULL,conversationId char(128) NOT NULL,language char(5) NOT NULL,query text NOT NULL,engaged integer(1) NOT NULL,creationTimestamp real NOT NULL)
CREATE INDEX ix_userQueries_language ON userQueries (language ASC)
DROP TABLE IF EXISTS userQueries
DROP TABLE IF EXISTS messages
DELETE FROM sqlite_sequence
v16@?0@"SGDCloudKitSync"8
com.apple.corespotlight.receiver.suggestions
NSUA
CSSI
SGDPluginManager.processInteraction
plugin-processInteraction
plugin-purgeSpotlightReferences
plugin-deleteSpotlightReferences
contactConfirmations
contactRejections
contactDetailConfirmations
contactDetailRejections
enqueued_items
dissected_items
statsCounters
SELECT value FROM statsCounters WHERE key = :key
behavior.scalar.confirmPercent
contacts.contact
contacts.detail
Compiler::Copy called!
kRegexpConcat: child_frags is NULL
kRegexpAlternate child_frags is NULL
kRegexpStar child_frags is NULL
kRegexpPlus child_frags is NULL
kRegexpQuest child_frags is NULL
No ranges in char class
kRegexpCapture child_frags is NULL
Missing case in Compiler: 
hello, world
Couldn't compile regular expression, skipping: 
 due to error 
%@-timer
B24@?0@"_PASTuple2"8@"NSDictionary"16
@16@?0@"_PASTuple2"8
B24@?0@"SGStorageReminder"8@"NSDictionary"16
v24@?0@"REMReminder"8^B16
http://schema.org/Place
lang
timeDifferenceFromReceptionToSaliencyInferenceInSeconds
senderConnectionScore
mailAttachmentHistogram
nbCharactersInMailSubject
nbTokensInMailSubject
previousInteractionOnConversationInMinutes
previousInteractionFromUserOnConversationInMinutes
active
background
NAME_MAPPINGS
TOKEN_TO_IGNORE
MINIMUM_CONFIDENCE
FIRST
LAST
FULL
UNDEFINED
POSSESSIVE
nameMappings[NameMappingFull]
nameMappings[NameMappingFirst]
nameMappings[NameMappingLast]
nameMappings[NameMappingUndefined]
nameMappings[NameMappingPossessive]
-[SGNameMappingTransformer transform:]
SGNameMappingTransformer.m
Shouldn't be NameMappingPossessive
feature
v24@?0@"NSNumber"8^B16
firstnames
trie
_PASCFBurstTrie *firstnames(void)_block_invoke
path
Could not load firstnames trie: %@
lastnames
_PASCFBurstTrie *lastnames(void)_block_invoke
Could not load lastnames trie: %@
%@__%@
RE2::Set::Compile multiple times
Error simplifying during Compile.
alt -> %d | %d
altmatch -> %d | %d
byte%s [%02x-%02x] -> %d
capture %d -> %d
emptywidth %#x -> %d
match! %d
nop -> %d
fail
%d. %s
MyName/F
NameRequest/F
SGSelfIdentification.m
conversation.count > 0
@"NSString"36@?0{SGMSIPatternType_=Q}8@"NSString"16@"NSString"24B32
v52@?0@"NSString"8{_NSRange=QQ}16@"SGRe2"32B40^B44
@"SGTextMessageItem"16@?0@8
sent:
strong_phrase
SGSearchableItemIdTriple.m
@"NSString"8@?0
SGPipelineEntity.m
handle
identifier.length > 0
bundleIdentifier.length > 0
interactionIdentifier.length > 0
SGPipelineEntity.flush
a preferred enrichment must have a duplicateKey
B24@?0@"SGPipelineEnrichment"8@"NSDictionary"16
Contacts can't have associated detected addresses.
Contacts can't have associated detected phone numbers.
Contacts can't have associated detected birthdays.
Contacts can't have associated detected email addresses.
Contacts can't have associated detected instant message addresses.
Regexp not destroyed.
Bad reference count 
/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/re2/re2/re2_regexp.h
Cannot AllocSub 
Unexpected op in Regexp::Equal: 
no error
unexpected error
invalid escape sequence
invalid character class
invalid character class range
missing ]
missing )
trailing \
no argument for repetition operator
invalid repetition size
bad repetition operator
invalid perl operator
invalid UTF-8
invalid named capture group
NumCapturesWalker::ShortVisit called
NamedCapturesWalker::ShortVisit called
CaptureNamesWalker::ShortVisit called
SGEntity.m
entityKey can't be nil.
entityType must not be SGEntityTypeUnknown
entityType must not be SGEntityTypeDetectedEmailAddress
description
<SGEntity:%@,sourceKey=%@,title=%@>
from_messages
Unknown encoding 
Error parsing '
Error compiling '
pattern too large - compile failed
Error reverse compiling '
pattern too large - reverse compile failed
\x00
Invalid RE2: 
RE2: invalid startpos, endpos pair.
Match 
 DFA failed.
 used DFA - no match.
 used DFA - match
 reverse DFA failed.
 DFA inconsistency.
DFA inconsistency
 used reverse DFA.
 skipping DFA for OnePass.
 skipping DFA for BitState.
 using OnePass.
SearchOnePass inconsistency
 using BitState.
SearchBitState inconsistency
 using NFA.
SearchNFA inconsistency
eventsWithoutTimestamp
rejectedEvents
reminders
rejectedReminders
newContacts
storageDetails
dontUpdate
confirmedEventFields
confirmedEventWithoutTimestampFields
resetInfo
SGSalt
v16@?0@"SGHistorySharedData"8
Suggest history with %d confirmed event hashes, %d confirmed event without timestamp hashes, %d rejected event hashes, %d confirmed reminder hashes, %d rejected reminder hashes, %d confirmed event field hashes, %d confirmed event without timestamp field hashes, %d contact hashes, %d storage detail hashes, and %d no-update hashes.
SGSuggestHistory.m
![hashes containsObject:[self _canaryHash]]
Suggest history sets must not be nil
canary_%@
@"NSData"16@?0@"NSData"8
@"NSData"16@?0@"NSString"8
opaqueKey
%.2f
new data
suggestHistoryObserver
SGKeyValueCacheManager.m
cacheType < SGKeyValueCacheTypeCount
phone-to-name.kvcache
email-to-name.kvcache
SGWords.m
word
Latin-ASCII; Lower
\%03o
<FIAPHistoricalDataRequest id:%llu p:%@ s:%@ e:%@ plugin:%@>
reply-to
conversation-id
list-id
EEE',' d MMM y HH':'mm':'ss ZZZ
EEE',' d MMM y HH':'mm':'ss zzz
EEE MMM d HH':'mm':'ss zzz y
d MMM y HH':'mm':'ss ZZZ
d MMM y HH':'mm':'ss zzz
EEE',' d MMM y HH':'mm ZZZ
EEE',' d MMM y HH':'mm zzz
d MMM y HH':'mm ZZZ
d MMM y HH':'mm zzz
@"NSDateFormatter"16@?0@"NSString"8
(?:=([0-9A-F]{2})|=[ \t]*(?:\r?\n|$)|[ \t]+(?:\r?\n|$)|$)
SGSimpleMailMessage+RFC822Parsing.m
error creating quotedPrintableRegex: %@
(?:^(\S+?):(?:\r?\n[ \t])?[ \t]*(\S+(?:.*\r?\n[ \t].*\S+|.*\S)*|).*$|(?:\r?\n){2})
error creating headerRegex: %@
fieldValueRange.location != NSNotFound
[ \t]*;[ \t]*([^ \t()<>@,;:\\"\/\[\]?.=]+)=(?:([^ \t()<>@,;:\\"\/\[\]?.=]+)|"((?:[^"]|\\")*)")[ \t]*(?:(?=;)|$)
error creating parameterRegex: %@
<blockquote type=cite>
</blockquote>
&amp;
&lt;
 &nbsp;
<span class=Apple-tab-span style=white-space:pre>
</span>
<br>
content-type
text/plain
charset
us-ascii
boundary
content-disposition
inline
attachment
multipart/
multipart/alternative
multipart/related
start
multipart/signed
content-id
text/html
format
flowed
delsp
content-transfer-encoding
binary
base64
x-uuencode
quoted-printable
attachmentCallback
filename
<SGDataDetectorMatch/%i %i-%i
matchType
range_location
range_length
labelRange_location
labelRange_length
valueRange_location
valueRange_length
labelString
valueString
parsecDomain
parsecWikidataQid
allDay
inferredDate
approximateTime
partialDate
postalAddressComponents
detectedDate
detectedTimeZone
detectedEndDate
detectedEndTimeZone
PartialDate
RelativeDayOfWeek
DDScannerRef getScannerRefAndAcquire(void)
SGDataDetectorMatch.m
Could not get data detector from pool
dd-MM-yyyy
dd-MM
CFRange "%ld:%ld" cannot be converted to NSRange.
_PASUtilityMacros
void releaseScannerRef(DDScannerRef)
Could not return scanner %@ to pool
NonQuotedLinePart
Email
NextLineQuoted
UpTo8KB
8KBTo32KB
32KBTo128KB
128KBTo512KB
512KBTo2MB
Over2MB
UpTo8KB: %tu
8KBTo32KB: %tu
32KBTo128KB: %tu
128KBTo512KB: %tu
512KBTo2MB: %tu
Over2MB: %tu
InhumanEmailPatterns/F
InhumanEmailDomains
InhumanEmailTokens
HumanMailingListHeaders
InhumanEmailExceptions
InhumanName/F
InhumanNameComponents
InhumanBodyLiterals
InhumanBodyRegexp/F
SGInhumans.m
failed to get raw value for InhumanNameComponents
failed to look up raw value for rawValueKeyInhumanEmailDomains
failed to look up raw value for rawValueKeyInhumanEmailTokens
NUL-terminator overwritten. This should be impossible.
computeCustomTimeRange
safeguardingQuotedRegionsRegex
appleMailMessageId
v32@?0@"NSRegularExpression"8@"NSString"16^B24
v32@?0@"NSRegularExpression"8@"NSNumber"16^B24
%@%@%@
%@-%@
v32@?0@"NSNumber"8@"SGMIWarningsDetectionRegex"16^B24
startOffset
endOffset
SGMIFollowUpManager-processing
SGMIFollowUpManager-timeout
positive
negative
no engagement
mlmodel
mlmodelc
IS_TIME_DISTRIBUTED
NONE
ReminderModel
structuredEventGazetteer
StructuredEventModel
com.apple.CoreSuggestions.SemlPlugin
plplist
SGExtractionModel.m
relPath
polarity_true
%@.%@
mapping
%@_%@
SGExtractionModels
SGIStore error
Can not add interdict between non-disjoint sets %@ and %@
@"NSString"16@?0@"SGRecordId"8
%lld
INSERT INTO identityInterdict (a, b) VALUES (?, ?)
SELECT a, b FROM identityInterdict
@"SGLabeledValue"16@?0@"SGContactDetail"8
SGSqlEntityStore+Identity.m
rebuildIdentityTables
DELETE FROM identityPerson
DELETE FROM identityLink
DELETE FROM identityPhones
DELETE FROM identitySocialProfileIdentifiers
WHERE e.entityType = :pseudo OR e.entityType = :unrec
Unexpected entity type: %lld
v16@?0@"NSString<SGNormalizedName>"8
SELECT fullname, recordId, nameSketches, phones, socialProfileIdentifiers, email FROM identityPerson WHERE (surname IN _pas_nsarray(:middleNameAndSurname) OR middlename = :surname) AND isSent = :isSent LIMIT :limit
:middleNameAndSurname
:surname
:isSent
fullname
recordId
nameSketches
phones
socialProfileIdentifiers
SELECT recordId FROM identityPerson WHERE email=? AND fullname=? LIMIT %d
SELECT recordId FROM identityPerson WHERE email=? AND fullname IS NULL LIMIT %d
Expected nonzero number of phones
fullname=:fullname
(surname = '' OR surname IS NULL) AND fullname IS NULL
SELECT recordId FROM identityPerson   WHERE %@ AND recordId IN (       SELECT recordId from identityPhones           WHERE phone IN _pas_nsarray(:phones)   )   LIMIT :limit
:fullname
@16@?0@"SGLabeledValue"8
:phones
identityPerson
socialProfiles
Expected nonzero number of socialProfiles
SELECT recordId FROM identityPerson   WHERE %@ AND recordId IN (       SELECT recordId from identitySocialProfileIdentifiers           WHERE socialProfileIdentifier IN _pas_nsarray(:socialProfileIdentifiers)   )   LIMIT :limit
:socialProfileIdentifiers
SELECT 1 FROM identityLink WHERE recordId1=? AND recordId2=? AND type=?
INSERT OR IGNORE INTO identityLink (recordId1, recordId2, type, strength) VALUES (?,?,?,?)
SELECT phones, socialProfileIdentifiers FROM identityPerson WHERE recordId = :recordId
:recordId
DELETE FROM identityPhones WHERE phone IN _pas_nsarray(:phones) AND recordId=:recordId
DELETE FROM identitySocialProfileIdentifiers WHERE socialProfileIdentifier IN _pas_nsarray(:socialProfileIdentifiers) AND recordId=:recordId
DELETE FROM identityPerson WHERE recordId = ?
DELETE FROM identityLink WHERE recordId1 = ?1 OR recordId2 = ?1
SELECT recordId1, recordId2, type, strength FROM identityLink
SELECT recordId FROM identityPerson WHERE curated
graph
nameToVertex
disjointSets
SELECT recordId, email FROM identityPerson WHERE (surname = '' OR surname IS NULL) AND fullname IS NULL AND LENGTH(email) > 0
Vertex not found in lookup table
SELECT recordId FROM identityPerson WHERE email = :email AND fullname IS NOT NULL
OOM while adding edge to graph
SELECT recordId, phones FROM identityPerson WHERE (surname = '' OR surname IS NULL) AND fullname IS NULL AND LENGTH(phones) > 0
SELECT recordId FROM identityPerson    WHERE fullname IS NOT NULL        AND recordId IN (            SELECT recordId from identityPhones                WHERE phone IN _pas_nsarray(:phones)        )
SELECT recordId, socialProfileIdentifiers FROM identityPerson WHERE (surname = '' OR surname IS NULL) AND fullname IS NULL AND LENGTH(socialProfileIdentifiers) > 0
SELECT recordId FROM identityPerson    WHERE fullname IS NOT NULL        AND recordId IN (            SELECT recordId from identitySocialProfileIdentifiers                WHERE socialProfileIdentifier IN _pas_nsarray(:socialProfileIdentifiers)        )
graph error
SGIStore.h, line %i
SELECT recordId1, recordId2, strength FROM identityLink
SELECT recordId FROM IdentityPerson
v16@?0r^{_vertex_t=^v^^{_edge_t}II}8
computeBlobs
SELECT (CASE WHEN e.masterEntityId > 0 THEN e.masterEntityId ELSE e.id END), i.nameSketches FROM entity AS e INNER JOIN identityPerson AS i ON e.id = i.recordId LIMIT :limit
@"NSString<SGNormalizedPhoneNumber>"16@?0@"CNLabeledValue"8
@"NSNumber"16@?0@"CNContact"8
@"CNContact"24@?0Q8@"NSArray"16
@"NSNumber"16@?0@"SGRecordId"8
SELECT recordId, fullname, phones, email, socialProfileIdentifiers FROM identityPerson WHERE recordId IN _pas_nsarray(:ids)
v24@?0@"CNContact"8@"SGRecordId"16
DELETE FROM identityBlobAnalysisJobs
INSERT INTO identityBlobAnalysisJobs (mergeBlob) VALUES (:mergeBlob)
:mergeBlob
SELECT id, mergeBlob FROM identityBlobAnalysisJobs
DELETE FROM identityBlobAnalysisJobs WHERE id = :blobId
:blobId
SELECT 1 FROM identityBlobAnalysisJobs LIMIT 1
INSERT INTO identityInterdictNext (a, b) VALUES (?, ?)
DROP TABLE identityInterdict
CREATE TABLE identityInterdict (a TEXT NOT NULL, b TEXT NOT NULL)
SELECT a, b FROM identityInterdictNext
DELETE FROM identityInterdictNext
INSERT OR IGNORE INTO identityPerson (recordId, surname, middlename, fullname, nameSketches, phones, socialProfileIdentifiers, email, curated, isSent) VALUES (?,?,?,?,?,?,?,?,?,?)
INSERT OR IGNORE INTO identityPhones (phone, recordId) VALUES (?, ?)
INSERT OR IGNORE INTO identitySocialProfileIdentifiers (socialProfileIdentifier, recordId) VALUES (:socialProfileIdentifier, :recordId)
:socialProfileIdentifier
q24@?0@"_PASTuple2"8@"_PASTuple2"16
v16@?0@"SGPatternGlobalData"8
CompiledPatterns.plist
CompiledPatterns.pldat
(nil path)
SGPatterns.m
Could not read pattern plist from %@: %@
nolang
Invalid pattern plist: no nolang locale found! Keys: %@
filesystemPathForAssetDataRelativePath returned nil
Could not load pattern data
Language not found: %@
base
eu-me
w-europe
e-europe
asia
middleeast
v32@?0@"NSString"8@"NSDictionary"16^B24
Non-prefiltered regexp was array: %@
.filt
Data not found for prefiltered regexp: %@
Could not find raw asset value for key %@
SGPatterns-deathTimer
zh-hans
zh-hant
Error loading file %@: %@
(off & 0b11) == 0
off + len <= _fileData.length
in-reply-to
SGSimpleMailMessage.m
[header isKindOfClass:[SGSimpleMailHeaderKeyValue class]]
nonnull property %s *%s was null when decoded
<SGSimpleMailHeaderKeyValue: %@: %@>
inReplyTo
replyTo
hasInhumanHeaders
isPartiallyDownloaded
mailingList
headers
@"NSData"8@?0
_quotedRegionsCached
@email.android.com>
@"NSIndexSet"8@?0
@"NSNumber"8@?0
B16@?0@"SGDataDetectorMatch"8
@"CSPerson"8@?0
%02x
htmlContentData
<SGSimpleMailMessage %@>
 x-sendgrid-eid x-facebook-notify x-amazon-mail-relay-type x-autogenerated x-campaign x-ses-outgoing x-ebay-mailtracker x-mailing-id x-phpbb-origin x-report-abuse x-facebook x-bloggermail x-campaign-id x-feedback-id
list-unsubscribe
precedence
bulk
auto-submitted
x-email-type-id
@"SGSimpleNamedEmailAddress"16@?0@"CSPerson"8
@16@?0@"BMNamedHandle"8
(?,?)
(%d,?)
(%d,%d)
/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/re2/re2/re2_nfa.cc
Bad args: context does not contain text 
Bad args: nsubmatch=
Unexpected opcode in short circuit: 
Unexpected empty-width in short circuit: 
Unhandled 
 in step
CL.loc.vcf
Shared Location.loc.vcf
%@'s Location.loc.vcf
jpeg
heic
photoSharingUEhPVE8K
firstPartyLocTE9DLjFwCg
firstPartyPhoneUEhPTkUuMXAK
firstPartyEmailRU1BSUwuMXAK
firstPartyPostalUE9TVEFMLjFwCg
thirdPartyPhoneUEhPTkUuM3AK
thirdPartyEmailRU1BSUwuMXAK
thirdPartyPostalUE9TVEFMLjFwCg
SGQuickResponsesML.m
=\?(?:[^\s()<>@,;:"\/\[\]?.=]+?)\?(?:[^\s()<>@,;:"\/\[\]?.=]+?)\?(?:[^?\s]+)\?=
NSString+EncodedWord.m
error creating encodedWordRegex: %@
void hashStrings(NSArray<NSString *> *__strong, NSData *__strong, uint8_t *)
SGCrypto.m
strings.count > 0
digest != NULL
strictLowerBound
strictUpperBound
@"NSNumber"16@?0@"SGMISaliencyModelConfigRule"8
true
com.apple.MobileAddressBook
SGLowMemoryContactEnumeration
@"NSString"16@?0@"CSSearchableItem"8
v24@?0^{_LXEntry=}8*16
SGNicknames.m
nicknames
NUMERIC_MAPPING
CHARACTER_MAPPING
-[SGSymbolicMappingTransformer transform:]
SGSymbolicMappingTransformer.m
SG_FEATURE
SG_TARGET
%s%lu
NSString * _Nonnull numberedString(NSString * _Nonnull __strong, NSUInteger)
numberedString
SGFlightData.m
Expected keys to be unique and in ascending order. That constraint was violated by this sequence of keys:
%d: %@
%d: %@
KeyTooShort
The key was too short.
AirportNameNoise.plist
failed to get asset path for AIRPORT_NAME_IDENT.
IataCodeToCity.plplist
failed to get asset path for IATA_CITY_DB_IDENT.
flights
@"SGOffsetDictionary"8@?0
airports
carrierNames
flightsUpdate.dat
airportsUpdate.dat
carrierNamesUpdate.dat
flightCodes.count > 0
airportCodeCandidats_
airportInitScore_
airportBestScore_
airline
flightno
%@ %@ from %@ to %@
void _SGTaggedTypeAssert_impl(Class, void *)
SGTaggedMalloc.m
((uintptr_t)ptr & 0b11) == 0
object_getClass(obj) == tag
NSData *_SGTaggedVMAlloc_impl(Class, size_t, void **)
Could not allocate virtual memory
personFromSenderStats
personFromSenderInDyadicConversationStats
subjectContentStats
personToRecipientsStats
personCCRecipientsStats
domainFromSenderStats
conversationStats
listIdStats
attachmentsStats
subjectCountStatsStats
standardMailRulesStats
mailboxStats
mailboxTypeStats
LSApplicationRecord+Suggestions.m
HTTP URL should always construct
-[SGBinaryClassificationModel initWithPlist:chunks:context:]
SGBinaryClassificationModel.m
[dict isKindOfClass:[NSDictionary class]]
MODEL_TYPE
MODEL_LOCALE
MODEL_DATA
LOGISTIC
Unknown model type: %@
MODEL_FEATURIZER
MODEL_SOURCE_SESSION_DESCRIPTOR
MODEL_DECISION_THRESHOLD
Unknown type of model class: %@
%@_%@_%@%@Model.chunk
PREDICTION
args:
dataDetectionSignificantPhrasePhoneLogistic
significantPhoneNumber
Logistic
dataDetectionSignificantPhraseEmailLogistic
significantEmailAddress
dataDetectionSignificantPhraseEmailForIMessageLogistic
dataDetectionSignificantPhraseAddressLogistic
significantAddress
dataDetectionSignificantPhraseAddressForIMessageLogistic
selfIdentificationPhraseLogistic
selfId
birthdayTextMessageCongrats
birthdayExtraction
com.apple.suggestions.SGBloomFilter
SGBloomFilter.m
dirPath
.bf-head
.bf-tail
.bf2-head
.bf2-tail
Invalid file extension for Bloom filter chunk: %@
Armenian
Avestan
Balinese
Bamum
Batak
Bengali
Bopomofo
Brahmi
Braille
Buginese
Buhid
Canadian_Aboriginal
Carian
Chakma
Cham
Cherokee
Common
Coptic
Cuneiform
Cypriot
Cyrillic
Deseret
Devanagari
Egyptian_Hieroglyphs
Ethiopic
Georgian
Glagolitic
Gothic
Greek
Gujarati
Gurmukhi
Hangul
Hanunoo
Hebrew
Hiragana
Imperial_Aramaic
Inherited
Inscriptional_Pahlavi
Inscriptional_Parthian
Javanese
Kaithi
Kannada
Katakana
Kayah_Li
Kharoshthi
Khmer
Latin
Lepcha
Limbu
Linear_B
Lisu
Lycian
Lydian
Malayalam
Mandaic
Meetei_Mayek
Meroitic_Cursive
Meroitic_Hieroglyphs
Miao
Mongolian
New_Tai_Lue
Ogham
Ol_Chiki
Old_Italic
Old_Persian
Old_South_Arabian
Old_Turkic
Oriya
Osmanya
Phags_Pa
Phoenician
Rejang
Runic
Samaritan
Saurashtra
Sharada
Shavian
Sinhala
Sora_Sompeng
Sundanese
Syloti_Nagri
Syriac
Tagalog
Tagbanwa
Tai_Le
Tai_Tham
Tai_Viet
Takri
Tamil
Telugu
Thaana
Thai
Tibetan
Tifinagh
Ugaritic
SGTextMessageConversationTracker.m
[result.firstObject isKindOfClass:[SGTextMessageItem class]]
[conversation.firstObject isKindOfClass:[SGTextMessageItem class]]
@24@?0@"SGTextMessageItem"8Q16
_text
[otherItem isKindOfClass:[SGTextMessageItem class]]
@"NSString"16@?0@"SGTextMessageItem"8
significant-pseudo-contacts.bf
SGDatabaseJournalFile.m
Can not overwrite journal file
data.length <= UINT32_MAX
!_dead
v24@?0^v8Q16
<SGDatabaseJournalFile %@>
startDate
endDate
http://schema.org/Ticket
http://schema.org/EventReservation
http://schema.org/MovieShowing
http://schema.org/Movie
movie
http://schema.org/Event
Event
ReminderPreprocessor
ReminderInputMapping
ReminderOutputMapping
ReminderOverrides
config
wordBoundary
v16@?0@"SGReminderExtractionModelGuardedData"8
ReminderDissector model inference
bi_lstm_0_h_in
bi_lstm_0_c_in
bi_lstm_0_h_in_rev
bi_lstm_0_c_in_rev
categoryLog
eventsCount
eventKey
interactionKey
timingProcessing
creationDate
launchCountMessages
launchCountReminders
launchCountCalendar
launchCountMail
launchCountMaps
aggregateSummary
deviceLanguage
rtcLogsSent
remindersCountStats
documentType
locationType
expirationDate
trialExperimentId
trialTreatmentId
trialDeploymentId
trialRolloutId
trialRampId
mobileAssetsVersion
privacyAwareLogging.ser
.old
v16@?0@"SGRTCLoggingGuardedData"8
com.apple.suggestd.interactions-write-queue
rtc-persist
q24@?0@"NSDictionary"8@"NSDictionary"16
loggedExtractions
loggedInteractions
loggedInteractionsSummary
storeAge
unknown
flight
train
boat
hotel
carRental
ticket
food
social
eventCategory
templateName
domain
isAllDay
isCancelled
isFromSync
isSplashScreenAcknowledged
bundleID
@"SGEntityTag"16@?0@"NSString"8
SGDelivery_ctNumSame_%lu
medium
high
outputExceptions
outputInfos
eventDuplicateKey
Suggestions
usageMaps
usageCalendar
localeAssetVersion
event
exception
outputException
suggestd
mail
mailBanner
mailDDLink
messages
messagesBanner
messagesDDLink
calendar
calendarNotification
calendarInbox
calendarEventDetails
calendarCanvas
calendarWidget
calendarWidgetUpNext
calendarZKW
calendarAutocomplete
maps
mapsWidget
TTLNotification
spotlight
calendarCreateEventIntent
remindersNotification
remindersList
remindersQuickType
checkInShortcutApp
checkInShortcutSafari
found
shown
engaged
confirmed
rejected
dismissed
dissected
harvested
filtered
deleted
dkim_failed
dkim_succeeded
dissected_realtime
dissected_background
extraction
interactionSummary
reminderExtraction
reminderInteraction
reminderInteractionSummary
webpage
http://schema.org/FlightReservation
boardingTime
http://schema.org/Airline
iataCode
icaoCode
http://schema.org/Airport
http://schema.org/Flight
flightNumber
departureAirport
departureGate
departureTerminal
arrivalAirport
arrivalGate
arrivalTerminal
Flight
plugin
personHandle
startDateTimestamp
endDateTimestamp
reimportRequests
UPDATE reimportRequests SET queryTimestamp = :time WHERE id = :id
INSERT OR REPLACE INTO reimportItems (reimportRequestId, bundleId, uniqueId) SELECT :rid, :bid, value FROM _pas_nsarray(:chunk)
-[SGSqlEntityStore(ReimportRequests) storeReimportItems:requestId:]_block_invoke_4
SGSqlEntityStore+ReimportRequests.m
requestId <= INT64_MAX
:rid
:chunk
v32@?0@"NSString"8@"NSSet"16^B24
UPDATE reimportRequests SET executionTimestamp = :time WHERE id = :id
UPDATE reimportItems SET seenByReceiverTimestamp = :time WHERE bundleId = :bundleId AND uniqueId IN _pas_nsarray(:uids)
:bundleId
UPDATE reimportItems SET seenByReceiverTimestamp = :time WHERE bundleId = :bundleId AND uniqueId = :uniqueId
:uniqueId
UPDATE reimportItems SET uniqueId = :newValue WHERE bundleId = :bundleId AND uniqueId = :oldValue
:oldValue
:newValue
queryTimestamp IS NULL
queryTimestamp IS NOT NULL AND executionTimestamp IS NULL
SELECT id, plugin, personHandle, startDateTimestamp, endDateTimestamp FROM reimportRequests WHERE %@
SELECT bundleId, uniqueId FROM reimportItems WHERE reimportRequestId = :id AND seenByReceiverTimestamp IS NULL
%@:%@
SELECT 1 FROM reimportItems WHERE bundleId = :bid AND uniqueId = :uid
SELECT 1 FROM reimportItems WHERE bundleId = :bid
DELETE FROM reimportRequests WHERE creationTimestamp < :date
:date
DELETE FROM reimportRequests WHERE executionTimestamp IS NOT NULL AND id NOT IN (     SELECT DISTINCT reimportRequestId FROM reimportItems     WHERE seenByReceiverTimestamp IS NULL )
DELETE FROM reimportItems WHERE reimportRequestId NOT IN (SELECT id FROM reimportRequests)
SELECT creationTimestamp, queryTimestamp, executionTimestamp FROM reimportRequests
reimportRequests_total
reimportRequests_unqueried
reimportRequests_unexecuted
reimportRequests_oldest
reimportRequests_oldestOpen
SELECT seenByReceiverTimestamp FROM reimportItems
reimportItems_total
reimportItems_unseen
SGXPCActivity.m
0 <= activityId && activityId < _SGXPCActivityCount
handler
criteria
activity
com.apple.suggestions.sqlentitystore.cacheprecomputation
com.apple.suggestions.collectweeklystats
com.apple.suggestd.mail-intelligence-tasks
com.apple.suggestd.harvested-url-metric-upload
com.apple.suggestd.custom-response-harvest
com.apple.suggestd.phone-qr-engagement-data-recording
const char *identifierForActivityId(SGXPCActivity)
Unknown activity id: %i
SGEnrichmentWritebackAdapter
@"NSMutableArray"8@?0
v16@?0@"NSMutableArray"8
B16@?0@"SGStorageEvent"8
v24@?0@"NSMutableArray"8^B16
SGEnrichmentWritebackAdapter.m
store
%@-writeback-%tu
SGWritebackV2
v32@?0@"CSSearchableItemAttributeSet"8Q16^B24
CoreSuggestions-EnrichmentWriteback-%@
SGEnrichmentWritebackVersion != 2 && (false
 || com_apple_mail_messageID == "
@"NSMutableArray"16@?0@"NSString"8
expected a nonnull result array for mail message id %@
v24@?0@"NSObject"8@"NSError"16
SGEnrichmentWritebackVersion
enrichmentVersionWritebackKey
SGDonatedEventVersion
SGSchemas
^(?:[A-Z0-9][A-Z]|[A-Z][A-Z0-9])
@"NSString"16@?0@"_PASTuple2"8
SGDepartureAirportNames
SGArrivalAirportNames
reservationStatus
SGDepartureTimeUTCOffsetSeconds
SGArrivalTimeUTCOffsetSeconds
potentialAction
CheckInAction
target
ageOfTheSubmodelInDays
nbHighlyDiscriminantTokensForSaliency
nbHighlyDiscriminantTokensForIgnorability
nbExtremelyDiscriminantTokensForSaliency
nbExtremelyDiscriminantTokensForIgnorability
SGTokenString.m
string
string.length < ((unsigned long)1 << 31)
index < _length
range.location + range.length <= _length
com.apple.suggestions.reversetemplatejs
com.apple.suggestions.reversetemplatejs.pressure
v12@?0I8
DISPATCH_MEMORYPRESSURE_NORMAL
DISPATCH_MEMORYPRESSURE_WARN
DISPATCH_MEMORYPRESSURE_CRITICAL
DISPATCH_MEMORYPRESSURE_PROC_LIMIT_WARN
DISPATCH_MEMORYPRESSURE_PROC_LIMIT_CRITICAL
UNKNOWN
SGReverseTemplateJS
ReverseTemplateJS
SGReverseTemplateJS.m
assetPath
parentDir
fileNameWithPathExtension
@"JSValue"16@?0@"NSString"8
load
loadWithVmGrowthCounter
loadNoVmGrowthCounter
debug
developerLog
console
@"NSDictionary"32@?0@"NSString"8d16@"NSString"24
runDataDetectors
@"NSDictionary"40@?0@"NSString"8d16@"NSString"24@"NSArray"32
runDataDetectorsWithMetadata
parseMicrodata
tokenizeString
decodeEntitiesInString
detectLanguageForString
ASSET_VERSION
@"NSString"20@?0@"NSString"8B16
htmlToPlainText
getCurrentLocale
@"NSDictionary"40@?0@"NSString"8@"NSString"16@"NSString"24Q32
@16@?0@"NSValue"8
tags
ranges
getLinguisticTagsForString
getPreferredLocalizationsFromArray must be called with an array of strings
getPreferredLocalizationsFromArray
@"NSString"40@?0@"NSNumber"8@"NSNumber"16@"NSNumber"24@"NSNumber"32
getLocalizedFormattedDatetimeString
isInternalDevice
allowAnyDomainForMarkup
allowUnverifiedSourceForMarkup
@"NSDictionary"8@?0
getSystemVersion
@"NSString"24@?0@"NSNumber"8@"NSString"16
ZZZZZ
getGMTOffsetFromDateTimeAndTimeZoneOlsonCode
d8@?0
secondsForTiming
freeJSContext
@"NSArray"32@?0@"NSString"8@"NSString"16@"NSString"24
getFlightInformation
getMD5Hash
yyyy-MM-dd
getHistoricalFlightInformation
@"SGJSBurstTrie"16@?0@"NSString"8
loadBurstTrie
loadMappedData
main.js
html
%@%@
com.apple.undefined
request
v32@?0@"PARTask"8@"PARResponse"16@"NSError"24
error
userInfo
carrierCode
carrierName
carrierPhoneNumber
flightID
operatorCarrierCode
operatorFlightNumber
status
departurePublishedTime
departureActualTime
arrivalPublishedTime
arrivalActualTime
divertedAirport
legs
Can't create formattedDate, date is nil
code
timezone
city
street
district
postalCode
countryCode
country
secondsFromGMT
scheduled
delayed
redirected
diverted
landed
canceled
File URL must be a valid path.
SGReverseTemplateJS.holdXpcTransactionForShortDelay
shouldDownloadFull
eventClassificationForEntity
resolveCandidatesForJSDict
getPrivacyAwareMlLogs
getFlightReferencesAndReservationId
expected
predicted
diffSchemasArrays
mergeSchemasArrays
reverseMapForEntity
taggedCharacterRanges
outputs
sourceMetadata
jsMessageLogs
emailToOutputWithTiming
textMessageToOutputWithTiming
schemaOrgToOutputWithTiming
emailToJsonLdWithExceptions
exceptions
_jsContext
This method must be stubbed!
https
/api/flights
airline_code
flight_number
URL Should not return nil if host is provided and path starts with a '/': %@ %@
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
payload
POST
application/json
Content-Type
JSContext
Class getJSContextClass(void)_block_invoke
void *JavaScriptCoreLibrary(void)
JSValue
Class getJSValueClass(void)_block_invoke
JSObjectRef SGJSObjectMakeArrayBufferWithBytesNoCopy(JSContextRef, void *, size_t, JSTypedArrayBytesDeallocator, void *, JSValueRef *)
JSObjectMakeArrayBufferWithBytesNoCopy
JSContextGroupRef SGJSContextGetGroup(JSContextRef)
JSContextGetGroup
JSStringRef SGJSStringCreateWithUTF8CString(const char *)
JSStringCreateWithUTF8CString
JSScriptRef SGJSScriptCreateReferencingImmortalASCIIText(JSContextGroupRef, JSStringRef, int, const char *, size_t, JSStringRef *, int *)
JSScriptCreateReferencingImmortalASCIIText
void SGJSStringRelease(JSStringRef)
JSStringRelease
JSValueRef SGJSScriptEvaluate(JSContextRef, JSScriptRef, JSValueRef, JSValueRef *)
JSScriptEvaluate
void SGJSScriptRelease(JSScriptRef)
JSScriptRelease
void SGJSGarbageCollect(JSContextRef)
JSGarbageCollect
master_whitelist.trie
com.apple.suggestions.masterwhitelist
v16@?0@"SGDomainWhitelistCheckerGuardedData"8
www.
PRODUCTIVITY_INTELLIGENCE_STRUCTURED_EVENTS
supportedProviders
engineConfig
StructuredEventModel.mlmodelc
structuredEventInputMapping
structuredEventOutputMapping
foundInMailNotifications
v16@?0@"SGStructuredEventTrialClientWrapperGuardedData"8
SGSqliteDatabase.m
hasInhumanTag
tagsHaveEscapedTag
delimitedString
firstStringAfterPrefix
PRAGMA auto_vacuum=INCREMENTAL
:memory:
mode=memory
file:
?mode=memory&cache=shared
sqlite handle unexpected nil
onPrep
TypeError
Could not securely code this type into SQLite
Could not insert this type into sqlite
updateTable:dictionary:whereClause: requires nonempty dictionary
UPDATE %@ SET %@%@
 WHERE 
insertOrReplaceIntoTable:dictionary: requires nonempty dictionary
INSERT OR REPLACE INTO %@ (%@) VALUES (%@)
[%@: %@ <%p>]
SELECT seq FROM sqlite_sequence WHERE name = :tableName
:tableName
PRAGMA integrity_check
Error: failed to run integrity_check on %@: %@
PRAGMA page_count
PRAGMA freelist_count
PRAGMA auto_vacuum
PRAGMA auto_vacuum=2
VACUUM
PRAGMA incremental_vacuum(%lu)
PRAGMA optimize(%llX)
void hasInhumanTag(sqlite3_context *, int, sqlite3_value **)
argc == 1
|inhuman
void tagsHaveEscapedTag(sqlite3_context *, int, sqlite3_value **)
argc == 2
void delimitedString(sqlite3_context *, int, sqlite3_value **)
void firstStringAfterPrefix(sqlite3_context *, int, sqlite3_value **)
int _indexForBindParam(sqlite3_stmt *, const char *)
stmt
Unknown bind parameter "%s"
ml_summary
extractionTemplate
reverseMapped_EVENT_TIME__START_DATETIME
reverseMapped_TITLE__HOTEL_RESTAURANT_NAME
reverseMapped_TITLE__MOVIE_TICKET_NAME
reverseMapped_EVENT_LOCATION__START_ADDRESS
reverseMapped_EVENT_LOCATION__START_PLACE
crossTags
schema
mergedSchema
diff
missingEntities
ddSGDetections
No event predicted by ML classifier
@context
http://schema.org
http://schema.org/FoodEstablishmentReservation
http://schema.org/FoodEstablishment
startTime
reservationName
http://schema.org/LodgingReservation
checkinTime
checkoutTime
http://schema.org/LodgingBusiness
place
http://schema.org/RentalCarReservation
pickupTime
pickupLocation
dropoffTime
dropoffLocation
endAddress
endPlace
providerName
http://schema.org/ScreeningEvent
Unsupported category: %@
ml_plaintext_prediction
cat_%@
yyyy-MM-dd'T'HH:mm:ss
http://schema.org/Reservation
Cancelled
Confirmed
http://schema.org/PostalAddress
streetAddress
addressLocality
addressRegion
addressCountry
shadowExtraction
mlDefaultExtraction
fallbackExtraction
Exception
templateExtractionOutput
No Event
schemaDiff_%@
schemaFromTemplate_%@
M_%@
assetVersion
assetIdentifier
privacyAwareSubject
category
usecase
%s%d
(%p)
 flag=%#x
DeadState in RunStateOnByte
NULL state in RunStateOnByte
Unexpected special state in RunStateOnByte
DFA memory cache could be too small: 
only room for 
 states.
StateSaver failed to restore state.
Text is not inside context.
Failed to analyze start state.
RunStateOnByteUnlocked failed after ResetCache
RunStateOnByteUnlocked failed after Reset
timing
<SGSchemaOrgKey uuid:%@>
SELECT locationType, label, address, airportCode, latitude, longitude, accuracy, quality FROM locations WHERE id = ?
eventId
airportCode
accuracy
quality
locations
DELETE FROM snippets WHERE entityId IN (%@)
qmarksSeparatedByCommas
DELETE FROM emailSnippets WHERE emailId IN (%@)
SGSqlEntityStore+Deleting.m
batchSize > 0
SELECT rowid AS minId, key FROM emailMetadata WHERE creationTimestamp < :time AND rowid > :minId ORDER BY rowid LIMIT :limit
:time
minId
SELECT messageId FROM mailIntelligence_saliency WHERE creationTimestamp < :time
possible infinite loop
DELETE FROM mailIntelligence_saliency WHERE messageId IN _pas_nsarray(:messageIds) RETURNING creationTimestamp
:messageIds
mailIntelligence_saliency
DELETE FROM mailIntelligence_spotlightMapping WHERE messageId IN _pas_nsarray(:messageIds)
SELECT entityKey FROM entity WHERE entityType = :entityType GROUP BY entityKey having ( COUNT(entityKey) > 1)
WHERE e.entityKey in _pas_nsarray(:candidateEntityKeys) AND e.entityType = :entityType
:candidateEntityKeys
WHERE ((e.timeRangeEnd < :timeRangeEnd AND e.timeRangeEnd != 0) OR (e.timeRangeEnd == 0 AND e.creationTimestamp < :creationTimestamp)) AND e.entityType = :entityType
:timeRangeEnd
WHERE e.timeRangeEnd < :timeRangeEnd AND e.entityType = :entityType
@"SGEntityTag"16@?0@"SGEmailKey"8
WHERE parentKey = ?
DROP TABLE IF EXISTS %@
CREATE TEMP TABLE %@ (masterEntityId INTEGER PRIMARY KEY)
INSERT OR IGNORE INTO %@ SELECT e.masterEntityId FROM %@ AS cr CROSS JOIN entity AS e ON e.id = cr.id WHERE e.entityType IN (:email, :phone, :address, :birthday, :socialProfile)   AND e.masterEntityId > 0   AND e.masterEntityId NOT IN (SELECT id FROM %@)
:phone
:address
:birthday
:socialProfile
SELECT DISTINCT id FROM %@
pseudoContactsWithDeletedDetails
%@ FROM %@ AS c CROSS JOIN entity AS e ON c.id = e.id CROSS JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityType = :pseudoevent OR e.entityType = :pseudoreminder
:pseudoevent
:pseudoreminder
DELETE FROM entity WHERE id IN (SELECT id FROM %@)
DELETE FROM entity_fts WHERE docid IN (SELECT id FROM %@)
SELECT masterEntityId FROM %@
DROP TABLE %@
DROP TABLE IF EXISTS childrenOfRemovedParents
CREATE TEMP TABLE childrenOfRemovedParents (id INTEGER PRIMARY KEY)
INSERT INTO childrenOfRemovedParents SELECT DISTINCT childId FROM entityParentage WHERE parentKey IN _pas_nsarray(:keys)
DROP TABLE IF EXISTS childrenWithRemainingParents
CREATE TEMP TABLE childrenWithRemainingParents (id INTEGER PRIMARY KEY)
INSERT INTO childrenWithRemainingParents SELECT DISTINCT cr.id FROM childrenOfRemovedParents AS cr CROSS JOIN entityParentage AS ep ON cr.id = ep.childId WHERE ep.parentKey NOT IN _pas_nsarray(:keys)
DROP TABLE IF EXISTS childrenToRemove
CREATE TEMP TABLE childrenToRemove (id INTEGER PRIMARY KEY)
INSERT INTO childrenToRemove SELECT id FROM childrenOfRemovedParents      WHERE id NOT IN (SELECT id FROM childrenWithRemainingParents)
childrenToRemove
DELETE FROM entityTags WHERE parentKey IN _pas_nsarray(:keys)
DELETE FROM entityParentage WHERE parentKey IN _pas_nsarray(:keys)
DROP TABLE childrenToRemove
DROP TABLE childrenWithRemainingParents
DROP TABLE childrenOfRemovedParents
DROP TABLE IF EXISTS entitiesToRemove
CREATE TEMP TABLE entitiesToRemove (id INTEGER PRIMARY KEY)
INSERT OR IGNORE INTO entitiesToRemove SELECT childId FROM entityParentage WHERE duplicateKeyHashBlob IN _pas_nsarray(:keys)
entitiesToRemove
DROP TABLE entitiesToRemove
DELETE FROM entityParentage WHERE duplicateKeyHashBlob IN _pas_nsarray(:keys)
DELETE FROM entityTags WHERE duplicateKeyHashBlob IN _pas_nsarray(:keys)
DELETE FROM locations WHERE id IN (SELECT dueLocationId FROM reminders WHERE entityId IN _pas_nsarray(:recordIds))
:recordIds
DELETE FROM reminders WHERE entityId IN _pas_nsarray(:recordIds)
DELETE FROM extractionInfos WHERE id IN (SELECT extractionInfoId FROM contactDetails WHERE entityId IN _pas_nsarray(:recordIds))
DELETE FROM contactDetails WHERE entityId IN _pas_nsarray(:recordIds)
DELETE FROM locations WHERE eventId IN (SELECT l2.eventId FROM locations AS l2 JOIN events AS e ON e.id = l2.eventId WHERE e.entityId IN _pas_nsarray(:recordIds))
DELETE FROM eventTags AS et WHERE et.eventId IN (SELECT et2.eventId FROM eventTags AS et2 JOIN events AS e ON e.id = et2.eventId WHERE e.entityId IN _pas_nsarray(:recordIds))
DELETE FROM events WHERE entityId IN _pas_nsarray(:recordIds)
DELETE FROM entityParentage WHERE duplicateKeyHashBlob IN _pas_nsarray(:compositeHashes)
:compositeHashes
@"NSData"16@?0@"SGDuplicateKey"8
@"NSString"16@?0@"SGDuplicateKey"8
DELETE FROM emailTags WHERE key IN _pas_nsarray(:keys)
SELECT id FROM emailMetadata WHERE key IN _pas_nsarray(:keys)
DELETE FROM emailMetadata WHERE key IN _pas_nsarray(:keys)
Unexpected tableId for record: %@
DROP TABLE IF EXISTS interactionsByBundleId
CREATE TEMP TABLE interactionsByBundleId (bundleId TEXT NOT NULL, timestamp FLOAT, key TEXT NOT NULL)
INSERT INTO interactionsByBundleId   SELECT delimitedString(key, 0),          CASE WHEN updateTimestamp > 0 THEN updateTimestamp              WHEN creationTimestamp > 0 THEN creationTimestamp              ELSE lastSeenTimestamp END,         key  FROM emailMetaData  WHERE type = ?
CREATE INDEX ix_interactionsByBundleId_bundleId ON interactionsByBundleId(bundleId, timestamp DESC, key)
SELECT bundleId, count(*) FROM interactionsByBundleId GROUP BY bundleId
SELECT key FROM interactionsByBundleId WHERE bundleId = :bundleID ORDER BY timestamp DESC LIMIT -1 OFFSET :limit
:bundleID
v24@?0@"NSString"8^B16
tag.indexed
SELECT entityKey, entityType, parentKey FROM entityTags WHERE tag = :tag
True
False
tim@apple.com
craig@apple.com
eat@myshorts.co
SGAhoCorasick.m
bytecode
bytecode.length > 0
bytecode.length % sizeof(op_t) == 0
SGAhoCorasickMaxIter
Exceeded iteration limit
SGAhoCorasickBoundsCheck
Node %u beyond bound %u
featureVector
Identity
QuotedNickname
CJKSpacers
LastNameFirst
LeadingHonorificPeriodRequired
LeadingHonorificPeriodOptional
TrailingHonorific
CommonVietnameseSurnameList
SpanishNameClassifierConfidenceThreshold
SpanishNameCharacterIndicators
SpanishNameUnigramIndicators
SpanishNameBigramIndicators
TwoCharSpanishNameEndings
SpanishNameLocaleIndicators
Any-Latin; Latin-ASCII
%s.%s
SGNames.m
failed to get patterns for LeadingHonorificPeriodRequired
failed to get patterns for LeadingHonorificPeriodOptional
v28@?0Q8Q16B24
 via LinkedIn
()<>[]"@
Could not initialize pattern.
Could not initialize regular expression: %@
@"NSRegularExpression"8@?0
%c.%s
-_. 
NSCharacterSet *charSetWithEndpoints(int, ...)
n_args && (n_args % 2) == 0
start < end
namefreq.trie
_PASCFBurstTrie *nameFreqTrie(void)_block_invoke_2
Could not load name frequency trie
void enumerateTrailingHonorificMatchesInString(NSString *__strong, BOOL (^__strong)(NSRange))_block_invoke
Could not initialize the raw regexp
NSArray<NSString *> *tokenizeName(NSString *__strong)_block_invoke_2
guardedTokenizer
duration
scrolled_to_end
mailbox_type
app_launch
app_resume
message_view_start
message_view_end
message_fetched
message_moved
reply_sent
reply_draft_started
forward_draft_started
flag_changed
read_changed
link_clicked
<%@>
SGSqlEntityStore+SqlHelpers.m
serializedEntityKey
SELECT title, content, contentRangeOfInterest FROM snippets WHERE entityId=?
%@[%c]
WHERE entityType = :entityType
SELECT COUNT(*) FROM entity
SELECT COUNT(*) FROM emailMetadata
%@ FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId %@ 
schema_version
entities
SELECT entityType, COUNT(*) FROM entity GROUP BY entityType UNION SELECT type, COUNT(*) FROM emailMetadata GROUP BY type
total_entities
SELECT COUNT(*) FROM (SELECT id FROM entity WHERE masterEntityId > 0 AND entityType = :entityType)
merged_pseudocontacts
SELECT count(*), MIN(entityId), MAX(entityId) FROM serializedContacts
serialized_contacts_lowest
serialized_contacts_highest
serialized_contacts_limit
serialized_contacts_total
entity_fts
SELECT count(*) FROM entity_fts
entity_fts_count
SELECT count(*) FROM entity_fts WHERE docid != entityId
entity_fts_details
entity_fts_lang
snippets
emailSnippets
SELECT (SELECT COUNT(*) FROM snippets) + (SELECT COUNT(*) FROM emailSnippets)
snippets_count
SELECT (SELECT COUNT(*) FROM snippets WHERE title IS NOT NULL AND title != '') + (SELECT COUNT(*) FROM emailSnippets WHERE title IS NOT NULL AND title != '')
snippets_title_count
SELECT (SELECT COUNT(*) FROM snippets WHERE content IS NOT NULL AND content != '') + (SELECT COUNT(*) FROM emailSnippets WHERE content IS NOT NULL AND content != '')
snippets_content_count
SELECT COUNT(*) FROM harvestQueueTombstones
tombstones_count
SELECT COUNT(*) FROM entity WHERE id NOT IN (SELECT DISTINCT childId FROM entityParentage)
orphaned_entity_count
SELECT key, value FROM statsCounters
SELECT COUNT(bundle_id), bundle_id FROM urls GROUP BY bundle_id
urlsCounters
DELETE FROM entity
DELETE FROM entity_fts
DELETE FROM entityParentage
DELETE FROM entityTags
DELETE FROM entityReferences
DELETE FROM emailMetadata
DELETE FROM emailTags
DELETE FROM serializedContacts
DELETE FROM cnContactsToSgContacts
DELETE FROM identityInterdict
DELETE FROM urls
DELETE FROM confirmedFieldValues
DELETE FROM snippets
DELETE FROM emailSnippets
INSERT INTO sqlite_sequence(name, seq) SELECT value, :minId FROM _pas_nsarray(:tableNames)
:minId
:tableNames
WHERE e.groupId = :groupId
:groupId
UPDATE entity SET masterEntityId = (CASE id
WHEN %lld THEN %lld
ELSE -1 END) WHERE groupId = :groupId
SELECT e.id,e.entityKey,e.entityType,ep.extractionType,ep.sourceKey,e.author,e.title,e.creationTimestamp,e.updateTimestamp,e.indexTimestamp,e.tags,e.structuredData,e.quality,e.masterEntityId,e.groupId,e.state,ep.parentKey,e.timeRangeStart,e.timeRangeEnd,e.floatingRange,e.timeRangeStartUTCOffsetSeconds,e.timeRangeEndUTCOffsetSeconds,e.locations,ep.modelVersion,ep.modelConfidence, e.harvestedOnBuild 
SELECT e.id,e.entityKey,e.entityType,ep.extractionType,ep.sourceKey,e.author,e.title,e.creationTimestamp,e.updateTimestamp,e.indexTimestamp,e.tags,e.structuredData,e.quality,e.masterEntityId,e.groupId,e.state,ep.parentKey,e.timeRangeStart,e.timeRangeEnd,e.floatingRange,e.timeRangeStartUTCOffsetSeconds,e.timeRangeEndUTCOffsetSeconds,e.locations 
http://schema.org/RentalCar
http://schema.org/Brand
brand
rentalCompany
Car Rental
databasecheck_
***** Database Check: %@
***** Overall Status: %@
failure
**** Integrity check
Integrity check of entities.db
Error: failed to run integrity_check on entities.db: %@
Integrity check of snippets.db
Error: failed to run integrity_check on snippets.db: %@
Broken entityId reference check: %@
SELECT entityId, * FROM %@ WHERE entityId NOT IN (SELECT id FROM entity)
[%@]
Failed to check for entityId broken reference in %@
SELECT DISTINCT masterEntityId FROM entity WHERE masterEntityId >= 0 AND masterEntityId != id AND entityType = :pseudo
SELECT MIN(id) FROM entity WHERE masterEntityId = :masterEntityId AND entityType = :pseudo
SGSqlEntityStore+DatabaseCheck.m
Failed to find merge group minimal element
  * merge group with masterEntityId %lld has unexpected minimal element %lld
SELECT masterEntityId FROM entity WHERE id = :mergeId
:mergeId
  * merge group has masterEntityId %lld, but there is no row with id == %lld
  * merge group has masterEntityId %lld, but the row with entity.id == %lld has masterEntityId == %lld
[1m%@
personFromSenderProbability
personFromSenderInDyadicConversationProbability
subjectContentProbability
personToRecipientsProbability
personCCRecipientsProbability
domainFromSenderProbability
conversationProbability
listIdProbability
attachmentsProbability
subjectCountStatsProbability
standardMailRulesProbability
mailboxProbability
mailboxTypeProbability
SGSqlEntityStore+Maintenance.m
Tried to register cache computation task on an in-memory store
v16@?0@"NSObject<OS_xpc_object>"8
dbstats
merged_pseudocontact_percent
entityTypes.
SGRTCLogging+Helpers.m
bucketSize must be > 0
geocoded
airportCodeWithCoordinates
addressWithCoordinatesWithLabel
addressWithLabel
coordinates
HTMLPreprocessor.js
v24@?0@8@"NSError"16
WKWebViewConfiguration
Class getWKWebViewConfigurationClass(void)_block_invoke
SGDOMParser.m
void *WebKitLibrary(void)
WKWebsiteDataStore
Class getWKWebsiteDataStoreClass(void)_block_invoke
WKWebpagePreferences
Class getWKWebpagePreferencesClass(void)_block_invoke
WKWebView
Class getWKWebViewClass(void)_block_invoke
SGStorageLocation.m
isnan(latitude) == isnan(longitude)
isnan(latitude) || (-90 <= latitude && latitude <= 90)
isnan(longitude) || (-180 <= longitude && longitude <= 180)
!isnan(latitude) || label || address
isfinite(accuracy)
isfinite(quality)
<SGStorageLocation@%0.2f/%0.2f label: '%@' address: '%@' airportCode: '%@'
SGOrigin+Internal.m
Unknown entity type %u
Extracted data must have a parent.
Pseudo contacts must be derived from at least one parent entity
Unsupported type: %@
Dunno how to handle a pseudo contact with a parent entity type: %@
int64_t makeInternalEntityId(SGTableId, int64_t)
SGRecordId+Internal.m
rowId out of range
experimentId
treatmentId
deploymentId
SGDCloudKitSync.m
property
set%c%s:
snprintfResult >= 0
objcProperty != nil
<%@ %@>
SGDCloudKitSync-callbacks
strongEndOperation
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
DeleteZone operation attempt completion [retries: %lu]
CreateZone operation attempt completion [retries: %lu]
v24@?0@"NSDictionary"8@"NSError"16
salt_
salt_atomic_reference
salt-manatee
salt
non-nil
ProcureSalt operation attempt completion [retries: %lu]
com_apple_suggestions_ck_event
v16@?0@"CKRecord"8
muscularEndOperation
[recordZoneID isEqual:[self recordZoneId]]
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
WriteRecord operation attempt completion [retries: %lu]
SGDCloudKitSync_sharedInstanceConfigurationQueue
com.apple.CoreSuggestions.PseudoEvents
com.apple.suggestd.aps
v16@?0@"_SGDCloudKitSyncPersistedState"8
This block should not be run more than once
DISABLED
ENABLED
SGDCloudKitSync.processStateChanges
v24@?0@"CKAccountInfo"8@"NSError"16
v24@?0@"NSNumber"8@"NSError"16
v16@?0@"SGFuture"8
v24@?0@"NSString"8@"NSError"16
aps-environment
SGCKAPSEnvironmentDomain
v24@?0@"CKSubscription"8@"NSError"16
_database == nil
_callback
com.apple.aps.suggestd
com.apple.icloud-container.
com.apple.suggestd
v40@?0@"NSString"8@16@"NSObject"24@"NSObject"32
com.apple.suggestions.sgckAddEntity
@"NSArray"24@?0@"NSData"8@"CKRecordID"16
com.apple.suggestions.sgckDeleteGroupId
@"NSArray"16@?0@"NSData"8
_callback == nil
B16@?0@"SGPipelineEntity"8
_deleteAllSyncedItemsCallback == nil
UnknownSaltError
successful
0-length
[notification isKindOfClass:[CKDatabaseNotification class]]
<SGReminderDueLocation type:'%@' trigger: %@ name: %@>
chatLengthEstimator.cmsketch
SGChatLengthEstimator.m
endTime
partySize
Restaurant
None
SubjectLength
SubjectWordCount
SenderIsVIP
AttachmentHistogramApplication
AttachmentHistogramMedia
AttachmentHistogramOthers
EmailAgeInDays
SenderConnectionScore
PersonFromSenderProbability
SubjectContentProbability
PersonToRecipientsProbability
PersonCCRecipientsProbability
DomainFromSenderProbability
PersonFromSenderInDyadicConversationProbability
AttachmentHistogramProbability
ConversationIdProbability
ListIdProbability
PredictedAttachment
PrivateSubject
PrivateTokenizedSubject
PrivateSenderFrom
PrivateSenderFromInDyadicConversation
PrivateSortedToRecipients
PrivateToRecipientsPairs
PrivateSortedCCRecipients
PrivateCCRecipientsPairs
SenderFullEmailDomain
PrivateAttachmentHistogram
PrivateConversationId
PrivateListId
PrivateHTMLBodyTextContent
PrivateHTMLBodyTextContentLanguageIdentifier
ScrolledToEnd
UserReplied
NumberOfMailsViewedBeforeSinceAvailable
TimeBeforeViewStartSinceAvailable
MessageViewCount
MessageViewMaxDwellTime
MessageViewTotalDwellTime
NumberOfUnreadMessageAtFirstViewTime
NumberOfMoreRecentUnreadMessageAtFirstViewTime
MarkedAsRead
MarkedAsUnread
MailGotFlagged
ReplyDraftStarted
ForwardDraftStarted
MarkedAsJunk
LinkClicked
@16@?0@"NSNumber"8
@"NSString"16@?0@"NSNumber"8
[%@]
%@: %@
@"SGStorageLocation"16@?0@"SGDCKLocation"8
SGPipelineEntity+CloudKitRecord.m
[self.duplicateKey.entityKey isKindOfClass:[SGPseudoEventKey class]]
parentEntityType == SGEntityTypeWebPage || parentEntityType == SGEntityTypeInteraction
Only all-day events should be floating. Other events should have a timezone set before being synced up.
PQT_ContactSharing_TrainingTransformers.plist
SGContactSharingModel.m
SGContactSharingModel - Provided probabilities (count %ld) do not match valid SGContactSharingLabels (count %ld).
countUpTo8KB
count8KBTo32KB
count32KBTo128KB
count128KBTo512KB
count512KBTo2MB
countOver2MB
Application
Media
Others
 [truncated]
[^\x00-\x{10ffff}]
(?:)
Bad final char: 
{%d,}
{%d}
{%d,%d}
(?-m:^)
(?-m:$)
(?HaveMatch:%d)
(){}[]*+?|.^$\
[]^-\
\x%02x
\x{%x}
<SGDetection/%@ '%@'>
%tu out of range (count %tu)
@16@?0Q8
Q8@?0
<SGLabeledValue: %@: %@>
@"NSString"16@?0@"SGEmailAddress"8
@"NSString"16@?0@"SGPhoneNumber"8
(nil)
bi_lstm_0_h_out
bi_lstm_0_c_out
bi_lstm_0_h_out_rev
bi_lstm_0_c_out_rev
addSingleton
componentAnalysis.mm
elementToRepresentative.find(x) == elementToRepresentative.end()
union_
rep1Iter != elementToRepresentative.end()
rep2Iter != elementToRepresentative.end()
set1Iter != representativeToSet.end() && set2Iter != representativeToSet.end()
TARGET_STRING
MAC_DISTANCE
-[SGTokenDistanceMappingTransformer transform:]
SGTokenDistanceMappingTransformer.m
+[SGTokenDistanceMappingTransformer transformArray:withTargetIndex:maximumDistance:]
index < input.count
%@__%d
SuggestionsMLDebugContextDataKey
assertion_context
------
SGJournalEntry.m
eventBatch
reminder
<SGJournalEntry op:%lu entity:%@
predictedMissingElementScore
foundMatchingElement
v16@?0@"SGRealtimeSuggestionsTuple"8
kSuggestionsFromEmailContentCacheSalt
v24@?0@"SGRealtimeSuggestionsTuple"8@"NSError"16
suggestionsFromMessage message harvest queue
@"SGTextMessage"8@?0
after banner callback
SGDSuggestManager+RealtimeDonations.m
Passing 0 for options would return nothing
suggestionsFromEmailContent
_suggestionsFromMessage-plugins
@"SGRealtimeSuggestionsTuple"8@?0
B16@?0@"SGRealtimeContact"8
B16@?0@"SGRealtimeEvent"8
@"SGRealtimeSuggestionsTuple"16@?0@"SGRealtimeSuggestionsTuple"8
@"SGRealtimeReminder"16@?0@"SGRealtimeReminder"8
MAPPINGS
MAPPING_TYPE
MAPPING_LANGUAGE
-[SGStringMappingTransformer transform:]
SGStringMappingTransformer.m
[input isKindOfClass:[NSArray class]]
http://schema.org/BoatReservation
http://schema.org/BoatTrip
http://schema.org/BoatTerminal
arrivalBoatTerminal
departureBoatTerminal
Boat Trip
EventMetaDataExtractor_ML_EVENT__CATEGORY
EventMetaDataExtractor_ML_EVENT__NAME
EventMetaDataExtractor_ML_EVENT__DEPARTURE_LOCATION
EventMetaDataExtractor_ML_EVENT__ARRIVAL_LOCATION
EventMetaDataExtractor_ML_EVENT__TITLE
EventMetaDataExtractor_ML_EVENT__START_DATETIME
EventMetaDataExtractor_ML_EVENT__END_DATETIME
EventMetaDataExtractor_ML_EVENT__END_DATETIME_IS_SIGNIFICANT
SGMessageEventDissectorConfig
EventClassifier
MLEventExtractionModel.assets
EventClassifierThreshold
EventExtractionMessageProcessingLimit
EventExtractionRateLimitInterval
arrivalAirportName
departureAirportName
arrivalAirportCode
departureAirportCode
flightReferences
IATA
ML_EventMessage
Train
Hotel
Movie
GenericEvent
Unknown
eventClassifierPath
assetFolderPath
v16@?0@"SGMessageEventDissectorGuardedData"8
CoreSuggestionsInternals
IndiaSMSEventExtraction
IndiaSMSEventExtractionMobileAssets
com.apple.eventMetaDataExtractor.eventMetaDataExtractorPlugin
TaskName
EventSuggestionsFromMessage
InputMessage
AssetFolderPath
v24@?0@"MLRTaskResult"8@"NSError"16
http://schema.org/ReservationConfirmed
http://schema.org/BusStop
http://schema.org/TrainReservation
http://schema.org/TrainTrip
departureStation
http://schema.org/TrainStation
arrivalStation
GenericEvent|%@|%@|%@
@8@?0
deviceLocale
outputCategory
messageProcessingRate
failureReasonCode
@"NSDictionary"16@?0@"NSDictionary"8
com.apple.suggestions.messageEventDissector
:label
:extractionInfoId
INSERT INTO contactDetails (entityId, duplicateKey, sourceKey, label, value, type, extractionInfoId) VALUES (:entityId, :duplicateKey, :sourceKey, :label, :value, :type, :extractionInfoId)
SELECT id FROM contactDetails WHERE duplicateKey = :duplicateKey
SELECT entityId FROM contactDetails WHERE duplicateKey = :duplicateKey
SELECT content FROM snippets WHERE entityId = :entityId
SELECT value, label, type, duplicateKey, sourceKey, extractionInfoId FROM contactDetails WHERE entityId = :entityId OR entityId IN (SELECT e.id FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.masterEntityId = :entityId)
label
extractionInfoId
DDScannerCreationError
Failed to construct DDScanner: %@
SGDataDetectors-SharedScanner
NSTextCheckingTypeLink
NSTextCheckingTypePhoneNumber
NSTextCheckingTypeAddress
NSTextCheckingTypeTransitInformation
NSTextCheckingTypeDate
SGDDMatchDate
SGDDMatchFlight
SGDDMatchLink
SGDDMatchLookupHint
SGDDMatchDelivery
SGDDMatchTimeOffset
SGDDMatchOther
B16@?0^{__DDResult={__CFRuntimeBase=QAQ}{__DDQueryRange={__DDQueryOffset=b32b32}{__DDQueryOffset=b32b32}}{?=qq}q^{__CFArray}^{__CFString}^{__CFString}^v^{__CFDictionary}qCf}8
writeInteractionEventEntities
SGSqlEntityStore+Writing.m
Do not call writeInteractionEventEntities with non-interaction entity type.
containerEntity.duplicateKey
writeEntity
Don't know how to write out a container entity of type %@
v16@?0@"SGPipelineEnrichment"8
Contact lacks a recordId prior to identity store update
@16@?0@8
Don't know how to prune container entities of type %@
SELECT parentKey FROM entityParentage WHERE childId = :childId
:childId
SELECT key FROM emailMetadata WHERE key IN _pas_nsarray(:keys) AND type = :emailType ORDER BY updateTimestamp DESC LIMIT -1 OFFSET :offset
:emailType
:offset
SELECT e.entityKey, e.entityType    FROM entity e JOIN entityParentage ep ON e.id = ep.childId    WHERE ep.parentKey = :parentKey AND e.id not in _pas_nsset(:ids)
Dump table "%@":
SELECT 
 FROM %@
%@    
contactEntity
contactDetails
q24@?0@8@16
SELECT e.downloadState FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE ep.duplicateKeyHashBlob = :duplicateKeyHash AND ep.extractionType = :extractionType
:duplicateKeyHash
_writeMessageEntityToSnippetsDb received entity type %@
INSERT OR REPLACE INTO emailSnippets (emailId, content, title) VALUES (:emailId, :content, :title)
_writeEntityToSnippetsDb received message entity type
INSERT OR REPLACE INTO snippets (entityId, content, contentRangeOfInterest, title) VALUES (:entityId, :content, :range, :title)
:range
timeRangeStart
timeRangeEnd
timeRangeStartUTCOffsetSeconds
timeRangeEndUTCOffsetSeconds
floatingRange
pendingGeocode
SELECT pendingGeocode FROM entity WHERE id = :id
id = %lld
UPDATE emailMetadata SET pendingVerification = :pendingVerification WHERE sourceKey = :souceKey
:pendingVerification
:souceKey
curatedDupe
SELECT curatedDupe FROM entity WHERE id = :id
SELECT id, creationTimestamp, updateTimestamp, downloadState FROM emailMetadata WHERE key = :key AND type = :type
author
updateTimestamp
indexTimestamp
lastSeenTimestamp
downloadState
harvestedOnBuild
pendingVerification
DELETE FROM emailTags WHERE unlikely(key = :key)
INSERT INTO emailTags (key, type, tag) VALUES (:key, :type, :tag)
:tag
entity.duplicateKey
Writing enrichment via legacy code path
enrichment.duplicateKey
Writing message entity via legacy code path
SELECT e.id, e.masterEntityId, e.creationTimestamp, e.updateTimestamp FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE (ep.duplicateKeyHashBlob = :duplicateKeyHash AND ep.extractionType = :extractionType)
 UNION SELECT e.id, e.masterEntityId, e.creationTimestamp, e.updateTimestamp FROM entity AS e WHERE e.contentHashBlob = :contentHash
:contentHash
groupId
contentHashBlob
DELETE FROM entityTags WHERE entityKey = :entityKey AND entityType = :entityType AND parentKey 
 = :parentKey
 is NULL
INSERT INTO entityTags (tag, entityKey, entityType, parentKey, duplicateKeyHash, duplicateKeyHashBlob) VALUES (:tag, :entityKey, :entityType, :parentKey, '-', :duplicateKeyHash)
childId
duplicateKeyHash
duplicateKeyHashBlob
extractionType
modelVersion
modelConfidence
loggingIdentifier
@"SGJournalEntry"16@?0@"SGEntity"8
INSERT OR REPLACE INTO entity_fts(docid, entityId, messagingTerms, ftsTerms) VALUES(?, ?, ?, ?)
v16@?0q8
SELECT id, masterEntityId FROM entity WHERE masterEntityId > 0 AND entityType IN (:pseudo, :unrecognized) ORDER BY masterEntityId ASC
:unrecognized
SELECT 1 FROM _pas_nsindexset(:ids) i LEFT JOIN entity e on i.value = e.id AND e.entityType = :contact WHERE e.id IS NULL
recordId from wrong table
@16@?0@"SGRecordId"8
SELECT MIN(id) FROM entity WHERE id IN _pas_nsarray(:ids)
masterEntityRecord
UPDATE entity SET masterEntityId = :masterEntityId WHERE id IN _pas_nsarray(:ids) AND entityType IN (:pseudoContact, :unrecognizedContact)
:unrecognizedContact
writeIdentityBlobs
@"SGRecordId"16@?0@"_PASTuple2"8
[:alnum:]
[:^alnum:]
[:alpha:]
[:^alpha:]
[:ascii:]
[:^ascii:]
[:blank:]
[:^blank:]
[:cntrl:]
[:^cntrl:]
[:digit:]
[:^digit:]
[:graph:]
[:^graph:]
[:lower:]
[:^lower:]
[:print:]
[:^print:]
[:punct:]
[:^punct:]
[:space:]
[:^space:]
[:upper:]
[:^upper:]
[:word:]
[:^word:]
[:xdigit:]
[:^xdigit:]
trainName
trainNumber
trainCompany
<%s %lu-%lu>
InhumanSig
RelaxedSig/F
ValedictionSig/F
RejetedSig/F
SymbolicSig
B24@?0Q8^B16
B16@?0S8B12
-[SGSignatureDissector shouldIgnoreSignature:signatureRange:isInhuman:]_block_invoke
SGSignatureDissector.m
sub != nil
email
address
phone
quote
void tokenize(NSString *__strong, TokenizationState *, NSRange, NSString *__strong)
tokenize range (%lu, %lu) beyond text length %lu
void tokenize(NSString *__strong, TokenizationState *, NSRange, NSString *__strong)_block_invoke_2
Encountered nil Asset while attempting to load HMM tokens.
HmmSigTokens.dat
No HMM token file contained in CoreSuggestions MobileAsset version %lu
Could not load HMM keyword trie
v24@?0{?=qq}8
hmm.dat
viterbi
obs <= NUM_TOKEN_TYPES
void deserializeHmm(NSData *__strong)
Wrong data length: %li
stats
totalNumberOfEmailsProcessedForAttachmentDetectionRoundedToClosestMultipleOf20
totalNumberOfEmailsProcessedForRecipientDetectionRoundedToClosestMultipleOf20
totalNumberOfEmailsProcessedForFollowUpDetectionRoundedToClosestMultipleOf20
numberOfPredictedAttachmentOnLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
numberOfLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
numberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
numberOfLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
SELECT lastSeenTimestamp FROM emailMetadata WHERE key = :emailKey
:emailKey
UPDATE events SET whenRange = "MalformedData"
calevent
unkphone
text-message
social-profile
SGPseudoEventKey.m
globalId
[SGPseudoEventKey groupId:%@
{dropoff}
SGSqlEntityStore+SerializedContacts.m
Unexpected table for recordId: %@
DELETE FROM serializedContacts WHERE entityId = ?
DELETE FROM serializedContacts WHERE entityId IN _pas_nsarray(:ids)
SELECT data FROM serializedContacts WHERE entityId = ?
loadSerializedContactForId
SELECT entityId, data FROM serializedContacts ORDER BY entityId DESC
SELECT entityId FROM serializedContacts
DELETE FROM serializedContacts ORDER BY id DESC LIMIT -1 OFFSET ?
SELECT id FROM serializedContactCacheJobs LIMIT 1
DELETE FROM serializedContactCacheJobs WHERE id=?
updateSerializedContacts-onequery
updateSerializedContacts
INSERT INTO serializedContactCacheJobs (id) VALUES (?)
SGZipUnarchive
SGUnarchiver.m
readArchive && destinationURL
trigger
EXTRACTION__REMINDER_TITLE_ACTION_VERB
EXTRACTION__REMINDER_TITLE_ACTION_OBJECT_CORE
POLARITY__REMINDER_STATEMENT
POLARITY__COMMITMENT
POLARITY__REJECTION
POLARITY__DONE
DUE_LOCATION_TRIGGER__
ARRIVE
LEAVE
MY_HOME
MY_WORK
MY_SCHOOL
OTHER
DUE_TIME_TRIGGER__DATETIME
DUE_LOCATION_TRIGGER__LEAVE
DUE_LOCATION_TRIGGER__ARRIVE
DUE_LOCATION_TRIGGER__MY_HOME
DUE_LOCATION_TRIGGER__MY_WORK
DUE_LOCATION_TRIGGER__MY_SCHOOL
DUE_LOCATION_TRIGGER__OTHER
R_action
I_NN
I_NNP
I_Noun
I_NNS
I_NNPS
I_PRP
I_VB
I_VBP
I_VBN
I_VBG
I_Verb
I_RP
confirmation
triggerOptional
excludeList
confirmationOptional
titlePrefix
L_de
hasPolarity:
hasTitle
hasTrigger
hasCorrectNumberOfActionVerbs
hasActionVerb
hasObjectCore
@"NSString"16@?0@"SGTaggedCharacterRange"8
%@%@%@%@
OriginalMessage/F
BodyHeaders/F
CorporateFooter
SXReply
B24@?0{_NSRange=QQ}8
SGMailQuoteDissector
PRODUCTIVITY_INTELLIGENCE_REMINDERS
actionVerbOptional
messagesBannerLimit
reminderOverrides
reminderPreprocessor
reminderInputMapping
reminderOutputMapping
ReminderModel.mlmodelc
v16@?0@"SGReminderTrialClientWrapperGuardedData"8
"%@"
 OR 
%@%%%@%%
%@%%%@
%@. %@
@"NSString"16@?0@"CNLabeledValue"8
@"CNMutablePostalAddress"16@?0@"CNPostalAddress"8
#NOSTREET#
#NOCITY#
SignificantEmailAddress
SG_FEATURE_RECENCY
SG_FEATURE_ENTITYTYPE
SG_FEATURE_ADDRESSTYPE
SG_FEATURE_OTHER
SG_FEATURE_EMAILTYPE
SG_FEATURE_CALLTYPE
SG_FEATURE_PHONETYPE
SG_FEATURE_BELONGINGTO
SG_FEATURE_BELONGING
SGTokenizer.m
block
SGTokenizer
@"_PASQueueLock"8@?0
v16@?0@8
v40@?0@"NSString"8^B16{_NSRange=QQ}24
ITSTokenListCopyEscapedTokenAtIndex failed to get token at index %ld
"%@*"
ITSTokenListRef _createITSListForFTSQuery(NSString *__strong)_block_invoke_2
tokenizer
SGSqlEntityStoreErrorDomain
SELECT e.entityKey, e.entityType, ep.parentKey FROM entity AS e JOIN entityParentage AS ep ON ep.childId = e.id WHERE e.id = :rowId
SELECT ep.sourceKey FROM entity AS e JOIN entityParentage AS ep ON ep.childId = e.id WHERE e.id = :rowId
SGSqlEntityStore+Loading.m
No support for loading entities from non-legacy recordIds (%lu)
WHERE e.id = :rowId
AND ep.modelVersion != 0
WHERE e.entityType = :entityType %@ LIMIT :limit
key = :key
_loadMessageByKey matched multiple rows
SELECT title, content FROM emailSnippets WHERE emailId = :emailId
:emailId
WHERE e.entityKey = :entityKey AND e.entityType = :entityType AND ep.parentKey
WHERE e.entityKey = :entityKey AND e.entityType = :entityType
WHERE ep.sourceKey = :sourceKey AND e.entityType = :entityType
SELECT CASE WHEN masterEntityId > 0 THEN masterEntityId ELSE id END FROM entity WHERE id IN (SELECT CASE WHEN entityType = :contact THEN id ELSE groupId END FROM entity WHERE id=:id)
:contact
Could not load contact (recordId=%@)
RecordId with unexpected table: %@
No record found with id: %@
WHERE masterEntityId = :masterEntityId
SELECT e.id FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityKey = :entityKey AND e.entityType = :entityType AND ep.parentKey IS :parentKey
where
%@ AND e.entityType IN (:entityTypeDetected, :entityTypeCurated)
:entityTypeDetected
:entityTypeCurated
 AND e.entityType IN (:detPhone, :detAddr, :detEmailAddr, :detSocialProfile, :curPhone, :curAddr, :curEmailAddr, :detBirthday, :curBirthday, :curPhotoPath)
:detPhone
:detAddr
:detEmailAddr
:detSocialProfile
:curPhone
:curAddr
:curEmailAddr
:detBirthday
:curBirthday
:curPhotoPath
Contact details require a parent
SELECT e.entityKey AS 'Entity Key', COUNT(*) AS `Entity Count` FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityType = :entityType AND e.creationTimestamp >= :startDate AND e.creationTimestamp <= :endDate GROUP BY e.entityKey ORDER BY e.creationTimeStamp ASC
:startDate
:endDate
SELECT id FROM reminders LIMIT ?
Invalid duplicate key: %@
@16@?0@"SGEntity"8
identifiers.count != 0
MyPhone/F
NotMyPhone/F
MyAddress/F
NotMyAddress/F
BirthdayDate/F
Birthday/F
DetailType
DetailTypes
SelfIdentMsgCount
FilterWithAddressBook
UnlikelyPhoneSampling
LogLine
%ADDRESS%
%DATE%
SGM2BirthdayWrongDay
SGM2BirthdaySameDay
SGM2BirthdayPreviousDay
SGM2BirthdayNextDay
SGM2BirthdayPreviousWeek
SGM2BirthdayNextWeek
{SGRe2IterAction_=B}16@?0^{?={_NSRange=QQ}*}8
SGDetectedAttributeDissector.m
targetPerson
birthdayDate
subtype
v20@?0@"SGEntity"8B16
0123456789+-()
HKHealthStore
Class getHKHealthStoreClass(void)_block_invoke
void *HealthKitLibrary(void)
NSString *textToMatch(long, long, NSString *__strong, SGDataDetectorMatchType)
type == SGDDMatchPhone || type == SGDDMatchPostalAddress || type == SGDDMatchEmailAddress || type == SGDDMatchDate
%WRONG_MATCH_TYPE
SelfIdentification
SG_TARGET_NAME
SGInteractionKey.m
<SGInteractionKey bundleId:%@ personHandle:%@>
SUB_MODEL_KEY_STRING
From
Date
Subject
Header
ReplyAttribution/F
QuotedRegionStart
Headers
Separator
SG_TARGET_PHONE
SignificantPhoneNumber
Add after Compile.
Unexpected op in KeepPart: 
/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/re2/re2/re2_prefilter.h
Check failed: op_ == AND || op_ == OR
messages.added
messages.lost
messages.pruned
messages.found
messages.deleted
messages.undisplayablyLost
messages.foundAfterUndisplayablyLost
%@.distribution
%@.scalar
%@.%@.%@.richness
phones.sig
phones.phrase
emailAddresses
emailAddresses.sig
emailAddresses.phrase
postalAddresses
postalAddresses.sig
postalAddresses.phrase
%@.phones
%@.emailAddresses
%@.postalAddresses
%@.phones.%@
%@.emailAddresses.%@
%@.postalAddresses.%@
behavior
contacts
postalAddress
behavior.scalar
contactUpdate
calendarApp
eventUpdate
eventCancellation
eventDuplicate
eventNearDuplicate
mailApp
messagesApp
suggest
banner
events.%@s
behavior.distribution.%@.%@.events
contacts.%@s
behavior.distribution.%@.%@.contacts
mailsDrainedPerHarvest
harvestDrainedSomethingFromQueue
mailsDrained
messageTimeSpentInQueue
harvest
record
identityGroupSize
impressions.suggestion.banner
impressions.suggestion.banner.suppressed
impressions.suggestion.banner.hypotheticalIncludingActedOn
impressions.suggestion.banner.event
impressions.suggestion.banner.contact
impressions.suggestion.banner.hypotheticalContactIncludingInsignificant
database
corruption
integrity_check
corruption_marker
contactsFoundOnDeviceEnabled
eventsFoundOnDeviceEnabled
annotationType
range
SGTaggedCharacterRange.m
nonnull NSArray<%@*> *%@ was null when decoded
text
AnnotationTypeUnknown
AnnotationTypeDataDetectors
AnnotationTypeNLTaggerLexicalClass
AnnotationTypeNLTaggerLemma
AnnotationTypeCrossAnnotation
AnnotationTypeMetadata
AnnotationTypeMisc
AnnotationTypeReminder
AnnotationTypeHuman
AnnotationTypePadding
AnnotationTypeModelOutput
AnnotationTypeHTML
AnnotationTypeCSS
AnnotationTypeNER
<SGTaggedCharacterRange annotationType:%@ tags:%@ text:%@>
@"SGTaggedCharacterRange"16@?0@"SGTaggedCharacterRange"8
The baseTaggedCharacterRangeArray isn't sorted.
@"NSSet"16@?0@"NSSet"8
SELF beginswith 'L'
L_%@
Error in TaggedCharacterRange tags, only one can be of type SGTaggedCharacterRangeAnnotationTypeNLTaggerLemma
section_%@_intermediate
section_%@_begin
section_%@_single
tags contains space
TrialModels
com.apple.suggestd.%@.serialQueue
%@_%@_%@_%@
%@_%@_%@
SGContactDetailAddress
SGContactDetailPhone
SGContactEmailAddress
SGContactDetailInstantMessageAddress
SGContactDetailSocialProfile
SGContactDetailBirthday
SGContactDetailPhoto
NSString * _Nonnull SGContactDetailTypeDescription(SGContactDetailType)
SGContactDetail.m
Unknown contact detail type: %lu
SGContactDetailType SGEntityTypeToContactDetailType(SGEntityType)
SGEntityTypeIsContactDetail(entityType)
This should never happen. The param assert should hit if this is the case.
extractionInfo
Cannot construct SGContactDetail from entity of type %lld
SGContactDetailType SGIdentityKeyTypeToContactDetailType(SGIdentityKeyType)
Unhandled identity key type %u
NullCNContactIDPlaceholder:Null
com.apple.suggestions.suggestd.cntosgcontacts
INSERT OR REPLACE INTO cnContactsToSgContacts (cnContactIdentifier, maxEntityId, entityId) VALUES (:cnContactIdentifier, :maxEntityId, :entityId)
:cnContactIdentifier
:maxEntityId
INSERT OR REPLACE INTO cnContactsToSgContacts (cnContactIdentifier, maxEntityId, entityId) SELECT :cnContactIdentifier, :maxEntityId, value FROM _pas_nsarray(:matches)
:matches
loadCNContactMatchesForContact
SELECT maxEntityId, entityId FROM cnContactsToSgContacts WHERE cnContactIdentifier = :cnContactIdentifier
maxEntityId
DELETE FROM cnContactsToSgContacts WHERE cnContactIdentifier = :cnContactIdentifier
DELETE FROM cnContactsToSgContacts WHERE entityId IN _pas_nsarray(:ids)
SELECT DISTINCT cnContactIdentifier FROM cnContactsToSgContacts
cnContactIdentifier
SELECT cnContactIdentifier, maxEntityId, entityId FROM cnContactsToSgContacts ORDER BY cnContactIdentifier, entityId
SELECT cnContactIdentifier FROM cnContactsToSgContacts WHERE entityId = :entityId
SELECT cnContactIdentifier FROM cnContactsToSgContactsCacheJobs LIMIT :batchSize
DELETE FROM cnContactsToSgContactsCacheJobs WHERE cnContactIdentifier IN _pas_nsarray(:batchArray)
:batchArray
cnContactsToSgContactsCacheJobs
INSERT OR IGNORE INTO cnContactsToSgContactsCacheJobs (cnContactIdentifier) SELECT value FROM _pas_nsarray(:batch)
:batch
DELETE FROM cnContactsToSgContactsCacheJobs
updateCNContactMatches
updateCNContactMatches-onequery
@16@?0@"SGContact"8
SGSqlEntityStore+CNtoSGContacts.m
!exceptionSwallowed
SELECT value FROM metadata WHERE key = 'hasFullCNtoSGSync' LIMIT 1
value
INSERT OR REPLACE INTO metadata (key, value) VALUES ('hasFullCNtoSGSync', 3)
refreshSuggestionsContact
@"NSMutableSet"8@?0
@"NSString"16@?0@"SGStorageContact"8
duplicate
@"NSString"16@?0@"NSString"8
"%@"%@
@"NSString"24@?0@"NSString"8@"NSString"16
@"NSString"24@?0@"NSString"8@"NSArray"16
false
(%@ == %@)
(%@)
B24@?0@"NSString"8^B16
%@ * %@
%@ %@ *
kMDItemDisplayName
cdwt
firstInitial
%@. * %@
"*%@*"cd
(%@ || %@ || %@)
(%@ && %@)
%@ && (%@ || %@)
harvestTime
plugins
dissectors
verificationOp
geocodeOp
storageOp
messageInHumanBody
messageSubjectDetectedData
messageDetectedData
messageHtmlParser
messageQuotedRegions
<%@ %@ duration: %.6f cpu: %.6f enrichment: %@>
B16@?0@"SGHarvestQueueMetricsTimer"8
Dissector
com.apple
entities.db
snippets.db
@"SGDCloudKitSync"8@?0
CREATE TABLE IF NOT EXISTS integrityCheck (inconsequential STRING)
PRAGMA journal_mode=WAL
PRAGMA synchronous=NORMAL
unable to initialize entity DB
unable to initialize snippets DB
snippetDb instance was unexpectedly non-nil
sqliteCode
SGSqlEntityStore spotlight reindex
com.apple.suggestions.sqlentitystore.cacheprecomputationqueue
mifeaturestore.db
%@.corrupted.%ld
-shm
-wal
v16@?0@"NSMutableDictionary"8
WHERE unlikely(pendingGeocode=1)
SELECT key FROM emailMetadata WHERE unlikely(pendingVerification = 1) ORDER BY creationTimestamp DESC
SELECT ep.parentKey FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityType = :entityType AND e.entityKey = :entityKey ORDER BY e.creationTimestamp DESC
SELECT ep.parentKey FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityType = :entityType AND e.entityKey = :entityKey
SELECT state FROM emailMetadata WHERE key = :key
WHERE (e.masterEntityId = :masterEntityId OR e.id = :masterEntityId) AND +e.entityType = :pseudo AND ep.extractionType != :messagesMeCard
:masterEntityId
:messagesMeCard
Candidate already has more than 1 profile. Merging happening early?
@"SGStorageContact"16@?0@"SGStorageContact"8
Should only get 1 merged contact since that's how we selected the profiles but got %d
:isSentTag
:isMe
SELECT DISTINCT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END  FROM entity WHERE entity.entityType = :pseudo AND title LIKE :prefix ESCAPE '!' AND NOT hasInhumanTag(entity.tags) AND NOT entity.curatedDupe LIMIT :limit
:prefix
:pseudoContactType
:detailType
:detailTags
masterEntityId
v32@?0@"NSString"8q16@"NSArray"24
SELECT entity.masterEntityId, entity.id, entity.entityType, entity.entityKey FROM entityTags CROSS JOIN entity     ON entity.entityKey = entityTags.entityKey AND entity.entityType = entityTags.entityType WHERE entityTags.entityType IN (:pseudoContactType, :detailType)     AND entityTags.tag IN _pas_nsarray(:detailTags)
SELECT entity.masterEntityId, entity.id, entity.entityType, entity.entityKey FROM entityTags CROSS JOIN entity     ON entity.entityKey = entityTags.entityKey AND entity.entityType = entityTags.entityType WHERE entityTags.entityType = :detailType AND entityTags.entityType != :pseudoContactType     AND EXISTS (         SELECT value AS prefix         FROM _pas_nsarray(:detailTags)         WHERE entityTags.tag >= prefix AND entityTags.tag < firstStringAfterPrefix(prefix)     )
SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END  AS masterEntityId FROM entity WHERE id IN _pas_nsset(:ids)     AND NOT hasInhumanTag(entity.tags) AND tagsHaveEscapedTag(entity.tags, :isSentTag) = :isMe
SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END  AS masterEntityId FROM entity WHERE id IN _pas_nsset(:socialProfileSubContactIds)     AND title = ""     AND NOT hasInhumanTag(entity.tags) AND tagsHaveEscapedTag(entity.tags, :isSentTag) = :isMe
:socialProfileSubContactIds
SELECT entity.id FROM entity_fts CROSS JOIN entity     ON entityId = entity.id WHERE messagingTerms MATCH :match     AND NOT hasInhumanTag(entity.tags) AND tagsHaveEscapedTag(entity.tags, :isSentTag) = :isMe
:match
SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END  AS masterEntityId FROM entity WHERE id IN _pas_nsset(:candidates)     AND EXISTS (         SELECT value AS pattern             FROM _pas_nsarray(:patterns)             WHERE title LIKE pattern     )
:candidates
:patterns
v24@?0@"NSMutableSet"8@"NSArray"16
SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END  FROM entityTags AS t CROSS JOIN entity     ON entity.entityKey = t.entityKey AND entity.entityType = t.entityType WHERE t.tag = :interactionTag     AND t.entityType = :pseudoContact     AND NOT hasInhumanTag(entity.tags) AND tagsHaveEscapedTag(entity.tags, :isSentTag) = :isMe
:interactionTag
:pseudoContact
v24@?0@"NSArray"8@?<B@?@"SGContact">16
B24@?0@8@"NSDictionary"16
@"_PASTuple2"16@?0@"SGContact"8
@"SGContact"16@?0@"_PASTuple2"8
@"SGContactMatch"16@?0@"SGContact"8
SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END , docid, entityId, matchinfo(entity_fts, "pcb") AS matchinfoData FROM entity_fts CROSS JOIN entity ON entity.id = entityId WHERE entity_fts.messagingTerms MATCH :match    AND entity.entityType = :pseudo   AND NOT hasInhumanTag(entity.tags)    AND NOT entity.curatedDupe
WITH matches AS (    SELECT entity.id as id, CASE WHEN entity.entityType = :pseudo OR entity.masterEntityId < 0 THEN entity.id ELSE entity.masterEntityId END as entityId        FROM entityTags CROSS JOIN entity ON entity.entityKey = entityTags.entityKey AND entity.entityType = entityTags.entityType        WHERE entityTags.tag GLOB :tagPrefix) SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END , matches.id, matches.entityId FROM matches CROSS JOIN entity ON matches.id = entity.id    WHERE entity.entityType = :pseudo        AND NOT hasInhumanTag(entity.tags)         AND NOT entity.curatedDupe
:tagPrefix
@"SGContactMatch"16@?0@"NSNumber"8
@"NSString"16@?0@"NSValue"8
SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END , entity_fts.docid, entity_fts.entityId, matchinfo(entity_fts, "pcb")    FROM entity_fts CROSS JOIN entity ON entity_fts.entityId = entity.id    WHERE entity_fts MATCH :match        AND entity.entityType = :pseudo        AND NOT hasInhumanTag(entity.tags)        AND NOT entity.curatedDupe
SELECT fts3_tokenizer(:tokenizerName)
:tokenizerName
ab_cf_tokenizer
\(\s*tokenize=ab_cf_tokenizer\s+language="([^\"]*?)"\s+collator="([^\"]*?)",
error instantiating argumentsPattern: %@
language
collator
end >= start
v16@?0@"SGSqlEntityStoreTokenizerGuardedData"8
SELECT DISTINCT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END  FROM entity WHERE entity.entityType = :pseudo AND NOT hasInhumanTag(entity.tags) AND NOT entity.curatedDupe ORDER BY entity.id DESC LIMIT :limit 
searchString
Invalid response from suggestContactMatchesByContactDetailTag
@"SGContactMatch"16@?0@"NSArray"8
SELECT CASE WHEN e.masterEntityId > 0 THEN e.masterEntityId WHEN e.groupId > 0 THEN e.groupId ELSE e.id END  FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityType = :entityType AND e.entityKey = :entityKey
 AND ep.parentKey = :parentKey
SELECT CASE WHEN e.masterEntityId > 0 THEN e.masterEntityId WHEN e.groupId > 0 THEN e.groupId ELSE e.id END  FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityType = :entityType AND e.entityKey = :entityKey AND ep.extractionType != :messagesMeCard
Uninitialized identity key
SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END  FROM entity WHERE id = :entityId
-[SGSqlEntityStore storageContactByRecordId:withSnippets:]_block_invoke
SGSqlEntityStore.m
masterEntityIds.count==1
contactDetailTag.isContactDetail
@16@?0@"NSArray"8
@"NSArray"16@?0@"NSArray"8
SELECT id FROM entity WHERE entityType = :pseudo AND masterEntityId = :masterEntityId AND id != masterEntityId
@"SGStorageEvent"24@?0@"SGStorageEvent"8@"SGStorageEvent"16
@"SGStorageEvent"16@?0@"SGStorageEvent"8
SELECT entityId, fieldValues FROM confirmedFieldValues WHERE entityId IN _pas_nsarray(:ids)
@"NSNumber"16@?0@"SGStorageEvent"8
confirmedFieldValues
fieldValues
UPDATE confirmedFieldValues SET maybeChanged=0 WHERE entityId IN _pas_nsarray(:ids)
AND title LIKE :prefix ESCAPE '!'
 AND id IN (SELECT entityId FROM confirmedFieldValues WHERE maybeChanged=1)
WHERE (e.floatingRange = 0 AND ((:queryStart == e.timeRangeStart) OR (NOT (:queryStart >= e.timeRangeEnd OR :queryEnd <= e.timeRangeStart))) OR e.floatingRange = 1 AND ((:fltQueryStart == e.timeRangeStart) OR (NOT (:fltQueryStart >= e.timeRangeEnd OR :fltQueryEnd <= e.timeRangeStart))))AND e.entityType = :pseudoEventType AND e.state != :deleted 
 ORDER BY e.timeRangeStart ASC LIMIT :limit
:queryStart
:queryEnd
:fltQueryStart
:fltQueryEnd
:pseudoEventType
SELECT e.id FROM entity AS e INNER JOIN entityParentage AS ep ON e.id=ep.childId WHERE e.entityKey=:entityKey AND e.entityType=:entityType AND ep.parentKey
=:parentKey
 IS NULL
NotFound
Could not find duplicateKey
maybeChanged
SELECT fieldValues FROM confirmedFieldValues WHERE entityId=?
DELETE FROM confirmedFieldValues WHERE entityId=?
SELECT c.fieldValues FROM confirmedFieldValues AS c INNER JOIN entity AS e ON c.entityId = e.id INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityKey = :entityKey AND e.entityType = :entityType AND ep.parentKey = :parentKey
realtimeEvent.event.uniqueKey
Could not load event to confirm (recordId=%@)
Could not load event to reject (%@)
Could not load reminder to confirm (recordId=%@)
Could not load reminder to reject (recordId=%@)
Could not load reminder to reject (SGDuplicateKey=%@)
@"NSMutableSet"16@?0@"SGEntityTag"8
SELECT array.rowid, entityKey, entityType, parentKey FROM entityTags JOIN _pas_nsarray(:tagNames) AS array ON entityTags.tag == array.value UNION ALL SELECT array.rowid, key, :emailEntityType, NULL FROM emailTags JOIN _pas_nsarray(:tagNames) AS array ON emailTags.tag == array.value
:tagNames
@"NSString"16@?0@"SGEntityTag"8
:emailEntityType
@"SGEntityTag"16@?0@8
tags.count != 0
SELECT b.entityKey, b.entityType, b.parentKey FROM entityTags AS i CROSS JOIN entityTags AS b ON b.duplicateKeyHashBlob=i.duplicateKeyHashBlob WHERE b.tag=:interactionBundleIdTag AND i.tag IN _pas_nsarray(:tags)
:interactionBundleIdTag
:tags
SELECT key FROM emailMetadata WHERE unlikely(downloadState = :requested) ORDER BY creationTimestamp DESC LIMIT :limit
:requested
UPDATE emailMetadata SET downloadState = :resolved WHERE key IN _pas_nsarray(:keys)
:resolved
@"NSString"16@?0@"SGEmailKey"8
DELETE FROM contactDetails
SELECT %@ FROM %@
NULL
itemReferenceIdentifier
itemReferenceName
epoch
plain
schemas
accountHandles
accountServerIdentifier
webKitPlainText
webKitPlainTextDDResult
extractionMode
geocodingMode
canonical
address+poi
poiGeocodingFilters
ekEventAvailabilityState
com.apple.reversetemplated
segments
@"NSString"28@?0@"NSDictionary"8@"<NSObject>"16B24
CountryCode
transportation
cancelled
iata
carrier
flightDataResolvedCarrierCode
flightDataResolvedCarrierName
destination
flightMissingCarrierCode
routeDesignation
@"NSArray"16@?0@"NSString"8
[flightNumbers containsObject:@([transportationDict[@"routeDesignation"] integerValue])]
flightDataResolvedAirportCode
flightMissingData
flightDataResolvedAirportName
flightDataResolvedAirportTZ
flightMissingTZForAirportCode
templateShortName
flightHasSameOriginAndDestination
emptyGroupId
fallbackGroupId
notes
dateTime
[redacted]
[unavailable]
%@... (length %lu)
dateParseIssue
flightDataResolvedAirportNameForLocation
flightDataResolvedAirportCoordinates
v32@?0@8@16^B24
pastEvent
B32@?0@8Q16^B24
minDurationForAllDayIfNoTz
convertedToAllDay
noTimezone
-[SGExtractionDissector entityForOutputItem:withSiblings:parentEntity:outputExceptions:outputInfos:interaction:]
SGExtractionDissector.m
outputWithoutSchema
categoryType
v32@?0@"SGSimpleMailHeaderKeyValue"8Q16^B24
v12@?0B8
v40@?0@"NSArray"8@"NSDictionary"16@"NSArray"24@"NSDictionary"32
emailDownloadRequested
needsSourceVerification
templateExceptionMessage
containsSchemaorg
jsOutputLogs
outputUsecase
v16@?0@"NSDictionary"8
v16@?0@"SGDOMParserResult"8
candidates
candidateTaggedCharacterRanges
jsEntity
monochrome
ddResult
com.internal.mail.checkinActivity
http://schema.org/CheckInAction
NoTeamId
lastSGMIModelGroundTruthVersion
lastSGMIModelInferenceVersion
lastSGMIUpdaterProcessingDate
earliestNextSGMIUpdaterProcessingDate
totalSGMIUpdaterMailsProcessed
kTotalSGMITruePositivePredictions
kTotalSGMIFalsePositivePredictions
kTotalSGMITrueNegativePredictions
kTotalSGMIFalseNegativePredictions
@"NSNumber"16@?0@"SGMIFeatureSubmodelLink"8
v24@?0@"SGMIFeatureVector"8^B16
SGMISubmodelsManager - Purge deleted emails references
v32@?0@"NSNumber"8@"NSArray"16^B24
SGReverseTemplatesJSDataDetectors.m
yyyy'-'MM'-'dd'T'HH':'mm':'ssZZZZZ
yyyy'-'MM'-'dd'T'HH':'mm':'ss
yyyy'-'MM'-'dd
No locale found for: %@
extractions
Could not create DDScanner
Could not create DDScanner for: %@
ddType
iso8601
endIso8601
components
metadata
B16@?0^{__DDResult=}8
Contact
ContactName
AddressBookContactName
JobTitle
CompanyName
ZipCode
AirlineName
FlightNumber
https?://.{0,16}(?:%@)
)|(?:
<SGMIWarningsConfig (%tu languages)>
  %@: %@
v32@?0@"NSString"8@"SGMIWarningsDetectors"16^B24
attachmentLinkDetectionRegex: %@
defaultTimeIntervalToStartWarningExposition: %.0f
defaultTimeIntervalForAWarning: %.0f
defaultTimeIntervalToEndWarningExposition: %.0f
bodyAnalysisSamplingFactor: %.0f%%
logWarningSignatureStats: %@
enabled
disabled
SGPseudoReminderKey.m
[SGPseudoReminderKey groupId:%@
-[SGDCKLocation StringAsLocationType:]
SGDCKLocation.m
newVertex
mincut.m
g && g->vertices
digraph g {
    V%u -> V%u [label="%0.2f"];
mincut
maxflow > 0
newEdge
capacity > 0.0
addEdgeToIncidenceList
SGMIError
nil@nil.invalid
<non_dyadic_conversation>
<unassigned_mailbox>
SGMIFeatureVector.m
featureType == SGMIFeatureType_Number || featureType == SGMIFeatureType_NumberArray
FeatureVector for messageId %@: (%ld features)
v32@?0@"<EMContentItem>"8Q16^B24
@"NSString"16@?0@"SGSimpleNamedEmailAddress"8
v32@?0@"NSArray"8@"NSString"16@"NSMutableArray"24
%@-size%@-count%@
5to9
v32@?0@"NSNumber"8Q16^B24
_PASTuple2<NSString *,NSString *> *SGCleavePhoneNumberAndExtension(NSString *__strong)
SGDataNormalization.m
phoneNumber
BOOL SGPhoneNumberMatchInSet(NSMutableDictionary<NSString *,NSString<SGNormalizedPhoneNumber> *> *__strong, NSString *__strong, NSArray<NSString<SGNormalizedPhoneNumber> *> *__strong)
needle
10111
10177
%@ %@ %@ %@ %@ %@
v16@?0^{__DDScanner=}8
interactionId
interactionGroupId
interactionBundleId
reservationItemReferences
reservationContainerReference
intentResponseUserActivityString
interactionTeamId
SGAppLaunchHistory.m
fromStatus
toStatus
SGM2HarvestBudgetStatusUnknown
SGM2HarvestBudgetStatusPower
SGM2HarvestBudgetStatusBattery
SGM2HarvestBudgetStatusExhaustedNumberOfOperations
SGM2HarvestBudgetStatusExhaustedElapsedSeconds
SGM2HarvestBudgetStatusExhaustedDuet
SGPipelineEnrichment.m
identityKey
parent
The parent entity cannot be a contact
com_apple_mail_repliedTo
com_apple_mail_messageID
com_apple_mail_conversationID
contentType == "public.email-message" && InRange(kMDItemContentCreationDate, $time.now(-%lu), $time.now(-%lu))
contentType == "public.email-message" && InRange(kMDItemContentCreationDate, $time.now(-%lu), $time.now(-%lu)) && kMDItemMailboxes == "mailbox.sent"
_kMDItemExternalID == "%@"
contentType == "public.email-message"
%@ == * && InRange(kMDItemContentCreationDate, $time.now(-%lu), $time.now)
http://schema.org/Person
reservationNumber
bookingTime
http://schema.org/ReservationCancelled
http://schema.org/ReservationPending
http://schema.org/ReservationHold
underName
SGMetricsHelper-asyncQueue
SGDeliveryKey.m
trackingNumber
[SGDeliveryKey externalIdentifier: %@]
SurnamePrefix
CompositeSpanishFirstname
CommonSpanishSurnamePrefix
MultiCharChineseSurname
SingleCharChineseSurname
koreansurnames
SGIdentityName.m
Could not generate file path from koreansurnames.txt
Could not load list of korean surnames from koreansurnames.txt
Could not load components separated by new line.
ja_surname.trie
failed to get asset path for ja_surname.trie
-[SGIdentityName initWithJapaneseName:]_block_invoke_2
Could not load ja_surname trie
v16@?0@"_PASAsset2"8
Jpan
Traditional-Simplified
firstname
middlename
surname
v40@?0@"NSString"8@"NSString"16@"NSData"24@"NSError"32
 not
v24@?0@"CSSearchableItem"8^B16
Internal
textContent
mailConversationIdentifier
accountType
isStoredEncrypted
contentProtection
attachments
test-source
@"NSArray"8@?0
@"SGDataDetectorMatchesWithSignatureRange"8@?0
@16@?0@"NSString"8
dateIsCorrect
isFromCongratulation
didRegexTrigger
offset
didResponseKitTrigger
use_case
provider_name
tickets
restaurant
NoEvent
http://schema.org/MusicEvent
<SGStructuredEventClassification category:%@ useCase:%@ locale:%@>
SGJournal.m
entry
@"SGStorageEvent"16@?0@"SGJournalEntry"8
observer
!_observersFrozen
_observersFrozen
SGContactEntity.m
SGEntityTypeIsContact(entity.duplicateKey.entityType)
SGRawKey.m
<SGRawKey: %@>
%@ . 
SUBJECT
SGDOMParserResult.m
NSString
plainText
SGTaggedCharacterRange
SGPipeline-_resetCachesAndModels-pressure
SGPipeline-_delayedResetCachesAndModels
+[SGPipeline sharedBackgroundProcessingQueue]
+[SGPipeline sharedBackgroundStorageQueue]
Dependencies unknown for dissector class: %@
@"SGPipelineDissector"16@?0#8
@"NSMutableArray"16@?0@"NSArray"8
v32@?0@"SGPipelineDissector"8@"NSArray"16^B24
@?<v@?>16@?0@"SGPipelineDissector"8
Unknown entity type
-[SGPipeline geocodeOperation:withDependencies:]_block_invoke_2
SGPipeline.m
[enrichment.timeRange isValidAllDayRange]
B16@?0@"SGPipelineEnrichment"8
bundleIdentifier and uniqueIdentifier are required if adding a Spotlight reference.
com.apple.suggestions.fulldownloadrequested
Store
dissect
dissectArrayAndWrite
dissectArray
dissectEntityAndWrite
dissectEntity
@"NSOperation"16@?0@"NSArray"8
zh-Hans
v40@?0@"NSString"8{_NSRange=QQ}16^B32
Job stack overflow.
Unexpected opcode: 
 arg 
Bad arg in kInstCapture: 
SGContactDetailKey.m
<SGContactDetailKey identityKey:%@ label:%@ value:%@>
SGPseudoContactKey.m
[SGPseudoContactKey identityKey:%@]
text/vcard
text/calendar
@16@?0@"BMContentAttachment"8
application
image
audio
video
<%@ type:%@ path:%@>
test
testpath
SGTextMessageBirthdayCongratsModel
CG=3&NG=1&FV=1.1
lowerCase
stripNonBaseCharacters
replaceAllWhitespaceWithSpaces
transformFullwidthToHalfwidthASCII
removePunctuationWithExceptions
removeSymbols
mergeNumbersSeparatedByASCIISpace
replaceNumbersWithString
replaceLinksWithString
separateCharacter
mergeAnyConsecutiveCharacters
trimWhitespace
@"SGLocation"16@?0@"SGStorageLocation"8
message:
when
<SGStorageEvent title:%@ dupKey:%@ when:%@>
-[SGStorageEvent geocodedEventWithStartDate:startTimeZone:endDate:endTimeZone:locations:]
SGStorageEvent.m
!startTimeZone == !endTimeZone
q24@?0@"SGStorageLocation"8@"SGStorageLocation"16
SGDSpotlightReceiver.m
manager
SGDSpotlightReceiver.purgeAndDeleteDropbox
@"_PASTuple2"8@?0
v16@?0@"SGXPCResponse"8
v16@?0@"_PASTuple2"8
SGDSpotlightReceiver.deleteDomainIdentifiersDropbox
@"NSMutableDictionary"8@?0
SGDSpotlightReceiver.deleteInteractionBundleIdDropbox
v16@?0@"NSMutableSet"8
SGDSpotlightReceiver.deleteInteractionIdDropbox
SGDSpotlightReceiver.deleteInteractionGroupIdDropbox
@"CSSearchableItem"8@?0
addUserAction-plugins
v24@?0@"_PASTuple2"8^B16
v24@?0@"NSMutableDictionary"8^B16
kUTTypeEmailMessage
kUTTypeMessage
kUTTypeText
kUTTypeContent
kUTTypeToDoItem
com.apple.safari.history
v24@?0@"NSMutableSet"8^B16
com.apple.proactive.SocialHighlightsRefreshed
SGContactPipelineHelper.m
v24@?0@"CNContact"8^B16
v32@?0@"NSString"8Q16^B24
v16@?0@"NSNotification"8
B16@?0@"CNContact"8
B16@?0@"SGContact"8
SGCuratedContactMatcher.m
Asking to stopOnNewDetail or stopOnMatchedDetail does not make sense alonside providing newDetails or matchedDetails
@16@?0@"CNLabeledValue"8
-[SGDCKEvent StringAsCategoryType:]
SGDCKEvent.m
extraKey
schemaOrg
interactionInfo
parentEntityType
traditions
inversionRate
trieName
Tries
confidenceThreshold
double inversionProbabilityEstimate(double, double, double)
SGNameInversionPredictor.m
Probabilities must be in [0, 1]
Contradictory parameters.
SGEmailKey.m
<SGEmailKey source:%@ messageId:%@>
<SGMITokenCounts[%@]: %@ salient ; %@ regular>
:extractionType
:modelVersion
:confidence
INSERT INTO extractionInfos (extractionType, modelVersion, confidence) VALUES (:extractionType, :modelVersion, :confidence)
SELECT extractionType, modelVersion, confidence FROM extractionInfos WHERE id = :primaryKey
LOCALE
NAME_TAGGING
TRUST_CORENLP
PERSONAL_NAME_MAPPING
PUNCTUATION_MAPPING
TARGET
PHONE
ADDRESS
SG_TARGET_ADDRESS
EMAIL
NAME
FEATURE
PHONENUMBER
LINK
DATE
FIRSTNAME
LASTNAME
FULLNAME
NUMBER
SYMBOL
BELONGINGTO
BELONGING
CALLTYPE
PHONETYPE
ENTITYTYPE
ADDRESSTYPE
RECENCY
EMAILTYPE
com.apple.MobileAsset.LinguisticData.ma.new-asset-installed
SGTokenizerMappingTransformer.m
-[SGTokenizerMappingTransformer transform:]_block_invoke
Must be a dictionary
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
com.apple.suggestions.ml.tokenizing
v40@?0{?={?=qq}Q}8^B32
invalid:nomail
EKEventStore+Suggestions.m
Unhandled message class %@
B16@?0@"EKEvent"8
Concat of 
RE2: unexpected op: 
Bad call to ParseState::ParsePerlFlags
AddFoldedRange recurses too much.
Bad hex digit 
TARGET_MAPPING
PHONE_MAPPING
ADDRESS_MAPPING
DATE_MAPPING
SGEntityMatchingTransformer.m
Unexpected input: %@. %@ requires dictionary with SG_MODEL_INPUT_TEXT key.
Unexpected input: %@. %@ requires SG_MODEL_DISABLE_TARGET_MAPPING to be setif neither SG_MODEL_TARGET_DD_MATCH and SG_MODEL_INPUT_TARGET_RANGE are provied.
@"NSString"16@?0@"SGDataDetectorMatch"8
migrator.%@.full.%lu_to_%lu
memory
disk
com.apple.suggestions.databasemigration.migratorQueue
com.apple.suggestions.databasemigration.
SELECT name FROM sqlite_schema WHERE type='table' AND NOT name LIKE 'sqlite_%'
name
%@FailedUnmigration
Failed to clear database: %@
version
PRAGMA table_list
shadow
Failed to drop table %@: %@
migration_
entityId INTEGER, messagingTerms TEXT COLLATE NOCASE, ftsTerms TEXT COLLATE NOCASE, notindexed=entityId
SELECT MAX(docid) FROM %@
{_PASDBIterAction_=B}16@?0^{sqlite3_stmt=}8
DatabaseMigrator-FTS-queue
INSERT INTO %@ (docid, entityId, messagingTerms, ftsTerms) SELECT docid, entityId, messagingTerms, ftsTerms FROM %@ WHERE docid BETWEEN :batchStart AND :batchStop   AND docid NOT IN (SELECT docid FROM %@)
:batchStart
:batchStop
v16@?0^{sqlite3_stmt=}8
ALTER TABLE %@ RENAME TO %@
entity_fts_from
SELECT MIN(docid) FROM %@ WHERE docid NOT IN (SELECT docid FROM %@)
SGSqlEntityStore+DatabaseMigrator.m
skipToEntityVersion != UINT32_MAX
skipToSnippetsVersion != UINT32_MAX
legacy
old (%lu < %d)
migrator.%@.steps.%lu_to_%lu
SELECT rowId, task FROM postMigrationTasks ORDER BY rowId
task
postMigrationTasks
DELETE FROM postMigrationTasks WHERE rowId == :rowId LIMIT 1
:rowId
com.apple.iChat
SG_UPDATING_SKIP_QUERIES
ATTACH DATABASE :snippetPath AS snippets
:snippetPath
INSERT OR REPLACE INTO snippets.snippets (entityId, title, content, contentRangeOfInterest) SELECT id, title, content, contentRangeOfInterest FROM entity WHERE entityType = :entityType 
INSERT OR REPLACE INTO snippets.snippets (entityId, title, content, contentRangeOfInterest) SELECT id, NULL, content, contentRangeOfInterest FROM entity WHERE entityType != :entityType 
UPDATE entity SET content=NULL, contentRangeOfInterest=NULL
UPDATE entity SET title=NULL WHERE entityType = ?
ALTER TABLE entity ADD COLUMN author TEXT
CREATE TABLE IF NOT EXISTS entityParentage (id INTEGER PRIMARY KEY AUTOINCREMENT,parentKey TEXT,childId INTEGER NOT NULL,duplicateKeyHash TEXT NOT NULL,extractionType INTEGER,sourceKey TEXT,UNIQUE(parentKey, childId))
CREATE INDEX IF NOT EXISTS entityParentageParentKeyIdx on entityParentage(parentKey)
CREATE INDEX IF NOT EXISTS entityParentageChildIdx on entityParentage(childId)
CREATE UNIQUE INDEX IF NOT EXISTS entityParentageDuplicateKeyHashIdx on entityParentage(duplicateKeyHash, extractionType)
CREATE TABLE IF NOT EXISTS serializedContacts (id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER,data BLOB)
CREATE UNIQUE INDEX IF NOT EXISTS serializedContactsEntityIdIdx ON serializedContacts(entityId)
cnContactsToSgContacts
CREATE TABLE IF NOT EXISTS cnContactsToSgContacts (id INTEGER PRIMARY KEY AUTOINCREMENT,cnContactIdentifier TEXT,maxEntityId INTEGER,entityIds TEXT)
CREATE UNIQUE INDEX IF NOT EXISTS cnContactsToSgContactsCIdIdx ON cnContactsToSgContacts(cnContactIdentifier)
ALTER TABLE entity ADD COLUMN downloadState INTEGER DEFAULT 0
entityDownloadStateIdx
CREATE INDEX entityDownloadStateIdx on entity(downloadState)
contentHash
ALTER TABLE entity ADD COLUMN contentHash TEXT
entityContentHashIdx
CREATE UNIQUE INDEX IF NOT EXISTS entityContentHashIdx ON entity(contentHash)
ALTER TABLE entity ADD COLUMN groupId INTEGER DEFAULT -1
groupIdIdx
CREATE INDEX IF NOT EXISTS groupIdIdx on entity(groupId)
entityTags
ALTER TABLE entityTags ADD COLUMN duplicateKeyHash TEXT NOT NULL DEFAULT ''
ix_entityTags_dupKeyHash
CREATE INDEX IF NOT EXISTS ix_entityTags_dupKeyHash ON entityTags(duplicateKeyHash)
DROP TABLE IF EXISTS identityPhonesDeduped
CREATE TEMP TABLE identityPhonesDeduped AS SELECT DISTINCT * FROM identityPhones
INSERT INTO identityPhones SELECT * FROM identityPhonesDeduped
DROP TABLE identityPhonesDeduped
hashHexToBlob
UPDATE entity SET contentHashBlob = hashHexToBlob(contentHash) WHERE contentHash IS NOT NULL AND contentHash != ''
UPDATE entityTags SET duplicateKeyHashBlob = hashHexToBlob(duplicateKeyHash) WHERE duplicateKeyHash IS NOT NULL AND duplicateKeyHash != ''
UPDATE entityParentage SET duplicateKeyHashBlob = hashHexToBlob(duplicateKeyHash) WHERE duplicateKeyHash IS NOT NULL AND duplicateKeyHash != ''
DELETE FROM entity_fts WHERE messagingTerms GLOB :semicolon
:semicolon
*[0-9;];[0-9;]*
UPDATE entity SET masterEntityId = -1 WHERE entityType IN (:pseudo, :unrec)
:pseudo
:unrec
INSERT INTO emailMetadata     (id, key, type, sourceKey, author, creationTimestamp, updateTimestamp, indexTimestamp, lastSeenTimestamp,      tags, state, downloadState, harvestedOnBuild) SELECT e.id, e.entityKey, e.entityType, ep.sourceKey, e.author, e.creationTimestamp, e.updateTimestamp, e.indexTimestamp,     e.lastSeenTimestamp, e.tags, e.state, e.downloadState, e.harvestedOnBuild FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityType IN (:email, :textMessage)
:textMessage
DELETE FROM entityParentage WHERE childId IN (SELECT id FROM entity WHERE entityType IN (:email, :textMessage))
DELETE FROM entity WHERE entityType IN (:email, :textMessage)
INSERT INTO emailTags (key, type, tag) SELECT entityKey, entityType, tag FROM entityTags WHERE entityType IN (:email, :textMessage)
SELECT id FROM emailMetadata
INSERT INTO emailSnippets (emailId, title, content) SELECT entityId, title, content FROM snippets WHERE entityId = :rowId
DELETE FROM snippets WHERE entityId = :rowId
entity_fts_docidfix_backup
SELECT id, entityType, title, groupId, entityKey FROM entity 
DROP TABLE entity_fts_docidfix_backup
SELECT key FROM emailMetadata WHERE type = :interactionType LIMIT :batchSize
:interactionType
:batchSize
serializedInteractionKey
B16@?0@"SGKeyValueCacheFile"8
SELECT id FROM entity WHERE entityType = :entityType LIMIT :limit
SELECT id, whenRange FROM events
DELETE FROM events WHERE id IN _pas_nsarray(:ids)
DETACH DATABASE snippets
void hashHexToBlob(sqlite3_context *, int, sqlite3_value **)
-[SGDetectedAttributeML addSessionForTrainingWithSource:label:language:objective:spotlightRef:embeddedFeaturizer:]
SGDetectedAttributeML.m
[vector isKindOfClass:[PMLSparseVector class]]
B32@?0@"SGTextMessageItem"8Q16^B24
@"SGModelFeatures"8@?0
v16@?0@"SGBinaryClassificationModel"8
NEGATIVE_SAMPLE_CHOPPABLE_START
v24@?0Q8q16
v24@?0Q8Q16
B8@?0
SGModelObjective convertSGDDMatchToModelObjective(SGDataDetectorMatchType, BOOL)
Unknown model objective for SGDataDetectorMatchType = %lu and SGTextMessage
Unknown model objective for SGDataDetectorMatchType = %lu for non SGTextMessage
SGContactSharingLabel firstPersonContactSharingLabelFromMatchType(SGDataDetectorMatchType)
Contact sharing model doesn't support matchType = %lu
SGContactSharingLabel thirdPersonContactSharingLabelFromMatchType(SGDataDetectorMatchType)
SGMIMessageMissingEntityAnalyzer-processing
SGMIMessageMissingEntityAnalyzer-timeout
(null)
http
B16@?0@"SGMIWarningsDetectionRegexMatch"8
@"NSString"16@?0@"CSPerson"8
group
list
%@-0000%@
Mail Previous Recipients for omittedRecipient Queue
v24@?0@"NSArray"8@"NSError"16
found a match
did not find any match
still
{SGRe2IterAction_=B}24@?0^{?={_NSRange=QQ}*}8@"SGRe2"16
i24@?0r^v8r^v16
<RE2 %@>
SGRe2.mm
subregexps
regexpUtf8
<RE2-lazy(%i) %@>
SGRe2 *getInternal(NSData *__strong)
Could not initialize regexp: %@
coreAlternative
coreAlternative2
dataDetectorMappedAdditions
dataDetectorAdditions
\b%@\b
<SGMIWarningsDetectionRegexes>
  subject:%@
  body:%@
  dataDetectorMappedAdditions:'%@'
  dataDetectorAdditions:'%@'
@"NSString"16@?0@"NSRegularExpression"8
(?:(?:(?<!\\)\.)|\\w)(?:[*\+\?]|\{\d*\,\d*\})?|(?:\[[^\]]+\](?:[*\+\?]|\{\d*\,\d*\}))
(?<G%tu>%@)
v32@?0@"NSTextCheckingResult"8Q16^B24
G%tu
[%@]>(%@)
[PRIVATE]>(ff)
<SGMIWarningsDetectionRegex with %@ private groups>
Pattern:'%@'
<SGMIWarningsDetectors>
    attachment:%@
    recipientConservative:%@
    recipient:%@
    followUpOnOutgoingMailsQuestions:%@
    followUpOnOutgoingMailsAsks:%@
    followUpOnIncomingMails:%@
SGPlainTextContentCursor.m
message.textContent
predicate
Uninitialized SGIdentityKeyType
SGIdentityKeyTypeEmail
SGIdentityKeyTypeContact
SGIdentityKeyTypeUnrecognizedPhone
SGIdentityKeyTypeInstantMessageAddress
SGIdentityKeyTypeSocialProfile
UNKNOWN IDENTITY KEY TYPE!
SGIdentityKey.m
person.handles.count > 0
parts.count == 2
Unknown type: %@
[SGIdentityKey type:%@ content:%@]
Calling email selector on identity with no email address.
Identity key claims to be an email address but it does not have one
Calling instant message selector on identity with no instant message address.
Identity key claims to be an instant message address but it does not have one
Calling socialProfile selector on identity with no social profile.
Identity key claims to be a social profile but it does not have one
Should not ask for a unique identifier when this is neither an email nor an instance message address
Calling phone number selector on identity with no phone number.
Identity key claims to be a phone number but it does not have one
_type == SGIdentityKeyTypeContact
NSString *keyForIdentityKeyType(SGIdentityKeyType)
No key for SGIdentityKeyTypeUninitialized. Initialize it.
No key for type value %d
SGMicrodataParser.m
libxml tag names should always be lowercase during HTML parsing
libxml attribute names should always be lowercase during HTML parsing
itemprop
itemscope
itemref
itemtype
embed
iframe
track
area
link
object
meter
datetime
&#47;
com.apple.suggestions.spotlightCommander.reimportRequests
public.email-message
public.message
kMDItemTitle
kMDItemContentCreationDate
kMDItemStartDate
kMDItemSubject
job:%@:%@:%d:%d:%@
@"IPPerson"16@?0@"CSPerson"8
-[SGNaturalLanguageDissector addEnrichmentForEvents:forMessage:toEntity:]
SGNaturalLanguageDissector.m
[timeRange isValidAllDayRange]
v16@?0@"NSArray"8
@"NSString"16@?0@"IPMessage"8
v28@?0@"IPMessage"8@"NSArray"16B24
SELECT domainIdentifier FROM entityReferences WHERE bundleIdentifier = ? AND uniqueIdentifier = ? LIMIT 1
SELECT 1 FROM entityReferences WHERE bundleIdentifier = ? AND uniqueIdentifier = ? LIMIT 1
SGSqlEntityStore+Spotlight.m
Unsupported table id %lu
SELECT key, type FROM emailMetadata WHERE id IN _pas_nsindexset(:emailIndexSet)
:emailIndexSet
SELECT e.entityKey, e.entityType, ep.parentKey FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.id IN _pas_nsindexset(:nonEmailIndexSet)
:nonEmailIndexSet
entityKey
entity
entityType
parentKey
entityParentage
Email entities should not have a parent
SELECT id FROM emailMetadata WHERE key = :key
SELECT e.id FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityKey = :entityKey AND e.entityType = :entityType AND ep.parentKey
:entityType
:entityKey
:parentKey
SELECT state, tags FROM emailMetadata WHERE id = :id LIMIT 1
SELECT DISTINCT entityId FROM entityReferences WHERE entityId BETWEEN ? AND ?
v24@?0Q8^B16
@"SGEmailKey"16@?0@"SGDuplicateKey"8
v16@?0@"NSMutableOrderedSet"8
:bid
:uids
SELECT DISTINCT entityId FROM entityReferences WHERE bundleIdentifier = :bid AND uniqueIdentifier IN _pas_nsarray(:uids)
entityReferences
DELETE FROM entityReferences WHERE bundleIdentifier = :bid AND uniqueIdentifier IN _pas_nsarray(:uids)
SELECT id, entityId FROM entityReferences WHERE bundleIdentifier = ? AND ((domainIdentifier GLOB ?)
 OR (domainIdentifier GLOB ?)
Encountered repeated message ID for deletion
DELETE FROM entityReferences WHERE id IN _pas_nsindexset(:affectedReferenceIds)
:affectedReferenceIds
v24@?0@"NSArray"8^B16
SELECT id, entityId FROM entityReferences WHERE bundleIdentifier = ?
DELETE FROM entityReferences WHERE id BETWEEN ? AND ?
SELECT id, entityId FROM entityReferences WHERE bundleIdentifier is null
SELECT 1 FROM harvestQueueTombstones WHERE bundleIdentifier=:bid AND uniqueIdentifier IS NULL AND domainIdentifier IS NULL
SELECT domainIdentifier FROM harvestQueueTombstones WHERE bundleIdentifier=:bid AND uniqueIdentifier IS NULL AND domainIdentifier IN _pas_nsset(:overlappingDomainIdentifiers)
:overlappingDomainIdentifiers
domainIdentifier
harvestQueueTombstones
INSERT OR IGNORE INTO harvestQueueTombstones (bundleIdentifier, uniqueIdentifier, domainIdentifier) VALUES (:bid, NULL, :did)
:did
DELETE FROM harvestQueueTombstones WHERE bundleIdentifier=:bid AND uniqueIdentifier IS NULL AND (domainIdentifier >= :did || '.') AND (domainIdentifier < :did || '/')
uniqueIdentifiers
INSERT OR IGNORE INTO harvestQueueTombstones (bundleIdentifier, uniqueIdentifier, domainIdentifier) SELECT :bid, value, NULL FROM _pas_nsarray(:uids) WHERE NOT EXISTS (SELECT 1 FROM harvestQueueTombstones WHERE bundleIdentifier=:bid AND uniqueIdentifier=value AND domainIdentifier IS NULL)
DELETE FROM harvestQueueTombstones WHERE bundleIdentifier = :bid
INSERT OR IGNORE INTO harvestQueueTombstones (bundleIdentifier, uniqueIdentifier, domainIdentifier) VALUES (:bid,NULL,NULL)
DELETE FROM harvestQueueTombstones
         SELECT 1 FROM harvestQueueTombstones WHERE bundleIdentifier=:bid AND uniqueIdentifier IS NULL AND domainIdentifier IS NULL UNION ALL SELECT 1 FROM harvestQueueTombstones WHERE bundleIdentifier=:bid AND uniqueIdentifier=:uid    AND domainIdentifier IS NULL UNION ALL SELECT 1 FROM harvestQueueTombstones WHERE bundleIdentifier=:bid AND uniqueIdentifier IS NULL AND domainIdentifier IN _pas_nsarray(:dids)
:uid
:dids
SELECT entityId, data FROM serializedContacts
 WHERE entityId >= :minEntityId
 ORDER BY entityId LIMIT :limit
:minEntityId
SELECT entityId, data FROM serializedContacts WHERE entityId IN _pas_nsarray(:ids)
:ids
serializedContacts
data
v24@?0@"NSData"8@"NSError"16
magicUnsubscribeSuggestionSenderDenyList
magicUnsubscribeSuggestionSenderDomainDenyList
totalNumberOfEmailsProcessedForAttachmentDetection
totalNumberOfEmailsProcessedForRecipientDetection
totalNumberOfEmailsProcessedForFollowUpDetection
totalNumberOfWarningsForFollowUpWithPositiveEngagement
totalNumberOfWarningsForFollowUpWithNegativeEngagement
totalNumberOfRaisedMissingAttachmentWarning
totalNumberOfRaisedMissingRecipientWarning
numberOfPredictedAttachmentOnLargeIncomingMailsWithAttachment
numberOfLargeIncomingMailsWithAttachment
numberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachment
numberOfLargeOutgoingMailsWithAttachment
countOnLastRegexSignatureStatsLoggingAction
lastSGMINicknameProcessingDate
q24@?0@"NSString"8@"NSString"16
Invalid SQL identifier (cannot contain interior null). b64 utf16: %@
_zeroTotalIdx
CREATE TABLE %@ (domain TEXT PRIMARY KEY NOT NULL, total INT NOT NULL) WITHOUT ROWID
CREATE INDEX %@ ON %@ (domain) WHERE total IS 0
PRAGMA schema_version
v16@?0@"SGMIDomainCountingTableGuardedData"8
PRAGMA table_info(%@)
total
ALTER TABLE %@ ADD COLUMN %@ DEFAULT 0 NOT NULL
UPDATE
WHERE
IS NOT 0
UPDATE %@ SET total = total - %@ WHERE %@ IS NOT 0 RETURNING 1
ALTER TABLE %@ DROP COLUMN %@
UPDATE %@ SET total = total - %@, %@ = 0 WHERE %@ IS NOT 0 RETURNING 1
ALTER TABLE %@ RENAME COLUMN %@ TO %@
DELETE FROM %@ WHERE total IS 0
You can't commit a negative count
You can't commit counts to both a parent and its child (you can't commit 1 to both foo and foo.bar)
v32@?0@"NSString"8@"NSNumber"16^B24
SELECT 1 FROM _pas_nsdictionary(:domainsAndCounts) WHERE EXISTS (SELECT domain FROM %@ WHERE (domain >= key || '.') AND (domain < key || '/'))
:domainsAndCounts
v16@?0@"_PASSqliteStatement"8
You can't commit counts to a parent domain (this is not allowed: `commit('foo.bar', 1); commit('foo', 1);`)
SELECT 1 FROM _pas_nsset(:parentDomains) WHERE EXISTS (SELECT domain FROM %1$@ WHERE domain = value) AND NOT EXISTS (SELECT domain FROM %1$@ WHERE (domain >= value || '.') AND (domain < value || '/'))
:parentDomains
You can't convert a leaf domain to a parent domain (this is not allowed: `commit('foo', 1); commit('foo.bar', 1);`)
INSERT INTO
(domain,
, total)
SELECT key, value, value FROM _pas_nsdictionary(:domainsAndCascadedCounts) WHERE value != 0
ON CONFLICT(domain)
DO UPDATE SET
+ excluded.total, total = total + excluded.total
:domainsAndCascadedCounts
SELECT domain AS d, total AS t FROM %@ WHERE domain IN _pas_nsarray(:domains)
:domains
[d isEqual:domain]
[self _hasColumn:column]
SELECT %@ FROM %@ WHERE domain = ?
columnCount %tu is too big
SELECT %@, domain FROM %@ WHERE domain IN _pas_nsarray(:domains)
B24@?0@"NSString"8Q16
@"NSString"24@?0@"NSString"8Q16
WHEN %@ THEN %tu
SELECT domain AS d, CASE %@ ELSE -1 END AS c FROM %@ WHERE domain IN _pas_nsarray(:domains)
SELECT domain AS d, total as t FROM %@ WHERE (d >= MAX(:firstChildOfPrefix, COALESCE(:skipTo, ''), COALESCE(:greaterThan, ''))) AND (d IS NOT :greaterThan) AND (d < :firstAfterPrefix) ORDER BY d ASC%@
 LIMIT :limit
:skipTo
:greaterThan
:firstChildOfPrefix
:firstAfterPrefix
lastDot != NSNotFound
SELECT COUNT(*) AS n FROM %@ WHERE domain = :domain OR (domain >= :domain || '.' AND domain < :domain || '/')
:domain
![self _hasColumn:columnName]
[self _hasColumn:columnName]
![self _hasColumn:newColumnName]
[self _hasColumn:donorColumn]
[self _hasColumn:recipientColumn]
@"NSNumber"16@?0@"NSString"8
B24@?0@"NSString"8q16
v16@?0@"NSString"8
DELETE FROM %@ WHERE (domain >= ?1 || '.') AND (domain < ?1 || '/')
-[SGMIDomainCountingTable deleteDomainSelection:]_block_invoke
SGMIFeatureStore.m
columnCount < INT_MAX
%@=%@-_pas_block(:block,%tu)
DELETE FROM
WHERE domain = ? RETURNING
WHERE domain IN _pas_nsarray(:parentDomains)
-[SGMIDomainCountingTable deleteDomainSelection:]_block_invoke_5
index < columnCount
@"NSNumber"16@?0@"NSArray"8
:block
DELETE FROM %@
SGMIFeatureStore-LockState
v12@?0i8
v16@?0@"SGMIFeatureStoreGuardedData"8
SGMIFeatureStore-Journal
features
@"_PASSqliteDatabase"8@?0
sgmijournal
[column characterAtIndex:0] == '_'
could not scan hex feature name in %@
@"SGMITokenCounts"24@?0@"NSString"8Q16
@"NSArray"24@?0@"NSString"8@"NSArray"16
isSalientDomain || [@"r" isEqual:tokenDomainItems[1]]
kTotalNumberOfWarningsForFollowUpWithPositiveEngagement
kTotalNumberOfWarningsForFollowUpWithNegativeEngagement
INSERT INTO signatureStats (emailLanguage, regexLanguage, type, incomingMessage, signature, negativeEngagement, noEngagement, positiveEngagement, blockedWarningCount) VALUES (:emailLanguage, :regexLanguage, :type, :incomingMessage, :signature, :negativeEngagement, 0, :positiveEngagement, 0) ON CONFLICT (emailLanguage, regexLanguage, type, incomingMessage, signature) DO UPDATE SET negativeEngagement = negativeEngagement + :negativeEngagement, positiveEngagement = positiveEngagement + :positiveEngagement, noEngagement = noEngagement - 1
:emailLanguage
:regexLanguage
:type
:incomingMessage
:signature
:negativeEngagement
:positiveEngagement
INSERT INTO signatureStats (emailLanguage, regexLanguage, type, incomingMessage, signature, negativeEngagement, noEngagement, positiveEngagement, blockedWarningCount) VALUES ('*', :regexLanguage, :type, :incomingMessage, :signature, :negativeEngagement, 0, :positiveEngagement, 0) ON CONFLICT (emailLanguage, regexLanguage, type, incomingMessage, signature) DO UPDATE SET negativeEngagement = negativeEngagement + :negativeEngagement, positiveEngagement = positiveEngagement + :positiveEngagement, noEngagement = noEngagement - 1
INSERT INTO signatureStats (emailLanguage, regexLanguage, type, incomingMessage, signature, negativeEngagement, noEngagement, positiveEngagement, blockedWarningCount) VALUES (:emailLanguage, :regexLanguage, :type, :incomingMessage, :signature, :negativeEngagement, :noEngagement, :positiveEngagement, 0) ON CONFLICT (emailLanguage, regexLanguage, type, incomingMessage, signature) DO UPDATE SET negativeEngagement = negativeEngagement + :negativeEngagement, noEngagement = noEngagement + :noEngagement, positiveEngagement = positiveEngagement + :positiveEngagement
:noEngagement
INSERT INTO signatureStats (emailLanguage, regexLanguage, type, incomingMessage, signature, negativeEngagement, noEngagement, positiveEngagement, blockedWarningCount) VALUES ('*', :regexLanguage, :type, :incomingMessage, :signature, :negativeEngagement, :noEngagement, :positiveEngagement, 0) ON CONFLICT (emailLanguage, regexLanguage, type, incomingMessage, signature) DO UPDATE SET negativeEngagement = negativeEngagement + :negativeEngagement,               noEngagement = noEngagement + :noEngagement,               positiveEngagement = positiveEngagement + :positiveEngagement,               blockedWarningCount = blockedWarningCount + min(1, max(0, 1 + negativeEngagement - positiveEngagement - :positiveEngagement                                                                         - :maxAllowedNegativeUserEngagementDiffToExposeAWarning))RETURNING negativeEngagement, positiveEngagement, blockedWarningCount
:maxAllowedNegativeUserEngagementDiffToExposeAWarning
negativeEngagement
positiveEngagement
B32@?0@"SGMailIntelligenceAttachmentProperties"8Q16^B24
INSERT INTO signatureStats (emailLanguage, regexLanguage, type, incomingMessage, signature, negativeEngagement, noEngagement, positiveEngagement, blockedWarningCount) VALUES (:emailLanguage, :regexLanguage, :type, :incomingMessage, :signature, 0, 1, 0, 0) ON CONFLICT (emailLanguage, regexLanguage, type, incomingMessage, signature) DO UPDATE SET noEngagement = noEngagement + 1
INSERT INTO signatureStats (emailLanguage, regexLanguage, type, incomingMessage, signature, negativeEngagement, noEngagement, positiveEngagement, blockedWarningCount) VALUES ('*', :regexLanguage, :type, :incomingMessage, :signature, 0, 1, 0, 0) ON CONFLICT (emailLanguage, regexLanguage, type, incomingMessage, signature) DO UPDATE SET noEngagement = noEngagement + 1
SELECT SUM(negativeEngagement), SUM(noEngagement), SUM(positiveEngagement), SUM(blockedWarningCount) FROM signatureStats
I16@?0@"_PASSqliteStatement"8
SELECT key, value FROM keyValueStore
SELECT emailLanguage, regexLanguage, type, incomingMessage, signature, negativeEngagement, noEngagement, positiveEngagement, blockedWarningCount FROM signatureStats
emailLanguage
signatureStats
regexLanguage
type
incomingMessage
signature
noEngagement
blockedWarningCount
DELETE FROM signatureStats
v32@?0@"NSString"8@"SGMITokenCounts"16^B24
v24@?0@"NSString"8@"NSDictionary"16
v32@?0@"NSString"8@"NSString"16^B24
counts
numberOfTokenEntries
salientCount
regularCount
overallCounts
lastUpdates
en_US
MMM,dd
v32@?0@"NSString"8@"NSArray"16^B24
@"NSDictionary"16@?0@"NSString"8
salientTokensDistribution
regularTokensDistribution
-[SGMIFeatureStore _purgeTokensWhichLastUpdateWasBefore:shouldContinue:usingDatabase:]_block_invoke
idx != NSNotFound
B16@?0@"NSString"8
v32@?0@"NSNumber"8@"NSMutableSet"16^B24
v32@?0@"NSNumber"8@"NSNumber"16^B24
DELETE FROM keyValueStore
migration_createFeaturesTable
migration_createKVTable
migration_createFollowUpTable
DELETE FROM followUpTable
ALTER TABLE followUpTable ADD COLUMN messageId TEXT
DROP TABLE followUpTable
migration_createFollowUpTableWithAppleMailMessageIdAsPrimaryKey
CREATE TABLE IF NOT EXISTS mailsPendingFollowUpProcessing (messageId TEXT NOT NULL PRIMARY KEY,spotlightIdentifier TEXT NOT NULL,date FLOAT)
migration_createSignatureStatsTable
ALTER TABLE followUpTable ADD COLUMN dateStored FLOAT
DROP TABLE mailsPendingFollowUpProcessing
CREATE TABLE IF NOT EXISTS nicknameMapping (nickname TEXT NOT NULL,email TEXT NOT NULL,count INTEGER NOT NULL,dateOfLastMatch FLOAT NOT NULL,PRIMARY KEY (nickname, email)) WITHOUT ROWID
DELETE FROM signatureStats WHERE type = %d
CREATE TABLE keyValueStore (key TEXT PRIMARY KEY NOT NULL, value) WITHOUT ROWID
CREATE UNIQUE INDEX keyValueStoreIdx ON keyValueStore(key)
CREATE TABLE IF NOT EXISTS followUpTable (id INTEGER PRIMARY KEY AUTOINCREMENT,appleMailMessageId TEXT NOT NULL,snippet TEXT,core TEXT,score DOUBLE,startDate TEXT NOT NULL,startDateCore TEXT,endDate TEXT NOT NULL,endDateCore TEXT,alreadyReturned BOOLEAN DEFAULT false)
CREATE TABLE IF NOT EXISTS followUpTable (appleMailMessageId TEXT NOT NULL PRIMARY KEY,messageId TEXT NOT NULL,snippet TEXT,core TEXT,score DOUBLE,startDate TEXT NOT NULL,startDateCore TEXT,endDate TEXT NOT NULL,endDateCore TEXT,alreadyReturned BOOLEAN DEFAULT false)
CREATE TABLE IF NOT EXISTS signatureStats (emailLanguage TEXT NOT NULL,regexLanguage TEXT NOT NULL,type INTEGER NOT NULL,incomingMessage BOOLEAN NOT NULL,signature TEXT NOT NULL,negativeEngagement INTEGER NOT NULL,noEngagement INTEGER NOT NULL,positiveEngagement INTEGER NOT NULL,blockedWarningCount INTEGER NOT NULL)
CREATE UNIQUE INDEX IF NOT EXISTS signatureStatsIdx ON signatureStats(emailLanguage, regexLanguage, type, incomingMessage, signature)
SELECT email FROM nicknameMapping WHERE nickname = :nickname
:nickname
INSERT INTO nicknameMapping (nickname, email, count, dateOfLastMatch) VALUES (:nickname, :email, 1, :dateOfLastMatch) ON CONFLICT (nickname, email) DO UPDATE SET count = count + 1, dateOfLastMatch = max(dateOfLastMatch, :dateOfLastMatch)
:email
:dateOfLastMatch
DELETE FROM nicknameMapping WHERE dateOfLastMatch < :oldestAcceptableDate
:oldestAcceptableDate
DELETE FROM nicknameMapping
INSERT OR REPLACE INTO keyValueStore (key, value) VALUES (:key, :value)
:key
DELETE FROM keyValueStore WHERE key = :key
SELECT value FROM keyValueStore WHERE key = :key LIMIT 1
:value
@"NSNumber"16@?0@"_PASSqliteStatement"8
INSERT INTO keyValueStore (key, value) VALUES (:key, :incrementValue) ON CONFLICT (key) DO UPDATE SET value = value + :incrementValue
:incrementValue
@"NSString"16@?0@"_PASSqliteStatement"8
SGDuplicateKey.m
%@_%ld_%ld
self
%li/%@
%@ not supported by %@
![SGDuplicateKey serializationPassesBasicScrutiny:serialized]
%llu
<SGDuplicateKey entityType:%@ entityKey:%@ parentKey:%@>
[SGCuratedEventKey isSupportedEntityType:_entityType]
[SGContactDetailKey isSupportedEntityType:_entityType]
[SGPseudoContactKey isSupportedEntityType:_entityType]
SGEntityTypeIsContact(_entityType)
[SGEmailKey isSupportedEntityType:_entityType]
[SGTextMessageKey isSupportedEntityType:_entityType]
[SGWebPageKey isSupportedEntityType:_entityType]
[SGInteractionKey isSupportedEntityType:_entityType]
[SGPseudoEventKey isSupportedEntityType:_entityType]
[SGPseudoReminderKey isSupportedEntityType:_entityType]
[SGDeliveryKey isSupportedEntityType:_entityType]
SGMailClientUtilErrorDomain
@"SGMailClientUtil"8@?0
message:%@
v24@?0@"EMContentRepresentation"8@"NSError"16
v40@?0r^v8{_NSRange=QQ}16^B32
+[SGMailClientUtil convertLineEndingsToNetwork:]_block_invoke
SGMailClientUtil.m
insertionsNeeded
SignificantPostalAddress
ProactiveHarvesting
BiomeHarvesting
Found in %@ with %@
Chatting with %@
Found in %@
Checkin Action %@
checkinDate
checkoutDate
v32@?0@"_PASTuple2"8@"SGContact"16^B24
@"NSArray"32@?0@"NSArray"8@"NSArray"16@?<@@?@>24
@24@?0@8@16
@"NSString<SGNormalizedAddress>"16@?0@8
@"NSArray"24@?0@"NSArray"8@"NSArray"16
@"SGDateComponents"24@?0@"SGDateComponents"8@"SGDateComponents"16
B24@?0@"SGPostalAddress"8@"SGPostalAddress"16
@"SGPostalAddress"16@?0@"SGPostalAddress"8
@"SGName"24@?0@"SGName"8@"SGName"16
remindersExtractionStatus
daysUntilDue
dueLocationType
dueLocationTrigger
defaultDueDate
success
no_proposal
no_confirmation
no_trigger
no_title
missing_entities_in_model_output
SELECT key FROM emailMetadata WHERE state IN (:lost, :undisplayable) ORDER BY lastSeenTimestamp asc
:lost
:undisplayable
Invalid state
state can't be SGMailMessageUnset
UPDATE emailMetadata SET state = :undisplayablyLost WHERE key IN _pas_nsarray(:serializedKeys)
:undisplayablyLost
:serializedKeys
UPDATE emailMetadata SET state = :undisplayablyLost WHERE unlikely(state = :lost) AND key in _pas_nsarray(:keys) AND lastSeenTimestamp < :lastSeenCutoff
:keys
:lastSeenCutoff
UPDATE emailMetadata SET state = :lost, lastSeenTimestamp = :now WHERE likely(state NOT IN (:lost, :undisplayablyLost)) AND key IN _pas_nsarray(:keys)
:now
SELECT sourceKey, COUNT(*) FROM emailMetadata WHERE unlikely(state = :lost) GROUP BY sourceKey
emailMetadata
SELECT key FROM emailMetadata WHERE unlikely(state = :lost) AND sourceKey = :sourceKey AND NOT (tagsHaveEscapedTag(tags, :eventTag) OR tagsHaveEscapedTag(tags, :contactTag)) ORDER BY lastSeenTimestamp ASC LIMIT :limit
:eventTag
:contactTag
SELECT key FROM emailMetadata WHERE unlikely(state = :lost) AND sourceKey = :sourceKey AND tagsHaveEscapedTag(tags, :contactTag) ORDER BY lastSeenTimestamp ASC LIMIT :limit
SELECT key FROM emailMetadata WHERE unlikely(state = :lost) AND sourceKey = :sourceKey AND tagsHaveEscapedTag(tags, :eventTag) ORDER BY lastSeenTimestamp ASC LIMIT :limit
UPDATE emailMetadata SET state = :state, lastSeenTimestamp = :lastSeen WHERE unlikely(state = :undisplayable) AND key IN _pas_nsarray(:keys)
:lastSeen
UPDATE emailMetadata SET state = :state, lastSeenTimestamp = :lastSeen WHERE unlikely(state != :normal) AND key IN _pas_nsarray(:keys)
:normal
@16@?0@"SGDuplicateKey"8
SELECT key FROM emailMetadata WHERE state NOT IN (:deleted, :undisplayable) AND key IN _pas_nsarray(:keys)
:deleted
UPDATE events SET entityId = :entityId, duplicateKey = :duplicateKey, sourceKey = :sourceKey, title = :title, content = :content, creationTimestamp = :creationTimestamp, lastModifiedTimestamp = :lastModifiedTimestamp, whenRange = :whenRange, structuredData = :structuredData, state = :state, curated = :curated WHERE id = :primaryKey
DELETE FROM eventTags WHERE eventId = :primaryKey
DELETE FROM locations WHERE eventId = :primaryKey
INSERT INTO events (entityId, duplicateKey, sourceKey, title, content, creationTimestamp, lastModifiedTimestamp, whenRange, structuredData, state, curated) VALUES (:entityId, :duplicateKey, :sourceKey, :title, :content, :creationTimestamp, :lastModifiedTimestamp, :whenRange, :structuredData, :state, :curated)
:entityId
:duplicateKey
:sourceKey
:title
:content
:creationTimestamp
:lastModifiedTimestamp
:whenRange
:structuredData
:state
:curated
INSERT INTO eventTags (eventId, name) VALUES (:eventId, :name)
:eventId
SELECT id FROM locations WHERE eventId = :primaryKey
{_PASDBIterAction_=B}16@?0@"_PASSqliteStatement"8
SELECT name FROM eventTags WHERE eventId = :primaryKey
SELECT entityId, duplicateKey, sourceKey, title, content, creationTimestamp, lastModifiedTimestamp, whenRange, structuredData, state, curated FROM events WHERE id = :primaryKey
entityId
events
duplicateKey
sourceKey
title
content
creationTimestamp
lastModifiedTimestamp
whenRange
structuredData
state
curated
SELECT id FROM events WHERE duplicateKey = :duplicateKey
SELECT id FROM events WHERE entityId = :entityId
EmptyStringWalker::ShortVisit called
CREATE TABLE IF NOT EXISTS entity (id INTEGER PRIMARY KEY AUTOINCREMENT,entityKey TEXT NOT NULL,entityType INTEGER NOT NULL,author TEXT,content TEXT,contentRangeOfInterest TEXT,title TEXT COLLATE NOCASE,timeRangeStart REAL,timeRangeEnd REAL,floatingRange INTEGER,timeRangeStartUTCOffsetSeconds INTEGER,timeRangeEndUTCOffsetSeconds INTEGER,creationTimestamp REAL,updateTimestamp REAL,indexTimestamp REAL,lastSeenTimestamp REAL,tags TEXT,structuredData BLOB,quality REAL,locations BLOB,masterEntityId INTEGER DEFAULT -1,groupId INTEGER DEFAULT -1,state INTEGER DEFAULT 0,contentHash TEXT,downloadState INTEGER DEFAULT 0)
CREATE UNIQUE INDEX IF NOT EXISTS entityIdIdx on entity(id)
CREATE INDEX IF NOT EXISTS entityMasterEntityIdIdx on entity(masterEntityId)
CREATE INDEX IF NOT EXISTS entityStateIdx on entity(state)
CREATE VIRTUAL TABLE IF NOT EXISTS entity_fts USING fts4(id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER,messagingTerms TEXT COLLATE NOCASE,ftsTerms TEXT COLLATE NOCASE)
CREATE TABLE IF NOT EXISTS entityTags (tag TEXT,entityKey TEXT,entityType INTEGER,parentKey TEXT,duplicateKeyHash TEXT NOT NULL)
CREATE INDEX IF NOT EXISTS ix_entityTags_tag ON entityTags(tag)
CREATE INDEX IF NOT EXISTS ix_entityTags_dupKey ON entityTags(entityKey, entityType, parentKey)
CREATE TABLE IF NOT EXISTS confirmedFieldValues (entityId INTEGER PRIMARY KEY,fieldValues BLOB,maybeChanged BOOLEAN)
CREATE TABLE IF NOT EXISTS identityPerson (    identityPersonId INTEGER PRIMARY KEY AUTOINCREMENT,    middlename VARCHAR(256),    surname VARCHAR(256),    fullname TEXT,    nameSketches TEXT NOT NULL,    phones TEXT NOT NULL,    email TEXT NOT NULL,    recordId INTEGER NOT NULL,    curated BOOLEAN NOT NULL)
DROP TABLE IF EXISTS identityPhones
CREATE TEMP TABLE IF NOT EXISTS identityPhones (    recordId INTEGER NOT NULL,    phone TEXT NOT NULL)
CREATE INDEX IF NOT EXISTS ix_identityPerson_surname ON identityPerson(surname)
CREATE INDEX IF NOT EXISTS ix_identityPerson_middlename ON identityPerson(middlename)
CREATE INDEX IF NOT EXISTS ix_identityPerson_email_nameless ON identityPerson(email)
CREATE UNIQUE INDEX IF NOT EXISTS ix_identityPerson_recordId ON identityPerson(recordId)
CREATE INDEX IF NOT EXISTS ix_identityPhones_recordId ON identityPhones(recordId)
CREATE INDEX IF NOT EXISTS ix_identityPhones_phone ON identityPhones(phone)
CREATE TABLE IF NOT EXISTS identityLink (    recordId1 INTEGER NOT NULL,    recordId2 INTEGER NOT NULL,    type INT NOT NULL,    strength REAL NOT NULL,    PRIMARY KEY (recordId1, recordId2, type))
CREATE INDEX IF NOT EXISTS ix_identityLink_recordId2 ON identityLink(recordId2)
CREATE TABLE IF NOT EXISTS identityInterdict (a TEXT NOT NULL, b TEXT NOT NULL)
CREATE TABLE IF NOT EXISTS entityReferences (id INTEGER PRIMARY KEY AUTOINCREMENT,bundleIdentifier TEXT,uniqueIdentifier TEXT,entityId INTEGER,domainIdentifier TEXT)
CREATE UNIQUE INDEX IF NOT EXISTS entityReferencesUniqueIdx ON entityReferences(bundleIdentifier, uniqueIdentifier)
CREATE INDEX IF NOT EXISTS entityReferencesDomainIdx ON entityReferences(bundleIdentifier, domainIdentifier)
CREATE INDEX IF NOT EXISTS entityReferencesEntityIdIdx ON entityReferences(entityId)
CREATE INDEX IF NOT EXISTS entityDownloadStateIdx on entity(downloadState)
migration_AddAuthorColumnIfMissing
migration_AddNewishTablesIfMissing
migration_FixUpColumnsForDevicesWhoMissedTheImprovedLegacyMigration
DROP TABLE IF EXISTS cnContactsToSgContacts
CREATE TABLE cnContactsToSgContacts (id INTEGER PRIMARY KEY AUTOINCREMENT,cnContactIdentifier TEXT,maxEntityId INTEGER,entityId INTEGER)
CREATE INDEX IF NOT EXISTS cnContactsToSgContactsEntityIdx ON cnContactsToSgContacts(entityId)
CREATE UNIQUE INDEX IF NOT EXISTS cnContactsToSgContactsUniqueJoin ON cnContactsToSgContacts(cnContactIdentifier, entityId)
CREATE TABLE IF NOT EXISTS cnContactsToSgContactsCacheJobs (id INTEGER PRIMARY KEY AUTOINCREMENT,batch TEXT)
CREATE TABLE IF NOT EXISTS harvestQueueTombstones (bundleIdentifier TEXT,uniqueIdentifier TEXT,domainIdentifier TEXT)
CREATE TABLE IF NOT EXISTS identityPhones (    recordId INTEGER NOT NULL,    phone TEXT NOT NULL)
CREATE INDEX ix_identityPhones_recordId ON identityPhones(recordId)
CREATE INDEX ix_identityPhones_phone ON identityPhones(phone)
CREATE INDEX IF NOT EXISTS entityDupKeyIdx ON entity(entityKey, entityType);
DROP INDEX IF EXISTS entityDupKeyIdx
CREATE INDEX IF NOT EXISTS entityDupKeyIdx ON entity(entityType, entityKey)
CREATE TABLE IF NOT EXISTS serializedContactCacheJobs (id INTEGER PRIMARY KEY AUTOINCREMENT,batch TEXT)
CREATE TABLE IF NOT EXISTS statsCounters (key TEXT NOT NULL,value REAL NOT NULL)
CREATE UNIQUE INDEX ix_statsCounters_key ON statsCounters(key)
CREATE INDEX IF NOT EXISTS entityDupKeyIdx ON entity(entityKey, entityType)
CREATE INDEX IF NOT EXISTS entityTypeIdx ON entity(entityType)
migration_RecreateFTSTableWithITS
INSERT INTO entity_fts(entity_fts) VALUES ('automerge=8')
migration_DeduplicateIdentityPhones
CREATE UNIQUE INDEX ix_identityPhones_unique ON identityPhones(recordId, phone)
DROP TABLE IF EXISTS serializedContactCacheJobs
CREATE TABLE IF NOT EXISTS serializedContactCacheJobs (id INTEGER PRIMARY KEY AUTOINCREMENT)
DROP INDEX IF EXISTS entityParentageParentKeyIdx
CREATE INDEX entityParentageParentKeyChildIdIdx on entityParentage(parentKey, childId)
CREATE UNIQUE INDEX IF NOT EXISTS ix_harvestQueueTombstones_unique ON harvestQueueTombstones(bundleIdentifier, uniqueIdentifier, domainIdentifier)
ALTER TABLE entity ADD COLUMN contentHashBlob BLOB
ALTER TABLE entityTags ADD COLUMN duplicateKeyHashBlob BLOB
ALTER TABLE entityParentage ADD COLUMN duplicateKeyHashBlob BLOB
migration_ConvertContentAndDupKeyHashesToBlobs
CREATE UNIQUE INDEX entityContentHashBlobIdx ON entity(contentHashBlob)
CREATE UNIQUE INDEX entityParentageDuplicateKeyHashBlobIdx on entityParentage(duplicateKeyHashBlob, extractionType)
CREATE INDEX ix_entityTags_dupKeyHashBlob ON entityTags(duplicateKeyHashBlob)
DROP INDEX entityContentHashIdx
DROP INDEX entityParentageDuplicateKeyHashIdx
DROP INDEX ix_entityTags_dupKeyHash
CREATE TABLE IF NOT EXISTS metadata (key TEXT NOT NULL, value)
CREATE UNIQUE INDEX metadataKeyIndex ON metadata(key)
INSERT INTO metadata (key, value) VALUES ('rowIdWhenContactsEnabled', 0)
INSERT INTO metadata (key, value) VALUES ('rowIdWhenEventsEnabled', 0)
CREATE TABLE IF NOT EXISTS messageTracer (domain TEXT NOT NULL,key TEXT NOT NULL,value INTEGER NOT NULL)
CREATE UNIQUE INDEX IF NOT EXISTS messageTracerIdx ON messageTracer(domain, key)
migration_DropMessagingTermsWithPhoneExtensions
DELETE FROM entityReferences WHERE entityId = -1
migration_RemoveEntityReferencesWithoutBundleIdentifier
CREATE INDEX IF NOT EXISTS ix_entityTags_parentKey ON entityTags(parentKey)
ALTER TABLE entity ADD COLUMN pendingGeocode BOOLEAN DEFAULT false
CREATE INDEX entityPendingGeocodeIdx ON entity(pendingGeocode)
ALTER TABLE entity ADD COLUMN harvestedOnBuild TEXT
migration_FixupMergeGroups
UPDATE entity SET pendingGeocode=CAST(pendingGeocode AS INTEGER)
DROP INDEX entityPendingGeocodeIdx
CREATE INDEX entityPendingGeocodeIdx ON entity(pendingGeocode) WHERE pendingGeocode=1
DELETE FROM entity WHERE id NOT IN (SELECT childId FROM entityParentage)
DELETE FROM entity_fts WHERE entityId NOT IN (SELECT childId FROM entityParentage)
DELETE FROM identityPerson WHERE recordId NOT IN (SELECT childId FROM entityParentage)
DELETE FROM identityLink WHERE recordId1 NOT IN (SELECT childId FROM entityParentage) OR recordId2 NOT IN (SELECT childId FROM entityParentage)
DELETE FROM identityPhones WHERE recordId NOT IN (SELECT childId FROM entityParentage)
DELETE FROM entityTags WHERE duplicateKeyHashBlob NOT IN (SELECT duplicateKeyHashBlob FROM entityParentage)
CREATE TABLE IF NOT EXISTS identityBlobAnalysisJobs (id INTEGER PRIMARY KEY AUTOINCREMENT,mergeBlob BLOB)
CREATE TABLE identityInterdictNext (a TEXT NOT NULL, b TEXT NOT NULL)
ALTER TABLE identityPerson ADD COLUMN imAddresses TEXT NOT NULL DEFAULT ""
CREATE TABLE IF NOT EXISTS emailMetadata (id INTEGER PRIMARY KEY AUTOINCREMENT,key TEXT NOT NULL,type INTEGER NOT NULL,sourceKey TEXT,author TEXT,creationTimestamp REAL,updateTimestamp REAL,indexTimestamp REAL,lastSeenTimestamp REAL,tags TEXT,state INTEGER DEFAULT 0,downloadState INTEGER DEFAULT 0,harvestedOnBuild TEXT)
CREATE UNIQUE INDEX IF NOT EXISTS ix_emailMetadata_key ON emailMetadata(key)
CREATE INDEX IF NOT EXISTS ix_emailMetadata_state ON emailMetadata(state)
CREATE INDEX IF NOT EXISTS ix_emailMetadata_downloadState ON emailMetadata(downloadState)
CREATE TABLE IF NOT EXISTS emailTags (key TEXT NOT NULL,type INTEGER NOT NULL,tag TEXT NOT NULL)
CREATE INDEX IF NOT EXISTS ix_emailTags_tag ON emailTags(tag)
migration_separateMessageEntities
migration_rebuildFTSWithDetailEntityIDDocIDs
CREATE INDEX IF NOT EXISTS ix_emailTags_key ON emailTags(key)
migration_deleteInteractions
CREATE TABLE IF NOT EXISTS reimportRequests (id INTEGER PRIMARY KEY AUTOINCREMENT,plugin TEXT NOT NULL,creationTimestamp REAL,queryTimestamp REAL,personHandle TEXT,startDateTimestamp REAL,endDateTimestamp REAL,executionTimestamp REAL)
CREATE INDEX IF NOT EXISTS reimportRequestsQueryIdx ON reimportRequests(queryTimestamp)
CREATE INDEX IF NOT EXISTS reimportRequestsExecutionIdx ON reimportRequests(executionTimestamp)
CREATE TABLE IF NOT EXISTS reimportItems (id INTEGER PRIMARY KEY AUTOINCREMENT,reimportRequestId INTEGER NOT NULL,bundleId TEXT NOT NULL,uniqueId TEXT NOT NULL,seenByReceiverTimestamp REAL)
CREATE INDEX IF NOT EXISTS reimportItemsRequestIdx ON reimportItems(reimportRequestId)
CREATE INDEX IF NOT EXISTS reimportItemsSeenByReceiverIdx ON reimportItems(seenByReceiverTimestamp)
CREATE INDEX IF NOT EXISTS reimportItemsBundleUniqueIdx ON reimportItems(bundleId, uniqueId)
ALTER TABLE identityPerson ADD COLUMN isSent BOOLEAN DEFAULT false
migration_reimport
migration_deleteEmergencyExtractions
CREATE TABLE IF NOT EXISTS urls (id INTEGER PRIMARY KEY AUTOINCREMENT,url TEXT NOT NULL,received_from_handle TEXT,bundle_id TEXT NOT NULL,group_id TEXT,doc_id TEXT NOT NULL,seconds_from_1970 REAL NOT NULL)
CREATE UNIQUE INDEX IF NOT EXISTS ix_urls_url ON urls(url)
CREATE INDEX IF NOT EXISTS ix_urls_seconds_from_1970 ON urls(seconds_from_1970)
CREATE INDEX IF NOT EXISTS ix_urls_bundle_id_group_id ON urls(bundle_id, group_id)
ALTER TABLE entityParentage ADD COLUMN modelVersion INTEGER NOT NULL DEFAULT 0
ALTER TABLE entityParentage ADD COLUMN modelConfidence REAL NOT NULL DEFAULT 0.5
ALTER TABLE urls ADD COLUMN title TEXT
ALTER TABLE urls ADD COLUMN document_title TEXT
ALTER TABLE urls ADD COLUMN document_seconds_from_1970 REAL
ALTER TABLE urls ADD COLUMN document_time_interval REAL NOT NULL DEFAULT 0
ALTER TABLE entity ADD COLUMN curatedDupe BOOLEAN DEFAULT false
migration_deleteSerializedContacts
UPDATE entity SET title = substr(title,1,5) WHERE entityType = 20 AND length(title) = 10 AND substr(title,7,4) IN ('2018','2019')
ALTER TABLE urls ADD COLUMN flags INTEGER NOT NULL DEFAULT 0
migration_deleteInternalExtractionsFromML
CREATE TABLE IF NOT EXISTS locations (id INTEGER PRIMARY KEY,locationType INTEGER NOT NULL,label TEXT NOT NULL,address TEXT NOT NULL,airportCode TEXT NOT NULL,latitude REAL NOT NULL,longitude REAL NOT NULL,accuracy REAL NOT NULL,quality REAL NOT NULL,handle BLOB)
DROP TABLE IF EXISTS reminders
CREATE TABLE IF NOT EXISTS reminders (id INTEGER PRIMARY KEY,entityId INTEGER NOT NULL,duplicateKey TEXT NOT NULL,sourceKey TEXT,title text NOT NULL,dueDateComponents TEXT,dueLocationId INTEGER,dueLocationType INTEGER NOT NULL,dueLocationTrigger INTEGER NOT NULL,sourceUrl TEXT NOT NULL,creationDate num NOT NULL,opaqueKey TEXT,uniqueKey TEXT,contactIdentifier TEXT,reminderStatus NUM NOT NULL,FOREIGN KEY(entityId) REFERENCES entity(id) ON DELETE NO ACTION,FOREIGN KEY(dueLocationId) REFERENCES locations(id) ON DELETE SET NULL)
CREATE INDEX IF NOT EXISTS reminders_duplicateKey_idx ON reminders(duplicateKey)
ALTER TABLE emailMetadata ADD COLUMN pendingVerification INTEGER DEFAULT 0
CREATE INDEX pendingVerificationIdx ON emailMetadata(pendingVerification) WHERE pendingVerification=1
DROP TABLE IF EXISTS locations
CREATE TABLE IF NOT EXISTS locations (id INTEGER PRIMARY KEY AUTOINCREMENT,locationType INTEGER NOT NULL,label TEXT,address TEXT,airportCode TEXT,latitude REAL NOT NULL,longitude REAL NOT NULL,accuracy REAL NOT NULL,quality REAL NOT NULL,handle BLOB)
CREATE TABLE IF NOT EXISTS reminders (id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER NOT NULL,duplicateKey TEXT NOT NULL,sourceKey TEXT,title text NOT NULL,dueDateComponents TEXT,dueLocationId INTEGER,dueLocationType INTEGER NOT NULL,dueLocationTrigger INTEGER NOT NULL,sourceUrl TEXT NOT NULL,creationDate num NOT NULL,opaqueKey TEXT,uniqueKey TEXT,contactIdentifier TEXT,reminderStatus NUM NOT NULL,FOREIGN KEY(entityId) REFERENCES entity(id) ON DELETE NO ACTION,FOREIGN KEY(dueLocationId) REFERENCES locations(id) ON DELETE SET NULL)
CREATE INDEX IF NOT EXISTS reminders_entityId_idx ON reminders(entityId)
migration_newRemindersSchema
DROP TABLE IF EXISTS extractionInfos
DROP TABLE IF EXISTS contactDetails
CREATE TABLE IF NOT EXISTS extractionInfos (id INTEGER PRIMARY KEY AUTOINCREMENT,extractionType INTEGER NOT NULL,modelVersion NUM NOT NULL,confidence NUM NOT NULL)
CREATE TABLE IF NOT EXISTS contactDetails (id INTEGER PRIMARY KEY AUTOINCREMENT,value TEXT NOT NULL,type INTEGER NOT NULL,label TEXT,entityId INTEGER NOT NULL,duplicateKey TEXT NOT NULL,sourceKey TEXT,context TEXT,extractionInfoId INTEGER NOT NULL,FOREIGN KEY(entityId) REFERENCES entity(id) ON DELETE NO ACTION,FOREIGN KEY(extractionInfoId) REFERENCES extractionInfos(id) ON DELETE RESTRICT)
CREATE INDEX IF NOT EXISTS contactDetails_duplicateKey_idx ON contactDetails(duplicateKey)
CREATE INDEX IF NOT EXISTS contactDetails_entityId_idx ON contactDetails(entityId)
migration_newContactDetailsSchema
CREATE TABLE IF NOT EXISTS postMigrationTasks (task TEXT NOT NULL)
INSERT INTO postMigrationTasks (task) VALUES ('migration_deleteLegacyMessages')
CREATE TABLE IF NOT EXISTS locations_alterColumnsNullable (id INTEGER PRIMARY KEY AUTOINCREMENT,locationType INTEGER NOT NULL,label TEXT,address TEXT,airportCode TEXT,latitude REAL,longitude REAL,accuracy REAL,quality REAL,handle BLOB)
INSERT INTO locations_alterColumnsNullable SELECT * FROM locations
DROP TABLE locations
ALTER TABLE locations_alterColumnsNullable RENAME TO locations
CREATE TABLE IF NOT EXISTS events (id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER NOT NULL,duplicateKey TEXT NOT NULL,sourceKey TEXT,title TEXT,content TEXT,creationTimestamp INTEGER,lastModifiedTimestamp INTEGER,whenRange TEXT,structuredData BLOB,state INTEGER,curated INTEGER)
CREATE TABLE IF NOT EXISTS eventTags (id INTEGER PRIMARY KEY AUTOINCREMENT,eventId INTEGER NOT NULL,name TEXT,FOREIGN KEY(eventId) REFERENCES event(id) ON DELETE RESTRICT)
ALTER TABLE locations ADD eventId INTEGER
CREATE INDEX IF NOT EXISTS events_duplicateKey_idx ON events(duplicateKey)
CREATE INDEX IF NOT EXISTS events_entityId_idx ON events(entityId)
CREATE INDEX IF NOT EXISTS eventTags_eventId_idx ON eventTags(eventId)
migration_newEventsSchema
CREATE TABLE IF NOT EXISTS mailIntelligence_featureReferenceMapping (id INTEGER PRIMARY KEY AUTOINCREMENT,sourceType INT NOT NULL,externalReference TEXT)
CREATE TABLE IF NOT EXISTS mailIntelligence_features (id INTEGER PRIMARY KEY AUTOINCREMENT,featureMappingId INT NOT NULL,featureName INT NOT NULL,stringValue TEXT,stringArrayValue TEXT,doubleValue NUM,doubleArrayValue TEXT,FOREIGN KEY(featureMappingId) REFERENCES mailIntelligence_featureReferenceMapping(id) ON DELETE CASCADE)
CREATE INDEX IF NOT EXISTS mailIntelligence_featureReferenceMapping_externalReference_idx ON mailIntelligence_featureReferenceMapping(externalReference)
CREATE INDEX IF NOT EXISTS mailIntelligence_features_featureMappingId_idx ON mailIntelligence_features(featureMappingId)
CREATE TABLE IF NOT EXISTS mailIntelligence_naiveBayesModelsGlobalCounts (id INTEGER PRIMARY KEY AUTOINCREMENT,featureName INTEGER NOT NULL,salientCount INTEGER NOT NULL,regularCount INTEGER NOT NULL,salientUnigramTokensCount INTEGER NOT NULL,regularUnigramTokensCount INTEGER NOT NULL,salientBigramTokensCount INTEGER NOT NULL,regularBigramTokensCount INTEGER NOT NULL,UNIQUE(featureName))
CREATE INDEX IF NOT EXISTS mailIntelligence_naiveBayesModelsGlobalCounts_featureName_idx ON mailIntelligence_naiveBayesModelsGlobalCounts(featureName)
CREATE TABLE IF NOT EXISTS mailIntelligence_naiveBayesModelsUnigramTokens (id INTEGER PRIMARY KEY AUTOINCREMENT,featureName INTEGER NOT NULL,token TEXT NOT NULL,salientCount INTEGER NOT NULL,regularCount INTEGER NOT NULL)
CREATE INDEX IF NOT EXISTS mailIntelligence_naiveBayesModelsUnigramTokens_featureName_idx ON mailIntelligence_naiveBayesModelsUnigramTokens(featureName)
CREATE TABLE IF NOT EXISTS mailIntelligence_naiveBayesModelsBigramTokens (id INTEGER PRIMARY KEY AUTOINCREMENT,featureName INTEGER NOT NULL,token TEXT NOT NULL,salientCount INTEGER NOT NULL,regularCount INTEGER NOT NULL)
CREATE INDEX IF NOT EXISTS mailIntelligence_naiveBayesModelsBigramTokens_featureName_idx ON mailIntelligence_naiveBayesModelsBigramTokens(featureName)
CREATE TABLE IF NOT EXISTS mailIntelligence_biomeProgress (id INTEGER PRIMARY KEY AUTOINCREMENT,streamName TEXT NOT NULL,progressTimestamp NUM NOT NULL)
CREATE TABLE IF NOT EXISTS mailIntelligence_saliency (id INTEGER PRIMARY KEY AUTOINCREMENT,creationTimestamp REAL NOT NULL,messageId TEXT NOT NULL,score NUM NOT NULL)
DROP INDEX ix_urls_url
CREATE UNIQUE INDEX IF NOT EXISTS ix_urls_url_doc ON urls(url, doc_id, document_seconds_from_1970)
DROP TABLE IF EXISTS mailIntelligence_naiveBayesModelsUnigramTokens
DROP TABLE IF EXISTS mailIntelligence_naiveBayesModelsBigramTokens
CREATE TABLE IF NOT EXISTS mailIntelligence_naiveBayesModelsTokens (id INTEGER PRIMARY KEY AUTOINCREMENT,featureName INTEGER NOT NULL,token TEXT NOT NULL,is_unigram BOOLEAN NOT NULL,salientCount INTEGER NOT NULL,regularCount INTEGER NOT NULL)
CREATE UNIQUE INDEX IF NOT EXISTS mailIntelligence_naiveBayesModelsTokens_featureName_token_unigram_idx ON mailIntelligence_naiveBayesModelsTokens(featureName, token, is_unigram)
ALTER TABLE mailIntelligence_saliency ADD COLUMN mailboxId TEXT
migration_deleteNilDateEvents
ALTER TABLE mailIntelligence_saliency ADD COLUMN is_salient BOOLEAN
ALTER TABLE mailIntelligence_saliency ADD COLUMN is_gte_salient INTEGER
ALTER TABLE mailIntelligence_saliency ADD COLUMN is_counted BOOLEAN
ALTER TABLE mailIntelligence_naiveBayesModelsTokens ADD COLUMN lastUpdateTimestamp REAL NOT NULL
CREATE INDEX IF NOT EXISTS mailintelligence_saliency_covering_idx ON mailintelligence_saliency(mailboxId, creationTimestamp DESC, score, is_salient, messageId)
CREATE TABLE IF NOT EXISTS mailIntelligence_spotlightMapping (id INTEGER PRIMARY KEY AUTOINCREMENT,messageId TEXT NOT NULL,uniqueIdentifier TEXT NOT NULL,bundleIdentifier TEXT NOT NULL,terminatedDomainIdentifier TEXT)
CREATE UNIQUE INDEX IF NOT EXISTS mailintelligence_spotlightMapping_bundleIdentifier_uniqueIdentifier_idx ON mailIntelligence_spotlightMapping(bundleIdentifier, uniqueIdentifier)
CREATE INDEX IF NOT EXISTS mailintelligence_spotlightMapping_bundleIdentifier_terminatedDomainIdentifier_idx ON mailIntelligence_spotlightMapping(bundleIdentifier, terminatedDomainIdentifier)
DROP TABLE IF EXISTS identityPerson
CREATE TABLE IF NOT EXISTS identityPerson (    recordId INTEGER PRIMARY KEY,    middlename VARCHAR(256),    surname VARCHAR(256),    fullname TEXT,    nameSketches TEXT NOT NULL,    phones TEXT NOT NULL,    email TEXT NOT NULL,    socialProfileIdentifiers TEXT NOT NULL,    curated BOOLEAN NOT NULL,    isSent BOOLEAN DEFAULT false)
CREATE INDEX ix_identityPerson_surname ON identityPerson(surname)
CREATE INDEX ix_identityPerson_middlename ON identityPerson(middlename)
CREATE INDEX ix_identityPerson_email_nameless ON identityPerson(email)
DROP TABLE IF EXISTS identitySocialProfileIdentifiers
CREATE TABLE IF NOT EXISTS identitySocialProfileIdentifiers (    socialProfileIdentifier TEXT NOT NULL,    recordId INTEGER NOT NULL,    PRIMARY KEY (socialProfileIdentifier, recordId)) WITHOUT ROWID
CREATE TABLE IF NOT EXISTS identityPhones (    phone TEXT NOT NULL,    recordId INTEGER NOT NULL,    PRIMARY KEY (phone, recordId)) WITHOUT ROWID
migration_RebuildIdentityTables
DROP TABLE IF EXISTS mailIntelligence_features
DROP TABLE IF EXISTS mailIntelligence_featureReferenceMapping
ALTER TABLE mailIntelligence_saliency RENAME COLUMN is_salient TO isSalient
ALTER TABLE mailIntelligence_saliency RENAME COLUMN is_gte_salient TO isGteSalient
ALTER TABLE mailIntelligence_saliency RENAME COLUMN is_counted TO isCounted
ALTER TABLE mailIntelligence_naiveBayesModelsTokens RENAME COLUMN is_unigram TO isUnigram
DROP TABLE IF EXISTS mailIntelligence_biomeProgress
UPDATE contactDetails SET context = NULL
ALTER TABLE contactDetails RENAME COLUMN context TO unused
DELETE FROM mailIntelligence_naiveBayesModelsGlobalCounts
DELETE FROM mailIntelligence_naiveBayesModelsTokens
ALTER TABLE mailIntelligence_naiveBayesModelsTokens ADD COLUMN creationTimestamp REAL NOT NULL
ALTER TABLE mailIntelligence_saliency ADD COLUMN isLogged BOOLEAN DEFAULT false
ALTER TABLE mailIntelligence_saliency ADD COLUMN stagedLog BLOB
ALTER TABLE contactDetails DROP COLUMN unused
DROP TABLE cnContactsToSgContactsCacheJobs
CREATE TABLE cnContactsToSgContactsCacheJobs (   cnContactIdentifier TEXT PRIMARY KEY NOT NULL) WITHOUT ROWID
CREATE TABLE entity (id INTEGER PRIMARY KEY AUTOINCREMENT,entityKey TEXT NOT NULL,entityType INTEGER NOT NULL,author TEXT,content TEXT,contentRangeOfInterest TEXT,title TEXT COLLATE NOCASE,timeRangeStart REAL,timeRangeEnd REAL,floatingRange INTEGER,timeRangeStartUTCOffsetSeconds INTEGER,timeRangeEndUTCOffsetSeconds INTEGER,creationTimestamp REAL,updateTimestamp REAL,indexTimestamp REAL,lastSeenTimestamp REAL,tags TEXT,structuredData BLOB,quality REAL,locations BLOB,masterEntityId INTEGER DEFAULT -1,groupId INTEGER DEFAULT -1,state INTEGER DEFAULT 0,contentHash TEXT,downloadState INTEGER DEFAULT 0, contentHashBlob BLOB, pendingGeocode BOOLEAN DEFAULT false, harvestedOnBuild TEXT, curatedDupe BOOLEAN DEFAULT false)
migration_CreateFTSTableWithITS
CREATE TABLE entityTags (tag TEXT,entityKey TEXT,entityType INTEGER,parentKey TEXT,duplicateKeyHash TEXT NOT NULL, duplicateKeyHashBlob BLOB)
CREATE TABLE confirmedFieldValues (entityId INTEGER PRIMARY KEY,fieldValues BLOB,maybeChanged BOOLEAN)
CREATE TABLE entityParentage (id INTEGER PRIMARY KEY AUTOINCREMENT,parentKey TEXT,childId INTEGER NOT NULL,duplicateKeyHash TEXT NOT NULL,extractionType INTEGER,sourceKey TEXT, duplicateKeyHashBlob BLOB, modelVersion INTEGER NOT NULL DEFAULT 0, modelConfidence REAL NOT NULL DEFAULT 0.5,UNIQUE(parentKey, childId))
CREATE TABLE serializedContacts (id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER,data BLOB)
CREATE TABLE identityLink (    recordId1 INTEGER NOT NULL,    recordId2 INTEGER NOT NULL,    type INT NOT NULL,    strength REAL NOT NULL,    PRIMARY KEY (recordId1, recordId2, type))
CREATE TABLE entityReferences (id INTEGER PRIMARY KEY AUTOINCREMENT,bundleIdentifier TEXT,uniqueIdentifier TEXT,entityId INTEGER,domainIdentifier TEXT)
CREATE TABLE harvestQueueTombstones (bundleIdentifier TEXT,uniqueIdentifier TEXT,domainIdentifier TEXT)
CREATE TABLE statsCounters (key TEXT NOT NULL,value REAL NOT NULL)
CREATE TABLE serializedContactCacheJobs (id INTEGER PRIMARY KEY AUTOINCREMENT)
CREATE TABLE metadata (key TEXT NOT NULL, value)
INSERT INTO metadata VALUES('rowIdWhenContactsEnabled',0)
INSERT INTO metadata VALUES('rowIdWhenEventsEnabled',0)
CREATE TABLE messageTracer (domain TEXT NOT NULL,key TEXT NOT NULL,value INTEGER NOT NULL)
CREATE TABLE identityBlobAnalysisJobs (id INTEGER PRIMARY KEY AUTOINCREMENT,mergeBlob BLOB)
CREATE TABLE emailMetadata (id INTEGER PRIMARY KEY AUTOINCREMENT,key TEXT NOT NULL,type INTEGER NOT NULL,sourceKey TEXT,author TEXT,creationTimestamp REAL,updateTimestamp REAL,indexTimestamp REAL,lastSeenTimestamp REAL,tags TEXT,state INTEGER DEFAULT 0,downloadState INTEGER DEFAULT 0,harvestedOnBuild TEXT, pendingVerification INTEGER DEFAULT 0)
CREATE TABLE emailTags (key TEXT NOT NULL,type INTEGER NOT NULL,tag TEXT NOT NULL)
CREATE TABLE reimportRequests (id INTEGER PRIMARY KEY AUTOINCREMENT,plugin TEXT NOT NULL,creationTimestamp REAL,queryTimestamp REAL,personHandle TEXT,startDateTimestamp REAL,endDateTimestamp REAL,executionTimestamp REAL)
CREATE TABLE reimportItems (id INTEGER PRIMARY KEY AUTOINCREMENT,reimportRequestId INTEGER NOT NULL,bundleId TEXT NOT NULL,uniqueId TEXT NOT NULL,seenByReceiverTimestamp REAL)
CREATE TABLE urls (id INTEGER PRIMARY KEY AUTOINCREMENT,url TEXT NOT NULL,received_from_handle TEXT,bundle_id TEXT NOT NULL,group_id TEXT,doc_id TEXT NOT NULL,seconds_from_1970 REAL NOT NULL, title TEXT, document_title TEXT, document_seconds_from_1970 REAL, document_time_interval REAL NOT NULL DEFAULT 0, flags INTEGER NOT NULL DEFAULT 0)
CREATE TABLE reminders (id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER NOT NULL,duplicateKey TEXT NOT NULL,sourceKey TEXT,title text NOT NULL,dueDateComponents TEXT,dueLocationId INTEGER,dueLocationType INTEGER NOT NULL,dueLocationTrigger INTEGER NOT NULL,sourceUrl TEXT NOT NULL,creationDate num NOT NULL,opaqueKey TEXT,uniqueKey TEXT,contactIdentifier TEXT,reminderStatus NUM NOT NULL,FOREIGN KEY(entityId) REFERENCES entity(id) ON DELETE NO ACTION,FOREIGN KEY(dueLocationId) REFERENCES locations(id) ON DELETE SET NULL)
CREATE TABLE extractionInfos (id INTEGER PRIMARY KEY AUTOINCREMENT,extractionType INTEGER NOT NULL,modelVersion NUM NOT NULL,confidence NUM NOT NULL)
CREATE TABLE contactDetails (id INTEGER PRIMARY KEY AUTOINCREMENT,value TEXT NOT NULL,type INTEGER NOT NULL,label TEXT,entityId INTEGER NOT NULL,duplicateKey TEXT NOT NULL,sourceKey TEXT,extractionInfoId INTEGER NOT NULL,FOREIGN KEY(entityId) REFERENCES entity(id) ON DELETE NO ACTION,FOREIGN KEY(extractionInfoId) REFERENCES extractionInfos(id) ON DELETE RESTRICT)
CREATE TABLE postMigrationTasks (task TEXT NOT NULL)
CREATE TABLE IF NOT EXISTS "locations" (id INTEGER PRIMARY KEY AUTOINCREMENT,locationType INTEGER NOT NULL,label TEXT,address TEXT,airportCode TEXT,latitude REAL,longitude REAL,accuracy REAL,quality REAL,handle BLOB, eventId INTEGER)
CREATE TABLE events (id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER NOT NULL,duplicateKey TEXT NOT NULL,sourceKey TEXT,title TEXT,content TEXT,creationTimestamp INTEGER,lastModifiedTimestamp INTEGER,whenRange TEXT,structuredData BLOB,state INTEGER,curated INTEGER)
CREATE TABLE eventTags (id INTEGER PRIMARY KEY AUTOINCREMENT,eventId INTEGER NOT NULL,name TEXT,FOREIGN KEY(eventId) REFERENCES event(id) ON DELETE RESTRICT)
CREATE TABLE mailIntelligence_naiveBayesModelsGlobalCounts (id INTEGER PRIMARY KEY AUTOINCREMENT,featureName INTEGER NOT NULL,salientCount INTEGER NOT NULL,regularCount INTEGER NOT NULL,salientUnigramTokensCount INTEGER NOT NULL,regularUnigramTokensCount INTEGER NOT NULL,salientBigramTokensCount INTEGER NOT NULL,regularBigramTokensCount INTEGER NOT NULL,UNIQUE(featureName))
CREATE TABLE mailIntelligence_saliency (id INTEGER PRIMARY KEY AUTOINCREMENT,creationTimestamp REAL NOT NULL,messageId TEXT NOT NULL,score NUM NOT NULL, mailboxId TEXT, isSalient BOOLEAN, isGteSalient INTEGER, isCounted BOOLEAN, isLogged BOOLEAN DEFAULT false, stagedLog BLOB)
CREATE TABLE mailIntelligence_naiveBayesModelsTokens (id INTEGER PRIMARY KEY AUTOINCREMENT,featureName INTEGER NOT NULL,token TEXT NOT NULL,isUnigram BOOLEAN NOT NULL,salientCount INTEGER NOT NULL,regularCount INTEGER NOT NULL, lastUpdateTimestamp REAL NOT NULL, creationTimestamp REAL NOT NULL)
CREATE TABLE mailIntelligence_spotlightMapping (id INTEGER PRIMARY KEY AUTOINCREMENT,messageId TEXT NOT NULL,uniqueIdentifier TEXT NOT NULL,bundleIdentifier TEXT NOT NULL,terminatedDomainIdentifier TEXT)
CREATE TABLE identityPerson (    recordId INTEGER PRIMARY KEY,    middlename VARCHAR(256),    surname VARCHAR(256),    fullname TEXT,    nameSketches TEXT NOT NULL,    phones TEXT NOT NULL,    email TEXT NOT NULL,    socialProfileIdentifiers TEXT NOT NULL,    curated BOOLEAN NOT NULL,    isSent BOOLEAN DEFAULT false)
CREATE TABLE identitySocialProfileIdentifiers (    socialProfileIdentifier TEXT NOT NULL,    recordId INTEGER NOT NULL,    PRIMARY KEY (socialProfileIdentifier, recordId)) WITHOUT ROWID
CREATE TABLE identityPhones (    phone TEXT NOT NULL,    recordId INTEGER NOT NULL,    PRIMARY KEY (phone, recordId)) WITHOUT ROWID
INSERT INTO sqlite_sequence VALUES('emailMetadata',0)
INSERT INTO sqlite_sequence VALUES('locations',0)
CREATE UNIQUE INDEX entityIdIdx on entity(id)
CREATE INDEX entityMasterEntityIdIdx on entity(masterEntityId)
CREATE INDEX entityStateIdx on entity(state)
CREATE INDEX ix_entityTags_tag ON entityTags(tag)
CREATE INDEX ix_entityTags_dupKey ON entityTags(entityKey, entityType, parentKey)
CREATE INDEX entityParentageChildIdx on entityParentage(childId)
CREATE UNIQUE INDEX serializedContactsEntityIdIdx ON serializedContacts(entityId)
CREATE INDEX ix_identityLink_recordId2 ON identityLink(recordId2)
CREATE UNIQUE INDEX entityReferencesUniqueIdx ON entityReferences(bundleIdentifier, uniqueIdentifier)
CREATE INDEX entityReferencesDomainIdx ON entityReferences(bundleIdentifier, domainIdentifier)
CREATE INDEX entityReferencesEntityIdIdx ON entityReferences(entityId)
CREATE INDEX groupIdIdx on entity(groupId)
CREATE INDEX cnContactsToSgContactsEntityIdx ON cnContactsToSgContacts(entityId)
CREATE UNIQUE INDEX cnContactsToSgContactsUniqueJoin ON cnContactsToSgContacts(cnContactIdentifier, entityId)
CREATE INDEX entityDupKeyIdx ON entity(entityKey, entityType)
CREATE INDEX entityTypeIdx ON entity(entityType)
CREATE UNIQUE INDEX ix_harvestQueueTombstones_unique ON harvestQueueTombstones(bundleIdentifier, uniqueIdentifier, domainIdentifier)
CREATE UNIQUE INDEX messageTracerIdx ON messageTracer(domain, key)
CREATE INDEX ix_entityTags_parentKey ON entityTags(parentKey)
CREATE UNIQUE INDEX ix_emailMetadata_key ON emailMetadata(key)
CREATE INDEX ix_emailMetadata_state ON emailMetadata(state)
CREATE INDEX ix_emailMetadata_downloadState ON emailMetadata(downloadState)
CREATE INDEX ix_emailTags_tag ON emailTags(tag)
CREATE INDEX ix_emailTags_key ON emailTags(key)
CREATE INDEX reimportRequestsQueryIdx ON reimportRequests(queryTimestamp)
CREATE INDEX reimportRequestsExecutionIdx ON reimportRequests(executionTimestamp)
CREATE INDEX reimportItemsRequestIdx ON reimportItems(reimportRequestId)
CREATE INDEX reimportItemsSeenByReceiverIdx ON reimportItems(seenByReceiverTimestamp)
CREATE INDEX reimportItemsBundleUniqueIdx ON reimportItems(bundleId, uniqueId)
CREATE INDEX ix_urls_seconds_from_1970 ON urls(seconds_from_1970)
CREATE INDEX ix_urls_bundle_id_group_id ON urls(bundle_id, group_id)
CREATE INDEX reminders_duplicateKey_idx ON reminders(duplicateKey)
CREATE INDEX reminders_entityId_idx ON reminders(entityId)
CREATE INDEX contactDetails_duplicateKey_idx ON contactDetails(duplicateKey)
CREATE INDEX contactDetails_entityId_idx ON contactDetails(entityId)
CREATE INDEX events_duplicateKey_idx ON events(duplicateKey)
CREATE INDEX events_entityId_idx ON events(entityId)
CREATE INDEX eventTags_eventId_idx ON eventTags(eventId)
CREATE INDEX mailIntelligence_naiveBayesModelsGlobalCounts_featureName_idx ON mailIntelligence_naiveBayesModelsGlobalCounts(featureName)
CREATE UNIQUE INDEX ix_urls_url_doc ON urls(url, doc_id, document_seconds_from_1970)
CREATE UNIQUE INDEX mailIntelligence_naiveBayesModelsTokens_featureName_token_unigram_idx ON mailIntelligence_naiveBayesModelsTokens(featureName, token, isUnigram)
CREATE INDEX mailintelligence_saliency_covering_idx ON mailintelligence_saliency(mailboxId, creationTimestamp DESC, score, isSalient, messageId)
CREATE UNIQUE INDEX mailintelligence_spotlightMapping_bundleIdentifier_uniqueIdentifier_idx ON mailIntelligence_spotlightMapping(bundleIdentifier, uniqueIdentifier)
CREATE INDEX mailintelligence_spotlightMapping_bundleIdentifier_terminatedDomainIdentifier_idx ON mailIntelligence_spotlightMapping(bundleIdentifier, terminatedDomainIdentifier)
SGSeekableData.m
Error loading %@: %@
Tried to read %llu-%llu from data of length %llu
offset %llu outside of bounds (file length %llu)
<FIAPResult h:%@ e:%@>
startUTCOffsetSeconds
endUTCOffsetSeconds
Case not handled in ComputeSimple: 
SimplifyWalker::ShortVisit called
Simplify case not handled: 
Malformed repeat 
SGCuratedEventKey.m
externalId
<SGCuratedEvent externalId: %@>
Bad regexp op 
kRegexpAlternate child_args is NULL
kRegexpStar child_args is NULL
kRegexpQuest child_args is NULL
kRegexpPlus child_args is NULL
kRegexpCapture child_args is NULL
Bad op in Prefilter::DebugString: 
op%d
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
Stack not empty.
Walk NULL
SGStorageReminder.m
SGStorageReminder failed to create sourceURL from %@
<SGStorageReminder title:%@ dupKey:%@ dueDate:%@ dueLocation: %@ reminderStatus: %@>
SELECT messageId FROM mailIntelligence_spotlightMapping WHERE uniqueIdentifier = :uniqueIdentifier AND bundleIdentifier = :bundleIdentifier
:uniqueIdentifier
:bundleIdentifier
messageId
mailIntelligence_spotlightMapping
SELECT messageId FROM mailIntelligence_spotlightMapping WHERE bundleIdentifier = :bundleIdentifier LIMIT :limit
:limit
SELECT messageId FROM mailIntelligence_spotlightMapping WHERE uniqueIdentifier IN _pas_nsarray(:uniqueIdentifiers) AND bundleIdentifier = :bundleIdentifier
:uniqueIdentifiers
SELECT messageId FROM mailIntelligence_spotlightMapping WHERE bundleIdentifier = :bundleIdentifier AND terminatedDomainIdentifier GLOB :domainIdentifierGlob
:domainIdentifierGlob
SELECT uniqueIdentifier FROM mailIntelligence_spotlightMapping WHERE messageId = :messageId AND bundleIdentifier = :bundleIdentifier
:messageId
uniqueIdentifier
SELECT id FROM mailIntelligence_spotlightMapping WHERE bundleIdentifier = :bundleIdentifier AND uniqueIdentifier = :uniqueIdentifier
INSERT INTO mailIntelligence_spotlightMapping (messageId, uniqueIdentifier, terminatedDomainIdentifier, bundleIdentifier) VALUES (:messageId, :uniqueIdentifier, :terminatedDomainIdentifier, :bundleIdentifier) ON CONFLICT(bundleIdentifier, uniqueIdentifier) DO UPDATE SET messageId=:messageId, terminatedDomainIdentifier=:terminatedDomainIdentifier
:terminatedDomainIdentifier
SGDNotificationBroadcaster
com.apple.suggestions.eventsDidChange
com.apple.suggestions.contactsDidChange
com.apple.suggestions.remindersDidChange
personFromSenderAge
personFromSenderInDyadicConversationAge
subjectContentAge
personToRecipientsAge
personCCRecipientsAge
domainFromSenderAge
conversationAge
SGXpcTransaction.m
_transaction != nil
_timeoutTimer == nil
PROACTIVE_MAIL_INTELLIGENCE_SALIENCY
assets_130
signatureStatsLogging
model.mlmodelc
modelFeatureNames.plist
modelFeatureStandardizationMeans.plist
modelFeatureStandardizationStandardDeviations.plist
modelGroundTruthFeatureNames.plist
modelGroundTruthFeatureLowerBounds.plist
modelGroundTruthFeatureUpperBounds.plist
modelGroundTruthOutputs.plist
saliencyOverrideFeatureNames.plist
saliencyOverrideFeatureLowerBounds.plist
saliencyOverrideFeatureUpperBounds.plist
saliencyOverrideOutputs.plist
classificationConfiguration.plist
classificationThreshold
classificationOfflinePrecision
classificationOfflineRecall
attachmentDetectionRegexes.plist
attachmentLinkDetection.plist
recipientConservativeDetectionRegexes.plist
recipientDetectionRegexes.plist
nicknameDetectionRegexes.plist
followUpOnOutgoingMailsQuestionsDetectionRegexes.plist
followUpOnOutgoingMailsAsksDetectionRegexes.plist
followUpOnIncomingMailsDetectionRegexes.plist
followUpWarningsParameters.plist
minCountToConsiderATokenAsHighlyDiscriminant
ratioToConsiderATokenAsHighlyDiscriminant
minCountToConsiderATokenAsExtremelyDiscriminant
ratioToConsiderATokenAsExtremelyDiscriminant
E=%@ D=%d T=%@
Device is likely not enrolled in a Trial experiment.
%@/%@
%@/%@/%@
default
v16@?0@"SGMITrialClientWrapperGuardedData"8
http://schema.org/
http://schema.org/%@
pseudoContacts
CoreSuggestions-contacts
SGSpotlightContactsAdapter-notify
Metadata/com.apple.IntelligentSuggestions/
%llu.vcf
SGSpotlightContactsAdapter.m
failed to create a CSCustomAttributeKey for MDItemRelatedAppBundleIdentifier
v32@?0@"NSString"8@"SGContact"16^B24
v16@?0@"NSError"8
SignificantPostalAddressForIMessage
SGJSWatchdogTimerCallback
JSContextGroupRef SGJSContextGroupCreate()
SGJSWatchdogTimer.mm
JSContextGroupCreate
void *JavaScriptCoreLibrary()
JSVirtualMachine
Class getJSVirtualMachineClass()_block_invoke
void SGJSContextGroupSetExecutionTimeLimit(JSContextGroupRef, double, JSShouldTerminateCallback, void *)
JSContextGroupSetExecutionTimeLimit
JSStringRef SGJSContextCreateBacktrace(JSContextRef, unsigned int)
JSContextCreateBacktrace
CFStringRef SGJSStringCopyCFString(CFAllocatorRef, JSStringRef)
JSStringCopyCFString
void SGJSContextGroupRelease(JSContextGroupRef)
JSContextGroupRelease
%FT%H:%M:%S
SGExtractionDocumentErrorDomain
v32@?0{_NSRange=QQ}8^B24
void freeRegexp(void *)
SGChunkPool.m
Could not deallocate memory from mallocRegexp
void *superblockMalloc(int)
Could not allocate memory for mallocRegexp
<SGWebPageKey source=%@ uniqueIdentifier=%@
SGDelivery+Building.m
Attachment
AttachmentLink
Recipient
FollowUpAsk
FollowUpQuestion
B16@?0@"SGTaggedCharacterRange"8
@"NSString"24@?0@"SGTaggedCharacterRange"8Q16
submodelsProbabilities
predictedSaliencyScore
predictedSaliency
saliencyPredictionPerformanceInMilliSeconds
estimatedGroundTruth
missingAttachment
missingAttachmentPredictionPerformanceInMilliSeconds
missingRecipient
missingRecipientPredictionPerformanceInMilliSeconds
Salient
Neutral
Ignorable
mailIntelligence
persistentID
v16@?0@"BPSCompletion"8
v16@?0@"BMStoreEvent"8
LANGUAGE
WINDOWLENGTH
SGContactSharingTransformer.m
v8@?0
SGAssetIdentifier
SGAsset-notifications
IPHONE_SIMULATOR_ROOT
/System/Library/AssetTypeDescriptors/com.apple.MobileAsset.AssetTypeDescriptor.CoreSuggestionsAssets.plist
Assets
suggestionsassets
common
:name
INSERT INTO eventTags (name) VALUES (:name)
SELECT name FROM eventTags WHERE id = :primaryKey
:primaryKey
v16@?0@"EKEventStore"8
SGEKCalendarAdapter.m
@"EKEvent"16@?0@"EKEvent"8
v24@?0@"EKEvent"8^B16
_addEKEventToCalendar
componentName
significantWork
reason
SGSqliteDatabaseError
Error(%d): %@
 (SQL: %@)
. May be due to previous POSIX error %@
. Free space (rounded to 1 significant digit): %@ bytes
sg_db_corruption_marker
locking
locked
unlocked
PRAGMA journal_mode
com.apple.suggestions.databasejournal.
journals
com.apple.suggestions.databasejournal.inmemory
__query
v32@?0@"NSString"8@16^B24
{_PASDBIterAction_=B}16@?0@"NSError"8
SGDatabaseJournal.m
!_inMemory
SGDatabaseJournalWillRecoverOnNextLaunch
A bogus or corrupt journal file was found and has been cleaned up. Suggestd will relaunch and continue.
fullPath
originalException
SGDatabaseJournal.executeQueriesOnDatabase
DELETE FROM snippets WHERE entityId NOT IN (SELECT id FROM entities.entity)
com.apple.suggestions.suggestd
Suppressing non-meaningful text message displayName.
Cannot get domain identifier for text message %@
expected coded array %@ to give a new instance of %@ but it didn't
Error fetching contact for identifier '%@': %@
Interaction Person has no identity/handle: %@ / %@
JSON Data is Empty. Nothing to return.
Error: Failed to serialize to JSON
SGURL: query: %f - %f 
SGURL: urlsFoundBetweenStartDate results: %@
SGURL: written: %@
SGURL: urlsFoundBetweenStartDate+bundle query: %f - %f 
SGURL: urlsFoundBetweenStartDate+bundle results: %@
Multiple model names specified to turn on data collection (objective: %lu, language: %@, models: %@.
SGSQLEntityStore+Reminders: unable to deserialize date components.
SGSQLEntityStore+Reminders: unable to fetch title.
null date derived from reminder.dueDateComponents is unexpected: %@
SGWordBoundaryQuickTypeInference - Invalid model config!
SGWordBoundaryQuickTypeInference - localeIdentifier/language (%@/%@) do not match configured target language (%@)
SGWordBoundaryQuickTypeInference - Unexpected number of confidence thresholds (%ld rather than %ld)
SGWordBoundaryQuickTypeInference - Could not initialize model with config path: %@, bin path: %@
SGWordBoundaryQuickTypeInference - Irrelevant Label predicted with score: %@
SGWordBoundaryQuickTypeInference - Predicted label (%ld) confidence (%@), falls below confidence threshold (%@)!
SGWordBoundaryQuickTypeInference - probable prior prediction of label %ld (score: %@) detected.
SGWordBoundaryQuickTypeInference - objective: %lu, prediction: %ld, score: %@
SGWordBoundaryQuickTypeInference - No name found for thirdparty objective: %ld
SGWordBoundaryQuickTypeInference - Unexpected label %ld
SGStructuredEventDocument: Unable to detect title, missing modelOutput or enrichedTaggedCharacterRanges
SGStructuredEventDocument: No title mapping, unsupported category
SGStructuredEventDocument: Unable to detect reservationId, missing modelOutput or enrichedTaggedCharacterRanges
SGStructuredEventDocument: Unable to detect startDateComponents, missing modelOutput or enrichedTaggedCharacterRanges
SGStructuredEventDocument: Unable to detect endDateComponents, missing modelOutput or enrichedTaggedCharacterRanges
SGStructuredEventDocument: Unable to detect startAddress, missing modelOutput or enrichedTaggedCharacterRanges
SGStructuredEventDocument: Unable to detect %@, missing modelOutput or enrichedTaggedCharacterRanges
SGReminderDissector: detectReminders is OFF
SGReminderDissector: Reminder detection for mail is off
SGReminderDissector: Not processing due to a missing localeAsset. [SGEntity (%{public}@)]
SGReminderDissector: Not processing since PseudoEvent found
SGReminderDissector: Mail has multiple recipients, skipping
SGReminderDissector: Mail is inhuman, skipping
SGReminderDissector: Mail is from mailing list, skipping
SGReminderDissector: Mail is partially downloaded, skipping
SGReminderDissector: Mail is sent, skipping
SGReminderDissector: Mail is older than one week, skipping
SGReminderDissector: Mail is from insignificant sender, skipping
SGReminderDissector: Skipping parts of content that are identified as not plain text
SGReminderDissector: Not model output, bailing
SGEntity: %{public}@ -> SGPipelineEnrichment: %{public}@
Dissecting Text Message to find reminder
SGReminderDissector: ProcessingLanguage: %@
SGReminderDissector: Message with confirmation found
SGReminderDissector: No modelOutput for previousMessage
SGReminderDissector: Previous message has proposal and question
SGReminderDissector: Found title for reminder %@
SGReminderDissector: Couldn't reject reminder: %@
SGReminderDissector: No previous message
SGReminderDissector: %@
SGReminderDissector: timing(ms): %f
SGReminderDissector: Message too short or too long to process or missing conversationIdentifier, bailing
SGReminderDissector: Message is a group chat, bailing
SGReminderDissector: Unable to load model assets
SGReminderDissector: Unable to load emoji assets
SGReminderDissector: Unable to load verb mapping
SGReminderDissector: Date is in the past, skipping
SGReminderDissector: ExtractionModel is nil
SGReminderDissector: Processinglanguage is nil
SGReminderDissector: No model output, bailing
No dueLocation or dueDate, bailing
SGReminderDissector: DueDate in past, bailing
Creating enrichment for Reminder: %@, dueTime: %@, dueLocation: %@
Creating Reminder enrichment
SGReminderDissector - Unknown object encountered while resolving contactId
SGReminderDissector - Could not resolve Contact. Nil contactIdentifier
No groupId found for entity %@
Unable to load RTRoutineManager
Unable to get LocationsOfInterest: %@
Suggestions failed to dlopen CoreRoutine.
SGMessageEventDissectorTrialClientWrapper: Updating factors
SGMessageEventDissectorTrialClientWrapper: No active Trial deployment found
SGMessageEventDissectorTrialClientWrapper: Updating trialEventExtractionAssetsPath from trial: %{private}@
SGMessageEventDissectorTrialClientWrapper: TRILevel is nil for trialEventExtractionAssetsPath
SGMessageEventDissectorTrialClientWrapper: Updating trialEventClassifierModelPath from trial: %{private}@
SGMessageEventDissectorTrialClientWrapper: TRILevel is nil for trialEventClassifierModelPath
SGMessageEventDissectorTrialClientWrapper: Updating trialEventClassifierThreshold from trial: %.02f
SGMessageEventDissectorTrialClientWrapper: TRILevel is nil for trialEventClassifierThreshold
SGMessageEventDissectorTrialClientWrapper: Updating trialMessageProcessingLimit from trial: %.02f
SGMessageEventDissectorTrialClientWrapper: TRILevel is nil for trialMessageProcessingLimit
SGMessageEventDissectorTrialClientWrapper: Updating trialRateLimitInterval from trial: %.02f
SGMessageEventDissectorTrialClientWrapper: TRILevel is nil for trialRateLimitInterval
SGMessageEventDissectorTrialClientWrapper: trialEventExtractionAssetsPath is nil, bailing
SGMessageEventDissectorTrialClientWrapper: EventExtractionAssetsPath loaded with Trial %{private}@
SGMessageEventDissectorTrialClientWrapper: No assets found at trialEventExtractionAssetsPath: %{private}@ isDirectory: %@
SGMessageEventDissectorTrialClientWrapper: trialEventClassifierModelPath is nil, bailing
SGMessageEventDissectorTrialClientWrapper: EventClassifierModelPath loaded with Trial %{private}@
SGMessageEventDissectorTrialClientWrapper: No assets found at trialEventClassifierModelPath: %{private}@ isDirectory: %@
SGMessageEventDissectorTrialClientWrapper: eventClassifierThreshold: %@
SGMessageEventDissectorTrialClientWrapper: messageProcessingLimit: %@
SGMessageEventDissectorTrialClientWrapper: rateLimitInterval: %@
SGURLPlugin: consumeRemindersContentWithContext: notes.length = %tu
SGURLPlugin ignoring item with nil unique identifier
SGURLPlugin: extracting URLs from attributes of %@
SGURLPlugin: %tu detections on %@
SGURLPlugin: deleting URLs from bundleId %@
SGURLPlugin failed to delete URLs from bundleId %@
SGMI SGSqlEntityStore+Saliency: The sortedSaliencyResults method do not currently use mailboxType
Exiting due to SQLite error: %s
Pre-warming suggestd
Starting dissection, len=%tu, ctx=%i
Ending dissection, len=%tu, ctx=%i
Starting ingest of %lu messages
Ending ingest of %lu messages
Database inconsistency; found key for event hash %@ but event is missing
SGDSuggestManager - Database inconsistency: Found key for reminder hash %@ but reminder is missing
Change history item: <type: %ld, identifier: %@>
Bucket matching deleted contact %@ removed from requestCache
Could not fetch CNChangeHistory due to: %@
CNChangeHistory truncated, clearing entire cache
Could not clear CNContactStore change history due to: %@
SGDSuggestManager failed to clear caches following an asset update: %@
clearing lastSuggestionsFromMessage cache due to settings change
SGDSuggestManager: contentAdmissionBlocklistDidChange: called with %tu bundles
SGDSuggestManager has no entity store and cannot continue
SGDSuggestionsManager going away now, bye!
Warming up suggestions...
Warmed up suggestions in %0.2f ms and found %i enrichments
Suggestions is already warmed up (as of %0.1f seconds ago)
clearCachesFully: %i
contactsFromContact: %@
contactsFromContactIdentifier: %@
Error from CNContactStore contactWithIdentifier: %@
contactsFromContactIdentifiers (%lu ids)
SGDSuggestManager-emailAddressIsSignificant:%@
contactFromRecordId: %@
cnContactMatchesForRecordIds (%lu ids)
storageContactFromRecordId: %@
SGDSuggestManager-contactMatchesWithFullTextSearch:%@ limitTo:%lu
SGDSuggestManager-contactMatchesWithMessagingPrefix:%@ limitTo:%lu
SGDSuggestManager-allContactsWithSnippets:%@ limitTo:%lu
SGDSuggestManager-suggestEventsStartingAt:%@ endingAt:%@ limitTo:%lu
eventFromRecordId: %@
SGDSuggestManager-suggestEventsStartingAt:%@ endingAt:%@ prefix:%@ limitTo:%lu
SGDSuggestManager-suggestEventsInFutureLimitTo:%lu
SGDSuggestManager-confirmReminderByRecordId: %@
SGDSuggestManager-confirmRealtimeReminder
SGDSuggestManager - Confirmation: Unable to retrieve reminder from the harvest store. Computing and storing hashes only.
SGDSuggestManager-rejectReminderByRecordId: %@
SGDSuggestManager-rejectRealtimeReminer
SGDSuggestManager - Rejection: Unable to retrieve reminder from the harvest store. Computing and storing hashes only.
SGDSuggestManager-alarmTriggeredForRecordId: %@
SuggestionsManager getting all Reminders
SuggestionsManager getting reminder title for content
SuggestionsManager logging user created reminder title
SuggestionsManager getting all Deliveries
Suggestions Cache hit: %@
Suggestions Cache hit
Suggestions Cache miss: %@
Suggestions Cache miss
Went from %d to %d suggestions after filtering out already acted-on suggestions
Skipping extracted event that has already passed.
NaturalLanguageEvent Found: Bumping TTL
SGDSuggestManager - For [SGEntity %{public}@], Found %d extracted event candidates.
More than one event found using alternative keys
EKEvent with the same externalIdentifier found, but eventIdentifier is nil.
More than one EKEvent with the same opaque key detected.
EKEvent with the same opaque key found, but eventIdentifier is nil.
EKEvent for cancellation found, but eventIdentifier is nil.
Suppressing update or view duplicate of EKEvent because eventIdentifier is nil.
Suppressing update or view duplicate of EKEvent because event status is canceled.
Newer EKEvent from Suggestions has been found. Showing the updated event insead of this one.
Suppressing NL event because it looks like a near-duplicate of a curated event.
Suppressing NL event because it looks like a duplicate of a recurring curated event.
Suppressing NL event because eventIdentifier is nil.
Suppressing event because we found more than 1 duplicate.
New realtime event
Duplicate realtime event
Update realtime event
Cancellation realtime event
Near duplicate realtime event
Returning %d realtime events.
Skipping event with nonnull suggestionInfo but null suggestionInfo.uniqueKey
EKEvent exact match with the same duplicate key found, but eventIdentifier is nil.
Entity is from inhuman sender
Contacts after filter, before realtiming, %@
Extracted Realtime contact details about the user and tried to show them in a banner: %@
Extracted a contact with a different handle to the sender: %@
Contact pre-aggregation: %@
Contact post-aggregation: %@
Contact: %@, interesting: %i
Error getting realtime contact for %@: %@
Realtime contacts: %@
SGDSuggestManager-contactMatchesByPhoneNumber
SGDSuggestManager-namesForDetail
SGDSuggestManager-contactsByEmailAddress
SGDSuggestManager-contactsBySocialProfile
SGDSuggestManager-messagesToRefreshWithCompletion
Loading messages to refresh.
SGDSuggestManager-updateMessages
SGDSuggestManager-reportMessagesFound
SGDSuggestManager-fullDownloadRequestBatch
SGDSuggestManager-resolveFullDownloadRequests
SGDSuggestManager-eventFromUniqueId: %@
dupKey: %@
eventFromUniqueId: %@ resulted in dupKey: %@ and event: %@
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Found no item references for event with unique id '%@'
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Found no container reference for event with unique id '%@'
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: %@
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Event was not found and no fallback URL provided.
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Could not get the entity type.
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Found e-mail for Event Found in Mail on device.
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Could not find e-mail for Event Found in Mail on device but did find fallback URL
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Could not find e-mail for Event Found in Mail on device or fallback URL.
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Found message for Event Found in Messages on device.
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Can't find a bundleId for entity type: '%lld'
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Could not find an installed bundle id.
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Could not create launch intent for event.
SGDSuggestManager-launchAppForSuggestedEventUsingLaunchInfo: Error creating application record: %@
SGDSuggestManager-launchAppForSuggestedEventUsingLaunchInfo: Error opening user activity: %@
SGDSuggestManager-confirmEvent: %@
SGDSuggestManager-confirmEventByRecordId: %@
SGDSuggestManager-rejectEvent: %@
SGDSuggestManager-rejectEventByRecordId: %@
SGDSuggestManager - deleteEventByRecordId: event Id: (%{public}@)
SGDSuggestManager-confirmContact: %@
While confirming/rejecting contact detail, failed to load detail for record id: %@
While confirming/rejecting contact detail, requested detail not in loaded contract for record id: %@
Confirming details as workaround for Contacts search for contact %@
While confirming/rejecting contact, provided recordId was not contactId: %@ %@
SGDSuggestManager-confirmRecord: %@ %td
SGDSuggestManager-rejectRecord: %@ %td
SGDSuggestManager-confirmContactDetailRecord: %@ %td
SGDSuggestManager-rejectContactDetailRecord: %@ %td
SGMISaliencyInference: %@
Suggestions received value %@ for feature setting %ld. Processing of the information not implemented yet.
Suggestions received feedback %@ for NSData %{sensitive}@.
FollowUpFeedback: NSData %{sensitive}@ for warning %{sensitive}@
Suggestions received feedback %@ for StringFromFollowUpWarning %{sensitive}@.
FollowUpFeedback: for StringFromFollowUpWarning %{sensitive}@ for warning %{sensitive}@
SGDSuggestManager: addSearchableItemMetadata: failed to deserialize item data.
SGDSuggestManager: addSearchableItemMetadata: %@ is eligible for harvesting.
SGDSuggestManager: addSearchableItemMetadata: %@ is NOT eligible for harvesting.
SGDSuggestManager addInteractions: bundleId: %{public}@
SGDSuggestManager addInteractions: Can't add 0 interaction from bundleId: %@
SGDSuggestManager addInteractions: Got %i interactions from nil bundleId! Ignoring.
SGDSuggestManager: _harvestPeopleFromInteractions: harvesting from %@ %@
Interaction from %@ rejected. Display name is very likely a phone-number or email address.
SGDSuggestManager: _harvestPeopleFromInteractions: harevsted %tu entities
Buffered interactions when block was scheduled: %tu, now: %tu
Processing all buffered interactions
Waiting for more interactions to be donated before processing.
SGDSuggestManager addInteractions: Encountered INInteraction with nil identifier.
SGDSuggestManager addInteractions: Didn't find any enrichment after dissection of the INInteraction (%{public}@).
Plugins finished purging %lu items from bundle: %@
SGDSuggestManager: Plugins finished deleting %lu items from bundle: %@
SGDSuggestManager: deleting spotlight references: %@ : %@
Plugins finished deleting %lu domains from bundle: %@
Plugins finished deleting bundle: %@
SGDSuggestManager-schemaOrgToEvents
isEventCandidateForURL: %{sensitive}@ -title: %{sensitive}@
SGSuggestionsService isEventCandidateForURL: method called with nil arguments
SGSuggestionsService isEventCandidateForURL: Based on whitelist check, URL is candidate
SGSuggestionsService isEventCandidateForURL: eventCandidate is nil, domain appears not to be whitelisted.
SGDSuggestManager isEventCandidateForURL: Checking classifier output for webpage
SGDSuggestManager-isEventCandidateForURL: %{sensitive}@ -title: %{sensitive}@
SGDSuggestManager isEventCandidateForURL: end processing because detectStructuredEvents is OFF.
SGDSuggestManager suggestionsFromURL - Start processing webpage
SGDSuggestManager-suggestionsFromURL: %{sensitive}@ -title: %{sensitive}@ -HTMLPayload length: %lu 
suggestionsFromURL ignoring item since Safari is disallowed by user's settings
SGDSuggestManager suggestionsFromURL: parent entity has %lu enrichment(s) after dissection
Parents entity has %lu enrichements
Failed to process event suggestion 
 "Show Siri Suggestions" disabled in Calendar.
Failed to process event suggestion 
 you must acknowledge "What's new in Calendar" screen in the Calendar app.
Geocode modified locations, updating enrichment
realtimeSuggestionsFromURL ignoring item since Safari is disallowed by user's settings
SGDSuggestManager-waitForEventWithIdentifier: %@ -toAppearInEventStoreWithLastModificationDate: %@
#logUnknownContactInformationShownCount names for detail %@: %lu
Caching event from with external identifer = %@.
Event found for Spotlight interaction, but not from Suggestions.
Not logging event interaction for bogus uniqueKey: %@
Not logging event interaction for uniqueKey with bad serialization: %@
Attempting to retrieve entity from harvestStore for uniqueKey = %@
Couldn't find Entity with uniqueKey = %@
Entity is not a pseudo event
exiting due to daemonExitWithCompletion request
SGDSuggestManager: Dropping all aggregated contacts
SGDSuggestManager: Dropping aggregated contact for conversation: %@
SGDSuggestManager-ipsosMessagesFromSearchableItems
SGDSuggestManager-recentURLsWithLimit:%u called
SGDSuggestManager-recentURLsWithLimit returning %tu URLs
SGDSuggestManager-urlsFoundBetweenStartDate:%@ endDate:%@ excludingBundleIdentifiers:%@ containingSubstring:%@ flagFilter:%d limit:%u called
SGDSuggestManager-urlsFoundBetweenStartDate:endDate:excludingBundleIdentifiers:containingSubstring:flagFilter:limit returning %tu URLs
SGDSuggestManager-registerURLFeedback:%d url.length:%tu called
SGDSuggestManager-registerURLFeedback returning %d
SGDSuggestManager: Mail: suggestionsFromSearchableItem: %@ : %@ options: %tu
SGDSuggestManager: Mail: suggestionsFromSearchableItem was called with an invalid item
suggestionsFromSearchableItem ignoring item since the bundle is disallowed by user's settings
SGDSuggestManager: Mail: harvestedSuggestionsFromSearchableItem: %@ : %@ options: %tu
harvestedSuggestionsFromSearchableItem ignoring item since the bundle is disallowed by user's settings
SGDSuggestManager: Mail: suggestionsFromEmailContent: %@ options: %tu
SGDSuggestManager: Mail: suggestionsFromSimpleMailMessage: %@ : %@ options: %tu
SGDSuggestManager: Messages: harvestedSuggestionsFromMessage: %@ : %@ options: %tu
harvestedSuggestionsFromMessage ignoring item since the bundle is disallowed by user's settings
SGDSuggestManager: Messages: harvestedSuggestionsFromMessage (deprecated): %@ : %@ options: %tu
SGDSuggestManager: Messages: harvestedSuggestionsFromMessages: %tu messages (options %tu)
harvestedSuggestionsFromMessages ignoring item since the bundle is disallowed by user's settings
harvestedSuggestionsFromMessages called with no inputs
SGDSuggestManager: harvestedSuggestionsFromMessages: Suggesting reminder with recordId: %@
SGSuggestManager-foundInStringForRecordId:%@ style:%u called
No entity found for recordId: %@
Entity %{public}@ -> SGStorageReminder %{public}@
SGDSuggestManager-foundInStringForRecordId: unable to format contact name.
SGDSuggestManager-foundInStringForRecordId: error when fetching contact: %@
SGDSuggestManager: deleteDataDerivedFromContentMatchingRequest
SGDSuggestManager: consumeMailContentWithContext
SGDSuggestManager: consumeMessagesContentWithContext
SGDSuggestManager: consumeInteractionWithContext: %@
Error constructing data detector for featurizing: %@
SGMIDailyActivity Starting Task #1 for Signature Stats logging: -[SGMIFeatureStore warningStatsForLogging:]
SGMIDailyActivity Signature Stats logging do not have enough new data point to submit new logs.
DailyTasks.LogSignature
SGMIDailyActivity will not run signature stats logging (logWarningSignatureStats is disabled)
SGMIDailyActivity Starting Task NicknameMappingLookup
DailyTasks.NicknameMappingLookup
SGMIDailyActivity: Mail saliency detection is off. Will not proceed with daily activity tasks.
SGMIDailyActivity Starting Task #1: SGMISubmodelsManager checkForAndProcessVersionChange
DailyTasks.ModelVersionChange
SGMIDailyActivity Finished Task #1: SGMISubmodelsManager checkForAndProcessVersionChange
SGMIDailyActivity Starting Task #2: SGMISubmodelsManager incrementalSubmodelUpdate
DailyTasks.SubmodelUpdate
SGMIDailyActivity Finished Task #2: SGMISubmodelsManager incrementalSubmodelUpdate
SGMIDailyActivity Starting Task #3: SGMISubmodelsManager pruneDB
DailyTasks.PruneSubmodels
SGMIDailyActivity Finished Task #3: SGMISubmodelsManager pruneDB
SGMIDailyActivity Starting Task #4: Logging
DailyTasks.LogMetrics
SGMIDailyActivity Finished Task #4: Logging
SGMIDailyActivity Starting Task #5: Performing DB maintenance
 enableTelemetry=YES 
DailyTasks.PerformDBMaintenance
SGMIDailyActivity Finished Task #5: Performing DB maintenance
SGStructuredEventExtractionModel: No input or output mapping
Preparing Structured Event model inference
SGStructuredEventExtractionModel: Model initialization failed
Model input feature construction failed.
Model inference failed: %@
Model inference done in %f
Unable to convert to instantiate SGExtractionModelCoreMLFeatureWrapper
SGStructuredEventExtractionModel: Loading model from trial override at path: %@
Unable to load model from URL: %@
SGStructuredEventExtractionModel: No configuration loaded
SGStructuredEventExtractionModel: Unable to get URL for Gazetteer
SGPOSTagger: Unable to create gazetteer %@
Prefilter tree stack overflow
Prefilter tree stack underflow
Registering for MobileAsset metadata download with CTS
CoreSuggestionsModelAssets metadata download success? %d
CoreSuggestionsAssets metadata download success? %d
CoreSuggestionsAssets metadata download - marking activity as done
registering _registerForCollectWeeklyStats
Can not harvest items until first unlock. Waiting for later.
Pruning entities more than a year old
NOT pruning entities more than a year old, due to preference setting.
Vacuuming the database
Registering for identity analysis with CTS
Registering for RTC log sending with CTS
Deferring sending of RTC Logs
Registering for contact detail cache rebuilding with CTS
Deferring CD cache rebuild
Registering for pending-geocode processing with CTS
Deferring remaining geocodes for later
Invalid state transition to DEFER
Registering for pending-verification processing with CTS
SGDManagerForCTS _performProcessPendingVerificationActivity: Starting CTS job for document verification.
SGDManagerForCTS _performProcessPendingVerificationActivity: Deferring CTS document verification for [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: Could not defer CTS document verification for [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: Entity pending source verificaiton did not have an email entity key. [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: Entity pending source verificaiton did not have a message ID. [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: Starting CTS document verification for [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: Successfully verified DKIM signature. [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: DKIM verification resulted in permanent failure: %@. [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: DKIM verification resulted in temporary failure for 2nd time. Treating as permanent failure: %@. [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: Could not obtain a lock for document verification.
Registering for mail event aggregation processing with CTS
SGDManagerForCTS _performMailIntelligenceTasksActivity: Activity running even though Class A protected data is unavailable
SGDManagerForCTS _performMailIntelligenceTasksActivity: Starting CTS job for Mail Intelligence Tasks
Mail Intelligence Task deferred by CTS
Mail Intelligence Task interrupted by device lock state change
[HarvestedURLMetric] Registering for harvested URL metrics upload task with CTS
[HarvestedURLMetric] Can not access entity store. Waiting for later.
[HarvestedURLMetric] Performing harvested URL metric upload CTS job.
[HarvestedURLMetric] Got %tu URL(s) in the store.
[HarvestedURLMetric] Deferring for later right after getting URLs
[HarvestedURLMetric] Deferring for later while enumerating URLs
[HarvestedURLMetric] payload: %@
[HarvestedURLMetric] Done with harvested URL metric upload CTS job.
Tombstone exists for queued item; deleting.
Plugins finished CSSI processing via CTS: %@
Plugins finished async CSSI processing via CTS: %@
Dissector pipeline ignoring %@
text message CSSI %@ has no authors
text message CSSI %@ has no accountIdentifier
Unhandled CSSI %@ from %@ in -[SGDManagerForCTS processSearchableItem:pipeline:context:]
SGTextMessage %@ has been processed without dissection, so it will be dropped from the dissector pipeline.
SGSimpleMailMessage %@ appears to be a sent email not in the sent mail folder, so it will be dropped from the dissector pipeline.
SGSimpleMailMessage %@ has been processed without dissection, so it will be dropped from the dissector pipeline.
Ignoring attachments because a structured event already found
Found event
Failed to parse event from ics attachment.
Ignoring event with the request method in an ics attachment from a shared calendar provider.
Ignoring event that has the same UID as another event in the same ics attachment.
Skipping calendar attachment dissector: detectStructuredEvents is OFF
Message with %lu attachments (%lu downloaded ics)
Error when reading attachment at %@:
Error when instantiating ICSDocument for attachment at %@:
prefetched SGDCloudKitSync privacySalt (error: %@)
Preparing for queries
Error during %@ setup: %@
Sending processing of %@ %@ from %@ to plugin %@
Plugin reported error: %@: %@
Sending processing of interaction %@ from %@ to %@
Plugin %@ requesting historical data: %@
sending purge of %lu items from %@ to plugin %@
sending deletion of %lu items from %@ to plugin %@
sending deletion of %lu domains from %@ to plugin %@
sending deletion of bundle %@ to plugin %@
Refreshing due to account change: %@
Filtering account change that we don't care about: %@
Failed to fetch CalDAV accounts: %@
Calendar accounts updated: %@
SGRemindersAdapter: Not adding reminder that has dueDate in the past
SGRemindersAdapter: PseudoReminder found in Found in Apps list, not adding
SGRemindersAdapter: Duplicate found in user defined list, not adding
SGRemindersAdapter: Adding Reminder with recordId: %@
Reminder is not a valid new one, already exists in SGSuggestHistory
SGRemindersAdapter: Confirming reminder
SGRemindersAdapter: Rejecting reminder
SGRemindersAdapter: alarm triggered from this device
SGRemindersAdapter: Not removing reminder since it's an allDay reminder
SGRemindersAdapter: Confirming reminder from other device
SGRemindersAdapter: Rejecting reminder from other device
SGRemindersAdapter: Removing pseudo reminder because of parent deletion
Multiple reminders linked to one storage reminder
Didn't find any REMReminders to reject
Unable to retrieve found in apps list: %@
Unable to load RemindersFoundInApps list
Unable to serialize ReminderMetadata: %@
Saving Reminder with universal link: %@
Unable to save reminder in ReminderKit error: %@
Unable to delete reminder in ReminderKit error: %@
Unable to load metadata from reminder with id: %@ error: %@
SGRemindersAdapter: Duplicate reminder found based on exact title match
SGRemindersAdapter: Duplicate reminder found based on dueDate and edit distance of title
SGRemindersAdapter - [SGStorageReminder (%{public}@)] constructNotesForReminder: Unable to fetch contact: %{public}@
SGMISaliencyInference: Mail %@ is a sent mail
SGMISaliencyInference: Error - config shouldn't be nil when inferencing saliency
SGMISaliencyInference: No submodels for message ID: %@
SGMISaliencyInference: rule based inference for message ID: %@
SGMISaliencyInference: Performing saliency inference for e-mail message.
Self-id: Skipping - outgoing message
Self-id: Not-a-known-name "%@" word in candidate "%@"
Self-id: Found NO name to extract from candidate "%@"
Self-id: Extracted name "%@" from candidate "%@"
Self-id: Extracted partial name "%@" from candidate "%@"
Self-id: looking for pattern match in: "%@"
Message-Id header not found. Using hash: %@
Skipping setAuthor: detectContacts is OFF
Unknown SGMessage subclass
Ignoring invalid email: %s
Tagging as inhuman: Body
Tagging as human: Headers
Suppressing cloud sync. This should happen in testing only.
SGSuggestHistory is a no-op with kvs == nil!
Something went wrong with trying to synchronize icloud store
Empty or corrupt resetInfo
Pushing confirmed events set with %i items
Pushing confirmed events without timestamp set with %i items
Pushing rejected events set with %i items
Pushing confirmed reminders set with %i items
Pushing rejected reminders set with %i items
Pushing confirmed event fields set with %i items
Pushing confirmed event without timestamp fields set with %i items
Pushing contacts set with %i items
Pushing storage details set with %i items
Pushing do-not-update set with %i items
Pushing reset info (generation %lu, timestamp %.1f)
SGCK newSaltFuture failed to immediately complete. Will use classic hashes.
SGCK newSaltFuture completed immediately
SGCK Error retrieving salt for hashing (will use classic hashes): %@
SGCK Manatee salt not supported -- falling back to classic hashes
SGCK will use modern hashes
SGCK modernHashesForClassicHashes was passed a hash that is already modern
Resetting suggestions history
Suggestions history synced data change, reason=%i
Resetting history due to a KVS reset event within %g sec time window.
Suppressing KVS history reset because time window has expired.
SGSuggestHistory - Receive updated confirmed event hashes (%{public}lu total, %{public}lu new)
SGSuggestHistory - Receive updated rejected event hashes (%{public}lu total, %{public}lu new)
SGSuggestHistory - Receive updated confirmed event field hashes (%{public}lu total)
SGSuggestHistory - Receive updated confirmed event field without timestamp hashes (%{public}lu total)
SGSuggestHistory - Receive updated confirmed reminder hashes (%{public}lu total, %{public}lu new)
SGSuggestHistory - Receive updated rejected reminder hashes (%{public}lu total %lu new)
Receive updated contact hashes (%lu total)
Receive updated storage detail hashes (%lu total)
Receive updated don't-update hashes (%lu total)
KVS account change
Exceeded iCloud key value storage quota. Can't store any more acted on suggestions.
Confirming or rejecting record for contact %@
Confirming or rejecting contact %@
Rejecting contact %@
Don't know how to deal with this realtime contact state (state = %i)
Confirming event %@
Confirming storage event %@
Rejecting event %@
Rejecting storage event %@
Confirming reminder with opaqueKey %@
Rejecting reminder with opaqueKey %@
Argument must be of type SGRealtimeContact or SGRealtimeEvent, but was %@
Error opening file %@ at base path: %@
Lossy conversion. Detected charset: %ld (expected: %ld)
Found %i DD sigs for same person. Using sig %i with %i subresults
Error initializing SGMIAttachmentSizeHistogram with numberArray: %@
Got nil name
Follow Up. [analyzeFeatureVector] Analyze Feature Vector with messageId %@. Feature Vector: %{sensitive}@
Follow Up. [analyzeFeatureVector] Storing Detection Stats for Warning  %{sensitive}@
Follow Up. [_analyzeFeatureVector] Analyze Feature Vector for messageId %@. Feature Vector: %{sensitive}@ with CustomRange %@
Follow Up. [_analyzeFeatureVector] SGMIWarningsConfig loaded: %@
Follow Up. [_analyzeFeatureVector] Aborting computation. Language %@, Config %@, Body %{sensitive}@, RegExpDictionary %@
Follow Up. [_analyzeFeatureVector][RegEx loop] Checking for a match in RegEx: %@
Follow Up. [_analyzeFeatureVector] Match found: %{sensitive}@
Follow Up. [_analyzeFeatureVector] Match valid: %{sensitive}@
Follow Up. [_analyzeFeatureVector] Looking for a potential time reference in: %{sensitive}@
Follow Up. [_analyzeFeatureVector] Exploring Data Detector matches.
Follow Up. [_analyzeFeatureVector] Exploration Data Detector matches finished. Warning start date %{sensitive}@
Follow Up. [_analyzeFeatureVector] Exploring Data Detector Mapped Additions matches.
Follow Up. [_analyzeFeatureVector] Exploration Data Detector Mapped Additions matches finished. Warning start date %{sensitive}@
Follow Up. [_analyzeFeatureVector] Exploring Data Detector Additions matches.
Follow Up. [_analyzeFeatureVector] Exploration Data Detector Additions matches finished. Warning start date %{sensitive}@
Follow Up. [_analyzeFeatureVector] Warning not raised, as one of the following is nil. isNil_snippet: %@, isNil_signature: %@, isNil_detectedLanguage: %@, isNil_startDate: %@
Follow Up. [_analyzeFeatureVector] Exiting the method. Warning found %{sensitive}@
Follow Up. [_analyzeFeatureVector] followUpTimeRangeForDebugging was set in defaults settings. Overriding the custom time range for warning %{sensitive}@
Follow Up. [identifyFollowUpWarningFromSubject:content:] Computing warning for subject: %{sensitive}@ body:%{sensitive}@
Follow Up. [identifyFollowUpWarningFromSubject:body:] Computing warning for subject: %{sensitive}@ body:%{sensitive}@
SGMIFollowUpManager: Mail Intelligence's SPI back end timed out
SGMIFollowUpManager: Mail Intelligence's SPI back took over 5 seconds on a %tu-lengthed content: we have to xpc_transaction_exit_clean
Follow Up. [analyzeForFollowUpMailWithBody:isSent:messageId:date] Can't initialize mailDictionary: nil object. body: %{sensitive}@, isNil_body: %@, messageId: %@, date: %@
Follow Up. [analyzeOutgoingMailFeatureVector] nil config. Follow Up processing aborted.
Follow Up. [analyzeOutgoingMailFeatureVector] detectedLanguage: %@ regExLanguage %@ regexes loaded: %@
[Follow Up] CustomTimeRange behavior specified in asset overriden by default setting. Value: %@
SGMI received %@ feedback for follow up warning
[Follow Up] Engagement type %ld received is not supported.
Unable to load plplist content for %@: %@
Unable to resolve path: %@
Unable to create input MLMultiArray: %@
inputDictFromTaggedCharacterRanges: '' not present for inputSection: %@
featureDimensionForInputSection: Model doesn't have description for inputSection: %@
SGExtractioNModel: Unable to find URL for model
Unable to map output to label
Found no Lemma input when trying to extend output label to sequence length.
SGExtractionModel: Couldn't delete model file: %@
Sqlite error while rebuilding identity tables: %@
Can't create interdicts for blob of size %lu; skipping.
Merge group containing %lu names exceeds limit of %lu; skipping interdict construction.
Merge group mapping to %lu CNContacts exceeds limit of %lu; skipping interdict construction.
Failed to encode mergeBlob: %@
Starting identity blob analysis.
Blob analysis complete.
Blob analysis deferring.
Could not defer blob analysis.
Loading pattern plist, path: %@
Loading pattern pldat, path: %@
Loading pattern data from path "%@"
Reinstating death for %i objects
Pausing death for %i objects
Range {%tu, %tu} out of bounds; string length: %tu
Quick responses: No likely language prediction for conversation
Quick responses: Text message has no conversation identifier
Quick responses: processing is disabled for group messages
Quick responses: response message is much too long for labeling or DP reporting
Quick responses: processing requires at least two text messages
Quick responses: No model available for language: %@
Quick responses: processing requires the prompt and reply to have a single sender handle
Quick responses: processing requires the reply to be to a different person's prompt
Quick responses: processing requires the prompt and the reply to have text content
Quick responses: processing requires the prompt to be no more than %lu characters in length
Quick responses: using dynamic label with unique identifier %@
Quick responses: not keeping response message because it is greater than %lu characters in length
Quick responses: labeler failed to offer positive or negative label in language %@
Quick responses: dropping sample with label %@
Quick responses: keeping sample with label %@
Quick responses: not adding session for training - localTraining %d, spotlightReference %d, vector %d, sessionDescriptor %d, version: %@
SGMISaliencyModelConfig: Could not process rule set; name array from Trial is nil.
SGMISaliencyModelConfig: Could not process rule set; lower bounds array from Trial is nil.
SGMISaliencyModelConfig: Could not process rule set; upper bounds array from Trial is nil.
SGMISaliencyModelConfig: Could not process rule set; outputs array from Trial is nil.
SGMISaliencyModelConfig: Inconsistent array sizes in Trial asset.
SGMISaliencyModelConfig: Unexpected feature %@
SGMISaliencyModelConfig: Error in processing outstanding saliency rules.
SGMISaliencyModelConfig: Error, mean for feature standardization is nil.
SGMISaliencyModelConfig: Error in processing ground truth estimation rules.
SGMISaliencyModelConfig: Error, classification threshold is nil.
SGMISaliencyModelConfig: Error, minCountToConsiderATokenAsHighlyDiscriminant is nil.
SGMISaliencyModelConfig: Error, ratioToConsiderATokenAsHighlyDiscriminant is nil.
SGMISaliencyModelConfig: Error, minCountToConsiderATokenAsExtremelyDiscriminant is nil.
SGMISaliencyModelConfig: Error, ratioToConsiderATokenAsExtremelyDiscriminant is nil.
SGLowMemoryContactEnumeration got an error from Spotlight: %@
SGLexicon: Unable to load lexicon, %@
SGLexicon: non utf-8 token passed
Could not load nicknames from %@: %@
Unexpected object returned from Contact Store: %@ Retrieved From %@
SGContactsInterface: CNPhoneNumber initWithStringValue returned nil
Unsupported handleType: %@
Error enumerating contacts: %@
Expecting NSString for airportName but found something else: %@. Asset version = %lu
No airports found in common
Could not get airport code for airport "%@" from flights %@ on carrier %@ because they do not have at least 1 airport in common
Skipping levenshtein for airport "%@" flights %@ on carrier %@ because they have exactly one airport in common: %@
Failed to load model chunk file resource %s
Model loaded.
Failed to locate assets resource %s
Loading model {entity: %s, type: %s, language: %s, version: %tu, path: %s}
Invalid model string: %s
Unknown model class: %s
Unknown model name: %s
More than one prediction model specified for objective %lu, language: %@, models: %@
Failed to load model (objective: %lu, langauge: %@, name: %@)
No prediction model specified for objective %lu, language: %@
Error listing contents of directory %@: %@
Could not unlink %@ while rotating: errno=%i
Rotating bloom filters
Could not move %@ to %@: errno=%i
Could not unlink %@: errno=%i
Could not open Bloom filter file. errno = %i
Could not mmap Bloom filter file. errno = %i
Quick responses: A conversation must have more than 2 messages for a prompt; returning prompt as nil
Quick responses: Most recent message is not a response to a prompt
Error decoding null message.textContent in %@:
Could not open %@: errno=%i: %s
Could not fstat %@: errno=%i: %s
Could not write to journal file %@: errno=%i: %s
Could not read from journal file %@: errno=%i: %s
Journal file has invalid magic number: expected 0x%x, got 0x%x: %@
Journal file truncated: %@
Journal file checksum mismatch: %@: %u / %u
Could not remove %@: errno=%i: %s
SGReminderExtractionModel: Loading model from trial override at path: %@
No inputTokenMapping found
No output configuration found.
Preparing model inference
Model initialization failed
Unable to load model features.
Attempt to read stored logs
Corrupted persistent logging store! Removing corrupted store.
Exception we're not catching
New logging store
SGRTCLogging going away now
RTCLogging: usageMaps: %@, (%@ Maps launch in past 2 weeks)
RTCLogging: usageCalendar: %@, (%@ Calendar events found)
RTCLogging: log and increment interaction key: %@, for eventKey: %@
RTCLogging: can't find eventKey in loggedInteractionsSummary dictionary
RTCLogging: log new interaction summary: %@
RTCLogging: log new interaction: %@
RTCLogging: log extraction (%@) to RTC for templateName: %@ timingProcessing: %llu
RTCLogging: log extraction from Message Event Dissector (%@) to RTC for templateName: %@ timingProcessing: %llu
RTCLogging: entity can't be found
RTCLogging: entity.duplicateKey.entityKey serialization failed
RTCLogging: logging interaction to RTC for interactionKey: %@, eventKey: %@
RTCLogging: Sending privacy-aware suggestions log over the network
RTCLogging: No RTC logs to send this time. Skipping.
RTCLogging: Selected logs (%lu): %@
RTCLogging: No RTC backends found, no logs will be sent at this time.
RTCLogging: Aborting sending of logs as shouldContinueBlock returned NO
RTCLogging: Unable to send logs: %@
RTCLogging: Unable to send logs for storeAge: %@
RTCLogging: Unable to flush logs
Couldn't create the privacy-aware store for Suggestions.
Persisting some logs to disk!
failed to store reimport request: %@: %@
failed to mark reimport request %llu as queried: %@
failed to mark reimport request %llu as executed: %@
failed to mark %tu reimport items for %@ as seen: %@
failed to mark reimport item %@/%@ as seen: %@
failed to update reimport uniqueId item from %@ to %@: %@
failed to load unqueried reimport requests: %@
failed to load unseen reimport items for request: %llu: %@
failed to delete reimport requests older than: %@: %@
failed to delete completed reimport requests: %@
failed to delete orphaned reimport items: %@
error during reimportRequestDBStats query of reimportRequests: %@
error during reimportRequestDBStats query of reimportItems: %@
Already registered for activities
Checking in for activity %s
Stub activity called for %s
Activity "%s" has not registered with the system yet. Returning nil.
Ignoring CTS criteria change as it didn't change.
Setting CTS criteria for activity: %@, criteria: %@
_actuallyAddEvents bailing due to nil weakStore
Got error %@ while fetching unique identifiers for mail message ids %@
Error while writing %tu enrichment appends to %@ protection class: %@
Timed out waiting for spotlight to write enrichment appends
JSON decode error loading schemas: %@
SGReverseTemplateJS: Received %@ notification.
SGReverseTemplateJS: Queuing request to free JS context.
SGReverseTemplateJS: Asset version = %lu
SGReverseTemplateJS: List of loaded JS files in context = %@
SGReverseTemplateJS: suppressed process memory warning %lu times
Javascript execution timed out! Backtrace:
SGReverseTemplateJS: initialized JS context.
SGReverseTemplateJS: freeing JS context.
SGReverseTemplateJS: loading %@ in JS context.
JS log: %@
%{public}@
Can't get flightInformation, airlineCode is nil
Can't get flightInformation, flightNumber is nil
Can't get flightInformation, flightDate is nil
Can't get flightInformation, could not parse flightDate
SGReverseTemplateJS: completed initialization of JS context.
Could not load data asset %@: %@
SGReverseTemplateJS flightInformationWithAirlineCode: Can't get flightInformation, airlineCode is nil
SGReverseTemplateJS flightInformationWithAirlineCode: Can't get flightInformation, flightNumber is nil
SGReverseTemplateJS flightInformationWithAirlineCode: Can't get flightInformation, flightDate is nil
SGReverseTemplateJS flightInformationWithAirlineCode: Can't get flightInformation, flightDate is malformed
SGReverseTemplateJS flightInformationWithAirlineCode: bundleIdentifier is undefined.
flightInformationWithAirlineCode flightInformationWithAirlineCode: error when calling CoreParsec for: %@, %@, %@ = %@
SGReverseTemplateJS flightInformationWithAirlineCode: CoreParsec results for: %@, %@, %@ = %@
SGReverseTemplateJS loadJSFromASCIIFile: no file defined.
SGReverseTemplateJS loadJSFromASCIIFile: Error loading JS file %@: %@
Tried to call shouldDownloadFull without JS assets
Called shouldDownloadFull with result = %d
JS exception during shouldDownloadFull: %@.
SGReverseTemplateJS: Calling js for event classification
Tried to call eventClassificationForEntity without JS assets
SGReverseTemplateJS: Called eventClassificationForEntity with result: %@
SGReverseTemplateJS _eventClassificationForEntity: JS Exception during eventClassificationForEntity: %@
SGReverseTemplateJS: Calling JS to resolve candidates
Tried to call resolveCandidatesForJSDict without JS assets
SGReverseTemplateJS: Called resolveCandidatesForJSDict with result: %@
SGReverseTemplateJS: JS Exception during resolveCandidatesForJSDict: %@
SGReverseTemplateJS: Calling JS to get privacy aware logging
Tried to call getPrivacyAwareMlLogs without JS assets
SGReverseTemplateJS: Called getPrivacyAwareMlLogs with result: %@
SGReverseTemplateJS: JS Exception during getPrivacyAwareMlLogs: %@
SGReverseTemplateJS: Calling JS to get flight references and reservation id given text message
Tried to call getFlightReferencesAndReservationId without JS assets
SGReverseTemplateJS: Called getFlightReferencesAndReservationId with result: %@
SGReverseTemplateJS: JS Exception during getFlightReferencesAndReservationId: %@
SGReverseTemplateJS: Calling JS to diff schemas
Tried to call diffSchemas without JS assets
SGReverseTemplateJS: Called diffSchemasArrays with result: %@
SGReverseTemplateJS _diffSchemas: JS Exception during diffSchemasArrays: %@
SGReverseTemplateJS: Calling JS to merge schemas
Tried to call mergeSchemas without JS assets
SGReverseTemplateJS: Called mergeSchemasArrays with result: %@
SGReverseTemplateJS _mergeSchemas: JS Exception during mergeSchemasArrays: %@
SGReverseTemplateJS: Tried to call reverseMapEntity without JS assets
SGReverseTemplateJS: Unable to convert JS taggedCharacterRange to Objective-C
SGReverseTemplateJS: JS Exception during reverseMapEntity %@
SGReverseTemplateJS payloadToOutputWithEntryPoint: Tried to call messageToOutput without JS assets
SGReverseTemplateJS: Calling payloadToOutput with entry point: %@
SGReverseTemplateJS payloadToOutputWithEntryPoint: JS exception during messageToOutput: %@
Loading master domains whitelist from path = %@
Received asset update notification. Now loading master domains whitelist from path = %@
SGDomainWhitelistChecker payloadForDomain: trie is nil.
SGDomainWhitelistChecker payloadWithStartChar: trie is nil.
SGDomainWhitelistChecker isStructuredEventCandidateForEmailDomain: trie is nil.
SGStructuredEventTrialClientWrapper: Updating factors
SGStructuredEventTrialClientWrapper: Unable to load plplist for %@ : %@
SGStructuredEventTrialClientWrapper: Unable to load plplist content for %@: %@
SGStructuredEventTrialClientWrapper: TRILevel is nil for foundInMailNotifications
SGStructuredEventTrialClientWrapper: supportedProviders list loaded with Trial: %@
SGStructuredEventTrialClientWrapper: engineConfig list loaded with Trial: %@
SGStructuredEventTrialClientWrapper: structuredEventInputMapping list loaded with Trial: %@
SGStructuredEventTrialClientWrapper: structuredEventOutputMapping list loaded with Trial: %@
SGStructuredEventTrialClientWrapper: foundInMailNotifications: %@
Unable to change SQLite lookaside configuration.
Could not install hasInhumanTag() sqlite function (rc = %i)
Could not install tagsHaveEscapedTag() sqlite function (rc = %i)
Could not install delimitedString() sqlite function (rc = %i)
Could not install firstStringAfterPrefix() sqlite function (rc = %i)
Sqlite could not install busy timeout. (rc = %i)
Sqlite could not install busy handler. (rc = %i)
unable to set auto_vacuum to INCREMENTAL: %@
Write statement should be run in a write transaction: %s
This query was delayed %0.2f ms waiting for db file locked by another sqlite connection: %s
This query was delayed %0.2f ms waiting for db file locked by another sqlite connection -- unknown SQL
failed to get page_count from db: %@. error: %@
failed to get freelist_count from db: %@. error: %@
Calculating pages to vacuum -- pageCount %tu freeCount %tu
not enough pages to vacuum: pageCount: %lu; freeCount: %lu
failed to get auto-vacuum mode from db: %@. error: %@
Will not vacuum db %@ due to device lock state
Called to vacuum %tu pages
failed to set auto_vacuum to INCREMENTAL for db: %@. error: %@
performing FULL VACUUM to make INCREMENTAL effected for db: %@
failed to vacuum db: %@. error: %@
performing INCREMENTAL VACUUM to free %lu pages with %@ iterations for db: %@
Performing incremental vacuum for %tu pages on iteration %d for total pages to free %tu
failed to incremental vacuum db: %@. error: %@
We have a vacuum activity %@ with activity state %@ after %@ batches
We got back that we should defer the vacuuming activity after %@ iterations and having vacuumed %@ pages with deferral success %@
SGStructuredEventDissector: No sender for mailMessage, bailing
SGStructuredEventDissector: extractionSupported: %@, shadowExtraction: %@, pflTraining: %@
SGStructuredEventDissector: Skipping reverse template dissector: detectStructuredEventsML is OFF and provider is not in whitelist
SGStructuredEventDissector: ignoring email
SGStructuredEventDissector: Entity has no content
SGStructuredEventDissector: Previous dissector found event, bailing
SGStructuredEventDissector: skipping shadowLogging extraction for realtime dissection
SGStructuredEventDissector: eventClassification is nil, bailing
SGStructuredEventDissector: Not classified as event, bailing
SGStructuredEventDissector eventClassification: %@
SGStructuredEventDissector: Preprocessed document is nil
SGStructuredEventDissector: Empty enrichedTaggedCharacterRanges
SGStructuredEventDissector: Event found, adding shadow log
SGStructuredEventDissector: Event found, adding ML log and enrichment
Failed to convert object to JSON: %@
SGStructuredEventDissector: Added enrichment
SGStructuredEventDissector: Missing entities for restaurant extraction: %@
SGStructuredEventDissector: Missing entities for hotel extraction: %@
SGStructuredEventDissector: Missing entities for ticket extraction: %@
SGStructuredEventDissector: Missing entities for car extraction: %@
SGStructuredEventDissector: Missing entities for movie extraction: %@
SGStructuredEventDissector: nil domParserResult
SGStructuredEventDissector: no extraction model inferences.
SGStructuredEventDissector: No name for missing entity
SGStructuredEventDissector: annotateContent: empty content or string passed
SGStructuredEventDissector: annotateContent: nil label passed
SGStructuredEventDissector: annotateContent: Unable to create taggedCharacterRange from result
SGScales: %@ took %f seconds
Retrieved location with latitude and longitude both 0
Retrieved location has one valid and one NaN coodinate
Pruning entities older than %0.2f
Pruning mail intelligence data older than one year
Pruning duplicate event entities from web-pages/interactions
web-page event entity exists on calendar, don't delete: %@
entities to delete %@
Pruning duplicate Event entities: %{public}lu
PseudoReminders to prune (%lu), %@
Pruning NL Events older than %f
NL Event entities to delete (%lu) %@
Deleting Mail Intelligence data for %lu messages
SGRealtimeContactConfidenceFeatureVec: <
  contacts with phone number matches: %i
  contacts with name matches: %i
  contact with both phone and name matches: %i
  Phone number matches an existing contact: %s
  Name matches an existing contact: %s
  Email matches an existing contact: %s
  IM Address matches an existing contact: %s
  Existing contact has address: %s
  Address match with existing contact, if both have addrs: %0.3f
  New phone numbers: %i
  New emails: %i
  New IM addresses: %i
  New addresses: %i
  Length of name: %i
  Name has at-sign: %s
SGInhumanityFeatureVec: <
  Has one or more inhuman-looking headers: %s
  Author email address looks inhuman: %s
  Author name looks inhuman: %s
  Body of email contains inhuman phrase: %s
  Domain is a template sender: %s
SGDetectionNotabilityFeatureVec: <
  Is phone number: %s
  Is address: %s
  In HMM-detected sig: %s
  In DD sig: %s
  How far down the email was this found?: %0.3f
  Phone numbers in sig: %i
  Phone numbers in email: %i
  Addresses in sig: %i
  Addresses in email: %i
SGMISaliencyModel: Loading CoreML model.
SGMISaliencyModel: Loading model from Trial at path: %@
SGMISaliencyModel: Error converting model path to file URL
SGMISaliencyModel: Invalid model path specifeid via Trial configuration.
SGMISaliencyModel: Error while initializing MLModel: %@
SGMISaliencyModel: Finished loading CoreML model.
SGMISaliencyModel: Unable to load SGMISaliencyModelConfig defaultConfig
Error - Couldn't get default saliency model when trying to run inference.
Error while preparing feature vector for mlmodel: dimension mismatch, expecting %@ got %lu
SGMISaliencyModel: Error while initializing MLMultiArray for SGMISaliencyModel inference: %@
SGMISaliencyModel: Error while running SGMISaliencyModel inference: %@
SGMISaliencyModel: Error while parsing SGMISaliencyModel inference.
Given a putative e-mail address with no @
Given a putative e-mail address with no @: %@
Processing event with eventName: %@
failed to load snippet data for entity: %@
Unable to calculate stats from entity table: %@
Unable to count merged pseudocontacts: %@
Unable to calculate stats from serializedContacts table: %@
Unable to count entity_fts: %@
Unable to count details in entity_fts: %@
Unable to count snippets: %@
Unable to count snippets with titles: %@
Unable to count snippets with content: %@
Unable to count tombstones: %@
Unable to count orphaned entities: %@
Unable to dump stats: %@
GroupID lookup found unexpected entity type for contact detail (%@)
registering cache precomputation work with CTS
SGSqlEntityStore cache precomputation due to CTS
serializing contacts due to CTS
Finished updating serialized contacts in %0.3f seconds
pre-calculating CN to SG contact matches due to CTS
all async jobs for cache precomputation are done
dbStats returned nil during reportDbStats
reported db stats to AggD
Failed to report dbStats to AggD: %@
SGDOMParser: Error parsing tcr tags from js
SGGDOMParser: Unable to load WKWebConfiguration
SGDOMParser: datastore is nil
SGDOMParser: Unable to load WebView
SGDOMParser: Loaded HTML Document
SGDOMParser: Nil path for HTMLPreprocessor from asset
SGDOMParser: jsContent nil: %@
Error evaluating JS: %@
_SGDCloudKitSyncPersistedState got invalid class name in property: %@
SGCK Persisted state changed (keyPath: %@, change: %@, self: %@)
SGCK Disabling due to incompatible version
SGCK Operation queue suspended
SGCK Will suspend operation queue for delay: %f
SGCK Resuming operation queue
SGCK Suspending sync due to unsynced keychain: %@
SGCK Resuming sync after suspension due to unsynced keychain
SGCK Delaying for %@ seconds (error: %@)
SGCK CloudKit framework recommends retry without delay for error: %@
SGCK addDeleteZoneOperation - Skipping because of out of date software
SGCK addDeleteZoneOperation - Returning operation already in flight
SGCK addDeleteZoneOperation - Adding new operation to operation queue
SGCK addDeleteZoneOperation - Operation completed with error: %@
SGCK addDeleteZoneOperation - Operation completed successfully
SGCK addDeleteZoneAttemptOperationWithRetries:%lu
SGCK Ran out of retries for delete zone operation with network failure: %@
SGCK Unrecoverable error for delete zone operation: %@
SGCK addCreateZoneOperation - Skipping because of out of date software
SGCK addCreateZoneOperation - Returning operation already in flight
SGCK addCreateZoneOperation - Adding new operation to operation queue
SGCK addCreateZoneOperation - Operation completed with error: %@
SGCK addCreateZoneOperation - Operation completed successfully
SGCK addCreateZoneAttemptOperationWithRetries:%lu
SGCK addCreateZoneAttemptOperationWithRetries:%lu - SUCCESS (zone created or already exists)
SGCK got PCS user identity unknown error while creating zone. Running processStateChanges just to be sure we didn't miss anything.
SGCK aborting create zone because out of retries for retry-able error: %@
SGCK Unrecoverable error for create zone operation: %@
SGCK addManateeSanityCheckOperation - Skipping because of out of date software
SGCK Creating Manatee health check operation...
SGCK Manatee health check returned without errors
SGCK Operation error during Manatee sanity check: %@
SGCK Missing Manatee identity detected during sanity check. Deleting-and-then-re-creating zone... (record zone error: %@)
SGCK addProcureSaltOperation - Skipping because of out of date software
SGCK addProcureSaltOperation - Returning operation already in flight
SGCK addProcureSaltOperation - Adding new operation to operation queue
SGCK addProcureSaltOperation - Operation completed with error: %@
SGCK addProcureSaltOperation - Operation completed successfully
SGCK addProcureSaltAttemptOperationWithRetries:%lu
SGCK Will recreate zone and try to procure salt again (error: %@)
SGCK Using existing salt record found on server
SGCK Zone missing while procuring salt: %@
SGCK Will attempt to create zone and then try procuring salt again
SGCK Unrecoverable error while procuring salt: %@
SGCK Successfully procured Manatee salt with atomic reference name %@
SGCK procuredSaltRecord missing critical fields (se=%@, a=%@)! This should not be possible and no recovery path is implemented. CloudKit writes will fail.
SGCK addFetchNewEntitiesOperation - Skipping because of out of date software
SGCK addFetchNewEntitiesOperation - Deferring because not ready for new entities.
SGCK addFetchNewEntitiesOperation - Returning operation already in flight, changing value of _requestedFetchNewEntitiesWhileRequestAlreadyInFlight from %@ to YES
SGCK addFetchNewEntitiesOperation - Adding new operation to operation queue
SGCK addFetchNewEntitiesOperation - Operation completed
SGCK addFetchNewEntitiesAttemptOperationWithRetries:%lu
SGCK ignoring fetched new entities because we are not in a sync enabled state
SGCK ignoring record zone completion block because we are not in a sync enabled state
SGCK Storage was not ready. Will sync again when it's purportedly available.
SGCK Giving up on fetching new changes because out of retries for error: %@
SGCK Change token expired (error: %@)
SGCK Will try fetching again without change token
SGCK Giving up on fetching changes due to unrecoverable error %@
SGCK Fetching more entities from server for these reasons: [%@] Server indicated more entities are coming, [%@] Client was asked again to fetch more entities while this request was already in-flight
SGCK Finished requesting more entities from server.
SGCK addWriteOperationForRecordGetter - Skipping because of out of date software
SGCK Failing to write entity due to unrecoverable error: %@
SGCK Adding and waiting for zone creation before writing entity.
SGCK Adding and waiting for salt procurement before writing entity.
SGCK Will write entity records: %@, delete entity records: %@, retries remaining: %lu
SGCK Will recreate zone and salt and try to write record again (error: %@)
SGCK Zone missing while trying to write or delete record. Setting _noZone flag.
SGCK Retrying after zone missing error
SGCK Not retrying because there is nothing to write.
SGCK Salt atomic reference check failed while trying to write record. Calling failSalt.
SGCK Retrying after salt missing reference error.
SGCK Will wait for in-progress procure salt operation before writing or deleting an entity
SGCK Will wait for in-progress create zone operation before writing or deleting an entity
SGCK Instantiating +[SGCK sharedInstance]
SGCK Running configuration block via +[SGCK sharedInstance] (the configuration block was specified prior to sharedInstance being called for the first time)
SGCK Configuration block has completed from within +[SGCK sharedInstance]'s first invocation. Setting the block to nil.
SGCK No configuration block has been specified before the first invocation of +[SGCK sharedInstance]. If a configuration block is set later on, it will be run immediately.
SGCK Setting configuration block...
SGCK The shared instance already exists, so the configuration block will run immediately.
SGCK Done running the completion block immediately from +[SGCK setSharedInstanceConfigurationBlock:]
SGCK The shared instance doesn't exist yet, so the configuration block won't run until it's instantiated.
SGCK Will add CK operation to queue: %@
SGCK added %lu operations to queue (pending operation count: %lu)
SGCK Existing persisted state was saved but could not be deserialized.
SGCK No persisted state exists for this user.
SGCK Creating new persisted state.
SGCK Discarding non-manatee salt
SGCK Already processing state changes -- will re-process again once complete.
SGCK Already processing state changes and re-processing once complete already scheduled as well.
SGCK Re-processing state changes because a request came in while this one was in progress...
SGCK processStateChanges -- failing salt because !supportsDeviceToDeviceEncryption
SGCK System State Change: Sync %@ --> %@
SGCK About to invoke _deleteAllSyncedItemsCallback from background queue...
SGCK Finished invoking _deleteAllSyncedItemsCallback on background queue. Now hopping back onto _queue...
SGCK Entering sgckQueueBlock.
SGCK deleteAllSyncedItemsSucceeded == YES
SGCK deleteAllSyncedItemsSucceeded == NO. Will defer a processStateChanges.
SGCK About to hop on to background queue to invoke _deleteAllSyncedItemsCallback
SGCK Skipping background queue block because _readyForNewEntities is false.
SGCK Creating subscription in response to state change
SGCK Will fetch new entities in response to state change
SGCK Set new persisted state.
SGCK accountChanged:%@
SGCK accountChanged: - existing future is complete. Setting to nil.
SGCK accountChanged: - existing future is in-flight. Creating a new request...
SGCK accountInfo - returning existing SGFuture
SGCK accountInfo - completionHandler - %@, %@
SGCK accountInfo - completionHandler - received error and/or failed to get account info: %@, %@
SGCK accountInfo - completionHandler - completing future
SGCK accountInfo - completionHandler - ignoring result because a newer request is in flight
SGCK accountInfo - Scheduling call to CloudKit (already one in flight: %@)
SGCK accountInfo - Calling CloudKit (-[CKContainer accountInfoWithCompletionHandler:])
SGCK should remove events from EK because there is no primary iCloud Calendar account
SGCK Going to request account info to determine whether events should be removed from EK...
SGCK Received account info, decision on whether to remove events from EK: %@ (error: %@)
SGCK Got APS environment string: %@ (error: %@, container: %@)
SGCK Error when getting preferred push env. Defaulting to prod instead. Error: %@
SGCK Going to create subscription (retries: %lu)
SGCK Setting hasSubscription persisted flag because new subscription was created successfully
SGCK Setting hasSubscription persisted flag because duplicate subscription already exists on server. This should only happen after a suggest_tool reset.
SGCK Error while attempting to create subscription: %@
SGCK Will re-attempt subscription creation
SGCK Got database: %@, container: %@
SGCK device does not have a subscription. Checking eligibility before creating one...
SGCK Device is eligible. Creating subscription via setDatabase: path...
SGCK actually creating subscription via setDatabase path...
SGCK setDatabase: not going to create subscription because something else created it...
SGCK backfill via setDatabase: path...
SGCK device account (or lack thereof) is not eligible -- not creating subscription
SGCK APS (APNS) Environment: %@
SGCK Error getting APS environment string -- APNS will not work!: %@
CloudKit database %@ has nil container, therefore cannot get APS environment strong and APNS will not work.
SGCK Handling primary iCloud Calendar account change (%@ --> %@)
SGCK addEntity:%@ %@
SGCK addEntity: - ignoring because groupId is nil
SGCK Not adding entity to CloudKit because current state prohibits syncing
Begin: Transmitting Calendar Event
End: Transmitting Calendar Event
SGCK deleteGroupId:%@
SGCK deleteGroupId: passed nil groupId...returning...
SGCK Not deleting entity from CloudKit because current state prohibits syncing
Begin: Transmitting Confirm/Reject Of Calendar Event
End: Transmitting Confirm/Reject Of Calendar Event
SGCK setReadyForNewEntities:%@
SGCK ignoring because readyForNewEntities == _readyForNewEntities
SGCK processing deferred state changes...
SGCK no deferred state changes
SGCK processing deferred sync...
SGCK no deferred sync
SGCK deleteStorageEvent failed because no group id
SGCK privacySalt ensuring not already on _queue...
SGCK privacySalt immediately returning empty NSData because [SGPreferenceStorage useManateeSaltForHistory] is false
SGCK privacySalt about to dispatch_sync to _queue
SGCK privacySalt is now on _queue
SGCK privacySalt reusing existing future
SGCK privacySalt is resolving to empty data because CKErrorIncompatibleVersion was previously encountered, indicating that the server no longer supports syncing with this software version
SGCK privacySalt about to wait on accountInfoFuture
SGCK privacySalt finished waiting on accountInfoFuture
SGCK privacySalt error retrieving account info: %@
SGCK privacySalt resolving to empty data because iCloud account is restricted (parental controls, etc)
SGCK privacySalt resolving to empty data because there is no iCloud account
SGCK privacySalt resolving to empty data because device-to-device encryption is not supported
SGCK privacySalt succeeded (using existing known salt)
SGCK privacySalt will procure new salt
SGCK privacySalt succeeded (using newly procured salt)
SGCK privacySalt tried to procure salt, but salt is nil even though self->_procureSaltError is also nil
SGCK privacySalt tried to procure salt, but an error occurred: %@
SGCK privacySalt future did not complete synchronously; will store future in _privacySaltFuture for reuse
SGCK privacySalt future asynchronously completed, will set _privacySaltFuture to nil
SGCK privacySalt outcome: %@ result, %@ error
SGCK connection:%@ didReceiveToken:%@ forTopic:%@ identifier:%@
SGCK connection:%@ didReceivePublicToken:%@
SGCK connection:%@ didReceiveIncomingMessage:%@
SGCK Got an APNS notification, but not syncing because sync is currently disabled.
SGCK Will fetch new entities for incoming message
SGCK connection:%@ didSendOutgoingMessage:%@
SGCK connection:%@ didFailToSendOutgoingMessage:%@ error:%@
SGCK connection:%@ didChangeConnectedStatus:%@
SGCK connectionDidReconnect:%@
SGCK confirmEventFromThisDevice
SGCK confirmEventFromOtherDevice [IGNORED]
SGCK rejectEventFromThisDevice
SGCK rejectEventFromOtherDevice [IGNORED]
Could not register for CNContactStore change history due to: %@
Could not unregister from CNContactStore change history due to: %@
Could not open chat length estimator at %@: %s (errno %i)
Could not mmap chat length estimator file at %@: %s (errno %i)
Chat length estimator reached max size. Clearing.
Error accessing boolValue. numberValue is nil
Error accessing floatValue. numberValue is nil
Error accessing doubleValue. numberValue is nil
Error accessing intValue. numberValue is nil
Error accessing integerValue. numberValue is nil
SGCK Skipping unsupported CloudKit record (record created by version: %@, version required to process record: %@, version running on this device: %@)
SGCK Reading pre-Manatee CloudKit record.
SGCK Error: Record version higher than 3 did not contain parent entity type.
SGCK Error: Record with type interaction is missing interaction info.
SGCK Error: Record with type interaction is missing interaction bundle id.
SGCK Error: Record contained unsupported entity type %lld
SGCK error decoding schema.org plist: %@
SGCK Error decoding schema.org plist: %@
SGCK Error decoding metadata plist: %@
SGCK Error serializing schema.org to plist: %@
SGCK error converting schema.org to plist.
SGCK Error serializing event metadata to plist: %@
SGCK Error converting event metadata to plist.
SGCK Reservation item reference value was nil for interaction entity
SGContactSharingModel - Invalid model config for path: %@
SGContactSharingModel - Could not find transformer instance for language: %@
SGContactSharing Model - Could not initialize featurizer and sessionDescriptor from config.
contact.significance property is true. skipping all other check.
Contact is significant: Found in bloom filter (email)
Contact is significant: Found in bloom filter (phone)
Sender isn't in bloom filter, checking recents
Contact is significant: Found in recents
Contact is significant - VIP email address
Contact is not significant
Contact is not significant, but selecting anyway due to preference setting
Contact is significant: Update to curated contact
Realtime contact is not significant, but selecting anyway due to preference setting
Email Address is significant: Found in bloom filter
Email Address is significant: Found in recents
Email Address is not significant
Handle is significant: Found in bloom filter
Handle is significant: Found in recents
Handle is not significant
Looking up in custom tester function instead of actually hitting recents
Unable to search recents; error: %@
Email was not found in recents
Found email in recents
SGTokenDistanceMappingTransformer: index=%lu, count=%lu
SGDSuggestManager: Mail: Asked for suggestions for a searchable item without headers dictionary or source, returning 0 suggestions
SGDSuggestManager: Mail: Not providing suggestions for searchable item that is spam.
SGDSuggestManager: Mail: Skipping suggestions for searchable item that is in trash.
SGDSuggestManager: Messages: suggestionsFromMessage: %@ : %@ options: %tu completionDelivery: %tu
suggestionsFromMessage ignoring item since the bundle is disallowed by user's settings
suggestionsFromMessage ignoring item since the domainIdentifier (conversationIdentifier) is nil
suggestionsFromMessage ignoring item since the textContent is nil
suggestionsFromMessage consolidating repeated item with previous request
SGDSuggestManager+RealtimeDonations: error donating message to ProactiveHarvesting: %@
SGDSuggestManager: Messages: _suggestionsFromMessage: Got message with no authors. Ignoring.
SGDSuggestManager: Messages: _suggestionsFromMessage: Got message with no domainIdentifier (conversationIdentifier). Ignoring.
SGDSuggestManager: Messages: _suggestionsFromMessage: Got message with no content protection type defined. Will not dissect..
SGDSuggestManager: realtimeSuggestionsForMailOrMessageWithHash: %@ : %@
Existing valid dissection found in store.
Existing dissection found in store, but HTML does not match.
Entity not harvested, but I was told not to dissect.
SGDSuggestManager: starting dissection.
Plugins finished processing message: %@
Timed out waiting for async realtime harvest work
SGDSuggestManager - Getting realtime events for dissected entity [SGEntity %{public}@]
  -> Event [SGEvent %{public}@] in state %i
    -> %@
Found %i realtime events
Getting realtime contacts for dissected entity
Found %i realtime contacts
Entity %@ -> SGReminder %@
SGDSuggestManager: validating cached results
filtering out suggestion that has already been acted on according to history
filtering out suggestion for business chat text
SGSuggestManager validateResultsvalidateResults: DKIM verification resulted in failure: %@
SGSuggestManager validateResultsvalidateResults: Successfully verified DKIM signature.
SGDSuggestManager: realtimeSuggestionsForMailOrMessageWithHash: %@: results: %@
SGDSuggestManager: Filtering out previously engaged reminder
SGDSuggestManager: Filtering out duplicate reminder
SGDSuggestManager: Filtering past Reminder
SGMessageEventDissector: Skipping Message Event dissector: allowMessageEventDissector is OFF
SGMessageEventDissector: Skipping Message: Message is not classified as %@ type by the Event-Classifier.
SGMessageEventDissector: Skipping Message: Exceeded Rate Limit
SGMessageEventDissector: Message is potential event message, dissecting to extract events
SGMessageEventDissector: Unable to fetch Event Extraction Assets from TRIAL, bailing
SGMessageEventDissector: Unable to fetch events from MLRuntime, bailing
SGMessageEventDissector: Unable to find MA path for EventClassifier model
SGMessageEventDissector: EventClassifier Model Path: %{private}@
SGMessageEventDissector: Unable to find MA path for MLEventExtractionAssets
SGMessageEventDissector: MLEventExtractionAssets Path: %{private}@
SGMessageEventDissector: Adding Enrichment: %@ to entity:%@
SGMessageEventDissector: Could not extract event deatils from event dictionary: %@ for entity: %@
SGMessageEventDissector: Fetching events from ML Runtime Plugin com.apple.eventMetaDataExtractor.eventMetaDataExtractorPlugin eventExtractionAssetsPath: %{private}@
SGMessageEventDissector: MLRuntime Plugin Task failed with error:  %@
SGMessageEventDissector: MLRuntime Plugin task timeout
SGMessageEventDissector: ML Runtime failed to return events information, bailing
SGMessageEventDissector: Using fallback schema for generic event for category: %@
SGMessageEventDissector: Missing entities for message event extraction: %@
SGMessageEventDissector: Unable to load Event Classifier Model. Model Path does not exist
SGMessageEventDissector: Unable to load Event Classifier Model: %@
SGMessageEventDissector: Unable to convert ML Model to NL Model: %@
SGMessageEventDissector: No name for missing entity
SGMessageEventDissector: airlineCode or flightNumber or departureDateTime not found, bailing
SGMessageEventDissector: No flight information found, bailing
SGMessageEventDissector: No flight information for departure date:%{private}@ & departureLocation:%{private}@ found, bailing
SGMessageEventDissector: Message classification by Event-Classifier: %@ (Score: %.02f)
SGCoalescingDropbox %s unable to extend transaction TTL.
Failed to construct DDScanner: %@
SGDataDetectors: data detection: %@
Failed to decode socialProfileData: %@
Attempt to write entity to DB returned entityId 0
Skipping event pending geocode.
Attempt to write enrichment to DB returned enrichmentId 0
Skipping non-event enrichment
Number of event entities to journal: %lu
Writing Entity: %@
invalid serialization found in _prunePseudoContactGeneratingEmails: %@
nil key found in emailMetadata
Removing pendingVerification flag from %@
Error removing pendingVerification flag from %@: %@
Writing %lu event entities to journal. [SGEvent (%{public}@)]
Writing reminder to journal
Trying to write multiple reminders to journal, this is not supported
Writing event to journal
Writing contact to journal
While writing blobs, unexpected missing entity ids
Expected the new mergedContact record Id %@ to be %@:
Writing identity blobs
IdentityStore: Writing deletes for %@
IdentityStore: Newly created contacts %@
IdentityStore: Forced update of contacts %@
HMM confused, too many tokens in signature
HMM confused, too much quoting in signature
Skipping signature dissector: detectContacts is OFF
Signature found by DataDetectors.
Signature found by alternative algorithms.
Sig range %lu-%lu (%@)
No signature found
Tagging as inhuman after adjusting range: Signature pattern
Ignoring signature after adjusting range: Inhuman pattern.
Can't meaningfully call shouldIgnoreSignature with a signature that starts after the content.
Can't meaningfully call shouldIgnoreSignature on an entity with no detected signature.
Tagging as inhuman: Signature pattern
Ignoring signature: Inhuman pattern.
Ignoring signature: Valediction after signature.
Ignoring signature: Recipient's name (composite).
Ignoring signature: Recipient's name (first last).
Ignoring signature: Recipient's name (last first).
Ignoring signature: Recipient's phone.
Ignoring signature: Recipient's postal.
Ignoring signature: Recipient's email.
Ignoring signature: Sender's name unavailable.
Ignoring signature: No sender's name or email.
Ignoring signature: Anti pattern.
Ignoring signature: Sender's name after sig.
Not ignoring signature.
Could not fetch filesystem path for HMM
Could not load HMM data: %@
Failed to insert serialized contact: %@
Failed to insert serialized contact placeholder: %@
Failed to delete serialized contact: %@
Unexpected error while deserializing contact: %lld
Unexpected error while deserializing contact%lldld
Failed to load all serialized contacts: %@
Writing placeholder for contact id: %lli
Could not defer activity
serialized contact precomputation deferring
done serializing new contacts
done trimming serialized contacts
SGUnarchiver: unable to open non-file URL %@.
SGUnarchiver: unable to open file %@ - %{public}s.
SGUnarchiver: unable to close file descriptor %{public}d for %@ (leaking) - %{public}s.
SGUnarchiver: unable to close archive_read - %{public}s.
SGUnarchiver: unable to open archive_read - %{public}s.
SGUnarchiver: archive_read unable to set supported formats - %{public}s.
SGUnarchiver: archive_read unable to set supported compression formats - %{public}s.
SGUnarchiver: unable to free archive_read (leaking) - %{public}s.
SGUnarchiver: failed to create directory at %@ - %@.
SGUnarchiver: unable to resolve physical path for destination path %@ - %s.
SGUnarchiver: archive_read_next_header failed - %{public}s.
SGUnarchiver: archive_entry with no path encountered.
SGUnarchiver: archive_entry with absolute path encountered...ignoring leading %zu of %zu bytes.
SGUnarchiver: archive_entry with no path after sanitization encountered.
SGUnarchiver: archive_write_header failed - %{public}s.
SGUnarchiver: archive_write_finish_entry failed - %{public}s.
SGUnarchiver: unable to close archive_write_disk - %{public}s.
SGUnarchiver: unable to free archive_write_disk (leaking) - %{public}s.
SGUnarchiver: archive_write_disk unable to set lookup functions - %{public}s.
SGUnarchiver: archive_write_disk unable to set options - %{public}s.
SGUnarchiver: archive_read_data_block failed - %{public}s.
SGUnarchiver: archive_write_data_block failed - %{public}s.
SGReminderMessage: No VB in actionVerbIndexRange
SGReminderMessage: No NN, NNP in objectCoreIndexRange
SGReminderMessage: Title has too many characters
SGReminderMessage: No whitelisted action verb or particle actionVerbTokenIndexes
SGReminderTrialClientWrapper: Updating factors
SGReminderTrialClientWrapper: TRILevel is nil for confirmationOptional
SGReminderTrialClientWrapper: TRILevel is nil for triggerOptional
SGReminderTrialClientWrapper: TRILevel is nil for actionVerbOptional
SGReminderTrialClientWrapper: TRILevel is nil for messagesBannerLimit
SGReminderTrialClientWrapper: confirmationOptional: %@
SGReminderTrialClientWrapper: triggerOptional: %@
SGReminderTrialClientWrapper: actionVerbOptional: %@
SGReminderTrialClientWrapper: messagesBannerLimit: %@
SGReminderTrialClientWrapper: reminderOverrides list loaded with Trial: %@
SGReminderTrialClientWrapper: reminderEnrichments list loaded with Trial: %@
SGReminderTrialClientWrapper: reminderInputMapping list loaded with Trial: %@
SGReminderTrialClientWrapper: reminderOutputMapping list loaded with Trial: %@
empty string found in nickname data for: %@
dropping query token that cannot be encoded as utf-8 (utf-16 LE repr: %{private}@)
Could not load duplicate key with record id %@
Could not load event with record id %@
Unable to load entity from database
failed to load snippet data for email entity: %lld
Unable to load entity by recordId: %@
Failed to retrieve PMLTraining singleton
DataDetector is not a definitive match: Anti-pattern.
DataDetector is not a definitive match: Not in definitive phrase.
Ignoring DataDetector match: Too many phones in signature.
Ignoring DataDetector match: All-digit phone without label in signature.
Ignoring DataDetector match: Log line in signature.
Ignoring DataDetector match: Too many postal addresses in signature.
Ignoring DataDetector match: Inhuman email address in signature.
Ignoring DataDetector match: Email address with colon at end of line in signature.
Ignoring DataDetector match: Email address with date or time in line in signature.
Ignoring DataDetector match: Email address in signature is close match to List-Id header.
unifiedContactWithIdentifier failed to generate date for birthday.
unifiedContactWithIdentifier for %@ failed with error %@
No contact identifier for %@
Birthday: Text message has no conversation identifier
Birthday: Entity with type SGEntityTextMessage has invalid message date
Birthday: processing is disabled for group messages
RKAttributedTokenBirthdayType not found for message: %@
SGDetectedAttributeDissector: getResponsesForBirthdayExtractionFromMessage: text message has nil textContent: %@
No responses found for message: %@
Self-id: Text message has no conversation identifier
Self-id: processing is disabled for group messages
Self-id: processing is disabled for business chat
Self-id: No domain identifier found for message: %@
Self-id: ignoring message far in thread (position: %i >= %i)
Self-id: No likely language prediction for conversation
Self-id: text length too long
SelfIdFeaturizations
Self-id: doesn't look for self id if message has a display name
Self-id: updating pseudo-contact entity with name length: %tu
Self-id: Could not find author-pseudocontact to augment with text message self-identification.
Unexpected Contact detail found in forwarded or inhuman text message: %@ %@
Skipping DetectedAttribute dissection: No author.
Skipping DetectedAttribute dissection: Inhuman sender.
Skipping DetectedAttribute dissection: warm up message.
Start
Training quick responses.
Not training quick responses since conversation history is nil.
Completed
TrainQuickResponses
Skipping DetectedAttribute dissector: detectContacts is OFF
Detections: %@
Skipping DetectedAttribute dissection: too many phone numbers (%i, limit %i)
ContactSharingNegativeExample
Ignoring DataDetector match: Blocked phone number.
Ignoring DataDetector match: Quoted region.
Processing low quality phone number match for ML supervision and metrics; detections to be discarded.
Ignoring DataDetector match: Low quality phone number match.
Detected attribute (sig/*): '%@'
Detected attribute (body): '%@'
Detected attribute (ml): '%@'
ContactSharingPositiveExample
SGEspressoModel - Invalid model config: %@
SGEspressoModel - Could not initialize PMLMultiLabelEspressoClassifier: %@
SGEspressoModel - Invalid sessionDescriptor in config: %@
SGExtractionModelCoreMLWrapper: Inconsistent MLFeatureProvider passed
SGTrialClientWrapper: Unable to fetch experimentId, deploymentId, treatmentId
SGTrialClientWrapper: Unable to fetch rolloutIdentifiers
SGReminderTrialClientWrapper: Unzipping model override at path: %@
SGReminderTrialClientWrapper: unable to fetch origin path.
SGReminderTrialClientWrapper: Cannot move model to %@. Error %@
SGReminderTrialClientWrapper: Error while unzipping the model override.
SGReminderTrialClientWrapper: Model override is already in uncompressed at path: %@
SGReminderTrialClientWrapper: No file found at source path: %@
Unable to the source data from file URL: %@. (Error: %@)
SGReminderTrialClientWrapper: Couldn't delete model override file: %@
CNContact cache miss
Found %lu prematched contacts in CNContact cache
Encountered a NULL cnContactIdentifier in cnContactsToSgContacts
cnContactMatchesForRecordId received recordId from wrong table: %@
Popped CN2SG job: %@
CN2SG Over 100K unique rows in cnContactsToSgContactsCacheJobs -- will not enqueue a batch
Clearing entire CN2SG job queue
start updating CNContact matches
%lu contact matches found for %@
Failed to confirm Contact: %@
CN Contact precomputation deferring
done updating CNContact matches
Failed to enumerate CNContactStore: %@
Do/did we need a full CN to SG sync? %@
Will set full CN to SG sync completed.
CNChangeHistoryResult truncated: %d , %@
Performing full sync with CNContactStore
Performing delta sync with CNContactStore
Could not enumerate CNContactStore change history due to: %@
refreshSuggestionsContact begin coalescing drop box handler with %tu SGStorageContacts: %@
refreshSuggestionsContact timed out waiting for spotlight
refreshSuggestionsContact will enqueue CNContactIdentifier batch of size %tu (from %tu SGStorageContact's): %@
refreshSuggestionsContact end coalescing drop box handler
refreshSuggestionsContact added %@ storage contact %@
refreshSuggestionsContact running immediately due to large number (%tu) of enqueued items
refreshSuggestionsContact coalescing box size: %tu
SG2CN query for contact %@:
SG2CN found identifier: %@
SG2CN error: %@
SG2CN all found identifiers: %@
SGHarvestQueueMetrics
Suggestions entity store cannot be opened before first unlock
entity store is known to have a future schema. Giving up on store initialization.
Attempting to instantiate the shared default store
Attempting to instantiate the shared harvest store
failed to initialize database at path %@: %@
device locked during db initialization
Integrity check detected corrupt database, attempting to reinitialize.
unable to initialize entity DB
unable to initialize snippets DB
corruption marker is present, recreating db
entity store is migrating
entity store already migrated. Not migrating again.
Detected corrupt database, attempting to reinitialize.
unable to recreate entity DB
unable to recreate snippets DB
entity store did not try to migrate but a migration is needed
migrator found mismatched versions or is in an unrecoverable state, performing corruption recovery
Future db schema detected. Entity store cannot be initialized.
entity store could not migrate databases, bailing out.
entity store initialization flags: isEphemeral:%d executeJournals:%d noMigrate:%d
failed to initialize one or more databases/journals. We cannot continue.
store %@ going deallocating
entity store failed to recreate database during corruption recovery: %@
failed to remove corruption marker
Clearing caches in SGEntityStore
#NoDetailCache Removing other detail...
#NoDetailCache Adding other detail...
#NoDetailCache 10,001 items in _otherDetailsWithNoContact. Removing least recently accessed item...
#NoDetailCache Other detail found
#NoDetailCache Other detail not found
#NoDetailCache Clearing %lu other details
Getting e-mails pending verification
key in emailMetadata was nil
Could not create SGEmailKey for key %@
Error finding e-mails pending verification: %@
Found %lu e-mails pending verification
_enumerateContactsForMasterEntityIds aborting enumeration
Loaded %tu contacts
Got more than %lu results for query. Giving up.
Matched %lu contacts
rankSGContacts: target CNContact is missing required keys
Skipping match because it contains no suggestions: %@
After filtering, %lu contacts
Tried to get contacts with empty messaging prefix.
%lu contacts loaded
Got %llu FTS tokens, truncating to first %i
got out of bounds token range: %@ in UTF8 of size %tu
tokenizer size mismatch
something went wrong while getting tokenizer: %@
Could not parse createQuery %@
Matched %tu contacts
Error retrieving curated contacts: %@
suggestContactByRecordId received recordId from wrong table: %@
Failed to retrieve fieldValues from confirmedFieldValues
Loaded %lu suggested events from %f to %f (max %lu)
Returning %lu suggested events after filtering
Couldn't load event with given duplicate key
Couldn't confirm field values for duplicateKey not in entity table
Confirming details as workaround for Contacts search for realtime contact %@
Could not load event to confirm (recordId=%@)
Could not load event to reject (%@)
Invalid base64encoded string for tag %@
Nil serializedEntityKey found in entityTags
Corrupt database file moved to "%@".
Unable to move corrupt database file to "%@": %@
SGExtractionDissector: XPC error %@
The same origin and destination: %@ (template: %@, short %@)
SGExtractionDissector - groupId is empty. Unable to create Duplicate keys
Failed to process event suggestion 
 reservation start date components invalid.
Couldn't parse date: %@ (template: %@, short %@)
Invalid airport latitude or longitude. Asset version: %lu
Failed to process event suggestion 
 reservation end date in the past.
SGExtractionEntity entityForOutputItem: Event in the past, processing stopped.
Could not create tag from NSUserActivity %@
found forward or reply header in email
Skipping reverse template dissector: contentLen = %llu > %i
[SGPipelineEnrichment (%{public}@)] -> [SGEvent (%{public}@)]
SGPipelineEntity: Starting dissection of mail [SGSimpleMailMessage (%{public}@)], [SGPipelineEntity (%{public}@)]
SGExtractionDissector dissectMailMessage: Skipping reverse template dissector: detectStructuredEvents is OFF.
SGExtractionDissector dissectMailMessage: Not dissecting because ML extraction is on. [SGPipelineEntity (%{public}@)]
SGExtractionDissector dissectMailMessage: Ignoring email, forward or reply detected. [SGPipelineEntity (%{public}@)]
SGExtractionDissector dissectMailMessage: HTML content exceeding max length. [SGPipelineEntity (%{public}@)]
Found cached event classification for email %{public}@
SGExtractionDissector dissectMailMessage: Not extracting event(s) from e-mail because shouldDownloadFull returned false. [SGPipelineEntity (%{public}@)]
SGExtractionDissector dissectMailMessage: Email is not fully downloaded. Requesting full download. [SGPipelineEntity (%{public}@)]
Skipping reverse template dissector: detectStructuredEvents is OFF
SGExtractionDissector: Not dissecting because ML extraction is on
SGExtractionDissector: Starting dissection of interaction [INIteraction (%{public}@)], [SGPipelineEntity (%{public}@)]
SGExtractionDissector dissectInteraction: Skipping reverse template dissector: detectStructuredEvents is OFF
SGExtractionDissector dissectInteraction: Not dissecting because ML extraction is on
SGExtractionDissector dissectInteraction: Could not convert INInteraction (%@) to schema
JS Extraction Status: Template exception %{public}@, in template: %{public}@ (%{public}@). [SGPipelineEntity (%{public}@)]
JS OUTPUT for [SGPipelineEntity (%{public}@)]: %lu output(s). Asset version: %{public}@. Device locale: %{public}@. Document type: %{public}@. Contains schemaOrg?: %{public}@. Bundle ID: %{public}@
JS template match: %@ shortName:%@. [SGPipelineEntity (%{public}@)]
[SGEntity (%{public}@)] - Complete JS output: %@
[SGPipelineEntity (%{public}@)] -> [SGPipelineEnrichment (%{public}@)]
JS Extraction Status: Event. [SGPipelineEntity (%{public}@)]
JS outputItem for enrichment [SGPipelineEnrichment (%{public}@)]: LocationType: %@. Geocoding Mode: %@. isAllDay?: %@. Output Usecase: %@. Output Category: %@.
JS Extraction Status: Output Exception %@. [SGPipelineEntity (%{public}@)]
SGExtractionDissector: Starting dissection of webpage (%{private}@). [SGPipelineEntity (%{public}@)]
SGExtractionDissector dissectURL: Webpage processing stopped: HTML content exceeding max length. [SGPipelineEntity (%{public}@)]
SGExtractionDissector dissectURL: SGOutput is null. [SGPipelineEntity (%{public}@)]
SGExtractionDissector: no bundle identifier identified
SGExtractionDissector: no record found for bundle id %@:%@
Error loading model config during incremental submodel update
SGMISubmodelsManager: Updating Submodels
SGMISubmodelsManager is not allowed to run during the next %.0f seconds.
SGMISubmodelsManager received signal to not continue, stopping at day %lu of %lu
SGMISubmodelsManager processed %lu emails in this session (corresponding to %lu / %lu days) and should stop. Next training will be possible in %.0f seconds
SGMISubmodelsManager performed incremental update of %lu mails. Model had a precision of %.2f%% and a recall of %.2f%% on them.
SGMISubmodelsManager: Starting purge of deleted emails references
SGMLISubModelUpdater: Number of email addresses to validate: %lu
SGMISubmodelsManager: Failed to map email address feature %@ to MDIAttribute
SGMISubmodelsManager: Emails to delete for %@: %lu
SGMISubmodelsManager lost Spotlight connection (device got locked)
Purging deleted emails references took %f seconds
SGMISubmodelsManager: Clearing all tokens from submodel token store that haven't been since %@ or earlier
SGMISubmodelsManager: No prior model version data. Not processing as version change.
SGMISubmodelsManager: Current model version data is not set. Is OTA / Trial configuration for both inference and ground truth versions correct? Not processing as version change.
SGMISubmodelsManager: Ground truth model version updated from %@ to %@. Purging all stateful data.
SGMISubmodelsManager: Inference version updated from %@ to %@ without change in ground truth model version. Retaining submodels and setting all saliency scores to 0.
SGMISubmodelsManager: No version update to process.
SGMISubmodelsManager: Invalid min counts requirements in SGMISaliencyModelConfig.
SGMINicknameManager: Processing mails sent %tu days ago
SGMINicknameManager: A match got identified in a mail from ~%tu days ago: %{sensitive}@ -> %{sensitive}@.
SGMINicknameManager received signal to not continue after processing mails sent %tu days ago
No extraction for %d:%@ = %@
SGMIWarningsConfig: Invalid attachmentLinkDetectionRegex (%@).
SGMIWarningsConfig: Error, unable to get attachmentDetectionRegexes from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get attachmentLinkDetection from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get conservativeRecipientDetection from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get recipientConservativeDetectionRegexes from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get recipientDetectionRegexes from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get nicknameDetectionRegexes from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get followUpOnOutgoingMailsQuestionsDetectionRegexes from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get followUpOnOutgoingMailsAsksDetectionRegexes from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get followUpOnIncomingMailsDetectionRegexes from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get followUpWarningsParameters from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get bodyAnalysisSamplingFactor from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get defaultTimeIntervalToStartWarningExposition from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get defaultTimeIntervalForAWarning from SGMITrialClientWrapper.
Follow Up. [SGMIFeatureVector] emMessage %{sensitive}@ loaded for messageId %@.
Follow Up. [SGMIFeatureVector] searchableItem %@ loaded for messageId %@.
Error accessing the searchable item associated with messageId: %@
SGMIFeatureVector: PET logging skipped (hashed messageId)
Unexpectedly could not deserialize a serializedSocialProfile: %@
Scanning address string, expected to only find addresses, but found %@
SGAppLaunchHistory failed to fetch app launch history with error = %@
entity store notified of device lock state change to %d (es=%d, cs=%d)
SGMISpotlightUtility got signal to exit
SGMISpotlightUtility Query by time range timed out
SGMISpotlightUtility: Query by item timed out.
SGMISpotlightUtility: Found item count was %lu
SGMISpotlightUtility: Finding email addresses to delete
SGMISpotlightUtility got an error from Spotlight while querying existence as %@: %@
SGMISpotlightUtility: Query existence as %@ timed out.
SGMISpotlightUtility: Addresses found in Spotlight: %lu
SGMISpotlightUtility got an error from Spotlight: %@
SGURLDissector ignoring entity due to missing bundle id, unique id, or date
SGURLDissector(URLs) found URL of length %tu, from handle of length %tu, in: (%@, %@)
SGURLDissector(Text) found URL of length %tu, from handle of length %tu, in: (%@, %@)
urlsFromAttributes called with no URL attribute
SGURLDissector(Attributes) found URL of length %tu, from handle of length %tu, in: (%@, %@)
urlsFromAttributes failed to find colon and parenthesis in text
urlsFromAttributes found invalid ranges of colon and parenthesis
Tried to parse a Japanese name with no tokens? This shouldn't happen.
Tried to parse a jp/zh name with no tokens? This shouldn't happen.
Could not create tag from NSUserActivity '%@': %@
SGMIFeatureVectorCollator: message ID %@ was mapped via spotlight mapping table.
SGMIFeatureVectorCollator: message ID %@ was mapped with Biome stream.
SGMIFeatureVectorCollator: No mapping found, creating SGSimpleMailMessage with hashed message ID: %@
SGMIFeatureVectorCollator: Use the CSSI's repliedTo attribute to set the UserReplied feature, biome information was%@ available and UserReplied was%@ already set.
SGJournal-addEntry: Add event
SGJournal-addEntry: Add event batch (count=%lu)
SGJournal-addEntry: Cancel event
SGJournal-addEntry: Cancel event batch (count=%lu)
SGJournal-addEntry: Confirm event from this device
SGJournal-addEntry: Confirm event from other device
SGJournal-addEntry: Reject event from this device
SGJournal-addEntry: Reject event from other device
SGJournal-addEntry: Event parent deletion
SGJournal-addEntry: Not set
SGJournal-addEntry event non-nil, but unknown operation %u
SGJournal-addEntry: Add contact
SGJournal-addEntry: Confirm contact
SGJournal-addEntry: Reject contact
SGJournal-addEntry contact non-nil, but unknown operation %u
SGJournal-addEntry: Add reminder
SGJournal-addEntry: Confirm Reminder from this device
SGJournal-addEntry: Reject Reminder from this device
SGJournal-reminderAlarmTriggered: Reminder alarm triggered from this device
SGJournal-addEntry: Confirm reminder from other device
SGJournal-addEntry: Reject reminder from other device
SGJournal-addEntry: Reminder parent deletion
SGJournal-addEntry reminder non-nil, but unknown operation %u
SGJournal-addEntry: Suggested event calendar deleted
SGJournal-addEntry: Remove all stored pseudo-contacts
Setting a timer to reset DDNL caches in %f seconds
SGPipeline verificationOperation: DKIM verification resulted in temporary failure: %@. [SGPipelineEntity (%{public}@)]
SGPipeline verificationOperation: DKIM verification resulted in permanent failure: %@. [SGPipelineEntity (%{public}@)]
SGPipeline verificationOperation: Successfully verified DKIM signature. [SGPipelineEntity (%{public}@)]
SGPOSTagger: Most tags are SYM, likely missing LinguisticData
Attachment info length mismatch: %lu types, %lu names, %lu paths
Error getting file size from path: %@
Purging %tu unique identifiers from %@.
Deleting %tu unique identifiers from %@.
Deleting %tu domain identifiers from %@.
Deleting all Interactions from %@.
Deleting %tu Interactions from %@.
Deleting %tu group indentifiers for Interactions from %@.
SGDSpotlightReceiver: Received %tu items from %@.
SGDSpotlightReceiver: invalidated highlight cache and notified of refresh
ignoring items since the bundle is disallowed by user's settings
Decoded %tu of %tu items received from %@.
Will delete %tu encrypted items
Deleted %tu encrypted items
SGDSpotlightReceiver: _addSearchableItem: error donating to ProactiveHarvesting: %@
SGDSpotlightReceiver: addUserAction: error donating to ProactiveHarvesting: %@
received user action from %@
Plugins finished NSUA processing via CTS: %@
SGDSpotlightReceiver: purging %tu unique identifiers (%tu after de-duplication) for %@
SGDSpotlightReceiver: purgeSearchableItemsWithIdentifiers: error sending purge to ProactiveHarvesting: %@
SGDSpotlightReceiver: deleting %tu unique identifiers (%tu after de-duplication) for %@
SGDSpotlightReceiver: deleteSearchableItemsWithIdentifiers: error sending deletion to ProactiveHarvesting: %@
SGDSpotlightReceiver: deleting %tu domain identifiers (%tu after removing overlaps) for %@
SGDSpotlightReceiver: deleteSearchableItemsWithDomainIdentifiers: error sending deletion to ProactiveHarvesting: %@
SGDSpotlightReceiver: deleting entire bundle identifier %@
SGDSpotlightReceiver: deleteAllSearchableItemsWithBundleID: error sending deletion to ProactiveHarvesting: %@
SGDSpotlightReceiver: received %lu interactions from %@
SGDSpotlightReceiver: addInteractions: error donating to ProactiveHarvesting: %@
ignoring interactions since the bundle is disallowed by user's settings
Plugins finished processing interaction: %@
phoneNumberWithStringValue unexpectedly failed for string: %@
unifiedContactsMatchingPredicate failed with predicate %@ and error %@
Extracted pseudo-contact email address matches "me" contact: %@
Extracted pseudo-contact phone number matches "me" contact: %@
Extracted pseudo-contact postal address matches "me" contact: %@
Extracted pseudo-contact social profile matches "me" contact: %@
Filtered contact: %@
Extracted pseudo-contact matches "me" contact, Suggestion suppressed
Found %lu curated contacts for pseudo-contact
Failed to locate resource; tradition: %@, fname: %@, path: %@
failed to load trie for naming tradition; tradKey: %@
SGTokenizerMappingTransformer reloading NLTagger in response to new asset installation
Found related EKEvent by db lookup of related keys.
Found %lu events to bump TTL on for OpaqueKey: %@
Unable to save event in event store: %@
Unable to save event in event store; description: %@, error: %@
EKEventStore+Suggestions: bumped TTL for NL Event ZKW
Could not find %@ in message
migrator passed nil filename for entity db
migrator passed nil filename for snippets db
failed to clear snippets db
failed to clear entities db
sqlite_schema had a table with a NULL name
shadow table has nil table name in PRAGMA table_list
migrator for %@ running query: %@
SGDataMigrator encountered error during migration of %@: versions %lu & %lu, query: %@, error: %@
current user language: %@: %@
old user language: %@: %@
languageToUpdateEntityFTSTo returning: %@
failed to generate create query for new FTS table %@
creating new FTS table: %@: %@
failed to create new FTS table %@
failed to determine max docid
highest entity for FTS copy: %@: %llu
fts copy batch: %llu -> %llu
Copying from old FTS table from %lu to %lu
failed to insert from old fts table limit %lu offset %lu
failed to drop %@ in preparation for renaming
failed to rename %@ to %@
starting update of FTS table for language change: %@: %@
resuming copy of FTS data to new table
preparing to copy FTS data
updateLanguageForFTSTablesToLanguage got nil language but has no in-progress copy to restart
done with FTS copy, going to drop old table: %@
failed to drop old entity_fts after updating to new language
bootstrapping snippets migration
catching up snippets migration to %ld
failed to migrate snippets db to %ld
attempt to skip or repeat a migration
migrating entities to version %ld
failed to migrate entity db to %ld
migrating snippets to version %ld
migrating entities from zero to version %lu
failed to migrate entity db from zero to %lu
migrating snippets from zero to version %lu
failed to migrate snippets db from zero to %lu
migrating SGSqliteDatabase
Migrating %@ & %@
Future database version detected. Giving up on migration.
Encountered %@ database; dropping all data.
Encountered empty database (user_version == 0)
Failed to clear legacy database.
Unrecoverable db version mismatch %ld & %ld
database migration bailing out at version %lu due to device being locked.
Finalizing migration with a merge blob sync
about to check for language change for FTS tables: %@
detected need for FTS rebuild: %@: %@
done migrating: %@
unable to attach snippets in order to migrate content data
unable to copy email snippets during content migration
unable to copy non-email snippets during content migration
unable to erase content data from entities during content migration
unable to erase title data from email entities during content migration
needed to add author column but failed
needed to add entityParentage table but failed
needed to add serializedContacts table but failed
needed to add cnContactsToSgContacts table but failed
Unable to add downloadState column during legacy migration: %@
Unable to add entityDownloadStateIdx index during legacy migration: %@
Unable to add contentHash column during legacy migration: %@
Unable to add entityContentHashIdx index during legacy migration: %@
Unable to add groupId column during legacy migration: %@
Unable to add groupIdIdx index during legacy migration: %@
Unable to add duplicateKeyHash column during legacy migration: %@
Unable to add ix_entityTags_dupKeyHash index during legacy migration: %@
migration_RecreateFTSTableWithITS
migration_CreateFTSTableWithITS
Unable to create deduplicated identityPhones table: %@
Unable to clear identityPhones table during deduplication: %@
Unable to rewrite identityPhones table during deduplication: %@
Unable to remove identityPhones table during deduplication: %@
Could not install hashHexToBlob() sqlite function
Unable to set blob value in migration query: %@: Error: %@
Unable to delete messaging terms with semicolons. Error: %@
Unable to clear masterEntityIds from migration_FixupMergeGroups: %@
Unable to copy entities into emailMetadata: %@
Unable to deparent source documents found in entityParentage: %@
Unable to delete source documents from entity table: %@
Unable to populate source document tags: %@
Unable to populate source document snippets in emailSnippets: %@
Unable to delete source document snippets from legacy table: %@
Error selecting source document ids from emailMetadata: %@
starting rebuildFTSWithDetailEntityIDDocIDs
Erroring trying to reinsert FTS row: %@
Error during rebuildFTSWithDetailEntityIDDocIDs: %@
rebuildFTSWithDetailEntityIDDocIDs: failed. Moving old table back.
rebuildFTSWithDetailEntityIDDocIDs: success. Deleting backup table.
failed to drop backup table: entity_fts_docidfix_backup: %@
discarding ill-formatted serialized interaction key
Error during migration_deleteInteractions: %@
unable to detach snippets after trying to migrate content data
SGMailIntelligenceDissector: Mail saliency inference is off
SGMailIntelligenceDissector: a nil message ID, skipping
Dissector.SocialConnectionScore
SGMailIntelligenceDissector: computed sender connection score of %f
Dissector.SaliencyScore
SGMailIntelligenceDissector: Searching for contact matching provided e-mail address.
SGMailIntelligenceDissector: Could not map e-mail address to contact.
SGMailIntelligenceDissector: No interactions with contact found.
SGMailIntelligenceDissector: Fuzzy contact match succeeded.
CandidateNameRange not in plainTextContent: %@ %tu %tu
SGDetectedAttributeML - Failed to load transformer instance for language: %@, %lu
SGDetectedAttributeML: failed to generate vector.
SGDetectedAttributeML - failed to get training descriptor.
Couldn't find uniqueIdentifier %@ in conversation -- aborting detectionFromEntity
Target message (uniqueIdentifier=%@) not the last in conversation -- aborting detectionFromEntity
Couldn't find uniqueIdentifier %@ in conversation -- aborting selfIdDetectionWithEntity
Target message (uniqueIdentifier=%@) not the last in conversation -- aborting selfIdDetectionWithEntity
Conversation message %d with id %@ and content length %lu
Entity message with id %@, content length %lu
Entity message with detected data item %@
Target message unrecoverable state with matching content = %d
ContactMLSharing: Text message has no conversation identifier
ContactMLSharing: Invalid contact detail range plainTextContent.length %tu supervision.ignoreAfter %tu match.range [%tu, %tu]
BirthdayMLExtraction: Text message has no conversation identifier
Error fetching user DOB: %@
SGMIMessageMissingEntityAnalyzer: Mail Intelligence's SPI back end timed out
SGMIMessageMissingEntityAnalyzer: Mail Intelligence's SPI back took over 5 seconds on a %tu-lengthed content: we have to xpc_transaction_exit_clean
SGMI-SPI (input)identifyComposeWarningsFromSubject:%{sensitive}@ content:%{sensitive}@ toRecipients:%{sensitive}@ ccRecipients:%{sensitive}@ bccRecipients:%{sensitive}@ originalToRecipients:%{sensitive}@ originalCcRecipients:%{sensitive}@ attachments:%{sensitive}@ language:%@
SGMI identified a file-sharing link in the body: %{sensitive}@ and therefore consider it as an attachment.
SGMI identified a subject warning but blocked it because of a poor user engagement on the pattern.
SGMI failed to create a warning from a match.
SGMI identified potential missing attachment in '%{sensitive}@',however, given a link seems to be present in the following characters: '%{sensitive}@', this warning got disqualified...
SGMI identified potential missing attachment in '%{sensitive}@',however, given '%{sensitive}@' is in the recipients, this warning got disqualified...
SGMI identified a body warning but blocked it because of a poor user engagement on the pattern.
SGMI-SPI (output compose warnings) %{sensitive}@
SGMI inconsistent recipient detection. Likely an issue in assets: %@
SGMIMessageMissingEntityAnalyzer identified "%{sensitive}@" as a nickname used in the past for %{sensitive}@.
SGMI identified a recipient warning for %{sensitive}@ but blocked it because one recipient address (%{sensitive}@) seems to be a group.
SGMI identified a recipient warning but blocked it because of a poor user engagement on the pattern.
SGMI created a second chance recipient warning for %{sensitive}@.
SGMI identified a recipient warning from a conservative regex which user engagement was poor, even with contact match.
SGMIMessageMissingEntityAnalyzer found a contact match for %{sensitive}@ in CoreRecents
SGMIMessageMissingEntityAnalyzer found a contact match: %{sensitive}@ ->  %{sensitive}@ in Contacts
SGMIMessageMissingEntityAnalyzer found a pseudo contact match: %{sensitive}@ ->  %{sensitive}@
SGMIMessageMissingEntityAnalyzer found a nickname match: %{sensitive}@ ->  %{sensitive}@
SGMIMessageMissingEntityAnalyzer: Attempt to match %{sensitive}@ against the various sources of contacts timed out.
SGMIMessageMissingEntityAnalyzer Attempt to match %{sensitive}@ against the various sources of contacts %@.
SGMI received %@ feedback for missing entity warning
SGMI will %@ trigger a warning for such signature
SGMIWarningsDetectionRegex: Invalid pattern %@ : %@.
SGMIWarningsDetectionRegexMatch (%{sensitive}@) with signature: %@ (%{sensitive}@)
IdentityKey for social profile types currently unsupported: %@
Unknown handle type %@
SGDSpotlightCommander: got reimport request: %@
ignoring reimport request since it is subset of existing query: %@
ignoring reimport request since plugin already has a pending request: %@
SGDSpotlightCommander: attempting to process reimport requests
SGDSpotlightCommander: found %lu unqueried reimport requests
SGDSpotlightCommander: found %lu unexecuted reimport requests
SGDSpotlightCommander: reimportForPersonHandle: %@ : %@ : %@
SGDSpotlightCommander: reimport query found %lu items
SGDSpotlightCommander: foundItemsHandler making new set for %@
SGDSpotlightCommander: foundItemsHandler: %@ - %@
SGDSpotlightCommander: Error: reimport search query error: %@: %@
SGDSpotlightCommander: total items to be reimported: %tu
SGDSpotlightCommander: storing reimport items for %lu bundles for request %llu
SGDSpotlightCommander: Error: unable to get spotlight index to issue reimport command to
SGDSpotlightCommander: issuing command to spotlight: %@
SGDSpotlightCommander: Error during CS issueCommand: %@
SGDSpotlightCommander: reimport command issued: %@
SGDSpotlightCommander: reimport command issued
SGNaturalLanguageDissector: Event is cancelled
Skipping NL dissector: allowNaturalLanguageDissector is OFF
Ignoring NL dissection because an iCalendar attachment exists.
Ignoring NL dissection because document was matched by a template
Failed to check for existing spotlight reference: %@
clearAllTombstonesForSpotlightReferencesIf: waiting for write transaction
clearAllTombstonesForSpotlightReferencesIf:YES (will clear)
clearAllTombstonesForSpotlightReferencesIf:YES (did clear)
clearAllTombstonesForSpotlightReferencesIf:NO
got NULL entityId from serializedContacts table
contactsWithIdentifiers filtered %lu entities from the wrong table.
nil entityId or serializedContact data found: %@ %@
Could not load contacts: %@
Could not fetch last CoreSpotlight state: %@
MDSearchableIndex returned error %@
Encountered corrupt db (%@), attempting to reinitialize
Journaling command: %d
Failed to write command type to journal
Failed to write command blob length to journal
Failed to write command blob to journal
Skipping SGMIFeatureStore _runJournal -- no journal file exists
Beginning SGMIFeatureStore _runJournal
Aborting SGMIFeatureStore _runJournal -- db not available (maybe device is locking again?)
Running journal command: delete column %@
Finished SGMIFeatureStore _runJournal
SGMIFeatureStore: Invalid SGMailIntelligenceUnsubscriptionRuleField for DB lookup
Follow Up. [incrementUserEngagement] warning is nil. Nothing will be stored.
Follow Up. [incrementUserEngagement] Incrementing %@
SGMIFeatureStore Error in signature format: %@
SGMIFeatureStore Unsupported type: %@
Follow Up. [incrementUserEngagement:forFollowUpWarning] Can't access the db.
Unsupported SGMailIntelligenceWarning for method shouldExposeWarning
Follow Up. [updateFollowUpDetectionStatsWithWarning] warning is nil. Nothing will be stored.
Follow Up. [updateFollowUpDetectionStatsWithWarning] Can't access the db.
SGMIFeatureStore: Inconsistent state of the DB.
SGMIFeatureStore will not return SGMIMetricsRegexSignatureStats for sampling reasons
Failed to clearSignatureStatsTable due to Class A data protection
Not performing deleteNaiveBayesModelForProbabilityFeatureName:%ld due to data protection
Discarding commitNaiveBayesModel commit due to data protection
commitNaiveBayesModel:%@ probabilityFeatureName:%ld updateDate:%@
Unable to deleteTokensForDeletedEmailAddresses due to Class A protection
Failed to clearSubmodelTables due to Class A data protection
Failed to clearKVStoreTable due to Class A data protection
Failed to clearNicknameMappingTable due to Class A data protection
Email Searchable Item is malformed - no account identifier
Email Searchable Item is malformed - missing message id or account identifier
[vipManager conformsToProtocol:@protocol(EMVIPReader_Private)] was false (class: %@) -- the VIP set might be empty even if the user has VIP
Could not get message content: %@
Read error %@ loading message content from URL: %@
Ignoring DKIM signature because it has expired.
Ignoring DKIM signature because the signing domain identifier is not the same as or a subdomain of the domain used in the From: header.
Could not create DKIM verification context %@
Failed to process event suggestion 
 No From: header found.
Failed to process event suggestion 
 Could not parse domain in From: header.
Failed to process event suggestion 
 No valid DKIM signature found.
Successfully verified DKIM signature.
Failed to process event suggestion 
 A temporary error occured while verifying the DKIM signature(s).
Failed to process event suggestion 
 A permanent error occured while verifying the DKIM signature(s).
Could not get localized string path for localization '%@
Could not load localized strings from %@: %@
Could not parse localized strings from %@: %@
SGRTCLogging+Reminders: No reminder found for entity record Id: %@
SGRTCLogging+Reminders: logging interaction to RTC
SGRTCLogging+Reminders: logging extraction to RTC
Invalid value for SGNameDetectorAlgorithm: %lu
SGNameDetector - Error querying contacts from people suggester.
Dissecting a donated contact identifier: %@
Received a donated contact identifier: %@, but contact store returned nil
malformed serialized time range: %@
SGSqlEntityStore+Events: event startTimezone is nil but endTimezone is not nil
SGSqlEntityStore+Events: event endTimezone is nil but startTimezone is not nil
SGDNotificationBroadcaster posting event notification
SGDNotificationBroadcaster posting contact notification
SGDNotificationBroadcaster posting reminder notification
SGDNotificationBroadcaster posting SGURL changed notification
SGDNotificationBroadcaster failed to post SGURL change notification: error %u
SGMITrialClientWrapper: No plist file found at %@
SGMITrialClientWrapper: TRILevel is nil for %@
SGMITrialClientWrapper: Unable to load plist content for %@
SGMITrialClientWrapper: Empty plist content for %@
SGMITrialClientWrapper: isEnabled accessed: %@
SGMITrialClientWrapper: isDNUOnlyEnablement accessed: %@
SGMITrialClientWrapper: signatureStatsLogging accessed: %@
SGMITrialClientWrapper: modelGroundTruthVersion accessed: %@
SGMITrialClientWrapper: modelInferenceVersion accessed: %@
SGMITrialClientWrapper: modelPath accessed: %@
SGMITrialClientWrapper: modelFeatureNames accessed: size %lu, first element %@
SGMITrialClientWrapper: modelFeatureStandardizationMeans accessed: size %lu, first element %@
SGMITrialClientWrapper: modelFeatureStandardizationStandardDeviation accessed: size %lu, first element %@
SGMITrialClientWrapper: modelGroundTruthFeatureNames accessed: size %lu, first element %@
SGMITrialClientWrapper: modelGroundTruthFeatureLowerBounds accessed: size %lu, first element %@
SGMITrialClientWrapper: modelGroundTruthFeatureUpperBounds accessed: size %lu, first element %@
SGMITrialClientWrapper: modelGroundTruthOutputs accessed: size %lu, first element %@
SGMITrialClientWrapper: saliencyOverrideFeatureNames accessed: size %lu, first element %@
SGMITrialClientWrapper: saliencyOverrideFeatureLowerBounds accessed: size %lu, first element %@
SGMITrialClientWrapper: saliencyOverrideFeatureUpperBounds accessed: size %lu, first element %@
SGMITrialClientWrapper: saliencyOverrideOutputs accessed: size %lu, first element %@
SGMITrialClientWrapper: classificationThreshold accessed: %@
SGMITrialClientWrapper: classificationOfflinePrecision accessed: %@
SGMITrialClientWrapper: classificationOfflineRecall accessed: %@
SGMITrialClientWrapper: attachmentDetectionRegexes accessed with locales %@.
SGMITrialClientWrapper: attachmentLinkDetection accessed with %lu entries.
SGMITrialClientWrapper: conservativeRecipientDetection accessed: %@
SGMITrialClientWrapper: recipientConservativeDetectionRegexes accessed with locales %@.
SGMITrialClientWrapper: recipientDetectionRegexes accessed with locales %@.
SGMITrialClientWrapper: nicknameDetectionRegexes accessed with locales %@.
SGMITrialClientWrapper: followUpOnOutgoingMailsQuestionsDetectionRegexes accessed with locales %@.
SGMITrialClientWrapper: followUpOnOutgoingMailsAsksDetectionRegexes accessed with locales %@.
SGMITrialClientWrapper: defaultTimeIntervalToStartWarningExposition accessed %@.
SGMITrialClientWrapper: defaultTimeIntervalForAWarning accessed %@.
SGMITrialClientWrapper: followUpOnIncomingMailsDetectionRegexes accessed with locales %@.
SGMITrialClientWrapper: followUpWarningsParameters accessed with locales %@.
SGMITrialClientWrapper: bodyAnalysisSamplingFactor accessed: %@
SGMITrialClientWrapper: minCountToConsiderATokenAsHighlyDiscriminant accessed: %@
SGMITrialClientWrapper: ratioToConsiderATokenAsHighlyDiscriminant accessed: %@
SGMITrialClientWrapper: minCountToConsiderATokenAsExtremelyDiscriminant accessed: %@
SGMITrialClientWrapper: ratioToConsiderATokenAsExtremelyDiscriminant accessed: %@
failed to get URL for library directory: %@
_vCardsDirectoryURL is nil
failed to create %@: %@
Sending pseudo-contact with id %@ to CoreSpotlight
Could not index contact in CoreSpotlight: %@
Not sending pseudo-contact to Spotlight because the store is missing
Not sending pseudo-contact to Spotlight because it was confirmed or rejected
Not sending pseudo-contact to Spotlight because it has no original details
Not sending pseudo-contact to Spotlight because it is already in the curated contacts
Could not delete pseudo-contact from Spotlight: %@
Could not delete all pseudo-contacts: %@
sg_isCuratedEventFromSuggestionNewerThan: missing suggestion info or timestamp
sg_fallbackURL: Event does not have schame
Ignoring URL that is not http or https
Could not convert string to URL
SGExtractionDocument: No model output
SGExtractionDocument: Invalid range
Error: could not mallocRegexp!
Memory not allocated by mallocRegexp: %llu
Failed to process event suggestion 
 INReservation.itemReference.vocabularyIdentifier property is nil.
Failed to process event suggestion 
 two or more INReservation objects share the same INReservation.itemReference.vocabularyIdentifier.
Error retrieving directory for Biome stream data
SGMIBiomeUtility: Successfully consumed stream
SGMIBiomeUtility: Error: %s
CoreSuggestionsAssets [common] metadata download success? %d
CoreSuggestionsAssets [locale] metadata download success? %d
CoreSuggestionsAssets [region] metadata download success? %d
SGEKCalendarAdapter addEvent: Skipping event already known to be cancelled. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter addEvent: Skipping event that has already passed. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter addEvent: Skipping NLEvent with empty title. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter addEvent: Skipping NLEvent that is not status Confirmed. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter addEvent: Skipping NL Event with associated event in EKEventStore. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter addEvent: Skipping event-associated-with-storage-event with missing suggestionInfo. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter addEvent: Skipping event which is not more recent than preexisting EKEvent. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter addEvents: Unable to save events in event store. EKStore commit error: %@
SGEKCalendarAdapter addEvents: Unable to save events in event store; description: %@, error: %@
SGEKCalendarAdapter addEvents: Successfully saved events in event store
SGEKCalendarAdapter _updateEvent: Calendar Event missing from store for identifier: %@. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter _updateEvent: Unable to update event: %@. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter _updateEKEvent: Unable to update event; description: %@, error: %@
SGEKCalendarAdapter _updateEvent: Successfully updated event. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter cancelEvent: No existing event found. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter cancelEvent: NL Event cancelled. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter _updateEvent: Unable to save event cancellation: %@. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter _updateEvent: Unable to save event cancellation; description: %@, error: %@
SGEKCalendarAdapter _updateEvent: Successfully Removed event in a curated calendar. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter cancelEvents: Unable to remove events. EKStore commit error: %@. [SGStorageEvent (%{public}@)]
Unable to remove events; description: %@, error: %@
SGEKCalendarAdapter cancelEvents: Successfully removed events. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter orphanEvent: No existing event found. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter orphanEvent: Orphaned event is on a curated calendar; not removing. [SGStorageEvent (%{public}@)]
SGEKCalendarAdatper _eventsAssociatedWithStorageEvent: Located associated event based on content rather than pseudoevent key match. [SGStorageEvent (%{public}@)]
SGEKCalendarAdatper _eventsAssociatedWithStorageEvent: More than one matching event found (%lu). [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter _addEKEventToCalendar: Adding event via EK. [SGEvent (%{public}@)]
SGEKCalendarAdapter _addEKEventToCalendar: Adding event to naturalLanguageSuggestedEventCalendar. [SGEvent (%{public}@)]
SGEKCalendarAdapter _addEKEventToCalendar: Adding event to suggestedEventCalendar. [SGEvent (%{public}@)]
SGEKCalendarAdapter _addEKEventToCalendar: Unable to save event in event store: %@. [SGEvent (%{public}@)]
SGEKCalendarAdapter _addEKEventToCalendar: Successfully saved event in event store. [SGEvent (%{public}@)], [EKEvent (%{public}@)]
SGEKCalendarAdapter: Calling _updateEKEvent
SGEKCalendarAdapter: Calling _cancelEKEvent
SGEkCalendarAdapter: no bundle record found: %@
SGEKCalendarAdapter _removeEKEvent: Unable to remove event. EKStore commit error: %@
SGEKCalendar _removeEKEvent: AdapterUnable to remove event; description: %@, error: %@
SGEKCalendarAdapter _removeEKEvent: Successfully removed event.
Cannot calculate free space
Free space attribute is missing
Free space attribute is not an NSNumber
SQLite error: %@
db corruption detected, leaving behind marker so we recover
suggestd exiting due to lack of disk space
suggestd exiting due to corrupt SQL vtable.
SGSqliteDatabase IOERR (device lock state %@): %@
suggestd exiting due to lack of disk space while setting journal_mode.
exiting due to repeated SQLITE_BUSY
SGDatabaseJournal unable to create directory for storing journals: %@
SGDatabaseJournal error when immediately running query: %@: %@
executing journal file: %@
Got nil after trying to unarchive a db journal: %@
No __query key set in journal file: %@
SGDatabaseJournal error when replaying query: %@: %@
ignoring journal file: %@
A bogus or corrupt journal file was found and has been cleaned up. Suggestd will relaunch and continue: %@
SGDatabaseJournal unable to delete journal file: %@: %@
SGDatabaseJournal deleted journal file: %@
Executing queries from journals to %@
SGDatabaseJournal unable to open journal directory: error(%i): %s
journal execution checking lock state after %u files
journal execution exiting early after %u files because device is locked
Removing all journal files at %@
SGDatabaseJournal not removing bogus journal directory: %@
SGDatabaseJournal unable to remove journal directory: %@
SGDatabaseJournal unable to re-create directory for storing journals: %@
softlink:o:path:/System/Library/PrivateFrameworks/CoreRoutine.framework/CoreRoutine
softlink:o:path:/System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore
softlink:o:path:/System/Library/Frameworks/WebKit.framework/WebKit
softlink:o:path:/System/Library/Frameworks/HealthKit.framework/HealthKit
softlink:o:path:/System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore
aPP7
SGTextMessage
SGConversationFlatteningTransformer
PMLTransformerProtocol
PMLPlistAndChunksSerializableProtocol
NSObject
schema
SGM2SelfIdModelScore
NSCopying
SGM2SuggestdExitReason
SGM2AutocompleteUserSelectedContact
SGM2BundleIdsTrackedAsOther
SGCloning
SGParsedPersonFromInteraction
SGM2ContactCreated
Internal
SGMicrodataToJsonParser
URLs
SGModel
SGTransformerInstance
SGModelRules
SGM2ContactDetailExtraction
SGM2ContactDetailSent
SGM2ContactsInterfaceCacheCount
Reminders
SGM2ContactsInterfaceCacheHit
SGM2FoundInMailModelScore
KVStore
SGWordBoundaryQuickTypeInference
SGStructuredEventDocument
SGMIMetricsUpdateProcessInformation
SGReminderDissector
SGMailMessageProcessing
SGTextMessageProcessing
SGM2SearchResultsIncludedPureSuggestion
SGMessageEventDissectorTrialClientWrapperGuardedData
SGMessageEventDissectorTrialClientWrapper
SGM2SearchResultsUserSelectedContact
SGM2SerializedContactsCacheHit
SGM2SqliteErrors
SGURLPlugin
FIAPPlugin
HVRemindersConsumer
HVConsumer
Saliency
SGM2SuggestedContactDetailShown
SGMIMetricsAggregatedAccuracyLogs
SGM2SuggestedContactDetailUsed
SGM2UnknownContactInformationShown
Utilities
SGM2PerfXPCLatency
SGM2CustomResponsesHarvest
SGMicrodataItemScope
SpotlightMapping_Internal
SGMonochrome
SGDetectedAttributeMetrics
SGMessageKey
SGEntityKey
SGSqliteExitOnDeviceLockErrorHandler
SGDPowerLog
SGDeliveryDissector
SGDXPCConnectionUtilities
SGTextMessageKey
SGRealtimeEventResponse
SGHistoryObserver
SGSuggestHistoryObserver
SGRealtimeSuggestionsTuple
SGEKEventStoreProvider
SGDPurgeDeletionBox
SGDSuggestManagerMailProtocol
_SGDSuggestManagerBaseProtocol
_SGDSuggestManagerMetricsProtocol
_SGDSuggestManagerEventsConfirmRejectProtocol
_SGDSuggestManagerContactsConfirmRejectProtocol
SGDSuggestManagerMessagesProtocol
SGDSuggestManager
SGDSuggestManagerAllProtocol
_SGSuggestManagerFoundInAppsProtocol
SGDSuggestManagerContactsProtocol
SGDSuggestManagerURLsProtocol
SGDSuggestManagerEventsProtocol
SGDSuggestManagerRemindersProtocol
SGDSuggestManagerDeliveriesProtocol
SGDSuggestManagerIpsosProtocol
SGDSuggestManagerInternalProtocol
_SGDSuggestManagerInternalHarvestProtocol
SGDSuggestManagerFidesProtocol
HVContentAdmissionObserver
HVMailConsumer
HVInteractionConsumer
SGEntityMappingTransformer
SGMIDailyActivity
SGMIMetricsAggregatedAccuracyLog
SGStructuredEventExtractionModel
SGSignificantEmailAddressModelForIMessage
SGM2HarvestCost
SGRe2PrefilterTree
SGDManagerForCTS
SGDeduper
SGCalendarAttachmentDissector
SGCalendarAttachmentDissectorUtility
SGContactDetailsHolder
SGStorageContact
SGDatabaseMigratorSnippets
SGSuggestionsSystem
SGMISpotlightUtility
SGDPluginManager
TestHelpers
StatsCounters
SGAccountsAdapter
SGInMemoryAdapter
SGJournalCalendarObserver
SGJournalBaseObserver
SGJournalContactsObserver
SGJournalRemindersObserver
SGRemindersAdapter
SGMIMetricsMailIntelligenceForMessage
SGMISaliencyInference
SGNameMappingTransformer
SGSelfIdentification
SGSelfIdentificationDetection
SGSearchableItemIdTriple
SGPipelineEntity
SGEntity
SGMeCardDissector
SGHistorySharedData
SGSuggestHistory
SGNoCloudNSUbiquitousKeyValueStore
SGKeyValueCacheManager
SGWords
FIAPHistoricalDataRequest
NSSecureCoding
NSCoding
RFC822Parsing
SGDataDetectorMatchesWithSignatureRange
SGAddressCoalescingState
SGDataDetectorMatch
SGThreadParser
SGMIAttachmentSizeHistogram
SGInhumans
SGMIFollowUpManager
SGExtractionModel
SGIdentityEdge
SGContactDetailSummary
IdentityStore
SGPatternGlobalData
SGPatterns
SGPatternDataFile
SuggestionsExtensions
HVHeaderCollection
SGSimpleMailHeaderKeyValue
SGSimpleMailMessage
SGQuickResponsesML
EncodedWord
SGMISaliencyModelConfigRule
SGMISaliencyModelConfig
SGLowMemoryContactEnumeration
SGLexicon
SGNicknames
SGContactsInterface
SGSymbolicMappingTransformer
SGOffsetDictionary
SGFlightData
Utility
SGFlight
SGTaggedMallocCompressionBuffer
SGTaggedMallocWorkQueueItemPart
SGTaggedMallocLevenshteinDistanceBuffer
SGTaggedMallocEmailHtml
SGMIMetricsSubmodelsStats
Suggestions
SGBinaryClassificationModel
SGBinaryClassificationModelRules
SGBloomFilter
SGBloomFilterChunkInMemory
SGBloomFilterChunk
SGBloomFilterChunkInMemorySparse
SGBloomFilterChunkMmap
SGMIEnablementConfig
SGTextMessageConversationTracker
SGTextMessageItem
SGConversationTurnProtocol
SGConversationHistory
SGDatabaseJournalFile
SGReminderExtractionModelGuardedData
SGReminderExtractionModel
SGRequestContext
SGStructuredEventCoreMLInputWrapper
MLFeatureProvider
SGRTCLoggingGuardedData
SGRTCLogging
ReimportRequests
sgLogging
SGXPCActivityManager
SGXPCActivityManagerProtocol
SGLongRunningTask
SGLongRunningTaskManager
SGEnrichmentWritebackAdapter
SGMIMetricsSubmodelStats
SGTokenString
SGJSBurstTrie
SGJSBurstTrieExports
JSExport
SGReverseTemplateJS
SGContactStoreFactory
VisibleForTesting
SGDomainWhitelistCheckerGuardedData
SGDomainWhitelistChecker
SGStructuredEventTrialClientWrapperGuardedData
SGStructuredEventTrialClientWrapper
SGSqliteReadTransaction
SGSqliteWriteTransaction
SGSqliteTransaction
SGSqliteDatabaseSharedLock
SGSqliteDatabaseImpl
SGSqliteDatabase
SGStructuredEventDissector
SGMicrodataDocument
SGSchemaOrgKey
Locations
Deleting
SGMailClientUtilMock
NaiveBayesModel
SGAhoCorasick
SGMISaliencyModelFeatureProvider
SGMISaliencyModelOutput
SGMISaliencyModel
SGNames
SGMIBiomeReducedMessageEvents
SGMIBiomeEventReducer
SGSchemaConversionProtocol
SqlHelpers
DatabaseCheck
SGMIMetricsSubmodelsProbabilities
Maintenance
Helpers
SGDOMParser
WKNavigationDelegate
SGStorageLocation
SGEventLocationForGeocode
SGMIStagedLogRecord
SGMIMetricsTrialMetadata
_SGDCloudKitSyncPersistedState
SGDCloudKitSync
APSConnectionDelegate
SGDCloudKitSyncObserver
SGCuratedChangeNotificationsBaseListener
SGCuratedChangeNotificationsAddressBookListener
SGCuratedChangeNotificationsCalendarListener
SGCuratedChangeNotifications
SGReminderDueLocation
SGChatLengthEstimator
SGMIFeatureSubmodelLink
SGMIFeature
CloudKitRecord
SGContactSharingModel
Significance
SGMIMetricsMailAttachmentHistogram
SGMicrodataItem
SGDetection
SGCNContactIdentifierCollection
SGLabeledValue
SGStructuredEventCoreMLOutputWrapper
SGTokenDistanceMappingTransformer
SGJournalEntry
SGMIMetricsMissingElementPrediction
RealtimeDonations
SGStringMappingTransformer
SGMessageEventDissectorGuardedData
SGMessageEventDissector
ContactDetails
SGCoalescingDropBox
SGPostalAddressExtraction
SGSocialProfileDetails
SGModelMappingHelper
Writing
SGHtmlEntities
SGSlice
SGSignatureDissector
SGMeContact
SGMIMetricsRegexSignatureStats
SGMetricsDissector
SGPseudoEventKey
SerializedContacts
SGReminderMessage
SGMailQuoteParser
SGReminderTrialClientWrapperGuardedData
SGReminderTrialClientWrapper
SGSqlEntityStoreCNContactMatcherHelper
SGSignificantEmailAddressModel
SGTokenizer
Loading
SGHKHealthStore
SGDetectedAttributeDissector
SGSelfIdentificationModel
SGInteractionKey
SGEspressoModel
SGExtractionModelCoreMLFeatureWrapper
SGMailPatterns
SGSignificantPhonenumberModel
SGAggregateLogging
SGTaggedCharacterRange
SGTrialClientWrapper
SGContactDetail
CNtoSGContacts
SGSGtoCNContactsCacheUpdateAdapter
SGHarvestQueueMetricsTimer
SGHarvestQueueMetrics
SGEntityStoreToFeatureStoreLockGuardedData
SGSqlEntityStoreTokenizerGuardedData
SGSqlEntityStore
SGOutput
SGExtractionDissector
SGInteractionProcessing
SGMISubmodelsManager
SGMISubmodelsAccumulator
SGMINicknameManager
SGServiceContext
SGReverseTemplatesJSDataDetectors
SGMIWarningsConfig
SGPseudoReminderKey
SGDCKLocation
SGMIFeatureVector
SGDataNormalization
SGDCKInteractionInfo
SGAppLaunchHistory
SGM2HarvestBudgetStatusTransition
ContentProtection
SGPipelineEnrichment
SGMetricsHelper
SGMIBiomeSummaryResults
SGURLContainer
SGExternalEnrichment
SGURLDissector
SGDeliveryKey
SGIdentityName
SGMIFeatureVectorCollator
SGMessage
SGSpotlightIdentifiers
SGM2BirthdayExtractionWithSupervision
SGStructuredEventClassification
SGJournal
SGContactEntity
SGRawKey
SGDOMParserResult
PipelineAdditions
SGPipeline
SGPOSTagger
SGPipelineDissector
SGContactDetailKey
SGPseudoContactKey
SGMailAttachment
SGTextMessageBirthdayCongratsModel
SGStorageEvent
SGEventForGeocode
SGDSpotlightReceiver
SpotlightReceiver
AttributePresence
SGContactPipelineHelper
SGCuratedContactMatcher
SGDCKEvent
SGPaths
SGNameInversionPredictor
SGEmailKey
SGMITokenCounts
SGMINaiveBayesModelQueryResult
SGMINaiveBayesModel
SGMI
ExtractionInfos
SGTokenizerMappingTransformer
SGEntityMatchingTransformer
DatabaseMigrator
SGMailIntelligenceDissector
SGSelfIDSupervision
SGContactDetailSupervision
SGDetectedAttributeML
SGMIMessageMissingEntityAnalyzer
SGRe2
SGRe2Basic
SGRe2Subregexps
SGRe2Lazy
SGMIWarningsDetectionRegexes
SGMIWarningsDetectionRegex
SGMIWarningsDetectors
SGMIWarningsDetectionRegexMatch
SGPlainTextContentCursor
SGIdentityKey
SGMicrodataItemProp
SGMicrodataParser
SGDSpotlightCommander
SGNaturalLanguageDissector
Spotlight
CSSearchableIndexDelegate
SGMIDomainCountingTableGuardedData
SGMIDomainCountingTable
SGMIFeatureStoreGuardedData
SGMIFeatureStore
_PASDatabaseMigrationProtocol
SGDuplicateKey
EMVIPReader_Private
SGMailClientUtil
SGSignificantAddressModel
SGProactiveHarvestingSupport
SGFoundInAppsStrings
SGContactAggregator
SGNameDetector
MessageManagement
SGDonatedContactDissector
Events
SGDatabaseMigratorEntities
SGSeekableData
SGSeekable
SGLevenshtein
FIAPResult
SGDCKTimeRange
SGCuratedEventKey
SGStorageReminder
SpotlightMapping
SGDNotificationBroadcaster
SGMIMetricsSubmodelAgeVector
SGXpcTransaction
SGMITrialClientWrapperGuardedData
SGMITrialClientWrapper
SGSchemaKeys
SGSpotlightContactsAdapter
SGSignificantAddressModelForIMessage
SGExtractionDocument
SGWebPageKey
Building
SGMIMetricsRegexSignatureStat
SGDPLogging
SGMIMetricsInferenceAndGroundTruth
SGMicrodataParserStackItem
SGMIBiomeUtility
SGContactSharingTransformer
SGAsset
Tags
SGEKCalendarAdapter
SGM2HarvestCostBreakdown
ErrorHandling
SGDatabaseJournal
domainIdentifier
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
initWithSearchableItem:
attributeSet
authors
count
objectAtIndexedSubscript:
handles
sanitizeHandles:
displayName
containsObject:
handleIdentifier
initWithDisplayName:handles:handleIdentifier:
setSender:
isEqual:
countByEnumeratingWithState:objects:count:
accountHandles
setIsSent:
hasPrefix:
primaryRecipients
setRecipients:
isEqualToString:
accountIdentifier
setConversationIdentifier:
contentURL
lastPathComponent
_photoPathCustomKey
valueForCustomKey:
length
setPhotoPath:
_nicknameCustomKey
setNickname:
isPotentialEventMessage
boolValue
initWithMessagesContentEvent:contentProtection:
content
setTextContent:
fromHandle
name
handle
containsString:
arrayWithObjects:count:
handleType
attachment
filename
suggestedPhotoPath
suggestedNickname
initWithKeyName:searchable:searchableByDefault:unique:multiValued:
initWithMessageDictionary:
objectForKeyedSubscript:
sender
spotlightBundleIdentifier
spotlightDomainIdentifier
conversationIdentifier
spotlightUniqueIdentifier
uniqueIdentifier
initWithFormat:
copyWithZone:
firstObject
isSent:
author
recipients
senderIsAccountOwner
setSenderIsAccountOwner:
nickname
photoPath
senderIsBusinessChat
attachmentFilename
.cxx_destruct
_senderIsAccountOwner
_senderIsBusinessChat
_isPotentialEventMessage
_sender
_recipients
_conversationIdentifier
_nickname
_photoPath
_attachmentFilename
T@"CSPerson",&,V_sender
T@"NSArray",&,V_recipients
T@"NSString",&,V_conversationIdentifier
TB,V_senderIsAccountOwner
T@"NSString",&,V_nickname
T@"NSString",&,V_photoPath
TB,R,V_senderIsBusinessChat
T@"NSString",R,V_attachmentFilename
TB,R,N,V_isPotentialEventMessage
initWithPerMessageTransformer:
init
integerValue
message
text
dictionaryWithObjects:forKeys:count:
initWithDictionary:
intValue
setObject:forKeyedSubscript:
detectedData
transform:
stringByAppendingString:
addObject:
initWithClassNameKey:
writeToPlistWithObject:andChunks:
readObjectWithPlist:chunks:context:
isEqualToConversationFlatteningTransformer:
hash
withPerMessageTransformer:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
toPlistWithChunks:
initWithPlist:chunks:context:
_perMessageTranformer
reservationNumberFromReservationSchema:
bookingTimeFromReservationSchema:
reservationStatusFromReservationSchema:
reservationHolderNameFromReservationSchema:
urlFromReservationSchema:
fromStartDate:endDate:
fromSchema:
initWithProvider:busName:busNumber:tripDuration:departureBusStopLocation:departurePlatform:arrivalBusStopLocation:arrivalPlatform:
UUIDString
initWithVocabularyIdentifier:spokenPhrase:pronunciationHint:
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:reservedSeat:busTrip:
schemaFromBusReservation:
schemaFromReservation:
mutableCopy
busTrip
tripDuration
startDateComponents
schema
endDateComponents
busName
busNumber
departureBusStopLocation
postalAddress
departurePlatform
arrivalBusStopLocation
arrivalPlatform
provider
dictionaryRepresentation
stringWithFormat:
dictionary
setObject:forKey:
numberWithBool:
setKey:
allocWithZone:
hasKey
model
setModel:
setHasModel:
hasModel
modelAsString:
StringAsModel:
setResult:
setHasResult:
hasResult
supervision
setSupervision:
setHasSupervision:
hasSupervision
supervisionAsString:
StringAsSupervision:
readFrom:
writeTo:
copyTo:
mergeFrom:
result
_key
_model
_supervision
_result
_has
TB,R,N
T@"NSString",&,N,V_key
TB,N
Ti,N,V_model
TB,N,V_result
Ti,N,V_supervision
floatValue
initWithLatitude:longitude:
coordinate
numberWithDouble:
numberWithUnsignedInt:
setExitCode:
setHasExitCode:
hasExitCode
exitCode
_exitCode
TI,N,V_exitCode
setWasSuggestedContact:
setHasWasSuggestedContact:
hasWasSuggestedContact
setWasKnownContact:
setHasWasKnownContact:
hasWasKnownContact
setApp:
setHasApp:
hasApp
appAsString:
StringAsApp:
wasSuggestedContact
wasKnownContact
_app
_wasKnownContact
_wasSuggestedContact
TB,N,V_wasSuggestedContact
TB,N,V_wasKnownContact
Ti,N,V_app
setBundleId:
hasBundleId
bundleId
_bundleId
T@"NSString",&,N,V_bundleId
numberWithUnsignedInteger:
tupleWithFirst:second:
sg_clonableItemAtIndex:inCodedArray:
second
unsignedIntegerValue
first
copy
textContentNoCopy
textContent
sg_clone
direction
intent
contacts
dateInterval
startDate
_peopleFromInteraction:
identifier
groupIdentifier
initWithPerson:bundleId:interactionIdentifier:groupId:date:
personHandle
value
suggestionType
_harvestPerson:handle:suggestionType:bundleId:
aliases
controlCharacterSet
stringByTrimmingCharactersInSet:
nameComponents
contactIdentifier
type
_harvestEmail:
_harvestPhoneNumber:
_harvestSocialProfile:handle:bundleId:
UTF8String
originWithType:sourceKey:externalKey:bundleId:fromForwardedMessage:
customIdentifier
localizedApplicationName
teamId
initWithUsername:userIdentifier:bundleIdentifier:displayName:service:teamIdentifier:
descriptorForRequiredKeysForStyle:
unifiedContactWithIdentifier:keysToFetch:usingContactStore:error:
stringFromContact:style:
serialize
keyForSocialProfile:
userIdentifier
username
keyForNormalizedPhone:
keyForEmail:
initWithIntentPersonAtDate:bundleId:handle:displayName:
initWithIdentityKey:
duplicateKey
initWithEntityKey:entityType:parentKey:
initWithDuplicateKey:title:parent:
uniqueIdentifiers
contactDetail:
addTag:
addEnrichment:
initWithLabel:value:
extractionInfoWithExtractionType:modelVersion:confidence:
addDetectedPhoneNumber:forIdentity:context:contextRangeOfInterest:extractionInfo:
addDetectedEmailAddress:forIdentity:context:contextRangeOfInterest:extractionInfo:
enrichments
fromInteraction
interactionId:
interactionBundleId:
interactionContactIdentifier:
interactionGroupId:
parseInteraction:bundleId:
intentClassWhitelist
grabNameIfNeededFromContactStore:
pipelineEntity
groupId
interactionIdentifier
date
email
socialProfile
phoneNumber
_handle
_groupId
_interactionIdentifier
_date
_displayName
_nameComponents
_email
_socialProfile
_phoneNumber
_contactIdentifier
T@"NSString",R,N,V_bundleId
T@"NSString",R,N,V_groupId
T@"NSString",R,N,V_interactionIdentifier
T@"NSDate",R,N,V_date
T@"NSString",R,N,V_displayName
T@"NSPersonNameComponents",R,N,V_nameComponents
T@"NSString",R,N,V_email
T@"SGSocialProfileDetails",R,N,V_socialProfile
T@"NSString",R,N,V_phoneNumber
T@"NSString",R,N,V_contactIdentifier
tagForLabel:value:
messageId
source
messageWithMessageId:fromSource:
identity:
messageWithEmailKey:
parse:
asJsonLd
dataWithJSONObject:options:error:
initWithData:encoding:
parseMicrodataToJsonLd:error:
bindNamedParam:toInt64:
_updateURLs:stmt:
prepAndRunSQL:onPrep:onRow:onError:
timeIntervalSince1970
bindNamedParam:toNSSet:
bindNamedParam:toDouble:
rangeOfString:options:
bindNamedParam:toBlock:
readTransaction:
compare:options:
numberWithInt:
writeTransaction:
nonnullNSStringForColumnName:table:
initWithString:
getDoubleForColumnName:table:
initWithTimeIntervalSince1970:
isNullForColumnName:table:
getNSStringForColumnName:table:
getIntegerForColumnName:table:
initWithURL:title:receivedFromHandle:bundleIdentifier:groupIdentifier:documentIdentifier:documentTitle:documentDate:documentTimeInterval:receivedAt:flags:
absoluteString
bindNamedParam:toNSString:
title
receivedFromHandle
bundleIdentifier
documentIdentifier
receivedAt
documentTitle
documentDate
documentTimeInterval
flags
bindNamedParam:toInteger:
initWithTimeIntervalSinceNow:
deleteURLsOlderThanDate:deletionCount:
trimURLTableDownToLimit:deletionCount:
emitURLChanged
bindNamedParam:toNonnullNSString:
appendString:
bindParam:toNonnullNSString:
bindNamedParam:toNSArray:
recentURLsWithLimit:
urlsFoundBetweenStartDate:endDate:excludingBundleIdentifiers:containingSubstring:flagFilter:limit:
registerURLFeedback:absoluteURL:
writeURL:
trimURLs
urlsFoundBetweenStartDate:endDate:bundleIdentifier:
deleteURLsFromBundleIdentifier:
deleteURLsFromBundleIdentifier:groupIdentifierGlobs:
deleteURLsFromBundleIdentifier:documentIdentifiers:
initWithSource:vector:
modelClass
vector
predict:
outputDimension
initWithCapacity:
locale
trainingFeaturesOf:inLanguage:
initWithGuardedData:
removeAllObjects
runWithLockAcquired:
registerOnUpdateBlock:
newTransformerInstanceForLanguage:
initWithBlock:
modelClassForObjective:
transformerInstanceForLanguage:
trainingFeaturesOf:
rangeOfString:
initWithMatchType:range:labelRange:labelString:valueRange:valueString:
transformer
transformers
transform:stopAfterTransformerWithIndex:
_pas_componentsJoinedByString:
transformerInstanceForLanguage:withObjective:
trainingFeaturesOf:inLanguage:withObjective:
featurize:
initWithModel:locale:featurizer:modelSource:
predictForInput:
featurizer
modelSource
_featurizer
_modelSource
_locale
T@"<PMLMultiLabelClassifierProtocol>",R,V_model
T@"<PMLTransformerProtocol>",R,V_featurizer
T@"SGModelSource",R,V_modelSource
T@"NSString",R,C,V_locale
sessionDescriptor
initWithSessionDescriptor:modelClass:
rules
descriptorForName:version:locale:
defaultWindowAndNgrams
defaultSessionDescriptorForModelId:featureVersion:language:windowAndNgrams:
initWithTransformer:sessionDescriptor:modelClass:
setSessionDescriptor:
setTransformer:
setModelClass:
_sessionDescriptor
_transformer
_modelClass
T@"PMLSessionDescriptor",&,N,V_sessionDescriptor
T@"<PMLTransformerProtocol>",&,N,V_transformer
T#,&,N,V_modelClass
_modelsAvailabeForMode:objective:language:
shouldCollectTrainingDataForObjective:language:
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
setSource:
setHasSource:
hasSource
sourceAsString:
StringAsSource:
setSignature:
setHasSignature:
hasSignature
detail
setDetail:
setHasDetail:
hasDetail
detailAsString:
StringAsDetail:
outcome
setOutcome:
setHasOutcome:
hasOutcome
outcomeAsString:
StringAsOutcome:
foundInSenderCNContact
setFoundInSenderCNContact:
setHasFoundInSenderCNContact:
hasFoundInSenderCNContact
foundInSenderCNContactAsString:
StringAsFoundInSenderCNContact:
setExtractionModelVersion:
setHasExtractionModelVersion:
hasExtractionModelVersion
setIsUnlikelyPhone:
setHasIsUnlikelyPhone:
hasIsUnlikelyPhone
extractionSignatureSource
setExtractionSignatureSource:
setHasExtractionSignatureSource:
hasExtractionSignatureSource
extractionSignatureSourceAsString:
StringAsExtractionSignatureSource:
signature
extractionModelVersion
isUnlikelyPhone
_detail
_extractionModelVersion
_extractionSignatureSource
_foundInSenderCNContact
_outcome
_source
_isUnlikelyPhone
_signature
Ti,N,V_source
TB,N,V_signature
Ti,N,V_detail
Ti,N,V_outcome
Ti,N,V_foundInSenderCNContact
TI,N,V_extractionModelVersion
TB,N,V_isUnlikelyPhone
Ti,N,V_extractionSignatureSource
foundIn
setFoundIn:
setHasFoundIn:
hasFoundIn
foundInAsString:
StringAsFoundIn:
setHasName:
setHasHasName:
hasHasName
tokens
setTokens:
setHasTokens:
hasTokens
tokensAsString:
StringAsTokens:
hasName
_foundIn
_tokens
_hasName
Ti,N,V_foundIn
TB,N,V_hasName
Ti,N,V_tokens
reminderPrimaryKeyForEntityId:
getReminder:
reminderEntityIdForDuplicateKey:
reminderEntityIdForPrimaryKey:
reminderDuplicateKeyForEntityId:
reminderSourceKeyForDuplicateKey:
reminderOriginForPrimaryKey:
_deserializeDateComponents:
storageLocationWithPrimaryKey:
dateWithTimeIntervalSince1970:
initWithRecordId:duplicateKey:sourceKey:origin:dueDate:dueLocationType:dueLocation:dueLocationTrigger:title:reminderStatus:contactIdentifier:creationDate:
prepAndRunQuery:onPrep:onRow:onError:
toReminder
recordId
numericValue
bindParam:name:int64:
bindParam:name:nsstring:
origin
sourceKey
bindParamToNull:name:
dueDateComponents
_serializeDate:
dueStorageLocation
commitStorageLocation:
dueLocationType
dueLocationTrigger
sourceURL
creationDate
bindParam:name:double:
opaqueKey
uniqueKey
reminderStatus
stringFromDate:
sg_dateComponentsFromISO8601String:
initWithSerialized:
recordIdWithNumericValue:
originForDuplicateKey:sourceKey:store:
getReminderWithRecordId:
getReminderWithDuplicateKey:
commitStorageReminder:
setCacheHit:
setHasCacheHit:
hasCacheHit
cacheHit
_cacheHit
TB,N,V_cacheHit
contactDetail
setContactDetail:
setHasContactDetail:
hasContactDetail
contactDetailAsString:
StringAsContactDetail:
setCorrect:
setHasCorrect:
hasCorrect
mode
setMode:
setHasMode:
hasMode
modeAsString:
StringAsMode:
correct
_contactDetail
_mode
_correct
Ti,N,V_contactDetail
TB,N,V_correct
Ti,N,V_mode
bindNamedParam:toInt64AsNSNumber:
setValue:forKey:binder:
getInt64AsNSNumberForColumn:
getForKey:binder:
getInt64NSNumberForKey:
bindNamedParam:toDoubleAsNSNumber:
getDoubleAsNSNumberForColumn:
getNSStringForColumn:
dateFromString:
deleteValueForKey:
setInt64NSNumber:forKey:
incrementInt64NSNumber:forKey:
setDoubleNSNumber:forKey:
getDoubleNSNumberForKey:
setNSString:forKey:
getNSStringForKey:
setNSDate:forKey:
getNSDateForKey:
quickTypeTriggerForContext:localeIdentifier:modelConfigPath:espressoBinFilePath:useContactNames:
languageForLocaleIdentifier:
initWithContentsOfFile:
initWithLanguage:
detectNames:algorithm:
range
substringWithRange:
modelWithConfigPath:binPath:
labelForProbabilities:
doubleValue
_probablePriorPredictionInContext:predictedLabel:
numberWithInteger:
detectionsInPlainText:baseDate:
matchType
quickTypeTriggerForContext:localeIdentifier:modelConfigPath:espressoBinFilePath:
initWithEnrichedTaggedCharacterRanges:modelOutput:
modelOutput
enrichedTaggedCharacterRanges
titleMapping
labelTokenIndexesForOutputName:label:
candidatesForLabelTokenIndexes:inPlainText:
cleanCandidates:outputName:label:
simpleCandidateResolutionFromCandidates:
resolveCandidates:forCategory:label:rawIndexSet:taggedCharacterRanges:
initWithDomain:code:userInfo:
detectedDateComponentsForTokenIndexes:dataDetectorMatches:allowDatesInPast:inferDates:approximateTime:partialDate:useEndForDurations:
filterCandidateDateComponents:
mergeDetectedDateComponents:
year
month
detectedAddressForLabel:withError:
detectedPostalAddressExtractionForTokenIndexes:dataDetectorMatches:label:
hasExtraction
_simpleCandidateForOutputName:label:withError:
street
caseInsensitiveCompare:
city
postalCode
state
country
components:city:state:postalCode:country:
textRangeForTokenRange:
postalAddressComponents
plainText
enumerateRangesUsingBlock:
anyObject
allObjects
mergePostalAddressComponents:
initWithPlainText:components:
modelOutputSummary:
unsignedIntValue
addIndex:
candidatesForLabelIndexSets:inPlainText:forTaggedCharacterRanges:
candidatesForLabelTokenIndexes:inPlainText:forTaggedCharacterRanges:
caseInsensitiveContainsString:inCandidates:
describeCategory:
resolveCandidatesWithoutXPC:forCategory:label:rawIndexSet:taggedCharacterRanges:
sharedInstance
maxMergeDistanceForSection:label:
labelTokenIndexesForOutputName:label:modelOutput:maxMergeDistance:
stripRepeatedContentForSectionLength:label:
stripRepeatedContent:repeatedLength:
substringToIndex:
substringFromIndex:
labelTokenIndexesForOutputName:label:modelOutput:
containsIndex:
objectForKey:
initWithPlainText:category:dataDetectorMatches:enrichedTaggedCharacterRanges:modelOutput:fromSuggestTool:
detectedEventName
detectedReservationIdWithError:
detectedStartDateComponents
detectedEndDateComponents
detectedStartAddressWithError:
detectedEndAddressWithError:
detectedStartPlaceWithError:
detectedEndPlaceWithError:
modelOutputSummary
predictedStringsFromModelOutput
detectedEventPolarity
category
dataDetectorMatches
_fromSuggestTool
_category
_plainText
_dataDetectorMatches
T@"NSString",R,N,V_plainText
TC,R,N,V_category
T@"NSArray",R,N,V_dataDetectorMatches
dealloc
exceptionWithName:reason:userInfo:
raise
arrayWithCapacity:
numberWithUnsignedLongLong:
setTrialMetadata:
setBackgroundTrialMetadata:
ctsJobConstraintsCount
clearCtsJobConstraints
ctsJobConstraintsAtIndex:
addCtsJobConstraints:
setSubmodelsStats:
hasTrialMetadata
hasBackgroundTrialMetadata
setHoursSinceReference:
setHasHoursSinceReference:
hasHoursSinceReference
ctsJobConstraints
setCtsJobConstraints:count:
ctsJobConstraintsAsString:
StringAsCtsJobConstraints:
setHoursSinceLastIncrementalUpdate:
setHasHoursSinceLastIncrementalUpdate:
hasHoursSinceLastIncrementalUpdate
setIsSubmodelRebuilt:
setHasIsSubmodelRebuilt:
hasIsSubmodelRebuilt
setDaysAvailableDuringIncrementalUpdate:
setHasDaysAvailableDuringIncrementalUpdate:
hasDaysAvailableDuringIncrementalUpdate
setDaysProcessedDuringIncrementalUpdate:
setHasDaysProcessedDuringIncrementalUpdate:
hasDaysProcessedDuringIncrementalUpdate
setMailsProcessedDuringIncrementalUpdate:
setHasMailsProcessedDuringIncrementalUpdate:
hasMailsProcessedDuringIncrementalUpdate
setDeletedTokensCountToComplyToCappingPolicy:
setHasDeletedTokensCountToComplyToCappingPolicy:
hasDeletedTokensCountToComplyToCappingPolicy
setDeletedEmailsCount:
setHasDeletedEmailsCount:
hasDeletedEmailsCount
setRollbackedSlicesCountToComplyToPostDeletionPolicy:
setHasRollbackedSlicesCountToComplyToPostDeletionPolicy:
hasRollbackedSlicesCountToComplyToPostDeletionPolicy
setRollbackedEmailsCountToComplyToPostDeletionPolicy:
setHasRollbackedEmailsCountToComplyToPostDeletionPolicy:
hasRollbackedEmailsCountToComplyToPostDeletionPolicy
hasSubmodelsStats
setBiomeAggregationPerformanceInMilliSeconds:
setHasBiomeAggregationPerformanceInMilliSeconds:
hasBiomeAggregationPerformanceInMilliSeconds
setSubmodelsUpdatePerformanceInMilliSeconds:
setHasSubmodelsUpdatePerformanceInMilliSeconds:
hasSubmodelsUpdatePerformanceInMilliSeconds
setSubmodelsPruningForCappingPolicyPerformanceInMilliSeconds:
setHasSubmodelsPruningForCappingPolicyPerformanceInMilliSeconds:
hasSubmodelsPruningForCappingPolicyPerformanceInMilliSeconds
setCumulatedSubmodelsRollbackForPostDeletionPolicyPerformanceInMilliSeconds:
setHasCumulatedSubmodelsRollbackForPostDeletionPolicyPerformanceInMilliSeconds:
hasCumulatedSubmodelsRollbackForPostDeletionPolicyPerformanceInMilliSeconds
trialMetadata
backgroundTrialMetadata
hoursSinceReference
hoursSinceLastIncrementalUpdate
isSubmodelRebuilt
daysAvailableDuringIncrementalUpdate
daysProcessedDuringIncrementalUpdate
mailsProcessedDuringIncrementalUpdate
deletedTokensCountToComplyToCappingPolicy
deletedEmailsCount
rollbackedSlicesCountToComplyToPostDeletionPolicy
rollbackedEmailsCountToComplyToPostDeletionPolicy
submodelsStats
biomeAggregationPerformanceInMilliSeconds
submodelsUpdatePerformanceInMilliSeconds
submodelsPruningForCappingPolicyPerformanceInMilliSeconds
cumulatedSubmodelsRollbackForPostDeletionPolicyPerformanceInMilliSeconds
_ctsJobConstraints
_biomeAggregationPerformanceInMilliSeconds
_cumulatedSubmodelsRollbackForPostDeletionPolicyPerformanceInMilliSeconds
_submodelsPruningForCappingPolicyPerformanceInMilliSeconds
_submodelsUpdatePerformanceInMilliSeconds
_backgroundTrialMetadata
_daysAvailableDuringIncrementalUpdate
_daysProcessedDuringIncrementalUpdate
_deletedEmailsCount
_deletedTokensCountToComplyToCappingPolicy
_hoursSinceLastIncrementalUpdate
_hoursSinceReference
_mailsProcessedDuringIncrementalUpdate
_rollbackedEmailsCountToComplyToPostDeletionPolicy
_rollbackedSlicesCountToComplyToPostDeletionPolicy
_submodelsStats
_trialMetadata
_isSubmodelRebuilt
T@"SGMIMetricsTrialMetadata",&,N,V_trialMetadata
T@"SGMIMetricsTrialMetadata",&,N,V_backgroundTrialMetadata
TI,N,V_hoursSinceReference
TQ,R,N
T^i,R,N
TI,N,V_hoursSinceLastIncrementalUpdate
TB,N,V_isSubmodelRebuilt
TI,N,V_daysAvailableDuringIncrementalUpdate
TI,N,V_daysProcessedDuringIncrementalUpdate
TI,N,V_mailsProcessedDuringIncrementalUpdate
TI,N,V_deletedTokensCountToComplyToCappingPolicy
TI,N,V_deletedEmailsCount
TI,N,V_rollbackedSlicesCountToComplyToPostDeletionPolicy
TI,N,V_rollbackedEmailsCountToComplyToPostDeletionPolicy
T@"SGMIMetricsSubmodelsStats",&,N,V_submodelsStats
TQ,N,V_biomeAggregationPerformanceInMilliSeconds
TQ,N,V_submodelsUpdatePerformanceInMilliSeconds
TQ,N,V_submodelsPruningForCappingPolicyPerformanceInMilliSeconds
TQ,N,V_cumulatedSubmodelsRollbackForPostDeletionPolicyPerformanceInMilliSeconds
initWithConversations:rtRoutineManager:
detectReminders
detectRemindersInMail
localeAsset
assetVersion
loggingIdentifier
hasEventEnrichment
allRecipients
isInhuman
mailingList
isPartiallyDownloaded
isSent
timeIntervalSinceDate:
from
asCSPerson
serviceContext
store
sg_isSignificantWithStore:
releaseDissectorLock
extractReminderFromMailMessage:entity:
acquireDissectorLock
extractReminderFromTextMessage:entity:store:
processingLanguageForContent:
tokenizeTextContent:languageHint:
enrichedTaggedCharacterRangesFromTaggedCharacterRanges:messageIsSent:
modelInferences:
detectedTitleInModelOutput:enrichedTaggedCharacterRanges:textContent:language:
extractReminderFromOwnedMailMessage:entity:
runWithDissectorLock:
whitelistedRangesInContent:
taggedCharacterRanges
annotationType
tags
initWithAnnotationType:tags:range:text:
quotedRegions
intersectsIndexesInRange:
htmlParser
tabularRegions
signatureRegions
addObjectsFromArray:
initWithMessage:plainTextDetectedData:enrichedTaggedCharacterRanges:modelOutput:
_detectedReminderEnrichmentFromReminderMessage:parentEntity:language:parentMessage:startTimeProcessing:
detectedTitleForLanguage:
isProposal
hasTrigger
isTriggerOptional
triggerOptional
detectedDueDateComponents
dueLocation
storageLocationFromDueLocation:
_validateDueDateComponents:dueLocation:forReminderMessages:
urlForEKEventFromTextMessageWithUniqueIdentifier:
emailKey
urlForMailMessageWithId:
locationType
trigger
isAllDay:
_reminderEnrichmentWithTitle:dueDateComponents:dueLocationType:dueLocation:dueLocationTrigger:sourceURL:reminderStatus:parentEntity:parentMessage:allDay:
defaultLogger
logReminderExtractionFromEntity:interface:actionType:dueLocation:dueDateComponents:extractionStatus:timingProcessing:
_isTestMessage:
_testReminder:entity:
entityKey
isValidTextMessageForProcessing:
removeObjectForKey:
hasWhitelistedVerbInContent:
initWithMessage:entity:enrichedTaggedCharacterRanges:modelOutput:
isConfirmationOptionalForContent:
_reminderMessageForTextMessage:withEntity:extractionModel:processingLanguage:preprocessing:
setExtractedReminderDuplicateKey:
defaultLanguage
isConfirmation
extractedReminderDuplicateKey
entity
addTaggedCharacterRanges:
enrichedTaggedCharacterRangesFromEntity:forMessage:
setEnrichedTaggedCharacterRanges:
setModelOutput:
reminderTitleFromMessages:forLanguage:
dueDateComponentsFromMessages:
dueLocationFromMessages:
isRejection
rejectReminderByKey:error:
enrichTaggedCharacterRangesWithModelOutput:usingInputCharacterRanges:
validModelOutput:error:
userInfo
modelDescription
describeReminderExtractionStatus:
reminderMetadata:
detectLanguageFromText:
contactStore
fetchMeContactFromContactStore:
emailAddresses
emailAddress
dueDateDataDetectorMatches
dateComponentsFromDataDetectorMatch:inferDates:approximateTime:partialDate:useEndForDurations:
mergeDueLocations:
allDayDateComponentsFromDate:
hour
minute
nanosecond
enrichAndFilterTaggedCharacterRanges:usingMapping:withAnnotationType:
mergeTaggedCharacterRanges:usingBaseTaggedCharacterRanges:extraTags:tagOverrides:alignWithGroundTruth:
defaultDueDateComponentsFromMessages:
isReminderDueDateComponentsInPast:givenReferenceDate:allDay:
showPastEvents
currentCalendar
defaultTimeZone
dateByAddingTimeInterval:
componentsInTimeZone:fromDate:
fetchLocationOfInterestByType:name:
getContactIdentifierForName:andEmail:ifMatchingPredicate:
creationTimestamp
duplicateKeyForPseudoReminderWithGroupId:withCreationTime:parentKey:
timeZone
rangeWithStartDate:startTimeZone:endDate:endTimeZone:
setTimeRange:
initWithArray:
setLocations:
numberWithUnsignedChar:
setCreationTimestamp:
allDay
preferredName
visits
fetchLocationsOfInterestOfType:withHandler:
mapItem
location
latitude
longitude
horizontalUncertainty
confidence
geoMapItemHandle
initWithType:label:address:airportCode:latitude:longitude:accuracy:quality:handle:
timeIntervalSinceReferenceDate
dateFromComponents:
setHour:
setMinute:
setSecond:
setTimeZone:
enumerateContactsMatchingName:withKeysToFetch:usingContactStore:error:usingBlock:
array
dissectMailMessage:entity:context:
dissectTextMessage:entity:context:
reminderTitleForContent:
mailAddressIsAccountOwner:
conversations
_conversations
_rtRoutineManager
methodForSelector:
_trialEventExtractionAssetsPath
_trialEventClassifierModelPath
_trialEventClassifierThreshold
_trialMessageProcessingLimit
_trialRateLimitInterval
initWithClientIdentifier:
updateFactors
clientWithIdentifier:
levelForFactor:withNamespaceName:
directoryValue
hasPath
refresh
addUpdateHandlerForNamespaceName:usingBlock:
refreshEnrollmentInformationForNamespace:
refreshRolloutIdentifiersForNamespace:
path
defaultManager
fileExistsAtPath:isDirectory:
eventExtractionAssetsPath
eventClassifierModelPath
eventClassifierThreshold
messageProcessingLimit
rateLimitInterval
_lock
setErrorCode:
setHasErrorCode:
hasErrorCode
errorCode
_errorCode
TI,N,V_errorCode
defaultHarvestStore
initWithEntityStore:
defaultCoordinator
registerRemindersConsumer:levelOfService:
success
uniqueId
completionDateTimestamp
successWithNumberOfExtractions:
notes
dueDateTimestamp
initWithTimeIntervalSinceReferenceDate:
domainId
_consumeContentParts:title:fromHandle:documentDate:isOutgoingDocument:uniqueIdentifier:domainIdentifier:bundleIdentifier:context:
_pas_proxyComponentsJoinedByString:
shouldContinue
interrupted
_urlContainerFromText:documentDate:documentTitle:handle:isOutgoingDocument:uniqueIdentifier:domainIdentifier:bundleIdentifier:
writeWithEntityStore:
numberOfExtractions
_shouldProcessSearchableItem:
bundleID
completionDate
authorAddresses
extractURLsFromAttributesOfItem:handle:
extractURLsFromTextPropertiesOfItem:handle:
contentCreationDate
searchableItemIsOutgoing:
urlsFromAttributes:handle:bundleIdentifier:domainIdentifier:uniqueIdentifier:documentTitle:documentDate:documentTimeInterval:receivedAt:isOutgoingDocument:
textContentNoCopyRetainingBackingBuffer:
comment
dueDate
urlsFromText:handle:dataDetectorMatches:bundleIdentifier:domainIdentifier:uniqueIdentifier:documentTitle:documentDate:documentTimeInterval:receivedAt:isOutgoingDocument:
setup
processSearchableItem:
processUserAction:searchableItem:
processInteraction:bundleIdentifier:protectionClass:
purgeSpotlightReferencesWithBundleIdentifier:uniqueIdentifiers:
deleteSpotlightReferencesWithBundleIdentifier:uniqueIdentifiers:
deleteSpotlightReferencesWithBundleIdentifier:domainIdentifiers:
deleteSpotlightReferencesWithBundleIdentifier:
T@"NSString",R,N
consumerName
deleteDataDerivedFromContentMatchingRequest:
consumeRemindersContentWithContext:
_entityStore
_urlDissector
doubleAsNonnullNSNumberForColumnName:table:
dateWithTimeIntervalSinceReferenceDate:
initWithMessageId:mailboxId:score:isSalient:gteSaliency:isCounted:creationDate:
initWithMessageId:mailboxId:score:isSalient:creationDate:
getInt64ForColumnName:table:
score
isSalient
gteSaliency
isCounted
mailboxId
checkExistsSaliencyForMessageId:
insertSaliency:
updateSaliency:saliency:
getNSDataForColumnName:table:
initWithLog:isLogged:
setActive:
active
setMissingAttachments:
setMissingRecipients:
setSubmodelsProbabilities:
initWithData:
data
bindNamedParam:toNSData:
saliencyForMessageId:
topSalienciesForMailboxId:limit:
sortedSaliencyResultsRestrictedToMailboxTypes:mailboxIds:receivedOnOrAfter:ascending:limit:
commitSaliency:
updateSaliencyCreationTimestampForTesting:timestamp:
clearSaliencyTable
setAllMailIntelligenceAsSalient
setAllMailIntelligenceAsNotSalient
mailIntelligenceStagedLogsForMessageId:
setMailIntelligenceStagedLogs:forMessageId:
markMailIntelligenceStagedLogsAsLoggedAndClearLogPayloadForMessageId:
setActiveTrialMetadata:
setActiveAggregatedAccuracyLogForThePastFourWeeks:
setActiveAggregatedAccuracyLogSinceModelInitialization:
setBackgroundAggregatedAccuracyLogForThePastFourWeeks:
setBackgroundAggregatedAccuracyLogSinceModelInitialization:
hasActiveTrialMetadata
hasActiveAggregatedAccuracyLogForThePastFourWeeks
hasActiveAggregatedAccuracyLogSinceModelInitialization
hasBackgroundAggregatedAccuracyLogForThePastFourWeeks
hasBackgroundAggregatedAccuracyLogSinceModelInitialization
activeTrialMetadata
activeAggregatedAccuracyLogForThePastFourWeeks
activeAggregatedAccuracyLogSinceModelInitialization
backgroundAggregatedAccuracyLogForThePastFourWeeks
backgroundAggregatedAccuracyLogSinceModelInitialization
_activeAggregatedAccuracyLogForThePastFourWeeks
_activeAggregatedAccuracyLogSinceModelInitialization
_activeTrialMetadata
_backgroundAggregatedAccuracyLogForThePastFourWeeks
_backgroundAggregatedAccuracyLogSinceModelInitialization
T@"SGMIMetricsTrialMetadata",&,N,V_activeTrialMetadata
T@"SGMIMetricsAggregatedAccuracyLog",&,N,V_activeAggregatedAccuracyLogForThePastFourWeeks
T@"SGMIMetricsAggregatedAccuracyLog",&,N,V_activeAggregatedAccuracyLogSinceModelInitialization
T@"SGMIMetricsAggregatedAccuracyLog",&,N,V_backgroundAggregatedAccuracyLogForThePastFourWeeks
T@"SGMIMetricsAggregatedAccuracyLog",&,N,V_backgroundAggregatedAccuracyLogSinceModelInitialization
queryForPersonHandle:startDate:endDate:contentTypes:
method
setMethod:
setHasMethod:
hasMethod
methodAsString:
StringAsMethod:
_method
Ti,N,V_method
setCustomResponsesAfterPruning:
setHasCustomResponsesAfterPruning:
hasCustomResponsesAfterPruning
customResponsesAfterPruning
_customResponsesAfterPruning
TI,N,V_customResponsesAfterPruning
itemProps
itemValue
isReferencedBy:
addItemProp:
_itemProps
T@"NSArray",R,N,V_itemProps
uniqueIdentifierForMessageId:
initWithPattern:options:error:
matchesInString:options:range:
initWithBytesNoCopy:length:freeWhenDone:
dataUsingEncoding:
bytes
stringByExtractingPlainTextFromHTML:tableDelimiters:stripLinks:
stringByExtractingPlainTextFromHTML:
initWithSeatSection:seatRow:seatNumber:seatingType:
seatNumber
seatRow
seatSection
seatingType
initWithTracker:
setPet2Tracker:
unsignedShortValue
instance
pet2Tracker
trackScalarForMessage:
findContactsForDetailType:andValue:
personExistsInContacts:name:handle:
_recordExtractionEventFromSource:foundInSignature:isDDSignature:detailType:outcome:foundInCNContact:modelVersion:isUnlikelyPhone:sigSource:
extraction
extractionInfo
modelVersion
_recordExtractionOutcome:detailType:fromMessage:foundInSignature:isDDSignature:detailType:detailValue:modelVersion:isUnlikelyPhone:
valueString
valueRange
plainTextDetectedData
reverseObjectEnumerator
recordExtractionOutcome:fromMessage:foundInSignature:isDDSignature:match:modelVersion:isUnlikelyPhone:
setDateIsCorrect:
setIsFromCongratulation:
StringAsOffset:
setOffset:
setDidRegexTrigger:
setModelVersion:
setDidResponseKitTrigger:
kvCacheManager
cacheOfType:
valueForKey:
enumerateLinguisticTagsInRange:scheme:options:orthography:usingBlock:
stringByReplacingCharactersInRange:withString:
tokenizeMessageContent:
attributesForNameWord:
nameForDataDetectorMatch:withValue:
recordExtractionOutcome:fromMessage:foundInSignature:isDDSignature:detection:
recordExtractionOutcome:fromMessage:foundInSignature:isDDSignature:match:foundInCNContact:modelVersion:isUnlikelyPhone:
recordExtractionOutcome:forDetectionsInMessage:signatureRange:isDDSignature:
recordBirthdayExtractionAccuracy:withOffset:withModelVersion:isFromCongratulation:didRegexTrigger:didResponseKitTrigger:
recordSelfIdModelScore:model:supervision:
recordSentContactDetailWithMessage:match:found:
_pet2Tracker
T@"PETEventTracker2",&,N,V_pet2Tracker
enumerateKeysAndObjectsUsingBlock:
addValueForScalarKeyWithDomain:subdomain:suffix:action:value:
setValueForScalarKeyWithDomain:subdomain:suffix:action:value:
pushValueForDistributionKeyWithDomain:subdomain:suffix:action:value:
incrementValuesInDomain:subdomain:type:action:withKeysAndIncrements:extraSignature:
initWithUTF8String:
trackScalarForMessage:count:
trackScalarForMessage:updateCount:
trackDistributionForMessage:value:
initWithSource:uniqueIdentifier:
isEqualToMessageKey:
isSupportedEntityType:
_uniqueIdentifier
T@"NSString",R,N,V_uniqueIdentifier
T@"NSString",R,N,V_source
exitOnErrorIndicatingIOError:
handleSqliteError:error:onError:db:
initWithExitCode:
startDissectionOfMessage:inContext:
endDissectionOfMessage:inContext:
logPrewarmWithLastPrewarmTime:
startIngestOfMessages:
endIngestOfMessages:
pluginStartSetup:
pluginEndSetup:
pluginStartProcessingSearchableItem:
pluginEndProcessingSearchableItem:
pluginStartDeletion:
pluginEndDeletion:
contentLength
labelString
duplicateKeyForDeliveryWithProviderString:trackingNumber:parentKey:
createEnrichmentWithMatch:onParentEntity:
_pas_mappedArrayWithTransform:
messageSubjectDetectedData
_createEnrichmentsForDetections:entity:
addEnrichments:
logAggregateSummaryForInteraction:
senderDomain
_logDeliverySenderForSenderDomain:
arrayByAddingObjectsFromArray:
_logUniqueEnrichments:
entityType
deliveryKey
externalIdentifier
setByAddingObject:
stringForProvider:
_pas_leftFoldWithInitialObject:accumulate:
auditToken
processIdentifier
sgd_clientName
templateShortName
initWithEntity:state:duplicateEventKey:templateShortName:
initNewEventWithEntity:
initDuplicateOfCuratedEvent:withEntity:
initUpdatedEventWithEntity:curatedEventKey:
initCancellationOfCuratedEvent:templateShortName:entity:
initExtractionExceptionWithEntity:
duplicateEventKey
_state
_entity
_duplicateEventKey
_templateShortName
Ti,R,N,V_state
T@"SGEntity",R,N,V_entity
T@"SGCuratedEventKey",R,N,V_duplicateEventKey
T@"NSString",R,N,V_templateShortName
duplicateKeysMatchingAnyEventHash:
loadEventByDuplicateKey:
journal
initWithOperation:event:
addEntry:
base64EncodedDataWithOptions:
clearRequestCache
duplicateKeysMatchingAnyReminderHash:
loadReminderByKey:
initWithOperation:reminder:
clearMasterEntityCache
processNewConfirmOrRejectEventHashes:
processNewConfirmedOrRejectedReminderHashes:
hashesDidChange
initWithStore:
_store
events
reminders
deliveries
setContacts:
setEvents:
setReminders:
setDeliveries:
setInvalidatedIdentifiers:
suggestionsCount
combinedSuggestions
invalidatedIdentifiers
_contacts
_events
_reminders
_deliveries
_invalidatedIdentifiers
T@"NSArray",&,V_contacts
T@"NSArray",&,V_events
T@"NSArray",&,V_reminders
T@"NSArray",&,V_deliveries
T@"NSArray",&,V_invalidatedIdentifiers
sg_newStore
sg_usingSharedStoreForReadingOnly:
initWithNewEKEventStoreGetter:callBlockWithEKEventStoreForReading:
defaultEKStoreProvider
_newEKEventStoreGetter
_callBlockWithEKEventStoreForReading
minusSet:
addDomainsFromSelection:
shouldRunHandlerImmediately
addDeletion:uniqueIds:
addPurge:uniqueIds:
addDeletion:domainSelection:
deleteUniqueIds
setDeleteUniqueIds:
purgeUniqueIds
setPurgeUniqueIds:
deleteDomainIds
setDeleteDomainIds:
_deleteUniqueIds
_purgeUniqueIds
_deleteDomainIds
T@"NSMutableDictionary",&,N,V_deleteUniqueIds
T@"NSMutableDictionary",&,N,V_purgeUniqueIds
T@"NSMutableDictionary",&,N,V_deleteDomainIds
fetchChangeHistory
contactChanges
allValues
changeType
cnContactIdentifier
enumerateContactChangesWithKeysToFetch:fromContactStore:error:usingBlock:
addAddressBookObserver:forObjectLifetime:
addCalendarObserver:forObjectLifetime:
initWithBlock:idleTimeout:
requestCache
resultIfAvailable
setShouldUnifyResults:
changeHistoryWithFetchRequest:error:
changesTruncated
clearChangeHistory:
latestChangeAnchor
setToChangeAnchor:
executeChangeHistoryClearRequest:error:
defaultStore
sharedSuggestHistory
isEphemeral
_setupHistoryObserver:
asset
error
clearCachesFully:withCompletion:
registerUpdateHandler:
setQualityOfService:
setMaxConcurrentOperationCount:
lock
unlock
registerBlockOnSuggestionsSettingsChange:
_pmlTraining
runAsyncOnQueue:afterDelaySeconds:block:
_executeBoxTasks:
initWithName:boxMaker:handler:qos:
allKeys
deleteSpotlightReferencesWithBundleIdentifier:uniqueIdentifiers:completion:
deleteSpotlightReferencesWithBundleIdentifier:domainIdentifiers:completion:
purgeSpotlightReferencesWithBundleIdentifier:uniqueIdentifiers:completion:
addSuggestHistoryObserver:
deleteSpotlightReferencesWithBundleIdentifier:completion:
sharedSingletonInstance
setupManagerWithConnection:store:ctsManager:ekStoreProvider:contactStore:pet2Tracker:
initWithStore:ctsManager:ekStoreProvider:contactStore:pet2Tracker:
wait
deregisterUpdateHandlerAsyncWithToken:
defaultCenter
removeObserver:
suggestionsDirectory
sharedSingletonWithDirectory:
exportedInterface
protocol
logUnknownContactInformationShownCount:notShownCount:bundleId:
logMetricAutocompleteResult:recordId:contactIdentifier:bundleId:
logMetricContactSearchResult:recordId:contactIdentifier:bundleId:
logMetricAutocompleteUserSelectedRecordId:contactIdentifier:bundleId:
logMetricContactSearchResultSelected:contactIdentifier:bundleId:
logMetricSuggestedContactDetailUsed:contactIdentifier:bundleId:
logMetricSuggestedContactDetailShown:contactIdentifier:bundleId:
logMetricContactCreated:contactIdentifier:bundleId:
logMetricSearchResultsIncludedPureSuggestionWithBundleId:
logEventInteractionForEventWithUniqueKey:interface:actionType:
logEventInteractionForEventWithExternalIdentifier:interface:actionType:
logSuggestionInteractionForRecordId:interface:actionType:
isEnabledWithCompletion:
keepDirty:
noopWithCompletion:
confirmEvent:completion:
rejectEvent:completion:
confirmEventByRecordId:completion:
rejectEventByRecordId:completion:
deleteEventByRecordId:completion:
waitForEventWithIdentifier:toAppearInEventStoreWithLastModificationDate:completion:
confirmContact:confirmRejectUI:completion:
rejectContact:confirmRejectUI:completion:
confirmRecord:confirmRejectUI:completion:
rejectRecord:confirmRejectUI:completion:
confirmContactDetailRecord:confirmRejectUI:completion:
rejectContactDetailRecord:confirmRejectUI:completion:
prepareForRealtimeExtraction:
suggestionsFromSearchableItem:options:withCompletion:
harvestedSuggestionsFromSearchableItem:options:withCompletion:
messagesToRefreshWithCompletion:
updateMessages:state:completion:
reportMessagesFound:lost:withCompletion:
fullDownloadRequestBatch:withCompletion:
resolveFullDownloadRequests:withCompletion:
saliencyFromRFC822Data:withCompletion:
saliencyFromEmailHeaders:withCompletion:
topSalienciesForMailboxId:limit:withCompletion:
sortedSaliencyResultsRestrictedToMailboxTypes:mailboxIds:receivedOnOrAfter:ascending:limit:withCompletion:
lastFollowUpWarningResultsWithLimit:includingResultsFromPreviousCall:withCompletion:
identifyFollowUpWarningFromSubject:content:withCompletion:
identifyFollowUpWarningFromSubject:body:date:withCompletion:
preventUnsubscriptionOpportunitiesSuggestionsForField:toValues:withCompletion:
sortedUnsubscriptionOpportunitiesForField:minCount:minScore:limit:withCompletion:
sortedUnsubscriptionOpportunitiesForField:limit:withCompletion:
identifyWarningsFromSubject:content:toRecipients:ccRecipients:bccRecipients:originalToRecipients:originalCcRecipients:attachments:withCompletion:
identifyComposeWarningsFromSubject:content:toRecipients:ccRecipients:bccRecipients:originalToRecipients:originalCcRecipients:attachments:withCompletion:
identifyComposeWarningsFromSubject:content:attributes:toRecipients:ccRecipients:bccRecipients:originalToRecipients:originalCcRecipients:attachments:withCompletion:
reportUserEngagement:forWarning:withCompletion:
reportValue:forFeatureSetting:withCompletion:
reportMailIntelligenceFollowUpUserEngagement:forNSDataFromFollowUpWarning:withCompletion:
reportMailIntelligenceFollowUpUserEngagement:forStringFromFollowUpWarning:withCompletion:
suggestionsFromMessage:options:completionHandler:
harvestedSuggestionsFromMessage:bundleIdentifier:options:completionHandler:
harvestedSuggestionsFromMessage:bundleIdentifier:options:withCompletion:
harvestedSuggestionsFromMessages:bundleIdentifier:options:completionHandler:
fromDictionary:
initWithEmailMessage:
fullPipeline
dissect:
prepareSqlStoreInMemory
clearAllRegexCaches
deletePreparedSqlStoreInMemory
resetSharedCachesAndModels
responseWith:
suggestContactMatchesWithContact:limitTo:
contactMatchesWithContact:limitTo:withCompletion:
responseWithError:
recordIdForContactWithRowId:
emailAddress:label:extractionInfo:withRecordId:
contactWithId:name:emailAddresses:phones:postalAddresses:socialProfiles:
contactIsSignificantOrSignificanceIsDisabled:
suggestContactByRecordId:
response1
cnContactMatchesForRecordIds:withCompletion:
cnContactMatchesForRecordId:found:
suggestContactByRecordId:withSnippets:filterConfirmRejectDetails:
curatedContactsFromContactStore:matchingPseudoContact:error:
writeCNContactMissForRecordId:
parMapOnQueue:concurrencyLimit:input:f:
storageContactByRecordId:withSnippets:
suggestContactMatchesWithFullTextSearch:limitTo:
suggestContactMatchesWithMessagingPrefix:limitTo:
allContactsWithSnippets:limitTo:
significance
setSignificance:
convertToEvent:
suggestEventsStartingAt:endingAt:limitTo:options:
_mapToPseudoEvents:
loadEventByRecordId:
errorWithDomain:code:userInfo:
suggestEventsStartingAt:endingAt:prefix:limitTo:options:
eventsStartingAt:endingAt:limitTo:options:withCompletion:
_confirmReminderByRecordId:completion:
serializationPassesBasicScrutiny:
interfaceForRealtimeReminder:
confirmReminder:
logReminderInteractionFromReminder:interface:actionType:
confirmReminderByRecordId:error:
_rejectReminderByRecordId:completion:
rejectReminder:
rejectReminderByRecordId:error:
reminderAlarmTriggeredForRecordId:error:
allRemindersLimitedTo:
logUserCreatedReminderTitle:
allDeliveriesWithLimit:
useAllLanguagesAtOnce:
parseRfc822:
htmlBody
suggestionsFromEmailContent:headers:source:options:withCompletion:
appendData:
timeRange
absoluteRange
isNaturalLanguageEvent
sg_bumpTimeToLiveForZeroKeywordNLEventOnInteraction:
autoreleasingSerialQueueWithLabel:qosClass:
shortNamesAndRealtimeEventsFromEntity:message:enrichments:store:
alwaysShowCancelledEvents
filterPastEvents:
eventsWithSameOpaqueKeyAsPseudoEvent:harvestStore:
eventsWithSameAlternativeOpaqueKeyAsPseudoEvent:harvestStore:
pseudoEventKey
isDropoff
suggestionInfo
eventWithExternalID:
eventIdentifier
initWithExternalId:
curatedEventKeyForExactMatchOfPseudoEvent:candidates:
isCancelled
calendar
isSuggestedEventCalendar
isNaturalLanguageSuggestedEventCalendar
isSGEntity:duplicateOfEKEvent:withStore:
loadEntityByKey:
status
sg_isCuratedEventFromSuggestionNewerThan:
sg_fetchEKEventsForPseudoNLEvent:message:
sg_fetchEKEventsForPseudoNLEvent:entity:
sg_fetchEKEventsForPseudoEventBySimilarTitleAndStartTime:
naturalLanguageEvent
start
isEqualToDate:
hasRecurrenceRules
hasExtractionException
arrayWithArray:
parentKey
realtimeEventForNewEvent:harvested:
externalId
realtimeEventForDuplicateEvent:eventIdentifier:harvested:
realtimeEventUpdateToEvent:withNewValues:harvested:
realtimeEventForCanceledEvent:eventIdentifier:harvested:
realtimeEventForNearDuplicateEvent:harvested:
realtimeEventForExtractionExceptionWithSourceMessageId:
isEqualToDuplicateKey:
toEKEventWithStore:
localeWithLocaleIdentifier:
setLocale:
setDateFormat:
endDate
locationWithoutPrediction
hasTag:
sg_emailAddress
fullName
extractionType
birthday
hasNonTrivialInfo
inhumanFeatures
isMailingListId
fromReply
fromTextMessage
contactDetailKey
identityKey
pseudoContactKey
storageContactByKey:
profiles
messageKey
contactFromContactEntity:
mergeAll:
hardName
convertToContact:sourceEntity:enrichments:
setEmailAddresses:
nameStringFromEmailAddress:
sgNameFromString:origin:recordId:extractionInfo:
setName:
keyForPersonHandle:
keyForNormalizedEmail:
contactAggregator
augmentSuggestedContactWithContact:conversationId:store:handle:
_isContactInteresting:emailEntity:enrichments:hasContactCard:
realtimeContactWithContactStore:forPseudoContact:fromEntity:error:
contact
rowId
isEphemeralIdentifier:
markedAsHarvested
suggestContactMatchesByPhoneNumber:
_maybeFormatString
suggestContactMatchesByEmailAddress:isMaybe:onlySignificant:
suggestContactMatchesByPhoneNumber:isMaybe:onlySignificant:
sortedArrayUsingComparator:
recordMaybeContactFrom:withVersion:
_appEnumForBundleId:
responseWith:also:also:
suggestContactMatchesByEmailAddress:
suggestContactMatchesBySocialProfile:
loadMessagesToRefresh
toMailMessageKey
map:f:
initWithMailMessageKey:
updateMessages:state:
markMessagesFound:
loadFullDownloadRequestBatch:
resolveFullDownloadRequests:
isReservationItemReferences
reservationItemReferences
isReservationContainerReference
reservationContainerReference
initWithReservationContainerReference:reservationItemReferences:
lastObject
loadEntitiesByEntityKey:entityType:resolveDuplicates:
storageEventFromEntity:
eventsWithSameOpaqueKeyAsDuplicateKey:extraKey:harvestStore:
sg_fallbackURL
isIntentResponseUserActivityString
intentResponseUserActivityString
sg_userActivityWithRequiredString:
isInteractionTeamId
initWithActivityType:
activityType
sg_preferredApplicationRecordForUserActivityType:withTeamIdentifier:preferredBundleIdentifier:
initWithBundleIdentifier:allowPlaceholder:error:
sg_isAppleBundleIdentifier
applicationState
isInstalled
sg_preferredApplicationRecordForURL:
scheme
lowercaseString
isMessageAvailable:
createLaunchIntentForStorageEvent:
localeIdentifier
currentLocale
localizedNameWithPreferredLocalizations:
_showInFormatStringWithLocalization:
initWithBundleId:localizedShowInString:userActivity:intent:sourceURL:
defaultWorkspace
userActivity
initWithIntent:response:
setIntentHandlingStatus:
_setInteraction:donate:
openUserActivity:usingApplicationRecord:configuration:completionHandler:
openURL:configuration:completionHandler:
loadOriginByRecordId:
confirmRealtimeEvent:error:
clientIsMail
eventConfirmed:inApp:
event
sg_confirmedEKEventForSGEvent:
recordBannerConfirmedWithEvent:proposedEKEvent:confirmedEKEvent:inApp:
logEventInteractionForRealtimeEvent:interface:actionType:
confirmEventByRecordId:error:
loadEntityByRecordId:
shortNamesAndRealtimeEventsFromEntity:enrichments:store:
eventConfirmedByRecord:
rejectRealtimeEvent:error:
eventRejected:inApp:
recordBannerRejectedWithEvent:inApp:
rejectEventByRecordId:error:
eventRejectedByRecord:
confirmRealtimeContact:error:
contactConfirmed:inApp:
recordBannerConfirmedWithContact:proposedCNContact:confirmedCNContact:inApp:confirmationUI:pet2Tracker:
removeContact:
masterEntityId
detailForRecordId:
confirmOrRejectDetail:forContact:
confirmContactDetailByRecordID:error:
detail:confirmedForContact:
rejectContactDetailKey:
rejectContactDetailByRecordID:error:
detail:rejectedForContact:
recordContactDetailEngagementWithResolution:detailType:extractionType:modelVersion:confirmRejectUI:pet2Tracker:
_performAction:onRecord:withParentConfirmation:confirmRejectUI:completion:
enumerateDetailsWithBlock:
confirmContactByRecordID:error:
recordConfirmedForContact:
realtimeContactForNewContact:
rejectContact:
rejectContactByRecordID:error:
recordRejectedForContact:
recordRejectedContact:inApp:rejectionUI:pet2Tracker:
_performAction:onRecord:confirmRejectUI:completion:
_performAction:onContactDetailRecord:confirmRejectUI:completion:
rejectRealtimeContact:error:
contactRejected:inApp:
reset
rebuildContactDetailsCacheWithShouldContinueBlock:
sendRTCLogsWithCompletion:
planReceivedWithPayload:error:
planReceivedWithRecipe:attachments:error:
initWithMessageId:hasHashedMessageId:simpleMailMessage:senderConnectionScore:biomeMessageSummary:store:preLoadedFeatureNames:
defaultConfig
evaluate:enablePreFiltering:config:error:
subject
initWithKey:value:
simpleMailMessageFromHeaders:
preventUnsubscriptionOpportunitiesSuggestionsForField:toValues:
sortedUnsubscriptionOpportunitiesForField:minCount:minScore:limit:
sortedUnsubscriptionOpportunitiesForField:limit:
identifyWarningsFromSubject:content:toRecipients:ccRecipients:bccRecipients:originalToRecipients:originalCcRecipients:attachments:
identifyComposeWarningsFromSubject:content:toRecipients:ccRecipients:bccRecipients:originalToRecipients:originalCcRecipients:attachments:
identifyComposeWarningsFromSubject:content:attributes:toRecipients:ccRecipients:bccRecipients:originalToRecipients:originalCcRecipients:attachments:
identifyFollowUpWarningFromSubject:content:
identifyFollowUpWarningFromSubject:body:date:
reportUserEngagement:forWarning:
initWithNSData:
reimportRequestsContainBundleIdentifier:uniqueIdentifier:
initWithServiceContext:concurrencyBehavior:backpressureHazard:
processSearchableItem:pipeline:context:
incStatsCounterWithKey:byValue:
deserializeAttributes:andBody:
searchableItemIsEligibleForHarvesting:eligibleExceptForAge:
addSearchableItems:completion:
response
enqueueSearchableItems:completion:
recordInteractionIgnoredWithReason:
_harvestPeopleFromInteractions:bundleId:
_harvestReservationsFromInteractions:bundleId:queue:completion:
characterSetWithCharactersInString:
rangeOfCharacterFromSet:
writeEntity:
syncNewBlobsIfChanged
canConvertToSchemaOrg
_processReservationInteractions:bundleId:completion:
UUID
customPipeline:
initWithInteraction:identifier:fromBundleIdentifier:
sg_LoggingIdentifier
geocodeEnrichmentsInPipelineEntity:withCompletion:
writeInteractionEventEntities:
addEnrichment:withParentEntity:
searchableIndex
setIndexDelegate:
requestReimportFromIdentifier:forPersonHandle:startDate:endDate:
isSupportedSearchableItemBundleIdentifier:
markLostSpotlightReferencesWithBundleIdentifier:uniqueIdentifiers:
clearContactAggregator
deleteSessionsWithIdentifiers:bundleID:
allDomains
clearContactAggregatorConversation:
deleteSessionsWithDomainIdentifiers:bundleID:
deleteSessionsWithBundleID:
deleteInteractionsWithBundleId:
deleteInteractionsWithBundleId:identifiers:
deleteInteractionsWithBundleId:groupIdentifiers:
eventsFromSchemaOrgItems:
host
allowAnyDomainForMarkup
isStructuredEventCandidateForURL:title:
isEventCandidateForURL:title:withCompletion:
detectStructuredEvents
shouldAdmitContentFromBundleIdentifier:
duplicateKeyForWebPageFromSource:
initWithDuplicateKey:title:
setLastModifiedTimestamp:
dissectURL:title:htmlPayload:entity:
setEnrichments:
allowGeocode
locations
when
isValidAllDayRange
geocodeEvent:withCallback:
setPendingGeocode:
sqlStoreInMemory
writeEnrichment:
transactionWithName:
lastModifiedDate
eventWithIdentifier:
addObserverForName:object:queue:usingBlock:
waitForSemaphore:timeoutSeconds:
stringByReplacingOccurrencesOfString:withString:
calendarItemsWithExternalIdentifier:
initWithSource:messageId:
setDuplicateKey:
logEventInteractionForRealtimeEvent:parentEntity:interface:actionType:
logEventInteractionForEntity:interface:actionType:
logReminderInteractionFromEntity:usingStore:interface:actionType:
recordInteractionForEventWithInterface:actionType:harvestedSGEvent:curatedEKEvent:
bumptTTLForNLEvent:
entityFromUniqueKey:
removeAllStoredPseudoContacts
clear
clearContactsWithConversationIdentifier:
deleteZoneWithCompletion:
defaultBudget
throttlingState
localizedStringForKey:preferredLocalization:
resourceBundle
localizedStringForKey:value:table:
ipsosMessageWithSearchableItem:
messageWithIPMessage:
urlsFoundBetweenStartDate:endDate:excludingBundleIdentifiers:containingSubstring:flagFilter:limit:withCompletion:
mailItemIsValid:
protection
setProtection:
_suggestionsFromSearchableItem:options:dissectIfNecessary:withCompletion:
_emailContentCacheSalt
parseRfc822Headers:htmlContent:source:
realtimeSuggestionsForMailOrMessageWithHash:options:completion:completionDelivery:providedBy:searchableItem:dissectIfNecessary:isTextMessage:
domainIdentifierForSpotlightReferenceForBundleIdentifier:uniqueIdentifier:
setDomainIdentifier:
initWithContacts:events:reminders:
_suggestionsFromMessage:options:dissectIfNecessary:completionDelivery:completionHandler:
timeIntervalSinceNow
_pas_filteredArrayWithTest:
messagesBannerLimit
indexOfObject:
reminder
filterRealtimeEvents:
_sendChatChangedNotificationWithDomainIdentifier:
suggestionsFromMessage:options:completionDelivery:completionHandler:fullCompletionHandler:
compare:
sortUsingComparator:
loadOrigin:
storageReminderFromEntity:origin:
foundInAppsStringLongVersionForAppName:contactName:
foundInAppsStringCompactVersionWithContactName:
foundInAppsStringWithoutContactForAppName:
registerMailConsumer:levelOfService:
registerInteractionConsumer:levelOfService:
updateBox:
accessCriteriaUsingBundleIdentifierBlock:domainSelectionBlock:incontrovertiblyDeletedUniqueIdentifiersBlock:purgedUniqueIdentifiersBlock:
contentProtection
initWithMailContentEvent:contentProtection:htmlParser:
initWithBundleIdentifier:highPriority:harvestedOnBattery:receivedOnBattery:harvestSource:
headers
processMailMessage:headers:pipeline:context:harvestMetrics:
processTextMessage:pipeline:context:harvestMetrics:
interaction
foundInStringForRecordId:style:withCompletion:
contactMatchesWithContactIdentifier:limitTo:withCompletion:
contactMatchesWithContactIdentifiers:limitTo:withCompletion:
emailAddressIsSignificant:withCompletion:
contactMatchesWithFullTextSearch:limitTo:withCompletion:
contactMatchesWithMessagingPrefix:limitTo:withCompletion:
contactFromRecordId:withCompletion:
cnContactMatchesForRecordId:withCompletion:
contactMatchesByPhoneNumber:withCompletion:
contactMatchesByEmailAddress:withCompletion:
contactMatchesBySocialProfile:withCompletion:
namesForDetail:limitTo:prependMaybe:onlySignificant:withCompletion:
namesForDetailCacheSnapshotsWithCompletion:
originFromRecordId:completion:
allContactsWithSnippets:limitTo:withCompletion:
recentURLsWithLimit:withCompletion:
urlsFoundBetweenStartDate:endDate:excludingBundleIdentifiers:limit:withCompletion:
registerURLFeedback:absoluteURL:withCompletion:
eventFromUniqueId:completion:
launchInfoForSuggestedEventWithUniqueIdentifier:sourceURL:clientLocale:ignoreUserActivitySupport:ignoreMailCheck:completion:
launchAppForSuggestedEventUsingLaunchInfo:completion:
schemaOrgToEvents:completion:
allEventsLimitedTo:withCompletion:
isEventCandidateForURL:andTitle:containsSchemaOrg:withCompletion:
suggestionsFromURL:title:HTMLPayload:withCompletion:
confirmReminderByRecordId:completion:
confirmRealtimeReminder:completion:
rejectReminderByRecordId:completion:
rejectRealtimeReminder:completion:
reminderAlarmTriggeredForRecordId:completion:
allRemindersLimitedTo:withCompletion:
reminderTitleForContent:withCompletion:
logUserCreatedReminderTitle:withCompletion:
allDeliveriesWithLimit:withCompletion:
ipsosMessagesFromSearchableItems:withCompletion:
addSearchableItemMetadata:htmlData:completion:
deleteInteractionsWithBundleId:completion:
deleteInteractionsWithBundleId:identifiers:completion:
deleteInteractionsWithBundleId:groupIdentifiers:completion:
eventsStartingAt:endingAt:prefix:limitTo:options:withCompletion:
eventsInFutureLimitTo:options:withCompletion:
eventFromRecordId:withCompletion:
resetConfirmationAndRejectionHistory:
rebuildNamesForDetailCache:
realtimeSuggestionsFromURL:title:HTMLPayload:extractionDate:withCompletion:
suggestionsFromRFC822Data:source:options:withCompletion:
predictedToEmailAddressesWithToAddresses:ccAddresses:fromAddress:date:bounds:completion:
predictedCCEmailAddressesWithToAddresses:ccAddresses:fromAddress:date:bounds:completion:
addInteractions:bundleId:completion:
spotlightReimportFromIdentifier:forPersonHandle:startDate:endDate:completion:
removeAllStoredPseudoContactsWithCompletion:
daemonExitWithCompletion:
sleepWithCompletion:
suggestionsFromSimpleMailMessage:headers:options:withCompletion:
deleteCloudKitZoneWithCompletion:
powerStateWithCompletion:
planReceivedFromServerWithPayload:completion:
evaluateRecipe:attachments:completion:
contentAdmissionBlocklistDidChange:
consumeMailContentWithContext:
consumeInteractionWithContext:
getPet2Tracker
harvestStore
keepRealtimeAsLost
recentlyHarvestedDetailLock
lastSuggestionsFromMessageLock
lastSuggestionsFromMessageRequest
setLastSuggestionsFromMessageRequest:
lastSuggestionsFromMessageResponse
setLastSuggestionsFromMessageResponse:
messageHarvestQueue
initWithConnection:store:
initWithMessagesConnection:store:
clientIsMessages
storageContactFromRecordId:
cachedResultForKey:generateResult:validateResults:
containsNonCuratedData:
realtimeContactsFromEntity:enrichments:sourceTextMessage:store:
isSearchableItemPartOfReimport:
isSearchableItemPartOfReimportWithGetterBlock:bundleIdentifier:
registerForCoreSpotlightIndexing
registerForProactiveHarvesting
consumeMessagesContentWithContext:
context
clientName
_harvestStore
_connection
_history
_assetUpdateToken
_messageHarvestQueue
_ctsManager
_ekStoreProvider
_contactStore
_bundleIdToPET
_dirtyLock
_dirtyTransaction
_lastSuggestionsFromMessageRequest
_lastSuggestionsFromMessageResponse
_lastSuggestionsFromMessageLock
_settingsChangeToken
_purgeDeletionDropBox
_recentlyHarvestedDetailLock
_keepRealtimeAsLost
_bufferedInteractionsForBundleLock
_context
_clientName
T@"SGServiceContext",R,N,V_context
T@"NSString",R,N,V_clientName
initWithValidatedFormat:validFormatSpecifiers:locale:arguments:error:
initWithName:reason:userInfo:
initWithEmailMapping:linkMapping:
dataDetectorWithTypes:error:
setDataDetector:
localizedDescription
setEmailMapping:
setLinkMapping:
dataDetector
resultType
emailMapping
linkMapping
isEqualToEntityMappingTransformer:
withEmailMapping:linkMapping:
_dataDetector
_emailMapping
_linkMapping
T@"NSDataDetector",&,V_dataDetector
T@"NSString",&,V_emailMapping
T@"NSString",&,V_linkMapping
logWarningSignatureStats
sgmiFeatureStore
warningStatsForLogging:
logMessage:
lookForNicknamesInSentMailsAndStore:shouldContinue:
detectSalientMails
clearMailIntelligenceSaliencyDetection
checkForAndProcessVersionChange
incrementalSubmodelUpdateWithStore:shouldContinue:limit:log:
pruneDB
addSubmodelStatsToLog:
round:toSignificantFigures:
setSalientPredictedAsSalient:
setIgnorablePredictedAsSalient:
setIgnorablePredictedAsIgnorable:
setSalientPredictedAsIgnorable:
performMaintenanceWithShouldContinueBlock:
executeDailyTasksWithShouldContinue:
setHasSalientPredictedAsSalient:
hasSalientPredictedAsSalient
setSalientPredictedAsNeutral:
setHasSalientPredictedAsNeutral:
hasSalientPredictedAsNeutral
setHasSalientPredictedAsIgnorable:
hasSalientPredictedAsIgnorable
setNeutralPredictedAsSalient:
setHasNeutralPredictedAsSalient:
hasNeutralPredictedAsSalient
setNeutralPredictedAsNeutral:
setHasNeutralPredictedAsNeutral:
hasNeutralPredictedAsNeutral
setNeutralPredictedAsIgnorable:
setHasNeutralPredictedAsIgnorable:
hasNeutralPredictedAsIgnorable
setHasIgnorablePredictedAsSalient:
hasIgnorablePredictedAsSalient
setIgnorablePredictedAsNeutral:
setHasIgnorablePredictedAsNeutral:
hasIgnorablePredictedAsNeutral
setHasIgnorablePredictedAsIgnorable:
hasIgnorablePredictedAsIgnorable
salientPredictedAsSalient
salientPredictedAsNeutral
salientPredictedAsIgnorable
neutralPredictedAsSalient
neutralPredictedAsNeutral
neutralPredictedAsIgnorable
ignorablePredictedAsSalient
ignorablePredictedAsNeutral
ignorablePredictedAsIgnorable
_ignorablePredictedAsIgnorable
_ignorablePredictedAsNeutral
_ignorablePredictedAsSalient
_neutralPredictedAsIgnorable
_neutralPredictedAsNeutral
_neutralPredictedAsSalient
_salientPredictedAsIgnorable
_salientPredictedAsNeutral
_salientPredictedAsSalient
TI,N,V_salientPredictedAsSalient
TI,N,V_salientPredictedAsNeutral
TI,N,V_salientPredictedAsIgnorable
TI,N,V_neutralPredictedAsSalient
TI,N,V_neutralPredictedAsNeutral
TI,N,V_neutralPredictedAsIgnorable
TI,N,V_ignorablePredictedAsSalient
TI,N,V_ignorablePredictedAsNeutral
TI,N,V_ignorablePredictedAsIgnorable
_init
updateAll
loadLazyPlistWithBasename:
modelInferences:pflTraining:hasEvent:
loadModel
inputFromTaggedCharacterRanges:usingInputMapping:forModel:pflTraining:hasEvent:
predictionFromFeatures:error:
initWithFeatureProvider:
modelOutputFromOutputMapping:modelOutput:modelInput:
inputDictFromTaggedCharacterRanges:usingTokenMapping:forModel:pflTraining:hasEvent:
initWithFeatureDict:
setComputeUnits:
modelPath
initFileURLWithPath:
currentModelURLForModelName:
modelWithContentsOfURL:configuration:error:
supportedProviders
engineConfig
structuredEventInputMapping
structuredEventOutputMapping
valueForKeyPath:
initWithContentsOfURL:error:
isSenderSupportedForExtraction:
isSenderSupportedForShadowExtraction:
isSenderSupportedForMLDefaultExtraction:
isSenderSupportedForPFLTraining:
inputMapping
outputMapping
addressComponentThreshold
gazetteer
_inputMapping
_outputMapping
_supportedProviders
_engineConfig
withTargetMapping:phoneMapping:emailMapping:addressMapping:andDateMapping:
forLocale:withPersonalNameMapping:
withFullNameMapping:firstNameMapping:lastNameMapping:andPossessive:
withNumericMapping:andSymbolicMapping:
withTransformers:
withBucketSize:andNgrams:
documentSource
setDocumentSource:
setHasDocumentSource:
hasDocumentSource
documentSourceAsString:
StringAsDocumentSource:
setHighPriority:
setHasHighPriority:
hasHighPriority
setReceivedOnBattery:
setHasReceivedOnBattery:
hasReceivedOnBattery
setHarvestedOnBattery:
setHasHarvestedOnBattery:
hasHarvestedOnBattery
harvestSource
setHarvestSource:
setHasHarvestSource:
hasHarvestSource
harvestSourceAsString:
StringAsHarvestSource:
highPriority
receivedOnBattery
harvestedOnBattery
_documentSource
_harvestSource
_harvestedOnBattery
_highPriority
_receivedOnBattery
Ti,N,V_documentSource
TB,N,V_highPriority
TB,N,V_receivedOnBattery
TB,N,V_harvestedOnBattery
Ti,N,V_harvestSource
blockOperationWithBlock:
addDependency:
removeDependency:
setCompletionBlock:
addOperation:
regexpIdsThatMightMatchUtf8:
_data
_rpns
_nrpns
defaultInstance
registerForCTS
initWithHarvestStore:xpcActivityManager:
_registerForCTSTrimActivity
_registerForCTSVacuumActivity
_registerForCTSIdentityAnalysisActivity
_registerForCTSSendRTCActivity
_registerForCollectWeeklyStats
_registerForContactDetailCacheRebuildActivity
_registerProcessPendingGeocodesActivity
_registerProcessPendingVerificationActivity
_registerMailIntelligenceTasksActivity
_registerHarvestedURLMetricUploadActivity
_registerMobileAssetMetadataDownloadActivity
_performMobileAssetMetadataDownloadActivity:
registerForActivity:handler:
downloadMetadataWithCompletion:
setState:state:
shouldDefer:
_performCollectWeeklyStats:
callStatus
callerIdForDisplay
serviceProvider
recordConversationTurnWithDetail:received:throughApp:withStore:
isClassCLocked
dateWithTimeIntervalSinceNow:
setLimitingStartDate:
recentCalls
_logCallInteractions:
_performTrimActivity:
allowAgeBasedPruning
isUnlocked
pruneDuplicateEventExtractions:
pruneEntitiesOlderThanOneYearWithSuspensionHandler:
pruneMailIntelligenceOlderThanOneYearWithSuspensionHandler:
deleteInteractionEntitiesExceedingLimit:withSuspensionHandler:
deleteCompletedReimportRequests
deleteAllReimportRequestsOlderThanDate:
pruneNLEventEntitiesOlderThanTwoWeeks
pruneReminders
analyzeDatabase
cleanModelAssets
vacuum
trimDbWithDeferralBlock:
clearCaches
_performVacuumActivity
_performIdentityAnalysisActivity:
analyzeMergeBlobs:
_performSendRTCActivity:
sendRTCLogsWithShouldContinueBlock:completion:
performContactDetailCacheRebuildActivity:
_performProcessPendingGeocodesActivity:
nextPendingGeocode
writeEntityGeocodeResultToDb:
_performProcessPendingVerificationActivity:overrideVerificationStatus:
emailsPendingVerification
loadEntitiesBySourceKey:entityType:resolveDuplicates:
verifyDKIMSignatureForMailWithIdentifier:error:
writeEmailVerificationResultForEmailWithKey:eventEntities:
initWithObjects:
deleteMessages:
_performMailIntelligenceTasksActivity:
lockState
_performHarvestedURLMetricUploadAcitivity:
baseURLStrings
_pas_stringBackedByUTF8CString
tombstoneExistsForSpotlightReferenceWithBundleIdentifier:uniqueIdentifier:domainIdentifier:
backpressureHazard
processSearchableItem:harvestMetrics:
searchableItemIsEligibleForDissectorPipeline:targetPluginsCustomAttributeName:
messageWithSearchableItem:
emailHeaders
_shouldDissectContentWithUniqueIdentifier:domainIdentifier:bundleIdentifier:headers:accountIdentifier:
_processMessage:pipeline:context:harvestMetrics:
registerSentMailMessage:
setHarvestMetrics:
incStatsCounterWithKey:
initWithMessage:
dissectOperationsForMailMessage:entity:inContext:
dissectOperationsForTextMessage:entity:inContext:
verificationOperation:withDependencies:
shouldHarvestEvents
geocodeOperation:withDependencies:
storeOperation:spotlightBundleIdentifier:spotlightUniqueIdentifier:spotlightDomainIdentifier:withStore:dependencies:
harvestedEntity:withElapsedTime:
processingQueue
addOperations:waitUntilFinished:
storageQueue
notifyWhenFlushed:
waitUntilFinished
processSearchableItem:pipeline:context:harvestMetrics:
emptyPipeline
messageIdHeaderValuesFromHeaders:
initWithMessageIdHeaderValues:accountIdentifier:
addSpotlightReferenceToEmailIfFullyDownloaded:withBundleIdentifier:uniqueIdentifier:domainIdentifier:
processSearchableItemForTesting:
hasAlreadyHarvestedSearchableItem:
waitForXpcActivityQueue
_ctsCriteriaState
_geocodeLock
_verificationLock
_lastFrontfillFinishTime
_xpcActivityManager
label
resolveByScoreBreakTiesArbitrarily:
isEventMetadata
eventMetadata
eventMetadataFromEKEvent:
schemaOrg
distanceBetweenStrings:and:
predicateForEventsWithStartDate:endDate:calendars:
eventsHaveIdenticalReservationIds:ekEventFromStore:
eventsHaveSimilarTitles:ekEventFromStore:
enumerateEventsMatchingPredicate:usingBlock:
bucketerWithEqualityTest:
bucketerWithMapping:
resolveSGContactDetailsPreferringPhraseExtractionsAndLabels
dedupe:bucketer:resolver:
normalizedValue
_dedupeGenericContactDetails:
_dedupePostalAddresses:
bucketerWithLabeledBuckets:
resolveByPairs:
enumerateEKEventsForPseudoEventBySimilarStartAndEndTime:store:usingBlock:
dedupeContactDetails:
splitContactDetailsByType:
isEqualToArray:
timeZoneWithName:
whitespaceAndNewlineCharacterSet
timeZoneWithAbbreviation:
systemTimeZoneWithWindowsName:
localTimeZone
secondsFromGMTForDate:
knownTimeZoneNames
setNumberStyle:
setMaximumFractionDigits:
setPositivePrefix:
setNegativePrefix:
stringFromNumber:
characterAtIndex:
gmtOffsetTimeZoneWithHour:withMinute:forDate:
systemTimeZoneFromString:
gmtOffsetTimeZoneFromString:forDate:
propertiesForName:
firstValueOfPropertyForName:
tzid
setTzid:
hasFloatingTimeZone
initWithYear:month:day:hour:minute:second:timeZone:
components
copyDateWithNewComponents:
initWithCalendarIdentifier:
x_wr_timezone
validate:
systemTimeZoneForDate:
gmtOffsetTimeZoneWithCalendar:withEvent:
validatedCompleteDateTime
systemTimeZoneWithCalendar:withEvent:withCorrectnessFlag:
attendee
longValue
enrichmentWithParentEntity:withCalendar:withCorrectnessFlag:
dtstart
dtend
summary
duplicateKeyForPseudoEventWithGroupId:parentKey:
setContent:
setExtractionInfo:
fromCalendarAttachment
url:
recordWithTimezoneValue:datetimeType:
duration
timeInterval
hasTimeComponent
initWithWeeks:days:hours:minutes:seconds:
calendarWithIdentifier:
weeks
dateByAddingUnit:value:toDate:options:
days
hours
minutes
seconds
rangeWithGregorianStartComponents:endComponents:
initWithType:label:address:airportCode:accuracy:quality:
dtstamp
attendeeEmailAddresses
enrichmentWithParentEntity:withCalendar:
isCalendarMimeType
isDownloadedLocally
hasCalendarAccount:
initWithBytes:length:encoding:
appendBytes:length:
valueWithRange:
replaceBytesInRange:withBytes:length:
baseAttachmentFrom:includingEvents:withRanges:
rangeValue
replaceTzid:inDocument:fromOriginal:withBaseLength:withEventRange:
componentKeys
componentForKey:
prodid
isRequestFromSharedCalendarProvider:
defaultCalendarForNewEvents
startTimeZone
timezoneIdentifier:
setValue:forKey:
accountTypeFor:
setRecipient:
hasCalendarAccountForOneOf:
setAccountSetup:
shouldIgnoreEntity:
attachments
downloadedCalendarAttachmentsFrom:
initWithContentsOfFile:options:error:
initWithData:options:error:
calscale
enrichmentsFromData:inDocument:parentMessage:parentEntity:
_dissectMessage:entity:
splitAttachment:intoEvents:withTimezones:
_accountsAdapter
postalAddresses
setPostalAddresses:
phoneNumbers
setPhoneNumbers:
instantMessageAddresses
setInstantMessageAddresses:
socialProfiles
setSocialProfiles:
setBirthday:
_emailAddresses
_postalAddresses
_phoneNumbers
_instantMessageAddresses
_socialProfiles
_birthday
T@"NSArray",&,N,V_emailAddresses
T@"NSArray",&,N,V_postalAddresses
T@"NSArray",&,N,V_phoneNumbers
T@"NSArray",&,N,V_instantMessageAddresses
T@"NSArray",&,N,V_socialProfiles
T@"SGContactDetail",&,N,V_birthday
T@"SGContactDetail",&,N,V_photoPath
addProfile:
isEqualToStorageContact:
bestName:
canMerge:
merge:
setInternalDetectedDetails:
internalDetectedDetails
loadAllContactDetailsForRecordId:
loadAllDetailsFrom:
originWithType:sourceKey:externalKey:fromForwardedMessage:
originForDuplicateKey:entity:parent:store:
phoneNumber:label:extractionInfo:recordId:
postalAddress:components:label:extractionInfo:recordId:
service
teamIdentifier
initWithUsername:userIdentifier:bundleIdentifier:displayName:service:teamIdentifier:label:extractionInfo:recordId:
dateComponents:label:extractionInfo:withRecordId:
bestProfile
contactWithId:name:emailAddresses:phones:postalAddresses:socialProfiles:birthday:photoPath:
hasProfileFromInteraction
setSignificanceOrigin:
setUpdatedFields:
contactWithMasterEntityId:
allNames
reload
loadPhoneDetailsFrom:
loadAddressDetailsFrom:
loadEmailAddressDetailsFrom:
loadBirthdayDetailsFrom:
convertToContact:
hasProfileFromTextMessage
_profiles
_masterEntityId
_recordId
_internalDetectedDetails
T@"SGContactDetailsHolder",&,V_internalDetectedDetails
Tq,R,N,V_masterEntityId
T@"SGRecordId",R,N,V_recordId
canBeConvertedToEncoding:
precomposedStringWithCanonicalMapping
migrations
skipFromZeroSchema:
setNewEntitiesCallback:
fromSync
deleteItemsWithEntityTag:
setDeleteAllSyncedItemsCallback:
initWithContainerIdentifier:environment:
initWithContainerID:options:
privateCloudDatabase
setDatabase:
setSharedInstanceConfigurationBlock:
_beforeSystemInitialization
privacySalt
wait:
registerActivitiesWithSystem
setInProcessSuggestManager:
addContentAdmissionObserver:
registerCachePrecomputationWithCTS
automaticGeocodingEnabled
setAllowGeocode:
initWithManager:
setReadyForNewEntities:
postNotificationName:object:userInfo:deliverImmediately:
insertSuggestedEventCalendar
removeSuggestedEventCalendar
unregisterForLockStateChangeNotifications:
registerForLockStateChangeNotifications:
copyReconstructedAuthors
setAuthors:
copyReconstructedPrimaryRecipients
setPrimaryRecipients:
additionalRecipients
copyReconstructedAdditionalRecipients
setAdditionalRecipients:
standardizeCSPersons
historicalDataRequests
_processHistoricalDataRequestsForPluginIdentifier:result:
_processSearchableItem:harvestMetrics:userAction:
startTimer:
endTimer:significantWork:
done
requestReimportForHistoricalDataRequest:
processInteraction:bundleIdentifier:protectionClass:completion:
_plugins
setPlugins:
pluginIdentifiers
insertOrReplaceIntoTable:dictionary:onError:
loadStatsCounterWithKey:
storeStatsCounterWithKey:value:
setKeyWithDomain:suffix:toValue:
_logConfirmPercentWithConfirmCount:rejectCount:domain:suffix:
logConfirmPercentAfterContactConfirmation
logConfirmPercentAfterContactRejection
logConfirmPercentAfterContactDetailConfirmation
logConfirmPercentAfterContactDetailRejection
refreshCacheFromAccountsService
readCachedAccounts
registerNotificationObserver
setUpdateTimerWithDelaySeconds:
userAccountsPersistedState
subarrayWithRange:
setUserAccountsPersistedState:
primaryICloudCalendarAccount
automaticallyNotifiesObserversForKey:
cancelUpdateTimer
accountsWithAccountTypeIdentifiers:error:
enabledDataclasses
parentAccount
aa_isAccountClass:
willChangeValueForKey:
didChangeValueForKey:
setCachedAccounts
accountsStoreDidChange:
addObserver:selector:name:object:
removeNotificationObserver
accountWithIdentifier:
accountType
accountProperties
serverIdentifierForAccount:
_usernamesCache
_accountStore
_cachedPrimaryICloudAccount
_updateQueue
_updateSource
_updateTimerIsSet
_updateTimerQueue
_updateTimerSource
removeObjectsInArray:
addEvent:
numberWithLongLong:
predicateWithBlock:
filterUsingPredicate:
cancelEvent:
confirmOrRejectContact:
rejectReminderFromThisDevice:
confirmEventFromThisDevice:
confirmEventFromOtherDevice:
rejectEventFromThisDevice:
rejectEventFromOtherDevice:
orphanEvent:
calendarDeleted
addEvents:
cancelEvents:
addContact:
confirmContact:
addReminder:
confirmReminderFromThisDevice:
reminderAlarmTriggeredFromThisDevice:
confirmReminderFromOtherDevice:
rejectReminderFromOtherDevice:
orphanReminder:
overwriteEvent:
T@"NSArray",R,N
T@"NSArray",R,N,V_reminders
initWithSGSqlEntityStore:andREMStore:
isValidNewReminder:
isAllDay
_remRemindersAssociatedWithStorageReminder:remStore:
reminderHasDuplicate:usingStore:
_saveReminder:usingReminderStore:
_deleteReminder:usingReminderStore:
fetchSiriFoundInAppsListWithError:
_remindersFoundInAppsListInREMStore:
updateList:
addReminderWithTitle:toListChangeItem:
sourceUniqueIdentifierForStorageReminder:
initWithRecordId:sourceUniqueIdentifier:
archivedDataWithRootObject:requiringSecureCoding:error:
setSiriFoundInAppsData:
initWithDateComponents:
addAlarmWithTrigger:
setDueDateComponents:
initWithTitle:
setLatitude:
setLongitude:
accuracy
setRadius:
initWithStructuredLocation:proximity:
constructNotesForReminder:
setNotes:
universalURL
initWithUniversalLink:
setUserActivity:
saveSynchronouslyWithError:
updateReminder:
removeFromList
_remRemindersAssociatedWithTitle:sourceUniqueIdentifier:usingStore:
fetchRemindersWithError:
siriFoundInAppsData
unarchivedObjectOfClass:fromData:error:
string
sourceUniqueIdentifier
objectID
searchTokensForReminderTitle:
predicateDescriptorForRemindersWithCompleted:
predicateDescriptorForRemindersWithTitleContains:
andPredicateDescriptorWithDescriptors:
predicateDescriptorForRemindersWithDueDateBetween:and:
orPredicateDescriptorWithDescriptors:
reminderPredicateForReminder:
fetchRemindersMatchingPredicateDescriptor:sortDescriptors:options:error:
isCompleted
enumerateAllRemindersWithBlock:
remindersCreatedBetweenStartDate:endDate:
initWithSGSqlEntityStore:
setStore:
_reminderStore
T@"SGSqlEntityStore",W,N,V_store
postalAddressFromString:
placemarkWithLocation:name:postalAddress:
objectAtIndex:
numberWithFloat:
addMailAttachmentHistogram:
setLang:
mailAttachmentHistogramsCount
clearMailAttachmentHistograms
mailAttachmentHistogramAtIndex:
setBackground:
mailAttachmentHistogramType
hasLocale
hasLang
setTimeDifferenceFromReceptionToSaliencyInferenceInSeconds:
setHasTimeDifferenceFromReceptionToSaliencyInferenceInSeconds:
hasTimeDifferenceFromReceptionToSaliencyInferenceInSeconds
setSenderConnectionScore:
setHasSenderConnectionScore:
hasSenderConnectionScore
setNbCharactersInMailSubject:
setHasNbCharactersInMailSubject:
hasNbCharactersInMailSubject
setNbTokensInMailSubject:
setHasNbTokensInMailSubject:
hasNbTokensInMailSubject
setPreviousInteractionOnConversationInMinutes:
setHasPreviousInteractionOnConversationInMinutes:
hasPreviousInteractionOnConversationInMinutes
setPreviousInteractionFromUserOnConversationInMinutes:
setHasPreviousInteractionFromUserOnConversationInMinutes:
hasPreviousInteractionFromUserOnConversationInMinutes
hasActive
hasBackground
lang
timeDifferenceFromReceptionToSaliencyInferenceInSeconds
senderConnectionScore
mailAttachmentHistograms
setMailAttachmentHistograms:
nbCharactersInMailSubject
nbTokensInMailSubject
previousInteractionOnConversationInMinutes
previousInteractionFromUserOnConversationInMinutes
background
_active
_background
_lang
_mailAttachmentHistograms
_nbCharactersInMailSubject
_nbTokensInMailSubject
_previousInteractionFromUserOnConversationInMinutes
_previousInteractionOnConversationInMinutes
_senderConnectionScore
_timeDifferenceFromReceptionToSaliencyInferenceInSeconds
T@"NSString",&,N,V_locale
T@"NSString",&,N,V_lang
TI,N,V_timeDifferenceFromReceptionToSaliencyInferenceInSeconds
Tf,N,V_senderConnectionScore
T@"NSMutableArray",&,N,V_mailAttachmentHistograms
TI,N,V_nbCharactersInMailSubject
TI,N,V_nbTokensInMailSubject
TI,N,V_previousInteractionOnConversationInMinutes
TI,N,V_previousInteractionFromUserOnConversationInMinutes
T@"SGMIMetricsInferenceAndGroundTruth",&,N,V_active
T@"SGMIMetricsInferenceAndGroundTruth",&,N,V_background
mailMessage
defaultSaliencyOnError
areSubModelsEmpty
ruleBasedInferenceFor:
defaultSaliencyOnOverrideFor:
saliencyForFeatureVector:
read:fromStore:
initWithNameMappings:minimumConfidence:confidenceMapper:tokenToIgnore:forNameDetector:
withFullNameMapping:firstNameMapping:lastNameMapping:minimumConfidence:confidenceMapper:tokenToIgnore:andPossessive:
payloadForString:
isCapitalized:
nameMappingForToken:withConfidence:
stringWithString:range:confidence:
numberWithUnsignedLong:
setObject:atIndexedSubscript:
isPossessive:
setConfidence:
stringWithNewContents:
enumerateObjectsUsingBlock:
isEqualToNameMappingTransformer:
instanceForNameDetector
_forNameDetector
_nameMappings
_tokenToIgnore
_minimumConfidence
_confidenceMapper
bundleForClass:
pathForResource:ofType:inDirectory:
initWithPath:
isSalientNameByChars:
recordSelfIdMatchWithPatternType:patternHash:nameTokenCount:nameClassification:messageIndex:
patterns
hashId
setContext:
setContextRange:
regex2ForKey:
existsInString:
initWithTextMessage:
processConversation:threadLength:options:
processConversation:options:
contextRange
_name
_extractionInfo
_contextRange
T@"NSString",C,N,V_name
T@"NSString",C,N,V_context
T{_NSRange=QQ},N,V_contextRange
T@"SGExtractionInfo",&,N,V_extractionInfo
enumerateTokensInString:block:
enumerateMatchesInString:ngroups:blockWithSubregexp:
initWithBundleId:domainId:uniqueId:
isEqualToSearchableItemIdTriple:
searchableItemIdTripleWithBundleId:domainId:uniqueId:
_domainId
_uniqueId
T@"NSString",R,N,V_domainId
T@"NSString",R,N,V_uniqueId
setTitle:
duplicateKeyForEmailWithSource:messageId:
setSourceKey:
appleMailMessageId
appleMailMessageId:fromSource:
hasInhumanHeaders
detectContacts
setAuthor:
inhuman
mailingListId:
duplicateKeyForTextMessageWithSource:uniqueIdentifier:
setAuthorNickname:
setAuthorPhotoPath:
duplicateKeyForInteractionWithBundleId:personHandle:
_initWithInteractionIdentifier:fromBundleIdentifier:creationTime:
duplicateKeyForInteractionIdentifier:fromBundleIdentifier:
flushWrites
removeObjectAtIndex:
contextRangeOfInterest
addDetectedPostalAddress:forIdentity:context:contextRangeOfInterest:extractionInfo:
addDetectedBirthday:forIdentity:context:contextRangeOfInterest:extractionInfo:
address:forIdentity:parent:curated:context:contextRangeOfInterest:extractionInfo:
phoneNumber:forIdentity:parent:curated:context:contextRangeOfInterest:extractionInfo:
emailAddress:forIdentity:parent:curated:context:contextRangeOfInterest:extractionInfo:
addEmailAddressEnrichment:
birthday:forIdentity:parent:curated:context:contextRangeOfInterest:extractionInfo:
birthday:forIdentity:context:contextRangeOfInterest:extractionInfo:
addBirthdayEnrichment:
instantMessageAddress:forIdentity:parent:curated:context:contextRangeOfInterest:extractionInfo:
addInstantMessageAddressEnrichment:
socialProfile:forIdentity:parent:curated:context:contextRangeOfInterest:extractionInfo:
addSocialProfileEnrichment:
contactDetailsWithType:
isPerson
isInhumanSender
isInhumanContent
hasHumanHeaders
human
_lazyCheckMessageForHumanness
isEvent
initWithInteraction:fromBundleIdentifier:
initWithInteractionIdentifier:fromBundleIdentifier:
snippetsContent
addOrReplaceEventEnrichment:
addOrReplacePreferredEnrichment:
externalEnrichments
flushExternalEnrichmentsUponDealloc
addExternalEnrichment:
removeExternalEnrichmentAtIndex:
stripEventInformation
addDetection:forIdentity:extractionInfo:
addDetectedInstantMessageAddress:forIdentity:context:contextRangeOfInterest:extractionInfo:
addDetectedSocialProfile:forIdentity:context:contextRangeOfInterest:extractionInfo:
addresses
enumeratePeople:
requestFullDownload
hasFullDownloadBeenRequested
eventEnrichmentsCount
setExternalEnrichments:
plainTextSigRange
setPlainTextSigRange:
contactInformationExtracted
setContactInformationExtracted:
setTaggedCharacterRanges:
emailToCanonicalEmailCache
invalidatedMessageIdentifiers
setInvalidatedMessageIdentifiers:
authorMatchingContacts
setAuthorMatchingContacts:
authorMatchingContactsKeys
setAuthorMatchingContactsKeys:
needsSourceVerification
setNeedsSourceVerification:
pendingVerification
setPendingVerification:
textMessage
harvestMetrics
_enrichments
_externalEnrichments
_flushExternalEnrichments
_taggedCharacterRanges
_fullDownloadRequested
_inhumanFeatures
_dissectorLock
_messageInhumannessChecked
_dataDetectorsSignatureForTesting
_overrideDataDetectorSignatureForTesting
_lazySnippetsContent
_contactInformationExtracted
_needsSourceVerification
_pendingVerification
_emailToCanonicalEmailCache
_accountType
_invalidatedMessageIdentifiers
_authorMatchingContacts
_authorMatchingContactsKeys
_message
_mailMessage
_textMessage
_interaction
_harvestMetrics
_plainTextSigRange
T@"SGMessage",R,N,V_message
T@"SGSimpleMailMessage",R,N,V_mailMessage
T@"SGTextMessage",R,N,V_textMessage
T@"INInteraction",R,N,V_interaction
T@"SGHarvestQueueMetrics",&,N,V_harvestMetrics
T@"NSArray",&,N,V_enrichments
T@"NSArray",&,N,V_externalEnrichments
T{_NSRange=QQ},N,V_plainTextSigRange
T^{?={?=SS}BBBBB},R,N
TB,N,V_contactInformationExtracted
T@"NSArray",R,N,V_instantMessageAddresses
T@"NSArray",&,N,V_taggedCharacterRanges
fullDownloadRequested
TB,R,GhasFullDownloadBeenRequested
T@"NSMutableDictionary",R,N,V_emailToCanonicalEmailCache
T@"NSString",R,N,V_accountType
T@"NSArray",&,V_invalidatedMessageIdentifiers
T@"NSArray",&,N,V_authorMatchingContacts
T@"NSSet",&,N,V_authorMatchingContactsKeys
TB,N,V_needsSourceVerification
TB,N,V_pendingVerification
isLegalEmailAddress:
contentRangeOfInterest
lastModifiedTimestamp
structuredData
quality
isEqualToEntity:
extractedEventCancellation
templateException
fromForwardedMessage
removeObject:
isEqualToEntityTag:
isExtraKey
isTemplateShortName
initWithEntity:
validate
isFromForwardedMessage
removeTag:
extraKeyTag
fieldsToSaveOnConfirmation
setRecordId:
setContentRangeOfInterest:
authorNickname
authorPhotoPath
setStructuredData:
setQuality:
setMasterEntityId:
setGroupId:
setState:
operatingSystemVersion
setOperatingSystemVersion:
_tags
_tagsSnapshot
_tagsLock
_duplicateKey
_sourceKey
_content
_title
_authorNickname
_authorPhotoPath
_author
_creationTimestamp
_lastModifiedTimestamp
_timeRange
_structuredData
_quality
_locations
_operatingSystemVersion
_contentRangeOfInterest
T@"SGRecordId",&,N,V_recordId
T@"SGDuplicateKey",&,N,V_duplicateKey
T@"NSString",C,N,V_sourceKey
T@"NSString",C,N,V_content
T{_NSRange=QQ},N,V_contentRangeOfInterest
T@"NSString",C,N,V_title
T@"NSString",C,N,V_authorNickname
T@"NSString",C,N,V_authorPhotoPath
T@"CSPerson",&,N,V_author
T{SGUnixTimestamp_=d},N,V_creationTimestamp
T{SGUnixTimestamp_=d},N,V_lastModifiedTimestamp
T@"SGSimpleTimeRange",&,N,V_timeRange
T@"NSData",C,N,V_structuredData
Td,N,V_quality
T@"NSMutableSet",&,N,V_locations
Tq,N,V_masterEntityId
Tq,N,V_groupId
TI,N,V_state
T@"NSString",C,N,V_operatingSystemVersion
initWithPseudoContactWithKey:parent:name:
initWithIdentityKey:label:normalizedValue:
initWithContactDetailWithKey:type:extractionInfo:curated:parent:value:context:contextRangeOfInterest:
confirmedEventHashes
confirmedEventWithoutTimestampHashes
rejectedEventHashes
confirmedReminderHashes
rejectedReminderHashes
contactHashes
confirmedEventFieldHashes
confirmedEventWithoutTimestampFieldHashes
storageDetailHashes
dontUpdate
resetInfo
observers
cachedSalt
initWithKVS:
syncHistoryToCloud
handleSyncedDataChanged:
synchronize
_setInternalStateAccordingToKVS:
initWithBundleIdentifier:
dataForKey:
setData:forKey:
unarchivedObjectOfClasses:fromData:error:
mutableSetForKey:
arrayForKey:
_canaryHash
_tellObserversHashesDidChange
_setHashes:forKey:
unsignedLongValue
setArray:forKey:
loadResetInfo
pushConfirmedEvents:
pushConfirmedEventsWithoutTimestamp:
pushRejectedEvents:
pushConfirmedEventFields:
pushConfirmedEventWithoutTimestampFields:
pushConfirmedReminders:
pushRejectedReminders:
pushContacts:
pushStorageDetails:
pushDontUpdate:
pushResetInfo:
hasEmailAddress
initWithSocialProfile:
address
dateString
stringValue
arrayByAddingObject:
isComplete
identitySalt
modernHashesForClassicHashes:forMatching:
keysForContact:
hashesForStrings:forMatching:
keysForStorageContact:
keysForContactDetail:ofContact:
keysForCuratedContactDetail:ofContact:
confirmHashesForOpaqueKey:withCreationTime:forMatching:
rejectHashesForOpaqueKey:forMatching:
confirmHashesForRemindersOpaqueKey:withCreationTime:forMatching:
hashesForOpaqueKey:forMatching:
pushAll:
resetNoFlush
setForKey:
isEqualToSet:
unionSet:
hashesForContactDetail:fromContact:forMatching:
confirmOrRejectDetailHashes:
emitContactUpdated:
hashesForStorageContact:forMatching:
hashesForContact:forMatching:
writeAndPushConfirmedEventHashes:
confirmHashesForOpaqueKeyWithoutTimestamp:forMatching:
writeAndPushConfirmedEventWithoutTimestampHashes:
emitEventUpdated:
writeAndPushRejectedEventHashes:
writeAndPushConfirmedReminderHashes:
emitReminderUpdated:
writeAndPushRejectedReminderHashes:
newTestingInstanceWithSharedKVS:
notificationWithName:object:userInfo:
_anyHash:inSet:
isConfirmedEvent:
isConfirmedEventWithoutTimeStamp:
isRejectedEvent:
removeConfirmationHistoryForEntityWithOpaqueKey:creationTimestamp:
isConfirmedReminder:
isRejectedReminder:
hasContact:
isUpdatableContact:
isValidNewEvent:
isValidCancelledEvent:
_hashesForConfirmedField:value:storageEvent:forMatching:
setInternalStateAccordingToKVS
hashesForCuratedContactDetail:fromContact:forMatching:
identityBasedHashesForPseudoEvent:withCreationTime:
identityBasedHashesForPseudoReminder:withCreationTime:
hashesForPseudoEventByKey:forMatching:
confirmOrRejectRecordForContact:
rejectRealtimeContact:
confirmEvent:
confirmStorageEvent:
rejectEvent:
rejectStorageEvent:
confirmReminderFromExternalDevice:
rejectReminderFromExternalDevice:
hasStorageContact:
removeConfirmationHistoryForEvent:
isValidSuggestion:
confirmEventFromExternalDevice:
rejectEventFromExternalDevice:
hasContactDetail:forContact:
hasContactDetailKey:
confirmFieldValues:forStorageEvent:
hasConfirmedField:value:forStorageEvent:
pushEmptyHashesForTestingKey:
_backingKVStore
_noCloudFakeBackingKVStore
T@"NSUbiquitousKeyValueStore",R,N
null
initWithBasePath:
stringByAppendingPathComponent:
keyValueCacheForPath:
initInMemory
initTemporaryForOverwritingCache:
commitTemporaryFile
deleteValueByRecordIdSet:
deleteValueByRecordId:
replaceCacheOfType:block:
_basePath
_cacheFiles
normalizeWord:
normalizeLowercaseWord:
initWithPersonHandle:startDate:endDate:
initWithRequestId:pluginIdentifier:personHandle:startDate:endDate:
decodeInt64ForKey:
decodeObjectOfClass:forKey:
encodeInt64:forKey:
encodeObject:forKey:
isEqualToHistoricalDataRequest:
_dateRangeIsSubsetOfHistoricalDataRequest:
historicalDataRequestWithPersonHandle:startDate:endDate:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
setPluginIdentifier:
setRequestId:
subsetOfHistoricalDataRequest:
requestId
pluginIdentifier
_requestId
_pluginIdentifier
_personHandle
_startDate
_endDate
TQ,R,N,V_requestId
T@"NSString",R,N,V_pluginIdentifier
T@"NSString",R,N,V_personHandle
T@"NSDate",R,N,V_startDate
T@"NSDate",R,N,V_endDate
initForBuilding
setMessageId:
setSubject:
dateFromEmailString:
setDate:
namedEmailAddressWithFieldValue:
setFrom:
replyTo
addressItemsFromEmailString:
setReplyTo:
namedEmailAddressesWithFieldValues:
setTo:
mailConversationIdentifier
setMailConversationIdentifier:
setCc:
setBcc:
setMailingList:
headersContainInhumanOnes:keys:
setHasInhumanHeaders:
setHeaders:
decodeEncodedWordsIn:
componentsSeparatedByString:
initWithLocaleIdentifier:
setShortMonthSymbols:
setShortWeekdaySymbols:
setLenient:
getObjectValue:forString:range:error:
components:fromDate:
regularExpressionWithPattern:options:error:
dataUsingEncoding:allowLossyConversion:
rangeAtIndex:
enumerateMatchesInString:options:range:usingBlock:
sg_stringWithDecodedEncodedWords
rangeOfBodyFromRfc822:
subdataWithRange:
_pas_stringWithDataNoCopy:encoding:nullTerminated:
replaceOccurrencesOfString:withString:options:range:
parseHeaders:
setHtmlBody:
parseRfc822Headers:htmlContent:
addIndexesInRange:
rangeOfData:options:range:
removeIndex:
getBytes:range:
hasSuffix:
enumerateLinesUsingBlock:
enumerateSubstringsInRange:options:usingBlock:
hv_firstHeaderForKey:
parseParameterizedHeaderValue:
htmlBodyFromRfc822:headers:attachmentCallback:
initWithBase64EncodedData:options:
uudecode:
decodeQuotedPrintable:charset:rfc2047UnderscoreAsSpace:
stripTrailingASCIIHSpace:
stringEncodingForData:encodingOptions:convertedString:usedLossyConversion:
formatFlowed:delSp:
htmlFromPlainTextBody:
parseRfc822:attachmentCallback:
stringByReplacingOccurrencesOfString:withString:options:range:
rangeOfHeadersFromRfc822:
matches
setMatches:
signatureRange
setSignatureRange:
_matches
_signatureRange
T@"NSArray",&,N,V_matches
T{_NSRange=QQ},N,V_signatureRange
labelRange
coalesceAddress:orAppendMatch:
_lastAddressIndex
_lastAddressEndPos
_lastResult
decodeIntegerForKey:
decodeObjectOfClasses:forKey:
decodeBoolForKey:
encodeInteger:forKey:
encodeBool:forKey:
parsecDomain
parsecWikidataQid
inferredDate
approximateTime
partialDate
detectedDate
detectedTimeZone
detectedEndDate
detectedEndTimeZone
isEqualToDataDetectorMatch:
distantPast
_detectionsInPlainText:withEligibleRegions:ddSignature:baseDate:
initWithIndexesInRange:
intersectSet:
inferredDateForDataDetectorResult:
partialDateForDataDetectorResult:
approximateTimeForDataDetectorResult:
resetUnusedScannersForTesting
detectionsInPlainText:withEligibleRegions:
detectionsInPlainText:withEligibleRegions:baseDate:
detectionsAndSignatureInText:eligibleRegions:baseDate:
stringHasDatesOrTimes:
initWithLookupHintInDomain:range:labelRange:labelString:valueRange:valueString:qid:
initWithDetectedDate:detectedTimeZone:detectedEndDate:detectedEndTimeZone:matchType:range:labelRange:labelString:valueRange:valueString:allDay:inferredDate:approximateTime:partialDate:
initWithMatchType:range:labelRange:labelString:valueRange:valueString:postalAddressComponents:
_allDay
_inferredDate
_approximateTime
_partialDate
_matchType
_parsecDomain
_valueString
_labelString
_parsecWikidataQid
_detectedDate
_detectedTimeZone
_detectedEndDate
_detectedEndTimeZone
_postalAddressComponents
_range
_labelRange
_valueRange
TI,R,N,V_matchType
T{_NSRange=QQ},R,N,V_range
T{_NSRange=QQ},R,N,V_labelRange
T{_NSRange=QQ},R,N,V_valueRange
T@"NSString",R,N,V_valueString
T@"NSString",R,N,V_labelString
Ti,R,N,V_parsecDomain
T@"NSString",R,N,V_parsecWikidataQid
T@"NSDate",R,N,V_detectedDate
T@"NSTimeZone",R,N,V_detectedTimeZone
T@"NSDate",R,N,V_detectedEndDate
T@"NSTimeZone",R,N,V_detectedEndTimeZone
TB,R,N,V_allDay
TB,R,N,V_inferredDate
TB,R,N,V_approximateTime
TB,R,N,V_partialDate
T@"SGPostalAddressComponents",R,N,V_postalAddressComponents
enumerateMatchesInString:ngroups:block:
whitespaceCharacterSet
emailFrom:entity:
replyAttributionPattern
headerPattern:
quotedRegionStartPattern
stripChevrons:
headersPattern
nextMessage:entity:
enumeratePreviousMessages:inEntity:usingBlock:
ipsosMessageWithMailMessage:store:
emailFrom:
nextMessage:
enumeratePreviousMessages:usingBlock:
patternsForClass:
bucketsNames
numberArray
initWithNumberArray:
bucketizeWithSize:
isEmpty
countUpTo8KB
count8KBTo32KB
count32KBTo128KB
count128KBTo512KB
count512KBTo2MB
countOver2MB
_countUpTo8KB
_count8KBTo32KB
_count32KBTo128KB
_count128KBTo512KB
_count512KBTo2MB
_countOver2MB
TQ,R,N,V_countUpTo8KB
TQ,R,N,V_count8KBTo32KB
TQ,R,N,V_count32KBTo128KB
TQ,R,N,V_count128KBTo512KB
TQ,R,N,V_count512KBTo2MB
TQ,R,N,V_countOver2MB
rawValueForKey:
_pas_retainsConmingledBackingStore
_isInhumanEmailAddressPatternMatch:
isInhumanEmailAddress:
isInhumanName:
isInhumanPhoneNumber:
hasTooManyLongNumbers:
stringSetMatcherForKey:
existsInUtf8:
getBytes:maxLength:usedLength:encoding:options:range:remainingRange:
isInhumanNamedEmailAddress:
isInhumanPerson:
isInhumanBody:
areHumanHeaders:
initWithCharactersNoCopy:length:freeWhenDone:
analyzeOutgoingMailFeatureVector:
analyzeIncomingMailFeatureVector:
updateFollowUpDetectionStatsWithWarning:
detectors
followUpOnOutgoingMailsQuestions
body
followUpOnOutgoingMailsAsks
_analyzeFeatureVector:withRegExpDictionary:forOutgoingMail:withDetectedLanguage:withRegExLanguage:withCustomTimeRange:
followUpWarningsParameters
firstMatchInString:options:range:
defaultTimeIntervalToStartWarningExposition
removeIndexes:
matchForString:withinRange:
distantFuture
followUpOnIncomingMails
dataDetectorMappedAdditions
rangeOfFirstMatchInString:options:range:
dataDetectorAdditions
defaultTimeIntervalForAWarning
initWithAppleMailMessageId:snippet:core:signature:detectedLanguage:isIncomingMessage:score:startDate:startDateCore:endDate:endDateCore:
setType:
snippet
detectedLanguage
followUpTimeRangeForDebugging
core
analyzeForFollowUpMailWithBody:isSent:messageId:date:
_analyzeForFollowUpMailWithBody:isSent:messageId:date:
waitForBlock:timeoutSeconds:
analyzeFeatureVector:
textContentLanguageIdentifier
languageCode
followUpComputeCustomTimeRangeForLanguage:
incrementUserEngagement:forFollowUpWarning:
analyzeBody:forLanguage:forDate:withCustomTimeRange:
stringByAppendingPathExtension:
filesystemPathForAssetDataRelativePath:
dictionaryWithPath:error:
featureDimensionForInputSection:forModel:
initWithShape:dataType:error:
inputDescriptionsByName
multiArrayConstraint
shape
argMaxForSequence:
argMaxForLastOutput:
argMaxForOutputIndex:index:shape:
annotationTypeUniqueIdentifier:
cleanLegacyModelsDirectoryOfModelsNamed:
cleanModelsDirectoryOfModelsNamed:
modelsDirectoryName
suggestionsSubdirectory:creatingDirectoriesIfNeeded:
fileExistsAtPath:
enumeratorAtPath:
nextObject
removeItemAtPath:error:
suggestionsDirectoryAfterCreatingIfNeeded:
inputDictFromTaggedCharacterRanges:usingTokenMapping:forModel:
strength
phones
setPhones:
setEmail:
socialProfileIdentifiers
setSocialProfileIdentifiers:
_phones
_socialProfileIdentifiers
T@"NSArray",C,N,V_phones
T@"NSString",C,N,V_email
T@"NSArray",C,N,V_socialProfileIdentifiers
getNewBlobsIfChanged
_isIdentityStoreDirty
computeBlobs
_markIdentityStoreClean
writeIdentityBlobs:forceRewrite:
intersectsSet:
raise:format:
_markIdentityStoreDirty
longLongValue
registerAndLinkIdentity:recordId:phones:socialProfiles:email:curated:isSent:
processPseudoContactEntity:recordId:
selectEntityQuery:
entityFromSqlResult:
hasPhone
phone
hasSocialProfile
_joinIncompleteIdentityEmailWithOthersOfItsIlk:name:recordId:
nameFromEmail:
_joinIncompleteIdentityPhonesWithOthersOfTheirIlk:name:recordId:
_joinIncompleteIdentitySocialProfilesWithOthersOfTheirIlk:name:recordId:
nameWithString:
surname
middlename
firstname
sketchesForName:
nameSimilarity:and:
link:to:type:strength:
isEqualToRecordId:
getInt64ForColumn:
_linkNamelessEmailsIfAppropriate:nameToVertex:disjointSets:edges:
_linkNamelessPhonesIfAppropriate:nameToVertex:disjointSets:edges:
_linkNamelessSocialProfilesIfAppropriate:nameToVertex:disjointSets:edges:
_computeBlobsRaw:
loadInterdicts
curatedRecordIds
splitBlob:withInterdicts:edges:curatedRecordIds:
splitNeededFor:withInterdicts:curatedRecordIds:
_makeBlobsFromConnectedComponents:edges:
initWithCNSocialProfile:
_uniqueGoodDetailMatchFrom:toDetails:nonUnique:
bindParam:name:nsdata:
_popMergeBlobForAnalysis
makeInterdictsForBlob:withContactStore:
sortedArrayUsingSelector:
_writeMergeBlobSnapshotForAnalysis:
_isBlobAnalysisQueueEmpty
initWithFirst:second:
_analyzeMergeBlobsIncremental:
batch:
forceBlobSync
addInterdictFrom:with:
processContactEnrichment:recordId:
rebuildIdentityTables
registerAndLinkIdentity:recordId:phones:socialProfiles:email:curated:
deleteByRecordId:
getAllLinks
unmergedCandidatesLimitedTo:
initWithBytes:length:
setByAddingObjectsFromSet:
patternDict
patternData
globalLanguageVersion
currentLanguages
patternInstances
useAllLanguages
regexesImmuneToDeath
changeLanguageOrPatternData
weakObjectsHashTable
filesystemPathsForAssetDataRelativePaths:
propertyListWithData:options:format:error:
preferredLanguages
calculateCurrentLanguagesFromPreferredLocaleCodes:
languagePartOfLanguageCode:
countryCodeFromLanguageCode:
fallbackLanguageCodeForCountryCode:
resetIfNeeded
patternsForIdentifier:
calculateLangResolutionOrder
orderedSetWithObjects:
initWithBytecode:
re2WithRegexpLazy:
re2WithRegexpDataLazy:
re2WithSubregexps:prefilter:
re2WithRegexp:
re2WithRegexpData:
re2WithSubregexps:
_clearRegexCache
_becomeImmuneToDeath
_reinstateDeath
componentsFromLocaleIdentifier:
initialize
forceLanguagesTo:
setPatternsDictForTesting:
resetToDefaultPatternsForTesting
pauseCacheEvictionTemporarily
rawValuesForKey:
rawValueOrDataForKey:
_classKey
_langResolutionOrder
_compiledRegexes2
_language
_regexpKeysSeen
_localLanguageVersion
dataForOffset:includeTerminator:
dataForOffset:
_fileData
isEqualToSimpleMailHeaderKeyValue:
_value
T@"NSString",R,N,V_key
T@"NSString",R,N,V_value
_clearExistingHtml
sharedKeySetForKeys:
dictionaryWithSharedKeySet:
asDictionary
addEntriesFromDictionary:
serialized
serializeAll:
sg_descriptionForMimeHeaders
resultNonnullWithBlock:
quotedRegionsFrom:isAOSPMail:foundToEndOfMessage:
shiftIndexesStartingAtIndex:by:
addIndexes:
cleanName:
resultWithBlock:
appendFormat:
isEqualToSimpleMailMessage:
isEqualToMessage:
htmlContentData
setHtmlContentData:
setIsPartiallyDownloaded:
hv_headerKeyFunctions
hv_headerValueFunctions
initWithKeyPointerFunctions:valuePointerFunctions:capacity:
hv_addEntriesFromHeadersDictionary:
namedEmailAddressWithCSPerson:
mailMessageID
hiddenAdditionalRecipients
mailboxIdentifiers
setMailboxIdentifiers:
HTMLContentDataNoCopy
mailItemIsInSent:
initWithMailContentEvent:contentProtection:
initWithNamedHandle:
listId
headerDictionaryContainsInhumanHeaders:
messageIdentifier
toHandles
ccHandles
bccHandles
isFullyDownloaded
htmlContent
initWithContentType:
setContentCreationDate:
setMailMessageID:
setAccountHandles:
setAuthorNames:
setAuthorEmailAddresses:
setHiddenAdditionalRecipients:
headersDictionary
setEmailHeaders:
setHTMLContentData:
setAccountIdentifier:
initWithUniqueIdentifier:domainIdentifier:attributeSet:
setBundleID:
createNewSearchableItemWithSource:uniqueIdentifier:domainIdentifier:
rangeOfString:options:range:
invertedSet
rangeOfCharacterFromSet:options:range:
subjectByCleaningPrefixesInSubject:
isInhumanContentNoncached
dataDetectorMatchesWithSignature
hasRecipientFromSameDomainAsSender
createNewSearchableItem
inReplyTo
_htmlBody
_htmlBodyCached
_htmlContentData
_htmlContentDataCached
_quotedRegionsCached
_hasHumanHeadersCached
_authorCached
_hasInhumanHeaders
_isPartiallyDownloaded
_from
_replyTo
_bcc
_messageId
_appleMailMessageId
_inReplyTo
_mailboxIdentifiers
_htmlParser
_headers
_mailingList
T@"SGSimpleNamedEmailAddress",C,N,V_from
T@"SGSimpleNamedEmailAddress",C,N,V_replyTo
T@"NSArray",C,N,V_to
T@"NSArray",C,N,V_cc
T@"NSArray",C,N,V_bcc
T@"NSString",C,N,V_messageId
T@"NSString",C,N
T@"NSData",C,N
TB,N,V_hasInhumanHeaders
TB,N,V_isPartiallyDownloaded
T@"SGSimpleNamedEmailAddress",C,N,V_mailingList
T@"NSArray",C,N,V_mailboxIdentifiers
T@"NSArray",C,N,V_headers
T@"NSString",R,N,V_appleMailMessageId
T@"NSString",R,N,V_inReplyTo
T@"HVHtmlParser",R,N,V_htmlParser
T@"NSIndexSet",R,N
pathExtension
_isImageAttachment:
_isSharingSenderLocation:senderName:
numberMatchesContactsForm:
givenName
familyName
detectNames:withNameSet:
likelyLanguage
isTwoPersonConversation:
messages
areModelsAvailableInLanguage:
transformerInstanceForLanguage:mode:
config
classificationParams
getMergedPrompt:withParams:
maxPromptLength
_dynamicLabelContentForReply:prompt:language:
maxReplyLength
labelOf:inLanguage:
shouldSampleForLabel:inLanguage:isDynamicLabel:
spotlightReference
addSessionWithCovariates:label:sessionDescriptor:spotlightReference:isInternal:
version
initWithTraining:
trainQuickResponsesForMessage:withConversationHistory:
_localTraining
sg_decodeEncodedWords
initWithHeaderData:
identifyRangeOfEncodedWordAtIndex:
stringEncoding
decodeEncodedTextToData:
replaceCharactersInRange:withString:
initWithLength:
mutableBytes
prettyNamesReverseMapping
initWithFeatureName:strictLowerBound:strictUpperBound:output:
featureName
strictLowerBound
strictUpperBound
output
_featureName
_strictLowerBound
_strictUpperBound
_output
T@"NSNumber",R,V_featureName
T@"NSNumber",R,V_strictLowerBound
T@"NSNumber",R,V_strictUpperBound
T@"NSNumber",R,V_output
allFeaturePrettyNames
saliencyOverrideFeatureNames
saliencyOverrideFeatureLowerBounds
saliencyOverrideFeatureUpperBounds
saliencyOverrideOutputs
rulesFromFeatures:lowerBounds:upperBounds:outputs:
modelFeatureNames
modelFeatureStandardizationMeans
modelFeatureStandardizationStandardDeviations
modelGroundTruthFeatureNames
modelGroundTruthFeatureLowerBounds
modelGroundTruthFeatureUpperBounds
modelGroundTruthOutputs
classificationThreshold
minCountToConsiderATokenAsHighlyDiscriminant
ratioToConsiderATokenAsHighlyDiscriminant
minCountToConsiderATokenAsExtremelyDiscriminant
ratioToConsiderATokenAsExtremelyDiscriminant
initWithSaliencyOverrideRules:featureNames:mean:std:groundTruthEstimatorRules:threshold:minCountToConsiderATokenAsHighlyDiscriminant:ratioToConsiderATokenAsHighlyDiscriminant:minCountToConsiderATokenAsExtremelyDiscriminant:ratioToConsiderATokenAsExtremelyDiscriminant:
modelGroundTruthVersion
modelInferenceVersion
groundTruthVersion
inferenceVersion
saliencyOverrideRules
featureNames
mean
groundTruthEstimatorRules
groundTruthEstimatorFeatures
threshold
_saliencyOverrideRules
_featureNames
_mean
_std
_groundTruthEstimatorRules
_groundTruthEstimatorFeatures
_threshold
_minCountToConsiderATokenAsHighlyDiscriminant
_ratioToConsiderATokenAsHighlyDiscriminant
_minCountToConsiderATokenAsExtremelyDiscriminant
_ratioToConsiderATokenAsExtremelyDiscriminant
T@"NSArray",R,V_saliencyOverrideRules
T@"NSArray",R,V_featureNames
T@"NSArray",R,V_mean
T@"NSArray",R,V_std
T@"NSArray",R,V_groundTruthEstimatorRules
T@"NSArray",R,V_groundTruthEstimatorFeatures
T@"NSNumber",R,V_threshold
TQ,R,N,V_minCountToConsiderATokenAsHighlyDiscriminant
Td,R,N,V_ratioToConsiderATokenAsHighlyDiscriminant
TQ,R,N,V_minCountToConsiderATokenAsExtremelyDiscriminant
Td,R,N,V_ratioToConsiderATokenAsExtremelyDiscriminant
setLowPriority:
setFetchAttributes:
initWithQueryString:context:
setBundleIDs:
setPrivateIndex:
isDeviceFormattedForProtection
setProtectionClasses:
_pas_proxyArrayWithMapping:
setFoundItemsHandler:
setCompletionHandler:
cancel
enumerateContactIdentifierBatchesUsingBlock:
enumerateContactIdentifiersUsingBlock:
lengthOfBytesUsingEncoding:
_lexiconTokenForToken:inLexicon:
profanityInTokens:forLocaleIdentifier:
pathForResource:ofType:
dataWithContentsOfFile:options:error:
nicknamesForName:
initWithBytesNoCopy:length:encoding:freeWhenDone:
clearCache
initWithKeysToFetch:
setPredicate:
enumerateContactsWithFetchRequest:usingContactStore:error:usingBlock:
unifiedContactWithIdentifier:keysToFetch:error:
_crossPlatformUnifiedMeContactWithKeysToFetch:error:
predicateForContactsWithIdentifiers:
predicate
identifiersPredicateFromCacheForPredicate:isCached:
addCNContactIdentifier:
enumerateContactsWithFetchRequest:error:usingBlock:
proxyArray
predicateForContactsMatchingName:
predicateForContactsMatchingEmailAddress:
initWithStringValue:
predicateForContactsMatchingPhoneNumber:
unifiedContactsMatchingPredicate:keysToFetch:usingContactStore:error:
unifiedMeContactWithKeysToFetch:usingContactStore:error:
enumerateContactsMatchingEmailAddress:withKeysToFetch:usingContactStore:error:usingBlock:
handleExistsInContactStoreForHandle:withHandleType:
initWithNumericMapping:andSymbolicMapping:
setNumericMapping:
setCharacterMapping:
letterCharacterSet
setCharacterSet:
numericMapping
characterSet
characterMapping
isEqualToSymbolicMappingTransformer:
_numericMapping
_characterMapping
_characterSet
T@"NSString",&,V_numericMapping
T@"NSString",&,V_characterMapping
T@"NSCharacterSet",&,V_characterSet
seekToFileOffset:
dataOfLength:
offsetInFile
carrierEntryForKey:
seekLocationForKey:
initWithFilehandle:sizeFactor:keyLength:singleByteOffset:
payloadLengthForKey:
payloadCountForKey:
stringValueForKey:fromFile:
fullMappingFromFile:
_count
_carrierEntries
_mruCarrierEntry
_payloadOffset
_totalPayloadSize
_sizeFactor
arrayWithContentsOfFile:
initWithMemoryMappedPath:
updateFlights
updateAirports
updateCarriers
notificationQueue
airportIataCodesForDataOffset:
namesForAirport:withDataOffset:andFileHandle:
namesForAirport:
timezoneOlsonCodeForAirport:withDataOffset:andFileHandle:
latitudeAndLongitudeForAirport:withDataOffset:andFileHandle:
iataCodeToCityDatabaseDict
airportsServicedByCarrier:flightNumber:withDataOffset:andFileHandle:
numberWithUnsignedShort:
airportCodeForAirportName:flightCarrier:flightNumber:otherKnownFlightsToAirport:outputInfos:
sanitizeAirportName:
airportsServicedByCarrier:flightNumber:
bucketizeInteger:withBucketSize:limit:
airportNameNoiseKeywords
airportIataCodes
bestLocalizedNameForAirport:
timezoneOlsonCodeForAirport:
latitudeAndLongitudeForAirport:
cityForIataCode:
carrierIataCodes
carrierIataCodeForCarrierName:
nameForCarrier:
airportCodeForAirportName:flightCarrier:flightNumber:outputInfos:
_flightsFh
_flightDataOffsets
_flightsUpdateFh
_flightUpdateDataOffsets
_airportsFh
_airportDataOffsets
_airportsUpdateFh
_airportUpdateDataOffsets
_carrierNames
_carrierCodesByName
_carrierUpdateNames
_carrierUpdateCodesByName
airline
flightno
departureAirportDescription
arrivalAirportDescription
initWithCarrier:flightNo:depDesc:arrDesc:
_flightno
_airline
_departureAirportDescription
_arrivalAirportDescription
T@"NSString",R,N,V_flightno
T@"NSString",R,N,V_airline
T@"NSString",R,N,V_departureAirportDescription
T@"NSString",R,N,V_arrivalAirportDescription
setPersonFromSenderStats:
setPersonFromSenderInDyadicConversationStats:
setSubjectContentStats:
setPersonToRecipientsStats:
setPersonCCRecipientsStats:
setDomainFromSenderStats:
setConversationStats:
setListIdStats:
setAttachmentsStats:
setSubjectCountStatsStats:
setStandardMailRulesStats:
setMailboxStats:
setMailboxTypeStats:
hasPersonFromSenderStats
hasPersonFromSenderInDyadicConversationStats
hasSubjectContentStats
hasPersonToRecipientsStats
hasPersonCCRecipientsStats
hasDomainFromSenderStats
hasConversationStats
hasListIdStats
hasAttachmentsStats
hasSubjectCountStatsStats
hasStandardMailRulesStats
hasMailboxStats
hasMailboxTypeStats
personFromSenderStats
personFromSenderInDyadicConversationStats
subjectContentStats
personToRecipientsStats
personCCRecipientsStats
domainFromSenderStats
conversationStats
listIdStats
attachmentsStats
subjectCountStatsStats
standardMailRulesStats
mailboxStats
mailboxTypeStats
_attachmentsStats
_conversationStats
_domainFromSenderStats
_listIdStats
_mailboxStats
_mailboxTypeStats
_personCCRecipientsStats
_personFromSenderInDyadicConversationStats
_personFromSenderStats
_personToRecipientsStats
_standardMailRulesStats
_subjectContentStats
_subjectCountStatsStats
T@"SGMIMetricsSubmodelStats",&,N,V_personFromSenderStats
T@"SGMIMetricsSubmodelStats",&,N,V_personFromSenderInDyadicConversationStats
T@"SGMIMetricsSubmodelStats",&,N,V_subjectContentStats
T@"SGMIMetricsSubmodelStats",&,N,V_personToRecipientsStats
T@"SGMIMetricsSubmodelStats",&,N,V_personCCRecipientsStats
T@"SGMIMetricsSubmodelStats",&,N,V_domainFromSenderStats
T@"SGMIMetricsSubmodelStats",&,N,V_conversationStats
T@"SGMIMetricsSubmodelStats",&,N,V_listIdStats
T@"SGMIMetricsSubmodelStats",&,N,V_attachmentsStats
T@"SGMIMetricsSubmodelStats",&,N,V_subjectCountStatsStats
T@"SGMIMetricsSubmodelStats",&,N,V_standardMailRulesStats
T@"SGMIMetricsSubmodelStats",&,N,V_mailboxStats
T@"SGMIMetricsSubmodelStats",&,N,V_mailboxTypeStats
applicationRecordsForUserActivityType:limit:error:
appLinksWithURL:limit:includeLinksForCurrentApplication:error:
targetApplicationRecord
initWithURL:error:
bundleRecord
URLWithString:
sg_applicationRecordForDefaultWebBrowser
modelForPath:modelClass:
modelFromMobileAssetForEntity:type:language:class:
modelFromMobileAssetForName:language:
predictLabelForInput:
Td,R,V_threshold
T@"<PMLMultiLabelClassifierProtocol><PMLPlistAndChunksSerializableProtocol>",R,D
loadBinaryClassificationModelFromMobileAssetForObjective:language:withBlock:
initWithHead:tail:
initWithKeyOptions:valueOptions:capacity:
contentsOfDirectoryAtPath:error:
_rotate
close
_rotateIfNecessary
add:
exists:
initWithInMemoryStorage
initWithInMemoryStorageSparse
initWithDirectory:name:
forceRotate
addAsync:
counts
_head
_tail
_queue
TI,R,N
_buf
_hashes
_path
_countPtr
_mask
isEnabled
isDNUOnlyEnablement
isDNUEnabled
signatureStatsLogging
conversationForSenderID:
addMessage:
initWithMessages:
timestamp
initWithText:senderID:timestamp:
_pas_mappedArrayWithIndexedTransform:
maxPromptWindowSeconds
promptJoiningString
getMergedPromptForMessage:conversationTurns:maxPromptLength:maxPromptWindowSeconds:promptJoiningString:
conversationForIdentifier:
addTextMessageItem:
_conversationTracker
initWithTextMessage:detectedData:
decodeObjectForKey:
isEqualToConversationTurn:
senderID
T@"NSDate",R,N
language
features
setFeatures:
_text
_senderID
_timestamp
_detectedData
_features
T@"SGTextMessage",R,V_message
T@"NSString",R,N,V_text
T@"NSString",R,N,V_senderID
T@"NSDate",R,N,V_timestamp
T@"NSString",R,V_language
T@"NSArray",R,V_detectedData
T@"NSArray",&,V_features
detectLanguageFromLanguageTags:
_messages
_likelyLanguage
T@"NSArray",R,V_messages
T@"NSString",R,V_likelyLanguage
referenceWithBundleId:domainId:itemIds:
unlink
destroy
initWithBytesNoCopy:length:deallocator:
destroyAndUnlinkIfEmpty
write:
read
_len
_written
_dead
initWithCategory:name:eventDuration:location:
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:reservedSeat:event:
schemaFromTicketedEventReservation:
schemaFromGenericTicketedEventReservation:
schemaFromMovieTicketedEventReservation:
eventDuration
reservedSeat
_whitelistRegex
deregisterUpdateHandlerWithToken:
localizedCaseInsensitiveCompare:
regexFromJoinedArray:wordBoundary:
inputFromTaggedCharacterRanges:usingTokenMapping:forModel:
reminderEnrichments
reminderOverrides
reminderInputMapping
reminderOutputMapping
_whitelistedVerbRangeInContent:
metadata
inputTokenMapping
outputConfig
whitelistedVerbInContent:
setReminderOverridesForTesting:
_inputTokenMapping
_outputConfig
_reminderOverrides
initWithServiceContext:concurrencyBehavior:backpressureHazard:extractionMode:
concurrencyBehavior
extractionMode
_concurrencyBehavior
_backpressureHazard
_extractionMode
_serviceContext
T@"SGServiceContext",R,N,V_serviceContext
Ti,R,N,V_concurrencyBehavior
Ti,R,N,V_backpressureHazard
Ti,R,N,V_extractionMode
setWithArray:
featureValueWithMultiArray:
featureValueForName:
T@"NSSet",R,N
initWithL:D:I:N:W:
initWithL:D:I:N:W:bi_lstm_0_h_in:bi_lstm_0_c_in:bi_lstm_0_h_in_rev:bi_lstm_0_c_in_rev:
setL:
setD:
setI:
setN:
setW:
bi_lstm_0_h_in
setBi_lstm_0_h_in:
bi_lstm_0_c_in
setBi_lstm_0_c_in:
bi_lstm_0_h_in_rev
setBi_lstm_0_h_in_rev:
bi_lstm_0_c_in_rev
setBi_lstm_0_c_in_rev:
_bi_lstm_0_h_in
_bi_lstm_0_c_in
_bi_lstm_0_h_in_rev
_bi_lstm_0_c_in_rev
T@"MLMultiArray",&,N,V_L
T@"MLMultiArray",&,N,V_D
T@"MLMultiArray",&,N,V_I
T@"MLMultiArray",&,N,V_N
T@"MLMultiArray",&,N,V_W
T@"MLMultiArray",&,N,V_bi_lstm_0_h_in
T@"MLMultiArray",&,N,V_bi_lstm_0_c_in
T@"MLMultiArray",&,N,V_bi_lstm_0_h_in_rev
T@"MLMultiArray",&,N,V_bi_lstm_0_c_in_rev
_loggedExtractions
_loggedInteractions
_loggedInteractionsSummary
_storeCreationDate
suggestionsDirectoryFile:
attributesOfItemAtPath:error:
fileSize
dataWithContentsOfFile:
initForReadingFromData:error:
setDecodingFailurePolicy:
decodeTopLevelObjectOfClass:forKey:error:
moveItemAtPath:toPath:error:
initWithFilename:
storeToDisk
_deepCopy:
createFileAtPath:contents:attributes:
interactionKeyForInterface:actionType:
descriptionForEntityType:
extractedFlight
extractedBus
extractedTrain
extractedBoat
extractedHotel
extractedCarRental
extractedTicket
extractedMovie
extractedFood
extractedSocial
isTemplateName
isDomain
_descriptionForBundleId:
resolveName:
_interactionAttributesForTags:parentEntity:
locationTypeForRealtimeEvent:
locationTypeForEntity:
dateByAppendingDaysToCurrentDate:
numberOfDaysBetweenDate:andDate:
setYear:
dateByAddingComponents:toDate:options:
descriptionForSGRTCCategory:
launchCountForApp:afterDate:lowerBucket:bucketSize:bucketLimit:
bucketizedRemindersCreatedAfterDate:endDate:
aggregateSummaryBucketizedLaunchCountForApp:afterDate:
bucketizeIntegerForAggregateSummary:
cappedDeliveryEntityCountsCreatedBetweenStartDate:endDate:
cappedDeliveryEntityCountsCreatedBetweenStartDate:endDate:store:
entityKeyCountsForEntityType:startDate:endDate:
countForObject:
launchCountMessageAfterDate:
launchCountForBundleId:afterDate:limit:
eventsPerWeekAroundDate:
updateAndScheduleDiskWrite
_descriptionForExtractionStatus:
_eventExtractionDictionaryLogForTemplateName:extractionStatus:outputExceptions:outputInfos:jsMessageLogs:jsOutputLogs:timingProcessing:
trialIdsForStructuredEvent
logAndIncrementEventCountForDictionary:
_descriptionForMessageEventDissectorExtractionStatus:
assetVersionsForMLMessageEvent
logEventInteractionForEntitySync:interface:actionType:
logMLMessageEventExtractionForEntitySync:interface:actionType:
_descriptionForInterface:
_descriptionForActionType:
_interactionAttributesForEntity:parentEntity:
incrementAndUpgradeInteractionSummaryForEventKey:interactionKey:parentEntity:
_updateLocationTypeFromInteractionsSummaryForEventKey:locationType:
createInteractionSummaryForEventKey:expirationDate:interactionKey:interactionAttributes:rtcCategory:
logNewInteractionSummaryWithDictionary:
interactionKeyForCategory:interface:actionType:
_interactionAttributesForRealtimeEvent:parentEntity:
logEventInteractionForRealtimeEventSync:parentEntity:interface:actionType:
_deepMutableContainersCopy:
initWithSessionInfo:userInfo:frameworksToCheck:
logsToSend
_createRTCReporting
enrichInteractionSummaryLog:
_mapsUsageLast2Weeks
_calendarUsageLast2Weeks
enrichReminderInteractionSummaryLog:
enrichAggregateSummaryLog:
whitelistedLogFromLog:
sendMessageWithCategory:type:payload:error:
storeAge
flushMessages
resetExtractionLogs
resetInteractionsLogs
removeInteractionsSummaryLogsFromLogs:
startConfigurationWithCompletionHandler:
resetInteractionsSummaryLogs
_createEmptyFileAtPath:
writeToFile:atomically:
treatmentId
experimentId
deploymentId
mobileAssetsEnabled
regionAsset
rolloutIdentifiers
rolloutId
rampId
descriptionForOriginType:
loggedExtractions
loggedInteractions
loggedInteractionsSummary
loggedExtractionsEventsCount
baseInteractionDictionaryForInterface:actionType:
logNewInteractionWithDictionary:
logEventExtractionForTemplateName:extractionStatus:outputExceptions:outputInfos:jsMessageLogs:jsOutputLogs:timingProcessing:
logMLMessageEventExtractionForTemplateName:extractionStatus:outputInfo:outputExceptions:timingProcessing:
logMLMessageEventInteractionForEntity:interface:actionType:
resetLogs
loggedExtractionsDescription
loggedInteractionsDescription
loggedInteractionsSummaryDescription
interactionsWriteQueue
_persistenceTimerSource
_interactionsWriteQueue
flightFromReservationSchema:
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:reservedSeat:flight:
schemaFromFlightReservation:
initWithName:iataCode:icaoCode:
airportFromAirportSchema:
initWithAirport:terminal:gate:
airlineFromFlightSchema:
flightNumberFromFlightSchema:
fromStartDate:
departureAirportGateFromFlightSchema:
arrivalAirporGateFromFlightSchema:
initWithAirline:flightNumber:boardingTime:flightDuration:departureAirportGate:arrivalAirportGate:
flight
schemaFromFlight:
iataCode
icaoCode
schemaFromAirline:
flightNumber
boardingTime
flightDuration
departureAirportGate
airport
schemaFromAirport:
terminal
gate
arrivalAirportGate
lastInsertRowId
_pas_enumerateChunksOfSize:usingBlock:
_loadReimportRequestsWithWhereClause:
removeObjectsInRange:
_deleteOrphanedItems
hasTableNamed:
storeReimportRequest:
storeReimportItems:requestId:
markReimportRequestAsExecutedWithRequestId:
markReimportItemsAsSeenByReceiverWithBundleId:items:
markReimportItemAsSeenByReceiverWithBundleId:uniqueId:
updateReimportItemUniqueIdForBundleId:oldValue:newValue:
loadUnqueriedReimportRequests
loadUnexecutedReimportRequests
loadAllReimportRequests
loadUnseenReimportItemsForRequest:
reimportRequestDBStats
taskWithDeadline:
markFinished
_taskForActivity:
shouldDefer
nameForActivityId:
activityForActivityId:
getState:
setCriteria:criteria:forActivity:
copyCriteria:
_activities
_lastCriteria
_handlers
_currentTasks
_registered
unregister:
initWithDeadline:manager:
requestDefer
_manager
_deadline
_deferRequested
initWithOptions:capacity:
task
tellCurrentTasksToDefer
_tasks
_actuallyAddEvents:
_isEligibleEvent:
updateBox:delay:
childrenFromParentKey:
isExtractedEventCategory
isAppleMailMessageId
_spotlightUidsForAppleMailMessageIds:
_attributeSetsForEvents:
setTimeout:
setRelatedUniqueIdentifier:
setDeletedWithRelatedUniqueIdentifier:
_enrichmentWritebackVersionKey
setValue:forCustomKey:
setIsUpdate:
initWithName:protectionClass:bundleIdentifier:
indexSearchableItems:completionHandler:
createWithImmediateResult:
fail:
succeed:
createAfter:onCreate:
initWithObjects:forKeys:
protectionClass
initWithType:
setFromAllowListedSender:
isSchemaOrg
JSONObjectWithData:options:error:
setFlightNumber:
setFlightCarrier:
setDepartureAirportCode:
setDepartureAirportName:
setArrivalAirportCode:
setArrivalAirportName:
setConfirmationNumber:
setFlightStatus:
setDepartureDateTime:
setArrivalDateTime:
isFloating
startUTCOffsetSeconds
endUTCOffsetSeconds
setCheckInUrl:
setBookingInfoUrl:
setAdditionalInfo:
setDonatedEvent:
writebackEnrichmentsForNewCopyOfMessage:
_dropBox
_weakStore
setAgeOfTheSubmodelInDays:
setHasAgeOfTheSubmodelInDays:
hasAgeOfTheSubmodelInDays
setNbHighlyDiscriminantTokensForSaliency:
setHasNbHighlyDiscriminantTokensForSaliency:
hasNbHighlyDiscriminantTokensForSaliency
setNbHighlyDiscriminantTokensForIgnorability:
setHasNbHighlyDiscriminantTokensForIgnorability:
hasNbHighlyDiscriminantTokensForIgnorability
setNbExtremelyDiscriminantTokensForSaliency:
setHasNbExtremelyDiscriminantTokensForSaliency:
hasNbExtremelyDiscriminantTokensForSaliency
setNbExtremelyDiscriminantTokensForIgnorability:
setHasNbExtremelyDiscriminantTokensForIgnorability:
hasNbExtremelyDiscriminantTokensForIgnorability
ageOfTheSubmodelInDays
nbHighlyDiscriminantTokensForSaliency
nbHighlyDiscriminantTokensForIgnorability
nbExtremelyDiscriminantTokensForSaliency
nbExtremelyDiscriminantTokensForIgnorability
_ageOfTheSubmodelInDays
_nbExtremelyDiscriminantTokensForIgnorability
_nbExtremelyDiscriminantTokensForSaliency
_nbHighlyDiscriminantTokensForIgnorability
_nbHighlyDiscriminantTokensForSaliency
TI,N,V_ageOfTheSubmodelInDays
TI,N,V_nbHighlyDiscriminantTokensForSaliency
TI,N,V_nbHighlyDiscriminantTokensForIgnorability
TI,N,V_nbExtremelyDiscriminantTokensForSaliency
TI,N,V_nbExtremelyDiscriminantTokensForIgnorability
getCharacters:
stringWithString:
stringWithString:range:
getCharacters:range:
_fastCStringContents:
_fastCharacterContents
fastestEncoding
setRange:
_confidence
_isASCII
_length
_contents
T{_NSRange=QQ},N,V_range
Ti,N,V_confidence
lookup:
freeJSContext
_handleMemoryPressureStatus:
_stringFromMemoryPressureStatus:
refreshAssetPath
initWithVirtualMachine:
initCurrentAsset
fileURLWithPath:isDirectory:
setAssetPath:
URLByStandardizingPath
valueWithUndefinedInContext:
fileURLWithPath:
URLByAppendingPathComponent:
loadJSFromASCIIFile:
processLoadRequestWithFileName:
runDataDetectors:locale:epoch:metadataForTypes:
tokenize:
decodeEntities:
dominantLanguageTagFromText:
defaultOrthographyForLanguage:
linguisticTagsInRange:scheme:options:orthography:tokenRanges:
currentContext
valueWithNewErrorFromMessage:inContext:
setException:
preferredLocalizationsFromArray:forPreferences:
setFormatterBehavior:
setDateStyle:
setTimeStyle:
timeZoneForSecondsFromGMT:
allowUnverifiedSourceForMarkup
flightInformationWithAirlineCode:flightNumber:flightDate:
md5Hash:
components:fromDate:toDate:options:
historicalFlightInformationWithAirlineCode:flightNumber:flightDate:
postHistoricalFlightInformationWithAirlineCode:flightNumber:flightDate:andPayload:
loadTrieWithFileName:
mappedArrayBufferForFileName:
callWithArguments:
JSGlobalContextRef
valueWithJSValueRef:inContext:
sg_md5Hash
mainBundle
flightRequestForQuery:date:appBundleId:
sharedSession
flightResults
sfFlightsToDictionary:
taskWithRequest:completion:
resume
code
holdXpcTransactionForShortDelay
runWithExceptionBarrier:
carrierCode
carrierName
carrierPhoneNumber
flightID
operatorCarrierCode
operatorFlightNumber
legs
sfFlightStatusToString:
departurePublishedTime
departureAirport
timezone
formattedDate:withTimezone:
departureActualTime
departureTerminal
departureGate
arrivalPublishedTime
arrivalAirport
arrivalActualTime
arrivalTerminal
arrivalGate
sfAirportToDictionnary:
divertedAirport
formatOptions
setFormatOptions:
dictionaryFromTimezone:
district
countryCode
secondsFromGMT
initWithContentsOfURL:options:error:
getJSContext
_prepareArguments:
toBool
exception
toDictionary
isNull
toString
initWithDict:
preprocessPackedSGMessage:
shouldDownloadFull:
_eventClassificationForEntity:
_privacyAwareLogsForMLExtractions:
_getFlightReferencesAndReservationId:
_resolveCandidatesForJSDict:
_diffSchemas:withExpectedSchemas:
_mergeSchemas:withExpectedSchemas:
parseHTML:
payloadToOutputWithEntryPoint:arguments:
outputExceptionsFromOutput:
payloadToOutputWithEntryPoint:arguments:reply:
simpleDedupe:
_prepareEntity:
setScheme:
parsecFlightCachingAPIBaseURL
setHost:
setPath:
queryItemWithName:value:
setQueryItems:
defaultSessionConfiguration
setTimeoutIntervalForRequest:
setTimeoutIntervalForResource:
sessionWithConfiguration:
dataTaskWithURL:completionHandler:
invalidateAndCancel
requestWithURL:
setHTTPBody:
setHTTPMethod:
setValue:forHTTPHeaderField:
dataTaskWithRequest:completionHandler:
fakeFlightInformationWithAirlineCode:flightNumber:flightDate:
shouldDownloadFull:reply:
emailToOutput:reply:
textMessageToOutput:reply:
schemaOrgToOutput:reply:
emailToJsonLd:reply:
eventClassificationForEntity:reply:
resolveCandidatesForJSDict:reply:
diffSchemas:withExpectedSchemas:reply:
mergeSchemas:withExpectedSchemas:reply:
privacyAwareLogsForMLExtractions:reply:
getFlightReferencesAndReservationId:reply:
flightInformationWithAirlineCode:flightNumber:flightDate:reply:
parseHTML:reply:
reverseMapEntity:forCategory:withSchemaExpectation:
_jsVM
_memoryMappedFiles
_memoryMappedFileNames
_jsContext
_assetPath
_localeIdentifier
_memoryPressureQueue
_memoryPressureSource
_dateFormatter
currentEnvironment
setEnvironment:
setIncludeDonatedContacts:
initWithConfiguration:
contactStoreWithDonatedContacts
useMockContactStore:
_trie
_setTrieFromPath:guardedData:
setTrieFromPath:
payloadForUTF8String:length:
getCString:maxLength:encoding:
payloadWithStartChar:andSize:
payloadForDomain:
isStructuredEventCandidateForEmailDomain:
_structuredEventInputMapping
_structuredEventOutputMapping
_foundInMailNotifications
fileValue
modelPathForTriClient:andNamespace:
uncompressModelAndUpdateFactors:destinationPath:
modelPathForCurrentEnrollment
cleanExperimentModelsFromTrialModelsFolder
booleanValue
foundInMailNotifications
baseModelName
notificationsAllowListOverride
initWithHandle:
T@"SGSqliteDatabase",R,N,V_db
readTransactionWithHandle:block:
writeTransactionWithHandle:block:
writeTransactionDepth
_writeTransactionDepth
Tq,R,N,V_writeTransactionDepth
initWithFilename:flags:error:errorHandler:
handleError:sqliteError:forQuery:onError:
initWithFilename:flags:error:sgDb:
_sgDb
runWithWriteLockAcquired:
initWithFilename:withProtection:sharedLock:error:
closePermanently
truncateDatabaseAtPath:
isInMemory
stmt
runQuery:onRow:onError:
prepQuery:onPrep:onError:
_prepQuery:onPrep:onError:
bindParamToNull:
bindParam:toNSString:
bindParam:toNSData:
objCType
bindParam:toDoubleAsNSNumber:
bindParam:toInt64AsNSNumber:
_prepAndRunQuery:columns:dictionary:onError:
selectColumns:fromTable:whereClause:onPrep:onError:
frailWriteTransaction:
frailReadTransaction:
createSnapshot:
userVersion
setUserVersion:
getIntegerForColumn:
tablesWithColumnNamed:
hasColumnOnTable:named:
hasIndexNamed:
numberOfRowsInTable:
languageForFTSTable:
pageCount
freelistCount
_pagesToVacuum
vacuumMode
numberWithLong:
sqliteDatabaseWithFilename:error:
sqliteDatabaseInMemoryWithError:
isInMemoryPath:
inMemoryPath
randomlyNamedInMemoryPathWithBaseName:
bindParam:name:int:
simulateOnDiskDatabase
prepAndRunNonDataQueries:onError:
updateTable:dictionary:whereClause:onError:
maxIdForTable:
performIntegrityCheck
optimize:
_impl
_lastBusyWaitEnded
_sharedWriterLock
_usesDataProtection
T^{sqlite3=},R,N
detectStructuredEventsML
shouldIgnoreMailMessage:
eventClassificationWithoutXPCForMailMessage:
eventClassificationForMailMessage:
useCase
labelsWithMatchingStringsForMailMessage:
preprocessWithoutXPCForHTML:subject:epoch:category:labelsWithMatchingStrings:
preprocessHTML:subject:epoch:category:labelsWithMatchingStrings:
eventEnrichmentContainsReverseMappedTags:
schemaOrgAndMissingEntitiesForPreprocessed:eventClassification:fromSuggestTool:addressThreshold:pflTrainable:hasEvent:
logMLExtractionForSchema:mergedSchemaAndDiff:parentEntity:timingProcessingInMs:eventClassification:mailMessage:shadowExtraction:mlDefaultExtraction:
mergeFallbackSchema:parentEntity:
addSchemaAsEnrichment:inMessage:parentEntity:eventClassification:mlDefaultExtraction:
logMLInteractions:context:mlDefaultExtraction:
logFailedExtractionWithClassification:missingEntities:mlSummary:shadowExtraction:timingProcessingInMs:forMessage:parentEntity:
eventEnrichmentFromEntity:
mergeSchemas:withExpectedSchemas:
enrichmentsFromSchemas:inMessage:parentEntity:
extractedFromTemplateWithName:
extractedFromTemplateWithShortName:
domain:
initWithType:categoryDescription:originBundleId:confidence:schemaOrg:participants:eventActivities:
toJsonString
eventMetadata:
schemaStringForReservationStatus:
schemaPostalAddressForPostalAddressExtraction:addressThreshold:
schemaStringForDateComponents:
tupleWithEntity:label:
tupleWithError:label:
nilEntities:
providerName
schemaStringForEventStatus:
insertSubject:
tokenizeTextContent:languageHint:gazetteer:
annotateContent:withLabel:forMatchingString:
preprocessDomParserResult:subject:epoch:category:labelsWithMatchingStrings:
textRangeForIndexRange:inTaggedCharacterRanges:
annotationMatchingStringsForSubject:
annotationTypeUniqueIdentifier
candidatesForLabelsWithPlainTextIndexSets:inPlainText:
tokenCountForPostalAddressComponents:
tokenCount:
addressDictionaryForAddressComponents:
isFieldReverseMapped
jsMessageLogsDictionaryForMailMessage:
outputLogsForClassification:
jsMessageLogsDictionaryForPrivacyAwareLogs:
diffSchemas:withExpectedSchemas:
localeAssetIdentifier
privacyAwareLogsForMLExtractions:
describeUseCase:
schemaOrgAndMissingEntitiesForPreprocessed:eventClassification:fromSuggestTool:
plainTextStringsByLabelInTaggedCharacterRanges:inPlainText:
tagsWithModelOutputFromEnrichedTaggedCharacterRanges:
resolveItemRefsWithDocument:
itemType
jsonLdForItem:
propertyName
setHtmlIdItemScope:forHtmlId:
addItem:
htmlIds
items
_htmlIds
_items
T@"NSDictionary",R,N,V_htmlIds
T@"NSArray",R,N,V_items
pushValue:toDistKeyWithDomain:suffix:
isEqualToSchemaOrgKey:
_uuid
commitStorageLocation:withEventId:
airportCode
runQuery:values:onDb:
pruneEntitiesOlderThan:suspensionHandler:batchSize:
getInt64ForColumnAlias:
initWithSerializedEntityKey:entityType:serializedParentKey:
deleteEntitiesByDuplicateKey:emitChangeNotifications:
deleteMailIntelligenceForMessageIds:
clearBucketsForDates:
entityFromSqlResult:withSnippets:
pruneNLEventEntitiesOlderThan:
duplicateKeysMatchingAnyTag:
deleteMessagesByDuplicateKey:
recordIdWithTableId:rowId:
_recordPseudoContactsWithDeletedDetailsInTable:deletedChildrenTable:
columnQueryPrefixSelect
storageReminderFromEntity:store:
_deleteRemindersByRecordIds:
_deleteContactDetailsByRecordIds:
_deleteEventsByRecordIds:
selectAuthoritativeDetailsForContactWithId:
_deleteChildEntitiesByRecordIdsInTable:
compositeHash
recordIdForEmailWithRowId:
deleteEntitiesByDuplicateKey:preserveEventConfirmationHistory:emitChangeNotifications:
_deleteEntitiesByDuplicateKeyNoRecurse:
_derefChildrenOf:
_deleteMessageMetadataByDuplicateKeyNoRecurse:
tableId
removeSnippetsForEntities:
_removeSnippetsForEmails:
emitEventDeleted:
emitContactDeleted:
emitReminderDeleted:
messagesDeleted:
bindParam:toInt64:
bindNamedParam:toInt64AsNonnullNSNumber:
deleteItemsWithEntityTag:preserveEventConfirmationHistory:
indexed
duplicateKeysMatchingInteractionBundleId:andTags:
pruneEntitiesOlderThan:suspensionHandler:
clearMailIntelligence
readDataOfLength:
allVIPEmailAddresses
vips
setVips:
_vips
T@"EAEmailAddressSet",&,N,V_vips
naiveBayesModelQueryResultForFeature:unigramTokens:bigramTokens:
highlyDiscriminantTokensForFeature:minCount:minRatio:
deleteNaiveBayesModelForProbabilityFeatureName:
commitNaiveBayesModel:probabilityFeatureName:updateDate:
setUnsubscriptionOpportunitiesSuggestionsDenyListForField:toValues:
getUnsubscriptionOpportunitiesSuggestionsDenyListForField:
areSubmodelsEmpty
subModelsStats
purgeTokensWhichLastUpdateWasBefore:shouldContinue:
getSGMIStoredAddresses
deleteTokensForDeletedEmailAddresses:
applyCappingPolicy:shouldContinue:
commitNaiveBayesModel:probabilityFeatureName:
purgeTokensWhichLastUpdateWasBefore:
getViolationsToTokenCountsPolicy:
applyCappingPolicy:byDiscardingTokensCounts:withMargin:
_bytecode
_endPtr
setData:
setFeatureNames:
T@"MLMultiArray",&,N,V_data
T@"NSSet",&,N,V_featureNames
regularScore
salientScore
ruleBasedInferenceFor:config:
evaluateFirstMatchAmong:defaultValue:
defaultModel
flatVectorForFeatureNames:
multiArrayValue
saliencyThreshold
saliencyWithScore:isSalient:
getSaliencyOutputOf:forArray:
isProbablyShortCJKName:
namePayload:
isFamilyName:
isSalientName:
formUnionWithCharacterSet:
characterIsMember:
stripAndReturnHonorifics:
namesApproximatelyMatch:and:threshold:
unnormalizedNamesApproximatelyMatch:and:threshold:
unnormalizedNameSimilarity:and:
initWithCharacters:length:
componentsSeparatedByCharactersInSet:
toSGNameWithOrigin:recordId:extractionInfo:
possibleNameStringFromEmailAddress:
isCommonNameWord:
cjkSpacerCharacters
shouldInvertFirst:last:
isLowercaseStringCommonNameWord:
isCommonVietnameseSurname:
isDifficultName:
stripHonorifics:
universalCleanName:
handleLastNameFirstOrder:
namesApproximatelyMatch:and:
unnormalizedNamesApproximatelyMatch:and:
surnameFromName:
cjkSpacersToWhiteSpace:
shouldInvertOrderOfFirst:last:
addCharactersInRange:
stringWithCharacters:length:
alphanumericCharacterSet
initWithCString:encoding:
messageAvailableTime
eventName
initWithScrolledToEnd:messageViewMaxDwellTime:messageViewTotalDwellTime:messageViewCount:timeBeforeViewStartSinceAvailable:numberOfMailsViewedBeforeSinceAvailable:userReplied:replyDraftStarted:forwardDraftStarted:numberOfUnreadMessageAtFirstViewTime:numberOfMoreRecentUnreadMessageAtFirstViewTime:markedAsRead:markedAsUnread:markedAsJunk:mailGotFlagged:linkClicked:
updateWithAppLaunchAtTime:
updateWithViewStartAtTime:unreadMessageCount:
updateWithViewEndWithPayload:
updateWithMessageFetchedEventAtTime:
updateWithFlagChangedEvent
updateWithReadChangedEventWithPayload:
updateWithMessageMovedEventWithPayload:
updateWithEvent:eventTimestamp:
incrementNumberOfMailsViewedBeforeSinceAvailable
incrementNumberOfMoreRecentUnreadMessageAtFirstViewTime
scrolledToEnd
userReplied
numberOfMailsViewedBeforeSinceAvailable
timeBeforeViewStartSinceAvailable
messageViewCount
messageViewMaxDwellTime
messageViewTotalDwellTime
numberOfUnreadMessageAtFirstViewTime
numberOfMoreRecentUnreadMessageAtFirstViewTime
markedAsRead
markedAsUnread
mailGotFlagged
replyDraftStarted
forwardDraftStarted
markedAsJunk
linkClicked
firstAppLaunchFollowingFetch
messageFetchTime
_scrolledToEnd
_userReplied
_markedAsRead
_markedAsUnread
_mailGotFlagged
_replyDraftStarted
_forwardDraftStarted
_markedAsJunk
_linkClicked
_numberOfMailsViewedBeforeSinceAvailable
_messageViewCount
_numberOfUnreadMessageAtFirstViewTime
_numberOfMoreRecentUnreadMessageAtFirstViewTime
_timeBeforeViewStartSinceAvailable
_messageViewMaxDwellTime
_messageViewTotalDwellTime
_firstAppLaunchFollowingFetch
_messageFetchTime
TB,R,N,V_scrolledToEnd
TB,R,N,V_userReplied
TI,R,N,V_numberOfMailsViewedBeforeSinceAvailable
Td,R,N,V_timeBeforeViewStartSinceAvailable
TI,R,N,V_messageViewCount
Td,R,N,V_messageViewMaxDwellTime
Td,R,N,V_messageViewTotalDwellTime
TI,R,N,V_numberOfUnreadMessageAtFirstViewTime
TI,R,N,V_numberOfMoreRecentUnreadMessageAtFirstViewTime
TB,R,N,V_markedAsRead
TB,R,N,V_markedAsUnread
TB,R,N,V_mailGotFlagged
TB,R,N,V_replyDraftStarted
TB,R,N,V_forwardDraftStarted
TB,R,N,V_markedAsJunk
TB,R,N,V_linkClicked
Td,R,N,V_firstAppLaunchFollowingFetch
Td,R,N,V_messageFetchTime
payload
updateSummaryDict:fetchedUnreadMessages:event:timestamp:
fromSchemas:
intentResponse
toSchemas
stored
sg_initWithSerializedForm:
journaling
floatingRangeWithUTCStart:end:
rangeWithStart:startTimeZone:end:endTimeZone:
dataWithBytes:length:
contactEntityFromEntity:
allContactsWithEntityType:
dictionaryWithCapacity:
serializedContactsLimit
unmigrateDatabases
contactDetailFromEntity:
_scoreContactDetail:
masterEntityIdForContactOrContactDetailRecord:
deleteSerializedContactForId:
allPseudoContacts
entityCount
dbStats
clearAllTables
clearDatabases
initWithRentalCompanyName:type:make:model:rentalCarDescription:
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:rentalCar:rentalDuration:pickupLocation:dropOffLocation:
schemaFromRentalCarReservation:
rentalCar
make
rentalCompanyName
rentalDuration
dropOffLocation
pickupLocation
databasecheck_IntegrityCheck
performDatabaseCheck
performIntegrityCheckOnly
databasecheck_BrokenEntityIDReferences
databasecheck_contactMergeGroupConsistency
setPersonFromSenderProbability:
setHasPersonFromSenderProbability:
hasPersonFromSenderProbability
setPersonFromSenderInDyadicConversationProbability:
setHasPersonFromSenderInDyadicConversationProbability:
hasPersonFromSenderInDyadicConversationProbability
setSubjectContentProbability:
setHasSubjectContentProbability:
hasSubjectContentProbability
setPersonToRecipientsProbability:
setHasPersonToRecipientsProbability:
hasPersonToRecipientsProbability
setPersonCCRecipientsProbability:
setHasPersonCCRecipientsProbability:
hasPersonCCRecipientsProbability
setDomainFromSenderProbability:
setHasDomainFromSenderProbability:
hasDomainFromSenderProbability
setConversationProbability:
setHasConversationProbability:
hasConversationProbability
setListIdProbability:
setHasListIdProbability:
hasListIdProbability
setAttachmentsProbability:
setHasAttachmentsProbability:
hasAttachmentsProbability
setSubjectCountStatsProbability:
setHasSubjectCountStatsProbability:
hasSubjectCountStatsProbability
setStandardMailRulesProbability:
setHasStandardMailRulesProbability:
hasStandardMailRulesProbability
setMailboxProbability:
setHasMailboxProbability:
hasMailboxProbability
setMailboxTypeProbability:
setHasMailboxTypeProbability:
hasMailboxTypeProbability
personFromSenderProbability
personFromSenderInDyadicConversationProbability
subjectContentProbability
personToRecipientsProbability
personCCRecipientsProbability
domainFromSenderProbability
conversationProbability
listIdProbability
attachmentsProbability
subjectCountStatsProbability
standardMailRulesProbability
mailboxProbability
mailboxTypeProbability
_attachmentsProbability
_conversationProbability
_domainFromSenderProbability
_listIdProbability
_mailboxProbability
_mailboxTypeProbability
_personCCRecipientsProbability
_personFromSenderInDyadicConversationProbability
_personFromSenderProbability
_personToRecipientsProbability
_standardMailRulesProbability
_subjectContentProbability
_subjectCountStatsProbability
Tf,N,V_personFromSenderProbability
Tf,N,V_personFromSenderInDyadicConversationProbability
Tf,N,V_subjectContentProbability
Tf,N,V_personToRecipientsProbability
Tf,N,V_personCCRecipientsProbability
Tf,N,V_domainFromSenderProbability
Tf,N,V_conversationProbability
Tf,N,V_listIdProbability
Tf,N,V_attachmentsProbability
Tf,N,V_subjectCountStatsProbability
Tf,N,V_standardMailRulesProbability
Tf,N,V_mailboxProbability
Tf,N,V_mailboxTypeProbability
updateSerializedContacts:
updateCNContactMatches:
_reportDbStatsBackground
twoSigFigs:
reportDbStats
launchCountForApp:afterDate:limit:
locationTypeForHandle:latitude:longitude:airportCode:address:label:
isMainThread
_parseDocument:
currentRunLoop
runMode:beforeDate:
initWithPlainText:taggedCharacterRanges:
nonPersistentDataStore
setWebsiteDataStore:
preferences
setJavaScriptCanOpenWindowsAutomatically:
_setWebAudioEnabled:
_setJavaScriptCanAccessClipboard:
_setStorageBlockingPolicy:
_setScreenCaptureEnabled:
_setPeerConnectionEnabled:
_setMediaDevicesEnabled:
_setDOMPasteAllowed:
_setAVFoundationEnabled:
_setLoadsImagesAutomatically:
_setRemotePlaybackEnabled:
_setTextAutosizingEnabled:
_setShouldEnableTextAutosizingBoost:
setAllowsAirPlayForMediaPlayback:
_setAllowUniversalAccessFromFileURLs:
_setLegacyEncryptedMediaAPIEnabled:
_setAllowsJavaScriptMarkup:
setAllowsInlineMediaPlayback:
setAllowsPictureInPictureMediaPlayback:
setAllowsContentJavaScript:
setPreferredContentMode:
setDefaultWebpagePreferences:
initWithFrame:configuration:
setNavigationDelegate:
webView
loadHTMLString:baseURL:
waitForSemaphore:
runJavascriptOnWebView:withCallback:
stringWithContentsOfFile:encoding:error:
evaluateJavaScript:completionHandler:
webView:decidePolicyForNavigationAction:decisionHandler:
webView:decidePolicyForNavigationAction:preferences:decisionHandler:
webView:decidePolicyForNavigationResponse:decisionHandler:
webView:didStartProvisionalNavigation:
webView:didReceiveServerRedirectForProvisionalNavigation:
webView:didFailProvisionalNavigation:withError:
webView:didCommitNavigation:
webView:didFinishNavigation:
webView:didFailNavigation:withError:
webView:didReceiveAuthenticationChallenge:completionHandler:
webViewWebContentProcessDidTerminate:
webView:authenticationChallenge:shouldAllowDeprecatedTLS:
webView:navigationAction:didBecomeDownload:
webView:navigationResponse:didBecomeDownload:
_loadedSem
_webView
_html
encodeDouble:forKey:
decodeDoubleForKey:
isEqualToStorageLocation:
initWithId:origin:type:label:address:airportCode:latitude:longitude:accuracy:quality:handle:
geocodeLabel
geocodeAddress
geocodeAirportCode
geocodeIsStart
geocodeIsEnd
geocodeLatitude
geocodeLongitude
geocodeAccuracy
geocodeHandle
geocodedLocationWithLabel:address:latitude:longitude:accuracy:handle:
geocodedLocationWithLatitude:longitude:accuracy:handle:
initWithType:label:airportCode:latitude:longitude:accuracy:quality:
convertToLocationWithId:origin:
_locationType
_label
_address
_airportCode
_latitude
_longitude
_accuracy
Ti,R,N,V_locationType
T@"NSString",R,N,V_label
T@"NSString",R,N,V_address
T@"NSString",R,N,V_airportCode
Td,R,N,V_latitude
Td,R,N,V_longitude
Td,R,N,V_accuracy
Td,R,N,V_quality
T@"NSData",R,N,V_handle
mostRecentParentKeyForDuplicateKey:
originTypeForEntityType:
addDetailsFromOriginatingMessageEntity:
addRecipientDetailsFromOriginatingMessageEntity:entity:store:
addSnippetIfNotExistsFromContentOfEntity:
curatedEventKey
addDetailsFromOriginatingCalendarEntity:
interactionKey
addDetailsFromOriginatingInteractionEntity:
addDetailsFromOriginatingGenericEntity:
addDetailsFromParticipantsOfEntity:
showOperatingSystemVersionInSnippets
recordIdWithInternalEntityId:
addDetailsFromOriginatingContactEntity:
_pas_proxyStringByConcatenatingStrings:
internalEntityId
recordIdForContactDetailWithRowId:
recordIdForEventWithRowId:
isLogged
_isLogged
_log
T@"SGMIMetricsMailIntelligenceForMessage",R,V_log
TB,R,V_isLogged
setExperimentId:
setTreatmentId:
hasExperimentId
hasTreatmentId
setDeploymentId:
setHasDeploymentId:
hasDeploymentId
_deploymentId
_experimentId
_treatmentId
T@"NSString",&,N,V_experimentId
T@"NSString",&,N,V_treatmentId
Ti,N,V_deploymentId
salt
saltAtomicReferenceId
saltUsesManatee
syncToken
hasSubscription
eventsWereRemovedFromEventKit
hasDeferredSync
hasDeferredProcessStateChanges
setupKvo
properties
_setterForProperty:
stopKvo
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:context:
changeCallback
_getterForProperty:
observeValueForKeyPath:ofObject:change:context:
setChangeCallback:
setSalt:
setSaltAtomicReferenceId:
setSaltUsesManatee:
setSyncToken:
setHasSubscription:
setEventsWereRemovedFromEventKit:
setPrimaryICloudCalendarAccount:
setHasDeferredSync:
setHasDeferredProcessStateChanges:
_changeCallback
_salt
_saltAtomicReferenceId
_saltUsesManatee
_syncToken
_hasSubscription
_eventsWereRemovedFromEventKit
_primaryICloudCalendarAccount
_hasDeferredSync
_hasDeferredProcessStateChanges
T@?,C,N,V_changeCallback
T@"NSData",&,N,V_salt
T@"CKRecordID",&,N,V_saltAtomicReferenceId
T@"NSNumber",&,N,V_saltUsesManatee
T@"CKServerChangeToken",&,N,V_syncToken
T@"NSNumber",&,N,V_hasSubscription
T@"NSNumber",&,N,V_eventsWereRemovedFromEventKit
T@"NSString",&,N,V_primaryICloudCalendarAccount
T@"NSNumber",&,N,V_hasDeferredSync
T@"NSNumber",&,N,V_hasDeferredProcessStateChanges
_coupleOperationTrainWithStart:end:
cancelAllOperations
setSuspended:
suspend
getUnderlyingError:
suspendAndResumeAfter:
clearErrors
addOperation
addDeleteZoneAttemptOperationWithRetries:
_addDependency:toTrain:
failSalt
recordZoneId
setRecordZoneIDsToDelete:
pauseIfNeededAndReturnRetryEligibilityForError:
disable
setModifyRecordZonesCompletionBlock:
addCreateZoneAttemptOperationWithRetries:
initWithZoneID:
setRecordZonesToSave:
ckErrorForRecordZoneId:inError:
processStateChanges
initWithRecordZoneIDs:
addDeleteAndRecreateZoneOperation
setFetchRecordZonesCompletionBlock:
addProcureSaltAttemptOperationWithRetries:
_ckErrorForId:inError:
base64EncodedStringWithOptions:
initWithRecordName:zoneID:
initWithRecordType:recordID:
encryptedValuesByKey
recordName
setRecordsToSave:
setAtomic:
setSavePolicy:
recordType
recordID
ckErrorForRecordId:inError:
shouldRecreateZoneForRecordError:operationError:
addCreateZoneOperation
setModifyRecordsCompletionBlock:
addFetchNewEntitiesAttemptOperationWithRetries:
setPreviousServerChangeToken:
initWithRecordZoneIDs:configurationsByRecordZoneID:
setFetchAllChanges:
container
setContainer:
setConfiguration:
fromCloudKitRecord:
invokeNewEntitiesCallbackWithEntity:
setRecordChangedBlock:
waitForFuturesToComplete:withCallback:
setRecordZoneFetchCompletionBlock:
addDeleteZoneOperation
addProcureSaltOperation
addWriteOperationForRecordGetter:deleteGetter:withRetries:isFirstTry:
setRecordIDsToDelete:
addManateeSanityCheckOperation
_sharedInstanceConfigurationQueue
setCallbackQueue:
operationCount
setUnderlyingQueue:
cloudKitPersistedState
setCloudKitPersistedState:
accountInfo
shouldRemoveEventsFromEventKit
accountStatus
supportsDeviceToDeviceEncryption
_callbackQueue
createSubscriptionWithRetries:
addFetchNewEntitiesOperation
completer
setTargetQueue:useAfterCompletion:
completeWithResult:error:
accountInfoWithCompletionHandler:
createWithImmediateResult:error:
serverPreferredPushEnvironmentWithCompletionHandler:
futureForObject:withKey:onCreate:
setRecordType:
setShouldSendContentAvailable:
saveSubscription:completionHandler:
apsEnvironmentStringForContainer:
initWithEnvironmentName:namedDelegatePort:queue:
setDelegate:
_setEnabledTopics:
accountChanged:
reactAfterChangesToKeyPath:ofObject:usingBlock:
toCloudKitRecordWithId:parentEntityType:
initWithRecordID:action:
addWriteOperationForRecordGetter:deleteGetter:withRetries:
initWithZoneName:ownerName:
deleteGroupId:
useManateeSaltForHistory
notificationFromRemoteNotificationDictionary:
notificationType
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveToken:forInfo:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
deleteStorageEvent:
_kvoHandler
_database
_callback
_deleteAllSyncedItemsCallback
_readyForNewEntities
_apsConnection
_opQueue
_operationsToAddToOpQueue
_container
_accountInfoFuture
_accountInfoInFlight
_persistedState
_suspendCount
_noZone
_disabledBecauseOutOfDateSoftware
_inProgressProcureSaltOperation
_inProgressCreateZoneOperation
_inProgressDeleteZoneOperation
_inProgressFetchNewEntitiesOperation
_requestedFetchNewEntitiesWhileRequestAlreadyInFlight
_createZoneError
_deleteZoneError
_procureSaltError
_processingStateChanges
_pendingProcessStateChanges
_greenTeaLogger
_privacySaltFuture
cloudKitSync
initWithCloudKitSyncGetter:
_cksGetter
_cks
weakToStrongObjectsMapTable
startListening
stopListening
objectEnumerator
addObserver:forObjectLifetime:
fire
_liveObserversMap
registerChangeHistoryClientIdentifier:error:
unregisterChangeHistoryClientIdentifier:error:
_notificationCenterToken
_notificationQueue
_getListenerByClassMap
_getListener:
_addObserver:forObjectLifetime:listenerClass:
simulateAddressBookChange
simulateCalendarChange
initWithLocationType:trigger:name:
describeReminderDueLocationType:
describeReminderDueLocationTrigger:
isEqualToReminderDueLocation:
_trigger
TC,R,N,V_locationType
TC,R,N,V_trigger
T@"NSString",R,N,V_name
setSharedInstance:
recordMessageInChat:
estimateMessagesInChat:
_backingData
_sketch
T@"NSString",R,V_path
partySizeFromReservationSchema:
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:reservationDuration:partySize:restaurantLocation:
schemaFromRestaurantReservation:
reservationDuration
partySize
restaurantLocation
initFor:fromUnigram:andBigram:
submodeledFeature
unigramFeature
bigramFeature
_submodeledFeature
_unigramFeature
_bigramFeature
Tq,R,V_submodeledFeature
Tq,R,V_unigramFeature
Tq,R,V_bigramFeature
allFeatureNames
prettyName:
featureTypeForName:
initWithFeatureName:
featureType
numberValue
numberArrayValue
stringArrayValue
submodeledFeatures
initWithFeatureName:numberValue:
initWithFeatureName:numberArrayValue:
initWithFeatureName:stringValue:
initWithFeatureName:stringArrayValue:
stringArrayRepresentation
_featureType
_numberValue
_numberArrayValue
_stringValue
_stringArrayValue
Tq,R,N,V_featureName
Tq,R,N,V_featureType
T@"NSNumber",R,N,V_numberValue
Tf,R,N
Td,R,N
Ti,R,N
Tq,R,N
T@"NSArray",R,N,V_numberArrayValue
T@"NSString",R,N,V_stringValue
T@"NSArray",R,N,V_stringArrayValue
unsignedLongLongValue
encryptedValues
decompress:
hasParentEntityType
parentEntityType
hasInteractionInfo
interactionInfo
hasInteractionBundleId
interactionBundleId
interactionId
extraKey
extraKey:
cancelled
domain
templateName
categoryType
categoryTagWithCategoryType:
hasStartUTCOffsetSeconds
hasLatitude
hasLongitude
hasExtraKey
hasSchemaOrg
schemaOrg:
hasMetadata
hasInteractionId
hasInteractionGroupId
interactionGroupId
hasInteractionTeamId
interactionTeamId
interactionTeamId:
hasReservationItemReferences
reservationItemReferencesWithData:
hasReservationContainerReference
reservationContainerReferenceWithData:
hasIntentResponseUserActivityString
intentResponseUserActivityString:
setParentEntityType:
setAllDay:
setStart:
setEnd:
setStartUTCOffsetSeconds:
setEndUTCOffsetSeconds:
setWhen:
setLocationType:
setLabel:
setAddress:
setAirportCode:
setAccuracy:
setHandle:
addLocations:
setExtraKey:
setDomain:
setTemplateName:
setCancelled:
setCategoryType:
isInteractionId
isInteractionGroupId
isInteractionBundleId
dataWithPropertyList:format:options:error:
setSchemaOrg:
setMetadata:
setInteractionId:
setInteractionGroupId:
setInteractionTeamId:
setInteractionBundleId:
setIntentResponseUserActivityString:
initWithBase64EncodedString:options:
setReservationContainerReference:
setReservationItemReferences:
setInteractionInfo:
initWithRecordType:
compress:lowMemory:
anyHandleIsSignificant:
setCategory:
setHasCategory:
hasCategory
categoryAsString:
StringAsCategory:
setCountUpTo8KB:
setHasCountUpTo8KB:
hasCountUpTo8KB
setCount8KBTo32KB:
setHasCount8KBTo32KB:
hasCount8KBTo32KB
setCount32KBTo128KB:
setHasCount32KBTo128KB:
hasCount32KBTo128KB
setCount128KBTo512KB:
setHasCount128KBTo512KB:
hasCount128KBTo512KB
setCount512KBTo2MB:
setHasCount512KBTo2MB:
hasCount512KBTo2MB
setCountOver2MB:
setHasCountOver2MB:
hasCountOver2MB
Ti,N,V_category
TI,N,V_countUpTo8KB
TI,N,V_count8KBTo32KB
TI,N,V_count32KBTo128KB
TI,N,V_count128KBTo512KB
TI,N,V_count512KBTo2MB
TI,N,V_countOver2MB
setStreet:
setCity:
setPostalCode:
setCountry:
initWithItemType:itemRef:
itemRef
_itemRef
_itemType
T@"NSSet",R,N,V_itemType
T@"NSArray",R,N,V_itemRef
initWithType:extraction:context:contextRangeOfInterest:label:hasPhoneLabel:match:extractionInfo:isUnlikelyPhone:
detectionWithType:text:matchRange:matchString:label:hasPhoneLabel:extractionInfo:isUnlikelyPhone:
hasPhoneLabel
match
_hasPhoneLabel
_type
_extraction
_contextRangeOfInterest
_match
TI,R,N,V_type
T@"NSString",R,N,V_extraction
T@"NSString",R,N,V_context
T{_NSRange=QQ},R,N,V_contextRangeOfInterest
TB,R,N,V_hasPhoneLabel
T{_NSRange=QQ},R,N,V_match
T@"SGExtractionInfo",R,N,V_extractionInfo
TB,R,N,V_isUnlikelyPhone
_optimizeAndAddCNContactIdentifier:
_pas_proxyArrayUsingObjectAtIndexBlock:andCountBlock:
_pas_proxyArrayByAppendingArray:
_optimizedBuffer
_unoptimizedIdentifiers
isEqualToLabeledValue:
contactIsSignificant:usingCoreRecents:
mayHaveSentMessageToEmail:
mayHaveSentMessageToHandle:
recentsContainSomeOfEmails:phoneNumbers:instantMessageAddresses:
_cachedVIPEmailAddresses
contactIsSignificantOrSignificanceIsDisabled:usingCoreRecents:
onlyShowSignificantPseudoContacts
contactIsSignificant:
realtimeContactIsSignificant:
setDomains:
predicateForKey:inCollection:
predicateSatisfyingAllSubpredicates:
predicateSatisfyingAnySubpredicate:
setSearchPredicate:
performRecentsSearch:queue:completion:
normalizeHandleForRecipientFilterAndRemoveFromDetailsCache:
removeStringFromNoContactsCache:
realtimeContactIsSignificantOrSignificanceIsDisabled:
anyEmailAddressIsSignificant:
setCRLookupForTesting:
registerSentTextMessage:
setCachedVIPEmailAddresses:
initWithLocation:time:title:core:bi_lstm_0_h_out:bi_lstm_0_c_out:bi_lstm_0_h_out_rev:bi_lstm_0_c_out_rev:
setLocation:
time
setTime:
setCore:
bi_lstm_0_h_out
setBi_lstm_0_h_out:
bi_lstm_0_c_out
setBi_lstm_0_c_out:
bi_lstm_0_h_out_rev
setBi_lstm_0_h_out_rev:
bi_lstm_0_c_out_rev
setBi_lstm_0_c_out_rev:
_location
_time
_core
_bi_lstm_0_h_out
_bi_lstm_0_c_out
_bi_lstm_0_h_out_rev
_bi_lstm_0_c_out_rev
T@"MLMultiArray",&,N,V_location
T@"MLMultiArray",&,N,V_time
T@"MLMultiArray",&,N,V_title
T@"MLMultiArray",&,N,V_core
T@"MLMultiArray",&,N,V_bi_lstm_0_h_out
T@"MLMultiArray",&,N,V_bi_lstm_0_c_out
T@"MLMultiArray",&,N,V_bi_lstm_0_h_out_rev
T@"MLMultiArray",&,N,V_bi_lstm_0_c_out_rev
initWithTarget:maxDistance:
setTargetString:
setMaxDistance:
targetString
maxDistance
transformArray:withTargetIndex:maximumDistance:
debugStoreContext
isEqualToTokenDistanceMappingTransformer:
currentThread
threadDictionary
debugAppendText:
fileHandleForWritingAtPath:
seekToEndOfFile
writeData:
closeFile
withTarget:maxDistance:
debugSetContext:
_targetString
_maxDistance
T@"NSString",&,N,V_targetString
TQ,N,V_maxDistance
isEqualToJournalEntry:
operation
initWithOperation:eventBatch:
initWithOperation:contact:
initWithOperation:
eventBatch
_operation
_event
_eventBatch
_contact
_reminder
TQ,R,N,V_operation
T@"SGStorageEvent",R,N,V_event
T@"NSArray",R,N,V_eventBatch
T@"SGStorageContact",R,N,V_contact
T@"SGStorageReminder",R,N,V_reminder
setPredictedMissingElementScore:
setHasPredictedMissingElementScore:
hasPredictedMissingElementScore
setFoundMatchingElement:
setHasFoundMatchingElement:
hasFoundMatchingElement
predictedMissingElementScore
foundMatchingElement
_predictedMissingElementScore
_foundMatchingElement
Tf,N,V_predictedMissingElementScore
TB,N,V_foundMatchingElement
mailItemIsSPAM:
mailItemIsInTrash:
addOperationWithBlock:
defaultReceiver
donateSearchableItems:bundleIdentifier:error:
canStoreEventsForAccountType:
duplicateKeyForMessage:fromSource:
_canBannerUseStoredDissection:options:
initRealtime:wasNoBudgetItem:
startHarvest
dissectAndStoreEntity:inContext:destinationStore:
markMessagesLost:
_storeAndGeocodeEntity:spotlightBundleIdentifier:spotlightUniqueIdentifier:spotlightDomainIdentifier:store:afterCallbackQueue:finalize:
endHarvest
initWithReminder:notes:
deliveryForEntity:store:
contactsSuggested:withElapsedTime:inApp:
eventsSuggested:withElapsedTime:inApp:
hypotheticalSuggestionImpressionsIncludingActedOn:
hypotheticalContactSuggestionImpressionsIncludingInsignificant:
onlyShowSignificantNLEvents
naturalLanguageEventAttributes
suggestionImpressionsViaBanner:
eventSuggestionImpressionsViaBanner:
contactSuggestionImpressionsViaBanner:
suggestionImpressionsViaBannerSuppressed:
recordBannerShownWithContacts:events:inApp:
filterRealtimeReminders:
encodedStringForFullName:
setValueIfNotPresent:forKey:fromRecordId:
suggestionsFromMessage:options:fullCompletionHandler:
initWithMappings:
initWithHelperMappingType:andLanguage:
setMappings:
mappingsForType:andLanguage:
mappings
isEqualToStringMappingTransformer:
withMappings:
withHelperMappingType:andLanguage:
_mappings
T@"NSDictionary",&,V_mappings
initWithProvider:boatName:boatNumber:tripDuration:departureBoatTerminalLocation:arrivalBoatTerminalLocation:
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:reservedSeat:boatTrip:
schemaFromBoatReservation:
boatTrip
boatName
boatNumber
departureBoatTerminalLocation
arrivalBoatTerminalLocation
_lastWindowStartTime
_currentAllowedMessageCount
_eventClassifierModel
initWithoutSharedInstance
loadEventClassifierModel
detectMessageEventsML
allowMessageEventDissector
isMessageOfTypeEvent:
isDissectorProcessingWithinRateLimit
logFailedEventExtractionForMessage:failureCode:
featureEnabled
shouldProcessTextMessage:entity:
eventExtractionMobileAssetsPath
eventsFromMessage:eventExtractionAssetsPath:
addEnrichmentForEvents:toEntity:message:context:timingProcessingInMs:
schemaOrgAndMissingEntitiesForExtractedEvent:
logMLMessageEventExtractionForSchema:message:category:timingProcessingInMs:
enrichmentsFromSchema:forMessage:forEntity:category:
logMLMessageEventExtractionInteractions:context:
logFailedEventExtractionForMessage:category:missingEntities:timingProcessingInMs:
initWithParametersDict:
JSONResult
performTask:forPluginID:completionHandler:
getFlightReferencesAndReservationId:
messageEventCategoryForCategoryString:
getFlightInformationForFlightEventData:
fallbackSchemaForGenericEventWithTitle:startDate:endDate:
enrichmentsFromSchemas:inTextMessage:parentEntity:
floatingRangeWithLocalStartDate:endDate:
extractedEvent
eventClassifierMobileAssetsPath
initWithMLModel:error:
predictedLabelHypothesesForString:maximumCount:
loadEventClassifierModelFromPath:
schemaOrgAndMissingEntitiesForMessage:withMLModelParameters:
_dissectorConfig
commitExtractionInfo:
contactDetailPrimaryKeyForDuplicateKey:
loadAllContactDetailsFromTableForRecordId:
loadExtractionInfoForPrimaryKey:
contactDetail:label:type:recordId:duplicateKey:sourceKey:context:extractionInfo:
commitContactDetail:
contactDetailEntityIdForDuplicateKey:
loadAllContactDetailsFromTableForRecordId:type:
typeCheckingSink:
_makeEmptyBox
_handler
_box
_handlerLock
_boxLock
_pendingMerge
_outstanding
_cond
_transaction
autoreleasingSerialQueueWithLabel:
initWithGuardedData:serialQueue:
_components
T@"SGPostalAddressComponents",R,N,V_components
bundleIdentifiers
displayname
preferredUniqueIdentifier
_username
_userIdentifier
_bundleIdentifier
_service
_teamIdentifier
_uniqueIdentifiers
_preferredUniqueIdentifier
T@"NSString",R,N,V_username
T@"NSString",R,N,V_userIdentifier
T@"NSString",R,N,V_bundleIdentifier
T@"NSString",R,N,V_service
T@"NSString",R,N,V_teamIdentifier
T@"NSArray",R,N,V_uniqueIdentifiers
T@"NSString",R,N,V_preferredUniqueIdentifier
loadMappingsForType:andLanguage:
_writeOneEntityToDb:
pendingGeocode
_writeEnrichmentToDb:
_writeEventEntitiesToJournal:
_emitChangeNotifications:
_hashAttachedPseudoContacts:
_writeReminderEntitiesToJournal:
_deleteOldInteractionContactDetails:currentIdentifiers:
_writeContactDetails:
_prunePseudoContactGeneratingEmails:
_emitChangeNotificationForEnrichment:
addSpotlightReferenceToEmailRecordId:withBundleIdentifier:uniqueIdentifier:domainIdentifier:
hasInstantMessageAddress
instantMessageAddress
isEqualToIdentityKey:
_computePseudoContactContentHash:contactDetails:
setContentHash:
eventHash:
pseudoReminderKey
reminderHash:
_addIndexingTagsTo:
containsEntityExtraction:
_addTimeRange:toEntityWriteDictionary:
_addLocations:toEntityWriteDictionary:
_writeEventEntityToJournal:
_addIndexingTagsToParent:
messagesAdded:
messagesLost:
sg_serialized
currentOsBuild
_writeMessageEntityToSnippetsDb:
_writeMessageEntityToDb:
commitWithStore:
commitEvent:
contentHash
_writeEntityParentageFor:entityId:
deleteAllCNContactMatchesForEntityID:
_writeEnrichmentToSnippetsDb:
_writeFTSTermsForEnrichment:entityId:
_contentWriteEnrichmentToDb:
_journalEntryFromEntity:
addEntries:
_journalEntryFromReminderEntity:
sharedDefaults
identityGroupSize:
bindNamedParam:toNSIndexSet:
deleteSerializedContactsForIdSet:
deleteAllCNContactMatchesForIdSet:
filterOutRejectedDetailsFromContact:
setValueIfNotPresentWithDict:fromRecordId:
_loadIdentityBlobs
_labelIdentityBlobs:
_pas_mappedSetWithTransform:
_writeLabeledBlobs:deletedMasterEntityIds:
writeEntity:withSpotlightReferenceForBundleIdentifier:uniqueIdentifier:domainIdentifier:
_dumpTable:columns:limitTo:
entityWantsFullDownload:
markEntityAsDupeByRecordId:
_writeContactEntityToJournal:
initWithProvider:trainName:trainNumber:tripDuration:departureStationLocation:departurePlatform:arrivalStationLocation:arrivalPlatform:
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:reservedSeat:trainTrip:
schemaFromTrainReservation:
trainTrip
trainName
trainNumber
departureStationLocation
arrivalStationLocation
initWithType:start:end:
initWithType:range:
sliceWithType:start:end:
sliceWithType:range:
_start
_end
T{?=SS},R,N,V_type
TQ,R,N,V_start
TQ,R,N,V_end
T{_NSRange=QQ},R,N
miniSignatureRange:
hmmPlausibleSignatureRange:
hmmSignatureRange:
findSignaturePrefixesInMessage:withSignaturePrefixes:
findValediction:
findValedictionCommencedSignatureRanges:
indexesInRange:options:passingTest:
authorFirstname:
hmmSignatureRangeWithContent:detectedData:quotedRegions:authorName:
sortUsingSelector:
trailingSenderNameLineRange:
authorName:
initWithMailMessage:
seekToEnd
backwardWhile:
backwardToString:consume:
backward
rangeOfSenderName:inRange:restrictLength:forMessage:
rangeOfSenderNameComponents:withFullname:inSubstring:
detectedDataSignatureRange
signatureRange:
shouldIgnoreSignature:signatureRange:isInhuman:
findSignaturePrefix:
formattedName
setPos:
_paragraphWithContent:range:exceedsLineLimit:orCharacterLimit:
forwardWhile:
findRejectSig:
singleLineSignatureLeadingCharacterSet
symbolCharacterSet
punctuationCharacterSet
initIgnoringDataDetectors
_ignoreDataDetectorsForTesting
firstIndex
lastIndex
enumerateTokensInString:withRange:block:
isUnifiedWithContactWithIdentifier:
keysToFetch
initWithContact:
isSameAsOrUnifiedWithContact:
_meContact
_givenName
_familyName
_formattedName
T@"NSString",R,N,V_givenName
T@"NSString",R,N,V_familyName
T@"NSString",R,N,V_formattedName
T@"NSSet",R,N,V_emailAddresses
T@"NSSet",R,N,V_phoneNumbers
T@"NSSet",R,N,V_postalAddresses
T@"NSSet",R,N,V_socialProfileIdentifiers
addStats:
statsCount
clearStats
statsAtIndex:
statsType
setTotalNumberOfEmailsProcessedForAttachmentDetectionRoundedToClosestMultipleOf20:
setHasTotalNumberOfEmailsProcessedForAttachmentDetectionRoundedToClosestMultipleOf20:
hasTotalNumberOfEmailsProcessedForAttachmentDetectionRoundedToClosestMultipleOf20
setTotalNumberOfEmailsProcessedForRecipientDetectionRoundedToClosestMultipleOf20:
setHasTotalNumberOfEmailsProcessedForRecipientDetectionRoundedToClosestMultipleOf20:
hasTotalNumberOfEmailsProcessedForRecipientDetectionRoundedToClosestMultipleOf20
setTotalNumberOfEmailsProcessedForFollowUpDetectionRoundedToClosestMultipleOf20:
setHasTotalNumberOfEmailsProcessedForFollowUpDetectionRoundedToClosestMultipleOf20:
hasTotalNumberOfEmailsProcessedForFollowUpDetectionRoundedToClosestMultipleOf20
setNumberOfPredictedAttachmentOnLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20:
setHasNumberOfPredictedAttachmentOnLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20:
hasNumberOfPredictedAttachmentOnLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
setNumberOfLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20:
setHasNumberOfLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20:
hasNumberOfLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
setNumberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20:
setHasNumberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20:
hasNumberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
setNumberOfLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20:
setHasNumberOfLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20:
hasNumberOfLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
stats
setStats:
totalNumberOfEmailsProcessedForAttachmentDetectionRoundedToClosestMultipleOf20
totalNumberOfEmailsProcessedForRecipientDetectionRoundedToClosestMultipleOf20
totalNumberOfEmailsProcessedForFollowUpDetectionRoundedToClosestMultipleOf20
numberOfPredictedAttachmentOnLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
numberOfLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
numberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
numberOfLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
_numberOfLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
_numberOfLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
_numberOfPredictedAttachmentOnLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
_numberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
_stats
_totalNumberOfEmailsProcessedForAttachmentDetectionRoundedToClosestMultipleOf20
_totalNumberOfEmailsProcessedForFollowUpDetectionRoundedToClosestMultipleOf20
_totalNumberOfEmailsProcessedForRecipientDetectionRoundedToClosestMultipleOf20
T@"NSMutableArray",&,N,V_stats
TI,N,V_totalNumberOfEmailsProcessedForAttachmentDetectionRoundedToClosestMultipleOf20
TI,N,V_totalNumberOfEmailsProcessedForRecipientDetectionRoundedToClosestMultipleOf20
TI,N,V_totalNumberOfEmailsProcessedForFollowUpDetectionRoundedToClosestMultipleOf20
TI,N,V_numberOfPredictedAttachmentOnLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
TI,N,V_numberOfLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
TI,N,V_numberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
TI,N,V_numberOfLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
setLostMessageOverflow:
dbHandleForTesting
snippetsDbHandleForTesting
historyForTesting
setParentMessagesLimitForTesting:
lastSeenTimestampForKey:
setMalformedEventWhenRangeForTesting
clearMigrationCompletedForPaths
_shouldSampleMessage
initWithGloballyUniqueId:
isEqualToPseudoEventKey:
keyForEventKitQuery
alternativeKeysForEventKitQuery
_serialized
_domain
T@"NSString",R,N,V_domain
writeSerializedContact:
_popQueuedSerializedContactId
storageContactByMasterEntityId:withSnippets:
loadContactForStorageContact:usingSerializedContactCache:
containsSuggestions
writeSerializedContactPlaceholder:
_processBatchOfSerializedContactJobs
allContactsMasterEntityIdsLimitedTo:
serializedEntityIds
_trimSerializedContacts
setSerializedContactsLimit:
writeSerializedContactAndUpdateEntityIDSet:
loadSerializedContactForId:
loadAllSerializedContacts
isFileURL
fileSystemRepresentation
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
localizedLowercaseString
triggerOptionalTokens
tokensMatchedInContent:content:
confirmationOptionalTokens
titlePrefixTokens
excludedContent:
enrichedTaggedCharacterRangesContainsProfanity:
firstRangeInIndexSet:
validActionVerbIndexRange:enrichedTaggedCharacterRanges:
validObjectCoreIndexRange:enrichedTaggedCharacterRanges:
titlePrependForActionVerbIndexRange:enrichedTaggedCharacterRanges:language:content:
localizedCapitalizedString
shouldAddTitlePrefixForContent:
frenchPrependForEnrichedTaggedCharacterRanges:actionVerbIndexRange:
_labelTokenIndexesForOutputName:label:
dataDetectorMatchesForTokenIndexes:dataDetectorMatches:allowDatesInPast:allowTimeOffset:
posTaggerNouns
excludeList
setMessage:
setEntity:
setPlainTextDetectedData:
_plainTextDetectedData
_extractedReminderDuplicateKey
T@"SGMessage",&,N,V_message
T@"SGPipelineEntity",&,N,V_entity
T@"NSArray",&,N,V_plainTextDetectedData
T@"SGDuplicateKey",&,N,V_extractedReminderDuplicateKey
matchesString:
enumerateMatchesInUtf8:fromString:ngroups:block:
_tofuRegions:utf8:isAOSPMail:
_xWrote:utf8:
_confirmationOptional
_triggerOptional
_actionVerbOptional
_messagesBannerLimit
_reminderEnrichments
_reminderInputMapping
_reminderOutputMapping
initWithDouble:
confirmationOptional
actionVerbOptional
ftsTokenize:
middleName
initWithCNContact:
prefilterNameMatchTerms
weakNamePatterns
strongNamePatterns
emailTags
phoneTags
socialProfileTags
addressTags
interactionContactIdentifier
isMe
_nicks
ftsPrefix:
allEntitiesOfType:limitedTo:onlyMLExtractions:
sg_initWithNamedEmailAddress:
_loadMessageByKey:
loadEventForRecordId:
loadStorageContactByRecordId:error:
loadContactDetailsWithWhereClause:onPrep:type:dedupeAgainst:recordId:
eventFromSqlResult:
loadEventForDuplicateKey:
filterOutUndisplayableEntities:
loadAllContactDetailsWithWhereClause:onPrep:dedupeAgainst:
allEntitiesOfType:limitedTo:
loadDuplicateKeyByRecordId:
loadSourceKeyByRecordId:
loadStorageContactByRecordId:
loadContactDetailsForRecordId:type:
loadEventByKeyForOldCodePathTesting:
loadReminderByRecordId:
loadReminderByKeyOld:
loadReminderByRecordIdOld:
loadEventsWithInteractionIdentifiers:fromBundleIdentifier:
dateOfBirthComponentsWithError:
_healthStore
initWithML:withMLQR:andHealthStore:
signatureRules
nameDetectorRules
detailTypeFromPrefix:detectedLabelPointer:
setRegexBelongsToSender:
isTrivial
setRegexDoesNotBelongToSender:
detailTypeFromPrefix:
regexBelongsToSender
metricsContactDetailFoundIn
getLineContaining:inText:
_extractEmailishTokenFromMailHeader:
_makeAlnum:
_makeSimplifiedListIdEmail:
lineRangeForRange:
filterDangerousSigPhoneDetections:message:
filterDangerousSigAddressDetections:
filterDangerousSigEmailDetections:message:
getResponsesForBirthdayExtractionFromMessage:withLanguage:
attributes
reMatched:
birthdayCongratsTextMessage:andLanguage:andHealthStore:
logBirthdayExtractionMetricForPerson:forDate:isFromCongratulation:withModelVersion:didRegexTrigger:didResponseKitTrigger:
sharedManager
responsesForMessage:maximumResponses:forContext:withLanguage:options:
initWithMessage:candidateName:
isPositiveExample
isNegativeExample
selfIdentificationMessageCount
selfIdDetectionWithTextMessage:inConversation:withSupervision:
processTextMessageConversation:threadLength:
_logSelfIDForMessage:detection:modelType:modelVersion:
_addAuthorContactForMessage:entity:
_removeUnwantedContactDetails:entity:
useMLModelForContactSharing
contactSharingNegativeSamplingRate
handleTextMessageContactSharingWithNegativeSample:andLanguage:
initWithMessage:ddMatch:isUnlikelyPhone:
detectionFromSignatureDDMatch:message:detectedLabelRange:lastClaimedLabelRange:isUnlikelyPhone:
detectionFromBodyDDMatch:message:withSupervisionToFill:isUnlikelyPhone:
detectionFromMessage:ddMatch:matchedContext:withSupervision:inConversation:entityLanguage:
isThirdPerson
isFirstPerson
metricsContactDetailOwner
regexDoesNotBelongToSender
handleTextMessageContactSharing:andMatch:andContext:andLanguage:withSupervision:
handleTextMessageSelfIdentification:entity:withConversationHistory:
handleTextMessageBirthdayCongratulation:entity:withConversationHistory:
filterDangerousSigDetections:message:
valueWithPointer:
dissectorWithMockedMLTrainingForTests
isAddressContext:
isPhoneContext:
isMaybeNameContext:
isNameRequest:
isBirthdayContext:
currentPatterns
clearConversationCache
setSelfIdentificationMessageCount:
_mlQR
_contactsHelper
_filterWithAddressBook
_unlikelyPhoneSamplingRate
_hmmTrustedLanguages
_ddTrustedLanguages
_coreNLPTrustedLanguages
_selfIdentificationMessageCount
TQ,N,V_selfIdentificationMessageCount
initWithBundleId:personHandle:
classifierWithEspressoModelFile:
featureDict
_featureDict
T@"NSDictionary",R,N,V_featureDict
headerPattern
messageSeparatorPattern
richness
pushValue:toDistKeyWithSuffix:
incrementKeyWithDomain:subdomain:suffix:action:
_pushValuesForContact:usingDomain:subdomain:type:action:extraSignature:
performedAction:forApp:onEvent:
tracked
_appNameForApp:
app:performedAction:onEvents:withResult:elapsedTime:
app:performedAction:onContacts:withResult:elapsedTime:
performedAction:forApp:onContact:
performedAction:onEventInCalendar:
performedAction:onDetail:forContact:
performedAction:onRecordForContact:
eventWithRecordId:origin:uniqueKey:opaqueKey:title:notes:start:startTimeZone:end:endTimeZone:isAllDay:creationDate:lastModifiedDate:locations:tags:URL:
realtimeEventForNewEvent:
eventsFromEntity:
contactsFromEntity:
assetVersion:
incrementKeyWithDomain:subdomain:suffix:
aggregateKeyForKeySuffix:
messagesPruned:
messagesFound:
messagesUndisplayablyLost:
messagesFoundAfterUndisplayablyLost:
incrementKeyWithDomain:subdomain:suffix:action:by:
incrementKeyWithDomain:subdomain:suffix:by:
incrementKeyWithDomain:suffix:
harvestDrainedNumberOfMails:
harvestedMessageInQueueSince:
databaseCorruptionDetectedViaIntegrityCheck
databaseCorruptionDetectedViaCorruptionMarker
contactsFoundOnDeviceEnabled:
eventsFoundOnDeviceEnabled:
annotationTypeFromString:
describeAnnotationType:
isEqualToTaggedCharacterRange:
mergeTagsFromTaggedCharacterRanges:withTaggedCharacterRanges:
biosBasedAnnotation:usingTags:forSection:
predicateWithFormat:
filteredSetUsingPredicate:
state:index:section:
flattenTaggedCharacterRanges:usingWhitelist:replaceOOVWithToken:
dictRepresentation
_annotationType
TQ,R,N,V_annotationType
T@"NSArray",R,N,V_tags
experimentIdentifiersWithNamespaceName:
rolloutIdentifiersWithNamespaceName:
_uncompressModelAtPath:toPath:
_modelDirectoryPathCreateIfNeeded:
_unarchiveFrom:to:
dataWithContentsOfURL:options:error:
pathComponents
stringByDeletingPathExtension
_modelNameForCurrentEnrollment
_modelPathForExperimentId:treatmentId:deploymentId:createIfNeeded:
_modelNameForExperimentId:treatmentId:deploymentId:
modelPathForExperimentId:treatmentId:deploymentId:
_triClient
_serialQueue
_namespaceName
_rolloutIdentifiers
initWithValue:label:type:recordId:duplicateKey:sourceKey:context:extractionInfo:
isEqualToContactDetail:
_normalizedValue
TQ,R,N,V_type
T@"NSString",R,N,V_sourceKey
T@"SGDuplicateKey",R,N,V_duplicateKey
getMaxEntityId
writeCNContactMatchForContact:withMatches:andMaxEntityId:
prematchedContactIdentifiers
getInt64AsNSNumberForColumnName:table:
isEqualToNumber:
_popBatchOfCNContactIds
suggestContactsWithContact:withSnippets:filterConfirmRejectDetails:limitTo:
filterCandidates:withDetailSubsetOfCNContact:
syncContactsWithStore:
deleteAllCNContactMatches
_clearPendingJobs
_enqueueBatchOfCNContactIds:
setHasFullSync
needsFullSync
_fullSyncContactsWithStore:
_deltaSyncContactsWithChangeHistory:
deleteCNContactMatchForContactId:
cnContactIdentifiersForContact:
firstName
objectsPassingTest:
lastName
cnContactIdentifiersSpotlightQueryStringForContact:
writeCNContactMatchAndUpdateSetForContact:withMatches:andMaxEntityId:
loadCNContactMatchesForContact:andGetMaxEntityId:
loadAllPrecomputedContactMatches
initRefreshSuggestionsContactDropBox
refreshSuggestionsContact:
significantWork
initWithName:
done:
applyAdjustmentIfSane:
_cpuStart
_cpuEnd
_durationStart
_signpostId
_significantWork
_cpu
_duration
Td,R,N,V_cpu
Td,R,N,V_duration
TB,R,N,V_significantWork
_documentSourceForBundleId:
harvestTimes
harvestTimerForName:
setComponentName:
setSignificantWork:
overridePET2InstanceForTesting:
_guardedData
_harvestCostMetrics
setSgmiFeatureStore:
_sgmiFeatureStore
_tokenizerModule
_tokenizerInstance
suggestionsDirectoryFile:creatingSuggestionsDirectoryIfNeeded:
defaultPathCreatingSuggestionsDirectoryIfNeeded:
defaultPath
pathHasFutureDbSchema:
defaultSnippetPath
initWithEntityDbPath:snippetDbPath:isEphemeral:sharedLock:executeJournals:noMigrate:
addCalendarObserver:
spotlightContactsAdapter
addContactsObserver:
sgToCNContactsCacheUpdateAdapter
addRemindersObserver:
freezeObservers
storeWithDefaultLocationAndExecuteJournals:
sqlStoreWithEntityDbPath:snippetDbPath:isEphemeral:executeJournals:
_recreateCorruptDatabase:sharedLock:withProtection:
_initializeDatabaseNolock:withProtection:sharedLock:newDatabaseCreated:
initializeDatabase:withProtection:sharedLock:newDatabaseCreated:
initForRawDatabaseAccessWithEntityPath:snippetsPath:error:
journalWithName:
tryExecuteSnippetsJournal
journalForInMemoryDb
corruptionMarkerPresent
_removeCorruptionMarker
closeDatabases
migrateDatabases
migrationNeeded
addPathToFutureDbSchemas:
registerJournalUnlockHandler
_runInitMigrationTasks:noMigrate:
storeInMemory
stringByDeletingLastPathComponent
storeWithFilename:
addDeallocNotification:
journalNameForDbPath:
deleteAllJournaledQueries
corruptionMarkerPathForPath:
contactIsDisplayable:
_enumerateContactsForMasterEntityIds:withSnippets:filterConfirmRejectDetails:usingBlock:
_contactForMasterEntityId:withSnippets:filterConfirmRejectDetails:
_enumerateContactsForMasterEntityIds:withSnippets:usingBlock:
masterEntityIDsForMasterEntityQuery:bindings:
suggestContactsByMasterEntityQuery:withSnippets:limit:bindings:
enumerateContactsByMasterEntityQuery:withSnippets:limit:bindings:usingBlock:
likePrefix:
suggestContactsByMasterEntityQuery:limit:bindings:
entityTypeFromIdentityKeyType:
bindCheckContactRow:isMe:
_contactIdsForContactDetailMatches:detailContactIds:socialProfileContactIds:
_contactIdsForContactNameMatches:strongNameIds:weakNameIds:
_contactIdForInteractionContactIdentifierMatch:
filteredArrayUsingPredicate:
compareContact:cnContact:newDetails:matchedDetails:matchPreference:
areKeysAvailable:
_scoreSGContact:bySimilarityToContact:cnContactFullname:
sortedArrayWithOptions:usingComparator:
_rankSGContacts:bySimilarityToContact:
containsDetailSuggestions
initWithContact:matchTokens:matchInfo:
mapAndFilter:f:
tokensMatchedDetailTypeForContact:contactEntityId:detailEntityId:matchinfoData:tokens:
matchinfoDataWithEntityId:detailEntityId:matchinfoData:
getNSDataForColumn:
_processContactMatchWithContacts:matches:limit:masterEntityId:detailEntityId:contactEntityId:matchinfoData:tokens:requireName:
globPrefix:
_matchableUTF8TokenRangesInMatchExpression:
sqliteDatabaseWithFilename:contentProtection:errorHandler:error:
_queryForAllContactsWithLimit
enumerateAllContactsWithSnippets:limitTo:usingBlock:
_isStringInNoContactsCache:
suggestContactMatchesByContactDetailTag:matchType:
significanceOrigin
initWithContact:matchingRecordId:matchType:matchTokens:
_addStringToNoContactsCache:
suggestContactMatchesByType:searchString:isMaybe:onlySignificant:
suggestContactMatchesBySocialProfile:isMaybe:onlySignificant:
duplicateKeyForPseudoContactWithIdentity:parentKey:
suggestContactByKey:
duplicateKeyForCuratedEventWithExternalID:
isContactDetail
contactMatchedRecordTypeFromIdentityKeyType:
contactMatchedRecordTypeFromEntityType:
setValue:forKey:fromRecordId:
eventIsCancelled:
_fieldValuesClassWhitelist
suggestEventsStartingAt:endingAt:limitTo:additionalWhereClause:options:onPrep:
toFloatingTime:
_filterOutOlderVersionsOfPseudoEvents:
_filterOutCancelledEvents:
_filterOutAllButAcceptedWithUpdatedFields:
rejectStoredEvent:error:
confirmStoredEvent:error:
isHarvested
confirmFieldValues:forEntity:
confirm:orRejectContactByRecordID:error:
confirmStoredReminder:error:
rejectStoredReminder:error:
reminderAlarmTriggeredForStorageReminder:error:
nonnullNSStringForColumn:
_hashWithDuplicateKeysMatchingTags:
escapeLike:
prepareSqlStoreInMemoryByClearingExistingStore:
sqlStoreWithEntityDbPath:snippetDbPath:isEphemeral:sharedLock:executeJournals:
sqlStoreWithEntityDbPathNoMigrate:snippetDbPath:isEphemeral:executeJournals:
releaseInstanceAndWaitForDealloc:
contactContainsEphemeralId:
initForDbStatsOnlyWithError:
clearNoContactsCache
parentKeysForDuplicateKey:
_contactsForMasterEntityIds:withSnippets:
suggestContactsWithPrefix:limitTo:
historyHasContact:
suggestContactByIdentityKey:parentKey:
suggestContactMatchesByContactDetailTag:
contactIdsMergedWithMasterEntityId:
suggestEventsStartingAt:endingAt:limitTo:
suggestEventsStartingAt:endingAt:prefix:limitTo:
rejectFieldValuesForRecordId:
confirmedFieldValuesForEntity:
confirmedFieldValuesForEvent:
truncateContactDetailTable
dumpTables:columns:
waitForMigrations
_sharedWriteLock
_snippetDb
_snippetsJournal
_identityStoreDirty
_entityMigrations
_snippetsMigrations
_entityVersion
_snippetsVersion
_entityMigrationRequiresMergeBlobUpdate
_lostMessageOverflow
_deallocNotifications
_isClosed
_journal
_spotlightContactsAdapter
_sgToCNContactsCacheUpdateAdapter
_parentMessagesLimit
_serializedContactsLimit
_recentlyDeletedEmailKeys
_spotlightReindexCount
_spotlightReindexQueue
_prematchedContactIdentifiers
_precomputationQueue
_messageRecipients
_crLookup
_snippetDbPath
_lockStateNotificationRegistrationToken
_executeJournals
_otherDetailsWithNoContact
_cnToSGContactsCachePendingUpdateRequests
_enrichmentWritebackAdapter
_isEphemeral
_waitForMigrations
_kvCacheManager
TB,R,N,V_isEphemeral
TB,R,N,V_waitForMigrations
T@"SGSpotlightContactsAdapter",R,V_spotlightContactsAdapter
T@"SGSGtoCNContactsCacheUpdateAdapter",R,V_sgToCNContactsCacheUpdateAdapter
T@"SGKeyValueCacheManager",R,V_kvCacheManager
initWithOutputItems:sourceMetadata:exeptionTemplates:jsMessageLogs:
initWithOutputItems:exeptionTemplates:jsMessageLogs:
outputItems
sourceMetadata
exceptionTemplates
jsMessageLogs
_outputItems
_sourceMetadata
_exceptionTemplates
_jsMessageLogs
T@"NSArray",R,N,V_outputItems
T@"NSDictionary",R,N,V_sourceMetadata
T@"NSArray",R,N,V_exceptionTemplates
T@"NSDictionary",R,N,V_jsMessageLogs
interfaceWithProtocol:
initWithMachServiceName:options:
setRemoteObjectInterface:
invalidate
synchronousRemoteObjectProxyWithErrorHandler:
addParams:toParameterizedString:allowAlternatives:
setISOCountryCode:
stringFromPostalAddress:style:
entityForOutputItem:withSiblings:parentEntity:outputExceptions:outputInfos:interaction:
addParams:toParameterizedString:
addressDictionaryToString:
geocodingModeAddressOnly
geocodingModePOIOnly
geocodingModeAddressThenPOI
geocodingModeAddressWithCanonicalSearch
ekEventAvailabilityState:
poiFilters:
indexOfObjectPassingTest:
setNanosecond:
defaultDuration
reservationContainerReference:
sg_serialize
getAndRemoveItemReferencesFromSchemas:
reservationItemReferences:
eventActivitiesForReservationWithReference:inParentEntity:interaction:
eventActivitiesForReservationWithSchema:enrichment:
packedJSMailMessageFromMailMessage:context:
packedJSURLFromURL:title:payload:creationTimestamp:
packedJSSchemaFromSchemaOrgItems:
outputFromPackedJSSchema:
duplicateKeyForSchemaOrg
exceedsMaxHTMLContentLength:
isCandidateForExtraction
outputFromPackedJSMailMessage:
_addEnrichmentsToEntityForOutput:entity:startTime:backPressureHazard:
packedJSTextMessageFromTextMessage:
outputFromPackedJSTextMessage:
packedJSInteractionFromInteraction:bundleIdentifier:creationTimestamp:
_addEnrichmentsToEntityForOutput:interaction:entity:startTime:backPressureHazard:
addEnrichmentsToEntityForOutputItems:exceptions:jsMessageLogs:interaction:entity:startTime:backPressureHazard:
fromExtractedDomain
fieldReverseMapped:
addInteractionTagsToEnrichment:inEntity:interaction:
packedJSMailMessageFromMailMessage:
jsDictForResolveCandidates:forCategory:label:rawIndexSet:taggedCharacterRanges:
_ensureHtmlIsString:
jsonLdOutputFromPackedJSEntity:
packedJSURLFromURL:title:payload:
foundInAppsStringForCheckInAction:
setUserInfo:
setRequiredUserInfoKeys:
setWebpageURL:
initWithTeamIdentifier:type:userActivity:validStartDate:validEndDate:
reservations
itemReference
actions
validDuration
bundleRecordWithBundleIdentifier:allowPlaceholder:error:
dissectInteraction:entity:context:
entityForOutputItem:parentEntity:outputExceptions:outputInfos:
entityForOutputItem:parentEntity:outputExceptions:outputInfos:interaction:
reverseMapMailMessage:withPreprocessedHTML:forCategory:withSchemExpectation:
jsonLdOutputFromMailMessage:
jsonLdOutputFromTextMessage:
jsonLdOutputFromURL:title:payload:extractionDate:
_xpcConnection
_reverseTemplateJSNoXPC
_classifierCache
incrementalSubmodelUpdateWithSaliencyModelConfig:store:shouldContinue:finalGroundTruthDate:withSimulatedCSSearchableItemForTesting:limit:log:
earlierDate:
initWithMessagesFromDaysAgo:throughDaysAgo:limit:withBiomeData:store:useSpotlightDataForMissingBiomeData:preLoadedFeatureNames:simulatedCSSIs:
hasHashedMessageId
estimateGroundTruth
setGteSaliency:
logOrStageWithSaliency:
ingest:asSalient:
setIsCounted:
setCreationDate:
forEach:
commitToStore:updateDate:
purgeTokensToMatchCappingPolicyFromStore:
purgeOldTokensFromStore:
purgeDeletedEmailsReferencesFromStore:
findDeletedEmailAddresses:mdSearchableItemAttribute:fromDaysAgo:error:
submodelsAgesInDays
salientCount
regularCount
incrementalSubmodelUpdateWithStore:limit:log:
incrementalSubmodelUpdateWithSaliencyModelConfig:store:shouldContinue:finalGroundTruthDate:withSimulatedCSSearchableItemForTesting:limit:
feature:
ingestUnigramTokens:bigramTokens:asSalient:
submodels
_submodels
T@"NSDictionary",R,V_submodels
attributeForKey:
matchForString:
coreRange
recordMappingFromNickname:toEmailAddress:withDateOfMatch:
querySentMailsForNicknameMatchingFromDaysAgo:throughDaysAgo:limit:handler:
purgeOldNicknameMappingRecords
T@"SGSqlEntityStore",R,N,V_store
setCalendar:
pointerValue
_result:containsTypes:
_result:containsTypes:foundTypes:
_scanners
_naiveDateFormatter
_noTimeFormatter
initWithObjectsAndKeys:
initWithAttachmentDictionary:recipientConservativeDictionary:recipientDictionary:nicknameDictionary:followUpOnOutgoingMailsQuestionsDictionary:followUpOnOutgoingMailsAsksDictionary:followUpOnIncomingMailsDictionary:
componentsJoinedByString:
_defaultConfig
attachmentDetectionRegexes
attachmentLinkDetection
conservativeRecipientDetection
recipientConservativeDetectionRegexes
recipientDetectionRegexes
nicknameDetectionRegexes
followUpOnOutgoingMailsQuestionsDetectionRegexes
followUpOnOutgoingMailsAsksDetectionRegexes
followUpOnIncomingMailsDetectionRegexes
bodyAnalysisSamplingFactor
initWithAssetAttachmentDictionary:attachmentLinkDetection:recipientConservativeDictionary:recipientDictionary:nicknameDictionary:followUpOnOutgoingMailsQuestionsDictionary:followUpOnOutgoingMailsAsksDictionary:followUpOnIncomingMailsDictionary:bodyAnalysisSamplingFactor:defaultTimeIntervalToStartWarningExposition:defaultTimeIntervalForAWarning:defaultTimeIntervalToEndWarningExposition:followUpWarningsParameters:
pattern
shouldAnalyzeBody
attachmentLinkDetectionRegex
defaultTimeIntervalToEndWarningExposition
_bodyAnalysisSamplingFactor
_detectors
_attachmentLinkDetectionRegex
_followUpWarningsParameters
_defaultTimeIntervalToStartWarningExposition
_defaultTimeIntervalForAWarning
_defaultTimeIntervalToEndWarningExposition
T@"NSDictionary",R,N,V_detectors
T@"NSRegularExpression",R,N,V_attachmentLinkDetectionRegex
Tf,R,N,V_bodyAnalysisSamplingFactor
T@"NSDictionary",R,N,V_followUpWarningsParameters
Td,R,N,V_defaultTimeIntervalToStartWarningExposition
Td,R,N,V_defaultTimeIntervalForAWarning
Td,R,N,V_defaultTimeIntervalToEndWarningExposition
isEqualToPseudoReminderKey:
initWithGroupId:
setHasLocationType:
hasLocationType
locationTypeAsString:
StringAsLocationType:
hasLabel
hasAddress
setHasLatitude:
setHasLongitude:
setHasAccuracy:
hasAccuracy
setHasQuality:
hasQuality
hasHandle
hasAirportCode
Ti,N,V_locationType
T@"NSString",&,N,V_label
T@"NSString",&,N,V_address
Td,N,V_latitude
Td,N,V_longitude
Td,N,V_accuracy
T@"NSData",&,N,V_handle
T@"NSString",&,N,V_airportCode
initWithMessageId:hasHashedMessageId:simpleMailMessage:spotlightIdentifier:senderConnectionScore:biomeMessageSummary:mailClientUtil:store:preLoadedFeatureNames:
initWithMessageId:hasHashedMessageId:simpleMailMessage:senderConnectionScore:biomeMessageSummary:mailClientUtil:store:preLoadedFeatureNames:
cachedFeature:
spotlightUniqueIdentifierForBundleIdentifier:messageId:
emailDaemon
messageRepository
messageForSearchableItemIdentifier:
optionsWithRequestedRepresentationType:networkUsage:includeSuggestions:
requestRepresentationWithOptions:completionHandler:
searchableItem
relatedContentItems
dataTransferByteCount
setSize:
inferProbability
setFeatureToStringValue:forName:
isApplicationMimeType
size
isMediaMimeType
isOthersMimeType
estimateGroundTruthWithConfig:
saliencyWithScore:isSalient:gteSaliency:isCounted:
submodelsProbabilities
setPredictedSaliency:
setPredictedSaliencyScore:
missingAttachments
setEstimatedGroundTruth:
initWithMessageId:hasHashedMessageId:simpleMailMessage:spotlightIdentifier:senderConnectionScore:biomeMessageSummary:store:preLoadedFeatureNames:
setFeatureToStringArrayValue:forName:
setFeatureToNumberValue:forName:
setFeatureToNumberArrayValue:forName:
ingestFeatures:
_mailClientUtil
_biomeMessageSummary
_filledWithInformationRetrievedThroughMaild
_spotlightIdentifier
_hasHashedMessageId
T@"NSString",R,N,V_messageId
TB,R,N,V_hasHashedMessageId
decimalDigitCharacterSet
ISOCountryCode
newlineCharacterSet
uppercaseString
_intentResponseUserActivityString
_interactionBundleId
_interactionGroupId
_interactionId
_interactionTeamId
_reservationContainerReference
_reservationItemReferences
T@"NSString",&,N,V_interactionId
T@"NSString",&,N,V_interactionGroupId
T@"NSString",&,N,V_interactionBundleId
T@"NSData",&,N,V_reservationItemReferences
T@"NSData",&,N,V_reservationContainerReference
T@"NSString",&,N,V_intentResponseUserActivityString
T@"NSString",&,N,V_interactionTeamId
userKnowledgeStore
predicateForEventsWithStringValue:
predicateForEventsWithStartDateAfter:
andPredicateWithSubpredicates:
appInFocusStream
eventQueryWithPredicate:eventStreams:offset:limit:sortDescriptors:
executeQuery:error:
_knowledgeStore
fromStatus
setFromStatus:
setHasFromStatus:
hasFromStatus
fromStatusAsString:
StringAsFromStatus:
toStatus
setToStatus:
setHasToStatus:
hasToStatus
toStatusAsString:
StringAsToStatus:
_fromStatus
_toStatus
Ti,N,V_fromStatus
Ti,N,V_toStatus
startJournaling
stopJournaling
handleDeviceLockStateEvent:
_pendingGeocode
_contentHash
T@"NSData",&,N,V_contentHash
TB,N,V_pendingGeocode
initWithStartDateComponents:endDateComponents:
queryFromDaysAgo:throughDaysAgo:limit:withError:simulatedCSSIs:handler:
defaultCSSearchQueryContextFetchAttributes
setMaxCount:
nicknameCSSearchQueryContextFetchAttributes
setFilterQuery:
queryFromDaysAgo:throughDaysAgo:limit:withError:handler:
itemWithUniqueIdentifier:error:
queryEmailsFromDaysAgo:throughDaysAgo:fetchAttributes:filterQuery:queryString:bundleIds:spotlightTimeOut:withError:
reservationNumber
reservationStatus
reservationStatusToSchema:
bookingTime
reservationHolderName
spokenPhrase
vocabularyIdentifier
recordConversationTurnWithContact:received:curated:throughApp:withDetailName:withDetailExtraction:
asyncQueue
_recordConversationTurnWithDetail:received:throughApp:withStore:
initWithBiomeSummaryByMessage:biomeMessageIdByPersistentId:
biomeSummaryByMessage
biomeMessageIdByPersistentId
_biomeSummaryByMessage
_biomeMessageIdByPersistentId
T@"NSDictionary",R,N,V_biomeSummaryByMessage
T@"NSDictionary",R,N,V_biomeMessageIdByPersistentId
globPatterns
urlsFoundBetweenStartDate:endDate:bundleIdentifier:entityStore:
deleteAllURLsWithBundleIdentifier:entityStore:
deleteAllURLsWithBundleIdentifier:documentIdentifiers:entityStore:
deleteAllURLsWithBundleIdentifier:domainSelection:entityStore:
_urls
_needsFlushing
supportedBundleIdentifiers
appleAnchorHrefs
urlsFromURLs:handle:bundleIdentifier:domainIdentifier:uniqueIdentifier:documentTitle:documentDate:documentTimeInterval:receivedAt:isOutgoingDocument:
_flagsForBundleIdentifier:documentDate:documentTimeInterval:isOutgoingDocument:
_titleFromMessagesSynthesizedTextContent:
isEqualToDeliveryKey:
providerForString:
initWithProvider:trackingNumber:
trackingNumber
_externalIdentifier
_provider
_trackingNumber
T@"NSString",R,N,V_externalIdentifier
TQ,R,N,V_provider
T@"NSString",R,N,V_trackingNumber
setNamePrefix:
setGivenName:
setMiddleName:
setFamilyName:
setNameSuffix:
localizedStringFromPersonNameComponents:style:options:
initWithChineseName:
initWithJapaneseName:
initWithKoreanName:
initWithVietnameseName:
initWithSpanishName:
initWithWesternName:
initWithDominantScript:languageMap:
payloadForString:range:
capitalizedString
segmentWesternNameWithNameParts:andPrefix:
prefix
suffix
initWithFirstName:middleName:lastName:fullName:prefix:suffix:recordId:origin:extractionInfo:
_privFullName
_firstname
_surname
_middlename
_prefix
_suffix
T@"NSString",R,N,V_firstname
T@"NSString",R,N,V_surname
T@"NSString",R,N,V_middlename
T@"NSString",R,N,V_prefix
T@"NSString",R,N,V_suffix
_initWithUserActivityStrings:secondaryString:optionalData:
_createUserActivityStringsWithOptions:completionHandler:
summarizeStreamByMessageStartingFromDaysAgo:
messageIdForBundleIdentifier:uniqueIdentifier:
initWithMessagesFromDaysAgo:throughDaysAgo:limit:withBiomeData:store:useSpotlightDataForMissingBiomeData:preLoadedFeatureNames:
_startInDaysAgo
_endInDaysAgo
_limit
_withBiomeData
_useSpotlightDataForMissingBiomeData
_simulatedCSSIs
setBundleIdentifier:
setUniqueIdentifier:
setAccountType:
attachmentsFromSearchableItem:
searchableItemIsStoredEncryptedWithGetterBlock:bundleIdentifier:
absoluteTimestamp
attachmentsFromBiomeAttachments:
securityMethod
setContentProtection:
isStoredEncrypted
setIsStoredEncrypted:
detectLanguageFromTextHeuristicallyWithLanguages:languages:defaultLanguage:
setAttachments:
_isInhumanSenderCached
_isInhumanContentCached
_taggedCharacterRangesCached
_messageSubjectDetectedDataCached
_dataDetectorMatchesWithSignatureForContentCached
_textContentLanguageIdentifierCached
_isSent
_isStoredEncrypted
_subject
_textContent
_mailConversationIdentifier
_domainIdentifier
_attachments
_accountHandles
_contentProtection
T@"NSString",C,N,V_subject
T@"NSString",C,N,V_textContent
T@"NSDate",C,N,V_date
T@"NSString",C,N,V_source
T@"NSString",C,N,V_bundleIdentifier
T@"NSString",C,N,V_uniqueIdentifier
T@"NSString",C,N,V_mailConversationIdentifier
T@"NSString",C,N,V_domainIdentifier
T@"NSArray",C,N,V_accountHandles
TB,N,V_isSent
T@"NSString",C,N,V_accountType
TB,N,V_isStoredEncrypted
T@"NSString",C,N,V_contentProtection
T@"CSPerson",R,N
T@"NSArray",R,N,V_attachments
setHasDateIsCorrect:
hasDateIsCorrect
setHasIsFromCongratulation:
hasIsFromCongratulation
setHasModelVersion:
hasModelVersion
setHasDidRegexTrigger:
hasDidRegexTrigger
offset
setHasOffset:
hasOffset
offsetAsString:
setHasDidResponseKitTrigger:
hasDidResponseKitTrigger
dateIsCorrect
isFromCongratulation
didRegexTrigger
didResponseKitTrigger
_modelVersion
_offset
_dateIsCorrect
_didRegexTrigger
_didResponseKitTrigger
_isFromCongratulation
TB,N,V_dateIsCorrect
TB,N,V_isFromCongratulation
TI,N,V_modelVersion
TB,N,V_didRegexTrigger
Ti,N,V_offset
TB,N,V_didResponseKitTrigger
categoryForCategoryString:
useCaseForUseCaseString:
categoryForSchema:
_useCase
_providerName
TC,R,N,V_useCase
T@"NSString",R,N,V_locale
T@"NSString",R,N,V_providerName
_callCalendarObservers:contactsObservers:remindersObservers:withEntry:
_eventBatchOperationSupportedForEntries:
thawObserversForTesting
hasObserver:
_calendarObservers
_contactsObservers
_remindersObservers
_queuedOperations
_observersFrozen
initWithDuplicateKey:recordId:masterEntityId:title:
contactEntityWithTitle:duplicateKey:recordId:masterEntityId:
isEqualToRawKey:
isEqualToDOMParserResult:
T@"NSArray",R,N,V_taggedCharacterRanges
sharedBackgroundProcessingQueue
sharedBackgroundStorageQueue
T@"NSOperationQueue",R,N
_delayedResetCachesAndModels
_resetCachesAndModels
isSubclassOfClass:
dependencyClassesForDissectorClass:
parallelPipeline:
_dissectOperations:block:
dissectOperationsForInteraction:entity:inContext:
verifyDKIMSignatureForPipelineEntity:error:
logDKIMStatus:forPipelineEntity:
verificationOperation:overrideVerificationStatus:withDependencies:
storeOperation:spotlightBundleIdentifier:spotlightUniqueIdentifier:spotlightDomainIdentifier:withStore:dependencies:originalEnrichmentCount:
_dissectOperations:inContext:
dissect:inContext:
storeOperation:withStore:dependencies:
dissectAndStore:inContext:
storeOperation:withStore:dependencies:originalEnrichmentCount:
_dissectEntity:inContext:andThen:
retrainingPipeline
remindersTestingPipeline
remindersTestingPipelineWithCustomReminderDissector:
deliveriesTestingPipeline
dissect:andStore:
dissectEntity:andStore:
dissectAndStoreEntity:inContext:
dissectAndStoreSpotlightEntity:bundleIdentifier:uniqueIdentifier:domainIdentifier:inContext:
dissectors
_dissectorsAndDependencies
initWithTagSchemes:
setGazetteers:forTagScheme:
labels
setByAddingObjectsFromArray:
setString:
setLanguage:range:
enumerateTagsInRange:unit:scheme:options:usingBlock:
isEqualToContactDetailKey:
prefixForForIdentityKey:
_identityKey
T@"SGIdentityKey",R,N,V_identityKey
initWithNormalizedEmail:
isEqualToPseudoContactKey:
initWithEmail:
initWithType:filename:path:
attachmentWithType:filename:path:
attachmentTypes
attachmentNames
attachmentPaths
mimeCategory
testAttachmentWithType:size:
_isDownloadedLocally
_filename
_size
T@"NSString",R,N,V_type
T@"NSString",R,N,V_filename
TQ,N,V_size
T@"NSString",R,N,V_path
TB,R,N,V_isDownloadedLocally
TB,R,D,N
withMethods:
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:
isUrl
endTimeZone
urlFromTags
convertToEventWithOrigin:
initWithRecordId:duplicateKey:sourceKey:content:title:creationTimestamp:lastModifiedTimestamp:tags:when:locations:structuredData:state:curated:
isFromDataDetectors
isEqualToStorageEvent:
floatingRangeWithUTCStartDate:endDate:
curated
isPOIFilters
geocodingMode
poiFilters
geocodeStartDate
geocodeStartTimeZone
geocodeEndDate
geocodeEndTimeZone
geocodeLocations
geocodedEventWithStartDate:startTimeZone:endDate:endTimeZone:locations:
isFromSuggestions
_curated
_when
T@"NSString",R,N,V_content
T@"NSString",R,N,V_title
T{SGUnixTimestamp_=d},R,N,V_creationTimestamp
T{SGUnixTimestamp_=d},R,N,V_lastModifiedTimestamp
T@"SGSimpleTimeRange",R,N,V_when
T@"NSArray",R,N,V_locations
T@"NSSet",R,N,V_tags
T@"NSData",R,N,V_structuredData
TI,R,N,V_state
TB,R,N,V_curated
searchableItemIsEligibleForHarvestingWithGetterBlock:bundleIdentifier:eligibleExceptForAge:
_addSearchableItem:bundleID:
deleteSearchableItemsWithIdentifiers:bundleID:
useProactiveHarvestingForBundleIdentifier:
donateUserAction:searchableItem:error:
initWithBundleIdentifier:purgedUniqueIdentifiers:
deleteContentWithRequest:error:
initWithBundleIdentifier:uniqueIdentifiers:
initWithDomainsFromArray:
initWithBundleIdentifier:domainSelection:
donateInteractions:bundleIdentifier:error:
supportedContentTypes
supportedBundleIDs
addOrUpdateSearchableItems:bundleID:
deleteSearchableItemsWithDomainIdentifiers:bundleID:
deleteAllSearchableItemsWithBundleID:
deleteSearchableItemsSinceDate:bundleID:
purgeSearchableItemsWithIdentifiers:bundleID:
addUserAction:withItem:
deleteAllUserActivities:
deleteUserActivitiesWithPersistentIdentifiers:bundleID:
supportedINIntentClassNames
addInteractions:bundleID:protectionClass:
deleteInteractionsWithIdentifiers:bundleID:protectionClass:
deleteInteractionsWithGroupIdentifiers:bundleID:protectionClass:
deleteAllInteractionsWithBundleID:protectionClass:
donateRelevantShortcuts:bundleID:
donateRelevantActions:bundleID:
_purgeAndDeleteIdentifiersDropbox
_deleteDomainIdentifiersDropbox
_deleteInteractionBundleIdDropbox
_deleteInteractionIdDropbox
_deleteInteractionGroupIdDropbox
isKeyAvailable:
phoneNumberWithStringValue:
isLikePhoneNumber:
hasPhoneNumber:
hasEmailAddress:
hasPostalAddress:
predicateForContactsMatchingFullTextSearch:containerIdentifiers:groupIdentifiers:
dialingCodeForISOCountryCode:
digits
numberMatchesContactsForm:amongContactsWithIdentifiers:
normalizedDigits:
findContactsForPerson:fetchingKeys:
_lengthsCounts
_phonesSeenInContacts
_mostCommonCountryCode
_helperLock
_getPeopleWithNameToken:fromContactStore:withKeysToFetch:ifMatchingPredicate:
unionOrderedSet:
firstObjectCommonWithArray:
compareContact:cnContact:stopOnNewDetail:stopOnMatchedDetail:matchPreference:
_compareContact:cnContact:newDetails:matchedDetails:matchPreference:stopOnNewDetail:stopOnMatchedDetail:
dateComponents
keysSortedByValueUsingSelector:
_findFuzzyNameCandidatesMatchingPseudoContact:withName:andFeatures:fromContactStore:withKeysToFetch:
_filterCandidates:withUniqueDetailMatchesToContact:andFeatures:
_filterCandidates:similarToName:exceedingThreshold:
updatedFields
realtimeContactForFields:updatedFields:addedToCuratedContact:
stripBirthdayFromSGContact:
_isMeContact:withContactStore:
_findContactsMatchingPseudoContact:withName:andFeatures:fromContactStore:withKeysToFetch:
stripStaleBirthdayFromSGContact:withEntity:
_realtimeContactFromPseudoContact:andFeatures:assimilatingMatchingCuratedContacts:
_realtimeContactWithContactStore:forPseudoContact:fromEntity:normalizedName:error:
clearMeContactCache
realtimeContactWithContactStore:forPseudoContact:error:
locationsCount
clearLocations
locationsAtIndex:
locationsType
hasGroupId
hasSourceKey
hasContent
hasTitle
setHasCreationTimestamp:
hasCreationTimestamp
setHasLastModifiedTimestamp:
hasLastModifiedTimestamp
hasWhen
setHasAllDay:
hasAllDay
setHasCancelled:
hasCancelled
hasDomain
hasTemplateName
setHasCategoryType:
hasCategoryType
categoryTypeAsString:
StringAsCategoryType:
setHasParentEntityType:
_parentEntityType
_categoryType
_extraKey
_interactionInfo
_metadata
_schemaOrg
_templateName
_cancelled
T@"NSString",&,N,V_groupId
T@"NSString",&,N,V_sourceKey
T@"NSString",&,N,V_content
T@"NSString",&,N,V_title
Td,N,V_creationTimestamp
Td,N,V_lastModifiedTimestamp
T@"SGDCKTimeRange",&,N,V_when
TB,N,V_allDay
T@"NSMutableArray",&,N,V_locations
T@"NSString",&,N,V_extraKey
TB,N,V_cancelled
T@"NSData",&,N,V_schemaOrg
T@"NSString",&,N,V_domain
T@"NSString",&,N,V_templateName
Ti,N,V_categoryType
T@"SGDCKInteractionInfo",&,N,V_interactionInfo
Tq,N,V_parentEntityType
T@"NSData",&,N,V_metadata
topDirectoryWithName:createIfNeeded:
topDirectory
topDirectoryCreateIfNeeded:
filename:createIfNeeded:
subdirectory:createIfNeeded:
suggestionsSubdirectory:
shouldInvertFirst:last:underNamingTradition:
inversionRateForNamingTradition:
firstNameLikelihood:underNamingTradition:default:
_tradToTrie
_tradToInversionRate
_confidenceThreshold
isEqualToEmailKey:
T@"NSString",R
initWithSalientCount:regularCount:token:
token
initWithCount:asSalient:token:
newByAdding:asSalient:
_salientCount
_regularCount
_token
T@"NSNumber",R,V_salientCount
T@"NSNumber",R,V_regularCount
T@"NSString",R,V_token
initWithMailCount:unigramTokenCounts:bigramTokenCounts:unigramQueriedTokensCount:bigramQueriedTokensCount:oldestTokenAge:
mailCount
unigramTokenCounts
bigramTokenCounts
unigramQueriedTokensCount
bigramQueriedTokensCount
oldestTokenAge
_mailCount
_unigramTokenCounts
_bigramTokenCounts
_unigramQueriedTokensCount
_bigramQueriedTokensCount
_oldestTokenAge
T@"SGMITokenCounts",R,V_mailCount
T@"SGMITokenCounts",R,V_unigramTokenCounts
T@"SGMITokenCounts",R,V_bigramTokenCounts
T@"NSArray",R,V_unigramQueriedTokensCount
T@"NSArray",R,V_bigramQueriedTokensCount
Td,R,V_oldestTokenAge
initWithMailCount:unigramTokenCounts:bigramTokenCounts:unigramTokensCount:bigramTokensCount:
unigramTokensCount
bigramTokensCount
_unigramTokensCount
_bigramTokensCount
T@"NSMutableDictionary",R,V_unigramTokensCount
T@"NSMutableDictionary",R,V_bigramTokensCount
removeBrackets:
messageIdWithoutBrackets
getDoubleForColumn:
initForLocale:tagNames:trustCoreNLP:personalNameMapping:punctuationMapping:
initWithTagSchemes:options:
availableTagSchemesForLanguage:
_purgeableNSLinguisticTaggerWithTagSchemes:
_purgeableNLTaggerWithNameTagging:
_createOrReuseNLPTagger
tagSchemes
enumerateTagsInRange:scheme:options:usingBlock:
removeLastObject
transformWithCoreNLP:block:
transformWithNLLinguisticTagger:block:
isEqualToTokenizerMappingTransformer:
forLocale:
forLocale:tagNames:personalNameMapping:punctuationMapping:
forLocale:tagNames:trustCoreNLP:personalNameMapping:punctuationMapping:
_tagger
_nameTagging
_trustCoreNLP
_punctuationMapping
_personalNameMapping
initWithEKOptions:
predicateForEventCreatedFromSuggestionWithOpaqueKey:
eventsMatchingPredicate:
eventsWithSameAlternativeOpaqueKeyAsDuplicateKey:harvestStore:
localizedCaseInsensitiveContainsString:
attendees
participantType
_sg_fetchEKEventsForPseudoNLEvent:title:participants:
setLocalCustomObject:forKey:
saveEvent:span:commit:error:
rangeOfUnit:startDate:interval:forDate:
isSubscribedHolidayCalendar
isFacebookBirthdayCalendar
eventsWithSameOpaqueKeyAsStorageEvent:harvestStore:
eventsWithSameAlternativeOpaqueKeyAsStorageEvent:harvestStore:
initWithTargetMapping:phoneMapping:emailMapping:addressMapping:andDateMapping:
setTargetMapping:
setPhoneMapping:
setAddressMapping:
setDateMapping:
extendMatchArray:withTarget:
targetMapping
phoneMapping
addressMapping
dateMapping
stringByReplacingMatches:inRange:withBlock:
isEqualToEntityMatchingTransformer:
_targetMapping
_phoneMapping
_addressMapping
_dateMapping
T@"NSString",&,V_targetMapping
T@"NSString",&,V_phoneMapping
T@"NSString",&,V_addressMapping
T@"NSString",&,V_dateMapping
expandRange:by:
selectMigrationQueue
prepMigrator
maxKnownDbVersion
migrate
strongToWeakObjectsMapTable
clearDatabase:
getNSStringForColumnAlias:
migrateToVersion:
runQuery:onDb:
waitForGroup:timeoutSeconds:
_renameTable:to:
_createEntityFTSTableWithName:
_prepareToCopyFrom:toNewTableNamed:
_slowCopyFromTable:toTable:startingAtEntityId:
runQueries:forVersion:inTransactionOnDb:
fixupVersionMismatch
skipFromZeroSchema
languageToUpdateEntityFTSTo
updateLanguageForFTSTablesToLanguage:
processInfo
environment
initForMigratorTestWithEntityDb:snippetDb:
configureMigratorThenMigrateToVersion:
unsafeMigrateToVersionForTesting:
migration_deleteLegacyMessages
migration_MoveContentToSnippets
migration_AddAuthorColumnIfMissing
migration_AddNewishTablesIfMissing
migration_FixUpColumnsForDevicesWhoMissedTheImprovedLegacyMigration
migration_RebuildIdentityTables
migration_RecreateFTSTableWithITS
migration_CreateFTSTableWithITS
migration_DeduplicateIdentityPhones
migration_ConvertContentAndDupKeyHashesToBlobs
migration_DropMessagingTermsWithPhoneExtensions
migration_RemoveEntityReferencesWithoutBundleIdentifier
migration_FixupMergeGroups
migration_separateMessageEntities
migration_separateMessageSnippets
migration_rebuildFTSWithDetailEntityIDDocIDs
migration_deleteInteractions
migration_reimport
migration_deleteEmergencyExtractions
migration_deleteInternalExtractionsFromML
migration_deleteSerializedContacts
migration_newRemindersSchema
migration_newContactDetailsSchema
migration_newEventsSchema
migration_deleteNilDateEvents
computeContactConnectionScoreFromEmailAddress:usingEntityStore:
commitSpotlightMapping:bundleIdentifier:domainIdentifier:uniqueIdentifier:
getContactIdentifierForEmail:usingEntityStore:
arrayWithObject:
computeContactPriorsForContactIdentifiers:withTimeConstant:withInteractionMechanisms:asOf:overLookbackOf:
priorScore
setCandidateNameRange:
setIsPositiveExample:
setIsNegativeExample:
candidateNameRange
_isPositiveExample
_isNegativeExample
_candidateNameRange
TB,N,V_isPositiveExample
TB,N,V_isNegativeExample
T{_NSRange=QQ},N,V_candidateNameRange
setIgnoreAfter:
setMatchDate:
setSenderDisplayName:
setIsFirstPerson:
setIsThirdPerson:
matchingContacts
ignoreAfter
matchDate
senderDisplayName
_regexBelongsToSender
_regexDoesNotBelongToSender
_isFirstPerson
_isThirdPerson
_matchingContacts
_ignoreAfter
_matchDate
_senderDisplayName
TB,N,V_regexBelongsToSender
TB,N,V_regexDoesNotBelongToSender
TB,N,V_isFirstPerson
TB,N,V_isThirdPerson
T@"NSArray",R,N,V_matchingContacts
TQ,N,V_ignoreAfter
T@"NSDate",W,N,V_matchDate
T@"NSString",W,N,V_senderDisplayName
indexOfObjectWithOptions:passingTest:
useMLModelForContacts
detectionFromMatch:plainTextContent:extractionInfo:isUnlikelyPhone:
addSessionForTrainingWithSource:label:language:objective:spotlightRef:embeddedFeaturizer:
useMLModelForSelfId
numberOfNonZeroValues
identifyComposeWarningsFromSubject:content:toRecipients:ccRecipients:bccRecipients:originalToRecipients:originalCcRecipients:attachments:language:store:disableConservativeCheckRequirement:
_identifyComposeWarningsFromSubject:content:toRecipients:ccRecipients:bccRecipients:originalToRecipients:originalCcRecipients:attachments:language:store:disableConservativeCheckRequirement:
mailIntelligenceSPILogging
recordMappingFromNickname:toEmailAddress:
initFromString:coreRange:signature:maxWindowSizeAroundCore:detectedLanguage:isIncomingMessage:score:
shouldExposeWarning:
wildcardsMatches
updateAttachmentDetectionStatsOnMailWithTextContent:attachments:warningRaised:attachmentPredicted:isIncomingMail:
recipientConservative
matchesForString:
recipient
filterOutOrConvertMatches:visibleFlatRecipientEmailsList:visibleFlatRecipientList:bccFlatRecipientList:contactMatchRequired:textContent:regexLanguage:detectedLanguage:store:
updateRecipientDetectionStatsWarningRaised:
trialMetadataString
knownEmailAddressesForNickname:
snippetFromString:coreRange:withMaxWindowSizeAroundCore:
initWithSnippet:core:signature:detectedLanguage:isIncomingMessage:score:matchFoundInBCC:
matchRecentContact:store:
searchQueryForSearchTerm:preferredKinds:sendingAddress:recentsDomain:
performRecentsSearch:operationQueue:completion:
unifiedContactsMatchingPredicate:keysToFetch:error:
reportUserEngagement:forWarning:store:
incrementUserEngagement:forWarning:
initWithRegexp:
initWithRegexpData:
initWithSubregexps:prefilter:
setCountLimit:
matchesUtf8:
_enumerateMatchesInUtf8:fromString:ngroups:block:
setCacheLimitForTesting:
enumerateMatchesInUtf8:fromString:ngroups:blockWithSubregexp:
_isTrivial
_patternData
_pattern
enumerateIndexesUsingBlock:
_subregexps
_prefilter
_regexp
initWithPattern:
_loadDataDetectorAdditionDict:
_body
_dataDetectorMappedAdditions
_dataDetectorAdditions
T@"SGMIWarningsDetectionRegex",R,N,V_subject
T@"SGMIWarningsDetectionRegex",R,N,V_body
T@"NSDictionary",R,N,V_dataDetectorMappedAdditions
T@"NSDictionary",R,N,V_dataDetectorAdditions
matchesForString:withinRange:onlyFirstMatch:
numberOfRanges
rangeWithName:
hashedValueOfString:
initWithRange:coreRange:signature:wildcardsMatches:
privateGroupsCount
_privateGroupsCount
T@"NSNumber",R,N,V_privateGroupsCount
_attachment
_recipientConservative
_recipient
_followUpOnOutgoingMailsQuestions
_followUpOnOutgoingMailsAsks
_followUpOnIncomingMails
T@"SGMIWarningsDetectionRegexes",R,N,V_attachment
T@"SGMIWarningsDetectionRegexes",R,N,V_recipientConservative
T@"SGMIWarningsDetectionRegexes",R,N,V_recipient
T@"SGMIWarningsDetectionRegexes",R,N,V_nickname
T@"SGMIWarningsDetectionRegexes",R,N,V_followUpOnOutgoingMailsQuestions
T@"SGMIWarningsDetectionRegexes",R,N,V_followUpOnOutgoingMailsAsks
T@"SGMIWarningsDetectionRegexes",R,N,V_followUpOnIncomingMails
_wildcardsMatches
_coreRange
T{_NSRange=QQ},R,N,V_coreRange
T@"NSString",R,N,V_signature
T@"NSArray",R,N,V_wildcardsMatches
forward
forwardToString:consume:
seekToStart
_quoted
_str
_pos
TQ,N,V_pos
initWithType:content:
keyForInstantMessageAddress:
identityTypeForKeyPart:
keyForContactExternalId:
keyForContactUniqueId:
initWithName:value:
_propertyName
_itemValue
T@"NSString",R,N,V_propertyName
T@"SGMicrodataItem",R,N,V_itemValue
initWithDocument:
document
whitespaceSplit:
itemScopes
initWithParent:item:htmlId:textConsumer:
parent
textConsumers
startElement:withAttributes:
endElement
textContent:
stackItem
_stackItem
T@"SGMicrodataParserStackItem",R,N,V_stackItem
_registerForLockStateChange
_unlocked
_attemptToProcessRequests
_locked
_reimportQueryForPersonHandle:startDate:endDate:requestId:
_executeReimportOfIdentifiers:
_unregisterForLockStateChange
laterDate:
initWithQueryString:attributes:
_protectionClasses
foundItemCount
_reimportFromBundleId:protectionClasses:identifiers:
_issueCommand:
defaultSearchableIndex
_issueCommand:completionHandler:
_deviceStateToken
clearConversations
detectNLEvents
initWithHandle:handleType:fullName:
_personForCSPerson:
initWithEmail:fullName:
initWithIdentifier:subject:sender:recipients:dateSent:type:
setIsGroupConversation:
setIsSenderSignificant:
initWithText:originalMessage:index:
setMessageUnits:
calendarAppUsageLevel:
mailAppUsageLevel:
messagesAppUsageLevel:
duplicateKeyForNaturalLanguageEventWithStartDate:endDate:title:participants:parentKey:
ipsos_eventClassificationType
naturalLanguageEventTypeIdentifier:
ipsos_messageUnit
bestLanguageID
naturalLanguageEventLanguageID:
ipsos_eventAttributes
naturalLanguageEventAttributes:
isSenderSignificant
significantSender
ipsos_confidence
confidenceScore:
participantCount:
ipsos_usedBubblesCount
usedBubblesCount:
titleGeneratedFromTemplate
titleGeneratedFromSubject
endDateUnadjustedForLegacyClients
component:fromDate:
toFloatingTime:withDSTAmbiguityPreferences:
structuredLocationWithoutPrediction
geoLocation
horizontalAccuracy
ipsos_eventStatus
initWithType:categoryDescription:originBundleId:confidence:schemaOrg:participants:
allowNaturalLanguageDissector
fullyDissected
recordInteractionForEventWithInterface:actionType:harvestedEKEvent:curatedEKEvent:
_shouldProcessMessage:entity:
messageUnits
addEnrichmentForEvents:forMessage:toEntity:
scanEventsInMessageUnits:synchronously:completionHandler:
_tagNaturalLanguageEnrichmentsForEntity:
ipsosMessageWithTextMessage:store:
conversationWithIdentifier:
allMessages
scanEventsInLastMessageOnly:synchronously:completionHandler:
duplicateKeysFromMailMessageKeys:
recordIdForKey:
duplicateKeysFromRecordIds:
_duplicateKeysWithZeroSpotlightReferencesFromRecordIds:
_recordIdsFromRemovingSpotlightReferencesWithBundleIdentifier:uniqueIdentifiers:
_markRecordsLostIfNoSpotlightReferences:
messageIdsForBundleIdentifier:uniqueIdentifiers:
_deleteIfNoSpotlightReferences:addToRecentlyDeletedCache:
messageIdsForBundleIdentifier:domainIdentifierGlobs:limit:
sg_enumerateChunksOfSize:usingBlock:
messageIdsForBundleIdentifier:limit:
initWithDomain:
writeTombstoneForSpotlightReferenceWithBundleIdentifier:domainIdentifiers:
_selectingDomainsForDomainIdentifier:
_tombstoneExistsForBundleIdentifier:
addDomain:
containsDomain:
writeTombstoneForSpotlightReferenceWithBundleIdentifier:uniqueIdentifiers:
_shouldContinueReindex:
batchOf:contactsStartingAtEntityId:
searchableItemsForContactsForInternalIdentifiers:
beginIndexBatch
endIndexBatchWithClientState:completionHandler:
_minEntityIdFromMinEntityId:withContactIdentifiers:
reindexSearchableItemsWithMinimumEntityId:searchableIndex:acknowledgementHandler:reindexCount:
getBytes:length:
fetchLastClientStateWithCompletionHandler:
entityIdentifiersFromCNIdentifiers:
contactsWithIdentifiers:
hasSpotlightReferenceForBundleIdentifier:uniqueIdentifier:
isRecentlyDeleted:
deleteSpotlightReferencesWithNoBundleIdentifier
writeTombstoneForSpotlightReferenceWithBundleIdentifier:domainIdentifier:
writeTombstoneForSpotlightReferenceWithBundleIdentifier:uniqueIdentifier:
writeTombstoneForSpotlightReferenceWithBundleIdentifier:
clearAllTombstonesForSpotlightReferencesIf:
searchableIndex:reindexAllSearchableItemsWithAcknowledgementHandler:
searchableIndex:reindexSearchableItemsWithIdentifiers:acknowledgementHandler:
searchableIndexDidThrottle:
searchableIndexDidFinishThrottle:
dataForSearchableIndex:itemIdentifier:typeIdentifier:error:
fileURLForSearchableIndex:itemIdentifier:typeIdentifier:inPlace:error:
setSchemaVersion:
schemaVersion
currentColumns
setCurrentColumns:
_schemaVersion
_currentColumns
Tq,N,V_schemaVersion
T@"NSArray",&,N,V_currentColumns
_escapedSQLIdentifier:
domainForStringTokens:
_updateSchemaVersion
_readCurrentColumnsUncached
indexOfObject:inSortedRange:options:usingComparator:
_removeColumnFromTotal:
_deleteZeroRows
_zeroColumn:
_parentDomainsForDomain:
bindNamedParam:toNSDictionary:
nonnullNSStringForColumnAlias:
int64AsNonnullNSNumberForColumnAlias:
totalsForDomains:
_hasColumn:
_pas_filteredArrayWithIndexedTest:
nonZeroColumnsForDomains:withColumns:
getIntegerForColumnAlias:
firstNonZeroColumnForDomains:withColumns:
enumerateChildrenOfDomain:greaterThan:depth:limit:usingBlock:
_domainSegmentCount:
bindNamedParam:toNonnullNSData:
_addColumn:
_dropColumn:
_recycleColumn:asColumn:
_mergeColumn:intoColumn:
commitDomainsAndCounts:toColumn:
_commitDomainsAndCounts:toColumn:
deleteDomainSelection:
stringTokensFromDomain:
domainByAppendingToken:toDomain:
createTableNamed:inDatabase:
initWithDatabase:tableName:
totalForDomain:
countForColumn:domain:
nonZeroColumnsForDomain:withColumns:
firstNonZeroColumnForDomain:withColumns:
enumerateChildrenOfDomain:depth:usingBlock:
numberOfRowsAssociatedWithDomain:
hasColumn:
addColumn:
zeroColumn:
dropColumn:
recycleColumn:asColumn:
mergeColumn:intoColumn:
commitDomainsCountedSet:toColumn:
deleteDomainSelection:keepingDomainsPassingTest:
deleteDomain:
deleteAllRows
_tableName
_tableNameEscaped
_dbIsMigrated
_columnsToZero
_handleDeviceLockStateEvent:
_runJournal
_effectiveLockState
initWithMigrationObjects:
_journalQueue
outputStreamToFileAtPath:append:
open
write:maxLength:
inputStreamWithFileAtPath:
read:maxLength:
_clearBucketForColumn:usingDatabase:
_clearSubModelsTablesUsingDatabase:
initWithDatabaseGetter:journalPath:
scannerWithString:
scanHexInt:
_naiveBayesModelQueryResultForFeature:unigramTokens:bigramTokens:usingDatabase:
_stringForFeatureName:
_featuresForDatabase:
_dateFromColumn:
_highlyDiscriminantTokensForFeature:minCount:minRatio:domains:limit:usingDatabase:
_keyForField:
initWithUnsubscriptionRuleField:tokenCounts:
shouldExposeWarning:updateAction:
isIncomingMessage
fileSizeInBytes
warningStatsCount
setEmailLanguage:
setRegexLanguage:
setIncomingMessage:
nsDataFromSignature:
setNegativeEngagement:
setNoEngagement:
setPositiveEngagement:
setBlockedWarningCount:
_clearSignatureStatsTableUsingDatabase:
_deleteNaiveBayesModelForProbabilityFeatureName:usingDatabase:
_commitNaiveBayesModel:probabilityFeatureName:updateDate:usingDatabase:
_columnFromDate:
_areSubmodelsEmptyUsingDatabase:
_featureNameForString:
subModelsStatsWithShouldContinueBlock:
_subModelsStatsWithShouldContinueBlock:usingDatabase:
_purgeTokensWhichLastUpdateWasBefore:shouldContinue:usingDatabase:
_getSGMIStoredAddressesUsingDatabase:
_writeJournalCommand:blob:
_clearBucketForColumn:
_deleteTokensForDeletedEmailAddresses:usingDatabase:
_applyCappingPolicy:shouldContinue:usingDatabase:
_pas_proxyArrayReversed
_pas_unproxy
removeObjectsAtIndexes:
_clearKVStoreUsingDatabase:
vacuumWithShouldContinueBlock:error:
_pas_shuffledArrayUsingRng:
clearSubModelsTables
clearKVStoreTable
clearSignatureStatsTable
clearNicknameMappingTable
shouldExposeWarningGivenPositiveFeedbackCount:negativeFeedbackCount:
databaseHandle
queriesToSkipFromEmptyToVersion:
clearBucketForDate:
insertToken:forFeatureName:salientCount:regularCount:time:
migration_createFeaturesTable
migration_createKVTable
migration_createFollowUpTable
migration_createFollowUpTableWithAppleMailMessageIdAsPrimaryKey
migration_createSignatureStatsTable
_dbGetter
_migrator
_lockStateRegistration
_journalPath
weekOfYear
initWithKey:ascending:
sortedArrayUsingDescriptors:
mailItemMessageIdHeaderValues:
textMessageKey
webPageKey
duplicateKeyForInteraction:fromBundleIdentifier:
duplicateKeyForSearchableItem:
_entityType
_entityKey
_parentKey
Tq,R,N,V_entityType
T@"NSObject<SGEntityKey>",R,N,V_entityKey
T@"SGDuplicateKey",R,N,V_parentKey
T@"NSData",R,N
vipManager
allVIPWaitForResult
T@"NSSet",R,C,N
URLQueryAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
messageObjectIDForURL:
resultWithTimeout:error:
messageForObjectID:
messageWithIdentifier:error:
optionsWithRequestedRepresentationType:networkUsage:
convertLineEndingsToNetwork:
dataForMessageWithIdentifier:error:
verifyDKIMSignatureForMailWithData:error:
verifyDKIMSignatureForMailWithData:options:error:
dkimSignatureHeaders
signatureExpiration
signingDomainIdentifier
verificationContextForMessageData:error:
firstHeaderForKey:
ef_trimLeadingCharactersInSet:
ef_trimTrailingCharactersInSet:
ef_rfc5322Unfold
parseEmailAddressString:displayName:localPart:domain:groupList:
signaturesToRemoveForDKIMVerificationContext:withFromHeaderDomain:
removeDKIMSignatureHeaders:
setRequireFullBodySignature:
verifyMessageWithContext:options:error:
enumerateByteRangesUsingBlock:
verifyDKIMSignatureForStorageEvent:error:
dkimVerifier
_emailDaemon
_dkimVerifier
T@"EMDaemonInterface",R,N,V_emailDaemon
T@"ECDKIMVerifier",R,N,V_dkimVerifier
bundleWithIdentifier:
localizations
pathForResource:ofType:inDirectory:forLocalization:
reservationDurationFromReservationSchema:
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:lodgingBusinessLocation:reservationDuration:numberOfAdults:numberOfChildren:
schemaFromLodgingReservation:
lodgingBusinessLocation
initWithCountLimit:
messageIdentifiersGeneratingContact:
externalKey
mergeContact:withContact:
replaceDetailsInContact:onDiskContact:
_cachedContacts
trialIds
_eventKeyforReminder:
_interactionSummaryForReminder:interface:actionType:
_interactionDictionaryForDueLocation:dueDateComponents:
_baseInteractionAttributesForReminder:
_logReminderInteractionSummaryForReminder:interface:actionType:
tokenizerWithCoreNLPEnabled:
_detectContactNames:
_detectNLPNames:
_fetchContactNamesToLimit:
_fetchContactNamesToLimit:peopleSuggester:
rankedGlobalSuggestionsFromContext:contactsOnly:
_detectNames:withNameSet:
_contactNames
_noCoreNLPTokenizer
_coreNLPTokenizer
pruneLostMessagesWithSource:count:
displayableEntities:
markMessagesUndisplayablyLost:
checkExistsEventForDuplicateKey:
insertEvent:
updateEvent:primaryKey:
bindStatementsForCommit:storageEvent:
insertEventTagsAndLocations:primaryKey:
bindNamedParamToNull:
_serializeRange:
_deserializeRange:
loadEventForPrimaryKey:
abbreviation
initWithMemoryMappedPath:error:
_bytes
_offsetInFile
TQ,R,V_offsetInFile
initWithHistoricalDataRequests:error:
resultWithHistoricalDataRequests:error:
isEqualToResult:
_historicalDataRequests
_error
T@"NSArray",R,N,V_historicalDataRequests
T@"NSError",R,N,V_error
setHasStart:
hasStart
setHasEnd:
hasEnd
setHasStartUTCOffsetSeconds:
setHasEndUTCOffsetSeconds:
hasEndUTCOffsetSeconds
setFloating:
setHasFloating:
hasFloating
floating
_endUTCOffsetSeconds
_startUTCOffsetSeconds
_floating
Td,N,V_start
Td,N,V_end
Tq,N,V_startUTCOffsetSeconds
Tq,N,V_endUTCOffsetSeconds
TB,N,V_floating
isEqualToCuratedEventKey:
_externalId
T@"NSString",R,N,V_externalId
initWithRecordId:origin:title:dueDateComponents:dueLocationType:dueLocation:dueLocationTrigger:sourceURL:reminderStatus:opaqueKey:uniqueKey:contactIdentifier:creationDate:
isReminderMetadata
reminderMetadata
setMonth:
setDay:
isEqualToStorageReminder:
describeReminderStatus:
storageReminderFromRecordId:store:
storageReminderFromDuplicateKey:store:
storageReminderWithPrimaryKey:store:
_dueStorageLocation
T@"SGStorageLocation",R,N,V_dueStorageLocation
notificationCount
setPersonFromSenderAge:
setHasPersonFromSenderAge:
hasPersonFromSenderAge
setPersonFromSenderInDyadicConversationAge:
setHasPersonFromSenderInDyadicConversationAge:
hasPersonFromSenderInDyadicConversationAge
setSubjectContentAge:
setHasSubjectContentAge:
hasSubjectContentAge
setPersonToRecipientsAge:
setHasPersonToRecipientsAge:
hasPersonToRecipientsAge
setPersonCCRecipientsAge:
setHasPersonCCRecipientsAge:
hasPersonCCRecipientsAge
setDomainFromSenderAge:
setHasDomainFromSenderAge:
hasDomainFromSenderAge
setConversationAge:
setHasConversationAge:
hasConversationAge
personFromSenderAge
personFromSenderInDyadicConversationAge
subjectContentAge
personToRecipientsAge
personCCRecipientsAge
domainFromSenderAge
conversationAge
_conversationAge
_domainFromSenderAge
_personCCRecipientsAge
_personFromSenderAge
_personFromSenderInDyadicConversationAge
_personToRecipientsAge
_subjectContentAge
Tf,N,V_personFromSenderAge
Tf,N,V_personFromSenderInDyadicConversationAge
Tf,N,V_subjectContentAge
Tf,N,V_personToRecipientsAge
Tf,N,V_personCCRecipientsAge
Tf,N,V_domainFromSenderAge
Tf,N,V_conversationAge
doneReturningWasDone
_done
_timeoutTimer
_isEnabled
_isDNUOnlyEnablement
_signatureStatsLogging
_modelGroundTruthVersion
_modelInferenceVersion
_modelPath
_modelFeatureNames
_modelFeatureStandardizationMeans
_modelFeatureStandardizationStandardDeviations
_modelGroundTruthFeatureNames
_modelGroundTruthFeatureLowerBounds
_modelGroundTruthFeatureUpperBounds
_modelGroundTruthOutputs
_saliencyOverrideFeatureNames
_saliencyOverrideFeatureLowerBounds
_saliencyOverrideFeatureUpperBounds
_saliencyOverrideOutputs
_classificationThreshold
_classificationOfflinePrecision
_classificationOfflineRecall
_attachmentDetectionRegexes
_attachmentLinkDetection
_conservativeRecipientDetection
_recipientConservativeDetectionRegexes
_recipientDetectionRegexes
_nicknameDetectionRegexes
_followUpOnOutgoingMailsQuestionsDetectionRegexes
_followUpOnOutgoingMailsAsksDetectionRegexes
_followUpOnIncomingMailsDetectionRegexes
loadFactors
initWithBool:
initWithLong:
dictionaryWithContentsOfFile:
concatPathWithPrefix:suffix:extra:
resourcePath
loadLevelAsBooleanFromFactor:
arrayFromPathWithPrefix:suffix:
dictionaryFromPathWithPrefix:suffix:
loadLevelAsLongFromFactor:
loadLevelAsNumericFromFactor:
loadLevelAsModelPath:
loadLevelAsStringFromFactor:
loadLevelAsStringArrayFromFactor:
loadLevelAsNumericArrayFromFactor:
loadLevelAsNumericDictionaryFromFactor:
classificationOfflinePrecision
classificationOfflineRecall
triClient
setTriClient:
T@"TRIClient",&,N,V_triClient
schemaURLString:isEqualTo:
initWithName:bundleIdentifier:
dispatchGroup
URLForDirectory:inDomain:appropriateForURL:create:error:
checkResourceIsReachableAndReturnError:
pseudoContactVcardDirectory
URLByAppendingPathComponent:isDirectory:
initWithKeyName:
setDisplayName:
setStateOrProvince:
contactIdentifierFromSuggestionID:
coreSpotlightAttributeSetForContact:
sendContactToSpotlight:
deleteSearchableItemsWithIdentifiers:completionHandler:
deleteSearchableItemsWithDomainIdentifiers:completionHandler:
suggestionIDFromContactIdentifier:
urlForRecordIdVCard:
urlForStorageContactVCard:
removeAllPseudoContactsInIdSet:
_vCardsDirectoryURL
virtualMachineWithContextGroupRef:
sg_eventMetadata
sg_schemas
indexSetForOutputNameLabelForModelOutput:
keyForOutputName:label:
candidatesForPlainTextIndexSet:inPlainText:
dateComponentsFromDate:
detectedDateComponentsForTokenIndexes:dataDetectorMatches:allowDatesInPast:inferDates:approximateTime:partialDate:allowTimeOffset:useEndForDurations:
mergeComponent:usingBaseDateComponents:withDateComponents:
isEqualToTimeZone:
valueForComponent:
setValue:forComponent:
indexSetForOutputNameLabel
setIndexSetForOutputNameLabel:
_enrichedTaggedCharacterRanges
_modelOutput
_indexSetForOutputNameLabel
T@"NSArray",&,N,V_enrichedTaggedCharacterRanges
T@"NSDictionary",&,N,V_modelOutput
T@"NSDictionary",&,N,V_indexSetForOutputNameLabel
initWithCode:userActivity:
reservationClassForSchema:
setReservations:
reservationsContainUniqueItemReferences
deliveryForEntity:origin:
initWithRecordId:origin:parentURL:provider:trackingNumber:
hasEmailLanguage
hasRegexLanguage
setHasType:
hasType
typeAsString:
StringAsType:
setHasIncomingMessage:
hasIncomingMessage
setHasNegativeEngagement:
hasNegativeEngagement
setHasNoEngagement:
hasNoEngagement
setHasPositiveEngagement:
hasPositiveEngagement
setHasBlockedWarningCount:
hasBlockedWarningCount
emailLanguage
regexLanguage
incomingMessage
negativeEngagement
noEngagement
positiveEngagement
blockedWarningCount
_blockedWarningCount
_emailLanguage
_negativeEngagement
_noEngagement
_positiveEngagement
_regexLanguage
_incomingMessage
T@"NSString",&,N,V_emailLanguage
T@"NSString",&,N,V_regexLanguage
Ti,N,V_type
TB,N,V_incomingMessage
T@"NSData",&,N,V_signature
TI,N,V_negativeEngagement
TI,N,V_noEngagement
TI,N,V_positiveEngagement
TI,N,V_blockedWarningCount
logReminder:actionType:
logActionVerb:actionType:
_logReminderTitleSequence:recorderKey:
_logReminderTitleUnknownTokens:recorderKey:
logReminderTitle:actionType:
_tokenizeTitle:
_boolMaskVectorForTokens:
_loggableTitleSequence:withMask:
_loggableUnknownTokenSequence:withMask:
addMissingAttachment:
addMissingRecipient:
missingAttachmentsCount
clearMissingAttachments
missingAttachmentAtIndex:
missingRecipientsCount
clearMissingRecipients
missingRecipientAtIndex:
missingAttachmentType
missingRecipientType
hasSubmodelsProbabilities
setHasPredictedSaliencyScore:
hasPredictedSaliencyScore
predictedSaliency
setHasPredictedSaliency:
hasPredictedSaliency
predictedSaliencyAsString:
StringAsPredictedSaliency:
setSaliencyPredictionPerformanceInMilliSeconds:
setHasSaliencyPredictionPerformanceInMilliSeconds:
hasSaliencyPredictionPerformanceInMilliSeconds
setHasEstimatedGroundTruth:
hasEstimatedGroundTruth
setMissingAttachmentPredictionPerformanceInMilliSeconds:
setHasMissingAttachmentPredictionPerformanceInMilliSeconds:
hasMissingAttachmentPredictionPerformanceInMilliSeconds
setMissingRecipientPredictionPerformanceInMilliSeconds:
setHasMissingRecipientPredictionPerformanceInMilliSeconds:
hasMissingRecipientPredictionPerformanceInMilliSeconds
predictedSaliencyScore
saliencyPredictionPerformanceInMilliSeconds
estimatedGroundTruth
missingAttachmentPredictionPerformanceInMilliSeconds
missingRecipients
missingRecipientPredictionPerformanceInMilliSeconds
_missingAttachmentPredictionPerformanceInMilliSeconds
_missingRecipientPredictionPerformanceInMilliSeconds
_saliencyPredictionPerformanceInMilliSeconds
_missingAttachments
_missingRecipients
_predictedSaliency
_predictedSaliencyScore
_submodelsProbabilities
_estimatedGroundTruth
T@"SGMIMetricsSubmodelsProbabilities",&,N,V_submodelsProbabilities
Tf,N,V_predictedSaliencyScore
Ti,N,V_predictedSaliency
TQ,N,V_saliencyPredictionPerformanceInMilliSeconds
TB,N,V_estimatedGroundTruth
T@"NSMutableArray",&,N,V_missingAttachments
TQ,N,V_missingAttachmentPredictionPerformanceInMilliSeconds
T@"NSMutableArray",&,N,V_missingRecipients
TQ,N,V_missingRecipientPredictionPerformanceInMilliSeconds
_document
_parent
_textConsumers
_itemScopes
T@"SGMicrodataDocument",R,V_document
T@"SGMicrodataParserStackItem",R,V_parent
T@"NSArray",R,V_textConsumers
T@"NSArray",R,V_itemScopes
newPrivateStreamDefaultConfigurationWithStoreBasePath:
initWithPrivateStreamIdentifier:storeConfig:
publisherFromStartTime:
summarizeStreamByMessageWithPublisher:
eventBody
sinkWithCompletion:receiveInput:
summarizeStreamByMessage
setLanguage:
setWindowLength:
indexSetWithIndexesInRange:
windowLength
initWithLanguage:windowLength:
isEqualToContactSharingTransformer:
_rng
_windowLength
T@"NSString",&,V_language
Tq,V_windowLength
regionAssetIdentifier
initWithAssetTypeDescriptorPath:defaultBundlePath:matchingKeysAndValues:notificationQueue:logHandle:enableAssetUpdates:
initWithAssetTypeDescriptorPath:defaultBundlePath:matchingKeysAndValues:notificationQueue:logHandle:enableAssetUpdates:purgeObsoleteInstalledAssets:
commitTag:
loadTagForPrimaryKey:
initWithSGSqlEntityStore:andEKStore:
initWithResult:
_eventsAssociatedWithStorageEvent:store:
isNaturalLanguageEventAttributes
_updateEvent:withValuesFrom:ekStore:
_addEKEventToCalendar:storageEvent:ekStore:commit:
_runWithEKEventStore:
addEvent:commit:
commit:
mergeIntoEKEvent:withStore:preservingValuesDifferentFrom:
_updateEventMetadataInModifiedEvent:withExistingCheckInShortcutInOriginalEvent:ifTeamIdentifierIsDifferentInStorageEvent:
structuredLocation
radius
isEqualToLocation:
_updateEKEvent:withEvent:ekStore:error:
_isEKEventFromSuggestedCalendar:ekStore:
_isEKEventFromNLEventsCalendar:ekStore:
_removeEKEvent:store:commit:
_cancelEKEvent:ekStore:error:
cancelEvent:commit:
_removeEvent:commit:
naturalLanguageSuggestedEventCalendar
suggestedEventCalendar
shouldAllowNotificationsInCalendarWithAllowListOverride:
initWithEventStore:opaqueKey:uniqueKey:extractionGroupIdentifier:
setSuggestionInfo:
setTimestamp:
updateEventToEvent:
eventActivities
categoryDescription
originBundleId
participants
jsonObject
setCustomObject:forKey:
removeEvent:span:commit:error:
_lazyEKStoreLock
hasComponentName
setHasSignificantWork:
hasSignificantWork
componentName
_componentName
T@"NSString",&,N,V_componentName
TB,N,V_significantWork
attributesOfFileSystemForPath:error:
stringByAppendingFormat:
freeSpace
setUsesGroupingSeparator:
setGroupingSeparator:
setUsesSignificantDigits:
setMinimumSignificantDigits:
setMaximumSignificantDigits:
dbErrorWithCode:sqliteReturnValue:lastErrno:query:
_handle_sqlite_error_code:error:onError:
corruptionMarkerFilename
corruptionMarkerPath
_abortDueToSqliteError:onError:
placeCorruptionMarker
_handle_SQLITE_CORRUPT:onError:
_handle_SQLITE_FULL:onError:
_handle_SQLITE_CANTOPEN:onError:
_handle_SQLITE_IOERR:onError:
_handle_SQLITE_ERROR:onError:
_handle_SQLITE_INTERNAL:onError:
_handle_SQLITE_PERM:onError:
_handle_SQLITE_ABORT:onError:
_handle_SQLITE_BUSY:onError:
_handle_SQLITE_LOCKED:onError:
_handle_SQLITE_NOMEM:onError:
_handle_SQLITE_READONLY:onError:
_handle_SQLITE_INTERRUPT:onError:
_handle_SQLITE_NOTFOUND:onError:
_handle_SQLITE_PROTOCOL:onError:
_handle_SQLITE_EMPTY:onError:
_handle_SQLITE_SCHEMA:onError:
_handle_SQLITE_TOOBIG:onError:
_handle_SQLITE_CONSTRAINT:onError:
_handle_SQLITE_MISMATCH:onError:
_handle_SQLITE_MISUSE:onError:
_handle_SQLITE_NOLFS:onError:
_handle_SQLITE_AUTH:onError:
_handle_SQLITE_FORMAT:onError:
_handle_SQLITE_RANGE:onError:
_handle_SQLITE_NOTADB:onError:
_handle_SQLITE_NOTICE:onError:
_handle_SQLITE_WARNING:onError:
_handle_SQLITE_IOERR_READ:onError:
_handle_SQLITE_IOERR_SHORT_READ:onError:
_handle_SQLITE_IOERR_WRITE:onError:
_handle_SQLITE_IOERR_FSYNC:onError:
_handle_SQLITE_IOERR_DIR_FSYNC:onError:
_handle_SQLITE_IOERR_TRUNCATE:onError:
_handle_SQLITE_IOERR_FSTAT:onError:
_handle_SQLITE_IOERR_UNLOCK:onError:
_handle_SQLITE_IOERR_RDLOCK:onError:
_handle_SQLITE_IOERR_DELETE:onError:
_handle_SQLITE_IOERR_BLOCKED:onError:
_handle_SQLITE_IOERR_NOMEM:onError:
_handle_SQLITE_IOERR_ACCESS:onError:
_handle_SQLITE_IOERR_CHECKRESERVEDLOCK:onError:
_handle_SQLITE_IOERR_LOCK:onError:
_handle_SQLITE_IOERR_CLOSE:onError:
_handle_SQLITE_IOERR_DIR_CLOSE:onError:
_handle_SQLITE_IOERR_SHMOPEN:onError:
_handle_SQLITE_IOERR_SHMSIZE:onError:
_handle_SQLITE_IOERR_SHMLOCK:onError:
_handle_SQLITE_IOERR_SHMMAP:onError:
_handle_SQLITE_IOERR_SEEK:onError:
_handle_SQLITE_IOERR_DELETE_NOENT:onError:
_handle_SQLITE_IOERR_MMAP:onError:
_handle_SQLITE_IOERR_GETTEMPPATH:onError:
_handle_SQLITE_IOERR_CONVPATH:onError:
_handle_SQLITE_IOERR_VNODE:onError:
_handle_SQLITE_IOERR_AUTH:onError:
_handle_SQLITE_LOCKED_SHAREDCACHE:onError:
_handle_SQLITE_BUSY_RECOVERY:onError:
_handle_SQLITE_BUSY_SNAPSHOT:onError:
_handle_SQLITE_CANTOPEN_NOTEMPDIR:onError:
_handle_SQLITE_CANTOPEN_ISDIR:onError:
_handle_SQLITE_CANTOPEN_FULLPATH:onError:
_handle_SQLITE_CANTOPEN_CONVPATH:onError:
_handle_SQLITE_CORRUPT_VTAB:onError:
_handle_SQLITE_READONLY_RECOVERY:onError:
_handle_SQLITE_READONLY_CANTLOCK:onError:
_handle_SQLITE_READONLY_ROLLBACK:onError:
_handle_SQLITE_READONLY_DBMOVED:onError:
_handle_SQLITE_ABORT_ROLLBACK:onError:
_handle_SQLITE_CONSTRAINT_CHECK:onError:
_handle_SQLITE_CONSTRAINT_COMMITHOOK:onError:
_handle_SQLITE_CONSTRAINT_FOREIGNKEY:onError:
_handle_SQLITE_CONSTRAINT_FUNCTION:onError:
_handle_SQLITE_CONSTRAINT_NOTNULL:onError:
_handle_SQLITE_CONSTRAINT_PRIMARYKEY:onError:
_handle_SQLITE_CONSTRAINT_TRIGGER:onError:
_handle_SQLITE_CONSTRAINT_UNIQUE:onError:
_handle_SQLITE_CONSTRAINT_VTAB:onError:
_handle_SQLITE_CONSTRAINT_ROWID:onError:
_handle_SQLITE_NOTICE_RECOVER_WAL:onError:
_handle_SQLITE_NOTICE_RECOVER_ROLLBACK:onError:
_handle_SQLITE_WARNING_AUTOINDEX:onError:
_handle_SQLITE_AUTH_USER:onError:
_handle_UNKNOWN_ERROR:onError:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
_binderForDictionary:
_allowedTypesForQueryKeyedArchives
_executeFile:onDb:becameLocked:
executeQueriesOnDatabase:
_directoryPath
_serialNumber
_journaling
_inMemory
_currentFile
TB,R,N,V_journaling
@16@0:8
B24@0:8@16
@24@0:8@16
@32@0:8@16@24
@24@0:8^{_NSZone=}16
v24@0:8@16
B16@0:8
v20@0:8B16
v16@0:8
@"CSPerson"
@"NSArray"
@"NSString"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@40@0:8@16@24@32
@24@0:8@"NSMutableArray"16
@40@0:8@16@"NSArray"24@"NSDictionary"32
@"NSObject<PMLTransformerProtocol>"
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
{?="model"b1"supervision"b1"result"b1}
v20@0:8I16
I16@0:8
{?="exitCode"b1}
{?="app"b1"wasKnownContact"b1"wasSuggestedContact"b1}
@32@0:8Q16@24
@56@0:8@16@24@32@40@48
v48@0:8@16@24q32@40
v40@0:8@16@24@32
@"INPersonHandle"
@"NSDate"
@"NSPersonNameComponents"
@"SGSocialProfileDetails"
{?="app"b1"wasSuggestedContact"b1}
@32@0:8@16^@24
@24@0:8q16
@60@0:8@16@24@32@40C48q52
B28@0:8C16@20
{_PASDBIterAction_=B}32@0:8@16@24
B32@0:8q16^q24
B32@0:8@16^q24
B32@0:8@16@24
@32@0:8@16Q24
#24@0:8Q16
@40@0:8@16@24Q32
@48@0:8@16@24@32@40
@"<PMLMultiLabelClassifierProtocol>"
@"<PMLTransformerProtocol>"
@"SGModelSource"
@40@0:8@16@24#32
v24@0:8#16
@"PMLSessionDescriptor"
@40@0:8Q16Q24@32
B32@0:8Q16@24
{?="detail"b1"extractionModelVersion"b1"extractionSignatureSource"b1"foundInSenderCNContact"b1"outcome"b1"source"b1"isUnlikelyPhone"b1"signature"b1}
{?="detail"b1"foundIn"b1"source"b1"tokens"b1"hasName"b1}
q24@0:8@16
{?="cacheHit"b1}
{?="contactDetail"b1"mode"b1"model"b1"supervision"b1"correct"b1"result"b1}
v40@0:8@16@24@?32
@32@0:8@16@?24
v32@0:8@16@24
@52@0:8@16@24@32@40B48
B32@0:8@16q24
@56@0:8@16C24@28@36@44B52
@24@0:8^@16
@40@0:8@16@24^@32
@52@0:8@16C24@28@36@44
C16@0:8
^i16@0:8
i24@0:8Q16
v32@0:8^i16Q24
v24@0:8Q16
{?="list"^i"count"Q"size"Q}
@"SGMIMetricsTrialMetadata"
@"SGMIMetricsSubmodelsStats"
{?="biomeAggregationPerformanceInMilliSeconds"b1"cumulatedSubmodelsRollbackForPostDeletionPolicyPerformanceInMilliSeconds"b1"submodelsPruningForCappingPolicyPerformanceInMilliSeconds"b1"submodelsUpdatePerformanceInMilliSeconds"b1"daysAvailableDuringIncrementalUpdate"b1"daysProcessedDuringIncrementalUpdate"b1"deletedEmailsCount"b1"deletedTokensCountToComplyToCappingPolicy"b1"hoursSinceLastIncrementalUpdate"b1"hoursSinceReference"b1"mailsProcessedDuringIncrementalUpdate"b1"rollbackedEmailsCountToComplyToPostDeletionPolicy"b1"rollbackedSlicesCountToComplyToPostDeletionPolicy"b1"isSubmodelRebuilt"b1}
@28@0:8@16B24
B36@0:8@16@24B32
@40@0:8@16@24@?32
v40@0:8@"SGSimpleMailMessage"16@"SGPipelineEntity"24@"SGRequestContext"32
v40@0:8@"SGTextMessage"16@"SGPipelineEntity"24@"SGRequestContext"32
@56@0:8@16@24@32@40Q48
@80@0:8@16@24C32@36C44@48C56@60@68B76
@32@0:8q16@24
@"NSMutableDictionary"
@"RTRoutineManager"
{?="app"b1}
@"NSNumber"
@"_PASLock"
{?="errorCode"b1}
@"FIAPResult"16@0:8
@"FIAPResult"24@0:8@"CSSearchableItem"16
@"FIAPResult"32@0:8@"CSUserAction"16@"CSSearchableItem"24
@"FIAPResult"40@0:8@"INInteraction"16@"NSString"24@"NSString"32
v32@0:8@"NSString"16@"NSArray"24
v24@0:8@"NSString"16
@"HVConsumerReply"24@0:8@"HVSpotlightDeletionRequest"16
@"HVConsumerReply"24@0:8@"HVConsumptionContext"16
@84@0:8@16@24@32@40B48@52@60@68@76
@76@0:8@16@24@32@40B48@52@60@68
@"SGSqlEntityStore"
@"SGURLDissector"
@32@0:8@16q24
@52@0:8@16@24@32B40Q44
q32@0:8q16@24
q32@0:8q16{SGUnixTimestamp_=d}24
@"SGMIMetricsAggregatedAccuracyLog"
{?="hoursSinceReference"b1}
{?="method"b1}
{?="customResponsesAfterPruning"b1}
@"NSMutableArray"
@32@0:8@16B24B28
v76@0:8{SGMDocumentType_=Q}16B24B28{SGMContactDetailType_=Q}32{SGMContactDetailExtractionOutcome_=Q}40{SGMContactDetailOwner_=Q}48@56B64{SGMContactDetailExtractionSignatureSource_=Q}68
v76@0:8{SGMContactDetailExtractionOutcome_=Q}16{SGMContactDetailType_=Q}24@32B40B44Q48@56@64B72
v48@0:8{SGMContactDetailExtractionOutcome_=Q}16@24B32B36@40
v60@0:8{SGMContactDetailExtractionOutcome_=Q}16@24B32B36@40@48B56
v68@0:8{SGMContactDetailExtractionOutcome_=Q}16@24B32B36@40{SGMContactDetailOwner_=Q}48@56B64
v52@0:8{SGMContactDetailExtractionOutcome_=Q}16@24{_NSRange=QQ}32B48
v48@0:8C16@20@28C36C40C44
v28@0:8B16i20i24
v40@0:8@16@24{SGMContactDetailFoundIn_=Q}32
@"PETEventTracker2"
v56@0:8@16@24@32@40q48
v64@0:8@16@24@32@40@48@56
B24@0:8q16
@24@0:8@"NSString"16
B44@0:8i16@20@?28@36
v32@0:8@16Q24
v24@0:8d16
@44@0:8@16i24@28@36
@"SGEntity"
@"SGCuratedEventKey"
v24@0:8@"NSSet"16
@32@0:8@?16@?24
v40@0:8Q16Q24@32
v44@0:8i16@20@28@36
v32@0:8@16S24S28
v40@0:8Q16Q24@"NSString"32
v44@0:8i16@"SGRecordId"20@"NSString"28@"NSString"36
v40@0:8@"SGRecordId"16@"NSString"24@"NSString"32
v32@0:8@"NSString"16S24S28
v32@0:8@"SGRecordId"16S24S28
v24@0:8@?16
v24@0:8@?<v@?@"SGXPCResponse1">16
v24@0:8@?<v@?@"SGXPCResponse">16
v32@0:8@16@?24
v32@0:8@"SGRealtimeEvent"16@?<v@?@"SGXPCResponse">24
v32@0:8@"SGRecordId"16@?<v@?@"SGXPCResponse">24
v40@0:8@"NSString"16@"NSDate"24@?<v@?@"SGXPCResponse1">32
v36@0:8@16i24@?28
v36@0:8@"SGRealtimeContact"16i24@?<v@?@"SGXPCResponse">28
v36@0:8@"SGRecordId"16i24@?<v@?@"SGXPCResponse">28
v40@0:8@16Q24@?32
v32@0:8Q16@?24
v40@0:8@16q24@?32
v60@0:8@16@24@32B40Q44@?52
v36@0:8Q16B24@?28
v48@0:8@16@24@32@?40
v40@0:8q16@24@?32
v56@0:8q16Q24d32Q40@?48
v40@0:8q16Q24@?32
v88@0:8@16@24@32@40@48@56@64@72@?80
v96@0:8@16@24@32@40@48@56@64@72@80@?88
v36@0:8B16@20@?28
v36@0:8B16q20@?28
v40@0:8@"CSSearchableItem"16Q24@?<v@?@"SGXPCResponse1">32
v40@0:8@"NSArray"16Q24@?<v@?@"SGXPCResponse">32
v40@0:8@"NSArray"16@"NSArray"24@?<v@?@"SGXPCResponse">32
v32@0:8Q16@?<v@?@"SGXPCResponse1">24
v32@0:8@"NSArray"16@?<v@?@"SGXPCResponse">24
v32@0:8@"NSData"16@?<v@?@"SGXPCResponse1">24
v32@0:8@"SGMailHeaders"16@?<v@?@"SGXPCResponse1">24
v40@0:8@"NSString"16q24@?<v@?@"SGXPCResponse1">32
v60@0:8@"NSArray"16@"NSArray"24@"NSDate"32B40Q44@?<v@?@"SGXPCResponse1">52
v36@0:8Q16B24@?<v@?@"SGXPCResponse1">28
v40@0:8@"NSString"16@"NSAttributedString"24@?<v@?@"SGXPCResponse1">32
v48@0:8@"NSString"16@"NSString"24@"NSDate"32@?<v@?@"SGXPCResponse1">40
v40@0:8q16@"NSArray"24@?<v@?@"SGXPCResponse">32
v56@0:8q16Q24d32Q40@?<v@?@"SGXPCResponse1">48
v40@0:8q16Q24@?<v@?@"SGXPCResponse1">32
v88@0:8@"NSString"16@"NSAttributedString"24@"NSArray"32@"NSArray"40@"NSArray"48@"NSArray"56@"NSArray"64@"NSArray"72@?<v@?@"SGXPCResponse1">80
v96@0:8@"NSString"16@"NSString"24@"NSDictionary"32@"NSArray"40@"NSArray"48@"NSArray"56@"NSArray"64@"NSArray"72@"NSArray"80@?<v@?@"SGXPCResponse1">88
v36@0:8B16@"SGMailIntelligenceWarning"20@?<v@?@"SGXPCResponse1">28
v36@0:8B16q20@?<v@?@"SGXPCResponse1">28
v40@0:8q16@"NSData"24@?<v@?@"SGXPCResponse1">32
v40@0:8q16@"NSString"24@?<v@?@"SGXPCResponse1">32
v48@0:8@16@24Q32@?40
v40@0:8@"CSSearchableItem"16Q24@?<v@?@"SGXPCResponse3">32
v48@0:8@"CSSearchableItem"16@"NSString"24Q32@?<v@?@"SGXPCResponse3">40
v48@0:8@"CSSearchableItem"16@"NSString"24Q32@?<v@?@"SGXPCResponse1">40
v48@0:8@"NSArray"16@"NSString"24Q32@?<v@?@"SGXPCResponse3">40
v36@0:8@16C24@?28
v36@0:8@"SGRecordId"16C24@?<v@?@"SGXPCResponse1">28
v48@0:8@16Q24B32B36@?40
v36@0:8B16Q20@?28
v40@0:8@"CNContact"16Q24@?<v@?@"SGXPCResponse1">32
v40@0:8@"NSString"16Q24@?<v@?@"SGXPCResponse1">32
v40@0:8@"NSArray"16Q24@?<v@?@"SGXPCResponse1">32
v32@0:8@"NSString"16@?<v@?@"SGXPCResponse1">24
v32@0:8@"SGRecordId"16@?<v@?@"SGXPCResponse1">24
v32@0:8@"NSArray"16@?<v@?@"SGXPCResponse1">24
v32@0:8@"SGSocialProfile"16@?<v@?@"SGXPCResponse1">24
v48@0:8@"NSString"16Q24B32B36@?<v@?@"SGXPCResponse1">40
v24@0:8@?<v@?@"SGXPCResponse3">16
v36@0:8B16Q20@?<v@?@"SGXPCResponse1">28
v28@0:8I16@?20
v52@0:8@16@24@32I40@?44
v64@0:8@16@24@32@40C48I52@?56
v36@0:8C16@20@?28
v28@0:8I16@?<v@?@"SGXPCResponse1">20
v52@0:8@"NSDate"16@"NSDate"24@"NSSet"32I40@?<v@?@"SGXPCResponse1">44
v64@0:8@"NSDate"16@"NSDate"24@"NSSet"32@"NSString"40C48I52@?<v@?@"SGXPCResponse1">56
v36@0:8C16@"NSString"20@?<v@?@"SGXPCResponse">28
v56@0:8@16@24@32B40B44@?48
v44@0:8@16@24B32@?36
v56@0:8@"NSString"16@"NSURL"24@"NSLocale"32B40B44@?<v@?@"SGXPCResponse1">48
v32@0:8@"SGSuggestedEventLaunchInfo"16@?<v@?@"SGXPCResponse">24
v40@0:8@"NSURL"16@"NSString"24@?<v@?@"SGXPCResponse1">32
v44@0:8@"NSURL"16@"NSString"24B32@?<v@?@"SGXPCResponse1">36
v48@0:8@"NSURL"16@"NSString"24@"NSString"32@?<v@?@"SGXPCResponse1">40
v32@0:8@"SGReminder"16@?<v@?@"SGXPCResponse">24
v32@0:8@"NSString"16@?<v@?@"SGXPCResponse">24
v40@0:8@"NSData"16@"NSData"24@?<v@?@"SGXPCResponse">32
v40@0:8@"NSString"16@"NSArray"24@?<v@?@"SGXPCResponse">32
v40@0:8@"NSString"16@"_PASDomainSelection"24@?<v@?@"SGXPCResponse">32
v52@0:8@16@24Q32I40@?44
v60@0:8@16@24@32Q40I48@?52
v36@0:8Q16I24@?28
v56@0:8@16@24@32@40@?48
v28@0:8B16@?20
v64@0:8@16@24@32d40@48@?56
v56@0:8@16@24@32Q40@?48
v52@0:8@"NSDate"16@"NSDate"24Q32I40@?<v@?@"SGXPCResponse1">44
v60@0:8@"NSDate"16@"NSDate"24@"NSString"32Q40I48@?<v@?@"SGXPCResponse1">52
v36@0:8Q16I24@?<v@?@"SGXPCResponse1">28
v56@0:8@"NSURL"16@"NSString"24@"NSString"32@"NSDate"40@?<v@?@"SGXPCResponse1">48
v48@0:8@"NSData"16@"NSString"24Q32@?<v@?@"SGXPCResponse1">40
v28@0:8B16@?<v@?@"SGXPCResponse">20
v64@0:8@"NSArray"16@"NSArray"24@"NSString"32d40@"NSArray"48@?<v@?@"SGXPCResponse1">56
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"SGXPCResponse">32
v56@0:8@"NSString"16@"NSString"24@"NSDate"32@"NSDate"40@?<v@?@"SGXPCResponse">48
v56@0:8@"NSString"16@"NSData"24@"NSString"32Q40@?<v@?@"SGXPCResponse1">48
v48@0:8@"SGSimpleMailMessage"16@"NSData"24Q32@?<v@?@"SGXPCResponse1">40
v40@0:8@"NSDictionary"16@"NSArray"24@?<v@?@"SGXPCResponse1">32
S24@0:8@16
@40@0:8@16@?24@?32
B40@0:8@16@24@32
B48@0:8@16@24@32Q40
v44@0:8@16@24i32@?36
v48@0:8@16@24B32i36@?40
B32@0:8@?16@24
{SGMContactDetailUsedApp_=Q}24@0:8@16
@"NSXPCConnection"
@"SGSuggestHistory"
@"_PASNotificationToken"
@"NSOperationQueue"
@"SGDManagerForCTS"
@"SGEKEventStoreProvider"
@"CNContactStore"
@"NSDictionary"
@"NSLock"
@"SGXpcTransaction"
@"SGSearchableItemIdTriple"
@"SGFuture"
@"SGCoalescingDropBox"
@"SGServiceContext"
@"NSDataDetector"
{?="ignorablePredictedAsIgnorable"b1"ignorablePredictedAsNeutral"b1"ignorablePredictedAsSalient"b1"neutralPredictedAsIgnorable"b1"neutralPredictedAsNeutral"b1"neutralPredictedAsSalient"b1"salientPredictedAsIgnorable"b1"salientPredictedAsNeutral"b1"salientPredictedAsSalient"b1}
@48@0:8@16@24@32B40B44
Q32@0:8@16@24
{?="documentSource"b1"harvestSource"b1"harvestedOnBattery"b1"highPriority"b1"receivedOnBattery"b1}
@24@0:8r*16
@"NSData"
B48@0:8@16@24@32@40
B56@0:8@16@24@32@40@48
{SGDSuggestManagerCTSCriteriaState="hasItemsHighPriority"B"hasItemsLowPriority"B}
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
@"<SGXPCActivityManagerProtocol>"
@?24@0:8@?16
@?16@0:8
C32@0:8@16@24
@40@0:8q16q24@32
@40@0:8@16@24^B32
q64@0:8@16@24@32Q40{_NSRange=QQ}48
{SGMEventICSSourceType_=Q}24@0:8@16
@"SGAccountsAdapter"
@"SGContactDetail"
q16@0:8
@"NSMutableSet"
@"SGRecordId"
@"SGContactDetailsHolder"
@24@0:8^I16
v32@0:8@16d24
d32@0:8@16d24
d24@0:8@16
v48@0:8d16d24@32@40
@"NSSet"
@"ACAccountStore"
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_source>"
v24@0:8@"SGStorageEvent"16
v24@0:8@"NSArray"16
v24@0:8@"SGStorageContact"16
v24@0:8@"SGStorageReminder"16
@"REMStore"
v20@0:8f16
@24@0:8Q16
f16@0:8
@"SGMIMetricsInferenceAndGroundTruth"
{?="hoursSinceReference"b1"nbCharactersInMailSubject"b1"nbTokensInMailSubject"b1"previousInteractionFromUserOnConversationInMinutes"b1"previousInteractionOnConversationInMinutes"b1"senderConnectionScore"b1"timeDifferenceFromReceptionToSaliencyInferenceInSeconds"b1}
@44@0:8@16B24@28^@36
@68@0:8@16@24@32i40@?44@52@60
@48@0:8@16i24@?28@36B44
@32@0:8@16^i24
@40@0:8@16Q24Q32
{_NSRange=QQ}16@0:8
v32@0:8{_NSRange=QQ}16
@"SGExtractionInfo"
{_NSRange="location"Q"length"Q}
v24@0:8{SGUnixTimestamp_=d}16
v64@0:8@16@24@32{_NSRange=QQ}40@56
@64@0:8@16@24@32{_NSRange=QQ}40@56
^{?={?=SS}BBBBB}16@0:8
{?="_featureType"{?="bom"S"tag"S}"hasInhumanHeaders"B"inhumanEmailAddress"B"inhumanAuthorName"B"inhumanBody"B"isTemplate"B}
@"_PASLazyResult"
@"SGMessage"
@"SGSimpleMailMessage"
@"SGTextMessage"
@"INInteraction"
@"SGHarvestQueueMetrics"
{SGUnixTimestamp_=d}16@0:8
d16@0:8
v24@0:8q16
@"SGDuplicateKey"
{SGUnixTimestamp_="secondsFromUnixEpoch"d}
@"SGSimpleTimeRange"
@36@0:8@16@24B32
@32@0:8@16{SGUnixTimestamp_=d}24
@36@0:8@16{SGUnixTimestamp_=d}24B32
v32@0:8@16{SGUnixTimestamp_=d}24
@44@0:8@16@24@32B40
@"NSUbiquitousKeyValueStore"
@"SGNoCloudNSUbiquitousKeyValueStore"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@56@0:8Q16@24@32@40@48
@36@0:8@16Q24B32
{_NSRange=QQ}24@0:8@16
v32@0:8^{__DDResult={__CFRuntimeBase=QAQ}{__DDQueryRange={__DDQueryOffset=b32b32}{__DDQueryOffset=b32b32}}{?=qq}q^{__CFArray}^{__CFString}^{__CFString}^v^{__CFDictionary}qCf}16@24
^{__DDResult={__CFRuntimeBase=QAQ}{__DDQueryRange={__DDQueryOffset=b32b32}{__DDQueryOffset=b32b32}}{?=qq}q^{__CFArray}^{__CFString}^{__CFString}^v^{__CFDictionary}qCf}
B24@0:8^{__DDResult={__CFRuntimeBase=QAQ}{__DDQueryRange={__DDQueryOffset=b32b32}{__DDQueryOffset=b32b32}}{?=qq}q^{__CFArray}^{__CFString}^{__CFString}^v^{__CFDictionary}qCf}16
@48@0:8@16@24^{_NSRange=QQ}32@40
@84@0:8I16{_NSRange=QQ}20{_NSRange=QQ}36@52{_NSRange=QQ}60@76
@92@0:8i16{_NSRange=QQ}20{_NSRange=QQ}36@52{_NSRange=QQ}60@76@84
@132@0:8@16@24@32@40I48{_NSRange=QQ}52{_NSRange=QQ}68@84{_NSRange=QQ}92@108B116B120B124B128
@92@0:8I16{_NSRange=QQ}20{_NSRange=QQ}36@52{_NSRange=QQ}60@76@84
@"NSTimeZone"
@"SGPostalAddressComponents"
@56@0:8@16@24B32@36@44B52
@44@0:8@16B24@28@36
v32@0:8q16@24
@36@0:8@16i24@28
@24@0:8@?16
B60@0:8@16@24@32@40@48B56
B64@0:8@16@24@32@40@48B56B60
v44@0:8@16@24I32d36
v48@0:8^{graph_t=II^{_vertex_t}}16@24^{DisjointSetHandle=}32@40
@"SGPatternDataFile"
@"NSHashTable"
@24@0:8#16
@"NSCache"
@28@0:8@16i24
@"NSString"24@0:8@"NSString"16
@"_PASCachedResult"
@"SGSimpleNamedEmailAddress"
@"HVHtmlParser"
@"<PMLTrainingProtocol>"
@96@0:8@16@24@32@40@48@56@64@72@80@88
I32@0:8@16^{_LXLexicon=}24
@48@0:8@16@24@32^@40
@32@0:8@16^B24
B48@0:8@16@24^@32@?40
B56@0:8@16@24@32^@40@?48
@"NSCharacterSet"
@40@0:8@16Q24i32B36
^{?=QS[3c]}24@0:8r*16
Q24@0:8r*16
i24@0:8r*16
@32@0:8r*16@24
^{?=QS[3c]}
@44@0:8@16S24@28@36
@28@0:8@16S24
@44@0:8@16@24S32@36
@52@0:8@16@24S32@36@44
@"<SGSeekable>"
@"_PASLazyPurgeableResult"
@"SGMIMetricsSubmodelStats"
@32@0:8@16#24
@48@0:8@16@24@32#40
v40@0:8Q16@24@?32
@"<SGBloomFilterChunk>"
v24@0:8(?=Q(?=II))16
B24@0:8(?=Q(?=II))16
[49200C]
@"SGConversationTracker"
B24@0:8@"<SGConversationTurnProtocol>"16
@"NSDate"16@0:8
@"NSRegularExpression"
@32@0:8@16i24i28
@36@0:8@16i24i28i32
@"MLFeatureValue"24@0:8@"NSString"16
@"NSSet"16@0:8
@88@0:8@16@24@32@40@48@56@64@72@80
@"MLMultiArray"
@24@0:8S16S20
@52@0:8@16@24@32@40S48
@68@0:8@16S24@28@36@44@52Q60
v68@0:8@16S24@28@36@44@52Q60
v52@0:8@16S24@28@36Q44
@28@0:8S16S20S24
v40@0:8@16@24S32S36
v32@0:8@?16@?24
@20@0:8S16
Q24@0:8@16
v28@0:8i16@?20
v36@0:8@16@24i32
v28@0:8i16@?<v@?@"NSObject<OS_xpc_object>">20
@"NSObject<OS_xpc_object>"20@0:8i16
q24@0:8@"NSObject<OS_xpc_object>"16
B32@0:8@"NSObject<OS_xpc_object>"16q24
v36@0:8@"NSObject<OS_xpc_object>"16@"NSObject<OS_xpc_object>"24i32
B24@0:8@"NSObject<OS_xpc_object>"16
@"NSObject<OS_xpc_object>"24@0:8@"NSObject<OS_xpc_object>"16
@"SGLongRunningTaskManager"
@24@0:8d16
{?="ageOfTheSubmodelInDays"b1"nbExtremelyDiscriminantTokensForIgnorability"b1"nbExtremelyDiscriminantTokensForSaliency"b1"nbHighlyDiscriminantTokensForIgnorability"b1"nbHighlyDiscriminantTokensForSaliency"b1}
@40@0:8@16{_NSRange=QQ}24
@44@0:8@16{_NSRange=QQ}24i40
S24@0:8Q16
v40@0:8^S16{_NSRange=QQ}24
r*16@0:8
r*20@0:8B16
r^S16@0:8
(?="ascii"[0c]"utf16"[0S])
I24@0:8@16
I24@0:8@"NSString"16
v32@0:8@"NSDictionary"16@?<v@?B>24
v32@0:8@"NSDictionary"16@?<v@?@"NSArray"@"NSDictionary"@"NSArray"@"NSDictionary">24
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary">24
v32@0:8@"NSDictionary"16@?<v@?@"NSString">24
v40@0:8@"NSArray"16@"NSArray"24@?<v@?@"NSDictionary">32
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSArray">40
v32@0:8@"NSString"16@?<v@?@"SGDOMParserResult">24
v48@0:8@16@24@32@40
@"JSVirtualMachine"
@"JSContext"
@"SGReverseTemplatesJSDataDetectors"
@"NSURL"
@"NSISO8601DateFormatter"
@"_PASCFBurstTrie"
{?=b1b1b1b1b1b27}24@0:8@16
{?=b1b1b1b1b1b27}32@0:8r*16Q24
@"SGSqliteDatabase"
@44@0:8@16i24^@28@36
B44@0:8q16i24@28@?36
i32@0:8^{sqlite3_stmt=}16r*24
i36@0:8^{sqlite3_stmt=}16r*24i32
i40@0:8^{sqlite3_stmt=}16r*24q32
i40@0:8^{sqlite3_stmt=}16r*24d32
i40@0:8^{sqlite3_stmt=}16r*24@32
^{sqlite3=}16@0:8
B40@0:8@16@?24@?32
B48@0:8@16@?24@?32@?40
B32@0:8@16@?24
@56@0:8@16@24@32@?40@?48
B24@0:8@?16
B20@0:8I16
@"SGSqliteDatabaseImpl"
@"SGSqliteDatabaseSharedLock"
v52@0:8@16@24@32@40B48
@52@0:8@16@24B32Q36B44B48
@56@0:8@16@24d32@40@48
@20@0:8C16
v72@0:8@16@24@32Q40@48@56B64B68
v68@0:8@16@24@32B40Q44@52@60
v36@0:8@16@24B32
q32@0:8@16q24
v32@0:8{SGUnixTimestamp_=d}16@?24
v40@0:8{SGUnixTimestamp_=d}16@?24Q32
v28@0:8@16B24
v32@0:8@16B24B28
@"EAEmailAddressSet"
@40@0:8q16@24@32
@40@0:8q16Q24d32
v32@0:8@16q24
v40@0:8@16q24@32
@32@0:8q16Q24
@48@0:8q16Q24d32Q40
v36@0:8@16@24f32
q32@0:8@16@24
{?=b1b1b1b1b8b20}24@0:8@16
d32@0:8@16@24
B40@0:8@16@24d32
@92@0:8B16d20d28I36d40I48B52B56B60I64I68B72B76B80B84B88
v28@0:8d16I24
v48@0:8@16@24@32d40
@"NSArray"16@0:8
@24@0:8@"NSArray"16
@24@0:8^{sqlite3_stmt=}16
@28@0:8^{sqlite3_stmt=}16B24
f24@0:8@16
{?="attachmentsProbability"b1"conversationProbability"b1"domainFromSenderProbability"b1"listIdProbability"b1"mailboxProbability"b1"mailboxTypeProbability"b1"personCCRecipientsProbability"b1"personFromSenderInDyadicConversationProbability"b1"personFromSenderProbability"b1"personToRecipientsProbability"b1"standardMailRulesProbability"b1"subjectContentProbability"b1"subjectCountStatsProbability"b1}
Q40@0:8Q16Q24Q32
Q24@0:8Q16
d32@0:8d16q24
Q40@0:8@16@24Q32
Q56@0:8@16@24Q32Q40Q48
@64@0:8@16d24d32@40@48@56
v40@0:8@"WKWebView"16@"WKNavigationAction"24@?<v@?q>32
v48@0:8@"WKWebView"16@"WKNavigationAction"24@"WKWebpagePreferences"32@?<v@?q@"WKWebpagePreferences">40
v40@0:8@"WKWebView"16@"WKNavigationResponse"24@?<v@?q>32
v32@0:8@"WKWebView"16@"WKNavigation"24
v40@0:8@"WKWebView"16@"WKNavigation"24@"NSError"32
v40@0:8@"WKWebView"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"WKWebView"16
v40@0:8@"WKWebView"16@"NSURLAuthenticationChallenge"24@?<v@?B>32
v40@0:8@"WKWebView"16@"WKNavigationAction"24@"WKDownload"32
v40@0:8@"WKWebView"16@"WKNavigationResponse"24@"WKDownload"32
@"NSObject<OS_dispatch_semaphore>"
@"WKWebView"
@64@0:8@16@24d32d40d48@56
@48@0:8d16d24d32@40
@"NSData"16@0:8
@64@0:8@"NSString"16@"NSString"24d32d40d48@"NSData"56
@48@0:8d16d24d32@"NSData"40
@60@0:8i16@20@28@36d44d52
@68@0:8i16@20@28d36d44d52d60
@84@0:8i16@20@28@36d44d52d60d68@76
Q24@0:8q16
@28@0:8C16q20
@"SGMIMetricsMailIntelligenceForMessage"
{?="deploymentId"b1}
:24@0:8^{objc_property=}16
v48@0:8@16@24@32^v40
@"CKRecordID"
@"CKServerChangeToken"
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
@40@0:8@?16@?24Q32
@44@0:8@?16@?24Q32B40
@"_PASKVOHandler"
@"CKDatabase"
@"APSConnection"
@"CKContainer"
@"_SGDCloudKitSyncPersistedState"
@"NSOperation"
@"NSError"
^{ct_green_tea_logger_s=}
@"SGDCloudKitSync"
v32@0:8@?16@24
@"NSMapTable"
@"<NSObject>"
v40@0:8@?16@24#32
@32@0:8C16C20@24
@"NSMutableData"
@40@0:8q16q24q32
q24@0:8q16
{?="category"b1"count128KBTo512KB"b1"count32KBTo128KB"b1"count512KBTo2MB"b1"count8KBTo32KB"b1"countOver2MB"b1"countUpTo8KB"b1}
@76@0:8I16@20{_NSRange=QQ}28@44@52B60@64B72
@92@0:8I16@20@28{_NSRange=QQ}36@52B60{_NSRange=QQ}64@80B88
B28@0:8@16B24
@80@0:8@16@24@32@40@48@56@64@72
@"SGStorageEvent"
@"SGStorageContact"
@"SGStorageReminder"
{?="predictedMissingElementScore"b1"foundMatchingElement"b1}
v44@0:8@16Q24B32@?36
v56@0:8@16Q24Q32@?40@?48
v52@0:8@16Q24B32Q36@?44
v72@0:8@16Q24@?32Q40@?48@56B64B68
B32@0:8@16Q24
v72@0:8@16@24@32@40@48@56@?64
C24@0:8@16
v56@0:8@16@24@32@40Q48
v48@0:8@16@24@32Q40
@44@0:8r*16@?24@?32I40
v32@0:8@?16d24
{_opaque_pthread_cond_t="__sig"q"__opaque"[40c]}
@"NSObject<OS_os_transaction>"
@64@0:8@16@24@32@40@48@56
q48@0:8@16@24@32@40
@36@0:8{?=SS}16Q20Q28
@36@0:8{?=SS}16{_NSRange=QQ}20
{?=SS}16@0:8
{?="category"S"subtype"S}
{_NSRange=QQ}48@0:8@16@24@32@40
{_NSRange=QQ}52@0:8@16{_NSRange=QQ}24B40@44
{_NSRange=QQ}40@0:8@16@24@32
B56@0:8@16{_NSRange=QQ}24Q40Q48
B40@0:8@16^{_NSRange=QQ}24^B32
@"CNContact"
{?="numberOfLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20"b1"numberOfLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20"b1"numberOfPredictedAttachmentOnLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20"b1"numberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20"b1"totalNumberOfEmailsProcessedForAttachmentDetectionRoundedToClosestMultipleOf20"b1"totalNumberOfEmailsProcessedForFollowUpDetectionRoundedToClosestMultipleOf20"b1"totalNumberOfEmailsProcessedForRecipientDetectionRoundedToClosestMultipleOf20"b1}
{SGUnixTimestamp_=d}24@0:8@16
@56@0:8{_NSRange=QQ}16@32@40@48
B40@0:8{_NSRange=QQ}16@32
B32@0:8@16^@24
@"SGPipelineEntity"
@36@0:8@16r*24B32
@32@0:8@16r*24
@36@0:8@16B24^B28
v48@0:8@16{_NSRange=QQ}24@?40
@36@0:8q16Q24B32
@40@0:8@16q24@?32
@56@0:8@16@?24Q32@40@48
@40@0:8@16@?24@32
@"HKHealthStore"
v48@0:8@16@24{SGMSelfIdModelType_=Q}32Q40
@60@0:8@16@24^{_NSRange=QQ}32{_NSRange=QQ}40B56
v52@0:8@16@24C32@36C44C48
@40@0:8{_NSRange=QQ}16@32
@32@0:8@16^{_NSRange=QQ}24
@"SGDetectedAttributeML"
@"SGQuickResponsesML"
@"SGContactPipelineHelper"
@"SGHKHealthStore"
v40@0:8@16@24Q32
v32@0:8d16@24
v40@0:8d16@24@32
v40@0:8@16Q24Q32
@56@0:8Q16@24{_NSRange=QQ}32@48
@20@0:8B16
@"TRIClient"
@"TRIRolloutIdentifiers"
@80@0:8@16@24Q32@40@48@56@64@72
v40@0:8@16@24q32
@32@0:8@16^q24
@40@0:8@16B24B28B32i36
@"SGM2HarvestCost"
@"SGMIFeatureStore"
@"_PASSqliteDatabase"
^{sqlite3_tokenizer_module=i^?^?^?^?^?^{sqlite3}}
^{sqlite3_tokenizer=^{sqlite3_tokenizer_module}}
@40@0:8@16@24B32B36
@48@0:8@16@24B32@36B44
@44@0:8@16B24@28^B36
v24@0:8^@16
@52@0:8@16@24B32@36B44B48
@28@0:8q16B24
v36@0:8@16B24@?28
v40@0:8@16B24B28@?32
v52@0:8@16B24Q28@?36@?44
@40@0:8@16Q24@?32
@44@0:8@16B24Q28@?36
@40@0:8@16B24B28Q32
d40@0:8@16@24@32
{_PASDBIterAction_=B}84@0:8@16@24q32@40@48@56@64@72B80
@28@0:8B16Q20
@40@0:8q16@24B32B36
q24@0:8Q16
@44@0:8{SGUnixTimestamp_=d}16{SGUnixTimestamp_=d}24Q32I40
@52@0:8{SGUnixTimestamp_=d}16{SGUnixTimestamp_=d}24@32Q40I48
@40@0:8{SGUnixTimestamp_=d}16{SGUnixTimestamp_=d}24Q32
@48@0:8{SGUnixTimestamp_=d}16{SGUnixTimestamp_=d}24@32Q40
@60@0:8{SGUnixTimestamp_=d}16{SGUnixTimestamp_=d}24Q32@40I48@?52
B36@0:8B16@20^@28
@"SGDatabaseJournal"
{atomic_flag="_Value"AB}
@"SGJournal"
@"SGSpotlightContactsAdapter"
@"SGSGtoCNContactsCacheUpdateAdapter"
@"SGBloomFilter"
@"NSMutableOrderedSet"
@"SGEnrichmentWritebackAdapter"
@"SGKeyValueCacheManager"
v40@0:8@"INInteraction"16@"SGPipelineEntity"24@"SGRequestContext"32
@40@0:8@16@24d32
@48@0:8@16@24@32d40
B24@0:8Q16
v44@0:8@16@24Q32i40
v52@0:8@16@24@32Q40i48
v68@0:8@16@24@32@40@48Q56i64
@"<SGReverseTemplateJS>"
v40@0:8@16Q24@32
v48@0:8@16@?24Q32@40
v64@0:8@16@24@?32@40@48Q56
v72@0:8@16@24@?32@40@48Q56@64
@48@0:8@16@24d32@40
@32@0:8^{__DDResult=}16@24
v40@0:8^{__DDResult=}16@24@32
@"NSDateFormatter"
@116@0:8@16@24@32@40@48@56@64@72f80d84d92d100@108
{?="accuracy"b1"latitude"b1"longitude"b1"quality"b1"locationType"b1}
@84@0:8@16B24@28@36@44@52@60@68@76
@76@0:8@16B24@28@36@44@52@60@68
@68@0:8@16B24@28@36@44@52@60
@40@0:8@16B24q28B36
@"SGMailClientUtil"
@"SGMIBiomeReducedMessageEvents"
@"_DKKnowledgeStore"
{?="fromStatus"b1"toStatus"b1}
@76@0:8@16@24@32B40@44{_NSRange=QQ}52@68
@84@0:8@16Q24@32B40@44@52@60{_NSRange=QQ}68
B56@0:8Q16Q24Q32^@40@?48
B64@0:8Q16Q24Q32^@40@48@?56
v48@0:8Q16Q24Q32@?40
@48@0:8@16@24Q32^@40
@80@0:8Q16Q24@32@40@48@56Q64^@72
v44@0:8@16B24@28@36
v24@0:8@"SGSqlEntityStore"16
@"NSNumber"16@0:8
@92@0:8@16@24@32@40@48@56@64d72@80B88
@100@0:8@16@24@32@40@48@56@64@72d80@88B96
C44@0:8@16@24d32B40
@64@0:8Q16Q24Q32B40@44B52@56
@72@0:8Q16Q24Q32B40@44B52@56@64
{?="modelVersion"b1"offset"b1"dateIsCorrect"b1"didRegexTrigger"b1"didResponseKitTrigger"b1"isFromCongratulation"b1}
@48@0:8@16@24@32q40
@48@0:8@16@24q32@40
@48@0:8@16@24@32Q40
@72@0:8@16@24@32@40@48@56Q64
v56@0:8@16@24@32@40@48
@"SGIdentityKey"
@"NSTimeZone"16@0:8
@56@0:8@"NSDate"16@"NSTimeZone"24@"NSDate"32@"NSTimeZone"40@"NSArray"48
@112@0:8@16@24@32@40@48{SGUnixTimestamp_=d}56{SGUnixTimestamp_=d}64@72@80@88@96I104B108
v32@0:8@"NSArray"16@"NSString"24
v32@0:8@"NSDate"16@"NSString"24
v32@0:8@"CSUserAction"16@"CSSearchableItem"24
v40@0:8@"NSArray"16@"NSString"24@"NSString"32
v32@0:8@"NSString"16@"NSString"24
@"SGDSuggestManager"
@48@0:8@16@24@32@?40
@56@0:8@16@24^{?={?=SS}iiiBBBBBfiiiiiB}32@40@48
@40@0:8@16@24^{?={?=SS}iiiBBBBBfiiiiiB}32
v56@0:8@16@24^@32^@40q48
B48@0:8@16@24B32B36q40
B64@0:8@16@24^@32^@40q48B56B60
@40@0:8@16^{?={?=SS}iiiBBBBBfiiiiiB}24@32
@56@0:8@16@24@32@40^@48
@"SGDCKInteractionInfo"
@"SGDCKTimeRange"
{?="creationTimestamp"b1"lastModifiedTimestamp"b1"parentEntityType"b1"categoryType"b1"allDay"b1"cancelled"b1}
d40@0:8@16@24d32
@36@0:8@16B24@28
@64@0:8@16@24@32@40@48d56
@"SGMITokenCounts"
@48@0:8@16B24B28@32@40
^v16@0:8
{_NSRange=QQ}40@0:8{_NSRange=QQ}16Q32
@48@0:8@16{_NSRange=QQ}24@?40
q36@0:8@16I24@28
f32@0:8@16@24
{SGMContactDetailOwner_=Q}16@0:8
{SGMContactDetailFoundIn_=Q}16@0:8
v64@0:8@16q24@32Q40@48@?56
@100@0:8@16@24@32@40@48@56@64@72@80@88B96
@28@0:8B16@20
@36@0:8B16@20@28
v48@0:8r*16@24Q32@?40
i48@0:8r*16@24Q32@?40
@"SGRe2PrefilterTree"
@"SGMIWarningsDetectionRegex"
@44@0:8@16{_NSRange=QQ}24B40
@72@0:8@16@24@32@40@48@56@64
@"SGMIWarningsDetectionRegexes"
@64@0:8{_NSRange=QQ}16{_NSRange=QQ}32@48@56
@"NSIndexSet"
^{__CFString=}
{?="buffer"[64S]"theString"^{__CFString}"directUniCharBuffer"^S"directCStringBuffer"*"rangeToBuffer"{?="location"q"length"q}"bufferedRangeStart"q"bufferedRangeEnd"q}
@"SGMicrodataItem"
@"SGMicrodataParserStackItem"
@32@0:8Q16Q24
Q32@0:8Q16@24
v44@0:8Q16@24@?32i40
B20@0:8i16
@48@0:8@16@24@32o^@40
@52@0:8@16@24@32B40o^@44
v32@0:8@"CSSearchableIndex"16@?<v@?>24
v40@0:8@"CSSearchableIndex"16@"NSArray"24@?<v@?>32
v24@0:8@"CSSearchableIndex"16
@"NSData"48@0:8@"CSSearchableIndex"16@"NSString"24@"NSString"32o^@40
@"NSURL"52@0:8@"CSSearchableIndex"16@"NSString"24@"NSString"32B40o^@44
v56@0:8@16@24Q32@40@?48
@"SGMIDomainCountingTable"
@"_PASSqliteDatabase"16@0:8
@"NSDictionary"16@0:8
@"NSArray"24@0:8^I16
@32@0:8@?16@24
@48@0:8q16@24@32@40
@64@0:8q16Q24d32@40@48@56
v28@0:8B16@20
v44@0:8@16@24B32B36B40
v48@0:8@16q24@32@40
B40@0:8@16@?24@32
v56@0:8@16q24q32q40@48
@"_PASDatabaseMigrator"
@40@0:8@16{SGUnixTimestamp_=d}24@32
@40@0:8@16q24@32
@"NSObject<SGEntityKey>"
q32@0:8@16^@24
q40@0:8@16q24^@32
@"EMDaemonInterface"
@"ECDKIMVerifier"
@"_PASLRUCache"
v60@0:8@16S24S28@32@40C48d52
@32@0:8@16S24S28
@"SGTokenizerMappingTransformer"
@"SGNameMappingTransformer"
r^v24@0:8Q16
{?="end"b1"endUTCOffsetSeconds"b1"start"b1"startUTCOffsetSeconds"b1"floating"b1}
@100@0:8@16@24@32@40@48C56@60C68@72C80@84@92
@"SGStorageLocation"
{?="conversationAge"b1"domainFromSenderAge"b1"personCCRecipientsAge"b1"personFromSenderAge"b1"personFromSenderInDyadicConversationAge"b1"personToRecipientsAge"b1"subjectContentAge"b1}
@24@0:8r^v16
B24@0:8{SGUnixTimestamp_=d}16
{_NSRange=QQ}40@0:8{_NSRange=QQ}16@32
@40@0:8@16B24B28B32B36
@40@0:8Q16@24@32
@56@0:8@16@24B32B36B40B44B48B52
{_NSRange=QQ}32@0:8{_NSRange=QQ}16
@52@0:8@16@24B32B36B40B44B48
#24@0:8@16
{?="blockedWarningCount"b1"negativeEngagement"b1"noEngagement"b1"positiveEngagement"b1"type"b1"incomingMessage"b1}
v28@0:8@16S24
@"SGMIMetricsSubmodelsProbabilities"
{?="missingAttachmentPredictionPerformanceInMilliSeconds"b1"missingRecipientPredictionPerformanceInMilliSeconds"b1"saliencyPredictionPerformanceInMilliSeconds"b1"predictedSaliency"b1"predictedSaliencyScore"b1"estimatedGroundTruth"b1}
@"SGMicrodataDocument"
{?="s"[2Q]}
v44@0:8@16@24@32B40
B48@0:8@16@24@32^@40
B40@0:8@16@24^@32
{?="documentSource"b1"significantWork"b1}
@40@0:8Q16i24i28@32
B36@0:8i16@20@?28
@?24@0:8@16
B40@0:8@16@24^B32
@"SGDatabaseJournalFile"
-3)))))))9LR
%.MMMMMQbs
MMMM
!',4
-uu7A
Mkuuuuuuu}ZU
:::::::::::::::::::::::::::::::::::

33@3
RMWhMm
"(.4:@FL
2CTev
SVY\_be
twz}
\F_behkFFnqtFFwz
58;>ADGJMPSVY\_
,04DZ^bfjnrvz
#)/@Qbsy
n}-<K
99999999999999999999999999999999999999999@9999B9999999D999F9H9J9N
D:^]
-0369
'///
,///0////
?JT{
&7HYj
@(#)PROGRAM:CoreSuggestionsInternals  PROJECT:Suggestions-1193.0.4
N3re28CompilerE
N3re26Regexp6WalkerINS_4FragEEE
N3re217NumCapturesWalkerE
N3re219NamedCapturesWalkerE
N3re218CaptureNamesWalkerE
 * . ` d f o 
 * . ` d f o 
 d f p t ~ 
!%!'!)!,!1!3!M!O!_!
$&$@$J$`$
)L+P+Y+
0 00070<0?0
1 2_2
-%-'-'-----
,.,0,^,0
&!&!@
0!0)080;0
.0/011
2`2~2`
 *0-0
3W3f
(*359==XY`a
q q 
!$!$!&!&!(!(!*!-!/!9!<!?!E!I!N!N!
,.,0,^,`,
-%-'-'-----0-g-o-o-
-/./.
01050;0<0A0
1-111
q q 
 *!+!2!2!N!N!`!
!/!/!4!4!9!9!<!=!F!I!N!N!
!0,^,a,a,e,f,h,h,j,j,l,l,q,q,s,t,v,{,
-%-'-'-----A
q q 
 |,},o-o-/./.
01050;0;0
(*359==XY`a
5!8!0-g-
0<0<0A0
1-111
!$!$!&!&!(!(!*!-!0!3!>!?!E!E!
,.,`,`,b,d,g,g,i,i,k,k,m,p,r,r,u,u,~,
>DFHJMUVbc
-*0/0
AD
.0/0#
>@FHJMUVbc
-*0-0
fox~
p p t y 
0!0)080:0
1 2)2H2O2Q2_2
fo
0!0)080:0
x~p
p p t y 
 P!_!
1 2)2H2O2Q2_2
 ' 0 C E Q S ^ } ~ 
#)#*#h'u'
,p-p-
...0.;.
00000=0=0
? @ T T 3
.:.;.
00000
F F ~ ~ 
#*#*#i'i'k'k'm'm'o'o'q'q's's'u'u'
)#.#.%.%.'.'.).).
 : : 
.!.!.@
 9 9 
...
. . .!
   ' 0 8 ; > A C G Q S S U ^ 
,p-p-
.*...0.9.
0=0=0
 E E } } 
#)#)#h'h'j'j'l'l'n'n'p'p'r'r't't'
)".".$.$.&.&.(.(.
000
D D R R z | 
!#!%!%!'!'!)!)!.!.!:!;!@!D!J!M!O!O!
##(#+#
$&$@$J$
)L+P+Y+
0 0 06070>0?0
2*2G2P2P2`2
D D R R z | 
!@!D!K!K!
" #!#|#|#
%o&o&
*0+D+G+L+)
!#!%!%!'!'!)!)!.!.!:!;!J!J!L!M!O!O!
#"#(#+#{#}#
$&$@$J$
&n&p&
+/+E+F+P+Y+
0 0 06070>0?0
2*2G2P2P2`2
(*359=DFHJMUVXY`cfox
0-g-o-p-
 ( ) / / _ _ 
0( ( ) )  
 / / _ _ 
0?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?
N3re214ToStringWalkerE
N3re26Regexp6WalkerIiEE
N3re210PCREWalkerE
N3re26Regexp6WalkerIbEE
N3re217EmptyStringWalkerE
N3re214SimplifyWalkerE
N3re26Regexp6WalkerIPS0_EE
N3re29Prefilter4Info6WalkerE
N3re26Regexp6WalkerIPNS_9Prefilter4InfoEEE
333333
u2A333333
MbP?
com_apple_mobilesms_suggested_contact_name
com_apple_mobilesms_suggested_contact_photo
urn:biz:
SGTextMessage.m
Invalid parameter not satisfying: %@
searchableItem.domainIdentifier
attachmentDomain
conversationIdentifier
senderIsAccountOwner
sender
SGMissingDomainIdentifier.uniqueIdentifierFallback.%@
identifier
PER_MESSAGE_TRANSFORMER
SGConversationFlatteningTransformer.m
Unexpected input type for %@: %@, 
INPUT_CONVERSATION
SG_MODEL_INPUT_TARGET_MESSAGE_INDEX
INPUT_TEXT
DD_MATCHES
TARGET_MATCH
SG_MODEL_INPUT_TARGET_RANGE
SG_MODEL_DISABLE_TARGET_MAPPING
SG_FEATURE_TARGET_SENT__
SG_FEATURE_END_OF_MESSAGE
@type
http://schema.org/Organization
reservationFor
arrivalTime
departureTime
arrivalPlatform
departurePlatform
provider
http://schema.org/BusReservation
http://schema.org/BusTrip
http://schema.org/BusStation
busName
busNumber
arrivalBusStop
departureBusStop
Bus Trip
SelfIdModelScore
%@ %@
model
result
supervision
SGMSelfIdModelTypeRegex
SGMSelfIdModelTypeLogistic
SGMSelfIdModelTypeLinear
SGMSelfIdModelTypeCoreNLP
(unknown: %i)
SGMSelfIdSupervisionTypeNone
SGMSelfIdSupervisionTypeContact
SGMSelfIdSupervisionTypeAppleContact
SGMSelfIdSupervisionTypePreviousModel
SGMSelfIdSupervisionTypeRegex
http://schema.org/GeoCoordinates
latitude
longitude
SuggestdExitReason
exitCode
AutocompleteUserSelectedContact
wasSuggestedContact
wasKnownContact
SGMContactDetailUsedAppMessages
SGMContactDetailUsedAppPhone
SGMContactDetailUsedAppMail
SGMContactDetailUsedAppCalendar
SGMContactDetailUsedAppOther
SGMContactDetailUsedAppFaceTime
SGMContactDetailUsedAppAddressBook
SGMContactDetailUsedAppSpringBoard
SGMContactDetailUsedAppHome
SGMContactDetailUsedAppMaps
SGMContactDetailUsedAppFitness
SGMContactDetailUsedAppReminders
BundleIdsTrackedAsOther
bundleId
SGInteractionParser.m
interaction
person
interactionIdentifier
v24@?0@"NSString"8@"NSString"16
ContactCreated
SELECT  url, title, received_from_handle, bundle_id, group_id, doc_id, seconds_from_1970, document_title, document_seconds_from_1970, document_time_interval, flags  FROM urls ORDER BY seconds_from_1970 DESC LIMIT :limit
 AND _pas_block(:containingSubstringBlock, url) 
 AND (flags & :flagFilter) = 0 
SELECT  url, title, received_from_handle, bundle_id, group_id, doc_id, seconds_from_1970, document_title, document_seconds_from_1970, document_time_interval, flags  FROM urls WHERE bundle_id NOT IN _pas_nsset(:excludingBundleIdentifiers)   AND (seconds_from_1970 BETWEEN :startDate AND :endDate        OR document_seconds_from_1970 BETWEEN :startDate AND :endDate)   %@ %@ ORDER BY seconds_from_1970 DESC LIMIT :limit
:excludingBundleIdentifiers
:containingSubstringBlock
:flagFilter
UPDATE urls SET flags = (flags | :flagsToSet) WHERE _pas_block(:block, url)
:flagsToSet
urls
seconds_from_1970
document_seconds_from_1970
document_time_interval
bundle_id
doc_id
received_from_handle
group_id
document_title
flags
INSERT OR REPLACE INTO urls (url, title, received_from_handle, bundle_id, group_id, doc_id, seconds_from_1970, document_title, document_seconds_from_1970, document_time_interval, flags) VALUES (:url, :title, :receivedFromHandle, :bundleIdentifier, :groupIdentifier, :documentIdentifier, :secondsFrom1970, :documentTitle, :documentDate, :documentTimeInterval, :flags)
:url
:receivedFromHandle
:groupIdentifier
:documentIdentifier
:secondsFrom1970
:documentTitle
:documentDate
:documentTimeInterval
:flags
DELETE FROM urls ORDER BY id DESC LIMIT -1 OFFSET :keepThisMany
:keepThisMany
DELETE FROM urls WHERE seconds_from_1970 < :seconds
:seconds
SELECT  url, title, received_from_handle, bundle_id, group_id, doc_id, seconds_from_1970, document_title, document_seconds_from_1970, document_time_interval, flags  FROM urls WHERE bundle_id = :bundleId  AND (seconds_from_1970 BETWEEN :startDate AND :endDate       OR document_seconds_from_1970 BETWEEN :startDate AND :endDate)
DELETE FROM urls WHERE bundle_id = :bundleIdentifier
DELETE FROM urls WHERE bundle_id = ? AND ((group_id GLOB ?) 
OR (group_id GLOB ?) 
DELETE FROM urls WHERE bundle_id = :bundleIdentifier AND doc_id IN _pas_nsarray(:documentIdentifiers)
:documentIdentifiers
locale
featurizer
modelSource
[vector isKindOfClass:PMLSparseVector.class]
-[SGModel predictForInput:]
SGModels.m
[[self class] isEqual:features.source.modelClass]
@"SGTransformerInstance"8@?0
Undefined class for model objective %lu
%@ must implement +newTransformerInstanceForLanguage:
%PHONE%
transformer
sessionDescriptor
modelClass
self.transformer
self.modelClass
TOKEN_WINDOW
NGRAMS
TW=%@&NG=%@&FV=%@
SGDetectedAttributeDissector
SGDDMatchPhone
SGDDMatchEmailAddress
SGDDMatchPostalAddress
SGDDMatchEmailAddressForIMessage
SGDDMatchPostalAddressForIMessage
SelfIdentificationPhrase
ContactSharing
TextMessageBirthdayCongrats
NSString *rulesKeyForObjective(SGModelObjective)
Unknown SGModelObjective = %lu
SG_FIM_ML_PREDICT_KEY
SG_FIM_ML_EVALUATE_KEY
SG_FIM_ML_TRAIN_KEY
NSString *rulesKeyForMode(SGModelMode)
Unknown SGModelMode = %lu
ContactDetailExtraction
source
detail
outcome
foundInSenderCNContact
extractionModelVersion
isUnlikelyPhone
extractionSignatureSource
SGMDocumentTypeEmail
SGMDocumentTypeMessage
SGMContactDetailTypeEmail
SGMContactDetailTypePhone
SGMContactDetailTypeAddress
SGMContactDetailTypeOther
SGMContactDetailTypeBirthday
SGMContactDetailExtractionOutcomeExtracted
SGMContactDetailExtractionOutcomeIgnoredSuspectedBulkMail
SGMContactDetailExtractionOutcomeIgnoredQuotedRegion
SGMContactDetailExtractionOutcomeIgnoredPattern
SGMContactDetailExtractionOutcomeIgnored
SGMContactDetailOwnerNotFound
SGMContactDetailOwnerSender
SGMContactDetailOwnerNotSender
SGMContactDetailExtractionSignatureSourceHMM
SGMContactDetailExtractionSignatureSourceDataDetectors
SGMContactDetailExtractionSignatureSourceNoSignatureSource
ContactDetailSent
foundIn
hasName
tokens
SGMContactDetailFoundInNotFound
SGMContactDetailFoundInSenderCNContact
SGMContactDetailFoundInOtherCNContact
SGMContactDetailFoundInSuggestions
SGMLowCount0
SGMLowCount1
SGMLowCount2
SGMLowCount3to4
SGMLowCount5orMore
ContactsInterfaceCacheCount
SELECT title, dueDateComponents, dueLocationId, dueLocationType, dueLocationTrigger, creationDate, contactIdentifier, reminderStatus FROM reminders WHERE id = ?
:dueDateComponents
:dueLocationId
:dueLocationType
:dueLocationTrigger
:sourceUrl
:creationDate
:opaqueKey
:uniqueKey
:contactIdentifier
:reminderStatus
INSERT INTO reminders (entityId, duplicateKey, sourceKey, title, dueDateComponents, dueLocationId, dueLocationType, dueLocationTrigger, sourceUrl, creationDate, opaqueKey, uniqueKey, contactIdentifier, reminderStatus) VALUES (:entityId, :duplicateKey, :sourceKey, :title, :dueDateComponents, :dueLocationId, :dueLocationType, :dueLocationTrigger, :sourceUrl, :creationDate, :opaqueKey, :uniqueKey, :contactIdentifier, :reminderStatus)
SELECT sourceKey FROM reminders WHERE duplicateKey = ?
SELECT duplicateKey FROM reminders WHERE entityId = ?
SELECT entityId FROM reminders WHERE duplicateKey = ?
SELECT duplicateKey, sourceKey FROM reminders WHERE id = :primaryKey
SGSqlEntityStore+Reminders.m
origin
SELECT entityId FROM reminders WHERE id = ?
SELECT id FROM reminders WHERE entityId = ?
ContactsInterfaceCacheHit
cacheHit
FoundInMailModelScore
contactDetail
correct
mode
SGMFoundInMailModelTypeRegex
SGMFoundInMailModelTypeLogistic
SGMFoundInMailModelTypeLinear
SGMFoundInMailModelTypeNaiveBayes
SGFoundInMailModelModeTraining
SGFoundInMailModelModeEvaluation
SGFoundInMailModelModePrediction
SGMFoundInMailSupervisionTypeNone
SGMFoundInMailSupervisionTypeContact
SGMFoundInMailSupervisionTypeAppleContact
SGMFoundInMailSupervisionTypePreviousModel
INSERT OR REPLACE INTO metadata (key, value) VALUES (:key, :value)
DELETE FROM metadata WHERE key = :key
SELECT value FROM metadata WHERE key = :key LIMIT 1
@16@?0@"_PASSqliteStatement"8
PREDICTION_PARAMETERS
TARGET_LANGUAGE
CONFIDENCE_THRESHOLDS
@"NSMutableDictionary"24@?0@"NSDictionary"8@"NSString"16
NEGATIVE_SAMPLE_CHOPLESS
B12@?0I8
core
location
time
polarity
EVENT_CORE__RESERVATION_ID
EVENT_LOCATION__START_ADDRESS
EVENT_LOCATION__END_ADDRESS
EVENT_LOCATION__START_PLACE
EVENT_LOCATION__END_PLACE
EVENT_TIME__START_DATETIME
EVENT_TIME__END_DATETIME
TITLE__HOTEL_RESTAURANT_NAME
TITLE__MOVIE_TICKET_NAME
TITLE__CAR_RENTAL_NAME
TITLE__EVENT_NAME
POLARITY__EVENT_YES
SGStructuredEventDocument: reservationId, unable to resolve candidates
SGStructuredEventDocument: address, unable to resolve candidates
SGStructuredEventDocument: %@, unable to resolve candidates
idx (%lu) is out of range (%lu)
trialMetadata
backgroundTrialMetadata
hoursSinceReference
ctsJobConstraints
hoursSinceLastIncrementalUpdate
isSubmodelRebuilt
daysAvailableDuringIncrementalUpdate
daysProcessedDuringIncrementalUpdate
mailsProcessedDuringIncrementalUpdate
deletedTokensCountToComplyToCappingPolicy
deletedEmailsCount
rollbackedSlicesCountToComplyToPostDeletionPolicy
rollbackedEmailsCountToComplyToPostDeletionPolicy
submodelsStats
biomeAggregationPerformanceInMilliSeconds
submodelsUpdatePerformanceInMilliSeconds
submodelsPruningForCappingPolicyPerformanceInMilliSeconds
cumulatedSubmodelsRollbackForPostDeletionPolicyPerformanceInMilliSeconds
CancelAfterDeadline
CpuIntensive
DiskIntensive
StartHandler
SuspendHandler
MemoryIntensive
SchedulingPriorityBackground
SchedulingPriorityDefault
SchedulingPriorityMaintenance
SchedulingPriorityUtility
SchedulingPriorityUserInitiated
SchedulingPriorityUserInitiatedOvercommit
RequestsApplicationLaunch
RequiresInexpensiveNetworking
RequiresNetwork
RequiresPlugin
TriggersRestart
No proposal found
No title found for message
No dueDate nor dueLocation found in message
No confirmation found
isSent
body
suggest_tool_preprocess
ReminderDissector full extraction
suggest_tool
extractionStatus
errorMessage
processingLanguage
modelDescription
SGReminderDissector.m
textMessage.isSent
polarityEmojisMapping
verbsMapping
ACCOUNT_OWNER
CONTACT
IS_%@
SG_QA_REMINDER_TEST
TEST REMINDER
defaultManager
RTRoutineManager
Class getRTRoutineManagerClass(void)_block_invoke
Unable to find class %s
void *CoreRoutineLibrary(void)
SearchResultsIncludedPureSuggestion
SMS_FILTER_INEN_CLASSIFICATION
trialEventExtractionAssets
trialEventClassifierModel
trialEventClassifierThreshold
trialEventExtractionMessageProcessingLimit
trialEventExtractionRateLimitInterval
v16@?0@"<TRINamespaceUpdateProtocol>"8
v16@?0@"SGMessageEventDissectorTrialClientWrapperGuardedData"8
SearchResultsUserSelectedContact
SerializedContactsCacheHit
SqliteErrors
errorCode
com.apple.suggestions.plugin.SGURLPlugin
All Mailboxes
Unknown Mailbox
lastMailboxCheckedForTopSGMISaliency
lastLimitCheckedForTopSGMISaliency
SELECT score, mailboxId, isSalient, isGteSalient, isCounted, creationTimestamp FROM mailIntelligence_saliency WHERE messageId = :messageId
score
isSalient
isGteSalient
isCounted
mailboxId
SELECT messageId, score, isSalient, creationTimestamp FROM mailIntelligence_saliency WHERE isSalient != 0
 AND mailboxId = :mailboxId
 ORDER BY creationTimestamp DESC LIMIT :limit
:mailboxId
SELECT messageId, mailboxId, score, isSalient, creationTimestamp FROM mailIntelligence_saliency WHERE 1
 AND mailboxId IN _pas_nsarray(:mailboxIds)
 AND creationTimestamp > :minDate
%@ ORDER BY score %@ LIMIT :limit
DESC
:mailboxTypes
:mailboxIds
:minDate
SELECT id FROM mailIntelligence_saliency WHERE messageId = :messageId
UPDATE mailIntelligence_saliency SET messageId = :messageId, mailboxId = :mailboxId, score = :score, isSalient = :isSalient, isGteSalient = :isGteSalient, isCounted = :isCounted WHERE id = :id
:score
:isSalient
:isGteSalient
:isCounted
INSERT INTO mailIntelligence_saliency (creationTimestamp, messageId, mailboxId, score, isSalient, isGteSalient, isCounted) VALUES (:creationTimestamp, :messageId, :mailboxId, :score, :isSalient, :isGteSalient, :isCounted)
UPDATE mailIntelligence_saliency SET creationTimestamp = :creationTimestamp WHERE id = :id
DELETE FROM mailIntelligence_saliency
UPDATE mailIntelligence_saliency SET isSalient=1, score=1
UPDATE mailIntelligence_saliency SET isSalient=0, score=0
SELECT stagedLog, isLogged FROM mailIntelligence_saliency WHERE messageId = :messageId
stagedLog
isLogged
UPDATE mailIntelligence_saliency SET stagedLog=:stagedLog WHERE messageId = :messageId
:stagedLog
UPDATE mailIntelligence_saliency SET isLogged = TRUE, stagedLog = NULL WHERE messageId = :messageId
SuggestedContactDetailShown
activeTrialMetadata
activeAggregatedAccuracyLogForThePastFourWeeks
activeAggregatedAccuracyLogSinceModelInitialization
backgroundAggregatedAccuracyLogForThePastFourWeeks
backgroundAggregatedAccuracyLogSinceModelInitialization
SuggestedContactDetailUsed
UnknownShown
kMDItemEmailAddresses
kMDItemRecipientEmailAddresses
kMDItemAuthorEmailAddresses
kMDItemInstantMessageAddresses
kMDItemRecipientAddresses
kMDItemAuthorAddresses
kMDItemPhoneNumbers
 (%@ == "*%@*"cwdt) 
 ( %@ ) 
 || 
$time.this_year(-1)
$time.iso(%@)
$time.today(1)
 (kMDItemContentType == '%@') 
%@ %@ InRange(kMDItemContentCreationDate,%@,%@) %@ %@
PerfXPCLatency
method
SGMSuggestionsFromMessage
customResponsesAfterPruning
SELECT uniqueIdentifier FROM mailIntelligence_spotlightMapping WHERE messageId = :messageId
<html.*?>
<html>
malloc failed
blockquote
strong
table
href
mailto:
http://
_link_
head
script
style
span
header
hgroup
article
details
fieldset
figcaption
footer
form
noscript
section
summary
%i. 
reservedTicket
http://schema.org/Seat
seat
ticketedSeat
seatRow
seatSection
seatNumber
seatingType
airplaneSeat
airplaneSeatClass
DDMATCH
void appendStringToBuf(char **, const char *, NSString *__strong, BOOL)
SGAggregateLogging+PET.m
Logging string too long
SGMessageKey.m
serialized
Invalid serialization
Unknown entity type: %lu
<SGMessageKey source:%@ uniqueIdentifier:%@>
@16@?0@"SGDataDetectorMatch"8
SGDelivery_ctEmlSub_%lu
SGDelivery_ctEmlBod_%lu
SGDelivery_ctTxtMsg_%lu
@24@?0@"NSSet"8@"SGPipelineEnrichment"16
SGDelivery_pr_%@
SGDelivery_ctNumUniq_%lu
application-identifier
<SGTextMessageKey source=%@ uniqueIdentifier=%@>
SGDSuggestManagerErrorDomain
<SGRealtimeSuggestionsTuple c:%tu e:%tu r:%tu d:%tu i:%tu>
@"EKEventStore"8@?0
v16@?0@?<v@?@"EKEventStore">8
v24@?0@"CNChangeHistoryContactChange"8^B16
@"_PASLock"8@?0
com.apple.MailCompositionService
com.apple.MobileAddressBook.ContactsViewService
com.apple.MobileAddressBook.ContactViewViewService
com.apple.mobilesms.compose
FaceTime
com.apple.FaceTime
InCallService
com.apple.telephonyutilities.callservicesd
MobilePhone
SGDSuggestManager-purgeDeletionDropBox
@"SGDPurgeDeletionBox"8@?0
v16@?0@"SGDPurgeDeletionBox"8
My phone is 515-555-5555. My address is 1234 Hey Street.
htmlBody
from
Warm Up <warm@up.com>
subject
Warm up! Awaken!
date
<hey@example.com>
sourceId
warmUpSuggestions
contact
completion
contactIdentifier
contactIdentifiers
emailAddress
none
Unexpected number of matches
v16@?0@"SGXPCResponse1"8
cnContactMatchesForRecordIds
@"NSArray"16@?0@"SGRecordId"8
query
prefix
v16@?0Q8
message
Couldn't find event with that record id
storageReminder.recordId
@"SGEntity"16@?0@"SGEntity"8
com.apple.suggestions.SGEKCalendarWrite
foundEvent.suggestionInfo.opaqueKey
@"SGRealtimeEventResponse"16@?0@"SGEntity"8
@"_PASTuple2"16@?0@"SGRealtimeEventResponse"8
en_US_POSIX
yyyy-MM-dd HH:mm:ss
-[SGDSuggestManager realtimeContactsFromEntity:enrichments:sourceTextMessage:store:]_block_invoke
SGDSuggestManager.m
enrichment.duplicateKey.parentKey
@"SGStorageContact"16@?0@"SGContactEntity"8
@"SGContact"16@?0@"SGEntity"8
B16@?0@"SGEmailAddress"8
@"SGRealtimeContact"16@?0@"SGContact"8
q24@?0@"SGContactMatch"8@"SGContactMatch"16
socialProfile
messagesToRefreshWithCompletion
@"SGMailMessageKey"16@?0@"SGEmailKey"8
updateMessages
@"SGEmailKey"16@?0@"SGMailMessageKey"8
reportMessagesFound
fullDownloadRequestBatch
resolveFullDownloadRequests
uniqueId
INGetReservationDetailsIntent
SGSuggestedEventLaunchInfo intent must have an associated userActivity
SGSuggestedEventLaunchInfo object must have either intent or sourceURL to open
confirm
v16@?0@"SGLabeledObject"8
reject
message-id
SGSuggestManager-addInteractions
com.apple.
0123456789@
processReservationInteractions
deleteSpotlightReferencesWithBundleIdentifier
isEventCandidateForURL
suggestionsFromURL
-[SGDSuggestManager geocodeEnrichmentsInPipelineEntity:withCompletion:]_block_invoke
@"SGRealtimeEvent"16@?0@"SGPipelineEnrichment"8
com.apple.suggestions.suggestManagerKeepDirty
hits
misses
v20@?0B8Q12
notFromSuggestions
x-apple-eventkit:///SuggestedEventInfo/
uniqueKey
com.apple.suggestd.event-metrics-queue
Maybe: %@
Show in %@
@"SGSimpleMailMessage"8@?0
v40@?0@"NSError"8@"NSArray"16@"NSArray"24@"NSArray"32
q24@?0@"SGRealtimeEvent"8@"SGRealtimeEvent"16
com.apple.suggestions.internal.messages.processed.
SGRecordId not valid (didn't find entity)
Unable to find localizedAppName
com.apple.CoreSuggestionsInternals.SGDSuggestManager
v24@?0@"SGDPurgeDeletionBox"8^B16
v24@?0@"NSString"8@"_PASDomainSelection"16
v24@?0@"NSString"8@"NSSet"16
htmlParserNonNull != nil
SGSuggestManager-consumeInteractionWithContext
An error occurred while formatting the string.
AppCanShowSiriSuggestionsBlacklist
com.apple.suggestions
EMAIL_MAPPING
LINK_MAPPING
-[SGEntityMappingTransformer transform:]
SGEntityMappingTransformer.m
[input isKindOfClass:[NSString class]]
mailto
com.apple.suggestions.ml.datadetector
salientPredictedAsSalient
salientPredictedAsNeutral
salientPredictedAsIgnorable
neutralPredictedAsSalient
neutralPredictedAsNeutral
neutralPredictedAsIgnorable
ignorablePredictedAsSalient
ignorablePredictedAsNeutral
ignorablePredictedAsIgnorable
is_sender_name
is_sender_email
is_sender_domain
is_recipient_name
is_recipient_email
is_present_in_subject
StructuredEventInputMapping
StructuredEventOutputMapping
SupportedProviders
extractionSenders
shadowSenders
mlDefaultExtractionSenders
schemaOrgSenders
StructuredEventEngineConfig
sectionLabelTokenMergeDistance
defaultLabelTokenMergeDistance
addressComponentThreshold
stripRepeatedContentInSections
Structured Event model inference
%@.%@.%@
SG_TARGET_EMAIL
SG_FEATURE_PHONENUMBER
SG_FEATURE_EMAIL
SG_FEATURE_ADDRESS
SG_FEATURE_DATE
SG_FEATURE_LINK
SG_FEATURE_FULLNAME
SG_FEATURE_FIRSTNAME
SG_FEATURE_LASTNAME
SG_POSSESSIVE
SG_FEATURE_NUMBER
SG_FEATURE_SYMBOL
SignificantEmailAddressForIMessage
documentSource
highPriority
receivedOnBattery
harvestedOnBattery
harvestSource
otherFirstParty
otherThirdParty
Safari
News
Mail
Messages
Notes
Reminders
SGM2HarvestSourceInMemory
SGM2HarvestSourceRealtime
SGM2HarvestSourceRealtimeNoBudget
SGM2HarvestSourceOnDiskOverflow
SGM2HarvestSourceOnDiskNoBudget
SGM2HarvestSourceOnDiskTimeout
SGM2HarvestSourceOnDiskClosed
SGM2HarvestSourceOnDiskLegacy
SGM2HarvestSourceProactiveHarvesting
SGRe2PrefilterTree.m
data.length > 7*sizeof(uint32_t)
(const uint8_t *)(_rpns) <= (const uint8_t *)end
(const uint8_t *)(_rpns) <= (const uint8_t *)(_h1)
(const uint8_t *)(_h1) <= (const uint8_t *)(_h2)
(const uint8_t *)(_h2) <= (const uint8_t *)(_h3)
(const uint8_t *)(_h1) <= (const uint8_t *)end
(const uint8_t *)(_h2) <= (const uint8_t *)end
(const uint8_t *)(_h3) <= (const uint8_t *)end
(const uint8_t *)(_h3) <= (const uint8_t *)(_s1)
(const uint8_t *)(_s1) <= (const uint8_t *)(_s2)
(const uint8_t *)(_s2) <= (const uint8_t *)(_s3)
(const uint8_t *)(_s1) <= (const uint8_t *)end
(const uint8_t *)(_s2) <= (const uint8_t *)end
(const uint8_t *)(_s3) <= (const uint8_t *)end
_h1 + _n1 + 1 == _h2
_h2 + _n2 + 1 == _h3
(const void *)(_h3 + _n3 + 0) == (const void *)_s1
com_apple_suggestions_targetPlugins
com.apple.suggestd.ma-metadata-download
com.apple.suggestd.trim
com.apple.suggestd.vacuum
com.apple.suggestd.identityanalysis
com.apple.suggestd.sendrtc
v20@?0B8@"NSError"12
com.apple.suggestd.cd-cache-rebuild
com.apple.suggestd.process-pending-geocodes
com.apple.suggestions.geocode-write
-[SGDManagerForCTS _performProcessPendingGeocodesActivity:]_block_invoke_2
SGDManagerForCTS.m
[nextGeocode.timeRange isValidAllDayRange]
v16@?0@"SGStorageEvent"8
com.apple.suggestd.process-pending-verification
com.apple.suggestions.verification-write
Unexpected failure of CTS deferral
facetime.apple.com/join
offeredCount
acceptedCount
bundleIdentifier
urlType
com.apple.proactive.fia.url
item
processSearchableItem-plugins
backgroundDissectAndWrite
backgroundDissect
@"NSArray"16@?0@"<NSFastEnumeration>"8
@"NSMutableDictionary"16@?0@"<NSFastEnumeration>"8
@"NSMutableArray"16@?0@"<NSFastEnumeration>"8
i16@?0@8
reservationId
B24@?0@8@16
@"NSString"16@?0@"SGContactDetail"8
SGDeduper.m
postal address details should be filtered out
@"NSArray"16@?0@"SGContactDetail"8
@"NSNumber"16@?0@"SGContactDetail"8
Abu Dhabi
Asia/Muscat
Adelaide
Australia/Adelaide
Afghanistan
Asia/Kabul
Alaska
America/Anchorage
Alaskan
Aleutian
America/Adak
Almaty
Asia/Almaty
Altai
Asia/Barnaul
Amsterdam
Europe/Berlin
Arab
Asia/Riyadh
Arabian
Arabic
Asia/Baghdad
Argentina
America/Argentina/Buenos_Aires
Arizona
America/Phoenix
Astana
Asia/Dhaka
Astrakhan
Europe/Astrakhan
Athens
Europe/Athens
Atlantic
America/Halifax
Auckland
Pacific/Auckland
AUS Central
Australia/Darwin
Aus Central W.
Australia/Eucla
AUS Eastern
Australia/Sydney
Azerbaijan
Asia/Baku
Azores
Atlantic/Azores
Baghdad
Bahia
America/Bahia
Baku
Bangkok
Asia/Bangkok
Bangladesh
Beijing
Asia/Shanghai
Belarus
Europe/Minsk
Belgrade
Europe/Prague
Bogota
America/Bogota
Bougainville
Pacific/Bougainville
Brasilia
America/Sao_Paulo
Brisbane
Australia/Brisbane
Brussels
Europe/Paris
Bucharest
Europe/Bucharest
Buenos Aires
Cairo
Africa/Cairo
Canberra
Cape Verde
Atlantic/Cape_Verde
Cape Verde Is.
Cape Verde Islands
Canada Central
America/Regina
Caracas
America/Caracas
Casablanca
Africa/Casablanca
Caucasus
Asia/Yerevan
Cen. Australia
Central
America/Chicago
Central America
America/Guatemala
Central Asia
Central Brazilian
America/Manaus
Central Europe
Central European
Europe/Belgrade
Central Pacific
Pacific/Guadalcanal
Central Standard Time (Mexico)
America/Mexico_City
Chatham Islands
Pacific/Chatham
Chennai
Asia/Kolkata
Chihuahua
America/Chihuahua
China
Cuba
America/Havana
Darwin
Dateline
Etc/GMT+12
E. Africa
Africa/Nairobi
E. Australia
E. Europe
E. South America
East Africa
Easter Island
Pacific/Easter
Eastern
America/New_York
Eastern Standard Time (Mexico)
America/Cancun
Egypt
Ekaterinburg
Asia/Yekaterinburg
Eniwetok
Pacific/Kwajalein
Fiji
Pacific/Fiji
Fiji Islands
Europe/Helsinki
Georgian Standard Time
Asia/Tbilisi
GMT Standard Time
Europe/London
Greenland
America/Godthab
Greenwich
Atlantic/Reykjavik
Greenwich Mean Time
Greenwich Standard Time
Guadalajara
Guam
Pacific/Guam
Haiti
America/Port-au-Prince
Harare
Africa/Harare
Hawaii
Pacific/Honolulu
Hawaiian
Helsinki
Hobart
Australia/Hobart
India
Indiana (East)
America/Indiana/Indianapolis
Iran
Asia/Tehran
Irkutsk
Asia/Irkutsk
Islamabad
Asia/Karachi
Israel
Asia/Jerusalem
Jerusalem
Jordan
Asia/Amman
Kabul
Kaliningrad
Europe/Kaliningrad
Kathmandu
Asia/Kathmandu
Kolkata
Asia/Calcutta
Korea
Asia/Seoul
Krasnoyarsk
Asia/Krasnoyarsk
Kuala Lumpur
Asia/Singapore
Kuwait
Libya
Africa/Tripoli
Line Islands
Pacific/Kiritimati
Lord Howe
Australia/Lord_Howe
Magadan
Asia/Magadan
Marquesas
Pacific/Marquesas
Mauritius
Indian/Mauritius
Mexico
Mexico City
Mexico Standard Time
Mexico Standard Time 2
Mid-Atlantic
Atlantic/South_Georgia
Middle East
Asia/Beirut
Midway Island
Pacific/Midway
Montevideo
America/Montevideo
Morocco
Moscow
Europe/Moscow
Mountain
America/Denver
Mountain Standard Time (Mexico)
Myanmar
Asia/Rangoon
N. Central Asia
Asia/Novosibirsk
Nairobi
Namibia
Africa/Windhoek
Nepal Standard Time
New Zealand
Norfolk
Pacific/Norfolk
Newfoundland
America/St_Johns
Newfoundland and Labrador
North Asia East
Asia/Ulaanbaatar
North Asia
North Korea
Asia/Pyongyang
Nuku'alofa
Pacific/Tongatapu
Osaka
Asia/Tokyo
Pacific
America/Los_Angeles
Pacific SA
America/Santiago
Pacific Standard Time (Mexico)
America/Tijuana
Pacific Time
Pakistan
Paraguay
America/Asuncion
Paris
Perth
Australia/Perth
Prague
Prague Bratislava
Rangoon
Romance
Russia Time Zone 10
Asia/Srednekolymsk
Russia Time Zone 11
Asia/Kamchatka
Russia Time Zone 3
Europe/Samara
Russian
SA Eastern
America/Buenos_Aires
SA Pacific
SA Western
Santiago
Sarajevo
Europe/Sarajevo
Saskatchewan
America/Edmonton
SE Asia
Seoul
Saint Pierre
America/Miquelon
Sakhalin
Asia/Sakhalin
Samoa
Pacific/Apia
Saudi Arabia
Singapore
South Africa
Sri Jayawardenepura
Asia/Colombo
Sri Lanka
Syria
Asia/Damascus
Sydney
Taipei
Asia/Taipei
Tasmania
Tehran
Tocantins
America/Araguaina
Tokyo
Tomsk
Asia/Tomsk
Tonga
Transbaikal
Asia/Chita
Turkey
Europe/Istanbul
Turks And Caicos
America/Grand_Turk
Universal Coordinated Time
US Eastern
America/Indianapolis
US Mountain
Ulaanbaatar
Venezuela
Vladivostok
Asia/Vladivostok
W. Australia
W. Central Africa
Africa/Luanda
W. Europe
Warsaw
Europe/Warsaw
West Asia
West Bank
Asia/Hebron
West Central Africa
West Pacific
Western Brazilian
America/Rio_Branco
Yakutsk
Asia/Yakutsk
Yangon Rangoon
@"NSTimeZone"16@?0@"NSString"8
 Standard Time
 Daylight Time
 Summer Time
 Time
SGCalendarAttachmentDissector.m
hourString
Etc/GMT
@"NSString"16@?0@"ICSUserAddress"8
%@;%@
B16@?0@"SGMailAttachment"8
Google
Gmail
Yahoo
Outook
@icloud.com
@me.com
@mac.com
@gmail.com
@googlemail.com
@google.com
@yahoo.com
@yahoo.co.uk
@ymail.com
@sbcglobal.net
@rocketmail.com
@outlook.com
@hotmail.com
@hotmail.co.uk
@rocketmaill.com
BEGIN:
END:
END:VCALENDAR
VTIMEZONE
VEVENT
VCALENDAR
UID:
DTSTART
DTEND
EXDATE
RDATE
RECURRENCE-ID
TZID=
;TZID=
END:VCALENDAR
floating
GREGORIAN
ATTACH
<SGStorageContact: %@ - %lu profile(s)>
SGStorageContact.m
Merging with a contact that isn't mergable
@"NSArray"16@?0Q8
@"SGPhoneNumber"16@?0@"SGContactDetail"8
@"SGPostalAddress"16@?0@"SGContactDetail"8
Street
City
State
Country
@"SGEmailAddress"16@?0@"SGContactDetail"8
@"SGSocialProfile"16@?0@"SGContactDetail"8
Cannot use SearchOnePass for unanchored matches.
CREATE TABLE snippets (id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER,title TEXT,content TEXT,contentRangeOfInterest TEXT)
CREATE UNIQUE INDEX entityIdIdx ON snippets(entityId)
migration_MoveContentToSnippets
CREATE TABLE emailSnippets (id INTEGER PRIMARY KEY AUTOINCREMENT,emailId INTEGER,title TEXT,content TEXT)
CREATE UNIQUE INDEX ix_emailSnippets_emailId ON emailSnippets(emailId)
migration_separateMessageSnippets
CREATE TABLE messages (id integer PRIMARY KEY AUTOINCREMENT NOT NULL,uuid char(128) NOT NULL,conversationId char(128) NOT NULL,content text(128) NOT NULL,creationTimestamp REAL NOT NULL,isSent integer(1) NOT NULL)
CREATE INDEX ix_messages_conversationId ON messages (conversationId ASC)
CREATE UNIQUE INDEX ix_messages_id ON messages (id ASC)
CREATE UNIQUE INDEX ix_messages_uuid ON messages (uuid ASC)
CREATE TABLE userQueries (id integer PRIMARY KEY AUTOINCREMENT NOT NULL,conversationId char(128) NOT NULL,language char(5) NOT NULL,query text NOT NULL,engaged integer(1) NOT NULL,creationTimestamp real NOT NULL)
CREATE INDEX ix_userQueries_language ON userQueries (language ASC)
DROP TABLE IF EXISTS userQueries
DROP TABLE IF EXISTS messages
DELETE FROM sqlite_sequence
v16@?0@"SGDCloudKitSync"8
com.apple.corespotlight.receiver.suggestions
NSUA
CSSI
SGDPluginManager.processInteraction
plugin-processInteraction
plugin-purgeSpotlightReferences
plugin-deleteSpotlightReferences
contactConfirmations
contactRejections
contactDetailConfirmations
contactDetailRejections
enqueued_items
dissected_items
statsCounters
SELECT value FROM statsCounters WHERE key = :key
behavior.scalar.confirmPercent
contacts.contact
contacts.detail
Compiler::Copy called!
kRegexpConcat: child_frags is NULL
kRegexpAlternate child_frags is NULL
kRegexpStar child_frags is NULL
kRegexpPlus child_frags is NULL
kRegexpQuest child_frags is NULL
No ranges in char class
kRegexpCapture child_frags is NULL
Missing case in Compiler: 
hello, world
Couldn't compile regular expression, skipping: 
 due to error 
%@-timer
B24@?0@"_PASTuple2"8@"NSDictionary"16
@16@?0@"_PASTuple2"8
B24@?0@"SGStorageReminder"8@"NSDictionary"16
v24@?0@"REMReminder"8^B16
http://schema.org/Place
lang
timeDifferenceFromReceptionToSaliencyInferenceInSeconds
senderConnectionScore
mailAttachmentHistogram
nbCharactersInMailSubject
nbTokensInMailSubject
previousInteractionOnConversationInMinutes
previousInteractionFromUserOnConversationInMinutes
active
background
NAME_MAPPINGS
TOKEN_TO_IGNORE
MINIMUM_CONFIDENCE
FIRST
LAST
FULL
UNDEFINED
POSSESSIVE
nameMappings[NameMappingFull]
nameMappings[NameMappingFirst]
nameMappings[NameMappingLast]
nameMappings[NameMappingUndefined]
nameMappings[NameMappingPossessive]
-[SGNameMappingTransformer transform:]
SGNameMappingTransformer.m
Shouldn't be NameMappingPossessive
feature
v24@?0@"NSNumber"8^B16
firstnames
trie
_PASCFBurstTrie *firstnames(void)_block_invoke
path
Could not load firstnames trie: %@
lastnames
_PASCFBurstTrie *lastnames(void)_block_invoke
Could not load lastnames trie: %@
%@__%@
RE2::Set::Compile multiple times
Error simplifying during Compile.
alt -> %d | %d
altmatch -> %d | %d
byte%s [%02x-%02x] -> %d
capture %d -> %d
emptywidth %#x -> %d
match! %d
nop -> %d
fail
%d. %s
MyName/F
NameRequest/F
SGSelfIdentification.m
conversation.count > 0
@"NSString"36@?0{SGMSIPatternType_=Q}8@"NSString"16@"NSString"24B32
v52@?0@"NSString"8{_NSRange=QQ}16@"SGRe2"32B40^B44
@"SGTextMessageItem"16@?0@8
sent:
strong_phrase
SGSearchableItemIdTriple.m
@"NSString"8@?0
SGPipelineEntity.m
handle
identifier.length > 0
bundleIdentifier.length > 0
interactionIdentifier.length > 0
SGPipelineEntity.flush
a preferred enrichment must have a duplicateKey
B24@?0@"SGPipelineEnrichment"8@"NSDictionary"16
Contacts can't have associated detected addresses.
Contacts can't have associated detected phone numbers.
Contacts can't have associated detected birthdays.
Contacts can't have associated detected email addresses.
Contacts can't have associated detected instant message addresses.
Regexp not destroyed.
Bad reference count 
/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/re2/re2/re2_regexp.h
Cannot AllocSub 
Unexpected op in Regexp::Equal: 
no error
unexpected error
invalid escape sequence
invalid character class
invalid character class range
missing ]
missing )
trailing \
no argument for repetition operator
invalid repetition size
bad repetition operator
invalid perl operator
invalid UTF-8
invalid named capture group
NumCapturesWalker::ShortVisit called
NamedCapturesWalker::ShortVisit called
CaptureNamesWalker::ShortVisit called
SGEntity.m
entityKey can't be nil.
entityType must not be SGEntityTypeUnknown
entityType must not be SGEntityTypeDetectedEmailAddress
description
<SGEntity:%@,sourceKey=%@,title=%@>
from_messages
Unknown encoding 
Error parsing '
Error compiling '
pattern too large - compile failed
Error reverse compiling '
pattern too large - reverse compile failed
\x00
Invalid RE2: 
RE2: invalid startpos, endpos pair.
Match 
 DFA failed.
 used DFA - no match.
 used DFA - match
 reverse DFA failed.
 DFA inconsistency.
DFA inconsistency
 used reverse DFA.
 skipping DFA for OnePass.
 skipping DFA for BitState.
 using OnePass.
SearchOnePass inconsistency
 using BitState.
SearchBitState inconsistency
 using NFA.
SearchNFA inconsistency
eventsWithoutTimestamp
rejectedEvents
reminders
rejectedReminders
newContacts
storageDetails
dontUpdate
confirmedEventFields
confirmedEventWithoutTimestampFields
resetInfo
SGSalt
v16@?0@"SGHistorySharedData"8
Suggest history with %d confirmed event hashes, %d confirmed event without timestamp hashes, %d rejected event hashes, %d confirmed reminder hashes, %d rejected reminder hashes, %d confirmed event field hashes, %d confirmed event without timestamp field hashes, %d contact hashes, %d storage detail hashes, and %d no-update hashes.
SGSuggestHistory.m
![hashes containsObject:[self _canaryHash]]
Suggest history sets must not be nil
canary_%@
@"NSData"16@?0@"NSData"8
@"NSData"16@?0@"NSString"8
opaqueKey
%.2f
new data
suggestHistoryObserver
SGKeyValueCacheManager.m
cacheType < SGKeyValueCacheTypeCount
phone-to-name.kvcache
email-to-name.kvcache
SGWords.m
word
Latin-ASCII; Lower
\%03o
<FIAPHistoricalDataRequest id:%llu p:%@ s:%@ e:%@ plugin:%@>
reply-to
conversation-id
list-id
EEE',' d MMM y HH':'mm':'ss ZZZ
EEE',' d MMM y HH':'mm':'ss zzz
EEE MMM d HH':'mm':'ss zzz y
d MMM y HH':'mm':'ss ZZZ
d MMM y HH':'mm':'ss zzz
EEE',' d MMM y HH':'mm ZZZ
EEE',' d MMM y HH':'mm zzz
d MMM y HH':'mm ZZZ
d MMM y HH':'mm zzz
@"NSDateFormatter"16@?0@"NSString"8
(?:=([0-9A-F]{2})|=[ \t]*(?:\r?\n|$)|[ \t]+(?:\r?\n|$)|$)
SGSimpleMailMessage+RFC822Parsing.m
error creating quotedPrintableRegex: %@
(?:^(\S+?):(?:\r?\n[ \t])?[ \t]*(\S+(?:.*\r?\n[ \t].*\S+|.*\S)*|).*$|(?:\r?\n){2})
error creating headerRegex: %@
fieldValueRange.location != NSNotFound
[ \t]*;[ \t]*([^ \t()<>@,;:\\"\/\[\]?.=]+)=(?:([^ \t()<>@,;:\\"\/\[\]?.=]+)|"((?:[^"]|\\")*)")[ \t]*(?:(?=;)|$)
error creating parameterRegex: %@
<blockquote type=cite>
</blockquote>
&amp;
&lt;
 &nbsp;
<span class=Apple-tab-span style=white-space:pre>
</span>
<br>
content-type
text/plain
charset
us-ascii
boundary
content-disposition
inline
attachment
multipart/
multipart/alternative
multipart/related
start
multipart/signed
content-id
text/html
format
flowed
delsp
content-transfer-encoding
binary
base64
x-uuencode
quoted-printable
attachmentCallback
filename
<SGDataDetectorMatch/%i %i-%i
matchType
range_location
range_length
labelRange_location
labelRange_length
valueRange_location
valueRange_length
labelString
valueString
parsecDomain
parsecWikidataQid
allDay
inferredDate
approximateTime
partialDate
postalAddressComponents
detectedDate
detectedTimeZone
detectedEndDate
detectedEndTimeZone
PartialDate
RelativeDayOfWeek
DDScannerRef getScannerRefAndAcquire(void)
SGDataDetectorMatch.m
Could not get data detector from pool
dd-MM-yyyy
dd-MM
CFRange "%ld:%ld" cannot be converted to NSRange.
_PASUtilityMacros
void releaseScannerRef(DDScannerRef)
Could not return scanner %@ to pool
NonQuotedLinePart
Email
NextLineQuoted
UpTo8KB
8KBTo32KB
32KBTo128KB
128KBTo512KB
512KBTo2MB
Over2MB
UpTo8KB: %tu
8KBTo32KB: %tu
32KBTo128KB: %tu
128KBTo512KB: %tu
512KBTo2MB: %tu
Over2MB: %tu
InhumanEmailPatterns/F
InhumanEmailDomains
InhumanEmailTokens
HumanMailingListHeaders
InhumanEmailExceptions
InhumanName/F
InhumanNameComponents
InhumanBodyLiterals
InhumanBodyRegexp/F
SGInhumans.m
failed to get raw value for InhumanNameComponents
failed to look up raw value for rawValueKeyInhumanEmailDomains
failed to look up raw value for rawValueKeyInhumanEmailTokens
NUL-terminator overwritten. This should be impossible.
computeCustomTimeRange
safeguardingQuotedRegionsRegex
appleMailMessageId
v32@?0@"NSRegularExpression"8@"NSString"16^B24
v32@?0@"NSRegularExpression"8@"NSNumber"16^B24
%@%@%@
%@-%@
v32@?0@"NSNumber"8@"SGMIWarningsDetectionRegex"16^B24
startOffset
endOffset
SGMIFollowUpManager-processing
SGMIFollowUpManager-timeout
positive
negative
no engagement
mlmodel
mlmodelc
IS_TIME_DISTRIBUTED
NONE
ReminderModel
structuredEventGazetteer
StructuredEventModel
com.apple.CoreSuggestions.SemlPlugin
plplist
SGExtractionModel.m
relPath
polarity_true
%@.%@
mapping
%@_%@
SGExtractionModels
SGIStore error
Can not add interdict between non-disjoint sets %@ and %@
@"NSString"16@?0@"SGRecordId"8
%lld
INSERT INTO identityInterdict (a, b) VALUES (?, ?)
SELECT a, b FROM identityInterdict
@"SGLabeledValue"16@?0@"SGContactDetail"8
SGSqlEntityStore+Identity.m
rebuildIdentityTables
DELETE FROM identityPerson
DELETE FROM identityLink
DELETE FROM identityPhones
DELETE FROM identitySocialProfileIdentifiers
WHERE e.entityType = :pseudo OR e.entityType = :unrec
Unexpected entity type: %lld
v16@?0@"NSString<SGNormalizedName>"8
SELECT fullname, recordId, nameSketches, phones, socialProfileIdentifiers, email FROM identityPerson WHERE (surname IN _pas_nsarray(:middleNameAndSurname) OR middlename = :surname) AND isSent = :isSent LIMIT :limit
:middleNameAndSurname
:surname
:isSent
fullname
recordId
nameSketches
phones
socialProfileIdentifiers
SELECT recordId FROM identityPerson WHERE email=? AND fullname=? LIMIT %d
SELECT recordId FROM identityPerson WHERE email=? AND fullname IS NULL LIMIT %d
Expected nonzero number of phones
fullname=:fullname
(surname = '' OR surname IS NULL) AND fullname IS NULL
SELECT recordId FROM identityPerson   WHERE %@ AND recordId IN (       SELECT recordId from identityPhones           WHERE phone IN _pas_nsarray(:phones)   )   LIMIT :limit
:fullname
@16@?0@"SGLabeledValue"8
:phones
identityPerson
socialProfiles
Expected nonzero number of socialProfiles
SELECT recordId FROM identityPerson   WHERE %@ AND recordId IN (       SELECT recordId from identitySocialProfileIdentifiers           WHERE socialProfileIdentifier IN _pas_nsarray(:socialProfileIdentifiers)   )   LIMIT :limit
:socialProfileIdentifiers
SELECT 1 FROM identityLink WHERE recordId1=? AND recordId2=? AND type=?
INSERT OR IGNORE INTO identityLink (recordId1, recordId2, type, strength) VALUES (?,?,?,?)
SELECT phones, socialProfileIdentifiers FROM identityPerson WHERE recordId = :recordId
:recordId
DELETE FROM identityPhones WHERE phone IN _pas_nsarray(:phones) AND recordId=:recordId
DELETE FROM identitySocialProfileIdentifiers WHERE socialProfileIdentifier IN _pas_nsarray(:socialProfileIdentifiers) AND recordId=:recordId
DELETE FROM identityPerson WHERE recordId = ?
DELETE FROM identityLink WHERE recordId1 = ?1 OR recordId2 = ?1
SELECT recordId1, recordId2, type, strength FROM identityLink
SELECT recordId FROM identityPerson WHERE curated
graph
nameToVertex
disjointSets
SELECT recordId, email FROM identityPerson WHERE (surname = '' OR surname IS NULL) AND fullname IS NULL AND LENGTH(email) > 0
Vertex not found in lookup table
SELECT recordId FROM identityPerson WHERE email = :email AND fullname IS NOT NULL
OOM while adding edge to graph
SELECT recordId, phones FROM identityPerson WHERE (surname = '' OR surname IS NULL) AND fullname IS NULL AND LENGTH(phones) > 0
SELECT recordId FROM identityPerson    WHERE fullname IS NOT NULL        AND recordId IN (            SELECT recordId from identityPhones                WHERE phone IN _pas_nsarray(:phones)        )
SELECT recordId, socialProfileIdentifiers FROM identityPerson WHERE (surname = '' OR surname IS NULL) AND fullname IS NULL AND LENGTH(socialProfileIdentifiers) > 0
SELECT recordId FROM identityPerson    WHERE fullname IS NOT NULL        AND recordId IN (            SELECT recordId from identitySocialProfileIdentifiers                WHERE socialProfileIdentifier IN _pas_nsarray(:socialProfileIdentifiers)        )
graph error
SGIStore.h, line %i
SELECT recordId1, recordId2, strength FROM identityLink
SELECT recordId FROM IdentityPerson
v16@?0r^{_vertex_t=^v^^{_edge_t}II}8
computeBlobs
SELECT (CASE WHEN e.masterEntityId > 0 THEN e.masterEntityId ELSE e.id END), i.nameSketches FROM entity AS e INNER JOIN identityPerson AS i ON e.id = i.recordId LIMIT :limit
@"NSString<SGNormalizedPhoneNumber>"16@?0@"CNLabeledValue"8
@"NSNumber"16@?0@"CNContact"8
@"CNContact"24@?0Q8@"NSArray"16
@"NSNumber"16@?0@"SGRecordId"8
SELECT recordId, fullname, phones, email, socialProfileIdentifiers FROM identityPerson WHERE recordId IN _pas_nsarray(:ids)
v24@?0@"CNContact"8@"SGRecordId"16
DELETE FROM identityBlobAnalysisJobs
INSERT INTO identityBlobAnalysisJobs (mergeBlob) VALUES (:mergeBlob)
:mergeBlob
SELECT id, mergeBlob FROM identityBlobAnalysisJobs
DELETE FROM identityBlobAnalysisJobs WHERE id = :blobId
:blobId
SELECT 1 FROM identityBlobAnalysisJobs LIMIT 1
INSERT INTO identityInterdictNext (a, b) VALUES (?, ?)
DROP TABLE identityInterdict
CREATE TABLE identityInterdict (a TEXT NOT NULL, b TEXT NOT NULL)
SELECT a, b FROM identityInterdictNext
DELETE FROM identityInterdictNext
INSERT OR IGNORE INTO identityPerson (recordId, surname, middlename, fullname, nameSketches, phones, socialProfileIdentifiers, email, curated, isSent) VALUES (?,?,?,?,?,?,?,?,?,?)
INSERT OR IGNORE INTO identityPhones (phone, recordId) VALUES (?, ?)
INSERT OR IGNORE INTO identitySocialProfileIdentifiers (socialProfileIdentifier, recordId) VALUES (:socialProfileIdentifier, :recordId)
:socialProfileIdentifier
q24@?0@"_PASTuple2"8@"_PASTuple2"16
v16@?0@"SGPatternGlobalData"8
CompiledPatterns.plist
CompiledPatterns.pldat
(nil path)
SGPatterns.m
Could not read pattern plist from %@: %@
nolang
Invalid pattern plist: no nolang locale found! Keys: %@
filesystemPathForAssetDataRelativePath returned nil
Could not load pattern data
Language not found: %@
base
eu-me
w-europe
e-europe
asia
middleeast
v32@?0@"NSString"8@"NSDictionary"16^B24
Non-prefiltered regexp was array: %@
.filt
Data not found for prefiltered regexp: %@
Could not find raw asset value for key %@
SGPatterns-deathTimer
zh-hans
zh-hant
Error loading file %@: %@
(off & 0b11) == 0
off + len <= _fileData.length
in-reply-to
SGSimpleMailMessage.m
[header isKindOfClass:[SGSimpleMailHeaderKeyValue class]]
nonnull property %s *%s was null when decoded
<SGSimpleMailHeaderKeyValue: %@: %@>
inReplyTo
replyTo
hasInhumanHeaders
isPartiallyDownloaded
mailingList
headers
@"NSData"8@?0
_quotedRegionsCached
@email.android.com>
@"NSIndexSet"8@?0
@"NSNumber"8@?0
B16@?0@"SGDataDetectorMatch"8
@"CSPerson"8@?0
%02x
htmlContentData
<SGSimpleMailMessage %@>
 x-sendgrid-eid x-facebook-notify x-amazon-mail-relay-type x-autogenerated x-campaign x-ses-outgoing x-ebay-mailtracker x-mailing-id x-phpbb-origin x-report-abuse x-facebook x-bloggermail x-campaign-id x-feedback-id
list-unsubscribe
precedence
bulk
auto-submitted
x-email-type-id
@"SGSimpleNamedEmailAddress"16@?0@"CSPerson"8
@16@?0@"BMNamedHandle"8
(?,?)
(%d,?)
(%d,%d)
/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/re2/re2/re2_nfa.cc
Bad args: context does not contain text 
Bad args: nsubmatch=
Unexpected opcode in short circuit: 
Unexpected empty-width in short circuit: 
Unhandled 
 in step
CL.loc.vcf
Shared Location.loc.vcf
%@'s Location.loc.vcf
jpeg
heic
photoSharingUEhPVE8K
firstPartyLocTE9DLjFwCg
firstPartyPhoneUEhPTkUuMXAK
firstPartyEmailRU1BSUwuMXAK
firstPartyPostalUE9TVEFMLjFwCg
thirdPartyPhoneUEhPTkUuM3AK
thirdPartyEmailRU1BSUwuMXAK
thirdPartyPostalUE9TVEFMLjFwCg
SGQuickResponsesML.m
=\?(?:[^\s()<>@,;:"\/\[\]?.=]+?)\?(?:[^\s()<>@,;:"\/\[\]?.=]+?)\?(?:[^?\s]+)\?=
NSString+EncodedWord.m
error creating encodedWordRegex: %@
void hashStrings(NSArray<NSString *> *__strong, NSData *__strong, uint8_t *)
SGCrypto.m
strings.count > 0
digest != NULL
strictLowerBound
strictUpperBound
@"NSNumber"16@?0@"SGMISaliencyModelConfigRule"8
true
com.apple.MobileAddressBook
SGLowMemoryContactEnumeration
@"NSString"16@?0@"CSSearchableItem"8
v24@?0^{_LXEntry=}8*16
SGNicknames.m
nicknames
NUMERIC_MAPPING
CHARACTER_MAPPING
-[SGSymbolicMappingTransformer transform:]
SGSymbolicMappingTransformer.m
SG_FEATURE
SG_TARGET
%s%lu
NSString * _Nonnull numberedString(NSString * _Nonnull __strong, NSUInteger)
numberedString
SGFlightData.m
Expected keys to be unique and in ascending order. That constraint was violated by this sequence of keys:
%d: %@
%d: %@
KeyTooShort
The key was too short.
AirportNameNoise.plist
failed to get asset path for AIRPORT_NAME_IDENT.
IataCodeToCity.plplist
failed to get asset path for IATA_CITY_DB_IDENT.
flights
@"SGOffsetDictionary"8@?0
airports
carrierNames
flightsUpdate.dat
airportsUpdate.dat
carrierNamesUpdate.dat
flightCodes.count > 0
airportCodeCandidats_
airportInitScore_
airportBestScore_
airline
flightno
%@ %@ from %@ to %@
void _SGTaggedTypeAssert_impl(Class, void *)
SGTaggedMalloc.m
((uintptr_t)ptr & 0b11) == 0
object_getClass(obj) == tag
NSData *_SGTaggedVMAlloc_impl(Class, size_t, void **)
Could not allocate virtual memory
personFromSenderStats
personFromSenderInDyadicConversationStats
subjectContentStats
personToRecipientsStats
personCCRecipientsStats
domainFromSenderStats
conversationStats
listIdStats
attachmentsStats
subjectCountStatsStats
standardMailRulesStats
mailboxStats
mailboxTypeStats
LSApplicationRecord+Suggestions.m
HTTP URL should always construct
-[SGBinaryClassificationModel initWithPlist:chunks:context:]
SGBinaryClassificationModel.m
[dict isKindOfClass:[NSDictionary class]]
MODEL_TYPE
MODEL_LOCALE
MODEL_DATA
LOGISTIC
Unknown model type: %@
MODEL_FEATURIZER
MODEL_SOURCE_SESSION_DESCRIPTOR
MODEL_DECISION_THRESHOLD
Unknown type of model class: %@
%@_%@_%@%@Model.chunk
PREDICTION
args:
dataDetectionSignificantPhrasePhoneLogistic
significantPhoneNumber
Logistic
dataDetectionSignificantPhraseEmailLogistic
significantEmailAddress
dataDetectionSignificantPhraseEmailForIMessageLogistic
dataDetectionSignificantPhraseAddressLogistic
significantAddress
dataDetectionSignificantPhraseAddressForIMessageLogistic
selfIdentificationPhraseLogistic
selfId
birthdayTextMessageCongrats
birthdayExtraction
com.apple.suggestions.SGBloomFilter
SGBloomFilter.m
dirPath
.bf-head
.bf-tail
.bf2-head
.bf2-tail
Invalid file extension for Bloom filter chunk: %@
Armenian
Avestan
Balinese
Bamum
Batak
Bengali
Bopomofo
Brahmi
Braille
Buginese
Buhid
Canadian_Aboriginal
Carian
Chakma
Cham
Cherokee
Common
Coptic
Cuneiform
Cypriot
Cyrillic
Deseret
Devanagari
Egyptian_Hieroglyphs
Ethiopic
Georgian
Glagolitic
Gothic
Greek
Gujarati
Gurmukhi
Hangul
Hanunoo
Hebrew
Hiragana
Imperial_Aramaic
Inherited
Inscriptional_Pahlavi
Inscriptional_Parthian
Javanese
Kaithi
Kannada
Katakana
Kayah_Li
Kharoshthi
Khmer
Latin
Lepcha
Limbu
Linear_B
Lisu
Lycian
Lydian
Malayalam
Mandaic
Meetei_Mayek
Meroitic_Cursive
Meroitic_Hieroglyphs
Miao
Mongolian
New_Tai_Lue
Ogham
Ol_Chiki
Old_Italic
Old_Persian
Old_South_Arabian
Old_Turkic
Oriya
Osmanya
Phags_Pa
Phoenician
Rejang
Runic
Samaritan
Saurashtra
Sharada
Shavian
Sinhala
Sora_Sompeng
Sundanese
Syloti_Nagri
Syriac
Tagalog
Tagbanwa
Tai_Le
Tai_Tham
Tai_Viet
Takri
Tamil
Telugu
Thaana
Thai
Tibetan
Tifinagh
Ugaritic
SGTextMessageConversationTracker.m
[result.firstObject isKindOfClass:[SGTextMessageItem class]]
[conversation.firstObject isKindOfClass:[SGTextMessageItem class]]
@24@?0@"SGTextMessageItem"8Q16
_text
[otherItem isKindOfClass:[SGTextMessageItem class]]
@"NSString"16@?0@"SGTextMessageItem"8
significant-pseudo-contacts.bf
SGDatabaseJournalFile.m
Can not overwrite journal file
data.length <= UINT32_MAX
!_dead
v24@?0^v8Q16
<SGDatabaseJournalFile %@>
startDate
endDate
http://schema.org/Ticket
http://schema.org/EventReservation
http://schema.org/MovieShowing
http://schema.org/Movie
movie
http://schema.org/Event
Event
ReminderPreprocessor
ReminderInputMapping
ReminderOutputMapping
ReminderOverrides
config
wordBoundary
v16@?0@"SGReminderExtractionModelGuardedData"8
ReminderDissector model inference
bi_lstm_0_h_in
bi_lstm_0_c_in
bi_lstm_0_h_in_rev
bi_lstm_0_c_in_rev
categoryLog
eventsCount
eventKey
interactionKey
timingProcessing
creationDate
launchCountMessages
launchCountReminders
launchCountCalendar
launchCountMail
launchCountMaps
aggregateSummary
deviceLanguage
rtcLogsSent
remindersCountStats
documentType
locationType
expirationDate
trialExperimentId
trialTreatmentId
trialDeploymentId
trialRolloutId
trialRampId
mobileAssetsVersion
privacyAwareLogging.ser
.old
v16@?0@"SGRTCLoggingGuardedData"8
com.apple.suggestd.interactions-write-queue
rtc-persist
q24@?0@"NSDictionary"8@"NSDictionary"16
loggedExtractions
loggedInteractions
loggedInteractionsSummary
storeAge
unknown
flight
train
boat
hotel
carRental
ticket
food
social
eventCategory
templateName
domain
isAllDay
isCancelled
isFromSync
isSplashScreenAcknowledged
bundleID
@"SGEntityTag"16@?0@"NSString"8
SGDelivery_ctNumSame_%lu
medium
high
outputExceptions
outputInfos
eventDuplicateKey
Suggestions
usageMaps
usageCalendar
localeAssetVersion
event
exception
outputException
suggestd
mail
mailBanner
mailDDLink
messages
messagesBanner
messagesDDLink
calendar
calendarNotification
calendarInbox
calendarEventDetails
calendarCanvas
calendarWidget
calendarWidgetUpNext
calendarZKW
calendarAutocomplete
maps
mapsWidget
TTLNotification
spotlight
calendarCreateEventIntent
remindersNotification
remindersList
remindersQuickType
checkInShortcutApp
checkInShortcutSafari
found
shown
engaged
confirmed
rejected
dismissed
dissected
harvested
filtered
deleted
dkim_failed
dkim_succeeded
dissected_realtime
dissected_background
extraction
interactionSummary
reminderExtraction
reminderInteraction
reminderInteractionSummary
webpage
http://schema.org/FlightReservation
boardingTime
http://schema.org/Airline
iataCode
icaoCode
http://schema.org/Airport
http://schema.org/Flight
flightNumber
departureAirport
departureGate
departureTerminal
arrivalAirport
arrivalGate
arrivalTerminal
Flight
plugin
personHandle
startDateTimestamp
endDateTimestamp
reimportRequests
UPDATE reimportRequests SET queryTimestamp = :time WHERE id = :id
INSERT OR REPLACE INTO reimportItems (reimportRequestId, bundleId, uniqueId) SELECT :rid, :bid, value FROM _pas_nsarray(:chunk)
-[SGSqlEntityStore(ReimportRequests) storeReimportItems:requestId:]_block_invoke_4
SGSqlEntityStore+ReimportRequests.m
requestId <= INT64_MAX
:rid
:chunk
v32@?0@"NSString"8@"NSSet"16^B24
UPDATE reimportRequests SET executionTimestamp = :time WHERE id = :id
UPDATE reimportItems SET seenByReceiverTimestamp = :time WHERE bundleId = :bundleId AND uniqueId IN _pas_nsarray(:uids)
:bundleId
UPDATE reimportItems SET seenByReceiverTimestamp = :time WHERE bundleId = :bundleId AND uniqueId = :uniqueId
:uniqueId
UPDATE reimportItems SET uniqueId = :newValue WHERE bundleId = :bundleId AND uniqueId = :oldValue
:oldValue
:newValue
queryTimestamp IS NULL
queryTimestamp IS NOT NULL AND executionTimestamp IS NULL
SELECT id, plugin, personHandle, startDateTimestamp, endDateTimestamp FROM reimportRequests WHERE %@
SELECT bundleId, uniqueId FROM reimportItems WHERE reimportRequestId = :id AND seenByReceiverTimestamp IS NULL
%@:%@
SELECT 1 FROM reimportItems WHERE bundleId = :bid AND uniqueId = :uid
SELECT 1 FROM reimportItems WHERE bundleId = :bid
DELETE FROM reimportRequests WHERE creationTimestamp < :date
:date
DELETE FROM reimportRequests WHERE executionTimestamp IS NOT NULL AND id NOT IN (     SELECT DISTINCT reimportRequestId FROM reimportItems     WHERE seenByReceiverTimestamp IS NULL )
DELETE FROM reimportItems WHERE reimportRequestId NOT IN (SELECT id FROM reimportRequests)
SELECT creationTimestamp, queryTimestamp, executionTimestamp FROM reimportRequests
reimportRequests_total
reimportRequests_unqueried
reimportRequests_unexecuted
reimportRequests_oldest
reimportRequests_oldestOpen
SELECT seenByReceiverTimestamp FROM reimportItems
reimportItems_total
reimportItems_unseen
SGXPCActivity.m
0 <= activityId && activityId < _SGXPCActivityCount
handler
criteria
activity
com.apple.suggestions.sqlentitystore.cacheprecomputation
com.apple.suggestions.collectweeklystats
com.apple.suggestd.mail-intelligence-tasks
com.apple.suggestd.harvested-url-metric-upload
com.apple.suggestd.custom-response-harvest
com.apple.suggestd.phone-qr-engagement-data-recording
const char *identifierForActivityId(SGXPCActivity)
Unknown activity id: %i
SGEnrichmentWritebackAdapter
@"NSMutableArray"8@?0
v16@?0@"NSMutableArray"8
B16@?0@"SGStorageEvent"8
v24@?0@"NSMutableArray"8^B16
SGEnrichmentWritebackAdapter.m
store
%@-writeback-%tu
SGWritebackV2
v32@?0@"CSSearchableItemAttributeSet"8Q16^B24
CoreSuggestions-EnrichmentWriteback-%@
SGEnrichmentWritebackVersion != 2 && (false
 || com_apple_mail_messageID == "
@"NSMutableArray"16@?0@"NSString"8
expected a nonnull result array for mail message id %@
v24@?0@"NSObject"8@"NSError"16
SGEnrichmentWritebackVersion
enrichmentVersionWritebackKey
SGDonatedEventVersion
SGSchemas
^(?:[A-Z0-9][A-Z]|[A-Z][A-Z0-9])
@"NSString"16@?0@"_PASTuple2"8
SGDepartureAirportNames
SGArrivalAirportNames
reservationStatus
SGDepartureTimeUTCOffsetSeconds
SGArrivalTimeUTCOffsetSeconds
potentialAction
CheckInAction
target
ageOfTheSubmodelInDays
nbHighlyDiscriminantTokensForSaliency
nbHighlyDiscriminantTokensForIgnorability
nbExtremelyDiscriminantTokensForSaliency
nbExtremelyDiscriminantTokensForIgnorability
SGTokenString.m
string
string.length < ((unsigned long)1 << 31)
index < _length
range.location + range.length <= _length
com.apple.suggestions.reversetemplatejs
com.apple.suggestions.reversetemplatejs.pressure
v12@?0I8
DISPATCH_MEMORYPRESSURE_NORMAL
DISPATCH_MEMORYPRESSURE_WARN
DISPATCH_MEMORYPRESSURE_CRITICAL
DISPATCH_MEMORYPRESSURE_PROC_LIMIT_WARN
DISPATCH_MEMORYPRESSURE_PROC_LIMIT_CRITICAL
UNKNOWN
SGReverseTemplateJS
ReverseTemplateJS
SGReverseTemplateJS.m
assetPath
parentDir
fileNameWithPathExtension
@"JSValue"16@?0@"NSString"8
load
loadWithVmGrowthCounter
loadNoVmGrowthCounter
debug
developerLog
console
@"NSDictionary"32@?0@"NSString"8d16@"NSString"24
runDataDetectors
@"NSDictionary"40@?0@"NSString"8d16@"NSString"24@"NSArray"32
runDataDetectorsWithMetadata
parseMicrodata
tokenizeString
decodeEntitiesInString
detectLanguageForString
ASSET_VERSION
@"NSString"20@?0@"NSString"8B16
htmlToPlainText
getCurrentLocale
@"NSDictionary"40@?0@"NSString"8@"NSString"16@"NSString"24Q32
@16@?0@"NSValue"8
tags
ranges
getLinguisticTagsForString
getPreferredLocalizationsFromArray must be called with an array of strings
getPreferredLocalizationsFromArray
@"NSString"40@?0@"NSNumber"8@"NSNumber"16@"NSNumber"24@"NSNumber"32
getLocalizedFormattedDatetimeString
isInternalDevice
allowAnyDomainForMarkup
allowUnverifiedSourceForMarkup
@"NSDictionary"8@?0
getSystemVersion
@"NSString"24@?0@"NSNumber"8@"NSString"16
ZZZZZ
getGMTOffsetFromDateTimeAndTimeZoneOlsonCode
d8@?0
secondsForTiming
freeJSContext
@"NSArray"32@?0@"NSString"8@"NSString"16@"NSString"24
getFlightInformation
getMD5Hash
yyyy-MM-dd
getHistoricalFlightInformation
@"SGJSBurstTrie"16@?0@"NSString"8
loadBurstTrie
loadMappedData
main.js
html
%@%@
com.apple.undefined
request
v32@?0@"PARTask"8@"PARResponse"16@"NSError"24
error
userInfo
carrierCode
carrierName
carrierPhoneNumber
flightID
operatorCarrierCode
operatorFlightNumber
status
departurePublishedTime
departureActualTime
arrivalPublishedTime
arrivalActualTime
divertedAirport
legs
Can't create formattedDate, date is nil
code
timezone
city
street
district
postalCode
countryCode
country
secondsFromGMT
scheduled
delayed
redirected
diverted
landed
canceled
File URL must be a valid path.
SGReverseTemplateJS.holdXpcTransactionForShortDelay
shouldDownloadFull
eventClassificationForEntity
resolveCandidatesForJSDict
getPrivacyAwareMlLogs
getFlightReferencesAndReservationId
expected
predicted
diffSchemasArrays
mergeSchemasArrays
reverseMapForEntity
taggedCharacterRanges
outputs
sourceMetadata
jsMessageLogs
emailToOutputWithTiming
textMessageToOutputWithTiming
schemaOrgToOutputWithTiming
emailToJsonLdWithExceptions
exceptions
_jsContext
This method must be stubbed!
https
/api/flights
airline_code
flight_number
URL Should not return nil if host is provided and path starts with a '/': %@ %@
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
payload
POST
application/json
Content-Type
JSContext
Class getJSContextClass(void)_block_invoke
void *JavaScriptCoreLibrary(void)
JSValue
Class getJSValueClass(void)_block_invoke
JSObjectRef SGJSObjectMakeArrayBufferWithBytesNoCopy(JSContextRef, void *, size_t, JSTypedArrayBytesDeallocator, void *, JSValueRef *)
JSObjectMakeArrayBufferWithBytesNoCopy
JSContextGroupRef SGJSContextGetGroup(JSContextRef)
JSContextGetGroup
JSStringRef SGJSStringCreateWithUTF8CString(const char *)
JSStringCreateWithUTF8CString
JSScriptRef SGJSScriptCreateReferencingImmortalASCIIText(JSContextGroupRef, JSStringRef, int, const char *, size_t, JSStringRef *, int *)
JSScriptCreateReferencingImmortalASCIIText
void SGJSStringRelease(JSStringRef)
JSStringRelease
JSValueRef SGJSScriptEvaluate(JSContextRef, JSScriptRef, JSValueRef, JSValueRef *)
JSScriptEvaluate
void SGJSScriptRelease(JSScriptRef)
JSScriptRelease
void SGJSGarbageCollect(JSContextRef)
JSGarbageCollect
master_whitelist.trie
com.apple.suggestions.masterwhitelist
v16@?0@"SGDomainWhitelistCheckerGuardedData"8
www.
PRODUCTIVITY_INTELLIGENCE_STRUCTURED_EVENTS
supportedProviders
engineConfig
StructuredEventModel.mlmodelc
structuredEventInputMapping
structuredEventOutputMapping
foundInMailNotifications
v16@?0@"SGStructuredEventTrialClientWrapperGuardedData"8
SGSqliteDatabase.m
hasInhumanTag
tagsHaveEscapedTag
delimitedString
firstStringAfterPrefix
PRAGMA auto_vacuum=INCREMENTAL
:memory:
mode=memory
file:
?mode=memory&cache=shared
sqlite handle unexpected nil
onPrep
TypeError
Could not securely code this type into SQLite
Could not insert this type into sqlite
updateTable:dictionary:whereClause: requires nonempty dictionary
UPDATE %@ SET %@%@
 WHERE 
insertOrReplaceIntoTable:dictionary: requires nonempty dictionary
INSERT OR REPLACE INTO %@ (%@) VALUES (%@)
[%@: %@ <%p>]
SELECT seq FROM sqlite_sequence WHERE name = :tableName
:tableName
PRAGMA integrity_check
Error: failed to run integrity_check on %@: %@
PRAGMA page_count
PRAGMA freelist_count
PRAGMA auto_vacuum
PRAGMA auto_vacuum=2
VACUUM
PRAGMA incremental_vacuum(%lu)
PRAGMA optimize(%llX)
void hasInhumanTag(sqlite3_context *, int, sqlite3_value **)
argc == 1
|inhuman
void tagsHaveEscapedTag(sqlite3_context *, int, sqlite3_value **)
argc == 2
void delimitedString(sqlite3_context *, int, sqlite3_value **)
void firstStringAfterPrefix(sqlite3_context *, int, sqlite3_value **)
int _indexForBindParam(sqlite3_stmt *, const char *)
stmt
Unknown bind parameter "%s"
ml_summary
extractionTemplate
reverseMapped_EVENT_TIME__START_DATETIME
reverseMapped_TITLE__HOTEL_RESTAURANT_NAME
reverseMapped_TITLE__MOVIE_TICKET_NAME
reverseMapped_EVENT_LOCATION__START_ADDRESS
reverseMapped_EVENT_LOCATION__START_PLACE
crossTags
schema
mergedSchema
diff
missingEntities
ddSGDetections
No event predicted by ML classifier
@context
http://schema.org
http://schema.org/FoodEstablishmentReservation
http://schema.org/FoodEstablishment
startTime
reservationName
http://schema.org/LodgingReservation
checkinTime
checkoutTime
http://schema.org/LodgingBusiness
place
http://schema.org/RentalCarReservation
pickupTime
pickupLocation
dropoffTime
dropoffLocation
endAddress
endPlace
providerName
http://schema.org/ScreeningEvent
Unsupported category: %@
ml_plaintext_prediction
cat_%@
yyyy-MM-dd'T'HH:mm:ss
http://schema.org/Reservation
Cancelled
Confirmed
http://schema.org/PostalAddress
streetAddress
addressLocality
addressRegion
addressCountry
shadowExtraction
mlDefaultExtraction
fallbackExtraction
Exception
templateExtractionOutput
No Event
schemaDiff_%@
schemaFromTemplate_%@
M_%@
assetVersion
assetIdentifier
privacyAwareSubject
category
usecase
%s%d
(%p)
 flag=%#x
DeadState in RunStateOnByte
NULL state in RunStateOnByte
Unexpected special state in RunStateOnByte
DFA memory cache could be too small: 
only room for 
 states.
StateSaver failed to restore state.
Text is not inside context.
Failed to analyze start state.
RunStateOnByteUnlocked failed after ResetCache
RunStateOnByteUnlocked failed after Reset
timing
<SGSchemaOrgKey uuid:%@>
SELECT locationType, label, address, airportCode, latitude, longitude, accuracy, quality FROM locations WHERE id = ?
eventId
airportCode
accuracy
quality
locations
DELETE FROM snippets WHERE entityId IN (%@)
qmarksSeparatedByCommas
DELETE FROM emailSnippets WHERE emailId IN (%@)
SGSqlEntityStore+Deleting.m
batchSize > 0
SELECT rowid AS minId, key FROM emailMetadata WHERE creationTimestamp < :time AND rowid > :minId ORDER BY rowid LIMIT :limit
:time
minId
SELECT messageId FROM mailIntelligence_saliency WHERE creationTimestamp < :time
possible infinite loop
DELETE FROM mailIntelligence_saliency WHERE messageId IN _pas_nsarray(:messageIds) RETURNING creationTimestamp
:messageIds
mailIntelligence_saliency
DELETE FROM mailIntelligence_spotlightMapping WHERE messageId IN _pas_nsarray(:messageIds)
SELECT entityKey FROM entity WHERE entityType = :entityType GROUP BY entityKey having ( COUNT(entityKey) > 1)
WHERE e.entityKey in _pas_nsarray(:candidateEntityKeys) AND e.entityType = :entityType
:candidateEntityKeys
WHERE ((e.timeRangeEnd < :timeRangeEnd AND e.timeRangeEnd != 0) OR (e.timeRangeEnd == 0 AND e.creationTimestamp < :creationTimestamp)) AND e.entityType = :entityType
:timeRangeEnd
WHERE e.timeRangeEnd < :timeRangeEnd AND e.entityType = :entityType
@"SGEntityTag"16@?0@"SGEmailKey"8
WHERE parentKey = ?
DROP TABLE IF EXISTS %@
CREATE TEMP TABLE %@ (masterEntityId INTEGER PRIMARY KEY)
INSERT OR IGNORE INTO %@ SELECT e.masterEntityId FROM %@ AS cr CROSS JOIN entity AS e ON e.id = cr.id WHERE e.entityType IN (:email, :phone, :address, :birthday, :socialProfile)   AND e.masterEntityId > 0   AND e.masterEntityId NOT IN (SELECT id FROM %@)
:phone
:address
:birthday
:socialProfile
SELECT DISTINCT id FROM %@
pseudoContactsWithDeletedDetails
%@ FROM %@ AS c CROSS JOIN entity AS e ON c.id = e.id CROSS JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityType = :pseudoevent OR e.entityType = :pseudoreminder
:pseudoevent
:pseudoreminder
DELETE FROM entity WHERE id IN (SELECT id FROM %@)
DELETE FROM entity_fts WHERE docid IN (SELECT id FROM %@)
SELECT masterEntityId FROM %@
DROP TABLE %@
DROP TABLE IF EXISTS childrenOfRemovedParents
CREATE TEMP TABLE childrenOfRemovedParents (id INTEGER PRIMARY KEY)
INSERT INTO childrenOfRemovedParents SELECT DISTINCT childId FROM entityParentage WHERE parentKey IN _pas_nsarray(:keys)
DROP TABLE IF EXISTS childrenWithRemainingParents
CREATE TEMP TABLE childrenWithRemainingParents (id INTEGER PRIMARY KEY)
INSERT INTO childrenWithRemainingParents SELECT DISTINCT cr.id FROM childrenOfRemovedParents AS cr CROSS JOIN entityParentage AS ep ON cr.id = ep.childId WHERE ep.parentKey NOT IN _pas_nsarray(:keys)
DROP TABLE IF EXISTS childrenToRemove
CREATE TEMP TABLE childrenToRemove (id INTEGER PRIMARY KEY)
INSERT INTO childrenToRemove SELECT id FROM childrenOfRemovedParents      WHERE id NOT IN (SELECT id FROM childrenWithRemainingParents)
childrenToRemove
DELETE FROM entityTags WHERE parentKey IN _pas_nsarray(:keys)
DELETE FROM entityParentage WHERE parentKey IN _pas_nsarray(:keys)
DROP TABLE childrenToRemove
DROP TABLE childrenWithRemainingParents
DROP TABLE childrenOfRemovedParents
DROP TABLE IF EXISTS entitiesToRemove
CREATE TEMP TABLE entitiesToRemove (id INTEGER PRIMARY KEY)
INSERT OR IGNORE INTO entitiesToRemove SELECT childId FROM entityParentage WHERE duplicateKeyHashBlob IN _pas_nsarray(:keys)
entitiesToRemove
DROP TABLE entitiesToRemove
DELETE FROM entityParentage WHERE duplicateKeyHashBlob IN _pas_nsarray(:keys)
DELETE FROM entityTags WHERE duplicateKeyHashBlob IN _pas_nsarray(:keys)
DELETE FROM locations WHERE id IN (SELECT dueLocationId FROM reminders WHERE entityId IN _pas_nsarray(:recordIds))
:recordIds
DELETE FROM reminders WHERE entityId IN _pas_nsarray(:recordIds)
DELETE FROM extractionInfos WHERE id IN (SELECT extractionInfoId FROM contactDetails WHERE entityId IN _pas_nsarray(:recordIds))
DELETE FROM contactDetails WHERE entityId IN _pas_nsarray(:recordIds)
DELETE FROM locations WHERE eventId IN (SELECT l2.eventId FROM locations AS l2 JOIN events AS e ON e.id = l2.eventId WHERE e.entityId IN _pas_nsarray(:recordIds))
DELETE FROM eventTags AS et WHERE et.eventId IN (SELECT et2.eventId FROM eventTags AS et2 JOIN events AS e ON e.id = et2.eventId WHERE e.entityId IN _pas_nsarray(:recordIds))
DELETE FROM events WHERE entityId IN _pas_nsarray(:recordIds)
DELETE FROM entityParentage WHERE duplicateKeyHashBlob IN _pas_nsarray(:compositeHashes)
:compositeHashes
@"NSData"16@?0@"SGDuplicateKey"8
@"NSString"16@?0@"SGDuplicateKey"8
DELETE FROM emailTags WHERE key IN _pas_nsarray(:keys)
SELECT id FROM emailMetadata WHERE key IN _pas_nsarray(:keys)
DELETE FROM emailMetadata WHERE key IN _pas_nsarray(:keys)
Unexpected tableId for record: %@
DROP TABLE IF EXISTS interactionsByBundleId
CREATE TEMP TABLE interactionsByBundleId (bundleId TEXT NOT NULL, timestamp FLOAT, key TEXT NOT NULL)
INSERT INTO interactionsByBundleId   SELECT delimitedString(key, 0),          CASE WHEN updateTimestamp > 0 THEN updateTimestamp              WHEN creationTimestamp > 0 THEN creationTimestamp              ELSE lastSeenTimestamp END,         key  FROM emailMetaData  WHERE type = ?
CREATE INDEX ix_interactionsByBundleId_bundleId ON interactionsByBundleId(bundleId, timestamp DESC, key)
SELECT bundleId, count(*) FROM interactionsByBundleId GROUP BY bundleId
SELECT key FROM interactionsByBundleId WHERE bundleId = :bundleID ORDER BY timestamp DESC LIMIT -1 OFFSET :limit
:bundleID
v24@?0@"NSString"8^B16
tag.indexed
SELECT entityKey, entityType, parentKey FROM entityTags WHERE tag = :tag
True
False
tim@apple.com
craig@apple.com
eat@myshorts.co
SGAhoCorasick.m
bytecode
bytecode.length > 0
bytecode.length % sizeof(op_t) == 0
SGAhoCorasickMaxIter
Exceeded iteration limit
SGAhoCorasickBoundsCheck
Node %u beyond bound %u
featureVector
Identity
QuotedNickname
CJKSpacers
LastNameFirst
LeadingHonorificPeriodRequired
LeadingHonorificPeriodOptional
TrailingHonorific
CommonVietnameseSurnameList
SpanishNameClassifierConfidenceThreshold
SpanishNameCharacterIndicators
SpanishNameUnigramIndicators
SpanishNameBigramIndicators
TwoCharSpanishNameEndings
SpanishNameLocaleIndicators
Any-Latin; Latin-ASCII
%s.%s
SGNames.m
failed to get patterns for LeadingHonorificPeriodRequired
failed to get patterns for LeadingHonorificPeriodOptional
v28@?0Q8Q16B24
 via LinkedIn
()<>[]"@
Could not initialize pattern.
Could not initialize regular expression: %@
@"NSRegularExpression"8@?0
%c.%s
-_. 
NSCharacterSet *charSetWithEndpoints(int, ...)
n_args && (n_args % 2) == 0
start < end
namefreq.trie
_PASCFBurstTrie *nameFreqTrie(void)_block_invoke_2
Could not load name frequency trie
void enumerateTrailingHonorificMatchesInString(NSString *__strong, BOOL (^__strong)(NSRange))_block_invoke
Could not initialize the raw regexp
NSArray<NSString *> *tokenizeName(NSString *__strong)_block_invoke_2
guardedTokenizer
duration
scrolled_to_end
mailbox_type
app_launch
app_resume
message_view_start
message_view_end
message_fetched
message_moved
reply_sent
reply_draft_started
forward_draft_started
flag_changed
read_changed
link_clicked
<%@>
SGSqlEntityStore+SqlHelpers.m
serializedEntityKey
SELECT title, content, contentRangeOfInterest FROM snippets WHERE entityId=?
%@[%c]
WHERE entityType = :entityType
SELECT COUNT(*) FROM entity
SELECT COUNT(*) FROM emailMetadata
%@ FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId %@ 
schema_version
entities
SELECT entityType, COUNT(*) FROM entity GROUP BY entityType UNION SELECT type, COUNT(*) FROM emailMetadata GROUP BY type
total_entities
SELECT COUNT(*) FROM (SELECT id FROM entity WHERE masterEntityId > 0 AND entityType = :entityType)
merged_pseudocontacts
SELECT count(*), MIN(entityId), MAX(entityId) FROM serializedContacts
serialized_contacts_lowest
serialized_contacts_highest
serialized_contacts_limit
serialized_contacts_total
entity_fts
SELECT count(*) FROM entity_fts
entity_fts_count
SELECT count(*) FROM entity_fts WHERE docid != entityId
entity_fts_details
entity_fts_lang
snippets
emailSnippets
SELECT (SELECT COUNT(*) FROM snippets) + (SELECT COUNT(*) FROM emailSnippets)
snippets_count
SELECT (SELECT COUNT(*) FROM snippets WHERE title IS NOT NULL AND title != '') + (SELECT COUNT(*) FROM emailSnippets WHERE title IS NOT NULL AND title != '')
snippets_title_count
SELECT (SELECT COUNT(*) FROM snippets WHERE content IS NOT NULL AND content != '') + (SELECT COUNT(*) FROM emailSnippets WHERE content IS NOT NULL AND content != '')
snippets_content_count
SELECT COUNT(*) FROM harvestQueueTombstones
tombstones_count
SELECT COUNT(*) FROM entity WHERE id NOT IN (SELECT DISTINCT childId FROM entityParentage)
orphaned_entity_count
SELECT key, value FROM statsCounters
SELECT COUNT(bundle_id), bundle_id FROM urls GROUP BY bundle_id
urlsCounters
DELETE FROM entity
DELETE FROM entity_fts
DELETE FROM entityParentage
DELETE FROM entityTags
DELETE FROM entityReferences
DELETE FROM emailMetadata
DELETE FROM emailTags
DELETE FROM serializedContacts
DELETE FROM cnContactsToSgContacts
DELETE FROM identityInterdict
DELETE FROM urls
DELETE FROM confirmedFieldValues
DELETE FROM snippets
DELETE FROM emailSnippets
INSERT INTO sqlite_sequence(name, seq) SELECT value, :minId FROM _pas_nsarray(:tableNames)
:minId
:tableNames
WHERE e.groupId = :groupId
:groupId
UPDATE entity SET masterEntityId = (CASE id
WHEN %lld THEN %lld
ELSE -1 END) WHERE groupId = :groupId
SELECT e.id,e.entityKey,e.entityType,ep.extractionType,ep.sourceKey,e.author,e.title,e.creationTimestamp,e.updateTimestamp,e.indexTimestamp,e.tags,e.structuredData,e.quality,e.masterEntityId,e.groupId,e.state,ep.parentKey,e.timeRangeStart,e.timeRangeEnd,e.floatingRange,e.timeRangeStartUTCOffsetSeconds,e.timeRangeEndUTCOffsetSeconds,e.locations,ep.modelVersion,ep.modelConfidence, e.harvestedOnBuild 
SELECT e.id,e.entityKey,e.entityType,ep.extractionType,ep.sourceKey,e.author,e.title,e.creationTimestamp,e.updateTimestamp,e.indexTimestamp,e.tags,e.structuredData,e.quality,e.masterEntityId,e.groupId,e.state,ep.parentKey,e.timeRangeStart,e.timeRangeEnd,e.floatingRange,e.timeRangeStartUTCOffsetSeconds,e.timeRangeEndUTCOffsetSeconds,e.locations 
http://schema.org/RentalCar
http://schema.org/Brand
brand
rentalCompany
Car Rental
databasecheck_
***** Database Check: %@
***** Overall Status: %@
failure
**** Integrity check
Integrity check of entities.db
Error: failed to run integrity_check on entities.db: %@
Integrity check of snippets.db
Error: failed to run integrity_check on snippets.db: %@
Broken entityId reference check: %@
SELECT entityId, * FROM %@ WHERE entityId NOT IN (SELECT id FROM entity)
[%@]
Failed to check for entityId broken reference in %@
SELECT DISTINCT masterEntityId FROM entity WHERE masterEntityId >= 0 AND masterEntityId != id AND entityType = :pseudo
SELECT MIN(id) FROM entity WHERE masterEntityId = :masterEntityId AND entityType = :pseudo
SGSqlEntityStore+DatabaseCheck.m
Failed to find merge group minimal element
  * merge group with masterEntityId %lld has unexpected minimal element %lld
SELECT masterEntityId FROM entity WHERE id = :mergeId
:mergeId
  * merge group has masterEntityId %lld, but there is no row with id == %lld
  * merge group has masterEntityId %lld, but the row with entity.id == %lld has masterEntityId == %lld
[1m%@
personFromSenderProbability
personFromSenderInDyadicConversationProbability
subjectContentProbability
personToRecipientsProbability
personCCRecipientsProbability
domainFromSenderProbability
conversationProbability
listIdProbability
attachmentsProbability
subjectCountStatsProbability
standardMailRulesProbability
mailboxProbability
mailboxTypeProbability
SGSqlEntityStore+Maintenance.m
Tried to register cache computation task on an in-memory store
v16@?0@"NSObject<OS_xpc_object>"8
dbstats
merged_pseudocontact_percent
entityTypes.
SGRTCLogging+Helpers.m
bucketSize must be > 0
geocoded
airportCodeWithCoordinates
addressWithCoordinatesWithLabel
addressWithLabel
coordinates
HTMLPreprocessor.js
v24@?0@8@"NSError"16
WKWebViewConfiguration
Class getWKWebViewConfigurationClass(void)_block_invoke
SGDOMParser.m
void *WebKitLibrary(void)
WKWebsiteDataStore
Class getWKWebsiteDataStoreClass(void)_block_invoke
WKWebpagePreferences
Class getWKWebpagePreferencesClass(void)_block_invoke
WKWebView
Class getWKWebViewClass(void)_block_invoke
SGStorageLocation.m
isnan(latitude) == isnan(longitude)
isnan(latitude) || (-90 <= latitude && latitude <= 90)
isnan(longitude) || (-180 <= longitude && longitude <= 180)
!isnan(latitude) || label || address
isfinite(accuracy)
isfinite(quality)
<SGStorageLocation@%0.2f/%0.2f label: '%@' address: '%@' airportCode: '%@'
SGOrigin+Internal.m
Unknown entity type %u
Extracted data must have a parent.
Pseudo contacts must be derived from at least one parent entity
Unsupported type: %@
Dunno how to handle a pseudo contact with a parent entity type: %@
int64_t makeInternalEntityId(SGTableId, int64_t)
SGRecordId+Internal.m
rowId out of range
experimentId
treatmentId
deploymentId
SGDCloudKitSync.m
property
set%c%s:
snprintfResult >= 0
objcProperty != nil
<%@ %@>
SGDCloudKitSync-callbacks
strongEndOperation
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
DeleteZone operation attempt completion [retries: %lu]
CreateZone operation attempt completion [retries: %lu]
v24@?0@"NSDictionary"8@"NSError"16
salt_
salt_atomic_reference
salt-manatee
salt
non-nil
ProcureSalt operation attempt completion [retries: %lu]
com_apple_suggestions_ck_event
v16@?0@"CKRecord"8
muscularEndOperation
[recordZoneID isEqual:[self recordZoneId]]
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
WriteRecord operation attempt completion [retries: %lu]
SGDCloudKitSync_sharedInstanceConfigurationQueue
com.apple.CoreSuggestions.PseudoEvents
com.apple.suggestd.aps
v16@?0@"_SGDCloudKitSyncPersistedState"8
This block should not be run more than once
DISABLED
ENABLED
SGDCloudKitSync.processStateChanges
v24@?0@"CKAccountInfo"8@"NSError"16
v24@?0@"NSNumber"8@"NSError"16
v16@?0@"SGFuture"8
v24@?0@"NSString"8@"NSError"16
aps-environment
SGCKAPSEnvironmentDomain
v24@?0@"CKSubscription"8@"NSError"16
_database == nil
_callback
com.apple.aps.suggestd
com.apple.icloud-container.
com.apple.suggestd
v40@?0@"NSString"8@16@"NSObject"24@"NSObject"32
com.apple.suggestions.sgckAddEntity
@"NSArray"24@?0@"NSData"8@"CKRecordID"16
com.apple.suggestions.sgckDeleteGroupId
@"NSArray"16@?0@"NSData"8
_callback == nil
B16@?0@"SGPipelineEntity"8
_deleteAllSyncedItemsCallback == nil
UnknownSaltError
successful
0-length
[notification isKindOfClass:[CKDatabaseNotification class]]
<SGReminderDueLocation type:'%@' trigger: %@ name: %@>
chatLengthEstimator.cmsketch
SGChatLengthEstimator.m
endTime
partySize
Restaurant
None
SubjectLength
SubjectWordCount
SenderIsVIP
AttachmentHistogramApplication
AttachmentHistogramMedia
AttachmentHistogramOthers
EmailAgeInDays
SenderConnectionScore
PersonFromSenderProbability
SubjectContentProbability
PersonToRecipientsProbability
PersonCCRecipientsProbability
DomainFromSenderProbability
PersonFromSenderInDyadicConversationProbability
AttachmentHistogramProbability
ConversationIdProbability
ListIdProbability
PredictedAttachment
PrivateSubject
PrivateTokenizedSubject
PrivateSenderFrom
PrivateSenderFromInDyadicConversation
PrivateSortedToRecipients
PrivateToRecipientsPairs
PrivateSortedCCRecipients
PrivateCCRecipientsPairs
SenderFullEmailDomain
PrivateAttachmentHistogram
PrivateConversationId
PrivateListId
PrivateHTMLBodyTextContent
PrivateHTMLBodyTextContentLanguageIdentifier
ScrolledToEnd
UserReplied
NumberOfMailsViewedBeforeSinceAvailable
TimeBeforeViewStartSinceAvailable
MessageViewCount
MessageViewMaxDwellTime
MessageViewTotalDwellTime
NumberOfUnreadMessageAtFirstViewTime
NumberOfMoreRecentUnreadMessageAtFirstViewTime
MarkedAsRead
MarkedAsUnread
MailGotFlagged
ReplyDraftStarted
ForwardDraftStarted
MarkedAsJunk
LinkClicked
@16@?0@"NSNumber"8
@"NSString"16@?0@"NSNumber"8
[%@]
%@: %@
@"SGStorageLocation"16@?0@"SGDCKLocation"8
SGPipelineEntity+CloudKitRecord.m
[self.duplicateKey.entityKey isKindOfClass:[SGPseudoEventKey class]]
parentEntityType == SGEntityTypeWebPage || parentEntityType == SGEntityTypeInteraction
Only all-day events should be floating. Other events should have a timezone set before being synced up.
PQT_ContactSharing_TrainingTransformers.plist
SGContactSharingModel.m
SGContactSharingModel - Provided probabilities (count %ld) do not match valid SGContactSharingLabels (count %ld).
countUpTo8KB
count8KBTo32KB
count32KBTo128KB
count128KBTo512KB
count512KBTo2MB
countOver2MB
Application
Media
Others
 [truncated]
[^\x00-\x{10ffff}]
(?:)
Bad final char: 
{%d,}
{%d}
{%d,%d}
(?-m:^)
(?-m:$)
(?HaveMatch:%d)
(){}[]*+?|.^$\
[]^-\
\x%02x
\x{%x}
<SGDetection/%@ '%@'>
:ABPerson
%tu out of range (count %tu)
@16@?0Q8
Q8@?0
<SGLabeledValue: %@: %@>
@"NSString"16@?0@"SGEmailAddress"8
@"NSString"16@?0@"SGPhoneNumber"8
(nil)
bi_lstm_0_h_out
bi_lstm_0_c_out
bi_lstm_0_h_out_rev
bi_lstm_0_c_out_rev
addSingleton
componentAnalysis.mm
elementToRepresentative.find(x) == elementToRepresentative.end()
union_
rep1Iter != elementToRepresentative.end()
rep2Iter != elementToRepresentative.end()
set1Iter != representativeToSet.end() && set2Iter != representativeToSet.end()
TARGET_STRING
MAC_DISTANCE
-[SGTokenDistanceMappingTransformer transform:]
SGTokenDistanceMappingTransformer.m
+[SGTokenDistanceMappingTransformer transformArray:withTargetIndex:maximumDistance:]
index < input.count
%@__%d
SuggestionsMLDebugContextDataKey
assertion_context
------
SGJournalEntry.m
eventBatch
reminder
<SGJournalEntry op:%lu entity:%@
predictedMissingElementScore
foundMatchingElement
v16@?0@"SGRealtimeSuggestionsTuple"8
kSuggestionsFromEmailContentCacheSalt
v24@?0@"SGRealtimeSuggestionsTuple"8@"NSError"16
suggestionsFromMessage message harvest queue
@"SGTextMessage"8@?0
after banner callback
SGDSuggestManager+RealtimeDonations.m
Passing 0 for options would return nothing
suggestionsFromEmailContent
_suggestionsFromMessage-plugins
@"SGRealtimeSuggestionsTuple"8@?0
B16@?0@"SGRealtimeContact"8
B16@?0@"SGRealtimeEvent"8
@"SGRealtimeSuggestionsTuple"16@?0@"SGRealtimeSuggestionsTuple"8
@"SGRealtimeReminder"16@?0@"SGRealtimeReminder"8
MAPPINGS
MAPPING_TYPE
MAPPING_LANGUAGE
-[SGStringMappingTransformer transform:]
SGStringMappingTransformer.m
[input isKindOfClass:[NSArray class]]
http://schema.org/BoatReservation
http://schema.org/BoatTrip
http://schema.org/BoatTerminal
arrivalBoatTerminal
departureBoatTerminal
Boat Trip
EventMetaDataExtractor_ML_EVENT__CATEGORY
EventMetaDataExtractor_ML_EVENT__NAME
EventMetaDataExtractor_ML_EVENT__DEPARTURE_LOCATION
EventMetaDataExtractor_ML_EVENT__ARRIVAL_LOCATION
EventMetaDataExtractor_ML_EVENT__TITLE
EventMetaDataExtractor_ML_EVENT__START_DATETIME
EventMetaDataExtractor_ML_EVENT__END_DATETIME
EventMetaDataExtractor_ML_EVENT__END_DATETIME_IS_SIGNIFICANT
SGMessageEventDissectorConfig
EventClassifier
MLEventExtractionModel.assets
EventClassifierThreshold
EventExtractionMessageProcessingLimit
EventExtractionRateLimitInterval
arrivalAirportName
departureAirportName
arrivalAirportCode
departureAirportCode
flightReferences
IATA
ML_EventMessage
Train
Hotel
Movie
GenericEvent
Unknown
eventClassifierPath
assetFolderPath
v16@?0@"SGMessageEventDissectorGuardedData"8
CoreSuggestionsInternals
IndiaSMSEventExtraction
IndiaSMSEventExtractionMobileAssets
com.apple.eventMetaDataExtractor.eventMetaDataExtractorPlugin
TaskName
EventSuggestionsFromMessage
InputMessage
AssetFolderPath
v24@?0@"MLRTaskResult"8@"NSError"16
http://schema.org/ReservationConfirmed
http://schema.org/BusStop
http://schema.org/TrainReservation
http://schema.org/TrainTrip
departureStation
http://schema.org/TrainStation
arrivalStation
GenericEvent|%@|%@|%@
@8@?0
deviceLocale
outputCategory
messageProcessingRate
failureReasonCode
@"NSDictionary"16@?0@"NSDictionary"8
com.apple.suggestions.messageEventDissector
:label
:extractionInfoId
INSERT INTO contactDetails (entityId, duplicateKey, sourceKey, label, value, type, extractionInfoId) VALUES (:entityId, :duplicateKey, :sourceKey, :label, :value, :type, :extractionInfoId)
SELECT id FROM contactDetails WHERE duplicateKey = :duplicateKey
SELECT entityId FROM contactDetails WHERE duplicateKey = :duplicateKey
SELECT content FROM snippets WHERE entityId = :entityId
SELECT value, label, type, duplicateKey, sourceKey, extractionInfoId FROM contactDetails WHERE entityId = :entityId OR entityId IN (SELECT e.id FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.masterEntityId = :entityId)
label
extractionInfoId
DDScannerCreationError
Failed to construct DDScanner: %@
SGDataDetectors-SharedScanner
NSTextCheckingTypeLink
NSTextCheckingTypePhoneNumber
NSTextCheckingTypeAddress
NSTextCheckingTypeTransitInformation
NSTextCheckingTypeDate
SGDDMatchDate
SGDDMatchFlight
SGDDMatchLink
SGDDMatchLookupHint
SGDDMatchDelivery
SGDDMatchTimeOffset
SGDDMatchOther
B16@?0^{__DDResult={__CFRuntimeBase=QAQ}{__DDQueryRange={__DDQueryOffset=b32b32}{__DDQueryOffset=b32b32}}{?=qq}q^{__CFArray}^{__CFString}^{__CFString}^v^{__CFDictionary}qCf}8
writeInteractionEventEntities
SGSqlEntityStore+Writing.m
Do not call writeInteractionEventEntities with non-interaction entity type.
containerEntity.duplicateKey
writeEntity
Don't know how to write out a container entity of type %@
v16@?0@"SGPipelineEnrichment"8
Contact lacks a recordId prior to identity store update
@16@?0@8
Don't know how to prune container entities of type %@
SELECT parentKey FROM entityParentage WHERE childId = :childId
:childId
SELECT key FROM emailMetadata WHERE key IN _pas_nsarray(:keys) AND type = :emailType ORDER BY updateTimestamp DESC LIMIT -1 OFFSET :offset
:emailType
:offset
SELECT e.entityKey, e.entityType    FROM entity e JOIN entityParentage ep ON e.id = ep.childId    WHERE ep.parentKey = :parentKey AND e.id not in _pas_nsset(:ids)
Dump table "%@":
SELECT 
 FROM %@
%@    
contactEntity
contactDetails
q24@?0@8@16
SELECT e.downloadState FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE ep.duplicateKeyHashBlob = :duplicateKeyHash AND ep.extractionType = :extractionType
:duplicateKeyHash
_writeMessageEntityToSnippetsDb received entity type %@
INSERT OR REPLACE INTO emailSnippets (emailId, content, title) VALUES (:emailId, :content, :title)
_writeEntityToSnippetsDb received message entity type
INSERT OR REPLACE INTO snippets (entityId, content, contentRangeOfInterest, title) VALUES (:entityId, :content, :range, :title)
:range
timeRangeStart
timeRangeEnd
timeRangeStartUTCOffsetSeconds
timeRangeEndUTCOffsetSeconds
floatingRange
pendingGeocode
SELECT pendingGeocode FROM entity WHERE id = :id
id = %lld
UPDATE emailMetadata SET pendingVerification = :pendingVerification WHERE sourceKey = :souceKey
:pendingVerification
:souceKey
curatedDupe
SELECT curatedDupe FROM entity WHERE id = :id
SELECT id, creationTimestamp, updateTimestamp, downloadState FROM emailMetadata WHERE key = :key AND type = :type
author
updateTimestamp
indexTimestamp
lastSeenTimestamp
downloadState
harvestedOnBuild
pendingVerification
DELETE FROM emailTags WHERE unlikely(key = :key)
INSERT INTO emailTags (key, type, tag) VALUES (:key, :type, :tag)
:tag
entity.duplicateKey
Writing enrichment via legacy code path
enrichment.duplicateKey
Writing message entity via legacy code path
SELECT e.id, e.masterEntityId, e.creationTimestamp, e.updateTimestamp FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE (ep.duplicateKeyHashBlob = :duplicateKeyHash AND ep.extractionType = :extractionType)
 UNION SELECT e.id, e.masterEntityId, e.creationTimestamp, e.updateTimestamp FROM entity AS e WHERE e.contentHashBlob = :contentHash
:contentHash
groupId
contentHashBlob
DELETE FROM entityTags WHERE entityKey = :entityKey AND entityType = :entityType AND parentKey 
 = :parentKey
 is NULL
INSERT INTO entityTags (tag, entityKey, entityType, parentKey, duplicateKeyHash, duplicateKeyHashBlob) VALUES (:tag, :entityKey, :entityType, :parentKey, '-', :duplicateKeyHash)
childId
duplicateKeyHash
duplicateKeyHashBlob
extractionType
modelVersion
modelConfidence
loggingIdentifier
@"SGJournalEntry"16@?0@"SGEntity"8
INSERT OR REPLACE INTO entity_fts(docid, entityId, messagingTerms, ftsTerms) VALUES(?, ?, ?, ?)
v16@?0q8
SELECT id, masterEntityId FROM entity WHERE masterEntityId > 0 AND entityType IN (:pseudo, :unrecognized) ORDER BY masterEntityId ASC
:unrecognized
SELECT 1 FROM _pas_nsindexset(:ids) i LEFT JOIN entity e on i.value = e.id AND e.entityType = :contact WHERE e.id IS NULL
recordId from wrong table
@16@?0@"SGRecordId"8
SELECT MIN(id) FROM entity WHERE id IN _pas_nsarray(:ids)
masterEntityRecord
UPDATE entity SET masterEntityId = :masterEntityId WHERE id IN _pas_nsarray(:ids) AND entityType IN (:pseudoContact, :unrecognizedContact)
:unrecognizedContact
writeIdentityBlobs
@"SGRecordId"16@?0@"_PASTuple2"8
[:alnum:]
[:^alnum:]
[:alpha:]
[:^alpha:]
[:ascii:]
[:^ascii:]
[:blank:]
[:^blank:]
[:cntrl:]
[:^cntrl:]
[:digit:]
[:^digit:]
[:graph:]
[:^graph:]
[:lower:]
[:^lower:]
[:print:]
[:^print:]
[:punct:]
[:^punct:]
[:space:]
[:^space:]
[:upper:]
[:^upper:]
[:word:]
[:^word:]
[:xdigit:]
[:^xdigit:]
trainName
trainNumber
trainCompany
<%s %lu-%lu>
InhumanSig
RelaxedSig/F
ValedictionSig/F
RejetedSig/F
SymbolicSig
B24@?0Q8^B16
B16@?0S8B12
-[SGSignatureDissector shouldIgnoreSignature:signatureRange:isInhuman:]_block_invoke
SGSignatureDissector.m
sub != nil
email
address
phone
quote
void tokenize(NSString *__strong, TokenizationState *, NSRange, NSString *__strong)
tokenize range (%lu, %lu) beyond text length %lu
void tokenize(NSString *__strong, TokenizationState *, NSRange, NSString *__strong)_block_invoke_2
Encountered nil Asset while attempting to load HMM tokens.
HmmSigTokens.dat
No HMM token file contained in CoreSuggestions MobileAsset version %lu
Could not load HMM keyword trie
v24@?0{?=qq}8
hmm.dat
viterbi
obs <= NUM_TOKEN_TYPES
void deserializeHmm(NSData *__strong)
Wrong data length: %li
stats
totalNumberOfEmailsProcessedForAttachmentDetectionRoundedToClosestMultipleOf20
totalNumberOfEmailsProcessedForRecipientDetectionRoundedToClosestMultipleOf20
totalNumberOfEmailsProcessedForFollowUpDetectionRoundedToClosestMultipleOf20
numberOfPredictedAttachmentOnLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
numberOfLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
numberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
numberOfLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
SELECT lastSeenTimestamp FROM emailMetadata WHERE key = :emailKey
:emailKey
UPDATE events SET whenRange = "MalformedData"
calevent
unkphone
text-message
social-profile
SGPseudoEventKey.m
globalId
[SGPseudoEventKey groupId:%@
{dropoff}
SGSqlEntityStore+SerializedContacts.m
Unexpected table for recordId: %@
DELETE FROM serializedContacts WHERE entityId = ?
DELETE FROM serializedContacts WHERE entityId IN _pas_nsarray(:ids)
SELECT data FROM serializedContacts WHERE entityId = ?
loadSerializedContactForId
SELECT entityId, data FROM serializedContacts ORDER BY entityId DESC
SELECT entityId FROM serializedContacts
DELETE FROM serializedContacts ORDER BY id DESC LIMIT -1 OFFSET ?
SELECT id FROM serializedContactCacheJobs LIMIT 1
DELETE FROM serializedContactCacheJobs WHERE id=?
updateSerializedContacts-onequery
updateSerializedContacts
INSERT INTO serializedContactCacheJobs (id) VALUES (?)
SGZipUnarchive
SGUnarchiver.m
readArchive && destinationURL
trigger
EXTRACTION__REMINDER_TITLE_ACTION_VERB
EXTRACTION__REMINDER_TITLE_ACTION_OBJECT_CORE
POLARITY__REMINDER_STATEMENT
POLARITY__COMMITMENT
POLARITY__REJECTION
POLARITY__DONE
DUE_LOCATION_TRIGGER__
ARRIVE
LEAVE
MY_HOME
MY_WORK
MY_SCHOOL
OTHER
DUE_TIME_TRIGGER__DATETIME
DUE_LOCATION_TRIGGER__LEAVE
DUE_LOCATION_TRIGGER__ARRIVE
DUE_LOCATION_TRIGGER__MY_HOME
DUE_LOCATION_TRIGGER__MY_WORK
DUE_LOCATION_TRIGGER__MY_SCHOOL
DUE_LOCATION_TRIGGER__OTHER
R_action
I_NN
I_NNP
I_Noun
I_NNS
I_NNPS
I_PRP
I_VB
I_VBP
I_VBN
I_VBG
I_Verb
I_RP
confirmation
triggerOptional
excludeList
confirmationOptional
titlePrefix
L_de
hasPolarity:
hasTitle
hasTrigger
hasCorrectNumberOfActionVerbs
hasActionVerb
hasObjectCore
@"NSString"16@?0@"SGTaggedCharacterRange"8
%@%@%@%@
OriginalMessage/F
BodyHeaders/F
CorporateFooter
SXReply
B24@?0{_NSRange=QQ}8
SGMailQuoteDissector
PRODUCTIVITY_INTELLIGENCE_REMINDERS
actionVerbOptional
messagesBannerLimit
reminderOverrides
reminderPreprocessor
reminderInputMapping
reminderOutputMapping
ReminderModel.mlmodelc
v16@?0@"SGReminderTrialClientWrapperGuardedData"8
"%@"
 OR 
%@%%%@%%
%@%%%@
%@. %@
@"NSString"16@?0@"CNLabeledValue"8
@"CNMutablePostalAddress"16@?0@"CNPostalAddress"8
#NOSTREET#
#NOCITY#
SignificantEmailAddress
SG_FEATURE_RECENCY
SG_FEATURE_ENTITYTYPE
SG_FEATURE_ADDRESSTYPE
SG_FEATURE_OTHER
SG_FEATURE_EMAILTYPE
SG_FEATURE_CALLTYPE
SG_FEATURE_PHONETYPE
SG_FEATURE_BELONGINGTO
SG_FEATURE_BELONGING
SGTokenizer.m
block
SGTokenizer
@"_PASQueueLock"8@?0
v16@?0@8
v40@?0@"NSString"8^B16{_NSRange=QQ}24
ITSTokenListCopyEscapedTokenAtIndex failed to get token at index %ld
"%@*"
ITSTokenListRef _createITSListForFTSQuery(NSString *__strong)_block_invoke_2
tokenizer
SGSqlEntityStoreErrorDomain
SELECT e.entityKey, e.entityType, ep.parentKey FROM entity AS e JOIN entityParentage AS ep ON ep.childId = e.id WHERE e.id = :rowId
SELECT ep.sourceKey FROM entity AS e JOIN entityParentage AS ep ON ep.childId = e.id WHERE e.id = :rowId
SGSqlEntityStore+Loading.m
No support for loading entities from non-legacy recordIds (%lu)
WHERE e.id = :rowId
AND ep.modelVersion != 0
WHERE e.entityType = :entityType %@ LIMIT :limit
key = :key
_loadMessageByKey matched multiple rows
SELECT title, content FROM emailSnippets WHERE emailId = :emailId
:emailId
WHERE e.entityKey = :entityKey AND e.entityType = :entityType AND ep.parentKey
WHERE e.entityKey = :entityKey AND e.entityType = :entityType
WHERE ep.sourceKey = :sourceKey AND e.entityType = :entityType
SELECT CASE WHEN masterEntityId > 0 THEN masterEntityId ELSE id END FROM entity WHERE id IN (SELECT CASE WHEN entityType = :contact THEN id ELSE groupId END FROM entity WHERE id=:id)
:contact
Could not load contact (recordId=%@)
RecordId with unexpected table: %@
No record found with id: %@
WHERE masterEntityId = :masterEntityId
SELECT e.id FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityKey = :entityKey AND e.entityType = :entityType AND ep.parentKey IS :parentKey
where
%@ AND e.entityType IN (:entityTypeDetected, :entityTypeCurated)
:entityTypeDetected
:entityTypeCurated
 AND e.entityType IN (:detPhone, :detAddr, :detEmailAddr, :detSocialProfile, :curPhone, :curAddr, :curEmailAddr, :detBirthday, :curBirthday, :curPhotoPath)
:detPhone
:detAddr
:detEmailAddr
:detSocialProfile
:curPhone
:curAddr
:curEmailAddr
:detBirthday
:curBirthday
:curPhotoPath
Contact details require a parent
SELECT e.entityKey AS 'Entity Key', COUNT(*) AS `Entity Count` FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityType = :entityType AND e.creationTimestamp >= :startDate AND e.creationTimestamp <= :endDate GROUP BY e.entityKey ORDER BY e.creationTimeStamp ASC
:startDate
:endDate
SELECT id FROM reminders LIMIT ?
Invalid duplicate key: %@
@16@?0@"SGEntity"8
identifiers.count != 0
MyPhone/F
NotMyPhone/F
MyAddress/F
NotMyAddress/F
BirthdayDate/F
Birthday/F
DetailType
DetailTypes
SelfIdentMsgCount
FilterWithAddressBook
UnlikelyPhoneSampling
LogLine
%ADDRESS%
%DATE%
SGM2BirthdayWrongDay
SGM2BirthdaySameDay
SGM2BirthdayPreviousDay
SGM2BirthdayNextDay
SGM2BirthdayPreviousWeek
SGM2BirthdayNextWeek
{SGRe2IterAction_=B}16@?0^{?={_NSRange=QQ}*}8
SGDetectedAttributeDissector.m
targetPerson
birthdayDate
subtype
v20@?0@"SGEntity"8B16
0123456789+-()
HKHealthStore
Class getHKHealthStoreClass(void)_block_invoke
void *HealthKitLibrary(void)
NSString *textToMatch(long, long, NSString *__strong, SGDataDetectorMatchType)
type == SGDDMatchPhone || type == SGDDMatchPostalAddress || type == SGDDMatchEmailAddress || type == SGDDMatchDate
%WRONG_MATCH_TYPE
SelfIdentification
SG_TARGET_NAME
SGInteractionKey.m
<SGInteractionKey bundleId:%@ personHandle:%@>
SUB_MODEL_KEY_STRING
From
Date
Subject
Header
ReplyAttribution/F
QuotedRegionStart
Headers
Separator
SG_TARGET_PHONE
SignificantPhoneNumber
Add after Compile.
Unexpected op in KeepPart: 
/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/re2/re2/re2_prefilter.h
Check failed: op_ == AND || op_ == OR
messages.added
messages.lost
messages.pruned
messages.found
messages.deleted
messages.undisplayablyLost
messages.foundAfterUndisplayablyLost
%@.distribution
%@.scalar
%@.%@.%@.richness
phones.sig
phones.phrase
emailAddresses
emailAddresses.sig
emailAddresses.phrase
postalAddresses
postalAddresses.sig
postalAddresses.phrase
%@.phones
%@.emailAddresses
%@.postalAddresses
%@.phones.%@
%@.emailAddresses.%@
%@.postalAddresses.%@
behavior
contacts
postalAddress
behavior.scalar
contactUpdate
calendarApp
eventUpdate
eventCancellation
eventDuplicate
eventNearDuplicate
mailApp
messagesApp
suggest
banner
events.%@s
behavior.distribution.%@.%@.events
contacts.%@s
behavior.distribution.%@.%@.contacts
mailsDrainedPerHarvest
harvestDrainedSomethingFromQueue
mailsDrained
messageTimeSpentInQueue
harvest
record
identityGroupSize
impressions.suggestion.banner
impressions.suggestion.banner.suppressed
impressions.suggestion.banner.hypotheticalIncludingActedOn
impressions.suggestion.banner.event
impressions.suggestion.banner.contact
impressions.suggestion.banner.hypotheticalContactIncludingInsignificant
database
corruption
integrity_check
corruption_marker
contactsFoundOnDeviceEnabled
eventsFoundOnDeviceEnabled
annotationType
range
SGTaggedCharacterRange.m
nonnull NSArray<%@*> *%@ was null when decoded
text
AnnotationTypeUnknown
AnnotationTypeDataDetectors
AnnotationTypeNLTaggerLexicalClass
AnnotationTypeNLTaggerLemma
AnnotationTypeCrossAnnotation
AnnotationTypeMetadata
AnnotationTypeMisc
AnnotationTypeReminder
AnnotationTypeHuman
AnnotationTypePadding
AnnotationTypeModelOutput
AnnotationTypeHTML
AnnotationTypeCSS
AnnotationTypeNER
<SGTaggedCharacterRange annotationType:%@ tags:%@ text:%@>
@"SGTaggedCharacterRange"16@?0@"SGTaggedCharacterRange"8
The baseTaggedCharacterRangeArray isn't sorted.
@"NSSet"16@?0@"NSSet"8
SELF beginswith 'L'
L_%@
Error in TaggedCharacterRange tags, only one can be of type SGTaggedCharacterRangeAnnotationTypeNLTaggerLemma
section_%@_intermediate
section_%@_begin
section_%@_single
tags contains space
TrialModels
com.apple.suggestd.%@.serialQueue
%@_%@_%@_%@
%@_%@_%@
SGContactDetailAddress
SGContactDetailPhone
SGContactEmailAddress
SGContactDetailInstantMessageAddress
SGContactDetailSocialProfile
SGContactDetailBirthday
SGContactDetailPhoto
NSString * _Nonnull SGContactDetailTypeDescription(SGContactDetailType)
SGContactDetail.m
Unknown contact detail type: %lu
SGContactDetailType SGEntityTypeToContactDetailType(SGEntityType)
SGEntityTypeIsContactDetail(entityType)
This should never happen. The param assert should hit if this is the case.
extractionInfo
Cannot construct SGContactDetail from entity of type %lld
SGContactDetailType SGIdentityKeyTypeToContactDetailType(SGIdentityKeyType)
Unhandled identity key type %u
NullCNContactIDPlaceholder:Null
com.apple.suggestions.suggestd.cntosgcontacts
INSERT OR REPLACE INTO cnContactsToSgContacts (cnContactIdentifier, maxEntityId, entityId) VALUES (:cnContactIdentifier, :maxEntityId, :entityId)
:cnContactIdentifier
:maxEntityId
INSERT OR REPLACE INTO cnContactsToSgContacts (cnContactIdentifier, maxEntityId, entityId) SELECT :cnContactIdentifier, :maxEntityId, value FROM _pas_nsarray(:matches)
:matches
loadCNContactMatchesForContact
SELECT maxEntityId, entityId FROM cnContactsToSgContacts WHERE cnContactIdentifier = :cnContactIdentifier
maxEntityId
DELETE FROM cnContactsToSgContacts WHERE cnContactIdentifier = :cnContactIdentifier
DELETE FROM cnContactsToSgContacts WHERE entityId IN _pas_nsarray(:ids)
SELECT DISTINCT cnContactIdentifier FROM cnContactsToSgContacts
cnContactIdentifier
SELECT cnContactIdentifier, maxEntityId, entityId FROM cnContactsToSgContacts ORDER BY cnContactIdentifier, entityId
SELECT cnContactIdentifier FROM cnContactsToSgContacts WHERE entityId = :entityId
SELECT cnContactIdentifier FROM cnContactsToSgContactsCacheJobs LIMIT :batchSize
DELETE FROM cnContactsToSgContactsCacheJobs WHERE cnContactIdentifier IN _pas_nsarray(:batchArray)
:batchArray
cnContactsToSgContactsCacheJobs
INSERT OR IGNORE INTO cnContactsToSgContactsCacheJobs (cnContactIdentifier) SELECT value FROM _pas_nsarray(:batch)
:batch
DELETE FROM cnContactsToSgContactsCacheJobs
updateCNContactMatches
updateCNContactMatches-onequery
@16@?0@"SGContact"8
SGSqlEntityStore+CNtoSGContacts.m
!exceptionSwallowed
SELECT value FROM metadata WHERE key = 'hasFullCNtoSGSync' LIMIT 1
value
INSERT OR REPLACE INTO metadata (key, value) VALUES ('hasFullCNtoSGSync', 3)
refreshSuggestionsContact
@"NSMutableSet"8@?0
@"NSString"16@?0@"SGStorageContact"8
duplicate
@"NSString"16@?0@"NSString"8
"%@"%@
@"NSString"24@?0@"NSString"8@"NSString"16
@"NSString"24@?0@"NSString"8@"NSArray"16
false
(%@ == %@)
(%@)
B24@?0@"NSString"8^B16
%@ * %@
%@ %@ *
kMDItemDisplayName
cdwt
firstInitial
%@. * %@
"*%@*"cd
(%@ || %@ || %@)
(%@ && %@)
%@ && (%@ || %@)
harvestTime
plugins
dissectors
verificationOp
geocodeOp
storageOp
messageInHumanBody
messageSubjectDetectedData
messageDetectedData
messageHtmlParser
messageQuotedRegions
<%@ %@ duration: %.6f cpu: %.6f enrichment: %@>
B16@?0@"SGHarvestQueueMetricsTimer"8
Dissector
com.apple
entities.db
snippets.db
@"SGDCloudKitSync"8@?0
CREATE TABLE IF NOT EXISTS integrityCheck (inconsequential STRING)
PRAGMA journal_mode=WAL
PRAGMA synchronous=NORMAL
unable to initialize entity DB
unable to initialize snippets DB
snippetDb instance was unexpectedly non-nil
sqliteCode
SGSqlEntityStore spotlight reindex
com.apple.suggestions.sqlentitystore.cacheprecomputationqueue
mifeaturestore.db
%@.corrupted.%ld
-shm
-wal
WHERE unlikely(pendingGeocode=1)
SELECT key FROM emailMetadata WHERE unlikely(pendingVerification = 1) ORDER BY creationTimestamp DESC
SELECT ep.parentKey FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityType = :entityType AND e.entityKey = :entityKey ORDER BY e.creationTimestamp DESC
SELECT ep.parentKey FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityType = :entityType AND e.entityKey = :entityKey
SELECT state FROM emailMetadata WHERE key = :key
WHERE (e.masterEntityId = :masterEntityId OR e.id = :masterEntityId) AND +e.entityType = :pseudo AND ep.extractionType != :messagesMeCard
:masterEntityId
:messagesMeCard
Candidate already has more than 1 profile. Merging happening early?
@"SGStorageContact"16@?0@"SGStorageContact"8
Should only get 1 merged contact since that's how we selected the profiles but got %d
:isSentTag
:isMe
SELECT DISTINCT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END  FROM entity WHERE entity.entityType = :pseudo AND title LIKE :prefix ESCAPE '!' AND NOT hasInhumanTag(entity.tags) AND NOT entity.curatedDupe LIMIT :limit
:prefix
:pseudoContactType
:detailType
:detailTags
masterEntityId
v32@?0@"NSString"8q16@"NSArray"24
SELECT entity.masterEntityId, entity.id, entity.entityType, entity.entityKey FROM entityTags CROSS JOIN entity     ON entity.entityKey = entityTags.entityKey AND entity.entityType = entityTags.entityType WHERE entityTags.entityType IN (:pseudoContactType, :detailType)     AND entityTags.tag IN _pas_nsarray(:detailTags)
SELECT entity.masterEntityId, entity.id, entity.entityType, entity.entityKey FROM entityTags CROSS JOIN entity     ON entity.entityKey = entityTags.entityKey AND entity.entityType = entityTags.entityType WHERE entityTags.entityType = :detailType AND entityTags.entityType != :pseudoContactType     AND EXISTS (         SELECT value AS prefix         FROM _pas_nsarray(:detailTags)         WHERE entityTags.tag >= prefix AND entityTags.tag < firstStringAfterPrefix(prefix)     )
SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END  AS masterEntityId FROM entity WHERE id IN _pas_nsset(:ids)     AND NOT hasInhumanTag(entity.tags) AND tagsHaveEscapedTag(entity.tags, :isSentTag) = :isMe
SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END  AS masterEntityId FROM entity WHERE id IN _pas_nsset(:socialProfileSubContactIds)     AND title = ""     AND NOT hasInhumanTag(entity.tags) AND tagsHaveEscapedTag(entity.tags, :isSentTag) = :isMe
:socialProfileSubContactIds
SELECT entity.id FROM entity_fts CROSS JOIN entity     ON entityId = entity.id WHERE messagingTerms MATCH :match     AND NOT hasInhumanTag(entity.tags) AND tagsHaveEscapedTag(entity.tags, :isSentTag) = :isMe
:match
SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END  AS masterEntityId FROM entity WHERE id IN _pas_nsset(:candidates)     AND EXISTS (         SELECT value AS pattern             FROM _pas_nsarray(:patterns)             WHERE title LIKE pattern     )
:candidates
:patterns
v24@?0@"NSMutableSet"8@"NSArray"16
SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END  FROM entityTags AS t CROSS JOIN entity     ON entity.entityKey = t.entityKey AND entity.entityType = t.entityType WHERE t.tag = :interactionTag     AND t.entityType = :pseudoContact     AND NOT hasInhumanTag(entity.tags) AND tagsHaveEscapedTag(entity.tags, :isSentTag) = :isMe
:interactionTag
:pseudoContact
v24@?0@"NSArray"8@?<B@?@"SGContact">16
B24@?0@8@"NSDictionary"16
@"_PASTuple2"16@?0@"SGContact"8
@"SGContact"16@?0@"_PASTuple2"8
@"SGContactMatch"16@?0@"SGContact"8
SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END , docid, entityId, matchinfo(entity_fts, "pcb") AS matchinfoData FROM entity_fts CROSS JOIN entity ON entity.id = entityId WHERE entity_fts.messagingTerms MATCH :match    AND entity.entityType = :pseudo   AND NOT hasInhumanTag(entity.tags)    AND NOT entity.curatedDupe
WITH matches AS (    SELECT entity.id as id, CASE WHEN entity.entityType = :pseudo OR entity.masterEntityId < 0 THEN entity.id ELSE entity.masterEntityId END as entityId        FROM entityTags CROSS JOIN entity ON entity.entityKey = entityTags.entityKey AND entity.entityType = entityTags.entityType        WHERE entityTags.tag GLOB :tagPrefix) SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END , matches.id, matches.entityId FROM matches CROSS JOIN entity ON matches.id = entity.id    WHERE entity.entityType = :pseudo        AND NOT hasInhumanTag(entity.tags)         AND NOT entity.curatedDupe
:tagPrefix
@"SGContactMatch"16@?0@"NSNumber"8
@"NSString"16@?0@"NSValue"8
SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END , entity_fts.docid, entity_fts.entityId, matchinfo(entity_fts, "pcb")    FROM entity_fts CROSS JOIN entity ON entity_fts.entityId = entity.id    WHERE entity_fts MATCH :match        AND entity.entityType = :pseudo        AND NOT hasInhumanTag(entity.tags)        AND NOT entity.curatedDupe
SELECT fts3_tokenizer(:tokenizerName)
:tokenizerName
ab_cf_tokenizer
\(\s*tokenize=ab_cf_tokenizer\s+language="([^\"]*?)"\s+collator="([^\"]*?)",
error instantiating argumentsPattern: %@
language
collator
end >= start
v16@?0@"SGSqlEntityStoreTokenizerGuardedData"8
SELECT DISTINCT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END  FROM entity WHERE entity.entityType = :pseudo AND NOT hasInhumanTag(entity.tags) AND NOT entity.curatedDupe ORDER BY entity.id DESC LIMIT :limit 
searchString
Invalid response from suggestContactMatchesByContactDetailTag
@"SGContactMatch"16@?0@"NSArray"8
SELECT CASE WHEN e.masterEntityId > 0 THEN e.masterEntityId WHEN e.groupId > 0 THEN e.groupId ELSE e.id END  FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityType = :entityType AND e.entityKey = :entityKey
 AND ep.parentKey = :parentKey
SELECT CASE WHEN e.masterEntityId > 0 THEN e.masterEntityId WHEN e.groupId > 0 THEN e.groupId ELSE e.id END  FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityType = :entityType AND e.entityKey = :entityKey AND ep.extractionType != :messagesMeCard
Uninitialized identity key
SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END  FROM entity WHERE id = :entityId
-[SGSqlEntityStore storageContactByRecordId:withSnippets:]_block_invoke
SGSqlEntityStore.m
masterEntityIds.count==1
contactDetailTag.isContactDetail
@16@?0@"NSArray"8
@"NSArray"16@?0@"NSArray"8
SELECT id FROM entity WHERE entityType = :pseudo AND masterEntityId = :masterEntityId AND id != masterEntityId
@"SGStorageEvent"24@?0@"SGStorageEvent"8@"SGStorageEvent"16
@"SGStorageEvent"16@?0@"SGStorageEvent"8
SELECT entityId, fieldValues FROM confirmedFieldValues WHERE entityId IN _pas_nsarray(:ids)
@"NSNumber"16@?0@"SGStorageEvent"8
confirmedFieldValues
fieldValues
UPDATE confirmedFieldValues SET maybeChanged=0 WHERE entityId IN _pas_nsarray(:ids)
AND title LIKE :prefix ESCAPE '!'
 AND id IN (SELECT entityId FROM confirmedFieldValues WHERE maybeChanged=1)
WHERE (e.floatingRange = 0 AND ((:queryStart == e.timeRangeStart) OR (NOT (:queryStart >= e.timeRangeEnd OR :queryEnd <= e.timeRangeStart))) OR e.floatingRange = 1 AND ((:fltQueryStart == e.timeRangeStart) OR (NOT (:fltQueryStart >= e.timeRangeEnd OR :fltQueryEnd <= e.timeRangeStart))))AND e.entityType = :pseudoEventType AND e.state != :deleted 
 ORDER BY e.timeRangeStart ASC LIMIT :limit
:queryStart
:queryEnd
:fltQueryStart
:fltQueryEnd
:pseudoEventType
SELECT e.id FROM entity AS e INNER JOIN entityParentage AS ep ON e.id=ep.childId WHERE e.entityKey=:entityKey AND e.entityType=:entityType AND ep.parentKey
=:parentKey
 IS NULL
NotFound
Could not find duplicateKey
maybeChanged
SELECT fieldValues FROM confirmedFieldValues WHERE entityId=?
DELETE FROM confirmedFieldValues WHERE entityId=?
SELECT c.fieldValues FROM confirmedFieldValues AS c INNER JOIN entity AS e ON c.entityId = e.id INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityKey = :entityKey AND e.entityType = :entityType AND ep.parentKey = :parentKey
realtimeEvent.event.uniqueKey
Could not load event to confirm (recordId=%@)
Could not load event to reject (%@)
Could not load reminder to confirm (recordId=%@)
Could not load reminder to reject (recordId=%@)
Could not load reminder to reject (SGDuplicateKey=%@)
@"NSMutableSet"16@?0@"SGEntityTag"8
SELECT array.rowid, entityKey, entityType, parentKey FROM entityTags JOIN _pas_nsarray(:tagNames) AS array ON entityTags.tag == array.value UNION ALL SELECT array.rowid, key, :emailEntityType, NULL FROM emailTags JOIN _pas_nsarray(:tagNames) AS array ON emailTags.tag == array.value
:tagNames
@"NSString"16@?0@"SGEntityTag"8
:emailEntityType
@"SGEntityTag"16@?0@8
tags.count != 0
SELECT b.entityKey, b.entityType, b.parentKey FROM entityTags AS i CROSS JOIN entityTags AS b ON b.duplicateKeyHashBlob=i.duplicateKeyHashBlob WHERE b.tag=:interactionBundleIdTag AND i.tag IN _pas_nsarray(:tags)
:interactionBundleIdTag
:tags
SELECT key FROM emailMetadata WHERE unlikely(downloadState = :requested) ORDER BY creationTimestamp DESC LIMIT :limit
:requested
UPDATE emailMetadata SET downloadState = :resolved WHERE key IN _pas_nsarray(:keys)
:resolved
@"NSString"16@?0@"SGEmailKey"8
DELETE FROM contactDetails
SELECT %@ FROM %@
NULL
itemReferenceIdentifier
itemReferenceName
epoch
plain
schemas
accountHandles
accountServerIdentifier
webKitPlainText
webKitPlainTextDDResult
extractionMode
geocodingMode
canonical
address+poi
poiGeocodingFilters
ekEventAvailabilityState
com.apple.reversetemplated
segments
@"NSString"28@?0@"NSDictionary"8@"<NSObject>"16B24
CountryCode
transportation
cancelled
iata
carrier
flightDataResolvedCarrierCode
flightDataResolvedCarrierName
destination
flightMissingCarrierCode
routeDesignation
@"NSArray"16@?0@"NSString"8
[flightNumbers containsObject:@([transportationDict[@"routeDesignation"] integerValue])]
flightDataResolvedAirportCode
flightMissingData
flightDataResolvedAirportName
flightDataResolvedAirportTZ
flightMissingTZForAirportCode
templateShortName
flightHasSameOriginAndDestination
emptyGroupId
fallbackGroupId
notes
dateTime
[redacted]
[unavailable]
%@... (length %lu)
dateParseIssue
flightDataResolvedAirportNameForLocation
flightDataResolvedAirportCoordinates
v32@?0@8@16^B24
pastEvent
B32@?0@8Q16^B24
minDurationForAllDayIfNoTz
convertedToAllDay
noTimezone
-[SGExtractionDissector entityForOutputItem:withSiblings:parentEntity:outputExceptions:outputInfos:interaction:]
SGExtractionDissector.m
outputWithoutSchema
categoryType
v32@?0@"SGSimpleMailHeaderKeyValue"8Q16^B24
v12@?0B8
v40@?0@"NSArray"8@"NSDictionary"16@"NSArray"24@"NSDictionary"32
v16@?0@"NSMutableDictionary"8
emailDownloadRequested
needsSourceVerification
templateExceptionMessage
containsSchemaorg
jsOutputLogs
outputUsecase
v16@?0@"NSDictionary"8
v16@?0@"SGDOMParserResult"8
candidates
candidateTaggedCharacterRanges
jsEntity
monochrome
ddResult
com.internal.mail.checkinActivity
http://schema.org/CheckInAction
NoTeamId
lastSGMIModelGroundTruthVersion
lastSGMIModelInferenceVersion
lastSGMIUpdaterProcessingDate
earliestNextSGMIUpdaterProcessingDate
totalSGMIUpdaterMailsProcessed
kTotalSGMITruePositivePredictions
kTotalSGMIFalsePositivePredictions
kTotalSGMITrueNegativePredictions
kTotalSGMIFalseNegativePredictions
@"NSNumber"16@?0@"SGMIFeatureSubmodelLink"8
v24@?0@"SGMIFeatureVector"8^B16
SGMISubmodelsManager - Purge deleted emails references
v32@?0@"NSNumber"8@"NSArray"16^B24
SGReverseTemplatesJSDataDetectors.m
yyyy'-'MM'-'dd'T'HH':'mm':'ssZZZZZ
yyyy'-'MM'-'dd'T'HH':'mm':'ss
yyyy'-'MM'-'dd
No locale found for: %@
extractions
Could not create DDScanner
Could not create DDScanner for: %@
ddType
iso8601
endIso8601
components
metadata
B16@?0^{__DDResult=}8
Contact
ContactName
AddressBookContactName
JobTitle
CompanyName
ZipCode
AirlineName
FlightNumber
https?://.{0,16}(?:%@)
)|(?:
<SGMIWarningsConfig (%tu languages)>
  %@: %@
v32@?0@"NSString"8@"SGMIWarningsDetectors"16^B24
attachmentLinkDetectionRegex: %@
defaultTimeIntervalToStartWarningExposition: %.0f
defaultTimeIntervalForAWarning: %.0f
defaultTimeIntervalToEndWarningExposition: %.0f
bodyAnalysisSamplingFactor: %.0f%%
logWarningSignatureStats: %@
enabled
disabled
SGPseudoReminderKey.m
[SGPseudoReminderKey groupId:%@
-[SGDCKLocation StringAsLocationType:]
SGDCKLocation.m
newVertex
mincut.m
g && g->vertices
digraph g {
    V%u -> V%u [label="%0.2f"];
mincut
maxflow > 0
newEdge
capacity > 0.0
addEdgeToIncidenceList
SGMIError
nil@nil.invalid
<non_dyadic_conversation>
<unassigned_mailbox>
SGMIFeatureVector.m
featureType == SGMIFeatureType_Number || featureType == SGMIFeatureType_NumberArray
FeatureVector for messageId %@: (%ld features)
v32@?0@"<EMContentItem>"8Q16^B24
@"NSString"16@?0@"SGSimpleNamedEmailAddress"8
v32@?0@"NSArray"8@"NSString"16@"NSMutableArray"24
%@-size%@-count%@
5to9
v32@?0@"NSNumber"8Q16^B24
_PASTuple2<NSString *,NSString *> *SGCleavePhoneNumberAndExtension(NSString *__strong)
SGDataNormalization.m
phoneNumber
BOOL SGPhoneNumberMatchInSet(NSMutableDictionary<NSString *,NSString<SGNormalizedPhoneNumber> *> *__strong, NSString *__strong, NSArray<NSString<SGNormalizedPhoneNumber> *> *__strong)
needle
10111
10177
%@ %@ %@ %@ %@ %@
v16@?0^{__DDScanner=}8
interactionId
interactionGroupId
interactionBundleId
reservationItemReferences
reservationContainerReference
intentResponseUserActivityString
interactionTeamId
SGAppLaunchHistory.m
fromStatus
toStatus
SGM2HarvestBudgetStatusUnknown
SGM2HarvestBudgetStatusPower
SGM2HarvestBudgetStatusBattery
SGM2HarvestBudgetStatusExhaustedNumberOfOperations
SGM2HarvestBudgetStatusExhaustedElapsedSeconds
SGM2HarvestBudgetStatusExhaustedDuet
SGPipelineEnrichment.m
identityKey
parent
The parent entity cannot be a contact
com_apple_mail_repliedTo
com_apple_mail_messageID
com_apple_mail_conversationID
contentType == "public.email-message" && InRange(kMDItemContentCreationDate, $time.now(-%lu), $time.now(-%lu))
contentType == "public.email-message" && InRange(kMDItemContentCreationDate, $time.now(-%lu), $time.now(-%lu)) && kMDItemMailboxes == "mailbox.sent"
_kMDItemExternalID == "%@"
contentType == "public.email-message"
%@ == * && InRange(kMDItemContentCreationDate, $time.now(-%lu), $time.now)
http://schema.org/Person
reservationNumber
bookingTime
http://schema.org/ReservationCancelled
http://schema.org/ReservationPending
http://schema.org/ReservationHold
underName
SGMetricsHelper-asyncQueue
SGDeliveryKey.m
trackingNumber
[SGDeliveryKey externalIdentifier: %@]
SurnamePrefix
CompositeSpanishFirstname
CommonSpanishSurnamePrefix
MultiCharChineseSurname
SingleCharChineseSurname
koreansurnames
SGIdentityName.m
Could not generate file path from koreansurnames.txt
Could not load list of korean surnames from koreansurnames.txt
Could not load components separated by new line.
ja_surname.trie
failed to get asset path for ja_surname.trie
-[SGIdentityName initWithJapaneseName:]_block_invoke_2
Could not load ja_surname trie
v16@?0@"_PASAsset2"8
Jpan
Traditional-Simplified
firstname
middlename
surname
v40@?0@"NSString"8@"NSString"16@"NSData"24@"NSError"32
 not
v24@?0@"CSSearchableItem"8^B16
Internal
textContent
mailConversationIdentifier
accountType
isStoredEncrypted
contentProtection
attachments
test-source
@"NSArray"8@?0
@"SGDataDetectorMatchesWithSignatureRange"8@?0
@16@?0@"NSString"8
dateIsCorrect
isFromCongratulation
didRegexTrigger
offset
didResponseKitTrigger
use_case
provider_name
tickets
restaurant
NoEvent
http://schema.org/MusicEvent
<SGStructuredEventClassification category:%@ useCase:%@ locale:%@>
SGJournal.m
entry
@"SGStorageEvent"16@?0@"SGJournalEntry"8
observer
!_observersFrozen
_observersFrozen
SGContactEntity.m
SGEntityTypeIsContact(entity.duplicateKey.entityType)
SGRawKey.m
<SGRawKey: %@>
%@ . 
SUBJECT
SGDOMParserResult.m
NSString
plainText
SGTaggedCharacterRange
SGPipeline-_resetCachesAndModels-pressure
SGPipeline-_delayedResetCachesAndModels
+[SGPipeline sharedBackgroundProcessingQueue]
+[SGPipeline sharedBackgroundStorageQueue]
Dependencies unknown for dissector class: %@
@"SGPipelineDissector"16@?0#8
@"NSMutableArray"16@?0@"NSArray"8
v32@?0@"SGPipelineDissector"8@"NSArray"16^B24
@?<v@?>16@?0@"SGPipelineDissector"8
Unknown entity type
-[SGPipeline geocodeOperation:withDependencies:]_block_invoke_2
SGPipeline.m
[enrichment.timeRange isValidAllDayRange]
B16@?0@"SGPipelineEnrichment"8
bundleIdentifier and uniqueIdentifier are required if adding a Spotlight reference.
com.apple.suggestions.fulldownloadrequested
Store
dissect
dissectArrayAndWrite
dissectArray
dissectEntityAndWrite
dissectEntity
@"NSOperation"16@?0@"NSArray"8
zh-Hans
v40@?0@"NSString"8{_NSRange=QQ}16^B32
Job stack overflow.
Unexpected opcode: 
 arg 
Bad arg in kInstCapture: 
SGContactDetailKey.m
<SGContactDetailKey identityKey:%@ label:%@ value:%@>
SGPseudoContactKey.m
[SGPseudoContactKey identityKey:%@]
text/vcard
text/calendar
@16@?0@"BMContentAttachment"8
application
image
audio
video
<%@ type:%@ path:%@>
test
testpath
SGTextMessageBirthdayCongratsModel
CG=3&NG=1&FV=1.1
lowerCase
stripNonBaseCharacters
replaceAllWhitespaceWithSpaces
transformFullwidthToHalfwidthASCII
removePunctuationWithExceptions
removeSymbols
mergeNumbersSeparatedByASCIISpace
replaceNumbersWithString
replaceLinksWithString
separateCharacter
mergeAnyConsecutiveCharacters
trimWhitespace
@"SGLocation"16@?0@"SGStorageLocation"8
message:
when
<SGStorageEvent title:%@ dupKey:%@ when:%@>
-[SGStorageEvent geocodedEventWithStartDate:startTimeZone:endDate:endTimeZone:locations:]
SGStorageEvent.m
!startTimeZone == !endTimeZone
q24@?0@"SGStorageLocation"8@"SGStorageLocation"16
SGDSpotlightReceiver.m
manager
SGDSpotlightReceiver.purgeAndDeleteDropbox
@"_PASTuple2"8@?0
v16@?0@"SGXPCResponse"8
v16@?0@"_PASTuple2"8
SGDSpotlightReceiver.deleteDomainIdentifiersDropbox
@"NSMutableDictionary"8@?0
SGDSpotlightReceiver.deleteInteractionBundleIdDropbox
v16@?0@"NSMutableSet"8
SGDSpotlightReceiver.deleteInteractionIdDropbox
SGDSpotlightReceiver.deleteInteractionGroupIdDropbox
@"CSSearchableItem"8@?0
addUserAction-plugins
v24@?0@"_PASTuple2"8^B16
v24@?0@"NSMutableDictionary"8^B16
kUTTypeEmailMessage
kUTTypeMessage
kUTTypeText
kUTTypeContent
kUTTypeToDoItem
com.apple.safari.history
v24@?0@"NSMutableSet"8^B16
com.apple.proactive.SocialHighlightsRefreshed
SGContactPipelineHelper.m
v24@?0@"CNContact"8^B16
v32@?0@"NSString"8Q16^B24
v16@?0@"NSNotification"8
B16@?0@"CNContact"8
B16@?0@"SGContact"8
SGCuratedContactMatcher.m
Asking to stopOnNewDetail or stopOnMatchedDetail does not make sense alonside providing newDetails or matchedDetails
@16@?0@"CNLabeledValue"8
-[SGDCKEvent StringAsCategoryType:]
SGDCKEvent.m
extraKey
schemaOrg
interactionInfo
parentEntityType
traditions
inversionRate
trieName
Tries
confidenceThreshold
double inversionProbabilityEstimate(double, double, double)
SGNameInversionPredictor.m
Probabilities must be in [0, 1]
Contradictory parameters.
SGEmailKey.m
<SGEmailKey source:%@ messageId:%@>
<SGMITokenCounts[%@]: %@ salient ; %@ regular>
:extractionType
:modelVersion
:confidence
INSERT INTO extractionInfos (extractionType, modelVersion, confidence) VALUES (:extractionType, :modelVersion, :confidence)
SELECT extractionType, modelVersion, confidence FROM extractionInfos WHERE id = :primaryKey
LOCALE
NAME_TAGGING
TRUST_CORENLP
PERSONAL_NAME_MAPPING
PUNCTUATION_MAPPING
TARGET
PHONE
ADDRESS
SG_TARGET_ADDRESS
EMAIL
NAME
FEATURE
PHONENUMBER
LINK
DATE
FIRSTNAME
LASTNAME
FULLNAME
NUMBER
SYMBOL
BELONGINGTO
BELONGING
CALLTYPE
PHONETYPE
ENTITYTYPE
ADDRESSTYPE
RECENCY
EMAILTYPE
com.apple.MobileAsset.LinguisticData.ma.new-asset-installed
SGTokenizerMappingTransformer.m
-[SGTokenizerMappingTransformer transform:]_block_invoke
Must be a dictionary
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
com.apple.suggestions.ml.tokenizing
v40@?0{?={?=qq}Q}8^B32
invalid:nomail
EKEventStore+Suggestions.m
Unhandled message class %@
B16@?0@"EKEvent"8
Concat of 
RE2: unexpected op: 
Bad call to ParseState::ParsePerlFlags
AddFoldedRange recurses too much.
Bad hex digit 
TARGET_MAPPING
PHONE_MAPPING
ADDRESS_MAPPING
DATE_MAPPING
SGEntityMatchingTransformer.m
Unexpected input: %@. %@ requires dictionary with SG_MODEL_INPUT_TEXT key.
Unexpected input: %@. %@ requires SG_MODEL_DISABLE_TARGET_MAPPING to be setif neither SG_MODEL_TARGET_DD_MATCH and SG_MODEL_INPUT_TARGET_RANGE are provied.
@"NSString"16@?0@"SGDataDetectorMatch"8
migrator.%@.full.%lu_to_%lu
memory
disk
com.apple.suggestions.databasemigration.migratorQueue
com.apple.suggestions.databasemigration.
SELECT name FROM sqlite_schema WHERE type='table' AND NOT name LIKE 'sqlite_%'
name
%@FailedUnmigration
Failed to clear database: %@
version
PRAGMA table_list
shadow
Failed to drop table %@: %@
migration_
entityId INTEGER, messagingTerms TEXT COLLATE NOCASE, ftsTerms TEXT COLLATE NOCASE, notindexed=entityId
SELECT MAX(docid) FROM %@
{_PASDBIterAction_=B}16@?0^{sqlite3_stmt=}8
DatabaseMigrator-FTS-queue
INSERT INTO %@ (docid, entityId, messagingTerms, ftsTerms) SELECT docid, entityId, messagingTerms, ftsTerms FROM %@ WHERE docid BETWEEN :batchStart AND :batchStop   AND docid NOT IN (SELECT docid FROM %@)
:batchStart
:batchStop
v16@?0^{sqlite3_stmt=}8
ALTER TABLE %@ RENAME TO %@
entity_fts_from
SELECT MIN(docid) FROM %@ WHERE docid NOT IN (SELECT docid FROM %@)
SGSqlEntityStore+DatabaseMigrator.m
skipToEntityVersion != UINT32_MAX
skipToSnippetsVersion != UINT32_MAX
legacy
old (%lu < %d)
migrator.%@.steps.%lu_to_%lu
SELECT rowId, task FROM postMigrationTasks ORDER BY rowId
task
postMigrationTasks
DELETE FROM postMigrationTasks WHERE rowId == :rowId LIMIT 1
:rowId
com.apple.iChat
SG_UPDATING_SKIP_QUERIES
ATTACH DATABASE :snippetPath AS snippets
:snippetPath
INSERT OR REPLACE INTO snippets.snippets (entityId, title, content, contentRangeOfInterest) SELECT id, title, content, contentRangeOfInterest FROM entity WHERE entityType = :entityType 
INSERT OR REPLACE INTO snippets.snippets (entityId, title, content, contentRangeOfInterest) SELECT id, NULL, content, contentRangeOfInterest FROM entity WHERE entityType != :entityType 
UPDATE entity SET content=NULL, contentRangeOfInterest=NULL
UPDATE entity SET title=NULL WHERE entityType = ?
ALTER TABLE entity ADD COLUMN author TEXT
CREATE TABLE IF NOT EXISTS entityParentage (id INTEGER PRIMARY KEY AUTOINCREMENT,parentKey TEXT,childId INTEGER NOT NULL,duplicateKeyHash TEXT NOT NULL,extractionType INTEGER,sourceKey TEXT,UNIQUE(parentKey, childId))
CREATE INDEX IF NOT EXISTS entityParentageParentKeyIdx on entityParentage(parentKey)
CREATE INDEX IF NOT EXISTS entityParentageChildIdx on entityParentage(childId)
CREATE UNIQUE INDEX IF NOT EXISTS entityParentageDuplicateKeyHashIdx on entityParentage(duplicateKeyHash, extractionType)
CREATE TABLE IF NOT EXISTS serializedContacts (id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER,data BLOB)
CREATE UNIQUE INDEX IF NOT EXISTS serializedContactsEntityIdIdx ON serializedContacts(entityId)
cnContactsToSgContacts
CREATE TABLE IF NOT EXISTS cnContactsToSgContacts (id INTEGER PRIMARY KEY AUTOINCREMENT,cnContactIdentifier TEXT,maxEntityId INTEGER,entityIds TEXT)
CREATE UNIQUE INDEX IF NOT EXISTS cnContactsToSgContactsCIdIdx ON cnContactsToSgContacts(cnContactIdentifier)
ALTER TABLE entity ADD COLUMN downloadState INTEGER DEFAULT 0
entityDownloadStateIdx
CREATE INDEX entityDownloadStateIdx on entity(downloadState)
contentHash
ALTER TABLE entity ADD COLUMN contentHash TEXT
entityContentHashIdx
CREATE UNIQUE INDEX IF NOT EXISTS entityContentHashIdx ON entity(contentHash)
ALTER TABLE entity ADD COLUMN groupId INTEGER DEFAULT -1
groupIdIdx
CREATE INDEX IF NOT EXISTS groupIdIdx on entity(groupId)
entityTags
ALTER TABLE entityTags ADD COLUMN duplicateKeyHash TEXT NOT NULL DEFAULT ''
ix_entityTags_dupKeyHash
CREATE INDEX IF NOT EXISTS ix_entityTags_dupKeyHash ON entityTags(duplicateKeyHash)
DROP TABLE IF EXISTS identityPhonesDeduped
CREATE TEMP TABLE identityPhonesDeduped AS SELECT DISTINCT * FROM identityPhones
INSERT INTO identityPhones SELECT * FROM identityPhonesDeduped
DROP TABLE identityPhonesDeduped
hashHexToBlob
UPDATE entity SET contentHashBlob = hashHexToBlob(contentHash) WHERE contentHash IS NOT NULL AND contentHash != ''
UPDATE entityTags SET duplicateKeyHashBlob = hashHexToBlob(duplicateKeyHash) WHERE duplicateKeyHash IS NOT NULL AND duplicateKeyHash != ''
UPDATE entityParentage SET duplicateKeyHashBlob = hashHexToBlob(duplicateKeyHash) WHERE duplicateKeyHash IS NOT NULL AND duplicateKeyHash != ''
DELETE FROM entity_fts WHERE messagingTerms GLOB :semicolon
:semicolon
*[0-9;];[0-9;]*
UPDATE entity SET masterEntityId = -1 WHERE entityType IN (:pseudo, :unrec)
:pseudo
:unrec
INSERT INTO emailMetadata     (id, key, type, sourceKey, author, creationTimestamp, updateTimestamp, indexTimestamp, lastSeenTimestamp,      tags, state, downloadState, harvestedOnBuild) SELECT e.id, e.entityKey, e.entityType, ep.sourceKey, e.author, e.creationTimestamp, e.updateTimestamp, e.indexTimestamp,     e.lastSeenTimestamp, e.tags, e.state, e.downloadState, e.harvestedOnBuild FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityType IN (:email, :textMessage)
:textMessage
DELETE FROM entityParentage WHERE childId IN (SELECT id FROM entity WHERE entityType IN (:email, :textMessage))
DELETE FROM entity WHERE entityType IN (:email, :textMessage)
INSERT INTO emailTags (key, type, tag) SELECT entityKey, entityType, tag FROM entityTags WHERE entityType IN (:email, :textMessage)
SELECT id FROM emailMetadata
INSERT INTO emailSnippets (emailId, title, content) SELECT entityId, title, content FROM snippets WHERE entityId = :rowId
DELETE FROM snippets WHERE entityId = :rowId
entity_fts_docidfix_backup
SELECT id, entityType, title, groupId, entityKey FROM entity 
DROP TABLE entity_fts_docidfix_backup
SELECT key FROM emailMetadata WHERE type = :interactionType LIMIT :batchSize
:interactionType
:batchSize
serializedInteractionKey
B16@?0@"SGKeyValueCacheFile"8
SELECT id FROM entity WHERE entityType = :entityType LIMIT :limit
SELECT id, whenRange FROM events
DELETE FROM events WHERE id IN _pas_nsarray(:ids)
DETACH DATABASE snippets
void hashHexToBlob(sqlite3_context *, int, sqlite3_value **)
-[SGDetectedAttributeML addSessionForTrainingWithSource:label:language:objective:spotlightRef:embeddedFeaturizer:]
SGDetectedAttributeML.m
[vector isKindOfClass:[PMLSparseVector class]]
B32@?0@"SGTextMessageItem"8Q16^B24
@"SGModelFeatures"8@?0
v16@?0@"SGBinaryClassificationModel"8
NEGATIVE_SAMPLE_CHOPPABLE_START
v24@?0Q8q16
v24@?0Q8Q16
B8@?0
SGModelObjective convertSGDDMatchToModelObjective(SGDataDetectorMatchType, BOOL)
Unknown model objective for SGDataDetectorMatchType = %lu and SGTextMessage
Unknown model objective for SGDataDetectorMatchType = %lu for non SGTextMessage
SGContactSharingLabel firstPersonContactSharingLabelFromMatchType(SGDataDetectorMatchType)
Contact sharing model doesn't support matchType = %lu
SGContactSharingLabel thirdPersonContactSharingLabelFromMatchType(SGDataDetectorMatchType)
SGMIMessageMissingEntityAnalyzer-processing
SGMIMessageMissingEntityAnalyzer-timeout
(null)
http
B16@?0@"SGMIWarningsDetectionRegexMatch"8
@"NSString"16@?0@"CSPerson"8
group
list
%@-0000%@
Mail Previous Recipients for omittedRecipient Queue
v24@?0@"NSArray"8@"NSError"16
found a match
did not find any match
still
{SGRe2IterAction_=B}24@?0^{?={_NSRange=QQ}*}8@"SGRe2"16
i24@?0r^v8r^v16
<RE2 %@>
SGRe2.mm
subregexps
regexpUtf8
<RE2-lazy(%i) %@>
SGRe2 *getInternal(NSData *__strong)
Could not initialize regexp: %@
coreAlternative
coreAlternative2
dataDetectorMappedAdditions
dataDetectorAdditions
\b%@\b
<SGMIWarningsDetectionRegexes>
  subject:%@
  body:%@
  dataDetectorMappedAdditions:'%@'
  dataDetectorAdditions:'%@'
@"NSString"16@?0@"NSRegularExpression"8
(?:(?:(?<!\\)\.)|\\w)(?:[*\+\?]|\{\d*\,\d*\})?|(?:\[[^\]]+\](?:[*\+\?]|\{\d*\,\d*\}))
(?<G%tu>%@)
v32@?0@"NSTextCheckingResult"8Q16^B24
G%tu
[%@]>(%@)
[PRIVATE]>(ff)
<SGMIWarningsDetectionRegex with %@ private groups>
Pattern:'%@'
<SGMIWarningsDetectors>
    attachment:%@
    recipientConservative:%@
    recipient:%@
    followUpOnOutgoingMailsQuestions:%@
    followUpOnOutgoingMailsAsks:%@
    followUpOnIncomingMails:%@
SGPlainTextContentCursor.m
message.textContent
predicate
Uninitialized SGIdentityKeyType
SGIdentityKeyTypeEmail
SGIdentityKeyTypeContact
SGIdentityKeyTypeUnrecognizedPhone
SGIdentityKeyTypeInstantMessageAddress
SGIdentityKeyTypeSocialProfile
UNKNOWN IDENTITY KEY TYPE!
SGIdentityKey.m
person.handles.count > 0
parts.count == 2
Unknown type: %@
[SGIdentityKey type:%@ content:%@]
Calling email selector on identity with no email address.
Identity key claims to be an email address but it does not have one
Calling instant message selector on identity with no instant message address.
Identity key claims to be an instant message address but it does not have one
Calling socialProfile selector on identity with no social profile.
Identity key claims to be a social profile but it does not have one
Should not ask for a unique identifier when this is neither an email nor an instance message address
Calling phone number selector on identity with no phone number.
Identity key claims to be a phone number but it does not have one
_type == SGIdentityKeyTypeContact
NSString *keyForIdentityKeyType(SGIdentityKeyType)
No key for SGIdentityKeyTypeUninitialized. Initialize it.
No key for type value %d
SGMicrodataParser.m
libxml tag names should always be lowercase during HTML parsing
libxml attribute names should always be lowercase during HTML parsing
itemprop
itemscope
itemref
itemtype
embed
iframe
track
area
link
object
meter
datetime
&#47;
com.apple.suggestions.spotlightCommander.reimportRequests
public.email-message
public.message
kMDItemTitle
kMDItemContentCreationDate
kMDItemStartDate
kMDItemSubject
job:%@:%@:%d:%d:%@
@"IPPerson"16@?0@"CSPerson"8
-[SGNaturalLanguageDissector addEnrichmentForEvents:forMessage:toEntity:]
SGNaturalLanguageDissector.m
[timeRange isValidAllDayRange]
v16@?0@"NSArray"8
@"NSString"16@?0@"IPMessage"8
v28@?0@"IPMessage"8@"NSArray"16B24
SELECT domainIdentifier FROM entityReferences WHERE bundleIdentifier = ? AND uniqueIdentifier = ? LIMIT 1
SELECT 1 FROM entityReferences WHERE bundleIdentifier = ? AND uniqueIdentifier = ? LIMIT 1
SGSqlEntityStore+Spotlight.m
Unsupported table id %lu
SELECT key, type FROM emailMetadata WHERE id IN _pas_nsindexset(:emailIndexSet)
:emailIndexSet
SELECT e.entityKey, e.entityType, ep.parentKey FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.id IN _pas_nsindexset(:nonEmailIndexSet)
:nonEmailIndexSet
entityKey
entity
entityType
parentKey
entityParentage
Email entities should not have a parent
SELECT id FROM emailMetadata WHERE key = :key
SELECT e.id FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityKey = :entityKey AND e.entityType = :entityType AND ep.parentKey
:entityType
:entityKey
:parentKey
SELECT state, tags FROM emailMetadata WHERE id = :id LIMIT 1
SELECT DISTINCT entityId FROM entityReferences WHERE entityId BETWEEN ? AND ?
v24@?0Q8^B16
@"SGEmailKey"16@?0@"SGDuplicateKey"8
v16@?0@"NSMutableOrderedSet"8
:bid
:uids
SELECT DISTINCT entityId FROM entityReferences WHERE bundleIdentifier = :bid AND uniqueIdentifier IN _pas_nsarray(:uids)
entityReferences
DELETE FROM entityReferences WHERE bundleIdentifier = :bid AND uniqueIdentifier IN _pas_nsarray(:uids)
SELECT id, entityId FROM entityReferences WHERE bundleIdentifier = ? AND ((domainIdentifier GLOB ?)
 OR (domainIdentifier GLOB ?)
Encountered repeated message ID for deletion
DELETE FROM entityReferences WHERE id IN _pas_nsindexset(:affectedReferenceIds)
:affectedReferenceIds
v24@?0@"NSArray"8^B16
SELECT id, entityId FROM entityReferences WHERE bundleIdentifier = ?
DELETE FROM entityReferences WHERE id BETWEEN ? AND ?
SELECT id, entityId FROM entityReferences WHERE bundleIdentifier is null
SELECT 1 FROM harvestQueueTombstones WHERE bundleIdentifier=:bid AND uniqueIdentifier IS NULL AND domainIdentifier IS NULL
SELECT domainIdentifier FROM harvestQueueTombstones WHERE bundleIdentifier=:bid AND uniqueIdentifier IS NULL AND domainIdentifier IN _pas_nsset(:overlappingDomainIdentifiers)
:overlappingDomainIdentifiers
domainIdentifier
harvestQueueTombstones
INSERT OR IGNORE INTO harvestQueueTombstones (bundleIdentifier, uniqueIdentifier, domainIdentifier) VALUES (:bid, NULL, :did)
:did
DELETE FROM harvestQueueTombstones WHERE bundleIdentifier=:bid AND uniqueIdentifier IS NULL AND (domainIdentifier >= :did || '.') AND (domainIdentifier < :did || '/')
uniqueIdentifiers
INSERT OR IGNORE INTO harvestQueueTombstones (bundleIdentifier, uniqueIdentifier, domainIdentifier) SELECT :bid, value, NULL FROM _pas_nsarray(:uids) WHERE NOT EXISTS (SELECT 1 FROM harvestQueueTombstones WHERE bundleIdentifier=:bid AND uniqueIdentifier=value AND domainIdentifier IS NULL)
DELETE FROM harvestQueueTombstones WHERE bundleIdentifier = :bid
INSERT OR IGNORE INTO harvestQueueTombstones (bundleIdentifier, uniqueIdentifier, domainIdentifier) VALUES (:bid,NULL,NULL)
DELETE FROM harvestQueueTombstones
         SELECT 1 FROM harvestQueueTombstones WHERE bundleIdentifier=:bid AND uniqueIdentifier IS NULL AND domainIdentifier IS NULL UNION ALL SELECT 1 FROM harvestQueueTombstones WHERE bundleIdentifier=:bid AND uniqueIdentifier=:uid    AND domainIdentifier IS NULL UNION ALL SELECT 1 FROM harvestQueueTombstones WHERE bundleIdentifier=:bid AND uniqueIdentifier IS NULL AND domainIdentifier IN _pas_nsarray(:dids)
:uid
:dids
SELECT entityId, data FROM serializedContacts
 WHERE entityId >= :minEntityId
 ORDER BY entityId LIMIT :limit
:minEntityId
SELECT entityId, data FROM serializedContacts WHERE entityId IN _pas_nsarray(:ids)
:ids
serializedContacts
data
v24@?0@"NSData"8@"NSError"16
magicUnsubscribeSuggestionSenderDenyList
magicUnsubscribeSuggestionSenderDomainDenyList
totalNumberOfEmailsProcessedForAttachmentDetection
totalNumberOfEmailsProcessedForRecipientDetection
totalNumberOfEmailsProcessedForFollowUpDetection
totalNumberOfWarningsForFollowUpWithPositiveEngagement
totalNumberOfWarningsForFollowUpWithNegativeEngagement
totalNumberOfRaisedMissingAttachmentWarning
totalNumberOfRaisedMissingRecipientWarning
numberOfPredictedAttachmentOnLargeIncomingMailsWithAttachment
numberOfLargeIncomingMailsWithAttachment
numberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachment
numberOfLargeOutgoingMailsWithAttachment
countOnLastRegexSignatureStatsLoggingAction
lastSGMINicknameProcessingDate
q24@?0@"NSString"8@"NSString"16
Invalid SQL identifier (cannot contain interior null). b64 utf16: %@
_zeroTotalIdx
CREATE TABLE %@ (domain TEXT PRIMARY KEY NOT NULL, total INT NOT NULL) WITHOUT ROWID
CREATE INDEX %@ ON %@ (domain) WHERE total IS 0
PRAGMA schema_version
v16@?0@"SGMIDomainCountingTableGuardedData"8
PRAGMA table_info(%@)
total
ALTER TABLE %@ ADD COLUMN %@ DEFAULT 0 NOT NULL
UPDATE
WHERE
IS NOT 0
UPDATE %@ SET total = total - %@ WHERE %@ IS NOT 0 RETURNING 1
ALTER TABLE %@ DROP COLUMN %@
UPDATE %@ SET total = total - %@, %@ = 0 WHERE %@ IS NOT 0 RETURNING 1
ALTER TABLE %@ RENAME COLUMN %@ TO %@
DELETE FROM %@ WHERE total IS 0
You can't commit a negative count
You can't commit counts to both a parent and its child (you can't commit 1 to both foo and foo.bar)
v32@?0@"NSString"8@"NSNumber"16^B24
SELECT 1 FROM _pas_nsdictionary(:domainsAndCounts) WHERE EXISTS (SELECT domain FROM %@ WHERE (domain >= key || '.') AND (domain < key || '/'))
:domainsAndCounts
v16@?0@"_PASSqliteStatement"8
You can't commit counts to a parent domain (this is not allowed: `commit('foo.bar', 1); commit('foo', 1);`)
SELECT 1 FROM _pas_nsset(:parentDomains) WHERE EXISTS (SELECT domain FROM %1$@ WHERE domain = value) AND NOT EXISTS (SELECT domain FROM %1$@ WHERE (domain >= value || '.') AND (domain < value || '/'))
:parentDomains
You can't convert a leaf domain to a parent domain (this is not allowed: `commit('foo', 1); commit('foo.bar', 1);`)
INSERT INTO
(domain,
, total)
SELECT key, value, value FROM _pas_nsdictionary(:domainsAndCascadedCounts) WHERE value != 0
ON CONFLICT(domain)
DO UPDATE SET
+ excluded.total, total = total + excluded.total
:domainsAndCascadedCounts
SELECT domain AS d, total AS t FROM %@ WHERE domain IN _pas_nsarray(:domains)
:domains
[d isEqual:domain]
[self _hasColumn:column]
SELECT %@ FROM %@ WHERE domain = ?
columnCount %tu is too big
SELECT %@, domain FROM %@ WHERE domain IN _pas_nsarray(:domains)
B24@?0@"NSString"8Q16
@"NSString"24@?0@"NSString"8Q16
WHEN %@ THEN %tu
SELECT domain AS d, CASE %@ ELSE -1 END AS c FROM %@ WHERE domain IN _pas_nsarray(:domains)
SELECT domain AS d, total as t FROM %@ WHERE (d >= MAX(:firstChildOfPrefix, COALESCE(:skipTo, ''), COALESCE(:greaterThan, ''))) AND (d IS NOT :greaterThan) AND (d < :firstAfterPrefix) ORDER BY d ASC%@
 LIMIT :limit
:skipTo
:greaterThan
:firstChildOfPrefix
:firstAfterPrefix
lastDot != NSNotFound
SELECT COUNT(*) AS n FROM %@ WHERE domain = :domain OR (domain >= :domain || '.' AND domain < :domain || '/')
:domain
![self _hasColumn:columnName]
[self _hasColumn:columnName]
![self _hasColumn:newColumnName]
[self _hasColumn:donorColumn]
[self _hasColumn:recipientColumn]
@"NSNumber"16@?0@"NSString"8
B24@?0@"NSString"8q16
v16@?0@"NSString"8
DELETE FROM %@ WHERE (domain >= ?1 || '.') AND (domain < ?1 || '/')
-[SGMIDomainCountingTable deleteDomainSelection:]_block_invoke
SGMIFeatureStore.m
columnCount < INT_MAX
%@=%@-_pas_block(:block,%tu)
DELETE FROM
WHERE domain = ? RETURNING
WHERE domain IN _pas_nsarray(:parentDomains)
-[SGMIDomainCountingTable deleteDomainSelection:]_block_invoke_5
index < columnCount
@"NSNumber"16@?0@"NSArray"8
:block
DELETE FROM %@
SGMIFeatureStore-LockState
v12@?0i8
v16@?0@"SGMIFeatureStoreGuardedData"8
SGMIFeatureStore-Journal
features
@"_PASSqliteDatabase"8@?0
sgmijournal
[column characterAtIndex:0] == '_'
could not scan hex feature name in %@
@"SGMITokenCounts"24@?0@"NSString"8Q16
@"NSArray"24@?0@"NSString"8@"NSArray"16
isSalientDomain || [@"r" isEqual:tokenDomainItems[1]]
kTotalNumberOfWarningsForFollowUpWithPositiveEngagement
kTotalNumberOfWarningsForFollowUpWithNegativeEngagement
INSERT INTO signatureStats (emailLanguage, regexLanguage, type, incomingMessage, signature, negativeEngagement, noEngagement, positiveEngagement, blockedWarningCount) VALUES (:emailLanguage, :regexLanguage, :type, :incomingMessage, :signature, :negativeEngagement, 0, :positiveEngagement, 0) ON CONFLICT (emailLanguage, regexLanguage, type, incomingMessage, signature) DO UPDATE SET negativeEngagement = negativeEngagement + :negativeEngagement, positiveEngagement = positiveEngagement + :positiveEngagement, noEngagement = noEngagement - 1
:emailLanguage
:regexLanguage
:type
:incomingMessage
:signature
:negativeEngagement
:positiveEngagement
INSERT INTO signatureStats (emailLanguage, regexLanguage, type, incomingMessage, signature, negativeEngagement, noEngagement, positiveEngagement, blockedWarningCount) VALUES ('*', :regexLanguage, :type, :incomingMessage, :signature, :negativeEngagement, 0, :positiveEngagement, 0) ON CONFLICT (emailLanguage, regexLanguage, type, incomingMessage, signature) DO UPDATE SET negativeEngagement = negativeEngagement + :negativeEngagement, positiveEngagement = positiveEngagement + :positiveEngagement, noEngagement = noEngagement - 1
INSERT INTO signatureStats (emailLanguage, regexLanguage, type, incomingMessage, signature, negativeEngagement, noEngagement, positiveEngagement, blockedWarningCount) VALUES (:emailLanguage, :regexLanguage, :type, :incomingMessage, :signature, :negativeEngagement, :noEngagement, :positiveEngagement, 0) ON CONFLICT (emailLanguage, regexLanguage, type, incomingMessage, signature) DO UPDATE SET negativeEngagement = negativeEngagement + :negativeEngagement, noEngagement = noEngagement + :noEngagement, positiveEngagement = positiveEngagement + :positiveEngagement
:noEngagement
INSERT INTO signatureStats (emailLanguage, regexLanguage, type, incomingMessage, signature, negativeEngagement, noEngagement, positiveEngagement, blockedWarningCount) VALUES ('*', :regexLanguage, :type, :incomingMessage, :signature, :negativeEngagement, :noEngagement, :positiveEngagement, 0) ON CONFLICT (emailLanguage, regexLanguage, type, incomingMessage, signature) DO UPDATE SET negativeEngagement = negativeEngagement + :negativeEngagement,               noEngagement = noEngagement + :noEngagement,               positiveEngagement = positiveEngagement + :positiveEngagement,               blockedWarningCount = blockedWarningCount + min(1, max(0, 1 + negativeEngagement - positiveEngagement - :positiveEngagement                                                                         - :maxAllowedNegativeUserEngagementDiffToExposeAWarning))RETURNING negativeEngagement, positiveEngagement, blockedWarningCount
:maxAllowedNegativeUserEngagementDiffToExposeAWarning
negativeEngagement
positiveEngagement
B32@?0@"SGMailIntelligenceAttachmentProperties"8Q16^B24
INSERT INTO signatureStats (emailLanguage, regexLanguage, type, incomingMessage, signature, negativeEngagement, noEngagement, positiveEngagement, blockedWarningCount) VALUES (:emailLanguage, :regexLanguage, :type, :incomingMessage, :signature, 0, 1, 0, 0) ON CONFLICT (emailLanguage, regexLanguage, type, incomingMessage, signature) DO UPDATE SET noEngagement = noEngagement + 1
INSERT INTO signatureStats (emailLanguage, regexLanguage, type, incomingMessage, signature, negativeEngagement, noEngagement, positiveEngagement, blockedWarningCount) VALUES ('*', :regexLanguage, :type, :incomingMessage, :signature, 0, 1, 0, 0) ON CONFLICT (emailLanguage, regexLanguage, type, incomingMessage, signature) DO UPDATE SET noEngagement = noEngagement + 1
SELECT SUM(negativeEngagement), SUM(noEngagement), SUM(positiveEngagement), SUM(blockedWarningCount) FROM signatureStats
I16@?0@"_PASSqliteStatement"8
SELECT key, value FROM keyValueStore
SELECT emailLanguage, regexLanguage, type, incomingMessage, signature, negativeEngagement, noEngagement, positiveEngagement, blockedWarningCount FROM signatureStats
emailLanguage
signatureStats
regexLanguage
type
incomingMessage
signature
noEngagement
blockedWarningCount
DELETE FROM signatureStats
v32@?0@"NSString"8@"SGMITokenCounts"16^B24
v24@?0@"NSString"8@"NSDictionary"16
v32@?0@"NSString"8@"NSString"16^B24
counts
numberOfTokenEntries
salientCount
regularCount
overallCounts
lastUpdates
en_US
MMM,dd
v32@?0@"NSString"8@"NSArray"16^B24
@"NSDictionary"16@?0@"NSString"8
salientTokensDistribution
regularTokensDistribution
-[SGMIFeatureStore _purgeTokensWhichLastUpdateWasBefore:shouldContinue:usingDatabase:]_block_invoke
idx != NSNotFound
B16@?0@"NSString"8
v32@?0@"NSNumber"8@"NSMutableSet"16^B24
v32@?0@"NSNumber"8@"NSNumber"16^B24
DELETE FROM keyValueStore
migration_createFeaturesTable
migration_createKVTable
migration_createFollowUpTable
DELETE FROM followUpTable
ALTER TABLE followUpTable ADD COLUMN messageId TEXT
DROP TABLE followUpTable
migration_createFollowUpTableWithAppleMailMessageIdAsPrimaryKey
CREATE TABLE IF NOT EXISTS mailsPendingFollowUpProcessing (messageId TEXT NOT NULL PRIMARY KEY,spotlightIdentifier TEXT NOT NULL,date FLOAT)
migration_createSignatureStatsTable
ALTER TABLE followUpTable ADD COLUMN dateStored FLOAT
DROP TABLE mailsPendingFollowUpProcessing
CREATE TABLE IF NOT EXISTS nicknameMapping (nickname TEXT NOT NULL,email TEXT NOT NULL,count INTEGER NOT NULL,dateOfLastMatch FLOAT NOT NULL,PRIMARY KEY (nickname, email)) WITHOUT ROWID
DELETE FROM signatureStats WHERE type = %d
CREATE TABLE keyValueStore (key TEXT PRIMARY KEY NOT NULL, value) WITHOUT ROWID
CREATE UNIQUE INDEX keyValueStoreIdx ON keyValueStore(key)
CREATE TABLE IF NOT EXISTS followUpTable (id INTEGER PRIMARY KEY AUTOINCREMENT,appleMailMessageId TEXT NOT NULL,snippet TEXT,core TEXT,score DOUBLE,startDate TEXT NOT NULL,startDateCore TEXT,endDate TEXT NOT NULL,endDateCore TEXT,alreadyReturned BOOLEAN DEFAULT false)
CREATE TABLE IF NOT EXISTS followUpTable (appleMailMessageId TEXT NOT NULL PRIMARY KEY,messageId TEXT NOT NULL,snippet TEXT,core TEXT,score DOUBLE,startDate TEXT NOT NULL,startDateCore TEXT,endDate TEXT NOT NULL,endDateCore TEXT,alreadyReturned BOOLEAN DEFAULT false)
CREATE TABLE IF NOT EXISTS signatureStats (emailLanguage TEXT NOT NULL,regexLanguage TEXT NOT NULL,type INTEGER NOT NULL,incomingMessage BOOLEAN NOT NULL,signature TEXT NOT NULL,negativeEngagement INTEGER NOT NULL,noEngagement INTEGER NOT NULL,positiveEngagement INTEGER NOT NULL,blockedWarningCount INTEGER NOT NULL)
CREATE UNIQUE INDEX IF NOT EXISTS signatureStatsIdx ON signatureStats(emailLanguage, regexLanguage, type, incomingMessage, signature)
SELECT email FROM nicknameMapping WHERE nickname = :nickname
:nickname
INSERT INTO nicknameMapping (nickname, email, count, dateOfLastMatch) VALUES (:nickname, :email, 1, :dateOfLastMatch) ON CONFLICT (nickname, email) DO UPDATE SET count = count + 1, dateOfLastMatch = max(dateOfLastMatch, :dateOfLastMatch)
:email
:dateOfLastMatch
DELETE FROM nicknameMapping WHERE dateOfLastMatch < :oldestAcceptableDate
:oldestAcceptableDate
DELETE FROM nicknameMapping
INSERT OR REPLACE INTO keyValueStore (key, value) VALUES (:key, :value)
:key
DELETE FROM keyValueStore WHERE key = :key
SELECT value FROM keyValueStore WHERE key = :key LIMIT 1
:value
@"NSNumber"16@?0@"_PASSqliteStatement"8
INSERT INTO keyValueStore (key, value) VALUES (:key, :incrementValue) ON CONFLICT (key) DO UPDATE SET value = value + :incrementValue
:incrementValue
@"NSString"16@?0@"_PASSqliteStatement"8
SGDuplicateKey.m
%@_%ld_%ld
self
%li/%@
%@ not supported by %@
![SGDuplicateKey serializationPassesBasicScrutiny:serialized]
%llu
<SGDuplicateKey entityType:%@ entityKey:%@ parentKey:%@>
[SGCuratedEventKey isSupportedEntityType:_entityType]
[SGContactDetailKey isSupportedEntityType:_entityType]
[SGPseudoContactKey isSupportedEntityType:_entityType]
SGEntityTypeIsContact(_entityType)
[SGEmailKey isSupportedEntityType:_entityType]
[SGTextMessageKey isSupportedEntityType:_entityType]
[SGWebPageKey isSupportedEntityType:_entityType]
[SGInteractionKey isSupportedEntityType:_entityType]
[SGPseudoEventKey isSupportedEntityType:_entityType]
[SGPseudoReminderKey isSupportedEntityType:_entityType]
[SGDeliveryKey isSupportedEntityType:_entityType]
SGMailClientUtilErrorDomain
@"SGMailClientUtil"8@?0
message:%@
v24@?0@"EMContentRepresentation"8@"NSError"16
v40@?0r^v8{_NSRange=QQ}16^B32
+[SGMailClientUtil convertLineEndingsToNetwork:]_block_invoke_2
SGMailClientUtil.m
insertionsNeeded
SignificantPostalAddress
ProactiveHarvesting
BiomeHarvesting
Found in %@ with %@
Chatting with %@
Found in %@
Checkin Action %@
checkinDate
checkoutDate
v32@?0@"_PASTuple2"8@"SGContact"16^B24
@"NSArray"32@?0@"NSArray"8@"NSArray"16@?<@@?@>24
@24@?0@8@16
@"NSString<SGNormalizedAddress>"16@?0@8
@"NSArray"24@?0@"NSArray"8@"NSArray"16
@"SGDateComponents"24@?0@"SGDateComponents"8@"SGDateComponents"16
B24@?0@"SGPostalAddress"8@"SGPostalAddress"16
@"SGPostalAddress"16@?0@"SGPostalAddress"8
@"SGName"24@?0@"SGName"8@"SGName"16
remindersExtractionStatus
daysUntilDue
dueLocationType
dueLocationTrigger
defaultDueDate
success
no_proposal
no_confirmation
no_trigger
no_title
missing_entities_in_model_output
SELECT key FROM emailMetadata WHERE state IN (:lost, :undisplayable) ORDER BY lastSeenTimestamp asc
:lost
:undisplayable
Invalid state
state can't be SGMailMessageUnset
UPDATE emailMetadata SET state = :undisplayablyLost WHERE key IN _pas_nsarray(:serializedKeys)
:undisplayablyLost
:serializedKeys
UPDATE emailMetadata SET state = :undisplayablyLost WHERE unlikely(state = :lost) AND key in _pas_nsarray(:keys) AND lastSeenTimestamp < :lastSeenCutoff
:keys
:lastSeenCutoff
UPDATE emailMetadata SET state = :lost, lastSeenTimestamp = :now WHERE likely(state NOT IN (:lost, :undisplayablyLost)) AND key IN _pas_nsarray(:keys)
:now
SELECT sourceKey, COUNT(*) FROM emailMetadata WHERE unlikely(state = :lost) GROUP BY sourceKey
emailMetadata
SELECT key FROM emailMetadata WHERE unlikely(state = :lost) AND sourceKey = :sourceKey AND NOT (tagsHaveEscapedTag(tags, :eventTag) OR tagsHaveEscapedTag(tags, :contactTag)) ORDER BY lastSeenTimestamp ASC LIMIT :limit
:eventTag
:contactTag
SELECT key FROM emailMetadata WHERE unlikely(state = :lost) AND sourceKey = :sourceKey AND tagsHaveEscapedTag(tags, :contactTag) ORDER BY lastSeenTimestamp ASC LIMIT :limit
SELECT key FROM emailMetadata WHERE unlikely(state = :lost) AND sourceKey = :sourceKey AND tagsHaveEscapedTag(tags, :eventTag) ORDER BY lastSeenTimestamp ASC LIMIT :limit
UPDATE emailMetadata SET state = :state, lastSeenTimestamp = :lastSeen WHERE unlikely(state = :undisplayable) AND key IN _pas_nsarray(:keys)
:lastSeen
UPDATE emailMetadata SET state = :state, lastSeenTimestamp = :lastSeen WHERE unlikely(state != :normal) AND key IN _pas_nsarray(:keys)
:normal
@16@?0@"SGDuplicateKey"8
SELECT key FROM emailMetadata WHERE state NOT IN (:deleted, :undisplayable) AND key IN _pas_nsarray(:keys)
:deleted
UPDATE events SET entityId = :entityId, duplicateKey = :duplicateKey, sourceKey = :sourceKey, title = :title, content = :content, creationTimestamp = :creationTimestamp, lastModifiedTimestamp = :lastModifiedTimestamp, whenRange = :whenRange, structuredData = :structuredData, state = :state, curated = :curated WHERE id = :primaryKey
DELETE FROM eventTags WHERE eventId = :primaryKey
DELETE FROM locations WHERE eventId = :primaryKey
INSERT INTO events (entityId, duplicateKey, sourceKey, title, content, creationTimestamp, lastModifiedTimestamp, whenRange, structuredData, state, curated) VALUES (:entityId, :duplicateKey, :sourceKey, :title, :content, :creationTimestamp, :lastModifiedTimestamp, :whenRange, :structuredData, :state, :curated)
:entityId
:duplicateKey
:sourceKey
:title
:content
:creationTimestamp
:lastModifiedTimestamp
:whenRange
:structuredData
:state
:curated
INSERT INTO eventTags (eventId, name) VALUES (:eventId, :name)
:eventId
SELECT id FROM locations WHERE eventId = :primaryKey
{_PASDBIterAction_=B}16@?0@"_PASSqliteStatement"8
SELECT name FROM eventTags WHERE eventId = :primaryKey
SELECT entityId, duplicateKey, sourceKey, title, content, creationTimestamp, lastModifiedTimestamp, whenRange, structuredData, state, curated FROM events WHERE id = :primaryKey
entityId
events
duplicateKey
sourceKey
title
content
creationTimestamp
lastModifiedTimestamp
whenRange
structuredData
state
curated
SELECT id FROM events WHERE duplicateKey = :duplicateKey
SELECT id FROM events WHERE entityId = :entityId
EmptyStringWalker::ShortVisit called
CREATE TABLE IF NOT EXISTS entity (id INTEGER PRIMARY KEY AUTOINCREMENT,entityKey TEXT NOT NULL,entityType INTEGER NOT NULL,author TEXT,content TEXT,contentRangeOfInterest TEXT,title TEXT COLLATE NOCASE,timeRangeStart REAL,timeRangeEnd REAL,floatingRange INTEGER,timeRangeStartUTCOffsetSeconds INTEGER,timeRangeEndUTCOffsetSeconds INTEGER,creationTimestamp REAL,updateTimestamp REAL,indexTimestamp REAL,lastSeenTimestamp REAL,tags TEXT,structuredData BLOB,quality REAL,locations BLOB,masterEntityId INTEGER DEFAULT -1,groupId INTEGER DEFAULT -1,state INTEGER DEFAULT 0,contentHash TEXT,downloadState INTEGER DEFAULT 0)
CREATE UNIQUE INDEX IF NOT EXISTS entityIdIdx on entity(id)
CREATE INDEX IF NOT EXISTS entityMasterEntityIdIdx on entity(masterEntityId)
CREATE INDEX IF NOT EXISTS entityStateIdx on entity(state)
CREATE VIRTUAL TABLE IF NOT EXISTS entity_fts USING fts4(id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER,messagingTerms TEXT COLLATE NOCASE,ftsTerms TEXT COLLATE NOCASE)
CREATE TABLE IF NOT EXISTS entityTags (tag TEXT,entityKey TEXT,entityType INTEGER,parentKey TEXT,duplicateKeyHash TEXT NOT NULL)
CREATE INDEX IF NOT EXISTS ix_entityTags_tag ON entityTags(tag)
CREATE INDEX IF NOT EXISTS ix_entityTags_dupKey ON entityTags(entityKey, entityType, parentKey)
CREATE TABLE IF NOT EXISTS confirmedFieldValues (entityId INTEGER PRIMARY KEY,fieldValues BLOB,maybeChanged BOOLEAN)
CREATE TABLE IF NOT EXISTS identityPerson (    identityPersonId INTEGER PRIMARY KEY AUTOINCREMENT,    middlename VARCHAR(256),    surname VARCHAR(256),    fullname TEXT,    nameSketches TEXT NOT NULL,    phones TEXT NOT NULL,    email TEXT NOT NULL,    recordId INTEGER NOT NULL,    curated BOOLEAN NOT NULL)
DROP TABLE IF EXISTS identityPhones
CREATE TEMP TABLE IF NOT EXISTS identityPhones (    recordId INTEGER NOT NULL,    phone TEXT NOT NULL)
CREATE INDEX IF NOT EXISTS ix_identityPerson_surname ON identityPerson(surname)
CREATE INDEX IF NOT EXISTS ix_identityPerson_middlename ON identityPerson(middlename)
CREATE INDEX IF NOT EXISTS ix_identityPerson_email_nameless ON identityPerson(email)
CREATE UNIQUE INDEX IF NOT EXISTS ix_identityPerson_recordId ON identityPerson(recordId)
CREATE INDEX IF NOT EXISTS ix_identityPhones_recordId ON identityPhones(recordId)
CREATE INDEX IF NOT EXISTS ix_identityPhones_phone ON identityPhones(phone)
CREATE TABLE IF NOT EXISTS identityLink (    recordId1 INTEGER NOT NULL,    recordId2 INTEGER NOT NULL,    type INT NOT NULL,    strength REAL NOT NULL,    PRIMARY KEY (recordId1, recordId2, type))
CREATE INDEX IF NOT EXISTS ix_identityLink_recordId2 ON identityLink(recordId2)
CREATE TABLE IF NOT EXISTS identityInterdict (a TEXT NOT NULL, b TEXT NOT NULL)
CREATE TABLE IF NOT EXISTS entityReferences (id INTEGER PRIMARY KEY AUTOINCREMENT,bundleIdentifier TEXT,uniqueIdentifier TEXT,entityId INTEGER,domainIdentifier TEXT)
CREATE UNIQUE INDEX IF NOT EXISTS entityReferencesUniqueIdx ON entityReferences(bundleIdentifier, uniqueIdentifier)
CREATE INDEX IF NOT EXISTS entityReferencesDomainIdx ON entityReferences(bundleIdentifier, domainIdentifier)
CREATE INDEX IF NOT EXISTS entityReferencesEntityIdIdx ON entityReferences(entityId)
CREATE INDEX IF NOT EXISTS entityDownloadStateIdx on entity(downloadState)
migration_AddAuthorColumnIfMissing
migration_AddNewishTablesIfMissing
migration_FixUpColumnsForDevicesWhoMissedTheImprovedLegacyMigration
DROP TABLE IF EXISTS cnContactsToSgContacts
CREATE TABLE cnContactsToSgContacts (id INTEGER PRIMARY KEY AUTOINCREMENT,cnContactIdentifier TEXT,maxEntityId INTEGER,entityId INTEGER)
CREATE INDEX IF NOT EXISTS cnContactsToSgContactsEntityIdx ON cnContactsToSgContacts(entityId)
CREATE UNIQUE INDEX IF NOT EXISTS cnContactsToSgContactsUniqueJoin ON cnContactsToSgContacts(cnContactIdentifier, entityId)
CREATE TABLE IF NOT EXISTS cnContactsToSgContactsCacheJobs (id INTEGER PRIMARY KEY AUTOINCREMENT,batch TEXT)
CREATE TABLE IF NOT EXISTS harvestQueueTombstones (bundleIdentifier TEXT,uniqueIdentifier TEXT,domainIdentifier TEXT)
CREATE TABLE IF NOT EXISTS identityPhones (    recordId INTEGER NOT NULL,    phone TEXT NOT NULL)
CREATE INDEX ix_identityPhones_recordId ON identityPhones(recordId)
CREATE INDEX ix_identityPhones_phone ON identityPhones(phone)
CREATE INDEX IF NOT EXISTS entityDupKeyIdx ON entity(entityKey, entityType);
DROP INDEX IF EXISTS entityDupKeyIdx
CREATE INDEX IF NOT EXISTS entityDupKeyIdx ON entity(entityType, entityKey)
CREATE TABLE IF NOT EXISTS serializedContactCacheJobs (id INTEGER PRIMARY KEY AUTOINCREMENT,batch TEXT)
CREATE TABLE IF NOT EXISTS statsCounters (key TEXT NOT NULL,value REAL NOT NULL)
CREATE UNIQUE INDEX ix_statsCounters_key ON statsCounters(key)
CREATE INDEX IF NOT EXISTS entityDupKeyIdx ON entity(entityKey, entityType)
CREATE INDEX IF NOT EXISTS entityTypeIdx ON entity(entityType)
migration_RecreateFTSTableWithITS
INSERT INTO entity_fts(entity_fts) VALUES ('automerge=8')
migration_DeduplicateIdentityPhones
CREATE UNIQUE INDEX ix_identityPhones_unique ON identityPhones(recordId, phone)
DROP TABLE IF EXISTS serializedContactCacheJobs
CREATE TABLE IF NOT EXISTS serializedContactCacheJobs (id INTEGER PRIMARY KEY AUTOINCREMENT)
DROP INDEX IF EXISTS entityParentageParentKeyIdx
CREATE INDEX entityParentageParentKeyChildIdIdx on entityParentage(parentKey, childId)
CREATE UNIQUE INDEX IF NOT EXISTS ix_harvestQueueTombstones_unique ON harvestQueueTombstones(bundleIdentifier, uniqueIdentifier, domainIdentifier)
ALTER TABLE entity ADD COLUMN contentHashBlob BLOB
ALTER TABLE entityTags ADD COLUMN duplicateKeyHashBlob BLOB
ALTER TABLE entityParentage ADD COLUMN duplicateKeyHashBlob BLOB
migration_ConvertContentAndDupKeyHashesToBlobs
CREATE UNIQUE INDEX entityContentHashBlobIdx ON entity(contentHashBlob)
CREATE UNIQUE INDEX entityParentageDuplicateKeyHashBlobIdx on entityParentage(duplicateKeyHashBlob, extractionType)
CREATE INDEX ix_entityTags_dupKeyHashBlob ON entityTags(duplicateKeyHashBlob)
DROP INDEX entityContentHashIdx
DROP INDEX entityParentageDuplicateKeyHashIdx
DROP INDEX ix_entityTags_dupKeyHash
CREATE TABLE IF NOT EXISTS metadata (key TEXT NOT NULL, value)
CREATE UNIQUE INDEX metadataKeyIndex ON metadata(key)
INSERT INTO metadata (key, value) VALUES ('rowIdWhenContactsEnabled', 0)
INSERT INTO metadata (key, value) VALUES ('rowIdWhenEventsEnabled', 0)
CREATE TABLE IF NOT EXISTS messageTracer (domain TEXT NOT NULL,key TEXT NOT NULL,value INTEGER NOT NULL)
CREATE UNIQUE INDEX IF NOT EXISTS messageTracerIdx ON messageTracer(domain, key)
migration_DropMessagingTermsWithPhoneExtensions
DELETE FROM entityReferences WHERE entityId = -1
migration_RemoveEntityReferencesWithoutBundleIdentifier
CREATE INDEX IF NOT EXISTS ix_entityTags_parentKey ON entityTags(parentKey)
ALTER TABLE entity ADD COLUMN pendingGeocode BOOLEAN DEFAULT false
CREATE INDEX entityPendingGeocodeIdx ON entity(pendingGeocode)
ALTER TABLE entity ADD COLUMN harvestedOnBuild TEXT
migration_FixupMergeGroups
UPDATE entity SET pendingGeocode=CAST(pendingGeocode AS INTEGER)
DROP INDEX entityPendingGeocodeIdx
CREATE INDEX entityPendingGeocodeIdx ON entity(pendingGeocode) WHERE pendingGeocode=1
DELETE FROM entity WHERE id NOT IN (SELECT childId FROM entityParentage)
DELETE FROM entity_fts WHERE entityId NOT IN (SELECT childId FROM entityParentage)
DELETE FROM identityPerson WHERE recordId NOT IN (SELECT childId FROM entityParentage)
DELETE FROM identityLink WHERE recordId1 NOT IN (SELECT childId FROM entityParentage) OR recordId2 NOT IN (SELECT childId FROM entityParentage)
DELETE FROM identityPhones WHERE recordId NOT IN (SELECT childId FROM entityParentage)
DELETE FROM entityTags WHERE duplicateKeyHashBlob NOT IN (SELECT duplicateKeyHashBlob FROM entityParentage)
CREATE TABLE IF NOT EXISTS identityBlobAnalysisJobs (id INTEGER PRIMARY KEY AUTOINCREMENT,mergeBlob BLOB)
CREATE TABLE identityInterdictNext (a TEXT NOT NULL, b TEXT NOT NULL)
ALTER TABLE identityPerson ADD COLUMN imAddresses TEXT NOT NULL DEFAULT ""
CREATE TABLE IF NOT EXISTS emailMetadata (id INTEGER PRIMARY KEY AUTOINCREMENT,key TEXT NOT NULL,type INTEGER NOT NULL,sourceKey TEXT,author TEXT,creationTimestamp REAL,updateTimestamp REAL,indexTimestamp REAL,lastSeenTimestamp REAL,tags TEXT,state INTEGER DEFAULT 0,downloadState INTEGER DEFAULT 0,harvestedOnBuild TEXT)
CREATE UNIQUE INDEX IF NOT EXISTS ix_emailMetadata_key ON emailMetadata(key)
CREATE INDEX IF NOT EXISTS ix_emailMetadata_state ON emailMetadata(state)
CREATE INDEX IF NOT EXISTS ix_emailMetadata_downloadState ON emailMetadata(downloadState)
CREATE TABLE IF NOT EXISTS emailTags (key TEXT NOT NULL,type INTEGER NOT NULL,tag TEXT NOT NULL)
CREATE INDEX IF NOT EXISTS ix_emailTags_tag ON emailTags(tag)
migration_separateMessageEntities
migration_rebuildFTSWithDetailEntityIDDocIDs
CREATE INDEX IF NOT EXISTS ix_emailTags_key ON emailTags(key)
migration_deleteInteractions
CREATE TABLE IF NOT EXISTS reimportRequests (id INTEGER PRIMARY KEY AUTOINCREMENT,plugin TEXT NOT NULL,creationTimestamp REAL,queryTimestamp REAL,personHandle TEXT,startDateTimestamp REAL,endDateTimestamp REAL,executionTimestamp REAL)
CREATE INDEX IF NOT EXISTS reimportRequestsQueryIdx ON reimportRequests(queryTimestamp)
CREATE INDEX IF NOT EXISTS reimportRequestsExecutionIdx ON reimportRequests(executionTimestamp)
CREATE TABLE IF NOT EXISTS reimportItems (id INTEGER PRIMARY KEY AUTOINCREMENT,reimportRequestId INTEGER NOT NULL,bundleId TEXT NOT NULL,uniqueId TEXT NOT NULL,seenByReceiverTimestamp REAL)
CREATE INDEX IF NOT EXISTS reimportItemsRequestIdx ON reimportItems(reimportRequestId)
CREATE INDEX IF NOT EXISTS reimportItemsSeenByReceiverIdx ON reimportItems(seenByReceiverTimestamp)
CREATE INDEX IF NOT EXISTS reimportItemsBundleUniqueIdx ON reimportItems(bundleId, uniqueId)
ALTER TABLE identityPerson ADD COLUMN isSent BOOLEAN DEFAULT false
migration_reimport
migration_deleteEmergencyExtractions
CREATE TABLE IF NOT EXISTS urls (id INTEGER PRIMARY KEY AUTOINCREMENT,url TEXT NOT NULL,received_from_handle TEXT,bundle_id TEXT NOT NULL,group_id TEXT,doc_id TEXT NOT NULL,seconds_from_1970 REAL NOT NULL)
CREATE UNIQUE INDEX IF NOT EXISTS ix_urls_url ON urls(url)
CREATE INDEX IF NOT EXISTS ix_urls_seconds_from_1970 ON urls(seconds_from_1970)
CREATE INDEX IF NOT EXISTS ix_urls_bundle_id_group_id ON urls(bundle_id, group_id)
ALTER TABLE entityParentage ADD COLUMN modelVersion INTEGER NOT NULL DEFAULT 0
ALTER TABLE entityParentage ADD COLUMN modelConfidence REAL NOT NULL DEFAULT 0.5
ALTER TABLE urls ADD COLUMN title TEXT
ALTER TABLE urls ADD COLUMN document_title TEXT
ALTER TABLE urls ADD COLUMN document_seconds_from_1970 REAL
ALTER TABLE urls ADD COLUMN document_time_interval REAL NOT NULL DEFAULT 0
ALTER TABLE entity ADD COLUMN curatedDupe BOOLEAN DEFAULT false
migration_deleteSerializedContacts
UPDATE entity SET title = substr(title,1,5) WHERE entityType = 20 AND length(title) = 10 AND substr(title,7,4) IN ('2018','2019')
ALTER TABLE urls ADD COLUMN flags INTEGER NOT NULL DEFAULT 0
migration_deleteInternalExtractionsFromML
CREATE TABLE IF NOT EXISTS locations (id INTEGER PRIMARY KEY,locationType INTEGER NOT NULL,label TEXT NOT NULL,address TEXT NOT NULL,airportCode TEXT NOT NULL,latitude REAL NOT NULL,longitude REAL NOT NULL,accuracy REAL NOT NULL,quality REAL NOT NULL,handle BLOB)
DROP TABLE IF EXISTS reminders
CREATE TABLE IF NOT EXISTS reminders (id INTEGER PRIMARY KEY,entityId INTEGER NOT NULL,duplicateKey TEXT NOT NULL,sourceKey TEXT,title text NOT NULL,dueDateComponents TEXT,dueLocationId INTEGER,dueLocationType INTEGER NOT NULL,dueLocationTrigger INTEGER NOT NULL,sourceUrl TEXT NOT NULL,creationDate num NOT NULL,opaqueKey TEXT,uniqueKey TEXT,contactIdentifier TEXT,reminderStatus NUM NOT NULL,FOREIGN KEY(entityId) REFERENCES entity(id) ON DELETE NO ACTION,FOREIGN KEY(dueLocationId) REFERENCES locations(id) ON DELETE SET NULL)
CREATE INDEX IF NOT EXISTS reminders_duplicateKey_idx ON reminders(duplicateKey)
ALTER TABLE emailMetadata ADD COLUMN pendingVerification INTEGER DEFAULT 0
CREATE INDEX pendingVerificationIdx ON emailMetadata(pendingVerification) WHERE pendingVerification=1
DROP TABLE IF EXISTS locations
CREATE TABLE IF NOT EXISTS locations (id INTEGER PRIMARY KEY AUTOINCREMENT,locationType INTEGER NOT NULL,label TEXT,address TEXT,airportCode TEXT,latitude REAL NOT NULL,longitude REAL NOT NULL,accuracy REAL NOT NULL,quality REAL NOT NULL,handle BLOB)
CREATE TABLE IF NOT EXISTS reminders (id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER NOT NULL,duplicateKey TEXT NOT NULL,sourceKey TEXT,title text NOT NULL,dueDateComponents TEXT,dueLocationId INTEGER,dueLocationType INTEGER NOT NULL,dueLocationTrigger INTEGER NOT NULL,sourceUrl TEXT NOT NULL,creationDate num NOT NULL,opaqueKey TEXT,uniqueKey TEXT,contactIdentifier TEXT,reminderStatus NUM NOT NULL,FOREIGN KEY(entityId) REFERENCES entity(id) ON DELETE NO ACTION,FOREIGN KEY(dueLocationId) REFERENCES locations(id) ON DELETE SET NULL)
CREATE INDEX IF NOT EXISTS reminders_entityId_idx ON reminders(entityId)
migration_newRemindersSchema
DROP TABLE IF EXISTS extractionInfos
DROP TABLE IF EXISTS contactDetails
CREATE TABLE IF NOT EXISTS extractionInfos (id INTEGER PRIMARY KEY AUTOINCREMENT,extractionType INTEGER NOT NULL,modelVersion NUM NOT NULL,confidence NUM NOT NULL)
CREATE TABLE IF NOT EXISTS contactDetails (id INTEGER PRIMARY KEY AUTOINCREMENT,value TEXT NOT NULL,type INTEGER NOT NULL,label TEXT,entityId INTEGER NOT NULL,duplicateKey TEXT NOT NULL,sourceKey TEXT,context TEXT,extractionInfoId INTEGER NOT NULL,FOREIGN KEY(entityId) REFERENCES entity(id) ON DELETE NO ACTION,FOREIGN KEY(extractionInfoId) REFERENCES extractionInfos(id) ON DELETE RESTRICT)
CREATE INDEX IF NOT EXISTS contactDetails_duplicateKey_idx ON contactDetails(duplicateKey)
CREATE INDEX IF NOT EXISTS contactDetails_entityId_idx ON contactDetails(entityId)
migration_newContactDetailsSchema
CREATE TABLE IF NOT EXISTS postMigrationTasks (task TEXT NOT NULL)
INSERT INTO postMigrationTasks (task) VALUES ('migration_deleteLegacyMessages')
CREATE TABLE IF NOT EXISTS locations_alterColumnsNullable (id INTEGER PRIMARY KEY AUTOINCREMENT,locationType INTEGER NOT NULL,label TEXT,address TEXT,airportCode TEXT,latitude REAL,longitude REAL,accuracy REAL,quality REAL,handle BLOB)
INSERT INTO locations_alterColumnsNullable SELECT * FROM locations
DROP TABLE locations
ALTER TABLE locations_alterColumnsNullable RENAME TO locations
CREATE TABLE IF NOT EXISTS events (id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER NOT NULL,duplicateKey TEXT NOT NULL,sourceKey TEXT,title TEXT,content TEXT,creationTimestamp INTEGER,lastModifiedTimestamp INTEGER,whenRange TEXT,structuredData BLOB,state INTEGER,curated INTEGER)
CREATE TABLE IF NOT EXISTS eventTags (id INTEGER PRIMARY KEY AUTOINCREMENT,eventId INTEGER NOT NULL,name TEXT,FOREIGN KEY(eventId) REFERENCES event(id) ON DELETE RESTRICT)
ALTER TABLE locations ADD eventId INTEGER
CREATE INDEX IF NOT EXISTS events_duplicateKey_idx ON events(duplicateKey)
CREATE INDEX IF NOT EXISTS events_entityId_idx ON events(entityId)
CREATE INDEX IF NOT EXISTS eventTags_eventId_idx ON eventTags(eventId)
migration_newEventsSchema
CREATE TABLE IF NOT EXISTS mailIntelligence_featureReferenceMapping (id INTEGER PRIMARY KEY AUTOINCREMENT,sourceType INT NOT NULL,externalReference TEXT)
CREATE TABLE IF NOT EXISTS mailIntelligence_features (id INTEGER PRIMARY KEY AUTOINCREMENT,featureMappingId INT NOT NULL,featureName INT NOT NULL,stringValue TEXT,stringArrayValue TEXT,doubleValue NUM,doubleArrayValue TEXT,FOREIGN KEY(featureMappingId) REFERENCES mailIntelligence_featureReferenceMapping(id) ON DELETE CASCADE)
CREATE INDEX IF NOT EXISTS mailIntelligence_featureReferenceMapping_externalReference_idx ON mailIntelligence_featureReferenceMapping(externalReference)
CREATE INDEX IF NOT EXISTS mailIntelligence_features_featureMappingId_idx ON mailIntelligence_features(featureMappingId)
CREATE TABLE IF NOT EXISTS mailIntelligence_naiveBayesModelsGlobalCounts (id INTEGER PRIMARY KEY AUTOINCREMENT,featureName INTEGER NOT NULL,salientCount INTEGER NOT NULL,regularCount INTEGER NOT NULL,salientUnigramTokensCount INTEGER NOT NULL,regularUnigramTokensCount INTEGER NOT NULL,salientBigramTokensCount INTEGER NOT NULL,regularBigramTokensCount INTEGER NOT NULL,UNIQUE(featureName))
CREATE INDEX IF NOT EXISTS mailIntelligence_naiveBayesModelsGlobalCounts_featureName_idx ON mailIntelligence_naiveBayesModelsGlobalCounts(featureName)
CREATE TABLE IF NOT EXISTS mailIntelligence_naiveBayesModelsUnigramTokens (id INTEGER PRIMARY KEY AUTOINCREMENT,featureName INTEGER NOT NULL,token TEXT NOT NULL,salientCount INTEGER NOT NULL,regularCount INTEGER NOT NULL)
CREATE INDEX IF NOT EXISTS mailIntelligence_naiveBayesModelsUnigramTokens_featureName_idx ON mailIntelligence_naiveBayesModelsUnigramTokens(featureName)
CREATE TABLE IF NOT EXISTS mailIntelligence_naiveBayesModelsBigramTokens (id INTEGER PRIMARY KEY AUTOINCREMENT,featureName INTEGER NOT NULL,token TEXT NOT NULL,salientCount INTEGER NOT NULL,regularCount INTEGER NOT NULL)
CREATE INDEX IF NOT EXISTS mailIntelligence_naiveBayesModelsBigramTokens_featureName_idx ON mailIntelligence_naiveBayesModelsBigramTokens(featureName)
CREATE TABLE IF NOT EXISTS mailIntelligence_biomeProgress (id INTEGER PRIMARY KEY AUTOINCREMENT,streamName TEXT NOT NULL,progressTimestamp NUM NOT NULL)
CREATE TABLE IF NOT EXISTS mailIntelligence_saliency (id INTEGER PRIMARY KEY AUTOINCREMENT,creationTimestamp REAL NOT NULL,messageId TEXT NOT NULL,score NUM NOT NULL)
DROP INDEX ix_urls_url
CREATE UNIQUE INDEX IF NOT EXISTS ix_urls_url_doc ON urls(url, doc_id, document_seconds_from_1970)
DROP TABLE IF EXISTS mailIntelligence_naiveBayesModelsUnigramTokens
DROP TABLE IF EXISTS mailIntelligence_naiveBayesModelsBigramTokens
CREATE TABLE IF NOT EXISTS mailIntelligence_naiveBayesModelsTokens (id INTEGER PRIMARY KEY AUTOINCREMENT,featureName INTEGER NOT NULL,token TEXT NOT NULL,is_unigram BOOLEAN NOT NULL,salientCount INTEGER NOT NULL,regularCount INTEGER NOT NULL)
CREATE UNIQUE INDEX IF NOT EXISTS mailIntelligence_naiveBayesModelsTokens_featureName_token_unigram_idx ON mailIntelligence_naiveBayesModelsTokens(featureName, token, is_unigram)
ALTER TABLE mailIntelligence_saliency ADD COLUMN mailboxId TEXT
migration_deleteNilDateEvents
ALTER TABLE mailIntelligence_saliency ADD COLUMN is_salient BOOLEAN
ALTER TABLE mailIntelligence_saliency ADD COLUMN is_gte_salient INTEGER
ALTER TABLE mailIntelligence_saliency ADD COLUMN is_counted BOOLEAN
ALTER TABLE mailIntelligence_naiveBayesModelsTokens ADD COLUMN lastUpdateTimestamp REAL NOT NULL
CREATE INDEX IF NOT EXISTS mailintelligence_saliency_covering_idx ON mailintelligence_saliency(mailboxId, creationTimestamp DESC, score, is_salient, messageId)
CREATE TABLE IF NOT EXISTS mailIntelligence_spotlightMapping (id INTEGER PRIMARY KEY AUTOINCREMENT,messageId TEXT NOT NULL,uniqueIdentifier TEXT NOT NULL,bundleIdentifier TEXT NOT NULL,terminatedDomainIdentifier TEXT)
CREATE UNIQUE INDEX IF NOT EXISTS mailintelligence_spotlightMapping_bundleIdentifier_uniqueIdentifier_idx ON mailIntelligence_spotlightMapping(bundleIdentifier, uniqueIdentifier)
CREATE INDEX IF NOT EXISTS mailintelligence_spotlightMapping_bundleIdentifier_terminatedDomainIdentifier_idx ON mailIntelligence_spotlightMapping(bundleIdentifier, terminatedDomainIdentifier)
DROP TABLE IF EXISTS identityPerson
CREATE TABLE IF NOT EXISTS identityPerson (    recordId INTEGER PRIMARY KEY,    middlename VARCHAR(256),    surname VARCHAR(256),    fullname TEXT,    nameSketches TEXT NOT NULL,    phones TEXT NOT NULL,    email TEXT NOT NULL,    socialProfileIdentifiers TEXT NOT NULL,    curated BOOLEAN NOT NULL,    isSent BOOLEAN DEFAULT false)
CREATE INDEX ix_identityPerson_surname ON identityPerson(surname)
CREATE INDEX ix_identityPerson_middlename ON identityPerson(middlename)
CREATE INDEX ix_identityPerson_email_nameless ON identityPerson(email)
DROP TABLE IF EXISTS identitySocialProfileIdentifiers
CREATE TABLE IF NOT EXISTS identitySocialProfileIdentifiers (    socialProfileIdentifier TEXT NOT NULL,    recordId INTEGER NOT NULL,    PRIMARY KEY (socialProfileIdentifier, recordId)) WITHOUT ROWID
CREATE TABLE IF NOT EXISTS identityPhones (    phone TEXT NOT NULL,    recordId INTEGER NOT NULL,    PRIMARY KEY (phone, recordId)) WITHOUT ROWID
migration_RebuildIdentityTables
DROP TABLE IF EXISTS mailIntelligence_features
DROP TABLE IF EXISTS mailIntelligence_featureReferenceMapping
ALTER TABLE mailIntelligence_saliency RENAME COLUMN is_salient TO isSalient
ALTER TABLE mailIntelligence_saliency RENAME COLUMN is_gte_salient TO isGteSalient
ALTER TABLE mailIntelligence_saliency RENAME COLUMN is_counted TO isCounted
ALTER TABLE mailIntelligence_naiveBayesModelsTokens RENAME COLUMN is_unigram TO isUnigram
DROP TABLE IF EXISTS mailIntelligence_biomeProgress
UPDATE contactDetails SET context = NULL
ALTER TABLE contactDetails RENAME COLUMN context TO unused
DELETE FROM mailIntelligence_naiveBayesModelsGlobalCounts
DELETE FROM mailIntelligence_naiveBayesModelsTokens
ALTER TABLE mailIntelligence_naiveBayesModelsTokens ADD COLUMN creationTimestamp REAL NOT NULL
ALTER TABLE mailIntelligence_saliency ADD COLUMN isLogged BOOLEAN DEFAULT false
ALTER TABLE mailIntelligence_saliency ADD COLUMN stagedLog BLOB
ALTER TABLE contactDetails DROP COLUMN unused
DROP TABLE cnContactsToSgContactsCacheJobs
CREATE TABLE cnContactsToSgContactsCacheJobs (   cnContactIdentifier TEXT PRIMARY KEY NOT NULL) WITHOUT ROWID
CREATE TABLE entity (id INTEGER PRIMARY KEY AUTOINCREMENT,entityKey TEXT NOT NULL,entityType INTEGER NOT NULL,author TEXT,content TEXT,contentRangeOfInterest TEXT,title TEXT COLLATE NOCASE,timeRangeStart REAL,timeRangeEnd REAL,floatingRange INTEGER,timeRangeStartUTCOffsetSeconds INTEGER,timeRangeEndUTCOffsetSeconds INTEGER,creationTimestamp REAL,updateTimestamp REAL,indexTimestamp REAL,lastSeenTimestamp REAL,tags TEXT,structuredData BLOB,quality REAL,locations BLOB,masterEntityId INTEGER DEFAULT -1,groupId INTEGER DEFAULT -1,state INTEGER DEFAULT 0,contentHash TEXT,downloadState INTEGER DEFAULT 0, contentHashBlob BLOB, pendingGeocode BOOLEAN DEFAULT false, harvestedOnBuild TEXT, curatedDupe BOOLEAN DEFAULT false)
migration_CreateFTSTableWithITS
CREATE TABLE entityTags (tag TEXT,entityKey TEXT,entityType INTEGER,parentKey TEXT,duplicateKeyHash TEXT NOT NULL, duplicateKeyHashBlob BLOB)
CREATE TABLE confirmedFieldValues (entityId INTEGER PRIMARY KEY,fieldValues BLOB,maybeChanged BOOLEAN)
CREATE TABLE entityParentage (id INTEGER PRIMARY KEY AUTOINCREMENT,parentKey TEXT,childId INTEGER NOT NULL,duplicateKeyHash TEXT NOT NULL,extractionType INTEGER,sourceKey TEXT, duplicateKeyHashBlob BLOB, modelVersion INTEGER NOT NULL DEFAULT 0, modelConfidence REAL NOT NULL DEFAULT 0.5,UNIQUE(parentKey, childId))
CREATE TABLE serializedContacts (id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER,data BLOB)
CREATE TABLE identityLink (    recordId1 INTEGER NOT NULL,    recordId2 INTEGER NOT NULL,    type INT NOT NULL,    strength REAL NOT NULL,    PRIMARY KEY (recordId1, recordId2, type))
CREATE TABLE entityReferences (id INTEGER PRIMARY KEY AUTOINCREMENT,bundleIdentifier TEXT,uniqueIdentifier TEXT,entityId INTEGER,domainIdentifier TEXT)
CREATE TABLE harvestQueueTombstones (bundleIdentifier TEXT,uniqueIdentifier TEXT,domainIdentifier TEXT)
CREATE TABLE statsCounters (key TEXT NOT NULL,value REAL NOT NULL)
CREATE TABLE serializedContactCacheJobs (id INTEGER PRIMARY KEY AUTOINCREMENT)
CREATE TABLE metadata (key TEXT NOT NULL, value)
INSERT INTO metadata VALUES('rowIdWhenContactsEnabled',0)
INSERT INTO metadata VALUES('rowIdWhenEventsEnabled',0)
CREATE TABLE messageTracer (domain TEXT NOT NULL,key TEXT NOT NULL,value INTEGER NOT NULL)
CREATE TABLE identityBlobAnalysisJobs (id INTEGER PRIMARY KEY AUTOINCREMENT,mergeBlob BLOB)
CREATE TABLE emailMetadata (id INTEGER PRIMARY KEY AUTOINCREMENT,key TEXT NOT NULL,type INTEGER NOT NULL,sourceKey TEXT,author TEXT,creationTimestamp REAL,updateTimestamp REAL,indexTimestamp REAL,lastSeenTimestamp REAL,tags TEXT,state INTEGER DEFAULT 0,downloadState INTEGER DEFAULT 0,harvestedOnBuild TEXT, pendingVerification INTEGER DEFAULT 0)
CREATE TABLE emailTags (key TEXT NOT NULL,type INTEGER NOT NULL,tag TEXT NOT NULL)
CREATE TABLE reimportRequests (id INTEGER PRIMARY KEY AUTOINCREMENT,plugin TEXT NOT NULL,creationTimestamp REAL,queryTimestamp REAL,personHandle TEXT,startDateTimestamp REAL,endDateTimestamp REAL,executionTimestamp REAL)
CREATE TABLE reimportItems (id INTEGER PRIMARY KEY AUTOINCREMENT,reimportRequestId INTEGER NOT NULL,bundleId TEXT NOT NULL,uniqueId TEXT NOT NULL,seenByReceiverTimestamp REAL)
CREATE TABLE urls (id INTEGER PRIMARY KEY AUTOINCREMENT,url TEXT NOT NULL,received_from_handle TEXT,bundle_id TEXT NOT NULL,group_id TEXT,doc_id TEXT NOT NULL,seconds_from_1970 REAL NOT NULL, title TEXT, document_title TEXT, document_seconds_from_1970 REAL, document_time_interval REAL NOT NULL DEFAULT 0, flags INTEGER NOT NULL DEFAULT 0)
CREATE TABLE reminders (id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER NOT NULL,duplicateKey TEXT NOT NULL,sourceKey TEXT,title text NOT NULL,dueDateComponents TEXT,dueLocationId INTEGER,dueLocationType INTEGER NOT NULL,dueLocationTrigger INTEGER NOT NULL,sourceUrl TEXT NOT NULL,creationDate num NOT NULL,opaqueKey TEXT,uniqueKey TEXT,contactIdentifier TEXT,reminderStatus NUM NOT NULL,FOREIGN KEY(entityId) REFERENCES entity(id) ON DELETE NO ACTION,FOREIGN KEY(dueLocationId) REFERENCES locations(id) ON DELETE SET NULL)
CREATE TABLE extractionInfos (id INTEGER PRIMARY KEY AUTOINCREMENT,extractionType INTEGER NOT NULL,modelVersion NUM NOT NULL,confidence NUM NOT NULL)
CREATE TABLE contactDetails (id INTEGER PRIMARY KEY AUTOINCREMENT,value TEXT NOT NULL,type INTEGER NOT NULL,label TEXT,entityId INTEGER NOT NULL,duplicateKey TEXT NOT NULL,sourceKey TEXT,extractionInfoId INTEGER NOT NULL,FOREIGN KEY(entityId) REFERENCES entity(id) ON DELETE NO ACTION,FOREIGN KEY(extractionInfoId) REFERENCES extractionInfos(id) ON DELETE RESTRICT)
CREATE TABLE postMigrationTasks (task TEXT NOT NULL)
CREATE TABLE IF NOT EXISTS "locations" (id INTEGER PRIMARY KEY AUTOINCREMENT,locationType INTEGER NOT NULL,label TEXT,address TEXT,airportCode TEXT,latitude REAL,longitude REAL,accuracy REAL,quality REAL,handle BLOB, eventId INTEGER)
CREATE TABLE events (id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER NOT NULL,duplicateKey TEXT NOT NULL,sourceKey TEXT,title TEXT,content TEXT,creationTimestamp INTEGER,lastModifiedTimestamp INTEGER,whenRange TEXT,structuredData BLOB,state INTEGER,curated INTEGER)
CREATE TABLE eventTags (id INTEGER PRIMARY KEY AUTOINCREMENT,eventId INTEGER NOT NULL,name TEXT,FOREIGN KEY(eventId) REFERENCES event(id) ON DELETE RESTRICT)
CREATE TABLE mailIntelligence_naiveBayesModelsGlobalCounts (id INTEGER PRIMARY KEY AUTOINCREMENT,featureName INTEGER NOT NULL,salientCount INTEGER NOT NULL,regularCount INTEGER NOT NULL,salientUnigramTokensCount INTEGER NOT NULL,regularUnigramTokensCount INTEGER NOT NULL,salientBigramTokensCount INTEGER NOT NULL,regularBigramTokensCount INTEGER NOT NULL,UNIQUE(featureName))
CREATE TABLE mailIntelligence_saliency (id INTEGER PRIMARY KEY AUTOINCREMENT,creationTimestamp REAL NOT NULL,messageId TEXT NOT NULL,score NUM NOT NULL, mailboxId TEXT, isSalient BOOLEAN, isGteSalient INTEGER, isCounted BOOLEAN, isLogged BOOLEAN DEFAULT false, stagedLog BLOB)
CREATE TABLE mailIntelligence_naiveBayesModelsTokens (id INTEGER PRIMARY KEY AUTOINCREMENT,featureName INTEGER NOT NULL,token TEXT NOT NULL,isUnigram BOOLEAN NOT NULL,salientCount INTEGER NOT NULL,regularCount INTEGER NOT NULL, lastUpdateTimestamp REAL NOT NULL, creationTimestamp REAL NOT NULL)
CREATE TABLE mailIntelligence_spotlightMapping (id INTEGER PRIMARY KEY AUTOINCREMENT,messageId TEXT NOT NULL,uniqueIdentifier TEXT NOT NULL,bundleIdentifier TEXT NOT NULL,terminatedDomainIdentifier TEXT)
CREATE TABLE identityPerson (    recordId INTEGER PRIMARY KEY,    middlename VARCHAR(256),    surname VARCHAR(256),    fullname TEXT,    nameSketches TEXT NOT NULL,    phones TEXT NOT NULL,    email TEXT NOT NULL,    socialProfileIdentifiers TEXT NOT NULL,    curated BOOLEAN NOT NULL,    isSent BOOLEAN DEFAULT false)
CREATE TABLE identitySocialProfileIdentifiers (    socialProfileIdentifier TEXT NOT NULL,    recordId INTEGER NOT NULL,    PRIMARY KEY (socialProfileIdentifier, recordId)) WITHOUT ROWID
CREATE TABLE identityPhones (    phone TEXT NOT NULL,    recordId INTEGER NOT NULL,    PRIMARY KEY (phone, recordId)) WITHOUT ROWID
INSERT INTO sqlite_sequence VALUES('emailMetadata',0)
INSERT INTO sqlite_sequence VALUES('locations',0)
CREATE UNIQUE INDEX entityIdIdx on entity(id)
CREATE INDEX entityMasterEntityIdIdx on entity(masterEntityId)
CREATE INDEX entityStateIdx on entity(state)
CREATE INDEX ix_entityTags_tag ON entityTags(tag)
CREATE INDEX ix_entityTags_dupKey ON entityTags(entityKey, entityType, parentKey)
CREATE INDEX entityParentageChildIdx on entityParentage(childId)
CREATE UNIQUE INDEX serializedContactsEntityIdIdx ON serializedContacts(entityId)
CREATE INDEX ix_identityLink_recordId2 ON identityLink(recordId2)
CREATE UNIQUE INDEX entityReferencesUniqueIdx ON entityReferences(bundleIdentifier, uniqueIdentifier)
CREATE INDEX entityReferencesDomainIdx ON entityReferences(bundleIdentifier, domainIdentifier)
CREATE INDEX entityReferencesEntityIdIdx ON entityReferences(entityId)
CREATE INDEX groupIdIdx on entity(groupId)
CREATE INDEX cnContactsToSgContactsEntityIdx ON cnContactsToSgContacts(entityId)
CREATE UNIQUE INDEX cnContactsToSgContactsUniqueJoin ON cnContactsToSgContacts(cnContactIdentifier, entityId)
CREATE INDEX entityDupKeyIdx ON entity(entityKey, entityType)
CREATE INDEX entityTypeIdx ON entity(entityType)
CREATE UNIQUE INDEX ix_harvestQueueTombstones_unique ON harvestQueueTombstones(bundleIdentifier, uniqueIdentifier, domainIdentifier)
CREATE UNIQUE INDEX messageTracerIdx ON messageTracer(domain, key)
CREATE INDEX ix_entityTags_parentKey ON entityTags(parentKey)
CREATE UNIQUE INDEX ix_emailMetadata_key ON emailMetadata(key)
CREATE INDEX ix_emailMetadata_state ON emailMetadata(state)
CREATE INDEX ix_emailMetadata_downloadState ON emailMetadata(downloadState)
CREATE INDEX ix_emailTags_tag ON emailTags(tag)
CREATE INDEX ix_emailTags_key ON emailTags(key)
CREATE INDEX reimportRequestsQueryIdx ON reimportRequests(queryTimestamp)
CREATE INDEX reimportRequestsExecutionIdx ON reimportRequests(executionTimestamp)
CREATE INDEX reimportItemsRequestIdx ON reimportItems(reimportRequestId)
CREATE INDEX reimportItemsSeenByReceiverIdx ON reimportItems(seenByReceiverTimestamp)
CREATE INDEX reimportItemsBundleUniqueIdx ON reimportItems(bundleId, uniqueId)
CREATE INDEX ix_urls_seconds_from_1970 ON urls(seconds_from_1970)
CREATE INDEX ix_urls_bundle_id_group_id ON urls(bundle_id, group_id)
CREATE INDEX reminders_duplicateKey_idx ON reminders(duplicateKey)
CREATE INDEX reminders_entityId_idx ON reminders(entityId)
CREATE INDEX contactDetails_duplicateKey_idx ON contactDetails(duplicateKey)
CREATE INDEX contactDetails_entityId_idx ON contactDetails(entityId)
CREATE INDEX events_duplicateKey_idx ON events(duplicateKey)
CREATE INDEX events_entityId_idx ON events(entityId)
CREATE INDEX eventTags_eventId_idx ON eventTags(eventId)
CREATE INDEX mailIntelligence_naiveBayesModelsGlobalCounts_featureName_idx ON mailIntelligence_naiveBayesModelsGlobalCounts(featureName)
CREATE UNIQUE INDEX ix_urls_url_doc ON urls(url, doc_id, document_seconds_from_1970)
CREATE UNIQUE INDEX mailIntelligence_naiveBayesModelsTokens_featureName_token_unigram_idx ON mailIntelligence_naiveBayesModelsTokens(featureName, token, isUnigram)
CREATE INDEX mailintelligence_saliency_covering_idx ON mailintelligence_saliency(mailboxId, creationTimestamp DESC, score, isSalient, messageId)
CREATE UNIQUE INDEX mailintelligence_spotlightMapping_bundleIdentifier_uniqueIdentifier_idx ON mailIntelligence_spotlightMapping(bundleIdentifier, uniqueIdentifier)
CREATE INDEX mailintelligence_spotlightMapping_bundleIdentifier_terminatedDomainIdentifier_idx ON mailIntelligence_spotlightMapping(bundleIdentifier, terminatedDomainIdentifier)
SGSeekableData.m
Error loading %@: %@
Tried to read %llu-%llu from data of length %llu
offset %llu outside of bounds (file length %llu)
<FIAPResult h:%@ e:%@>
startUTCOffsetSeconds
endUTCOffsetSeconds
Case not handled in ComputeSimple: 
SimplifyWalker::ShortVisit called
Simplify case not handled: 
Malformed repeat 
SGCuratedEventKey.m
externalId
<SGCuratedEvent externalId: %@>
Bad regexp op 
kRegexpAlternate child_args is NULL
kRegexpStar child_args is NULL
kRegexpQuest child_args is NULL
kRegexpPlus child_args is NULL
kRegexpCapture child_args is NULL
Bad op in Prefilter::DebugString: 
op%d
*no-matches*
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
Stack not empty.
Walk NULL
SGStorageReminder.m
SGStorageReminder failed to create sourceURL from %@
<SGStorageReminder title:%@ dupKey:%@ dueDate:%@ dueLocation: %@ reminderStatus: %@>
SELECT messageId FROM mailIntelligence_spotlightMapping WHERE uniqueIdentifier = :uniqueIdentifier AND bundleIdentifier = :bundleIdentifier
:uniqueIdentifier
:bundleIdentifier
messageId
mailIntelligence_spotlightMapping
SELECT messageId FROM mailIntelligence_spotlightMapping WHERE bundleIdentifier = :bundleIdentifier LIMIT :limit
:limit
SELECT messageId FROM mailIntelligence_spotlightMapping WHERE uniqueIdentifier IN _pas_nsarray(:uniqueIdentifiers) AND bundleIdentifier = :bundleIdentifier
:uniqueIdentifiers
SELECT messageId FROM mailIntelligence_spotlightMapping WHERE bundleIdentifier = :bundleIdentifier AND terminatedDomainIdentifier GLOB :domainIdentifierGlob
:domainIdentifierGlob
SELECT uniqueIdentifier FROM mailIntelligence_spotlightMapping WHERE messageId = :messageId AND bundleIdentifier = :bundleIdentifier
:messageId
uniqueIdentifier
SELECT id FROM mailIntelligence_spotlightMapping WHERE bundleIdentifier = :bundleIdentifier AND uniqueIdentifier = :uniqueIdentifier
INSERT INTO mailIntelligence_spotlightMapping (messageId, uniqueIdentifier, terminatedDomainIdentifier, bundleIdentifier) VALUES (:messageId, :uniqueIdentifier, :terminatedDomainIdentifier, :bundleIdentifier) ON CONFLICT(bundleIdentifier, uniqueIdentifier) DO UPDATE SET messageId=:messageId, terminatedDomainIdentifier=:terminatedDomainIdentifier
:terminatedDomainIdentifier
SGDNotificationBroadcaster
com.apple.suggestions.eventsDidChange
com.apple.suggestions.contactsDidChange
com.apple.suggestions.remindersDidChange
personFromSenderAge
personFromSenderInDyadicConversationAge
subjectContentAge
personToRecipientsAge
personCCRecipientsAge
domainFromSenderAge
conversationAge
SGXpcTransaction.m
_transaction != nil
_timeoutTimer == nil
PROACTIVE_MAIL_INTELLIGENCE_SALIENCY
assets_130
signatureStatsLogging
model.mlmodelc
modelFeatureNames.plist
modelFeatureStandardizationMeans.plist
modelFeatureStandardizationStandardDeviations.plist
modelGroundTruthFeatureNames.plist
modelGroundTruthFeatureLowerBounds.plist
modelGroundTruthFeatureUpperBounds.plist
modelGroundTruthOutputs.plist
saliencyOverrideFeatureNames.plist
saliencyOverrideFeatureLowerBounds.plist
saliencyOverrideFeatureUpperBounds.plist
saliencyOverrideOutputs.plist
classificationConfiguration.plist
classificationThreshold
classificationOfflinePrecision
classificationOfflineRecall
attachmentDetectionRegexes.plist
attachmentLinkDetection.plist
recipientConservativeDetectionRegexes.plist
recipientDetectionRegexes.plist
nicknameDetectionRegexes.plist
followUpOnOutgoingMailsQuestionsDetectionRegexes.plist
followUpOnOutgoingMailsAsksDetectionRegexes.plist
followUpOnIncomingMailsDetectionRegexes.plist
followUpWarningsParameters.plist
minCountToConsiderATokenAsHighlyDiscriminant
ratioToConsiderATokenAsHighlyDiscriminant
minCountToConsiderATokenAsExtremelyDiscriminant
ratioToConsiderATokenAsExtremelyDiscriminant
E=%@ D=%d T=%@
Device is likely not enrolled in a Trial experiment.
%@/%@
%@/%@/%@
default
v16@?0@"SGMITrialClientWrapperGuardedData"8
http://schema.org/
http://schema.org/%@
pseudoContacts
CoreSuggestions-contacts
SGSpotlightContactsAdapter-notify
Metadata/com.apple.IntelligentSuggestions/
%llu.vcf
SGSpotlightContactsAdapter.m
failed to create a CSCustomAttributeKey for MDItemRelatedAppBundleIdentifier
v32@?0@"NSString"8@"SGContact"16^B24
v16@?0@"NSError"8
SignificantPostalAddressForIMessage
SGJSWatchdogTimerCallback
JSContextGroupRef SGJSContextGroupCreate()
SGJSWatchdogTimer.mm
JSContextGroupCreate
void *JavaScriptCoreLibrary()
JSVirtualMachine
Class getJSVirtualMachineClass()_block_invoke
void SGJSContextGroupSetExecutionTimeLimit(JSContextGroupRef, double, JSShouldTerminateCallback, void *)
JSContextGroupSetExecutionTimeLimit
JSStringRef SGJSContextCreateBacktrace(JSContextRef, unsigned int)
JSContextCreateBacktrace
CFStringRef SGJSStringCopyCFString(CFAllocatorRef, JSStringRef)
JSStringCopyCFString
void SGJSContextGroupRelease(JSContextGroupRef)
JSContextGroupRelease
%FT%H:%M:%S
SGExtractionDocumentErrorDomain
v32@?0{_NSRange=QQ}8^B24
void freeRegexp(void *)
SGChunkPool.m
Could not deallocate memory from mallocRegexp
void *superblockMalloc(int)
Could not allocate memory for mallocRegexp
<SGWebPageKey source=%@ uniqueIdentifier=%@
SGDelivery+Building.m
Attachment
AttachmentLink
Recipient
FollowUpAsk
FollowUpQuestion
B16@?0@"SGTaggedCharacterRange"8
@"NSString"24@?0@"SGTaggedCharacterRange"8Q16
submodelsProbabilities
predictedSaliencyScore
predictedSaliency
saliencyPredictionPerformanceInMilliSeconds
estimatedGroundTruth
missingAttachment
missingAttachmentPredictionPerformanceInMilliSeconds
missingRecipient
missingRecipientPredictionPerformanceInMilliSeconds
Salient
Neutral
Ignorable
mailIntelligence
persistentID
v16@?0@"BPSCompletion"8
v16@?0@"BMStoreEvent"8
LANGUAGE
WINDOWLENGTH
SGContactSharingTransformer.m
SGAssetIdentifier
SGAsset-notifications
IPHONE_SIMULATOR_ROOT
/System/Library/AssetTypeDescriptors/com.apple.MobileAsset.AssetTypeDescriptor.CoreSuggestionsAssets.plist
Assets
suggestionsassets
common
:name
INSERT INTO eventTags (name) VALUES (:name)
SELECT name FROM eventTags WHERE id = :primaryKey
:primaryKey
v16@?0@"EKEventStore"8
SGEKCalendarAdapter.m
@"EKEvent"16@?0@"EKEvent"8
v24@?0@"EKEvent"8^B16
_addEKEventToCalendar
componentName
significantWork
reason
SGSqliteDatabaseError
Error(%d): %@
 (SQL: %@)
. May be due to previous POSIX error %@
. Free space (rounded to 1 significant digit): %@ bytes
sg_db_corruption_marker
locking
locked
unlocked
PRAGMA journal_mode
com.apple.suggestions.databasejournal.
journals
com.apple.suggestions.databasejournal.inmemory
__query
v32@?0@"NSString"8@16^B24
v8@?0
{_PASDBIterAction_=B}16@?0@"NSError"8
SGDatabaseJournal.m
!_inMemory
SGDatabaseJournalWillRecoverOnNextLaunch
A bogus or corrupt journal file was found and has been cleaned up. Suggestd will relaunch and continue.
fullPath
originalException
SGDatabaseJournal.executeQueriesOnDatabase
DELETE FROM snippets WHERE entityId NOT IN (SELECT id FROM entities.entity)
com.apple.suggestions.suggestd
Suppressing non-meaningful text message displayName.
Cannot get domain identifier for text message %@
expected coded array %@ to give a new instance of %@ but it didn't
Error fetching contact for identifier '%@': %@
Interaction Person has no identity/handle: %@ / %@
JSON Data is Empty. Nothing to return.
Error: Failed to serialize to JSON
SGURL: query: %f - %f 
SGURL: urlsFoundBetweenStartDate results: %@
SGURL: written: %@
SGURL: urlsFoundBetweenStartDate+bundle query: %f - %f 
SGURL: urlsFoundBetweenStartDate+bundle results: %@
Multiple model names specified to turn on data collection (objective: %lu, language: %@, models: %@.
SGSQLEntityStore+Reminders: unable to deserialize date components.
SGSQLEntityStore+Reminders: unable to fetch title.
null date derived from reminder.dueDateComponents is unexpected: %@
SGWordBoundaryQuickTypeInference - Invalid model config!
SGWordBoundaryQuickTypeInference - localeIdentifier/language (%@/%@) do not match configured target language (%@)
SGWordBoundaryQuickTypeInference - Unexpected number of confidence thresholds (%ld rather than %ld)
SGWordBoundaryQuickTypeInference - Could not initialize model with config path: %@, bin path: %@
SGWordBoundaryQuickTypeInference - Irrelevant Label predicted with score: %@
SGWordBoundaryQuickTypeInference - Predicted label (%ld) confidence (%@), falls below confidence threshold (%@)!
SGWordBoundaryQuickTypeInference - probable prior prediction of label %ld (score: %@) detected.
SGWordBoundaryQuickTypeInference - objective: %lu, prediction: %ld, score: %@
SGWordBoundaryQuickTypeInference - No name found for thirdparty objective: %ld
SGWordBoundaryQuickTypeInference - Unexpected label %ld
SGStructuredEventDocument: Unable to detect title, missing modelOutput or enrichedTaggedCharacterRanges
SGStructuredEventDocument: No title mapping, unsupported category
SGStructuredEventDocument: Unable to detect reservationId, missing modelOutput or enrichedTaggedCharacterRanges
SGStructuredEventDocument: Unable to detect startDateComponents, missing modelOutput or enrichedTaggedCharacterRanges
SGStructuredEventDocument: Unable to detect endDateComponents, missing modelOutput or enrichedTaggedCharacterRanges
SGStructuredEventDocument: Unable to detect startAddress, missing modelOutput or enrichedTaggedCharacterRanges
SGStructuredEventDocument: Unable to detect %@, missing modelOutput or enrichedTaggedCharacterRanges
SGReminderDissector: detectReminders is OFF
SGReminderDissector: Reminder detection for mail is off
SGReminderDissector: Not processing due to a missing localeAsset. [SGEntity (%{public}@)]
SGReminderDissector: Not processing since PseudoEvent found
SGReminderDissector: Mail has multiple recipients, skipping
SGReminderDissector: Mail is inhuman, skipping
SGReminderDissector: Mail is from mailing list, skipping
SGReminderDissector: Mail is partially downloaded, skipping
SGReminderDissector: Mail is sent, skipping
SGReminderDissector: Mail is older than one week, skipping
SGReminderDissector: Mail is from insignificant sender, skipping
SGReminderDissector: Skipping parts of content that are identified as not plain text
SGReminderDissector: Not model output, bailing
SGEntity: %{public}@ -> SGPipelineEnrichment: %{public}@
Dissecting Text Message to find reminder
SGReminderDissector: ProcessingLanguage: %@
SGReminderDissector: Message with confirmation found
SGReminderDissector: No modelOutput for previousMessage
SGReminderDissector: Previous message has proposal and question
SGReminderDissector: Found title for reminder %@
SGReminderDissector: Couldn't reject reminder: %@
SGReminderDissector: No previous message
SGReminderDissector: %@
SGReminderDissector: timing(ms): %f
SGReminderDissector: Message too short or too long to process or missing conversationIdentifier, bailing
SGReminderDissector: Message is a group chat, bailing
SGReminderDissector: Unable to load model assets
SGReminderDissector: Unable to load emoji assets
SGReminderDissector: Unable to load verb mapping
SGReminderDissector: Date is in the past, skipping
SGReminderDissector: ExtractionModel is nil
SGReminderDissector: Processinglanguage is nil
SGReminderDissector: No model output, bailing
No dueLocation or dueDate, bailing
SGReminderDissector: DueDate in past, bailing
Creating enrichment for Reminder: %@, dueTime: %@, dueLocation: %@
Creating Reminder enrichment
SGReminderDissector - Unknown object encountered while resolving contactId
SGReminderDissector - Could not resolve Contact. Nil contactIdentifier
No groupId found for entity %@
Unable to load RTRoutineManager
Unable to get LocationsOfInterest: %@
Suggestions failed to dlopen CoreRoutine.
SGMessageEventDissectorTrialClientWrapper: Updating factors
SGMessageEventDissectorTrialClientWrapper: No active Trial deployment found
SGMessageEventDissectorTrialClientWrapper: Updating trialEventExtractionAssetsPath from trial: %{private}@
SGMessageEventDissectorTrialClientWrapper: TRILevel is nil for trialEventExtractionAssetsPath
SGMessageEventDissectorTrialClientWrapper: Updating trialEventClassifierModelPath from trial: %{private}@
SGMessageEventDissectorTrialClientWrapper: TRILevel is nil for trialEventClassifierModelPath
SGMessageEventDissectorTrialClientWrapper: Updating trialEventClassifierThreshold from trial: %.02f
SGMessageEventDissectorTrialClientWrapper: TRILevel is nil for trialEventClassifierThreshold
SGMessageEventDissectorTrialClientWrapper: Updating trialMessageProcessingLimit from trial: %.02f
SGMessageEventDissectorTrialClientWrapper: TRILevel is nil for trialMessageProcessingLimit
SGMessageEventDissectorTrialClientWrapper: Updating trialRateLimitInterval from trial: %.02f
SGMessageEventDissectorTrialClientWrapper: TRILevel is nil for trialRateLimitInterval
SGMessageEventDissectorTrialClientWrapper: trialEventExtractionAssetsPath is nil, bailing
SGMessageEventDissectorTrialClientWrapper: EventExtractionAssetsPath loaded with Trial %{private}@
SGMessageEventDissectorTrialClientWrapper: No assets found at trialEventExtractionAssetsPath: %{private}@ isDirectory: %@
SGMessageEventDissectorTrialClientWrapper: trialEventClassifierModelPath is nil, bailing
SGMessageEventDissectorTrialClientWrapper: EventClassifierModelPath loaded with Trial %{private}@
SGMessageEventDissectorTrialClientWrapper: No assets found at trialEventClassifierModelPath: %{private}@ isDirectory: %@
SGMessageEventDissectorTrialClientWrapper: eventClassifierThreshold: %@
SGMessageEventDissectorTrialClientWrapper: messageProcessingLimit: %@
SGMessageEventDissectorTrialClientWrapper: rateLimitInterval: %@
SGURLPlugin: consumeRemindersContentWithContext: notes.length = %tu
SGURLPlugin ignoring item with nil unique identifier
SGURLPlugin: extracting URLs from attributes of %@
SGURLPlugin: %tu detections on %@
SGURLPlugin: deleting URLs from bundleId %@
SGURLPlugin failed to delete URLs from bundleId %@
SGMI SGSqlEntityStore+Saliency: The sortedSaliencyResults method do not currently use mailboxType
Exiting due to SQLite error: %s
Pre-warming suggestd
Starting dissection, len=%tu, ctx=%i
Ending dissection, len=%tu, ctx=%i
Starting ingest of %lu messages
Ending ingest of %lu messages
Database inconsistency; found key for event hash %@ but event is missing
SGDSuggestManager - Database inconsistency: Found key for reminder hash %@ but reminder is missing
Change history item: <type: %ld, identifier: %@>
Bucket matching deleted contact %@ removed from requestCache
Could not fetch CNChangeHistory due to: %@
CNChangeHistory truncated, clearing entire cache
Could not clear CNContactStore change history due to: %@
SGDSuggestManager failed to clear caches following an asset update: %@
clearing lastSuggestionsFromMessage cache due to settings change
SGDSuggestManager: contentAdmissionBlocklistDidChange: called with %tu bundles
SGDSuggestManager has no entity store and cannot continue
SGDSuggestionsManager going away now, bye!
Warming up suggestions...
Warmed up suggestions in %0.2f ms and found %i enrichments
Suggestions is already warmed up (as of %0.1f seconds ago)
clearCachesFully: %i
contactsFromContact: %@
contactsFromContactIdentifier: %@
Error from CNContactStore contactWithIdentifier: %@
contactsFromContactIdentifiers (%lu ids)
SGDSuggestManager-emailAddressIsSignificant:%@
contactFromRecordId: %@
cnContactMatchesForRecordIds (%lu ids)
storageContactFromRecordId: %@
SGDSuggestManager-contactMatchesWithFullTextSearch:%@ limitTo:%lu
SGDSuggestManager-contactMatchesWithMessagingPrefix:%@ limitTo:%lu
SGDSuggestManager-allContactsWithSnippets:%@ limitTo:%lu
SGDSuggestManager-suggestEventsStartingAt:%@ endingAt:%@ limitTo:%lu
eventFromRecordId: %@
SGDSuggestManager-suggestEventsStartingAt:%@ endingAt:%@ prefix:%@ limitTo:%lu
SGDSuggestManager-suggestEventsInFutureLimitTo:%lu
SGDSuggestManager-confirmReminderByRecordId: %@
SGDSuggestManager-confirmRealtimeReminder
SGDSuggestManager - Confirmation: Unable to retrieve reminder from the harvest store. Computing and storing hashes only.
SGDSuggestManager-rejectReminderByRecordId: %@
SGDSuggestManager-rejectRealtimeReminer
SGDSuggestManager - Rejection: Unable to retrieve reminder from the harvest store. Computing and storing hashes only.
SGDSuggestManager-alarmTriggeredForRecordId: %@
SuggestionsManager getting all Reminders
SuggestionsManager getting reminder title for content
SuggestionsManager logging user created reminder title
SuggestionsManager getting all Deliveries
Suggestions Cache hit: %@
Suggestions Cache hit
Suggestions Cache miss: %@
Suggestions Cache miss
Went from %d to %d suggestions after filtering out already acted-on suggestions
Skipping extracted event that has already passed.
NaturalLanguageEvent Found: Bumping TTL
SGDSuggestManager - For [SGEntity %{public}@], Found %d extracted event candidates.
More than one event found using alternative keys
EKEvent with the same externalIdentifier found, but eventIdentifier is nil.
More than one EKEvent with the same opaque key detected.
EKEvent with the same opaque key found, but eventIdentifier is nil.
EKEvent for cancellation found, but eventIdentifier is nil.
Suppressing update or view duplicate of EKEvent because eventIdentifier is nil.
Suppressing update or view duplicate of EKEvent because event status is canceled.
Newer EKEvent from Suggestions has been found. Showing the updated event insead of this one.
Suppressing NL event because it looks like a near-duplicate of a curated event.
Suppressing NL event because it looks like a duplicate of a recurring curated event.
Suppressing NL event because eventIdentifier is nil.
Suppressing event because we found more than 1 duplicate.
New realtime event
Duplicate realtime event
Update realtime event
Cancellation realtime event
Near duplicate realtime event
Returning %d realtime events.
Skipping event with nonnull suggestionInfo but null suggestionInfo.uniqueKey
EKEvent exact match with the same duplicate key found, but eventIdentifier is nil.
Entity is from inhuman sender
Contacts after filter, before realtiming, %@
Extracted Realtime contact details about the user and tried to show them in a banner: %@
Extracted a contact with a different handle to the sender: %@
Contact pre-aggregation: %@
Contact post-aggregation: %@
Contact: %@, interesting: %i
Error getting realtime contact for %@: %@
Realtime contacts: %@
SGDSuggestManager-contactMatchesByPhoneNumber
SGDSuggestManager-namesForDetail
SGDSuggestManager-contactsByEmailAddress
SGDSuggestManager-contactsBySocialProfile
SGDSuggestManager-messagesToRefreshWithCompletion
Loading messages to refresh.
SGDSuggestManager-updateMessages
SGDSuggestManager-reportMessagesFound
SGDSuggestManager-fullDownloadRequestBatch
SGDSuggestManager-resolveFullDownloadRequests
SGDSuggestManager-eventFromUniqueId: %@
dupKey: %@
eventFromUniqueId: %@ resulted in dupKey: %@ and event: %@
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Found no item references for event with unique id '%@'
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Found no container reference for event with unique id '%@'
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: %@
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Event was not found and no fallback URL provided.
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Could not get the entity type.
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Found e-mail for Event Found in Mail on device.
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Could not find e-mail for Event Found in Mail on device but did find fallback URL
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Could not find e-mail for Event Found in Mail on device or fallback URL.
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Found message for Event Found in Messages on device.
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Can't find a bundleId for entity type: '%lld'
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Could not find an installed bundle id.
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Could not create launch intent for event.
SGDSuggestManager-launchAppForSuggestedEventUsingLaunchInfo: Error creating application record: %@
SGDSuggestManager-launchAppForSuggestedEventUsingLaunchInfo: Error opening user activity: %@
SGDSuggestManager-confirmEvent: %@
SGDSuggestManager-confirmEventByRecordId: %@
SGDSuggestManager-rejectEvent: %@
SGDSuggestManager-rejectEventByRecordId: %@
SGDSuggestManager - deleteEventByRecordId: event Id: (%{public}@)
SGDSuggestManager-confirmContact: %@
While confirming/rejecting contact detail, failed to load detail for record id: %@
While confirming/rejecting contact detail, requested detail not in loaded contract for record id: %@
Confirming details as workaround for Contacts search for contact %@
While confirming/rejecting contact, provided recordId was not contactId: %@ %@
SGDSuggestManager-confirmRecord: %@ %td
SGDSuggestManager-rejectRecord: %@ %td
SGDSuggestManager-confirmContactDetailRecord: %@ %td
SGDSuggestManager-rejectContactDetailRecord: %@ %td
SGMISaliencyInference: %@
Suggestions received value %@ for feature setting %ld. Processing of the information not implemented yet.
Suggestions received feedback %@ for NSData %{sensitive}@.
FollowUpFeedback: NSData %{sensitive}@ for warning %{sensitive}@
Suggestions received feedback %@ for StringFromFollowUpWarning %{sensitive}@.
FollowUpFeedback: for StringFromFollowUpWarning %{sensitive}@ for warning %{sensitive}@
SGDSuggestManager: addSearchableItemMetadata: failed to deserialize item data.
SGDSuggestManager: addSearchableItemMetadata: %@ is eligible for harvesting.
SGDSuggestManager: addSearchableItemMetadata: %@ is NOT eligible for harvesting.
SGDSuggestManager addInteractions: bundleId: %{public}@
SGDSuggestManager addInteractions: Can't add 0 interaction from bundleId: %@
SGDSuggestManager addInteractions: Got %i interactions from nil bundleId! Ignoring.
SGDSuggestManager: _harvestPeopleFromInteractions: harvesting from %@ %@
Interaction from %@ rejected. Display name is very likely a phone-number or email address.
SGDSuggestManager: _harvestPeopleFromInteractions: harevsted %tu entities
Buffered interactions when block was scheduled: %tu, now: %tu
Processing all buffered interactions
Waiting for more interactions to be donated before processing.
SGDSuggestManager addInteractions: Encountered INInteraction with nil identifier.
SGDSuggestManager addInteractions: Didn't find any enrichment after dissection of the INInteraction (%{public}@).
Plugins finished purging %lu items from bundle: %@
SGDSuggestManager: Plugins finished deleting %lu items from bundle: %@
SGDSuggestManager: deleting spotlight references: %@ : %@
Plugins finished deleting %lu domains from bundle: %@
Plugins finished deleting bundle: %@
SGDSuggestManager-schemaOrgToEvents
isEventCandidateForURL: %{sensitive}@ -title: %{sensitive}@
SGSuggestionsService isEventCandidateForURL: method called with nil arguments
SGSuggestionsService isEventCandidateForURL: Based on whitelist check, URL is candidate
SGSuggestionsService isEventCandidateForURL: eventCandidate is nil, domain appears not to be whitelisted.
SGDSuggestManager isEventCandidateForURL: Checking classifier output for webpage
SGDSuggestManager-isEventCandidateForURL: %{sensitive}@ -title: %{sensitive}@
SGDSuggestManager isEventCandidateForURL: end processing because detectStructuredEvents is OFF.
SGDSuggestManager suggestionsFromURL - Start processing webpage
SGDSuggestManager-suggestionsFromURL: %{sensitive}@ -title: %{sensitive}@ -HTMLPayload length: %lu 
suggestionsFromURL ignoring item since Safari is disallowed by user's settings
SGDSuggestManager suggestionsFromURL: parent entity has %lu enrichment(s) after dissection
Parents entity has %lu enrichements
Failed to process event suggestion 
 "Show Siri Suggestions" disabled in Calendar.
Failed to process event suggestion 
 you must acknowledge "What's new in Calendar" screen in the Calendar app.
Geocode modified locations, updating enrichment
realtimeSuggestionsFromURL ignoring item since Safari is disallowed by user's settings
SGDSuggestManager-waitForEventWithIdentifier: %@ -toAppearInEventStoreWithLastModificationDate: %@
#logUnknownContactInformationShownCount names for detail %@: %lu
Caching event from with external identifer = %@.
Event found for Spotlight interaction, but not from Suggestions.
Not logging event interaction for bogus uniqueKey: %@
Not logging event interaction for uniqueKey with bad serialization: %@
Attempting to retrieve entity from harvestStore for uniqueKey = %@
Couldn't find Entity with uniqueKey = %@
Entity is not a pseudo event
exiting due to daemonExitWithCompletion request
SGDSuggestManager: Dropping all aggregated contacts
SGDSuggestManager: Dropping aggregated contact for conversation: %@
SGDSuggestManager-ipsosMessagesFromSearchableItems
SGDSuggestManager-recentURLsWithLimit:%u called
SGDSuggestManager-recentURLsWithLimit returning %tu URLs
SGDSuggestManager-urlsFoundBetweenStartDate:%@ endDate:%@ excludingBundleIdentifiers:%@ containingSubstring:%@ flagFilter:%d limit:%u called
SGDSuggestManager-urlsFoundBetweenStartDate:endDate:excludingBundleIdentifiers:containingSubstring:flagFilter:limit returning %tu URLs
SGDSuggestManager-registerURLFeedback:%d url.length:%tu called
SGDSuggestManager-registerURLFeedback returning %d
SGDSuggestManager: Mail: suggestionsFromSearchableItem: %@ : %@ options: %tu
SGDSuggestManager: Mail: suggestionsFromSearchableItem was called with an invalid item
suggestionsFromSearchableItem ignoring item since the bundle is disallowed by user's settings
SGDSuggestManager: Mail: harvestedSuggestionsFromSearchableItem: %@ : %@ options: %tu
harvestedSuggestionsFromSearchableItem ignoring item since the bundle is disallowed by user's settings
SGDSuggestManager: Mail: suggestionsFromEmailContent: %@ options: %tu
SGDSuggestManager: Mail: suggestionsFromSimpleMailMessage: %@ : %@ options: %tu
SGDSuggestManager: Messages: harvestedSuggestionsFromMessage: %@ : %@ options: %tu
harvestedSuggestionsFromMessage ignoring item since the bundle is disallowed by user's settings
SGDSuggestManager: Messages: harvestedSuggestionsFromMessage (deprecated): %@ : %@ options: %tu
SGDSuggestManager: Messages: harvestedSuggestionsFromMessages: %tu messages (options %tu)
harvestedSuggestionsFromMessages ignoring item since the bundle is disallowed by user's settings
harvestedSuggestionsFromMessages called with no inputs
SGDSuggestManager: harvestedSuggestionsFromMessages: Suggesting reminder with recordId: %@
SGSuggestManager-foundInStringForRecordId:%@ style:%u called
No entity found for recordId: %@
Entity %{public}@ -> SGStorageReminder %{public}@
SGDSuggestManager-foundInStringForRecordId: unable to format contact name.
SGDSuggestManager-foundInStringForRecordId: error when fetching contact: %@
SGDSuggestManager: deleteDataDerivedFromContentMatchingRequest
SGDSuggestManager: consumeMailContentWithContext
SGDSuggestManager: consumeMessagesContentWithContext
SGDSuggestManager: consumeInteractionWithContext: %@
Error constructing data detector for featurizing: %@
SGMIDailyActivity Starting Task #1 for Signature Stats logging: -[SGMIFeatureStore warningStatsForLogging:]
SGMIDailyActivity Signature Stats logging do not have enough new data point to submit new logs.
DailyTasks.LogSignature
SGMIDailyActivity will not run signature stats logging (logWarningSignatureStats is disabled)
SGMIDailyActivity Starting Task NicknameMappingLookup
DailyTasks.NicknameMappingLookup
SGMIDailyActivity: Mail saliency detection is off. Will not proceed with daily activity tasks.
SGMIDailyActivity Starting Task #1: SGMISubmodelsManager checkForAndProcessVersionChange
DailyTasks.ModelVersionChange
SGMIDailyActivity Finished Task #1: SGMISubmodelsManager checkForAndProcessVersionChange
SGMIDailyActivity Starting Task #2: SGMISubmodelsManager incrementalSubmodelUpdate
DailyTasks.SubmodelUpdate
SGMIDailyActivity Finished Task #2: SGMISubmodelsManager incrementalSubmodelUpdate
SGMIDailyActivity Starting Task #3: SGMISubmodelsManager pruneDB
DailyTasks.PruneSubmodels
SGMIDailyActivity Finished Task #3: SGMISubmodelsManager pruneDB
SGMIDailyActivity Starting Task #4: Logging
DailyTasks.LogMetrics
SGMIDailyActivity Finished Task #4: Logging
SGMIDailyActivity Starting Task #5: Performing DB maintenance
 enableTelemetry=YES 
DailyTasks.PerformDBMaintenance
SGMIDailyActivity Finished Task #5: Performing DB maintenance
SGStructuredEventExtractionModel: No input or output mapping
Preparing Structured Event model inference
SGStructuredEventExtractionModel: Model initialization failed
Model input feature construction failed.
Model inference failed: %@
Model inference done in %f
Unable to convert to instantiate SGExtractionModelCoreMLFeatureWrapper
SGStructuredEventExtractionModel: Loading model from trial override at path: %@
Unable to load model from URL: %@
SGStructuredEventExtractionModel: No configuration loaded
SGStructuredEventExtractionModel: Unable to get URL for Gazetteer
SGPOSTagger: Unable to create gazetteer %@
Prefilter tree stack overflow
Prefilter tree stack underflow
Registering for MobileAsset metadata download with CTS
CoreSuggestionsModelAssets metadata download success? %d
CoreSuggestionsAssets metadata download success? %d
CoreSuggestionsAssets metadata download - marking activity as done
registering _registerForCollectWeeklyStats
Can not harvest items until first unlock. Waiting for later.
Pruning entities more than a year old
NOT pruning entities more than a year old, due to preference setting.
Vacuuming the database
Registering for identity analysis with CTS
Registering for RTC log sending with CTS
Deferring sending of RTC Logs
Registering for contact detail cache rebuilding with CTS
Deferring CD cache rebuild
Registering for pending-geocode processing with CTS
Deferring remaining geocodes for later
Invalid state transition to DEFER
Registering for pending-verification processing with CTS
SGDManagerForCTS _performProcessPendingVerificationActivity: Starting CTS job for document verification.
SGDManagerForCTS _performProcessPendingVerificationActivity: Deferring CTS document verification for [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: Could not defer CTS document verification for [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: Entity pending source verificaiton did not have an email entity key. [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: Entity pending source verificaiton did not have a message ID. [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: Starting CTS document verification for [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: Successfully verified DKIM signature. [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: DKIM verification resulted in permanent failure: %@. [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: DKIM verification resulted in temporary failure for 2nd time. Treating as permanent failure: %@. [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: Could not obtain a lock for document verification.
Registering for mail event aggregation processing with CTS
SGDManagerForCTS _performMailIntelligenceTasksActivity: Activity running even though Class A protected data is unavailable
SGDManagerForCTS _performMailIntelligenceTasksActivity: Starting CTS job for Mail Intelligence Tasks
Mail Intelligence Task deferred by CTS
Mail Intelligence Task interrupted by device lock state change
[HarvestedURLMetric] Registering for harvested URL metrics upload task with CTS
[HarvestedURLMetric] Can not access entity store. Waiting for later.
[HarvestedURLMetric] Performing harvested URL metric upload CTS job.
[HarvestedURLMetric] Got %tu URL(s) in the store.
[HarvestedURLMetric] Deferring for later right after getting URLs
[HarvestedURLMetric] Deferring for later while enumerating URLs
[HarvestedURLMetric] payload: %@
[HarvestedURLMetric] Done with harvested URL metric upload CTS job.
Tombstone exists for queued item; deleting.
Plugins finished CSSI processing via CTS: %@
Plugins finished async CSSI processing via CTS: %@
Dissector pipeline ignoring %@
text message CSSI %@ has no authors
text message CSSI %@ has no accountIdentifier
Unhandled CSSI %@ from %@ in -[SGDManagerForCTS processSearchableItem:pipeline:context:]
SGTextMessage %@ has been processed without dissection, so it will be dropped from the dissector pipeline.
SGSimpleMailMessage %@ appears to be a sent email not in the sent mail folder, so it will be dropped from the dissector pipeline.
SGSimpleMailMessage %@ has been processed without dissection, so it will be dropped from the dissector pipeline.
Ignoring attachments because a structured event already found
Found event
Failed to parse event from ics attachment.
Ignoring event with the request method in an ics attachment from a shared calendar provider.
Ignoring event that has the same UID as another event in the same ics attachment.
Skipping calendar attachment dissector: detectStructuredEvents is OFF
Message with %lu attachments (%lu downloaded ics)
Error when reading attachment at %@:
Error when instantiating ICSDocument for attachment at %@:
prefetched SGDCloudKitSync privacySalt (error: %@)
Preparing for queries
Error during %@ setup: %@
Sending processing of %@ %@ from %@ to plugin %@
Plugin reported error: %@: %@
Sending processing of interaction %@ from %@ to %@
Plugin %@ requesting historical data: %@
sending purge of %lu items from %@ to plugin %@
sending deletion of %lu items from %@ to plugin %@
sending deletion of %lu domains from %@ to plugin %@
sending deletion of bundle %@ to plugin %@
Refreshing due to account change: %@
Filtering account change that we don't care about: %@
Failed to fetch CalDAV accounts: %@
Calendar accounts updated: %@
SGRemindersAdapter: Not adding reminder that has dueDate in the past
SGRemindersAdapter: PseudoReminder found in Found in Apps list, not adding
SGRemindersAdapter: Duplicate found in user defined list, not adding
SGRemindersAdapter: Adding Reminder with recordId: %@
Reminder is not a valid new one, already exists in SGSuggestHistory
SGRemindersAdapter: Confirming reminder
SGRemindersAdapter: Rejecting reminder
SGRemindersAdapter: alarm triggered from this device
SGRemindersAdapter: Not removing reminder since it's an allDay reminder
SGRemindersAdapter: Confirming reminder from other device
SGRemindersAdapter: Rejecting reminder from other device
SGRemindersAdapter: Removing pseudo reminder because of parent deletion
Multiple reminders linked to one storage reminder
Didn't find any REMReminders to reject
Unable to retrieve found in apps list: %@
Unable to load RemindersFoundInApps list
Unable to serialize ReminderMetadata: %@
Saving Reminder with universal link: %@
Unable to save reminder in ReminderKit error: %@
Unable to delete reminder in ReminderKit error: %@
Unable to load metadata from reminder with id: %@ error: %@
SGRemindersAdapter: Duplicate reminder found based on exact title match
SGRemindersAdapter: Duplicate reminder found based on dueDate and edit distance of title
SGRemindersAdapter - [SGStorageReminder (%{public}@)] constructNotesForReminder: Unable to fetch contact: %{public}@
SGMISaliencyInference: Mail %@ is a sent mail
SGMISaliencyInference: Error - config shouldn't be nil when inferencing saliency
SGMISaliencyInference: No submodels for message ID: %@
SGMISaliencyInference: rule based inference for message ID: %@
SGMISaliencyInference: Performing saliency inference for e-mail message.
Self-id: Skipping - outgoing message
Self-id: Not-a-known-name "%@" word in candidate "%@"
Self-id: Found NO name to extract from candidate "%@"
Self-id: Extracted name "%@" from candidate "%@"
Self-id: Extracted partial name "%@" from candidate "%@"
Self-id: looking for pattern match in: "%@"
Message-Id header not found. Using hash: %@
Skipping setAuthor: detectContacts is OFF
Unknown SGMessage subclass
Ignoring invalid email: %s
Tagging as inhuman: Body
Tagging as human: Headers
Suppressing cloud sync. This should happen in testing only.
SGSuggestHistory is a no-op with kvs == nil!
Something went wrong with trying to synchronize icloud store
Empty or corrupt resetInfo
Pushing confirmed events set with %i items
Pushing confirmed events without timestamp set with %i items
Pushing rejected events set with %i items
Pushing confirmed reminders set with %i items
Pushing rejected reminders set with %i items
Pushing confirmed event fields set with %i items
Pushing confirmed event without timestamp fields set with %i items
Pushing contacts set with %i items
Pushing storage details set with %i items
Pushing do-not-update set with %i items
Pushing reset info (generation %lu, timestamp %.1f)
SGCK newSaltFuture failed to immediately complete. Will use classic hashes.
SGCK newSaltFuture completed immediately
SGCK Error retrieving salt for hashing (will use classic hashes): %@
SGCK Manatee salt not supported -- falling back to classic hashes
SGCK will use modern hashes
SGCK modernHashesForClassicHashes was passed a hash that is already modern
Resetting suggestions history
Suggestions history synced data change, reason=%i
Resetting history due to a KVS reset event within %g sec time window.
Suppressing KVS history reset because time window has expired.
SGSuggestHistory - Receive updated confirmed event hashes (%{public}lu total, %{public}lu new)
SGSuggestHistory - Receive updated rejected event hashes (%{public}lu total, %{public}lu new)
SGSuggestHistory - Receive updated confirmed event field hashes (%{public}lu total)
SGSuggestHistory - Receive updated confirmed event field without timestamp hashes (%{public}lu total)
SGSuggestHistory - Receive updated confirmed reminder hashes (%{public}lu total, %{public}lu new)
SGSuggestHistory - Receive updated rejected reminder hashes (%{public}lu total %lu new)
Receive updated contact hashes (%lu total)
Receive updated storage detail hashes (%lu total)
Receive updated don't-update hashes (%lu total)
KVS account change
Exceeded iCloud key value storage quota. Can't store any more acted on suggestions.
Confirming or rejecting record for contact %@
Confirming or rejecting contact %@
Rejecting contact %@
Don't know how to deal with this realtime contact state (state = %i)
Confirming event %@
Confirming storage event %@
Rejecting event %@
Rejecting storage event %@
Confirming reminder with opaqueKey %@
Rejecting reminder with opaqueKey %@
Argument must be of type SGRealtimeContact or SGRealtimeEvent, but was %@
Error opening file %@ at base path: %@
Lossy conversion. Detected charset: %ld (expected: %ld)
Found %i DD sigs for same person. Using sig %i with %i subresults
Error initializing SGMIAttachmentSizeHistogram with numberArray: %@
Got nil name
Follow Up. [analyzeFeatureVector] Analyze Feature Vector with messageId %@. Feature Vector: %{sensitive}@
Follow Up. [analyzeFeatureVector] Storing Detection Stats for Warning  %{sensitive}@
Follow Up. [_analyzeFeatureVector] Analyze Feature Vector for messageId %@. Feature Vector: %{sensitive}@ with CustomRange %@
Follow Up. [_analyzeFeatureVector] SGMIWarningsConfig loaded: %@
Follow Up. [_analyzeFeatureVector] Aborting computation. Language %@, Config %@, Body %{sensitive}@, RegExpDictionary %@
Follow Up. [_analyzeFeatureVector][RegEx loop] Checking for a match in RegEx: %@
Follow Up. [_analyzeFeatureVector] Match found: %{sensitive}@
Follow Up. [_analyzeFeatureVector] Match valid: %{sensitive}@
Follow Up. [_analyzeFeatureVector] Looking for a potential time reference in: %{sensitive}@
Follow Up. [_analyzeFeatureVector] Exploring Data Detector matches.
Follow Up. [_analyzeFeatureVector] Exploration Data Detector matches finished. Warning start date %{sensitive}@
Follow Up. [_analyzeFeatureVector] Exploring Data Detector Mapped Additions matches.
Follow Up. [_analyzeFeatureVector] Exploration Data Detector Mapped Additions matches finished. Warning start date %{sensitive}@
Follow Up. [_analyzeFeatureVector] Exploring Data Detector Additions matches.
Follow Up. [_analyzeFeatureVector] Exploration Data Detector Additions matches finished. Warning start date %{sensitive}@
Follow Up. [_analyzeFeatureVector] Warning not raised, as one of the following is nil. isNil_snippet: %@, isNil_signature: %@, isNil_detectedLanguage: %@, isNil_startDate: %@
Follow Up. [_analyzeFeatureVector] Exiting the method. Warning found %{sensitive}@
Follow Up. [_analyzeFeatureVector] followUpTimeRangeForDebugging was set in defaults settings. Overriding the custom time range for warning %{sensitive}@
Follow Up. [identifyFollowUpWarningFromSubject:content:] Computing warning for subject: %{sensitive}@ body:%{sensitive}@
Follow Up. [identifyFollowUpWarningFromSubject:body:] Computing warning for subject: %{sensitive}@ body:%{sensitive}@
SGMIFollowUpManager: Mail Intelligence's SPI back end timed out
SGMIFollowUpManager: Mail Intelligence's SPI back took over 5 seconds on a %tu-lengthed content: we have to xpc_transaction_exit_clean
Follow Up. [analyzeForFollowUpMailWithBody:isSent:messageId:date] Can't initialize mailDictionary: nil object. body: %{sensitive}@, isNil_body: %@, messageId: %@, date: %@
Follow Up. [analyzeOutgoingMailFeatureVector] nil config. Follow Up processing aborted.
Follow Up. [analyzeOutgoingMailFeatureVector] detectedLanguage: %@ regExLanguage %@ regexes loaded: %@
[Follow Up] CustomTimeRange behavior specified in asset overriden by default setting. Value: %@
SGMI received %@ feedback for follow up warning
[Follow Up] Engagement type %ld received is not supported.
Unable to load plplist content for %@: %@
Unable to resolve path: %@
Unable to create input MLMultiArray: %@
inputDictFromTaggedCharacterRanges: '' not present for inputSection: %@
featureDimensionForInputSection: Model doesn't have description for inputSection: %@
SGExtractioNModel: Unable to find URL for model
Unable to map output to label
Found no Lemma input when trying to extend output label to sequence length.
SGExtractionModel: Couldn't delete model file: %@
Sqlite error while rebuilding identity tables: %@
Can't create interdicts for blob of size %lu; skipping.
Merge group containing %lu names exceeds limit of %lu; skipping interdict construction.
Merge group mapping to %lu CNContacts exceeds limit of %lu; skipping interdict construction.
Failed to encode mergeBlob: %@
Starting identity blob analysis.
Blob analysis complete.
Blob analysis deferring.
Could not defer blob analysis.
Loading pattern plist, path: %@
Loading pattern pldat, path: %@
Loading pattern data from path "%@"
Reinstating death for %i objects
Pausing death for %i objects
Range {%tu, %tu} out of bounds; string length: %tu
Quick responses: No likely language prediction for conversation
Quick responses: Text message has no conversation identifier
Quick responses: processing is disabled for group messages
Quick responses: response message is much too long for labeling or DP reporting
Quick responses: processing requires at least two text messages
Quick responses: No model available for language: %@
Quick responses: processing requires the prompt and reply to have a single sender handle
Quick responses: processing requires the reply to be to a different person's prompt
Quick responses: processing requires the prompt and the reply to have text content
Quick responses: processing requires the prompt to be no more than %lu characters in length
Quick responses: using dynamic label with unique identifier %@
Quick responses: not keeping response message because it is greater than %lu characters in length
Quick responses: labeler failed to offer positive or negative label in language %@
Quick responses: dropping sample with label %@
Quick responses: keeping sample with label %@
Quick responses: not adding session for training - localTraining %d, spotlightReference %d, vector %d, sessionDescriptor %d, version: %@
SGMISaliencyModelConfig: Could not process rule set; name array from Trial is nil.
SGMISaliencyModelConfig: Could not process rule set; lower bounds array from Trial is nil.
SGMISaliencyModelConfig: Could not process rule set; upper bounds array from Trial is nil.
SGMISaliencyModelConfig: Could not process rule set; outputs array from Trial is nil.
SGMISaliencyModelConfig: Inconsistent array sizes in Trial asset.
SGMISaliencyModelConfig: Unexpected feature %@
SGMISaliencyModelConfig: Error in processing outstanding saliency rules.
SGMISaliencyModelConfig: Error, mean for feature standardization is nil.
SGMISaliencyModelConfig: Error in processing ground truth estimation rules.
SGMISaliencyModelConfig: Error, classification threshold is nil.
SGMISaliencyModelConfig: Error, minCountToConsiderATokenAsHighlyDiscriminant is nil.
SGMISaliencyModelConfig: Error, ratioToConsiderATokenAsHighlyDiscriminant is nil.
SGMISaliencyModelConfig: Error, minCountToConsiderATokenAsExtremelyDiscriminant is nil.
SGMISaliencyModelConfig: Error, ratioToConsiderATokenAsExtremelyDiscriminant is nil.
SGLowMemoryContactEnumeration got an error from Spotlight: %@
SGLexicon: Unable to load lexicon, %@
SGLexicon: non utf-8 token passed
Could not load nicknames from %@: %@
Unexpected object returned from Contact Store: %@ Retrieved From %@
SGContactsInterface: CNPhoneNumber initWithStringValue returned nil
Unsupported handleType: %@
Error enumerating contacts: %@
Expecting NSString for airportName but found something else: %@. Asset version = %lu
No airports found in common
Could not get airport code for airport "%@" from flights %@ on carrier %@ because they do not have at least 1 airport in common
Skipping levenshtein for airport "%@" flights %@ on carrier %@ because they have exactly one airport in common: %@
Failed to load model chunk file resource %s
Model loaded.
Failed to locate assets resource %s
Loading model {entity: %s, type: %s, language: %s, version: %tu, path: %s}
Invalid model string: %s
Unknown model class: %s
Unknown model name: %s
More than one prediction model specified for objective %lu, language: %@, models: %@
Failed to load model (objective: %lu, langauge: %@, name: %@)
No prediction model specified for objective %lu, language: %@
Error listing contents of directory %@: %@
Could not unlink %@ while rotating: errno=%i
Rotating bloom filters
Could not move %@ to %@: errno=%i
Could not unlink %@: errno=%i
Could not open Bloom filter file. errno = %i
Could not mmap Bloom filter file. errno = %i
Quick responses: A conversation must have more than 2 messages for a prompt; returning prompt as nil
Quick responses: Most recent message is not a response to a prompt
Error decoding null message.textContent in %@:
Could not open %@: errno=%i: %s
Could not fstat %@: errno=%i: %s
Could not write to journal file %@: errno=%i: %s
Could not read from journal file %@: errno=%i: %s
Journal file has invalid magic number: expected 0x%x, got 0x%x: %@
Journal file truncated: %@
Journal file checksum mismatch: %@: %u / %u
Could not remove %@: errno=%i: %s
SGReminderExtractionModel: Loading model from trial override at path: %@
No inputTokenMapping found
No output configuration found.
Preparing model inference
Model initialization failed
Unable to load model features.
Attempt to read stored logs
Corrupted persistent logging store! Removing corrupted store.
Exception we're not catching
New logging store
SGRTCLogging going away now
RTCLogging: usageMaps: %@, (%@ Maps launch in past 2 weeks)
RTCLogging: usageCalendar: %@, (%@ Calendar events found)
RTCLogging: log and increment interaction key: %@, for eventKey: %@
RTCLogging: can't find eventKey in loggedInteractionsSummary dictionary
RTCLogging: log new interaction summary: %@
RTCLogging: log new interaction: %@
RTCLogging: log extraction (%@) to RTC for templateName: %@ timingProcessing: %llu
RTCLogging: log extraction from Message Event Dissector (%@) to RTC for templateName: %@ timingProcessing: %llu
RTCLogging: entity can't be found
RTCLogging: entity.duplicateKey.entityKey serialization failed
RTCLogging: logging interaction to RTC for interactionKey: %@, eventKey: %@
RTCLogging: Sending privacy-aware suggestions log over the network
RTCLogging: No RTC logs to send this time. Skipping.
RTCLogging: Selected logs (%lu): %@
RTCLogging: No RTC backends found, no logs will be sent at this time.
RTCLogging: Aborting sending of logs as shouldContinueBlock returned NO
RTCLogging: Unable to send logs: %@
RTCLogging: Unable to send logs for storeAge: %@
RTCLogging: Unable to flush logs
Couldn't create the privacy-aware store for Suggestions.
Persisting some logs to disk!
failed to store reimport request: %@: %@
failed to mark reimport request %llu as queried: %@
failed to mark reimport request %llu as executed: %@
failed to mark %tu reimport items for %@ as seen: %@
failed to mark reimport item %@/%@ as seen: %@
failed to update reimport uniqueId item from %@ to %@: %@
failed to load unqueried reimport requests: %@
failed to load unseen reimport items for request: %llu: %@
failed to delete reimport requests older than: %@: %@
failed to delete completed reimport requests: %@
failed to delete orphaned reimport items: %@
error during reimportRequestDBStats query of reimportRequests: %@
error during reimportRequestDBStats query of reimportItems: %@
Already registered for activities
Checking in for activity %s
Stub activity called for %s
Activity "%s" has not registered with the system yet. Returning nil.
Ignoring CTS criteria change as it didn't change.
Setting CTS criteria for activity: %@, criteria: %@
_actuallyAddEvents bailing due to nil weakStore
Got error %@ while fetching unique identifiers for mail message ids %@
Error while writing %tu enrichment appends to %@ protection class: %@
Timed out waiting for spotlight to write enrichment appends
JSON decode error loading schemas: %@
SGReverseTemplateJS: Received %@ notification.
SGReverseTemplateJS: Queuing request to free JS context.
SGReverseTemplateJS: Asset version = %lu
SGReverseTemplateJS: List of loaded JS files in context = %@
SGReverseTemplateJS: suppressed process memory warning %lu times
Javascript execution timed out! Backtrace:
SGReverseTemplateJS: initialized JS context.
SGReverseTemplateJS: freeing JS context.
SGReverseTemplateJS: loading %@ in JS context.
JS log: %@
%{public}@
Can't get flightInformation, airlineCode is nil
Can't get flightInformation, flightNumber is nil
Can't get flightInformation, flightDate is nil
Can't get flightInformation, could not parse flightDate
SGReverseTemplateJS: completed initialization of JS context.
Could not load data asset %@: %@
SGReverseTemplateJS flightInformationWithAirlineCode: Can't get flightInformation, airlineCode is nil
SGReverseTemplateJS flightInformationWithAirlineCode: Can't get flightInformation, flightNumber is nil
SGReverseTemplateJS flightInformationWithAirlineCode: Can't get flightInformation, flightDate is nil
SGReverseTemplateJS flightInformationWithAirlineCode: Can't get flightInformation, flightDate is malformed
SGReverseTemplateJS flightInformationWithAirlineCode: bundleIdentifier is undefined.
flightInformationWithAirlineCode flightInformationWithAirlineCode: error when calling CoreParsec for: %@, %@, %@ = %@
SGReverseTemplateJS flightInformationWithAirlineCode: CoreParsec results for: %@, %@, %@ = %@
SGReverseTemplateJS loadJSFromASCIIFile: no file defined.
SGReverseTemplateJS loadJSFromASCIIFile: Error loading JS file %@: %@
Tried to call shouldDownloadFull without JS assets
Called shouldDownloadFull with result = %d
JS exception during shouldDownloadFull: %@.
SGReverseTemplateJS: Calling js for event classification
Tried to call eventClassificationForEntity without JS assets
SGReverseTemplateJS: Called eventClassificationForEntity with result: %@
SGReverseTemplateJS _eventClassificationForEntity: JS Exception during eventClassificationForEntity: %@
SGReverseTemplateJS: Calling JS to resolve candidates
Tried to call resolveCandidatesForJSDict without JS assets
SGReverseTemplateJS: Called resolveCandidatesForJSDict with result: %@
SGReverseTemplateJS: JS Exception during resolveCandidatesForJSDict: %@
SGReverseTemplateJS: Calling JS to get privacy aware logging
Tried to call getPrivacyAwareMlLogs without JS assets
SGReverseTemplateJS: Called getPrivacyAwareMlLogs with result: %@
SGReverseTemplateJS: JS Exception during getPrivacyAwareMlLogs: %@
SGReverseTemplateJS: Calling JS to get flight references and reservation id given text message
Tried to call getFlightReferencesAndReservationId without JS assets
SGReverseTemplateJS: Called getFlightReferencesAndReservationId with result: %@
SGReverseTemplateJS: JS Exception during getFlightReferencesAndReservationId: %@
SGReverseTemplateJS: Calling JS to diff schemas
Tried to call diffSchemas without JS assets
SGReverseTemplateJS: Called diffSchemasArrays with result: %@
SGReverseTemplateJS _diffSchemas: JS Exception during diffSchemasArrays: %@
SGReverseTemplateJS: Calling JS to merge schemas
Tried to call mergeSchemas without JS assets
SGReverseTemplateJS: Called mergeSchemasArrays with result: %@
SGReverseTemplateJS _mergeSchemas: JS Exception during mergeSchemasArrays: %@
SGReverseTemplateJS: Tried to call reverseMapEntity without JS assets
SGReverseTemplateJS: Unable to convert JS taggedCharacterRange to Objective-C
SGReverseTemplateJS: JS Exception during reverseMapEntity %@
SGReverseTemplateJS payloadToOutputWithEntryPoint: Tried to call messageToOutput without JS assets
SGReverseTemplateJS: Calling payloadToOutput with entry point: %@
SGReverseTemplateJS payloadToOutputWithEntryPoint: JS exception during messageToOutput: %@
Loading master domains whitelist from path = %@
Received asset update notification. Now loading master domains whitelist from path = %@
SGDomainWhitelistChecker payloadForDomain: trie is nil.
SGDomainWhitelistChecker payloadWithStartChar: trie is nil.
SGDomainWhitelistChecker isStructuredEventCandidateForEmailDomain: trie is nil.
SGStructuredEventTrialClientWrapper: Updating factors
SGStructuredEventTrialClientWrapper: Unable to load plplist for %@ : %@
SGStructuredEventTrialClientWrapper: Unable to load plplist content for %@: %@
SGStructuredEventTrialClientWrapper: TRILevel is nil for foundInMailNotifications
SGStructuredEventTrialClientWrapper: supportedProviders list loaded with Trial: %@
SGStructuredEventTrialClientWrapper: engineConfig list loaded with Trial: %@
SGStructuredEventTrialClientWrapper: structuredEventInputMapping list loaded with Trial: %@
SGStructuredEventTrialClientWrapper: structuredEventOutputMapping list loaded with Trial: %@
SGStructuredEventTrialClientWrapper: foundInMailNotifications: %@
Unable to change SQLite lookaside configuration.
Could not install hasInhumanTag() sqlite function (rc = %i)
Could not install tagsHaveEscapedTag() sqlite function (rc = %i)
Could not install delimitedString() sqlite function (rc = %i)
Could not install firstStringAfterPrefix() sqlite function (rc = %i)
Sqlite could not install busy timeout. (rc = %i)
Sqlite could not install busy handler. (rc = %i)
unable to set auto_vacuum to INCREMENTAL: %@
Write statement should be run in a write transaction: %s
This query was delayed %0.2f ms waiting for db file locked by another sqlite connection: %s
This query was delayed %0.2f ms waiting for db file locked by another sqlite connection -- unknown SQL
failed to get page_count from db: %@. error: %@
failed to get freelist_count from db: %@. error: %@
Calculating pages to vacuum -- pageCount %tu freeCount %tu
not enough pages to vacuum: pageCount: %lu; freeCount: %lu
failed to get auto-vacuum mode from db: %@. error: %@
Will not vacuum db %@ due to device lock state
Called to vacuum %tu pages
failed to set auto_vacuum to INCREMENTAL for db: %@. error: %@
performing FULL VACUUM to make INCREMENTAL effected for db: %@
failed to vacuum db: %@. error: %@
performing INCREMENTAL VACUUM to free %lu pages with %@ iterations for db: %@
Performing incremental vacuum for %tu pages on iteration %d for total pages to free %tu
failed to incremental vacuum db: %@. error: %@
We have a vacuum activity %@ with activity state %@ after %@ batches
We got back that we should defer the vacuuming activity after %@ iterations and having vacuumed %@ pages with deferral success %@
SGStructuredEventDissector: No sender for mailMessage, bailing
SGStructuredEventDissector: extractionSupported: %@, shadowExtraction: %@, pflTraining: %@
SGStructuredEventDissector: Skipping reverse template dissector: detectStructuredEventsML is OFF and provider is not in whitelist
SGStructuredEventDissector: ignoring email
SGStructuredEventDissector: Entity has no content
SGStructuredEventDissector: Previous dissector found event, bailing
SGStructuredEventDissector: skipping shadowLogging extraction for realtime dissection
SGStructuredEventDissector: eventClassification is nil, bailing
SGStructuredEventDissector: Not classified as event, bailing
SGStructuredEventDissector eventClassification: %@
SGStructuredEventDissector: Preprocessed document is nil
SGStructuredEventDissector: Empty enrichedTaggedCharacterRanges
SGStructuredEventDissector: Event found, adding shadow log
SGStructuredEventDissector: Event found, adding ML log and enrichment
Failed to convert object to JSON: %@
SGStructuredEventDissector: Added enrichment
SGStructuredEventDissector: Missing entities for restaurant extraction: %@
SGStructuredEventDissector: Missing entities for hotel extraction: %@
SGStructuredEventDissector: Missing entities for ticket extraction: %@
SGStructuredEventDissector: Missing entities for car extraction: %@
SGStructuredEventDissector: Missing entities for movie extraction: %@
SGStructuredEventDissector: nil domParserResult
SGStructuredEventDissector: no extraction model inferences.
SGStructuredEventDissector: No name for missing entity
SGStructuredEventDissector: annotateContent: empty content or string passed
SGStructuredEventDissector: annotateContent: nil label passed
SGStructuredEventDissector: annotateContent: Unable to create taggedCharacterRange from result
SGScales: %@ took %f seconds
Retrieved location with latitude and longitude both 0
Retrieved location has one valid and one NaN coodinate
Pruning entities older than %0.2f
Pruning mail intelligence data older than one year
Pruning duplicate event entities from web-pages/interactions
web-page event entity exists on calendar, don't delete: %@
entities to delete %@
Pruning duplicate Event entities: %{public}lu
PseudoReminders to prune (%lu), %@
Pruning NL Events older than %f
NL Event entities to delete (%lu) %@
Deleting Mail Intelligence data for %lu messages
SGRealtimeContactConfidenceFeatureVec: <
  contacts with phone number matches: %i
  contacts with name matches: %i
  contact with both phone and name matches: %i
  Phone number matches an existing contact: %s
  Name matches an existing contact: %s
  Email matches an existing contact: %s
  IM Address matches an existing contact: %s
  Existing contact has address: %s
  Address match with existing contact, if both have addrs: %0.3f
  New phone numbers: %i
  New emails: %i
  New IM addresses: %i
  New addresses: %i
  Length of name: %i
  Name has at-sign: %s
SGInhumanityFeatureVec: <
  Has one or more inhuman-looking headers: %s
  Author email address looks inhuman: %s
  Author name looks inhuman: %s
  Body of email contains inhuman phrase: %s
  Domain is a template sender: %s
SGDetectionNotabilityFeatureVec: <
  Is phone number: %s
  Is address: %s
  In HMM-detected sig: %s
  In DD sig: %s
  How far down the email was this found?: %0.3f
  Phone numbers in sig: %i
  Phone numbers in email: %i
  Addresses in sig: %i
  Addresses in email: %i
SGMISaliencyModel: Loading CoreML model.
SGMISaliencyModel: Loading model from Trial at path: %@
SGMISaliencyModel: Error converting model path to file URL
SGMISaliencyModel: Invalid model path specifeid via Trial configuration.
SGMISaliencyModel: Error while initializing MLModel: %@
SGMISaliencyModel: Finished loading CoreML model.
SGMISaliencyModel: Unable to load SGMISaliencyModelConfig defaultConfig
Error - Couldn't get default saliency model when trying to run inference.
Error while preparing feature vector for mlmodel: dimension mismatch, expecting %@ got %lu
SGMISaliencyModel: Error while initializing MLMultiArray for SGMISaliencyModel inference: %@
SGMISaliencyModel: Error while running SGMISaliencyModel inference: %@
SGMISaliencyModel: Error while parsing SGMISaliencyModel inference.
Given a putative e-mail address with no @
Given a putative e-mail address with no @: %@
Processing event with eventName: %@
failed to load snippet data for entity: %@
Unable to calculate stats from entity table: %@
Unable to count merged pseudocontacts: %@
Unable to calculate stats from serializedContacts table: %@
Unable to count entity_fts: %@
Unable to count details in entity_fts: %@
Unable to count snippets: %@
Unable to count snippets with titles: %@
Unable to count snippets with content: %@
Unable to count tombstones: %@
Unable to count orphaned entities: %@
Unable to dump stats: %@
GroupID lookup found unexpected entity type for contact detail (%@)
registering cache precomputation work with CTS
SGSqlEntityStore cache precomputation due to CTS
serializing contacts due to CTS
Finished updating serialized contacts in %0.3f seconds
pre-calculating CN to SG contact matches due to CTS
all async jobs for cache precomputation are done
dbStats returned nil during reportDbStats
reported db stats to AggD
Failed to report dbStats to AggD: %@
SGDOMParser: Error parsing tcr tags from js
SGGDOMParser: Unable to load WKWebConfiguration
SGDOMParser: datastore is nil
SGDOMParser: Unable to load WebView
SGDOMParser: Loaded HTML Document
SGDOMParser: Nil path for HTMLPreprocessor from asset
SGDOMParser: jsContent nil: %@
Error evaluating JS: %@
_SGDCloudKitSyncPersistedState got invalid class name in property: %@
SGCK Persisted state changed (keyPath: %@, change: %@, self: %@)
SGCK Disabling due to incompatible version
SGCK Operation queue suspended
SGCK Will suspend operation queue for delay: %f
SGCK Resuming operation queue
SGCK Suspending sync due to unsynced keychain: %@
SGCK Resuming sync after suspension due to unsynced keychain
SGCK Delaying for %@ seconds (error: %@)
SGCK CloudKit framework recommends retry without delay for error: %@
SGCK addDeleteZoneOperation - Skipping because of out of date software
SGCK addDeleteZoneOperation - Returning operation already in flight
SGCK addDeleteZoneOperation - Adding new operation to operation queue
SGCK addDeleteZoneOperation - Operation completed with error: %@
SGCK addDeleteZoneOperation - Operation completed successfully
SGCK addDeleteZoneAttemptOperationWithRetries:%lu
SGCK Ran out of retries for delete zone operation with network failure: %@
SGCK Unrecoverable error for delete zone operation: %@
SGCK addCreateZoneOperation - Skipping because of out of date software
SGCK addCreateZoneOperation - Returning operation already in flight
SGCK addCreateZoneOperation - Adding new operation to operation queue
SGCK addCreateZoneOperation - Operation completed with error: %@
SGCK addCreateZoneOperation - Operation completed successfully
SGCK addCreateZoneAttemptOperationWithRetries:%lu
SGCK addCreateZoneAttemptOperationWithRetries:%lu - SUCCESS (zone created or already exists)
SGCK got PCS user identity unknown error while creating zone. Running processStateChanges just to be sure we didn't miss anything.
SGCK aborting create zone because out of retries for retry-able error: %@
SGCK Unrecoverable error for create zone operation: %@
SGCK addManateeSanityCheckOperation - Skipping because of out of date software
SGCK Creating Manatee health check operation...
SGCK Manatee health check returned without errors
SGCK Operation error during Manatee sanity check: %@
SGCK Missing Manatee identity detected during sanity check. Deleting-and-then-re-creating zone... (record zone error: %@)
SGCK addProcureSaltOperation - Skipping because of out of date software
SGCK addProcureSaltOperation - Returning operation already in flight
SGCK addProcureSaltOperation - Adding new operation to operation queue
SGCK addProcureSaltOperation - Operation completed with error: %@
SGCK addProcureSaltOperation - Operation completed successfully
SGCK addProcureSaltAttemptOperationWithRetries:%lu
SGCK Will recreate zone and try to procure salt again (error: %@)
SGCK Using existing salt record found on server
SGCK Zone missing while procuring salt: %@
SGCK Will attempt to create zone and then try procuring salt again
SGCK Unrecoverable error while procuring salt: %@
SGCK Successfully procured Manatee salt with atomic reference name %@
SGCK procuredSaltRecord missing critical fields (se=%@, a=%@)! This should not be possible and no recovery path is implemented. CloudKit writes will fail.
SGCK addFetchNewEntitiesOperation - Skipping because of out of date software
SGCK addFetchNewEntitiesOperation - Deferring because not ready for new entities.
SGCK addFetchNewEntitiesOperation - Returning operation already in flight, changing value of _requestedFetchNewEntitiesWhileRequestAlreadyInFlight from %@ to YES
SGCK addFetchNewEntitiesOperation - Adding new operation to operation queue
SGCK addFetchNewEntitiesOperation - Operation completed
SGCK addFetchNewEntitiesAttemptOperationWithRetries:%lu
SGCK ignoring fetched new entities because we are not in a sync enabled state
SGCK ignoring record zone completion block because we are not in a sync enabled state
SGCK Storage was not ready. Will sync again when it's purportedly available.
SGCK Giving up on fetching new changes because out of retries for error: %@
SGCK Change token expired (error: %@)
SGCK Will try fetching again without change token
SGCK Giving up on fetching changes due to unrecoverable error %@
SGCK Fetching more entities from server for these reasons: [%@] Server indicated more entities are coming, [%@] Client was asked again to fetch more entities while this request was already in-flight
SGCK Finished requesting more entities from server.
SGCK addWriteOperationForRecordGetter - Skipping because of out of date software
SGCK Failing to write entity due to unrecoverable error: %@
SGCK Adding and waiting for zone creation before writing entity.
SGCK Adding and waiting for salt procurement before writing entity.
SGCK Will write entity records: %@, delete entity records: %@, retries remaining: %lu
SGCK Will recreate zone and salt and try to write record again (error: %@)
SGCK Zone missing while trying to write or delete record. Setting _noZone flag.
SGCK Retrying after zone missing error
SGCK Not retrying because there is nothing to write.
SGCK Salt atomic reference check failed while trying to write record. Calling failSalt.
SGCK Retrying after salt missing reference error.
SGCK Will wait for in-progress procure salt operation before writing or deleting an entity
SGCK Will wait for in-progress create zone operation before writing or deleting an entity
SGCK Instantiating +[SGCK sharedInstance]
SGCK Running configuration block via +[SGCK sharedInstance] (the configuration block was specified prior to sharedInstance being called for the first time)
SGCK Configuration block has completed from within +[SGCK sharedInstance]'s first invocation. Setting the block to nil.
SGCK No configuration block has been specified before the first invocation of +[SGCK sharedInstance]. If a configuration block is set later on, it will be run immediately.
SGCK Setting configuration block...
SGCK The shared instance already exists, so the configuration block will run immediately.
SGCK Done running the completion block immediately from +[SGCK setSharedInstanceConfigurationBlock:]
SGCK The shared instance doesn't exist yet, so the configuration block won't run until it's instantiated.
SGCK Will add CK operation to queue: %@
SGCK added %lu operations to queue (pending operation count: %lu)
SGCK Existing persisted state was saved but could not be deserialized.
SGCK No persisted state exists for this user.
SGCK Creating new persisted state.
SGCK Discarding non-manatee salt
SGCK Already processing state changes -- will re-process again once complete.
SGCK Already processing state changes and re-processing once complete already scheduled as well.
SGCK Re-processing state changes because a request came in while this one was in progress...
SGCK processStateChanges -- failing salt because !supportsDeviceToDeviceEncryption
SGCK System State Change: Sync %@ --> %@
SGCK About to invoke _deleteAllSyncedItemsCallback from background queue...
SGCK Finished invoking _deleteAllSyncedItemsCallback on background queue. Now hopping back onto _queue...
SGCK Entering sgckQueueBlock.
SGCK deleteAllSyncedItemsSucceeded == YES
SGCK deleteAllSyncedItemsSucceeded == NO. Will defer a processStateChanges.
SGCK About to hop on to background queue to invoke _deleteAllSyncedItemsCallback
SGCK Skipping background queue block because _readyForNewEntities is false.
SGCK Creating subscription in response to state change
SGCK Will fetch new entities in response to state change
SGCK Set new persisted state.
SGCK accountChanged:%@
SGCK accountChanged: - existing future is complete. Setting to nil.
SGCK accountChanged: - existing future is in-flight. Creating a new request...
SGCK accountInfo - returning existing SGFuture
SGCK accountInfo - completionHandler - %@, %@
SGCK accountInfo - completionHandler - received error and/or failed to get account info: %@, %@
SGCK accountInfo - completionHandler - completing future
SGCK accountInfo - completionHandler - ignoring result because a newer request is in flight
SGCK accountInfo - Scheduling call to CloudKit (already one in flight: %@)
SGCK accountInfo - Calling CloudKit (-[CKContainer accountInfoWithCompletionHandler:])
SGCK should remove events from EK because there is no primary iCloud Calendar account
SGCK Going to request account info to determine whether events should be removed from EK...
SGCK Received account info, decision on whether to remove events from EK: %@ (error: %@)
SGCK Got APS environment string: %@ (error: %@, container: %@)
SGCK Error when getting preferred push env. Defaulting to prod instead. Error: %@
SGCK Going to create subscription (retries: %lu)
SGCK Setting hasSubscription persisted flag because new subscription was created successfully
SGCK Setting hasSubscription persisted flag because duplicate subscription already exists on server. This should only happen after a suggest_tool reset.
SGCK Error while attempting to create subscription: %@
SGCK Will re-attempt subscription creation
SGCK Got database: %@, container: %@
SGCK device does not have a subscription. Checking eligibility before creating one...
SGCK Device is eligible. Creating subscription via setDatabase: path...
SGCK actually creating subscription via setDatabase path...
SGCK setDatabase: not going to create subscription because something else created it...
SGCK backfill via setDatabase: path...
SGCK device account (or lack thereof) is not eligible -- not creating subscription
SGCK APS (APNS) Environment: %@
SGCK Error getting APS environment string -- APNS will not work!: %@
CloudKit database %@ has nil container, therefore cannot get APS environment strong and APNS will not work.
SGCK Handling primary iCloud Calendar account change (%@ --> %@)
SGCK addEntity:%@ %@
SGCK addEntity: - ignoring because groupId is nil
SGCK Not adding entity to CloudKit because current state prohibits syncing
Begin: Transmitting Calendar Event
End: Transmitting Calendar Event
SGCK deleteGroupId:%@
SGCK deleteGroupId: passed nil groupId...returning...
SGCK Not deleting entity from CloudKit because current state prohibits syncing
Begin: Transmitting Confirm/Reject Of Calendar Event
End: Transmitting Confirm/Reject Of Calendar Event
SGCK setReadyForNewEntities:%@
SGCK ignoring because readyForNewEntities == _readyForNewEntities
SGCK processing deferred state changes...
SGCK no deferred state changes
SGCK processing deferred sync...
SGCK no deferred sync
SGCK deleteStorageEvent failed because no group id
SGCK privacySalt ensuring not already on _queue...
SGCK privacySalt immediately returning empty NSData because [SGPreferenceStorage useManateeSaltForHistory] is false
SGCK privacySalt about to dispatch_sync to _queue
SGCK privacySalt is now on _queue
SGCK privacySalt reusing existing future
SGCK privacySalt is resolving to empty data because CKErrorIncompatibleVersion was previously encountered, indicating that the server no longer supports syncing with this software version
SGCK privacySalt about to wait on accountInfoFuture
SGCK privacySalt finished waiting on accountInfoFuture
SGCK privacySalt error retrieving account info: %@
SGCK privacySalt resolving to empty data because iCloud account is restricted (parental controls, etc)
SGCK privacySalt resolving to empty data because there is no iCloud account
SGCK privacySalt resolving to empty data because device-to-device encryption is not supported
SGCK privacySalt succeeded (using existing known salt)
SGCK privacySalt will procure new salt
SGCK privacySalt succeeded (using newly procured salt)
SGCK privacySalt tried to procure salt, but salt is nil even though self->_procureSaltError is also nil
SGCK privacySalt tried to procure salt, but an error occurred: %@
SGCK privacySalt future did not complete synchronously; will store future in _privacySaltFuture for reuse
SGCK privacySalt future asynchronously completed, will set _privacySaltFuture to nil
SGCK privacySalt outcome: %@ result, %@ error
SGCK connection:%@ didReceiveToken:%@ forTopic:%@ identifier:%@
SGCK connection:%@ didReceivePublicToken:%@
SGCK connection:%@ didReceiveIncomingMessage:%@
SGCK Got an APNS notification, but not syncing because sync is currently disabled.
SGCK Will fetch new entities for incoming message
SGCK connection:%@ didSendOutgoingMessage:%@
SGCK connection:%@ didFailToSendOutgoingMessage:%@ error:%@
SGCK connection:%@ didChangeConnectedStatus:%@
SGCK connectionDidReconnect:%@
SGCK confirmEventFromThisDevice
SGCK confirmEventFromOtherDevice [IGNORED]
SGCK rejectEventFromThisDevice
SGCK rejectEventFromOtherDevice [IGNORED]
Could not register for CNContactStore change history due to: %@
Could not unregister from CNContactStore change history due to: %@
Could not open chat length estimator at %@: %s (errno %i)
Could not mmap chat length estimator file at %@: %s (errno %i)
Chat length estimator reached max size. Clearing.
Error accessing boolValue. numberValue is nil
Error accessing floatValue. numberValue is nil
Error accessing doubleValue. numberValue is nil
Error accessing intValue. numberValue is nil
Error accessing integerValue. numberValue is nil
SGCK Skipping unsupported CloudKit record (record created by version: %@, version required to process record: %@, version running on this device: %@)
SGCK Reading pre-Manatee CloudKit record.
SGCK Error: Record version higher than 3 did not contain parent entity type.
SGCK Error: Record with type interaction is missing interaction info.
SGCK Error: Record with type interaction is missing interaction bundle id.
SGCK Error: Record contained unsupported entity type %lld
SGCK error decoding schema.org plist: %@
SGCK Error decoding schema.org plist: %@
SGCK Error decoding metadata plist: %@
SGCK Error serializing schema.org to plist: %@
SGCK error converting schema.org to plist.
SGCK Error serializing event metadata to plist: %@
SGCK Error converting event metadata to plist.
SGCK Reservation item reference value was nil for interaction entity
SGContactSharingModel - Invalid model config for path: %@
SGContactSharingModel - Could not find transformer instance for language: %@
SGContactSharing Model - Could not initialize featurizer and sessionDescriptor from config.
contact.significance property is true. skipping all other check.
Contact is significant: Found in bloom filter (email)
Contact is significant: Found in bloom filter (phone)
Sender isn't in bloom filter, checking recents
Contact is significant: Found in recents
Contact is significant - VIP email address
Contact is not significant
Contact is not significant, but selecting anyway due to preference setting
Contact is significant: Update to curated contact
Realtime contact is not significant, but selecting anyway due to preference setting
Email Address is significant: Found in bloom filter
Email Address is significant: Found in recents
Email Address is not significant
Handle is significant: Found in bloom filter
Handle is significant: Found in recents
Handle is not significant
Looking up in custom tester function instead of actually hitting recents
Unable to search recents; error: %@
Email was not found in recents
Found email in recents
SGTokenDistanceMappingTransformer: index=%lu, count=%lu
SGDSuggestManager: Mail: Asked for suggestions for a searchable item without headers dictionary or source, returning 0 suggestions
SGDSuggestManager: Mail: Not providing suggestions for searchable item that is spam.
SGDSuggestManager: Mail: Skipping suggestions for searchable item that is in trash.
SGDSuggestManager: Messages: suggestionsFromMessage: %@ : %@ options: %tu completionDelivery: %tu
suggestionsFromMessage ignoring item since the bundle is disallowed by user's settings
suggestionsFromMessage ignoring item since the domainIdentifier (conversationIdentifier) is nil
suggestionsFromMessage ignoring item since the textContent is nil
suggestionsFromMessage consolidating repeated item with previous request
SGDSuggestManager+RealtimeDonations: error donating message to ProactiveHarvesting: %@
SGDSuggestManager: Messages: _suggestionsFromMessage: Got message with no authors. Ignoring.
SGDSuggestManager: Messages: _suggestionsFromMessage: Got message with no domainIdentifier (conversationIdentifier). Ignoring.
SGDSuggestManager: Messages: _suggestionsFromMessage: Got message with no content protection type defined. Will not dissect..
SGDSuggestManager: realtimeSuggestionsForMailOrMessageWithHash: %@ : %@
Existing valid dissection found in store.
Existing dissection found in store, but HTML does not match.
Entity not harvested, but I was told not to dissect.
SGDSuggestManager: starting dissection.
Plugins finished processing message: %@
Timed out waiting for async realtime harvest work
SGDSuggestManager - Getting realtime events for dissected entity [SGEntity %{public}@]
  -> Event [SGEvent %{public}@] in state %i
    -> %@
Found %i realtime events
Getting realtime contacts for dissected entity
Found %i realtime contacts
Entity %@ -> SGReminder %@
SGDSuggestManager: validating cached results
filtering out suggestion that has already been acted on according to history
filtering out suggestion for business chat text
SGSuggestManager validateResultsvalidateResults: DKIM verification resulted in failure: %@
SGSuggestManager validateResultsvalidateResults: Successfully verified DKIM signature.
SGDSuggestManager: realtimeSuggestionsForMailOrMessageWithHash: %@: results: %@
SGDSuggestManager: Filtering out previously engaged reminder
SGDSuggestManager: Filtering out duplicate reminder
SGDSuggestManager: Filtering past Reminder
SGMessageEventDissector: Skipping Message Event dissector: allowMessageEventDissector is OFF
SGMessageEventDissector: Skipping Message: Message is not classified as %@ type by the Event-Classifier.
SGMessageEventDissector: Skipping Message: Exceeded Rate Limit
SGMessageEventDissector: Message is potential event message, dissecting to extract events
SGMessageEventDissector: Unable to fetch Event Extraction Assets from TRIAL, bailing
SGMessageEventDissector: Unable to fetch events from MLRuntime, bailing
SGMessageEventDissector: Unable to find MA path for EventClassifier model
SGMessageEventDissector: EventClassifier Model Path: %{private}@
SGMessageEventDissector: Unable to find MA path for MLEventExtractionAssets
SGMessageEventDissector: MLEventExtractionAssets Path: %{private}@
SGMessageEventDissector: Adding Enrichment: %@ to entity:%@
SGMessageEventDissector: Could not extract event deatils from event dictionary: %@ for entity: %@
SGMessageEventDissector: Fetching events from ML Runtime Plugin com.apple.eventMetaDataExtractor.eventMetaDataExtractorPlugin eventExtractionAssetsPath: %{private}@
SGMessageEventDissector: MLRuntime Plugin Task failed with error:  %@
SGMessageEventDissector: MLRuntime Plugin task timeout
SGMessageEventDissector: ML Runtime failed to return events information, bailing
SGMessageEventDissector: Using fallback schema for generic event for category: %@
SGMessageEventDissector: Missing entities for message event extraction: %@
SGMessageEventDissector: Unable to load Event Classifier Model. Model Path does not exist
SGMessageEventDissector: Unable to load Event Classifier Model: %@
SGMessageEventDissector: Unable to convert ML Model to NL Model: %@
SGMessageEventDissector: No name for missing entity
SGMessageEventDissector: airlineCode or flightNumber or departureDateTime not found, bailing
SGMessageEventDissector: No flight information found, bailing
SGMessageEventDissector: No flight information for departure date:%{private}@ & departureLocation:%{private}@ found, bailing
SGMessageEventDissector: Message classification by Event-Classifier: %@ (Score: %.02f)
SGCoalescingDropbox %s unable to extend transaction TTL.
Failed to construct DDScanner: %@
SGDataDetectors: data detection: %@
Failed to decode socialProfileData: %@
Attempt to write entity to DB returned entityId 0
Skipping event pending geocode.
Attempt to write enrichment to DB returned enrichmentId 0
Skipping non-event enrichment
Number of event entities to journal: %lu
Writing Entity: %@
invalid serialization found in _prunePseudoContactGeneratingEmails: %@
nil key found in emailMetadata
Removing pendingVerification flag from %@
Error removing pendingVerification flag from %@: %@
Writing %lu event entities to journal. [SGEvent (%{public}@)]
Writing reminder to journal
Trying to write multiple reminders to journal, this is not supported
Writing event to journal
Writing contact to journal
While writing blobs, unexpected missing entity ids
Expected the new mergedContact record Id %@ to be %@:
Writing identity blobs
IdentityStore: Writing deletes for %@
IdentityStore: Newly created contacts %@
IdentityStore: Forced update of contacts %@
HMM confused, too many tokens in signature
HMM confused, too much quoting in signature
Skipping signature dissector: detectContacts is OFF
Signature found by DataDetectors.
Signature found by alternative algorithms.
Sig range %lu-%lu (%@)
No signature found
Tagging as inhuman after adjusting range: Signature pattern
Ignoring signature after adjusting range: Inhuman pattern.
Can't meaningfully call shouldIgnoreSignature with a signature that starts after the content.
Can't meaningfully call shouldIgnoreSignature on an entity with no detected signature.
Tagging as inhuman: Signature pattern
Ignoring signature: Inhuman pattern.
Ignoring signature: Valediction after signature.
Ignoring signature: Recipient's name (composite).
Ignoring signature: Recipient's name (first last).
Ignoring signature: Recipient's name (last first).
Ignoring signature: Recipient's phone.
Ignoring signature: Recipient's postal.
Ignoring signature: Recipient's email.
Ignoring signature: Sender's name unavailable.
Ignoring signature: No sender's name or email.
Ignoring signature: Anti pattern.
Ignoring signature: Sender's name after sig.
Not ignoring signature.
Could not fetch filesystem path for HMM
Could not load HMM data: %@
Failed to insert serialized contact: %@
Failed to insert serialized contact placeholder: %@
Failed to delete serialized contact: %@
Unexpected error while deserializing contact: %lld
Unexpected error while deserializing contact%lldld
Failed to load all serialized contacts: %@
Writing placeholder for contact id: %lli
Could not defer activity
serialized contact precomputation deferring
done serializing new contacts
done trimming serialized contacts
SGUnarchiver: unable to open non-file URL %@.
SGUnarchiver: unable to open file %@ - %{public}s.
SGUnarchiver: unable to close file descriptor %{public}d for %@ (leaking) - %{public}s.
SGUnarchiver: unable to close archive_read - %{public}s.
SGUnarchiver: unable to open archive_read - %{public}s.
SGUnarchiver: archive_read unable to set supported formats - %{public}s.
SGUnarchiver: archive_read unable to set supported compression formats - %{public}s.
SGUnarchiver: unable to free archive_read (leaking) - %{public}s.
SGUnarchiver: failed to create directory at %@ - %@.
SGUnarchiver: unable to resolve physical path for destination path %@ - %s.
SGUnarchiver: archive_read_next_header failed - %{public}s.
SGUnarchiver: archive_entry with no path encountered.
SGUnarchiver: archive_entry with absolute path encountered...ignoring leading %zu of %zu bytes.
SGUnarchiver: archive_entry with no path after sanitization encountered.
SGUnarchiver: archive_write_header failed - %{public}s.
SGUnarchiver: archive_write_finish_entry failed - %{public}s.
SGUnarchiver: unable to close archive_write_disk - %{public}s.
SGUnarchiver: unable to free archive_write_disk (leaking) - %{public}s.
SGUnarchiver: archive_write_disk unable to set lookup functions - %{public}s.
SGUnarchiver: archive_write_disk unable to set options - %{public}s.
SGUnarchiver: archive_read_data_block failed - %{public}s.
SGUnarchiver: archive_write_data_block failed - %{public}s.
SGReminderMessage: No VB in actionVerbIndexRange
SGReminderMessage: No NN, NNP in objectCoreIndexRange
SGReminderMessage: Title has too many characters
SGReminderMessage: No whitelisted action verb or particle actionVerbTokenIndexes
SGReminderTrialClientWrapper: Updating factors
SGReminderTrialClientWrapper: TRILevel is nil for confirmationOptional
SGReminderTrialClientWrapper: TRILevel is nil for triggerOptional
SGReminderTrialClientWrapper: TRILevel is nil for actionVerbOptional
SGReminderTrialClientWrapper: TRILevel is nil for messagesBannerLimit
SGReminderTrialClientWrapper: confirmationOptional: %@
SGReminderTrialClientWrapper: triggerOptional: %@
SGReminderTrialClientWrapper: actionVerbOptional: %@
SGReminderTrialClientWrapper: messagesBannerLimit: %@
SGReminderTrialClientWrapper: reminderOverrides list loaded with Trial: %@
SGReminderTrialClientWrapper: reminderEnrichments list loaded with Trial: %@
SGReminderTrialClientWrapper: reminderInputMapping list loaded with Trial: %@
SGReminderTrialClientWrapper: reminderOutputMapping list loaded with Trial: %@
empty string found in nickname data for: %@
dropping query token that cannot be encoded as utf-8 (utf-16 LE repr: %{private}@)
Could not load duplicate key with record id %@
Could not load event with record id %@
Unable to load entity from database
failed to load snippet data for email entity: %lld
Unable to load entity by recordId: %@
Failed to retrieve PMLTraining singleton
DataDetector is not a definitive match: Anti-pattern.
DataDetector is not a definitive match: Not in definitive phrase.
Ignoring DataDetector match: Too many phones in signature.
Ignoring DataDetector match: All-digit phone without label in signature.
Ignoring DataDetector match: Log line in signature.
Ignoring DataDetector match: Too many postal addresses in signature.
Ignoring DataDetector match: Inhuman email address in signature.
Ignoring DataDetector match: Email address with colon at end of line in signature.
Ignoring DataDetector match: Email address with date or time in line in signature.
Ignoring DataDetector match: Email address in signature is close match to List-Id header.
unifiedContactWithIdentifier failed to generate date for birthday.
unifiedContactWithIdentifier for %@ failed with error %@
No contact identifier for %@
Birthday: Text message has no conversation identifier
Birthday: Entity with type SGEntityTextMessage has invalid message date
Birthday: processing is disabled for group messages
RKAttributedTokenBirthdayType not found for message: %@
SGDetectedAttributeDissector: getResponsesForBirthdayExtractionFromMessage: text message has nil textContent: %@
No responses found for message: %@
Self-id: Text message has no conversation identifier
Self-id: processing is disabled for group messages
Self-id: processing is disabled for business chat
Self-id: No domain identifier found for message: %@
Self-id: ignoring message far in thread (position: %i >= %i)
Self-id: No likely language prediction for conversation
Self-id: text length too long
Start
Completed
SelfIdFeaturizations
Self-id: doesn't look for self id if message has a display name
Self-id: updating pseudo-contact entity with name length: %tu
Self-id: Could not find author-pseudocontact to augment with text message self-identification.
Unexpected Contact detail found in forwarded or inhuman text message: %@ %@
Skipping DetectedAttribute dissection: No author.
Skipping DetectedAttribute dissection: Inhuman sender.
Skipping DetectedAttribute dissection: warm up message.
Training quick responses.
Not training quick responses since conversation history is nil.
TrainQuickResponses
Skipping DetectedAttribute dissector: detectContacts is OFF
Detections: %@
Skipping DetectedAttribute dissection: too many phone numbers (%i, limit %i)
ContactSharingNegativeExample
Ignoring DataDetector match: Blocked phone number.
Ignoring DataDetector match: Quoted region.
Processing low quality phone number match for ML supervision and metrics; detections to be discarded.
Ignoring DataDetector match: Low quality phone number match.
Detected attribute (sig/*): '%@'
Detected attribute (body): '%@'
Detected attribute (ml): '%@'
ContactSharingPositiveExample
SGEspressoModel - Invalid model config: %@
SGEspressoModel - Could not initialize PMLMultiLabelEspressoClassifier: %@
SGEspressoModel - Invalid sessionDescriptor in config: %@
SGExtractionModelCoreMLWrapper: Inconsistent MLFeatureProvider passed
SGTrialClientWrapper: Unable to fetch experimentId, deploymentId, treatmentId
SGTrialClientWrapper: Unable to fetch rolloutIdentifiers
SGReminderTrialClientWrapper: Unzipping model override at path: %@
SGReminderTrialClientWrapper: unable to fetch origin path.
SGReminderTrialClientWrapper: Cannot move model to %@. Error %@
SGReminderTrialClientWrapper: Error while unzipping the model override.
SGReminderTrialClientWrapper: Model override is already in uncompressed at path: %@
SGReminderTrialClientWrapper: No file found at source path: %@
Unable to the source data from file URL: %@. (Error: %@)
SGReminderTrialClientWrapper: Couldn't delete model override file: %@
CNContact cache miss
Found %lu prematched contacts in CNContact cache
Encountered a NULL cnContactIdentifier in cnContactsToSgContacts
cnContactMatchesForRecordId received recordId from wrong table: %@
Popped CN2SG job: %@
CN2SG Over 100K unique rows in cnContactsToSgContactsCacheJobs -- will not enqueue a batch
Clearing entire CN2SG job queue
start updating CNContact matches
%lu contact matches found for %@
Failed to confirm Contact: %@
CN Contact precomputation deferring
done updating CNContact matches
Failed to enumerate CNContactStore: %@
Do/did we need a full CN to SG sync? %@
Will set full CN to SG sync completed.
CNChangeHistoryResult truncated: %d , %@
Performing full sync with CNContactStore
Performing delta sync with CNContactStore
Could not enumerate CNContactStore change history due to: %@
refreshSuggestionsContact begin coalescing drop box handler with %tu SGStorageContacts: %@
refreshSuggestionsContact timed out waiting for spotlight
refreshSuggestionsContact will enqueue CNContactIdentifier batch of size %tu (from %tu SGStorageContact's): %@
refreshSuggestionsContact end coalescing drop box handler
refreshSuggestionsContact added %@ storage contact %@
refreshSuggestionsContact running immediately due to large number (%tu) of enqueued items
refreshSuggestionsContact coalescing box size: %tu
SG2CN query for contact %@:
SG2CN found identifier: %@
SG2CN error: %@
SG2CN all found identifiers: %@
SGHarvestQueueMetrics
Suggestions entity store cannot be opened before first unlock
entity store is known to have a future schema. Giving up on store initialization.
Attempting to instantiate the shared default store
Attempting to instantiate the shared harvest store
failed to initialize database at path %@: %@
device locked during db initialization
Integrity check detected corrupt database, attempting to reinitialize.
unable to initialize entity DB
unable to initialize snippets DB
corruption marker is present, recreating db
entity store is migrating
entity store already migrated. Not migrating again.
Detected corrupt database, attempting to reinitialize.
unable to recreate entity DB
unable to recreate snippets DB
entity store did not try to migrate but a migration is needed
migrator found mismatched versions or is in an unrecoverable state, performing corruption recovery
Future db schema detected. Entity store cannot be initialized.
entity store could not migrate databases, bailing out.
entity store initialization flags: isEphemeral:%d executeJournals:%d noMigrate:%d
failed to initialize one or more databases/journals. We cannot continue.
store %@ going deallocating
entity store failed to recreate database during corruption recovery: %@
failed to remove corruption marker
Clearing caches in SGEntityStore
#NoDetailCache Removing other detail...
#NoDetailCache Adding other detail...
#NoDetailCache 10,001 items in _otherDetailsWithNoContact. Removing least recently accessed item...
#NoDetailCache Other detail found
#NoDetailCache Other detail not found
#NoDetailCache Clearing %lu other details
Getting e-mails pending verification
key in emailMetadata was nil
Could not create SGEmailKey for key %@
Error finding e-mails pending verification: %@
Found %lu e-mails pending verification
_enumerateContactsForMasterEntityIds aborting enumeration
Loaded %tu contacts
Got more than %lu results for query. Giving up.
Matched %lu contacts
rankSGContacts: target CNContact is missing required keys
Skipping match because it contains no suggestions: %@
After filtering, %lu contacts
Tried to get contacts with empty messaging prefix.
%lu contacts loaded
Got %llu FTS tokens, truncating to first %i
got out of bounds token range: %@ in UTF8 of size %tu
tokenizer size mismatch
something went wrong while getting tokenizer: %@
Could not parse createQuery %@
Matched %tu contacts
Error retrieving curated contacts: %@
suggestContactByRecordId received recordId from wrong table: %@
Failed to retrieve fieldValues from confirmedFieldValues
Loaded %lu suggested events from %f to %f (max %lu)
Returning %lu suggested events after filtering
Couldn't load event with given duplicate key
Couldn't confirm field values for duplicateKey not in entity table
Confirming details as workaround for Contacts search for realtime contact %@
Could not load event to confirm (recordId=%@)
Could not load event to reject (%@)
Invalid base64encoded string for tag %@
Nil serializedEntityKey found in entityTags
Corrupt database file moved to "%@".
Unable to move corrupt database file to "%@": %@
SGExtractionDissector: XPC error %@
The same origin and destination: %@ (template: %@, short %@)
SGExtractionDissector - groupId is empty. Unable to create Duplicate keys
Failed to process event suggestion 
 reservation start date components invalid.
Couldn't parse date: %@ (template: %@, short %@)
Invalid airport latitude or longitude. Asset version: %lu
Failed to process event suggestion 
 reservation end date in the past.
SGExtractionEntity entityForOutputItem: Event in the past, processing stopped.
Could not create tag from NSUserActivity %@
found forward or reply header in email
Skipping reverse template dissector: contentLen = %llu > %i
[SGPipelineEnrichment (%{public}@)] -> [SGEvent (%{public}@)]
SGPipelineEntity: Starting dissection of mail [SGSimpleMailMessage (%{public}@)], [SGPipelineEntity (%{public}@)]
SGExtractionDissector dissectMailMessage: Skipping reverse template dissector: detectStructuredEvents is OFF.
SGExtractionDissector dissectMailMessage: Not dissecting because ML extraction is on. [SGPipelineEntity (%{public}@)]
SGExtractionDissector dissectMailMessage: Ignoring email, forward or reply detected. [SGPipelineEntity (%{public}@)]
SGExtractionDissector dissectMailMessage: HTML content exceeding max length. [SGPipelineEntity (%{public}@)]
Found cached event classification for email %{public}@
SGExtractionDissector dissectMailMessage: Not extracting event(s) from e-mail because shouldDownloadFull returned false. [SGPipelineEntity (%{public}@)]
SGExtractionDissector dissectMailMessage: Email is not fully downloaded. Requesting full download. [SGPipelineEntity (%{public}@)]
Skipping reverse template dissector: detectStructuredEvents is OFF
SGExtractionDissector: Not dissecting because ML extraction is on
SGExtractionDissector: Starting dissection of interaction [INIteraction (%{public}@)], [SGPipelineEntity (%{public}@)]
SGExtractionDissector dissectInteraction: Skipping reverse template dissector: detectStructuredEvents is OFF
SGExtractionDissector dissectInteraction: Not dissecting because ML extraction is on
SGExtractionDissector dissectInteraction: Could not convert INInteraction (%@) to schema
JS Extraction Status: Template exception %{public}@, in template: %{public}@ (%{public}@). [SGPipelineEntity (%{public}@)]
JS OUTPUT for [SGPipelineEntity (%{public}@)]: %lu output(s). Asset version: %{public}@. Device locale: %{public}@. Document type: %{public}@. Contains schemaOrg?: %{public}@. Bundle ID: %{public}@
JS template match: %@ shortName:%@. [SGPipelineEntity (%{public}@)]
[SGEntity (%{public}@)] - Complete JS output: %@
[SGPipelineEntity (%{public}@)] -> [SGPipelineEnrichment (%{public}@)]
JS Extraction Status: Event. [SGPipelineEntity (%{public}@)]
JS outputItem for enrichment [SGPipelineEnrichment (%{public}@)]: LocationType: %@. Geocoding Mode: %@. isAllDay?: %@. Output Usecase: %@. Output Category: %@.
JS Extraction Status: Output Exception %@. [SGPipelineEntity (%{public}@)]
SGExtractionDissector: Starting dissection of webpage (%{private}@). [SGPipelineEntity (%{public}@)]
SGExtractionDissector dissectURL: Webpage processing stopped: HTML content exceeding max length. [SGPipelineEntity (%{public}@)]
SGExtractionDissector dissectURL: SGOutput is null. [SGPipelineEntity (%{public}@)]
SGExtractionDissector: no bundle identifier identified
SGExtractionDissector: no record found for bundle id %@:%@
Error loading model config during incremental submodel update
SGMISubmodelsManager: Updating Submodels
SGMISubmodelsManager is not allowed to run during the next %.0f seconds.
SGMISubmodelsManager received signal to not continue, stopping at day %lu of %lu
SGMISubmodelsManager processed %lu emails in this session (corresponding to %lu / %lu days) and should stop. Next training will be possible in %.0f seconds
SGMISubmodelsManager performed incremental update of %lu mails. Model had a precision of %.2f%% and a recall of %.2f%% on them.
SGMISubmodelsManager: Starting purge of deleted emails references
SGMLISubModelUpdater: Number of email addresses to validate: %lu
SGMISubmodelsManager: Failed to map email address feature %@ to MDIAttribute
SGMISubmodelsManager: Emails to delete for %@: %lu
SGMISubmodelsManager lost Spotlight connection (device got locked)
Purging deleted emails references took %f seconds
SGMISubmodelsManager: Clearing all tokens from submodel token store that haven't been since %@ or earlier
SGMISubmodelsManager: No prior model version data. Not processing as version change.
SGMISubmodelsManager: Current model version data is not set. Is OTA / Trial configuration for both inference and ground truth versions correct? Not processing as version change.
SGMISubmodelsManager: Ground truth model version updated from %@ to %@. Purging all stateful data.
SGMISubmodelsManager: Inference version updated from %@ to %@ without change in ground truth model version. Retaining submodels and setting all saliency scores to 0.
SGMISubmodelsManager: No version update to process.
SGMISubmodelsManager: Invalid min counts requirements in SGMISaliencyModelConfig.
SGMINicknameManager: Processing mails sent %tu days ago
SGMINicknameManager: A match got identified in a mail from ~%tu days ago: %{sensitive}@ -> %{sensitive}@.
SGMINicknameManager received signal to not continue after processing mails sent %tu days ago
No extraction for %d:%@ = %@
SGMIWarningsConfig: Invalid attachmentLinkDetectionRegex (%@).
SGMIWarningsConfig: Error, unable to get attachmentDetectionRegexes from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get attachmentLinkDetection from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get conservativeRecipientDetection from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get recipientConservativeDetectionRegexes from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get recipientDetectionRegexes from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get nicknameDetectionRegexes from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get followUpOnOutgoingMailsQuestionsDetectionRegexes from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get followUpOnOutgoingMailsAsksDetectionRegexes from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get followUpOnIncomingMailsDetectionRegexes from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get followUpWarningsParameters from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get bodyAnalysisSamplingFactor from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get defaultTimeIntervalToStartWarningExposition from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get defaultTimeIntervalForAWarning from SGMITrialClientWrapper.
Follow Up. [SGMIFeatureVector] emMessage %{sensitive}@ loaded for messageId %@.
Follow Up. [SGMIFeatureVector] searchableItem %@ loaded for messageId %@.
Error accessing the searchable item associated with messageId: %@
SGMIFeatureVector: PET logging skipped (hashed messageId)
Unexpectedly could not deserialize a serializedSocialProfile: %@
Scanning address string, expected to only find addresses, but found %@
SGAppLaunchHistory failed to fetch app launch history with error = %@
entity store notified of device lock state change to %d (es=%d, cs=%d)
SGMISpotlightUtility got signal to exit
SGMISpotlightUtility Query by time range timed out
SGMISpotlightUtility: Query by item timed out.
SGMISpotlightUtility: Found item count was %lu
SGMISpotlightUtility: Finding email addresses to delete
SGMISpotlightUtility got an error from Spotlight while querying existence as %@: %@
SGMISpotlightUtility: Query existence as %@ timed out.
SGMISpotlightUtility: Addresses found in Spotlight: %lu
SGMISpotlightUtility got an error from Spotlight: %@
SGURLDissector ignoring entity due to missing bundle id, unique id, or date
SGURLDissector(URLs) found URL of length %tu, from handle of length %tu, in: (%@, %@)
SGURLDissector(Text) found URL of length %tu, from handle of length %tu, in: (%@, %@)
urlsFromAttributes called with no URL attribute
SGURLDissector(Attributes) found URL of length %tu, from handle of length %tu, in: (%@, %@)
urlsFromAttributes failed to find colon and parenthesis in text
urlsFromAttributes found invalid ranges of colon and parenthesis
Tried to parse a Japanese name with no tokens? This shouldn't happen.
Tried to parse a jp/zh name with no tokens? This shouldn't happen.
Could not create tag from NSUserActivity '%@': %@
SGMIFeatureVectorCollator: message ID %@ was mapped via spotlight mapping table.
SGMIFeatureVectorCollator: message ID %@ was mapped with Biome stream.
SGMIFeatureVectorCollator: No mapping found, creating SGSimpleMailMessage with hashed message ID: %@
SGMIFeatureVectorCollator: Use the CSSI's repliedTo attribute to set the UserReplied feature, biome information was%@ available and UserReplied was%@ already set.
SGJournal-addEntry: Add event
SGJournal-addEntry: Add event batch (count=%lu)
SGJournal-addEntry: Cancel event
SGJournal-addEntry: Cancel event batch (count=%lu)
SGJournal-addEntry: Confirm event from this device
SGJournal-addEntry: Confirm event from other device
SGJournal-addEntry: Reject event from this device
SGJournal-addEntry: Reject event from other device
SGJournal-addEntry: Event parent deletion
SGJournal-addEntry: Not set
SGJournal-addEntry event non-nil, but unknown operation %u
SGJournal-addEntry: Add contact
SGJournal-addEntry: Confirm contact
SGJournal-addEntry: Reject contact
SGJournal-addEntry contact non-nil, but unknown operation %u
SGJournal-addEntry: Add reminder
SGJournal-addEntry: Confirm Reminder from this device
SGJournal-addEntry: Reject Reminder from this device
SGJournal-reminderAlarmTriggered: Reminder alarm triggered from this device
SGJournal-addEntry: Confirm reminder from other device
SGJournal-addEntry: Reject reminder from other device
SGJournal-addEntry: Reminder parent deletion
SGJournal-addEntry reminder non-nil, but unknown operation %u
SGJournal-addEntry: Suggested event calendar deleted
SGJournal-addEntry: Remove all stored pseudo-contacts
Setting a timer to reset DDNL caches in %f seconds
SGPipeline verificationOperation: DKIM verification resulted in temporary failure: %@. [SGPipelineEntity (%{public}@)]
SGPipeline verificationOperation: DKIM verification resulted in permanent failure: %@. [SGPipelineEntity (%{public}@)]
SGPipeline verificationOperation: Successfully verified DKIM signature. [SGPipelineEntity (%{public}@)]
SGPOSTagger: Most tags are SYM, likely missing LinguisticData
Attachment info length mismatch: %lu types, %lu names, %lu paths
Error getting file size from path: %@
Purging %tu unique identifiers from %@.
Deleting %tu unique identifiers from %@.
Deleting %tu domain identifiers from %@.
Deleting all Interactions from %@.
Deleting %tu Interactions from %@.
Deleting %tu group indentifiers for Interactions from %@.
SGDSpotlightReceiver: Received %tu items from %@.
SGDSpotlightReceiver: invalidated highlight cache and notified of refresh
ignoring items since the bundle is disallowed by user's settings
Decoded %tu of %tu items received from %@.
Will delete %tu encrypted items
Deleted %tu encrypted items
SGDSpotlightReceiver: _addSearchableItem: error donating to ProactiveHarvesting: %@
SGDSpotlightReceiver: addUserAction: error donating to ProactiveHarvesting: %@
received user action from %@
Plugins finished NSUA processing via CTS: %@
SGDSpotlightReceiver: purging %tu unique identifiers (%tu after de-duplication) for %@
SGDSpotlightReceiver: purgeSearchableItemsWithIdentifiers: error sending purge to ProactiveHarvesting: %@
SGDSpotlightReceiver: deleting %tu unique identifiers (%tu after de-duplication) for %@
SGDSpotlightReceiver: deleteSearchableItemsWithIdentifiers: error sending deletion to ProactiveHarvesting: %@
SGDSpotlightReceiver: deleting %tu domain identifiers (%tu after removing overlaps) for %@
SGDSpotlightReceiver: deleteSearchableItemsWithDomainIdentifiers: error sending deletion to ProactiveHarvesting: %@
SGDSpotlightReceiver: deleting entire bundle identifier %@
SGDSpotlightReceiver: deleteAllSearchableItemsWithBundleID: error sending deletion to ProactiveHarvesting: %@
SGDSpotlightReceiver: received %lu interactions from %@
SGDSpotlightReceiver: addInteractions: error donating to ProactiveHarvesting: %@
ignoring interactions since the bundle is disallowed by user's settings
Plugins finished processing interaction: %@
phoneNumberWithStringValue unexpectedly failed for string: %@
unifiedContactsMatchingPredicate failed with predicate %@ and error %@
Extracted pseudo-contact email address matches "me" contact: %@
Extracted pseudo-contact phone number matches "me" contact: %@
Extracted pseudo-contact postal address matches "me" contact: %@
Extracted pseudo-contact social profile matches "me" contact: %@
Filtered contact: %@
Extracted pseudo-contact matches "me" contact, Suggestion suppressed
Found %lu curated contacts for pseudo-contact
Failed to locate resource; tradition: %@, fname: %@, path: %@
failed to load trie for naming tradition; tradKey: %@
SGTokenizerMappingTransformer reloading NLTagger in response to new asset installation
Found related EKEvent by db lookup of related keys.
Found %lu events to bump TTL on for OpaqueKey: %@
Unable to save event in event store: %@
Unable to save event in event store; description: %@, error: %@
EKEventStore+Suggestions: bumped TTL for NL Event ZKW
Could not find %@ in message
migrator passed nil filename for entity db
migrator passed nil filename for snippets db
failed to clear snippets db
failed to clear entities db
sqlite_schema had a table with a NULL name
shadow table has nil table name in PRAGMA table_list
migrator for %@ running query: %@
SGDataMigrator encountered error during migration of %@: versions %lu & %lu, query: %@, error: %@
current user language: %@: %@
old user language: %@: %@
languageToUpdateEntityFTSTo returning: %@
failed to generate create query for new FTS table %@
creating new FTS table: %@: %@
failed to create new FTS table %@
failed to determine max docid
highest entity for FTS copy: %@: %llu
fts copy batch: %llu -> %llu
Copying from old FTS table from %lu to %lu
failed to insert from old fts table limit %lu offset %lu
failed to drop %@ in preparation for renaming
failed to rename %@ to %@
starting update of FTS table for language change: %@: %@
resuming copy of FTS data to new table
preparing to copy FTS data
updateLanguageForFTSTablesToLanguage got nil language but has no in-progress copy to restart
done with FTS copy, going to drop old table: %@
failed to drop old entity_fts after updating to new language
bootstrapping snippets migration
catching up snippets migration to %ld
failed to migrate snippets db to %ld
attempt to skip or repeat a migration
migrating entities to version %ld
failed to migrate entity db to %ld
migrating snippets to version %ld
migrating entities from zero to version %lu
failed to migrate entity db from zero to %lu
migrating snippets from zero to version %lu
failed to migrate snippets db from zero to %lu
migrating SGSqliteDatabase
Migrating %@ & %@
Future database version detected. Giving up on migration.
Encountered %@ database; dropping all data.
Encountered empty database (user_version == 0)
Failed to clear legacy database.
Unrecoverable db version mismatch %ld & %ld
database migration bailing out at version %lu due to device being locked.
Finalizing migration with a merge blob sync
about to check for language change for FTS tables: %@
detected need for FTS rebuild: %@: %@
done migrating: %@
unable to attach snippets in order to migrate content data
unable to copy email snippets during content migration
unable to copy non-email snippets during content migration
unable to erase content data from entities during content migration
unable to erase title data from email entities during content migration
needed to add author column but failed
needed to add entityParentage table but failed
needed to add serializedContacts table but failed
needed to add cnContactsToSgContacts table but failed
Unable to add downloadState column during legacy migration: %@
Unable to add entityDownloadStateIdx index during legacy migration: %@
Unable to add contentHash column during legacy migration: %@
Unable to add entityContentHashIdx index during legacy migration: %@
Unable to add groupId column during legacy migration: %@
Unable to add groupIdIdx index during legacy migration: %@
Unable to add duplicateKeyHash column during legacy migration: %@
Unable to add ix_entityTags_dupKeyHash index during legacy migration: %@
migration_RecreateFTSTableWithITS
migration_CreateFTSTableWithITS
Unable to create deduplicated identityPhones table: %@
Unable to clear identityPhones table during deduplication: %@
Unable to rewrite identityPhones table during deduplication: %@
Unable to remove identityPhones table during deduplication: %@
Could not install hashHexToBlob() sqlite function
Unable to set blob value in migration query: %@: Error: %@
Unable to delete messaging terms with semicolons. Error: %@
Unable to clear masterEntityIds from migration_FixupMergeGroups: %@
Unable to copy entities into emailMetadata: %@
Unable to deparent source documents found in entityParentage: %@
Unable to delete source documents from entity table: %@
Unable to populate source document tags: %@
Unable to populate source document snippets in emailSnippets: %@
Unable to delete source document snippets from legacy table: %@
Error selecting source document ids from emailMetadata: %@
starting rebuildFTSWithDetailEntityIDDocIDs
Erroring trying to reinsert FTS row: %@
Error during rebuildFTSWithDetailEntityIDDocIDs: %@
rebuildFTSWithDetailEntityIDDocIDs: failed. Moving old table back.
rebuildFTSWithDetailEntityIDDocIDs: success. Deleting backup table.
failed to drop backup table: entity_fts_docidfix_backup: %@
discarding ill-formatted serialized interaction key
Error during migration_deleteInteractions: %@
unable to detach snippets after trying to migrate content data
SGMailIntelligenceDissector: Mail saliency inference is off
SGMailIntelligenceDissector: a nil message ID, skipping
Dissector.SocialConnectionScore
SGMailIntelligenceDissector: computed sender connection score of %f
Dissector.SaliencyScore
SGMailIntelligenceDissector: Searching for contact matching provided e-mail address.
SGMailIntelligenceDissector: Could not map e-mail address to contact.
SGMailIntelligenceDissector: No interactions with contact found.
SGMailIntelligenceDissector: Fuzzy contact match succeeded.
CandidateNameRange not in plainTextContent: %@ %tu %tu
SGDetectedAttributeML - Failed to load transformer instance for language: %@, %lu
SGDetectedAttributeML: failed to generate vector.
SGDetectedAttributeML - failed to get training descriptor.
Couldn't find uniqueIdentifier %@ in conversation -- aborting detectionFromEntity
Target message (uniqueIdentifier=%@) not the last in conversation -- aborting detectionFromEntity
Couldn't find uniqueIdentifier %@ in conversation -- aborting selfIdDetectionWithEntity
Target message (uniqueIdentifier=%@) not the last in conversation -- aborting selfIdDetectionWithEntity
Conversation message %d with id %@ and content length %lu
Entity message with id %@, content length %lu
Entity message with detected data item %@
Target message unrecoverable state with matching content = %d
ContactMLSharing: Text message has no conversation identifier
ContactMLSharing: Invalid contact detail range plainTextContent.length %tu supervision.ignoreAfter %tu match.range [%tu, %tu]
BirthdayMLExtraction: Text message has no conversation identifier
Error fetching user DOB: %@
SGMIMessageMissingEntityAnalyzer: Mail Intelligence's SPI back end timed out
SGMIMessageMissingEntityAnalyzer: Mail Intelligence's SPI back took over 5 seconds on a %tu-lengthed content: we have to xpc_transaction_exit_clean
SGMI-SPI (input)identifyComposeWarningsFromSubject:%{sensitive}@ content:%{sensitive}@ toRecipients:%{sensitive}@ ccRecipients:%{sensitive}@ bccRecipients:%{sensitive}@ originalToRecipients:%{sensitive}@ originalCcRecipients:%{sensitive}@ attachments:%{sensitive}@ language:%@
SGMI identified a file-sharing link in the body: %{sensitive}@ and therefore consider it as an attachment.
SGMI identified a subject warning but blocked it because of a poor user engagement on the pattern.
SGMI failed to create a warning from a match.
SGMI identified potential missing attachment in '%{sensitive}@',however, given a link seems to be present in the following characters: '%{sensitive}@', this warning got disqualified...
SGMI identified potential missing attachment in '%{sensitive}@',however, given '%{sensitive}@' is in the recipients, this warning got disqualified...
SGMI identified a body warning but blocked it because of a poor user engagement on the pattern.
SGMI-SPI (output compose warnings) %{sensitive}@
SGMI inconsistent recipient detection. Likely an issue in assets: %@
SGMIMessageMissingEntityAnalyzer identified "%{sensitive}@" as a nickname used in the past for %{sensitive}@.
SGMI identified a recipient warning for %{sensitive}@ but blocked it because one recipient address (%{sensitive}@) seems to be a group.
SGMI identified a recipient warning but blocked it because of a poor user engagement on the pattern.
SGMI created a second chance recipient warning for %{sensitive}@.
SGMI identified a recipient warning from a conservative regex which user engagement was poor, even with contact match.
SGMIMessageMissingEntityAnalyzer found a contact match for %{sensitive}@ in CoreRecents
SGMIMessageMissingEntityAnalyzer found a contact match: %{sensitive}@ ->  %{sensitive}@ in Contacts
SGMIMessageMissingEntityAnalyzer found a pseudo contact match: %{sensitive}@ ->  %{sensitive}@
SGMIMessageMissingEntityAnalyzer found a nickname match: %{sensitive}@ ->  %{sensitive}@
SGMIMessageMissingEntityAnalyzer: Attempt to match %{sensitive}@ against the various sources of contacts timed out.
SGMIMessageMissingEntityAnalyzer Attempt to match %{sensitive}@ against the various sources of contacts %@.
SGMI received %@ feedback for missing entity warning
SGMI will %@ trigger a warning for such signature
SGMIWarningsDetectionRegex: Invalid pattern %@ : %@.
SGMIWarningsDetectionRegexMatch (%{sensitive}@) with signature: %@ (%{sensitive}@)
IdentityKey for social profile types currently unsupported: %@
Unknown handle type %@
SGDSpotlightCommander: got reimport request: %@
ignoring reimport request since it is subset of existing query: %@
ignoring reimport request since plugin already has a pending request: %@
SGDSpotlightCommander: attempting to process reimport requests
SGDSpotlightCommander: found %lu unqueried reimport requests
SGDSpotlightCommander: found %lu unexecuted reimport requests
SGDSpotlightCommander: reimportForPersonHandle: %@ : %@ : %@
SGDSpotlightCommander: reimport query found %lu items
SGDSpotlightCommander: foundItemsHandler making new set for %@
SGDSpotlightCommander: foundItemsHandler: %@ - %@
SGDSpotlightCommander: Error: reimport search query error: %@: %@
SGDSpotlightCommander: total items to be reimported: %tu
SGDSpotlightCommander: storing reimport items for %lu bundles for request %llu
SGDSpotlightCommander: Error: unable to get spotlight index to issue reimport command to
SGDSpotlightCommander: issuing command to spotlight: %@
SGDSpotlightCommander: Error during CS issueCommand: %@
SGDSpotlightCommander: reimport command issued: %@
SGDSpotlightCommander: reimport command issued
SGNaturalLanguageDissector: Event is cancelled
Skipping NL dissector: allowNaturalLanguageDissector is OFF
Ignoring NL dissection because an iCalendar attachment exists.
Ignoring NL dissection because document was matched by a template
Failed to check for existing spotlight reference: %@
clearAllTombstonesForSpotlightReferencesIf: waiting for write transaction
clearAllTombstonesForSpotlightReferencesIf:YES (will clear)
clearAllTombstonesForSpotlightReferencesIf:YES (did clear)
clearAllTombstonesForSpotlightReferencesIf:NO
got NULL entityId from serializedContacts table
contactsWithIdentifiers filtered %lu entities from the wrong table.
nil entityId or serializedContact data found: %@ %@
Could not load contacts: %@
Could not fetch last CoreSpotlight state: %@
MDSearchableIndex returned error %@
Encountered corrupt db (%@), attempting to reinitialize
Journaling command: %d
Failed to write command type to journal
Failed to write command blob length to journal
Failed to write command blob to journal
Skipping SGMIFeatureStore _runJournal -- no journal file exists
Beginning SGMIFeatureStore _runJournal
Aborting SGMIFeatureStore _runJournal -- db not available (maybe device is locking again?)
Running journal command: delete column %@
Finished SGMIFeatureStore _runJournal
SGMIFeatureStore: Invalid SGMailIntelligenceUnsubscriptionRuleField for DB lookup
Follow Up. [incrementUserEngagement] warning is nil. Nothing will be stored.
Follow Up. [incrementUserEngagement] Incrementing %@
SGMIFeatureStore Error in signature format: %@
SGMIFeatureStore Unsupported type: %@
Follow Up. [incrementUserEngagement:forFollowUpWarning] Can't access the db.
Unsupported SGMailIntelligenceWarning for method shouldExposeWarning
Follow Up. [updateFollowUpDetectionStatsWithWarning] warning is nil. Nothing will be stored.
Follow Up. [updateFollowUpDetectionStatsWithWarning] Can't access the db.
SGMIFeatureStore: Inconsistent state of the DB.
SGMIFeatureStore will not return SGMIMetricsRegexSignatureStats for sampling reasons
Failed to clearSignatureStatsTable due to Class A data protection
Not performing deleteNaiveBayesModelForProbabilityFeatureName:%ld due to data protection
Discarding commitNaiveBayesModel commit due to data protection
commitNaiveBayesModel:%@ probabilityFeatureName:%ld updateDate:%@
Unable to deleteTokensForDeletedEmailAddresses due to Class A protection
Failed to clearSubmodelTables due to Class A data protection
Failed to clearKVStoreTable due to Class A data protection
Failed to clearNicknameMappingTable due to Class A data protection
Email Searchable Item is malformed - no account identifier
Email Searchable Item is malformed - missing message id or account identifier
[vipManager conformsToProtocol:@protocol(EMVIPReader_Private)] was false (class: %@) -- the VIP set might be empty even if the user has VIP
Could not get message content: %@
Read error %@ loading message content from URL: %@
Ignoring DKIM signature because it has expired.
Ignoring DKIM signature because the signing domain identifier is not the same as or a subdomain of the domain used in the From: header.
Could not create DKIM verification context %@
Failed to process event suggestion 
 No From: header found.
Failed to process event suggestion 
 Could not parse domain in From: header.
Failed to process event suggestion 
 No valid DKIM signature found.
Successfully verified DKIM signature.
Failed to process event suggestion 
 A temporary error occured while verifying the DKIM signature(s).
Failed to process event suggestion 
 A permanent error occured while verifying the DKIM signature(s).
Could not get localized string path for localization '%@
Could not load localized strings from %@: %@
Could not parse localized strings from %@: %@
SGRTCLogging+Reminders: No reminder found for entity record Id: %@
SGRTCLogging+Reminders: logging interaction to RTC
SGRTCLogging+Reminders: logging extraction to RTC
Invalid value for SGNameDetectorAlgorithm: %lu
SGNameDetector - Error querying contacts from people suggester.
Dissecting a donated contact identifier: %@
Received a donated contact identifier: %@, but contact store returned nil
malformed serialized time range: %@
SGSqlEntityStore+Events: event startTimezone is nil but endTimezone is not nil
SGSqlEntityStore+Events: event endTimezone is nil but startTimezone is not nil
SGDNotificationBroadcaster posting event notification
SGDNotificationBroadcaster posting contact notification
SGDNotificationBroadcaster posting reminder notification
SGDNotificationBroadcaster posting SGURL changed notification
SGDNotificationBroadcaster failed to post SGURL change notification: error %u
SGMITrialClientWrapper: No plist file found at %@
SGMITrialClientWrapper: TRILevel is nil for %@
SGMITrialClientWrapper: Unable to load plist content for %@
SGMITrialClientWrapper: Empty plist content for %@
SGMITrialClientWrapper: isEnabled accessed: %@
SGMITrialClientWrapper: isDNUOnlyEnablement accessed: %@
SGMITrialClientWrapper: signatureStatsLogging accessed: %@
SGMITrialClientWrapper: modelGroundTruthVersion accessed: %@
SGMITrialClientWrapper: modelInferenceVersion accessed: %@
SGMITrialClientWrapper: modelPath accessed: %@
SGMITrialClientWrapper: modelFeatureNames accessed: size %lu, first element %@
SGMITrialClientWrapper: modelFeatureStandardizationMeans accessed: size %lu, first element %@
SGMITrialClientWrapper: modelFeatureStandardizationStandardDeviation accessed: size %lu, first element %@
SGMITrialClientWrapper: modelGroundTruthFeatureNames accessed: size %lu, first element %@
SGMITrialClientWrapper: modelGroundTruthFeatureLowerBounds accessed: size %lu, first element %@
SGMITrialClientWrapper: modelGroundTruthFeatureUpperBounds accessed: size %lu, first element %@
SGMITrialClientWrapper: modelGroundTruthOutputs accessed: size %lu, first element %@
SGMITrialClientWrapper: saliencyOverrideFeatureNames accessed: size %lu, first element %@
SGMITrialClientWrapper: saliencyOverrideFeatureLowerBounds accessed: size %lu, first element %@
SGMITrialClientWrapper: saliencyOverrideFeatureUpperBounds accessed: size %lu, first element %@
SGMITrialClientWrapper: saliencyOverrideOutputs accessed: size %lu, first element %@
SGMITrialClientWrapper: classificationThreshold accessed: %@
SGMITrialClientWrapper: classificationOfflinePrecision accessed: %@
SGMITrialClientWrapper: classificationOfflineRecall accessed: %@
SGMITrialClientWrapper: attachmentDetectionRegexes accessed with locales %@.
SGMITrialClientWrapper: attachmentLinkDetection accessed with %lu entries.
SGMITrialClientWrapper: conservativeRecipientDetection accessed: %@
SGMITrialClientWrapper: recipientConservativeDetectionRegexes accessed with locales %@.
SGMITrialClientWrapper: recipientDetectionRegexes accessed with locales %@.
SGMITrialClientWrapper: nicknameDetectionRegexes accessed with locales %@.
SGMITrialClientWrapper: followUpOnOutgoingMailsQuestionsDetectionRegexes accessed with locales %@.
SGMITrialClientWrapper: followUpOnOutgoingMailsAsksDetectionRegexes accessed with locales %@.
SGMITrialClientWrapper: defaultTimeIntervalToStartWarningExposition accessed %@.
SGMITrialClientWrapper: defaultTimeIntervalForAWarning accessed %@.
SGMITrialClientWrapper: followUpOnIncomingMailsDetectionRegexes accessed with locales %@.
SGMITrialClientWrapper: followUpWarningsParameters accessed with locales %@.
SGMITrialClientWrapper: bodyAnalysisSamplingFactor accessed: %@
SGMITrialClientWrapper: minCountToConsiderATokenAsHighlyDiscriminant accessed: %@
SGMITrialClientWrapper: ratioToConsiderATokenAsHighlyDiscriminant accessed: %@
SGMITrialClientWrapper: minCountToConsiderATokenAsExtremelyDiscriminant accessed: %@
SGMITrialClientWrapper: ratioToConsiderATokenAsExtremelyDiscriminant accessed: %@
failed to get URL for library directory: %@
_vCardsDirectoryURL is nil
failed to create %@: %@
Sending pseudo-contact with id %@ to CoreSpotlight
Could not index contact in CoreSpotlight: %@
Not sending pseudo-contact to Spotlight because the store is missing
Not sending pseudo-contact to Spotlight because it was confirmed or rejected
Not sending pseudo-contact to Spotlight because it has no original details
Not sending pseudo-contact to Spotlight because it is already in the curated contacts
Could not delete pseudo-contact from Spotlight: %@
Could not delete all pseudo-contacts: %@
sg_isCuratedEventFromSuggestionNewerThan: missing suggestion info or timestamp
sg_fallbackURL: Event does not have schame
Ignoring URL that is not http or https
Could not convert string to URL
SGExtractionDocument: No model output
SGExtractionDocument: Invalid range
Error: could not mallocRegexp!
Memory not allocated by mallocRegexp: %llu
Failed to process event suggestion 
 INReservation.itemReference.vocabularyIdentifier property is nil.
Failed to process event suggestion 
 two or more INReservation objects share the same INReservation.itemReference.vocabularyIdentifier.
Error retrieving directory for Biome stream data
SGMIBiomeUtility: Successfully consumed stream
SGMIBiomeUtility: Error: %s
CoreSuggestionsAssets [common] metadata download success? %d
CoreSuggestionsAssets [locale] metadata download success? %d
CoreSuggestionsAssets [region] metadata download success? %d
SGEKCalendarAdapter addEvent: Skipping event already known to be cancelled. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter addEvent: Skipping event that has already passed. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter addEvent: Skipping NLEvent with empty title. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter addEvent: Skipping NLEvent that is not status Confirmed. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter addEvent: Skipping NL Event with associated event in EKEventStore. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter addEvent: Skipping event-associated-with-storage-event with missing suggestionInfo. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter addEvent: Skipping event which is not more recent than preexisting EKEvent. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter addEvents: Unable to save events in event store. EKStore commit error: %@
SGEKCalendarAdapter addEvents: Unable to save events in event store; description: %@, error: %@
SGEKCalendarAdapter addEvents: Successfully saved events in event store
SGEKCalendarAdapter _updateEvent: Calendar Event missing from store for identifier: %@. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter _updateEvent: Unable to update event: %@. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter _updateEKEvent: Unable to update event; description: %@, error: %@
SGEKCalendarAdapter _updateEvent: Successfully updated event. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter cancelEvent: No existing event found. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter cancelEvent: NL Event cancelled. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter _updateEvent: Unable to save event cancellation: %@. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter _updateEvent: Unable to save event cancellation; description: %@, error: %@
SGEKCalendarAdapter _updateEvent: Successfully Removed event in a curated calendar. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter cancelEvents: Unable to remove events. EKStore commit error: %@. [SGStorageEvent (%{public}@)]
Unable to remove events; description: %@, error: %@
SGEKCalendarAdapter cancelEvents: Successfully removed events. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter orphanEvent: No existing event found. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter orphanEvent: Orphaned event is on a curated calendar; not removing. [SGStorageEvent (%{public}@)]
SGEKCalendarAdatper _eventsAssociatedWithStorageEvent: Located associated event based on content rather than pseudoevent key match. [SGStorageEvent (%{public}@)]
SGEKCalendarAdatper _eventsAssociatedWithStorageEvent: More than one matching event found (%lu). [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter _addEKEventToCalendar: Adding event via EK. [SGEvent (%{public}@)]
SGEKCalendarAdapter _addEKEventToCalendar: Adding event to naturalLanguageSuggestedEventCalendar. [SGEvent (%{public}@)]
SGEKCalendarAdapter _addEKEventToCalendar: Adding event to suggestedEventCalendar. [SGEvent (%{public}@)]
SGEKCalendarAdapter _addEKEventToCalendar: Unable to save event in event store: %@. [SGEvent (%{public}@)]
SGEKCalendarAdapter _addEKEventToCalendar: Successfully saved event in event store. [SGEvent (%{public}@)], [EKEvent (%{public}@)]
SGEKCalendarAdapter: Calling _updateEKEvent
SGEKCalendarAdapter: Calling _cancelEKEvent
SGEkCalendarAdapter: no bundle record found: %@
SGEKCalendarAdapter _removeEKEvent: Unable to remove event. EKStore commit error: %@
SGEKCalendar _removeEKEvent: AdapterUnable to remove event; description: %@, error: %@
SGEKCalendarAdapter _removeEKEvent: Successfully removed event.
Cannot calculate free space
Free space attribute is missing
Free space attribute is not an NSNumber
SQLite error: %@
db corruption detected, leaving behind marker so we recover
suggestd exiting due to lack of disk space
suggestd exiting due to corrupt SQL vtable.
SGSqliteDatabase IOERR (device lock state %@): %@
suggestd exiting due to lack of disk space while setting journal_mode.
exiting due to repeated SQLITE_BUSY
SGDatabaseJournal unable to create directory for storing journals: %@
SGDatabaseJournal error when immediately running query: %@: %@
executing journal file: %@
Got nil after trying to unarchive a db journal: %@
No __query key set in journal file: %@
SGDatabaseJournal error when replaying query: %@: %@
ignoring journal file: %@
A bogus or corrupt journal file was found and has been cleaned up. Suggestd will relaunch and continue: %@
SGDatabaseJournal unable to delete journal file: %@: %@
SGDatabaseJournal deleted journal file: %@
Executing queries from journals to %@
SGDatabaseJournal unable to open journal directory: error(%i): %s
journal execution checking lock state after %u files
journal execution exiting early after %u files because device is locked
Removing all journal files at %@
SGDatabaseJournal not removing bogus journal directory: %@
SGDatabaseJournal unable to remove journal directory: %@
SGDatabaseJournal unable to re-create directory for storing journals: %@
softlink:o:path:/System/Library/PrivateFrameworks/CoreRoutine.framework/CoreRoutine
softlink:o:path:/System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore
softlink:o:path:/System/Library/Frameworks/WebKit.framework/WebKit
softlink:o:path:/System/Library/Frameworks/HealthKit.framework/HealthKit
softlink:o:path:/System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore
SGTextMessage
SGConversationFlatteningTransformer
PMLTransformerProtocol
PMLPlistAndChunksSerializableProtocol
NSObject
schema
SGM2SelfIdModelScore
NSCopying
SGM2SuggestdExitReason
SGM2AutocompleteUserSelectedContact
SGM2BundleIdsTrackedAsOther
SGCloning
SGParsedPersonFromInteraction
SGM2ContactCreated
Internal
SGMicrodataToJsonParser
URLs
SGModel
SGTransformerInstance
SGModelRules
SGM2ContactDetailExtraction
SGM2ContactDetailSent
SGM2ContactsInterfaceCacheCount
Reminders
SGM2ContactsInterfaceCacheHit
SGM2FoundInMailModelScore
KVStore
SGWordBoundaryQuickTypeInference
SGStructuredEventDocument
SGMIMetricsUpdateProcessInformation
SGReminderDissector
SGMailMessageProcessing
SGTextMessageProcessing
SGM2SearchResultsIncludedPureSuggestion
SGMessageEventDissectorTrialClientWrapperGuardedData
SGMessageEventDissectorTrialClientWrapper
SGM2SearchResultsUserSelectedContact
SGM2SerializedContactsCacheHit
SGM2SqliteErrors
SGURLPlugin
FIAPPlugin
HVRemindersConsumer
HVConsumer
Saliency
SGM2SuggestedContactDetailShown
SGMIMetricsAggregatedAccuracyLogs
SGM2SuggestedContactDetailUsed
SGM2UnknownContactInformationShown
Utilities
SGM2PerfXPCLatency
SGM2CustomResponsesHarvest
SGMicrodataItemScope
SpotlightMapping_Internal
SGMonochrome
SGDetectedAttributeMetrics
SGMessageKey
SGEntityKey
SGSqliteExitOnDeviceLockErrorHandler
SGDPowerLog
SGDeliveryDissector
SGDXPCConnectionUtilities
SGTextMessageKey
SGRealtimeEventResponse
SGHistoryObserver
SGSuggestHistoryObserver
SGRealtimeSuggestionsTuple
SGEKEventStoreProvider
SGDPurgeDeletionBox
SGDSuggestManagerMailProtocol
_SGDSuggestManagerBaseProtocol
_SGDSuggestManagerMetricsProtocol
_SGDSuggestManagerEventsConfirmRejectProtocol
_SGDSuggestManagerContactsConfirmRejectProtocol
SGDSuggestManagerMessagesProtocol
SGDSuggestManager
SGDSuggestManagerAllProtocol
_SGSuggestManagerFoundInAppsProtocol
SGDSuggestManagerContactsProtocol
SGDSuggestManagerURLsProtocol
SGDSuggestManagerEventsProtocol
SGDSuggestManagerRemindersProtocol
SGDSuggestManagerDeliveriesProtocol
SGDSuggestManagerIpsosProtocol
SGDSuggestManagerInternalProtocol
_SGDSuggestManagerInternalHarvestProtocol
SGDSuggestManagerFidesProtocol
HVContentAdmissionObserver
HVMailConsumer
HVInteractionConsumer
SGEntityMappingTransformer
SGMIDailyActivity
SGMIMetricsAggregatedAccuracyLog
SGStructuredEventExtractionModel
SGSignificantEmailAddressModelForIMessage
SGM2HarvestCost
SGRe2PrefilterTree
SGDManagerForCTS
SGDeduper
SGCalendarAttachmentDissector
SGCalendarAttachmentDissectorUtility
SGContactDetailsHolder
SGStorageContact
SGDatabaseMigratorSnippets
SGSuggestionsSystem
SGMISpotlightUtility
SGDPluginManager
TestHelpers
StatsCounters
SGAccountsAdapter
SGInMemoryAdapter
SGJournalCalendarObserver
SGJournalBaseObserver
SGJournalContactsObserver
SGJournalRemindersObserver
SGRemindersAdapter
SGMIMetricsMailIntelligenceForMessage
SGMISaliencyInference
SGNameMappingTransformer
SGSelfIdentification
SGSelfIdentificationDetection
SGSearchableItemIdTriple
SGPipelineEntity
SGEntity
SGMeCardDissector
SGHistorySharedData
SGSuggestHistory
SGNoCloudNSUbiquitousKeyValueStore
SGKeyValueCacheManager
SGWords
FIAPHistoricalDataRequest
NSSecureCoding
NSCoding
RFC822Parsing
SGDataDetectorMatchesWithSignatureRange
SGAddressCoalescingState
SGDataDetectorMatch
SGThreadParser
SGMIAttachmentSizeHistogram
SGInhumans
SGMIFollowUpManager
SGExtractionModel
SGIdentityEdge
SGContactDetailSummary
IdentityStore
SGPatternGlobalData
SGPatterns
SGPatternDataFile
SuggestionsExtensions
HVHeaderCollection
SGSimpleMailHeaderKeyValue
SGSimpleMailMessage
SGQuickResponsesML
EncodedWord
SGMISaliencyModelConfigRule
SGMISaliencyModelConfig
SGLowMemoryContactEnumeration
SGLexicon
SGNicknames
SGContactsInterface
SGSymbolicMappingTransformer
SGOffsetDictionary
SGFlightData
Utility
SGFlight
SGTaggedMallocCompressionBuffer
SGTaggedMallocWorkQueueItemPart
SGTaggedMallocLevenshteinDistanceBuffer
SGTaggedMallocEmailHtml
SGMIMetricsSubmodelsStats
Suggestions
SGBinaryClassificationModel
SGBinaryClassificationModelRules
SGBloomFilter
SGBloomFilterChunkInMemory
SGBloomFilterChunk
SGBloomFilterChunkInMemorySparse
SGBloomFilterChunkMmap
SGMIEnablementConfig
SGTextMessageConversationTracker
SGTextMessageItem
SGConversationTurnProtocol
SGConversationHistory
SGDatabaseJournalFile
SGReminderExtractionModelGuardedData
SGReminderExtractionModel
SGRequestContext
SGStructuredEventCoreMLInputWrapper
MLFeatureProvider
SGRTCLoggingGuardedData
SGRTCLogging
ReimportRequests
sgLogging
SGXPCActivityManager
SGXPCActivityManagerProtocol
SGLongRunningTask
SGLongRunningTaskManager
SGEnrichmentWritebackAdapter
SGMIMetricsSubmodelStats
SGTokenString
SGJSBurstTrie
SGJSBurstTrieExports
JSExport
SGReverseTemplateJS
SGContactStoreFactory
VisibleForTesting
SGDomainWhitelistCheckerGuardedData
SGDomainWhitelistChecker
SGStructuredEventTrialClientWrapperGuardedData
SGStructuredEventTrialClientWrapper
SGSqliteReadTransaction
SGSqliteWriteTransaction
SGSqliteTransaction
SGSqliteDatabaseSharedLock
SGSqliteDatabaseImpl
SGSqliteDatabase
SGStructuredEventDissector
SGMicrodataDocument
SGSchemaOrgKey
Locations
Deleting
SGMailClientUtilMock
NaiveBayesModel
SGAhoCorasick
SGMISaliencyModelFeatureProvider
SGMISaliencyModelOutput
SGMISaliencyModel
SGNames
SGMIBiomeReducedMessageEvents
SGMIBiomeEventReducer
SGSchemaConversionProtocol
SqlHelpers
DatabaseCheck
SGMIMetricsSubmodelsProbabilities
Maintenance
Helpers
SGDOMParser
WKNavigationDelegate
SGStorageLocation
SGEventLocationForGeocode
SGMIStagedLogRecord
SGMIMetricsTrialMetadata
_SGDCloudKitSyncPersistedState
SGDCloudKitSync
APSConnectionDelegate
SGDCloudKitSyncObserver
SGCuratedChangeNotificationsBaseListener
SGCuratedChangeNotificationsAddressBookListener
SGCuratedChangeNotificationsCalendarListener
SGCuratedChangeNotifications
SGReminderDueLocation
SGChatLengthEstimator
SGMIFeatureSubmodelLink
SGMIFeature
CloudKitRecord
SGContactSharingModel
Significance
SGMIMetricsMailAttachmentHistogram
SGMicrodataItem
SGDetection
SGCNContactIdentifierCollection
SGLabeledValue
SGStructuredEventCoreMLOutputWrapper
SGTokenDistanceMappingTransformer
SGJournalEntry
SGMIMetricsMissingElementPrediction
RealtimeDonations
SGStringMappingTransformer
SGMessageEventDissectorGuardedData
SGMessageEventDissector
ContactDetails
SGCoalescingDropBox
SGPostalAddressExtraction
SGSocialProfileDetails
SGModelMappingHelper
Writing
SGHtmlEntities
SGSlice
SGSignatureDissector
SGMeContact
SGMIMetricsRegexSignatureStats
SGMetricsDissector
SGPseudoEventKey
SerializedContacts
SGReminderMessage
SGMailQuoteParser
SGReminderTrialClientWrapperGuardedData
SGReminderTrialClientWrapper
SGSqlEntityStoreCNContactMatcherHelper
SGSignificantEmailAddressModel
SGTokenizer
Loading
SGHKHealthStore
SGDetectedAttributeDissector
SGSelfIdentificationModel
SGInteractionKey
SGEspressoModel
SGExtractionModelCoreMLFeatureWrapper
SGMailPatterns
SGSignificantPhonenumberModel
SGAggregateLogging
SGTaggedCharacterRange
SGTrialClientWrapper
SGContactDetail
CNtoSGContacts
SGSGtoCNContactsCacheUpdateAdapter
SGHarvestQueueMetricsTimer
SGHarvestQueueMetrics
SGEntityStoreToFeatureStoreLockGuardedData
SGSqlEntityStoreTokenizerGuardedData
SGSqlEntityStore
SGOutput
SGExtractionDissector
SGInteractionProcessing
SGMISubmodelsManager
SGMISubmodelsAccumulator
SGMINicknameManager
SGServiceContext
SGReverseTemplatesJSDataDetectors
SGMIWarningsConfig
SGPseudoReminderKey
SGDCKLocation
SGMIFeatureVector
SGDataNormalization
SGDCKInteractionInfo
SGAppLaunchHistory
SGM2HarvestBudgetStatusTransition
ContentProtection
SGPipelineEnrichment
SGMetricsHelper
SGMIBiomeSummaryResults
SGURLContainer
SGExternalEnrichment
SGURLDissector
SGDeliveryKey
SGIdentityName
SGMIFeatureVectorCollator
SGMessage
SGSpotlightIdentifiers
SGM2BirthdayExtractionWithSupervision
SGStructuredEventClassification
SGJournal
SGContactEntity
SGRawKey
SGDOMParserResult
PipelineAdditions
SGPipeline
SGPOSTagger
SGPipelineDissector
SGContactDetailKey
SGPseudoContactKey
SGMailAttachment
SGTextMessageBirthdayCongratsModel
SGStorageEvent
SGEventForGeocode
SGDSpotlightReceiver
SpotlightReceiver
AttributePresence
SGContactPipelineHelper
SGCuratedContactMatcher
SGDCKEvent
SGPaths
SGNameInversionPredictor
SGEmailKey
SGMITokenCounts
SGMINaiveBayesModelQueryResult
SGMINaiveBayesModel
SGMI
ExtractionInfos
SGTokenizerMappingTransformer
SGEntityMatchingTransformer
DatabaseMigrator
SGMailIntelligenceDissector
SGSelfIDSupervision
SGContactDetailSupervision
SGDetectedAttributeML
SGMIMessageMissingEntityAnalyzer
SGRe2
SGRe2Basic
SGRe2Subregexps
SGRe2Lazy
SGMIWarningsDetectionRegexes
SGMIWarningsDetectionRegex
SGMIWarningsDetectors
SGMIWarningsDetectionRegexMatch
SGPlainTextContentCursor
SGIdentityKey
SGMicrodataItemProp
SGMicrodataParser
SGDSpotlightCommander
SGNaturalLanguageDissector
Spotlight
CSSearchableIndexDelegate
SGMIDomainCountingTableGuardedData
SGMIDomainCountingTable
SGMIFeatureStoreGuardedData
SGMIFeatureStore
_PASDatabaseMigrationProtocol
SGDuplicateKey
EMVIPReader_Private
SGMailClientUtil
SGSignificantAddressModel
SGProactiveHarvestingSupport
SGFoundInAppsStrings
SGContactAggregator
SGNameDetector
MessageManagement
SGDonatedContactDissector
Events
SGDatabaseMigratorEntities
SGSeekableData
SGSeekable
SGLevenshtein
FIAPResult
SGDCKTimeRange
SGCuratedEventKey
SGStorageReminder
SpotlightMapping
SGDNotificationBroadcaster
SGMIMetricsSubmodelAgeVector
SGXpcTransaction
SGMITrialClientWrapperGuardedData
SGMITrialClientWrapper
SGSchemaKeys
SGSpotlightContactsAdapter
SGSignificantAddressModelForIMessage
SGExtractionDocument
SGWebPageKey
Building
SGMIMetricsRegexSignatureStat
SGDPLogging
SGMIMetricsInferenceAndGroundTruth
SGMicrodataParserStackItem
SGMIBiomeUtility
SGContactSharingTransformer
SGAsset
Tags
SGEKCalendarAdapter
SGM2HarvestCostBreakdown
ErrorHandling
SGDatabaseJournal
waitUntilFinished
defaultBudget
fetchRemindersMatchingPredicateDescriptor:sortDescriptors:options:error:
categoryTagWithCategoryType:
pathForResource:ofType:
nameDetectorRules
setScheme:
setIsGroupConversation:
getNSDataForColumn:
identifyRangeOfEncodedWordAtIndex:
initWithGuardedData:
fetchRemindersWithError:
pathForResource:ofType:inDirectory:
languageCode
getNSDataForColumnName:table:
setByAddingObject:
setSearchPredicate:
rolloutIdentifiersWithNamespaceName:
registerInteractionConsumer:levelOfService:
isEqualToSet:
setSecond:
initWithTeamIdentifier:type:userActivity:validStartDate:validEndDate:
defaultCalendarForNewEvents
fetchSiriFoundInAppsListWithError:
dialingCodeForISOCountryCode:
mailingListId:
ccHandles
initWithGuardedData:serialQueue:
shouldSampleForLabel:inLanguage:isDynamicLabel:
_initWithUserActivityStrings:secondaryString:optionalData:
pathForResource:ofType:inDirectory:forLocalization:
transform:stopAfterTransformerWithIndex:
setByAddingObjectsFromArray:
languageForLocaleIdentifier:
defaultCenter
initWithText:originalMessage:index:
dictionary
getNSStringForColumn:
setByAddingObjectsFromSet:
weakObjectsHashTable
initWithText:senderID:timestamp:
mainBundle
registerMailConsumer:levelOfService:
showOperatingSystemVersionInSnippets
fieldReverseMapped:
showPastEvents
changeHistoryWithFetchRequest:error:
pattern
setIsSenderSignificant:
make
weakToStrongObjectsMapTable
initWithHandle:handleType:fullName:
defaultCoordinator
getNSStringForColumnAlias:
fileExistsAtPath:
getNSStringForColumnName:table:
registerOnUpdateBlock:
addMessage:
rules
fileExistsAtPath:isDirectory:
initWithTimeIntervalSince1970:
map:f:
changeType
lastIndex
substringFromIndex:
registerRemindersConsumer:levelOfService:
setCalendar:
setShortMonthSymbols:
signatureExpiration
initWithHeaderData:
publisherFromStartTime:
initWithTimeIntervalSinceNow:
changesTruncated
fileHandleForWritingAtPath:
dictionaryWithCapacity:
setCallbackQueue:
defaultDuration
punctuationCharacterSet
substringToIndex:
mapAndFilter:f:
enumerateAllRemindersWithBlock:
runAsyncOnQueue:afterDelaySeconds:block:
contactSharingNegativeSamplingRate
lastModifiedDate
setShortWeekdaySymbols:
weekOfYear
fileSize
mapItem
initWithTimeIntervalSinceReferenceDate:
weeks
getObjectValue:forString:range:error:
substringWithRange:
isEqualToString:
addObject:
attachmentNames
namedEmailAddressWithCSPerson:
dictionaryWithContentsOfFile:
transformerInstanceForLanguage:mode:
setShouldSendContentAvailable:
characterIsMember:
dictionaryWithObjects:forKeys:count:
signatureRegions
attachmentPaths
enumerateByteRangesUsingBlock:
addObjectsFromArray:
namedEmailAddressWithFieldValue:
fileSizeInBytes
initWithTitle:
succeed:
setIsUpdate:
fileSystemRepresentation
setShouldUnifyResults:
payload
dictionaryWithPath:error:
initWithId:origin:type:label:address:airportCode:latitude:longitude:accuracy:quality:handle:
lastName
registerUpdateHandler:
namedEmailAddressesWithFieldValues:
attachmentTypes
setJavaScriptCanOpenWindowsAutomatically:
transformers
defaultLanguage
signatureRules
addObserver:forKeyPath:options:context:
lastObject
fileURLWithPath:
runMode:beforeDate:
dictionaryWithSharedKeySet:
successWithNumberOfExtractions:
contactWithId:name:emailAddresses:phones:postalAddresses:socialProfiles:
initWithIdentifier:subject:sender:recipients:dateSent:type:
enumerateContactChangesWithKeysToFetch:fromContactStore:error:usingBlock:
lastPathComponent
whitespaceAndNewlineCharacterSet
characterSetWithCharactersInString:
fileURLWithPath:isDirectory:
didChangeValueForKey:
contactWithId:name:emailAddresses:phones:postalAddresses:socialProfiles:birthday:photoPath:
addObserver:selector:name:object:
regularExpressionWithPattern:options:error:
defaultManager
setSignificance:
payloadForString:
fileValue
whitespaceCharacterSet
significance
isEqualToTimeZone:
initWithType:
addObserverForName:object:queue:usingBlock:
setSignificanceOrigin:
significanceOrigin
payloadForString:range:
attendee
initWithIndexesInRange:
defaultOrthographyForLanguage:
initWithType:categoryDescription:originBundleId:confidence:schemaOrg:participants:
payloadForUTF8String:length:
setCheckInUrl:
initWithType:categoryDescription:originBundleId:confidence:schemaOrg:participants:eventActivities:
nanosecond
digits
filename:createIfNeeded:
initWithIntent:response:
setSiriFoundInAppsData:
significantSender
filesystemPathForAssetDataRelativePath:
direction
willChangeValueForKey:
URLForDirectory:inDomain:appropriateForURL:create:error:
_setAVFoundationEnabled:
setCity:
naturalLanguageEvent
attendees
addOperationWithBlock:
filesystemPathsForAssetDataRelativePaths:
runWithExceptionBarrier:
setLanguage:range:
checkResourceIsReachableAndReturnError:
directoryValue
attributeForKey:
_setAllowUniversalAccessFromFileURLs:
setCloudKitPersistedState:
addOperations:waitUntilFinished:
isEventMetadata
laterDate:
enumerateContactsWithFetchRequest:error:usingBlock:
attributeSet
signingDomainIdentifier
naturalLanguageEventAttributes
latestChangeAnchor
setCompletionBlock:
city
withBucketSize:andNgrams:
_setAllowsJavaScriptMarkup:
isExtraKey
defaultReceiver
globPatterns
container
setCompletionHandler:
naturalLanguageEventAttributes:
simpleDedupe:
attributes
_setDOMPasteAllowed:
enumerateDetailsWithBlock:
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:
isExtractedEventCategory
trimDbWithDeferralBlock:
containsDetailSuggestions
markedAsHarvested
naturalLanguageEventLanguageID:
_setEnabledTopics:
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:lodgingBusinessLocation:reservationDuration:numberOfAdults:numberOfChildren:
isFacebookBirthdayCalendar
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:rentalCar:rentalDuration:pickupLocation:dropOffLocation:
setComputeUnits:
naturalLanguageEventTypeIdentifier:
containsDomain:
enumerateEventsMatchingPredicate:usingBlock:
setLenient:
defaultSearchableIndex
attributesOfFileSystemForPath:error:
containsEntityExtraction:
attributesOfItemAtPath:error:
defaultSessionConfiguration
_setInteraction:donate:
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:reservationDuration:partySize:restaurantLocation:
naturalLanguageSuggestedEventCalendar
containsIndex:
setLimitingStartDate:
displayname
isFieldReverseMapped
_issueCommand:completionHandler:
tripDuration
auditToken
sinkWithCompletion:receiveInput:
siriFoundInAppsData
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:reservedSeat:boatTrip:
enumerateIndexesUsingBlock:
classificationParams
isFileURL
containsObject:
enumerateKeysAndObjectsUsingBlock:
initWithURL:error:
setConfiguration:
performRecentsSearch:operationQueue:completion:
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:reservedSeat:busTrip:
initWithURL:title:receivedFromHandle:bundleIdentifier:groupIdentifier:documentIdentifier:documentTitle:documentDate:documentTimeInterval:receivedAt:flags:
setConfirmationNumber:
_setJavaScriptCanAccessClipboard:
performRecentsSearch:queue:completion:
containsString:
enumerateLinesUsingBlock:
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:reservedSeat:event:
withMethods:
initWithUTF8String:
enumerateLinguisticTagsInRange:scheme:options:orthography:usingBlock:
indexOfObject:
_setLegacyEncryptedMediaAPIEnabled:
classifierWithEspressoModelFile:
authorAddresses
isFloating
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:reservedSeat:flight:
legs
containsSuggestions
initWithUniqueIdentifier:domainIdentifier:attributeSet:
_setLoadsImagesAutomatically:
performTask:forPluginID:completionHandler:
initWithUniversalLink:
setLocalCustomObject:forKey:
_setMediaDevicesEnabled:
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:reservedSeat:trainTrip:
indexOfObject:inSortedRange:options:usingComparator:
setContainer:
contentCreationDate
setStateOrProvince:
tupleWithFirst:second:
defaultTimeZone
lengthOfBytesUsingEncoding:
groupIdentifier
indexOfObjectPassingTest:
_setPeerConnectionEnabled:
enumerateMatchesInString:options:range:usingBlock:
isFullyDownloaded
letterCharacterSet
setStreet:
initWithUnsubscriptionRuleField:tokenCounts:
gteSaliency
indexOfObjectWithOptions:passingTest:
withTransformers:
snippet
addReminderWithTitle:toListChangeItem:
indexSearchableItems:completionHandler:
setContentCreationDate:
levelForFactor:withNamespaceName:
defaultWorkspace
_setRemotePlaybackEnabled:
filterUsingPredicate:
isHarvested
initWithUsername:userIdentifier:bundleIdentifier:displayName:service:teamIdentifier:label:extractionInfo:recordId:
_setScreenCaptureEnabled:
newPrivateStreamDefaultConfigurationWithStoreBasePath:
enumerateObjectsUsingBlock:
setString:
authors
tzid
snippetFromString:coreRange:withMaxWindowSizeAroundCore:
write:maxLength:
initWithValidatedFormat:validFormatSpecifiers:locale:arguments:error:
filteredArrayUsingPredicate:
_setShouldEnableTextAutosizingBoost:
setLowPriority:
initWithKey:ascending:
ISOCountryCode
automaticGeocodingEnabled
indexSetWithIndexesInRange:
newlineCharacterSet
contentURL
_setStorageBlockingPolicy:
unarchivedObjectOfClass:fromData:error:
filteredSetUsingPredicate:
indexed
autoreleasingSerialQueueWithLabel:
handleFailureInFunction:file:lineNumber:description:
lineRangeForRange:
isIncomingMessage
enumerateRangesUsingBlock:
_setTextAutosizingEnabled:
contentsOfDirectoryAtPath:error:
initWithKeyName:
unarchivedObjectOfClasses:fromData:error:
initWithKeyName:searchable:searchableByDefault:unique:multiValued:
indexesInRange:options:passingTest:
autoreleasingSerialQueueWithLabel:qosClass:
handleFailureInMethod:object:file:lineNumber:description:
linguisticTagsInRange:scheme:options:orthography:tokenRanges:
suggestedEventCalendar
initWithVirtualMachine:
suggestedNickname
enumerateSubstringsInRange:options:usingBlock:
nextObject
setMailMessageID:
addSessionWithCovariates:label:sessionDescriptor:spotlightReference:isInternal:
initWithVocabularyIdentifier:spokenPhrase:pronunciationHint:
handleIdentifier
initWithKeyOptions:valueOptions:capacity:
matchesInString:options:range:
distantFuture
suggestedPhotoPath
queryItemWithName:value:
availableTagSchemesForLanguage:
sanitizeHandles:
_setWebAudioEnabled:
initWithKeyPointerFunctions:valuePointerFunctions:capacity:
initWithWeeks:days:hours:minutes:seconds:
unifiedContactWithIdentifier:keysToFetch:error:
distantPast
enumerateTagsInRange:scheme:options:usingBlock:
initWithKeysToFetch:
sortUsingComparator:
enumerateTagsInRange:unit:scheme:options:usingBlock:
saveEvent:span:commit:error:
suggestionIDFromContactIdentifier:
controlCharacterSet
district
listId
saveSubscription:completionHandler:
initWithYear:month:day:hour:minute:second:timeZone:
relatedContentItems
divertedAirport
writeData:
sortUsingSelector:
conversationForSenderID:
matchinfoDataWithEntityId:detailEntityId:matchinfoData:
unifiedContactsMatchingPredicate:keysToFetch:error:
saveSynchronouslyWithError:
setCountLimit:
sortedArrayUsingComparator:
initWithZoneID:
suggestionInfo
setCountry:
enumeratorAtPath:
base64EncodedDataWithOptions:
phoneNumber:label:extractionInfo:recordId:
dkimSignatureHeaders
deleteContentWithRequest:error:
initWithZoneName:ownerName:
suggestionType
scanEventsInLastMessageOnly:synchronously:completionHandler:
setCreationDate:
inhuman
setSuggestionInfo:
base64EncodedStringWithOptions:
environment
sortedArrayUsingDescriptors:
phoneNumberWithStringValue:
documentDate
scanEventsInMessageUnits:synchronously:completionHandler:
sortedArrayUsingSelector:
nonPersistentDataStore
initWithLatitude:longitude:
radius
handleType
documentIdentifier
raise
setSuspended:
sortedArrayWithOptions:usingComparator:
scanHexInt:
errorWithDomain:code:userInfo:
isInstalled
initWithLength:
unionOrderedSet:
raise:format:
handles
scannerWithString:
isIntentResponseUserActivityString
firstHeaderForKey:
inputDescriptionsByName
unionSet:
initWithLocaleIdentifier:
setCustomObject:forKey:
documentTimeInterval
nonnullNSStringForColumn:
firstIndex
hardName
setMaxConcurrentOperationCount:
maxPromptLength
baseURLStrings
rampId
isInteractionBundleId
firstMatchInString:options:range:
documentTitle
setTargetQueue:useAfterCompletion:
nonnullNSStringForColumnAlias:
nonnullNSStringForColumnName:table:
addUpdateHandlerForNamespaceName:usingBlock:
isInteractionGroupId
maxPromptWindowSeconds
setMaxCount:
pickupLocation
rangeAtIndex:
maxReplyLength
firstName
isInteractionId
domain:
coordinate
isInteractionTeamId
initWithLong:
initFileURLWithPath:
uniqueKey
setMaximumFractionDigits:
setDateFormat:
rangeOfCharacterFromSet:
writeToFile:atomically:
bccHandles
copy
reminderHash:
placemarkWithLocation:name:postalAddress:
isKeyAvailable:
setMaximumSignificantDigits:
inputStreamWithFileAtPath:
writeToPlistWithObject:andChunks:
sourceURL
rangeOfCharacterFromSet:options:range:
additionalRecipients
isLegalEmailAddress:
beginIndexBatch
firstObject
evaluateJavaScript:completionHandler:
universalURL
sourceUniqueIdentifier
rangeOfData:options:range:
initWithMLModel:error:
copyReconstructedAdditionalRecipients
bestLanguageID
isLikePhoneNumber:
setMessageUnits:
setTimeStyle:
reminderMetadata
reminderMetadata:
notes
copyReconstructedAuthors
initWithMachServiceName:options:
rangeOfFirstMatchInString:options:range:
firstObjectCommonWithArray:
setTimeZone:
unlock
setDateStyle:
eventActivities
summary
copyReconstructedPrimaryRecipients
initForReadingFromData:error:
notificationFromRemoteNotificationDictionary:
planReceivedWithPayload:error:
setDay:
dominantLanguageTagFromText:
isMailingListId
planReceivedWithRecipe:attachments:error:
setTimeoutIntervalForRequest:
setMiddleName:
rangeOfString:
insertSuggestedEventCalendar
initFromString:coreRange:signature:maxWindowSizeAroundCore:detectedLanguage:isIncomingMessage:score:
isMainThread
donateInteractions:bundleIdentifier:error:
notificationType
setTimeoutIntervalForResource:
rangeOfString:options:
setMinimumSignificantDigits:
setDecodingFailurePolicy:
setMinute:
donateSearchableItems:bundleIdentifier:error:
notificationWithName:object:userInfo:
spokenPhrase
supportsDeviceToDeviceEncryption
flags
rangeOfString:options:range:
eventBody
setDefaultWebpagePreferences:
donateUserAction:searchableItem:error:
setTimestamp:
bindNamedParam:toBlock:
x_wr_timezone
setDelegate:
bindNamedParam:toDouble:
rangeOfUnit:startDate:interval:forDate:
flight
year
rangeValue
unregisterChangeHistoryClientIdentifier:error:
reminderStatus
initTemporaryForOverwritingCache:
bindNamedParam:toDoubleAsNSNumber:
setToChangeAnchor:
unregisterForLockStateChangeNotifications:
URLByAppendingPathComponent:isDirectory:
rangeWithGregorianStartComponents:endComponents:
flightDuration
int64AsNonnullNSNumberForColumnAlias:
bindNamedParam:toInt64:
unsignedIntValue
symbolCharacterSet
mergeIntoEKEvent:withStore:preservingValuesDifferentFrom:
doubleAsNonnullNSNumberForColumnName:table:
schemaOrg:
null
initWithActivityType:
unsignedIntegerValue
bindNamedParam:toInt64AsNSNumber:
rangeWithName:
flightID
setDeletedWithRelatedUniqueIdentifier:
rangeWithStart:startTimeZone:end:endTimeZone:
syncHistoryToCloud
initWithAirline:flightNumber:boardingTime:flightDuration:departureAirportGate:arrivalAirportGate:
airport
setModifyRecordZonesCompletionBlock:
bindNamedParam:toInt64AsNonnullNSNumber:
loadHTMLString:baseURL:
unsignedLongLongValue
intent
rangeWithStartDate:startTimeZone:endDate:endTimeZone:
clientWithIdentifier:
poiFilters:
isNaturalLanguageEventAttributes
countByEnumeratingWithState:objects:count:
isNaturalLanguageSuggestedEventCalendar
deleteSearchableItemsWithDomainIdentifiers:completionHandler:
initWithAirport:terminal:gate:
bindNamedParam:toInteger:
unsignedLongValue
setModifyRecordsCompletionBlock:
setDepartureAirportCode:
intentResponse
pointerValue
JSONResult
removeAllObjects
bindNamedParam:toNSArray:
unsignedShortValue
rankedGlobalSuggestionsFromContext:contactsOnly:
flightNumber
setDepartureAirportName:
dropOffLocation
setMonth:
initWithAppleMailMessageId:snippet:core:signature:detectedLanguage:isIncomingMessage:score:startDate:startDateCore:endDate:endDateCore:
eventDuration
countForObject:
deleteSearchableItemsWithIdentifiers:completionHandler:
bindNamedParam:toNSData:
sqliteDatabaseWithFilename:contentProtection:errorHandler:error:
isNull
dtend
setDepartureDateTime:
intentResponseUserActivityString:
country
isNullForColumnName:table:
initWithArray:
closeFile
flightRequestForQuery:date:appBundleId:
dtstamp
systemTimeZoneForDate:
bindNamedParam:toNSDictionary:
countryCode
deleteSessionsWithBundleID:
flightResults
dtstart
startConfigurationWithCompletionHandler:
cloudKitPersistedState
bindNamedParam:toNSIndexSet:
bindNamedParam:toNSSet:
deleteSessionsWithDomainIdentifiers:bundleID:
setTzid:
postNotificationName:object:userInfo:deliverImmediately:
setNamePrefix:
interactionBundleId:
dueDate
isPOIFilters
hasFloatingTimeZone
initWithAssetTypeDescriptorPath:defaultBundlePath:matchingKeysAndValues:notificationQueue:logHandle:enableAssetUpdates:
messageForObjectID:
postalAddress
bindNamedParam:toNSString:
scheme
setNameSuffix:
deleteSessionsWithIdentifiers:bundleID:
startDateComponents
dueDateComponents
cnContactIdentifier
setUnderlyingQueue:
initWithAssetTypeDescriptorPath:defaultBundlePath:matchingKeysAndValues:notificationQueue:logHandle:enableAssetUpdates:purgeObsoleteInstalledAssets:
aliases
messageForSearchableItemIdentifier:
createAfter:onCreate:
setDisplayName:
setNanosecond:
score
postalAddress:components:label:extractionInfo:recordId:
numberOfNonZeroValues
floatingRangeWithLocalStartDate:endDate:
interactionContactIdentifier:
removeDKIMSignatureHeaders:
removeDependency:
initWithBase64EncodedData:options:
setNavigationDelegate:
bindNamedParam:toNonnullNSData:
eventHash:
bindNamedParam:toNonnullNSString:
initWithMessageId:mailboxId:score:isSalient:creationDate:
numberOfRanges
floatingRangeWithUTCStart:end:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
eventIdentifier
initWithBase64EncodedString:options:
_pas_componentsJoinedByString:
initWithMessageId:mailboxId:score:isSalient:gteSaliency:isCounted:creationDate:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
postalAddressFromString:
interactionGroupId:
dueDateTimestamp
floatingRangeWithUTCStartDate:endDate:
removeEvent:span:commit:error:
tabularRegions
searchQueryForSearchTerm:preferredKinds:sendingAddress:recentsDomain:
removeFromList
bindNamedParamToNull:
setUpdatedFields:
messageIdHeaderValuesFromHeaders:
_pas_enumerateChunksOfSize:usingBlock:
tagForLabel:value:
eventMetadata
removeIndex:
createFileAtPath:contents:attributes:
postalCode
setUserAccountsPersistedState:
interactionId:
flushMessages
numberWithBool:
initWithBlock:
_pas_filteredArrayWithIndexedTest:
messageIdentifier
removeIndexes:
updateEventToEvent:
eventMetadata:
_pas_filteredArrayWithTest:
precomposedStringWithCanonicalMapping
setUserActivity:
dueLocationTrigger
code
tagSchemes
numberWithDouble:
setDomains:
searchableItem
initWithBlock:idleTimeout:
_pas_leftFoldWithInitialObject:accumulate:
searchableItemIsEligibleForDissectorPipeline:targetPluginsCustomAttributeName:
eventMetadataFromEKEvent:
followUpComputeCustomTimeRangeForLanguage:
predicate
dueLocationType
startTimeZone
setDonatedEvent:
allDomains
numberWithFloat:
setUserInfo:
reactAfterChangesToKeyPath:ofObject:usingBlock:
removeItemAtPath:error:
searchableItemIsEligibleForHarvesting:eligibleExceptForAge:
predicateDescriptorForRemindersWithCompleted:
eventName
_pas_mappedArrayWithIndexedTransform:
initWithBool:
setDueDateComponents:
numberWithInt:
targetApplicationRecord
initWithMigrationObjects:
_pas_mappedArrayWithTransform:
predicateDescriptorForRemindersWithDueDateBetween:and:
eventQueryWithPredicate:eventStreams:offset:limit:sortDescriptors:
bindParam:toDoubleAsNSNumber:
comment
removeLastObject
searchableItemIsEligibleForHarvestingWithGetterBlock:bundleIdentifier:eligibleExceptForAge:
numberWithInteger:
initWithBundleId:localizedShowInString:userActivity:intent:sourceURL:
setUsesGroupingSeparator:
searchableItemIsOutgoing:
initWithNSData:
read:maxLength:
updateList:
predicateDescriptorForRemindersWithTitleContains:
bindParam:toInt64:
_pas_mappedSetWithTransform:
removeObject:
setNegativePrefix:
numberWithLong:
setUsesSignificantDigits:
predicateForContactsMatchingEmailAddress:
commit:
bindParam:toInt64AsNSNumber:
_pas_proxyArrayByAppendingArray:
readDataOfLength:
interactionTeamId:
numberWithLongLong:
removeObjectAtIndex:
searchableItemIsStoredEncryptedWithGetterBlock:bundleIdentifier:
initWithBundleIdentifier:
setValue:forComponent:
messageObjectIDForURL:
createWithImmediateResult:
setValue:forCustomKey:
bindParam:toNSData:
predicateForContactsMatchingFullTextSearch:containerIdentifiers:groupIdentifiers:
readObjectWithPlist:chunks:context:
setEmailHeaders:
isReminderMetadata
removeObjectForKey:
numberWithUnsignedChar:
allKeys
initWithBundleIdentifier:allowPlaceholder:error:
_pas_proxyArrayReversed
seatNumber
updateReminder:
URLQueryAllowedCharacterSet
predicateForContactsMatchingName:
setValue:forHTTPHeaderField:
taskWithRequest:completion:
bindParam:toNSString:
createWithImmediateResult:error:
_pas_proxyArrayUsingObjectAtIndexBlock:andCountBlock:
URLWithString:
numberWithUnsignedInt:
teamId
creationDate
isReservationContainerReference
eventWithIdentifier:
initWithName:bundleIdentifier:
initWithBundleIdentifier:domainSelection:
bindParam:toNonnullNSString:
seatRow
messageRepository
allMessages
setValue:forKey:
removeObjectsAtIndexes:
followUpTimeRangeForDebugging
status
_pas_proxyArrayWithMapping:
predicateForContactsMatchingPhoneNumber:
numberWithUnsignedInteger:
allObjects
initWithName:iataCode:icaoCode:
isReservationItemReferences
interfaceWithProtocol:
predicateForContactsWithIdentifiers:
initWithName:protectionClass:bundleIdentifier:
bindParamToNull:
removeObjectsInArray:
localTimeZone
setNotes:
realtimeContactForFields:updatedFields:addedToCuratedContact:
_pas_proxyComponentsJoinedByString:
UUID
eventWithRecordId:origin:uniqueKey:opaqueKey:title:notes:start:startTimeZone:end:endTimeZone:isAllDay:creationDate:lastModifiedDate:locations:tags:URL:
seatSection
realtimeContactForNewContact:
numberWithUnsignedLong:
templateException
removeObjectsInRange:
seatingType
messageUnits
initWithName:reason:userInfo:
initWithBundleIdentifier:purgedUniqueIdentifiers:
_pas_proxyStringByConcatenatingStrings:
UUIDString
stmt
internalEntityId
setValue:forKey:fromRecordId:
numberWithUnsignedLongLong:
isSalient
predicateForEventCreatedFromSuggestionWithOpaqueKey:
removeObserver:
predicateForEventsWithStartDate:endDate:calendars:
_pas_retainsConmingledBackingStore
initWithBundleIdentifier:uniqueIdentifiers:
interrupted
numberWithUnsignedShort:
removeObserver:forKeyPath:context:
seconds
setValueIfNotPresent:forKey:fromRecordId:
intersectSet:
predicateForEventsWithStartDateAfter:
initWithBytes:length:
_pas_shuffledArrayUsingRng:
terminal
localeIdentifier
_pas_stringBackedByUTF8CString
initWithNamedHandle:
secondsFromGMT
setValueIfNotPresentWithDict:fromRecordId:
intersectsIndexesInRange:
hasNonTrivialInfo
predicateForEventsWithStringValue:
setEnvironment:
numericValue
allValues
initWithBytes:length:encoding:
setNumberStyle:
localeWithLocaleIdentifier:
secondsFromGMTForDate:
_pas_stringWithDataNoCopy:encoding:nullTerminated:
formUnionWithCharacterSet:
messageWithIPMessage:
realtimeEventForCanceledEvent:eventIdentifier:harvested:
intersectsSet:
predicateForKey:inCollection:
allocWithZone:
removeSuggestedEventCalendar
initWithBytesNoCopy:length:deallocator:
isSchemaOrg
objCType
predicateSatisfyingAllSubpredicates:
hasPath
realtimeEventForDuplicateEvent:eventIdentifier:harvested:
commitTemporaryFile
securityMethod
initWithBytesNoCopy:length:encoding:freeWhenDone:
allowAgeBasedPruning
_pas_unproxy
invalidate
objectAtIndex:
setObject:atIndexedSubscript:
localizations
localizedApplicationName
departureActualTime
messageWithMessageId:fromSource:
realtimeEventForExtractionExceptionWithSourceMessageId:
eventsMatchingPredicate:
formatOptions
invalidateAndCancel
initWithBytesNoCopy:length:freeWhenDone:
currentCalendar
objectAtIndexedSubscript:
predicateSatisfyingAnySubpredicate:
allowAnyDomainForMarkup
setWebpageURL:
initWithObjects:
predicateWithBlock:
rentalCar
departureAirport
realtimeEventForNearDuplicateEvent:harvested:
isSenderSignificant
setWebsiteDataStore:
setObject:forKeyedSubscript:
allowGeocode
localizedCapitalizedString
rentalCompanyName
initWithObjects:forKeys:
objectEnumerator
seekToEndOfFile
aa_isAccountClass:
setException:
textContentNoCopy
predicateWithFormat:
realtimeEventForNewEvent:
currentContext
localizedCaseInsensitiveContainsString:
blockOperationWithBlock:
predict:
rentalDuration
localizedDescription
departureAirportGate
compare:options:
realtimeEventForNewEvent:harvested:
initWithObjectsAndKeys:
textContentNoCopyRetainingBackingBuffer:
replaceBytesInRange:withBytes:length:
currentEnvironment
initWithCString:encoding:
setWithArray:
boardingTime
abbreviation
realtimeEventUpdateToEvent:withNewValues:harvested:
absoluteRange
localizedLowercaseString
invertedSet
currentHandler
initWithCalendarIdentifier:
objectID
allowUnverifiedSourceForMarkup
updatedFields
uppercaseString
localizedNameWithPreferredLocalizations:
setYear:
messagesAppUsageLevel:
absoluteString
departureBoatTerminalLocation
boatName
initWithCapacity:
currentLocale
replaceCharactersInRange:withString:
alphanumericCharacterSet
departureBusStopLocation
objectsPassingTest:
boatNumber
predictedLabelHypothesesForString:maximumCount:
completeWithResult:error:
initWithCategory:name:eventDuration:location:
setPath:
localizedStringForKey:value:table:
absoluteTimestamp
url:
departureGate
hasPrefix:
accessCriteriaUsingBundleIdentifierBlock:domainSelectionBlock:incontrovertiblyDeletedUniqueIdentifiersBlock:purgedUniqueIdentifiersBlock:
initWithCharacters:length:
alwaysShowCancelledEvents
boatTrip
completer
replaceOccurrencesOfString:withString:options:range:
departurePlatform
urlForEKEventFromTextMessageWithUniqueIdentifier:
onlyShowSignificantNLEvents
currentOsBuild
predictionFromFeatures:error:
receivedAt
completionDate
initWithCharactersNoCopy:length:freeWhenDone:
localizedStringFromPersonNameComponents:style:options:
URLByStandardizingPath
urlForMailMessageWithId:
currentRunLoop
initWithOptions:capacity:
onlyShowSignificantPseudoContacts
departurePublishedTime
accountIdentifier
receivedFromHandle
completionDateTimestamp
hasRecurrenceRules
preferences
threadDictionary
currentThread
earlierDate:
isSubclassOfClass:
ipsos_confidence
departureStationLocation
recentCalls
setFamilyName:
component:fromDate:
initWithClassNameKey:
customIdentifier
bookingTime
ipsos_eventAttributes
ef_rfc5322Unfold
foundItemCount
departureTerminal
isSubscribedHolidayCalendar
preferredLocalizationsFromArray:forPreferences:
componentForKey:
open
accountInfoWithCompletionHandler:
initWithParametersDict:
isSuggestedEventCalendar
openURL:configuration:completionHandler:
throttlingState
ipsos_eventClassificationType
preferredName
ef_trimLeadingCharactersInSet:
sendMessageWithCategory:type:payload:error:
URLByAppendingPathComponent:
componentKeys
accountProperties
exception
openUserActivity:usingApplicationRecord:configuration:completionHandler:
ipsos_eventStatus
ef_trimTrailingCharactersInSet:
setFetchAllChanges:
accountStatus
exceptionWithName:reason:userInfo:
isSupportedSearchableItemBundleIdentifier:
booleanValue
timeInterval
ekEventAvailabilityState:
deregisterUpdateHandlerAsyncWithToken:
locationWithoutPrediction
ipsos_messageUnit
components:city:state:postalCode:country:
methodForSelector:
initWithCode:userActivity:
setFetchAttributes:
timeIntervalSince1970
andPredicateDescriptorWithDescriptors:
isTemplateName
initWithConfiguration:
ipsos_usedBubblesCount
components:fromDate:
deregisterUpdateHandlerWithToken:
setFetchRecordZonesCompletionBlock:
timeIntervalSinceDate:
isTemplateShortName
operationCount
andPredicateWithSubpredicates:
accountWithIdentifier:
components:fromDate:toDate:options:
timeIntervalSinceNow
executeChangeHistoryClearRequest:error:
operatorCarrierCode
setFilterQuery:
emailAddress:label:extractionInfo:withRecordId:
accountsWithAccountTypeIdentifiers:error:
componentsFromLocaleIdentifier:
initWithContact:matchTokens:matchInfo:
isAppleMailMessageId
setFlightCarrier:
timeIntervalSinceReferenceDate
operatorFlightNumber
middleName
initWithContact:matchingRecordId:matchType:matchTokens:
componentsInTimeZone:fromDate:
hasSuffix:
dataDetectorWithTypes:error:
describeReminderDueLocationTrigger:
setFlightNumber:
lockState
executeQuery:error:
fromCalendarAttachment
recordBannerConfirmedWithContact:proposedCNContact:confirmedCNContact:inApp:confirmationUI:pet2Tracker:
setFlightStatus:
describeReminderDueLocationType:
timeZone
initWithContacts:events:reminders:
componentsJoinedByString:
sg_descriptionForMimeHeaders
stored
componentsSeparatedByCharactersInSet:
optionsWithRequestedRepresentationType:networkUsage:
recordBannerConfirmedWithEvent:proposedEKEvent:confirmedEKEvent:inApp:
initWithContainerID:options:
timeZoneForSecondsFromGMT:
lodgingBusinessLocation
sg_emailAddress
serializeAll:
isUnifiedWithContactWithIdentifier:
prepQuery:onPrep:onError:
optionsWithRequestedRepresentationType:networkUsage:includeSuggestions:
actions
street
recordBannerRejectedWithEvent:inApp:
useMLModelForContactSharing
emailHeaders
hasTimeComponent
componentsSeparatedByString:
timeZoneWithAbbreviation:
setFormatOptions:
initWithContainerIdentifier:environment:
orPredicateDescriptorWithDescriptors:
describeReminderStatus:
serialized
requestRepresentationWithOptions:completionHandler:
setFormatterBehavior:
fromExtractedDomain
isUnlocked
timeZoneWithName:
useMLModelForContacts
orderedSetWithObjects:
initWithContentType:
recordBannerShownWithContacts:events:inApp:
sg_enumerateChunksOfSize:usingBlock:
bundleForClass:
fromForwardedMessage
requestWithURL:
activityType
isClassCLocked
useMLModelForSelfId
compress:lowMemory:
origin
initWithContentsOfFile:
anyObject
initWithPrivateStreamIdentifier:storeConfig:
fromHandle
bundleID
dataTaskWithRequest:completionHandler:
useManateeSaltForHistory
initWithProvider:boatName:boatNumber:tripDuration:departureBoatTerminalLocation:arrivalBoatTerminalLocation:
string
initWithContentsOfFile:options:error:
timezone
dataTaskWithURL:completionHandler:
fromInteraction
initWithProvider:busName:busNumber:tripDuration:departureBusStopLocation:departurePlatform:arrivalBusStopLocation:arrivalPlatform:
experimentIdentifiersWithNamespaceName:
isUrl
recordContactDetailEngagementWithResolution:detailType:extractionType:modelVersion:confirmRejectUI:pet2Tracker:
originBundleId
setFoundItemsHandler:
exportedInterface
isValidAllDayRange
initWithContentsOfURL:error:
timezoneIdentifier:
fromReply
reservationContainerReference:
dataTransferByteCount
addAlarmWithTrigger:
isComplete
serverPreferredPushEnvironmentWithCompletionHandler:
dataUsingEncoding:
setPositivePrefix:
initWithContentsOfURL:options:error:
usedBubblesCount:
reservationContainerReferenceWithData:
descriptorForName:version:locale:
recordConversationTurnWithContact:received:curated:throughApp:withDetailName:withDetailExtraction:
userAccountsPersistedState
appInFocusStream
computeContactPriorsForContactIdentifiers:withTimeConstant:withInteractionMechanisms:asOf:overLookbackOf:
isCompleted
bundleIdentifiers
initWithProvider:trainName:trainNumber:tripDuration:departureStationLocation:departurePlatform:arrivalStationLocation:arrivalPlatform:
dataUsingEncoding:allowLossyConversion:
appLinksWithURL:limit:includeLinksForCurrentApplication:error:
descriptorForRequiredKeysForStyle:
userActivity
stringByAddingPercentEncodingWithAllowedCharacters:
reservationDuration
bundleRecord
minusSet:
setFromAllowListedSender:
sg_initWithNamedEmailAddress:
originWithType:sourceKey:externalKey:bundleId:fromForwardedMessage:
appendBytes:length:
dataWithBytes:length:
deserializeAttributes:andBody:
setPostalCode:
serviceProvider
stringByAppendingFormat:
minute
sg_initWithSerializedForm:
stringByAppendingPathComponent:
bundleRecordWithBundleIdentifier:allowPlaceholder:error:
appendData:
originWithType:sourceKey:externalKey:fromForwardedMessage:
setPredicate:
dataWithContentsOfFile:
initWithQueryString:attributes:
userInfo
reservationHolderName
titleGeneratedFromSubject
setGazetteers:forTagScheme:
initWithQueryString:context:
minutes
initWithCountLimit:
appendFormat:
stringByAppendingPathExtension:
dataWithContentsOfFile:options:error:
bundleWithIdentifier:
primaryRecipients
busName
setGivenName:
titleGeneratedFromTemplate
confidenceScore:
stringByAppendingString:
externalKey
fromSync
config
sessionWithConfiguration:
appendString:
initWithData:encoding:
userKnowledgeStore
addCharactersInRange:
busNumber
dataWithContentsOfURL:options:error:
fromTextMessage
initWithRecordID:action:
dataWithJSONObject:options:error:
initWithData:options:error:
extraKey:
stringByDeletingLastPathComponent
reservationItemReferences:
priorScore
itemReference
busTrip
detailForRecordId:
sg_md5Hash
appleAnchorHrefs
stringByDeletingPathExtension
setGroupingSeparator:
isContactDetail
setGteSaliency:
outputDimension
setPreferredContentMode:
dataWithPropertyList:format:options:error:
reservationItemReferencesWithData:
bytes
setAccountIdentifier:
isCounted
appleMailMessageId:fromSource:
setHTMLContentData:
setPreviousServerChangeToken:
setAccountSetup:
reservationNumber
stringByReplacingCharactersInRange:withString:
addContentAdmissionObserver:
isDNUEnabled
initWithDateComponents:
applicationRecordsForUserActivityType:limit:error:
setHTTPBody:
initWithRecordId:origin:parentURL:provider:trackingNumber:
toBool
privateCloudDatabase
detectContacts
setHTTPMethod:
applicationState
setPrimaryRecipients:
initWithRecordId:sourceUniqueIdentifier:
detectLanguageFromLanguageTags:
stringByReplacingOccurrencesOfString:withString:
reservationStatus
enabledDataclasses
isDeviceFormattedForProtection
setPrivateIndex:
toDictionary
detectLanguageFromText:
initWithRecordName:zoneID:
stringByReplacingOccurrencesOfString:withString:options:range:
encodeBool:forKey:
setProtection:
toEKEventWithStore:
fullyDissected
dateByAddingComponents:toDate:options:
recordIdWithInternalEntityId:
vacuumWithShouldContinueBlock:error:
processIdentifier
futureForObject:withKey:onCreate:
initWithRecordType:
stringByTrimmingCharactersInSet:
recordIdWithNumericValue:
sg_serialized
encodeDouble:forKey:
dateByAddingTimeInterval:
setProtectionClasses:
extractedBoat
detectLanguageFromTextHeuristicallyWithLanguages:languages:defaultLanguage:
calendar
gate
toFloatingTime:
initWithRecordType:recordID:
encodeInt64:forKey:
reservations
detectMessageEventsML
stringEncoding
isDomain
dateByAddingUnit:value:toDate:options:
validDuration
extractedBus
processInfo
toFloatingTime:withDSTAmbiguityPreferences:
outputStreamToFileAtPath:append:
stringEncodingForData:encodingOptions:convertedString:usedLossyConversion:
encodeInteger:forKey:
initWithRecordZoneIDs:
hiddenAdditionalRecipients
calendarAppUsageLevel:
initWithDisplayName:handles:handleIdentifier:
toHandles
detectNLEvents
reservedSeat
extractedCarRental
recordInteractionForEventWithInterface:actionType:harvestedEKEvent:curatedEKEvent:
setAdditionalInfo:
initWithRecordZoneIDs:configurationsByRecordZoneID:
stringForProvider:
recordInteractionForEventWithInterface:actionType:harvestedSGEvent:curatedEKEvent:
encodeObject:forKey:
setQualityOfService:
toJsonString
extractedEvent
geoLocation
geoMapItemHandle
calendarItemsWithExternalIdentifier:
setAdditionalRecipients:
dateComponents
stringFromContact:style:
recordInteractionIgnoredWithReason:
dateComponents:label:extractionInfo:withRecordId:
archivedDataWithRootObject:requiringSecureCoding:error:
encodedStringForFullName:
extractedEventCancellation
setQueryItems:
detectReminders
calendarWithIdentifier:
validate:
stringFromDate:
initWithDomain:
initWithDomain:code:userInfo:
setRadius:
encryptedValues
detectRemindersInMail
geocodeEvent:withCallback:
extractedFlight
callStatus
addDependency:
shape
stringFromNumber:
initWithReminder:notes:
extractedFood
areKeysAvailable:
encryptedValuesByKey
initWithDomainsFromArray:
callWithArguments:
recordMaybeContactFrom:withVersion:
initWithRentalCompanyName:type:make:model:rentalCarDescription:
dateFromComponents:
areModelsAvailableInLanguage:
extractedFromTemplateWithName:
detectStructuredEvents
logMessage:
callerIdForDisplay
stringFromPostalAddress:style:
initWithDominantScript:languageMap:
geocodingModeAddressOnly
HTMLContentDataNoCopy
setRecipient:
extractedFromTemplateWithShortName:
valueForComponent:
valueForCustomKey:
initWithReservationContainerReference:reservationItemReferences:
calscale
initWithDouble:
detectStructuredEventsML
endDateComponents
jsonObject
isEqualToArray:
setHiddenAdditionalRecipients:
resetSharedCachesAndModels
sharedDefaults
extractedHotel
JSONObjectWithData:options:error:
geocodingModeAddressThenPOI
toString
recordName
canBeConvertedToEncoding:
recordRejectedContact:inApp:rejectionUI:pet2Tracker:
geocodingModeAddressWithCanonicalSearch
dateInterval
parMapOnQueue:concurrencyLimit:input:f:
initWithResult:
extractedMovie
endDateUnadjustedForLegacyClients
setRecordChangedBlock:
valueForKeyPath:
setAllowGeocode:
sharedKeySetForKeys:
geocodingModePOIOnly
setHost:
setRecordIDsToDelete:
setAllowsAirPlayForMediaPlayback:
setHour:
recordSelfIdMatchWithPatternType:patternHash:nameTokenCount:nameClassification:messageIndex:
sharedManager
stringWithCharacters:length:
extractedSocial
horizontalAccuracy
initWithEKOptions:
sharedSession
horizontalUncertainty
setAllowsContentJavaScript:
stringWithContentsOfFile:encoding:error:
array
parentAccount
extractedTicket
getBytes:length:
setRecordType:
getBytes:maxLength:usedLength:encoding:options:range:remainingRange:
stringWithFormat:
initWithEmail:fullName:
cancel
host
valueWithJSValueRef:inContext:
JSGlobalContextRef
dateWithTimeIntervalSince1970:
setAllowsInlineMediaPlayback:
arrayByAddingObject:
sharedSingletonWithDirectory:
endIndexBatchWithClientState:completionHandler:
extractedTrain
getBytes:range:
setRecordZoneFetchCompletionBlock:
valueWithNewErrorFromMessage:inContext:
hour
setAllowsPictureInPictureMediaPlayback:
cancelAllOperations
recordType
arrayByAddingObjectsFromArray:
dateWithTimeIntervalSinceNow:
hours
recordWithTimezoneValue:datetimeType:
setRecordZoneIDsToDelete:
getCString:maxLength:encoding:
dateWithTimeIntervalSinceReferenceDate:
valueWithPointer:
initWithSeatSection:seatRow:seatNumber:seatingType:
endTimeZone
valueWithRange:
setRecordZonesToSave:
isEqualToDate:
shiftIndexesStartingAtIndex:by:
getCharacters:
extractionInfoWithExtractionType:modelVersion:confidence:
resolveName:
setRecordsToSave:
addDomain:
parseEmailAddressString:displayName:localPart:domain:groupList:
setArrivalAirportCode:
stringWithUTF8String:
addDomainsFromSelection:
valueWithUndefinedInContext:
arrayWithArray:
days
setISOCountryCode:
vector
prodid
tokensMatchedDetailTypeForContact:contactEntityId:detailEntityId:matchinfoData:tokens:
setArrivalAirportName:
htmlContent
arrayWithCapacity:
extractionType
referenceWithBundleId:domainId:itemIds:
keyValueCacheForPath:
getDoubleAsNSNumberForColumn:
longLongValue
setArrivalDateTime:
arrayWithContentsOfFile:
fail:
verificationContextForMessageData:error:
shouldAdmitContentFromBundleIdentifier:
initWithEnvironmentName:namedDelegatePort:queue:
longValue
resourcePath
response
getDoubleForColumn:
setRelatedUniqueIdentifier:
getDoubleForColumnName:table:
initWithSessionDescriptor:modelClass:
topDirectory
arrayWithObject:
setInProcessSuggestManager:
initWithEventStore:opaqueKey:uniqueKey:extractionGroupIdentifier:
promptJoiningString
arrayWithObjects:count:
response1
setAtomic:
shouldAllowNotificationsInCalendarWithAllowListOverride:
_createUserActivityStringsWithOptions:completionHandler:
initWithSessionInfo:userInfo:frameworksToCheck:
_crossPlatformUnifiedMeContactWithKeysToFetch:error:
responseWith:
arrivalActualTime
setIncludeDonatedContacts:
lowercaseString
propertiesForName:
detectedLanguage
setRemoteObjectInterface:
initWithShape:dataType:error:
topDirectoryWithName:createIfNeeded:
human
decimalDigitCharacterSet
responseWith:also:also:
isEqualToEntityTag:
shouldContinue
propertyListWithData:options:format:error:
setAuthorEmailAddresses:
keysSortedByValueUsingSelector:
setIndexDelegate:
contactChanges
initWithSnippet:core:signature:detectedLanguage:isIncomingMessage:score:matchFoundInBCC:
responseWithError:
decodeBoolForKey:
hv_addEntriesFromHeadersDictionary:
arrivalAirport
mailAppUsageLevel:
setAuthorNames:
modelWithContentsOfURL:configuration:error:
decodeDoubleForKey:
responsesForMessage:maximumResponses:forContext:withLanguage:options:
getInt64AsNSNumberForColumn:
protection
setIntentHandlingStatus:
setRequireFullBodySignature:
addEntriesFromDictionary:
hv_headerKeyFunctions
trackDistributionForMessage:value:
knownTimeZoneNames
capitalizedString
decodeEncodedTextToData:
verifyMessageWithContext:options:error:
arrivalAirportGate
restaurantLocation
version
contactDetail:
setRequiredUserInfoKeys:
protectionClass
hv_headerValueFunctions
trackScalarForMessage:
getInt64AsNSNumberForColumnName:table:
initWithSource:vector:
protocol
setAuthors:
parsecFlightCachingAPIBaseURL
getInt64ForColumn:
month
arrivalBoatTerminalLocation
arrivalBusStopLocation
trackScalarForMessage:count:
resultIfAvailable
vipManager
virtualMachineWithContextGroupRef:
strongToWeakObjectsMapTable
isEqualToLocation:
carrierCode
getInt64ForColumnAlias:
trackScalarForMessage:updateCount:
decodeInt64ForKey:
visits
resultNonnullWithBlock:
getInt64ForColumnName:table:
arrivalGate
initWithStartDateComponents:endDateComponents:
providerForString:
setReservations:
arrivalPlatform
mailIntelligenceSPILogging
moveItemAtPath:toPath:error:
resultType
iataCode
decodeIntegerForKey:
shouldHarvestEvents
multiArrayConstraint
tracked
resultWithBlock:
labelOf:inLanguage:
decodeObjectForKey:
vocabularyIdentifier
isEqualToNumber:
arrivalPublishedTime
mailItemIsInSent:
participantCount:
carrierName
icaoCode
multiArrayValue
getIntegerForColumn:
decodeObjectOfClass:forKey:
featureValueWithMultiArray:
wait:
arrivalStationLocation
carrierPhoneNumber
mutableBytes
registerBlockOnSuggestionsSettingsChange:
participantType
mailItemIsInTrash:
structuredLocation
decodeObjectOfClasses:forKey:
arrivalTerminal
getIntegerForColumnAlias:
getIntegerForColumnName:table:
caseInsensitiveCompare:
trainName
waitForBlock:timeoutSeconds:
structuredLocationWithoutPrediction
initWithStringValue:
mutableCopy
addIndex:
resultWithTimeout:error:
mailItemIsSPAM:
participants
initWithFirst:second:
mailItemIsValid:
initWithStructuredLocation:proximity:
partySize
waitForFuturesToComplete:withCallback:
addIndexes:
trainNumber
decodeTopLevelObjectOfClass:forKey:error:
registerChangeHistoryClientIdentifier:error:
setBookingInfoUrl:
subarrayWithRange:
initWithFirstName:middleName:lastName:fullName:prefix:suffix:recordId:origin:extractionInfo:
addIndexesInRange:
isEqualToRecordId:
waitForGroup:timeoutSeconds:
fetchLastClientStateWithCompletionHandler:
reverseObjectEnumerator
initWithFormat:
mailItemMessageIdHeaderValues:
setBundleID:
setIsCounted:
waitForSemaphore:
setSavePolicy:
contactIdentifierFromSuggestionID:
decompress:
subdataWithRange:
initWithTagSchemes:
trainTrip
fetchLocationsOfInterestOfType:withHandler:
initWithFrame:configuration:
categoryDescription
mailMessageID
setBundleIDs:
richness
pathComponents
waitForSemaphore:timeoutSeconds:
labels
pathExtension
rolloutId
initWithTagSchemes:options:
subdirectory:createIfNeeded:
getMergedPromptForMessage:conversationTurns:maxPromptLength:maxPromptWindowSeconds:promptJoiningString:
registerForLockStateChangeNotifications:
initWithSearchableItem:
initWithMessagesContentEvent:contentProtection:
initWithMessageDictionary:
spotlightBundleIdentifier
spotlightDomainIdentifier
copyWithZone:
_photoPathCustomKey
_nicknameCustomKey
isSent:
author
sender
setSender:
recipients
setRecipients:
conversationIdentifier
setConversationIdentifier:
senderIsAccountOwner
setSenderIsAccountOwner:
nickname
setNickname:
photoPath
setPhotoPath:
senderIsBusinessChat
attachmentFilename
isPotentialEventMessage
.cxx_destruct
_senderIsAccountOwner
_senderIsBusinessChat
_isPotentialEventMessage
_sender
_recipients
_conversationIdentifier
_nickname
_photoPath
_attachmentFilename
T@"CSPerson",&,V_sender
T@"NSArray",&,V_recipients
T@"NSString",&,V_conversationIdentifier
TB,V_senderIsAccountOwner
T@"NSString",&,V_nickname
T@"NSString",&,V_photoPath
TB,R,V_senderIsBusinessChat
T@"NSString",R,V_attachmentFilename
TB,R,N,V_isPotentialEventMessage
init
withPerMessageTransformer:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
toPlistWithChunks:
initWithPlist:chunks:context:
transform:
initWithPerMessageTransformer:
isEqualToConversationFlatteningTransformer:
_perMessageTranformer
schema
fromSchema:
schemaFromBusReservation:
hasKey
model
setModel:
setHasModel:
hasModel
modelAsString:
StringAsModel:
setResult:
setHasResult:
hasResult
supervision
setSupervision:
setHasSupervision:
hasSupervision
supervisionAsString:
StringAsSupervision:
dictionaryRepresentation
readFrom:
writeTo:
copyTo:
mergeFrom:
setKey:
result
_key
_model
_supervision
_result
_has
TB,R,N
T@"NSString",&,N,V_key
TB,N
Ti,N,V_model
TB,N,V_result
Ti,N,V_supervision
setExitCode:
setHasExitCode:
hasExitCode
exitCode
_exitCode
TI,N,V_exitCode
setWasSuggestedContact:
setHasWasSuggestedContact:
hasWasSuggestedContact
setWasKnownContact:
setHasWasKnownContact:
hasWasKnownContact
setApp:
setHasApp:
hasApp
appAsString:
StringAsApp:
wasSuggestedContact
wasKnownContact
_app
_wasKnownContact
_wasSuggestedContact
TB,N,V_wasSuggestedContact
TB,N,V_wasKnownContact
Ti,N,V_app
hasBundleId
bundleId
setBundleId:
_bundleId
T@"NSString",&,N,V_bundleId
sg_clonableItemAtIndex:inCodedArray:
sg_clone
_peopleFromInteraction:
parseInteraction:bundleId:
intentClassWhitelist
initWithPerson:bundleId:interactionIdentifier:groupId:date:
_harvestPerson:handle:suggestionType:bundleId:
_harvestEmail:
_harvestPhoneNumber:
_harvestSocialProfile:handle:bundleId:
grabNameIfNeededFromContactStore:
pipelineEntity
groupId
interactionIdentifier
date
displayName
nameComponents
email
socialProfile
phoneNumber
contactIdentifier
_handle
_groupId
_interactionIdentifier
_date
_displayName
_nameComponents
_email
_socialProfile
_phoneNumber
_contactIdentifier
T@"NSString",R,N,V_bundleId
T@"NSString",R,N,V_groupId
T@"NSString",R,N,V_interactionIdentifier
T@"NSDate",R,N,V_date
T@"NSString",R,N,V_displayName
T@"NSPersonNameComponents",R,N,V_nameComponents
T@"NSString",R,N,V_email
T@"SGSocialProfileDetails",R,N,V_socialProfile
T@"NSString",R,N,V_phoneNumber
T@"NSString",R,N,V_contactIdentifier
identity:
messageWithEmailKey:
parseMicrodataToJsonLd:error:
recentURLsWithLimit:
urlsFoundBetweenStartDate:endDate:excludingBundleIdentifiers:containingSubstring:flagFilter:limit:
registerURLFeedback:absoluteURL:
_updateURLs:stmt:
writeURL:
trimURLs
trimURLTableDownToLimit:deletionCount:
deleteURLsOlderThanDate:deletionCount:
urlsFoundBetweenStartDate:endDate:bundleIdentifier:
deleteURLsFromBundleIdentifier:
deleteURLsFromBundleIdentifier:groupIdentifierGlobs:
deleteURLsFromBundleIdentifier:documentIdentifiers:
transformerInstanceForLanguage:
transformerInstanceForLanguage:withObjective:
modelClassForObjective:
trainingFeaturesOf:inLanguage:
trainingFeaturesOf:inLanguage:withObjective:
newTransformerInstanceForLanguage:
featurize:
initWithModel:locale:featurizer:modelSource:
predictForInput:
trainingFeaturesOf:
featurizer
modelSource
locale
_featurizer
_modelSource
_locale
T@"<PMLMultiLabelClassifierProtocol>",R,V_model
T@"<PMLTransformerProtocol>",R,V_featurizer
T@"SGModelSource",R,V_modelSource
T@"NSString",R,C,V_locale
defaultWindowAndNgrams
defaultSessionDescriptorForModelId:featureVersion:language:windowAndNgrams:
initWithTransformer:sessionDescriptor:modelClass:
sessionDescriptor
setSessionDescriptor:
transformer
setTransformer:
modelClass
setModelClass:
_sessionDescriptor
_transformer
_modelClass
T@"PMLSessionDescriptor",&,N,V_sessionDescriptor
T@"<PMLTransformerProtocol>",&,N,V_transformer
T#,&,N,V_modelClass
_modelsAvailabeForMode:objective:language:
shouldCollectTrainingDataForObjective:language:
source
setSource:
setHasSource:
hasSource
sourceAsString:
StringAsSource:
setSignature:
setHasSignature:
hasSignature
detail
setDetail:
setHasDetail:
hasDetail
detailAsString:
StringAsDetail:
outcome
setOutcome:
setHasOutcome:
hasOutcome
outcomeAsString:
StringAsOutcome:
foundInSenderCNContact
setFoundInSenderCNContact:
setHasFoundInSenderCNContact:
hasFoundInSenderCNContact
foundInSenderCNContactAsString:
StringAsFoundInSenderCNContact:
setExtractionModelVersion:
setHasExtractionModelVersion:
hasExtractionModelVersion
setIsUnlikelyPhone:
setHasIsUnlikelyPhone:
hasIsUnlikelyPhone
extractionSignatureSource
setExtractionSignatureSource:
setHasExtractionSignatureSource:
hasExtractionSignatureSource
extractionSignatureSourceAsString:
StringAsExtractionSignatureSource:
signature
extractionModelVersion
isUnlikelyPhone
_detail
_extractionModelVersion
_extractionSignatureSource
_foundInSenderCNContact
_outcome
_source
_isUnlikelyPhone
_signature
Ti,N,V_source
TB,N,V_signature
Ti,N,V_detail
Ti,N,V_outcome
Ti,N,V_foundInSenderCNContact
TI,N,V_extractionModelVersion
TB,N,V_isUnlikelyPhone
Ti,N,V_extractionSignatureSource
foundIn
setFoundIn:
setHasFoundIn:
hasFoundIn
foundInAsString:
StringAsFoundIn:
setHasName:
setHasHasName:
hasHasName
tokens
setTokens:
setHasTokens:
hasTokens
tokensAsString:
StringAsTokens:
hasName
_foundIn
_tokens
_hasName
Ti,N,V_foundIn
TB,N,V_hasName
Ti,N,V_tokens
getReminderWithRecordId:
getReminderWithDuplicateKey:
getReminder:
commitStorageReminder:
reminderSourceKeyForDuplicateKey:
reminderDuplicateKeyForEntityId:
reminderEntityIdForDuplicateKey:
reminderOriginForPrimaryKey:
reminderEntityIdForPrimaryKey:
reminderPrimaryKeyForEntityId:
_serializeDate:
_deserializeDateComponents:
setCacheHit:
setHasCacheHit:
hasCacheHit
cacheHit
_cacheHit
TB,N,V_cacheHit
contactDetail
setContactDetail:
setHasContactDetail:
hasContactDetail
contactDetailAsString:
StringAsContactDetail:
setCorrect:
setHasCorrect:
hasCorrect
mode
setMode:
setHasMode:
hasMode
modeAsString:
StringAsMode:
correct
_contactDetail
_mode
_correct
Ti,N,V_contactDetail
TB,N,V_correct
Ti,N,V_mode
setValue:forKey:binder:
deleteValueForKey:
getForKey:binder:
setInt64NSNumber:forKey:
getInt64NSNumberForKey:
incrementInt64NSNumber:forKey:
setDoubleNSNumber:forKey:
getDoubleNSNumberForKey:
setNSString:forKey:
getNSStringForKey:
setNSDate:forKey:
getNSDateForKey:
quickTypeTriggerForContext:localeIdentifier:modelConfigPath:espressoBinFilePath:
quickTypeTriggerForContext:localeIdentifier:modelConfigPath:espressoBinFilePath:useContactNames:
_probablePriorPredictionInContext:predictedLabel:
initWithEnrichedTaggedCharacterRanges:modelOutput:
modelOutputSummary:
candidatesForLabelIndexSets:inPlainText:forTaggedCharacterRanges:
simpleCandidateResolutionFromCandidates:
caseInsensitiveContainsString:inCandidates:
cleanCandidates:outputName:label:
stripRepeatedContent:repeatedLength:
initWithPlainText:category:dataDetectorMatches:enrichedTaggedCharacterRanges:modelOutput:fromSuggestTool:
detectedEventName
detectedReservationIdWithError:
detectedStartDateComponents
detectedEndDateComponents
filterCandidateDateComponents:
detectedStartAddressWithError:
detectedEndAddressWithError:
detectedAddressForLabel:withError:
detectedStartPlaceWithError:
detectedEndPlaceWithError:
_simpleCandidateForOutputName:label:withError:
mergePostalAddressComponents:
detectedPostalAddressExtractionForTokenIndexes:dataDetectorMatches:label:
titleMapping
modelOutputSummary
predictedStringsFromModelOutput
resolveCandidates:forCategory:label:rawIndexSet:taggedCharacterRanges:
labelTokenIndexesForOutputName:label:
detectedEventPolarity
plainText
category
dataDetectorMatches
_fromSuggestTool
_category
_plainText
_dataDetectorMatches
T@"NSString",R,N,V_plainText
TC,R,N,V_category
T@"NSArray",R,N,V_dataDetectorMatches
dealloc
hasTrialMetadata
hasBackgroundTrialMetadata
setHoursSinceReference:
setHasHoursSinceReference:
hasHoursSinceReference
ctsJobConstraintsCount
ctsJobConstraints
clearCtsJobConstraints
addCtsJobConstraints:
ctsJobConstraintsAtIndex:
setCtsJobConstraints:count:
ctsJobConstraintsAsString:
StringAsCtsJobConstraints:
setHoursSinceLastIncrementalUpdate:
setHasHoursSinceLastIncrementalUpdate:
hasHoursSinceLastIncrementalUpdate
setIsSubmodelRebuilt:
setHasIsSubmodelRebuilt:
hasIsSubmodelRebuilt
setDaysAvailableDuringIncrementalUpdate:
setHasDaysAvailableDuringIncrementalUpdate:
hasDaysAvailableDuringIncrementalUpdate
setDaysProcessedDuringIncrementalUpdate:
setHasDaysProcessedDuringIncrementalUpdate:
hasDaysProcessedDuringIncrementalUpdate
setMailsProcessedDuringIncrementalUpdate:
setHasMailsProcessedDuringIncrementalUpdate:
hasMailsProcessedDuringIncrementalUpdate
setDeletedTokensCountToComplyToCappingPolicy:
setHasDeletedTokensCountToComplyToCappingPolicy:
hasDeletedTokensCountToComplyToCappingPolicy
setDeletedEmailsCount:
setHasDeletedEmailsCount:
hasDeletedEmailsCount
setRollbackedSlicesCountToComplyToPostDeletionPolicy:
setHasRollbackedSlicesCountToComplyToPostDeletionPolicy:
hasRollbackedSlicesCountToComplyToPostDeletionPolicy
setRollbackedEmailsCountToComplyToPostDeletionPolicy:
setHasRollbackedEmailsCountToComplyToPostDeletionPolicy:
hasRollbackedEmailsCountToComplyToPostDeletionPolicy
hasSubmodelsStats
setBiomeAggregationPerformanceInMilliSeconds:
setHasBiomeAggregationPerformanceInMilliSeconds:
hasBiomeAggregationPerformanceInMilliSeconds
setSubmodelsUpdatePerformanceInMilliSeconds:
setHasSubmodelsUpdatePerformanceInMilliSeconds:
hasSubmodelsUpdatePerformanceInMilliSeconds
setSubmodelsPruningForCappingPolicyPerformanceInMilliSeconds:
setHasSubmodelsPruningForCappingPolicyPerformanceInMilliSeconds:
hasSubmodelsPruningForCappingPolicyPerformanceInMilliSeconds
setCumulatedSubmodelsRollbackForPostDeletionPolicyPerformanceInMilliSeconds:
setHasCumulatedSubmodelsRollbackForPostDeletionPolicyPerformanceInMilliSeconds:
hasCumulatedSubmodelsRollbackForPostDeletionPolicyPerformanceInMilliSeconds
trialMetadata
setTrialMetadata:
backgroundTrialMetadata
setBackgroundTrialMetadata:
hoursSinceReference
hoursSinceLastIncrementalUpdate
isSubmodelRebuilt
daysAvailableDuringIncrementalUpdate
daysProcessedDuringIncrementalUpdate
mailsProcessedDuringIncrementalUpdate
deletedTokensCountToComplyToCappingPolicy
deletedEmailsCount
rollbackedSlicesCountToComplyToPostDeletionPolicy
rollbackedEmailsCountToComplyToPostDeletionPolicy
submodelsStats
setSubmodelsStats:
biomeAggregationPerformanceInMilliSeconds
submodelsUpdatePerformanceInMilliSeconds
submodelsPruningForCappingPolicyPerformanceInMilliSeconds
cumulatedSubmodelsRollbackForPostDeletionPolicyPerformanceInMilliSeconds
_ctsJobConstraints
_biomeAggregationPerformanceInMilliSeconds
_cumulatedSubmodelsRollbackForPostDeletionPolicyPerformanceInMilliSeconds
_submodelsPruningForCappingPolicyPerformanceInMilliSeconds
_submodelsUpdatePerformanceInMilliSeconds
_backgroundTrialMetadata
_daysAvailableDuringIncrementalUpdate
_daysProcessedDuringIncrementalUpdate
_deletedEmailsCount
_deletedTokensCountToComplyToCappingPolicy
_hoursSinceLastIncrementalUpdate
_hoursSinceReference
_mailsProcessedDuringIncrementalUpdate
_rollbackedEmailsCountToComplyToPostDeletionPolicy
_rollbackedSlicesCountToComplyToPostDeletionPolicy
_submodelsStats
_trialMetadata
_isSubmodelRebuilt
T@"SGMIMetricsTrialMetadata",&,N,V_trialMetadata
T@"SGMIMetricsTrialMetadata",&,N,V_backgroundTrialMetadata
TI,N,V_hoursSinceReference
TQ,R,N
T^i,R,N
TI,N,V_hoursSinceLastIncrementalUpdate
TB,N,V_isSubmodelRebuilt
TI,N,V_daysAvailableDuringIncrementalUpdate
TI,N,V_daysProcessedDuringIncrementalUpdate
TI,N,V_mailsProcessedDuringIncrementalUpdate
TI,N,V_deletedTokensCountToComplyToCappingPolicy
TI,N,V_deletedEmailsCount
TI,N,V_rollbackedSlicesCountToComplyToPostDeletionPolicy
TI,N,V_rollbackedEmailsCountToComplyToPostDeletionPolicy
T@"SGMIMetricsSubmodelsStats",&,N,V_submodelsStats
TQ,N,V_biomeAggregationPerformanceInMilliSeconds
TQ,N,V_submodelsUpdatePerformanceInMilliSeconds
TQ,N,V_submodelsPruningForCappingPolicyPerformanceInMilliSeconds
TQ,N,V_cumulatedSubmodelsRollbackForPostDeletionPolicyPerformanceInMilliSeconds
sharedInstance
enrichedTaggedCharacterRangesFromTaggedCharacterRanges:messageIsSent:
enrichedTaggedCharacterRangesFromEntity:forMessage:
isReminderDueDateComponentsInPast:givenReferenceDate:allDay:
getContactIdentifierForName:andEmail:ifMatchingPredicate:
dissectMailMessage:entity:context:
dissectTextMessage:entity:context:
initWithConversations:rtRoutineManager:
reminderTitleForContent:
extractReminderFromMailMessage:entity:
extractReminderFromOwnedMailMessage:entity:
_detectedReminderEnrichmentFromReminderMessage:parentEntity:language:parentMessage:startTimeProcessing:
extractReminderFromTextMessage:entity:store:
isValidTextMessageForProcessing:
processingLanguageForContent:
mailAddressIsAccountOwner:
reminderTitleFromMessages:forLanguage:
dueDateComponentsFromMessages:
dueLocationFromMessages:
defaultDueDateComponentsFromMessages:
isAllDay:
_validateDueDateComponents:dueLocation:forReminderMessages:
_reminderMessageForTextMessage:withEntity:extractionModel:processingLanguage:preprocessing:
conversations
_isTestMessage:
_testReminder:entity:
_reminderEnrichmentWithTitle:dueDateComponents:dueLocationType:dueLocation:dueLocationTrigger:sourceURL:reminderStatus:parentEntity:parentMessage:allDay:
storageLocationFromDueLocation:
fetchLocationOfInterestByType:name:
_conversations
_rtRoutineManager
_trialEventExtractionAssetsPath
_trialEventClassifierModelPath
_trialEventClassifierThreshold
_trialMessageProcessingLimit
_trialRateLimitInterval
initWithClientIdentifier:
updateFactors
eventExtractionAssetsPath
eventClassifierModelPath
eventClassifierThreshold
messageProcessingLimit
rateLimitInterval
_lock
setErrorCode:
setHasErrorCode:
hasErrorCode
errorCode
_errorCode
TI,N,V_errorCode
identifier
setup
processSearchableItem:
processUserAction:searchableItem:
processInteraction:bundleIdentifier:protectionClass:
purgeSpotlightReferencesWithBundleIdentifier:uniqueIdentifiers:
deleteSpotlightReferencesWithBundleIdentifier:uniqueIdentifiers:
deleteSpotlightReferencesWithBundleIdentifier:domainIdentifiers:
deleteSpotlightReferencesWithBundleIdentifier:
T@"NSString",R,N
consumerName
deleteDataDerivedFromContentMatchingRequest:
consumeRemindersContentWithContext:
initWithEntityStore:
_consumeContentParts:title:fromHandle:documentDate:isOutgoingDocument:uniqueIdentifier:domainIdentifier:bundleIdentifier:context:
extractURLsFromAttributesOfItem:handle:
extractURLsFromTextPropertiesOfItem:handle:
_urlContainerFromText:documentDate:documentTitle:handle:isOutgoingDocument:uniqueIdentifier:domainIdentifier:bundleIdentifier:
_shouldProcessSearchableItem:
_entityStore
_urlDissector
saliencyForMessageId:
topSalienciesForMailboxId:limit:
sortedSaliencyResultsRestrictedToMailboxTypes:mailboxIds:receivedOnOrAfter:ascending:limit:
checkExistsSaliencyForMessageId:
updateSaliency:saliency:
insertSaliency:
commitSaliency:
updateSaliencyCreationTimestampForTesting:timestamp:
clearSaliencyTable
setAllMailIntelligenceAsSalient
setAllMailIntelligenceAsNotSalient
mailIntelligenceStagedLogsForMessageId:
setMailIntelligenceStagedLogs:forMessageId:
markMailIntelligenceStagedLogsAsLoggedAndClearLogPayloadForMessageId:
hasActiveTrialMetadata
hasActiveAggregatedAccuracyLogForThePastFourWeeks
hasActiveAggregatedAccuracyLogSinceModelInitialization
hasBackgroundAggregatedAccuracyLogForThePastFourWeeks
hasBackgroundAggregatedAccuracyLogSinceModelInitialization
activeTrialMetadata
setActiveTrialMetadata:
activeAggregatedAccuracyLogForThePastFourWeeks
setActiveAggregatedAccuracyLogForThePastFourWeeks:
activeAggregatedAccuracyLogSinceModelInitialization
setActiveAggregatedAccuracyLogSinceModelInitialization:
backgroundAggregatedAccuracyLogForThePastFourWeeks
setBackgroundAggregatedAccuracyLogForThePastFourWeeks:
backgroundAggregatedAccuracyLogSinceModelInitialization
setBackgroundAggregatedAccuracyLogSinceModelInitialization:
_activeAggregatedAccuracyLogForThePastFourWeeks
_activeAggregatedAccuracyLogSinceModelInitialization
_activeTrialMetadata
_backgroundAggregatedAccuracyLogForThePastFourWeeks
_backgroundAggregatedAccuracyLogSinceModelInitialization
T@"SGMIMetricsTrialMetadata",&,N,V_activeTrialMetadata
T@"SGMIMetricsAggregatedAccuracyLog",&,N,V_activeAggregatedAccuracyLogForThePastFourWeeks
T@"SGMIMetricsAggregatedAccuracyLog",&,N,V_activeAggregatedAccuracyLogSinceModelInitialization
T@"SGMIMetricsAggregatedAccuracyLog",&,N,V_backgroundAggregatedAccuracyLogForThePastFourWeeks
T@"SGMIMetricsAggregatedAccuracyLog",&,N,V_backgroundAggregatedAccuracyLogSinceModelInitialization
queryForPersonHandle:startDate:endDate:contentTypes:
method
setMethod:
setHasMethod:
hasMethod
methodAsString:
StringAsMethod:
_method
Ti,N,V_method
setCustomResponsesAfterPruning:
setHasCustomResponsesAfterPruning:
hasCustomResponsesAfterPruning
customResponsesAfterPruning
_customResponsesAfterPruning
TI,N,V_customResponsesAfterPruning
addItemProp:
isReferencedBy:
itemProps
_itemProps
T@"NSArray",R,N,V_itemProps
uniqueIdentifierForMessageId:
stringByExtractingPlainTextFromHTML:tableDelimiters:stripLinks:
stringByExtractingPlainTextFromHTML:
instance
_recordExtractionEventFromSource:foundInSignature:isDDSignature:detailType:outcome:foundInCNContact:modelVersion:isUnlikelyPhone:sigSource:
_recordExtractionOutcome:detailType:fromMessage:foundInSignature:isDDSignature:detailType:detailValue:modelVersion:isUnlikelyPhone:
recordExtractionOutcome:fromMessage:foundInSignature:isDDSignature:detection:
recordExtractionOutcome:fromMessage:foundInSignature:isDDSignature:match:modelVersion:isUnlikelyPhone:
recordExtractionOutcome:fromMessage:foundInSignature:isDDSignature:match:foundInCNContact:modelVersion:isUnlikelyPhone:
recordExtractionOutcome:forDetectionsInMessage:signatureRange:isDDSignature:
recordBirthdayExtractionAccuracy:withOffset:withModelVersion:isFromCongratulation:didRegexTrigger:didResponseKitTrigger:
recordSelfIdModelScore:model:supervision:
nameForDataDetectorMatch:withValue:
tokenizeMessageContent:
recordSentContactDetailWithMessage:match:found:
initWithTracker:
pet2Tracker
setPet2Tracker:
_pet2Tracker
T@"PETEventTracker2",&,N,V_pet2Tracker
addValueForScalarKeyWithDomain:subdomain:suffix:action:value:
setValueForScalarKeyWithDomain:subdomain:suffix:action:value:
pushValueForDistributionKeyWithDomain:subdomain:suffix:action:value:
incrementValuesInDomain:subdomain:type:action:withKeysAndIncrements:extraSignature:
isSupportedEntityType:
serialize
initWithSerialized:
initWithSource:uniqueIdentifier:
isEqualToMessageKey:
uniqueIdentifier
_uniqueIdentifier
T@"NSString",R,N,V_uniqueIdentifier
T@"NSString",R,N,V_source
handleSqliteError:error:onError:db:
initWithExitCode:
exitOnErrorIndicatingIOError:
startDissectionOfMessage:inContext:
endDissectionOfMessage:inContext:
logPrewarmWithLastPrewarmTime:
startIngestOfMessages:
endIngestOfMessages:
pluginStartSetup:
pluginEndSetup:
pluginStartProcessingSearchableItem:
pluginEndProcessingSearchableItem:
pluginStartDeletion:
pluginEndDeletion:
createEnrichmentWithMatch:onParentEntity:
_createEnrichmentsForDetections:entity:
_logDeliverySenderForSenderDomain:
_logUniqueEnrichments:
sgd_clientName
initWithEntity:state:duplicateEventKey:templateShortName:
initNewEventWithEntity:
initDuplicateOfCuratedEvent:withEntity:
initUpdatedEventWithEntity:curatedEventKey:
initCancellationOfCuratedEvent:templateShortName:entity:
initExtractionExceptionWithEntity:
state
entity
duplicateEventKey
templateShortName
_state
_entity
_duplicateEventKey
_templateShortName
Ti,R,N,V_state
T@"SGEntity",R,N,V_entity
T@"SGCuratedEventKey",R,N,V_duplicateEventKey
T@"NSString",R,N,V_templateShortName
processNewConfirmOrRejectEventHashes:
processNewConfirmedOrRejectedReminderHashes:
hashesDidChange
initWithStore:
_store
suggestionsCount
combinedSuggestions
contacts
setContacts:
events
setEvents:
reminders
setReminders:
deliveries
setDeliveries:
invalidatedIdentifiers
setInvalidatedIdentifiers:
_contacts
_events
_reminders
_deliveries
_invalidatedIdentifiers
T@"NSArray",&,V_contacts
T@"NSArray",&,V_events
T@"NSArray",&,V_reminders
T@"NSArray",&,V_deliveries
T@"NSArray",&,V_invalidatedIdentifiers
defaultEKStoreProvider
initWithNewEKEventStoreGetter:callBlockWithEKEventStoreForReading:
_newEKEventStoreGetter
_callBlockWithEKEventStoreForReading
shouldRunHandlerImmediately
addDeletion:uniqueIds:
addPurge:uniqueIds:
addDeletion:domainSelection:
deleteUniqueIds
setDeleteUniqueIds:
purgeUniqueIds
setPurgeUniqueIds:
deleteDomainIds
setDeleteDomainIds:
_deleteUniqueIds
_purgeUniqueIds
_deleteDomainIds
T@"NSMutableDictionary",&,N,V_deleteUniqueIds
T@"NSMutableDictionary",&,N,V_purgeUniqueIds
T@"NSMutableDictionary",&,N,V_deleteDomainIds
logUnknownContactInformationShownCount:notShownCount:bundleId:
logMetricAutocompleteResult:recordId:contactIdentifier:bundleId:
logMetricContactSearchResult:recordId:contactIdentifier:bundleId:
logMetricAutocompleteUserSelectedRecordId:contactIdentifier:bundleId:
logMetricContactSearchResultSelected:contactIdentifier:bundleId:
logMetricSuggestedContactDetailUsed:contactIdentifier:bundleId:
logMetricSuggestedContactDetailShown:contactIdentifier:bundleId:
logMetricContactCreated:contactIdentifier:bundleId:
logMetricSearchResultsIncludedPureSuggestionWithBundleId:
logEventInteractionForEventWithUniqueKey:interface:actionType:
logEventInteractionForEventWithExternalIdentifier:interface:actionType:
logSuggestionInteractionForRecordId:interface:actionType:
isEnabledWithCompletion:
keepDirty:
noopWithCompletion:
confirmEvent:completion:
rejectEvent:completion:
confirmEventByRecordId:completion:
rejectEventByRecordId:completion:
deleteEventByRecordId:completion:
waitForEventWithIdentifier:toAppearInEventStoreWithLastModificationDate:completion:
confirmContact:confirmRejectUI:completion:
rejectContact:confirmRejectUI:completion:
confirmRecord:confirmRejectUI:completion:
rejectRecord:confirmRejectUI:completion:
confirmContactDetailRecord:confirmRejectUI:completion:
rejectContactDetailRecord:confirmRejectUI:completion:
prepareForRealtimeExtraction:
suggestionsFromSearchableItem:options:withCompletion:
harvestedSuggestionsFromSearchableItem:options:withCompletion:
messagesToRefreshWithCompletion:
updateMessages:state:completion:
reportMessagesFound:lost:withCompletion:
fullDownloadRequestBatch:withCompletion:
resolveFullDownloadRequests:withCompletion:
saliencyFromRFC822Data:withCompletion:
saliencyFromEmailHeaders:withCompletion:
topSalienciesForMailboxId:limit:withCompletion:
sortedSaliencyResultsRestrictedToMailboxTypes:mailboxIds:receivedOnOrAfter:ascending:limit:withCompletion:
lastFollowUpWarningResultsWithLimit:includingResultsFromPreviousCall:withCompletion:
identifyFollowUpWarningFromSubject:content:withCompletion:
identifyFollowUpWarningFromSubject:body:date:withCompletion:
preventUnsubscriptionOpportunitiesSuggestionsForField:toValues:withCompletion:
sortedUnsubscriptionOpportunitiesForField:minCount:minScore:limit:withCompletion:
sortedUnsubscriptionOpportunitiesForField:limit:withCompletion:
identifyWarningsFromSubject:content:toRecipients:ccRecipients:bccRecipients:originalToRecipients:originalCcRecipients:attachments:withCompletion:
identifyComposeWarningsFromSubject:content:toRecipients:ccRecipients:bccRecipients:originalToRecipients:originalCcRecipients:attachments:withCompletion:
identifyComposeWarningsFromSubject:content:attributes:toRecipients:ccRecipients:bccRecipients:originalToRecipients:originalCcRecipients:attachments:withCompletion:
reportUserEngagement:forWarning:withCompletion:
reportValue:forFeatureSetting:withCompletion:
reportMailIntelligenceFollowUpUserEngagement:forNSDataFromFollowUpWarning:withCompletion:
reportMailIntelligenceFollowUpUserEngagement:forStringFromFollowUpWarning:withCompletion:
suggestionsFromMessage:options:completionHandler:
harvestedSuggestionsFromMessage:bundleIdentifier:options:completionHandler:
harvestedSuggestionsFromMessage:bundleIdentifier:options:withCompletion:
harvestedSuggestionsFromMessages:bundleIdentifier:options:completionHandler:
requestCache
contactAggregator
clearRequestCache
fetchChangeHistory
clearChangeHistory:
foundInStringForRecordId:style:withCompletion:
contactMatchesWithContact:limitTo:withCompletion:
contactMatchesWithContactIdentifier:limitTo:withCompletion:
contactMatchesWithContactIdentifiers:limitTo:withCompletion:
emailAddressIsSignificant:withCompletion:
contactMatchesWithFullTextSearch:limitTo:withCompletion:
contactMatchesWithMessagingPrefix:limitTo:withCompletion:
contactFromRecordId:withCompletion:
cnContactMatchesForRecordId:withCompletion:
cnContactMatchesForRecordIds:withCompletion:
contactMatchesByPhoneNumber:withCompletion:
contactMatchesByEmailAddress:withCompletion:
contactMatchesBySocialProfile:withCompletion:
namesForDetail:limitTo:prependMaybe:onlySignificant:withCompletion:
namesForDetailCacheSnapshotsWithCompletion:
originFromRecordId:completion:
allContactsWithSnippets:limitTo:withCompletion:
recentURLsWithLimit:withCompletion:
urlsFoundBetweenStartDate:endDate:excludingBundleIdentifiers:limit:withCompletion:
urlsFoundBetweenStartDate:endDate:excludingBundleIdentifiers:containingSubstring:flagFilter:limit:withCompletion:
registerURLFeedback:absoluteURL:withCompletion:
eventFromUniqueId:completion:
launchInfoForSuggestedEventWithUniqueIdentifier:sourceURL:clientLocale:ignoreUserActivitySupport:ignoreMailCheck:completion:
launchAppForSuggestedEventUsingLaunchInfo:completion:
schemaOrgToEvents:completion:
allEventsLimitedTo:withCompletion:
isEventCandidateForURL:title:withCompletion:
isEventCandidateForURL:andTitle:containsSchemaOrg:withCompletion:
suggestionsFromURL:title:HTMLPayload:withCompletion:
confirmReminderByRecordId:completion:
confirmRealtimeReminder:completion:
rejectReminderByRecordId:completion:
rejectRealtimeReminder:completion:
reminderAlarmTriggeredForRecordId:completion:
allRemindersLimitedTo:withCompletion:
reminderTitleForContent:withCompletion:
logUserCreatedReminderTitle:withCompletion:
allDeliveriesWithLimit:withCompletion:
ipsosMessagesFromSearchableItems:withCompletion:
addSearchableItemMetadata:htmlData:completion:
purgeSpotlightReferencesWithBundleIdentifier:uniqueIdentifiers:completion:
deleteSpotlightReferencesWithBundleIdentifier:uniqueIdentifiers:completion:
deleteSpotlightReferencesWithBundleIdentifier:domainIdentifiers:completion:
deleteSpotlightReferencesWithBundleIdentifier:completion:
deleteInteractionsWithBundleId:completion:
deleteInteractionsWithBundleId:identifiers:completion:
deleteInteractionsWithBundleId:groupIdentifiers:completion:
eventsStartingAt:endingAt:limitTo:options:withCompletion:
eventsStartingAt:endingAt:prefix:limitTo:options:withCompletion:
eventsInFutureLimitTo:options:withCompletion:
eventFromRecordId:withCompletion:
sendRTCLogsWithCompletion:
resetConfirmationAndRejectionHistory:
rebuildNamesForDetailCache:
realtimeSuggestionsFromURL:title:HTMLPayload:extractionDate:withCompletion:
suggestionsFromRFC822Data:source:options:withCompletion:
clearCachesFully:withCompletion:
predictedToEmailAddressesWithToAddresses:ccAddresses:fromAddress:date:bounds:completion:
predictedCCEmailAddressesWithToAddresses:ccAddresses:fromAddress:date:bounds:completion:
addSearchableItems:completion:
addInteractions:bundleId:completion:
spotlightReimportFromIdentifier:forPersonHandle:startDate:endDate:completion:
removeAllStoredPseudoContactsWithCompletion:
daemonExitWithCompletion:
sleepWithCompletion:
suggestionsFromEmailContent:headers:source:options:withCompletion:
suggestionsFromSimpleMailMessage:headers:options:withCompletion:
deleteCloudKitZoneWithCompletion:
powerStateWithCompletion:
planReceivedFromServerWithPayload:completion:
evaluateRecipe:attachments:completion:
contentAdmissionBlocklistDidChange:
consumeMailContentWithContext:
consumeInteractionWithContext:
getPet2Tracker
setupManagerWithConnection:store:ctsManager:ekStoreProvider:contactStore:pet2Tracker:
_executeBoxTasks:
_setupHistoryObserver:
harvestStore
keepRealtimeAsLost
recentlyHarvestedDetailLock
lastSuggestionsFromMessageLock
lastSuggestionsFromMessageRequest
setLastSuggestionsFromMessageRequest:
lastSuggestionsFromMessageResponse
setLastSuggestionsFromMessageResponse:
messageHarvestQueue
initWithConnection:store:
initWithMessagesConnection:store:
initWithStore:ctsManager:ekStoreProvider:contactStore:pet2Tracker:
_pmlTraining
clientIsMail
clientIsMessages
storageContactFromRecordId:
_mapToPseudoEvents:
_confirmReminderByRecordId:completion:
_rejectReminderByRecordId:completion:
interfaceForRealtimeReminder:
cachedResultForKey:generateResult:validateResults:
filterPastEvents:
bumptTTLForNLEvent:
shortNamesAndRealtimeEventsFromEntity:enrichments:store:
shortNamesAndRealtimeEventsFromEntity:message:enrichments:store:
curatedEventKeyForExactMatchOfPseudoEvent:candidates:
isSGEntity:duplicateOfEKEvent:withStore:
containsNonCuratedData:
_isContactInteresting:emailEntity:enrichments:hasContactCard:
realtimeContactsFromEntity:enrichments:sourceTextMessage:store:
createLaunchIntentForStorageEvent:
_performAction:onContactDetailRecord:confirmRejectUI:completion:
_performAction:onRecord:confirmRejectUI:completion:
_performAction:onRecord:withParentConfirmation:confirmRejectUI:completion:
isSearchableItemPartOfReimport:
isSearchableItemPartOfReimportWithGetterBlock:bundleIdentifier:
enqueueSearchableItems:completion:
_harvestPeopleFromInteractions:bundleId:
_harvestReservationsFromInteractions:bundleId:queue:completion:
_processReservationInteractions:bundleId:completion:
registerForCoreSpotlightIndexing
geocodeEnrichmentsInPipelineEntity:withCompletion:
_appEnumForBundleId:
logEventInteractionForRealtimeEvent:interface:actionType:
entityFromUniqueKey:
logEventInteractionForEntity:interface:actionType:
clearContactAggregator
clearContactAggregatorConversation:
_maybeFormatString
_showInFormatStringWithLocalization:
filterRealtimeEvents:
_sendChatChangedNotificationWithDomainIdentifier:
registerForProactiveHarvesting
consumeMessagesContentWithContext:
context
clientName
_harvestStore
_connection
_history
_assetUpdateToken
_messageHarvestQueue
_ctsManager
_ekStoreProvider
_contactStore
_bundleIdToPET
_dirtyLock
_dirtyTransaction
_lastSuggestionsFromMessageRequest
_lastSuggestionsFromMessageResponse
_lastSuggestionsFromMessageLock
_settingsChangeToken
_purgeDeletionDropBox
_recentlyHarvestedDetailLock
_keepRealtimeAsLost
_bufferedInteractionsForBundleLock
_context
_clientName
T@"SGServiceContext",R,N,V_context
T@"NSString",R,N,V_clientName
withEmailMapping:linkMapping:
initWithEmailMapping:linkMapping:
isEqualToEntityMappingTransformer:
dataDetector
setDataDetector:
emailMapping
setEmailMapping:
linkMapping
setLinkMapping:
_dataDetector
_emailMapping
_linkMapping
T@"NSDataDetector",&,V_dataDetector
T@"NSString",&,V_emailMapping
T@"NSString",&,V_linkMapping
executeDailyTasksWithShouldContinue:
setSalientPredictedAsSalient:
setHasSalientPredictedAsSalient:
hasSalientPredictedAsSalient
setSalientPredictedAsNeutral:
setHasSalientPredictedAsNeutral:
hasSalientPredictedAsNeutral
setSalientPredictedAsIgnorable:
setHasSalientPredictedAsIgnorable:
hasSalientPredictedAsIgnorable
setNeutralPredictedAsSalient:
setHasNeutralPredictedAsSalient:
hasNeutralPredictedAsSalient
setNeutralPredictedAsNeutral:
setHasNeutralPredictedAsNeutral:
hasNeutralPredictedAsNeutral
setNeutralPredictedAsIgnorable:
setHasNeutralPredictedAsIgnorable:
hasNeutralPredictedAsIgnorable
setIgnorablePredictedAsSalient:
setHasIgnorablePredictedAsSalient:
hasIgnorablePredictedAsSalient
setIgnorablePredictedAsNeutral:
setHasIgnorablePredictedAsNeutral:
hasIgnorablePredictedAsNeutral
setIgnorablePredictedAsIgnorable:
setHasIgnorablePredictedAsIgnorable:
hasIgnorablePredictedAsIgnorable
salientPredictedAsSalient
salientPredictedAsNeutral
salientPredictedAsIgnorable
neutralPredictedAsSalient
neutralPredictedAsNeutral
neutralPredictedAsIgnorable
ignorablePredictedAsSalient
ignorablePredictedAsNeutral
ignorablePredictedAsIgnorable
_ignorablePredictedAsIgnorable
_ignorablePredictedAsNeutral
_ignorablePredictedAsSalient
_neutralPredictedAsIgnorable
_neutralPredictedAsNeutral
_neutralPredictedAsSalient
_salientPredictedAsIgnorable
_salientPredictedAsNeutral
_salientPredictedAsSalient
TI,N,V_salientPredictedAsSalient
TI,N,V_salientPredictedAsNeutral
TI,N,V_salientPredictedAsIgnorable
TI,N,V_neutralPredictedAsSalient
TI,N,V_neutralPredictedAsNeutral
TI,N,V_neutralPredictedAsIgnorable
TI,N,V_ignorablePredictedAsSalient
TI,N,V_ignorablePredictedAsNeutral
TI,N,V_ignorablePredictedAsIgnorable
inputFromTaggedCharacterRanges:usingInputMapping:forModel:pflTraining:hasEvent:
_init
updateAll
modelInferences:
modelInferences:pflTraining:hasEvent:
loadModel
supportedProviders
isSenderSupportedForExtraction:
isSenderSupportedForShadowExtraction:
isSenderSupportedForMLDefaultExtraction:
isSenderSupportedForPFLTraining:
engineConfig
inputMapping
outputMapping
maxMergeDistanceForSection:label:
stripRepeatedContentForSectionLength:label:
addressComponentThreshold
gazetteer
_inputMapping
_outputMapping
_supportedProviders
_engineConfig
documentSource
setDocumentSource:
setHasDocumentSource:
hasDocumentSource
documentSourceAsString:
StringAsDocumentSource:
setHighPriority:
setHasHighPriority:
hasHighPriority
setReceivedOnBattery:
setHasReceivedOnBattery:
hasReceivedOnBattery
setHarvestedOnBattery:
setHasHarvestedOnBattery:
hasHarvestedOnBattery
harvestSource
setHarvestSource:
setHasHarvestSource:
hasHarvestSource
harvestSourceAsString:
StringAsHarvestSource:
highPriority
receivedOnBattery
harvestedOnBattery
_documentSource
_harvestSource
_harvestedOnBattery
_highPriority
_receivedOnBattery
Ti,N,V_documentSource
TB,N,V_highPriority
TB,N,V_receivedOnBattery
TB,N,V_harvestedOnBattery
Ti,N,V_harvestSource
initWithData:
regexpIdsThatMightMatchUtf8:
_data
_rpns
_nrpns
sharedSingletonInstance
defaultInstance
_logCallInteractions:
initWithHarvestStore:xpcActivityManager:
registerForCTS
serviceContext
_registerMobileAssetMetadataDownloadActivity
_performMobileAssetMetadataDownloadActivity:
_registerForCollectWeeklyStats
_performCollectWeeklyStats:
_registerForCTSTrimActivity
_performTrimActivity:
_registerForCTSVacuumActivity
_performVacuumActivity
_registerForCTSIdentityAnalysisActivity
_performIdentityAnalysisActivity:
_registerForCTSSendRTCActivity
_performSendRTCActivity:
_registerForContactDetailCacheRebuildActivity
performContactDetailCacheRebuildActivity:
_registerProcessPendingGeocodesActivity
_performProcessPendingGeocodesActivity:
_registerProcessPendingVerificationActivity
_performProcessPendingVerificationActivity:overrideVerificationStatus:
_registerMailIntelligenceTasksActivity
_performMailIntelligenceTasksActivity:
_registerHarvestedURLMetricUploadActivity
_performHarvestedURLMetricUploadAcitivity:
processSearchableItem:pipeline:context:harvestMetrics:
processTextMessage:pipeline:context:harvestMetrics:
processMailMessage:headers:pipeline:context:harvestMetrics:
_processMessage:pipeline:context:harvestMetrics:
processSearchableItem:pipeline:context:
processSearchableItemForTesting:
hasAlreadyHarvestedSearchableItem:
_shouldDissectContentWithUniqueIdentifier:domainIdentifier:bundleIdentifier:headers:accountIdentifier:
waitForXpcActivityQueue
_ctsCriteriaState
_geocodeLock
_verificationLock
_lastFrontfillFinishTime
_xpcActivityManager
dedupe:bucketer:resolver:
bucketerWithMapping:
bucketerWithLabeledBuckets:
bucketerWithEqualityTest:
resolveByPairs:
resolveByScoreBreakTiesArbitrarily:
resolveSGContactDetailsPreferringPhraseExtractionsAndLabels
eventsHaveIdenticalReservationIds:ekEventFromStore:
eventsHaveSimilarTitles:ekEventFromStore:
enumerateEKEventsForPseudoEventBySimilarStartAndEndTime:store:usingBlock:
_dedupePostalAddresses:
_dedupeGenericContactDetails:
dedupeContactDetails:
splitContactDetailsByType:
systemTimeZoneWithWindowsName:
systemTimeZoneFromString:
gmtOffsetTimeZoneWithHour:withMinute:forDate:
gmtOffsetTimeZoneFromString:forDate:
firstValueOfPropertyForName:
copyDateWithNewComponents:
validatedCompleteDateTime
gmtOffsetTimeZoneWithCalendar:withEvent:
systemTimeZoneWithCalendar:withEvent:withCorrectnessFlag:
attendeeEmailAddresses
enrichmentWithParentEntity:withCalendar:
enrichmentWithParentEntity:withCalendar:withCorrectnessFlag:
baseAttachmentFrom:includingEvents:withRanges:
replaceTzid:inDocument:fromOriginal:withBaseLength:withEventRange:
splitAttachment:intoEvents:withTimezones:
downloadedCalendarAttachmentsFrom:
shouldIgnoreEntity:
isRequestFromSharedCalendarProvider:
hasCalendarAccountForOneOf:
accountTypeFor:
enrichmentsFromData:inDocument:parentMessage:parentEntity:
_dissectMessage:entity:
_accountsAdapter
emailAddresses
setEmailAddresses:
postalAddresses
setPostalAddresses:
phoneNumbers
setPhoneNumbers:
instantMessageAddresses
setInstantMessageAddresses:
socialProfiles
setSocialProfiles:
birthday
setBirthday:
_emailAddresses
_postalAddresses
_phoneNumbers
_instantMessageAddresses
_socialProfiles
_birthday
T@"NSArray",&,N,V_emailAddresses
T@"NSArray",&,N,V_postalAddresses
T@"NSArray",&,N,V_phoneNumbers
T@"NSArray",&,N,V_instantMessageAddresses
T@"NSArray",&,N,V_socialProfiles
T@"SGContactDetail",&,N,V_birthday
T@"SGContactDetail",&,N,V_photoPath
contactFromContactEntity:
contactWithMasterEntityId:
mergeAll:
isEqualToStorageContact:
addProfile:
profiles
allNames
name
canMerge:
merge:
reload
loadAllDetailsFrom:
loadPhoneDetailsFrom:
loadAddressDetailsFrom:
loadEmailAddressDetailsFrom:
loadBirthdayDetailsFrom:
convertToContact:
convertToContact:sourceEntity:enrichments:
bestProfile
hasProfileFromInteraction
hasProfileFromTextMessage
masterEntityId
recordId
internalDetectedDetails
setInternalDetectedDetails:
_profiles
_masterEntityId
_recordId
_internalDetectedDetails
T@"SGContactDetailsHolder",&,V_internalDetectedDetails
Tq,R,N,V_masterEntityId
T@"SGRecordId",R,N,V_recordId
migrations
skipFromZeroSchema:
_beforeSystemInitialization
start
standardizeCSPersons
_processHistoricalDataRequestsForPluginIdentifier:result:
processSearchableItem:harvestMetrics:
_processSearchableItem:harvestMetrics:userAction:
processInteraction:bundleIdentifier:protectionClass:completion:
_plugins
setPlugins:
pluginIdentifiers
storeStatsCounterWithKey:value:
loadStatsCounterWithKey:
incStatsCounterWithKey:byValue:
incStatsCounterWithKey:
_logConfirmPercentWithConfirmCount:rejectCount:domain:suffix:
logConfirmPercentAfterContactConfirmation
logConfirmPercentAfterContactRejection
logConfirmPercentAfterContactDetailConfirmation
logConfirmPercentAfterContactDetailRejection
primaryICloudCalendarAccount
automaticallyNotifiesObserversForKey:
accountsStoreDidChange:
readCachedAccounts
setCachedAccounts
refreshCacheFromAccountsService
cancelUpdateTimer
setUpdateTimerWithDelaySeconds:
registerNotificationObserver
removeNotificationObserver
hasCalendarAccount:
serverIdentifierForAccount:
_usernamesCache
_accountStore
_cachedPrimaryICloudAccount
_updateQueue
_updateSource
_updateTimerIsSet
_updateTimerQueue
_updateTimerSource
addEvent:
cancelEvent:
confirmEventFromThisDevice:
confirmEventFromOtherDevice:
rejectEventFromThisDevice:
rejectEventFromOtherDevice:
orphanEvent:
calendarDeleted
addEvents:
cancelEvents:
addContact:
confirmContact:
rejectContact:
removeAllStoredPseudoContacts
addReminder:
confirmReminderFromThisDevice:
rejectReminderFromThisDevice:
reminderAlarmTriggeredFromThisDevice:
confirmReminderFromOtherDevice:
rejectReminderFromOtherDevice:
orphanReminder:
confirmOrRejectContact:
overwriteEvent:
T@"NSArray",R,N
T@"NSArray",R,N,V_reminders
_remindersFoundInAppsListInREMStore:
reminderPredicateForReminder:
reminderHasDuplicate:usingStore:
remindersCreatedBetweenStartDate:endDate:
constructNotesForReminder:
initWithSGSqlEntityStore:
initWithSGSqlEntityStore:andREMStore:
rejectReminder:
sourceUniqueIdentifierForStorageReminder:
_saveReminder:usingReminderStore:
_deleteReminder:usingReminderStore:
_remRemindersAssociatedWithStorageReminder:remStore:
_remRemindersAssociatedWithTitle:sourceUniqueIdentifier:usingStore:
store
setStore:
_reminderStore
T@"SGSqlEntityStore",W,N,V_store
mailAttachmentHistogramType
hasLocale
hasLang
setTimeDifferenceFromReceptionToSaliencyInferenceInSeconds:
setHasTimeDifferenceFromReceptionToSaliencyInferenceInSeconds:
hasTimeDifferenceFromReceptionToSaliencyInferenceInSeconds
setSenderConnectionScore:
setHasSenderConnectionScore:
hasSenderConnectionScore
clearMailAttachmentHistograms
addMailAttachmentHistogram:
mailAttachmentHistogramsCount
mailAttachmentHistogramAtIndex:
setNbCharactersInMailSubject:
setHasNbCharactersInMailSubject:
hasNbCharactersInMailSubject
setNbTokensInMailSubject:
setHasNbTokensInMailSubject:
hasNbTokensInMailSubject
setPreviousInteractionOnConversationInMinutes:
setHasPreviousInteractionOnConversationInMinutes:
hasPreviousInteractionOnConversationInMinutes
setPreviousInteractionFromUserOnConversationInMinutes:
setHasPreviousInteractionFromUserOnConversationInMinutes:
hasPreviousInteractionFromUserOnConversationInMinutes
hasActive
hasBackground
setLocale:
lang
setLang:
timeDifferenceFromReceptionToSaliencyInferenceInSeconds
senderConnectionScore
mailAttachmentHistograms
setMailAttachmentHistograms:
nbCharactersInMailSubject
nbTokensInMailSubject
previousInteractionOnConversationInMinutes
previousInteractionFromUserOnConversationInMinutes
active
setActive:
background
setBackground:
_active
_background
_lang
_mailAttachmentHistograms
_nbCharactersInMailSubject
_nbTokensInMailSubject
_previousInteractionFromUserOnConversationInMinutes
_previousInteractionOnConversationInMinutes
_senderConnectionScore
_timeDifferenceFromReceptionToSaliencyInferenceInSeconds
T@"NSString",&,N,V_locale
T@"NSString",&,N,V_lang
TI,N,V_timeDifferenceFromReceptionToSaliencyInferenceInSeconds
Tf,N,V_senderConnectionScore
T@"NSMutableArray",&,N,V_mailAttachmentHistograms
TI,N,V_nbCharactersInMailSubject
TI,N,V_nbTokensInMailSubject
TI,N,V_previousInteractionOnConversationInMinutes
TI,N,V_previousInteractionFromUserOnConversationInMinutes
T@"SGMIMetricsInferenceAndGroundTruth",&,N,V_active
T@"SGMIMetricsInferenceAndGroundTruth",&,N,V_background
evaluate:enablePreFiltering:config:error:
read:fromStore:
instanceForNameDetector
withFullNameMapping:firstNameMapping:lastNameMapping:andPossessive:
withFullNameMapping:firstNameMapping:lastNameMapping:minimumConfidence:confidenceMapper:tokenToIgnore:andPossessive:
initWithNameMappings:minimumConfidence:confidenceMapper:tokenToIgnore:forNameDetector:
nameMappingForToken:withConfidence:
isPossessive:
isEqualToNameMappingTransformer:
_forNameDetector
_nameMappings
_tokenToIgnore
_minimumConfidence
_confidenceMapper
processConversation:threadLength:options:
processConversation:options:
setName:
setContext:
contextRange
setContextRange:
extractionInfo
setExtractionInfo:
_name
_extractionInfo
_contextRange
T@"NSString",C,N,V_name
T@"NSString",C,N,V_context
T{_NSRange=QQ},N,V_contextRange
T@"SGExtractionInfo",&,N,V_extractionInfo
searchableItemIdTripleWithBundleId:domainId:uniqueId:
initWithBundleId:domainId:uniqueId:
isEqualToSearchableItemIdTriple:
domainId
uniqueId
_domainId
_uniqueId
T@"NSString",R,N,V_domainId
T@"NSString",R,N,V_uniqueId
setCreationTimestamp:
setLastModifiedTimestamp:
isInhuman
initWithDuplicateKey:title:
initWithEmailMessage:
initWithTextMessage:
initWithMessage:
initWithIntentPersonAtDate:bundleId:handle:displayName:
initWithInteraction:fromBundleIdentifier:
initWithInteraction:identifier:fromBundleIdentifier:
initWithInteractionIdentifier:fromBundleIdentifier:
_initWithInteractionIdentifier:fromBundleIdentifier:creationTime:
snippetsContent
enrichments
addEnrichment:
addEnrichments:
addOrReplaceEventEnrichment:
addOrReplacePreferredEnrichment:
externalEnrichments
flushExternalEnrichmentsUponDealloc
addExternalEnrichment:
removeExternalEnrichmentAtIndex:
taggedCharacterRanges
addTaggedCharacterRanges:
stripEventInformation
addDetection:forIdentity:extractionInfo:
addDetectedPostalAddress:forIdentity:context:contextRangeOfInterest:extractionInfo:
addDetectedPhoneNumber:forIdentity:context:contextRangeOfInterest:extractionInfo:
addEmailAddressEnrichment:
addBirthdayEnrichment:
addDetectedEmailAddress:forIdentity:context:contextRangeOfInterest:extractionInfo:
birthday:forIdentity:context:contextRangeOfInterest:extractionInfo:
addDetectedBirthday:forIdentity:context:contextRangeOfInterest:extractionInfo:
addInstantMessageAddressEnrichment:
addDetectedInstantMessageAddress:forIdentity:context:contextRangeOfInterest:extractionInfo:
addSocialProfileEnrichment:
addDetectedSocialProfile:forIdentity:context:contextRangeOfInterest:extractionInfo:
contactDetailsWithType:
addresses
enumeratePeople:
_lazyCheckMessageForHumanness
inhumanFeatures
requestFullDownload
hasFullDownloadBeenRequested
hasEventEnrichment
eventEnrichmentsCount
acquireDissectorLock
releaseDissectorLock
runWithDissectorLock:
setEnrichments:
setExternalEnrichments:
plainTextSigRange
setPlainTextSigRange:
contactInformationExtracted
setContactInformationExtracted:
setTaggedCharacterRanges:
emailToCanonicalEmailCache
accountType
invalidatedMessageIdentifiers
setInvalidatedMessageIdentifiers:
authorMatchingContacts
setAuthorMatchingContacts:
authorMatchingContactsKeys
setAuthorMatchingContactsKeys:
needsSourceVerification
setNeedsSourceVerification:
pendingVerification
setPendingVerification:
message
mailMessage
textMessage
interaction
harvestMetrics
setHarvestMetrics:
_enrichments
_externalEnrichments
_flushExternalEnrichments
_taggedCharacterRanges
_fullDownloadRequested
_inhumanFeatures
_dissectorLock
_messageInhumannessChecked
_dataDetectorsSignatureForTesting
_overrideDataDetectorSignatureForTesting
_lazySnippetsContent
_contactInformationExtracted
_needsSourceVerification
_pendingVerification
_emailToCanonicalEmailCache
_accountType
_invalidatedMessageIdentifiers
_authorMatchingContacts
_authorMatchingContactsKeys
_message
_mailMessage
_textMessage
_interaction
_harvestMetrics
_plainTextSigRange
T@"SGMessage",R,N,V_message
T@"SGSimpleMailMessage",R,N,V_mailMessage
T@"SGTextMessage",R,N,V_textMessage
T@"INInteraction",R,N,V_interaction
T@"SGHarvestQueueMetrics",&,N,V_harvestMetrics
T@"NSArray",&,N,V_enrichments
T@"NSArray",&,N,V_externalEnrichments
T{_NSRange=QQ},N,V_plainTextSigRange
T^{?={?=SS}BBBBB},R,N
TB,N,V_contactInformationExtracted
T@"NSArray",R,N,V_instantMessageAddresses
T@"NSArray",&,N,V_taggedCharacterRanges
fullDownloadRequested
TB,R,GhasFullDownloadBeenRequested
T@"NSMutableDictionary",R,N,V_emailToCanonicalEmailCache
T@"NSString",R,N,V_accountType
T@"NSArray",&,V_invalidatedMessageIdentifiers
T@"NSArray",&,N,V_authorMatchingContacts
T@"NSSet",&,N,V_authorMatchingContactsKeys
TB,N,V_needsSourceVerification
TB,N,V_pendingVerification
initWithEntity:
isEqualToEntity:
validate
loadOrigin:
isNaturalLanguageEvent
isCancelled
hasExtractionException
isFromForwardedMessage
setAuthor:
addTag:
removeTag:
tags
hasTag:
extraKeyTag
isPartiallyDownloaded
fieldsToSaveOnConfirmation
loggingIdentifier
setRecordId:
duplicateKey
setDuplicateKey:
sourceKey
setSourceKey:
content
setContent:
contentRangeOfInterest
setContentRangeOfInterest:
title
setTitle:
authorNickname
setAuthorNickname:
authorPhotoPath
setAuthorPhotoPath:
creationTimestamp
lastModifiedTimestamp
timeRange
setTimeRange:
structuredData
setStructuredData:
quality
setQuality:
locations
setLocations:
setMasterEntityId:
setGroupId:
setState:
operatingSystemVersion
setOperatingSystemVersion:
_tags
_tagsSnapshot
_tagsLock
_duplicateKey
_sourceKey
_content
_title
_authorNickname
_authorPhotoPath
_author
_creationTimestamp
_lastModifiedTimestamp
_timeRange
_structuredData
_quality
_locations
_operatingSystemVersion
_contentRangeOfInterest
T@"SGRecordId",&,N,V_recordId
T@"SGDuplicateKey",&,N,V_duplicateKey
T@"NSString",C,N,V_sourceKey
T@"NSString",C,N,V_content
T{_NSRange=QQ},N,V_contentRangeOfInterest
T@"NSString",C,N,V_title
T@"NSString",C,N,V_authorNickname
T@"NSString",C,N,V_authorPhotoPath
T@"CSPerson",&,N,V_author
T{SGUnixTimestamp_=d},N,V_creationTimestamp
T{SGUnixTimestamp_=d},N,V_lastModifiedTimestamp
T@"SGSimpleTimeRange",&,N,V_timeRange
T@"NSData",C,N,V_structuredData
Td,N,V_quality
T@"NSMutableSet",&,N,V_locations
Tq,N,V_masterEntityId
Tq,N,V_groupId
TI,N,V_state
T@"NSString",C,N,V_operatingSystemVersion
confirmedEventHashes
confirmedEventWithoutTimestampHashes
rejectedEventHashes
confirmedReminderHashes
rejectedReminderHashes
contactHashes
confirmedEventFieldHashes
confirmedEventWithoutTimestampFieldHashes
storageDetailHashes
dontUpdate
resetInfo
observers
cachedSalt
handleSyncedDataChanged:
emailAddress
address
dateString
sharedSuggestHistory
newTestingInstanceWithSharedKVS:
reset
resetNoFlush
initWithKVS:
identitySalt
mutableSetForKey:
setForKey:
loadResetInfo
_tellObserversHashesDidChange
_setHashes:forKey:
pushConfirmedEvents:
pushConfirmedEventsWithoutTimestamp:
pushRejectedEvents:
pushConfirmedReminders:
pushRejectedReminders:
pushConfirmedEventFields:
pushConfirmedEventWithoutTimestampFields:
pushContacts:
pushStorageDetails:
pushDontUpdate:
pushResetInfo:
_setInternalStateAccordingToKVS:
setInternalStateAccordingToKVS
pushAll:
keysForContact:
keysForStorageContact:
keysForContactDetail:ofContact:
keysForCuratedContactDetail:ofContact:
_canaryHash
modernHashesForClassicHashes:forMatching:
hashesForStrings:forMatching:
hashesForContact:forMatching:
hashesForStorageContact:forMatching:
hashesForContactDetail:fromContact:forMatching:
hashesForCuratedContactDetail:fromContact:forMatching:
identityBasedHashesForPseudoEvent:withCreationTime:
identityBasedHashesForPseudoReminder:withCreationTime:
confirmHashesForRemindersOpaqueKey:withCreationTime:forMatching:
confirmHashesForOpaqueKey:withCreationTime:forMatching:
confirmHashesForOpaqueKeyWithoutTimestamp:forMatching:
rejectHashesForOpaqueKey:forMatching:
hashesForOpaqueKey:forMatching:
hashesForPseudoEventByKey:forMatching:
confirmOrRejectDetailHashes:
confirmOrRejectDetail:forContact:
confirmOrRejectRecordForContact:
rejectContactDetailKey:
rejectRealtimeContact:
confirmEvent:
confirmStorageEvent:
writeAndPushConfirmedEventHashes:
writeAndPushConfirmedEventWithoutTimestampHashes:
rejectEvent:
rejectStorageEvent:
writeAndPushRejectedEventHashes:
confirmReminder:
writeAndPushConfirmedReminderHashes:
writeAndPushRejectedReminderHashes:
confirmReminderFromExternalDevice:
rejectReminderFromExternalDevice:
_anyHash:inSet:
hasContact:
hasStorageContact:
isValidNewEvent:
isValidCancelledEvent:
isUpdatableContact:
isConfirmedEventWithoutTimeStamp:
isConfirmedEvent:
isRejectedEvent:
removeConfirmationHistoryForEvent:
removeConfirmationHistoryForEntityWithOpaqueKey:creationTimestamp:
isValidNewReminder:
isConfirmedReminder:
isRejectedReminder:
isValidSuggestion:
addSuggestHistoryObserver:
confirmEventFromExternalDevice:
rejectEventFromExternalDevice:
hasContactDetail:forContact:
hasContactDetailKey:
_hashesForConfirmedField:value:storageEvent:forMatching:
confirmFieldValues:forStorageEvent:
hasConfirmedField:value:forStorageEvent:
pushEmptyHashesForTestingKey:
_backingKVStore
_noCloudFakeBackingKVStore
T@"NSUbiquitousKeyValueStore",R,N
synchronize
objectForKey:
dataForKey:
arrayForKey:
setObject:forKey:
setData:forKey:
setArray:forKey:
initWithBasePath:
initInMemory
cacheOfType:
replaceCacheOfType:block:
deleteValueByRecordIdSet:
deleteValueByRecordId:
_basePath
_cacheFiles
normalizeWord:
normalizeLowercaseWord:
historicalDataRequestWithPersonHandle:startDate:endDate:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithPersonHandle:startDate:endDate:
initWithRequestId:pluginIdentifier:personHandle:startDate:endDate:
setPluginIdentifier:
setRequestId:
isEqualToHistoricalDataRequest:
_dateRangeIsSubsetOfHistoricalDataRequest:
subsetOfHistoricalDataRequest:
requestId
pluginIdentifier
personHandle
startDate
endDate
_requestId
_pluginIdentifier
_personHandle
_startDate
_endDate
TQ,R,N,V_requestId
T@"NSString",R,N,V_pluginIdentifier
T@"NSString",R,N,V_personHandle
T@"NSDate",R,N,V_startDate
T@"NSDate",R,N,V_endDate
simpleMailMessageFromHeaders:
addressItemsFromEmailString:
dateFromEmailString:
decodeQuotedPrintable:charset:rfc2047UnderscoreAsSpace:
decodeEncodedWordsIn:
parseHeaders:
parseRfc822Headers:htmlContent:
parseRfc822Headers:htmlContent:source:
rangeOfBodyFromRfc822:
rangeOfHeadersFromRfc822:
uudecode:
stripTrailingASCIIHSpace:
formatFlowed:delSp:
parseParameterizedHeaderValue:
htmlFromPlainTextBody:
htmlBodyFromRfc822:headers:attachmentCallback:
parseRfc822:
parseRfc822:attachmentCallback:
matches
setMatches:
signatureRange
setSignatureRange:
_matches
_signatureRange
T@"NSArray",&,N,V_matches
T{_NSRange=QQ},N,V_signatureRange
coalesceAddress:orAppendMatch:
_lastAddressIndex
_lastAddressEndPos
_lastResult
inferredDateForDataDetectorResult:
partialDateForDataDetectorResult:
approximateTimeForDataDetectorResult:
resetUnusedScannersForTesting
detectionsInPlainText:withEligibleRegions:
detectionsInPlainText:withEligibleRegions:baseDate:
detectionsInPlainText:baseDate:
detectionsAndSignatureInText:eligibleRegions:baseDate:
_detectionsInPlainText:withEligibleRegions:ddSignature:baseDate:
stringHasDatesOrTimes:
initWithMatchType:range:labelRange:labelString:valueRange:valueString:
initWithLookupHintInDomain:range:labelRange:labelString:valueRange:valueString:qid:
initWithDetectedDate:detectedTimeZone:detectedEndDate:detectedEndTimeZone:matchType:range:labelRange:labelString:valueRange:valueString:allDay:inferredDate:approximateTime:partialDate:
initWithMatchType:range:labelRange:labelString:valueRange:valueString:postalAddressComponents:
isEqualToDataDetectorMatch:
matchType
range
labelRange
valueRange
valueString
labelString
parsecDomain
parsecWikidataQid
detectedDate
detectedTimeZone
detectedEndDate
detectedEndTimeZone
allDay
inferredDate
approximateTime
partialDate
postalAddressComponents
_allDay
_inferredDate
_approximateTime
_partialDate
_matchType
_parsecDomain
_valueString
_labelString
_parsecWikidataQid
_detectedDate
_detectedTimeZone
_detectedEndDate
_detectedEndTimeZone
_postalAddressComponents
_range
_labelRange
_valueRange
TI,R,N,V_matchType
T{_NSRange=QQ},R,N,V_range
T{_NSRange=QQ},R,N,V_labelRange
T{_NSRange=QQ},R,N,V_valueRange
T@"NSString",R,N,V_valueString
T@"NSString",R,N,V_labelString
Ti,R,N,V_parsecDomain
T@"NSString",R,N,V_parsecWikidataQid
T@"NSDate",R,N,V_detectedDate
T@"NSTimeZone",R,N,V_detectedTimeZone
T@"NSDate",R,N,V_detectedEndDate
T@"NSTimeZone",R,N,V_detectedEndTimeZone
TB,R,N,V_allDay
TB,R,N,V_inferredDate
TB,R,N,V_approximateTime
TB,R,N,V_partialDate
T@"SGPostalAddressComponents",R,N,V_postalAddressComponents
stripChevrons:
emailFrom:entity:
emailFrom:
nextMessage:entity:
nextMessage:
enumeratePreviousMessages:inEntity:usingBlock:
enumeratePreviousMessages:usingBlock:
ipsosMessageWithSearchableItem:
bucketsNames
numberArray
initWithNumberArray:
bucketizeWithSize:
isEmpty
countUpTo8KB
count8KBTo32KB
count32KBTo128KB
count128KBTo512KB
count512KBTo2MB
countOver2MB
_countUpTo8KB
_count8KBTo32KB
_count32KBTo128KB
_count128KBTo512KB
_count512KBTo2MB
_countOver2MB
TQ,R,N,V_countUpTo8KB
TQ,R,N,V_count8KBTo32KB
TQ,R,N,V_count32KBTo128KB
TQ,R,N,V_count128KBTo512KB
TQ,R,N,V_count512KBTo2MB
TQ,R,N,V_countOver2MB
isInhumanName:
_isInhumanEmailAddressPatternMatch:
isInhumanEmailAddress:
isInhumanNamedEmailAddress:
isInhumanPerson:
isInhumanPhoneNumber:
hasTooManyLongNumbers:
isInhumanBody:
areHumanHeaders:
analyzeFeatureVector:
analyzeBody:forLanguage:forDate:withCustomTimeRange:
_analyzeFeatureVector:withRegExpDictionary:forOutgoingMail:withDetectedLanguage:withRegExLanguage:withCustomTimeRange:
identifyFollowUpWarningFromSubject:content:
identifyFollowUpWarningFromSubject:body:date:
analyzeForFollowUpMailWithBody:isSent:messageId:date:
_analyzeForFollowUpMailWithBody:isSent:messageId:date:
analyzeOutgoingMailFeatureVector:
analyzeIncomingMailFeatureVector:
reportUserEngagement:forWarning:
loadLazyPlistWithBasename:
inputDictFromTaggedCharacterRanges:usingTokenMapping:forModel:
inputDictFromTaggedCharacterRanges:usingTokenMapping:forModel:pflTraining:hasEvent:
featureDimensionForInputSection:forModel:
modelOutputFromOutputMapping:modelOutput:modelInput:
argMaxForSequence:
argMaxForLastOutput:
argMaxForOutputIndex:index:shape:
enrichTaggedCharacterRangesWithModelOutput:usingInputCharacterRanges:
cleanModelAssets
cleanModelsDirectoryOfModelsNamed:
cleanLegacyModelsDirectoryOfModelsNamed:
modelsDirectoryName
currentModelURLForModelName:
strength
phones
setPhones:
setEmail:
socialProfileIdentifiers
setSocialProfileIdentifiers:
_phones
_socialProfileIdentifiers
T@"NSArray",C,N,V_phones
T@"NSString",C,N,V_email
T@"NSArray",C,N,V_socialProfileIdentifiers
compare:
second
first
_isIdentityStoreDirty
_markIdentityStoreDirty
_markIdentityStoreClean
batch:
getNewBlobsIfChanged
syncNewBlobsIfChanged
forceBlobSync
addInterdictFrom:with:
loadInterdicts
splitNeededFor:withInterdicts:curatedRecordIds:
processPseudoContactEntity:recordId:
processContactEnrichment:recordId:
rebuildIdentityTables
registerAndLinkIdentity:recordId:phones:socialProfiles:email:curated:
registerAndLinkIdentity:recordId:phones:socialProfiles:email:curated:isSent:
_joinIncompleteIdentityEmailWithOthersOfItsIlk:name:recordId:
_joinIncompleteIdentityPhonesWithOthersOfTheirIlk:name:recordId:
_joinIncompleteIdentitySocialProfilesWithOthersOfTheirIlk:name:recordId:
link:to:type:strength:
deleteByRecordId:
getAllLinks
curatedRecordIds
_linkNamelessEmailsIfAppropriate:nameToVertex:disjointSets:edges:
_linkNamelessPhonesIfAppropriate:nameToVertex:disjointSets:edges:
_linkNamelessSocialProfilesIfAppropriate:nameToVertex:disjointSets:edges:
_computeBlobsRaw:
computeBlobs
_makeBlobsFromConnectedComponents:edges:
splitBlob:withInterdicts:edges:curatedRecordIds:
unmergedCandidatesLimitedTo:
_uniqueGoodDetailMatchFrom:toDetails:nonUnique:
makeInterdictsForBlob:withContactStore:
_writeMergeBlobSnapshotForAnalysis:
_popMergeBlobForAnalysis
_isBlobAnalysisQueueEmpty
_analyzeMergeBlobsIncremental:
analyzeMergeBlobs:
patternDict
patternData
globalLanguageVersion
currentLanguages
patternInstances
useAllLanguages
regexesImmuneToDeath
initialize
changeLanguageOrPatternData
calculateCurrentLanguagesFromPreferredLocaleCodes:
forceLanguagesTo:
patternsForIdentifier:
patternsForClass:
setPatternsDictForTesting:
resetToDefaultPatternsForTesting
calculateLangResolutionOrder
useAllLanguagesAtOnce:
clearAllRegexCaches
_reinstateDeath
pauseCacheEvictionTemporarily
languagePartOfLanguageCode:
countryCodeFromLanguageCode:
fallbackLanguageCodeForCountryCode:
resetIfNeeded
rawValuesForKey:
rawValueForKey:
rawValueOrDataForKey:
stringSetMatcherForKey:
regex2ForKey:
_clearRegexCache
_becomeImmuneToDeath
_classKey
_langResolutionOrder
_compiledRegexes2
_language
_regexpKeysSeen
_localLanguageVersion
initWithPath:
dataForOffset:includeTerminator:
dataForOffset:
_fileData
hv_firstHeaderForKey:
initWithKey:value:
isEqualToSimpleMailHeaderKeyValue:
value
_value
T@"NSString",R,N,V_key
T@"NSString",R,N,V_value
initForBuilding
asDictionary
textContent
isEqualToMessage:
initWithMailContentEvent:contentProtection:
spotlightUniqueIdentifier
asCSPerson
headerDictionaryContainsInhumanHeaders:
headersContainInhumanOnes:keys:
subjectByCleaningPrefixesInSubject:
headersDictionary
_clearExistingHtml
htmlBody
setHtmlBody:
htmlContentData
setHtmlContentData:
quotedRegions
isInhumanContentNoncached
hasHumanHeaders
dataDetectorMatchesWithSignature
body
contentLength
isEqualToSimpleMailMessage:
initWithMailContentEvent:contentProtection:htmlParser:
allRecipients
senderDomain
hasRecipientFromSameDomainAsSender
setHeaders:
createNewSearchableItemWithSource:uniqueIdentifier:domainIdentifier:
createNewSearchableItem
from
setFrom:
replyTo
setReplyTo:
setTo:
setCc:
setBcc:
messageId
setMessageId:
appleMailMessageId
inReplyTo
mailboxIdentifiers
setMailboxIdentifiers:
htmlParser
hasInhumanHeaders
setHasInhumanHeaders:
setIsPartiallyDownloaded:
headers
mailingList
setMailingList:
_htmlBody
_htmlBodyCached
_htmlContentData
_htmlContentDataCached
_quotedRegionsCached
_hasHumanHeadersCached
_authorCached
_hasInhumanHeaders
_isPartiallyDownloaded
_from
_replyTo
_bcc
_messageId
_appleMailMessageId
_inReplyTo
_mailboxIdentifiers
_htmlParser
_headers
_mailingList
T@"SGSimpleNamedEmailAddress",C,N,V_from
T@"SGSimpleNamedEmailAddress",C,N,V_replyTo
T@"NSArray",C,N,V_to
T@"NSArray",C,N,V_cc
T@"NSArray",C,N,V_bcc
T@"NSString",C,N,V_messageId
T@"NSString",C,N
T@"NSData",C,N
TB,N,V_hasInhumanHeaders
TB,N,V_isPartiallyDownloaded
T@"SGSimpleNamedEmailAddress",C,N,V_mailingList
T@"NSArray",C,N,V_mailboxIdentifiers
T@"NSArray",C,N,V_headers
T@"NSString",R,N,V_appleMailMessageId
T@"NSString",R,N,V_inReplyTo
T@"HVHtmlParser",R,N,V_htmlParser
T@"NSIndexSet",R,N
_isSharingSenderLocation:senderName:
_isImageAttachment:
initWithTraining:
_dynamicLabelContentForReply:prompt:language:
trainQuickResponsesForMessage:withConversationHistory:
_localTraining
sg_stringWithDecodedEncodedWords
sg_decodeEncodedWords
initWithFeatureName:strictLowerBound:strictUpperBound:output:
initWithDictionary:
featureName
strictLowerBound
strictUpperBound
output
_featureName
_strictLowerBound
_strictUpperBound
_output
T@"NSNumber",R,V_featureName
T@"NSNumber",R,V_strictLowerBound
T@"NSNumber",R,V_strictUpperBound
T@"NSNumber",R,V_output
rulesFromFeatures:lowerBounds:upperBounds:outputs:
defaultConfig
groundTruthVersion
inferenceVersion
initWithSaliencyOverrideRules:featureNames:mean:std:groundTruthEstimatorRules:threshold:minCountToConsiderATokenAsHighlyDiscriminant:ratioToConsiderATokenAsHighlyDiscriminant:minCountToConsiderATokenAsExtremelyDiscriminant:ratioToConsiderATokenAsExtremelyDiscriminant:
saliencyOverrideRules
featureNames
mean
groundTruthEstimatorRules
groundTruthEstimatorFeatures
threshold
minCountToConsiderATokenAsHighlyDiscriminant
ratioToConsiderATokenAsHighlyDiscriminant
minCountToConsiderATokenAsExtremelyDiscriminant
ratioToConsiderATokenAsExtremelyDiscriminant
_saliencyOverrideRules
_featureNames
_mean
_std
_groundTruthEstimatorRules
_groundTruthEstimatorFeatures
_threshold
_minCountToConsiderATokenAsHighlyDiscriminant
_ratioToConsiderATokenAsHighlyDiscriminant
_minCountToConsiderATokenAsExtremelyDiscriminant
_ratioToConsiderATokenAsExtremelyDiscriminant
T@"NSArray",R,V_saliencyOverrideRules
T@"NSArray",R,V_featureNames
T@"NSArray",R,V_mean
T@"NSArray",R,V_std
T@"NSArray",R,V_groundTruthEstimatorRules
T@"NSArray",R,V_groundTruthEstimatorFeatures
T@"NSNumber",R,V_threshold
TQ,R,N,V_minCountToConsiderATokenAsHighlyDiscriminant
Td,R,N,V_ratioToConsiderATokenAsHighlyDiscriminant
TQ,R,N,V_minCountToConsiderATokenAsExtremelyDiscriminant
Td,R,N,V_ratioToConsiderATokenAsExtremelyDiscriminant
enumerateContactIdentifierBatchesUsingBlock:
enumerateContactIdentifiersUsingBlock:
profanityInTokens:forLocaleIdentifier:
_lexiconTokenForToken:inLexicon:
nicknamesForName:
unifiedContactsMatchingPredicate:keysToFetch:usingContactStore:error:
unifiedContactWithIdentifier:keysToFetch:usingContactStore:error:
unifiedMeContactWithKeysToFetch:usingContactStore:error:
identifiersPredicateFromCacheForPredicate:isCached:
enumerateContactsWithFetchRequest:usingContactStore:error:usingBlock:
enumerateContactsMatchingName:withKeysToFetch:usingContactStore:error:usingBlock:
enumerateContactsMatchingEmailAddress:withKeysToFetch:usingContactStore:error:usingBlock:
clearCache
handleExistsInContactStoreForHandle:withHandleType:
withNumericMapping:andSymbolicMapping:
initWithNumericMapping:andSymbolicMapping:
isEqualToSymbolicMappingTransformer:
numericMapping
setNumericMapping:
characterMapping
setCharacterMapping:
characterSet
setCharacterSet:
_numericMapping
_characterMapping
_characterSet
T@"NSString",&,V_numericMapping
T@"NSString",&,V_characterMapping
T@"NSCharacterSet",&,V_characterSet
initWithFilehandle:sizeFactor:keyLength:singleByteOffset:
carrierEntryForKey:
payloadLengthForKey:
seekLocationForKey:
payloadCountForKey:
stringValueForKey:fromFile:
fullMappingFromFile:
_count
_carrierEntries
_mruCarrierEntry
_payloadOffset
_totalPayloadSize
_sizeFactor
airportNameNoiseKeywords
iataCodeToCityDatabaseDict
updateFlights
updateAirports
updateCarriers
airportIataCodesForDataOffset:
airportIataCodes
namesForAirport:withDataOffset:andFileHandle:
namesForAirport:
bestLocalizedNameForAirport:
timezoneOlsonCodeForAirport:withDataOffset:andFileHandle:
timezoneOlsonCodeForAirport:
latitudeAndLongitudeForAirport:withDataOffset:andFileHandle:
latitudeAndLongitudeForAirport:
cityForIataCode:
carrierIataCodes
carrierIataCodeForCarrierName:
nameForCarrier:
airportsServicedByCarrier:flightNumber:withDataOffset:andFileHandle:
airportsServicedByCarrier:flightNumber:
airportCodeForAirportName:flightCarrier:flightNumber:outputInfos:
airportCodeForAirportName:flightCarrier:flightNumber:otherKnownFlightsToAirport:outputInfos:
_flightsFh
_flightDataOffsets
_flightsUpdateFh
_flightUpdateDataOffsets
_airportsFh
_airportDataOffsets
_airportsUpdateFh
_airportUpdateDataOffsets
_carrierNames
_carrierCodesByName
_carrierUpdateNames
_carrierUpdateCodesByName
sanitizeAirportName:
initWithCarrier:flightNo:depDesc:arrDesc:
flightno
airline
departureAirportDescription
arrivalAirportDescription
_flightno
_airline
_departureAirportDescription
_arrivalAirportDescription
T@"NSString",R,N,V_flightno
T@"NSString",R,N,V_airline
T@"NSString",R,N,V_departureAirportDescription
T@"NSString",R,N,V_arrivalAirportDescription
hasPersonFromSenderStats
hasPersonFromSenderInDyadicConversationStats
hasSubjectContentStats
hasPersonToRecipientsStats
hasPersonCCRecipientsStats
hasDomainFromSenderStats
hasConversationStats
hasListIdStats
hasAttachmentsStats
hasSubjectCountStatsStats
hasStandardMailRulesStats
hasMailboxStats
hasMailboxTypeStats
personFromSenderStats
setPersonFromSenderStats:
personFromSenderInDyadicConversationStats
setPersonFromSenderInDyadicConversationStats:
subjectContentStats
setSubjectContentStats:
personToRecipientsStats
setPersonToRecipientsStats:
personCCRecipientsStats
setPersonCCRecipientsStats:
domainFromSenderStats
setDomainFromSenderStats:
conversationStats
setConversationStats:
listIdStats
setListIdStats:
attachmentsStats
setAttachmentsStats:
subjectCountStatsStats
setSubjectCountStatsStats:
standardMailRulesStats
setStandardMailRulesStats:
mailboxStats
setMailboxStats:
mailboxTypeStats
setMailboxTypeStats:
_attachmentsStats
_conversationStats
_domainFromSenderStats
_listIdStats
_mailboxStats
_mailboxTypeStats
_personCCRecipientsStats
_personFromSenderInDyadicConversationStats
_personFromSenderStats
_personToRecipientsStats
_standardMailRulesStats
_subjectContentStats
_subjectCountStatsStats
T@"SGMIMetricsSubmodelStats",&,N,V_personFromSenderStats
T@"SGMIMetricsSubmodelStats",&,N,V_personFromSenderInDyadicConversationStats
T@"SGMIMetricsSubmodelStats",&,N,V_subjectContentStats
T@"SGMIMetricsSubmodelStats",&,N,V_personToRecipientsStats
T@"SGMIMetricsSubmodelStats",&,N,V_personCCRecipientsStats
T@"SGMIMetricsSubmodelStats",&,N,V_domainFromSenderStats
T@"SGMIMetricsSubmodelStats",&,N,V_conversationStats
T@"SGMIMetricsSubmodelStats",&,N,V_listIdStats
T@"SGMIMetricsSubmodelStats",&,N,V_attachmentsStats
T@"SGMIMetricsSubmodelStats",&,N,V_subjectCountStatsStats
T@"SGMIMetricsSubmodelStats",&,N,V_standardMailRulesStats
T@"SGMIMetricsSubmodelStats",&,N,V_mailboxStats
T@"SGMIMetricsSubmodelStats",&,N,V_mailboxTypeStats
sg_isAppleBundleIdentifier
sg_preferredApplicationRecordForUserActivityType:withTeamIdentifier:preferredBundleIdentifier:
sg_preferredApplicationRecordForURL:
sg_applicationRecordForDefaultWebBrowser
modelForPath:modelClass:
modelFromMobileAssetForEntity:type:language:class:
modelFromMobileAssetForName:language:
predictLabelForInput:
Td,R,V_threshold
T@"<PMLMultiLabelClassifierProtocol><PMLPlistAndChunksSerializableProtocol>",R,D
loadBinaryClassificationModelFromMobileAssetForObjective:language:withBlock:
initWithHead:tail:
initWithInMemoryStorage
initWithInMemoryStorageSparse
initWithDirectory:name:
_rotateIfNecessary
_rotate
forceRotate
add:
addAsync:
exists:
counts
_head
_tail
_queue
count
TI,R,N
_buf
_hashes
close
path
_path
_countPtr
_mask
detectSalientMails
logWarningSignatureStats
getMergedPrompt:withParams:
conversationForIdentifier:
addTextMessageItem:
clear
_conversationTracker
isEqualToConversationTurn:
text
senderID
timestamp
T@"NSDate",R,N
initWithTextMessage:detectedData:
language
detectedData
features
setFeatures:
_text
_senderID
_timestamp
_detectedData
_features
T@"SGTextMessage",R,V_message
T@"NSString",R,N,V_text
T@"NSString",R,N,V_senderID
T@"NSDate",R,N,V_timestamp
T@"NSString",R,V_language
T@"NSArray",R,V_detectedData
T@"NSArray",&,V_features
initWithMessages:
messages
likelyLanguage
_messages
_likelyLanguage
T@"NSArray",R,V_messages
T@"NSString",R,V_likelyLanguage
spotlightReference
destroy
destroyAndUnlinkIfEmpty
write:
read
unlink
_len
_written
_dead
schemaFromTicketedEventReservation:
schemaFromGenericTicketedEventReservation:
schemaFromMovieTicketedEventReservation:
_whitelistRegex
localizedCaseInsensitiveCompare:
inputFromTaggedCharacterRanges:usingTokenMapping:forModel:
reminderOverrides
inputTokenMapping
outputConfig
hasWhitelistedVerbInContent:
whitelistedVerbInContent:
_whitelistedVerbRangeInContent:
whitelistedRangesInContent:
modelDescription
setReminderOverridesForTesting:
_inputTokenMapping
_outputConfig
_reminderOverrides
initWithServiceContext:concurrencyBehavior:backpressureHazard:
initWithServiceContext:concurrencyBehavior:backpressureHazard:extractionMode:
concurrencyBehavior
backpressureHazard
extractionMode
_concurrencyBehavior
_backpressureHazard
_extractionMode
_serviceContext
T@"SGServiceContext",R,N,V_serviceContext
Ti,R,N,V_concurrencyBehavior
Ti,R,N,V_backpressureHazard
Ti,R,N,V_extractionMode
featureValueForName:
T@"NSSet",R,N
initWithL:D:I:N:W:
initWithL:D:I:N:W:bi_lstm_0_h_in:bi_lstm_0_c_in:bi_lstm_0_h_in_rev:bi_lstm_0_c_in_rev:
setL:
setD:
setI:
setN:
setW:
bi_lstm_0_h_in
setBi_lstm_0_h_in:
bi_lstm_0_c_in
setBi_lstm_0_c_in:
bi_lstm_0_h_in_rev
setBi_lstm_0_h_in_rev:
bi_lstm_0_c_in_rev
setBi_lstm_0_c_in_rev:
_bi_lstm_0_h_in
_bi_lstm_0_c_in
_bi_lstm_0_h_in_rev
_bi_lstm_0_c_in_rev
T@"MLMultiArray",&,N,V_L
T@"MLMultiArray",&,N,V_D
T@"MLMultiArray",&,N,V_I
T@"MLMultiArray",&,N,V_N
T@"MLMultiArray",&,N,V_W
T@"MLMultiArray",&,N,V_bi_lstm_0_h_in
T@"MLMultiArray",&,N,V_bi_lstm_0_c_in
T@"MLMultiArray",&,N,V_bi_lstm_0_h_in_rev
T@"MLMultiArray",&,N,V_bi_lstm_0_c_in_rev
_loggedExtractions
_loggedInteractions
_loggedInteractionsSummary
_storeCreationDate
defaultLogger
_createEmptyFileAtPath:
descriptionForOriginType:
_deepCopy:
_deepMutableContainersCopy:
initWithFilename:
loggedExtractions
loggedInteractions
loggedInteractionsSummary
loggedExtractionsEventsCount
updateAndScheduleDiskWrite
baseInteractionDictionaryForInterface:actionType:
_interactionAttributesForTags:parentEntity:
_interactionAttributesForRealtimeEvent:parentEntity:
_interactionAttributesForEntity:parentEntity:
createInteractionSummaryForEventKey:expirationDate:interactionKey:interactionAttributes:rtcCategory:
enrichReminderInteractionSummaryLog:
enrichAggregateSummaryLog:
cappedDeliveryEntityCountsCreatedBetweenStartDate:endDate:
cappedDeliveryEntityCountsCreatedBetweenStartDate:endDate:store:
bucketizedRemindersCreatedAfterDate:endDate:
launchCountMessageAfterDate:
enrichInteractionSummaryLog:
_mapsUsageLast2Weeks
_calendarUsageLast2Weeks
incrementAndUpgradeInteractionSummaryForEventKey:interactionKey:parentEntity:
_updateLocationTypeFromInteractionsSummaryForEventKey:locationType:
logAndIncrementEventCountForDictionary:
logNewInteractionSummaryWithDictionary:
logNewInteractionWithDictionary:
_eventExtractionDictionaryLogForTemplateName:extractionStatus:outputExceptions:outputInfos:jsMessageLogs:jsOutputLogs:timingProcessing:
logEventExtractionForTemplateName:extractionStatus:outputExceptions:outputInfos:jsMessageLogs:jsOutputLogs:timingProcessing:
logMLMessageEventExtractionForTemplateName:extractionStatus:outputInfo:outputExceptions:timingProcessing:
logMLMessageEventInteractionForEntity:interface:actionType:
interactionKeyForInterface:actionType:
interactionKeyForCategory:interface:actionType:
logEventInteractionForEntitySync:interface:actionType:
logMLMessageEventExtractionForEntitySync:interface:actionType:
logEventInteractionForRealtimeEventSync:parentEntity:interface:actionType:
logEventInteractionForRealtimeEvent:parentEntity:interface:actionType:
logAggregateSummaryForInteraction:
whitelistedLogFromLog:
logsToSend
_createRTCReporting
sendRTCLogsWithShouldContinueBlock:completion:
resetLogs
resetExtractionLogs
resetInteractionsSummaryLogs
resetInteractionsLogs
removeInteractionsSummaryLogsFromLogs:
storeToDisk
storeAge
loggedExtractionsDescription
loggedInteractionsDescription
loggedInteractionsSummaryDescription
interactionsWriteQueue
_descriptionForExtractionStatus:
_descriptionForMessageEventDissectorExtractionStatus:
_descriptionForInterface:
_descriptionForActionType:
descriptionForSGRTCCategory:
descriptionForEntityType:
_descriptionForBundleId:
trialIdsForStructuredEvent
assetVersionsForMLMessageEvent
_persistenceTimerSource
_interactionsWriteQueue
airlineFromFlightSchema:
flightNumberFromFlightSchema:
airportFromAirportSchema:
departureAirportGateFromFlightSchema:
arrivalAirporGateFromFlightSchema:
flightFromReservationSchema:
schemaFromFlightReservation:
schemaFromAirline:
schemaFromAirport:
schemaFromFlight:
storeReimportRequest:
storeReimportItems:requestId:
markReimportRequestAsExecutedWithRequestId:
markReimportItemsAsSeenByReceiverWithBundleId:items:
markReimportItemAsSeenByReceiverWithBundleId:uniqueId:
updateReimportItemUniqueIdForBundleId:oldValue:newValue:
loadUnqueriedReimportRequests
loadUnexecutedReimportRequests
loadAllReimportRequests
_loadReimportRequestsWithWhereClause:
loadUnseenReimportItemsForRequest:
reimportRequestsContainBundleIdentifier:uniqueIdentifier:
deleteAllReimportRequestsOlderThanDate:
deleteCompletedReimportRequests
_deleteOrphanedItems
reimportRequestDBStats
sg_LoggingIdentifier
nameForActivityId:
registerActivitiesWithSystem
registerForActivity:handler:
activityForActivityId:
getState:
setState:state:
setCriteria:criteria:forActivity:
shouldDefer:
copyCriteria:
_taskForActivity:
_activities
_lastCriteria
_handlers
_currentTasks
_registered
initWithDeadline:manager:
shouldDefer
requestDefer
markFinished
_manager
_deadline
_deferRequested
task
taskWithDeadline:
unregister:
tellCurrentTasksToDefer
_tasks
_isEligibleEvent:
_enrichmentWritebackVersionKey
_attributeSetsForEvents:
writebackEnrichmentsForNewCopyOfMessage:
_actuallyAddEvents:
_spotlightUidsForAppleMailMessageIds:
_dropBox
_weakStore
setAgeOfTheSubmodelInDays:
setHasAgeOfTheSubmodelInDays:
hasAgeOfTheSubmodelInDays
setNbHighlyDiscriminantTokensForSaliency:
setHasNbHighlyDiscriminantTokensForSaliency:
hasNbHighlyDiscriminantTokensForSaliency
setNbHighlyDiscriminantTokensForIgnorability:
setHasNbHighlyDiscriminantTokensForIgnorability:
hasNbHighlyDiscriminantTokensForIgnorability
setNbExtremelyDiscriminantTokensForSaliency:
setHasNbExtremelyDiscriminantTokensForSaliency:
hasNbExtremelyDiscriminantTokensForSaliency
setNbExtremelyDiscriminantTokensForIgnorability:
setHasNbExtremelyDiscriminantTokensForIgnorability:
hasNbExtremelyDiscriminantTokensForIgnorability
ageOfTheSubmodelInDays
nbHighlyDiscriminantTokensForSaliency
nbHighlyDiscriminantTokensForIgnorability
nbExtremelyDiscriminantTokensForSaliency
nbExtremelyDiscriminantTokensForIgnorability
_ageOfTheSubmodelInDays
_nbExtremelyDiscriminantTokensForIgnorability
_nbExtremelyDiscriminantTokensForSaliency
_nbHighlyDiscriminantTokensForIgnorability
_nbHighlyDiscriminantTokensForSaliency
TI,N,V_ageOfTheSubmodelInDays
TI,N,V_nbHighlyDiscriminantTokensForSaliency
TI,N,V_nbHighlyDiscriminantTokensForIgnorability
TI,N,V_nbExtremelyDiscriminantTokensForSaliency
TI,N,V_nbExtremelyDiscriminantTokensForIgnorability
UTF8String
stringWithString:
stringWithString:range:
stringWithString:range:confidence:
stringWithNewContents:
length
characterAtIndex:
getCharacters:range:
_fastCStringContents:
_fastCharacterContents
fastestEncoding
setRange:
confidence
setConfidence:
_confidence
_isASCII
_length
_contents
T{_NSRange=QQ},N,V_range
Ti,N,V_confidence
lookup:
fakeFlightInformationWithAirlineCode:flightNumber:flightDate:
shouldDownloadFull:reply:
emailToOutput:reply:
textMessageToOutput:reply:
schemaOrgToOutput:reply:
emailToJsonLd:reply:
eventClassificationForEntity:reply:
resolveCandidatesForJSDict:reply:
diffSchemas:withExpectedSchemas:reply:
mergeSchemas:withExpectedSchemas:reply:
privacyAwareLogsForMLExtractions:reply:
getFlightReferencesAndReservationId:reply:
flightInformationWithAirlineCode:flightNumber:flightDate:reply:
parseHTML:reply:
_handleMemoryPressureStatus:
_stringFromMemoryPressureStatus:
getJSContext
freeJSContext
refreshAssetPath
setAssetPath:
processLoadRequestWithFileName:
loadTrieWithFileName:
initCurrentAsset
mappedArrayBufferForFileName:
preprocessPackedSGMessage:
md5Hash:
flightInformationWithAirlineCode:flightNumber:flightDate:
sfFlightsToDictionary:
formattedDate:withTimezone:
sfAirportToDictionnary:
dictionaryFromTimezone:
sfFlightStatusToString:
loadJSFromASCIIFile:
holdXpcTransactionForShortDelay
shouldDownloadFull:
_eventClassificationForEntity:
_resolveCandidatesForJSDict:
_privacyAwareLogsForMLExtractions:
_getFlightReferencesAndReservationId:
_diffSchemas:withExpectedSchemas:
_mergeSchemas:withExpectedSchemas:
reverseMapEntity:forCategory:withSchemaExpectation:
payloadToOutputWithEntryPoint:arguments:
payloadToOutputWithEntryPoint:arguments:reply:
outputExceptionsFromOutput:
_prepareEntity:
_prepareArguments:
historicalFlightInformationWithAirlineCode:flightNumber:flightDate:
postHistoricalFlightInformationWithAirlineCode:flightNumber:flightDate:andPayload:
_jsVM
_memoryMappedFiles
_memoryMappedFileNames
_jsContext
_assetPath
_localeIdentifier
_memoryPressureQueue
_memoryPressureSource
_dateFormatter
contactStore
contactStoreWithDonatedContacts
useMockContactStore:
_trie
lock
_setTrieFromPath:guardedData:
setTrieFromPath:
payloadForDomain:
payloadWithStartChar:andSize:
isStructuredEventCandidateForURL:title:
isStructuredEventCandidateForEmailDomain:
_structuredEventInputMapping
_structuredEventOutputMapping
_foundInMailNotifications
baseModelName
structuredEventInputMapping
structuredEventOutputMapping
foundInMailNotifications
notificationsAllowListOverride
initWithHandle:
T@"SGSqliteDatabase",R,N,V_db
readTransactionWithHandle:block:
writeTransactionWithHandle:block:
runWithLockAcquired:
writeTransactionDepth
_writeTransactionDepth
Tq,R,N,V_writeTransactionDepth
initWithFilename:flags:error:errorHandler:
initWithFilename:flags:error:sgDb:
handleError:sqliteError:forQuery:onError:
_sgDb
sqliteDatabaseWithFilename:error:
sqliteDatabaseInMemoryWithError:
isInMemoryPath:
inMemoryPath
randomlyNamedInMemoryPathWithBaseName:
truncateDatabaseAtPath:
bindParamToNull:name:
bindParam:name:int:
bindParam:name:int64:
bindParam:name:double:
bindParam:name:nsstring:
bindParam:name:nsdata:
initWithFilename:withProtection:sharedLock:error:
runWithWriteLockAcquired:
closePermanently
simulateOnDiskDatabase
lastInsertRowId
handle
filename
isInMemory
runQuery:onRow:onError:
_prepQuery:onPrep:onError:
prepAndRunQuery:onPrep:onRow:onError:
prepAndRunSQL:onPrep:onRow:onError:
_prepAndRunQuery:columns:dictionary:onError:
prepAndRunNonDataQueries:onError:
updateTable:dictionary:whereClause:onError:
insertOrReplaceIntoTable:dictionary:onError:
selectColumns:fromTable:whereClause:onPrep:onError:
writeTransaction:
frailWriteTransaction:
readTransaction:
frailReadTransaction:
createSnapshot:
userVersion
setUserVersion:
maxIdForTable:
hasTableNamed:
tablesWithColumnNamed:
hasColumnOnTable:named:
hasIndexNamed:
numberOfRowsInTable:
languageForFTSTable:
performIntegrityCheck
pageCount
freelistCount
_pagesToVacuum
vacuumMode
vacuum
optimize:
_impl
_lastBusyWaitEnded
_sharedWriterLock
_usesDataProtection
T^{sqlite3=},R,N
mergeFallbackSchema:parentEntity:
addSchemaAsEnrichment:inMessage:parentEntity:eventClassification:mlDefaultExtraction:
schemaOrgAndMissingEntitiesForPreprocessed:eventClassification:fromSuggestTool:
schemaOrgAndMissingEntitiesForPreprocessed:eventClassification:fromSuggestTool:addressThreshold:pflTrainable:hasEvent:
preprocessDomParserResult:subject:epoch:category:labelsWithMatchingStrings:
preprocessWithoutXPCForHTML:subject:epoch:category:labelsWithMatchingStrings:
nilEntities:
tupleWithEntity:label:
tupleWithError:label:
annotationMatchingStringsForSubject:
labelsWithMatchingStringsForMailMessage:
annotateContent:withLabel:forMatchingString:
plainTextStringsByLabelInTaggedCharacterRanges:inPlainText:
schemaStringForDateComponents:
schemaStringForReservationStatus:
schemaStringForEventStatus:
schemaPostalAddressForPostalAddressExtraction:addressThreshold:
tokenCountForPostalAddressComponents:
tokenCount:
addressDictionaryForAddressComponents:
eventEnrichmentFromEntity:
eventEnrichmentContainsReverseMappedTags:
logMLExtractionForSchema:mergedSchemaAndDiff:parentEntity:timingProcessingInMs:eventClassification:mailMessage:shadowExtraction:mlDefaultExtraction:
logFailedExtractionWithClassification:missingEntities:mlSummary:shadowExtraction:timingProcessingInMs:forMessage:parentEntity:
jsMessageLogsDictionaryForMailMessage:
jsMessageLogsDictionaryForPrivacyAwareLogs:
outputLogsForClassification:
logMLInteractions:context:mlDefaultExtraction:
preprocessHTML:subject:epoch:category:labelsWithMatchingStrings:
tagsWithModelOutputFromEnrichedTaggedCharacterRanges:
jsonLdForItem:
asJsonLd
setHtmlIdItemScope:forHtmlId:
addItem:
htmlIds
items
_htmlIds
_items
T@"NSDictionary",R,N,V_htmlIds
T@"NSArray",R,N,V_items
isEqualToSchemaOrgKey:
_uuid
storageLocationWithPrimaryKey:
commitStorageLocation:
commitStorageLocation:withEventId:
compositeHash
removeSnippetsForEntities:
_removeSnippetsForEmails:
pruneEntitiesOlderThan:suspensionHandler:
pruneEntitiesOlderThanOneYearWithSuspensionHandler:
pruneEntitiesOlderThan:suspensionHandler:batchSize:
pruneMailIntelligenceOlderThanOneYearWithSuspensionHandler:
deleteMailIntelligenceForMessageIds:
clearMailIntelligenceSaliencyDetection
clearMailIntelligence
pruneDuplicateEventExtractions:
pruneNLEventEntitiesOlderThanTwoWeeks
pruneReminders
pruneNLEventEntitiesOlderThan:
deleteMessages:
childrenFromParentKey:
_recordPseudoContactsWithDeletedDetailsInTable:deletedChildrenTable:
_deleteChildEntitiesByRecordIdsInTable:
_derefChildrenOf:
_deleteEntitiesByDuplicateKeyNoRecurse:
_deleteRemindersByRecordIds:
_deleteContactDetailsByRecordIds:
_deleteEventsByRecordIds:
_deleteMessageMetadataByDuplicateKeyNoRecurse:
deleteEntitiesByDuplicateKey:emitChangeNotifications:
deleteEntitiesByDuplicateKey:preserveEventConfirmationHistory:emitChangeNotifications:
deleteMessagesByDuplicateKey:
deleteInteractionEntitiesExceedingLimit:withSuspensionHandler:
deleteItemsWithEntityTag:
deleteItemsWithEntityTag:preserveEventConfirmationHistory:
deleteInteractionsWithBundleId:
deleteInteractionsWithBundleId:identifiers:
deleteInteractionsWithBundleId:groupIdentifiers:
allVIPEmailAddresses
vips
setVips:
_vips
T@"EAEmailAddressSet",&,N,V_vips
naiveBayesModelQueryResultForFeature:unigramTokens:bigramTokens:
highlyDiscriminantTokensForFeature:minCount:minRatio:
deleteNaiveBayesModelForProbabilityFeatureName:
commitNaiveBayesModel:probabilityFeatureName:
commitNaiveBayesModel:probabilityFeatureName:updateDate:
preventUnsubscriptionOpportunitiesSuggestionsForField:toValues:
getUnsubscriptionOpportunitiesSuggestionsDenyListForField:
areSubModelsEmpty
sortedUnsubscriptionOpportunitiesForField:limit:
sortedUnsubscriptionOpportunitiesForField:minCount:minScore:limit:
subModelsStats
purgeTokensWhichLastUpdateWasBefore:
getSGMIStoredAddresses
deleteTokensForDeletedEmailAddresses:
getViolationsToTokenCountsPolicy:
applyCappingPolicy:byDiscardingTokensCounts:withMargin:
initWithBytecode:
existsInString:
_bytecode
_endPtr
data
setData:
setFeatureNames:
T@"MLMultiArray",&,N,V_data
T@"NSSet",&,N,V_featureNames
regularScore
salientScore
defaultModel
ruleBasedInferenceFor:
ruleBasedInferenceFor:config:
saliencyForFeatureVector:
saliencyThreshold
getSaliencyOutputOf:forArray:
namePayload:
isCommonNameWord:
isSalientName:
isFamilyName:
isSalientNameByChars:
attributesForNameWord:
isLowercaseStringCommonNameWord:
isProbablyShortCJKName:
isCommonVietnameseSurname:
isDifficultName:
isCapitalized:
stripHonorifics:
stripAndReturnHonorifics:
universalCleanName:
cleanName:
handleLastNameFirstOrder:
nameSimilarity:and:
unnormalizedNameSimilarity:and:
namesApproximatelyMatch:and:
namesApproximatelyMatch:and:threshold:
unnormalizedNamesApproximatelyMatch:and:
unnormalizedNamesApproximatelyMatch:and:threshold:
nameFromEmail:
sketchesForName:
surnameFromName:
bestName:
sgNameFromString:origin:recordId:extractionInfo:
possibleNameStringFromEmailAddress:
nameStringFromEmailAddress:
cjkSpacerCharacters
cjkSpacersToWhiteSpace:
shouldInvertOrderOfFirst:last:
initWithScrolledToEnd:messageViewMaxDwellTime:messageViewTotalDwellTime:messageViewCount:timeBeforeViewStartSinceAvailable:numberOfMailsViewedBeforeSinceAvailable:userReplied:replyDraftStarted:forwardDraftStarted:numberOfUnreadMessageAtFirstViewTime:numberOfMoreRecentUnreadMessageAtFirstViewTime:markedAsRead:markedAsUnread:markedAsJunk:mailGotFlagged:linkClicked:
updateWithAppLaunchAtTime:
updateWithViewStartAtTime:unreadMessageCount:
updateWithViewEndWithPayload:
updateWithMessageFetchedEventAtTime:
updateWithFlagChangedEvent
updateWithReadChangedEventWithPayload:
updateWithMessageMovedEventWithPayload:
updateWithEvent:eventTimestamp:
messageAvailableTime
incrementNumberOfMailsViewedBeforeSinceAvailable
incrementNumberOfMoreRecentUnreadMessageAtFirstViewTime
scrolledToEnd
userReplied
numberOfMailsViewedBeforeSinceAvailable
timeBeforeViewStartSinceAvailable
messageViewCount
messageViewMaxDwellTime
messageViewTotalDwellTime
numberOfUnreadMessageAtFirstViewTime
numberOfMoreRecentUnreadMessageAtFirstViewTime
markedAsRead
markedAsUnread
mailGotFlagged
replyDraftStarted
forwardDraftStarted
markedAsJunk
linkClicked
firstAppLaunchFollowingFetch
messageFetchTime
_scrolledToEnd
_userReplied
_markedAsRead
_markedAsUnread
_mailGotFlagged
_replyDraftStarted
_forwardDraftStarted
_markedAsJunk
_linkClicked
_numberOfMailsViewedBeforeSinceAvailable
_messageViewCount
_numberOfUnreadMessageAtFirstViewTime
_numberOfMoreRecentUnreadMessageAtFirstViewTime
_timeBeforeViewStartSinceAvailable
_messageViewMaxDwellTime
_messageViewTotalDwellTime
_firstAppLaunchFollowingFetch
_messageFetchTime
TB,R,N,V_scrolledToEnd
TB,R,N,V_userReplied
TI,R,N,V_numberOfMailsViewedBeforeSinceAvailable
Td,R,N,V_timeBeforeViewStartSinceAvailable
TI,R,N,V_messageViewCount
Td,R,N,V_messageViewMaxDwellTime
Td,R,N,V_messageViewTotalDwellTime
TI,R,N,V_numberOfUnreadMessageAtFirstViewTime
TI,R,N,V_numberOfMoreRecentUnreadMessageAtFirstViewTime
TB,R,N,V_markedAsRead
TB,R,N,V_markedAsUnread
TB,R,N,V_mailGotFlagged
TB,R,N,V_replyDraftStarted
TB,R,N,V_forwardDraftStarted
TB,R,N,V_markedAsJunk
TB,R,N,V_linkClicked
Td,R,N,V_firstAppLaunchFollowingFetch
Td,R,N,V_messageFetchTime
updateSummaryDict:fetchedUnreadMessages:event:timestamp:
toSchemas
fromSchemas:
canConvertToSchemaOrg
entityFromSqlResult:
entityFromSqlResult:withSnippets:
allContactsWithEntityType:
allPseudoContacts
entityCount
selectEntityQuery:
dbStats
analyzeDatabase
clearAllTables
clearDatabases
selectAuthoritativeDetailsForContactWithId:
columnQueryPrefixSelect
_scoreContactDetail:
schemaFromRentalCarReservation:
performDatabaseCheck
performIntegrityCheckOnly
databasecheck_IntegrityCheck
databasecheck_BrokenEntityIDReferences
databasecheck_contactMergeGroupConsistency
setPersonFromSenderProbability:
setHasPersonFromSenderProbability:
hasPersonFromSenderProbability
setPersonFromSenderInDyadicConversationProbability:
setHasPersonFromSenderInDyadicConversationProbability:
hasPersonFromSenderInDyadicConversationProbability
setSubjectContentProbability:
setHasSubjectContentProbability:
hasSubjectContentProbability
setPersonToRecipientsProbability:
setHasPersonToRecipientsProbability:
hasPersonToRecipientsProbability
setPersonCCRecipientsProbability:
setHasPersonCCRecipientsProbability:
hasPersonCCRecipientsProbability
setDomainFromSenderProbability:
setHasDomainFromSenderProbability:
hasDomainFromSenderProbability
setConversationProbability:
setHasConversationProbability:
hasConversationProbability
setListIdProbability:
setHasListIdProbability:
hasListIdProbability
setAttachmentsProbability:
setHasAttachmentsProbability:
hasAttachmentsProbability
setSubjectCountStatsProbability:
setHasSubjectCountStatsProbability:
hasSubjectCountStatsProbability
setStandardMailRulesProbability:
setHasStandardMailRulesProbability:
hasStandardMailRulesProbability
setMailboxProbability:
setHasMailboxProbability:
hasMailboxProbability
setMailboxTypeProbability:
setHasMailboxTypeProbability:
hasMailboxTypeProbability
personFromSenderProbability
personFromSenderInDyadicConversationProbability
subjectContentProbability
personToRecipientsProbability
personCCRecipientsProbability
domainFromSenderProbability
conversationProbability
listIdProbability
attachmentsProbability
subjectCountStatsProbability
standardMailRulesProbability
mailboxProbability
mailboxTypeProbability
_attachmentsProbability
_conversationProbability
_domainFromSenderProbability
_listIdProbability
_mailboxProbability
_mailboxTypeProbability
_personCCRecipientsProbability
_personFromSenderInDyadicConversationProbability
_personFromSenderProbability
_personToRecipientsProbability
_standardMailRulesProbability
_subjectContentProbability
_subjectCountStatsProbability
Tf,N,V_personFromSenderProbability
Tf,N,V_personFromSenderInDyadicConversationProbability
Tf,N,V_subjectContentProbability
Tf,N,V_personToRecipientsProbability
Tf,N,V_personCCRecipientsProbability
Tf,N,V_domainFromSenderProbability
Tf,N,V_conversationProbability
Tf,N,V_listIdProbability
Tf,N,V_attachmentsProbability
Tf,N,V_subjectCountStatsProbability
Tf,N,V_standardMailRulesProbability
Tf,N,V_mailboxProbability
Tf,N,V_mailboxTypeProbability
registerCachePrecomputationWithCTS
reportDbStats
_reportDbStatsBackground
bucketizeInteger:withBucketSize:limit:
bucketizeIntegerForAggregateSummary:
round:toSignificantFigures:
numberOfDaysBetweenDate:andDate:
aggregateSummaryBucketizedLaunchCountForApp:afterDate:
launchCountForApp:afterDate:limit:
launchCountForApp:afterDate:lowerBucket:bucketSize:bucketLimit:
locationTypeForHandle:latitude:longitude:airportCode:address:label:
locationTypeForEntity:
locationTypeForRealtimeEvent:
dateByAppendingDaysToCurrentDate:
webView:decidePolicyForNavigationAction:decisionHandler:
webView:decidePolicyForNavigationAction:preferences:decisionHandler:
webView:decidePolicyForNavigationResponse:decisionHandler:
webView:didStartProvisionalNavigation:
webView:didReceiveServerRedirectForProvisionalNavigation:
webView:didFailProvisionalNavigation:withError:
webView:didCommitNavigation:
webView:didFinishNavigation:
webView:didFailNavigation:withError:
webView:didReceiveAuthenticationChallenge:completionHandler:
webViewWebContentProcessDidTerminate:
webView:authenticationChallenge:shouldAllowDeprecatedTLS:
webView:navigationAction:didBecomeDownload:
webView:navigationResponse:didBecomeDownload:
parseHTML:
webView
_parseDocument:
runJavascriptOnWebView:withCallback:
_loadedSem
_webView
_html
geocodeLabel
geocodeAddress
geocodeAirportCode
geocodeIsStart
geocodeIsEnd
geocodeLatitude
geocodeLongitude
geocodeAccuracy
geocodeHandle
geocodedLocationWithLabel:address:latitude:longitude:accuracy:handle:
geocodedLocationWithLatitude:longitude:accuracy:handle:
initWithType:label:address:airportCode:accuracy:quality:
initWithType:label:airportCode:latitude:longitude:accuracy:quality:
initWithType:label:address:airportCode:latitude:longitude:accuracy:quality:handle:
isEqualToStorageLocation:
convertToLocationWithId:origin:
locationType
label
airportCode
latitude
longitude
accuracy
_locationType
_label
_address
_airportCode
_latitude
_longitude
_accuracy
Ti,R,N,V_locationType
T@"NSString",R,N,V_label
T@"NSString",R,N,V_address
T@"NSString",R,N,V_airportCode
Td,R,N,V_latitude
Td,R,N,V_longitude
Td,R,N,V_accuracy
Td,R,N,V_quality
T@"NSData",R,N,V_handle
addDetailsFromOriginatingGenericEntity:
addDetailsFromParticipantsOfEntity:
addDetailsFromOriginatingMessageEntity:
addDetailsFromOriginatingContactEntity:
addDetailsFromOriginatingCalendarEntity:
addDetailsFromOriginatingInteractionEntity:
addSnippetIfNotExistsFromContentOfEntity:
addRecipientDetailsFromOriginatingMessageEntity:entity:store:
originTypeForEntityType:
originForDuplicateKey:sourceKey:store:
originForDuplicateKey:entity:parent:store:
tableId
rowId
recordIdWithTableId:rowId:
recordIdForEmailWithRowId:
recordIdForContactWithRowId:
recordIdForContactDetailWithRowId:
recordIdForEventWithRowId:
initWithLog:isLogged:
isLogged
_isLogged
_log
T@"SGMIMetricsMailIntelligenceForMessage",R,V_log
TB,R,V_isLogged
hasExperimentId
hasTreatmentId
setDeploymentId:
setHasDeploymentId:
hasDeploymentId
experimentId
setExperimentId:
treatmentId
setTreatmentId:
deploymentId
_deploymentId
_experimentId
_treatmentId
T@"NSString",&,N,V_experimentId
T@"NSString",&,N,V_treatmentId
Ti,N,V_deploymentId
salt
saltAtomicReferenceId
saltUsesManatee
syncToken
hasSubscription
eventsWereRemovedFromEventKit
hasDeferredSync
hasDeferredProcessStateChanges
properties
_getterForProperty:
_setterForProperty:
setupKvo
stopKvo
observeValueForKeyPath:ofObject:change:context:
changeCallback
setChangeCallback:
setSalt:
setSaltAtomicReferenceId:
setSaltUsesManatee:
setSyncToken:
setHasSubscription:
setEventsWereRemovedFromEventKit:
setPrimaryICloudCalendarAccount:
setHasDeferredSync:
setHasDeferredProcessStateChanges:
_changeCallback
_salt
_saltAtomicReferenceId
_saltUsesManatee
_syncToken
_hasSubscription
_eventsWereRemovedFromEventKit
_primaryICloudCalendarAccount
_hasDeferredSync
_hasDeferredProcessStateChanges
T@?,C,N,V_changeCallback
T@"NSData",&,N,V_salt
T@"CKRecordID",&,N,V_saltAtomicReferenceId
T@"NSNumber",&,N,V_saltUsesManatee
T@"CKServerChangeToken",&,N,V_syncToken
T@"NSNumber",&,N,V_hasSubscription
T@"NSNumber",&,N,V_eventsWereRemovedFromEventKit
T@"NSString",&,N,V_primaryICloudCalendarAccount
T@"NSNumber",&,N,V_hasDeferredSync
T@"NSNumber",&,N,V_hasDeferredProcessStateChanges
_coupleOperationTrainWithStart:end:
recordID
accountChanged:
_callbackQueue
_sharedInstanceConfigurationQueue
setSharedInstanceConfigurationBlock:
apsEnvironmentStringForContainer:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveToken:forInfo:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
_addDependency:toTrain:
clearErrors
disable
failSalt
suspend
suspendAndResumeAfter:
resume
getUnderlyingError:
pauseIfNeededAndReturnRetryEligibilityForError:
addDeleteZoneOperation
addDeleteZoneAttemptOperationWithRetries:
addCreateZoneOperation
addCreateZoneAttemptOperationWithRetries:
addManateeSanityCheckOperation
addProcureSaltOperation
ckErrorForRecordId:inError:
ckErrorForRecordZoneId:inError:
_ckErrorForId:inError:
addProcureSaltAttemptOperationWithRetries:
addFetchNewEntitiesOperation
addFetchNewEntitiesAttemptOperationWithRetries:
shouldRecreateZoneForRecordError:operationError:
addDeleteAndRecreateZoneOperation
addWriteOperationForRecordGetter:deleteGetter:withRetries:
addWriteOperationForRecordGetter:deleteGetter:withRetries:isFirstTry:
addOperation:
addOperation
processStateChanges
accountInfo
shouldRemoveEventsFromEventKit
createSubscriptionWithRetries:
setDatabase:
addEnrichment:withParentEntity:
deleteGroupId:
setReadyForNewEntities:
setNewEntitiesCallback:
setDeleteAllSyncedItemsCallback:
invokeNewEntitiesCallbackWithEntity:
recordZoneId
deleteStorageEvent:
deleteZoneWithCompletion:
privacySalt
_kvoHandler
_database
_callback
_deleteAllSyncedItemsCallback
_readyForNewEntities
_apsConnection
_opQueue
_operationsToAddToOpQueue
_container
_accountInfoFuture
_accountInfoInFlight
_persistedState
_suspendCount
_noZone
_disabledBecauseOutOfDateSoftware
_inProgressProcureSaltOperation
_inProgressCreateZoneOperation
_inProgressDeleteZoneOperation
_inProgressFetchNewEntitiesOperation
_requestedFetchNewEntitiesWhileRequestAlreadyInFlight
_createZoneError
_deleteZoneError
_procureSaltError
_processingStateChanges
_pendingProcessStateChanges
_greenTeaLogger
_privacySaltFuture
initWithCloudKitSyncGetter:
cloudKitSync
_cksGetter
_cks
addObserver:forObjectLifetime:
fire
startListening
stopListening
_liveObserversMap
_notificationCenterToken
_notificationQueue
_getListenerByClassMap
_getListener:
_addObserver:forObjectLifetime:listenerClass:
addAddressBookObserver:forObjectLifetime:
addCalendarObserver:forObjectLifetime:
simulateAddressBookChange
simulateCalendarChange
mergeDueLocations:
initWithLocationType:trigger:name:
isEqualToReminderDueLocation:
trigger
_trigger
TC,R,N,V_locationType
TC,R,N,V_trigger
T@"NSString",R,N,V_name
setSharedInstance:
recordMessageInChat:
estimateMessagesInChat:
_backingData
_sketch
T@"NSString",R,V_path
schemaFromRestaurantReservation:
partySizeFromReservationSchema:
initFor:fromUnigram:andBigram:
submodeledFeature
unigramFeature
bigramFeature
_submodeledFeature
_unigramFeature
_bigramFeature
Tq,R,V_submodeledFeature
Tq,R,V_unigramFeature
Tq,R,V_bigramFeature
featureTypeForName:
submodeledFeatures
prettyName:
allFeatureNames
allFeaturePrettyNames
prettyNamesReverseMapping
initWithFeatureName:
initWithFeatureName:numberValue:
initWithFeatureName:numberArrayValue:
initWithFeatureName:stringValue:
initWithFeatureName:stringArrayValue:
stringArrayRepresentation
boolValue
floatValue
doubleValue
intValue
integerValue
featureType
numberValue
numberArrayValue
stringValue
stringArrayValue
_featureType
_numberValue
_numberArrayValue
_stringValue
_stringArrayValue
Tq,R,N,V_featureName
Tq,R,N,V_featureType
T@"NSNumber",R,N,V_numberValue
Tf,R,N
Td,R,N
Ti,R,N
Tq,R,N
T@"NSArray",R,N,V_numberArrayValue
T@"NSString",R,N,V_stringValue
T@"NSArray",R,N,V_stringArrayValue
fromCloudKitRecord:
toCloudKitRecordWithId:parentEntityType:
labelForProbabilities:
sg_isSignificantWithStore:
setCategory:
setHasCategory:
hasCategory
categoryAsString:
StringAsCategory:
setCountUpTo8KB:
setHasCountUpTo8KB:
hasCountUpTo8KB
setCount8KBTo32KB:
setHasCount8KBTo32KB:
hasCount8KBTo32KB
setCount32KBTo128KB:
setHasCount32KBTo128KB:
hasCount32KBTo128KB
setCount128KBTo512KB:
setHasCount128KBTo512KB:
hasCount128KBTo512KB
setCount512KBTo2MB:
setHasCount512KBTo2MB:
hasCount512KBTo2MB
setCountOver2MB:
setHasCountOver2MB:
hasCountOver2MB
Ti,N,V_category
TI,N,V_countUpTo8KB
TI,N,V_count8KBTo32KB
TI,N,V_count32KBTo128KB
TI,N,V_count128KBTo512KB
TI,N,V_count512KBTo2MB
TI,N,V_countOver2MB
resolveItemRefsWithDocument:
initWithItemType:itemRef:
itemType
itemRef
_itemRef
_itemType
T@"NSSet",R,N,V_itemType
T@"NSArray",R,N,V_itemRef
detectionWithType:text:matchRange:matchString:label:hasPhoneLabel:extractionInfo:isUnlikelyPhone:
initWithType:extraction:context:contextRangeOfInterest:label:hasPhoneLabel:match:extractionInfo:isUnlikelyPhone:
type
extraction
contextRangeOfInterest
hasPhoneLabel
match
_hasPhoneLabel
_type
_extraction
_contextRangeOfInterest
_match
TI,R,N,V_type
T@"NSString",R,N,V_extraction
T@"NSString",R,N,V_context
T{_NSRange=QQ},R,N,V_contextRangeOfInterest
TB,R,N,V_hasPhoneLabel
T{_NSRange=QQ},R,N,V_match
T@"SGExtractionInfo",R,N,V_extractionInfo
TB,R,N,V_isUnlikelyPhone
addCNContactIdentifier:
_optimizeAndAddCNContactIdentifier:
proxyArray
_optimizedBuffer
_unoptimizedIdentifiers
initWithLabel:value:
isEqualToLabeledValue:
contactIsSignificant:
contactIsSignificant:usingCoreRecents:
contactIsSignificantOrSignificanceIsDisabled:
contactIsSignificantOrSignificanceIsDisabled:usingCoreRecents:
realtimeContactIsSignificant:
realtimeContactIsSignificantOrSignificanceIsDisabled:
anyEmailAddressIsSignificant:
anyHandleIsSignificant:
setCRLookupForTesting:
recentsContainSomeOfEmails:phoneNumbers:instantMessageAddresses:
mayHaveSentMessageToEmail:
registerSentMailMessage:
normalizeHandleForRecipientFilterAndRemoveFromDetailsCache:
mayHaveSentMessageToHandle:
registerSentTextMessage:
_cachedVIPEmailAddresses
setCachedVIPEmailAddresses:
initWithLocation:time:title:core:bi_lstm_0_h_out:bi_lstm_0_c_out:bi_lstm_0_h_out_rev:bi_lstm_0_c_out_rev:
location
setLocation:
time
setTime:
core
setCore:
bi_lstm_0_h_out
setBi_lstm_0_h_out:
bi_lstm_0_c_out
setBi_lstm_0_c_out:
bi_lstm_0_h_out_rev
setBi_lstm_0_h_out_rev:
bi_lstm_0_c_out_rev
setBi_lstm_0_c_out_rev:
_location
_time
_core
_bi_lstm_0_h_out
_bi_lstm_0_c_out
_bi_lstm_0_h_out_rev
_bi_lstm_0_c_out_rev
T@"MLMultiArray",&,N,V_location
T@"MLMultiArray",&,N,V_time
T@"MLMultiArray",&,N,V_title
T@"MLMultiArray",&,N,V_core
T@"MLMultiArray",&,N,V_bi_lstm_0_h_out
T@"MLMultiArray",&,N,V_bi_lstm_0_c_out
T@"MLMultiArray",&,N,V_bi_lstm_0_h_out_rev
T@"MLMultiArray",&,N,V_bi_lstm_0_c_out_rev
withTarget:maxDistance:
transformArray:withTargetIndex:maximumDistance:
debugSetContext:
debugStoreContext
debugAppendText:
initWithTarget:maxDistance:
isEqualToTokenDistanceMappingTransformer:
targetString
setTargetString:
maxDistance
setMaxDistance:
_targetString
_maxDistance
T@"NSString",&,N,V_targetString
TQ,N,V_maxDistance
initWithOperation:event:
initWithOperation:eventBatch:
initWithOperation:contact:
initWithOperation:reminder:
initWithOperation:
isEqualToJournalEntry:
operation
event
eventBatch
contact
reminder
_operation
_event
_eventBatch
_contact
_reminder
TQ,R,N,V_operation
T@"SGStorageEvent",R,N,V_event
T@"NSArray",R,N,V_eventBatch
T@"SGStorageContact",R,N,V_contact
T@"SGStorageReminder",R,N,V_reminder
setPredictedMissingElementScore:
setHasPredictedMissingElementScore:
hasPredictedMissingElementScore
setFoundMatchingElement:
setHasFoundMatchingElement:
hasFoundMatchingElement
predictedMissingElementScore
foundMatchingElement
_predictedMissingElementScore
_foundMatchingElement
Tf,N,V_predictedMissingElementScore
TB,N,V_foundMatchingElement
_suggestionsFromSearchableItem:options:dissectIfNecessary:withCompletion:
_emailContentCacheSalt
suggestionsFromMessage:options:fullCompletionHandler:
suggestionsFromMessage:options:completionDelivery:completionHandler:fullCompletionHandler:
_suggestionsFromMessage:options:dissectIfNecessary:completionDelivery:completionHandler:
realtimeSuggestionsForMailOrMessageWithHash:options:completion:completionDelivery:providedBy:searchableItem:dissectIfNecessary:isTextMessage:
_canBannerUseStoredDissection:options:
_storeAndGeocodeEntity:spotlightBundleIdentifier:spotlightUniqueIdentifier:spotlightDomainIdentifier:store:afterCallbackQueue:finalize:
filterRealtimeReminders:
withMappings:
withHelperMappingType:andLanguage:
initWithMappings:
initWithHelperMappingType:andLanguage:
isEqualToStringMappingTransformer:
mappings
setMappings:
_mappings
T@"NSDictionary",&,V_mappings
schemaFromBoatReservation:
_lastWindowStartTime
_currentAllowedMessageCount
_eventClassifierModel
allowMessageEventDissector
featureEnabled
mobileAssetsEnabled
schemaOrgAndMissingEntitiesForExtractedEvent:
fallbackSchemaForGenericEventWithTitle:startDate:endDate:
enrichmentsFromSchema:forMessage:forEntity:category:
dateFromString:
messageEventCategoryForCategoryString:
describeCategory:
getFlightInformationForFlightEventData:
logMLMessageEventExtractionInteractions:context:
loadEventClassifierModelFromPath:
initWithoutSharedInstance
isDissectorProcessingWithinRateLimit
shouldProcessTextMessage:entity:
eventClassifierMobileAssetsPath
eventExtractionMobileAssetsPath
addEnrichmentForEvents:toEntity:message:context:timingProcessingInMs:
eventsFromMessage:eventExtractionAssetsPath:
loadEventClassifierModel
isMessageOfTypeEvent:
logMLMessageEventExtractionForSchema:message:category:timingProcessingInMs:
logFailedEventExtractionForMessage:category:missingEntities:timingProcessingInMs:
logFailedEventExtractionForMessage:failureCode:
schemaOrgAndMissingEntitiesForMessage:withMLModelParameters:
_dissectorConfig
commitContactDetail:
contactDetailPrimaryKeyForDuplicateKey:
contactDetailEntityIdForDuplicateKey:
loadAllContactDetailsFromTableForRecordId:type:
loadAllContactDetailsFromTableForRecordId:
initWithName:boxMaker:handler:qos:
typeCheckingSink:
updateBox:
updateBox:delay:
wait
_makeEmptyBox
_handler
_box
_handlerLock
_boxLock
_pendingMerge
_outstanding
_cond
_transaction
initWithPlainText:components:
hasExtraction
components
_components
T@"SGPostalAddressComponents",R,N,V_components
initWithUsername:userIdentifier:bundleIdentifier:displayName:service:teamIdentifier:
initWithSocialProfile:
initWithCNSocialProfile:
username
userIdentifier
bundleIdentifier
service
teamIdentifier
uniqueIdentifiers
preferredUniqueIdentifier
_username
_userIdentifier
_bundleIdentifier
_service
_teamIdentifier
_uniqueIdentifiers
_preferredUniqueIdentifier
T@"NSString",R,N,V_username
T@"NSString",R,N,V_userIdentifier
T@"NSString",R,N,V_bundleIdentifier
T@"NSString",R,N,V_service
T@"NSString",R,N,V_teamIdentifier
T@"NSArray",R,N,V_uniqueIdentifiers
T@"NSString",R,N,V_preferredUniqueIdentifier
mappingsForType:andLanguage:
loadMappingsForType:andLanguage:
writeInteractionEventEntities:
writeEntity:
writeEnrichment:
writeEntity:withSpotlightReferenceForBundleIdentifier:uniqueIdentifier:domainIdentifier:
_emitChangeNotificationForEnrichment:
_emitChangeNotifications:
_hashAttachedPseudoContacts:
_writeContactDetails:
_prunePseudoContactGeneratingEmails:
_deleteOldInteractionContactDetails:currentIdentifiers:
_addIndexingTagsTo:
_addIndexingTagsToParent:
_dumpTable:columns:limitTo:
_computePseudoContactContentHash:contactDetails:
entityWantsFullDownload:
_writeMessageEntityToSnippetsDb:
_writeEnrichmentToSnippetsDb:
_addTimeRange:toEntityWriteDictionary:
_addLocations:toEntityWriteDictionary:
writeEntityGeocodeResultToDb:
writeEmailVerificationResultForEmailWithKey:eventEntities:
markEntityAsDupeByRecordId:
_writeMessageEntityToDb:
_writeOneEntityToDb:
_contentWriteEnrichmentToDb:
_writeEnrichmentToDb:
_writeEntityParentageFor:entityId:
_journalEntryFromEntity:
_journalEntryFromReminderEntity:
_writeEventEntitiesToJournal:
_writeReminderEntitiesToJournal:
_writeEventEntityToJournal:
_writeContactEntityToJournal:
_writeFTSTermsForEnrichment:entityId:
_loadIdentityBlobs
_labelIdentityBlobs:
_writeLabeledBlobs:deletedMasterEntityIds:
writeIdentityBlobs:forceRewrite:
canStoreEventsForAccountType:
decodeEntities:
schemaFromTrainReservation:
sliceWithType:start:end:
sliceWithType:range:
initWithType:start:end:
initWithType:range:
_start
_end
T{?=SS},R,N,V_type
TQ,R,N,V_start
TQ,R,N,V_end
T{_NSRange=QQ},R,N
singleLineSignatureLeadingCharacterSet
initIgnoringDataDetectors
signatureRange:
findValedictionCommencedSignatureRanges:
findSignaturePrefixesInMessage:withSignaturePrefixes:
findValediction:
findRejectSig:
findSignaturePrefix:
hmmPlausibleSignatureRange:
hmmSignatureRange:
hmmSignatureRangeWithContent:detectedData:quotedRegions:authorName:
miniSignatureRange:
trailingSenderNameLineRange:
authorName:
authorFirstname:
rangeOfSenderName:inRange:restrictLength:forMessage:
rangeOfSenderNameComponents:withFullname:inSubstring:
_paragraphWithContent:range:exceedsLineLimit:orCharacterLimit:
shouldIgnoreSignature:signatureRange:isInhuman:
_ignoreDataDetectorsForTesting
keysToFetch
initWithContact:
isSameAsOrUnifiedWithContact:
givenName
familyName
formattedName
_meContact
_givenName
_familyName
_formattedName
T@"NSString",R,N,V_givenName
T@"NSString",R,N,V_familyName
T@"NSString",R,N,V_formattedName
T@"NSSet",R,N,V_emailAddresses
T@"NSSet",R,N,V_phoneNumbers
T@"NSSet",R,N,V_postalAddresses
T@"NSSet",R,N,V_socialProfileIdentifiers
statsType
clearStats
addStats:
statsCount
statsAtIndex:
setTotalNumberOfEmailsProcessedForAttachmentDetectionRoundedToClosestMultipleOf20:
setHasTotalNumberOfEmailsProcessedForAttachmentDetectionRoundedToClosestMultipleOf20:
hasTotalNumberOfEmailsProcessedForAttachmentDetectionRoundedToClosestMultipleOf20
setTotalNumberOfEmailsProcessedForRecipientDetectionRoundedToClosestMultipleOf20:
setHasTotalNumberOfEmailsProcessedForRecipientDetectionRoundedToClosestMultipleOf20:
hasTotalNumberOfEmailsProcessedForRecipientDetectionRoundedToClosestMultipleOf20
setTotalNumberOfEmailsProcessedForFollowUpDetectionRoundedToClosestMultipleOf20:
setHasTotalNumberOfEmailsProcessedForFollowUpDetectionRoundedToClosestMultipleOf20:
hasTotalNumberOfEmailsProcessedForFollowUpDetectionRoundedToClosestMultipleOf20
setNumberOfPredictedAttachmentOnLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20:
setHasNumberOfPredictedAttachmentOnLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20:
hasNumberOfPredictedAttachmentOnLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
setNumberOfLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20:
setHasNumberOfLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20:
hasNumberOfLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
setNumberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20:
setHasNumberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20:
hasNumberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
setNumberOfLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20:
setHasNumberOfLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20:
hasNumberOfLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
stats
setStats:
totalNumberOfEmailsProcessedForAttachmentDetectionRoundedToClosestMultipleOf20
totalNumberOfEmailsProcessedForRecipientDetectionRoundedToClosestMultipleOf20
totalNumberOfEmailsProcessedForFollowUpDetectionRoundedToClosestMultipleOf20
numberOfPredictedAttachmentOnLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
numberOfLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
numberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
numberOfLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
_numberOfLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
_numberOfLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
_numberOfPredictedAttachmentOnLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
_numberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
_stats
_totalNumberOfEmailsProcessedForAttachmentDetectionRoundedToClosestMultipleOf20
_totalNumberOfEmailsProcessedForFollowUpDetectionRoundedToClosestMultipleOf20
_totalNumberOfEmailsProcessedForRecipientDetectionRoundedToClosestMultipleOf20
T@"NSMutableArray",&,N,V_stats
TI,N,V_totalNumberOfEmailsProcessedForAttachmentDetectionRoundedToClosestMultipleOf20
TI,N,V_totalNumberOfEmailsProcessedForRecipientDetectionRoundedToClosestMultipleOf20
TI,N,V_totalNumberOfEmailsProcessedForFollowUpDetectionRoundedToClosestMultipleOf20
TI,N,V_numberOfPredictedAttachmentOnLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
TI,N,V_numberOfLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
TI,N,V_numberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
TI,N,V_numberOfLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
setLostMessageOverflow:
dbHandleForTesting
snippetsDbHandleForTesting
historyForTesting
setParentMessagesLimitForTesting:
lastSeenTimestampForKey:
setMalformedEventWhenRangeForTesting
clearMigrationCompletedForPaths
_shouldSampleMessage
initWithGloballyUniqueId:
isEqualToPseudoEventKey:
keyForEventKitQuery
isDropoff
alternativeKeysForEventKitQuery
domain
_serialized
_domain
T@"NSString",R,N,V_domain
setSerializedContactsLimit:
serializedContactsLimit
writeSerializedContact:
writeSerializedContactPlaceholder:
writeSerializedContactAndUpdateEntityIDSet:
deleteSerializedContactForId:
deleteSerializedContactsForIdSet:
loadSerializedContactForId:
loadAllSerializedContacts
serializedEntityIds
_trimSerializedContacts
_popQueuedSerializedContactId
_processBatchOfSerializedContactJobs
updateSerializedContacts:
isConfirmationOptionalForContent:
shouldAddTitlePrefixForContent:
tokensMatchedInContent:content:
detectedTitleInModelOutput:enrichedTaggedCharacterRanges:textContent:language:
titlePrependForActionVerbIndexRange:enrichedTaggedCharacterRanges:language:content:
frenchPrependForEnrichedTaggedCharacterRanges:actionVerbIndexRange:
validActionVerbIndexRange:enrichedTaggedCharacterRanges:
validObjectCoreIndexRange:enrichedTaggedCharacterRanges:
posTaggerNouns
validModelOutput:error:
enrichedTaggedCharacterRangesContainsProfanity:
triggerOptionalTokens
confirmationOptionalTokens
excludeList
titlePrefixTokens
regexFromJoinedArray:wordBoundary:
excludedContent:
searchTokensForReminderTitle:
initWithMessage:entity:enrichedTaggedCharacterRanges:modelOutput:
initWithMessage:plainTextDetectedData:enrichedTaggedCharacterRanges:modelOutput:
isConfirmation
isRejection
isProposal
isTriggerOptional
detectedTitleForLanguage:
dueDateDataDetectorMatches
detectedDueDateComponents
dueLocation
hasTrigger
_labelTokenIndexesForOutputName:label:
setMessage:
setEntity:
plainTextDetectedData
setPlainTextDetectedData:
extractedReminderDuplicateKey
setExtractedReminderDuplicateKey:
_plainTextDetectedData
_extractedReminderDuplicateKey
T@"SGMessage",&,N,V_message
T@"SGPipelineEntity",&,N,V_entity
T@"NSArray",&,N,V_plainTextDetectedData
T@"SGDuplicateKey",&,N,V_extractedReminderDuplicateKey
_tofuRegions:utf8:isAOSPMail:
_xWrote:utf8:
quotedRegionsFrom:isAOSPMail:foundToEndOfMessage:
_confirmationOptional
_triggerOptional
_actionVerbOptional
_messagesBannerLimit
_reminderEnrichments
_reminderInputMapping
_reminderOutputMapping
confirmationOptional
triggerOptional
actionVerbOptional
messagesBannerLimit
reminderEnrichments
reminderInputMapping
reminderOutputMapping
initWithCNContact:
prefilterNameMatchTerms
weakNamePatterns
strongNamePatterns
emailTags
phoneTags
socialProfileTags
addressTags
interactionContactIdentifier
isMe
_nicks
enumerateTokensInString:block:
enumerateTokensInString:withRange:block:
tokenize:
ftsPrefix:
ftsTokenize:
loadDuplicateKeyByRecordId:
loadSourceKeyByRecordId:
loadEntityByRecordId:
allEntitiesOfType:limitedTo:
allEntitiesOfType:limitedTo:onlyMLExtractions:
loadOriginByRecordId:
_loadMessageByKey:
loadEntityByKey:
loadEntitiesByEntityKey:entityType:resolveDuplicates:
loadEntitiesBySourceKey:entityType:resolveDuplicates:
loadEventByRecordId:
loadContactForStorageContact:usingSerializedContactCache:
masterEntityIdForContactOrContactDetailRecord:
loadStorageContactByRecordId:error:
loadStorageContactByRecordId:
loadContactDetailsForRecordId:type:
loadEventByKeyForOldCodePathTesting:
loadEventByDuplicateKey:
loadContactDetailsWithWhereClause:onPrep:type:dedupeAgainst:recordId:
loadAllContactDetailsForRecordId:
loadAllContactDetailsWithWhereClause:onPrep:dedupeAgainst:
entityKeyCountsForEntityType:startDate:endDate:
allRemindersLimitedTo:
loadReminderByKey:
loadReminderByRecordId:
loadReminderByKeyOld:
loadReminderByRecordIdOld:
allDeliveriesWithLimit:
loadEventsWithInteractionIdentifiers:fromBundleIdentifier:
dateOfBirthComponentsWithError:
_healthStore
dissectorWithMockedMLTrainingForTests
isTwoPersonConversation:
_logSelfIDForMessage:detection:modelType:modelVersion:
isAddressContext:
isPhoneContext:
isMaybeNameContext:
isNameRequest:
isBirthdayContext:
patterns
currentPatterns
clearConversationCache
initWithML:withMLQR:andHealthStore:
detectionFromSignatureDDMatch:message:detectedLabelRange:lastClaimedLabelRange:isUnlikelyPhone:
detectionFromBodyDDMatch:message:withSupervisionToFill:isUnlikelyPhone:
filterDangerousSigPhoneDetections:message:
filterDangerousSigAddressDetections:
_extractEmailishTokenFromMailHeader:
_makeAlnum:
_makeSimplifiedListIdEmail:
filterDangerousSigEmailDetections:message:
filterDangerousSigDetections:message:
processTextMessageConversation:threadLength:
logBirthdayExtractionMetricForPerson:forDate:isFromCongratulation:withModelVersion:didRegexTrigger:didResponseKitTrigger:
handleTextMessageBirthdayCongratulation:entity:withConversationHistory:
getResponsesForBirthdayExtractionFromMessage:withLanguage:
handleTextMessageSelfIdentification:entity:withConversationHistory:
_addAuthorContactForMessage:entity:
_removeUnwantedContactDetails:entity:
getLineContaining:inText:
detailTypeFromPrefix:detectedLabelPointer:
detailTypeFromPrefix:
selfIdentificationMessageCount
setSelfIdentificationMessageCount:
_mlQR
_contactsHelper
_filterWithAddressBook
_unlikelyPhoneSamplingRate
_hmmTrustedLanguages
_ddTrustedLanguages
_coreNLPTrustedLanguages
_selfIdentificationMessageCount
TQ,N,V_selfIdentificationMessageCount
initWithBundleId:personHandle:
modelWithConfigPath:binPath:
initWithFeatureDict:
initWithFeatureProvider:
valueForKey:
featureDict
_featureDict
T@"NSDictionary",R,N,V_featureDict
replyAttributionPattern
headerPattern:
headerPattern
headersPattern
quotedRegionStartPattern
messageSeparatorPattern
twoSigFigs:
aggregateKeyForKeySuffix:
messagesAdded:
messagesLost:
messagesPruned:
messagesFound:
messagesDeleted:
messagesUndisplayablyLost:
messagesFoundAfterUndisplayablyLost:
incrementKeyWithDomain:subdomain:suffix:action:by:
incrementKeyWithDomain:subdomain:suffix:action:
incrementKeyWithDomain:subdomain:suffix:by:
incrementKeyWithDomain:subdomain:suffix:
incrementKeyWithDomain:suffix:
setKeyWithDomain:suffix:toValue:
pushValue:toDistKeyWithSuffix:
pushValue:toDistKeyWithDomain:suffix:
_pushValuesForContact:usingDomain:subdomain:type:action:extraSignature:
performedAction:onRecordForContact:
performedAction:onDetail:forContact:
performedAction:forApp:onContact:
performedAction:onEventInCalendar:
performedAction:forApp:onEvent:
_appNameForApp:
eventsSuggested:withElapsedTime:inApp:
app:performedAction:onEvents:withResult:elapsedTime:
contactsSuggested:withElapsedTime:inApp:
app:performedAction:onContacts:withResult:elapsedTime:
eventConfirmed:inApp:
eventRejected:inApp:
eventConfirmedByRecord:
eventRejectedByRecord:
contactConfirmed:inApp:
contactRejected:inApp:
detail:confirmedForContact:
detail:rejectedForContact:
recordConfirmedForContact:
recordRejectedForContact:
harvestDrainedNumberOfMails:
harvestedMessageInQueueSince:
eventsFromEntity:
contactsFromEntity:
harvestedEntity:withElapsedTime:
identityGroupSize:
reMatched:
suggestionImpressionsViaBanner:
suggestionImpressionsViaBannerSuppressed:
hypotheticalSuggestionImpressionsIncludingActedOn:
eventSuggestionImpressionsViaBanner:
contactSuggestionImpressionsViaBanner:
hypotheticalContactSuggestionImpressionsIncludingInsignificant:
assetVersion
assetVersion:
databaseCorruptionDetectedViaIntegrityCheck
databaseCorruptionDetectedViaCorruptionMarker
contactsFoundOnDeviceEnabled:
eventsFoundOnDeviceEnabled:
describeAnnotationType:
annotationTypeFromString:
annotationTypeUniqueIdentifier:
enrichAndFilterTaggedCharacterRanges:usingMapping:withAnnotationType:
mergeTagsFromTaggedCharacterRanges:withTaggedCharacterRanges:
mergeTaggedCharacterRanges:usingBaseTaggedCharacterRanges:extraTags:tagOverrides:alignWithGroundTruth:
biosBasedAnnotation:usingTags:forSection:
state:index:section:
flattenTaggedCharacterRanges:usingWhitelist:replaceOOVWithToken:
initWithAnnotationType:tags:range:text:
initWithDict:
dictRepresentation
isEqualToTaggedCharacterRange:
annotationTypeUniqueIdentifier
annotationType
_annotationType
TQ,R,N,V_annotationType
T@"NSArray",R,N,V_tags
refreshEnrollmentInformationForNamespace:
refreshRolloutIdentifiersForNamespace:
rolloutIdentifiers
uncompressModelAndUpdateFactors:destinationPath:
_uncompressModelAtPath:toPath:
_unarchiveFrom:to:
cleanExperimentModelsFromTrialModelsFolder
modelPath
modelPathForCurrentEnrollment
modelPathForTriClient:andNamespace:
modelPathForExperimentId:treatmentId:deploymentId:
_modelPathForExperimentId:treatmentId:deploymentId:createIfNeeded:
_modelDirectoryPathCreateIfNeeded:
_modelNameForCurrentEnrollment
_modelNameForExperimentId:treatmentId:deploymentId:
_triClient
_serialQueue
_namespaceName
_rolloutIdentifiers
contactDetail:label:type:recordId:duplicateKey:sourceKey:context:extractionInfo:
contactDetailFromEntity:
initWithValue:label:type:recordId:duplicateKey:sourceKey:context:extractionInfo:
normalizedValue
isEqualToContactDetail:
_normalizedValue
TQ,R,N,V_type
T@"NSString",R,N,V_sourceKey
T@"SGDuplicateKey",R,N,V_duplicateKey
getMaxEntityId
writeCNContactMissForRecordId:
writeCNContactMatchForContact:withMatches:andMaxEntityId:
writeCNContactMatchAndUpdateSetForContact:withMatches:andMaxEntityId:
loadCNContactMatchesForContact:andGetMaxEntityId:
deleteCNContactMatchForContactId:
deleteAllCNContactMatches
deleteAllCNContactMatchesForIdSet:
deleteAllCNContactMatchesForEntityID:
prematchedContactIdentifiers
loadAllPrecomputedContactMatches
cnContactMatchesForRecordId:found:
_popBatchOfCNContactIds
_enqueueBatchOfCNContactIds:
_clearPendingJobs
updateCNContactMatches:
_fullSyncContactsWithStore:
needsFullSync
setHasFullSync
syncContactsWithStore:
_deltaSyncContactsWithChangeHistory:
initRefreshSuggestionsContactDropBox
refreshSuggestionsContact:
cnContactIdentifiersSpotlightQueryStringForContact:
cnContactIdentifiersForContact:
initWithName:
done:
applyAdjustmentIfSane:
duration
significantWork
_cpuStart
_cpuEnd
_durationStart
_signpostId
_significantWork
_cpu
_duration
Td,R,N,V_cpu
Td,R,N,V_duration
TB,R,N,V_significantWork
overridePET2InstanceForTesting:
initWithBundleIdentifier:highPriority:harvestedOnBattery:receivedOnBattery:harvestSource:
initRealtime:wasNoBudgetItem:
harvestTimes
harvestTimerForName:
startTimer:
endTimer:significantWork:
startHarvest
endHarvest
_documentSourceForBundleId:
_guardedData
_harvestCostMetrics
sgmiFeatureStore
setSgmiFeatureStore:
_sgmiFeatureStore
_tokenizerModule
_tokenizerInstance
defaultPathCreatingSuggestionsDirectoryIfNeeded:
defaultPath
defaultSnippetPath
storeWithDefaultLocationAndExecuteJournals:
defaultStore
defaultHarvestStore
sqlStoreInMemory
prepareSqlStoreInMemory
prepareSqlStoreInMemoryByClearingExistingStore:
deletePreparedSqlStoreInMemory
sqlStoreWithEntityDbPath:snippetDbPath:isEphemeral:executeJournals:
sqlStoreWithEntityDbPath:snippetDbPath:isEphemeral:sharedLock:executeJournals:
sqlStoreWithEntityDbPathNoMigrate:snippetDbPath:isEphemeral:executeJournals:
_initializeDatabaseNolock:withProtection:sharedLock:newDatabaseCreated:
initializeDatabase:withProtection:sharedLock:newDatabaseCreated:
pathHasFutureDbSchema:
addPathToFutureDbSchemas:
releaseInstanceAndWaitForDealloc:
_recreateCorruptDatabase:sharedLock:withProtection:
isEphemeralIdentifier:
contactContainsEphemeralId:
_fieldValuesClassWhitelist
globPrefix:
escapeLike:
likePrefix:
initForRawDatabaseAccessWithEntityPath:snippetsPath:error:
initForDbStatsOnlyWithError:
_runInitMigrationTasks:noMigrate:
initWithEntityDbPath:snippetDbPath:isEphemeral:sharedLock:executeJournals:noMigrate:
closeDatabases
addDeallocNotification:
corruptionMarkerPresent
_removeCorruptionMarker
clearMasterEntityCache
clearCaches
removeStringFromNoContactsCache:
_addStringToNoContactsCache:
_isStringInNoContactsCache:
clearNoContactsCache
nextPendingGeocode
emailsPendingVerification
mostRecentParentKeyForDuplicateKey:
parentKeysForDuplicateKey:
contactIsDisplayable:
storageContactByMasterEntityId:withSnippets:
masterEntityIDsForMasterEntityQuery:bindings:
_contactForMasterEntityId:withSnippets:filterConfirmRejectDetails:
_enumerateContactsForMasterEntityIds:withSnippets:usingBlock:
_enumerateContactsForMasterEntityIds:withSnippets:filterConfirmRejectDetails:usingBlock:
_contactsForMasterEntityIds:withSnippets:
enumerateContactsByMasterEntityQuery:withSnippets:limit:bindings:usingBlock:
suggestContactsByMasterEntityQuery:limit:bindings:
suggestContactsByMasterEntityQuery:withSnippets:limit:bindings:
bindCheckContactRow:isMe:
suggestContactsWithPrefix:limitTo:
_contactIdsForContactDetailMatches:detailContactIds:socialProfileContactIds:
_contactIdsForContactNameMatches:strongNameIds:weakNameIds:
_contactIdForInteractionContactIdentifierMatch:
suggestContactsWithContact:withSnippets:filterConfirmRejectDetails:limitTo:
filterOutRejectedDetailsFromContact:
historyHasContact:
_scoreSGContact:bySimilarityToContact:cnContactFullname:
_rankSGContacts:bySimilarityToContact:
suggestContactMatchesWithContact:limitTo:
_processContactMatchWithContacts:matches:limit:masterEntityId:detailEntityId:contactEntityId:matchinfoData:tokens:requireName:
suggestContactMatchesWithMessagingPrefix:limitTo:
suggestContactMatchesWithFullTextSearch:limitTo:
_matchableUTF8TokenRangesInMatchExpression:
_queryForAllContactsWithLimit
enumerateAllContactsWithSnippets:limitTo:usingBlock:
allContactsWithSnippets:limitTo:
allContactsMasterEntityIdsLimitedTo:
suggestContactMatchesByType:searchString:isMaybe:onlySignificant:
suggestContactMatchesByPhoneNumber:isMaybe:onlySignificant:
suggestContactMatchesByPhoneNumber:
suggestContactMatchesByEmailAddress:isMaybe:onlySignificant:
suggestContactMatchesByEmailAddress:
suggestContactMatchesBySocialProfile:isMaybe:onlySignificant:
suggestContactMatchesBySocialProfile:
storageContactByKey:
suggestContactByKey:
suggestContactByIdentityKey:parentKey:
storageContactByRecordId:withSnippets:
suggestContactByRecordId:
suggestContactByRecordId:withSnippets:filterConfirmRejectDetails:
contactMatchedRecordTypeFromEntityType:
contactMatchedRecordTypeFromIdentityKeyType:
entityTypeFromIdentityKeyType:
suggestContactMatchesByContactDetailTag:
suggestContactMatchesByContactDetailTag:matchType:
rebuildContactDetailsCacheWithShouldContinueBlock:
contactIdsMergedWithMasterEntityId:
eventFromSqlResult:
_filterOutOlderVersionsOfPseudoEvents:
eventIsCancelled:
_filterOutCancelledEvents:
_filterOutAllButAcceptedWithUpdatedFields:
suggestEventsStartingAt:endingAt:limitTo:options:
suggestEventsStartingAt:endingAt:prefix:limitTo:options:
suggestEventsStartingAt:endingAt:limitTo:
suggestEventsStartingAt:endingAt:prefix:limitTo:
suggestEventsStartingAt:endingAt:limitTo:additionalWhereClause:options:onPrep:
confirmFieldValues:forEntity:
rejectFieldValuesForRecordId:
confirmedFieldValuesForEntity:
confirmedFieldValuesForEvent:
rejectRealtimeEvent:error:
confirmRealtimeEvent:error:
rejectRealtimeContact:error:
confirmRealtimeContact:error:
confirmEventByRecordId:error:
confirmStoredEvent:error:
rejectEventByRecordId:error:
confirm:orRejectContactByRecordID:error:
confirmContactByRecordID:error:
rejectContactByRecordID:error:
confirmContactDetailByRecordID:error:
rejectContactDetailByRecordID:error:
rejectStoredEvent:error:
confirmReminderByRecordId:error:
rejectReminderByRecordId:error:
rejectReminderByKey:error:
reminderAlarmTriggeredForRecordId:error:
confirmStoredReminder:error:
rejectStoredReminder:error:
reminderAlarmTriggeredForStorageReminder:error:
duplicateKeysMatchingAnyTag:
duplicateKeysMatchingAnyEventHash:
duplicateKeysMatchingAnyReminderHash:
_hashWithDuplicateKeysMatchingTags:
duplicateKeysMatchingInteractionBundleId:andTags:
journal
loadFullDownloadRequestBatch:
resolveFullDownloadRequests:
truncateContactDetailTable
dumpTables:columns:
isEphemeral
waitForMigrations
spotlightContactsAdapter
sgToCNContactsCacheUpdateAdapter
kvCacheManager
_sharedWriteLock
_snippetDb
_snippetsJournal
_identityStoreDirty
_entityMigrations
_snippetsMigrations
_entityVersion
_snippetsVersion
_entityMigrationRequiresMergeBlobUpdate
_lostMessageOverflow
_deallocNotifications
_isClosed
_journal
_spotlightContactsAdapter
_sgToCNContactsCacheUpdateAdapter
_parentMessagesLimit
_serializedContactsLimit
_recentlyDeletedEmailKeys
_spotlightReindexCount
_spotlightReindexQueue
_prematchedContactIdentifiers
_precomputationQueue
_messageRecipients
_crLookup
_snippetDbPath
_lockStateNotificationRegistrationToken
_executeJournals
_otherDetailsWithNoContact
_cnToSGContactsCachePendingUpdateRequests
_enrichmentWritebackAdapter
_isEphemeral
_waitForMigrations
_kvCacheManager
TB,R,N,V_isEphemeral
TB,R,N,V_waitForMigrations
T@"SGSpotlightContactsAdapter",R,V_spotlightContactsAdapter
T@"SGSGtoCNContactsCacheUpdateAdapter",R,V_sgToCNContactsCacheUpdateAdapter
T@"SGKeyValueCacheManager",R,V_kvCacheManager
initWithOutputItems:sourceMetadata:exeptionTemplates:jsMessageLogs:
initWithOutputItems:exeptionTemplates:jsMessageLogs:
outputItems
sourceMetadata
exceptionTemplates
jsMessageLogs
_outputItems
_sourceMetadata
_exceptionTemplates
_jsMessageLogs
T@"NSArray",R,N,V_outputItems
T@"NSDictionary",R,N,V_sourceMetadata
T@"NSArray",R,N,V_exceptionTemplates
T@"NSDictionary",R,N,V_jsMessageLogs
addParams:toParameterizedString:
addParams:toParameterizedString:allowAlternatives:
addressDictionaryToString:
shouldIgnoreMailMessage:
dissectInteraction:entity:context:
synchronousRemoteObjectProxyWithErrorHandler:
entityForOutputItem:parentEntity:outputExceptions:outputInfos:
entityForOutputItem:parentEntity:outputExceptions:outputInfos:interaction:
entityForOutputItem:withSiblings:parentEntity:outputExceptions:outputInfos:interaction:
packedJSMailMessageFromMailMessage:context:
packedJSMailMessageFromMailMessage:
packedJSTextMessageFromTextMessage:
packedJSInteractionFromInteraction:bundleIdentifier:creationTimestamp:
packedJSURLFromURL:title:payload:
packedJSURLFromURL:title:payload:creationTimestamp:
packedJSSchemaFromSchemaOrgItems:
exceedsMaxHTMLContentLength:
outputFromPackedJSSchema:
outputFromPackedJSMailMessage:
outputFromPackedJSTextMessage:
eventsFromSchemaOrgItems:
_addEnrichmentsToEntityForOutput:entity:startTime:backPressureHazard:
_addEnrichmentsToEntityForOutput:interaction:entity:startTime:backPressureHazard:
addEnrichmentsToEntityForOutputItems:exceptions:jsMessageLogs:interaction:entity:startTime:backPressureHazard:
eventClassificationForMailMessage:
privacyAwareLogsForMLExtractions:
diffSchemas:withExpectedSchemas:
mergeSchemas:withExpectedSchemas:
eventClassificationWithoutXPCForMailMessage:
resolveCandidatesWithoutXPC:forCategory:label:rawIndexSet:taggedCharacterRanges:
jsDictForResolveCandidates:forCategory:label:rawIndexSet:taggedCharacterRanges:
_ensureHtmlIsString:
jsonLdOutputFromPackedJSEntity:
reverseMapMailMessage:withPreprocessedHTML:forCategory:withSchemExpectation:
jsonLdOutputFromMailMessage:
jsonLdOutputFromTextMessage:
jsonLdOutputFromURL:title:payload:extractionDate:
dissectURL:title:htmlPayload:entity:
addInteractionTagsToEnrichment:inEntity:interaction:
getAndRemoveItemReferencesFromSchemas:
eventActivitiesForReservationWithSchema:enrichment:
eventActivitiesForReservationWithReference:inParentEntity:interaction:
enrichmentsFromSchemas:inMessage:parentEntity:
enrichmentsFromSchemas:inTextMessage:parentEntity:
getFlightReferencesAndReservationId:
_xpcConnection
_reverseTemplateJSNoXPC
_classifierCache
incrementalSubmodelUpdateWithStore:limit:log:
incrementalSubmodelUpdateWithStore:shouldContinue:limit:log:
incrementalSubmodelUpdateWithSaliencyModelConfig:store:shouldContinue:finalGroundTruthDate:withSimulatedCSSearchableItemForTesting:limit:
incrementalSubmodelUpdateWithSaliencyModelConfig:store:shouldContinue:finalGroundTruthDate:withSimulatedCSSearchableItemForTesting:limit:log:
pruneDB
purgeDeletedEmailsReferencesFromStore:
purgeOldTokensFromStore:
purgeTokensToMatchCappingPolicyFromStore:
checkForAndProcessVersionChange
addSubmodelStatsToLog:
ingest:asSalient:
commitToStore:updateDate:
submodels
_submodels
T@"NSDictionary",R,V_submodels
lookForNicknamesInSentMailsAndStore:shouldContinue:
T@"SGSqlEntityStore",R,N,V_store
runDataDetectors:locale:epoch:metadataForTypes:
_result:containsTypes:
_result:containsTypes:foundTypes:
_scanners
_naiveDateFormatter
_noTimeFormatter
_defaultConfig
initWithAssetAttachmentDictionary:attachmentLinkDetection:recipientConservativeDictionary:recipientDictionary:nicknameDictionary:followUpOnOutgoingMailsQuestionsDictionary:followUpOnOutgoingMailsAsksDictionary:followUpOnIncomingMailsDictionary:bodyAnalysisSamplingFactor:defaultTimeIntervalToStartWarningExposition:defaultTimeIntervalForAWarning:defaultTimeIntervalToEndWarningExposition:followUpWarningsParameters:
objectForKeyedSubscript:
shouldAnalyzeBody
detectors
attachmentLinkDetectionRegex
bodyAnalysisSamplingFactor
followUpWarningsParameters
defaultTimeIntervalToStartWarningExposition
defaultTimeIntervalForAWarning
defaultTimeIntervalToEndWarningExposition
_bodyAnalysisSamplingFactor
_detectors
_attachmentLinkDetectionRegex
_followUpWarningsParameters
_defaultTimeIntervalToStartWarningExposition
_defaultTimeIntervalForAWarning
_defaultTimeIntervalToEndWarningExposition
T@"NSDictionary",R,N,V_detectors
T@"NSRegularExpression",R,N,V_attachmentLinkDetectionRegex
Tf,R,N,V_bodyAnalysisSamplingFactor
T@"NSDictionary",R,N,V_followUpWarningsParameters
Td,R,N,V_defaultTimeIntervalToStartWarningExposition
Td,R,N,V_defaultTimeIntervalForAWarning
Td,R,N,V_defaultTimeIntervalToEndWarningExposition
initWithGroupId:
isEqualToPseudoReminderKey:
setLocationType:
setHasLocationType:
hasLocationType
locationTypeAsString:
StringAsLocationType:
hasLabel
hasAddress
setLatitude:
setHasLatitude:
hasLatitude
setLongitude:
setHasLongitude:
hasLongitude
setAccuracy:
setHasAccuracy:
hasAccuracy
setHasQuality:
hasQuality
hasHandle
hasAirportCode
setLabel:
setAddress:
setHandle:
setAirportCode:
Ti,N,V_locationType
T@"NSString",&,N,V_label
T@"NSString",&,N,V_address
Td,N,V_latitude
Td,N,V_longitude
Td,N,V_accuracy
T@"NSData",&,N,V_handle
T@"NSString",&,N,V_airportCode
initWithMessageId:hasHashedMessageId:simpleMailMessage:spotlightIdentifier:senderConnectionScore:biomeMessageSummary:mailClientUtil:store:preLoadedFeatureNames:
initWithMessageId:hasHashedMessageId:simpleMailMessage:spotlightIdentifier:senderConnectionScore:biomeMessageSummary:store:preLoadedFeatureNames:
initWithMessageId:hasHashedMessageId:simpleMailMessage:senderConnectionScore:biomeMessageSummary:mailClientUtil:store:preLoadedFeatureNames:
initWithMessageId:hasHashedMessageId:simpleMailMessage:senderConnectionScore:biomeMessageSummary:store:preLoadedFeatureNames:
flatVectorForFeatureNames:
cachedFeature:
feature:
setFeatureToStringValue:forName:
setFeatureToStringArrayValue:forName:
setFeatureToNumberValue:forName:
setFeatureToNumberArrayValue:forName:
ingestFeatures:
evaluateFirstMatchAmong:defaultValue:
estimateGroundTruth
estimateGroundTruthWithConfig:
mailboxId
defaultSaliencyOnError
defaultSaliencyOnOverrideFor:
saliencyWithScore:isSalient:
saliencyWithScore:isSalient:gteSaliency:isCounted:
logOrStageWithSaliency:
hasHashedMessageId
_mailClientUtil
_biomeMessageSummary
_filledWithInformationRetrievedThroughMaild
_spotlightIdentifier
_hasHashedMessageId
T@"NSString",R,N,V_messageId
TB,R,N,V_hasHashedMessageId
hasInteractionId
hasInteractionGroupId
hasInteractionBundleId
hasReservationItemReferences
hasReservationContainerReference
hasIntentResponseUserActivityString
hasInteractionTeamId
interactionId
setInteractionId:
interactionGroupId
setInteractionGroupId:
interactionBundleId
setInteractionBundleId:
reservationItemReferences
setReservationItemReferences:
reservationContainerReference
setReservationContainerReference:
intentResponseUserActivityString
setIntentResponseUserActivityString:
interactionTeamId
setInteractionTeamId:
_intentResponseUserActivityString
_interactionBundleId
_interactionGroupId
_interactionId
_interactionTeamId
_reservationContainerReference
_reservationItemReferences
T@"NSString",&,N,V_interactionId
T@"NSString",&,N,V_interactionGroupId
T@"NSString",&,N,V_interactionBundleId
T@"NSData",&,N,V_reservationItemReferences
T@"NSData",&,N,V_reservationContainerReference
T@"NSString",&,N,V_intentResponseUserActivityString
T@"NSString",&,N,V_interactionTeamId
launchCountForBundleId:afterDate:limit:
_knowledgeStore
fromStatus
setFromStatus:
setHasFromStatus:
hasFromStatus
fromStatusAsString:
StringAsFromStatus:
toStatus
setToStatus:
setHasToStatus:
hasToStatus
toStatusAsString:
StringAsToStatus:
_fromStatus
_toStatus
Ti,N,V_fromStatus
Ti,N,V_toStatus
tryExecuteSnippetsJournal
handleDeviceLockStateEvent:
registerJournalUnlockHandler
startJournaling
stopJournaling
journalNameForDbPath:
address:forIdentity:parent:curated:context:contextRangeOfInterest:extractionInfo:
phoneNumber:forIdentity:parent:curated:context:contextRangeOfInterest:extractionInfo:
emailAddress:forIdentity:parent:curated:context:contextRangeOfInterest:extractionInfo:
birthday:forIdentity:parent:curated:context:contextRangeOfInterest:extractionInfo:
instantMessageAddress:forIdentity:parent:curated:context:contextRangeOfInterest:extractionInfo:
socialProfile:forIdentity:parent:curated:context:contextRangeOfInterest:extractionInfo:
initWithDuplicateKey:title:parent:
initWithPseudoContactWithKey:parent:name:
initWithContactDetailWithKey:type:extractionInfo:curated:parent:value:context:contextRangeOfInterest:
isEvent
isPerson
contentHash
setContentHash:
pendingGeocode
setPendingGeocode:
_pendingGeocode
_contentHash
T@"NSData",&,N,V_contentHash
TB,N,V_pendingGeocode
fromStartDate:
fromStartDate:endDate:
defaultCSSearchQueryContextFetchAttributes
nicknameCSSearchQueryContextFetchAttributes
queryFromDaysAgo:throughDaysAgo:limit:withError:handler:
queryFromDaysAgo:throughDaysAgo:limit:withError:simulatedCSSIs:handler:
querySentMailsForNicknameMatchingFromDaysAgo:throughDaysAgo:limit:handler:
itemWithUniqueIdentifier:error:
findDeletedEmailAddresses:mdSearchableItemAttribute:fromDaysAgo:error:
queryEmailsFromDaysAgo:throughDaysAgo:fetchAttributes:filterQuery:queryString:bundleIds:spotlightTimeOut:withError:
reservationNumberFromReservationSchema:
bookingTimeFromReservationSchema:
reservationStatusFromReservationSchema:
reservationHolderNameFromReservationSchema:
urlFromReservationSchema:
schemaFromReservation:
reservationStatusToSchema:
asyncQueue
_recordConversationTurnWithDetail:received:throughApp:withStore:
recordConversationTurnWithDetail:received:throughApp:withStore:
initWithBiomeSummaryByMessage:biomeMessageIdByPersistentId:
biomeSummaryByMessage
biomeMessageIdByPersistentId
_biomeSummaryByMessage
_biomeMessageIdByPersistentId
T@"NSDictionary",R,N,V_biomeSummaryByMessage
T@"NSDictionary",R,N,V_biomeMessageIdByPersistentId
urlsFoundBetweenStartDate:endDate:bundleIdentifier:entityStore:
deleteAllURLsWithBundleIdentifier:entityStore:
deleteAllURLsWithBundleIdentifier:documentIdentifiers:entityStore:
deleteAllURLsWithBundleIdentifier:domainSelection:entityStore:
writeWithEntityStore:
flushWrites
numberOfExtractions
_urls
_needsFlushing
supportedBundleIdentifiers
urlsFromURLs:handle:bundleIdentifier:domainIdentifier:uniqueIdentifier:documentTitle:documentDate:documentTimeInterval:receivedAt:isOutgoingDocument:
urlsFromText:handle:dataDetectorMatches:bundleIdentifier:domainIdentifier:uniqueIdentifier:documentTitle:documentDate:documentTimeInterval:receivedAt:isOutgoingDocument:
urlsFromAttributes:handle:bundleIdentifier:domainIdentifier:uniqueIdentifier:documentTitle:documentDate:documentTimeInterval:receivedAt:isOutgoingDocument:
_titleFromMessagesSynthesizedTextContent:
_flagsForBundleIdentifier:documentDate:documentTimeInterval:isOutgoingDocument:
initWithProvider:trackingNumber:
isEqualToDeliveryKey:
externalIdentifier
provider
trackingNumber
_externalIdentifier
_provider
_trackingNumber
T@"NSString",R,N,V_externalIdentifier
TQ,R,N,V_provider
T@"NSString",R,N,V_trackingNumber
nameWithString:
fullName
initWithString:
initWithKoreanName:
initWithJapaneseName:
initWithChineseName:
initWithVietnameseName:
initWithSpanishName:
segmentWesternNameWithNameParts:andPrefix:
initWithWesternName:
toSGNameWithOrigin:recordId:extractionInfo:
firstname
surname
middlename
prefix
suffix
_privFullName
_firstname
_surname
_middlename
_prefix
_suffix
T@"NSString",R,N,V_firstname
T@"NSString",R,N,V_surname
T@"NSString",R,N,V_middlename
T@"NSString",R,N,V_prefix
T@"NSString",R,N,V_suffix
sg_serialize
sg_userActivityWithRequiredString:
initWithMessagesFromDaysAgo:throughDaysAgo:limit:withBiomeData:store:useSpotlightDataForMissingBiomeData:preLoadedFeatureNames:
initWithMessagesFromDaysAgo:throughDaysAgo:limit:withBiomeData:store:useSpotlightDataForMissingBiomeData:preLoadedFeatureNames:simulatedCSSIs:
forEach:
_startInDaysAgo
_endInDaysAgo
_limit
_withBiomeData
_useSpotlightDataForMissingBiomeData
_simulatedCSSIs
messageWithSearchableItem:
fromDictionary:
preferredLanguages
textContentLanguageIdentifier
isInhumanSender
isInhumanContent
messageSubjectDetectedData
detectedDataSignatureRange
setAttachments:
subject
setSubject:
setTextContent:
setDate:
setBundleIdentifier:
setUniqueIdentifier:
mailConversationIdentifier
setMailConversationIdentifier:
domainIdentifier
setDomainIdentifier:
attachments
accountHandles
setAccountHandles:
isSent
setIsSent:
setAccountType:
isStoredEncrypted
setIsStoredEncrypted:
contentProtection
setContentProtection:
_isInhumanSenderCached
_isInhumanContentCached
_taggedCharacterRangesCached
_messageSubjectDetectedDataCached
_dataDetectorMatchesWithSignatureForContentCached
_textContentLanguageIdentifierCached
_isSent
_isStoredEncrypted
_subject
_textContent
_mailConversationIdentifier
_domainIdentifier
_attachments
_accountHandles
_contentProtection
T@"NSString",C,N,V_subject
T@"NSString",C,N,V_textContent
T@"NSDate",C,N,V_date
T@"NSString",C,N,V_source
T@"NSString",C,N,V_bundleIdentifier
T@"NSString",C,N,V_uniqueIdentifier
T@"NSString",C,N,V_mailConversationIdentifier
T@"NSString",C,N,V_domainIdentifier
T@"NSArray",C,N,V_accountHandles
TB,N,V_isSent
T@"NSString",C,N,V_accountType
TB,N,V_isStoredEncrypted
T@"NSString",C,N,V_contentProtection
T@"CSPerson",R,N
T@"NSArray",R,N,V_attachments
setDateIsCorrect:
setHasDateIsCorrect:
hasDateIsCorrect
setIsFromCongratulation:
setHasIsFromCongratulation:
hasIsFromCongratulation
setModelVersion:
setHasModelVersion:
hasModelVersion
setDidRegexTrigger:
setHasDidRegexTrigger:
hasDidRegexTrigger
offset
setOffset:
setHasOffset:
hasOffset
offsetAsString:
StringAsOffset:
setDidResponseKitTrigger:
setHasDidResponseKitTrigger:
hasDidResponseKitTrigger
dateIsCorrect
isFromCongratulation
modelVersion
didRegexTrigger
didResponseKitTrigger
_modelVersion
_offset
_dateIsCorrect
_didRegexTrigger
_didResponseKitTrigger
_isFromCongratulation
TB,N,V_dateIsCorrect
TB,N,V_isFromCongratulation
TI,N,V_modelVersion
TB,N,V_didRegexTrigger
Ti,N,V_offset
TB,N,V_didResponseKitTrigger
describeUseCase:
categoryForSchema:
categoryForCategoryString:
useCaseForUseCaseString:
isCandidateForExtraction
useCase
providerName
_useCase
_providerName
TC,R,N,V_useCase
T@"NSString",R,N,V_locale
T@"NSString",R,N,V_providerName
_callCalendarObservers:contactsObservers:remindersObservers:withEntry:
addEntry:
_eventBatchOperationSupportedForEntries:
addEntries:
addCalendarObserver:
addContactsObserver:
addRemindersObserver:
freezeObservers
thawObserversForTesting
hasObserver:
_calendarObservers
_contactsObservers
_remindersObservers
_queuedOperations
_observersFrozen
contactEntityFromEntity:
contactEntityWithTitle:duplicateKey:recordId:masterEntityId:
initWithDuplicateKey:recordId:masterEntityId:title:
isEqualToRawKey:
initWithPlainText:taggedCharacterRanges:
insertSubject:
isEqualToDOMParserResult:
T@"NSArray",R,N,V_taggedCharacterRanges
processingQueue
storageQueue
T@"NSOperationQueue",R,N
_resetCachesAndModels
_delayedResetCachesAndModels
sharedBackgroundProcessingQueue
sharedBackgroundStorageQueue
dependencyClassesForDissectorClass:
parallelPipeline:
customPipeline:
emptyPipeline
fullPipeline
retrainingPipeline
remindersTestingPipeline
remindersTestingPipelineWithCustomReminderDissector:
deliveriesTestingPipeline
_dissectOperations:block:
dissectOperationsForMailMessage:entity:inContext:
dissectOperationsForTextMessage:entity:inContext:
dissectOperationsForInteraction:entity:inContext:
_dissectOperations:inContext:
geocodeOperation:withDependencies:
verificationOperation:overrideVerificationStatus:withDependencies:
logDKIMStatus:forPipelineEntity:
verificationOperation:withDependencies:
storeOperation:withStore:dependencies:
storeOperation:withStore:dependencies:originalEnrichmentCount:
storeOperation:spotlightBundleIdentifier:spotlightUniqueIdentifier:spotlightDomainIdentifier:withStore:dependencies:
storeOperation:spotlightBundleIdentifier:spotlightUniqueIdentifier:spotlightDomainIdentifier:withStore:dependencies:originalEnrichmentCount:
dissect:inContext:
dissect:
dissectAndStore:inContext:
dissect:andStore:
_dissectEntity:inContext:andThen:
dissectEntity:andStore:
dissectAndStoreEntity:inContext:destinationStore:
dissectAndStoreEntity:inContext:
dissectAndStoreSpotlightEntity:bundleIdentifier:uniqueIdentifier:domainIdentifier:inContext:
dissectors
_dissectorsAndDependencies
tokenizeTextContent:languageHint:
tokenizeTextContent:languageHint:gazetteer:
prefixForForIdentityKey:
initWithIdentityKey:label:normalizedValue:
isEqualToContactDetailKey:
identityKey
_identityKey
T@"SGIdentityKey",R,N,V_identityKey
initWithEmail:
initWithNormalizedEmail:
initWithIdentityKey:
isEqualToPseudoContactKey:
attachmentWithType:filename:path:
attachmentsFromBiomeAttachments:
attachmentsFromSearchableItem:
testAttachmentWithType:size:
initWithType:filename:path:
isCalendarMimeType
isApplicationMimeType
isMediaMimeType
isOthersMimeType
mimeCategory
setSize:
size
isDownloadedLocally
_isDownloadedLocally
_filename
_size
T@"NSString",R,N,V_type
T@"NSString",R,N,V_filename
TQ,N,V_size
T@"NSString",R,N,V_path
TB,R,N,V_isDownloadedLocally
TB,R,D,N
storageEventFromEntity:
geocodingMode
poiFilters
geocodeStartDate
geocodeStartTimeZone
geocodeEndDate
geocodeEndTimeZone
geocodeLocations
geocodedEventWithStartDate:startTimeZone:endDate:endTimeZone:locations:
urlFromTags
convertToEventWithOrigin:
convertToEvent:
initWithRecordId:duplicateKey:sourceKey:content:title:creationTimestamp:lastModifiedTimestamp:tags:when:locations:structuredData:state:curated:
isFromDataDetectors
isFromSuggestions
isAllDay
opaqueKey
isEqualToStorageEvent:
when
curated
_curated
_when
T@"NSString",R,N,V_content
T@"NSString",R,N,V_title
T{SGUnixTimestamp_=d},R,N,V_creationTimestamp
T{SGUnixTimestamp_=d},R,N,V_lastModifiedTimestamp
T@"SGSimpleTimeRange",R,N,V_when
T@"NSArray",R,N,V_locations
T@"NSSet",R,N,V_tags
T@"NSData",R,N,V_structuredData
TI,R,N,V_state
TB,R,N,V_curated
supportedContentTypes
supportedBundleIDs
addOrUpdateSearchableItems:bundleID:
deleteSearchableItemsWithIdentifiers:bundleID:
deleteSearchableItemsWithDomainIdentifiers:bundleID:
deleteAllSearchableItemsWithBundleID:
deleteSearchableItemsSinceDate:bundleID:
purgeSearchableItemsWithIdentifiers:bundleID:
addUserAction:withItem:
deleteAllUserActivities:
deleteUserActivitiesWithPersistentIdentifiers:bundleID:
supportedINIntentClassNames
addInteractions:bundleID:protectionClass:
deleteInteractionsWithIdentifiers:bundleID:protectionClass:
deleteInteractionsWithGroupIdentifiers:bundleID:protectionClass:
deleteAllInteractionsWithBundleID:protectionClass:
donateRelevantShortcuts:bundleID:
donateRelevantActions:bundleID:
initWithManager:
_addSearchableItem:bundleID:
_purgeAndDeleteIdentifiersDropbox
_deleteDomainIdentifiersDropbox
_deleteInteractionBundleIdDropbox
_deleteInteractionIdDropbox
_deleteInteractionGroupIdDropbox
hasPhoneNumber:
hasEmailAddress:
hasPostalAddress:
findContactsForPerson:fetchingKeys:
findContactsForDetailType:andValue:
personExistsInContacts:name:handle:
normalizedDigits:
numberMatchesContactsForm:
numberMatchesContactsForm:amongContactsWithIdentifiers:
_lengthsCounts
_phonesSeenInContacts
_mostCommonCountryCode
_helperLock
fetchMeContactFromContactStore:
clearMeContactCache
_isMeContact:withContactStore:
_getPeopleWithNameToken:fromContactStore:withKeysToFetch:ifMatchingPredicate:
_findFuzzyNameCandidatesMatchingPseudoContact:withName:andFeatures:fromContactStore:withKeysToFetch:
_filterCandidates:withUniqueDetailMatchesToContact:andFeatures:
filterCandidates:withDetailSubsetOfCNContact:
compareContact:cnContact:newDetails:matchedDetails:matchPreference:
compareContact:cnContact:stopOnNewDetail:stopOnMatchedDetail:matchPreference:
_compareContact:cnContact:newDetails:matchedDetails:matchPreference:stopOnNewDetail:stopOnMatchedDetail:
_filterCandidates:similarToName:exceedingThreshold:
_findContactsMatchingPseudoContact:withName:andFeatures:fromContactStore:withKeysToFetch:
_realtimeContactFromPseudoContact:andFeatures:assimilatingMatchingCuratedContacts:
stripBirthdayFromSGContact:
stripStaleBirthdayFromSGContact:withEntity:
_realtimeContactWithContactStore:forPseudoContact:fromEntity:normalizedName:error:
realtimeContactWithContactStore:forPseudoContact:fromEntity:error:
realtimeContactWithContactStore:forPseudoContact:error:
curatedContactsFromContactStore:matchingPseudoContact:error:
locationsType
hasGroupId
hasSourceKey
hasContent
hasTitle
setHasCreationTimestamp:
hasCreationTimestamp
setHasLastModifiedTimestamp:
hasLastModifiedTimestamp
hasWhen
setAllDay:
setHasAllDay:
hasAllDay
clearLocations
addLocations:
locationsCount
locationsAtIndex:
hasExtraKey
setCancelled:
setHasCancelled:
hasCancelled
hasSchemaOrg
hasDomain
hasTemplateName
setCategoryType:
setHasCategoryType:
hasCategoryType
categoryTypeAsString:
StringAsCategoryType:
hasInteractionInfo
setParentEntityType:
setHasParentEntityType:
hasParentEntityType
hasMetadata
setWhen:
extraKey
setExtraKey:
cancelled
schemaOrg
setSchemaOrg:
setDomain:
templateName
setTemplateName:
categoryType
interactionInfo
setInteractionInfo:
parentEntityType
metadata
setMetadata:
_parentEntityType
_categoryType
_extraKey
_interactionInfo
_metadata
_schemaOrg
_templateName
_cancelled
T@"NSString",&,N,V_groupId
T@"NSString",&,N,V_sourceKey
T@"NSString",&,N,V_content
T@"NSString",&,N,V_title
Td,N,V_creationTimestamp
Td,N,V_lastModifiedTimestamp
T@"SGDCKTimeRange",&,N,V_when
TB,N,V_allDay
T@"NSMutableArray",&,N,V_locations
T@"NSString",&,N,V_extraKey
TB,N,V_cancelled
T@"NSData",&,N,V_schemaOrg
T@"NSString",&,N,V_domain
T@"NSString",&,N,V_templateName
Ti,N,V_categoryType
T@"SGDCKInteractionInfo",&,N,V_interactionInfo
Tq,N,V_parentEntityType
T@"NSData",&,N,V_metadata
topDirectoryCreateIfNeeded:
suggestionsDirectory
suggestionsDirectoryAfterCreatingIfNeeded:
suggestionsDirectoryFile:
suggestionsDirectoryFile:creatingSuggestionsDirectoryIfNeeded:
suggestionsSubdirectory:creatingDirectoriesIfNeeded:
suggestionsSubdirectory:
shouldInvertFirst:last:
firstNameLikelihood:underNamingTradition:default:
inversionRateForNamingTradition:
shouldInvertFirst:last:underNamingTradition:
_tradToTrie
_tradToInversionRate
_confidenceThreshold
initWithSource:messageId:
initWithMailMessageKey:
toMailMessageKey
isEqualToEmailKey:
T@"NSString",R
initWithSalientCount:regularCount:token:
initWithCount:asSalient:token:
newByAdding:asSalient:
salientCount
regularCount
token
_salientCount
_regularCount
_token
T@"NSNumber",R,V_salientCount
T@"NSNumber",R,V_regularCount
T@"NSString",R,V_token
initWithMailCount:unigramTokenCounts:bigramTokenCounts:unigramQueriedTokensCount:bigramQueriedTokensCount:oldestTokenAge:
inferProbability
mailCount
unigramTokenCounts
bigramTokenCounts
unigramQueriedTokensCount
bigramQueriedTokensCount
oldestTokenAge
_mailCount
_unigramTokenCounts
_bigramTokenCounts
_unigramQueriedTokensCount
_bigramQueriedTokensCount
_oldestTokenAge
T@"SGMITokenCounts",R,V_mailCount
T@"SGMITokenCounts",R,V_unigramTokenCounts
T@"SGMITokenCounts",R,V_bigramTokenCounts
T@"NSArray",R,V_unigramQueriedTokensCount
T@"NSArray",R,V_bigramQueriedTokensCount
Td,R,V_oldestTokenAge
initWithMailCount:unigramTokenCounts:bigramTokenCounts:unigramTokensCount:bigramTokensCount:
ingestUnigramTokens:bigramTokens:asSalient:
unigramTokensCount
bigramTokensCount
_unigramTokensCount
_bigramTokensCount
T@"NSMutableDictionary",R,V_unigramTokensCount
T@"NSMutableDictionary",R,V_bigramTokensCount
messageIdWithoutBrackets
removeBrackets:
commitExtractionInfo:
loadExtractionInfoForPrimaryKey:
forLocale:
forLocale:withPersonalNameMapping:
forLocale:tagNames:personalNameMapping:punctuationMapping:
forLocale:tagNames:trustCoreNLP:personalNameMapping:punctuationMapping:
_purgeableNLTaggerWithNameTagging:
_purgeableNSLinguisticTaggerWithTagSchemes:
initForLocale:tagNames:trustCoreNLP:personalNameMapping:punctuationMapping:
_createOrReuseNLPTagger
transformWithCoreNLP:block:
transformWithNLLinguisticTagger:block:
isEqualToTokenizerMappingTransformer:
_tagger
_nameTagging
_trustCoreNLP
_punctuationMapping
_personalNameMapping
sg_confirmedEKEventForSGEvent:
eventsWithSameOpaqueKeyAsPseudoEvent:harvestStore:
eventsWithSameOpaqueKeyAsStorageEvent:harvestStore:
eventsWithSameOpaqueKeyAsDuplicateKey:extraKey:harvestStore:
eventsWithSameAlternativeOpaqueKeyAsPseudoEvent:harvestStore:
eventsWithSameAlternativeOpaqueKeyAsStorageEvent:harvestStore:
eventsWithSameAlternativeOpaqueKeyAsDuplicateKey:harvestStore:
eventWithExternalID:
sg_fetchEKEventsForPseudoEventBySimilarTitleAndStartTime:
_sg_fetchEKEventsForPseudoNLEvent:title:participants:
sg_fetchEKEventsForPseudoNLEvent:entity:
sg_fetchEKEventsForPseudoNLEvent:message:
sg_bumpTimeToLiveForZeroKeywordNLEventOnInteraction:
eventsPerWeekAroundDate:
sg_usingSharedStoreForReadingOnly:
sg_newStore
withTargetMapping:phoneMapping:emailMapping:addressMapping:andDateMapping:
initWithTargetMapping:phoneMapping:emailMapping:addressMapping:andDateMapping:
extendMatchArray:withTarget:
isEqualToEntityMatchingTransformer:
targetMapping
setTargetMapping:
phoneMapping
setPhoneMapping:
addressMapping
setAddressMapping:
dateMapping
setDateMapping:
_targetMapping
_phoneMapping
_addressMapping
_dateMapping
T@"NSString",&,V_targetMapping
T@"NSString",&,V_phoneMapping
T@"NSString",&,V_addressMapping
T@"NSString",&,V_dateMapping
expandRange:by:
stringByReplacingMatches:inRange:withBlock:
initForMigratorTestWithEntityDb:snippetDb:
prepMigrator
migrateDatabases
selectMigrationQueue
unmigrateDatabases
clearDatabase:
configureMigratorThenMigrateToVersion:
maxKnownDbVersion
migrationNeeded
runQuery:onDb:
runQueries:forVersion:inTransactionOnDb:
languageToUpdateEntityFTSTo
_createEntityFTSTableWithName:
_slowCopyFromTable:toTable:startingAtEntityId:
_renameTable:to:
_prepareToCopyFrom:toNewTableNamed:
updateLanguageForFTSTablesToLanguage:
fixupVersionMismatch
migrateToVersion:
unsafeMigrateToVersionForTesting:
skipFromZeroSchema
migrate
migration_deleteLegacyMessages
migration_MoveContentToSnippets
migration_AddAuthorColumnIfMissing
migration_AddNewishTablesIfMissing
migration_FixUpColumnsForDevicesWhoMissedTheImprovedLegacyMigration
migration_RebuildIdentityTables
migration_RecreateFTSTableWithITS
migration_CreateFTSTableWithITS
migration_DeduplicateIdentityPhones
migration_ConvertContentAndDupKeyHashesToBlobs
migration_DropMessagingTermsWithPhoneExtensions
migration_RemoveEntityReferencesWithoutBundleIdentifier
migration_FixupMergeGroups
migration_separateMessageEntities
migration_separateMessageSnippets
migration_rebuildFTSWithDetailEntityIDDocIDs
migration_deleteInteractions
migration_reimport
migration_deleteEmergencyExtractions
migration_deleteInternalExtractionsFromML
migration_deleteSerializedContacts
migration_newRemindersSchema
migration_newContactDetailsSchema
migration_newEventsSchema
migration_deleteNilDateEvents
computeContactConnectionScoreFromEmailAddress:usingEntityStore:
getContactIdentifierForEmail:usingEntityStore:
initWithMessage:candidateName:
isPositiveExample
setIsPositiveExample:
isNegativeExample
setIsNegativeExample:
candidateNameRange
setCandidateNameRange:
_isPositiveExample
_isNegativeExample
_candidateNameRange
TB,N,V_isPositiveExample
TB,N,V_isNegativeExample
T{_NSRange=QQ},N,V_candidateNameRange
initWithMessage:ddMatch:isUnlikelyPhone:
metricsContactDetailOwner
metricsContactDetailFoundIn
regexBelongsToSender
setRegexBelongsToSender:
regexDoesNotBelongToSender
setRegexDoesNotBelongToSender:
isFirstPerson
setIsFirstPerson:
isThirdPerson
setIsThirdPerson:
matchingContacts
ignoreAfter
setIgnoreAfter:
matchDate
setMatchDate:
senderDisplayName
setSenderDisplayName:
_regexBelongsToSender
_regexDoesNotBelongToSender
_isFirstPerson
_isThirdPerson
_matchingContacts
_ignoreAfter
_matchDate
_senderDisplayName
TB,N,V_regexBelongsToSender
TB,N,V_regexDoesNotBelongToSender
TB,N,V_isFirstPerson
TB,N,V_isThirdPerson
T@"NSArray",R,N,V_matchingContacts
TQ,N,V_ignoreAfter
T@"NSDate",W,N,V_matchDate
T@"NSString",W,N,V_senderDisplayName
addSessionForTrainingWithSource:label:language:objective:spotlightRef:embeddedFeaturizer:
detectionFromMessage:ddMatch:matchedContext:withSupervision:inConversation:entityLanguage:
detectionFromMatch:plainTextContent:extractionInfo:isUnlikelyPhone:
selfIdDetectionWithTextMessage:inConversation:withSupervision:
handleTextMessageContactSharing:andMatch:andContext:andLanguage:withSupervision:
birthdayCongratsTextMessage:andLanguage:andHealthStore:
handleTextMessageContactSharingWithNegativeSample:andLanguage:
identifyWarningsFromSubject:content:toRecipients:ccRecipients:bccRecipients:originalToRecipients:originalCcRecipients:attachments:
identifyComposeWarningsFromSubject:content:attributes:toRecipients:ccRecipients:bccRecipients:originalToRecipients:originalCcRecipients:attachments:
identifyComposeWarningsFromSubject:content:toRecipients:ccRecipients:bccRecipients:originalToRecipients:originalCcRecipients:attachments:
identifyComposeWarningsFromSubject:content:toRecipients:ccRecipients:bccRecipients:originalToRecipients:originalCcRecipients:attachments:language:store:disableConservativeCheckRequirement:
_identifyComposeWarningsFromSubject:content:toRecipients:ccRecipients:bccRecipients:originalToRecipients:originalCcRecipients:attachments:language:store:disableConservativeCheckRequirement:
filterOutOrConvertMatches:visibleFlatRecipientEmailsList:visibleFlatRecipientList:bccFlatRecipientList:contactMatchRequired:textContent:regexLanguage:detectedLanguage:store:
matchRecentContact:store:
reportUserEngagement:forWarning:store:
re2WithRegexp:
re2WithRegexpLazy:
re2WithRegexpData:
re2WithRegexpDataLazy:
re2WithSubregexps:prefilter:
re2WithSubregexps:
setCacheLimitForTesting:
isTrivial
matchesString:
enumerateMatchesInString:ngroups:block:
enumerateMatchesInUtf8:fromString:ngroups:block:
enumerateMatchesInUtf8:fromString:ngroups:blockWithSubregexp:
enumerateMatchesInString:ngroups:blockWithSubregexp:
hashId
_enumerateMatchesInUtf8:fromString:ngroups:block:
existsInUtf8:
matchesUtf8:
_isTrivial
initWithRegexp:
initWithRegexpData:
_patternData
_pattern
initWithSubregexps:prefilter:
_subregexps
_prefilter
_regexp
_loadDataDetectorAdditionDict:
dataDetectorMappedAdditions
dataDetectorAdditions
_body
_dataDetectorMappedAdditions
_dataDetectorAdditions
T@"SGMIWarningsDetectionRegex",R,N,V_subject
T@"SGMIWarningsDetectionRegex",R,N,V_body
T@"NSDictionary",R,N,V_dataDetectorMappedAdditions
T@"NSDictionary",R,N,V_dataDetectorAdditions
initWithPattern:options:error:
hashedValueOfString:
initWithPattern:
matchForString:
matchForString:withinRange:
matchesForString:
matchesForString:withinRange:onlyFirstMatch:
privateGroupsCount
_privateGroupsCount
T@"NSNumber",R,N,V_privateGroupsCount
initWithAttachmentDictionary:recipientConservativeDictionary:recipientDictionary:nicknameDictionary:followUpOnOutgoingMailsQuestionsDictionary:followUpOnOutgoingMailsAsksDictionary:followUpOnIncomingMailsDictionary:
attachment
recipientConservative
recipient
followUpOnOutgoingMailsQuestions
followUpOnOutgoingMailsAsks
followUpOnIncomingMails
_attachment
_recipientConservative
_recipient
_followUpOnOutgoingMailsQuestions
_followUpOnOutgoingMailsAsks
_followUpOnIncomingMails
T@"SGMIWarningsDetectionRegexes",R,N,V_attachment
T@"SGMIWarningsDetectionRegexes",R,N,V_recipientConservative
T@"SGMIWarningsDetectionRegexes",R,N,V_recipient
T@"SGMIWarningsDetectionRegexes",R,N,V_nickname
T@"SGMIWarningsDetectionRegexes",R,N,V_followUpOnOutgoingMailsQuestions
T@"SGMIWarningsDetectionRegexes",R,N,V_followUpOnOutgoingMailsAsks
T@"SGMIWarningsDetectionRegexes",R,N,V_followUpOnIncomingMails
initWithRange:coreRange:signature:wildcardsMatches:
coreRange
wildcardsMatches
_wildcardsMatches
_coreRange
T{_NSRange=QQ},R,N,V_coreRange
T@"NSString",R,N,V_signature
T@"NSArray",R,N,V_wildcardsMatches
initWithMailMessage:
forward
backward
forwardWhile:
backwardWhile:
forwardToString:consume:
backwardToString:consume:
seekToStart
seekToEnd
setPos:
_quoted
_str
_pos
TQ,N,V_pos
keyForEmail:
keyForNormalizedEmail:
keyForNormalizedPhone:
keyForInstantMessageAddress:
keyForSocialProfile:
keyForPersonHandle:
keyForContactExternalId:
keyForContactUniqueId:
identityTypeForKeyPart:
initWithType:content:
isEqualToIdentityKey:
hasEmailAddress
hasInstantMessageAddress
instantMessageAddress
hasSocialProfile
hasPhone
phone
externalId
initWithName:value:
propertyName
itemValue
_propertyName
_itemValue
T@"NSString",R,N,V_propertyName
T@"SGMicrodataItem",R,N,V_itemValue
whitespaceSplit:
parse:
initWithDocument:
startElement:withAttributes:
endElement
textContent:
stackItem
_stackItem
T@"SGMicrodataParserStackItem",R,N,V_stackItem
requestReimportFromIdentifier:forPersonHandle:startDate:endDate:
requestReimportForHistoricalDataRequest:
_registerForLockStateChange
_unregisterForLockStateChange
_locked
_unlocked
_attemptToProcessRequests
_protectionClasses
_reimportQueryForPersonHandle:startDate:endDate:requestId:
_executeReimportOfIdentifiers:
_reimportFromBundleId:protectionClasses:identifiers:
_issueCommand:
_deviceStateToken
allowNaturalLanguageDissector
_personForCSPerson:
ipsosMessageWithMailMessage:store:
ipsosMessageWithTextMessage:store:
clearConversations
addEnrichmentForEvents:forMessage:toEntity:
conversationWithIdentifier:
_shouldProcessMessage:entity:
_tagNaturalLanguageEnrichmentsForEntity:
domainIdentifierForSpotlightReferenceForBundleIdentifier:uniqueIdentifier:
hasSpotlightReferenceForBundleIdentifier:uniqueIdentifier:
addSpotlightReferenceToEmailRecordId:withBundleIdentifier:uniqueIdentifier:domainIdentifier:
duplicateKeysFromMailMessageKeys:
duplicateKeysFromRecordIds:
recordIdForKey:
addSpotlightReferenceToEmailIfFullyDownloaded:withBundleIdentifier:uniqueIdentifier:domainIdentifier:
_duplicateKeysWithZeroSpotlightReferencesFromRecordIds:
_markRecordsLostIfNoSpotlightReferences:
_deleteIfNoSpotlightReferences:addToRecentlyDeletedCache:
isRecentlyDeleted:
_recordIdsFromRemovingSpotlightReferencesWithBundleIdentifier:uniqueIdentifiers:
markLostSpotlightReferencesWithBundleIdentifier:uniqueIdentifiers:
deleteSpotlightReferencesWithNoBundleIdentifier
_selectingDomainsForDomainIdentifier:
_tombstoneExistsForBundleIdentifier:
writeTombstoneForSpotlightReferenceWithBundleIdentifier:domainIdentifier:
writeTombstoneForSpotlightReferenceWithBundleIdentifier:domainIdentifiers:
writeTombstoneForSpotlightReferenceWithBundleIdentifier:uniqueIdentifier:
writeTombstoneForSpotlightReferenceWithBundleIdentifier:uniqueIdentifiers:
writeTombstoneForSpotlightReferenceWithBundleIdentifier:
clearAllTombstonesForSpotlightReferencesIf:
tombstoneExistsForSpotlightReferenceWithBundleIdentifier:uniqueIdentifier:domainIdentifier:
batchOf:contactsStartingAtEntityId:
contactsWithIdentifiers:
_minEntityIdFromMinEntityId:withContactIdentifiers:
reindexSearchableItemsWithMinimumEntityId:searchableIndex:acknowledgementHandler:reindexCount:
_shouldContinueReindex:
searchableIndex:reindexAllSearchableItemsWithAcknowledgementHandler:
searchableIndex:reindexSearchableItemsWithIdentifiers:acknowledgementHandler:
searchableIndexDidThrottle:
searchableIndexDidFinishThrottle:
dataForSearchableIndex:itemIdentifier:typeIdentifier:error:
fileURLForSearchableIndex:itemIdentifier:typeIdentifier:inPlace:error:
setSchemaVersion:
schemaVersion
currentColumns
setCurrentColumns:
_schemaVersion
_currentColumns
Tq,N,V_schemaVersion
T@"NSArray",&,N,V_currentColumns
domainForStringTokens:
stringTokensFromDomain:
domainByAppendingToken:toDomain:
_escapedSQLIdentifier:
createTableNamed:inDatabase:
initWithDatabase:tableName:
_updateSchemaVersion
_hasColumn:
_readCurrentColumnsUncached
_addColumn:
_mergeColumn:intoColumn:
_removeColumnFromTotal:
_dropColumn:
_zeroColumn:
_recycleColumn:asColumn:
_deleteZeroRows
_parentDomainsForDomain:
_commitDomainsAndCounts:toColumn:
totalsForDomains:
totalForDomain:
countForColumn:domain:
_domainSegmentCount:
nonZeroColumnsForDomains:withColumns:
nonZeroColumnsForDomain:withColumns:
firstNonZeroColumnForDomains:withColumns:
firstNonZeroColumnForDomain:withColumns:
enumerateChildrenOfDomain:depth:usingBlock:
enumerateChildrenOfDomain:greaterThan:depth:limit:usingBlock:
numberOfRowsAssociatedWithDomain:
hasColumn:
addColumn:
zeroColumn:
dropColumn:
recycleColumn:asColumn:
mergeColumn:intoColumn:
commitDomainsCountedSet:toColumn:
commitDomainsAndCounts:toColumn:
deleteDomainSelection:keepingDomainsPassingTest:
deleteDomainSelection:
deleteDomain:
deleteAllRows
_tableName
_tableNameEscaped
_dbIsMigrated
_columnsToZero
storeInMemory
storeWithFilename:
shouldExposeWarningGivenPositiveFeedbackCount:negativeFeedbackCount:
nsDataFromSignature:
databaseHandle
queriesToSkipFromEmptyToVersion:
initWithDatabaseGetter:journalPath:
_journalQueue
_writeJournalCommand:blob:
_runJournal
_featuresForDatabase:
_effectiveLockState
_handleDeviceLockStateEvent:
_dateFromColumn:
_columnFromDate:
_stringForFeatureName:
_featureNameForString:
_naiveBayesModelQueryResultForFeature:unigramTokens:bigramTokens:usingDatabase:
_highlyDiscriminantTokensForFeature:minCount:minRatio:domains:limit:usingDatabase:
_keyForField:
setUnsubscriptionOpportunitiesSuggestionsDenyListForField:toValues:
incrementUserEngagement:forWarning:
incrementUserEngagement:forFollowUpWarning:
shouldExposeWarning:
shouldExposeWarning:updateAction:
updateAttachmentDetectionStatsOnMailWithTextContent:attachments:warningRaised:attachmentPredicted:isIncomingMail:
updateRecipientDetectionStatsWarningRaised:
updateFollowUpDetectionStatsWithWarning:
warningStatsCount
warningStatsForLogging:
clearSignatureStatsTable
_clearSignatureStatsTableUsingDatabase:
_deleteNaiveBayesModelForProbabilityFeatureName:usingDatabase:
_commitNaiveBayesModel:probabilityFeatureName:updateDate:usingDatabase:
areSubmodelsEmpty
_areSubmodelsEmptyUsingDatabase:
submodelsAgesInDays
subModelsStatsWithShouldContinueBlock:
_subModelsStatsWithShouldContinueBlock:usingDatabase:
purgeTokensWhichLastUpdateWasBefore:shouldContinue:
_purgeTokensWhichLastUpdateWasBefore:shouldContinue:usingDatabase:
_getSGMIStoredAddressesUsingDatabase:
_clearBucketForColumn:
_clearBucketForColumn:usingDatabase:
clearBucketForDate:
clearBucketsForDates:
_deleteTokensForDeletedEmailAddresses:usingDatabase:
applyCappingPolicy:shouldContinue:
_applyCappingPolicy:shouldContinue:usingDatabase:
clearSubModelsTables
_clearSubModelsTablesUsingDatabase:
clearKVStoreTable
_clearKVStoreUsingDatabase:
insertToken:forFeatureName:salientCount:regularCount:time:
migration_createFeaturesTable
migration_createKVTable
migration_createFollowUpTable
migration_createFollowUpTableWithAppleMailMessageIdAsPrimaryKey
migration_createSignatureStatsTable
performMaintenanceWithShouldContinueBlock:
knownEmailAddressesForNickname:
recordMappingFromNickname:toEmailAddress:
recordMappingFromNickname:toEmailAddress:withDateOfMatch:
purgeOldNicknameMappingRecords
clearNicknameMappingTable
_dbGetter
_migrator
_lockStateRegistration
_journalPath
duplicateKeyForMessage:fromSource:
duplicateKeyForEmailWithSource:messageId:
duplicateKeyForTextMessageWithSource:uniqueIdentifier:
duplicateKeyForInteractionWithBundleId:personHandle:
duplicateKeyForInteraction:fromBundleIdentifier:
duplicateKeyForInteractionIdentifier:fromBundleIdentifier:
duplicateKeyForPseudoContactWithIdentity:parentKey:
duplicateKeyForCuratedEventWithExternalID:
duplicateKeyForPseudoEventWithGroupId:parentKey:
duplicateKeyForPseudoReminderWithGroupId:withCreationTime:parentKey:
duplicateKeyForDeliveryWithProviderString:trackingNumber:parentKey:
duplicateKeyForNaturalLanguageEventWithStartDate:endDate:title:participants:parentKey:
duplicateKeyForSearchableItem:
duplicateKeyForSchemaOrg
duplicateKeyForWebPageFromSource:
serializationPassesBasicScrutiny:
initWithEntityKey:entityType:parentKey:
initWithSerializedEntityKey:entityType:serializedParentKey:
initWithMessageIdHeaderValues:accountIdentifier:
isEqualToDuplicateKey:
curatedEventKey
contactDetailKey
pseudoContactKey
messageKey
emailKey
textMessageKey
webPageKey
interactionKey
pseudoEventKey
pseudoReminderKey
deliveryKey
entityType
entityKey
parentKey
_entityType
_entityKey
_parentKey
Tq,R,N,V_entityType
T@"NSObject<SGEntityKey>",R,N,V_entityKey
T@"SGDuplicateKey",R,N,V_parentKey
T@"NSData",R,N
allVIPWaitForResult
T@"NSSet",R,C,N
convertLineEndingsToNetwork:
messageWithIdentifier:error:
isMessageAvailable:
dataForMessageWithIdentifier:error:
verifyDKIMSignatureForPipelineEntity:error:
verifyDKIMSignatureForStorageEvent:error:
verifyDKIMSignatureForMailWithIdentifier:error:
verifyDKIMSignatureForMailWithData:error:
signaturesToRemoveForDKIMVerificationContext:withFromHeaderDomain:
verifyDKIMSignatureForMailWithData:options:error:
emailDaemon
dkimVerifier
_emailDaemon
_dkimVerifier
T@"EMDaemonInterface",R,N,V_emailDaemon
T@"ECDKIMVerifier",R,N,V_dkimVerifier
useProactiveHarvestingForBundleIdentifier:
resourceBundle
localizedStringForKey:preferredLocalization:
foundInAppsStringLongVersionForAppName:contactName:
foundInAppsStringCompactVersionWithContactName:
foundInAppsStringWithoutContactForAppName:
foundInAppsStringForCheckInAction:
schemaFromLodgingReservation:
reservationDurationFromReservationSchema:
messageIdentifiersGeneratingContact:
mergeContact:withContact:
replaceDetailsInContact:onDiskContact:
clearContactsWithConversationIdentifier:
removeContact:
augmentSuggestedContactWithContact:conversationId:store:handle:
_cachedContacts
logReminderInteractionFromEntity:usingStore:interface:actionType:
logReminderInteractionFromReminder:interface:actionType:
_logReminderInteractionSummaryForReminder:interface:actionType:
logReminderExtractionFromEntity:interface:actionType:dueLocation:dueDateComponents:extractionStatus:timingProcessing:
_eventKeyforReminder:
_interactionSummaryForReminder:interface:actionType:
_baseInteractionAttributesForReminder:
_interactionDictionaryForDueLocation:dueDateComponents:
trialIds
describeReminderExtractionStatus:
_contactNames
_fetchContactNamesToLimit:
_fetchContactNamesToLimit:peopleSuggester:
initWithLanguage:
tokenizerWithCoreNLPEnabled:
detectNames:algorithm:
_detectNames:withNameSet:
detectNames:withNameSet:
_detectContactNames:
_detectNLPNames:
_noCoreNLPTokenizer
_coreNLPTokenizer
loadMessagesToRefresh
updateMessages:state:
markMessagesUndisplayablyLost:
markMessagesLost:
pruneLostMessagesWithSource:count:
markMessagesFound:
filterOutUndisplayableEntities:
displayableEntities:
commitEvent:
updateEvent:primaryKey:
insertEvent:
bindStatementsForCommit:storageEvent:
insertEventTagsAndLocations:primaryKey:
loadEventForPrimaryKey:
checkExistsEventForDuplicateKey:
loadEventForDuplicateKey:
loadEventForRecordId:
_serializeRange:
_deserializeRange:
dataOfLength:
seekToFileOffset:
offsetInFile
initWithMemoryMappedPath:
initWithMemoryMappedPath:error:
_bytes
_offsetInFile
TQ,R,V_offsetInFile
distanceBetweenStrings:and:
success
resultWithHistoricalDataRequests:error:
initWithHistoricalDataRequests:error:
isEqualToResult:
historicalDataRequests
error
_historicalDataRequests
_error
T@"NSArray",R,N,V_historicalDataRequests
T@"NSError",R,N,V_error
setStart:
setHasStart:
hasStart
setEnd:
setHasEnd:
hasEnd
setStartUTCOffsetSeconds:
setHasStartUTCOffsetSeconds:
hasStartUTCOffsetSeconds
setEndUTCOffsetSeconds:
setHasEndUTCOffsetSeconds:
hasEndUTCOffsetSeconds
setFloating:
setHasFloating:
hasFloating
startUTCOffsetSeconds
endUTCOffsetSeconds
floating
_endUTCOffsetSeconds
_startUTCOffsetSeconds
_floating
Td,N,V_start
Td,N,V_end
Tq,N,V_startUTCOffsetSeconds
Tq,N,V_endUTCOffsetSeconds
TB,N,V_floating
initWithExternalId:
isEqualToCuratedEventKey:
_externalId
T@"NSString",R,N,V_externalId
initWithRecordId:origin:title:dueDateComponents:dueLocationType:dueLocation:dueLocationTrigger:sourceURL:reminderStatus:opaqueKey:uniqueKey:contactIdentifier:creationDate:
storageReminderFromRecordId:store:
storageReminderFromEntity:store:
storageReminderFromDuplicateKey:store:
storageReminderFromEntity:origin:
storageReminderWithPrimaryKey:store:
initWithRecordId:duplicateKey:sourceKey:origin:dueDate:dueLocationType:dueLocation:dueLocationTrigger:title:reminderStatus:contactIdentifier:creationDate:
isEqualToStorageReminder:
toReminder
commitWithStore:
dueStorageLocation
_dueStorageLocation
T@"SGStorageLocation",R,N,V_dueStorageLocation
messageIdForBundleIdentifier:uniqueIdentifier:
messageIdsForBundleIdentifier:limit:
messageIdsForBundleIdentifier:uniqueIdentifiers:
messageIdsForBundleIdentifier:domainIdentifierGlobs:limit:
spotlightUniqueIdentifierForBundleIdentifier:messageId:
commitSpotlightMapping:bundleIdentifier:domainIdentifier:uniqueIdentifier:
emitContactDeleted:
emitContactUpdated:
emitEventDeleted:
emitEventUpdated:
emitReminderDeleted:
emitReminderUpdated:
emitURLChanged
notificationCount
setPersonFromSenderAge:
setHasPersonFromSenderAge:
hasPersonFromSenderAge
setPersonFromSenderInDyadicConversationAge:
setHasPersonFromSenderInDyadicConversationAge:
hasPersonFromSenderInDyadicConversationAge
setSubjectContentAge:
setHasSubjectContentAge:
hasSubjectContentAge
setPersonToRecipientsAge:
setHasPersonToRecipientsAge:
hasPersonToRecipientsAge
setPersonCCRecipientsAge:
setHasPersonCCRecipientsAge:
hasPersonCCRecipientsAge
setDomainFromSenderAge:
setHasDomainFromSenderAge:
hasDomainFromSenderAge
setConversationAge:
setHasConversationAge:
hasConversationAge
personFromSenderAge
personFromSenderInDyadicConversationAge
subjectContentAge
personToRecipientsAge
personCCRecipientsAge
domainFromSenderAge
conversationAge
_conversationAge
_domainFromSenderAge
_personCCRecipientsAge
_personFromSenderAge
_personFromSenderInDyadicConversationAge
_personToRecipientsAge
_subjectContentAge
Tf,N,V_personFromSenderAge
Tf,N,V_personFromSenderInDyadicConversationAge
Tf,N,V_subjectContentAge
Tf,N,V_personToRecipientsAge
Tf,N,V_personCCRecipientsAge
Tf,N,V_domainFromSenderAge
Tf,N,V_conversationAge
transactionWithName:
setTimeout:
done
doneReturningWasDone
_done
_timeoutTimer
_isEnabled
_isDNUOnlyEnablement
_signatureStatsLogging
_modelGroundTruthVersion
_modelInferenceVersion
_modelPath
_modelFeatureNames
_modelFeatureStandardizationMeans
_modelFeatureStandardizationStandardDeviations
_modelGroundTruthFeatureNames
_modelGroundTruthFeatureLowerBounds
_modelGroundTruthFeatureUpperBounds
_modelGroundTruthOutputs
_saliencyOverrideFeatureNames
_saliencyOverrideFeatureLowerBounds
_saliencyOverrideFeatureUpperBounds
_saliencyOverrideOutputs
_classificationThreshold
_classificationOfflinePrecision
_classificationOfflineRecall
_attachmentDetectionRegexes
_attachmentLinkDetection
_conservativeRecipientDetection
_recipientConservativeDetectionRegexes
_recipientDetectionRegexes
_nicknameDetectionRegexes
_followUpOnOutgoingMailsQuestionsDetectionRegexes
_followUpOnOutgoingMailsAsksDetectionRegexes
_followUpOnIncomingMailsDetectionRegexes
refresh
trialMetadataString
loadLevelAsModelPath:
loadLevelAsBooleanFromFactor:
loadLevelAsNumericFromFactor:
loadLevelAsLongFromFactor:
loadLevelAsStringFromFactor:
loadLevelAsStringArrayFromFactor:
loadLevelAsNumericArrayFromFactor:
loadLevelAsNumericDictionaryFromFactor:
concatPathWithPrefix:suffix:extra:
arrayFromPathWithPrefix:suffix:
dictionaryFromPathWithPrefix:suffix:
loadFactors
isEnabled
isDNUOnlyEnablement
signatureStatsLogging
modelGroundTruthVersion
modelInferenceVersion
modelFeatureNames
modelFeatureStandardizationMeans
modelFeatureStandardizationStandardDeviations
modelGroundTruthFeatureNames
modelGroundTruthFeatureLowerBounds
modelGroundTruthFeatureUpperBounds
modelGroundTruthOutputs
saliencyOverrideFeatureNames
saliencyOverrideFeatureLowerBounds
saliencyOverrideFeatureUpperBounds
saliencyOverrideOutputs
classificationThreshold
classificationOfflinePrecision
classificationOfflineRecall
attachmentDetectionRegexes
attachmentLinkDetection
conservativeRecipientDetection
recipientConservativeDetectionRegexes
recipientDetectionRegexes
nicknameDetectionRegexes
followUpOnOutgoingMailsQuestionsDetectionRegexes
followUpOnOutgoingMailsAsksDetectionRegexes
followUpOnIncomingMailsDetectionRegexes
triClient
setTriClient:
T@"TRIClient",&,N,V_triClient
schemaURLString:isEqualTo:
searchableIndex
dispatchGroup
notifyWhenFlushed:
entityIdentifiersFromCNIdentifiers:
pseudoContactVcardDirectory
urlForRecordIdVCard:
urlForStorageContactVCard:
coreSpotlightAttributeSetForContact:
searchableItemsForContactsForInternalIdentifiers:
sendContactToSpotlight:
removeAllPseudoContactsInIdSet:
_vCardsDirectoryURL
sg_isCuratedEventFromSuggestionNewerThan:
sg_eventMetadata
sg_schemas
sg_fallbackURL
sg_dateComponentsFromISO8601String:
keyForOutputName:label:
indexSetForOutputNameLabelForModelOutput:
labelTokenIndexesForOutputName:label:modelOutput:maxMergeDistance:
labelTokenIndexesForOutputName:label:modelOutput:
firstRangeInIndexSet:
textRangeForIndexRange:inTaggedCharacterRanges:
candidatesForLabelTokenIndexes:inPlainText:forTaggedCharacterRanges:
candidatesForLabelsWithPlainTextIndexSets:inPlainText:
candidatesForPlainTextIndexSet:inPlainText:
dateComponentsFromDataDetectorMatch:inferDates:approximateTime:partialDate:useEndForDurations:
allDayDateComponentsFromDate:
dateComponentsFromDate:
mergeDetectedDateComponents:
mergeComponent:usingBaseDateComponents:withDateComponents:
candidatesForLabelTokenIndexes:inPlainText:
detectedDateComponentsForTokenIndexes:dataDetectorMatches:allowDatesInPast:inferDates:approximateTime:partialDate:allowTimeOffset:useEndForDurations:
dataDetectorMatchesForTokenIndexes:dataDetectorMatches:allowDatesInPast:allowTimeOffset:
textRangeForTokenRange:
detectedDateComponentsForTokenIndexes:dataDetectorMatches:allowDatesInPast:inferDates:approximateTime:partialDate:useEndForDurations:
enrichedTaggedCharacterRanges
setEnrichedTaggedCharacterRanges:
modelOutput
setModelOutput:
indexSetForOutputNameLabel
setIndexSetForOutputNameLabel:
_enrichedTaggedCharacterRanges
_modelOutput
_indexSetForOutputNameLabel
T@"NSArray",&,N,V_enrichedTaggedCharacterRanges
T@"NSDictionary",&,N,V_modelOutput
T@"NSDictionary",&,N,V_indexSetForOutputNameLabel
reservationsContainUniqueItemReferences
reservationClassForSchema:
deliveryForEntity:store:
deliveryForEntity:origin:
hasEmailLanguage
hasRegexLanguage
setType:
setHasType:
hasType
typeAsString:
StringAsType:
setIncomingMessage:
setHasIncomingMessage:
hasIncomingMessage
setNegativeEngagement:
setHasNegativeEngagement:
hasNegativeEngagement
setNoEngagement:
setHasNoEngagement:
hasNoEngagement
setPositiveEngagement:
setHasPositiveEngagement:
hasPositiveEngagement
setBlockedWarningCount:
setHasBlockedWarningCount:
hasBlockedWarningCount
emailLanguage
setEmailLanguage:
regexLanguage
setRegexLanguage:
incomingMessage
negativeEngagement
noEngagement
positiveEngagement
blockedWarningCount
_blockedWarningCount
_emailLanguage
_negativeEngagement
_noEngagement
_positiveEngagement
_regexLanguage
_incomingMessage
T@"NSString",&,N,V_emailLanguage
T@"NSString",&,N,V_regexLanguage
Ti,N,V_type
TB,N,V_incomingMessage
T@"NSData",&,N,V_signature
TI,N,V_negativeEngagement
TI,N,V_noEngagement
TI,N,V_positiveEngagement
TI,N,V_blockedWarningCount
logReminder:actionType:
logActionVerb:actionType:
_logReminderTitleSequence:recorderKey:
_logReminderTitleUnknownTokens:recorderKey:
logReminderTitle:actionType:
logUserCreatedReminderTitle:
_tokenizeTitle:
_boolMaskVectorForTokens:
_loggableTitleSequence:withMask:
_loggableUnknownTokenSequence:withMask:
missingAttachmentType
missingRecipientType
hasSubmodelsProbabilities
setPredictedSaliencyScore:
setHasPredictedSaliencyScore:
hasPredictedSaliencyScore
predictedSaliency
setPredictedSaliency:
setHasPredictedSaliency:
hasPredictedSaliency
predictedSaliencyAsString:
StringAsPredictedSaliency:
setSaliencyPredictionPerformanceInMilliSeconds:
setHasSaliencyPredictionPerformanceInMilliSeconds:
hasSaliencyPredictionPerformanceInMilliSeconds
setEstimatedGroundTruth:
setHasEstimatedGroundTruth:
hasEstimatedGroundTruth
clearMissingAttachments
addMissingAttachment:
missingAttachmentsCount
missingAttachmentAtIndex:
setMissingAttachmentPredictionPerformanceInMilliSeconds:
setHasMissingAttachmentPredictionPerformanceInMilliSeconds:
hasMissingAttachmentPredictionPerformanceInMilliSeconds
clearMissingRecipients
addMissingRecipient:
missingRecipientsCount
missingRecipientAtIndex:
setMissingRecipientPredictionPerformanceInMilliSeconds:
setHasMissingRecipientPredictionPerformanceInMilliSeconds:
hasMissingRecipientPredictionPerformanceInMilliSeconds
submodelsProbabilities
setSubmodelsProbabilities:
predictedSaliencyScore
saliencyPredictionPerformanceInMilliSeconds
estimatedGroundTruth
missingAttachments
setMissingAttachments:
missingAttachmentPredictionPerformanceInMilliSeconds
missingRecipients
setMissingRecipients:
missingRecipientPredictionPerformanceInMilliSeconds
_missingAttachmentPredictionPerformanceInMilliSeconds
_missingRecipientPredictionPerformanceInMilliSeconds
_saliencyPredictionPerformanceInMilliSeconds
_missingAttachments
_missingRecipients
_predictedSaliency
_predictedSaliencyScore
_submodelsProbabilities
_estimatedGroundTruth
T@"SGMIMetricsSubmodelsProbabilities",&,N,V_submodelsProbabilities
Tf,N,V_predictedSaliencyScore
Ti,N,V_predictedSaliency
TQ,N,V_saliencyPredictionPerformanceInMilliSeconds
TB,N,V_estimatedGroundTruth
T@"NSMutableArray",&,N,V_missingAttachments
TQ,N,V_missingAttachmentPredictionPerformanceInMilliSeconds
T@"NSMutableArray",&,N,V_missingRecipients
TQ,N,V_missingRecipientPredictionPerformanceInMilliSeconds
initWithParent:item:htmlId:textConsumer:
document
parent
textConsumers
itemScopes
_document
_parent
_textConsumers
_itemScopes
T@"SGMicrodataDocument",R,V_document
T@"SGMicrodataParserStackItem",R,V_parent
T@"NSArray",R,V_textConsumers
T@"NSArray",R,V_itemScopes
summarizeStreamByMessage
summarizeStreamByMessageStartingFromDaysAgo:
summarizeStreamByMessageWithPublisher:
initWithLanguage:windowLength:
isEqualToContactSharingTransformer:
setLanguage:
windowLength
setWindowLength:
_rng
_windowLength
T@"NSString",&,V_language
Tq,V_windowLength
asset
notificationQueue
localeAsset
localeAssetIdentifier
regionAsset
regionAssetIdentifier
downloadMetadataWithCompletion:
commitTag:
loadTagForPrimaryKey:
initWithSGSqlEntityStore:andEKStore:
_runWithEKEventStore:
addEvent:commit:
_updateEvent:withValuesFrom:ekStore:
cancelEvent:commit:
_eventsAssociatedWithStorageEvent:store:
_addEKEventToCalendar:storageEvent:ekStore:commit:
_updateEKEvent:withEvent:ekStore:error:
_cancelEKEvent:ekStore:error:
_isEKEventFromSuggestedCalendar:ekStore:
_isEKEventFromNLEventsCalendar:ekStore:
_removeEvent:commit:
_updateEventMetadataInModifiedEvent:withExistingCheckInShortcutInOriginalEvent:ifTeamIdentifierIsDifferentInStorageEvent:
_removeEKEvent:store:commit:
_lazyEKStoreLock
hasComponentName
setSignificantWork:
setHasSignificantWork:
hasSignificantWork
componentName
setComponentName:
_componentName
T@"NSString",&,N,V_componentName
TB,N,V_significantWork
freeSpace
dbErrorWithCode:sqliteReturnValue:lastErrno:query:
corruptionMarkerPath
placeCorruptionMarker
_abortDueToSqliteError:onError:
_handle_UNKNOWN_ERROR:onError:
_handle_SQLITE_FULL:onError:
_handle_SQLITE_CORRUPT:onError:
_handle_SQLITE_CORRUPT_VTAB:onError:
_handle_SQLITE_NOTADB:onError:
_handle_SQLITE_IOERR_SHORT_READ:onError:
_handle_SQLITE_CANTOPEN:onError:
_handle_SQLITE_CANTOPEN_NOTEMPDIR:onError:
_handle_SQLITE_CANTOPEN_ISDIR:onError:
_handle_SQLITE_CANTOPEN_FULLPATH:onError:
_handle_SQLITE_CANTOPEN_CONVPATH:onError:
_handle_SQLITE_IOERR:onError:
_handle_SQLITE_IOERR_SHMSIZE:onError:
_handle_SQLITE_IOERR_READ:onError:
_handle_SQLITE_IOERR_WRITE:onError:
_handle_SQLITE_IOERR_FSYNC:onError:
_handle_SQLITE_IOERR_DIR_FSYNC:onError:
_handle_SQLITE_IOERR_TRUNCATE:onError:
_handle_SQLITE_IOERR_FSTAT:onError:
_handle_SQLITE_IOERR_UNLOCK:onError:
_handle_SQLITE_IOERR_RDLOCK:onError:
_handle_SQLITE_IOERR_DELETE:onError:
_handle_SQLITE_IOERR_BLOCKED:onError:
_handle_SQLITE_IOERR_NOMEM:onError:
_handle_SQLITE_IOERR_ACCESS:onError:
_handle_SQLITE_IOERR_CHECKRESERVEDLOCK:onError:
_handle_SQLITE_IOERR_LOCK:onError:
_handle_SQLITE_IOERR_CLOSE:onError:
_handle_SQLITE_IOERR_DIR_CLOSE:onError:
_handle_SQLITE_IOERR_SHMOPEN:onError:
_handle_SQLITE_IOERR_SHMLOCK:onError:
_handle_SQLITE_IOERR_SHMMAP:onError:
_handle_SQLITE_IOERR_SEEK:onError:
_handle_SQLITE_IOERR_DELETE_NOENT:onError:
_handle_SQLITE_IOERR_MMAP:onError:
_handle_SQLITE_IOERR_GETTEMPPATH:onError:
_handle_SQLITE_IOERR_CONVPATH:onError:
_handle_SQLITE_IOERR_VNODE:onError:
_handle_SQLITE_IOERR_AUTH:onError:
_handle_SQLITE_ERROR:onError:
_handle_SQLITE_INTERNAL:onError:
_handle_SQLITE_PERM:onError:
_handle_SQLITE_ABORT:onError:
_handle_SQLITE_BUSY:onError:
_handle_SQLITE_LOCKED:onError:
_handle_SQLITE_NOMEM:onError:
_handle_SQLITE_READONLY:onError:
_handle_SQLITE_INTERRUPT:onError:
_handle_SQLITE_NOTFOUND:onError:
_handle_SQLITE_PROTOCOL:onError:
_handle_SQLITE_EMPTY:onError:
_handle_SQLITE_SCHEMA:onError:
_handle_SQLITE_TOOBIG:onError:
_handle_SQLITE_CONSTRAINT:onError:
_handle_SQLITE_MISMATCH:onError:
_handle_SQLITE_MISUSE:onError:
_handle_SQLITE_NOLFS:onError:
_handle_SQLITE_AUTH:onError:
_handle_SQLITE_FORMAT:onError:
_handle_SQLITE_RANGE:onError:
_handle_SQLITE_NOTICE:onError:
_handle_SQLITE_WARNING:onError:
_handle_SQLITE_LOCKED_SHAREDCACHE:onError:
_handle_SQLITE_BUSY_RECOVERY:onError:
_handle_SQLITE_BUSY_SNAPSHOT:onError:
_handle_SQLITE_READONLY_RECOVERY:onError:
_handle_SQLITE_READONLY_CANTLOCK:onError:
_handle_SQLITE_READONLY_ROLLBACK:onError:
_handle_SQLITE_READONLY_DBMOVED:onError:
_handle_SQLITE_ABORT_ROLLBACK:onError:
_handle_SQLITE_CONSTRAINT_CHECK:onError:
_handle_SQLITE_CONSTRAINT_COMMITHOOK:onError:
_handle_SQLITE_CONSTRAINT_FOREIGNKEY:onError:
_handle_SQLITE_CONSTRAINT_FUNCTION:onError:
_handle_SQLITE_CONSTRAINT_NOTNULL:onError:
_handle_SQLITE_CONSTRAINT_PRIMARYKEY:onError:
_handle_SQLITE_CONSTRAINT_TRIGGER:onError:
_handle_SQLITE_CONSTRAINT_UNIQUE:onError:
_handle_SQLITE_CONSTRAINT_VTAB:onError:
_handle_SQLITE_CONSTRAINT_ROWID:onError:
_handle_SQLITE_NOTICE_RECOVER_WAL:onError:
_handle_SQLITE_NOTICE_RECOVER_ROLLBACK:onError:
_handle_SQLITE_WARNING_AUTOINDEX:onError:
_handle_SQLITE_AUTH_USER:onError:
_handle_sqlite_error_code:error:onError:
corruptionMarkerFilename
corruptionMarkerPathForPath:
journalWithName:
journalForInMemoryDb
_binderForDictionary:
_allowedTypesForQueryKeyedArchives
runQuery:values:onDb:
_executeFile:onDb:becameLocked:
executeQueriesOnDatabase:
deleteAllJournaledQueries
journaling
_directoryPath
_serialNumber
_journaling
_inMemory
_currentFile
TB,R,N,V_journaling
@16@0:8
B24@0:8@16
@24@0:8@16
@32@0:8@16@24
@24@0:8^{_NSZone=}16
v24@0:8@16
B16@0:8
v20@0:8B16
v16@0:8
@"CSPerson"
@"NSArray"
@"NSString"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@40@0:8@16@24@32
@24@0:8@"NSMutableArray"16
@40@0:8@16@"NSArray"24@"NSDictionary"32
@"NSObject<PMLTransformerProtocol>"
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
{?="model"b1"supervision"b1"result"b1}
v20@0:8I16
I16@0:8
{?="exitCode"b1}
{?="app"b1"wasKnownContact"b1"wasSuggestedContact"b1}
@32@0:8Q16@24
@56@0:8@16@24@32@40@48
v48@0:8@16@24q32@40
v40@0:8@16@24@32
@"INPersonHandle"
@"NSDate"
@"NSPersonNameComponents"
@"SGSocialProfileDetails"
{?="app"b1"wasSuggestedContact"b1}
@32@0:8@16^@24
@24@0:8q16
@60@0:8@16@24@32@40C48q52
B28@0:8C16@20
{_PASDBIterAction_=B}32@0:8@16@24
B32@0:8q16^q24
B32@0:8@16^q24
B32@0:8@16@24
@32@0:8@16Q24
#24@0:8Q16
@40@0:8@16@24Q32
@48@0:8@16@24@32@40
@"<PMLMultiLabelClassifierProtocol>"
@"<PMLTransformerProtocol>"
@"SGModelSource"
@40@0:8@16@24#32
v24@0:8#16
@"PMLSessionDescriptor"
@40@0:8Q16Q24@32
B32@0:8Q16@24
{?="detail"b1"extractionModelVersion"b1"extractionSignatureSource"b1"foundInSenderCNContact"b1"outcome"b1"source"b1"isUnlikelyPhone"b1"signature"b1}
{?="detail"b1"foundIn"b1"source"b1"tokens"b1"hasName"b1}
q24@0:8@16
{?="cacheHit"b1}
{?="contactDetail"b1"mode"b1"model"b1"supervision"b1"correct"b1"result"b1}
v40@0:8@16@24@?32
@32@0:8@16@?24
v32@0:8@16@24
@52@0:8@16@24@32@40B48
B32@0:8@16q24
@56@0:8@16C24@28@36@44B52
@24@0:8^@16
@40@0:8@16@24^@32
@52@0:8@16C24@28@36@44
C16@0:8
^i16@0:8
i24@0:8Q16
v32@0:8^i16Q24
v24@0:8Q16
{?="list"^i"count"Q"size"Q}
@"SGMIMetricsTrialMetadata"
@"SGMIMetricsSubmodelsStats"
{?="biomeAggregationPerformanceInMilliSeconds"b1"cumulatedSubmodelsRollbackForPostDeletionPolicyPerformanceInMilliSeconds"b1"submodelsPruningForCappingPolicyPerformanceInMilliSeconds"b1"submodelsUpdatePerformanceInMilliSeconds"b1"daysAvailableDuringIncrementalUpdate"b1"daysProcessedDuringIncrementalUpdate"b1"deletedEmailsCount"b1"deletedTokensCountToComplyToCappingPolicy"b1"hoursSinceLastIncrementalUpdate"b1"hoursSinceReference"b1"mailsProcessedDuringIncrementalUpdate"b1"rollbackedEmailsCountToComplyToPostDeletionPolicy"b1"rollbackedSlicesCountToComplyToPostDeletionPolicy"b1"isSubmodelRebuilt"b1}
@28@0:8@16B24
B36@0:8@16@24B32
@40@0:8@16@24@?32
v40@0:8@"SGSimpleMailMessage"16@"SGPipelineEntity"24@"SGRequestContext"32
v40@0:8@"SGTextMessage"16@"SGPipelineEntity"24@"SGRequestContext"32
@56@0:8@16@24@32@40Q48
@80@0:8@16@24C32@36C44@48C56@60@68B76
@32@0:8q16@24
@"NSMutableDictionary"
@"RTRoutineManager"
{?="app"b1}
@"NSNumber"
@"_PASLock"
{?="errorCode"b1}
@"FIAPResult"16@0:8
@"FIAPResult"24@0:8@"CSSearchableItem"16
@"FIAPResult"32@0:8@"CSUserAction"16@"CSSearchableItem"24
@"FIAPResult"40@0:8@"INInteraction"16@"NSString"24@"NSString"32
v32@0:8@"NSString"16@"NSArray"24
v24@0:8@"NSString"16
@"HVConsumerReply"24@0:8@"HVSpotlightDeletionRequest"16
@"HVConsumerReply"24@0:8@"HVConsumptionContext"16
@84@0:8@16@24@32@40B48@52@60@68@76
@76@0:8@16@24@32@40B48@52@60@68
@"SGSqlEntityStore"
@"SGURLDissector"
@32@0:8@16q24
@52@0:8@16@24@32B40Q44
q32@0:8q16@24
q32@0:8q16{SGUnixTimestamp_=d}24
@"SGMIMetricsAggregatedAccuracyLog"
{?="hoursSinceReference"b1}
{?="method"b1}
{?="customResponsesAfterPruning"b1}
@"NSMutableArray"
@32@0:8@16B24B28
v76@0:8{SGMDocumentType_=Q}16B24B28{SGMContactDetailType_=Q}32{SGMContactDetailExtractionOutcome_=Q}40{SGMContactDetailOwner_=Q}48@56B64{SGMContactDetailExtractionSignatureSource_=Q}68
v76@0:8{SGMContactDetailExtractionOutcome_=Q}16{SGMContactDetailType_=Q}24@32B40B44Q48@56@64B72
v48@0:8{SGMContactDetailExtractionOutcome_=Q}16@24B32B36@40
v60@0:8{SGMContactDetailExtractionOutcome_=Q}16@24B32B36@40@48B56
v68@0:8{SGMContactDetailExtractionOutcome_=Q}16@24B32B36@40{SGMContactDetailOwner_=Q}48@56B64
v52@0:8{SGMContactDetailExtractionOutcome_=Q}16@24{_NSRange=QQ}32B48
v48@0:8C16@20@28C36C40C44
v28@0:8B16i20i24
v40@0:8@16@24{SGMContactDetailFoundIn_=Q}32
@"PETEventTracker2"
v56@0:8@16@24@32@40q48
v64@0:8@16@24@32@40@48@56
B24@0:8q16
@24@0:8@"NSString"16
B44@0:8i16@20@?28@36
v32@0:8@16Q24
v24@0:8d16
@44@0:8@16i24@28@36
@"SGEntity"
@"SGCuratedEventKey"
v24@0:8@"NSSet"16
@32@0:8@?16@?24
v40@0:8Q16Q24@32
v44@0:8i16@20@28@36
v32@0:8@16S24S28
v40@0:8Q16Q24@"NSString"32
v44@0:8i16@"SGRecordId"20@"NSString"28@"NSString"36
v40@0:8@"SGRecordId"16@"NSString"24@"NSString"32
v32@0:8@"NSString"16S24S28
v32@0:8@"SGRecordId"16S24S28
v24@0:8@?16
v24@0:8@?<v@?@"SGXPCResponse1">16
v24@0:8@?<v@?@"SGXPCResponse">16
v32@0:8@16@?24
v32@0:8@"SGRealtimeEvent"16@?<v@?@"SGXPCResponse">24
v32@0:8@"SGRecordId"16@?<v@?@"SGXPCResponse">24
v40@0:8@"NSString"16@"NSDate"24@?<v@?@"SGXPCResponse1">32
v36@0:8@16i24@?28
v36@0:8@"SGRealtimeContact"16i24@?<v@?@"SGXPCResponse">28
v36@0:8@"SGRecordId"16i24@?<v@?@"SGXPCResponse">28
v40@0:8@16Q24@?32
v32@0:8Q16@?24
v40@0:8@16q24@?32
v60@0:8@16@24@32B40Q44@?52
v36@0:8Q16B24@?28
v48@0:8@16@24@32@?40
v40@0:8q16@24@?32
v56@0:8q16Q24d32Q40@?48
v40@0:8q16Q24@?32
v88@0:8@16@24@32@40@48@56@64@72@?80
v96@0:8@16@24@32@40@48@56@64@72@80@?88
v36@0:8B16@20@?28
v36@0:8B16q20@?28
v40@0:8@"CSSearchableItem"16Q24@?<v@?@"SGXPCResponse1">32
v40@0:8@"NSArray"16Q24@?<v@?@"SGXPCResponse">32
v40@0:8@"NSArray"16@"NSArray"24@?<v@?@"SGXPCResponse">32
v32@0:8Q16@?<v@?@"SGXPCResponse1">24
v32@0:8@"NSArray"16@?<v@?@"SGXPCResponse">24
v32@0:8@"NSData"16@?<v@?@"SGXPCResponse1">24
v32@0:8@"SGMailHeaders"16@?<v@?@"SGXPCResponse1">24
v40@0:8@"NSString"16q24@?<v@?@"SGXPCResponse1">32
v60@0:8@"NSArray"16@"NSArray"24@"NSDate"32B40Q44@?<v@?@"SGXPCResponse1">52
v36@0:8Q16B24@?<v@?@"SGXPCResponse1">28
v40@0:8@"NSString"16@"NSAttributedString"24@?<v@?@"SGXPCResponse1">32
v48@0:8@"NSString"16@"NSString"24@"NSDate"32@?<v@?@"SGXPCResponse1">40
v40@0:8q16@"NSArray"24@?<v@?@"SGXPCResponse">32
v56@0:8q16Q24d32Q40@?<v@?@"SGXPCResponse1">48
v40@0:8q16Q24@?<v@?@"SGXPCResponse1">32
v88@0:8@"NSString"16@"NSAttributedString"24@"NSArray"32@"NSArray"40@"NSArray"48@"NSArray"56@"NSArray"64@"NSArray"72@?<v@?@"SGXPCResponse1">80
v96@0:8@"NSString"16@"NSString"24@"NSDictionary"32@"NSArray"40@"NSArray"48@"NSArray"56@"NSArray"64@"NSArray"72@"NSArray"80@?<v@?@"SGXPCResponse1">88
v36@0:8B16@"SGMailIntelligenceWarning"20@?<v@?@"SGXPCResponse1">28
v36@0:8B16q20@?<v@?@"SGXPCResponse1">28
v40@0:8q16@"NSData"24@?<v@?@"SGXPCResponse1">32
v40@0:8q16@"NSString"24@?<v@?@"SGXPCResponse1">32
v48@0:8@16@24Q32@?40
v40@0:8@"CSSearchableItem"16Q24@?<v@?@"SGXPCResponse3">32
v48@0:8@"CSSearchableItem"16@"NSString"24Q32@?<v@?@"SGXPCResponse3">40
v48@0:8@"CSSearchableItem"16@"NSString"24Q32@?<v@?@"SGXPCResponse1">40
v48@0:8@"NSArray"16@"NSString"24Q32@?<v@?@"SGXPCResponse3">40
v36@0:8@16C24@?28
v36@0:8@"SGRecordId"16C24@?<v@?@"SGXPCResponse1">28
v48@0:8@16Q24B32B36@?40
v36@0:8B16Q20@?28
v40@0:8@"CNContact"16Q24@?<v@?@"SGXPCResponse1">32
v40@0:8@"NSString"16Q24@?<v@?@"SGXPCResponse1">32
v40@0:8@"NSArray"16Q24@?<v@?@"SGXPCResponse1">32
v32@0:8@"NSString"16@?<v@?@"SGXPCResponse1">24
v32@0:8@"SGRecordId"16@?<v@?@"SGXPCResponse1">24
v32@0:8@"NSArray"16@?<v@?@"SGXPCResponse1">24
v32@0:8@"SGSocialProfile"16@?<v@?@"SGXPCResponse1">24
v48@0:8@"NSString"16Q24B32B36@?<v@?@"SGXPCResponse1">40
v24@0:8@?<v@?@"SGXPCResponse3">16
v36@0:8B16Q20@?<v@?@"SGXPCResponse1">28
v28@0:8I16@?20
v52@0:8@16@24@32I40@?44
v64@0:8@16@24@32@40C48I52@?56
v36@0:8C16@20@?28
v28@0:8I16@?<v@?@"SGXPCResponse1">20
v52@0:8@"NSDate"16@"NSDate"24@"NSSet"32I40@?<v@?@"SGXPCResponse1">44
v64@0:8@"NSDate"16@"NSDate"24@"NSSet"32@"NSString"40C48I52@?<v@?@"SGXPCResponse1">56
v36@0:8C16@"NSString"20@?<v@?@"SGXPCResponse">28
v56@0:8@16@24@32B40B44@?48
v44@0:8@16@24B32@?36
v56@0:8@"NSString"16@"NSURL"24@"NSLocale"32B40B44@?<v@?@"SGXPCResponse1">48
v32@0:8@"SGSuggestedEventLaunchInfo"16@?<v@?@"SGXPCResponse">24
v40@0:8@"NSURL"16@"NSString"24@?<v@?@"SGXPCResponse1">32
v44@0:8@"NSURL"16@"NSString"24B32@?<v@?@"SGXPCResponse1">36
v48@0:8@"NSURL"16@"NSString"24@"NSString"32@?<v@?@"SGXPCResponse1">40
v32@0:8@"SGReminder"16@?<v@?@"SGXPCResponse">24
v32@0:8@"NSString"16@?<v@?@"SGXPCResponse">24
v40@0:8@"NSData"16@"NSData"24@?<v@?@"SGXPCResponse">32
v40@0:8@"NSString"16@"NSArray"24@?<v@?@"SGXPCResponse">32
v40@0:8@"NSString"16@"_PASDomainSelection"24@?<v@?@"SGXPCResponse">32
v52@0:8@16@24Q32I40@?44
v60@0:8@16@24@32Q40I48@?52
v36@0:8Q16I24@?28
v56@0:8@16@24@32@40@?48
v28@0:8B16@?20
v64@0:8@16@24@32d40@48@?56
v56@0:8@16@24@32Q40@?48
v52@0:8@"NSDate"16@"NSDate"24Q32I40@?<v@?@"SGXPCResponse1">44
v60@0:8@"NSDate"16@"NSDate"24@"NSString"32Q40I48@?<v@?@"SGXPCResponse1">52
v36@0:8Q16I24@?<v@?@"SGXPCResponse1">28
v56@0:8@"NSURL"16@"NSString"24@"NSString"32@"NSDate"40@?<v@?@"SGXPCResponse1">48
v48@0:8@"NSData"16@"NSString"24Q32@?<v@?@"SGXPCResponse1">40
v28@0:8B16@?<v@?@"SGXPCResponse">20
v64@0:8@"NSArray"16@"NSArray"24@"NSString"32d40@"NSArray"48@?<v@?@"SGXPCResponse1">56
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"SGXPCResponse">32
v56@0:8@"NSString"16@"NSString"24@"NSDate"32@"NSDate"40@?<v@?@"SGXPCResponse">48
v56@0:8@"NSString"16@"NSData"24@"NSString"32Q40@?<v@?@"SGXPCResponse1">48
v48@0:8@"SGSimpleMailMessage"16@"NSData"24Q32@?<v@?@"SGXPCResponse1">40
v40@0:8@"NSDictionary"16@"NSArray"24@?<v@?@"SGXPCResponse1">32
S24@0:8@16
@40@0:8@16@?24@?32
B40@0:8@16@24@32
B48@0:8@16@24@32Q40
v44@0:8@16@24i32@?36
v48@0:8@16@24B32i36@?40
B32@0:8@?16@24
{SGMContactDetailUsedApp_=Q}24@0:8@16
@"NSXPCConnection"
@"SGSuggestHistory"
@"_PASNotificationToken"
@"NSOperationQueue"
@"SGDManagerForCTS"
@"SGEKEventStoreProvider"
@"CNContactStore"
@"NSDictionary"
@"NSLock"
@"SGXpcTransaction"
@"SGSearchableItemIdTriple"
@"SGFuture"
@"SGCoalescingDropBox"
@"SGServiceContext"
@"NSDataDetector"
{?="ignorablePredictedAsIgnorable"b1"ignorablePredictedAsNeutral"b1"ignorablePredictedAsSalient"b1"neutralPredictedAsIgnorable"b1"neutralPredictedAsNeutral"b1"neutralPredictedAsSalient"b1"salientPredictedAsIgnorable"b1"salientPredictedAsNeutral"b1"salientPredictedAsSalient"b1}
@48@0:8@16@24@32B40B44
Q32@0:8@16@24
{?="documentSource"b1"harvestSource"b1"harvestedOnBattery"b1"highPriority"b1"receivedOnBattery"b1}
@24@0:8r*16
@"NSData"
B48@0:8@16@24@32@40
B56@0:8@16@24@32@40@48
{SGDSuggestManagerCTSCriteriaState="hasItemsHighPriority"B"hasItemsLowPriority"B}
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
@"<SGXPCActivityManagerProtocol>"
@?24@0:8@?16
@?16@0:8
C32@0:8@16@24
@40@0:8q16q24@32
@40@0:8@16@24^B32
q64@0:8@16@24@32Q40{_NSRange=QQ}48
{SGMEventICSSourceType_=Q}24@0:8@16
@"SGAccountsAdapter"
@"SGContactDetail"
q16@0:8
@"NSMutableSet"
@"SGRecordId"
@"SGContactDetailsHolder"
@24@0:8^I16
v32@0:8@16d24
d32@0:8@16d24
d24@0:8@16
v48@0:8d16d24@32@40
@"NSSet"
@"ACAccountStore"
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_source>"
v24@0:8@"SGStorageEvent"16
v24@0:8@"NSArray"16
v24@0:8@"SGStorageContact"16
v24@0:8@"SGStorageReminder"16
@"REMStore"
v20@0:8f16
@24@0:8Q16
f16@0:8
@"SGMIMetricsInferenceAndGroundTruth"
{?="hoursSinceReference"b1"nbCharactersInMailSubject"b1"nbTokensInMailSubject"b1"previousInteractionFromUserOnConversationInMinutes"b1"previousInteractionOnConversationInMinutes"b1"senderConnectionScore"b1"timeDifferenceFromReceptionToSaliencyInferenceInSeconds"b1}
@44@0:8@16B24@28^@36
@68@0:8@16@24@32i40@?44@52@60
@48@0:8@16i24@?28@36B44
@32@0:8@16^i24
@40@0:8@16Q24Q32
{_NSRange=QQ}16@0:8
v32@0:8{_NSRange=QQ}16
@"SGExtractionInfo"
{_NSRange="location"Q"length"Q}
v24@0:8{SGUnixTimestamp_=d}16
v64@0:8@16@24@32{_NSRange=QQ}40@56
@64@0:8@16@24@32{_NSRange=QQ}40@56
^{?={?=SS}BBBBB}16@0:8
{?="_featureType"{?="bom"S"tag"S}"hasInhumanHeaders"B"inhumanEmailAddress"B"inhumanAuthorName"B"inhumanBody"B"isTemplate"B}
@"_PASLazyResult"
@"SGMessage"
@"SGSimpleMailMessage"
@"SGTextMessage"
@"INInteraction"
@"SGHarvestQueueMetrics"
{SGUnixTimestamp_=d}16@0:8
d16@0:8
v24@0:8q16
@"SGDuplicateKey"
{SGUnixTimestamp_="secondsFromUnixEpoch"d}
@"SGSimpleTimeRange"
@36@0:8@16@24B32
@32@0:8@16{SGUnixTimestamp_=d}24
@36@0:8@16{SGUnixTimestamp_=d}24B32
v32@0:8@16{SGUnixTimestamp_=d}24
@44@0:8@16@24@32B40
@"NSUbiquitousKeyValueStore"
@"SGNoCloudNSUbiquitousKeyValueStore"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@56@0:8Q16@24@32@40@48
@36@0:8@16Q24B32
{_NSRange=QQ}24@0:8@16
v32@0:8^{__DDResult={__CFRuntimeBase=QAQ}{__DDQueryRange={__DDQueryOffset=b32b32}{__DDQueryOffset=b32b32}}{?=qq}q^{__CFArray}^{__CFString}^{__CFString}^v^{__CFDictionary}qCf}16@24
^{__DDResult={__CFRuntimeBase=QAQ}{__DDQueryRange={__DDQueryOffset=b32b32}{__DDQueryOffset=b32b32}}{?=qq}q^{__CFArray}^{__CFString}^{__CFString}^v^{__CFDictionary}qCf}
B24@0:8^{__DDResult={__CFRuntimeBase=QAQ}{__DDQueryRange={__DDQueryOffset=b32b32}{__DDQueryOffset=b32b32}}{?=qq}q^{__CFArray}^{__CFString}^{__CFString}^v^{__CFDictionary}qCf}16
@48@0:8@16@24^{_NSRange=QQ}32@40
@84@0:8I16{_NSRange=QQ}20{_NSRange=QQ}36@52{_NSRange=QQ}60@76
@92@0:8i16{_NSRange=QQ}20{_NSRange=QQ}36@52{_NSRange=QQ}60@76@84
@132@0:8@16@24@32@40I48{_NSRange=QQ}52{_NSRange=QQ}68@84{_NSRange=QQ}92@108B116B120B124B128
@92@0:8I16{_NSRange=QQ}20{_NSRange=QQ}36@52{_NSRange=QQ}60@76@84
@"NSTimeZone"
@"SGPostalAddressComponents"
@56@0:8@16@24B32@36@44B52
@44@0:8@16B24@28@36
v32@0:8q16@24
@36@0:8@16i24@28
@24@0:8@?16
B60@0:8@16@24@32@40@48B56
B64@0:8@16@24@32@40@48B56B60
v44@0:8@16@24I32d36
v48@0:8^{graph_t=II^{_vertex_t}}16@24^{DisjointSetHandle=}32@40
@"SGPatternDataFile"
@"NSHashTable"
@24@0:8#16
@"NSCache"
@28@0:8@16i24
@"NSString"24@0:8@"NSString"16
@"_PASCachedResult"
@"SGSimpleNamedEmailAddress"
@"HVHtmlParser"
@"<PMLTrainingProtocol>"
@96@0:8@16@24@32@40@48@56@64@72@80@88
I32@0:8@16^{_LXLexicon=}24
@48@0:8@16@24@32^@40
@32@0:8@16^B24
B48@0:8@16@24^@32@?40
B56@0:8@16@24@32^@40@?48
@"NSCharacterSet"
@40@0:8@16Q24i32B36
^{?=QS[3c]}24@0:8r*16
Q24@0:8r*16
i24@0:8r*16
@32@0:8r*16@24
^{?=QS[3c]}
@44@0:8@16S24@28@36
@28@0:8@16S24
@44@0:8@16@24S32@36
@52@0:8@16@24S32@36@44
@"<SGSeekable>"
@"_PASLazyPurgeableResult"
@"SGMIMetricsSubmodelStats"
@32@0:8@16#24
@48@0:8@16@24@32#40
v40@0:8Q16@24@?32
@"<SGBloomFilterChunk>"
v24@0:8(?=Q(?=II))16
B24@0:8(?=Q(?=II))16
[49200C]
@"SGConversationTracker"
B24@0:8@"<SGConversationTurnProtocol>"16
@"NSDate"16@0:8
@"NSRegularExpression"
@32@0:8@16i24i28
@36@0:8@16i24i28i32
@"MLFeatureValue"24@0:8@"NSString"16
@"NSSet"16@0:8
@88@0:8@16@24@32@40@48@56@64@72@80
@"MLMultiArray"
@24@0:8S16S20
@52@0:8@16@24@32@40S48
@68@0:8@16S24@28@36@44@52Q60
v68@0:8@16S24@28@36@44@52Q60
v52@0:8@16S24@28@36Q44
@28@0:8S16S20S24
v40@0:8@16@24S32S36
v32@0:8@?16@?24
@20@0:8S16
Q24@0:8@16
v28@0:8i16@?20
v36@0:8@16@24i32
v28@0:8i16@?<v@?@"NSObject<OS_xpc_object>">20
@"NSObject<OS_xpc_object>"20@0:8i16
q24@0:8@"NSObject<OS_xpc_object>"16
B32@0:8@"NSObject<OS_xpc_object>"16q24
v36@0:8@"NSObject<OS_xpc_object>"16@"NSObject<OS_xpc_object>"24i32
B24@0:8@"NSObject<OS_xpc_object>"16
@"NSObject<OS_xpc_object>"24@0:8@"NSObject<OS_xpc_object>"16
@"SGLongRunningTaskManager"
@24@0:8d16
{?="ageOfTheSubmodelInDays"b1"nbExtremelyDiscriminantTokensForIgnorability"b1"nbExtremelyDiscriminantTokensForSaliency"b1"nbHighlyDiscriminantTokensForIgnorability"b1"nbHighlyDiscriminantTokensForSaliency"b1}
@40@0:8@16{_NSRange=QQ}24
@44@0:8@16{_NSRange=QQ}24i40
S24@0:8Q16
v40@0:8^S16{_NSRange=QQ}24
r*16@0:8
r*20@0:8B16
r^S16@0:8
(?="ascii"[0c]"utf16"[0S])
I24@0:8@16
I24@0:8@"NSString"16
v32@0:8@"NSDictionary"16@?<v@?B>24
v32@0:8@"NSDictionary"16@?<v@?@"NSArray"@"NSDictionary"@"NSArray"@"NSDictionary">24
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary">24
v32@0:8@"NSDictionary"16@?<v@?@"NSString">24
v40@0:8@"NSArray"16@"NSArray"24@?<v@?@"NSDictionary">32
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSArray">40
v32@0:8@"NSString"16@?<v@?@"SGDOMParserResult">24
v48@0:8@16@24@32@40
@"JSVirtualMachine"
@"JSContext"
@"SGReverseTemplatesJSDataDetectors"
@"NSURL"
@"NSISO8601DateFormatter"
@"_PASCFBurstTrie"
{?=b1b1b1b1b1b27}24@0:8@16
{?=b1b1b1b1b1b27}32@0:8r*16Q24
@"SGSqliteDatabase"
@44@0:8@16i24^@28@36
B44@0:8q16i24@28@?36
i32@0:8^{sqlite3_stmt=}16r*24
i36@0:8^{sqlite3_stmt=}16r*24i32
i40@0:8^{sqlite3_stmt=}16r*24q32
i40@0:8^{sqlite3_stmt=}16r*24d32
i40@0:8^{sqlite3_stmt=}16r*24@32
^{sqlite3=}16@0:8
B40@0:8@16@?24@?32
B48@0:8@16@?24@?32@?40
B32@0:8@16@?24
@56@0:8@16@24@32@?40@?48
B24@0:8@?16
B20@0:8I16
@"SGSqliteDatabaseImpl"
@"SGSqliteDatabaseSharedLock"
v52@0:8@16@24@32@40B48
@52@0:8@16@24B32Q36B44B48
@56@0:8@16@24d32@40@48
@20@0:8C16
v72@0:8@16@24@32Q40@48@56B64B68
v68@0:8@16@24@32B40Q44@52@60
v36@0:8@16@24B32
q32@0:8@16q24
v32@0:8{SGUnixTimestamp_=d}16@?24
v40@0:8{SGUnixTimestamp_=d}16@?24Q32
v28@0:8@16B24
v32@0:8@16B24B28
@"EAEmailAddressSet"
@40@0:8q16@24@32
@40@0:8q16Q24d32
v32@0:8@16q24
v40@0:8@16q24@32
@32@0:8q16Q24
@48@0:8q16Q24d32Q40
v36@0:8@16@24f32
q32@0:8@16@24
{?=b1b1b1b1b8b20}24@0:8@16
d32@0:8@16@24
B40@0:8@16@24d32
@92@0:8B16d20d28I36d40I48B52B56B60I64I68B72B76B80B84B88
v28@0:8d16I24
v48@0:8@16@24@32d40
@"NSArray"16@0:8
@24@0:8@"NSArray"16
@24@0:8^{sqlite3_stmt=}16
@28@0:8^{sqlite3_stmt=}16B24
f24@0:8@16
{?="attachmentsProbability"b1"conversationProbability"b1"domainFromSenderProbability"b1"listIdProbability"b1"mailboxProbability"b1"mailboxTypeProbability"b1"personCCRecipientsProbability"b1"personFromSenderInDyadicConversationProbability"b1"personFromSenderProbability"b1"personToRecipientsProbability"b1"standardMailRulesProbability"b1"subjectContentProbability"b1"subjectCountStatsProbability"b1}
Q40@0:8Q16Q24Q32
Q24@0:8Q16
d32@0:8d16q24
Q40@0:8@16@24Q32
Q56@0:8@16@24Q32Q40Q48
@64@0:8@16d24d32@40@48@56
v40@0:8@"WKWebView"16@"WKNavigationAction"24@?<v@?q>32
v48@0:8@"WKWebView"16@"WKNavigationAction"24@"WKWebpagePreferences"32@?<v@?q@"WKWebpagePreferences">40
v40@0:8@"WKWebView"16@"WKNavigationResponse"24@?<v@?q>32
v32@0:8@"WKWebView"16@"WKNavigation"24
v40@0:8@"WKWebView"16@"WKNavigation"24@"NSError"32
v40@0:8@"WKWebView"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"WKWebView"16
v40@0:8@"WKWebView"16@"NSURLAuthenticationChallenge"24@?<v@?B>32
v40@0:8@"WKWebView"16@"WKNavigationAction"24@"WKDownload"32
v40@0:8@"WKWebView"16@"WKNavigationResponse"24@"WKDownload"32
@"NSObject<OS_dispatch_semaphore>"
@"WKWebView"
@64@0:8@16@24d32d40d48@56
@48@0:8d16d24d32@40
@"NSData"16@0:8
@64@0:8@"NSString"16@"NSString"24d32d40d48@"NSData"56
@48@0:8d16d24d32@"NSData"40
@60@0:8i16@20@28@36d44d52
@68@0:8i16@20@28d36d44d52d60
@84@0:8i16@20@28@36d44d52d60d68@76
Q24@0:8q16
@28@0:8C16q20
@"SGMIMetricsMailIntelligenceForMessage"
{?="deploymentId"b1}
:24@0:8^{objc_property=}16
v48@0:8@16@24@32^v40
@"CKRecordID"
@"CKServerChangeToken"
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
@40@0:8@?16@?24Q32
@44@0:8@?16@?24Q32B40
@"_PASKVOHandler"
@"CKDatabase"
@"APSConnection"
@"CKContainer"
@"_SGDCloudKitSyncPersistedState"
@"NSOperation"
@"NSError"
^{ct_green_tea_logger_s=}
@"SGDCloudKitSync"
v32@0:8@?16@24
@"NSMapTable"
@"<NSObject>"
v40@0:8@?16@24#32
@32@0:8C16C20@24
@"NSMutableData"
@40@0:8q16q24q32
q24@0:8q16
{?="category"b1"count128KBTo512KB"b1"count32KBTo128KB"b1"count512KBTo2MB"b1"count8KBTo32KB"b1"countOver2MB"b1"countUpTo8KB"b1}
@76@0:8I16@20{_NSRange=QQ}28@44@52B60@64B72
@92@0:8I16@20@28{_NSRange=QQ}36@52B60{_NSRange=QQ}64@80B88
B28@0:8@16B24
@80@0:8@16@24@32@40@48@56@64@72
@"SGStorageEvent"
@"SGStorageContact"
@"SGStorageReminder"
{?="predictedMissingElementScore"b1"foundMatchingElement"b1}
v44@0:8@16Q24B32@?36
v56@0:8@16Q24Q32@?40@?48
v52@0:8@16Q24B32Q36@?44
v72@0:8@16Q24@?32Q40@?48@56B64B68
B32@0:8@16Q24
v72@0:8@16@24@32@40@48@56@?64
C24@0:8@16
v56@0:8@16@24@32@40Q48
v48@0:8@16@24@32Q40
@44@0:8r*16@?24@?32I40
v32@0:8@?16d24
{_opaque_pthread_cond_t="__sig"q"__opaque"[40c]}
@"NSObject<OS_os_transaction>"
@64@0:8@16@24@32@40@48@56
q48@0:8@16@24@32@40
@36@0:8{?=SS}16Q20Q28
@36@0:8{?=SS}16{_NSRange=QQ}20
{?=SS}16@0:8
{?="category"S"subtype"S}
{_NSRange=QQ}48@0:8@16@24@32@40
{_NSRange=QQ}52@0:8@16{_NSRange=QQ}24B40@44
{_NSRange=QQ}40@0:8@16@24@32
B56@0:8@16{_NSRange=QQ}24Q40Q48
B40@0:8@16^{_NSRange=QQ}24^B32
@"CNContact"
{?="numberOfLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20"b1"numberOfLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20"b1"numberOfPredictedAttachmentOnLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20"b1"numberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20"b1"totalNumberOfEmailsProcessedForAttachmentDetectionRoundedToClosestMultipleOf20"b1"totalNumberOfEmailsProcessedForFollowUpDetectionRoundedToClosestMultipleOf20"b1"totalNumberOfEmailsProcessedForRecipientDetectionRoundedToClosestMultipleOf20"b1}
{SGUnixTimestamp_=d}24@0:8@16
@56@0:8{_NSRange=QQ}16@32@40@48
B40@0:8{_NSRange=QQ}16@32
B32@0:8@16^@24
@"SGPipelineEntity"
@36@0:8@16r*24B32
@32@0:8@16r*24
@36@0:8@16B24^B28
v48@0:8@16{_NSRange=QQ}24@?40
@36@0:8q16Q24B32
@40@0:8@16q24@?32
@56@0:8@16@?24Q32@40@48
@40@0:8@16@?24@32
@"HKHealthStore"
v48@0:8@16@24{SGMSelfIdModelType_=Q}32Q40
@60@0:8@16@24^{_NSRange=QQ}32{_NSRange=QQ}40B56
v52@0:8@16@24C32@36C44C48
@40@0:8{_NSRange=QQ}16@32
@32@0:8@16^{_NSRange=QQ}24
@"SGDetectedAttributeML"
@"SGQuickResponsesML"
@"SGContactPipelineHelper"
@"SGHKHealthStore"
v40@0:8@16@24Q32
v32@0:8d16@24
v40@0:8d16@24@32
v40@0:8@16Q24Q32
@56@0:8Q16@24{_NSRange=QQ}32@48
@20@0:8B16
@"TRIClient"
@"TRIRolloutIdentifiers"
@80@0:8@16@24Q32@40@48@56@64@72
v40@0:8@16@24q32
@32@0:8@16^q24
@40@0:8@16B24B28B32i36
@"SGM2HarvestCost"
@"SGMIFeatureStore"
@"_PASSqliteDatabase"
^{sqlite3_tokenizer_module=i^?^?^?^?^?^{sqlite3}}
^{sqlite3_tokenizer=^{sqlite3_tokenizer_module}}
@40@0:8@16@24B32B36
@48@0:8@16@24B32@36B44
@44@0:8@16B24@28^B36
v24@0:8^@16
@52@0:8@16@24B32@36B44B48
@28@0:8q16B24
v36@0:8@16B24@?28
v40@0:8@16B24B28@?32
v52@0:8@16B24Q28@?36@?44
@40@0:8@16Q24@?32
@44@0:8@16B24Q28@?36
@40@0:8@16B24B28Q32
d40@0:8@16@24@32
{_PASDBIterAction_=B}84@0:8@16@24q32@40@48@56@64@72B80
@28@0:8B16Q20
@40@0:8q16@24B32B36
q24@0:8Q16
@44@0:8{SGUnixTimestamp_=d}16{SGUnixTimestamp_=d}24Q32I40
@52@0:8{SGUnixTimestamp_=d}16{SGUnixTimestamp_=d}24@32Q40I48
@40@0:8{SGUnixTimestamp_=d}16{SGUnixTimestamp_=d}24Q32
@48@0:8{SGUnixTimestamp_=d}16{SGUnixTimestamp_=d}24@32Q40
@60@0:8{SGUnixTimestamp_=d}16{SGUnixTimestamp_=d}24Q32@40I48@?52
B36@0:8B16@20^@28
@"SGDatabaseJournal"
{atomic_flag="_Value"AB}
@"SGJournal"
@"SGSpotlightContactsAdapter"
@"SGSGtoCNContactsCacheUpdateAdapter"
@"SGBloomFilter"
@"NSMutableOrderedSet"
@"SGEnrichmentWritebackAdapter"
@"SGKeyValueCacheManager"
v40@0:8@"INInteraction"16@"SGPipelineEntity"24@"SGRequestContext"32
@40@0:8@16@24d32
@48@0:8@16@24@32d40
B24@0:8Q16
v44@0:8@16@24Q32i40
v52@0:8@16@24@32Q40i48
v68@0:8@16@24@32@40@48Q56i64
@"<SGReverseTemplateJS>"
v40@0:8@16Q24@32
v48@0:8@16@?24Q32@40
v64@0:8@16@24@?32@40@48Q56
v72@0:8@16@24@?32@40@48Q56@64
@48@0:8@16@24d32@40
@32@0:8^{__DDResult=}16@24
v40@0:8^{__DDResult=}16@24@32
@"NSDateFormatter"
@116@0:8@16@24@32@40@48@56@64@72f80d84d92d100@108
{?="accuracy"b1"latitude"b1"longitude"b1"quality"b1"locationType"b1}
@84@0:8@16B24@28@36@44@52@60@68@76
@76@0:8@16B24@28@36@44@52@60@68
@68@0:8@16B24@28@36@44@52@60
@40@0:8@16B24q28B36
@"SGMailClientUtil"
@"SGMIBiomeReducedMessageEvents"
@"_DKKnowledgeStore"
{?="fromStatus"b1"toStatus"b1}
@76@0:8@16@24@32B40@44{_NSRange=QQ}52@68
@84@0:8@16Q24@32B40@44@52@60{_NSRange=QQ}68
B56@0:8Q16Q24Q32^@40@?48
B64@0:8Q16Q24Q32^@40@48@?56
v48@0:8Q16Q24Q32@?40
@48@0:8@16@24Q32^@40
@80@0:8Q16Q24@32@40@48@56Q64^@72
v44@0:8@16B24@28@36
v24@0:8@"SGSqlEntityStore"16
@"NSNumber"16@0:8
@92@0:8@16@24@32@40@48@56@64d72@80B88
@100@0:8@16@24@32@40@48@56@64@72d80@88B96
C44@0:8@16@24d32B40
@64@0:8Q16Q24Q32B40@44B52@56
@72@0:8Q16Q24Q32B40@44B52@56@64
{?="modelVersion"b1"offset"b1"dateIsCorrect"b1"didRegexTrigger"b1"didResponseKitTrigger"b1"isFromCongratulation"b1}
@48@0:8@16@24@32q40
@48@0:8@16@24q32@40
@48@0:8@16@24@32Q40
@72@0:8@16@24@32@40@48@56Q64
v56@0:8@16@24@32@40@48
@"SGIdentityKey"
@"NSTimeZone"16@0:8
@56@0:8@"NSDate"16@"NSTimeZone"24@"NSDate"32@"NSTimeZone"40@"NSArray"48
@112@0:8@16@24@32@40@48{SGUnixTimestamp_=d}56{SGUnixTimestamp_=d}64@72@80@88@96I104B108
v32@0:8@"NSArray"16@"NSString"24
v32@0:8@"NSDate"16@"NSString"24
v32@0:8@"CSUserAction"16@"CSSearchableItem"24
v40@0:8@"NSArray"16@"NSString"24@"NSString"32
v32@0:8@"NSString"16@"NSString"24
@"SGDSuggestManager"
@48@0:8@16@24@32@?40
@56@0:8@16@24^{?={?=SS}iiiBBBBBfiiiiiB}32@40@48
@40@0:8@16@24^{?={?=SS}iiiBBBBBfiiiiiB}32
v56@0:8@16@24^@32^@40q48
B48@0:8@16@24B32B36q40
B64@0:8@16@24^@32^@40q48B56B60
@40@0:8@16^{?={?=SS}iiiBBBBBfiiiiiB}24@32
@56@0:8@16@24@32@40^@48
@"SGDCKInteractionInfo"
@"SGDCKTimeRange"
{?="creationTimestamp"b1"lastModifiedTimestamp"b1"parentEntityType"b1"categoryType"b1"allDay"b1"cancelled"b1}
d40@0:8@16@24d32
@36@0:8@16B24@28
@64@0:8@16@24@32@40@48d56
@"SGMITokenCounts"
@48@0:8@16B24B28@32@40
^v16@0:8
{_NSRange=QQ}40@0:8{_NSRange=QQ}16Q32
@48@0:8@16{_NSRange=QQ}24@?40
q36@0:8@16I24@28
f32@0:8@16@24
{SGMContactDetailOwner_=Q}16@0:8
{SGMContactDetailFoundIn_=Q}16@0:8
v64@0:8@16q24@32Q40@48@?56
@100@0:8@16@24@32@40@48@56@64@72@80@88B96
@28@0:8B16@20
@36@0:8B16@20@28
v48@0:8r*16@24Q32@?40
i48@0:8r*16@24Q32@?40
@"SGRe2PrefilterTree"
@"SGMIWarningsDetectionRegex"
@44@0:8@16{_NSRange=QQ}24B40
@72@0:8@16@24@32@40@48@56@64
@"SGMIWarningsDetectionRegexes"
@64@0:8{_NSRange=QQ}16{_NSRange=QQ}32@48@56
@"NSIndexSet"
^{__CFString=}
{?="buffer"[64S]"theString"^{__CFString}"directUniCharBuffer"^S"directCStringBuffer"*"rangeToBuffer"{?="location"q"length"q}"bufferedRangeStart"q"bufferedRangeEnd"q}
@"SGMicrodataItem"
@"SGMicrodataParserStackItem"
@32@0:8Q16Q24
Q32@0:8Q16@24
v44@0:8Q16@24@?32i40
B20@0:8i16
@48@0:8@16@24@32o^@40
@52@0:8@16@24@32B40o^@44
v32@0:8@"CSSearchableIndex"16@?<v@?>24
v40@0:8@"CSSearchableIndex"16@"NSArray"24@?<v@?>32
v24@0:8@"CSSearchableIndex"16
@"NSData"48@0:8@"CSSearchableIndex"16@"NSString"24@"NSString"32o^@40
@"NSURL"52@0:8@"CSSearchableIndex"16@"NSString"24@"NSString"32B40o^@44
v56@0:8@16@24Q32@40@?48
@"SGMIDomainCountingTable"
@"_PASSqliteDatabase"16@0:8
@"NSDictionary"16@0:8
@"NSArray"24@0:8^I16
@32@0:8@?16@24
@48@0:8q16@24@32@40
@64@0:8q16Q24d32@40@48@56
v28@0:8B16@20
v44@0:8@16@24B32B36B40
v48@0:8@16q24@32@40
B40@0:8@16@?24@32
v56@0:8@16q24q32q40@48
@"_PASDatabaseMigrator"
@40@0:8@16{SGUnixTimestamp_=d}24@32
@40@0:8@16q24@32
@"NSObject<SGEntityKey>"
q32@0:8@16^@24
q40@0:8@16q24^@32
@"EMDaemonInterface"
@"ECDKIMVerifier"
@"_PASLRUCache"
v60@0:8@16S24S28@32@40C48d52
@32@0:8@16S24S28
@"SGTokenizerMappingTransformer"
@"SGNameMappingTransformer"
r^v24@0:8Q16
{?="end"b1"endUTCOffsetSeconds"b1"start"b1"startUTCOffsetSeconds"b1"floating"b1}
@100@0:8@16@24@32@40@48C56@60C68@72C80@84@92
@"SGStorageLocation"
{?="conversationAge"b1"domainFromSenderAge"b1"personCCRecipientsAge"b1"personFromSenderAge"b1"personFromSenderInDyadicConversationAge"b1"personToRecipientsAge"b1"subjectContentAge"b1}
@24@0:8r^v16
B24@0:8{SGUnixTimestamp_=d}16
{_NSRange=QQ}40@0:8{_NSRange=QQ}16@32
@40@0:8@16B24B28B32B36
@40@0:8Q16@24@32
@56@0:8@16@24B32B36B40B44B48B52
{_NSRange=QQ}32@0:8{_NSRange=QQ}16
@52@0:8@16@24B32B36B40B44B48
#24@0:8@16
{?="blockedWarningCount"b1"negativeEngagement"b1"noEngagement"b1"positiveEngagement"b1"type"b1"incomingMessage"b1}
v28@0:8@16S24
@"SGMIMetricsSubmodelsProbabilities"
{?="missingAttachmentPredictionPerformanceInMilliSeconds"b1"missingRecipientPredictionPerformanceInMilliSeconds"b1"saliencyPredictionPerformanceInMilliSeconds"b1"predictedSaliency"b1"predictedSaliencyScore"b1"estimatedGroundTruth"b1}
@"SGMicrodataDocument"
{?="s"[2Q]}
v44@0:8@16@24@32B40
B48@0:8@16@24@32^@40
B40@0:8@16@24^@32
{?="documentSource"b1"significantWork"b1}
@40@0:8Q16i24i28@32
B36@0:8i16@20@?28
@?24@0:8@16
B40@0:8@16@24^B32
@"SGDatabaseJournalFile"
