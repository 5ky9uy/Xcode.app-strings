cA333333
u2A333333
MbP?
$+2@5
&7HYj
!',4rr4>
JhrrrrrrrxWR
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

&7HYj
RMWhMm
!$'*-0369<?BEHKN
':]u22
$'*-03
Z]`cf
NMQTWZ]MM`c
*-0369<?BEHKNQT
,04DZ^bfjnrvz
88888888888888888888888888888888888888888?8888A8888888C888E8G8I8M
E;_^
'Jm~
"***
'***+****
<GOv
@(#)PROGRAM:CoreSuggestionsInternals  PROJECT:Suggestions-1148.1
fffff
@NSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
N3re26Regexp6WalkerINS_4FragEEE
N3re28CompilerE
N3re26Regexp6WalkerIiEE
N3re217NumCapturesWalkerE
N3re219NamedCapturesWalkerE
N3re218CaptureNamesWalkerE
 * . ` d f o 
 * . ` d f o 
 d f p t ~ 
!%!'!)!,!1!3!M!O!_!
$&$@$J$`$
)L+P+Y+
0 00070<0?0
1 2_2
-%-'-'-----
,.,0,^,0
&!&!@
0!0)080;0
.0/011
2`2~2`
 *0-0
3W3f
(*359==XY`a
q q 
!$!$!&!&!(!(!*!-!/!9!<!?!E!I!N!N!
,.,0,^,`,
-%-'-'-----0-g-o-o-
-/./.
01050;0<0A0
1-111
q q 
 *!+!2!2!N!N!`!
!/!/!4!4!9!9!<!=!F!I!N!N!
!0,^,a,a,e,f,h,h,j,j,l,l,q,q,s,t,v,{,
-%-'-'-----A
q q 
 |,},o-o-/./.
01050;0;0
(*359==XY`a
5!8!0-g-
0<0<0A0
1-111
!$!$!&!&!(!(!*!-!0!3!>!?!E!E!
,.,`,`,b,d,g,g,i,i,k,k,m,p,r,r,u,u,~,
>DFHJMUVbc
-*0/0
AD
.0/0#
>@FHJMUVbc
-*0-0
fox~
p p t y 
0!0)080:0
1 2)2H2O2Q2_2
fo
0!0)080:0
x~p
p p t y 
 P!_!
1 2)2H2O2Q2_2
 ' 0 C E Q S ^ } ~ 
#)#*#h'u'
,p-p-
...0.;.
00000=0=0
? @ T T 3
.:.;.
00000
F F ~ ~ 
#*#*#i'i'k'k'm'm'o'o'q'q's's'u'u'
)#.#.%.%.'.'.).).
 : : 
.!.!.@
 9 9 
...
. . .!
   ' 0 8 ; > A C G Q S S U ^ 
,p-p-
.*...0.9.
0=0=0
 E E } } 
#)#)#h'h'j'j'l'l'n'n'p'p'r'r't't'
)".".$.$.&.&.(.(.
000
D D R R z | 
!#!%!%!'!'!)!)!.!.!:!;!@!D!J!M!O!O!
##(#+#
$&$@$J$
)L+P+Y+
0 0 06070>0?0
2*2G2P2P2`2
D D R R z | 
!@!D!K!K!
" #!#|#|#
%o&o&
*0+D+G+L+)
!#!%!%!'!'!)!)!.!.!:!;!J!J!L!M!O!O!
#"#(#+#{#}#
$&$@$J$
&n&p&
+/+E+F+P+Y+
0 0 06070>0?0
2*2G2P2P2`2
(*359=DFHJMUVXY`cfox
0-g-o-p-
 ( ) / / _ _ 
0( ( ) )  
 / / _ _ 
?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?
N3re214ToStringWalkerE
N3re26Regexp6WalkerIbEE
N3re217EmptyStringWalkerE
N3re210PCREWalkerE
N3re26Regexp6WalkerIPS0_EE
N3re214SimplifyWalkerE
N3re26Regexp6WalkerIPNS_9Prefilter4InfoEEE
N3re29Prefilter4Info6WalkerE
com_apple_mobilesms_suggested_contact_name
com_apple_mobilesms_suggested_contact_photo
urn:biz:
identifier
Invalid parameter not satisfying: %@
SGTextMessage.m
SGMissingDomainIdentifier.uniqueIdentifierFallback.%@
sender
senderIsAccountOwner
conversationIdentifier
attachmentDomain
searchableItem.domainIdentifier
PER_MESSAGE_TRANSFORMER
SG_FEATURE_END_OF_MESSAGE
SG_FEATURE_TARGET_SENT__
SG_MODEL_DISABLE_TARGET_MAPPING
SG_MODEL_INPUT_TARGET_RANGE
TARGET_MATCH
DD_MATCHES
INPUT_TEXT
SG_MODEL_INPUT_TARGET_MESSAGE_INDEX
INPUT_CONVERSATION
Unexpected input type for %@: %@, 
SGConversationFlatteningTransformer.m
reservationFor
provider
http://schema.org/Organization
arrivalPlatform
arrivalBusStop
departurePlatform
departureBusStop
http://schema.org/BusStation
busNumber
busName
arrivalTime
departureTime
http://schema.org/BusTrip
@type
http://schema.org/BusReservation
Bus Trip
supervision
SGMSelfIdSupervisionTypeNone
SGMSelfIdSupervisionTypeContact
SGMSelfIdSupervisionTypeAppleContact
SGMSelfIdSupervisionTypePreviousModel
SGMSelfIdSupervisionTypeRegex
result
model
SGMSelfIdModelTypeRegex
SGMSelfIdModelTypeLogistic
SGMSelfIdModelTypeLinear
SGMSelfIdModelTypeCoreNLP
(unknown: %i)
%@ %@
SelfIdModelScore
longitude
latitude
http://schema.org/GeoCoordinates
exitCode
SuggestdExitReason
SGMContactDetailUsedAppMessages
SGMContactDetailUsedAppPhone
SGMContactDetailUsedAppMail
SGMContactDetailUsedAppCalendar
SGMContactDetailUsedAppOther
SGMContactDetailUsedAppFaceTime
SGMContactDetailUsedAppAddressBook
SGMContactDetailUsedAppSpringBoard
SGMContactDetailUsedAppHome
SGMContactDetailUsedAppMaps
SGMContactDetailUsedAppFitness
SGMContactDetailUsedAppReminders
wasKnownContact
wasSuggestedContact
AutocompleteUserSelectedContact
bundleId
BundleIdsTrackedAsOther
v24@?0@"NSString"8@"NSString"16
interactionIdentifier
person
SGInteractionParser.m
interaction
isRead
saliencyScore
ContactCreated
DELETE FROM urls WHERE bundle_id = :bundleIdentifier AND doc_id IN _pas_nsarray(:documentIdentifiers)
:documentIdentifiers
OR (group_id GLOB ?) 
DELETE FROM urls WHERE bundle_id = ? AND ((group_id GLOB ?) 
DELETE FROM urls WHERE bundle_id = :bundleIdentifier
:docStartDate
:docEndDate
SELECT %@ FROM urls WHERE bundle_id = :bundleId   AND (seconds_from_1970 BETWEEN :startDate AND :endDate        OR document_seconds_from_1970 BETWEEN :docStartDate AND :docEndDate) 
DELETE FROM urls WHERE seconds_from_1970 < :seconds
:seconds
DELETE FROM urls ORDER BY id DESC LIMIT -1 OFFSET :limit
INSERT OR REPLACE INTO urls (url, title, received_from_handle, bundle_id, group_id, doc_id, seconds_from_1970, document_title, document_seconds_from_1970, document_time_interval, flags) VALUES (:url, :title, :receivedFromHandle, :bundleIdentifier, :groupIdentifier, :documentIdentifier, :secondsFrom1970, :documentTitle, :documentDate, :documentTimeInterval, :flags)
:url
:receivedFromHandle
:groupIdentifier
:documentIdentifier
:secondsFrom1970
:documentTitle
:documentDate
:documentTimeInterval
:flags
documentIdentifier
bundleIdentifier
urlString
SGSqlEntityStore+URLs.m
url, title, received_from_handle, bundle_id, group_id, doc_id, seconds_from_1970, document_title, document_seconds_from_1970, document_time_interval, flags
UPDATE urls SET flags = (flags | :flagsToSet) WHERE LOWER(url) = :url
:flagsToSet
:containingSubstring
:flagFilter
%%%@%%
SELECT %@ FROM urls WHERE bundle_id NOT IN (%@)   AND (seconds_from_1970 BETWEEN :startDate AND :endDate        OR document_seconds_from_1970 BETWEEN :docStartDate AND :docEndDate)   %@ %@ ORDER BY seconds_from_1970 DESC LIMIT :limit
 AND (flags & :flagFilter) = 0 
 AND LOWER(url) LIKE :containingSubstring 
SELECT %@ FROM urls ORDER BY seconds_from_1970 DESC LIMIT :limit
-[SGModel predictForInput:]
SGModels.m
[[self class] isEqual:features.source.modelClass]
[vector isKindOfClass:PMLSparseVector.class]
modelSource
featurizer
locale
%PHONE%
%@ must implement +newTransformerInstanceForLanguage:
Undefined class for model objective %lu
@"SGTransformerInstance"8@?0
self.modelClass
sessionDescriptor
self.transformer
modelClass
transformer
TW=%@&NG=%@&FV=%@
NGRAMS
TOKEN_WINDOW
NSString *rulesKeyForObjective(SGModelObjective)
NSString *rulesKeyForMode(SGModelMode)
SG_FIM_ML_PREDICT_KEY
SG_FIM_ML_EVALUATE_KEY
SG_FIM_ML_TRAIN_KEY
Unknown SGModelMode = %lu
SGDDMatchPhone
SGDDMatchEmailAddress
SGDDMatchPostalAddress
SGDDMatchEmailAddressForIMessage
SGDDMatchPostalAddressForIMessage
SelfIdentificationPhrase
ContactSharing
TextMessageBirthdayCongrats
Unknown SGModelObjective = %lu
SGDetectedAttributeDissector
extractionSignatureSource
SGMContactDetailExtractionSignatureSourceHMM
SGMContactDetailExtractionSignatureSourceDataDetectors
SGMContactDetailExtractionSignatureSourceNoSignatureSource
isUnlikelyPhone
extractionModelVersion
foundInSenderCNContact
SGMContactDetailOwnerNotFound
SGMContactDetailOwnerSender
SGMContactDetailOwnerNotSender
outcome
SGMContactDetailExtractionOutcomeExtracted
SGMContactDetailExtractionOutcomeIgnoredSuspectedBulkMail
SGMContactDetailExtractionOutcomeIgnoredQuotedRegion
SGMContactDetailExtractionOutcomeIgnoredPattern
SGMContactDetailExtractionOutcomeIgnored
detail
SGMContactDetailTypeEmail
SGMContactDetailTypePhone
SGMContactDetailTypeAddress
SGMContactDetailTypeOther
SGMContactDetailTypeBirthday
signature
source
SGMDocumentTypeEmail
SGMDocumentTypeMessage
ContactDetailExtraction
tokens
SGMLowCount0
SGMLowCount1
SGMLowCount2
SGMLowCount3to4
SGMLowCount5orMore
hasName
foundIn
SGMContactDetailFoundInNotFound
SGMContactDetailFoundInSenderCNContact
SGMContactDetailFoundInOtherCNContact
SGMContactDetailFoundInSuggestions
ContactDetailSent
ContactsInterfaceCacheCount
SELECT id FROM reminders WHERE entityId = ?
SELECT entityId FROM reminders WHERE id = ?
origin
SGSqlEntityStore+Reminders.m
serializedDuplicateKey
SELECT duplicateKey, sourceKey FROM reminders WHERE id = ?
SELECT entityId FROM reminders WHERE duplicateKey = ?
SELECT duplicateKey FROM reminders WHERE entityId = ?
SELECT sourceKey FROM reminders WHERE duplicateKey = ?
INSERT INTO reminders (entityId, duplicateKey, sourceKey, title, dueDateComponents, dueLocationId, dueLocationType, dueLocationTrigger, sourceUrl, creationDate, opaqueKey, uniqueKey, contactIdentifier, reminderStatus) VALUES (:entityId, :duplicateKey, :sourceKey, :title, :dueDateComponents, :dueLocationId, :dueLocationType, :dueLocationTrigger, :sourceUrl, :creationDate, :opaqueKey, :uniqueKey, :contactIdentifier, :reminderStatus)
:dueDateComponents
:dueLocationId
:dueLocationType
:dueLocationTrigger
:sourceUrl
:creationDate
:opaqueKey
:uniqueKey
:contactIdentifier
:reminderStatus
SELECT title, dueDateComponents, dueLocationId, dueLocationType, dueLocationTrigger, creationDate, contactIdentifier, reminderStatus FROM reminders WHERE id = ?
cacheHit
ContactsInterfaceCacheHit
SGMFoundInMailSupervisionTypeNone
SGMFoundInMailSupervisionTypeContact
SGMFoundInMailSupervisionTypeAppleContact
SGMFoundInMailSupervisionTypePreviousModel
mode
SGFoundInMailModelModeTraining
SGFoundInMailModelModeEvaluation
SGFoundInMailModelModePrediction
correct
contactDetail
SGMFoundInMailModelTypeRegex
SGMFoundInMailModelTypeLogistic
SGMFoundInMailModelTypeLinear
SGMFoundInMailModelTypeNaiveBayes
FoundInMailModelScore
@16@?0@"_PASSqliteStatement"8
SELECT value FROM metadata WHERE key = :key LIMIT 1
DELETE FROM metadata WHERE key = :key
INSERT OR REPLACE INTO metadata (key, value) VALUES (:key, :value)
B12@?0I8
@"NSMutableDictionary"24@?0@"NSDictionary"8@"NSString"16
NEGATIVE_SAMPLE_CHOPLESS
CONFIDENCE_THRESHOLDS
TARGET_LANGUAGE
PREDICTION_PARAMETERS
core
location
time
polarity
EVENT_CORE__RESERVATION_ID
EVENT_LOCATION__START_ADDRESS
EVENT_LOCATION__END_ADDRESS
EVENT_LOCATION__START_PLACE
EVENT_LOCATION__END_PLACE
EVENT_TIME__START_DATETIME
EVENT_TIME__END_DATETIME
TITLE__HOTEL_RESTAURANT_NAME
TITLE__MOVIE_TICKET_NAME
TITLE__CAR_RENTAL_NAME
TITLE__EVENT_NAME
POLARITY__EVENT_YES
SGStructuredEventDocument: %@, unable to resolve candidates
SGStructuredEventDocument: address, unable to resolve candidates
SGStructuredEventDocument: reservationId, unable to resolve candidates
No proposal found
No title found for message
No dueDate nor dueLocation found in message
No confirmation found
TEST REMINDER
SG_QA_REMINDER_TEST
textMessage.isSent
SGReminderDissector.m
modelDescription
processingLanguage
errorMessage
extractionStatus
suggest_tool
ReminderDissector full extraction
suggest_tool_preprocess
body
isSent
defaultManager
RTRoutineManager
/System/Library/PrivateFrameworks/CoreRoutine.framework/CoreRoutine
IS_%@
CONTACT
ACCOUNT_OWNER
verbsMapping
polarityEmojisMapping
SearchResultsIncludedPureSuggestion
SearchResultsUserSelectedContact
SerializedContactsCacheHit
errorCode
SqliteErrors
com.apple.suggestions.plugin.SGURLPlugin
v24@?0@"NSString"8@"NSSet"16
v24@?0@"NSString"8@"_PASDomainSelection"16
All Mailboxes
lastMailboxCheckedForTopSGMISaliency
lastLimitCheckedForTopSGMISaliency
UPDATE mailIntelligence_saliency SET isSalient=1, score=1
DELETE FROM mailIntelligence_saliency
UPDATE mailIntelligence_saliency SET creationTimestamp = :creationTimestamp WHERE id = :id
:mailboxId
:score
:isSalient
:isGteSalient
:isCounted
INSERT INTO mailIntelligence_saliency (creationTimestamp, messageId, mailboxId, score, isSalient, isGteSalient, isCounted) VALUES (:creationTimestamp, :messageId, :mailboxId, :score, :isSalient, :isGteSalient, :isCounted)
UPDATE mailIntelligence_saliency SET messageId = :messageId, mailboxId = :mailboxId, score = :score, isSalient = :isSalient, isGteSalient = :isGteSalient, isCounted = :isCounted WHERE id = :id
SELECT id FROM mailIntelligence_saliency WHERE messageId = :messageId
score
isSalient
Expected non-null based on database schema
SGSqlEntityStore+Saliency.m
 ORDER BY creationTimestamp DESC LIMIT :limit
 AND mailboxId = :mailboxId
SELECT messageId, score, isSalient, creationTimestamp FROM mailIntelligence_saliency WHERE isSalient != 0
isGteSalient
isCounted
mailboxId
Expected non-null value for non-null property
Expected non-null value for non-null database field
SELECT score, mailboxId, isSalient, isGteSalient, isCounted, creationTimestamp FROM mailIntelligence_saliency WHERE messageId = :messageId
SuggestedContactDetailShown
SuggestedContactDetailUsed
UnknownShown
%@ %@ InRange(kMDItemContentCreationDate,%@,%@) %@ %@
 (kMDItemContentType == '%@') 
$time.today(1)
$time.iso(%@)
$time.this_year(-1)
 ( %@ ) 
 || 
 (%@ == "*%@*"cwdt) 
kMDItemPhoneNumbers
kMDItemAuthorAddresses
kMDItemRecipientAddresses
kMDItemInstantMessageAddresses
kMDItemAuthorEmailAddresses
kMDItemRecipientEmailAddresses
kMDItemEmailAddresses
method
SGMSuggestionsFromMessage
PerfXPCLatency
customResponsesAfterPruning
uniqueIdentifier
SELECT uniqueIdentifier FROM mailIntelligence_spotlightMapping WHERE messageId = :messageId
head
span
header
hgroup
article
details
fieldset
figcaption
footer
form
noscript
section
summary
strong
mailto:
http://
_link_
%i. 
malloc failed
<html>
<html.*?>
seatingType
seatSection
seatRow
seatNumber
http://schema.org/Seat
airplaneSeatClass
airplaneSeat
seat
ticketedSeat
reservedTicket
DDMATCH
void appendStringToBuf(char **, const char *, NSString *__strong, BOOL)
Logging string too long
SGAggregateLogging+PET.m
<SGMessageKey source:%@ uniqueIdentifier:%@>
Invalid serialization
serialized
SGMessageKey.m
Do not initialize with init
Unknown entity type: %lu
SGDelivery_ctNumUniq_%lu
@24@?0@"NSSet"8@"SGPipelineEnrichment"16
SGDelivery_pr_%@
SGDelivery_ctTxtMsg_%lu
SGDelivery_ctEmlBod_%lu
SGDelivery_ctEmlSub_%lu
@16@?0@"SGDataDetectorMatch"8
application-identifier
<SGTextMessageKey source=%@ uniqueIdentifier=%@>
SGDSuggestManagerErrorDomain
SGSuggestManager-consumeInteractionWithContext
v24@?0@"SGDPurgeDeletionBox"8^B16
com.apple.CoreSuggestionsInternals.SGDSuggestManager
Unable to find localizedAppName
message
SGRecordId not valid (didn't find entity)
completion
com.apple.suggestions.internal.messages.processed.
q24@?0@"SGRealtimeEvent"8@"SGRealtimeEvent"16
v40@?0@"NSError"8@"NSArray"16@"NSArray"24@"NSArray"32
@"SGSimpleMailMessage"8@?0
Show in %@
Maybe: %@
com.apple.suggestd.event-metrics-queue
uniqueKey
x-apple-eventkit:///SuggestedEventInfo/
notFromSuggestions
@"_PASLock"8@?0
v20@?0B8Q12
misses
hits
com.apple.suggestions.suggestManagerKeepDirty
@"SGRealtimeEvent"16@?0@"SGPipelineEnrichment"8
-[SGDSuggestManager geocodeEnrichmentsInPipelineEntity:withCompletion:]_block_invoke
SGDSuggestManager.m
com.apple.suggestions
AppCanShowSiriSuggestionsBlacklist
suggestionsFromURL
isEventCandidateForURL
v16@?0@"SGXPCResponse1"8
deleteSpotlightReferencesWithBundleIdentifier
processReservationInteractions
0123456789@
com.apple.
SGSuggestManager-addInteractions
addSearchableItems
com.apple.suggestions.addSearchableItems
CSSIs from Messages on iOS are not expected to be enqueued. See HVHarvestEligibility +messagesAppItemEligibilityCheckBlock.
SGURLPlugin
SGTopicExtractionPlugin
SGNamedEntityPlugin
initWithKeyName failed for expected valid key: %@
com_apple_suggestions_targetPlugins
from
subject
message-id
reject
confirm
v16@?0@"SGLabeledObject"8
SGSuggestedEventLaunchInfo object must have either intent or sourceURL to open
INGetReservationDetailsIntent
uniqueId
resolveFullDownloadRequests
@"SGEmailKey"16@?0@"SGMailMessageKey"8
fullDownloadRequestBatch
@"SGMailMessageKey"16@?0@"SGEmailKey"8
reportMessagesFound
updateMessages
messagesToRefreshWithCompletion
socialProfile
emailAddress
q24@?0@"SGContactMatch"8@"SGContactMatch"16
@"SGRealtimeContact"16@?0@"SGContact"8
B16@?0@"SGEmailAddress"8
@"SGContact"16@?0@"SGEntity"8
-[SGDSuggestManager realtimeContactsFromEntity:enrichments:sourceTextMessage:store:]_block_invoke
enrichment.duplicateKey.parentKey
@"SGStorageContact"16@?0@"SGContactEntity"8
yyyy-MM-dd HH:mm:ss
en_US_POSIX
event.suggestionInfo.uniqueKey
@"_PASTuple2"16@?0@"SGRealtimeEventResponse"8
@"SGRealtimeEventResponse"16@?0@"SGEntity"8
foundEvent.suggestionInfo.opaqueKey
com.apple.suggestions.SGEKCalendarWrite
@"SGEntity"16@?0@"SGEntity"8
storageReminder.recordId
Couldn't find event with that record id
v16@?0Q8
prefix
query
@"NSArray"16@?0@"SGRecordId"8
cnContactMatchesForRecordIds
Unexpected number of matches
none
contactIdentifiers
contactIdentifier
contact
warmUpSuggestions
sourceId
<hey@example.com>
Warm up! Awaken!
Warm Up <warm@up.com>
My phone is 515-555-5555. My address is 1234 Hey Street.
htmlBody
v16@?0@?<v@?@"EKEventStore">8
@"EKEventStore"8@?0
SGDSuggestManager-purgeDeletionDropBox
@"SGDPurgeDeletionBox"8@?0
v16@?0@"SGDPurgeDeletionBox"8
MobilePhone
com.apple.telephonyutilities.callservicesd
InCallService
com.apple.FaceTime
FaceTime
com.apple.mobilesms.compose
com.apple.MobileAddressBook.ContactViewViewService
com.apple.MobileAddressBook.ContactsViewService
com.apple.MailCompositionService
v24@?0@"CNChangeHistoryContactChange"8^B16
<SGRealtimeSuggestionsTuple c:%tu e:%tu r:%tu d:%tu i:%tu>
LINK_MAPPING
EMAIL_MAPPING
-[SGEntityMappingTransformer transform:]
SGEntityMappingTransformer.m
[input isKindOfClass:[NSString class]]
mailto
com.apple.suggestions.ml.datadetector
-[SGDWorkQueueFile readDictionary]_block_invoke
SGDWorkQueue.m
decodedLength == uncompressedLength
size
compressed
range
layout
version
!!SG_DATA_DICTIONARY!!
plistData
v32@?0@"NSString"8@"NSData"16^B24
-[SGDWorkQueueFile writeDictionary:]_block_invoke
currentByte == fileHandle.offsetInFile
%@ queue
low priority
high priority
unknown priority
<SGDWorkQueueItem fail=%i done=%i : %@>
Can only finish work queue items in active state, not state %i
Work item not finished: %@
object
%012llu-%010llu
%@/%02lu-%02lu-%012llu-%010llu.tmp
path
(?:\\|/|^)\d{2}-\d{2}-\d{12}-\d{10}\.tmp$
harvestqueue
Invalid state of queue item: %@
Could not delete queue item with nonconforming filename: %@
Can not list contents of %@: errno = %i
Error creating directory %@: %@
Not a directory: %@
dirPath
harvestqueueold
Error compressing block
is_sender_name
is_sender_email
is_sender_domain
is_recipient_name
is_recipient_email
is_present_in_subject
addressComponentThreshold
stripRepeatedContentInSections
%@.%@.%@
defaultLabelTokenMergeDistance
sectionLabelTokenMergeDistance
mlDefaultExtractionSenders
shadowSenders
extractionSenders
Structured Event model inference
StructuredEventEngineConfig
SupportedProviders
StructuredEventOutputMapping
StructuredEventInputMapping
SignificantEmailAddressForIMessage
SG_FEATURE_SYMBOL
SG_FEATURE_NUMBER
SG_POSSESSIVE
SG_FEATURE_LASTNAME
SG_FEATURE_FIRSTNAME
SG_FEATURE_FULLNAME
SG_FEATURE_LINK
SG_FEATURE_DATE
SG_FEATURE_ADDRESS
SG_FEATURE_EMAIL
SG_FEATURE_PHONENUMBER
SG_TARGET_EMAIL
harvestSource
SGM2HarvestSourceInMemory
SGM2HarvestSourceRealtime
SGM2HarvestSourceRealtimeNoBudget
SGM2HarvestSourceOnDiskOverflow
SGM2HarvestSourceOnDiskNoBudget
SGM2HarvestSourceOnDiskTimeout
SGM2HarvestSourceOnDiskClosed
SGM2HarvestSourceOnDiskLegacy
SGM2HarvestSourceProactiveHarvesting
harvestedOnBattery
receivedOnBattery
highPriority
documentSource
otherFirstParty
otherThirdParty
Safari
News
Mail
Messages
Notes
Reminders
SGRe2PrefilterTree.m
(const void *)(_h3 + _n3 + 0) == (const void *)_s1
_h2 + _n2 + 1 == _h3
_h1 + _n1 + 1 == _h2
(const uint8_t *)(_s3) <= (const uint8_t *)end
(const uint8_t *)(_s2) <= (const uint8_t *)end
(const uint8_t *)(_s1) <= (const uint8_t *)end
(const uint8_t *)(_s2) <= (const uint8_t *)(_s3)
(const uint8_t *)(_s1) <= (const uint8_t *)(_s2)
(const uint8_t *)(_h3) <= (const uint8_t *)(_s1)
(const uint8_t *)(_h3) <= (const uint8_t *)end
(const uint8_t *)(_h2) <= (const uint8_t *)end
(const uint8_t *)(_h1) <= (const uint8_t *)end
(const uint8_t *)(_h2) <= (const uint8_t *)(_h3)
(const uint8_t *)(_h1) <= (const uint8_t *)(_h2)
(const uint8_t *)(_rpns) <= (const uint8_t *)(_h1)
(const uint8_t *)(_rpns) <= (const uint8_t *)end
data.length > 7*sizeof(uint32_t)
Time-outed waiting for the frontfill queue to finish.
com.apple.suggestions.frontfillHarvest
B12@?0C8
extraBudgetOperationsCount
backgroundDissect
backgroundDissectAndWrite
processSearchableItem-plugins
item
Unexpected drain priority option: %hhu
Unspecified priority option used
reimported
com.apple.suggest.drain-harvest-recentqueue-lock
com.apple.suggest.drain-harvest-oldqueue-lock
harvestQueue
com.apple.suggestd
com.apple.proactive.fia.url
urlType
acceptedCount
offeredCount
facetime.apple.com/join
com.apple.suggestions.verification-write
com.apple.suggestions.geocode-write
v16@?0@"SGStorageEvent"8
-[SGDManagerForCTS _performProcessPendingGeocodesActivity:]_block_invoke_2
SGDManagerForCTS.m
[nextGeocode.timeRange isValidAllDayRange]
v20@?0B8@"NSError"12
SGDManagerForCTS.performHarvestActivity
com.apple.suggestions/registerForCTS/staticQueue
com.apple.suggestions.frontfill
@"NSNumber"16@?0@"SGContactDetail"8
@"NSArray"16@?0@"SGContactDetail"8
SGDeduper.m
@"NSString"16@?0@"SGContactDetail"8
postal address details should be filtered out
B24@?0@8@16
reservationId
i16@?0@8
@"NSMutableArray"16@?0@"<NSFastEnumeration>"8
@"NSMutableDictionary"16@?0@"<NSFastEnumeration>"8
@"NSArray"16@?0@"<NSFastEnumeration>"8
v20@?0@"NSString"8f16
v24@?0@"PPScoredItem"8Q16
NE_%lu
v32@?0@"PPScoredItem"8@"NSNumber"16Q24
TP_%lu
v16@?0@"SGTopicDissectorGuardedData"8
v16@?0@"CKContextResponse"8
contextClient
SGTopicDissector.m
GREGORIAN
floating
Gmail
@rocketmaill.com
@hotmail.co.uk
@hotmail.com
@outlook.com
@rocketmail.com
@sbcglobal.net
@ymail.com
@yahoo.co.uk
@yahoo.com
@google.com
@googlemail.com
@gmail.com
@mac.com
@me.com
@icloud.com
Outook
Yahoo
Google
B16@?0@"SGMailAttachment"8
END:VCALENDAR
ATTACH
DTSTART
TZID=
;TZID=
DTEND
EXDATE
RDATE
RECURRENCE-ID
BEGIN:
END:
END:VCALENDAR
VTIMEZONE
VEVENT
VCALENDAR
UID:
%@;%@
@"NSString"16@?0@"ICSUserAddress"8
Etc/GMT
hourString
SGCalendarAttachmentDissector.m
Australia/Adelaide
Asia/Pyongyang
Asia/Kathmandu
Asia/Kabul
Asia/Tehran
Asia/Rangoon
Asia/Colombo
Asia/Kolkata
 Time
 Summer Time
 Daylight Time
 Standard Time
@"NSTimeZone"16@?0@"NSString"8
Asia/Yakutsk
America/Rio_Branco
Asia/Hebron
Europe/Warsaw
Africa/Luanda
Asia/Vladivostok
America/Indianapolis
America/Grand_Turk
Europe/Istanbul
Asia/Chita
Asia/Tomsk
America/Araguaina
Asia/Taipei
Asia/Damascus
America/Edmonton
Europe/Sarajevo
Pacific/Apia
Asia/Sakhalin
America/Miquelon
America/Buenos_Aires
Europe/Samara
Asia/Kamchatka
Asia/Srednekolymsk
Australia/Perth
America/Asuncion
America/Tijuana
America/Santiago
America/Los_Angeles
Asia/Tokyo
Pacific/Tongatapu
Asia/Ulaanbaatar
Pacific/Norfolk
America/St_Johns
Africa/Windhoek
Asia/Novosibirsk
America/Denver
Europe/Moscow
America/Montevideo
Pacific/Midway
Asia/Beirut
Atlantic/South_Georgia
Indian/Mauritius
Pacific/Marquesas
Asia/Magadan
Australia/Lord_Howe
Pacific/Kiritimati
Africa/Tripoli
Asia/Singapore
Asia/Krasnoyarsk
Asia/Seoul
Asia/Calcutta
Europe/Kaliningrad
Asia/Amman
Asia/Jerusalem
Asia/Karachi
Asia/Irkutsk
America/Indiana/Indianapolis
Australia/Hobart
Pacific/Honolulu
Africa/Harare
America/Port-au-Prince
Pacific/Guam
Atlantic/Reykjavik
America/Godthab
Asia/Tbilisi
Europe/London
Pacific/Fiji
Europe/Helsinki
Pacific/Kwajalein
Asia/Yekaterinburg
America/Cancun
America/New_York
Pacific/Easter
Africa/Nairobi
Etc/GMT+12
America/Havana
America/Chihuahua
Pacific/Chatham
America/Mexico_City
Pacific/Guadalcanal
Europe/Belgrade
America/Manaus
America/Guatemala
America/Chicago
Asia/Yerevan
Africa/Casablanca
America/Caracas
Atlantic/Cape_Verde
America/Regina
Africa/Cairo
Europe/Bucharest
Europe/Paris
Australia/Brisbane
America/Sao_Paulo
Pacific/Bougainville
America/Bogota
Europe/Prague
Europe/Minsk
Asia/Shanghai
Asia/Bangkok
America/Bahia
Atlantic/Azores
Asia/Baku
Australia/Eucla
Pacific/Auckland
America/Halifax
Europe/Athens
Europe/Astrakhan
Asia/Dhaka
America/Phoenix
America/Argentina/Buenos_Aires
Asia/Baghdad
Asia/Riyadh
Europe/Berlin
Asia/Barnaul
Asia/Almaty
America/Adak
America/Anchorage
Asia/Muscat
Australia/Sydney
Australia/Darwin
Yangon Rangoon
Yakutsk
Western Brazilian
West Pacific
West Central Africa
West Bank
West Asia
Warsaw
W. Europe
W. Central Africa
W. Australia
Vladivostok
Venezuela
Universal Coordinated Time
Ulaanbaatar
US Mountain
US Eastern
Turks And Caicos
Turkey
Transbaikal
Tonga
Tomsk
Tokyo
Tocantins
Tehran
Tasmania
Taipei
Syria
Sydney
Sri Lanka
Sri Jayawardenepura
South Africa
Singapore
Seoul
Saudi Arabia
Saskatchewan
Sarajevo
Santiago
Samoa
Sakhalin
Saint Pierre
SE Asia
SA Western
SA Pacific
SA Eastern
Russian
Russia Time Zone 3
Russia Time Zone 11
Russia Time Zone 10
Romance
Rangoon
Prague Bratislava
Prague
Perth
Paris
Paraguay
Pakistan
Pacific Time
Pacific Standard Time (Mexico)
Pacific SA
Pacific
Osaka
Nuku'alofa
North Korea
North Asia East
North Asia
Norfolk
Newfoundland and Labrador
Newfoundland
New Zealand
Nepal Standard Time
Namibia
Nairobi
N. Central Asia
Myanmar
Mountain Standard Time (Mexico)
Mountain
Moscow
Morocco
Montevideo
Midway Island
Middle East
Mid-Atlantic
Mexico Standard Time 2
Mexico Standard Time
Mexico City
Mexico
Mauritius
Marquesas
Magadan
Lord Howe
Line Islands
Libya
Kuwait
Kuala Lumpur
Krasnoyarsk
Korea
Kolkata
Kathmandu
Kaliningrad
Kabul
Jordan
Jerusalem
Israel
Islamabad
Irkutsk
Iran
Indiana (East)
India
Hobart
Helsinki
Hawaiian
Hawaii
Harare
Haiti
Guam
Guadalajara
Greenwich Standard Time
Greenwich Mean Time
Greenwich
Greenland
Georgian Standard Time
GMT Standard Time
Fiji Islands
Fiji
Eniwetok
Ekaterinburg
Egypt
Eastern Standard Time (Mexico)
Eastern
Easter Island
East Africa
E. South America
E. Europe
E. Australia
E. Africa
Dateline
Darwin
Cuba
China
Chihuahua
Chennai
Chatham Islands
Central Standard Time (Mexico)
Central Pacific
Central European
Central Europe
Central Brazilian
Central Asia
Central America
Central
Cen. Australia
Caucasus
Casablanca
Caracas
Cape Verde Islands
Cape Verde Is.
Cape Verde
Canberra
Canada Central
Cairo
Buenos Aires
Bucharest
Brussels
Brisbane
Brasilia
Bougainville
Bogota
Belgrade
Belarus
Beijing
Bangladesh
Bangkok
Baku
Bahia
Baghdad
Azores
Azerbaijan
Aus Central W.
Auckland
Atlantic
Athens
Astrakhan
Astana
Arizona
Argentina
Arabic
Arabian
Arab
Amsterdam
Altai
Almaty
Aleutian
Alaskan
Alaska
Afghanistan
Adelaide
Abu Dhabi
AUS Eastern
AUS Central
@"SGSocialProfile"16@?0@"SGContactDetail"8
@"SGEmailAddress"16@?0@"SGContactDetail"8
@"SGPostalAddress"16@?0@"SGContactDetail"8
Country
State
City
Street
@"SGPhoneNumber"16@?0@"SGContactDetail"8
@"NSArray"16@?0Q8
Merging with a contact that isn't mergable
SGStorageContact.m
<SGStorageContact: %@ - %lu profile(s)>
Cannot use SearchOnePass for unanchored matches.
CREATE UNIQUE INDEX ix_emailSnippets_emailId ON emailSnippets(emailId)
CREATE UNIQUE INDEX entityIdIdx ON snippets(entityId)
DELETE FROM sqlite_sequence
CREATE TABLE emailSnippets (id INTEGER PRIMARY KEY AUTOINCREMENT,emailId INTEGER,title TEXT,content TEXT)
CREATE TABLE snippets (id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER,title TEXT,content TEXT,contentRangeOfInterest TEXT)
migration_MoveContentToSnippets
DROP TABLE IF EXISTS messages
DROP TABLE IF EXISTS userQueries
CREATE INDEX ix_userQueries_language ON userQueries (language ASC)
CREATE TABLE userQueries (id integer PRIMARY KEY AUTOINCREMENT NOT NULL,conversationId char(128) NOT NULL,language char(5) NOT NULL,query text NOT NULL,engaged integer(1) NOT NULL,creationTimestamp real NOT NULL)
CREATE UNIQUE INDEX ix_messages_uuid ON messages (uuid ASC)
CREATE UNIQUE INDEX ix_messages_id ON messages (id ASC)
CREATE INDEX ix_messages_conversationId ON messages (conversationId ASC)
CREATE TABLE messages (id integer PRIMARY KEY AUTOINCREMENT NOT NULL,uuid char(128) NOT NULL,conversationId char(128) NOT NULL,content text(128) NOT NULL,creationTimestamp REAL NOT NULL,isSent integer(1) NOT NULL)
migration_separateMessageSnippets
plugin-deleteSpotlightReferences
plugin-purgeSpotlightReferences
SGDPluginManager.processInteraction
plugin-processInteraction
NSUA
CSSI
enqueued_items
dissected_items
contacts.detail
behavior.scalar.confirmPercent
contactDetailConfirmations
contactDetailRejections
contacts.contact
contactConfirmations
contactRejections
SELECT value FROM statsCounters WHERE key = :key
statsCounters
Compiler::Copy called!
kRegexpConcat: child_frags is NULL
kRegexpAlternate child_frags is NULL
kRegexpStar child_frags is NULL
kRegexpPlus child_frags is NULL
kRegexpQuest child_frags is NULL
No ranges in char class
kRegexpCapture child_frags is NULL
Missing case in Compiler: 
hello, world
Couldn't compile regular expression, skipping: 
 due to error 
conversationProbability
domainFromSenderProbability
personCCRecipientsProbability
personToRecipientsProbability
subjectContentProbability
personFromSenderInDyadicConversationProbability
personFromSenderProbability
%@-timer
B24@?0@"SGStorageReminder"8@"NSDictionary"16
@16@?0@"_PASTuple2"8
B24@?0@"_PASTuple2"8@"NSDictionary"16
v24@?0@"REMReminder"8^B16
trialMetadata
oldestUpdatedSubmodelAge
isSubmodelRebuilt
CTSTimeSubmodelUpdate
CTSTimeBiomeAggregation
http://schema.org/Place
TOKEN_TO_IGNORE
MINIMUM_CONFIDENCE
NAME_MAPPINGS
-[SGNameMappingTransformer transform:]
SGNameMappingTransformer.m
feature
v24@?0@"NSNumber"8^B16
%@__%@
Shouldn't be NameMappingPossessive
POSSESSIVE
FULL
UNDEFINED
LAST
FIRST
_PASCFBurstTrie *lastnames(void)_block_invoke
Could not load lastnames trie: %@
trie
lastnames
_PASCFBurstTrie *firstnames(void)_block_invoke
Could not load firstnames trie: %@
firstnames
nameMappings[NameMappingPossessive]
nameMappings[NameMappingUndefined]
nameMappings[NameMappingLast]
nameMappings[NameMappingFirst]
nameMappings[NameMappingFull]
RE2::Set::Compile multiple times
Error simplifying during Compile.
alt -> %d | %d
altmatch -> %d | %d
byte%s [%02x-%02x] -> %d
capture %d -> %d
emptywidth %#x -> %d
match! %d
nop -> %d
%d. %s
@"SGTextMessageItem"16@?0@8
sent:
NameRequest/F
name
strong_phrase
MyName/F
v52@?0@"NSString"8{_NSRange=QQ}16@"SGRe2"32B40^B44
@"NSString"36@?0{SGMSIPatternType_=Q}8@"NSString"16@"NSString"24B32
conversation.count > 0
SGSelfIdentification.m
Unexpected type of message: Expected SGSimpleMailMessage or SGTextMessage
SGNamedEntityDissector.m
@"PPScoredExtractionSet"32@?0@"NSString"8S16S20Q24
@"PPScoredExtractionSet"32@?0@"NSString"8Q16Q24
@"PPScoredExtractionSet"40@?0@"NSString"8Q16@"NSString"24Q32
@"PPScoredExtractionSet"24@?0@"NSString"8Q16
v24@?0@"NSString"8S16S20
v24@?0@"NSString"8Q16
v40@?0@"NSString"8Q16@"NSString"24Q32
PERSONALIZATION_PORTRAIT_GLOBAL
com.apple.suggestions.SGNamedEntityDissector.NotificationQueue
@8@?0
SGSearchableItemIdTriple.m
Contacts can't have associated detected instant message addresses.
SGPipelineEntity.m
Contacts can't have associated detected birthdays.
Contacts can't have associated detected email addresses.
Contacts can't have associated detected phone numbers.
Contacts can't have associated detected addresses.
B24@?0@"SGPipelineEnrichment"8@"NSDictionary"16
a preferred enrichment must have a duplicateKey
SGPipelineEntity.flush
bundleIdentifier.length > 0
interactionIdentifier.length > 0
identifier.length > 0
handle
@"NSString"8@?0
Regexp not destroyed.
Bad reference count 
/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1148.1/re2/re2/re2_regexp.h
Cannot AllocSub 
Unexpected op in Regexp::Equal: 
no error
unexpected error
invalid escape sequence
invalid character class
invalid character class range
missing ]
missing )
trailing \
no argument for repetition operator
invalid repetition size
bad repetition operator
invalid perl operator
invalid UTF-8
invalid named capture group
NumCapturesWalker::ShortVisit called
NamedCapturesWalker::ShortVisit called
CaptureNamesWalker::ShortVisit called
<SGEntity:%@,sourceKey=%@,title=%@>
description
SGEntity.m
entityType must not be SGEntityTypeDetectedEmailAddress
entityType must not be SGEntityTypeUnknown
entityKey can't be nil.
from_messages
Invalid RE2: 
RE2: invalid startpos, endpos pair.
Match 
 DFA failed.
 used DFA - no match.
 used DFA - match
 reverse DFA failed.
 DFA inconsistency.
DFA inconsistency
 used reverse DFA.
 skipping DFA for OnePass.
 skipping DFA for BitState.
 using OnePass.
SearchOnePass inconsistency
 using BitState.
SearchBitState inconsistency
 using NFA.
SearchNFA inconsistency
Error reverse compiling '
pattern too large - reverse compile failed
Error parsing '
Error compiling '
pattern too large - compile failed
Unknown encoding 
\x00
v16@?0@"SGHistorySharedData"8
new data
rejectedEvents
eventsWithoutTimestamp
suggestHistoryObserver
SGSuggestHistory.m
rejectedReminders
reminders
dontUpdate
storageDetails
newContacts
confirmedEventWithoutTimestampFields
confirmedEventFields
opaqueKey
%.2f
@"NSData"16@?0@"NSString"8
@"NSData"16@?0@"NSData"8
canary_%@
Suggest history sets must not be nil
resetInfo
![hashes containsObject:[self _canaryHash]]
Suggest history with %d confirmed event hashes, %d confirmed event without timestamp hashes, %d rejected event hashes, %d confirmed reminder hashes, %d rejected reminder hashes, %d confirmed event field hashes, %d confirmed event without timestamp field hashes, %d contact hashes, %d storage detail hashes, and %d no-update hashes.
SGSalt
cacheType < SGKeyValueCacheTypeCount
SGKeyValueCacheManager.m
phone-to-name.kvcache
email-to-name.kvcache
Latin-ASCII; Lower
word
SGWords.m
\%03o
conversationAge
domainFromSenderAge
personCCRecipientsAge
personToRecipientsAge
subjectContentAge
personFromSenderInDyadicConversationAge
personFromSenderAge
<br>
&lt;
&amp;
filename
attachmentCallback
SGSimpleMailMessage+RFC822Parsing.m
quoted-printable
x-uuencode
base64
binary
content-transfer-encoding
delsp
flowed
format
text/html
content-id
multipart/signed
start
multipart/related
multipart/alternative
multipart/
attachment
inline
content-disposition
boundary
us-ascii
charset
text/plain
content-type
error creating parameterRegex: %@
[ \t]*;[ \t]*([^ \t()<>@,;:\\"\/\[\]?.=]+)=(?:([^ \t()<>@,;:\\"\/\[\]?.=]+)|"((?:[^"]|\\")*)")[ \t]*(?:(?=;)|$)
fieldValueRange.location != NSNotFound
error creating headerRegex: %@
(?:^(\S+?):(?:\r?\n[ \t])?[ \t]*(\S+(?:.*\r?\n[ \t].*\S+|.*\S)*|).*$|(?:\r?\n){2})
error creating quotedPrintableRegex: %@
(?:=([0-9A-F]{2})|=[ \t]*(?:\r?\n|$)|[ \t]+(?:\r?\n|$)|$)
d MMM y HH':'mm zzz
d MMM y HH':'mm ZZZ
EEE',' d MMM y HH':'mm zzz
EEE',' d MMM y HH':'mm ZZZ
d MMM y HH':'mm':'ss zzz
d MMM y HH':'mm':'ss ZZZ
EEE MMM d HH':'mm':'ss zzz y
EEE',' d MMM y HH':'mm':'ss zzz
EEE',' d MMM y HH':'mm':'ss ZZZ
@"NSDateFormatter"16@?0@"NSString"8
list-id
reply-to
detectedEndTimeZone
detectedEndDate
detectedTimeZone
detectedDate
postalAddressComponents
partialDate
approximateTime
inferredDate
allDay
parsecWikidataQid
parsecDomain
valueString
labelString
valueRange_length
valueRange_location
labelRange_length
labelRange_location
range_length
range_location
matchType
<SGDataDetectorMatch/%i %i-%i
void releaseScannerRef(DDScannerRef)
Could not return scanner %@ to pool
SGDataDetectorMatch.m
DDScannerRef getScannerRefAndAcquire(void)
Could not get data detector from pool
dd-MM
dd-MM-yyyy
PartialDate
RelativeDayOfWeek
NextLineQuoted
Email
NonQuotedLinePart
countUpTo8KB: %tu
count8KBTo32KB: %tu
count32KBTo128KB: %tu
count128KBTo512KB: %tu
count512KBTo2MB: %tu
countOver2MB: %tu
SGInhumans.m
HumanMailingListHeaders
NUL-terminator overwritten. This should be impossible.
InhumanBodyRegexp/F
InhumanBodyLiterals
InhumanEmailPatterns/F
failed to look up raw value for rawValueKeyInhumanEmailTokens
InhumanEmailTokens
failed to look up raw value for rawValueKeyInhumanEmailDomains
InhumanEmailDomains
InhumanEmailExceptions
InhumanName/F
failed to get raw value for InhumanNameComponents
InhumanNameComponents
v24@?0@"PPScoredItem"8^B16
unknown
@"PPScoredItem"24@?0@"NSString"8d16
Spotlight
UniversalSearch
This block should not be run more than once
CoreSuggestions-harvestQueueWriteback-%@
v32@?0@"PPScoredItem"8Q16^B24
Differing bundleIds present in the same SGPipelineEntity: %@ and %@
SGSpotlightWritebackDissector.m
ReminderModel
structuredEventGazetteer
StructuredEventModel
SGExtractionModels
mlmodelc
mlmodel
%@_%@
NONE
v32@?0@"NSString"8@"NSDictionary"16^B24
IS_TIME_DISTRIBUTED
mapping
relPath
SGExtractionModel.m
plplist
%@.%@
DELETE FROM identityInterdictNext
INSERT INTO identityInterdict (a, b) VALUES (?, ?)
q24@?0@"_PASTuple2"8@"_PASTuple2"16
SELECT a, b FROM identityInterdictNext
SGSqlEntityStore+Identity.m
CREATE TABLE identityInterdict (a TEXT NOT NULL, b TEXT NOT NULL)
DROP TABLE identityInterdict
INSERT INTO identityInterdictNext (a, b) VALUES (?, ?)
@"NSString"16@?0@"SGRecordId"8
%lld
SELECT 1 FROM identityBlobAnalysisJobs LIMIT 1
DELETE FROM identityBlobAnalysisJobs WHERE id = :blobId
:blobId
SELECT id, mergeBlob FROM identityBlobAnalysisJobs
INSERT INTO identityBlobAnalysisJobs (mergeBlob) VALUES (:mergeBlob)
:mergeBlob
DELETE FROM identityBlobAnalysisJobs
v24@?0@"CNContact"8@"SGRecordId"16
recordId
identityPerson
fullname
phones
socialProfileIdentifiers
SELECT recordId, fullname, phones, email, socialProfileIdentifiers FROM identityPerson WHERE recordId IN _pas_nsarray(:ids)
@"NSNumber"16@?0@"SGRecordId"8
@"CNContact"24@?0Q8@"NSArray"16
@"NSNumber"16@?0@"CNContact"8
@"NSString<SGNormalizedPhoneNumber>"16@?0@"CNLabeledValue"8
SELECT (CASE WHEN e.masterEntityId > 0 THEN e.masterEntityId ELSE e.id END), i.nameSketches FROM entity AS e INNER JOIN identityPerson AS i ON e.id = i.recordId LIMIT :limit
SGIStore.h, line %i
graph error
v16@?0r^{_vertex_t=^v^^{_edge_t}II}8
computeBlobs
SELECT recordId FROM IdentityPerson
SELECT recordId1, recordId2, strength FROM identityLink
OOM while adding edge to graph
:socialProfileIdentifiers
SELECT recordId FROM identityPerson    WHERE fullname IS NOT NULL        AND recordId IN (            SELECT recordId from identitySocialProfileIdentifiers                WHERE socialProfileIdentifier IN _pas_nsarray(:socialProfileIdentifiers)        )
Vertex not found in lookup table
SELECT recordId, socialProfileIdentifiers FROM identityPerson WHERE (surname = '' OR surname IS NULL) AND fullname IS NULL AND LENGTH(socialProfileIdentifiers) > 0
disjointSets
nameToVertex
graph
:phones
SELECT recordId FROM identityPerson    WHERE fullname IS NOT NULL        AND recordId IN (            SELECT recordId from identityPhones                WHERE phone IN _pas_nsarray(:phones)        )
SELECT recordId, phones FROM identityPerson WHERE (surname = '' OR surname IS NULL) AND fullname IS NULL AND LENGTH(phones) > 0
SELECT recordId FROM identityPerson WHERE email = ? AND fullname IS NOT NULL
SELECT recordId, email FROM identityPerson WHERE (surname = '' OR surname IS NULL) AND fullname IS NULL AND LENGTH(email) > 0
SELECT recordId FROM identityPerson WHERE curated
SELECT recordId1, recordId2, type, strength FROM identityLink
DELETE FROM identityLink WHERE recordId1 = ?1 OR recordId2 = ?1
DELETE FROM identityPerson WHERE recordId = ?
DELETE FROM identitySocialProfileIdentifiers WHERE socialProfileIdentifier IN _pas_nsarray(:socialProfileIdentifiers) AND recordId=:recordId
:recordId
DELETE FROM identityPhones WHERE phone IN _pas_nsarray(:phones) AND recordId=:recordId
SELECT phones, socialProfileIdentifiers FROM identityPerson WHERE recordId = :recordId
INSERT OR IGNORE INTO identityLink (recordId1, recordId2, type, strength) VALUES (?,?,?,?)
SELECT 1 FROM identityLink WHERE recordId1=? AND recordId2=? AND type=?
:fullname
@16@?0@"SGLabeledValue"8
SELECT recordId FROM identityPerson   WHERE %@ AND recordId IN (       SELECT recordId from identitySocialProfileIdentifiers           WHERE socialProfileIdentifier IN _pas_nsarray(:socialProfileIdentifiers)   )   LIMIT :limit
fullname=:fullname
(surname = '' OR surname IS NULL) AND fullname IS NULL
Expected nonzero number of socialProfiles
socialProfiles
SELECT recordId FROM identityPerson   WHERE %@ AND recordId IN (       SELECT recordId from identityPhones           WHERE phone IN _pas_nsarray(:phones)   )   LIMIT :limit
Expected nonzero number of phones
SELECT recordId FROM identityPerson WHERE email=? AND fullname=? LIMIT %d
SELECT recordId FROM identityPerson WHERE email=? AND fullname IS NULL LIMIT %d
INSERT OR IGNORE INTO identitySocialProfileIdentifiers (socialProfileIdentifier, recordId) VALUES (:socialProfileIdentifier, :recordId)
:socialProfileIdentifier
INSERT OR IGNORE INTO identityPhones (phone, recordId) VALUES (?, ?)
INSERT OR IGNORE INTO identityPerson (recordId, surname, middlename, fullname, nameSketches, phones, socialProfileIdentifiers, email, curated, isSent) VALUES (?,?,?,?,?,?,?,?,?,?)
emailFromThisRow
SELECT fullname, recordId, nameSketches, phones, socialProfileIdentifiers, email FROM identityPerson WHERE (surname IN (?, ?) OR middlename = ?) AND isSent = ? LIMIT ?
v16@?0@"NSString<SGNormalizedName>"8
Unexpected entity type: %lld
WHERE e.entityType = :pseudo OR e.entityType = :unrec
DELETE FROM identitySocialProfileIdentifiers
DELETE FROM identityPhones
DELETE FROM identityLink
DELETE FROM identityPerson
rebuildIdentityTables
@"SGLabeledValue"16@?0@"SGContactDetail"8
SELECT a, b FROM identityInterdict
Can not add interdict between non-disjoint sets %@ and %@
SGIStore error
v16@?0@"SGPatternGlobalData"8
Could not find raw asset value for key %@
Data not found for prefiltered regexp: %@
.filt
Non-prefiltered regexp was array: %@
SGPatterns.m
zh-hant
zh-hans
SGPatterns-deathTimer
middleeast
asia
e-europe
w-europe
eu-me
base
nolang
Language not found: %@
Could not load pattern data
filesystemPathForAssetDataRelativePath returned nil
CompiledPatterns.plist
off + len <= _fileData.length
(off & 0b11) == 0
Error loading file %@: %@
CompiledPatterns.pldat
Invalid pattern plist: no nolang locale found! Keys: %@
Could not load pattern data from plist: %@
Could not read pattern plist from %@: %@
(nil path)
<SGSimpleMailHeaderKeyValue: %@: %@>
value
nonnull property %s *%s was null when decoded
SGSimpleMailMessage.m
@16@?0@"BMNamedHandle"8
@"SGSimpleNamedEmailAddress"16@?0@"CSPerson"8
<SGSimpleMailMessage %@>
headers
isPartiallyDownloaded
hasInhumanHeaders
mailingList
replyTo
htmlContentData
%02x
@"CSPerson"8@?0
B16@?0@"SGDataDetectorMatch"8
@"NSNumber"8@?0
@"NSIndexSet"8@?0
@email.android.com>
_quotedRegionsCached
@"SGHtmlParser"8@?0
_htmlParserCached
@"NSData"8@?0
x-email-type-id
auto-submitted
bulk
precedence
list-unsubscribe
 x-sendgrid-eid x-facebook-notify x-amazon-mail-relay-type x-autogenerated x-campaign x-ses-outgoing x-ebay-mailtracker x-mailing-id x-phpbb-origin x-report-abuse x-facebook x-bloggermail x-campaign-id x-feedback-id
[header isKindOfClass:[SGSimpleMailHeaderKeyValue class]]
.PageContentDonation
v32@?0@"NSString"8@"NSNumber"16^B24
Name
v24@?0@"NSUserActivity"8@"NSError"16
UAMKMapItemPayload
SGNamedEntityExtractionPlugin.m
@"NSNumber"24@?0@"NSNumber"8@"PPScoredExtractionSet"16
com.apple.suggestions.plugin.SGNamedEntityPlugin
(?,?)
(%d,?)
(%d,%d)
/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1148.1/re2/re2/re2_nfa.cc
Bad args: context does not contain text 
Bad args: nsubmatch=
Unexpected opcode in short circuit: 
Unexpected empty-width in short circuit: 
Unhandled 
 in step
SGQuickResponsesML.m
com.apple.proactive.messages.%@
firstPartyLocTE9DLjFwCg
photoSharingUEhPVE8K
firstPartyPostalUE9TVEFMLjFwCg
firstPartyEmailRU1BSUwuMXAK
firstPartyPhoneUEhPTkUuMXAK
thirdPartyPhoneUEhPTkUuM3AK
thirdPartyEmailRU1BSUwuMXAK
thirdPartyPostalUE9TVEFMLjFwCg
http
\.(jpg|jpeg|png|gif|heic|mov)
heic
jpeg
%@'s Location.loc.vcf
Shared Location.loc.vcf
CL.loc.vcf
error creating encodedWordRegex: %@
NSString+EncodedWord.m
=\?(?:[^\s()<>@,;:"\/\[\]?.=]+?)\?(?:[^\s()<>@,;:"\/\[\]?.=]+?)\?(?:[^?\s]+)\?=
-[SGHtmlParser _consumeHtmlDataEnumerator:]_block_invoke
SGHtmlParser.m
_chunkLength <= INT_MAX
script
style
table
blockquote
class
gmail_quote
yahoo_quoted
domino-section
stopSpelling
href
.icloud.com
.apple.com
icloud.com
apple.com
void startEndCommon(void *, const xmlChar *, BOOL, const xmlChar **)_block_invoke_2
Could not parse signature attribute names from %@: %@
Could not read signature attribute name data from %@: %@
Could not find asset file with signature attribute names
SigHtmlAttrNames.dat
void hashStrings(NSArray<NSString *> *__strong, NSData *__strong, uint8_t *)
digest != NULL
strings.count > 0
SGCrypto.m
strictLowerBound
strictUpperBound
@"NSNumber"16@?0@"SGMISaliencyModelConfigRule"8
@"NSNumber"16@?0@"NSString"8
SGLowMemoryContactEnumeration
@"NSString"16@?0@"CSSearchableItem"8
com.apple.MobileAddressBook
true
v24@?0^{_LXEntry=}8*16
nicknames
SGNicknames.m
CHARACTER_MAPPING
NUMERIC_MAPPING
-[SGSymbolicMappingTransformer transform:]
SGSymbolicMappingTransformer.m
SG_TARGET
SG_FEATURE
%s%lu
NSString * _Nonnull numberedString(NSString * _Nonnull __strong, NSUInteger)
numberedString
The key was too short.
KeyTooShort
Expected keys to be unique and in ascending order. That constraint was violated by this sequence of keys:
%d: %@
%d: %@
SGFlightData.m
airportBestScore_
airportInitScore_
airportCodeCandidats_
flightCodes.count > 0
v32@?0@"NSString"8@"NSString"16^B24
carrierNamesUpdate.dat
@"SGOffsetDictionary"8@?0
airportsUpdate.dat
flightsUpdate.dat
carrierNames
airports
flights
failed to get asset path for AIRPORT_NAME_IDENT.
AirportNameNoise.plist
%@ %@ from %@ to %@
flightno
airline
void _SGTaggedTypeAssert_impl(Class, void *)
object_getClass(obj) == tag
((uintptr_t)ptr & 0b11) == 0
SGTaggedMalloc.m
NSData *_SGTaggedVMAlloc_impl(Class, size_t, void **)
Could not allocate virtual memory
HTTP URL should always construct
LSApplicationRecord+Suggestions.m
birthdayExtraction
birthdayTextMessageCongrats
selfId
selfIdentificationPhraseLogistic
dataDetectionSignificantPhraseAddressForIMessageLogistic
significantAddress
dataDetectionSignificantPhraseAddressLogistic
dataDetectionSignificantPhraseEmailForIMessageLogistic
significantEmailAddress
dataDetectionSignificantPhraseEmailLogistic
Logistic
significantPhoneNumber
dataDetectionSignificantPhrasePhoneLogistic
args:
PREDICTION
%@_%@_%@%@Model.chunk
MODEL_DECISION_THRESHOLD
MODEL_SOURCE_SESSION_DESCRIPTOR
MODEL_FEATURIZER
MODEL_TYPE
MODEL_LOCALE
MODEL_DATA
LOGISTIC
Unknown type of model class: %@
-[SGBinaryClassificationModel initWithPlist:chunks:context:]
SGBinaryClassificationModel.m
[dict isKindOfClass:[NSDictionary class]]
Unknown model type: %@
.bf2-tail
.bf-tail
.bf2-head
.bf-head
SGBloomFilter.m
Invalid file extension for Bloom filter chunk: %@
com.apple.suggestions.SGBloomFilter
Armenian
Avestan
Balinese
Bamum
Batak
Bengali
Bopomofo
Brahmi
Braille
Buginese
Buhid
Canadian_Aboriginal
Carian
Chakma
Cham
Cherokee
Common
Coptic
Cuneiform
Cypriot
Cyrillic
Deseret
Devanagari
Egyptian_Hieroglyphs
Ethiopic
Georgian
Glagolitic
Gothic
Greek
Gujarati
Gurmukhi
Hangul
Hanunoo
Hebrew
Hiragana
Imperial_Aramaic
Inherited
Inscriptional_Pahlavi
Inscriptional_Parthian
Javanese
Kaithi
Kannada
Katakana
Kayah_Li
Kharoshthi
Khmer
Latin
Lepcha
Limbu
Linear_B
Lisu
Lycian
Lydian
Malayalam
Mandaic
Meetei_Mayek
Meroitic_Cursive
Meroitic_Hieroglyphs
Miao
Mongolian
New_Tai_Lue
Ogham
Ol_Chiki
Old_Italic
Old_Persian
Old_South_Arabian
Old_Turkic
Oriya
Osmanya
Phags_Pa
Phoenician
Rejang
Runic
Samaritan
Saurashtra
Sharada
Shavian
Sinhala
Sora_Sompeng
Sundanese
Syloti_Nagri
Syriac
Tagalog
Tagbanwa
Tai_Le
Tai_Tham
Tai_Viet
Takri
Tamil
Telugu
Thaana
Thai
Tibetan
Tifinagh
Ugaritic
@"NSString"16@?0@"SGTextMessageItem"8
[conversation.firstObject isKindOfClass:[SGTextMessageItem class]]
SGTextMessageConversationTracker.m
[otherItem isKindOfClass:[SGTextMessageItem class]]
_text
[result.firstObject isKindOfClass:[SGTextMessageItem class]]
@24@?0@"SGTextMessageItem"8Q16
significant-pseudo-contacts.bf
<SGDatabaseJournalFile %@>
!_dead
SGDatabaseJournalFile.m
v24@?0^v8Q16
data.length <= UINT32_MAX
Can not overwrite journal file
http://schema.org/Ticket
endDate
startDate
movie
http://schema.org/Movie
http://schema.org/MovieShowing
http://schema.org/EventReservation
http://schema.org/Event
Event
v16@?0@"SGReminderExtractionModelGuardedData"8
ReminderDissector model inference
wordBoundary
config
ReminderOverrides
ReminderOutputMapping
ReminderInputMapping
ReminderPreprocessor
SGRequestContext.m
bi_lstm_0_c_in_rev
bi_lstm_0_h_in_rev
bi_lstm_0_c_in
bi_lstm_0_h_in
categoryLog
eventsCount
eventKey
interactionKey
timingProcessing
creationDate
launchCountMessages
launchCountReminders
launchCountCalendar
launchCountMail
launchCountMaps
aggregateSummary
deviceLanguage
rtcLogsSent
remindersCountStats
documentType
locationType
expirationDate
trialExperimentId
trialTreatmentId
trialDeploymentId
webpage
extraction
reminderInteractionSummary
reminderInteraction
interactionSummary
reminderExtraction
found
shown
engaged
confirmed
rejected
dismissed
dissected
harvested
filtered
deleted
dkim_failed
dkim_succeeded
dissected_realtime
dissected_background
suggestd
mail
mailBanner
mailDDLink
messages
messagesBanner
messagesDDLink
calendar
calendarNotification
calendarInbox
calendarEventDetails
calendarCanvas
calendarWidget
calendarWidgetUpNext
calendarZKW
calendarAutocomplete
maps
mapsWidget
TTLNotification
spotlight
calendarCreateEventIntent
remindersNotification
remindersList
remindersQuickType
checkInShortcutApp
checkInShortcutSafari
event
exception
outputException
fail
v16@?0@"SGRTCLoggingGuardedData"8
storeAge
localeAssetVersion
Suggestions
eventDuplicateKey
outputInfos
outputExceptions
templateName
usageCalendar
usageMaps
medium
high
SGDelivery_ctNumSame_%lu
daysFromEventStart
@"SGEntityTag"16@?0@"NSString"8
bundleID
isSplashScreenAcknowledged
isFromSync
isCancelled
isAllDay
domain
eventCategory
food
ticket
carRental
hotel
boat
train
flight
social
loggedInteractionsSummary
loggedInteractions
loggedExtractions
q24@?0@"NSDictionary"8@"NSDictionary"16
com.apple.suggestd.interactions-write-queue
rtc-persist
.old
privacyAwareLogging.ser
arrivalGate
arrivalTerminal
arrivalAirport
departureGate
departureTerminal
departureAirport
boardingTime
flightNumber
http://schema.org/Flight
icaoCode
iataCode
http://schema.org/Airport
http://schema.org/Airline
http://schema.org/FlightReservation
Flight
reimportItems_unseen
reimportItems_total
SELECT seenByReceiverTimestamp FROM reimportItems
reimportRequests_oldestOpen
reimportRequests_oldest
reimportRequests_unexecuted
reimportRequests_unqueried
reimportRequests_total
SELECT creationTimestamp, queryTimestamp, executionTimestamp FROM reimportRequests
reimportRequests
DELETE FROM reimportItems WHERE reimportRequestId NOT IN (SELECT id FROM reimportRequests)
DELETE FROM reimportRequests WHERE executionTimestamp IS NOT NULL AND id NOT IN (     SELECT DISTINCT reimportRequestId FROM reimportItems     WHERE seenByReceiverTimestamp IS NULL )
DELETE FROM reimportRequests WHERE creationTimestamp < :date
:date
SELECT 1 FROM reimportItems WHERE bundleId = :bid
SELECT 1 FROM reimportItems WHERE bundleId = :bid AND uniqueId = :uid
%@:%@
SELECT bundleId, uniqueId FROM reimportItems WHERE reimportRequestId = :id AND seenByReceiverTimestamp IS NULL
SELECT id, plugin, personHandle, startDateTimestamp, endDateTimestamp FROM reimportRequests WHERE %@
queryTimestamp IS NOT NULL AND executionTimestamp IS NULL
queryTimestamp IS NULL
UPDATE reimportItems SET uniqueId = :newValue WHERE bundleId = :bundleId AND uniqueId = :oldValue
:bundleId
:oldValue
:newValue
UPDATE reimportItems SET seenByReceiverTimestamp = :time WHERE bundleId = :bundleId AND uniqueId = :uniqueId
:uniqueId
UPDATE reimportItems SET seenByReceiverTimestamp = :time WHERE bundleId = :bundleId AND uniqueId IN _pas_nsarray(:uids)
UPDATE reimportRequests SET executionTimestamp = :time WHERE id = :id
v32@?0@"NSString"8@"NSSet"16^B24
INSERT OR REPLACE INTO reimportItems (reimportRequestId, bundleId, uniqueId) SELECT :rid, :bid, value FROM _pas_nsarray(:chunk)
-[SGSqlEntityStore(ReimportRequests) storeReimportItems:requestId:]_block_invoke_4
SGSqlEntityStore+ReimportRequests.m
requestId <= INT64_MAX
:rid
:chunk
UPDATE reimportRequests SET queryTimestamp = :time WHERE id = :id
endDateTimestamp
startDateTimestamp
personHandle
plugin
index
widgetViewId
activity
SGXPCActivity.m
criteria
const char *identifierForActivityId(SGXPCActivity)
com.apple.suggestions.harvest
com.apple.suggestd.trim
com.apple.suggestd.vacuum
com.apple.suggestions.sqlentitystore.cacheprecomputation
com.apple.suggestd.identityanalysis
com.apple.suggestd.sendrtc
com.apple.suggestions.collectweeklystats
com.apple.suggestd.cd-cache-rebuild
com.apple.suggestd.process-pending-geocodes
com.apple.suggestd.process-pending-verification
com.apple.suggestd.mail-intelligence-tasks
com.apple.suggestd.harvested-url-metric-upload
com.apple.suggestd.ma-metadata-download
com.apple.suggestd.custom-response-harvest
com.apple.suggestd.phone-qr-engagement-data-recording
Unknown activity id: %i
handler
0 <= activityId && activityId < _SGXPCActivityCount
range.location + range.length <= _length
SGTokenString.m
index < _length
string.length < ((unsigned long)1 << 31)
string
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
Content-Type
application/json
POST
payload
flight_number
airline_code
URL Should not return nil if host is provided and path starts with a '/': %@ %@
SGReverseTemplateJS.m
/api/flights
https
JSStringRelease
JSValue
JSValueMakeString
JSStringCreateWithCharactersNoCopy
_jsContext
exceptions
emailToJsonLdWithExceptions
schemaOrgToOutputWithTiming
textMessageToOutputWithTiming
emailToOutputWithTiming
jsMessageLogs
sourceMetadata
outputs
JSGarbageCollect
taggedCharacterRanges
reverseMapForEntity
mergeSchemasArrays
predicted
expected
diffSchemasArrays
getPrivacyAwareMlLogs
resolveCandidatesForJSDict
eventClassificationForEntity
shouldDownloadFull
SGReverseTemplateJS.holdXpcTransactionForShortDelay
JSScriptRelease
JSScriptEvaluate
JSScriptCreateReferencingImmortalASCIIText
JSStringCreateWithUTF8CString
JSContextGetGroup
File URL must be a valid path.
scheduled
canceled
landed
diverted
redirected
active
delayed
secondsFromGMT
country
countryCode
postalCode
district
street
city
timezone
code
Can't create formattedDate, timezone is nil
Can't create formattedDate, date is nil
legs
divertedAirport
arrivalActualTime
arrivalPublishedTime
departureActualTime
departurePublishedTime
status
operatorFlightNumber
operatorCarrierCode
flightID
carrierPhoneNumber
carrierName
carrierCode
userInfo
error
type
v32@?0@"PARTask"8@"PARResponse"16@"NSError"24
request
com.apple.undefined
yyyy-MM-dd
%@%@
JSObjectMakeArrayBufferWithBytesNoCopy
ReverseTemplateJS
main.js
loadMappedData
loadBurstTrie
@"SGJSBurstTrie"16@?0@"NSString"8
getHistoricalFlightInformation
getMD5Hash
getFlightInformation
@"NSArray"32@?0@"NSString"8@"NSString"16@"NSString"24
freeJSContext
secondsForTiming
d8@?0
getGMTOffsetFromDateTimeAndTimeZoneOlsonCode
@"NSString"24@?0@"NSNumber"8@"NSString"16
ZZZZZ
getSystemVersion
@"NSDictionary"8@?0
allowUnverifiedSourceForMarkup
allowAnyDomainForMarkup
isInternalDevice
getLocalizedFormattedDatetimeString
@"NSString"40@?0@"NSNumber"8@"NSNumber"16@"NSNumber"24@"NSNumber"32
getPreferredLocalizationsFromArray
getPreferredLocalizationsFromArray must be called with an array of strings
JSContext
getLinguisticTagsForString
@"NSDictionary"40@?0@"NSString"8@"NSString"16@"NSString"24Q32
ranges
tags
@16@?0@"NSValue"8
getCurrentLocale
htmlToPlainText
@"NSString"20@?0@"NSString"8B16
ASSET_VERSION
detectLanguageForString
decodeEntitiesInString
tokenizeString
parseMicrodata
runDataDetectorsWithMetadata
@"NSDictionary"40@?0@"NSString"8d16@"NSString"24@"NSArray"32
runDataDetectors
@"NSDictionary"32@?0@"NSString"8d16@"NSString"24
console
developerLog
debug
loadNoVmGrowthCounter
loadWithVmGrowthCounter
@"JSValue"16@?0@"NSString"8
load
fileNameWithPathExtension
parentDir
assetPath
SGReverseTemplateJS
DISPATCH_MEMORYPRESSURE_PROC_LIMIT_WARN
DISPATCH_MEMORYPRESSURE_CRITICAL
DISPATCH_MEMORYPRESSURE_WARN
DISPATCH_MEMORYPRESSURE_NORMAL
UNKNOWN
DISPATCH_MEMORYPRESSURE_PROC_LIMIT_CRITICAL
v12@?0I8
com.apple.suggestions.reversetemplatejs
com.apple.suggestions.reversetemplatejs.pressure
This method must be stubbed!
v16@?0@"SGStructuredEventTrialClientWrapperGuardedData"8
foundInMailNotifications
structuredEventOutputMapping
structuredEventInputMapping
engineConfig
supportedProviders
StructuredEventModel.mlmodelc
PRODUCTIVITY_INTELLIGENCE_STRUCTURED_EVENTS
v16@?0@"<TRINamespaceUpdateProtocol>"8
PRAGMA optimize(%llX)
PRAGMA incremental_vacuum(%lu)
VACUUM
PRAGMA auto_vacuum=2
PRAGMA auto_vacuum
PRAGMA freelist_count
PRAGMA page_count
PRAGMA integrity_check
Error: failed to run integrity_check on %@: %@
SELECT seq FROM sqlite_sequence WHERE name = :tableName
:tableName
[%@: %@ <%p>]
INSERT OR REPLACE INTO %@ (%@) VALUES (%@)
insertOrReplaceIntoTable:dictionary: requires nonempty dictionary
SGSqliteDatabase.m
UPDATE %@ SET %@%@
 WHERE 
updateTable:dictionary:whereClause: requires nonempty dictionary
Could not insert this type into sqlite
Could not securely code this type into SQLite
TypeError
onPrep
sqlite handle unexpected nil
hasInhumanTag
tagsHaveEscapedTag
delimitedString
firstStringAfterPrefix
PRAGMA auto_vacuum=INCREMENTAL
void firstStringAfterPrefix(sqlite3_context *, int, sqlite3_value **)
argc == 1
void delimitedString(sqlite3_context *, int, sqlite3_value **)
argc == 2
void tagsHaveEscapedTag(sqlite3_context *, int, sqlite3_value **)
void hasInhumanTag(sqlite3_context *, int, sqlite3_value **)
|inhuman
int _indexForBindParam(sqlite3_stmt *, const char *)
Unknown bind parameter "%s"
stmt
?mode=memory&cache=shared
file:
:memory:
mode=memory
ml_summary
missingEntities
diff
mergedSchema
schema
crossTags
usecase
category
privacyAwareSubject
assetIdentifier
assetVersion
extractionTemplate
shadowExtraction
M_%@
schemaFromTemplate_%@
schemaDiff_%@
No Event
templateExtractionOutput
Exception
fallbackExtraction
mlDefaultExtraction
addressCountry
addressRegion
addressLocality
streetAddress
http://schema.org/PostalAddress
Cancelled
Confirmed
http://schema.org/Reservation
yyyy-MM-dd'T'HH:mm:ss
ddSGDetections
cat_%@
ml_plaintext_prediction
Unsupported category: %@
http://schema.org/ScreeningEvent
providerName
endPlace
endAddress
dropoffLocation
dropoffTime
pickupLocation
pickupTime
http://schema.org/RentalCarReservation
place
http://schema.org/LodgingBusiness
checkoutTime
checkinTime
http://schema.org/LodgingReservation
reservationName
startTime
http://schema.org/FoodEstablishment
reservationStatus
http://schema.org/FoodEstablishmentReservation
http://schema.org
@context
No event predicted by ML classifier
isSmartSortOn
widgetItems
widgetSize
%s%d
(%p)
 flag=%#x
DeadState in RunStateOnByte
NULL state in RunStateOnByte
Unexpected special state in RunStateOnByte
DFA memory cache could be too small: 
only room for 
 states.
StateSaver failed to restore state.
RunStateOnByteUnlocked failed after ResetCache
RunStateOnByteUnlocked failed after Reset
Text is not inside context.
Failed to analyze start state.
timing
<SGSchemaOrgKey uuid:%@>
locations
quality
accuracy
airportCode
label
eventId
SELECT locationType, label, address, airportCode, latitude, longitude, accuracy, quality FROM locations WHERE id = ?
SGSqlEntityStore+Deleting.m
SELECT entityKey, entityType, parentKey FROM entityTags WHERE tag = ?
serializedEntityKey
tag.indexed
DROP TABLE IF EXISTS interactionsByBundleId
v24@?0@"NSString"8^B16
SELECT key FROM interactionsByBundleId WHERE bundleId = ? ORDER BY timestamp DESC LIMIT -1 OFFSET ?
SELECT bundleId, count(*) FROM interactionsByBundleId GROUP BY bundleId
CREATE INDEX ix_interactionsByBundleId_bundleId ON interactionsByBundleId(bundleId, timestamp DESC, key)
INSERT INTO interactionsByBundleId   SELECT delimitedString(key, 0),          CASE WHEN updateTimestamp > 0 THEN updateTimestamp              WHEN creationTimestamp > 0 THEN creationTimestamp              ELSE lastSeenTimestamp END,         key  FROM emailMetaData  WHERE type = ?
CREATE TEMP TABLE interactionsByBundleId (bundleId TEXT NOT NULL, timestamp FLOAT, key TEXT NOT NULL)
Unexpected tableId for record: %@
DELETE FROM emailMetadata WHERE key IN _pas_nsarray(:keys)
SELECT id FROM emailMetadata WHERE key IN _pas_nsarray(:keys)
DELETE FROM emailTags WHERE key IN _pas_nsarray(:keys)
@"NSString"16@?0@"SGDuplicateKey"8
DELETE FROM entityParentage WHERE duplicateKeyHashBlob IN _pas_nsarray(:compositeHashes)
:compositeHashes
@"NSData"16@?0@"SGDuplicateKey"8
:recordIds
DELETE FROM events WHERE entityId IN _pas_nsarray(:recordIds)
DELETE FROM eventTags AS et WHERE et.eventId IN (SELECT et2.eventId FROM eventTags AS et2 JOIN events AS e ON e.id = et2.eventId WHERE e.entityId IN _pas_nsarray(:recordIds))
DELETE FROM locations WHERE eventId IN (SELECT l2.eventId FROM locations AS l2 JOIN events AS e ON e.id = l2.eventId WHERE e.entityId IN _pas_nsarray(:recordIds))
DELETE FROM contactDetails WHERE entityId IN _pas_nsarray(:recordIds)
DELETE FROM extractionInfos WHERE id IN (SELECT extractionInfoId FROM contactDetails WHERE entityId IN _pas_nsarray(:recordIds))
DELETE FROM reminders WHERE entityId IN _pas_nsarray(:recordIds)
DELETE FROM locations WHERE id IN (SELECT dueLocationId FROM reminders WHERE entityId IN _pas_nsarray(:recordIds))
DELETE FROM entityTags WHERE duplicateKeyHashBlob IN _pas_nsarray(:keys)
DELETE FROM entityParentage WHERE duplicateKeyHashBlob IN _pas_nsarray(:keys)
DROP TABLE entitiesToRemove
entitiesToRemove
INSERT OR IGNORE INTO entitiesToRemove SELECT childId FROM entityParentage WHERE duplicateKeyHashBlob IN _pas_nsarray(:keys)
CREATE TEMP TABLE entitiesToRemove (id INTEGER PRIMARY KEY)
DROP TABLE IF EXISTS entitiesToRemove
DROP TABLE childrenOfRemovedParents
DROP TABLE childrenWithRemainingParents
DROP TABLE childrenToRemove
DELETE FROM entityParentage WHERE parentKey IN _pas_nsarray(:keys)
DELETE FROM entityTags WHERE parentKey IN _pas_nsarray(:keys)
childrenToRemove
INSERT INTO childrenToRemove SELECT id FROM childrenOfRemovedParents      WHERE id NOT IN (SELECT id FROM childrenWithRemainingParents)
CREATE TEMP TABLE childrenToRemove (id INTEGER PRIMARY KEY)
DROP TABLE IF EXISTS childrenToRemove
INSERT INTO childrenWithRemainingParents SELECT DISTINCT cr.id FROM childrenOfRemovedParents AS cr CROSS JOIN entityParentage AS ep ON cr.id = ep.childId WHERE ep.parentKey NOT IN _pas_nsarray(:keys)
CREATE TEMP TABLE childrenWithRemainingParents (id INTEGER PRIMARY KEY)
DROP TABLE IF EXISTS childrenWithRemainingParents
INSERT INTO childrenOfRemovedParents SELECT DISTINCT childId FROM entityParentage WHERE parentKey IN _pas_nsarray(:keys)
CREATE TEMP TABLE childrenOfRemovedParents (id INTEGER PRIMARY KEY)
DROP TABLE IF EXISTS childrenOfRemovedParents
DROP TABLE %@
SELECT masterEntityId FROM %@
DELETE FROM entity_fts WHERE docid IN (SELECT id FROM %@)
DELETE FROM entity WHERE id IN (SELECT id FROM %@)
:pseudoevent
:pseudoreminder
FROM %@ AS c CROSS JOIN entity AS e ON c.id = e.id CROSS JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityType = :pseudoevent OR e.entityType = :pseudoreminder
pseudoContactsWithDeletedDetails
SELECT DISTINCT id FROM %@
:phone
:address
:birthday
:socialProfile
INSERT OR IGNORE INTO %@ SELECT e.masterEntityId FROM %@ AS cr CROSS JOIN entity AS e ON e.id = cr.id WHERE e.entityType IN (:email, :phone, :address, :birthday, :socialProfile)   AND e.masterEntityId > 0   AND e.masterEntityId NOT IN (SELECT id FROM %@)
CREATE TEMP TABLE %@ (masterEntityId INTEGER PRIMARY KEY)
DROP TABLE IF EXISTS %@
WHERE parentKey = ?
@"SGEntityTag"16@?0@"SGEmailKey"8
:timeRangeEnd
WHERE e.timeRangeEnd < :timeRangeEnd AND e.entityType = :entityType
WHERE ((e.timeRangeEnd < :timeRangeEnd AND e.timeRangeEnd != 0) OR (e.timeRangeEnd == 0 AND e.creationTimestamp < :creationTimestamp)) AND e.entityType = :entityType
:candidateEntityKeys
WHERE e.entityKey in _pas_nsarray(:candidateEntityKeys) AND e.entityType = :entityType
SELECT entityKey FROM entity WHERE entityType = :entityType GROUP BY entityKey having ( COUNT(entityKey) > 1)
DELETE FROM mailIntelligence_spotlightMapping WHERE messageId IN _pas_nsarray(:messageIds)
:messageIds
DELETE FROM mailIntelligence_saliency WHERE messageId IN _pas_nsarray(:messageIds)
possible infinite loop
SELECT messageId FROM mailIntelligence_saliency WHERE creationTimestamp < :time
mailIntelligence_saliency
Expected NOT NULL based on sqlite schema
:time
SELECT rowid, key FROM emailMetadata WHERE creationTimestamp < :time AND rowid > :minId ORDER BY rowid LIMIT :limit
batchSize > 0
qmarksSeparatedByCommas
DELETE FROM emailSnippets WHERE emailId IN (%@)
DELETE FROM snippets WHERE entityId IN (%@)
False
True
HarvestQueueFullError
HarvestQueueBufferFullError
HarvestQueueFileOpenError
HarvestQueueWriteError
HarvestQueueReadError
HarvestQueueBadChecksumError
HarvestQueueTruncationError
HarvestQueueUnsupportedError
%012llu.pfail
<%@ itemId:%lli fileId:%i fails:%i item:%@>
Can not finish harvest queue item twice
Must finish harvest queue item: %@
CSSearchableItem *deserializeSearchableItem(NSData * _Nonnull __strong, NSData *__strong, NSData *__strong)
metadata
tryLater
callback
fileId
%i.qdat
fileId >= 0
SGDHarvestQueueOnDisk.addItemWithSourceKey
v28@?0{?=iiI}8@"NSError"20
v12@?0i8
com.apple.suggestions.harvestQueueWrite
-[SGDHarvestQueueFileWriter write:callback:]_block_invoke
SGDHarvestQueue.m
compressedBufferSize >= 4
v24@?0B8@"NSObject<OS_dispatch_data>"12i20
+[SGDHarvestQueueFileWriter needsWorkaroundFor69111971]_block_invoke
bytesWritten
SGDHarvestQueueOnDisk.flushFilesWhileUnlockedd
SGDHarvestQueueOnDisk.openFilesForProcessingWhileLocked
void createDirectoryIfDoesNotExist(NSString *__strong)
-backing
permafail
v24@?0q8@"NSError"16
q24@?0@8@16
B16@?0@"SGDHarvestQueueItemInMemory"8
SGDHarvestQueueInMemory.addItemWithSourceKey
<%@ queueId:%i fails:%i item:%@>
limit > 0
<%@ queueId:%@ item:%@>
Can not finish work queue item twice
Must finish work queue item: %@
workQueueItem
html
pending
inMemory.other == onDisk
inMemory
onDisk
eat@myshorts.co
craig@apple.com
tim@apple.com
Tokens
GlobalCounts
DELETE FROM mailIntelligence_naiveBayesModels%@
v32@?0@"NSNumber"8@"NSNumber"16^B24
:featureName
DELETE FROM mailIntelligence_naiveBayesModelsTokens WHERE id IN (SELECT id FROM mailIntelligence_naiveBayesModelsTokens WHERE featureName = :featureName ORDER BY salientCount, lastUpdateTimestamp LIMIT %u);
SELECT featureName,COUNT(*) FROM mailIntelligence_naiveBayesModelsTokens GROUP BY featureName
DELETE FROM mailIntelligence_naiveBayesModelsTokens WHERE lastUpdateTimestamp < :purgeDate
:purgeDate
SELECT regularCount FROM mailIntelligence_naiveBayesModelsTokens WHERE featureName = :featureName ORDER BY regularCount ASC
regularTokensDistribution
SELECT salientCount FROM mailIntelligence_naiveBayesModelsTokens WHERE featureName = :featureName ORDER BY salientCount ASC
salientTokensDistribution
SELECT featureName, lastUpdateTimestamp FROM mailIntelligence_naiveBayesModelsTokens ORDER BY lastUpdateTimestamp ASC
MMM,dd
en_US
lastUpdates
SELECT distinct featureName, salientCount, regularCount FROM mailIntelligence_naiveBayesModelsGlobalCounts
counts
SELECT featureName,min(creationTimestamp) FROM mailIntelligence_naiveBayesModelsTokens GROUP BY featureName
INSERT INTO mailIntelligence_naiveBayesModelsTokens (featureName, token, isUnigram, salientCount, regularCount, creationTimestamp, lastUpdateTimestamp) VALUES (:featureName, :token, FALSE, :salientCount, :regularCount, :creationTimestamp, :lastUpdateTimestamp) ON CONFLICT(featureName, token, isUnigram) DO UPDATE SET salientCount=salientCount + :salientCount, regularCount=regularCount + :regularCount, lastUpdateTimestamp=:lastUpdateTimestamp
:token
:salientCount
:regularCount
:lastUpdateTimestamp
INSERT INTO mailIntelligence_naiveBayesModelsTokens (featureName, token, isUnigram, salientCount, regularCount, creationTimestamp, lastUpdateTimestamp) VALUES (:featureName, :token, TRUE, :salientCount, :regularCount, :creationTimestamp, :lastUpdateTimestamp) ON CONFLICT(featureName, token, isUnigram) DO UPDATE SET salientCount=salientCount + :salientCount, regularCount=regularCount + :regularCount, lastUpdateTimestamp=:lastUpdateTimestamp
INSERT INTO mailIntelligence_naiveBayesModelsGlobalCounts (featureName, salientCount, regularCount, salientUnigramTokensCount, regularUnigramTokensCount, salientBigramTokensCount, regularBigramTokensCount) VALUES (:featureName, :salientCount, :regularCount, :salientUnigramTokensCount, :regularUnigramTokensCount, :salientBigramTokensCount, :regularBigramTokensCount) ON CONFLICT(featureName) DO UPDATE SET salientCount=salientCount + :salientCount, regularCount=regularCount + :regularCount, salientUnigramTokensCount=salientUnigramTokensCount + :salientUnigramTokensCount, regularUnigramTokensCount=regularUnigramTokensCount + :regularUnigramTokensCount, salientBigramTokensCount=salientBigramTokensCount + :salientBigramTokensCount, regularBigramTokensCount=regularBigramTokensCount + :regularBigramTokensCount
:salientUnigramTokensCount
:regularUnigramTokensCount
:salientBigramTokensCount
:regularBigramTokensCount
DELETE FROM mailIntelligence_naiveBayesModelsTokens WHERE featureName = :featureName
DELETE FROM mailIntelligence_naiveBayesModelsGlobalCounts WHERE featureName = :featureName
salientCount
mailIntelligence_naiveBayesModelsTokens
regularCount
:tokens
SELECT salientCount, regularCount, creationTimestamp FROM mailIntelligence_naiveBayesModelsTokens WHERE featureName = :featureName AND isUnigram IS FALSE AND featureName = :featureName AND token IN _pas_nsarray(:tokens)
SELECT salientCount, regularCount, creationTimestamp FROM mailIntelligence_naiveBayesModelsTokens WHERE featureName = :featureName AND isUnigram IS TRUE AND featureName = :featureName AND token IN _pas_nsarray(:tokens)
mailIntelligence_naiveBayesModelsGlobalCounts
salientUnigramTokensCount
regularUnigramTokensCount
salientBigramTokensCount
regularBigramTokensCount
SELECT salientCount, regularCount, salientUnigramTokensCount, regularUnigramTokensCount, salientBigramTokensCount, regularBigramTokensCount FROM mailIntelligence_naiveBayesModelsGlobalCounts WHERE featureName = :featureName
Exceeded iteration limit
SGAhoCorasickMaxIter
Node %u beyond bound %u
SGAhoCorasickBoundsCheck
bytecode
SGAhoCorasick.m
bytecode.length % sizeof(op_t) == 0
bytecode.length > 0
featureVector
Identity
CJKSpacers
-_. 
%c.%s
%s.%s
Any-Latin; Latin-ASCII
_PASCFBurstTrie *nameFreqTrie(void)_block_invoke_2
Could not load name frequency trie
SGNames.m
namefreq.trie
@"NSRegularExpression"8@?0
Could not initialize regular expression: %@
Could not initialize pattern.
LastNameFirst
QuotedNickname
()<>[]"@
 via LinkedIn
v32@?0@"NSTextCheckingResult"8Q16^B24
void enumerateTrailingHonorificMatchesInString(NSString *__strong, BOOL (^__strong)(NSRange))_block_invoke
Could not initialize the raw regexp
TrailingHonorific
v28@?0Q8Q16B24
failed to get patterns for LeadingHonorificPeriodOptional
LeadingHonorificPeriodOptional
failed to get patterns for LeadingHonorificPeriodRequired
LeadingHonorificPeriodRequired
SpanishNameLocaleIndicators
TwoCharSpanishNameEndings
SpanishNameBigramIndicators
SpanishNameUnigramIndicators
SpanishNameCharacterIndicators
SpanishNameClassifierConfidenceThreshold
NSCharacterSet *charSetWithEndpoints(int, ...)
start < end
n_args && (n_args % 2) == 0
CommonVietnameseSurnameList
duration
scrolled_to_end
mailbox_type
app_launch
app_resume
message_view_start
message_view_end
message_fetched
message_moved
reply_sent
reply_draft_started
forward_draft_started
flag_changed
read_changed
link_clicked
<%@>
SELECT e.id,e.entityKey,e.entityType,ep.extractionType,ep.sourceKey,e.author,e.title,e.creationTimestamp,e.updateTimestamp,e.indexTimestamp,e.tags,e.structuredData,e.quality,e.masterEntityId,e.groupId,e.state,ep.parentKey,e.timeRangeStart,e.timeRangeEnd,e.floatingRange,e.timeRangeStartUTCOffsetSeconds,e.timeRangeEndUTCOffsetSeconds,e.locations 
SELECT e.id,e.entityKey,e.entityType,ep.extractionType,ep.sourceKey,e.author,e.title,e.creationTimestamp,e.updateTimestamp,e.indexTimestamp,e.tags,e.structuredData,e.quality,e.masterEntityId,e.groupId,e.state,ep.parentKey,e.timeRangeStart,e.timeRangeEnd,e.floatingRange,e.timeRangeStartUTCOffsetSeconds,e.timeRangeEndUTCOffsetSeconds,e.locations,ep.modelVersion,ep.modelConfidence, e.harvestedOnBuild 
:groupId
ELSE -1 END) WHERE groupId = :groupId
WHEN %lld THEN %lld
UPDATE entity SET masterEntityId = (CASE id
WHERE e.groupId = :groupId
:minId
:tableNames
INSERT INTO sqlite_sequence(name, seq) SELECT value, :minId FROM _pas_nsarray(:tableNames)
DELETE FROM emailSnippets
DELETE FROM snippets
DELETE FROM confirmedFieldValues
DELETE FROM urls
DELETE FROM identityInterdict
DELETE FROM cnContactsToSgContacts
DELETE FROM serializedContacts
DELETE FROM emailTags
DELETE FROM emailMetadata
DELETE FROM entityReferences
DELETE FROM entityTags
DELETE FROM entityParentage
DELETE FROM entity_fts
DELETE FROM entity
urlsCounters
SELECT COUNT(bundle_id), bundle_id FROM urls GROUP BY bundle_id
urls
SELECT key, value FROM statsCounters
keyString
SGSqlEntityStore+SqlHelpers.m
SELECT COUNT(*) FROM entity WHERE id NOT IN (SELECT DISTINCT childId FROM entityParentage)
orphaned_entity_count
entityParentage
SELECT COUNT(*) FROM harvestQueueTombstones
tombstones_count
snippets_content_count
SELECT (SELECT COUNT(*) FROM snippets WHERE content IS NOT NULL AND content != '') + (SELECT COUNT(*) FROM emailSnippets WHERE content IS NOT NULL AND content != '')
snippets_title_count
SELECT (SELECT COUNT(*) FROM snippets WHERE title IS NOT NULL AND title != '') + (SELECT COUNT(*) FROM emailSnippets WHERE title IS NOT NULL AND title != '')
SELECT (SELECT COUNT(*) FROM snippets) + (SELECT COUNT(*) FROM emailSnippets)
snippets_count
emailSnippets
snippets
entity_fts_lang
SELECT count(*) FROM entity_fts WHERE docid != entityId
entity_fts_details
SELECT count(*) FROM entity_fts
entity_fts_count
entity_fts
SELECT count(*), MIN(entityId), MAX(entityId) FROM serializedContacts
serialized_contacts_total
serialized_contacts_limit
serialized_contacts_highest
serialized_contacts_lowest
SELECT COUNT(*) FROM (SELECT id FROM entity WHERE masterEntityId > 0 AND entityType = :entityType)
merged_pseudocontacts
total_entities
SELECT entityType, COUNT(*) FROM entity GROUP BY entityType UNION SELECT type, COUNT(*) FROM emailMetadata GROUP BY type
entities
schema_version
%@ FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId %@ 
SELECT COUNT(*) FROM emailMetadata
SELECT COUNT(*) FROM entity
WHERE entityType = :entityType
SELECT title, content, contentRangeOfInterest FROM snippets WHERE entityId=?
%@[%c]
rentalCompany
brand
http://schema.org/Brand
http://schema.org/RentalCar
Car Rental
  * merge group has masterEntityId %lld, but the row with entity.id == %lld has masterEntityId == %lld
  * merge group has masterEntityId %lld, but there is no row with id == %lld
:mergeId
SELECT masterEntityId FROM entity WHERE id = :mergeId
  * merge group with masterEntityId %lld has unexpected minimal element %lld
Failed to find merge group minimal element
SGSqlEntityStore+DatabaseCheck.m
SELECT MIN(id) FROM entity WHERE masterEntityId = :masterEntityId AND entityType = :pseudo
SELECT DISTINCT masterEntityId FROM entity WHERE masterEntityId >= 0 AND masterEntityId != id AND entityType = :pseudo
Failed to check for entityId broken reference in %@
[%@]
SELECT entityId, * FROM %@ WHERE entityId NOT IN (SELECT id FROM entity)
Broken entityId reference check: %@
Error: failed to run integrity_check on snippets.db: %@
Integrity check of snippets.db
Error: failed to run integrity_check on entities.db: %@
Integrity check of entities.db
[1m%@
**** Integrity check
databasecheck_
***** Database Check: %@
***** Overall Status: %@
failure
entityTypes.
merged_pseudocontact_percent
dbstats
v16@?0@"NSObject<OS_xpc_object>"8
Tried to register cache computation task on an in-memory store
SGSqlEntityStore+Maintenance.m
airportCodeWithCoordinates
geocoded
addressWithLabel
coordinates
addressWithCoordinatesWithLabel
bucketSize must be > 0
SGRTCLogging+Helpers.m
HTMLPreprocessor.js
v24@?0@8@"NSError"16
WKWebView
/System/Library/Frameworks/WebKit.framework/WebKit
WKWebpagePreferences
WKWebsiteDataStore
WKWebViewConfiguration
<SGStorageLocation@%0.2f/%0.2f label: '%@' address: '%@' airportCode: '%@'
isfinite(quality)
isfinite(accuracy)
!isnan(latitude) || label || address
isnan(longitude) || (-180 <= longitude && longitude <= 180)
isnan(latitude) || (-90 <= latitude && latitude <= 90)
isnan(latitude) == isnan(longitude)
SGStorageLocation.m
Unsupported type: %@
Dunno how to handle a pseudo contact with a parent entity type: %@
Pseudo contacts must be derived from at least one parent entity
Extracted data must have a parent.
SGOrigin+Internal.m
Unknown entity type %u
int64_t makeInternalEntityId(SGTableId, int64_t)
rowId out of range
SGRecordId+Internal.m
<%@ %@>
objcProperty != nil
SGDCloudKitSync.m
set%c%s:
snprintfResult >= 0
property
[notification isKindOfClass:[CKDatabaseNotification class]]
successful
0-length
v24@?0@"CKAccountInfo"8@"NSError"16
UnknownSaltError
_deleteAllSyncedItemsCallback == nil
B16@?0@"SGPipelineEntity"8
_callback == nil
com.apple.suggestions.sgckDeleteGroupId
@"NSArray"16@?0@"NSData"8
com.apple.suggestions.sgckAddEntity
@"NSArray"24@?0@"NSData"8@"CKRecordID"16
v40@?0@"NSString"8@16@"NSObject"24@"NSObject"32
v24@?0@"NSString"8@"NSError"16
com.apple.icloud-container.
com.apple.aps.suggestd
v24@?0@"NSNumber"8@"NSError"16
_callback
_database == nil
v24@?0@"CKSubscription"8@"NSError"16
com_apple_suggestions_ck_event
v16@?0@"SGFuture"8
SGDCloudKitSync.processStateChanges
ENABLED
DISABLED
com.apple.CoreSuggestions.PseudoEvents
com.apple.suggestd.aps
v16@?0@"_SGDCloudKitSyncPersistedState"8
WriteRecord operation attempt completion [retries: %lu]
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
muscularEndOperation
strongEndOperation
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
[recordZoneID isEqual:[self recordZoneId]]
v16@?0@"CKRecord"8
ProcureSalt operation attempt completion [retries: %lu]
non-nil
salt
salt-manatee
salt_atomic_reference
salt_
CreateZone operation attempt completion [retries: %lu]
DeleteZone operation attempt completion [retries: %lu]
aps-environment
SGCKAPSEnvironmentDomain
SGDCloudKitSync_sharedInstanceConfigurationQueue
SGDCloudKitSync-callbacks
<SGReminderDueLocation type:'%@' trigger: %@ name: %@>
SGChatLengthEstimator.m
chatLengthEstimator.cmsketch
partySize
endTime
Restaurant
%@: %@
[%@]
v32@?0@"NSNumber"8Q16^B24
@16@?0@"NSNumber"8
SubjectLength
SubjectWordCount
SenderIsVIP
AttachmentHistogramApplication
AttachmentHistogramMedia
AttachmentHistogramOthers
EmailAgeInDays
SenderConnectionScore
PersonFromSenderProbability
SubjectContentProbability
PersonToRecipientsProbability
PersonCCRecipientsProbability
DomainFromSenderProbability
PersonFromSenderInDyadicConversationProbability
PrivateSubject
PrivateTokenizedSubject
PrivateSenderFrom
PrivateSenderFromInDyadicConversation
PrivateSortedToRecipients
PrivateToRecipientsPairs
PrivateSortedCCRecipients
PrivateCCRecipientsPairs
SenderFullEmailDomain
ScrolledToEnd
UserReplied
NumberOfMailsViewedBeforeSinceAvailable
TimeBeforeViewStartSinceAvailable
MessageViewCount
MessageViewMaxDwellTime
MessageViewTotalDwellTime
NumberOfUnreadMessageAtFirstViewTime
NumberOfMoreRecentUnreadMessageAtFirstViewTime
MarkedAsRead
MarkedAsUnread
MailGotFlagged
ReplyDraftStarted
ForwardDraftStarted
MarkedAsJunk
LinkClicked
Only all-day events should be floating. Other events should have a timezone set before being synced up.
parentEntityType == SGEntityTypeWebPage || parentEntityType == SGEntityTypeInteraction
[self.duplicateKey.entityKey isKindOfClass:[SGPseudoEventKey class]]
SGPipelineEntity+CloudKitRecord.m
@"SGStorageLocation"16@?0@"SGDCKLocation"8
SGContactSharingModel - Provided probabilities (count %ld) do not match valid SGContactSharingLabels (count %ld).
SGContactSharingModel.m
PQT_ContactSharing_TrainingTransformers.plist
[^\x00-\x{10ffff}]
(?:)
Bad final char: 
{%d,}
{%d}
{%d,%d}
(?-m:^)
(?-m:$)
(?HaveMatch:%d)
[]^-\
\x%02x
\x{%x}
(){}[]*+?|.^$\
 [truncated]
<SGDetection/%@ '%@'>
Q8@?0
@16@?0Q8
:ABPerson
%tu out of range (count %tu)
<SGLabeledValue: %@: %@>
SGLabeledValue.m
(nil)
kind IN %@ AND address IN %@
@"NSString"16@?0@"SGPhoneNumber"8
@"NSString"16@?0@"SGEmailAddress"8
bi_lstm_0_c_out_rev
bi_lstm_0_h_out_rev
bi_lstm_0_c_out
bi_lstm_0_h_out
addSingleton
componentAnalysis.mm
elementToRepresentative.find(x) == elementToRepresentative.end()
union_
rep1Iter != elementToRepresentative.end()
rep2Iter != elementToRepresentative.end()
set1Iter != representativeToSet.end() && set2Iter != representativeToSet.end()
MAC_DISTANCE
TARGET_STRING
-[SGTokenDistanceMappingTransformer transform:]
SGTokenDistanceMappingTransformer.m
------
assertion_context
SuggestionsMLDebugContextDataKey
+[SGTokenDistanceMappingTransformer transformArray:withTargetIndex:maximumDistance:]
index < input.count
%@__%d
<SGJournalEntry op:%lu entity:%@
SGJournalEntry.m
reminder
eventBatch
lang
SGQuickResponsesEngagementDeltas
nonnull NSMutableArray<%@*> *%@ was null when decoded
engagementDeltas
treatmentId
experimentId
factorPackId
rolloutId
SGDPDeviceMetricsCollector.m
@"NSError"8@?0
com.apple.proactive.messages.ZKWIgnored
com.apple.proactive.messages.ZKWSelected
com.apple.dpwatchmetricscollection.idsSend
com.apple.private.alloy.suggestions.smartreplies
compatVer
responses
SGDPDeviceMetricsCollectorErrorDomain
{_PASDBIterAction_=B}24@?0@"SGQuickResponsesEngagementDeltas"8^@16
@"SGRealtimeReminder"16@?0@"SGRealtimeReminder"8
after banner callback
@"SGRealtimeSuggestionsTuple"16@?0@"SGRealtimeSuggestionsTuple"8
B16@?0@"SGRealtimeEvent"8
B16@?0@"SGRealtimeContact"8
@"SGRealtimeSuggestionsTuple"8@?0
_suggestionsFromMessage-plugins
v16@?0@"SGDHarvestQueueItem"8
suggestionsFromEmailContent
Passing 0 for options would return nothing
SGDSuggestManager+RealtimeDonations.m
@"SGTextMessage"8@?0
suggestionsFromMessage message harvest queue
v16@?0@"SGRealtimeSuggestionsTuple"8
v24@?0@"SGRealtimeSuggestionsTuple"8@"NSError"16
kSuggestionsFromEmailContentCacheSalt
MAPPINGS
MAPPING_LANGUAGE
MAPPING_TYPE
-[SGStringMappingTransformer transform:]
SGStringMappingTransformer.m
[input isKindOfClass:[NSArray class]]
arrivalBoatTerminal
departureBoatTerminal
http://schema.org/BoatTerminal
http://schema.org/BoatTrip
http://schema.org/BoatReservation
Boat Trip
expected column to be NOT NULL
SGSqlEntityStore+ContactDetails.m
SELECT value, label, type, duplicateKey, sourceKey, extractionInfoId FROM contactDetails WHERE entityId = :entityId OR entityId IN (SELECT e.id FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.masterEntityId = :entityId)
SELECT content FROM snippets WHERE entityId = :entityId
SELECT entityId FROM contactDetails WHERE duplicateKey = :duplicateKey
SELECT id FROM contactDetails WHERE duplicateKey = :duplicateKey
INSERT INTO contactDetails (entityId, duplicateKey, sourceKey, label, value, type, extractionInfoId) VALUES (:entityId, :duplicateKey, :sourceKey, :label, :value, :type, :extractionInfoId)
:label
:value
:extractionInfoId
Failed to construct DDScanner: %@
DDScannerCreationError
NSTextCheckingTypeLink
NSTextCheckingTypePhoneNumber
NSTextCheckingTypeAddress
NSTextCheckingTypeTransitInformation
NSTextCheckingTypeDate
SGDDMatchDate
SGDDMatchFlight
SGDDMatchLink
SGDDMatchLookupHint
SGDDMatchDelivery
SGDDMatchTimeOffset
SGDDMatchOther
B16@?0^{__DDResult={__CFRuntimeBase=QAQ}{__DDQueryRange={__DDQueryOffset=b32b32}{__DDQueryOffset=b32b32}}{?=qq}q^{__CFArray}^{__CFString}^{__CFString}^v^{__CFDictionary}qCf}8
@"SGRecordId"16@?0@"_PASTuple2"8
writeIdentityBlobs
UPDATE entity SET masterEntityId = :masterEntityId WHERE id IN _pas_nsarray(:ids) AND entityType IN (:pseudoContact, :unrecognizedContact)
:unrecognizedContact
masterEntityRecord
SGSqlEntityStore+Writing.m
SELECT MIN(id) FROM entity WHERE id IN _pas_nsarray(:ids)
@16@?0@"SGRecordId"8
recordId from wrong table
SELECT 1 FROM _pas_nsindexset(:ids) i LEFT JOIN entity e on i.value = e.id AND e.entityType = :contact WHERE e.id IS NULL
:unrecognized
SELECT id, masterEntityId FROM entity WHERE masterEntityId > 0 AND entityType IN (:pseudo, :unrecognized) ORDER BY masterEntityId ASC
v16@?0q8
INSERT OR REPLACE INTO entity_fts(docid, entityId, messagingTerms, ftsTerms) VALUES(?, ?, ?, ?)
@"SGJournalEntry"16@?0@"SGEntity"8
loggingIdentifier
modelConfidence
modelVersion
extractionType
duplicateKeyHashBlob
duplicateKeyHash
childId
parentKey
:duplicateKeyHash
INSERT INTO entityTags (tag, entityKey, entityType, parentKey, duplicateKeyHash, duplicateKeyHashBlob) VALUES (:tag, :entityKey, :entityType, :parentKey, '-', :duplicateKeyHash)
 is NULL
 = :parentKey
DELETE FROM entityTags WHERE entityKey = :entityKey AND entityType = :entityType AND parentKey 
harvestedOnBuild
pendingGeocode
contentHashBlob
groupId
lastSeenTimestamp
indexTimestamp
updateTimestamp
author
:contentHash
 UNION SELECT e.id, e.masterEntityId, e.creationTimestamp, e.updateTimestamp FROM entity AS e WHERE e.contentHashBlob = :contentHash
SELECT e.id, e.masterEntityId, e.creationTimestamp, e.updateTimestamp FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE (ep.duplicateKeyHashBlob = :duplicateKeyHash AND ep.extractionType = :extractionType)
Writing message entity via legacy code path
enrichment.duplicateKey
Writing enrichment via legacy code path
entity.duplicateKey
:type
INSERT INTO emailTags (key, type, tag) VALUES (:key, :type, :tag)
DELETE FROM emailTags WHERE unlikely(key = :key)
pendingVerification
downloadState
SELECT id, creationTimestamp, updateTimestamp, downloadState FROM emailMetadata WHERE key = :key AND type = :type
id = %lld
SELECT curatedDupe FROM entity WHERE id = :id
curatedDupe
UPDATE emailMetadata SET pendingVerification = :pendingVerification WHERE sourceKey = :souceKey
:pendingVerification
:souceKey
SELECT pendingGeocode FROM entity WHERE id = :id
floatingRange
timeRangeEndUTCOffsetSeconds
timeRangeStartUTCOffsetSeconds
timeRangeEnd
timeRangeStart
:range
INSERT OR REPLACE INTO snippets (entityId, content, contentRangeOfInterest, title) VALUES (:entityId, :content, :range, :title)
_writeEntityToSnippetsDb received message entity type
INSERT OR REPLACE INTO emailSnippets (emailId, content, title) VALUES (:emailId, :content, :title)
_writeMessageEntityToSnippetsDb received entity type %@
SELECT e.downloadState FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE ep.duplicateKeyHashBlob = :duplicateKeyHash AND ep.extractionType = :extractionType
contactDetails
contactEntity
%@    
 FROM %@
SELECT 
Dump table "%@":
SELECT e.entityKey, e.entityType    FROM entity e JOIN entityParentage ep ON e.id = ep.childId    WHERE ep.parentKey = :parentKey AND e.id not in _pas_nsset(:ids)
v16@?0@"SGPipelineEnrichment"8
:emailType
:offset
SELECT key FROM emailMetadata WHERE key IN _pas_nsarray(:keys) AND type = :emailType ORDER BY updateTimestamp DESC LIMIT -1 OFFSET :offset
SELECT parentKey FROM entityParentage WHERE childId = :childId
:childId
Don't know how to prune container entities of type %@
@16@?0@8
Contact lacks a recordId prior to identity store update
Don't know how to write out a container entity of type %@
writeEntity
containerEntity.duplicateKey
Do not call writeInteractionEventEntities with non-interaction entity type.
writeInteractionEventEntities
[:alnum:]
[:^alnum:]
[:alpha:]
[:^alpha:]
[:ascii:]
[:^ascii:]
[:blank:]
[:^blank:]
[:cntrl:]
[:^cntrl:]
[:digit:]
[:^digit:]
[:graph:]
[:^graph:]
[:lower:]
[:^lower:]
[:print:]
[:^print:]
[:punct:]
[:^punct:]
[:space:]
[:^space:]
[:upper:]
[:^upper:]
[:word:]
[:^word:]
[:xdigit:]
[:^xdigit:]
arrivalStation
departureStation
http://schema.org/TrainStation
trainNumber
trainName
http://schema.org/TrainTrip
http://schema.org/TrainReservation
Train
trainCompany
<%s %lu-%lu>
email
address
phone
date
quote
B16@?0S8B12
InhumanSig
-[SGSignatureDissector shouldIgnoreSignature:signatureRange:isInhuman:]_block_invoke
SGSignatureDissector.m
sub != nil
viterbi
obs <= NUM_TOKEN_TYPES
void deserializeHmm(NSData *__strong)
Wrong data length: %li
hmm.dat
void tokenize(NSString *__strong, TokenizationState *, NSRange, NSString *__strong)
v24@?0{?=qq}8
void tokenize(NSString *__strong, TokenizationState *, NSRange, NSString *__strong)_block_invoke_2
Could not load HMM keyword trie
No HMM token file contained in CoreSuggestions MobileAsset version %lu
HmmSigTokens.dat
Encountered nil Asset while attempting to load HMM tokens.
tokenize range (%lu, %lu) beyond text length %lu
B24@?0Q8^B16
SymbolicSig
RejetedSig/F
ValedictionSig/F
RelaxedSig/F
timestampSinceReference
UPDATE events SET whenRange = "MalformedData"
SELECT lastSeenTimestamp FROM emailMetadata WHERE key = :emailKey
:emailKey
calevent
unkphone
text-message
social-profile
{dropoff}
[SGPseudoEventKey groupId:%@
globalId
SGPseudoEventKey.m
INSERT INTO serializedContactCacheJobs (id) VALUES (?)
updateSerializedContacts
updateSerializedContacts-onequery
DELETE FROM serializedContactCacheJobs WHERE id=?
SELECT id FROM serializedContactCacheJobs LIMIT 1
DELETE FROM serializedContacts ORDER BY id DESC LIMIT -1 OFFSET ?
SELECT entityId, data FROM serializedContacts ORDER BY entityId DESC
SELECT entityId FROM serializedContacts
loadSerializedContactForId
SELECT data FROM serializedContacts WHERE entityId = ?
DELETE FROM serializedContacts WHERE entityId IN _pas_nsarray(:ids)
Unexpected table for recordId: %@
SGSqlEntityStore+SerializedContacts.m
DELETE FROM serializedContacts WHERE entityId = ?
SGZipUnarchive
SGUnarchiver.m
readArchive && destinationURL
trigger
EXTRACTION__REMINDER_TITLE_ACTION_VERB
EXTRACTION__REMINDER_TITLE_ACTION_OBJECT_CORE
POLARITY__REMINDER_STATEMENT
POLARITY__COMMITMENT
POLARITY__REJECTION
POLARITY__DONE
DUE_LOCATION_TRIGGER__
ARRIVE
LEAVE
MY_HOME
MY_WORK
MY_SCHOOL
OTHER
DUE_TIME_TRIGGER__DATETIME
DUE_LOCATION_TRIGGER__LEAVE
DUE_LOCATION_TRIGGER__ARRIVE
DUE_LOCATION_TRIGGER__MY_HOME
DUE_LOCATION_TRIGGER__MY_WORK
DUE_LOCATION_TRIGGER__MY_SCHOOL
DUE_LOCATION_TRIGGER__OTHER
R_action
I_NN
I_NNP
I_Noun
I_NNS
I_NNPS
I_PRP
I_VB
I_VBP
I_VBN
I_VBG
I_Verb
I_RP
confirmation
triggerOptional
excludeList
confirmationOptional
titlePrefix
%@%@%@%@
@"NSString"16@?0@"SGTaggedCharacterRange"8
hasObjectCore
hasActionVerb
hasCorrectNumberOfActionVerbs
hasTrigger
hasTitle
hasPolarity:
L_de
CorporateFooter
B24@?0{_NSRange=QQ}8
SXReply
SGMailQuoteDissector
BodyHeaders/F
OriginalMessage/F
v16@?0@"SGReminderTrialClientWrapperGuardedData"8
reminderOutputMapping
reminderInputMapping
reminderPreprocessor
reminderOverrides
messagesBannerLimit
actionVerbOptional
ReminderModel.mlmodelc
PRODUCTIVITY_INTELLIGENCE_REMINDERS
@"NSString"16@?0@"CNLabeledValue"8
@"CNMutablePostalAddress"16@?0@"CNPostalAddress"8
#NOCITY#
#NOSTREET#
%@. %@
%@%%%@
%@%%%@%%
 OR 
"%@"
SG_FEATURE_BELONGING
SG_FEATURE_BELONGINGTO
SG_FEATURE_PHONETYPE
SG_FEATURE_CALLTYPE
SG_FEATURE_EMAILTYPE
SG_FEATURE_OTHER
SG_FEATURE_ADDRESSTYPE
SG_FEATURE_ENTITYTYPE
SG_FEATURE_RECENCY
SignificantEmailAddress
_createITSListForFTSQuery
"%@*"
ITSTokenListCopyEscapedTokenAtIndex failed to get token at index %ld
SGTokenizer.m
v40@?0@"NSString"8^B16{_NSRange=QQ}24
SGTokenizer
block
identifiers.count != 0
SGSqlEntityStore+Loading.m
@16@?0@"SGEntity"8
Invalid duplicate key: %@
SELECT id FROM reminders LIMIT ?
:startDate
:endDate
SELECT e.entityKey AS 'Entity Key', COUNT(*) AS `Entity Count` FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityType = :entityType AND e.creationTimestamp >= :startDate AND e.creationTimestamp <= :endDate GROUP BY e.entityKey ORDER BY e.creationTimeStamp ASC
Contact details require a parent
:detPhone
:detAddr
:detEmailAddr
:detSocialProfile
:curPhone
:curAddr
:curEmailAddr
:detBirthday
:curBirthday
:curPhotoPath
 AND e.entityType IN (:detPhone, :detAddr, :detEmailAddr, :detSocialProfile, :curPhone, :curAddr, :curEmailAddr, :detBirthday, :curBirthday, :curPhotoPath)
where
WHERE masterEntityId = :masterEntityId
RecordId with unexpected table: %@
:entityTypeDetected
:entityTypeCurated
%@ AND e.entityType IN (:entityTypeDetected, :entityTypeCurated)
SELECT e.id FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityKey = :entityKey AND e.entityType = :entityType AND ep.parentKey IS :parentKey
WHERE e.entityKey = :entityKey AND e.entityType = :entityType AND ep.parentKey
No record found with id: %@
SGSqlEntityStoreErrorDomain
Could not load contact (recordId=%@)
:contact
SELECT CASE WHEN masterEntityId > 0 THEN masterEntityId ELSE id END FROM entity WHERE id IN (SELECT CASE WHEN entityType = :contact THEN id ELSE groupId END FROM entity WHERE id=:id)
WHERE ep.sourceKey = :sourceKey AND e.entityType = :entityType
WHERE e.entityKey = :entityKey AND e.entityType = :entityType
SELECT title, content FROM emailSnippets WHERE emailId = :emailId
:emailId
_loadMessageByKey matched multiple rows
key = :key
WHERE e.entityType = :entityType %@ LIMIT :limit
AND ep.modelVersion != 0
WHERE e.id = :rowId
No support for loading entities from non-legacy recordIds (%lu)
SELECT ep.sourceKey FROM entity AS e JOIN entityParentage AS ep ON ep.childId = e.id WHERE e.id = :rowId
SELECT e.entityKey, e.entityType, ep.parentKey FROM entity AS e JOIN entityParentage AS ep ON ep.childId = e.id WHERE e.id = :rowId
HKHealthStore
/System/Library/Frameworks/HealthKit.framework/HealthKit
{SGRe2IterAction_=B}16@?0^{?={_NSRange=QQ}*}8
DetailType
DetailTypes
NSString *textToMatch(long, long, NSString *__strong, SGDataDetectorMatchType)
%@%@%@
%DATE%
%ADDRESS%
%WRONG_MATCH_TYPE
type == SGDDMatchPhone || type == SGDDMatchPostalAddress || type == SGDDMatchEmailAddress || type == SGDDMatchDate
SGDetectedAttributeDissector.m
v20@?0@"SGEntity"8B16
0123456789+-()
Birthday/F
subtype
SGM2BirthdayWrongDay
SGM2BirthdayPreviousWeek
SGM2BirthdayNextWeek
SGM2BirthdayPreviousDay
SGM2BirthdayNextDay
SGM2BirthdaySameDay
birthdayDate
targetPerson
LogLine
NotMyAddress/F
NotMyPhone/F
MyAddress/F
BirthdayDate/F
MyPhone/F
UnlikelyPhoneSampling
FilterWithAddressBook
SelfIdentMsgCount
SG_TARGET_NAME
SelfIdentification
<SGInteractionKey bundleId:%@ personHandle:%@>
SGInteractionKey.m
SUB_MODEL_KEY_STRING
com.apple.suggestd.portrait.internal
@"<SGPortraitRequestProtocol>"8@?0
From
Date
Subject
Separator
QuotedRegionStart
Headers
Header
ReplyAttribution/F
SignificantPhoneNumber
SG_TARGET_PHONE
Add after Compile.
Unexpected op in KeepPart: 
/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1148.1/re2/re2/re2_prefilter.h
Check failed: op_ == AND || op_ == OR
harvestTime
plugins
dissectors
verificationOp
geocodeOp
storageOp
messageInHumanBody
messageSubjectDetectedData
messageDetectedData
messageHtmlParser
messageQuotedRegions
<%@ %@ duration: %.6f cpu: %.6f enrichment: %@>
com.apple
Dissector
B16@?0@"SGHarvestQueueMetricsTimer"8
v24@?0@"PPExtractionSet"8@"NSError"16
v24@?0@"NSDictionary"8@"NSError"16
eventsFoundOnDeviceEnabled
contactsFoundOnDeviceEnabled
corruption_marker
corruption
database
integrity_check
impressions.suggestion.banner.hypotheticalContactIncludingInsignificant
impressions.suggestion.banner.contact
impressions.suggestion.banner.event
impressions.suggestion.banner.hypotheticalIncludingActedOn
impressions.suggestion.banner.suppressed
impressions.suggestion.banner
identityGroupSize
record
harvest
messageTimeSpentInQueue
mailsDrained
harvestDrainedSomethingFromQueue
mailsDrainedPerHarvest
behavior.distribution.%@.%@.contacts
behavior.scalar
contacts.%@s
banner
suggest
behavior.distribution.%@.%@.events
events.%@s
messagesApp
mailApp
eventNearDuplicate
eventDuplicate
eventCancellation
eventUpdate
calendarApp
behavior
contactUpdate
contacts
postalAddress
%@.postalAddresses.%@
%@.emailAddresses.%@
%@.phones.%@
%@.postalAddresses
%@.emailAddresses
%@.phones
postalAddresses.phrase
postalAddresses.sig
postalAddresses
emailAddresses.phrase
emailAddresses.sig
emailAddresses
phones.phrase
phones.sig
%@.%@.%@.richness
%@.scalar
%@.distribution
messages.foundAfterUndisplayablyLost
messages.undisplayablyLost
messages.deleted
messages.found
messages.pruned
messages.lost
messages.added
<SGTaggedCharacterRange annotationType:%@ tags:%@ text:%@>
text
nonnull NSArray<%@*> *%@ was null when decoded
SGTaggedCharacterRange.m
annotationType
tags contains space
section_%@_single
section_%@_begin
section_%@_intermediate
Error in TaggedCharacterRange tags, only one can be of type SGTaggedCharacterRangeAnnotationTypeNLTaggerLemma
L_%@
SELF beginswith 'L'
@"NSSet"16@?0@"NSSet"8
The baseTaggedCharacterRangeArray isn't sorted.
@"SGTaggedCharacterRange"16@?0@"SGTaggedCharacterRange"8
AnnotationTypeNER
AnnotationTypeCSS
AnnotationTypeHTML
AnnotationTypeModelOutput
AnnotationTypePadding
AnnotationTypeHuman
AnnotationTypeReminder
AnnotationTypeMisc
AnnotationTypeMetadata
AnnotationTypeCrossAnnotation
AnnotationTypeNLTaggerLemma
AnnotationTypeNLTaggerLexicalClass
AnnotationTypeDataDetectors
AnnotationTypeUnknown
%@_%@_%@
%@_%@_%@_%@
TrialModels
com.apple.suggestd.%@.serialQueue
extractionInfo
SGContactDetail.m
SGContactDetailType SGIdentityKeyTypeToContactDetailType(SGIdentityKeyType)
Cannot construct SGContactDetail from entity of type %lld
SGContactDetailType SGEntityTypeToContactDetailType(SGEntityType)
This should never happen. The param assert should hit if this is the case.
SGEntityTypeIsContactDetail(entityType)
Unhandled identity key type %u
NSString * _Nonnull SGContactDetailTypeDescription(SGContactDetailType)
SGContactDetailAddress
SGContactDetailPhone
SGContactEmailAddress
SGContactDetailInstantMessageAddress
SGContactDetailSocialProfile
SGContactDetailBirthday
SGContactDetailPhoto
Unknown contact detail type: %lu
NullCNContactIDPlaceholder:Null
com.apple.suggestions.suggestd.cntosgcontacts
duplicate
refreshSuggestionsContact
@"NSMutableSet"8@?0
v24@?0@"NSArray"8@"NSError"16
@"NSString"16@?0@"SGStorageContact"8
INSERT OR REPLACE INTO metadata (key, value) VALUES ('hasFullCNtoSGSync', 2)
SELECT value FROM metadata WHERE key = 'hasFullCNtoSGSync' LIMIT 1
!exceptionSwallowed
SGSqlEntityStore+CNtoSGContacts.m
@16@?0@"SGContact"8
updateCNContactMatches-onequery
updateCNContactMatches
INSERT INTO cnContactsToSgContactsCacheJobs (batch) VALUES (?)
cnContactsToSgContactsCacheJobs
DELETE FROM cnContactsToSgContactsCacheJobs WHERE id=?
SELECT id, batch FROM cnContactsToSgContactsCacheJobs LIMIT 1
SELECT cnContactIdentifier FROM cnContactsToSgContacts WHERE entityId = ?
SELECT cnContactIdentifier, maxEntityId, entityId FROM cnContactsToSgContacts ORDER BY cnContactIdentifier, entityId
SELECT DISTINCT cnContactIdentifier FROM cnContactsToSgContacts
DELETE FROM cnContactsToSgContacts WHERE entityId IN _pas_nsarray(:ids)
DELETE FROM cnContactsToSgContacts WHERE cnContactIdentifier = ?
SELECT maxEntityId, entityId FROM cnContactsToSgContacts WHERE cnContactIdentifier = ?
loadCNContactMatchesForContact
INSERT OR REPLACE INTO cnContactsToSgContacts (cnContactIdentifier, maxEntityId, entityId) VALUES (?, ?, ?)
v24@?0@"NSObject"8@"NSError"16
%@ && (%@ || %@)
(%@ && %@)
(%@ || %@ || %@)
"*%@*"cd
%@. * %@
firstInitial
cdwt
false
(%@)
@"NSString"16@?0@"NSString"8
(%@ == %@)
kMDItemDisplayName
@"NSString"24@?0@"NSString"8@"NSArray"16
%@ %@ *
%@ * %@
B24@?0@"NSString"8^B16
@"NSString"24@?0@"NSString"8@"NSString"16
"%@"%@
custom-response-ckpt
@"NSArray"24@?0@"NSString"8@"NSString"16
@"SGMessagePairIterator"16@?0@"SGCustomResponsesParameters"8
quickResponsesEspressoClassifierMultiLabel
quickResponsesBinaryLogisticMultiLabel
NULL
SELECT %@ FROM %@
DELETE FROM contactDetails
UPDATE emailMetadata SET downloadState = :resolved WHERE key IN _pas_nsarray(:keys)
:resolved
@"NSString"16@?0@"SGEmailKey"8
:requested
SELECT key FROM emailMetadata WHERE unlikely(downloadState = :requested) ORDER BY creationTimestamp DESC
serializedKey
:interactionBundleIdTag
:tags
SELECT b.entityKey, b.entityType, b.parentKey FROM entityTags AS i CROSS JOIN entityTags AS b ON b.duplicateKeyHashBlob=i.duplicateKeyHashBlob WHERE b.tag=:interactionBundleIdTag AND i.tag IN _pas_nsarray(:tags)
tags.count != 0
@"SGEntityTag"16@?0@8
:tag
SELECT entityKey, entityType, parentKey FROM entityTags WHERE tag = :tag UNION ALL SELECT key, %lli, NULL FROM emailTags WHERE tag = :tag
Could not load reminder to reject (recordId=%@)
Could not load reminder to reject (SGDuplicateKey=%@)
Could not load reminder to confirm (recordId=%@)
Could not load event to reject (%@)
Could not load event to confirm (recordId=%@)
realtimeEvent.event.uniqueKey
SELECT c.fieldValues FROM confirmedFieldValues AS c INNER JOIN entity AS e ON c.entityId = e.id INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityKey = :entityKey AND e.entityType = :entityType AND ep.parentKey = :parentKey
DELETE FROM confirmedFieldValues WHERE entityId=?
SELECT fieldValues FROM confirmedFieldValues WHERE entityId=?
maybeChanged
Could not find duplicateKey
NotFound
 IS NULL
=:parentKey
SELECT e.id FROM entity AS e INNER JOIN entityParentage AS ep ON e.id=ep.childId WHERE e.entityKey=:entityKey AND e.entityType=:entityType AND ep.parentKey
:queryStart
:queryEnd
:fltQueryStart
:fltQueryEnd
:pseudoEventType
 ORDER BY e.timeRangeStart ASC LIMIT :limit
WHERE (e.floatingRange = 0 AND ((:queryStart == e.timeRangeStart) OR (NOT (:queryStart >= e.timeRangeEnd OR :queryEnd <= e.timeRangeStart))) OR e.floatingRange = 1 AND ((:fltQueryStart == e.timeRangeStart) OR (NOT (:fltQueryStart >= e.timeRangeEnd OR :fltQueryEnd <= e.timeRangeStart))))AND e.entityType = :pseudoEventType AND e.state != :deleted 
 AND id IN (SELECT entityId FROM confirmedFieldValues WHERE maybeChanged=1)
AND title LIKE :prefix ESCAPE '!'
:prefix
UPDATE confirmedFieldValues SET maybeChanged=0 WHERE entityId IN _pas_nsarray(:ids)
confirmedFieldValues
fieldValues
@"NSNumber"16@?0@"SGStorageEvent"8
SELECT entityId, fieldValues FROM confirmedFieldValues WHERE entityId IN _pas_nsarray(:ids)
@"SGStorageEvent"16@?0@"SGStorageEvent"8
@"NSArray"16@?0@"NSArray"8
@"SGStorageEvent"24@?0@"SGStorageEvent"8@"SGStorageEvent"16
:masterEntityId
SELECT id FROM entity WHERE entityType = :pseudo AND masterEntityId = :masterEntityId AND id != masterEntityId
@16@?0@"NSArray"8
contactDetailTag.isContactDetail
SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END  FROM entity WHERE id = :entityId
-[SGSqlEntityStore storageContactByRecordId:withSnippets:]_block_invoke
SGSqlEntityStore.m
masterEntityIds.count==1
Uninitialized identity key
:messagesMeCard
 AND ep.parentKey = :parentKey
SELECT CASE WHEN e.masterEntityId > 0 THEN e.masterEntityId WHEN e.groupId > 0 THEN e.groupId ELSE e.id END  FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityType = :entityType AND e.entityKey = :entityKey AND ep.extractionType != :messagesMeCard
SELECT CASE WHEN e.masterEntityId > 0 THEN e.masterEntityId WHEN e.groupId > 0 THEN e.groupId ELSE e.id END  FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityType = :entityType AND e.entityKey = :entityKey
@"SGContactMatch"16@?0@"NSArray"8
Invalid response from suggestContactMatchesByContactDetailTag
searchString
SELECT DISTINCT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END  FROM entity WHERE entity.entityType = :pseudo AND NOT hasInhumanTag(entity.tags) AND NOT entity.curatedDupe ORDER BY entity.id DESC LIMIT :limit 
end >= start
language
collator
error instantiating argumentsPattern: %@
\(\s*tokenize=ab_cf_tokenizer\s+language="([^\"]*?)"\s+collator="([^\"]*?)",
:tokenizerName
ab_cf_tokenizer
SELECT fts3_tokenizer(:tokenizerName)
@"SGContactMatch"16@?0@"NSNumber"8
:match
SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END , entity_fts.docid, entity_fts.entityId, matchinfo(entity_fts, "pcb")    FROM entity_fts CROSS JOIN entity ON entity_fts.entityId = entity.id    WHERE entity_fts MATCH :match        AND entity.entityType = :pseudo        AND NOT hasInhumanTag(entity.tags)        AND NOT entity.curatedDupe
@"NSString"16@?0@"NSValue"8
:tagPrefix
WITH matches AS (    SELECT entity.id as id, CASE WHEN entity.entityType = :pseudo OR entity.masterEntityId < 0 THEN entity.id ELSE entity.masterEntityId END as entityId        FROM entityTags CROSS JOIN entity ON entity.entityKey = entityTags.entityKey AND entity.entityType = entityTags.entityType        WHERE entityTags.tag GLOB :tagPrefix) SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END , matches.id, matches.entityId FROM matches CROSS JOIN entity ON matches.id = entity.id    WHERE entity.entityType = :pseudo        AND NOT hasInhumanTag(entity.tags)         AND NOT entity.curatedDupe
SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END , docid, entityId, matchinfo(entity_fts, "pcb") AS matchinfoData FROM entity_fts CROSS JOIN entity ON entity.id = entityId WHERE entity_fts.messagingTerms MATCH :match    AND entity.entityType = :pseudo   AND NOT hasInhumanTag(entity.tags)    AND NOT entity.curatedDupe
@"SGContactMatch"16@?0@"SGContact"8
@"SGContact"16@?0@"_PASTuple2"8
@"_PASTuple2"16@?0@"SGContact"8
B24@?0@8@"NSDictionary"16
v24@?0@"NSArray"8@?<B@?@"SGContact">16
:interactionTag
:pseudoContact
SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END  FROM entityTags AS t CROSS JOIN entity     ON entity.entityKey = t.entityKey AND entity.entityType = t.entityType WHERE t.tag = :interactionTag     AND t.entityType = :pseudoContact     AND NOT hasInhumanTag(entity.tags) AND tagsHaveEscapedTag(entity.tags, :isSentTag) = :isMe
v24@?0@"NSMutableSet"8@"NSArray"16
masterEntityId
:candidates
:patterns
SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END  AS masterEntityId FROM entity WHERE id IN _pas_nsset(:candidates)     AND EXISTS (         SELECT value AS pattern             FROM _pas_nsarray(:patterns)             WHERE title LIKE pattern     )
entity
SELECT entity.id FROM entity_fts CROSS JOIN entity     ON entityId = entity.id WHERE messagingTerms MATCH :match     AND NOT hasInhumanTag(entity.tags) AND tagsHaveEscapedTag(entity.tags, :isSentTag) = :isMe
:socialProfileSubContactIds
SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END  AS masterEntityId FROM entity WHERE id IN _pas_nsset(:socialProfileSubContactIds)     AND title = ""     AND NOT hasInhumanTag(entity.tags) AND tagsHaveEscapedTag(entity.tags, :isSentTag) = :isMe
SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END  AS masterEntityId FROM entity WHERE id IN _pas_nsset(:ids)     AND NOT hasInhumanTag(entity.tags) AND tagsHaveEscapedTag(entity.tags, :isSentTag) = :isMe
SELECT entity.masterEntityId, entity.id, entity.entityType, entity.entityKey FROM entityTags CROSS JOIN entity     ON entity.entityKey = entityTags.entityKey AND entity.entityType = entityTags.entityType WHERE entityTags.entityType = :detailType AND entityTags.entityType != :pseudoContactType     AND EXISTS (         SELECT value AS prefix         FROM _pas_nsarray(:detailTags)         WHERE entityTags.tag >= prefix AND entityTags.tag < firstStringAfterPrefix(prefix)     )
SELECT entity.masterEntityId, entity.id, entity.entityType, entity.entityKey FROM entityTags CROSS JOIN entity     ON entity.entityKey = entityTags.entityKey AND entity.entityType = entityTags.entityType WHERE entityTags.entityType IN (:pseudoContactType, :detailType)     AND entityTags.tag IN _pas_nsarray(:detailTags)
v32@?0@"NSString"8q16@"NSArray"24
entityType
entityKey
:pseudoContactType
:detailType
:detailTags
SELECT DISTINCT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END  FROM entity WHERE entity.entityType = :pseudo AND title LIKE :prefix ESCAPE '!' AND NOT hasInhumanTag(entity.tags) AND NOT entity.curatedDupe LIMIT :limit
:isSentTag
:isMe
v16@?0@"NSMutableDictionary"8
Should only get 1 merged contact since that's how we selected the profiles but got %d
@"SGStorageContact"16@?0@"SGStorageContact"8
Candidate already has more than 1 profile. Merging happening early?
WHERE (e.masterEntityId = :masterEntityId OR e.id = :masterEntityId) AND +e.entityType = :pseudo AND ep.extractionType != :messagesMeCard
SELECT state FROM emailMetadata WHERE key = :key
SELECT ep.parentKey FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityType = :entityType AND e.entityKey = :entityKey
SELECT ep.parentKey FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityType = :entityType AND e.entityKey = :entityKey ORDER BY e.creationTimestamp DESC
SELECT key FROM emailMetadata WHERE unlikely(pendingVerification = 1) ORDER BY creationTimestamp DESC
WHERE unlikely(pendingGeocode=1)
SGSqlEntityStore spotlight reindex
com.apple.suggestions.sqlentitystore.cacheprecomputationqueue
PRAGMA journal_mode=WAL
sqliteCode
snippetDb instance was unexpectedly non-nil
unable to initialize snippets DB
unable to initialize entity DB
-wal
-shm
%@.corrupted.%ld
PRAGMA synchronous=NORMAL
CREATE TABLE IF NOT EXISTS integrityCheck (inconsequential STRING)
@"SGDCloudKitSync"8@?0
snippets.db
entities.db
epoch
plain
schemas
accountHandles
accountServerIdentifier
webKitPlainText
webKitPlainTextDDResult
extractionMode
geocodingMode
canonical
address+poi
poiGeocodingFilters
ekEventAvailabilityState
itemReferenceName
itemReferenceIdentifier
ddResult
monochrome
jsEntity
v16@?0@"NSDictionary"8
candidateTaggedCharacterRanges
candidates
v16@?0@"NSString"8
v16@?0@"SGDOMParserResult"8
pastEvent
outputCategory
outputUsecase
jsOutputLogs
containsSchemaorg
deviceLocale
templateShortName
templateExceptionMessage
needsSourceVerification
emailDownloadRequested
v40@?0@"NSArray"8@"NSDictionary"16@"NSArray"24@"NSDictionary"32
v12@?0B8
www.
-[SGExtractionDissector entityForOutputItem:withSiblings:parentEntity:outputExceptions:outputInfos:interaction:]
SGExtractionDissector.m
categoryType
outputWithoutSchema
noTimezone
convertedToAllDay
minDurationForAllDayIfNoTz
B32@?0@8Q16^B24
v32@?0@8@16^B24
flightDataResolvedAirportCoordinates
flightDataResolvedAirportNameForLocation
dateParseIssue
%@... (length %lu)
[unavailable]
[redacted]
dateTime
notes
fallbackGroupId
emptyGroupId
flightHasSameOriginAndDestination
flightMissingTZForAirportCode
flightDataResolvedAirportTZ
flightDataResolvedAirportName
flightMissingData
flightDataResolvedAirportCode
[flightNumbers containsObject:@([transportationDict[@"routeDesignation"] integerValue])]
routeDesignation
@"NSArray"16@?0@"NSString"8
flightMissingCarrierCode
destination
flightDataResolvedCarrierName
flightDataResolvedCarrierCode
carrier
iata
cancelled
transportation
com.apple.reversetemplated
v32@?0@"SGSimpleMailHeaderKeyValue"8Q16^B24
in-reply-to
CountryCode
@"NSString"28@?0@"NSDictionary"8@"<NSObject>"16B24
segments
lastSGMIUpdaterProcessingDate
v16@?0@"SGMIFeatureVector"8
SGServiceContext.m
B16@?0^{__DDResult=}8
components
endIso8601
iso8601
ddType
FlightNumber
AirlineName
ZipCode
CompanyName
JobTitle
AddressBookContactName
ContactName
Contact
Could not create DDScanner for: %@
Could not create DDScanner
SGReverseTemplatesJSDataDetectors.m
extractions
No locale found for: %@
yyyy'-'MM'-'dd
yyyy'-'MM'-'dd'T'HH':'mm':'ss
yyyy'-'MM'-'dd'T'HH':'mm':'ssZZZZZ
[SGPseudoReminderKey groupId:%@
SGPseudoReminderKey.m
-[SGDCKLocation StringAsLocationType:]
SGDCKLocation.m
newVertex
mincut.m
g && g->vertices
newEdge
capacity > 0.0
addEdgeToIncidenceList
digraph g {
    V%u -> V%u [label="%0.2f"];
mincut
maxflow > 0
SGMIError
nil@nil.invalid
<unassigned_mailbox>
@"NSString"16@?0@"SGSimpleNamedEmailAddress"8
FeatureVector for messageId %@: (%ld features)
featureType == SGMIFeatureType_Number || featureType == SGMIFeatureType_NumberArray
SGMIFeatureVector.m
_PASTuple2<NSString *,NSString *> *SGCleavePhoneNumberAndExtension(NSString *__strong)
phoneNumber
SGDataNormalization.m
BOOL SGPhoneNumberMatchInSet(NSMutableDictionary<NSString *,NSString<SGNormalizedPhoneNumber> *> *__strong, NSString *__strong, NSArray<NSString<SGNormalizedPhoneNumber> *> *__strong)
needle
10177
10111
%@ %@ %@ %@ %@ %@
interactionTeamId
intentResponseUserActivityString
reservationContainerReference
reservationItemReferences
interactionBundleId
interactionGroupId
interactionId
SGAppLaunchHistory.m
toStatus
fromStatus
SGM2HarvestBudgetStatusUnknown
SGM2HarvestBudgetStatusPower
SGM2HarvestBudgetStatusBattery
SGM2HarvestBudgetStatusExhaustedNumberOfOperations
SGM2HarvestBudgetStatusExhaustedElapsedSeconds
SGM2HarvestBudgetStatusExhaustedDuet
The parent entity cannot be a contact
SGPipelineEnrichment.m
parent
identityKey
com.apple.mobilemail
contentType == "public.email-message"
_kMDItemExternalID == "%@"
com_apple_mail_conversationID
com_apple_mail_messageID
com_apple_mail_repliedTo
contentType == "public.email-message" && InRange(kMDItemContentCreationDate, $time.now(-%lu), $time.now(-%lu)) && kMDItemMailboxes != "mailbox.sent"
http://schema.org/ReservationHold
http://schema.org/ReservationPending
http://schema.org/ReservationCancelled
http://schema.org/ReservationConfirmed
underName
http://schema.org/Person
bookingTime
reservationNumber
userId
countOver2MB
count512KBTo2MB
count128KBTo512KB
count32KBTo128KB
count8KBTo32KB
countUpTo8KB
Application
Media
Others
SGMetricsHelper-asyncQueue
[SGDeliveryKey externalIdentifier: %@]
trackingNumber
SGDeliveryKey.m
surname
middlename
firstname
B16@?0@"NSString"8
SurnamePrefix
CompositeSpanishFirstname
CommonSpanishSurnamePrefix
Traditional-Simplified
MultiCharChineseSurname
SingleCharChineseSurname
Jpan
v16@?0@"_PASAsset2"8
-[SGIdentityName initWithJapaneseName:]_block_invoke_2
Could not load ja_surname trie
failed to get asset path for ja_surname.trie
SGIdentityName.m
ja_surname.trie
Could not load components separated by new line.
Could not load list of korean surnames from koreansurnames.txt
Could not generate file path from koreansurnames.txt
koreansurnames
DELETE FROM FILE WHERE id=?
UPDATE file SET refcount=refcount-1 WHERE id=?
SELECT refcount FROM file WHERE id=?
DELETE FROM item WHERE id=?
AND sourceKey=? AND messageId=?
AND id=?
AND customPriorityCriteria=? ORDER BY id ASC LIMIT 1
AND id < 0x4000000000000000 ORDER BY id ASC LIMIT 1
ORDER BY id ASC LIMIT 1
UPDATE item SET inProgress=1 WHERE id=?
SELECT id, fails, fileId, customPriorityCriteria, receivedOnPower, insertTime, storageReason, metadataOffset, metadataLen, metadataChecksum, htmlOffset, htmlLen, htmlChecksum, textOffset, textLen, textChecksum FROM item WHERE inProgress=0 
UPDATE item SET inProgress=0, fails=fails+1 WHERE id=?
UPDATE item SET inProgress=0 WHERE id=?
SELECT id FROM file WHERE refcount > 0 ORDER BY id LIMIT 500
UPDATE file SET refcount = refcount + 1 WHERE id=?
INSERT INTO item (id, sourceKey, messageId, inProgress, fails, fileId, metadataOffset, metadataLen, metadataChecksum, htmlOffset, htmlLen, htmlChecksum, textOffset, textLen, textChecksum, insertTime, customPriorityCriteria, receivedOnPower, storageReason) VALUES (?,?,?,0,0,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
INSERT INTO file (refcount) VALUES (0)
DELETE FROM file WHERE id=?
SELECT id FROM file WHERE refcount<=0
queue.db
.qdat
SELECT max(maxId) FROM (SELECT max(id) as maxId FROM item WHERE id < 0x4000000000000000 UNION SELECT max(id) & 0x3fffffffffffffff as maxId from item)
SELECT COUNT(true) FROM item WHERE id < 0x4000000000000000
SELECT COUNT(true) FROM item
DELETE FROM item WHERE fails >= 3
WITH refsToSubtract AS (SELECT count(1) AS howMany, fileId FROM item WHERE fails>=3 GROUP BY fileId) UPDATE file SET refcount=MAX(0,refcount-(SELECT howMany FROM refsToSubtract WHERE fileId=file.id LIMIT 1)) WHERE id IN (SELECT fileId FROM refsToSubtract) AND refcount>0
UPDATE item SET inProgress=0, fails=fails+1 WHERE inProgress=1 AND fails<3
ALTER TABLE item ADD storageReason INT DEFAULT 1
ALTER TABLE item ADD receivedOnPower INT
ALTER TABLE item ADD customPriorityCriteria INT
CREATE INDEX IF NOT EXISTS refcountIdx ON file (refCount) WHERE refcount <= 0
CREATE INDEX IF NOT EXISTS failsIdx ON item (fails) WHERE fails >= 3
CREATE INDEX IF NOT EXISTS inProgressIdx ON item (inProgress) WHERE inProgress = 1
ALTER TABLE item ADD textChecksum INT
ALTER TABLE item ADD textLen INT
ALTER TABLE item ADD textOffset INT
ALTER TABLE item ADD insertTime INT
CREATE TABLE file (id INTEGER PRIMARY KEY, refcount INT)
CREATE INDEX emailIdIdx ON item (sourceKey, messageId)
CREATE TABLE item (  id INTEGER PRIMARY KEY, sourceKey TEXT, messageId TEXT,  inProgress INT, fails INT, fileId INT,  metadataOffset INT, metadataLen INT, metadataChecksum INT,  htmlOffset INT, htmlLen INT, htmlChecksum INT)
v40@?0@"NSString"8@"NSString"16@"NSData"24@"NSError"32
v16@?0@"CSSearchableItem"8
 not
@"SGDataDetectorMatchesWithSignatureRange"8@?0
@"NSArray"8@?0
contentProtection
isStoredEncrypted
accountType
test-source
attachments
textContent
Internal
@16@?0@"NSString"8
didResponseKitTrigger
offset
didRegexTrigger
isFromCongratulation
dateIsCorrect
<SGStructuredEventClassification category:%@ useCase:%@ locale:%@>
NoEvent
restaurant
tickets
provider_name
use_case
http://schema.org/MusicEvent
Unknown
_observersFrozen
SGJournal.m
!_observersFrozen
observer
@"SGStorageEvent"16@?0@"SGJournalEntry"8
entry
SGContactEntity.m
SGEntityTypeIsContact(entity.duplicateKey.entityType)
<SGRawKey: %@>
SGRawKey.m
NSString
plainText
SGTaggedCharacterRange
SGDOMParserResult.m
SUBJECT
%@ . 
@"NSOperation"16@?0@"NSArray"8
dissectEntity
dissectEntityAndWrite
dissectArray
dissectArrayAndWrite
dissect
Store
com.apple.suggestions.fulldownloadrequested
bundleIdentifier and uniqueIdentifier are required if adding a Spotlight reference.
B16@?0@"SGPipelineEnrichment"8
-[SGPipeline geocodeOperation:withDependencies:]_block_invoke_2
SGPipeline.m
[enrichment.timeRange isValidAllDayRange]
Unknown entity type
@?<v@?>16@?0@"SGPipelineDissector"8
v32@?0@"SGPipelineDissector"8@"NSArray"16^B24
@"NSMutableArray"16@?0@"NSArray"8
@"SGPipelineDissector"16@?0#8
Dependencies unknown for dissector class: %@
+[SGPipeline sharedBackgroundStorageQueue]
+[SGPipeline sharedBackgroundProcessingQueue]
SGPipeline-_delayedResetCachesAndModels
SGPipeline-_resetCachesAndModels-pressure
v40@?0@"NSString"8{_NSRange=QQ}16^B32
zh-Hans
Job stack overflow.
Unexpected opcode: 
 arg 
Bad arg in kInstCapture: 
<SGContactDetailKey identityKey:%@ label:%@ value:%@>
SGContactDetailKey.m
[SGPseudoContactKey identityKey:%@]
SGPseudoContactKey.m
text/vcard
text/calendar
<%@ type:%@ path:%@>
video
audio
image
application
testpath
test
@16@?0@"BMContentAttachment"8
trimWhitespace
mergeAnyConsecutiveCharacters
separateCharacter
replaceLinksWithString
replaceNumbersWithString
mergeNumbersSeparatedByASCIISpace
removeSymbols
removePunctuationWithExceptions
transformFullwidthToHalfwidthASCII
replaceAllWhitespaceWithSpaces
stripNonBaseCharacters
lowerCase
CG=3&NG=1&FV=1.1
SGTextMessageBirthdayCongratsModel
-[SGStorageEvent geocodedEventWithStartDate:startTimeZone:endDate:endTimeZone:locations:]
SGStorageEvent.m
!startTimeZone == !endTimeZone
<SGStorageEvent title:%@ dupKey:%@ when:%@>
when
message:
q24@?0@"SGStorageLocation"8@"SGStorageLocation"16
@"SGLocation"16@?0@"SGStorageLocation"8
v24@?0@"NSMutableSet"8^B16
SGDSpotlightReceiver.m
v24@?0@"NSMutableDictionary"8^B16
kUTTypeEmailMessage
kUTTypeMessage
kUTTypeText
kUTTypeContent
kUTTypeToDoItem
com.apple.safari.history
com.apple.proactive.SocialHighlightsDeleted
v24@?0@"_PASTuple2"8^B16
addUserAction-plugins
com.apple.proactive.SocialHighlightsRefreshed
@"CSSearchableItem"8@?0
SGDSpotlightReceiver.purgeAndDeleteDropbox
SGDSpotlightReceiver.deleteDomainIdentifiersDropbox
SGDSpotlightReceiver.deleteInteractionBundleIdDropbox
SGDSpotlightReceiver.deleteInteractionIdDropbox
SGDSpotlightReceiver.deleteInteractionGroupIdDropbox
@"NSMutableDictionary"8@?0
v16@?0@"SGXPCResponse"8
v16@?0@"NSMutableSet"8
@"_PASTuple2"8@?0
v16@?0@"_PASTuple2"8
manager
v32@?0@"NSString"8Q16^B24
v24@?0@"CNContact"8^B16
SGContactPipelineHelper.m
@16@?0@"CNLabeledValue"8
Asking to stopOnNewDetail or stopOnMatchedDetail does not make sense alonside providing newDetails or matchedDetails
SGCuratedContactMatcher.m
B16@?0@"SGContact"8
B16@?0@"CNContact"8
v16@?0@"NSNotification"8
parentEntityType
interactionInfo
schemaOrg
extraKey
-[SGDCKEvent StringAsCategoryType:]
SGDCKEvent.m
double inversionProbabilityEstimate(double, double, double)
Contradictory parameters.
Probabilities must be in [0, 1]
SGNameInversionPredictor.m
confidenceThreshold
Tries
trieName
inversionRate
traditions
<SGEmailKey source:%@ messageId:%@>
SGEmailKey.m
SELECT extractionType, modelVersion, confidence FROM extractionInfos WHERE id = :primaryKey
INSERT INTO extractionInfos (extractionType, modelVersion, confidence) VALUES (:extractionType, :modelVersion, :confidence)
:extractionType
:modelVersion
:confidence
B24@?0@"NSXPCConnection"8@"NSString"16
v16@?0@"SGPortraitRequestServerHandlerCache"8
failed to initialize kSGDTargetPluginsCSCustomAttributeKey
SGPortraitRequestServer.m
deploymentId
PUNCTUATION_MAPPING
PERSONAL_NAME_MAPPING
TRUST_CORENLP
NAME_TAGGING
LOCALE
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
-[SGTokenizerMappingTransformer transform:]_block_invoke
Must be a dictionary
SG_TARGET_ADDRESS
PHONE
NAME
EMAIL
ADDRESS
SYMBOL
RECENCY
PHONETYPE
PHONENUMBER
NUMBER
LINK
LASTNAME
FULLNAME
FIRSTNAME
ENTITYTYPE
EMAILTYPE
DATE
CALLTYPE
BELONGINGTO
BELONGING
ADDRESSTYPE
TARGET
FEATURE
SGTokenizerMappingTransformer.m
com.apple.suggestions.ml.tokenizing
v40@?0{?={?=qq}Q}8^B32
com.apple.MobileAsset.LinguisticData.ma.new-asset-installed
senderConnectionScore
submodelOutputAge
submodelOutputVector
saliencyInference
B16@?0@"EKEvent"8
Unhandled message class %@
EKEventStore+Suggestions.m
Concat of 
RE2: unexpected op: 
AddFoldedRange recurses too much.
Bad hex digit 
Bad call to ParseState::ParsePerlFlags
DATE_MAPPING
ADDRESS_MAPPING
PHONE_MAPPING
TARGET_MAPPING
@"NSString"16@?0@"SGDataDetectorMatch"8
Unexpected input: %@. %@ requires SG_MODEL_DISABLE_TARGET_MAPPING to be setif neither SG_MODEL_TARGET_DD_MATCH and SG_MODEL_INPUT_TARGET_RANGE are provied.
Unexpected input: %@. %@ requires dictionary with SG_MODEL_INPUT_TEXT key.
SGEntityMatchingTransformer.m
DELETE FROM events WHERE id IN _pas_nsarray(:ids)
SELECT id, whenRange FROM events
SELECT id FROM entity WHERE entityType = :entityType LIMIT :limit
B16@?0@"SGKeyValueCacheFile"8
:interactionType
:batchSize
SELECT key FROM emailMetadata WHERE type = :interactionType LIMIT :batchSize
{_PASDBIterAction_=B}16@?0^{sqlite3_stmt=}8
serializedInteractionKey
SGSqlEntityStore+DatabaseMigrator.m
DROP TABLE entity_fts_docidfix_backup
SELECT id, entityType, title, groupId, entityKey FROM entity 
v16@?0^{sqlite3_stmt=}8
entity_fts_docidfix_backup
SELECT id FROM emailMetadata
DELETE FROM snippets WHERE entityId = :rowId
:rowId
INSERT INTO emailSnippets (emailId, title, content) SELECT entityId, title, content FROM snippets WHERE entityId = :rowId
:email
:textMessage
INSERT INTO emailTags (key, type, tag) SELECT entityKey, entityType, tag FROM entityTags WHERE entityType IN (:email, :textMessage)
DELETE FROM entity WHERE entityType IN (:email, :textMessage)
DELETE FROM entityParentage WHERE childId IN (SELECT id FROM entity WHERE entityType IN (:email, :textMessage))
INSERT INTO emailMetadata     (id, key, type, sourceKey, author, creationTimestamp, updateTimestamp, indexTimestamp, lastSeenTimestamp,      tags, state, downloadState, harvestedOnBuild) SELECT e.id, e.entityKey, e.entityType, ep.sourceKey, e.author, e.creationTimestamp, e.updateTimestamp, e.indexTimestamp,     e.lastSeenTimestamp, e.tags, e.state, e.downloadState, e.harvestedOnBuild FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityType IN (:email, :textMessage)
:pseudo
:unrec
UPDATE entity SET masterEntityId = -1 WHERE entityType IN (:pseudo, :unrec)
:semicolon
*[0-9;];[0-9;]*
DELETE FROM entity_fts WHERE messagingTerms GLOB :semicolon
hashHexToBlob
UPDATE entityParentage SET duplicateKeyHashBlob = hashHexToBlob(duplicateKeyHash) WHERE duplicateKeyHash IS NOT NULL AND duplicateKeyHash != ''
UPDATE entityTags SET duplicateKeyHashBlob = hashHexToBlob(duplicateKeyHash) WHERE duplicateKeyHash IS NOT NULL AND duplicateKeyHash != ''
UPDATE entity SET contentHashBlob = hashHexToBlob(contentHash) WHERE contentHash IS NOT NULL AND contentHash != ''
void hashHexToBlob(sqlite3_context *, int, sqlite3_value **)
DROP TABLE identityPhonesDeduped
INSERT INTO identityPhones SELECT * FROM identityPhonesDeduped
CREATE TEMP TABLE identityPhonesDeduped AS SELECT DISTINCT * FROM identityPhones
DROP TABLE IF EXISTS identityPhonesDeduped
entity_fts_from
CREATE INDEX IF NOT EXISTS ix_entityTags_dupKeyHash ON entityTags(duplicateKeyHash)
ix_entityTags_dupKeyHash
ALTER TABLE entityTags ADD COLUMN duplicateKeyHash TEXT NOT NULL DEFAULT ''
entityTags
CREATE INDEX IF NOT EXISTS groupIdIdx on entity(groupId)
groupIdIdx
ALTER TABLE entity ADD COLUMN groupId INTEGER DEFAULT -1
CREATE UNIQUE INDEX IF NOT EXISTS entityContentHashIdx ON entity(contentHash)
entityContentHashIdx
ALTER TABLE entity ADD COLUMN contentHash TEXT
contentHash
CREATE INDEX entityDownloadStateIdx on entity(downloadState)
entityDownloadStateIdx
ALTER TABLE entity ADD COLUMN downloadState INTEGER DEFAULT 0
CREATE UNIQUE INDEX IF NOT EXISTS cnContactsToSgContactsCIdIdx ON cnContactsToSgContacts(cnContactIdentifier)
CREATE TABLE IF NOT EXISTS cnContactsToSgContacts (id INTEGER PRIMARY KEY AUTOINCREMENT,cnContactIdentifier TEXT,maxEntityId INTEGER,entityIds TEXT)
cnContactsToSgContacts
CREATE UNIQUE INDEX IF NOT EXISTS serializedContactsEntityIdIdx ON serializedContacts(entityId)
CREATE TABLE IF NOT EXISTS serializedContacts (id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER,data BLOB)
CREATE UNIQUE INDEX IF NOT EXISTS entityParentageDuplicateKeyHashIdx on entityParentage(duplicateKeyHash, extractionType)
CREATE INDEX IF NOT EXISTS entityParentageChildIdx on entityParentage(childId)
CREATE INDEX IF NOT EXISTS entityParentageParentKeyIdx on entityParentage(parentKey)
CREATE TABLE IF NOT EXISTS entityParentage (id INTEGER PRIMARY KEY AUTOINCREMENT,parentKey TEXT,childId INTEGER NOT NULL,duplicateKeyHash TEXT NOT NULL,extractionType INTEGER,sourceKey TEXT,UNIQUE(parentKey, childId))
ALTER TABLE entity ADD COLUMN author TEXT
UPDATE entity SET title=NULL WHERE entityType = ?
UPDATE entity SET content=NULL, contentRangeOfInterest=NULL
INSERT OR REPLACE INTO snippets.snippets (entityId, title, content, contentRangeOfInterest) SELECT id, NULL, content, contentRangeOfInterest FROM entity WHERE entityType != :entityType 
INSERT OR REPLACE INTO snippets.snippets (entityId, title, content, contentRangeOfInterest) SELECT id, title, content, contentRangeOfInterest FROM entity WHERE entityType = :entityType 
DETACH DATABASE snippets
ATTACH DATABASE :snippetPath AS snippets
:snippetPath
SG_UPDATING_SKIP_QUERIES
com.apple.iChat
DELETE FROM postMigrationTasks WHERE rowId == :rowId LIMIT 1
migration_
SELECT rowId, task FROM postMigrationTasks ORDER BY rowId
task
postMigrationTasks
migrator.%@.steps.%lu_to_%lu
disk
memory
legacy
old (%lu < %d)
skipToSnippetsVersion != UINT32_MAX
skipToEntityVersion != UINT32_MAX
SELECT MIN(docid) FROM %@ WHERE docid NOT IN (SELECT docid FROM %@)
ALTER TABLE %@ RENAME TO %@
DatabaseMigrator-FTS-queue
:batchStart
:batchStop
INSERT INTO %@ (docid, entityId, messagingTerms, ftsTerms) SELECT docid, entityId, messagingTerms, ftsTerms FROM %@ WHERE docid BETWEEN :batchStart AND :batchStop   AND docid NOT IN (SELECT docid FROM %@)
SELECT MAX(docid) FROM %@
entityId INTEGER, messagingTerms TEXT COLLATE NOCASE, ftsTerms TEXT COLLATE NOCASE, notindexed=entityId
Failed to drop table %@: %@
%@FailedUnmigration
Failed to clear database: %@
SELECT name FROM sqlite_master WHERE type='table' AND NOT name LIKE 'sqlite_%'
com.apple.suggestions.databasemigration.
com.apple.suggestions.databasemigration.migratorQueue
migrator.%@.full.%lu_to_%lu
B8@?0
v24@?0Q8Q16
@"SGModelFeatures"8@?0
NEGATIVE_SAMPLE_CHOPPABLE_START
v16@?0@"SGBinaryClassificationModel"8
SGContactSharingLabel firstPersonContactSharingLabelFromMatchType(SGDataDetectorMatchType)
SGContactSharingLabel thirdPersonContactSharingLabelFromMatchType(SGDataDetectorMatchType)
Contact sharing model doesn't support matchType = %lu
v24@?0Q8q16
B32@?0@"SGTextMessageItem"8Q16^B24
SGModelObjective convertSGDDMatchToModelObjective(SGDataDetectorMatchType, BOOL)
Unknown model objective for SGDataDetectorMatchType = %lu for non SGTextMessage
Unknown model objective for SGDataDetectorMatchType = %lu and SGTextMessage
-[SGDetectedAttributeML addSessionForTrainingWithSource:label:language:objective:spotlightRef:embeddedFeaturizer:]
SGDetectedAttributeML.m
[vector isKindOfClass:[PMLSparseVector class]]
<RE2 %@>
i24@?0r^v8r^v16
{SGRe2IterAction_=B}24@?0^{?={_NSRange=QQ}*}8@"SGRe2"16
subregexps
SGRe2.mm
SGRe2 *getInternal(NSData *__strong)
Could not initialize regexp: %@
<RE2-lazy(%i) %@>
regexpUtf8
predicate
SGPlainTextContentCursor.m
message.textContent
_type == SGIdentityKeyTypeContact
SGIdentityKey.m
Identity key claims to be a phone number but it does not have one
Calling phone number selector on identity with no phone number.
Should not ask for a unique identifier when this is neither an email nor an instance message address
Identity key claims to be a social profile but it does not have one
Calling socialProfile selector on identity with no social profile.
Identity key claims to be an instant message address but it does not have one
Calling instant message selector on identity with no instant message address.
Identity key claims to be an email address but it does not have one
Calling email selector on identity with no email address.
[SGIdentityKey type:%@ content:%@]
Uninitialized SGIdentityKeyType
SGIdentityKeyTypeEmail
SGIdentityKeyTypeContact
SGIdentityKeyTypeUnrecognizedPhone
SGIdentityKeyTypeInstantMessageAddress
SGIdentityKeyTypeSocialProfile
UNKNOWN IDENTITY KEY TYPE!
NSString *keyForIdentityKeyType(SGIdentityKeyType)
No key for type value %d
No key for SGIdentityKeyTypeUninitialized. Initialize it.
Unknown type: %@
parts.count == 2
person.handles.count > 0
datetime
meter
link
area
track
iframe
embed
itemtype
itemref
itemscope
itemprop
libxml attribute names should always be lowercase during HTML parsing
libxml tag names should always be lowercase during HTML parsing
SGMicrodataParser.m
&#47;
job:%@:%@:%d:%d:%@
kMDItemSubject
kMDItemStartDate
kMDItemContentCreationDate
kMDItemTitle
public.message
public.email-message
com.apple.suggestions.spotlightCommander.reimportRequests
v28@?0@"IPMessage"8@"NSArray"16B24
@"NSString"16@?0@"IPMessage"8
v16@?0@"NSArray"8
-[SGNaturalLanguageDissector addEnrichmentForEvents:forMessage:toEntity:]
SGNaturalLanguageDissector.m
[timeRange isValidAllDayRange]
v16@?0@"EKEventStore"8
@"IPPerson"16@?0@"CSPerson"8
v24@?0@"NSData"8@"NSError"16
SGSqlEntityStore+Spotlight.m
SELECT entityId, data FROM serializedContacts WHERE entityId IN _pas_nsarray(:ids)
serializedContacts
data
:ids
:minEntityId
 ORDER BY entityId LIMIT :limit
 WHERE entityId >= :minEntityId
SELECT entityId, data FROM serializedContacts
v16@?0@"_PASSqliteStatement"8
:bid
:uid
:dids
         SELECT 1 FROM harvestQueueTombstones WHERE bundleIdentifier=:bid AND uniqueIdentifier IS NULL AND domainIdentifier IS NULL UNION ALL SELECT 1 FROM harvestQueueTombstones WHERE bundleIdentifier=:bid AND uniqueIdentifier=:uid    AND domainIdentifier IS NULL UNION ALL SELECT 1 FROM harvestQueueTombstones WHERE bundleIdentifier=:bid AND uniqueIdentifier IS NULL AND domainIdentifier IN _pas_nsarray(:dids)
DELETE FROM harvestQueueTombstones
INSERT OR IGNORE INTO harvestQueueTombstones (bundleIdentifier, uniqueIdentifier, domainIdentifier) VALUES (:bid,NULL,NULL)
DELETE FROM harvestQueueTombstones WHERE bundleIdentifier = :bid
INSERT OR IGNORE INTO harvestQueueTombstones (bundleIdentifier, uniqueIdentifier, domainIdentifier) SELECT :bid, value, NULL FROM _pas_nsarray(:uids) WHERE NOT EXISTS (SELECT 1 FROM harvestQueueTombstones WHERE bundleIdentifier=:bid AND uniqueIdentifier=value AND domainIdentifier IS NULL)
:uids
uniqueIdentifiers
DELETE FROM harvestQueueTombstones WHERE bundleIdentifier=:bid AND uniqueIdentifier IS NULL AND (domainIdentifier >= :did || '.') AND (domainIdentifier < :did || '/')
:did
INSERT OR IGNORE INTO harvestQueueTombstones (bundleIdentifier, uniqueIdentifier, domainIdentifier) VALUES (:bid, NULL, :did)
SELECT domainIdentifier FROM harvestQueueTombstones WHERE bundleIdentifier=:bid AND uniqueIdentifier IS NULL AND domainIdentifier IN _pas_nsset(:overlappingDomainIdentifiers)
domainIdentifier
harvestQueueTombstones
:overlappingDomainIdentifiers
SELECT 1 FROM harvestQueueTombstones WHERE bundleIdentifier=:bid AND uniqueIdentifier IS NULL AND domainIdentifier IS NULL
v24@?0Q8^B16
DELETE FROM entityReferences WHERE id BETWEEN ? AND ?
SELECT id, entityId FROM entityReferences WHERE bundleIdentifier is null
Encountered repeated message ID for deletion
SELECT id, entityId FROM entityReferences WHERE bundleIdentifier = ?
v24@?0@"NSArray"8^B16
DELETE FROM entityReferences WHERE id = ?
 OR (domainIdentifier GLOB ?)
SELECT id, entityId FROM entityReferences WHERE bundleIdentifier = ? AND ((domainIdentifier GLOB ?)
DELETE FROM entityReferences WHERE bundleIdentifier = :bid AND uniqueIdentifier IN _pas_nsarray(:uids)
SELECT DISTINCT entityId FROM entityReferences WHERE bundleIdentifier = :bid AND uniqueIdentifier IN _pas_nsarray(:uids)
entityReferences
v16@?0@"NSMutableOrderedSet"8
@"SGEmailKey"16@?0@"SGDuplicateKey"8
SELECT DISTINCT entityId FROM entityReferences WHERE entityId BETWEEN ? AND ?
SELECT state, tags FROM emailMetadata WHERE id = :id LIMIT 1
:entityType
:entityKey
:parentKey
SELECT e.id FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityKey = :entityKey AND e.entityType = :entityType AND ep.parentKey
:key
SELECT id FROM emailMetadata WHERE key = :key
Email entities should not have a parent
SELECT e.entityKey, e.entityType FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.id BETWEEN ? AND ?
SELECT key, type FROM emailMetadata WHERE id BETWEEN ? AND ?
messageKeyString
Unsupported table id %lu
SELECT 1 FROM entityReferences WHERE bundleIdentifier = ? AND uniqueIdentifier = ? LIMIT 1
SELECT domainIdentifier FROM entityReferences WHERE bundleIdentifier = ? AND uniqueIdentifier = ? LIMIT 1
timestampSinceReferenceMail
timestampSinceReferenceGTE
estimatedGroundTruth
[SGDeliveryKey isSupportedEntityType:_entityType]
SGDuplicateKey.m
[SGPseudoReminderKey isSupportedEntityType:_entityType]
[SGPseudoEventKey isSupportedEntityType:_entityType]
[SGInteractionKey isSupportedEntityType:_entityType]
[SGWebPageKey isSupportedEntityType:_entityType]
[SGTextMessageKey isSupportedEntityType:_entityType]
[SGEmailKey isSupportedEntityType:_entityType]
SGEntityTypeIsContact(_entityType)
[SGPseudoContactKey isSupportedEntityType:_entityType]
[SGContactDetailKey isSupportedEntityType:_entityType]
[SGCuratedEventKey isSupportedEntityType:_entityType]
<SGDuplicateKey entityType:%@ entityKey:%@ parentKey:%@>
%llu
%@ not supported by %@
%li/%@
self
%@_%ld_%ld
SGMailClientUtilErrorDomain
v24@?0@"EMContentRepresentation"8@"NSError"16
message://%@
v40@?0r^v8{_NSRange=QQ}16^B32
+[SGMailClientUtil convertLineEndingsToNetwork:]_block_invoke
SGMailClientUtil.m
insertionsNeeded
@"SGMailClientUtil"8@?0
SignificantPostalAddress
Found in %@
Chatting with %@
Found in %@ with %@
contentDescription
public.plain-text
checkoutDate
checkinDate
v32@?0@"_PASTuple2"8@"SGContact"16^B24
@"SGDateComponents"24@?0@"SGDateComponents"8@"SGDateComponents"16
@"SGName"24@?0@"SGName"8@"SGName"16
@"NSArray"32@?0@"NSArray"8@"NSArray"16@?<@@?@>24
@"NSArray"24@?0@"NSArray"8@"NSArray"16
@"SGPostalAddress"16@?0@"SGPostalAddress"8
B24@?0@"SGPostalAddress"8@"SGPostalAddress"16
@"NSString<SGNormalizedAddress>"16@?0@8
@24@?0@8@16
remindersExtractionStatus
daysUntilDue
dueLocationType
dueLocationTrigger
defaultDueDate
success
missing_entities_in_model_output
no_proposal
no_confirmation
no_trigger
no_title
SELECT key FROM emailMetadata WHERE state NOT IN (:deleted, :undisplayable) AND key IN _pas_nsarray(:keys)
emailMetadata
:deleted
:undisplayable
:keys
@16@?0@"SGDuplicateKey"8
UPDATE emailMetadata SET state = :state, lastSeenTimestamp = :lastSeen WHERE unlikely(state != :normal) AND key IN _pas_nsarray(:keys)
:normal
:lastSeen
UPDATE emailMetadata SET state = :state, lastSeenTimestamp = :lastSeen WHERE unlikely(state = :undisplayable) AND key IN _pas_nsarray(:keys)
SELECT key FROM emailMetadata WHERE unlikely(state = :lost) AND sourceKey = :sourceKey AND tagsHaveEscapedTag(tags, :eventTag) ORDER BY lastSeenTimestamp ASC LIMIT :limit
:lost
:eventTag
SELECT key FROM emailMetadata WHERE unlikely(state = :lost) AND sourceKey = :sourceKey AND tagsHaveEscapedTag(tags, :contactTag) ORDER BY lastSeenTimestamp ASC LIMIT :limit
:contactTag
SELECT key FROM emailMetadata WHERE unlikely(state = :lost) AND sourceKey = :sourceKey AND NOT (tagsHaveEscapedTag(tags, :eventTag) OR tagsHaveEscapedTag(tags, :contactTag)) ORDER BY lastSeenTimestamp ASC LIMIT :limit
SGSqlEntityStore+MessageManagement.m
SELECT sourceKey, COUNT(*) FROM emailMetadata WHERE unlikely(state = :lost) GROUP BY sourceKey
UPDATE emailMetadata SET state = :lost, lastSeenTimestamp = :now WHERE likely(state NOT IN (:lost, :undisplayablyLost)) AND key IN _pas_nsarray(:keys)
:undisplayablyLost
:now
UPDATE emailMetadata SET state = :undisplayablyLost WHERE unlikely(state = :lost) AND key in _pas_nsarray(:keys) AND lastSeenTimestamp < :lastSeenCutoff
:lastSeenCutoff
UPDATE emailMetadata SET state = :undisplayablyLost WHERE key IN _pas_nsarray(:serializedKeys)
:serializedKeys
state can't be SGMailMessageUnset
Invalid state
SELECT key FROM emailMetadata WHERE state IN (:lost, :undisplayable) ORDER BY lastSeenTimestamp asc
:entityId
SELECT id FROM events WHERE entityId = :entityId
:duplicateKey
SELECT id FROM events WHERE duplicateKey = :duplicateKey
entityId
events
duplicateKey
sourceKey
title
content
creationTimestamp
lastModifiedTimestamp
whenRange
structuredData
state
curated
Expected duplicateKey to be non-null as specified in schema
SGSqlEntityStore+Events.m
SELECT entityId, duplicateKey, sourceKey, title, content, creationTimestamp, lastModifiedTimestamp, whenRange, structuredData, state, curated FROM events WHERE id = :primaryKey
SELECT name FROM eventTags WHERE eventId = :primaryKey
SELECT id FROM locations WHERE eventId = :primaryKey
:eventId
INSERT INTO eventTags (eventId, name) VALUES (:eventId, :name)
:sourceKey
:title
:content
:creationTimestamp
:lastModifiedTimestamp
:whenRange
:structuredData
:state
:curated
INSERT INTO events (entityId, duplicateKey, sourceKey, title, content, creationTimestamp, lastModifiedTimestamp, whenRange, structuredData, state, curated) VALUES (:entityId, :duplicateKey, :sourceKey, :title, :content, :creationTimestamp, :lastModifiedTimestamp, :whenRange, :structuredData, :state, :curated)
DELETE FROM locations WHERE eventId = :primaryKey
DELETE FROM eventTags WHERE eventId = :primaryKey
UPDATE events SET entityId = :entityId, duplicateKey = :duplicateKey, sourceKey = :sourceKey, title = :title, content = :content, creationTimestamp = :creationTimestamp, lastModifiedTimestamp = :lastModifiedTimestamp, whenRange = :whenRange, structuredData = :structuredData, state = :state, curated = :curated WHERE id = :primaryKey
EmptyStringWalker::ShortVisit called
CREATE INDEX ix_identityPerson_email_nameless ON identityPerson(email)
CREATE INDEX ix_identityPerson_middlename ON identityPerson(middlename)
CREATE INDEX ix_identityPerson_surname ON identityPerson(surname)
CREATE INDEX mailintelligence_spotlightMapping_bundleIdentifier_terminatedDomainIdentifier_idx ON mailIntelligence_spotlightMapping(bundleIdentifier, terminatedDomainIdentifier)
CREATE UNIQUE INDEX mailintelligence_spotlightMapping_bundleIdentifier_uniqueIdentifier_idx ON mailIntelligence_spotlightMapping(bundleIdentifier, uniqueIdentifier)
CREATE INDEX mailintelligence_saliency_covering_idx ON mailintelligence_saliency(mailboxId, creationTimestamp DESC, score, isSalient, messageId)
CREATE UNIQUE INDEX mailIntelligence_naiveBayesModelsTokens_featureName_token_unigram_idx ON mailIntelligence_naiveBayesModelsTokens(featureName, token, isUnigram)
CREATE UNIQUE INDEX ix_urls_url_doc ON urls(url, doc_id, document_seconds_from_1970)
CREATE INDEX mailIntelligence_naiveBayesModelsGlobalCounts_featureName_idx ON mailIntelligence_naiveBayesModelsGlobalCounts(featureName)
CREATE INDEX eventTags_eventId_idx ON eventTags(eventId)
CREATE INDEX events_entityId_idx ON events(entityId)
CREATE INDEX events_duplicateKey_idx ON events(duplicateKey)
CREATE INDEX contactDetails_entityId_idx ON contactDetails(entityId)
CREATE INDEX contactDetails_duplicateKey_idx ON contactDetails(duplicateKey)
CREATE INDEX reminders_entityId_idx ON reminders(entityId)
CREATE INDEX reminders_duplicateKey_idx ON reminders(duplicateKey)
CREATE INDEX pendingVerificationIdx ON emailMetadata(pendingVerification) WHERE pendingVerification=1
CREATE INDEX ix_urls_bundle_id_group_id ON urls(bundle_id, group_id)
CREATE INDEX ix_urls_seconds_from_1970 ON urls(seconds_from_1970)
CREATE INDEX reimportItemsBundleUniqueIdx ON reimportItems(bundleId, uniqueId)
CREATE INDEX reimportItemsSeenByReceiverIdx ON reimportItems(seenByReceiverTimestamp)
CREATE INDEX reimportItemsRequestIdx ON reimportItems(reimportRequestId)
CREATE INDEX reimportRequestsExecutionIdx ON reimportRequests(executionTimestamp)
CREATE INDEX reimportRequestsQueryIdx ON reimportRequests(queryTimestamp)
CREATE INDEX ix_emailTags_key ON emailTags(key)
CREATE INDEX ix_emailTags_tag ON emailTags(tag)
CREATE INDEX ix_emailMetadata_downloadState ON emailMetadata(downloadState)
CREATE INDEX ix_emailMetadata_state ON emailMetadata(state)
CREATE UNIQUE INDEX ix_emailMetadata_key ON emailMetadata(key)
CREATE INDEX entityPendingGeocodeIdx ON entity(pendingGeocode) WHERE pendingGeocode=1
CREATE INDEX ix_entityTags_parentKey ON entityTags(parentKey)
CREATE UNIQUE INDEX messageTracerIdx ON messageTracer(domain, key)
CREATE UNIQUE INDEX metadataKeyIndex ON metadata(key)
CREATE INDEX ix_entityTags_dupKeyHashBlob ON entityTags(duplicateKeyHashBlob)
CREATE UNIQUE INDEX entityParentageDuplicateKeyHashBlobIdx on entityParentage(duplicateKeyHashBlob, extractionType)
CREATE UNIQUE INDEX entityContentHashBlobIdx ON entity(contentHashBlob)
CREATE UNIQUE INDEX ix_harvestQueueTombstones_unique ON harvestQueueTombstones(bundleIdentifier, uniqueIdentifier, domainIdentifier)
CREATE INDEX entityParentageParentKeyChildIdIdx on entityParentage(parentKey, childId)
CREATE INDEX entityTypeIdx ON entity(entityType)
CREATE INDEX entityDupKeyIdx ON entity(entityKey, entityType)
CREATE UNIQUE INDEX ix_statsCounters_key ON statsCounters(key)
CREATE UNIQUE INDEX cnContactsToSgContactsUniqueJoin ON cnContactsToSgContacts(cnContactIdentifier, entityId)
CREATE INDEX cnContactsToSgContactsEntityIdx ON cnContactsToSgContacts(entityId)
CREATE INDEX groupIdIdx on entity(groupId)
CREATE INDEX entityReferencesEntityIdIdx ON entityReferences(entityId)
CREATE INDEX entityReferencesDomainIdx ON entityReferences(bundleIdentifier, domainIdentifier)
CREATE UNIQUE INDEX entityReferencesUniqueIdx ON entityReferences(bundleIdentifier, uniqueIdentifier)
CREATE INDEX ix_identityLink_recordId2 ON identityLink(recordId2)
CREATE UNIQUE INDEX serializedContactsEntityIdIdx ON serializedContacts(entityId)
CREATE INDEX entityParentageChildIdx on entityParentage(childId)
CREATE INDEX ix_entityTags_dupKey ON entityTags(entityKey, entityType, parentKey)
CREATE INDEX ix_entityTags_tag ON entityTags(tag)
CREATE INDEX entityStateIdx on entity(state)
CREATE INDEX entityMasterEntityIdIdx on entity(masterEntityId)
CREATE UNIQUE INDEX entityIdIdx on entity(id)
INSERT INTO sqlite_sequence VALUES('locations',0)
INSERT INTO sqlite_sequence VALUES('emailMetadata',0)
CREATE TABLE identityPhones (    phone TEXT NOT NULL,    recordId INTEGER NOT NULL,    PRIMARY KEY (phone, recordId)) WITHOUT ROWID
CREATE TABLE identitySocialProfileIdentifiers (    socialProfileIdentifier TEXT NOT NULL,    recordId INTEGER NOT NULL,    PRIMARY KEY (socialProfileIdentifier, recordId)) WITHOUT ROWID
CREATE TABLE identityPerson (    recordId INTEGER PRIMARY KEY,    middlename VARCHAR(256),    surname VARCHAR(256),    fullname TEXT,    nameSketches TEXT NOT NULL,    phones TEXT NOT NULL,    email TEXT NOT NULL,    socialProfileIdentifiers TEXT NOT NULL,    curated BOOLEAN NOT NULL,    isSent BOOLEAN DEFAULT false)
CREATE TABLE mailIntelligence_spotlightMapping (id INTEGER PRIMARY KEY AUTOINCREMENT,messageId TEXT NOT NULL,uniqueIdentifier TEXT NOT NULL,bundleIdentifier TEXT NOT NULL,terminatedDomainIdentifier TEXT)
CREATE TABLE mailIntelligence_naiveBayesModelsTokens (id INTEGER PRIMARY KEY AUTOINCREMENT,featureName INTEGER NOT NULL,token TEXT NOT NULL,isUnigram BOOLEAN NOT NULL,salientCount INTEGER NOT NULL,regularCount INTEGER NOT NULL, lastUpdateTimestamp REAL NOT NULL, creationTimestamp REAL NOT NULL)
CREATE TABLE mailIntelligence_saliency (id INTEGER PRIMARY KEY AUTOINCREMENT,creationTimestamp REAL NOT NULL,messageId TEXT NOT NULL,score NUM NOT NULL, mailboxId TEXT, isSalient BOOLEAN, isGteSalient INTEGER, isCounted BOOLEAN)
CREATE TABLE mailIntelligence_naiveBayesModelsGlobalCounts (id INTEGER PRIMARY KEY AUTOINCREMENT,featureName INTEGER NOT NULL,salientCount INTEGER NOT NULL,regularCount INTEGER NOT NULL,salientUnigramTokensCount INTEGER NOT NULL,regularUnigramTokensCount INTEGER NOT NULL,salientBigramTokensCount INTEGER NOT NULL,regularBigramTokensCount INTEGER NOT NULL,UNIQUE(featureName))
CREATE TABLE eventTags (id INTEGER PRIMARY KEY AUTOINCREMENT,eventId INTEGER NOT NULL,name TEXT,FOREIGN KEY(eventId) REFERENCES event(id) ON DELETE RESTRICT)
CREATE TABLE events (id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER NOT NULL,duplicateKey TEXT NOT NULL,sourceKey TEXT,title TEXT,content TEXT,creationTimestamp INTEGER,lastModifiedTimestamp INTEGER,whenRange TEXT,structuredData BLOB,state INTEGER,curated INTEGER)
CREATE TABLE IF NOT EXISTS "locations" (id INTEGER PRIMARY KEY AUTOINCREMENT,locationType INTEGER NOT NULL,label TEXT,address TEXT,airportCode TEXT,latitude REAL,longitude REAL,accuracy REAL,quality REAL,handle BLOB, eventId INTEGER)
CREATE TABLE postMigrationTasks (task TEXT NOT NULL)
CREATE TABLE contactDetails (id INTEGER PRIMARY KEY AUTOINCREMENT,value TEXT NOT NULL,type INTEGER NOT NULL,label TEXT,entityId INTEGER NOT NULL,duplicateKey TEXT NOT NULL,sourceKey TEXT,unused TEXT,extractionInfoId INTEGER NOT NULL,FOREIGN KEY(entityId) REFERENCES entity(id) ON DELETE NO ACTION,FOREIGN KEY(extractionInfoId) REFERENCES extractionInfos(id) ON DELETE RESTRICT)
CREATE TABLE extractionInfos (id INTEGER PRIMARY KEY AUTOINCREMENT,extractionType INTEGER NOT NULL,modelVersion NUM NOT NULL,confidence NUM NOT NULL)
CREATE TABLE reminders (id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER NOT NULL,duplicateKey TEXT NOT NULL,sourceKey TEXT,title text NOT NULL,dueDateComponents TEXT,dueLocationId INTEGER,dueLocationType INTEGER NOT NULL,dueLocationTrigger INTEGER NOT NULL,sourceUrl TEXT NOT NULL,creationDate num NOT NULL,opaqueKey TEXT,uniqueKey TEXT,contactIdentifier TEXT,reminderStatus NUM NOT NULL,FOREIGN KEY(entityId) REFERENCES entity(id) ON DELETE NO ACTION,FOREIGN KEY(dueLocationId) REFERENCES locations(id) ON DELETE SET NULL)
CREATE TABLE urls (id INTEGER PRIMARY KEY AUTOINCREMENT,url TEXT NOT NULL,received_from_handle TEXT,bundle_id TEXT NOT NULL,group_id TEXT,doc_id TEXT NOT NULL,seconds_from_1970 REAL NOT NULL, title TEXT, document_title TEXT, document_seconds_from_1970 REAL, document_time_interval REAL NOT NULL DEFAULT 0, flags INTEGER NOT NULL DEFAULT 0)
CREATE TABLE reimportItems (id INTEGER PRIMARY KEY AUTOINCREMENT,reimportRequestId INTEGER NOT NULL,bundleId TEXT NOT NULL,uniqueId TEXT NOT NULL,seenByReceiverTimestamp REAL)
CREATE TABLE reimportRequests (id INTEGER PRIMARY KEY AUTOINCREMENT,plugin TEXT NOT NULL,creationTimestamp REAL,queryTimestamp REAL,personHandle TEXT,startDateTimestamp REAL,endDateTimestamp REAL,executionTimestamp REAL)
CREATE TABLE emailTags (key TEXT NOT NULL,type INTEGER NOT NULL,tag TEXT NOT NULL)
CREATE TABLE emailMetadata (id INTEGER PRIMARY KEY AUTOINCREMENT,key TEXT NOT NULL,type INTEGER NOT NULL,sourceKey TEXT,author TEXT,creationTimestamp REAL,updateTimestamp REAL,indexTimestamp REAL,lastSeenTimestamp REAL,tags TEXT,state INTEGER DEFAULT 0,downloadState INTEGER DEFAULT 0,harvestedOnBuild TEXT, pendingVerification INTEGER DEFAULT 0)
CREATE TABLE identityInterdictNext (a TEXT NOT NULL, b TEXT NOT NULL)
CREATE TABLE identityBlobAnalysisJobs (id INTEGER PRIMARY KEY AUTOINCREMENT,mergeBlob BLOB)
CREATE TABLE messageTracer (domain TEXT NOT NULL,key TEXT NOT NULL,value INTEGER NOT NULL)
INSERT INTO metadata VALUES('rowIdWhenEventsEnabled',0)
INSERT INTO metadata VALUES('rowIdWhenContactsEnabled',0)
CREATE TABLE metadata (key TEXT NOT NULL, value)
CREATE TABLE serializedContactCacheJobs (id INTEGER PRIMARY KEY AUTOINCREMENT)
CREATE TABLE statsCounters (key TEXT NOT NULL,value REAL NOT NULL)
CREATE TABLE harvestQueueTombstones (bundleIdentifier TEXT,uniqueIdentifier TEXT,domainIdentifier TEXT)
CREATE TABLE cnContactsToSgContactsCacheJobs (id INTEGER PRIMARY KEY AUTOINCREMENT,batch TEXT)
CREATE TABLE cnContactsToSgContacts (id INTEGER PRIMARY KEY AUTOINCREMENT,cnContactIdentifier TEXT,maxEntityId INTEGER,entityId INTEGER)
CREATE TABLE entityReferences (id INTEGER PRIMARY KEY AUTOINCREMENT,bundleIdentifier TEXT,uniqueIdentifier TEXT,entityId INTEGER,domainIdentifier TEXT)
CREATE TABLE identityLink (    recordId1 INTEGER NOT NULL,    recordId2 INTEGER NOT NULL,    type INT NOT NULL,    strength REAL NOT NULL,    PRIMARY KEY (recordId1, recordId2, type))
CREATE TABLE serializedContacts (id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER,data BLOB)
CREATE TABLE entityParentage (id INTEGER PRIMARY KEY AUTOINCREMENT,parentKey TEXT,childId INTEGER NOT NULL,duplicateKeyHash TEXT NOT NULL,extractionType INTEGER,sourceKey TEXT, duplicateKeyHashBlob BLOB, modelVersion INTEGER NOT NULL DEFAULT 0, modelConfidence REAL NOT NULL DEFAULT 0.5,UNIQUE(parentKey, childId))
CREATE TABLE confirmedFieldValues (entityId INTEGER PRIMARY KEY,fieldValues BLOB,maybeChanged BOOLEAN)
CREATE TABLE entityTags (tag TEXT,entityKey TEXT,entityType INTEGER,parentKey TEXT,duplicateKeyHash TEXT NOT NULL, duplicateKeyHashBlob BLOB)
INSERT INTO entity_fts(entity_fts) VALUES ('automerge=8')
migration_CreateFTSTableWithITS
CREATE TABLE entity (id INTEGER PRIMARY KEY AUTOINCREMENT,entityKey TEXT NOT NULL,entityType INTEGER NOT NULL,author TEXT,content TEXT,contentRangeOfInterest TEXT,title TEXT COLLATE NOCASE,timeRangeStart REAL,timeRangeEnd REAL,floatingRange INTEGER,timeRangeStartUTCOffsetSeconds INTEGER,timeRangeEndUTCOffsetSeconds INTEGER,creationTimestamp REAL,updateTimestamp REAL,indexTimestamp REAL,lastSeenTimestamp REAL,tags TEXT,structuredData BLOB,quality REAL,locations BLOB,masterEntityId INTEGER DEFAULT -1,groupId INTEGER DEFAULT -1,state INTEGER DEFAULT 0,contentHash TEXT,downloadState INTEGER DEFAULT 0, contentHashBlob BLOB, pendingGeocode BOOLEAN DEFAULT false, harvestedOnBuild TEXT, curatedDupe BOOLEAN DEFAULT false)
ALTER TABLE mailIntelligence_naiveBayesModelsTokens ADD COLUMN creationTimestamp REAL NOT NULL
DELETE FROM mailIntelligence_naiveBayesModelsTokens
DELETE FROM mailIntelligence_naiveBayesModelsGlobalCounts
ALTER TABLE contactDetails RENAME COLUMN context TO unused
UPDATE contactDetails SET context = NULL
DROP TABLE IF EXISTS mailIntelligence_biomeProgress
ALTER TABLE mailIntelligence_naiveBayesModelsTokens RENAME COLUMN is_unigram TO isUnigram
ALTER TABLE mailIntelligence_saliency RENAME COLUMN is_counted TO isCounted
ALTER TABLE mailIntelligence_saliency RENAME COLUMN is_gte_salient TO isGteSalient
ALTER TABLE mailIntelligence_saliency RENAME COLUMN is_salient TO isSalient
DROP TABLE IF EXISTS mailIntelligence_featureReferenceMapping
DROP TABLE IF EXISTS mailIntelligence_features
migration_RebuildIdentityTables
migration_deleteSerializedContacts
CREATE TABLE IF NOT EXISTS identityPhones (    phone TEXT NOT NULL,    recordId INTEGER NOT NULL,    PRIMARY KEY (phone, recordId)) WITHOUT ROWID
DROP TABLE IF EXISTS identityPhones
CREATE TABLE IF NOT EXISTS identitySocialProfileIdentifiers (    socialProfileIdentifier TEXT NOT NULL,    recordId INTEGER NOT NULL,    PRIMARY KEY (socialProfileIdentifier, recordId)) WITHOUT ROWID
DROP TABLE IF EXISTS identitySocialProfileIdentifiers
CREATE TABLE IF NOT EXISTS identityPerson (    recordId INTEGER PRIMARY KEY,    middlename VARCHAR(256),    surname VARCHAR(256),    fullname TEXT,    nameSketches TEXT NOT NULL,    phones TEXT NOT NULL,    email TEXT NOT NULL,    socialProfileIdentifiers TEXT NOT NULL,    curated BOOLEAN NOT NULL,    isSent BOOLEAN DEFAULT false)
DROP TABLE IF EXISTS identityPerson
CREATE INDEX IF NOT EXISTS mailintelligence_spotlightMapping_bundleIdentifier_terminatedDomainIdentifier_idx ON mailIntelligence_spotlightMapping(bundleIdentifier, terminatedDomainIdentifier)
CREATE UNIQUE INDEX IF NOT EXISTS mailintelligence_spotlightMapping_bundleIdentifier_uniqueIdentifier_idx ON mailIntelligence_spotlightMapping(bundleIdentifier, uniqueIdentifier)
CREATE TABLE IF NOT EXISTS mailIntelligence_spotlightMapping (id INTEGER PRIMARY KEY AUTOINCREMENT,messageId TEXT NOT NULL,uniqueIdentifier TEXT NOT NULL,bundleIdentifier TEXT NOT NULL,terminatedDomainIdentifier TEXT)
CREATE INDEX IF NOT EXISTS mailintelligence_saliency_covering_idx ON mailintelligence_saliency(mailboxId, creationTimestamp DESC, score, is_salient, messageId)
ALTER TABLE mailIntelligence_naiveBayesModelsTokens ADD COLUMN lastUpdateTimestamp REAL NOT NULL
ALTER TABLE mailIntelligence_saliency ADD COLUMN is_counted BOOLEAN
ALTER TABLE mailIntelligence_saliency ADD COLUMN is_gte_salient INTEGER
ALTER TABLE mailIntelligence_saliency ADD COLUMN is_salient BOOLEAN
migration_RecreateFTSTableWithITS
migration_deleteNilDateEvents
ALTER TABLE mailIntelligence_saliency ADD COLUMN mailboxId TEXT
CREATE UNIQUE INDEX IF NOT EXISTS mailIntelligence_naiveBayesModelsTokens_featureName_token_unigram_idx ON mailIntelligence_naiveBayesModelsTokens(featureName, token, is_unigram)
CREATE TABLE IF NOT EXISTS mailIntelligence_naiveBayesModelsTokens (id INTEGER PRIMARY KEY AUTOINCREMENT,featureName INTEGER NOT NULL,token TEXT NOT NULL,is_unigram BOOLEAN NOT NULL,salientCount INTEGER NOT NULL,regularCount INTEGER NOT NULL)
DROP TABLE IF EXISTS mailIntelligence_naiveBayesModelsBigramTokens
DROP TABLE IF EXISTS mailIntelligence_naiveBayesModelsUnigramTokens
CREATE UNIQUE INDEX IF NOT EXISTS ix_urls_url_doc ON urls(url, doc_id, document_seconds_from_1970)
DROP INDEX ix_urls_url
CREATE TABLE IF NOT EXISTS mailIntelligence_saliency (id INTEGER PRIMARY KEY AUTOINCREMENT,creationTimestamp REAL NOT NULL,messageId TEXT NOT NULL,score NUM NOT NULL)
CREATE TABLE IF NOT EXISTS mailIntelligence_biomeProgress (id INTEGER PRIMARY KEY AUTOINCREMENT,streamName TEXT NOT NULL,progressTimestamp NUM NOT NULL)
CREATE INDEX IF NOT EXISTS mailIntelligence_naiveBayesModelsBigramTokens_featureName_idx ON mailIntelligence_naiveBayesModelsBigramTokens(featureName)
CREATE TABLE IF NOT EXISTS mailIntelligence_naiveBayesModelsBigramTokens (id INTEGER PRIMARY KEY AUTOINCREMENT,featureName INTEGER NOT NULL,token TEXT NOT NULL,salientCount INTEGER NOT NULL,regularCount INTEGER NOT NULL)
CREATE INDEX IF NOT EXISTS mailIntelligence_naiveBayesModelsUnigramTokens_featureName_idx ON mailIntelligence_naiveBayesModelsUnigramTokens(featureName)
CREATE TABLE IF NOT EXISTS mailIntelligence_naiveBayesModelsUnigramTokens (id INTEGER PRIMARY KEY AUTOINCREMENT,featureName INTEGER NOT NULL,token TEXT NOT NULL,salientCount INTEGER NOT NULL,regularCount INTEGER NOT NULL)
CREATE INDEX IF NOT EXISTS mailIntelligence_naiveBayesModelsGlobalCounts_featureName_idx ON mailIntelligence_naiveBayesModelsGlobalCounts(featureName)
CREATE TABLE IF NOT EXISTS mailIntelligence_naiveBayesModelsGlobalCounts (id INTEGER PRIMARY KEY AUTOINCREMENT,featureName INTEGER NOT NULL,salientCount INTEGER NOT NULL,regularCount INTEGER NOT NULL,salientUnigramTokensCount INTEGER NOT NULL,regularUnigramTokensCount INTEGER NOT NULL,salientBigramTokensCount INTEGER NOT NULL,regularBigramTokensCount INTEGER NOT NULL,UNIQUE(featureName))
CREATE INDEX IF NOT EXISTS mailIntelligence_features_featureMappingId_idx ON mailIntelligence_features(featureMappingId)
CREATE INDEX IF NOT EXISTS mailIntelligence_featureReferenceMapping_externalReference_idx ON mailIntelligence_featureReferenceMapping(externalReference)
CREATE TABLE IF NOT EXISTS mailIntelligence_features (id INTEGER PRIMARY KEY AUTOINCREMENT,featureMappingId INT NOT NULL,featureName INT NOT NULL,stringValue TEXT,stringArrayValue TEXT,doubleValue NUM,doubleArrayValue TEXT,FOREIGN KEY(featureMappingId) REFERENCES mailIntelligence_featureReferenceMapping(id) ON DELETE CASCADE)
CREATE TABLE IF NOT EXISTS mailIntelligence_featureReferenceMapping (id INTEGER PRIMARY KEY AUTOINCREMENT,sourceType INT NOT NULL,externalReference TEXT)
migration_newEventsSchema
CREATE INDEX IF NOT EXISTS eventTags_eventId_idx ON eventTags(eventId)
CREATE INDEX IF NOT EXISTS events_entityId_idx ON events(entityId)
CREATE INDEX IF NOT EXISTS events_duplicateKey_idx ON events(duplicateKey)
ALTER TABLE locations ADD eventId INTEGER
CREATE TABLE IF NOT EXISTS eventTags (id INTEGER PRIMARY KEY AUTOINCREMENT,eventId INTEGER NOT NULL,name TEXT,FOREIGN KEY(eventId) REFERENCES event(id) ON DELETE RESTRICT)
CREATE TABLE IF NOT EXISTS events (id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER NOT NULL,duplicateKey TEXT NOT NULL,sourceKey TEXT,title TEXT,content TEXT,creationTimestamp INTEGER,lastModifiedTimestamp INTEGER,whenRange TEXT,structuredData BLOB,state INTEGER,curated INTEGER)
ALTER TABLE locations_alterColumnsNullable RENAME TO locations
DROP TABLE locations
INSERT INTO locations_alterColumnsNullable SELECT * FROM locations
CREATE TABLE IF NOT EXISTS locations_alterColumnsNullable (id INTEGER PRIMARY KEY AUTOINCREMENT,locationType INTEGER NOT NULL,label TEXT,address TEXT,airportCode TEXT,latitude REAL,longitude REAL,accuracy REAL,quality REAL,handle BLOB)
INSERT INTO postMigrationTasks (task) VALUES ('migration_deleteLegacyMessages')
CREATE TABLE IF NOT EXISTS postMigrationTasks (task TEXT NOT NULL)
migration_newContactDetailsSchema
CREATE INDEX IF NOT EXISTS contactDetails_entityId_idx ON contactDetails(entityId)
CREATE INDEX IF NOT EXISTS contactDetails_duplicateKey_idx ON contactDetails(duplicateKey)
CREATE TABLE IF NOT EXISTS contactDetails (id INTEGER PRIMARY KEY AUTOINCREMENT,value TEXT NOT NULL,type INTEGER NOT NULL,label TEXT,entityId INTEGER NOT NULL,duplicateKey TEXT NOT NULL,sourceKey TEXT,context TEXT,extractionInfoId INTEGER NOT NULL,FOREIGN KEY(entityId) REFERENCES entity(id) ON DELETE NO ACTION,FOREIGN KEY(extractionInfoId) REFERENCES extractionInfos(id) ON DELETE RESTRICT)
CREATE TABLE IF NOT EXISTS extractionInfos (id INTEGER PRIMARY KEY AUTOINCREMENT,extractionType INTEGER NOT NULL,modelVersion NUM NOT NULL,confidence NUM NOT NULL)
DROP TABLE IF EXISTS contactDetails
DROP TABLE IF EXISTS extractionInfos
migration_newRemindersSchema
CREATE INDEX IF NOT EXISTS reminders_entityId_idx ON reminders(entityId)
CREATE TABLE IF NOT EXISTS reminders (id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER NOT NULL,duplicateKey TEXT NOT NULL,sourceKey TEXT,title text NOT NULL,dueDateComponents TEXT,dueLocationId INTEGER,dueLocationType INTEGER NOT NULL,dueLocationTrigger INTEGER NOT NULL,sourceUrl TEXT NOT NULL,creationDate num NOT NULL,opaqueKey TEXT,uniqueKey TEXT,contactIdentifier TEXT,reminderStatus NUM NOT NULL,FOREIGN KEY(entityId) REFERENCES entity(id) ON DELETE NO ACTION,FOREIGN KEY(dueLocationId) REFERENCES locations(id) ON DELETE SET NULL)
CREATE TABLE IF NOT EXISTS locations (id INTEGER PRIMARY KEY AUTOINCREMENT,locationType INTEGER NOT NULL,label TEXT,address TEXT,airportCode TEXT,latitude REAL NOT NULL,longitude REAL NOT NULL,accuracy REAL NOT NULL,quality REAL NOT NULL,handle BLOB)
DROP TABLE IF EXISTS locations
ALTER TABLE emailMetadata ADD COLUMN pendingVerification INTEGER DEFAULT 0
CREATE INDEX IF NOT EXISTS reminders_duplicateKey_idx ON reminders(duplicateKey)
CREATE TABLE IF NOT EXISTS reminders (id INTEGER PRIMARY KEY,entityId INTEGER NOT NULL,duplicateKey TEXT NOT NULL,sourceKey TEXT,title text NOT NULL,dueDateComponents TEXT,dueLocationId INTEGER,dueLocationType INTEGER NOT NULL,dueLocationTrigger INTEGER NOT NULL,sourceUrl TEXT NOT NULL,creationDate num NOT NULL,opaqueKey TEXT,uniqueKey TEXT,contactIdentifier TEXT,reminderStatus NUM NOT NULL,FOREIGN KEY(entityId) REFERENCES entity(id) ON DELETE NO ACTION,FOREIGN KEY(dueLocationId) REFERENCES locations(id) ON DELETE SET NULL)
DROP TABLE IF EXISTS reminders
CREATE TABLE IF NOT EXISTS locations (id INTEGER PRIMARY KEY,locationType INTEGER NOT NULL,label TEXT NOT NULL,address TEXT NOT NULL,airportCode TEXT NOT NULL,latitude REAL NOT NULL,longitude REAL NOT NULL,accuracy REAL NOT NULL,quality REAL NOT NULL,handle BLOB)
migration_deleteInternalExtractionsFromML
ALTER TABLE urls ADD COLUMN flags INTEGER NOT NULL DEFAULT 0
UPDATE entity SET title = substr(title,1,5) WHERE entityType = 20 AND length(title) = 10 AND substr(title,7,4) IN ('2018','2019')
ALTER TABLE entity ADD COLUMN curatedDupe BOOLEAN DEFAULT false
ALTER TABLE urls ADD COLUMN document_time_interval REAL NOT NULL DEFAULT 0
ALTER TABLE urls ADD COLUMN document_seconds_from_1970 REAL
ALTER TABLE urls ADD COLUMN document_title TEXT
ALTER TABLE urls ADD COLUMN title TEXT
ALTER TABLE entityParentage ADD COLUMN modelConfidence REAL NOT NULL DEFAULT 0.5
ALTER TABLE entityParentage ADD COLUMN modelVersion INTEGER NOT NULL DEFAULT 0
CREATE INDEX IF NOT EXISTS ix_urls_bundle_id_group_id ON urls(bundle_id, group_id)
CREATE INDEX IF NOT EXISTS ix_urls_seconds_from_1970 ON urls(seconds_from_1970)
CREATE UNIQUE INDEX IF NOT EXISTS ix_urls_url ON urls(url)
CREATE TABLE IF NOT EXISTS urls (id INTEGER PRIMARY KEY AUTOINCREMENT,url TEXT NOT NULL,received_from_handle TEXT,bundle_id TEXT NOT NULL,group_id TEXT,doc_id TEXT NOT NULL,seconds_from_1970 REAL NOT NULL)
migration_deleteEmergencyExtractions
migration_reimport
ALTER TABLE identityPerson ADD COLUMN isSent BOOLEAN DEFAULT false
CREATE INDEX IF NOT EXISTS reimportItemsBundleUniqueIdx ON reimportItems(bundleId, uniqueId)
CREATE INDEX IF NOT EXISTS reimportItemsSeenByReceiverIdx ON reimportItems(seenByReceiverTimestamp)
CREATE INDEX IF NOT EXISTS reimportItemsRequestIdx ON reimportItems(reimportRequestId)
CREATE TABLE IF NOT EXISTS reimportItems (id INTEGER PRIMARY KEY AUTOINCREMENT,reimportRequestId INTEGER NOT NULL,bundleId TEXT NOT NULL,uniqueId TEXT NOT NULL,seenByReceiverTimestamp REAL)
CREATE INDEX IF NOT EXISTS reimportRequestsExecutionIdx ON reimportRequests(executionTimestamp)
CREATE INDEX IF NOT EXISTS reimportRequestsQueryIdx ON reimportRequests(queryTimestamp)
CREATE TABLE IF NOT EXISTS reimportRequests (id INTEGER PRIMARY KEY AUTOINCREMENT,plugin TEXT NOT NULL,creationTimestamp REAL,queryTimestamp REAL,personHandle TEXT,startDateTimestamp REAL,endDateTimestamp REAL,executionTimestamp REAL)
migration_deleteInteractions
CREATE INDEX IF NOT EXISTS ix_emailTags_key ON emailTags(key)
migration_rebuildFTSWithDetailEntityIDDocIDs
migration_FixupMergeGroups
migration_separateMessageEntities
CREATE INDEX IF NOT EXISTS ix_emailTags_tag ON emailTags(tag)
CREATE TABLE IF NOT EXISTS emailTags (key TEXT NOT NULL,type INTEGER NOT NULL,tag TEXT NOT NULL)
CREATE INDEX IF NOT EXISTS ix_emailMetadata_downloadState ON emailMetadata(downloadState)
CREATE INDEX IF NOT EXISTS ix_emailMetadata_state ON emailMetadata(state)
CREATE UNIQUE INDEX IF NOT EXISTS ix_emailMetadata_key ON emailMetadata(key)
CREATE TABLE IF NOT EXISTS emailMetadata (id INTEGER PRIMARY KEY AUTOINCREMENT,key TEXT NOT NULL,type INTEGER NOT NULL,sourceKey TEXT,author TEXT,creationTimestamp REAL,updateTimestamp REAL,indexTimestamp REAL,lastSeenTimestamp REAL,tags TEXT,state INTEGER DEFAULT 0,downloadState INTEGER DEFAULT 0,harvestedOnBuild TEXT)
ALTER TABLE identityPerson ADD COLUMN imAddresses TEXT NOT NULL DEFAULT ""
CREATE TABLE IF NOT EXISTS identityBlobAnalysisJobs (id INTEGER PRIMARY KEY AUTOINCREMENT,mergeBlob BLOB)
DELETE FROM entityTags WHERE duplicateKeyHashBlob NOT IN (SELECT duplicateKeyHashBlob FROM entityParentage)
DELETE FROM identityPhones WHERE recordId NOT IN (SELECT childId FROM entityParentage)
DELETE FROM identityLink WHERE recordId1 NOT IN (SELECT childId FROM entityParentage) OR recordId2 NOT IN (SELECT childId FROM entityParentage)
DELETE FROM identityPerson WHERE recordId NOT IN (SELECT childId FROM entityParentage)
DELETE FROM entity_fts WHERE entityId NOT IN (SELECT childId FROM entityParentage)
DELETE FROM entity WHERE id NOT IN (SELECT childId FROM entityParentage)
DROP INDEX entityPendingGeocodeIdx
UPDATE entity SET pendingGeocode=CAST(pendingGeocode AS INTEGER)
ALTER TABLE entity ADD COLUMN harvestedOnBuild TEXT
CREATE INDEX entityPendingGeocodeIdx ON entity(pendingGeocode)
ALTER TABLE entity ADD COLUMN pendingGeocode BOOLEAN DEFAULT false
CREATE INDEX IF NOT EXISTS ix_entityTags_parentKey ON entityTags(parentKey)
migration_RemoveEntityReferencesWithoutBundleIdentifier
DELETE FROM entityReferences WHERE entityId = -1
migration_DropMessagingTermsWithPhoneExtensions
CREATE UNIQUE INDEX IF NOT EXISTS messageTracerIdx ON messageTracer(domain, key)
CREATE TABLE IF NOT EXISTS messageTracer (domain TEXT NOT NULL,key TEXT NOT NULL,value INTEGER NOT NULL)
INSERT INTO metadata (key, value) VALUES ('rowIdWhenEventsEnabled', 0)
INSERT INTO metadata (key, value) VALUES ('rowIdWhenContactsEnabled', 0)
CREATE TABLE IF NOT EXISTS metadata (key TEXT NOT NULL, value)
DROP INDEX ix_entityTags_dupKeyHash
DROP INDEX entityParentageDuplicateKeyHashIdx
DROP INDEX entityContentHashIdx
migration_ConvertContentAndDupKeyHashesToBlobs
ALTER TABLE entityParentage ADD COLUMN duplicateKeyHashBlob BLOB
ALTER TABLE entityTags ADD COLUMN duplicateKeyHashBlob BLOB
ALTER TABLE entity ADD COLUMN contentHashBlob BLOB
CREATE UNIQUE INDEX IF NOT EXISTS ix_harvestQueueTombstones_unique ON harvestQueueTombstones(bundleIdentifier, uniqueIdentifier, domainIdentifier)
DROP INDEX IF EXISTS entityParentageParentKeyIdx
CREATE TABLE IF NOT EXISTS serializedContactCacheJobs (id INTEGER PRIMARY KEY AUTOINCREMENT)
DROP TABLE IF EXISTS serializedContactCacheJobs
CREATE UNIQUE INDEX ix_identityPhones_unique ON identityPhones(recordId, phone)
migration_DeduplicateIdentityPhones
CREATE INDEX IF NOT EXISTS entityTypeIdx ON entity(entityType)
CREATE INDEX IF NOT EXISTS entityDupKeyIdx ON entity(entityKey, entityType)
DROP INDEX IF EXISTS entityDupKeyIdx
CREATE TABLE IF NOT EXISTS statsCounters (key TEXT NOT NULL,value REAL NOT NULL)
CREATE TABLE IF NOT EXISTS serializedContactCacheJobs (id INTEGER PRIMARY KEY AUTOINCREMENT,batch TEXT)
CREATE INDEX IF NOT EXISTS entityDupKeyIdx ON entity(entityType, entityKey)
CREATE INDEX IF NOT EXISTS entityDupKeyIdx ON entity(entityKey, entityType);
CREATE INDEX ix_identityPhones_phone ON identityPhones(phone)
CREATE INDEX ix_identityPhones_recordId ON identityPhones(recordId)
CREATE TABLE IF NOT EXISTS identityPhones (    recordId INTEGER NOT NULL,    phone TEXT NOT NULL)
CREATE TABLE IF NOT EXISTS harvestQueueTombstones (bundleIdentifier TEXT,uniqueIdentifier TEXT,domainIdentifier TEXT)
CREATE TABLE IF NOT EXISTS cnContactsToSgContactsCacheJobs (id INTEGER PRIMARY KEY AUTOINCREMENT,batch TEXT)
CREATE UNIQUE INDEX IF NOT EXISTS cnContactsToSgContactsUniqueJoin ON cnContactsToSgContacts(cnContactIdentifier, entityId)
CREATE INDEX IF NOT EXISTS cnContactsToSgContactsEntityIdx ON cnContactsToSgContacts(entityId)
DROP TABLE IF EXISTS cnContactsToSgContacts
migration_AddAuthorColumnIfMissing
CREATE INDEX IF NOT EXISTS entityReferencesEntityIdIdx ON entityReferences(entityId)
CREATE INDEX IF NOT EXISTS entityReferencesDomainIdx ON entityReferences(bundleIdentifier, domainIdentifier)
CREATE UNIQUE INDEX IF NOT EXISTS entityReferencesUniqueIdx ON entityReferences(bundleIdentifier, uniqueIdentifier)
CREATE TABLE IF NOT EXISTS entityReferences (id INTEGER PRIMARY KEY AUTOINCREMENT,bundleIdentifier TEXT,uniqueIdentifier TEXT,entityId INTEGER,domainIdentifier TEXT)
migration_FixUpColumnsForDevicesWhoMissedTheImprovedLegacyMigration
migration_AddNewishTablesIfMissing
CREATE INDEX IF NOT EXISTS entityDownloadStateIdx on entity(downloadState)
CREATE TABLE IF NOT EXISTS identityInterdict (a TEXT NOT NULL, b TEXT NOT NULL)
CREATE INDEX IF NOT EXISTS ix_identityLink_recordId2 ON identityLink(recordId2)
CREATE TABLE IF NOT EXISTS identityLink (    recordId1 INTEGER NOT NULL,    recordId2 INTEGER NOT NULL,    type INT NOT NULL,    strength REAL NOT NULL,    PRIMARY KEY (recordId1, recordId2, type))
CREATE INDEX IF NOT EXISTS ix_identityPhones_phone ON identityPhones(phone)
CREATE INDEX IF NOT EXISTS ix_identityPhones_recordId ON identityPhones(recordId)
CREATE UNIQUE INDEX IF NOT EXISTS ix_identityPerson_recordId ON identityPerson(recordId)
CREATE INDEX IF NOT EXISTS ix_identityPerson_email_nameless ON identityPerson(email)
CREATE INDEX IF NOT EXISTS ix_identityPerson_middlename ON identityPerson(middlename)
CREATE INDEX IF NOT EXISTS ix_identityPerson_surname ON identityPerson(surname)
CREATE TEMP TABLE IF NOT EXISTS identityPhones (    recordId INTEGER NOT NULL,    phone TEXT NOT NULL)
CREATE TABLE IF NOT EXISTS identityPerson (    identityPersonId INTEGER PRIMARY KEY AUTOINCREMENT,    middlename VARCHAR(256),    surname VARCHAR(256),    fullname TEXT,    nameSketches TEXT NOT NULL,    phones TEXT NOT NULL,    email TEXT NOT NULL,    recordId INTEGER NOT NULL,    curated BOOLEAN NOT NULL)
CREATE TABLE IF NOT EXISTS confirmedFieldValues (entityId INTEGER PRIMARY KEY,fieldValues BLOB,maybeChanged BOOLEAN)
CREATE INDEX IF NOT EXISTS ix_entityTags_dupKey ON entityTags(entityKey, entityType, parentKey)
CREATE INDEX IF NOT EXISTS ix_entityTags_tag ON entityTags(tag)
CREATE TABLE IF NOT EXISTS entityTags (tag TEXT,entityKey TEXT,entityType INTEGER,parentKey TEXT,duplicateKeyHash TEXT NOT NULL)
CREATE VIRTUAL TABLE IF NOT EXISTS entity_fts USING fts4(id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER,messagingTerms TEXT COLLATE NOCASE,ftsTerms TEXT COLLATE NOCASE)
CREATE INDEX IF NOT EXISTS entityStateIdx on entity(state)
CREATE INDEX IF NOT EXISTS entityMasterEntityIdIdx on entity(masterEntityId)
CREATE UNIQUE INDEX IF NOT EXISTS entityIdIdx on entity(id)
CREATE TABLE IF NOT EXISTS entity (id INTEGER PRIMARY KEY AUTOINCREMENT,entityKey TEXT NOT NULL,entityType INTEGER NOT NULL,author TEXT,content TEXT,contentRangeOfInterest TEXT,title TEXT COLLATE NOCASE,timeRangeStart REAL,timeRangeEnd REAL,floatingRange INTEGER,timeRangeStartUTCOffsetSeconds INTEGER,timeRangeEndUTCOffsetSeconds INTEGER,creationTimestamp REAL,updateTimestamp REAL,indexTimestamp REAL,lastSeenTimestamp REAL,tags TEXT,structuredData BLOB,quality REAL,locations BLOB,masterEntityId INTEGER DEFAULT -1,groupId INTEGER DEFAULT -1,state INTEGER DEFAULT 0,contentHash TEXT,downloadState INTEGER DEFAULT 0)
offset %llu outside of bounds (file length %llu)
SGSeekableData.m
Tried to read %llu-%llu from data of length %llu
Error loading %@: %@
endUTCOffsetSeconds
startUTCOffsetSeconds
SimplifyWalker::ShortVisit called
Simplify case not handled: 
Malformed repeat 
Case not handled in ComputeSimple: 
SGTopicExtractionPlugin.m
com.apple.suggestions.plugin.SGTopicExtractionPlugin
ProactiveHarvesting
BiomeHarvesting
<SGCuratedEvent externalId: %@>
externalId
SGCuratedEventKey.m
Bad regexp op 
kRegexpAlternate child_args is NULL
kRegexpStar child_args is NULL
kRegexpQuest child_args is NULL
kRegexpPlus child_args is NULL
kRegexpCapture child_args is NULL
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
Stack not empty.
Bad op in Prefilter::DebugString: 
op%d
*no-matches*
Walk NULL
<SGStorageReminder title:%@ dupKey:%@ dueDate:%@ dueLocation: %@ reminderStatus: %@>
SGStorageReminder failed to create sourceURL from %@
SGStorageReminder.m
:messageId
:uniqueIdentifier
:bundleIdentifier
:terminatedDomainIdentifier
INSERT INTO mailIntelligence_spotlightMapping (messageId, uniqueIdentifier, terminatedDomainIdentifier, bundleIdentifier) VALUES (:messageId, :uniqueIdentifier, :terminatedDomainIdentifier, :bundleIdentifier) ON CONFLICT(bundleIdentifier, uniqueIdentifier) DO UPDATE SET messageId=:messageId, terminatedDomainIdentifier=:terminatedDomainIdentifier
mailIntelligence_spotlightMapping
SELECT id FROM mailIntelligence_spotlightMapping WHERE bundleIdentifier = :bundleIdentifier AND uniqueIdentifier = :uniqueIdentifier
messageId
Expected not null based on sqlite schema
SGSqlEntityStore+SpotlightMapping.m
:domainIdentifierGlob
SELECT messageId FROM mailIntelligence_spotlightMapping WHERE bundleIdentifier = :bundleIdentifier AND terminatedDomainIdentifier GLOB :domainIdentifierGlob
{_PASDBIterAction_=B}16@?0@"_PASSqliteStatement"8
:uniqueIdentifiers
SELECT messageId FROM mailIntelligence_spotlightMapping WHERE uniqueIdentifier IN _pas_nsarray(:uniqueIdentifiers) AND bundleIdentifier = :bundleIdentifier
:limit
SELECT messageId FROM mailIntelligence_spotlightMapping WHERE bundleIdentifier = :bundleIdentifier LIMIT :limit
SELECT messageId FROM mailIntelligence_spotlightMapping WHERE uniqueIdentifier = :uniqueIdentifier AND bundleIdentifier = :bundleIdentifier
SGDNotificationBroadcaster
com.apple.suggestions.remindersDidChange
com.apple.suggestions.eventsDidChange
com.apple.suggestions.contactsDidChange
_timeoutTimer == nil
_transaction != nil
SGXpcTransaction.m
v16@?0@"SGMITrialClientWrapperGuardedData"8
classificationOfflineRecall
classificationOfflinePrecision
classificationThreshold
classificationConfiguration.plist
highRecallFilterFeatureUpperBounds.plist
highRecallFilterFeatureLowerBounds.plist
highRecallFilterFeatureNames.plist
saliencyOverrideFeatureUpperBounds.plist
saliencyOverrideFeatureLowerBounds.plist
saliencyOverrideFeatureNames.plist
modelGroundTruthFeatureUpperBounds.plist
modelGroundTruthFeatureLowerBounds.plist
modelGroundTruthFeatureNames.plist
modelFeatureStandardizationStandardDeviations.plist
modelFeatureStandardizationMeans.plist
modelFeatureNames.plist
model.mlmodelc
assets_130
%@/%@
%@/%@/%@
PROACTIVE_MAIL_INTELLIGENCE_SALIENCY
http://schema.org/%@
http://schema.org/
pseudoContacts
v16@?0@"NSError"8
v32@?0@"NSString"8@"SGContact"16^B24
failed to create a CSCustomAttributeKey for MDItemRelatedAppBundleIdentifier
SGSpotlightContactsAdapter.m
%llu.vcf
Metadata/com.apple.IntelligentSuggestions/
SGSpotlightContactsAdapter-notify
CoreSuggestions-contacts
SignificantPostalAddressForIMessage
SGJSWatchdogTimerCallback
JSContextGroupRelease
/System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore
JSContextGroupSetExecutionTimeLimit
JSStringCopyCFString
JSContextCreateBacktrace
JSVirtualMachine
JSContextGroupCreate
%FT%H:%M:%S
com_apple_mobilesms_lpDescription
com_apple_mobilesms_lpTitle
@16@?0@"SGSimpleNamedEmailAddress"8
SGExtractionDocumentErrorDomain
v32@?0{_NSRange=QQ}8^B24
void *superblockMalloc(int)
Could not allocate memory for mallocRegexp
SGChunkPool.m
void freeRegexp(void *)
Could not deallocate memory from mallocRegexp
<SGWebPageKey source=%@ uniqueIdentifier=%@
@"NSString"24@?0@"SGTaggedCharacterRange"8Q16
B16@?0@"SGTaggedCharacterRange"8
mailIntelligence
persistentID
v16@?0@"BPSCompletion"8
v16@?0@"BMStoreEvent"8
WINDOWLENGTH
LANGUAGE
SGContactSharingTransformer.m
v8@?0
SGAsset-notifications
IPHONE_SIMULATOR_ROOT
common
SGAssetIdentifier
suggestionsassets
Assets
/System/Library/AssetTypeDescriptors/com.apple.MobileAsset.AssetTypeDescriptor.CoreSuggestionsAssets.plist
:primaryKey
SELECT name FROM eventTags WHERE id = :primaryKey
INSERT INTO eventTags (name) VALUES (:name)
:name
_addEKEventToCalendar
v24@?0@"EKEvent"8^B16
@"EKEvent"16@?0@"EKEvent"8
SGEKCalendarAdapter.m
significantWork
componentName
reason
SGSqliteDatabaseError
PRAGMA journal_mode
. Free space (rounded to 1 significant digit): %@ bytes
. May be due to previous POSIX error %@
 (SQL: %@)
Error(%d): %@
sg_db_corruption_marker
journals
SGDatabaseJournal.executeQueriesOnDatabase
com.apple.suggestions.suggestd
A bogus or corrupt journal file was found and has been cleaned up. Suggestd will relaunch and continue.
SGDatabaseJournalWillRecoverOnNextLaunch
originalException
fullPath
{_PASDBIterAction_=B}16@?0@"NSError"8
DELETE FROM snippets WHERE entityId NOT IN (SELECT id FROM entities.entity)
__query
!_inMemory
SGDatabaseJournal.m
v32@?0@"NSString"8@16^B24
com.apple.suggestions.databasejournal.inmemory
com.apple.suggestions.databasejournal.
Cannot get domain identifier for text message %@
Suppressing non-meaningful text message displayName.
expected coded array %@ to give a new instance of %@ but it didn't
Interaction Person has no identity/handle: %@ / %@
Error fetching contact for identifier '%@': %@
JSON Data is Empty. Nothing to return.
Error: Failed to serialize to JSON
SGURL: urlsFoundBetweenStartDate+bundle query: %f - %f 
SGURL: urlsFoundBetweenStartDate+bundle results: %@
SGURL: written: %@
SGURL: query: %f - %f 
SGURL: urlsFoundBetweenStartDate results: %@
Multiple model names specified to turn on data collection (objective: %lu, language: %@, models: %@.
null date derived from reminder.dueDateComponents is unexpected: %@
SGSQLEntityStore+Reminders: unable to deserialize date components.
SGSQLEntityStore+Reminders: unable to fetch title.
SGWordBoundaryQuickTypeInference - Unexpected label %ld
SGWordBoundaryQuickTypeInference - Invalid model config!
SGWordBoundaryQuickTypeInference - localeIdentifier/language (%@/%@) do not match configured target language (%@)
SGWordBoundaryQuickTypeInference - Unexpected number of confidence thresholds (%ld rather than %ld)
SGWordBoundaryQuickTypeInference - Could not initialize model with config path: %@, bin path: %@
SGWordBoundaryQuickTypeInference - Irrelevant Label predicted with score: %@
SGWordBoundaryQuickTypeInference - Predicted label (%ld) confidence (%@), falls below confidence threshold (%@)!
SGWordBoundaryQuickTypeInference - probable prior prediction of label %ld (score: %@) detected.
SGWordBoundaryQuickTypeInference - objective: %lu, prediction: %ld, score: %@
SGWordBoundaryQuickTypeInference - No name found for thirdparty objective: %ld
SGStructuredEventDocument: Unable to detect %@, missing modelOutput or enrichedTaggedCharacterRanges
SGStructuredEventDocument: Unable to detect startAddress, missing modelOutput or enrichedTaggedCharacterRanges
SGStructuredEventDocument: Unable to detect endDateComponents, missing modelOutput or enrichedTaggedCharacterRanges
SGStructuredEventDocument: Unable to detect startDateComponents, missing modelOutput or enrichedTaggedCharacterRanges
SGStructuredEventDocument: Unable to detect reservationId, missing modelOutput or enrichedTaggedCharacterRanges
SGStructuredEventDocument: Unable to detect title, missing modelOutput or enrichedTaggedCharacterRanges
SGStructuredEventDocument: No title mapping, unsupported category
Unable to load RTRoutineManager
Unable to get LocationsOfInterest: %@
No dueLocation or dueDate, bailing
SGReminderDissector: DueDate in past, bailing
Creating enrichment for Reminder: %@, dueTime: %@, dueLocation: %@
Creating Reminder enrichment
SGReminderDissector - Unknown object encountered while resolving contactId
SGReminderDissector - Could not resolve Contact. Nil contactIdentifier
No groupId found for entity %@
SGReminderDissector: ExtractionModel is nil
SGReminderDissector: Processinglanguage is nil
SGReminderDissector: No model output, bailing
SGReminderDissector: Date is in the past, skipping
SGReminderDissector: Message too short or too long to process or missing conversationIdentifier, bailing
SGReminderDissector: Message is a group chat, bailing
Dissecting Text Message to find reminder
SGReminderDissector: ProcessingLanguage: %@
SGReminderDissector: Message with confirmation found
SGReminderDissector: No modelOutput for previousMessage
SGReminderDissector: Previous message has proposal and question
SGReminderDissector: Found title for reminder %@
SGReminderDissector: Couldn't reject reminder: %@
SGReminderDissector: No previous message
SGReminderDissector: %@
SGReminderDissector: timing(ms): %f
SGReminderDissector: Skipping parts of content that are identified as not plain text
SGReminderDissector: Not model output, bailing
SGEntity: %{public}@ -> SGPipelineEnrichment: %{public}@
SGReminderDissector: detectReminders is OFF
SGReminderDissector: Reminder detection for mail is off
SGReminderDissector: Not processing due to a missing localeAsset. [SGEntity (%{public}@)]
SGReminderDissector: Not processing since PseudoEvent found
SGReminderDissector: Mail has multiple recipients, skipping
SGReminderDissector: Mail is inhuman, skipping
SGReminderDissector: Mail is from mailing list, skipping
SGReminderDissector: Mail is partially downloaded, skipping
SGReminderDissector: Mail is sent, skipping
SGReminderDissector: Mail is older than one week, skipping
SGReminderDissector: Mail is from insignificant sender, skipping
Suggestions failed to dlopen CoreRoutine.
Failed to soft-link CoreRoutine: %s
SGReminderDissector: Unable to load model assets
SGReminderDissector: Unable to load emoji assets
SGReminderDissector: Unable to load verb mapping
SGURLPlugin: deleting URLs from bundleId %@
SGURLPlugin failed to delete URLs from bundleId %@
SGURLPlugin: deleting URLs from %@ for %tu domains
SGURLPlugin failed to delete URLs from %lu groupIds with bundleId %@
SGURLPlugin: deleting URLs from %@ for %tu documents
SGURLPlugin failed to delete URLs from %lu documentIds with bundleId %@
SGURLPlugin: %tu detections on %@
SGURLPlugin: extracting URLs from attributes of %@
SGURLPlugin ignoring item with nil unique identifier
SGURLPlugin: consumeRemindersContentWithContext: notes.length = %tu
Exiting due to SQLite error: %s
Starting ingest of %lu messages
Ending ingest of %lu messages
Pre-warming suggestd
Starting dissection, len=%tu, ctx=%i
Ending dissection, len=%tu, ctx=%i
SGDSuggestManager - Database inconsistency: Found key for reminder hash %@ but reminder is missing
Database inconsistency; found key for event hash %@ but event is missing
SGDSuggestManager: consumeInteractionWithContext: %@
SGDSuggestManager: consumeMessagesContentWithContext
SGDSuggestManager: consumeMailContentWithContext
SGDSuggestManager: deleteDataDerivedFromContentMatchingRequest
SGSuggestManager-foundInStringForRecordId:%@ style:%u called
No entity found for recordId: %@
Entity %{public}@ -> SGStorageReminder %{public}@
SGDSuggestManager-foundInStringForRecordId: unable to format contact name.
SGDSuggestManager-foundInStringForRecordId: error when fetching contact: %@
SGDSuggestManager: Messages: harvestedSuggestionsFromMessages: %tu messages (options %tu)
harvestedSuggestionsFromMessages ignoring item since the bundle is disallowed by user's settings
harvestedSuggestionsFromMessages called with no inputs
SGDSuggestManager: harvestedSuggestionsFromMessages: Suggesting reminder with recordId: %@
SGDSuggestManager: Messages: harvestedSuggestionsFromMessage (deprecated): %@ : %@ options: %tu
SGDSuggestManager: Messages: harvestedSuggestionsFromMessage: %@ : %@ options: %tu
harvestedSuggestionsFromMessage ignoring item since the bundle is disallowed by user's settings
SGDSuggestManager: Mail: suggestionsFromSimpleMailMessage: %@ : %@ options: %tu
SGDSuggestManager: Mail: suggestionsFromEmailContent: %@ options: %tu
SGDSuggestManager: Mail: harvestedSuggestionsFromSearchableItem: %@ : %@ options: %tu
harvestedSuggestionsFromSearchableItem ignoring item since the bundle is disallowed by user's settings
SGDSuggestManager: Mail: suggestionsFromSearchableItem: %@ : %@ options: %tu
SGDSuggestManager: Mail: suggestionsFromSearchableItem was called with an invalid item
suggestionsFromSearchableItem ignoring item since the bundle is disallowed by user's settings
SGDSuggestManager-registerURLFeedback:%d url.length:%tu called
SGDSuggestManager-registerURLFeedback returning %d
SGDSuggestManager-urlsFoundBetweenStartDate:%@ endDate:%@ excludingBundleIdentifiers:%@ containingSubstring:%@ flagFilter:%d limit:%u called
SGDSuggestManager-urlsFoundBetweenStartDate:endDate:excludingBundleIdentifiers:containingSubstring:flagFilter:limit returning %tu URLs
SGDSuggestManager-recentURLsWithLimit:%u called
SGDSuggestManager-recentURLsWithLimit returning %tu URLs
SGDSuggestManager-ipsosMessagesFromSearchableItems
SGDSuggestManager-ipsosMessagesWithSearchableItems
SGDSuggestManager: Dropping aggregated contact for conversation: %@
SGDSuggestManager: Dropping all aggregated contacts
exiting due to daemonExitWithCompletion request
Entity is not a pseudo event
Not logging event interaction for bogus uniqueKey: %@
Attempting to retrieve entity from harvestStore for uniqueKey = %@
Couldn't find Entity with uniqueKey = %@
Caching event from with external identifer = %@.
Event found for Spotlight interaction, but not from Suggestions.
#logUnknownContactInformationShownCount names for detail %@: %lu
SGDSuggestManager-waitForEventWithIdentifier: %@ -toAppearInEventStoreWithLastModificationDate: %@
realtimeSuggestionsFromURL ignoring item since Safari is disallowed by user's settings
Failed to process event suggestion 
 "Show Siri Suggestions" disabled in Calendar.
Failed to process event suggestion 
 you must acknowledge "What's new in Calendar" screen in the Calendar app.
Geocode modified locations, updating enrichment
SGDSuggestManager suggestionsFromURL - Start processing webpage
SGDSuggestManager-suggestionsFromURL: %{sensitive}@ -title: %{sensitive}@ -HTMLPayload length: %lu 
suggestionsFromURL ignoring item since Safari is disallowed by user's settings
SGDSuggestManager suggestionsFromURL: parent entity has %lu enrichment(s) after dissection
Parents entity has %lu enrichements
SGDSuggestManager isEventCandidateForURL: Checking classifier output for webpage
SGDSuggestManager-isEventCandidateForURL: %{sensitive}@ -title: %{sensitive}@
SGDSuggestManager isEventCandidateForURL: end processing because detectStructuredEvents is OFF.
isEventCandidateForURL: %{sensitive}@ -title: %{sensitive}@
SGSuggestionsService isEventCandidateForURL: method called with nil arguments
SGSuggestionsService isEventCandidateForURL: Based on whitelist check, URL is candidate
SGSuggestionsService isEventCandidateForURL: eventCandidate is nil, domain appears not to be whitelisted.
SGDSuggestManager-schemaOrgToEvents
Plugins finished deleting bundle: %@
SGDSuggestManager: deleting spotlight references: %@ : %@
Plugins finished deleting %lu domains from bundle: %@
SGDSuggestManager: Plugins finished deleting %lu items from bundle: %@
Plugins finished purging %lu items from bundle: %@
SGDSuggestManager addInteractions: Encountered INInteraction with nil identifier.
SGDSuggestManager addInteractions: Didn't find any enrichment after dissection of the INInteraction (%{public}@).
Buffered interactions when block was scheduled: %tu, now: %tu
Processing all buffered interactions
Waiting for more interactions to be donated before processing.
SGDSuggestManager: _harvestPeopleFromInteractions: harvesting from %@ %@
Interaction from %@ rejected. Display name is very likely a phone-number or email address.
SGDSuggestManager: _harvestPeopleFromInteractions: harevsted %tu entities
SGDSuggestManager addInteractions: bundleId: %{public}@
SGDSuggestManager addInteractions: Can't add 0 interaction from bundleId: %@
SGDSuggestManager addInteractions: Got %i interactions from nil bundleId! Ignoring.
SGDSuggestManager: addSearchableItemMetadata: failed to deserialize item data.
SGDSuggestManager: addSearchableItemMetadata: %@ is eligible for harvesting.
SGDSuggestManager: addSearchableItemMetadata: %@ is NOT eligible for harvesting.
enqueueSearchableItems
Mail item is recently deleted: %@
SGDSuggestManager enqueueSearchableItems: Mail message %{public}@ domain is whitelisted. Running classifier now.
SGDSuggestManager enqueueSearchableItems: Mail message %{public}@ is candidate for extraction, setting item to high priority and priority criteria to StructuredEventCandidate
SGDSuggestManager enqueueSearchableItems: Mail message %{public}@ doesn't appear to be candidate based on reverse template classifier and therefore do not qualify for SE high priority processing.
SGDSuggestManager enqueueSearchableItems: Mail message %{public}@ domain isn't whitelisted and therefore do not qualify for SE high priority processing.
SGDSuggestManager enqueueSearchableItems: Mail message %{public}@ is older than 2 days old and therefore do not qualify for SE high priority processing.
Error adding item to queue: %@
Error adding deferrable item to low-priority queue: %@
Error adding deferrable item to high-priority queue: %@
SGMISaliencyInference: %@
SGDSuggestManager-rejectContactDetailRecord: %@ %td
SGDSuggestManager-confirmContactDetailRecord: %@ %td
SGDSuggestManager-rejectRecord: %@ %td
SGDSuggestManager-confirmRecord: %@ %td
Confirming details as workaround for Contacts search for contact %@
While confirming/rejecting contact, provided recordId was not contactId: %@ %@
While confirming/rejecting contact detail, failed to load detail for record id: %@
While confirming/rejecting contact detail, requested detail not in loaded contract for record id: %@
SGDSuggestManager-confirmContact: %@
SGDSuggestManager - deleteEventByRecordId: event Id: (%{public}@)
SGDSuggestManager-rejectEventByRecordId: %@
SGDSuggestManager-rejectEvent: %@
SGDSuggestManager-confirmEventByRecordId: %@
SGDSuggestManager-confirmEvent: %@
SGDSuggestManager-launchAppForSuggestedEventUsingLaunchInfo: Error creating application record: %@
SGDSuggestManager-launchAppForSuggestedEventUsingLaunchInfo: Error opening user activity: %@
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: %@
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Event was not found and no fallback URL provided.
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Could not get the entity type.
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Found e-mail for Event Found in Mail on device.
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Could not find e-mail for Event Found in Mail on device but did find fallback URL
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Could not find e-mail for Event Found in Mail on device or fallback URL.
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Can't find a bundleId for entity type: '%lld'
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Could not find an installed bundle id.
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Could not create launch intent for event.
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Found no item references for event with unique id '%@'
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Found no container reference for event with unique id '%@'
SGDSuggestManager-eventFromUniqueId: %@
dupKey: %@
eventFromUniqueId: %@ resulted in dupKey: %@ and event: %@
SGDSuggestManager-resolveFullDownloadRequests
SGDSuggestManager-fullDownloadRequestBatch
SGDSuggestManager-reportMessagesFound
SGDSuggestManager-updateMessages
SGDSuggestManager-messagesToRefreshWithCompletion
Loading messages to refresh.
SGDSuggestManager-contactsBySocialProfile
SGDSuggestManager-contactsByEmailAddress
SGDSuggestManager-namesForDetail
SGDSuggestManager-contactMatchesByPhoneNumber
Entity is from inhuman sender
Contacts after filter, before realtiming, %@
Extracted Realtime contact details about the user and tried to show them in a banner: %@
Extracted a contact with a different handle to the sender: %@
Contact pre-aggregation: %@
Contact post-aggregation: %@
Realtime contacts: %@
Contact: %@, interesting: %i
Error getting realtime contact for %@: %@
EKEvent exact match with the same duplicate key found, but eventIdentifier is nil.
SGDSuggestManager - For [SGEntity %{public}@], Found %d extracted event candidates.
Returning %d realtime events.
New realtime event
Duplicate realtime event
Update realtime event
Cancellation realtime event
Near duplicate realtime event
More than one event found using alternative keys
EKEvent with the same externalIdentifier found, but eventIdentifier is nil.
More than one EKEvent with the same opaque key detected.
EKEvent with the same opaque key found, but eventIdentifier is nil.
EKEvent for cancellation found, but eventIdentifier is nil.
Suppressing update or view duplicate of EKEvent because eventIdentifier is nil.
Suppressing update or view duplicate of EKEvent because event status is canceled.
Newer EKEvent from Suggestions has been found. Showing the updated event insead of this one.
Suppressing NL event because it looks like a near-duplicate of a curated event.
Suppressing NL event because it looks like a duplicate of a recurring curated event.
Suppressing NL event because eventIdentifier is nil.
Suppressing event because we found more than 1 duplicate.
NaturalLanguageEvent Found: Bumping TTL
Skipping extracted event that has already passed.
Suggestions Cache hit: %@
Suggestions Cache hit
Suggestions Cache miss: %@
Suggestions Cache miss
Went from %d to %d suggestions after filtering out already acted-on suggestions
SuggestionsManager getting all Deliveries
SuggestionsManager logging user created reminder title
SuggestionsManager getting reminder title for content
SuggestionsManager getting all Reminders
SGDSuggestManager-alarmTriggeredForRecordId: %@
SGDSuggestManager-rejectRealtimeReminer
SGDSuggestManager - Rejection: Unable to retrieve reminder from the harvest store. Computing and storing hashes only.
SGDSuggestManager-rejectReminderByRecordId: %@
SGDSuggestManager-confirmRealtimeReminder
SGDSuggestManager - Confirmation: Unable to retrieve reminder from the harvest store. Computing and storing hashes only.
SGDSuggestManager-confirmReminderByRecordId: %@
SGDSuggestManager-suggestEventsInFutureLimitTo:%lu
SGDSuggestManager-suggestEventsStartingAt:%@ endingAt:%@ prefix:%@ limitTo:%lu
eventFromRecordId: %@
SGDSuggestManager-suggestEventsStartingAt:%@ endingAt:%@ limitTo:%lu
SGDSuggestManager-allContactsWithSnippets:%@ limitTo:%lu
SGDSuggestManager-contactMatchesWithMessagingPrefix:%@ limitTo:%lu
SGDSuggestManager-contactMatchesWithFullTextSearch:%@ limitTo:%lu
storageContactFromRecordId: %@
cnContactMatchesForRecordIds (%lu ids)
contactFromRecordId: %@
SGDSuggestManager-emailAddressIsSignificant:%@
contactsFromContactIdentifiers (%lu ids)
contactsFromContactIdentifier: %@
Error from CNContactStore contactWithIdentifier: %@
contactsFromContact: %@
clearCachesFully: %i
Warming up suggestions...
Suggestions is already warmed up (as of %0.1f seconds ago)
Warmed up suggestions in %0.2f ms and found %i enrichments
SGDSuggestionsManager going away now, bye!
SGDSuggestManager has no entity store and cannot continue
SGDSuggestManager: contentAdmissionBlocklistDidChange: called with %tu bundles
clearing lastSuggestionsFromMessage cache due to settings change
SGDSuggestManager failed to clear caches following an asset update: %@
Could not clear CNContactStore change history due to: %@
Could not fetch CNChangeHistory due to: %@
CNChangeHistory truncated, clearing entire cache
Change history item: <type: %ld, identifier: %@>
Bucket matching deleted contact %@ removed from requestCache
Error constructing data detector for featurizing: %@
SGMIDailyActivity: Mail saliency detection is off. Will not proceed with daily activity tasks.
SGMIDailyActivity Starting Task #1/2: SGMISubmodelUpdater rebuildSubmodelsIfNecessary & updateSubmodels
SGMIDailyActivity Finished Task #1/2: SGMISubmodelUpdater updateSubmodelsRebuildingIfNecessary
SGMIDailyActivity Starting Task #2/2: Logging SGMIMetricsPerformanceInformation
SGMIDailyActivity Finished Task #2/2: Logging SGMIMetricsPerformanceInformation
File too small!
Checksum didn't match
Plist length invalid -- extends beyond beginning of file!
Could not parse plist!
Missing version!
Unsupported version!
Could not decompress buffer!
Could not open file for writing. errno = %i
Invalid queue file: %@
Work item was not finished when dealloc'd
Can't pop by nil id
Max queue length reached. Discarding new email!
Deleting queue item with nonconforming filename: %s
Could not close harvest queue directory. errno = %i
Error initializing compression stream
Error destroying compression stream
SGStructuredEventExtractionModel: Unable to get URL for Gazetteer
SGPOSTagger: Unable to create gazetteer %@
SGStructuredEventExtractionModel: No configuration loaded
SGStructuredEventExtractionModel: Loading model from trial override at path: %@
Unable to load model from URL: %@
SGStructuredEventExtractionModel: No input or output mapping
Preparing Structured Event model inference
SGStructuredEventExtractionModel: Model initialization failed
Model input feature construction failed.
Model inference failed: %@
Model inference done in %f
Unable to convert to instantiate SGExtractionModelCoreMLFeatureWrapper
Prefilter tree stack overflow
Prefilter tree stack underflow
addSearchableItemsData:drain
Now checking if we have any outstanding candidates in the queue we could process on our extra budget.
canDoExtraDiscretionaryWork. Starting to drain the queue with SGDrainQueuePriorityOptionStructuredEventCandidates
Continuing to drain harvest queue with StructuredEventCandidates option on extra budget
Immediate processing not admissible.
Performing immediate processing of up to %li items
Re-checking admissibility; result = %i
SGSimpleMailMessage %@ appears to be a sent email not in the sent mail folder, so it will be dropped from the dissector pipeline.
SGSimpleMailMessage %@ has been processed without dissection, so it will be dropped from the dissector pipeline.
SGTextMessage %@ has been processed without dissection, so it will be dropped from the dissector pipeline.
Tombstone exists for queued item; deleting.
Plugins finished CSSI processing via CTS: %@
Dissector pipeline ignoring %@
text message CSSI %@ has no authors
text message CSSI %@ has no accountIdentifier
Unhandled CSSI %@ from %@ in -[SGDManagerForCTS processSearchableItem:pipeline:context:]
Plugins finished async CSSI processing via CTS: %@
drainHarvestQueue about to perform initial attempt to obtain harvest semaphore
drainHarvestQueue is still waiting for harvest semaphore -- about to check keepgoing()
drainHarvestQueue -- keepgoing() returned true, will continue waiting for semaphore
drainHarvestQueue -- keepgoing() returned false while waiting for semaphore. Bailing before doing any dissection.
drainHarvestQueue obtained harvest semaphore
Processed %i items from %@
Cleared out work queue. Potentially clearing tombstones...
clearAllTombstonesForSpotlightReferencesIf: ...harvestQueue.count is %tu
processing %@ item: %@ : %@
finished processing %@ item: %@ : %@ (dissected: %s) %@
Couldn't handle workqueue item: %@
[HarvestedURLMetric] Can not access entity store. Waiting for later.
[HarvestedURLMetric] Performing harvested URL metric upload CTS job.
[HarvestedURLMetric] Got %tu URL(s) in the store.
[HarvestedURLMetric] Deferring for later right after getting URLs
[HarvestedURLMetric] Deferring for later while enumerating URLs
[HarvestedURLMetric] payload: %@
[HarvestedURLMetric] Done with harvested URL metric upload CTS job.
[HarvestedURLMetric] Registering for harvested URL metrics upload task with CTS
SGDManagerForCTS _performMailIntelligenceTasksActivity: Starting CTS job for Mail Intelligence Tasks
Registering for mail event aggregation processing with CTS
SGDManagerForCTS _performProcessPendingVerificationActivity: Starting CTS job for document verification.
SGDManagerForCTS _performProcessPendingVerificationActivity: Deferring CTS document verification for [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: Could not defer CTS document verification for [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: Entity pending source verificaiton did not have an email entity key. [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: Entity pending source verificaiton did not have a message ID. [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: Starting CTS document verification for [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: Could not obtain a lock for document verification.
SGDManagerForCTS _performProcessPendingVerificationActivity: Successfully verified DKIM signature. [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: DKIM verification resulted in permanent failure: %@. [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: DKIM verification resulted in temporary failure for 2nd time. Treating as permanent failure: %@. [SGEntity (%{public}@)]
Registering for pending-verification processing with CTS
Deferring remaining geocodes for later
Invalid state transition to DEFER
Registering for pending-geocode processing with CTS
Deferring CD cache rebuild
Registering for contact detail cache rebuilding with CTS
Registering for RTC log sending with CTS
Registering for identity analysis with CTS
Vacuuming the database
Pruning entities more than a year old
NOT pruning entities more than a year old, due to preference setting.
Performing background harvest
Background processed %i items
Deferring harvest for later
Could not complete harvest - processing low priority items on battery
Could not begin harvest due to no budget
Could not complete harvest due to insufficient budget
Registering for CTS activity: com.apple.suggestions.harvest
Can not harvest items until first unlock. Waiting for later.
registering _registerForCollectWeeklyStats
CoreSuggestionsAssets metadata download - marking activity as done
CoreSuggestionsAssets metadata download success? %d
CoreSuggestionsModelAssets metadata download success? %d
Registering for MobileAsset metadata download with CTS
HighLevel Topic Extraction beginning for text...
HighLevel Topic Extraction completed for text
topicId: %@, score: %f
SGTopicDissector detected %lu topics with algorithm "%@".
SGTopicDissector detected %lu named entities with algorithm "%@".
  QID: %@
SGTopicDissector message is inhuman
SGTopicDissector suppressing dissection due to nil bundleId
SGTopicDissector suppressing dissection of message from %@ with nil uniqueId
SGTopicDissector suppressing dissection of message from %@ with nil message date
SGTopicDissector suppressing dissection of message because sender is not significant
SGTopicDissector sender is not significant
SGTopicDissector: message is outgoing
Timeout waiting for ContextKit response.
ContextKit error: %@
nil or empty results received from ContextKit
got %lu results from ContextKit
ContextKit debug info: %@
ignoring excessive results returned from ContextKit.
processed %lu results from ContextKit
Exceeded time limit to process ContextKit extractions. Stopping.
ContextKit title: %@, qid: %@, category: %@
Skipping calendar attachment dissector: detectStructuredEvents is OFF
Message with %lu attachments (%lu downloaded ics)
Error when reading attachment at %@:
Error when instantiating ICSDocument for attachment at %@:
Found event
Failed to parse event from ics attachment.
Ignoring event with the request method in an ics attachment from a shared calendar provider.
Ignoring event that has the same UID as another event in the same ics attachment.
Ignoring attachments because a structured event already found
sending deletion of bundle %@ to plugin %@
sending deletion of %lu domains from %@ to plugin %@
sending deletion of %lu items from %@ to plugin %@
sending purge of %lu items from %@ to plugin %@
Sending processing of interaction %@ from %@ to %@
Sending processing of %@ %@ from %@ to plugin %@
Plugin reported error: %@: %@
Error during %@ setup: %@
Plugin %@ requesting historical data: %@
Failed to fetch CalDAV accounts: %@
Calendar accounts updated: %@
Refreshing due to account change: %@
Filtering account change that we don't care about: %@
Unable to load metadata from reminder with id: %@ error: %@
Unable to delete reminder in ReminderKit error: %@
Unable to load RemindersFoundInApps list
Unable to serialize ReminderMetadata: %@
Saving Reminder with universal link: %@
Unable to save reminder in ReminderKit error: %@
Multiple reminders linked to one storage reminder
Didn't find any REMReminders to reject
SGRemindersAdapter: Removing pseudo reminder because of parent deletion
SGRemindersAdapter: Rejecting reminder from other device
SGRemindersAdapter: Confirming reminder from other device
SGRemindersAdapter: alarm triggered from this device
SGRemindersAdapter: Not removing reminder since it's an allDay reminder
SGRemindersAdapter: Rejecting reminder
SGRemindersAdapter: Confirming reminder
SGRemindersAdapter: Not adding reminder that has dueDate in the past
SGRemindersAdapter: PseudoReminder found in Found in Apps list, not adding
SGRemindersAdapter: Duplicate found in user defined list, not adding
SGRemindersAdapter: Adding Reminder with recordId: %@
Reminder is not a valid new one, already exists in SGSuggestHistory
SGRemindersAdapter - [SGStorageReminder (%{public}@)] constructNotesForReminder: Unable to fetch contact: %{public}@
SGRemindersAdapter: Duplicate reminder found based on exact title match
SGRemindersAdapter: Duplicate reminder found based on dueDate and edit distance of title
Unable to retrieve found in apps list: %@
SGMISaliencyInference: Mail %@ is a sent mail
SGMISaliencyInference: Error - config shouldn't be nil when inferencing saliency
SGMISaliencyInference: Override rule match for message ID: %@
SGMISaliencyInference: No submodels for message ID: %@
SGMISaliencyInference: High recall filter / pre-filter active for message ID: %@
SGMISaliencyInference: Performing saliency inference for e-mail message.
Self-id: Skipping - outgoing message
Self-id: looking for pattern match in: "%@"
Self-id: Found NO name to extract from candidate "%@"
Self-id: Extracted name "%@" from candidate "%@"
Self-id: Extracted partial name "%@" from candidate "%@"
Self-id: Not-a-known-name "%@" word in candidate "%@"
SGNamedEntityDissector message is inhuman
SGNamedEntityDissector suppressing dissection due to nil bundleId
SGNamedEntityDissector suppressing dissection of message from %@ with nil uniqueId
SGNamedEntityDissector suppressing dissection of message from %@ with nil message date
SGNamedEntityDissector suppressing dissection of message because sender is not significant
SGNamedEntityDissector sender is not significant
SGNamedEntityDissector dissecting %@ from %@
SGNamedEntityDissector: attempted to dissect empty text. Skipping.
SGNamedEntityDissector: message is outgoing
SGNamedEntityDissector: processing plain text content of length %tu
SGNamedEntityDissector: processing subject of length %tu
SGNamedEntityDissector: entitiesInPlainText detected %lu entities with algorithm "%@".
   category: %@
       name: %@
SGNamedEntityDissector: entitiesInPlainText detected %lu topics with algorithm "%@".
  %@
SGNamedEntityDissector resetting gazetteer based on an asset update.
Tagging as inhuman: Body
Tagging as human: Headers
Ignoring invalid email: %s
Unknown SGMessage subclass
Message-Id header not found. Using hash: %@
Skipping setAuthor: detectContacts is OFF
Argument must be of type SGRealtimeContact or SGRealtimeEvent, but was %@
Rejecting reminder with opaqueKey %@
Confirming reminder with opaqueKey %@
Rejecting storage event %@
Rejecting event %@
Confirming storage event %@
Confirming event %@
Rejecting contact %@
Don't know how to deal with this realtime contact state (state = %i)
Confirming or rejecting contact %@
Confirming or rejecting record for contact %@
Suggestions history synced data change, reason=%i
Resetting history due to a KVS reset event within %g sec time window.
Suppressing KVS history reset because time window has expired.
SGSuggestHistory - Receive updated confirmed event hashes (%{public}lu total, %{public}lu new)
SGSuggestHistory - Receive updated rejected event hashes (%{public}lu total, %{public}lu new)
SGSuggestHistory - Receive updated confirmed event field hashes (%{public}lu total)
SGSuggestHistory - Receive updated confirmed event field without timestamp hashes (%{public}lu total)
SGSuggestHistory - Receive updated confirmed reminder hashes (%{public}lu total, %{public}lu new)
SGSuggestHistory - Receive updated rejected reminder hashes (%{public}lu total %lu new)
Receive updated contact hashes (%lu total)
Receive updated storage detail hashes (%lu total)
Receive updated don't-update hashes (%lu total)
KVS account change
Exceeded iCloud key value storage quota. Can't store any more acted on suggestions.
Resetting suggestions history
SGCK newSaltFuture failed to immediately complete. Will use classic hashes.
SGCK newSaltFuture completed immediately
SGCK Error retrieving salt for hashing (will use classic hashes): %@
SGCK Manatee salt not supported -- falling back to classic hashes
SGCK will use modern hashes
SGCK modernHashesForClassicHashes was passed a hash that is already modern
Pushing reset info (generation %lu, timestamp %.1f)
Pushing do-not-update set with %i items
Pushing storage details set with %i items
Pushing contacts set with %i items
Pushing confirmed event without timestamp fields set with %i items
Pushing confirmed event fields set with %i items
Pushing rejected reminders set with %i items
Pushing confirmed reminders set with %i items
Pushing rejected events set with %i items
Pushing confirmed events without timestamp set with %i items
Pushing confirmed events set with %i items
Empty or corrupt resetInfo
SGSuggestHistory is a no-op with kvs == nil!
Something went wrong with trying to synchronize icloud store
Suppressing cloud sync. This should happen in testing only.
Error opening file %@ at base path: %@
Lossy conversion. Detected charset: %ld (expected: %ld)
Found %i DD sigs for same person. Using sig %i with %i subresults
Error initializing SGMIAttachmentSizeHistogram with numberArray: %@
Got nil name
SGSpotlightWritebackDissector: Storing uncached extraction with score of 0
SGSpotlightWritebackDissector: Querying Portrait for %lu extracted named entities
SGSpotlightWritebackDissector: Error querying portrait for NEs: %@
SGSpotlightWritebackDissector: %lu named entities to query
SGSpotlightWritebackDissector: Terminating processing of scored portrait NEs scoring lower than %f
SGSpotlightWritebackDissector: excludeMessageFromPortrait: %d
SGSpotlightWritebackDissector: Removing extraction from inhuman message: %@
SGSpotlightWritebackDissector: Removing extraction from message because sender is not signficant: %@
SGSpotlightWritebackDissector: namedEntityPriorityQueue contains %f items
SGSpotlightWritebackDissector: namedEntityScores contains %tu items
SGSpotlightWritebackDissector: spotlightIndexScore of %g for CSSI item %@ from %@
SGSpotlightWritebackDissector: Error indexing updated CSSI: %@
SGSpotlightWritebackDissector: Error indexing ending updated CSSI batch: %@
SGSpotlightWritebackDissector dissectTextMessage
SGSpotlightWritebackDissector dissectMailMessage
SGExtractionModel: Couldn't delete model file: %@
Unable to map output to label
Found no Lemma input when trying to extend output label to sequence length.
featureDimensionForInputSection: Model doesn't have description for inputSection: %@
inputDictFromTaggedCharacterRanges: '' not present for inputSection: %@
Unable to create input MLMultiArray: %@
Unable to load plplist content for %@: %@
Unable to resolve path: %@
SGExtractioNModel: Unable to find URL for model
Starting identity blob analysis.
Blob analysis complete.
Blob analysis deferring.
Could not defer blob analysis.
Failed to encode mergeBlob: %@
Can't create interdicts for blob of size %lu; skipping.
Merge group containing %lu names exceeds limit of %lu; skipping interdict construction.
Merge group mapping to %lu CNContacts exceeds limit of %lu; skipping interdict construction.
Sqlite error while rebuilding identity tables: %@
Pausing death for %i objects
Reinstating death for %i objects
Loading pattern data from path "%@"
Loading pattern plist, path: %@
Loading pattern pldat, path: %@
SGNamedEntityExtractionPlugin: deleting all named entities and locations from %@
SGNamedEntityPlugin failed to delete named entities from all documents with bundleId %@: %@
SGNamedEntityPlugin failed to delete locations from all documents with bundleId %@: %@
SGNamedEntityExtractionPlugin: deleting named entities and locations from %@ for %tu domains: %@
SGNamedEntityPlugin failed to delete named entities from %lu groupIds with bundleId %@: %@
SGNamedEntityPlugin failed to delete locations from %lu groupIds with bundleId %@: %@
SGNamedEntityExtractionPlugin: deleting named entities and locations from %@ for %tu documents: %@
SGNamedEntityPlugin failed to delete named entities from %lu documentIds with bundleId %@: %@
SGNamedEntityPlugin failed to delete locations from %lu documentIds with bundleId %@: %@
SGNamedEntityExtractionPlugin: attempting to harvest Podcasts intent
SGNamedEntityExtractionPlugin: ignoring Podcast intent since it is not an INPlayMediaIntent
SGNamedEntityExtractionPlugin: Named Entities and scores: %@
SGNamedEntityExtractionPlugin failed to donate Podcasts interaction named entities: %@
SGNamedEntityExtractionPlugin: completed harvesting %tu named entities from Podcasts for interaction: %@
SGNamedEntityExtractionPlugin: failed to flush Podcast donations: %@
PPNamedEntityPlugin: attempting to harvest Maps intent
PPNamedEntityPlugin: ignoring Maps intent since it isn't a generic intent with parameters
PPNamedEntityPlugin: ignoring Maps intent since the parameters do not look like an array
PPNamedEntityPlugin: Maps intent parameter count: %tu
PPNamedEntityPlugin: ignoring Maps intent property since it is missing role and/or payload
PPNamedEntityPlugin: harvested %tu entities from Maps intent
PPNamedEntityPlugin: failed to donate Maps intent entities to named entity store: %@
PPNamedEntityPlugin: failed to flush Maps donations: %@
SGNamedEntityPlugin: entityContainersForUserActivity: blocking NSUA from %@
SGNamedEntityPlugin: entityContainersForUserActivity: %@: text content length: %tu
SGNamedEntityPlugin: entityContainersForUserActivity: text extractions: %@ 
SGNamedEntityPlugin received user action from %@
Replacing NSUA uniqueIdentifier: %@ with relatedUniqueIdentifier: %@
SGNamedEntityPlugin suppressing NSUA with missing fields
SGNamedEntityPlugin failed to fetch user activity: %@
SGNamedEntityPlugin found no MKMapItem in NSUA %@.
SGNamedEntityPlugin failed to deserialize MKMapItem dict: %@
SGNamedEntityPlugin found location name from MapItem data in NSUA: %@
SGNamedEntityPlugin found street address in NSUA: %@
SGNamedEntityPlugin processing CSSI with missing textContent
SGNamedEntityPlugin generated empty content string for CSSI
SGNamedEntityPlugin processing text content of length: %tu
SGNamedEntityPlugin: %@ from %@ is accepted.
SGNamedEntityPlugin: %@ from %@ is rejected.
SGNamedEntityPlugin received interaction from %@
SGNamedEntityPlugin: processUserAction got %tu containers from %@
SGNamedEntityPlugin: processTextContentItem got %tu containers from %@
SGNamedEntityPlugin: consumeSearchableUserActivityWithContext: %@: %@
SGNamedEntityPlugin: consumeSearchableUserActivityWithContext: got %tu containers from %@
SGNamedEntityPlugin: consumeUserActivityMetadataWithContext: %@: %@ - ignoring until 74452163.
SGNamedEntityPlugin: consumeInteractionWithContext: received interaction from %@
SGNamedEntityPlugin skipping Interaction from %@ due to missing identifier
SGNamedEntityPlugin blocking Interaction from %@
SGNamedEntityPlugin: _consumeContentParts got 0 parts for %@
SGNamedEntityPlugin: _consumeContentParts got %tu containers from %@
SGNamedEntityExtractionPlugin: consumeThirdPartyAppContentWithContext: not relevant.
SGNamedEntityPlugin: consumeThirdPartyAppContentWithContext: content.length = %tu
SGNamedEntityExtractionPlugin: consumeSafariContentWithContext: not relevant.
SGNamedEntityPlugin: consumeSafariContentWithContext: content.length = %tu
SGNamedEntityExtractionPlugin: consumeRemindersContentWithContext: not relevant.
SGNamedEntityPlugin: consumeRemindersContentWithContext: notes.length = %tu
SGNamedEntityExtractionPlugin: consumeNotesContentWithContext: not relevant.
SGNamedEntityPlugin: consumeNotesContentWithContext: content.length = %tu
SGNamedEntityExtractionPlugin: consumeNewsArticleViewsWithContext: not relevant.
SGNamedEntityPlugin: consumeNewsArticleViewsWithContext: content.length = %tu
Quick responses: No likely language prediction for conversation
Quick responses: Text message has no conversation identifier
Quick responses: processing is disabled for group messages
Quick responses: response message is much too long for labeling or DP reporting
Quick responses: processing requires at least two text messages
Quick responses: No model available for language: %@
Quick responses: processing requires the prompt and reply to have a single sender handle
Quick responses: processing requires the reply to be to a different person's prompt
Quick responses: processing requires the prompt and the reply to have text content
Quick responses: processing requires the prompt to be no more than %lu characters in length
Quick responses: using dynamic label with unique identifier %@
Quick responses: not keeping response message because it is greater than %lu characters in length
Quick responses: labeler failed to offer positive or negative label in language %@
Quick responses: dropping sample with label %@
Quick responses: keeping sample with label %@
Quick responses: not adding session for training - localTraining %d, spotlightReference %d, vector %d, sessionDescriptor %d, version: %@
Range {%tu, %tu} out of bounds; string length: %tu
SGMISaliencyModelConfig: Error in processing outstanding saliency rules.
SGMISaliencyModelConfig: Error in processing high recall filter rules.
SGMISaliencyModelConfig: Error, mean for feature standardization is nil.
SGMISaliencyModelConfig: Error in processing ground truth estimation rules.
SGMISaliencyModelConfig: Error, classification threshold is nil.
SGMISaliencyModelConfig: Could not process rule set; name array from Trial is nil.
SGMISaliencyModelConfig: Could not process rule set; lower bound array from Trial is nil.
SGMISaliencyModelConfig: Could not process rule set; upper bound array from Trial is nil.
SGMISaliencyModelConfig: Unexpected feature %@
SGLowMemoryContactEnumeration got an error from Spotlight: %@
SGLexicon: Unable to load lexicon, %@
SGLexicon: non utf-8 token passed
Could not load nicknames from %@: %@
SGContactsInterface: CNPhoneNumber initWithStringValue returned nil
Unsupported handleType: %@
Error enumerating contacts: %@
Unexpected object returned from Contact Store: %@ Retrieved From %@
Expecting NSString for airportName but found something else: %@. Asset version = %lu
No airports found in common
Could not get airport code for airport "%@" from flights %@ on carrier %@ because they do not have at least 1 airport in common
Skipping levenshtein for airport "%@" flights %@ on carrier %@ because they have exactly one airport in common: %@
Invalid model string: %s
Unknown model class: %s
Unknown model name: %s
Failed to locate assets resource %s
Loading model {entity: %s, type: %s, language: %s, version: %tu, path: %s}
Failed to load model chunk file resource %s
Model loaded.
More than one prediction model specified for objective %lu, language: %@, models: %@
Failed to load model (objective: %lu, langauge: %@, name: %@)
No prediction model specified for objective %lu, language: %@
Rotating bloom filters
Could not move %@ to %@: errno=%i
Could not unlink %@: errno=%i
Could not open Bloom filter file. errno = %i
Could not mmap Bloom filter file. errno = %i
Error listing contents of directory %@: %@
Could not unlink %@ while rotating: errno=%i
Error decoding null message.textContent in %@:
Quick responses: A conversation must have more than 2 messages for a prompt; returning prompt as nil
Quick responses: Most recent message is not a response to a prompt
Could not remove %@: errno=%i: %s
Could not read from journal file %@: errno=%i: %s
Journal file has invalid magic number: expected 0x%x, got 0x%x: %@
Journal file truncated: %@
Journal file checksum mismatch: %@: %u / %u
Could not write to journal file %@: errno=%i: %s
Could not open %@: errno=%i: %s
Could not fstat %@: errno=%i: %s
No inputTokenMapping found
No output configuration found.
Preparing model inference
Model initialization failed
Unable to load model features.
SGReminderExtractionModel: Loading model from trial override at path: %@
Persisting some logs to disk!
Couldn't create the privacy-aware store for Suggestions.
RTCLogging: Sending privacy-aware suggestions log over the network
RTCLogging: No RTC logs to send this time. Skipping.
RTCLogging: Selected logs (%lu): %@
RTCLogging: No RTC backends found, no logs will be sent at this time.
RTCLogging: Unable to send logs: %@
RTCLogging: Unable to send logs for storeAge: %@
RTCLogging: Unable to flush logs
RTCLogging: entity can't be found
RTCLogging: entity.duplicateKey.entityKey serialization failed
RTCLogging: logging interaction to RTC for interactionKey: %@, eventKey: %@
RTCLogging: log extraction (%@) to RTC for templateName: %@ timingProcessing: %llu
RTCLogging: log new interaction: %@
RTCLogging: log new interaction summary: %@
RTCLogging: log and increment interaction key: %@, for eventKey: %@
RTCLogging: can't find eventKey in loggedInteractionsSummary dictionary
RTCLogging: usageMaps: %@, (%@ Maps launch in past 2 weeks)
RTCLogging: usageCalendar: %@, (%@ Calendar events found)
SGRTCLogging going away now
Attempt to read stored logs
Corrupted persistent logging store! Removing corrupted store.
Exception we're not catching
New logging store
error during reimportRequestDBStats query of reimportItems: %@
error during reimportRequestDBStats query of reimportRequests: %@
failed to delete orphaned reimport items: %@
failed to delete completed reimport requests: %@
failed to delete reimport requests older than: %@: %@
failed to load unseen reimport items for request: %llu: %@
failed to load unqueried reimport requests: %@
failed to update reimport uniqueId item from %@ to %@: %@
failed to mark reimport item %@/%@ as seen: %@
failed to mark %tu reimport items for %@ as seen: %@
failed to mark reimport request %llu as executed: %@
failed to mark reimport request %llu as queried: %@
failed to store reimport request: %@: %@
Ignoring CTS criteria change as it didn't change.
Setting CTS criteria for activity: %@, criteria: %@
Activity "%s" has not registered with the system yet. Returning nil.
Already registered for activities
Checking in for activity %s
Stub activity called for %s
Failed to soft-link JavaScriptCore: %s
SGReverseTemplateJS payloadToOutputWithEntryPoint: Tried to call messageToOutput without JS assets
SGReverseTemplateJS: Calling payloadToOutput with entry point: %@
SGReverseTemplateJS payloadToOutputWithEntryPoint: JS exception during messageToOutput: %@
SGReverseTemplateJS: Tried to call reverseMapEntity without JS assets
SGReverseTemplateJS: Unable to convert JS taggedCharacterRange to Objective-C
SGReverseTemplateJS: JS Exception during reverseMapEntity %@
SGReverseTemplateJS: Calling JS to merge schemas
Tried to call mergeSchemas without JS assets
SGReverseTemplateJS: Called mergeSchemasArrays with result: %@
SGReverseTemplateJS _mergeSchemas: JS Exception during mergeSchemasArrays: %@
SGReverseTemplateJS: Calling JS to diff schemas
Tried to call diffSchemas without JS assets
SGReverseTemplateJS: Called diffSchemasArrays with result: %@
SGReverseTemplateJS _diffSchemas: JS Exception during diffSchemasArrays: %@
SGReverseTemplateJS: Calling JS to get privacy aware logging
Tried to call getPrivacyAwareMlLogs without JS assets
SGReverseTemplateJS: Called getPrivacyAwareMlLogs with result: %@
SGReverseTemplateJS: JS Exception during getPrivacyAwareMlLogs: %@
SGReverseTemplateJS: Calling JS to resolve candidates
Tried to call resolveCandidatesForJSDict without JS assets
SGReverseTemplateJS: Called resolveCandidatesForJSDict with result: %@
SGReverseTemplateJS: JS Exception during resolveCandidatesForJSDict: %@
SGReverseTemplateJS: Calling js for event classification
Tried to call eventClassificationForEntity without JS assets
SGReverseTemplateJS: Called eventClassificationForEntity with result: %@
SGReverseTemplateJS _eventClassificationForEntity: JS Exception during eventClassificationForEntity: %@
Tried to call shouldDownloadFull without JS assets
Called shouldDownloadFull with result = %d
JS exception during shouldDownloadFull: %@.
SGReverseTemplateJS loadJSFromASCIIFile: no file defined.
SGReverseTemplateJS loadJSFromASCIIFile: Error loading JS file %@: %@
SGReverseTemplateJS flightInformationWithAirlineCode: Can't get flightInformation, airlineCode is nil
SGReverseTemplateJS flightInformationWithAirlineCode: Can't get flightInformation, flightNumber is nil
SGReverseTemplateJS flightInformationWithAirlineCode: Can't get flightInformation, flightDate is nil
SGReverseTemplateJS flightInformationWithAirlineCode: Can't get flightInformation, flightDate is malformed
SGReverseTemplateJS flightInformationWithAirlineCode: bundleIdentifier is undefined.
SGReverseTemplateJS flightInformationWithAirlineCode: CoreParsec results for: %@, %@, %@ = %@
flightInformationWithAirlineCode flightInformationWithAirlineCode: error when calling CoreParsec for: %@, %@, %@ = %@
Could not load data asset %@: %@
SGReverseTemplateJS: completed initialization of JS context.
Can't get flightInformation, airlineCode is nil
Can't get flightInformation, flightNumber is nil
Can't get flightInformation, flightDate is nil
Can't get flightInformation, could not parse flightDate
%{public}@
JS log: %@
SGReverseTemplateJS: loading %@ in JS context.
SGReverseTemplateJS: freeing JS context.
SGReverseTemplateJS: initialized JS context.
Javascript execution timed out! Backtrace:
SGReverseTemplateJS: Received %@ notification.
SGReverseTemplateJS: suppressed process memory warning %lu times
SGReverseTemplateJS: Queuing request to free JS context.
SGReverseTemplateJS: Asset version = %lu
SGReverseTemplateJS: List of loaded JS files in context = %@
SGStructuredEventTrialClientWrapper: foundInMailNotifications: %@
SGStructuredEventTrialClientWrapper: structuredEventOutputMapping list loaded with Trial: %@
SGStructuredEventTrialClientWrapper: structuredEventInputMapping list loaded with Trial: %@
SGStructuredEventTrialClientWrapper: engineConfig list loaded with Trial: %@
SGStructuredEventTrialClientWrapper: supportedProviders list loaded with Trial: %@
SGStructuredEventTrialClientWrapper: Updating factors
SGStructuredEventTrialClientWrapper: Unable to load plplist for %@ : %@
SGStructuredEventTrialClientWrapper: Unable to load plplist content for %@: %@
SGStructuredEventTrialClientWrapper: TRILevel is nil for foundInMailNotifications
Called to vacuum %tu pages
performing FULL VACUUM to make INCREMENTAL effected for db: %@
performing INCREMENTAL VACUUM to free %lu pages with %@ iterations for db: %@
Performing incremental vacuum for %tu pages on iteration %d for total pages to free %tu
We have a vacuum activity %@ with activity state %@ after %@ batches
We got back that we should defer the vacuuming activity after %@ iterations and having vacuumed %@ pages with deferral success %@
failed to incremental vacuum db: %@. error: %@
failed to vacuum db: %@. error: %@
failed to set auto_vacuum to INCREMENTAL for db: %@. error: %@
failed to get auto-vacuum mode from db: %@. error: %@
Calculating pages to vacuum -- pageCount %tu freeCount %tu
not enough pages to vacuum: pageCount: %lu; freeCount: %lu
failed to get freelist_count from db: %@. error: %@
failed to get page_count from db: %@. error: %@
Write statement should be run in a write transaction: %s
This query was delayed %0.2f ms waiting for db file locked by another sqlite connection: %s
This query was delayed %0.2f ms waiting for db file locked by another sqlite connection -- unknown SQL
Unable to change SQLite lookaside configuration.
Could not install hasInhumanTag() sqlite function (rc = %i)
Could not install tagsHaveEscapedTag() sqlite function (rc = %i)
Could not install delimitedString() sqlite function (rc = %i)
Could not install firstStringAfterPrefix() sqlite function (rc = %i)
Sqlite could not install busy timeout. (rc = %i)
Sqlite could not install busy handler. (rc = %i)
unable to set auto_vacuum to INCREMENTAL: %@
SGStructuredEventDissector: no extraction model inferences.
SGStructuredEventDissector: No sender for mailMessage, bailing
SGStructuredEventDissector: extractionSupported: %@, shadowExtraction: %@
SGStructuredEventDissector: Skipping reverse template dissector: detectStructuredEventsML is OFF and provider is not in whitelist
SGStructuredEventDissector: ignoring email
SGStructuredEventDissector: Entity has no content
SGStructuredEventDissector: Previous dissector found event, bailing
SGStructuredEventDissector: skipping shadowLogging extraction for realtime dissection
SGStructuredEventDissector: eventClassification is nil, bailing
SGStructuredEventDissector: Not classified as event, bailing
SGStructuredEventDissector eventClassification: %@
SGStructuredEventDissector: Preprocessed document is nil
SGStructuredEventDissector: Empty enrichedTaggedCharacterRanges
SGStructuredEventDissector: Event found, adding shadow log
SGStructuredEventDissector: Event found, adding ML log and enrichment
SGStructuredEventDissector: annotateContent: empty content or string passed
SGStructuredEventDissector: annotateContent: nil label passed
SGStructuredEventDissector: annotateContent: Unable to create taggedCharacterRange from result
SGStructuredEventDissector: No name for missing entity
SGStructuredEventDissector: nil domParserResult
SGStructuredEventDissector: Missing entities for restaurant extraction: %@
SGStructuredEventDissector: Missing entities for hotel extraction: %@
SGStructuredEventDissector: Missing entities for ticket extraction: %@
SGStructuredEventDissector: Missing entities for car extraction: %@
SGStructuredEventDissector: Missing entities for movie extraction: %@
Failed to convert object to JSON: %@
SGStructuredEventDissector: Added enrichment
SGScales: %@ took %f seconds
Retrieved location with latitude and longitude both 0
Retrieved location has one valid and one NaN coodinate
Deleting Mail Intelligence data for %lu messages
Pruning NL Events older than %f
NL Event entities to delete (%lu) %@
PseudoReminders to prune (%lu), %@
Pruning duplicate event entities from web-pages/interactions
entities to delete %@
Pruning duplicate Event entities: %{public}lu
web-page event entity exists on calendar, don't delete: %@
Pruning mail intelligence data older than one year
Pruning entities older than %0.2f
SGRealtimeContactConfidenceFeatureVec: <
  contacts with phone number matches: %i
  contacts with name matches: %i
  contact with both phone and name matches: %i
  Phone number matches an existing contact: %s
  Name matches an existing contact: %s
  Email matches an existing contact: %s
  IM Address matches an existing contact: %s
  Existing contact has address: %s
  Address match with existing contact, if both have addrs: %0.3f
  New phone numbers: %i
  New emails: %i
  New IM addresses: %i
  New addresses: %i
  Length of name: %i
  Name has at-sign: %s
SGInhumanityFeatureVec: <
  Has one or more inhuman-looking headers: %s
  Author email address looks inhuman: %s
  Author name looks inhuman: %s
  Body of email contains inhuman phrase: %s
  Domain is a template sender: %s
SGDetectionNotabilityFeatureVec: <
  Is phone number: %s
  Is address: %s
  In HMM-detected sig: %s
  In DD sig: %s
  How far down the email was this found?: %0.3f
  Phone numbers in sig: %i
  Phone numbers in email: %i
  Addresses in sig: %i
  Addresses in email: %i
Could not list files in permafail directory: %@
Could not delete old permafail file %@: %@
Could not read data for item %i (try later: %i)
chunk length shorter than compression prefix size (offset=%d length=%d checksum=%d)
stat failure (offset=%d length=%d checksum=%d)
truncation failure (offset=%d length=%d checksum=%d filesize=%lld)
mapping failure (offset=%d length=%d checksum=%d)
checksum mismatch (offset=%d length=%d checksum expected=%d checksum actual=%d)
compression algorithm identification failure (offset=%d length=%d checksum=%d prefix=%@)
error while decompressing chunk (offset=%d length=%d checksum=%d bufferSize=%tu algorithm=%d)
Opening file for processing after lock: %i
File %@ already exists! Overwriting!
Could not open harvest queue file for writing (%s): %@
Harvest queue file is locked; try later: %@
Could not open harvest queue file for reading [errno=%i]: %@
Harvest queue full at %llu items
Harvest queue memory buffer full at %llu items
Encoding of CSSI failed: %@
Error writing to queue file: %@
Closing file after reaching %i bytes
Failed to open writer for fileId: %i
Error compressing the buffer
Could not unlink %@: %s
Can not write to legacy harvest queue.
SGMISaliencyModel: Unable to load SGMISaliencyModelConfig defaultConfig
Error - Couldn't get default saliency model when trying to run inference.
Error while preparing feature vector for mlmodel: dimension mismatch, expecting %@ got %lu
SGMISaliencyModel: Error while initializing MLMultiArray for SGMISaliencyModel inference: %@
SGMISaliencyModel: Error while running SGMISaliencyModel inference: %@
SGMISaliencyModel: Error while parsing SGMISaliencyModel inference.
SGMISaliencyModel: Loading CoreML model.
SGMISaliencyModel: Loading model from Trial at path: %@
SGMISaliencyModel: Error converting model path to file URL
SGMISaliencyModel: Invalid model path specifeid via Trial configuration.
SGMISaliencyModel: Error while initializing MLModel: %@
SGMISaliencyModel: Finished loading CoreML model.
Given a putative e-mail address with no @
Given a putative e-mail address with no @: %@
Processing event with eventName: %@
GroupID lookup found unexpected entity type for contact detail (%@)
Unable to dump stats: %@
Unable to count orphaned entities: %@
Unable to count tombstones: %@
Unable to count snippets with content: %@
Unable to count snippets with titles: %@
Unable to count snippets: %@
Unable to count details in entity_fts: %@
Unable to count entity_fts: %@
Unable to calculate stats from serializedContacts table: %@
Unable to count merged pseudocontacts: %@
Unable to calculate stats from entity table: %@
failed to load snippet data for entity: %@
dbStats returned nil during reportDbStats
reported db stats to AggD
Failed to report dbStats to AggD: %@
registering cache precomputation work with CTS
SGSqlEntityStore cache precomputation due to CTS
all async jobs for cache precomputation are done
pre-calculating CN to SG contact matches due to CTS
serializing contacts due to CTS
Finished updating serialized contacts in %0.3f seconds
SGDOMParser: Nil path for HTMLPreprocessor from asset
SGDOMParser: jsContent nil: %@
Error evaluating JS: %@
SGDOMParser: Loaded HTML Document
SGDOMParser: Unable to load WebView
SGGDOMParser: Unable to load WKWebConfiguration
SGDOMParser: datastore is nil
Failed to soft-link WebKit: %s
SGDOMParser: Error parsing tcr tags from js
SGCK Persisted state changed (keyPath: %@, change: %@, self: %@)
_SGDCloudKitSyncPersistedState got invalid class name in property: %@
SGCK connectionDidReconnect:%@
SGCK connection:%@ didChangeConnectedStatus:%@
SGCK connection:%@ didFailToSendOutgoingMessage:%@ error:%@
SGCK connection:%@ didSendOutgoingMessage:%@
SGCK connection:%@ didReceiveIncomingMessage:%@
SGCK Got an APNS notification, but not syncing because sync is currently disabled.
SGCK Will fetch new entities for incoming message
SGCK connection:%@ didReceivePublicToken:%@
SGCK connection:%@ didReceiveToken:%@ forTopic:%@ identifier:%@
SGCK privacySalt ensuring not already on _queue...
SGCK privacySalt immediately returning empty NSData because [SGPreferenceStorage useManateeSaltForHistory] is false
SGCK privacySalt about to dispatch_sync to _queue
SGCK privacySalt outcome: %@ result, %@ error
SGCK privacySalt is now on _queue
SGCK privacySalt reusing existing future
SGCK privacySalt is resolving to empty data because CKErrorIncompatibleVersion was previously encountered, indicating that the server no longer supports syncing with this software version
SGCK privacySalt about to wait on accountInfoFuture
SGCK privacySalt future did not complete synchronously; will store future in _privacySaltFuture for reuse
SGCK privacySalt future asynchronously completed, will set _privacySaltFuture to nil
SGCK privacySalt finished waiting on accountInfoFuture
SGCK privacySalt error retrieving account info: %@
SGCK privacySalt resolving to empty data because iCloud account is restricted (parental controls, etc)
SGCK privacySalt resolving to empty data because there is no iCloud account
SGCK privacySalt resolving to empty data because device-to-device encryption is not supported
SGCK privacySalt succeeded (using existing known salt)
SGCK privacySalt will procure new salt
SGCK privacySalt succeeded (using newly procured salt)
SGCK privacySalt tried to procure salt, but salt is nil even though self->_procureSaltError is also nil
SGCK privacySalt tried to procure salt, but an error occurred: %@
SGCK deleteStorageEvent failed because no group id
SGCK setReadyForNewEntities:%@
SGCK ignoring because readyForNewEntities == _readyForNewEntities
SGCK processing deferred state changes...
SGCK no deferred state changes
SGCK processing deferred sync...
SGCK no deferred sync
SGCK deleteGroupId:%@
SGCK deleteGroupId: passed nil groupId...returning...
SGCK Not deleting entity from CloudKit because current state prohibits syncing
Begin: Transmitting Confirm/Reject Of Calendar Event
End: Transmitting Confirm/Reject Of Calendar Event
SGCK addEntity:%@ %@
SGCK addEntity: - ignoring because groupId is nil
SGCK Not adding entity to CloudKit because current state prohibits syncing
Begin: Transmitting Calendar Event
End: Transmitting Calendar Event
SGCK Got database: %@, container: %@
CloudKit database %@ has nil container, therefore cannot get APS environment strong and APNS will not work.
SGCK Handling primary iCloud Calendar account change (%@ --> %@)
SGCK APS (APNS) Environment: %@
SGCK Error getting APS environment string -- APNS will not work!: %@
SGCK device does not have a subscription. Checking eligibility before creating one...
SGCK Device is eligible. Creating subscription via setDatabase: path...
SGCK actually creating subscription via setDatabase path...
SGCK setDatabase: not going to create subscription because something else created it...
SGCK backfill via setDatabase: path...
SGCK device account (or lack thereof) is not eligible -- not creating subscription
SGCK Going to create subscription (retries: %lu)
SGCK Setting hasSubscription persisted flag because new subscription was created successfully
SGCK Setting hasSubscription persisted flag because duplicate subscription already exists on server. This should only happen after a suggest_tool reset.
SGCK Error while attempting to create subscription: %@
SGCK Will re-attempt subscription creation
SGCK should remove events from EK because there is no primary iCloud Calendar account
SGCK Going to request account info to determine whether events should be removed from EK...
SGCK Received account info, decision on whether to remove events from EK: %@ (error: %@)
SGCK accountInfo - returning existing SGFuture
SGCK accountInfo - Scheduling call to CloudKit (already one in flight: %@)
SGCK accountInfo - Calling CloudKit (-[CKContainer accountInfoWithCompletionHandler:])
SGCK accountInfo - completionHandler - %@, %@
SGCK accountInfo - completionHandler - completing future
SGCK accountInfo - completionHandler - ignoring result because a newer request is in flight
SGCK accountChanged:%@
SGCK accountChanged: - existing future is complete. Setting to nil.
SGCK accountChanged: - existing future is in-flight. Creating a new request...
SGCK Already processing state changes -- will re-process again once complete.
SGCK Already processing state changes and re-processing once complete already scheduled as well.
SGCK processStateChanges -- failing salt because !supportsDeviceToDeviceEncryption
SGCK System State Change: Sync %@ --> %@
SGCK About to hop on to background queue to invoke _deleteAllSyncedItemsCallback
SGCK Skipping background queue block because _readyForNewEntities is false.
SGCK Creating subscription in response to state change
SGCK Will fetch new entities in response to state change
SGCK Set new persisted state.
SGCK Entering sgckQueueBlock.
SGCK deleteAllSyncedItemsSucceeded == YES
SGCK deleteAllSyncedItemsSucceeded == NO. Will defer a processStateChanges.
SGCK About to invoke _deleteAllSyncedItemsCallback from background queue...
SGCK Finished invoking _deleteAllSyncedItemsCallback on background queue. Now hopping back onto _queue...
SGCK Re-processing state changes because a request came in while this one was in progress...
SGCK Existing persisted state was saved but could not be deserialized.
SGCK No persisted state exists for this user.
SGCK Creating new persisted state.
SGCK Discarding non-manatee salt
SGCK Will add CK operation to queue: %@
SGCK added %lu operations to queue (pending operation count: %lu)
SGCK Will wait for in-progress procure salt operation before writing or deleting an entity
SGCK Will wait for in-progress create zone operation before writing or deleting an entity
SGCK Failing to write entity due to unrecoverable error: %@
SGCK Adding and waiting for zone creation before writing entity.
SGCK Adding and waiting for salt procurement before writing entity.
SGCK Will write entity records: %@, delete entity records: %@, retries remaining: %lu
SGCK Will recreate zone and salt and try to write record again (error: %@)
SGCK Zone missing while trying to write or delete record. Setting _noZone flag.
SGCK Retrying after zone missing error
SGCK Not retrying because there is nothing to write.
SGCK Salt atomic reference check failed while trying to write record. Calling failSalt.
SGCK Retrying after salt missing reference error.
SGCK addWriteOperationForRecordGetter - Skipping because of out of date software
SGCK addFetchNewEntitiesAttemptOperationWithRetries:%lu
SGCK ignoring record zone completion block because we are not in a sync enabled state
SGCK Storage was not ready. Will sync again when it's purportedly available.
SGCK Giving up on fetching new changes because out of retries for error: %@
SGCK Change token expired (error: %@)
SGCK Will try fetching again without change token
SGCK Giving up on fetching changes due to unrecoverable error %@
SGCK Fetching more entities from server for these reasons: [%@] Server indicated more entities are coming, [%@] Client was asked again to fetch more entities while this request was already in-flight
SGCK Finished requesting more entities from server.
SGCK ignoring fetched new entities because we are not in a sync enabled state
SGCK addFetchNewEntitiesOperation - Skipping because of out of date software
SGCK addFetchNewEntitiesOperation - Deferring because not ready for new entities.
SGCK addFetchNewEntitiesOperation - Returning operation already in flight, changing value of _requestedFetchNewEntitiesWhileRequestAlreadyInFlight from %@ to YES
SGCK addFetchNewEntitiesOperation - Adding new operation to operation queue
SGCK addFetchNewEntitiesOperation - Operation completed
SGCK addProcureSaltAttemptOperationWithRetries:%lu
SGCK Will recreate zone and try to procure salt again (error: %@)
SGCK Using existing salt record found on server
SGCK Zone missing while procuring salt: %@
SGCK Will attempt to create zone and then try procuring salt again
SGCK Unrecoverable error while procuring salt: %@
SGCK Successfully procured Manatee salt with atomic reference name %@
SGCK procuredSaltRecord missing critical fields (se=%@, a=%@)! This should not be possible and no recovery path is implemented. CloudKit writes will fail.
SGCK addProcureSaltOperation - Skipping because of out of date software
SGCK addProcureSaltOperation - Returning operation already in flight
SGCK addProcureSaltOperation - Adding new operation to operation queue
SGCK addProcureSaltOperation - Operation completed with error: %@
SGCK addProcureSaltOperation - Operation completed successfully
SGCK addManateeSanityCheckOperation - Skipping because of out of date software
SGCK Creating Manatee health check operation...
SGCK Manatee health check returned without errors
SGCK Operation error during Manatee sanity check: %@
SGCK Missing Manatee identity detected during sanity check. Deleting-and-then-re-creating zone... (record zone error: %@)
SGCK addCreateZoneAttemptOperationWithRetries:%lu
SGCK addCreateZoneAttemptOperationWithRetries:%lu - SUCCESS (zone created or already exists)
SGCK got PCS user identity unknown error while creating zone. Running processStateChanges just to be sure we didn't miss anything.
SGCK aborting create zone because out of retries for retry-able error: %@
SGCK Unrecoverable error for create zone operation: %@
SGCK addCreateZoneOperation - Skipping because of out of date software
SGCK addCreateZoneOperation - Returning operation already in flight
SGCK addCreateZoneOperation - Adding new operation to operation queue
SGCK addCreateZoneOperation - Operation completed with error: %@
SGCK addCreateZoneOperation - Operation completed successfully
SGCK addDeleteZoneAttemptOperationWithRetries:%lu
SGCK Ran out of retries for delete zone operation with network failure: %@
SGCK Unrecoverable error for delete zone operation: %@
SGCK addDeleteZoneOperation - Skipping because of out of date software
SGCK addDeleteZoneOperation - Returning operation already in flight
SGCK addDeleteZoneOperation - Adding new operation to operation queue
SGCK addDeleteZoneOperation - Operation completed with error: %@
SGCK addDeleteZoneOperation - Operation completed successfully
SGCK Suspending sync due to unsynced keychain: %@
SGCK Delaying for %@ seconds (error: %@)
SGCK CloudKit framework recommends retry without delay for error: %@
SGCK Resuming sync after suspension due to unsynced keychain
SGCK Resuming operation queue
SGCK Will suspend operation queue for delay: %f
SGCK Operation queue suspended
SGCK Disabling due to incompatible version
SGCK Error when getting preferred push env. Defaulting to prod instead. Error: %@
SGCK Got APS environment string: %@ (error: %@, container: %@)
SGCK Setting configuration block...
SGCK The shared instance already exists, so the configuration block will run immediately.
SGCK Done running the completion block immediately from +[SGCK setSharedInstanceConfigurationBlock:]
SGCK The shared instance doesn't exist yet, so the configuration block won't run until it's instantiated.
SGCK Instantiating +[SGCK sharedInstance]
SGCK Running configuration block via +[SGCK sharedInstance] (the configuration block was specified prior to sharedInstance being called for the first time)
SGCK Configuration block has completed from within +[SGCK sharedInstance]'s first invocation. Setting the block to nil.
SGCK No configuration block has been specified before the first invocation of +[SGCK sharedInstance]. If a configuration block is set later on, it will be run immediately.
SGCK rejectEventFromOtherDevice [IGNORED]
SGCK rejectEventFromThisDevice
SGCK confirmEventFromOtherDevice [IGNORED]
SGCK confirmEventFromThisDevice
Could not unregister from CNContactStore change history due to: %@
Could not register for CNContactStore change history due to: %@
Chat length estimator reached max size. Clearing.
Could not open chat length estimator at %@: %s (errno %i)
Could not mmap chat length estimator file at %@: %s (errno %i)
SGCK Error serializing schema.org to plist: %@
SGCK error converting schema.org to plist.
SGCK Error serializing event metadata to plist: %@
SGCK Error converting event metadata to plist.
SGCK Reservation item reference value was nil for interaction entity
SGCK Skipping unsupported CloudKit record (record created by version: %@, version required to process record: %@, version running on this device: %@)
SGCK Reading pre-Manatee CloudKit record.
SGCK Error: Record version higher than 3 did not contain parent entity type.
SGCK Error: Record with type interaction is missing interaction info.
SGCK Error: Record with type interaction is missing interaction bundle id.
SGCK Error: Record contained unsupported entity type %lld
SGCK error decoding schema.org plist: %@
SGCK Error decoding schema.org plist: %@
SGCK Error decoding metadata plist: %@
SGContactSharingModel - Invalid model config for path: %@
SGContactSharingModel - Could not find transformer instance for language: %@
SGContactSharing Model - Could not initialize featurizer and sessionDescriptor from config.
Looking up in custom tester function instead of actually hitting recents
Email was not found in recents
Found email in recents
Unable to search recents; error: %@
Handle is significant: Found in bloom filter
Handle is significant: Found in recents
Handle is not significant
Email Address is significant: Found in bloom filter
Email Address is significant: Found in recents
Email Address is not significant
Realtime contact is not significant, but selecting anyway due to preference setting
Contact is significant: Update to curated contact
Contact is not significant, but selecting anyway due to preference setting
contact.significance property is true. skipping all other check.
Contact is significant: Found in bloom filter (email)
Contact is significant: Found in bloom filter (phone)
Sender isn't in bloom filter, checking recents
Contact is significant: Found in recents
Contact is significant - VIP email address
Contact is not significant
SGTokenDistanceMappingTransformer: index=%lu, count=%lu
Begin syncing QR engagement data
Deferring engagement data syncing during eager initial check
Begin fetching device experiment information
Early returning on engagement data sync since no Trial information associated with device
Deferring engagement data syncing after successful experiment id retrieval
Begin retrieving and recording delta records from DB
Bailing out because unable to create recorder for some key(s), %@: %d, %@: %d
Deferring engagement data recording in the middle of recording
Recorded engagement metrics running in language %@, rollout %@, factor pack %@, experiment %@, treatment %@, records %tu, success %d
Completed engagement data syncing with no updates, no Trial information for device
Begin syncing for %tu records
Deferring engagement data syncing during initial completion block check
Completed engagement data syncing with no updates, no records to sync
Begin records serialization
Deferring engagement data syncing because of serialization error: %@
Deferring engagement data syncing after data serialization
Serialized records with data size of %tu
Begin IDS sync request
Deferring engagement data syncing after IDS sync call
Performed IDS request for service %@, success %@, identifier %@, data size: %tu, error %@
Deferring engagement data syncing because IDS failure: %@
Successfully passed data to IDS for syncing
Begin validation for record
Error for record due to us recording an unknown language code %@
Error for record due to negative value for displayed %d or selected %d
Skipping record since no delta in displayed or selected
Validated record to sync
Truncating number of responses to fetch since it's greater than %tu
Deferring engagement data syncing during delta row iteration
Skipping DP logging for empty response.
Skipping DP logging for response because invalid count for selected %d or ignored %d
Logging message selected %tu, ignored %tu
Logging of empty response is not allowed
Preparing to log message %tu times
Call to recorder failed %tu times
SGDSuggestManager: Filtering out previously engaged reminder
SGDSuggestManager: Filtering out duplicate reminder
SGDSuggestManager: Filtering past Reminder
SGDSuggestManager: realtimeSuggestionsForMailOrMessageWithHash: %@ : %@
SGDSuggestManager: realtimeSuggestionsForMailOrMessageWithHash: %@: results: %@
SGDSuggestManager: validating cached results
SGSuggestManager validateResultsvalidateResults: DKIM verification resulted in failure: %@
SGSuggestManager validateResultsvalidateResults: Successfully verified DKIM signature.
filtering out suggestion that has already been acted on according to history
filtering out suggestion for business chat text
Existing valid dissection found in store.
Existing dissection found in store, but HTML does not match.
Entity not harvested, but I was told not to dissect.
SGDSuggestManager: starting dissection.
SGDSuggestManager - Getting realtime events for dissected entity [SGEntity %{public}@]
  -> Event [SGEvent %{public}@] in state %i
    -> %@
Found %i realtime events
Getting realtime contacts for dissected entity
Found %i realtime contacts
Entity %@ -> SGReminder %@
Timed out waiting for async realtime harvest work
Plugins finished processing message: %@
SGDSuggestManager: Messages: _suggestionsFromMessage: Got message with no authors. Ignoring.
SGDSuggestManager: Messages: _suggestionsFromMessage: Got message with no domainIdentifier (conversationIdentifier). Ignoring.
SGDSuggestManager: Messages: suggestionsFromMessage: %@ : %@ options: %tu completionDelivery: %tu
suggestionsFromMessage ignoring item since the bundle is disallowed by user's settings
suggestionsFromMessage ignoring item since the domainIdentifier (conversationIdentifier) is nil
suggestionsFromMessage ignoring item since the textContent is nil
suggestionsFromMessage consolidating repeated item with previous request
SGDSuggestManager: Mail: Asked for suggestions for a searchable item without headers dictionary or source, returning 0 suggestions
SGDSuggestManager: Mail: Not providing suggestions for searchable item that is spam.
SGDSuggestManager: Mail: Skipping suggestions for searchable item that is in trash.
SGCoalescingDropbox %s unable to extend transaction TTL.
Failed to construct DDScanner: %@
SGDataDetectors: data detection: %@
Failed to decode socialProfileData: %@
Writing identity blobs
IdentityStore: Writing deletes for %@
IdentityStore: Newly created contacts %@
IdentityStore: Forced update of contacts %@
Expected the new mergedContact record Id %@ to be %@:
While writing blobs, unexpected missing entity ids
Writing contact to journal
Writing event to journal
Writing reminder to journal
Trying to write multiple reminders to journal, this is not supported
Writing %lu event entities to journal. [SGEvent (%{public}@)]
Removing pendingVerification flag from %@
Error removing pendingVerification flag from %@: %@
nil key found in emailMetadata
Writing Entity: %@
Number of event entities to journal: %lu
Attempt to write entity to DB returned entityId 0
Skipping event pending geocode.
Attempt to write enrichment to DB returned enrichmentId 0
Skipping non-event enrichment
Can't meaningfully call shouldIgnoreSignature with a signature that starts after the content.
Can't meaningfully call shouldIgnoreSignature on an entity with no detected signature.
Tagging as inhuman: Signature pattern
Ignoring signature: Inhuman pattern.
Ignoring signature: Valediction after signature.
Ignoring signature: Recipient's name (composite).
Ignoring signature: Recipient's name (first last).
Ignoring signature: Recipient's name (last first).
Ignoring signature: Recipient's phone.
Ignoring signature: Recipient's postal.
Ignoring signature: Recipient's email.
Ignoring signature: Sender's name unavailable.
Ignoring signature: No sender's name or email.
Ignoring signature: Anti pattern.
Not ignoring signature.
Ignoring signature: Sender's name after sig.
Skipping signature dissector: detectContacts is OFF
Signature found by DataDetectors.
Signature found by alternative algorithms.
Sig range %lu-%lu (%@)
No signature found
Tagging as inhuman after adjusting range: Signature pattern
Ignoring signature after adjusting range: Inhuman pattern.
HMM confused, too many tokens in signature
HMM confused, too much quoting in signature
Could not fetch filesystem path for HMM
Could not load HMM data: %@
Could not defer activity
serialized contact precomputation deferring
done serializing new contacts
done trimming serialized contacts
Writing placeholder for contact id: %lli
Failed to load all serialized contacts: %@
Unexpected error while deserializing contact%lldld
Unexpected error while deserializing contact: %lld
Failed to delete serialized contact: %@
Failed to insert serialized contact placeholder: %@
Failed to insert serialized contact: %@
SGUnarchiver: unable to open non-file URL %@.
SGUnarchiver: unable to open file %@ - %{public}s.
SGUnarchiver: unable to close file descriptor %{public}d for %@ (leaking) - %{public}s.
SGUnarchiver: unable to close archive_read - %{public}s.
SGUnarchiver: unable to open archive_read - %{public}s.
SGUnarchiver: failed to create directory at %@ - %@.
SGUnarchiver: archive_write_disk unable to set lookup functions - %{public}s.
SGUnarchiver: archive_write_disk unable to set options - %{public}s.
SGUnarchiver: unable to resolve physical path for destination path %@ - %s.
SGUnarchiver: archive_read_next_header failed - %{public}s.
SGUnarchiver: archive_entry with no path encountered.
SGUnarchiver: archive_entry with absolute path encountered...ignoring leading %zu of %zu bytes.
SGUnarchiver: archive_entry with no path after sanitization encountered.
SGUnarchiver: archive_write_header failed - %{public}s.
SGUnarchiver: archive_read_data_block failed - %{public}s.
SGUnarchiver: archive_write_data_block failed - %{public}s.
SGUnarchiver: archive_write_finish_entry failed - %{public}s.
SGUnarchiver: unable to close archive_write_disk - %{public}s.
SGUnarchiver: unable to free archive_write_disk (leaking) - %{public}s.
SGUnarchiver: archive_read unable to set supported formats - %{public}s.
SGUnarchiver: archive_read unable to set supported compression formats - %{public}s.
SGUnarchiver: unable to free archive_read (leaking) - %{public}s.
Attempt to create default shared Mail Intelligence model store
SGReminderMessage: No whitelisted action verb or particle actionVerbTokenIndexes
SGReminderMessage: No VB in actionVerbIndexRange
SGReminderMessage: No NN, NNP in objectCoreIndexRange
SGReminderMessage: Title has too many characters
SGReminderTrialClientWrapper: reminderOutputMapping list loaded with Trial: %@
SGReminderTrialClientWrapper: reminderInputMapping list loaded with Trial: %@
SGReminderTrialClientWrapper: reminderEnrichments list loaded with Trial: %@
SGReminderTrialClientWrapper: reminderOverrides list loaded with Trial: %@
SGReminderTrialClientWrapper: messagesBannerLimit: %@
SGReminderTrialClientWrapper: actionVerbOptional: %@
SGReminderTrialClientWrapper: triggerOptional: %@
SGReminderTrialClientWrapper: confirmationOptional: %@
SGReminderTrialClientWrapper: Updating factors
SGReminderTrialClientWrapper: TRILevel is nil for confirmationOptional
SGReminderTrialClientWrapper: TRILevel is nil for triggerOptional
SGReminderTrialClientWrapper: TRILevel is nil for actionVerbOptional
SGReminderTrialClientWrapper: TRILevel is nil for messagesBannerLimit
empty string found in nickname data for: %@
No tokenizer in SGTokenizer. Skipping tokenization!
Unable to load entity by recordId: %@
failed to load snippet data for email entity: %lld
Unable to load entity from database
Could not load event with record id %@
Could not load duplicate key with record id %@
Failed to soft-link HealthKit: %s
Skipping DetectedAttribute dissection: No author.
Skipping DetectedAttribute dissection: Inhuman sender.
Skipping DetectedAttribute dissection: warm up message.
Training quick responses.
Not training quick responses since conversation history is nil.
TrainQuickResponses
Skipping DetectedAttribute dissector: detectContacts is OFF
Detections: %@
Skipping DetectedAttribute dissection: too many phone numbers (%i, limit %i)
ContactSharingNegativeExample
Ignoring DataDetector match: Blocked phone number.
Ignoring DataDetector match: Quoted region.
Processing low quality phone number match for ML supervision and metrics; detections to be discarded.
Ignoring DataDetector match: Low quality phone number match.
Detected attribute (sig/*): '%@'
Detected attribute (body): '%@'
Detected attribute (ml): '%@'
ContactSharingPositiveExample
Unexpected Contact detail found in forwarded or inhuman text message: %@ %@
Self-id: Text message has no conversation identifier
Self-id: processing is disabled for group messages
Self-id: processing is disabled for business chat
Self-id: No domain identifier found for message: %@
Self-id: ignoring message far in thread (position: %i >= %i)
Self-id: No likely language prediction for conversation
Self-id: text length too long
Start
SelfIdFeaturizations
Completed
Self-id: doesn't look for self id if message has a display name
Self-id: updating pseudo-contact entity with name length: %tu
Self-id: Could not find author-pseudocontact to augment with text message self-identification.
SGDetectedAttributeDissector: getResponsesForBirthdayExtractionFromMessage: text message has nil textContent: %@
No responses found for message: %@
Birthday: Text message has no conversation identifier
Birthday: Entity with type SGEntityTextMessage has invalid message date
Birthday: processing is disabled for group messages
RKAttributedTokenBirthdayType not found for message: %@
unifiedContactWithIdentifier failed to generate date for birthday.
unifiedContactWithIdentifier for %@ failed with error %@
No contact identifier for %@
Ignoring DataDetector match: Inhuman email address in signature.
Ignoring DataDetector match: Email address with colon at end of line in signature.
Ignoring DataDetector match: Email address with date or time in line in signature.
Ignoring DataDetector match: Email address in signature is close match to List-Id header.
Ignoring DataDetector match: Too many postal addresses in signature.
Ignoring DataDetector match: Too many phones in signature.
Ignoring DataDetector match: All-digit phone without label in signature.
Ignoring DataDetector match: Log line in signature.
DataDetector is not a definitive match: Not in definitive phrase.
DataDetector is not a definitive match: Anti-pattern.
Failed to retrieve PMLTraining singleton
SGEspressoModel - Invalid model config: %@
SGEspressoModel - Could not initialize PMLMultiLabelEspressoClassifier: %@
SGEspressoModel - Invalid sessionDescriptor in config: %@
SGExtractionModelCoreMLWrapper: Inconsistent MLFeatureProvider passed
SGHarvestQueueMetrics
ERROR: Invalid storageReason: %d
SGReminderTrialClientWrapper: Couldn't delete model override file: %@
Unable to the source data from file URL: %@. (Error: %@)
SGReminderTrialClientWrapper: Unzipping model override at path: %@
SGReminderTrialClientWrapper: unable to fetch origin path.
SGReminderTrialClientWrapper: Cannot move model to %@. Error %@
SGReminderTrialClientWrapper: Error while unzipping the model override.
SGReminderTrialClientWrapper: Model override is already in uncompressed at path: %@
SGReminderTrialClientWrapper: No file found at source path: %@
SGTrialClientWrapper: Unable to fetch experimentId, deploymentId, treatmentId
refreshSuggestionsContact added %@ storage contact %@
refreshSuggestionsContact running immediately due to large number (%tu) of enqueued items
refreshSuggestionsContact coalescing box size: %tu
refreshSuggestionsContact begin coalescing drop box handler with %tu SGStorageContacts: %@
refreshSuggestionsContact will enqueue CNContactIdentifier batch of size %tu (from %tu SGStorageContact's): %@
refreshSuggestionsContact end coalescing drop box handler
refreshSuggestionsContact timed out waiting for spotlight
Could not enumerate CNContactStore change history due to: %@
CNChangeHistoryResult truncated: %d , %@
Performing full sync with CNContactStore
Performing delta sync with CNContactStore
Will set full CN to SG sync completed.
Do/did we need a full CN to SG sync? %@
Failed to enumerate CNContactStore: %@
start updating CNContact matches
CN Contact precomputation deferring
done updating CNContact matches
%lu contact matches found for %@
Failed to confirm Contact: %@
CN2SG Over 100K rows in cnContactsToSgContactsCacheJobs -- will not enqueue a batch
CN2SG has already enqueued cncontactid %@
CN2SG will enqueue cncontactid %@
Popped CN2SG job id %lld:
cnContactMatchesForRecordId received recordId from wrong table: %@
Failed to query db for potential CN contact matches: %@
Failed to load all precomputed CNContact records: %@
Encountered a NULL cnContactIdentifier in cnContactsToSgContacts
Failed to delete CNContact matches for record set: %@
Failed to delete CNContact matches
Failed to delete CNContact match: %@
CNContact cache miss
Found %lu prematched contacts in CNContact cache
Failed to load CNContact matches: %@
Failed to insert CNContact match: %@ : %@: %@
Failed to insert CNContact match: %@ : %lld: %@
SG2CN error: %@
SG2CN all found identifiers: %@
SG2CN found identifier: %@
SG2CN query for contact %@:
SGCustomResponses-DesignateFilteringBatch
SGCustomResponses-RecordKnownCustomResponses
SGCustomResponses-PruningAllCustomResponses
SGCustomResponses-FilterBatch
SGCustomResponses-RecordAllRemainingMessagesAsCustomResponses
SGCustomResponses-DecayAllCustomResponses
SGCustomResponses-TruncateCustomResponsesTable
SGCustomResponses-PrunePerRecipientTable
SGCustomResponses-CalculateUsageSpreads
Model missing for preferred language %@
Error serializing CustomResponses checkpoint: %@
Unable to read CustomResponses data
Error deserializing CustomResponses checkpoint: %@
SGCustomResponses-NextMessagePair
[CRH] ML is not enabled for custom response harvesting (preferred language: %@).
[CRH] Config file invalid while ML is enabled. Name: %@, Exp: %@; Trt: %@
[CRH] Custom responses not enabled in this treatment (name: %@).
[CRH] Unexpected model type %@, and experiment (Name: %@, Exp: %@ Trt: %@).
[CRH] Model file invalid for ModelType: %@ and Experiment (Name: %@, Exp: %@ Trt: %@).
SGDManagerForCTS: Unable to create directory for custom responses checkpoint.
SGCustomResponseHarvester: No preferred language is set.
Nil serializedEntityKey found in entityTags
Invalid base64encoded string for tag %@
Could not load event to reject (%@)
Could not load event to confirm (recordId=%@)
Confirming details as workaround for Contacts search for realtime contact %@
Couldn't load event with given duplicate key
Couldn't confirm field values for duplicateKey not in entity table
Loaded %lu suggested events from %f to %f (max %lu)
Returning %lu suggested events after filtering
Failed to retrieve fieldValues from confirmedFieldValues
suggestContactByRecordId received recordId from wrong table: %@
Matched %tu contacts
Could not parse createQuery %@
something went wrong while getting tokenizer: %@
tokenizer size mismatch
Got %llu FTS tokens, truncating to first %i
got out of bounds token range: %@ in UTF8 of size %tu
Tried to get contacts with empty messaging prefix.
%lu contacts loaded
After filtering, %lu contacts
Skipping match because it contains no suggestions: %@
rankSGContacts: target CNContact is missing required keys
Matched %lu contacts
Got more than %lu results for query. Giving up.
_enumerateContactsForMasterEntityIds aborting enumeration
Loaded %tu contacts
Getting e-mails pending verification
Found %lu e-mails pending verification
Error finding e-mails pending verification: %@
key in emailMetadata was nil
Could not create SGEmailKey for key %@
#NoDetailCache Clearing %lu other details
#NoDetailCache Other detail found
#NoDetailCache Other detail not found
#NoDetailCache Adding other detail...
#NoDetailCache 10,001 items in _otherDetailsWithNoContact. Removing least recently accessed item...
#NoDetailCache Removing other detail...
Clearing caches in SGEntityStore
failed to remove corruption marker
store %@ going deallocating
entity store initialization flags: isEphemeral:%d executeJournals:%d noMigrate:%d
failed to initialize one or more databases/journals. We cannot continue.
corruption marker is present, recreating db
entity store is migrating
entity store already migrated. Not migrating again.
entity store did not try to migrate but a migration is needed
Detected corrupt database, attempting to reinitialize.
unable to recreate entity DB
unable to recreate snippets DB
migrator found mismatched versions or is in an unrecoverable state, performing corruption recovery
Future db schema detected. Entity store cannot be initialized.
entity store could not migrate databases, bailing out.
unable to initialize entity DB
unable to initialize snippets DB
entity store failed to recreate database during corruption recovery: %@
Corrupt database file moved to "%@".
Unable to move corrupt database file to "%@": %@
failed to initialize database at path %@: %@
device locked during db initialization
Integrity check detected corrupt database, attempting to reinitialize.
Attempting to instantiate the shared harvest store
Attempting to instantiate the shared default store
Suggestions entity store cannot be opened before first unlock
entity store is known to have a future schema. Giving up on store initialization.
SGExtractionDissector: no bundle identifier identified
SGExtractionDissector: no record found for bundle id %@:%@
SGExtractionDissector: Starting dissection of webpage (%{private}@). [SGPipelineEntity (%{public}@)]
SGExtractionDissector dissectURL: Webpage processing stopped: HTML content exceeding max length. [SGPipelineEntity (%{public}@)]
SGExtractionDissector dissectURL: SGOutput is null. [SGPipelineEntity (%{public}@)]
JS Extraction Status: Template exception %{public}@, in template: %{public}@ (%{public}@). [SGPipelineEntity (%{public}@)]
JS OUTPUT for [SGPipelineEntity (%{public}@)]: %lu output(s). Asset version: %{public}@. Device locale: %{public}@. Document type: %{public}@. Contains schemaOrg?: %{public}@. Bundle ID: %{public}@
JS template match: %@ shortName:%@. [SGPipelineEntity (%{public}@)]
[SGEntity (%{public}@)] - Complete JS output: %@
[SGPipelineEntity (%{public}@)] -> [SGPipelineEnrichment (%{public}@)]
JS Extraction Status: Event. [SGPipelineEntity (%{public}@)]
JS outputItem for enrichment [SGPipelineEnrichment (%{public}@)]: LocationType: %@. Geocoding Mode: %@. isAllDay?: %@. Output Usecase: %@. Output Category: %@.
JS Extraction Status: Output Exception %@. [SGPipelineEntity (%{public}@)]
SGExtractionDissector: Starting dissection of interaction [INIteraction (%{public}@)], [SGPipelineEntity (%{public}@)]
SGExtractionDissector dissectInteraction: Skipping reverse template dissector: detectStructuredEvents is OFF
SGExtractionDissector dissectInteraction: Not dissecting because ML extraction is on
SGExtractionDissector dissectInteraction: Could not convert INInteraction (%@) to schema
Skipping reverse template dissector: detectStructuredEvents is OFF
SGExtractionDissector: Not dissecting because ML extraction is on
SGPipelineEntity: Starting dissection of mail [SGSimpleMailMessage (%{public}@)], [SGPipelineEntity (%{public}@)]
SGExtractionDissector dissectMailMessage: Skipping reverse template dissector: detectStructuredEvents is OFF.
SGExtractionDissector dissectMailMessage: Not dissecting because ML extraction is on. [SGPipelineEntity (%{public}@)]
SGExtractionDissector dissectMailMessage: Ignoring email, forward or reply detected. [SGPipelineEntity (%{public}@)]
SGExtractionDissector dissectMailMessage: HTML content exceeding max length. [SGPipelineEntity (%{public}@)]
Found cached event classification for email %{public}@
SGExtractionDissector dissectMailMessage: Not extracting event(s) from e-mail because shouldDownloadFull returned false. [SGPipelineEntity (%{public}@)]
SGExtractionDissector dissectMailMessage: Email is not fully downloaded. Requesting full download. [SGPipelineEntity (%{public}@)]
[SGPipelineEnrichment (%{public}@)] -> [SGEvent (%{public}@)]
Skipping reverse template dissector: contentLen = %llu > %i
The same origin and destination: %@ (template: %@, short %@)
SGExtractionDissector - groupId is empty. Unable to create Duplicate keys
Failed to process event suggestion 
 reservation start date components invalid.
Couldn't parse date: %@ (template: %@, short %@)
Failed to process event suggestion 
 reservation end date in the past.
SGExtractionEntity entityForOutputItem: Event in the past, processing stopped.
Could not create tag from NSUserActivity %@
Invalid airport latitude or longitude. Asset version: %lu
found forward or reply header in email
SGMISubmodelUpdater: Clearing all tokens from submodel token store that haven't been since %@ or earlier
SGMISubmodelUpdater performed incremental update of %lu mails. Model had a precision of %.2f%% and a recall of %.2f%% on them.
SGMISubmodelUpdater: Updating Submodels
Error loading model config during incremental submodel update
SGMISubmodelUpdater Submodels were rebuilt with %lu mails with a saliency rate of %.2f%% (%lu days of data)
SGMISubmodelUpdater: Rebuilding Submodels
No extraction for %d:%@ = %@
SGMIFeatureVector: SGMIMetricsGroundTruthEstimationEvent PET logging skipped (hashed messageId)
SGMIFeatureVector: Logged SGMIMetricsGroundTruthEstimationEvent to PET
SGMIFeatureVector: Logged SGMIMetricsMailAttachmentHistogramByCategory to PET
SGMIFeatureVector: SubmodelOutput PET logging skipped (hashed messageId)
SGMIFeatureVector: SubmodelOutput PET logging skipped (already done for %@)
SGMIFeatureVector: SubmodelOutput PET logging for %@
Unexpectedly could not deserialize a serializedSocialProfile: %@
Scanning address string, expected to only find addresses, but found %@
SGAppLaunchHistory failed to fetch app launch history with error = %@
entity store notified of device lock state change to %d
SGMISpotlightUtility: Query by item timed out.
SGMISpotlightUtility: Found item count was %lu
SGMISpotlightUtility got an error from Spotlight: %@
SGMISpotlightUtility: Query by time range timed out.
urlsFromAttributes failed to find colon and parenthesis in text
urlsFromAttributes found invalid ranges of colon and parenthesis
urlsFromAttributes called with no URL attribute
SGURLDissector(Attributes) found URL of length %tu, from handle of length %tu, in: (%@, %@)
SGURLDissector(Text) found URL of length %tu, from handle of length %tu, in: (%@, %@)
SGURLDissector(URLs) found URL of length %tu, from handle of length %tu, in: (%@, %@)
SGURLDissector ignoring entity due to missing bundle id, unique id, or date
Tried to parse a jp/zh name with no tokens? This shouldn't happen.
Tried to parse a Japanese name with no tokens? This shouldn't happen.
Corruption marker detected for harvest queue. Flushing.
Could not open harvest queue database: %@
Integrity check detected corrupt harvest queue. Flushing.
Could not list directory %@: %@
Could not re-create harvest queue database: %@
Could not create tag from NSUserActivity '%@': %@
SGMIFeatureVectorCollator: message ID %@ was mapped via spotlight mapping table.
SGMIFeatureVectorCollator: message ID %@ was mapped with Biome stream.
SGMIFeatureVectorCollator: No mapping found, creating SGSimpleMailMessage with hashed message ID: %@
SGMIFeatureVectorCollator: Use the CSSI's repliedTo attribute to set the UserReplied feature, biome information was%@ available and UserReplied was%@ already set.
SGJournal-addEntry: Add event
SGJournal-addEntry: Add event batch (count=%lu)
SGJournal-addEntry: Cancel event
SGJournal-addEntry: Cancel event batch (count=%lu)
SGJournal-addEntry: Confirm event from this device
SGJournal-addEntry: Confirm event from other device
SGJournal-addEntry: Reject event from this device
SGJournal-addEntry: Reject event from other device
SGJournal-addEntry: Event parent deletion
SGJournal-addEntry: Not set
SGJournal-addEntry event non-nil, but unknown operation %u
SGJournal-addEntry: Add contact
SGJournal-addEntry: Confirm contact
SGJournal-addEntry: Reject contact
SGJournal-addEntry contact non-nil, but unknown operation %u
SGJournal-addEntry: Add reminder
SGJournal-addEntry: Confirm Reminder from this device
SGJournal-addEntry: Reject Reminder from this device
SGJournal-reminderAlarmTriggered: Reminder alarm triggered from this device
SGJournal-addEntry: Confirm reminder from other device
SGJournal-addEntry: Reject reminder from other device
SGJournal-addEntry: Reminder parent deletion
SGJournal-addEntry reminder non-nil, but unknown operation %u
SGJournal-addEntry: Suggested event calendar deleted
SGJournal-addEntry: Remove all stored pseudo-contacts
SGPipeline verificationOperation: DKIM verification resulted in temporary failure: %@. [SGPipelineEntity (%{public}@)]
SGPipeline verificationOperation: DKIM verification resulted in permanent failure: %@. [SGPipelineEntity (%{public}@)]
SGPipeline verificationOperation: Successfully verified DKIM signature. [SGPipelineEntity (%{public}@)]
Setting a timer to reset DDNL caches in %f seconds
SGPOSTagger: Most tags are SYM, likely missing LinguisticData
Error getting file size from path: %@
Attachment info length mismatch: %lu types, %lu names, %lu paths
SGDSpotlightReceiver: received %lu interactions from %@
SGDSpotlightReceiver: addInteractions: error donating to ProactiveHarvesting: %@
ignoring interactions since the bundle is disallowed by user's settings
Plugins finished processing interaction: %@
SGDSpotlightReceiver: deleting entire bundle identifier %@
SGDSpotlightReceiver: deleteAllSearchableItemsWithBundleID: error sending deletion to ProactiveHarvesting: %@
SGDSpotlightReceiver: deleting %tu domain identifiers (%tu after removing overlaps) for %@
SGDSpotlightReceiver: deleteSearchableItemsWithDomainIdentifiers: error sending deletion to ProactiveHarvesting: %@
SGDSpotlightReceiver: deleting %tu unique identifiers (%tu after de-duplication) for %@
SGDSpotlightReceiver: deleteSearchableItemsWithIdentifiers: error sending deletion to ProactiveHarvesting: %@
SGDSpotlightReceiver: purging %tu unique identifiers (%tu after de-duplication) for %@
SGDSpotlightReceiver: purgeSearchableItemsWithIdentifiers: error sending purge to ProactiveHarvesting: %@
SGDSpotlightReceiver: addUserAction: error donating to ProactiveHarvesting: %@
received user action from %@
Plugins finished NSUA processing via CTS: %@
SGDSpotlightReceiver: _addSearchableItem: error donating to ProactiveHarvesting: %@
SGDSpotlightReceiver: Received %tu items from %@.
SGDSpotlightReceiver: invalidated highlight cache and notified of refresh
ignoring items since the bundle is disallowed by user's settings
Decoded %tu of %tu items received from %@.
Will delete %tu encrypted items
Deleted %tu encrypted items
Deleting %tu group indentifiers for Interactions from %@.
Deleting all Interactions from %@.
Deleting %tu Interactions domain identifiers from %@.
Purging %tu Interactions from %@.
Deleting %tu Interactions from %@.
phoneNumberWithStringValue unexpectedly failed for string: %@
unifiedContactsMatchingPredicate failed with predicate %@ and error %@
Extracted pseudo-contact matches "me" contact, Suggestion suppressed
Found %lu curated contacts for pseudo-contact
Filtered contact: %@
Extracted pseudo-contact email address matches "me" contact: %@
Extracted pseudo-contact phone number matches "me" contact: %@
Extracted pseudo-contact postal address matches "me" contact: %@
Extracted pseudo-contact social profile matches "me" contact: %@
failed to load trie for naming tradition; tradKey: %@
Failed to locate resource; tradition: %@, fname: %@, path: %@
SGPortraitRequestHandler processing NSUA %@
SGPortraitRequestHandler skipping ineligible CSSI %@
SGPortraitRequestHandler processing CSSI via deferred harvest: %@
SGPortraitRequestHandler processing text message CSSI %@
SGPortraitRequestHandler processing email CSSI %@
SGPortraitRequestHandler: CSSI from %@ was not matched with a valid pipeline and will not be processed.
SGTokenizerMappingTransformer reloading NLTagger in response to new asset installation
Found %lu events to bump TTL on for OpaqueKey: %@
Unable to save event in event store: %@
Unable to save event in event store; description: %@, error: %@
EKEventStore+Suggestions: bumped TTL for NL Event ZKW
Found related EKEvent by db lookup of related keys.
Could not find %@ in message
Error during migration_deleteInteractions: %@
discarding ill-formatted serialized interaction key
starting rebuildFTSWithDetailEntityIDDocIDs
rebuildFTSWithDetailEntityIDDocIDs: failed. Moving old table back.
rebuildFTSWithDetailEntityIDDocIDs: success. Deleting backup table.
failed to drop backup table: entity_fts_docidfix_backup: %@
Error during rebuildFTSWithDetailEntityIDDocIDs: %@
Erroring trying to reinsert FTS row: %@
Error selecting source document ids from emailMetadata: %@
Unable to delete source document snippets from legacy table: %@
Unable to populate source document snippets in emailSnippets: %@
Unable to populate source document tags: %@
Unable to delete source documents from entity table: %@
Unable to deparent source documents found in entityParentage: %@
Unable to copy entities into emailMetadata: %@
Unable to clear masterEntityIds from migration_FixupMergeGroups: %@
Unable to delete messaging terms with semicolons. Error: %@
Could not install hashHexToBlob() sqlite function
Unable to set blob value in migration query: %@: Error: %@
Unable to remove identityPhones table during deduplication: %@
Unable to rewrite identityPhones table during deduplication: %@
Unable to clear identityPhones table during deduplication: %@
Unable to create deduplicated identityPhones table: %@
migration_CreateFTSTableWithITS
migration_RecreateFTSTableWithITS
Unable to add ix_entityTags_dupKeyHash index during legacy migration: %@
Unable to add duplicateKeyHash column during legacy migration: %@
Unable to add groupIdIdx index during legacy migration: %@
Unable to add groupId column during legacy migration: %@
Unable to add entityContentHashIdx index during legacy migration: %@
Unable to add contentHash column during legacy migration: %@
Unable to add entityDownloadStateIdx index during legacy migration: %@
Unable to add downloadState column during legacy migration: %@
needed to add cnContactsToSgContacts table but failed
needed to add serializedContacts table but failed
needed to add entityParentage table but failed
needed to add author column but failed
unable to erase title data from email entities during content migration
unable to erase content data from entities during content migration
unable to copy non-email snippets during content migration
unable to copy email snippets during content migration
unable to detach snippets after trying to migrate content data
unable to attach snippets in order to migrate content data
migrating SGSqliteDatabase
Migrating %@ & %@
Future database version detected. Giving up on migration.
Encountered %@ database; dropping all data.
Encountered empty database (user_version == 0)
Failed to clear legacy database.
Unrecoverable db version mismatch %ld & %ld
database migration bailing out at version %lu due to device being locked.
Finalizing migration with a merge blob sync
about to check for language change for FTS tables: %@
detected need for FTS rebuild: %@: %@
done migrating: %@
migrating entities from zero to version %lu
failed to migrate entity db from zero to %lu
migrating snippets from zero to version %lu
failed to migrate snippets db from zero to %lu
attempt to skip or repeat a migration
migrating entities to version %ld
failed to migrate entity db to %ld
migrating snippets to version %ld
bootstrapping snippets migration
catching up snippets migration to %ld
failed to migrate snippets db to %ld
starting update of FTS table for language change: %@: %@
resuming copy of FTS data to new table
preparing to copy FTS data
updateLanguageForFTSTablesToLanguage got nil language but has no in-progress copy to restart
done with FTS copy, going to drop old table: %@
failed to drop old entity_fts after updating to new language
failed to rename %@ to %@
failed to drop %@ in preparation for renaming
highest entity for FTS copy: %@: %llu
fts copy batch: %llu -> %llu
Copying from old FTS table from %lu to %lu
failed to insert from old fts table limit %lu offset %lu
failed to determine max docid
failed to generate create query for new FTS table %@
creating new FTS table: %@: %@
failed to create new FTS table %@
current user language: %@: %@
old user language: %@: %@
languageToUpdateEntityFTSTo returning: %@
migrator for %@ running query: %@
SGDataMigrator encountered error during migration of %@: versions %lu & %lu, query: %@, error: %@
sqlite_master had a table with a NULL name
failed to clear snippets db
failed to clear entities db
migrator passed nil filename for entity db
migrator passed nil filename for snippets db
SGMailIntelligenceDissector: Fuzzy contact match succeeded.
SGMailIntelligenceDissector: Searching for contact matching provided e-mail address.
SGMailIntelligenceDissector: Could not map e-mail address to contact.
SGMailIntelligenceDissector: No interactions with contact found.
SGMailIntelligenceDissector: Mail saliency inference is off
SGMailIntelligenceDissector: a nil message ID, skipping
SGMailIntelligenceDissector: computed sender connection score of %f
CandidateNameRange not in plainTextContent: %@ %tu %tu
BirthdayMLExtraction: Text message has no conversation identifier
Error fetching user DOB: %@
ContactMLSharing: Text message has no conversation identifier
ContactMLSharing: Invalid contact detail range plainTextContent.length %tu supervision.ignoreAfter %tu match.range [%tu, %tu]
Couldn't find uniqueIdentifier %@ in conversation -- aborting selfIdDetectionWithEntity
Target message (uniqueIdentifier=%@) not the last in conversation -- aborting selfIdDetectionWithEntity
Conversation message %d with id %@ and content length %lu
Entity message with id %@, content length %lu
Entity message with detected data item %@
Target message unrecoverable state with matching content = %d
Couldn't find uniqueIdentifier %@ in conversation -- aborting detectionFromEntity
Target message (uniqueIdentifier=%@) not the last in conversation -- aborting detectionFromEntity
SGDetectedAttributeML - Failed to load transformer instance for language: %@, %lu
SGDetectedAttributeML: failed to generate vector.
SGDetectedAttributeML - failed to get training descriptor.
IdentityKey for social profile types currently unsupported: %@
Unknown handle type %@
SGDSpotlightCommander: Error: unable to get spotlight index to issue reimport command to
SGDSpotlightCommander: issuing command to spotlight: %@
SGDSpotlightCommander: Error during CS issueCommand: %@
SGDSpotlightCommander: reimport command issued: %@
SGDSpotlightCommander: reimport command issued
SGDSpotlightCommander: reimportForPersonHandle: %@ : %@ : %@
SGDSpotlightCommander: storing reimport items for %lu bundles for request %llu
SGDSpotlightCommander: Error: reimport search query error: %@: %@
SGDSpotlightCommander: total items to be reimported: %tu
SGDSpotlightCommander: reimport query found %lu items
SGDSpotlightCommander: foundItemsHandler making new set for %@
SGDSpotlightCommander: foundItemsHandler: %@ - %@
SGDSpotlightCommander: attempting to process reimport requests
SGDSpotlightCommander: found %lu unqueried reimport requests
SGDSpotlightCommander: found %lu unexecuted reimport requests
SGDSpotlightCommander: got reimport request: %@
ignoring reimport request since it is subset of existing query: %@
ignoring reimport request since plugin already has a pending request: %@
Skipping NL dissector: allowNaturalLanguageDissector is OFF
Ignoring NL dissection because an iCalendar attachment exists.
Ignoring NL dissection because document was matched by a template
SGNaturalLanguageDissector: Event is cancelled
MDSearchableIndex returned error %@
Could not fetch last CoreSpotlight state: %@
contactsWithIdentifiers filtered %lu entities from the wrong table.
Could not load contacts: %@
nil entityId or serializedContact data found: %@ %@
got NULL entityId from serializedContacts table
clearAllTombstonesForSpotlightReferencesIf: waiting for write transaction
clearAllTombstonesForSpotlightReferencesIf:YES (will clear)
clearAllTombstonesForSpotlightReferencesIf:YES (did clear)
clearAllTombstonesForSpotlightReferencesIf:NO
Failed to check for existing spotlight reference: %@
Email Searchable Item is malformed - missing message id or account identifier
Email Searchable Item is malformed - no account identifier
Could not create DKIM verification context %@
Failed to process event suggestion 
 No From: header found.
Failed to process event suggestion 
 Could not parse domain in From: header.
Failed to process event suggestion 
 No valid DKIM signature found.
Successfully verified DKIM signature.
Failed to process event suggestion 
 A temporary error occured while verifying the DKIM signature(s).
Failed to process event suggestion 
 A permanent error occured while verifying the DKIM signature(s).
Ignoring DKIM signature because it has expired.
Ignoring DKIM signature because the signing domain identifier is not the same as or a subdomain of the domain used in the From: header.
Could not get message content: %@
Read error %@ loading message content from URL: %@
[vipManager conformsToProtocol:@protocol(EMVIPReader_Private)] was false (class: %@) -- the VIP set might be empty even if the user has VIP
Could not get localized string path for localization '%@
Could not load localized strings from %@: %@
Could not parse localized strings from %@: %@
SGStringDonationHandler: donating topics
SGStringDonationHandler: donating named entities
SGStringDonationHandler: donating notifications
SGStringDonationHandler: _donateNotificationFromLabeledStrings: ignoring notification string from %@ due to settings.
SGStringDonationHandler: _donateNotificationFromLabeledStrings: ignoring notification string from %@ due to policy.
SGStringDonationHandler: %tu string donations from %@ : %@
SGStringDonationHandler: notification extraction disabled
SGRTCLogging+Reminders: logging extraction to RTC
SGRTCLogging+Reminders: logging interaction to RTC
SGRTCLogging+Reminders: No reminder found for entity record Id: %@
Invalid value for SGNameDetectorAlgorithm: %lu
SGNameDetector - Error querying ranked contacts from PPContactStore: %@
Dissecting a donated contact identifier: %@
Received a donated contact identifier: %@, but contact store returned nil
malformed serialized time range: %@
SGSqlEntityStore+Events: event startTimezone is nil but endTimezone is not nil
SGSqlEntityStore+Events: event endTimezone is nil but startTimezone is not nil
SGTopicExtractionPlugin: deleting all topics from %@
failed to delete all documents with bundleId %@: %@
SGTopicExtractionPlugin: deleting topics from %@ for %tu domains: %@
failed to delete documents with %lu groupIds from bundleId %@: %@
SGTopicExtractionPlugin: deleting topics from %@ for %tu documents: %@
failed to delete documents with %lu documentIds from bundleId %@: %@
SGTopicExtractionPlugin: attempting to harvest Podcasts intent
SGTopicExtractionPlugin: ignoring Podcast intent since it is not an INPlayMediaIntent
SGTopicExtractionPlugin: topics and scores: %@
SGTopicExtractionPlugin failed to donate Podcasts interaction topics: %@
SGTopicExtractionPlugin: completed harvesting %tu topics from Podcasts for interaction: %@
SGTopicExtractionPlugin: Warning: failed to flush: %@
SGTopicExtractionPlugin: deferring topic extraction from %@ (targetted plugins: %@)
SGTopicExtractionPlugin: not extracting topics from %@ (%@ is not a relevant bundle Id)
SGTopicExtractionPlugin: not extracting topics from %@ although it is from Safari since it lacks Reader text and title extraction is disabled
SGTopicExtractionPlugin: not interested in searchable item: %@, as it has no content.
SGTopicExtractionPlugin: not interested in searchable item: %@
Received a searchable item with no text contect. Not performing extraction.
SGTopicExtractionPlugin received interaction from %@
SGTopicExtractionPlugin skipping Interaction from %@ due to missing identifier
SGTopicExtractionPlugin blocking Interaction from %@
SGTopicExtractionPlugin: processing searchableItem for bundleId: %@, textLen: %tu, docId: %@
SGTopicExtractionPlugin: processing searchableItem %@ with title: %@
SGTopicExtractionPlugin setup
SGTopicExtractionPlugin: consumeInteractionWithContext: received interaction from %@
SGTopicExtractionPlugin: consumeInteractionWithContext: skipping Interaction from %@ due to missing identifier
SGTopicExtractionPlugin: consumeInteractionWithContext: blocking Interaction from %@
SGTopicExtractionPlugin: _consumeContentParts got 0 parts for %@
SGTopicExtractionPlugin: _consumeContentParts got %tu containers from %@
SGTopicExtractionPlugin: consumeThirdPartyAppContentWithContext: content.length = %tu
SGTopicExtractionPlugin: consumeSafariContentWithContext: content.length = %tu
SGTopicExtractionPlugin: consumeRemindersContentWithContext: notes.length = %tu
SGTopicExtractionPlugin: consumeNotesContentWithContext: content.length = %tu
SGTopicExtractionPlugin: consumeNewsArticleViewsWithContext: content.length = %tu
SGDNotificationBroadcaster posting SGURL changed notification
SGDNotificationBroadcaster failed to post SGURL change notification: error %u
SGDNotificationBroadcaster posting reminder notification
SGDNotificationBroadcaster posting event notification
SGDNotificationBroadcaster posting contact notification
SGMITrialClientWrapper: classificationOfflineRecall accessed: %@
SGMITrialClientWrapper: classificationOfflinePrecision accessed: %@
SGMITrialClientWrapper: classificationThreshold accessed: %@
SGMITrialClientWrapper: highRecallFilterFeatureUpperBounds accessed: size %lu, first element %@
SGMITrialClientWrapper: highRecallFilterFeatureLowerBounds accessed: size %lu, first element %@
SGMITrialClientWrapper: highRecallFilterFeatureNames accessed: size %lu, first element %@
SGMITrialClientWrapper: saliencyOverrideFeatureUpperBounds accessed: size %lu, first element %@
SGMITrialClientWrapper: saliencyOverrideFeatureLowerBounds accessed: size %lu, first element %@
SGMITrialClientWrapper: saliencyOverrideFeatureNames accessed: size %lu, first element %@
SGMITrialClientWrapper: modelGroundTruthFeatureUpperBounds accessed: size %lu, first element %@
SGMITrialClientWrapper: modelGroundTruthFeatureLowerBounds accessed: size %lu, first element %@
SGMITrialClientWrapper: modelGroundTruthFeatureNames accessed: size %lu, first element %@
SGMITrialClientWrapper: modelFeatureStandardizationStandardDeviation accessed: size %lu, first element %@
SGMITrialClientWrapper: modelFeatureStandardizationMeans accessed: size %lu, first element %@
SGMITrialClientWrapper: modelFeatureNames accessed: size %lu, first element %@
SGMITrialClientWrapper: modelPath accessed: %@
SGMITrialClientWrapper: isEnabled accessed: %@
SGMITrialClientWrapper: Unable to load plist content for %@
SGMITrialClientWrapper: Empty plist content for %@
SGMITrialClientWrapper: TRILevel is nil for %@
SGMITrialClientWrapper: No plist file found at %@
Could not delete all pseudo-contacts: %@
Could not delete pseudo-contact from Spotlight: %@
Not sending pseudo-contact to Spotlight because the store is missing
Not sending pseudo-contact to Spotlight because it was confirmed or rejected
Not sending pseudo-contact to Spotlight because it has no original details
Not sending pseudo-contact to Spotlight because it is already in the curated contacts
Sending pseudo-contact with id %@ to CoreSpotlight
Could not index contact in CoreSpotlight: %@
failed to get URL for library directory: %@
_vCardsDirectoryURL is nil
failed to create %@: %@
sg_fallbackURL: Event does not have schame
Ignoring URL that is not http or https
Could not convert string to URL
sg_isCuratedEventFromSuggestionNewerThan: missing suggestion info or timestamp
SGExtractionDocument: Invalid range
SGExtractionDocument: No model output
Error: could not mallocRegexp!
Memory not allocated by mallocRegexp: %llu
Failed to process event suggestion 
 INReservation.itemReference.vocabularyIdentifier property is nil.
Failed to process event suggestion 
 two or more INReservation objects share the same INReservation.itemReference.vocabularyIdentifier.
SGMIBiomeUtility: Successfully consumed stream
SGMIBiomeUtility: Error: %s
Error retrieving directory for Biome stream data
CoreSuggestionsAssets [locale] metadata download success? %d
CoreSuggestionsAssets [common] metadata download success? %d
SGEKCalendarAdapter _removeEKEvent: Unable to remove event. EKStore commit error: %@
SGEKCalendar _removeEKEvent: AdapterUnable to remove event; description: %@, error: %@
SGEKCalendarAdapter _removeEKEvent: Successfully removed event.
SGEkCalendarAdapter: no bundle record found: %@
SGEKCalendarAdapter: Calling _cancelEKEvent
SGEKCalendarAdapter: Calling _updateEKEvent
SGEKCalendarAdapter _addEKEventToCalendar: Adding event via EK. [SGEvent (%{public}@)]
SGEKCalendarAdapter _addEKEventToCalendar: Adding event to naturalLanguageSuggestedEventCalendar. [SGEvent (%{public}@)]
SGEKCalendarAdapter _addEKEventToCalendar: Adding event to suggestedEventCalendar. [SGEvent (%{public}@)]
SGEKCalendarAdapter _addEKEventToCalendar: Unable to save event in event store: %@. [SGEvent (%{public}@)]
SGEKCalendarAdapter _addEKEventToCalendar: Successfully saved event in event store. [SGEvent (%{public}@)], [EKEvent (%{public}@)]
SGEKCalendarAdatper _eventsAssociatedWithStorageEvent: Located associated event based on content rather than pseudoevent key match. [SGStorageEvent (%{public}@)]
SGEKCalendarAdatper _eventsAssociatedWithStorageEvent: More than one matching event found (%lu). [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter orphanEvent: No existing event found. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter orphanEvent: Orphaned event is on a curated calendar; not removing. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter cancelEvents: Unable to remove events. EKStore commit error: %@. [SGStorageEvent (%{public}@)]
Unable to remove events; description: %@, error: %@
SGEKCalendarAdapter cancelEvents: Successfully removed events. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter cancelEvent: No existing event found. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter cancelEvent: NL Event cancelled. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter _updateEvent: Unable to save event cancellation: %@. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter _updateEvent: Unable to save event cancellation; description: %@, error: %@
SGEKCalendarAdapter _updateEvent: Successfully Removed event in a curated calendar. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter _updateEvent: Calendar Event missing from store for identifier: %@. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter _updateEvent: Unable to update event: %@. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter _updateEKEvent: Unable to update event; description: %@, error: %@
SGEKCalendarAdapter _updateEvent: Successfully updated event. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter addEvents: Unable to save events in event store. EKStore commit error: %@
SGEKCalendarAdapter addEvents: Unable to save events in event store; description: %@, error: %@
SGEKCalendarAdapter addEvents: Successfully saved events in event store
SGEKCalendarAdapter addEvent: Skipping event already known to be cancelled. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter addEvent: Skipping event that has already passed. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter addEvent: Skipping NLEvent with empty title. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter addEvent: Skipping NLEvent that is not status Confirmed. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter addEvent: Skipping NL Event with associated event in EKEventStore. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter addEvent: Skipping event-associated-with-storage-event with missing suggestionInfo. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter addEvent: Skipping event which is not more recent than preexisting EKEvent. [SGStorageEvent (%{public}@)]
exiting due to repeated SQLITE_BUSY
suggestd exiting due to lack of disk space while setting journal_mode.
suggestd exiting due to IO error
suggestd exiting due to corrupt SQL vtable.
suggestd exiting due to lack of disk space
db corruption detected, leaving behind marker so we recover
SQLite error: %@
Cannot calculate free space
Free space attribute is missing
Free space attribute is not an NSNumber
Removing all journal files at %@
SGDatabaseJournal not removing bogus journal directory: %@
SGDatabaseJournal unable to remove journal directory: %@
SGDatabaseJournal unable to re-create directory for storing journals: %@
Executing queries from journals to %@
SGDatabaseJournal unable to open journal directory: error(%i): %s
journal execution checking lock state after %u files
journal execution exiting early after %u files because device is locked
executing journal file: %@
Got nil after trying to unarchive a db journal: %@
No __query key set in journal file: %@
ignoring journal file: %@
SGDatabaseJournal unable to delete journal file: %@: %@
A bogus or corrupt journal file was found and has been cleaned up. Suggestd will relaunch and continue: %@
SGDatabaseJournal deleted journal file: %@
SGDatabaseJournal error when replaying query: %@: %@
SGDatabaseJournal error when immediately running query: %@: %@
SGDatabaseJournal unable to create directory for storing journals: %@
SGTextMessage
SGConversationFlatteningTransformer
PMLTransformerProtocol
PMLPlistAndChunksSerializableProtocol
NSObject
schema
SGM2SelfIdModelScore
NSCopying
SGM2SuggestdExitReason
SGM2AutocompleteUserSelectedContact
SGM2BundleIdsTrackedAsOther
SGCloning
SGParsedPersonFromInteraction
SGMIMetricsWidgetItem
SGM2ContactCreated
SGMicrodataToJsonParser
URLs
SGModel
0 0@
SGTransformerInstance
SGModelRules
SGM2ContactDetailExtraction
SGM2ContactDetailSent
SGM2ContactsInterfaceCacheCount
Reminders
SGM2ContactsInterfaceCacheHit
SGM2FoundInMailModelScore
KVStore
SGWordBoundaryQuickTypeInference
SGStructuredEventDocument
SGReminderDissector
SGTextMessageProcessing
SGMailMessageProcessing
SGM2SearchResultsIncludedPureSuggestion
SGM2SearchResultsUserSelectedContact
SGM2SerializedContactsCacheHit
SGM2SqliteErrors
SGURLPlugin
HVRemindersConsumer
HVConsumer
FIAPPlugin
Saliency
SGM2SuggestedContactDetailShown
SGM2SuggestedContactDetailUsed
SGM2UnknownContactInformationShown
Utilities
SGM2PerfXPCLatency
SGM2CustomResponsesHarvest
SGMicrodataItemScope
SpotlightMapping_Internal
SGMonochrome
SGDetectedAttributeMetrics
SGMessageKey
SGEntityKey
SGSqliteExitOnDeviceLockErrorHandler
SGDPowerLog
SGDeliveryDissector
SGDXPCConnectionUtilities
SGTextMessageKey
SGRealtimeEventResponse
SGHistoryObserver
SGSuggestHistoryObserver
SGDSuggestManager
HVInteractionConsumer
HVMailConsumer
HVContentAdmissionObserver
SGDSuggestManagerAllProtocol
SGDSuggestManagerFidesProtocol
SGDSuggestManagerMessagesProtocol
_SGDSuggestManagerContactsConfirmRejectProtocol
_SGDSuggestManagerEventsConfirmRejectProtocol
SGDSuggestManagerInternalProtocol
_SGDSuggestManagerInternalHarvestProtocol
SGDSuggestManagerIpsosProtocol
SGDSuggestManagerDeliveriesProtocol
SGDSuggestManagerRemindersProtocol
SGDSuggestManagerEventsProtocol
SGDSuggestManagerURLsProtocol
SGDSuggestManagerContactsProtocol
SGDSuggestManagerMailProtocol
_SGSuggestManagerFoundInAppsProtocol
_SGDSuggestManagerBaseProtocol
_SGDSuggestManagerMetricsProtocol
SGEKEventStoreProvider
SGDPurgeDeletionBox
SGRealtimeSuggestionsTuple
SGEntityMappingTransformer
SGMIDailyActivity
SGDWorkQueueFile
SGDWorkQueue
SGDWorkQueueItem
SGDWorkQueueName
Compression
SGStructuredEventExtractionModel
SGSignificantEmailAddressModelForIMessage
SGM2HarvestCost
SGRe2PrefilterTree
SGDManagerForCTS
SGDeduper
SGTopicDissectorGuardedData
SGTopicDissector
SGCalendarAttachmentDissector
SGCalendarAttachmentDissectorUtility
SGContactDetailsHolder
SGStorageContact
SGDatabaseMigratorSnippets
SGMISpotlightUtility
SGDPluginManager
TestHelpers
StatsCounters
SGMIMetricsSubmodelOutputVector
SGContextKitResultContainer
SGAccountsAdapter
SGInMemoryAdapter
SGJournalRemindersObserver
SGJournalBaseObserver
SGJournalContactsObserver
SGJournalCalendarObserver
SGRemindersAdapter
SGMIMetricsPerformanceInformation
SGMISaliencyInference
SGNameMappingTransformer
SGSelfIdentificationDetection
SGSelfIdentification
SGNamedEntityDissector
SGSearchableItemIdTriple
SGPipelineEntity
SGEntity
SGMeCardDissector
SGHistorySharedData
SGSuggestHistory
SGNoCloudNSUbiquitousKeyValueStore
SGKeyValueCacheManager
SGWords
SGMIMetricsSubmodelAgeVector
RFC822Parsing
SGDataDetectorMatchesWithSignatureRange
SGAddressCoalescingState
SGDataDetectorMatch
NSSecureCoding
NSCoding
SGThreadParser
SGMIAttachmentSizeHistogram
SGInhumans
SGSpotlightWritebackDissectorCacheEntry
SGSpotlightWritebackDissector
SGExtractionModel
SGIdentityEdge
SGContactDetailSummary
IdentityStore
SGPatternGlobalData
SGPatterns
SGPatternDataFile
SGSimpleMailHeaderKeyValue
HVHeaderCollection
SGSimpleMailMessage
SuggestionsExtensions
SGNamedEntityExtractionPlugin
HVUserActivityConsumer
HVThirdPartyAppConsumer
HVSafariConsumer
HVNotesConsumer
HVNewsConsumer
SGDPStringRecorder
SGQuickResponsesML
EncodedWord
SGHtmlParser
SGMISaliencyModelConfigRule
SGMISaliencyModelConfig
SGLowMemoryContactEnumeration
SGLexicon
SGNicknames
SGContactsInterface
SGSymbolicMappingTransformer
SGOffsetDictionary
SGFlightData
SGFlight
Utility
SGTaggedMallocCompressionBuffer
SGTaggedMallocWorkQueueItemPart
SGTaggedMallocLevenshteinDistanceBuffer
SGTaggedMallocEmailHtml
Suggestions
SGBinaryClassificationModel
SGBinaryClassificationModelRules
SGBloomFilter
SGBloomFilterChunkMmap
SGBloomFilterChunk
SGBloomFilterChunkInMemorySparse
SGBloomFilterChunkInMemory
SGMIEnablementConfig
SGTextMessageConversationTracker
SGConversationHistory
SGTextMessageItem
SGConversationTurnProtocol
SGDatabaseJournalFile
SGReminderExtractionModelGuardedData
SGReminderExtractionModel
SGRequestContext
MLFeatureProvider
SGStructuredEventCoreMLInputWrapper
SGRTCLoggingGuardedData
SGRTCLogging
ReimportRequests
SGMIMetricsWidgetEngagedEvent
sgLogging
SGXPCActivityManager
SGXPCActivityManagerProtocol
SGLongRunningTaskManager
SGLongRunningTask
SGTokenString
JSExport
SGJSBurstTrieExports
SGJSBurstTrie
SGReverseTemplateJS
SGContactStoreFactory
VisibleForTesting
SGStructuredEventTrialClientWrapperGuardedData
SGStructuredEventTrialClientWrapper
SGSqliteReadTransaction
SGSqliteWriteTransaction
SGSqliteTransaction
SGSqliteDatabaseSharedLock
SGSqliteDatabaseImpl
SGSqliteDatabase
SGStructuredEventDissector
SGMicrodataDocument
SGMIMetricsWidgetViewedEvent
SGSchemaOrgKey
Locations
Deleting
SGDHarvestQueueOnDisk
SGDHarvestQueueItemOnDisk
SGDHarvestQueueItem
SGDHarvestQueueFileReader
SGDHarvestQueueFileRegistry
SGDHarvestQueueFileWriter
SGDHarvestQueue
SGDHarvestQueueInMemory
SGDHarvestQueueItemInMemory
SGDHarvestQueueLegacy
SGDHarvestQueueItemLegacy
SGDHarvestQueueNop
SGDHarvestQueueCombo
SGMailClientUtilMock
NaiveBayesModel
SGAhoCorasick
SGMISaliencyModelFeatureProvider
SGMISaliencyModelOutput
SGMISaliencyModel
SGNames
SGMIBiomeReducedMessageEvents
SGMIBiomeEventReducer
SGSchemaConversionProtocol
SqlHelpers
DatabaseCheck
Maintenance
Helpers
WKNavigationDelegate
SGDOMParser
SGStorageLocation
SGEventLocationForGeocode
Internal
_SGDCloudKitSyncPersistedState
SGDCloudKitSync
APSConnectionDelegate
SGDCloudKitSyncObserver
SGCuratedChangeNotificationsBaseListener
SGCuratedChangeNotificationsAddressBookListener
SGCuratedChangeNotificationsCalendarListener
SGCuratedChangeNotifications
SGReminderDueLocation
SGChatLengthEstimator
SGMIFeature
CloudKitRecord
SGContactSharingModel
Significance
SGMicrodataItem
SGDetection
SGCNContactIdentifierCollection
SGLabeledValue
SGStructuredEventCoreMLOutputWrapper
SGTokenDistanceMappingTransformer
SGJournalEntry
SGQuickResponsesEngagementMetrics
SGDPDeviceMetricsCollector
IDSServiceDelegate
RealtimeDonations
SGStringMappingTransformer
ContactDetails
SGCoalescingDropBox
SGPostalAddressExtraction
SGSocialProfileDetails
SGModelMappingHelper
Writing
SGHtmlEntities
SGSlice
SGSignatureDissector
SGMeContact
SGMIMetricsSaliencyInference
SGMetricsDissector
SGPseudoEventKey
SerializedContacts
SGMIModelStore
SGReminderMessage
SGMailQuoteParser
SGReminderTrialClientWrapperGuardedData
SGReminderTrialClientWrapper
SGSqlEntityStoreCNContactMatcherHelper
SGSignificantEmailAddressModel
SGTokenizer
Loading
SGHKHealthStore
SGDetectedAttributeDissector
SGSelfIdentificationModel
SGInteractionKey
SGEspressoModel
SGExtractionModelCoreMLFeatureWrapper
SGXPCServer
SGMailPatterns
SGSignificantPhonenumberModel
SGHarvestQueueMetricsTimer
SGHarvestQueueMetrics
SGPortraitRequestClient
SGPortraitRequestProtocol
SGAggregateLogging
SGTaggedCharacterRange
SGTrialClientWrapper
SGContactDetail
SGSGtoCNContactsCacheUpdateAdapter
CNtoSGContacts
SGCustomResponseHarvester
SGSqlEntityStore
SGOutput
SGExtractionDissector
SGInteractionProcessing
SGMISubmodelUpdater
SGServiceContext
SGReverseTemplatesJSDataDetectors
SGPseudoReminderKey
SGDCKLocation
SGMIFeatureVector
SGDataNormalization
SGDCKInteractionInfo
SGAppLaunchHistory
SGM2HarvestBudgetStatusTransition
ContentProtection
SGPipelineEnrichment
SGMIMetricsMailAttachmentHistogramByCategory
SGMetricsHelper
SGMIBiomeSummaryResults
SGURLContainer
SGExternalEnrichment
SGURLDissector
SGDeliveryKey
SGIdentityName
SGDSqlHarvestQueueStore
SGMIFeatureVectorCollator
SGMessage
SGSpotlightIdentifiers
SGM2BirthdayExtractionWithSupervision
SGStructuredEventClassification
SGJournal
SGContactEntity
SGRawKey
SGDOMParserResult
SGPipeline
PipelineAdditions
SGPOSTagger
SGPipelineDissector
SGContactDetailKey
SGPseudoContactKey
SGMailAttachment
SGTextMessageBirthdayCongratsModel
SGStorageEvent
SGEventForGeocode
SGDSpotlightReceiver
SpotlightReceiver
SGContactPipelineHelper
AttributePresence
SGCuratedContactMatcher
SGDCKEvent
SGPaths
SGNameInversionPredictor
SGEmailKey
SGMINaiveBayesCountPair
SGMINaiveBayesModelQueryResult
SGMINaiveBayesModel
SGMI
ExtractionInfos
SGPortraitRequestServerHandlerCache
SGPortraitRequestServerDelegate
NSXPCListenerDelegate
SGPortraitRequestHandler
SGMIMetricsTrialMetadata
SGTokenizerMappingTransformer
SGMIMetricsSaliencyEvent
SGEntityMatchingTransformer
DatabaseMigrator
SGMailIntelligenceDissector
SGSelfIDSupervision
SGContactDetailSupervision
SGDetectedAttributeML
SGRe2Basic
SGRe2
SGRe2Subregexps
SGRe2Lazy
SGPlainTextContentCursor
SGIdentityKey
SGMicrodataItemProp
SGMicrodataParser
SGDSpotlightCommander
SGNaturalLanguageDissector
CSSearchableIndexDelegate
Spotlight
SGMIMetricsGroundTruthEstimationEvent
SGDuplicateKey
SGMailClientUtil
EMVIPReader_Private
SGSignificantAddressModel
SGProactiveHarvestingSupport
SGFoundInAppsStrings
SGStringDonationHandler
PPStringDonationProtocol
SGContactAggregator
SGNameDetector
MessageManagement
SGDonatedContactDissector
Events
SGDatabaseMigratorEntities
SGSeekableData
SGSeekable
SGLevenshtein
SGDCKTimeRange
SGTopicExtractionPlugin
SGCuratedEventKey
SGStorageReminder
SpotlightMapping
SGDNotificationBroadcaster
SGXpcTransaction
SGMITrialClientWrapperGuardedData
SGMITrialClientWrapper
SGSchemaKeys
SGSpotlightContactsAdapter
SGSignificantAddressModelForIMessage
SGPortraitUtils
SGExtractionDocument
SGWebPageKey
SGDPLogging
SGMicrodataParserStackItem
SGMIBiomeUtility
SGContactSharingTransformer
SGAsset
Tags
SGEKCalendarAdapter
SGM2HarvestCostBreakdown
ErrorHandling
SGDatabaseJournal
T@"CSPerson",&,V_sender
T@"NSArray",&,V_recipients
T@"NSString",&,V_conversationIdentifier
TB,V_senderIsAccountOwner
T@"NSString",&,V_nickname
T@"NSString",&,V_photoPath
TB,R,V_senderIsBusinessChat
T@"NSString",R,V_attachmentFilename
_senderIsAccountOwner
_senderIsBusinessChat
_sender
_recipients
_conversationIdentifier
_nickname
_photoPath
_attachmentFilename
initWithSearchableItem:
initWithMessagesContentEvent:contentProtection:
initWithMessageDictionary:
author
spotlightBundleIdentifier
spotlightDomainIdentifier
copyWithZone:
sender
setSender:
recipients
setRecipients:
conversationIdentifier
setConversationIdentifier:
senderIsAccountOwner
setSenderIsAccountOwner:
nickname
setNickname:
photoPath
setPhotoPath:
senderIsBusinessChat
attachmentFilename
.cxx_destruct
handleFailureInMethod:object:file:lineNumber:description:
currentHandler
initWithFormat:
boolValue
objectForKeyedSubscript:
suggestedNickname
suggestedPhotoPath
attachment
accountIdentifier
hasPrefix:
containsObject:
initWithDisplayName:handles:handleIdentifier:
handleType
arrayWithObjects:count:
containsString:
fromHandle
_nicknameCustomKey
valueForCustomKey:
_photoPathCustomKey
lastPathComponent
contentURL
isEqualToString:
primaryRecipients
countByEnumeratingWithState:objects:count:
handleIdentifier
sanitizeHandles:
handles
objectAtIndexedSubscript:
authors
attributeSet
isSent:
firstObject
initWithKeyName:searchable:searchableByDefault:unique:multiValued:
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
_perMessageTranformer
transform:
toPlistWithChunks:
initWithPlist:chunks:context:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
initWithPerMessageTransformer:
isEqualToConversationFlatteningTransformer:
readObjectWithPlist:chunks:context:
initWithClassNameKey:
dictionaryWithObjects:forKeys:count:
writeToPlistWithObject:andChunks:
stringByAppendingString:
addObject:
setObject:forKeyedSubscript:
intValue
integerValue
withPerMessageTransformer:
fromSchema:
initWithProvider:busName:busNumber:tripDuration:departureBusStopLocation:departurePlatform:arrivalBusStopLocation:arrivalPlatform:
UUIDString
initWithVocabularyIdentifier:spokenPhrase:pronunciationHint:
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:reservedSeat:busTrip:
schemaFromBusReservation:
mutableCopy
busTrip
tripDuration
startDateComponents
schema
endDateComponents
busName
busNumber
departureBusStopLocation
postalAddress
departurePlatform
arrivalBusStopLocation
arrivalPlatform
TB,R,N
T@"NSString",&,N,V_key
TB,N
Ti,N,V_model
TB,N,V_result
Ti,N,V_supervision
_key
_model
_supervision
_result
_has
hasKey
model
setModel:
setHasModel:
hasModel
modelAsString:
StringAsModel:
setResult:
setHasResult:
hasResult
supervision
setSupervision:
setHasSupervision:
hasSupervision
supervisionAsString:
StringAsSupervision:
dictionaryRepresentation
readFrom:
writeTo:
copyTo:
mergeFrom:
setKey:
result
allocWithZone:
numberWithBool:
stringWithFormat:
dictionary
floatValue
initWithLatitude:longitude:
coordinate
numberWithDouble:
TI,N,V_exitCode
_exitCode
setExitCode:
setHasExitCode:
hasExitCode
exitCode
numberWithUnsignedInt:
TB,N,V_wasSuggestedContact
TB,N,V_wasKnownContact
Ti,N,V_app
_app
_wasKnownContact
_wasSuggestedContact
setWasSuggestedContact:
setHasWasSuggestedContact:
hasWasSuggestedContact
setWasKnownContact:
setHasWasKnownContact:
hasWasKnownContact
setApp:
setHasApp:
hasApp
appAsString:
StringAsApp:
wasSuggestedContact
wasKnownContact
T@"NSString",&,N,V_bundleId
_bundleId
hasBundleId
bundleId
setBundleId:
second
unsignedIntegerValue
first
copy
textContentNoCopy
sg_clone
numberWithUnsignedInteger:
tupleWithFirst:second:
sg_clonableItemAtIndex:inCodedArray:
T@"NSString",R,N,V_bundleId
T@"NSString",R,N,V_groupId
T@"NSString",R,N,V_interactionIdentifier
T@"NSDate",R,N,V_date
T@"NSString",R,N,V_displayName
T@"NSPersonNameComponents",R,N,V_nameComponents
T@"NSString",R,N,V_email
T@"SGSocialProfileDetails",R,N,V_socialProfile
T@"NSString",R,N,V_phoneNumber
T@"NSString",R,N,V_contactIdentifier
_handle
_groupId
_interactionIdentifier
_date
_displayName
_nameComponents
_email
_socialProfile
_phoneNumber
_contactIdentifier
initWithPerson:bundleId:interactionIdentifier:groupId:date:
_harvestPerson:handle:suggestionType:bundleId:
_harvestEmail:
_harvestPhoneNumber:
_harvestSocialProfile:handle:bundleId:
grabNameIfNeededFromContactStore:
pipelineEntity
groupId
interactionIdentifier
date
displayName
nameComponents
email
socialProfile
phoneNumber
contactIdentifier
interactionGroupId:
interactionContactIdentifier:
interactionBundleId:
interactionId:
fromInteraction
extractionInfoWithExtractionType:modelVersion:confidence:
contactDetail:
stringFromContact:style:
descriptorForRequiredKeysForStyle:
teamId
localizedApplicationName
customIdentifier
originWithType:sourceKey:externalKey:bundleId:fromForwardedMessage:
stringByTrimmingCharactersInSet:
controlCharacterSet
aliases
suggestionType
_peopleFromInteraction:
parseInteraction:bundleId:
intentClassWhitelist
groupIdentifier
startDate
dateInterval
intent
direction
TQ,N,V_messageId
Td,N,V_saliencyScore
TB,N,V_isRead
_messageId
_saliencyScore
_isRead
setMessageId:
setHasMessageId:
hasMessageId
setSaliencyScore:
setHasSaliencyScore:
hasSaliencyScore
setIsRead:
setHasIsRead:
hasIsRead
messageId
saliencyScore
isRead
numberWithUnsignedLongLong:
parseMicrodataToJsonLd:error:
dataWithJSONObject:options:error:
_columnList
documentIdentifier
receivedAt
documentTitle
_updateURLs:stmt:
documentDate
documentTimeInterval
flags
initWithTimeIntervalSinceNow:
deleteURLsOlderThanDate:deletionCount:
trimURLTableDownToLimit:deletionCount:
appendString:
bindNamedParam:toNSString:
bindNamedParam:toNSArray:
recentURLsWithLimit:
urlsFoundBetweenStartDate:endDate:excludingBundleIdentifiers:containingSubstring:flagFilter:limit:
registerURLFeedback:absoluteURL:
writeURL:
trimURLs
urlsFoundBetweenStartDate:endDate:bundleIdentifier:
deleteURLsFromBundleIdentifier:
deleteURLsFromBundleIdentifier:groupIdentifierGlobs:
deleteURLsFromBundleIdentifier:documentIdentifiers:
timeIntervalSince1970
lowercaseString
initWithTimeIntervalSince1970:
initWithURL:title:receivedFromHandle:bundleIdentifier:groupIdentifier:documentIdentifier:documentTitle:documentDate:documentTimeInterval:receivedAt:flags:
absoluteString
receivedFromHandle
T@"<PMLMultiLabelClassifierProtocol>",R,V_model
T@"<PMLTransformerProtocol>",R,V_featurizer
T@"SGModelSource",R,V_modelSource
T@"NSString",R,C,V_locale
_featurizer
_modelSource
_locale
initWithModel:locale:featurizer:modelSource:
predictForInput:
trainingFeaturesOf:
featurizer
modelSource
locale
trainingFeaturesOf:inLanguage:
initWithCapacity:
outputDimension
predict:
vector
modelClass
initWithSource:vector:
transformerInstanceForLanguage:
transformerInstanceForLanguage:withObjective:
modelClassForObjective:
trainingFeaturesOf:inLanguage:withObjective:
newTransformerInstanceForLanguage:
featurize:
_pas_componentsJoinedByString:
transform:stopAfterTransformerWithIndex:
transformers
transformer
rangeOfString:
initWithBlock:
registerOnUpdateBlock:
removeAllObjects
initWithGuardedData:
T@"PMLSessionDescriptor",&,N,V_sessionDescriptor
T@"<PMLTransformerProtocol>",&,N,V_transformer
T#,&,N,V_modelClass
_sessionDescriptor
_transformer
_modelClass
initWithTransformer:sessionDescriptor:modelClass:
sessionDescriptor
setSessionDescriptor:
setTransformer:
setModelClass:
initWithSessionDescriptor:modelClass:
defaultWindowAndNgrams
defaultSessionDescriptorForModelId:featureVersion:language:windowAndNgrams:
descriptorForName:version:locale:
rules
_modelsAvailabeForMode:objective:language:
shouldCollectTrainingDataForObjective:language:
handleFailureInFunction:file:lineNumber:description:
stringWithUTF8String:
Ti,N,V_source
TB,N,V_signature
Ti,N,V_detail
Ti,N,V_outcome
Ti,N,V_foundInSenderCNContact
TI,N,V_extractionModelVersion
TB,N,V_isUnlikelyPhone
Ti,N,V_extractionSignatureSource
_detail
_extractionModelVersion
_extractionSignatureSource
_foundInSenderCNContact
_outcome
_source
_isUnlikelyPhone
_signature
source
setSource:
setHasSource:
hasSource
sourceAsString:
StringAsSource:
setSignature:
setHasSignature:
hasSignature
detail
setDetail:
setHasDetail:
hasDetail
detailAsString:
StringAsDetail:
outcome
setOutcome:
setHasOutcome:
hasOutcome
outcomeAsString:
StringAsOutcome:
foundInSenderCNContact
setFoundInSenderCNContact:
setHasFoundInSenderCNContact:
hasFoundInSenderCNContact
foundInSenderCNContactAsString:
StringAsFoundInSenderCNContact:
setExtractionModelVersion:
setHasExtractionModelVersion:
hasExtractionModelVersion
setIsUnlikelyPhone:
setHasIsUnlikelyPhone:
hasIsUnlikelyPhone
extractionSignatureSource
setExtractionSignatureSource:
setHasExtractionSignatureSource:
hasExtractionSignatureSource
extractionSignatureSourceAsString:
StringAsExtractionSignatureSource:
signature
extractionModelVersion
isUnlikelyPhone
Ti,N,V_foundIn
TB,N,V_hasName
Ti,N,V_tokens
_foundIn
_tokens
_hasName
foundIn
setFoundIn:
setHasFoundIn:
hasFoundIn
foundInAsString:
StringAsFoundIn:
setHasName:
setHasHasName:
hasHasName
tokens
setTokens:
setHasTokens:
hasTokens
tokensAsString:
StringAsTokens:
hasName
reminderPrimaryKeyForEntityId:
getReminder:
stringFromDate:
reminderDuplicateKeyForEntityId:
recordIdWithNumericValue:
reminderSourceKeyForDuplicateKey:
reminderOriginForPrimaryKey:
getReminderWithRecordId:
getReminderWithDuplicateKey:
commitStorageReminder:
_deserializeDateComponents:
dateWithTimeIntervalSince1970:
reminderEntityIdForDuplicateKey:
numericValue
origin
dueDateComponents
_serializeDate:
dueLocationType
dueLocationTrigger
sourceURL
creationDate
reminderEntityIdForPrimaryKey:
uniqueKey
reminderStatus
TB,N,V_cacheHit
_cacheHit
setCacheHit:
setHasCacheHit:
hasCacheHit
cacheHit
Ti,N,V_contactDetail
TB,N,V_correct
Ti,N,V_mode
_contactDetail
_mode
_correct
contactDetail
setContactDetail:
setHasContactDetail:
hasContactDetail
contactDetailAsString:
StringAsContactDetail:
setCorrect:
setHasCorrect:
hasCorrect
mode
setMode:
setHasMode:
hasMode
modeAsString:
StringAsMode:
correct
bindNamedParam:toInt64AsNSNumber:
setValue:forKey:binder:
getInt64AsNSNumberForColumn:
getForKey:binder:
bindNamedParam:toDoubleAsNSNumber:
getDoubleAsNSNumberForColumn:
getNSStringForColumn:
dateFromString:
deleteValueForKey:
setInt64NSNumber:forKey:
getInt64NSNumberForKey:
setDoubleNSNumber:forKey:
getDoubleNSNumberForKey:
setNSString:forKey:
getNSStringForKey:
setNSDate:forKey:
getNSDateForKey:
quickTypeTriggerForContext:localeIdentifier:modelConfigPath:espressoBinFilePath:
quickTypeTriggerForContext:localeIdentifier:modelConfigPath:espressoBinFilePath:useContactNames:
_probablePriorPredictionInContext:predictedLabel:
numberWithInteger:
doubleValue
substringWithRange:
initWithContentsOfFile:
languageForLocaleIdentifier:
T@"NSString",R,N,V_plainText
TC,R,N,V_category
T@"NSArray",R,N,V_dataDetectorMatches
_fromSuggestTool
_category
_plainText
_dataDetectorMatches
initWithPlainText:category:dataDetectorMatches:enrichedTaggedCharacterRanges:modelOutput:fromSuggestTool:
detectedEventName
detectedReservationIdWithError:
detectedStartDateComponents
detectedEndDateComponents
filterCandidateDateComponents:
detectedStartAddressWithError:
detectedEndAddressWithError:
detectedAddressForLabel:withError:
detectedStartPlaceWithError:
detectedEndPlaceWithError:
_simpleCandidateForOutputName:label:withError:
mergePostalAddressComponents:
detectedPostalAddressExtractionForTokenIndexes:dataDetectorMatches:label:
titleMapping
modelOutputSummary
predictedStringsFromModelOutput
resolveCandidates:forCategory:label:rawIndexSet:taggedCharacterRanges:
labelTokenIndexesForOutputName:label:
detectedEventPolarity
plainText
category
dataDetectorMatches
containsIndex:
candidatesForLabelIndexSets:inPlainText:forTaggedCharacterRanges:
addIndex:
modelOutputSummary:
allObjects
anyObject
enumerateRangesUsingBlock:
components:city:state:postalCode:country:
country
postalCode
city
caseInsensitiveCompare:
street
initWithDomain:code:userInfo:
simpleCandidateResolutionFromCandidates:
cleanCandidates:outputName:label:
month
year
caseInsensitiveContainsString:inCandidates:
stripRepeatedContent:repeatedLength:
substringFromIndex:
substringToIndex:
unsignedIntValue
_conversations
_rtRoutineManager
dissectTextMessage:entity:context:
dissectMailMessage:entity:context:
init
initWithConversations:rtRoutineManager:
reminderTitleForContent:
extractReminderFromMailMessage:entity:
extractReminderFromOwnedMailMessage:entity:
_detectedReminderEnrichmentFromReminderMessage:parentEntity:language:parentMessage:startTimeProcessing:
extractReminderFromTextMessage:entity:store:
isValidTextMessageForProcessing:
processingLanguageForContent:
mailAddressIsAccountOwner:
reminderTitleFromMessages:forLanguage:
dueDateComponentsFromMessages:
dueLocationFromMessages:
defaultDueDateComponentsFromMessages:
isAllDay:
_validateDueDateComponents:dueLocation:forReminderMessages:
_reminderMessageForTextMessage:withEntity:extractionModel:processingLanguage:preprocessing:
conversations
_isTestMessage:
_testReminder:entity:
_reminderEnrichmentWithTitle:dueDateComponents:dueLocationType:dueLocation:dueLocationTrigger:sourceURL:reminderStatus:parentEntity:parentMessage:allDay:
storageLocationFromDueLocation:
fetchLocationOfInterestByType:name:
geoMapItemHandle
horizontalUncertainty
mapItem
preferredName
fetchLocationsOfInterestOfType:withHandler:
visits
reminderMetadata:
numberWithUnsignedChar:
initWithArray:
rangeWithStartDate:startTimeZone:endDate:endTimeZone:
timeZone
getContactIdentifierForName:andEmail:ifMatchingPredicate:
asCSPerson
showPastEvents
isReminderDueDateComponentsInPast:givenReferenceDate:allDay:
urlForEKEventFromTextMessageWithUniqueIdentifier:
componentsInTimeZone:fromDate:
dateByAddingTimeInterval:
defaultTimeZone
currentCalendar
removeObjectForKey:
enrichedTaggedCharacterRangesFromEntity:forMessage:
sharedInstance
nanosecond
minute
hour
addObjectsFromArray:
defaultLanguage
detectLanguageFromText:
userInfo
urlForMailMessageWithId:
enrichedTaggedCharacterRangesFromTaggedCharacterRanges:messageIsSent:
intersectsIndexesInRange:
detectReminders
timeIntervalSinceDate:
detectRemindersInMail
methodForSelector:
array
setTimeZone:
localTimeZone
setSecond:
setMinute:
setHour:
dateFromComponents:
TI,N,V_errorCode
_errorCode
setErrorCode:
setHasErrorCode:
hasErrorCode
errorCode
T@"NSString",R,N
_entityStore
_urlDissector
consumeRemindersContentWithContext:
consumerName
deleteDataDerivedFromContentMatchingRequest:
setup
processSearchableItem:
processUserAction:searchableItem:
processInteraction:bundleIdentifier:protectionClass:
purgeSpotlightReferencesWithBundleIdentifier:uniqueIdentifiers:
deleteSpotlightReferencesWithBundleIdentifier:uniqueIdentifiers:
deleteSpotlightReferencesWithBundleIdentifier:domainIdentifiers:
deleteSpotlightReferencesWithBundleIdentifier:
identifier
initWithEntityStore:
_consumeContentParts:title:fromHandle:documentDate:isOutgoingDocument:uniqueIdentifier:domainIdentifier:bundleIdentifier:context:
extractURLsFromAttributesOfItem:handle:
extractURLsFromTextPropertiesOfItem:handle:
_urlContainerFromText:documentDate:documentTitle:handle:isOutgoingDocument:uniqueIdentifier:domainIdentifier:bundleIdentifier:
_shouldProcessSearchableItem:
sg_enumerateChunksOfSize:usingBlock:
globPatterns
initWithDomainsFromArray:
bundleID
searchableItemIsOutgoing:
_pas_proxyComponentsJoinedByString:
contentCreationDate
dueDate
comment
textContentNoCopyRetainingBackingBuffer:
authorAddresses
completionDate
success
successWithNumberOfExtractions:
accessCriteriaUsingBundleIdentifierBlock:domainSelectionBlock:uniqueIdentifiersBlock:
allDomains
interrupted
shouldContinue
completionDateTimestamp
initWithTimeIntervalSinceReferenceDate:
dueDateTimestamp
notes
registerRemindersConsumer:levelOfService:
defaultCoordinator
timeIntervalSinceReferenceDate
checkExistsSaliencyForMessageId:
insertSaliency:
updateSaliency:saliency:
saliencyForMessageId:
topSalienciesForMailboxId:limit:
commitSaliency:
updateSaliencyCreationTimestampForTesting:timestamp:
clearSGMISaliencyTable
setAllMailIntelligenceAsSalient
getDoubleAsNSNumberForColumnName:table:
getIntegerForColumnName:table:
getNSStringForColumnName:table:
getDoubleForColumnName:table:
dateWithTimeIntervalSinceReferenceDate:
initWithMessageId:mailboxId:score:isSalient:isGTESalient:isCounted:creationDate:
arrayWithCapacity:
bindNamedParam:toInteger:
initWithMessageId:mailboxId:score:isSalient:creationDate:
getInt64ForColumnName:table:
bindNamedParam:toInt64:
bindNamedParam:toDouble:
isGTESalient
isCounted
queryForPersonHandle:startDate:endDate:contentTypes:
Ti,N,V_method
_method
method
setMethod:
setHasMethod:
hasMethod
methodAsString:
StringAsMethod:
TI,N,V_customResponsesAfterPruning
_customResponsesAfterPruning
setCustomResponsesAfterPruning:
setHasCustomResponsesAfterPruning:
hasCustomResponsesAfterPruning
customResponsesAfterPruning
T@"NSArray",R,N,V_itemProps
_itemProps
addItemProp:
isReferencedBy:
itemProps
uniqueIdentifierForMessageId:
stringByExtractingPlainTextFromHTML:tableDelimiters:stripLinks:
stringByExtractingPlainTextFromHTML:
exceptionWithName:reason:userInfo:
bytes
dataUsingEncoding:
initWithBytesNoCopy:length:freeWhenDone:
matchesInString:options:range:
initWithPattern:options:error:
initWithSeatSection:seatRow:seatNumber:seatingType:
seatNumber
seatRow
seatSection
seatingType
T@"SGMContactDetailExtraction",&,N,V_contactDetailExtraction
T@"SGMContactDetailSent",&,N,V_contactDetailSent
T@"PETEventTracker2",&,N,V_pet2Tracker
_contactDetailExtraction
_contactDetailSent
_pet2Tracker
initWithTracker:
contactDetailExtraction
setContactDetailExtraction:
contactDetailSent
setContactDetailSent:
pet2Tracker
setPet2Tracker:
instance
_recordExtractionEventFromSource:foundInSignature:isDDSignature:detailType:outcome:foundInCNContact:modelVersion:isUnlikelyPhone:sigSource:
_recordExtractionOutcome:detailType:fromMessage:foundInSignature:isDDSignature:detailType:detailValue:modelVersion:isUnlikelyPhone:
recordExtractionOutcome:fromMessage:foundInSignature:isDDSignature:detection:
recordExtractionOutcome:fromMessage:foundInSignature:isDDSignature:match:modelVersion:isUnlikelyPhone:
recordExtractionOutcome:fromMessage:foundInSignature:isDDSignature:match:foundInCNContact:modelVersion:isUnlikelyPhone:
recordExtractionOutcome:forDetectionsInMessage:signatureRange:isDDSignature:
recordBirthdayExtractionAccuracy:withOffset:withModelVersion:isFromCongratulation:didRegexTrigger:didResponseKitTrigger:
recordSelfIdModelScore:model:supervision:
nameForDataDetectorMatch:withValue:
tokenizeMessageContent:
recordSentContactDetailWithMessage:match:found:
trackScalarForMessage:
trackEventWithScalar:source:detail:foundIn:hasName:tokens:
stringByReplacingCharactersInRange:withString:
enumerateLinguisticTagsInRange:scheme:options:orthography:usingBlock:
reverseObjectEnumerator
unsignedShortValue
trackEventWithScalar:source:signature:detail:outcome:foundInSenderCNContact:extractionModelVersion:isUnlikelyPhone:signatureExtractionSource:
initWithUTF8String:
trackScalarForMessage:count:
trackScalarForMessage:updateCount:
trackDistributionForMessage:value:
enumerateKeysAndObjectsUsingBlock:
addValueForScalarKeyWithDomain:subdomain:suffix:action:value:
setValueForScalarKeyWithDomain:subdomain:suffix:action:value:
pushValueForDistributionKeyWithDomain:subdomain:suffix:action:value:
incrementValuesInDomain:subdomain:type:action:withKeysAndIncrements:extraSignature:
T@"NSString",R,N,V_uniqueIdentifier
T@"NSString",R,N,V_source
_uniqueIdentifier
isSupportedEntityType:
serialize
initWithSerialized:
initWithSource:uniqueIdentifier:
isEqualToMessageKey:
uniqueIdentifier
initWithExitCode:
handleSqliteError:error:onError:db:
exitOnErrorIndicatingIOError:
startDissectionOfMessage:inContext:
endDissectionOfMessage:inContext:
logPrewarmWithLastPrewarmTime:
startIngestOfMessages:
endIngestOfMessages:
pluginStartSetup:
pluginEndSetup:
pluginStartProcessingSearchableItem:
pluginEndProcessingSearchableItem:
pluginStartDeletion:
pluginEndDeletion:
createEnrichmentWithMatch:onParentEntity:
_createEnrichmentsForDetections:entity:
_logDeliverySenderForSenderDomain:
_logUniqueEnrichments:
stringForProvider:
setByAddingObject:
_pas_leftFoldWithInitialObject:accumulate:
arrayByAddingObjectsFromArray:
_pas_mappedArrayWithTransform:
auditToken
processIdentifier
sgd_clientName
Ti,R,N,V_state
T@"SGEntity",R,N,V_entity
T@"SGCuratedEventKey",R,N,V_duplicateEventKey
T@"NSString",R,N,V_templateShortName
_state
_entity
_duplicateEventKey
_templateShortName
initWithEntity:state:duplicateEventKey:templateShortName:
initNewEventWithEntity:
initDuplicateOfCuratedEvent:withEntity:
initUpdatedEventWithEntity:curatedEventKey:
initCancellationOfCuratedEvent:templateShortName:entity:
state
entity
duplicateEventKey
templateShortName
_store
processNewConfirmOrRejectEventHashes:
processNewConfirmedOrRejectedReminderHashes:
hashesDidChange
initWithStore:
base64EncodedDataWithOptions:
clearRequestCache
T@"SGServiceContext",R,N,V_context
T@"NSString",R,N,V_clientName
_harvestStore
_connection
_history
_assetUpdateToken
_messageHarvestQueue
_ctsManager
_ekStoreProvider
_contactStore
_bundleIdToPET
_dirtyLock
_dirtyTransaction
_lastSuggestionsFromMessageRequest
_lastSuggestionsFromMessageResponse
_lastSuggestionsFromMessageLock
_settingsChangeToken
_purgeDeletionDropBox
_recentlyHarvestedDetailLock
_keepRealtimeAsLost
_bufferedInteractionsForBundleLock
_context
_clientName
consumeInteractionWithContext:
consumeMailContentWithContext:
contentAdmissionBlocklistDidChange:
planReceivedFromServerWithPayload:completion:
evaluateRecipe:attachments:completion:
suggestionsFromMessage:options:completionHandler:
harvestedSuggestionsFromMessage:bundleIdentifier:options:completionHandler:
harvestedSuggestionsFromMessage:bundleIdentifier:options:withCompletion:
harvestedSuggestionsFromMessages:bundleIdentifier:options:completionHandler:
confirmContact:confirmRejectUI:completion:
rejectContact:confirmRejectUI:completion:
confirmRecord:confirmRejectUI:completion:
rejectRecord:confirmRejectUI:completion:
confirmContactDetailRecord:confirmRejectUI:completion:
rejectContactDetailRecord:confirmRejectUI:completion:
confirmEvent:completion:
rejectEvent:completion:
confirmEventByRecordId:completion:
rejectEventByRecordId:completion:
deleteEventByRecordId:completion:
waitForEventWithIdentifier:toAppearInEventStoreWithLastModificationDate:completion:
emailAddressIsSignificant:withCompletion:
eventsStartingAt:endingAt:limitTo:options:withCompletion:
eventsStartingAt:endingAt:prefix:limitTo:options:withCompletion:
eventsInFutureLimitTo:options:withCompletion:
eventFromRecordId:withCompletion:
sendRTCLogsWithCompletion:
resetConfirmationAndRejectionHistory:
rebuildNamesForDetailCache:
realtimeSuggestionsFromURL:title:HTMLPayload:extractionDate:withCompletion:
suggestionsFromRFC822Data:source:options:withCompletion:
clearCachesFully:withCompletion:
predictedToEmailAddressesWithToAddresses:ccAddresses:fromAddress:date:bounds:completion:
predictedCCEmailAddressesWithToAddresses:ccAddresses:fromAddress:date:bounds:completion:
addSearchableItems:completion:
addInteractions:bundleId:completion:
spotlightReimportFromIdentifier:forPersonHandle:startDate:endDate:completion:
drainQueueCompletelyWithCompletion:
removeAllStoredPseudoContactsWithCompletion:
daemonExitWithCompletion:
sleepWithCompletion:
suggestionsFromEmailContent:headers:source:options:withCompletion:
suggestionsFromSimpleMailMessage:headers:options:withCompletion:
deleteCloudKitZoneWithCompletion:
powerStateWithCompletion:
addSearchableItemMetadata:htmlData:completion:
purgeSpotlightReferencesWithBundleIdentifier:uniqueIdentifiers:completion:
deleteSpotlightReferencesWithBundleIdentifier:uniqueIdentifiers:completion:
deleteSpotlightReferencesWithBundleIdentifier:domainIdentifiers:completion:
deleteSpotlightReferencesWithBundleIdentifier:completion:
deleteInteractionsWithBundleId:completion:
deleteInteractionsWithBundleId:identifiers:completion:
deleteInteractionsWithBundleId:groupIdentifiers:completion:
ipsosMessagesWithSearchableItems:withCompletion:
ipsosMessagesFromSearchableItems:withCompletion:
allDeliveriesWithLimit:withCompletion:
confirmReminderByRecordId:completion:
confirmRealtimeReminder:completion:
rejectReminderByRecordId:completion:
rejectRealtimeReminder:completion:
reminderAlarmTriggeredForRecordId:completion:
allRemindersLimitedTo:withCompletion:
reminderTitleForContent:withCompletion:
logUserCreatedReminderTitle:withCompletion:
eventFromUniqueId:completion:
launchInfoForSuggestedEventWithUniqueIdentifier:sourceURL:clientLocale:ignoreUserActivitySupport:ignoreMailCheck:completion:
launchAppForSuggestedEventUsingLaunchInfo:completion:
schemaOrgToEvents:completion:
allEventsLimitedTo:withCompletion:
isEventCandidateForURL:title:withCompletion:
isEventCandidateForURL:andTitle:containsSchemaOrg:withCompletion:
suggestionsFromURL:title:HTMLPayload:withCompletion:
recentURLsWithLimit:withCompletion:
urlsFoundBetweenStartDate:endDate:excludingBundleIdentifiers:limit:withCompletion:
urlsFoundBetweenStartDate:endDate:excludingBundleIdentifiers:containingSubstring:flagFilter:limit:withCompletion:
registerURLFeedback:absoluteURL:withCompletion:
contactMatchesWithContact:limitTo:withCompletion:
contactMatchesWithContactIdentifier:limitTo:withCompletion:
contactMatchesWithContactIdentifiers:limitTo:withCompletion:
contactMatchesWithFullTextSearch:limitTo:withCompletion:
contactMatchesWithMessagingPrefix:limitTo:withCompletion:
contactFromRecordId:withCompletion:
cnContactMatchesForRecordId:withCompletion:
cnContactMatchesForRecordIds:withCompletion:
contactMatchesByPhoneNumber:withCompletion:
contactMatchesByEmailAddress:withCompletion:
contactMatchesBySocialProfile:withCompletion:
namesForDetail:limitTo:prependMaybe:onlySignificant:withCompletion:
namesForDetailCacheSnapshotsWithCompletion:
originFromRecordId:completion:
allContactsWithSnippets:limitTo:withCompletion:
prepareForRealtimeExtraction:
suggestionsFromSearchableItem:options:withCompletion:
harvestedSuggestionsFromSearchableItem:options:withCompletion:
messagesToRefreshWithCompletion:
updateMessages:state:completion:
reportMessagesFound:lost:withCompletion:
fullDownloadRequestBatch:withCompletion:
resolveFullDownloadRequests:withCompletion:
saliencyFromRFC822Data:withCompletion:
saliencyFromEmailHeaders:withCompletion:
topSalienciesForMailboxId:limit:withCompletion:
foundInStringForRecordId:style:withCompletion:
isEnabledWithCompletion:
keepDirty:
noopWithCompletion:
logUnknownContactInformationShownCount:notShownCount:bundleId:
logMetricAutocompleteResult:recordId:contactIdentifier:bundleId:
logMetricContactSearchResult:recordId:contactIdentifier:bundleId:
logMetricAutocompleteUserSelectedRecordId:contactIdentifier:bundleId:
logMetricContactSearchResultSelected:contactIdentifier:bundleId:
logMetricSuggestedContactDetailUsed:contactIdentifier:bundleId:
logMetricSuggestedContactDetailShown:contactIdentifier:bundleId:
logMetricContactCreated:contactIdentifier:bundleId:
logMetricSearchResultsIncludedPureSuggestionWithBundleId:
logEventInteractionForEventWithUniqueKey:interface:actionType:
logEventInteractionForEventWithExternalIdentifier:interface:actionType:
logSuggestionInteractionForRecordId:interface:actionType:
getPet2Tracker
setupManagerWithConnection:store:ctsManager:ekStoreProvider:contactStore:pet2Tracker:
_executeBoxTasks:
_setupHistoryObserver:
harvestStore
keepRealtimeAsLost
recentlyHarvestedDetailLock
lastSuggestionsFromMessageLock
lastSuggestionsFromMessageRequest
setLastSuggestionsFromMessageRequest:
lastSuggestionsFromMessageResponse
setLastSuggestionsFromMessageResponse:
messageHarvestQueue
initWithConnection:store:
initWithMessagesConnection:store:
initWithStore:ctsManager:ekStoreProvider:contactStore:pet2Tracker:
dealloc
_pmlTraining
clientIsMail
clientIsMessages
storageContactFromRecordId:
_mapToPseudoEvents:
_confirmReminderByRecordId:completion:
_rejectReminderByRecordId:completion:
interfaceForRealtimeReminder:
cachedResultForKey:generateResult:validateResults:
filterPastEvents:
bumptTTLForNLEvent:
shortNamesAndRealtimeEventsFromEntity:enrichments:store:
shortNamesAndRealtimeEventsFromEntity:message:enrichments:store:
curatedEventKeyForExactMatchOfPseudoEvent:candidates:
isSGEntity:duplicateOfEKEvent:withStore:
containsNonCuratedData:
_isContactInteresting:emailEntity:enrichments:hasContactCard:
realtimeContactsFromEntity:enrichments:sourceTextMessage:store:
createLaunchIntentForStorageEvent:
_performAction:onContactDetailRecord:confirmRejectUI:completion:
_performAction:onRecord:confirmRejectUI:completion:
_performAction:onRecord:withParentConfirmation:confirmRejectUI:completion:
isSearchableItemPartOfReimport:
isSearchableItemPartOfReimportWithGetterBlock:bundleIdentifier:
enqueueSearchableItems:completion:
_harvestPeopleFromInteractions:bundleId:
_harvestReservationsFromInteractions:bundleId:queue:completion:
_processReservationInteractions:bundleId:completion:
registerForCoreSpotlightIndexing
geocodeEnrichmentsInPipelineEntity:withCompletion:
_appEnumForBundleId:
logEventInteractionForRealtimeEvent:interface:actionType:
entityFromUniqueKey:
logEventInteractionForEntity:interface:actionType:
clearContactAggregator
clearContactAggregatorConversation:
_maybeFormatString
_showInFormatStringWithLocalization:
filterRealtimeEvents:
_sendChatChangedNotificationWithDomainIdentifier:
registerForProactiveHarvesting
consumeMessagesContentWithContext:
context
clientName
autoreleasingSerialQueueWithLabel:qosClass:
accessCriteriaUsingBundleIdentifierBlock:domainSelectionBlock:incontrovertiblyDeletedUniqueIdentifiersBlock:purgedUniqueIdentifiersBlock:
shouldRunHandlerImmediately
addDeletion:uniqueIds:
addPurge:uniqueIds:
addDeletion:domainSelection:
registerInteractionConsumer:levelOfService:
registerMailConsumer:levelOfService:
responseWith:
responseWithError:
errorWithDomain:code:userInfo:
sortUsingComparator:
allValues
responseWith:also:also:
runAsyncOnQueue:afterDelaySeconds:block:
lastObject
indexOfObject:
reminders
events
_pas_filteredArrayWithTest:
contacts
timeIntervalSinceNow
shouldAdmitContentFromBundleIdentifier:
initWithContacts:events:reminders:
combinedSuggestions
setProtection:
protection
mailItemIsValid:
messageWithIPMessage:
localizedStringForKey:value:table:
throttlingState
defaultBudget
recordInteractionForEventWithInterface:actionType:harvestedSGEvent:curatedEKEvent:
suggestionInfo
calendarItemsWithExternalIdentifier:
trackEventWithScalar:app:
trackEventWithScalar:wasSuggestedContact:app:
trackEventWithScalar:wasSuggestedContact:wasKnownContact:app:
trackEventWithScalar:app:wasSuggestedContact:
trackEventWithScalar:bundleId:
stringByReplacingOccurrencesOfString:withString:
numberWithInt:
removeObserver:
waitForSemaphore:timeoutSeconds:
addObserverForName:object:queue:usingBlock:
defaultCenter
eventWithIdentifier:
lastModifiedDate
unlock
lock
realtimeEventForNewEvent:harvested:
isValidAllDayRange
geocodeEvent:withCallback:
allowGeocode
detectStructuredEvents
host
response1
allowAnyDomainForMarkup
deleteSessionsWithBundleID:
isSupportedSearchableItemBundleIdentifier:
deleteSessionsWithDomainIdentifiers:bundleID:
deleteSessionsWithIdentifiers:bundleID:
setIndexDelegate:
recordInteractionIgnoredWithReason:
UUID
rangeOfCharacterFromSet:
characterSetWithCharactersInString:
response
searchableItemIsEligibleForHarvesting:eligibleExceptForAge:
deserializeAttributes:andBody:
isStructuredEventCandidateForEmailDomain:
dateWithTimeIntervalSinceNow:
mailItemMessageIdHeaderValues:
setValue:forCustomKey:
initWithKeyName:
searchableItemIsEligibleForDeferredHarvesting:
planReceivedWithRecipe:attachments:error:
sharedSingletonWithDirectory:
planReceivedWithPayload:error:
recordRejectedContact:inApp:rejectionUI:pet2Tracker:
recordBannerConfirmedWithContact:proposedCNContact:confirmedCNContact:inApp:confirmationUI:pet2Tracker:
realtimeContactForNewContact:
enumerateDetailsWithBlock:
recordContactDetailEngagementWithResolution:detailType:extractionType:modelVersion:confirmRejectUI:pet2Tracker:
extractionType
detailForRecordId:
cnContactIdentifier
recordBannerRejectedWithEvent:inApp:
eventIdentifier
recordBannerConfirmedWithEvent:proposedEKEvent:confirmedEKEvent:inApp:
toEKEventWithStore:
openURL:configuration:completionHandler:
openUserActivity:usingApplicationRecord:configuration:completionHandler:
_setInteraction:donate:
setIntentHandlingStatus:
initWithIntent:response:
userActivity
defaultWorkspace
initWithBundleIdentifier:allowPlaceholder:error:
initWithBundleId:localizedShowInString:userActivity:intent:sourceURL:
localizedNameWithPreferredLocalizations:
currentLocale
localeIdentifier
scheme
isInstalled
applicationState
activityType
initWithActivityType:
isInteractionTeamId
isIntentResponseUserActivityString
initWithReservationContainerReference:reservationItemReferences:
isReservationContainerReference
isReservationItemReferences
map:f:
recordMaybeContactFrom:withVersion:
sortedArrayUsingComparator:
markedAsHarvested
hardName
fromTextMessage
fromReply
isMailingListId
hasNonTrivialInfo
sg_emailAddress
locationWithoutPrediction
isEqualToDate:
endDate
setDateFormat:
localeWithLocaleIdentifier:
isNaturalLanguageSuggestedEventCalendar
isSuggestedEventCalendar
calendar
realtimeEventForNearDuplicateEvent:harvested:
realtimeEventForCanceledEvent:eventIdentifier:harvested:
realtimeEventUpdateToEvent:withNewValues:harvested:
realtimeEventForDuplicateEvent:eventIdentifier:harvested:
hasRecurrenceRules
absoluteRange
naturalLanguageEvent
status
alwaysShowCancelledEvents
suggestionsCount
resultIfAvailable
appendData:
setSignificance:
significance
parMapOnQueue:concurrencyLimit:input:f:
error
contactWithId:name:emailAddresses:phones:postalAddresses:socialProfiles:
emailAddress:label:extractionInfo:withRecordId:
resetSharedCachesAndModels
protocol
exportedInterface
deregisterUpdateHandlerAsyncWithToken:
defaultEKStoreProvider
_newEKEventStoreGetter
_callBlockWithEKEventStoreForReading
initWithNewEKEventStoreGetter:callBlockWithEKEventStoreForReading:
setPurgeUniqueIds:
purgeUniqueIds
setDeleteDomainIds:
deleteDomainIds
allKeys
setDeleteUniqueIds:
deleteUniqueIds
T@"NSMutableDictionary",&,N,V_deleteUniqueIds
T@"NSMutableDictionary",&,N,V_purgeUniqueIds
T@"NSMutableDictionary",&,N,V_deleteDomainIds
_deleteUniqueIds
_purgeUniqueIds
_deleteDomainIds
addDomainsFromSelection:
minusSet:
registerBlockOnSuggestionsSettingsChange:
setMaxConcurrentOperationCount:
setQualityOfService:
registerUpdateHandler:
initialize
fetchChangeHistory
clearChangeHistory:
executeChangeHistoryClearRequest:error:
setToChangeAnchor:
latestChangeAnchor
changesTruncated
changeHistoryWithFetchRequest:error:
setShouldUnifyResults:
initWithBlock:idleTimeout:
enumerateContactChangesWithKeysToFetch:fromContactStore:error:usingBlock:
changeType
contactChanges
T@"NSArray",&,V_contacts
T@"NSArray",&,V_events
T@"NSArray",&,V_reminders
T@"NSArray",&,V_deliveries
T@"NSArray",&,V_invalidatedIdentifiers
_contacts
_events
_reminders
_deliveries
_invalidatedIdentifiers
setContacts:
setEvents:
setReminders:
deliveries
setDeliveries:
invalidatedIdentifiers
setInvalidatedIdentifiers:
T@"NSDataDetector",&,V_dataDetector
T@"NSString",&,V_emailMapping
T@"NSString",&,V_linkMapping
_dataDetector
_emailMapping
_linkMapping
initWithEmailMapping:linkMapping:
isEqualToEntityMappingTransformer:
dataDetector
setDataDetector:
emailMapping
setEmailMapping:
linkMapping
setLinkMapping:
resultType
localizedDescription
dataDetectorWithTypes:error:
withEmailMapping:linkMapping:
executeDailyTasks
logMessage:
T@"NSString",R,N,V_path
_path
initWithPath:
writeDictionary:
readDictionary
path
propertyListWithData:options:format:error:
getBytes:length:
getBytes:range:
subdataWithRange:
initWithContentsOfFile:options:error:
closeFile
dataWithBytes:length:
dataWithPropertyList:format:options:error:
writeWithCompression:andUpdateAdler32:
writeData:
initWithFileDescriptor:closeOnDealloc:
TQ,R,N
Tq,R,N,V_priority
_dir
_counter
_pendingNames
_lock
_priority
initWithDirectory:
initWithDirectory:priority:
addDictionary:
addDictionary:withSourceId:messageId:
resetForTesting
popDictionary
popDictionaryById:
_popName:
_pop
count
popDictionaryBySourceId:messageId:
closeDatabase
priority
objectAtIndex:
removeItemAtPath:error:
initWithObject:name:dir:
T@"NSObject<NSSecureCoding>",R,N,V_object
_name
_filename
_object
fails
queueId
finish
markAsFailed
object
setState:
fileSystemRepresentation
queueItemId
moveItemAtPath:toPath:error:
defaultManager
copyWithState:
pathInDirectory:
removeObject:
timestamp
removeObjectAtIndex:
insertObject:atIndex:
setCounter:
setTimestamp:
TQ,N
_timestamp32
_counter32
_otherbits
counter
setFails:
copyWithState:andFails:
longLongValue
isValidFilename:
rangeOfFirstMatchInString:options:range:
stringByAppendingPathComponent:
pathExtension
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
fileExistsAtPath:isDirectory:
pathForNewMessagesQueue
pathForOldMessagesQueue
_inputMapping
_outputMapping
_supportedProviders
_engineConfig
_init
updateAll
modelInferences:
loadModel
supportedProviders
isSenderSupportedForExtraction:
isSenderSupportedForShadowExtraction:
isSenderSupportedForMLDefaultExtraction:
engineConfig
inputMapping
outputMapping
maxMergeDistanceForSection:label:
stripRepeatedContentForSectionLength:label:
addressComponentThreshold
gazetteer
initWithContentsOfURL:error:
valueForKeyPath:
modelWithContentsOfURL:configuration:error:
initFileURLWithPath:
setComputeUnits:
predictionFromFeatures:error:
inputFromTaggedCharacterRanges:usingInputMapping:forModel:
withBucketSize:andNgrams:
withTransformers:
Ti,N,V_documentSource
TB,N,V_highPriority
TB,N,V_receivedOnBattery
TB,N,V_harvestedOnBattery
Ti,N,V_harvestSource
_documentSource
_harvestSource
_harvestedOnBattery
_highPriority
_receivedOnBattery
documentSource
setDocumentSource:
setHasDocumentSource:
hasDocumentSource
documentSourceAsString:
StringAsDocumentSource:
setHighPriority:
setHasHighPriority:
hasHighPriority
setReceivedOnBattery:
setHasReceivedOnBattery:
hasReceivedOnBattery
setHarvestedOnBattery:
setHasHarvestedOnBattery:
hasHarvestedOnBattery
harvestSource
setHarvestSource:
setHasHarvestSource:
hasHarvestSource
harvestSourceAsString:
StringAsHarvestSource:
highPriority
receivedOnBattery
harvestedOnBattery
blockOperationWithBlock:
addDependency:
removeDependency:
setCompletionBlock:
_data
_rpns
_nrpns
initWithData:
regexpIdsThatMightMatchUtf8:
_harvestQueue
_frontfillQueue
_frontfillSource
_frontfillSemaphoreForTesting
_ctsCriteriaState
_geocodeLock
_verificationLock
_lastFrontfillFinishTime
_xpcActivityManager
_adjustActivitySource
initWithHarvestStore:xpcActivityManager:
registerForCTS
serviceContext
_registerMobileAssetMetadataDownloadActivity
_performMobileAssetMetadataDownloadActivity:
_registerForCollectWeeklyStats
_performCollectWeeklyStats:
_registerForCTSHarvestActivity
_performHarvestActivity:callback:
_registerForCTSTrimActivity
_performTrimActivity:
_registerForCTSVacuumActivity
_performVacuumActivity
_registerForCTSIdentityAnalysisActivity
_performIdentityAnalysisActivity:
_registerForCTSSendRTCActivity
_performSendRTCActivity
_registerForContactDetailCacheRebuildActivity
performContactDetailCacheRebuildActivity:
_registerProcessPendingGeocodesActivity
_performProcessPendingGeocodesActivity:
_registerProcessPendingVerificationActivity
_performProcessPendingVerificationActivity:overrideVerificationStatus:
_registerMailIntelligenceTasksActivity
_performMailIntelligenceTasksActivity:overrideVerificationStatus:
_registerHarvestedURLMetricUploadActivity
_performHarvestedURLMetricUploadAcitivity:
adjustCriteriaForCTS
_doAdjustCriteriaForCTS
drainHarvestQueue:priorityOption:continuingWhile:
drainDefaultQueueCompletely
drainDefaultQueueWithStructuredEventsCandidatesPriorityOption
processSearchableItem:pipeline:context:harvestMetrics:
processTextMessage:pipeline:context:harvestMetrics:
processMailMessage:headers:pipeline:context:harvestMetrics:
_processMessage:pipeline:context:harvestMetrics:
processSearchableItem:pipeline:context:
processSearchableItemForTesting:
hasAlreadyHarvestedSearchableItem:
_shouldDissectContentWithUniqueIdentifier:domainIdentifier:bundleIdentifier:headers:accountIdentifier:
triggerFrontfillHarvest
_doFrontfillHarvestOnFrontfillQueue
_registerForPhoneQREngagementDataSync
_performPhoneQREngagementDataSync:
waitForXpcActivityQueue
resetLastFrontfillFinishTimeForTesting
suspendFrontfillForTesting
resumeFrontfillForTesting
waitUntilFrontfillFinishedForTesting
didConsumeAnExtraBudgetedOperation
canDoExtraDiscretionaryWork
doDiscretionaryWork:orElse:
canDoDiscretionaryWork
messagesToProcessImmediately
messageIdHeaderValuesFromHeaders:
emailHeaders
waitUntilFinished
addOperations:waitUntilFinished:
shouldHarvestEvents
searchableItemIsEligibleForDissectorPipeline:targetPluginsCustomAttributeName:
reason
isClassCLocked
_pas_stringBackedByUTF8CString
baseURLStrings
initWithObjects:
trimDbWithDeferralBlock:
allowAgeBasedPruning
_logCallInteractions:
recentCalls
setLimitingStartDate:
registerMaintenanceTasksInternal
sharedSingletonInstance
defaultInstance
serviceProvider
callerIdForDisplay
callStatus
dedupe:bucketer:resolver:
bucketerWithMapping:
bucketerWithLabeledBuckets:
bucketerWithEqualityTest:
resolveByPairs:
resolveByScoreBreakTiesArbitrarily:
resolveSGContactDetailsPreferringPhraseExtractionsAndLabels
eventsHaveIdenticalReservationIds:ekEventFromStore:
eventsHaveSimilarTitles:ekEventFromStore:
enumerateEKEventsForPseudoEventBySimilarStartAndEndTime:store:usingBlock:
_dedupePostalAddresses:
_dedupeGenericContactDetails:
dedupeContactDetails:
splitContactDetailsByType:
enumerateEventsMatchingPredicate:usingBlock:
predicateForEventsWithStartDate:endDate:calendars:
isEqualToArray:
eventMetadataFromEKEvent:
eventMetadata
isEventMetadata
stop
topics
namedEntities
topicsExactMatchesInSourceText
_contextClient
_transform
initWithContextClient:
extractionsFromContextKitWithText:isPlainText:bundleId:language:weight:
topicsInText:isPlainText:source:cloudSync:language:topicAlgorithms:namedEntityAlgorithms:weight:
_collectResultsFromContextKitWithText:isPlainText:bundleId:language:useContextKitTopics:useContextKitNamedEntities:addTopic:addNamedEntity:weight:
_collectHighLevelTopicsWithText:bundleId:addTopic:weight:
iterateTopicsForText:block:
initWithItem:score:
initWithTopicIdentifier:
enumerateObjectsUsingBlock:
topicIdentifier
entityAlgorithm
entities
describeAlgorithm:
topicAlgorithm
setSentimentScore:
setCloudSync:
setEntityAlgorithm:
setEntities:
setTopicAlgorithm:
sentimentScoreForText:
extractionAlgorithmsForBundleId:sourceLanguage:conservative:domain:
initWithBundleId:groupId:documentId:date:relevanceDate:contactHandles:language:metadata:
initWithDwellTimeSeconds:lengthSeconds:lengthCharacters:donationCount:contactHandleCount:flags:
componentsFromLocaleIdentifier:
languageCode
detectLanguageFromTextHeuristicallyWithLanguages:languages:defaultLanguage:
isMultilingual
removeIndexes:
initWithIndexesInRange:
skipInsignificantEmailExtractions
waitForSemaphore:timeoutSeconds:onAcquire:onTimeout:
executeWithReply:
logDonationErrorForReason:errorCode:source:
initWithName:category:language:
isExactMatch
initWithItem:score:resultPosition:resultCount:
topicId
halfValuePosition
debug
results
code
setTextIsRaw:
setLanguageTag:
setText:
newRequest
clientWithDefaultRequestType:
_icsOpportunityTracker
_accountsAdapter
downloadedCalendarAttachmentsFrom:
shouldIgnoreEntity:
isRequestFromSharedCalendarProvider:
hasCalendarAccountForOneOf:
accountTypeFor:
enrichmentsFromData:inDocument:parentMessage:parentEntity:
_dissectMessage:entity:
calscale
initWithData:options:error:
defaultCalendarForNewEvents
setAccountSetup:
setRecipient:
trackEventWithScalar:source:recipient:accountSetup:
setValue:forKey:
timezoneIdentifier:
startTimeZone
prodid
enrichmentWithParentEntity:withCalendar:withCorrectnessFlag:
componentForKey:
componentKeys
baseAttachmentFrom:includingEvents:withRanges:
replaceTzid:inDocument:fromOriginal:withBaseLength:withEventRange:
splitAttachment:intoEvents:withTimezones:
valueWithRange:
replaceBytesInRange:withBytes:length:
rangeValue
appendBytes:length:
initWithBytes:length:encoding:
timeZoneWithName:
whitespaceAndNewlineCharacterSet
timeZoneWithAbbreviation:
systemTimeZoneWithWindowsName:
secondsFromGMTForDate:
knownTimeZoneNames
setNumberStyle:
setMaximumFractionDigits:
setPositivePrefix:
setNegativePrefix:
stringFromNumber:
gmtOffsetTimeZoneWithHour:withMinute:forDate:
systemTimeZoneFromString:
gmtOffsetTimeZoneFromString:forDate:
propertiesForName:
firstValueOfPropertyForName:
tzid
setTzid:
hasFloatingTimeZone
initWithYear:month:day:hour:minute:second:timeZone:
timeInterval
calendarWithIdentifier:
copyDateWithNewComponents:
initWithWeeks:days:hours:minutes:seconds:
gregorianCalendarDateByAddingDuration:
initWithCalendarIdentifier:
x_wr_timezone
validate:
systemTimeZoneForDate:
gmtOffsetTimeZoneWithCalendar:withEvent:
validatedCompleteDateTime
endDateWithDuration:
systemTimeZoneWithCalendar:withEvent:withCorrectnessFlag:
attendee
longValue
dtstart
dtend
summary
fromCalendarAttachment
url:
recordWithTimezoneValue:datetimeType:
rangeWithGregorianStartComponents:endComponents:
dtstamp
attendeeEmailAddresses
enrichmentWithParentEntity:withCalendar:
T@"NSArray",&,N,V_emailAddresses
T@"NSArray",&,N,V_postalAddresses
T@"NSArray",&,N,V_phoneNumbers
T@"NSArray",&,N,V_instantMessageAddresses
T@"NSArray",&,N,V_socialProfiles
T@"SGContactDetail",&,N,V_birthday
T@"SGContactDetail",&,N,V_photoPath
_emailAddresses
_postalAddresses
_phoneNumbers
_instantMessageAddresses
_socialProfiles
_birthday
emailAddresses
setEmailAddresses:
postalAddresses
setPostalAddresses:
phoneNumbers
setPhoneNumbers:
instantMessageAddresses
setInstantMessageAddresses:
socialProfiles
setSocialProfiles:
birthday
setBirthday:
T@"SGContactDetailsHolder",&,V_internalDetectedDetails
Tq,R,N,V_masterEntityId
T@"SGRecordId",R,N,V_recordId
_profiles
_masterEntityId
_recordId
_internalDetectedDetails
isEqualToStorageContact:
addProfile:
profiles
allNames
name
canMerge:
merge:
reload
loadAllDetailsFrom:
loadPhoneDetailsFrom:
loadAddressDetailsFrom:
loadEmailAddressDetailsFrom:
loadBirthdayDetailsFrom:
convertToContact:
convertToContact:sourceEntity:enrichments:
bestProfile
hasProfileFromInteraction
hasProfileFromTextMessage
masterEntityId
recordId
internalDetectedDetails
setInternalDetectedDetails:
setUpdatedFields:
setSignificanceOrigin:
contactWithId:name:emailAddresses:phones:postalAddresses:socialProfiles:birthday:photoPath:
dateComponents:label:extractionInfo:withRecordId:
initWithUsername:userIdentifier:bundleIdentifier:displayName:service:teamIdentifier:label:extractionInfo:recordId:
postalAddress:components:label:extractionInfo:recordId:
phoneNumber:label:extractionInfo:recordId:
originWithType:sourceKey:externalKey:fromForwardedMessage:
precomposedStringWithCanonicalMapping
canBeConvertedToEncoding:
contactFromContactEntity:
contactWithMasterEntityId:
mergeAll:
migrations
skipFromZeroSchema:
setPrimaryRecipients:
additionalRecipients
copyReconstructedAdditionalRecipients
setAdditionalRecipients:
standardizeCSPersons
copyReconstructedAuthors
setAuthors:
copyReconstructedPrimaryRecipients
_plugins
processSearchableItem:harvestMetrics:
_processSearchableItem:harvestMetrics:userAction:
processInteraction:bundleIdentifier:protectionClass:completion:
_processHistoricalDataRequestsForPluginIdentifier:result:
historicalDataRequests
setPlugins:
pluginIdentifiers
loadStatsCounterWithKey:
storeStatsCounterWithKey:value:
incStatsCounterWithKey:byValue:
incStatsCounterWithKey:
_logConfirmPercentWithConfirmCount:rejectCount:domain:suffix:
logConfirmPercentAfterContactConfirmation
logConfirmPercentAfterContactRejection
logConfirmPercentAfterContactDetailConfirmation
logConfirmPercentAfterContactDetailRejection
trackEventWithScalar:exitCode:
Tf,N,V_personFromSenderProbability
Tf,N,V_personFromSenderInDyadicConversationProbability
Tf,N,V_subjectContentProbability
Tf,N,V_personToRecipientsProbability
Tf,N,V_personCCRecipientsProbability
Tf,N,V_domainFromSenderProbability
Tf,N,V_conversationProbability
_conversationProbability
_domainFromSenderProbability
_personCCRecipientsProbability
_personFromSenderInDyadicConversationProbability
_personFromSenderProbability
_personToRecipientsProbability
_subjectContentProbability
setPersonFromSenderProbability:
setHasPersonFromSenderProbability:
hasPersonFromSenderProbability
setPersonFromSenderInDyadicConversationProbability:
setHasPersonFromSenderInDyadicConversationProbability:
hasPersonFromSenderInDyadicConversationProbability
setSubjectContentProbability:
setHasSubjectContentProbability:
hasSubjectContentProbability
setPersonToRecipientsProbability:
setHasPersonToRecipientsProbability:
hasPersonToRecipientsProbability
setPersonCCRecipientsProbability:
setHasPersonCCRecipientsProbability:
hasPersonCCRecipientsProbability
setDomainFromSenderProbability:
setHasDomainFromSenderProbability:
hasDomainFromSenderProbability
setConversationProbability:
setHasConversationProbability:
hasConversationProbability
personFromSenderProbability
personFromSenderInDyadicConversationProbability
subjectContentProbability
personToRecipientsProbability
personCCRecipientsProbability
domainFromSenderProbability
conversationProbability
numberWithFloat:
T@"NSArray",&,N,V_topics
T@"NSArray",&,N,V_namedEntities
T@"NSArray",&,N,V_topicsExactMatchesInSourceText
_topics
_namedEntities
_topicsExactMatchesInSourceText
initWithTopics:namedEntities:topicsExactMatchesInSourceText:
setTopics:
setNamedEntities:
setTopicsExactMatchesInSourceText:
_usernamesCache
_accountStore
_cachedPrimaryICloudAccount
_updateQueue
_updateSource
_updateTimerIsSet
_updateTimerQueue
_updateTimerSource
readCachedAccounts
setCachedAccounts
accountsStoreDidChange:
refreshCacheFromAccountsService
cancelUpdateTimer
setUpdateTimerWithDelaySeconds:
registerNotificationObserver
removeNotificationObserver
hasCalendarAccount:
primaryICloudCalendarAccount
serverIdentifierForAccount:
accountProperties
parentAccount
accountWithIdentifier:
addObserver:selector:name:object:
didChangeValueForKey:
willChangeValueForKey:
aa_isAccountClass:
enabledDataclasses
accountsWithAccountTypeIdentifiers:error:
setUserAccountsPersistedState:
subarrayWithRange:
userAccountsPersistedState
automaticallyNotifiesObserversForKey:
T@"NSArray",R,N
T@"NSArray",R,N,V_reminders
addReminder:
confirmReminderFromThisDevice:
rejectReminderFromThisDevice:
reminderAlarmTriggeredFromThisDevice:
confirmReminderFromOtherDevice:
rejectReminderFromOtherDevice:
orphanReminder:
addContact:
confirmContact:
rejectContact:
removeAllStoredPseudoContacts
addEvent:
cancelEvent:
confirmEventFromThisDevice:
confirmEventFromOtherDevice:
rejectEventFromThisDevice:
rejectEventFromOtherDevice:
orphanEvent:
calendarDeleted
addEvents:
cancelEvents:
confirmOrRejectContact:
overwriteEvent:
filterUsingPredicate:
predicateWithBlock:
numberWithLongLong:
removeObjectsInArray:
T@"SGSqlEntityStore",W,N,V_store
_reminderStore
initWithSGSqlEntityStore:
initWithSGSqlEntityStore:andREMStore:
rejectReminder:
sourceUniqueIdentifierForStorageReminder:
_saveReminder:usingReminderStore:
_deleteReminder:usingReminderStore:
_remRemindersAssociatedWithStorageReminder:remStore:
_remRemindersAssociatedWithTitle:sourceUniqueIdentifier:usingStore:
store
setStore:
objectID
sourceUniqueIdentifier
string
unarchivedObjectOfClass:fromData:error:
siriFoundInAppsData
fetchRemindersWithError:
_remindersFoundInAppsListInREMStore:
saveSynchronouslyWithError:
removeFromList
updateReminder:
updateList:
setUserActivity:
initWithUniversalLink:
universalURL
setNotes:
constructNotesForReminder:
initWithStructuredLocation:proximity:
setRadius:
initWithTitle:
setDueDateComponents:
addAlarmWithTrigger:
initWithDateComponents:
setSiriFoundInAppsData:
archivedDataWithRootObject:requiringSecureCoding:error:
initWithRecordId:sourceUniqueIdentifier:
addReminderWithTitle:toListChangeItem:
reminderHasDuplicate:usingStore:
reminderPredicateForReminder:
remindersCreatedBetweenStartDate:endDate:
enumerateAllRemindersWithBlock:
isCompleted
fetchRemindersMatchingPredicateDescriptor:sortDescriptors:options:error:
orPredicateDescriptorWithDescriptors:
predicateDescriptorForRemindersWithDueDateBetween:and:
andPredicateDescriptorWithDescriptors:
predicateDescriptorForRemindersWithTitleContains:
predicateDescriptorForRemindersWithCompleted:
fetchSiriFoundInAppsListWithError:
TQ,N,V_cTSTimeBiomeAggregation
TQ,N,V_cTSTimeSubmodelUpdate
TB,N,V_isSubmodelRebuilt
T@"SGMIMetricsSubmodelAgeVector",&,N,V_oldestUpdatedSubmodelAge
T@"SGMIMetricsTrialMetadata",&,N,V_trialMetadata
_cTSTimeBiomeAggregation
_cTSTimeSubmodelUpdate
_oldestUpdatedSubmodelAge
_trialMetadata
_isSubmodelRebuilt
setCTSTimeBiomeAggregation:
setHasCTSTimeBiomeAggregation:
hasCTSTimeBiomeAggregation
setCTSTimeSubmodelUpdate:
setHasCTSTimeSubmodelUpdate:
hasCTSTimeSubmodelUpdate
setIsSubmodelRebuilt:
setHasIsSubmodelRebuilt:
hasIsSubmodelRebuilt
hasOldestUpdatedSubmodelAge
hasTrialMetadata
cTSTimeBiomeAggregation
cTSTimeSubmodelUpdate
isSubmodelRebuilt
oldestUpdatedSubmodelAge
setOldestUpdatedSubmodelAge:
trialMetadata
setTrialMetadata:
postalAddressFromString:
placemarkWithLocation:name:postalAddress:
evaluate:enablePreFiltering:config:error:
read:fromStore:
_forNameDetector
_nameMappings
_tokenToIgnore
_minimumConfidence
_confidenceMapper
initWithNameMappings:minimumConfidence:confidenceMapper:tokenToIgnore:forNameDetector:
nameMappingForToken:withConfidence:
isPossessive:
isEqualToNameMappingTransformer:
numberWithUnsignedLong:
setObject:atIndexedSubscript:
pathForResource:ofType:inDirectory:
bundleForClass:
payloadForString:
instanceForNameDetector
withFullNameMapping:firstNameMapping:lastNameMapping:andPossessive:
withFullNameMapping:firstNameMapping:lastNameMapping:minimumConfidence:confidenceMapper:tokenToIgnore:andPossessive:
T@"NSString",C,N,V_name
T@"NSString",C,N,V_context
T{_NSRange=QQ},N,V_contextRange
T@"SGExtractionInfo",&,N,V_extractionInfo
_extractionInfo
_contextRange
setName:
setContext:
contextRange
setContextRange:
extractionInfo
setExtractionInfo:
processConversation:threadLength:options:
processConversation:options:
recordSelfIdMatchWithPatternType:patternHash:nameTokenCount:nameClassification:messageIndex:
_purgeableGazetteer
_linguisticDataNotificationToken
initWithPurgeableGazetteer:
_resetGazetteer
_registerForNotifications
_collectAugmentedGazetteerWithText:addNamedEntity:addTopic:addLocation:
_collectDataDetectorsWithText:algorithms:dataDetections:isMessagesSource:addNamedEntity:
_harvestLocationFromEntity:category:dynamicCategory:enrichment:algorithm:
_entitiesInPlainText:withEligibleRegions:dataDetections:source:cloudSync:algorithms:
entitiesInPlainText:withEligibleRegions:source:cloudSync:algorithms:
_dissectMessage:entity:context:
safariDataDetectorsEnabledForHighMemoryDevices
addLocation:algorithm:
scoredLocationFromName:category:score:sentimentScore:
setDecayRate:
numberWithUnsignedShort:
unsignedLongValue
initWithName:category:dynamicCategory:language:
namedEntityCategoryToLocationCategory:
isLocationRelevantNamedEntityCategory:
initWithLocation:score:sentimentScore:
initWithPlacemark:category:mostRelevantRecord:
placemarkWithLocation:name:thoroughfare:subthoroughFare:locality:subLocality:administrativeArea:subAdministrativeArea:postalCode:countryCode:country:inlandWater:ocean:areasOfInterest:
fullAddressForStreetAddress:city:state:postalCode:country:
iterExtractionsForText:addEntity:addTopic:addLocation:
addUpdateHandlerForNamespaceName:block:
T@"NSString",R,N,V_domainId
T@"NSString",R,N,V_uniqueId
_domainId
_uniqueId
initWithBundleId:domainId:uniqueId:
isEqualToSearchableItemIdTriple:
domainId
uniqueId
searchableItemIdTripleWithBundleId:domainId:uniqueId:
T@"SGMessage",R,N,V_message
T@"SGSimpleMailMessage",R,N,V_mailMessage
T@"SGTextMessage",R,N,V_textMessage
T@"INInteraction",R,N,V_interaction
T@"SGHarvestQueueMetrics",&,N,V_harvestMetrics
T@"NSArray",&,N,V_enrichments
T@"NSArray",&,N,V_externalEnrichments
T{_NSRange=QQ},N,V_plainTextSigRange
T^{?={?=SS}BBBBB},R,N
TB,N,V_contactInformationExtracted
T@"NSArray",R,N,V_instantMessageAddresses
T@"NSArray",&,N,V_taggedCharacterRanges
fullDownloadRequested
TB,R,GhasFullDownloadBeenRequested
T@"NSMutableDictionary",R,N,V_emailToCanonicalEmailCache
T@"NSString",R,N,V_accountType
T@"NSArray",&,V_invalidatedMessageIdentifiers
T@"NSArray",&,N,V_authorMatchingContacts
T@"NSSet",&,N,V_authorMatchingContactsKeys
TB,N,V_needsSourceVerification
TB,N,V_pendingVerification
_enrichments
_externalEnrichments
_flushExternalEnrichments
_taggedCharacterRanges
_fullDownloadRequested
_inhumanFeatures
_dissectorLock
_useMailMessageHtmlParser
_messageInhumannessChecked
_dataDetectorsSignatureForTesting
_overrideDataDetectorSignatureForTesting
_lazySnippetsContent
_contactInformationExtracted
_needsSourceVerification
_pendingVerification
_emailToCanonicalEmailCache
_accountType
_invalidatedMessageIdentifiers
_authorMatchingContacts
_authorMatchingContactsKeys
_message
_mailMessage
_textMessage
_interaction
_harvestMetrics
_plainTextSigRange
initWithDuplicateKey:title:
initWithEmailMessage:
initWithTextMessage:
initWithMessage:
initWithIntentPersonAtDate:bundleId:handle:displayName:
initWithInteraction:fromBundleIdentifier:
initWithInteraction:identifier:fromBundleIdentifier:
initWithInteractionIdentifier:fromBundleIdentifier:
_initWithInteractionIdentifier:fromBundleIdentifier:creationTime:
snippetsContent
enrichments
addEnrichment:
addEnrichments:
addOrReplaceEventEnrichment:
addOrReplacePreferredEnrichment:
externalEnrichments
flushExternalEnrichmentsUponDealloc
addExternalEnrichment:
removeExternalEnrichmentAtIndex:
taggedCharacterRanges
addTaggedCharacterRanges:
stripEventInformation
setCreationTimestamp:
setLastModifiedTimestamp:
addDetection:forIdentity:extractionInfo:
addDetectedPostalAddress:forIdentity:context:contextRangeOfInterest:extractionInfo:
addDetectedPhoneNumber:forIdentity:context:contextRangeOfInterest:extractionInfo:
addEmailAddressEnrichment:
addBirthdayEnrichment:
addDetectedEmailAddress:forIdentity:context:contextRangeOfInterest:extractionInfo:
birthday:forIdentity:context:contextRangeOfInterest:extractionInfo:
addDetectedBirthday:forIdentity:context:contextRangeOfInterest:extractionInfo:
addInstantMessageAddressEnrichment:
addDetectedInstantMessageAddress:forIdentity:context:contextRangeOfInterest:extractionInfo:
addSocialProfileEnrichment:
addDetectedSocialProfile:forIdentity:context:contextRangeOfInterest:extractionInfo:
contactDetailsWithType:
addresses
enumeratePeople:
_lazyCheckMessageForHumanness
inhumanFeatures
isInhuman
requestFullDownload
hasFullDownloadBeenRequested
hasEventEnrichment
eventEnrichmentsCount
acquireDissectorLock
releaseDissectorLock
runWithDissectorLock:
setEnrichments:
setExternalEnrichments:
plainTextSigRange
setPlainTextSigRange:
contactInformationExtracted
setContactInformationExtracted:
setTaggedCharacterRanges:
emailToCanonicalEmailCache
accountType
invalidatedMessageIdentifiers
setInvalidatedMessageIdentifiers:
authorMatchingContacts
setAuthorMatchingContacts:
authorMatchingContactsKeys
setAuthorMatchingContactsKeys:
needsSourceVerification
setNeedsSourceVerification:
pendingVerification
setPendingVerification:
message
mailMessage
textMessage
interaction
harvestMetrics
setHarvestMetrics:
human
inhuman
isLegalEmailAddress:
mailingListId:
detectContacts
T@"SGRecordId",&,N,V_recordId
T@"SGDuplicateKey",&,N,V_duplicateKey
T@"NSString",C,N,V_sourceKey
T@"NSString",C,N,V_content
T{_NSRange=QQ},N,V_contentRangeOfInterest
T@"NSString",C,N,V_title
T@"NSString",C,N,V_authorNickname
T@"NSString",C,N,V_authorPhotoPath
T@"CSPerson",&,N,V_author
T{SGUnixTimestamp_=d},N,V_creationTimestamp
T{SGUnixTimestamp_=d},N,V_lastModifiedTimestamp
T@"SGSimpleTimeRange",&,N,V_timeRange
T@"NSData",C,N,V_structuredData
Td,N,V_quality
T@"NSMutableSet",&,N,V_locations
Tq,N,V_masterEntityId
Tq,N,V_groupId
TI,N,V_state
T@"NSString",C,N,V_operatingSystemVersion
_tags
_tagsSnapshot
_tagsLock
_duplicateKey
_sourceKey
_content
_title
_authorNickname
_authorPhotoPath
_author
_creationTimestamp
_lastModifiedTimestamp
_timeRange
_structuredData
_quality
_locations
_operatingSystemVersion
_contentRangeOfInterest
initWithEntity:
isEqualToEntity:
validate
loadOrigin:
isNaturalLanguageEvent
isCancelled
isFromForwardedMessage
setAuthor:
addTag:
removeTag:
tags
hasTag:
extraKeyTag
isPartiallyDownloaded
fieldsToSaveOnConfirmation
loggingIdentifier
setRecordId:
duplicateKey
setDuplicateKey:
sourceKey
setSourceKey:
content
setContent:
contentRangeOfInterest
setContentRangeOfInterest:
title
setTitle:
authorNickname
setAuthorNickname:
authorPhotoPath
setAuthorPhotoPath:
creationTimestamp
lastModifiedTimestamp
timeRange
setTimeRange:
structuredData
setStructuredData:
quality
setQuality:
locations
setLocations:
setMasterEntityId:
setGroupId:
operatingSystemVersion
setOperatingSystemVersion:
isTemplateShortName
isExtraKey
isEqualToEntityTag:
fromForwardedMessage
extractedEventCancellation
confirmedEventHashes
confirmedEventWithoutTimestampHashes
rejectedEventHashes
confirmedReminderHashes
rejectedReminderHashes
contactHashes
confirmedEventFieldHashes
confirmedEventWithoutTimestampFieldHashes
storageDetailHashes
dontUpdate
resetInfo
observers
T@"NSUbiquitousKeyValueStore",R,N
_backingKVStore
_noCloudFakeBackingKVStore
initWithKVS:
identitySalt
mutableSetForKey:
setForKey:
loadResetInfo
_tellObserversHashesDidChange
_setHashes:forKey:
pushConfirmedEvents:
pushConfirmedEventsWithoutTimestamp:
pushRejectedEvents:
pushConfirmedReminders:
pushRejectedReminders:
pushConfirmedEventFields:
pushConfirmedEventWithoutTimestampFields:
pushContacts:
pushStorageDetails:
pushDontUpdate:
pushResetInfo:
_setInternalStateAccordingToKVS:
setInternalStateAccordingToKVS
pushAll:
keysForContact:
keysForStorageContact:
keysForContactDetail:ofContact:
keysForCuratedContactDetail:ofContact:
_canaryHash
modernHashesForClassicHashes:forMatching:
hashesForStrings:forMatching:
hashesForContact:forMatching:
hashesForStorageContact:forMatching:
hashesForContactDetail:fromContact:forMatching:
hashesForCuratedContactDetail:fromContact:forMatching:
identityBasedHashesForPseudoEvent:withCreationTime:
identityBasedHashesForPseudoReminder:withCreationTime:
confirmHashesForRemindersOpaqueKey:withCreationTime:forMatching:
confirmHashesForOpaqueKey:withCreationTime:forMatching:
confirmHashesForOpaqueKeyWithoutTimestamp:forMatching:
rejectHashesForOpaqueKey:forMatching:
hashesForOpaqueKey:forMatching:
hashesForPseudoEventByKey:forMatching:
resetNoFlush
reset
handleSyncedDataChanged:
confirmOrRejectDetailHashes:
confirmOrRejectDetail:forContact:
confirmOrRejectRecordForContact:
rejectRealtimeContact:
confirmEvent:
confirmStorageEvent:
writeAndPushConfirmedEventHashes:
writeAndPushConfirmedEventWithoutTimestampHashes:
rejectEvent:
rejectStorageEvent:
writeAndPushRejectedEventHashes:
confirmReminder:
writeAndPushConfirmedReminderHashes:
writeAndPushRejectedReminderHashes:
confirmReminderFromExternalDevice:
rejectReminderFromExternalDevice:
_anyHash:inSet:
hasContact:
hasStorageContact:
isValidNewEvent:
isValidCancelledEvent:
isUpdatableContact:
isConfirmedEventWithoutTimeStamp:
isConfirmedEvent:
isRejectedEvent:
removeConfirmationHistoryForEvent:
removeConfirmationHistoryForEntityWithOpaqueKey:creationTimestamp:
isValidNewReminder:
isConfirmedReminder:
isRejectedReminder:
isValidSuggestion:
addSuggestHistoryObserver:
confirmEventFromExternalDevice:
rejectEventFromExternalDevice:
hasContactDetail:forContact:
_hashesForConfirmedField:value:storageEvent:forMatching:
confirmFieldValues:forStorageEvent:
hasConfirmedField:value:forStorageEvent:
pushEmptyHashesForTestingKey:
notificationWithName:object:userInfo:
newTestingInstanceWithSharedKVS:
unionSet:
isEqualToSet:
synchronize
isComplete
arrayByAddingObject:
dateString
setArray:forKey:
setObject:forKey:
arrayForKey:
unarchivedObjectOfClasses:fromData:error:
dataForKey:
setData:forKey:
initWithBundleIdentifier:
objectForKey:
syncHistoryToCloud
sharedSuggestHistory
_basePath
_cacheFiles
initWithBasePath:
initInMemory
cacheOfType:
replaceCacheOfType:block:
deleteValueByRecordIdSet:
deleteValueByRecordId:
commitTemporaryFile
initTemporaryForOverwritingCache:
keyValueCacheForPath:
null
normalizeWord:
normalizeLowercaseWord:
Tf,N,V_personFromSenderAge
Tf,N,V_personFromSenderInDyadicConversationAge
Tf,N,V_subjectContentAge
Tf,N,V_personToRecipientsAge
Tf,N,V_personCCRecipientsAge
Tf,N,V_domainFromSenderAge
Tf,N,V_conversationAge
_conversationAge
_domainFromSenderAge
_personCCRecipientsAge
_personFromSenderAge
_personFromSenderInDyadicConversationAge
_personToRecipientsAge
_subjectContentAge
setPersonFromSenderAge:
setHasPersonFromSenderAge:
hasPersonFromSenderAge
setPersonFromSenderInDyadicConversationAge:
setHasPersonFromSenderInDyadicConversationAge:
hasPersonFromSenderInDyadicConversationAge
setSubjectContentAge:
setHasSubjectContentAge:
hasSubjectContentAge
setPersonToRecipientsAge:
setHasPersonToRecipientsAge:
hasPersonToRecipientsAge
setPersonCCRecipientsAge:
setHasPersonCCRecipientsAge:
hasPersonCCRecipientsAge
setDomainFromSenderAge:
setHasDomainFromSenderAge:
hasDomainFromSenderAge
setConversationAge:
setHasConversationAge:
hasConversationAge
personFromSenderAge
personFromSenderInDyadicConversationAge
subjectContentAge
personToRecipientsAge
personCCRecipientsAge
domainFromSenderAge
conversationAge
decodeEncodedWordsIn:
componentsSeparatedByString:
initWithLocaleIdentifier:
setShortMonthSymbols:
setShortWeekdaySymbols:
setLenient:
getObjectValue:forString:range:error:
components:fromDate:
regularExpressionWithPattern:options:error:
dataUsingEncoding:allowLossyConversion:
rangeAtIndex:
enumerateMatchesInString:options:range:usingBlock:
rangeOfBodyFromRfc822:
initWithBytesNoCopy:length:deallocator:
replaceOccurrencesOfString:withString:options:range:
parseHeaders:
simpleMailMessageFromHeaders:
parseRfc822Headers:htmlContent:
addIndexesInRange:
rangeOfData:options:range:
removeIndex:
hasSuffix:
enumerateLinesUsingBlock:
rangeOfString:options:
parseParameterizedHeaderValue:
htmlBodyFromRfc822:headers:attachmentCallback:
initWithBase64EncodedData:options:
uudecode:
initWithBytesNoCopy:length:encoding:freeWhenDone:
decodeQuotedPrintable:charset:rfc2047UnderscoreAsSpace:
stripTrailingASCIIHSpace:
stringEncodingForData:encodingOptions:convertedString:usedLossyConversion:
formatFlowed:delSp:
parseRfc822:attachmentCallback:
stringByReplacingOccurrencesOfString:withString:options:range:
parseRfc822Headers:htmlContent:source:
rangeOfHeadersFromRfc822:
parseRfc822:
dateFromEmailString:
namedEmailAddressWithFieldValue:
addressItemsFromEmailString:
namedEmailAddressesWithFieldValues:
T@"NSArray",&,N,V_matches
T{_NSRange=QQ},N,V_signatureRange
_matches
_signatureRange
matches
setMatches:
signatureRange
setSignatureRange:
_lastAddressIndex
_lastAddressEndPos
_lastResult
coalesceAddress:orAppendMatch:
initWithMatchType:range:labelRange:labelString:valueRange:valueString:
labelRange
matchType
TI,R,N,V_matchType
T{_NSRange=QQ},R,N,V_range
T{_NSRange=QQ},R,N,V_labelRange
T{_NSRange=QQ},R,N,V_valueRange
T@"NSString",R,N,V_valueString
T@"NSString",R,N,V_labelString
Ti,R,N,V_parsecDomain
T@"NSString",R,N,V_parsecWikidataQid
T@"NSDate",R,N,V_detectedDate
T@"NSTimeZone",R,N,V_detectedTimeZone
T@"NSDate",R,N,V_detectedEndDate
T@"NSTimeZone",R,N,V_detectedEndTimeZone
TB,R,N,V_allDay
TB,R,N,V_inferredDate
TB,R,N,V_approximateTime
TB,R,N,V_partialDate
T@"SGPostalAddressComponents",R,N,V_postalAddressComponents
_allDay
_inferredDate
_approximateTime
_partialDate
_matchType
_parsecDomain
_valueString
_labelString
_parsecWikidataQid
_detectedDate
_detectedTimeZone
_detectedEndDate
_detectedEndTimeZone
_postalAddressComponents
_range
_labelRange
_valueRange
TB,R
supportsSecureCoding
encodeWithCoder:
initWithCoder:
initWithLookupHintInDomain:range:labelRange:labelString:valueRange:valueString:qid:
initWithDetectedDate:detectedTimeZone:detectedEndDate:detectedEndTimeZone:matchType:range:labelRange:labelString:valueRange:valueString:allDay:inferredDate:approximateTime:partialDate:
initWithMatchType:range:labelRange:labelString:valueRange:valueString:postalAddressComponents:
isEqualToDataDetectorMatch:
range
valueRange
valueString
labelString
parsecDomain
parsecWikidataQid
detectedDate
detectedTimeZone
detectedEndDate
detectedEndTimeZone
allDay
inferredDate
approximateTime
partialDate
postalAddressComponents
encodeBool:forKey:
encodeObject:forKey:
encodeInteger:forKey:
encodeInt64:forKey:
decodeBoolForKey:
decodeObjectOfClass:forKey:
decodeIntegerForKey:
decodeInt64ForKey:
inferredDateForDataDetectorResult:
partialDateForDataDetectorResult:
approximateTimeForDataDetectorResult:
resetUnusedScannersForTesting
detectionsInPlainText:withEligibleRegions:
detectionsInPlainText:withEligibleRegions:baseDate:
detectionsInPlainText:baseDate:
detectionsAndSignatureInText:eligibleRegions:baseDate:
_detectionsInPlainText:withEligibleRegions:ddSignature:baseDate:
stringHasDatesOrTimes:
intersectSet:
distantPast
stripChevrons:
emailFrom:entity:
emailFrom:
nextMessage:entity:
nextMessage:
enumeratePreviousMessages:inEntity:usingBlock:
enumeratePreviousMessages:usingBlock:
ipsosMessageWithSearchableItem:
whitespaceCharacterSet
TQ,R,N,V_countUpTo8KB
TQ,R,N,V_count8KBTo32KB
TQ,R,N,V_count32KBTo128KB
TQ,R,N,V_count128KBTo512KB
TQ,R,N,V_count512KBTo2MB
TQ,R,N,V_countOver2MB
_countUpTo8KB
_count8KBTo32KB
_count32KBTo128KB
_count128KBTo512KB
_count512KBTo2MB
_countOver2MB
numberArray
initWithNumberArray:
bucketizeWithSize:
isEmpty
countUpTo8KB
count8KBTo32KB
count32KBTo128KB
count128KBTo512KB
count512KBTo2MB
countOver2MB
isInhumanName:
_isInhumanEmailAddressPatternMatch:
isInhumanEmailAddress:
isInhumanNamedEmailAddress:
isInhumanPerson:
isInhumanPhoneNumber:
hasTooManyLongNumbers:
isInhumanBody:
areHumanHeaders:
getBytes:maxLength:usedLength:encoding:options:range:remainingRange:
initWithCharactersNoCopy:length:freeWhenDone:
_pas_retainsConmingledBackingStore
T@"NSDate",R,N,V_cachingDate
Td,R,N,V_score
_cachingDate
_score
initWithCachingDate:score:
cachingDate
score
_scorer
_namedEntityStore
_namedEntityScoreCache
_significanceCheckEnabled
initWithNamedEntityStore:significanceCheckEnabled:
dissect:entity:context:
_getNamedEntityPortraitScores:priorityQueue:
iterRankedNamedEntitiesWithQuery:error:block:
capacity
getMinItemWithoutPopping
setMatchingNames:
scoreThreshold
storeNewExtractions
waitForSemaphore:
indexSearchableItems:completionHandler:
endIndexBatchWithClientState:completionHandler:
beginIndexBatch
initWithName:protectionClass:bundleIdentifier:
setIsUpdate:
initWithUniqueIdentifier:domainIdentifier:attributeSet:
setPortraitNamedEntities:
setPortraitFeatureVectorVersion:
featureVectorVersion
setPortraitFeatureVector:
encodeAsData
setPortraitStaticScore:
computeSpotlightIndexScoreFromPortraitExtractions:
extractSortedMutableArray
addQidString:
bundleIdIsAllowed:
maxNEExtractions
useRawNEExtractionScores
loadLazyPlistWithBasename:
inputDictFromTaggedCharacterRanges:usingTokenMapping:forModel:
featureDimensionForInputSection:forModel:
modelOutputFromOutputMapping:modelOutput:modelInput:
argMaxForSequence:
argMaxForLastOutput:
argMaxForOutputIndex:index:shape:
enrichTaggedCharacterRangesWithModelOutput:usingInputCharacterRanges:
cleanModelAssets
cleanModelsDirectoryOfModelsNamed:
cleanLegacyModelsDirectoryOfModelsNamed:
modelsDirectoryName
nextObject
enumeratorAtPath:
fileExistsAtPath:
shape
multiArrayConstraint
inputDescriptionsByName
initWithShape:dataType:error:
dictionaryWithPath:error:
filesystemPathForAssetDataRelativePath:
stringByAppendingPathExtension:
currentModelURLForModelName:
strength
T@"NSArray",C,N,V_phones
T@"NSString",C,N,V_email
T@"NSArray",C,N,V_socialProfileIdentifiers
_phones
_socialProfileIdentifiers
phones
setPhones:
setEmail:
socialProfileIdentifiers
setSocialProfileIdentifiers:
registerAndLinkIdentity:recordId:phones:socialProfiles:email:curated:isSent:
processPseudoContactEntity:recordId:
_joinIncompleteIdentityEmailWithOthersOfItsIlk:name:recordId:
_joinIncompleteIdentityPhonesWithOthersOfTheirIlk:name:recordId:
_joinIncompleteIdentitySocialProfilesWithOthersOfTheirIlk:name:recordId:
link:to:type:strength:
getNewBlobsIfChanged
_isIdentityStoreDirty
isEqualToRecordId:
computeBlobs
_markIdentityStoreClean
getInt64ForColumn:
_linkNamelessEmailsIfAppropriate:nameToVertex:disjointSets:edges:
_linkNamelessPhonesIfAppropriate:nameToVertex:disjointSets:edges:
_linkNamelessSocialProfilesIfAppropriate:nameToVertex:disjointSets:edges:
_computeBlobsRaw:
loadInterdicts
intersectsSet:
curatedRecordIds
splitBlob:withInterdicts:edges:curatedRecordIds:
splitNeededFor:withInterdicts:curatedRecordIds:
_makeBlobsFromConnectedComponents:edges:
raise:format:
_uniqueGoodDetailMatchFrom:toDetails:nonUnique:
_popMergeBlobForAnalysis
makeInterdictsForBlob:withContactStore:
sortedArrayUsingSelector:
_writeMergeBlobSnapshotForAnalysis:
_isBlobAnalysisQueueEmpty
initWithFirst:second:
syncNewBlobsIfChanged
_analyzeMergeBlobsIncremental:
batch:
forceBlobSync
addInterdictFrom:with:
processContactEnrichment:recordId:
rebuildIdentityTables
registerAndLinkIdentity:recordId:phones:socialProfiles:email:curated:
deleteByRecordId:
getAllLinks
unmergedCandidatesLimitedTo:
analyzeMergeBlobs:
initWithBytes:length:
setByAddingObjectsFromSet:
_markIdentityStoreDirty
patternDict
patternData
globalLanguageVersion
currentLanguages
patternInstances
useAllLanguages
regexesImmuneToDeath
_classKey
_langResolutionOrder
_compiledRegexes2
_language
_regexpKeysSeen
_localLanguageVersion
resetIfNeeded
rawValuesForKey:
rawValueForKey:
rawValueOrDataForKey:
stringSetMatcherForKey:
regex2ForKey:
_clearRegexCache
_becomeImmuneToDeath
dataForOffset:includeTerminator:
calculateLangResolutionOrder
changeLanguageOrPatternData
calculateCurrentLanguagesFromPreferredLocaleCodes:
forceLanguagesTo:
patternsForIdentifier:
patternsForClass:
setPatternsDictForTesting:
resetToDefaultPatternsForTesting
useAllLanguagesAtOnce:
clearAllRegexCaches
_reinstateDeath
pauseCacheEvictionTemporarily
languagePartOfLanguageCode:
countryCodeFromLanguageCode:
fallbackLanguageCodeForCountryCode:
orderedSetWithObjects:
_fileData
dataForOffset:
filesystemPathsForAssetDataRelativePaths:
weakObjectsHashTable
T@"NSString",R,N,V_key
T@"NSString",R,N,V_value
_value
initWithKey:value:
isEqualToSimpleMailHeaderKeyValue:
value
hv_firstHeaderForKey:
T@"SGSimpleNamedEmailAddress",C,N,V_from
T@"SGSimpleNamedEmailAddress",C,N,V_replyTo
T@"NSArray",C,N,V_to
T@"NSArray",C,N,V_cc
T@"NSArray",C,N,V_bcc
T@"NSString",C,N,V_messageId
T@"NSString",C,N,V_htmlBody
T@"NSData",C,N,V_htmlContentData
TB,N,V_hasInhumanHeaders
TB,N,V_isPartiallyDownloaded
T@"SGSimpleNamedEmailAddress",C,N,V_mailingList
T@"NSArray",C,N,V_mailboxIdentifiers
T@"NSArray",C,N,V_headers
T@"SGHtmlParser",R,N
T@"NSIndexSet",R,N
_htmlBodyCached
_htmlContentDataCached
_htmlParserCached
_quotedRegionsCached
_hasHumanHeadersCached
_authorCached
_hasInhumanHeaders
_isPartiallyDownloaded
_from
_replyTo
_bcc
_mailboxIdentifiers
_headers
_mailingList
_htmlBody
_htmlContentData
initForBuilding
asDictionary
headersDictionary
htmlBody
htmlContentData
htmlParser
quotedRegions
isInhumanContentNoncached
hasHumanHeaders
dataDetectorMatchesWithSignature
textContent
body
contentLength
isEqualToSimpleMailMessage:
initWithMailContentEvent:contentProtection:
allRecipients
senderDomain
hasRecipientFromSameDomainAsSender
spotlightUniqueIdentifier
setHeaders:
createNewSearchableItemWithSource:uniqueIdentifier:domainIdentifier:
createNewSearchableItem
from
setFrom:
replyTo
setReplyTo:
setTo:
setCc:
setBcc:
mailboxIdentifiers
setMailboxIdentifiers:
hasInhumanHeaders
setHasInhumanHeaders:
setIsPartiallyDownloaded:
headers
mailingList
setMailingList:
setHtmlBody:
setHtmlContentData:
setBundleID:
setAccountIdentifier:
setHTMLContentData:
setEmailHeaders:
setHiddenAdditionalRecipients:
setAuthorEmailAddresses:
setAuthorNames:
setMailMessageID:
setContentCreationDate:
initWithContentType:
htmlContent
isFullyDownloaded
bccHandles
ccHandles
toHandles
messageIdentifier
headerDictionaryContainsInhumanHeaders:
listId
initWithNamedHandle:
mailItemIsInSent:
HTMLContentDataNoCopy
headersContainInhumanOnes:keys:
hiddenAdditionalRecipients
mailMessageID
namedEmailAddressWithCSPerson:
hv_addEntriesFromHeadersDictionary:
initWithKeyPointerFunctions:valuePointerFunctions:capacity:
hv_headerValueFunctions
hv_headerKeyFunctions
decodeObjectOfClasses:forKey:
appendFormat:
resultWithBlock:
resultNonnullWithBlock:
addIndexes:
shiftIndexesStartingAtIndex:by:
_pas_stringWithDataNoCopy:encoding:nullTerminated:
serializeAll:
serialized
sg_descriptionForMimeHeaders
addEntriesFromDictionary:
dictionaryWithSharedKeySet:
sharedKeySetForKeys:
subjectByCleaningPrefixesInSubject:
invertedSet
rangeOfCharacterFromSet:options:range:
rangeOfString:options:range:
_dissector
consumeUserActivityMetadataWithContext:
consumeSearchableUserActivityWithContext:
consumeThirdPartyAppContentWithContext:
consumeSafariContentWithContext:
consumeNotesContentWithContext:
consumeNewsArticleViewsWithContext:
initWithNamedEntityDissector:
_consumeContentParts:contentDataSource:uniqueIdentifier:domainIdentifier:bundleIdentifier:context:
processTextContentItem:
extractionsFromUserAction:searchableItem:
extractionsFromSearchableItem:
_writeAndFlushContainers:
_extractionCountForContainers:
_shouldAcceptSearchableItem:
_entityContainersForContent:contentDataSource:isOutgoing:contactHandles:uniqueIdentifier:domainIdentifier:bundleIdentifier:
_entityContainersForContentItem:
_extractionsFromEntityContainers:
_processUserActivity:extractionContainer:rawTextOut:language:
_processCSSearchableItemLocationWithName:thoroughfare:city:state:country:postalCode:latitude:longitude:extractionContainer:
_entityContainersForUserAction:searchableItem:
entityContainersForUserActivity:documentId:searchableItem:
_harvestMapsIntent:identifier:ignored:numberOfExtractons:error:
_harvestPodcastsIntent:identifier:groupIdentifier:ignored:numberOfExtractons:error:
deleteAllLocationsFromSourcesWithBundleId:deletedCount:error:
deleteAllNamedEntitiesFromSourcesWithBundleId:deletedCount:error:
deleteAllLocationsFromSourcesWithBundleId:groupIds:deletedCount:error:
deleteAllNamedEntitiesFromSourcesWithBundleId:groupIds:deletedCount:error:
formatStringArray:truncatingAtLength:
deleteAllLocationsFromSourcesWithBundleId:documentIds:deletedCount:error:
deleteAllNamedEntitiesFromSourcesWithBundleId:documentIds:deletedCount:error:
flushDonationsWithError:
donateNamedEntities:source:algorithm:cloudSync:sentimentScore:error:
initWithBundleId:groupId:documentId:date:
mediaItems
payloadStringValues
payload
role
parameters
backingStore
namedLocation
stateOrProvince
streetAddressFromThoroughfare:subThoroughfare:
subThoroughfare
thoroughfare
_fetchUserActivityWithUUID:intervalToWaitForDocumentSynchronizationToComplete:completionHandler:
uaIdentifier
relatedUniqueIdentifier
placemarkWithLatitudeDegrees:longitudeDegrees:name:thoroughfare:subthoroughFare:locality:subLocality:administrativeArea:subAdministrativeArea:postalCode:countryCode:country:inlandWater:ocean:areasOfInterest:
administrativeArea
locality
placemark
locationFromMapItemDictionary:
_payloadForIdentifier:
initWithNamedEntityRecords:topicRecords:
recordsForTopics:source:algorithm:
recordsForNamedEntities:source:algorithm:
textContentDataSource
contentDescription
bundleIdentifierIsAllowedForSearchableItems:
defaultPolicy
writeSynchronous
searchableItem
failedWithError:
ignored
desc
contentIsReaderText
registerUserActivityConsumer:levelOfService:
registerThirdPartyAppConsumer:levelOfService:
registerSafariConsumer:levelOfService:
registerNotesConsumer:levelOfService:
registerNewsConsumer:levelOfService:
initWithKey:
recordString:
_localTraining
_languagesToRecord
_perLanguageRecordersLock
initWithTraining:andRecorders:
_dynamicLabelContentForReply:prompt:language:
dpRecordMessageText:inLanguage:
trainQuickResponsesForMessage:withConversationHistory:
version
addSessionWithCovariates:label:sessionDescriptor:spotlightReference:isInternal:
shouldSampleForLabel:inLanguage:isDynamicLabel:
labelOf:inLanguage:
maxReplyLength
maxPromptLength
classificationParams
config
transformerInstanceForLanguage:mode:
areModelsAvailableInLanguage:
componentsSeparatedByCharactersInSet:
formUnionWithCharacterSet:
letterCharacterSet
isLinkInString:
isFileInString:
isDigitInString:
_isSharingSenderLocation:senderName:
_isImageAttachment:
dpRecorderRules
decimalDigitCharacterSet
sg_decodeEncodedWords
sg_stringWithDecodedEncodedWords
initWithHeaderData:
identifyRangeOfEncodedWordAtIndex:
stringEncoding
decodeEncodedTextToData:
replaceCharactersInRange:withString:
T@"NSSet",R,N,V_appleAnchorHrefs
_chunkStart
_chunkLength
_mutablePlainTextLines
_plainTextLines
_plainTextContentLock
_plainTextContent
_plainTextLinesTotalLength
_currentLineIsCollapsed
_currentLineData
_parserContext
_renderingSuspended
_preBlockDepth
_quotedRegions
_tabularRegions
_sigHtmlBlockRegions
_bytesConsumedInPreviousPasses
_depth
_depthsWithActiveRegions
_activeRegions
_activeRegionStartPositionStack
_activeRegionIndexSetStack
_quoteToEndFromPosition
_appleAnchorHrefs
initWithString:
initWithData:encoding:
initWithUTF8DataEnumerator:
textLines
tabularRegions
signatureRegions
appleAnchorHrefs
setLength:
removeLastObject
initWithCString:encoding:
enumerateByteRangesUsingBlock:
initWithOptions:capacity:
objectEnumerator
sg_dataEnumeratorUsingEncoding:nullTerminated:
mutableBytes
initWithLength:
T@"NSNumber",R,V_featureName
T@"NSNumber",R,V_strictLowerBound
T@"NSNumber",R,V_strictUpperBound
_featureName
_strictLowerBound
_strictUpperBound
initWithFeatureName:strictLowerBound:strictUpperBound:
initWithDictionary:
featureName
strictLowerBound
strictUpperBound
T@"NSArray",R,V_saliencyOverrideRules
T@"NSArray",R,V_bailOutRules
T@"NSArray",R,V_featureNames
T@"NSArray",R,V_mean
T@"NSArray",R,V_std
T@"NSArray",R,V_groundTruthEstimatorRules
T@"NSArray",R,V_groundTruthEstimatorFeatures
T@"NSNumber",R,V_threshold
_saliencyOverrideRules
_bailOutRules
_featureNames
_mean
_std
_groundTruthEstimatorRules
_groundTruthEstimatorFeatures
_threshold
initWithSaliencyOverrideRules:bailOutRules:featureNames:mean:std:groundTruthEstimatorRules:threshold:
saliencyOverrideRules
bailOutRules
featureNames
mean
groundTruthEstimatorRules
groundTruthEstimatorFeatures
threshold
rulesFromFeatures:lowerBounds:upperBounds:
defaultConfig
enumerateContactIdentifierBatchesUsingBlock:
enumerateContactIdentifiersUsingBlock:
cancel
setCompletionHandler:
setFoundItemsHandler:
_pas_proxyArrayWithMapping:
setProtectionClasses:
isDeviceFormattedForProtection
setPrivateIndex:
setBundleIDs:
initWithQueryString:context:
setFetchAttributes:
setLowPriority:
profanityInTokens:forLocaleIdentifier:
_lexiconTokenForToken:inLexicon:
lengthOfBytesUsingEncoding:
nicknamesForName:
dataWithContentsOfFile:options:error:
pathForResource:ofType:
unifiedContactsMatchingPredicate:keysToFetch:usingContactStore:error:
unifiedContactWithIdentifier:keysToFetch:usingContactStore:error:
unifiedMeContactWithKeysToFetch:usingContactStore:error:
identifiersPredicateFromCacheForPredicate:isCached:
enumerateContactsWithFetchRequest:usingContactStore:error:usingBlock:
enumerateContactsMatchingName:withKeysToFetch:usingContactStore:error:usingBlock:
enumerateContactsMatchingEmailAddress:withKeysToFetch:usingContactStore:error:usingBlock:
clearCache
handleExistsInContactStoreForHandle:withHandleType:
setPredicate:
initWithKeysToFetch:
predicateForContactsMatchingEmailAddress:
predicateForContactsMatchingPhoneNumber:
initWithStringValue:
predicateForContactsMatchingName:
predicateForContactsWithIdentifiers:
raise
enumerateContactsWithFetchRequest:error:usingBlock:
predicate
trackEventWithScalar:cacheHit:
trackEventWithScalar:
_crossPlatformUnifiedMeContactWithKeysToFetch:error:
unifiedContactWithIdentifier:keysToFetch:error:
T@"NSString",&,V_numericMapping
T@"NSString",&,V_characterMapping
T@"NSCharacterSet",&,V_characterSet
_numericMapping
_characterMapping
_characterSet
initWithNumericMapping:andSymbolicMapping:
isEqualToSymbolicMappingTransformer:
numericMapping
setNumericMapping:
characterMapping
setCharacterMapping:
characterSet
setCharacterSet:
withNumericMapping:andSymbolicMapping:
_count
_carrierEntries
_mruCarrierEntry
_payloadOffset
_totalPayloadSize
_sizeFactor
initWithFilehandle:sizeFactor:keyLength:singleByteOffset:
carrierEntryForKey:
payloadLengthForKey:
seekLocationForKey:
payloadCountForKey:
stringValueForKey:fromFile:
fullMappingFromFile:
_flightsFh
_flightDataOffsets
_flightsUpdateFh
_flightUpdateDataOffsets
_airportsFh
_airportDataOffsets
_airportsUpdateFh
_airportUpdateDataOffsets
_carrierNames
_carrierCodesByName
_carrierUpdateNames
_carrierUpdateCodesByName
updateFlights
updateAirports
updateCarriers
airportIataCodesForDataOffset:
airportIataCodes
namesForAirport:withDataOffset:andFileHandle:
namesForAirport:
bestLocalizedNameForAirport:
timezoneOlsonCodeForAirport:withDataOffset:andFileHandle:
timezoneOlsonCodeForAirport:
latitudeAndLongitudeForAirport:withDataOffset:andFileHandle:
latitudeAndLongitudeForAirport:
carrierIataCodes
carrierIataCodeForCarrierName:
nameForCarrier:
airportsServicedByCarrier:flightNumber:withDataOffset:andFileHandle:
airportsServicedByCarrier:flightNumber:
airportCodeForAirportName:flightCarrier:flightNumber:outputInfos:
airportCodeForAirportName:flightCarrier:flightNumber:otherKnownFlightsToAirport:outputInfos:
sanitizeAirportName:
airportNameNoiseKeywords
arrayWithContentsOfFile:
T@"NSString",R,N,V_flightno
T@"NSString",R,N,V_airline
T@"NSString",R,N,V_departureAirportDescription
T@"NSString",R,N,V_arrivalAirportDescription
_flightno
_airline
_departureAirportDescription
_arrivalAirportDescription
initWithCarrier:flightNo:depDesc:arrDesc:
flightno
airline
departureAirportDescription
arrivalAirportDescription
appLinksWithURL:limit:error:
targetApplicationRecord
initWithURL:error:
bundleRecord
URLWithString:
sg_isAppleBundleIdentifier
sg_preferredApplicationRecordForUserActivityType:withTeamIdentifier:preferredBundleIdentifier:
sg_preferredApplicationRecordForURL:
sg_applicationRecordForDefaultWebBrowser
applicationRecordsForUserActivityType:limit:error:
modelForPath:modelClass:
modelFromMobileAssetForEntity:type:language:class:
modelFromMobileAssetForName:language:
Td,R,V_threshold
T@"<PMLMultiLabelClassifierProtocol><PMLPlistAndChunksSerializableProtocol>",R,D
predictLabelForInput:
loadBinaryClassificationModelFromMobileAssetForObjective:language:withBlock:
_head
_tail
_queue
initWithHead:tail:
initWithInMemoryStorage
initWithInMemoryStorageSparse
initWithDirectory:name:
_rotateIfNecessary
_rotate
forceRotate
add:
addAsync:
exists:
counts
close
TI,R,N
_countPtr
_mask
_buf
contentsOfDirectoryAtPath:error:
initWithKeyOptions:valueOptions:capacity:
_hashes
detectSalientMails
_conversationTracker
conversationForIdentifier:
addTextMessageItem:
clear
initWithMessages:
T@"NSArray",R,V_messages
T@"NSString",R,V_likelyLanguage
_messages
_likelyLanguage
messages
likelyLanguage
detectLanguageFromLanguageTags:
language
T@"SGTextMessage",R,V_message
T@"NSString",R,N,V_text
T@"NSString",R,N,V_senderID
T@"NSDate",R,N,V_timestamp
T@"NSString",R,V_language
T@"NSArray",R,V_detectedData
T@"NSArray",&,V_features
_text
_senderID
_timestamp
_detectedData
_features
T@"NSDate",R,N
isEqualToConversationTurn:
text
senderID
initWithTextMessage:detectedData:
detectedData
features
setFeatures:
decodeObjectForKey:
addMessage:
conversationForSenderID:
getMergedPrompt:withParams:
getMergedPromptForMessage:conversationTurns:maxPromptLength:maxPromptWindowSeconds:promptJoiningString:
promptJoiningString
maxPromptWindowSeconds
_pas_mappedArrayWithIndexedTransform:
initWithText:senderID:timestamp:
referenceWithBundleId:domainId:itemIds:
spotlightReference
_len
_written
_dead
destroy
destroyAndUnlinkIfEmpty
write:
read
unlink
initWithCategory:name:eventDuration:location:
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:reservedSeat:event:
schemaFromTicketedEventReservation:
schemaFromGenericTicketedEventReservation:
schemaFromMovieTicketedEventReservation:
eventDuration
reservedSeat
_whitelistRegex
_inputTokenMapping
_outputConfig
_reminderOverrides
reminderOverrides
inputTokenMapping
outputConfig
hasWhitelistedVerbInContent:
whitelistedVerbInContent:
_whitelistedVerbRangeInContent:
whitelistedRangesInContent:
modelDescription
setReminderOverridesForTesting:
inputFromTaggedCharacterRanges:usingTokenMapping:forModel:
localizedCaseInsensitiveCompare:
deregisterUpdateHandlerWithToken:
T@"SGServiceContext",R,N,V_serviceContext
Ti,R,N,V_concurrencyBehavior
Ti,R,N,V_backpressureHazard
Ti,R,N,V_extractionMode
_concurrencyBehavior
_backpressureHazard
_extractionMode
_serviceContext
initWithServiceContext:concurrencyBehavior:backpressureHazard:
initWithServiceContext:concurrencyBehavior:backpressureHazard:extractionMode:
concurrencyBehavior
backpressureHazard
extractionMode
T@"NSSet",R,N
featureValueForName:
T@"MLMultiArray",&,N,V_L
T@"MLMultiArray",&,N,V_D
T@"MLMultiArray",&,N,V_I
T@"MLMultiArray",&,N,V_N
T@"MLMultiArray",&,N,V_W
T@"MLMultiArray",&,N,V_bi_lstm_0_h_in
T@"MLMultiArray",&,N,V_bi_lstm_0_c_in
T@"MLMultiArray",&,N,V_bi_lstm_0_h_in_rev
T@"MLMultiArray",&,N,V_bi_lstm_0_c_in_rev
_bi_lstm_0_h_in
_bi_lstm_0_c_in
_bi_lstm_0_h_in_rev
_bi_lstm_0_c_in_rev
initWithL:D:I:N:W:
initWithL:D:I:N:W:bi_lstm_0_h_in:bi_lstm_0_c_in:bi_lstm_0_h_in_rev:bi_lstm_0_c_in_rev:
setL:
setD:
setI:
setN:
setW:
bi_lstm_0_h_in
setBi_lstm_0_h_in:
bi_lstm_0_c_in
setBi_lstm_0_c_in:
bi_lstm_0_h_in_rev
setBi_lstm_0_h_in_rev:
bi_lstm_0_c_in_rev
setBi_lstm_0_c_in_rev:
featureValueWithMultiArray:
setWithArray:
_loggedExtractions
_loggedInteractions
_loggedInteractionsSummary
_storeCreationDate
_persistenceTimerSource
_interactionsWriteQueue
_deepCopy:
_deepMutableContainersCopy:
initWithFilename:
loggedExtractions
loggedInteractions
loggedInteractionsSummary
loggedExtractionsEventsCount
updateAndScheduleDiskWrite
baseInteractionDictionaryForInterface:actionType:
_interactionAttributesForTags:parentEntity:
_interactionAttributesForRealtimeEvent:parentEntity:
_interactionAttributesForEntity:parentEntity:
_createInteractionForEventWithStartTime:interactionKey:interactionAttributes:
createInteractionSummaryForEventKey:expirationDate:interactionKey:interactionAttributes:rtcCategory:
enrichReminderInteractionSummaryLog:
enrichAggregateSummaryLog:
cappedDeliveryEntityCountsCreatedBetweenStartDate:endDate:
cappedDeliveryEntityCountsCreatedBetweenStartDate:endDate:store:
bucketizedRemindersCreatedAfterDate:endDate:
launchCountMessageAfterDate:
enrichInteractionSummaryLog:
_enrichLogWithAppsUsage:
incrementAndUpgradeInteractionSummaryForEventKey:interactionKey:parentEntity:
_updateLocationTypeFromInteractionsSummaryForEventKey:locationType:
logAndIncrementEventCountForDictionary:
logNewInteractionSummaryWithDictionary:
logNewInteractionWithDictionary:
_eventExtractionDictionaryLogForTemplateName:extractionStatus:outputExceptions:outputInfos:jsMessageLogs:jsOutputLogs:timingProcessing:
logEventExtractionForTemplateName:extractionStatus:outputExceptions:outputInfos:jsMessageLogs:jsOutputLogs:timingProcessing:
interactionKeyForInterface:actionType:
interactionKeyForCategory:interface:actionType:
logEventInteractionForEntitySync:interface:actionType:
logEventInteractionForRealtimeEventSync:parentEntity:interface:actionType:
logEventInteractionForRealtimeEvent:parentEntity:interface:actionType:
logAggregateSummaryForInteraction:
whitelistedLogFromLog:
logsToSend
_createRTCReporting
resetLogs
resetExtractionLogs
resetInteractionsSummaryLogs
resetInteractionsLogs
removeInteractionsSummaryLogsFromLogs:
storeToDisk
storeAge
loggedExtractionsDescription
loggedInteractionsDescription
loggedInteractionsSummaryDescription
interactionsWriteQueue
_descriptionForExtractionStatus:
_descriptionForInterface:
_descriptionForActionType:
descriptionForSGRTCCategory:
descriptionForEntityType:
_descriptionForBundleId:
trialIdsForStructuredEvent
writeToFile:atomically:
_createEmptyFileAtPath:
startConfigurationWithCompletionHandler:
flushMessages
sendMessageWithCategory:type:payload:error:
initWithSessionInfo:userInfo:frameworksToCheck:
countForObject:
dateByAddingComponents:toDate:options:
setYear:
resolveName:
isDomain
isTemplateName
fromSync
extractedSocial
extractedFood
extractedMovie
extractedTicket
extractedCarRental
extractedHotel
extractedBoat
extractedTrain
extractedBus
extractedFlight
defaultLogger
descriptionForOriginType:
createFileAtPath:contents:attributes:
decodeTopLevelObjectOfClass:forKey:error:
setDecodingFailurePolicy:
initForReadingFromData:error:
dataWithContentsOfFile:
fileSize
attributesOfItemAtPath:error:
flightFromReservationSchema:
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:reservedSeat:flight:
schemaFromFlightReservation:
initWithName:iataCode:icaoCode:
airportFromAirportSchema:
initWithAirport:terminal:gate:
airlineFromFlightSchema:
flightNumberFromFlightSchema:
departureAirportGateFromFlightSchema:
arrivalAirporGateFromFlightSchema:
initWithAirline:flightNumber:boardingTime:flightDuration:departureAirportGate:arrivalAirportGate:
flight
schemaFromFlight:
iataCode
icaoCode
schemaFromAirline:
flightNumber
boardingTime
flightDuration
departureAirportGate
airport
schemaFromAirport:
terminal
gate
arrivalAirportGate
pluginIdentifier
_loadReimportRequestsWithWhereClause:
historicalDataRequestWithPersonHandle:startDate:endDate:
setRequestId:
setPluginIdentifier:
removeObjectsInRange:
_deleteOrphanedItems
storeReimportRequest:
storeReimportItems:requestId:
markReimportRequestAsExecutedWithRequestId:
markReimportItemsAsSeenByReceiverWithBundleId:items:
markReimportItemAsSeenByReceiverWithBundleId:uniqueId:
updateReimportItemUniqueIdForBundleId:oldValue:newValue:
loadUnqueriedReimportRequests
loadUnexecutedReimportRequests
loadAllReimportRequests
loadUnseenReimportItemsForRequest:
reimportRequestsContainBundleIdentifier:uniqueIdentifier:
deleteAllReimportRequestsOlderThanDate:
deleteCompletedReimportRequests
reimportRequestDBStats
_pas_enumerateChunksOfSize:usingBlock:
TQ,N,V_widgetViewId
TI,N,V_index
_widgetViewId
_index
setWidgetViewId:
setHasWidgetViewId:
hasWidgetViewId
setIndex:
setHasIndex:
hasIndex
widgetViewId
index
sg_LoggingIdentifier
_activities
_lastCriteria
_handlers
_currentTasks
_registered
registerActivitiesWithSystem
registerForActivity:handler:
activityForActivityId:
getState:
setState:state:
setCriteria:criteria:forActivity:
shouldDefer:
copyCriteria:
_taskForActivity:
shouldDefer
markFinished
taskWithDeadline:
_tasks
task
unregister:
tellCurrentTasksToDefer
requestDefer
initWithDeadline:manager:
_manager
_deadline
_deferRequested
nameForActivityId:
T{_NSRange=QQ},N,V_range
Ti,N,V_confidence
_confidence
_isASCII
_length
_contents
stringWithNewContents:
length
characterAtIndex:
getCharacters:range:
UTF8String
_fastCStringContents:
_fastCharacterContents
fastestEncoding
setRange:
confidence
setConfidence:
stringWithString:range:confidence:
stringWithString:
stringWithString:range:
getCharacters:
lookup:
_jsVM
_memoryMappedFiles
_memoryMappedFileNames
_jsContext
_assetPath
_localeIdentifier
_memoryPressureQueue
_memoryPressureSource
_dateFormatter
shouldDownloadFull:reply:
emailToOutput:reply:
textMessageToOutput:reply:
schemaOrgToOutput:reply:
emailToJsonLd:reply:
eventClassificationForEntity:reply:
resolveCandidatesForJSDict:reply:
diffSchemas:withExpectedSchemas:reply:
mergeSchemas:withExpectedSchemas:reply:
privacyAwareLogsForMLExtractions:reply:
parseHTML:reply:
_handleMemoryPressureStatus:
_stringFromMemoryPressureStatus:
getJSContext
freeJSContext
refreshAssetPath
setAssetPath:
processLoadRequestWithFileName:
loadTrieWithFileName:
initCurrentAsset
mappedArrayBufferForFileName:
md5Hash:
flightInformationWithAirlineCode:flightNumber:flightDate:
sfFlightsToDictionnary:
formattedDate:withTimezone:
sfAirportToDictionnary:
dictionaryFromTimezone:
sfFlightStatusToString:
loadJSFromASCIIFile:
holdXpcTransactionForShortDelay
shouldDownloadFull:
_eventClassificationForEntity:
_resolveCandidatesForJSDict:
_privacyAwareLogsForMLExtractions:
_diffSchemas:withExpectedSchemas:
_mergeSchemas:withExpectedSchemas:
reverseMapEntity:forCategory:withSchemaExpectation:
payloadToOutputWithEntryPoint:arguments:
payloadToOutputWithEntryPoint:arguments:reply:
outputExceptionsFromOutput:
_prepareEntity:
_prepareArguments:
historicalFlightInformationWithAirlineCode:flightNumber:flightDate:
postHistoricalFlightInformationWithAirlineCode:flightNumber:flightDate:andPayload:
dataTaskWithRequest:completionHandler:
setValue:forHTTPHeaderField:
setHTTPMethod:
setHTTPBody:
requestWithURL:
sessionWithConfiguration:
defaultSessionConfiguration
setPath:
setHost:
parsecFlightCachingAPIBaseURL
setScheme:
invalidateAndCancel
dataTaskWithURL:completionHandler:
JSONObjectWithData:options:error:
setTimeoutIntervalForResource:
setTimeoutIntervalForRequest:
setQueryItems:
queryItemWithName:value:
valueWithJSValueRef:inContext:
JSGlobalContextRef
simpleDedupe:
runWithExceptionBarrier:
exception
toDictionary
callWithArguments:
toString
isNull
toBool
initWithContentsOfURL:options:error:
secondsFromGMT
countryCode
district
timezone
divertedAirport
arrivalGate
arrivalTerminal
arrivalActualTime
arrivalAirport
arrivalPublishedTime
departureGate
departureTerminal
departureActualTime
departureAirport
departurePublishedTime
legs
operatorFlightNumber
operatorCarrierCode
flightID
carrierPhoneNumber
carrierName
carrierCode
taskWithRequest:completion:
flightResults
sharedSession
flightRequestForQuery:date:appBundleId:
mainBundle
sg_md5Hash
components:fromDate:toDate:options:
allowUnverifiedSourceForMarkup
timeZoneForSecondsFromGMT:
setTimeStyle:
setDateStyle:
setFormatterBehavior:
preferredLocalizationsFromArray:forPreferences:
setException:
valueWithNewErrorFromMessage:inContext:
currentContext
linguisticTagsInRange:scheme:options:orthography:tokenRanges:
defaultOrthographyForLanguage:
dominantLanguageTagFromText:
URLByAppendingPathComponent:
fileURLWithPath:
valueWithUndefinedInContext:
URLByStandardizingPath
fileURLWithPath:isDirectory:
initWithVirtualMachine:
fakeFlightInformationWithAirlineCode:flightNumber:flightDate:
contactStore
contactStoreWithDonatedContacts
storeWithOptions:
useMockContactStore:
_structuredEventInputMapping
_structuredEventOutputMapping
_foundInMailNotifications
updateFactors
baseModelName
structuredEventInputMapping
structuredEventOutputMapping
foundInMailNotifications
notificationsAllowListOverride
booleanValue
hasPath
fileValue
levelForFactor:withNamespaceName:
addUpdateHandlerForNamespaceName:usingBlock:
clientWithIdentifier:
T@"SGSqliteDatabase",R,N,V_db
initWithHandle:
readTransactionWithHandle:block:
writeTransactionWithHandle:block:
writeTransaction:
readTransaction:
Tq,R,N,V_writeTransactionDepth
_writeTransactionDepth
runWithLockAcquired:
writeTransactionDepth
_sgDb
initWithFilename:flags:error:sgDb:
handleError:sqliteError:forQuery:onError:
initWithFilename:flags:error:errorHandler:
T^{sqlite3=},R,N
_impl
_lastBusyWaitEnded
_sharedWriterLock
initWithFilename:withProtection:sharedLock:error:
runWithWriteLockAcquired:
closePermanently
simulateOnDiskDatabase
lastInsertRowId
handle
filename
isInMemory
runQuery:onRow:onError:
_prepQuery:onPrep:onError:
prepAndRunQuery:onPrep:onRow:onError:
prepAndRunSQL:onPrep:onRow:onError:
_prepAndRunQuery:columns:dictionary:onError:
prepAndRunNonDataQueries:onError:
updateTable:dictionary:whereClause:onError:
insertOrReplaceIntoTable:dictionary:onError:
selectColumns:fromTable:whereClause:onPrep:onError:
clearCaches
frailWriteTransaction:
frailReadTransaction:
createSnapshot:
userVersion
setUserVersion:
maxIdForTable:
hasTableNamed:
tablesWithColumnNamed:
hasColumnOnTable:named:
hasIndexNamed:
numberOfRowsInTable:
languageForFTSTable:
performIntegrityCheck
pageCount
freelistCount
_pagesToVacuum
vacuumMode
vacuum
optimize:
numberWithLong:
getIntegerForColumn:
bindParamToNull:
bindParam:toNSString:
bindParam:toDoubleAsNSNumber:
bindParam:toInt64AsNSNumber:
objCType
bindParam:toNSData:
stmt
prepQuery:onPrep:onError:
sqliteDatabaseWithFilename:error:
sqliteDatabaseInMemoryWithError:
isInMemoryPath:
inMemoryPath
randomlyNamedInMemoryPathWithBaseName:
truncateDatabaseAtPath:
bindParamToNull:name:
bindParam:name:int:
bindParam:name:int64:
bindParam:name:double:
bindParam:name:nsstring:
bindParam:name:nsdata:
preprocessHTML:subject:epoch:category:labelsWithMatchingStrings:
tagsWithModelOutputFromEnrichedTaggedCharacterRanges:
preprocessDomParserResult:subject:epoch:category:labelsWithMatchingStrings:
logFailedExtractionWithClassification:missingEntities:mlSummary:shadowExtraction:timingProcessingInMs:forMessage:parentEntity:
logMLInteractions:context:mlDefaultExtraction:
addSchemaAsEnrichment:inMessage:parentEntity:eventClassification:mlDefaultExtraction:
mergeFallbackSchema:parentEntity:
logMLExtractionForSchema:mergedSchemaAndDiff:parentEntity:timingProcessingInMs:eventClassification:mailMessage:shadowExtraction:mlDefaultExtraction:
schemaOrgAndMissingEntitiesForPreprocessed:eventClassification:fromSuggestTool:addressThreshold:
preprocessWithoutXPCForHTML:subject:epoch:category:labelsWithMatchingStrings:
labelsWithMatchingStringsForMailMessage:
detectStructuredEventsML
schemaOrgAndMissingEntitiesForPreprocessed:eventClassification:fromSuggestTool:
nilEntities:
tupleWithEntity:label:
tupleWithError:label:
annotationMatchingStringsForSubject:
annotateContent:withLabel:forMatchingString:
plainTextStringsByLabelInTaggedCharacterRanges:inPlainText:
schemaStringForDateComponents:
schemaStringForReservationStatus:
schemaStringForEventStatus:
schemaPostalAddressForPostalAddressExtraction:addressThreshold:
tokenCountForPostalAddressComponents:
tokenCount:
addressDictionaryForAddressComponents:
eventEnrichmentFromEntity:
jsMessageLogsDictionaryForMailMessage:
jsMessageLogsDictionaryForPrivacyAwareLogs:
outputLogsForClassification:
isSchemaOrg
templateException
eventMetadata:
toJsonString
initWithType:categoryDescription:originBundleId:confidence:schemaOrg:participants:eventActivities:
domain:
extractedFromTemplateWithShortName:
extractedFromTemplateWithName:
T@"NSDictionary",R,N,V_htmlIds
T@"NSArray",R,N,V_items
_htmlIds
_items
jsonLdForItem:
asJsonLd
setHtmlIdItemScope:forHtmlId:
addItem:
htmlIds
items
TI,N,V_widgetSize
T@"SGMIMetricsWidgetItem",&,N,V_widgetItems
TB,N,V_isSmartSortOn
_widgetItems
_widgetSize
_isSmartSortOn
setWidgetSize:
setHasWidgetSize:
hasWidgetSize
hasWidgetItems
setIsSmartSortOn:
setHasIsSmartSortOn:
hasIsSmartSortOn
widgetSize
widgetItems
setWidgetItems:
isSmartSortOn
_uuid
isEqualToSchemaOrgKey:
storageLocationWithPrimaryKey:
commitStorageLocation:
commitStorageLocation:withEventId:
pruneNLEventEntitiesOlderThan:
childrenFromParentKey:
messageWithEmailKey:
deleteMessagesByDuplicateKey:
pruneEntitiesOlderThan:suspensionHandler:batchSize:
_recordPseudoContactsWithDeletedDetailsInTable:deletedChildrenTable:
_deleteRemindersByRecordIds:
_deleteContactDetailsByRecordIds:
_deleteEventsByRecordIds:
_deleteChildEntitiesByRecordIdsInTable:
deleteEntitiesByDuplicateKey:preserveEventConfirmationHistory:emitChangeNotifications:
_deleteEntitiesByDuplicateKeyNoRecurse:
_derefChildrenOf:
_deleteMessageMetadataByDuplicateKeyNoRecurse:
removeSnippetsForEntities:
_removeSnippetsForEmails:
bindParam:toInt64:
deleteItemsWithEntityTag:preserveEventConfirmationHistory:
indexed
pruneEntitiesOlderThan:suspensionHandler:
pruneEntitiesOlderThanOneYearWithSuspensionHandler:
pruneMailIntelligenceOlderThanOneYearWithSuspensionHandler:
pruneDuplicateEventExtractions:
pruneNLEventEntitiesOlderThanTwoWeeks
pruneReminders
deleteMessages:
deleteInteractionEntitiesExceedingLimit:withSuspensionHandler:
deleteItemsWithEntityTag:
deleteInteractionsWithBundleId:
deleteInteractionsWithBundleId:identifiers:
deleteInteractionsWithBundleId:groupIdentifiers:
deleteEntitiesByDuplicateKey:emitChangeNotifications:
deleteMailIntelligenceForMessageIds:
readDataOfLength:
_dirPath
_backingQueue
_writerHighPriority
_writerLowPriority
_reader
_idCounter
_countHighPriority
_maxQueueItems
_pendingWrites
_maxPendingWrites
_lockStateChangeToken
countHighPriorityItems:lowPriorityItems:
maxQueueItems
setMaxQueueItems:
maxPendingWrites
setMaxPendingWrites:
performMaintenanceTasks
markAsFailedWithId:
_unlinkFileWithIdLocked:
_openFilesForProcessingWhileLocked
_flushFilesWhileUnlocked
addItemWithSourceKey:messageId:highPriority:customPriorityCriteria:item:callback:
addItemWithSourceKey:messageId:highPriority:customPriorityCriteria:receivedOnPower:receivedTime:storageReason:item:callback:
_read:fileId:callback:
pop:
popHighPriority:
popByCustomPriorityCriteria:callback:
popByItemId:callback:
popBySourceKey:messageId:callback:
_processPoppedItemResult:callback:
deleteWithItemId:fileId:
_trimPermafailDirectory
writePermafail:
permafailDirectory
initWithHarvestQueue:itemId:fileId:item:fails:customPriorityCriteria:receivedOnPower:receivedTime:storageReason:
_fileId
initWithItemId:item:fails:customPriorityCriteria:receivedOnPower:receivedTime:storageReason:
Ti,N,V_storageReason
Tq,R,N,V_itemId
T@"CSSearchableItem",R,V_item
TQ,R,N,V_fails
TC,R,N,V_customPriorityCriteria
TB,R,N,V_receivedOnPower
Td,R,N,V_receivedTime
_itemId
_item
_fails
_customPriorityCriteria
_receivedOnPower
_storageReason
_receivedTime
itemId
item
customPriorityCriteria
receivedOnPower
receivedTime
storageReason
setStorageReason:
decode
read:callback:
initWithDirectory:fileId:tryLater:
Ti,R,N,V_fileId
fileId
openForReadingIfPossible:
defaultRegistry:
_fdForFileId
_openForReadingIfPossibleNoCacheLocked:
openForWritingIfPossible:
prepareToOpenForReading:
_flushFileId:
flush
isUnlocked
bytesWritten
write:callback:
encodeObject:
initWithDirectory:fileId:
_offset
needsWorkaroundFor69111971
unregisterForLockStateChangeNotifications:
registerForLockStateChangeNotifications:
_permafailDirectory
setPermafailDirectory:
addItemWithSourceKey:messageId:highPriority:item:callback:
popInMemory:
countInMemory
countStructuredEventCandidates
defaultQueue
swapInEphemeralDefaultQueueForTesting
swapInEphemeralDefaultQueueForTesting:
swapOutEphemeralDefaultQueueForTesting
pathForDefaultQueue
queueWithOnDiskStorage:
queueWithLegacyStorage:highPriority:
queueCachingInMemoryBefore:limit:ttl:
queueCachingInMemoryBefore:
initWithLimit:ttl:flushingToQueue:
T@"SGDHarvestQueueOnDisk",R,N,V_other
_limit
_ttl
_itemIdCounter
_other
_popCallback:where:or:
deleteAllItemsDangerously
_sortLocked
_indexOfItemWithIdLocked:
_deleteWithItemId:completion:
_flushWithIndexLockedAsync:
_flushWithItemIdLockedAsync:
other
inProgress
beingDeleted
setInProgress:
initWithItemId:item:fails:sourceKey:messageId:highPriority:customPriorityCriteria:parentQueue:
T@"NSString",R,N,V_sourceKey
T@"NSString",R,N,V_messageId
TB,V_inProgress
TB,V_beingDeleted
_parentQueue
_inProgress
_beingDeleted
setBeingDeleted:
initWithDirectory:highPriority:
_workQueue
addItemWithSourceKey:messageId:highPriority:item:customPriorityCriteria:callback:
initWithWorkQueueItem:item:highPriority:customPriorityCritera:
_workQueueItem
initWithOnDiskQueue:legacyHighPriority:legacyLowPriority:inMemoryCache:
T@"SGDHarvestQueueOnDisk",R,N,V_onDisk
T@"SGDHarvestQueueLegacy",R,N,V_legacyHighPriority
T@"SGDHarvestQueueLegacy",R,N,V_legacyLowPriority
T@"SGDHarvestQueueInMemory",R,N,V_inMemory
_backends
_onDisk
_legacyHighPriority
_legacyLowPriority
_inMemory
backends
onDisk
legacyHighPriority
legacyLowPriority
inMemory
T@"EAEmailAddressSet",&,N,V_vips
_vips
allVIPEmailAddresses
vips
setVips:
clearSGMISubModelsTables
getDoubleForColumn:
naiveBayesModelQueryResultForFeature:unigramTokens:bigramTokens:
deleteNaiveBayesModelForProbabilityFeatureName:
commitNaiveBayesModel:probabilityFeatureName:
areSGMISubModelsEmpty
submodelAgeVector
subModelsStats
purgeTokensWhichLastUpdateWasBefore:
getViolationsToTokenCountsPolicy:
applyCappingPolicy:byDiscardingTokensCounts:withMargin:
commitNaiveBayesModel:probabilityFeatureName:updateDate:
_bytecode
_endPtr
initWithBytecode:
existsInString:
T@"MLMultiArray",&,N,V_data
T@"NSSet",&,N,V_featureNames
data
setData:
setFeatureNames:
regularScore
salientScore
defaultModel
isOverriddenAsSalient:
isOverriddenAsSalient:config:
shouldProcess:
shouldProcess:config:
saliencyForFeatureVector:
saliencyThreshold
getSaliencyOutputOf:forArray:
multiArrayValue
namePayload:
isCommonNameWord:
isSalientName:
isFamilyName:
isSalientNameByChars:
attributesForNameWord:
isLowercaseStringCommonNameWord:
isProbablyShortCJKName:
isCommonVietnameseSurname:
isDifficultName:
isCapitalized:
stripHonorifics:
stripAndReturnHonorifics:
universalCleanName:
cleanName:
handleLastNameFirstOrder:
nameSimilarity:and:
unnormalizedNameSimilarity:and:
namesApproximatelyMatch:and:
namesApproximatelyMatch:and:threshold:
unnormalizedNamesApproximatelyMatch:and:
unnormalizedNamesApproximatelyMatch:and:threshold:
nameFromEmail:
sketchesForName:
surnameFromName:
bestName:
sgNameFromString:origin:recordId:extractionInfo:
possibleNameStringFromEmailAddress:
nameStringFromEmailAddress:
cjkSpacerCharacters
cjkSpacersToWhiteSpace:
shouldInvertOrderOfFirst:last:
initWithCharacters:length:
characterIsMember:
alphanumericCharacterSet
stringWithCharacters:length:
addCharactersInRange:
TB,R,N,V_scrolledToEnd
TB,R,N,V_userReplied
TI,R,N,V_numberOfMailsViewedBeforeSinceAvailable
Td,R,N,V_timeBeforeViewStartSinceAvailable
TI,R,N,V_messageViewCount
Td,R,N,V_messageViewMaxDwellTime
Td,R,N,V_messageViewTotalDwellTime
TI,R,N,V_numberOfUnreadMessageAtFirstViewTime
TI,R,N,V_numberOfMoreRecentUnreadMessageAtFirstViewTime
TB,R,N,V_markedAsRead
TB,R,N,V_markedAsUnread
TB,R,N,V_mailGotFlagged
TB,R,N,V_replyDraftStarted
TB,R,N,V_forwardDraftStarted
TB,R,N,V_markedAsJunk
TB,R,N,V_linkClicked
Td,R,N,V_firstAppLaunchFollowingFetch
Td,R,N,V_messageFetchTime
_scrolledToEnd
_userReplied
_markedAsRead
_markedAsUnread
_mailGotFlagged
_replyDraftStarted
_forwardDraftStarted
_markedAsJunk
_linkClicked
_numberOfMailsViewedBeforeSinceAvailable
_messageViewCount
_numberOfUnreadMessageAtFirstViewTime
_numberOfMoreRecentUnreadMessageAtFirstViewTime
_timeBeforeViewStartSinceAvailable
_messageViewMaxDwellTime
_messageViewTotalDwellTime
_firstAppLaunchFollowingFetch
_messageFetchTime
initWithScrolledToEnd:messageViewMaxDwellTime:messageViewTotalDwellTime:messageViewCount:timeBeforeViewStartSinceAvailable:numberOfMailsViewedBeforeSinceAvailable:userReplied:replyDraftStarted:forwardDraftStarted:numberOfUnreadMessageAtFirstViewTime:numberOfMoreRecentUnreadMessageAtFirstViewTime:markedAsRead:markedAsUnread:markedAsJunk:mailGotFlagged:linkClicked:
updateWithAppLaunchAtTime:
updateWithViewStartAtTime:unreadMessageCount:
updateWithViewEndWithPayload:
updateWithMessageFetchedEventAtTime:
updateWithFlagChangedEvent
updateWithReadChangedEventWithPayload:
updateWithMessageMovedEventWithPayload:
updateWithEvent:eventTimestamp:
messageAvailableTime
incrementNumberOfMailsViewedBeforeSinceAvailable
incrementNumberOfMoreRecentUnreadMessageAtFirstViewTime
scrolledToEnd
userReplied
numberOfMailsViewedBeforeSinceAvailable
timeBeforeViewStartSinceAvailable
messageViewCount
messageViewMaxDwellTime
messageViewTotalDwellTime
numberOfUnreadMessageAtFirstViewTime
numberOfMoreRecentUnreadMessageAtFirstViewTime
markedAsRead
markedAsUnread
mailGotFlagged
replyDraftStarted
forwardDraftStarted
markedAsJunk
linkClicked
firstAppLaunchFollowingFetch
messageFetchTime
eventName
updateSummaryDict:fetchedUnreadMessages:event:timestamp:
fromSchemas:
toSchemas
intentResponse
canConvertToSchemaOrg
stored
entityFromSqlResult:withSnippets:
selectEntityQuery:
entityFromSqlResult:
allContactsWithEntityType:
columnQueryPrefixSelect
dictionaryWithCapacity:
_scoreContactDetail:
allPseudoContacts
entityCount
dbStats
analyzeDatabase
clearAllTables
clearDatabases
selectAuthoritativeDetailsForContactWithId:
sg_initWithSerializedForm:
floatingRangeWithUTCStart:end:
rangeWithStart:startTimeZone:end:endTimeZone:
initWithRentalCompanyName:type:make:model:rentalCarDescription:
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:rentalCar:rentalDuration:pickupLocation:dropOffLocation:
schemaFromRentalCarReservation:
rentalCar
make
rentalCompanyName
rentalDuration
dropOffLocation
pickupLocation
performDatabaseCheck
performIntegrityCheckOnly
databasecheck_BrokenEntityIDReferences
databasecheck_contactMergeGroupConsistency
databasecheck_IntegrityCheck
_reportDbStatsBackground
reportDbStats
registerCachePrecomputationWithCTS
launchCountForApp:afterDate:limit:
bucketizeIntegerForAggregateSummary:
bucketizeInteger:withBucketSize:limit:
locationTypeForHandle:latitude:longitude:airportCode:address:label:
round:toSignificantFigures:
numberOfDaysBetweenDate:andDate:
aggregateSummaryBucketizedLaunchCountForApp:afterDate:
launchCountForApp:afterDate:lowerBucket:bucketSize:bucketLimit:
locationTypeForEntity:
locationTypeForRealtimeEvent:
dateByAppendingDaysToCurrentDate:
webView:decidePolicyForNavigationAction:decisionHandler:
webView:decidePolicyForNavigationAction:preferences:decisionHandler:
webView:decidePolicyForNavigationResponse:decisionHandler:
webView:didStartProvisionalNavigation:
webView:didReceiveServerRedirectForProvisionalNavigation:
webView:didFailProvisionalNavigation:withError:
webView:didCommitNavigation:
webView:didFinishNavigation:
webView:didFailNavigation:withError:
webView:didReceiveAuthenticationChallenge:completionHandler:
webViewWebContentProcessDidTerminate:
webView:authenticationChallenge:shouldAllowDeprecatedTLS:
webView:navigationAction:didBecomeDownload:
webView:navigationResponse:didBecomeDownload:
_loadedSem
_webView
_html
parseHTML:
webView
_parseDocument:
runJavascriptOnWebView:withCallback:
evaluateJavaScript:completionHandler:
stringWithContentsOfFile:encoding:error:
loadHTMLString:baseURL:
setNavigationDelegate:
initWithFrame:configuration:
setDefaultWebpagePreferences:
setPreferredContentMode:
setAllowsContentJavaScript:
setAllowsPictureInPictureMediaPlayback:
setAllowsInlineMediaPlayback:
_setAllowsJavaScriptMarkup:
_setLegacyEncryptedMediaAPIEnabled:
_setAllowUniversalAccessFromFileURLs:
setAllowsAirPlayForMediaPlayback:
_setShouldEnableTextAutosizingBoost:
_setTextAutosizingEnabled:
_setRemotePlaybackEnabled:
_setLoadsImagesAutomatically:
_setAVFoundationEnabled:
_setDOMPasteAllowed:
_setMediaDevicesEnabled:
_setPeerConnectionEnabled:
_setScreenCaptureEnabled:
_setStorageBlockingPolicy:
_setJavaScriptCanAccessClipboard:
_setWebAudioEnabled:
setJavaScriptCanOpenWindowsAutomatically:
preferences
setWebsiteDataStore:
nonPersistentDataStore
runMode:beforeDate:
distantFuture
currentRunLoop
isMainThread
Ti,R,N,V_locationType
T@"NSString",R,N,V_label
T@"NSString",R,N,V_address
T@"NSString",R,N,V_airportCode
Td,R,N,V_latitude
Td,R,N,V_longitude
Td,R,N,V_accuracy
Td,R,N,V_quality
T@"NSData",R,N,V_handle
_locationType
_label
_address
_airportCode
_latitude
_longitude
_accuracy
geocodeLabel
geocodeAddress
geocodeAirportCode
geocodeIsStart
geocodeIsEnd
geocodeLatitude
geocodeLongitude
geocodeAccuracy
geocodeHandle
geocodedLocationWithLabel:address:latitude:longitude:accuracy:handle:
geocodedLocationWithLatitude:longitude:accuracy:handle:
initWithType:label:address:airportCode:accuracy:quality:
initWithType:label:airportCode:latitude:longitude:accuracy:quality:
initWithType:label:address:airportCode:latitude:longitude:accuracy:quality:handle:
isEqualToStorageLocation:
compare:
convertToLocationWithId:origin:
locationType
label
address
airportCode
latitude
longitude
accuracy
initWithId:origin:type:label:address:airportCode:latitude:longitude:accuracy:quality:handle:
decodeDoubleForKey:
encodeDouble:forKey:
addDetailsFromOriginatingContactEntity:
originForDuplicateKey:sourceKey:store:
_pas_proxyStringByConcatenatingStrings:
originForDuplicateKey:entity:parent:store:
originTypeForEntityType:
addDetailsFromOriginatingMessageEntity:
addRecipientDetailsFromOriginatingMessageEntity:entity:store:
addSnippetIfNotExistsFromContentOfEntity:
addDetailsFromOriginatingCalendarEntity:
addDetailsFromOriginatingInteractionEntity:
addDetailsFromOriginatingGenericEntity:
addDetailsFromParticipantsOfEntity:
showOperatingSystemVersionInSnippets
recordIdWithInternalEntityId:
internalEntityId
recordIdForContactWithRowId:
recordIdForContactDetailWithRowId:
recordIdForEventWithRowId:
recordIdWithTableId:rowId:
tableId
rowId
recordIdForEmailWithRowId:
T@?,C,N,V_changeCallback
T@"NSData",&,N,V_salt
T@"CKRecordID",&,N,V_saltAtomicReferenceId
T@"NSNumber",&,N,V_saltUsesManatee
T@"CKServerChangeToken",&,N,V_syncToken
T@"NSNumber",&,N,V_hasSubscription
T@"NSNumber",&,N,V_eventsWereRemovedFromEventKit
T@"NSString",&,N,V_primaryICloudCalendarAccount
T@"NSNumber",&,N,V_hasDeferredSync
T@"NSNumber",&,N,V_hasDeferredProcessStateChanges
_changeCallback
_salt
_saltAtomicReferenceId
_saltUsesManatee
_syncToken
_hasSubscription
_eventsWereRemovedFromEventKit
_primaryICloudCalendarAccount
_hasDeferredSync
_hasDeferredProcessStateChanges
_getterForProperty:
_setterForProperty:
setupKvo
stopKvo
observeValueForKeyPath:ofObject:change:context:
changeCallback
setChangeCallback:
salt
setSalt:
saltAtomicReferenceId
setSaltAtomicReferenceId:
saltUsesManatee
setSaltUsesManatee:
syncToken
setSyncToken:
hasSubscription
setHasSubscription:
eventsWereRemovedFromEventKit
setEventsWereRemovedFromEventKit:
setPrimaryICloudCalendarAccount:
hasDeferredSync
setHasDeferredSync:
hasDeferredProcessStateChanges
setHasDeferredProcessStateChanges:
properties
removeObserver:forKeyPath:context:
addObserver:forKeyPath:options:context:
_kvoHandler
_database
_callback
_deleteAllSyncedItemsCallback
_readyForNewEntities
_apsConnection
_opQueue
_operationsToAddToOpQueue
_container
_accountInfoFuture
_accountInfoInFlight
_persistedState
_suspendCount
_noZone
_disabledBecauseOutOfDateSoftware
_inProgressProcureSaltOperation
_inProgressCreateZoneOperation
_inProgressDeleteZoneOperation
_inProgressFetchNewEntitiesOperation
_requestedFetchNewEntitiesWhileRequestAlreadyInFlight
_createZoneError
_deleteZoneError
_procureSaltError
_processingStateChanges
_pendingProcessStateChanges
_greenTeaLogger
_privacySaltFuture
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
connection:didReceivePublicToken:
_coupleOperationTrainWithStart:end:
_addDependency:toTrain:
clearErrors
disable
failSalt
suspend
suspendAndResumeAfter:
resume
getUnderlyingError:
pauseIfNeededAndReturnRetryEligibilityForError:
addDeleteZoneOperation
addDeleteZoneAttemptOperationWithRetries:
addCreateZoneOperation
addCreateZoneAttemptOperationWithRetries:
addManateeSanityCheckOperation
addProcureSaltOperation
ckErrorForRecordId:inError:
ckErrorForRecordZoneId:inError:
_ckErrorForId:inError:
addProcureSaltAttemptOperationWithRetries:
addFetchNewEntitiesOperation
addFetchNewEntitiesAttemptOperationWithRetries:
shouldRecreateZoneForRecordError:operationError:
addDeleteAndRecreateZoneOperation
addWriteOperationForRecordGetter:deleteGetter:withRetries:
addWriteOperationForRecordGetter:deleteGetter:withRetries:isFirstTry:
addOperation:
addOperation
processStateChanges
accountChanged:
accountInfo
shouldRemoveEventsFromEventKit
createSubscriptionWithRetries:
setDatabase:
addEnrichment:withParentEntity:
deleteGroupId:
setReadyForNewEntities:
setNewEntitiesCallback:
setDeleteAllSyncedItemsCallback:
invokeNewEntitiesCallbackWithEntity:
recordZoneId
deleteStorageEvent:
deleteZoneWithCompletion:
privacySalt
notificationType
notificationFromRemoteNotificationDictionary:
wait:
supportsDeviceToDeviceEncryption
accountStatus
fail:
succeed:
createWithImmediateResult:
useManateeSaltForHistory
_callbackQueue
initWithZoneName:ownerName:
setTargetQueue:useAfterCompletion:
initWithRecordName:zoneID:
base64EncodedStringWithOptions:
initWithRecordID:action:
reactAfterChangesToKeyPath:ofObject:usingBlock:
_setEnabledTopics:
setDelegate:
initWithEnvironmentName:namedDelegatePort:queue:
apsEnvironmentStringForContainer:
container
saveSubscription:completionHandler:
setShouldSendContentAvailable:
setRecordType:
createAfter:onCreate:
createWithImmediateResult:error:
accountInfoWithCompletionHandler:
completeWithResult:error:
completer
waitForFuturesToComplete:withCallback:
setCloudKitPersistedState:
cloudKitPersistedState
setUnderlyingQueue:
operationCount
setCallbackQueue:
setModifyRecordsCompletionBlock:
setSavePolicy:
setAtomic:
setRecordIDsToDelete:
setRecordsToSave:
recordID
setRecordZoneFetchCompletionBlock:
setRecordChangedBlock:
recordType
setConfiguration:
setContainer:
setFetchAllChanges:
initWithRecordZoneIDs:configurationsByRecordZoneID:
setPreviousServerChangeToken:
recordName
encryptedValuesByKey
initWithRecordType:recordID:
setFetchRecordZonesCompletionBlock:
initWithRecordZoneIDs:
setModifyRecordZonesCompletionBlock:
setRecordZonesToSave:
initWithZoneID:
setRecordZoneIDsToDelete:
setSuspended:
cancelAllOperations
_sharedInstanceConfigurationQueue
setSharedInstanceConfigurationBlock:
futureForObject:withKey:onCreate:
serverPreferredPushEnvironmentWithCompletionHandler:
compare:options:
_cksGetter
_cks
initWithCloudKitSyncGetter:
cloudKitSync
_liveObserversMap
addObserver:forObjectLifetime:
fire
startListening
stopListening
weakToStrongObjectsMapTable
_notificationCenterToken
_notificationQueue
unregisterChangeHistoryClientIdentifier:error:
registerChangeHistoryClientIdentifier:error:
_getListenerByClassMap
_getListener:
_addObserver:forObjectLifetime:listenerClass:
addAddressBookObserver:forObjectLifetime:
addCalendarObserver:forObjectLifetime:
simulateAddressBookChange
simulateCalendarChange
TC,R,N,V_locationType
TC,R,N,V_trigger
T@"NSString",R,N,V_name
_trigger
initWithLocationType:trigger:name:
isEqualToReminderDueLocation:
trigger
describeReminderDueLocationTrigger:
describeReminderDueLocationType:
mergeDueLocations:
T@"NSString",R,V_path
_backingData
_sketch
recordMessageInChat:
estimateMessagesInChat:
setSharedInstance:
partySizeFromReservationSchema:
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:reservationDuration:partySize:restaurantLocation:
schemaFromRestaurantReservation:
reservationDuration
partySize
restaurantLocation
Tq,R,N,V_featureName
Tq,R,N,V_featureType
Tq,R,N,V_featureSource
T@"NSNumber",R,N,V_numberValue
T@"NSArray",R,N,V_numberArrayValue
T@"NSString",R,N,V_stringValue
T@"NSArray",R,N,V_stringArrayValue
_featureType
_featureSource
_numberValue
_numberArrayValue
_stringValue
_stringArrayValue
initWithFeatureName:
initWithFeatureName:numberValue:
initWithFeatureName:numberArrayValue:
initWithFeatureName:stringValue:
initWithFeatureName:stringArrayValue:
featureType
featureSource
numberValue
numberArrayValue
stringValue
stringArrayValue
prettyName:
featureSourceForName:
featureTypeForName:
allFeatureNames
allFeaturePrettyNames
prettyNamesReverseMapping
unsignedLongLongValue
decompress:
schemaOrg:
interactionTeamId:
reservationItemReferencesWithData:
reservationContainerReferenceWithData:
intentResponseUserActivityString:
fromCloudKitRecord:
isFloating
isInteractionId
isInteractionGroupId
isInteractionBundleId
initWithBase64EncodedString:options:
initWithRecordType:
compress:lowMemory:
toCloudKitRecordWithId:parentEntityType:
extraKey:
categoryTagWithCategoryType:
labelForProbabilities:
sg_isSignificantWithStore:
setStreet:
setCity:
setPostalCode:
setCountry:
T@"NSSet",R,N,V_itemType
T@"NSArray",R,N,V_itemRef
_itemRef
_itemType
resolveItemRefsWithDocument:
initWithItemType:itemRef:
itemType
itemRef
TI,R,N,V_type
T@"NSString",R,N,V_extraction
T@"NSString",R,N,V_context
T{_NSRange=QQ},R,N,V_contextRangeOfInterest
TB,R,N,V_hasPhoneLabel
T{_NSRange=QQ},R,N,V_match
T@"SGExtractionInfo",R,N,V_extractionInfo
TB,R,N,V_isUnlikelyPhone
_hasPhoneLabel
_type
_extraction
_contextRangeOfInterest
_match
initWithType:extraction:context:contextRangeOfInterest:label:hasPhoneLabel:match:extractionInfo:isUnlikelyPhone:
type
extraction
contextRangeOfInterest
hasPhoneLabel
match
detectionWithType:text:matchRange:matchString:label:hasPhoneLabel:extractionInfo:isUnlikelyPhone:
enumerateSubstringsInRange:options:usingBlock:
_optimizedBuffer
_unoptimizedIdentifiers
addCNContactIdentifier:
_optimizeAndAddCNContactIdentifier:
proxyArray
_pas_proxyArrayByAppendingArray:
_pas_proxyArrayUsingObjectAtIndexBlock:andCountBlock:
getCString:maxLength:encoding:
initWithLabel:value:
isEqualToLabeledValue:
performRecentsSearch:queue:completion:
normalizeHandleForRecipientFilterAndRemoveFromDetailsCache:
contactIsSignificantOrSignificanceIsDisabled:
realtimeContactIsSignificantOrSignificanceIsDisabled:
anyEmailAddressIsSignificant:
anyHandleIsSignificant:
setCRLookupForTesting:
registerSentMailMessage:
registerSentTextMessage:
setCachedVIPEmailAddresses:
contactIsSignificant:usingCoreRecents:
mayHaveSentMessageToEmail:
mayHaveSentMessageToHandle:
recentsContainSomeOfEmails:phoneNumbers:instantMessageAddresses:
_cachedVIPEmailAddresses
contactIsSignificantOrSignificanceIsDisabled:usingCoreRecents:
onlyShowSignificantPseudoContacts
contactIsSignificant:
realtimeContactIsSignificant:
setDomains:
predicateWithFormat:
orPredicateWithSubpredicates:
T@"MLMultiArray",&,N,V_location
T@"MLMultiArray",&,N,V_time
T@"MLMultiArray",&,N,V_title
T@"MLMultiArray",&,N,V_core
T@"MLMultiArray",&,N,V_bi_lstm_0_h_out
T@"MLMultiArray",&,N,V_bi_lstm_0_c_out
T@"MLMultiArray",&,N,V_bi_lstm_0_h_out_rev
T@"MLMultiArray",&,N,V_bi_lstm_0_c_out_rev
_location
_time
_core
_bi_lstm_0_h_out
_bi_lstm_0_c_out
_bi_lstm_0_h_out_rev
_bi_lstm_0_c_out_rev
initWithLocation:time:title:core:bi_lstm_0_h_out:bi_lstm_0_c_out:bi_lstm_0_h_out_rev:bi_lstm_0_c_out_rev:
location
setLocation:
time
setTime:
core
setCore:
bi_lstm_0_h_out
setBi_lstm_0_h_out:
bi_lstm_0_c_out
setBi_lstm_0_c_out:
bi_lstm_0_h_out_rev
setBi_lstm_0_h_out_rev:
bi_lstm_0_c_out_rev
setBi_lstm_0_c_out_rev:
T@"NSString",&,N,V_targetString
TQ,N,V_maxDistance
_targetString
_maxDistance
initWithTarget:maxDistance:
isEqualToTokenDistanceMappingTransformer:
targetString
setTargetString:
maxDistance
setMaxDistance:
transformArray:withTargetIndex:maximumDistance:
withTarget:maxDistance:
debugSetContext:
debugStoreContext
debugAppendText:
seekToEndOfFile
fileHandleForWritingAtPath:
threadDictionary
currentThread
TQ,R,N,V_operation
T@"SGStorageEvent",R,N,V_event
T@"NSArray",R,N,V_eventBatch
T@"SGStorageContact",R,N,V_contact
T@"SGStorageReminder",R,N,V_reminder
_operation
_event
_eventBatch
_contact
_reminder
initWithOperation:event:
initWithOperation:eventBatch:
initWithOperation:contact:
initWithOperation:reminder:
initWithOperation:
isEqualToJournalEntry:
operation
event
eventBatch
contact
reminder
T@"NSString",R,N,V_lang
T@"NSString",R,N,V_rolloutId
T@"NSString",R,N,V_factorPackId
T@"NSString",R,N,V_experimentId
T@"NSString",R,N,V_treatmentId
T@"NSMutableArray",R,N,V_engagementDeltas
_lang
_rolloutId
_factorPackId
_experimentId
_treatmentId
_engagementDeltas
initWithLang:rolloutId:factorPackId:experimentId:treatmentId:
initWithLang:rolloutId:factorPackId:experimentId:treatmentId:engagementDeltas:
isEqualToQuickResponsesEngagementMetrics:
lang
rolloutId
factorPackId
experimentId
treatmentId
engagementDeltas
_idsService
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
initAsDelegate
initWithActivityManager:
initWithActivityManager:idsService:queue:store:
collectDeviceQREngagement:
syncQREngagementToPairedDeviceWithActivity:
deltaForResponsesOnRow:completion:
recordEngagementMetrics:selectedRecorder:ignoredRecorder:
onDeltaRowWithXPCActivityManager:activity:engagementMetrics:
recorderForKey:
getActiveTrialInformation
addDelegate:queue:
initWithService:
getPrefixFromRolloutID:factorPackId:experimentId:treatmentId:
recordResponse:numTimesToLog:recorder:prefix:
onCompletionWithXPCActivityManager:activity:engagementMetrics:idsService:destinationDevice:
sendEngagementToDPUsingData:
sendData:toDestinations:priority:options:identifier:error:
selected
displayed
experimentIdentifiers
rolloutIdentifiers
getResponseSuggestionsExperimentConfig:
zkwLangAndNamespaces
record:
addOperationWithBlock:
_suggestionsFromMessage:options:dissectIfNecessary:completionDelivery:completionHandler:
_canBannerUseStoredDissection:options:
_storeAndGeocodeEntity:spotlightBundleIdentifier:spotlightUniqueIdentifier:spotlightDomainIdentifier:store:afterCallbackQueue:finalize:
initWithReminder:notes:
deliveryForEntity:store:
onlyShowSignificantNLEvents
naturalLanguageEventAttributes
mailItemIsSPAM:
recordBannerShownWithContacts:events:inApp:
filterRealtimeReminders:
encodedStringForFullName:
setValueIfNotPresent:forKey:fromRecordId:
mailItemIsInTrash:
_emailContentCacheSalt
_suggestionsFromSearchableItem:options:dissectIfNecessary:withCompletion:
suggestionsFromMessage:options:fullCompletionHandler:
realtimeSuggestionsForMailOrMessageWithHash:options:completion:completionDelivery:providedBy:searchableItem:dissectIfNecessary:isTextMessage:
suggestionsFromMessage:options:completionDelivery:completionHandler:fullCompletionHandler:
T@"NSDictionary",&,V_mappings
_mappings
withHelperMappingType:andLanguage:
initWithMappings:
initWithHelperMappingType:andLanguage:
isEqualToStringMappingTransformer:
mappings
setMappings:
withMappings:
initWithProvider:boatName:boatNumber:tripDuration:departureBoatTerminalLocation:arrivalBoatTerminalLocation:
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:reservedSeat:boatTrip:
schemaFromBoatReservation:
boatTrip
boatName
boatNumber
departureBoatTerminalLocation
arrivalBoatTerminalLocation
contactDetailPrimaryKeyForDuplicateKey:
loadAllContactDetailsFromTableForRecordId:
commitContactDetail:
contactDetailEntityIdForDuplicateKey:
loadAllContactDetailsFromTableForRecordId:type:
_makeEmptyBox
_handler
_box
_handlerLock
_boxLock
_outstanding
_cond
_transaction
initWithName:boxMaker:handler:qos:
typeCheckingSink:
updateBox:
updateBox:delay:
wait
T@"SGPostalAddressComponents",R,N,V_components
_components
initWithPlainText:components:
hasExtraction
components
T@"NSString",R,N,V_username
T@"NSString",R,N,V_userIdentifier
T@"NSString",R,N,V_bundleIdentifier
T@"NSString",R,N,V_service
T@"NSString",R,N,V_teamIdentifier
T@"NSArray",R,N,V_uniqueIdentifiers
T@"NSString",R,N,V_preferredUniqueIdentifier
_username
_userIdentifier
_bundleIdentifier
_service
_teamIdentifier
_uniqueIdentifiers
_preferredUniqueIdentifier
initWithUsername:userIdentifier:bundleIdentifier:displayName:service:teamIdentifier:
initWithSocialProfile:
initWithCNSocialProfile:
username
userIdentifier
bundleIdentifier
service
teamIdentifier
uniqueIdentifiers
preferredUniqueIdentifier
displayname
bundleIdentifiers
mappingsForType:andLanguage:
loadMappingsForType:andLanguage:
_writeReminderEntitiesToJournal:
_deleteOldInteractionContactDetails:currentIdentifiers:
_writeContactDetails:
_prunePseudoContactGeneratingEmails:
_emitChangeNotificationForEnrichment:
writeEntity:
_computePseudoContactContentHash:contactDetails:
bindNamedParam:toNSSet:
identity:
eventHash:
reminderHash:
_addIndexingTagsTo:
containsEntityExtraction:
initWithObjectsAndKeys:
_addTimeRange:toEntityWriteDictionary:
_addLocations:toEntityWriteDictionary:
_writeEventEntityToJournal:
_addIndexingTagsToParent:
sg_serialized
currentOsBuild
_writeMessageEntityToSnippetsDb:
_writeMessageEntityToDb:
_writeOneEntityToDb:
_writeEntityParentageFor:entityId:
_writeEnrichmentToSnippetsDb:
_writeFTSTermsForEnrichment:entityId:
_contentWriteEnrichmentToDb:
_writeEnrichmentToDb:
_journalEntryFromEntity:
_journalEntryFromReminderEntity:
_writeEventEntitiesToJournal:
sharedDefaults
_emitChangeNotifications:
bindNamedParam:toNSIndexSet:
setValueIfNotPresentWithDict:fromRecordId:
_loadIdentityBlobs
_labelIdentityBlobs:
_pas_mappedSetWithTransform:
_writeLabeledBlobs:deletedMasterEntityIds:
writeInteractionEventEntities:
writeEnrichment:
writeEntity:withSpotlightReferenceForBundleIdentifier:uniqueIdentifier:domainIdentifier:
_dumpTable:columns:limitTo:
entityWantsFullDownload:
writeEntityGeocodeResultToDb:
writeEmailVerificationResultForEmailWithKey:eventEntities:
markEntityAsDupeByRecordId:
_writeContactEntityToJournal:
writeIdentityBlobs:forceRewrite:
canStoreEventsForAccountType:
_hashAttachedPseudoContacts:
decodeEntities:
initWithProvider:trainName:trainNumber:tripDuration:departureStationLocation:departurePlatform:arrivalStationLocation:arrivalPlatform:
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:reservedSeat:trainTrip:
schemaFromTrainReservation:
trainTrip
trainName
trainNumber
departureStationLocation
arrivalStationLocation
T{?=SS},R,N,V_type
TQ,R,N,V_start
TQ,R,N,V_end
T{_NSRange=QQ},R,N
_start
_end
initWithType:start:end:
initWithType:range:
start
sliceWithType:start:end:
sliceWithType:range:
singleLineSignatureLeadingCharacterSet
punctuationCharacterSet
symbolCharacterSet
_ignoreDataDetectorsForTesting
initIgnoringDataDetectors
signatureRange:
findValedictionCommencedSignatureRanges:
findSignaturePrefixesInMessage:withSignaturePrefixes:
findValediction:
findRejectSig:
findSignaturePrefix:
hmmPlausibleSignatureRange:
hmmSignatureRange:
hmmSignatureRangeWithContent:detectedData:quotedRegions:authorName:
miniSignatureRange:
trailingSenderNameLineRange:
authorName:
authorFirstname:
rangeOfSenderName:inRange:restrictLength:forMessage:
rangeOfSenderNameComponents:withFullname:inSubstring:
_paragraphWithContent:range:exceedsLineLimit:orCharacterLimit:
shouldIgnoreSignature:signatureRange:isInhuman:
sortUsingSelector:
indexesInRange:options:passingTest:
lastIndex
firstIndex
T@"NSString",R,N,V_givenName
T@"NSString",R,N,V_familyName
T@"NSString",R,N,V_formattedName
T@"NSSet",R,N,V_emailAddresses
T@"NSSet",R,N,V_phoneNumbers
T@"NSSet",R,N,V_postalAddresses
T@"NSSet",R,N,V_socialProfileIdentifiers
_meContact
_givenName
_familyName
_formattedName
initWithContact:
isSameAsOrUnifiedWithContact:
givenName
familyName
formattedName
isUnifiedWithContactWithIdentifier:
keysToFetch
Tf,N,V_score
Td,N,V_timestampSinceReference
TB,N,V_isSalient
_timestampSinceReference
_isSalient
setScore:
setHasScore:
hasScore
setTimestampSinceReference:
setHasTimestampSinceReference:
hasTimestampSinceReference
setIsSalient:
setHasIsSalient:
hasIsSalient
timestampSinceReference
isSalient
setLostMessageOverflow:
dbHandleForTesting
snippetsDbHandleForTesting
historyForTesting
setParentMessagesLimitForTesting:
lastSeenTimestampForKey:
setMalformedEventWhenRangeForTesting
clearMigrationCompletedForPaths
_shouldSampleMessage
T@"NSString",R,N,V_domain
_serialized
_domain
initWithGloballyUniqueId:
isEqualToPseudoEventKey:
keyForEventKitQuery
isDropoff
alternativeKeysForEventKitQuery
domain
_popQueuedSerializedContactId
containsSuggestions
writeSerializedContactPlaceholder:
_processBatchOfSerializedContactJobs
serializedEntityIds
_trimSerializedContacts
setSerializedContactsLimit:
serializedContactsLimit
writeSerializedContactAndUpdateEntityIDSet:
deleteSerializedContactsForIdSet:
loadSerializedContactForId:
loadAllSerializedContacts
updateSerializedContacts:
writeSerializedContact:
deleteSerializedContactForId:
isFileURL
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
T@"SGSqlEntityStore",R,V_store
defaultStore
T@"SGMessage",&,N,V_message
T@"SGPipelineEntity",&,N,V_entity
T@"NSArray",&,N,V_plainTextDetectedData
T@"SGDuplicateKey",&,N,V_extractedReminderDuplicateKey
_plainTextDetectedData
_extractedReminderDuplicateKey
initWithMessage:entity:enrichedTaggedCharacterRanges:modelOutput:
initWithMessage:plainTextDetectedData:enrichedTaggedCharacterRanges:modelOutput:
isConfirmation
isRejection
isProposal
isTriggerOptional
detectedTitleForLanguage:
dueDateDataDetectorMatches
detectedDueDateComponents
dueLocation
hasTrigger
_labelTokenIndexesForOutputName:label:
setMessage:
setEntity:
plainTextDetectedData
setPlainTextDetectedData:
extractedReminderDuplicateKey
setExtractedReminderDuplicateKey:
excludedContent:
detectedTitleInModelOutput:enrichedTaggedCharacterRanges:textContent:language:
tokensMatchedInContent:content:
triggerOptionalTokens
localizedLowercaseString
isConfirmationOptionalForContent:
shouldAddTitlePrefixForContent:
titlePrependForActionVerbIndexRange:enrichedTaggedCharacterRanges:language:content:
frenchPrependForEnrichedTaggedCharacterRanges:actionVerbIndexRange:
validActionVerbIndexRange:enrichedTaggedCharacterRanges:
validObjectCoreIndexRange:enrichedTaggedCharacterRanges:
posTaggerNouns
validModelOutput:error:
enrichedTaggedCharacterRangesContainsProfanity:
confirmationOptionalTokens
excludeList
titlePrefixTokens
regexFromJoinedArray:wordBoundary:
searchTokensForReminderTitle:
localizedCapitalizedString
_tofuRegions:utf8:isAOSPMail:
_xWrote:utf8:
quotedRegionsFrom:isAOSPMail:foundToEndOfMessage:
_confirmationOptional
_triggerOptional
_actionVerbOptional
_messagesBannerLimit
_reminderEnrichments
_reminderInputMapping
_reminderOutputMapping
confirmationOptional
triggerOptional
actionVerbOptional
messagesBannerLimit
reminderEnrichments
reminderInputMapping
reminderOutputMapping
initWithDouble:
_nicks
initWithCNContact:
prefilterNameMatchTerms
weakNamePatterns
strongNamePatterns
emailTags
phoneTags
socialProfileTags
addressTags
interactionContactIdentifier
isMe
middleName
enumerateTokensInString:block:
enumerateTokensInString:withRange:block:
tokenize:
ftsPrefix:
ftsTokenize:
sg_initWithNamedEmailAddress:
_loadMessageByKey:
loadStorageContactByRecordId:error:
loadContactDetailsWithWhereClause:onPrep:type:dedupeAgainst:recordId:
loadAllContactDetailsWithWhereClause:onPrep:dedupeAgainst:
loadEntityByKey:
allEntitiesOfType:limitedTo:
loadEventByDuplicateKey:
loadDuplicateKeyByRecordId:
loadSourceKeyByRecordId:
allEntitiesOfType:limitedTo:onlyMLExtractions:
loadOriginByRecordId:
loadEntitiesByEntityKey:entityType:resolveDuplicates:
loadEntitiesBySourceKey:entityType:resolveDuplicates:
loadEventByRecordId:
loadContactForStorageContact:usingSerializedContactCache:
masterEntityIdForContactOrContactDetailRecord:
loadStorageContactByRecordId:
loadContactDetailsForRecordId:type:
loadEventByKeyForOldCodePathTesting:
loadAllContactDetailsForRecordId:
entityKeyCountsForEntityType:startDate:endDate:
allRemindersLimitedTo:
loadReminderByKey:
loadReminderByRecordId:
loadReminderByKeyOld:
loadReminderByRecordIdOld:
allDeliveriesWithLimit:
loadEventsWithInteractionIdentifiers:fromBundleIdentifier:
loadEntityByRecordId:
_healthStore
dateOfBirthComponentsWithError:
TQ,N,V_selfIdentificationMessageCount
_mlQR
_contactsHelper
_filterWithAddressBook
_unlikelyPhoneSamplingRate
_hmmTrustedLanguages
_ddTrustedLanguages
_coreNLPTrustedLanguages
_selfIdentificationMessageCount
initWithML:withMLQR:andHealthStore:
detectionFromSignatureDDMatch:message:detectedLabelRange:lastClaimedLabelRange:isUnlikelyPhone:
detectionFromBodyDDMatch:message:withSupervisionToFill:isUnlikelyPhone:
filterDangerousSigPhoneDetections:message:
filterDangerousSigAddressDetections:
_extractEmailishTokenFromMailHeader:
_makeAlnum:
_makeSimplifiedListIdEmail:
filterDangerousSigEmailDetections:message:
filterDangerousSigDetections:message:
processTextMessageConversation:threadLength:
logBirthdayExtractionMetricForPerson:forDate:isFromCongratulation:withModelVersion:didRegexTrigger:didResponseKitTrigger:
handleTextMessageBirthdayCongratulation:entity:withConversationHistory:
getResponsesForBirthdayExtractionFromMessage:withLanguage:
handleTextMessageSelfIdentification:entity:withConversationHistory:
_addAuthorContactForMessage:entity:
_removeUnwantedContactDetails:entity:
getLineContaining:inText:
detailTypeFromPrefix:detectedLabelPointer:
detailTypeFromPrefix:
selfIdentificationMessageCount
setSelfIdentificationMessageCount:
patterns
valueWithPointer:
contactSharingNegativeSamplingRate
useMLModelForContactSharing
_logSelfIDForMessage:detection:modelType:modelVersion:
isTwoPersonConversation:
responsesForMessage:maximumResponses:forContext:withLanguage:options:
sharedManager
attributes
lineRangeForRange:
nameDetectorRules
signatureRules
dissectorWithMockedMLTrainingForTests
isAddressContext:
isPhoneContext:
isMaybeNameContext:
isNameRequest:
isBirthdayContext:
currentPatterns
clearConversationCache
trackEventWithScalar:model:result:supervision:extractionModelVersion:
initWithBundleId:personHandle:
personHandle
modelWithConfigPath:binPath:
classifierWithEspressoModelFile:
T@"NSDictionary",R,N,V_featureDict
_featureDict
initWithFeatureDict:
initWithFeatureProvider:
valueForKey:
featureDict
registerListeners
registerForService:delegate:
replyAttributionPattern
headerPattern:
headerPattern
headersPattern
quotedRegionStartPattern
messageSeparatorPattern
Td,R,N,V_cpu
Td,R,N,V_duration
TB,R,N,V_significantWork
_cpuStart
_cpuEnd
_durationStart
_signpostId
_significantWork
_cpu
_duration
initWithName:
done:
applyAdjustmentIfSane:
duration
significantWork
_guardedData
_harvestCostMetrics
initWithBundleIdentifier:highPriority:harvestedOnBattery:receivedOnBattery:harvestSource:
initWithItem:
initRealtime:wasNoBudgetItem:
harvestTimes
harvestTimerForName:
startTimer:
endTimer:significantWork:
startHarvest
endHarvest
_harvestSourceFromItemStorageReason:
_documentSourceForBundleId:
overridePET2InstanceForTesting:
_clientHelper
_synchronousRemoteObjectProxyWithErrorHandler:
extractionsFromSearchableItems:error:
extractionsFromUserAction:searchableItem:error:
extractionsFromUserAction:searchableItem:completion:
extractionsFromSearchableItems:completion:
initWithServiceName:whitelistedServerInterface:whitelistedClientInterface:serverInitiatedRequestHandler:interruptionHandler:invalidationHandler:logHandle:
setClasses:forSelector:argumentIndex:ofReply:
interfaceWithProtocol:
twoSigFigs:
aggregateKeyForKeySuffix:
messagesAdded:
messagesLost:
messagesPruned:
messagesFound:
messagesDeleted:
messagesUndisplayablyLost:
messagesFoundAfterUndisplayablyLost:
incrementKeyWithDomain:subdomain:suffix:action:by:
incrementKeyWithDomain:subdomain:suffix:action:
incrementKeyWithDomain:subdomain:suffix:by:
incrementKeyWithDomain:subdomain:suffix:
incrementKeyWithDomain:suffix:
setKeyWithDomain:suffix:toValue:
pushValue:toDistKeyWithSuffix:
pushValue:toDistKeyWithDomain:suffix:
_pushValuesForContact:usingDomain:subdomain:type:action:extraSignature:
performedAction:onRecordForContact:
performedAction:onDetail:forContact:
performedAction:forApp:onContact:
performedAction:onEventInCalendar:
performedAction:forApp:onEvent:
_appNameForApp:
eventsSuggested:withElapsedTime:inApp:
app:performedAction:onEvents:withResult:elapsedTime:
contactsSuggested:withElapsedTime:inApp:
app:performedAction:onContacts:withResult:elapsedTime:
eventConfirmed:inApp:
eventRejected:inApp:
eventConfirmedByRecord:
eventRejectedByRecord:
contactConfirmed:inApp:
contactRejected:inApp:
detail:confirmedForContact:
detail:rejectedForContact:
recordConfirmedForContact:
recordRejectedForContact:
harvestDrainedNumberOfMails:
harvestedMessageInQueueSince:
eventsFromEntity:
contactsFromEntity:
harvestedEntity:withElapsedTime:
identityGroupSize:
reMatched:
suggestionImpressionsViaBanner:
suggestionImpressionsViaBannerSuppressed:
hypotheticalSuggestionImpressionsIncludingActedOn:
eventSuggestionImpressionsViaBanner:
contactSuggestionImpressionsViaBanner:
hypotheticalContactSuggestionImpressionsIncludingInsignificant:
assetVersion
assetVersion:
databaseCorruptionDetectedViaIntegrityCheck
databaseCorruptionDetectedViaCorruptionMarker
contactsFoundOnDeviceEnabled:
eventsFoundOnDeviceEnabled:
realtimeEventForNewEvent:
eventWithRecordId:origin:uniqueKey:opaqueKey:title:notes:start:startTimeZone:end:endTimeZone:isAllDay:creationDate:lastModifiedDate:locations:tags:URL:
tracked
richness
TQ,R,N,V_annotationType
T@"NSArray",R,N,V_tags
_annotationType
initWithAnnotationType:tags:range:text:
initWithDict:
dictRepresentation
isEqualToTaggedCharacterRange:
annotationTypeUniqueIdentifier
annotationType
describeAnnotationType:
annotationTypeUniqueIdentifier:
annotationTypeFromString:
enrichAndFilterTaggedCharacterRanges:usingMapping:withAnnotationType:
mergeTagsFromTaggedCharacterRanges:withTaggedCharacterRanges:
mergeTaggedCharacterRanges:usingBaseTaggedCharacterRanges:extraTags:tagOverrides:alignWithGroundTruth:
biosBasedAnnotation:usingTags:forSection:
state:index:section:
flattenTaggedCharacterRanges:usingWhitelist:replaceOOVWithToken:
filteredSetUsingPredicate:
_triClient
_serialQueue
_namespaceName
_deploymentId
initWithClientIdentifier:
refreshEnrollmentInformationForNamespace:
deploymentId
uncompressModelAndUpdateFactors:destinationPath:
_uncompressModelAtPath:toPath:
_unarchiveFrom:to:
cleanExperimentModelsFromTrialModelsFolder
modelPath
modelPathForCurrentEnrollment
modelPathForTriClient:andNamespace:
modelPathForExperimentId:treatmentId:deploymentId:
_modelPathForExperimentId:treatmentId:deploymentId:createIfNeeded:
_modelDirectoryPathCreateIfNeeded:
_modelNameForCurrentEnrollment
_modelNameForExperimentId:treatmentId:deploymentId:
experimentIdentifiersWithNamespaceName:
stringByDeletingPathExtension
pathComponents
dataWithContentsOfURL:options:error:
TQ,R,N,V_type
T@"SGDuplicateKey",R,N,V_duplicateKey
_normalizedValue
initWithValue:label:type:recordId:duplicateKey:sourceKey:context:extractionInfo:
normalizedValue
isEqualToContactDetail:
contactDetail:label:type:recordId:duplicateKey:sourceKey:context:extractionInfo:
contactDetailFromEntity:
deleteAllCNContactMatches
deleteAllCNContactMatchesForEntityID:
refreshSuggestionsContact:
_pendingCNContactIdsJobCache
_popBatchOfCNContactIds
syncContactsWithStore:
_enqueueBatchOfCNContactIds:
setHasFullSync
needsFullSync
_fullSyncContactsWithStore:
_deltaSyncContactsWithChangeHistory:
deleteCNContactMatchForContactId:
writeCNContactMatchForContact:withMatches:andMaxEntityID:
cnContactIdentifiersForContact:
prematchedContactIdentifiers
firstName
objectsPassingTest:
lastName
cnContactIdentifiersSpotlightQueryStringForContact:
writeCNContactMissForRecordId:
writeCNContactMatchAndUpdateSetForContact:withMatches:andMaxEntityID:
loadCNContactMatchesForContact:andGetMaxEntityId:
loadAllPrecomputedContactMatches
cnContactMatchesForRecordId:found:
updateCNContactMatches:
initRefreshSuggestionsContactDropBox
isEqualToNumber:
getMaxEntityId
deleteAllCNContactMatchesForIdSet:
T@"NSMutableDictionary",R,N,V_modelExistsForLanguage
_pet2tracker
_fManager
_checkpointFullPath
_preferredLanguage
_customResponsesStep
_latestProcessedDate
_batchSize
_modelFilePath
_modelConfigPath
_modelExistsForLanguage
_customResponseParametersWithExperiment:
_getCustomResponseParameters
harvestWithActivity:
loadCustomResponsesCheckpoint
writeCheckpoint
isSupportedLanguage:
modelForLanguage:
activityStateAfterFilterWithStore:forActivity:andCustomResponseParameters:
deferAfterWriteCheckpointForActivity:
setPet2TrackerForTesting:
setCustomResponsesStepForTesting:
getCustomResponsesStepForTesting
setCustomResponsesLatestProcessedDateForTesting:
getCustomResponsesLatestProcessedDateForTesting
modelExistsForLanguage
designateFilteringBatch:
filterBatchSize
recordKnownCustomResponsesInBatchWithEmbedder:compatibilityVersion:
countCustomResponsesAfterPruningWithMinimumCountThreshold:
minDecayedCountForPruning
filterBatchWithMinimumDistinctRecipients:minimumReplyOccurences:
minimumReplyOccurences
minimumDistinctRecipients
recordMessagesInBatchAsCustomResponsesWithEmbedder:compatibilityVersion:
compatibilityVersion
decayAllCustomResponsesWithDecayFactor:filteringBatchSize:
timeDecayFactor
countCustomResponsesAfterTruncatingTable:
maxStoredCustomResponses
prunePerRecipientTableWithMaxRows:
maxRowsInPerRecipientTable
calculateUsageSpreads
hasNegativeClass
predictionParams
useNonNegativeClassesOnly
customResponsesParameters
featuresOf:
modelForLanguage:mode:chunkPath:plistPath:
configWithLanguage:mode:plistPath:
contentsAtPath:
addingMessageExceedsBatchLimit:tableLimit:message:language:prompt:recipientHandle:sentAt:
sentAt
reply
maxStoredMessages
prompt
nextMessagePair
isDoneIterating
latestProcessedDate
initWithStartDate:maxBatchSize:maxReplyLength:maxReplyGap:
maxReplyGapSecs
knowledgeStoreQueryLimit
espressoBinFilePath
inferenceModelFilePath
modelTypeName
isCustomResponsesEnabled
treatmentName
isReadableFileAtPath:
inferenceModelConfigPath
isMLModelEnabled
clearCustomResponsesCheckpointForTesting
runHarvestSkipMessageCollection:clearCheckpoint:reportMetrics:
filename:
TB,R,N,V_isEphemeral
TB,R,N,V_waitForMigrations
T@"SGSpotlightContactsAdapter",R,V_spotlightContactsAdapter
T@"SGSGtoCNContactsCacheUpdateAdapter",R,V_sgToCNContactsCacheUpdateAdapter
T@"SGKeyValueCacheManager",R,V_kvCacheManager
_sharedWriteLock
_snippetDb
_snippetsJournal
_identityStoreDirty
_entityMigrations
_snippetsMigrations
_entityVersion
_snippetsVersion
_entityMigrationRequiresMergeBlobUpdate
_lostMessageOverflow
_deallocNotifications
_isClosed
_journal
_spotlightContactsAdapter
_sgToCNContactsCacheUpdateAdapter
_parentMessagesLimit
_serializedContactsLimit
_recentlyDeletedEmailKeys
_spotlightReindexCount
_spotlightReindexQueue
_prematchedContactIdentifiers
_precomputationQueue
_messageRecipients
_crLookup
_snippetDbPath
_lockStateNotificationRegistrationToken
_executeJournals
_otherDetailsWithNoContact
_cnToSGContactsCachePendingUpdateRequests
_isEphemeral
_waitForMigrations
_kvCacheManager
initForRawDatabaseAccessWithEntityPath:snippetsPath:error:
initForDbStatsOnlyWithError:
_runInitMigrationTasks:noMigrate:
initWithEntityDbPath:snippetDbPath:isEphemeral:sharedLock:executeJournals:noMigrate:
closeDatabases
addDeallocNotification:
corruptionMarkerPresent
_removeCorruptionMarker
clearMasterEntityCache
removeStringFromNoContactsCache:
_addStringToNoContactsCache:
_isStringInNoContactsCache:
clearNoContactsCache
nextPendingGeocode
emailsPendingVerification
mostRecentParentKeyForDuplicateKey:
parentKeysForDuplicateKey:
contactIsDisplayable:
storageContactByMasterEntityId:withSnippets:
masterEntityIDsForMasterEntityQuery:bindings:
_contactForMasterEntityId:withSnippets:filterConfirmRejectDetails:
_enumerateContactsForMasterEntityIds:withSnippets:usingBlock:
_enumerateContactsForMasterEntityIds:withSnippets:filterConfirmRejectDetails:usingBlock:
_contactsForMasterEntityIds:withSnippets:
enumerateContactsByMasterEntityQuery:withSnippets:limit:bindings:usingBlock:
suggestContactsByMasterEntityQuery:limit:bindings:
suggestContactsByMasterEntityQuery:withSnippets:limit:bindings:
bindCheckContactRow:isMe:
suggestContactsWithPrefix:limitTo:
_contactIdsForContactDetailMatches:detailContactIds:socialProfileContactIds:
_contactIdsForContactNameMatches:strongNameIds:weakNameIds:
_contactIdForInteractionContactIdentifierMatch:
suggestContactsWithContact:withSnippets:filterConfirmRejectDetails:limitTo:
filterOutRejectedDetailsFromContact:
historyHasContact:
_scoreSGContact:bySimilarityToContact:cnContactFullname:
_rankSGContacts:bySimilarityToContact:
suggestContactMatchesWithContact:limitTo:
_processContactMatchWithContacts:matches:limit:masterEntityId:detailEntityId:contactEntityId:matchinfoData:tokens:requireName:
suggestContactMatchesWithMessagingPrefix:limitTo:
suggestContactMatchesWithFullTextSearch:limitTo:
_matchableUTF8TokenRangesInMatchExpression:
_queryForAllContactsWithLimit
enumerateAllContactsWithSnippets:limitTo:usingBlock:
allContactsWithSnippets:limitTo:
allContactsMasterEntityIdsLimitedTo:
suggestContactMatchesByType:searchString:isMaybe:onlySignificant:
suggestContactMatchesByPhoneNumber:isMaybe:onlySignificant:
suggestContactMatchesByPhoneNumber:
suggestContactMatchesByEmailAddress:isMaybe:onlySignificant:
suggestContactMatchesByEmailAddress:
suggestContactMatchesBySocialProfile:isMaybe:onlySignificant:
suggestContactMatchesBySocialProfile:
storageContactByKey:
suggestContactByKey:
suggestContactByIdentityKey:parentKey:
storageContactByRecordId:withSnippets:
suggestContactByRecordId:
suggestContactByRecordId:withSnippets:filterConfirmRejectDetails:
contactMatchedRecordTypeFromEntityType:
contactMatchedRecordTypeFromIdentityKeyType:
entityTypeFromIdentityKeyType:
suggestContactMatchesByContactDetailTag:
suggestContactMatchesByContactDetailTag:matchType:
rebuildContactDetailsCacheWithShouldContinueBlock:
contactIdsMergedWithMasterEntityId:
eventFromSqlResult:
_filterOutOlderVersionsOfPseudoEvents:
eventIsCancelled:
_filterOutCancelledEvents:
_filterOutAllButAcceptedWithUpdatedFields:
suggestEventsStartingAt:endingAt:limitTo:options:
suggestEventsStartingAt:endingAt:prefix:limitTo:options:
suggestEventsStartingAt:endingAt:limitTo:
suggestEventsStartingAt:endingAt:prefix:limitTo:
suggestEventsStartingAt:endingAt:limitTo:additionalWhereClause:options:onPrep:
confirmFieldValues:forEntity:
rejectFieldValuesForRecordId:
confirmedFieldValuesForEntity:
confirmedFieldValuesForEvent:
rejectRealtimeEvent:error:
confirmRealtimeEvent:error:
rejectRealtimeContact:error:
confirmRealtimeContact:error:
confirmEventByRecordId:error:
confirmStoredEvent:error:
rejectEventByRecordId:error:
confirm:orRejectContactByRecordID:error:
confirmContactByRecordID:error:
rejectContactByRecordID:error:
confirmContactDetailByRecordID:error:
rejectContactDetailByRecordID:error:
rejectStoredEvent:error:
confirmReminderByRecordId:error:
rejectReminderByRecordId:error:
rejectReminderByKey:error:
reminderAlarmTriggeredForRecordId:error:
confirmStoredReminder:error:
rejectStoredReminder:error:
reminderAlarmTriggeredForStorageReminder:error:
duplicateKeysMatchingAnyTag:
duplicateKeysMatchingAnyEventHash:
duplicateKeysMatchingAnyReminderHash:
_hashWithDuplicateKeysMatchingTags:
duplicateKeysMatchingInteractionBundleId:andTags:
journal
loadFullDownloadRequestBatch:
resolveFullDownloadRequests:
truncateContactDetailTable
dumpTables:columns:
isEphemeral
waitForMigrations
spotlightContactsAdapter
sgToCNContactsCacheUpdateAdapter
kvCacheManager
isHarvested
_fieldValuesClassWhitelist
toFloatingTime:
likePrefix:
getNSDataForColumnName:table:
setValue:forKey:fromRecordId:
isContactDetail
initWithContact:matchingRecordId:matchType:matchTokens:
significanceOrigin
firstMatchInString:options:range:
sqliteDatabaseWithFilename:contentProtection:errorHandler:error:
initWithContact:matchTokens:matchInfo:
getNSDataForColumn:
globPrefix:
matchinfoDataWithEntityId:detailEntityId:matchinfoData:
tokensMatchedDetailTypeForContact:contactEntityId:detailEntityId:matchinfoData:tokens:
containsDetailSuggestions
mapAndFilter:f:
sortedArrayWithOptions:usingComparator:
areKeysAvailable:
filteredArrayUsingPredicate:
getInt64ForColumnAlias:
addPathToFutureDbSchemas:
initializeDatabase:withProtection:sharedLock:newDatabaseCreated:
_recreateCorruptDatabase:sharedLock:withProtection:
defaultSnippetPath
defaultPath
defaultPathCreatingSuggestionsDirectoryIfNeeded:
storeWithDefaultLocationAndExecuteJournals:
defaultHarvestStore
sqlStoreInMemory
prepareSqlStoreInMemory
prepareSqlStoreInMemoryByClearingExistingStore:
deletePreparedSqlStoreInMemory
sqlStoreWithEntityDbPath:snippetDbPath:isEphemeral:executeJournals:
sqlStoreWithEntityDbPath:snippetDbPath:isEphemeral:sharedLock:executeJournals:
sqlStoreWithEntityDbPathNoMigrate:snippetDbPath:isEphemeral:executeJournals:
_initializeDatabaseNolock:withProtection:sharedLock:newDatabaseCreated:
pathHasFutureDbSchema:
releaseInstanceAndWaitForDealloc:
isEphemeralIdentifier:
contactContainsEphemeralId:
escapeLike:
T@"NSArray",R,N,V_outputItems
T@"NSDictionary",R,N,V_sourceMetadata
T@"NSArray",R,N,V_exceptionTemplates
T@"NSDictionary",R,N,V_jsMessageLogs
_outputItems
_sourceMetadata
_exceptionTemplates
_jsMessageLogs
initWithOutputItems:sourceMetadata:exeptionTemplates:jsMessageLogs:
initWithOutputItems:exeptionTemplates:jsMessageLogs:
outputItems
sourceMetadata
exceptionTemplates
jsMessageLogs
_xpcConnection
_reverseTemplateJSNoXPC
_classifierCache
dissectInteraction:entity:context:
synchronousRemoteObjectProxyWithErrorHandler:
entityForOutputItem:parentEntity:outputExceptions:outputInfos:
entityForOutputItem:parentEntity:outputExceptions:outputInfos:interaction:
entityForOutputItem:withSiblings:parentEntity:outputExceptions:outputInfos:interaction:
packedJSMailMessageFromMailMessage:context:
packedJSMailMessageFromMailMessage:
packedJSTextMessageFromTextMessage:
packedJSInteractionFromInteraction:bundleIdentifier:creationTimestamp:
packedJSURLFromURL:title:payload:
packedJSURLFromURL:title:payload:creationTimestamp:
packedJSSchemaFromSchemaOrgItems:
exceedsMaxHTMLContentLength:
outputFromPackedJSSchema:
outputFromPackedJSMailMessage:
outputFromPackedJSTextMessage:
eventsFromSchemaOrgItems:
_addEnrichmentsToEntityForOutput:entity:startTime:backPressureHazard:
_addEnrichmentsToEntityForOutput:interaction:entity:startTime:backPressureHazard:
addEnrichmentsToEntityForOutputItems:exceptions:jsMessageLogs:interaction:entity:startTime:backPressureHazard:
eventClassificationForMailMessage:
privacyAwareLogsForMLExtractions:
diffSchemas:withExpectedSchemas:
mergeSchemas:withExpectedSchemas:
eventClassificationWithoutXPCForMailMessage:
resolveCandidatesWithoutXPC:forCategory:label:rawIndexSet:taggedCharacterRanges:
jsDictForResolveCandidates:forCategory:label:rawIndexSet:taggedCharacterRanges:
jsonLdOutputFromPackedJSEntity:
reverseMapMailMessage:withPreprocessedHTML:forCategory:withSchemExpectation:
jsonLdOutputFromMailMessage:
jsonLdOutputFromTextMessage:
jsonLdOutputFromURL:title:payload:extractionDate:
isStructuredEventCandidateForURL:title:
dissectURL:title:htmlPayload:entity:
addInteractionTagsToEnrichment:inEntity:interaction:
getAndRemoveItemReferencesFromSchemas:
eventActivitiesForReservationWithReference:inParentEntity:interaction:
enrichmentsFromSchemas:inMessage:parentEntity:
initWithTeamIdentifier:type:userActivity:validStartDate:validEndDate:
bundleRecordWithBundleIdentifier:allowPlaceholder:error:
validDuration
actions
itemReference
reservations
fromExtractedDomain
shouldIgnoreMailMessage:
reservationItemReferences:
reservationContainerReference:
defaultDuration
setNanosecond:
indexOfObjectPassingTest:
poiFilters:
ekEventAvailabilityState:
geocodingModeAddressWithCanonicalSearch
geocodingModeAddressThenPOI
geocodingModePOIOnly
geocodingModeAddressOnly
addressDictionaryToString:
addParams:toParameterizedString:
addParams:toParameterizedString:allowAlternatives:
invalidate
setRemoteObjectInterface:
initWithMachServiceName:options:
stringFromPostalAddress:style:
setISOCountryCode:
submodeledFeatures
rebuildSubmodelsIfNecessaryWithLimit:
rebuildSubmodelsIfNecessaryForStore:limit:
initializeSubModelsWithSpotlightRelativeDaysStart:relativeDaysEnd:limit:store:
incrementalSubmodelUpdateWithLimit:
incrementalSubmodelUpdateWithSaliencyModelConfig:store:finalGroundTruthDate:withSimulatedCSSearchableItemForTesting:limit:
purgeOldTokens
submodelAges
setIsCounted:
setIsGTESalient:
earlierDate:
T@"SGSqlEntityStore",R,N,V_store
_scanners
_naiveDateFormatter
_noTimeFormatter
runDataDetectors:locale:epoch:metadataForTypes:
_result:containsTypes:
_result:containsTypes:foundTypes:
pointerValue
setCalendar:
initWithGroupId:
isEqualToPseudoReminderKey:
Ti,N,V_locationType
T@"NSString",&,N,V_label
T@"NSString",&,N,V_address
Td,N,V_latitude
Td,N,V_longitude
Td,N,V_accuracy
T@"NSData",&,N,V_handle
T@"NSString",&,N,V_airportCode
setLocationType:
setHasLocationType:
hasLocationType
locationTypeAsString:
StringAsLocationType:
hasLabel
hasAddress
setLatitude:
setHasLatitude:
hasLatitude
setLongitude:
setHasLongitude:
hasLongitude
setAccuracy:
setHasAccuracy:
hasAccuracy
setHasQuality:
hasQuality
hasHandle
hasAirportCode
setLabel:
setAddress:
setHandle:
setAirportCode:
TB,R,N,V_hasHashedMessageId
_modelStore
_mailClientUtil
_biomeMessageSummary
_hasher
_senderConnectionScore
_submodelAgeVector
_hasHashedMessageId
initWithMessageId:hasHashedMessageId:simpleMailMessage:senderConnectionScore:biomeMessageSummary:mailClientUtil:store:hasher:preLoadedFeatureNames:
initWithMessageId:hasHashedMessageId:simpleMailMessage:senderConnectionScore:biomeMessageSummary:mailClientUtil:store:preLoadedFeatureNames:
initWithMessageId:hasHashedMessageId:simpleMailMessage:senderConnectionScore:biomeMessageSummary:store:preLoadedFeatureNames:
flatVectorForFeatureNames:
cachedFeature:
feature:
setFeatureToStringValue:forName:
setFeatureToStringArrayValue:forName:
setFeatureToNumberValue:forName:
setFeatureToNumberArrayValue:forName:
ingestFeatures:
matchAnyClauseFrom:
estimateGroundTruth
estimateGroundTruthWithConfig:
mailboxId
defaultSaliencyOnError
defaultSaliencyOnOverride
defaultSaliencyOnPrefilteredMail
saliencyWithScore:isSalient:
saliencyWithScore:isSalient:isGTESalient:isCounted:
logSubmodelOutputWithInferredSaliency:
logHistogramFor:withCategory:
logAccuracyWithGTE:
hasHashedMessageId
hashedUserId
hashedString:
unrotatedHashedString:withHashSize:
uppercaseString
ISOCountryCode
T@"NSString",&,N,V_interactionId
T@"NSString",&,N,V_interactionGroupId
T@"NSString",&,N,V_interactionBundleId
T@"NSData",&,N,V_reservationItemReferences
T@"NSData",&,N,V_reservationContainerReference
T@"NSString",&,N,V_intentResponseUserActivityString
T@"NSString",&,N,V_interactionTeamId
_intentResponseUserActivityString
_interactionBundleId
_interactionGroupId
_interactionId
_interactionTeamId
_reservationContainerReference
_reservationItemReferences
hasInteractionId
hasInteractionGroupId
hasInteractionBundleId
hasReservationItemReferences
hasReservationContainerReference
hasIntentResponseUserActivityString
hasInteractionTeamId
interactionId
setInteractionId:
interactionGroupId
setInteractionGroupId:
interactionBundleId
setInteractionBundleId:
reservationItemReferences
setReservationItemReferences:
reservationContainerReference
setReservationContainerReference:
intentResponseUserActivityString
setIntentResponseUserActivityString:
interactionTeamId
setInteractionTeamId:
_knowledgeStore
launchCountForBundleId:afterDate:limit:
executeQuery:error:
eventQueryWithPredicate:eventStreams:offset:limit:sortDescriptors:
appInFocusStream
andPredicateWithSubpredicates:
predicateForEventsWithStartDateAfter:
predicateForEventsWithStringValue:
userKnowledgeStore
Ti,N,V_fromStatus
Ti,N,V_toStatus
_fromStatus
_toStatus
fromStatus
setFromStatus:
setHasFromStatus:
hasFromStatus
fromStatusAsString:
StringAsFromStatus:
toStatus
setToStatus:
setHasToStatus:
hasToStatus
toStatusAsString:
StringAsToStatus:
tryExecuteSnippetsJournal
handleDeviceLockStateEvent:
registerJournalUnlockHandler
journalNameForDbPath:
startJournaling
stopJournaling
T@"NSData",&,N,V_contentHash
TB,N,V_pendingGeocode
_pendingGeocode
_contentHash
initWithDuplicateKey:title:parent:
initWithPseudoContactWithKey:parent:name:
initWithContactDetailWithKey:type:extractionInfo:curated:parent:value:context:contextRangeOfInterest:
isEvent
isPerson
contentHash
setContentHash:
pendingGeocode
setPendingGeocode:
address:forIdentity:parent:curated:context:contextRangeOfInterest:extractionInfo:
phoneNumber:forIdentity:parent:curated:context:contextRangeOfInterest:extractionInfo:
emailAddress:forIdentity:parent:curated:context:contextRangeOfInterest:extractionInfo:
birthday:forIdentity:parent:curated:context:contextRangeOfInterest:extractionInfo:
instantMessageAddress:forIdentity:parent:curated:context:contextRangeOfInterest:extractionInfo:
socialProfile:forIdentity:parent:curated:context:contextRangeOfInterest:extractionInfo:
fromStartDate:endDate:
initWithStartDateComponents:endDateComponents:
fromStartDate:
queryFromDaysAgo:throughDaysAgo:limit:withError:handler:
queryFromDaysAgo:throughDaysAgo:limit:withError:simulatedCSSIs:handler:
itemWithUniqueIdentifier:error:
setFilterQuery:
setMaxCount:
reservationNumber
reservationStatus
reservationStatusToSchema:
bookingTime
reservationHolderName
spokenPhrase
vocabularyIdentifier
reservationNumberFromReservationSchema:
bookingTimeFromReservationSchema:
reservationStatusFromReservationSchema:
reservationHolderNameFromReservationSchema:
urlFromReservationSchema:
schemaFromReservation:
Ti,N,V_category
Ti,N,V_countUpTo8KB
Ti,N,V_count8KBTo32KB
Ti,N,V_count32KBTo128KB
Ti,N,V_count128KBTo512KB
Ti,N,V_count512KBTo2MB
Ti,N,V_countOver2MB
TQ,N,V_userId
_userId
setCategory:
setHasCategory:
hasCategory
categoryAsString:
StringAsCategory:
setCountUpTo8KB:
setHasCountUpTo8KB:
hasCountUpTo8KB
setCount8KBTo32KB:
setHasCount8KBTo32KB:
hasCount8KBTo32KB
setCount32KBTo128KB:
setHasCount32KBTo128KB:
hasCount32KBTo128KB
setCount128KBTo512KB:
setHasCount128KBTo512KB:
hasCount128KBTo512KB
setCount512KBTo2MB:
setHasCount512KBTo2MB:
hasCount512KBTo2MB
setCountOver2MB:
setHasCountOver2MB:
hasCountOver2MB
setUserId:
setHasUserId:
hasUserId
userId
asyncQueue
_recordConversationTurnWithDetail:received:throughApp:withStore:
recordConversationTurnWithDetail:received:throughApp:withStore:
recordConversationTurnWithContact:received:curated:throughApp:withDetailName:withDetailExtraction:
T@"NSDictionary",R,N,V_biomeSummaryByMessage
T@"NSDictionary",R,N,V_biomeMessageIdByPersistentId
_biomeSummaryByMessage
_biomeMessageIdByPersistentId
initWithBiomeSummaryByMessage:biomeMessageIdByPersistentId:
biomeSummaryByMessage
biomeMessageIdByPersistentId
_urls
_needsFlushing
writeWithEntityStore:
flushWrites
numberOfExtractions
urlsFoundBetweenStartDate:endDate:bundleIdentifier:entityStore:
deleteAllURLsWithBundleIdentifier:entityStore:
deleteAllURLsWithBundleIdentifier:documentIdentifiers:entityStore:
supportedBundleIdentifiers
urlsFromURLs:handle:bundleIdentifier:domainIdentifier:uniqueIdentifier:documentTitle:documentDate:documentTimeInterval:receivedAt:isOutgoingDocument:
urlsFromText:handle:dataDetectorMatches:bundleIdentifier:domainIdentifier:uniqueIdentifier:documentTitle:documentDate:documentTimeInterval:receivedAt:isOutgoingDocument:
urlsFromAttributes:handle:bundleIdentifier:domainIdentifier:uniqueIdentifier:documentTitle:documentDate:documentTimeInterval:receivedAt:isOutgoingDocument:
_titleFromMessagesSynthesizedTextContent:
_flagsForBundleIdentifier:documentDate:documentTimeInterval:isOutgoingDocument:
T@"NSString",R,N,V_externalIdentifier
TQ,R,N,V_provider
T@"NSString",R,N,V_trackingNumber
_externalIdentifier
_provider
_trackingNumber
initWithProvider:trackingNumber:
isEqualToDeliveryKey:
externalIdentifier
provider
trackingNumber
providerForString:
T@"NSString",R,N,V_firstname
T@"NSString",R,N,V_surname
T@"NSString",R,N,V_middlename
T@"NSString",R,N,V_prefix
T@"NSString",R,N,V_suffix
_privFullName
_firstname
_surname
_middlename
_prefix
_suffix
fullName
initWithKoreanName:
initWithJapaneseName:
initWithChineseName:
initWithVietnameseName:
initWithSpanishName:
segmentWesternNameWithNameParts:andPrefix:
initWithWesternName:
toSGNameWithOrigin:recordId:extractionInfo:
firstname
surname
middlename
prefix
suffix
initWithFirstName:middleName:lastName:fullName:prefix:suffix:recordId:origin:extractionInfo:
capitalizedString
payloadForString:range:
initWithDominantScript:languageMap:
newlineCharacterSet
localizedStringFromPersonNameComponents:style:options:
setNameSuffix:
setFamilyName:
setMiddleName:
setGivenName:
setNamePrefix:
nameWithString:
_migrateDb:
fetchMetadata
_recreateDb
_getDb
garbageCollectFiles:
createFile:
createItemWithId:sourceKey:messageId:customPriorityCriteria:receivedOnPower:receivedTime:storageReason:fileId:metadataChunk:htmlChunk:textChunk:
filesIdsToOpen
resetProgressForItemId:
markAsFailedWithItemId:
_popWithStringAfterWhereClause:binder:
popItem
popHighPriorityItem
popByCustomPriorityCriteria:
popByItemId:
popBySourceKey:messageId:
_initWithUserActivityStrings:secondaryString:optionalData:
_createUserActivityStringsWithOptions:completionHandler:
sg_serialize
sg_userActivityWithRequiredString:
_startInDaysAgo
_endInDaysAgo
_withBiomeData
_useSpotlightDataForMissingBiomeData
_simulatedCSSIs
initWithMessagesFromDaysAgo:throughDaysAgo:limit:withBiomeData:store:useSpotlightDataForMissingBiomeData:preLoadedFeatureNames:
initWithMessagesFromDaysAgo:throughDaysAgo:limit:withBiomeData:store:useSpotlightDataForMissingBiomeData:preLoadedFeatureNames:simulatedCSSIs:
forEach:
attributeForKey:
T@"NSString",C,N,V_subject
T@"NSString",C,N,V_textContent
T@"NSDate",C,N,V_date
T@"NSString",C,N,V_source
T@"NSString",C,N,V_bundleIdentifier
T@"NSString",C,N,V_uniqueIdentifier
T@"NSString",C,N,V_domainIdentifier
T@"NSArray",C,N,V_accountHandles
TB,N,V_isSent
T@"NSString",C,N,V_accountType
TB,N,V_isStoredEncrypted
T@"NSString",C,N,V_contentProtection
T@"CSPerson",R,N
T@"NSArray",R,N,V_attachments
Tq,R,N
_isInhumanSenderCached
_isInhumanContentCached
_taggedCharacterRangesCached
_messageSubjectDetectedDataCached
_dataDetectorMatchesWithSignatureForContentCached
_textContentLanguageIdentifierCached
_isSent
_isStoredEncrypted
_subject
_textContent
_domainIdentifier
_attachments
_accountHandles
_contentProtection
isEqualToMessage:
textContentLanguageIdentifier
isInhumanSender
isInhumanContent
messageSubjectDetectedData
detectedDataSignatureRange
setAttachments:
subject
setSubject:
setTextContent:
setDate:
setBundleIdentifier:
setUniqueIdentifier:
domainIdentifier
setDomainIdentifier:
attachments
accountHandles
setAccountHandles:
isSent
setIsSent:
setAccountType:
isStoredEncrypted
setIsStoredEncrypted:
contentProtection
setContentProtection:
preferredLanguages
absoluteTimestamp
securityMethod
searchableItemIsStoredEncryptedWithGetterBlock:bundleIdentifier:
messageWithSearchableItem:
fromDictionary:
canonicalLocaleIdentifierFromString:
TB,N,V_dateIsCorrect
TB,N,V_isFromCongratulation
TI,N,V_modelVersion
TB,N,V_didRegexTrigger
Ti,N,V_offset
TB,N,V_didResponseKitTrigger
_modelVersion
_dateIsCorrect
_didRegexTrigger
_didResponseKitTrigger
_isFromCongratulation
setDateIsCorrect:
setHasDateIsCorrect:
hasDateIsCorrect
setIsFromCongratulation:
setHasIsFromCongratulation:
hasIsFromCongratulation
setModelVersion:
setHasModelVersion:
hasModelVersion
setDidRegexTrigger:
setHasDidRegexTrigger:
hasDidRegexTrigger
offset
setOffset:
setHasOffset:
hasOffset
offsetAsString:
StringAsOffset:
setDidResponseKitTrigger:
setHasDidResponseKitTrigger:
hasDidResponseKitTrigger
dateIsCorrect
isFromCongratulation
modelVersion
didRegexTrigger
didResponseKitTrigger
TC,R,N,V_useCase
T@"NSString",R,N,V_locale
T@"NSString",R,N,V_providerName
_useCase
_providerName
categoryForCategoryString:
useCaseForUseCaseString:
isCandidateForExtraction
useCase
providerName
describeUseCase:
describeCategory:
categoryForSchema:
_calendarObservers
_contactsObservers
_remindersObservers
_queuedOperations
_observersFrozen
_callCalendarObservers:contactsObservers:remindersObservers:withEntry:
addEntry:
_eventBatchOperationSupportedForEntries:
addEntries:
addCalendarObserver:
addContactsObserver:
addRemindersObserver:
freezeObservers
thawObserversForTesting
hasObserver:
initWithDuplicateKey:recordId:masterEntityId:title:
contactEntityFromEntity:
contactEntityWithTitle:duplicateKey:recordId:masterEntityId:
isEqualToRawKey:
T@"NSArray",R,N,V_taggedCharacterRanges
initWithPlainText:taggedCharacterRanges:
insertSubject:
isEqualToDOMParserResult:
_dissectorsAndDependencies
_dissectOperations:block:
dissectOperationsForMailMessage:entity:inContext:
dissectOperationsForTextMessage:entity:inContext:
dissectOperationsForInteraction:entity:inContext:
_dissectOperations:inContext:
geocodeOperation:withDependencies:
verificationOperation:overrideVerificationStatus:withDependencies:
logDKIMStatus:forPipelineEntity:
verificationOperation:withDependencies:
storeOperation:withStore:dependencies:
storeOperation:withStore:dependencies:originalEnrichmentCount:
storeOperation:spotlightBundleIdentifier:spotlightUniqueIdentifier:spotlightDomainIdentifier:withStore:dependencies:
storeOperation:spotlightBundleIdentifier:spotlightUniqueIdentifier:spotlightDomainIdentifier:withStore:dependencies:originalEnrichmentCount:
dissect:inContext:
dissect:
dissectAndStore:inContext:
dissect:andStore:
_dissectEntity:inContext:andThen:
dissectEntity:andStore:
dissectAndStoreEntity:inContext:destinationStore:
dissectAndStoreEntity:inContext:
dissectAndStoreSpotlightEntity:bundleIdentifier:uniqueIdentifier:domainIdentifier:inContext:
dissectors
_delayedResetCachesAndModels
processingQueue
storageQueue
isExtractedEventCategory
_resetCachesAndModels
sharedBackgroundProcessingQueue
sharedBackgroundStorageQueue
dependencyClassesForDissectorClass:
parallelPipeline:
customPipeline:
emptyPipeline
fullPipeline
retrainingPipeline
portraitTestingPipeline
remindersTestingPipeline
remindersTestingPipelineWithCustomReminderDissector:
deliveriesTestingPipeline
isSubclassOfClass:
T@"NSOperationQueue",R,N
tokenizeTextContent:languageHint:
tokenizeTextContent:languageHint:gazetteer:
enumerateTagsInRange:unit:scheme:options:usingBlock:
setLanguage:range:
setString:
setByAddingObjectsFromArray:
labels
setGazetteers:forTagScheme:
initWithTagSchemes:
T@"SGIdentityKey",R,N,V_identityKey
_identityKey
initWithIdentityKey:label:normalizedValue:
isEqualToContactDetailKey:
identityKey
prefixForForIdentityKey:
initWithEmail:
initWithNormalizedEmail:
initWithIdentityKey:
isEqualToPseudoContactKey:
T@"NSString",R,N,V_type
T@"NSString",R,N,V_filename
TQ,R,N,V_size
TB,R,N,V_isDownloadedLocally
TB,R,D,N
_isDownloadedLocally
_size
initWithType:filename:path:
isCalendarMimeType
isApplicationMimeType
isMediaMimeType
isOthersMimeType
mimeCategory
setSize:
size
isDownloadedLocally
attachmentWithType:filename:path:
attachmentsFromBiomeAttachments:
attachmentsFromSearchableItem:
testAttachmentWithType:size:
attachmentPaths
attachmentNames
attachmentTypes
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:
withMethods:
T@"NSString",R,N,V_content
T@"NSString",R,N,V_title
T{SGUnixTimestamp_=d},R,N,V_creationTimestamp
T{SGUnixTimestamp_=d},R,N,V_lastModifiedTimestamp
T@"SGSimpleTimeRange",R,N,V_when
T@"NSArray",R,N,V_locations
T@"NSSet",R,N,V_tags
T@"NSData",R,N,V_structuredData
TI,R,N,V_state
TB,R,N,V_curated
_curated
_when
geocodingMode
poiFilters
geocodeStartDate
geocodeStartTimeZone
geocodeEndDate
geocodeEndTimeZone
geocodeLocations
geocodedEventWithStartDate:startTimeZone:endDate:endTimeZone:locations:
urlFromTags
convertToEventWithOrigin:
convertToEvent:
initWithRecordId:duplicateKey:sourceKey:content:title:creationTimestamp:lastModifiedTimestamp:tags:when:locations:structuredData:state:curated:
isFromDataDetectors
isFromSuggestions
isAllDay
opaqueKey
isEqualToStorageEvent:
when
curated
isPOIFilters
floatingRangeWithUTCStartDate:endDate:
endTimeZone
isUrl
storageEventFromEntity:
_purgeAndDeleteIdentifiersDropbox
_deleteDomainIdentifiersDropbox
_deleteInteractionBundleIdDropbox
_deleteInteractionIdDropbox
_deleteInteractionGroupIdDropbox
supportedContentTypes
supportedBundleIDs
addOrUpdateSearchableItems:bundleID:
deleteSearchableItemsWithIdentifiers:bundleID:
deleteSearchableItemsWithDomainIdentifiers:bundleID:
deleteAllSearchableItemsWithBundleID:
deleteSearchableItemsSinceDate:bundleID:
purgeSearchableItemsWithIdentifiers:bundleID:
addUserAction:withItem:
deleteAllUserActivities:
deleteUserActivitiesWithPersistentIdentifiers:bundleID:
supportedINIntentClassNames
addInteractions:bundleID:protectionClass:
deleteInteractionsWithIdentifiers:bundleID:protectionClass:
deleteInteractionsWithGroupIdentifiers:bundleID:protectionClass:
deleteAllInteractionsWithBundleID:protectionClass:
donateRelevantShortcuts:bundleID:
donateRelevantActions:bundleID:
initWithManager:
_addSearchableItem:bundleID:
donateInteractions:bundleIdentifier:error:
defaultReceiver
deleteContentWithRequest:error:
deleteAllRecordsFromBundleId:
initWithBundleIdentifier:domainSelection:
deleteAllRecordsFromBundleId:matchingDomainSelection:
initWithBundleIdentifier:uniqueIdentifiers:
deleteAllRecordsFromBundleId:matchingAttributionIdentifiers:
initWithBundleIdentifier:purgedUniqueIdentifiers:
donateUserAction:searchableItem:error:
donateSearchableItems:bundleIdentifier:error:
searchableItemIsEligibleForHarvestingWithGetterBlock:bundleIdentifier:eligibleExceptForAge:
_lengthsCounts
_phonesSeenInContacts
_mostCommonCountryCode
_helperLock
numberMatchesContactsForm:
numberMatchesContactsForm:amongContactsWithIdentifiers:
normalizedDigits:
phoneNumberWithStringValue:
dialingCodeForISOCountryCode:
findContactsForPerson:fetchingKeys:
findContactsForDetailType:andValue:
personExistsInContacts:name:handle:
digits
hasPhoneNumber:
hasEmailAddress:
predicateForContactsMatchingFullTextSearch:containerIdentifiers:groupIdentifiers:
isKeyAvailable:
isLikePhoneNumber:
hasPostalAddress:
fetchMeContactFromContactStore:
clearMeContactCache
_isMeContact:withContactStore:
_getPeopleWithNameToken:fromContactStore:withKeysToFetch:ifMatchingPredicate:
_findFuzzyNameCandidatesMatchingPseudoContact:withName:andFeatures:fromContactStore:withKeysToFetch:
_filterCandidates:withUniqueDetailMatchesToContact:andFeatures:
filterCandidates:withDetailSubsetOfCNContact:
compareContact:cnContact:newDetails:matchedDetails:matchPreference:
compareContact:cnContact:stopOnNewDetail:stopOnMatchedDetail:matchPreference:
_compareContact:cnContact:newDetails:matchedDetails:matchPreference:stopOnNewDetail:stopOnMatchedDetail:
_filterCandidates:similarToName:exceedingThreshold:
_findContactsMatchingPseudoContact:withName:andFeatures:fromContactStore:withKeysToFetch:
_realtimeContactFromPseudoContact:andFeatures:assimilatingMatchingCuratedContacts:
stripBirthdayFromSGContact:
stripStaleBirthdayFromSGContact:withEntity:
_realtimeContactWithContactStore:forPseudoContact:fromEntity:normalizedName:error:
realtimeContactWithContactStore:forPseudoContact:fromEntity:error:
realtimeContactWithContactStore:forPseudoContact:error:
curatedContactsFromContactStore:matchingPseudoContact:error:
realtimeContactForFields:updatedFields:addedToCuratedContact:
updatedFields
keysSortedByValueUsingSelector:
dateComponents
firstObjectCommonWithArray:
unionOrderedSet:
T@"NSString",&,N,V_groupId
T@"NSString",&,N,V_sourceKey
T@"NSString",&,N,V_content
T@"NSString",&,N,V_title
Td,N,V_creationTimestamp
Td,N,V_lastModifiedTimestamp
T@"SGDCKTimeRange",&,N,V_when
TB,N,V_allDay
T@"NSMutableArray",&,N,V_locations
T@"NSString",&,N,V_extraKey
TB,N,V_cancelled
T@"NSData",&,N,V_schemaOrg
T@"NSString",&,N,V_domain
T@"NSString",&,N,V_templateName
Ti,N,V_categoryType
T@"SGDCKInteractionInfo",&,N,V_interactionInfo
Tq,N,V_parentEntityType
T@"NSData",&,N,V_metadata
_parentEntityType
_categoryType
_extraKey
_interactionInfo
_metadata
_schemaOrg
_templateName
_cancelled
hasGroupId
hasSourceKey
hasContent
hasTitle
setHasCreationTimestamp:
hasCreationTimestamp
setHasLastModifiedTimestamp:
hasLastModifiedTimestamp
hasWhen
setAllDay:
setHasAllDay:
hasAllDay
clearLocations
addLocations:
locationsCount
locationsAtIndex:
hasExtraKey
setCancelled:
setHasCancelled:
hasCancelled
hasSchemaOrg
hasDomain
hasTemplateName
setCategoryType:
setHasCategoryType:
hasCategoryType
categoryTypeAsString:
StringAsCategoryType:
hasInteractionInfo
setParentEntityType:
setHasParentEntityType:
hasParentEntityType
hasMetadata
setWhen:
extraKey
setExtraKey:
cancelled
schemaOrg
setSchemaOrg:
setDomain:
templateName
setTemplateName:
categoryType
interactionInfo
setInteractionInfo:
parentEntityType
metadata
setMetadata:
locationsType
topDirectoryCreateIfNeeded:
suggestionsDirectory
suggestionsDirectoryAfterCreatingIfNeeded:
suggestionsDirectoryFile:
suggestionsDirectoryFile:creatingSuggestionsDirectoryIfNeeded:
suggestionsSubdirectory:creatingDirectoriesIfNeeded:
suggestionsSubdirectory:
subdirectory:createIfNeeded:
filename:createIfNeeded:
topDirectory
topDirectoryWithName:createIfNeeded:
_tradToTrie
_tradToInversionRate
_confidenceThreshold
shouldInvertFirst:last:
firstNameLikelihood:underNamingTradition:default:
inversionRateForNamingTradition:
shouldInvertFirst:last:underNamingTradition:
T@"NSString",R
initWithSource:messageId:
initWithMailMessageKey:
toMailMessageKey
isEqualToEmailKey:
T@"NSNumber",R,V_salientCount
T@"NSNumber",R,V_regularCount
_salientCount
_regularCount
initWithSalientCount:regularCount:
initWithCount:asSalient:
newByAdding:asSalient:
salientCount
regularCount
T@"SGMINaiveBayesCountPair",R,V_mailCount
T@"SGMINaiveBayesCountPair",R,V_unigramTokenCounts
T@"SGMINaiveBayesCountPair",R,V_bigramTokenCounts
T@"NSArray",R,V_unigramQueriedTokensCount
T@"NSArray",R,V_bigramQueriedTokensCount
Td,R,V_oldestTokenAge
_mailCount
_unigramTokenCounts
_bigramTokenCounts
_unigramQueriedTokensCount
_bigramQueriedTokensCount
_oldestTokenAge
initWithMailCount:unigramTokenCounts:bigramTokenCounts:unigramQueriedTokensCount:bigramQueriedTokensCount:oldestTokenAge:
inferProbability
mailCount
unigramTokenCounts
bigramTokenCounts
unigramQueriedTokensCount
bigramQueriedTokensCount
oldestTokenAge
T@"NSMutableDictionary",R,V_unigramTokensCount
T@"NSMutableDictionary",R,V_bigramTokensCount
_unigramTokensCount
_bigramTokensCount
initWithMailCount:unigramTokenCounts:bigramTokenCounts:unigramTokensCount:bigramTokensCount:
ingestUnigramTokens:bigramTokens:asSalient:
unigramTokensCount
bigramTokensCount
removeBrackets:
messageIdWithoutBrackets
commitExtractionInfo:
loadExtractionInfoForPrimaryKey:
_makeHandler
_handlerCache
listener:shouldAcceptNewConnection:
initWithMakeHandler:
shouldAcceptConnection:serviceName:whitelistedServerInterface:whitelistedClientInterface:requestHandler:validateConnection:setupClientProxy:interruptionHandler:invalidationHandler:logHandle:
checkForAndLogTrueBooleanEntitlement:connection:serviceName:logHandle:
_intRequestHandler
_extractionsFromPipelineEntity:pipeline:
_shouldUseNamedEntityToTopicAlgorithmWithSearchableItem:
T@"NSString",&,N,V_experimentId
T@"NSString",&,N,V_treatmentId
Ti,N,V_deploymentId
hasExperimentId
hasTreatmentId
setDeploymentId:
setHasDeploymentId:
hasDeploymentId
setExperimentId:
setTreatmentId:
_tagger
_nameTagging
_trustCoreNLP
_punctuationMapping
_personalNameMapping
_nlpTagger
initForLocale:tagNames:trustCoreNLP:personalNameMapping:punctuationMapping:
transformWithCoreNLP:block:
transformWithNLLinguisticTagger:block:
isEqualToTokenizerMappingTransformer:
enumerateTagsInRange:scheme:options:usingBlock:
tagSchemes
initWithTagSchemes:options:
availableTagSchemesForLanguage:
forLocale:
forLocale:withPersonalNameMapping:
forLocale:tagNames:personalNameMapping:punctuationMapping:
forLocale:tagNames:trustCoreNLP:personalNameMapping:punctuationMapping:
T@"SGMIMetricsSaliencyInference",&,N,V_saliencyInference
T@"SGMIMetricsSubmodelOutputVector",&,N,V_submodelOutputVector
T@"SGMIMetricsSubmodelAgeVector",&,N,V_submodelOutputAge
Td,N,V_senderConnectionScore
T@"NSString",&,N,V_locale
T@"NSString",&,N,V_lang
_saliencyInference
_submodelOutputAge
_submodelOutputVector
hasSaliencyInference
hasSubmodelOutputVector
hasSubmodelOutputAge
setSenderConnectionScore:
setHasSenderConnectionScore:
hasSenderConnectionScore
hasLocale
hasLang
saliencyInference
setSaliencyInference:
submodelOutputVector
setSubmodelOutputVector:
submodelOutputAge
setSubmodelOutputAge:
senderConnectionScore
setLocale:
setLang:
sg_newStore
localizedCaseInsensitiveContainsString:
attendees
participantType
initWithEKOptions:
_sg_fetchEKEventsForPseudoNLEvent:title:participants:
predicateForEventCreatedFromSuggestionWithOpaqueKey:
eventsMatchingPredicate:
setLocalCustomObject:forKey:
saveEvent:span:commit:error:
rangeOfUnit:startDate:interval:forDate:
isSubscribedHolidayCalendar
isFacebookBirthdayCalendar
sg_confirmedEKEventForSGEvent:
eventsWithSameOpaqueKeyAsPseudoEvent:harvestStore:
eventsWithSameOpaqueKeyAsStorageEvent:harvestStore:
eventsWithSameAlternativeOpaqueKeyAsPseudoEvent:harvestStore:
eventsWithSameAlternativeOpaqueKeyAsStorageEvent:harvestStore:
eventWithExternalID:
sg_fetchEKEventsForPseudoEventBySimilarTitleAndStartTime:
sg_fetchEKEventsForPseudoNLEvent:entity:
sg_fetchEKEventsForPseudoNLEvent:message:
sg_bumpTimeToLiveForZeroKeywordNLEventOnInteraction:
eventsPerWeekAroundDate:
sg_usingSharedStoreForReadingOnly:
eventsWithSameOpaqueKeyAsDuplicateKey:extraKey:harvestStore:
eventsWithSameAlternativeOpaqueKeyAsDuplicateKey:harvestStore:
T@"NSString",&,V_targetMapping
T@"NSString",&,V_phoneMapping
T@"NSString",&,V_addressMapping
T@"NSString",&,V_dateMapping
_targetMapping
_phoneMapping
_addressMapping
_dateMapping
initWithTargetMapping:phoneMapping:emailMapping:addressMapping:andDateMapping:
extendMatchArray:withTarget:
isEqualToEntityMatchingTransformer:
targetMapping
setTargetMapping:
phoneMapping
setPhoneMapping:
addressMapping
setAddressMapping:
dateMapping
setDateMapping:
stringByReplacingMatches:inRange:withBlock:
withTargetMapping:phoneMapping:emailMapping:addressMapping:andDateMapping:
expandRange:by:
selectMigrationQueue
migrateToVersion:
runQuery:onDb:
migrationNeeded
waitForGroup:timeoutSeconds:
_renameTable:to:
_createEntityFTSTableWithName:
_prepareToCopyFrom:toNewTableNamed:
prepMigrator
_slowCopyFromTable:toTable:startingAtEntityId:
runQueries:forVersion:inTransactionOnDb:
fixupVersionMismatch
skipFromZeroSchema
languageToUpdateEntityFTSTo
updateLanguageForFTSTablesToLanguage:
processInfo
environment
maxKnownDbVersion
migrate
strongToWeakObjectsMapTable
initForMigratorTestWithEntityDb:snippetDb:
migrateDatabases
unmigrateDatabases
configureMigratorThenMigrateToVersion:
unsafeMigrateToVersionForTesting:
migration_deleteLegacyMessages
migration_MoveContentToSnippets
migration_AddAuthorColumnIfMissing
migration_AddNewishTablesIfMissing
migration_FixUpColumnsForDevicesWhoMissedTheImprovedLegacyMigration
migration_RebuildIdentityTables
migration_RecreateFTSTableWithITS
migration_CreateFTSTableWithITS
migration_DeduplicateIdentityPhones
migration_ConvertContentAndDupKeyHashesToBlobs
migration_DropMessagingTermsWithPhoneExtensions
migration_RemoveEntityReferencesWithoutBundleIdentifier
migration_FixupMergeGroups
migration_separateMessageEntities
migration_separateMessageSnippets
migration_rebuildFTSWithDetailEntityIDDocIDs
migration_deleteInteractions
migration_reimport
migration_deleteEmergencyExtractions
migration_deleteInternalExtractionsFromML
migration_deleteSerializedContacts
migration_newRemindersSchema
migration_newContactDetailsSchema
migration_newEventsSchema
migration_deleteNilDateEvents
clearDatabase:
computeContactConnectionScoreFromEmailAddress:usingEntityStore:
getContactIdentifierForEmail:usingEntityStore:
priorScore
computeContactPriorsForContactIdentifiers:withTimeConstant:withInteractionMechanisms:asOf:overLookbackOf:
arrayWithObject:
TB,N,V_isPositiveExample
TB,N,V_isNegativeExample
T{_NSRange=QQ},N,V_candidateNameRange
_isPositiveExample
_isNegativeExample
_candidateNameRange
initWithMessage:candidateName:
isPositiveExample
setIsPositiveExample:
isNegativeExample
setIsNegativeExample:
candidateNameRange
setCandidateNameRange:
TB,N,V_regexBelongsToSender
TB,N,V_regexDoesNotBelongToSender
TB,N,V_isFirstPerson
TB,N,V_isThirdPerson
T@"NSArray",R,N,V_matchingContacts
TQ,N,V_ignoreAfter
T@"NSDate",W,N,V_matchDate
T@"NSString",W,N,V_senderDisplayName
_regexBelongsToSender
_regexDoesNotBelongToSender
_isFirstPerson
_isThirdPerson
_matchingContacts
_ignoreAfter
_matchDate
_senderDisplayName
initWithMessage:ddMatch:isUnlikelyPhone:
metricsContactDetailOwner
metricsContactDetailFoundIn
regexBelongsToSender
setRegexBelongsToSender:
regexDoesNotBelongToSender
setRegexDoesNotBelongToSender:
isFirstPerson
setIsFirstPerson:
isThirdPerson
setIsThirdPerson:
matchingContacts
ignoreAfter
setIgnoreAfter:
matchDate
setMatchDate:
senderDisplayName
setSenderDisplayName:
initWithTraining:
addSessionForTrainingWithSource:label:language:objective:spotlightRef:embeddedFeaturizer:
detectionFromMessage:ddMatch:matchedContext:withSupervision:inConversation:entityLanguage:
detectionFromMatch:plainTextContent:extractionInfo:isUnlikelyPhone:
selfIdDetectionWithTextMessage:inConversation:withSupervision:
handleTextMessageContactSharing:andMatch:andContext:andLanguage:withSupervision:
birthdayCongratsTextMessage:andLanguage:andHealthStore:
handleTextMessageContactSharingWithNegativeSample:andLanguage:
numberOfNonZeroValues
useMLModelForContacts
indexOfObjectWithOptions:passingTest:
useMLModelForSelfId
_patternData
_pattern
_isTrivial
initWithRegexp:
initWithRegexpData:
existsInUtf8:
matchesUtf8:
enumerateMatchesInUtf8:fromString:ngroups:block:
_enumerateMatchesInUtf8:fromString:ngroups:block:
hashId
isTrivial
matchesString:
enumerateMatchesInString:ngroups:block:
enumerateMatchesInUtf8:fromString:ngroups:blockWithSubregexp:
enumerateMatchesInString:ngroups:blockWithSubregexp:
re2WithRegexp:
re2WithRegexpLazy:
re2WithRegexpData:
re2WithRegexpDataLazy:
re2WithSubregexps:prefilter:
re2WithSubregexps:
setCacheLimitForTesting:
setCountLimit:
initWithSubregexps:prefilter:
_subregexps
_prefilter
enumerateIndexesUsingBlock:
_regexp
TQ,N,V_pos
_quoted
_str
_pos
initWithMailMessage:
forward
backward
forwardWhile:
backwardWhile:
forwardToString:consume:
backwardToString:consume:
seekToStart
seekToEnd
setPos:
initWithType:content:
isEqualToIdentityKey:
hasEmailAddress
emailAddress
hasInstantMessageAddress
instantMessageAddress
hasSocialProfile
hasPhone
phone
externalId
identityTypeForKeyPart:
keyForEmail:
keyForNormalizedEmail:
keyForNormalizedPhone:
keyForInstantMessageAddress:
keyForSocialProfile:
keyForPersonHandle:
keyForContactExternalId:
keyForContactUniqueId:
T@"NSString",R,N,V_propertyName
T@"SGMicrodataItem",R,N,V_itemValue
_propertyName
_itemValue
initWithName:value:
propertyName
itemValue
T@"SGMicrodataParserStackItem",R,N,V_stackItem
_stackItem
initWithDocument:
startElement:withAttributes:
endElement
textContent:
stackItem
whitespaceSplit:
parse:
_deviceStateToken
requestReimportFromIdentifier:forPersonHandle:startDate:endDate:
requestReimportForHistoricalDataRequest:
_registerForLockStateChange
_unregisterForLockStateChange
_locked
_unlocked
_attemptToProcessRequests
_protectionClasses
_reimportQueryForPersonHandle:startDate:endDate:requestId:
_executeReimportOfIdentifiers:
_reimportFromBundleId:protectionClasses:identifiers:
_issueCommand:
_issueCommand:completionHandler:
defaultSearchableIndex
foundItemCount
initWithQueryString:attributes:
laterDate:
requestId
subsetOfHistoricalDataRequest:
initWithoutSharedInstance
clearConversations
addEnrichmentForEvents:forMessage:toEntity:
conversationWithIdentifier:
_shouldProcessMessage:entity:
_tagNaturalLanguageEnrichmentsForEntity:
scanEventsInLastMessageOnly:synchronously:completionHandler:
allMessages
ipsosMessageWithTextMessage:store:
scanEventsInMessageUnits:synchronously:completionHandler:
messageUnits
ipsosMessageWithMailMessage:store:
recordInteractionForEventWithInterface:actionType:harvestedEKEvent:curatedEKEvent:
fullyDissected
allowNaturalLanguageDissector
initWithType:categoryDescription:originBundleId:confidence:schemaOrg:participants:
ipsos_eventStatus
horizontalAccuracy
geoLocation
structuredLocationWithoutPrediction
toFloatingTime:withDSTAmbiguityPreferences:
component:fromDate:
titleGeneratedFromSubject
titleGeneratedFromTemplate
usedBubblesCount:
ipsos_usedBubblesCount
participantCount:
confidenceScore:
ipsos_confidence
significantSender
isSenderSignificant
naturalLanguageEventAttributes:
ipsos_eventAttributes
naturalLanguageEventLanguageID:
bestLanguageID
ipsos_messageUnit
naturalLanguageEventTypeIdentifier:
ipsos_eventClassificationType
messagesAppUsageLevel:
mailAppUsageLevel:
calendarAppUsageLevel:
_personForCSPerson:
setMessageUnits:
initWithText:originalMessage:index:
setIsSenderSignificant:
setIsGroupConversation:
initWithIdentifier:subject:sender:recipients:dateSent:type:
initWithEmail:fullName:
initWithHandle:handleType:fullName:
detectNLEvents
searchableIndexDidThrottle:
searchableIndexDidFinishThrottle:
dataForSearchableIndex:itemIdentifier:typeIdentifier:error:
fileURLForSearchableIndex:itemIdentifier:typeIdentifier:inPlace:error:
searchableIndex:reindexAllSearchableItemsWithAcknowledgementHandler:
searchableIndex:reindexSearchableItemsWithIdentifiers:acknowledgementHandler:
duplicateKeysFromMailMessageKeys:
recordIdForKey:
addSpotlightReferenceToEmailRecordId:withBundleIdentifier:uniqueIdentifier:domainIdentifier:
duplicateKeysFromRecordIds:
_duplicateKeysWithZeroSpotlightReferencesFromRecordIds:
_recordIdsFromRemovingSpotlightReferencesWithBundleIdentifier:uniqueIdentifiers:
_markRecordsLostIfNoSpotlightReferences:
_deleteIfNoSpotlightReferences:addToRecentlyDeletedCache:
initWithDomain:
writeTombstoneForSpotlightReferenceWithBundleIdentifier:domainIdentifiers:
_selectingDomainsForDomainIdentifier:
_tombstoneExistsForBundleIdentifier:
addDomain:
containsDomain:
writeTombstoneForSpotlightReferenceWithBundleIdentifier:uniqueIdentifiers:
_shouldContinueReindex:
batchOf:contactsStartingAtEntityId:
_minEntityIdFromMinEntityId:withContactIdentifiers:
reindexSearchableItemsWithMinimumEntityId:searchableIndex:acknowledgementHandler:reindexCount:
fetchLastClientStateWithCompletionHandler:
contactsWithIdentifiers:
domainIdentifierForSpotlightReferenceForBundleIdentifier:uniqueIdentifier:
hasSpotlightReferenceForBundleIdentifier:uniqueIdentifier:
addSpotlightReferenceToEmailIfFullyDownloaded:withBundleIdentifier:uniqueIdentifier:domainIdentifier:
isRecentlyDeleted:
markLostSpotlightReferencesWithBundleIdentifier:uniqueIdentifiers:
deleteSpotlightReferencesWithNoBundleIdentifier
writeTombstoneForSpotlightReferenceWithBundleIdentifier:domainIdentifier:
writeTombstoneForSpotlightReferenceWithBundleIdentifier:uniqueIdentifier:
writeTombstoneForSpotlightReferenceWithBundleIdentifier:
clearAllTombstonesForSpotlightReferencesIf:
tombstoneExistsForSpotlightReferenceWithBundleIdentifier:uniqueIdentifier:domainIdentifier:
TB,N,V_estimatedGroundTruth
Td,N,V_timestampSinceReferenceGTE
Td,N,V_timestampSinceReferenceMail
_timestampSinceReferenceGTE
_timestampSinceReferenceMail
_estimatedGroundTruth
setEstimatedGroundTruth:
setHasEstimatedGroundTruth:
hasEstimatedGroundTruth
setTimestampSinceReferenceGTE:
setHasTimestampSinceReferenceGTE:
hasTimestampSinceReferenceGTE
setTimestampSinceReferenceMail:
setHasTimestampSinceReferenceMail:
hasTimestampSinceReferenceMail
estimatedGroundTruth
timestampSinceReferenceGTE
timestampSinceReferenceMail
Tq,R,N,V_entityType
T@"NSObject<SGEntityKey>",R,N,V_entityKey
T@"SGDuplicateKey",R,N,V_parentKey
T@"NSData",R,N
_entityType
_entityKey
_parentKey
initWithEntityKey:entityType:parentKey:
initWithSerializedEntityKey:entityType:serializedParentKey:
initWithMessageIdHeaderValues:accountIdentifier:
isEqualToDuplicateKey:
curatedEventKey
contactDetailKey
pseudoContactKey
messageKey
emailKey
textMessageKey
webPageKey
interactionKey
pseudoEventKey
pseudoReminderKey
deliveryKey
compositeHash
entityType
entityKey
parentKey
duplicateKeyForMessage:fromSource:
duplicateKeyForEmailWithSource:messageId:
duplicateKeyForTextMessageWithSource:uniqueIdentifier:
duplicateKeyForInteractionWithBundleId:personHandle:
duplicateKeyForInteraction:fromBundleIdentifier:
duplicateKeyForInteractionIdentifier:fromBundleIdentifier:
duplicateKeyForPseudoContactWithIdentity:parentKey:
duplicateKeyForCuratedEventWithExternalID:
duplicateKeyForPseudoEventWithGroupId:parentKey:
duplicateKeyForPseudoReminderWithGroupId:withCreationTime:parentKey:
duplicateKeyForDeliveryWithProviderString:trackingNumber:parentKey:
duplicateKeyForNaturalLanguageEventWithStartDate:endDate:title:participants:parentKey:
duplicateKeyForSearchableItem:
duplicateKeyForSchemaOrg
duplicateKeyForWebPageFromSource:
sortedArrayUsingDescriptors:
initWithKey:ascending:
weekOfYear
T@"EMDaemonInterface",R,N,V_emailDaemon
T@"ECDKIMVerifier",R,N,V_dkimVerifier
_emailDaemon
_dkimVerifier
messageWithIdentifier:error:
isMessageAvailable:
dataForMessageWithIdentifier:error:
verifyDKIMSignatureForPipelineEntity:error:
verifyDKIMSignatureForStorageEvent:error:
verifyDKIMSignatureForMailWithIdentifier:error:
verifyDKIMSignatureForMailWithData:error:
signaturesToRemoveForDKIMVerificationContext:withFromHeaderDomain:
verifyDKIMSignatureForMailWithData:options:error:
emailDaemon
dkimVerifier
verifyMessageWithContext:options:error:
setRequireFullBodySignature:
dkimSignatureHeaders
removeDKIMSignatureHeaders:
parseEmailAddressString:displayName:localPart:domain:groupList:
ef_rfc5322Unfold
ef_trimTrailingCharactersInSet:
ef_trimLeadingCharactersInSet:
firstHeaderForKey:
verificationContextForMessageData:error:
signingDomainIdentifier
signatureExpiration
requestRepresentationWithOptions:completionHandler:
convertLineEndingsToNetwork:
optionsWithRequestedRepresentationType:networkUsage:
resultWithTimeout:error:
messageObjectIDForURL:
messageRepository
messageForObjectID:
stringByAddingPercentEncodingWithAllowedCharacters:
URLQueryAllowedCharacterSet
allVIPWaitForResult
T@"NSSet",R,C,N
vipManager
useProactiveHarvestingForBundleIdentifier:
resourceBundle
localizedStringForKey:preferredLocalization:
foundInAppsStringLongVersionForAppName:contactName:
foundInAppsStringCompactVersionWithContactName:
foundInAppsStringWithoutContactForAppName:
pathForResource:ofType:inDirectory:forLocalization:
localizations
bundleWithIdentifier:
_topicPlugin
_namedEntityPlugin
donateLabeledStrings:bundleId:groupId:documentId:completion:
initWithTopicPlugin:namedEntityPlugin:
_donateNotificationFromLabeledStrings:bundleId:groupId:documentId:error:
_donateNamedEntitiesFromLabeledStrings:bundleId:groupId:documentId:
_donateTopicsFromLabeledStrings:bundleId:groupId:documentId:
setContentDescription:
initWithItemContentType:
bundleIdentifierIsAllowedForNotifications:
bundleIdentifierIsEnabledForDonation:
notificationExtractionEnabled
reservationDurationFromReservationSchema:
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:lodgingBusinessLocation:reservationDuration:numberOfAdults:numberOfChildren:
schemaFromLodgingReservation:
lodgingBusinessLocation
_cachedContacts
clearContactsWithConversationIdentifier:
removeContact:
augmentSuggestedContactWithContact:conversationId:store:handle:
replaceDetailsInContact:onDiskContact:
mergeContact:withContact:
messageIdentifiersGeneratingContact:
initWithCountLimit:
externalKey
logReminderInteractionFromReminder:interface:actionType:
logReminderInteractionFromEntity:usingStore:interface:actionType:
_logReminderInteractionSummaryForReminder:interface:actionType:
logReminderExtractionFromEntity:interface:actionType:dueLocation:dueDateComponents:extractionStatus:timingProcessing:
trialIds
_eventKeyforReminder:
_interactionSummaryForReminder:interface:actionType:
_interactionDictionaryForDueLocation:dueDateComponents:
describeReminderExtractionStatus:
_baseInteractionAttributesForReminder:
_noCoreNLPTokenizer
_coreNLPTokenizer
initWithLanguage:
tokenizerWithCoreNLPEnabled:
detectNames:algorithm:
_detectNames:withNameSet:
detectNames:withNameSet:
_detectContactNames:
_detectNLPNames:
_contactNames
_fetchContactNamesToLimit:
_fetchContactNamesToLimit:withPPContactStore:
rankedContactsWithQuery:error:
displayableEntities:
loadMessagesToRefresh
updateMessages:state:
markMessagesUndisplayablyLost:
filterOutUndisplayableEntities:
markMessagesLost:
markMessagesFound:
pruneLostMessagesWithSource:count:
checkExistsEventForDuplicateKey:
bindStatementsForCommit:storageEvent:
_deserializeRange:
loadEventForPrimaryKey:
abbreviation
commitEvent:
loadEventForDuplicateKey:
loadEventForRecordId:
insertEventTagsAndLocations:primaryKey:
insertEvent:
updateEvent:primaryKey:
bindNamedParamToNull:
_serializeRange:
bindNamedParam:toNSData:
TQ,R,V_offsetInFile
_bytes
_offsetInFile
dataOfLength:
seekToFileOffset:
offsetInFile
initWithMemoryMappedPath:
initWithMemoryMappedPath:error:
distanceBetweenStrings:and:
Td,N,V_start
Td,N,V_end
Tq,N,V_startUTCOffsetSeconds
Tq,N,V_endUTCOffsetSeconds
TB,N,V_floating
_endUTCOffsetSeconds
_startUTCOffsetSeconds
_floating
setStart:
setHasStart:
hasStart
setEnd:
setHasEnd:
hasEnd
setStartUTCOffsetSeconds:
setHasStartUTCOffsetSeconds:
hasStartUTCOffsetSeconds
setEndUTCOffsetSeconds:
setHasEndUTCOffsetSeconds:
hasEndUTCOffsetSeconds
setFloating:
setHasFloating:
hasFloating
startUTCOffsetSeconds
endUTCOffsetSeconds
floating
initWithTopicDissector:
extractAndDonateTopicsForText:isPlainText:bundleId:groupId:documentId:contactHandles:weight:isOutgoing:
interestedInSearchableItem:
_interestedInTitle:content:isReaderText:uniqueIdentifier:bundleIdentifier:
_shouldDeferProcessingSearchableItem:
_topicContainersForText:isPlainText:bundleId:groupId:documentId:contactHandles:weight:isOutgoing:
extractionsFromText:bundleId:
deleteAllTopicsFromSourcesWithBundleId:deletedCount:error:
deleteAllTopicsFromSourcesWithBundleId:groupIds:deletedCount:error:
deleteAllTopicsFromSourcesWithBundleId:documentIds:deletedCount:error:
donateTopics:source:algorithm:cloudSync:sentimentScore:exactMatchesInSourceText:error:
safariDonationTitleExtractionEnabled
T@"NSString",R,N,V_externalId
_externalId
initWithExternalId:
isEqualToCuratedEventKey:
T@"SGStorageLocation",R,N,V_dueStorageLocation
_dueStorageLocation
initWithRecordId:duplicateKey:sourceKey:origin:dueDate:dueLocationType:dueLocation:dueLocationTrigger:title:reminderStatus:contactIdentifier:creationDate:
isEqualToStorageReminder:
toReminder
commitWithStore:
dueStorageLocation
initWithRecordId:origin:title:dueDateComponents:dueLocationType:dueLocation:dueLocationTrigger:sourceURL:reminderStatus:opaqueKey:uniqueKey:contactIdentifier:creationDate:
describeReminderStatus:
storageReminderFromRecordId:store:
storageReminderFromEntity:store:
storageReminderFromDuplicateKey:store:
storageReminderFromEntity:origin:
storageReminderWithPrimaryKey:store:
setDay:
setMonth:
reminderMetadata
isReminderMetadata
messageIdForBundleIdentifier:uniqueIdentifier:
messageIdsForBundleIdentifier:limit:
messageIdsForBundleIdentifier:uniqueIdentifiers:
messageIdsForBundleIdentifier:domainIdentifierGlobs:limit:
commitSpotlightMapping:bundleIdentifier:domainIdentifier:uniqueIdentifier:
emitContactDeleted:
emitContactUpdated:
emitEventDeleted:
emitEventUpdated:
emitReminderDeleted:
emitReminderUpdated:
emitURLChanged
notificationCount
_done
_timeoutTimer
setTimeout:
done
doneReturningWasDone
transactionWithName:
_isEnabled
_modelPath
_modelFeatureNames
_modelFeatureStandardizationMeans
_modelFeatureStandardizationStandardDeviations
_modelGroundTruthFeatureNames
_modelGroundTruthFeatureLowerBounds
_modelGroundTruthFeatureUpperBounds
_saliencyOverrideFeatureNames
_saliencyOverrideFeatureLowerBounds
_saliencyOverrideFeatureUpperBounds
_highRecallFilterFeatureNames
_highRecallFilterFeatureLowerBounds
_highRecallFilterFeatureUpperBounds
_classificationThreshold
_classificationOfflinePrecision
_classificationOfflineRecall
T@"TRIClient",&,N,V_triClient
refresh
loadLevelAsModelPath:
loadLevelAsBooleanFromFactor:
loadLevelAsNumericFromFactor:
loadLevelAsStringArrayFromFactor:
loadLevelAsNumericArrayFromFactor:
loadLevelAsNumericDictionaryFromFactor:
concatPathWithPrefix:suffix:extra:
arrayFromPathWithPrefix:suffix:
dictionaryFromPathWithPrefix:suffix:
loadFactors
isEnabled
modelFeatureNames
modelFeatureStandardizationMeans
modelFeatureStandardizationStandardDeviations
modelGroundTruthFeatureNames
modelGroundTruthFeatureLowerBounds
modelGroundTruthFeatureUpperBounds
saliencyOverrideFeatureNames
saliencyOverrideFeatureLowerBounds
saliencyOverrideFeatureUpperBounds
highRecallFilterFeatureNames
highRecallFilterFeatureLowerBounds
highRecallFilterFeatureUpperBounds
classificationThreshold
classificationOfflinePrecision
classificationOfflineRecall
triClient
setTriClient:
resourcePath
dictionaryWithContentsOfFile:
initWithBool:
directoryValue
schemaURLString:isEqualTo:
_vCardsDirectoryURL
pseudoContactVcardDirectory
urlForRecordIdVCard:
urlForStorageContactVCard:
coreSpotlightAttributeSetForContact:
searchableItemsForContactsForInternalIdentifiers:
sendContactToSpotlight:
removeAllPseudoContactsInIdSet:
deleteSearchableItemsWithIdentifiers:completionHandler:
searchableIndex
dispatchGroup
contactIdentifierFromSuggestionID:
deleteSearchableItemsWithDomainIdentifiers:completionHandler:
setStateOrProvince:
setDisplayName:
URLByAppendingPathComponent:isDirectory:
checkResourceIsReachableAndReturnError:
URLForDirectory:inDomain:appropriateForURL:create:error:
notifyWhenFlushed:
entityIdentifiersFromCNIdentifiers:
suggestionIDFromContactIdentifier:
initWithName:bundleIdentifier:
virtualMachineWithContextGroupRef:
sg_eventMetadata
sg_schemas
sg_isCuratedEventFromSuggestionNewerThan:
sg_fallbackURL
sg_dateComponentsFromISO8601String:
appBlocklist
contactHandlesForMailMessage:
contactHandlesForTextMessage:
contactHandlesForSearchableItem:
textContentFromSearchableItem:
donationBlockedApps
T@"NSArray",&,N,V_enrichedTaggedCharacterRanges
T@"NSDictionary",&,N,V_modelOutput
T@"NSDictionary",&,N,V_indexSetForOutputNameLabel
_enrichedTaggedCharacterRanges
_modelOutput
_indexSetForOutputNameLabel
initWithEnrichedTaggedCharacterRanges:modelOutput:
candidatesForLabelTokenIndexes:inPlainText:
detectedDateComponentsForTokenIndexes:dataDetectorMatches:allowDatesInPast:inferDates:approximateTime:partialDate:allowTimeOffset:useEndForDurations:
dataDetectorMatchesForTokenIndexes:dataDetectorMatches:allowDatesInPast:allowTimeOffset:
textRangeForTokenRange:
detectedDateComponentsForTokenIndexes:dataDetectorMatches:allowDatesInPast:inferDates:approximateTime:partialDate:useEndForDurations:
enrichedTaggedCharacterRanges
setEnrichedTaggedCharacterRanges:
modelOutput
setModelOutput:
indexSetForOutputNameLabel
setIndexSetForOutputNameLabel:
textRangeForIndexRange:inTaggedCharacterRanges:
dateComponentsFromDataDetectorMatch:inferDates:approximateTime:partialDate:useEndForDurations:
candidatesForLabelTokenIndexes:inPlainText:forTaggedCharacterRanges:
keyForOutputName:label:
indexSetForOutputNameLabelForModelOutput:
labelTokenIndexesForOutputName:label:modelOutput:maxMergeDistance:
labelTokenIndexesForOutputName:label:modelOutput:
firstRangeInIndexSet:
candidatesForLabelsWithPlainTextIndexSets:inPlainText:
candidatesForPlainTextIndexSet:inPlainText:
allDayDateComponentsFromDate:
dateComponentsFromDate:
mergeDetectedDateComponents:
mergeComponent:usingBaseDateComponents:withDateComponents:
setValue:forComponent:
valueForComponent:
isEqualToTimeZone:
initWithCode:userActivity:
reservationClassForSchema:
setReservations:
reservationsContainUniqueItemReferences
logReminder:actionType:
logActionVerb:actionType:
_logReminderTitleSequence:recorderKey:
_logReminderTitleUnknownTokens:recorderKey:
logReminderTitle:actionType:
logUserCreatedReminderTitle:
_tokenizeTitle:
_boolMaskVectorForTokens:
_loggableTitleSequence:withMask:
_loggableUnknownTokenSequence:withMask:
T@"SGMicrodataDocument",R,V_document
T@"SGMicrodataParserStackItem",R,V_parent
T@"NSArray",R,V_textConsumers
T@"NSArray",R,V_itemScopes
_document
_parent
_textConsumers
_itemScopes
initWithParent:item:htmlId:textConsumer:
document
parent
textConsumers
itemScopes
summarizeStreamByMessage
summarizeStreamByMessageStartingFromDaysAgo:
summarizeStreamByMessageWithPublisher:
sinkWithCompletion:receiveInput:
eventBody
publisherFromStartTime:
initWithPrivateStreamIdentifier:storeConfig:
newPrivateStreamDefaultConfigurationWithStoreBasePath:
T@"NSString",&,V_language
Tq,V_windowLength
_rng
_windowLength
initWithLanguage:windowLength:
isEqualToContactSharingTransformer:
setLanguage:
windowLength
setWindowLength:
removeObjectsAtIndexes:
indexSetWithIndexesInRange:
asset
notificationQueue
localeAsset
localeAssetIdentifier
downloadMetadataWithCompletion:
initWithAssetTypeDescriptorPath:defaultBundlePath:matchingKeysAndValues:notificationQueue:logHandle:enableAssetUpdates:
commitTag:
loadTagForPrimaryKey:
_externalEKStore
initWithSGSqlEntityStore:andEKStore:
ekStore
addEvent:commit:
_updateEvent:withValuesFrom:ekStore:
cancelEvent:commit:
_eventsAssociatedWithStorageEvent:store:
_addEKEventToCalendar:storageEvent:ekStore:commit:
_updateEKEvent:withEvent:ekStore:error:
_cancelEKEvent:ekStore:error:
_isEKEventFromSuggestedCalendar:ekStore:
_isEKEventFromNLEventsCalendar:ekStore:
_removeEvent:commit:
_updateEventMetadataInModifiedEvent:withExistingCheckInShortcutInOriginalEvent:ifTeamIdentifierIsDifferentInStorageEvent:
_removeEKEvent:store:commit:
removeEvent:span:error:
setCustomObject:forKey:
jsonObject
participants
originBundleId
categoryDescription
eventActivities
updateEventToEvent:
setSuggestionInfo:
initWithEventStore:opaqueKey:uniqueKey:extractionGroupIdentifier:
shouldAllowNotificationsInCalendarWithAllowListOverride:
suggestedEventCalendar
naturalLanguageSuggestedEventCalendar
commit:
isEqualToLocation:
radius
structuredLocation
mergeIntoEKEvent:withStore:preservingValuesDifferentFrom:
isNaturalLanguageEventAttributes
defaultEKStore
T@"NSString",&,N,V_componentName
TB,N,V_significantWork
_componentName
hasComponentName
setSignificantWork:
setHasSignificantWork:
hasSignificantWork
componentName
setComponentName:
_abortDueToSqliteError:onError:
placeCorruptionMarker
_handle_SQLITE_CORRUPT:onError:
attributesOfFileSystemForPath:error:
_handle_SQLITE_FULL:onError:
_handle_SQLITE_CANTOPEN:onError:
_handle_SQLITE_IOERR:onError:
_handle_SQLITE_ERROR:onError:
_handle_SQLITE_INTERNAL:onError:
_handle_SQLITE_PERM:onError:
_handle_SQLITE_ABORT:onError:
_handle_SQLITE_BUSY:onError:
_handle_SQLITE_LOCKED:onError:
_handle_SQLITE_NOMEM:onError:
_handle_SQLITE_READONLY:onError:
_handle_SQLITE_INTERRUPT:onError:
_handle_SQLITE_NOTFOUND:onError:
_handle_SQLITE_PROTOCOL:onError:
_handle_SQLITE_EMPTY:onError:
_handle_SQLITE_SCHEMA:onError:
_handle_SQLITE_TOOBIG:onError:
_handle_SQLITE_CONSTRAINT:onError:
_handle_SQLITE_MISMATCH:onError:
_handle_SQLITE_MISUSE:onError:
_handle_SQLITE_NOLFS:onError:
_handle_SQLITE_AUTH:onError:
_handle_SQLITE_FORMAT:onError:
_handle_SQLITE_RANGE:onError:
_handle_SQLITE_NOTADB:onError:
_handle_SQLITE_NOTICE:onError:
_handle_SQLITE_WARNING:onError:
_handle_SQLITE_IOERR_READ:onError:
_handle_SQLITE_IOERR_SHORT_READ:onError:
_handle_SQLITE_IOERR_WRITE:onError:
_handle_SQLITE_IOERR_FSYNC:onError:
_handle_SQLITE_IOERR_DIR_FSYNC:onError:
_handle_SQLITE_IOERR_TRUNCATE:onError:
_handle_SQLITE_IOERR_FSTAT:onError:
_handle_SQLITE_IOERR_UNLOCK:onError:
_handle_SQLITE_IOERR_RDLOCK:onError:
_handle_SQLITE_IOERR_DELETE:onError:
_handle_SQLITE_IOERR_BLOCKED:onError:
_handle_SQLITE_IOERR_NOMEM:onError:
_handle_SQLITE_IOERR_ACCESS:onError:
_handle_SQLITE_IOERR_CHECKRESERVEDLOCK:onError:
_handle_SQLITE_IOERR_LOCK:onError:
_handle_SQLITE_IOERR_CLOSE:onError:
_handle_SQLITE_IOERR_DIR_CLOSE:onError:
_handle_SQLITE_IOERR_SHMOPEN:onError:
_handle_SQLITE_IOERR_SHMSIZE:onError:
_handle_SQLITE_IOERR_SHMLOCK:onError:
_handle_SQLITE_IOERR_SHMMAP:onError:
_handle_SQLITE_IOERR_SEEK:onError:
_handle_SQLITE_IOERR_DELETE_NOENT:onError:
_handle_SQLITE_IOERR_MMAP:onError:
_handle_SQLITE_IOERR_GETTEMPPATH:onError:
_handle_SQLITE_IOERR_CONVPATH:onError:
_handle_SQLITE_IOERR_VNODE:onError:
_handle_SQLITE_IOERR_AUTH:onError:
_handle_SQLITE_LOCKED_SHAREDCACHE:onError:
_handle_SQLITE_BUSY_RECOVERY:onError:
_handle_SQLITE_BUSY_SNAPSHOT:onError:
_handle_SQLITE_CANTOPEN_NOTEMPDIR:onError:
_handle_SQLITE_CANTOPEN_ISDIR:onError:
_handle_SQLITE_CANTOPEN_FULLPATH:onError:
_handle_SQLITE_CANTOPEN_CONVPATH:onError:
_handle_SQLITE_CORRUPT_VTAB:onError:
_handle_SQLITE_READONLY_RECOVERY:onError:
_handle_SQLITE_READONLY_CANTLOCK:onError:
_handle_SQLITE_READONLY_ROLLBACK:onError:
_handle_SQLITE_READONLY_DBMOVED:onError:
_handle_SQLITE_ABORT_ROLLBACK:onError:
_handle_SQLITE_CONSTRAINT_CHECK:onError:
_handle_SQLITE_CONSTRAINT_COMMITHOOK:onError:
_handle_SQLITE_CONSTRAINT_FOREIGNKEY:onError:
_handle_SQLITE_CONSTRAINT_FUNCTION:onError:
_handle_SQLITE_CONSTRAINT_NOTNULL:onError:
_handle_SQLITE_CONSTRAINT_PRIMARYKEY:onError:
_handle_SQLITE_CONSTRAINT_TRIGGER:onError:
_handle_SQLITE_CONSTRAINT_UNIQUE:onError:
_handle_SQLITE_CONSTRAINT_VTAB:onError:
_handle_SQLITE_CONSTRAINT_ROWID:onError:
_handle_SQLITE_NOTICE_RECOVER_WAL:onError:
_handle_SQLITE_NOTICE_RECOVER_ROLLBACK:onError:
_handle_SQLITE_WARNING_AUTOINDEX:onError:
_handle_SQLITE_AUTH_USER:onError:
_handle_UNKNOWN_ERROR:onError:
stringByAppendingFormat:
freeSpace
setUsesGroupingSeparator:
setGroupingSeparator:
setUsesSignificantDigits:
setMinimumSignificantDigits:
setMaximumSignificantDigits:
trackEventWithScalar:errorCode:
dbErrorWithCode:sqliteReturnValue:lastErrno:query:
_handle_sqlite_error_code:error:onError:
stringByDeletingLastPathComponent
corruptionMarkerFilename
corruptionMarkerPathForPath:
corruptionMarkerPath
TB,R,N,V_journaling
_directoryPath
_serialNumber
_journaling
_currentFile
runQuery:values:onDb:
_executeFile:onDb:becameLocked:
executeQueriesOnDatabase:
deleteAllJournaledQueries
journaling
_binderForDictionary:
_allowedTypesForQueryKeyedArchives
journalWithName:
journalForInMemoryDb
@"CSPerson"
@"NSArray"
@"NSString"
@24@0:8@16
@32@0:8@16@24
@16@0:8
@24@0:8^{_NSZone=}16
v24@0:8@16
B16@0:8
v20@0:8B16
v16@0:8
B24@0:8@16
@"NSObject<PMLTransformerProtocol>"
@24@0:8@"NSMutableArray"16
@40@0:8@16@"NSArray"24@"NSDictionary"32
@40@0:8@16@24@32
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
{?="model"b1"supervision"b1"result"b1}
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
{?="exitCode"b1}
v20@0:8I16
I16@0:8
{?="app"b1"wasKnownContact"b1"wasSuggestedContact"b1}
@32@0:8Q16@24
@"INPersonHandle"
@"NSDate"
@"NSPersonNameComponents"
@"SGSocialProfileDetails"
@56@0:8@16@24@32@40@48
v48@0:8@16@24q32@40
v40@0:8@16@24@32
{?="messageId"b1"saliencyScore"b1"isRead"b1}
v24@0:8Q16
v24@0:8d16
d16@0:8
{?="app"b1"wasSuggestedContact"b1}
@32@0:8@16^@24
@24@0:8q16
@60@0:8@16@24@32@40C48q52
B28@0:8C16@20
{_PASDBIterAction_=B}32@0:8@16^{sqlite3_stmt=}24
B32@0:8q16^q24
B32@0:8@16^q24
B32@0:8@16@24
@"<PMLMultiLabelClassifierProtocol>"
@"<PMLTransformerProtocol>"
@"SGModelSource"
@48@0:8@16@24@32@40
@32@0:8@16Q24
#24@0:8Q16
@40@0:8@16@24Q32
@"PMLSessionDescriptor"
@40@0:8@16@24#32
v24@0:8#16
@40@0:8Q16Q24@32
B32@0:8Q16@24
{?="detail"b1"extractionModelVersion"b1"extractionSignatureSource"b1"foundInSenderCNContact"b1"outcome"b1"source"b1"isUnlikelyPhone"b1"signature"b1}
{?="detail"b1"foundIn"b1"source"b1"tokens"b1"hasName"b1}
q24@0:8@16
{?="cacheHit"b1}
{?="contactDetail"b1"mode"b1"model"b1"supervision"b1"correct"b1"result"b1}
v40@0:8@16@24@?32
@32@0:8@16@?24
v32@0:8@16@24
@52@0:8@16@24@32@40B48
B32@0:8@16q24
@56@0:8@16C24@28@36@44B52
@24@0:8^@16
@40@0:8@16@24^@32
@52@0:8@16C24@28@36@44
C16@0:8
@"NSMutableDictionary"
@"RTRoutineManager"
v40@0:8@"SGTextMessage"16@"SGPipelineEntity"24@"SGRequestContext"32
v40@0:8@"SGSimpleMailMessage"16@"SGPipelineEntity"24@"SGRequestContext"32
@56@0:8@16@24@32@40Q48
@80@0:8@16@24C32@36C44@48C56@60@68B76
@32@0:8q16@24
@28@0:8@16B24
B36@0:8@16@24B32
@40@0:8@16@24@?32
{?="app"b1}
{?="errorCode"b1}
@"SGSqlEntityStore"
@"SGURLDissector"
@"HVConsumerReply"24@0:8@"HVConsumptionContext"16
@"HVConsumerReply"24@0:8@"HVSpotlightDeletionRequest"16
@"FIAPResult"16@0:8
@"FIAPResult"24@0:8@"CSSearchableItem"16
@"FIAPResult"32@0:8@"CSUserAction"16@"CSSearchableItem"24
@"FIAPResult"40@0:8@"INInteraction"16@"NSString"24@"NSString"32
v32@0:8@"NSString"16@"NSArray"24
v24@0:8@"NSString"16
@84@0:8@16@24@32@40B48@52@60@68@76
@76@0:8@16@24@32@40B48@52@60@68
@32@0:8@16q24
q32@0:8q16@24
q32@0:8q16{SGUnixTimestamp_=d}24
{?="method"b1}
{?="customResponsesAfterPruning"b1}
@"NSMutableArray"
@32@0:8@16B24B28
@"SGMContactDetailExtraction"
@"SGMContactDetailSent"
@"PETEventTracker2"
v76@0:8{SGMDocumentType_=Q}16B24B28{SGMContactDetailType_=Q}32{SGMContactDetailExtractionOutcome_=Q}40{SGMContactDetailOwner_=Q}48@56B64{SGMContactDetailExtractionSignatureSource_=Q}68
v76@0:8{SGMContactDetailExtractionOutcome_=Q}16{SGMContactDetailType_=Q}24@32B40B44Q48@56@64B72
v48@0:8{SGMContactDetailExtractionOutcome_=Q}16@24B32B36@40
v60@0:8{SGMContactDetailExtractionOutcome_=Q}16@24B32B36@40@48B56
v68@0:8{SGMContactDetailExtractionOutcome_=Q}16@24B32B36@40{SGMContactDetailOwner_=Q}48@56B64
v52@0:8{SGMContactDetailExtractionOutcome_=Q}16@24{_NSRange=QQ}32B48
v48@0:8C16@20@28C36C40C44
v28@0:8B16i20i24
v40@0:8@16@24{SGMContactDetailFoundIn_=Q}32
v56@0:8@16@24@32@40q48
v64@0:8@16@24@32@40@48@56
@24@0:8@"NSString"16
B24@0:8q16
B44@0:8i16@20@?28@36
v32@0:8@16Q24
@"SGEntity"
@"SGCuratedEventKey"
@44@0:8@16i24@28@36
v24@0:8@"NSSet"16
@"NSXPCConnection"
@"SGSuggestHistory"
@"_PASNotificationToken"
@"NSOperationQueue"
@"SGDManagerForCTS"
@"SGEKEventStoreProvider"
@"CNContactStore"
@"NSDictionary"
@"NSLock"
@"SGXpcTransaction"
@"SGSearchableItemIdTriple"
@"SGFuture"
@"SGCoalescingDropBox"
@"_PASLock"
@"SGServiceContext"
v32@0:8@"NSData"16@?<v@?@"SGXPCResponse1">24
v40@0:8@"NSDictionary"16@"NSArray"24@?<v@?@"SGXPCResponse1">32
v32@0:8@16@?24
v40@0:8@"CSSearchableItem"16Q24@?<v@?@"SGXPCResponse3">32
v48@0:8@"CSSearchableItem"16@"NSString"24Q32@?<v@?@"SGXPCResponse3">40
v48@0:8@"CSSearchableItem"16@"NSString"24Q32@?<v@?@"SGXPCResponse1">40
v48@0:8@"NSArray"16@"NSString"24Q32@?<v@?@"SGXPCResponse3">40
v40@0:8@16Q24@?32
v48@0:8@16@24Q32@?40
v36@0:8@"SGRealtimeContact"16i24@?<v@?@"SGXPCResponse">28
v36@0:8@"SGRecordId"16i24@?<v@?@"SGXPCResponse">28
v36@0:8@16i24@?28
v32@0:8@"SGRealtimeEvent"16@?<v@?@"SGXPCResponse">24
v32@0:8@"SGRecordId"16@?<v@?@"SGXPCResponse">24
v40@0:8@"NSString"16@"NSDate"24@?<v@?@"SGXPCResponse1">32
v32@0:8@"NSString"16@?<v@?@"SGXPCResponse1">24
v52@0:8@"NSDate"16@"NSDate"24Q32I40@?<v@?@"SGXPCResponse1">44
v60@0:8@"NSDate"16@"NSDate"24@"NSString"32Q40I48@?<v@?@"SGXPCResponse1">52
v36@0:8Q16I24@?<v@?@"SGXPCResponse1">28
v32@0:8@"SGRecordId"16@?<v@?@"SGXPCResponse1">24
v24@0:8@?<v@?@"SGXPCResponse1">16
v24@0:8@?<v@?@"SGXPCResponse">16
v56@0:8@"NSURL"16@"NSString"24@"NSString"32@"NSDate"40@?<v@?@"SGXPCResponse1">48
v48@0:8@"NSData"16@"NSString"24Q32@?<v@?@"SGXPCResponse1">40
v28@0:8B16@?<v@?@"SGXPCResponse">20
v64@0:8@"NSArray"16@"NSArray"24@"NSString"32d40@"NSArray"48@?<v@?@"SGXPCResponse1">56
v32@0:8@"NSArray"16@?<v@?@"SGXPCResponse">24
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"SGXPCResponse">32
v56@0:8@"NSString"16@"NSString"24@"NSDate"32@"NSDate"40@?<v@?@"SGXPCResponse">48
v56@0:8@"NSString"16@"NSData"24@"NSString"32Q40@?<v@?@"SGXPCResponse1">48
v48@0:8@"SGSimpleMailMessage"16@"NSData"24Q32@?<v@?@"SGXPCResponse1">40
v52@0:8@16@24Q32I40@?44
v60@0:8@16@24@32Q40I48@?52
v36@0:8Q16I24@?28
v24@0:8@?16
v56@0:8@16@24@32@40@?48
v28@0:8B16@?20
v64@0:8@16@24@32d40@48@?56
v56@0:8@16@24@32Q40@?48
v40@0:8@"NSData"16@"NSData"24@?<v@?@"SGXPCResponse">32
v40@0:8@"NSString"16@"NSArray"24@?<v@?@"SGXPCResponse">32
v40@0:8@"NSString"16@"_PASDomainSelection"24@?<v@?@"SGXPCResponse">32
v32@0:8@"NSString"16@?<v@?@"SGXPCResponse">24
v32@0:8@"NSArray"16@?<v@?@"SGXPCResponse1">24
v32@0:8Q16@?<v@?@"SGXPCResponse1">24
v32@0:8Q16@?24
v32@0:8@"SGReminder"16@?<v@?@"SGXPCResponse">24
v56@0:8@"NSString"16@"NSURL"24@"NSLocale"32B40B44@?<v@?@"SGXPCResponse1">48
v32@0:8@"SGSuggestedEventLaunchInfo"16@?<v@?@"SGXPCResponse">24
v40@0:8@"NSURL"16@"NSString"24@?<v@?@"SGXPCResponse1">32
v44@0:8@"NSURL"16@"NSString"24B32@?<v@?@"SGXPCResponse1">36
v48@0:8@"NSURL"16@"NSString"24@"NSString"32@?<v@?@"SGXPCResponse1">40
v56@0:8@16@24@32B40B44@?48
v44@0:8@16@24B32@?36
v48@0:8@16@24@32@?40
v28@0:8I16@?<v@?@"SGXPCResponse1">20
v52@0:8@"NSDate"16@"NSDate"24@"NSSet"32I40@?<v@?@"SGXPCResponse1">44
v64@0:8@"NSDate"16@"NSDate"24@"NSSet"32@"NSString"40C48I52@?<v@?@"SGXPCResponse1">56
v36@0:8C16@"NSString"20@?<v@?@"SGXPCResponse">28
v28@0:8I16@?20
v52@0:8@16@24@32I40@?44
v64@0:8@16@24@32@40C48I52@?56
v36@0:8C16@20@?28
v40@0:8@"CNContact"16Q24@?<v@?@"SGXPCResponse1">32
v40@0:8@"NSString"16Q24@?<v@?@"SGXPCResponse1">32
v40@0:8@"NSArray"16Q24@?<v@?@"SGXPCResponse1">32
v32@0:8@"SGSocialProfile"16@?<v@?@"SGXPCResponse1">24
v48@0:8@"NSString"16Q24B32B36@?<v@?@"SGXPCResponse1">40
v24@0:8@?<v@?@"SGXPCResponse3">16
v36@0:8B16Q20@?<v@?@"SGXPCResponse1">28
v48@0:8@16Q24B32B36@?40
v36@0:8B16Q20@?28
v40@0:8@"CSSearchableItem"16Q24@?<v@?@"SGXPCResponse1">32
v40@0:8@"NSArray"16Q24@?<v@?@"SGXPCResponse">32
v40@0:8@"NSArray"16@"NSArray"24@?<v@?@"SGXPCResponse">32
v32@0:8@"SGMailHeaders"16@?<v@?@"SGXPCResponse1">24
v40@0:8@"NSString"16q24@?<v@?@"SGXPCResponse1">32
v40@0:8@16q24@?32
v36@0:8@"SGRecordId"16C24@?<v@?@"SGXPCResponse1">28
v36@0:8@16C24@?28
v40@0:8Q16Q24@"NSString"32
v44@0:8i16@"SGRecordId"20@"NSString"28@"NSString"36
v40@0:8@"SGRecordId"16@"NSString"24@"NSString"32
v32@0:8@"NSString"16S24S28
v32@0:8@"SGRecordId"16S24S28
v40@0:8Q16Q24@32
v44@0:8i16@20@28@36
v32@0:8@16S24S28
S24@0:8@16
@40@0:8@16@?24@?32
B40@0:8@16@24@32
B48@0:8@16@24@32Q40
v44@0:8@16@24i32@?36
v48@0:8@16@24B32i36@?40
B32@0:8@?16@24
{SGMContactDetailUsedApp_=Q}24@0:8@16
@32@0:8@?16@?24
@"NSDataDetector"
@"NSMutableOrderedSet"
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
q16@0:8
@"SGDWorkQueueName"
@"NSObject<NSSecureCoding>"
@24@0:8Q16
@32@0:8Q16Q24
Q32@0:8@16^{adler32_t=Q}24
Q32@0:8@16@24
{?="documentSource"b1"harvestSource"b1"harvestedOnBattery"b1"highPriority"b1"receivedOnBattery"b1}
@"NSData"
@24@0:8r*16
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_source>"
@"NSObject<OS_dispatch_semaphore>"
{SGDSuggestManagerCTSCriteriaState="hasItemsHighPriority"B"hasItemsLowPriority"B}
@"<SGXPCActivityManagerProtocol>"
B36@0:8@16C24@?28
B48@0:8@16@24@32@40
B56@0:8@16@24@32@40@48
@?24@0:8@?16
@?16@0:8
C32@0:8@16@24
@"CKContextClient"
@"PPTextToTopicTransform"
@52@0:8@16B24@28@36d44
@72@0:8@16B24@28B36@40@48@56d64
v76@0:8@16B24@28@36B44B48@?52@?60d68
v48@0:8@16@24@?32d40
@"SGMEventICSOpportunity"
@"SGAccountsAdapter"
{SGMEventICSSourceType_=Q}24@0:8@16
q64@0:8@16@24@32Q40{_NSRange=QQ}48
@40@0:8q16q24@32
@40@0:8@16@24^B32
@"SGContactDetail"
@"NSMutableSet"
@"SGRecordId"
@"SGContactDetailsHolder"
@24@0:8^I16
v32@0:8@16d24
d32@0:8@16d24
d24@0:8@16
v48@0:8d16d24@32@40
{?="conversationProbability"b1"domainFromSenderProbability"b1"personCCRecipientsProbability"b1"personFromSenderInDyadicConversationProbability"b1"personFromSenderProbability"b1"personToRecipientsProbability"b1"subjectContentProbability"b1}
v20@0:8f16
f16@0:8
@"NSSet"
@"ACAccountStore"
v24@0:8@"SGStorageReminder"16
v24@0:8@"SGStorageContact"16
v24@0:8@"SGStorageEvent"16
v24@0:8@"NSArray"16
@"REMStore"
@"SGMIMetricsSubmodelAgeVector"
@"SGMIMetricsTrialMetadata"
{?="cTSTimeBiomeAggregation"b1"cTSTimeSubmodelUpdate"b1"isSubmodelRebuilt"b1}
@44@0:8@16B24@28^@36
@48@0:8@16i24@?28@36B44
@32@0:8@16^i24
@68@0:8@16@24@32i40@?44@52@60
@"SGExtractionInfo"
{_NSRange="location"Q"length"Q}
{_NSRange=QQ}16@0:8
v32@0:8{_NSRange=QQ}16
@40@0:8@16Q24Q32
@"_PASLazyPurgeableResult"
v48@0:8@16@?24@?32@?40
@52@0:8@16@24@32B40@?44
v52@0:8@16Q24@32@40S48
@60@0:8@16@24@32@40B48@52
@52@0:8@16@24@32B40@44
{?="_featureType"{?="bom"S"tag"S}"hasInhumanHeaders"B"inhumanEmailAddress"B"inhumanAuthorName"B"inhumanBody"B"isTemplate"B}
@"_PASLazyResult"
@"SGMessage"
@"SGSimpleMailMessage"
@"SGTextMessage"
@"INInteraction"
@"SGHarvestQueueMetrics"
v24@0:8{SGUnixTimestamp_=d}16
v64@0:8@16@24@32{_NSRange=QQ}40@56
@64@0:8@16@24@32{_NSRange=QQ}40@56
^{?={?=SS}BBBBB}16@0:8
@"SGDuplicateKey"
{SGUnixTimestamp_="secondsFromUnixEpoch"d}
@"SGSimpleTimeRange"
{SGUnixTimestamp_=d}16@0:8
v24@0:8q16
@"NSUbiquitousKeyValueStore"
@"SGNoCloudNSUbiquitousKeyValueStore"
@36@0:8@16@24B32
@32@0:8@16{SGUnixTimestamp_=d}24
@36@0:8@16{SGUnixTimestamp_=d}24B32
v32@0:8@16{SGUnixTimestamp_=d}24
@44@0:8@16@24@32B40
{?="conversationAge"b1"domainFromSenderAge"b1"personCCRecipientsAge"b1"personFromSenderAge"b1"personFromSenderInDyadicConversationAge"b1"personToRecipientsAge"b1"subjectContentAge"b1}
@36@0:8@16Q24B32
{_NSRange=QQ}24@0:8@16
^{__DDResult={__CFRuntimeBase=QAQ}{__DDQueryRange={__DDQueryOffset=b32b32}{__DDQueryOffset=b32b32}}{?=qq}q^{__CFArray}^{__CFString}^{__CFString}^v^{__CFDictionary}qCf}
v32@0:8^{__DDResult={__CFRuntimeBase=QAQ}{__DDQueryRange={__DDQueryOffset=b32b32}{__DDQueryOffset=b32b32}}{?=qq}q^{__CFArray}^{__CFString}^{__CFString}^v^{__CFDictionary}qCf}16@24
@"NSTimeZone"
@"SGPostalAddressComponents"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@84@0:8I16{_NSRange=QQ}20{_NSRange=QQ}36@52{_NSRange=QQ}60@76
@92@0:8i16{_NSRange=QQ}20{_NSRange=QQ}36@52{_NSRange=QQ}60@76@84
@132@0:8@16@24@32@40I48{_NSRange=QQ}52{_NSRange=QQ}68@84{_NSRange=QQ}92@108B116B120B124B128
@92@0:8I16{_NSRange=QQ}20{_NSRange=QQ}36@52{_NSRange=QQ}60@76@84
B24@0:8^{__DDResult={__CFRuntimeBase=QAQ}{__DDQueryRange={__DDQueryOffset=b32b32}{__DDQueryOffset=b32b32}}{?=qq}q^{__CFArray}^{__CFString}^{__CFString}^v^{__CFDictionary}qCf}16
@48@0:8@16@24^{_NSRange=QQ}32@40
@32@0:8@16d24
@"PPUniversalSearchSpotlightIndexScorer"
@"PPLocalNamedEntityStore"
@"NSCache"
@36@0:8@16i24@28
@24@0:8@?16
B60@0:8@16@24@32@40@48B56
B64@0:8@16@24@32@40@48B56B60
v44@0:8@16@24I32d36
v48@0:8^{graph_t=II^{_vertex_t}}16@24^{DisjointSetHandle=}32@40
@"SGPatternDataFile"
@"NSHashTable"
@24@0:8#16
@28@0:8@16i24
@"NSString"24@0:8@"NSString"16
@"_PASCachedResult"
@"SGSimpleNamedEmailAddress"
@"SGNamedEntityDissector"
@64@0:8@16@24@32@40@48@56
@68@0:8@16@24B32@36@44@52@60
B48@0:8@16@24^@32@40
v88@0:8@16@24@32@40@48@56@64@72@80
B56@0:8@16@24^B32^Q40^@48
B64@0:8@16@24@32^B40^Q48^@56
@"<PMLTrainingProtocol>"
@"NSMutableData"
^{_xmlParserCtxt=^{_xmlSAXHandler}^v^{_xmlDoc}ii**ii^{_xmlParserInput}ii^^{_xmlParserInput}^{_xmlNode}ii^^{_xmlNode}i{_xmlParserNodeInfoSeq=QQ^{_xmlParserNodeInfo}}iiiiii{_xmlValidCtxt=^v^?^?^{_xmlNode}ii^^{_xmlNode}I^{_xmlDoc}i^{_xmlValidState}ii^{_xmlValidState}^{_xmlAutomata}^{_xmlAutomataState}}ii**ii^*qqiii***^iii^ii^{_xmlParserInput}iiii^vii^vii^{_xmlDict}^*ii***iii^*^i^^v^{_xmlHashTable}^{_xmlHashTable}iiii^{_xmlNode}i^{_xmlAttr}{_xmlError=ii*i*i***ii^v^v}iQQ^{_xmlParserNodeInfo}ii^{_xmlParserNodeInfo}iQ}
@"NSMutableIndexSet"
@"NSNumber"
@72@0:8@16@24@32@40@48@56@64
I32@0:8@16^{_LXLexicon=}24
@48@0:8@16@24@32^@40
@32@0:8@16^B24
B48@0:8@16@24^@32@?40
B56@0:8@16@24@32^@40@?48
@"NSCharacterSet"
^{?=QS[3c]}
@40@0:8@16Q24i32B36
^{?=QS[3c]}24@0:8r*16
Q24@0:8r*16
i24@0:8r*16
@32@0:8r*16@24
@"<SGSeekable>"
@44@0:8@16S24@28@36
@28@0:8@16S24
@44@0:8@16@24S32@36
@52@0:8@16@24S32@36@44
@32@0:8@16#24
@48@0:8@16@24@32#40
v40@0:8Q16@24@?32
@"<SGBloomFilterChunk>"
v24@0:8(?=Q(?=II))16
B24@0:8(?=Q(?=II))16
[49200C]
@"SGConversationTracker"
B24@0:8@"<SGConversationTurnProtocol>"16
@"NSDate"16@0:8
@"NSRegularExpression"
@32@0:8@16i24i28
@36@0:8@16i24i28i32
@"MLFeatureValue"24@0:8@"NSString"16
@"NSSet"16@0:8
@"MLMultiArray"
@88@0:8@16@24@32@40@48@56@64@72@80
@24@0:8S16S20
@52@0:8@16@24@32@40S48
@68@0:8@16S24@28@36@44@52Q60
v68@0:8@16S24@28@36@44@52Q60
@28@0:8S16S20S24
v40@0:8@16@24S32S36
@20@0:8S16
Q24@0:8@16
{?="widgetViewId"b1"index"b1}
v28@0:8i16@?<v@?@"NSObject<OS_xpc_object>">20
@"NSObject<OS_xpc_object>"20@0:8i16
q24@0:8@"NSObject<OS_xpc_object>"16
B32@0:8@"NSObject<OS_xpc_object>"16q24
v36@0:8@"NSObject<OS_xpc_object>"16@"NSObject<OS_xpc_object>"24i32
B24@0:8@"NSObject<OS_xpc_object>"16
@"NSObject<OS_xpc_object>"24@0:8@"NSObject<OS_xpc_object>"16
v28@0:8i16@?20
v36@0:8@16@24i32
@24@0:8d16
@"SGLongRunningTaskManager"
(?="ascii"[0c]"utf16"[0S])
S24@0:8Q16
v40@0:8^S16{_NSRange=QQ}24
r*16@0:8
r*20@0:8B16
r^S16@0:8
@40@0:8@16{_NSRange=QQ}24
@44@0:8@16{_NSRange=QQ}24i40
I24@0:8@"NSString"16
I24@0:8@16
@"JSVirtualMachine"
@"JSContext"
@"SGReverseTemplatesJSDataDetectors"
@"NSURL"
@"NSISO8601DateFormatter"
v32@0:8@"NSDictionary"16@?<v@?B>24
v32@0:8@"NSDictionary"16@?<v@?@"NSArray"@"NSDictionary"@"NSArray"@"NSDictionary">24
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary">24
v32@0:8@"NSDictionary"16@?<v@?@"NSString">24
v40@0:8@"NSArray"16@"NSArray"24@?<v@?@"NSDictionary">32
v32@0:8@"NSString"16@?<v@?@"SGDOMParserResult">24
v48@0:8@16@24@32@40
@"SGSqliteDatabase"
@44@0:8@16i24^@28@36
B44@0:8q16i24@28@?36
@"SGSqliteDatabaseImpl"
@"SGSqliteDatabaseSharedLock"
^{sqlite3=}16@0:8
B40@0:8@16@?24@?32
B48@0:8@16@?24@?32@?40
B32@0:8@16@?24
@56@0:8@16@24@32@?40@?48
B24@0:8@?16
B20@0:8I16
i32@0:8^{sqlite3_stmt=}16r*24
i36@0:8^{sqlite3_stmt=}16r*24i32
i40@0:8^{sqlite3_stmt=}16r*24q32
i40@0:8^{sqlite3_stmt=}16r*24d32
i40@0:8^{sqlite3_stmt=}16r*24@32
@56@0:8@16@24d32@40@48
v52@0:8@16@24@32@40B48
@44@0:8@16@24B32Q36
@20@0:8C16
v72@0:8@16@24@32Q40@48@56B64B68
v68@0:8@16@24@32B40Q44@52@60
v36@0:8@16@24B32
@"SGMIMetricsWidgetItem"
{?="widgetViewId"b1"widgetSize"b1"isSmartSortOn"b1}
q32@0:8@16q24
v32@0:8{SGUnixTimestamp_=d}16@?24
v40@0:8{SGUnixTimestamp_=d}16@?24Q32
v28@0:8@16B24
v32@0:8@16B24B28
@"SGDSqlHarvestQueueStore"
@"SGDHarvestQueueFileWriter"
@"SGDHarvestQueueFileReader"
v32@0:8^Q16^Q24
v56@0:8@16@24B32C36@40@?48
v72@0:8@16@24B32C36B40d44i52@56@?64
v40@0:8{?=iiI}16i28@?32
v28@0:8C16@?20
v32@0:8q16@?24
v112@0:8{?=BBBiii{?=iiI}{?=iiI}{?=iiI}qBdi}16@?104
v28@0:8q16i24
@"SGDHarvestQueueOnDisk"
@68@0:8@16q24i32@36i44C48B52d56i64
@"CSSearchableItem"
@56@0:8q16@24i32C36B40d44i52
@36@0:8@16i24^B28
v36@0:8{?=iiI}16@?28
i20@0:8i16
@"NSObject<OS_dispatch_io>"
v52@0:8@16@24B32@36@?44
@40@0:8@16Q24d32
@40@0:8Q16d24@32
v40@0:8@?16@?24@?32
q24@0:8q16
@"SGDHarvestQueueInMemory"
@68@0:8q16@24i32@36@44B52C56@60
@"SGDWorkQueue"
v56@0:8@16@24B32@36C44@?48
@"SGDWorkQueueItem"
@40@0:8@16@24B32C36
@"SGDHarvestQueueLegacy"
@"EAEmailAddressSet"
@40@0:8q16@24@32
v32@0:8@16q24
v40@0:8@16q24@32
v36@0:8@16@24f32
{?=b1b1b1b1b8b20}24@0:8@16
d32@0:8@16@24
B40@0:8@16@24d32
@92@0:8B16d20d28I36d40I48B52B56B60I64I68B72B76B80B84B88
v28@0:8d16I24
v48@0:8@16@24@32d40
@"NSArray"16@0:8
@24@0:8@"NSArray"16
@24@0:8^{sqlite3_stmt=}16
@28@0:8^{sqlite3_stmt=}16B24
f24@0:8@16
Q40@0:8Q16Q24Q32
Q24@0:8Q16
d32@0:8d16q24
Q40@0:8@16@24Q32
Q56@0:8@16@24Q32Q40Q48
@64@0:8@16d24d32@40@48@56
v40@0:8@"WKWebView"16@"WKNavigationAction"24@?<v@?q>32
v48@0:8@"WKWebView"16@"WKNavigationAction"24@"WKWebpagePreferences"32@?<v@?q@"WKWebpagePreferences">40
v40@0:8@"WKWebView"16@"WKNavigationResponse"24@?<v@?q>32
v32@0:8@"WKWebView"16@"WKNavigation"24
v40@0:8@"WKWebView"16@"WKNavigation"24@"NSError"32
v40@0:8@"WKWebView"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"WKWebView"16
v40@0:8@"WKWebView"16@"NSURLAuthenticationChallenge"24@?<v@?B>32
v40@0:8@"WKWebView"16@"WKNavigationAction"24@"WKDownload"32
v40@0:8@"WKWebView"16@"WKNavigationResponse"24@"WKDownload"32
@"WKWebView"
@"NSData"16@0:8
@64@0:8@"NSString"16@"NSString"24d32d40d48@"NSData"56
@48@0:8d16d24d32@"NSData"40
@64@0:8@16@24d32d40d48@56
@48@0:8d16d24d32@40
@60@0:8i16@20@28@36d44d52
@68@0:8i16@20@28d36d44d52d60
@84@0:8i16@20@28@36d44d52d60d68@76
Q24@0:8q16
@28@0:8C16q20
@"CKRecordID"
@"CKServerChangeToken"
:24@0:8^{objc_property=}16
v48@0:8@16@24@32^v40
@"_PASKVOHandler"
@"CKDatabase"
@"APSConnection"
@"CKContainer"
@"_SGDCloudKitSyncPersistedState"
@"NSOperation"
@"NSError"
^{ct_green_tea_logger_s=}
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
@40@0:8@?16@?24Q32
@44@0:8@?16@?24Q32B40
@"SGDCloudKitSync"
@"NSMapTable"
v32@0:8@?16@24
@"<NSObject>"
v40@0:8@?16@24#32
@32@0:8C16C20@24
@92@0:8I16@20@28{_NSRange=QQ}36@52B60{_NSRange=QQ}64@80B88
@76@0:8I16@20{_NSRange=QQ}28@44@52B60@64B72
B28@0:8@16B24
@80@0:8@16@24@32@40@48@56@64@72
@"SGStorageEvent"
@"SGStorageContact"
@"SGStorageReminder"
@"IDSService"
@"SGQuickResponsesStore"
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
B48@0:8@16Q24@32@40
@?40@0:8@16@24@32
@?56@0:8@16@24@32@40@48
v44@0:8@16Q24B32@?36
v56@0:8@16Q24Q32@?40@?48
v52@0:8@16Q24B32Q36@?44
v72@0:8@16Q24@?32Q40@?48@56B64B68
B32@0:8@16Q24
v72@0:8@16@24@32@40@48@56@?64
{_opaque_pthread_cond_t="__sig"q"__opaque"[40c]}
@"NSObject<OS_os_transaction>"
@44@0:8r*16@?24@?32I40
v32@0:8@?16d24
q48@0:8@16@24@32@40
{?="category"S"subtype"S}
@36@0:8{?=SS}16Q20Q28
@36@0:8{?=SS}16{_NSRange=QQ}20
{?=SS}16@0:8
{_NSRange=QQ}48@0:8@16@24@32@40
{_NSRange=QQ}52@0:8@16{_NSRange=QQ}24B40@44
{_NSRange=QQ}40@0:8@16@24@32
B56@0:8@16{_NSRange=QQ}24Q40Q48
B40@0:8@16^{_NSRange=QQ}24^B32
@"CNContact"
{?="timestampSinceReference"b1"score"b1"isSalient"b1}
{SGUnixTimestamp_=d}24@0:8@16
@"SGPipelineEntity"
@56@0:8{_NSRange=QQ}16@32@40@48
B40@0:8{_NSRange=QQ}16@32
B32@0:8@16^@24
@36@0:8@16r*24B32
@32@0:8@16r*24
@36@0:8@16B24^B28
v48@0:8@16{_NSRange=QQ}24@?40
@32@0:8q16Q24
@36@0:8q16Q24B32
@40@0:8@16q24@?32
@56@0:8@16@?24Q32@40@48
@40@0:8@16@?24@32
@"HKHealthStore"
@"SGDetectedAttributeML"
@"SGQuickResponsesML"
@"SGContactPipelineHelper"
@"SGHKHealthStore"
@60@0:8@16@24^{_NSRange=QQ}32{_NSRange=QQ}40B56
v52@0:8@16@24C32@36C44C48
@40@0:8{_NSRange=QQ}16@32
@32@0:8@16^{_NSRange=QQ}24
v48@0:8@16@24{SGMSelfIdModelType_=Q}32Q40
@"SGM2HarvestCost"
@40@0:8@16B24B28B32i36
@"_PASXPCClientHelper"
v32@0:8@"NSArray"16@?<v@?@"NSDictionary"@"NSError">24
v40@0:8@"CSUserAction"16@"CSSearchableItem"24@?<v@?@"PPExtractionSet"@"NSError">32
v56@0:8@16@24@32@40Q48
v48@0:8@16@24@32Q40
v40@0:8@16@24Q32
v32@0:8d16@24
v40@0:8d16@24@32
v40@0:8@16Q24Q32
@56@0:8Q16@24{_NSRange=QQ}32@48
@"TRIClient"
@20@0:8B16
@80@0:8@16@24Q32@40@48@56@64@72
v40@0:8@16@24q32
@32@0:8@16^q24
@"NSFileManager"
Q40@0:8@16@24@32
v28@0:8B16B20B24
@"SGDatabaseJournal"
{atomic_flag="_Value"AB}
@"SGJournal"
@"SGSpotlightContactsAdapter"
@"SGSGtoCNContactsCacheUpdateAdapter"
@"SGBloomFilter"
@"SGKeyValueCacheManager"
@52@0:8@16@24B32@36B44B48
@28@0:8q16B24
v36@0:8@16B24@?28
v40@0:8@16B24B28@?32
v52@0:8@16B24Q28@?36@?44
@40@0:8@16Q24@?32
@44@0:8@16B24Q28@?36
@40@0:8@16B24B28Q32
d40@0:8@16@24@32
{_PASDBIterAction_=B}84@0:8@16@24q32@40@48@56@64@72B80
@28@0:8B16Q20
@40@0:8q16@24B32B36
q24@0:8Q16
@44@0:8{SGUnixTimestamp_=d}16{SGUnixTimestamp_=d}24Q32I40
@52@0:8{SGUnixTimestamp_=d}16{SGUnixTimestamp_=d}24@32Q40I48
@40@0:8{SGUnixTimestamp_=d}16{SGUnixTimestamp_=d}24Q32
@48@0:8{SGUnixTimestamp_=d}16{SGUnixTimestamp_=d}24@32Q40
@60@0:8{SGUnixTimestamp_=d}16{SGUnixTimestamp_=d}24Q32@40I48@?52
B36@0:8B16@20^@28
@40@0:8@16@24B32B36
@48@0:8@16@24B32@36B44
@44@0:8@16B24@28^B36
v24@0:8^@16
@"<SGReverseTemplateJS>"
v40@0:8@"INInteraction"16@"SGPipelineEntity"24@"SGRequestContext"32
@40@0:8@16@24d32
@48@0:8@16@24@32d40
B24@0:8Q16
v44@0:8@16@24Q32i40
v52@0:8@16@24@32Q40i48
v68@0:8@16@24@32@40@48Q56i64
v48@0:8Q16Q24Q32@40
@"NSDateFormatter"
@48@0:8@16@24d32@40
@32@0:8^{__DDResult=}16@24
v40@0:8^{__DDResult=}16@24@32
{?="accuracy"b1"latitude"b1"longitude"b1"quality"b1"locationType"b1}
@"SGMIModelStore"
@"SGMailClientUtil"
@"SGMIBiomeReducedMessageEvents"
@"SGMailIntelligenceStringHasher"
@84@0:8@16B24@28@36@44@52@60@68@76
@76@0:8@16B24@28@36@44@52@60@68
@68@0:8@16B24@28@36@44@52@60
@40@0:8@16B24q28B36
@"_DKKnowledgeStore"
{?="fromStatus"b1"toStatus"b1}
@84@0:8@16Q24@32B40@44@52@60{_NSRange=QQ}68
@76@0:8@16@24@32B40@44{_NSRange=QQ}52@68
B56@0:8Q16Q24Q32^@40@?48
B64@0:8Q16Q24Q32^@40@48@?56
{?="messageId"b1"userId"b1"category"b1"count128KBTo512KB"b1"count32KBTo128KB"b1"count512KBTo2MB"b1"count8KBTo32KB"b1"countOver2MB"b1"countUpTo8KB"b1}
v44@0:8@16B24@28@36
v24@0:8@"SGSqlEntityStore"16
@"NSNumber"16@0:8
@92@0:8@16@24@32@40@48@56@64d72@80B88
@100@0:8@16@24@32@40@48@56@64@72d80@88B96
C44@0:8@16@24d32B40
{?=QQq}16@0:8
v88@0:8q16@24@32C40B44d48i56i60^{?=iiI}64^{?=iiI}72^{?=iiI}80
{?=BBBiii{?=iiI}{?=iiI}{?=iiI}qBdi}32@0:8@16@?24
{?=BBBiii{?=iiI}{?=iiI}{?=iiI}qBdi}16@0:8
{?=BBBiii{?=iiI}{?=iiI}{?=iiI}qBdi}20@0:8C16
{?=BBBiii{?=iiI}{?=iiI}{?=iiI}qBdi}24@0:8q16
{?=BBBiii{?=iiI}{?=iiI}{?=iiI}qBdi}32@0:8@16@24
B28@0:8q16i24
@64@0:8Q16Q24Q32B40@44B52@56
@72@0:8Q16Q24Q32B40@44B52@56@64
{?="modelVersion"b1"offset"b1"dateIsCorrect"b1"didRegexTrigger"b1"didResponseKitTrigger"b1"isFromCongratulation"b1}
C24@0:8@16
@48@0:8@16@24q32@40
@48@0:8@16@24@32q40
v32@0:8q16@24
@48@0:8@16@24@32Q40
@72@0:8@16@24@32@40@48@56Q64
@"SGIdentityKey"
@"NSTimeZone"16@0:8
@56@0:8@"NSDate"16@"NSTimeZone"24@"NSDate"32@"NSTimeZone"40@"NSArray"48
@112@0:8@16@24@32@40@48{SGUnixTimestamp_=d}56{SGUnixTimestamp_=d}64@72@80@88@96I104B108
@"SGDSuggestManager"
v32@0:8@"NSArray"16@"NSString"24
v32@0:8@"NSDate"16@"NSString"24
v32@0:8@"CSUserAction"16@"CSSearchableItem"24
v40@0:8@"NSArray"16@"NSString"24@"NSString"32
v32@0:8@"NSString"16@"NSString"24
@48@0:8@16@24@32@?40
@56@0:8@16@24^{?={?=SS}iiiBBBBBfiiiiiB}32@40@48
@40@0:8@16@24^{?={?=SS}iiiBBBBBfiiiiiB}32
v56@0:8@16@24^@32^@40q48
B48@0:8@16@24B32B36q40
B64@0:8@16@24^@32^@40q48B56B60
@40@0:8@16^{?={?=SS}iiiBBBBBfiiiiiB}24@32
@56@0:8@16@24@32@40^@48
@"SGDCKInteractionInfo"
@"SGDCKTimeRange"
{?="creationTimestamp"b1"lastModifiedTimestamp"b1"parentEntityType"b1"categoryType"b1"allDay"b1"cancelled"b1}
d40@0:8@16@24d32
@"SGMINaiveBayesCountPair"
@64@0:8@16@24@32@40@48d56
@"<SGPortraitRequestProtocol>"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"PPInternalRequestHandler"
{?="deploymentId"b1}
@"NSLinguisticTagger"
@48@0:8@16B24B28@32@40
@44@0:8@16B24@28@36
@"SGMIMetricsSaliencyInference"
@"SGMIMetricsSubmodelOutputVector"
{?="messageId"b1"senderConnectionScore"b1"userId"b1}
{_NSRange=QQ}40@0:8{_NSRange=QQ}16Q32
@48@0:8@16{_NSRange=QQ}24@?40
q32@0:8@16@24
q36@0:8@16I24@28
f32@0:8@16@24
{SGMContactDetailOwner_=Q}16@0:8
{SGMContactDetailFoundIn_=Q}16@0:8
v64@0:8@16q24@32Q40@48@?56
v48@0:8r*16@24Q32@?40
i48@0:8r*16@24Q32@?40
@"SGRe2PrefilterTree"
@"NSIndexSet"
^{__CFString=}
{?="buffer"[64S]"theString"^{__CFString}"directUniCharBuffer"^S"directCStringBuffer"*"rangeToBuffer"{?="location"q"length"q}"bufferedRangeStart"q"bufferedRangeEnd"q}
@"SGMicrodataItem"
@"SGMicrodataParserStackItem"
v32@0:8@"CSSearchableIndex"16@?<v@?>24
v40@0:8@"CSSearchableIndex"16@"NSArray"24@?<v@?>32
v24@0:8@"CSSearchableIndex"16
@"NSData"48@0:8@"CSSearchableIndex"16@"NSString"24@"NSString"32o^@40
@"NSURL"52@0:8@"CSSearchableIndex"16@"NSString"24@"NSString"32B40o^@44
@48@0:8@16@24@32o^@40
@52@0:8@16@24@32B40o^@44
Q32@0:8Q16@24
v44@0:8Q16@24@?32i40
B20@0:8i16
{?="messageId"b1"timestampSinceReferenceGTE"b1"timestampSinceReferenceMail"b1"userId"b1"estimatedGroundTruth"b1}
@"NSObject<SGEntityKey>"
@40@0:8@16q24@32
@40@0:8@16{SGUnixTimestamp_=d}24@32
@"EMDaemonInterface"
@"ECDKIMVerifier"
q32@0:8@16^@24
q40@0:8@16q24^@32
@"SGTopicExtractionPlugin"
@"SGNamedEntityExtractionPlugin"
v56@0:8@"NSDictionary"16@"NSString"24@"NSString"32@"NSString"40@?<v@?@"NSError">48
B56@0:8@16@24@32@40^@48
@"_PASLRUCache"
v60@0:8@16S24S28@32@40C48d52
@32@0:8@16S24S28
@"SGTokenizerMappingTransformer"
@"SGNameMappingTransformer"
r^v24@0:8Q16
{?="end"b1"endUTCOffsetSeconds"b1"start"b1"startUTCOffsetSeconds"b1"floating"b1}
@"SGTopicDissector"
v72@0:8@16B24@28@36@44@52d60B68
B52@0:8@16@24B32@36@44
@72@0:8@16B24@28@36@44@52d60B68
@"SGStorageLocation"
@100@0:8@16@24@32@40@48C56@60C68@72C80@84@92
@24@0:8r^v16
B24@0:8{SGUnixTimestamp_=d}16
@56@0:8@16@24B32B36B40B44B48B52
{_NSRange=QQ}32@0:8{_NSRange=QQ}16
@52@0:8@16@24B32B36B40B44B48
{_NSRange=QQ}40@0:8{_NSRange=QQ}16@32
@40@0:8@16B24B28B32B36
@40@0:8Q16@24@32
#24@0:8@16
v28@0:8@16S24
@"SGMicrodataDocument"
{?="s"[2Q]}
@"EKEventStore"
v44@0:8@16@24@32B40
B48@0:8@16@24@32^@40
B40@0:8@16@24^@32
{?="documentSource"b1"significantWork"b1}
@40@0:8Q16i24i28@32
B36@0:8i16@20@?28
@"SGDatabaseJournalFile"
B40@0:8@16@24^B32
@?24@0:8@16
