@333333
u2A333333
MbP?
@(#)PROGRAM:CoreSuggestionsInternals  PROJECT:Suggestions-1193.23.0.1
N3re28CompilerE
N3re26Regexp6WalkerINS_4FragEEE
N3re217NumCapturesWalkerE
N3re219NamedCapturesWalkerE
N3re218CaptureNamesWalkerE
 * . ` d f o 
 * . ` d f o 
 d f p t ~ 
!%!'!)!,!1!3!M!O!_!
$&$@$J$`$
)L+P+Y+
0 00070<0?0
1 2_2
-%-'-'-----
,.,0,^,0
&!&!
0!0)080;0
.0/011
2`2~2`
 *0-0
3W3f
(*359==XY`a
q q 
!$!$!&!&!(!(!*!-!/!9!<!?!E!I!N!N!
,.,0,^,`,
-%-'-'-----0-g-o-o-
-/./.
01050;0<0A0
1-111
q q 
 *!+!2!2!N!N!`!
!/!/!4!4!9!9!<!=!F!I!N!N!
!0,^,a,a,e,f,h,h,j,j,l,l,q,q,s,t,v,{,
-%-'-'-----A
q q 
 |,},o-o-/./.
01050;0;0
(*359==XY`a
5!8!0-g-
0<0<0A0
1-111
!$!$!&!&!(!(!*!-!0!3!>!?!E!E!
,.,`,`,b,d,g,g,i,i,k,k,m,p,r,r,u,u,~,
>DFHJMUVbc
-*0/0
AD
.0/0#
>@FHJMUVbc
-*0-0
fox~
p p t y 
0!0)080:0
1 2)2H2O2Q2_2
fo
0!0)080:0
x~p
p p t y 
 P!_!
1 2)2H2O2Q2_2
 ' 0 C E Q S ^ } ~ 
#)#*#h'u'
,p-p-
...0.;.
00000=0=0
? @ T T 3
.:.;.
00000
F F ~ ~ 
#*#*#i'i'k'k'm'm'o'o'q'q's's'u'u'
)#.#.%.%.'.'.).).
 : : 
.!.!.@
 9 9 
...
. . .
   ' 0 8 ; > A C G Q S S U ^ 
,p-p-
.*...0.9.
0=0=0
 E E } } 
#)#)#h'h'j'j'l'l'n'n'p'p'r'r't't'
)".".$.$.&.&.(.(.
000
D D R R z | 
!#!%!%!'!'!)!)!.!.!:!;!@!D!J!M!O!O!
##(#+#
$&$@$J$
)L+P+Y+
0 0 06070>0?0
2*2G2P2P2`2
D D R R z | 
!@!D!K!K!
" #!#|#|#
%o&o&
*0+D+G+L+)
!#!%!%!'!'!)!)!.!.!:!;!J!J!L!M!O!O!
#"#(#+#{#}#
$&$@$J$
&n&p&
+/+E+F+P+Y+
0 0 06070>0?0
2*2G2P2P2`2
(*359=DFHJMUVXY`cfox
0-g-o-p-
 ( ) / / _ _ 
0( ( ) ) 
 / / _ _ 
?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?
N3re214ToStringWalkerE
N3re26Regexp6WalkerIiEE
N3re210PCREWalkerE
N3re26Regexp6WalkerIbEE
N3re217EmptyStringWalkerE
N3re214SimplifyWalkerE
N3re26Regexp6WalkerIPS0_EE
N3re29Prefilter4Info6WalkerE
N3re26Regexp6WalkerIPNS_9Prefilter4InfoEEE
com_apple_mobilesms_suggested_contact_name
com_apple_mobilesms_suggested_contact_photo
urn:biz:
SGTextMessage.m
Invalid parameter not satisfying: %@
searchableItem.domainIdentifier
attachmentDomain
conversationIdentifier
senderIsAccountOwner
sender
SGMissingDomainIdentifier.uniqueIdentifierFallback.%@
identifier
PER_MESSAGE_TRANSFORMER
SGConversationFlatteningTransformer.m
Unexpected input type for %@: %@, 
INPUT_CONVERSATION
SG_MODEL_INPUT_TARGET_MESSAGE_INDEX
INPUT_TEXT
DD_MATCHES
TARGET_MATCH
SG_MODEL_INPUT_TARGET_RANGE
SG_MODEL_DISABLE_TARGET_MAPPING
SG_FEATURE_TARGET_SENT__
SG_FEATURE_END_OF_MESSAGE
@type
http://schema.org/Organization
reservationFor
arrivalTime
departureTime
arrivalPlatform
departurePlatform
provider
http://schema.org/BusReservation
http://schema.org/BusTrip
http://schema.org/BusStation
busName
busNumber
arrivalBusStop
departureBusStop
Bus Trip
SelfIdModelScore
%@ %@
model
result
supervision
SGMSelfIdModelTypeRegex
SGMSelfIdModelTypeLogistic
SGMSelfIdModelTypeLinear
SGMSelfIdModelTypeCoreNLP
(unknown: %i)
SGMSelfIdSupervisionTypeNone
SGMSelfIdSupervisionTypeContact
SGMSelfIdSupervisionTypeAppleContact
SGMSelfIdSupervisionTypePreviousModel
SGMSelfIdSupervisionTypeRegex
http://schema.org/GeoCoordinates
latitude
longitude
SuggestdExitReason
exitCode
AutocompleteUserSelectedContact
wasSuggestedContact
wasKnownContact
SGMContactDetailUsedAppMessages
SGMContactDetailUsedAppPhone
SGMContactDetailUsedAppMail
SGMContactDetailUsedAppCalendar
SGMContactDetailUsedAppOther
SGMContactDetailUsedAppFaceTime
SGMContactDetailUsedAppAddressBook
SGMContactDetailUsedAppSpringBoard
SGMContactDetailUsedAppHome
SGMContactDetailUsedAppMaps
SGMContactDetailUsedAppFitness
SGMContactDetailUsedAppReminders
BundleIdsTrackedAsOther
bundleId
SGInteractionParser.m
interaction
person
interactionIdentifier
v24@?0@"NSString"8@"NSString"16
ContactCreated
SELECT  url, title, received_from_handle, bundle_id, group_id, doc_id, seconds_from_1970, document_title, document_seconds_from_1970, document_time_interval, flags  FROM urls ORDER BY seconds_from_1970 DESC LIMIT :limit
 AND _pas_block(:containingSubstringBlock, url) 
 AND (flags & :flagFilter) = 0 
SELECT  url, title, received_from_handle, bundle_id, group_id, doc_id, seconds_from_1970, document_title, document_seconds_from_1970, document_time_interval, flags  FROM urls WHERE bundle_id NOT IN _pas_nsset(:excludingBundleIdentifiers)   AND (seconds_from_1970 BETWEEN :startDate AND :endDate        OR document_seconds_from_1970 BETWEEN :startDate AND :endDate)   %@ %@ ORDER BY seconds_from_1970 DESC LIMIT :limit
:excludingBundleIdentifiers
:containingSubstringBlock
:flagFilter
UPDATE urls SET flags = (flags | :flagsToSet) WHERE _pas_block(:block, url)
:flagsToSet
urls
seconds_from_1970
document_seconds_from_1970
document_time_interval
bundle_id
doc_id
received_from_handle
group_id
document_title
flags
INSERT OR REPLACE INTO urls (url, title, received_from_handle, bundle_id, group_id, doc_id, seconds_from_1970, document_title, document_seconds_from_1970, document_time_interval, flags) VALUES (:url, :title, :receivedFromHandle, :bundleIdentifier, :groupIdentifier, :documentIdentifier, :secondsFrom1970, :documentTitle, :documentDate, :documentTimeInterval, :flags)
:url
:receivedFromHandle
:groupIdentifier
:documentIdentifier
:secondsFrom1970
:documentTitle
:documentDate
:documentTimeInterval
:flags
DELETE FROM urls ORDER BY id DESC LIMIT -1 OFFSET :keepThisMany
:keepThisMany
DELETE FROM urls WHERE seconds_from_1970 < :seconds
:seconds
SELECT  url, title, received_from_handle, bundle_id, group_id, doc_id, seconds_from_1970, document_title, document_seconds_from_1970, document_time_interval, flags  FROM urls WHERE bundle_id = :bundleId AND COALESCE(document_seconds_from_1970, seconds_from_1970) BETWEEN :startDate AND :endDate
DELETE FROM urls WHERE bundle_id = :bundleIdentifier
DELETE FROM urls WHERE bundle_id = ? AND ((group_id GLOB ?) 
OR (group_id GLOB ?) 
DELETE FROM urls WHERE bundle_id = :bundleIdentifier AND doc_id IN _pas_nsarray(:documentIdentifiers)
:documentIdentifiers
locale
featurizer
modelSource
[vector isKindOfClass:PMLSparseVector.class]
-[SGModel predictForInput:]
SGModels.m
[[self class] isEqual:features.source.modelClass]
@"SGTransformerInstance"8@?0
Undefined class for model objective %lu
%@ must implement +newTransformerInstanceForLanguage:
%PHONE%
transformer
sessionDescriptor
modelClass
self.transformer
self.modelClass
TOKEN_WINDOW
NGRAMS
TW=%@&NG=%@&FV=%@
SGDetectedAttributeDissector
SGDDMatchPhone
SGDDMatchEmailAddress
SGDDMatchPostalAddress
SGDDMatchEmailAddressForIMessage
SGDDMatchPostalAddressForIMessage
SelfIdentificationPhrase
ContactSharing
TextMessageBirthdayCongrats
NSString *rulesKeyForObjective(SGModelObjective)
Unknown SGModelObjective = %lu
SG_FIM_ML_PREDICT_KEY
SG_FIM_ML_EVALUATE_KEY
SG_FIM_ML_TRAIN_KEY
NSString *rulesKeyForMode(SGModelMode)
Unknown SGModelMode = %lu
ContactDetailExtraction
source
detail
outcome
foundInSenderCNContact
extractionModelVersion
isUnlikelyPhone
extractionSignatureSource
SGMDocumentTypeEmail
SGMDocumentTypeMessage
SGMContactDetailTypeEmail
SGMContactDetailTypePhone
SGMContactDetailTypeAddress
SGMContactDetailTypeOther
SGMContactDetailTypeBirthday
SGMContactDetailExtractionOutcomeExtracted
SGMContactDetailExtractionOutcomeIgnoredSuspectedBulkMail
SGMContactDetailExtractionOutcomeIgnoredQuotedRegion
SGMContactDetailExtractionOutcomeIgnoredPattern
SGMContactDetailExtractionOutcomeIgnored
SGMContactDetailOwnerNotFound
SGMContactDetailOwnerSender
SGMContactDetailOwnerNotSender
SGMContactDetailExtractionSignatureSourceHMM
SGMContactDetailExtractionSignatureSourceDataDetectors
SGMContactDetailExtractionSignatureSourceNoSignatureSource
ContactDetailSent
foundIn
hasName
tokens
SGMContactDetailFoundInNotFound
SGMContactDetailFoundInSenderCNContact
SGMContactDetailFoundInOtherCNContact
SGMContactDetailFoundInSuggestions
SGMLowCount0
SGMLowCount1
SGMLowCount2
SGMLowCount3to4
SGMLowCount5orMore
ContactsInterfaceCacheCount
SELECT title, dueDateComponents, dueLocationId, dueLocationType, dueLocationTrigger, creationDate, contactIdentifier, reminderStatus FROM reminders WHERE id = ?
:dueDateComponents
:dueLocationId
:dueLocationType
:dueLocationTrigger
:sourceUrl
:creationDate
:opaqueKey
:uniqueKey
:contactIdentifier
:reminderStatus
INSERT INTO reminders (entityId, duplicateKey, sourceKey, title, dueDateComponents, dueLocationId, dueLocationType, dueLocationTrigger, sourceUrl, creationDate, opaqueKey, uniqueKey, contactIdentifier, reminderStatus) VALUES (:entityId, :duplicateKey, :sourceKey, :title, :dueDateComponents, :dueLocationId, :dueLocationType, :dueLocationTrigger, :sourceUrl, :creationDate, :opaqueKey, :uniqueKey, :contactIdentifier, :reminderStatus)
SELECT sourceKey FROM reminders WHERE duplicateKey = ?
SELECT duplicateKey FROM reminders WHERE entityId = ?
SELECT entityId FROM reminders WHERE duplicateKey = ?
SELECT duplicateKey, sourceKey FROM reminders WHERE id = :primaryKey
SGSqlEntityStore+Reminders.m
origin
SELECT entityId FROM reminders WHERE id = ?
SELECT id FROM reminders WHERE entityId = ?
ContactsInterfaceCacheHit
cacheHit
FoundInMailModelScore
contactDetail
correct
mode
SGMFoundInMailModelTypeRegex
SGMFoundInMailModelTypeLogistic
SGMFoundInMailModelTypeLinear
SGMFoundInMailModelTypeNaiveBayes
SGFoundInMailModelModeTraining
SGFoundInMailModelModeEvaluation
SGFoundInMailModelModePrediction
SGMFoundInMailSupervisionTypeNone
SGMFoundInMailSupervisionTypeContact
SGMFoundInMailSupervisionTypeAppleContact
SGMFoundInMailSupervisionTypePreviousModel
INSERT OR REPLACE INTO metadata (key, value) VALUES (:key, :value)
DELETE FROM metadata WHERE key = :key
SELECT value FROM metadata WHERE key = :key LIMIT 1
@16@?0@"_PASSqliteStatement"8
PREDICTION_PARAMETERS
TARGET_LANGUAGE
CONFIDENCE_THRESHOLDS
@"NSMutableDictionary"24@?0@"NSDictionary"8@"NSString"16
NEGATIVE_SAMPLE_CHOPLESS
B12@?0I8
core
location
time
polarity
EVENT_CORE__RESERVATION_ID
EVENT_LOCATION__START_ADDRESS
EVENT_LOCATION__END_ADDRESS
EVENT_LOCATION__START_PLACE
EVENT_LOCATION__END_PLACE
EVENT_TIME__START_DATETIME
EVENT_TIME__END_DATETIME
TITLE__HOTEL_RESTAURANT_NAME
TITLE__MOVIE_TICKET_NAME
TITLE__CAR_RENTAL_NAME
TITLE__EVENT_NAME
POLARITY__EVENT_YES
SGStructuredEventDocument: reservationId, unable to resolve candidates
SGStructuredEventDocument: address, unable to resolve candidates
SGStructuredEventDocument: %@, unable to resolve candidates
idx (%lu) is out of range (%lu)
trialMetadata
backgroundTrialMetadata
hoursSinceReference
ctsJobConstraints
hoursSinceLastIncrementalUpdate
isSubmodelRebuilt
daysAvailableDuringIncrementalUpdate
daysProcessedDuringIncrementalUpdate
mailsProcessedDuringIncrementalUpdate
deletedTokensCountToComplyToCappingPolicy
deletedEmailsCount
rollbackedSlicesCountToComplyToPostDeletionPolicy
rollbackedEmailsCountToComplyToPostDeletionPolicy
submodelsStats
biomeAggregationPerformanceInMilliSeconds
submodelsUpdatePerformanceInMilliSeconds
submodelsPruningForCappingPolicyPerformanceInMilliSeconds
cumulatedSubmodelsRollbackForPostDeletionPolicyPerformanceInMilliSeconds
CancelAfterDeadline
CpuIntensive
DiskIntensive
StartHandler
SuspendHandler
MemoryIntensive
SchedulingPriorityBackground
SchedulingPriorityDefault
SchedulingPriorityMaintenance
SchedulingPriorityUtility
SchedulingPriorityUserInitiated
SchedulingPriorityUserInitiatedOvercommit
RequestsApplicationLaunch
RequiresInexpensiveNetworking
RequiresNetwork
RequiresPlugin
TriggersRestart
No proposal found
No title found for message
No dueDate nor dueLocation found in message
No confirmation found
isSent
body
suggest_tool_preprocess
ReminderDissector full extraction
suggest_tool
extractionStatus
errorMessage
processingLanguage
modelDescription
SGReminderDissector.m
textMessage.isSent
polarityEmojisMapping
verbsMapping
ACCOUNT_OWNER
CONTACT
IS_%@
SG_QA_REMINDER_TEST
TEST REMINDER
defaultManager
RTRoutineManager
Class getRTRoutineManagerClass(void)_block_invoke
Unable to find class %s
void *CoreRoutineLibrary(void)
SearchResultsIncludedPureSuggestion
SMS_FILTER_INEN_CLASSIFICATION
trialEventExtractionAssets
trialEventClassifierModel
trialEventClassifierThreshold
trialEventExtractionMessageProcessingLimit
trialEventExtractionRateLimitInterval
v16@?0@"<TRINamespaceUpdateProtocol>"8
v16@?0@"SGMessageEventDissectorTrialClientWrapperGuardedData"8
SearchResultsUserSelectedContact
SerializedContactsCacheHit
SqliteErrors
errorCode
com.apple.suggestions.plugin.SGURLPlugin
All Mailboxes
Unknown Mailbox
lastMailboxCheckedForTopSGMISaliency
lastLimitCheckedForTopSGMISaliency
SELECT score, mailboxId, isSalient, isGteSalient, isCounted, creationTimestamp FROM mailIntelligence_saliency WHERE messageId = :messageId
score
isSalient
isGteSalient
isCounted
mailboxId
SELECT messageId, score, isSalient, creationTimestamp FROM mailIntelligence_saliency WHERE isSalient != 0
 AND mailboxId = :mailboxId
 ORDER BY creationTimestamp DESC LIMIT :limit
:mailboxId
SELECT messageId, mailboxId, score, isSalient, creationTimestamp FROM mailIntelligence_saliency WHERE 1
 AND mailboxId IN _pas_nsarray(:mailboxIds)
 AND creationTimestamp > :minDate
%@ ORDER BY score %@ LIMIT :limit
DESC
:mailboxTypes
:mailboxIds
:minDate
SELECT id FROM mailIntelligence_saliency WHERE messageId = :messageId
UPDATE mailIntelligence_saliency SET messageId = :messageId, mailboxId = :mailboxId, score = :score, isSalient = :isSalient, isGteSalient = :isGteSalient, isCounted = :isCounted WHERE id = :id
:score
:isSalient
:isGteSalient
:isCounted
INSERT INTO mailIntelligence_saliency (creationTimestamp, messageId, mailboxId, score, isSalient, isGteSalient, isCounted) VALUES (:creationTimestamp, :messageId, :mailboxId, :score, :isSalient, :isGteSalient, :isCounted)
UPDATE mailIntelligence_saliency SET creationTimestamp = :creationTimestamp WHERE id = :id
DELETE FROM mailIntelligence_saliency
UPDATE mailIntelligence_saliency SET isSalient=1, score=1
UPDATE mailIntelligence_saliency SET isSalient=0, score=0
SELECT stagedLog, isLogged FROM mailIntelligence_saliency WHERE messageId = :messageId
stagedLog
isLogged
UPDATE mailIntelligence_saliency SET stagedLog=:stagedLog WHERE messageId = :messageId
:stagedLog
UPDATE mailIntelligence_saliency SET isLogged = TRUE, stagedLog = NULL WHERE messageId = :messageId
SuggestedContactDetailShown
activeTrialMetadata
activeAggregatedAccuracyLogForThePastFourWeeks
activeAggregatedAccuracyLogSinceModelInitialization
backgroundAggregatedAccuracyLogForThePastFourWeeks
backgroundAggregatedAccuracyLogSinceModelInitialization
SuggestedContactDetailUsed
UnknownShown
kMDItemEmailAddresses
kMDItemRecipientEmailAddresses
kMDItemAuthorEmailAddresses
kMDItemInstantMessageAddresses
kMDItemRecipientAddresses
kMDItemAuthorAddresses
kMDItemPhoneNumbers
 (%@ == "*%@*"cwdt) 
 ( %@ ) 
 || 
$time.this_year(-1)
$time.iso(%@)
$time.today(1)
 (kMDItemContentType == '%@') 
%@ %@ InRange(kMDItemContentCreationDate,%@,%@) %@ %@
PerfXPCLatency
method
SGMSuggestionsFromMessage
customResponsesAfterPruning
SELECT uniqueIdentifier FROM mailIntelligence_spotlightMapping WHERE messageId = :messageId
<html.*?>
<html>
malloc failed
blockquote
strong
table
href
mailto:
http://
_link_
head
script
style
span
header
hgroup
article
details
fieldset
figcaption
footer
form
noscript
section
summary
%i. 
reservedTicket
http://schema.org/Seat
seat
ticketedSeat
seatRow
seatSection
seatNumber
seatingType
airplaneSeat
airplaneSeatClass
DDMATCH
void appendStringToBuf(char **, const char *, NSString *__strong, BOOL)
SGAggregateLogging+PET.m
Logging string too long
SGMessageKey.m
serialized
Invalid serialization
Unknown entity type: %lu
<SGMessageKey source:%@ uniqueIdentifier:%@>
@16@?0@"SGDataDetectorMatch"8
SGDelivery_ctEmlSub_%lu
SGDelivery_ctEmlBod_%lu
SGDelivery_ctTxtMsg_%lu
@24@?0@"NSSet"8@"SGPipelineEnrichment"16
SGDelivery_pr_%@
SGDelivery_ctNumUniq_%lu
application-identifier
<SGTextMessageKey source=%@ uniqueIdentifier=%@>
SGDSuggestManagerErrorDomain
<SGRealtimeSuggestionsTuple c:%tu e:%tu r:%tu d:%tu i:%tu>
@"EKEventStore"8@?0
v16@?0@?<v@?@"EKEventStore">8
@"_PASLock"8@?0
com.apple.MailCompositionService
com.apple.MobileAddressBook.ContactsViewService
com.apple.MobileAddressBook.ContactViewViewService
com.apple.mobilesms.compose
FaceTime
com.apple.FaceTime
InCallService
com.apple.telephonyutilities.callservicesd
MobilePhone
SGDSuggestManager-purgeDeletionDropBox
@"SGDPurgeDeletionBox"8@?0
v16@?0@"SGDPurgeDeletionBox"8
My phone is 515-555-5555. My address is 1234 Hey Street.
htmlBody
from
Warm Up <warm@up.com>
subject
Warm up! Awaken!
date
<hey@example.com>
sourceId
warmUpSuggestions
contact
completion
contactIdentifier
contactIdentifiers
emailAddress
none
Unexpected number of matches
v16@?0@"SGXPCResponse1"8
cnContactMatchesForRecordIds
@"NSArray"16@?0@"SGRecordId"8
query
prefix
v16@?0Q8
message
Couldn't find event with that record id
storageReminder.recordId
@"SGEntity"16@?0@"SGEntity"8
com.apple.suggestions.SGEKCalendarWrite
foundEvent.suggestionInfo.opaqueKey
@"SGRealtimeEventResponse"16@?0@"SGEntity"8
@"_PASTuple2"16@?0@"SGRealtimeEventResponse"8
en_US_POSIX
yyyy-MM-dd HH:mm:ss
-[SGDSuggestManager realtimeContactsFromEntity:enrichments:sourceTextMessage:store:]_block_invoke
SGDSuggestManager.m
enrichment.duplicateKey.parentKey
@"SGStorageContact"16@?0@"SGContactEntity"8
@"SGContact"16@?0@"SGEntity"8
B16@?0@"SGEmailAddress"8
@"SGRealtimeContact"16@?0@"SGContact"8
q24@?0@"SGContactMatch"8@"SGContactMatch"16
socialProfile
messagesToRefreshWithCompletion
@"SGMailMessageKey"16@?0@"SGEmailKey"8
updateMessages
@"SGEmailKey"16@?0@"SGMailMessageKey"8
reportMessagesFound
fullDownloadRequestBatch
resolveFullDownloadRequests
uniqueId
INGetReservationDetailsIntent
SGSuggestedEventLaunchInfo intent must have an associated userActivity
SGSuggestedEventLaunchInfo object must have either intent or sourceURL to open
confirm
v16@?0@"SGLabeledObject"8
reject
message-id
SGSuggestManager-addInteractions
com.apple.
0123456789@
processReservationInteractions
deleteSpotlightReferencesWithBundleIdentifier
isEventCandidateForURL
suggestionsFromURL
-[SGDSuggestManager geocodeEnrichmentsInPipelineEntity:withCompletion:]_block_invoke
@"SGRealtimeEvent"16@?0@"SGPipelineEnrichment"8
com.apple.suggestions.suggestManagerKeepDirty
hits
misses
v20@?0B8Q12
notFromSuggestions
x-apple-eventkit:///SuggestedEventInfo/
uniqueKey
com.apple.suggestd.event-metrics-queue
Maybe: %@
Show in %@
@"SGSimpleMailMessage"8@?0
v40@?0@"NSError"8@"NSArray"16@"NSArray"24@"NSArray"32
q24@?0@"SGRealtimeEvent"8@"SGRealtimeEvent"16
com.apple.suggestions.internal.messages.processed.
SGRecordId not valid (didn't find entity)
Unable to find localizedAppName
com.apple.CoreSuggestionsInternals.SGDSuggestManager
v24@?0@"SGDPurgeDeletionBox"8^B16
v24@?0@"NSString"8@"_PASDomainSelection"16
v24@?0@"NSString"8@"NSSet"16
htmlParserNonNull != nil
SGSuggestManager-consumeInteractionWithContext
An error occurred while formatting the string.
AppCanShowSiriSuggestionsBlacklist
com.apple.suggestions
EMAIL_MAPPING
LINK_MAPPING
-[SGEntityMappingTransformer transform:]
SGEntityMappingTransformer.m
[input isKindOfClass:[NSString class]]
mailto
com.apple.suggestions.ml.datadetector
salientPredictedAsSalient
salientPredictedAsNeutral
salientPredictedAsIgnorable
neutralPredictedAsSalient
neutralPredictedAsNeutral
neutralPredictedAsIgnorable
ignorablePredictedAsSalient
ignorablePredictedAsNeutral
ignorablePredictedAsIgnorable
is_sender_name
is_sender_email
is_sender_domain
is_recipient_name
is_recipient_email
is_present_in_subject
StructuredEventInputMapping
StructuredEventOutputMapping
SupportedProviders
extractionSenders
shadowSenders
mlDefaultExtractionSenders
schemaOrgSenders
StructuredEventEngineConfig
sectionLabelTokenMergeDistance
defaultLabelTokenMergeDistance
addressComponentThreshold
stripRepeatedContentInSections
Structured Event model inference
%@.%@.%@
SG_TARGET_EMAIL
SG_FEATURE_PHONENUMBER
SG_FEATURE_EMAIL
SG_FEATURE_ADDRESS
SG_FEATURE_DATE
SG_FEATURE_LINK
SG_FEATURE_FULLNAME
SG_FEATURE_FIRSTNAME
SG_FEATURE_LASTNAME
SG_POSSESSIVE
SG_FEATURE_NUMBER
SG_FEATURE_SYMBOL
SignificantEmailAddressForIMessage
documentSource
highPriority
receivedOnBattery
harvestedOnBattery
harvestSource
otherFirstParty
otherThirdParty
Safari
News
Mail
Messages
Notes
Reminders
SGM2HarvestSourceInMemory
SGM2HarvestSourceRealtime
SGM2HarvestSourceRealtimeNoBudget
SGM2HarvestSourceOnDiskOverflow
SGM2HarvestSourceOnDiskNoBudget
SGM2HarvestSourceOnDiskTimeout
SGM2HarvestSourceOnDiskClosed
SGM2HarvestSourceOnDiskLegacy
SGM2HarvestSourceProactiveHarvesting
SGRe2PrefilterTree.m
data.length > 7*sizeof(uint32_t)
(const uint8_t *)(_rpns) <= (const uint8_t *)end
(const uint8_t *)(_rpns) <= (const uint8_t *)(_h1)
(const uint8_t *)(_h1) <= (const uint8_t *)(_h2)
(const uint8_t *)(_h2) <= (const uint8_t *)(_h3)
(const uint8_t *)(_h1) <= (const uint8_t *)end
(const uint8_t *)(_h2) <= (const uint8_t *)end
(const uint8_t *)(_h3) <= (const uint8_t *)end
(const uint8_t *)(_h3) <= (const uint8_t *)(_s1)
(const uint8_t *)(_s1) <= (const uint8_t *)(_s2)
(const uint8_t *)(_s2) <= (const uint8_t *)(_s3)
(const uint8_t *)(_s1) <= (const uint8_t *)end
(const uint8_t *)(_s2) <= (const uint8_t *)end
(const uint8_t *)(_s3) <= (const uint8_t *)end
_h1 + _n1 + 1 == _h2
_h2 + _n2 + 1 == _h3
(const void *)(_h3 + _n3 + 0) == (const void *)_s1
com_apple_suggestions_targetPlugins
com.apple.suggestd.ma-metadata-download
com.apple.suggestd.trim
com.apple.suggestd.vacuum
com.apple.suggestd.identityanalysis
com.apple.suggestd.sendrtc
v20@?0B8@"NSError"12
com.apple.suggestd.cd-cache-rebuild
com.apple.suggestd.process-pending-geocodes
com.apple.suggestions.geocode-write
-[SGDManagerForCTS _performProcessPendingGeocodesActivity:]_block_invoke_2
SGDManagerForCTS.m
[nextGeocode.timeRange isValidAllDayRange]
v16@?0@"SGStorageEvent"8
com.apple.suggestd.process-pending-verification
com.apple.suggestions.verification-write
Unexpected failure of CTS deferral
facetime.apple.com/join
offeredCount
acceptedCount
bundleIdentifier
urlType
com.apple.proactive.fia.url
item
processSearchableItem-plugins
backgroundDissectAndWrite
backgroundDissect
@"NSArray"16@?0@"<NSFastEnumeration>"8
@"NSMutableDictionary"16@?0@"<NSFastEnumeration>"8
@"NSMutableArray"16@?0@"<NSFastEnumeration>"8
i16@?0@8
reservationId
B24@?0@8@16
@"NSString"16@?0@"SGContactDetail"8
SGDeduper.m
postal address details should be filtered out
@"NSArray"16@?0@"SGContactDetail"8
@"NSNumber"16@?0@"SGContactDetail"8
Abu Dhabi
Asia/Muscat
Adelaide
Australia/Adelaide
Afghanistan
Asia/Kabul
Alaska
America/Anchorage
Alaskan
Aleutian
America/Adak
Almaty
Asia/Almaty
Altai
Asia/Barnaul
Amsterdam
Europe/Berlin
Arab
Asia/Riyadh
Arabian
Arabic
Asia/Baghdad
Argentina
America/Argentina/Buenos_Aires
Arizona
America/Phoenix
Astana
Asia/Dhaka
Astrakhan
Europe/Astrakhan
Athens
Europe/Athens
Atlantic
America/Halifax
Auckland
Pacific/Auckland
AUS Central
Australia/Darwin
Aus Central W.
Australia/Eucla
AUS Eastern
Australia/Sydney
Azerbaijan
Asia/Baku
Azores
Atlantic/Azores
Baghdad
Bahia
America/Bahia
Baku
Bangkok
Asia/Bangkok
Bangladesh
Beijing
Asia/Shanghai
Belarus
Europe/Minsk
Belgrade
Europe/Prague
Bogota
America/Bogota
Bougainville
Pacific/Bougainville
Brasilia
America/Sao_Paulo
Brisbane
Australia/Brisbane
Brussels
Europe/Paris
Bucharest
Europe/Bucharest
Buenos Aires
Cairo
Africa/Cairo
Canberra
Cape Verde
Atlantic/Cape_Verde
Cape Verde Is.
Cape Verde Islands
Canada Central
America/Regina
Caracas
America/Caracas
Casablanca
Africa/Casablanca
Caucasus
Asia/Yerevan
Cen. Australia
Central
America/Chicago
Central America
America/Guatemala
Central Asia
Central Brazilian
America/Manaus
Central Europe
Central European
Europe/Belgrade
Central Pacific
Pacific/Guadalcanal
Central Standard Time (Mexico)
America/Mexico_City
Chatham Islands
Pacific/Chatham
Chennai
Asia/Kolkata
Chihuahua
America/Chihuahua
China
Cuba
America/Havana
Darwin
Dateline
Etc/GMT+12
E. Africa
Africa/Nairobi
E. Australia
E. Europe
E. South America
East Africa
Easter Island
Pacific/Easter
Eastern
America/New_York
Eastern Standard Time (Mexico)
America/Cancun
Egypt
Ekaterinburg
Asia/Yekaterinburg
Eniwetok
Pacific/Kwajalein
Fiji
Pacific/Fiji
Fiji Islands
Europe/Helsinki
Georgian Standard Time
Asia/Tbilisi
GMT Standard Time
Europe/London
Greenland
America/Godthab
Greenwich
Atlantic/Reykjavik
Greenwich Mean Time
Greenwich Standard Time
Guadalajara
Guam
Pacific/Guam
Haiti
America/Port-au-Prince
Harare
Africa/Harare
Hawaii
Pacific/Honolulu
Hawaiian
Helsinki
Hobart
Australia/Hobart
India
Indiana (East)
America/Indiana/Indianapolis
Iran
Asia/Tehran
Irkutsk
Asia/Irkutsk
Islamabad
Asia/Karachi
Israel
Asia/Jerusalem
Jerusalem
Jordan
Asia/Amman
Kabul
Kaliningrad
Europe/Kaliningrad
Kathmandu
Asia/Kathmandu
Kolkata
Asia/Calcutta
Korea
Asia/Seoul
Krasnoyarsk
Asia/Krasnoyarsk
Kuala Lumpur
Asia/Singapore
Kuwait
Libya
Africa/Tripoli
Line Islands
Pacific/Kiritimati
Lord Howe
Australia/Lord_Howe
Magadan
Asia/Magadan
Marquesas
Pacific/Marquesas
Mauritius
Indian/Mauritius
Mexico
Mexico City
Mexico Standard Time
Mexico Standard Time 2
Mid-Atlantic
Atlantic/South_Georgia
Middle East
Asia/Beirut
Midway Island
Pacific/Midway
Montevideo
America/Montevideo
Morocco
Moscow
Europe/Moscow
Mountain
America/Denver
Mountain Standard Time (Mexico)
Myanmar
Asia/Rangoon
N. Central Asia
Asia/Novosibirsk
Nairobi
Namibia
Africa/Windhoek
Nepal Standard Time
New Zealand
Norfolk
Pacific/Norfolk
Newfoundland
America/St_Johns
Newfoundland and Labrador
North Asia East
Asia/Ulaanbaatar
North Asia
North Korea
Asia/Pyongyang
Nuku'alofa
Pacific/Tongatapu
Osaka
Asia/Tokyo
Pacific
America/Los_Angeles
Pacific SA
America/Santiago
Pacific Standard Time (Mexico)
America/Tijuana
Pacific Time
Pakistan
Paraguay
America/Asuncion
Paris
Perth
Australia/Perth
Prague
Prague Bratislava
Rangoon
Romance
Russia Time Zone 10
Asia/Srednekolymsk
Russia Time Zone 11
Asia/Kamchatka
Russia Time Zone 3
Europe/Samara
Russian
SA Eastern
America/Buenos_Aires
SA Pacific
SA Western
Santiago
Sarajevo
Europe/Sarajevo
Saskatchewan
America/Edmonton
SE Asia
Seoul
Saint Pierre
America/Miquelon
Sakhalin
Asia/Sakhalin
Samoa
Pacific/Apia
Saudi Arabia
Singapore
South Africa
Sri Jayawardenepura
Asia/Colombo
Sri Lanka
Syria
Asia/Damascus
Sydney
Taipei
Asia/Taipei
Tasmania
Tehran
Tocantins
America/Araguaina
Tokyo
Tomsk
Asia/Tomsk
Tonga
Transbaikal
Asia/Chita
Turkey
Europe/Istanbul
Turks And Caicos
America/Grand_Turk
Universal Coordinated Time
US Eastern
America/Indianapolis
US Mountain
Ulaanbaatar
Venezuela
Vladivostok
Asia/Vladivostok
W. Australia
W. Central Africa
Africa/Luanda
W. Europe
Warsaw
Europe/Warsaw
West Asia
West Bank
Asia/Hebron
West Central Africa
West Pacific
Western Brazilian
America/Rio_Branco
Yakutsk
Asia/Yakutsk
Yangon Rangoon
@"NSTimeZone"16@?0@"NSString"8
 Standard Time
 Daylight Time
 Summer Time
 Time
SGCalendarAttachmentDissector.m
hourString
Etc/GMT
@"NSString"16@?0@"ICSUserAddress"8
%@;%@
B16@?0@"SGMailAttachment"8
Google
Gmail
Yahoo
Outook
@icloud.com
@me.com
@mac.com
@gmail.com
@googlemail.com
@google.com
@yahoo.com
@yahoo.co.uk
@ymail.com
@sbcglobal.net
@rocketmail.com
@outlook.com
@hotmail.com
@hotmail.co.uk
@rocketmaill.com
BEGIN:
END:
END:VCALENDAR
VTIMEZONE
VEVENT
VCALENDAR
UID:
DTSTART
DTEND
EXDATE
RDATE
RECURRENCE-ID
TZID=
;TZID=
END:VCALENDAR
floating
GREGORIAN
ATTACH
<SGStorageContact: %@ - %lu profile(s)>
SGStorageContact.m
Merging with a contact that isn't mergable
@"NSArray"16@?0Q8
@"SGPhoneNumber"16@?0@"SGContactDetail"8
@"SGPostalAddress"16@?0@"SGContactDetail"8
Street
City
State
Country
@"SGEmailAddress"16@?0@"SGContactDetail"8
@"SGSocialProfile"16@?0@"SGContactDetail"8
Cannot use SearchOnePass for unanchored matches.
CREATE TABLE snippets (id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER,title TEXT,content TEXT,contentRangeOfInterest TEXT)
CREATE UNIQUE INDEX entityIdIdx ON snippets(entityId)
migration_MoveContentToSnippets
CREATE TABLE emailSnippets (id INTEGER PRIMARY KEY AUTOINCREMENT,emailId INTEGER,title TEXT,content TEXT)
CREATE UNIQUE INDEX ix_emailSnippets_emailId ON emailSnippets(emailId)
migration_separateMessageSnippets
CREATE TABLE messages (id integer PRIMARY KEY AUTOINCREMENT NOT NULL,uuid char(128) NOT NULL,conversationId char(128) NOT NULL,content text(128) NOT NULL,creationTimestamp REAL NOT NULL,isSent integer(1) NOT NULL)
CREATE INDEX ix_messages_conversationId ON messages (conversationId ASC)
CREATE UNIQUE INDEX ix_messages_id ON messages (id ASC)
CREATE UNIQUE INDEX ix_messages_uuid ON messages (uuid ASC)
CREATE TABLE userQueries (id integer PRIMARY KEY AUTOINCREMENT NOT NULL,conversationId char(128) NOT NULL,language char(5) NOT NULL,query text NOT NULL,engaged integer(1) NOT NULL,creationTimestamp real NOT NULL)
CREATE INDEX ix_userQueries_language ON userQueries (language ASC)
DROP TABLE IF EXISTS userQueries
DROP TABLE IF EXISTS messages
DELETE FROM sqlite_sequence
v16@?0@"SGDCloudKitSync"8
com.apple.corespotlight.receiver.suggestions
NSUA
CSSI
SGDPluginManager.processInteraction
plugin-processInteraction
plugin-purgeSpotlightReferences
plugin-deleteSpotlightReferences
contactConfirmations
contactRejections
contactDetailConfirmations
contactDetailRejections
enqueued_items
dissected_items
statsCounters
SELECT value FROM statsCounters WHERE key = :key
behavior.scalar.confirmPercent
contacts.contact
contacts.detail
Compiler::Copy called!
kRegexpConcat: child_frags is NULL
kRegexpAlternate child_frags is NULL
kRegexpStar child_frags is NULL
kRegexpPlus child_frags is NULL
kRegexpQuest child_frags is NULL
No ranges in char class
kRegexpCapture child_frags is NULL
Missing case in Compiler: 
hello, world
Couldn't compile regular expression, skipping: 
 due to error 
%@-timer
B24@?0@"_PASTuple2"8@"NSDictionary"16
@16@?0@"_PASTuple2"8
B24@?0@"SGStorageReminder"8@"NSDictionary"16
v24@?0@"REMReminder"8^B16
http://schema.org/Place
lang
timeDifferenceFromReceptionToSaliencyInferenceInSeconds
senderConnectionScore
mailAttachmentHistogram
nbCharactersInMailSubject
nbTokensInMailSubject
previousInteractionOnConversationInMinutes
previousInteractionFromUserOnConversationInMinutes
active
background
NAME_MAPPINGS
TOKEN_TO_IGNORE
MINIMUM_CONFIDENCE
FIRST
LAST
FULL
UNDEFINED
POSSESSIVE
nameMappings[NameMappingFull]
nameMappings[NameMappingFirst]
nameMappings[NameMappingLast]
nameMappings[NameMappingUndefined]
nameMappings[NameMappingPossessive]
-[SGNameMappingTransformer transform:]
SGNameMappingTransformer.m
Shouldn't be NameMappingPossessive
feature
v24@?0@"NSNumber"8^B16
firstnames
trie
_PASCFBurstTrie *firstnames(void)_block_invoke
path
Could not load firstnames trie: %@
lastnames
_PASCFBurstTrie *lastnames(void)_block_invoke
Could not load lastnames trie: %@
%@__%@
RE2::Set::Compile multiple times
Error simplifying during Compile.
alt -> %d | %d
altmatch -> %d | %d
byte%s [%02x-%02x] -> %d
capture %d -> %d
emptywidth %#x -> %d
match! %d
nop -> %d
fail
%d. %s
MyName/F
NameRequest/F
SGSelfIdentification.m
conversation.count > 0
@"NSString"36@?0{SGMSIPatternType_=Q}8@"NSString"16@"NSString"24B32
v52@?0@"NSString"8{_NSRange=QQ}16@"SGRe2"32B40^B44
@"SGTextMessageItem"16@?0@8
sent:
strong_phrase
SGSearchableItemIdTriple.m
@"NSString"8@?0
SGPipelineEntity.m
handle
identifier.length > 0
bundleIdentifier.length > 0
interactionIdentifier.length > 0
SGPipelineEntity.flush
a preferred enrichment must have a duplicateKey
B24@?0@"SGPipelineEnrichment"8@"NSDictionary"16
Contacts can't have associated detected addresses.
Contacts can't have associated detected phone numbers.
Contacts can't have associated detected birthdays.
Contacts can't have associated detected email addresses.
Contacts can't have associated detected instant message addresses.
Regexp not destroyed.
Bad reference count 
/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/re2/re2/re2_regexp.h
Cannot AllocSub 
Unexpected op in Regexp::Equal: 
no error
unexpected error
invalid escape sequence
invalid character class
invalid character class range
missing ]
missing )
trailing \
no argument for repetition operator
invalid repetition size
bad repetition operator
invalid perl operator
invalid UTF-8
invalid named capture group
NumCapturesWalker::ShortVisit called
NamedCapturesWalker::ShortVisit called
CaptureNamesWalker::ShortVisit called
basic_string
SGEntity.m
entityKey can't be nil.
entityType must not be SGEntityTypeUnknown
entityType must not be SGEntityTypeDetectedEmailAddress
description
<SGEntity:%@,sourceKey=%@,title=%@>
from_messages
Unknown encoding 
Error parsing '
Error compiling '
pattern too large - compile failed
Error reverse compiling '
pattern too large - reverse compile failed
\x00
Invalid RE2: 
RE2: invalid startpos, endpos pair.
Match 
 DFA failed.
 used DFA - no match.
 used DFA - match
 reverse DFA failed.
 DFA inconsistency.
DFA inconsistency
 used reverse DFA.
 skipping DFA for OnePass.
 skipping DFA for BitState.
 using OnePass.
SearchOnePass inconsistency
 using BitState.
SearchBitState inconsistency
 using NFA.
SearchNFA inconsistency
eventsWithoutTimestamp
rejectedEvents
reminders
rejectedReminders
newContacts
storageDetails
dontUpdate
confirmedEventFields
confirmedEventWithoutTimestampFields
resetInfo
SGSalt
SGSaltManatee
v16@?0@"SGHistorySharedData"8
SGSuggestHistory migration: %@
SUCCESS
FAILURE
SGSuggestHistory-Migration-%@
SGSuggestHistory.m
[migrationToken lengthOfBytesUsingEncoding:NSUTF8StringEncoding] <= 64
guardedData->isMigrating
succeeded
failed
Suggest history with %d confirmed event hashes, %d confirmed event without timestamp hashes, %d rejected event hashes, %d confirmed reminder hashes, %d rejected reminder hashes, %d confirmed event field hashes, %d confirmed event without timestamp field hashes, %d contact hashes, %d storage detail hashes, and %d no-update hashes.
![hashes containsObject:[self _canaryHash]]
Suggest history sets must not be nil
canary_%@
@"NSData"16@?0@"NSData"8
@"NSData"16@?0@"NSString"8
opaqueKey
%.2f
new data
suggestHistoryObserver
SGKeyValueCacheManager.m
cacheType < SGKeyValueCacheTypeCount
phone-to-name.kvcache
email-to-name.kvcache
SGWords.m
word
Latin-ASCII; Lower
\%03o
<FIAPHistoricalDataRequest id:%llu p:%@ s:%@ e:%@ plugin:%@>
reply-to
conversation-id
list-id
EEE',' d MMM y HH':'mm':'ss ZZZ
EEE',' d MMM y HH':'mm':'ss zzz
EEE MMM d HH':'mm':'ss zzz y
d MMM y HH':'mm':'ss ZZZ
d MMM y HH':'mm':'ss zzz
EEE',' d MMM y HH':'mm ZZZ
EEE',' d MMM y HH':'mm zzz
d MMM y HH':'mm ZZZ
d MMM y HH':'mm zzz
@"NSDateFormatter"16@?0@"NSString"8
(?:=([0-9A-F]{2})|=[ \t]*(?:\r?\n|$)|[ \t]+(?:\r?\n|$)|$)
SGSimpleMailMessage+RFC822Parsing.m
error creating quotedPrintableRegex: %@
(?:^(\S+?):(?:\r?\n[ \t])?[ \t]*(\S+(?:.*\r?\n[ \t].*\S+|.*\S)*|).*$|(?:\r?\n){2})
error creating headerRegex: %@
fieldValueRange.location != NSNotFound
[ \t]*;[ \t]*([^ \t()<>@,;:\\"\/\[\]?.=]+)=(?:([^ \t()<>@,;:\\"\/\[\]?.=]+)|"((?:[^"]|\\")*)")[ \t]*(?:(?=;)|$)
error creating parameterRegex: %@
<blockquote type=cite>
</blockquote>
&amp;
&lt;
 &nbsp;
<span class=Apple-tab-span style=white-space:pre>
</span>
<br>
content-type
text/plain
charset
us-ascii
boundary
content-disposition
inline
attachment
multipart/
multipart/alternative
multipart/related
start
multipart/signed
content-id
text/html
format
flowed
delsp
content-transfer-encoding
binary
base64
x-uuencode
quoted-printable
attachmentCallback
filename
<SGDataDetectorMatch/%i %i-%i
matchType
range_location
range_length
labelRange_location
labelRange_length
valueRange_location
valueRange_length
labelString
valueString
parsecDomain
parsecWikidataQid
allDay
inferredDate
approximateTime
partialDate
postalAddressComponents
detectedDate
detectedTimeZone
detectedEndDate
detectedEndTimeZone
PartialDate
RelativeDayOfWeek
DDScannerRef getScannerRefAndAcquire(void)
SGDataDetectorMatch.m
Could not get data detector from pool
dd-MM-yyyy
dd-MM
CFRange "%ld:%ld" cannot be converted to NSRange.
_PASUtilityMacros
void releaseScannerRef(DDScannerRef)
Could not return scanner %@ to pool
NonQuotedLinePart
Email
NextLineQuoted
UpTo8KB
8KBTo32KB
32KBTo128KB
128KBTo512KB
512KBTo2MB
Over2MB
UpTo8KB: %tu
8KBTo32KB: %tu
32KBTo128KB: %tu
128KBTo512KB: %tu
512KBTo2MB: %tu
Over2MB: %tu
InhumanEmailPatterns/F
InhumanEmailDomains
InhumanEmailTokens
HumanMailingListHeaders
InhumanEmailExceptions
InhumanName/F
InhumanNameComponents
InhumanBodyLiterals
InhumanBodyRegexp/F
SGInhumans.m
failed to get raw value for InhumanNameComponents
failed to look up raw value for rawValueKeyInhumanEmailDomains
failed to look up raw value for rawValueKeyInhumanEmailTokens
NUL-terminator overwritten. This should be impossible.
computeCustomTimeRange
safeguardingQuotedRegionsRegex
lastSGMIFollowUpStatsAndSettingReportingDate
appleMailMessageId
v32@?0@"NSRegularExpression"8@"NSString"16^B24
v32@?0@"NSRegularExpression"8@"NSNumber"16^B24
%@%@%@
%@-%@
v32@?0@"NSNumber"8@"SGMIWarningsDetectionRegex"16^B24
startOffset
endOffset
SGMIFollowUpManager-processing
SGMIFollowUpManager-timeout
positive
negative
no engagement
enabled
disabled
com.apple.proactive.mailIntelligence.followUpSetting
mlmodel
mlmodelc
IS_TIME_DISTRIBUTED
NONE
ReminderModel
structuredEventGazetteer
StructuredEventModel
com.apple.CoreSuggestions.SemlPlugin
plplist
SGExtractionModel.m
relPath
polarity_true
%@.%@
mapping
%@_%@
SGExtractionModels
SGIStore error
Can not add interdict between non-disjoint sets %@ and %@
@"NSString"16@?0@"SGRecordId"8
%lld
INSERT INTO identityInterdict (a, b) VALUES (?, ?)
SELECT a, b FROM identityInterdict
@"SGLabeledValue"16@?0@"SGContactDetail"8
SGSqlEntityStore+Identity.m
rebuildIdentityTables
DELETE FROM identityPerson
DELETE FROM identityLink
DELETE FROM identityPhones
DELETE FROM identitySocialProfileIdentifiers
WHERE e.entityType = :pseudo OR e.entityType = :unrec
Unexpected entity type: %lld
v16@?0@"NSString<SGNormalizedName>"8
SELECT fullname, recordId, nameSketches, phones, socialProfileIdentifiers, email FROM identityPerson WHERE (surname IN _pas_nsarray(:middleNameAndSurname) OR middlename = :surname) AND isSent = :isSent LIMIT :limit
:middleNameAndSurname
:surname
:isSent
fullname
recordId
nameSketches
phones
socialProfileIdentifiers
SELECT recordId FROM identityPerson WHERE email=? AND fullname=? LIMIT %d
SELECT recordId FROM identityPerson WHERE email=? AND fullname IS NULL LIMIT %d
Expected nonzero number of phones
fullname=:fullname
(surname = '' OR surname IS NULL) AND fullname IS NULL
SELECT recordId FROM identityPerson   WHERE %@ AND recordId IN (       SELECT recordId from identityPhones           WHERE phone IN _pas_nsarray(:phones)   )   LIMIT :limit
:fullname
@16@?0@"SGLabeledValue"8
:phones
identityPerson
socialProfiles
Expected nonzero number of socialProfiles
SELECT recordId FROM identityPerson   WHERE %@ AND recordId IN (       SELECT recordId from identitySocialProfileIdentifiers           WHERE socialProfileIdentifier IN _pas_nsarray(:socialProfileIdentifiers)   )   LIMIT :limit
:socialProfileIdentifiers
SELECT 1 FROM identityLink WHERE recordId1=? AND recordId2=? AND type=?
INSERT OR IGNORE INTO identityLink (recordId1, recordId2, type, strength) VALUES (?,?,?,?)
SELECT phones, socialProfileIdentifiers FROM identityPerson WHERE recordId = :recordId
:recordId
DELETE FROM identityPhones WHERE phone IN _pas_nsarray(:phones) AND recordId=:recordId
DELETE FROM identitySocialProfileIdentifiers WHERE socialProfileIdentifier IN _pas_nsarray(:socialProfileIdentifiers) AND recordId=:recordId
DELETE FROM identityPerson WHERE recordId = ?
DELETE FROM identityLink WHERE recordId1 = ?1 OR recordId2 = ?1
SELECT recordId1, recordId2, type, strength FROM identityLink
SELECT recordId FROM identityPerson WHERE curated
graph
nameToVertex
disjointSets
SELECT recordId, email FROM identityPerson WHERE (surname = '' OR surname IS NULL) AND fullname IS NULL AND LENGTH(email) > 0
Vertex not found in lookup table
SELECT recordId FROM identityPerson WHERE email = :email AND fullname IS NOT NULL
OOM while adding edge to graph
SELECT recordId, phones FROM identityPerson WHERE (surname = '' OR surname IS NULL) AND fullname IS NULL AND LENGTH(phones) > 0
SELECT recordId FROM identityPerson    WHERE fullname IS NOT NULL        AND recordId IN (            SELECT recordId from identityPhones                WHERE phone IN _pas_nsarray(:phones)        )
SELECT recordId, socialProfileIdentifiers FROM identityPerson WHERE (surname = '' OR surname IS NULL) AND fullname IS NULL AND LENGTH(socialProfileIdentifiers) > 0
SELECT recordId FROM identityPerson    WHERE fullname IS NOT NULL        AND recordId IN (            SELECT recordId from identitySocialProfileIdentifiers                WHERE socialProfileIdentifier IN _pas_nsarray(:socialProfileIdentifiers)        )
graph error
SGIStore.h, line %i
SELECT recordId1, recordId2, strength FROM identityLink
SELECT recordId FROM IdentityPerson
v16@?0r^{_vertex_t=^v^^{_edge_t}II}8
computeBlobs
SELECT (CASE WHEN e.masterEntityId > 0 THEN e.masterEntityId ELSE e.id END), i.nameSketches FROM entity AS e INNER JOIN identityPerson AS i ON e.id = i.recordId LIMIT :limit
@"NSString<SGNormalizedPhoneNumber>"16@?0@"CNLabeledValue"8
@"NSNumber"16@?0@"CNContact"8
@"CNContact"24@?0Q8@"NSArray"16
@"NSNumber"16@?0@"SGRecordId"8
SELECT recordId, fullname, phones, email, socialProfileIdentifiers FROM identityPerson WHERE recordId IN _pas_nsarray(:ids)
v24@?0@"CNContact"8@"SGRecordId"16
DELETE FROM identityBlobAnalysisJobs
INSERT INTO identityBlobAnalysisJobs (mergeBlob) VALUES (:mergeBlob)
:mergeBlob
SELECT id, mergeBlob FROM identityBlobAnalysisJobs
DELETE FROM identityBlobAnalysisJobs WHERE id = :blobId
:blobId
SELECT 1 FROM identityBlobAnalysisJobs LIMIT 1
INSERT INTO identityInterdictNext (a, b) VALUES (?, ?)
DROP TABLE identityInterdict
CREATE TABLE identityInterdict (a TEXT NOT NULL, b TEXT NOT NULL)
SELECT a, b FROM identityInterdictNext
DELETE FROM identityInterdictNext
INSERT OR IGNORE INTO identityPerson (recordId, surname, middlename, fullname, nameSketches, phones, socialProfileIdentifiers, email, curated, isSent) VALUES (?,?,?,?,?,?,?,?,?,?)
INSERT OR IGNORE INTO identityPhones (phone, recordId) VALUES (?, ?)
INSERT OR IGNORE INTO identitySocialProfileIdentifiers (socialProfileIdentifier, recordId) VALUES (:socialProfileIdentifier, :recordId)
:socialProfileIdentifier
q24@?0@"_PASTuple2"8@"_PASTuple2"16
v16@?0@"SGPatternGlobalData"8
CompiledPatterns.plist
CompiledPatterns.pldat
(nil path)
SGPatterns.m
Could not read pattern plist from %@: %@
nolang
Invalid pattern plist: no nolang locale found! Keys: %@
filesystemPathForAssetDataRelativePath returned nil
Could not load pattern data
Language not found: %@
base
eu-me
w-europe
e-europe
asia
middleeast
v32@?0@"NSString"8@"NSDictionary"16^B24
Non-prefiltered regexp was array: %@
.filt
Data not found for prefiltered regexp: %@
Could not find raw asset value for key %@
SGPatterns-deathTimer
zh-hans
zh-hant
Error loading file %@: %@
(off & 0b11) == 0
off + len <= _fileData.length
in-reply-to
SGSimpleMailMessage.m
[header isKindOfClass:[SGSimpleMailHeaderKeyValue class]]
nonnull property %s *%s was null when decoded
<SGSimpleMailHeaderKeyValue: %@: %@>
inReplyTo
replyTo
hasInhumanHeaders
isPartiallyDownloaded
mailingList
headers
@"NSData"8@?0
_quotedRegionsCached
@email.android.com>
@"NSIndexSet"8@?0
@"NSNumber"8@?0
B16@?0@"SGDataDetectorMatch"8
@"CSPerson"8@?0
%02x
htmlContentData
<SGSimpleMailMessage %@>
 x-sendgrid-eid x-facebook-notify x-amazon-mail-relay-type x-autogenerated x-campaign x-ses-outgoing x-ebay-mailtracker x-mailing-id x-phpbb-origin x-report-abuse x-facebook x-bloggermail x-campaign-id x-feedback-id
list-unsubscribe
precedence
bulk
auto-submitted
x-email-type-id
@"SGSimpleNamedEmailAddress"16@?0@"CSPerson"8
@16@?0@"BMNamedHandle"8
(?,?)
(%d,?)
(%d,%d)
/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/re2/re2/re2_nfa.cc
Bad args: context does not contain text 
Bad args: nsubmatch=
Unexpected opcode in short circuit: 
Unexpected empty-width in short circuit: 
Unhandled 
 in step
CL.loc.vcf
Shared Location.loc.vcf
%@'s Location.loc.vcf
jpeg
heic
photoSharingUEhPVE8K
firstPartyLocTE9DLjFwCg
firstPartyPhoneUEhPTkUuMXAK
firstPartyEmailRU1BSUwuMXAK
firstPartyPostalUE9TVEFMLjFwCg
thirdPartyPhoneUEhPTkUuM3AK
thirdPartyEmailRU1BSUwuMXAK
thirdPartyPostalUE9TVEFMLjFwCg
SGQuickResponsesML.m
=\?(?:[^\s()<>@,;:"\/\[\]?.=]+?)\?(?:[^\s()<>@,;:"\/\[\]?.=]+?)\?(?:[^?\s]+)\?=
NSString+EncodedWord.m
error creating encodedWordRegex: %@
void hashStrings(NSArray<NSString *> *__strong, NSData *__strong, uint8_t *)
SGCrypto.m
strings.count > 0
digest != NULL
strictLowerBound
strictUpperBound
@"NSNumber"16@?0@"SGMISaliencyModelConfigRule"8
true
com.apple.MobileAddressBook
SGLowMemoryContactEnumeration
@"NSString"16@?0@"CSSearchableItem"8
v24@?0^{_LXEntry=}8*16
SGNicknames.m
nicknames
NUMERIC_MAPPING
CHARACTER_MAPPING
-[SGSymbolicMappingTransformer transform:]
SGSymbolicMappingTransformer.m
SG_FEATURE
SG_TARGET
%s%lu
NSString * _Nonnull numberedString(NSString * _Nonnull __strong, NSUInteger)
numberedString
SGFlightData.m
Expected keys to be unique and in ascending order. That constraint was violated by this sequence of keys:
%d: %@
%d: %@
KeyTooShort
The key was too short.
AirportNameNoise.plist
failed to get asset path for AIRPORT_NAME_IDENT.
IataCodeToCity.plplist
failed to get asset path for IATA_CITY_DB_IDENT.
flights
@"SGOffsetDictionary"8@?0
airports
carrierNames
flightsUpdate.dat
airportsUpdate.dat
carrierNamesUpdate.dat
flightCodes.count > 0
airportCodeCandidats_
airportInitScore_
airportBestScore_
airline
flightno
%@ %@ from %@ to %@
void _SGTaggedTypeAssert_impl(Class, void *)
SGTaggedMalloc.m
((uintptr_t)ptr & 0b11) == 0
object_getClass(obj) == tag
NSData *_SGTaggedVMAlloc_impl(Class, size_t, void **)
Could not allocate virtual memory
personFromSenderStats
personFromSenderInDyadicConversationStats
subjectContentStats
personToRecipientsStats
personCCRecipientsStats
domainFromSenderStats
conversationStats
listIdStats
attachmentsStats
subjectCountStatsStats
standardMailRulesStats
mailboxStats
mailboxTypeStats
B16@?0@"LSApplicationRecord"8
LSApplicationRecord+Suggestions.m
HTTP URL should always construct
-[SGBinaryClassificationModel initWithPlist:chunks:context:]
SGBinaryClassificationModel.m
[dict isKindOfClass:[NSDictionary class]]
MODEL_TYPE
MODEL_LOCALE
MODEL_DATA
LOGISTIC
Unknown model type: %@
MODEL_FEATURIZER
MODEL_SOURCE_SESSION_DESCRIPTOR
MODEL_DECISION_THRESHOLD
Unknown type of model class: %@
%@_%@_%@%@Model.chunk
PREDICTION
args:
dataDetectionSignificantPhrasePhoneLogistic
significantPhoneNumber
Logistic
dataDetectionSignificantPhraseEmailLogistic
significantEmailAddress
dataDetectionSignificantPhraseEmailForIMessageLogistic
dataDetectionSignificantPhraseAddressLogistic
significantAddress
dataDetectionSignificantPhraseAddressForIMessageLogistic
selfIdentificationPhraseLogistic
selfId
birthdayTextMessageCongrats
birthdayExtraction
com.apple.suggestions.SGBloomFilter
SGBloomFilter.m
dirPath
.bf-head
.bf-tail
.bf2-head
.bf2-tail
Invalid file extension for Bloom filter chunk: %@
Armenian
Avestan
Balinese
Bamum
Batak
Bengali
Bopomofo
Brahmi
Braille
Buginese
Buhid
Canadian_Aboriginal
Carian
Chakma
Cham
Cherokee
Common
Coptic
Cuneiform
Cypriot
Cyrillic
Deseret
Devanagari
Egyptian_Hieroglyphs
Ethiopic
Georgian
Glagolitic
Gothic
Greek
Gujarati
Gurmukhi
Hangul
Hanunoo
Hebrew
Hiragana
Imperial_Aramaic
Inherited
Inscriptional_Pahlavi
Inscriptional_Parthian
Javanese
Kaithi
Kannada
Katakana
Kayah_Li
Kharoshthi
Khmer
Latin
Lepcha
Limbu
Linear_B
Lisu
Lycian
Lydian
Malayalam
Mandaic
Meetei_Mayek
Meroitic_Cursive
Meroitic_Hieroglyphs
Miao
Mongolian
New_Tai_Lue
Ogham
Ol_Chiki
Old_Italic
Old_Persian
Old_South_Arabian
Old_Turkic
Oriya
Osmanya
Phags_Pa
Phoenician
Rejang
Runic
Samaritan
Saurashtra
Sharada
Shavian
Sinhala
Sora_Sompeng
Sundanese
Syloti_Nagri
Syriac
Tagalog
Tagbanwa
Tai_Le
Tai_Tham
Tai_Viet
Takri
Tamil
Telugu
Thaana
Thai
Tibetan
Tifinagh
Ugaritic
SGTextMessageConversationTracker.m
[result.firstObject isKindOfClass:[SGTextMessageItem class]]
[conversation.firstObject isKindOfClass:[SGTextMessageItem class]]
@24@?0@"SGTextMessageItem"8Q16
_text
[otherItem isKindOfClass:[SGTextMessageItem class]]
@"NSString"16@?0@"SGTextMessageItem"8
significant-pseudo-contacts.bf
SGDatabaseJournalFile.m
Can not overwrite journal file
data.length <= UINT32_MAX
!_dead
v24@?0^v8Q16
<SGDatabaseJournalFile %@>
startDate
endDate
http://schema.org/Ticket
http://schema.org/EventReservation
http://schema.org/MovieShowing
http://schema.org/Movie
movie
http://schema.org/Event
Event
ReminderPreprocessor
ReminderInputMapping
ReminderOutputMapping
ReminderOverrides
config
wordBoundary
v16@?0@"SGReminderExtractionModelGuardedData"8
ReminderDissector model inference
bi_lstm_0_h_in
bi_lstm_0_c_in
bi_lstm_0_h_in_rev
bi_lstm_0_c_in_rev
categoryLog
eventsCount
eventKey
interactionKey
timingProcessing
creationDate
launchCountMessages
launchCountReminders
launchCountCalendar
launchCountMail
launchCountMaps
aggregateSummary
deviceLanguage
rtcLogsSent
remindersCountStats
documentType
locationType
expirationDate
trialExperimentId
trialTreatmentId
trialDeploymentId
trialRolloutId
trialRampId
mobileAssetsVersion
privacyAwareLogging.ser
.old
v16@?0@"SGRTCLoggingGuardedData"8
com.apple.suggestd.interactions-write-queue
rtc-persist
q24@?0@"NSDictionary"8@"NSDictionary"16
loggedExtractions
loggedInteractions
loggedInteractionsSummary
storeAge
unknown
flight
train
boat
hotel
carRental
ticket
food
social
eventCategory
templateName
domain
isAllDay
isCancelled
isFromSync
isSplashScreenAcknowledged
bundleID
@"SGEntityTag"16@?0@"NSString"8
SGDelivery_ctNumSame_%lu
medium
high
outputExceptions
outputInfos
eventDuplicateKey
Suggestions
usageMaps
usageCalendar
localeAssetVersion
event
exception
outputException
suggestd
mail
mailBanner
mailDDLink
messages
messagesBanner
messagesDDLink
calendar
calendarNotification
calendarInbox
calendarEventDetails
calendarCanvas
calendarWidget
calendarWidgetUpNext
calendarZKW
calendarAutocomplete
maps
mapsWidget
TTLNotification
spotlight
calendarCreateEventIntent
remindersNotification
remindersList
remindersQuickType
checkInShortcutApp
checkInShortcutSafari
found
shown
engaged
confirmed
rejected
dismissed
dissected
harvested
filtered
deleted
dkim_failed
dkim_succeeded
dissected_realtime
dissected_background
extraction
interactionSummary
reminderExtraction
reminderInteraction
reminderInteractionSummary
webpage
http://schema.org/FlightReservation
boardingTime
http://schema.org/Airline
iataCode
icaoCode
http://schema.org/Airport
http://schema.org/Flight
flightNumber
departureAirport
departureGate
departureTerminal
arrivalAirport
arrivalGate
arrivalTerminal
Flight
plugin
personHandle
startDateTimestamp
endDateTimestamp
reimportRequests
UPDATE reimportRequests SET queryTimestamp = :time WHERE id = :id
INSERT OR REPLACE INTO reimportItems (reimportRequestId, bundleId, uniqueId) SELECT :rid, :bid, value FROM _pas_nsarray(:chunk)
-[SGSqlEntityStore(ReimportRequests) storeReimportItems:requestId:]_block_invoke_4
SGSqlEntityStore+ReimportRequests.m
requestId <= INT64_MAX
:rid
:chunk
v32@?0@"NSString"8@"NSSet"16^B24
UPDATE reimportRequests SET executionTimestamp = :time WHERE id = :id
UPDATE reimportItems SET seenByReceiverTimestamp = :time WHERE bundleId = :bundleId AND uniqueId IN _pas_nsarray(:uids)
:bundleId
UPDATE reimportItems SET seenByReceiverTimestamp = :time WHERE bundleId = :bundleId AND uniqueId = :uniqueId
:uniqueId
UPDATE reimportItems SET uniqueId = :newValue WHERE bundleId = :bundleId AND uniqueId = :oldValue
:oldValue
:newValue
queryTimestamp IS NULL
queryTimestamp IS NOT NULL AND executionTimestamp IS NULL
SELECT id, plugin, personHandle, startDateTimestamp, endDateTimestamp FROM reimportRequests WHERE %@
SELECT bundleId, uniqueId FROM reimportItems WHERE reimportRequestId = :id AND seenByReceiverTimestamp IS NULL
%@:%@
SELECT 1 FROM reimportItems WHERE bundleId = :bid AND uniqueId = :uid
SELECT 1 FROM reimportItems WHERE bundleId = :bid
DELETE FROM reimportRequests WHERE creationTimestamp < :date
:date
DELETE FROM reimportRequests WHERE executionTimestamp IS NOT NULL AND id NOT IN (     SELECT DISTINCT reimportRequestId FROM reimportItems     WHERE seenByReceiverTimestamp IS NULL )
DELETE FROM reimportItems WHERE reimportRequestId NOT IN (SELECT id FROM reimportRequests)
SELECT creationTimestamp, queryTimestamp, executionTimestamp FROM reimportRequests
reimportRequests_total
reimportRequests_unqueried
reimportRequests_unexecuted
reimportRequests_oldest
reimportRequests_oldestOpen
SELECT seenByReceiverTimestamp FROM reimportItems
reimportItems_total
reimportItems_unseen
SGXPCActivity.m
0 <= activityId && activityId < _SGXPCActivityCount
handler
criteria
activity
com.apple.suggestions.sqlentitystore.cacheprecomputation
com.apple.suggestions.collectweeklystats
com.apple.suggestd.mail-intelligence-tasks
com.apple.suggestd.harvested-url-metric-upload
com.apple.suggestd.custom-response-harvest
com.apple.suggestd.phone-qr-engagement-data-recording
const char *identifierForActivityId(SGXPCActivity)
Unknown activity id: %i
SGEnrichmentWritebackAdapter
@"NSMutableArray"8@?0
v16@?0@"NSMutableArray"8
B16@?0@"SGStorageEvent"8
v24@?0@"NSMutableArray"8^B16
SGEnrichmentWritebackAdapter.m
store
%@-writeback-%tu
SGWritebackV2
v32@?0@"CSSearchableItemAttributeSet"8Q16^B24
CoreSuggestions-EnrichmentWriteback-%@
SGEnrichmentWritebackVersion != 2 && (false
 || com_apple_mail_messageID == "
@"NSMutableArray"16@?0@"NSString"8
expected a nonnull result array for mail message id %@
v24@?0@"NSObject"8@"NSError"16
SGEnrichmentWritebackVersion
enrichmentVersionWritebackKey
SGDonatedEventVersion
SGSchemas
^(?:[A-Z0-9][A-Z]|[A-Z][A-Z0-9])
@"NSString"16@?0@"_PASTuple2"8
SGDepartureAirportNames
SGArrivalAirportNames
reservationStatus
SGDepartureTimeUTCOffsetSeconds
SGArrivalTimeUTCOffsetSeconds
potentialAction
CheckInAction
target
ageOfTheSubmodelInDays
nbHighlyDiscriminantTokensForSaliency
nbHighlyDiscriminantTokensForIgnorability
nbExtremelyDiscriminantTokensForSaliency
nbExtremelyDiscriminantTokensForIgnorability
SGTokenString.m
string
string.length < ((unsigned long)1 << 31)
index < _length
range.location + range.length <= _length
com.apple.suggestions.reversetemplatejs
com.apple.suggestions.reversetemplatejs.pressure
v12@?0I8
DISPATCH_MEMORYPRESSURE_NORMAL
DISPATCH_MEMORYPRESSURE_WARN
DISPATCH_MEMORYPRESSURE_CRITICAL
DISPATCH_MEMORYPRESSURE_PROC_LIMIT_WARN
DISPATCH_MEMORYPRESSURE_PROC_LIMIT_CRITICAL
UNKNOWN
SGReverseTemplateJS
ReverseTemplateJS
SGReverseTemplateJS.m
assetPath
parentDir
fileNameWithPathExtension
@"JSValue"16@?0@"NSString"8
load
loadWithVmGrowthCounter
loadNoVmGrowthCounter
debug
developerLog
console
@"NSDictionary"32@?0@"NSString"8d16@"NSString"24
runDataDetectors
@"NSDictionary"40@?0@"NSString"8d16@"NSString"24@"NSArray"32
runDataDetectorsWithMetadata
parseMicrodata
tokenizeString
decodeEntitiesInString
detectLanguageForString
ASSET_VERSION
@"NSString"20@?0@"NSString"8B16
htmlToPlainText
getCurrentLocale
@"NSDictionary"40@?0@"NSString"8@"NSString"16@"NSString"24Q32
@16@?0@"NSValue"8
tags
ranges
getLinguisticTagsForString
getPreferredLocalizationsFromArray must be called with an array of strings
getPreferredLocalizationsFromArray
@"NSString"40@?0@"NSNumber"8@"NSNumber"16@"NSNumber"24@"NSNumber"32
getLocalizedFormattedDatetimeString
isInternalDevice
allowAnyDomainForMarkup
allowUnverifiedSourceForMarkup
@"NSDictionary"8@?0
getSystemVersion
@"NSString"24@?0@"NSNumber"8@"NSString"16
ZZZZZ
getGMTOffsetFromDateTimeAndTimeZoneOlsonCode
d8@?0
secondsForTiming
freeJSContext
@"NSArray"32@?0@"NSString"8@"NSString"16@"NSString"24
getFlightInformation
getMD5Hash
yyyy-MM-dd
getHistoricalFlightInformation
@"SGJSBurstTrie"16@?0@"NSString"8
loadBurstTrie
loadMappedData
main.js
html
%@%@
com.apple.undefined
request
v32@?0@"PARTask"8@"PARResponse"16@"NSError"24
error
userInfo
carrierCode
carrierName
carrierPhoneNumber
flightID
operatorCarrierCode
operatorFlightNumber
status
departurePublishedTime
departureActualTime
arrivalPublishedTime
arrivalActualTime
divertedAirport
legs
Can't create formattedDate, date is nil
code
timezone
city
street
district
postalCode
countryCode
country
secondsFromGMT
scheduled
delayed
redirected
diverted
landed
canceled
File URL must be a valid path.
SGReverseTemplateJS.holdXpcTransactionForShortDelay
shouldDownloadFull
eventClassificationForEntity
resolveCandidatesForJSDict
getPrivacyAwareMlLogs
getFlightReferencesAndReservationId
expected
predicted
diffSchemasArrays
mergeSchemasArrays
reverseMapForEntity
taggedCharacterRanges
outputs
sourceMetadata
jsMessageLogs
documentDateReceived
hashedSubject
privacyAwareSubject
tdDistrib
tdCount
deviceLocale
messageLength
documentDateProcessed
containsSchemaorg
emailToOutputWithTiming
textMessageToOutputWithTiming
schemaOrgToOutputWithTiming
emailToJsonLdWithExceptions
exceptions
_jsContext
This method must be stubbed!
https
/api/flights
airline_code
flight_number
URL Should not return nil if host is provided and path starts with a '/': %@ %@
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
payload
POST
application/json
Content-Type
JSContext
Class getJSContextClass(void)_block_invoke
void *JavaScriptCoreLibrary(void)
JSValue
Class getJSValueClass(void)_block_invoke
JSObjectRef SGJSObjectMakeArrayBufferWithBytesNoCopy(JSContextRef, void *, size_t, JSTypedArrayBytesDeallocator, void *, JSValueRef *)
JSObjectMakeArrayBufferWithBytesNoCopy
JSContextGroupRef SGJSContextGetGroup(JSContextRef)
JSContextGetGroup
JSStringRef SGJSStringCreateWithUTF8CString(const char *)
JSStringCreateWithUTF8CString
JSScriptRef SGJSScriptCreateReferencingImmortalASCIIText(JSContextGroupRef, JSStringRef, int, const char *, size_t, JSStringRef *, int *)
JSScriptCreateReferencingImmortalASCIIText
void SGJSStringRelease(JSStringRef)
JSStringRelease
JSValueRef SGJSScriptEvaluate(JSContextRef, JSScriptRef, JSValueRef, JSValueRef *)
JSScriptEvaluate
void SGJSScriptRelease(JSScriptRef)
JSScriptRelease
void SGJSGarbageCollect(JSContextRef)
JSGarbageCollect
master_whitelist.trie
com.apple.suggestions.masterwhitelist
v16@?0@"SGDomainWhitelistCheckerGuardedData"8
www.
PRODUCTIVITY_INTELLIGENCE_STRUCTURED_EVENTS
supportedProviders
engineConfig
StructuredEventModel.mlmodelc
structuredEventInputMapping
structuredEventOutputMapping
foundInMailNotifications
v16@?0@"SGStructuredEventTrialClientWrapperGuardedData"8
SGSqliteDatabase.m
hasInhumanTag
tagsHaveEscapedTag
delimitedString
firstStringAfterPrefix
PRAGMA auto_vacuum=INCREMENTAL
:memory:
mode=memory
file:
?mode=memory&cache=shared
sqlite handle unexpected nil
onPrep
TypeError
Could not securely code this type into SQLite
Could not insert this type into sqlite
updateTable:dictionary:whereClause: requires nonempty dictionary
UPDATE %@ SET %@%@
 WHERE 
insertOrReplaceIntoTable:dictionary: requires nonempty dictionary
INSERT OR REPLACE INTO %@ (%@) VALUES (%@)
[%@: %@ <%p>]
SELECT seq FROM sqlite_sequence WHERE name = :tableName
:tableName
PRAGMA integrity_check
Error: failed to run integrity_check on %@: %@
PRAGMA page_count
PRAGMA freelist_count
PRAGMA auto_vacuum
PRAGMA auto_vacuum=2
VACUUM
PRAGMA incremental_vacuum(%lu)
PRAGMA optimize(%llX)
void hasInhumanTag(sqlite3_context *, int, sqlite3_value **)
argc == 1
|inhuman
void tagsHaveEscapedTag(sqlite3_context *, int, sqlite3_value **)
argc == 2
void delimitedString(sqlite3_context *, int, sqlite3_value **)
void firstStringAfterPrefix(sqlite3_context *, int, sqlite3_value **)
int _indexForBindParam(sqlite3_stmt *, const char *)
stmt
Unknown bind parameter "%s"
ml_summary
extractionTemplate
reverseMapped_EVENT_TIME__START_DATETIME
reverseMapped_TITLE__HOTEL_RESTAURANT_NAME
reverseMapped_TITLE__MOVIE_TICKET_NAME
reverseMapped_EVENT_LOCATION__START_ADDRESS
reverseMapped_EVENT_LOCATION__START_PLACE
crossTags
schema
mergedSchema
diff
missingEntities
ddSGDetections
No event predicted by ML classifier
@context
http://schema.org
http://schema.org/FoodEstablishmentReservation
http://schema.org/FoodEstablishment
startTime
reservationName
http://schema.org/LodgingReservation
checkinTime
checkoutTime
http://schema.org/LodgingBusiness
place
http://schema.org/RentalCarReservation
pickupTime
pickupLocation
dropoffTime
dropoffLocation
endAddress
endPlace
providerName
http://schema.org/ScreeningEvent
Unsupported category: %@
ml_plaintext_prediction
cat_%@
yyyy-MM-dd'T'HH:mm:ss
http://schema.org/Reservation
Cancelled
Confirmed
http://schema.org/PostalAddress
streetAddress
addressLocality
addressRegion
addressCountry
shadowExtraction
mlDefaultExtraction
fallbackExtraction
Exception
templateExtractionOutput
No Event
schemaDiff_%@
schemaFromTemplate_%@
M_%@
assetVersion
assetIdentifier
category
usecase
%s%d
(%p)
 flag=%#x
DeadState in RunStateOnByte
NULL state in RunStateOnByte
Unexpected special state in RunStateOnByte
DFA memory cache could be too small: 
only room for 
 states.
StateSaver failed to restore state.
Text is not inside context.
Failed to analyze start state.
RunStateOnByteUnlocked failed after ResetCache
RunStateOnByteUnlocked failed after Reset
timing
<SGSchemaOrgKey uuid:%@>
SELECT locationType, label, address, airportCode, latitude, longitude, accuracy, quality FROM locations WHERE id = ?
eventId
airportCode
accuracy
quality
locations
DELETE FROM snippets WHERE entityId IN (%@)
qmarksSeparatedByCommas
DELETE FROM emailSnippets WHERE emailId IN (%@)
SGSqlEntityStore+Deleting.m
batchSize > 0
SELECT rowid AS minId, key FROM emailMetadata WHERE creationTimestamp < :time AND rowid > :minId ORDER BY rowid LIMIT :limit
:time
minId
SELECT messageId FROM mailIntelligence_saliency WHERE creationTimestamp < :time
possible infinite loop
DELETE FROM mailIntelligence_saliency WHERE messageId IN _pas_nsarray(:messageIds) RETURNING creationTimestamp
:messageIds
mailIntelligence_saliency
DELETE FROM mailIntelligence_spotlightMapping WHERE messageId IN _pas_nsarray(:messageIds)
SELECT entityKey FROM entity WHERE entityType = :entityType GROUP BY entityKey having ( COUNT(entityKey) > 1)
WHERE e.entityKey in _pas_nsarray(:candidateEntityKeys) AND e.entityType = :entityType
:candidateEntityKeys
WHERE ((e.timeRangeEnd < :timeRangeEnd AND e.timeRangeEnd != 0) OR (e.timeRangeEnd == 0 AND e.creationTimestamp < :creationTimestamp)) AND e.entityType = :entityType
:timeRangeEnd
WHERE e.timeRangeEnd < :timeRangeEnd AND e.entityType = :entityType
@"SGEntityTag"16@?0@"SGEmailKey"8
WHERE parentKey = ?
DROP TABLE IF EXISTS %@
CREATE TEMP TABLE %@ (masterEntityId INTEGER PRIMARY KEY)
INSERT OR IGNORE INTO %@ SELECT e.masterEntityId FROM %@ AS cr CROSS JOIN entity AS e ON e.id = cr.id WHERE e.entityType IN (:email, :phone, :address, :birthday, :socialProfile)   AND e.masterEntityId > 0   AND e.masterEntityId NOT IN (SELECT id FROM %@)
:phone
:address
:birthday
:socialProfile
SELECT DISTINCT id FROM %@
pseudoContactsWithDeletedDetails
%@ FROM %@ AS c CROSS JOIN entity AS e ON c.id = e.id CROSS JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityType = :pseudoevent OR e.entityType = :pseudoreminder
:pseudoevent
:pseudoreminder
DELETE FROM entity WHERE id IN (SELECT id FROM %@)
DELETE FROM entity_fts WHERE docid IN (SELECT id FROM %@)
SELECT masterEntityId FROM %@
DROP TABLE %@
DROP TABLE IF EXISTS childrenOfRemovedParents
CREATE TEMP TABLE childrenOfRemovedParents (id INTEGER PRIMARY KEY)
INSERT INTO childrenOfRemovedParents SELECT DISTINCT childId FROM entityParentage WHERE parentKey IN _pas_nsarray(:keys)
DROP TABLE IF EXISTS childrenWithRemainingParents
CREATE TEMP TABLE childrenWithRemainingParents (id INTEGER PRIMARY KEY)
INSERT INTO childrenWithRemainingParents SELECT DISTINCT cr.id FROM childrenOfRemovedParents AS cr CROSS JOIN entityParentage AS ep ON cr.id = ep.childId WHERE ep.parentKey NOT IN _pas_nsarray(:keys)
DROP TABLE IF EXISTS childrenToRemove
CREATE TEMP TABLE childrenToRemove (id INTEGER PRIMARY KEY)
INSERT INTO childrenToRemove SELECT id FROM childrenOfRemovedParents      WHERE id NOT IN (SELECT id FROM childrenWithRemainingParents)
childrenToRemove
DELETE FROM entityTags WHERE parentKey IN _pas_nsarray(:keys)
DELETE FROM entityParentage WHERE parentKey IN _pas_nsarray(:keys)
DROP TABLE childrenToRemove
DROP TABLE childrenWithRemainingParents
DROP TABLE childrenOfRemovedParents
DROP TABLE IF EXISTS entitiesToRemove
CREATE TEMP TABLE entitiesToRemove (id INTEGER PRIMARY KEY)
INSERT OR IGNORE INTO entitiesToRemove SELECT childId FROM entityParentage WHERE duplicateKeyHashBlob IN _pas_nsarray(:keys)
entitiesToRemove
DROP TABLE entitiesToRemove
DELETE FROM entityParentage WHERE duplicateKeyHashBlob IN _pas_nsarray(:keys)
DELETE FROM entityTags WHERE duplicateKeyHashBlob IN _pas_nsarray(:keys)
DELETE FROM locations WHERE id IN (SELECT dueLocationId FROM reminders WHERE entityId IN _pas_nsarray(:recordIds))
:recordIds
DELETE FROM reminders WHERE entityId IN _pas_nsarray(:recordIds)
DELETE FROM extractionInfos WHERE id IN (SELECT extractionInfoId FROM contactDetails WHERE entityId IN _pas_nsarray(:recordIds))
DELETE FROM contactDetails WHERE entityId IN _pas_nsarray(:recordIds)
DELETE FROM locations WHERE eventId IN (SELECT l2.eventId FROM locations AS l2 JOIN events AS e ON e.id = l2.eventId WHERE e.entityId IN _pas_nsarray(:recordIds))
DELETE FROM eventTags AS et WHERE et.eventId IN (SELECT et2.eventId FROM eventTags AS et2 JOIN events AS e ON e.id = et2.eventId WHERE e.entityId IN _pas_nsarray(:recordIds))
DELETE FROM events WHERE entityId IN _pas_nsarray(:recordIds)
DELETE FROM entityParentage WHERE duplicateKeyHashBlob IN _pas_nsarray(:compositeHashes)
:compositeHashes
@"NSData"16@?0@"SGDuplicateKey"8
@"NSString"16@?0@"SGDuplicateKey"8
DELETE FROM emailTags WHERE key IN _pas_nsarray(:keys)
SELECT id FROM emailMetadata WHERE key IN _pas_nsarray(:keys)
DELETE FROM emailMetadata WHERE key IN _pas_nsarray(:keys)
Unexpected tableId for record: %@
DROP TABLE IF EXISTS interactionsByBundleId
CREATE TEMP TABLE interactionsByBundleId (bundleId TEXT NOT NULL, timestamp FLOAT, key TEXT NOT NULL)
INSERT INTO interactionsByBundleId   SELECT delimitedString(key, 0),          CASE WHEN updateTimestamp > 0 THEN updateTimestamp              WHEN creationTimestamp > 0 THEN creationTimestamp              ELSE lastSeenTimestamp END,         key  FROM emailMetaData  WHERE type = ?
CREATE INDEX ix_interactionsByBundleId_bundleId ON interactionsByBundleId(bundleId, timestamp DESC, key)
SELECT bundleId, count(*) FROM interactionsByBundleId GROUP BY bundleId
SELECT key FROM interactionsByBundleId WHERE bundleId = :bundleID ORDER BY timestamp DESC LIMIT -1 OFFSET :limit
:bundleID
v24@?0@"NSString"8^B16
tag.indexed
SELECT entityKey, entityType, parentKey FROM entityTags WHERE tag = :tag
True
False
tim@apple.com
craig@apple.com
eat@myshorts.co
SGAhoCorasick.m
bytecode
bytecode.length > 0
bytecode.length % sizeof(op_t) == 0
SGAhoCorasickMaxIter
Exceeded iteration limit
SGAhoCorasickBoundsCheck
Node %u beyond bound %u
featureVector
Identity
QuotedNickname
CJKSpacers
LastNameFirst
LeadingHonorificPeriodRequired
LeadingHonorificPeriodOptional
TrailingHonorific
CommonVietnameseSurnameList
SpanishNameClassifierConfidenceThreshold
SpanishNameCharacterIndicators
SpanishNameUnigramIndicators
SpanishNameBigramIndicators
TwoCharSpanishNameEndings
SpanishNameLocaleIndicators
Any-Latin; Latin-ASCII
%s.%s
SGNames.m
failed to get patterns for LeadingHonorificPeriodRequired
failed to get patterns for LeadingHonorificPeriodOptional
v28@?0Q8Q16B24
 via LinkedIn
()<>[]"@
Could not initialize pattern.
Could not initialize regular expression: %@
@"NSRegularExpression"8@?0
%c.%s
-_. 
NSCharacterSet *charSetWithEndpoints(int, ...)
n_args && (n_args % 2) == 0
start < end
namefreq.trie
_PASCFBurstTrie *nameFreqTrie(void)_block_invoke_2
Could not load name frequency trie
void enumerateTrailingHonorificMatchesInString(NSString *__strong, BOOL (^__strong)(NSRange))_block_invoke
Could not initialize the raw regexp
NSArray<NSString *> *tokenizeName(NSString *__strong)_block_invoke_2
guardedTokenizer
duration
scrolled_to_end
mailbox_type
app_launch
app_resume
message_view_start
message_view_end
message_fetched
message_moved
reply_sent
reply_draft_started
forward_draft_started
flag_changed
read_changed
link_clicked
<%@>
SGSqlEntityStore+SqlHelpers.m
serializedEntityKey
SELECT title, content, contentRangeOfInterest FROM snippets WHERE entityId=?
%@[%c]
WHERE entityType = :entityType
SELECT COUNT(*) FROM entity
SELECT COUNT(*) FROM emailMetadata
%@ FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId %@ 
schema_version
entities
SELECT entityType, COUNT(*) FROM entity GROUP BY entityType UNION SELECT type, COUNT(*) FROM emailMetadata GROUP BY type
total_entities
SELECT COUNT(*) FROM (SELECT id FROM entity WHERE masterEntityId > 0 AND entityType = :entityType)
merged_pseudocontacts
SELECT count(*), MIN(entityId), MAX(entityId) FROM serializedContacts
serialized_contacts_lowest
serialized_contacts_highest
serialized_contacts_limit
serialized_contacts_total
entity_fts
SELECT count(*) FROM entity_fts
entity_fts_count
SELECT count(*) FROM entity_fts WHERE docid != entityId
entity_fts_details
entity_fts_lang
snippets
emailSnippets
SELECT (SELECT COUNT(*) FROM snippets) + (SELECT COUNT(*) FROM emailSnippets)
snippets_count
SELECT (SELECT COUNT(*) FROM snippets WHERE title IS NOT NULL AND title != '') + (SELECT COUNT(*) FROM emailSnippets WHERE title IS NOT NULL AND title != '')
snippets_title_count
SELECT (SELECT COUNT(*) FROM snippets WHERE content IS NOT NULL AND content != '') + (SELECT COUNT(*) FROM emailSnippets WHERE content IS NOT NULL AND content != '')
snippets_content_count
SELECT COUNT(*) FROM harvestQueueTombstones
tombstones_count
SELECT COUNT(*) FROM entity WHERE id NOT IN (SELECT DISTINCT childId FROM entityParentage)
orphaned_entity_count
SELECT key, value FROM statsCounters
SELECT COUNT(bundle_id), bundle_id FROM urls GROUP BY bundle_id
urlsCounters
DELETE FROM entity
DELETE FROM entity_fts
DELETE FROM entityParentage
DELETE FROM entityTags
DELETE FROM entityReferences
DELETE FROM emailMetadata
DELETE FROM emailTags
DELETE FROM serializedContacts
DELETE FROM cnContactsToSgContacts
DELETE FROM identityInterdict
DELETE FROM urls
DELETE FROM confirmedFieldValues
DELETE FROM snippets
DELETE FROM emailSnippets
INSERT INTO sqlite_sequence(name, seq) SELECT value, :minId FROM _pas_nsarray(:tableNames)
:minId
:tableNames
WHERE e.groupId = :groupId
:groupId
UPDATE entity SET masterEntityId = (CASE id
WHEN %lld THEN %lld
ELSE -1 END) WHERE groupId = :groupId
SELECT e.id,e.entityKey,e.entityType,ep.extractionType,ep.sourceKey,e.author,e.title,e.creationTimestamp,e.updateTimestamp,e.indexTimestamp,e.tags,e.structuredData,e.quality,e.masterEntityId,e.groupId,e.state,ep.parentKey,e.timeRangeStart,e.timeRangeEnd,e.floatingRange,e.timeRangeStartUTCOffsetSeconds,e.timeRangeEndUTCOffsetSeconds,e.locations,ep.modelVersion,ep.modelConfidence, e.harvestedOnBuild 
SELECT e.id,e.entityKey,e.entityType,ep.extractionType,ep.sourceKey,e.author,e.title,e.creationTimestamp,e.updateTimestamp,e.indexTimestamp,e.tags,e.structuredData,e.quality,e.masterEntityId,e.groupId,e.state,ep.parentKey,e.timeRangeStart,e.timeRangeEnd,e.floatingRange,e.timeRangeStartUTCOffsetSeconds,e.timeRangeEndUTCOffsetSeconds,e.locations 
http://schema.org/RentalCar
http://schema.org/Brand
brand
rentalCompany
Car Rental
databasecheck_
***** Database Check: %@
***** Overall Status: %@
failure
**** Integrity check
Integrity check of entities.db
Error: failed to run integrity_check on entities.db: %@
Integrity check of snippets.db
Error: failed to run integrity_check on snippets.db: %@
Broken entityId reference check: %@
SELECT entityId, * FROM %@ WHERE entityId NOT IN (SELECT id FROM entity)
[%@]
Failed to check for entityId broken reference in %@
SELECT DISTINCT masterEntityId FROM entity WHERE masterEntityId >= 0 AND masterEntityId != id AND entityType = :pseudo
SELECT MIN(id) FROM entity WHERE masterEntityId = :masterEntityId AND entityType = :pseudo
SGSqlEntityStore+DatabaseCheck.m
Failed to find merge group minimal element
  * merge group with masterEntityId %lld has unexpected minimal element %lld
SELECT masterEntityId FROM entity WHERE id = :mergeId
:mergeId
  * merge group has masterEntityId %lld, but there is no row with id == %lld
  * merge group has masterEntityId %lld, but the row with entity.id == %lld has masterEntityId == %lld
[1m%@
personFromSenderProbability
personFromSenderInDyadicConversationProbability
subjectContentProbability
personToRecipientsProbability
personCCRecipientsProbability
domainFromSenderProbability
conversationProbability
listIdProbability
attachmentsProbability
subjectCountStatsProbability
standardMailRulesProbability
mailboxProbability
mailboxTypeProbability
SGSqlEntityStore+Maintenance.m
Tried to register cache computation task on an in-memory store
v16@?0@"NSObject<OS_xpc_object>"8
dbstats
merged_pseudocontact_percent
entityTypes.
SGRTCLogging+Helpers.m
bucketSize must be > 0
geocoded
airportCodeWithCoordinates
addressWithCoordinatesWithLabel
addressWithLabel
coordinates
HTMLPreprocessor.js
v24@?0@8@"NSError"16
WKWebViewConfiguration
Class getWKWebViewConfigurationClass(void)_block_invoke
SGDOMParser.m
void *WebKitLibrary(void)
WKWebsiteDataStore
Class getWKWebsiteDataStoreClass(void)_block_invoke
WKWebpagePreferences
Class getWKWebpagePreferencesClass(void)_block_invoke
WKWebView
Class getWKWebViewClass(void)_block_invoke
SGStorageLocation.m
isnan(latitude) == isnan(longitude)
isnan(latitude) || (-90 <= latitude && latitude <= 90)
isnan(longitude) || (-180 <= longitude && longitude <= 180)
!isnan(latitude) || label || address
isfinite(accuracy)
isfinite(quality)
<SGStorageLocation@%0.2f/%0.2f label: '%@' address: '%@' airportCode: '%@'
SGOrigin+Internal.m
Unknown entity type %u
Extracted data must have a parent.
Pseudo contacts must be derived from at least one parent entity
Unsupported type: %@
Dunno how to handle a pseudo contact with a parent entity type: %@
int64_t makeInternalEntityId(SGTableId, int64_t)
SGRecordId+Internal.m
rowId out of range
experimentId
treatmentId
deploymentId
SGDCloudKitSync.m
property
set%c%s:
snprintfResult >= 0
objcProperty != nil
<%@ %@>
SGDCloudKitSync-callbacks
strongEndOperation
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
DeleteZone operation attempt completion [retries: %lu]
CreateZone operation attempt completion [retries: %lu]
v24@?0@"NSDictionary"8@"NSError"16
salt_
salt_atomic_reference
salt-manatee
salt
non-nil
ProcureSalt operation attempt completion [retries: %lu]
com_apple_suggestions_ck_event
v16@?0@"CKRecord"8
muscularEndOperation
[recordZoneID isEqual:[self recordZoneId]]
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
WriteRecord operation attempt completion [retries: %lu]
SGDCloudKitSync_sharedInstanceConfigurationQueue
com.apple.CoreSuggestions.PseudoEvents
com.apple.suggestd.aps
v16@?0@"_SGDCloudKitSyncPersistedState"8
This block should not be run more than once
DISABLED
ENABLED
SGDCloudKitSync.processStateChanges
v24@?0@"CKAccountInfo"8@"NSError"16
v24@?0@"NSNumber"8@"NSError"16
v16@?0@"SGFuture"8
v24@?0@"NSString"8@"NSError"16
aps-environment
SGCKAPSEnvironmentDomain
v24@?0@"CKSubscription"8@"NSError"16
_database == nil
_callback
com.apple.aps.suggestd
com.apple.icloud-container.
com.apple.suggestd
v40@?0@"NSString"8@16@"NSObject"24@"NSObject"32
com.apple.suggestions.sgckAddEntity
@"NSArray"24@?0@"NSData"8@"CKRecordID"16
com.apple.suggestions.sgckDeleteGroupId
@"NSArray"16@?0@"NSData"8
_callback == nil
B16@?0@"SGPipelineEntity"8
_deleteAllSyncedItemsCallback == nil
successful
0-length
[notification isKindOfClass:[CKDatabaseNotification class]]
<SGReminderDueLocation type:'%@' trigger: %@ name: %@>
chatLengthEstimator.cmsketch
SGChatLengthEstimator.m
endTime
partySize
Restaurant
None
SubjectLength
SubjectWordCount
SenderIsVIP
AttachmentHistogramApplication
AttachmentHistogramMedia
AttachmentHistogramOthers
EmailAgeInDays
SenderConnectionScore
PersonFromSenderProbability
SubjectContentProbability
PersonToRecipientsProbability
PersonCCRecipientsProbability
DomainFromSenderProbability
PersonFromSenderInDyadicConversationProbability
AttachmentHistogramProbability
ConversationIdProbability
ListIdProbability
PredictedAttachment
PrivateSubject
PrivateTokenizedSubject
PrivateSenderFrom
PrivateSenderFromInDyadicConversation
PrivateSortedToRecipients
PrivateToRecipientsPairs
PrivateSortedCCRecipients
PrivateCCRecipientsPairs
SenderFullEmailDomain
PrivateAttachmentHistogram
PrivateConversationId
PrivateListId
PrivateHTMLBodyTextContent
PrivateHTMLBodyTextContentLanguageIdentifier
ScrolledToEnd
UserReplied
NumberOfMailsViewedBeforeSinceAvailable
TimeBeforeViewStartSinceAvailable
MessageViewCount
MessageViewMaxDwellTime
MessageViewTotalDwellTime
NumberOfUnreadMessageAtFirstViewTime
NumberOfMoreRecentUnreadMessageAtFirstViewTime
MarkedAsRead
MarkedAsUnread
MailGotFlagged
ReplyDraftStarted
ForwardDraftStarted
MarkedAsJunk
LinkClicked
@16@?0@"NSNumber"8
@"NSString"16@?0@"NSNumber"8
[%@]
%@: %@
@"SGStorageLocation"16@?0@"SGDCKLocation"8
SGPipelineEntity+CloudKitRecord.m
[self.duplicateKey.entityKey isKindOfClass:[SGPseudoEventKey class]]
parentEntityType == SGEntityTypeWebPage || parentEntityType == SGEntityTypeInteraction
Only all-day events should be floating. Other events should have a timezone set before being synced up.
PQT_ContactSharing_TrainingTransformers.plist
SGContactSharingModel.m
SGContactSharingModel - Provided probabilities (count %ld) do not match valid SGContactSharingLabels (count %ld).
countUpTo8KB
count8KBTo32KB
count32KBTo128KB
count128KBTo512KB
count512KBTo2MB
countOver2MB
Application
Media
Others
 [truncated]
[^\x00-\x{10ffff}]
(?:)
Bad final char: 
{%d,}
{%d}
{%d,%d}
(?-m:^)
(?-m:$)
(?HaveMatch:%d)
(){}[]*+?|.^$\
[]^-\
\x%02x
\x{%x}
<SGDetection/%@ '%@'>
%tu out of range (count %tu)
@16@?0Q8
Q8@?0
<SGLabeledValue: %@: %@>
@"NSString"16@?0@"SGEmailAddress"8
@"NSString"16@?0@"SGPhoneNumber"8
(nil)
bi_lstm_0_h_out
bi_lstm_0_c_out
bi_lstm_0_h_out_rev
bi_lstm_0_c_out_rev
addSingleton
componentAnalysis.mm
elementToRepresentative.find(x) == elementToRepresentative.end()
union_
rep1Iter != elementToRepresentative.end()
rep2Iter != elementToRepresentative.end()
set1Iter != representativeToSet.end() && set2Iter != representativeToSet.end()
TARGET_STRING
MAC_DISTANCE
-[SGTokenDistanceMappingTransformer transform:]
SGTokenDistanceMappingTransformer.m
+[SGTokenDistanceMappingTransformer transformArray:withTargetIndex:maximumDistance:]
index < input.count
%@__%d
SuggestionsMLDebugContextDataKey
assertion_context
------
SGJournalEntry.m
eventBatch
reminder
<SGJournalEntry op:%lu entity:%@
predictedMissingElementScore
foundMatchingElement
v16@?0@"SGRealtimeSuggestionsTuple"8
kSuggestionsFromEmailContentCacheSalt
v24@?0@"SGRealtimeSuggestionsTuple"8@"NSError"16
suggestionsFromMessage message harvest queue
@"SGTextMessage"8@?0
after banner callback
SGDSuggestManager+RealtimeDonations.m
Passing 0 for options would return nothing
suggestionsFromEmailContent
_suggestionsFromMessage-plugins
@"SGRealtimeSuggestionsTuple"8@?0
B16@?0@"SGRealtimeContact"8
B16@?0@"SGRealtimeEvent"8
@"SGRealtimeSuggestionsTuple"16@?0@"SGRealtimeSuggestionsTuple"8
@"SGRealtimeReminder"16@?0@"SGRealtimeReminder"8
MAPPINGS
MAPPING_TYPE
MAPPING_LANGUAGE
-[SGStringMappingTransformer transform:]
SGStringMappingTransformer.m
[input isKindOfClass:[NSArray class]]
http://schema.org/BoatReservation
http://schema.org/BoatTrip
http://schema.org/BoatTerminal
arrivalBoatTerminal
departureBoatTerminal
Boat Trip
EventMetaDataExtractor_ML_EVENT__CATEGORY
EventMetaDataExtractor_ML_EVENT__NAME
EventMetaDataExtractor_ML_EVENT__DEPARTURE_LOCATION
EventMetaDataExtractor_ML_EVENT__ARRIVAL_LOCATION
EventMetaDataExtractor_ML_EVENT__TITLE
EventMetaDataExtractor_ML_EVENT__START_DATETIME
EventMetaDataExtractor_ML_EVENT__END_DATETIME
EventMetaDataExtractor_ML_EVENT__END_DATETIME_IS_SIGNIFICANT
SGMessageEventDissectorConfig
EventClassifier
MLEventExtractionModel.assets
EventClassifierThreshold
EventExtractionMessageProcessingLimit
EventExtractionRateLimitInterval
arrivalAirportName
departureAirportName
arrivalAirportCode
departureAirportCode
flightReferences
IATA
ML_EventMessage
Train
Hotel
Movie
GenericEvent
Unknown
eventClassifierPath
assetFolderPath
v16@?0@"SGMessageEventDissectorGuardedData"8
CoreSuggestionsInternals
IndiaSMSEventExtraction
IndiaSMSEventExtractionMobileAssets
com.apple.eventMetaDataExtractor.eventMetaDataExtractorPlugin
TaskName
EventSuggestionsFromMessage
InputMessage
AssetFolderPath
v24@?0@"MLRTaskResult"8@"NSError"16
http://schema.org/ReservationConfirmed
http://schema.org/BusStop
http://schema.org/TrainReservation
http://schema.org/TrainTrip
departureStation
http://schema.org/TrainStation
arrivalStation
GenericEvent|%@|%@|%@
@8@?0
outputCategory
messageProcessingRate
failureReasonCode
@"NSDictionary"16@?0@"NSDictionary"8
com.apple.suggestions.messageEventDissector
:label
:extractionInfoId
INSERT INTO contactDetails (entityId, duplicateKey, sourceKey, label, value, type, extractionInfoId) VALUES (:entityId, :duplicateKey, :sourceKey, :label, :value, :type, :extractionInfoId)
SELECT id FROM contactDetails WHERE duplicateKey = :duplicateKey
SELECT entityId FROM contactDetails WHERE duplicateKey = :duplicateKey
SELECT content FROM snippets WHERE entityId = :entityId
SELECT value, label, type, duplicateKey, sourceKey, extractionInfoId FROM contactDetails WHERE entityId = :entityId OR entityId IN (SELECT e.id FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.masterEntityId = :entityId)
label
extractionInfoId
DDScannerCreationError
Failed to construct DDScanner: %@
SGDataDetectors-SharedScanner
NSTextCheckingTypeLink
NSTextCheckingTypePhoneNumber
NSTextCheckingTypeAddress
NSTextCheckingTypeTransitInformation
NSTextCheckingTypeDate
SGDDMatchDate
SGDDMatchFlight
SGDDMatchLink
SGDDMatchLookupHint
SGDDMatchDelivery
SGDDMatchTimeOffset
SGDDMatchOther
B16@?0^{__DDResult={__CFRuntimeBase=QAQ}{__DDQueryRange={__DDQueryOffset=b32b32}{__DDQueryOffset=b32b32}}{?=qq}q^{__CFArray}^{__CFString}^{__CFString}^v^{__CFDictionary}qCf}8
writeInteractionEventEntities
SGSqlEntityStore+Writing.m
Do not call writeInteractionEventEntities with non-interaction entity type.
containerEntity.duplicateKey
writeEntity
Don't know how to write out a container entity of type %@
v16@?0@"SGPipelineEnrichment"8
Contact lacks a recordId prior to identity store update
@16@?0@8
Don't know how to prune container entities of type %@
SELECT parentKey FROM entityParentage WHERE childId = :childId
:childId
SELECT key FROM emailMetadata WHERE key IN _pas_nsarray(:keys) AND type = :emailType ORDER BY updateTimestamp DESC LIMIT -1 OFFSET :offset
:emailType
:offset
SELECT e.entityKey, e.entityType    FROM entity e JOIN entityParentage ep ON e.id = ep.childId    WHERE ep.parentKey = :parentKey AND e.id not in _pas_nsset(:ids)
Dump table "%@":
SELECT 
 FROM %@
%@    
contactEntity
contactDetails
q24@?0@8@16
SELECT e.downloadState FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE ep.duplicateKeyHashBlob = :duplicateKeyHash AND ep.extractionType = :extractionType
:duplicateKeyHash
_writeMessageEntityToSnippetsDb received entity type %@
INSERT OR REPLACE INTO emailSnippets (emailId, content, title) VALUES (:emailId, :content, :title)
_writeEntityToSnippetsDb received message entity type
INSERT OR REPLACE INTO snippets (entityId, content, contentRangeOfInterest, title) VALUES (:entityId, :content, :range, :title)
:range
timeRangeStart
timeRangeEnd
timeRangeStartUTCOffsetSeconds
timeRangeEndUTCOffsetSeconds
floatingRange
pendingGeocode
SELECT pendingGeocode FROM entity WHERE id = :id
id = %lld
UPDATE emailMetadata SET pendingVerification = :pendingVerification WHERE sourceKey = :souceKey
:pendingVerification
:souceKey
curatedDupe
SELECT curatedDupe FROM entity WHERE id = :id
SELECT id, creationTimestamp, updateTimestamp, downloadState FROM emailMetadata WHERE key = :key AND type = :type
author
updateTimestamp
indexTimestamp
lastSeenTimestamp
downloadState
harvestedOnBuild
pendingVerification
DELETE FROM emailTags WHERE unlikely(key = :key)
INSERT INTO emailTags (key, type, tag) VALUES (:key, :type, :tag)
:tag
entity.duplicateKey
Writing enrichment via legacy code path
enrichment.duplicateKey
Writing message entity via legacy code path
SELECT e.id, e.masterEntityId, e.creationTimestamp, e.updateTimestamp FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE (ep.duplicateKeyHashBlob = :duplicateKeyHash AND ep.extractionType = :extractionType)
 UNION SELECT e.id, e.masterEntityId, e.creationTimestamp, e.updateTimestamp FROM entity AS e WHERE e.contentHashBlob = :contentHash
:contentHash
groupId
contentHashBlob
DELETE FROM entityTags WHERE entityKey = :entityKey AND entityType = :entityType AND parentKey 
 = :parentKey
 is NULL
INSERT INTO entityTags (tag, entityKey, entityType, parentKey, duplicateKeyHash, duplicateKeyHashBlob) VALUES (:tag, :entityKey, :entityType, :parentKey, '-', :duplicateKeyHash)
childId
duplicateKeyHash
duplicateKeyHashBlob
extractionType
modelVersion
modelConfidence
loggingIdentifier
@"SGJournalEntry"16@?0@"SGEntity"8
INSERT OR REPLACE INTO entity_fts(docid, entityId, messagingTerms, ftsTerms) VALUES(?, ?, ?, ?)
v16@?0q8
SELECT id, masterEntityId FROM entity WHERE masterEntityId > 0 AND entityType IN (:pseudo, :unrecognized) ORDER BY masterEntityId ASC
:unrecognized
SELECT 1 FROM _pas_nsindexset(:ids) i LEFT JOIN entity e on i.value = e.id AND e.entityType = :contact WHERE e.id IS NULL
recordId from wrong table
@16@?0@"SGRecordId"8
SELECT MIN(id) FROM entity WHERE id IN _pas_nsarray(:ids)
masterEntityRecord
UPDATE entity SET masterEntityId = :masterEntityId WHERE id IN _pas_nsarray(:ids) AND entityType IN (:pseudoContact, :unrecognizedContact)
:unrecognizedContact
writeIdentityBlobs
@"SGRecordId"16@?0@"_PASTuple2"8
[:alnum:]
[:^alnum:]
[:alpha:]
[:^alpha:]
[:ascii:]
[:^ascii:]
[:blank:]
[:^blank:]
[:cntrl:]
[:^cntrl:]
[:digit:]
[:^digit:]
[:graph:]
[:^graph:]
[:lower:]
[:^lower:]
[:print:]
[:^print:]
[:punct:]
[:^punct:]
[:space:]
[:^space:]
[:upper:]
[:^upper:]
[:word:]
[:^word:]
[:xdigit:]
[:^xdigit:]
trainName
trainNumber
trainCompany
<%s %lu-%lu>
InhumanSig
RelaxedSig/F
ValedictionSig/F
RejetedSig/F
SymbolicSig
B24@?0Q8^B16
B16@?0S8B12
-[SGSignatureDissector shouldIgnoreSignature:signatureRange:isInhuman:]_block_invoke
SGSignatureDissector.m
sub != nil
email
address
phone
quote
void tokenize(NSString *__strong, TokenizationState *, NSRange, NSString *__strong)
tokenize range (%lu, %lu) beyond text length %lu
void tokenize(NSString *__strong, TokenizationState *, NSRange, NSString *__strong)_block_invoke_2
Encountered nil Asset while attempting to load HMM tokens.
HmmSigTokens.dat
No HMM token file contained in CoreSuggestions MobileAsset version %lu
Could not load HMM keyword trie
v24@?0{?=qq}8
hmm.dat
viterbi
obs <= NUM_TOKEN_TYPES
void deserializeHmm(NSData *__strong)
Wrong data length: %li
stats
totalNumberOfEmailsProcessedForAttachmentDetectionRoundedToClosestMultipleOf20
totalNumberOfEmailsProcessedForRecipientDetectionRoundedToClosestMultipleOf20
totalNumberOfEmailsProcessedForFollowUpDetectionRoundedToClosestMultipleOf20
numberOfPredictedAttachmentOnLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
numberOfLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
numberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
numberOfLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
SELECT lastSeenTimestamp FROM emailMetadata WHERE key = :emailKey
:emailKey
UPDATE events SET whenRange = "MalformedData"
calevent
unkphone
text-message
social-profile
SGPseudoEventKey.m
globalId
[SGPseudoEventKey groupId:%@
{dropoff}
SGSqlEntityStore+SerializedContacts.m
Unexpected table for recordId: %@
DELETE FROM serializedContacts WHERE entityId = ?
DELETE FROM serializedContacts WHERE entityId IN _pas_nsarray(:ids)
SELECT data FROM serializedContacts WHERE entityId = ?
loadSerializedContactForId
SELECT entityId, data FROM serializedContacts ORDER BY entityId DESC
SELECT entityId FROM serializedContacts
DELETE FROM serializedContacts ORDER BY id DESC LIMIT -1 OFFSET ?
SELECT id FROM serializedContactCacheJobs LIMIT 1
DELETE FROM serializedContactCacheJobs WHERE id=?
updateSerializedContacts-onequery
updateSerializedContacts
INSERT INTO serializedContactCacheJobs (id) VALUES (?)
SGZipUnarchive
SGUnarchiver.m
readArchive && destinationURL
trigger
EXTRACTION__REMINDER_TITLE_ACTION_VERB
EXTRACTION__REMINDER_TITLE_ACTION_OBJECT_CORE
POLARITY__REMINDER_STATEMENT
POLARITY__COMMITMENT
POLARITY__REJECTION
POLARITY__DONE
DUE_LOCATION_TRIGGER__
ARRIVE
LEAVE
MY_HOME
MY_WORK
MY_SCHOOL
OTHER
DUE_TIME_TRIGGER__DATETIME
DUE_LOCATION_TRIGGER__LEAVE
DUE_LOCATION_TRIGGER__ARRIVE
DUE_LOCATION_TRIGGER__MY_HOME
DUE_LOCATION_TRIGGER__MY_WORK
DUE_LOCATION_TRIGGER__MY_SCHOOL
DUE_LOCATION_TRIGGER__OTHER
R_action
I_NN
I_NNP
I_Noun
I_NNS
I_NNPS
I_PRP
I_VB
I_VBP
I_VBN
I_VBG
I_Verb
I_RP
confirmation
triggerOptional
excludeList
confirmationOptional
titlePrefix
L_de
hasPolarity:
hasTitle
hasTrigger
hasCorrectNumberOfActionVerbs
hasActionVerb
hasObjectCore
@"NSString"16@?0@"SGTaggedCharacterRange"8
%@%@%@%@
OriginalMessage/F
BodyHeaders/F
CorporateFooter
SXReply
B24@?0{_NSRange=QQ}8
SGMailQuoteDissector
PRODUCTIVITY_INTELLIGENCE_REMINDERS
actionVerbOptional
messagesBannerLimit
reminderOverrides
reminderPreprocessor
reminderInputMapping
reminderOutputMapping
ReminderModel.mlmodelc
v16@?0@"SGReminderTrialClientWrapperGuardedData"8
"%@"
 OR 
%@%%%@%%
%@%%%@
%@. %@
@"NSString"16@?0@"CNLabeledValue"8
@"CNMutablePostalAddress"16@?0@"CNPostalAddress"8
#NOSTREET#
#NOCITY#
SignificantEmailAddress
SG_FEATURE_RECENCY
SG_FEATURE_ENTITYTYPE
SG_FEATURE_ADDRESSTYPE
SG_FEATURE_OTHER
SG_FEATURE_EMAILTYPE
SG_FEATURE_CALLTYPE
SG_FEATURE_PHONETYPE
SG_FEATURE_BELONGINGTO
SG_FEATURE_BELONGING
SGTokenizer.m
block
SGTokenizer
@"_PASQueueLock"8@?0
v16@?0@8
v40@?0@"NSString"8^B16{_NSRange=QQ}24
ITSTokenListCopyEscapedTokenAtIndex failed to get token at index %ld
"%@*"
ITSTokenListRef _createITSListForFTSQuery(NSString *__strong)_block_invoke_2
tokenizer
SGSqlEntityStoreErrorDomain
SELECT e.entityKey, e.entityType, ep.parentKey FROM entity AS e JOIN entityParentage AS ep ON ep.childId = e.id WHERE e.id = :rowId
SELECT ep.sourceKey FROM entity AS e JOIN entityParentage AS ep ON ep.childId = e.id WHERE e.id = :rowId
SGSqlEntityStore+Loading.m
No support for loading entities from non-legacy recordIds (tableId=%du, internalEntityId=%lld)
WHERE e.id = :rowId
AND ep.modelVersion != 0
WHERE e.entityType = :entityType %@ LIMIT :limit
key = :key
_loadMessageByKey matched multiple rows
SELECT title, content FROM emailSnippets WHERE emailId = :emailId
:emailId
WHERE e.entityKey = :entityKey AND e.entityType = :entityType AND ep.parentKey
WHERE e.entityKey = :entityKey AND e.entityType = :entityType
WHERE ep.sourceKey = :sourceKey AND e.entityType = :entityType
SELECT CASE WHEN masterEntityId > 0 THEN masterEntityId ELSE id END FROM entity WHERE id IN (SELECT CASE WHEN entityType = :contact THEN id ELSE groupId END FROM entity WHERE id=:id)
:contact
Could not load contact (recordId=%@)
RecordId with unexpected table: %@
No record found with id: %@
WHERE masterEntityId = :masterEntityId
SELECT e.id FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityKey = :entityKey AND e.entityType = :entityType AND ep.parentKey IS :parentKey
where
%@ AND e.entityType IN (:entityTypeDetected, :entityTypeCurated)
:entityTypeDetected
:entityTypeCurated
 AND e.entityType IN (:detPhone, :detAddr, :detEmailAddr, :detSocialProfile, :curPhone, :curAddr, :curEmailAddr, :detBirthday, :curBirthday, :curPhotoPath)
:detPhone
:detAddr
:detEmailAddr
:detSocialProfile
:curPhone
:curAddr
:curEmailAddr
:detBirthday
:curBirthday
:curPhotoPath
Contact details require a parent
SELECT e.entityKey AS 'Entity Key', COUNT(*) AS `Entity Count` FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityType = :entityType AND e.creationTimestamp >= :startDate AND e.creationTimestamp <= :endDate GROUP BY e.entityKey ORDER BY e.creationTimeStamp ASC
:startDate
:endDate
SELECT id FROM reminders LIMIT ?
Invalid duplicate key: %@
@16@?0@"SGEntity"8
identifiers.count != 0
MyPhone/F
NotMyPhone/F
MyAddress/F
NotMyAddress/F
BirthdayDate/F
Birthday/F
DetailType
DetailTypes
SelfIdentMsgCount
FilterWithAddressBook
UnlikelyPhoneSampling
LogLine
%ADDRESS%
%DATE%
SGM2BirthdayWrongDay
SGM2BirthdaySameDay
SGM2BirthdayPreviousDay
SGM2BirthdayNextDay
SGM2BirthdayPreviousWeek
SGM2BirthdayNextWeek
{SGRe2IterAction_=B}16@?0^{?={_NSRange=QQ}*}8
SGDetectedAttributeDissector.m
targetPerson
birthdayDate
subtype
v20@?0@"SGEntity"8B16
0123456789+-()
HKHealthStore
Class getHKHealthStoreClass(void)_block_invoke
void *HealthKitLibrary(void)
NSString *textToMatch(long, long, NSString *__strong, SGDataDetectorMatchType)
type == SGDDMatchPhone || type == SGDDMatchPostalAddress || type == SGDDMatchEmailAddress || type == SGDDMatchDate
%WRONG_MATCH_TYPE
SelfIdentification
SG_TARGET_NAME
SGInteractionKey.m
<SGInteractionKey bundleId:%@ personHandle:%@>
SUB_MODEL_KEY_STRING
From
Date
Subject
Header
ReplyAttribution/F
QuotedRegionStart
Headers
Separator
SG_TARGET_PHONE
SignificantPhoneNumber
Add after Compile.
Unexpected op in KeepPart: 
vector
messages.added
messages.lost
messages.pruned
messages.found
messages.deleted
messages.undisplayablyLost
messages.foundAfterUndisplayablyLost
%@.distribution
%@.scalar
%@.%@.%@.richness
phones.sig
phones.phrase
emailAddresses
emailAddresses.sig
emailAddresses.phrase
postalAddresses
postalAddresses.sig
postalAddresses.phrase
%@.phones
%@.emailAddresses
%@.postalAddresses
%@.phones.%@
%@.emailAddresses.%@
%@.postalAddresses.%@
behavior
contacts
postalAddress
behavior.scalar
contactUpdate
calendarApp
eventUpdate
eventCancellation
eventDuplicate
eventNearDuplicate
mailApp
messagesApp
suggest
banner
events.%@s
behavior.distribution.%@.%@.events
contacts.%@s
behavior.distribution.%@.%@.contacts
mailsDrainedPerHarvest
harvestDrainedSomethingFromQueue
mailsDrained
messageTimeSpentInQueue
harvest
record
identityGroupSize
impressions.suggestion.banner
impressions.suggestion.banner.suppressed
impressions.suggestion.banner.hypotheticalIncludingActedOn
impressions.suggestion.banner.event
impressions.suggestion.banner.contact
impressions.suggestion.banner.hypotheticalContactIncludingInsignificant
database
corruption
integrity_check
corruption_marker
contactsFoundOnDeviceEnabled
eventsFoundOnDeviceEnabled
annotationType
range
SGTaggedCharacterRange.m
nonnull NSArray<%@*> *%@ was null when decoded
text
AnnotationTypeUnknown
AnnotationTypeDataDetectors
AnnotationTypeNLTaggerLexicalClass
AnnotationTypeNLTaggerLemma
AnnotationTypeCrossAnnotation
AnnotationTypeMetadata
AnnotationTypeMisc
AnnotationTypeReminder
AnnotationTypeHuman
AnnotationTypePadding
AnnotationTypeModelOutput
AnnotationTypeHTML
AnnotationTypeCSS
AnnotationTypeNER
<SGTaggedCharacterRange annotationType:%@ tags:%@ text:%@>
@"SGTaggedCharacterRange"16@?0@"SGTaggedCharacterRange"8
The baseTaggedCharacterRangeArray isn't sorted.
@"NSSet"16@?0@"NSSet"8
SELF beginswith 'L'
L_%@
Error in TaggedCharacterRange tags, only one can be of type SGTaggedCharacterRangeAnnotationTypeNLTaggerLemma
section_%@_intermediate
section_%@_begin
section_%@_single
tags contains space
TrialModels
com.apple.suggestd.%@.serialQueue
%@_%@_%@_%@
%@_%@_%@
SGContactDetailAddress
SGContactDetailPhone
SGContactEmailAddress
SGContactDetailInstantMessageAddress
SGContactDetailSocialProfile
SGContactDetailBirthday
SGContactDetailPhoto
NSString * _Nonnull SGContactDetailTypeDescription(SGContactDetailType)
SGContactDetail.m
Unknown contact detail type: %lu
SGContactDetailType SGEntityTypeToContactDetailType(SGEntityType)
SGEntityTypeIsContactDetail(entityType)
This should never happen. The param assert should hit if this is the case.
extractionInfo
Cannot construct SGContactDetail from entity of type %lld
SGContactDetailType SGIdentityKeyTypeToContactDetailType(SGIdentityKeyType)
Unhandled identity key type %u
NullCNContactIDPlaceholder:Null
com.apple.suggestions.suggestd.cntosgcontacts
INSERT OR REPLACE INTO cnContactsToSgContacts (cnContactIdentifier, maxEntityId, entityId) VALUES (:cnContactIdentifier, :maxEntityId, :entityId)
:cnContactIdentifier
:maxEntityId
INSERT OR REPLACE INTO cnContactsToSgContacts (cnContactIdentifier, maxEntityId, entityId) SELECT :cnContactIdentifier, :maxEntityId, value FROM _pas_nsarray(:matches)
:matches
loadCNContactMatchesForContact
SELECT maxEntityId, entityId FROM cnContactsToSgContacts WHERE cnContactIdentifier = :cnContactIdentifier
maxEntityId
DELETE FROM cnContactsToSgContacts WHERE cnContactIdentifier = :cnContactIdentifier
DELETE FROM cnContactsToSgContacts WHERE entityId IN _pas_nsarray(:ids)
SELECT DISTINCT cnContactIdentifier FROM cnContactsToSgContacts
cnContactIdentifier
SELECT cnContactIdentifier, maxEntityId, entityId FROM cnContactsToSgContacts ORDER BY cnContactIdentifier, entityId
SELECT cnContactIdentifier FROM cnContactsToSgContacts WHERE entityId = :entityId
SELECT cnContactIdentifier FROM cnContactsToSgContactsCacheJobs LIMIT :batchSize
DELETE FROM cnContactsToSgContactsCacheJobs WHERE cnContactIdentifier IN _pas_nsarray(:batchArray)
:batchArray
cnContactsToSgContactsCacheJobs
INSERT OR IGNORE INTO cnContactsToSgContactsCacheJobs (cnContactIdentifier) SELECT value FROM _pas_nsarray(:batch)
:batch
DELETE FROM cnContactsToSgContactsCacheJobs
updateCNContactMatches
updateCNContactMatches-onequery
@16@?0@"SGContact"8
SGSqlEntityStore+CNtoSGContacts.m
!exceptionSwallowed
SELECT value FROM metadata WHERE key = 'hasFullCNtoSGSync' LIMIT 1
value
INSERT OR REPLACE INTO metadata (key, value) VALUES ('hasFullCNtoSGSync', 3)
v24@?0@"CNChangeHistoryContactChange"8^B16
refreshSuggestionsContact
@"NSMutableSet"8@?0
@"NSString"16@?0@"SGStorageContact"8
duplicate
@"NSString"16@?0@"NSString"8
"%@"%@
@"NSString"24@?0@"NSString"8@"NSString"16
@"NSString"24@?0@"NSString"8@"NSArray"16
false
(%@ == %@)
(%@)
B24@?0@"NSString"8^B16
%@ * %@
%@ %@ *
kMDItemDisplayName
cdwt
firstInitial
%@. * %@
"*%@*"cd
(%@ || %@ || %@)
(%@ && %@)
%@ && (%@ || %@)
harvestTime
plugins
dissectors
verificationOp
geocodeOp
storageOp
messageInHumanBody
messageSubjectDetectedData
messageDetectedData
messageHtmlParser
messageQuotedRegions
<%@ %@ duration: %.6f cpu: %.6f enrichment: %@>
B16@?0@"SGHarvestQueueMetricsTimer"8
Dissector
com.apple
entities.db
snippets.db
@"SGDCloudKitSync"8@?0
CREATE TABLE IF NOT EXISTS integrityCheck (inconsequential STRING)
PRAGMA journal_mode=WAL
PRAGMA synchronous=NORMAL
unable to initialize entity DB
unable to initialize snippets DB
snippetDb instance was unexpectedly non-nil
sqliteCode
SGSqlEntityStore spotlight reindex
com.apple.suggestions.sqlentitystore.cacheprecomputationqueue
mifeaturestore.db
%@.corrupted.%ld
-shm
-wal
v16@?0@"NSMutableDictionary"8
WHERE unlikely(pendingGeocode=1)
SELECT key FROM emailMetadata WHERE unlikely(pendingVerification = 1) ORDER BY creationTimestamp DESC
SELECT ep.parentKey FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityType = :entityType AND e.entityKey = :entityKey ORDER BY e.creationTimestamp DESC
SELECT ep.parentKey FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityType = :entityType AND e.entityKey = :entityKey
SELECT state FROM emailMetadata WHERE key = :key
WHERE (e.masterEntityId = :masterEntityId OR e.id = :masterEntityId) AND +e.entityType = :pseudo AND ep.extractionType != :messagesMeCard
:masterEntityId
:messagesMeCard
Candidate already has more than 1 profile. Merging happening early?
@"SGStorageContact"16@?0@"SGStorageContact"8
Should only get 1 merged contact since that's how we selected the profiles but got %d
:isSentTag
:isMe
SELECT DISTINCT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END  FROM entity WHERE entity.entityType = :pseudo AND title LIKE :prefix ESCAPE '!' AND NOT hasInhumanTag(entity.tags) AND NOT entity.curatedDupe LIMIT :limit
:prefix
:pseudoContactType
:detailType
:detailTags
masterEntityId
v32@?0@"NSString"8q16@"NSArray"24
SELECT entity.masterEntityId, entity.id, entity.entityType, entity.entityKey FROM entityTags CROSS JOIN entity     ON entity.entityKey = entityTags.entityKey AND entity.entityType = entityTags.entityType WHERE entityTags.entityType IN (:pseudoContactType, :detailType)     AND entityTags.tag IN _pas_nsarray(:detailTags)
SELECT entity.masterEntityId, entity.id, entity.entityType, entity.entityKey FROM entityTags CROSS JOIN entity     ON entity.entityKey = entityTags.entityKey AND entity.entityType = entityTags.entityType WHERE entityTags.entityType = :detailType AND entityTags.entityType != :pseudoContactType     AND EXISTS (         SELECT value AS prefix         FROM _pas_nsarray(:detailTags)         WHERE entityTags.tag >= prefix AND entityTags.tag < firstStringAfterPrefix(prefix)     )
SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END  AS masterEntityId FROM entity WHERE id IN _pas_nsset(:ids)     AND NOT hasInhumanTag(entity.tags) AND tagsHaveEscapedTag(entity.tags, :isSentTag) = :isMe
SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END  AS masterEntityId FROM entity WHERE id IN _pas_nsset(:socialProfileSubContactIds)     AND title = ""     AND NOT hasInhumanTag(entity.tags) AND tagsHaveEscapedTag(entity.tags, :isSentTag) = :isMe
:socialProfileSubContactIds
SELECT entity.id FROM entity_fts CROSS JOIN entity     ON entityId = entity.id WHERE messagingTerms MATCH :match     AND NOT hasInhumanTag(entity.tags) AND tagsHaveEscapedTag(entity.tags, :isSentTag) = :isMe
:match
SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END  AS masterEntityId FROM entity WHERE id IN _pas_nsset(:candidates)     AND EXISTS (         SELECT value AS pattern             FROM _pas_nsarray(:patterns)             WHERE title LIKE pattern     )
:candidates
:patterns
v24@?0@"NSMutableSet"8@"NSArray"16
SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END  FROM entityTags AS t CROSS JOIN entity     ON entity.entityKey = t.entityKey AND entity.entityType = t.entityType WHERE t.tag = :interactionTag     AND t.entityType = :pseudoContact     AND NOT hasInhumanTag(entity.tags) AND tagsHaveEscapedTag(entity.tags, :isSentTag) = :isMe
:interactionTag
:pseudoContact
v24@?0@"NSArray"8@?<B@?@"SGContact">16
B24@?0@8@"NSDictionary"16
@"_PASTuple2"16@?0@"SGContact"8
@"SGContact"16@?0@"_PASTuple2"8
@"SGContactMatch"16@?0@"SGContact"8
SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END , docid, entityId, matchinfo(entity_fts, "pcb") AS matchinfoData FROM entity_fts CROSS JOIN entity ON entity.id = entityId WHERE entity_fts.messagingTerms MATCH :match    AND entity.entityType = :pseudo   AND NOT hasInhumanTag(entity.tags)    AND NOT entity.curatedDupe
WITH matches AS (    SELECT entity.id as id, CASE WHEN entity.entityType = :pseudo OR entity.masterEntityId < 0 THEN entity.id ELSE entity.masterEntityId END as entityId        FROM entityTags CROSS JOIN entity ON entity.entityKey = entityTags.entityKey AND entity.entityType = entityTags.entityType        WHERE entityTags.tag GLOB :tagPrefix) SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END , matches.id, matches.entityId FROM matches CROSS JOIN entity ON matches.id = entity.id    WHERE entity.entityType = :pseudo        AND NOT hasInhumanTag(entity.tags)         AND NOT entity.curatedDupe
:tagPrefix
@"SGContactMatch"16@?0@"NSNumber"8
@"NSString"16@?0@"NSValue"8
SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END , entity_fts.docid, entity_fts.entityId, matchinfo(entity_fts, "pcb")    FROM entity_fts CROSS JOIN entity ON entity_fts.entityId = entity.id    WHERE entity_fts MATCH :match        AND entity.entityType = :pseudo        AND NOT hasInhumanTag(entity.tags)        AND NOT entity.curatedDupe
SELECT fts3_tokenizer(:tokenizerName)
:tokenizerName
ab_cf_tokenizer
\(\s*tokenize=ab_cf_tokenizer\s+language="([^\"]*?)"\s+collator="([^\"]*?)",
error instantiating argumentsPattern: %@
language
collator
end >= start
v16@?0@"SGSqlEntityStoreTokenizerGuardedData"8
SELECT DISTINCT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END  FROM entity WHERE entity.entityType = :pseudo AND NOT hasInhumanTag(entity.tags) AND NOT entity.curatedDupe ORDER BY entity.id DESC LIMIT :limit 
searchString
Invalid response from suggestContactMatchesByContactDetailTag
@"SGContactMatch"16@?0@"NSArray"8
SELECT CASE WHEN e.masterEntityId > 0 THEN e.masterEntityId WHEN e.groupId > 0 THEN e.groupId ELSE e.id END  FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityType = :entityType AND e.entityKey = :entityKey
 AND ep.parentKey = :parentKey
SELECT CASE WHEN e.masterEntityId > 0 THEN e.masterEntityId WHEN e.groupId > 0 THEN e.groupId ELSE e.id END  FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityType = :entityType AND e.entityKey = :entityKey AND ep.extractionType != :messagesMeCard
Uninitialized identity key
SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END  FROM entity WHERE id = :entityId
-[SGSqlEntityStore storageContactByRecordId:withSnippets:]_block_invoke
SGSqlEntityStore.m
masterEntityIds.count==1
contactDetailTag.isContactDetail
@16@?0@"NSArray"8
@"NSArray"16@?0@"NSArray"8
SELECT id FROM entity WHERE entityType = :pseudo AND masterEntityId = :masterEntityId AND id != masterEntityId
@"SGStorageEvent"24@?0@"SGStorageEvent"8@"SGStorageEvent"16
@"SGStorageEvent"16@?0@"SGStorageEvent"8
SELECT entityId, fieldValues FROM confirmedFieldValues WHERE entityId IN _pas_nsarray(:ids)
@"NSNumber"16@?0@"SGStorageEvent"8
confirmedFieldValues
fieldValues
UPDATE confirmedFieldValues SET maybeChanged=0 WHERE entityId IN _pas_nsarray(:ids)
AND title LIKE :prefix ESCAPE '!'
 AND id IN (SELECT entityId FROM confirmedFieldValues WHERE maybeChanged=1)
WHERE (e.floatingRange = 0 AND ((:queryStart == e.timeRangeStart) OR (NOT (:queryStart >= e.timeRangeEnd OR :queryEnd <= e.timeRangeStart))) OR e.floatingRange = 1 AND ((:fltQueryStart == e.timeRangeStart) OR (NOT (:fltQueryStart >= e.timeRangeEnd OR :fltQueryEnd <= e.timeRangeStart))))AND e.entityType = :pseudoEventType AND e.state != :deleted 
 ORDER BY e.timeRangeStart ASC LIMIT :limit
:queryStart
:queryEnd
:fltQueryStart
:fltQueryEnd
:pseudoEventType
SELECT e.id FROM entity AS e INNER JOIN entityParentage AS ep ON e.id=ep.childId WHERE e.entityKey=:entityKey AND e.entityType=:entityType AND ep.parentKey
=:parentKey
 IS NULL
NotFound
Could not find duplicateKey
maybeChanged
SELECT fieldValues FROM confirmedFieldValues WHERE entityId=?
DELETE FROM confirmedFieldValues WHERE entityId=?
SELECT c.fieldValues FROM confirmedFieldValues AS c INNER JOIN entity AS e ON c.entityId = e.id INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityKey = :entityKey AND e.entityType = :entityType AND ep.parentKey = :parentKey
realtimeEvent.event.uniqueKey
Could not load event to confirm (recordId=%@)
Could not load event to reject (%@)
Could not load reminder to confirm (recordId=%@)
Could not load reminder to reject (recordId=%@)
Could not load reminder to reject (SGDuplicateKey=%@)
@"NSMutableSet"16@?0@"SGEntityTag"8
SELECT array.rowid, entityKey, entityType, parentKey FROM entityTags JOIN _pas_nsarray(:tagNames) AS array ON entityTags.tag == array.value UNION ALL SELECT array.rowid, key, :emailEntityType, NULL FROM emailTags JOIN _pas_nsarray(:tagNames) AS array ON emailTags.tag == array.value
:tagNames
@"NSString"16@?0@"SGEntityTag"8
:emailEntityType
@"SGEntityTag"16@?0@8
tags.count != 0
SELECT b.entityKey, b.entityType, b.parentKey FROM entityTags AS i CROSS JOIN entityTags AS b ON b.duplicateKeyHashBlob=i.duplicateKeyHashBlob WHERE b.tag=:interactionBundleIdTag AND i.tag IN _pas_nsarray(:tags)
:interactionBundleIdTag
:tags
SELECT key FROM emailMetadata WHERE unlikely(downloadState = :requested) ORDER BY creationTimestamp DESC LIMIT :limit
:requested
UPDATE emailMetadata SET downloadState = :resolved WHERE key IN _pas_nsarray(:keys)
:resolved
@"NSString"16@?0@"SGEmailKey"8
DELETE FROM contactDetails
SELECT %@ FROM %@
NULL
itemReferenceIdentifier
itemReferenceName
epoch
plain
schemas
accountHandles
accountServerIdentifier
webKitPlainText
webKitPlainTextDDResult
extractionMode
geocodingMode
canonical
address+poi
poiGeocodingFilters
ekEventAvailabilityState
com.apple.reversetemplated
segments
@"NSString"28@?0@"NSDictionary"8@"<NSObject>"16B24
CountryCode
transportation
cancelled
iata
carrier
flightDataResolvedCarrierCode
flightDataResolvedCarrierName
destination
flightMissingCarrierCode
routeDesignation
@"NSArray"16@?0@"NSString"8
[flightNumbers containsObject:@([transportationDict[@"routeDesignation"] integerValue])]
flightDataResolvedAirportCode
flightMissingData
flightDataResolvedAirportName
flightDataResolvedAirportTZ
flightMissingTZForAirportCode
templateShortName
flightHasSameOriginAndDestination
emptyGroupId
fallbackGroupId
notes
dateTime
[redacted]
[unavailable]
%@... (length %lu)
dateParseIssue
flightDataResolvedAirportNameForLocation
flightDataResolvedAirportCoordinates
v32@?0@8@16^B24
pastEvent
B32@?0@8Q16^B24
minDurationForAllDayIfNoTz
convertedToAllDay
noTimezone
-[SGExtractionDissector entityForOutputItem:withSiblings:parentEntity:outputExceptions:outputInfos:interaction:]
SGExtractionDissector.m
outputWithoutSchema
categoryType
v32@?0@"SGSimpleMailHeaderKeyValue"8Q16^B24
v12@?0B8
v40@?0@"NSArray"8@"NSDictionary"16@"NSArray"24@"NSDictionary"32
emailDownloadRequested
needsSourceVerification
templateExceptionMessage
jsOutputLogs
outputUsecase
v16@?0@"NSDictionary"8
v16@?0@"SGDOMParserResult"8
candidates
candidateTaggedCharacterRanges
jsEntity
monochrome
ddResult
com.internal.mail.checkinActivity
http://schema.org/CheckInAction
NoTeamId
lastSGMIModelGroundTruthVersion
lastSGMIModelInferenceVersion
lastSGMIUpdaterProcessingDate
earliestNextSGMIUpdaterProcessingDate
totalSGMIUpdaterMailsProcessed
kTotalSGMITruePositivePredictions
kTotalSGMIFalsePositivePredictions
kTotalSGMITrueNegativePredictions
kTotalSGMIFalseNegativePredictions
@"NSNumber"16@?0@"SGMIFeatureSubmodelLink"8
v24@?0@"SGMIFeatureVector"8^B16
SGMISubmodelsManager - Purge deleted emails references
v32@?0@"NSNumber"8@"NSArray"16^B24
SGReverseTemplatesJSDataDetectors.m
yyyy'-'MM'-'dd'T'HH':'mm':'ssZZZZZ
yyyy'-'MM'-'dd'T'HH':'mm':'ss
yyyy'-'MM'-'dd
No locale found for: %@
extractions
Could not create DDScanner
Could not create DDScanner for: %@
ddType
iso8601
endIso8601
components
metadata
B16@?0^{__DDResult=}8
Contact
ContactName
AddressBookContactName
JobTitle
CompanyName
ZipCode
AirlineName
FlightNumber
https?://.{0,16}(?:%@)
)|(?:
<SGMIWarningsConfig (%tu languages)>
  %@: %@
v32@?0@"NSString"8@"SGMIWarningsDetectors"16^B24
attachmentLinkDetectionRegex: %@
defaultTimeIntervalToStartWarningExposition: %.0f
defaultTimeIntervalForAWarning: %.0f
defaultTimeIntervalToEndWarningExposition: %.0f
bodyAnalysisSamplingFactor: %.0f%%
logWarningSignatureStats: %@
SGPseudoReminderKey.m
[SGPseudoReminderKey groupId:%@
-[SGDCKLocation StringAsLocationType:]
SGDCKLocation.m
newVertex
mincut.m
g && g->vertices
digraph g {
    V%u -> V%u [label="%0.2f"];
mincut
maxflow > 0
newEdge
capacity > 0.0
addEdgeToIncidenceList
SGMIError
nil@nil.invalid
<non_dyadic_conversation>
<unassigned_mailbox>
SGMIFeatureVector.m
featureType == SGMIFeatureType_Number || featureType == SGMIFeatureType_NumberArray
FeatureVector for messageId %@: (%ld features)
v32@?0@"<EMContentItem>"8Q16^B24
@"NSString"16@?0@"SGSimpleNamedEmailAddress"8
v32@?0@"NSArray"8@"NSString"16@"NSMutableArray"24
%@-size%@-count%@
5to9
v32@?0@"NSNumber"8Q16^B24
_PASTuple2<NSString *,NSString *> *SGCleavePhoneNumberAndExtension(NSString *__strong)
SGDataNormalization.m
phoneNumber
BOOL SGPhoneNumberMatchInSet(NSMutableDictionary<NSString *,NSString<SGNormalizedPhoneNumber> *> *__strong, NSString *__strong, NSArray<NSString<SGNormalizedPhoneNumber> *> *__strong)
needle
10111
10177
%@ %@ %@ %@ %@ %@
v16@?0^{__DDScanner=}8
interactionId
interactionGroupId
interactionBundleId
reservationItemReferences
reservationContainerReference
intentResponseUserActivityString
interactionTeamId
^(?:hi\s+|hey\s+|yo\s+)([a-zA-Z]+)(?:(?:(?:,|\.|\s+)*$)|(?:(?:,|\.)+))
/tmp/nicknames.json
{contactId: %@, nickName: %@, count: %d}
SGAppLaunchHistory.m
fromStatus
toStatus
SGM2HarvestBudgetStatusUnknown
SGM2HarvestBudgetStatusPower
SGM2HarvestBudgetStatusBattery
SGM2HarvestBudgetStatusExhaustedNumberOfOperations
SGM2HarvestBudgetStatusExhaustedElapsedSeconds
SGM2HarvestBudgetStatusExhaustedDuet
SGPipelineEnrichment.m
identityKey
parent
The parent entity cannot be a contact
com_apple_mail_repliedTo
com_apple_mail_messageID
com_apple_mail_conversationID
contentType == "public.email-message" && InRange(kMDItemContentCreationDate, $time.now(-%lu), $time.now(-%lu))
contentType == "public.email-message" && InRange(kMDItemContentCreationDate, $time.now(-%lu), $time.now(-%lu)) && kMDItemMailboxes == "mailbox.sent"
_kMDItemExternalID == "%@"
contentType == 'public.email-message'
%@ == * && InRange(kMDItemContentCreationDate, $time.now(-%lu), $time.now)
http://schema.org/Person
reservationNumber
bookingTime
http://schema.org/ReservationCancelled
http://schema.org/ReservationPending
http://schema.org/ReservationHold
underName
SGMetricsHelper-asyncQueue
SGDeliveryKey.m
trackingNumber
[SGDeliveryKey externalIdentifier: %@]
SurnamePrefix
CompositeSpanishFirstname
CommonSpanishSurnamePrefix
MultiCharChineseSurname
SingleCharChineseSurname
koreansurnames
SGIdentityName.m
Could not generate file path from koreansurnames.txt
Could not load list of korean surnames from koreansurnames.txt
Could not load components separated by new line.
ja_surname.trie
failed to get asset path for ja_surname.trie
-[SGIdentityName initWithJapaneseName:]_block_invoke_2
Could not load ja_surname trie
v16@?0@"_PASAsset2"8
Jpan
Traditional-Simplified
firstname
middlename
surname
v40@?0@"NSString"8@"NSString"16@"NSData"24@"NSError"32
 not
v24@?0@"CSSearchableItem"8^B16
Internal
textContent
mailConversationIdentifier
accountType
isStoredEncrypted
contentProtection
attachments
test-source
@"NSArray"8@?0
@"SGDataDetectorMatchesWithSignatureRange"8@?0
@16@?0@"NSString"8
dateIsCorrect
isFromCongratulation
didRegexTrigger
offset
didResponseKitTrigger
use_case
provider_name
tickets
restaurant
NoEvent
http://schema.org/MusicEvent
<SGStructuredEventClassification category:%@ useCase:%@ locale:%@>
SGJournal.m
entry
@"SGStorageEvent"16@?0@"SGJournalEntry"8
observer
!_observersFrozen
_observersFrozen
SGContactEntity.m
SGEntityTypeIsContact(entity.duplicateKey.entityType)
SGRawKey.m
<SGRawKey: %@>
%@ . 
SUBJECT
SGDOMParserResult.m
NSString
plainText
SGTaggedCharacterRange
SGPipeline-_resetCachesAndModels-pressure
SGPipeline-_delayedResetCachesAndModels
+[SGPipeline sharedBackgroundProcessingQueue]
+[SGPipeline sharedBackgroundStorageQueue]
Dependencies unknown for dissector class: %@
@"SGPipelineDissector"16@?0#8
@"NSMutableArray"16@?0@"NSArray"8
v32@?0@"SGPipelineDissector"8@"NSArray"16^B24
@?<v@?>16@?0@"SGPipelineDissector"8
Unknown entity type
-[SGPipeline geocodeOperation:withDependencies:]_block_invoke_2
SGPipeline.m
[enrichment.timeRange isValidAllDayRange]
B16@?0@"SGPipelineEnrichment"8
bundleIdentifier and uniqueIdentifier are required if adding a Spotlight reference.
com.apple.suggestions.fulldownloadrequested
Store
dissect
dissectArrayAndWrite
dissectArray
dissectEntityAndWrite
dissectEntity
@"NSOperation"16@?0@"NSArray"8
zh-Hans
v40@?0@"NSString"8{_NSRange=QQ}16^B32
Job stack overflow.
Unexpected opcode: 
 arg 
Bad arg in kInstCapture: 
SGContactDetailKey.m
<SGContactDetailKey identityKey:%@ label:%@ value:%@>
SGPseudoContactKey.m
[SGPseudoContactKey identityKey:%@]
text/vcard
text/calendar
@16@?0@"BMContentAttachment"8
application
image
audio
video
<%@ type:%@ path:%@>
test
testpath
SGTextMessageBirthdayCongratsModel
CG=3&NG=1&FV=1.1
lowerCase
stripNonBaseCharacters
replaceAllWhitespaceWithSpaces
transformFullwidthToHalfwidthASCII
removePunctuationWithExceptions
removeSymbols
mergeNumbersSeparatedByASCIISpace
replaceNumbersWithString
replaceLinksWithString
separateCharacter
mergeAnyConsecutiveCharacters
trimWhitespace
@"SGLocation"16@?0@"SGStorageLocation"8
message:
when
<SGStorageEvent title:%@ dupKey:%@ when:%@>
-[SGStorageEvent geocodedEventWithStartDate:startTimeZone:endDate:endTimeZone:locations:]
SGStorageEvent.m
!startTimeZone == !endTimeZone
q24@?0@"SGStorageLocation"8@"SGStorageLocation"16
SGDSpotlightReceiver.m
manager
SGDSpotlightReceiver.purgeAndDeleteDropbox
@"_PASTuple2"8@?0
v16@?0@"SGXPCResponse"8
v16@?0@"_PASTuple2"8
SGDSpotlightReceiver.deleteDomainIdentifiersDropbox
@"NSMutableDictionary"8@?0
SGDSpotlightReceiver.deleteInteractionBundleIdDropbox
v16@?0@"NSMutableSet"8
SGDSpotlightReceiver.deleteInteractionIdDropbox
SGDSpotlightReceiver.deleteInteractionGroupIdDropbox
@"CSSearchableItem"8@?0
addUserAction-plugins
v24@?0@"_PASTuple2"8^B16
v24@?0@"NSMutableDictionary"8^B16
kUTTypeEmailMessage
kUTTypeMessage
kUTTypeText
kUTTypeContent
kUTTypeToDoItem
com.apple.safari.history
v24@?0@"NSMutableSet"8^B16
persistentIdentifiers
com.apple.proactive.SocialHighlightsRefreshed
SGContactPipelineHelper.m
v24@?0@"CNContact"8^B16
v32@?0@"NSString"8Q16^B24
v16@?0@"NSNotification"8
B16@?0@"CNContact"8
B16@?0@"SGContact"8
SGCuratedContactMatcher.m
Asking to stopOnNewDetail or stopOnMatchedDetail does not make sense alonside providing newDetails or matchedDetails
@16@?0@"CNLabeledValue"8
-[SGDCKEvent StringAsCategoryType:]
SGDCKEvent.m
extraKey
schemaOrg
interactionInfo
parentEntityType
traditions
inversionRate
trieName
Tries
confidenceThreshold
double inversionProbabilityEstimate(double, double, double)
SGNameInversionPredictor.m
Probabilities must be in [0, 1]
Contradictory parameters.
SGEmailKey.m
<SGEmailKey source:%@ messageId:%@>
<SGMITokenCounts[%@]: %@ salient ; %@ regular>
:extractionType
:modelVersion
:confidence
INSERT INTO extractionInfos (extractionType, modelVersion, confidence) VALUES (:extractionType, :modelVersion, :confidence)
SELECT extractionType, modelVersion, confidence FROM extractionInfos WHERE id = :primaryKey
LOCALE
NAME_TAGGING
TRUST_CORENLP
PERSONAL_NAME_MAPPING
PUNCTUATION_MAPPING
TARGET
PHONE
ADDRESS
SG_TARGET_ADDRESS
EMAIL
NAME
FEATURE
PHONENUMBER
LINK
DATE
FIRSTNAME
LASTNAME
FULLNAME
NUMBER
SYMBOL
BELONGINGTO
BELONGING
CALLTYPE
PHONETYPE
ENTITYTYPE
ADDRESSTYPE
RECENCY
EMAILTYPE
com.apple.MobileAsset.LinguisticData.ma.new-asset-installed
SGTokenizerMappingTransformer.m
-[SGTokenizerMappingTransformer transform:]_block_invoke
Must be a dictionary
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
com.apple.suggestions.ml.tokenizing
v40@?0{?={?=qq}Q}8^B32
invalid:nomail
EKEventStore+Suggestions.m
Unhandled message class %@
B16@?0@"EKEvent"8
Concat of 
RE2: unexpected op: 
Bad call to ParseState::ParsePerlFlags
AddFoldedRange recurses too much.
Bad hex digit 
TARGET_MAPPING
PHONE_MAPPING
ADDRESS_MAPPING
DATE_MAPPING
SGEntityMatchingTransformer.m
Unexpected input: %@. %@ requires dictionary with SG_MODEL_INPUT_TEXT key.
Unexpected input: %@. %@ requires SG_MODEL_DISABLE_TARGET_MAPPING to be setif neither SG_MODEL_TARGET_DD_MATCH and SG_MODEL_INPUT_TARGET_RANGE are provied.
@"NSString"16@?0@"SGDataDetectorMatch"8
migrator.%@.full.%lu_to_%lu
memory
disk
com.apple.suggestions.databasemigration.migratorQueue
com.apple.suggestions.databasemigration.
SELECT name FROM sqlite_schema WHERE type='table' AND NOT name LIKE 'sqlite_%'
name
%@FailedUnmigration
Failed to clear database: %@
version
PRAGMA table_list
shadow
Failed to drop table %@: %@
migration_
entityId INTEGER, messagingTerms TEXT COLLATE NOCASE, ftsTerms TEXT COLLATE NOCASE, notindexed=entityId
SELECT MAX(docid) FROM %@
{_PASDBIterAction_=B}16@?0^{sqlite3_stmt=}8
DatabaseMigrator-FTS-queue
INSERT INTO %@ (docid, entityId, messagingTerms, ftsTerms) SELECT docid, entityId, messagingTerms, ftsTerms FROM %@ WHERE docid BETWEEN :batchStart AND :batchStop   AND docid NOT IN (SELECT docid FROM %@)
:batchStart
:batchStop
v16@?0^{sqlite3_stmt=}8
ALTER TABLE %@ RENAME TO %@
entity_fts_from
SELECT MIN(docid) FROM %@ WHERE docid NOT IN (SELECT docid FROM %@)
SGSqlEntityStore+DatabaseMigrator.m
skipToEntityVersion != UINT32_MAX
skipToSnippetsVersion != UINT32_MAX
legacy
old (%lu < %d)
migrator.%@.steps.%lu_to_%lu
SELECT rowId, task FROM postMigrationTasks ORDER BY rowId
task
postMigrationTasks
DELETE FROM postMigrationTasks WHERE rowId == :rowId LIMIT 1
:rowId
com.apple.iChat
SG_UPDATING_SKIP_QUERIES
ATTACH DATABASE :snippetPath AS snippets
:snippetPath
INSERT OR REPLACE INTO snippets.snippets (entityId, title, content, contentRangeOfInterest) SELECT id, title, content, contentRangeOfInterest FROM entity WHERE entityType = :entityType 
INSERT OR REPLACE INTO snippets.snippets (entityId, title, content, contentRangeOfInterest) SELECT id, NULL, content, contentRangeOfInterest FROM entity WHERE entityType != :entityType 
UPDATE entity SET content=NULL, contentRangeOfInterest=NULL
UPDATE entity SET title=NULL WHERE entityType = ?
ALTER TABLE entity ADD COLUMN author TEXT
CREATE TABLE IF NOT EXISTS entityParentage (id INTEGER PRIMARY KEY AUTOINCREMENT,parentKey TEXT,childId INTEGER NOT NULL,duplicateKeyHash TEXT NOT NULL,extractionType INTEGER,sourceKey TEXT,UNIQUE(parentKey, childId))
CREATE INDEX IF NOT EXISTS entityParentageParentKeyIdx on entityParentage(parentKey)
CREATE INDEX IF NOT EXISTS entityParentageChildIdx on entityParentage(childId)
CREATE UNIQUE INDEX IF NOT EXISTS entityParentageDuplicateKeyHashIdx on entityParentage(duplicateKeyHash, extractionType)
CREATE TABLE IF NOT EXISTS serializedContacts (id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER,data BLOB)
CREATE UNIQUE INDEX IF NOT EXISTS serializedContactsEntityIdIdx ON serializedContacts(entityId)
cnContactsToSgContacts
CREATE TABLE IF NOT EXISTS cnContactsToSgContacts (id INTEGER PRIMARY KEY AUTOINCREMENT,cnContactIdentifier TEXT,maxEntityId INTEGER,entityIds TEXT)
CREATE UNIQUE INDEX IF NOT EXISTS cnContactsToSgContactsCIdIdx ON cnContactsToSgContacts(cnContactIdentifier)
ALTER TABLE entity ADD COLUMN downloadState INTEGER DEFAULT 0
entityDownloadStateIdx
CREATE INDEX entityDownloadStateIdx on entity(downloadState)
contentHash
ALTER TABLE entity ADD COLUMN contentHash TEXT
entityContentHashIdx
CREATE UNIQUE INDEX IF NOT EXISTS entityContentHashIdx ON entity(contentHash)
ALTER TABLE entity ADD COLUMN groupId INTEGER DEFAULT -1
groupIdIdx
CREATE INDEX IF NOT EXISTS groupIdIdx on entity(groupId)
entityTags
ALTER TABLE entityTags ADD COLUMN duplicateKeyHash TEXT NOT NULL DEFAULT ''
ix_entityTags_dupKeyHash
CREATE INDEX IF NOT EXISTS ix_entityTags_dupKeyHash ON entityTags(duplicateKeyHash)
DROP TABLE IF EXISTS identityPhonesDeduped
CREATE TEMP TABLE identityPhonesDeduped AS SELECT DISTINCT * FROM identityPhones
INSERT INTO identityPhones SELECT * FROM identityPhonesDeduped
DROP TABLE identityPhonesDeduped
hashHexToBlob
UPDATE entity SET contentHashBlob = hashHexToBlob(contentHash) WHERE contentHash IS NOT NULL AND contentHash != ''
UPDATE entityTags SET duplicateKeyHashBlob = hashHexToBlob(duplicateKeyHash) WHERE duplicateKeyHash IS NOT NULL AND duplicateKeyHash != ''
UPDATE entityParentage SET duplicateKeyHashBlob = hashHexToBlob(duplicateKeyHash) WHERE duplicateKeyHash IS NOT NULL AND duplicateKeyHash != ''
DELETE FROM entity_fts WHERE messagingTerms GLOB :semicolon
:semicolon
*[0-9;];[0-9;]*
UPDATE entity SET masterEntityId = -1 WHERE entityType IN (:pseudo, :unrec)
:pseudo
:unrec
INSERT INTO emailMetadata     (id, key, type, sourceKey, author, creationTimestamp, updateTimestamp, indexTimestamp, lastSeenTimestamp,      tags, state, downloadState, harvestedOnBuild) SELECT e.id, e.entityKey, e.entityType, ep.sourceKey, e.author, e.creationTimestamp, e.updateTimestamp, e.indexTimestamp,     e.lastSeenTimestamp, e.tags, e.state, e.downloadState, e.harvestedOnBuild FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityType IN (:email, :textMessage)
:textMessage
DELETE FROM entityParentage WHERE childId IN (SELECT id FROM entity WHERE entityType IN (:email, :textMessage))
DELETE FROM entity WHERE entityType IN (:email, :textMessage)
INSERT INTO emailTags (key, type, tag) SELECT entityKey, entityType, tag FROM entityTags WHERE entityType IN (:email, :textMessage)
SELECT id FROM emailMetadata
INSERT INTO emailSnippets (emailId, title, content) SELECT entityId, title, content FROM snippets WHERE entityId = :rowId
DELETE FROM snippets WHERE entityId = :rowId
entity_fts_docidfix_backup
SELECT id, entityType, title, groupId, entityKey FROM entity 
DROP TABLE entity_fts_docidfix_backup
SELECT key FROM emailMetadata WHERE type = :interactionType LIMIT :batchSize
:interactionType
:batchSize
serializedInteractionKey
B16@?0@"SGKeyValueCacheFile"8
SELECT id FROM entity WHERE entityType = :entityType LIMIT :limit
SELECT id, whenRange FROM events
DELETE FROM events WHERE id IN _pas_nsarray(:ids)
DETACH DATABASE snippets
void hashHexToBlob(sqlite3_context *, int, sqlite3_value **)
-[SGDetectedAttributeML addSessionForTrainingWithSource:label:language:objective:spotlightRef:embeddedFeaturizer:]
SGDetectedAttributeML.m
[vector isKindOfClass:[PMLSparseVector class]]
B32@?0@"SGTextMessageItem"8Q16^B24
@"SGModelFeatures"8@?0
v16@?0@"SGBinaryClassificationModel"8
NEGATIVE_SAMPLE_CHOPPABLE_START
v24@?0Q8q16
v24@?0Q8Q16
B8@?0
SGModelObjective convertSGDDMatchToModelObjective(SGDataDetectorMatchType, BOOL)
Unknown model objective for SGDataDetectorMatchType = %lu and SGTextMessage
Unknown model objective for SGDataDetectorMatchType = %lu for non SGTextMessage
SGContactSharingLabel firstPersonContactSharingLabelFromMatchType(SGDataDetectorMatchType)
Contact sharing model doesn't support matchType = %lu
SGContactSharingLabel thirdPersonContactSharingLabelFromMatchType(SGDataDetectorMatchType)
SGMIMessageMissingEntityAnalyzer-processing
SGMIMessageMissingEntityAnalyzer-timeout
(null)
http
B16@?0@"SGMIWarningsDetectionRegexMatch"8
@"NSString"16@?0@"CSPerson"8
group
list
%@-0000%@
Mail Previous Recipients for omittedRecipient Queue
v24@?0@"NSArray"8@"NSError"16
found a match
did not find any match
still
{SGRe2IterAction_=B}24@?0^{?={_NSRange=QQ}*}8@"SGRe2"16
i24@?0r^v8r^v16
<RE2 %@>
SGRe2.mm
subregexps
regexpUtf8
<RE2-lazy(%i) %@>
SGRe2 *getInternal(NSData *__strong)
Could not initialize regexp: %@
coreAlternative
coreAlternative2
coreAlternative3
dataDetectorMappedAdditions
dataDetectorAdditions
\b%@\b
<SGMIWarningsDetectionRegexes>
  subject:%@
  body:%@
  dataDetectorMappedAdditions:'%@'
  dataDetectorAdditions:'%@'
@"NSString"16@?0@"NSRegularExpression"8
(?:(?:(?<!\\)\.)|\\w)(?:[*\+\?]|\{\d*\,\d*\})?|(?:\[[^\]]+\](?:[*\+\?]|\{\d*\,\d*\}))
(?<G%tu>%@)
v32@?0@"NSTextCheckingResult"8Q16^B24
G%tu
[PRIVATE]>(ff)
[%@]>(%@)
<SGMIWarningsDetectionRegex with %@ private groups>
Pattern:'%@'
<SGMIWarningsDetectors>
    attachment:%@
    recipientConservative:%@
    recipient:%@
    followUpOnOutgoingMailsQuestions:%@
    followUpOnOutgoingMailsAsks:%@
    followUpOnIncomingMails:%@
SGPlainTextContentCursor.m
message.textContent
predicate
Uninitialized SGIdentityKeyType
SGIdentityKeyTypeEmail
SGIdentityKeyTypeContact
SGIdentityKeyTypeUnrecognizedPhone
SGIdentityKeyTypeInstantMessageAddress
SGIdentityKeyTypeSocialProfile
UNKNOWN IDENTITY KEY TYPE!
SGIdentityKey.m
person.handles.count > 0
parts.count == 2
Unknown type: %@
[SGIdentityKey type:%@ content:%@]
Calling email selector on identity with no email address.
Identity key claims to be an email address but it does not have one
Calling instant message selector on identity with no instant message address.
Identity key claims to be an instant message address but it does not have one
Calling socialProfile selector on identity with no social profile.
Identity key claims to be a social profile but it does not have one
Should not ask for a unique identifier when this is neither an email nor an instance message address
Calling phone number selector on identity with no phone number.
Identity key claims to be a phone number but it does not have one
_type == SGIdentityKeyTypeContact
NSString *keyForIdentityKeyType(SGIdentityKeyType)
No key for SGIdentityKeyTypeUninitialized. Initialize it.
No key for type value %d
SGMicrodataParser.m
libxml tag names should always be lowercase during HTML parsing
libxml attribute names should always be lowercase during HTML parsing
itemprop
itemscope
itemref
itemtype
embed
iframe
track
area
link
object
meter
datetime
&#47;
com.apple.suggestions.spotlightCommander.reimportRequests
public.email-message
public.message
kMDItemTitle
kMDItemContentCreationDate
kMDItemStartDate
kMDItemSubject
job:%@:%@:%d:%d:%@
@"IPPerson"16@?0@"CSPerson"8
-[SGNaturalLanguageDissector addEnrichmentForEvents:forMessage:toEntity:]
SGNaturalLanguageDissector.m
[timeRange isValidAllDayRange]
v16@?0@"NSArray"8
@"NSString"16@?0@"IPMessage"8
v28@?0@"IPMessage"8@"NSArray"16B24
SELECT domainIdentifier FROM entityReferences WHERE bundleIdentifier = ? AND uniqueIdentifier = ? LIMIT 1
SELECT 1 FROM entityReferences WHERE bundleIdentifier = ? AND uniqueIdentifier = ? LIMIT 1
SGSqlEntityStore+Spotlight.m
Unsupported table id %lu
SELECT key, type FROM emailMetadata WHERE id IN _pas_nsindexset(:emailIndexSet)
:emailIndexSet
SELECT e.entityKey, e.entityType, ep.parentKey FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.id IN _pas_nsindexset(:nonEmailIndexSet)
:nonEmailIndexSet
entityKey
entity
entityType
parentKey
entityParentage
Email entities should not have a parent
SELECT id FROM emailMetadata WHERE key = :key
SELECT e.id FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityKey = :entityKey AND e.entityType = :entityType AND ep.parentKey
:entityType
:entityKey
:parentKey
SELECT state, tags FROM emailMetadata WHERE id = :id LIMIT 1
SELECT DISTINCT entityId FROM entityReferences WHERE entityId BETWEEN ? AND ?
v24@?0Q8^B16
@"SGEmailKey"16@?0@"SGDuplicateKey"8
v16@?0@"NSMutableOrderedSet"8
:bid
:uids
SELECT DISTINCT entityId FROM entityReferences WHERE bundleIdentifier = :bid AND uniqueIdentifier IN _pas_nsarray(:uids)
entityReferences
DELETE FROM entityReferences WHERE bundleIdentifier = :bid AND uniqueIdentifier IN _pas_nsarray(:uids)
SELECT id, entityId FROM entityReferences WHERE bundleIdentifier = ? AND ((domainIdentifier GLOB ?)
 OR (domainIdentifier GLOB ?)
Encountered repeated message ID for deletion
DELETE FROM entityReferences WHERE id IN _pas_nsindexset(:affectedReferenceIds)
:affectedReferenceIds
v24@?0@"NSArray"8^B16
SELECT id, entityId FROM entityReferences WHERE bundleIdentifier = ?
DELETE FROM entityReferences WHERE id BETWEEN ? AND ?
SELECT id, entityId FROM entityReferences WHERE bundleIdentifier is null
SELECT 1 FROM harvestQueueTombstones WHERE bundleIdentifier=:bid AND uniqueIdentifier IS NULL AND domainIdentifier IS NULL
SELECT domainIdentifier FROM harvestQueueTombstones WHERE bundleIdentifier=:bid AND uniqueIdentifier IS NULL AND domainIdentifier IN _pas_nsset(:overlappingDomainIdentifiers)
:overlappingDomainIdentifiers
domainIdentifier
harvestQueueTombstones
INSERT OR IGNORE INTO harvestQueueTombstones (bundleIdentifier, uniqueIdentifier, domainIdentifier) VALUES (:bid, NULL, :did)
:did
DELETE FROM harvestQueueTombstones WHERE bundleIdentifier=:bid AND uniqueIdentifier IS NULL AND (domainIdentifier >= :did || '.') AND (domainIdentifier < :did || '/')
uniqueIdentifiers
INSERT OR IGNORE INTO harvestQueueTombstones (bundleIdentifier, uniqueIdentifier, domainIdentifier) SELECT :bid, value, NULL FROM _pas_nsarray(:uids) WHERE NOT EXISTS (SELECT 1 FROM harvestQueueTombstones WHERE bundleIdentifier=:bid AND uniqueIdentifier=value AND domainIdentifier IS NULL)
DELETE FROM harvestQueueTombstones WHERE bundleIdentifier = :bid
INSERT OR IGNORE INTO harvestQueueTombstones (bundleIdentifier, uniqueIdentifier, domainIdentifier) VALUES (:bid,NULL,NULL)
DELETE FROM harvestQueueTombstones
         SELECT 1 FROM harvestQueueTombstones WHERE bundleIdentifier=:bid AND uniqueIdentifier IS NULL AND domainIdentifier IS NULL UNION ALL SELECT 1 FROM harvestQueueTombstones WHERE bundleIdentifier=:bid AND uniqueIdentifier=:uid    AND domainIdentifier IS NULL UNION ALL SELECT 1 FROM harvestQueueTombstones WHERE bundleIdentifier=:bid AND uniqueIdentifier IS NULL AND domainIdentifier IN _pas_nsarray(:dids)
:uid
:dids
SELECT entityId, data FROM serializedContacts
 WHERE entityId >= :minEntityId
 ORDER BY entityId LIMIT :limit
:minEntityId
SELECT entityId, data FROM serializedContacts WHERE entityId IN _pas_nsarray(:ids)
:ids
serializedContacts
data
v16@?0@"NSError"8
v24@?0@"NSData"8@"NSError"16
magicUnsubscribeSuggestionSenderDenyList
magicUnsubscribeSuggestionSenderDomainDenyList
totalNumberOfEmailsProcessedForAttachmentDetection
totalNumberOfEmailsProcessedForRecipientDetection
totalNumberOfEmailsProcessedForFollowUpDetection
totalNumberOfWarningsForFollowUpWithPositiveEngagement
totalNumberOfWarningsForFollowUpWithNegativeEngagement
totalNumberOfRaisedMissingAttachmentWarning
totalNumberOfRaisedMissingRecipientWarning
numberOfPredictedAttachmentOnLargeIncomingMailsWithAttachment
numberOfLargeIncomingMailsWithAttachment
numberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachment
numberOfLargeOutgoingMailsWithAttachment
countOnLastRegexSignatureStatsLoggingAction
lastSGMINicknameProcessingDate
q24@?0@"NSString"8@"NSString"16
Invalid SQL identifier (cannot contain interior null). b64 utf16: %@
_zeroTotalIdx
CREATE TABLE %@ (domain TEXT PRIMARY KEY NOT NULL, total INT NOT NULL) WITHOUT ROWID
CREATE INDEX %@ ON %@ (domain) WHERE total IS 0
PRAGMA schema_version
v16@?0@"SGMIDomainCountingTableGuardedData"8
PRAGMA table_info(%@)
total
ALTER TABLE %@ ADD COLUMN %@ DEFAULT 0 NOT NULL
UPDATE
WHERE
IS NOT 0
UPDATE %@ SET total = total - %@ WHERE %@ IS NOT 0 RETURNING 1
ALTER TABLE %@ DROP COLUMN %@
UPDATE %@ SET total = total - %@, %@ = 0 WHERE %@ IS NOT 0 RETURNING 1
ALTER TABLE %@ RENAME COLUMN %@ TO %@
DELETE FROM %@ WHERE total IS 0
You can't commit a negative count
You can't commit counts to both a parent and its child (you can't commit 1 to both foo and foo.bar)
v32@?0@"NSString"8@"NSNumber"16^B24
SELECT 1 FROM _pas_nsdictionary(:domainsAndCounts) WHERE EXISTS (SELECT domain FROM %@ WHERE (domain >= key || '.') AND (domain < key || '/'))
:domainsAndCounts
v16@?0@"_PASSqliteStatement"8
You can't commit counts to a parent domain (this is not allowed: `commit('foo.bar', 1); commit('foo', 1);`)
SELECT 1 FROM _pas_nsset(:parentDomains) WHERE EXISTS (SELECT domain FROM %1$@ WHERE domain = value) AND NOT EXISTS (SELECT domain FROM %1$@ WHERE (domain >= value || '.') AND (domain < value || '/'))
:parentDomains
You can't convert a leaf domain to a parent domain (this is not allowed: `commit('foo', 1); commit('foo.bar', 1);`)
INSERT INTO
(domain,
, total)
SELECT key, value, value FROM _pas_nsdictionary(:domainsAndCascadedCounts) WHERE value != 0
ON CONFLICT(domain)
DO UPDATE SET
+ excluded.total, total = total + excluded.total
:domainsAndCascadedCounts
SELECT domain AS d, total AS t FROM %@ WHERE domain IN _pas_nsarray(:domains)
:domains
[d isEqual:domain]
[self _hasColumn:column]
SELECT %@ FROM %@ WHERE domain = ?
columnCount %tu is too big
SELECT %@, domain FROM %@ WHERE domain IN _pas_nsarray(:domains)
B24@?0@"NSString"8Q16
@"NSString"24@?0@"NSString"8Q16
WHEN %@ THEN %tu
SELECT domain AS d, CASE %@ ELSE -1 END AS c FROM %@ WHERE domain IN _pas_nsarray(:domains)
SELECT domain AS d, total as t FROM %@ WHERE (d >= MAX(:firstChildOfPrefix, COALESCE(:skipTo, ''), COALESCE(:greaterThan, ''))) AND (d IS NOT :greaterThan) AND (d < :firstAfterPrefix) ORDER BY d ASC%@
 LIMIT :limit
:skipTo
:greaterThan
:firstChildOfPrefix
:firstAfterPrefix
lastDot != NSNotFound
SELECT COUNT(*) AS n FROM %@ WHERE domain = :domain OR (domain >= :domain || '.' AND domain < :domain || '/')
:domain
![self _hasColumn:columnName]
[self _hasColumn:columnName]
![self _hasColumn:newColumnName]
[self _hasColumn:donorColumn]
[self _hasColumn:recipientColumn]
@"NSNumber"16@?0@"NSString"8
B24@?0@"NSString"8q16
v16@?0@"NSString"8
DELETE FROM %@ WHERE (domain >= ?1 || '.') AND (domain < ?1 || '/')
-[SGMIDomainCountingTable deleteDomainSelection:]_block_invoke
SGMIFeatureStore.m
columnCount < INT_MAX
%@=%@-_pas_block(:block,%tu)
DELETE FROM
WHERE domain = ? RETURNING
WHERE domain IN _pas_nsarray(:parentDomains)
-[SGMIDomainCountingTable deleteDomainSelection:]_block_invoke_5
index < columnCount
@"NSNumber"16@?0@"NSArray"8
:block
DELETE FROM %@
SGMIFeatureStore-LockState
v12@?0i8
v16@?0@"SGMIFeatureStoreGuardedData"8
SGMIFeatureStore-Journal
features
@"_PASSqliteDatabase"8@?0
sgmijournal
[column characterAtIndex:0] == '_'
could not scan hex feature name in %@
@"SGMITokenCounts"24@?0@"NSString"8Q16
@"NSArray"24@?0@"NSString"8@"NSArray"16
isSalientDomain || [@"r" isEqual:tokenDomainItems[1]]
kTotalNumberOfWarningsForFollowUpWithPositiveEngagement
kTotalNumberOfWarningsForFollowUpWithNegativeEngagement
INSERT INTO signatureStats (emailLanguage, regexLanguage, type, incomingMessage, signature, negativeEngagement, noEngagement, positiveEngagement, blockedWarningCount) VALUES (:emailLanguage, :regexLanguage, :type, :incomingMessage, :signature, :negativeEngagement, 0, :positiveEngagement, 0) ON CONFLICT (emailLanguage, regexLanguage, type, incomingMessage, signature) DO UPDATE SET negativeEngagement = negativeEngagement + :negativeEngagement, positiveEngagement = positiveEngagement + :positiveEngagement, noEngagement = noEngagement - 1
:emailLanguage
:regexLanguage
:type
:incomingMessage
:signature
:negativeEngagement
:positiveEngagement
INSERT INTO signatureStats (emailLanguage, regexLanguage, type, incomingMessage, signature, negativeEngagement, noEngagement, positiveEngagement, blockedWarningCount) VALUES ('*', :regexLanguage, :type, :incomingMessage, :signature, :negativeEngagement, 0, :positiveEngagement, 0) ON CONFLICT (emailLanguage, regexLanguage, type, incomingMessage, signature) DO UPDATE SET negativeEngagement = negativeEngagement + :negativeEngagement, positiveEngagement = positiveEngagement + :positiveEngagement, noEngagement = noEngagement - 1
INSERT INTO signatureStats (emailLanguage, regexLanguage, type, incomingMessage, signature, negativeEngagement, noEngagement, positiveEngagement, blockedWarningCount) VALUES (:emailLanguage, :regexLanguage, :type, :incomingMessage, :signature, :negativeEngagement, :noEngagement, :positiveEngagement, 0) ON CONFLICT (emailLanguage, regexLanguage, type, incomingMessage, signature) DO UPDATE SET negativeEngagement = negativeEngagement + :negativeEngagement, noEngagement = noEngagement + :noEngagement, positiveEngagement = positiveEngagement + :positiveEngagement
:noEngagement
INSERT INTO signatureStats (emailLanguage, regexLanguage, type, incomingMessage, signature, negativeEngagement, noEngagement, positiveEngagement, blockedWarningCount) VALUES ('+', :regexLanguage, :type, :incomingMessage, :signature, :negativeEngagement, :noEngagement, :positiveEngagement, 0) ON CONFLICT (emailLanguage, regexLanguage, type, incomingMessage, signature) DO UPDATE SET negativeEngagement = negativeEngagement + :negativeEngagement,               noEngagement = noEngagement + :noEngagement,               positiveEngagement = positiveEngagement + :positiveEngagement,               blockedWarningCount = blockedWarningCount + min(1, max(0, 1 + negativeEngagement - positiveEngagement - :positiveEngagement                                                                         - :maxAllowedNegativeUserEngagementDiffToExposeAWarning))RETURNING negativeEngagement, positiveEngagement, blockedWarningCount
:maxAllowedNegativeUserEngagementDiffToExposeAWarning
negativeEngagement
positiveEngagement
B32@?0@"SGMailIntelligenceAttachmentProperties"8Q16^B24
INSERT INTO signatureStats (emailLanguage, regexLanguage, type, incomingMessage, signature, negativeEngagement, noEngagement, positiveEngagement, blockedWarningCount) VALUES (:emailLanguage, :regexLanguage, :type, :incomingMessage, :signature, 0, 1, 0, 0) ON CONFLICT (emailLanguage, regexLanguage, type, incomingMessage, signature) DO UPDATE SET noEngagement = noEngagement + 1
INSERT INTO signatureStats (emailLanguage, regexLanguage, type, incomingMessage, signature, negativeEngagement, noEngagement, positiveEngagement, blockedWarningCount) VALUES ('*', :regexLanguage, :type, :incomingMessage, :signature, 0, 1, 0, 0) ON CONFLICT (emailLanguage, regexLanguage, type, incomingMessage, signature) DO UPDATE SET noEngagement = noEngagement + 1
SELECT SUM(negativeEngagement), SUM(noEngagement), SUM(positiveEngagement), SUM(blockedWarningCount) FROM signatureStats
I16@?0@"_PASSqliteStatement"8
SELECT key, value FROM keyValueStore
SELECT emailLanguage, regexLanguage, type, incomingMessage, signature, negativeEngagement, noEngagement, positiveEngagement, blockedWarningCount FROM signatureStats
emailLanguage
signatureStats
regexLanguage
type
incomingMessage
signature
noEngagement
blockedWarningCount
SELECT SUM(positiveEngagement), SUM(noEngagement), SUM(negativeEngagement) FROM signatureStats WHERE (type=:followUpAsk OR type=:followUpQuestion) AND (emailLanguage='+' OR emailLanguage='*')
:followUpAsk
:followUpQuestion
DELETE FROM signatureStats
v32@?0@"NSString"8@"SGMITokenCounts"16^B24
v24@?0@"NSString"8@"NSDictionary"16
v32@?0@"NSString"8@"NSString"16^B24
counts
numberOfTokenEntries
salientCount
regularCount
overallCounts
lastUpdates
en_US
MMM,dd
v32@?0@"NSString"8@"NSArray"16^B24
@"NSDictionary"16@?0@"NSString"8
salientTokensDistribution
regularTokensDistribution
-[SGMIFeatureStore _purgeTokensWhichLastUpdateWasBefore:shouldContinue:usingDatabase:]_block_invoke
idx != NSNotFound
B16@?0@"NSString"8
v32@?0@"NSNumber"8@"NSMutableSet"16^B24
v32@?0@"NSNumber"8@"NSNumber"16^B24
DELETE FROM keyValueStore
migration_createFeaturesTable
migration_createKVTable
migration_createFollowUpTable
DELETE FROM followUpTable
ALTER TABLE followUpTable ADD COLUMN messageId TEXT
DROP TABLE followUpTable
migration_createFollowUpTableWithAppleMailMessageIdAsPrimaryKey
CREATE TABLE IF NOT EXISTS mailsPendingFollowUpProcessing (messageId TEXT NOT NULL PRIMARY KEY,spotlightIdentifier TEXT NOT NULL,date FLOAT)
migration_createSignatureStatsTable
ALTER TABLE followUpTable ADD COLUMN dateStored FLOAT
DROP TABLE mailsPendingFollowUpProcessing
CREATE TABLE IF NOT EXISTS nicknameMapping (nickname TEXT NOT NULL,email TEXT NOT NULL,count INTEGER NOT NULL,dateOfLastMatch FLOAT NOT NULL,PRIMARY KEY (nickname, email)) WITHOUT ROWID
DELETE FROM signatureStats WHERE type = %d
CREATE TABLE keyValueStore (key TEXT PRIMARY KEY NOT NULL, value) WITHOUT ROWID
CREATE UNIQUE INDEX keyValueStoreIdx ON keyValueStore(key)
CREATE TABLE IF NOT EXISTS followUpTable (id INTEGER PRIMARY KEY AUTOINCREMENT,appleMailMessageId TEXT NOT NULL,snippet TEXT,core TEXT,score DOUBLE,startDate TEXT NOT NULL,startDateCore TEXT,endDate TEXT NOT NULL,endDateCore TEXT,alreadyReturned BOOLEAN DEFAULT false)
CREATE TABLE IF NOT EXISTS followUpTable (appleMailMessageId TEXT NOT NULL PRIMARY KEY,messageId TEXT NOT NULL,snippet TEXT,core TEXT,score DOUBLE,startDate TEXT NOT NULL,startDateCore TEXT,endDate TEXT NOT NULL,endDateCore TEXT,alreadyReturned BOOLEAN DEFAULT false)
CREATE TABLE IF NOT EXISTS signatureStats (emailLanguage TEXT NOT NULL,regexLanguage TEXT NOT NULL,type INTEGER NOT NULL,incomingMessage BOOLEAN NOT NULL,signature TEXT NOT NULL,negativeEngagement INTEGER NOT NULL,noEngagement INTEGER NOT NULL,positiveEngagement INTEGER NOT NULL,blockedWarningCount INTEGER NOT NULL)
CREATE UNIQUE INDEX IF NOT EXISTS signatureStatsIdx ON signatureStats(emailLanguage, regexLanguage, type, incomingMessage, signature)
SELECT email FROM nicknameMapping WHERE nickname = :nickname
:nickname
INSERT INTO nicknameMapping (nickname, email, count, dateOfLastMatch) VALUES (:nickname, :email, 1, :dateOfLastMatch) ON CONFLICT (nickname, email) DO UPDATE SET count = count + 1, dateOfLastMatch = max(dateOfLastMatch, :dateOfLastMatch)
:email
:dateOfLastMatch
DELETE FROM nicknameMapping WHERE dateOfLastMatch < :oldestAcceptableDate
:oldestAcceptableDate
DELETE FROM nicknameMapping
INSERT OR REPLACE INTO keyValueStore (key, value) VALUES (:key, :value)
:key
DELETE FROM keyValueStore WHERE key = :key
SELECT value FROM keyValueStore WHERE key = :key LIMIT 1
:value
@"NSNumber"16@?0@"_PASSqliteStatement"8
INSERT INTO keyValueStore (key, value) VALUES (:key, :incrementValue) ON CONFLICT (key) DO UPDATE SET value = value + :incrementValue
:incrementValue
@"NSString"16@?0@"_PASSqliteStatement"8
SGDuplicateKey.m
%@_%ld_%ld
self
%li/%@
%@ not supported by %@
![SGDuplicateKey serializationPassesBasicScrutiny:serialized]
%llu
<SGDuplicateKey entityType:%@ entityKey:%@ parentKey:%@>
[SGCuratedEventKey isSupportedEntityType:_entityType]
[SGContactDetailKey isSupportedEntityType:_entityType]
[SGPseudoContactKey isSupportedEntityType:_entityType]
SGEntityTypeIsContact(_entityType)
[SGEmailKey isSupportedEntityType:_entityType]
[SGTextMessageKey isSupportedEntityType:_entityType]
[SGWebPageKey isSupportedEntityType:_entityType]
[SGInteractionKey isSupportedEntityType:_entityType]
[SGPseudoEventKey isSupportedEntityType:_entityType]
[SGPseudoReminderKey isSupportedEntityType:_entityType]
[SGDeliveryKey isSupportedEntityType:_entityType]
SGMailClientUtilErrorDomain
@"SGMailClientUtil"8@?0
message:%@
v24@?0@"EMContentRepresentation"8@"NSError"16
v40@?0r^v8{_NSRange=QQ}16^B32
+[SGMailClientUtil convertLineEndingsToNetwork:]_block_invoke
SGMailClientUtil.m
insertionsNeeded
SignificantPostalAddress
ProactiveHarvesting
BiomeHarvesting
Found in %@ with %@
Chatting with %@
Found in %@
Checkin Action %@
checkinDate
checkoutDate
v32@?0@"_PASTuple2"8@"SGContact"16^B24
@"NSArray"32@?0@"NSArray"8@"NSArray"16@?<@@?@>24
@24@?0@8@16
@"NSString<SGNormalizedAddress>"16@?0@8
@"NSArray"24@?0@"NSArray"8@"NSArray"16
@"SGDateComponents"24@?0@"SGDateComponents"8@"SGDateComponents"16
B24@?0@"SGPostalAddress"8@"SGPostalAddress"16
@"SGPostalAddress"16@?0@"SGPostalAddress"8
@"SGName"24@?0@"SGName"8@"SGName"16
remindersExtractionStatus
daysUntilDue
dueLocationType
dueLocationTrigger
defaultDueDate
success
no_proposal
no_confirmation
no_trigger
no_title
missing_entities_in_model_output
SELECT key FROM emailMetadata WHERE state IN (:lost, :undisplayable) ORDER BY lastSeenTimestamp asc
:lost
:undisplayable
Invalid state
state can't be SGMailMessageUnset
UPDATE emailMetadata SET state = :undisplayablyLost WHERE key IN _pas_nsarray(:serializedKeys)
:undisplayablyLost
:serializedKeys
UPDATE emailMetadata SET state = :undisplayablyLost WHERE unlikely(state = :lost) AND key in _pas_nsarray(:keys) AND lastSeenTimestamp < :lastSeenCutoff
:keys
:lastSeenCutoff
UPDATE emailMetadata SET state = :lost, lastSeenTimestamp = :now WHERE likely(state NOT IN (:lost, :undisplayablyLost)) AND key IN _pas_nsarray(:keys)
:now
SELECT sourceKey, COUNT(*) FROM emailMetadata WHERE unlikely(state = :lost) GROUP BY sourceKey
emailMetadata
SELECT key FROM emailMetadata WHERE unlikely(state = :lost) AND sourceKey = :sourceKey AND NOT (tagsHaveEscapedTag(tags, :eventTag) OR tagsHaveEscapedTag(tags, :contactTag)) ORDER BY lastSeenTimestamp ASC LIMIT :limit
:eventTag
:contactTag
SELECT key FROM emailMetadata WHERE unlikely(state = :lost) AND sourceKey = :sourceKey AND tagsHaveEscapedTag(tags, :contactTag) ORDER BY lastSeenTimestamp ASC LIMIT :limit
SELECT key FROM emailMetadata WHERE unlikely(state = :lost) AND sourceKey = :sourceKey AND tagsHaveEscapedTag(tags, :eventTag) ORDER BY lastSeenTimestamp ASC LIMIT :limit
UPDATE emailMetadata SET state = :state, lastSeenTimestamp = :lastSeen WHERE unlikely(state = :undisplayable) AND key IN _pas_nsarray(:keys)
:lastSeen
UPDATE emailMetadata SET state = :state, lastSeenTimestamp = :lastSeen WHERE unlikely(state != :normal) AND key IN _pas_nsarray(:keys)
:normal
@16@?0@"SGDuplicateKey"8
SELECT key FROM emailMetadata WHERE state NOT IN (:deleted, :undisplayable) AND key IN _pas_nsarray(:keys)
:deleted
UPDATE events SET entityId = :entityId, duplicateKey = :duplicateKey, sourceKey = :sourceKey, title = :title, content = :content, creationTimestamp = :creationTimestamp, lastModifiedTimestamp = :lastModifiedTimestamp, whenRange = :whenRange, structuredData = :structuredData, state = :state, curated = :curated WHERE id = :primaryKey
DELETE FROM eventTags WHERE eventId = :primaryKey
DELETE FROM locations WHERE eventId = :primaryKey
INSERT INTO events (entityId, duplicateKey, sourceKey, title, content, creationTimestamp, lastModifiedTimestamp, whenRange, structuredData, state, curated) VALUES (:entityId, :duplicateKey, :sourceKey, :title, :content, :creationTimestamp, :lastModifiedTimestamp, :whenRange, :structuredData, :state, :curated)
:entityId
:duplicateKey
:sourceKey
:title
:content
:creationTimestamp
:lastModifiedTimestamp
:whenRange
:structuredData
:state
:curated
INSERT INTO eventTags (eventId, name) VALUES (:eventId, :name)
:eventId
SELECT id FROM locations WHERE eventId = :primaryKey
{_PASDBIterAction_=B}16@?0@"_PASSqliteStatement"8
SELECT name FROM eventTags WHERE eventId = :primaryKey
SELECT entityId, duplicateKey, sourceKey, title, content, creationTimestamp, lastModifiedTimestamp, whenRange, structuredData, state, curated FROM events WHERE id = :primaryKey
entityId
events
duplicateKey
sourceKey
title
content
creationTimestamp
lastModifiedTimestamp
whenRange
structuredData
state
curated
SELECT id FROM events WHERE duplicateKey = :duplicateKey
SELECT id FROM events WHERE entityId = :entityId
EmptyStringWalker::ShortVisit called
CREATE TABLE IF NOT EXISTS entity (id INTEGER PRIMARY KEY AUTOINCREMENT,entityKey TEXT NOT NULL,entityType INTEGER NOT NULL,author TEXT,content TEXT,contentRangeOfInterest TEXT,title TEXT COLLATE NOCASE,timeRangeStart REAL,timeRangeEnd REAL,floatingRange INTEGER,timeRangeStartUTCOffsetSeconds INTEGER,timeRangeEndUTCOffsetSeconds INTEGER,creationTimestamp REAL,updateTimestamp REAL,indexTimestamp REAL,lastSeenTimestamp REAL,tags TEXT,structuredData BLOB,quality REAL,locations BLOB,masterEntityId INTEGER DEFAULT -1,groupId INTEGER DEFAULT -1,state INTEGER DEFAULT 0,contentHash TEXT,downloadState INTEGER DEFAULT 0)
CREATE UNIQUE INDEX IF NOT EXISTS entityIdIdx on entity(id)
CREATE INDEX IF NOT EXISTS entityMasterEntityIdIdx on entity(masterEntityId)
CREATE INDEX IF NOT EXISTS entityStateIdx on entity(state)
CREATE VIRTUAL TABLE IF NOT EXISTS entity_fts USING fts4(id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER,messagingTerms TEXT COLLATE NOCASE,ftsTerms TEXT COLLATE NOCASE)
CREATE TABLE IF NOT EXISTS entityTags (tag TEXT,entityKey TEXT,entityType INTEGER,parentKey TEXT,duplicateKeyHash TEXT NOT NULL)
CREATE INDEX IF NOT EXISTS ix_entityTags_tag ON entityTags(tag)
CREATE INDEX IF NOT EXISTS ix_entityTags_dupKey ON entityTags(entityKey, entityType, parentKey)
CREATE TABLE IF NOT EXISTS confirmedFieldValues (entityId INTEGER PRIMARY KEY,fieldValues BLOB,maybeChanged BOOLEAN)
CREATE TABLE IF NOT EXISTS identityPerson (    identityPersonId INTEGER PRIMARY KEY AUTOINCREMENT,    middlename VARCHAR(256),    surname VARCHAR(256),    fullname TEXT,    nameSketches TEXT NOT NULL,    phones TEXT NOT NULL,    email TEXT NOT NULL,    recordId INTEGER NOT NULL,    curated BOOLEAN NOT NULL)
DROP TABLE IF EXISTS identityPhones
CREATE TEMP TABLE IF NOT EXISTS identityPhones (    recordId INTEGER NOT NULL,    phone TEXT NOT NULL)
CREATE INDEX IF NOT EXISTS ix_identityPerson_surname ON identityPerson(surname)
CREATE INDEX IF NOT EXISTS ix_identityPerson_middlename ON identityPerson(middlename)
CREATE INDEX IF NOT EXISTS ix_identityPerson_email_nameless ON identityPerson(email)
CREATE UNIQUE INDEX IF NOT EXISTS ix_identityPerson_recordId ON identityPerson(recordId)
CREATE INDEX IF NOT EXISTS ix_identityPhones_recordId ON identityPhones(recordId)
CREATE INDEX IF NOT EXISTS ix_identityPhones_phone ON identityPhones(phone)
CREATE TABLE IF NOT EXISTS identityLink (    recordId1 INTEGER NOT NULL,    recordId2 INTEGER NOT NULL,    type INT NOT NULL,    strength REAL NOT NULL,    PRIMARY KEY (recordId1, recordId2, type))
CREATE INDEX IF NOT EXISTS ix_identityLink_recordId2 ON identityLink(recordId2)
CREATE TABLE IF NOT EXISTS identityInterdict (a TEXT NOT NULL, b TEXT NOT NULL)
CREATE TABLE IF NOT EXISTS entityReferences (id INTEGER PRIMARY KEY AUTOINCREMENT,bundleIdentifier TEXT,uniqueIdentifier TEXT,entityId INTEGER,domainIdentifier TEXT)
CREATE UNIQUE INDEX IF NOT EXISTS entityReferencesUniqueIdx ON entityReferences(bundleIdentifier, uniqueIdentifier)
CREATE INDEX IF NOT EXISTS entityReferencesDomainIdx ON entityReferences(bundleIdentifier, domainIdentifier)
CREATE INDEX IF NOT EXISTS entityReferencesEntityIdIdx ON entityReferences(entityId)
CREATE INDEX IF NOT EXISTS entityDownloadStateIdx on entity(downloadState)
migration_AddAuthorColumnIfMissing
migration_AddNewishTablesIfMissing
migration_FixUpColumnsForDevicesWhoMissedTheImprovedLegacyMigration
DROP TABLE IF EXISTS cnContactsToSgContacts
CREATE TABLE cnContactsToSgContacts (id INTEGER PRIMARY KEY AUTOINCREMENT,cnContactIdentifier TEXT,maxEntityId INTEGER,entityId INTEGER)
CREATE INDEX IF NOT EXISTS cnContactsToSgContactsEntityIdx ON cnContactsToSgContacts(entityId)
CREATE UNIQUE INDEX IF NOT EXISTS cnContactsToSgContactsUniqueJoin ON cnContactsToSgContacts(cnContactIdentifier, entityId)
CREATE TABLE IF NOT EXISTS cnContactsToSgContactsCacheJobs (id INTEGER PRIMARY KEY AUTOINCREMENT,batch TEXT)
CREATE TABLE IF NOT EXISTS harvestQueueTombstones (bundleIdentifier TEXT,uniqueIdentifier TEXT,domainIdentifier TEXT)
CREATE TABLE IF NOT EXISTS identityPhones (    recordId INTEGER NOT NULL,    phone TEXT NOT NULL)
CREATE INDEX ix_identityPhones_recordId ON identityPhones(recordId)
CREATE INDEX ix_identityPhones_phone ON identityPhones(phone)
CREATE INDEX IF NOT EXISTS entityDupKeyIdx ON entity(entityKey, entityType);
DROP INDEX IF EXISTS entityDupKeyIdx
CREATE INDEX IF NOT EXISTS entityDupKeyIdx ON entity(entityType, entityKey)
CREATE TABLE IF NOT EXISTS serializedContactCacheJobs (id INTEGER PRIMARY KEY AUTOINCREMENT,batch TEXT)
CREATE TABLE IF NOT EXISTS statsCounters (key TEXT NOT NULL,value REAL NOT NULL)
CREATE UNIQUE INDEX ix_statsCounters_key ON statsCounters(key)
CREATE INDEX IF NOT EXISTS entityDupKeyIdx ON entity(entityKey, entityType)
CREATE INDEX IF NOT EXISTS entityTypeIdx ON entity(entityType)
migration_RecreateFTSTableWithITS
INSERT INTO entity_fts(entity_fts) VALUES ('automerge=8')
migration_DeduplicateIdentityPhones
CREATE UNIQUE INDEX ix_identityPhones_unique ON identityPhones(recordId, phone)
DROP TABLE IF EXISTS serializedContactCacheJobs
CREATE TABLE IF NOT EXISTS serializedContactCacheJobs (id INTEGER PRIMARY KEY AUTOINCREMENT)
DROP INDEX IF EXISTS entityParentageParentKeyIdx
CREATE INDEX entityParentageParentKeyChildIdIdx on entityParentage(parentKey, childId)
CREATE UNIQUE INDEX IF NOT EXISTS ix_harvestQueueTombstones_unique ON harvestQueueTombstones(bundleIdentifier, uniqueIdentifier, domainIdentifier)
ALTER TABLE entity ADD COLUMN contentHashBlob BLOB
ALTER TABLE entityTags ADD COLUMN duplicateKeyHashBlob BLOB
ALTER TABLE entityParentage ADD COLUMN duplicateKeyHashBlob BLOB
migration_ConvertContentAndDupKeyHashesToBlobs
CREATE UNIQUE INDEX entityContentHashBlobIdx ON entity(contentHashBlob)
CREATE UNIQUE INDEX entityParentageDuplicateKeyHashBlobIdx on entityParentage(duplicateKeyHashBlob, extractionType)
CREATE INDEX ix_entityTags_dupKeyHashBlob ON entityTags(duplicateKeyHashBlob)
DROP INDEX entityContentHashIdx
DROP INDEX entityParentageDuplicateKeyHashIdx
DROP INDEX ix_entityTags_dupKeyHash
CREATE TABLE IF NOT EXISTS metadata (key TEXT NOT NULL, value)
CREATE UNIQUE INDEX metadataKeyIndex ON metadata(key)
INSERT INTO metadata (key, value) VALUES ('rowIdWhenContactsEnabled', 0)
INSERT INTO metadata (key, value) VALUES ('rowIdWhenEventsEnabled', 0)
CREATE TABLE IF NOT EXISTS messageTracer (domain TEXT NOT NULL,key TEXT NOT NULL,value INTEGER NOT NULL)
CREATE UNIQUE INDEX IF NOT EXISTS messageTracerIdx ON messageTracer(domain, key)
migration_DropMessagingTermsWithPhoneExtensions
DELETE FROM entityReferences WHERE entityId = -1
migration_RemoveEntityReferencesWithoutBundleIdentifier
CREATE INDEX IF NOT EXISTS ix_entityTags_parentKey ON entityTags(parentKey)
ALTER TABLE entity ADD COLUMN pendingGeocode BOOLEAN DEFAULT false
CREATE INDEX entityPendingGeocodeIdx ON entity(pendingGeocode)
ALTER TABLE entity ADD COLUMN harvestedOnBuild TEXT
migration_FixupMergeGroups
UPDATE entity SET pendingGeocode=CAST(pendingGeocode AS INTEGER)
DROP INDEX entityPendingGeocodeIdx
CREATE INDEX entityPendingGeocodeIdx ON entity(pendingGeocode) WHERE pendingGeocode=1
DELETE FROM entity WHERE id NOT IN (SELECT childId FROM entityParentage)
DELETE FROM entity_fts WHERE entityId NOT IN (SELECT childId FROM entityParentage)
DELETE FROM identityPerson WHERE recordId NOT IN (SELECT childId FROM entityParentage)
DELETE FROM identityLink WHERE recordId1 NOT IN (SELECT childId FROM entityParentage) OR recordId2 NOT IN (SELECT childId FROM entityParentage)
DELETE FROM identityPhones WHERE recordId NOT IN (SELECT childId FROM entityParentage)
DELETE FROM entityTags WHERE duplicateKeyHashBlob NOT IN (SELECT duplicateKeyHashBlob FROM entityParentage)
CREATE TABLE IF NOT EXISTS identityBlobAnalysisJobs (id INTEGER PRIMARY KEY AUTOINCREMENT,mergeBlob BLOB)
CREATE TABLE identityInterdictNext (a TEXT NOT NULL, b TEXT NOT NULL)
ALTER TABLE identityPerson ADD COLUMN imAddresses TEXT NOT NULL DEFAULT ""
CREATE TABLE IF NOT EXISTS emailMetadata (id INTEGER PRIMARY KEY AUTOINCREMENT,key TEXT NOT NULL,type INTEGER NOT NULL,sourceKey TEXT,author TEXT,creationTimestamp REAL,updateTimestamp REAL,indexTimestamp REAL,lastSeenTimestamp REAL,tags TEXT,state INTEGER DEFAULT 0,downloadState INTEGER DEFAULT 0,harvestedOnBuild TEXT)
CREATE UNIQUE INDEX IF NOT EXISTS ix_emailMetadata_key ON emailMetadata(key)
CREATE INDEX IF NOT EXISTS ix_emailMetadata_state ON emailMetadata(state)
CREATE INDEX IF NOT EXISTS ix_emailMetadata_downloadState ON emailMetadata(downloadState)
CREATE TABLE IF NOT EXISTS emailTags (key TEXT NOT NULL,type INTEGER NOT NULL,tag TEXT NOT NULL)
CREATE INDEX IF NOT EXISTS ix_emailTags_tag ON emailTags(tag)
migration_separateMessageEntities
migration_rebuildFTSWithDetailEntityIDDocIDs
CREATE INDEX IF NOT EXISTS ix_emailTags_key ON emailTags(key)
migration_deleteInteractions
CREATE TABLE IF NOT EXISTS reimportRequests (id INTEGER PRIMARY KEY AUTOINCREMENT,plugin TEXT NOT NULL,creationTimestamp REAL,queryTimestamp REAL,personHandle TEXT,startDateTimestamp REAL,endDateTimestamp REAL,executionTimestamp REAL)
CREATE INDEX IF NOT EXISTS reimportRequestsQueryIdx ON reimportRequests(queryTimestamp)
CREATE INDEX IF NOT EXISTS reimportRequestsExecutionIdx ON reimportRequests(executionTimestamp)
CREATE TABLE IF NOT EXISTS reimportItems (id INTEGER PRIMARY KEY AUTOINCREMENT,reimportRequestId INTEGER NOT NULL,bundleId TEXT NOT NULL,uniqueId TEXT NOT NULL,seenByReceiverTimestamp REAL)
CREATE INDEX IF NOT EXISTS reimportItemsRequestIdx ON reimportItems(reimportRequestId)
CREATE INDEX IF NOT EXISTS reimportItemsSeenByReceiverIdx ON reimportItems(seenByReceiverTimestamp)
CREATE INDEX IF NOT EXISTS reimportItemsBundleUniqueIdx ON reimportItems(bundleId, uniqueId)
ALTER TABLE identityPerson ADD COLUMN isSent BOOLEAN DEFAULT false
migration_reimport
migration_deleteEmergencyExtractions
CREATE TABLE IF NOT EXISTS urls (id INTEGER PRIMARY KEY AUTOINCREMENT,url TEXT NOT NULL,received_from_handle TEXT,bundle_id TEXT NOT NULL,group_id TEXT,doc_id TEXT NOT NULL,seconds_from_1970 REAL NOT NULL)
CREATE UNIQUE INDEX IF NOT EXISTS ix_urls_url ON urls(url)
CREATE INDEX IF NOT EXISTS ix_urls_seconds_from_1970 ON urls(seconds_from_1970)
CREATE INDEX IF NOT EXISTS ix_urls_bundle_id_group_id ON urls(bundle_id, group_id)
ALTER TABLE entityParentage ADD COLUMN modelVersion INTEGER NOT NULL DEFAULT 0
ALTER TABLE entityParentage ADD COLUMN modelConfidence REAL NOT NULL DEFAULT 0.5
ALTER TABLE urls ADD COLUMN title TEXT
ALTER TABLE urls ADD COLUMN document_title TEXT
ALTER TABLE urls ADD COLUMN document_seconds_from_1970 REAL
ALTER TABLE urls ADD COLUMN document_time_interval REAL NOT NULL DEFAULT 0
ALTER TABLE entity ADD COLUMN curatedDupe BOOLEAN DEFAULT false
migration_deleteSerializedContacts
UPDATE entity SET title = substr(title,1,5) WHERE entityType = 20 AND length(title) = 10 AND substr(title,7,4) IN ('2018','2019')
ALTER TABLE urls ADD COLUMN flags INTEGER NOT NULL DEFAULT 0
migration_deleteInternalExtractionsFromML
CREATE TABLE IF NOT EXISTS locations (id INTEGER PRIMARY KEY,locationType INTEGER NOT NULL,label TEXT NOT NULL,address TEXT NOT NULL,airportCode TEXT NOT NULL,latitude REAL NOT NULL,longitude REAL NOT NULL,accuracy REAL NOT NULL,quality REAL NOT NULL,handle BLOB)
DROP TABLE IF EXISTS reminders
CREATE TABLE IF NOT EXISTS reminders (id INTEGER PRIMARY KEY,entityId INTEGER NOT NULL,duplicateKey TEXT NOT NULL,sourceKey TEXT,title text NOT NULL,dueDateComponents TEXT,dueLocationId INTEGER,dueLocationType INTEGER NOT NULL,dueLocationTrigger INTEGER NOT NULL,sourceUrl TEXT NOT NULL,creationDate num NOT NULL,opaqueKey TEXT,uniqueKey TEXT,contactIdentifier TEXT,reminderStatus NUM NOT NULL,FOREIGN KEY(entityId) REFERENCES entity(id) ON DELETE NO ACTION,FOREIGN KEY(dueLocationId) REFERENCES locations(id) ON DELETE SET NULL)
CREATE INDEX IF NOT EXISTS reminders_duplicateKey_idx ON reminders(duplicateKey)
ALTER TABLE emailMetadata ADD COLUMN pendingVerification INTEGER DEFAULT 0
CREATE INDEX pendingVerificationIdx ON emailMetadata(pendingVerification) WHERE pendingVerification=1
DROP TABLE IF EXISTS locations
CREATE TABLE IF NOT EXISTS locations (id INTEGER PRIMARY KEY AUTOINCREMENT,locationType INTEGER NOT NULL,label TEXT,address TEXT,airportCode TEXT,latitude REAL NOT NULL,longitude REAL NOT NULL,accuracy REAL NOT NULL,quality REAL NOT NULL,handle BLOB)
CREATE TABLE IF NOT EXISTS reminders (id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER NOT NULL,duplicateKey TEXT NOT NULL,sourceKey TEXT,title text NOT NULL,dueDateComponents TEXT,dueLocationId INTEGER,dueLocationType INTEGER NOT NULL,dueLocationTrigger INTEGER NOT NULL,sourceUrl TEXT NOT NULL,creationDate num NOT NULL,opaqueKey TEXT,uniqueKey TEXT,contactIdentifier TEXT,reminderStatus NUM NOT NULL,FOREIGN KEY(entityId) REFERENCES entity(id) ON DELETE NO ACTION,FOREIGN KEY(dueLocationId) REFERENCES locations(id) ON DELETE SET NULL)
CREATE INDEX IF NOT EXISTS reminders_entityId_idx ON reminders(entityId)
migration_newRemindersSchema
DROP TABLE IF EXISTS extractionInfos
DROP TABLE IF EXISTS contactDetails
CREATE TABLE IF NOT EXISTS extractionInfos (id INTEGER PRIMARY KEY AUTOINCREMENT,extractionType INTEGER NOT NULL,modelVersion NUM NOT NULL,confidence NUM NOT NULL)
CREATE TABLE IF NOT EXISTS contactDetails (id INTEGER PRIMARY KEY AUTOINCREMENT,value TEXT NOT NULL,type INTEGER NOT NULL,label TEXT,entityId INTEGER NOT NULL,duplicateKey TEXT NOT NULL,sourceKey TEXT,context TEXT,extractionInfoId INTEGER NOT NULL,FOREIGN KEY(entityId) REFERENCES entity(id) ON DELETE NO ACTION,FOREIGN KEY(extractionInfoId) REFERENCES extractionInfos(id) ON DELETE RESTRICT)
CREATE INDEX IF NOT EXISTS contactDetails_duplicateKey_idx ON contactDetails(duplicateKey)
CREATE INDEX IF NOT EXISTS contactDetails_entityId_idx ON contactDetails(entityId)
migration_newContactDetailsSchema
CREATE TABLE IF NOT EXISTS postMigrationTasks (task TEXT NOT NULL)
INSERT INTO postMigrationTasks (task) VALUES ('migration_deleteLegacyMessages')
CREATE TABLE IF NOT EXISTS locations_alterColumnsNullable (id INTEGER PRIMARY KEY AUTOINCREMENT,locationType INTEGER NOT NULL,label TEXT,address TEXT,airportCode TEXT,latitude REAL,longitude REAL,accuracy REAL,quality REAL,handle BLOB)
INSERT INTO locations_alterColumnsNullable SELECT * FROM locations
DROP TABLE locations
ALTER TABLE locations_alterColumnsNullable RENAME TO locations
CREATE TABLE IF NOT EXISTS events (id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER NOT NULL,duplicateKey TEXT NOT NULL,sourceKey TEXT,title TEXT,content TEXT,creationTimestamp INTEGER,lastModifiedTimestamp INTEGER,whenRange TEXT,structuredData BLOB,state INTEGER,curated INTEGER)
CREATE TABLE IF NOT EXISTS eventTags (id INTEGER PRIMARY KEY AUTOINCREMENT,eventId INTEGER NOT NULL,name TEXT,FOREIGN KEY(eventId) REFERENCES event(id) ON DELETE RESTRICT)
ALTER TABLE locations ADD eventId INTEGER
CREATE INDEX IF NOT EXISTS events_duplicateKey_idx ON events(duplicateKey)
CREATE INDEX IF NOT EXISTS events_entityId_idx ON events(entityId)
CREATE INDEX IF NOT EXISTS eventTags_eventId_idx ON eventTags(eventId)
migration_newEventsSchema
CREATE TABLE IF NOT EXISTS mailIntelligence_featureReferenceMapping (id INTEGER PRIMARY KEY AUTOINCREMENT,sourceType INT NOT NULL,externalReference TEXT)
CREATE TABLE IF NOT EXISTS mailIntelligence_features (id INTEGER PRIMARY KEY AUTOINCREMENT,featureMappingId INT NOT NULL,featureName INT NOT NULL,stringValue TEXT,stringArrayValue TEXT,doubleValue NUM,doubleArrayValue TEXT,FOREIGN KEY(featureMappingId) REFERENCES mailIntelligence_featureReferenceMapping(id) ON DELETE CASCADE)
CREATE INDEX IF NOT EXISTS mailIntelligence_featureReferenceMapping_externalReference_idx ON mailIntelligence_featureReferenceMapping(externalReference)
CREATE INDEX IF NOT EXISTS mailIntelligence_features_featureMappingId_idx ON mailIntelligence_features(featureMappingId)
CREATE TABLE IF NOT EXISTS mailIntelligence_naiveBayesModelsGlobalCounts (id INTEGER PRIMARY KEY AUTOINCREMENT,featureName INTEGER NOT NULL,salientCount INTEGER NOT NULL,regularCount INTEGER NOT NULL,salientUnigramTokensCount INTEGER NOT NULL,regularUnigramTokensCount INTEGER NOT NULL,salientBigramTokensCount INTEGER NOT NULL,regularBigramTokensCount INTEGER NOT NULL,UNIQUE(featureName))
CREATE INDEX IF NOT EXISTS mailIntelligence_naiveBayesModelsGlobalCounts_featureName_idx ON mailIntelligence_naiveBayesModelsGlobalCounts(featureName)
CREATE TABLE IF NOT EXISTS mailIntelligence_naiveBayesModelsUnigramTokens (id INTEGER PRIMARY KEY AUTOINCREMENT,featureName INTEGER NOT NULL,token TEXT NOT NULL,salientCount INTEGER NOT NULL,regularCount INTEGER NOT NULL)
CREATE INDEX IF NOT EXISTS mailIntelligence_naiveBayesModelsUnigramTokens_featureName_idx ON mailIntelligence_naiveBayesModelsUnigramTokens(featureName)
CREATE TABLE IF NOT EXISTS mailIntelligence_naiveBayesModelsBigramTokens (id INTEGER PRIMARY KEY AUTOINCREMENT,featureName INTEGER NOT NULL,token TEXT NOT NULL,salientCount INTEGER NOT NULL,regularCount INTEGER NOT NULL)
CREATE INDEX IF NOT EXISTS mailIntelligence_naiveBayesModelsBigramTokens_featureName_idx ON mailIntelligence_naiveBayesModelsBigramTokens(featureName)
CREATE TABLE IF NOT EXISTS mailIntelligence_biomeProgress (id INTEGER PRIMARY KEY AUTOINCREMENT,streamName TEXT NOT NULL,progressTimestamp NUM NOT NULL)
CREATE TABLE IF NOT EXISTS mailIntelligence_saliency (id INTEGER PRIMARY KEY AUTOINCREMENT,creationTimestamp REAL NOT NULL,messageId TEXT NOT NULL,score NUM NOT NULL)
DROP INDEX ix_urls_url
CREATE UNIQUE INDEX IF NOT EXISTS ix_urls_url_doc ON urls(url, doc_id, document_seconds_from_1970)
DROP TABLE IF EXISTS mailIntelligence_naiveBayesModelsUnigramTokens
DROP TABLE IF EXISTS mailIntelligence_naiveBayesModelsBigramTokens
CREATE TABLE IF NOT EXISTS mailIntelligence_naiveBayesModelsTokens (id INTEGER PRIMARY KEY AUTOINCREMENT,featureName INTEGER NOT NULL,token TEXT NOT NULL,is_unigram BOOLEAN NOT NULL,salientCount INTEGER NOT NULL,regularCount INTEGER NOT NULL)
CREATE UNIQUE INDEX IF NOT EXISTS mailIntelligence_naiveBayesModelsTokens_featureName_token_unigram_idx ON mailIntelligence_naiveBayesModelsTokens(featureName, token, is_unigram)
ALTER TABLE mailIntelligence_saliency ADD COLUMN mailboxId TEXT
migration_deleteNilDateEvents
ALTER TABLE mailIntelligence_saliency ADD COLUMN is_salient BOOLEAN
ALTER TABLE mailIntelligence_saliency ADD COLUMN is_gte_salient INTEGER
ALTER TABLE mailIntelligence_saliency ADD COLUMN is_counted BOOLEAN
ALTER TABLE mailIntelligence_naiveBayesModelsTokens ADD COLUMN lastUpdateTimestamp REAL NOT NULL
CREATE INDEX IF NOT EXISTS mailintelligence_saliency_covering_idx ON mailintelligence_saliency(mailboxId, creationTimestamp DESC, score, is_salient, messageId)
CREATE TABLE IF NOT EXISTS mailIntelligence_spotlightMapping (id INTEGER PRIMARY KEY AUTOINCREMENT,messageId TEXT NOT NULL,uniqueIdentifier TEXT NOT NULL,bundleIdentifier TEXT NOT NULL,terminatedDomainIdentifier TEXT)
CREATE UNIQUE INDEX IF NOT EXISTS mailintelligence_spotlightMapping_bundleIdentifier_uniqueIdentifier_idx ON mailIntelligence_spotlightMapping(bundleIdentifier, uniqueIdentifier)
CREATE INDEX IF NOT EXISTS mailintelligence_spotlightMapping_bundleIdentifier_terminatedDomainIdentifier_idx ON mailIntelligence_spotlightMapping(bundleIdentifier, terminatedDomainIdentifier)
DROP TABLE IF EXISTS identityPerson
CREATE TABLE IF NOT EXISTS identityPerson (    recordId INTEGER PRIMARY KEY,    middlename VARCHAR(256),    surname VARCHAR(256),    fullname TEXT,    nameSketches TEXT NOT NULL,    phones TEXT NOT NULL,    email TEXT NOT NULL,    socialProfileIdentifiers TEXT NOT NULL,    curated BOOLEAN NOT NULL,    isSent BOOLEAN DEFAULT false)
CREATE INDEX ix_identityPerson_surname ON identityPerson(surname)
CREATE INDEX ix_identityPerson_middlename ON identityPerson(middlename)
CREATE INDEX ix_identityPerson_email_nameless ON identityPerson(email)
DROP TABLE IF EXISTS identitySocialProfileIdentifiers
CREATE TABLE IF NOT EXISTS identitySocialProfileIdentifiers (    socialProfileIdentifier TEXT NOT NULL,    recordId INTEGER NOT NULL,    PRIMARY KEY (socialProfileIdentifier, recordId)) WITHOUT ROWID
CREATE TABLE IF NOT EXISTS identityPhones (    phone TEXT NOT NULL,    recordId INTEGER NOT NULL,    PRIMARY KEY (phone, recordId)) WITHOUT ROWID
migration_RebuildIdentityTables
DROP TABLE IF EXISTS mailIntelligence_features
DROP TABLE IF EXISTS mailIntelligence_featureReferenceMapping
ALTER TABLE mailIntelligence_saliency RENAME COLUMN is_salient TO isSalient
ALTER TABLE mailIntelligence_saliency RENAME COLUMN is_gte_salient TO isGteSalient
ALTER TABLE mailIntelligence_saliency RENAME COLUMN is_counted TO isCounted
ALTER TABLE mailIntelligence_naiveBayesModelsTokens RENAME COLUMN is_unigram TO isUnigram
DROP TABLE IF EXISTS mailIntelligence_biomeProgress
UPDATE contactDetails SET context = NULL
ALTER TABLE contactDetails RENAME COLUMN context TO unused
DELETE FROM mailIntelligence_naiveBayesModelsGlobalCounts
DELETE FROM mailIntelligence_naiveBayesModelsTokens
ALTER TABLE mailIntelligence_naiveBayesModelsTokens ADD COLUMN creationTimestamp REAL NOT NULL
ALTER TABLE mailIntelligence_saliency ADD COLUMN isLogged BOOLEAN DEFAULT false
ALTER TABLE mailIntelligence_saliency ADD COLUMN stagedLog BLOB
ALTER TABLE contactDetails DROP COLUMN unused
DROP TABLE cnContactsToSgContactsCacheJobs
CREATE TABLE cnContactsToSgContactsCacheJobs (   cnContactIdentifier TEXT PRIMARY KEY NOT NULL) WITHOUT ROWID
CREATE TABLE entity (id INTEGER PRIMARY KEY AUTOINCREMENT,entityKey TEXT NOT NULL,entityType INTEGER NOT NULL,author TEXT,content TEXT,contentRangeOfInterest TEXT,title TEXT COLLATE NOCASE,timeRangeStart REAL,timeRangeEnd REAL,floatingRange INTEGER,timeRangeStartUTCOffsetSeconds INTEGER,timeRangeEndUTCOffsetSeconds INTEGER,creationTimestamp REAL,updateTimestamp REAL,indexTimestamp REAL,lastSeenTimestamp REAL,tags TEXT,structuredData BLOB,quality REAL,locations BLOB,masterEntityId INTEGER DEFAULT -1,groupId INTEGER DEFAULT -1,state INTEGER DEFAULT 0,contentHash TEXT,downloadState INTEGER DEFAULT 0, contentHashBlob BLOB, pendingGeocode BOOLEAN DEFAULT false, harvestedOnBuild TEXT, curatedDupe BOOLEAN DEFAULT false)
migration_CreateFTSTableWithITS
CREATE TABLE entityTags (tag TEXT,entityKey TEXT,entityType INTEGER,parentKey TEXT,duplicateKeyHash TEXT NOT NULL, duplicateKeyHashBlob BLOB)
CREATE TABLE confirmedFieldValues (entityId INTEGER PRIMARY KEY,fieldValues BLOB,maybeChanged BOOLEAN)
CREATE TABLE entityParentage (id INTEGER PRIMARY KEY AUTOINCREMENT,parentKey TEXT,childId INTEGER NOT NULL,duplicateKeyHash TEXT NOT NULL,extractionType INTEGER,sourceKey TEXT, duplicateKeyHashBlob BLOB, modelVersion INTEGER NOT NULL DEFAULT 0, modelConfidence REAL NOT NULL DEFAULT 0.5,UNIQUE(parentKey, childId))
CREATE TABLE serializedContacts (id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER,data BLOB)
CREATE TABLE identityLink (    recordId1 INTEGER NOT NULL,    recordId2 INTEGER NOT NULL,    type INT NOT NULL,    strength REAL NOT NULL,    PRIMARY KEY (recordId1, recordId2, type))
CREATE TABLE entityReferences (id INTEGER PRIMARY KEY AUTOINCREMENT,bundleIdentifier TEXT,uniqueIdentifier TEXT,entityId INTEGER,domainIdentifier TEXT)
CREATE TABLE harvestQueueTombstones (bundleIdentifier TEXT,uniqueIdentifier TEXT,domainIdentifier TEXT)
CREATE TABLE statsCounters (key TEXT NOT NULL,value REAL NOT NULL)
CREATE TABLE serializedContactCacheJobs (id INTEGER PRIMARY KEY AUTOINCREMENT)
CREATE TABLE metadata (key TEXT NOT NULL, value)
INSERT INTO metadata VALUES('rowIdWhenContactsEnabled',0)
INSERT INTO metadata VALUES('rowIdWhenEventsEnabled',0)
CREATE TABLE messageTracer (domain TEXT NOT NULL,key TEXT NOT NULL,value INTEGER NOT NULL)
CREATE TABLE identityBlobAnalysisJobs (id INTEGER PRIMARY KEY AUTOINCREMENT,mergeBlob BLOB)
CREATE TABLE emailMetadata (id INTEGER PRIMARY KEY AUTOINCREMENT,key TEXT NOT NULL,type INTEGER NOT NULL,sourceKey TEXT,author TEXT,creationTimestamp REAL,updateTimestamp REAL,indexTimestamp REAL,lastSeenTimestamp REAL,tags TEXT,state INTEGER DEFAULT 0,downloadState INTEGER DEFAULT 0,harvestedOnBuild TEXT, pendingVerification INTEGER DEFAULT 0)
CREATE TABLE emailTags (key TEXT NOT NULL,type INTEGER NOT NULL,tag TEXT NOT NULL)
CREATE TABLE reimportRequests (id INTEGER PRIMARY KEY AUTOINCREMENT,plugin TEXT NOT NULL,creationTimestamp REAL,queryTimestamp REAL,personHandle TEXT,startDateTimestamp REAL,endDateTimestamp REAL,executionTimestamp REAL)
CREATE TABLE reimportItems (id INTEGER PRIMARY KEY AUTOINCREMENT,reimportRequestId INTEGER NOT NULL,bundleId TEXT NOT NULL,uniqueId TEXT NOT NULL,seenByReceiverTimestamp REAL)
CREATE TABLE urls (id INTEGER PRIMARY KEY AUTOINCREMENT,url TEXT NOT NULL,received_from_handle TEXT,bundle_id TEXT NOT NULL,group_id TEXT,doc_id TEXT NOT NULL,seconds_from_1970 REAL NOT NULL, title TEXT, document_title TEXT, document_seconds_from_1970 REAL, document_time_interval REAL NOT NULL DEFAULT 0, flags INTEGER NOT NULL DEFAULT 0)
CREATE TABLE reminders (id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER NOT NULL,duplicateKey TEXT NOT NULL,sourceKey TEXT,title text NOT NULL,dueDateComponents TEXT,dueLocationId INTEGER,dueLocationType INTEGER NOT NULL,dueLocationTrigger INTEGER NOT NULL,sourceUrl TEXT NOT NULL,creationDate num NOT NULL,opaqueKey TEXT,uniqueKey TEXT,contactIdentifier TEXT,reminderStatus NUM NOT NULL,FOREIGN KEY(entityId) REFERENCES entity(id) ON DELETE NO ACTION,FOREIGN KEY(dueLocationId) REFERENCES locations(id) ON DELETE SET NULL)
CREATE TABLE extractionInfos (id INTEGER PRIMARY KEY AUTOINCREMENT,extractionType INTEGER NOT NULL,modelVersion NUM NOT NULL,confidence NUM NOT NULL)
CREATE TABLE contactDetails (id INTEGER PRIMARY KEY AUTOINCREMENT,value TEXT NOT NULL,type INTEGER NOT NULL,label TEXT,entityId INTEGER NOT NULL,duplicateKey TEXT NOT NULL,sourceKey TEXT,extractionInfoId INTEGER NOT NULL,FOREIGN KEY(entityId) REFERENCES entity(id) ON DELETE NO ACTION,FOREIGN KEY(extractionInfoId) REFERENCES extractionInfos(id) ON DELETE RESTRICT)
CREATE TABLE postMigrationTasks (task TEXT NOT NULL)
CREATE TABLE IF NOT EXISTS "locations" (id INTEGER PRIMARY KEY AUTOINCREMENT,locationType INTEGER NOT NULL,label TEXT,address TEXT,airportCode TEXT,latitude REAL,longitude REAL,accuracy REAL,quality REAL,handle BLOB, eventId INTEGER)
CREATE TABLE events (id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER NOT NULL,duplicateKey TEXT NOT NULL,sourceKey TEXT,title TEXT,content TEXT,creationTimestamp INTEGER,lastModifiedTimestamp INTEGER,whenRange TEXT,structuredData BLOB,state INTEGER,curated INTEGER)
CREATE TABLE eventTags (id INTEGER PRIMARY KEY AUTOINCREMENT,eventId INTEGER NOT NULL,name TEXT,FOREIGN KEY(eventId) REFERENCES event(id) ON DELETE RESTRICT)
CREATE TABLE mailIntelligence_naiveBayesModelsGlobalCounts (id INTEGER PRIMARY KEY AUTOINCREMENT,featureName INTEGER NOT NULL,salientCount INTEGER NOT NULL,regularCount INTEGER NOT NULL,salientUnigramTokensCount INTEGER NOT NULL,regularUnigramTokensCount INTEGER NOT NULL,salientBigramTokensCount INTEGER NOT NULL,regularBigramTokensCount INTEGER NOT NULL,UNIQUE(featureName))
CREATE TABLE mailIntelligence_saliency (id INTEGER PRIMARY KEY AUTOINCREMENT,creationTimestamp REAL NOT NULL,messageId TEXT NOT NULL,score NUM NOT NULL, mailboxId TEXT, isSalient BOOLEAN, isGteSalient INTEGER, isCounted BOOLEAN, isLogged BOOLEAN DEFAULT false, stagedLog BLOB)
CREATE TABLE mailIntelligence_naiveBayesModelsTokens (id INTEGER PRIMARY KEY AUTOINCREMENT,featureName INTEGER NOT NULL,token TEXT NOT NULL,isUnigram BOOLEAN NOT NULL,salientCount INTEGER NOT NULL,regularCount INTEGER NOT NULL, lastUpdateTimestamp REAL NOT NULL, creationTimestamp REAL NOT NULL)
CREATE TABLE mailIntelligence_spotlightMapping (id INTEGER PRIMARY KEY AUTOINCREMENT,messageId TEXT NOT NULL,uniqueIdentifier TEXT NOT NULL,bundleIdentifier TEXT NOT NULL,terminatedDomainIdentifier TEXT)
CREATE TABLE identityPerson (    recordId INTEGER PRIMARY KEY,    middlename VARCHAR(256),    surname VARCHAR(256),    fullname TEXT,    nameSketches TEXT NOT NULL,    phones TEXT NOT NULL,    email TEXT NOT NULL,    socialProfileIdentifiers TEXT NOT NULL,    curated BOOLEAN NOT NULL,    isSent BOOLEAN DEFAULT false)
CREATE TABLE identitySocialProfileIdentifiers (    socialProfileIdentifier TEXT NOT NULL,    recordId INTEGER NOT NULL,    PRIMARY KEY (socialProfileIdentifier, recordId)) WITHOUT ROWID
CREATE TABLE identityPhones (    phone TEXT NOT NULL,    recordId INTEGER NOT NULL,    PRIMARY KEY (phone, recordId)) WITHOUT ROWID
INSERT INTO sqlite_sequence VALUES('emailMetadata',0)
INSERT INTO sqlite_sequence VALUES('locations',0)
CREATE UNIQUE INDEX entityIdIdx on entity(id)
CREATE INDEX entityMasterEntityIdIdx on entity(masterEntityId)
CREATE INDEX entityStateIdx on entity(state)
CREATE INDEX ix_entityTags_tag ON entityTags(tag)
CREATE INDEX ix_entityTags_dupKey ON entityTags(entityKey, entityType, parentKey)
CREATE INDEX entityParentageChildIdx on entityParentage(childId)
CREATE UNIQUE INDEX serializedContactsEntityIdIdx ON serializedContacts(entityId)
CREATE INDEX ix_identityLink_recordId2 ON identityLink(recordId2)
CREATE UNIQUE INDEX entityReferencesUniqueIdx ON entityReferences(bundleIdentifier, uniqueIdentifier)
CREATE INDEX entityReferencesDomainIdx ON entityReferences(bundleIdentifier, domainIdentifier)
CREATE INDEX entityReferencesEntityIdIdx ON entityReferences(entityId)
CREATE INDEX groupIdIdx on entity(groupId)
CREATE INDEX cnContactsToSgContactsEntityIdx ON cnContactsToSgContacts(entityId)
CREATE UNIQUE INDEX cnContactsToSgContactsUniqueJoin ON cnContactsToSgContacts(cnContactIdentifier, entityId)
CREATE INDEX entityDupKeyIdx ON entity(entityKey, entityType)
CREATE INDEX entityTypeIdx ON entity(entityType)
CREATE UNIQUE INDEX ix_harvestQueueTombstones_unique ON harvestQueueTombstones(bundleIdentifier, uniqueIdentifier, domainIdentifier)
CREATE UNIQUE INDEX messageTracerIdx ON messageTracer(domain, key)
CREATE INDEX ix_entityTags_parentKey ON entityTags(parentKey)
CREATE UNIQUE INDEX ix_emailMetadata_key ON emailMetadata(key)
CREATE INDEX ix_emailMetadata_state ON emailMetadata(state)
CREATE INDEX ix_emailMetadata_downloadState ON emailMetadata(downloadState)
CREATE INDEX ix_emailTags_tag ON emailTags(tag)
CREATE INDEX ix_emailTags_key ON emailTags(key)
CREATE INDEX reimportRequestsQueryIdx ON reimportRequests(queryTimestamp)
CREATE INDEX reimportRequestsExecutionIdx ON reimportRequests(executionTimestamp)
CREATE INDEX reimportItemsRequestIdx ON reimportItems(reimportRequestId)
CREATE INDEX reimportItemsSeenByReceiverIdx ON reimportItems(seenByReceiverTimestamp)
CREATE INDEX reimportItemsBundleUniqueIdx ON reimportItems(bundleId, uniqueId)
CREATE INDEX ix_urls_seconds_from_1970 ON urls(seconds_from_1970)
CREATE INDEX ix_urls_bundle_id_group_id ON urls(bundle_id, group_id)
CREATE INDEX reminders_duplicateKey_idx ON reminders(duplicateKey)
CREATE INDEX reminders_entityId_idx ON reminders(entityId)
CREATE INDEX contactDetails_duplicateKey_idx ON contactDetails(duplicateKey)
CREATE INDEX contactDetails_entityId_idx ON contactDetails(entityId)
CREATE INDEX events_duplicateKey_idx ON events(duplicateKey)
CREATE INDEX events_entityId_idx ON events(entityId)
CREATE INDEX eventTags_eventId_idx ON eventTags(eventId)
CREATE INDEX mailIntelligence_naiveBayesModelsGlobalCounts_featureName_idx ON mailIntelligence_naiveBayesModelsGlobalCounts(featureName)
CREATE UNIQUE INDEX ix_urls_url_doc ON urls(url, doc_id, document_seconds_from_1970)
CREATE UNIQUE INDEX mailIntelligence_naiveBayesModelsTokens_featureName_token_unigram_idx ON mailIntelligence_naiveBayesModelsTokens(featureName, token, isUnigram)
CREATE INDEX mailintelligence_saliency_covering_idx ON mailintelligence_saliency(mailboxId, creationTimestamp DESC, score, isSalient, messageId)
CREATE UNIQUE INDEX mailintelligence_spotlightMapping_bundleIdentifier_uniqueIdentifier_idx ON mailIntelligence_spotlightMapping(bundleIdentifier, uniqueIdentifier)
CREATE INDEX mailintelligence_spotlightMapping_bundleIdentifier_terminatedDomainIdentifier_idx ON mailIntelligence_spotlightMapping(bundleIdentifier, terminatedDomainIdentifier)
SGSeekableData.m
Error loading %@: %@
Tried to read %llu-%llu from data of length %llu
offset %llu outside of bounds (file length %llu)
<FIAPResult h:%@ e:%@>
startUTCOffsetSeconds
endUTCOffsetSeconds
Case not handled in ComputeSimple: 
SimplifyWalker::ShortVisit called
Simplify case not handled: 
Malformed repeat 
SGCuratedEventKey.m
externalId
<SGCuratedEvent externalId: %@>
Bad regexp op 
kRegexpAlternate child_args is NULL
kRegexpStar child_args is NULL
kRegexpQuest child_args is NULL
kRegexpPlus child_args is NULL
kRegexpCapture child_args is NULL
Bad op in Prefilter::DebugString: 
op%d
/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/re2/re2/re2_prefilter.h
Check failed: op_ == AND || op_ == OR
Stack not empty.
Walk NULL
SGStorageReminder.m
SGStorageReminder failed to create sourceURL from %@
<SGStorageReminder title:%@ dupKey:%@ dueDate:%@ dueLocation: %@ reminderStatus: %@>
SELECT messageId FROM mailIntelligence_spotlightMapping WHERE uniqueIdentifier = :uniqueIdentifier AND bundleIdentifier = :bundleIdentifier
:uniqueIdentifier
:bundleIdentifier
messageId
mailIntelligence_spotlightMapping
SELECT messageId FROM mailIntelligence_spotlightMapping WHERE bundleIdentifier = :bundleIdentifier LIMIT :limit
:limit
SELECT messageId FROM mailIntelligence_spotlightMapping WHERE uniqueIdentifier IN _pas_nsarray(:uniqueIdentifiers) AND bundleIdentifier = :bundleIdentifier
:uniqueIdentifiers
SELECT messageId FROM mailIntelligence_spotlightMapping WHERE bundleIdentifier = :bundleIdentifier AND terminatedDomainIdentifier GLOB :domainIdentifierGlob
:domainIdentifierGlob
SELECT uniqueIdentifier FROM mailIntelligence_spotlightMapping WHERE messageId = :messageId AND bundleIdentifier = :bundleIdentifier
:messageId
uniqueIdentifier
SELECT id FROM mailIntelligence_spotlightMapping WHERE bundleIdentifier = :bundleIdentifier AND uniqueIdentifier = :uniqueIdentifier
INSERT INTO mailIntelligence_spotlightMapping (messageId, uniqueIdentifier, terminatedDomainIdentifier, bundleIdentifier) VALUES (:messageId, :uniqueIdentifier, :terminatedDomainIdentifier, :bundleIdentifier) ON CONFLICT(bundleIdentifier, uniqueIdentifier) DO UPDATE SET messageId=:messageId, terminatedDomainIdentifier=:terminatedDomainIdentifier
:terminatedDomainIdentifier
SGDNotificationBroadcaster
com.apple.suggestions.eventsDidChange
com.apple.suggestions.contactsDidChange
com.apple.suggestions.remindersDidChange
personFromSenderAge
personFromSenderInDyadicConversationAge
subjectContentAge
personToRecipientsAge
personCCRecipientsAge
domainFromSenderAge
conversationAge
SGXpcTransaction.m
_transaction != nil
_timeoutTimer == nil
PROACTIVE_MAIL_INTELLIGENCE_SALIENCY
assets_130
signatureStatsLogging
model.mlmodelc
modelFeatureNames.plist
modelFeatureStandardizationMeans.plist
modelFeatureStandardizationStandardDeviations.plist
modelGroundTruthFeatureNames.plist
modelGroundTruthFeatureLowerBounds.plist
modelGroundTruthFeatureUpperBounds.plist
modelGroundTruthOutputs.plist
saliencyOverrideFeatureNames.plist
saliencyOverrideFeatureLowerBounds.plist
saliencyOverrideFeatureUpperBounds.plist
saliencyOverrideOutputs.plist
classificationConfiguration.plist
classificationThreshold
classificationOfflinePrecision
classificationOfflineRecall
attachmentDetectionRegexes.plist
attachmentLinkDetection.plist
recipientConservativeDetectionRegexes.plist
recipientDetectionRegexes.plist
nicknameDetectionRegexes.plist
followUpOnOutgoingMailsQuestionsDetectionRegexes.plist
followUpOnOutgoingMailsAsksDetectionRegexes.plist
followUpOnIncomingMailsDetectionRegexes.plist
followUpWarningsParameters.plist
minCountToConsiderATokenAsHighlyDiscriminant
ratioToConsiderATokenAsHighlyDiscriminant
minCountToConsiderATokenAsExtremelyDiscriminant
ratioToConsiderATokenAsExtremelyDiscriminant
E=%@ D=%d T=%@
Device is likely not enrolled in a Trial experiment.
%@/%@
%@/%@/%@
default
v16@?0@"SGMITrialClientWrapperGuardedData"8
http://schema.org/
http://schema.org/%@
pseudoContacts
CoreSuggestions-contacts
SGSpotlightContactsAdapter-notify
Metadata/com.apple.IntelligentSuggestions/
%llu.vcf
SGSpotlightContactsAdapter.m
failed to create a CSCustomAttributeKey for MDItemRelatedAppBundleIdentifier
v32@?0@"NSString"8@"SGContact"16^B24
SignificantPostalAddressForIMessage
SGJSWatchdogTimerCallback
JSContextGroupRef SGJSContextGroupCreate()
SGJSWatchdogTimer.mm
JSContextGroupCreate
void *JavaScriptCoreLibrary()
JSVirtualMachine
Class getJSVirtualMachineClass()_block_invoke
void SGJSContextGroupSetExecutionTimeLimit(JSContextGroupRef, double, JSShouldTerminateCallback, void *)
JSContextGroupSetExecutionTimeLimit
JSStringRef SGJSContextCreateBacktrace(JSContextRef, unsigned int)
JSContextCreateBacktrace
CFStringRef SGJSStringCopyCFString(CFAllocatorRef, JSStringRef)
JSStringCopyCFString
void SGJSContextGroupRelease(JSContextGroupRef)
JSContextGroupRelease
%FT%H:%M:%S
SGExtractionDocumentErrorDomain
v32@?0{_NSRange=QQ}8^B24
void freeRegexp(void *)
SGChunkPool.m
Could not deallocate memory from mallocRegexp
void *superblockMalloc(int)
Could not allocate memory for mallocRegexp
<SGWebPageKey source=%@ uniqueIdentifier=%@
SGDelivery+Building.m
Attachment
AttachmentLink
Recipient
FollowUpAsk
FollowUpQuestion
B16@?0@"SGTaggedCharacterRange"8
@"NSString"24@?0@"SGTaggedCharacterRange"8Q16
submodelsProbabilities
predictedSaliencyScore
predictedSaliency
saliencyPredictionPerformanceInMilliSeconds
estimatedGroundTruth
missingAttachment
missingAttachmentPredictionPerformanceInMilliSeconds
missingRecipient
missingRecipientPredictionPerformanceInMilliSeconds
Salient
Neutral
Ignorable
mailIntelligence
persistentID
v16@?0@"BPSCompletion"8
v16@?0@"BMStoreEvent"8
LANGUAGE
WINDOWLENGTH
SGContactSharingTransformer.m
v8@?0
SGAssetIdentifier
SGAsset-notifications
IPHONE_SIMULATOR_ROOT
/System/Library/AssetTypeDescriptors/com.apple.MobileAsset.AssetTypeDescriptor.CoreSuggestionsAssets.plist
Assets
suggestionsassets
common
:name
INSERT INTO eventTags (name) VALUES (:name)
SELECT name FROM eventTags WHERE id = :primaryKey
:primaryKey
v16@?0@"EKEventStore"8
SGEKCalendarAdapter.m
@"EKEvent"16@?0@"EKEvent"8
v24@?0@"EKEvent"8^B16
_addEKEventToCalendar
componentName
significantWork
reason
SGSqliteDatabaseError
Error(%d): %@
 (SQL: %@)
. May be due to previous POSIX error %@
. Free space (rounded to 1 significant digit): %@ bytes
sg_db_corruption_marker
locking
locked
unlocked
PRAGMA journal_mode
com.apple.suggestions.databasejournal.
journals
com.apple.suggestions.databasejournal.inmemory
__query
v32@?0@"NSString"8@16^B24
{_PASDBIterAction_=B}16@?0@"NSError"8
SGDatabaseJournal.m
!_inMemory
SGDatabaseJournalWillRecoverOnNextLaunch
A bogus or corrupt journal file was found and has been cleaned up. Suggestd will relaunch and continue.
fullPath
originalException
SGDatabaseJournal.executeQueriesOnDatabase
DELETE FROM snippets WHERE entityId NOT IN (SELECT id FROM entities.entity)
com.apple.suggestions.suggestd
Suppressing non-meaningful text message displayName.
Cannot get domain identifier for text message %@
expected coded array %@ to give a new instance of %@ but it didn't
Error fetching contact for identifier '%@': %@
Interaction Person has no identity/handle: %@ / %@
JSON Data is Empty. Nothing to return.
Error: Failed to serialize to JSON
SGURL: query: %f - %f 
SGURL: urlsFoundBetweenStartDate results: %@
SGURL: written: %@
SGURL: urlsFoundBetweenStartDate+bundle query: %f - %f (%@ - %@)
SGURL: urlsFoundBetweenStartDate+bundle results: %@
Multiple model names specified to turn on data collection (objective: %lu, language: %@, models: %@.
SGSQLEntityStore+Reminders: unable to deserialize date components.
SGSQLEntityStore+Reminders: unable to fetch title.
null date derived from reminder.dueDateComponents is unexpected: %@
SGWordBoundaryQuickTypeInference - Invalid model config!
SGWordBoundaryQuickTypeInference - localeIdentifier/language (%@/%@) do not match configured target language (%@)
SGWordBoundaryQuickTypeInference - Unexpected number of confidence thresholds (%ld rather than %ld)
SGWordBoundaryQuickTypeInference - Could not initialize model with config path: %@, bin path: %@
SGWordBoundaryQuickTypeInference - Irrelevant Label predicted with score: %@
SGWordBoundaryQuickTypeInference - Predicted label (%ld) confidence (%@), falls below confidence threshold (%@)!
SGWordBoundaryQuickTypeInference - probable prior prediction of label %ld (score: %@) detected.
SGWordBoundaryQuickTypeInference - objective: %lu, prediction: %ld, score: %@
SGWordBoundaryQuickTypeInference - No name found for thirdparty objective: %ld
SGWordBoundaryQuickTypeInference - Unexpected label %ld
SGStructuredEventDocument: Unable to detect title, missing modelOutput or enrichedTaggedCharacterRanges
SGStructuredEventDocument: No title mapping, unsupported category
SGStructuredEventDocument: Unable to detect reservationId, missing modelOutput or enrichedTaggedCharacterRanges
SGStructuredEventDocument: Unable to detect startDateComponents, missing modelOutput or enrichedTaggedCharacterRanges
SGStructuredEventDocument: Unable to detect endDateComponents, missing modelOutput or enrichedTaggedCharacterRanges
SGStructuredEventDocument: Unable to detect startAddress, missing modelOutput or enrichedTaggedCharacterRanges
SGStructuredEventDocument: Unable to detect %@, missing modelOutput or enrichedTaggedCharacterRanges
SGReminderDissector: detectReminders is OFF
SGReminderDissector: Reminder detection for mail is off
SGReminderDissector: Not processing due to a missing localeAsset. [SGEntity (%{public}@)]
SGReminderDissector: Not processing since PseudoEvent found
SGReminderDissector: Mail has multiple recipients, skipping
SGReminderDissector: Mail is inhuman, skipping
SGReminderDissector: Mail is from mailing list, skipping
SGReminderDissector: Mail is partially downloaded, skipping
SGReminderDissector: Mail is sent, skipping
SGReminderDissector: Mail is older than one week, skipping
SGReminderDissector: Mail is from insignificant sender, skipping
SGReminderDissector: Skipping parts of content that are identified as not plain text
SGReminderDissector: Not model output, bailing
SGEntity: %{public}@ -> SGPipelineEnrichment: %{public}@
Dissecting Text Message to find reminder
SGReminderDissector: ProcessingLanguage: %@
SGReminderDissector: Message with confirmation found
SGReminderDissector: No modelOutput for previousMessage
SGReminderDissector: Previous message has proposal and question
SGReminderDissector: Found title for reminder %@
SGReminderDissector: Couldn't reject reminder: %@
SGReminderDissector: No previous message
SGReminderDissector: %@
SGReminderDissector: timing(ms): %f
SGReminderDissector: Message too short or too long to process or missing conversationIdentifier, bailing
SGReminderDissector: Message is a group chat, bailing
SGReminderDissector: Unable to load model assets
SGReminderDissector: Unable to load emoji assets
SGReminderDissector: Unable to load verb mapping
SGReminderDissector: Date is in the past, skipping
SGReminderDissector: ExtractionModel is nil
SGReminderDissector: Processinglanguage is nil
SGReminderDissector: No model output, bailing
No dueLocation or dueDate, bailing
SGReminderDissector: DueDate in past, bailing
Creating enrichment for Reminder: %@, dueTime: %@, dueLocation: %@
Creating Reminder enrichment
SGReminderDissector - Unknown object encountered while resolving contactId
SGReminderDissector - Could not resolve Contact. Nil contactIdentifier
No groupId found for entity %@
Unable to load RTRoutineManager
Unable to get LocationsOfInterest: %@
Suggestions failed to dlopen CoreRoutine.
SGMessageEventDissectorTrialClientWrapper: Updating factors
SGMessageEventDissectorTrialClientWrapper: No active Trial deployment found
SGMessageEventDissectorTrialClientWrapper: Updating trialEventExtractionAssetsPath from trial: %{private}@
SGMessageEventDissectorTrialClientWrapper: TRILevel is nil for trialEventExtractionAssetsPath
SGMessageEventDissectorTrialClientWrapper: Updating trialEventClassifierModelPath from trial: %{private}@
SGMessageEventDissectorTrialClientWrapper: TRILevel is nil for trialEventClassifierModelPath
SGMessageEventDissectorTrialClientWrapper: Updating trialEventClassifierThreshold from trial: %.02f
SGMessageEventDissectorTrialClientWrapper: TRILevel is nil for trialEventClassifierThreshold
SGMessageEventDissectorTrialClientWrapper: Updating trialMessageProcessingLimit from trial: %.02f
SGMessageEventDissectorTrialClientWrapper: TRILevel is nil for trialMessageProcessingLimit
SGMessageEventDissectorTrialClientWrapper: Updating trialRateLimitInterval from trial: %.02f
SGMessageEventDissectorTrialClientWrapper: TRILevel is nil for trialRateLimitInterval
SGMessageEventDissectorTrialClientWrapper: trialEventExtractionAssetsPath is nil, bailing
SGMessageEventDissectorTrialClientWrapper: EventExtractionAssetsPath loaded with Trial %{private}@
SGMessageEventDissectorTrialClientWrapper: No assets found at trialEventExtractionAssetsPath: %{private}@ isDirectory: %@
SGMessageEventDissectorTrialClientWrapper: trialEventClassifierModelPath is nil, bailing
SGMessageEventDissectorTrialClientWrapper: EventClassifierModelPath loaded with Trial %{private}@
SGMessageEventDissectorTrialClientWrapper: No assets found at trialEventClassifierModelPath: %{private}@ isDirectory: %@
SGMessageEventDissectorTrialClientWrapper: eventClassifierThreshold: %@
SGMessageEventDissectorTrialClientWrapper: messageProcessingLimit: %@
SGMessageEventDissectorTrialClientWrapper: rateLimitInterval: %@
SGURLPlugin: consumeRemindersContentWithContext: notes.length = %tu
SGURLPlugin ignoring item with nil unique identifier
SGURLPlugin: extracting URLs from attributes of %@
SGURLPlugin: %tu detections on %@
SGURLPlugin: deleting URLs from bundleId %@
SGURLPlugin failed to delete URLs from bundleId %@
SGMI SGSqlEntityStore+Saliency: The sortedSaliencyResults method do not currently use mailboxType
Exiting due to SQLite error: %s
Pre-warming suggestd
Starting dissection, len=%tu, ctx=%i
Ending dissection, len=%tu, ctx=%i
Starting ingest of %lu messages
Ending ingest of %lu messages
Database inconsistency; found key for event hash %@ but event is missing
SGDSuggestManager - Database inconsistency: Found key for reminder hash %@ but reminder is missing
SGDSuggestManager failed to clear caches following an asset update: %@
clearing lastSuggestionsFromMessage cache due to settings change
SGDSuggestManager: contentAdmissionBlocklistDidChange: called with %tu bundles
SGDSuggestManager has no entity store and cannot continue
SGDSuggestionsManager going away now, bye!
Warming up suggestions...
Warmed up suggestions in %0.2f ms and found %i enrichments
Suggestions is already warmed up (as of %0.1f seconds ago)
clearCachesFully: %i
contactsFromContact: %@
contactsFromContactIdentifier: %@
Error from CNContactStore contactWithIdentifier: %@
contactsFromContactIdentifiers (%lu ids)
SGDSuggestManager-emailAddressIsSignificant:%@
contactFromRecordId: %@
cnContactMatchesForRecordIds (%lu ids)
storageContactFromRecordId: %@
SGDSuggestManager-contactMatchesWithFullTextSearch:%@ limitTo:%lu
SGDSuggestManager-contactMatchesWithMessagingPrefix:%@ limitTo:%lu
SGDSuggestManager-allContactsWithSnippets:%@ limitTo:%lu
SGDSuggestManager-suggestEventsStartingAt:%@ endingAt:%@ limitTo:%lu
eventFromRecordId: %@
SGDSuggestManager-suggestEventsStartingAt:%@ endingAt:%@ prefix:%@ limitTo:%lu
SGDSuggestManager-suggestEventsInFutureLimitTo:%lu
SGDSuggestManager-confirmReminderByRecordId: %@
SGDSuggestManager-confirmRealtimeReminder
SGDSuggestManager - Confirmation: Unable to retrieve reminder from the harvest store. Computing and storing hashes only.
SGDSuggestManager-rejectReminderByRecordId: %@
SGDSuggestManager-rejectRealtimeReminer
SGDSuggestManager - Rejection: Unable to retrieve reminder from the harvest store. Computing and storing hashes only.
SGDSuggestManager-alarmTriggeredForRecordId: %@
SuggestionsManager getting all Reminders
SuggestionsManager getting reminder title for content
SuggestionsManager logging user created reminder title
SuggestionsManager getting all Deliveries
Suggestions Cache hit: %@
Suggestions Cache hit
Suggestions Cache miss: %@
Suggestions Cache miss
Went from %d to %d suggestions after filtering out already acted-on suggestions
Skipping extracted event that has already passed.
NaturalLanguageEvent Found: Bumping TTL
SGDSuggestManager - For [SGEntity %{public}@], Found %d extracted event candidates.
More than one event found using alternative keys
EKEvent with the same externalIdentifier found, but eventIdentifier is nil.
More than one EKEvent with the same opaque key detected.
EKEvent with the same opaque key found, but eventIdentifier is nil.
EKEvent for cancellation found, but eventIdentifier is nil.
Suppressing update or view duplicate of EKEvent because eventIdentifier is nil.
Suppressing update or view duplicate of EKEvent because event status is canceled.
Newer EKEvent from Suggestions has been found. Showing the updated event insead of this one.
Suppressing NL event because it looks like a near-duplicate of a curated event.
Suppressing NL event because it looks like a duplicate of a recurring curated event.
Suppressing NL event because eventIdentifier is nil.
Suppressing event because we found more than 1 duplicate.
New realtime event
Duplicate realtime event
Update realtime event
Cancellation realtime event
Near duplicate realtime event
Returning %d realtime events.
Skipping event with nonnull suggestionInfo but null suggestionInfo.uniqueKey
Skipping event with dupKeyString that does not pass basic scrutiny: %{private}@
EKEvent exact match with the same duplicate key found, but eventIdentifier is nil.
Entity is from inhuman sender
Contacts after filter, before realtiming, %@
Extracted Realtime contact details about the user and tried to show them in a banner: %@
Extracted a contact with a different handle to the sender: %@
Contact pre-aggregation: %@
Contact post-aggregation: %@
Contact: %@, interesting: %i
Error getting realtime contact for %@: %@
Realtime contacts: %@
SGDSuggestManager-contactMatchesByPhoneNumber
SGDSuggestManager-namesForDetail
SGDSuggestManager-contactsByEmailAddress
SGDSuggestManager-contactsBySocialProfile
SGDSuggestManager-messagesToRefreshWithCompletion
Loading messages to refresh.
SGDSuggestManager-updateMessages
SGDSuggestManager-reportMessagesFound
SGDSuggestManager-fullDownloadRequestBatch
SGDSuggestManager-resolveFullDownloadRequests
SGDSuggestManager-eventFromUniqueId: %@
dupKey: %@
eventFromUniqueId: %@ resulted in dupKey: %@ and event: %@
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Found no item references for event with unique id '%@'
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Found no container reference for event with unique id '%@'
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: %@
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Event was not found and no fallback URL provided.
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Could not get the entity type.
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Found e-mail for Event Found in Mail on device.
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Could not find e-mail for Event Found in Mail on device but did find fallback URL
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Could not find e-mail for Event Found in Mail on device or fallback URL.
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Found message for Event Found in Messages on device.
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Can't find a bundleId for entity type: '%lld'
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Could not find an installed bundle id.
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Could not create launch intent for event.
SGDSuggestManager-launchAppForSuggestedEventUsingLaunchInfo: Error creating application record: %@
SGDSuggestManager-launchAppForSuggestedEventUsingLaunchInfo: Error opening user activity: %@
SGDSuggestManager-confirmEvent: %@
SGDSuggestManager-confirmEventByRecordId: %@
SGDSuggestManager-rejectEvent: %@
SGDSuggestManager-rejectEventByRecordId: %@
SGDSuggestManager - deleteEventByRecordId: event Id: (%{public}@)
SGDSuggestManager-confirmContact: %@
While confirming/rejecting contact detail, failed to load detail for record id: %@
While confirming/rejecting contact detail, requested detail not in loaded contract for record id: %@
Confirming details as workaround for Contacts search for contact %@
While confirming/rejecting contact, provided recordId was not contactId: %@ %@
SGDSuggestManager-confirmRecord: %@ %td
SGDSuggestManager-rejectRecord: %@ %td
SGDSuggestManager-confirmContactDetailRecord: %@ %td
SGDSuggestManager-rejectContactDetailRecord: %@ %td
SGMISaliencyInference: %@
Suggestions received value %@ for feature setting %ld. Processing of the information not implemented yet.
Suggestions received feedback %@ for NSData %{sensitive}@.
FollowUpFeedback: NSData %{sensitive}@ for warning %{sensitive}@
Suggestions received feedback %@ for StringFromFollowUpWarning %{sensitive}@.
FollowUpFeedback: for StringFromFollowUpWarning %{sensitive}@ for warning %{sensitive}@
SGDSuggestManager: addSearchableItemMetadata: failed to deserialize item data.
SGDSuggestManager: addSearchableItemMetadata: %@ is eligible for harvesting.
SGDSuggestManager: addSearchableItemMetadata: %@ is NOT eligible for harvesting.
SGDSuggestManager addInteractions: bundleId: %{public}@
SGDSuggestManager addInteractions: Can't add 0 interaction from bundleId: %@
SGDSuggestManager addInteractions: Got %i interactions from nil bundleId! Ignoring.
SGDSuggestManager: _harvestPeopleFromInteractions: harvesting from %@ %@
Interaction from %@ rejected. Display name is very likely a phone-number or email address.
SGDSuggestManager: _harvestPeopleFromInteractions: harevsted %tu entities
Buffered interactions when block was scheduled: %tu, now: %tu
Processing all buffered interactions
Waiting for more interactions to be donated before processing.
SGDSuggestManager addInteractions: Encountered INInteraction with nil identifier.
SGDSuggestManager addInteractions: Didn't find any enrichment after dissection of the INInteraction (%{public}@).
Plugins finished purging %lu items from bundle: %@
SGDSuggestManager: Plugins finished deleting %lu items from bundle: %@
SGDSuggestManager: deleting spotlight references: %@ : %@
Plugins finished deleting %lu domains from bundle: %@
Plugins finished deleting bundle: %@
SGDSuggestManager-schemaOrgToEvents
isEventCandidateForURL: %{sensitive}@ -title: %{sensitive}@
SGSuggestionsService isEventCandidateForURL: method called with nil arguments
SGSuggestionsService isEventCandidateForURL: Based on whitelist check, URL is candidate
SGSuggestionsService isEventCandidateForURL: eventCandidate is nil, domain appears not to be whitelisted.
SGDSuggestManager isEventCandidateForURL: Checking classifier output for webpage
SGDSuggestManager-isEventCandidateForURL: %{sensitive}@ -title: %{sensitive}@
SGDSuggestManager isEventCandidateForURL: end processing because detectStructuredEvents is OFF.
SGDSuggestManager suggestionsFromURL - Start processing webpage
SGDSuggestManager-suggestionsFromURL: %{sensitive}@ -title: %{sensitive}@ -HTMLPayload length: %lu 
suggestionsFromURL ignoring item since Safari is disallowed by user's settings
SGDSuggestManager suggestionsFromURL: parent entity has %lu enrichment(s) after dissection
Parents entity has %lu enrichements
Failed to process event suggestion 
 "Show Siri Suggestions" disabled in Calendar.
Failed to process event suggestion 
 you must acknowledge "What's new in Calendar" screen in the Calendar app.
Geocode modified locations, updating enrichment
realtimeSuggestionsFromURL ignoring item since Safari is disallowed by user's settings
SGDSuggestManager-waitForEventWithIdentifier: %@ -toAppearInEventStoreWithLastModificationDate: %@
#logUnknownContactInformationShownCount names for detail %@: %lu
Caching event from with external identifer = %@.
Event found for Spotlight interaction, but not from Suggestions.
Not logging event interaction for bogus uniqueKey: %@
Not logging event interaction for uniqueKey with bad serialization: %@
Attempting to retrieve entity from harvestStore for uniqueKey = %@
Couldn't find Entity with uniqueKey = %@
Entity is not a pseudo event
exiting due to daemonExitWithCompletion request
SGDSuggestManager: Dropping all aggregated contacts
SGDSuggestManager: Dropping aggregated contact for conversation: %@
SGDSuggestManager-ipsosMessagesFromSearchableItems
SGDSuggestManager-recentURLsWithLimit:%u called
SGDSuggestManager-recentURLsWithLimit returning %tu URLs
SGDSuggestManager-urlsFoundBetweenStartDate:%@ endDate:%@ excludingBundleIdentifiers:%@ containingSubstring:%@ flagFilter:%d limit:%u called
SGDSuggestManager-urlsFoundBetweenStartDate:endDate:excludingBundleIdentifiers:containingSubstring:flagFilter:limit returning %tu URLs
SGDSuggestManager-registerURLFeedback:%d url.length:%tu called
SGDSuggestManager-registerURLFeedback returning %d
SGDSuggestManager: Mail: suggestionsFromSearchableItem: %@ : %@ options: %tu
SGDSuggestManager: Mail: suggestionsFromSearchableItem was called with an invalid item
suggestionsFromSearchableItem ignoring item since the bundle is disallowed by user's settings
SGDSuggestManager: Mail: harvestedSuggestionsFromSearchableItem: %@ : %@ options: %tu
harvestedSuggestionsFromSearchableItem ignoring item since the bundle is disallowed by user's settings
SGDSuggestManager: Mail: suggestionsFromEmailContent: %@ options: %tu
SGDSuggestManager: Mail: suggestionsFromSimpleMailMessage: %@ : %@ options: %tu
SGDSuggestManager: Messages: harvestedSuggestionsFromMessage: %@ : %@ options: %tu
harvestedSuggestionsFromMessage ignoring item since the bundle is disallowed by user's settings
SGDSuggestManager: Messages: harvestedSuggestionsFromMessage (deprecated): %@ : %@ options: %tu
SGDSuggestManager: Messages: harvestedSuggestionsFromMessages: %tu messages (options %tu)
harvestedSuggestionsFromMessages ignoring item since the bundle is disallowed by user's settings
harvestedSuggestionsFromMessages called with no inputs
SGDSuggestManager: harvestedSuggestionsFromMessages: Suggesting reminder with recordId: %@
SGSuggestManager-foundInStringForRecordId:%@ style:%u called
No entity found for recordId: %@
Entity %{public}@ -> SGStorageReminder %{public}@
SGDSuggestManager-foundInStringForRecordId: unable to format contact name.
SGDSuggestManager-foundInStringForRecordId: error when fetching contact: %@
SGDSuggestManager: deleteDataDerivedFromContentMatchingRequest
SGDSuggestManager: consumeMailContentWithContext
SGDSuggestManager: consumeMessagesContentWithContext
SGDSuggestManager: consumeInteractionWithContext: %@
Error constructing data detector for featurizing: %@
SGMIDailyActivity Starting Task #1 for Signature Stats logging: -[SGMIFeatureStore warningStatsForLogging:]
SGMIDailyActivity Signature Stats logging do not have enough new data point to submit new logs.
DailyTasks.LogSignature
SGMIDailyActivity will not run signature stats logging (logWarningSignatureStats is disabled)
SGMIDailyActivity Starting Task NicknameMappingLookup
DailyTasks.NicknameMappingLookup
SGMIDailyActivity: Mail saliency detection is off. Will not proceed with daily activity tasks.
SGMIDailyActivity Starting Task #1: SGMISubmodelsManager checkForAndProcessVersionChange
DailyTasks.ModelVersionChange
SGMIDailyActivity Finished Task #1: SGMISubmodelsManager checkForAndProcessVersionChange
SGMIDailyActivity Starting Task #2: SGMISubmodelsManager incrementalSubmodelUpdate
DailyTasks.SubmodelUpdate
SGMIDailyActivity Finished Task #2: SGMISubmodelsManager incrementalSubmodelUpdate
SGMIDailyActivity Starting Task #3: SGMISubmodelsManager pruneDB
DailyTasks.PruneSubmodels
SGMIDailyActivity Finished Task #3: SGMISubmodelsManager pruneDB
SGMIDailyActivity Starting Task #4: Logging
DailyTasks.LogMetrics
SGMIDailyActivity Finished Task #4: Logging
SGMIDailyActivity Starting Task #5: Performing DB maintenance
 enableTelemetry=YES 
DailyTasks.PerformDBMaintenance
SGMIDailyActivity Finished Task #5: Performing DB maintenance
SGStructuredEventExtractionModel: No input or output mapping
Preparing Structured Event model inference
SGStructuredEventExtractionModel: Model initialization failed
Model input feature construction failed.
Model inference failed: %@
Model inference done in %f
Unable to convert to instantiate SGExtractionModelCoreMLFeatureWrapper
SGStructuredEventExtractionModel: Loading model from trial override at path: %@
Unable to load model from URL: %@
SGStructuredEventExtractionModel: No configuration loaded
SGStructuredEventExtractionModel: Unable to get URL for Gazetteer
SGPOSTagger: Unable to create gazetteer %@
Prefilter tree stack overflow
Prefilter tree stack underflow
Registering for MobileAsset metadata download with CTS
CoreSuggestionsModelAssets metadata download success? %d
CoreSuggestionsAssets metadata download success? %d
CoreSuggestionsAssets metadata download - marking activity as done
registering _registerForCollectWeeklyStats
Can not harvest items until first unlock. Waiting for later.
Pruning entities more than a year old
NOT pruning entities more than a year old, due to preference setting.
Vacuuming the database
Registering for identity analysis with CTS
Registering for RTC log sending with CTS
Deferring sending of RTC Logs
Registering for contact detail cache rebuilding with CTS
Deferring CD cache rebuild
Registering for pending-geocode processing with CTS
Deferring remaining geocodes for later
Invalid state transition to DEFER
Registering for pending-verification processing with CTS
SGDManagerForCTS _performProcessPendingVerificationActivity: Starting CTS job for document verification.
SGDManagerForCTS _performProcessPendingVerificationActivity: Deferring CTS document verification for [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: Could not defer CTS document verification for [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: Entity pending source verificaiton did not have an email entity key. [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: Entity pending source verificaiton did not have a message ID. [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: Starting CTS document verification for [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: Successfully verified DKIM signature. [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: DKIM verification resulted in permanent failure: %@. [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: DKIM verification resulted in temporary failure for 2nd time. Treating as permanent failure: %@. [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: Could not obtain a lock for document verification.
Registering for mail event aggregation processing with CTS
SGDManagerForCTS _performMailIntelligenceTasksActivity: Activity running even though Class A protected data is unavailable
SGDManagerForCTS _performMailIntelligenceTasksActivity: Starting CTS job for Mail Intelligence Tasks
Mail Intelligence Task deferred by CTS
Mail Intelligence Task interrupted by device lock state change
[HarvestedURLMetric] Registering for harvested URL metrics upload task with CTS
[HarvestedURLMetric] Can not access entity store. Waiting for later.
[HarvestedURLMetric] Performing harvested URL metric upload CTS job.
[HarvestedURLMetric] Got %tu URL(s) in the store.
[HarvestedURLMetric] Deferring for later right after getting URLs
[HarvestedURLMetric] Deferring for later while enumerating URLs
[HarvestedURLMetric] payload: %@
[HarvestedURLMetric] Done with harvested URL metric upload CTS job.
Tombstone exists for queued item; deleting.
Plugins finished CSSI processing via CTS: %@
Plugins finished async CSSI processing via CTS: %@
Dissector pipeline ignoring %@
text message CSSI %@ has no authors
text message CSSI %@ has no accountIdentifier
Unhandled CSSI %@ from %@ in -[SGDManagerForCTS processSearchableItem:pipeline:context:]
SGTextMessage %@ has been processed without dissection, so it will be dropped from the dissector pipeline.
SGSimpleMailMessage %@ appears to be a sent email not in the sent mail folder, so it will be dropped from the dissector pipeline.
SGSimpleMailMessage %@ has been processed without dissection, so it will be dropped from the dissector pipeline.
Ignoring attachments because a structured event already found
Found event
Failed to parse event from ics attachment.
Ignoring event with the request method in an ics attachment from a shared calendar provider.
Ignoring event that has the same UID as another event in the same ics attachment.
Skipping calendar attachment dissector: detectStructuredEvents is OFF
Message with %lu attachments (%lu downloaded ics)
Error when reading attachment at %@:
Error when instantiating ICSDocument for attachment at %@:
Preparing for queries
Running finishSuggestionsSetup (harvestStore=%@, defaultStore=%@)
Error during %@ setup: %@
Sending processing of %@ %@ from %@ to plugin %@
Plugin reported error: %@: %@
Sending processing of interaction %@ from %@ to %@
Plugin %@ requesting historical data: %@
sending purge of %lu items from %@ to plugin %@
sending deletion of %lu items from %@ to plugin %@
sending deletion of %lu domains from %@ to plugin %@
sending deletion of bundle %@ to plugin %@
Refreshing due to account change: %@
Filtering account change that we don't care about: %@
Failed to fetch CalDAV accounts: %@
Calendar accounts updated: %@
SGRemindersAdapter: Not adding reminder that has dueDate in the past
SGRemindersAdapter: PseudoReminder found in Found in Apps list, not adding
SGRemindersAdapter: Duplicate found in user defined list, not adding
SGRemindersAdapter: Adding Reminder with recordId: %@
Reminder is not a valid new one, already exists in SGSuggestHistory
SGRemindersAdapter: Confirming reminder
SGRemindersAdapter: Rejecting reminder
SGRemindersAdapter: alarm triggered from this device
SGRemindersAdapter: Not removing reminder since it's an allDay reminder
SGRemindersAdapter: Confirming reminder from other device
SGRemindersAdapter: Rejecting reminder from other device
SGRemindersAdapter: Removing pseudo reminder because of parent deletion
Multiple reminders linked to one storage reminder
Didn't find any REMReminders to reject
Unable to retrieve found in apps list: %@
Unable to load RemindersFoundInApps list
Unable to serialize ReminderMetadata: %@
Saving Reminder with universal link: %@
Unable to save reminder in ReminderKit error: %@
Unable to delete reminder in ReminderKit error: %@
Unable to load metadata from reminder with id: %@ error: %@
SGRemindersAdapter: Duplicate reminder found based on exact title match
SGRemindersAdapter: Duplicate reminder found based on dueDate and edit distance of title
SGRemindersAdapter - [SGStorageReminder (%{public}@)] constructNotesForReminder: Unable to fetch contact: %{public}@
SGMISaliencyInference: Mail %@ is a sent mail
SGMISaliencyInference: Error - config shouldn't be nil when inferencing saliency
SGMISaliencyInference: No submodels for message ID: %@
SGMISaliencyInference: rule based inference for message ID: %@
SGMISaliencyInference: Performing saliency inference for e-mail message.
Self-id: Skipping - outgoing message
Self-id: Not-a-known-name "%@" word in candidate "%@"
Self-id: Found NO name to extract from candidate "%@"
Self-id: Extracted name "%@" from candidate "%@"
Self-id: Extracted partial name "%@" from candidate "%@"
Self-id: looking for pattern match in: "%@"
Message-Id header not found. Using hash: %@
Skipping setAuthor: detectContacts is OFF
Unknown SGMessage subclass
Ignoring invalid email: %s
Tagging as inhuman: Body
Tagging as human: Headers
SGSuggestHistory: Entering migrateIfNeeded
SGSuggestHistory: Exiting migrateIfNeeded (fromKVS is nil)
SGSuggestHistory: Exiting migrateIfNeeded (migration not needed)
SGSuggestHistory: migrateIfNeeded session %{public}@
SGSuggestHistory: Timed out in migrateIfNeeded -- Ending transaction but migration will continue (unless we probabilistically crash)
SGSuggestHistory: migrateIfNeeded on queue
SGSuggestHistory: migrateIfNeeded aborting due to nil strongSelf
SGSuggestHistory: migrateIfNeeded %@
SGSuggestHistory: needsMigration returning YES because migrationToken is nil
SGSuggestHistory: needsMigration returning YES because migrationToken %{public}@ is not set in the KVS
SGSuggestHistory: needsMigration returning NO because migrationToken %{public}@ is already set in the KVS
SGSuggestHistory: recording successful migration using token %{public}@
SGSuggestHistory: migrateFromKVS aborting to avoid re-entrancy
SGSuggestHistory: migrateFromKVS succeeded, deleting keys from fromKVS: %@
SGSuggestHistory: migrateFromKVS %@, calling completion block...
SGSuggestHistory: migrateFromKVS aborting, %f sec elapsed since last migration but cooldown period is %f
SGSuggestHistory: migrateFromKVS aborting due to nil destination kvs
SGSuggestHistory: migrateFromKVS successfully synced fromKVS
SGSuggestHistory: migrateFromKVS error syncing fromKVS (will still proceed with migration, this is a best-effort thing): %@
SGSuggestHistory: migrateFromKVS bailing, migration no longer needed after attempting to sync dest KVS
SGSuggestHistory: migrateFromKVS bailing due to error syncing dest KVS: %@
SGSuggestHistory: migrateFromKVS copying salt %{private}@ to new kvs
SGSuggestHistory: bailing with success because new (%{private}@) and old (%{private}@) kvs have different salts
SGSuggestHistory: migrateFromKVS copying legacy manatee salt %{private}@
SGSuggestHistory: migrateFromKVS not copying legacy manatee salt because no legacy manatee salt has been generated
SGSuggestHistory: migrateFromKVS legacy manatee salt %{private}@ in fromKVS conflicts with existing legacy manatee salt %{private}@ in dest, so we're going to bail with success
SGSuggestHistory: migrateFromKVS for key %{public}@ has no existing data in fromKVS, so skipping
SGSuggestHistory: migrateFromKVS for key %{public}@ failed to decode data in fromKVS, so skipping
SGSuggestHistory: migrateFromKVS for key %{public}@ fromKVS does not have any existing entries in dest, so copying the serialized object directly
SGSuggestHistory: migrateFromKVS for key %{public}@ fromKVS does not have any entries that aren't already in dest
SGSuggestHistory: migrateFromKVS for key %{public}@ fromKVS migrating %tu entries from fromKVS to dest kvs that dest kvs didn't already have
SGSuggestHistory: migrateFromKVS newDestData is nil for key %{public}@! this should not happen. src: %{private}@, dest: %{private}@
SGSuggestHistory: migrateFromKVS for key %{public}@ newDestData is length %tu
Suppressing cloud sync. This should happen in testing only.
SGSuggestHistory is a no-op with kvs == nil!
Something went wrong with trying to synchronize icloud store
Empty or corrupt resetInfo
Pushing confirmed events set with %i items
Pushing confirmed events without timestamp set with %i items
Pushing rejected events set with %i items
Pushing confirmed reminders set with %i items
Pushing rejected reminders set with %i items
Pushing confirmed event fields set with %i items
Pushing confirmed event without timestamp fields set with %i items
Pushing contacts set with %i items
Pushing storage details set with %i items
Pushing do-not-update set with %i items
Pushing reset info (generation %lu, timestamp %.1f)
SGCK legacy Manatee salt not supported
SGCK will use legacy manatee hashes
SGCK legacyIOS13HashesForClassicHashes was passed a hash that is already a ios13 hash
Resetting suggestions history
Suggestions history synced data change, reason=%i
Resetting history due to a KVS reset event within %g sec time window.
Suppressing KVS history reset because time window has expired.
SGSuggestHistory - Receive updated confirmed event hashes (%{public}lu total, %{public}lu new)
SGSuggestHistory - Receive updated rejected event hashes (%{public}lu total, %{public}lu new)
SGSuggestHistory - Receive updated confirmed event field hashes (%{public}lu total)
SGSuggestHistory - Receive updated confirmed event field without timestamp hashes (%{public}lu total)
SGSuggestHistory - Receive updated confirmed reminder hashes (%{public}lu total, %{public}lu new)
SGSuggestHistory - Receive updated rejected reminder hashes (%{public}lu total %lu new)
Receive updated contact hashes (%lu total)
Receive updated storage detail hashes (%lu total)
Receive updated don't-update hashes (%lu total)
KVS account change
Exceeded iCloud key value storage quota. Can't store any more acted on suggestions.
SGSuggestHistory calling migrateIfNeeded due to NSUbiquitousKeyValueStoreAccountChange
Confirming or rejecting record for contact %@
Confirming or rejecting contact %@
Rejecting contact %@
Don't know how to deal with this realtime contact state (state = %i)
Confirming event %@
Confirming storage event %@
Rejecting event %@
Rejecting storage event %@
Confirming reminder with opaqueKey %@
Rejecting reminder with opaqueKey %@
Argument must be of type SGRealtimeContact or SGRealtimeEvent, but was %@
Error opening file %@ at base path: %@
Lossy conversion. Detected charset: %ld (expected: %ld)
Found %i DD sigs for same person. Using sig %i with %i subresults
Error initializing SGMIAttachmentSizeHistogram with numberArray: %@
Got nil name
Follow Up. [analyzeFeatureVector] Analyze Feature Vector with messageId %@. Feature Vector: %{sensitive}@
Follow Up. [analyzeFeatureVector] Storing Detection Stats for Warning  %{sensitive}@
Follow Up. [_analyzeFeatureVector] Analyze Feature Vector for messageId %@. Feature Vector: %{sensitive}@ with CustomRange %@
Follow Up. [_analyzeFeatureVector] SGMIWarningsConfig loaded: %@
Follow Up. [_analyzeFeatureVector] Aborting computation. Language %@, Config %@, Body %{sensitive}@, RegExpDictionary %@
Follow Up. [_analyzeFeatureVector][RegEx loop] Checking for a match in RegEx: %@
Follow Up. [_analyzeFeatureVector] Match found: %{sensitive}@
Follow Up. [_analyzeFeatureVector] Match valid: %{sensitive}@
Follow Up. [_analyzeFeatureVector] Looking for a potential time reference in: %{sensitive}@
Follow Up. [_analyzeFeatureVector] Exploring Data Detector matches.
Follow Up. [_analyzeFeatureVector] Exploration Data Detector matches finished. Warning start date %{sensitive}@
Follow Up. [_analyzeFeatureVector] Exploring Data Detector Mapped Additions matches.
Follow Up. [_analyzeFeatureVector] Exploration Data Detector Mapped Additions matches finished. Warning start date %{sensitive}@
Follow Up. [_analyzeFeatureVector] Exploring Data Detector Additions matches.
Follow Up. [_analyzeFeatureVector] Exploration Data Detector Additions matches finished. Warning start date %{sensitive}@
Follow Up. [_analyzeFeatureVector] Warning not raised, as one of the following is nil. isNil_snippet: %@, isNil_signature: %@, isNil_detectedLanguage: %@, isNil_startDate: %@
Follow Up. [_analyzeFeatureVector] Exiting the method. Warning found %{sensitive}@
Follow Up. [_analyzeFeatureVector] followUpTimeRangeForDebugging was set in defaults settings. Overriding the custom time range for warning %{sensitive}@
Follow Up. [identifyFollowUpWarningFromSubject:content:] Computing warning for subject: %{sensitive}@ body:%{sensitive}@
Follow Up. [identifyFollowUpWarningFromSubject:body:] Computing warning for subject: %{sensitive}@ body:%{sensitive}@
SGMIFollowUpManager: Mail Intelligence's SPI back end timed out
SGMIFollowUpManager: Mail Intelligence's SPI back took over 5 seconds on a %tu-lengthed content: we have to xpc_transaction_exit_clean
Follow Up. [analyzeForFollowUpMailWithBody:isSent:messageId:date] Can't initialize mailDictionary: nil object. body: %{sensitive}@, isNil_body: %@, messageId: %@, date: %@
Follow Up. [analyzeOutgoingMailFeatureVector] nil config. Follow Up processing aborted.
Follow Up. [analyzeOutgoingMailFeatureVector] detectedLanguage: %@ regExLanguage %@ regexes loaded: %@
[Follow Up] CustomTimeRange behavior specified in asset overriden by default setting. Value: %@
SGMI received %@ feedback for follow up warning
[Follow Up] Engagement type %ld received is not supported.
SGMIFollowUpManager Sending an event to CoreAnalytics: FollowUp is %@
Unable to load plplist content for %@: %@
Unable to resolve path: %@
Unable to create input MLMultiArray: %@
inputDictFromTaggedCharacterRanges: '' not present for inputSection: %@
featureDimensionForInputSection: Model doesn't have description for inputSection: %@
SGExtractioNModel: Unable to find URL for model
Unable to map output to label
Found no Lemma input when trying to extend output label to sequence length.
SGExtractionModel: Couldn't delete model file: %@
Sqlite error while rebuilding identity tables: %@
Can't create interdicts for blob of size %lu; skipping.
Merge group containing %lu names exceeds limit of %lu; skipping interdict construction.
Merge group mapping to %lu CNContacts exceeds limit of %lu; skipping interdict construction.
Failed to encode mergeBlob: %@
Starting identity blob analysis.
Blob analysis complete.
Blob analysis deferring.
Could not defer blob analysis.
Loading pattern plist, path: %@
Loading pattern pldat, path: %@
Loading pattern data from path "%@"
Reinstating death for %i objects
Pausing death for %i objects
Range {%tu, %tu} out of bounds; string length: %tu
Quick responses: No likely language prediction for conversation
Quick responses: Text message has no conversation identifier
Quick responses: processing is disabled for group messages
Quick responses: response message is much too long for labeling or DP reporting
Quick responses: processing requires at least two text messages
Quick responses: No model available for language: %@
Quick responses: processing requires the prompt and reply to have a single sender handle
Quick responses: processing requires the reply to be to a different person's prompt
Quick responses: processing requires the prompt and the reply to have text content
Quick responses: processing requires the prompt to be no more than %lu characters in length
Quick responses: using dynamic label with unique identifier %@
Quick responses: not keeping response message because it is greater than %lu characters in length
Quick responses: labeler failed to offer positive or negative label in language %@
Quick responses: dropping sample with label %@
Quick responses: keeping sample with label %@
Quick responses: not adding session for training - localTraining %d, spotlightReference %d, vector %d, sessionDescriptor %d, version: %@
SGMISaliencyModelConfig: Could not process rule set; name array from Trial is nil.
SGMISaliencyModelConfig: Could not process rule set; lower bounds array from Trial is nil.
SGMISaliencyModelConfig: Could not process rule set; upper bounds array from Trial is nil.
SGMISaliencyModelConfig: Could not process rule set; outputs array from Trial is nil.
SGMISaliencyModelConfig: Inconsistent array sizes in Trial asset.
SGMISaliencyModelConfig: Unexpected feature %@
SGMISaliencyModelConfig: Error in processing outstanding saliency rules.
SGMISaliencyModelConfig: Error, mean for feature standardization is nil.
SGMISaliencyModelConfig: Error in processing ground truth estimation rules.
SGMISaliencyModelConfig: Error, classification threshold is nil.
SGMISaliencyModelConfig: Error, minCountToConsiderATokenAsHighlyDiscriminant is nil.
SGMISaliencyModelConfig: Error, ratioToConsiderATokenAsHighlyDiscriminant is nil.
SGMISaliencyModelConfig: Error, minCountToConsiderATokenAsExtremelyDiscriminant is nil.
SGMISaliencyModelConfig: Error, ratioToConsiderATokenAsExtremelyDiscriminant is nil.
SGLowMemoryContactEnumeration got an error from Spotlight: %@
SGLexicon: Unable to load lexicon, %@
SGLexicon: non utf-8 token passed
Could not load nicknames from %@: %@
Unexpected object returned from Contact Store: %@ Retrieved From %@
SGContactsInterface: CNPhoneNumber initWithStringValue returned nil
Unsupported handleType: %@
Error enumerating contacts: %@
Expecting NSString for airportName but found something else: %@. Asset version = %lu
No airports found in common
Could not get airport code for airport "%@" from flights %@ on carrier %@ because they do not have at least 1 airport in common
Skipping levenshtein for airport "%@" flights %@ on carrier %@ because they have exactly one airport in common: %@
Filtered event records from %tu to %tu filtering for teamIdentifier %@: %@ -> %@
Failed to load model chunk file resource %s
Model loaded.
Failed to locate assets resource %s
Loading model {entity: %s, type: %s, language: %s, version: %tu, path: %s}
Invalid model string: %s
Unknown model class: %s
Unknown model name: %s
More than one prediction model specified for objective %lu, language: %@, models: %@
Failed to load model (objective: %lu, langauge: %@, name: %@)
No prediction model specified for objective %lu, language: %@
Error listing contents of directory %@: %@
Could not unlink %@ while rotating: errno=%i
Rotating bloom filters
Could not move %@ to %@: errno=%i
Could not unlink %@: errno=%i
Could not open Bloom filter file. errno = %i
Could not mmap Bloom filter file. errno = %i
Quick responses: A conversation must have more than 2 messages for a prompt; returning prompt as nil
Quick responses: Most recent message is not a response to a prompt
Error decoding null message.textContent in %@:
Could not open %@: errno=%i: %s
Could not fstat %@: errno=%i: %s
Could not write to journal file %@: errno=%i: %s
Could not read from journal file %@: errno=%i: %s
Journal file has invalid magic number: expected 0x%x, got 0x%x: %@
Journal file truncated: %@
Journal file checksum mismatch: %@: %u / %u
Could not remove %@: errno=%i: %s
SGReminderExtractionModel: Loading model from trial override at path: %@
No inputTokenMapping found
No output configuration found.
Preparing model inference
Model initialization failed
Unable to load model features.
Attempt to read stored logs
Corrupted persistent logging store! Removing corrupted store.
Exception we're not catching
New logging store
SGRTCLogging going away now
RTCLogging: usageMaps: %@, (%@ Maps launch in past 2 weeks)
RTCLogging: usageCalendar: %@, (%@ Calendar events found)
RTCLogging: log and increment interaction key: %@, for eventKey: %@
RTCLogging: can't find eventKey in loggedInteractionsSummary dictionary
RTCLogging: log new interaction summary: %@
RTCLogging: log new interaction: %@
RTCLogging: log extraction (%@) to RTC for templateName: %@ timingProcessing: %llu
RTCLogging: log extraction from Message Event Dissector (%@) to RTC for templateName: %@ timingProcessing: %llu
RTCLogging: entity can't be found
RTCLogging: entity.duplicateKey.entityKey serialization failed
RTCLogging: logging interaction to RTC for interactionKey: %@, eventKey: %@
RTCLogging: Sending privacy-aware suggestions log over the network
RTCLogging: No RTC logs to send this time. Skipping.
RTCLogging: Selected logs (%lu): %@
RTCLogging: No RTC backends found, no logs will be sent at this time.
RTCLogging: Aborting sending of logs as shouldContinueBlock returned NO
RTCLogging: Unable to send logs: %@
RTCLogging: Unable to send logs for storeAge: %@
RTCLogging: Unable to flush logs
Couldn't create the privacy-aware store for Suggestions.
Persisting some logs to disk!
failed to store reimport request: %@: %@
failed to mark reimport request %llu as queried: %@
failed to mark reimport request %llu as executed: %@
failed to mark %tu reimport items for %@ as seen: %@
failed to mark reimport item %@/%@ as seen: %@
failed to update reimport uniqueId item from %@ to %@: %@
failed to load unqueried reimport requests: %@
failed to load unseen reimport items for request: %llu: %@
failed to delete reimport requests older than: %@: %@
failed to delete completed reimport requests: %@
failed to delete orphaned reimport items: %@
error during reimportRequestDBStats query of reimportRequests: %@
error during reimportRequestDBStats query of reimportItems: %@
Already registered for activities
Checking in for activity %s
Stub activity called for %s
Activity "%s" has not registered with the system yet. Returning nil.
Ignoring CTS criteria change as it didn't change.
Setting CTS criteria for activity: %@, criteria: %@
_actuallyAddEvents bailing due to nil weakStore
Got error %@ while fetching unique identifiers for mail message ids %@
Error while writing %tu enrichment appends to %@ protection class: %@
Timed out waiting for spotlight to write enrichment appends
JSON decode error loading schemas: %@
JS not interrupted after 2x timeout!
SGReverseTemplateJS: Received %@ notification.
SGReverseTemplateJS: Queuing request to free JS context.
SGReverseTemplateJS: Asset version = %lu
SGReverseTemplateJS: List of loaded JS files in context = %@
SGReverseTemplateJS: suppressed process memory warning %lu times
Javascript execution timed out! Backtrace:
SGReverseTemplateJS: initialized JS context.
SGReverseTemplateJS: freeing JS context.
SGReverseTemplateJS: loading %@ in JS context.
JS log: %@
%{public}@
Can't get flightInformation, airlineCode is nil
Can't get flightInformation, flightNumber is nil
Can't get flightInformation, flightDate is nil
Can't get flightInformation, could not parse flightDate
SGReverseTemplateJS: completed initialization of JS context.
Could not load data asset %@: %@
SGReverseTemplateJS flightInformationWithAirlineCode: Can't get flightInformation, airlineCode is nil
SGReverseTemplateJS flightInformationWithAirlineCode: Can't get flightInformation, flightNumber is nil
SGReverseTemplateJS flightInformationWithAirlineCode: Can't get flightInformation, flightDate is nil
SGReverseTemplateJS flightInformationWithAirlineCode: Can't get flightInformation, flightDate is malformed
SGReverseTemplateJS flightInformationWithAirlineCode: bundleIdentifier is undefined.
flightInformationWithAirlineCode flightInformationWithAirlineCode: error when calling CoreParsec for: %@, %@, %@ = %@
SGReverseTemplateJS flightInformationWithAirlineCode: CoreParsec results for: %@, %@, %@ = %@
SGReverseTemplateJS loadJSFromASCIIFile: no file defined.
SGReverseTemplateJS loadJSFromASCIIFile: Error loading JS file %@: %@
Tried to call shouldDownloadFull without JS assets
Called shouldDownloadFull with result = %d
JS exception during shouldDownloadFull: %@.
SGReverseTemplateJS: Calling js for event classification
Tried to call eventClassificationForEntity without JS assets
SGReverseTemplateJS: Called eventClassificationForEntity with result: %@
SGReverseTemplateJS _eventClassificationForEntity: JS Exception during eventClassificationForEntity: %@
SGReverseTemplateJS: Calling JS to resolve candidates
Tried to call resolveCandidatesForJSDict without JS assets
SGReverseTemplateJS: Called resolveCandidatesForJSDict with result: %@
SGReverseTemplateJS: JS Exception during resolveCandidatesForJSDict: %@
SGReverseTemplateJS: Calling JS to get privacy aware logging
Tried to call getPrivacyAwareMlLogs without JS assets
SGReverseTemplateJS: Called getPrivacyAwareMlLogs with result: %@
SGReverseTemplateJS: JS Exception during getPrivacyAwareMlLogs: %@
SGReverseTemplateJS: Calling JS to get flight references and reservation id given text message
Tried to call getFlightReferencesAndReservationId without JS assets
SGReverseTemplateJS: Called getFlightReferencesAndReservationId with result: %@
SGReverseTemplateJS: JS Exception during getFlightReferencesAndReservationId: %@
SGReverseTemplateJS: Calling JS to diff schemas
Tried to call diffSchemas without JS assets
SGReverseTemplateJS: Called diffSchemasArrays with result: %@
SGReverseTemplateJS _diffSchemas: JS Exception during diffSchemasArrays: %@
SGReverseTemplateJS: Calling JS to merge schemas
Tried to call mergeSchemas without JS assets
SGReverseTemplateJS: Called mergeSchemasArrays with result: %@
SGReverseTemplateJS _mergeSchemas: JS Exception during mergeSchemasArrays: %@
SGReverseTemplateJS: Tried to call reverseMapEntity without JS assets
SGReverseTemplateJS: Unable to convert JS taggedCharacterRange to Objective-C
SGReverseTemplateJS: JS Exception during reverseMapEntity %@
SGReverseTemplateJS payloadToOutputWithEntryPoint: Tried to call messageToOutput without JS assets
SGReverseTemplateJS: Calling payloadToOutput with entry point: %@
SGReverseTemplateJS payloadToOutputWithEntryPoint: JS exception during messageToOutput: %@
Email: %@ %@ %@ %@ %@ %@ %@ %@ %@ %@
Loading master domains whitelist from path = %@
Received asset update notification. Now loading master domains whitelist from path = %@
SGDomainWhitelistChecker payloadForDomain: trie is nil.
SGDomainWhitelistChecker payloadWithStartChar: trie is nil.
SGDomainWhitelistChecker isStructuredEventCandidateForEmailDomain: trie is nil.
SGStructuredEventTrialClientWrapper: Updating factors
SGStructuredEventTrialClientWrapper: Unable to load plplist for %@ : %@
SGStructuredEventTrialClientWrapper: Unable to load plplist content for %@: %@
SGStructuredEventTrialClientWrapper: TRILevel is nil for foundInMailNotifications
SGStructuredEventTrialClientWrapper: supportedProviders list loaded with Trial: %@
SGStructuredEventTrialClientWrapper: engineConfig list loaded with Trial: %@
SGStructuredEventTrialClientWrapper: structuredEventInputMapping list loaded with Trial: %@
SGStructuredEventTrialClientWrapper: structuredEventOutputMapping list loaded with Trial: %@
SGStructuredEventTrialClientWrapper: foundInMailNotifications: %@
Unable to change SQLite lookaside configuration.
Could not install hasInhumanTag() sqlite function (rc = %i)
Could not install tagsHaveEscapedTag() sqlite function (rc = %i)
Could not install delimitedString() sqlite function (rc = %i)
Could not install firstStringAfterPrefix() sqlite function (rc = %i)
Sqlite could not install busy timeout. (rc = %i)
Sqlite could not install busy handler. (rc = %i)
unable to set auto_vacuum to INCREMENTAL: %@
Write statement should be run in a write transaction: %s
This query was delayed %0.2f ms waiting for db file locked by another sqlite connection: %s
This query was delayed %0.2f ms waiting for db file locked by another sqlite connection -- unknown SQL
failed to get page_count from db: %@. error: %@
failed to get freelist_count from db: %@. error: %@
Calculating pages to vacuum -- pageCount %tu freeCount %tu
not enough pages to vacuum: pageCount: %lu; freeCount: %lu
failed to get auto-vacuum mode from db: %@. error: %@
Will not vacuum db %@ due to device lock state
Called to vacuum %tu pages
failed to set auto_vacuum to INCREMENTAL for db: %@. error: %@
performing FULL VACUUM to make INCREMENTAL effected for db: %@
failed to vacuum db: %@. error: %@
performing INCREMENTAL VACUUM to free %lu pages with %@ iterations for db: %@
Performing incremental vacuum for %tu pages on iteration %d for total pages to free %tu
failed to incremental vacuum db: %@. error: %@
We have a vacuum activity %@ with activity state %@ after %@ batches
We got back that we should defer the vacuuming activity after %@ iterations and having vacuumed %@ pages with deferral success %@
SGStructuredEventDissector: No sender for mailMessage, bailing
SGStructuredEventDissector: extractionSupported: %@, shadowExtraction: %@, pflTraining: %@
SGStructuredEventDissector: Skipping reverse template dissector: detectStructuredEventsML is OFF and provider is not in whitelist
SGStructuredEventDissector: ignoring email
SGStructuredEventDissector: Entity has no content
SGStructuredEventDissector: Previous dissector found event, bailing
SGStructuredEventDissector: skipping shadowLogging extraction for realtime dissection
SGStructuredEventDissector: eventClassification is nil, bailing
SGStructuredEventDissector: Not classified as event, bailing
SGStructuredEventDissector eventClassification: %@
SGStructuredEventDissector: Preprocessed document is nil
SGStructuredEventDissector: Empty enrichedTaggedCharacterRanges
SGStructuredEventDissector: Event found, adding shadow log
SGStructuredEventDissector: Event found, adding ML log and enrichment
Failed to convert object to JSON: %@
SGStructuredEventDissector: Added enrichment
SGStructuredEventDissector: Missing entities for restaurant extraction: %@
SGStructuredEventDissector: Missing entities for hotel extraction: %@
SGStructuredEventDissector: Missing entities for ticket extraction: %@
SGStructuredEventDissector: Missing entities for car extraction: %@
SGStructuredEventDissector: Missing entities for movie extraction: %@
SGStructuredEventDissector: nil domParserResult
SGStructuredEventDissector: no extraction model inferences.
SGStructuredEventDissector: No name for missing entity
SGStructuredEventDissector: annotateContent: empty content or string passed
SGStructuredEventDissector: annotateContent: nil label passed
SGStructuredEventDissector: annotateContent: Unable to create taggedCharacterRange from result
SGScales: %@ took %f seconds
Retrieved location with latitude and longitude both 0
Retrieved location has one valid and one NaN coodinate
Pruning entities older than %0.2f
Pruning mail intelligence data older than one year
Pruning duplicate event entities from web-pages/interactions
web-page event entity exists on calendar, don't delete: %@
entities to delete %@
Pruning duplicate Event entities: %{public}lu
PseudoReminders to prune (%lu), %@
Pruning NL Events older than %f
NL Event entities to delete (%lu) %@
Deleting Mail Intelligence data for %lu messages
SGRealtimeContactConfidenceFeatureVec: <
  contacts with phone number matches: %i
  contacts with name matches: %i
  contact with both phone and name matches: %i
  Phone number matches an existing contact: %s
  Name matches an existing contact: %s
  Email matches an existing contact: %s
  IM Address matches an existing contact: %s
  Existing contact has address: %s
  Address match with existing contact, if both have addrs: %0.3f
  New phone numbers: %i
  New emails: %i
  New IM addresses: %i
  New addresses: %i
  Length of name: %i
  Name has at-sign: %s
SGInhumanityFeatureVec: <
  Has one or more inhuman-looking headers: %s
  Author email address looks inhuman: %s
  Author name looks inhuman: %s
  Body of email contains inhuman phrase: %s
  Domain is a template sender: %s
SGDetectionNotabilityFeatureVec: <
  Is phone number: %s
  Is address: %s
  In HMM-detected sig: %s
  In DD sig: %s
  How far down the email was this found?: %0.3f
  Phone numbers in sig: %i
  Phone numbers in email: %i
  Addresses in sig: %i
  Addresses in email: %i
SGMISaliencyModel: Loading CoreML model.
SGMISaliencyModel: Loading model from Trial at path: %@
SGMISaliencyModel: Error converting model path to file URL
SGMISaliencyModel: Invalid model path specifeid via Trial configuration.
SGMISaliencyModel: Error while initializing MLModel: %@
SGMISaliencyModel: Finished loading CoreML model.
SGMISaliencyModel: Unable to load SGMISaliencyModelConfig defaultConfig
Error - Couldn't get default saliency model when trying to run inference.
Error while preparing feature vector for mlmodel: dimension mismatch, expecting %@ got %lu
SGMISaliencyModel: Error while initializing MLMultiArray for SGMISaliencyModel inference: %@
SGMISaliencyModel: Error while running SGMISaliencyModel inference: %@
SGMISaliencyModel: Error while parsing SGMISaliencyModel inference.
Given a putative e-mail address with no @
Given a putative e-mail address with no @: %@
Processing event with eventName: %@
failed to load snippet data for entity: %@
Unable to calculate stats from entity table: %@
Unable to count merged pseudocontacts: %@
Unable to calculate stats from serializedContacts table: %@
Unable to count entity_fts: %@
Unable to count details in entity_fts: %@
Unable to count snippets: %@
Unable to count snippets with titles: %@
Unable to count snippets with content: %@
Unable to count tombstones: %@
Unable to count orphaned entities: %@
Unable to dump stats: %@
GroupID lookup found unexpected entity type for contact detail (%@)
registering cache precomputation work with CTS
SGSqlEntityStore cache precomputation due to CTS
serializing contacts due to CTS
Finished updating serialized contacts in %0.3f seconds
pre-calculating CN to SG contact matches due to CTS
all async jobs for cache precomputation are done
dbStats returned nil during reportDbStats
reported db stats to AggD
Failed to report dbStats to AggD: %@
SGDOMParser: Error parsing tcr tags from js
SGGDOMParser: Unable to load WKWebConfiguration
SGDOMParser: datastore is nil
SGDOMParser: Unable to load WebView
SGDOMParser: Loaded HTML Document
SGDOMParser: Nil path for HTMLPreprocessor from asset
SGDOMParser: jsContent nil: %@
Error evaluating JS: %@
_SGDCloudKitSyncPersistedState got invalid class name in property: %@
SGCK Persisted state changed (keyPath: %@, change: %@, self: %@)
SGCK Disabling due to incompatible version
SGCK Operation queue suspended
SGCK Will suspend operation queue for delay: %f
SGCK Resuming operation queue
SGCK Suspending sync due to unsynced keychain: %@
SGCK Resuming sync after suspension due to unsynced keychain
SGCK Delaying for %@ seconds (error: %@)
SGCK CloudKit framework recommends retry without delay for error: %@
SGCK addDeleteZoneOperation - Skipping because of out of date software
SGCK addDeleteZoneOperation - Returning operation already in flight
SGCK addDeleteZoneOperation - Adding new operation to operation queue
SGCK addDeleteZoneOperation - Operation completed with error: %@
SGCK addDeleteZoneOperation - Operation completed successfully
SGCK addDeleteZoneAttemptOperationWithRetries:%lu
SGCK Ran out of retries for delete zone operation with network failure: %@
SGCK Unrecoverable error for delete zone operation: %@
SGCK addCreateZoneOperation - Skipping because of out of date software
SGCK addCreateZoneOperation - Returning operation already in flight
SGCK addCreateZoneOperation - Adding new operation to operation queue
SGCK addCreateZoneOperation - Operation completed with error: %@
SGCK addCreateZoneOperation - Operation completed successfully
SGCK addCreateZoneAttemptOperationWithRetries:%lu
SGCK addCreateZoneAttemptOperationWithRetries:%lu - SUCCESS (zone created or already exists)
SGCK got PCS user identity unknown error while creating zone. Running processStateChanges just to be sure we didn't miss anything.
SGCK aborting create zone because out of retries for retry-able error: %@
SGCK Unrecoverable error for create zone operation: %@
SGCK addManateeSanityCheckOperation - Skipping because of out of date software
SGCK Creating Manatee health check operation...
SGCK Manatee health check returned without errors
SGCK Operation error during Manatee sanity check: %@
SGCK Missing Manatee identity detected during sanity check. Deleting-and-then-re-creating zone... (record zone error: %@)
SGCK addProcureSaltOperation - Skipping because of out of date software
SGCK addProcureSaltOperation - Returning operation already in flight
SGCK addProcureSaltOperation - Adding new operation to operation queue
SGCK addProcureSaltOperation - Operation completed with error: %@
SGCK addProcureSaltOperation - Operation completed successfully
SGCK addProcureSaltAttemptOperationWithRetries:%lu
SGCK Will recreate zone and try to procure salt again (error: %@)
SGCK Using existing salt record found on server
SGCK Zone missing while procuring salt: %@
SGCK Will attempt to create zone and then try procuring salt again
SGCK Unrecoverable error while procuring salt: %@
SGCK Successfully procured Manatee salt with atomic reference name %@
SGCK procuredSaltRecord missing critical fields (se=%@, a=%@)! This should not be possible and no recovery path is implemented. CloudKit writes will fail.
SGCK addFetchNewEntitiesOperation - Skipping because of out of date software
SGCK addFetchNewEntitiesOperation - Deferring because not ready for new entities.
SGCK addFetchNewEntitiesOperation - Returning operation already in flight, changing value of _requestedFetchNewEntitiesWhileRequestAlreadyInFlight from %@ to YES
SGCK addFetchNewEntitiesOperation - Adding new operation to operation queue
SGCK addFetchNewEntitiesOperation - Operation completed
SGCK addFetchNewEntitiesAttemptOperationWithRetries:%lu
SGCK ignoring fetched new entities because we are not in a sync enabled state
SGCK ignoring record zone completion block because we are not in a sync enabled state
SGCK Storage was not ready. Will sync again when it's purportedly available.
SGCK Giving up on fetching new changes because out of retries for error: %@
SGCK Change token expired (error: %@)
SGCK Will try fetching again without change token
SGCK Giving up on fetching changes due to unrecoverable error %@
SGCK Fetching more entities from server for these reasons: [%@] Server indicated more entities are coming, [%@] Client was asked again to fetch more entities while this request was already in-flight
SGCK Finished requesting more entities from server.
SGCK addWriteOperationForRecordGetter - Skipping because of out of date software
SGCK Failing to write entity due to unrecoverable error: %@
SGCK Adding and waiting for zone creation before writing entity.
SGCK Adding and waiting for salt procurement before writing entity.
SGCK Will write entity records: %@, delete entity records: %@, retries remaining: %lu
SGCK Will recreate zone and salt and try to write record again (error: %@)
SGCK Zone missing while trying to write or delete record. Setting _noZone flag.
SGCK Retrying after zone missing error
SGCK Not retrying because there is nothing to write.
SGCK Salt atomic reference check failed while trying to write record. Calling failSalt.
SGCK Retrying after salt missing reference error.
SGCK Will wait for in-progress procure salt operation before writing or deleting an entity
SGCK Will wait for in-progress create zone operation before writing or deleting an entity
SGCK Instantiating +[SGCK sharedInstance]
SGCK Running configuration block via +[SGCK sharedInstance] (the configuration block was specified prior to sharedInstance being called for the first time)
SGCK Configuration block has completed from within +[SGCK sharedInstance]'s first invocation. Setting the block to nil.
SGCK No configuration block has been specified before the first invocation of +[SGCK sharedInstance]. If a configuration block is set later on, it will be run immediately.
SGCK Setting configuration block...
SGCK The shared instance already exists, so the configuration block will run immediately.
SGCK Done running the completion block immediately from +[SGCK setSharedInstanceConfigurationBlock:]
SGCK The shared instance doesn't exist yet, so the configuration block won't run until it's instantiated.
SGCK Will add CK operation to queue: %@
SGCK added %lu operations to queue (pending operation count: %lu)
SGCK Existing persisted state was saved but could not be deserialized.
SGCK No persisted state exists for this user.
SGCK Creating new persisted state.
SGCK Discarding non-manatee salt
SGCK Already processing state changes -- will re-process again once complete.
SGCK Already processing state changes and re-processing once complete already scheduled as well.
SGCK Re-processing state changes because a request came in while this one was in progress...
SGCK processStateChanges -- failing salt because !supportsDeviceToDeviceEncryption
SGCK System State Change: Sync %@ --> %@
SGCK About to invoke _deleteAllSyncedItemsCallback from background queue...
SGCK Finished invoking _deleteAllSyncedItemsCallback on background queue. Now hopping back onto _queue...
SGCK Entering sgckQueueBlock.
SGCK deleteAllSyncedItemsSucceeded == YES
SGCK deleteAllSyncedItemsSucceeded == NO. Will defer a processStateChanges.
SGCK About to hop on to background queue to invoke _deleteAllSyncedItemsCallback
SGCK Skipping background queue block because _readyForNewEntities is false.
SGCK Creating subscription in response to state change
SGCK Will fetch new entities in response to state change
SGCK Set new persisted state.
SGCK accountChanged:%@
SGCK accountChanged: - existing future is complete. Setting to nil.
SGCK accountChanged: - existing future is in-flight. Creating a new request...
SGCK accountInfo - returning existing SGFuture
SGCK accountInfo - completionHandler - %@, %@
SGCK accountInfo - completionHandler - received error and/or failed to get account info: %@, %@
SGCK accountInfo - completionHandler - completing future
SGCK accountInfo - completionHandler - ignoring result because a newer request is in flight
SGCK accountInfo - Scheduling call to CloudKit (already one in flight: %@)
SGCK accountInfo - Calling CloudKit (-[CKContainer accountInfoWithCompletionHandler:])
SGCK should remove events from EK because there is no primary iCloud Calendar account
SGCK Going to request account info to determine whether events should be removed from EK...
SGCK Received account info, decision on whether to remove events from EK: %@ (error: %@)
SGCK Got APS environment string: %@ (error: %@, container: %@)
SGCK Error when getting preferred push env. Defaulting to prod instead. Error: %@
SGCK Going to create subscription (retries: %lu)
SGCK Setting hasSubscription persisted flag because new subscription was created successfully
SGCK Setting hasSubscription persisted flag because duplicate subscription already exists on server. This should only happen after a suggest_tool reset.
SGCK Error while attempting to create subscription: %@
SGCK Will re-attempt subscription creation
SGCK Got database: %@, container: %@
SGCK device does not have a subscription. Checking eligibility before creating one...
SGCK Device is eligible. Creating subscription via setDatabase: path...
SGCK actually creating subscription via setDatabase path...
SGCK setDatabase: not going to create subscription because something else created it...
SGCK backfill via setDatabase: path...
SGCK device account (or lack thereof) is not eligible -- not creating subscription
SGCK APS (APNS) Environment: %@
SGCK Error getting APS environment string -- APNS will not work!: %@
CloudKit database %@ has nil container, therefore cannot get APS environment strong and APNS will not work.
SGCK Handling primary iCloud Calendar account change (%@ --> %@)
SGCK addEntity:%@ %@
SGCK addEntity: - ignoring because groupId is nil
SGCK Not adding entity to CloudKit because current state prohibits syncing
Begin: Transmitting Calendar Event
End: Transmitting Calendar Event
SGCK deleteGroupId:%@
SGCK deleteGroupId: passed nil groupId...returning...
SGCK Not deleting entity from CloudKit because current state prohibits syncing
Begin: Transmitting Confirm/Reject Of Calendar Event
End: Transmitting Confirm/Reject Of Calendar Event
SGCK setReadyForNewEntities:%@
SGCK ignoring because readyForNewEntities == _readyForNewEntities
SGCK processing deferred state changes...
SGCK no deferred state changes
SGCK processing deferred sync...
SGCK no deferred sync
SGCK deleteStorageEvent failed because no group id
SGCK privacySalt ensuring not already on _queue...
SGCK privacySalt immediately returning empty NSData because [SGPreferenceStorage useManateeSaltForHistory] is false
SGCK privacySalt about to dispatch_sync to _queue
SGCK privacySalt is now on _queue
SGCK privacySalt reusing existing future
SGCK privacySalt is resolving to empty data because CKErrorIncompatibleVersion was previously encountered, indicating that the server no longer supports syncing with this software version
SGCK privacySalt about to wait on accountInfoFuture
SGCK privacySalt finished waiting on accountInfoFuture
SGCK privacySalt error retrieving account info: %@
SGCK privacySalt resolving to empty data because iCloud account is restricted (parental controls, etc)
SGCK privacySalt resolving to empty data because there is no iCloud account
SGCK privacySalt resolving to empty data because device-to-device encryption is not supported
SGCK privacySalt succeeded (using existing known salt)
SGCK privacySalt resolving to empty data because no salt has been generated yet
SGCK privacySalt future did not complete synchronously; will store future in _privacySaltFuture for reuse
SGCK privacySalt future asynchronously completed, will set _privacySaltFuture to nil
SGCK privacySalt outcome: %@ result, %@ error
SGCK connection:%@ didReceiveToken:%@ forTopic:%@ identifier:%@
SGCK connection:%@ didReceivePublicToken:%@
SGCK connection:%@ didReceiveIncomingMessage:%@
SGCK Got an APNS notification, but not syncing because sync is currently disabled.
SGCK Will fetch new entities for incoming message
SGCK connection:%@ didSendOutgoingMessage:%@
SGCK connection:%@ didFailToSendOutgoingMessage:%@ error:%@
SGCK connection:%@ didChangeConnectedStatus:%@
SGCK connectionDidReconnect:%@
SGCK confirmEventFromThisDevice
SGCK confirmEventFromOtherDevice [IGNORED]
SGCK rejectEventFromThisDevice
SGCK rejectEventFromOtherDevice [IGNORED]
Could not open chat length estimator at %@: %s (errno %i)
Could not mmap chat length estimator file at %@: %s (errno %i)
Chat length estimator reached max size. Clearing.
Error accessing boolValue. numberValue is nil
Error accessing floatValue. numberValue is nil
Error accessing doubleValue. numberValue is nil
Error accessing intValue. numberValue is nil
Error accessing integerValue. numberValue is nil
SGCK Skipping unsupported CloudKit record (record created by version: %@, version required to process record: %@, version running on this device: %@)
SGCK Reading pre-Manatee CloudKit record.
SGCK Error: Record version higher than 3 did not contain parent entity type.
SGCK Error: Record with type interaction is missing interaction info.
SGCK Error: Record with type interaction is missing interaction bundle id.
SGCK Error: Record contained unsupported entity type %lld
SGCK error decoding schema.org plist: %@
SGCK Error decoding schema.org plist: %@
SGCK Error decoding metadata plist: %@
SGCK Error serializing schema.org to plist: %@
SGCK error converting schema.org to plist.
SGCK Error serializing event metadata to plist: %@
SGCK Error converting event metadata to plist.
SGCK Reservation item reference value was nil for interaction entity
SGContactSharingModel - Invalid model config for path: %@
SGContactSharingModel - Could not find transformer instance for language: %@
SGContactSharing Model - Could not initialize featurizer and sessionDescriptor from config.
contact.significance property is true. skipping all other check.
Contact is significant: Found in bloom filter (email)
Contact is significant: Found in bloom filter (phone)
Sender isn't in bloom filter, checking recents
Contact is significant: Found in recents
Contact is significant - VIP email address
Contact is not significant
Contact is not significant, but selecting anyway due to preference setting
Contact is significant: Update to curated contact
Realtime contact is not significant, but selecting anyway due to preference setting
Email Address is significant: Found in bloom filter
Email Address is significant: Found in recents
Email Address is not significant
Handle is significant: Found in bloom filter
Handle is significant: Found in recents
Handle is not significant
Looking up in custom tester function instead of actually hitting recents
Unable to search recents; error: %@
Email was not found in recents
Found email in recents
SGTokenDistanceMappingTransformer: index=%lu, count=%lu
SGDSuggestManager: Mail: Asked for suggestions for a searchable item without headers dictionary or source, returning 0 suggestions
SGDSuggestManager: Mail: Not providing suggestions for searchable item that is spam.
SGDSuggestManager: Mail: Skipping suggestions for searchable item that is in trash.
SGDSuggestManager: Messages: suggestionsFromMessage: %@ : %@ options: %tu completionDelivery: %tu
suggestionsFromMessage ignoring item since the bundle is disallowed by user's settings
suggestionsFromMessage ignoring item since the domainIdentifier (conversationIdentifier) is nil
suggestionsFromMessage ignoring item since the textContent is nil
suggestionsFromMessage consolidating repeated item with previous request
SGDSuggestManager+RealtimeDonations: error donating message to ProactiveHarvesting: %@
SGDSuggestManager: Messages: _suggestionsFromMessage: Got message with no authors. Ignoring.
SGDSuggestManager: Messages: _suggestionsFromMessage: Got message with no domainIdentifier (conversationIdentifier). Ignoring.
SGDSuggestManager: Messages: _suggestionsFromMessage: Got message with no content protection type defined. Will not dissect..
SGDSuggestManager: realtimeSuggestionsForMailOrMessageWithHash: %@ : %@
Existing valid dissection found in store.
Existing dissection found in store, but HTML does not match.
Entity not harvested, but I was told not to dissect.
SGDSuggestManager: starting dissection.
Plugins finished processing message: %@
Timed out waiting for async realtime harvest work
SGDSuggestManager - Getting realtime events for dissected entity [SGEntity %{public}@]
  -> Event [SGEvent %{public}@] in state %i
    -> %@
Found %i realtime events
Getting realtime contacts for dissected entity
Found %i realtime contacts
Entity %@ -> SGReminder %@
SGDSuggestManager: validating cached results
filtering out suggestion that has already been acted on according to history
filtering out suggestion for business chat text
SGSuggestManager validateResultsvalidateResults: DKIM verification resulted in failure: %@
SGSuggestManager validateResultsvalidateResults: Successfully verified DKIM signature.
SGDSuggestManager: realtimeSuggestionsForMailOrMessageWithHash: %@: results: %@
SGDSuggestManager: Filtering out previously engaged reminder
SGDSuggestManager: Filtering out duplicate reminder
SGDSuggestManager: Filtering past Reminder
SGMessageEventDissector: Skipping Message Event dissector: allowMessageEventDissector is OFF
SGMessageEventDissector: Skipping Message: Message is not classified as %@ type by the Event-Classifier.
SGMessageEventDissector: Skipping Message: Exceeded Rate Limit
SGMessageEventDissector: Message is potential event message, dissecting to extract events
SGMessageEventDissector: Unable to fetch Event Extraction Assets from TRIAL, bailing
SGMessageEventDissector: Unable to fetch events from MLRuntime, bailing
SGMessageEventDissector: Unable to find MA path for EventClassifier model
SGMessageEventDissector: EventClassifier Model Path: %{private}@
SGMessageEventDissector: Unable to find MA path for MLEventExtractionAssets
SGMessageEventDissector: MLEventExtractionAssets Path: %{private}@
SGMessageEventDissector: Adding Enrichment: %@ to entity:%@
SGMessageEventDissector: Could not extract event deatils from event dictionary: %@ for entity: %@
SGMessageEventDissector: Fetching events from ML Runtime Plugin com.apple.eventMetaDataExtractor.eventMetaDataExtractorPlugin eventExtractionAssetsPath: %{private}@
SGMessageEventDissector: Nil MessageBody Found. Bailing.
SGMessageEventDissector: MLRuntime Plugin Task failed with error:  %@
SGMessageEventDissector: MLRuntime Plugin task timeout
SGMessageEventDissector: ML Runtime failed to return events information, bailing
SGMessageEventDissector: Using fallback schema for generic event for category: %@
SGMessageEventDissector: Missing entities for message event extraction: %@
SGMessageEventDissector: Unable to load Event Classifier Model. Model Path does not exist
SGMessageEventDissector: Unable to load Event Classifier Model: %@
SGMessageEventDissector: Unable to convert ML Model to NL Model: %@
SGMessageEventDissector: No name for missing entity
SGMessageEventDissector: airlineCode or flightNumber or departureDateTime not found, bailing
SGMessageEventDissector: No flight information found, bailing
SGMessageEventDissector: No flight information for departure date:%{private}@ & departureLocation:%{private}@ found, bailing
SGMessageEventDissector: Message classification by Event-Classifier: %@ (Score: %.02f)
SGCoalescingDropbox %s unable to extend transaction TTL.
Failed to construct DDScanner: %@
SGDataDetectors: data detection: %@
Failed to decode socialProfileData: %@
Attempt to write entity to DB returned entityId 0
Skipping event pending geocode.
Attempt to write enrichment to DB returned enrichmentId 0
Skipping non-event enrichment
Number of event entities to journal: %lu
Writing Entity: %@
invalid serialization found in _prunePseudoContactGeneratingEmails: %@
nil key found in emailMetadata
Removing pendingVerification flag from %@
Error removing pendingVerification flag from %@: %@
Writing %lu event entities to journal. [SGEvent (%{public}@)]
Writing reminder to journal
Trying to write multiple reminders to journal, this is not supported
Writing event to journal
Writing contact to journal
While writing blobs, unexpected missing entity ids
Expected the new mergedContact record Id %@ to be %@:
Writing identity blobs
IdentityStore: Writing deletes for %@
IdentityStore: Newly created contacts %@
IdentityStore: Forced update of contacts %@
HMM confused, too many tokens in signature
HMM confused, too much quoting in signature
Skipping signature dissector: detectContacts is OFF
Signature found by DataDetectors.
Signature found by alternative algorithms.
Sig range %lu-%lu (%@)
No signature found
Tagging as inhuman after adjusting range: Signature pattern
Ignoring signature after adjusting range: Inhuman pattern.
Can't meaningfully call shouldIgnoreSignature with a signature that starts after the content.
Can't meaningfully call shouldIgnoreSignature on an entity with no detected signature.
Tagging as inhuman: Signature pattern
Ignoring signature: Inhuman pattern.
Ignoring signature: Valediction after signature.
Ignoring signature: Recipient's name (composite).
Ignoring signature: Recipient's name (first last).
Ignoring signature: Recipient's name (last first).
Ignoring signature: Recipient's phone.
Ignoring signature: Recipient's postal.
Ignoring signature: Recipient's email.
Ignoring signature: Sender's name unavailable.
Ignoring signature: No sender's name or email.
Ignoring signature: Anti pattern.
Ignoring signature: Sender's name after sig.
Not ignoring signature.
Could not fetch filesystem path for HMM
Could not load HMM data: %@
Failed to insert serialized contact: %@
Failed to insert serialized contact placeholder: %@
Failed to delete serialized contact: %@
Unexpected error while deserializing contact: %lld
Unexpected error while deserializing contact%lldld
Failed to load all serialized contacts: %@
Writing placeholder for contact id: %lli
Could not defer activity
serialized contact precomputation deferring
done serializing new contacts
done trimming serialized contacts
SGUnarchiver: unable to open non-file URL %@.
SGUnarchiver: unable to open file %@ - %{public}s.
SGUnarchiver: unable to close file descriptor %{public}d for %@ (leaking) - %{public}s.
SGUnarchiver: unable to close archive_read - %{public}s.
SGUnarchiver: unable to open archive_read - %{public}s.
SGUnarchiver: archive_read unable to set supported formats - %{public}s.
SGUnarchiver: archive_read unable to set supported compression formats - %{public}s.
SGUnarchiver: unable to free archive_read (leaking) - %{public}s.
SGUnarchiver: failed to create directory at %@ - %@.
SGUnarchiver: unable to resolve physical path for destination path %@ - %s.
SGUnarchiver: archive_read_next_header failed - %{public}s.
SGUnarchiver: archive_entry with no path encountered.
SGUnarchiver: archive_entry with absolute path encountered...ignoring leading %zu of %zu bytes.
SGUnarchiver: archive_entry with no path after sanitization encountered.
SGUnarchiver: archive_write_header failed - %{public}s.
SGUnarchiver: archive_write_finish_entry failed - %{public}s.
SGUnarchiver: unable to close archive_write_disk - %{public}s.
SGUnarchiver: unable to free archive_write_disk (leaking) - %{public}s.
SGUnarchiver: archive_write_disk unable to set lookup functions - %{public}s.
SGUnarchiver: archive_write_disk unable to set options - %{public}s.
SGUnarchiver: archive_read_data_block failed - %{public}s.
SGUnarchiver: archive_write_data_block failed - %{public}s.
SGReminderMessage: No VB in actionVerbIndexRange
SGReminderMessage: No NN, NNP in objectCoreIndexRange
SGReminderMessage: Title has too many characters
SGReminderMessage: No whitelisted action verb or particle actionVerbTokenIndexes
SGReminderTrialClientWrapper: Updating factors
SGReminderTrialClientWrapper: TRILevel is nil for confirmationOptional
SGReminderTrialClientWrapper: TRILevel is nil for triggerOptional
SGReminderTrialClientWrapper: TRILevel is nil for actionVerbOptional
SGReminderTrialClientWrapper: TRILevel is nil for messagesBannerLimit
SGReminderTrialClientWrapper: confirmationOptional: %@
SGReminderTrialClientWrapper: triggerOptional: %@
SGReminderTrialClientWrapper: actionVerbOptional: %@
SGReminderTrialClientWrapper: messagesBannerLimit: %@
SGReminderTrialClientWrapper: reminderOverrides list loaded with Trial: %@
SGReminderTrialClientWrapper: reminderEnrichments list loaded with Trial: %@
SGReminderTrialClientWrapper: reminderInputMapping list loaded with Trial: %@
SGReminderTrialClientWrapper: reminderOutputMapping list loaded with Trial: %@
empty string found in nickname data for: %@
dropping query token that cannot be encoded as utf-8 (utf-16 LE repr: %{private}@)
Could not load duplicate key with record id %@
Could not load event with record id %@
Unable to load entity from database
failed to load snippet data for email entity: %lld
Unable to load entity by recordId: %@
Failed to retrieve PMLTraining singleton
DataDetector is not a definitive match: Anti-pattern.
DataDetector is not a definitive match: Not in definitive phrase.
Ignoring DataDetector match: Too many phones in signature.
Ignoring DataDetector match: All-digit phone without label in signature.
Ignoring DataDetector match: Log line in signature.
Ignoring DataDetector match: Too many postal addresses in signature.
Ignoring DataDetector match: Inhuman email address in signature.
Ignoring DataDetector match: Email address with colon at end of line in signature.
Ignoring DataDetector match: Email address with date or time in line in signature.
Ignoring DataDetector match: Email address in signature is close match to List-Id header.
unifiedContactWithIdentifier failed to generate date for birthday.
unifiedContactWithIdentifier for %@ failed with error %@
No contact identifier for %@
Birthday: Text message has no conversation identifier
Birthday: Entity with type SGEntityTextMessage has invalid message date
Birthday: processing is disabled for group messages
RKAttributedTokenBirthdayType not found for message: %@
SGDetectedAttributeDissector: getResponsesForBirthdayExtractionFromMessage: text message has nil textContent: %@
No responses found for message: %@
Self-id: Text message has no conversation identifier
Self-id: processing is disabled for group messages
Self-id: processing is disabled for business chat
Self-id: No domain identifier found for message: %@
Self-id: ignoring message far in thread (position: %i >= %i)
Self-id: No likely language prediction for conversation
Self-id: text length too long
SelfIdFeaturizations
Self-id: doesn't look for self id if message has a display name
Self-id: updating pseudo-contact entity with name length: %tu
Self-id: Could not find author-pseudocontact to augment with text message self-identification.
Unexpected Contact detail found in forwarded or inhuman text message: %@ %@
Skipping DetectedAttribute dissection: No author.
Skipping DetectedAttribute dissection: Inhuman sender.
Skipping DetectedAttribute dissection: warm up message.
Start
Training quick responses.
Not training quick responses since conversation history is nil.
Completed
TrainQuickResponses
Skipping DetectedAttribute dissector: detectContacts is OFF
Detections: %@
Skipping DetectedAttribute dissection: too many phone numbers (%i, limit %i)
ContactSharingNegativeExample
Ignoring DataDetector match: Blocked phone number.
Ignoring DataDetector match: Quoted region.
Processing low quality phone number match for ML supervision and metrics; detections to be discarded.
Ignoring DataDetector match: Low quality phone number match.
Detected attribute (sig/*): '%@'
Detected attribute (body): '%@'
Detected attribute (ml): '%@'
ContactSharingPositiveExample
SGEspressoModel - Invalid model config: %@
SGEspressoModel - Could not initialize PMLMultiLabelEspressoClassifier: %@
SGEspressoModel - Invalid sessionDescriptor in config: %@
SGExtractionModelCoreMLWrapper: Inconsistent MLFeatureProvider passed
SGTrialClientWrapper: Unable to fetch experimentId, deploymentId, treatmentId
SGTrialClientWrapper: Unable to fetch rolloutIdentifiers
SGReminderTrialClientWrapper: Unzipping model override at path: %@
SGReminderTrialClientWrapper: unable to fetch origin path.
SGReminderTrialClientWrapper: Cannot move model to %@. Error %@
SGReminderTrialClientWrapper: Error while unzipping the model override.
SGReminderTrialClientWrapper: Model override is already in uncompressed at path: %@
SGReminderTrialClientWrapper: No file found at source path: %@
Unable to the source data from file URL: %@. (Error: %@)
SGReminderTrialClientWrapper: Couldn't delete model override file: %@
CNContact cache miss
Found %lu prematched contacts in CNContact cache
Encountered a NULL cnContactIdentifier in cnContactsToSgContacts
cnContactMatchesForRecordId received recordId from wrong table: %@
Popped CN2SG job: %@
CN2SG Over 100K unique rows in cnContactsToSgContactsCacheJobs -- will not enqueue a batch
Clearing entire CN2SG job queue
start updating CNContact matches
%lu contact matches found for %@
Failed to confirm Contact: %@
CN Contact precomputation deferring
done updating CNContact matches
Could not clear CNContactStore change history due to: %@
Failed to enumerate CNContactStore: %@
Do/did we need a full CN to SG sync? %@
Will set full CN to SG sync completed.
Could not register for CNContactStore change history due to: %@
CNChangeHistoryResult truncated: %d , %@
Performing full sync with CNContactStore
Performing delta sync with CNContactStore
Could not enumerate CNContactStore change history due to: %@
refreshSuggestionsContact begin coalescing drop box handler with %tu SGStorageContacts: %@
refreshSuggestionsContact timed out waiting for spotlight
refreshSuggestionsContact will enqueue CNContactIdentifier batch of size %tu (from %tu SGStorageContact's): %@
refreshSuggestionsContact end coalescing drop box handler
refreshSuggestionsContact added %@ storage contact %@
refreshSuggestionsContact running immediately due to large number (%tu) of enqueued items
refreshSuggestionsContact coalescing box size: %tu
SG2CN query for contact %@:
SG2CN found identifier: %@
SG2CN error: %@
SG2CN all found identifiers: %@
SGHarvestQueueMetrics
Suggestions entity store cannot be opened before first unlock
entity store is known to have a future schema. Giving up on store initialization.
Attempting to instantiate the shared default store
Attempting to instantiate the shared harvest store
failed to initialize database at path %@: %@
device locked during db initialization
Integrity check detected corrupt database, attempting to reinitialize.
unable to initialize entity DB
unable to initialize snippets DB
corruption marker is present, recreating db
entity store is migrating
entity store already migrated. Not migrating again.
Detected corrupt database, attempting to reinitialize.
unable to recreate entity DB
unable to recreate snippets DB
entity store did not try to migrate but a migration is needed
migrator found mismatched versions or is in an unrecoverable state, performing corruption recovery
Future db schema detected. Entity store cannot be initialized.
entity store could not migrate databases, bailing out.
entity store initialization flags: isEphemeral:%d executeJournals:%d noMigrate:%d
failed to initialize one or more databases/journals. We cannot continue.
store %@ going deallocating
entity store failed to recreate database during corruption recovery: %@
failed to remove corruption marker
Clearing caches in SGEntityStore
#NoDetailCache Removing other detail...
#NoDetailCache Adding other detail...
#NoDetailCache 10,001 items in _otherDetailsWithNoContact. Removing least recently accessed item...
#NoDetailCache Other detail found
#NoDetailCache Other detail not found
#NoDetailCache Clearing %lu other details
Getting e-mails pending verification
key in emailMetadata was nil
Could not create SGEmailKey for key %@
Error finding e-mails pending verification: %@
Found %lu e-mails pending verification
_enumerateContactsForMasterEntityIds aborting enumeration
Loaded %tu contacts
Got more than %lu results for query. Giving up.
Matched %lu contacts
rankSGContacts: target CNContact is missing required keys
Skipping match because it contains no suggestions: %@
After filtering, %lu contacts
Tried to get contacts with empty messaging prefix.
%lu contacts loaded
Got %llu FTS tokens, truncating to first %i
got out of bounds token range: %@ in UTF8 of size %tu
tokenizer size mismatch
something went wrong while getting tokenizer: %@
Could not parse createQuery %@
Matched %tu contacts
Error retrieving curated contacts: %@
suggestContactByRecordId received recordId from wrong table: %@
Failed to retrieve fieldValues from confirmedFieldValues
Loaded %lu suggested events from %f to %f (max %lu)
Returning %lu suggested events after filtering
Couldn't load event with given duplicate key
Couldn't confirm field values for duplicateKey not in entity table
Confirming details as workaround for Contacts search for realtime contact %@
Could not load event to confirm (recordId=%@)
Could not load event to reject (%@)
Invalid base64encoded string for tag %@
Nil serializedEntityKey found in entityTags
Corrupt database file moved to "%@".
Unable to move corrupt database file to "%@": %@
SGExtractionDissector: XPC error %@
The same origin and destination: %@ (template: %@, short %@)
SGExtractionDissector - groupId is empty. Unable to create Duplicate keys
Failed to process event suggestion 
 reservation start date components invalid.
Couldn't parse date: %@ (template: %@, short %@)
Invalid airport latitude or longitude. Asset version: %lu
Failed to process event suggestion 
 reservation end date in the past.
SGExtractionEntity entityForOutputItem: Event in the past, processing stopped.
Could not create tag from NSUserActivity %@
found forward or reply header in email
Skipping reverse template dissector: contentLen = %llu > %i
[SGPipelineEnrichment (%{public}@)] -> [SGEvent (%{public}@)]
SGPipelineEntity: Starting dissection of mail [SGSimpleMailMessage (%{public}@)], [SGPipelineEntity (%{public}@)]
SGExtractionDissector dissectMailMessage: Skipping reverse template dissector: detectStructuredEvents is OFF.
SGExtractionDissector dissectMailMessage: Not dissecting because ML extraction is on. [SGPipelineEntity (%{public}@)]
SGExtractionDissector dissectMailMessage: Ignoring email, forward or reply detected. [SGPipelineEntity (%{public}@)]
SGExtractionDissector dissectMailMessage: HTML content exceeding max length. [SGPipelineEntity (%{public}@)]
Found cached event classification for email %{public}@
SGExtractionDissector dissectMailMessage: Not extracting event(s) from e-mail because shouldDownloadFull returned false. [SGPipelineEntity (%{public}@)]
SGExtractionDissector dissectMailMessage: Email is not fully downloaded. Requesting full download. [SGPipelineEntity (%{public}@)]
Skipping reverse template dissector: detectStructuredEvents is OFF
SGExtractionDissector: Not dissecting because ML extraction is on
SGExtractionDissector: Starting dissection of interaction [INIteraction (%{public}@)], [SGPipelineEntity (%{public}@)]
SGExtractionDissector dissectInteraction: Skipping reverse template dissector: detectStructuredEvents is OFF
SGExtractionDissector dissectInteraction: Not dissecting because ML extraction is on
SGExtractionDissector dissectInteraction: Could not convert INInteraction (%@) to schema
JS Extraction Status: Template exception %{public}@, in template: %{public}@ (%{public}@). [SGPipelineEntity (%{public}@)]
JS OUTPUT for [SGPipelineEntity (%{public}@)]: %lu output(s). Asset version: %{public}@. Device locale: %{public}@. Document type: %{public}@. Contains schemaOrg?: %{public}@. Bundle ID: %{public}@
JS template match: %@ shortName:%@. [SGPipelineEntity (%{public}@)]
[SGEntity (%{public}@)] - Complete JS output: %@
[SGPipelineEntity (%{public}@)] -> [SGPipelineEnrichment (%{public}@)]
JS Extraction Status: Event. [SGPipelineEntity (%{public}@)]
JS outputItem for enrichment [SGPipelineEnrichment (%{public}@)]: LocationType: %@. Geocoding Mode: %@. isAllDay?: %@. Output Usecase: %@. Output Category: %@.
JS Extraction Status: Output Exception %@. [SGPipelineEntity (%{public}@)]
SGExtractionDissector: Starting dissection of webpage (%{sensitive}@). [SGPipelineEntity (%{public}@)]
SGExtractionDissector dissectURL: Webpage processing stopped: HTML content exceeding max length. [SGPipelineEntity (%{public}@)]
SGExtractionDissector dissectURL: SGOutput is null. [SGPipelineEntity (%{public}@)]
SGExtractionDissector: no bundle identifier identified
SGExtractionDissector: no record found for bundle id %@:%@
Error loading model config during incremental submodel update
SGMISubmodelsManager: Updating Submodels
SGMISubmodelsManager is not allowed to run during the next %.0f seconds.
SGMISubmodelsManager received signal to not continue, stopping at day %lu of %lu
SGMISubmodelsManager processed %lu emails in this session (corresponding to %lu / %lu days) and should stop. Next training will be possible in %.0f seconds
SGMISubmodelsManager performed incremental update of %lu mails. Model had a precision of %.2f%% and a recall of %.2f%% on them.
SGMISubmodelsManager: Starting purge of deleted emails references
SGMLISubModelUpdater: Number of email addresses to validate: %lu
SGMISubmodelsManager: Failed to map email address feature %@ to MDIAttribute
SGMISubmodelsManager: Emails to delete for %@: %lu
SGMISubmodelsManager lost Spotlight connection (device got locked)
Purging deleted emails references took %f seconds
SGMISubmodelsManager: Clearing all tokens from submodel token store that haven't been since %@ or earlier
SGMISubmodelsManager: No prior model version data. Not processing as version change.
SGMISubmodelsManager: Current model version data is not set. Is OTA / Trial configuration for both inference and ground truth versions correct? Not processing as version change.
SGMISubmodelsManager: Ground truth model version updated from %@ to %@. Purging all stateful data.
SGMISubmodelsManager: Inference version updated from %@ to %@ without change in ground truth model version. Retaining submodels and setting all saliency scores to 0.
SGMISubmodelsManager: No version update to process.
SGMISubmodelsManager: Invalid min counts requirements in SGMISaliencyModelConfig.
SGMINicknameManager: Processing mails sent %tu days ago
SGMINicknameManager: A match got identified in a mail from ~%tu days ago: %{sensitive}@ -> %{sensitive}@.
SGMINicknameManager received signal to not continue after processing mails sent %tu days ago
No extraction for %d:%@ = %@
SGMIWarningsConfig: Invalid attachmentLinkDetectionRegex (%@).
SGMIWarningsConfig: Error, unable to get attachmentDetectionRegexes from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get attachmentLinkDetection from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get conservativeRecipientDetection from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get recipientConservativeDetectionRegexes from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get recipientDetectionRegexes from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get nicknameDetectionRegexes from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get followUpOnOutgoingMailsQuestionsDetectionRegexes from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get followUpOnOutgoingMailsAsksDetectionRegexes from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get followUpOnIncomingMailsDetectionRegexes from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get followUpWarningsParameters from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get bodyAnalysisSamplingFactor from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get defaultTimeIntervalToStartWarningExposition from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get defaultTimeIntervalForAWarning from SGMITrialClientWrapper.
Follow Up. [SGMIFeatureVector] emMessage %{sensitive}@ loaded for messageId %@.
Follow Up. [SGMIFeatureVector] searchableItem %@ loaded for messageId %@.
Error accessing the searchable item associated with messageId: %@
SGMIFeatureVector: PET logging skipped (hashed messageId)
Unexpectedly could not deserialize a serializedSocialProfile: %@
Scanning address string, expected to only find addresses, but found %@
SGContactNicknameDissector: SGContactNicknameDissector is invoked!
SGContactNicknameDissector: Input text is nil, returning.
SGContactNicknameDissector: Input text: %{private}@
SGContactNicknameDissector: Extracted nicknames: %{private}@
SGContactNicknameDissector: Extracted recipient contact id: %@
SGContactNicknameDissector: Extracted person id: %@
SGContactNicknameDissector: Updating count of : <%@, %{private}@>
SGContactNicknameDissector: Found in regex: %{private}@
SGContactNicknameDissector: Found error while executing regexes: %@
SGAppLaunchHistory failed to fetch app launch history with error = %@
entity store notified of device lock state change to %d (es=%d, cs=%d)
SGMISpotlightUtility got signal to exit
SGMISpotlightUtility Query by time range timed out
SGMISpotlightUtility: Query by item timed out.
SGMISpotlightUtility: Found item count was %lu
SGMISpotlightUtility: Finding email addresses to delete
SGMISpotlightUtility got an error from Spotlight while querying existence as %@: %@
SGMISpotlightUtility: Query existence as %@ timed out.
SGMISpotlightUtility: Addresses found in Spotlight: %lu
SGMISpotlightUtility got an error from Spotlight: %@
SGURLDissector ignoring entity due to missing bundle id, unique id, or date
SGURLDissector(URLs) found URL of length %tu, from handle of length %tu, in: (%@, %@)
SGURLDissector(Text) found URL of length %tu, from handle of length %tu, in: (%@, %@)
urlsFromAttributes called with no URL attribute
SGURLDissector(Attributes) found URL of length %tu, from handle of length %tu, in: (%@, %@)
urlsFromAttributes failed to find colon and parenthesis in text
urlsFromAttributes found invalid ranges of colon and parenthesis
Tried to parse a Japanese name with no tokens? This shouldn't happen.
Tried to parse a jp/zh name with no tokens? This shouldn't happen.
Could not create tag from NSUserActivity '%@': %@
SGMIFeatureVectorCollator: message ID %@ was mapped via spotlight mapping table.
SGMIFeatureVectorCollator: message ID %@ was mapped with Biome stream.
SGMIFeatureVectorCollator: No mapping found, creating SGSimpleMailMessage with hashed message ID: %@
SGMIFeatureVectorCollator: Use the CSSI's repliedTo attribute to set the UserReplied feature, biome information was%@ available and UserReplied was%@ already set.
SGJournal-addEntry: Add event
SGJournal-addEntry: Add event batch (count=%lu)
SGJournal-addEntry: Cancel event
SGJournal-addEntry: Cancel event batch (count=%lu)
SGJournal-addEntry: Confirm event from this device
SGJournal-addEntry: Confirm event from other device
SGJournal-addEntry: Reject event from this device
SGJournal-addEntry: Reject event from other device
SGJournal-addEntry: Event parent deletion
SGJournal-addEntry: Not set
SGJournal-addEntry event non-nil, but unknown operation %u
SGJournal-addEntry: Add contact
SGJournal-addEntry: Confirm contact
SGJournal-addEntry: Reject contact
SGJournal-addEntry contact non-nil, but unknown operation %u
SGJournal-addEntry: Add reminder
SGJournal-addEntry: Confirm Reminder from this device
SGJournal-addEntry: Reject Reminder from this device
SGJournal-reminderAlarmTriggered: Reminder alarm triggered from this device
SGJournal-addEntry: Confirm reminder from other device
SGJournal-addEntry: Reject reminder from other device
SGJournal-addEntry: Reminder parent deletion
SGJournal-addEntry reminder non-nil, but unknown operation %u
SGJournal-addEntry: Suggested event calendar deleted
SGJournal-addEntry: Remove all stored pseudo-contacts
Setting a timer to reset DDNL caches in %f seconds
SGPipeline verificationOperation: DKIM verification resulted in temporary failure: %@. [SGPipelineEntity (%{public}@)]
SGPipeline verificationOperation: DKIM verification resulted in permanent failure: %@. [SGPipelineEntity (%{public}@)]
SGPipeline verificationOperation: Successfully verified DKIM signature. [SGPipelineEntity (%{public}@)]
SGPOSTagger: Most tags are SYM, likely missing LinguisticData
Attachment info length mismatch: %lu types, %lu names, %lu paths
Error getting file size from path: %@
Purging %tu unique identifiers from %@.
Deleting %tu unique identifiers from %@.
Deleting %tu domain identifiers from %@.
Deleting all Interactions from %@.
Deleting %tu Interactions from %@.
Deleting %tu group indentifiers for Interactions from %@.
SGDSpotlightReceiver: Received %tu items from %@.
SGDSpotlightReceiver: invalidated highlight cache and notified of refresh
ignoring items since the bundle is disallowed by user's settings
Decoded %tu of %tu items received from %@.
Will delete %tu encrypted items
Deleted %tu encrypted items
SGDSpotlightReceiver: _addSearchableItem: error donating to ProactiveHarvesting: %@
SGDSpotlightReceiver: addUserAction: error donating to ProactiveHarvesting: %@
received user action from %@
Plugins finished NSUA processing via CTS: %@
SGDSpotlightReceiver: purging %tu unique identifiers (%tu after de-duplication) for %@
SGDSpotlightReceiver: purgeSearchableItemsWithIdentifiers: error sending purge to ProactiveHarvesting: %@
SGDSpotlightReceiver: deleting %tu unique identifiers (%tu after de-duplication) for %@
SGDSpotlightReceiver: deleteSearchableItemsWithIdentifiers: error sending deletion to ProactiveHarvesting: %@
SGDSpotlightReceiver: deleting %tu domain identifiers (%tu after removing overlaps) for %@
SGDSpotlightReceiver: deleteSearchableItemsWithDomainIdentifiers: error sending deletion to ProactiveHarvesting: %@
SGDSpotlightReceiver: deleting entire bundle identifier %@
SGDSpotlightReceiver: deleteAllSearchableItemsWithBundleID: error sending deletion to ProactiveHarvesting: %@
SGDSpotlightReceiver: received %lu interactions from %@
SGDSpotlightReceiver: addInteractions: error donating to ProactiveHarvesting: %@
ignoring interactions since the bundle is disallowed by user's settings
Plugins finished processing interaction: %@
phoneNumberWithStringValue unexpectedly failed for string: %@
unifiedContactsMatchingPredicate failed with predicate %@ and error %@
Extracted pseudo-contact email address matches "me" contact: %@
Extracted pseudo-contact phone number matches "me" contact: %@
Extracted pseudo-contact postal address matches "me" contact: %@
Extracted pseudo-contact social profile matches "me" contact: %@
Filtered contact: %@
Extracted pseudo-contact matches "me" contact, Suggestion suppressed
Found %lu curated contacts for pseudo-contact
Failed to locate resource; tradition: %@, fname: %@, path: %@
failed to load trie for naming tradition; tradKey: %@
SGTokenizerMappingTransformer reloading NLTagger in response to new asset installation
Found related EKEvent by db lookup of related keys.
Found %lu events to bump TTL on for OpaqueKey: %@
Unable to save event in event store: %@
Unable to save event in event store; description: %@, error: %@
EKEventStore+Suggestions: bumped TTL for NL Event ZKW
Could not find %@ in message
migrator passed nil filename for entity db
migrator passed nil filename for snippets db
failed to clear snippets db
failed to clear entities db
sqlite_schema had a table with a NULL name
shadow table has nil table name in PRAGMA table_list
migrator for %@ running query: %@
SGDataMigrator encountered error during migration of %@: versions %lu & %lu, query: %@, error: %@
current user language: %@: %@
old user language: %@: %@
languageToUpdateEntityFTSTo returning: %@
failed to generate create query for new FTS table %@
creating new FTS table: %@: %@
failed to create new FTS table %@
failed to determine max docid
highest entity for FTS copy: %@: %llu
fts copy batch: %llu -> %llu
Copying from old FTS table from %lu to %lu
failed to insert from old fts table limit %lu offset %lu
failed to drop %@ in preparation for renaming
failed to rename %@ to %@
starting update of FTS table for language change: %@: %@
resuming copy of FTS data to new table
preparing to copy FTS data
updateLanguageForFTSTablesToLanguage got nil language but has no in-progress copy to restart
done with FTS copy, going to drop old table: %@
failed to drop old entity_fts after updating to new language
bootstrapping snippets migration
catching up snippets migration to %ld
failed to migrate snippets db to %ld
attempt to skip or repeat a migration
migrating entities to version %ld
failed to migrate entity db to %ld
migrating snippets to version %ld
migrating entities from zero to version %lu
failed to migrate entity db from zero to %lu
migrating snippets from zero to version %lu
failed to migrate snippets db from zero to %lu
migrating SGSqliteDatabase
Migrating %@ & %@
Future database version detected. Giving up on migration.
Encountered %@ database; dropping all data.
Encountered empty database (user_version == 0)
Failed to clear legacy database.
Unrecoverable db version mismatch %ld & %ld
database migration bailing out at version %lu due to device being locked.
Finalizing migration with a merge blob sync
about to check for language change for FTS tables: %@
detected need for FTS rebuild: %@: %@
done migrating: %@
unable to attach snippets in order to migrate content data
unable to copy email snippets during content migration
unable to copy non-email snippets during content migration
unable to erase content data from entities during content migration
unable to erase title data from email entities during content migration
needed to add author column but failed
needed to add entityParentage table but failed
needed to add serializedContacts table but failed
needed to add cnContactsToSgContacts table but failed
Unable to add downloadState column during legacy migration: %@
Unable to add entityDownloadStateIdx index during legacy migration: %@
Unable to add contentHash column during legacy migration: %@
Unable to add entityContentHashIdx index during legacy migration: %@
Unable to add groupId column during legacy migration: %@
Unable to add groupIdIdx index during legacy migration: %@
Unable to add duplicateKeyHash column during legacy migration: %@
Unable to add ix_entityTags_dupKeyHash index during legacy migration: %@
migration_RecreateFTSTableWithITS
migration_CreateFTSTableWithITS
Unable to create deduplicated identityPhones table: %@
Unable to clear identityPhones table during deduplication: %@
Unable to rewrite identityPhones table during deduplication: %@
Unable to remove identityPhones table during deduplication: %@
Could not install hashHexToBlob() sqlite function
Unable to set blob value in migration query: %@: Error: %@
Unable to delete messaging terms with semicolons. Error: %@
Unable to clear masterEntityIds from migration_FixupMergeGroups: %@
Unable to copy entities into emailMetadata: %@
Unable to deparent source documents found in entityParentage: %@
Unable to delete source documents from entity table: %@
Unable to populate source document tags: %@
Unable to populate source document snippets in emailSnippets: %@
Unable to delete source document snippets from legacy table: %@
Error selecting source document ids from emailMetadata: %@
starting rebuildFTSWithDetailEntityIDDocIDs
Erroring trying to reinsert FTS row: %@
Error during rebuildFTSWithDetailEntityIDDocIDs: %@
rebuildFTSWithDetailEntityIDDocIDs: failed. Moving old table back.
rebuildFTSWithDetailEntityIDDocIDs: success. Deleting backup table.
failed to drop backup table: entity_fts_docidfix_backup: %@
discarding ill-formatted serialized interaction key
Error during migration_deleteInteractions: %@
unable to detach snippets after trying to migrate content data
SGMailIntelligenceDissector: Mail saliency inference is off
SGMailIntelligenceDissector: a nil message ID, skipping
Dissector.SocialConnectionScore
SGMailIntelligenceDissector: computed sender connection score of %f
Dissector.SaliencyScore
SGMailIntelligenceDissector: Searching for contact matching provided e-mail address.
SGMailIntelligenceDissector: Could not map e-mail address to contact.
SGMailIntelligenceDissector: No interactions with contact found.
SGMailIntelligenceDissector: Fuzzy contact match succeeded.
CandidateNameRange not in plainTextContent: %@ %tu %tu
SGDetectedAttributeML - Failed to load transformer instance for language: %@, %lu
SGDetectedAttributeML: failed to generate vector.
SGDetectedAttributeML - failed to get training descriptor.
Couldn't find uniqueIdentifier %@ in conversation -- aborting detectionFromEntity
Target message (uniqueIdentifier=%@) not the last in conversation -- aborting detectionFromEntity
Couldn't find uniqueIdentifier %@ in conversation -- aborting selfIdDetectionWithEntity
Target message (uniqueIdentifier=%@) not the last in conversation -- aborting selfIdDetectionWithEntity
Conversation message %d with id %@ and content length %lu
Entity message with id %@, content length %lu
Entity message with detected data item %@
Target message unrecoverable state with matching content = %d
ContactMLSharing: Text message has no conversation identifier
ContactMLSharing: Invalid contact detail range plainTextContent.length %tu supervision.ignoreAfter %tu match.range [%tu, %tu]
BirthdayMLExtraction: Text message has no conversation identifier
Error fetching user DOB: %@
SGMIMessageMissingEntityAnalyzer: Mail Intelligence's SPI back end timed out
SGMIMessageMissingEntityAnalyzer: Mail Intelligence's SPI back took over 5 seconds on a %tu-lengthed content: we have to xpc_transaction_exit_clean
SGMI-SPI (input)identifyComposeWarningsFromSubject:%{sensitive}@ content:%{sensitive}@ toRecipients:%{sensitive}@ ccRecipients:%{sensitive}@ bccRecipients:%{sensitive}@ originalToRecipients:%{sensitive}@ originalCcRecipients:%{sensitive}@ attachments:%{sensitive}@ language:%@
SGMI identified a file-sharing link in the body: %{sensitive}@ and therefore consider it as an attachment.
SGMI identified a subject warning but blocked it because of a poor user engagement on the pattern.
SGMI failed to create a warning from a match.
SGMI identified potential missing attachment in '%{sensitive}@',however, given a link seems to be present in the following characters: '%{sensitive}@', this warning got disqualified...
SGMI identified potential missing attachment in '%{sensitive}@',however, given '%{sensitive}@' is in the recipients, this warning got disqualified...
SGMI identified a body warning but blocked it because of a poor user engagement on the pattern.
SGMI-SPI (output compose warnings) %{sensitive}@
SGMI inconsistent recipient detection. Likely an issue in assets: %@
SGMIMessageMissingEntityAnalyzer identified "%{sensitive}@" as a nickname used in the past for %{sensitive}@.
SGMI identified a recipient warning for %{sensitive}@ but blocked it because one recipient address (%{sensitive}@) seems to be a group.
SGMI identified a recipient warning but blocked it because of a poor user engagement on the pattern.
SGMI created a second chance recipient warning for %{sensitive}@.
SGMI identified a recipient warning from a conservative regex which user engagement was poor, even with contact match.
SGMIMessageMissingEntityAnalyzer found a contact match for %{sensitive}@ in CoreRecents
SGMIMessageMissingEntityAnalyzer found a contact match: %{sensitive}@ ->  %{sensitive}@ in Contacts
SGMIMessageMissingEntityAnalyzer found a pseudo contact match: %{sensitive}@ ->  %{sensitive}@
SGMIMessageMissingEntityAnalyzer found a nickname match: %{sensitive}@ ->  %{sensitive}@
SGMIMessageMissingEntityAnalyzer: Attempt to match %{sensitive}@ against the various sources of contacts timed out.
SGMIMessageMissingEntityAnalyzer Attempt to match %{sensitive}@ against the various sources of contacts %@.
SGMI received %@ feedback for missing entity warning
SGMI will %@ trigger a warning for such signature
SGMIWarningsDetectionRegex: Invalid pattern %@ : %@.
SGMIWarningsDetectionRegexMatch (%{sensitive}@) with signature: %@ (%{sensitive}@)
IdentityKey for social profile types currently unsupported: %@
Unknown handle type %@
SGDSpotlightCommander: got reimport request: %@
ignoring reimport request since it is subset of existing query: %@
ignoring reimport request since plugin already has a pending request: %@
SGDSpotlightCommander: attempting to process reimport requests
SGDSpotlightCommander: found %lu unqueried reimport requests
SGDSpotlightCommander: found %lu unexecuted reimport requests
SGDSpotlightCommander: reimportForPersonHandle: %@ : %@ : %@
SGDSpotlightCommander: reimport query found %lu items
SGDSpotlightCommander: foundItemsHandler making new set for %@
SGDSpotlightCommander: foundItemsHandler: %@ - %@
SGDSpotlightCommander: Error: reimport search query error: %@: %@
SGDSpotlightCommander: total items to be reimported: %tu
SGDSpotlightCommander: storing reimport items for %lu bundles for request %llu
SGDSpotlightCommander: Error: unable to get spotlight index to issue reimport command to
SGDSpotlightCommander: issuing command to spotlight: %@
SGDSpotlightCommander: Error during CS issueCommand: %@
SGDSpotlightCommander: reimport command issued: %@
SGDSpotlightCommander: reimport command issued
SGNaturalLanguageDissector: Event is cancelled
Skipping NL dissector: allowNaturalLanguageDissector is OFF
Ignoring NL dissection because an iCalendar attachment exists.
Ignoring NL dissection because document was matched by a template
Failed to check for existing spotlight reference: %@
clearAllTombstonesForSpotlightReferencesIf: waiting for write transaction
clearAllTombstonesForSpotlightReferencesIf:YES (will clear)
clearAllTombstonesForSpotlightReferencesIf:YES (did clear)
clearAllTombstonesForSpotlightReferencesIf:NO
got NULL entityId from serializedContacts table
contactsWithIdentifiers filtered %lu entities from the wrong table.
nil entityId or serializedContact data found: %@ %@
Could not load contacts: %@
Could not fetch last CoreSpotlight state: %@
MDSearchableIndex returned error %@
Encountered corrupt db (%@), attempting to reinitialize
Journaling command: %d
Failed to write command type to journal
Failed to write command blob length to journal
Failed to write command blob to journal
Skipping SGMIFeatureStore _runJournal -- no journal file exists
Beginning SGMIFeatureStore _runJournal
Aborting SGMIFeatureStore _runJournal -- db not available (maybe device is locking again?)
Running journal command: delete column %@
Finished SGMIFeatureStore _runJournal
SGMIFeatureStore: Invalid SGMailIntelligenceUnsubscriptionRuleField for DB lookup
Follow Up. [incrementUserEngagement] warning is nil. Nothing will be stored.
Follow Up. [incrementUserEngagement] Incrementing %@
SGMIFeatureStore Error in signature format: %@
SGMIFeatureStore Unsupported type: %@
Follow Up. [incrementUserEngagement:forFollowUpWarning] Can't access the db.
Unsupported SGMailIntelligenceWarning for method shouldExposeWarning
Follow Up. [updateFollowUpDetectionStatsWithWarning] warning is nil. Nothing will be stored.
Follow Up. [updateFollowUpDetectionStatsWithWarning] Can't access the db.
SGMIFeatureStore: Inconsistent state of the DB.
SGMIFeatureStore will not return SGMIMetricsRegexSignatureStats for sampling reasons
Failed to clearSignatureStatsTable due to Class A data protection
Not performing deleteNaiveBayesModelForProbabilityFeatureName:%ld due to data protection
Discarding commitNaiveBayesModel commit due to data protection
commitNaiveBayesModel:%@ probabilityFeatureName:%ld updateDate:%@
Unable to deleteTokensForDeletedEmailAddresses due to Class A protection
Failed to clearSubmodelTables due to Class A data protection
Failed to clearKVStoreTable due to Class A data protection
Failed to clearNicknameMappingTable due to Class A data protection
Email Searchable Item is malformed - no account identifier
Email Searchable Item is malformed - missing message id or account identifier
[vipManager conformsToProtocol:@protocol(EMVIPReader_Private)] was false (class: %@) -- the VIP set might be empty even if the user has VIP
Could not get message content: %@
Read error %@ loading message content from URL: %@
Ignoring DKIM signature because it has expired.
Ignoring DKIM signature because the signing domain identifier is not the same as or a subdomain of the domain used in the From: header.
Could not create DKIM verification context %@
Failed to process event suggestion 
 No From: header found.
Failed to process event suggestion 
 Could not parse domain in From: header.
Failed to process event suggestion 
 No valid DKIM signature found.
Successfully verified DKIM signature.
Failed to process event suggestion 
 A temporary error occured while verifying the DKIM signature(s).
Failed to process event suggestion 
 A permanent error occured while verifying the DKIM signature(s).
Could not get localized string path for localization '%@
Could not load localized strings from %@: %@
Could not parse localized strings from %@: %@
SGRTCLogging+Reminders: No reminder found for entity record Id: %@
SGRTCLogging+Reminders: logging interaction to RTC
SGRTCLogging+Reminders: logging extraction to RTC
Invalid value for SGNameDetectorAlgorithm: %lu
SGNameDetector - Error querying contacts from people suggester.
Dissecting a donated contact identifier: %@
Received a donated contact identifier: %@, but contact store returned nil
malformed serialized time range: %@
SGSqlEntityStore+Events: event startTimezone is nil but endTimezone is not nil
SGSqlEntityStore+Events: event endTimezone is nil but startTimezone is not nil
SGDNotificationBroadcaster posting event notification
SGDNotificationBroadcaster posting contact notification
SGDNotificationBroadcaster posting reminder notification
SGDNotificationBroadcaster posting SGURL changed notification
SGDNotificationBroadcaster failed to post SGURL change notification: error %u
SGMITrialClientWrapper: No plist file found at %@
SGMITrialClientWrapper: TRILevel is nil for %@
SGMITrialClientWrapper: Unable to load plist content for %@
SGMITrialClientWrapper: Empty plist content for %@
SGMITrialClientWrapper: isEnabled accessed: %@
SGMITrialClientWrapper: isDNUOnlyEnablement accessed: %@
SGMITrialClientWrapper: signatureStatsLogging accessed: %@
SGMITrialClientWrapper: modelGroundTruthVersion accessed: %@
SGMITrialClientWrapper: modelInferenceVersion accessed: %@
SGMITrialClientWrapper: modelPath accessed: %@
SGMITrialClientWrapper: modelFeatureNames accessed: size %lu, first element %@
SGMITrialClientWrapper: modelFeatureStandardizationMeans accessed: size %lu, first element %@
SGMITrialClientWrapper: modelFeatureStandardizationStandardDeviation accessed: size %lu, first element %@
SGMITrialClientWrapper: modelGroundTruthFeatureNames accessed: size %lu, first element %@
SGMITrialClientWrapper: modelGroundTruthFeatureLowerBounds accessed: size %lu, first element %@
SGMITrialClientWrapper: modelGroundTruthFeatureUpperBounds accessed: size %lu, first element %@
SGMITrialClientWrapper: modelGroundTruthOutputs accessed: size %lu, first element %@
SGMITrialClientWrapper: saliencyOverrideFeatureNames accessed: size %lu, first element %@
SGMITrialClientWrapper: saliencyOverrideFeatureLowerBounds accessed: size %lu, first element %@
SGMITrialClientWrapper: saliencyOverrideFeatureUpperBounds accessed: size %lu, first element %@
SGMITrialClientWrapper: saliencyOverrideOutputs accessed: size %lu, first element %@
SGMITrialClientWrapper: classificationThreshold accessed: %@
SGMITrialClientWrapper: classificationOfflinePrecision accessed: %@
SGMITrialClientWrapper: classificationOfflineRecall accessed: %@
SGMITrialClientWrapper: attachmentDetectionRegexes accessed with locales %@.
SGMITrialClientWrapper: attachmentLinkDetection accessed with %lu entries.
SGMITrialClientWrapper: conservativeRecipientDetection accessed: %@
SGMITrialClientWrapper: recipientConservativeDetectionRegexes accessed with locales %@.
SGMITrialClientWrapper: recipientDetectionRegexes accessed with locales %@.
SGMITrialClientWrapper: nicknameDetectionRegexes accessed with locales %@.
SGMITrialClientWrapper: followUpOnOutgoingMailsQuestionsDetectionRegexes accessed with locales %@.
SGMITrialClientWrapper: followUpOnOutgoingMailsAsksDetectionRegexes accessed with locales %@.
SGMITrialClientWrapper: defaultTimeIntervalToStartWarningExposition accessed %@.
SGMITrialClientWrapper: defaultTimeIntervalForAWarning accessed %@.
SGMITrialClientWrapper: followUpOnIncomingMailsDetectionRegexes accessed with locales %@.
SGMITrialClientWrapper: followUpWarningsParameters accessed with locales %@.
SGMITrialClientWrapper: bodyAnalysisSamplingFactor accessed: %@
SGMITrialClientWrapper: minCountToConsiderATokenAsHighlyDiscriminant accessed: %@
SGMITrialClientWrapper: ratioToConsiderATokenAsHighlyDiscriminant accessed: %@
SGMITrialClientWrapper: minCountToConsiderATokenAsExtremelyDiscriminant accessed: %@
SGMITrialClientWrapper: ratioToConsiderATokenAsExtremelyDiscriminant accessed: %@
failed to get URL for library directory: %@
_vCardsDirectoryURL is nil
failed to create %@: %@
Sending pseudo-contact with id %@ to CoreSpotlight
Could not index contact in CoreSpotlight: %@
Not sending pseudo-contact to Spotlight because the store is missing
Not sending pseudo-contact to Spotlight because it was confirmed or rejected
Not sending pseudo-contact to Spotlight because it has no original details
Not sending pseudo-contact to Spotlight because it is already in the curated contacts
Could not delete pseudo-contact from Spotlight: %@
Could not delete all pseudo-contacts: %@
sg_isCuratedEventFromSuggestionNewerThan: missing suggestion info or timestamp
sg_fallbackURL: Event does not have schame
Ignoring URL that is not http or https
Could not convert string to URL
SGExtractionDocument: No model output
SGExtractionDocument: Invalid range
Error: could not mallocRegexp!
Memory not allocated by mallocRegexp: %llu
Failed to process event suggestion 
 INReservation.itemReference.vocabularyIdentifier property is nil.
Failed to process event suggestion 
 two or more INReservation objects share the same INReservation.itemReference.vocabularyIdentifier.
Error retrieving directory for Biome stream data
SGMIBiomeUtility: Successfully consumed stream
SGMIBiomeUtility: Error: %s
CoreSuggestionsAssets [common] metadata download success? %d
CoreSuggestionsAssets [locale] metadata download success? %d
CoreSuggestionsAssets [region] metadata download success? %d
SGEKCalendarAdapter addEvent: Skipping event already known to be cancelled. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter addEvent: Skipping event that has already passed. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter addEvent: Skipping NLEvent with empty title. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter addEvent: Skipping NLEvent that is not status Confirmed. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter addEvent: Skipping NL Event with associated event in EKEventStore. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter addEvent: Skipping event-associated-with-storage-event with missing suggestionInfo. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter addEvent: Skipping event which is not more recent than preexisting EKEvent. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter addEvents: Unable to save events in event store. EKStore commit error: %@
SGEKCalendarAdapter addEvents: Unable to save events in event store; description: %@, error: %@
SGEKCalendarAdapter addEvents: Successfully saved events in event store
SGEKCalendarAdapter _updateEvent: Calendar Event missing from store for identifier: %@. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter _updateEvent: Unable to update event: %@. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter _updateEKEvent: Unable to update event; description: %@, error: %@
SGEKCalendarAdapter _updateEvent: Successfully updated event. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter cancelEvent: No existing event found. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter cancelEvent: NL Event cancelled. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter _updateEvent: Unable to save event cancellation: %@. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter _updateEvent: Unable to save event cancellation; description: %@, error: %@
SGEKCalendarAdapter _updateEvent: Successfully Removed event in a curated calendar. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter cancelEvents: Unable to remove events. EKStore commit error: %@. [SGStorageEvent (%{public}@)]
Unable to remove events; description: %@, error: %@
SGEKCalendarAdapter cancelEvents: Successfully removed events. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter orphanEvent: No existing event found. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter orphanEvent: Orphaned event is on a curated calendar; not removing. [SGStorageEvent (%{public}@)]
SGEKCalendarAdatper _eventsAssociatedWithStorageEvent: Located associated event based on content rather than pseudoevent key match. [SGStorageEvent (%{public}@)]
SGEKCalendarAdatper _eventsAssociatedWithStorageEvent: More than one matching event found (%lu). [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter _addEKEventToCalendar: Adding event via EK. [SGEvent (%{public}@)]
SGEKCalendarAdapter _addEKEventToCalendar: Adding event to naturalLanguageSuggestedEventCalendar. [SGEvent (%{public}@)]
SGEKCalendarAdapter _addEKEventToCalendar: Adding event to suggestedEventCalendar. [SGEvent (%{public}@)]
SGEKCalendarAdapter _addEKEventToCalendar: Unable to save event in event store: %@. [SGEvent (%{public}@)]
SGEKCalendarAdapter _addEKEventToCalendar: Successfully saved event in event store. [SGEvent (%{public}@)], [EKEvent (%{public}@)]
SGEKCalendarAdapter: Calling _updateEKEvent
SGEKCalendarAdapter: Calling _cancelEKEvent
SGEkCalendarAdapter: no bundle record found: %@
SGEKCalendarAdapter _removeEKEvent: Unable to remove event. EKStore commit error: %@
SGEKCalendar _removeEKEvent: AdapterUnable to remove event; description: %@, error: %@
SGEKCalendarAdapter _removeEKEvent: Successfully removed event.
Cannot calculate free space
Free space attribute is missing
Free space attribute is not an NSNumber
SQLite error: %@
db corruption detected, leaving behind marker so we recover
suggestd exiting due to lack of disk space
suggestd exiting due to corrupt SQL vtable.
SGSqliteDatabase IOERR (device lock state %@): %@
suggestd exiting due to lack of disk space while setting journal_mode.
exiting due to repeated SQLITE_BUSY
SGDatabaseJournal unable to create directory for storing journals: %@
SGDatabaseJournal error when immediately running query: %@: %@
executing journal file: %@
Got nil after trying to unarchive a db journal: %@
No __query key set in journal file: %@
SGDatabaseJournal error when replaying query: %@: %@
ignoring journal file: %@
A bogus or corrupt journal file was found and has been cleaned up. Suggestd will relaunch and continue: %@
SGDatabaseJournal unable to delete journal file: %@: %@
SGDatabaseJournal deleted journal file: %@
Executing queries from journals to %@
SGDatabaseJournal unable to open journal directory: error(%i): %s
journal execution checking lock state after %u files
journal execution exiting early after %u files because device is locked
Removing all journal files at %@
SGDatabaseJournal not removing bogus journal directory: %@
SGDatabaseJournal unable to remove journal directory: %@
SGDatabaseJournal unable to re-create directory for storing journals: %@
softlink:o:path:/System/Library/PrivateFrameworks/CoreRoutine.framework/CoreRoutine
softlink:o:path:/System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore
softlink:o:path:/System/Library/Frameworks/WebKit.framework/WebKit
softlink:o:path:/System/Library/Frameworks/HealthKit.framework/HealthKit
softlink:o:path:/System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore
U0~0
SGTextMessage
SGConversationFlatteningTransformer
PMLTransformerProtocol
PMLPlistAndChunksSerializableProtocol
NSObject
schema
SGM2SelfIdModelScore
NSCopying
SGM2SuggestdExitReason
SGM2AutocompleteUserSelectedContact
SGM2BundleIdsTrackedAsOther
SGCloning
SGParsedPersonFromInteraction
SGM2ContactCreated
Internal
SGMicrodataToJsonParser
URLs
SGModel
SGTransformerInstance
SGModelRules
SGM2ContactDetailExtraction
SGM2ContactDetailSent
SGM2ContactsInterfaceCacheCount
Reminders
SGM2ContactsInterfaceCacheHit
SGM2FoundInMailModelScore
KVStore
SGWordBoundaryQuickTypeInference
SGStructuredEventDocument
SGMIMetricsUpdateProcessInformation
SGReminderDissector
SGMailMessageProcessing
SGTextMessageProcessing
SGM2SearchResultsIncludedPureSuggestion
SGMessageEventDissectorTrialClientWrapperGuardedData
SGMessageEventDissectorTrialClientWrapper
SGM2SearchResultsUserSelectedContact
SGM2SerializedContactsCacheHit
SGM2SqliteErrors
SGURLPlugin
FIAPPlugin
HVRemindersConsumer
HVConsumer
Saliency
SGM2SuggestedContactDetailShown
SGMIMetricsAggregatedAccuracyLogs
SGM2SuggestedContactDetailUsed
SGM2UnknownContactInformationShown
Utilities
SGM2PerfXPCLatency
SGM2CustomResponsesHarvest
SGMicrodataItemScope
SpotlightMapping_Internal
SGMonochrome
SGDetectedAttributeMetrics
SGMessageKey
SGEntityKey
SGSqliteExitOnDeviceLockErrorHandler
SGDPowerLog
SGDeliveryDissector
SGDXPCConnectionUtilities
SGTextMessageKey
SGRealtimeEventResponse
SGHistoryObserver
SGSuggestHistoryObserver
SGRealtimeSuggestionsTuple
SGEKEventStoreProvider
SGDPurgeDeletionBox
SGDSuggestManagerMailProtocol
_SGDSuggestManagerBaseProtocol
_SGDSuggestManagerMetricsProtocol
_SGDSuggestManagerEventsConfirmRejectProtocol
_SGDSuggestManagerContactsConfirmRejectProtocol
SGDSuggestManagerMessagesProtocol
SGDSuggestManager
SGDSuggestManagerAllProtocol
_SGSuggestManagerFoundInAppsProtocol
SGDSuggestManagerContactsProtocol
SGDSuggestManagerURLsProtocol
SGDSuggestManagerEventsProtocol
SGDSuggestManagerRemindersProtocol
SGDSuggestManagerDeliveriesProtocol
SGDSuggestManagerIpsosProtocol
SGDSuggestManagerInternalProtocol
_SGDSuggestManagerInternalHarvestProtocol
SGDSuggestManagerFidesProtocol
HVContentAdmissionObserver
HVMailConsumer
HVInteractionConsumer
SGEntityMappingTransformer
SGMIDailyActivity
SGMIMetricsAggregatedAccuracyLog
SGStructuredEventExtractionModel
SGSignificantEmailAddressModelForIMessage
SGM2HarvestCost
SGRe2PrefilterTree
SGDManagerForCTS
SGDeduper
SGCalendarAttachmentDissector
SGCalendarAttachmentDissectorUtility
SGContactDetailsHolder
SGStorageContact
SGDatabaseMigratorSnippets
SGSuggestionsSystem
SGMISpotlightUtility
SGDPluginManager
TestHelpers
StatsCounters
SGAccountsAdapter
SGInMemoryAdapter
SGJournalCalendarObserver
SGJournalBaseObserver
SGJournalContactsObserver
SGJournalRemindersObserver
SGRemindersAdapter
SGMIMetricsMailIntelligenceForMessage
SGMISaliencyInference
SGNameMappingTransformer
SGSelfIdentification
SGSelfIdentificationDetection
SGSearchableItemIdTriple
SGPipelineEntity
SGEntity
SGMeCardDissector
SGHistorySharedData
SGSuggestHistory
SGNoCloudNSUbiquitousKeyValueStore
SGKeyValueCacheManager
SGWords
FIAPHistoricalDataRequest
NSSecureCoding
NSCoding
RFC822Parsing
SGDataDetectorMatchesWithSignatureRange
SGAddressCoalescingState
SGDataDetectorMatch
SGThreadParser
SGMIAttachmentSizeHistogram
SGInhumans
SGMIFollowUpManager
SGExtractionModel
SGIdentityEdge
SGContactDetailSummary
IdentityStore
SGPatternGlobalData
SGPatterns
SGPatternDataFile
SuggestionsExtensions
HVHeaderCollection
SGSimpleMailHeaderKeyValue
SGSimpleMailMessage
SGQuickResponsesML
EncodedWord
SGMISaliencyModelConfigRule
SGMISaliencyModelConfig
SGLowMemoryContactEnumeration
SGLexicon
SGNicknames
SGContactsInterface
SGSymbolicMappingTransformer
SGOffsetDictionary
SGFlightData
Utility
SGFlight
SGTaggedMallocCompressionBuffer
SGTaggedMallocWorkQueueItemPart
SGTaggedMallocLevenshteinDistanceBuffer
SGTaggedMallocEmailHtml
SGMIMetricsSubmodelsStats
Suggestions
SGBinaryClassificationModel
SGBinaryClassificationModelRules
SGBloomFilter
SGBloomFilterChunkInMemory
SGBloomFilterChunk
SGBloomFilterChunkInMemorySparse
SGBloomFilterChunkMmap
SGMIEnablementConfig
SGTextMessageConversationTracker
SGTextMessageItem
SGConversationTurnProtocol
SGConversationHistory
SGDatabaseJournalFile
SGReminderExtractionModelGuardedData
SGReminderExtractionModel
SGRequestContext
SGStructuredEventCoreMLInputWrapper
MLFeatureProvider
SGRTCLoggingGuardedData
SGRTCLogging
ReimportRequests
sgLogging
SGXPCActivityManager
SGXPCActivityManagerProtocol
SGLongRunningTask
SGLongRunningTaskManager
SGEnrichmentWritebackAdapter
SGMIMetricsSubmodelStats
SGTokenString
SGJSBurstTrie
SGJSBurstTrieExports
JSExport
SGReverseTemplateJS
SGContactStoreFactory
VisibleForTesting
SGDomainWhitelistCheckerGuardedData
SGDomainWhitelistChecker
SGStructuredEventTrialClientWrapperGuardedData
SGStructuredEventTrialClientWrapper
SGSqliteReadTransaction
SGSqliteWriteTransaction
SGSqliteTransaction
SGSqliteDatabaseSharedLock
SGSqliteDatabaseImpl
SGSqliteDatabase
SGStructuredEventDissector
SGMicrodataDocument
SGSchemaOrgKey
Locations
Deleting
SGMailClientUtilMock
NaiveBayesModel
SGAhoCorasick
SGMISaliencyModelFeatureProvider
SGMISaliencyModelOutput
SGMISaliencyModel
SGNames
SGMIBiomeReducedMessageEvents
SGMIBiomeEventReducer
SGSchemaConversionProtocol
SqlHelpers
DatabaseCheck
SGMIMetricsSubmodelsProbabilities
Maintenance
Helpers
SGDOMParser
WKNavigationDelegate
SGStorageLocation
SGEventLocationForGeocode
SGMIStagedLogRecord
SGMIMetricsTrialMetadata
_SGDCloudKitSyncPersistedState
SGDCloudKitSync
APSConnectionDelegate
SGDCloudKitSyncObserver
SGCuratedChangeNotificationsBaseListener
SGCuratedChangeNotificationsAddressBookListener
SGCuratedChangeNotificationsCalendarListener
SGCuratedChangeNotifications
SGReminderDueLocation
SGChatLengthEstimator
SGMIFeatureSubmodelLink
SGMIFeature
CloudKitRecord
SGContactSharingModel
Significance
SGMIMetricsMailAttachmentHistogram
SGMicrodataItem
SGDetection
SGCNContactIdentifierCollection
SGLabeledValue
SGStructuredEventCoreMLOutputWrapper
SGTokenDistanceMappingTransformer
SGJournalEntry
SGMIMetricsMissingElementPrediction
RealtimeDonations
SGStringMappingTransformer
SGMessageEventDissectorGuardedData
SGMessageEventDissector
ContactDetails
SGCoalescingDropBox
SGPostalAddressExtraction
SGSocialProfileDetails
SGModelMappingHelper
Writing
SGHtmlEntities
SGSlice
SGSignatureDissector
SGMeContact
SGMIMetricsRegexSignatureStats
SGMetricsDissector
SGPseudoEventKey
SerializedContacts
SGReminderMessage
SGMailQuoteParser
SGReminderTrialClientWrapperGuardedData
SGReminderTrialClientWrapper
SGSqlEntityStoreCNContactMatcherHelper
SGSignificantEmailAddressModel
SGTokenizer
Loading
SGHKHealthStore
SGDetectedAttributeDissector
SGSelfIdentificationModel
SGInteractionKey
SGEspressoModel
SGExtractionModelCoreMLFeatureWrapper
SGMailPatterns
SGSignificantPhonenumberModel
SGAggregateLogging
SGTaggedCharacterRange
SGTrialClientWrapper
SGContactDetail
CNtoSGContacts
SGSGtoCNContactsCacheUpdateAdapter
SGHarvestQueueMetricsTimer
SGHarvestQueueMetrics
SGEntityStoreToFeatureStoreLockGuardedData
SGSqlEntityStoreTokenizerGuardedData
SGSqlEntityStore
SGOutput
SGExtractionDissector
SGInteractionProcessing
SGMISubmodelsManager
SGMISubmodelsAccumulator
SGMINicknameManager
SGServiceContext
SGReverseTemplatesJSDataDetectors
SGMIWarningsConfig
SGPseudoReminderKey
SGDCKLocation
SGMIFeatureVector
SGDataNormalization
SGDCKInteractionInfo
SGContactNicknameDissector
SGAppLaunchHistory
SGM2HarvestBudgetStatusTransition
ContentProtection
SGPipelineEnrichment
SGMetricsHelper
SGMIBiomeSummaryResults
SGURLContainer
SGExternalEnrichment
SGURLDissector
SGDeliveryKey
SGIdentityName
SGMIFeatureVectorCollator
SGMessage
SGSpotlightIdentifiers
SGM2BirthdayExtractionWithSupervision
SGStructuredEventClassification
SGJournal
SGContactEntity
SGRawKey
SGDOMParserResult
PipelineAdditions
SGPipeline
SGPOSTagger
SGPipelineDissector
SGContactDetailKey
SGPseudoContactKey
SGMailAttachment
SGTextMessageBirthdayCongratsModel
SGStorageEvent
SGEventForGeocode
SGDSpotlightReceiver
SpotlightReceiver
AttributePresence
SGContactPipelineHelper
SGCuratedContactMatcher
SGDCKEvent
SGPaths
SGNameInversionPredictor
SGEmailKey
SGMITokenCounts
SGMINaiveBayesModelQueryResult
SGMINaiveBayesModel
SGMI
ExtractionInfos
SGTokenizerMappingTransformer
SGEntityMatchingTransformer
DatabaseMigrator
SGMailIntelligenceDissector
SGSelfIDSupervision
SGContactDetailSupervision
SGDetectedAttributeML
SGMIMessageMissingEntityAnalyzer
SGRe2
SGRe2Basic
SGRe2Subregexps
SGRe2Lazy
SGMIWarningsDetectionRegexes
SGMIWarningsDetectionRegex
SGMIWarningsDetectors
SGMIWarningsDetectionRegexMatch
SGPlainTextContentCursor
SGIdentityKey
SGMicrodataItemProp
SGMicrodataParser
SGDSpotlightCommander
SGNaturalLanguageDissector
Spotlight
CSSearchableIndexDelegate
SGMIDomainCountingTableGuardedData
SGMIDomainCountingTable
SGMIFeatureStoreGuardedData
SGMIFeatureStore
_PASDatabaseMigrationProtocol
SGMISimpleEngagementStats
SGDuplicateKey
EMVIPReader_Private
SGMailClientUtil
SGSignificantAddressModel
SGProactiveHarvestingSupport
SGFoundInAppsStrings
SGContactAggregator
SGNameDetector
MessageManagement
SGDonatedContactDissector
Events
SGDatabaseMigratorEntities
SGSeekableData
SGSeekable
SGLevenshtein
FIAPResult
SGDCKTimeRange
SGCuratedEventKey
SGStorageReminder
SpotlightMapping
SGDNotificationBroadcaster
SGMIMetricsSubmodelAgeVector
SGXpcTransaction
SGMITrialClientWrapperGuardedData
SGMITrialClientWrapper
SGSchemaKeys
SGSpotlightContactsAdapter
SGSignificantAddressModelForIMessage
SGExtractionDocument
SGWebPageKey
Building
SGMIMetricsRegexSignatureStat
SGDPLogging
SGMIMetricsInferenceAndGroundTruth
SGMicrodataParserStackItem
SGMIBiomeUtility
SGContactSharingTransformer
SGAsset
Tags
SGEKCalendarAdapter
SGM2HarvestCostBreakdown
ErrorHandling
SGDatabaseJournal
HTMLContentDataNoCopy
JSGlobalContextRef
StringAsDetail:
JSONResult
StringAsMethod:
StringAsCategory:
StringAsSource:
StringAsContactDetail:
T@"MLMultiArray",&,N,V_location
StringAsDocumentSource:
T@"NSData",C,N,V_structuredData
StringAsFoundIn:
T@"NSNumber",R,N,V_noEngagement
StringAsHarvestSource:
T@"NSSet",R,N,V_postalAddresses
StringAsMode:
T@"NSString",&,N,V_targetString
StringAsOutcome:
T@"NSString",&,V_addressMapping
StringAsSupervision:
T@"NSString",R,N,V_personHandle
StringAsType:
T@"NSString",R,N,V_providerName
T#,R
TB,N,V_cacheHit
T@"<PMLMultiLabelClassifierProtocol><PMLPlistAndChunksSerializableProtocol>",R,D
TB,R,N,V_allDay
T@"<PMLTransformerProtocol>",R,V_featurizer
TI,N,V_exitCode
T@"CKServerChangeToken",&,N,V_syncToken
Td,N,V_accuracy
T@"CSPerson",&,V_sender
Ti,N,V_category
T@"EAEmailAddressSet",&,N,V_vips
T{_NSRange=QQ},N,V_contextRange
T@"EMDaemonInterface",R,N,V_emailDaemon
T{_NSRange=QQ},R,N,V_valueRange
T@"INInteraction",R,N,V_interaction
T@"MLMultiArray",&,N,V_I
_accountHandles
T@"MLMultiArray",&,N,V_N
_addressMapping
T@"MLMultiArray",&,N,V_bi_lstm_0_c_in
_annotationType
T@"MLMultiArray",&,N,V_bi_lstm_0_c_out
_appNameForApp:
T@"MLMultiArray",&,N,V_bi_lstm_0_h_in
_authorNickname
T@"MLMultiArray",&,N,V_bi_lstm_0_h_out
_bi_lstm_0_c_in
T@"MLMultiArray",&,N,V_core
_cachedContacts
T@"MLMultiArray",&,N,V_time
T@"NSArray",&,N,V_authorMatchingContacts
_classificationOfflinePrecision
T@"NSArray",&,N,V_emailAddresses
_contactsHelper
T@"NSArray",&,N,V_enrichments
_cpuEnd
T@"NSArray",&,N,V_instantMessageAddresses
T@"NSArray",&,N,V_phoneNumbers
_defaultTimeIntervalForAWarning
T@"NSArray",&,N,V_postalAddresses
_deleteDomainIdentifiersDropbox
T@"NSArray",&,N,V_taggedCharacterRanges
_detail
T@"NSArray",&,V_deliveries
_domain
T@"NSArray",&,V_features
_endPtr
T@"NSArray",&,V_invalidatedMessageIdentifiers
_events
T@"NSArray",&,V_reminders
_extractionInfo
T@"NSArray",C,N,V_bcc
T@"NSArray",C,N,V_headers
_greenTeaLogger
T@"NSArray",C,N,V_phones
T@"NSArray",C,N,V_to
_handle
T@"NSArray",R,N,V_dataDetectorMatches
_handle_SQLITE_WARNING:onError:
T@"NSArray",R,N,V_exceptionTemplates
_harvestReservationsFromInteractions:bundleId:queue:completion:
T@"NSArray",R,N,V_instantMessageAddresses
_hashes
T@"NSArray",R,N,V_itemRef
T@"NSArray",R,N,V_locations
_isSent
T@"NSArray",R,N,V_numberArrayValue
_knowledgeStore
T@"NSArray",R,N,V_reminders
_kvCacheManager
T@"NSArray",R,N,V_taggedCharacterRanges
_length
T@"NSArray",R,N,V_uniqueIdentifiers
_locale
T@"NSArray",R,V_bigramQueriedTokensCount
_logReminderInteractionSummaryForReminder:interface:actionType:
T@"NSArray",R,V_featureNames
_mailGotFlagged
T@"NSArray",R,V_groundTruthEstimatorRules
_masterEntityId
T@"NSArray",R,V_mean
T@"NSArray",R,V_saliencyOverrideRules
T@"NSArray",R,V_textConsumers
_nameComponents
T@"NSCharacterSet",&,V_characterSet
_numericMapping
T@"NSData",&,N,V_handle
_oldestTokenAge
T@"NSData",&,N,V_reservationContainerReference
_parent
T@"NSData",&,N,V_salt
_pendingGeocode
T@"NSData",&,N,V_signature
_phones
T@"NSData",R,N
_prepareEntity:
T@"NSDataDetector",&,V_dataDetector
_quoted
T@"NSDate",R,N
_regexpKeysSeen
T@"NSDate",R,N,V_detectedDate
_result
T@"NSDate",R,N,V_endDate
T@"NSDate",R,N,V_timestamp
T@"NSDictionary",&,N,V_indexSetForOutputNameLabel
_sender
T@"NSDictionary",&,V_mappings
_serviceContext
T@"NSDictionary",R,N,V_biomeSummaryByMessage
_simulatedCSSIs
T@"NSDictionary",R,N,V_dataDetectorMappedAdditions
_socialProfiles
T@"NSDictionary",R,N,V_featureDict
_sourceMetadata
T@"NSDictionary",R,N,V_htmlIds
_structuredData
T@"NSDictionary",R,N,V_sourceMetadata
_suffix
T@"NSError",R,N,V_error
_teamIdentifier
T@"NSMutableArray",&,N,V_locations
_tokenizeTitle:
T@"NSMutableArray",&,N,V_missingAttachments
_trackingNumber
T@"NSMutableArray",&,N,V_stats
_unigramFeature
T@"NSMutableDictionary",&,N,V_deleteUniqueIds
_usernamesCache
T@"NSMutableDictionary",R,N,V_emailToCanonicalEmailCache
_whitelistedVerbRangeInContent:
T@"NSMutableDictionary",R,V_unigramTokensCount
accountChanged:
T@"NSNumber",&,N,V_eventsWereRemovedFromEventKit
actions
T@"NSNumber",&,N,V_hasDeferredSync
addEnrichments:
T@"NSNumber",&,N,V_saltUsesManatee
address
T@"NSNumber",R,N,V_numberValue
airport
T@"NSNumber",R,N,V_privateGroupsCount
allFeatureNames
T@"NSNumber",R,V_output
alternativeKeysForEventKitQuery
T@"NSNumber",R,V_salientCount
annotationTypeUniqueIdentifier:
T@"NSNumber",R,V_strictUpperBound
approximateTime
T@"NSObject<SGEntityKey>",R,N,V_entityKey
arrayWithArray:
T@"NSPersonNameComponents",R,N,V_nameComponents
arrivalTerminal
T@"NSSet",&,N,V_authorMatchingContactsKeys
attachmentPaths
T@"NSSet",R,N
augmentSuggestedContactWithContact:conversationId:store:handle:
T@"NSSet",R,N,V_itemType
authorPhotoPath
T@"NSSet",R,N,V_socialProfileIdentifiers
availableTagSchemesForLanguage:
T@"NSString",&,N,V_address
base64EncodedStringWithOptions:
T@"NSString",&,N,V_bundleId
beginIndexBatch
T@"NSString",&,N,V_content
bi_lstm_0_h_out
T@"NSString",&,N,V_emailLanguage
bundleForClass:
T@"NSString",&,N,V_groupId
busTrip
T@"NSString",&,N,V_interactionBundleId
checkForAndProcessVersionChange
T@"NSString",&,N,V_interactionId
clearMigrationCompletedForPaths
T@"NSString",&,N,V_key
comment
T@"NSString",&,N,V_lang
commitSaliency:
T@"NSString",&,N,V_primaryICloudCalendarAccount
computeContactConnectionScoreFromEmailAddress:usingEntityStore:
T@"NSString",&,N,V_sourceKey
confirmContactByRecordID:error:
T@"NSString",&,N,V_treatmentId
confirmReminderFromOtherDevice:
T@"NSString",&,V_conversationIdentifier
contactStoreWithDonatedContacts
T@"NSString",&,V_emailMapping
containsObject:
T@"NSString",&,V_linkMapping
content
T@"NSString",&,V_phoneMapping
conversationAge
T@"NSString",&,V_targetMapping
convertToLocationWithId:origin:
T@"NSString",C,N,V_accountType
correct
T@"NSString",C,N,V_authorPhotoPath
countForObject:
T@"NSString",C,N,V_content
T@"NSString",C,N,V_context
curated
T@"NSString",C,N,V_email
currentCalendar
T@"NSString",C,N,V_messageId
customPipeline:
T@"NSString",C,N,V_operatingSystemVersion
dateOfBirthComponentsWithError:
T@"NSString",C,N,V_sourceKey
dbStats
T@"NSString",C,N,V_textContent
decodeEntities:
T@"NSString",C,N,V_uniqueIdentifier
defaultInstance
T@"NSString",R,C
defaultReceiver
T@"NSString",R,N
deleteCompletedReimportRequests
T@"NSString",R,N,V_address
deleteDomainIds
T@"NSString",R,N,V_airportCode
deleteMessages:
T@"NSString",R,N,V_arrivalAirportDescription
deleteUniqueIds
T@"NSString",R,N,V_bundleIdentifier
detailAsString:
T@"NSString",R,N,V_contactIdentifier
detectReminders
T@"NSString",R,N,V_context
detectedReservationIdWithError:
T@"NSString",R,N,V_displayName
didRegexTrigger
T@"NSString",R,N,V_domainId
divertedAirport
T@"NSString",R,N,V_externalId
donateRelevantActions:bundleID:
T@"NSString",R,N,V_extraction
dropOffLocation
T@"NSString",R,N,V_filename
dtstart
T@"NSString",R,N,V_flightno
dueLocationType
T@"NSString",R,N,V_givenName
encryptedValues
T@"NSString",R,N,V_inReplyTo
endDate
T@"NSString",R,N,V_key
eventActivities
T@"NSString",R,N,V_labelString
eventExtractionMobileAssetsPath
T@"NSString",R,N,V_messageId
exists:
T@"NSString",R,N,V_name
expandRange:by:
T@"NSString",R,N,V_path
extractedSocial
T@"NSString",R,N,V_plainText
fastestEncoding
T@"NSString",R,N,V_preferredUniqueIdentifier
fileSizeInBytes
T@"NSString",R,N,V_senderID
flightInformationWithAirlineCode:flightNumber:flightDate:reply:
T@"NSString",R,N,V_signature
foundIn
T@"NSString",R,N,V_sourceKey
freezeObservers
T@"NSString",R,N,V_suffix
fromInteraction
T@"NSString",R,N,V_teamIdentifier
geocodeAccuracy
T@"NSString",R,N,V_text
getBytes:range:
T@"NSString",R,N,V_trackingNumber
groupId
T@"NSString",R,N,V_uniqueId
handles
T@"NSString",R,N,V_userIdentifier
hasCountOver2MB
T@"NSString",R,N,V_value
hasDeferredSync
T@"NSString",R,V_attachmentFilename
hasEmailAddress
T@"NSString",R,V_path
hasHighPriority
T@"NSString",W,N,V_senderDisplayName
hasLang
T@"NSTimeZone",R,N,V_detectedTimeZone
hasMailboxStats
T@"PETEventTracker2",&,N,V_pet2Tracker
hasModelVersion
T@"SGContactDetail",&,N,V_birthday
hasNoEngagement
T@"SGContactDetailsHolder",&,V_internalDetectedDetails
hasPhoneNumber:
T@"SGDCKInteractionInfo",&,N,V_interactionInfo
hasStandardMailRulesProbability
T@"SGDuplicateKey",&,N,V_duplicateKey
hasSubscription
T@"SGDuplicateKey",R,N,V_duplicateKey
hasTemplateName
T@"SGEntity",R,N,V_entity
hasWhen
T@"SGExtractionInfo",R,N,V_extractionInfo
hashesForOpaqueKey:forMatching:
T@"SGIdentityKey",R,N,V_identityKey
headersContainInhumanOnes:keys:
T@"SGMIMetricsAggregatedAccuracyLog",&,N,V_activeAggregatedAccuracyLogForThePastFourWeeks
hoursSinceLastIncrementalUpdate
T@"SGMIMetricsAggregatedAccuracyLog",&,N,V_backgroundAggregatedAccuracyLogForThePastFourWeeks
htmlIds
T@"SGMIMetricsInferenceAndGroundTruth",&,N,V_active
incStatsCounterWithKey:byValue:
T@"SGMIMetricsMailIntelligenceForMessage",R,V_log
indexed
T@"SGMIMetricsSubmodelStats",&,N,V_conversationStats
inhuman
T@"SGMIMetricsSubmodelStats",&,N,V_listIdStats
initForBuilding
T@"SGMIMetricsSubmodelStats",&,N,V_mailboxTypeStats
initWithDouble:
T@"SGMIMetricsSubmodelStats",&,N,V_personFromSenderInDyadicConversationStats
initWithFormat:
T@"SGMIMetricsSubmodelStats",&,N,V_personToRecipientsStats
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:reservedSeat:trainTrip:
T@"SGMIMetricsSubmodelStats",&,N,V_subjectContentStats
initWithMemoryMappedPath:error:
T@"SGMIMetricsSubmodelsProbabilities",&,N,V_submodelsProbabilities
initWithNSData:
T@"SGMIMetricsTrialMetadata",&,N,V_activeTrialMetadata
initWithRegexp:
T@"SGMIMetricsTrialMetadata",&,N,V_trialMetadata
initWithResult:
T@"SGMITokenCounts",R,V_mailCount
initWithZoneID:
T@"SGMIWarningsDetectionRegex",R,N,V_body
interactionInfo
T@"SGMIWarningsDetectionRegexes",R,N,V_attachment
isContactDetail
T@"SGMIWarningsDetectionRegexes",R,N,V_followUpOnOutgoingMailsAsks
isEqualToArray:
T@"SGMIWarningsDetectionRegexes",R,N,V_nickname
isEvent
T@"SGMIWarningsDetectionRegexes",R,N,V_recipientConservative
isInMemoryPath:
T@"SGMessage",R,N,V_message
isInteractionId
T@"SGMicrodataItem",R,N,V_itemValue
isMailingListId
T@"SGMicrodataParserStackItem",R,V_parent
isPhoneContext:
T@"SGPipelineEntity",&,N,V_entity
isReferencedBy:
T@"SGPostalAddressComponents",R,N,V_postalAddressComponents
isSearchableItemPartOfReimport:
T@"SGRecordId",R,N,V_recordId
isSenderSupportedForExtraction:
T@"SGServiceContext",R,N,V_context
isUnlikelyPhone
T@"SGSimpleMailMessage",R,N,V_mailMessage
itemWithUniqueIdentifier:error:
T@"SGSimpleNamedEmailAddress",C,N,V_mailingList
jsonLdOutputFromPackedJSEntity:
T@"SGSimpleTimeRange",&,N,V_timeRange
keysForContact:
T@"SGSocialProfileDetails",R,N,V_socialProfile
keysSortedByValueUsingSelector:
T@"SGSqlEntityStore",R,N,V_store
T@"SGSqliteDatabase",R,N,V_db
T@"SGStorageEvent",R,N,V_event
launchCountForApp:afterDate:lowerBucket:bucketSize:bucketLimit:
T@"SGStorageReminder",R,N,V_reminder
T@"SGTextMessage",R,V_message
lookup:
T@?,C,N,V_changeCallback
mailAttachmentHistogramAtIndex:
TB,N,V_allDay
mapAndFilter:f:
TB,N,V_contactInformationExtracted
matchForString:
TB,N,V_dateIsCorrect
maxPromptLength
TB,N,V_didResponseKitTrigger
messagesPruned:
TB,N,V_foundMatchingElement
migrate
TB,N,V_hasInhumanHeaders
migrationNeeded
TB,N,V_highPriority
migration_MoveContentToSnippets
TB,N,V_isFirstPerson
migration_createFollowUpTableWithAppleMailMessageIdAsPrimaryKey
TB,N,V_isNegativeExample
multiArrayValue
TB,N,V_isPositiveExample
nameWithString:
TB,N,V_isStoredEncrypted
naturalLanguageEventAttributes:
TB,N,V_isThirdPerson
TB,N,V_needsSourceVerification
TB,N,V_pendingVerification
numberWithLong:
TB,N,V_regexBelongsToSender
orphanReminder:
TB,N,V_result
outputDimension
TB,N,V_significantWork
overwriteEvent:
TB,N,V_wasSuggestedContact
parseRfc822:attachmentCallback:
TB,R,D,N
participantType
TB,R,N
pattern
TB,R,N,V_curated
performedAction:forApp:onEvent:
TB,R,N,V_hasHashedMessageId
TB,R,N,V_inferredDate
predictedStringsFromModelOutput
TB,R,N,V_isEphemeral
processInteraction:bundleIdentifier:protectionClass:completion:
TB,R,N,V_isUnlikelyPhone
processingQueue
TB,R,N,V_linkClicked
pruneDB
TB,R,N,V_markedAsJunk
purgeSpotlightReferencesWithBundleIdentifier:uniqueIdentifiers:
TB,R,N,V_markedAsUnread
quality
TB,R,N,V_replyDraftStarted
read:fromStore:
TB,R,N,V_significantWork
realtimeContactsFromEntity:enrichments:sourceTextMessage:store:
TB,R,N,V_waitForMigrations
recordIdForKey:
TB,V_senderIsAccountOwner
refreshCacheFromAccountsService
TC,R,N,V_locationType
rejectReminderByRecordId:error:
TC,R,N,V_useCase
removeAllPseudoContactsInIdSet:
TI,N,V_blockedWarningCount
removeObserver:
TI,N,V_count32KBTo128KB
requestWithURL:
TI,N,V_count8KBTo32KB
saltUsesManatee
TI,N,V_countUpTo8KB
schemaPostalAddressForPostalAddressExtraction:addressThreshold:
TI,N,V_daysAvailableDuringIncrementalUpdate
seatRow
TI,N,V_deletedEmailsCount
seekToEndOfFile
TI,N,V_errorCode
serviceProvider
TI,N,V_hoursSinceLastIncrementalUpdate
setAccountType:
TI,N,V_ignorablePredictedAsIgnorable
setAllMailIntelligenceAsSalient
TI,N,V_ignorablePredictedAsSalient
setAttachments:
TI,N,V_modelVersion
setBcc:
TI,N,V_nbExtremelyDiscriminantTokensForIgnorability
setContentHash:
TI,N,V_nbHighlyDiscriminantTokensForIgnorability
setData:forKey:
TI,N,V_nbTokensInMailSubject
setDay:
TI,N,V_neutralPredictedAsIgnorable
setDomainFromSenderProbability:
TI,N,V_neutralPredictedAsSalient
setEnrichments:
TI,N,V_numberOfLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
setFilterQuery:
TI,N,V_numberOfPredictedAttachmentOnLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
setHasAccuracy:
TI,N,V_positiveEngagement
setHasCategory:
TI,N,V_previousInteractionOnConversationInMinutes
setHasFloating:
TI,N,V_rollbackedSlicesCountToComplyToPostDeletionPolicy
setHasToStatus:
TI,N,V_salientPredictedAsNeutral
setIgnorablePredictedAsSalient:
TI,N,V_state
setKey:
TI,N,V_totalNumberOfEmailsProcessedForAttachmentDetectionRoundedToClosestMultipleOf20
setListIdStats:
TI,N,V_totalNumberOfEmailsProcessedForRecipientDetectionRoundedToClosestMultipleOf20
setMailingList:
TI,R,N,V_matchType
setMaxDistance:
TI,R,N,V_numberOfMailsViewedBeforeSinceAvailable
setNeutralPredictedAsIgnorable:
TI,R,N,V_numberOfUnreadMessageAtFirstViewTime
setPersonFromSenderProbability:
TI,R,N,V_type
setPos:
TQ,N,V_cumulatedSubmodelsRollbackForPostDeletionPolicyPerformanceInMilliSeconds
setSalientPredictedAsIgnorable:
TQ,N,V_maxDistance
setSupervision:
TQ,N,V_missingRecipientPredictionPerformanceInMilliSeconds
setTransformer:
TQ,N,V_saliencyPredictionPerformanceInMilliSeconds
setUpdateTimerWithDelaySeconds:
TQ,N,V_size
sg_emailAddress
TQ,N,V_submodelsUpdatePerformanceInMilliSeconds
shiftIndexesStartingAtIndex:by:
TQ,R,N
signatureRange:
TQ,R,N,V_count128KBTo512KB
snippet
TQ,R,N,V_count512KBTo2MB
sortedUnsubscriptionOpportunitiesForField:limit:withCompletion:
TQ,R,N,V_countOver2MB
startJournaling
TQ,R,N,V_end
stopKvo
TQ,R,N,V_minCountToConsiderATokenAsHighlyDiscriminant
storeStatsCounterWithKey:value:
TQ,R,N,V_provider
stringByAppendingPathExtension:
TQ,R,N,V_start
stringFromDate:
TQ,R,V_offsetInFile
success
T^{sqlite3=},R,N
suggestContactsByMasterEntityQuery:withSnippets:limit:bindings:
Td,N,V_end
summary
Td,N,V_longitude
suspend
Td,N,V_start
throttlingState
Td,R,N,V_accuracy
toFloatingTime:
Td,R,N,V_defaultTimeIntervalForAWarning
tokensMatchedInContent:content:
Td,R,N,V_defaultTimeIntervalToStartWarningExposition
tracked
Td,R,N,V_firstAppLaunchFollowingFetch
trigger
Td,R,N,V_longitude
Td,R,N,V_messageViewMaxDwellTime
updateReminder:
Td,R,N,V_quality
uppercaseString
Td,R,N,V_ratioToConsiderATokenAsHighlyDiscriminant
urlsFoundBetweenStartDate:endDate:bundleIdentifier:entityStore:
Td,R,V_oldestTokenAge
useCase
Tf,N,V_attachmentsProbability
version
Tf,N,V_conversationProbability
webView
.cxx_destruct
ISOCountryCode
JSONObjectWithData:options:error:
StringAsFoundInSenderCNContact:
StringAsApp:
StringAsOffset:
StringAsCategoryType:
StringAsTokens:
StringAsCtsJobConstraints:
T@"NSArray",R,N
StringAsExtractionSignatureSource:
T@"NSData",R,N,V_structuredData
StringAsFromStatus:
T@"NSSet",R,C,N
StringAsLocationType:
T@"NSString",&,N,V_experimentId
StringAsModel:
T@"NSString",&,N,V_templateName
StringAsPredictedSaliency:
T@"NSString",&,V_numericMapping
StringAsToStatus:
T@"NSString",R,N,V_propertyName
T#,&,N,V_modelClass
T@"NSString",R,V_likelyLanguage
T@"<PMLMultiLabelClassifierProtocol>",R,V_model
TB,N,V_floating
T@"<PMLTransformerProtocol>",&,N,V_transformer
TB,R,V_isLogged
T@"CKRecordID",&,N,V_saltAtomicReferenceId
T^i,R,N
T@"CSPerson",&,N,V_author
Td,N,V_latitude
T@"CSPerson",R,N
Ti,N,V_toStatus
T@"ECDKIMVerifier",R,N,V_dkimVerifier
T{_NSRange=QQ},R,N,V_labelRange
T@"HVHtmlParser",R,N,V_htmlParser
T@"MLMultiArray",&,N,V_D
_abortDueToSqliteError:onError:
T@"MLMultiArray",&,N,V_L
_active
T@"MLMultiArray",&,N,V_W
_allDay
T@"MLMultiArray",&,N,V_bi_lstm_0_c_in_rev
_anyHash:inSet:
T@"MLMultiArray",&,N,V_bi_lstm_0_c_out_rev
_author
T@"MLMultiArray",&,N,V_bi_lstm_0_h_in_rev
_backingKVStore
T@"MLMultiArray",&,N,V_bi_lstm_0_h_out_rev
_bi_lstm_0_h_in
T@"MLMultiArray",&,N,V_data
_carrierEntries
T@"MLMultiArray",&,N,V_title
_changeCallback
T@"NSArray",&,N,V_currentColumns
_conservativeRecipientDetection
T@"NSArray",&,N,V_enrichedTaggedCharacterRanges
_count8KBTo32KB
T@"NSArray",&,N,V_externalEnrichments
_currentColumns
T@"NSArray",&,N,V_matches
T@"NSArray",&,N,V_plainTextDetectedData
_deferRequested
T@"NSArray",&,N,V_socialProfiles
_deleteZeroRows
T@"NSArray",&,V_contacts
_documentSource
T@"NSArray",&,V_events
_emailAddresses
T@"NSArray",&,V_invalidatedIdentifiers
_entity
T@"NSArray",&,V_recipients
_executeFile:onDb:becameLocked:
T@"NSArray",C,N,V_accountHandles
_extractionMode
T@"NSArray",C,N,V_cc
_filterCandidates:withUniqueDetailMatchesToContact:andFeatures:
T@"NSArray",C,N,V_mailboxIdentifiers
T@"NSArray",C,N,V_socialProfileIdentifiers
T@"NSArray",R,N,V_attachments
_handle_SQLITE_CORRUPT:onError:
T@"NSArray",R,N,V_eventBatch
_harvestMetrics
T@"NSArray",R,N,V_historicalDataRequests
_hasDeferredProcessStateChanges
T@"NSArray",R,N,V_itemProps
_htmlBodyCached
T@"NSArray",R,N,V_items
_inProgressProcureSaltOperation
T@"NSArray",R,N,V_matchingContacts
_isTestMessage:
T@"NSArray",R,N,V_outputItems
T@"NSArray",R,N,V_stringArrayValue
_lastSuggestionsFromMessageLock
T@"NSArray",R,N,V_tags
_likelyLanguage
T@"NSArray",R,N,V_wildcardsMatches
_locked
T@"NSArray",R,V_detectedData
_mailClientUtil
T@"NSArray",R,V_groundTruthEstimatorFeatures
_markedAsUnread
T@"NSArray",R,V_itemScopes
_method
T@"NSArray",R,V_messages
T@"NSArray",R,V_std
T@"NSArray",R,V_unigramQueriedTokensCount
_noZone
T@"NSData",&,N,V_contentHash
_offset
T@"NSData",&,N,V_metadata
_output
T@"NSData",&,N,V_reservationItemReferences
_parseDocument:
T@"NSData",&,N,V_schemaOrg
_persistedState
T@"NSData",C,N
_prefix
T@"NSData",R,N,V_handle
_purgeUniqueIds
T@"NSDate",C,N,V_date
_regexp
T@"NSDate",R,N,V_date
_reinstateDeath
T@"NSDate",R,N,V_detectedEndDate
_rotate
T@"NSDate",R,N,V_startDate
T@"NSDate",W,N,V_matchDate
_selfIdentificationMessageCount
T@"NSDictionary",&,N,V_modelOutput
_serializeDate:
T@"NSDictionary",R,N,V_biomeMessageIdByPersistentId
_signatureRange
T@"NSDictionary",R,N,V_dataDetectorAdditions
_sketch
T@"NSDictionary",R,N,V_detectors
_source
T@"NSDictionary",R,N,V_followUpWarningsParameters
_startInDaysAgo
T@"NSDictionary",R,N,V_jsMessageLogs
_submodelsStats
T@"NSDictionary",R,V_submodels
_tagger
T@"NSIndexSet",R,N
T@"NSMutableArray",&,N,V_mailAttachmentHistograms
_tokens
T@"NSMutableArray",&,N,V_missingRecipients
_trialEventExtractionAssetsPath
T@"NSMutableDictionary",&,N,V_deleteDomainIds
_userIdentifier
T@"NSMutableDictionary",&,N,V_purgeUniqueIds
_whitelistRegex
T@"NSMutableDictionary",R,V_bigramTokensCount
T@"NSMutableSet",&,N,V_locations
accountTypeFor:
T@"NSNumber",&,N,V_hasDeferredProcessStateChanges
addEnrichment:withParentEntity:
T@"NSNumber",&,N,V_hasSubscription
addTag:
T@"NSNumber",R,N,V_negativeEngagement
airline
T@"NSNumber",R,N,V_positiveEngagement
aliases
T@"NSNumber",R,V_featureName
allKeys
T@"NSNumber",R,V_regularCount
analyzeDatabase
T@"NSNumber",R,V_strictLowerBound
T@"NSNumber",R,V_threshold
arrayFromPathWithPrefix:suffix:
T@"NSOperationQueue",R,N
arrivalPlatform
T@"NSRegularExpression",R,N,V_attachmentLinkDetectionRegex
attachmentNames
T@"NSSet",&,N,V_featureNames
attachmentTypes
T@"NSSet",R,N,V_emailAddresses
authorAddresses
T@"NSSet",R,N,V_phoneNumbers
authors
T@"NSSet",R,N,V_tags
T@"NSString",&,N,V_airportCode
T@"NSString",&,N,V_componentName
bi_lstm_0_c_out
T@"NSString",&,N,V_domain
bindNamedParam:toNonnullNSData:
T@"NSString",&,N,V_extraKey
busName
T@"NSString",&,N,V_intentResponseUserActivityString
calendarDeleted
T@"NSString",&,N,V_interactionGroupId
ckErrorForRecordZoneId:inError:
T@"NSString",&,N,V_interactionTeamId
cnContactIdentifiersForContact:
T@"NSString",&,N,V_label
commit:
T@"NSString",&,N,V_locale
componentsFromLocaleIdentifier:
T@"NSString",&,N,V_regexLanguage
confirmContact:
T@"NSString",&,N,V_title
confirmEventFromExternalDevice:
T@"NSString",&,V_characterMapping
contact
T@"NSString",&,V_dateMapping
containsDomain:
T@"NSString",&,V_language
containsString:
T@"NSString",&,V_nickname
context
T@"NSString",&,V_photoPath
convertToEvent:
T@"NSString",C,N
copyTo:
T@"NSString",C,N,V_authorNickname
count512KBTo2MB
T@"NSString",C,N,V_bundleIdentifier
country
T@"NSString",C,N,V_contentProtection
createSnapshot:
T@"NSString",C,N,V_domainIdentifier
curatedEventKey
T@"NSString",C,N,V_mailConversationIdentifier
currentPatterns
T@"NSString",C,N,V_name
dateFromString:
T@"NSString",C,N,V_source
T@"NSString",C,N,V_subject
dealloc
T@"NSString",C,N,V_title
defaultDuration
T@"NSString",R
defaultLanguage
T@"NSString",R,C,V_locale
defaultTimeZone
T@"NSString",R,N,V_accountType
deleteContentWithRequest:error:
T@"NSString",R,N,V_airline
deleteInteractionsWithBundleId:
T@"NSString",R,N,V_appleMailMessageId
deleteURLsFromBundleIdentifier:
T@"NSString",R,N,V_bundleId
destroy
T@"NSString",R,N,V_clientName
detectLanguageFromLanguageTags:
T@"NSString",R,N,V_content
detectedEndDate
T@"NSString",R,N,V_departureAirportDescription
detectionsInPlainText:baseDate:
T@"NSString",R,N,V_domain
disable
T@"NSString",R,N,V_email
domain:
T@"NSString",R,N,V_externalIdentifier
downloadMetadataWithCompletion:
T@"NSString",R,N,V_familyName
dtstamp
T@"NSString",R,N,V_firstname
dueDate
T@"NSString",R,N,V_formattedName
ef_trimTrailingCharactersInSet:
T@"NSString",R,N,V_groupId
T@"NSString",R,N,V_interactionIdentifier
enumerateAllRemindersWithBlock:
T@"NSString",R,N,V_label
eventClassifierMobileAssetsPath
T@"NSString",R,N,V_locale
eventIdentifier
T@"NSString",R,N,V_middlename
existsInString:
T@"NSString",R,N,V_parsecWikidataQid
extractedFlight
T@"NSString",R,N,V_phoneNumber
extractedTicket
T@"NSString",R,N,V_pluginIdentifier
fetchMeContactFromContactStore:
T@"NSString",R,N,V_prefix
filterOutUndisplayableEntities:
T@"NSString",R,N,V_service
forward
T@"NSString",R,N,V_source
foundInSenderCNContactAsString:
T@"NSString",R,N,V_stringValue
fromDictionary:
T@"NSString",R,N,V_surname
fromTextMessage
T@"NSString",R,N,V_templateShortName
geocodeLatitude
T@"NSString",R,N,V_title
getNSStringForColumnName:table:
T@"NSString",R,N,V_type
groupIdentifier
T@"NSString",R,N,V_uniqueIdentifier
hasCategoryType
T@"NSString",R,N,V_username
hasCountUpTo8KB
T@"NSString",R,N,V_valueString
hasDeploymentId
T@"NSString",R,V_language
hasExperimentId
T@"NSString",R,V_token
hasHumanHeaders
T@"NSTimeZone",R,N,V_detectedEndTimeZone
hasLocationType
T@"NSUbiquitousKeyValueStore",R,N
hasMode
T@"PMLSessionDescriptor",&,N,V_sessionDescriptor
hasName
T@"SGContactDetail",&,N,V_photoPath
hasPath
T@"SGCuratedEventKey",R,N,V_duplicateEventKey
hasPredictedMissingElementScore
T@"SGDCKTimeRange",&,N,V_when
hasSubjectCountStatsProbability
T@"SGDuplicateKey",&,N,V_extractedReminderDuplicateKey
hasTag:
T@"SGDuplicateKey",R,N,V_parentKey
hasType
T@"SGExtractionInfo",&,N,V_extractionInfo
hashesDidChange
T@"SGHarvestQueueMetrics",&,N,V_harvestMetrics
headers
T@"SGKeyValueCacheManager",R,V_kvCacheManager
holdXpcTransactionForShortDelay
T@"SGMIMetricsAggregatedAccuracyLog",&,N,V_activeAggregatedAccuracyLogSinceModelInitialization
htmlContentData
T@"SGMIMetricsAggregatedAccuracyLog",&,N,V_backgroundAggregatedAccuracyLogSinceModelInitialization
hypotheticalContactSuggestionImpressionsIncludingInsignificant:
T@"SGMIMetricsInferenceAndGroundTruth",&,N,V_background
incomingMessage
T@"SGMIMetricsSubmodelStats",&,N,V_attachmentsStats
ingestFeatures:
T@"SGMIMetricsSubmodelStats",&,N,V_domainFromSenderStats
inhumanFeatures
T@"SGMIMetricsSubmodelStats",&,N,V_mailboxStats
initWithDomain:
T@"SGMIMetricsSubmodelStats",&,N,V_personCCRecipientsStats
initWithEntity:
T@"SGMIMetricsSubmodelStats",&,N,V_personFromSenderStats
initWithHandle:
T@"SGMIMetricsSubmodelStats",&,N,V_standardMailRulesStats
initWithLength:
T@"SGMIMetricsSubmodelStats",&,N,V_subjectCountStatsStats
initWithMessagesFromDaysAgo:throughDaysAgo:limit:withBiomeData:store:useSpotlightDataForMissingBiomeData:preLoadedFeatureNames:
T@"SGMIMetricsSubmodelsStats",&,N,V_submodelsStats
initWithName:iataCode:icaoCode:
T@"SGMIMetricsTrialMetadata",&,N,V_backgroundTrialMetadata
initWithRentalCompanyName:type:make:model:rentalCarDescription:
T@"SGMITokenCounts",R,V_bigramTokenCounts
initWithString:
T@"SGMITokenCounts",R,V_unigramTokenCounts
insertSaliency:
T@"SGMIWarningsDetectionRegex",R,N,V_subject
ipsosMessageWithSearchableItem:
T@"SGMIWarningsDetectionRegexes",R,N,V_followUpOnIncomingMails
isEmpty
T@"SGMIWarningsDetectionRegexes",R,N,V_followUpOnOutgoingMailsQuestions
isEqualToHistoricalDataRequest:
T@"SGMIWarningsDetectionRegexes",R,N,V_recipient
isEventMetadata
T@"SGMessage",&,N,V_message
isInhumanSender
T@"SGMicrodataDocument",R,V_document
isKeyAvailable:
T@"SGMicrodataParserStackItem",R,N,V_stackItem
isMediaMimeType
T@"SGModelSource",R,V_modelSource
isProxy
T@"SGPostalAddressComponents",R,N,V_components
isReservationContainerReference
T@"SGRecordId",&,N,V_recordId
isSearchableItemPartOfReimportWithGetterBlock:bundleIdentifier:
T@"SGSGtoCNContactsCacheUpdateAdapter",R,V_sgToCNContactsCacheUpdateAdapter
isSent:
T@"SGServiceContext",R,N,V_serviceContext
itemRef
T@"SGSimpleNamedEmailAddress",C,N,V_from
journal
T@"SGSimpleNamedEmailAddress",C,N,V_replyTo
T@"SGSimpleTimeRange",R,N,V_when
keysForContactDetail:ofContact:
T@"SGSpotlightContactsAdapter",R,V_spotlightContactsAdapter
knownEmailAddressesForNickname:
T@"SGSqlEntityStore",W,N,V_store
lastInsertRowId
T@"SGStorageContact",R,N,V_contact
latitudeAndLongitudeForAirport:
T@"SGStorageLocation",R,N,V_dueStorageLocation
T@"SGTextMessage",R,N,V_textMessage
logMetricSuggestedContactDetailUsed:contactIdentifier:bundleId:
T@"TRIClient",&,N,V_triClient
lowercaseString
TB,N
mailItemIsSPAM:
TB,N,V_cancelled
mapItem
TB,N,V_correct
matches
TB,N,V_didRegexTrigger
message
TB,N,V_estimatedGroundTruth
methodAsString:
TB,N,V_harvestedOnBattery
migrateIfNeeded
TB,N,V_hasName
migration_CreateFTSTableWithITS
TB,N,V_incomingMessage
migration_RebuildIdentityTables
TB,N,V_isFromCongratulation
minutes
TB,N,V_isPartiallyDownloaded
nameForCarrier:
TB,N,V_isSent
namesFromRegex:
TB,N,V_isSubmodelRebuilt
naturalLanguageEventLanguageID:
TB,N,V_isUnlikelyPhone
normalizedValue
TB,N,V_pendingGeocode
numberWithBool:
TB,N,V_receivedOnBattery
offsetAsString:
TB,N,V_regexDoesNotBelongToSender
outcome
TB,N,V_signature
overridePET2InstanceForTesting:
TB,N,V_wasKnownContact
parseEmailAddressString:displayName:localPart:domain:groupList:
TB,R
parseRfc822Headers:htmlContent:
TB,R,GhasFullDownloadBeenRequested
partySizeFromReservationSchema:
TB,R,N,V_approximateTime
payload
TB,R,N,V_forwardDraftStarted
pluginEndSetup:
TB,R,N,V_hasPhoneLabel
postalAddresses
TB,R,N,V_isDownloadedLocally
preventUnsubscriptionOpportunitiesSuggestionsForField:toValues:
TB,R,N,V_isPotentialEventMessage
processLoadRequestWithFileName:
TB,R,N,V_journaling
protectionClass
TB,R,N,V_mailGotFlagged
pruneDuplicateEventExtractions:
TB,R,N,V_markedAsRead
pushDontUpdate:
TB,R,N,V_partialDate
rawValueForKey:
TB,R,N,V_scrolledToEnd
read:maxLength:
TB,R,N,V_userReplied
recordConversationTurnWithDetail:received:throughApp:withStore:
TB,R,V_senderIsBusinessChat
refresh
TC,R,N,V_category
rejectReminder:
TC,R,N,V_trigger
release
TI,N,V_ageOfTheSubmodelInDays
removeBrackets:
TI,N,V_count128KBTo512KB
replyTo
TI,N,V_count512KBTo2MB
resolveByPairs:
TI,N,V_countOver2MB
schemaFromRentalCarReservation:
TI,N,V_customResponsesAfterPruning
searchableIndex
TI,N,V_daysProcessedDuringIncrementalUpdate
seconds
TI,N,V_deletedTokensCountToComplyToCappingPolicy
service
TI,N,V_extractionModelVersion
TI,N,V_hoursSinceReference
setAirportCode:
TI,N,V_ignorablePredictedAsNeutral
setApp:
TI,N,V_mailsProcessedDuringIncrementalUpdate
setAuthorNames:
TI,N,V_nbCharactersInMailSubject
setContactInformationExtracted:
TI,N,V_nbExtremelyDiscriminantTokensForSaliency
setCustomResponsesAfterPruning:
TI,N,V_nbHighlyDiscriminantTokensForSaliency
setDateMapping:
TI,N,V_negativeEngagement
setDisplayName:
TI,N,V_neutralPredictedAsNeutral
setEnd:
TI,N,V_noEngagement
setEnvironment:
TI,N,V_numberOfLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
setGteSaliency:
TI,N,V_numberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
setHasCacheHit:
TI,N,V_previousInteractionFromUserOnConversationInMinutes
setHasExitCode:
TI,N,V_rollbackedEmailsCountToComplyToPostDeletionPolicy
setHasLatitude:
TI,N,V_salientPredictedAsIgnorable
setIgnorablePredictedAsNeutral:
TI,N,V_salientPredictedAsSalient
setIgnoreAfter:
TI,N,V_timeDifferenceFromReceptionToSaliencyInferenceInSeconds
setLinkMapping:
TI,N,V_totalNumberOfEmailsProcessedForFollowUpDetectionRoundedToClosestMultipleOf20
setLowPriority:
TI,R,N
setMaxConcurrentOperationCount:
TI,R,N,V_messageViewCount
setModelOutput:
TI,R,N,V_numberOfMoreRecentUnreadMessageAtFirstViewTime
setNumberStyle:
TI,R,N,V_state
setPet2Tracker:
TQ,N,V_biomeAggregationPerformanceInMilliSeconds
setReminderOverridesForTesting:
TQ,N,V_ignoreAfter
setState:state:
TQ,N,V_missingAttachmentPredictionPerformanceInMilliSeconds
setTextContent:
TQ,N,V_pos
setTreatmentId:
TQ,N,V_selfIdentificationMessageCount
setUserVersion:
TQ,N,V_submodelsPruningForCappingPolicyPerformanceInMilliSeconds
sharedBackgroundProcessingQueue
TQ,R
shouldAddTitlePrefixForContent:
TQ,R,N,V_annotationType
significantWork
TQ,R,N,V_count32KBTo128KB
snippetsContent
TQ,R,N,V_count8KBTo32KB
sourceAsString:
TQ,R,N,V_countUpTo8KB
TQ,R,N,V_minCountToConsiderATokenAsExtremelyDiscriminant
storageLocationFromDueLocation:
TQ,R,N,V_operation
stringByAppendingPathComponent:
TQ,R,N,V_requestId
stringByExtractingPlainTextFromHTML:tableDelimiters:stripLinks:
TQ,R,N,V_type
subject
T^{?={?=SS}BBBBB},R,N
successWithNumberOfExtractions:
Td,N,V_creationTimestamp
suggestionImpressionsViaBanner:
Td,N,V_lastModifiedTimestamp
surname
Td,N,V_quality
tableId
Td,R,N
tmpPath
Td,R,N,V_cpu
tokensAsString:
Td,R,N,V_defaultTimeIntervalToEndWarningExposition
totalForDomain:
Td,R,N,V_duration
transformerInstanceForLanguage:
Td,R,N,V_latitude
triggerOptional
Td,R,N,V_messageFetchTime
unnormalizedNameSimilarity:and:
Td,R,N,V_messageViewTotalDwellTime
updateWithEvent:eventTimestamp:
Td,R,N,V_ratioToConsiderATokenAsExtremelyDiscriminant
Td,R,N,V_timeBeforeViewStartSinceAvailable
useAllLanguages
Td,R,V_threshold
valueWithRange:
Tf,N,V_conversationAge
wasKnownContact
Tf,N,V_domainFromSenderAge
Tf,N,V_domainFromSenderProbability
Tf,N,V_listIdProbability
Tf,N,V_mailboxProbability
Tf,N,V_mailboxTypeProbability
Tf,N,V_personCCRecipientsAge
Tf,N,V_personCCRecipientsProbability
Tf,N,V_personFromSenderAge
Tf,N,V_personFromSenderInDyadicConversationAge
Tf,N,V_personFromSenderInDyadicConversationProbability
Tf,N,V_personFromSenderProbability
Tf,N,V_personToRecipientsAge
Tf,N,V_personToRecipientsProbability
Tf,N,V_predictedMissingElementScore
Tf,N,V_predictedSaliencyScore
Tf,N,V_senderConnectionScore
Tf,N,V_standardMailRulesProbability
Tf,N,V_subjectContentAge
Tf,N,V_subjectContentProbability
Tf,N,V_subjectCountStatsProbability
Tf,R,N
Tf,R,N,V_bodyAnalysisSamplingFactor
Ti,N,V_app
Ti,N,V_categoryType
Ti,N,V_confidence
Ti,N,V_contactDetail
Ti,N,V_deploymentId
Ti,N,V_detail
Ti,N,V_documentSource
Ti,N,V_extractionSignatureSource
Ti,N,V_foundIn
Ti,N,V_foundInSenderCNContact
Ti,N,V_fromStatus
Ti,N,V_harvestSource
Ti,N,V_locationType
Ti,N,V_method
Ti,N,V_mode
Ti,N,V_model
Ti,N,V_offset
Ti,N,V_outcome
Ti,N,V_predictedSaliency
Ti,N,V_source
Ti,N,V_supervision
Ti,N,V_tokens
Ti,N,V_type
Ti,R,N
Ti,R,N,V_backpressureHazard
Ti,R,N,V_concurrencyBehavior
Ti,R,N,V_extractionMode
Ti,R,N,V_locationType
Ti,R,N,V_parsecDomain
Ti,R,N,V_state
Tq,N,V_endUTCOffsetSeconds
Tq,N,V_groupId
Tq,N,V_masterEntityId
Tq,N,V_parentEntityType
Tq,N,V_schemaVersion
Tq,N,V_startUTCOffsetSeconds
Tq,R,N
Tq,R,N,V_entityType
Tq,R,N,V_featureName
Tq,R,N,V_featureType
Tq,R,N,V_masterEntityId
Tq,R,N,V_writeTransactionDepth
Tq,R,V_bigramFeature
Tq,R,V_submodeledFeature
Tq,R,V_unigramFeature
Tq,V_windowLength
T{?=SS},R,N,V_type
T{SGUnixTimestamp_=d},N,V_creationTimestamp
T{SGUnixTimestamp_=d},N,V_lastModifiedTimestamp
T{SGUnixTimestamp_=d},R,N,V_creationTimestamp
T{SGUnixTimestamp_=d},R,N,V_lastModifiedTimestamp
T{_NSRange=QQ},N,V_candidateNameRange
T{_NSRange=QQ},N,V_contentRangeOfInterest
T{_NSRange=QQ},N,V_plainTextSigRange
T{_NSRange=QQ},N,V_range
T{_NSRange=QQ},N,V_signatureRange
T{_NSRange=QQ},R,N
T{_NSRange=QQ},R,N,V_contextRangeOfInterest
T{_NSRange=QQ},R,N,V_coreRange
T{_NSRange=QQ},R,N,V_match
T{_NSRange=QQ},R,N,V_range
URLByAppendingPathComponent:
URLByAppendingPathComponent:isDirectory:
URLByStandardizingPath
URLForDirectory:inDomain:appropriateForURL:create:error:
URLQueryAllowedCharacterSet
URLWithString:
UTF8String
UUID
UUIDString
_accountInfoFuture
_accountInfoInFlight
_accountStore
_accountType
_accountsAdapter
_accuracy
_actionVerbOptional
_activeAggregatedAccuracyLogForThePastFourWeeks
_activeAggregatedAccuracyLogSinceModelInitialization
_activeTrialMetadata
_activities
_actuallyAddEvents:
_addAuthorContactForMessage:entity:
_addColumn:
_addDependency:toTrain:
_addEKEventToCalendar:storageEvent:ekStore:commit:
_addEnrichmentsToEntityForOutput:entity:startTime:backPressureHazard:
_addEnrichmentsToEntityForOutput:interaction:entity:startTime:backPressureHazard:
_addIndexingTagsTo:
_addIndexingTagsToParent:
_addLocations:toEntityWriteDictionary:
_addObserver:forObjectLifetime:listenerClass:
_addSearchableItem:bundleID:
_addStringToNoContactsCache:
_addTimeRange:toEntityWriteDictionary:
_address
_ageOfTheSubmodelInDays
_airline
_airportCode
_airportDataOffsets
_airportUpdateDataOffsets
_airportsFh
_airportsUpdateFh
_allowedTypesForQueryKeyedArchives
_analyzeFeatureVector:withRegExpDictionary:forOutgoingMail:withDetectedLanguage:withRegExLanguage:withCustomTimeRange:
_analyzeForFollowUpMailWithBody:isSent:messageId:date:
_analyzeMergeBlobsIncremental:
_app
_appEnumForBundleId:
_appleMailMessageId
_applyCappingPolicy:shouldContinue:usingDatabase:
_approximateTime
_apsConnection
_areSubmodelsEmptyUsingDatabase:
_arrivalAirportDescription
_assetPath
_assetUpdateToken
_attachment
_attachmentDetectionRegexes
_attachmentFilename
_attachmentLinkDetection
_attachmentLinkDetectionRegex
_attachments
_attachmentsProbability
_attachmentsStats
_attemptToProcessRequests
_attributeSetsForEvents:
_authorCached
_authorMatchingContacts
_authorMatchingContactsKeys
_authorPhotoPath
_background
_backgroundAggregatedAccuracyLogForThePastFourWeeks
_backgroundAggregatedAccuracyLogSinceModelInitialization
_backgroundTrialMetadata
_backingData
_backpressureHazard
_baseInteractionAttributesForReminder:
_basePath
_bcc
_becomeImmuneToDeath
_beforeSystemInitialization
_bi_lstm_0_c_in_rev
_bi_lstm_0_c_out
_bi_lstm_0_c_out_rev
_bi_lstm_0_h_in_rev
_bi_lstm_0_h_out
_bi_lstm_0_h_out_rev
_bigramFeature
_bigramQueriedTokensCount
_bigramTokenCounts
_bigramTokensCount
_binderForDictionary:
_biomeAggregationPerformanceInMilliSeconds
_biomeMessageIdByPersistentId
_biomeMessageSummary
_biomeSummaryByMessage
_birthday
_blockedWarningCount
_body
_bodyAnalysisSamplingFactor
_boolMaskVectorForTokens:
_box
_boxLock
_buf
_bufferedInteractionsForBundleLock
_bundleId
_bundleIdToPET
_bundleIdentifier
_bytecode
_bytes
_cacheFiles
_cacheHit
_cachedPrimaryICloudAccount
_cachedVIPEmailAddresses
_calendarObservers
_calendarUsageLast2Weeks
_callBlockWithEKEventStoreForReading
_callCalendarObservers:contactsObservers:remindersObservers:withEntry:
_callJSFunction:withArguments:
_callback
_callbackQueue
_canBannerUseStoredDissection:options:
_canaryHash
_cancelEKEvent:ekStore:error:
_cancelled
_candidateNameRange
_carrierCodesByName
_carrierNames
_carrierUpdateCodesByName
_carrierUpdateNames
_category
_categoryType
_characterMapping
_characterSet
_ckErrorForId:inError:
_cks
_cksGetter
_classKey
_classificationOfflineRecall
_classificationThreshold
_classifierCache
_clearBucketForColumn:
_clearBucketForColumn:usingDatabase:
_clearExistingHtml
_clearKVStoreUsingDatabase:
_clearPendingJobs
_clearRegexCache
_clearSignatureStatsTableUsingDatabase:
_clearSubModelsTablesUsingDatabase:
_clientName
_cnToSGContactsCachePendingUpdateRequests
_columnFromDate:
_columnsToZero
_commitDomainsAndCounts:toColumn:
_commitNaiveBayesModel:probabilityFeatureName:updateDate:usingDatabase:
_compareContact:cnContact:newDetails:matchedDetails:matchPreference:stopOnNewDetail:stopOnMatchedDetail:
_compiledRegexes2
_componentName
_components
_computeBlobsRaw:
_computePseudoContactContentHash:contactDetails:
_concurrencyBehavior
_cond
_confidence
_confidenceMapper
_confidenceThreshold
_confirmReminderByRecordId:completion:
_confirmationOptional
_connection
_consumeContentParts:title:fromHandle:documentDate:isOutgoingDocument:uniqueIdentifier:domainIdentifier:bundleIdentifier:context:
_contact
_contactDetail
_contactForMasterEntityId:withSnippets:filterConfirmRejectDetails:
_contactIdForInteractionContactIdentifierMatch:
_contactIdentifier
_contactIdsForContactDetailMatches:detailContactIds:socialProfileContactIds:
_contactIdsForContactNameMatches:strongNameIds:weakNameIds:
_contactInformationExtracted
_contactNames
_contactStore
_contacts
_contactsForMasterEntityIds:withSnippets:
_contactsObservers
_container
_content
_contentHash
_contentProtection
_contentRangeOfInterest
_contentWriteEnrichmentToDb:
_contents
_context
_contextRange
_contextRangeOfInterest
_conversationAge
_conversationIdentifier
_conversationProbability
_conversationStats
_conversationTracker
_conversations
_core
_coreNLPTokenizer
_coreNLPTrustedLanguages
_coreRange
_correct
_count
_count128KBTo512KB
_count32KBTo128KB
_count512KBTo2MB
_countOver2MB
_countPtr
_countUpTo8KB
_coupleOperationTrainWithStart:end:
_cpu
_cpuStart
_crLookup
_createEmptyFileAtPath:
_createEnrichmentsForDetections:entity:
_createEntityFTSTableWithName:
_createOrReuseNLPTagger
_createRTCReporting
_createUserActivityStringsWithOptions:completionHandler:
_createZoneError
_creationTimestamp
_crossPlatformUnifiedMeContactWithKeysToFetch:error:
_ctsCriteriaState
_ctsJobConstraints
_ctsManager
_cumulatedSubmodelsRollbackForPostDeletionPolicyPerformanceInMilliSeconds
_curated
_currentAllowedMessageCount
_currentFile
_currentTasks
_customResponsesAfterPruning
_data
_dataDetector
_dataDetectorAdditions
_dataDetectorMappedAdditions
_dataDetectorMatches
_dataDetectorMatchesWithSignatureForContentCached
_dataDetectorsSignatureForTesting
_database
_date
_dateFormatter
_dateFromColumn:
_dateIsCorrect
_dateMapping
_dateRangeIsSubsetOfHistoricalDataRequest:
_daysAvailableDuringIncrementalUpdate
_daysProcessedDuringIncrementalUpdate
_dbGetter
_dbIsMigrated
_ddTrustedLanguages
_dead
_deadline
_deallocNotifications
_dedupeGenericContactDetails:
_dedupePostalAddresses:
_deepCopy:
_deepMutableContainersCopy:
_defaultConfig
_defaultTimeIntervalToEndWarningExposition
_defaultTimeIntervalToStartWarningExposition
_delayedResetCachesAndModels
_deleteAllSyncedItemsCallback
_deleteChildEntitiesByRecordIdsInTable:
_deleteContactDetailsByRecordIds:
_deleteDomainIds
_deleteEntitiesByDuplicateKeyNoRecurse:
_deleteEventsByRecordIds:
_deleteIfNoSpotlightReferences:addToRecentlyDeletedCache:
_deleteInteractionBundleIdDropbox
_deleteInteractionGroupIdDropbox
_deleteInteractionIdDropbox
_deleteMessageMetadataByDuplicateKeyNoRecurse:
_deleteNaiveBayesModelForProbabilityFeatureName:usingDatabase:
_deleteOldInteractionContactDetails:currentIdentifiers:
_deleteOrphanedItems
_deleteReminder:usingReminderStore:
_deleteRemindersByRecordIds:
_deleteTokensForDeletedEmailAddresses:usingDatabase:
_deleteUniqueIds
_deleteZoneError
_deletedEmailsCount
_deletedTokensCountToComplyToCappingPolicy
_deliveries
_deltaSyncContactsWithChangeHistory:
_departureAirportDescription
_deploymentId
_derefChildrenOf:
_descriptionForActionType:
_descriptionForBundleId:
_descriptionForExtractionStatus:
_descriptionForInterface:
_descriptionForMessageEventDissectorExtractionStatus:
_deserializeDateComponents:
_deserializeRange:
_detectContactNames:
_detectNLPNames:
_detectNames:withNameSet:
_detectedData
_detectedDate
_detectedEndDate
_detectedEndTimeZone
_detectedReminderEnrichmentFromReminderMessage:parentEntity:language:parentMessage:startTimeProcessing:
_detectedTimeZone
_detectionsInPlainText:withEligibleRegions:ddSignature:baseDate:
_detectors
_deviceStateToken
_didRegexTrigger
_didResponseKitTrigger
_diffSchemas:withExpectedSchemas:
_directoryPath
_dirtyLock
_dirtyTransaction
_disabledBecauseOutOfDateSoftware
_displayName
_dissectEntity:inContext:andThen:
_dissectMessage:entity:
_dissectOperations:block:
_dissectOperations:inContext:
_dissectorConfig
_dissectorLock
_dissectorsAndDependencies
_dkimVerifier
_document
_documentSourceForBundleId:
_domainFromSenderAge
_domainFromSenderProbability
_domainFromSenderStats
_domainId
_domainIdentifier
_domainSegmentCount:
_done
_dropBox
_dropColumn:
_dueStorageLocation
_dumpTable:columns:limitTo:
_duplicateEventKey
_duplicateKey
_duplicateKeysWithZeroSpotlightReferencesFromRecordIds:
_duration
_durationStart
_dynamicLabelContentForReply:prompt:language:
_effectiveLockState
_ekStoreProvider
_email
_emailContentCacheSalt
_emailDaemon
_emailLanguage
_emailMapping
_emailToCanonicalEmailCache
_emitChangeNotificationForEnrichment:
_emitChangeNotifications:
_end
_endDate
_endInDaysAgo
_endUTCOffsetSeconds
_engineConfig
_enqueueBatchOfCNContactIds:
_enrichedTaggedCharacterRanges
_enrichmentWritebackAdapter
_enrichmentWritebackVersionKey
_enrichments
_ensureHtmlIsString:
_entityKey
_entityMigrationRequiresMergeBlobUpdate
_entityMigrations
_entityStore
_entityType
_entityVersion
_enumerateContactsForMasterEntityIds:withSnippets:filterConfirmRejectDetails:usingBlock:
_enumerateContactsForMasterEntityIds:withSnippets:usingBlock:
_enumerateMatchesInUtf8:fromString:ngroups:block:
_error
_errorCode
_escapedSQLIdentifier:
_estimatedGroundTruth
_event
_eventBatch
_eventBatchOperationSupportedForEntries:
_eventClassificationForEntity:
_eventClassifierModel
_eventExtractionDictionaryLogForTemplateName:extractionStatus:outputExceptions:outputInfos:jsMessageLogs:jsOutputLogs:timingProcessing:
_eventKeyforReminder:
_eventsAssociatedWithStorageEvent:store:
_eventsWereRemovedFromEventKit
_exceptionTemplates
_executeBoxTasks:
_executeJournals
_executeReimportOfIdentifiers:
_exitCode
_experimentId
_externalEnrichments
_externalId
_externalIdentifier
_extraKey
_extractEmailishTokenFromMailHeader:
_extractedReminderDuplicateKey
_extraction
_extractionModelVersion
_extractionSignatureSource
_familyName
_fastCStringContents:
_fastCharacterContents
_featureDict
_featureName
_featureNameForString:
_featureNames
_featureType
_features
_featuresForDatabase:
_featurizer
_fetchContactNamesToLimit:
_fetchContactNamesToLimit:peopleSuggester:
_fieldValuesClassWhitelist
_fileData
_filename
_filledWithInformationRetrievedThroughMaild
_filterCandidates:similarToName:exceedingThreshold:
_filterOutAllButAcceptedWithUpdatedFields:
_filterOutCancelledEvents:
_filterOutOlderVersionsOfPseudoEvents:
_filterWithAddressBook
_findContactsMatchingPseudoContact:withName:andFeatures:fromContactStore:withKeysToFetch:
_findFuzzyNameCandidatesMatchingPseudoContact:withName:andFeatures:fromContactStore:withKeysToFetch:
_firstAppLaunchFollowingFetch
_firstname
_flagsForBundleIdentifier:documentDate:documentTimeInterval:isOutgoingDocument:
_flightDataOffsets
_flightUpdateDataOffsets
_flightno
_flightsFh
_flightsUpdateFh
_floating
_flushExternalEnrichments
_followUpOnIncomingMails
_followUpOnIncomingMailsDetectionRegexes
_followUpOnOutgoingMailsAsks
_followUpOnOutgoingMailsAsksDetectionRegexes
_followUpOnOutgoingMailsQuestions
_followUpOnOutgoingMailsQuestionsDetectionRegexes
_followUpWarningsParameters
_forNameDetector
_formattedName
_forwardDraftStarted
_foundIn
_foundInMailNotifications
_foundInSenderCNContact
_foundMatchingElement
_from
_fromStatus
_fromSuggestTool
_fullDownloadRequested
_fullSyncContactsWithStore:
_geocodeLock
_getFlightReferencesAndReservationId:
_getListener:
_getListenerByClassMap
_getPeopleWithNameToken:fromContactStore:withKeysToFetch:ifMatchingPredicate:
_getSGMIStoredAddressesUsingDatabase:
_getterForProperty:
_givenName
_groundTruthEstimatorFeatures
_groundTruthEstimatorRules
_groupId
_guardedData
_handleDeviceLockStateEvent:
_handleMemoryPressureStatus:
_handle_SQLITE_ABORT:onError:
_handle_SQLITE_ABORT_ROLLBACK:onError:
_handle_SQLITE_AUTH:onError:
_handle_SQLITE_AUTH_USER:onError:
_handle_SQLITE_BUSY:onError:
_handle_SQLITE_BUSY_RECOVERY:onError:
_handle_SQLITE_BUSY_SNAPSHOT:onError:
_handle_SQLITE_CANTOPEN:onError:
_handle_SQLITE_CANTOPEN_CONVPATH:onError:
_handle_SQLITE_CANTOPEN_FULLPATH:onError:
_handle_SQLITE_CANTOPEN_ISDIR:onError:
_handle_SQLITE_CANTOPEN_NOTEMPDIR:onError:
_handle_SQLITE_CONSTRAINT:onError:
_handle_SQLITE_CONSTRAINT_CHECK:onError:
_handle_SQLITE_CONSTRAINT_COMMITHOOK:onError:
_handle_SQLITE_CONSTRAINT_FOREIGNKEY:onError:
_handle_SQLITE_CONSTRAINT_FUNCTION:onError:
_handle_SQLITE_CONSTRAINT_NOTNULL:onError:
_handle_SQLITE_CONSTRAINT_PRIMARYKEY:onError:
_handle_SQLITE_CONSTRAINT_ROWID:onError:
_handle_SQLITE_CONSTRAINT_TRIGGER:onError:
_handle_SQLITE_CONSTRAINT_UNIQUE:onError:
_handle_SQLITE_CONSTRAINT_VTAB:onError:
_handle_SQLITE_CORRUPT_VTAB:onError:
_handle_SQLITE_EMPTY:onError:
_handle_SQLITE_ERROR:onError:
_handle_SQLITE_FORMAT:onError:
_handle_SQLITE_FULL:onError:
_handle_SQLITE_INTERNAL:onError:
_handle_SQLITE_INTERRUPT:onError:
_handle_SQLITE_IOERR:onError:
_handle_SQLITE_IOERR_ACCESS:onError:
_handle_SQLITE_IOERR_AUTH:onError:
_handle_SQLITE_IOERR_BLOCKED:onError:
_handle_SQLITE_IOERR_CHECKRESERVEDLOCK:onError:
_handle_SQLITE_IOERR_CLOSE:onError:
_handle_SQLITE_IOERR_CONVPATH:onError:
_handle_SQLITE_IOERR_DELETE:onError:
_handle_SQLITE_IOERR_DELETE_NOENT:onError:
_handle_SQLITE_IOERR_DIR_CLOSE:onError:
_handle_SQLITE_IOERR_DIR_FSYNC:onError:
_handle_SQLITE_IOERR_FSTAT:onError:
_handle_SQLITE_IOERR_FSYNC:onError:
_handle_SQLITE_IOERR_GETTEMPPATH:onError:
_handle_SQLITE_IOERR_LOCK:onError:
_handle_SQLITE_IOERR_MMAP:onError:
_handle_SQLITE_IOERR_NOMEM:onError:
_handle_SQLITE_IOERR_RDLOCK:onError:
_handle_SQLITE_IOERR_READ:onError:
_handle_SQLITE_IOERR_SEEK:onError:
_handle_SQLITE_IOERR_SHMLOCK:onError:
_handle_SQLITE_IOERR_SHMMAP:onError:
_handle_SQLITE_IOERR_SHMOPEN:onError:
_handle_SQLITE_IOERR_SHMSIZE:onError:
_handle_SQLITE_IOERR_SHORT_READ:onError:
_handle_SQLITE_IOERR_TRUNCATE:onError:
_handle_SQLITE_IOERR_UNLOCK:onError:
_handle_SQLITE_IOERR_VNODE:onError:
_handle_SQLITE_IOERR_WRITE:onError:
_handle_SQLITE_LOCKED:onError:
_handle_SQLITE_LOCKED_SHAREDCACHE:onError:
_handle_SQLITE_MISMATCH:onError:
_handle_SQLITE_MISUSE:onError:
_handle_SQLITE_NOLFS:onError:
_handle_SQLITE_NOMEM:onError:
_handle_SQLITE_NOTADB:onError:
_handle_SQLITE_NOTFOUND:onError:
_handle_SQLITE_NOTICE:onError:
_handle_SQLITE_NOTICE_RECOVER_ROLLBACK:onError:
_handle_SQLITE_NOTICE_RECOVER_WAL:onError:
_handle_SQLITE_PERM:onError:
_handle_SQLITE_PROTOCOL:onError:
_handle_SQLITE_RANGE:onError:
_handle_SQLITE_READONLY:onError:
_handle_SQLITE_READONLY_CANTLOCK:onError:
_handle_SQLITE_READONLY_DBMOVED:onError:
_handle_SQLITE_READONLY_RECOVERY:onError:
_handle_SQLITE_READONLY_ROLLBACK:onError:
_handle_SQLITE_SCHEMA:onError:
_handle_SQLITE_TOOBIG:onError:
_handle_SQLITE_WARNING_AUTOINDEX:onError:
_handle_UNKNOWN_ERROR:onError:
_handle_sqlite_error_code:error:onError:
_handler
_handlerLock
_handlers
_harvestCostMetrics
_harvestEmail:
_harvestPeopleFromInteractions:bundleId:
_harvestPerson:handle:suggestionType:bundleId:
_harvestPhoneNumber:
_harvestSocialProfile:handle:bundleId:
_harvestSource
_harvestStore
_harvestedOnBattery
_has
_hasColumn:
_hasDeferredSync
_hasHashedMessageId
_hasHumanHeadersCached
_hasInhumanHeaders
_hasName
_hasPhoneLabel
_hasSubscription
_hashAttachedPseudoContacts:
_hashWithDuplicateKeysMatchingTags:
_hashesForConfirmedField:value:storageEvent:forMatching:
_head
_headers
_healthStore
_helperLock
_highPriority
_highlyDiscriminantTokensForFeature:minCount:minRatio:domains:limit:usingDatabase:
_historicalDataRequests
_history
_hmmTrustedLanguages
_hoursSinceLastIncrementalUpdate
_hoursSinceReference
_html
_htmlBody
_htmlContentData
_htmlContentDataCached
_htmlIds
_htmlParser
_identifyComposeWarningsFromSubject:content:toRecipients:ccRecipients:bccRecipients:originalToRecipients:originalCcRecipients:attachments:language:store:disableConservativeCheckRequirement:
_identityKey
_identityStoreDirty
_ignorablePredictedAsIgnorable
_ignorablePredictedAsNeutral
_ignorablePredictedAsSalient
_ignoreAfter
_ignoreDataDetectorsForTesting
_impl
_inMemory
_inProgressCreateZoneOperation
_inProgressDeleteZoneOperation
_inProgressFetchNewEntitiesOperation
_inReplyTo
_incomingMessage
_indexSetForOutputNameLabel
_inferredDate
_inhumanFeatures
_init
_initWithInteractionIdentifier:fromBundleIdentifier:creationTime:
_initWithUserActivityStrings:secondaryString:optionalData:
_initializeDatabaseNolock:withProtection:sharedLock:newDatabaseCreated:
_inputMapping
_inputTokenMapping
_instantMessageAddresses
_intentResponseUserActivityString
_interaction
_interactionAttributesForEntity:parentEntity:
_interactionAttributesForRealtimeEvent:parentEntity:
_interactionAttributesForTags:parentEntity:
_interactionBundleId
_interactionDictionaryForDueLocation:dueDateComponents:
_interactionGroupId
_interactionId
_interactionIdentifier
_interactionInfo
_interactionSummaryForReminder:interface:actionType:
_interactionTeamId
_interactionsWriteQueue
_internalDetectedDetails
_invalidatedIdentifiers
_invalidatedMessageIdentifiers
_isASCII
_isBlobAnalysisQueueEmpty
_isClosed
_isContactInteresting:emailEntity:enrichments:hasContactCard:
_isDNUOnlyEnablement
_isDownloadedLocally
_isEKEventFromNLEventsCalendar:ekStore:
_isEKEventFromSuggestedCalendar:ekStore:
_isEligibleEvent:
_isEnabled
_isEphemeral
_isFirstPerson
_isFromCongratulation
_isIdentityStoreDirty
_isImageAttachment:
_isInhumanContentCached
_isInhumanEmailAddressPatternMatch:
_isInhumanSenderCached
_isLogged
_isMeContact:withContactStore:
_isNegativeExample
_isPartiallyDownloaded
_isPositiveExample
_isPotentialEventMessage
_isSharingSenderLocation:senderName:
_isStoredEncrypted
_isStringInNoContactsCache:
_isSubmodelRebuilt
_isThirdPerson
_isTrivial
_isUnlikelyPhone
_issueCommand:
_issueCommand:completionHandler:
_itemProps
_itemRef
_itemScopes
_itemType
_itemValue
_items
_joinIncompleteIdentityEmailWithOthersOfItsIlk:name:recordId:
_joinIncompleteIdentityPhonesWithOthersOfTheirIlk:name:recordId:
_joinIncompleteIdentitySocialProfilesWithOthersOfTheirIlk:name:recordId:
_journal
_journalEntryFromEntity:
_journalEntryFromReminderEntity:
_journalPath
_journalQueue
_journaling
_jsContext
_jsMessageLogs
_jsVM
_keepRealtimeAsLost
_key
_keyForField:
_kvStoreIdentifier
_kvoHandler
_label
_labelIdentityBlobs:
_labelRange
_labelString
_labelTokenIndexesForOutputName:label:
_lang
_langResolutionOrder
_language
_lastAddressEndPos
_lastAddressIndex
_lastBusyWaitEnded
_lastCriteria
_lastFrontfillFinishTime
_lastModifiedTimestamp
_lastResult
_lastSuggestionsFromMessageRequest
_lastSuggestionsFromMessageResponse
_lastWindowStartTime
_latitude
_lazyCheckMessageForHumanness
_lazyEKStoreLock
_lazySnippetsContent
_len
_lengthsCounts
_lexiconTokenForToken:inLexicon:
_limit
_linkClicked
_linkMapping
_linkNamelessEmailsIfAppropriate:nameToVertex:disjointSets:edges:
_linkNamelessPhonesIfAppropriate:nameToVertex:disjointSets:edges:
_linkNamelessSocialProfilesIfAppropriate:nameToVertex:disjointSets:edges:
_listIdProbability
_listIdStats
_liveObserversMap
_loadDataDetectorAdditionDict:
_loadIdentityBlobs
_loadMessageByKey:
_loadReimportRequestsWithWhereClause:
_loadedSem
_localLanguageVersion
_localTraining
_localeIdentifier
_location
_locationType
_locations
_lock
_lockStateNotificationRegistrationToken
_lockStateRegistration
_log
_logCallInteractions:
_logConfirmPercentWithConfirmCount:rejectCount:domain:suffix:
_logDeliverySenderForSenderDomain:
_logReminderTitleSequence:recorderKey:
_logReminderTitleUnknownTokens:recorderKey:
_logSelfIDForMessage:detection:modelType:modelVersion:
_logUniqueEnrichments:
_loggableTitleSequence:withMask:
_loggableUnknownTokenSequence:withMask:
_loggedExtractions
_loggedInteractions
_loggedInteractionsSummary
_longitude
_lostMessageOverflow
_mailAttachmentHistograms
_mailConversationIdentifier
_mailCount
_mailMessage
_mailboxIdentifiers
_mailboxProbability
_mailboxStats
_mailboxTypeProbability
_mailboxTypeStats
_mailingList
_mailsProcessedDuringIncrementalUpdate
_makeAlnum:
_makeBlobsFromConnectedComponents:edges:
_makeEmptyBox
_makeSimplifiedListIdEmail:
_manager
_mapToPseudoEvents:
_mappings
_mapsUsageLast2Weeks
_markIdentityStoreClean
_markIdentityStoreDirty
_markRecordsLostIfNoSpotlightReferences:
_markedAsJunk
_markedAsRead
_mask
_match
_matchDate
_matchType
_matchableUTF8TokenRangesInMatchExpression:
_matches
_matchingContacts
_maxDistance
_maybeFormatString
_meContact
_mean
_memoryMappedFileNames
_memoryMappedFiles
_memoryPressureQueue
_memoryPressureSource
_mergeColumn:intoColumn:
_mergeSchemas:withExpectedSchemas:
_message
_messageFetchTime
_messageHarvestQueue
_messageId
_messageInhumannessChecked
_messageRecipients
_messageSubjectDetectedDataCached
_messageViewCount
_messageViewMaxDwellTime
_messageViewTotalDwellTime
_messages
_messagesBannerLimit
_metadata
_middlename
_migrator
_minCountToConsiderATokenAsExtremelyDiscriminant
_minCountToConsiderATokenAsHighlyDiscriminant
_minEntityIdFromMinEntityId:withContactIdentifiers:
_minimumConfidence
_missingAttachmentPredictionPerformanceInMilliSeconds
_missingAttachments
_missingRecipientPredictionPerformanceInMilliSeconds
_missingRecipients
_mlQR
_mode
_model
_modelClass
_modelDirectoryPathCreateIfNeeded:
_modelFeatureNames
_modelFeatureStandardizationMeans
_modelFeatureStandardizationStandardDeviations
_modelGroundTruthFeatureLowerBounds
_modelGroundTruthFeatureNames
_modelGroundTruthFeatureUpperBounds
_modelGroundTruthOutputs
_modelGroundTruthVersion
_modelInferenceVersion
_modelNameForCurrentEnrollment
_modelNameForExperimentId:treatmentId:deploymentId:
_modelOutput
_modelPath
_modelPathForExperimentId:treatmentId:deploymentId:createIfNeeded:
_modelSource
_modelVersion
_modelsAvailabeForMode:objective:language:
_mostCommonCountryCode
_mruCarrierEntry
_naiveBayesModelQueryResultForFeature:unigramTokens:bigramTokens:usingDatabase:
_naiveDateFormatter
_name
_nameMappings
_nameTagging
_namespaceName
_nbCharactersInMailSubject
_nbExtremelyDiscriminantTokensForIgnorability
_nbExtremelyDiscriminantTokensForSaliency
_nbHighlyDiscriminantTokensForIgnorability
_nbHighlyDiscriminantTokensForSaliency
_nbTokensInMailSubject
_needsFlushing
_needsSourceVerification
_negativeEngagement
_neutralPredictedAsIgnorable
_neutralPredictedAsNeutral
_neutralPredictedAsSalient
_newEKEventStoreGetter
_nickname
_nicknameCustomKey
_nicknameDetectionRegexes
_nicks
_noCloudFakeBackingKVStore
_noCoreNLPTokenizer
_noEngagement
_noTimeFormatter
_normalizedValue
_notificationCenterToken
_notificationQueue
_nrpns
_numberArrayValue
_numberOfLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
_numberOfLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
_numberOfMailsViewedBeforeSinceAvailable
_numberOfMoreRecentUnreadMessageAtFirstViewTime
_numberOfPredictedAttachmentOnLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
_numberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
_numberOfUnreadMessageAtFirstViewTime
_numberValue
_observersFrozen
_offsetInFile
_opQueue
_operatingSystemVersion
_operation
_operationsToAddToOpQueue
_optimizeAndAddCNContactIdentifier:
_optimizedBuffer
_otherDetailsWithNoContact
_outcome
_outputConfig
_outputItems
_outputMapping
_outstanding
_overrideDataDetectorSignatureForTesting
_pagesToVacuum
_paragraphWithContent:range:exceedsLineLimit:orCharacterLimit:
_parentDomainsForDomain:
_parentEntityType
_parentKey
_parentMessagesLimit
_parsecDomain
_parsecWikidataQid
_partialDate
_pas_componentsJoinedByString:
_pas_enumerateChunksOfSize:usingBlock:
_pas_filteredArrayWithIndexedTest:
_pas_filteredArrayWithTest:
_pas_leftFoldWithInitialObject:accumulate:
_pas_mappedArrayWithIndexedTransform:
_pas_mappedArrayWithTransform:
_pas_mappedSetWithTransform:
_pas_proxyArrayByAppendingArray:
_pas_proxyArrayReversed
_pas_proxyArrayUsingObjectAtIndexBlock:andCountBlock:
_pas_proxyArrayWithMapping:
_pas_proxyComponentsJoinedByString:
_pas_proxyStringByConcatenatingStrings:
_pas_retainsConmingledBackingStore
_pas_shuffledArrayUsingRng:
_pas_stringBackedByUTF8CString
_pas_stringWithDataNoCopy:encoding:nullTerminated:
_pas_unproxy
_path
_pattern
_patternData
_payloadOffset
_pendingMerge
_pendingProcessStateChanges
_pendingVerification
_peopleFromInteraction:
_perMessageTranformer
_performAction:onContactDetailRecord:confirmRejectUI:completion:
_performAction:onRecord:confirmRejectUI:completion:
_performAction:onRecord:withParentConfirmation:confirmRejectUI:completion:
_performCollectWeeklyStats:
_performHarvestedURLMetricUploadAcitivity:
_performIdentityAnalysisActivity:
_performMailIntelligenceTasksActivity:
_performMobileAssetMetadataDownloadActivity:
_performProcessPendingGeocodesActivity:
_performProcessPendingVerificationActivity:overrideVerificationStatus:
_performSendRTCActivity:
_performTrimActivity:
_performVacuumActivity
_persistenceTimerSource
_personCCRecipientsAge
_personCCRecipientsProbability
_personCCRecipientsStats
_personForCSPerson:
_personFromSenderAge
_personFromSenderInDyadicConversationAge
_personFromSenderInDyadicConversationProbability
_personFromSenderInDyadicConversationStats
_personFromSenderProbability
_personFromSenderStats
_personHandle
_personToRecipientsAge
_personToRecipientsProbability
_personToRecipientsStats
_personalNameMapping
_pet2Tracker
_phoneMapping
_phoneNumber
_phoneNumbers
_phonesSeenInContacts
_photoPath
_photoPathCustomKey
_plainText
_plainTextDetectedData
_plainTextSigRange
_pluginIdentifier
_plugins
_pmlTraining
_popBatchOfCNContactIds
_popMergeBlobForAnalysis
_popQueuedSerializedContactId
_pos
_positiveEngagement
_postalAddressComponents
_postalAddresses
_precomputationQueue
_predictedMissingElementScore
_predictedSaliency
_predictedSaliencyScore
_preferredUniqueIdentifier
_prefilter
_prematchedContactIdentifiers
_prepAndRunQuery:columns:dictionary:onError:
_prepQuery:onPrep:onError:
_prepareArguments:
_prepareToCopyFrom:toNewTableNamed:
_previousInteractionFromUserOnConversationInMinutes
_previousInteractionOnConversationInMinutes
_primaryICloudCalendarAccount
_privFullName
_privacyAwareLogsForMLExtractions:
_privacySaltFuture
_privateGroupsCount
_probablePriorPredictionInContext:predictedLabel:
_processBatchOfSerializedContactJobs
_processContactMatchWithContacts:matches:limit:masterEntityId:detailEntityId:contactEntityId:matchinfoData:tokens:requireName:
_processHistoricalDataRequestsForPluginIdentifier:result:
_processMessage:pipeline:context:harvestMetrics:
_processReservationInteractions:bundleId:completion:
_processSearchableItem:harvestMetrics:userAction:
_processingStateChanges
_procureSaltError
_profiles
_propertyName
_protectionClasses
_provider
_providerName
_prunePseudoContactGeneratingEmails:
_punctuationMapping
_purgeAndDeleteIdentifiersDropbox
_purgeDeletionDropBox
_purgeTokensWhichLastUpdateWasBefore:shouldContinue:usingDatabase:
_purgeableNLTaggerWithNameTagging:
_purgeableNSLinguisticTaggerWithTagSchemes:
_pushValuesForContact:usingDomain:subdomain:type:action:extraSignature:
_quality
_queryForAllContactsWithLimit
_queue
_queuedOperations
_quotedRegionsCached
_range
_rankSGContacts:bySimilarityToContact:
_ratioToConsiderATokenAsExtremelyDiscriminant
_ratioToConsiderATokenAsHighlyDiscriminant
_readCurrentColumnsUncached
_readyForNewEntities
_realtimeContactFromPseudoContact:andFeatures:assimilatingMatchingCuratedContacts:
_realtimeContactWithContactStore:forPseudoContact:fromEntity:normalizedName:error:
_receivedOnBattery
_recentlyDeletedEmailKeys
_recentlyHarvestedDetailLock
_recipient
_recipientConservative
_recipientConservativeDetectionRegexes
_recipientDetectionRegexes
_recipients
_recordConversationTurnWithDetail:received:throughApp:withStore:
_recordExtractionEventFromSource:foundInSignature:isDDSignature:detailType:outcome:foundInCNContact:modelVersion:isUnlikelyPhone:sigSource:
_recordExtractionOutcome:detailType:fromMessage:foundInSignature:isDDSignature:detailType:detailValue:modelVersion:isUnlikelyPhone:
_recordId
_recordIdsFromRemovingSpotlightReferencesWithBundleIdentifier:uniqueIdentifiers:
_recordPseudoContactsWithDeletedDetailsInTable:deletedChildrenTable:
_recreateCorruptDatabase:sharedLock:withProtection:
_recycleColumn:asColumn:
_regexBelongsToSender
_regexDoesNotBelongToSender
_regexLanguage
_registerForCTSIdentityAnalysisActivity
_registerForCTSSendRTCActivity
_registerForCTSTrimActivity
_registerForCTSVacuumActivity
_registerForCollectWeeklyStats
_registerForContactDetailCacheRebuildActivity
_registerForLockStateChange
_registerHarvestedURLMetricUploadActivity
_registerMailIntelligenceTasksActivity
_registerMobileAssetMetadataDownloadActivity
_registerProcessPendingGeocodesActivity
_registerProcessPendingVerificationActivity
_registered
_regularCount
_reimportFromBundleId:protectionClasses:identifiers:
_reimportQueryForPersonHandle:startDate:endDate:requestId:
_rejectReminderByRecordId:completion:
_remRemindersAssociatedWithStorageReminder:remStore:
_remRemindersAssociatedWithTitle:sourceUniqueIdentifier:usingStore:
_reminder
_reminderEnrichmentWithTitle:dueDateComponents:dueLocationType:dueLocation:dueLocationTrigger:sourceURL:reminderStatus:parentEntity:parentMessage:allDay:
_reminderEnrichments
_reminderInputMapping
_reminderMessageForTextMessage:withEntity:extractionModel:processingLanguage:preprocessing:
_reminderOutputMapping
_reminderOverrides
_reminderStore
_reminders
_remindersFoundInAppsListInREMStore:
_remindersObservers
_removeColumnFromTotal:
_removeCorruptionMarker
_removeEKEvent:store:commit:
_removeEvent:commit:
_removeSnippetsForEmails:
_removeUnwantedContactDetails:entity:
_renameTable:to:
_replyDraftStarted
_replyTo
_reportDbStatsBackground
_requestId
_requestedFetchNewEntitiesWhileRequestAlreadyInFlight
_reservationContainerReference
_reservationItemReferences
_resetCachesAndModels
_resolveCandidatesForJSDict:
_result:containsTypes:
_result:containsTypes:foundTypes:
_reverseTemplateJSNoXPC
_rng
_rollbackedEmailsCountToComplyToPostDeletionPolicy
_rollbackedSlicesCountToComplyToPostDeletionPolicy
_rolloutIdentifiers
_rotateIfNecessary
_rpns
_rtRoutineManager
_runInitMigrationTasks:noMigrate:
_runJournal
_runWithEKEventStore:
_saliencyOverrideFeatureLowerBounds
_saliencyOverrideFeatureNames
_saliencyOverrideFeatureUpperBounds
_saliencyOverrideOutputs
_saliencyOverrideRules
_saliencyPredictionPerformanceInMilliSeconds
_salientCount
_salientPredictedAsIgnorable
_salientPredictedAsNeutral
_salientPredictedAsSalient
_salt
_saltAtomicReferenceId
_saltUsesManatee
_saveReminder:usingReminderStore:
_scanners
_schemaOrg
_schemaVersion
_scoreContactDetail:
_scoreSGContact:bySimilarityToContact:cnContactFullname:
_scrolledToEnd
_selectingDomainsForDomainIdentifier:
_sendChatChangedNotificationWithDomainIdentifier:
_senderConnectionScore
_senderDisplayName
_senderID
_senderIsAccountOwner
_senderIsBusinessChat
_serialNumber
_serialQueue
_serializeRange:
_serialized
_serializedContactsLimit
_service
_sessionDescriptor
_setAVFoundationEnabled:
_setAllowUniversalAccessFromFileURLs:
_setAllowsJavaScriptMarkup:
_setDOMPasteAllowed:
_setEnabledTopics:
_setHashes:forKey:
_setInteraction:donate:
_setInternalStateAccordingToKVS:
_setJavaScriptCanAccessClipboard:
_setLegacyEncryptedMediaAPIEnabled:
_setLoadsImagesAutomatically:
_setMediaDevicesEnabled:
_setPeerConnectionEnabled:
_setRemotePlaybackEnabled:
_setScreenCaptureEnabled:
_setShouldEnableTextAutosizingBoost:
_setStorageBlockingPolicy:
_setTextAutosizingEnabled:
_setTrieFromPath:guardedData:
_setWebAudioEnabled:
_setterForProperty:
_settingsChangeToken
_setupHistoryObserver:
_sgDb
_sgToCNContactsCacheUpdateAdapter
_sg_fetchEKEventsForPseudoNLEvent:title:participants:
_sgmiFeatureStore
_sharedInstanceConfigurationQueue
_sharedWriteLock
_sharedWriterLock
_shouldContinueReindex:
_shouldDissectContentWithUniqueIdentifier:domainIdentifier:bundleIdentifier:headers:accountIdentifier:
_shouldProcessMessage:entity:
_shouldProcessSearchableItem:
_shouldSampleMessage
_showInFormatStringWithLocalization:
_signature
_signatureStatsLogging
_significantWork
_signpostId
_simpleCandidateForOutputName:label:withError:
_size
_sizeFactor
_slowCopyFromTable:toTable:startingAtEntityId:
_snippetDb
_snippetDbPath
_snippetsJournal
_snippetsMigrations
_snippetsVersion
_socialProfile
_socialProfileIdentifiers
_sourceKey
_spotlightContactsAdapter
_spotlightIdentifier
_spotlightReindexCount
_spotlightReindexQueue
_spotlightUidsForAppleMailMessageIds:
_stackItem
_standardMailRulesProbability
_standardMailRulesStats
_start
_startDate
_startUTCOffsetSeconds
_state
_stats
_std
_store
_storeAndGeocodeEntity:spotlightBundleIdentifier:spotlightUniqueIdentifier:spotlightDomainIdentifier:store:afterCallbackQueue:finalize:
_storeCreationDate
_str
_strictLowerBound
_strictUpperBound
_stringArrayValue
_stringForFeatureName:
_stringFromMemoryPressureStatus:
_stringValue
_structuredEventInputMapping
_structuredEventOutputMapping
_subModelsStatsWithShouldContinueBlock:usingDatabase:
_subject
_subjectContentAge
_subjectContentProbability
_subjectContentStats
_subjectCountStatsProbability
_subjectCountStatsStats
_submodeledFeature
_submodels
_submodelsProbabilities
_submodelsPruningForCappingPolicyPerformanceInMilliSeconds
_submodelsUpdatePerformanceInMilliSeconds
_subregexps
_suggestionsFromMessage:options:dissectIfNecessary:completionDelivery:completionHandler:
_suggestionsFromSearchableItem:options:dissectIfNecessary:withCompletion:
_supervision
_supportedProviders
_surname
_suspendCount
_syncToken
_tableName
_tableNameEscaped
_tagNaturalLanguageEnrichmentsForEntity:
_taggedCharacterRanges
_taggedCharacterRangesCached
_tags
_tagsLock
_tagsSnapshot
_tail
_targetMapping
_targetString
_taskForActivity:
_tasks
_tellObserversHashesDidChange
_templateName
_templateShortName
_testReminder:entity:
_text
_textConsumers
_textContent
_textContentLanguageIdentifierCached
_textMessage
_threshold
_time
_timeBeforeViewStartSinceAvailable
_timeDifferenceFromReceptionToSaliencyInferenceInSeconds
_timeRange
_timeoutTimer
_timestamp
_title
_titleFromMessagesSynthesizedTextContent:
_toStatus
_tofuRegions:utf8:isAOSPMail:
_token
_tokenToIgnore
_tokenizerInstance
_tokenizerModule
_tombstoneExistsForBundleIdentifier:
_totalNumberOfEmailsProcessedForAttachmentDetectionRoundedToClosestMultipleOf20
_totalNumberOfEmailsProcessedForFollowUpDetectionRoundedToClosestMultipleOf20
_totalNumberOfEmailsProcessedForRecipientDetectionRoundedToClosestMultipleOf20
_totalPayloadSize
_tradToInversionRate
_tradToTrie
_transaction
_transformer
_treatmentId
_triClient
_trialEventClassifierModelPath
_trialEventClassifierThreshold
_trialMessageProcessingLimit
_trialMetadata
_trialRateLimitInterval
_trie
_trigger
_triggerOptional
_trimSerializedContacts
_trustCoreNLP
_type
_unarchiveFrom:to:
_uncompressModelAtPath:toPath:
_unigramQueriedTokensCount
_unigramTokenCounts
_unigramTokensCount
_uniqueGoodDetailMatchFrom:toDetails:nonUnique:
_uniqueId
_uniqueIdentifier
_uniqueIdentifiers
_unlikelyPhoneSamplingRate
_unlocked
_unoptimizedIdentifiers
_unregisterForLockStateChange
_updateEKEvent:withEvent:ekStore:error:
_updateEvent:withValuesFrom:ekStore:
_updateEventMetadataInModifiedEvent:withExistingCheckInShortcutInOriginalEvent:ifTeamIdentifierIsDifferentInStorageEvent:
_updateLocationTypeFromInteractionsSummaryForEventKey:locationType:
_updateQueue
_updateSchemaVersion
_updateSource
_updateTimerIsSet
_updateTimerQueue
_updateTimerSource
_updateURLs:stmt:
_urlContainerFromText:documentDate:documentTitle:handle:isOutgoingDocument:uniqueIdentifier:domainIdentifier:bundleIdentifier:
_urlDissector
_urls
_useCase
_useSpotlightDataForMissingBiomeData
_userReplied
_username
_usesDataProtection
_uuid
_vCardsDirectoryURL
_validateDueDateComponents:dueLocation:forReminderMessages:
_value
_valueRange
_valueString
_verificationLock
_vips
_waitForMigrations
_wasKnownContact
_wasSuggestedContact
_weakStore
_webView
_when
_wildcardsMatches
_windowLength
_withBiomeData
_writeContactDetails:
_writeContactEntityToJournal:
_writeEnrichmentToDb:
_writeEnrichmentToSnippetsDb:
_writeEntityParentageFor:entityId:
_writeEventEntitiesToJournal:
_writeEventEntityToJournal:
_writeFTSTermsForEnrichment:entityId:
_writeJournalCommand:blob:
_writeLabeledBlobs:deletedMasterEntityIds:
_writeMergeBlobSnapshotForAnalysis:
_writeMessageEntityToDb:
_writeMessageEntityToSnippetsDb:
_writeOneEntityToDb:
_writeReminderEntitiesToJournal:
_writeTransactionDepth
_written
_xWrote:utf8:
_xpcActivityManager
_xpcConnection
_zeroColumn:
aa_isAccountClass:
abbreviation
absoluteRange
absoluteString
absoluteTimestamp
accessCriteriaUsingBundleIdentifierBlock:domainSelectionBlock:incontrovertiblyDeletedUniqueIdentifiersBlock:purgedUniqueIdentifiersBlock:
accountHandles
accountIdentifier
accountInfo
accountInfoWithCompletionHandler:
accountProperties
accountStatus
accountType
accountWithIdentifier:
accountsStoreDidChange:
accountsWithAccountTypeIdentifiers:error:
accuracy
acquireDissectorLock
actionVerbOptional
active
activeAggregatedAccuracyLogForThePastFourWeeks
activeAggregatedAccuracyLogSinceModelInitialization
activeTrialMetadata
activityForActivityId:
activityType
add:
addAddressBookObserver:forObjectLifetime:
addAlarmWithTrigger:
addAsync:
addBirthdayEnrichment:
addCNContactIdentifier:
addCalendarObserver:
addCalendarObserver:forObjectLifetime:
addCharactersInRange:
addColumn:
addContact:
addContactsObserver:
addContentAdmissionObserver:
addCreateZoneAttemptOperationWithRetries:
addCreateZoneOperation
addCtsJobConstraints:
addDeallocNotification:
addDeleteAndRecreateZoneOperation
addDeleteZoneAttemptOperationWithRetries:
addDeleteZoneOperation
addDeletion:domainSelection:
addDeletion:uniqueIds:
addDependency:
addDetailsFromOriginatingCalendarEntity:
addDetailsFromOriginatingContactEntity:
addDetailsFromOriginatingGenericEntity:
addDetailsFromOriginatingInteractionEntity:
addDetailsFromOriginatingMessageEntity:
addDetailsFromParticipantsOfEntity:
addDetectedBirthday:forIdentity:context:contextRangeOfInterest:extractionInfo:
addDetectedEmailAddress:forIdentity:context:contextRangeOfInterest:extractionInfo:
addDetectedInstantMessageAddress:forIdentity:context:contextRangeOfInterest:extractionInfo:
addDetectedPhoneNumber:forIdentity:context:contextRangeOfInterest:extractionInfo:
addDetectedPostalAddress:forIdentity:context:contextRangeOfInterest:extractionInfo:
addDetectedSocialProfile:forIdentity:context:contextRangeOfInterest:extractionInfo:
addDetection:forIdentity:extractionInfo:
addDomain:
addDomainsFromSelection:
addEmailAddressEnrichment:
addEnrichment:
addEnrichmentForEvents:forMessage:toEntity:
addEnrichmentForEvents:toEntity:message:context:timingProcessingInMs:
addEnrichmentsToEntityForOutputItems:exceptions:jsMessageLogs:interaction:entity:startTime:backPressureHazard:
addEntries:
addEntriesFromDictionary:
addEntry:
addEvent:
addEvent:commit:
addEvents:
addExternalEnrichment:
addFetchNewEntitiesAttemptOperationWithRetries:
addFetchNewEntitiesOperation
addIndex:
addIndexes:
addIndexesInRange:
addInstantMessageAddressEnrichment:
addInteractionTagsToEnrichment:inEntity:interaction:
addInteractions:bundleID:protectionClass:
addInteractions:bundleId:completion:
addInterdictFrom:with:
addItem:
addItemProp:
addLocations:
addMailAttachmentHistogram:
addManateeSanityCheckOperation
addMessage:
addMissingAttachment:
addMissingRecipient:
addObject:
addObjectsFromArray:
addObserver:forKeyPath:options:context:
addObserver:forObjectLifetime:
addObserver:selector:name:object:
addObserverForName:object:queue:usingBlock:
addOperation
addOperation:
addOperationWithBlock:
addOperations:waitUntilFinished:
addOrReplaceEventEnrichment:
addOrReplacePreferredEnrichment:
addOrUpdateSearchableItems:bundleID:
addParams:toParameterizedString:
addParams:toParameterizedString:allowAlternatives:
addPathToFutureDbSchemas:
addProcureSaltAttemptOperationWithRetries:
addProcureSaltOperation
addProfile:
addPurge:uniqueIds:
addRecipientDetailsFromOriginatingMessageEntity:entity:store:
addReminder:
addReminderWithTitle:toListChangeItem:
addRemindersObserver:
addSchemaAsEnrichment:inMessage:parentEntity:eventClassification:mlDefaultExtraction:
addSearchableItemMetadata:htmlData:completion:
addSearchableItems:completion:
addSessionForTrainingWithSource:label:language:objective:spotlightRef:embeddedFeaturizer:
addSessionWithCovariates:label:sessionDescriptor:spotlightReference:isInternal:
addSnippetIfNotExistsFromContentOfEntity:
addSocialProfileEnrichment:
addSpotlightReferenceToEmailIfFullyDownloaded:withBundleIdentifier:uniqueIdentifier:domainIdentifier:
addSpotlightReferenceToEmailRecordId:withBundleIdentifier:uniqueIdentifier:domainIdentifier:
addStats:
addSubmodelStatsToLog:
addSuggestHistoryObserver:
addTaggedCharacterRanges:
addTextMessageItem:
addUpdateHandlerForNamespaceName:usingBlock:
addUserAction:withItem:
addValueForScalarKeyWithDomain:subdomain:suffix:action:value:
addWriteOperationForRecordGetter:deleteGetter:withRetries:
addWriteOperationForRecordGetter:deleteGetter:withRetries:isFirstTry:
additionalRecipients
address:forIdentity:parent:curated:context:contextRangeOfInterest:extractionInfo:
addressComponentThreshold
addressDictionaryForAddressComponents:
addressDictionaryToString:
addressItemsFromEmailString:
addressMapping
addressTags
addresses
ageOfTheSubmodelInDays
aggregateKeyForKeySuffix:
aggregateSummaryBucketizedLaunchCountForApp:afterDate:
airlineFromFlightSchema:
airportCode
airportCodeForAirportName:flightCarrier:flightNumber:otherKnownFlightsToAirport:outputInfos:
airportCodeForAirportName:flightCarrier:flightNumber:outputInfos:
airportFromAirportSchema:
airportIataCodes
airportIataCodesForDataOffset:
airportNameNoiseKeywords
airportsServicedByCarrier:flightNumber:
airportsServicedByCarrier:flightNumber:withDataOffset:andFileHandle:
allContactsMasterEntityIdsLimitedTo:
allContactsWithEntityType:
allContactsWithSnippets:limitTo:
allContactsWithSnippets:limitTo:withCompletion:
allDay
allDayDateComponentsFromDate:
allDeliveriesWithLimit:
allDeliveriesWithLimit:withCompletion:
allDomains
allEntitiesOfType:limitedTo:
allEntitiesOfType:limitedTo:onlyMLExtractions:
allEventsLimitedTo:withCompletion:
allFeaturePrettyNames
allMessages
allNames
allObjects
allPseudoContacts
allRecipients
allRemindersLimitedTo:
allRemindersLimitedTo:withCompletion:
allVIPEmailAddresses
allVIPWaitForResult
allValues
allocWithZone:
allowAgeBasedPruning
allowAnyDomainForMarkup
allowGeocode
allowMessageEventDissector
allowNaturalLanguageDissector
allowUnverifiedSourceForMarkup
alphanumericCharacterSet
alwaysShowCancelledEvents
analyzeBody:forLanguage:forDate:withCustomTimeRange:
analyzeFeatureVector:
analyzeForFollowUpMailWithBody:isSent:messageId:date:
analyzeIncomingMailFeatureVector:
analyzeMergeBlobs:
analyzeOutgoingMailFeatureVector:
andPredicateDescriptorWithDescriptors:
andPredicateWithSubpredicates:
annotateContent:withLabel:forMatchingString:
annotationMatchingStringsForSubject:
annotationType
annotationTypeFromString:
annotationTypeUniqueIdentifier
anyEmailAddressIsSignificant:
anyHandleIsSignificant:
anyObject
app:performedAction:onContacts:withResult:elapsedTime:
app:performedAction:onEvents:withResult:elapsedTime:
appAsString:
appInFocusStream
appLinksWithURL:limit:includeLinksForCurrentApplication:error:
appendBytes:length:
appendData:
appendFormat:
appendString:
appleAnchorHrefs
appleMailMessageId
appleMailMessageId:fromSource:
applicationRecordsForUserActivityType:limit:error:
applicationState
applyAdjustmentIfSane:
applyCappingPolicy:byDiscardingTokensCounts:withMargin:
applyCappingPolicy:shouldContinue:
approximateTimeForDataDetectorResult:
apsEnvironmentStringForContainer:
archivedDataWithRootObject:requiringSecureCoding:error:
areHumanHeaders:
areKeysAvailable:
areModelsAvailableInLanguage:
areSubModelsEmpty
areSubmodelsEmpty
argMaxForLastOutput:
argMaxForOutputIndex:index:shape:
argMaxForSequence:
array
arrayByAddingObject:
arrayByAddingObjectsFromArray:
arrayForKey:
arrayWithCapacity:
arrayWithContentsOfFile:
arrayWithObject:
arrayWithObjects:count:
arrivalActualTime
arrivalAirporGateFromFlightSchema:
arrivalAirport
arrivalAirportDescription
arrivalAirportGate
arrivalBoatTerminalLocation
arrivalBusStopLocation
arrivalGate
arrivalPublishedTime
arrivalStationLocation
asCSPerson
asDictionary
asJsonLd
asset
assetVersion
assetVersion:
assetVersionsForMLMessageEvent
asyncQueue
attachment
attachmentDetectionRegexes
attachmentFilename
attachmentLinkDetection
attachmentLinkDetectionRegex
attachmentWithType:filename:path:
attachments
attachmentsFromBiomeAttachments:
attachmentsFromSearchableItem:
attachmentsProbability
attachmentsStats
attendee
attendeeEmailAddresses
attendees
attributeForKey:
attributeSet
attributes
attributesForNameWord:
attributesOfFileSystemForPath:error:
attributesOfItemAtPath:error:
auditToken
author
authorFirstname:
authorMatchingContacts
authorMatchingContactsKeys
authorName:
authorNickname
automaticGeocodingEnabled
automaticallyNotifiesObserversForKey:
autorelease
autoreleasingSerialQueueWithLabel:
autoreleasingSerialQueueWithLabel:qosClass:
background
backgroundAggregatedAccuracyLogForThePastFourWeeks
backgroundAggregatedAccuracyLogSinceModelInitialization
backgroundTrialMetadata
backpressureHazard
backward
backwardToString:consume:
backwardWhile:
base64EncodedDataWithOptions:
baseAttachmentFrom:includingEvents:withRanges:
baseInteractionDictionaryForInterface:actionType:
baseModelName
baseURLStrings
batch:
batchOf:contactsStartingAtEntityId:
bccHandles
bestLanguageID
bestLocalizedNameForAirport:
bestName:
bestProfile
bi_lstm_0_c_in
bi_lstm_0_c_in_rev
bi_lstm_0_c_out_rev
bi_lstm_0_h_in
bi_lstm_0_h_in_rev
bi_lstm_0_h_out_rev
bigramFeature
bigramQueriedTokensCount
bigramTokenCounts
bigramTokensCount
bindCheckContactRow:isMe:
bindNamedParam:toBlock:
bindNamedParam:toDouble:
bindNamedParam:toDoubleAsNSNumber:
bindNamedParam:toInt64:
bindNamedParam:toInt64AsNSNumber:
bindNamedParam:toInt64AsNonnullNSNumber:
bindNamedParam:toInteger:
bindNamedParam:toNSArray:
bindNamedParam:toNSData:
bindNamedParam:toNSDictionary:
bindNamedParam:toNSIndexSet:
bindNamedParam:toNSSet:
bindNamedParam:toNSString:
bindNamedParam:toNonnullNSString:
bindNamedParamToNull:
bindParam:name:double:
bindParam:name:int64:
bindParam:name:int:
bindParam:name:nsdata:
bindParam:name:nsstring:
bindParam:toDoubleAsNSNumber:
bindParam:toInt64:
bindParam:toInt64AsNSNumber:
bindParam:toNSData:
bindParam:toNSString:
bindParam:toNonnullNSString:
bindParamToNull:
bindParamToNull:name:
bindStatementsForCommit:storageEvent:
biomeAggregationPerformanceInMilliSeconds
biomeMessageIdByPersistentId
biomeSummaryByMessage
biosBasedAnnotation:usingTags:forSection:
birthday
birthday:forIdentity:context:contextRangeOfInterest:extractionInfo:
birthday:forIdentity:parent:curated:context:contextRangeOfInterest:extractionInfo:
birthdayCongratsTextMessage:andLanguage:andHealthStore:
blockOperationWithBlock:
blockedWarningCount
boardingTime
boatName
boatNumber
boatTrip
body
bodyAnalysisSamplingFactor
bookingTime
bookingTimeFromReservationSchema:
boolForKey:
boolValue
booleanValue
bucketerWithEqualityTest:
bucketerWithLabeledBuckets:
bucketerWithMapping:
bucketizeInteger:withBucketSize:limit:
bucketizeIntegerForAggregateSummary:
bucketizeWithSize:
bucketizedRemindersCreatedAfterDate:endDate:
bucketsNames
bumptTTLForNLEvent:
bundleID
bundleId
bundleIdentifier
bundleIdentifiers
bundleRecord
bundleRecordWithBundleIdentifier:allowPlaceholder:error:
bundleWithIdentifier:
busNumber
bytes
cacheHit
cacheOfType:
cachedFeature:
cachedResultForKey:generateResult:validateResults:
cachedSalt
cachedSaltLegacyManatee
calculateCurrentLanguagesFromPreferredLocaleCodes:
calculateLangResolutionOrder
calendar
calendarAppUsageLevel:
calendarItemsWithExternalIdentifier:
calendarWithIdentifier:
callStatus
callWithArguments:
callerIdForDisplay
calscale
canBeConvertedToEncoding:
canConvertToSchemaOrg
canMerge:
canStoreEventsForAccountType:
cancel
cancelAllOperations
cancelEvent:
cancelEvent:commit:
cancelEvents:
cancelUpdateTimer
cancelled
candidateNameRange
candidatesForLabelIndexSets:inPlainText:forTaggedCharacterRanges:
candidatesForLabelTokenIndexes:inPlainText:
candidatesForLabelTokenIndexes:inPlainText:forTaggedCharacterRanges:
candidatesForLabelsWithPlainTextIndexSets:inPlainText:
candidatesForPlainTextIndexSet:inPlainText:
capitalizedString
cappedDeliveryEntityCountsCreatedBetweenStartDate:endDate:
cappedDeliveryEntityCountsCreatedBetweenStartDate:endDate:store:
carrierCode
carrierEntryForKey:
carrierIataCodeForCarrierName:
carrierIataCodes
carrierName
carrierPhoneNumber
caseInsensitiveCompare:
caseInsensitiveContainsString:inCandidates:
category
categoryAsString:
categoryDescription
categoryForCategoryString:
categoryForSchema:
categoryTagWithCategoryType:
categoryType
categoryTypeAsString:
ccHandles
changeCallback
changeHistoryWithFetchRequest:error:
changeLanguageOrPatternData
changeType
changesTruncated
characterAtIndex:
characterIsMember:
characterMapping
characterSet
characterSetWithCharactersInString:
checkExistsEventForDuplicateKey:
checkExistsSaliencyForMessageId:
checkResourceIsReachableAndReturnError:
childrenFromParentKey:
city
cityForIataCode:
cjkSpacerCharacters
cjkSpacersToWhiteSpace:
ckErrorForRecordId:inError:
class
classificationOfflinePrecision
classificationOfflineRecall
classificationParams
classificationThreshold
classifierWithEspressoModelFile:
cleanCandidates:outputName:label:
cleanExperimentModelsFromTrialModelsFolder
cleanLegacyModelsDirectoryOfModelsNamed:
cleanModelAssets
cleanModelsDirectoryOfModelsNamed:
cleanName:
clear
clearAllRegexCaches
clearAllTables
clearAllTombstonesForSpotlightReferencesIf:
clearBucketForDate:
clearBucketsForDates:
clearCache
clearCaches
clearCachesFully:withCompletion:
clearChangeHistory:
clearContactAggregator
clearContactAggregatorConversation:
clearContactsWithConversationIdentifier:
clearConversationCache
clearConversations
clearCtsJobConstraints
clearDatabase:
clearDatabases
clearErrors
clearKVStoreTable
clearLocations
clearMailAttachmentHistograms
clearMailIntelligence
clearMailIntelligenceSaliencyDetection
clearMasterEntityCache
clearMeContactCache
clearMissingAttachments
clearMissingRecipients
clearNicknameMappingTable
clearNoContactsCache
clearRequestCache
clearSaliencyTable
clearSignatureStatsTable
clearStats
clearSubModelsTables
clientIsMail
clientIsMessages
clientName
clientWithIdentifier:
close
closeDatabases
closeFile
closePermanently
cloudKitPersistedState
cloudKitSync
cnContactIdentifier
cnContactIdentifiersSpotlightQueryStringForContact:
cnContactMatchesForRecordId:found:
cnContactMatchesForRecordId:withCompletion:
cnContactMatchesForRecordIds:withCompletion:
coalesceAddress:orAppendMatch:
code
columnQueryPrefixSelect
combinedSuggestions
commitContactDetail:
commitDomainsAndCounts:toColumn:
commitDomainsCountedSet:toColumn:
commitEvent:
commitExtractionInfo:
commitNaiveBayesModel:probabilityFeatureName:
commitNaiveBayesModel:probabilityFeatureName:updateDate:
commitSpotlightMapping:bundleIdentifier:domainIdentifier:uniqueIdentifier:
commitStorageLocation:
commitStorageLocation:withEventId:
commitStorageReminder:
commitTag:
commitTemporaryFile
commitToStore:updateDate:
commitWithStore:
compare:
compare:options:
compareContact:cnContact:newDetails:matchedDetails:matchPreference:
compareContact:cnContact:stopOnNewDetail:stopOnMatchedDetail:matchPreference:
completeWithResult:error:
completer
completionDate
completionDateTimestamp
component:fromDate:
componentForKey:
componentKeys
componentName
components
components:city:state:postalCode:country:
components:fromDate:
components:fromDate:toDate:options:
componentsInTimeZone:fromDate:
componentsJoinedByString:
componentsSeparatedByCharactersInSet:
componentsSeparatedByString:
compositeHash
compress:lowMemory:
computeBlobs
computeContactPriorsForContactIdentifiers:withTimeConstant:withInteractionMechanisms:asOf:overLookbackOf:
concatPathWithPrefix:suffix:extra:
concurrencyBehavior
confidence
confidenceScore:
config
configureMigratorThenMigrateToVersion:
confirm:orRejectContactByRecordID:error:
confirmContact:confirmRejectUI:completion:
confirmContactDetailByRecordID:error:
confirmContactDetailRecord:confirmRejectUI:completion:
confirmEvent:
confirmEvent:completion:
confirmEventByRecordId:completion:
confirmEventByRecordId:error:
confirmEventFromOtherDevice:
confirmEventFromThisDevice:
confirmFieldValues:forEntity:
confirmFieldValues:forStorageEvent:
confirmHashesForOpaqueKey:withCreationTime:forMatching:
confirmHashesForOpaqueKeyWithoutTimestamp:forMatching:
confirmHashesForRemindersOpaqueKey:withCreationTime:forMatching:
confirmOrRejectContact:
confirmOrRejectDetail:forContact:
confirmOrRejectDetailHashes:
confirmOrRejectRecordForContact:
confirmRealtimeContact:error:
confirmRealtimeEvent:error:
confirmRealtimeReminder:completion:
confirmRecord:confirmRejectUI:completion:
confirmReminder:
confirmReminderByRecordId:completion:
confirmReminderByRecordId:error:
confirmReminderFromExternalDevice:
confirmReminderFromThisDevice:
confirmStorageEvent:
confirmStoredEvent:error:
confirmStoredReminder:error:
confirmationOptional
confirmationOptionalTokens
confirmedEventFieldHashes
confirmedEventHashes
confirmedEventWithoutTimestampFieldHashes
confirmedEventWithoutTimestampHashes
confirmedFieldValuesForEntity:
confirmedFieldValuesForEvent:
confirmedReminderHashes
conformsToProtocol:
connection:channelSubscriptionsFailedWithFailures:
connection:didChangeConnectedStatus:
connection:didFailToSendOutgoingMessage:error:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didReceivePublicToken:
connection:didReceiveToken:forInfo:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didSendOutgoingMessage:
connectionDidReconnect:
conservativeRecipientDetection
constructNotesForReminder:
consumeInteractionWithContext:
consumeMailContentWithContext:
consumeMessagesContentWithContext:
consumeRemindersContentWithContext:
consumerName
contactAggregator
contactConfirmed:inApp:
contactContainsEphemeralId:
contactDetail
contactDetail:
contactDetail:label:type:recordId:duplicateKey:sourceKey:context:extractionInfo:
contactDetailAsString:
contactDetailEntityIdForDuplicateKey:
contactDetailFromEntity:
contactDetailKey
contactDetailPrimaryKeyForDuplicateKey:
contactDetailsWithType:
contactEntityFromEntity:
contactEntityWithTitle:duplicateKey:recordId:masterEntityId:
contactFromContactEntity:
contactFromRecordId:withCompletion:
contactHashes
contactIdentifier
contactIdentifier:
contactIdentifierFromSuggestionID:
contactIdsMergedWithMasterEntityId:
contactInformationExtracted
contactIsDisplayable:
contactIsSignificant:
contactIsSignificant:usingCoreRecents:
contactIsSignificantOrSignificanceIsDisabled:
contactIsSignificantOrSignificanceIsDisabled:usingCoreRecents:
contactMatchedRecordTypeFromEntityType:
contactMatchedRecordTypeFromIdentityKeyType:
contactMatchesByEmailAddress:withCompletion:
contactMatchesByPhoneNumber:withCompletion:
contactMatchesBySocialProfile:withCompletion:
contactMatchesWithContact:limitTo:withCompletion:
contactMatchesWithContactIdentifier:limitTo:withCompletion:
contactMatchesWithContactIdentifiers:limitTo:withCompletion:
contactMatchesWithFullTextSearch:limitTo:withCompletion:
contactMatchesWithMessagingPrefix:limitTo:withCompletion:
contactRejected:inApp:
contactSharingNegativeSamplingRate
contactStore
contactSuggestionImpressionsViaBanner:
contactWithId:name:emailAddresses:phones:postalAddresses:socialProfiles:
contactWithId:name:emailAddresses:phones:postalAddresses:socialProfiles:birthday:photoPath:
contactWithMasterEntityId:
contacts
contactsFoundOnDeviceEnabled:
contactsFromEntity:
contactsSuggested:withElapsedTime:inApp:
contactsWithIdentifiers:
container
containsDetailSuggestions
containsEntityExtraction:
containsIndex:
containsNonCuratedData:
containsSuggestions
contentAdmissionBlocklistDidChange:
contentCreationDate
contentHash
contentLength
contentProtection
contentRangeOfInterest
contentURL
contentsOfDirectoryAtPath:error:
contextRange
contextRangeOfInterest
controlCharacterSet
conversationForIdentifier:
conversationForSenderID:
conversationIdentifier
conversationProbability
conversationStats
conversationWithIdentifier:
conversations
convertLineEndingsToNetwork:
convertToContact:
convertToContact:sourceEntity:enrichments:
convertToEventWithOrigin:
coordinate
copy
copyCriteria:
copyDateWithNewComponents:
copyReconstructedAdditionalRecipients
copyReconstructedAuthors
copyReconstructedPrimaryRecipients
copyWithZone:
core
coreRange
coreSpotlightAttributeSetForContact:
corruptionMarkerFilename
corruptionMarkerPath
corruptionMarkerPathForPath:
corruptionMarkerPresent
count
count128KBTo512KB
count32KBTo128KB
count8KBTo32KB
countByEnumeratingWithState:objects:count:
countForColumn:domain:
countOver2MB
countUpTo8KB
countryCode
countryCodeFromLanguageCode:
counts
createAfter:onCreate:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
createEnrichmentWithMatch:onParentEntity:
createFileAtPath:contents:attributes:
createInteractionSummaryForEventKey:expirationDate:interactionKey:interactionAttributes:rtcCategory:
createLaunchIntentForStorageEvent:
createNewSearchableItem
createNewSearchableItemWithSource:uniqueIdentifier:domainIdentifier:
createSubscriptionWithRetries:
createTableNamed:inDatabase:
createWithImmediateResult:
createWithImmediateResult:error:
creationDate
creationTimestamp
ctsJobConstraints
ctsJobConstraintsAsString:
ctsJobConstraintsAtIndex:
ctsJobConstraintsCount
cumulatedSubmodelsRollbackForPostDeletionPolicyPerformanceInMilliSeconds
curatedContactsFromContactStore:matchingPseudoContact:error:
curatedEventKeyForExactMatchOfPseudoEvent:candidates:
curatedRecordIds
currentColumns
currentContext
currentEnvironment
currentHandler
currentLanguages
currentLocale
currentModelURLForModelName:
currentOsBuild
currentRunLoop
currentThread
customIdentifier
customResponsesAfterPruning
daemonExitWithCompletion:
data
dataDetector
dataDetectorAdditions
dataDetectorMappedAdditions
dataDetectorMatches
dataDetectorMatchesForTokenIndexes:dataDetectorMatches:allowDatesInPast:allowTimeOffset:
dataDetectorMatchesWithSignature
dataDetectorWithTypes:error:
dataForKey:
dataForMessageWithIdentifier:error:
dataForOffset:
dataForOffset:includeTerminator:
dataForSearchableIndex:itemIdentifier:typeIdentifier:error:
dataOfLength:
dataTaskWithRequest:completionHandler:
dataTaskWithURL:completionHandler:
dataTransferByteCount
dataUsingEncoding:
dataUsingEncoding:allowLossyConversion:
dataWithBytes:length:
dataWithContentsOfFile:
dataWithContentsOfFile:options:error:
dataWithContentsOfURL:options:error:
dataWithJSONObject:options:error:
dataWithPropertyList:format:options:error:
databaseCorruptionDetectedViaCorruptionMarker
databaseCorruptionDetectedViaIntegrityCheck
databaseHandle
databasecheck_BrokenEntityIDReferences
databasecheck_IntegrityCheck
databasecheck_contactMergeGroupConsistency
date
dateByAddingComponents:toDate:options:
dateByAddingTimeInterval:
dateByAddingUnit:value:toDate:options:
dateByAppendingDaysToCurrentDate:
dateComponents
dateComponents:label:extractionInfo:withRecordId:
dateComponentsFromDataDetectorMatch:inferDates:approximateTime:partialDate:useEndForDurations:
dateComponentsFromDate:
dateFromComponents:
dateFromEmailString:
dateInterval
dateIsCorrect
dateMapping
dateString
dateWithTimeIntervalSince1970:
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
days
daysAvailableDuringIncrementalUpdate
daysProcessedDuringIncrementalUpdate
dbErrorWithCode:sqliteReturnValue:lastErrno:query:
dbHandleForTesting
debugAppendText:
debugDescription
debugSetContext:
debugStoreContext
decimalDigitCharacterSet
decodeBoolForKey:
decodeDoubleForKey:
decodeEncodedTextToData:
decodeEncodedWordsIn:
decodeInt64ForKey:
decodeIntegerForKey:
decodeObjectForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
decodeQuotedPrintable:charset:rfc2047UnderscoreAsSpace:
decodeTopLevelObjectOfClass:forKey:error:
decompress:
dedupe:bucketer:resolver:
dedupeContactDetails:
defaultBudget
defaultCSSearchQueryContextFetchAttributes
defaultCalendarForNewEvents
defaultCenter
defaultConfig
defaultCoordinator
defaultDueDateComponentsFromMessages:
defaultEKStoreProvider
defaultHarvestStore
defaultLogger
defaultManager
defaultModel
defaultOrthographyForLanguage:
defaultPath
defaultPathCreatingSuggestionsDirectoryIfNeeded:
defaultSaliencyOnError
defaultSaliencyOnOverrideFor:
defaultSearchableIndex
defaultSessionConfiguration
defaultSessionDescriptorForModelId:featureVersion:language:windowAndNgrams:
defaultSnippetPath
defaultStore
defaultTimeIntervalForAWarning
defaultTimeIntervalToEndWarningExposition
defaultTimeIntervalToStartWarningExposition
defaultWindowAndNgrams
defaultWorkspace
deleteAllCNContactMatches
deleteAllCNContactMatchesForEntityID:
deleteAllCNContactMatchesForIdSet:
deleteAllInteractionsWithBundleID:protectionClass:
deleteAllJournaledQueries
deleteAllReimportRequestsOlderThanDate:
deleteAllRows
deleteAllSearchableItemsWithBundleID:
deleteAllURLsWithBundleIdentifier:documentIdentifiers:entityStore:
deleteAllURLsWithBundleIdentifier:domainSelection:entityStore:
deleteAllURLsWithBundleIdentifier:entityStore:
deleteAllUserActivities:
deleteByRecordId:
deleteCNContactMatchForContactId:
deleteCloudKitZoneWithCompletion:
deleteDataDerivedFromContentMatchingRequest:
deleteDomain:
deleteDomainSelection:
deleteDomainSelection:keepingDomainsPassingTest:
deleteEntitiesByDuplicateKey:emitChangeNotifications:
deleteEntitiesByDuplicateKey:preserveEventConfirmationHistory:emitChangeNotifications:
deleteEventByRecordId:completion:
deleteGroupId:
deleteInteractionEntitiesExceedingLimit:withSuspensionHandler:
deleteInteractionsWithBundleId:completion:
deleteInteractionsWithBundleId:groupIdentifiers:
deleteInteractionsWithBundleId:groupIdentifiers:completion:
deleteInteractionsWithBundleId:identifiers:
deleteInteractionsWithBundleId:identifiers:completion:
deleteInteractionsWithGroupIdentifiers:bundleID:protectionClass:
deleteInteractionsWithIdentifiers:bundleID:protectionClass:
deleteItemsWithEntityTag:
deleteItemsWithEntityTag:preserveEventConfirmationHistory:
deleteMailIntelligenceForMessageIds:
deleteMessagesByDuplicateKey:
deleteNaiveBayesModelForProbabilityFeatureName:
deletePreparedSqlStoreInMemory
deleteSearchableItemsSinceDate:bundleID:
deleteSearchableItemsWithDomainIdentifiers:bundleID:
deleteSearchableItemsWithDomainIdentifiers:completionHandler:
deleteSearchableItemsWithIdentifiers:bundleID:
deleteSearchableItemsWithIdentifiers:completionHandler:
deleteSerializedContactForId:
deleteSerializedContactsForIdSet:
deleteSessionsWithBundleID:
deleteSessionsWithDomainIdentifiers:bundleID:
deleteSessionsWithIdentifiers:bundleID:
deleteSpotlightReferencesWithBundleIdentifier:
deleteSpotlightReferencesWithBundleIdentifier:completion:
deleteSpotlightReferencesWithBundleIdentifier:domainIdentifiers:
deleteSpotlightReferencesWithBundleIdentifier:domainIdentifiers:completion:
deleteSpotlightReferencesWithBundleIdentifier:uniqueIdentifiers:
deleteSpotlightReferencesWithBundleIdentifier:uniqueIdentifiers:completion:
deleteSpotlightReferencesWithNoBundleIdentifier
deleteStorageEvent:
deleteTokensForDeletedEmailAddresses:
deleteURLsFromBundleIdentifier:documentIdentifiers:
deleteURLsFromBundleIdentifier:groupIdentifierGlobs:
deleteURLsOlderThanDate:deletionCount:
deleteUserActivitiesWithPersistentIdentifiers:bundleID:
deleteValueByRecordId:
deleteValueByRecordIdSet:
deleteValueForKey:
deleteZoneWithCompletion:
deletedEmailsCount
deletedTokensCountToComplyToCappingPolicy
deliveries
deliveriesTestingPipeline
deliveryForEntity:origin:
deliveryForEntity:store:
deliveryKey
departureActualTime
departureAirport
departureAirportDescription
departureAirportGate
departureAirportGateFromFlightSchema:
departureBoatTerminalLocation
departureBusStopLocation
departureGate
departurePlatform
departurePublishedTime
departureStationLocation
departureTerminal
dependencyClassesForDissectorClass:
deploymentId
deregisterUpdateHandlerAsyncWithToken:
deregisterUpdateHandlerWithToken:
describeAnnotationType:
describeCategory:
describeReminderDueLocationTrigger:
describeReminderDueLocationType:
describeReminderExtractionStatus:
describeReminderStatus:
describeUseCase:
description
descriptionForEntityType:
descriptionForOriginType:
descriptionForSGRTCCategory:
descriptorForName:version:locale:
descriptorForRequiredKeysForStyle:
deserializeAttributes:andBody:
destroyAndUnlinkIfEmpty
detail
detail:confirmedForContact:
detail:rejectedForContact:
detailForRecordId:
detailTypeFromPrefix:
detailTypeFromPrefix:detectedLabelPointer:
detectContacts
detectLanguageFromText:
detectLanguageFromTextHeuristicallyWithLanguages:languages:defaultLanguage:
detectMessageEventsML
detectNLEvents
detectNames:algorithm:
detectNames:withNameSet:
detectRemindersInMail
detectSalientMails
detectStructuredEvents
detectStructuredEventsML
detectedAddressForLabel:withError:
detectedData
detectedDataSignatureRange
detectedDate
detectedDateComponentsForTokenIndexes:dataDetectorMatches:allowDatesInPast:inferDates:approximateTime:partialDate:allowTimeOffset:useEndForDurations:
detectedDateComponentsForTokenIndexes:dataDetectorMatches:allowDatesInPast:inferDates:approximateTime:partialDate:useEndForDurations:
detectedDueDateComponents
detectedEndAddressWithError:
detectedEndDateComponents
detectedEndPlaceWithError:
detectedEndTimeZone
detectedEventName
detectedEventPolarity
detectedLanguage
detectedPostalAddressExtractionForTokenIndexes:dataDetectorMatches:label:
detectedStartAddressWithError:
detectedStartDateComponents
detectedStartPlaceWithError:
detectedTimeZone
detectedTitleForLanguage:
detectedTitleInModelOutput:enrichedTaggedCharacterRanges:textContent:language:
detectionFromBodyDDMatch:message:withSupervisionToFill:isUnlikelyPhone:
detectionFromMatch:plainTextContent:extractionInfo:isUnlikelyPhone:
detectionFromMessage:ddMatch:matchedContext:withSupervision:inConversation:entityLanguage:
detectionFromSignatureDDMatch:message:detectedLabelRange:lastClaimedLabelRange:isUnlikelyPhone:
detectionWithType:text:matchRange:matchString:label:hasPhoneLabel:extractionInfo:isUnlikelyPhone:
detectionsAndSignatureInText:eligibleRegions:baseDate:
detectionsInPlainText:withEligibleRegions:
detectionsInPlainText:withEligibleRegions:baseDate:
detectors
dialingCodeForISOCountryCode:
dictRepresentation
dictionary
dictionaryFromPathWithPrefix:suffix:
dictionaryFromTimezone:
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithContentsOfFile:
dictionaryWithObjects:forKeys:count:
dictionaryWithPath:error:
dictionaryWithSharedKeySet:
didChangeValueForKey:
didKVSMigrationTokenForIdentifier:
didResponseKitTrigger
diffSchemas:withExpectedSchemas:
diffSchemas:withExpectedSchemas:reply:
digits
direction
directoryValue
dispatchGroup
displayName
displayableEntities:
displayname
dissect:
dissect:andStore:
dissect:inContext:
dissectAndStore:inContext:
dissectAndStoreEntity:inContext:
dissectAndStoreEntity:inContext:destinationStore:
dissectAndStoreSpotlightEntity:bundleIdentifier:uniqueIdentifier:domainIdentifier:inContext:
dissectEntity:andStore:
dissectInteraction:entity:context:
dissectMailMessage:entity:context:
dissectOperationsForInteraction:entity:inContext:
dissectOperationsForMailMessage:entity:inContext:
dissectOperationsForTextMessage:entity:inContext:
dissectTextMessage:entity:context:
dissectURL:title:htmlPayload:entity:
dissectorWithMockedMLTrainingForTests
dissectors
distanceBetweenStrings:and:
distantFuture
distantPast
district
dkimSignatureHeaders
dkimVerifier
document
documentDate
documentIdentifier
documentSource
documentSourceAsString:
documentTimeInterval
documentTitle
domain
domainByAppendingToken:toDomain:
domainForStringTokens:
domainFromSenderAge
domainFromSenderProbability
domainFromSenderStats
domainId
domainIdForInteractionGroupId:
domainIdentifier
domainIdentifierForSpotlightReferenceForBundleIdentifier:uniqueIdentifier:
dominantLanguageTagFromText:
donateInteractions:bundleIdentifier:error:
donateRelevantShortcuts:bundleID:
donateSearchableItems:bundleIdentifier:error:
donateUserAction:searchableItem:error:
done
done:
doneReturningWasDone
dontUpdate
doubleAsNonnullNSNumberForColumnName:table:
doubleValue
downloadedCalendarAttachmentsFrom:
dropColumn:
dtend
dueDateComponents
dueDateComponentsFromMessages:
dueDateDataDetectorMatches
dueDateTimestamp
dueLocation
dueLocationFromMessages:
dueLocationTrigger
dueStorageLocation
dumpTables:columns:
duplicateEventKey
duplicateKey
duplicateKeyForCuratedEventWithExternalID:
duplicateKeyForDeliveryWithProviderString:trackingNumber:parentKey:
duplicateKeyForEmailWithSource:messageId:
duplicateKeyForInteraction:fromBundleIdentifier:
duplicateKeyForInteractionIdentifier:fromBundleIdentifier:
duplicateKeyForInteractionWithBundleId:personHandle:
duplicateKeyForMessage:fromSource:
duplicateKeyForNaturalLanguageEventWithStartDate:endDate:title:participants:parentKey:
duplicateKeyForPseudoContactWithIdentity:parentKey:
duplicateKeyForPseudoEventWithGroupId:parentKey:
duplicateKeyForPseudoReminderWithGroupId:withCreationTime:parentKey:
duplicateKeyForSchemaOrg
duplicateKeyForSearchableItem:
duplicateKeyForTextMessageWithSource:uniqueIdentifier:
duplicateKeyForWebPageFromSource:
duplicateKeysFromMailMessageKeys:
duplicateKeysFromRecordIds:
duplicateKeysMatchingAnyEventHash:
duplicateKeysMatchingAnyReminderHash:
duplicateKeysMatchingAnyTag:
duplicateKeysMatchingInteractionBundleId:andTags:
duration
earlierDate:
ef_rfc5322Unfold
ef_trimLeadingCharactersInSet:
ekEventAvailabilityState:
email
emailAddress
emailAddress:forIdentity:parent:curated:context:contextRangeOfInterest:extractionInfo:
emailAddress:label:extractionInfo:withRecordId:
emailAddressIsSignificant:withCompletion:
emailAddresses
emailDaemon
emailFrom:
emailFrom:entity:
emailHeaders
emailKey
emailLanguage
emailMapping
emailTags
emailToCanonicalEmailCache
emailToJsonLd:reply:
emailToOutput:reply:
emailsPendingVerification
emitContactDeleted:
emitContactUpdated:
emitEventDeleted:
emitEventUpdated:
emitReminderDeleted:
emitReminderUpdated:
emitURLChanged
emptyPipeline
enabledDataclasses
encodeBool:forKey:
encodeDouble:forKey:
encodeInt64:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
encodedStringForFullName:
encryptedValuesByKey
endDateComponents
endDateUnadjustedForLegacyClients
endDissectionOfMessage:inContext:
endElement
endHarvest
endIndexBatchWithClientState:completionHandler:
endIngestOfMessages:
endTimeZone
endTimer:significantWork:
endUTCOffsetSeconds
engineConfig
enqueueSearchableItems:completion:
enrichAggregateSummaryLog:
enrichAndFilterTaggedCharacterRanges:usingMapping:withAnnotationType:
enrichInteractionSummaryLog:
enrichReminderInteractionSummaryLog:
enrichTaggedCharacterRangesWithModelOutput:usingInputCharacterRanges:
enrichedTaggedCharacterRanges
enrichedTaggedCharacterRangesContainsProfanity:
enrichedTaggedCharacterRangesFromEntity:forMessage:
enrichedTaggedCharacterRangesFromTaggedCharacterRanges:messageIsSent:
enrichmentWithParentEntity:withCalendar:
enrichmentWithParentEntity:withCalendar:withCorrectnessFlag:
enrichments
enrichmentsFromData:inDocument:parentMessage:parentEntity:
enrichmentsFromSchema:forMessage:forEntity:category:
enrichmentsFromSchemas:inMessage:parentEntity:
enrichmentsFromSchemas:inTextMessage:parentEntity:
entity
entityCount
entityForOutputItem:parentEntity:outputExceptions:outputInfos:
entityForOutputItem:parentEntity:outputExceptions:outputInfos:interaction:
entityForOutputItem:withSiblings:parentEntity:outputExceptions:outputInfos:interaction:
entityFromSqlResult:
entityFromSqlResult:withSnippets:
entityFromUniqueKey:
entityIdentifiersFromCNIdentifiers:
entityKey
entityKeyCountsForEntityType:startDate:endDate:
entityType
entityTypeFromIdentityKeyType:
entityWantsFullDownload:
enumerateAllContactsWithSnippets:limitTo:usingBlock:
enumerateByteRangesUsingBlock:
enumerateChildrenOfDomain:depth:usingBlock:
enumerateChildrenOfDomain:greaterThan:depth:limit:usingBlock:
enumerateContactChangesWithKeysToFetch:fromContactStore:error:usingBlock:
enumerateContactIdentifierBatchesUsingBlock:
enumerateContactIdentifiersUsingBlock:
enumerateContactsByMasterEntityQuery:withSnippets:limit:bindings:usingBlock:
enumerateContactsMatchingEmailAddress:withKeysToFetch:usingContactStore:error:usingBlock:
enumerateContactsMatchingName:withKeysToFetch:usingContactStore:error:usingBlock:
enumerateContactsWithFetchRequest:error:usingBlock:
enumerateContactsWithFetchRequest:usingContactStore:error:usingBlock:
enumerateDetailsWithBlock:
enumerateEKEventsForPseudoEventBySimilarStartAndEndTime:store:usingBlock:
enumerateEventsMatchingPredicate:usingBlock:
enumerateIndexesUsingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateLinesUsingBlock:
enumerateLinguisticTagsInRange:scheme:options:orthography:usingBlock:
enumerateMatchesInString:ngroups:block:
enumerateMatchesInString:ngroups:blockWithSubregexp:
enumerateMatchesInString:options:range:usingBlock:
enumerateMatchesInUtf8:fromString:ngroups:block:
enumerateMatchesInUtf8:fromString:ngroups:blockWithSubregexp:
enumerateObjectsUsingBlock:
enumeratePeople:
enumeratePreviousMessages:inEntity:usingBlock:
enumeratePreviousMessages:usingBlock:
enumerateRangesUsingBlock:
enumerateSubstringsInRange:options:usingBlock:
enumerateTagsInRange:scheme:options:usingBlock:
enumerateTagsInRange:unit:scheme:options:usingBlock:
enumerateTokensInString:block:
enumerateTokensInString:withRange:block:
enumeratorAtPath:
environment
error
errorCode
errorWithDomain:code:userInfo:
escapeLike:
estimateGroundTruth
estimateGroundTruthWithConfig:
estimateMessagesInChat:
estimatedGroundTruth
evaluate:enablePreFiltering:config:error:
evaluateFirstMatchAmong:defaultValue:
evaluateJavaScript:completionHandler:
evaluateRecipe:attachments:completion:
event
eventActivitiesForReservationWithReference:inParentEntity:interaction:
eventActivitiesForReservationWithSchema:enrichment:
eventBatch
eventBody
eventClassificationForEntity:reply:
eventClassificationForMailMessage:
eventClassificationWithoutXPCForMailMessage:
eventClassifierModelPath
eventClassifierThreshold
eventConfirmed:inApp:
eventConfirmedByRecord:
eventDuration
eventEnrichmentContainsReverseMappedTags:
eventEnrichmentFromEntity:
eventEnrichmentsCount
eventExtractionAssetsPath
eventFromRecordId:withCompletion:
eventFromSqlResult:
eventFromUniqueId:completion:
eventHash:
eventIsCancelled:
eventMetadata
eventMetadata:
eventMetadataFromEKEvent:
eventName
eventQueryWithPredicate:eventStreams:offset:limit:sortDescriptors:
eventRejected:inApp:
eventRejectedByRecord:
eventSuggestionImpressionsViaBanner:
eventWithExternalID:
eventWithIdentifier:
eventWithRecordId:origin:uniqueKey:opaqueKey:title:notes:start:startTimeZone:end:endTimeZone:isAllDay:creationDate:lastModifiedDate:locations:tags:URL:
events
eventsFoundOnDeviceEnabled:
eventsFromEntity:
eventsFromMessage:eventExtractionAssetsPath:
eventsFromSchemaOrgItems:
eventsHaveIdenticalReservationIds:ekEventFromStore:
eventsHaveSimilarTitles:ekEventFromStore:
eventsInFutureLimitTo:options:withCompletion:
eventsMatchingPredicate:
eventsPerWeekAroundDate:
eventsStartingAt:endingAt:limitTo:options:withCompletion:
eventsStartingAt:endingAt:prefix:limitTo:options:withCompletion:
eventsSuggested:withElapsedTime:inApp:
eventsWereRemovedFromEventKit
eventsWithSameAlternativeOpaqueKeyAsDuplicateKey:harvestStore:
eventsWithSameAlternativeOpaqueKeyAsPseudoEvent:harvestStore:
eventsWithSameAlternativeOpaqueKeyAsStorageEvent:harvestStore:
eventsWithSameOpaqueKeyAsDuplicateKey:extraKey:harvestStore:
eventsWithSameOpaqueKeyAsPseudoEvent:harvestStore:
eventsWithSameOpaqueKeyAsStorageEvent:harvestStore:
exceedsMaxHTMLContentLength:
exception
exceptionTemplates
exceptionWithName:reason:userInfo:
excludeList
excludedContent:
executeChangeHistoryClearRequest:error:
executeDailyTasksWithShouldContinue:
executeQueriesOnDatabase:
executeQuery:error:
existsInUtf8:
exitCode
exitOnErrorIndicatingIOError:
experimentId
experimentIdentifiersWithNamespaceName:
exportedInterface
extendMatchArray:withTarget:
externalEnrichments
externalId
externalIdentifier
externalKey
extraKey
extraKey:
extraKeyTag
extractReminderFromMailMessage:entity:
extractReminderFromOwnedMailMessage:entity:
extractReminderFromTextMessage:entity:store:
extractURLsFromAttributesOfItem:handle:
extractURLsFromTextPropertiesOfItem:handle:
extractedBoat
extractedBus
extractedCarRental
extractedEvent
extractedEventCancellation
extractedFood
extractedFromTemplateWithName:
extractedFromTemplateWithShortName:
extractedHotel
extractedMovie
extractedReminderDuplicateKey
extractedTrain
extraction
extractionInfo
extractionInfoWithExtractionType:modelVersion:confidence:
extractionMode
extractionModelVersion
extractionSignatureSource
extractionSignatureSourceAsString:
extractionType
fail:
failSalt
fakeFlightInformationWithAirlineCode:flightNumber:flightDate:
fallbackLanguageCodeForCountryCode:
fallbackSchemaForGenericEventWithTitle:startDate:endDate:
familyName
feature:
featureDict
featureDimensionForInputSection:forModel:
featureEnabled
featureName
featureNames
featureType
featureTypeForName:
featureValueForName:
featureValueWithMultiArray:
features
featurize:
featurizer
fetchLastClientStateWithCompletionHandler:
fetchLocationOfInterestByType:name:
fetchLocationsOfInterestOfType:withHandler:
fetchRemindersMatchingPredicateDescriptor:sortDescriptors:options:error:
fetchRemindersWithError:
fetchSiriFoundInAppsListWithError:
fieldReverseMapped:
fieldsToSaveOnConfirmation
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileHandleForWritingAtPath:
fileSize
fileSystemRepresentation
fileURLForSearchableIndex:itemIdentifier:typeIdentifier:inPlace:error:
fileURLWithPath:
fileURLWithPath:isDirectory:
fileValue
filename
filename:createIfNeeded:
filesystemPathForAssetDataRelativePath:
filesystemPathsForAssetDataRelativePaths:
filterCandidateDateComponents:
filterCandidates:withDetailSubsetOfCNContact:
filterDangerousSigAddressDetections:
filterDangerousSigDetections:message:
filterDangerousSigEmailDetections:message:
filterDangerousSigPhoneDetections:message:
filterOutOrConvertMatches:visibleFlatRecipientEmailsList:visibleFlatRecipientList:bccFlatRecipientList:contactMatchRequired:textContent:regexLanguage:detectedLanguage:store:
filterOutRejectedDetailsFromContact:
filterPastEvents:
filterRealtimeEvents:
filterRealtimeReminders:
filterUsingPredicate:
filteredArrayUsingPredicate:
filteredSetUsingPredicate:
findContactsForDetailType:andValue:
findContactsForPerson:fetchingKeys:
findDeletedEmailAddresses:mdSearchableItemAttribute:fromDaysAgo:error:
findRejectSig:
findSignaturePrefix:
findSignaturePrefixesInMessage:withSignaturePrefixes:
findValediction:
findValedictionCommencedSignatureRanges:
finishProcessingForUniqueIdentifier:
fire
first
firstAppLaunchFollowingFetch
firstHeaderForKey:
firstIndex
firstMatchInString:options:range:
firstName
firstNameLikelihood:underNamingTradition:default:
firstNonZeroColumnForDomain:withColumns:
firstNonZeroColumnForDomains:withColumns:
firstObject
firstObjectCommonWithArray:
firstRangeInIndexSet:
firstValueOfPropertyForName:
firstname
fixupVersionMismatch
flags
flatVectorForFeatureNames:
flattenTaggedCharacterRanges:usingWhitelist:replaceOOVWithToken:
flight
flightDuration
flightFromReservationSchema:
flightID
flightInformationWithAirlineCode:flightNumber:flightDate:
flightNumber
flightNumberFromFlightSchema:
flightRequestForQuery:date:appBundleId:
flightResults
flightno
floatValue
floating
floatingRangeWithLocalStartDate:endDate:
floatingRangeWithUTCStart:end:
floatingRangeWithUTCStartDate:endDate:
flushExternalEnrichmentsUponDealloc
flushMessages
flushWrites
followUpComputeCustomTimeRangeForLanguage:
followUpOnIncomingMails
followUpOnIncomingMailsDetectionRegexes
followUpOnOutgoingMailsAsks
followUpOnOutgoingMailsAsksDetectionRegexes
followUpOnOutgoingMailsQuestions
followUpOnOutgoingMailsQuestionsDetectionRegexes
followUpTimeRangeForDebugging
followUpWarningStats
followUpWarningsParameters
forEach:
forLocale:
forLocale:tagNames:personalNameMapping:punctuationMapping:
forLocale:tagNames:trustCoreNLP:personalNameMapping:punctuationMapping:
forLocale:withPersonalNameMapping:
forceBlobSync
forceLanguagesTo:
forceRotate
formUnionWithCharacterSet:
formatFlowed:delSp:
formatOptions
formattedDate:withTimezone:
formattedName
forwardDraftStarted
forwardToString:consume:
forwardWhile:
foundInAppsStringCompactVersionWithContactName:
foundInAppsStringForCheckInAction:
foundInAppsStringLongVersionForAppName:contactName:
foundInAppsStringWithoutContactForAppName:
foundInAsString:
foundInMailNotifications
foundInSenderCNContact
foundInStringForRecordId:style:withCompletion:
foundItemCount
foundMatchingElement
frailReadTransaction:
frailWriteTransaction:
freeJSContext
freeSpace
freelistCount
frenchPrependForEnrichedTaggedCharacterRanges:actionVerbIndexRange:
from
fromCalendarAttachment
fromCloudKitRecord:
fromExtractedDomain
fromForwardedMessage
fromHandle
fromReply
fromSchema:
fromSchemas:
fromStartDate:
fromStartDate:endDate:
fromStatus
fromStatusAsString:
fromSync
ftsPrefix:
ftsTokenize:
fullDownloadRequestBatch:withCompletion:
fullDownloadRequested
fullMappingFromFile:
fullName
fullPipeline
fullyDissected
futureForObject:withKey:onCreate:
gate
gazetteer
geoLocation
geoMapItemHandle
geocodeAddress
geocodeAirportCode
geocodeEndDate
geocodeEndTimeZone
geocodeEnrichmentsInPipelineEntity:withCompletion:
geocodeEvent:withCallback:
geocodeHandle
geocodeIsEnd
geocodeIsStart
geocodeLabel
geocodeLocations
geocodeLongitude
geocodeOperation:withDependencies:
geocodeStartDate
geocodeStartTimeZone
geocodedEventWithStartDate:startTimeZone:endDate:endTimeZone:locations:
geocodedLocationWithLabel:address:latitude:longitude:accuracy:handle:
geocodedLocationWithLatitude:longitude:accuracy:handle:
geocodingMode
geocodingModeAddressOnly
geocodingModeAddressThenPOI
geocodingModeAddressWithCanonicalSearch
geocodingModePOIOnly
getAllLinks
getAndRemoveItemReferencesFromSchemas:
getBytes:length:
getBytes:maxLength:usedLength:encoding:options:range:remainingRange:
getCString:maxLength:encoding:
getCharacters:
getCharacters:range:
getContactIdentifierForEmail:usingEntityStore:
getContactIdentifierForName:andEmail:ifMatchingPredicate:
getDoubleAsNSNumberForColumn:
getDoubleForColumn:
getDoubleForColumnName:table:
getDoubleNSNumberForKey:
getFlightInformationForFlightEventData:
getFlightReferencesAndReservationId:
getFlightReferencesAndReservationId:reply:
getForKey:binder:
getInt64AsNSNumberForColumn:
getInt64AsNSNumberForColumnName:table:
getInt64ForColumn:
getInt64ForColumnAlias:
getInt64ForColumnName:table:
getInt64NSNumberForKey:
getIntegerForColumn:
getIntegerForColumnAlias:
getIntegerForColumnName:table:
getJSContext
getLineContaining:inText:
getMaxEntityId
getMergedPrompt:withParams:
getMergedPromptForMessage:conversationTurns:maxPromptLength:maxPromptWindowSeconds:promptJoiningString:
getNSDataForColumn:
getNSDataForColumnName:table:
getNSDateForKey:
getNSStringForColumn:
getNSStringForColumnAlias:
getNSStringForKey:
getNewBlobsIfChanged
getObjectValue:forString:range:error:
getPet2Tracker
getReminder:
getReminderWithDuplicateKey:
getReminderWithRecordId:
getResponsesForBirthdayExtractionFromMessage:withLanguage:
getSGMIStoredAddresses
getSaliencyOutputOf:forArray:
getState:
getUnderlyingError:
getUnsubscriptionOpportunitiesSuggestionsDenyListForField:
getViolationsToTokenCountsPolicy:
givenName
globPatterns
globPrefix:
globalLanguageVersion
gmtOffsetTimeZoneFromString:forDate:
gmtOffsetTimeZoneWithCalendar:withEvent:
gmtOffsetTimeZoneWithHour:withMinute:forDate:
grabNameIfNeededFromContactStore:
groundTruthEstimatorFeatures
groundTruthEstimatorRules
groundTruthVersion
gteSaliency
handle
handleDeviceLockStateEvent:
handleError:sqliteError:forQuery:onError:
handleExistsInContactStoreForHandle:withHandleType:
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
handleIdentifier
handleLastNameFirstOrder:
handleSqliteError:error:onError:db:
handleSyncedDataChanged:
handleTextMessageBirthdayCongratulation:entity:withConversationHistory:
handleTextMessageContactSharing:andMatch:andContext:andLanguage:withSupervision:
handleTextMessageContactSharingWithNegativeSample:andLanguage:
handleTextMessageSelfIdentification:entity:withConversationHistory:
handleType
hardName
harvestDrainedNumberOfMails:
harvestMetrics
harvestSource
harvestSourceAsString:
harvestStore
harvestTimerForName:
harvestTimes
harvestedEntity:withElapsedTime:
harvestedMessageInQueueSince:
harvestedOnBattery
harvestedSuggestionsFromMessage:bundleIdentifier:options:completionHandler:
harvestedSuggestionsFromMessage:bundleIdentifier:options:withCompletion:
harvestedSuggestionsFromMessages:bundleIdentifier:options:completionHandler:
harvestedSuggestionsFromSearchableItem:options:withCompletion:
hasAccuracy
hasActive
hasActiveAggregatedAccuracyLogForThePastFourWeeks
hasActiveAggregatedAccuracyLogSinceModelInitialization
hasActiveTrialMetadata
hasAddress
hasAgeOfTheSubmodelInDays
hasAirportCode
hasAllDay
hasAlreadyHarvestedSearchableItem:
hasApp
hasAttachmentsProbability
hasAttachmentsStats
hasBackground
hasBackgroundAggregatedAccuracyLogForThePastFourWeeks
hasBackgroundAggregatedAccuracyLogSinceModelInitialization
hasBackgroundTrialMetadata
hasBiomeAggregationPerformanceInMilliSeconds
hasBlockedWarningCount
hasBundleId
hasCacheHit
hasCalendarAccount:
hasCalendarAccountForOneOf:
hasCancelled
hasCategory
hasColumn:
hasColumnOnTable:named:
hasComponentName
hasConfirmedField:value:forStorageEvent:
hasContact:
hasContactDetail
hasContactDetail:forContact:
hasContactDetailKey:
hasContent
hasConversationAge
hasConversationProbability
hasConversationStats
hasCorrect
hasCount128KBTo512KB
hasCount32KBTo128KB
hasCount512KBTo2MB
hasCount8KBTo32KB
hasCreationTimestamp
hasCumulatedSubmodelsRollbackForPostDeletionPolicyPerformanceInMilliSeconds
hasCustomResponsesAfterPruning
hasDateIsCorrect
hasDaysAvailableDuringIncrementalUpdate
hasDaysProcessedDuringIncrementalUpdate
hasDeferredProcessStateChanges
hasDeletedEmailsCount
hasDeletedTokensCountToComplyToCappingPolicy
hasDetail
hasDidRegexTrigger
hasDidResponseKitTrigger
hasDocumentSource
hasDomain
hasDomainFromSenderAge
hasDomainFromSenderProbability
hasDomainFromSenderStats
hasEmailAddress:
hasEmailLanguage
hasEnd
hasEndUTCOffsetSeconds
hasErrorCode
hasEstimatedGroundTruth
hasEventEnrichment
hasExitCode
hasExtraKey
hasExtraction
hasExtractionException
hasExtractionModelVersion
hasExtractionSignatureSource
hasFloating
hasFloatingTimeZone
hasFoundIn
hasFoundInSenderCNContact
hasFoundMatchingElement
hasFromStatus
hasFullDownloadBeenRequested
hasGroupId
hasHandle
hasHarvestSource
hasHarvestedOnBattery
hasHasName
hasHashedMessageId
hasHoursSinceLastIncrementalUpdate
hasHoursSinceReference
hasIgnorablePredictedAsIgnorable
hasIgnorablePredictedAsNeutral
hasIgnorablePredictedAsSalient
hasIncomingMessage
hasIndexNamed:
hasInhumanHeaders
hasInstantMessageAddress
hasIntentResponseUserActivityString
hasInteractionBundleId
hasInteractionGroupId
hasInteractionId
hasInteractionInfo
hasInteractionTeamId
hasIsFromCongratulation
hasIsSubmodelRebuilt
hasIsUnlikelyPhone
hasKey
hasLabel
hasLastModifiedTimestamp
hasLatitude
hasListIdProbability
hasListIdStats
hasLocale
hasLongitude
hasMailboxProbability
hasMailboxTypeProbability
hasMailboxTypeStats
hasMailsProcessedDuringIncrementalUpdate
hasMetadata
hasMethod
hasMissingAttachmentPredictionPerformanceInMilliSeconds
hasMissingRecipientPredictionPerformanceInMilliSeconds
hasModel
hasNbCharactersInMailSubject
hasNbExtremelyDiscriminantTokensForIgnorability
hasNbExtremelyDiscriminantTokensForSaliency
hasNbHighlyDiscriminantTokensForIgnorability
hasNbHighlyDiscriminantTokensForSaliency
hasNbTokensInMailSubject
hasNegativeEngagement
hasNeutralPredictedAsIgnorable
hasNeutralPredictedAsNeutral
hasNeutralPredictedAsSalient
hasNonTrivialInfo
hasNumberOfLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
hasNumberOfLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
hasNumberOfPredictedAttachmentOnLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
hasNumberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
hasObserver:
hasOffset
hasOutcome
hasParentEntityType
hasPersonCCRecipientsAge
hasPersonCCRecipientsProbability
hasPersonCCRecipientsStats
hasPersonFromSenderAge
hasPersonFromSenderInDyadicConversationAge
hasPersonFromSenderInDyadicConversationProbability
hasPersonFromSenderInDyadicConversationStats
hasPersonFromSenderProbability
hasPersonFromSenderStats
hasPersonToRecipientsAge
hasPersonToRecipientsProbability
hasPersonToRecipientsStats
hasPhone
hasPhoneLabel
hasPositiveEngagement
hasPostalAddress:
hasPredictedSaliency
hasPredictedSaliencyScore
hasPrefix:
hasPreviousInteractionFromUserOnConversationInMinutes
hasPreviousInteractionOnConversationInMinutes
hasProfileFromInteraction
hasProfileFromTextMessage
hasQuality
hasReceivedOnBattery
hasRecipientFromSameDomainAsSender
hasRecurrenceRules
hasRegexLanguage
hasReservationContainerReference
hasReservationItemReferences
hasResult
hasRollbackedEmailsCountToComplyToPostDeletionPolicy
hasRollbackedSlicesCountToComplyToPostDeletionPolicy
hasSaliencyPredictionPerformanceInMilliSeconds
hasSalientPredictedAsIgnorable
hasSalientPredictedAsNeutral
hasSalientPredictedAsSalient
hasSchemaOrg
hasSenderConnectionScore
hasSignature
hasSignificantWork
hasSocialProfile
hasSource
hasSourceKey
hasSpotlightReferenceForBundleIdentifier:uniqueIdentifier:
hasStandardMailRulesStats
hasStart
hasStartUTCOffsetSeconds
hasStorageContact:
hasSubjectContentAge
hasSubjectContentProbability
hasSubjectContentStats
hasSubjectCountStatsStats
hasSubmodelsProbabilities
hasSubmodelsPruningForCappingPolicyPerformanceInMilliSeconds
hasSubmodelsStats
hasSubmodelsUpdatePerformanceInMilliSeconds
hasSuffix:
hasSupervision
hasTableNamed:
hasTimeComponent
hasTimeDifferenceFromReceptionToSaliencyInferenceInSeconds
hasTitle
hasToStatus
hasTokens
hasTooManyLongNumbers:
hasTotalNumberOfEmailsProcessedForAttachmentDetectionRoundedToClosestMultipleOf20
hasTotalNumberOfEmailsProcessedForFollowUpDetectionRoundedToClosestMultipleOf20
hasTotalNumberOfEmailsProcessedForRecipientDetectionRoundedToClosestMultipleOf20
hasTreatmentId
hasTrialMetadata
hasTrigger
hasWasKnownContact
hasWasSuggestedContact
hasWhitelistedVerbInContent:
hash
hashId
hashedValueOfString:
hashesByAddingCompatibilityHashesToHashes:forMatching:
hashesForContact:forMatching:
hashesForContactDetail:fromContact:forMatching:
hashesForCuratedContactDetail:fromContact:forMatching:
hashesForPseudoEventByKey:forMatching:
hashesForStorageContact:forMatching:
hashesForStrings:forMatching:
headerDictionaryContainsInhumanHeaders:
headerPattern
headerPattern:
headersDictionary
headersPattern
hiddenAdditionalRecipients
highPriority
highlyDiscriminantTokensForFeature:minCount:minRatio:
historicalDataRequestWithPersonHandle:startDate:endDate:
historicalDataRequests
historicalFlightInformationWithAirlineCode:flightNumber:flightDate:
historyForTesting
historyHasContact:
hmmPlausibleSignatureRange:
hmmSignatureRange:
hmmSignatureRangeWithContent:detectedData:quotedRegions:authorName:
horizontalAccuracy
horizontalUncertainty
host
hour
hours
hoursSinceReference
htmlBody
htmlBodyFromRfc822:headers:attachmentCallback:
htmlContent
htmlFromPlainTextBody:
htmlParser
human
hv_addEntriesFromHeadersDictionary:
hv_firstHeaderForKey:
hv_headerKeyFunctions
hv_headerValueFunctions
hypotheticalSuggestionImpressionsIncludingActedOn:
iataCode
iataCodeToCityDatabaseDict
icaoCode
identifier
identifiersPredicateFromCacheForPredicate:isCached:
identifyComposeWarningsFromSubject:content:attributes:toRecipients:ccRecipients:bccRecipients:originalToRecipients:originalCcRecipients:attachments:
identifyComposeWarningsFromSubject:content:attributes:toRecipients:ccRecipients:bccRecipients:originalToRecipients:originalCcRecipients:attachments:withCompletion:
identifyComposeWarningsFromSubject:content:toRecipients:ccRecipients:bccRecipients:originalToRecipients:originalCcRecipients:attachments:
identifyComposeWarningsFromSubject:content:toRecipients:ccRecipients:bccRecipients:originalToRecipients:originalCcRecipients:attachments:language:store:disableConservativeCheckRequirement:
identifyComposeWarningsFromSubject:content:toRecipients:ccRecipients:bccRecipients:originalToRecipients:originalCcRecipients:attachments:withCompletion:
identifyFollowUpWarningFromSubject:body:date:
identifyFollowUpWarningFromSubject:body:date:withCompletion:
identifyFollowUpWarningFromSubject:content:
identifyFollowUpWarningFromSubject:content:withCompletion:
identifyRangeOfEncodedWordAtIndex:
identifyWarningsFromSubject:content:toRecipients:ccRecipients:bccRecipients:originalToRecipients:originalCcRecipients:attachments:
identifyWarningsFromSubject:content:toRecipients:ccRecipients:bccRecipients:originalToRecipients:originalCcRecipients:attachments:withCompletion:
identity:
identityBasedHashesForPseudoEvent:withCreationTime:
identityBasedHashesForPseudoReminder:withCreationTime:
identityGroupSize:
identityKey
identityTypeForKeyPart:
ignorablePredictedAsIgnorable
ignorablePredictedAsNeutral
ignorablePredictedAsSalient
ignoreAfter
inMemoryPath
inReplyTo
incStatsCounterWithKey:
incrementAndUpgradeInteractionSummaryForEventKey:interactionKey:parentEntity:
incrementInt64NSNumber:forKey:
incrementKeyWithDomain:subdomain:suffix:
incrementKeyWithDomain:subdomain:suffix:action:
incrementKeyWithDomain:subdomain:suffix:action:by:
incrementKeyWithDomain:subdomain:suffix:by:
incrementKeyWithDomain:suffix:
incrementNumberOfMailsViewedBeforeSinceAvailable
incrementNumberOfMoreRecentUnreadMessageAtFirstViewTime
incrementUserEngagement:forFollowUpWarning:
incrementUserEngagement:forWarning:
incrementValuesInDomain:subdomain:type:action:withKeysAndIncrements:extraSignature:
incrementalSubmodelUpdateWithSaliencyModelConfig:store:shouldContinue:finalGroundTruthDate:withSimulatedCSSearchableItemForTesting:limit:
incrementalSubmodelUpdateWithSaliencyModelConfig:store:shouldContinue:finalGroundTruthDate:withSimulatedCSSearchableItemForTesting:limit:log:
incrementalSubmodelUpdateWithStore:limit:log:
incrementalSubmodelUpdateWithStore:shouldContinue:limit:log:
indexOfObject:
indexOfObject:inSortedRange:options:usingComparator:
indexOfObjectPassingTest:
indexOfObjectWithOptions:passingTest:
indexSearchableItems:completionHandler:
indexSetForOutputNameLabel
indexSetForOutputNameLabelForModelOutput:
indexSetWithIndexesInRange:
indexesInRange:options:passingTest:
inferProbability
inferenceVersion
inferredDate
inferredDateForDataDetectorResult:
ingest:asSalient:
ingestUnigramTokens:bigramTokens:asSalient:
init
initCancellationOfCuratedEvent:templateShortName:entity:
initCurrentAsset
initDuplicateOfCuratedEvent:withEntity:
initExtractionExceptionWithEntity:
initFileURLWithPath:
initFor:fromUnigram:andBigram:
initForDbStatsOnlyWithError:
initForLocale:tagNames:trustCoreNLP:personalNameMapping:punctuationMapping:
initForMigratorTestWithEntityDb:snippetDb:
initForRawDatabaseAccessWithEntityPath:snippetsPath:error:
initForReadingFromData:error:
initFromString:coreRange:signature:maxWindowSizeAroundCore:detectedLanguage:isIncomingMessage:score:
initIgnoringDataDetectors
initInMemory
initNewEventWithEntity:
initRealtime:wasNoBudgetItem:
initRefreshSuggestionsContactDropBox
initTemporaryForOverwritingCache:
initUpdatedEventWithEntity:curatedEventKey:
initWithActivityType:
initWithAirline:flightNumber:boardingTime:flightDuration:departureAirportGate:arrivalAirportGate:
initWithAirport:terminal:gate:
initWithAnnotationType:tags:range:text:
initWithAppleMailMessageId:snippet:core:signature:detectedLanguage:isIncomingMessage:score:startDate:startDateCore:endDate:endDateCore:
initWithArray:
initWithAssetAttachmentDictionary:attachmentLinkDetection:recipientConservativeDictionary:recipientDictionary:nicknameDictionary:followUpOnOutgoingMailsQuestionsDictionary:followUpOnOutgoingMailsAsksDictionary:followUpOnIncomingMailsDictionary:bodyAnalysisSamplingFactor:defaultTimeIntervalToStartWarningExposition:defaultTimeIntervalForAWarning:defaultTimeIntervalToEndWarningExposition:followUpWarningsParameters:
initWithAssetTypeDescriptorPath:defaultBundlePath:matchingKeysAndValues:notificationQueue:logHandle:enableAssetUpdates:
initWithAssetTypeDescriptorPath:defaultBundlePath:matchingKeysAndValues:notificationQueue:logHandle:enableAssetUpdates:purgeObsoleteInstalledAssets:
initWithAttachmentDictionary:recipientConservativeDictionary:recipientDictionary:nicknameDictionary:followUpOnOutgoingMailsQuestionsDictionary:followUpOnOutgoingMailsAsksDictionary:followUpOnIncomingMailsDictionary:
initWithBase64EncodedData:options:
initWithBase64EncodedString:options:
initWithBasePath:
initWithBiomeSummaryByMessage:biomeMessageIdByPersistentId:
initWithBlock:
initWithBlock:idleTimeout:
initWithBool:
initWithBundleId:domainId:uniqueId:
initWithBundleId:localizedShowInString:userActivity:intent:sourceURL:
initWithBundleId:personHandle:
initWithBundleIdentifier:
initWithBundleIdentifier:allowPlaceholder:error:
initWithBundleIdentifier:domainSelection:
initWithBundleIdentifier:highPriority:harvestedOnBattery:receivedOnBattery:harvestSource:
initWithBundleIdentifier:purgedUniqueIdentifiers:
initWithBundleIdentifier:uniqueIdentifiers:
initWithBytecode:
initWithBytes:length:
initWithBytes:length:encoding:
initWithBytesNoCopy:length:deallocator:
initWithBytesNoCopy:length:encoding:freeWhenDone:
initWithBytesNoCopy:length:freeWhenDone:
initWithCNContact:
initWithCNSocialProfile:
initWithCString:encoding:
initWithCalendarIdentifier:
initWithCapacity:
initWithCarrier:flightNo:depDesc:arrDesc:
initWithCategory:name:eventDuration:location:
initWithCharacters:length:
initWithCharactersNoCopy:length:freeWhenDone:
initWithChineseName:
initWithClassNameKey:
initWithClientIdentifier:
initWithCloudKitSyncGetter:
initWithCode:userActivity:
initWithCoder:
initWithConfiguration:
initWithConnection:store:
initWithContact:
initWithContact:matchTokens:matchInfo:
initWithContact:matchingRecordId:matchType:matchTokens:
initWithContactDetailWithKey:type:extractionInfo:curated:parent:value:context:contextRangeOfInterest:
initWithContacts:events:reminders:
initWithContainerID:options:
initWithContainerIdentifier:environment:
initWithContentType:
initWithContentsOfFile:
initWithContentsOfFile:options:error:
initWithContentsOfURL:error:
initWithContentsOfURL:options:error:
initWithConversations:rtRoutineManager:
initWithCount:asSalient:token:
initWithCountLimit:
initWithData:
initWithData:encoding:
initWithData:options:error:
initWithDatabase:tableName:
initWithDatabaseGetter:journalPath:
initWithDateComponents:
initWithDeadline:manager:
initWithDetectedDate:detectedTimeZone:detectedEndDate:detectedEndTimeZone:matchType:range:labelRange:labelString:valueRange:valueString:allDay:inferredDate:approximateTime:partialDate:
initWithDict:
initWithDictionary:
initWithDirectory:name:
initWithDisplayName:handles:handleIdentifier:
initWithDocument:
initWithDomain:code:userInfo:
initWithDomainsFromArray:
initWithDominantScript:languageMap:
initWithDuplicateKey:recordId:masterEntityId:title:
initWithDuplicateKey:title:
initWithDuplicateKey:title:parent:
initWithEKOptions:
initWithEmail:
initWithEmail:fullName:
initWithEmailMapping:linkMapping:
initWithEmailMessage:
initWithEnrichedTaggedCharacterRanges:modelOutput:
initWithEntity:state:duplicateEventKey:templateShortName:
initWithEntityDbPath:snippetDbPath:isEphemeral:sharedLock:executeJournals:noMigrate:
initWithEntityKey:entityType:parentKey:
initWithEntityStore:
initWithEnvironmentName:namedDelegatePort:queue:
initWithEventStore:opaqueKey:uniqueKey:extractionGroupIdentifier:
initWithExitCode:
initWithExternalId:
initWithFeatureDict:
initWithFeatureName:
initWithFeatureName:numberArrayValue:
initWithFeatureName:numberValue:
initWithFeatureName:strictLowerBound:strictUpperBound:output:
initWithFeatureName:stringArrayValue:
initWithFeatureName:stringValue:
initWithFeatureProvider:
initWithFilehandle:sizeFactor:keyLength:singleByteOffset:
initWithFilename:
initWithFilename:flags:error:errorHandler:
initWithFilename:flags:error:sgDb:
initWithFilename:withProtection:sharedLock:error:
initWithFirst:second:
initWithFirstName:middleName:lastName:fullName:prefix:suffix:recordId:origin:extractionInfo:
initWithFrame:configuration:
initWithGloballyUniqueId:
initWithGroupId:
initWithGuardedData:
initWithGuardedData:serialQueue:
initWithHandle:handleType:fullName:
initWithHarvestStore:xpcActivityManager:
initWithHead:tail:
initWithHeaderData:
initWithHelperMappingType:andLanguage:
initWithHistoricalDataRequests:error:
initWithId:origin:type:label:address:airportCode:latitude:longitude:accuracy:quality:handle:
initWithIdentifier:subject:sender:recipients:dateSent:type:
initWithIdentityKey:
initWithIdentityKey:label:normalizedValue:
initWithInMemoryStorage
initWithInMemoryStorageSparse
initWithIndexesInRange:
initWithIntent:response:
initWithIntentPersonAtDate:bundleId:handle:displayName:
initWithInteraction:fromBundleIdentifier:
initWithInteraction:identifier:fromBundleIdentifier:
initWithInteractionIdentifier:fromBundleIdentifier:
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:lodgingBusinessLocation:reservationDuration:numberOfAdults:numberOfChildren:
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:rentalCar:rentalDuration:pickupLocation:dropOffLocation:
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:reservationDuration:partySize:restaurantLocation:
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:reservedSeat:boatTrip:
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:reservedSeat:busTrip:
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:reservedSeat:event:
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:reservedSeat:flight:
initWithItemType:itemRef:
initWithJapaneseName:
initWithKVS:kvStoreIdentifier:
initWithKey:ascending:
initWithKey:value:
initWithKeyName:
initWithKeyName:searchable:searchableByDefault:unique:multiValued:
initWithKeyOptions:valueOptions:capacity:
initWithKeyPointerFunctions:valuePointerFunctions:capacity:
initWithKeysToFetch:
initWithKoreanName:
initWithL:D:I:N:W:
initWithL:D:I:N:W:bi_lstm_0_h_in:bi_lstm_0_c_in:bi_lstm_0_h_in_rev:bi_lstm_0_c_in_rev:
initWithLabel:value:
initWithLanguage:
initWithLanguage:windowLength:
initWithLatitude:longitude:
initWithLocaleIdentifier:
initWithLocation:time:title:core:bi_lstm_0_h_out:bi_lstm_0_c_out:bi_lstm_0_h_out_rev:bi_lstm_0_c_out_rev:
initWithLocationType:trigger:name:
initWithLog:isLogged:
initWithLong:
initWithLookupHintInDomain:range:labelRange:labelString:valueRange:valueString:qid:
initWithML:withMLQR:andHealthStore:
initWithMLModel:error:
initWithMachServiceName:options:
initWithMailContentEvent:contentProtection:
initWithMailContentEvent:contentProtection:htmlParser:
initWithMailCount:unigramTokenCounts:bigramTokenCounts:unigramQueriedTokensCount:bigramQueriedTokensCount:oldestTokenAge:
initWithMailCount:unigramTokenCounts:bigramTokenCounts:unigramTokensCount:bigramTokensCount:
initWithMailMessage:
initWithMailMessageKey:
initWithManager:
initWithMappings:
initWithMatchType:range:labelRange:labelString:valueRange:valueString:
initWithMatchType:range:labelRange:labelString:valueRange:valueString:postalAddressComponents:
initWithMemoryMappedPath:
initWithMessage:
initWithMessage:candidateName:
initWithMessage:ddMatch:isUnlikelyPhone:
initWithMessage:entity:enrichedTaggedCharacterRanges:modelOutput:
initWithMessage:plainTextDetectedData:enrichedTaggedCharacterRanges:modelOutput:
initWithMessageDictionary:
initWithMessageId:hasHashedMessageId:simpleMailMessage:senderConnectionScore:biomeMessageSummary:mailClientUtil:store:preLoadedFeatureNames:
initWithMessageId:hasHashedMessageId:simpleMailMessage:senderConnectionScore:biomeMessageSummary:store:preLoadedFeatureNames:
initWithMessageId:hasHashedMessageId:simpleMailMessage:spotlightIdentifier:senderConnectionScore:biomeMessageSummary:mailClientUtil:store:preLoadedFeatureNames:
initWithMessageId:hasHashedMessageId:simpleMailMessage:spotlightIdentifier:senderConnectionScore:biomeMessageSummary:store:preLoadedFeatureNames:
initWithMessageId:mailboxId:score:isSalient:creationDate:
initWithMessageId:mailboxId:score:isSalient:gteSaliency:isCounted:creationDate:
initWithMessageIdHeaderValues:accountIdentifier:
initWithMessages:
initWithMessagesConnection:store:
initWithMessagesContentEvent:contentProtection:
initWithMessagesFromDaysAgo:throughDaysAgo:limit:withBiomeData:store:useSpotlightDataForMissingBiomeData:preLoadedFeatureNames:simulatedCSSIs:
initWithMigrationObjects:
initWithModel:locale:featurizer:modelSource:
initWithName:
initWithName:boxMaker:handler:qos:
initWithName:bundleIdentifier:
initWithName:protectionClass:bundleIdentifier:
initWithName:reason:userInfo:
initWithName:value:
initWithNameMappings:minimumConfidence:confidenceMapper:tokenToIgnore:forNameDetector:
initWithNamedHandle:
initWithNewEKEventStoreGetter:callBlockWithEKEventStoreForReading:
initWithNormalizedEmail:
initWithNumberArray:
initWithNumericMapping:andSymbolicMapping:
initWithObjects:
initWithObjects:forKeys:
initWithObjectsAndKeys:
initWithOperation:
initWithOperation:contact:
initWithOperation:event:
initWithOperation:eventBatch:
initWithOperation:reminder:
initWithOptions:capacity:
initWithOutputItems:exeptionTemplates:jsMessageLogs:
initWithOutputItems:sourceMetadata:exeptionTemplates:jsMessageLogs:
initWithParametersDict:
initWithParent:item:htmlId:textConsumer:
initWithPath:
initWithPattern:
initWithPattern:options:error:
initWithPerMessageTransformer:
initWithPerson:bundleId:interactionIdentifier:groupId:date:
initWithPersonHandle:startDate:endDate:
initWithPlainText:category:dataDetectorMatches:enrichedTaggedCharacterRanges:modelOutput:fromSuggestTool:
initWithPlainText:components:
initWithPlainText:taggedCharacterRanges:
initWithPlist:chunks:context:
initWithPositiveEngagement:noEngagement:negativeEngagement:
initWithPrivateStreamIdentifier:storeConfig:
initWithProvider:boatName:boatNumber:tripDuration:departureBoatTerminalLocation:arrivalBoatTerminalLocation:
initWithProvider:busName:busNumber:tripDuration:departureBusStopLocation:departurePlatform:arrivalBusStopLocation:arrivalPlatform:
initWithProvider:trackingNumber:
initWithProvider:trainName:trainNumber:tripDuration:departureStationLocation:departurePlatform:arrivalStationLocation:arrivalPlatform:
initWithPseudoContactWithKey:parent:name:
initWithQueryString:context:
initWithQueryString:queryContext:
initWithRange:coreRange:signature:wildcardsMatches:
initWithRecordID:action:
initWithRecordId:duplicateKey:sourceKey:content:title:creationTimestamp:lastModifiedTimestamp:tags:when:locations:structuredData:state:curated:
initWithRecordId:duplicateKey:sourceKey:origin:dueDate:dueLocationType:dueLocation:dueLocationTrigger:title:reminderStatus:contactIdentifier:creationDate:
initWithRecordId:origin:parentURL:provider:trackingNumber:
initWithRecordId:origin:title:dueDateComponents:dueLocationType:dueLocation:dueLocationTrigger:sourceURL:reminderStatus:opaqueKey:uniqueKey:contactIdentifier:creationDate:
initWithRecordId:sourceUniqueIdentifier:
initWithRecordName:zoneID:
initWithRecordType:
initWithRecordType:recordID:
initWithRecordZoneIDs:
initWithRecordZoneIDs:configurationsByRecordZoneID:
initWithRegexpData:
initWithReminder:notes:
initWithRequestId:pluginIdentifier:personHandle:startDate:endDate:
initWithReservationContainerReference:reservationItemReferences:
initWithSGSqlEntityStore:
initWithSGSqlEntityStore:andEKStore:
initWithSGSqlEntityStore:andREMStore:
initWithSaliencyOverrideRules:featureNames:mean:std:groundTruthEstimatorRules:threshold:minCountToConsiderATokenAsHighlyDiscriminant:ratioToConsiderATokenAsHighlyDiscriminant:minCountToConsiderATokenAsExtremelyDiscriminant:ratioToConsiderATokenAsExtremelyDiscriminant:
initWithSalientCount:regularCount:token:
initWithScrolledToEnd:messageViewMaxDwellTime:messageViewTotalDwellTime:messageViewCount:timeBeforeViewStartSinceAvailable:numberOfMailsViewedBeforeSinceAvailable:userReplied:replyDraftStarted:forwardDraftStarted:numberOfUnreadMessageAtFirstViewTime:numberOfMoreRecentUnreadMessageAtFirstViewTime:markedAsRead:markedAsUnread:markedAsJunk:mailGotFlagged:linkClicked:
initWithSearchableItem:
initWithSeatSection:seatRow:seatNumber:seatingType:
initWithSerialized:
initWithSerializedEntityKey:entityType:serializedParentKey:
initWithServiceContext:concurrencyBehavior:backpressureHazard:
initWithServiceContext:concurrencyBehavior:backpressureHazard:extractionMode:
initWithSessionDescriptor:modelClass:
initWithSessionInfo:userInfo:frameworksToCheck:
initWithShape:dataType:error:
initWithSnippet:core:signature:detectedLanguage:isIncomingMessage:score:matchFoundInBCC:
initWithSocialProfile:
initWithSource:messageId:
initWithSource:uniqueIdentifier:
initWithSource:vector:
initWithSpanishName:
initWithStartDateComponents:endDateComponents:
initWithStore:
initWithStore:ctsManager:ekStoreProvider:contactStore:pet2Tracker:
initWithStoreIdentifier:type:
initWithStringValue:
initWithStructuredLocation:proximity:
initWithSubregexps:prefilter:
initWithSuiteName:
initWithTagSchemes:
initWithTagSchemes:options:
initWithTarget:maxDistance:
initWithTargetMapping:phoneMapping:emailMapping:addressMapping:andDateMapping:
initWithTeamIdentifier:type:userActivity:validStartDate:validEndDate:
initWithText:originalMessage:index:
initWithText:senderID:timestamp:
initWithTextMessage:
initWithTextMessage:detectedData:
initWithTimeIntervalSince1970:
initWithTimeIntervalSinceNow:
initWithTimeIntervalSinceReferenceDate:
initWithTitle:
initWithTracker:
initWithTraining:
initWithTransformer:sessionDescriptor:modelClass:
initWithType:
initWithType:categoryDescription:originBundleId:confidence:schemaOrg:participants:
initWithType:categoryDescription:originBundleId:confidence:schemaOrg:participants:eventActivities:
initWithType:content:
initWithType:extraction:context:contextRangeOfInterest:label:hasPhoneLabel:match:extractionInfo:isUnlikelyPhone:
initWithType:filename:path:
initWithType:label:address:airportCode:accuracy:quality:
initWithType:label:address:airportCode:latitude:longitude:accuracy:quality:handle:
initWithType:label:airportCode:latitude:longitude:accuracy:quality:
initWithType:range:
initWithType:start:end:
initWithURL:error:
initWithURL:title:receivedFromHandle:bundleIdentifier:groupIdentifier:documentIdentifier:documentTitle:documentDate:documentTimeInterval:receivedAt:flags:
initWithUTF8String:
initWithUniqueIdentifier:domainIdentifier:attributeSet:
initWithUniversalLink:
initWithUnsubscriptionRuleField:tokenCounts:
initWithUsername:userIdentifier:bundleIdentifier:displayName:service:teamIdentifier:
initWithUsername:userIdentifier:bundleIdentifier:displayName:service:teamIdentifier:label:extractionInfo:recordId:
initWithValidatedFormat:validFormatSpecifiers:locale:arguments:error:
initWithValue:label:type:recordId:duplicateKey:sourceKey:context:extractionInfo:
initWithVietnameseName:
initWithVirtualMachine:
initWithVocabularyIdentifier:spokenPhrase:pronunciationHint:
initWithWeeks:days:hours:minutes:seconds:
initWithWesternName:
initWithYear:month:day:hour:minute:second:timeZone:
initWithZoneName:ownerName:
initWithoutSharedInstance
initialize
initializeDatabase:withProtection:sharedLock:newDatabaseCreated:
inputDescriptionsByName
inputDictFromTaggedCharacterRanges:usingTokenMapping:forModel:
inputDictFromTaggedCharacterRanges:usingTokenMapping:forModel:pflTraining:hasEvent:
inputFromTaggedCharacterRanges:usingInputMapping:forModel:pflTraining:hasEvent:
inputFromTaggedCharacterRanges:usingTokenMapping:forModel:
inputMapping
inputStreamWithFileAtPath:
inputTokenMapping
insertEvent:
insertEventTagsAndLocations:primaryKey:
insertOrReplaceIntoTable:dictionary:onError:
insertSubject:
insertSuggestedEventCalendar
insertToken:forFeatureName:salientCount:regularCount:time:
instance
instanceForNameDetector
instantMessageAddress
instantMessageAddress:forIdentity:parent:curated:context:contextRangeOfInterest:extractionInfo:
instantMessageAddresses
int64AsNonnullNSNumberForColumnAlias:
intValue
integerValue
intent
intentClassWhitelist
intentResponse
intentResponseUserActivityString
intentResponseUserActivityString:
interaction
interactionBundleId
interactionBundleId:
interactionContactIdentifier
interactionContactIdentifier:
interactionGroupId
interactionGroupId:
interactionId
interactionId:
interactionIdentifier
interactionKey
interactionKeyForCategory:interface:actionType:
interactionKeyForInterface:actionType:
interactionTeamId
interactionTeamId:
interactionsWriteQueue
interfaceForRealtimeReminder:
interfaceWithProtocol:
internalDetectedDetails
internalEntityId
interrupted
intersectSet:
intersectsIndexesInRange:
intersectsSet:
invalidate
invalidateAndCancel
invalidatedIdentifiers
invalidatedMessageIdentifiers
inversionRateForNamingTradition:
invertedSet
invokeNewEntitiesCallbackWithEntity:
ipsosMessageWithMailMessage:store:
ipsosMessageWithTextMessage:store:
ipsosMessagesFromSearchableItems:withCompletion:
ipsos_confidence
ipsos_eventAttributes
ipsos_eventClassificationType
ipsos_eventStatus
ipsos_messageUnit
ipsos_usedBubblesCount
isAddressContext:
isAllDay
isAllDay:
isAppleMailMessageId
isApplicationMimeType
isBirthdayContext:
isCalendarMimeType
isCancelled
isCandidateForExtraction
isCapitalized:
isClassCLocked
isCommonNameWord:
isCommonVietnameseSurname:
isComplete
isCompleted
isConfirmation
isConfirmationOptionalForContent:
isConfirmedEvent:
isConfirmedEventWithoutTimeStamp:
isConfirmedReminder:
isCounted
isDNUEnabled
isDNUOnlyEnablement
isDeviceFormattedForProtection
isDifficultName:
isDissectorProcessingWithinRateLimit
isDomain
isDownloadedLocally
isDropoff
isEnabled
isEnabledWithCompletion:
isEphemeral
isEphemeralIdentifier:
isEqual:
isEqualToContactDetail:
isEqualToContactDetailKey:
isEqualToContactSharingTransformer:
isEqualToConversationFlatteningTransformer:
isEqualToConversationTurn:
isEqualToCuratedEventKey:
isEqualToDOMParserResult:
isEqualToDataDetectorMatch:
isEqualToDate:
isEqualToDeliveryKey:
isEqualToDuplicateKey:
isEqualToEmailKey:
isEqualToEntity:
isEqualToEntityMappingTransformer:
isEqualToEntityMatchingTransformer:
isEqualToEntityTag:
isEqualToIdentityKey:
isEqualToJournalEntry:
isEqualToLabeledValue:
isEqualToLocation:
isEqualToMessage:
isEqualToMessageKey:
isEqualToNameMappingTransformer:
isEqualToNumber:
isEqualToPseudoContactKey:
isEqualToPseudoEventKey:
isEqualToPseudoReminderKey:
isEqualToRawKey:
isEqualToRecordId:
isEqualToReminderDueLocation:
isEqualToResult:
isEqualToSchemaOrgKey:
isEqualToSearchableItemIdTriple:
isEqualToSet:
isEqualToSimpleMailHeaderKeyValue:
isEqualToSimpleMailMessage:
isEqualToStorageContact:
isEqualToStorageEvent:
isEqualToStorageLocation:
isEqualToStorageReminder:
isEqualToString:
isEqualToStringMappingTransformer:
isEqualToSymbolicMappingTransformer:
isEqualToTaggedCharacterRange:
isEqualToTimeZone:
isEqualToTokenDistanceMappingTransformer:
isEqualToTokenizerMappingTransformer:
isEventCandidateForURL:andTitle:containsSchemaOrg:withCompletion:
isEventCandidateForURL:title:withCompletion:
isExtraKey
isExtractedEventCategory
isFacebookBirthdayCalendar
isFamilyName:
isFieldReverseMapped
isFileURL
isFirstPerson
isFloating
isFromCongratulation
isFromDataDetectors
isFromForwardedMessage
isFromSuggestions
isFullyDownloaded
isHarvested
isInMemory
isIncomingMessage
isInhuman
isInhumanBody:
isInhumanContent
isInhumanContentNoncached
isInhumanEmailAddress:
isInhumanName:
isInhumanNamedEmailAddress:
isInhumanPerson:
isInhumanPhoneNumber:
isInstalled
isIntentResponseUserActivityString
isInteractionBundleId
isInteractionGroupId
isInteractionTeamId
isKindOfClass:
isLegalEmailAddress:
isLikePhoneNumber:
isLogged
isLowercaseStringCommonNameWord:
isMainThread
isMaybeNameContext:
isMe
isMemberOfClass:
isMessageAvailable:
isMessageOfTypeEvent:
isMigrating
isNameRequest:
isNaturalLanguageEvent
isNaturalLanguageEventAttributes
isNaturalLanguageSuggestedEventCalendar
isNegativeExample
isNull
isNullForColumnName:table:
isOthersMimeType
isPOIFilters
isPartiallyDownloaded
isPerson
isPositiveExample
isPossessive:
isPotentialEventMessage
isProbablyShortCJKName:
isProposal
isRecentlyDeleted:
isRejectedEvent:
isRejectedReminder:
isRejection
isReminderDueDateComponentsInPast:givenReferenceDate:allDay:
isReminderMetadata
isRequestFromSharedCalendarProvider:
isReservationItemReferences
isSGEntity:duplicateOfEKEvent:withStore:
isSalient
isSalientName:
isSalientNameByChars:
isSameAsOrUnifiedWithContact:
isSchemaOrg
isSenderSignificant
isSenderSupportedForMLDefaultExtraction:
isSenderSupportedForPFLTraining:
isSenderSupportedForShadowExtraction:
isSent
isStoredEncrypted
isStructuredEventCandidateForEmailDomain:
isStructuredEventCandidateForURL:title:
isSubclassOfClass:
isSubmodelRebuilt
isSubscribedHolidayCalendar
isSuggestedEventCalendar
isSupportedEntityType:
isSupportedSearchableItemBundleIdentifier:
isTemplateName
isTemplateShortName
isThirdPerson
isTriggerOptional
isTrivial
isTwoPersonConversation:
isUnifiedWithContactWithIdentifier:
isUnlocked
isUpdatableContact:
isUrl
isValidAllDayRange
isValidCancelledEvent:
isValidNewEvent:
isValidNewReminder:
isValidSuggestion:
isValidTextMessageForProcessing:
itemProps
itemReference
itemScopes
itemType
itemValue
items
journalForInMemoryDb
journalNameForDbPath:
journalWithName:
journaling
jsDictForResolveCandidates:forCategory:label:rawIndexSet:taggedCharacterRanges:
jsMessageLogs
jsMessageLogsDictionaryForMailMessage:
jsMessageLogsDictionaryForPrivacyAwareLogs:
jsonLdForItem:
jsonLdOutputFromMailMessage:
jsonLdOutputFromTextMessage:
jsonLdOutputFromURL:title:payload:extractionDate:
jsonObject
keepDirty:
keepRealtimeAsLost
keyForContactExternalId:
keyForContactUniqueId:
keyForEmail:
keyForEventKitQuery
keyForInstantMessageAddress:
keyForNormalizedEmail:
keyForNormalizedPhone:
keyForOutputName:label:
keyForPersonHandle:
keyForSocialProfile:
keyValueCacheForPath:
keysForCuratedContactDetail:ofContact:
keysForStorageContact:
keysToFetch
knownTimeZoneNames
kvCacheManager
kvsIfSyncSupported
label
labelForProbabilities:
labelOf:inLanguage:
labelRange
labelString
labelTokenIndexesForOutputName:label:
labelTokenIndexesForOutputName:label:modelOutput:
labelTokenIndexesForOutputName:label:modelOutput:maxMergeDistance:
labels
labelsWithMatchingStringsForMailMessage:
lang
language
languageCode
languageForFTSTable:
languageForLocaleIdentifier:
languagePartOfLanguageCode:
languageToUpdateEntityFTSTo
lastFollowUpWarningResultsWithLimit:includingResultsFromPreviousCall:withCompletion:
lastIndex
lastMigrationAttempt
lastModifiedDate
lastModifiedTimestamp
lastName
lastObject
lastPathComponent
lastSeenTimestampForKey:
lastSuggestionsFromMessageLock
lastSuggestionsFromMessageRequest
lastSuggestionsFromMessageResponse
laterDate:
latestChangeAnchor
latitude
latitudeAndLongitudeForAirport:withDataOffset:andFileHandle:
launchAppForSuggestedEventUsingLaunchInfo:completion:
launchCountForApp:afterDate:limit:
launchCountForBundleId:afterDate:limit:
launchCountMessageAfterDate:
launchInfoForSuggestedEventWithUniqueIdentifier:sourceURL:clientLocale:ignoreUserActivitySupport:ignoreMailCheck:completion:
legacyIOS13HashesForClassicHashes:
legacyManateeSecret
legs
length
lengthOfBytesUsingEncoding:
letterCharacterSet
levelForFactor:withNamespaceName:
likePrefix:
likelyLanguage
lineRangeForRange:
linguisticTagsInRange:scheme:options:orthography:tokenRanges:
link:to:type:strength:
linkClicked
linkMapping
listId
listIdProbability
listIdStats
loadAddressDetailsFrom:
loadAllContactDetailsForRecordId:
loadAllContactDetailsFromTableForRecordId:
loadAllContactDetailsFromTableForRecordId:type:
loadAllContactDetailsWithWhereClause:onPrep:dedupeAgainst:
loadAllDetailsFrom:
loadAllPrecomputedContactMatches
loadAllReimportRequests
loadAllSerializedContacts
loadBinaryClassificationModelFromMobileAssetForObjective:language:withBlock:
loadBirthdayDetailsFrom:
loadCNContactMatchesForContact:andGetMaxEntityId:
loadContactDetailsForRecordId:type:
loadContactDetailsWithWhereClause:onPrep:type:dedupeAgainst:recordId:
loadContactForStorageContact:usingSerializedContactCache:
loadDuplicateKeyByRecordId:
loadEmailAddressDetailsFrom:
loadEntitiesByEntityKey:entityType:resolveDuplicates:
loadEntitiesBySourceKey:entityType:resolveDuplicates:
loadEntityByKey:
loadEntityByRecordId:
loadEventByDuplicateKey:
loadEventByKeyForOldCodePathTesting:
loadEventByRecordId:
loadEventClassifierModel
loadEventClassifierModelFromPath:
loadEventForDuplicateKey:
loadEventForPrimaryKey:
loadEventForRecordId:
loadEventsWithInteractionIdentifiers:fromBundleIdentifier:
loadExtractionInfoForPrimaryKey:
loadFactors
loadFullDownloadRequestBatch:
loadHTMLString:baseURL:
loadInterdicts
loadJSFromASCIIFile:
loadLazyPlistWithBasename:
loadLevelAsBooleanFromFactor:
loadLevelAsLongFromFactor:
loadLevelAsModelPath:
loadLevelAsNumericArrayFromFactor:
loadLevelAsNumericDictionaryFromFactor:
loadLevelAsNumericFromFactor:
loadLevelAsStringArrayFromFactor:
loadLevelAsStringFromFactor:
loadMappingsForType:andLanguage:
loadMessagesToRefresh
loadModel
loadOrigin:
loadOriginByRecordId:
loadPhoneDetailsFrom:
loadReminderByKey:
loadReminderByKeyOld:
loadReminderByRecordId:
loadReminderByRecordIdOld:
loadResetInfo
loadSerializedContactForId:
loadSourceKeyByRecordId:
loadStatsCounterWithKey:
loadStorageContactByRecordId:
loadStorageContactByRecordId:error:
loadTagForPrimaryKey:
loadTrieWithFileName:
loadUnexecutedReimportRequests
loadUnqueriedReimportRequests
loadUnseenReimportItemsForRequest:
localTimeZone
locale
localeAsset
localeAssetIdentifier
localeIdentifier
localeWithLocaleIdentifier:
localizations
localizedApplicationName
localizedCapitalizedString
localizedCaseInsensitiveCompare:
localizedCaseInsensitiveContainsString:
localizedDescription
localizedLowercaseString
localizedNameWithPreferredLocalizations:
localizedStringForKey:preferredLocalization:
localizedStringForKey:value:table:
localizedStringFromPersonNameComponents:style:options:
location
locationType
locationTypeAsString:
locationTypeForEntity:
locationTypeForHandle:latitude:longitude:airportCode:address:label:
locationTypeForRealtimeEvent:
locationWithoutPrediction
locations
locationsAtIndex:
locationsCount
locationsType
lock
lockState
lodgingBusinessLocation
logActionVerb:actionType:
logAggregateSummaryForInteraction:
logAndIncrementEventCountForDictionary:
logBirthdayExtractionMetricForPerson:forDate:isFromCongratulation:withModelVersion:didRegexTrigger:didResponseKitTrigger:
logConfirmPercentAfterContactConfirmation
logConfirmPercentAfterContactDetailConfirmation
logConfirmPercentAfterContactDetailRejection
logConfirmPercentAfterContactRejection
logDKIMStatus:forPipelineEntity:
logEventExtractionForTemplateName:extractionStatus:outputExceptions:outputInfos:jsMessageLogs:jsOutputLogs:timingProcessing:
logEventInteractionForEntity:interface:actionType:
logEventInteractionForEntitySync:interface:actionType:
logEventInteractionForEventWithExternalIdentifier:interface:actionType:
logEventInteractionForEventWithUniqueKey:interface:actionType:
logEventInteractionForRealtimeEvent:interface:actionType:
logEventInteractionForRealtimeEvent:parentEntity:interface:actionType:
logEventInteractionForRealtimeEventSync:parentEntity:interface:actionType:
logFailedEventExtractionForMessage:category:missingEntities:timingProcessingInMs:
logFailedEventExtractionForMessage:failureCode:
logFailedExtractionWithClassification:missingEntities:mlSummary:shadowExtraction:timingProcessingInMs:forMessage:parentEntity:
logFollowUpStatsAndSetting
logMLExtractionForSchema:mergedSchemaAndDiff:parentEntity:timingProcessingInMs:eventClassification:mailMessage:shadowExtraction:mlDefaultExtraction:
logMLInteractions:context:mlDefaultExtraction:
logMLMessageEventExtractionForEntitySync:interface:actionType:
logMLMessageEventExtractionForSchema:message:category:timingProcessingInMs:
logMLMessageEventExtractionForTemplateName:extractionStatus:outputInfo:outputExceptions:timingProcessing:
logMLMessageEventExtractionInteractions:context:
logMLMessageEventInteractionForEntity:interface:actionType:
logMessage:
logMetricAutocompleteResult:recordId:contactIdentifier:bundleId:
logMetricAutocompleteUserSelectedRecordId:contactIdentifier:bundleId:
logMetricContactCreated:contactIdentifier:bundleId:
logMetricContactSearchResult:recordId:contactIdentifier:bundleId:
logMetricContactSearchResultSelected:contactIdentifier:bundleId:
logMetricSearchResultsIncludedPureSuggestionWithBundleId:
logMetricSuggestedContactDetailShown:contactIdentifier:bundleId:
logNewInteractionSummaryWithDictionary:
logNewInteractionWithDictionary:
logOrStageWithSaliency:
logPrewarmWithLastPrewarmTime:
logReminder:actionType:
logReminderExtractionFromEntity:interface:actionType:dueLocation:dueDateComponents:extractionStatus:timingProcessing:
logReminderInteractionFromEntity:usingStore:interface:actionType:
logReminderInteractionFromReminder:interface:actionType:
logReminderTitle:actionType:
logSuggestionInteractionForRecordId:interface:actionType:
logUnknownContactInformationShownCount:notShownCount:bundleId:
logUserCreatedReminderTitle:
logUserCreatedReminderTitle:withCompletion:
logWarningSignatureStats
loggedExtractions
loggedExtractionsDescription
loggedExtractionsEventsCount
loggedInteractions
loggedInteractionsDescription
loggedInteractionsSummary
loggedInteractionsSummaryDescription
loggingIdentifier
logsToSend
longLongValue
longValue
longitude
lookForNicknamesInSentMailsAndStore:shouldContinue:
mailAddressIsAccountOwner:
mailAppUsageLevel:
mailAttachmentHistogramType
mailAttachmentHistograms
mailAttachmentHistogramsCount
mailConversationIdentifier
mailCount
mailGotFlagged
mailIntelligenceSPILogging
mailIntelligenceStagedLogsForMessageId:
mailItemIsInSent:
mailItemIsInTrash:
mailItemIsValid:
mailItemMessageIdHeaderValues:
mailMessage
mailMessageID
mailboxId
mailboxIdentifiers
mailboxProbability
mailboxStats
mailboxTypeProbability
mailboxTypeStats
mailingList
mailingListId:
mailsProcessedDuringIncrementalUpdate
mainBundle
make
makeInterdictsForBlob:withContactStore:
map:f:
mappedArrayBufferForFileName:
mappings
mappingsForType:andLanguage:
markEntityAsDupeByRecordId:
markFinished
markLostSpotlightReferencesWithBundleIdentifier:uniqueIdentifiers:
markMailIntelligenceStagedLogsAsLoggedAndClearLogPayloadForMessageId:
markMessagesFound:
markMessagesLost:
markMessagesUndisplayablyLost:
markReimportItemAsSeenByReceiverWithBundleId:uniqueId:
markReimportItemsAsSeenByReceiverWithBundleId:items:
markReimportRequestAsExecutedWithRequestId:
markedAsHarvested
markedAsJunk
markedAsRead
markedAsUnread
masterEntityIDsForMasterEntityQuery:bindings:
masterEntityId
masterEntityIdForContactOrContactDetailRecord:
match
matchDate
matchForString:withinRange:
matchRecentContact:store:
matchType
matchesForString:
matchesForString:withinRange:onlyFirstMatch:
matchesInString:options:range:
matchesString:
matchesUtf8:
matchinfoDataWithEntityId:detailEntityId:matchinfoData:
matchingContacts
maxDistance
maxIdForTable:
maxKnownDbVersion
maxMergeDistanceForSection:label:
maxPromptWindowSeconds
maxReplyLength
mayHaveSentMessageToEmail:
mayHaveSentMessageToHandle:
md5Hash:
mean
merge:
mergeAll:
mergeColumn:intoColumn:
mergeComponent:usingBaseDateComponents:withDateComponents:
mergeContact:withContact:
mergeDetectedDateComponents:
mergeDueLocations:
mergeFallbackSchema:parentEntity:
mergeFrom:
mergeIntoEKEvent:withStore:preservingValuesDifferentFrom:
mergePostalAddressComponents:
mergeSchemas:withExpectedSchemas:
mergeSchemas:withExpectedSchemas:reply:
mergeTaggedCharacterRanges:usingBaseTaggedCharacterRanges:extraTags:tagOverrides:alignWithGroundTruth:
mergeTagsFromTaggedCharacterRanges:withTaggedCharacterRanges:
messageAvailableTime
messageEventCategoryForCategoryString:
messageFetchTime
messageForObjectID:
messageForSearchableItemIdentifier:
messageHarvestQueue
messageId
messageIdForBundleIdentifier:uniqueIdentifier:
messageIdHeaderValuesFromHeaders:
messageIdWithoutBrackets
messageIdentifier
messageIdentifiersGeneratingContact:
messageIdsForBundleIdentifier:domainIdentifierGlobs:limit:
messageIdsForBundleIdentifier:limit:
messageIdsForBundleIdentifier:uniqueIdentifiers:
messageKey
messageObjectIDForURL:
messageProcessingLimit
messageRepository
messageSeparatorPattern
messageSubjectDetectedData
messageUnits
messageViewCount
messageViewMaxDwellTime
messageViewTotalDwellTime
messageWithEmailKey:
messageWithIPMessage:
messageWithIdentifier:error:
messageWithMessageId:fromSource:
messageWithSearchableItem:
messages
messagesAdded:
messagesAppUsageLevel:
messagesBannerLimit
messagesDeleted:
messagesFound:
messagesFoundAfterUndisplayablyLost:
messagesLost:
messagesToRefreshWithCompletion:
messagesUndisplayablyLost:
metadata
method
methodForSelector:
metricsContactDetailFoundIn
metricsContactDetailOwner
middleName
middlename
migrateDatabases
migrateFromKVS:withCompletion:
migrateFromStore
migrateToVersion:
migration_AddAuthorColumnIfMissing
migration_AddNewishTablesIfMissing
migration_ConvertContentAndDupKeyHashesToBlobs
migration_DeduplicateIdentityPhones
migration_DropMessagingTermsWithPhoneExtensions
migration_FixUpColumnsForDevicesWhoMissedTheImprovedLegacyMigration
migration_FixupMergeGroups
migration_RecreateFTSTableWithITS
migration_RemoveEntityReferencesWithoutBundleIdentifier
migration_createFeaturesTable
migration_createFollowUpTable
migration_createKVTable
migration_createSignatureStatsTable
migration_deleteEmergencyExtractions
migration_deleteInteractions
migration_deleteInternalExtractionsFromML
migration_deleteLegacyMessages
migration_deleteNilDateEvents
migration_deleteSerializedContacts
migration_newContactDetailsSchema
migration_newEventsSchema
migration_newRemindersSchema
migration_rebuildFTSWithDetailEntityIDDocIDs
migration_reimport
migration_separateMessageEntities
migration_separateMessageSnippets
migrations
mimeCategory
minCountToConsiderATokenAsExtremelyDiscriminant
minCountToConsiderATokenAsHighlyDiscriminant
miniSignatureRange:
minusSet:
minute
missingAttachmentAtIndex:
missingAttachmentPredictionPerformanceInMilliSeconds
missingAttachmentType
missingAttachments
missingAttachmentsCount
missingRecipientAtIndex:
missingRecipientPredictionPerformanceInMilliSeconds
missingRecipientType
missingRecipients
missingRecipientsCount
mobileAssetsEnabled
mode
modeAsString:
model
modelAsString:
modelClass
modelClassForObjective:
modelDescription
modelFeatureNames
modelFeatureStandardizationMeans
modelFeatureStandardizationStandardDeviations
modelForPath:modelClass:
modelFromMobileAssetForEntity:type:language:class:
modelFromMobileAssetForName:language:
modelGroundTruthFeatureLowerBounds
modelGroundTruthFeatureNames
modelGroundTruthFeatureUpperBounds
modelGroundTruthOutputs
modelGroundTruthVersion
modelInferenceVersion
modelInferences:
modelInferences:pflTraining:hasEvent:
modelOutput
modelOutputFromOutputMapping:modelOutput:modelInput:
modelOutputSummary
modelOutputSummary:
modelPath
modelPathForCurrentEnrollment
modelPathForExperimentId:treatmentId:deploymentId:
modelPathForTriClient:andNamespace:
modelSource
modelVersion
modelWithConfigPath:binPath:
modelWithContentsOfURL:configuration:error:
modelsDirectoryName
month
mostRecentParentKeyForDuplicateKey:
moveItemAtPath:toPath:error:
multiArrayConstraint
mutableBytes
mutableCopy
mutableSetForKey:
naiveBayesModelQueryResultForFeature:unigramTokens:bigramTokens:
name
nameComponents
nameDetectorRules
nameForActivityId:
nameForDataDetectorMatch:withValue:
nameFromEmail:
nameMappingForToken:withConfidence:
namePayload:
nameSimilarity:and:
nameStringFromEmailAddress:
namedEmailAddressWithCSPerson:
namedEmailAddressWithFieldValue:
namedEmailAddressesWithFieldValues:
namesApproximatelyMatch:and:
namesApproximatelyMatch:and:threshold:
namesForAirport:
namesForAirport:withDataOffset:andFileHandle:
namesForDetail:limitTo:prependMaybe:onlySignificant:withCompletion:
namesForDetailCacheSnapshotsWithCompletion:
namesFromTagger:
nanosecond
naturalLanguageEvent
naturalLanguageEventAttributes
naturalLanguageEventTypeIdentifier:
naturalLanguageSuggestedEventCalendar
nbCharactersInMailSubject
nbExtremelyDiscriminantTokensForIgnorability
nbExtremelyDiscriminantTokensForSaliency
nbHighlyDiscriminantTokensForIgnorability
nbHighlyDiscriminantTokensForSaliency
nbTokensInMailSubject
needsFullSync
needsMigration
needsSourceVerification
negativeEngagement
neutralPredictedAsIgnorable
neutralPredictedAsNeutral
neutralPredictedAsSalient
newByAdding:asSalient:
newPrivateStreamDefaultConfigurationWithStoreBasePath:
newTestingInstanceWithSharedKVS:
newTransformerInstanceForLanguage:
newlineCharacterSet
nextMessage:
nextMessage:entity:
nextObject
nextPendingGeocode
nickNameRegex
nickNamesFrom:
nickname
nicknameCSSearchQueryContextFetchAttributes
nicknameDetectionRegexes
nicknamesForName:
nilEntities:
noEngagement
nonPersistentDataStore
nonZeroColumnsForDomain:withColumns:
nonZeroColumnsForDomains:withColumns:
nonnullNSStringForColumn:
nonnullNSStringForColumnAlias:
nonnullNSStringForColumnName:table:
noopWithCompletion:
normalizeHandleForRecipientFilterAndRemoveFromDetailsCache:
normalizeLowercaseWord:
normalizeWord:
normalizedDigits:
notes
notificationCount
notificationFromRemoteNotificationDictionary:
notificationQueue
notificationType
notificationWithName:object:userInfo:
notificationsAllowListOverride
notifyWhenFlushed:
nsDataFromSignature:
null
numberArray
numberArrayValue
numberMatchesContactsForm:
numberMatchesContactsForm:amongContactsWithIdentifiers:
numberOfDaysBetweenDate:andDate:
numberOfExtractions
numberOfLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
numberOfLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
numberOfMailsViewedBeforeSinceAvailable
numberOfMoreRecentUnreadMessageAtFirstViewTime
numberOfNonZeroValues
numberOfPredictedAttachmentOnLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
numberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
numberOfRanges
numberOfRowsAssociatedWithDomain:
numberOfRowsInTable:
numberOfUnreadMessageAtFirstViewTime
numberValue
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedChar:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
numberWithUnsignedShort:
numericMapping
numericValue
objCType
objectAtIndex:
objectAtIndexedSubscript:
objectEnumerator
objectForKey:
objectForKeyedSubscript:
objectID
objectsPassingTest:
observeValueForKeyPath:ofObject:change:context:
observers
offset
offsetInFile
oldestTokenAge
onlyShowSignificantNLEvents
onlyShowSignificantPseudoContacts
opaqueKey
open
openURL:configuration:completionHandler:
openUserActivity:usingApplicationRecord:configuration:completionHandler:
operatingSystemVersion
operation
operationCount
operatorCarrierCode
operatorFlightNumber
optimize:
optionsWithRequestedRepresentationType:networkUsage:
optionsWithRequestedRepresentationType:networkUsage:includeSuggestions:
orPredicateDescriptorWithDescriptors:
orderedSetWithObjects:
origin
originBundleId
originForDuplicateKey:entity:parent:store:
originForDuplicateKey:sourceKey:store:
originFromRecordId:completion:
originTypeForEntityType:
originWithType:sourceKey:externalKey:bundleId:fromForwardedMessage:
originWithType:sourceKey:externalKey:fromForwardedMessage:
orphanEvent:
outcomeAsString:
output
outputConfig
outputExceptionsFromOutput:
outputFromPackedJSMailMessage:
outputFromPackedJSSchema:
outputFromPackedJSTextMessage:
outputItems
outputLogsForClassification:
outputMapping
outputStreamToFileAtPath:append:
packedJSInteractionFromInteraction:bundleIdentifier:creationTimestamp:
packedJSMailMessageFromMailMessage:
packedJSMailMessageFromMailMessage:context:
packedJSSchemaFromSchemaOrgItems:
packedJSTextMessageFromTextMessage:
packedJSURLFromURL:title:payload:
packedJSURLFromURL:title:payload:creationTimestamp:
pageCount
parMapOnQueue:concurrencyLimit:input:f:
parallelPipeline:
parent
parentAccount
parentEntityType
parentKey
parentKeysForDuplicateKey:
parse:
parseHTML:
parseHTML:reply:
parseHeaders:
parseInteraction:bundleId:
parseMicrodataToJsonLd:error:
parseParameterizedHeaderValue:
parseRfc822:
parseRfc822Headers:htmlContent:source:
parsecDomain
parsecFlightCachingAPIBaseURL
parsecWikidataQid
partialDate
partialDateForDataDetectorResult:
participantCount:
participants
partySize
path
pathComponents
pathExtension
pathForResource:ofType:
pathForResource:ofType:inDirectory:
pathForResource:ofType:inDirectory:forLocalization:
pathHasFutureDbSchema:
patternData
patternDict
patternInstances
patterns
patternsForClass:
patternsForIdentifier:
pauseCacheEvictionTemporarily
pauseIfNeededAndReturnRetryEligibilityForError:
payloadCountForKey:
payloadForDomain:
payloadForString:
payloadForString:range:
payloadForUTF8String:length:
payloadLengthForKey:
payloadToOutputWithEntryPoint:arguments:
payloadToOutputWithEntryPoint:arguments:reply:
payloadWithStartChar:andSize:
pendingGeocode
pendingVerification
performContactDetailCacheRebuildActivity:
performDatabaseCheck
performIntegrityCheck
performIntegrityCheckOnly
performMaintenanceWithShouldContinueBlock:
performRecentsSearch:operationQueue:completion:
performRecentsSearch:queue:completion:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performTask:forPluginID:completionHandler:
performedAction:forApp:onContact:
performedAction:onDetail:forContact:
performedAction:onEventInCalendar:
performedAction:onRecordForContact:
personCCRecipientsAge
personCCRecipientsProbability
personCCRecipientsStats
personExistsInContacts:name:handle:
personFromSenderAge
personFromSenderInDyadicConversationAge
personFromSenderInDyadicConversationProbability
personFromSenderInDyadicConversationStats
personFromSenderProbability
personFromSenderStats
personHandle
personToRecipientsAge
personToRecipientsProbability
personToRecipientsStats
pet2Tracker
phone
phoneMapping
phoneNumber
phoneNumber:forIdentity:parent:curated:context:contextRangeOfInterest:extractionInfo:
phoneNumber:label:extractionInfo:recordId:
phoneNumberWithStringValue:
phoneNumbers
phoneTags
phones
photoPath
pickupLocation
pipelineEntity
placeCorruptionMarker
placemarkWithLocation:name:postalAddress:
plainText
plainTextDetectedData
plainTextSigRange
plainTextStringsByLabelInTaggedCharacterRanges:inPlainText:
planReceivedFromServerWithPayload:completion:
planReceivedWithPayload:error:
planReceivedWithRecipe:attachments:error:
pluginEndDeletion:
pluginEndProcessingSearchableItem:
pluginIdentifier
pluginIdentifiers
pluginStartDeletion:
pluginStartProcessingSearchableItem:
pluginStartSetup:
poiFilters
poiFilters:
pointerValue
posTaggerNouns
positiveEngagement
possibleNameStringFromEmailAddress:
postHistoricalFlightInformationWithAirlineCode:flightNumber:flightDate:andPayload:
postNotificationName:object:userInfo:deliverImmediately:
postalAddress
postalAddress:components:label:extractionInfo:recordId:
postalAddressComponents
postalAddressFromString:
postalCode
powerStateWithCompletion:
precomposedStringWithCanonicalMapping
predicate
predicateDescriptorForRemindersWithCompleted:
predicateDescriptorForRemindersWithDueDateBetween:and:
predicateDescriptorForRemindersWithTitleContains:
predicateForContactsMatchingEmailAddress:
predicateForContactsMatchingFullTextSearch:containerIdentifiers:groupIdentifiers:
predicateForContactsMatchingName:
predicateForContactsMatchingPhoneNumber:
predicateForContactsWithIdentifiers:
predicateForEventCreatedFromSuggestionWithOpaqueKey:
predicateForEventsWithStartDate:endDate:calendars:
predicateForEventsWithStartDateAfter:
predicateForEventsWithStringValue:
predicateForKey:inCollection:
predicateSatisfyingAllSubpredicates:
predicateSatisfyingAnySubpredicate:
predicateWithBlock:
predicateWithFormat:
predict:
predictForInput:
predictLabelForInput:
predictedCCEmailAddressesWithToAddresses:ccAddresses:fromAddress:date:bounds:completion:
predictedLabelHypothesesForString:maximumCount:
predictedMissingElementScore
predictedSaliency
predictedSaliencyAsString:
predictedSaliencyScore
predictedToEmailAddressesWithToAddresses:ccAddresses:fromAddress:date:bounds:completion:
predictionFromFeatures:error:
preferences
preferredLanguages
preferredLocalizationsFromArray:forPreferences:
preferredName
preferredUniqueIdentifier
prefilterNameMatchTerms
prefix
prefixForForIdentityKey:
prematchedContactIdentifiers
prepAndRunNonDataQueries:onError:
prepAndRunQuery:onPrep:onRow:onError:
prepAndRunSQL:onPrep:onRow:onError:
prepMigrator
prepQuery:onPrep:onError:
prepareForRealtimeExtraction:
prepareSqlStoreInMemory
prepareSqlStoreInMemoryByClearingExistingStore:
preprocessDomParserResult:subject:epoch:category:labelsWithMatchingStrings:
preprocessHTML:subject:epoch:category:labelsWithMatchingStrings:
preprocessPackedSGMessage:
preprocessWithoutXPCForHTML:subject:epoch:category:labelsWithMatchingStrings:
prettyName:
prettyNamesReverseMapping
preventUnsubscriptionOpportunitiesSuggestionsForField:toValues:withCompletion:
previousInteractionFromUserOnConversationInMinutes
previousInteractionOnConversationInMinutes
primaryICloudCalendarAccount
primaryRecipients
priorScore
privacyAwareLogsForMLExtractions:
privacyAwareLogsForMLExtractions:reply:
privacySalt
privateCloudDatabase
privateGroupsCount
processContactEnrichment:recordId:
processConversation:options:
processConversation:threadLength:options:
processIdentifier
processInfo
processInteraction:bundleIdentifier:protectionClass:
processMailMessage:headers:pipeline:context:harvestMetrics:
processNewConfirmOrRejectEventHashes:
processNewConfirmedOrRejectedReminderHashes:
processPseudoContactEntity:recordId:
processSearchableItem:
processSearchableItem:harvestMetrics:
processSearchableItem:pipeline:context:
processSearchableItem:pipeline:context:harvestMetrics:
processSearchableItemForTesting:
processStateChanges
processTextMessage:pipeline:context:harvestMetrics:
processTextMessageConversation:threadLength:
processUserAction:searchableItem:
processingLanguageForContent:
prodid
profanityInTokens:forLocaleIdentifier:
profiles
promptJoiningString
properties
propertiesForName:
propertyListWithData:options:format:error:
propertyName
protection
protocol
provider
providerForString:
providerName
proxyArray
pruneEntitiesOlderThan:suspensionHandler:
pruneEntitiesOlderThan:suspensionHandler:batchSize:
pruneEntitiesOlderThanOneYearWithSuspensionHandler:
pruneLostMessagesWithSource:count:
pruneMailIntelligenceOlderThanOneYearWithSuspensionHandler:
pruneNLEventEntitiesOlderThan:
pruneNLEventEntitiesOlderThanTwoWeeks
pruneReminders
pseudoContactKey
pseudoContactVcardDirectory
pseudoEventKey
pseudoReminderKey
publisherFromStartTime:
punctuationCharacterSet
purgeDeletedEmailsReferencesFromStore:
purgeOldNicknameMappingRecords
purgeOldTokensFromStore:
purgeSearchableItemsWithIdentifiers:bundleID:
purgeSpotlightReferencesWithBundleIdentifier:uniqueIdentifiers:completion:
purgeTokensToMatchCappingPolicyFromStore:
purgeTokensWhichLastUpdateWasBefore:
purgeTokensWhichLastUpdateWasBefore:shouldContinue:
purgeUniqueIds
pushAll:
pushConfirmedEventFields:
pushConfirmedEventWithoutTimestampFields:
pushConfirmedEvents:
pushConfirmedEventsWithoutTimestamp:
pushConfirmedReminders:
pushContacts:
pushEmptyHashesForTestingKey:
pushRejectedEvents:
pushRejectedReminders:
pushResetInfo:
pushStorageDetails:
pushValue:toDistKeyWithDomain:suffix:
pushValue:toDistKeyWithSuffix:
pushValueForDistributionKeyWithDomain:subdomain:suffix:action:value:
queriesToSkipFromEmptyToVersion:
queryEmailsFromDaysAgo:throughDaysAgo:fetchAttributes:filterQuery:queryString:bundleIds:spotlightTimeOut:withError:
queryForPersonHandle:startDate:endDate:contentTypes:
queryFromDaysAgo:throughDaysAgo:limit:withError:handler:
queryFromDaysAgo:throughDaysAgo:limit:withError:simulatedCSSIs:handler:
queryItemWithName:value:
querySentMailsForNicknameMatchingFromDaysAgo:throughDaysAgo:limit:handler:
quickTypeTriggerForContext:localeIdentifier:modelConfigPath:espressoBinFilePath:
quickTypeTriggerForContext:localeIdentifier:modelConfigPath:espressoBinFilePath:useContactNames:
quotedRegionStartPattern
quotedRegions
quotedRegionsFrom:isAOSPMail:foundToEndOfMessage:
radius
raise
raise:format:
rampId
randomlyNamedInMemoryPathWithBaseName:
range
rangeAtIndex:
rangeOfBodyFromRfc822:
rangeOfCharacterFromSet:
rangeOfCharacterFromSet:options:range:
rangeOfData:options:range:
rangeOfFirstMatchInString:options:range:
rangeOfHeadersFromRfc822:
rangeOfSenderName:inRange:restrictLength:forMessage:
rangeOfSenderNameComponents:withFullname:inSubstring:
rangeOfString:
rangeOfString:options:
rangeOfString:options:range:
rangeOfUnit:startDate:interval:forDate:
rangeValue
rangeWithGregorianStartComponents:endComponents:
rangeWithName:
rangeWithStart:startTimeZone:end:endTimeZone:
rangeWithStartDate:startTimeZone:endDate:endTimeZone:
rankedGlobalSuggestionsFromContext:contactsOnly:
rateLimitInterval
ratioToConsiderATokenAsExtremelyDiscriminant
ratioToConsiderATokenAsHighlyDiscriminant
rawValueOrDataForKey:
rawValuesForKey:
re2WithRegexp:
re2WithRegexpData:
re2WithRegexpDataLazy:
re2WithRegexpLazy:
re2WithSubregexps:
re2WithSubregexps:prefilter:
reMatched:
reactAfterChangesToKeyPath:ofObject:usingBlock:
read
readCachedAccounts
readDataOfLength:
readFrom:
readObjectWithPlist:chunks:context:
readTransaction:
readTransactionWithHandle:block:
realtimeContactForFields:updatedFields:addedToCuratedContact:
realtimeContactForNewContact:
realtimeContactIsSignificant:
realtimeContactIsSignificantOrSignificanceIsDisabled:
realtimeContactWithContactStore:forPseudoContact:error:
realtimeContactWithContactStore:forPseudoContact:fromEntity:error:
realtimeEventForCanceledEvent:eventIdentifier:harvested:
realtimeEventForDuplicateEvent:eventIdentifier:harvested:
realtimeEventForExtractionExceptionWithSourceMessageId:
realtimeEventForNearDuplicateEvent:harvested:
realtimeEventForNewEvent:
realtimeEventForNewEvent:harvested:
realtimeEventUpdateToEvent:withNewValues:harvested:
realtimeSuggestionsForMailOrMessageWithHash:options:completion:completionDelivery:providedBy:searchableItem:dissectIfNecessary:isTextMessage:
realtimeSuggestionsFromURL:title:HTMLPayload:extractionDate:withCompletion:
rebuildContactDetailsCacheWithShouldContinueBlock:
rebuildIdentityTables
rebuildNamesForDetailCache:
receivedAt
receivedFromHandle
receivedOnBattery
recentCalls
recentURLsWithLimit:
recentURLsWithLimit:withCompletion:
recentlyHarvestedDetailLock
recentsContainSomeOfEmails:phoneNumbers:instantMessageAddresses:
recipient
recipientConservative
recipientConservativeDetectionRegexes
recipientDetectionRegexes
recipients
recordBannerConfirmedWithContact:proposedCNContact:confirmedCNContact:inApp:confirmationUI:pet2Tracker:
recordBannerConfirmedWithEvent:proposedEKEvent:confirmedEKEvent:inApp:
recordBannerRejectedWithEvent:inApp:
recordBannerShownWithContacts:events:inApp:
recordBirthdayExtractionAccuracy:withOffset:withModelVersion:isFromCongratulation:didRegexTrigger:didResponseKitTrigger:
recordConfirmedForContact:
recordContactDetailEngagementWithResolution:detailType:extractionType:modelVersion:confirmRejectUI:pet2Tracker:
recordConversationTurnWithContact:received:curated:throughApp:withDetailName:withDetailExtraction:
recordExtractionOutcome:forDetectionsInMessage:signatureRange:isDDSignature:
recordExtractionOutcome:fromMessage:foundInSignature:isDDSignature:detection:
recordExtractionOutcome:fromMessage:foundInSignature:isDDSignature:match:foundInCNContact:modelVersion:isUnlikelyPhone:
recordExtractionOutcome:fromMessage:foundInSignature:isDDSignature:match:modelVersion:isUnlikelyPhone:
recordID
recordId
recordIdForContactDetailWithRowId:
recordIdForContactWithRowId:
recordIdForEmailWithRowId:
recordIdForEventWithRowId:
recordIdWithInternalEntityId:
recordIdWithNumericValue:
recordIdWithTableId:rowId:
recordInteractionForEventWithInterface:actionType:harvestedEKEvent:curatedEKEvent:
recordInteractionForEventWithInterface:actionType:harvestedSGEvent:curatedEKEvent:
recordInteractionIgnoredWithReason:
recordMappingFromNickname:toEmailAddress:
recordMappingFromNickname:toEmailAddress:withDateOfMatch:
recordMaybeContactFrom:withVersion:
recordMessageInChat:
recordName
recordRejectedContact:inApp:rejectionUI:pet2Tracker:
recordRejectedForContact:
recordSelfIdMatchWithPatternType:patternHash:nameTokenCount:nameClassification:messageIndex:
recordSelfIdModelScore:model:supervision:
recordSentContactDetailWithMessage:match:found:
recordSuccessfulMigration
recordType
recordWithTimezoneValue:datetimeType:
recordZoneId
recycleColumn:asColumn:
referenceWithBundleId:domainId:itemIds:
refreshAssetPath
refreshEnrollmentInformationForNamespace:
refreshRolloutIdentifiersForNamespace:
refreshSuggestionsContact:
regex2ForKey:
regexBelongsToSender
regexDoesNotBelongToSender
regexFromJoinedArray:wordBoundary:
regexLanguage
regexesImmuneToDeath
regexpIdsThatMightMatchUtf8:
regionAsset
regionAssetIdentifier
registerActivitiesWithSystem
registerAndLinkIdentity:recordId:phones:socialProfiles:email:curated:
registerAndLinkIdentity:recordId:phones:socialProfiles:email:curated:isSent:
registerBlockOnSuggestionsSettingsChange:
registerCachePrecomputationWithCTS
registerChangeHistoryClientIdentifier:error:
registerForActivity:handler:
registerForCTS
registerForCoreSpotlightIndexing
registerForLockStateChangeNotifications:
registerForProactiveHarvesting
registerInteractionConsumer:levelOfService:
registerJournalUnlockHandler
registerMailConsumer:levelOfService:
registerNotificationObserver
registerOnUpdateBlock:
registerRemindersConsumer:levelOfService:
registerSentMailMessage:
registerSentTextMessage:
registerURLFeedback:absoluteURL:
registerURLFeedback:absoluteURL:withCompletion:
registerUpdateHandler:
regularCount
regularExpressionWithPattern:options:error:
regularScore
reimportRequestDBStats
reimportRequestsContainBundleIdentifier:uniqueIdentifier:
reindexSearchableItemsWithMinimumEntityId:searchableIndex:acknowledgementHandler:reindexCount:
rejectContact:
rejectContact:confirmRejectUI:completion:
rejectContactByRecordID:error:
rejectContactDetailByRecordID:error:
rejectContactDetailKey:
rejectContactDetailRecord:confirmRejectUI:completion:
rejectEvent:
rejectEvent:completion:
rejectEventByRecordId:completion:
rejectEventByRecordId:error:
rejectEventFromExternalDevice:
rejectEventFromOtherDevice:
rejectEventFromThisDevice:
rejectFieldValuesForRecordId:
rejectHashesForOpaqueKey:forMatching:
rejectRealtimeContact:
rejectRealtimeContact:error:
rejectRealtimeEvent:error:
rejectRealtimeReminder:completion:
rejectRecord:confirmRejectUI:completion:
rejectReminderByKey:error:
rejectReminderByRecordId:completion:
rejectReminderFromExternalDevice:
rejectReminderFromOtherDevice:
rejectReminderFromThisDevice:
rejectStorageEvent:
rejectStoredEvent:error:
rejectStoredReminder:error:
rejectedEventHashes
rejectedReminderHashes
relatedContentItems
releaseDissectorLock
releaseInstanceAndWaitForDealloc:
reload
reminder
reminderAlarmTriggeredForRecordId:completion:
reminderAlarmTriggeredForRecordId:error:
reminderAlarmTriggeredForStorageReminder:error:
reminderAlarmTriggeredFromThisDevice:
reminderDuplicateKeyForEntityId:
reminderEnrichments
reminderEntityIdForDuplicateKey:
reminderEntityIdForPrimaryKey:
reminderHasDuplicate:usingStore:
reminderHash:
reminderInputMapping
reminderMetadata
reminderMetadata:
reminderOriginForPrimaryKey:
reminderOutputMapping
reminderOverrides
reminderPredicateForReminder:
reminderPrimaryKeyForEntityId:
reminderSourceKeyForDuplicateKey:
reminderStatus
reminderTitleForContent:
reminderTitleForContent:withCompletion:
reminderTitleFromMessages:forLanguage:
reminders
remindersCreatedBetweenStartDate:endDate:
remindersTestingPipeline
remindersTestingPipelineWithCustomReminderDissector:
removeAllObjects
removeAllStoredPseudoContacts
removeAllStoredPseudoContactsWithCompletion:
removeConfirmationHistoryForEntityWithOpaqueKey:creationTimestamp:
removeConfirmationHistoryForEvent:
removeContact:
removeDKIMSignatureHeaders:
removeDependency:
removeEvent:span:commit:error:
removeExternalEnrichmentAtIndex:
removeFromList
removeIndex:
removeIndexes:
removeInteractionsSummaryLogsFromLogs:
removeItemAtPath:error:
removeLastObject
removeNotificationObserver
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObjectsAtIndexes:
removeObjectsInArray:
removeObjectsInRange:
removeObserver:forKeyPath:context:
removeSnippetsForEntities:
removeStringFromNoContactsCache:
removeSuggestedEventCalendar
removeTag:
rentalCar
rentalCompanyName
rentalDuration
replaceBytesInRange:withBytes:length:
replaceCacheOfType:block:
replaceCharactersInRange:withString:
replaceDetailsInContact:onDiskContact:
replaceOccurrencesOfString:withString:options:range:
replaceTzid:inDocument:fromOriginal:withBaseLength:withEventRange:
replyAttributionPattern
replyDraftStarted
reportDbStats
reportMailIntelligenceFollowUpUserEngagement:forNSDataFromFollowUpWarning:withCompletion:
reportMailIntelligenceFollowUpUserEngagement:forStringFromFollowUpWarning:withCompletion:
reportMessagesFound:lost:withCompletion:
reportUserEngagement:forWarning:
reportUserEngagement:forWarning:store:
reportUserEngagement:forWarning:withCompletion:
reportValue:forFeatureSetting:withCompletion:
requestCache
requestDefer
requestFullDownload
requestId
requestReimportForHistoricalDataRequest:
requestReimportFromIdentifier:forPersonHandle:startDate:endDate:
requestRepresentationWithOptions:completionHandler:
reservationClassForSchema:
reservationContainerReference
reservationContainerReference:
reservationContainerReferenceWithData:
reservationDuration
reservationDurationFromReservationSchema:
reservationHolderName
reservationHolderNameFromReservationSchema:
reservationItemReferences
reservationItemReferences:
reservationItemReferencesWithData:
reservationNumber
reservationNumberFromReservationSchema:
reservationStatus
reservationStatusFromReservationSchema:
reservationStatusToSchema:
reservations
reservationsContainUniqueItemReferences
reservedSeat
reset
resetConfirmationAndRejectionHistory:
resetExtractionLogs
resetIfNeeded
resetInfo
resetInteractionsLogs
resetInteractionsSummaryLogs
resetLogs
resetNoFlush
resetSharedCachesAndModels
resetToDefaultPatternsForTesting
resetUnusedScannersForTesting
resolveByScoreBreakTiesArbitrarily:
resolveCandidates:forCategory:label:rawIndexSet:taggedCharacterRanges:
resolveCandidatesForJSDict:reply:
resolveCandidatesWithoutXPC:forCategory:label:rawIndexSet:taggedCharacterRanges:
resolveFullDownloadRequests:
resolveFullDownloadRequests:withCompletion:
resolveItemRefsWithDocument:
resolveName:
resolveSGContactDetailsPreferringPhraseExtractionsAndLabels
resourceBundle
resourcePath
respondsToSelector:
response
response1
responseWith:
responseWith:also:also:
responseWithError:
responsesForMessage:maximumResponses:forContext:withLanguage:options:
restaurantLocation
result
resultIfAvailable
resultNonnullWithBlock:
resultType
resultWithBlock:
resultWithHistoricalDataRequests:error:
resultWithTimeout:error:
resume
retain
retainCount
retrainingPipeline
reverseMapEntity:forCategory:withSchemaExpectation:
reverseMapMailMessage:withPreprocessedHTML:forCategory:withSchemExpectation:
reverseObjectEnumerator
richness
rollbackedEmailsCountToComplyToPostDeletionPolicy
rollbackedSlicesCountToComplyToPostDeletionPolicy
rolloutId
rolloutIdentifiers
rolloutIdentifiersWithNamespaceName:
round:toSignificantFigures:
rowId
ruleBasedInferenceFor:
ruleBasedInferenceFor:config:
rules
rulesFromFeatures:lowerBounds:upperBounds:outputs:
runAsyncOnQueue:afterDelaySeconds:block:
runDataDetectors:locale:epoch:metadataForTypes:
runJavascriptOnWebView:withCallback:
runMode:beforeDate:
runQueries:forVersion:inTransactionOnDb:
runQuery:onDb:
runQuery:onRow:onError:
runQuery:values:onDb:
runWithDissectorLock:
runWithExceptionBarrier:
runWithLockAcquired:
runWithWriteLockAcquired:
saliencyForFeatureVector:
saliencyForMessageId:
saliencyFromEmailHeaders:withCompletion:
saliencyFromRFC822Data:withCompletion:
saliencyOverrideFeatureLowerBounds
saliencyOverrideFeatureNames
saliencyOverrideFeatureUpperBounds
saliencyOverrideOutputs
saliencyOverrideRules
saliencyPredictionPerformanceInMilliSeconds
saliencyThreshold
saliencyWithScore:isSalient:
saliencyWithScore:isSalient:gteSaliency:isCounted:
salientCount
salientPredictedAsIgnorable
salientPredictedAsNeutral
salientPredictedAsSalient
salientScore
salt
saltAtomicReferenceId
sanitizeAirportName:
sanitizeHandles:
saveEvent:span:commit:error:
saveSubscription:completionHandler:
saveSynchronouslyWithError:
scanEventsInLastMessageOnly:synchronously:completionHandler:
scanEventsInMessageUnits:synchronously:completionHandler:
scanHexInt:
scannerWithString:
schema
schemaFromAirline:
schemaFromAirport:
schemaFromBoatReservation:
schemaFromBusReservation:
schemaFromFlight:
schemaFromFlightReservation:
schemaFromGenericTicketedEventReservation:
schemaFromLodgingReservation:
schemaFromMovieTicketedEventReservation:
schemaFromReservation:
schemaFromRestaurantReservation:
schemaFromTicketedEventReservation:
schemaFromTrainReservation:
schemaOrg
schemaOrg:
schemaOrgAndMissingEntitiesForExtractedEvent:
schemaOrgAndMissingEntitiesForMessage:withMLModelParameters:
schemaOrgAndMissingEntitiesForPreprocessed:eventClassification:fromSuggestTool:
schemaOrgAndMissingEntitiesForPreprocessed:eventClassification:fromSuggestTool:addressThreshold:pflTrainable:hasEvent:
schemaOrgToEvents:completion:
schemaOrgToOutput:reply:
schemaStringForDateComponents:
schemaStringForEventStatus:
schemaStringForReservationStatus:
schemaURLString:isEqualTo:
schemaVersion
scheme
score
scrolledToEnd
searchQueryForSearchTerm:preferredKinds:sendingAddress:recentsDomain:
searchTokensForReminderTitle:
searchableIndex:reindexAllSearchableItemsWithAcknowledgementHandler:
searchableIndex:reindexSearchableItemsWithIdentifiers:acknowledgementHandler:
searchableIndexDidFinishThrottle:
searchableIndexDidThrottle:
searchableItem
searchableItemIdTripleWithBundleId:domainId:uniqueId:
searchableItemIsEligibleForDissectorPipeline:targetPluginsCustomAttributeName:
searchableItemIsEligibleForHarvesting:eligibleExceptForAge:
searchableItemIsEligibleForHarvestingWithGetterBlock:bundleIdentifier:eligibleExceptForAge:
searchableItemIsOutgoing:
searchableItemIsStoredEncryptedWithGetterBlock:bundleIdentifier:
searchableItemsForContactsForInternalIdentifiers:
seatNumber
seatSection
seatingType
second
secondsFromGMT
secondsFromGMTForDate:
securityMethod
seekLocationForKey:
seekToEnd
seekToFileOffset:
seekToStart
segmentWesternNameWithNameParts:andPrefix:
selectAuthoritativeDetailsForContactWithId:
selectColumns:fromTable:whereClause:onPrep:onError:
selectEntityQuery:
selectMigrationQueue
self
selfIdDetectionWithTextMessage:inConversation:withSupervision:
selfIdentificationMessageCount
sendContactToSpotlight:
sendMessageWithCategory:type:payload:error:
sendRTCLogsWithCompletion:
sendRTCLogsWithShouldContinueBlock:completion:
sender
senderConnectionScore
senderDisplayName
senderDomain
senderID
senderIsAccountOwner
senderIsBusinessChat
serializationPassesBasicScrutiny:
serialize
serializeAll:
serialized
serializedContactsLimit
serializedEntityIds
serverIdentifierForAccount:
serverPreferredPushEnvironmentWithCompletionHandler:
serviceContext
sessionDescriptor
sessionWithConfiguration:
setAccountHandles:
setAccountIdentifier:
setAccountSetup:
setAccuracy:
setActive:
setActiveAggregatedAccuracyLogForThePastFourWeeks:
setActiveAggregatedAccuracyLogSinceModelInitialization:
setActiveTrialMetadata:
setAdditionalInfo:
setAdditionalRecipients:
setAddress:
setAddressMapping:
setAgeOfTheSubmodelInDays:
setAllDay:
setAllMailIntelligenceAsNotSalient
setAllowGeocode:
setAllowsAirPlayForMediaPlayback:
setAllowsContentJavaScript:
setAllowsInlineMediaPlayback:
setAllowsPictureInPictureMediaPlayback:
setArray:forKey:
setArrivalAirportCode:
setArrivalAirportName:
setArrivalDateTime:
setAssetPath:
setAtomic:
setAttachmentsProbability:
setAttachmentsStats:
setAuthor:
setAuthorEmailAddresses:
setAuthorMatchingContacts:
setAuthorMatchingContactsKeys:
setAuthorNickname:
setAuthorPhotoPath:
setAuthors:
setBackground:
setBackgroundAggregatedAccuracyLogForThePastFourWeeks:
setBackgroundAggregatedAccuracyLogSinceModelInitialization:
setBackgroundTrialMetadata:
setBi_lstm_0_c_in:
setBi_lstm_0_c_in_rev:
setBi_lstm_0_c_out:
setBi_lstm_0_c_out_rev:
setBi_lstm_0_h_in:
setBi_lstm_0_h_in_rev:
setBi_lstm_0_h_out:
setBi_lstm_0_h_out_rev:
setBiomeAggregationPerformanceInMilliSeconds:
setBirthday:
setBlockedWarningCount:
setBookingInfoUrl:
setBundleID:
setBundleIDs:
setBundleId:
setBundleIdentifier:
setByAddingObject:
setByAddingObjectsFromArray:
setByAddingObjectsFromSet:
setCRLookupForTesting:
setCacheHit:
setCacheLimitForTesting:
setCachedAccounts
setCachedVIPEmailAddresses:
setCalendar:
setCallbackQueue:
setCancelled:
setCandidateNameRange:
setCategory:
setCategoryType:
setCc:
setChangeCallback:
setCharacterMapping:
setCharacterSet:
setCheckInUrl:
setCity:
setCloudKitPersistedState:
setCompletionBlock:
setCompletionHandler:
setComponentName:
setComputeUnits:
setConfidence:
setConfiguration:
setConfirmationNumber:
setContactDetail:
setContacts:
setContainer:
setContent:
setContentCreationDate:
setContentProtection:
setContentRangeOfInterest:
setContext:
setContextRange:
setConversationAge:
setConversationIdentifier:
setConversationProbability:
setConversationStats:
setCore:
setCorrect:
setCount128KBTo512KB:
setCount32KBTo128KB:
setCount512KBTo2MB:
setCount8KBTo32KB:
setCountLimit:
setCountOver2MB:
setCountUpTo8KB:
setCountry:
setCreationDate:
setCreationTimestamp:
setCriteria:criteria:forActivity:
setCtsJobConstraints:count:
setCumulatedSubmodelsRollbackForPostDeletionPolicyPerformanceInMilliSeconds:
setCurrentColumns:
setCustomObject:forKey:
setD:
setData:
setDataDetector:
setDatabase:
setDate:
setDateFormat:
setDateIsCorrect:
setDateStyle:
setDaysAvailableDuringIncrementalUpdate:
setDaysProcessedDuringIncrementalUpdate:
setDecodingFailurePolicy:
setDefaultWebpagePreferences:
setDelegate:
setDeleteAllSyncedItemsCallback:
setDeleteDomainIds:
setDeleteUniqueIds:
setDeletedEmailsCount:
setDeletedTokensCountToComplyToCappingPolicy:
setDeletedWithRelatedUniqueIdentifier:
setDeliveries:
setDepartureAirportCode:
setDepartureAirportName:
setDepartureDateTime:
setDeploymentId:
setDetail:
setDidKVSMigrationToken:forIdentifier:
setDidRegexTrigger:
setDidResponseKitTrigger:
setDocumentSource:
setDomain:
setDomainFromSenderAge:
setDomainFromSenderStats:
setDomainIdentifier:
setDomains:
setDonatedEvent:
setDoubleNSNumber:forKey:
setDueDateComponents:
setDuplicateKey:
setEmail:
setEmailAddresses:
setEmailHeaders:
setEmailLanguage:
setEmailMapping:
setEndUTCOffsetSeconds:
setEnrichedTaggedCharacterRanges:
setEntity:
setErrorCode:
setEstimatedGroundTruth:
setEvents:
setEventsWereRemovedFromEventKit:
setException:
setExitCode:
setExperimentId:
setExternalEnrichments:
setExtraKey:
setExtractedReminderDuplicateKey:
setExtractionInfo:
setExtractionModelVersion:
setExtractionSignatureSource:
setFamilyName:
setFeatureNames:
setFeatureToNumberArrayValue:forName:
setFeatureToNumberValue:forName:
setFeatureToStringArrayValue:forName:
setFeatureToStringValue:forName:
setFeatures:
setFetchAllChanges:
setFetchAttributes:
setFetchRecordZonesCompletionBlock:
setFlightCarrier:
setFlightNumber:
setFlightStatus:
setFloating:
setForKey:
setFormatOptions:
setFormatterBehavior:
setFoundIn:
setFoundInSenderCNContact:
setFoundItemsHandler:
setFoundMatchingElement:
setFrom:
setFromAllowListedSender:
setFromStatus:
setGazetteers:forTagScheme:
setGivenName:
setGroupId:
setGroupingSeparator:
setHTMLContentData:
setHTTPBody:
setHTTPMethod:
setHandle:
setHarvestMetrics:
setHarvestSource:
setHarvestedOnBattery:
setHasAgeOfTheSubmodelInDays:
setHasAllDay:
setHasApp:
setHasAttachmentsProbability:
setHasBiomeAggregationPerformanceInMilliSeconds:
setHasBlockedWarningCount:
setHasCancelled:
setHasCategoryType:
setHasContactDetail:
setHasConversationAge:
setHasConversationProbability:
setHasCorrect:
setHasCount128KBTo512KB:
setHasCount32KBTo128KB:
setHasCount512KBTo2MB:
setHasCount8KBTo32KB:
setHasCountOver2MB:
setHasCountUpTo8KB:
setHasCreationTimestamp:
setHasCumulatedSubmodelsRollbackForPostDeletionPolicyPerformanceInMilliSeconds:
setHasCustomResponsesAfterPruning:
setHasDateIsCorrect:
setHasDaysAvailableDuringIncrementalUpdate:
setHasDaysProcessedDuringIncrementalUpdate:
setHasDeferredProcessStateChanges:
setHasDeferredSync:
setHasDeletedEmailsCount:
setHasDeletedTokensCountToComplyToCappingPolicy:
setHasDeploymentId:
setHasDetail:
setHasDidRegexTrigger:
setHasDidResponseKitTrigger:
setHasDocumentSource:
setHasDomainFromSenderAge:
setHasDomainFromSenderProbability:
setHasEnd:
setHasEndUTCOffsetSeconds:
setHasErrorCode:
setHasEstimatedGroundTruth:
setHasExtractionModelVersion:
setHasExtractionSignatureSource:
setHasFoundIn:
setHasFoundInSenderCNContact:
setHasFoundMatchingElement:
setHasFromStatus:
setHasFullSync
setHasHarvestSource:
setHasHarvestedOnBattery:
setHasHasName:
setHasHighPriority:
setHasHoursSinceLastIncrementalUpdate:
setHasHoursSinceReference:
setHasIgnorablePredictedAsIgnorable:
setHasIgnorablePredictedAsNeutral:
setHasIgnorablePredictedAsSalient:
setHasIncomingMessage:
setHasInhumanHeaders:
setHasIsFromCongratulation:
setHasIsSubmodelRebuilt:
setHasIsUnlikelyPhone:
setHasLastModifiedTimestamp:
setHasListIdProbability:
setHasLocationType:
setHasLongitude:
setHasMailboxProbability:
setHasMailboxTypeProbability:
setHasMailsProcessedDuringIncrementalUpdate:
setHasMethod:
setHasMissingAttachmentPredictionPerformanceInMilliSeconds:
setHasMissingRecipientPredictionPerformanceInMilliSeconds:
setHasMode:
setHasModel:
setHasModelVersion:
setHasName:
setHasNbCharactersInMailSubject:
setHasNbExtremelyDiscriminantTokensForIgnorability:
setHasNbExtremelyDiscriminantTokensForSaliency:
setHasNbHighlyDiscriminantTokensForIgnorability:
setHasNbHighlyDiscriminantTokensForSaliency:
setHasNbTokensInMailSubject:
setHasNegativeEngagement:
setHasNeutralPredictedAsIgnorable:
setHasNeutralPredictedAsNeutral:
setHasNeutralPredictedAsSalient:
setHasNoEngagement:
setHasNumberOfLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20:
setHasNumberOfLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20:
setHasNumberOfPredictedAttachmentOnLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20:
setHasNumberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20:
setHasOffset:
setHasOutcome:
setHasParentEntityType:
setHasPersonCCRecipientsAge:
setHasPersonCCRecipientsProbability:
setHasPersonFromSenderAge:
setHasPersonFromSenderInDyadicConversationAge:
setHasPersonFromSenderInDyadicConversationProbability:
setHasPersonFromSenderProbability:
setHasPersonToRecipientsAge:
setHasPersonToRecipientsProbability:
setHasPositiveEngagement:
setHasPredictedMissingElementScore:
setHasPredictedSaliency:
setHasPredictedSaliencyScore:
setHasPreviousInteractionFromUserOnConversationInMinutes:
setHasPreviousInteractionOnConversationInMinutes:
setHasQuality:
setHasReceivedOnBattery:
setHasResult:
setHasRollbackedEmailsCountToComplyToPostDeletionPolicy:
setHasRollbackedSlicesCountToComplyToPostDeletionPolicy:
setHasSaliencyPredictionPerformanceInMilliSeconds:
setHasSalientPredictedAsIgnorable:
setHasSalientPredictedAsNeutral:
setHasSalientPredictedAsSalient:
setHasSenderConnectionScore:
setHasSignature:
setHasSignificantWork:
setHasSource:
setHasStandardMailRulesProbability:
setHasStart:
setHasStartUTCOffsetSeconds:
setHasSubjectContentAge:
setHasSubjectContentProbability:
setHasSubjectCountStatsProbability:
setHasSubmodelsPruningForCappingPolicyPerformanceInMilliSeconds:
setHasSubmodelsUpdatePerformanceInMilliSeconds:
setHasSubscription:
setHasSupervision:
setHasTimeDifferenceFromReceptionToSaliencyInferenceInSeconds:
setHasTokens:
setHasTotalNumberOfEmailsProcessedForAttachmentDetectionRoundedToClosestMultipleOf20:
setHasTotalNumberOfEmailsProcessedForFollowUpDetectionRoundedToClosestMultipleOf20:
setHasTotalNumberOfEmailsProcessedForRecipientDetectionRoundedToClosestMultipleOf20:
setHasType:
setHasWasKnownContact:
setHasWasSuggestedContact:
setHeaders:
setHiddenAdditionalRecipients:
setHighPriority:
setHost:
setHour:
setHoursSinceLastIncrementalUpdate:
setHoursSinceReference:
setHtmlBody:
setHtmlContentData:
setHtmlIdItemScope:forHtmlId:
setI:
setISOCountryCode:
setIgnorablePredictedAsIgnorable:
setInProcessSuggestManager:
setIncludeDonatedContacts:
setIncomingMessage:
setIndexDelegate:
setIndexSetForOutputNameLabel:
setInstantMessageAddresses:
setInt64NSNumber:forKey:
setIntentHandlingStatus:
setIntentResponseUserActivityString:
setInteractionBundleId:
setInteractionGroupId:
setInteractionId:
setInteractionInfo:
setInteractionTeamId:
setInternalDetectedDetails:
setInternalStateAccordingToKVS
setInvalidatedIdentifiers:
setInvalidatedMessageIdentifiers:
setIsCounted:
setIsFirstPerson:
setIsFromCongratulation:
setIsGroupConversation:
setIsNegativeExample:
setIsPartiallyDownloaded:
setIsPositiveExample:
setIsSenderSignificant:
setIsSent:
setIsStoredEncrypted:
setIsSubmodelRebuilt:
setIsThirdPerson:
setIsUnlikelyPhone:
setIsUpdate:
setJavaScriptCanOpenWindowsAutomatically:
setKeyWithDomain:suffix:toValue:
setL:
setLabel:
setLang:
setLanguage:
setLanguage:range:
setLastModifiedTimestamp:
setLastSuggestionsFromMessageRequest:
setLastSuggestionsFromMessageResponse:
setLatitude:
setLenient:
setLimitingStartDate:
setListIdProbability:
setLocalCustomObject:forKey:
setLocale:
setLocation:
setLocationType:
setLocations:
setLongitude:
setLostMessageOverflow:
setMailAttachmentHistograms:
setMailConversationIdentifier:
setMailIntelligenceStagedLogs:forMessageId:
setMailMessageID:
setMailboxIdentifiers:
setMailboxProbability:
setMailboxStats:
setMailboxTypeProbability:
setMailboxTypeStats:
setMailsProcessedDuringIncrementalUpdate:
setMalformedEventWhenRangeForTesting
setMappings:
setMasterEntityId:
setMatchDate:
setMatches:
setMaxCount:
setMaximumFractionDigits:
setMaximumSignificantDigits:
setMessage:
setMessageId:
setMessageUnits:
setMetadata:
setMethod:
setMiddleName:
setMigrateFromStore:
setMinimumSignificantDigits:
setMinute:
setMissingAttachmentPredictionPerformanceInMilliSeconds:
setMissingAttachments:
setMissingRecipientPredictionPerformanceInMilliSeconds:
setMissingRecipients:
setMode:
setModel:
setModelClass:
setModelVersion:
setModifyRecordZonesCompletionBlock:
setModifyRecordsCompletionBlock:
setMonth:
setN:
setNSDate:forKey:
setNSString:forKey:
setName:
setNamePrefix:
setNameSuffix:
setNanosecond:
setNavigationDelegate:
setNbCharactersInMailSubject:
setNbExtremelyDiscriminantTokensForIgnorability:
setNbExtremelyDiscriminantTokensForSaliency:
setNbHighlyDiscriminantTokensForIgnorability:
setNbHighlyDiscriminantTokensForSaliency:
setNbTokensInMailSubject:
setNeedsSourceVerification:
setNegativeEngagement:
setNegativePrefix:
setNeutralPredictedAsNeutral:
setNeutralPredictedAsSalient:
setNewEntitiesCallback:
setNickname:
setNoEngagement:
setNotes:
setNumberOfLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20:
setNumberOfLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20:
setNumberOfPredictedAttachmentOnLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20:
setNumberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20:
setNumericMapping:
setObject:atIndexedSubscript:
setObject:forKey:
setObject:forKeyedSubscript:
setOffset:
setOperatingSystemVersion:
setOutcome:
setParentEntityType:
setParentMessagesLimitForTesting:
setPath:
setPatternsDictForTesting:
setPendingGeocode:
setPendingVerification:
setPersonCCRecipientsAge:
setPersonCCRecipientsProbability:
setPersonCCRecipientsStats:
setPersonFromSenderAge:
setPersonFromSenderInDyadicConversationAge:
setPersonFromSenderInDyadicConversationProbability:
setPersonFromSenderInDyadicConversationStats:
setPersonFromSenderStats:
setPersonToRecipientsAge:
setPersonToRecipientsProbability:
setPersonToRecipientsStats:
setPhoneMapping:
setPhoneNumbers:
setPhones:
setPhotoPath:
setPlainTextDetectedData:
setPlainTextSigRange:
setPluginIdentifier:
setPlugins:
setPositiveEngagement:
setPositivePrefix:
setPostalAddresses:
setPostalCode:
setPredicate:
setPredictedMissingElementScore:
setPredictedSaliency:
setPredictedSaliencyScore:
setPreferredContentMode:
setPreviousInteractionFromUserOnConversationInMinutes:
setPreviousInteractionOnConversationInMinutes:
setPreviousServerChangeToken:
setPrimaryICloudCalendarAccount:
setPrimaryRecipients:
setPrivateIndex:
setProtection:
setProtectionClasses:
setPurgeUniqueIds:
setQuality:
setQualityOfService:
setQueryItems:
setRadius:
setRange:
setReadyForNewEntities:
setReceivedOnBattery:
setRecipient:
setRecipients:
setRecordChangedBlock:
setRecordIDsToDelete:
setRecordId:
setRecordType:
setRecordZoneFetchCompletionBlock:
setRecordZoneIDsToDelete:
setRecordZonesToSave:
setRecordsToSave:
setRegexBelongsToSender:
setRegexDoesNotBelongToSender:
setRegexLanguage:
setRelatedUniqueIdentifier:
setReminders:
setRemoteObjectInterface:
setReplyTo:
setRequestId:
setRequireFullBodySignature:
setRequiredUserInfoKeys:
setReservationContainerReference:
setReservationItemReferences:
setReservations:
setResult:
setRollbackedEmailsCountToComplyToPostDeletionPolicy:
setRollbackedSlicesCountToComplyToPostDeletionPolicy:
setSaliencyPredictionPerformanceInMilliSeconds:
setSalientPredictedAsNeutral:
setSalientPredictedAsSalient:
setSalt:
setSaltAtomicReferenceId:
setSaltUsesManatee:
setSavePolicy:
setSchemaOrg:
setSchemaVersion:
setScheme:
setSearchPredicate:
setSecond:
setSelfIdentificationMessageCount:
setSender:
setSenderConnectionScore:
setSenderDisplayName:
setSenderIsAccountOwner:
setSerializedContactsLimit:
setSessionDescriptor:
setSgmiFeatureStore:
setSharedInstance:
setSharedInstanceConfigurationBlock:
setShortMonthSymbols:
setShortWeekdaySymbols:
setShouldSendContentAvailable:
setShouldUnifyResults:
setSignature:
setSignatureRange:
setSignificance:
setSignificanceOrigin:
setSignificantWork:
setSiriFoundInAppsData:
setSize:
setSocialProfileIdentifiers:
setSocialProfiles:
setSource:
setSourceKey:
setStandardMailRulesProbability:
setStandardMailRulesStats:
setStart:
setStartUTCOffsetSeconds:
setState:
setStateOrProvince:
setStats:
setStore:
setStreet:
setString:
setStructuredData:
setSubject:
setSubjectContentAge:
setSubjectContentProbability:
setSubjectContentStats:
setSubjectCountStatsProbability:
setSubjectCountStatsStats:
setSubmodelsProbabilities:
setSubmodelsPruningForCappingPolicyPerformanceInMilliSeconds:
setSubmodelsStats:
setSubmodelsUpdatePerformanceInMilliSeconds:
setSuggestionInfo:
setSuspended:
setSyncToken:
setTaggedCharacterRanges:
setTargetMapping:
setTargetQueue:useAfterCompletion:
setTargetString:
setTemplateName:
setTime:
setTimeDifferenceFromReceptionToSaliencyInferenceInSeconds:
setTimeRange:
setTimeStyle:
setTimeZone:
setTimeout:
setTimeoutIntervalForRequest:
setTimeoutIntervalForResource:
setTimestamp:
setTitle:
setTo:
setToChangeAnchor:
setToStatus:
setTokens:
setTotalNumberOfEmailsProcessedForAttachmentDetectionRoundedToClosestMultipleOf20:
setTotalNumberOfEmailsProcessedForFollowUpDetectionRoundedToClosestMultipleOf20:
setTotalNumberOfEmailsProcessedForRecipientDetectionRoundedToClosestMultipleOf20:
setTriClient:
setTrialMetadata:
setTrieFromPath:
setType:
setTzid:
setUnderlyingQueue:
setUniqueIdentifier:
setUnsubscriptionOpportunitiesSuggestionsDenyListForField:toValues:
setUpdatedFields:
setUserAccountsPersistedState:
setUserActivity:
setUserInfo:
setUsesGroupingSeparator:
setUsesSignificantDigits:
setValue:forComponent:
setValue:forCustomKey:
setValue:forHTTPHeaderField:
setValue:forKey:
setValue:forKey:binder:
setValue:forKey:fromRecordId:
setValueForScalarKeyWithDomain:subdomain:suffix:action:value:
setValueIfNotPresent:forKey:fromRecordId:
setValueIfNotPresentWithDict:fromRecordId:
setVips:
setW:
setWasKnownContact:
setWasSuggestedContact:
setWebpageURL:
setWebsiteDataStore:
setWhen:
setWindowLength:
setWithArray:
setYear:
setup
setupKvo
setupManagerWithConnection:store:ctsManager:ekStoreProvider:contactStore:pet2Tracker:
sfAirportToDictionnary:
sfFlightStatusToString:
sfFlightsToDictionary:
sgNameFromString:origin:recordId:extractionInfo:
sgToCNContactsCacheUpdateAdapter
sg_LoggingIdentifier
sg_applicationRecordForDefaultWebBrowser
sg_bumpTimeToLiveForZeroKeywordNLEventOnInteraction:
sg_clonableItemAtIndex:inCodedArray:
sg_clone
sg_confirmedEKEventForSGEvent:
sg_dateComponentsFromISO8601String:
sg_decodeEncodedWords
sg_descriptionForMimeHeaders
sg_enumerateChunksOfSize:usingBlock:
sg_eventMetadata
sg_fallbackURL
sg_fetchEKEventsForPseudoEventBySimilarTitleAndStartTime:
sg_fetchEKEventsForPseudoNLEvent:entity:
sg_fetchEKEventsForPseudoNLEvent:message:
sg_initWithNamedEmailAddress:
sg_initWithSerializedForm:
sg_isAppleBundleIdentifier
sg_isCuratedEventFromSuggestionNewerThan:
sg_isSignificantWithStore:
sg_md5Hash
sg_newStore
sg_preferredApplicationRecordForURL:
sg_preferredApplicationRecordForUserActivityType:withTeamIdentifier:preferredBundleIdentifier:
sg_schemas
sg_serialize
sg_serialized
sg_stringWithDecodedEncodedWords
sg_userActivityWithRequiredString:
sg_usingSharedStoreForReadingOnly:
sgd_clientName
sgmiFeatureStore
shape
sharedBackgroundStorageQueue
sharedDefaults
sharedInstance
sharedKeySetForKeys:
sharedManager
sharedSession
sharedSingletonInstance
sharedSingletonWithDirectory:
sharedSuggestHistory
shortNamesAndRealtimeEventsFromEntity:enrichments:store:
shortNamesAndRealtimeEventsFromEntity:message:enrichments:store:
shouldAdmitContentFromBundleIdentifier:
shouldAllowNotificationsInCalendarWithAllowListOverride:
shouldAnalyzeBody
shouldCollectTrainingDataForObjective:language:
shouldContinue
shouldDefer
shouldDefer:
shouldDownloadFull:
shouldDownloadFull:reply:
shouldExposeWarning:
shouldExposeWarning:updateAction:
shouldExposeWarningGivenPositiveFeedbackCount:negativeFeedbackCount:
shouldHarvestEvents
shouldIgnoreEntity:
shouldIgnoreMailMessage:
shouldIgnoreSignature:signatureRange:isInhuman:
shouldInvertFirst:last:
shouldInvertFirst:last:underNamingTradition:
shouldInvertOrderOfFirst:last:
shouldProcessTextMessage:entity:
shouldRecreateZoneForRecordError:operationError:
shouldRemoveEventsFromEventKit
shouldRunHandlerImmediately
shouldSampleForLabel:inLanguage:isDynamicLabel:
showOperatingSystemVersionInSnippets
showPastEvents
signature
signatureExpiration
signatureRange
signatureRegions
signatureRules
signatureStatsLogging
signaturesToRemoveForDKIMVerificationContext:withFromHeaderDomain:
significance
significanceOrigin
significantSender
signingDomainIdentifier
simpleCandidateResolutionFromCandidates:
simpleDedupe:
simpleMailMessageFromHeaders:
simulateAddressBookChange
simulateCalendarChange
simulateOnDiskDatabase
singleLineSignatureLeadingCharacterSet
sinkWithCompletion:receiveInput:
siriFoundInAppsData
size
sketchesForName:
skipFromZeroSchema
skipFromZeroSchema:
sleepWithCompletion:
sliceWithType:range:
sliceWithType:start:end:
snippetFromString:coreRange:withMaxWindowSizeAroundCore:
snippetsDbHandleForTesting
socialProfile
socialProfile:forIdentity:parent:curated:context:contextRangeOfInterest:extractionInfo:
socialProfileIdentifiers
socialProfileTags
socialProfiles
sortUsingComparator:
sortUsingSelector:
sortedArrayUsingComparator:
sortedArrayUsingDescriptors:
sortedArrayUsingSelector:
sortedArrayWithOptions:usingComparator:
sortedSaliencyResultsRestrictedToMailboxTypes:mailboxIds:receivedOnOrAfter:ascending:limit:
sortedSaliencyResultsRestrictedToMailboxTypes:mailboxIds:receivedOnOrAfter:ascending:limit:withCompletion:
sortedUnsubscriptionOpportunitiesForField:limit:
sortedUnsubscriptionOpportunitiesForField:minCount:minScore:limit:
sortedUnsubscriptionOpportunitiesForField:minCount:minScore:limit:withCompletion:
source
sourceKey
sourceMetadata
sourceURL
sourceUniqueIdentifier
sourceUniqueIdentifierForStorageReminder:
splitAttachment:intoEvents:withTimezones:
splitBlob:withInterdicts:edges:curatedRecordIds:
splitContactDetailsByType:
splitNeededFor:withInterdicts:curatedRecordIds:
spokenPhrase
spotlightBundleIdentifier
spotlightContactsAdapter
spotlightDomainIdentifier
spotlightReference
spotlightReimportFromIdentifier:forPersonHandle:startDate:endDate:completion:
spotlightUniqueIdentifier
spotlightUniqueIdentifierForBundleIdentifier:messageId:
sqlStoreInMemory
sqlStoreWithEntityDbPath:snippetDbPath:isEphemeral:executeJournals:
sqlStoreWithEntityDbPath:snippetDbPath:isEphemeral:sharedLock:executeJournals:
sqlStoreWithEntityDbPathNoMigrate:snippetDbPath:isEphemeral:executeJournals:
sqliteDatabaseInMemoryWithError:
sqliteDatabaseWithFilename:contentProtection:errorHandler:error:
sqliteDatabaseWithFilename:error:
stackItem
standardMailRulesProbability
standardMailRulesStats
standardizeCSPersons
start
startConfigurationWithCompletionHandler:
startDate
startDateComponents
startDissectionOfMessage:inContext:
startElement:withAttributes:
startHarvest
startIngestOfMessages:
startListening
startTimeZone
startTimer:
startUTCOffsetSeconds
state
state:index:section:
stats
statsAtIndex:
statsCount
statsType
status
stmt
stopJournaling
stopListening
storageContactByKey:
storageContactByMasterEntityId:withSnippets:
storageContactByRecordId:withSnippets:
storageContactFromRecordId:
storageDetailHashes
storageEventFromEntity:
storageLocationWithPrimaryKey:
storageQueue
storageReminderFromDuplicateKey:store:
storageReminderFromEntity:origin:
storageReminderFromEntity:store:
storageReminderFromRecordId:store:
storageReminderWithPrimaryKey:store:
store
storeAge
storeInMemory
storeOperation:spotlightBundleIdentifier:spotlightUniqueIdentifier:spotlightDomainIdentifier:withStore:dependencies:
storeOperation:spotlightBundleIdentifier:spotlightUniqueIdentifier:spotlightDomainIdentifier:withStore:dependencies:originalEnrichmentCount:
storeOperation:withStore:dependencies:
storeOperation:withStore:dependencies:originalEnrichmentCount:
storeReimportItems:requestId:
storeReimportRequest:
storeToDisk
storeWithDefaultLocationAndExecuteJournals:
storeWithFilename:
stored
street
strength
strictLowerBound
strictUpperBound
string
stringArrayRepresentation
stringArrayValue
stringByAddingPercentEncodingWithAllowedCharacters:
stringByAppendingFormat:
stringByAppendingString:
stringByDeletingLastPathComponent
stringByDeletingPathExtension
stringByExtractingPlainTextFromHTML:
stringByReplacingCharactersInRange:withString:
stringByReplacingMatches:inRange:withBlock:
stringByReplacingOccurrencesOfString:withString:
stringByReplacingOccurrencesOfString:withString:options:range:
stringByTrimmingCharactersInSet:
stringEncoding
stringEncodingForData:encodingOptions:convertedString:usedLossyConversion:
stringForProvider:
stringFromContact:style:
stringFromNumber:
stringFromPostalAddress:style:
stringHasDatesOrTimes:
stringSetMatcherForKey:
stringTokensFromDomain:
stringValue
stringValueForKey:fromFile:
stringWithCharacters:length:
stringWithContentsOfFile:encoding:error:
stringWithFormat:
stringWithNewContents:
stringWithString:
stringWithString:range:
stringWithString:range:confidence:
stringWithUTF8String:
stripAndReturnHonorifics:
stripBirthdayFromSGContact:
stripChevrons:
stripEventInformation
stripHonorifics:
stripRepeatedContent:repeatedLength:
stripRepeatedContentForSectionLength:label:
stripStaleBirthdayFromSGContact:withEntity:
stripTrailingASCIIHSpace:
strongNamePatterns
strongToWeakObjectsMapTable
structuredData
structuredEventInputMapping
structuredEventOutputMapping
structuredLocation
structuredLocationWithoutPrediction
subModelsStats
subModelsStatsWithShouldContinueBlock:
subarrayWithRange:
subdataWithRange:
subdirectory:createIfNeeded:
subjectByCleaningPrefixesInSubject:
subjectContentAge
subjectContentProbability
subjectContentStats
subjectCountStatsProbability
subjectCountStatsStats
submodeledFeature
submodeledFeatures
submodels
submodelsAgesInDays
submodelsProbabilities
submodelsPruningForCappingPolicyPerformanceInMilliSeconds
submodelsStats
submodelsUpdatePerformanceInMilliSeconds
subsetOfHistoricalDataRequest:
substringFromIndex:
substringToIndex:
substringWithRange:
succeed:
suffix
suggestContactByIdentityKey:parentKey:
suggestContactByKey:
suggestContactByRecordId:
suggestContactByRecordId:withSnippets:filterConfirmRejectDetails:
suggestContactMatchesByContactDetailTag:
suggestContactMatchesByContactDetailTag:matchType:
suggestContactMatchesByEmailAddress:
suggestContactMatchesByEmailAddress:isMaybe:onlySignificant:
suggestContactMatchesByPhoneNumber:
suggestContactMatchesByPhoneNumber:isMaybe:onlySignificant:
suggestContactMatchesBySocialProfile:
suggestContactMatchesBySocialProfile:isMaybe:onlySignificant:
suggestContactMatchesByType:searchString:isMaybe:onlySignificant:
suggestContactMatchesWithContact:limitTo:
suggestContactMatchesWithFullTextSearch:limitTo:
suggestContactMatchesWithMessagingPrefix:limitTo:
suggestContactsByMasterEntityQuery:limit:bindings:
suggestContactsWithContact:withSnippets:filterConfirmRejectDetails:limitTo:
suggestContactsWithPrefix:limitTo:
suggestEventsStartingAt:endingAt:limitTo:
suggestEventsStartingAt:endingAt:limitTo:additionalWhereClause:options:onPrep:
suggestEventsStartingAt:endingAt:limitTo:options:
suggestEventsStartingAt:endingAt:prefix:limitTo:
suggestEventsStartingAt:endingAt:prefix:limitTo:options:
suggestedEventCalendar
suggestedNickname
suggestedPhotoPath
suggestionIDFromContactIdentifier:
suggestionImpressionsViaBannerSuppressed:
suggestionInfo
suggestionType
suggestionsCount
suggestionsDirectory
suggestionsDirectoryAfterCreatingIfNeeded:
suggestionsDirectoryFile:
suggestionsDirectoryFile:creatingSuggestionsDirectoryIfNeeded:
suggestionsFromEmailContent:headers:source:options:withCompletion:
suggestionsFromMessage:options:completionDelivery:completionHandler:fullCompletionHandler:
suggestionsFromMessage:options:completionHandler:
suggestionsFromMessage:options:fullCompletionHandler:
suggestionsFromRFC822Data:source:options:withCompletion:
suggestionsFromSearchableItem:options:withCompletion:
suggestionsFromSimpleMailMessage:headers:options:withCompletion:
suggestionsFromURL:title:HTMLPayload:withCompletion:
suggestionsSubdirectory:
suggestionsSubdirectory:creatingDirectoriesIfNeeded:
summarizeStreamByMessage
summarizeStreamByMessageStartingFromDaysAgo:
summarizeStreamByMessageWithPublisher:
superclass
supervision
supervisionAsString:
supportedBundleIDs
supportedBundleIdentifiers
supportedContentTypes
supportedINIntentClassNames
supportedProviders
supportsDeviceToDeviceEncryption
supportsSecureCoding
surnameFromName:
suspendAndResumeAfter:
symbolCharacterSet
syncContactsWithStore:
syncHistoryToCloud
syncNewBlobsIfChanged
syncToken
synchronize
synchronizeWithCompletionHandler:
synchronousRemoteObjectProxyWithErrorHandler:
systemTimeZoneForDate:
systemTimeZoneFromString:
systemTimeZoneWithCalendar:withEvent:withCorrectnessFlag:
systemTimeZoneWithWindowsName:
tablesWithColumnNamed:
tabularRegions
tagForLabel:value:
tagSchemes
taggedCharacterRanges
tags
tagsWithModelOutputFromEnrichedTaggedCharacterRanges:
targetApplicationRecord
targetMapping
targetString
task
taskWithDeadline:
taskWithRequest:completion:
teamId
teamIdentifier
tellCurrentTasksToDefer
templateException
templateName
templateShortName
terminal
testAttachmentWithType:size:
text
textConsumers
textContent
textContent:
textContentLanguageIdentifier
textContentNoCopy
textContentNoCopyRetainingBackingBuffer:
textMessage
textMessageKey
textMessageToOutput:reply:
textRangeForIndexRange:inTaggedCharacterRanges:
textRangeForTokenRange:
thawObserversForTesting
threadDictionary
threshold
time
timeBeforeViewStartSinceAvailable
timeDifferenceFromReceptionToSaliencyInferenceInSeconds
timeInterval
timeIntervalSince1970
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timeRange
timeZone
timeZoneForSecondsFromGMT:
timeZoneWithAbbreviation:
timeZoneWithName:
timestamp
timezone
timezoneIdentifier:
timezoneOlsonCodeForAirport:
timezoneOlsonCodeForAirport:withDataOffset:andFileHandle:
title
titleGeneratedFromSubject
titleGeneratedFromTemplate
titleMapping
titlePrefixTokens
titlePrependForActionVerbIndexRange:enrichedTaggedCharacterRanges:language:content:
toBool
toCloudKitRecordWithId:parentEntityType:
toDictionary
toEKEventWithStore:
toFloatingTime:withDSTAmbiguityPreferences:
toHandles
toJsonString
toMailMessageKey
toPlistWithChunks:
toReminder
toSGNameWithOrigin:recordId:extractionInfo:
toSchemas
toStatus
toStatusAsString:
toString
token
tokenCount:
tokenCountForPostalAddressComponents:
tokenize:
tokenizeMessageContent:
tokenizeTextContent:languageHint:
tokenizeTextContent:languageHint:gazetteer:
tokenizerWithCoreNLPEnabled:
tokens
tokensMatchedDetailTypeForContact:contactEntityId:detailEntityId:matchinfoData:tokens:
tombstoneExistsForSpotlightReferenceWithBundleIdentifier:uniqueIdentifier:domainIdentifier:
topDirectory
topDirectoryCreateIfNeeded:
topDirectoryWithName:createIfNeeded:
topSalienciesForMailboxId:limit:
topSalienciesForMailboxId:limit:withCompletion:
totalNumberOfEmailsProcessedForAttachmentDetectionRoundedToClosestMultipleOf20
totalNumberOfEmailsProcessedForFollowUpDetectionRoundedToClosestMultipleOf20
totalNumberOfEmailsProcessedForRecipientDetectionRoundedToClosestMultipleOf20
totalsForDomains:
trackDistributionForMessage:value:
trackScalarForMessage:
trackScalarForMessage:count:
trackScalarForMessage:updateCount:
trackingNumber
trailingSenderNameLineRange:
trainName
trainNumber
trainQuickResponsesForMessage:withConversationHistory:
trainTrip
trainingFeaturesOf:
trainingFeaturesOf:inLanguage:
trainingFeaturesOf:inLanguage:withObjective:
transactionWithName:
transform:
transform:stopAfterTransformerWithIndex:
transformArray:withTargetIndex:maximumDistance:
transformWithCoreNLP:block:
transformWithNLLinguisticTagger:block:
transformer
transformerInstanceForLanguage:mode:
transformerInstanceForLanguage:withObjective:
transformers
treatmentId
triClient
trialIds
trialIdsForStructuredEvent
trialMetadata
trialMetadataString
triggerOptionalTokens
trimDbWithDeferralBlock:
trimURLTableDownToLimit:deletionCount:
trimURLs
tripDuration
truncateContactDetailTable
truncateDatabaseAtPath:
tryExecuteSnippetsJournal
tupleWithEntity:label:
tupleWithError:label:
tupleWithFirst:second:
twoSigFigs:
type
typeAsString:
typeCheckingSink:
tzid
unarchivedObjectOfClass:fromData:error:
unarchivedObjectOfClasses:fromData:error:
uncompressModelAndUpdateFactors:destinationPath:
unifiedContactWithIdentifier:keysToFetch:error:
unifiedContactWithIdentifier:keysToFetch:usingContactStore:error:
unifiedContactsMatchingPredicate:keysToFetch:error:
unifiedContactsMatchingPredicate:keysToFetch:usingContactStore:error:
unifiedMeContactWithKeysToFetch:usingContactStore:error:
unigramFeature
unigramQueriedTokensCount
unigramTokenCounts
unigramTokensCount
unionOrderedSet:
unionSet:
uniqueId
uniqueIdForInteractionIdentifier:
uniqueIdForPersistentIdentifier:
uniqueIdentifier
uniqueIdentifierForMessageId:
uniqueIdentifiers
uniqueKey
uniquePersonIdentifier:
universalCleanName:
universalURL
unlink
unlock
unmergedCandidatesLimitedTo:
unmigrateDatabases
unnormalizedNamesApproximatelyMatch:and:
unnormalizedNamesApproximatelyMatch:and:threshold:
unregister:
unregisterForLockStateChangeNotifications:
unsafeMigrateToVersionForTesting:
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
unsignedLongValue
unsignedShortValue
updateAirports
updateAll
updateAndScheduleDiskWrite
updateAttachmentDetectionStatsOnMailWithTextContent:attachments:warningRaised:attachmentPredicted:isIncomingMail:
updateBox:
updateBox:delay:
updateCNContactMatches:
updateCarriers
updateCounts:identifier:
updateEvent:primaryKey:
updateEventToEvent:
updateFactors
updateFlights
updateFollowUpDetectionStatsWithWarning:
updateLanguageForFTSTablesToLanguage:
updateList:
updateMessages:state:
updateMessages:state:completion:
updateRecipientDetectionStatsWarningRaised:
updateReimportItemUniqueIdForBundleId:oldValue:newValue:
updateSaliency:saliency:
updateSaliencyCreationTimestampForTesting:timestamp:
updateSerializedContacts:
updateSummaryDict:fetchedUnreadMessages:event:timestamp:
updateTable:dictionary:whereClause:onError:
updateWithAppLaunchAtTime:
updateWithFlagChangedEvent
updateWithMessageFetchedEventAtTime:
updateWithMessageMovedEventWithPayload:
updateWithReadChangedEventWithPayload:
updateWithViewEndWithPayload:
updateWithViewStartAtTime:unreadMessageCount:
updatedFields
url:
urlForEKEventFromTextMessageWithUniqueIdentifier:
urlForMailMessageWithId:
urlForRecordIdVCard:
urlForStorageContactVCard:
urlFromReservationSchema:
urlFromTags
urlsFoundBetweenStartDate:endDate:bundleIdentifier:
urlsFoundBetweenStartDate:endDate:excludingBundleIdentifiers:containingSubstring:flagFilter:limit:
urlsFoundBetweenStartDate:endDate:excludingBundleIdentifiers:containingSubstring:flagFilter:limit:withCompletion:
urlsFoundBetweenStartDate:endDate:excludingBundleIdentifiers:limit:withCompletion:
urlsFromAttributes:handle:bundleIdentifier:domainIdentifier:uniqueIdentifier:documentTitle:documentDate:documentTimeInterval:receivedAt:isOutgoingDocument:
urlsFromText:handle:dataDetectorMatches:bundleIdentifier:domainIdentifier:uniqueIdentifier:documentTitle:documentDate:documentTimeInterval:receivedAt:isOutgoingDocument:
urlsFromURLs:handle:bundleIdentifier:domainIdentifier:uniqueIdentifier:documentTitle:documentDate:documentTimeInterval:receivedAt:isOutgoingDocument:
useAllLanguagesAtOnce:
useCaseForUseCaseString:
useMLModelForContactSharing
useMLModelForContacts
useMLModelForSelfId
useManateeSaltForHistory
useMockContactStore:
useProactiveHarvestingForBundleIdentifier:
usedBubblesCount:
userAccountsPersistedState
userActivity
userIdentifier
userInfo
userKnowledgeStore
userReplied
userVersion
username
uudecode:
vacuum
vacuumMode
vacuumWithShouldContinueBlock:error:
validActionVerbIndexRange:enrichedTaggedCharacterRanges:
validDuration
validModelOutput:error:
validObjectCoreIndexRange:enrichedTaggedCharacterRanges:
validate
validate:
validatedCompleteDateTime
value
valueForComponent:
valueForCustomKey:
valueForKey:
valueForKeyPath:
valueRange
valueString
valueWithJSValueRef:inContext:
valueWithNewErrorFromMessage:inContext:
valueWithPointer:
valueWithUndefinedInContext:
vector
verificationContextForMessageData:error:
verificationOperation:overrideVerificationStatus:withDependencies:
verificationOperation:withDependencies:
verifyDKIMSignatureForMailWithData:error:
verifyDKIMSignatureForMailWithData:options:error:
verifyDKIMSignatureForMailWithIdentifier:error:
verifyDKIMSignatureForPipelineEntity:error:
verifyDKIMSignatureForStorageEvent:error:
verifyMessageWithContext:options:error:
vipManager
vips
virtualMachineWithContextGroupRef:
visits
vocabularyIdentifier
wait
wait:
waitForBlock:timeoutSeconds:
waitForEventWithIdentifier:toAppearInEventStoreWithLastModificationDate:completion:
waitForFuturesToComplete:withCallback:
waitForGroup:timeoutSeconds:
waitForMigrations
waitForSemaphore:
waitForSemaphore:timeoutSeconds:
waitForUniqueIdentifierToProcess:
waitForXpcActivityQueue
waitUntilFinished
warningStatsCount
warningStatsForLogging:
wasSuggestedContact
weakNamePatterns
weakObjectsHashTable
weakToStrongObjectsMapTable
webPageKey
webView:authenticationChallenge:shouldAllowDeprecatedTLS:
webView:decidePolicyForNavigationAction:decisionHandler:
webView:decidePolicyForNavigationAction:preferences:decisionHandler:
webView:decidePolicyForNavigationResponse:decisionHandler:
webView:didCommitNavigation:
webView:didFailNavigation:withError:
webView:didFailProvisionalNavigation:withError:
webView:didFinishNavigation:
webView:didReceiveAuthenticationChallenge:completionHandler:
webView:didReceiveServerRedirectForProvisionalNavigation:
webView:didStartProvisionalNavigation:
webView:navigationAction:didBecomeDownload:
webView:navigationResponse:didBecomeDownload:
webViewWebContentProcessDidTerminate:
weekOfYear
weeks
when
whitelistedLogFromLog:
whitelistedRangesInContent:
whitelistedVerbInContent:
whitespaceAndNewlineCharacterSet
whitespaceCharacterSet
whitespaceSplit:
wildcardsMatches
willChangeValueForKey:
windowLength
withBucketSize:andNgrams:
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:
withEmailMapping:linkMapping:
withFullNameMapping:firstNameMapping:lastNameMapping:andPossessive:
withFullNameMapping:firstNameMapping:lastNameMapping:minimumConfidence:confidenceMapper:tokenToIgnore:andPossessive:
withHelperMappingType:andLanguage:
withMappings:
withMethods:
withNumericMapping:andSymbolicMapping:
withPerMessageTransformer:
withTarget:maxDistance:
withTargetMapping:phoneMapping:emailMapping:addressMapping:andDateMapping:
withTransformers:
write:
write:maxLength:
writeAndPushConfirmedEventHashes:
writeAndPushConfirmedEventWithoutTimestampHashes:
writeAndPushConfirmedReminderHashes:
writeAndPushRejectedEventHashes:
writeAndPushRejectedReminderHashes:
writeCNContactMatchAndUpdateSetForContact:withMatches:andMaxEntityId:
writeCNContactMatchForContact:withMatches:andMaxEntityId:
writeCNContactMissForRecordId:
writeData:
writeEmailVerificationResultForEmailWithKey:eventEntities:
writeEnrichment:
writeEntity:
writeEntity:withSpotlightReferenceForBundleIdentifier:uniqueIdentifier:domainIdentifier:
writeEntityGeocodeResultToDb:
writeIdentityBlobs:forceRewrite:
writeInteractionEventEntities:
writeSerializedContact:
writeSerializedContactAndUpdateEntityIDSet:
writeSerializedContactPlaceholder:
writeTo:
writeToFile:atomically:
writeToPlistWithObject:andChunks:
writeTombstoneForSpotlightReferenceWithBundleIdentifier:
writeTombstoneForSpotlightReferenceWithBundleIdentifier:domainIdentifier:
writeTombstoneForSpotlightReferenceWithBundleIdentifier:domainIdentifiers:
writeTombstoneForSpotlightReferenceWithBundleIdentifier:uniqueIdentifier:
writeTombstoneForSpotlightReferenceWithBundleIdentifier:uniqueIdentifiers:
writeTransaction:
writeTransactionDepth
writeTransactionWithHandle:block:
writeURL:
writeWithEntityStore:
writebackEnrichmentsForNewCopyOfMessage:
x_wr_timezone
year
zeroColumn:
zone
@16@0:8
B24@0:8@16
@24@0:8@16
@32@0:8@16@24
@24@0:8^{_NSZone=}16
v24@0:8@16
B16@0:8
v20@0:8B16
v16@0:8
@"CSPerson"
@"NSArray"
@"NSString"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@40@0:8@16@24@32
@24@0:8@"NSMutableArray"16
@40@0:8@16@"NSArray"24@"NSDictionary"32
@"NSObject<PMLTransformerProtocol>"
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
{?="model"b1"supervision"b1"result"b1}
v20@0:8I16
I16@0:8
{?="exitCode"b1}
{?="app"b1"wasKnownContact"b1"wasSuggestedContact"b1}
@32@0:8Q16@24
@56@0:8@16@24@32@40@48
v48@0:8@16@24q32@40
v40@0:8@16@24@32
@"INPersonHandle"
@"NSDate"
@"NSPersonNameComponents"
@"SGSocialProfileDetails"
{?="app"b1"wasSuggestedContact"b1}
@32@0:8@16^@24
@24@0:8q16
@60@0:8@16@24@32@40C48q52
B28@0:8C16@20
{_PASDBIterAction_=B}32@0:8@16@24
B32@0:8q16^q24
B32@0:8@16^q24
B32@0:8@16@24
@32@0:8@16Q24
#24@0:8Q16
@40@0:8@16@24Q32
@48@0:8@16@24@32@40
@"<PMLMultiLabelClassifierProtocol>"
@"<PMLTransformerProtocol>"
@"SGModelSource"
@40@0:8@16@24#32
v24@0:8#16
@"PMLSessionDescriptor"
@40@0:8Q16Q24@32
B32@0:8Q16@24
{?="detail"b1"extractionModelVersion"b1"extractionSignatureSource"b1"foundInSenderCNContact"b1"outcome"b1"source"b1"isUnlikelyPhone"b1"signature"b1}
{?="detail"b1"foundIn"b1"source"b1"tokens"b1"hasName"b1}
q24@0:8@16
{?="cacheHit"b1}
{?="contactDetail"b1"mode"b1"model"b1"supervision"b1"correct"b1"result"b1}
v40@0:8@16@24@?32
@32@0:8@16@?24
v32@0:8@16@24
@52@0:8@16@24@32@40B48
B32@0:8@16q24
@56@0:8@16C24@28@36@44B52
@24@0:8^@16
@40@0:8@16@24^@32
@52@0:8@16C24@28@36@44
C16@0:8
^i16@0:8
i24@0:8Q16
v32@0:8^i16Q24
v24@0:8Q16
{?="list"^i"count"Q"size"Q}
@"SGMIMetricsTrialMetadata"
@"SGMIMetricsSubmodelsStats"
{?="biomeAggregationPerformanceInMilliSeconds"b1"cumulatedSubmodelsRollbackForPostDeletionPolicyPerformanceInMilliSeconds"b1"submodelsPruningForCappingPolicyPerformanceInMilliSeconds"b1"submodelsUpdatePerformanceInMilliSeconds"b1"daysAvailableDuringIncrementalUpdate"b1"daysProcessedDuringIncrementalUpdate"b1"deletedEmailsCount"b1"deletedTokensCountToComplyToCappingPolicy"b1"hoursSinceLastIncrementalUpdate"b1"hoursSinceReference"b1"mailsProcessedDuringIncrementalUpdate"b1"rollbackedEmailsCountToComplyToPostDeletionPolicy"b1"rollbackedSlicesCountToComplyToPostDeletionPolicy"b1"isSubmodelRebuilt"b1}
@28@0:8@16B24
B36@0:8@16@24B32
@40@0:8@16@24@?32
v40@0:8@"SGSimpleMailMessage"16@"SGPipelineEntity"24@"SGRequestContext"32
v40@0:8@"SGTextMessage"16@"SGPipelineEntity"24@"SGRequestContext"32
@56@0:8@16@24@32@40Q48
@80@0:8@16@24C32@36C44@48C56@60@68B76
@32@0:8q16@24
@"NSMutableDictionary"
@"RTRoutineManager"
{?="app"b1}
@"NSNumber"
@"_PASLock"
{?="errorCode"b1}
@"FIAPResult"16@0:8
@"FIAPResult"24@0:8@"CSSearchableItem"16
@"FIAPResult"32@0:8@"CSUserAction"16@"CSSearchableItem"24
@"FIAPResult"40@0:8@"INInteraction"16@"NSString"24@"NSString"32
v32@0:8@"NSString"16@"NSArray"24
v24@0:8@"NSString"16
@"HVConsumerReply"24@0:8@"HVSpotlightDeletionRequest"16
@"HVConsumerReply"24@0:8@"HVConsumptionContext"16
@84@0:8@16@24@32@40B48@52@60@68@76
@76@0:8@16@24@32@40B48@52@60@68
@"SGSqlEntityStore"
@"SGURLDissector"
@32@0:8@16q24
@52@0:8@16@24@32B40Q44
q32@0:8q16@24
q32@0:8q16{SGUnixTimestamp_=d}24
@"SGMIMetricsAggregatedAccuracyLog"
{?="hoursSinceReference"b1}
{?="method"b1}
{?="customResponsesAfterPruning"b1}
@"NSMutableArray"
@32@0:8@16B24B28
v76@0:8{SGMDocumentType_=Q}16B24B28{SGMContactDetailType_=Q}32{SGMContactDetailExtractionOutcome_=Q}40{SGMContactDetailOwner_=Q}48@56B64{SGMContactDetailExtractionSignatureSource_=Q}68
v76@0:8{SGMContactDetailExtractionOutcome_=Q}16{SGMContactDetailType_=Q}24@32B40B44Q48@56@64B72
v48@0:8{SGMContactDetailExtractionOutcome_=Q}16@24B32B36@40
v60@0:8{SGMContactDetailExtractionOutcome_=Q}16@24B32B36@40@48B56
v68@0:8{SGMContactDetailExtractionOutcome_=Q}16@24B32B36@40{SGMContactDetailOwner_=Q}48@56B64
v52@0:8{SGMContactDetailExtractionOutcome_=Q}16@24{_NSRange=QQ}32B48
v48@0:8C16@20@28C36C40C44
v28@0:8B16i20i24
v40@0:8@16@24{SGMContactDetailFoundIn_=Q}32
@"PETEventTracker2"
v56@0:8@16@24@32@40q48
v64@0:8@16@24@32@40@48@56
B24@0:8q16
@24@0:8@"NSString"16
B44@0:8i16@20@?28@36
v32@0:8@16Q24
v24@0:8d16
@44@0:8@16i24@28@36
@"SGEntity"
@"SGCuratedEventKey"
v24@0:8@"NSSet"16
@32@0:8@?16@?24
v40@0:8Q16Q24@32
v44@0:8i16@20@28@36
v32@0:8@16S24S28
v40@0:8Q16Q24@"NSString"32
v44@0:8i16@"SGRecordId"20@"NSString"28@"NSString"36
v40@0:8@"SGRecordId"16@"NSString"24@"NSString"32
v32@0:8@"NSString"16S24S28
v32@0:8@"SGRecordId"16S24S28
v24@0:8@?16
v24@0:8@?<v@?@"SGXPCResponse1">16
v24@0:8@?<v@?@"SGXPCResponse">16
v32@0:8@16@?24
v32@0:8@"SGRealtimeEvent"16@?<v@?@"SGXPCResponse">24
v32@0:8@"SGRecordId"16@?<v@?@"SGXPCResponse">24
v40@0:8@"NSString"16@"NSDate"24@?<v@?@"SGXPCResponse1">32
v36@0:8@16i24@?28
v36@0:8@"SGRealtimeContact"16i24@?<v@?@"SGXPCResponse">28
v36@0:8@"SGRecordId"16i24@?<v@?@"SGXPCResponse">28
v40@0:8@16Q24@?32
v32@0:8Q16@?24
v40@0:8@16q24@?32
v60@0:8@16@24@32B40Q44@?52
v36@0:8Q16B24@?28
v48@0:8@16@24@32@?40
v40@0:8q16@24@?32
v56@0:8q16Q24d32Q40@?48
v40@0:8q16Q24@?32
v88@0:8@16@24@32@40@48@56@64@72@?80
v96@0:8@16@24@32@40@48@56@64@72@80@?88
v36@0:8B16@20@?28
v36@0:8B16q20@?28
v40@0:8@"CSSearchableItem"16Q24@?<v@?@"SGXPCResponse1">32
v40@0:8@"NSArray"16Q24@?<v@?@"SGXPCResponse">32
v40@0:8@"NSArray"16@"NSArray"24@?<v@?@"SGXPCResponse">32
v32@0:8Q16@?<v@?@"SGXPCResponse1">24
v32@0:8@"NSArray"16@?<v@?@"SGXPCResponse">24
v32@0:8@"NSData"16@?<v@?@"SGXPCResponse1">24
v32@0:8@"SGMailHeaders"16@?<v@?@"SGXPCResponse1">24
v40@0:8@"NSString"16q24@?<v@?@"SGXPCResponse1">32
v60@0:8@"NSArray"16@"NSArray"24@"NSDate"32B40Q44@?<v@?@"SGXPCResponse1">52
v36@0:8Q16B24@?<v@?@"SGXPCResponse1">28
v40@0:8@"NSString"16@"NSAttributedString"24@?<v@?@"SGXPCResponse1">32
v48@0:8@"NSString"16@"NSString"24@"NSDate"32@?<v@?@"SGXPCResponse1">40
v40@0:8q16@"NSArray"24@?<v@?@"SGXPCResponse">32
v56@0:8q16Q24d32Q40@?<v@?@"SGXPCResponse1">48
v40@0:8q16Q24@?<v@?@"SGXPCResponse1">32
v88@0:8@"NSString"16@"NSAttributedString"24@"NSArray"32@"NSArray"40@"NSArray"48@"NSArray"56@"NSArray"64@"NSArray"72@?<v@?@"SGXPCResponse1">80
v96@0:8@"NSString"16@"NSString"24@"NSDictionary"32@"NSArray"40@"NSArray"48@"NSArray"56@"NSArray"64@"NSArray"72@"NSArray"80@?<v@?@"SGXPCResponse1">88
v36@0:8B16@"SGMailIntelligenceWarning"20@?<v@?@"SGXPCResponse1">28
v36@0:8B16q20@?<v@?@"SGXPCResponse1">28
v40@0:8q16@"NSData"24@?<v@?@"SGXPCResponse1">32
v40@0:8q16@"NSString"24@?<v@?@"SGXPCResponse1">32
v48@0:8@16@24Q32@?40
v40@0:8@"CSSearchableItem"16Q24@?<v@?@"SGXPCResponse3">32
v48@0:8@"CSSearchableItem"16@"NSString"24Q32@?<v@?@"SGXPCResponse3">40
v48@0:8@"CSSearchableItem"16@"NSString"24Q32@?<v@?@"SGXPCResponse1">40
v48@0:8@"NSArray"16@"NSString"24Q32@?<v@?@"SGXPCResponse3">40
v36@0:8@16C24@?28
v36@0:8@"SGRecordId"16C24@?<v@?@"SGXPCResponse1">28
v48@0:8@16Q24B32B36@?40
v36@0:8B16Q20@?28
v40@0:8@"CNContact"16Q24@?<v@?@"SGXPCResponse1">32
v40@0:8@"NSString"16Q24@?<v@?@"SGXPCResponse1">32
v40@0:8@"NSArray"16Q24@?<v@?@"SGXPCResponse1">32
v32@0:8@"NSString"16@?<v@?@"SGXPCResponse1">24
v32@0:8@"SGRecordId"16@?<v@?@"SGXPCResponse1">24
v32@0:8@"NSArray"16@?<v@?@"SGXPCResponse1">24
v32@0:8@"SGSocialProfile"16@?<v@?@"SGXPCResponse1">24
v48@0:8@"NSString"16Q24B32B36@?<v@?@"SGXPCResponse1">40
v24@0:8@?<v@?@"SGXPCResponse3">16
v36@0:8B16Q20@?<v@?@"SGXPCResponse1">28
v28@0:8I16@?20
v52@0:8@16@24@32I40@?44
v64@0:8@16@24@32@40C48I52@?56
v36@0:8C16@20@?28
v28@0:8I16@?<v@?@"SGXPCResponse1">20
v52@0:8@"NSDate"16@"NSDate"24@"NSSet"32I40@?<v@?@"SGXPCResponse1">44
v64@0:8@"NSDate"16@"NSDate"24@"NSSet"32@"NSString"40C48I52@?<v@?@"SGXPCResponse1">56
v36@0:8C16@"NSString"20@?<v@?@"SGXPCResponse">28
v56@0:8@16@24@32B40B44@?48
v44@0:8@16@24B32@?36
v56@0:8@"NSString"16@"NSURL"24@"NSLocale"32B40B44@?<v@?@"SGXPCResponse1">48
v32@0:8@"SGSuggestedEventLaunchInfo"16@?<v@?@"SGXPCResponse">24
v40@0:8@"NSURL"16@"NSString"24@?<v@?@"SGXPCResponse1">32
v44@0:8@"NSURL"16@"NSString"24B32@?<v@?@"SGXPCResponse1">36
v48@0:8@"NSURL"16@"NSString"24@"NSString"32@?<v@?@"SGXPCResponse1">40
v32@0:8@"SGReminder"16@?<v@?@"SGXPCResponse">24
v32@0:8@"NSString"16@?<v@?@"SGXPCResponse">24
v40@0:8@"NSData"16@"NSData"24@?<v@?@"SGXPCResponse">32
v40@0:8@"NSString"16@"NSArray"24@?<v@?@"SGXPCResponse">32
v40@0:8@"NSString"16@"_PASDomainSelection"24@?<v@?@"SGXPCResponse">32
v52@0:8@16@24Q32I40@?44
v60@0:8@16@24@32Q40I48@?52
v36@0:8Q16I24@?28
v56@0:8@16@24@32@40@?48
v28@0:8B16@?20
v64@0:8@16@24@32d40@48@?56
v56@0:8@16@24@32Q40@?48
v52@0:8@"NSDate"16@"NSDate"24Q32I40@?<v@?@"SGXPCResponse1">44
v60@0:8@"NSDate"16@"NSDate"24@"NSString"32Q40I48@?<v@?@"SGXPCResponse1">52
v36@0:8Q16I24@?<v@?@"SGXPCResponse1">28
v56@0:8@"NSURL"16@"NSString"24@"NSString"32@"NSDate"40@?<v@?@"SGXPCResponse1">48
v48@0:8@"NSData"16@"NSString"24Q32@?<v@?@"SGXPCResponse1">40
v28@0:8B16@?<v@?@"SGXPCResponse">20
v64@0:8@"NSArray"16@"NSArray"24@"NSString"32d40@"NSArray"48@?<v@?@"SGXPCResponse1">56
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"SGXPCResponse">32
v56@0:8@"NSString"16@"NSString"24@"NSDate"32@"NSDate"40@?<v@?@"SGXPCResponse">48
v56@0:8@"NSString"16@"NSData"24@"NSString"32Q40@?<v@?@"SGXPCResponse1">48
v48@0:8@"SGSimpleMailMessage"16@"NSData"24Q32@?<v@?@"SGXPCResponse1">40
v40@0:8@"NSDictionary"16@"NSArray"24@?<v@?@"SGXPCResponse1">32
S24@0:8@16
@40@0:8@16@?24@?32
B40@0:8@16@24@32
B48@0:8@16@24@32Q40
v44@0:8@16@24i32@?36
v48@0:8@16@24B32i36@?40
B32@0:8@?16@24
{SGMContactDetailUsedApp_=Q}24@0:8@16
@"NSXPCConnection"
@"SGSuggestHistory"
@"_PASNotificationToken"
@"NSOperationQueue"
@"SGDManagerForCTS"
@"SGEKEventStoreProvider"
@"CNContactStore"
@"NSDictionary"
@"NSLock"
@"SGXpcTransaction"
@"SGSearchableItemIdTriple"
@"SGFuture"
@"SGCoalescingDropBox"
@"SGServiceContext"
@"NSDataDetector"
{?="ignorablePredictedAsIgnorable"b1"ignorablePredictedAsNeutral"b1"ignorablePredictedAsSalient"b1"neutralPredictedAsIgnorable"b1"neutralPredictedAsNeutral"b1"neutralPredictedAsSalient"b1"salientPredictedAsIgnorable"b1"salientPredictedAsNeutral"b1"salientPredictedAsSalient"b1}
@48@0:8@16@24@32B40B44
Q32@0:8@16@24
{?="documentSource"b1"harvestSource"b1"harvestedOnBattery"b1"highPriority"b1"receivedOnBattery"b1}
@24@0:8r*16
@"NSData"
B48@0:8@16@24@32@40
B56@0:8@16@24@32@40@48
{SGDSuggestManagerCTSCriteriaState="hasItemsHighPriority"B"hasItemsLowPriority"B}
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
@"<SGXPCActivityManagerProtocol>"
@?24@0:8@?16
@?16@0:8
C32@0:8@16@24
@40@0:8q16q24@32
@40@0:8@16@24^B32
q64@0:8@16@24@32Q40{_NSRange=QQ}48
{SGMEventICSSourceType_=Q}24@0:8@16
@"SGAccountsAdapter"
@"SGContactDetail"
q16@0:8
@"NSMutableSet"
@"SGRecordId"
@"SGContactDetailsHolder"
@24@0:8^I16
v32@0:8@16d24
d32@0:8@16d24
d24@0:8@16
v48@0:8d16d24@32@40
@"NSSet"
@"ACAccountStore"
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_source>"
v24@0:8@"SGStorageEvent"16
v24@0:8@"NSArray"16
v24@0:8@"SGStorageContact"16
v24@0:8@"SGStorageReminder"16
@"REMStore"
v20@0:8f16
@24@0:8Q16
f16@0:8
@"SGMIMetricsInferenceAndGroundTruth"
{?="hoursSinceReference"b1"nbCharactersInMailSubject"b1"nbTokensInMailSubject"b1"previousInteractionFromUserOnConversationInMinutes"b1"previousInteractionOnConversationInMinutes"b1"senderConnectionScore"b1"timeDifferenceFromReceptionToSaliencyInferenceInSeconds"b1}
@44@0:8@16B24@28^@36
@68@0:8@16@24@32i40@?44@52@60
@48@0:8@16i24@?28@36B44
@32@0:8@16^i24
@40@0:8@16Q24Q32
{_NSRange=QQ}16@0:8
v32@0:8{_NSRange=QQ}16
@"SGExtractionInfo"
{_NSRange="location"Q"length"Q}
v24@0:8{SGUnixTimestamp_=d}16
v64@0:8@16@24@32{_NSRange=QQ}40@56
@64@0:8@16@24@32{_NSRange=QQ}40@56
^{?={?=SS}BBBBB}16@0:8
{?="_featureType"{?="bom"S"tag"S}"hasInhumanHeaders"B"inhumanEmailAddress"B"inhumanAuthorName"B"inhumanBody"B"isTemplate"B}
@"_PASLazyResult"
@"SGMessage"
@"SGSimpleMailMessage"
@"SGTextMessage"
@"INInteraction"
@"SGHarvestQueueMetrics"
{SGUnixTimestamp_=d}16@0:8
d16@0:8
v24@0:8q16
@"SGDuplicateKey"
{SGUnixTimestamp_="secondsFromUnixEpoch"d}
@"SGSimpleTimeRange"
@"NSUbiquitousKeyValueStore"
@36@0:8@16@24B32
@32@0:8@16{SGUnixTimestamp_=d}24
@36@0:8@16{SGUnixTimestamp_=d}24B32
v32@0:8@16{SGUnixTimestamp_=d}24
@44@0:8@16@24@32B40
@"SGNoCloudNSUbiquitousKeyValueStore"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@56@0:8Q16@24@32@40@48
@36@0:8@16Q24B32
{_NSRange=QQ}24@0:8@16
v32@0:8^{__DDResult={__CFRuntimeBase=QAQ}{__DDQueryRange={__DDQueryOffset=b32b32}{__DDQueryOffset=b32b32}}{?=qq}q^{__CFArray}^{__CFString}^{__CFString}^v^{__CFDictionary}qCf}16@24
^{__DDResult={__CFRuntimeBase=QAQ}{__DDQueryRange={__DDQueryOffset=b32b32}{__DDQueryOffset=b32b32}}{?=qq}q^{__CFArray}^{__CFString}^{__CFString}^v^{__CFDictionary}qCf}
B24@0:8^{__DDResult={__CFRuntimeBase=QAQ}{__DDQueryRange={__DDQueryOffset=b32b32}{__DDQueryOffset=b32b32}}{?=qq}q^{__CFArray}^{__CFString}^{__CFString}^v^{__CFDictionary}qCf}16
@48@0:8@16@24^{_NSRange=QQ}32@40
@84@0:8I16{_NSRange=QQ}20{_NSRange=QQ}36@52{_NSRange=QQ}60@76
@92@0:8i16{_NSRange=QQ}20{_NSRange=QQ}36@52{_NSRange=QQ}60@76@84
@132@0:8@16@24@32@40I48{_NSRange=QQ}52{_NSRange=QQ}68@84{_NSRange=QQ}92@108B116B120B124B128
@92@0:8I16{_NSRange=QQ}20{_NSRange=QQ}36@52{_NSRange=QQ}60@76@84
@"NSTimeZone"
@"SGPostalAddressComponents"
@56@0:8@16@24B32@36@44B52
@44@0:8@16B24@28@36
v32@0:8q16@24
@36@0:8@16i24@28
@24@0:8@?16
B60@0:8@16@24@32@40@48B56
B64@0:8@16@24@32@40@48B56B60
v44@0:8@16@24I32d36
v48@0:8^{graph_t=II^{_vertex_t}}16@24^{DisjointSetHandle=}32@40
@"SGPatternDataFile"
@"NSHashTable"
@24@0:8#16
@"NSCache"
@28@0:8@16i24
@"NSString"24@0:8@"NSString"16
@"_PASCachedResult"
@"SGSimpleNamedEmailAddress"
@"HVHtmlParser"
@"<PMLTrainingProtocol>"
@96@0:8@16@24@32@40@48@56@64@72@80@88
I32@0:8@16^{_LXLexicon=}24
@48@0:8@16@24@32^@40
@32@0:8@16^B24
B48@0:8@16@24^@32@?40
B56@0:8@16@24@32^@40@?48
@"NSCharacterSet"
@40@0:8@16Q24i32B36
^{?=QS[3c]}24@0:8r*16
Q24@0:8r*16
i24@0:8r*16
@32@0:8r*16@24
^{?=QS[3c]}
@44@0:8@16S24@28@36
@28@0:8@16S24
@44@0:8@16@24S32@36
@52@0:8@16@24S32@36@44
@"<SGSeekable>"
@"_PASLazyPurgeableResult"
@"SGMIMetricsSubmodelStats"
@32@0:8@16#24
@48@0:8@16@24@32#40
v40@0:8Q16@24@?32
@"<SGBloomFilterChunk>"
v24@0:8(?=Q(?=II))16
B24@0:8(?=Q(?=II))16
[49200C]
@"SGConversationTracker"
B24@0:8@"<SGConversationTurnProtocol>"16
@"NSDate"16@0:8
@"NSRegularExpression"
@32@0:8@16i24i28
@36@0:8@16i24i28i32
@"MLFeatureValue"24@0:8@"NSString"16
@"NSSet"16@0:8
@88@0:8@16@24@32@40@48@56@64@72@80
@"MLMultiArray"
@24@0:8S16S20
@52@0:8@16@24@32@40S48
@68@0:8@16S24@28@36@44@52Q60
v68@0:8@16S24@28@36@44@52Q60
v52@0:8@16S24@28@36Q44
@28@0:8S16S20S24
v40@0:8@16@24S32S36
v32@0:8@?16@?24
@20@0:8S16
Q24@0:8@16
v28@0:8i16@?20
v36@0:8@16@24i32
v28@0:8i16@?<v@?@"NSObject<OS_xpc_object>">20
@"NSObject<OS_xpc_object>"20@0:8i16
q24@0:8@"NSObject<OS_xpc_object>"16
B32@0:8@"NSObject<OS_xpc_object>"16q24
v36@0:8@"NSObject<OS_xpc_object>"16@"NSObject<OS_xpc_object>"24i32
B24@0:8@"NSObject<OS_xpc_object>"16
@"NSObject<OS_xpc_object>"24@0:8@"NSObject<OS_xpc_object>"16
@"SGLongRunningTaskManager"
@24@0:8d16
{?="ageOfTheSubmodelInDays"b1"nbExtremelyDiscriminantTokensForIgnorability"b1"nbExtremelyDiscriminantTokensForSaliency"b1"nbHighlyDiscriminantTokensForIgnorability"b1"nbHighlyDiscriminantTokensForSaliency"b1}
@40@0:8@16{_NSRange=QQ}24
@44@0:8@16{_NSRange=QQ}24i40
S24@0:8Q16
v40@0:8^S16{_NSRange=QQ}24
r*16@0:8
r*20@0:8B16
r^S16@0:8
(?="ascii"[0c]"utf16"[0S])
I24@0:8@16
I24@0:8@"NSString"16
v32@0:8@"NSDictionary"16@?<v@?B>24
v32@0:8@"NSDictionary"16@?<v@?@"NSArray"@"NSDictionary"@"NSArray"@"NSDictionary">24
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary">24
v32@0:8@"NSDictionary"16@?<v@?@"NSString">24
v40@0:8@"NSArray"16@"NSArray"24@?<v@?@"NSDictionary">32
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSArray">40
v32@0:8@"NSString"16@?<v@?@"SGDOMParserResult">24
v48@0:8@16@24@32@40
@"JSVirtualMachine"
@"JSContext"
@"SGReverseTemplatesJSDataDetectors"
@"NSURL"
@"NSISO8601DateFormatter"
@"_PASCFBurstTrie"
{?=b1b1b1b1b1b27}24@0:8@16
{?=b1b1b1b1b1b27}32@0:8r*16Q24
@"SGSqliteDatabase"
@44@0:8@16i24^@28@36
B44@0:8q16i24@28@?36
i32@0:8^{sqlite3_stmt=}16r*24
i36@0:8^{sqlite3_stmt=}16r*24i32
i40@0:8^{sqlite3_stmt=}16r*24q32
i40@0:8^{sqlite3_stmt=}16r*24d32
i40@0:8^{sqlite3_stmt=}16r*24@32
^{sqlite3=}16@0:8
B40@0:8@16@?24@?32
B48@0:8@16@?24@?32@?40
B32@0:8@16@?24
@56@0:8@16@24@32@?40@?48
B24@0:8@?16
B20@0:8I16
@"SGSqliteDatabaseImpl"
@"SGSqliteDatabaseSharedLock"
v52@0:8@16@24@32@40B48
@52@0:8@16@24B32Q36B44B48
@56@0:8@16@24d32@40@48
@20@0:8C16
v72@0:8@16@24@32Q40@48@56B64B68
v68@0:8@16@24@32B40Q44@52@60
v36@0:8@16@24B32
q32@0:8@16q24
v32@0:8{SGUnixTimestamp_=d}16@?24
v40@0:8{SGUnixTimestamp_=d}16@?24Q32
v28@0:8@16B24
v32@0:8@16B24B28
@"EAEmailAddressSet"
@40@0:8q16@24@32
@40@0:8q16Q24d32
v32@0:8@16q24
v40@0:8@16q24@32
@32@0:8q16Q24
@48@0:8q16Q24d32Q40
v36@0:8@16@24f32
q32@0:8@16@24
{?=b1b1b1b1b8b20}24@0:8@16
d32@0:8@16@24
B40@0:8@16@24d32
@92@0:8B16d20d28I36d40I48B52B56B60I64I68B72B76B80B84B88
v28@0:8d16I24
v48@0:8@16@24@32d40
@"NSArray"16@0:8
@24@0:8@"NSArray"16
@24@0:8^{sqlite3_stmt=}16
@28@0:8^{sqlite3_stmt=}16B24
f24@0:8@16
{?="attachmentsProbability"b1"conversationProbability"b1"domainFromSenderProbability"b1"listIdProbability"b1"mailboxProbability"b1"mailboxTypeProbability"b1"personCCRecipientsProbability"b1"personFromSenderInDyadicConversationProbability"b1"personFromSenderProbability"b1"personToRecipientsProbability"b1"standardMailRulesProbability"b1"subjectContentProbability"b1"subjectCountStatsProbability"b1}
Q40@0:8Q16Q24Q32
Q24@0:8Q16
d32@0:8d16q24
Q40@0:8@16@24Q32
Q56@0:8@16@24Q32Q40Q48
@64@0:8@16d24d32@40@48@56
v40@0:8@"WKWebView"16@"WKNavigationAction"24@?<v@?q>32
v48@0:8@"WKWebView"16@"WKNavigationAction"24@"WKWebpagePreferences"32@?<v@?q@"WKWebpagePreferences">40
v40@0:8@"WKWebView"16@"WKNavigationResponse"24@?<v@?q>32
v32@0:8@"WKWebView"16@"WKNavigation"24
v40@0:8@"WKWebView"16@"WKNavigation"24@"NSError"32
v40@0:8@"WKWebView"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"WKWebView"16
v40@0:8@"WKWebView"16@"NSURLAuthenticationChallenge"24@?<v@?B>32
v40@0:8@"WKWebView"16@"WKNavigationAction"24@"WKDownload"32
v40@0:8@"WKWebView"16@"WKNavigationResponse"24@"WKDownload"32
@"NSObject<OS_dispatch_semaphore>"
@"WKWebView"
@64@0:8@16@24d32d40d48@56
@48@0:8d16d24d32@40
@"NSData"16@0:8
@64@0:8@"NSString"16@"NSString"24d32d40d48@"NSData"56
@48@0:8d16d24d32@"NSData"40
@60@0:8i16@20@28@36d44d52
@68@0:8i16@20@28d36d44d52d60
@84@0:8i16@20@28@36d44d52d60d68@76
Q24@0:8q16
@28@0:8C16q20
@"SGMIMetricsMailIntelligenceForMessage"
{?="deploymentId"b1}
:24@0:8^{objc_property=}16
v48@0:8@16@24@32^v40
@"CKRecordID"
@"CKServerChangeToken"
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
@40@0:8@?16@?24Q32
@44@0:8@?16@?24Q32B40
@"_PASKVOHandler"
@"CKDatabase"
@"APSConnection"
@"CKContainer"
@"_SGDCloudKitSyncPersistedState"
@"NSOperation"
@"NSError"
^{ct_green_tea_logger_s=}
@"SGDCloudKitSync"
v32@0:8@?16@24
@"NSMapTable"
@"<NSObject>"
v40@0:8@?16@24#32
@32@0:8C16C20@24
@"NSMutableData"
@40@0:8q16q24q32
q24@0:8q16
{?="category"b1"count128KBTo512KB"b1"count32KBTo128KB"b1"count512KBTo2MB"b1"count8KBTo32KB"b1"countOver2MB"b1"countUpTo8KB"b1}
@76@0:8I16@20{_NSRange=QQ}28@44@52B60@64B72
@92@0:8I16@20@28{_NSRange=QQ}36@52B60{_NSRange=QQ}64@80B88
B28@0:8@16B24
@80@0:8@16@24@32@40@48@56@64@72
@"SGStorageEvent"
@"SGStorageContact"
@"SGStorageReminder"
{?="predictedMissingElementScore"b1"foundMatchingElement"b1}
v44@0:8@16Q24B32@?36
v56@0:8@16Q24Q32@?40@?48
v52@0:8@16Q24B32Q36@?44
v72@0:8@16Q24@?32Q40@?48@56B64B68
B32@0:8@16Q24
v72@0:8@16@24@32@40@48@56@?64
C24@0:8@16
v56@0:8@16@24@32@40Q48
v48@0:8@16@24@32Q40
@44@0:8r*16@?24@?32I40
v32@0:8@?16d24
{_opaque_pthread_cond_t="__sig"q"__opaque"[40c]}
@"NSObject<OS_os_transaction>"
@64@0:8@16@24@32@40@48@56
q48@0:8@16@24@32@40
@36@0:8{?=SS}16Q20Q28
@36@0:8{?=SS}16{_NSRange=QQ}20
{?=SS}16@0:8
{?="category"S"subtype"S}
{_NSRange=QQ}48@0:8@16@24@32@40
{_NSRange=QQ}52@0:8@16{_NSRange=QQ}24B40@44
{_NSRange=QQ}40@0:8@16@24@32
B56@0:8@16{_NSRange=QQ}24Q40Q48
B40@0:8@16^{_NSRange=QQ}24^B32
@"CNContact"
{?="numberOfLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20"b1"numberOfLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20"b1"numberOfPredictedAttachmentOnLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20"b1"numberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20"b1"totalNumberOfEmailsProcessedForAttachmentDetectionRoundedToClosestMultipleOf20"b1"totalNumberOfEmailsProcessedForFollowUpDetectionRoundedToClosestMultipleOf20"b1"totalNumberOfEmailsProcessedForRecipientDetectionRoundedToClosestMultipleOf20"b1}
{SGUnixTimestamp_=d}24@0:8@16
@56@0:8{_NSRange=QQ}16@32@40@48
B40@0:8{_NSRange=QQ}16@32
B32@0:8@16^@24
@"SGPipelineEntity"
@36@0:8@16r*24B32
@32@0:8@16r*24
@36@0:8@16B24^B28
v48@0:8@16{_NSRange=QQ}24@?40
@36@0:8q16Q24B32
@40@0:8@16q24@?32
@56@0:8@16@?24Q32@40@48
@40@0:8@16@?24@32
@"HKHealthStore"
v48@0:8@16@24{SGMSelfIdModelType_=Q}32Q40
@60@0:8@16@24^{_NSRange=QQ}32{_NSRange=QQ}40B56
v52@0:8@16@24C32@36C44C48
@40@0:8{_NSRange=QQ}16@32
@32@0:8@16^{_NSRange=QQ}24
@"SGDetectedAttributeML"
@"SGQuickResponsesML"
@"SGContactPipelineHelper"
@"SGHKHealthStore"
v40@0:8@16@24Q32
v32@0:8d16@24
v40@0:8d16@24@32
v40@0:8@16Q24Q32
@56@0:8Q16@24{_NSRange=QQ}32@48
@20@0:8B16
@"TRIClient"
@"TRIRolloutIdentifiers"
@80@0:8@16@24Q32@40@48@56@64@72
v40@0:8@16@24q32
@32@0:8@16^q24
@40@0:8@16B24B28B32i36
@"SGM2HarvestCost"
@"SGMIFeatureStore"
@"_PASSqliteDatabase"
^{sqlite3_tokenizer_module=i^?^?^?^?^?^{sqlite3}}
^{sqlite3_tokenizer=^{sqlite3_tokenizer_module}}
@40@0:8@16@24B32B36
@48@0:8@16@24B32@36B44
@44@0:8@16B24@28^B36
v24@0:8^@16
@52@0:8@16@24B32@36B44B48
@28@0:8q16B24
v36@0:8@16B24@?28
v40@0:8@16B24B28@?32
v52@0:8@16B24Q28@?36@?44
@40@0:8@16Q24@?32
@44@0:8@16B24Q28@?36
@40@0:8@16B24B28Q32
d40@0:8@16@24@32
{_PASDBIterAction_=B}84@0:8@16@24q32@40@48@56@64@72B80
@28@0:8B16Q20
@40@0:8q16@24B32B36
q24@0:8Q16
@44@0:8{SGUnixTimestamp_=d}16{SGUnixTimestamp_=d}24Q32I40
@52@0:8{SGUnixTimestamp_=d}16{SGUnixTimestamp_=d}24@32Q40I48
@40@0:8{SGUnixTimestamp_=d}16{SGUnixTimestamp_=d}24Q32
@48@0:8{SGUnixTimestamp_=d}16{SGUnixTimestamp_=d}24@32Q40
@60@0:8{SGUnixTimestamp_=d}16{SGUnixTimestamp_=d}24Q32@40I48@?52
B36@0:8B16@20^@28
@"SGDatabaseJournal"
{atomic_flag="_Value"AB}
@"SGJournal"
@"SGSpotlightContactsAdapter"
@"SGSGtoCNContactsCacheUpdateAdapter"
@"SGBloomFilter"
@"NSMutableOrderedSet"
@"SGEnrichmentWritebackAdapter"
@"SGKeyValueCacheManager"
v40@0:8@"INInteraction"16@"SGPipelineEntity"24@"SGRequestContext"32
@40@0:8@16@24d32
@48@0:8@16@24@32d40
B24@0:8Q16
v44@0:8@16@24Q32i40
v52@0:8@16@24@32Q40i48
v68@0:8@16@24@32@40@48Q56i64
@"<SGReverseTemplateJS>"
v40@0:8@16Q24@32
v48@0:8@16@?24Q32@40
v64@0:8@16@24@?32@40@48Q56
v72@0:8@16@24@?32@40@48Q56@64
@48@0:8@16@24d32@40
@32@0:8^{__DDResult=}16@24
v40@0:8^{__DDResult=}16@24@32
@"NSDateFormatter"
@116@0:8@16@24@32@40@48@56@64@72f80d84d92d100@108
{?="accuracy"b1"latitude"b1"longitude"b1"quality"b1"locationType"b1}
@84@0:8@16B24@28@36@44@52@60@68@76
@76@0:8@16B24@28@36@44@52@60@68
@68@0:8@16B24@28@36@44@52@60
@40@0:8@16B24q28B36
@"SGMailClientUtil"
@"SGMIBiomeReducedMessageEvents"
@"_DKKnowledgeStore"
{?="fromStatus"b1"toStatus"b1}
@76@0:8@16@24@32B40@44{_NSRange=QQ}52@68
@84@0:8@16Q24@32B40@44@52@60{_NSRange=QQ}68
B56@0:8Q16Q24Q32^@40@?48
B64@0:8Q16Q24Q32^@40@48@?56
v48@0:8Q16Q24Q32@?40
@48@0:8@16@24Q32^@40
@80@0:8Q16Q24@32@40@48@56Q64^@72
v44@0:8@16B24@28@36
v24@0:8@"SGSqlEntityStore"16
@"NSNumber"16@0:8
@92@0:8@16@24@32@40@48@56@64d72@80B88
@100@0:8@16@24@32@40@48@56@64@72d80@88B96
C44@0:8@16@24d32B40
@64@0:8Q16Q24Q32B40@44B52@56
@72@0:8Q16Q24Q32B40@44B52@56@64
{?="modelVersion"b1"offset"b1"dateIsCorrect"b1"didRegexTrigger"b1"didResponseKitTrigger"b1"isFromCongratulation"b1}
@48@0:8@16@24@32q40
@48@0:8@16@24q32@40
@48@0:8@16@24@32Q40
@72@0:8@16@24@32@40@48@56Q64
v56@0:8@16@24@32@40@48
@"SGIdentityKey"
@"NSTimeZone"16@0:8
@56@0:8@"NSDate"16@"NSTimeZone"24@"NSDate"32@"NSTimeZone"40@"NSArray"48
@112@0:8@16@24@32@40@48{SGUnixTimestamp_=d}56{SGUnixTimestamp_=d}64@72@80@88@96I104B108
v32@0:8@"NSArray"16@"NSString"24
v32@0:8@"NSDate"16@"NSString"24
v32@0:8@"CSUserAction"16@"CSSearchableItem"24
v40@0:8@"NSArray"16@"NSString"24@"NSString"32
v32@0:8@"NSString"16@"NSString"24
@"SGDSuggestManager"
@48@0:8@16@24@32@?40
@56@0:8@16@24^{?={?=SS}iiiBBBBBfiiiiiB}32@40@48
@40@0:8@16@24^{?={?=SS}iiiBBBBBfiiiiiB}32
v56@0:8@16@24^@32^@40q48
B48@0:8@16@24B32B36q40
B64@0:8@16@24^@32^@40q48B56B60
@40@0:8@16^{?={?=SS}iiiBBBBBfiiiiiB}24@32
@56@0:8@16@24@32@40^@48
@"SGDCKInteractionInfo"
@"SGDCKTimeRange"
{?="creationTimestamp"b1"lastModifiedTimestamp"b1"parentEntityType"b1"categoryType"b1"allDay"b1"cancelled"b1}
d40@0:8@16@24d32
@36@0:8@16B24@28
@64@0:8@16@24@32@40@48d56
@"SGMITokenCounts"
@48@0:8@16B24B28@32@40
^v16@0:8
{_NSRange=QQ}40@0:8{_NSRange=QQ}16Q32
@48@0:8@16{_NSRange=QQ}24@?40
q36@0:8@16I24@28
f32@0:8@16@24
{SGMContactDetailOwner_=Q}16@0:8
{SGMContactDetailFoundIn_=Q}16@0:8
v64@0:8@16q24@32Q40@48@?56
@100@0:8@16@24@32@40@48@56@64@72@80@88B96
@28@0:8B16@20
@36@0:8B16@20@28
v48@0:8r*16@24Q32@?40
i48@0:8r*16@24Q32@?40
@"SGRe2PrefilterTree"
@"SGMIWarningsDetectionRegex"
@44@0:8@16{_NSRange=QQ}24B40
@72@0:8@16@24@32@40@48@56@64
@"SGMIWarningsDetectionRegexes"
@64@0:8{_NSRange=QQ}16{_NSRange=QQ}32@48@56
@"NSIndexSet"
^{__CFString=}
{?="buffer"[64S]"theString"^{__CFString}"directUniCharBuffer"^S"directCStringBuffer"*"rangeToBuffer"{?="location"q"length"q}"bufferedRangeStart"q"bufferedRangeEnd"q}
@"SGMicrodataItem"
@"SGMicrodataParserStackItem"
@32@0:8Q16Q24
Q32@0:8Q16@24
v44@0:8Q16@24@?32i40
B20@0:8i16
@48@0:8@16@24@32o^@40
@52@0:8@16@24@32B40o^@44
v32@0:8@"CSSearchableIndex"16@?<v@?>24
v40@0:8@"CSSearchableIndex"16@"NSArray"24@?<v@?>32
v24@0:8@"CSSearchableIndex"16
@"NSData"48@0:8@"CSSearchableIndex"16@"NSString"24@"NSString"32o^@40
@"NSURL"52@0:8@"CSSearchableIndex"16@"NSString"24@"NSString"32B40o^@44
v56@0:8@16@24Q32@40@?48
@"SGMIDomainCountingTable"
@"_PASSqliteDatabase"16@0:8
@"NSDictionary"16@0:8
@"NSArray"24@0:8^I16
@32@0:8@?16@24
@48@0:8q16@24@32@40
@64@0:8q16Q24d32@40@48@56
v28@0:8B16@20
v44@0:8@16@24B32B36B40
v48@0:8@16q24@32@40
B40@0:8@16@?24@32
v56@0:8@16q24q32q40@48
@"_PASDatabaseMigrator"
@40@0:8@16{SGUnixTimestamp_=d}24@32
@40@0:8@16q24@32
@"NSObject<SGEntityKey>"
q32@0:8@16^@24
q40@0:8@16q24^@32
@"EMDaemonInterface"
@"ECDKIMVerifier"
@"_PASLRUCache"
v60@0:8@16S24S28@32@40C48d52
@32@0:8@16S24S28
@"SGTokenizerMappingTransformer"
@"SGNameMappingTransformer"
r^v24@0:8Q16
{?="end"b1"endUTCOffsetSeconds"b1"start"b1"startUTCOffsetSeconds"b1"floating"b1}
@100@0:8@16@24@32@40@48C56@60C68@72C80@84@92
@"SGStorageLocation"
{?="conversationAge"b1"domainFromSenderAge"b1"personCCRecipientsAge"b1"personFromSenderAge"b1"personFromSenderInDyadicConversationAge"b1"personToRecipientsAge"b1"subjectContentAge"b1}
@24@0:8r^v16
B24@0:8{SGUnixTimestamp_=d}16
{_NSRange=QQ}40@0:8{_NSRange=QQ}16@32
@40@0:8@16B24B28B32B36
@40@0:8Q16@24@32
@56@0:8@16@24B32B36B40B44B48B52
{_NSRange=QQ}32@0:8{_NSRange=QQ}16
@52@0:8@16@24B32B36B40B44B48
#24@0:8@16
{?="blockedWarningCount"b1"negativeEngagement"b1"noEngagement"b1"positiveEngagement"b1"type"b1"incomingMessage"b1}
v28@0:8@16S24
@"SGMIMetricsSubmodelsProbabilities"
{?="missingAttachmentPredictionPerformanceInMilliSeconds"b1"missingRecipientPredictionPerformanceInMilliSeconds"b1"saliencyPredictionPerformanceInMilliSeconds"b1"predictedSaliency"b1"predictedSaliencyScore"b1"estimatedGroundTruth"b1}
@"SGMicrodataDocument"
{?="s"[2Q]}
v44@0:8@16@24@32B40
B48@0:8@16@24@32^@40
B40@0:8@16@24^@32
{?="documentSource"b1"significantWork"b1}
@40@0:8Q16i24i28@32
B36@0:8i16@20@?28
@?24@0:8@16
B40@0:8@16@24^B32
@"SGDatabaseJournalFile"
-3)))))))9LR
$-KKKKKO`q
KKKK
!',4
-uu7A
Mkuuuuuuu}ZU
77777777777777777777777777777777777
33@3
RMWhMm
"(.4:@FL
2CTev
SVY\_be
twz}
\F_behkFFnqtFFwz
58;>ADGJMPSVY\_
,04DZ^bfjnrvz
"(.?Parx
n}-<K
?????????????????????????????????????????F????H???????J???L?N?P?T
RHlk
-0369
?JT{
&7HYj
@(#)PROGRAM:CoreSuggestionsInternals  PROJECT:Suggestions-1193.23.0.1
N3re28CompilerE
N3re26Regexp6WalkerINS_4FragEEE
N3re217NumCapturesWalkerE
N3re219NamedCapturesWalkerE
N3re218CaptureNamesWalkerE
 * . ` d f o 
 * . ` d f o 
 d f p t ~ 
!%!'!)!,!1!3!M!O!_!
$&$@$J$`$
)L+P+Y+
0 00070<0?0
1 2_2
-%-'-'-----
,.,0,^,0
&!&!@
0!0)080;0
.0/011
2`2~2`
 *0-0
3W3f
(*359==XY`a
q q 
!$!$!&!&!(!(!*!-!/!9!<!?!E!I!N!N!
,.,0,^,`,
-%-'-'-----0-g-o-o-
-/./.
01050;0<0A0
1-111
q q 
 *!+!2!2!N!N!`!
!/!/!4!4!9!9!<!=!F!I!N!N!
!0,^,a,a,e,f,h,h,j,j,l,l,q,q,s,t,v,{,
-%-'-'-----A
q q 
 |,},o-o-/./.
01050;0;0
(*359==XY`a
5!8!0-g-
0<0<0A0
1-111
!$!$!&!&!(!(!*!-!0!3!>!?!E!E!
,.,`,`,b,d,g,g,i,i,k,k,m,p,r,r,u,u,~,
>DFHJMUVbc
-*0/0
AD
.0/0#
>@FHJMUVbc
-*0-0
fox~
p p t y 
0!0)080:0
1 2)2H2O2Q2_2
fo
0!0)080:0
x~p
p p t y 
 P!_!
1 2)2H2O2Q2_2
 ' 0 C E Q S ^ } ~ 
#)#*#h'u'
,p-p-
...0.;.
00000=0=0
? @ T T 3
.:.;.
00000
F F ~ ~ 
#*#*#i'i'k'k'm'm'o'o'q'q's's'u'u'
)#.#.%.%.'.'.).).
 : : 
.!.!.@
 9 9 
...
. . .!
   ' 0 8 ; > A C G Q S S U ^ 
,p-p-
.*...0.9.
0=0=0
 E E } } 
#)#)#h'h'j'j'l'l'n'n'p'p'r'r't't'
)".".$.$.&.&.(.(.
000
D D R R z | 
!#!%!%!'!'!)!)!.!.!:!;!@!D!J!M!O!O!
##(#+#
$&$@$J$
)L+P+Y+
0 0 06070>0?0
2*2G2P2P2`2
D D R R z | 
!@!D!K!K!
" #!#|#|#
%o&o&
*0+D+G+L+)
!#!%!%!'!'!)!)!.!.!:!;!J!J!L!M!O!O!
#"#(#+#{#}#
$&$@$J$
&n&p&
+/+E+F+P+Y+
0 0 06070>0?0
2*2G2P2P2`2
(*359=DFHJMUVXY`cfox
0-g-o-p-
 ( ) / / _ _ 
0( ( ) )  
 / / _ _ 
0?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?
N3re214ToStringWalkerE
N3re26Regexp6WalkerIiEE
N3re210PCREWalkerE
N3re26Regexp6WalkerIbEE
N3re217EmptyStringWalkerE
N3re214SimplifyWalkerE
N3re26Regexp6WalkerIPS0_EE
N3re29Prefilter4Info6WalkerE
N3re26Regexp6WalkerIPNS_9Prefilter4InfoEEE
333333
u2A333333
MbP?
com_apple_mobilesms_suggested_contact_name
com_apple_mobilesms_suggested_contact_photo
urn:biz:
SGTextMessage.m
Invalid parameter not satisfying: %@
searchableItem.domainIdentifier
attachmentDomain
conversationIdentifier
senderIsAccountOwner
sender
SGMissingDomainIdentifier.uniqueIdentifierFallback.%@
identifier
PER_MESSAGE_TRANSFORMER
SGConversationFlatteningTransformer.m
Unexpected input type for %@: %@, 
INPUT_CONVERSATION
SG_MODEL_INPUT_TARGET_MESSAGE_INDEX
INPUT_TEXT
DD_MATCHES
TARGET_MATCH
SG_MODEL_INPUT_TARGET_RANGE
SG_MODEL_DISABLE_TARGET_MAPPING
SG_FEATURE_TARGET_SENT__
SG_FEATURE_END_OF_MESSAGE
@type
http://schema.org/Organization
reservationFor
arrivalTime
departureTime
arrivalPlatform
departurePlatform
provider
http://schema.org/BusReservation
http://schema.org/BusTrip
http://schema.org/BusStation
busName
busNumber
arrivalBusStop
departureBusStop
Bus Trip
SelfIdModelScore
%@ %@
model
result
supervision
SGMSelfIdModelTypeRegex
SGMSelfIdModelTypeLogistic
SGMSelfIdModelTypeLinear
SGMSelfIdModelTypeCoreNLP
(unknown: %i)
SGMSelfIdSupervisionTypeNone
SGMSelfIdSupervisionTypeContact
SGMSelfIdSupervisionTypeAppleContact
SGMSelfIdSupervisionTypePreviousModel
SGMSelfIdSupervisionTypeRegex
http://schema.org/GeoCoordinates
latitude
longitude
SuggestdExitReason
exitCode
AutocompleteUserSelectedContact
wasSuggestedContact
wasKnownContact
SGMContactDetailUsedAppMessages
SGMContactDetailUsedAppPhone
SGMContactDetailUsedAppMail
SGMContactDetailUsedAppCalendar
SGMContactDetailUsedAppOther
SGMContactDetailUsedAppFaceTime
SGMContactDetailUsedAppAddressBook
SGMContactDetailUsedAppSpringBoard
SGMContactDetailUsedAppHome
SGMContactDetailUsedAppMaps
SGMContactDetailUsedAppFitness
SGMContactDetailUsedAppReminders
BundleIdsTrackedAsOther
bundleId
SGInteractionParser.m
interaction
person
interactionIdentifier
v24@?0@"NSString"8@"NSString"16
ContactCreated
SELECT  url, title, received_from_handle, bundle_id, group_id, doc_id, seconds_from_1970, document_title, document_seconds_from_1970, document_time_interval, flags  FROM urls ORDER BY seconds_from_1970 DESC LIMIT :limit
 AND _pas_block(:containingSubstringBlock, url) 
 AND (flags & :flagFilter) = 0 
SELECT  url, title, received_from_handle, bundle_id, group_id, doc_id, seconds_from_1970, document_title, document_seconds_from_1970, document_time_interval, flags  FROM urls WHERE bundle_id NOT IN _pas_nsset(:excludingBundleIdentifiers)   AND (seconds_from_1970 BETWEEN :startDate AND :endDate        OR document_seconds_from_1970 BETWEEN :startDate AND :endDate)   %@ %@ ORDER BY seconds_from_1970 DESC LIMIT :limit
:excludingBundleIdentifiers
:containingSubstringBlock
:flagFilter
UPDATE urls SET flags = (flags | :flagsToSet) WHERE _pas_block(:block, url)
:flagsToSet
urls
seconds_from_1970
document_seconds_from_1970
document_time_interval
bundle_id
doc_id
received_from_handle
group_id
document_title
flags
INSERT OR REPLACE INTO urls (url, title, received_from_handle, bundle_id, group_id, doc_id, seconds_from_1970, document_title, document_seconds_from_1970, document_time_interval, flags) VALUES (:url, :title, :receivedFromHandle, :bundleIdentifier, :groupIdentifier, :documentIdentifier, :secondsFrom1970, :documentTitle, :documentDate, :documentTimeInterval, :flags)
:url
:receivedFromHandle
:groupIdentifier
:documentIdentifier
:secondsFrom1970
:documentTitle
:documentDate
:documentTimeInterval
:flags
DELETE FROM urls ORDER BY id DESC LIMIT -1 OFFSET :keepThisMany
:keepThisMany
DELETE FROM urls WHERE seconds_from_1970 < :seconds
:seconds
SELECT  url, title, received_from_handle, bundle_id, group_id, doc_id, seconds_from_1970, document_title, document_seconds_from_1970, document_time_interval, flags  FROM urls WHERE bundle_id = :bundleId AND COALESCE(document_seconds_from_1970, seconds_from_1970) BETWEEN :startDate AND :endDate
DELETE FROM urls WHERE bundle_id = :bundleIdentifier
DELETE FROM urls WHERE bundle_id = ? AND ((group_id GLOB ?) 
OR (group_id GLOB ?) 
DELETE FROM urls WHERE bundle_id = :bundleIdentifier AND doc_id IN _pas_nsarray(:documentIdentifiers)
:documentIdentifiers
locale
featurizer
modelSource
[vector isKindOfClass:PMLSparseVector.class]
-[SGModel predictForInput:]
SGModels.m
[[self class] isEqual:features.source.modelClass]
@"SGTransformerInstance"8@?0
Undefined class for model objective %lu
%@ must implement +newTransformerInstanceForLanguage:
%PHONE%
transformer
sessionDescriptor
modelClass
self.transformer
self.modelClass
TOKEN_WINDOW
NGRAMS
TW=%@&NG=%@&FV=%@
SGDetectedAttributeDissector
SGDDMatchPhone
SGDDMatchEmailAddress
SGDDMatchPostalAddress
SGDDMatchEmailAddressForIMessage
SGDDMatchPostalAddressForIMessage
SelfIdentificationPhrase
ContactSharing
TextMessageBirthdayCongrats
NSString *rulesKeyForObjective(SGModelObjective)
Unknown SGModelObjective = %lu
SG_FIM_ML_PREDICT_KEY
SG_FIM_ML_EVALUATE_KEY
SG_FIM_ML_TRAIN_KEY
NSString *rulesKeyForMode(SGModelMode)
Unknown SGModelMode = %lu
ContactDetailExtraction
source
detail
outcome
foundInSenderCNContact
extractionModelVersion
isUnlikelyPhone
extractionSignatureSource
SGMDocumentTypeEmail
SGMDocumentTypeMessage
SGMContactDetailTypeEmail
SGMContactDetailTypePhone
SGMContactDetailTypeAddress
SGMContactDetailTypeOther
SGMContactDetailTypeBirthday
SGMContactDetailExtractionOutcomeExtracted
SGMContactDetailExtractionOutcomeIgnoredSuspectedBulkMail
SGMContactDetailExtractionOutcomeIgnoredQuotedRegion
SGMContactDetailExtractionOutcomeIgnoredPattern
SGMContactDetailExtractionOutcomeIgnored
SGMContactDetailOwnerNotFound
SGMContactDetailOwnerSender
SGMContactDetailOwnerNotSender
SGMContactDetailExtractionSignatureSourceHMM
SGMContactDetailExtractionSignatureSourceDataDetectors
SGMContactDetailExtractionSignatureSourceNoSignatureSource
ContactDetailSent
foundIn
hasName
tokens
SGMContactDetailFoundInNotFound
SGMContactDetailFoundInSenderCNContact
SGMContactDetailFoundInOtherCNContact
SGMContactDetailFoundInSuggestions
SGMLowCount0
SGMLowCount1
SGMLowCount2
SGMLowCount3to4
SGMLowCount5orMore
ContactsInterfaceCacheCount
SELECT title, dueDateComponents, dueLocationId, dueLocationType, dueLocationTrigger, creationDate, contactIdentifier, reminderStatus FROM reminders WHERE id = ?
:dueDateComponents
:dueLocationId
:dueLocationType
:dueLocationTrigger
:sourceUrl
:creationDate
:opaqueKey
:uniqueKey
:contactIdentifier
:reminderStatus
INSERT INTO reminders (entityId, duplicateKey, sourceKey, title, dueDateComponents, dueLocationId, dueLocationType, dueLocationTrigger, sourceUrl, creationDate, opaqueKey, uniqueKey, contactIdentifier, reminderStatus) VALUES (:entityId, :duplicateKey, :sourceKey, :title, :dueDateComponents, :dueLocationId, :dueLocationType, :dueLocationTrigger, :sourceUrl, :creationDate, :opaqueKey, :uniqueKey, :contactIdentifier, :reminderStatus)
SELECT sourceKey FROM reminders WHERE duplicateKey = ?
SELECT duplicateKey FROM reminders WHERE entityId = ?
SELECT entityId FROM reminders WHERE duplicateKey = ?
SELECT duplicateKey, sourceKey FROM reminders WHERE id = :primaryKey
SGSqlEntityStore+Reminders.m
origin
SELECT entityId FROM reminders WHERE id = ?
SELECT id FROM reminders WHERE entityId = ?
ContactsInterfaceCacheHit
cacheHit
FoundInMailModelScore
contactDetail
correct
mode
SGMFoundInMailModelTypeRegex
SGMFoundInMailModelTypeLogistic
SGMFoundInMailModelTypeLinear
SGMFoundInMailModelTypeNaiveBayes
SGFoundInMailModelModeTraining
SGFoundInMailModelModeEvaluation
SGFoundInMailModelModePrediction
SGMFoundInMailSupervisionTypeNone
SGMFoundInMailSupervisionTypeContact
SGMFoundInMailSupervisionTypeAppleContact
SGMFoundInMailSupervisionTypePreviousModel
INSERT OR REPLACE INTO metadata (key, value) VALUES (:key, :value)
DELETE FROM metadata WHERE key = :key
SELECT value FROM metadata WHERE key = :key LIMIT 1
@16@?0@"_PASSqliteStatement"8
PREDICTION_PARAMETERS
TARGET_LANGUAGE
CONFIDENCE_THRESHOLDS
@"NSMutableDictionary"24@?0@"NSDictionary"8@"NSString"16
NEGATIVE_SAMPLE_CHOPLESS
B12@?0I8
core
location
time
polarity
EVENT_CORE__RESERVATION_ID
EVENT_LOCATION__START_ADDRESS
EVENT_LOCATION__END_ADDRESS
EVENT_LOCATION__START_PLACE
EVENT_LOCATION__END_PLACE
EVENT_TIME__START_DATETIME
EVENT_TIME__END_DATETIME
TITLE__HOTEL_RESTAURANT_NAME
TITLE__MOVIE_TICKET_NAME
TITLE__CAR_RENTAL_NAME
TITLE__EVENT_NAME
POLARITY__EVENT_YES
SGStructuredEventDocument: reservationId, unable to resolve candidates
SGStructuredEventDocument: address, unable to resolve candidates
SGStructuredEventDocument: %@, unable to resolve candidates
idx (%lu) is out of range (%lu)
trialMetadata
backgroundTrialMetadata
hoursSinceReference
ctsJobConstraints
hoursSinceLastIncrementalUpdate
isSubmodelRebuilt
daysAvailableDuringIncrementalUpdate
daysProcessedDuringIncrementalUpdate
mailsProcessedDuringIncrementalUpdate
deletedTokensCountToComplyToCappingPolicy
deletedEmailsCount
rollbackedSlicesCountToComplyToPostDeletionPolicy
rollbackedEmailsCountToComplyToPostDeletionPolicy
submodelsStats
biomeAggregationPerformanceInMilliSeconds
submodelsUpdatePerformanceInMilliSeconds
submodelsPruningForCappingPolicyPerformanceInMilliSeconds
cumulatedSubmodelsRollbackForPostDeletionPolicyPerformanceInMilliSeconds
CancelAfterDeadline
CpuIntensive
DiskIntensive
StartHandler
SuspendHandler
MemoryIntensive
SchedulingPriorityBackground
SchedulingPriorityDefault
SchedulingPriorityMaintenance
SchedulingPriorityUtility
SchedulingPriorityUserInitiated
SchedulingPriorityUserInitiatedOvercommit
RequestsApplicationLaunch
RequiresInexpensiveNetworking
RequiresNetwork
RequiresPlugin
TriggersRestart
No proposal found
No title found for message
No dueDate nor dueLocation found in message
No confirmation found
isSent
body
suggest_tool_preprocess
ReminderDissector full extraction
suggest_tool
extractionStatus
errorMessage
processingLanguage
modelDescription
SGReminderDissector.m
textMessage.isSent
polarityEmojisMapping
verbsMapping
ACCOUNT_OWNER
CONTACT
IS_%@
SG_QA_REMINDER_TEST
TEST REMINDER
defaultManager
RTRoutineManager
Class getRTRoutineManagerClass(void)_block_invoke
Unable to find class %s
void *CoreRoutineLibrary(void)
SearchResultsIncludedPureSuggestion
SMS_FILTER_INEN_CLASSIFICATION
trialEventExtractionAssets
trialEventClassifierModel
trialEventClassifierThreshold
trialEventExtractionMessageProcessingLimit
trialEventExtractionRateLimitInterval
v16@?0@"<TRINamespaceUpdateProtocol>"8
v16@?0@"SGMessageEventDissectorTrialClientWrapperGuardedData"8
SearchResultsUserSelectedContact
SerializedContactsCacheHit
SqliteErrors
errorCode
com.apple.suggestions.plugin.SGURLPlugin
All Mailboxes
Unknown Mailbox
lastMailboxCheckedForTopSGMISaliency
lastLimitCheckedForTopSGMISaliency
SELECT score, mailboxId, isSalient, isGteSalient, isCounted, creationTimestamp FROM mailIntelligence_saliency WHERE messageId = :messageId
score
isSalient
isGteSalient
isCounted
mailboxId
SELECT messageId, score, isSalient, creationTimestamp FROM mailIntelligence_saliency WHERE isSalient != 0
 AND mailboxId = :mailboxId
 ORDER BY creationTimestamp DESC LIMIT :limit
:mailboxId
SELECT messageId, mailboxId, score, isSalient, creationTimestamp FROM mailIntelligence_saliency WHERE 1
 AND mailboxId IN _pas_nsarray(:mailboxIds)
 AND creationTimestamp > :minDate
%@ ORDER BY score %@ LIMIT :limit
DESC
:mailboxTypes
:mailboxIds
:minDate
SELECT id FROM mailIntelligence_saliency WHERE messageId = :messageId
UPDATE mailIntelligence_saliency SET messageId = :messageId, mailboxId = :mailboxId, score = :score, isSalient = :isSalient, isGteSalient = :isGteSalient, isCounted = :isCounted WHERE id = :id
:score
:isSalient
:isGteSalient
:isCounted
INSERT INTO mailIntelligence_saliency (creationTimestamp, messageId, mailboxId, score, isSalient, isGteSalient, isCounted) VALUES (:creationTimestamp, :messageId, :mailboxId, :score, :isSalient, :isGteSalient, :isCounted)
UPDATE mailIntelligence_saliency SET creationTimestamp = :creationTimestamp WHERE id = :id
DELETE FROM mailIntelligence_saliency
UPDATE mailIntelligence_saliency SET isSalient=1, score=1
UPDATE mailIntelligence_saliency SET isSalient=0, score=0
SELECT stagedLog, isLogged FROM mailIntelligence_saliency WHERE messageId = :messageId
stagedLog
isLogged
UPDATE mailIntelligence_saliency SET stagedLog=:stagedLog WHERE messageId = :messageId
:stagedLog
UPDATE mailIntelligence_saliency SET isLogged = TRUE, stagedLog = NULL WHERE messageId = :messageId
SuggestedContactDetailShown
activeTrialMetadata
activeAggregatedAccuracyLogForThePastFourWeeks
activeAggregatedAccuracyLogSinceModelInitialization
backgroundAggregatedAccuracyLogForThePastFourWeeks
backgroundAggregatedAccuracyLogSinceModelInitialization
SuggestedContactDetailUsed
UnknownShown
kMDItemEmailAddresses
kMDItemRecipientEmailAddresses
kMDItemAuthorEmailAddresses
kMDItemInstantMessageAddresses
kMDItemRecipientAddresses
kMDItemAuthorAddresses
kMDItemPhoneNumbers
 (%@ == "*%@*"cwdt) 
 ( %@ ) 
 || 
$time.this_year(-1)
$time.iso(%@)
$time.today(1)
 (kMDItemContentType == '%@') 
%@ %@ InRange(kMDItemContentCreationDate,%@,%@) %@ %@
PerfXPCLatency
method
SGMSuggestionsFromMessage
customResponsesAfterPruning
SELECT uniqueIdentifier FROM mailIntelligence_spotlightMapping WHERE messageId = :messageId
<html.*?>
<html>
malloc failed
blockquote
strong
table
href
mailto:
http://
_link_
head
script
style
span
header
hgroup
article
details
fieldset
figcaption
footer
form
noscript
section
summary
%i. 
reservedTicket
http://schema.org/Seat
seat
ticketedSeat
seatRow
seatSection
seatNumber
seatingType
airplaneSeat
airplaneSeatClass
DDMATCH
void appendStringToBuf(char **, const char *, NSString *__strong, BOOL)
SGAggregateLogging+PET.m
Logging string too long
SGMessageKey.m
serialized
Invalid serialization
Unknown entity type: %lu
<SGMessageKey source:%@ uniqueIdentifier:%@>
@16@?0@"SGDataDetectorMatch"8
SGDelivery_ctEmlSub_%lu
SGDelivery_ctEmlBod_%lu
SGDelivery_ctTxtMsg_%lu
@24@?0@"NSSet"8@"SGPipelineEnrichment"16
SGDelivery_pr_%@
SGDelivery_ctNumUniq_%lu
application-identifier
<SGTextMessageKey source=%@ uniqueIdentifier=%@>
SGDSuggestManagerErrorDomain
<SGRealtimeSuggestionsTuple c:%tu e:%tu r:%tu d:%tu i:%tu>
@"EKEventStore"8@?0
v16@?0@?<v@?@"EKEventStore">8
@"_PASLock"8@?0
com.apple.MailCompositionService
com.apple.MobileAddressBook.ContactsViewService
com.apple.MobileAddressBook.ContactViewViewService
com.apple.mobilesms.compose
FaceTime
com.apple.FaceTime
InCallService
com.apple.telephonyutilities.callservicesd
MobilePhone
SGDSuggestManager-purgeDeletionDropBox
@"SGDPurgeDeletionBox"8@?0
v16@?0@"SGDPurgeDeletionBox"8
My phone is 515-555-5555. My address is 1234 Hey Street.
htmlBody
from
Warm Up <warm@up.com>
subject
Warm up! Awaken!
date
<hey@example.com>
sourceId
warmUpSuggestions
contact
completion
contactIdentifier
contactIdentifiers
emailAddress
none
Unexpected number of matches
v16@?0@"SGXPCResponse1"8
cnContactMatchesForRecordIds
@"NSArray"16@?0@"SGRecordId"8
query
prefix
v16@?0Q8
message
Couldn't find event with that record id
storageReminder.recordId
@"SGEntity"16@?0@"SGEntity"8
com.apple.suggestions.SGEKCalendarWrite
foundEvent.suggestionInfo.opaqueKey
@"SGRealtimeEventResponse"16@?0@"SGEntity"8
@"_PASTuple2"16@?0@"SGRealtimeEventResponse"8
en_US_POSIX
yyyy-MM-dd HH:mm:ss
-[SGDSuggestManager realtimeContactsFromEntity:enrichments:sourceTextMessage:store:]_block_invoke
SGDSuggestManager.m
enrichment.duplicateKey.parentKey
@"SGStorageContact"16@?0@"SGContactEntity"8
@"SGContact"16@?0@"SGEntity"8
B16@?0@"SGEmailAddress"8
@"SGRealtimeContact"16@?0@"SGContact"8
q24@?0@"SGContactMatch"8@"SGContactMatch"16
socialProfile
messagesToRefreshWithCompletion
@"SGMailMessageKey"16@?0@"SGEmailKey"8
updateMessages
@"SGEmailKey"16@?0@"SGMailMessageKey"8
reportMessagesFound
fullDownloadRequestBatch
resolveFullDownloadRequests
uniqueId
INGetReservationDetailsIntent
SGSuggestedEventLaunchInfo intent must have an associated userActivity
SGSuggestedEventLaunchInfo object must have either intent or sourceURL to open
confirm
v16@?0@"SGLabeledObject"8
reject
message-id
SGSuggestManager-addInteractions
com.apple.
0123456789@
processReservationInteractions
deleteSpotlightReferencesWithBundleIdentifier
isEventCandidateForURL
suggestionsFromURL
-[SGDSuggestManager geocodeEnrichmentsInPipelineEntity:withCompletion:]_block_invoke
@"SGRealtimeEvent"16@?0@"SGPipelineEnrichment"8
com.apple.suggestions.suggestManagerKeepDirty
hits
misses
v20@?0B8Q12
notFromSuggestions
x-apple-eventkit:///SuggestedEventInfo/
uniqueKey
com.apple.suggestd.event-metrics-queue
Maybe: %@
Show in %@
@"SGSimpleMailMessage"8@?0
v40@?0@"NSError"8@"NSArray"16@"NSArray"24@"NSArray"32
q24@?0@"SGRealtimeEvent"8@"SGRealtimeEvent"16
com.apple.suggestions.internal.messages.processed.
SGRecordId not valid (didn't find entity)
Unable to find localizedAppName
com.apple.CoreSuggestionsInternals.SGDSuggestManager
v24@?0@"SGDPurgeDeletionBox"8^B16
v24@?0@"NSString"8@"_PASDomainSelection"16
v24@?0@"NSString"8@"NSSet"16
htmlParserNonNull != nil
SGSuggestManager-consumeInteractionWithContext
An error occurred while formatting the string.
AppCanShowSiriSuggestionsBlacklist
com.apple.suggestions
EMAIL_MAPPING
LINK_MAPPING
-[SGEntityMappingTransformer transform:]
SGEntityMappingTransformer.m
[input isKindOfClass:[NSString class]]
mailto
com.apple.suggestions.ml.datadetector
salientPredictedAsSalient
salientPredictedAsNeutral
salientPredictedAsIgnorable
neutralPredictedAsSalient
neutralPredictedAsNeutral
neutralPredictedAsIgnorable
ignorablePredictedAsSalient
ignorablePredictedAsNeutral
ignorablePredictedAsIgnorable
is_sender_name
is_sender_email
is_sender_domain
is_recipient_name
is_recipient_email
is_present_in_subject
StructuredEventInputMapping
StructuredEventOutputMapping
SupportedProviders
extractionSenders
shadowSenders
mlDefaultExtractionSenders
schemaOrgSenders
StructuredEventEngineConfig
sectionLabelTokenMergeDistance
defaultLabelTokenMergeDistance
addressComponentThreshold
stripRepeatedContentInSections
Structured Event model inference
%@.%@.%@
SG_TARGET_EMAIL
SG_FEATURE_PHONENUMBER
SG_FEATURE_EMAIL
SG_FEATURE_ADDRESS
SG_FEATURE_DATE
SG_FEATURE_LINK
SG_FEATURE_FULLNAME
SG_FEATURE_FIRSTNAME
SG_FEATURE_LASTNAME
SG_POSSESSIVE
SG_FEATURE_NUMBER
SG_FEATURE_SYMBOL
SignificantEmailAddressForIMessage
documentSource
highPriority
receivedOnBattery
harvestedOnBattery
harvestSource
otherFirstParty
otherThirdParty
Safari
News
Mail
Messages
Notes
Reminders
SGM2HarvestSourceInMemory
SGM2HarvestSourceRealtime
SGM2HarvestSourceRealtimeNoBudget
SGM2HarvestSourceOnDiskOverflow
SGM2HarvestSourceOnDiskNoBudget
SGM2HarvestSourceOnDiskTimeout
SGM2HarvestSourceOnDiskClosed
SGM2HarvestSourceOnDiskLegacy
SGM2HarvestSourceProactiveHarvesting
SGRe2PrefilterTree.m
data.length > 7*sizeof(uint32_t)
(const uint8_t *)(_rpns) <= (const uint8_t *)end
(const uint8_t *)(_rpns) <= (const uint8_t *)(_h1)
(const uint8_t *)(_h1) <= (const uint8_t *)(_h2)
(const uint8_t *)(_h2) <= (const uint8_t *)(_h3)
(const uint8_t *)(_h1) <= (const uint8_t *)end
(const uint8_t *)(_h2) <= (const uint8_t *)end
(const uint8_t *)(_h3) <= (const uint8_t *)end
(const uint8_t *)(_h3) <= (const uint8_t *)(_s1)
(const uint8_t *)(_s1) <= (const uint8_t *)(_s2)
(const uint8_t *)(_s2) <= (const uint8_t *)(_s3)
(const uint8_t *)(_s1) <= (const uint8_t *)end
(const uint8_t *)(_s2) <= (const uint8_t *)end
(const uint8_t *)(_s3) <= (const uint8_t *)end
_h1 + _n1 + 1 == _h2
_h2 + _n2 + 1 == _h3
(const void *)(_h3 + _n3 + 0) == (const void *)_s1
com_apple_suggestions_targetPlugins
com.apple.suggestd.ma-metadata-download
com.apple.suggestd.trim
com.apple.suggestd.vacuum
com.apple.suggestd.identityanalysis
com.apple.suggestd.sendrtc
v20@?0B8@"NSError"12
com.apple.suggestd.cd-cache-rebuild
com.apple.suggestd.process-pending-geocodes
com.apple.suggestions.geocode-write
-[SGDManagerForCTS _performProcessPendingGeocodesActivity:]_block_invoke_2
SGDManagerForCTS.m
[nextGeocode.timeRange isValidAllDayRange]
v16@?0@"SGStorageEvent"8
com.apple.suggestd.process-pending-verification
com.apple.suggestions.verification-write
Unexpected failure of CTS deferral
facetime.apple.com/join
offeredCount
acceptedCount
bundleIdentifier
urlType
com.apple.proactive.fia.url
item
processSearchableItem-plugins
backgroundDissectAndWrite
backgroundDissect
@"NSArray"16@?0@"<NSFastEnumeration>"8
@"NSMutableDictionary"16@?0@"<NSFastEnumeration>"8
@"NSMutableArray"16@?0@"<NSFastEnumeration>"8
i16@?0@8
reservationId
B24@?0@8@16
@"NSString"16@?0@"SGContactDetail"8
SGDeduper.m
postal address details should be filtered out
@"NSArray"16@?0@"SGContactDetail"8
@"NSNumber"16@?0@"SGContactDetail"8
Abu Dhabi
Asia/Muscat
Adelaide
Australia/Adelaide
Afghanistan
Asia/Kabul
Alaska
America/Anchorage
Alaskan
Aleutian
America/Adak
Almaty
Asia/Almaty
Altai
Asia/Barnaul
Amsterdam
Europe/Berlin
Arab
Asia/Riyadh
Arabian
Arabic
Asia/Baghdad
Argentina
America/Argentina/Buenos_Aires
Arizona
America/Phoenix
Astana
Asia/Dhaka
Astrakhan
Europe/Astrakhan
Athens
Europe/Athens
Atlantic
America/Halifax
Auckland
Pacific/Auckland
AUS Central
Australia/Darwin
Aus Central W.
Australia/Eucla
AUS Eastern
Australia/Sydney
Azerbaijan
Asia/Baku
Azores
Atlantic/Azores
Baghdad
Bahia
America/Bahia
Baku
Bangkok
Asia/Bangkok
Bangladesh
Beijing
Asia/Shanghai
Belarus
Europe/Minsk
Belgrade
Europe/Prague
Bogota
America/Bogota
Bougainville
Pacific/Bougainville
Brasilia
America/Sao_Paulo
Brisbane
Australia/Brisbane
Brussels
Europe/Paris
Bucharest
Europe/Bucharest
Buenos Aires
Cairo
Africa/Cairo
Canberra
Cape Verde
Atlantic/Cape_Verde
Cape Verde Is.
Cape Verde Islands
Canada Central
America/Regina
Caracas
America/Caracas
Casablanca
Africa/Casablanca
Caucasus
Asia/Yerevan
Cen. Australia
Central
America/Chicago
Central America
America/Guatemala
Central Asia
Central Brazilian
America/Manaus
Central Europe
Central European
Europe/Belgrade
Central Pacific
Pacific/Guadalcanal
Central Standard Time (Mexico)
America/Mexico_City
Chatham Islands
Pacific/Chatham
Chennai
Asia/Kolkata
Chihuahua
America/Chihuahua
China
Cuba
America/Havana
Darwin
Dateline
Etc/GMT+12
E. Africa
Africa/Nairobi
E. Australia
E. Europe
E. South America
East Africa
Easter Island
Pacific/Easter
Eastern
America/New_York
Eastern Standard Time (Mexico)
America/Cancun
Egypt
Ekaterinburg
Asia/Yekaterinburg
Eniwetok
Pacific/Kwajalein
Fiji
Pacific/Fiji
Fiji Islands
Europe/Helsinki
Georgian Standard Time
Asia/Tbilisi
GMT Standard Time
Europe/London
Greenland
America/Godthab
Greenwich
Atlantic/Reykjavik
Greenwich Mean Time
Greenwich Standard Time
Guadalajara
Guam
Pacific/Guam
Haiti
America/Port-au-Prince
Harare
Africa/Harare
Hawaii
Pacific/Honolulu
Hawaiian
Helsinki
Hobart
Australia/Hobart
India
Indiana (East)
America/Indiana/Indianapolis
Iran
Asia/Tehran
Irkutsk
Asia/Irkutsk
Islamabad
Asia/Karachi
Israel
Asia/Jerusalem
Jerusalem
Jordan
Asia/Amman
Kabul
Kaliningrad
Europe/Kaliningrad
Kathmandu
Asia/Kathmandu
Kolkata
Asia/Calcutta
Korea
Asia/Seoul
Krasnoyarsk
Asia/Krasnoyarsk
Kuala Lumpur
Asia/Singapore
Kuwait
Libya
Africa/Tripoli
Line Islands
Pacific/Kiritimati
Lord Howe
Australia/Lord_Howe
Magadan
Asia/Magadan
Marquesas
Pacific/Marquesas
Mauritius
Indian/Mauritius
Mexico
Mexico City
Mexico Standard Time
Mexico Standard Time 2
Mid-Atlantic
Atlantic/South_Georgia
Middle East
Asia/Beirut
Midway Island
Pacific/Midway
Montevideo
America/Montevideo
Morocco
Moscow
Europe/Moscow
Mountain
America/Denver
Mountain Standard Time (Mexico)
Myanmar
Asia/Rangoon
N. Central Asia
Asia/Novosibirsk
Nairobi
Namibia
Africa/Windhoek
Nepal Standard Time
New Zealand
Norfolk
Pacific/Norfolk
Newfoundland
America/St_Johns
Newfoundland and Labrador
North Asia East
Asia/Ulaanbaatar
North Asia
North Korea
Asia/Pyongyang
Nuku'alofa
Pacific/Tongatapu
Osaka
Asia/Tokyo
Pacific
America/Los_Angeles
Pacific SA
America/Santiago
Pacific Standard Time (Mexico)
America/Tijuana
Pacific Time
Pakistan
Paraguay
America/Asuncion
Paris
Perth
Australia/Perth
Prague
Prague Bratislava
Rangoon
Romance
Russia Time Zone 10
Asia/Srednekolymsk
Russia Time Zone 11
Asia/Kamchatka
Russia Time Zone 3
Europe/Samara
Russian
SA Eastern
America/Buenos_Aires
SA Pacific
SA Western
Santiago
Sarajevo
Europe/Sarajevo
Saskatchewan
America/Edmonton
SE Asia
Seoul
Saint Pierre
America/Miquelon
Sakhalin
Asia/Sakhalin
Samoa
Pacific/Apia
Saudi Arabia
Singapore
South Africa
Sri Jayawardenepura
Asia/Colombo
Sri Lanka
Syria
Asia/Damascus
Sydney
Taipei
Asia/Taipei
Tasmania
Tehran
Tocantins
America/Araguaina
Tokyo
Tomsk
Asia/Tomsk
Tonga
Transbaikal
Asia/Chita
Turkey
Europe/Istanbul
Turks And Caicos
America/Grand_Turk
Universal Coordinated Time
US Eastern
America/Indianapolis
US Mountain
Ulaanbaatar
Venezuela
Vladivostok
Asia/Vladivostok
W. Australia
W. Central Africa
Africa/Luanda
W. Europe
Warsaw
Europe/Warsaw
West Asia
West Bank
Asia/Hebron
West Central Africa
West Pacific
Western Brazilian
America/Rio_Branco
Yakutsk
Asia/Yakutsk
Yangon Rangoon
@"NSTimeZone"16@?0@"NSString"8
 Standard Time
 Daylight Time
 Summer Time
 Time
SGCalendarAttachmentDissector.m
hourString
Etc/GMT
@"NSString"16@?0@"ICSUserAddress"8
%@;%@
B16@?0@"SGMailAttachment"8
Google
Gmail
Yahoo
Outook
@icloud.com
@me.com
@mac.com
@gmail.com
@googlemail.com
@google.com
@yahoo.com
@yahoo.co.uk
@ymail.com
@sbcglobal.net
@rocketmail.com
@outlook.com
@hotmail.com
@hotmail.co.uk
@rocketmaill.com
BEGIN:
END:
END:VCALENDAR
VTIMEZONE
VEVENT
VCALENDAR
UID:
DTSTART
DTEND
EXDATE
RDATE
RECURRENCE-ID
TZID=
;TZID=
END:VCALENDAR
floating
GREGORIAN
ATTACH
<SGStorageContact: %@ - %lu profile(s)>
SGStorageContact.m
Merging with a contact that isn't mergable
@"NSArray"16@?0Q8
@"SGPhoneNumber"16@?0@"SGContactDetail"8
@"SGPostalAddress"16@?0@"SGContactDetail"8
Street
City
State
Country
@"SGEmailAddress"16@?0@"SGContactDetail"8
@"SGSocialProfile"16@?0@"SGContactDetail"8
Cannot use SearchOnePass for unanchored matches.
basic_string
CREATE TABLE snippets (id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER,title TEXT,content TEXT,contentRangeOfInterest TEXT)
CREATE UNIQUE INDEX entityIdIdx ON snippets(entityId)
migration_MoveContentToSnippets
CREATE TABLE emailSnippets (id INTEGER PRIMARY KEY AUTOINCREMENT,emailId INTEGER,title TEXT,content TEXT)
CREATE UNIQUE INDEX ix_emailSnippets_emailId ON emailSnippets(emailId)
migration_separateMessageSnippets
CREATE TABLE messages (id integer PRIMARY KEY AUTOINCREMENT NOT NULL,uuid char(128) NOT NULL,conversationId char(128) NOT NULL,content text(128) NOT NULL,creationTimestamp REAL NOT NULL,isSent integer(1) NOT NULL)
CREATE INDEX ix_messages_conversationId ON messages (conversationId ASC)
CREATE UNIQUE INDEX ix_messages_id ON messages (id ASC)
CREATE UNIQUE INDEX ix_messages_uuid ON messages (uuid ASC)
CREATE TABLE userQueries (id integer PRIMARY KEY AUTOINCREMENT NOT NULL,conversationId char(128) NOT NULL,language char(5) NOT NULL,query text NOT NULL,engaged integer(1) NOT NULL,creationTimestamp real NOT NULL)
CREATE INDEX ix_userQueries_language ON userQueries (language ASC)
DROP TABLE IF EXISTS userQueries
DROP TABLE IF EXISTS messages
DELETE FROM sqlite_sequence
v16@?0@"SGDCloudKitSync"8
com.apple.corespotlight.receiver.suggestions
NSUA
CSSI
SGDPluginManager.processInteraction
plugin-processInteraction
plugin-purgeSpotlightReferences
plugin-deleteSpotlightReferences
contactConfirmations
contactRejections
contactDetailConfirmations
contactDetailRejections
enqueued_items
dissected_items
statsCounters
SELECT value FROM statsCounters WHERE key = :key
behavior.scalar.confirmPercent
contacts.contact
contacts.detail
Compiler::Copy called!
kRegexpConcat: child_frags is NULL
kRegexpAlternate child_frags is NULL
kRegexpStar child_frags is NULL
kRegexpPlus child_frags is NULL
kRegexpQuest child_frags is NULL
No ranges in char class
kRegexpCapture child_frags is NULL
Missing case in Compiler: 
hello, world
Couldn't compile regular expression, skipping: 
 due to error 
%@-timer
B24@?0@"_PASTuple2"8@"NSDictionary"16
@16@?0@"_PASTuple2"8
B24@?0@"SGStorageReminder"8@"NSDictionary"16
v24@?0@"REMReminder"8^B16
http://schema.org/Place
lang
timeDifferenceFromReceptionToSaliencyInferenceInSeconds
senderConnectionScore
mailAttachmentHistogram
nbCharactersInMailSubject
nbTokensInMailSubject
previousInteractionOnConversationInMinutes
previousInteractionFromUserOnConversationInMinutes
active
background
NAME_MAPPINGS
TOKEN_TO_IGNORE
MINIMUM_CONFIDENCE
FIRST
LAST
FULL
UNDEFINED
POSSESSIVE
nameMappings[NameMappingFull]
nameMappings[NameMappingFirst]
nameMappings[NameMappingLast]
nameMappings[NameMappingUndefined]
nameMappings[NameMappingPossessive]
-[SGNameMappingTransformer transform:]
SGNameMappingTransformer.m
Shouldn't be NameMappingPossessive
feature
v24@?0@"NSNumber"8^B16
firstnames
trie
_PASCFBurstTrie *firstnames(void)_block_invoke
path
Could not load firstnames trie: %@
lastnames
_PASCFBurstTrie *lastnames(void)_block_invoke
Could not load lastnames trie: %@
%@__%@
RE2::Set::Compile multiple times
Error simplifying during Compile.
alt -> %d | %d
altmatch -> %d | %d
byte%s [%02x-%02x] -> %d
capture %d -> %d
emptywidth %#x -> %d
match! %d
nop -> %d
fail
%d. %s
MyName/F
NameRequest/F
SGSelfIdentification.m
conversation.count > 0
@"NSString"36@?0{SGMSIPatternType_=Q}8@"NSString"16@"NSString"24B32
v52@?0@"NSString"8{_NSRange=QQ}16@"SGRe2"32B40^B44
@"SGTextMessageItem"16@?0@8
sent:
strong_phrase
SGSearchableItemIdTriple.m
@"NSString"8@?0
SGPipelineEntity.m
handle
identifier.length > 0
bundleIdentifier.length > 0
interactionIdentifier.length > 0
SGPipelineEntity.flush
a preferred enrichment must have a duplicateKey
B24@?0@"SGPipelineEnrichment"8@"NSDictionary"16
Contacts can't have associated detected addresses.
Contacts can't have associated detected phone numbers.
Contacts can't have associated detected birthdays.
Contacts can't have associated detected email addresses.
Contacts can't have associated detected instant message addresses.
Regexp not destroyed.
Bad reference count 
/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/re2/re2/re2_regexp.h
Cannot AllocSub 
Unexpected op in Regexp::Equal: 
no error
unexpected error
invalid escape sequence
invalid character class
invalid character class range
missing ]
missing )
trailing \
no argument for repetition operator
invalid repetition size
bad repetition operator
invalid perl operator
invalid UTF-8
invalid named capture group
NumCapturesWalker::ShortVisit called
NamedCapturesWalker::ShortVisit called
CaptureNamesWalker::ShortVisit called
SGEntity.m
entityKey can't be nil.
entityType must not be SGEntityTypeUnknown
entityType must not be SGEntityTypeDetectedEmailAddress
description
<SGEntity:%@,sourceKey=%@,title=%@>
from_messages
Unknown encoding 
Error parsing '
Error compiling '
pattern too large - compile failed
Error reverse compiling '
pattern too large - reverse compile failed
\x00
Invalid RE2: 
RE2: invalid startpos, endpos pair.
Match 
 DFA failed.
 used DFA - no match.
 used DFA - match
 reverse DFA failed.
 DFA inconsistency.
DFA inconsistency
 used reverse DFA.
 skipping DFA for OnePass.
 skipping DFA for BitState.
 using OnePass.
SearchOnePass inconsistency
 using BitState.
SearchBitState inconsistency
 using NFA.
SearchNFA inconsistency
eventsWithoutTimestamp
rejectedEvents
reminders
rejectedReminders
newContacts
storageDetails
dontUpdate
confirmedEventFields
confirmedEventWithoutTimestampFields
resetInfo
SGSalt
SGSaltManatee
v16@?0@"SGHistorySharedData"8
SGSuggestHistory migration: %@
SUCCESS
FAILURE
SGSuggestHistory-Migration-%@
SGSuggestHistory.m
[migrationToken lengthOfBytesUsingEncoding:NSUTF8StringEncoding] <= 64
guardedData->isMigrating
succeeded
failed
Suggest history with %d confirmed event hashes, %d confirmed event without timestamp hashes, %d rejected event hashes, %d confirmed reminder hashes, %d rejected reminder hashes, %d confirmed event field hashes, %d confirmed event without timestamp field hashes, %d contact hashes, %d storage detail hashes, and %d no-update hashes.
![hashes containsObject:[self _canaryHash]]
Suggest history sets must not be nil
canary_%@
@"NSData"16@?0@"NSData"8
@"NSData"16@?0@"NSString"8
opaqueKey
%.2f
new data
suggestHistoryObserver
SGKeyValueCacheManager.m
cacheType < SGKeyValueCacheTypeCount
phone-to-name.kvcache
email-to-name.kvcache
SGWords.m
word
Latin-ASCII; Lower
\%03o
<FIAPHistoricalDataRequest id:%llu p:%@ s:%@ e:%@ plugin:%@>
reply-to
conversation-id
list-id
EEE',' d MMM y HH':'mm':'ss ZZZ
EEE',' d MMM y HH':'mm':'ss zzz
EEE MMM d HH':'mm':'ss zzz y
d MMM y HH':'mm':'ss ZZZ
d MMM y HH':'mm':'ss zzz
EEE',' d MMM y HH':'mm ZZZ
EEE',' d MMM y HH':'mm zzz
d MMM y HH':'mm ZZZ
d MMM y HH':'mm zzz
@"NSDateFormatter"16@?0@"NSString"8
(?:=([0-9A-F]{2})|=[ \t]*(?:\r?\n|$)|[ \t]+(?:\r?\n|$)|$)
SGSimpleMailMessage+RFC822Parsing.m
error creating quotedPrintableRegex: %@
(?:^(\S+?):(?:\r?\n[ \t])?[ \t]*(\S+(?:.*\r?\n[ \t].*\S+|.*\S)*|).*$|(?:\r?\n){2})
error creating headerRegex: %@
fieldValueRange.location != NSNotFound
[ \t]*;[ \t]*([^ \t()<>@,;:\\"\/\[\]?.=]+)=(?:([^ \t()<>@,;:\\"\/\[\]?.=]+)|"((?:[^"]|\\")*)")[ \t]*(?:(?=;)|$)
error creating parameterRegex: %@
<blockquote type=cite>
</blockquote>
&amp;
&lt;
 &nbsp;
<span class=Apple-tab-span style=white-space:pre>
</span>
<br>
content-type
text/plain
charset
us-ascii
boundary
content-disposition
inline
attachment
multipart/
multipart/alternative
multipart/related
start
multipart/signed
content-id
text/html
format
flowed
delsp
content-transfer-encoding
binary
base64
x-uuencode
quoted-printable
attachmentCallback
filename
<SGDataDetectorMatch/%i %i-%i
matchType
range_location
range_length
labelRange_location
labelRange_length
valueRange_location
valueRange_length
labelString
valueString
parsecDomain
parsecWikidataQid
allDay
inferredDate
approximateTime
partialDate
postalAddressComponents
detectedDate
detectedTimeZone
detectedEndDate
detectedEndTimeZone
PartialDate
RelativeDayOfWeek
DDScannerRef getScannerRefAndAcquire(void)
SGDataDetectorMatch.m
Could not get data detector from pool
dd-MM-yyyy
dd-MM
CFRange "%ld:%ld" cannot be converted to NSRange.
_PASUtilityMacros
void releaseScannerRef(DDScannerRef)
Could not return scanner %@ to pool
NonQuotedLinePart
Email
NextLineQuoted
UpTo8KB
8KBTo32KB
32KBTo128KB
128KBTo512KB
512KBTo2MB
Over2MB
UpTo8KB: %tu
8KBTo32KB: %tu
32KBTo128KB: %tu
128KBTo512KB: %tu
512KBTo2MB: %tu
Over2MB: %tu
InhumanEmailPatterns/F
InhumanEmailDomains
InhumanEmailTokens
HumanMailingListHeaders
InhumanEmailExceptions
InhumanName/F
InhumanNameComponents
InhumanBodyLiterals
InhumanBodyRegexp/F
SGInhumans.m
failed to get raw value for InhumanNameComponents
failed to look up raw value for rawValueKeyInhumanEmailDomains
failed to look up raw value for rawValueKeyInhumanEmailTokens
NUL-terminator overwritten. This should be impossible.
computeCustomTimeRange
safeguardingQuotedRegionsRegex
lastSGMIFollowUpStatsAndSettingReportingDate
appleMailMessageId
v32@?0@"NSRegularExpression"8@"NSString"16^B24
v32@?0@"NSRegularExpression"8@"NSNumber"16^B24
%@%@%@
%@-%@
v32@?0@"NSNumber"8@"SGMIWarningsDetectionRegex"16^B24
startOffset
endOffset
SGMIFollowUpManager-processing
SGMIFollowUpManager-timeout
positive
negative
no engagement
enabled
disabled
com.apple.proactive.mailIntelligence.followUpSetting
mlmodel
mlmodelc
IS_TIME_DISTRIBUTED
NONE
ReminderModel
structuredEventGazetteer
StructuredEventModel
com.apple.CoreSuggestions.SemlPlugin
plplist
SGExtractionModel.m
relPath
polarity_true
%@.%@
mapping
%@_%@
SGExtractionModels
SGIStore error
Can not add interdict between non-disjoint sets %@ and %@
@"NSString"16@?0@"SGRecordId"8
%lld
INSERT INTO identityInterdict (a, b) VALUES (?, ?)
SELECT a, b FROM identityInterdict
@"SGLabeledValue"16@?0@"SGContactDetail"8
SGSqlEntityStore+Identity.m
rebuildIdentityTables
DELETE FROM identityPerson
DELETE FROM identityLink
DELETE FROM identityPhones
DELETE FROM identitySocialProfileIdentifiers
WHERE e.entityType = :pseudo OR e.entityType = :unrec
Unexpected entity type: %lld
v16@?0@"NSString<SGNormalizedName>"8
SELECT fullname, recordId, nameSketches, phones, socialProfileIdentifiers, email FROM identityPerson WHERE (surname IN _pas_nsarray(:middleNameAndSurname) OR middlename = :surname) AND isSent = :isSent LIMIT :limit
:middleNameAndSurname
:surname
:isSent
fullname
recordId
nameSketches
phones
socialProfileIdentifiers
SELECT recordId FROM identityPerson WHERE email=? AND fullname=? LIMIT %d
SELECT recordId FROM identityPerson WHERE email=? AND fullname IS NULL LIMIT %d
Expected nonzero number of phones
fullname=:fullname
(surname = '' OR surname IS NULL) AND fullname IS NULL
SELECT recordId FROM identityPerson   WHERE %@ AND recordId IN (       SELECT recordId from identityPhones           WHERE phone IN _pas_nsarray(:phones)   )   LIMIT :limit
:fullname
@16@?0@"SGLabeledValue"8
:phones
identityPerson
socialProfiles
Expected nonzero number of socialProfiles
SELECT recordId FROM identityPerson   WHERE %@ AND recordId IN (       SELECT recordId from identitySocialProfileIdentifiers           WHERE socialProfileIdentifier IN _pas_nsarray(:socialProfileIdentifiers)   )   LIMIT :limit
:socialProfileIdentifiers
SELECT 1 FROM identityLink WHERE recordId1=? AND recordId2=? AND type=?
INSERT OR IGNORE INTO identityLink (recordId1, recordId2, type, strength) VALUES (?,?,?,?)
SELECT phones, socialProfileIdentifiers FROM identityPerson WHERE recordId = :recordId
:recordId
DELETE FROM identityPhones WHERE phone IN _pas_nsarray(:phones) AND recordId=:recordId
DELETE FROM identitySocialProfileIdentifiers WHERE socialProfileIdentifier IN _pas_nsarray(:socialProfileIdentifiers) AND recordId=:recordId
DELETE FROM identityPerson WHERE recordId = ?
DELETE FROM identityLink WHERE recordId1 = ?1 OR recordId2 = ?1
SELECT recordId1, recordId2, type, strength FROM identityLink
SELECT recordId FROM identityPerson WHERE curated
graph
nameToVertex
disjointSets
SELECT recordId, email FROM identityPerson WHERE (surname = '' OR surname IS NULL) AND fullname IS NULL AND LENGTH(email) > 0
Vertex not found in lookup table
SELECT recordId FROM identityPerson WHERE email = :email AND fullname IS NOT NULL
OOM while adding edge to graph
SELECT recordId, phones FROM identityPerson WHERE (surname = '' OR surname IS NULL) AND fullname IS NULL AND LENGTH(phones) > 0
SELECT recordId FROM identityPerson    WHERE fullname IS NOT NULL        AND recordId IN (            SELECT recordId from identityPhones                WHERE phone IN _pas_nsarray(:phones)        )
SELECT recordId, socialProfileIdentifiers FROM identityPerson WHERE (surname = '' OR surname IS NULL) AND fullname IS NULL AND LENGTH(socialProfileIdentifiers) > 0
SELECT recordId FROM identityPerson    WHERE fullname IS NOT NULL        AND recordId IN (            SELECT recordId from identitySocialProfileIdentifiers                WHERE socialProfileIdentifier IN _pas_nsarray(:socialProfileIdentifiers)        )
graph error
SGIStore.h, line %i
SELECT recordId1, recordId2, strength FROM identityLink
SELECT recordId FROM IdentityPerson
v16@?0r^{_vertex_t=^v^^{_edge_t}II}8
computeBlobs
SELECT (CASE WHEN e.masterEntityId > 0 THEN e.masterEntityId ELSE e.id END), i.nameSketches FROM entity AS e INNER JOIN identityPerson AS i ON e.id = i.recordId LIMIT :limit
@"NSString<SGNormalizedPhoneNumber>"16@?0@"CNLabeledValue"8
@"NSNumber"16@?0@"CNContact"8
@"CNContact"24@?0Q8@"NSArray"16
@"NSNumber"16@?0@"SGRecordId"8
SELECT recordId, fullname, phones, email, socialProfileIdentifiers FROM identityPerson WHERE recordId IN _pas_nsarray(:ids)
v24@?0@"CNContact"8@"SGRecordId"16
DELETE FROM identityBlobAnalysisJobs
INSERT INTO identityBlobAnalysisJobs (mergeBlob) VALUES (:mergeBlob)
:mergeBlob
SELECT id, mergeBlob FROM identityBlobAnalysisJobs
DELETE FROM identityBlobAnalysisJobs WHERE id = :blobId
:blobId
SELECT 1 FROM identityBlobAnalysisJobs LIMIT 1
INSERT INTO identityInterdictNext (a, b) VALUES (?, ?)
DROP TABLE identityInterdict
CREATE TABLE identityInterdict (a TEXT NOT NULL, b TEXT NOT NULL)
SELECT a, b FROM identityInterdictNext
DELETE FROM identityInterdictNext
INSERT OR IGNORE INTO identityPerson (recordId, surname, middlename, fullname, nameSketches, phones, socialProfileIdentifiers, email, curated, isSent) VALUES (?,?,?,?,?,?,?,?,?,?)
INSERT OR IGNORE INTO identityPhones (phone, recordId) VALUES (?, ?)
INSERT OR IGNORE INTO identitySocialProfileIdentifiers (socialProfileIdentifier, recordId) VALUES (:socialProfileIdentifier, :recordId)
:socialProfileIdentifier
q24@?0@"_PASTuple2"8@"_PASTuple2"16
v16@?0@"SGPatternGlobalData"8
CompiledPatterns.plist
CompiledPatterns.pldat
(nil path)
SGPatterns.m
Could not read pattern plist from %@: %@
nolang
Invalid pattern plist: no nolang locale found! Keys: %@
filesystemPathForAssetDataRelativePath returned nil
Could not load pattern data
Language not found: %@
base
eu-me
w-europe
e-europe
asia
middleeast
v32@?0@"NSString"8@"NSDictionary"16^B24
Non-prefiltered regexp was array: %@
.filt
Data not found for prefiltered regexp: %@
Could not find raw asset value for key %@
SGPatterns-deathTimer
zh-hans
zh-hant
Error loading file %@: %@
(off & 0b11) == 0
off + len <= _fileData.length
in-reply-to
SGSimpleMailMessage.m
[header isKindOfClass:[SGSimpleMailHeaderKeyValue class]]
nonnull property %s *%s was null when decoded
<SGSimpleMailHeaderKeyValue: %@: %@>
inReplyTo
replyTo
hasInhumanHeaders
isPartiallyDownloaded
mailingList
headers
@"NSData"8@?0
_quotedRegionsCached
@email.android.com>
@"NSIndexSet"8@?0
@"NSNumber"8@?0
B16@?0@"SGDataDetectorMatch"8
@"CSPerson"8@?0
%02x
htmlContentData
<SGSimpleMailMessage %@>
 x-sendgrid-eid x-facebook-notify x-amazon-mail-relay-type x-autogenerated x-campaign x-ses-outgoing x-ebay-mailtracker x-mailing-id x-phpbb-origin x-report-abuse x-facebook x-bloggermail x-campaign-id x-feedback-id
list-unsubscribe
precedence
bulk
auto-submitted
x-email-type-id
@"SGSimpleNamedEmailAddress"16@?0@"CSPerson"8
@16@?0@"BMNamedHandle"8
(?,?)
(%d,?)
(%d,%d)
/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/re2/re2/re2_nfa.cc
Bad args: context does not contain text 
Bad args: nsubmatch=
Unexpected opcode in short circuit: 
Unexpected empty-width in short circuit: 
Unhandled 
 in step
CL.loc.vcf
Shared Location.loc.vcf
%@'s Location.loc.vcf
jpeg
heic
photoSharingUEhPVE8K
firstPartyLocTE9DLjFwCg
firstPartyPhoneUEhPTkUuMXAK
firstPartyEmailRU1BSUwuMXAK
firstPartyPostalUE9TVEFMLjFwCg
thirdPartyPhoneUEhPTkUuM3AK
thirdPartyEmailRU1BSUwuMXAK
thirdPartyPostalUE9TVEFMLjFwCg
SGQuickResponsesML.m
=\?(?:[^\s()<>@,;:"\/\[\]?.=]+?)\?(?:[^\s()<>@,;:"\/\[\]?.=]+?)\?(?:[^?\s]+)\?=
NSString+EncodedWord.m
error creating encodedWordRegex: %@
void hashStrings(NSArray<NSString *> *__strong, NSData *__strong, uint8_t *)
SGCrypto.m
strings.count > 0
digest != NULL
strictLowerBound
strictUpperBound
@"NSNumber"16@?0@"SGMISaliencyModelConfigRule"8
true
com.apple.MobileAddressBook
SGLowMemoryContactEnumeration
@"NSString"16@?0@"CSSearchableItem"8
v24@?0^{_LXEntry=}8*16
SGNicknames.m
nicknames
NUMERIC_MAPPING
CHARACTER_MAPPING
-[SGSymbolicMappingTransformer transform:]
SGSymbolicMappingTransformer.m
SG_FEATURE
SG_TARGET
%s%lu
NSString * _Nonnull numberedString(NSString * _Nonnull __strong, NSUInteger)
numberedString
SGFlightData.m
Expected keys to be unique and in ascending order. That constraint was violated by this sequence of keys:
%d: %@
%d: %@
KeyTooShort
The key was too short.
AirportNameNoise.plist
failed to get asset path for AIRPORT_NAME_IDENT.
IataCodeToCity.plplist
failed to get asset path for IATA_CITY_DB_IDENT.
flights
@"SGOffsetDictionary"8@?0
airports
carrierNames
flightsUpdate.dat
airportsUpdate.dat
carrierNamesUpdate.dat
flightCodes.count > 0
airportCodeCandidats_
airportInitScore_
airportBestScore_
airline
flightno
%@ %@ from %@ to %@
void _SGTaggedTypeAssert_impl(Class, void *)
SGTaggedMalloc.m
((uintptr_t)ptr & 0b11) == 0
object_getClass(obj) == tag
NSData *_SGTaggedVMAlloc_impl(Class, size_t, void **)
Could not allocate virtual memory
personFromSenderStats
personFromSenderInDyadicConversationStats
subjectContentStats
personToRecipientsStats
personCCRecipientsStats
domainFromSenderStats
conversationStats
listIdStats
attachmentsStats
subjectCountStatsStats
standardMailRulesStats
mailboxStats
mailboxTypeStats
B16@?0@"LSApplicationRecord"8
LSApplicationRecord+Suggestions.m
HTTP URL should always construct
-[SGBinaryClassificationModel initWithPlist:chunks:context:]
SGBinaryClassificationModel.m
[dict isKindOfClass:[NSDictionary class]]
MODEL_TYPE
MODEL_LOCALE
MODEL_DATA
LOGISTIC
Unknown model type: %@
MODEL_FEATURIZER
MODEL_SOURCE_SESSION_DESCRIPTOR
MODEL_DECISION_THRESHOLD
Unknown type of model class: %@
%@_%@_%@%@Model.chunk
PREDICTION
args:
dataDetectionSignificantPhrasePhoneLogistic
significantPhoneNumber
Logistic
dataDetectionSignificantPhraseEmailLogistic
significantEmailAddress
dataDetectionSignificantPhraseEmailForIMessageLogistic
dataDetectionSignificantPhraseAddressLogistic
significantAddress
dataDetectionSignificantPhraseAddressForIMessageLogistic
selfIdentificationPhraseLogistic
selfId
birthdayTextMessageCongrats
birthdayExtraction
com.apple.suggestions.SGBloomFilter
SGBloomFilter.m
dirPath
.bf-head
.bf-tail
.bf2-head
.bf2-tail
Invalid file extension for Bloom filter chunk: %@
Armenian
Avestan
Balinese
Bamum
Batak
Bengali
Bopomofo
Brahmi
Braille
Buginese
Buhid
Canadian_Aboriginal
Carian
Chakma
Cham
Cherokee
Common
Coptic
Cuneiform
Cypriot
Cyrillic
Deseret
Devanagari
Egyptian_Hieroglyphs
Ethiopic
Georgian
Glagolitic
Gothic
Greek
Gujarati
Gurmukhi
Hangul
Hanunoo
Hebrew
Hiragana
Imperial_Aramaic
Inherited
Inscriptional_Pahlavi
Inscriptional_Parthian
Javanese
Kaithi
Kannada
Katakana
Kayah_Li
Kharoshthi
Khmer
Latin
Lepcha
Limbu
Linear_B
Lisu
Lycian
Lydian
Malayalam
Mandaic
Meetei_Mayek
Meroitic_Cursive
Meroitic_Hieroglyphs
Miao
Mongolian
New_Tai_Lue
Ogham
Ol_Chiki
Old_Italic
Old_Persian
Old_South_Arabian
Old_Turkic
Oriya
Osmanya
Phags_Pa
Phoenician
Rejang
Runic
Samaritan
Saurashtra
Sharada
Shavian
Sinhala
Sora_Sompeng
Sundanese
Syloti_Nagri
Syriac
Tagalog
Tagbanwa
Tai_Le
Tai_Tham
Tai_Viet
Takri
Tamil
Telugu
Thaana
Thai
Tibetan
Tifinagh
Ugaritic
SGTextMessageConversationTracker.m
[result.firstObject isKindOfClass:[SGTextMessageItem class]]
[conversation.firstObject isKindOfClass:[SGTextMessageItem class]]
@24@?0@"SGTextMessageItem"8Q16
_text
[otherItem isKindOfClass:[SGTextMessageItem class]]
@"NSString"16@?0@"SGTextMessageItem"8
significant-pseudo-contacts.bf
SGDatabaseJournalFile.m
Can not overwrite journal file
data.length <= UINT32_MAX
!_dead
v24@?0^v8Q16
<SGDatabaseJournalFile %@>
startDate
endDate
http://schema.org/Ticket
http://schema.org/EventReservation
http://schema.org/MovieShowing
http://schema.org/Movie
movie
http://schema.org/Event
Event
ReminderPreprocessor
ReminderInputMapping
ReminderOutputMapping
ReminderOverrides
config
wordBoundary
v16@?0@"SGReminderExtractionModelGuardedData"8
ReminderDissector model inference
bi_lstm_0_h_in
bi_lstm_0_c_in
bi_lstm_0_h_in_rev
bi_lstm_0_c_in_rev
categoryLog
eventsCount
eventKey
interactionKey
timingProcessing
creationDate
launchCountMessages
launchCountReminders
launchCountCalendar
launchCountMail
launchCountMaps
aggregateSummary
deviceLanguage
rtcLogsSent
remindersCountStats
documentType
locationType
expirationDate
trialExperimentId
trialTreatmentId
trialDeploymentId
trialRolloutId
trialRampId
mobileAssetsVersion
privacyAwareLogging.ser
.old
v16@?0@"SGRTCLoggingGuardedData"8
com.apple.suggestd.interactions-write-queue
rtc-persist
q24@?0@"NSDictionary"8@"NSDictionary"16
loggedExtractions
loggedInteractions
loggedInteractionsSummary
storeAge
unknown
flight
train
boat
hotel
carRental
ticket
food
social
eventCategory
templateName
domain
isAllDay
isCancelled
isFromSync
isSplashScreenAcknowledged
bundleID
@"SGEntityTag"16@?0@"NSString"8
SGDelivery_ctNumSame_%lu
medium
high
outputExceptions
outputInfos
eventDuplicateKey
Suggestions
usageMaps
usageCalendar
localeAssetVersion
event
exception
outputException
suggestd
mail
mailBanner
mailDDLink
messages
messagesBanner
messagesDDLink
calendar
calendarNotification
calendarInbox
calendarEventDetails
calendarCanvas
calendarWidget
calendarWidgetUpNext
calendarZKW
calendarAutocomplete
maps
mapsWidget
TTLNotification
spotlight
calendarCreateEventIntent
remindersNotification
remindersList
remindersQuickType
checkInShortcutApp
checkInShortcutSafari
found
shown
engaged
confirmed
rejected
dismissed
dissected
harvested
filtered
deleted
dkim_failed
dkim_succeeded
dissected_realtime
dissected_background
extraction
interactionSummary
reminderExtraction
reminderInteraction
reminderInteractionSummary
webpage
http://schema.org/FlightReservation
boardingTime
http://schema.org/Airline
iataCode
icaoCode
http://schema.org/Airport
http://schema.org/Flight
flightNumber
departureAirport
departureGate
departureTerminal
arrivalAirport
arrivalGate
arrivalTerminal
Flight
plugin
personHandle
startDateTimestamp
endDateTimestamp
reimportRequests
UPDATE reimportRequests SET queryTimestamp = :time WHERE id = :id
INSERT OR REPLACE INTO reimportItems (reimportRequestId, bundleId, uniqueId) SELECT :rid, :bid, value FROM _pas_nsarray(:chunk)
-[SGSqlEntityStore(ReimportRequests) storeReimportItems:requestId:]_block_invoke_4
SGSqlEntityStore+ReimportRequests.m
requestId <= INT64_MAX
:rid
:chunk
v32@?0@"NSString"8@"NSSet"16^B24
UPDATE reimportRequests SET executionTimestamp = :time WHERE id = :id
UPDATE reimportItems SET seenByReceiverTimestamp = :time WHERE bundleId = :bundleId AND uniqueId IN _pas_nsarray(:uids)
:bundleId
UPDATE reimportItems SET seenByReceiverTimestamp = :time WHERE bundleId = :bundleId AND uniqueId = :uniqueId
:uniqueId
UPDATE reimportItems SET uniqueId = :newValue WHERE bundleId = :bundleId AND uniqueId = :oldValue
:oldValue
:newValue
queryTimestamp IS NULL
queryTimestamp IS NOT NULL AND executionTimestamp IS NULL
SELECT id, plugin, personHandle, startDateTimestamp, endDateTimestamp FROM reimportRequests WHERE %@
SELECT bundleId, uniqueId FROM reimportItems WHERE reimportRequestId = :id AND seenByReceiverTimestamp IS NULL
%@:%@
SELECT 1 FROM reimportItems WHERE bundleId = :bid AND uniqueId = :uid
SELECT 1 FROM reimportItems WHERE bundleId = :bid
DELETE FROM reimportRequests WHERE creationTimestamp < :date
:date
DELETE FROM reimportRequests WHERE executionTimestamp IS NOT NULL AND id NOT IN (     SELECT DISTINCT reimportRequestId FROM reimportItems     WHERE seenByReceiverTimestamp IS NULL )
DELETE FROM reimportItems WHERE reimportRequestId NOT IN (SELECT id FROM reimportRequests)
SELECT creationTimestamp, queryTimestamp, executionTimestamp FROM reimportRequests
reimportRequests_total
reimportRequests_unqueried
reimportRequests_unexecuted
reimportRequests_oldest
reimportRequests_oldestOpen
SELECT seenByReceiverTimestamp FROM reimportItems
reimportItems_total
reimportItems_unseen
SGXPCActivity.m
0 <= activityId && activityId < _SGXPCActivityCount
handler
criteria
activity
com.apple.suggestions.sqlentitystore.cacheprecomputation
com.apple.suggestions.collectweeklystats
com.apple.suggestd.mail-intelligence-tasks
com.apple.suggestd.harvested-url-metric-upload
com.apple.suggestd.custom-response-harvest
com.apple.suggestd.phone-qr-engagement-data-recording
const char *identifierForActivityId(SGXPCActivity)
Unknown activity id: %i
SGEnrichmentWritebackAdapter
@"NSMutableArray"8@?0
v16@?0@"NSMutableArray"8
B16@?0@"SGStorageEvent"8
v24@?0@"NSMutableArray"8^B16
SGEnrichmentWritebackAdapter.m
store
%@-writeback-%tu
SGWritebackV2
v32@?0@"CSSearchableItemAttributeSet"8Q16^B24
CoreSuggestions-EnrichmentWriteback-%@
SGEnrichmentWritebackVersion != 2 && (false
 || com_apple_mail_messageID == "
@"NSMutableArray"16@?0@"NSString"8
expected a nonnull result array for mail message id %@
v24@?0@"NSObject"8@"NSError"16
SGEnrichmentWritebackVersion
enrichmentVersionWritebackKey
SGDonatedEventVersion
SGSchemas
^(?:[A-Z0-9][A-Z]|[A-Z][A-Z0-9])
@"NSString"16@?0@"_PASTuple2"8
SGDepartureAirportNames
SGArrivalAirportNames
reservationStatus
SGDepartureTimeUTCOffsetSeconds
SGArrivalTimeUTCOffsetSeconds
potentialAction
CheckInAction
target
ageOfTheSubmodelInDays
nbHighlyDiscriminantTokensForSaliency
nbHighlyDiscriminantTokensForIgnorability
nbExtremelyDiscriminantTokensForSaliency
nbExtremelyDiscriminantTokensForIgnorability
SGTokenString.m
string
string.length < ((unsigned long)1 << 31)
index < _length
range.location + range.length <= _length
com.apple.suggestions.reversetemplatejs
com.apple.suggestions.reversetemplatejs.pressure
v12@?0I8
DISPATCH_MEMORYPRESSURE_NORMAL
DISPATCH_MEMORYPRESSURE_WARN
DISPATCH_MEMORYPRESSURE_CRITICAL
DISPATCH_MEMORYPRESSURE_PROC_LIMIT_WARN
DISPATCH_MEMORYPRESSURE_PROC_LIMIT_CRITICAL
UNKNOWN
SGReverseTemplateJS
ReverseTemplateJS
SGReverseTemplateJS.m
assetPath
parentDir
fileNameWithPathExtension
@"JSValue"16@?0@"NSString"8
load
loadWithVmGrowthCounter
loadNoVmGrowthCounter
debug
developerLog
console
@"NSDictionary"32@?0@"NSString"8d16@"NSString"24
runDataDetectors
@"NSDictionary"40@?0@"NSString"8d16@"NSString"24@"NSArray"32
runDataDetectorsWithMetadata
parseMicrodata
tokenizeString
decodeEntitiesInString
detectLanguageForString
ASSET_VERSION
@"NSString"20@?0@"NSString"8B16
htmlToPlainText
getCurrentLocale
@"NSDictionary"40@?0@"NSString"8@"NSString"16@"NSString"24Q32
@16@?0@"NSValue"8
tags
ranges
getLinguisticTagsForString
getPreferredLocalizationsFromArray must be called with an array of strings
getPreferredLocalizationsFromArray
@"NSString"40@?0@"NSNumber"8@"NSNumber"16@"NSNumber"24@"NSNumber"32
getLocalizedFormattedDatetimeString
isInternalDevice
allowAnyDomainForMarkup
allowUnverifiedSourceForMarkup
@"NSDictionary"8@?0
getSystemVersion
@"NSString"24@?0@"NSNumber"8@"NSString"16
ZZZZZ
getGMTOffsetFromDateTimeAndTimeZoneOlsonCode
d8@?0
secondsForTiming
freeJSContext
@"NSArray"32@?0@"NSString"8@"NSString"16@"NSString"24
getFlightInformation
getMD5Hash
yyyy-MM-dd
getHistoricalFlightInformation
@"SGJSBurstTrie"16@?0@"NSString"8
loadBurstTrie
loadMappedData
main.js
html
%@%@
com.apple.undefined
request
v32@?0@"PARTask"8@"PARResponse"16@"NSError"24
error
userInfo
carrierCode
carrierName
carrierPhoneNumber
flightID
operatorCarrierCode
operatorFlightNumber
status
departurePublishedTime
departureActualTime
arrivalPublishedTime
arrivalActualTime
divertedAirport
legs
Can't create formattedDate, date is nil
code
timezone
city
street
district
postalCode
countryCode
country
secondsFromGMT
scheduled
delayed
redirected
diverted
landed
canceled
File URL must be a valid path.
SGReverseTemplateJS.holdXpcTransactionForShortDelay
shouldDownloadFull
eventClassificationForEntity
resolveCandidatesForJSDict
getPrivacyAwareMlLogs
getFlightReferencesAndReservationId
expected
predicted
diffSchemasArrays
mergeSchemasArrays
reverseMapForEntity
taggedCharacterRanges
outputs
sourceMetadata
jsMessageLogs
documentDateReceived
hashedSubject
privacyAwareSubject
tdDistrib
tdCount
deviceLocale
messageLength
documentDateProcessed
containsSchemaorg
emailToOutputWithTiming
textMessageToOutputWithTiming
schemaOrgToOutputWithTiming
emailToJsonLdWithExceptions
exceptions
_jsContext
This method must be stubbed!
https
/api/flights
airline_code
flight_number
URL Should not return nil if host is provided and path starts with a '/': %@ %@
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
payload
POST
application/json
Content-Type
JSContext
Class getJSContextClass(void)_block_invoke
void *JavaScriptCoreLibrary(void)
JSValue
Class getJSValueClass(void)_block_invoke
JSObjectRef SGJSObjectMakeArrayBufferWithBytesNoCopy(JSContextRef, void *, size_t, JSTypedArrayBytesDeallocator, void *, JSValueRef *)
JSObjectMakeArrayBufferWithBytesNoCopy
JSContextGroupRef SGJSContextGetGroup(JSContextRef)
JSContextGetGroup
JSStringRef SGJSStringCreateWithUTF8CString(const char *)
JSStringCreateWithUTF8CString
JSScriptRef SGJSScriptCreateReferencingImmortalASCIIText(JSContextGroupRef, JSStringRef, int, const char *, size_t, JSStringRef *, int *)
JSScriptCreateReferencingImmortalASCIIText
void SGJSStringRelease(JSStringRef)
JSStringRelease
JSValueRef SGJSScriptEvaluate(JSContextRef, JSScriptRef, JSValueRef, JSValueRef *)
JSScriptEvaluate
void SGJSScriptRelease(JSScriptRef)
JSScriptRelease
void SGJSGarbageCollect(JSContextRef)
JSGarbageCollect
master_whitelist.trie
com.apple.suggestions.masterwhitelist
v16@?0@"SGDomainWhitelistCheckerGuardedData"8
www.
PRODUCTIVITY_INTELLIGENCE_STRUCTURED_EVENTS
supportedProviders
engineConfig
StructuredEventModel.mlmodelc
structuredEventInputMapping
structuredEventOutputMapping
foundInMailNotifications
v16@?0@"SGStructuredEventTrialClientWrapperGuardedData"8
SGSqliteDatabase.m
hasInhumanTag
tagsHaveEscapedTag
delimitedString
firstStringAfterPrefix
PRAGMA auto_vacuum=INCREMENTAL
:memory:
mode=memory
file:
?mode=memory&cache=shared
sqlite handle unexpected nil
onPrep
TypeError
Could not securely code this type into SQLite
Could not insert this type into sqlite
updateTable:dictionary:whereClause: requires nonempty dictionary
UPDATE %@ SET %@%@
 WHERE 
insertOrReplaceIntoTable:dictionary: requires nonempty dictionary
INSERT OR REPLACE INTO %@ (%@) VALUES (%@)
[%@: %@ <%p>]
SELECT seq FROM sqlite_sequence WHERE name = :tableName
:tableName
PRAGMA integrity_check
Error: failed to run integrity_check on %@: %@
PRAGMA page_count
PRAGMA freelist_count
PRAGMA auto_vacuum
PRAGMA auto_vacuum=2
VACUUM
PRAGMA incremental_vacuum(%lu)
PRAGMA optimize(%llX)
void hasInhumanTag(sqlite3_context *, int, sqlite3_value **)
argc == 1
|inhuman
void tagsHaveEscapedTag(sqlite3_context *, int, sqlite3_value **)
argc == 2
void delimitedString(sqlite3_context *, int, sqlite3_value **)
void firstStringAfterPrefix(sqlite3_context *, int, sqlite3_value **)
int _indexForBindParam(sqlite3_stmt *, const char *)
stmt
Unknown bind parameter "%s"
ml_summary
extractionTemplate
reverseMapped_EVENT_TIME__START_DATETIME
reverseMapped_TITLE__HOTEL_RESTAURANT_NAME
reverseMapped_TITLE__MOVIE_TICKET_NAME
reverseMapped_EVENT_LOCATION__START_ADDRESS
reverseMapped_EVENT_LOCATION__START_PLACE
crossTags
schema
mergedSchema
diff
missingEntities
ddSGDetections
No event predicted by ML classifier
@context
http://schema.org
http://schema.org/FoodEstablishmentReservation
http://schema.org/FoodEstablishment
startTime
reservationName
http://schema.org/LodgingReservation
checkinTime
checkoutTime
http://schema.org/LodgingBusiness
place
http://schema.org/RentalCarReservation
pickupTime
pickupLocation
dropoffTime
dropoffLocation
endAddress
endPlace
providerName
http://schema.org/ScreeningEvent
Unsupported category: %@
ml_plaintext_prediction
cat_%@
yyyy-MM-dd'T'HH:mm:ss
http://schema.org/Reservation
Cancelled
Confirmed
http://schema.org/PostalAddress
streetAddress
addressLocality
addressRegion
addressCountry
shadowExtraction
mlDefaultExtraction
fallbackExtraction
Exception
templateExtractionOutput
No Event
schemaDiff_%@
schemaFromTemplate_%@
M_%@
assetVersion
assetIdentifier
category
usecase
%s%d
(%p)
 flag=%#x
DeadState in RunStateOnByte
NULL state in RunStateOnByte
Unexpected special state in RunStateOnByte
DFA memory cache could be too small: 
only room for 
 states.
StateSaver failed to restore state.
Text is not inside context.
Failed to analyze start state.
RunStateOnByteUnlocked failed after ResetCache
RunStateOnByteUnlocked failed after Reset
timing
<SGSchemaOrgKey uuid:%@>
SELECT locationType, label, address, airportCode, latitude, longitude, accuracy, quality FROM locations WHERE id = ?
eventId
airportCode
accuracy
quality
locations
DELETE FROM snippets WHERE entityId IN (%@)
qmarksSeparatedByCommas
DELETE FROM emailSnippets WHERE emailId IN (%@)
SGSqlEntityStore+Deleting.m
batchSize > 0
SELECT rowid AS minId, key FROM emailMetadata WHERE creationTimestamp < :time AND rowid > :minId ORDER BY rowid LIMIT :limit
:time
minId
SELECT messageId FROM mailIntelligence_saliency WHERE creationTimestamp < :time
possible infinite loop
DELETE FROM mailIntelligence_saliency WHERE messageId IN _pas_nsarray(:messageIds) RETURNING creationTimestamp
:messageIds
mailIntelligence_saliency
DELETE FROM mailIntelligence_spotlightMapping WHERE messageId IN _pas_nsarray(:messageIds)
SELECT entityKey FROM entity WHERE entityType = :entityType GROUP BY entityKey having ( COUNT(entityKey) > 1)
WHERE e.entityKey in _pas_nsarray(:candidateEntityKeys) AND e.entityType = :entityType
:candidateEntityKeys
WHERE ((e.timeRangeEnd < :timeRangeEnd AND e.timeRangeEnd != 0) OR (e.timeRangeEnd == 0 AND e.creationTimestamp < :creationTimestamp)) AND e.entityType = :entityType
:timeRangeEnd
WHERE e.timeRangeEnd < :timeRangeEnd AND e.entityType = :entityType
@"SGEntityTag"16@?0@"SGEmailKey"8
WHERE parentKey = ?
DROP TABLE IF EXISTS %@
CREATE TEMP TABLE %@ (masterEntityId INTEGER PRIMARY KEY)
INSERT OR IGNORE INTO %@ SELECT e.masterEntityId FROM %@ AS cr CROSS JOIN entity AS e ON e.id = cr.id WHERE e.entityType IN (:email, :phone, :address, :birthday, :socialProfile)   AND e.masterEntityId > 0   AND e.masterEntityId NOT IN (SELECT id FROM %@)
:phone
:address
:birthday
:socialProfile
SELECT DISTINCT id FROM %@
pseudoContactsWithDeletedDetails
%@ FROM %@ AS c CROSS JOIN entity AS e ON c.id = e.id CROSS JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityType = :pseudoevent OR e.entityType = :pseudoreminder
:pseudoevent
:pseudoreminder
DELETE FROM entity WHERE id IN (SELECT id FROM %@)
DELETE FROM entity_fts WHERE docid IN (SELECT id FROM %@)
SELECT masterEntityId FROM %@
DROP TABLE %@
DROP TABLE IF EXISTS childrenOfRemovedParents
CREATE TEMP TABLE childrenOfRemovedParents (id INTEGER PRIMARY KEY)
INSERT INTO childrenOfRemovedParents SELECT DISTINCT childId FROM entityParentage WHERE parentKey IN _pas_nsarray(:keys)
DROP TABLE IF EXISTS childrenWithRemainingParents
CREATE TEMP TABLE childrenWithRemainingParents (id INTEGER PRIMARY KEY)
INSERT INTO childrenWithRemainingParents SELECT DISTINCT cr.id FROM childrenOfRemovedParents AS cr CROSS JOIN entityParentage AS ep ON cr.id = ep.childId WHERE ep.parentKey NOT IN _pas_nsarray(:keys)
DROP TABLE IF EXISTS childrenToRemove
CREATE TEMP TABLE childrenToRemove (id INTEGER PRIMARY KEY)
INSERT INTO childrenToRemove SELECT id FROM childrenOfRemovedParents      WHERE id NOT IN (SELECT id FROM childrenWithRemainingParents)
childrenToRemove
DELETE FROM entityTags WHERE parentKey IN _pas_nsarray(:keys)
DELETE FROM entityParentage WHERE parentKey IN _pas_nsarray(:keys)
DROP TABLE childrenToRemove
DROP TABLE childrenWithRemainingParents
DROP TABLE childrenOfRemovedParents
DROP TABLE IF EXISTS entitiesToRemove
CREATE TEMP TABLE entitiesToRemove (id INTEGER PRIMARY KEY)
INSERT OR IGNORE INTO entitiesToRemove SELECT childId FROM entityParentage WHERE duplicateKeyHashBlob IN _pas_nsarray(:keys)
entitiesToRemove
DROP TABLE entitiesToRemove
DELETE FROM entityParentage WHERE duplicateKeyHashBlob IN _pas_nsarray(:keys)
DELETE FROM entityTags WHERE duplicateKeyHashBlob IN _pas_nsarray(:keys)
DELETE FROM locations WHERE id IN (SELECT dueLocationId FROM reminders WHERE entityId IN _pas_nsarray(:recordIds))
:recordIds
DELETE FROM reminders WHERE entityId IN _pas_nsarray(:recordIds)
DELETE FROM extractionInfos WHERE id IN (SELECT extractionInfoId FROM contactDetails WHERE entityId IN _pas_nsarray(:recordIds))
DELETE FROM contactDetails WHERE entityId IN _pas_nsarray(:recordIds)
DELETE FROM locations WHERE eventId IN (SELECT l2.eventId FROM locations AS l2 JOIN events AS e ON e.id = l2.eventId WHERE e.entityId IN _pas_nsarray(:recordIds))
DELETE FROM eventTags AS et WHERE et.eventId IN (SELECT et2.eventId FROM eventTags AS et2 JOIN events AS e ON e.id = et2.eventId WHERE e.entityId IN _pas_nsarray(:recordIds))
DELETE FROM events WHERE entityId IN _pas_nsarray(:recordIds)
DELETE FROM entityParentage WHERE duplicateKeyHashBlob IN _pas_nsarray(:compositeHashes)
:compositeHashes
@"NSData"16@?0@"SGDuplicateKey"8
@"NSString"16@?0@"SGDuplicateKey"8
DELETE FROM emailTags WHERE key IN _pas_nsarray(:keys)
SELECT id FROM emailMetadata WHERE key IN _pas_nsarray(:keys)
DELETE FROM emailMetadata WHERE key IN _pas_nsarray(:keys)
Unexpected tableId for record: %@
DROP TABLE IF EXISTS interactionsByBundleId
CREATE TEMP TABLE interactionsByBundleId (bundleId TEXT NOT NULL, timestamp FLOAT, key TEXT NOT NULL)
INSERT INTO interactionsByBundleId   SELECT delimitedString(key, 0),          CASE WHEN updateTimestamp > 0 THEN updateTimestamp              WHEN creationTimestamp > 0 THEN creationTimestamp              ELSE lastSeenTimestamp END,         key  FROM emailMetaData  WHERE type = ?
CREATE INDEX ix_interactionsByBundleId_bundleId ON interactionsByBundleId(bundleId, timestamp DESC, key)
SELECT bundleId, count(*) FROM interactionsByBundleId GROUP BY bundleId
SELECT key FROM interactionsByBundleId WHERE bundleId = :bundleID ORDER BY timestamp DESC LIMIT -1 OFFSET :limit
:bundleID
v24@?0@"NSString"8^B16
tag.indexed
SELECT entityKey, entityType, parentKey FROM entityTags WHERE tag = :tag
True
False
tim@apple.com
craig@apple.com
eat@myshorts.co
SGAhoCorasick.m
bytecode
bytecode.length > 0
bytecode.length % sizeof(op_t) == 0
SGAhoCorasickMaxIter
Exceeded iteration limit
SGAhoCorasickBoundsCheck
Node %u beyond bound %u
featureVector
Identity
QuotedNickname
CJKSpacers
LastNameFirst
LeadingHonorificPeriodRequired
LeadingHonorificPeriodOptional
TrailingHonorific
CommonVietnameseSurnameList
SpanishNameClassifierConfidenceThreshold
SpanishNameCharacterIndicators
SpanishNameUnigramIndicators
SpanishNameBigramIndicators
TwoCharSpanishNameEndings
SpanishNameLocaleIndicators
Any-Latin; Latin-ASCII
%s.%s
SGNames.m
failed to get patterns for LeadingHonorificPeriodRequired
failed to get patterns for LeadingHonorificPeriodOptional
v28@?0Q8Q16B24
 via LinkedIn
()<>[]"@
Could not initialize pattern.
Could not initialize regular expression: %@
@"NSRegularExpression"8@?0
%c.%s
-_. 
NSCharacterSet *charSetWithEndpoints(int, ...)
n_args && (n_args % 2) == 0
start < end
namefreq.trie
_PASCFBurstTrie *nameFreqTrie(void)_block_invoke_2
Could not load name frequency trie
void enumerateTrailingHonorificMatchesInString(NSString *__strong, BOOL (^__strong)(NSRange))_block_invoke
Could not initialize the raw regexp
NSArray<NSString *> *tokenizeName(NSString *__strong)_block_invoke_2
guardedTokenizer
duration
scrolled_to_end
mailbox_type
app_launch
app_resume
message_view_start
message_view_end
message_fetched
message_moved
reply_sent
reply_draft_started
forward_draft_started
flag_changed
read_changed
link_clicked
<%@>
SGSqlEntityStore+SqlHelpers.m
serializedEntityKey
SELECT title, content, contentRangeOfInterest FROM snippets WHERE entityId=?
%@[%c]
WHERE entityType = :entityType
SELECT COUNT(*) FROM entity
SELECT COUNT(*) FROM emailMetadata
%@ FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId %@ 
schema_version
entities
SELECT entityType, COUNT(*) FROM entity GROUP BY entityType UNION SELECT type, COUNT(*) FROM emailMetadata GROUP BY type
total_entities
SELECT COUNT(*) FROM (SELECT id FROM entity WHERE masterEntityId > 0 AND entityType = :entityType)
merged_pseudocontacts
SELECT count(*), MIN(entityId), MAX(entityId) FROM serializedContacts
serialized_contacts_lowest
serialized_contacts_highest
serialized_contacts_limit
serialized_contacts_total
entity_fts
SELECT count(*) FROM entity_fts
entity_fts_count
SELECT count(*) FROM entity_fts WHERE docid != entityId
entity_fts_details
entity_fts_lang
snippets
emailSnippets
SELECT (SELECT COUNT(*) FROM snippets) + (SELECT COUNT(*) FROM emailSnippets)
snippets_count
SELECT (SELECT COUNT(*) FROM snippets WHERE title IS NOT NULL AND title != '') + (SELECT COUNT(*) FROM emailSnippets WHERE title IS NOT NULL AND title != '')
snippets_title_count
SELECT (SELECT COUNT(*) FROM snippets WHERE content IS NOT NULL AND content != '') + (SELECT COUNT(*) FROM emailSnippets WHERE content IS NOT NULL AND content != '')
snippets_content_count
SELECT COUNT(*) FROM harvestQueueTombstones
tombstones_count
SELECT COUNT(*) FROM entity WHERE id NOT IN (SELECT DISTINCT childId FROM entityParentage)
orphaned_entity_count
SELECT key, value FROM statsCounters
SELECT COUNT(bundle_id), bundle_id FROM urls GROUP BY bundle_id
urlsCounters
DELETE FROM entity
DELETE FROM entity_fts
DELETE FROM entityParentage
DELETE FROM entityTags
DELETE FROM entityReferences
DELETE FROM emailMetadata
DELETE FROM emailTags
DELETE FROM serializedContacts
DELETE FROM cnContactsToSgContacts
DELETE FROM identityInterdict
DELETE FROM urls
DELETE FROM confirmedFieldValues
DELETE FROM snippets
DELETE FROM emailSnippets
INSERT INTO sqlite_sequence(name, seq) SELECT value, :minId FROM _pas_nsarray(:tableNames)
:minId
:tableNames
WHERE e.groupId = :groupId
:groupId
UPDATE entity SET masterEntityId = (CASE id
WHEN %lld THEN %lld
ELSE -1 END) WHERE groupId = :groupId
SELECT e.id,e.entityKey,e.entityType,ep.extractionType,ep.sourceKey,e.author,e.title,e.creationTimestamp,e.updateTimestamp,e.indexTimestamp,e.tags,e.structuredData,e.quality,e.masterEntityId,e.groupId,e.state,ep.parentKey,e.timeRangeStart,e.timeRangeEnd,e.floatingRange,e.timeRangeStartUTCOffsetSeconds,e.timeRangeEndUTCOffsetSeconds,e.locations,ep.modelVersion,ep.modelConfidence, e.harvestedOnBuild 
SELECT e.id,e.entityKey,e.entityType,ep.extractionType,ep.sourceKey,e.author,e.title,e.creationTimestamp,e.updateTimestamp,e.indexTimestamp,e.tags,e.structuredData,e.quality,e.masterEntityId,e.groupId,e.state,ep.parentKey,e.timeRangeStart,e.timeRangeEnd,e.floatingRange,e.timeRangeStartUTCOffsetSeconds,e.timeRangeEndUTCOffsetSeconds,e.locations 
http://schema.org/RentalCar
http://schema.org/Brand
brand
rentalCompany
Car Rental
databasecheck_
***** Database Check: %@
***** Overall Status: %@
failure
**** Integrity check
Integrity check of entities.db
Error: failed to run integrity_check on entities.db: %@
Integrity check of snippets.db
Error: failed to run integrity_check on snippets.db: %@
Broken entityId reference check: %@
SELECT entityId, * FROM %@ WHERE entityId NOT IN (SELECT id FROM entity)
[%@]
Failed to check for entityId broken reference in %@
SELECT DISTINCT masterEntityId FROM entity WHERE masterEntityId >= 0 AND masterEntityId != id AND entityType = :pseudo
SELECT MIN(id) FROM entity WHERE masterEntityId = :masterEntityId AND entityType = :pseudo
SGSqlEntityStore+DatabaseCheck.m
Failed to find merge group minimal element
  * merge group with masterEntityId %lld has unexpected minimal element %lld
SELECT masterEntityId FROM entity WHERE id = :mergeId
:mergeId
  * merge group has masterEntityId %lld, but there is no row with id == %lld
  * merge group has masterEntityId %lld, but the row with entity.id == %lld has masterEntityId == %lld
[1m%@
personFromSenderProbability
personFromSenderInDyadicConversationProbability
subjectContentProbability
personToRecipientsProbability
personCCRecipientsProbability
domainFromSenderProbability
conversationProbability
listIdProbability
attachmentsProbability
subjectCountStatsProbability
standardMailRulesProbability
mailboxProbability
mailboxTypeProbability
SGSqlEntityStore+Maintenance.m
Tried to register cache computation task on an in-memory store
v16@?0@"NSObject<OS_xpc_object>"8
dbstats
merged_pseudocontact_percent
entityTypes.
SGRTCLogging+Helpers.m
bucketSize must be > 0
geocoded
airportCodeWithCoordinates
addressWithCoordinatesWithLabel
addressWithLabel
coordinates
HTMLPreprocessor.js
v24@?0@8@"NSError"16
WKWebViewConfiguration
Class getWKWebViewConfigurationClass(void)_block_invoke
SGDOMParser.m
void *WebKitLibrary(void)
WKWebsiteDataStore
Class getWKWebsiteDataStoreClass(void)_block_invoke
WKWebpagePreferences
Class getWKWebpagePreferencesClass(void)_block_invoke
WKWebView
Class getWKWebViewClass(void)_block_invoke
SGStorageLocation.m
isnan(latitude) == isnan(longitude)
isnan(latitude) || (-90 <= latitude && latitude <= 90)
isnan(longitude) || (-180 <= longitude && longitude <= 180)
!isnan(latitude) || label || address
isfinite(accuracy)
isfinite(quality)
<SGStorageLocation@%0.2f/%0.2f label: '%@' address: '%@' airportCode: '%@'
SGOrigin+Internal.m
Unknown entity type %u
Extracted data must have a parent.
Pseudo contacts must be derived from at least one parent entity
Unsupported type: %@
Dunno how to handle a pseudo contact with a parent entity type: %@
int64_t makeInternalEntityId(SGTableId, int64_t)
SGRecordId+Internal.m
rowId out of range
experimentId
treatmentId
deploymentId
SGDCloudKitSync.m
property
set%c%s:
snprintfResult >= 0
objcProperty != nil
<%@ %@>
SGDCloudKitSync-callbacks
strongEndOperation
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
DeleteZone operation attempt completion [retries: %lu]
CreateZone operation attempt completion [retries: %lu]
v24@?0@"NSDictionary"8@"NSError"16
salt_
salt_atomic_reference
salt-manatee
salt
non-nil
ProcureSalt operation attempt completion [retries: %lu]
com_apple_suggestions_ck_event
v16@?0@"CKRecord"8
muscularEndOperation
[recordZoneID isEqual:[self recordZoneId]]
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
WriteRecord operation attempt completion [retries: %lu]
SGDCloudKitSync_sharedInstanceConfigurationQueue
com.apple.CoreSuggestions.PseudoEvents
com.apple.suggestd.aps
v16@?0@"_SGDCloudKitSyncPersistedState"8
This block should not be run more than once
DISABLED
ENABLED
SGDCloudKitSync.processStateChanges
v24@?0@"CKAccountInfo"8@"NSError"16
v24@?0@"NSNumber"8@"NSError"16
v16@?0@"SGFuture"8
v24@?0@"NSString"8@"NSError"16
aps-environment
SGCKAPSEnvironmentDomain
v24@?0@"CKSubscription"8@"NSError"16
_database == nil
_callback
com.apple.aps.suggestd
com.apple.icloud-container.
com.apple.suggestd
v40@?0@"NSString"8@16@"NSObject"24@"NSObject"32
com.apple.suggestions.sgckAddEntity
@"NSArray"24@?0@"NSData"8@"CKRecordID"16
com.apple.suggestions.sgckDeleteGroupId
@"NSArray"16@?0@"NSData"8
_callback == nil
B16@?0@"SGPipelineEntity"8
_deleteAllSyncedItemsCallback == nil
successful
0-length
[notification isKindOfClass:[CKDatabaseNotification class]]
<SGReminderDueLocation type:'%@' trigger: %@ name: %@>
chatLengthEstimator.cmsketch
SGChatLengthEstimator.m
endTime
partySize
Restaurant
None
SubjectLength
SubjectWordCount
SenderIsVIP
AttachmentHistogramApplication
AttachmentHistogramMedia
AttachmentHistogramOthers
EmailAgeInDays
SenderConnectionScore
PersonFromSenderProbability
SubjectContentProbability
PersonToRecipientsProbability
PersonCCRecipientsProbability
DomainFromSenderProbability
PersonFromSenderInDyadicConversationProbability
AttachmentHistogramProbability
ConversationIdProbability
ListIdProbability
PredictedAttachment
PrivateSubject
PrivateTokenizedSubject
PrivateSenderFrom
PrivateSenderFromInDyadicConversation
PrivateSortedToRecipients
PrivateToRecipientsPairs
PrivateSortedCCRecipients
PrivateCCRecipientsPairs
SenderFullEmailDomain
PrivateAttachmentHistogram
PrivateConversationId
PrivateListId
PrivateHTMLBodyTextContent
PrivateHTMLBodyTextContentLanguageIdentifier
ScrolledToEnd
UserReplied
NumberOfMailsViewedBeforeSinceAvailable
TimeBeforeViewStartSinceAvailable
MessageViewCount
MessageViewMaxDwellTime
MessageViewTotalDwellTime
NumberOfUnreadMessageAtFirstViewTime
NumberOfMoreRecentUnreadMessageAtFirstViewTime
MarkedAsRead
MarkedAsUnread
MailGotFlagged
ReplyDraftStarted
ForwardDraftStarted
MarkedAsJunk
LinkClicked
@16@?0@"NSNumber"8
@"NSString"16@?0@"NSNumber"8
[%@]
%@: %@
@"SGStorageLocation"16@?0@"SGDCKLocation"8
SGPipelineEntity+CloudKitRecord.m
[self.duplicateKey.entityKey isKindOfClass:[SGPseudoEventKey class]]
parentEntityType == SGEntityTypeWebPage || parentEntityType == SGEntityTypeInteraction
Only all-day events should be floating. Other events should have a timezone set before being synced up.
PQT_ContactSharing_TrainingTransformers.plist
SGContactSharingModel.m
SGContactSharingModel - Provided probabilities (count %ld) do not match valid SGContactSharingLabels (count %ld).
countUpTo8KB
count8KBTo32KB
count32KBTo128KB
count128KBTo512KB
count512KBTo2MB
countOver2MB
Application
Media
Others
 [truncated]
[^\x00-\x{10ffff}]
(?:)
Bad final char: 
{%d,}
{%d}
{%d,%d}
(?-m:^)
(?-m:$)
(?HaveMatch:%d)
(){}[]*+?|.^$\
[]^-\
\x%02x
\x{%x}
<SGDetection/%@ '%@'>
:ABPerson
%tu out of range (count %tu)
@16@?0Q8
Q8@?0
<SGLabeledValue: %@: %@>
@"NSString"16@?0@"SGEmailAddress"8
@"NSString"16@?0@"SGPhoneNumber"8
(nil)
bi_lstm_0_h_out
bi_lstm_0_c_out
bi_lstm_0_h_out_rev
bi_lstm_0_c_out_rev
addSingleton
componentAnalysis.mm
elementToRepresentative.find(x) == elementToRepresentative.end()
union_
rep1Iter != elementToRepresentative.end()
rep2Iter != elementToRepresentative.end()
set1Iter != representativeToSet.end() && set2Iter != representativeToSet.end()
TARGET_STRING
MAC_DISTANCE
-[SGTokenDistanceMappingTransformer transform:]
SGTokenDistanceMappingTransformer.m
+[SGTokenDistanceMappingTransformer transformArray:withTargetIndex:maximumDistance:]
index < input.count
%@__%d
SuggestionsMLDebugContextDataKey
assertion_context
------
SGJournalEntry.m
eventBatch
reminder
<SGJournalEntry op:%lu entity:%@
predictedMissingElementScore
foundMatchingElement
v16@?0@"SGRealtimeSuggestionsTuple"8
kSuggestionsFromEmailContentCacheSalt
v24@?0@"SGRealtimeSuggestionsTuple"8@"NSError"16
suggestionsFromMessage message harvest queue
@"SGTextMessage"8@?0
after banner callback
SGDSuggestManager+RealtimeDonations.m
Passing 0 for options would return nothing
suggestionsFromEmailContent
_suggestionsFromMessage-plugins
@"SGRealtimeSuggestionsTuple"8@?0
B16@?0@"SGRealtimeContact"8
B16@?0@"SGRealtimeEvent"8
@"SGRealtimeSuggestionsTuple"16@?0@"SGRealtimeSuggestionsTuple"8
@"SGRealtimeReminder"16@?0@"SGRealtimeReminder"8
MAPPINGS
MAPPING_TYPE
MAPPING_LANGUAGE
-[SGStringMappingTransformer transform:]
SGStringMappingTransformer.m
[input isKindOfClass:[NSArray class]]
http://schema.org/BoatReservation
http://schema.org/BoatTrip
http://schema.org/BoatTerminal
arrivalBoatTerminal
departureBoatTerminal
Boat Trip
EventMetaDataExtractor_ML_EVENT__CATEGORY
EventMetaDataExtractor_ML_EVENT__NAME
EventMetaDataExtractor_ML_EVENT__DEPARTURE_LOCATION
EventMetaDataExtractor_ML_EVENT__ARRIVAL_LOCATION
EventMetaDataExtractor_ML_EVENT__TITLE
EventMetaDataExtractor_ML_EVENT__START_DATETIME
EventMetaDataExtractor_ML_EVENT__END_DATETIME
EventMetaDataExtractor_ML_EVENT__END_DATETIME_IS_SIGNIFICANT
SGMessageEventDissectorConfig
EventClassifier
MLEventExtractionModel.assets
EventClassifierThreshold
EventExtractionMessageProcessingLimit
EventExtractionRateLimitInterval
arrivalAirportName
departureAirportName
arrivalAirportCode
departureAirportCode
flightReferences
IATA
ML_EventMessage
Train
Hotel
Movie
GenericEvent
Unknown
eventClassifierPath
assetFolderPath
v16@?0@"SGMessageEventDissectorGuardedData"8
CoreSuggestionsInternals
IndiaSMSEventExtraction
IndiaSMSEventExtractionMobileAssets
com.apple.eventMetaDataExtractor.eventMetaDataExtractorPlugin
TaskName
EventSuggestionsFromMessage
InputMessage
AssetFolderPath
v24@?0@"MLRTaskResult"8@"NSError"16
http://schema.org/ReservationConfirmed
http://schema.org/BusStop
http://schema.org/TrainReservation
http://schema.org/TrainTrip
departureStation
http://schema.org/TrainStation
arrivalStation
GenericEvent|%@|%@|%@
@8@?0
outputCategory
messageProcessingRate
failureReasonCode
@"NSDictionary"16@?0@"NSDictionary"8
com.apple.suggestions.messageEventDissector
:label
:extractionInfoId
INSERT INTO contactDetails (entityId, duplicateKey, sourceKey, label, value, type, extractionInfoId) VALUES (:entityId, :duplicateKey, :sourceKey, :label, :value, :type, :extractionInfoId)
SELECT id FROM contactDetails WHERE duplicateKey = :duplicateKey
SELECT entityId FROM contactDetails WHERE duplicateKey = :duplicateKey
SELECT content FROM snippets WHERE entityId = :entityId
SELECT value, label, type, duplicateKey, sourceKey, extractionInfoId FROM contactDetails WHERE entityId = :entityId OR entityId IN (SELECT e.id FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.masterEntityId = :entityId)
label
extractionInfoId
DDScannerCreationError
Failed to construct DDScanner: %@
SGDataDetectors-SharedScanner
NSTextCheckingTypeLink
NSTextCheckingTypePhoneNumber
NSTextCheckingTypeAddress
NSTextCheckingTypeTransitInformation
NSTextCheckingTypeDate
SGDDMatchDate
SGDDMatchFlight
SGDDMatchLink
SGDDMatchLookupHint
SGDDMatchDelivery
SGDDMatchTimeOffset
SGDDMatchOther
B16@?0^{__DDResult={__CFRuntimeBase=QAQ}{__DDQueryRange={__DDQueryOffset=b32b32}{__DDQueryOffset=b32b32}}{?=qq}q^{__CFArray}^{__CFString}^{__CFString}^v^{__CFDictionary}qCf}8
writeInteractionEventEntities
SGSqlEntityStore+Writing.m
Do not call writeInteractionEventEntities with non-interaction entity type.
containerEntity.duplicateKey
writeEntity
Don't know how to write out a container entity of type %@
v16@?0@"SGPipelineEnrichment"8
Contact lacks a recordId prior to identity store update
@16@?0@8
Don't know how to prune container entities of type %@
SELECT parentKey FROM entityParentage WHERE childId = :childId
:childId
SELECT key FROM emailMetadata WHERE key IN _pas_nsarray(:keys) AND type = :emailType ORDER BY updateTimestamp DESC LIMIT -1 OFFSET :offset
:emailType
:offset
SELECT e.entityKey, e.entityType    FROM entity e JOIN entityParentage ep ON e.id = ep.childId    WHERE ep.parentKey = :parentKey AND e.id not in _pas_nsset(:ids)
Dump table "%@":
SELECT 
 FROM %@
%@    
contactEntity
contactDetails
q24@?0@8@16
SELECT e.downloadState FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE ep.duplicateKeyHashBlob = :duplicateKeyHash AND ep.extractionType = :extractionType
:duplicateKeyHash
_writeMessageEntityToSnippetsDb received entity type %@
INSERT OR REPLACE INTO emailSnippets (emailId, content, title) VALUES (:emailId, :content, :title)
_writeEntityToSnippetsDb received message entity type
INSERT OR REPLACE INTO snippets (entityId, content, contentRangeOfInterest, title) VALUES (:entityId, :content, :range, :title)
:range
timeRangeStart
timeRangeEnd
timeRangeStartUTCOffsetSeconds
timeRangeEndUTCOffsetSeconds
floatingRange
pendingGeocode
SELECT pendingGeocode FROM entity WHERE id = :id
id = %lld
UPDATE emailMetadata SET pendingVerification = :pendingVerification WHERE sourceKey = :souceKey
:pendingVerification
:souceKey
curatedDupe
SELECT curatedDupe FROM entity WHERE id = :id
SELECT id, creationTimestamp, updateTimestamp, downloadState FROM emailMetadata WHERE key = :key AND type = :type
author
updateTimestamp
indexTimestamp
lastSeenTimestamp
downloadState
harvestedOnBuild
pendingVerification
DELETE FROM emailTags WHERE unlikely(key = :key)
INSERT INTO emailTags (key, type, tag) VALUES (:key, :type, :tag)
:tag
entity.duplicateKey
Writing enrichment via legacy code path
enrichment.duplicateKey
Writing message entity via legacy code path
SELECT e.id, e.masterEntityId, e.creationTimestamp, e.updateTimestamp FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE (ep.duplicateKeyHashBlob = :duplicateKeyHash AND ep.extractionType = :extractionType)
 UNION SELECT e.id, e.masterEntityId, e.creationTimestamp, e.updateTimestamp FROM entity AS e WHERE e.contentHashBlob = :contentHash
:contentHash
groupId
contentHashBlob
DELETE FROM entityTags WHERE entityKey = :entityKey AND entityType = :entityType AND parentKey 
 = :parentKey
 is NULL
INSERT INTO entityTags (tag, entityKey, entityType, parentKey, duplicateKeyHash, duplicateKeyHashBlob) VALUES (:tag, :entityKey, :entityType, :parentKey, '-', :duplicateKeyHash)
childId
duplicateKeyHash
duplicateKeyHashBlob
extractionType
modelVersion
modelConfidence
loggingIdentifier
@"SGJournalEntry"16@?0@"SGEntity"8
INSERT OR REPLACE INTO entity_fts(docid, entityId, messagingTerms, ftsTerms) VALUES(?, ?, ?, ?)
v16@?0q8
SELECT id, masterEntityId FROM entity WHERE masterEntityId > 0 AND entityType IN (:pseudo, :unrecognized) ORDER BY masterEntityId ASC
:unrecognized
SELECT 1 FROM _pas_nsindexset(:ids) i LEFT JOIN entity e on i.value = e.id AND e.entityType = :contact WHERE e.id IS NULL
recordId from wrong table
@16@?0@"SGRecordId"8
SELECT MIN(id) FROM entity WHERE id IN _pas_nsarray(:ids)
masterEntityRecord
UPDATE entity SET masterEntityId = :masterEntityId WHERE id IN _pas_nsarray(:ids) AND entityType IN (:pseudoContact, :unrecognizedContact)
:unrecognizedContact
writeIdentityBlobs
@"SGRecordId"16@?0@"_PASTuple2"8
[:alnum:]
[:^alnum:]
[:alpha:]
[:^alpha:]
[:ascii:]
[:^ascii:]
[:blank:]
[:^blank:]
[:cntrl:]
[:^cntrl:]
[:digit:]
[:^digit:]
[:graph:]
[:^graph:]
[:lower:]
[:^lower:]
[:print:]
[:^print:]
[:punct:]
[:^punct:]
[:space:]
[:^space:]
[:upper:]
[:^upper:]
[:word:]
[:^word:]
[:xdigit:]
[:^xdigit:]
trainName
trainNumber
trainCompany
<%s %lu-%lu>
InhumanSig
RelaxedSig/F
ValedictionSig/F
RejetedSig/F
SymbolicSig
B24@?0Q8^B16
B16@?0S8B12
-[SGSignatureDissector shouldIgnoreSignature:signatureRange:isInhuman:]_block_invoke
SGSignatureDissector.m
sub != nil
email
address
phone
quote
void tokenize(NSString *__strong, TokenizationState *, NSRange, NSString *__strong)
tokenize range (%lu, %lu) beyond text length %lu
void tokenize(NSString *__strong, TokenizationState *, NSRange, NSString *__strong)_block_invoke_2
Encountered nil Asset while attempting to load HMM tokens.
HmmSigTokens.dat
No HMM token file contained in CoreSuggestions MobileAsset version %lu
Could not load HMM keyword trie
v24@?0{?=qq}8
hmm.dat
viterbi
obs <= NUM_TOKEN_TYPES
void deserializeHmm(NSData *__strong)
Wrong data length: %li
stats
totalNumberOfEmailsProcessedForAttachmentDetectionRoundedToClosestMultipleOf20
totalNumberOfEmailsProcessedForRecipientDetectionRoundedToClosestMultipleOf20
totalNumberOfEmailsProcessedForFollowUpDetectionRoundedToClosestMultipleOf20
numberOfPredictedAttachmentOnLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
numberOfLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
numberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
numberOfLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
SELECT lastSeenTimestamp FROM emailMetadata WHERE key = :emailKey
:emailKey
UPDATE events SET whenRange = "MalformedData"
calevent
unkphone
text-message
social-profile
SGPseudoEventKey.m
globalId
[SGPseudoEventKey groupId:%@
{dropoff}
SGSqlEntityStore+SerializedContacts.m
Unexpected table for recordId: %@
DELETE FROM serializedContacts WHERE entityId = ?
DELETE FROM serializedContacts WHERE entityId IN _pas_nsarray(:ids)
SELECT data FROM serializedContacts WHERE entityId = ?
loadSerializedContactForId
SELECT entityId, data FROM serializedContacts ORDER BY entityId DESC
SELECT entityId FROM serializedContacts
DELETE FROM serializedContacts ORDER BY id DESC LIMIT -1 OFFSET ?
SELECT id FROM serializedContactCacheJobs LIMIT 1
DELETE FROM serializedContactCacheJobs WHERE id=?
updateSerializedContacts-onequery
updateSerializedContacts
INSERT INTO serializedContactCacheJobs (id) VALUES (?)
SGZipUnarchive
SGUnarchiver.m
readArchive && destinationURL
trigger
EXTRACTION__REMINDER_TITLE_ACTION_VERB
EXTRACTION__REMINDER_TITLE_ACTION_OBJECT_CORE
POLARITY__REMINDER_STATEMENT
POLARITY__COMMITMENT
POLARITY__REJECTION
POLARITY__DONE
DUE_LOCATION_TRIGGER__
ARRIVE
LEAVE
MY_HOME
MY_WORK
MY_SCHOOL
OTHER
DUE_TIME_TRIGGER__DATETIME
DUE_LOCATION_TRIGGER__LEAVE
DUE_LOCATION_TRIGGER__ARRIVE
DUE_LOCATION_TRIGGER__MY_HOME
DUE_LOCATION_TRIGGER__MY_WORK
DUE_LOCATION_TRIGGER__MY_SCHOOL
DUE_LOCATION_TRIGGER__OTHER
R_action
I_NN
I_NNP
I_Noun
I_NNS
I_NNPS
I_PRP
I_VB
I_VBP
I_VBN
I_VBG
I_Verb
I_RP
confirmation
triggerOptional
excludeList
confirmationOptional
titlePrefix
L_de
hasPolarity:
hasTitle
hasTrigger
hasCorrectNumberOfActionVerbs
hasActionVerb
hasObjectCore
@"NSString"16@?0@"SGTaggedCharacterRange"8
%@%@%@%@
OriginalMessage/F
BodyHeaders/F
CorporateFooter
SXReply
B24@?0{_NSRange=QQ}8
SGMailQuoteDissector
PRODUCTIVITY_INTELLIGENCE_REMINDERS
actionVerbOptional
messagesBannerLimit
reminderOverrides
reminderPreprocessor
reminderInputMapping
reminderOutputMapping
ReminderModel.mlmodelc
v16@?0@"SGReminderTrialClientWrapperGuardedData"8
"%@"
 OR 
%@%%%@%%
%@%%%@
%@. %@
@"NSString"16@?0@"CNLabeledValue"8
@"CNMutablePostalAddress"16@?0@"CNPostalAddress"8
#NOSTREET#
#NOCITY#
SignificantEmailAddress
SG_FEATURE_RECENCY
SG_FEATURE_ENTITYTYPE
SG_FEATURE_ADDRESSTYPE
SG_FEATURE_OTHER
SG_FEATURE_EMAILTYPE
SG_FEATURE_CALLTYPE
SG_FEATURE_PHONETYPE
SG_FEATURE_BELONGINGTO
SG_FEATURE_BELONGING
SGTokenizer.m
block
SGTokenizer
@"_PASQueueLock"8@?0
v16@?0@8
v40@?0@"NSString"8^B16{_NSRange=QQ}24
ITSTokenListCopyEscapedTokenAtIndex failed to get token at index %ld
"%@*"
ITSTokenListRef _createITSListForFTSQuery(NSString *__strong)_block_invoke_2
tokenizer
SGSqlEntityStoreErrorDomain
SELECT e.entityKey, e.entityType, ep.parentKey FROM entity AS e JOIN entityParentage AS ep ON ep.childId = e.id WHERE e.id = :rowId
SELECT ep.sourceKey FROM entity AS e JOIN entityParentage AS ep ON ep.childId = e.id WHERE e.id = :rowId
SGSqlEntityStore+Loading.m
No support for loading entities from non-legacy recordIds (tableId=%du, internalEntityId=%lld)
WHERE e.id = :rowId
AND ep.modelVersion != 0
WHERE e.entityType = :entityType %@ LIMIT :limit
key = :key
_loadMessageByKey matched multiple rows
SELECT title, content FROM emailSnippets WHERE emailId = :emailId
:emailId
WHERE e.entityKey = :entityKey AND e.entityType = :entityType AND ep.parentKey
WHERE e.entityKey = :entityKey AND e.entityType = :entityType
WHERE ep.sourceKey = :sourceKey AND e.entityType = :entityType
SELECT CASE WHEN masterEntityId > 0 THEN masterEntityId ELSE id END FROM entity WHERE id IN (SELECT CASE WHEN entityType = :contact THEN id ELSE groupId END FROM entity WHERE id=:id)
:contact
Could not load contact (recordId=%@)
RecordId with unexpected table: %@
No record found with id: %@
WHERE masterEntityId = :masterEntityId
SELECT e.id FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityKey = :entityKey AND e.entityType = :entityType AND ep.parentKey IS :parentKey
where
%@ AND e.entityType IN (:entityTypeDetected, :entityTypeCurated)
:entityTypeDetected
:entityTypeCurated
 AND e.entityType IN (:detPhone, :detAddr, :detEmailAddr, :detSocialProfile, :curPhone, :curAddr, :curEmailAddr, :detBirthday, :curBirthday, :curPhotoPath)
:detPhone
:detAddr
:detEmailAddr
:detSocialProfile
:curPhone
:curAddr
:curEmailAddr
:detBirthday
:curBirthday
:curPhotoPath
Contact details require a parent
SELECT e.entityKey AS 'Entity Key', COUNT(*) AS `Entity Count` FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityType = :entityType AND e.creationTimestamp >= :startDate AND e.creationTimestamp <= :endDate GROUP BY e.entityKey ORDER BY e.creationTimeStamp ASC
:startDate
:endDate
SELECT id FROM reminders LIMIT ?
Invalid duplicate key: %@
@16@?0@"SGEntity"8
identifiers.count != 0
MyPhone/F
NotMyPhone/F
MyAddress/F
NotMyAddress/F
BirthdayDate/F
Birthday/F
DetailType
DetailTypes
SelfIdentMsgCount
FilterWithAddressBook
UnlikelyPhoneSampling
LogLine
%ADDRESS%
%DATE%
SGM2BirthdayWrongDay
SGM2BirthdaySameDay
SGM2BirthdayPreviousDay
SGM2BirthdayNextDay
SGM2BirthdayPreviousWeek
SGM2BirthdayNextWeek
{SGRe2IterAction_=B}16@?0^{?={_NSRange=QQ}*}8
SGDetectedAttributeDissector.m
targetPerson
birthdayDate
subtype
v20@?0@"SGEntity"8B16
0123456789+-()
HKHealthStore
Class getHKHealthStoreClass(void)_block_invoke
void *HealthKitLibrary(void)
NSString *textToMatch(long, long, NSString *__strong, SGDataDetectorMatchType)
type == SGDDMatchPhone || type == SGDDMatchPostalAddress || type == SGDDMatchEmailAddress || type == SGDDMatchDate
%WRONG_MATCH_TYPE
SelfIdentification
SG_TARGET_NAME
SGInteractionKey.m
<SGInteractionKey bundleId:%@ personHandle:%@>
SUB_MODEL_KEY_STRING
From
Date
Subject
Header
ReplyAttribution/F
QuotedRegionStart
Headers
Separator
SG_TARGET_PHONE
SignificantPhoneNumber
Add after Compile.
Unexpected op in KeepPart: 
vector
messages.added
messages.lost
messages.pruned
messages.found
messages.deleted
messages.undisplayablyLost
messages.foundAfterUndisplayablyLost
%@.distribution
%@.scalar
%@.%@.%@.richness
phones.sig
phones.phrase
emailAddresses
emailAddresses.sig
emailAddresses.phrase
postalAddresses
postalAddresses.sig
postalAddresses.phrase
%@.phones
%@.emailAddresses
%@.postalAddresses
%@.phones.%@
%@.emailAddresses.%@
%@.postalAddresses.%@
behavior
contacts
postalAddress
behavior.scalar
contactUpdate
calendarApp
eventUpdate
eventCancellation
eventDuplicate
eventNearDuplicate
mailApp
messagesApp
suggest
banner
events.%@s
behavior.distribution.%@.%@.events
contacts.%@s
behavior.distribution.%@.%@.contacts
mailsDrainedPerHarvest
harvestDrainedSomethingFromQueue
mailsDrained
messageTimeSpentInQueue
harvest
record
identityGroupSize
impressions.suggestion.banner
impressions.suggestion.banner.suppressed
impressions.suggestion.banner.hypotheticalIncludingActedOn
impressions.suggestion.banner.event
impressions.suggestion.banner.contact
impressions.suggestion.banner.hypotheticalContactIncludingInsignificant
database
corruption
integrity_check
corruption_marker
contactsFoundOnDeviceEnabled
eventsFoundOnDeviceEnabled
annotationType
range
SGTaggedCharacterRange.m
nonnull NSArray<%@*> *%@ was null when decoded
text
AnnotationTypeUnknown
AnnotationTypeDataDetectors
AnnotationTypeNLTaggerLexicalClass
AnnotationTypeNLTaggerLemma
AnnotationTypeCrossAnnotation
AnnotationTypeMetadata
AnnotationTypeMisc
AnnotationTypeReminder
AnnotationTypeHuman
AnnotationTypePadding
AnnotationTypeModelOutput
AnnotationTypeHTML
AnnotationTypeCSS
AnnotationTypeNER
<SGTaggedCharacterRange annotationType:%@ tags:%@ text:%@>
@"SGTaggedCharacterRange"16@?0@"SGTaggedCharacterRange"8
The baseTaggedCharacterRangeArray isn't sorted.
@"NSSet"16@?0@"NSSet"8
SELF beginswith 'L'
L_%@
Error in TaggedCharacterRange tags, only one can be of type SGTaggedCharacterRangeAnnotationTypeNLTaggerLemma
section_%@_intermediate
section_%@_begin
section_%@_single
tags contains space
TrialModels
com.apple.suggestd.%@.serialQueue
%@_%@_%@_%@
%@_%@_%@
SGContactDetailAddress
SGContactDetailPhone
SGContactEmailAddress
SGContactDetailInstantMessageAddress
SGContactDetailSocialProfile
SGContactDetailBirthday
SGContactDetailPhoto
NSString * _Nonnull SGContactDetailTypeDescription(SGContactDetailType)
SGContactDetail.m
Unknown contact detail type: %lu
SGContactDetailType SGEntityTypeToContactDetailType(SGEntityType)
SGEntityTypeIsContactDetail(entityType)
This should never happen. The param assert should hit if this is the case.
extractionInfo
Cannot construct SGContactDetail from entity of type %lld
SGContactDetailType SGIdentityKeyTypeToContactDetailType(SGIdentityKeyType)
Unhandled identity key type %u
NullCNContactIDPlaceholder:Null
com.apple.suggestions.suggestd.cntosgcontacts
INSERT OR REPLACE INTO cnContactsToSgContacts (cnContactIdentifier, maxEntityId, entityId) VALUES (:cnContactIdentifier, :maxEntityId, :entityId)
:cnContactIdentifier
:maxEntityId
INSERT OR REPLACE INTO cnContactsToSgContacts (cnContactIdentifier, maxEntityId, entityId) SELECT :cnContactIdentifier, :maxEntityId, value FROM _pas_nsarray(:matches)
:matches
loadCNContactMatchesForContact
SELECT maxEntityId, entityId FROM cnContactsToSgContacts WHERE cnContactIdentifier = :cnContactIdentifier
maxEntityId
DELETE FROM cnContactsToSgContacts WHERE cnContactIdentifier = :cnContactIdentifier
DELETE FROM cnContactsToSgContacts WHERE entityId IN _pas_nsarray(:ids)
SELECT DISTINCT cnContactIdentifier FROM cnContactsToSgContacts
cnContactIdentifier
SELECT cnContactIdentifier, maxEntityId, entityId FROM cnContactsToSgContacts ORDER BY cnContactIdentifier, entityId
SELECT cnContactIdentifier FROM cnContactsToSgContacts WHERE entityId = :entityId
SELECT cnContactIdentifier FROM cnContactsToSgContactsCacheJobs LIMIT :batchSize
DELETE FROM cnContactsToSgContactsCacheJobs WHERE cnContactIdentifier IN _pas_nsarray(:batchArray)
:batchArray
cnContactsToSgContactsCacheJobs
INSERT OR IGNORE INTO cnContactsToSgContactsCacheJobs (cnContactIdentifier) SELECT value FROM _pas_nsarray(:batch)
:batch
DELETE FROM cnContactsToSgContactsCacheJobs
updateCNContactMatches
updateCNContactMatches-onequery
@16@?0@"SGContact"8
SGSqlEntityStore+CNtoSGContacts.m
!exceptionSwallowed
SELECT value FROM metadata WHERE key = 'hasFullCNtoSGSync' LIMIT 1
value
INSERT OR REPLACE INTO metadata (key, value) VALUES ('hasFullCNtoSGSync', 3)
v24@?0@"CNChangeHistoryContactChange"8^B16
refreshSuggestionsContact
@"NSMutableSet"8@?0
@"NSString"16@?0@"SGStorageContact"8
duplicate
@"NSString"16@?0@"NSString"8
"%@"%@
@"NSString"24@?0@"NSString"8@"NSString"16
@"NSString"24@?0@"NSString"8@"NSArray"16
false
(%@ == %@)
(%@)
B24@?0@"NSString"8^B16
%@ * %@
%@ %@ *
kMDItemDisplayName
cdwt
firstInitial
%@. * %@
"*%@*"cd
(%@ || %@ || %@)
(%@ && %@)
%@ && (%@ || %@)
harvestTime
plugins
dissectors
verificationOp
geocodeOp
storageOp
messageInHumanBody
messageSubjectDetectedData
messageDetectedData
messageHtmlParser
messageQuotedRegions
<%@ %@ duration: %.6f cpu: %.6f enrichment: %@>
B16@?0@"SGHarvestQueueMetricsTimer"8
Dissector
com.apple
entities.db
snippets.db
@"SGDCloudKitSync"8@?0
CREATE TABLE IF NOT EXISTS integrityCheck (inconsequential STRING)
PRAGMA journal_mode=WAL
PRAGMA synchronous=NORMAL
unable to initialize entity DB
unable to initialize snippets DB
snippetDb instance was unexpectedly non-nil
sqliteCode
SGSqlEntityStore spotlight reindex
com.apple.suggestions.sqlentitystore.cacheprecomputationqueue
mifeaturestore.db
%@.corrupted.%ld
-shm
-wal
WHERE unlikely(pendingGeocode=1)
SELECT key FROM emailMetadata WHERE unlikely(pendingVerification = 1) ORDER BY creationTimestamp DESC
SELECT ep.parentKey FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityType = :entityType AND e.entityKey = :entityKey ORDER BY e.creationTimestamp DESC
SELECT ep.parentKey FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityType = :entityType AND e.entityKey = :entityKey
SELECT state FROM emailMetadata WHERE key = :key
WHERE (e.masterEntityId = :masterEntityId OR e.id = :masterEntityId) AND +e.entityType = :pseudo AND ep.extractionType != :messagesMeCard
:masterEntityId
:messagesMeCard
Candidate already has more than 1 profile. Merging happening early?
@"SGStorageContact"16@?0@"SGStorageContact"8
Should only get 1 merged contact since that's how we selected the profiles but got %d
:isSentTag
:isMe
SELECT DISTINCT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END  FROM entity WHERE entity.entityType = :pseudo AND title LIKE :prefix ESCAPE '!' AND NOT hasInhumanTag(entity.tags) AND NOT entity.curatedDupe LIMIT :limit
:prefix
:pseudoContactType
:detailType
:detailTags
masterEntityId
v32@?0@"NSString"8q16@"NSArray"24
SELECT entity.masterEntityId, entity.id, entity.entityType, entity.entityKey FROM entityTags CROSS JOIN entity     ON entity.entityKey = entityTags.entityKey AND entity.entityType = entityTags.entityType WHERE entityTags.entityType IN (:pseudoContactType, :detailType)     AND entityTags.tag IN _pas_nsarray(:detailTags)
SELECT entity.masterEntityId, entity.id, entity.entityType, entity.entityKey FROM entityTags CROSS JOIN entity     ON entity.entityKey = entityTags.entityKey AND entity.entityType = entityTags.entityType WHERE entityTags.entityType = :detailType AND entityTags.entityType != :pseudoContactType     AND EXISTS (         SELECT value AS prefix         FROM _pas_nsarray(:detailTags)         WHERE entityTags.tag >= prefix AND entityTags.tag < firstStringAfterPrefix(prefix)     )
SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END  AS masterEntityId FROM entity WHERE id IN _pas_nsset(:ids)     AND NOT hasInhumanTag(entity.tags) AND tagsHaveEscapedTag(entity.tags, :isSentTag) = :isMe
SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END  AS masterEntityId FROM entity WHERE id IN _pas_nsset(:socialProfileSubContactIds)     AND title = ""     AND NOT hasInhumanTag(entity.tags) AND tagsHaveEscapedTag(entity.tags, :isSentTag) = :isMe
:socialProfileSubContactIds
SELECT entity.id FROM entity_fts CROSS JOIN entity     ON entityId = entity.id WHERE messagingTerms MATCH :match     AND NOT hasInhumanTag(entity.tags) AND tagsHaveEscapedTag(entity.tags, :isSentTag) = :isMe
:match
SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END  AS masterEntityId FROM entity WHERE id IN _pas_nsset(:candidates)     AND EXISTS (         SELECT value AS pattern             FROM _pas_nsarray(:patterns)             WHERE title LIKE pattern     )
:candidates
:patterns
v24@?0@"NSMutableSet"8@"NSArray"16
SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END  FROM entityTags AS t CROSS JOIN entity     ON entity.entityKey = t.entityKey AND entity.entityType = t.entityType WHERE t.tag = :interactionTag     AND t.entityType = :pseudoContact     AND NOT hasInhumanTag(entity.tags) AND tagsHaveEscapedTag(entity.tags, :isSentTag) = :isMe
:interactionTag
:pseudoContact
v24@?0@"NSArray"8@?<B@?@"SGContact">16
B24@?0@8@"NSDictionary"16
@"_PASTuple2"16@?0@"SGContact"8
@"SGContact"16@?0@"_PASTuple2"8
@"SGContactMatch"16@?0@"SGContact"8
SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END , docid, entityId, matchinfo(entity_fts, "pcb") AS matchinfoData FROM entity_fts CROSS JOIN entity ON entity.id = entityId WHERE entity_fts.messagingTerms MATCH :match    AND entity.entityType = :pseudo   AND NOT hasInhumanTag(entity.tags)    AND NOT entity.curatedDupe
WITH matches AS (    SELECT entity.id as id, CASE WHEN entity.entityType = :pseudo OR entity.masterEntityId < 0 THEN entity.id ELSE entity.masterEntityId END as entityId        FROM entityTags CROSS JOIN entity ON entity.entityKey = entityTags.entityKey AND entity.entityType = entityTags.entityType        WHERE entityTags.tag GLOB :tagPrefix) SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END , matches.id, matches.entityId FROM matches CROSS JOIN entity ON matches.id = entity.id    WHERE entity.entityType = :pseudo        AND NOT hasInhumanTag(entity.tags)         AND NOT entity.curatedDupe
:tagPrefix
@"SGContactMatch"16@?0@"NSNumber"8
@"NSString"16@?0@"NSValue"8
SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END , entity_fts.docid, entity_fts.entityId, matchinfo(entity_fts, "pcb")    FROM entity_fts CROSS JOIN entity ON entity_fts.entityId = entity.id    WHERE entity_fts MATCH :match        AND entity.entityType = :pseudo        AND NOT hasInhumanTag(entity.tags)        AND NOT entity.curatedDupe
SELECT fts3_tokenizer(:tokenizerName)
:tokenizerName
ab_cf_tokenizer
\(\s*tokenize=ab_cf_tokenizer\s+language="([^\"]*?)"\s+collator="([^\"]*?)",
error instantiating argumentsPattern: %@
language
collator
end >= start
v16@?0@"SGSqlEntityStoreTokenizerGuardedData"8
SELECT DISTINCT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END  FROM entity WHERE entity.entityType = :pseudo AND NOT hasInhumanTag(entity.tags) AND NOT entity.curatedDupe ORDER BY entity.id DESC LIMIT :limit 
searchString
Invalid response from suggestContactMatchesByContactDetailTag
@"SGContactMatch"16@?0@"NSArray"8
SELECT CASE WHEN e.masterEntityId > 0 THEN e.masterEntityId WHEN e.groupId > 0 THEN e.groupId ELSE e.id END  FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityType = :entityType AND e.entityKey = :entityKey
 AND ep.parentKey = :parentKey
SELECT CASE WHEN e.masterEntityId > 0 THEN e.masterEntityId WHEN e.groupId > 0 THEN e.groupId ELSE e.id END  FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityType = :entityType AND e.entityKey = :entityKey AND ep.extractionType != :messagesMeCard
Uninitialized identity key
SELECT CASE WHEN entity.masterEntityId > 0 THEN entity.masterEntityId ELSE entity.id END  FROM entity WHERE id = :entityId
-[SGSqlEntityStore storageContactByRecordId:withSnippets:]_block_invoke
SGSqlEntityStore.m
masterEntityIds.count==1
contactDetailTag.isContactDetail
@16@?0@"NSArray"8
@"NSArray"16@?0@"NSArray"8
SELECT id FROM entity WHERE entityType = :pseudo AND masterEntityId = :masterEntityId AND id != masterEntityId
@"SGStorageEvent"24@?0@"SGStorageEvent"8@"SGStorageEvent"16
@"SGStorageEvent"16@?0@"SGStorageEvent"8
SELECT entityId, fieldValues FROM confirmedFieldValues WHERE entityId IN _pas_nsarray(:ids)
@"NSNumber"16@?0@"SGStorageEvent"8
confirmedFieldValues
fieldValues
UPDATE confirmedFieldValues SET maybeChanged=0 WHERE entityId IN _pas_nsarray(:ids)
AND title LIKE :prefix ESCAPE '!'
 AND id IN (SELECT entityId FROM confirmedFieldValues WHERE maybeChanged=1)
WHERE (e.floatingRange = 0 AND ((:queryStart == e.timeRangeStart) OR (NOT (:queryStart >= e.timeRangeEnd OR :queryEnd <= e.timeRangeStart))) OR e.floatingRange = 1 AND ((:fltQueryStart == e.timeRangeStart) OR (NOT (:fltQueryStart >= e.timeRangeEnd OR :fltQueryEnd <= e.timeRangeStart))))AND e.entityType = :pseudoEventType AND e.state != :deleted 
 ORDER BY e.timeRangeStart ASC LIMIT :limit
:queryStart
:queryEnd
:fltQueryStart
:fltQueryEnd
:pseudoEventType
SELECT e.id FROM entity AS e INNER JOIN entityParentage AS ep ON e.id=ep.childId WHERE e.entityKey=:entityKey AND e.entityType=:entityType AND ep.parentKey
=:parentKey
 IS NULL
NotFound
Could not find duplicateKey
maybeChanged
SELECT fieldValues FROM confirmedFieldValues WHERE entityId=?
DELETE FROM confirmedFieldValues WHERE entityId=?
SELECT c.fieldValues FROM confirmedFieldValues AS c INNER JOIN entity AS e ON c.entityId = e.id INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityKey = :entityKey AND e.entityType = :entityType AND ep.parentKey = :parentKey
realtimeEvent.event.uniqueKey
Could not load event to confirm (recordId=%@)
Could not load event to reject (%@)
Could not load reminder to confirm (recordId=%@)
Could not load reminder to reject (recordId=%@)
Could not load reminder to reject (SGDuplicateKey=%@)
@"NSMutableSet"16@?0@"SGEntityTag"8
SELECT array.rowid, entityKey, entityType, parentKey FROM entityTags JOIN _pas_nsarray(:tagNames) AS array ON entityTags.tag == array.value UNION ALL SELECT array.rowid, key, :emailEntityType, NULL FROM emailTags JOIN _pas_nsarray(:tagNames) AS array ON emailTags.tag == array.value
:tagNames
@"NSString"16@?0@"SGEntityTag"8
:emailEntityType
@"SGEntityTag"16@?0@8
tags.count != 0
SELECT b.entityKey, b.entityType, b.parentKey FROM entityTags AS i CROSS JOIN entityTags AS b ON b.duplicateKeyHashBlob=i.duplicateKeyHashBlob WHERE b.tag=:interactionBundleIdTag AND i.tag IN _pas_nsarray(:tags)
:interactionBundleIdTag
:tags
SELECT key FROM emailMetadata WHERE unlikely(downloadState = :requested) ORDER BY creationTimestamp DESC LIMIT :limit
:requested
UPDATE emailMetadata SET downloadState = :resolved WHERE key IN _pas_nsarray(:keys)
:resolved
@"NSString"16@?0@"SGEmailKey"8
DELETE FROM contactDetails
SELECT %@ FROM %@
NULL
itemReferenceIdentifier
itemReferenceName
epoch
plain
schemas
accountHandles
accountServerIdentifier
webKitPlainText
webKitPlainTextDDResult
extractionMode
geocodingMode
canonical
address+poi
poiGeocodingFilters
ekEventAvailabilityState
com.apple.reversetemplated
segments
@"NSString"28@?0@"NSDictionary"8@"<NSObject>"16B24
CountryCode
transportation
cancelled
iata
carrier
flightDataResolvedCarrierCode
flightDataResolvedCarrierName
destination
flightMissingCarrierCode
routeDesignation
@"NSArray"16@?0@"NSString"8
[flightNumbers containsObject:@([transportationDict[@"routeDesignation"] integerValue])]
flightDataResolvedAirportCode
flightMissingData
flightDataResolvedAirportName
flightDataResolvedAirportTZ
flightMissingTZForAirportCode
templateShortName
flightHasSameOriginAndDestination
emptyGroupId
fallbackGroupId
notes
dateTime
[redacted]
[unavailable]
%@... (length %lu)
dateParseIssue
flightDataResolvedAirportNameForLocation
flightDataResolvedAirportCoordinates
v32@?0@8@16^B24
pastEvent
B32@?0@8Q16^B24
minDurationForAllDayIfNoTz
convertedToAllDay
noTimezone
-[SGExtractionDissector entityForOutputItem:withSiblings:parentEntity:outputExceptions:outputInfos:interaction:]
SGExtractionDissector.m
outputWithoutSchema
categoryType
v32@?0@"SGSimpleMailHeaderKeyValue"8Q16^B24
v12@?0B8
v40@?0@"NSArray"8@"NSDictionary"16@"NSArray"24@"NSDictionary"32
v16@?0@"NSMutableDictionary"8
emailDownloadRequested
needsSourceVerification
templateExceptionMessage
jsOutputLogs
outputUsecase
v16@?0@"NSDictionary"8
v16@?0@"SGDOMParserResult"8
candidates
candidateTaggedCharacterRanges
jsEntity
monochrome
ddResult
com.internal.mail.checkinActivity
http://schema.org/CheckInAction
NoTeamId
lastSGMIModelGroundTruthVersion
lastSGMIModelInferenceVersion
lastSGMIUpdaterProcessingDate
earliestNextSGMIUpdaterProcessingDate
totalSGMIUpdaterMailsProcessed
kTotalSGMITruePositivePredictions
kTotalSGMIFalsePositivePredictions
kTotalSGMITrueNegativePredictions
kTotalSGMIFalseNegativePredictions
@"NSNumber"16@?0@"SGMIFeatureSubmodelLink"8
v24@?0@"SGMIFeatureVector"8^B16
SGMISubmodelsManager - Purge deleted emails references
v32@?0@"NSNumber"8@"NSArray"16^B24
SGReverseTemplatesJSDataDetectors.m
yyyy'-'MM'-'dd'T'HH':'mm':'ssZZZZZ
yyyy'-'MM'-'dd'T'HH':'mm':'ss
yyyy'-'MM'-'dd
No locale found for: %@
extractions
Could not create DDScanner
Could not create DDScanner for: %@
ddType
iso8601
endIso8601
components
metadata
B16@?0^{__DDResult=}8
Contact
ContactName
AddressBookContactName
JobTitle
CompanyName
ZipCode
AirlineName
FlightNumber
https?://.{0,16}(?:%@)
)|(?:
<SGMIWarningsConfig (%tu languages)>
  %@: %@
v32@?0@"NSString"8@"SGMIWarningsDetectors"16^B24
attachmentLinkDetectionRegex: %@
defaultTimeIntervalToStartWarningExposition: %.0f
defaultTimeIntervalForAWarning: %.0f
defaultTimeIntervalToEndWarningExposition: %.0f
bodyAnalysisSamplingFactor: %.0f%%
logWarningSignatureStats: %@
SGPseudoReminderKey.m
[SGPseudoReminderKey groupId:%@
-[SGDCKLocation StringAsLocationType:]
SGDCKLocation.m
newVertex
mincut.m
g && g->vertices
digraph g {
    V%u -> V%u [label="%0.2f"];
mincut
maxflow > 0
newEdge
capacity > 0.0
addEdgeToIncidenceList
SGMIError
nil@nil.invalid
<non_dyadic_conversation>
<unassigned_mailbox>
SGMIFeatureVector.m
featureType == SGMIFeatureType_Number || featureType == SGMIFeatureType_NumberArray
FeatureVector for messageId %@: (%ld features)
v32@?0@"<EMContentItem>"8Q16^B24
@"NSString"16@?0@"SGSimpleNamedEmailAddress"8
v32@?0@"NSArray"8@"NSString"16@"NSMutableArray"24
%@-size%@-count%@
5to9
v32@?0@"NSNumber"8Q16^B24
_PASTuple2<NSString *,NSString *> *SGCleavePhoneNumberAndExtension(NSString *__strong)
SGDataNormalization.m
phoneNumber
BOOL SGPhoneNumberMatchInSet(NSMutableDictionary<NSString *,NSString<SGNormalizedPhoneNumber> *> *__strong, NSString *__strong, NSArray<NSString<SGNormalizedPhoneNumber> *> *__strong)
needle
10111
10177
%@ %@ %@ %@ %@ %@
v16@?0^{__DDScanner=}8
interactionId
interactionGroupId
interactionBundleId
reservationItemReferences
reservationContainerReference
intentResponseUserActivityString
interactionTeamId
^(?:hi\s+|hey\s+|yo\s+)([a-zA-Z]+)(?:(?:(?:,|\.|\s+)*$)|(?:(?:,|\.)+))
/tmp/nicknames.json
{contactId: %@, nickName: %@, count: %d}
SGAppLaunchHistory.m
fromStatus
toStatus
SGM2HarvestBudgetStatusUnknown
SGM2HarvestBudgetStatusPower
SGM2HarvestBudgetStatusBattery
SGM2HarvestBudgetStatusExhaustedNumberOfOperations
SGM2HarvestBudgetStatusExhaustedElapsedSeconds
SGM2HarvestBudgetStatusExhaustedDuet
SGPipelineEnrichment.m
identityKey
parent
The parent entity cannot be a contact
com_apple_mail_repliedTo
com_apple_mail_messageID
com_apple_mail_conversationID
contentType == "public.email-message" && InRange(kMDItemContentCreationDate, $time.now(-%lu), $time.now(-%lu))
contentType == "public.email-message" && InRange(kMDItemContentCreationDate, $time.now(-%lu), $time.now(-%lu)) && kMDItemMailboxes == "mailbox.sent"
_kMDItemExternalID == "%@"
contentType == 'public.email-message'
%@ == * && InRange(kMDItemContentCreationDate, $time.now(-%lu), $time.now)
http://schema.org/Person
reservationNumber
bookingTime
http://schema.org/ReservationCancelled
http://schema.org/ReservationPending
http://schema.org/ReservationHold
underName
SGMetricsHelper-asyncQueue
SGDeliveryKey.m
trackingNumber
[SGDeliveryKey externalIdentifier: %@]
SurnamePrefix
CompositeSpanishFirstname
CommonSpanishSurnamePrefix
MultiCharChineseSurname
SingleCharChineseSurname
koreansurnames
SGIdentityName.m
Could not generate file path from koreansurnames.txt
Could not load list of korean surnames from koreansurnames.txt
Could not load components separated by new line.
ja_surname.trie
failed to get asset path for ja_surname.trie
-[SGIdentityName initWithJapaneseName:]_block_invoke_2
Could not load ja_surname trie
v16@?0@"_PASAsset2"8
Jpan
Traditional-Simplified
firstname
middlename
surname
v40@?0@"NSString"8@"NSString"16@"NSData"24@"NSError"32
 not
v24@?0@"CSSearchableItem"8^B16
Internal
textContent
mailConversationIdentifier
accountType
isStoredEncrypted
contentProtection
attachments
test-source
@"NSArray"8@?0
@"SGDataDetectorMatchesWithSignatureRange"8@?0
@16@?0@"NSString"8
dateIsCorrect
isFromCongratulation
didRegexTrigger
offset
didResponseKitTrigger
use_case
provider_name
tickets
restaurant
NoEvent
http://schema.org/MusicEvent
<SGStructuredEventClassification category:%@ useCase:%@ locale:%@>
SGJournal.m
entry
@"SGStorageEvent"16@?0@"SGJournalEntry"8
observer
!_observersFrozen
_observersFrozen
SGContactEntity.m
SGEntityTypeIsContact(entity.duplicateKey.entityType)
SGRawKey.m
<SGRawKey: %@>
%@ . 
SUBJECT
SGDOMParserResult.m
NSString
plainText
SGTaggedCharacterRange
SGPipeline-_resetCachesAndModels-pressure
SGPipeline-_delayedResetCachesAndModels
+[SGPipeline sharedBackgroundProcessingQueue]
+[SGPipeline sharedBackgroundStorageQueue]
Dependencies unknown for dissector class: %@
@"SGPipelineDissector"16@?0#8
@"NSMutableArray"16@?0@"NSArray"8
v32@?0@"SGPipelineDissector"8@"NSArray"16^B24
@?<v@?>16@?0@"SGPipelineDissector"8
Unknown entity type
-[SGPipeline geocodeOperation:withDependencies:]_block_invoke_2
SGPipeline.m
[enrichment.timeRange isValidAllDayRange]
B16@?0@"SGPipelineEnrichment"8
bundleIdentifier and uniqueIdentifier are required if adding a Spotlight reference.
com.apple.suggestions.fulldownloadrequested
Store
dissect
dissectArrayAndWrite
dissectArray
dissectEntityAndWrite
dissectEntity
@"NSOperation"16@?0@"NSArray"8
zh-Hans
v40@?0@"NSString"8{_NSRange=QQ}16^B32
Job stack overflow.
Unexpected opcode: 
 arg 
Bad arg in kInstCapture: 
SGContactDetailKey.m
<SGContactDetailKey identityKey:%@ label:%@ value:%@>
SGPseudoContactKey.m
[SGPseudoContactKey identityKey:%@]
text/vcard
text/calendar
@16@?0@"BMContentAttachment"8
application
image
audio
video
<%@ type:%@ path:%@>
test
testpath
SGTextMessageBirthdayCongratsModel
CG=3&NG=1&FV=1.1
lowerCase
stripNonBaseCharacters
replaceAllWhitespaceWithSpaces
transformFullwidthToHalfwidthASCII
removePunctuationWithExceptions
removeSymbols
mergeNumbersSeparatedByASCIISpace
replaceNumbersWithString
replaceLinksWithString
separateCharacter
mergeAnyConsecutiveCharacters
trimWhitespace
@"SGLocation"16@?0@"SGStorageLocation"8
message:
when
<SGStorageEvent title:%@ dupKey:%@ when:%@>
-[SGStorageEvent geocodedEventWithStartDate:startTimeZone:endDate:endTimeZone:locations:]
SGStorageEvent.m
!startTimeZone == !endTimeZone
q24@?0@"SGStorageLocation"8@"SGStorageLocation"16
SGDSpotlightReceiver.m
manager
SGDSpotlightReceiver.purgeAndDeleteDropbox
@"_PASTuple2"8@?0
v16@?0@"SGXPCResponse"8
v16@?0@"_PASTuple2"8
SGDSpotlightReceiver.deleteDomainIdentifiersDropbox
@"NSMutableDictionary"8@?0
SGDSpotlightReceiver.deleteInteractionBundleIdDropbox
v16@?0@"NSMutableSet"8
SGDSpotlightReceiver.deleteInteractionIdDropbox
SGDSpotlightReceiver.deleteInteractionGroupIdDropbox
@"CSSearchableItem"8@?0
addUserAction-plugins
v24@?0@"_PASTuple2"8^B16
v24@?0@"NSMutableDictionary"8^B16
kUTTypeEmailMessage
kUTTypeMessage
kUTTypeText
kUTTypeContent
kUTTypeToDoItem
com.apple.safari.history
v24@?0@"NSMutableSet"8^B16
persistentIdentifiers
com.apple.proactive.SocialHighlightsRefreshed
SGContactPipelineHelper.m
v24@?0@"CNContact"8^B16
v32@?0@"NSString"8Q16^B24
v16@?0@"NSNotification"8
B16@?0@"CNContact"8
B16@?0@"SGContact"8
SGCuratedContactMatcher.m
Asking to stopOnNewDetail or stopOnMatchedDetail does not make sense alonside providing newDetails or matchedDetails
@16@?0@"CNLabeledValue"8
-[SGDCKEvent StringAsCategoryType:]
SGDCKEvent.m
extraKey
schemaOrg
interactionInfo
parentEntityType
traditions
inversionRate
trieName
Tries
confidenceThreshold
double inversionProbabilityEstimate(double, double, double)
SGNameInversionPredictor.m
Probabilities must be in [0, 1]
Contradictory parameters.
SGEmailKey.m
<SGEmailKey source:%@ messageId:%@>
<SGMITokenCounts[%@]: %@ salient ; %@ regular>
:extractionType
:modelVersion
:confidence
INSERT INTO extractionInfos (extractionType, modelVersion, confidence) VALUES (:extractionType, :modelVersion, :confidence)
SELECT extractionType, modelVersion, confidence FROM extractionInfos WHERE id = :primaryKey
LOCALE
NAME_TAGGING
TRUST_CORENLP
PERSONAL_NAME_MAPPING
PUNCTUATION_MAPPING
TARGET
PHONE
ADDRESS
SG_TARGET_ADDRESS
EMAIL
NAME
FEATURE
PHONENUMBER
LINK
DATE
FIRSTNAME
LASTNAME
FULLNAME
NUMBER
SYMBOL
BELONGINGTO
BELONGING
CALLTYPE
PHONETYPE
ENTITYTYPE
ADDRESSTYPE
RECENCY
EMAILTYPE
com.apple.MobileAsset.LinguisticData.ma.new-asset-installed
SGTokenizerMappingTransformer.m
-[SGTokenizerMappingTransformer transform:]_block_invoke
Must be a dictionary
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
com.apple.suggestions.ml.tokenizing
v40@?0{?={?=qq}Q}8^B32
invalid:nomail
EKEventStore+Suggestions.m
Unhandled message class %@
B16@?0@"EKEvent"8
Concat of 
RE2: unexpected op: 
Bad call to ParseState::ParsePerlFlags
AddFoldedRange recurses too much.
Bad hex digit 
TARGET_MAPPING
PHONE_MAPPING
ADDRESS_MAPPING
DATE_MAPPING
SGEntityMatchingTransformer.m
Unexpected input: %@. %@ requires dictionary with SG_MODEL_INPUT_TEXT key.
Unexpected input: %@. %@ requires SG_MODEL_DISABLE_TARGET_MAPPING to be setif neither SG_MODEL_TARGET_DD_MATCH and SG_MODEL_INPUT_TARGET_RANGE are provied.
@"NSString"16@?0@"SGDataDetectorMatch"8
migrator.%@.full.%lu_to_%lu
memory
disk
com.apple.suggestions.databasemigration.migratorQueue
com.apple.suggestions.databasemigration.
SELECT name FROM sqlite_schema WHERE type='table' AND NOT name LIKE 'sqlite_%'
name
%@FailedUnmigration
Failed to clear database: %@
version
PRAGMA table_list
shadow
Failed to drop table %@: %@
migration_
entityId INTEGER, messagingTerms TEXT COLLATE NOCASE, ftsTerms TEXT COLLATE NOCASE, notindexed=entityId
SELECT MAX(docid) FROM %@
{_PASDBIterAction_=B}16@?0^{sqlite3_stmt=}8
DatabaseMigrator-FTS-queue
INSERT INTO %@ (docid, entityId, messagingTerms, ftsTerms) SELECT docid, entityId, messagingTerms, ftsTerms FROM %@ WHERE docid BETWEEN :batchStart AND :batchStop   AND docid NOT IN (SELECT docid FROM %@)
:batchStart
:batchStop
v16@?0^{sqlite3_stmt=}8
ALTER TABLE %@ RENAME TO %@
entity_fts_from
SELECT MIN(docid) FROM %@ WHERE docid NOT IN (SELECT docid FROM %@)
SGSqlEntityStore+DatabaseMigrator.m
skipToEntityVersion != UINT32_MAX
skipToSnippetsVersion != UINT32_MAX
legacy
old (%lu < %d)
migrator.%@.steps.%lu_to_%lu
SELECT rowId, task FROM postMigrationTasks ORDER BY rowId
task
postMigrationTasks
DELETE FROM postMigrationTasks WHERE rowId == :rowId LIMIT 1
:rowId
com.apple.iChat
SG_UPDATING_SKIP_QUERIES
ATTACH DATABASE :snippetPath AS snippets
:snippetPath
INSERT OR REPLACE INTO snippets.snippets (entityId, title, content, contentRangeOfInterest) SELECT id, title, content, contentRangeOfInterest FROM entity WHERE entityType = :entityType 
INSERT OR REPLACE INTO snippets.snippets (entityId, title, content, contentRangeOfInterest) SELECT id, NULL, content, contentRangeOfInterest FROM entity WHERE entityType != :entityType 
UPDATE entity SET content=NULL, contentRangeOfInterest=NULL
UPDATE entity SET title=NULL WHERE entityType = ?
ALTER TABLE entity ADD COLUMN author TEXT
CREATE TABLE IF NOT EXISTS entityParentage (id INTEGER PRIMARY KEY AUTOINCREMENT,parentKey TEXT,childId INTEGER NOT NULL,duplicateKeyHash TEXT NOT NULL,extractionType INTEGER,sourceKey TEXT,UNIQUE(parentKey, childId))
CREATE INDEX IF NOT EXISTS entityParentageParentKeyIdx on entityParentage(parentKey)
CREATE INDEX IF NOT EXISTS entityParentageChildIdx on entityParentage(childId)
CREATE UNIQUE INDEX IF NOT EXISTS entityParentageDuplicateKeyHashIdx on entityParentage(duplicateKeyHash, extractionType)
CREATE TABLE IF NOT EXISTS serializedContacts (id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER,data BLOB)
CREATE UNIQUE INDEX IF NOT EXISTS serializedContactsEntityIdIdx ON serializedContacts(entityId)
cnContactsToSgContacts
CREATE TABLE IF NOT EXISTS cnContactsToSgContacts (id INTEGER PRIMARY KEY AUTOINCREMENT,cnContactIdentifier TEXT,maxEntityId INTEGER,entityIds TEXT)
CREATE UNIQUE INDEX IF NOT EXISTS cnContactsToSgContactsCIdIdx ON cnContactsToSgContacts(cnContactIdentifier)
ALTER TABLE entity ADD COLUMN downloadState INTEGER DEFAULT 0
entityDownloadStateIdx
CREATE INDEX entityDownloadStateIdx on entity(downloadState)
contentHash
ALTER TABLE entity ADD COLUMN contentHash TEXT
entityContentHashIdx
CREATE UNIQUE INDEX IF NOT EXISTS entityContentHashIdx ON entity(contentHash)
ALTER TABLE entity ADD COLUMN groupId INTEGER DEFAULT -1
groupIdIdx
CREATE INDEX IF NOT EXISTS groupIdIdx on entity(groupId)
entityTags
ALTER TABLE entityTags ADD COLUMN duplicateKeyHash TEXT NOT NULL DEFAULT ''
ix_entityTags_dupKeyHash
CREATE INDEX IF NOT EXISTS ix_entityTags_dupKeyHash ON entityTags(duplicateKeyHash)
DROP TABLE IF EXISTS identityPhonesDeduped
CREATE TEMP TABLE identityPhonesDeduped AS SELECT DISTINCT * FROM identityPhones
INSERT INTO identityPhones SELECT * FROM identityPhonesDeduped
DROP TABLE identityPhonesDeduped
hashHexToBlob
UPDATE entity SET contentHashBlob = hashHexToBlob(contentHash) WHERE contentHash IS NOT NULL AND contentHash != ''
UPDATE entityTags SET duplicateKeyHashBlob = hashHexToBlob(duplicateKeyHash) WHERE duplicateKeyHash IS NOT NULL AND duplicateKeyHash != ''
UPDATE entityParentage SET duplicateKeyHashBlob = hashHexToBlob(duplicateKeyHash) WHERE duplicateKeyHash IS NOT NULL AND duplicateKeyHash != ''
DELETE FROM entity_fts WHERE messagingTerms GLOB :semicolon
:semicolon
*[0-9;];[0-9;]*
UPDATE entity SET masterEntityId = -1 WHERE entityType IN (:pseudo, :unrec)
:pseudo
:unrec
INSERT INTO emailMetadata     (id, key, type, sourceKey, author, creationTimestamp, updateTimestamp, indexTimestamp, lastSeenTimestamp,      tags, state, downloadState, harvestedOnBuild) SELECT e.id, e.entityKey, e.entityType, ep.sourceKey, e.author, e.creationTimestamp, e.updateTimestamp, e.indexTimestamp,     e.lastSeenTimestamp, e.tags, e.state, e.downloadState, e.harvestedOnBuild FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityType IN (:email, :textMessage)
:textMessage
DELETE FROM entityParentage WHERE childId IN (SELECT id FROM entity WHERE entityType IN (:email, :textMessage))
DELETE FROM entity WHERE entityType IN (:email, :textMessage)
INSERT INTO emailTags (key, type, tag) SELECT entityKey, entityType, tag FROM entityTags WHERE entityType IN (:email, :textMessage)
SELECT id FROM emailMetadata
INSERT INTO emailSnippets (emailId, title, content) SELECT entityId, title, content FROM snippets WHERE entityId = :rowId
DELETE FROM snippets WHERE entityId = :rowId
entity_fts_docidfix_backup
SELECT id, entityType, title, groupId, entityKey FROM entity 
DROP TABLE entity_fts_docidfix_backup
SELECT key FROM emailMetadata WHERE type = :interactionType LIMIT :batchSize
:interactionType
:batchSize
serializedInteractionKey
B16@?0@"SGKeyValueCacheFile"8
SELECT id FROM entity WHERE entityType = :entityType LIMIT :limit
SELECT id, whenRange FROM events
DELETE FROM events WHERE id IN _pas_nsarray(:ids)
DETACH DATABASE snippets
void hashHexToBlob(sqlite3_context *, int, sqlite3_value **)
-[SGDetectedAttributeML addSessionForTrainingWithSource:label:language:objective:spotlightRef:embeddedFeaturizer:]
SGDetectedAttributeML.m
[vector isKindOfClass:[PMLSparseVector class]]
B32@?0@"SGTextMessageItem"8Q16^B24
@"SGModelFeatures"8@?0
v16@?0@"SGBinaryClassificationModel"8
NEGATIVE_SAMPLE_CHOPPABLE_START
v24@?0Q8q16
v24@?0Q8Q16
B8@?0
SGModelObjective convertSGDDMatchToModelObjective(SGDataDetectorMatchType, BOOL)
Unknown model objective for SGDataDetectorMatchType = %lu and SGTextMessage
Unknown model objective for SGDataDetectorMatchType = %lu for non SGTextMessage
SGContactSharingLabel firstPersonContactSharingLabelFromMatchType(SGDataDetectorMatchType)
Contact sharing model doesn't support matchType = %lu
SGContactSharingLabel thirdPersonContactSharingLabelFromMatchType(SGDataDetectorMatchType)
SGMIMessageMissingEntityAnalyzer-processing
SGMIMessageMissingEntityAnalyzer-timeout
(null)
http
B16@?0@"SGMIWarningsDetectionRegexMatch"8
@"NSString"16@?0@"CSPerson"8
group
list
%@-0000%@
Mail Previous Recipients for omittedRecipient Queue
v24@?0@"NSArray"8@"NSError"16
found a match
did not find any match
still
{SGRe2IterAction_=B}24@?0^{?={_NSRange=QQ}*}8@"SGRe2"16
i24@?0r^v8r^v16
<RE2 %@>
SGRe2.mm
subregexps
regexpUtf8
<RE2-lazy(%i) %@>
SGRe2 *getInternal(NSData *__strong)
Could not initialize regexp: %@
coreAlternative
coreAlternative2
coreAlternative3
dataDetectorMappedAdditions
dataDetectorAdditions
\b%@\b
<SGMIWarningsDetectionRegexes>
  subject:%@
  body:%@
  dataDetectorMappedAdditions:'%@'
  dataDetectorAdditions:'%@'
@"NSString"16@?0@"NSRegularExpression"8
(?:(?:(?<!\\)\.)|\\w)(?:[*\+\?]|\{\d*\,\d*\})?|(?:\[[^\]]+\](?:[*\+\?]|\{\d*\,\d*\}))
(?<G%tu>%@)
v32@?0@"NSTextCheckingResult"8Q16^B24
G%tu
[PRIVATE]>(ff)
[%@]>(%@)
<SGMIWarningsDetectionRegex with %@ private groups>
Pattern:'%@'
<SGMIWarningsDetectors>
    attachment:%@
    recipientConservative:%@
    recipient:%@
    followUpOnOutgoingMailsQuestions:%@
    followUpOnOutgoingMailsAsks:%@
    followUpOnIncomingMails:%@
SGPlainTextContentCursor.m
message.textContent
predicate
Uninitialized SGIdentityKeyType
SGIdentityKeyTypeEmail
SGIdentityKeyTypeContact
SGIdentityKeyTypeUnrecognizedPhone
SGIdentityKeyTypeInstantMessageAddress
SGIdentityKeyTypeSocialProfile
UNKNOWN IDENTITY KEY TYPE!
SGIdentityKey.m
person.handles.count > 0
parts.count == 2
Unknown type: %@
[SGIdentityKey type:%@ content:%@]
Calling email selector on identity with no email address.
Identity key claims to be an email address but it does not have one
Calling instant message selector on identity with no instant message address.
Identity key claims to be an instant message address but it does not have one
Calling socialProfile selector on identity with no social profile.
Identity key claims to be a social profile but it does not have one
Should not ask for a unique identifier when this is neither an email nor an instance message address
Calling phone number selector on identity with no phone number.
Identity key claims to be a phone number but it does not have one
_type == SGIdentityKeyTypeContact
NSString *keyForIdentityKeyType(SGIdentityKeyType)
No key for SGIdentityKeyTypeUninitialized. Initialize it.
No key for type value %d
SGMicrodataParser.m
libxml tag names should always be lowercase during HTML parsing
libxml attribute names should always be lowercase during HTML parsing
itemprop
itemscope
itemref
itemtype
embed
iframe
track
area
link
object
meter
datetime
&#47;
com.apple.suggestions.spotlightCommander.reimportRequests
public.email-message
public.message
kMDItemTitle
kMDItemContentCreationDate
kMDItemStartDate
kMDItemSubject
job:%@:%@:%d:%d:%@
@"IPPerson"16@?0@"CSPerson"8
-[SGNaturalLanguageDissector addEnrichmentForEvents:forMessage:toEntity:]
SGNaturalLanguageDissector.m
[timeRange isValidAllDayRange]
v16@?0@"NSArray"8
@"NSString"16@?0@"IPMessage"8
v28@?0@"IPMessage"8@"NSArray"16B24
SELECT domainIdentifier FROM entityReferences WHERE bundleIdentifier = ? AND uniqueIdentifier = ? LIMIT 1
SELECT 1 FROM entityReferences WHERE bundleIdentifier = ? AND uniqueIdentifier = ? LIMIT 1
SGSqlEntityStore+Spotlight.m
Unsupported table id %lu
SELECT key, type FROM emailMetadata WHERE id IN _pas_nsindexset(:emailIndexSet)
:emailIndexSet
SELECT e.entityKey, e.entityType, ep.parentKey FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.id IN _pas_nsindexset(:nonEmailIndexSet)
:nonEmailIndexSet
entityKey
entity
entityType
parentKey
entityParentage
Email entities should not have a parent
SELECT id FROM emailMetadata WHERE key = :key
SELECT e.id FROM entity AS e INNER JOIN entityParentage AS ep ON e.id = ep.childId WHERE e.entityKey = :entityKey AND e.entityType = :entityType AND ep.parentKey
:entityType
:entityKey
:parentKey
SELECT state, tags FROM emailMetadata WHERE id = :id LIMIT 1
SELECT DISTINCT entityId FROM entityReferences WHERE entityId BETWEEN ? AND ?
v24@?0Q8^B16
@"SGEmailKey"16@?0@"SGDuplicateKey"8
v16@?0@"NSMutableOrderedSet"8
:bid
:uids
SELECT DISTINCT entityId FROM entityReferences WHERE bundleIdentifier = :bid AND uniqueIdentifier IN _pas_nsarray(:uids)
entityReferences
DELETE FROM entityReferences WHERE bundleIdentifier = :bid AND uniqueIdentifier IN _pas_nsarray(:uids)
SELECT id, entityId FROM entityReferences WHERE bundleIdentifier = ? AND ((domainIdentifier GLOB ?)
 OR (domainIdentifier GLOB ?)
Encountered repeated message ID for deletion
DELETE FROM entityReferences WHERE id IN _pas_nsindexset(:affectedReferenceIds)
:affectedReferenceIds
v24@?0@"NSArray"8^B16
SELECT id, entityId FROM entityReferences WHERE bundleIdentifier = ?
DELETE FROM entityReferences WHERE id BETWEEN ? AND ?
SELECT id, entityId FROM entityReferences WHERE bundleIdentifier is null
SELECT 1 FROM harvestQueueTombstones WHERE bundleIdentifier=:bid AND uniqueIdentifier IS NULL AND domainIdentifier IS NULL
SELECT domainIdentifier FROM harvestQueueTombstones WHERE bundleIdentifier=:bid AND uniqueIdentifier IS NULL AND domainIdentifier IN _pas_nsset(:overlappingDomainIdentifiers)
:overlappingDomainIdentifiers
domainIdentifier
harvestQueueTombstones
INSERT OR IGNORE INTO harvestQueueTombstones (bundleIdentifier, uniqueIdentifier, domainIdentifier) VALUES (:bid, NULL, :did)
:did
DELETE FROM harvestQueueTombstones WHERE bundleIdentifier=:bid AND uniqueIdentifier IS NULL AND (domainIdentifier >= :did || '.') AND (domainIdentifier < :did || '/')
uniqueIdentifiers
INSERT OR IGNORE INTO harvestQueueTombstones (bundleIdentifier, uniqueIdentifier, domainIdentifier) SELECT :bid, value, NULL FROM _pas_nsarray(:uids) WHERE NOT EXISTS (SELECT 1 FROM harvestQueueTombstones WHERE bundleIdentifier=:bid AND uniqueIdentifier=value AND domainIdentifier IS NULL)
DELETE FROM harvestQueueTombstones WHERE bundleIdentifier = :bid
INSERT OR IGNORE INTO harvestQueueTombstones (bundleIdentifier, uniqueIdentifier, domainIdentifier) VALUES (:bid,NULL,NULL)
DELETE FROM harvestQueueTombstones
         SELECT 1 FROM harvestQueueTombstones WHERE bundleIdentifier=:bid AND uniqueIdentifier IS NULL AND domainIdentifier IS NULL UNION ALL SELECT 1 FROM harvestQueueTombstones WHERE bundleIdentifier=:bid AND uniqueIdentifier=:uid    AND domainIdentifier IS NULL UNION ALL SELECT 1 FROM harvestQueueTombstones WHERE bundleIdentifier=:bid AND uniqueIdentifier IS NULL AND domainIdentifier IN _pas_nsarray(:dids)
:uid
:dids
SELECT entityId, data FROM serializedContacts
 WHERE entityId >= :minEntityId
 ORDER BY entityId LIMIT :limit
:minEntityId
SELECT entityId, data FROM serializedContacts WHERE entityId IN _pas_nsarray(:ids)
:ids
serializedContacts
data
v16@?0@"NSError"8
v24@?0@"NSData"8@"NSError"16
magicUnsubscribeSuggestionSenderDenyList
magicUnsubscribeSuggestionSenderDomainDenyList
totalNumberOfEmailsProcessedForAttachmentDetection
totalNumberOfEmailsProcessedForRecipientDetection
totalNumberOfEmailsProcessedForFollowUpDetection
totalNumberOfWarningsForFollowUpWithPositiveEngagement
totalNumberOfWarningsForFollowUpWithNegativeEngagement
totalNumberOfRaisedMissingAttachmentWarning
totalNumberOfRaisedMissingRecipientWarning
numberOfPredictedAttachmentOnLargeIncomingMailsWithAttachment
numberOfLargeIncomingMailsWithAttachment
numberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachment
numberOfLargeOutgoingMailsWithAttachment
countOnLastRegexSignatureStatsLoggingAction
lastSGMINicknameProcessingDate
q24@?0@"NSString"8@"NSString"16
Invalid SQL identifier (cannot contain interior null). b64 utf16: %@
_zeroTotalIdx
CREATE TABLE %@ (domain TEXT PRIMARY KEY NOT NULL, total INT NOT NULL) WITHOUT ROWID
CREATE INDEX %@ ON %@ (domain) WHERE total IS 0
PRAGMA schema_version
v16@?0@"SGMIDomainCountingTableGuardedData"8
PRAGMA table_info(%@)
total
ALTER TABLE %@ ADD COLUMN %@ DEFAULT 0 NOT NULL
UPDATE
WHERE
IS NOT 0
UPDATE %@ SET total = total - %@ WHERE %@ IS NOT 0 RETURNING 1
ALTER TABLE %@ DROP COLUMN %@
UPDATE %@ SET total = total - %@, %@ = 0 WHERE %@ IS NOT 0 RETURNING 1
ALTER TABLE %@ RENAME COLUMN %@ TO %@
DELETE FROM %@ WHERE total IS 0
You can't commit a negative count
You can't commit counts to both a parent and its child (you can't commit 1 to both foo and foo.bar)
v32@?0@"NSString"8@"NSNumber"16^B24
SELECT 1 FROM _pas_nsdictionary(:domainsAndCounts) WHERE EXISTS (SELECT domain FROM %@ WHERE (domain >= key || '.') AND (domain < key || '/'))
:domainsAndCounts
v16@?0@"_PASSqliteStatement"8
You can't commit counts to a parent domain (this is not allowed: `commit('foo.bar', 1); commit('foo', 1);`)
SELECT 1 FROM _pas_nsset(:parentDomains) WHERE EXISTS (SELECT domain FROM %1$@ WHERE domain = value) AND NOT EXISTS (SELECT domain FROM %1$@ WHERE (domain >= value || '.') AND (domain < value || '/'))
:parentDomains
You can't convert a leaf domain to a parent domain (this is not allowed: `commit('foo', 1); commit('foo.bar', 1);`)
INSERT INTO
(domain,
, total)
SELECT key, value, value FROM _pas_nsdictionary(:domainsAndCascadedCounts) WHERE value != 0
ON CONFLICT(domain)
DO UPDATE SET
+ excluded.total, total = total + excluded.total
:domainsAndCascadedCounts
SELECT domain AS d, total AS t FROM %@ WHERE domain IN _pas_nsarray(:domains)
:domains
[d isEqual:domain]
[self _hasColumn:column]
SELECT %@ FROM %@ WHERE domain = ?
columnCount %tu is too big
SELECT %@, domain FROM %@ WHERE domain IN _pas_nsarray(:domains)
B24@?0@"NSString"8Q16
@"NSString"24@?0@"NSString"8Q16
WHEN %@ THEN %tu
SELECT domain AS d, CASE %@ ELSE -1 END AS c FROM %@ WHERE domain IN _pas_nsarray(:domains)
SELECT domain AS d, total as t FROM %@ WHERE (d >= MAX(:firstChildOfPrefix, COALESCE(:skipTo, ''), COALESCE(:greaterThan, ''))) AND (d IS NOT :greaterThan) AND (d < :firstAfterPrefix) ORDER BY d ASC%@
 LIMIT :limit
:skipTo
:greaterThan
:firstChildOfPrefix
:firstAfterPrefix
lastDot != NSNotFound
SELECT COUNT(*) AS n FROM %@ WHERE domain = :domain OR (domain >= :domain || '.' AND domain < :domain || '/')
:domain
![self _hasColumn:columnName]
[self _hasColumn:columnName]
![self _hasColumn:newColumnName]
[self _hasColumn:donorColumn]
[self _hasColumn:recipientColumn]
@"NSNumber"16@?0@"NSString"8
B24@?0@"NSString"8q16
v16@?0@"NSString"8
DELETE FROM %@ WHERE (domain >= ?1 || '.') AND (domain < ?1 || '/')
-[SGMIDomainCountingTable deleteDomainSelection:]_block_invoke
SGMIFeatureStore.m
columnCount < INT_MAX
%@=%@-_pas_block(:block,%tu)
DELETE FROM
WHERE domain = ? RETURNING
WHERE domain IN _pas_nsarray(:parentDomains)
-[SGMIDomainCountingTable deleteDomainSelection:]_block_invoke_5
index < columnCount
@"NSNumber"16@?0@"NSArray"8
:block
DELETE FROM %@
SGMIFeatureStore-LockState
v12@?0i8
v16@?0@"SGMIFeatureStoreGuardedData"8
SGMIFeatureStore-Journal
features
@"_PASSqliteDatabase"8@?0
sgmijournal
[column characterAtIndex:0] == '_'
could not scan hex feature name in %@
@"SGMITokenCounts"24@?0@"NSString"8Q16
@"NSArray"24@?0@"NSString"8@"NSArray"16
isSalientDomain || [@"r" isEqual:tokenDomainItems[1]]
kTotalNumberOfWarningsForFollowUpWithPositiveEngagement
kTotalNumberOfWarningsForFollowUpWithNegativeEngagement
INSERT INTO signatureStats (emailLanguage, regexLanguage, type, incomingMessage, signature, negativeEngagement, noEngagement, positiveEngagement, blockedWarningCount) VALUES (:emailLanguage, :regexLanguage, :type, :incomingMessage, :signature, :negativeEngagement, 0, :positiveEngagement, 0) ON CONFLICT (emailLanguage, regexLanguage, type, incomingMessage, signature) DO UPDATE SET negativeEngagement = negativeEngagement + :negativeEngagement, positiveEngagement = positiveEngagement + :positiveEngagement, noEngagement = noEngagement - 1
:emailLanguage
:regexLanguage
:type
:incomingMessage
:signature
:negativeEngagement
:positiveEngagement
INSERT INTO signatureStats (emailLanguage, regexLanguage, type, incomingMessage, signature, negativeEngagement, noEngagement, positiveEngagement, blockedWarningCount) VALUES ('*', :regexLanguage, :type, :incomingMessage, :signature, :negativeEngagement, 0, :positiveEngagement, 0) ON CONFLICT (emailLanguage, regexLanguage, type, incomingMessage, signature) DO UPDATE SET negativeEngagement = negativeEngagement + :negativeEngagement, positiveEngagement = positiveEngagement + :positiveEngagement, noEngagement = noEngagement - 1
INSERT INTO signatureStats (emailLanguage, regexLanguage, type, incomingMessage, signature, negativeEngagement, noEngagement, positiveEngagement, blockedWarningCount) VALUES (:emailLanguage, :regexLanguage, :type, :incomingMessage, :signature, :negativeEngagement, :noEngagement, :positiveEngagement, 0) ON CONFLICT (emailLanguage, regexLanguage, type, incomingMessage, signature) DO UPDATE SET negativeEngagement = negativeEngagement + :negativeEngagement, noEngagement = noEngagement + :noEngagement, positiveEngagement = positiveEngagement + :positiveEngagement
:noEngagement
INSERT INTO signatureStats (emailLanguage, regexLanguage, type, incomingMessage, signature, negativeEngagement, noEngagement, positiveEngagement, blockedWarningCount) VALUES ('+', :regexLanguage, :type, :incomingMessage, :signature, :negativeEngagement, :noEngagement, :positiveEngagement, 0) ON CONFLICT (emailLanguage, regexLanguage, type, incomingMessage, signature) DO UPDATE SET negativeEngagement = negativeEngagement + :negativeEngagement,               noEngagement = noEngagement + :noEngagement,               positiveEngagement = positiveEngagement + :positiveEngagement,               blockedWarningCount = blockedWarningCount + min(1, max(0, 1 + negativeEngagement - positiveEngagement - :positiveEngagement                                                                         - :maxAllowedNegativeUserEngagementDiffToExposeAWarning))RETURNING negativeEngagement, positiveEngagement, blockedWarningCount
:maxAllowedNegativeUserEngagementDiffToExposeAWarning
negativeEngagement
positiveEngagement
B32@?0@"SGMailIntelligenceAttachmentProperties"8Q16^B24
INSERT INTO signatureStats (emailLanguage, regexLanguage, type, incomingMessage, signature, negativeEngagement, noEngagement, positiveEngagement, blockedWarningCount) VALUES (:emailLanguage, :regexLanguage, :type, :incomingMessage, :signature, 0, 1, 0, 0) ON CONFLICT (emailLanguage, regexLanguage, type, incomingMessage, signature) DO UPDATE SET noEngagement = noEngagement + 1
INSERT INTO signatureStats (emailLanguage, regexLanguage, type, incomingMessage, signature, negativeEngagement, noEngagement, positiveEngagement, blockedWarningCount) VALUES ('*', :regexLanguage, :type, :incomingMessage, :signature, 0, 1, 0, 0) ON CONFLICT (emailLanguage, regexLanguage, type, incomingMessage, signature) DO UPDATE SET noEngagement = noEngagement + 1
SELECT SUM(negativeEngagement), SUM(noEngagement), SUM(positiveEngagement), SUM(blockedWarningCount) FROM signatureStats
I16@?0@"_PASSqliteStatement"8
SELECT key, value FROM keyValueStore
SELECT emailLanguage, regexLanguage, type, incomingMessage, signature, negativeEngagement, noEngagement, positiveEngagement, blockedWarningCount FROM signatureStats
emailLanguage
signatureStats
regexLanguage
type
incomingMessage
signature
noEngagement
blockedWarningCount
SELECT SUM(positiveEngagement), SUM(noEngagement), SUM(negativeEngagement) FROM signatureStats WHERE (type=:followUpAsk OR type=:followUpQuestion) AND (emailLanguage='+' OR emailLanguage='*')
:followUpAsk
:followUpQuestion
DELETE FROM signatureStats
v32@?0@"NSString"8@"SGMITokenCounts"16^B24
v24@?0@"NSString"8@"NSDictionary"16
v32@?0@"NSString"8@"NSString"16^B24
counts
numberOfTokenEntries
salientCount
regularCount
overallCounts
lastUpdates
en_US
MMM,dd
v32@?0@"NSString"8@"NSArray"16^B24
@"NSDictionary"16@?0@"NSString"8
salientTokensDistribution
regularTokensDistribution
-[SGMIFeatureStore _purgeTokensWhichLastUpdateWasBefore:shouldContinue:usingDatabase:]_block_invoke
idx != NSNotFound
B16@?0@"NSString"8
v32@?0@"NSNumber"8@"NSMutableSet"16^B24
v32@?0@"NSNumber"8@"NSNumber"16^B24
DELETE FROM keyValueStore
migration_createFeaturesTable
migration_createKVTable
migration_createFollowUpTable
DELETE FROM followUpTable
ALTER TABLE followUpTable ADD COLUMN messageId TEXT
DROP TABLE followUpTable
migration_createFollowUpTableWithAppleMailMessageIdAsPrimaryKey
CREATE TABLE IF NOT EXISTS mailsPendingFollowUpProcessing (messageId TEXT NOT NULL PRIMARY KEY,spotlightIdentifier TEXT NOT NULL,date FLOAT)
migration_createSignatureStatsTable
ALTER TABLE followUpTable ADD COLUMN dateStored FLOAT
DROP TABLE mailsPendingFollowUpProcessing
CREATE TABLE IF NOT EXISTS nicknameMapping (nickname TEXT NOT NULL,email TEXT NOT NULL,count INTEGER NOT NULL,dateOfLastMatch FLOAT NOT NULL,PRIMARY KEY (nickname, email)) WITHOUT ROWID
DELETE FROM signatureStats WHERE type = %d
CREATE TABLE keyValueStore (key TEXT PRIMARY KEY NOT NULL, value) WITHOUT ROWID
CREATE UNIQUE INDEX keyValueStoreIdx ON keyValueStore(key)
CREATE TABLE IF NOT EXISTS followUpTable (id INTEGER PRIMARY KEY AUTOINCREMENT,appleMailMessageId TEXT NOT NULL,snippet TEXT,core TEXT,score DOUBLE,startDate TEXT NOT NULL,startDateCore TEXT,endDate TEXT NOT NULL,endDateCore TEXT,alreadyReturned BOOLEAN DEFAULT false)
CREATE TABLE IF NOT EXISTS followUpTable (appleMailMessageId TEXT NOT NULL PRIMARY KEY,messageId TEXT NOT NULL,snippet TEXT,core TEXT,score DOUBLE,startDate TEXT NOT NULL,startDateCore TEXT,endDate TEXT NOT NULL,endDateCore TEXT,alreadyReturned BOOLEAN DEFAULT false)
CREATE TABLE IF NOT EXISTS signatureStats (emailLanguage TEXT NOT NULL,regexLanguage TEXT NOT NULL,type INTEGER NOT NULL,incomingMessage BOOLEAN NOT NULL,signature TEXT NOT NULL,negativeEngagement INTEGER NOT NULL,noEngagement INTEGER NOT NULL,positiveEngagement INTEGER NOT NULL,blockedWarningCount INTEGER NOT NULL)
CREATE UNIQUE INDEX IF NOT EXISTS signatureStatsIdx ON signatureStats(emailLanguage, regexLanguage, type, incomingMessage, signature)
SELECT email FROM nicknameMapping WHERE nickname = :nickname
:nickname
INSERT INTO nicknameMapping (nickname, email, count, dateOfLastMatch) VALUES (:nickname, :email, 1, :dateOfLastMatch) ON CONFLICT (nickname, email) DO UPDATE SET count = count + 1, dateOfLastMatch = max(dateOfLastMatch, :dateOfLastMatch)
:email
:dateOfLastMatch
DELETE FROM nicknameMapping WHERE dateOfLastMatch < :oldestAcceptableDate
:oldestAcceptableDate
DELETE FROM nicknameMapping
INSERT OR REPLACE INTO keyValueStore (key, value) VALUES (:key, :value)
:key
DELETE FROM keyValueStore WHERE key = :key
SELECT value FROM keyValueStore WHERE key = :key LIMIT 1
:value
@"NSNumber"16@?0@"_PASSqliteStatement"8
INSERT INTO keyValueStore (key, value) VALUES (:key, :incrementValue) ON CONFLICT (key) DO UPDATE SET value = value + :incrementValue
:incrementValue
@"NSString"16@?0@"_PASSqliteStatement"8
SGDuplicateKey.m
%@_%ld_%ld
self
%li/%@
%@ not supported by %@
![SGDuplicateKey serializationPassesBasicScrutiny:serialized]
%llu
<SGDuplicateKey entityType:%@ entityKey:%@ parentKey:%@>
[SGCuratedEventKey isSupportedEntityType:_entityType]
[SGContactDetailKey isSupportedEntityType:_entityType]
[SGPseudoContactKey isSupportedEntityType:_entityType]
SGEntityTypeIsContact(_entityType)
[SGEmailKey isSupportedEntityType:_entityType]
[SGTextMessageKey isSupportedEntityType:_entityType]
[SGWebPageKey isSupportedEntityType:_entityType]
[SGInteractionKey isSupportedEntityType:_entityType]
[SGPseudoEventKey isSupportedEntityType:_entityType]
[SGPseudoReminderKey isSupportedEntityType:_entityType]
[SGDeliveryKey isSupportedEntityType:_entityType]
SGMailClientUtilErrorDomain
@"SGMailClientUtil"8@?0
message:%@
v24@?0@"EMContentRepresentation"8@"NSError"16
v40@?0r^v8{_NSRange=QQ}16^B32
+[SGMailClientUtil convertLineEndingsToNetwork:]_block_invoke_2
SGMailClientUtil.m
insertionsNeeded
SignificantPostalAddress
ProactiveHarvesting
BiomeHarvesting
Found in %@ with %@
Chatting with %@
Found in %@
Checkin Action %@
checkinDate
checkoutDate
v32@?0@"_PASTuple2"8@"SGContact"16^B24
@"NSArray"32@?0@"NSArray"8@"NSArray"16@?<@@?@>24
@24@?0@8@16
@"NSString<SGNormalizedAddress>"16@?0@8
@"NSArray"24@?0@"NSArray"8@"NSArray"16
@"SGDateComponents"24@?0@"SGDateComponents"8@"SGDateComponents"16
B24@?0@"SGPostalAddress"8@"SGPostalAddress"16
@"SGPostalAddress"16@?0@"SGPostalAddress"8
@"SGName"24@?0@"SGName"8@"SGName"16
remindersExtractionStatus
daysUntilDue
dueLocationType
dueLocationTrigger
defaultDueDate
success
no_proposal
no_confirmation
no_trigger
no_title
missing_entities_in_model_output
SELECT key FROM emailMetadata WHERE state IN (:lost, :undisplayable) ORDER BY lastSeenTimestamp asc
:lost
:undisplayable
Invalid state
state can't be SGMailMessageUnset
UPDATE emailMetadata SET state = :undisplayablyLost WHERE key IN _pas_nsarray(:serializedKeys)
:undisplayablyLost
:serializedKeys
UPDATE emailMetadata SET state = :undisplayablyLost WHERE unlikely(state = :lost) AND key in _pas_nsarray(:keys) AND lastSeenTimestamp < :lastSeenCutoff
:keys
:lastSeenCutoff
UPDATE emailMetadata SET state = :lost, lastSeenTimestamp = :now WHERE likely(state NOT IN (:lost, :undisplayablyLost)) AND key IN _pas_nsarray(:keys)
:now
SELECT sourceKey, COUNT(*) FROM emailMetadata WHERE unlikely(state = :lost) GROUP BY sourceKey
emailMetadata
SELECT key FROM emailMetadata WHERE unlikely(state = :lost) AND sourceKey = :sourceKey AND NOT (tagsHaveEscapedTag(tags, :eventTag) OR tagsHaveEscapedTag(tags, :contactTag)) ORDER BY lastSeenTimestamp ASC LIMIT :limit
:eventTag
:contactTag
SELECT key FROM emailMetadata WHERE unlikely(state = :lost) AND sourceKey = :sourceKey AND tagsHaveEscapedTag(tags, :contactTag) ORDER BY lastSeenTimestamp ASC LIMIT :limit
SELECT key FROM emailMetadata WHERE unlikely(state = :lost) AND sourceKey = :sourceKey AND tagsHaveEscapedTag(tags, :eventTag) ORDER BY lastSeenTimestamp ASC LIMIT :limit
UPDATE emailMetadata SET state = :state, lastSeenTimestamp = :lastSeen WHERE unlikely(state = :undisplayable) AND key IN _pas_nsarray(:keys)
:lastSeen
UPDATE emailMetadata SET state = :state, lastSeenTimestamp = :lastSeen WHERE unlikely(state != :normal) AND key IN _pas_nsarray(:keys)
:normal
@16@?0@"SGDuplicateKey"8
SELECT key FROM emailMetadata WHERE state NOT IN (:deleted, :undisplayable) AND key IN _pas_nsarray(:keys)
:deleted
UPDATE events SET entityId = :entityId, duplicateKey = :duplicateKey, sourceKey = :sourceKey, title = :title, content = :content, creationTimestamp = :creationTimestamp, lastModifiedTimestamp = :lastModifiedTimestamp, whenRange = :whenRange, structuredData = :structuredData, state = :state, curated = :curated WHERE id = :primaryKey
DELETE FROM eventTags WHERE eventId = :primaryKey
DELETE FROM locations WHERE eventId = :primaryKey
INSERT INTO events (entityId, duplicateKey, sourceKey, title, content, creationTimestamp, lastModifiedTimestamp, whenRange, structuredData, state, curated) VALUES (:entityId, :duplicateKey, :sourceKey, :title, :content, :creationTimestamp, :lastModifiedTimestamp, :whenRange, :structuredData, :state, :curated)
:entityId
:duplicateKey
:sourceKey
:title
:content
:creationTimestamp
:lastModifiedTimestamp
:whenRange
:structuredData
:state
:curated
INSERT INTO eventTags (eventId, name) VALUES (:eventId, :name)
:eventId
SELECT id FROM locations WHERE eventId = :primaryKey
{_PASDBIterAction_=B}16@?0@"_PASSqliteStatement"8
SELECT name FROM eventTags WHERE eventId = :primaryKey
SELECT entityId, duplicateKey, sourceKey, title, content, creationTimestamp, lastModifiedTimestamp, whenRange, structuredData, state, curated FROM events WHERE id = :primaryKey
entityId
events
duplicateKey
sourceKey
title
content
creationTimestamp
lastModifiedTimestamp
whenRange
structuredData
state
curated
SELECT id FROM events WHERE duplicateKey = :duplicateKey
SELECT id FROM events WHERE entityId = :entityId
EmptyStringWalker::ShortVisit called
CREATE TABLE IF NOT EXISTS entity (id INTEGER PRIMARY KEY AUTOINCREMENT,entityKey TEXT NOT NULL,entityType INTEGER NOT NULL,author TEXT,content TEXT,contentRangeOfInterest TEXT,title TEXT COLLATE NOCASE,timeRangeStart REAL,timeRangeEnd REAL,floatingRange INTEGER,timeRangeStartUTCOffsetSeconds INTEGER,timeRangeEndUTCOffsetSeconds INTEGER,creationTimestamp REAL,updateTimestamp REAL,indexTimestamp REAL,lastSeenTimestamp REAL,tags TEXT,structuredData BLOB,quality REAL,locations BLOB,masterEntityId INTEGER DEFAULT -1,groupId INTEGER DEFAULT -1,state INTEGER DEFAULT 0,contentHash TEXT,downloadState INTEGER DEFAULT 0)
CREATE UNIQUE INDEX IF NOT EXISTS entityIdIdx on entity(id)
CREATE INDEX IF NOT EXISTS entityMasterEntityIdIdx on entity(masterEntityId)
CREATE INDEX IF NOT EXISTS entityStateIdx on entity(state)
CREATE VIRTUAL TABLE IF NOT EXISTS entity_fts USING fts4(id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER,messagingTerms TEXT COLLATE NOCASE,ftsTerms TEXT COLLATE NOCASE)
CREATE TABLE IF NOT EXISTS entityTags (tag TEXT,entityKey TEXT,entityType INTEGER,parentKey TEXT,duplicateKeyHash TEXT NOT NULL)
CREATE INDEX IF NOT EXISTS ix_entityTags_tag ON entityTags(tag)
CREATE INDEX IF NOT EXISTS ix_entityTags_dupKey ON entityTags(entityKey, entityType, parentKey)
CREATE TABLE IF NOT EXISTS confirmedFieldValues (entityId INTEGER PRIMARY KEY,fieldValues BLOB,maybeChanged BOOLEAN)
CREATE TABLE IF NOT EXISTS identityPerson (    identityPersonId INTEGER PRIMARY KEY AUTOINCREMENT,    middlename VARCHAR(256),    surname VARCHAR(256),    fullname TEXT,    nameSketches TEXT NOT NULL,    phones TEXT NOT NULL,    email TEXT NOT NULL,    recordId INTEGER NOT NULL,    curated BOOLEAN NOT NULL)
DROP TABLE IF EXISTS identityPhones
CREATE TEMP TABLE IF NOT EXISTS identityPhones (    recordId INTEGER NOT NULL,    phone TEXT NOT NULL)
CREATE INDEX IF NOT EXISTS ix_identityPerson_surname ON identityPerson(surname)
CREATE INDEX IF NOT EXISTS ix_identityPerson_middlename ON identityPerson(middlename)
CREATE INDEX IF NOT EXISTS ix_identityPerson_email_nameless ON identityPerson(email)
CREATE UNIQUE INDEX IF NOT EXISTS ix_identityPerson_recordId ON identityPerson(recordId)
CREATE INDEX IF NOT EXISTS ix_identityPhones_recordId ON identityPhones(recordId)
CREATE INDEX IF NOT EXISTS ix_identityPhones_phone ON identityPhones(phone)
CREATE TABLE IF NOT EXISTS identityLink (    recordId1 INTEGER NOT NULL,    recordId2 INTEGER NOT NULL,    type INT NOT NULL,    strength REAL NOT NULL,    PRIMARY KEY (recordId1, recordId2, type))
CREATE INDEX IF NOT EXISTS ix_identityLink_recordId2 ON identityLink(recordId2)
CREATE TABLE IF NOT EXISTS identityInterdict (a TEXT NOT NULL, b TEXT NOT NULL)
CREATE TABLE IF NOT EXISTS entityReferences (id INTEGER PRIMARY KEY AUTOINCREMENT,bundleIdentifier TEXT,uniqueIdentifier TEXT,entityId INTEGER,domainIdentifier TEXT)
CREATE UNIQUE INDEX IF NOT EXISTS entityReferencesUniqueIdx ON entityReferences(bundleIdentifier, uniqueIdentifier)
CREATE INDEX IF NOT EXISTS entityReferencesDomainIdx ON entityReferences(bundleIdentifier, domainIdentifier)
CREATE INDEX IF NOT EXISTS entityReferencesEntityIdIdx ON entityReferences(entityId)
CREATE INDEX IF NOT EXISTS entityDownloadStateIdx on entity(downloadState)
migration_AddAuthorColumnIfMissing
migration_AddNewishTablesIfMissing
migration_FixUpColumnsForDevicesWhoMissedTheImprovedLegacyMigration
DROP TABLE IF EXISTS cnContactsToSgContacts
CREATE TABLE cnContactsToSgContacts (id INTEGER PRIMARY KEY AUTOINCREMENT,cnContactIdentifier TEXT,maxEntityId INTEGER,entityId INTEGER)
CREATE INDEX IF NOT EXISTS cnContactsToSgContactsEntityIdx ON cnContactsToSgContacts(entityId)
CREATE UNIQUE INDEX IF NOT EXISTS cnContactsToSgContactsUniqueJoin ON cnContactsToSgContacts(cnContactIdentifier, entityId)
CREATE TABLE IF NOT EXISTS cnContactsToSgContactsCacheJobs (id INTEGER PRIMARY KEY AUTOINCREMENT,batch TEXT)
CREATE TABLE IF NOT EXISTS harvestQueueTombstones (bundleIdentifier TEXT,uniqueIdentifier TEXT,domainIdentifier TEXT)
CREATE TABLE IF NOT EXISTS identityPhones (    recordId INTEGER NOT NULL,    phone TEXT NOT NULL)
CREATE INDEX ix_identityPhones_recordId ON identityPhones(recordId)
CREATE INDEX ix_identityPhones_phone ON identityPhones(phone)
CREATE INDEX IF NOT EXISTS entityDupKeyIdx ON entity(entityKey, entityType);
DROP INDEX IF EXISTS entityDupKeyIdx
CREATE INDEX IF NOT EXISTS entityDupKeyIdx ON entity(entityType, entityKey)
CREATE TABLE IF NOT EXISTS serializedContactCacheJobs (id INTEGER PRIMARY KEY AUTOINCREMENT,batch TEXT)
CREATE TABLE IF NOT EXISTS statsCounters (key TEXT NOT NULL,value REAL NOT NULL)
CREATE UNIQUE INDEX ix_statsCounters_key ON statsCounters(key)
CREATE INDEX IF NOT EXISTS entityDupKeyIdx ON entity(entityKey, entityType)
CREATE INDEX IF NOT EXISTS entityTypeIdx ON entity(entityType)
migration_RecreateFTSTableWithITS
INSERT INTO entity_fts(entity_fts) VALUES ('automerge=8')
migration_DeduplicateIdentityPhones
CREATE UNIQUE INDEX ix_identityPhones_unique ON identityPhones(recordId, phone)
DROP TABLE IF EXISTS serializedContactCacheJobs
CREATE TABLE IF NOT EXISTS serializedContactCacheJobs (id INTEGER PRIMARY KEY AUTOINCREMENT)
DROP INDEX IF EXISTS entityParentageParentKeyIdx
CREATE INDEX entityParentageParentKeyChildIdIdx on entityParentage(parentKey, childId)
CREATE UNIQUE INDEX IF NOT EXISTS ix_harvestQueueTombstones_unique ON harvestQueueTombstones(bundleIdentifier, uniqueIdentifier, domainIdentifier)
ALTER TABLE entity ADD COLUMN contentHashBlob BLOB
ALTER TABLE entityTags ADD COLUMN duplicateKeyHashBlob BLOB
ALTER TABLE entityParentage ADD COLUMN duplicateKeyHashBlob BLOB
migration_ConvertContentAndDupKeyHashesToBlobs
CREATE UNIQUE INDEX entityContentHashBlobIdx ON entity(contentHashBlob)
CREATE UNIQUE INDEX entityParentageDuplicateKeyHashBlobIdx on entityParentage(duplicateKeyHashBlob, extractionType)
CREATE INDEX ix_entityTags_dupKeyHashBlob ON entityTags(duplicateKeyHashBlob)
DROP INDEX entityContentHashIdx
DROP INDEX entityParentageDuplicateKeyHashIdx
DROP INDEX ix_entityTags_dupKeyHash
CREATE TABLE IF NOT EXISTS metadata (key TEXT NOT NULL, value)
CREATE UNIQUE INDEX metadataKeyIndex ON metadata(key)
INSERT INTO metadata (key, value) VALUES ('rowIdWhenContactsEnabled', 0)
INSERT INTO metadata (key, value) VALUES ('rowIdWhenEventsEnabled', 0)
CREATE TABLE IF NOT EXISTS messageTracer (domain TEXT NOT NULL,key TEXT NOT NULL,value INTEGER NOT NULL)
CREATE UNIQUE INDEX IF NOT EXISTS messageTracerIdx ON messageTracer(domain, key)
migration_DropMessagingTermsWithPhoneExtensions
DELETE FROM entityReferences WHERE entityId = -1
migration_RemoveEntityReferencesWithoutBundleIdentifier
CREATE INDEX IF NOT EXISTS ix_entityTags_parentKey ON entityTags(parentKey)
ALTER TABLE entity ADD COLUMN pendingGeocode BOOLEAN DEFAULT false
CREATE INDEX entityPendingGeocodeIdx ON entity(pendingGeocode)
ALTER TABLE entity ADD COLUMN harvestedOnBuild TEXT
migration_FixupMergeGroups
UPDATE entity SET pendingGeocode=CAST(pendingGeocode AS INTEGER)
DROP INDEX entityPendingGeocodeIdx
CREATE INDEX entityPendingGeocodeIdx ON entity(pendingGeocode) WHERE pendingGeocode=1
DELETE FROM entity WHERE id NOT IN (SELECT childId FROM entityParentage)
DELETE FROM entity_fts WHERE entityId NOT IN (SELECT childId FROM entityParentage)
DELETE FROM identityPerson WHERE recordId NOT IN (SELECT childId FROM entityParentage)
DELETE FROM identityLink WHERE recordId1 NOT IN (SELECT childId FROM entityParentage) OR recordId2 NOT IN (SELECT childId FROM entityParentage)
DELETE FROM identityPhones WHERE recordId NOT IN (SELECT childId FROM entityParentage)
DELETE FROM entityTags WHERE duplicateKeyHashBlob NOT IN (SELECT duplicateKeyHashBlob FROM entityParentage)
CREATE TABLE IF NOT EXISTS identityBlobAnalysisJobs (id INTEGER PRIMARY KEY AUTOINCREMENT,mergeBlob BLOB)
CREATE TABLE identityInterdictNext (a TEXT NOT NULL, b TEXT NOT NULL)
ALTER TABLE identityPerson ADD COLUMN imAddresses TEXT NOT NULL DEFAULT ""
CREATE TABLE IF NOT EXISTS emailMetadata (id INTEGER PRIMARY KEY AUTOINCREMENT,key TEXT NOT NULL,type INTEGER NOT NULL,sourceKey TEXT,author TEXT,creationTimestamp REAL,updateTimestamp REAL,indexTimestamp REAL,lastSeenTimestamp REAL,tags TEXT,state INTEGER DEFAULT 0,downloadState INTEGER DEFAULT 0,harvestedOnBuild TEXT)
CREATE UNIQUE INDEX IF NOT EXISTS ix_emailMetadata_key ON emailMetadata(key)
CREATE INDEX IF NOT EXISTS ix_emailMetadata_state ON emailMetadata(state)
CREATE INDEX IF NOT EXISTS ix_emailMetadata_downloadState ON emailMetadata(downloadState)
CREATE TABLE IF NOT EXISTS emailTags (key TEXT NOT NULL,type INTEGER NOT NULL,tag TEXT NOT NULL)
CREATE INDEX IF NOT EXISTS ix_emailTags_tag ON emailTags(tag)
migration_separateMessageEntities
migration_rebuildFTSWithDetailEntityIDDocIDs
CREATE INDEX IF NOT EXISTS ix_emailTags_key ON emailTags(key)
migration_deleteInteractions
CREATE TABLE IF NOT EXISTS reimportRequests (id INTEGER PRIMARY KEY AUTOINCREMENT,plugin TEXT NOT NULL,creationTimestamp REAL,queryTimestamp REAL,personHandle TEXT,startDateTimestamp REAL,endDateTimestamp REAL,executionTimestamp REAL)
CREATE INDEX IF NOT EXISTS reimportRequestsQueryIdx ON reimportRequests(queryTimestamp)
CREATE INDEX IF NOT EXISTS reimportRequestsExecutionIdx ON reimportRequests(executionTimestamp)
CREATE TABLE IF NOT EXISTS reimportItems (id INTEGER PRIMARY KEY AUTOINCREMENT,reimportRequestId INTEGER NOT NULL,bundleId TEXT NOT NULL,uniqueId TEXT NOT NULL,seenByReceiverTimestamp REAL)
CREATE INDEX IF NOT EXISTS reimportItemsRequestIdx ON reimportItems(reimportRequestId)
CREATE INDEX IF NOT EXISTS reimportItemsSeenByReceiverIdx ON reimportItems(seenByReceiverTimestamp)
CREATE INDEX IF NOT EXISTS reimportItemsBundleUniqueIdx ON reimportItems(bundleId, uniqueId)
ALTER TABLE identityPerson ADD COLUMN isSent BOOLEAN DEFAULT false
migration_reimport
migration_deleteEmergencyExtractions
CREATE TABLE IF NOT EXISTS urls (id INTEGER PRIMARY KEY AUTOINCREMENT,url TEXT NOT NULL,received_from_handle TEXT,bundle_id TEXT NOT NULL,group_id TEXT,doc_id TEXT NOT NULL,seconds_from_1970 REAL NOT NULL)
CREATE UNIQUE INDEX IF NOT EXISTS ix_urls_url ON urls(url)
CREATE INDEX IF NOT EXISTS ix_urls_seconds_from_1970 ON urls(seconds_from_1970)
CREATE INDEX IF NOT EXISTS ix_urls_bundle_id_group_id ON urls(bundle_id, group_id)
ALTER TABLE entityParentage ADD COLUMN modelVersion INTEGER NOT NULL DEFAULT 0
ALTER TABLE entityParentage ADD COLUMN modelConfidence REAL NOT NULL DEFAULT 0.5
ALTER TABLE urls ADD COLUMN title TEXT
ALTER TABLE urls ADD COLUMN document_title TEXT
ALTER TABLE urls ADD COLUMN document_seconds_from_1970 REAL
ALTER TABLE urls ADD COLUMN document_time_interval REAL NOT NULL DEFAULT 0
ALTER TABLE entity ADD COLUMN curatedDupe BOOLEAN DEFAULT false
migration_deleteSerializedContacts
UPDATE entity SET title = substr(title,1,5) WHERE entityType = 20 AND length(title) = 10 AND substr(title,7,4) IN ('2018','2019')
ALTER TABLE urls ADD COLUMN flags INTEGER NOT NULL DEFAULT 0
migration_deleteInternalExtractionsFromML
CREATE TABLE IF NOT EXISTS locations (id INTEGER PRIMARY KEY,locationType INTEGER NOT NULL,label TEXT NOT NULL,address TEXT NOT NULL,airportCode TEXT NOT NULL,latitude REAL NOT NULL,longitude REAL NOT NULL,accuracy REAL NOT NULL,quality REAL NOT NULL,handle BLOB)
DROP TABLE IF EXISTS reminders
CREATE TABLE IF NOT EXISTS reminders (id INTEGER PRIMARY KEY,entityId INTEGER NOT NULL,duplicateKey TEXT NOT NULL,sourceKey TEXT,title text NOT NULL,dueDateComponents TEXT,dueLocationId INTEGER,dueLocationType INTEGER NOT NULL,dueLocationTrigger INTEGER NOT NULL,sourceUrl TEXT NOT NULL,creationDate num NOT NULL,opaqueKey TEXT,uniqueKey TEXT,contactIdentifier TEXT,reminderStatus NUM NOT NULL,FOREIGN KEY(entityId) REFERENCES entity(id) ON DELETE NO ACTION,FOREIGN KEY(dueLocationId) REFERENCES locations(id) ON DELETE SET NULL)
CREATE INDEX IF NOT EXISTS reminders_duplicateKey_idx ON reminders(duplicateKey)
ALTER TABLE emailMetadata ADD COLUMN pendingVerification INTEGER DEFAULT 0
CREATE INDEX pendingVerificationIdx ON emailMetadata(pendingVerification) WHERE pendingVerification=1
DROP TABLE IF EXISTS locations
CREATE TABLE IF NOT EXISTS locations (id INTEGER PRIMARY KEY AUTOINCREMENT,locationType INTEGER NOT NULL,label TEXT,address TEXT,airportCode TEXT,latitude REAL NOT NULL,longitude REAL NOT NULL,accuracy REAL NOT NULL,quality REAL NOT NULL,handle BLOB)
CREATE TABLE IF NOT EXISTS reminders (id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER NOT NULL,duplicateKey TEXT NOT NULL,sourceKey TEXT,title text NOT NULL,dueDateComponents TEXT,dueLocationId INTEGER,dueLocationType INTEGER NOT NULL,dueLocationTrigger INTEGER NOT NULL,sourceUrl TEXT NOT NULL,creationDate num NOT NULL,opaqueKey TEXT,uniqueKey TEXT,contactIdentifier TEXT,reminderStatus NUM NOT NULL,FOREIGN KEY(entityId) REFERENCES entity(id) ON DELETE NO ACTION,FOREIGN KEY(dueLocationId) REFERENCES locations(id) ON DELETE SET NULL)
CREATE INDEX IF NOT EXISTS reminders_entityId_idx ON reminders(entityId)
migration_newRemindersSchema
DROP TABLE IF EXISTS extractionInfos
DROP TABLE IF EXISTS contactDetails
CREATE TABLE IF NOT EXISTS extractionInfos (id INTEGER PRIMARY KEY AUTOINCREMENT,extractionType INTEGER NOT NULL,modelVersion NUM NOT NULL,confidence NUM NOT NULL)
CREATE TABLE IF NOT EXISTS contactDetails (id INTEGER PRIMARY KEY AUTOINCREMENT,value TEXT NOT NULL,type INTEGER NOT NULL,label TEXT,entityId INTEGER NOT NULL,duplicateKey TEXT NOT NULL,sourceKey TEXT,context TEXT,extractionInfoId INTEGER NOT NULL,FOREIGN KEY(entityId) REFERENCES entity(id) ON DELETE NO ACTION,FOREIGN KEY(extractionInfoId) REFERENCES extractionInfos(id) ON DELETE RESTRICT)
CREATE INDEX IF NOT EXISTS contactDetails_duplicateKey_idx ON contactDetails(duplicateKey)
CREATE INDEX IF NOT EXISTS contactDetails_entityId_idx ON contactDetails(entityId)
migration_newContactDetailsSchema
CREATE TABLE IF NOT EXISTS postMigrationTasks (task TEXT NOT NULL)
INSERT INTO postMigrationTasks (task) VALUES ('migration_deleteLegacyMessages')
CREATE TABLE IF NOT EXISTS locations_alterColumnsNullable (id INTEGER PRIMARY KEY AUTOINCREMENT,locationType INTEGER NOT NULL,label TEXT,address TEXT,airportCode TEXT,latitude REAL,longitude REAL,accuracy REAL,quality REAL,handle BLOB)
INSERT INTO locations_alterColumnsNullable SELECT * FROM locations
DROP TABLE locations
ALTER TABLE locations_alterColumnsNullable RENAME TO locations
CREATE TABLE IF NOT EXISTS events (id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER NOT NULL,duplicateKey TEXT NOT NULL,sourceKey TEXT,title TEXT,content TEXT,creationTimestamp INTEGER,lastModifiedTimestamp INTEGER,whenRange TEXT,structuredData BLOB,state INTEGER,curated INTEGER)
CREATE TABLE IF NOT EXISTS eventTags (id INTEGER PRIMARY KEY AUTOINCREMENT,eventId INTEGER NOT NULL,name TEXT,FOREIGN KEY(eventId) REFERENCES event(id) ON DELETE RESTRICT)
ALTER TABLE locations ADD eventId INTEGER
CREATE INDEX IF NOT EXISTS events_duplicateKey_idx ON events(duplicateKey)
CREATE INDEX IF NOT EXISTS events_entityId_idx ON events(entityId)
CREATE INDEX IF NOT EXISTS eventTags_eventId_idx ON eventTags(eventId)
migration_newEventsSchema
CREATE TABLE IF NOT EXISTS mailIntelligence_featureReferenceMapping (id INTEGER PRIMARY KEY AUTOINCREMENT,sourceType INT NOT NULL,externalReference TEXT)
CREATE TABLE IF NOT EXISTS mailIntelligence_features (id INTEGER PRIMARY KEY AUTOINCREMENT,featureMappingId INT NOT NULL,featureName INT NOT NULL,stringValue TEXT,stringArrayValue TEXT,doubleValue NUM,doubleArrayValue TEXT,FOREIGN KEY(featureMappingId) REFERENCES mailIntelligence_featureReferenceMapping(id) ON DELETE CASCADE)
CREATE INDEX IF NOT EXISTS mailIntelligence_featureReferenceMapping_externalReference_idx ON mailIntelligence_featureReferenceMapping(externalReference)
CREATE INDEX IF NOT EXISTS mailIntelligence_features_featureMappingId_idx ON mailIntelligence_features(featureMappingId)
CREATE TABLE IF NOT EXISTS mailIntelligence_naiveBayesModelsGlobalCounts (id INTEGER PRIMARY KEY AUTOINCREMENT,featureName INTEGER NOT NULL,salientCount INTEGER NOT NULL,regularCount INTEGER NOT NULL,salientUnigramTokensCount INTEGER NOT NULL,regularUnigramTokensCount INTEGER NOT NULL,salientBigramTokensCount INTEGER NOT NULL,regularBigramTokensCount INTEGER NOT NULL,UNIQUE(featureName))
CREATE INDEX IF NOT EXISTS mailIntelligence_naiveBayesModelsGlobalCounts_featureName_idx ON mailIntelligence_naiveBayesModelsGlobalCounts(featureName)
CREATE TABLE IF NOT EXISTS mailIntelligence_naiveBayesModelsUnigramTokens (id INTEGER PRIMARY KEY AUTOINCREMENT,featureName INTEGER NOT NULL,token TEXT NOT NULL,salientCount INTEGER NOT NULL,regularCount INTEGER NOT NULL)
CREATE INDEX IF NOT EXISTS mailIntelligence_naiveBayesModelsUnigramTokens_featureName_idx ON mailIntelligence_naiveBayesModelsUnigramTokens(featureName)
CREATE TABLE IF NOT EXISTS mailIntelligence_naiveBayesModelsBigramTokens (id INTEGER PRIMARY KEY AUTOINCREMENT,featureName INTEGER NOT NULL,token TEXT NOT NULL,salientCount INTEGER NOT NULL,regularCount INTEGER NOT NULL)
CREATE INDEX IF NOT EXISTS mailIntelligence_naiveBayesModelsBigramTokens_featureName_idx ON mailIntelligence_naiveBayesModelsBigramTokens(featureName)
CREATE TABLE IF NOT EXISTS mailIntelligence_biomeProgress (id INTEGER PRIMARY KEY AUTOINCREMENT,streamName TEXT NOT NULL,progressTimestamp NUM NOT NULL)
CREATE TABLE IF NOT EXISTS mailIntelligence_saliency (id INTEGER PRIMARY KEY AUTOINCREMENT,creationTimestamp REAL NOT NULL,messageId TEXT NOT NULL,score NUM NOT NULL)
DROP INDEX ix_urls_url
CREATE UNIQUE INDEX IF NOT EXISTS ix_urls_url_doc ON urls(url, doc_id, document_seconds_from_1970)
DROP TABLE IF EXISTS mailIntelligence_naiveBayesModelsUnigramTokens
DROP TABLE IF EXISTS mailIntelligence_naiveBayesModelsBigramTokens
CREATE TABLE IF NOT EXISTS mailIntelligence_naiveBayesModelsTokens (id INTEGER PRIMARY KEY AUTOINCREMENT,featureName INTEGER NOT NULL,token TEXT NOT NULL,is_unigram BOOLEAN NOT NULL,salientCount INTEGER NOT NULL,regularCount INTEGER NOT NULL)
CREATE UNIQUE INDEX IF NOT EXISTS mailIntelligence_naiveBayesModelsTokens_featureName_token_unigram_idx ON mailIntelligence_naiveBayesModelsTokens(featureName, token, is_unigram)
ALTER TABLE mailIntelligence_saliency ADD COLUMN mailboxId TEXT
migration_deleteNilDateEvents
ALTER TABLE mailIntelligence_saliency ADD COLUMN is_salient BOOLEAN
ALTER TABLE mailIntelligence_saliency ADD COLUMN is_gte_salient INTEGER
ALTER TABLE mailIntelligence_saliency ADD COLUMN is_counted BOOLEAN
ALTER TABLE mailIntelligence_naiveBayesModelsTokens ADD COLUMN lastUpdateTimestamp REAL NOT NULL
CREATE INDEX IF NOT EXISTS mailintelligence_saliency_covering_idx ON mailintelligence_saliency(mailboxId, creationTimestamp DESC, score, is_salient, messageId)
CREATE TABLE IF NOT EXISTS mailIntelligence_spotlightMapping (id INTEGER PRIMARY KEY AUTOINCREMENT,messageId TEXT NOT NULL,uniqueIdentifier TEXT NOT NULL,bundleIdentifier TEXT NOT NULL,terminatedDomainIdentifier TEXT)
CREATE UNIQUE INDEX IF NOT EXISTS mailintelligence_spotlightMapping_bundleIdentifier_uniqueIdentifier_idx ON mailIntelligence_spotlightMapping(bundleIdentifier, uniqueIdentifier)
CREATE INDEX IF NOT EXISTS mailintelligence_spotlightMapping_bundleIdentifier_terminatedDomainIdentifier_idx ON mailIntelligence_spotlightMapping(bundleIdentifier, terminatedDomainIdentifier)
DROP TABLE IF EXISTS identityPerson
CREATE TABLE IF NOT EXISTS identityPerson (    recordId INTEGER PRIMARY KEY,    middlename VARCHAR(256),    surname VARCHAR(256),    fullname TEXT,    nameSketches TEXT NOT NULL,    phones TEXT NOT NULL,    email TEXT NOT NULL,    socialProfileIdentifiers TEXT NOT NULL,    curated BOOLEAN NOT NULL,    isSent BOOLEAN DEFAULT false)
CREATE INDEX ix_identityPerson_surname ON identityPerson(surname)
CREATE INDEX ix_identityPerson_middlename ON identityPerson(middlename)
CREATE INDEX ix_identityPerson_email_nameless ON identityPerson(email)
DROP TABLE IF EXISTS identitySocialProfileIdentifiers
CREATE TABLE IF NOT EXISTS identitySocialProfileIdentifiers (    socialProfileIdentifier TEXT NOT NULL,    recordId INTEGER NOT NULL,    PRIMARY KEY (socialProfileIdentifier, recordId)) WITHOUT ROWID
CREATE TABLE IF NOT EXISTS identityPhones (    phone TEXT NOT NULL,    recordId INTEGER NOT NULL,    PRIMARY KEY (phone, recordId)) WITHOUT ROWID
migration_RebuildIdentityTables
DROP TABLE IF EXISTS mailIntelligence_features
DROP TABLE IF EXISTS mailIntelligence_featureReferenceMapping
ALTER TABLE mailIntelligence_saliency RENAME COLUMN is_salient TO isSalient
ALTER TABLE mailIntelligence_saliency RENAME COLUMN is_gte_salient TO isGteSalient
ALTER TABLE mailIntelligence_saliency RENAME COLUMN is_counted TO isCounted
ALTER TABLE mailIntelligence_naiveBayesModelsTokens RENAME COLUMN is_unigram TO isUnigram
DROP TABLE IF EXISTS mailIntelligence_biomeProgress
UPDATE contactDetails SET context = NULL
ALTER TABLE contactDetails RENAME COLUMN context TO unused
DELETE FROM mailIntelligence_naiveBayesModelsGlobalCounts
DELETE FROM mailIntelligence_naiveBayesModelsTokens
ALTER TABLE mailIntelligence_naiveBayesModelsTokens ADD COLUMN creationTimestamp REAL NOT NULL
ALTER TABLE mailIntelligence_saliency ADD COLUMN isLogged BOOLEAN DEFAULT false
ALTER TABLE mailIntelligence_saliency ADD COLUMN stagedLog BLOB
ALTER TABLE contactDetails DROP COLUMN unused
DROP TABLE cnContactsToSgContactsCacheJobs
CREATE TABLE cnContactsToSgContactsCacheJobs (   cnContactIdentifier TEXT PRIMARY KEY NOT NULL) WITHOUT ROWID
CREATE TABLE entity (id INTEGER PRIMARY KEY AUTOINCREMENT,entityKey TEXT NOT NULL,entityType INTEGER NOT NULL,author TEXT,content TEXT,contentRangeOfInterest TEXT,title TEXT COLLATE NOCASE,timeRangeStart REAL,timeRangeEnd REAL,floatingRange INTEGER,timeRangeStartUTCOffsetSeconds INTEGER,timeRangeEndUTCOffsetSeconds INTEGER,creationTimestamp REAL,updateTimestamp REAL,indexTimestamp REAL,lastSeenTimestamp REAL,tags TEXT,structuredData BLOB,quality REAL,locations BLOB,masterEntityId INTEGER DEFAULT -1,groupId INTEGER DEFAULT -1,state INTEGER DEFAULT 0,contentHash TEXT,downloadState INTEGER DEFAULT 0, contentHashBlob BLOB, pendingGeocode BOOLEAN DEFAULT false, harvestedOnBuild TEXT, curatedDupe BOOLEAN DEFAULT false)
migration_CreateFTSTableWithITS
CREATE TABLE entityTags (tag TEXT,entityKey TEXT,entityType INTEGER,parentKey TEXT,duplicateKeyHash TEXT NOT NULL, duplicateKeyHashBlob BLOB)
CREATE TABLE confirmedFieldValues (entityId INTEGER PRIMARY KEY,fieldValues BLOB,maybeChanged BOOLEAN)
CREATE TABLE entityParentage (id INTEGER PRIMARY KEY AUTOINCREMENT,parentKey TEXT,childId INTEGER NOT NULL,duplicateKeyHash TEXT NOT NULL,extractionType INTEGER,sourceKey TEXT, duplicateKeyHashBlob BLOB, modelVersion INTEGER NOT NULL DEFAULT 0, modelConfidence REAL NOT NULL DEFAULT 0.5,UNIQUE(parentKey, childId))
CREATE TABLE serializedContacts (id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER,data BLOB)
CREATE TABLE identityLink (    recordId1 INTEGER NOT NULL,    recordId2 INTEGER NOT NULL,    type INT NOT NULL,    strength REAL NOT NULL,    PRIMARY KEY (recordId1, recordId2, type))
CREATE TABLE entityReferences (id INTEGER PRIMARY KEY AUTOINCREMENT,bundleIdentifier TEXT,uniqueIdentifier TEXT,entityId INTEGER,domainIdentifier TEXT)
CREATE TABLE harvestQueueTombstones (bundleIdentifier TEXT,uniqueIdentifier TEXT,domainIdentifier TEXT)
CREATE TABLE statsCounters (key TEXT NOT NULL,value REAL NOT NULL)
CREATE TABLE serializedContactCacheJobs (id INTEGER PRIMARY KEY AUTOINCREMENT)
CREATE TABLE metadata (key TEXT NOT NULL, value)
INSERT INTO metadata VALUES('rowIdWhenContactsEnabled',0)
INSERT INTO metadata VALUES('rowIdWhenEventsEnabled',0)
CREATE TABLE messageTracer (domain TEXT NOT NULL,key TEXT NOT NULL,value INTEGER NOT NULL)
CREATE TABLE identityBlobAnalysisJobs (id INTEGER PRIMARY KEY AUTOINCREMENT,mergeBlob BLOB)
CREATE TABLE emailMetadata (id INTEGER PRIMARY KEY AUTOINCREMENT,key TEXT NOT NULL,type INTEGER NOT NULL,sourceKey TEXT,author TEXT,creationTimestamp REAL,updateTimestamp REAL,indexTimestamp REAL,lastSeenTimestamp REAL,tags TEXT,state INTEGER DEFAULT 0,downloadState INTEGER DEFAULT 0,harvestedOnBuild TEXT, pendingVerification INTEGER DEFAULT 0)
CREATE TABLE emailTags (key TEXT NOT NULL,type INTEGER NOT NULL,tag TEXT NOT NULL)
CREATE TABLE reimportRequests (id INTEGER PRIMARY KEY AUTOINCREMENT,plugin TEXT NOT NULL,creationTimestamp REAL,queryTimestamp REAL,personHandle TEXT,startDateTimestamp REAL,endDateTimestamp REAL,executionTimestamp REAL)
CREATE TABLE reimportItems (id INTEGER PRIMARY KEY AUTOINCREMENT,reimportRequestId INTEGER NOT NULL,bundleId TEXT NOT NULL,uniqueId TEXT NOT NULL,seenByReceiverTimestamp REAL)
CREATE TABLE urls (id INTEGER PRIMARY KEY AUTOINCREMENT,url TEXT NOT NULL,received_from_handle TEXT,bundle_id TEXT NOT NULL,group_id TEXT,doc_id TEXT NOT NULL,seconds_from_1970 REAL NOT NULL, title TEXT, document_title TEXT, document_seconds_from_1970 REAL, document_time_interval REAL NOT NULL DEFAULT 0, flags INTEGER NOT NULL DEFAULT 0)
CREATE TABLE reminders (id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER NOT NULL,duplicateKey TEXT NOT NULL,sourceKey TEXT,title text NOT NULL,dueDateComponents TEXT,dueLocationId INTEGER,dueLocationType INTEGER NOT NULL,dueLocationTrigger INTEGER NOT NULL,sourceUrl TEXT NOT NULL,creationDate num NOT NULL,opaqueKey TEXT,uniqueKey TEXT,contactIdentifier TEXT,reminderStatus NUM NOT NULL,FOREIGN KEY(entityId) REFERENCES entity(id) ON DELETE NO ACTION,FOREIGN KEY(dueLocationId) REFERENCES locations(id) ON DELETE SET NULL)
CREATE TABLE extractionInfos (id INTEGER PRIMARY KEY AUTOINCREMENT,extractionType INTEGER NOT NULL,modelVersion NUM NOT NULL,confidence NUM NOT NULL)
CREATE TABLE contactDetails (id INTEGER PRIMARY KEY AUTOINCREMENT,value TEXT NOT NULL,type INTEGER NOT NULL,label TEXT,entityId INTEGER NOT NULL,duplicateKey TEXT NOT NULL,sourceKey TEXT,extractionInfoId INTEGER NOT NULL,FOREIGN KEY(entityId) REFERENCES entity(id) ON DELETE NO ACTION,FOREIGN KEY(extractionInfoId) REFERENCES extractionInfos(id) ON DELETE RESTRICT)
CREATE TABLE postMigrationTasks (task TEXT NOT NULL)
CREATE TABLE IF NOT EXISTS "locations" (id INTEGER PRIMARY KEY AUTOINCREMENT,locationType INTEGER NOT NULL,label TEXT,address TEXT,airportCode TEXT,latitude REAL,longitude REAL,accuracy REAL,quality REAL,handle BLOB, eventId INTEGER)
CREATE TABLE events (id INTEGER PRIMARY KEY AUTOINCREMENT,entityId INTEGER NOT NULL,duplicateKey TEXT NOT NULL,sourceKey TEXT,title TEXT,content TEXT,creationTimestamp INTEGER,lastModifiedTimestamp INTEGER,whenRange TEXT,structuredData BLOB,state INTEGER,curated INTEGER)
CREATE TABLE eventTags (id INTEGER PRIMARY KEY AUTOINCREMENT,eventId INTEGER NOT NULL,name TEXT,FOREIGN KEY(eventId) REFERENCES event(id) ON DELETE RESTRICT)
CREATE TABLE mailIntelligence_naiveBayesModelsGlobalCounts (id INTEGER PRIMARY KEY AUTOINCREMENT,featureName INTEGER NOT NULL,salientCount INTEGER NOT NULL,regularCount INTEGER NOT NULL,salientUnigramTokensCount INTEGER NOT NULL,regularUnigramTokensCount INTEGER NOT NULL,salientBigramTokensCount INTEGER NOT NULL,regularBigramTokensCount INTEGER NOT NULL,UNIQUE(featureName))
CREATE TABLE mailIntelligence_saliency (id INTEGER PRIMARY KEY AUTOINCREMENT,creationTimestamp REAL NOT NULL,messageId TEXT NOT NULL,score NUM NOT NULL, mailboxId TEXT, isSalient BOOLEAN, isGteSalient INTEGER, isCounted BOOLEAN, isLogged BOOLEAN DEFAULT false, stagedLog BLOB)
CREATE TABLE mailIntelligence_naiveBayesModelsTokens (id INTEGER PRIMARY KEY AUTOINCREMENT,featureName INTEGER NOT NULL,token TEXT NOT NULL,isUnigram BOOLEAN NOT NULL,salientCount INTEGER NOT NULL,regularCount INTEGER NOT NULL, lastUpdateTimestamp REAL NOT NULL, creationTimestamp REAL NOT NULL)
CREATE TABLE mailIntelligence_spotlightMapping (id INTEGER PRIMARY KEY AUTOINCREMENT,messageId TEXT NOT NULL,uniqueIdentifier TEXT NOT NULL,bundleIdentifier TEXT NOT NULL,terminatedDomainIdentifier TEXT)
CREATE TABLE identityPerson (    recordId INTEGER PRIMARY KEY,    middlename VARCHAR(256),    surname VARCHAR(256),    fullname TEXT,    nameSketches TEXT NOT NULL,    phones TEXT NOT NULL,    email TEXT NOT NULL,    socialProfileIdentifiers TEXT NOT NULL,    curated BOOLEAN NOT NULL,    isSent BOOLEAN DEFAULT false)
CREATE TABLE identitySocialProfileIdentifiers (    socialProfileIdentifier TEXT NOT NULL,    recordId INTEGER NOT NULL,    PRIMARY KEY (socialProfileIdentifier, recordId)) WITHOUT ROWID
CREATE TABLE identityPhones (    phone TEXT NOT NULL,    recordId INTEGER NOT NULL,    PRIMARY KEY (phone, recordId)) WITHOUT ROWID
INSERT INTO sqlite_sequence VALUES('emailMetadata',0)
INSERT INTO sqlite_sequence VALUES('locations',0)
CREATE UNIQUE INDEX entityIdIdx on entity(id)
CREATE INDEX entityMasterEntityIdIdx on entity(masterEntityId)
CREATE INDEX entityStateIdx on entity(state)
CREATE INDEX ix_entityTags_tag ON entityTags(tag)
CREATE INDEX ix_entityTags_dupKey ON entityTags(entityKey, entityType, parentKey)
CREATE INDEX entityParentageChildIdx on entityParentage(childId)
CREATE UNIQUE INDEX serializedContactsEntityIdIdx ON serializedContacts(entityId)
CREATE INDEX ix_identityLink_recordId2 ON identityLink(recordId2)
CREATE UNIQUE INDEX entityReferencesUniqueIdx ON entityReferences(bundleIdentifier, uniqueIdentifier)
CREATE INDEX entityReferencesDomainIdx ON entityReferences(bundleIdentifier, domainIdentifier)
CREATE INDEX entityReferencesEntityIdIdx ON entityReferences(entityId)
CREATE INDEX groupIdIdx on entity(groupId)
CREATE INDEX cnContactsToSgContactsEntityIdx ON cnContactsToSgContacts(entityId)
CREATE UNIQUE INDEX cnContactsToSgContactsUniqueJoin ON cnContactsToSgContacts(cnContactIdentifier, entityId)
CREATE INDEX entityDupKeyIdx ON entity(entityKey, entityType)
CREATE INDEX entityTypeIdx ON entity(entityType)
CREATE UNIQUE INDEX ix_harvestQueueTombstones_unique ON harvestQueueTombstones(bundleIdentifier, uniqueIdentifier, domainIdentifier)
CREATE UNIQUE INDEX messageTracerIdx ON messageTracer(domain, key)
CREATE INDEX ix_entityTags_parentKey ON entityTags(parentKey)
CREATE UNIQUE INDEX ix_emailMetadata_key ON emailMetadata(key)
CREATE INDEX ix_emailMetadata_state ON emailMetadata(state)
CREATE INDEX ix_emailMetadata_downloadState ON emailMetadata(downloadState)
CREATE INDEX ix_emailTags_tag ON emailTags(tag)
CREATE INDEX ix_emailTags_key ON emailTags(key)
CREATE INDEX reimportRequestsQueryIdx ON reimportRequests(queryTimestamp)
CREATE INDEX reimportRequestsExecutionIdx ON reimportRequests(executionTimestamp)
CREATE INDEX reimportItemsRequestIdx ON reimportItems(reimportRequestId)
CREATE INDEX reimportItemsSeenByReceiverIdx ON reimportItems(seenByReceiverTimestamp)
CREATE INDEX reimportItemsBundleUniqueIdx ON reimportItems(bundleId, uniqueId)
CREATE INDEX ix_urls_seconds_from_1970 ON urls(seconds_from_1970)
CREATE INDEX ix_urls_bundle_id_group_id ON urls(bundle_id, group_id)
CREATE INDEX reminders_duplicateKey_idx ON reminders(duplicateKey)
CREATE INDEX reminders_entityId_idx ON reminders(entityId)
CREATE INDEX contactDetails_duplicateKey_idx ON contactDetails(duplicateKey)
CREATE INDEX contactDetails_entityId_idx ON contactDetails(entityId)
CREATE INDEX events_duplicateKey_idx ON events(duplicateKey)
CREATE INDEX events_entityId_idx ON events(entityId)
CREATE INDEX eventTags_eventId_idx ON eventTags(eventId)
CREATE INDEX mailIntelligence_naiveBayesModelsGlobalCounts_featureName_idx ON mailIntelligence_naiveBayesModelsGlobalCounts(featureName)
CREATE UNIQUE INDEX ix_urls_url_doc ON urls(url, doc_id, document_seconds_from_1970)
CREATE UNIQUE INDEX mailIntelligence_naiveBayesModelsTokens_featureName_token_unigram_idx ON mailIntelligence_naiveBayesModelsTokens(featureName, token, isUnigram)
CREATE INDEX mailintelligence_saliency_covering_idx ON mailintelligence_saliency(mailboxId, creationTimestamp DESC, score, isSalient, messageId)
CREATE UNIQUE INDEX mailintelligence_spotlightMapping_bundleIdentifier_uniqueIdentifier_idx ON mailIntelligence_spotlightMapping(bundleIdentifier, uniqueIdentifier)
CREATE INDEX mailintelligence_spotlightMapping_bundleIdentifier_terminatedDomainIdentifier_idx ON mailIntelligence_spotlightMapping(bundleIdentifier, terminatedDomainIdentifier)
SGSeekableData.m
Error loading %@: %@
Tried to read %llu-%llu from data of length %llu
offset %llu outside of bounds (file length %llu)
<FIAPResult h:%@ e:%@>
startUTCOffsetSeconds
endUTCOffsetSeconds
Case not handled in ComputeSimple: 
SimplifyWalker::ShortVisit called
Simplify case not handled: 
Malformed repeat 
SGCuratedEventKey.m
externalId
<SGCuratedEvent externalId: %@>
Bad regexp op 
kRegexpAlternate child_args is NULL
kRegexpStar child_args is NULL
kRegexpQuest child_args is NULL
kRegexpPlus child_args is NULL
kRegexpCapture child_args is NULL
Bad op in Prefilter::DebugString: 
op%d
*no-matches*
/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/re2/re2/re2_prefilter.h
Check failed: op_ == AND || op_ == OR
Stack not empty.
Walk NULL
SGStorageReminder.m
SGStorageReminder failed to create sourceURL from %@
<SGStorageReminder title:%@ dupKey:%@ dueDate:%@ dueLocation: %@ reminderStatus: %@>
SELECT messageId FROM mailIntelligence_spotlightMapping WHERE uniqueIdentifier = :uniqueIdentifier AND bundleIdentifier = :bundleIdentifier
:uniqueIdentifier
:bundleIdentifier
messageId
mailIntelligence_spotlightMapping
SELECT messageId FROM mailIntelligence_spotlightMapping WHERE bundleIdentifier = :bundleIdentifier LIMIT :limit
:limit
SELECT messageId FROM mailIntelligence_spotlightMapping WHERE uniqueIdentifier IN _pas_nsarray(:uniqueIdentifiers) AND bundleIdentifier = :bundleIdentifier
:uniqueIdentifiers
SELECT messageId FROM mailIntelligence_spotlightMapping WHERE bundleIdentifier = :bundleIdentifier AND terminatedDomainIdentifier GLOB :domainIdentifierGlob
:domainIdentifierGlob
SELECT uniqueIdentifier FROM mailIntelligence_spotlightMapping WHERE messageId = :messageId AND bundleIdentifier = :bundleIdentifier
:messageId
uniqueIdentifier
SELECT id FROM mailIntelligence_spotlightMapping WHERE bundleIdentifier = :bundleIdentifier AND uniqueIdentifier = :uniqueIdentifier
INSERT INTO mailIntelligence_spotlightMapping (messageId, uniqueIdentifier, terminatedDomainIdentifier, bundleIdentifier) VALUES (:messageId, :uniqueIdentifier, :terminatedDomainIdentifier, :bundleIdentifier) ON CONFLICT(bundleIdentifier, uniqueIdentifier) DO UPDATE SET messageId=:messageId, terminatedDomainIdentifier=:terminatedDomainIdentifier
:terminatedDomainIdentifier
SGDNotificationBroadcaster
com.apple.suggestions.eventsDidChange
com.apple.suggestions.contactsDidChange
com.apple.suggestions.remindersDidChange
personFromSenderAge
personFromSenderInDyadicConversationAge
subjectContentAge
personToRecipientsAge
personCCRecipientsAge
domainFromSenderAge
conversationAge
SGXpcTransaction.m
_transaction != nil
_timeoutTimer == nil
PROACTIVE_MAIL_INTELLIGENCE_SALIENCY
assets_130
signatureStatsLogging
model.mlmodelc
modelFeatureNames.plist
modelFeatureStandardizationMeans.plist
modelFeatureStandardizationStandardDeviations.plist
modelGroundTruthFeatureNames.plist
modelGroundTruthFeatureLowerBounds.plist
modelGroundTruthFeatureUpperBounds.plist
modelGroundTruthOutputs.plist
saliencyOverrideFeatureNames.plist
saliencyOverrideFeatureLowerBounds.plist
saliencyOverrideFeatureUpperBounds.plist
saliencyOverrideOutputs.plist
classificationConfiguration.plist
classificationThreshold
classificationOfflinePrecision
classificationOfflineRecall
attachmentDetectionRegexes.plist
attachmentLinkDetection.plist
recipientConservativeDetectionRegexes.plist
recipientDetectionRegexes.plist
nicknameDetectionRegexes.plist
followUpOnOutgoingMailsQuestionsDetectionRegexes.plist
followUpOnOutgoingMailsAsksDetectionRegexes.plist
followUpOnIncomingMailsDetectionRegexes.plist
followUpWarningsParameters.plist
minCountToConsiderATokenAsHighlyDiscriminant
ratioToConsiderATokenAsHighlyDiscriminant
minCountToConsiderATokenAsExtremelyDiscriminant
ratioToConsiderATokenAsExtremelyDiscriminant
E=%@ D=%d T=%@
Device is likely not enrolled in a Trial experiment.
%@/%@
%@/%@/%@
default
v16@?0@"SGMITrialClientWrapperGuardedData"8
http://schema.org/
http://schema.org/%@
pseudoContacts
CoreSuggestions-contacts
SGSpotlightContactsAdapter-notify
Metadata/com.apple.IntelligentSuggestions/
%llu.vcf
SGSpotlightContactsAdapter.m
failed to create a CSCustomAttributeKey for MDItemRelatedAppBundleIdentifier
v32@?0@"NSString"8@"SGContact"16^B24
SignificantPostalAddressForIMessage
SGJSWatchdogTimerCallback
JSContextGroupRef SGJSContextGroupCreate()
SGJSWatchdogTimer.mm
JSContextGroupCreate
void *JavaScriptCoreLibrary()
JSVirtualMachine
Class getJSVirtualMachineClass()_block_invoke
void SGJSContextGroupSetExecutionTimeLimit(JSContextGroupRef, double, JSShouldTerminateCallback, void *)
JSContextGroupSetExecutionTimeLimit
JSStringRef SGJSContextCreateBacktrace(JSContextRef, unsigned int)
JSContextCreateBacktrace
CFStringRef SGJSStringCopyCFString(CFAllocatorRef, JSStringRef)
JSStringCopyCFString
void SGJSContextGroupRelease(JSContextGroupRef)
JSContextGroupRelease
%FT%H:%M:%S
SGExtractionDocumentErrorDomain
v32@?0{_NSRange=QQ}8^B24
void freeRegexp(void *)
SGChunkPool.m
Could not deallocate memory from mallocRegexp
void *superblockMalloc(int)
Could not allocate memory for mallocRegexp
<SGWebPageKey source=%@ uniqueIdentifier=%@
SGDelivery+Building.m
Attachment
AttachmentLink
Recipient
FollowUpAsk
FollowUpQuestion
B16@?0@"SGTaggedCharacterRange"8
@"NSString"24@?0@"SGTaggedCharacterRange"8Q16
submodelsProbabilities
predictedSaliencyScore
predictedSaliency
saliencyPredictionPerformanceInMilliSeconds
estimatedGroundTruth
missingAttachment
missingAttachmentPredictionPerformanceInMilliSeconds
missingRecipient
missingRecipientPredictionPerformanceInMilliSeconds
Salient
Neutral
Ignorable
mailIntelligence
persistentID
v16@?0@"BPSCompletion"8
v16@?0@"BMStoreEvent"8
LANGUAGE
WINDOWLENGTH
SGContactSharingTransformer.m
SGAssetIdentifier
SGAsset-notifications
IPHONE_SIMULATOR_ROOT
/System/Library/AssetTypeDescriptors/com.apple.MobileAsset.AssetTypeDescriptor.CoreSuggestionsAssets.plist
Assets
suggestionsassets
common
:name
INSERT INTO eventTags (name) VALUES (:name)
SELECT name FROM eventTags WHERE id = :primaryKey
:primaryKey
v16@?0@"EKEventStore"8
SGEKCalendarAdapter.m
@"EKEvent"16@?0@"EKEvent"8
v24@?0@"EKEvent"8^B16
_addEKEventToCalendar
componentName
significantWork
reason
SGSqliteDatabaseError
Error(%d): %@
 (SQL: %@)
. May be due to previous POSIX error %@
. Free space (rounded to 1 significant digit): %@ bytes
sg_db_corruption_marker
locking
locked
unlocked
PRAGMA journal_mode
com.apple.suggestions.databasejournal.
journals
com.apple.suggestions.databasejournal.inmemory
__query
v32@?0@"NSString"8@16^B24
v8@?0
{_PASDBIterAction_=B}16@?0@"NSError"8
SGDatabaseJournal.m
!_inMemory
SGDatabaseJournalWillRecoverOnNextLaunch
A bogus or corrupt journal file was found and has been cleaned up. Suggestd will relaunch and continue.
fullPath
originalException
SGDatabaseJournal.executeQueriesOnDatabase
DELETE FROM snippets WHERE entityId NOT IN (SELECT id FROM entities.entity)
com.apple.suggestions.suggestd
Suppressing non-meaningful text message displayName.
Cannot get domain identifier for text message %@
expected coded array %@ to give a new instance of %@ but it didn't
Error fetching contact for identifier '%@': %@
Interaction Person has no identity/handle: %@ / %@
JSON Data is Empty. Nothing to return.
Error: Failed to serialize to JSON
SGURL: query: %f - %f 
SGURL: urlsFoundBetweenStartDate results: %@
SGURL: written: %@
SGURL: urlsFoundBetweenStartDate+bundle query: %f - %f (%@ - %@)
SGURL: urlsFoundBetweenStartDate+bundle results: %@
Multiple model names specified to turn on data collection (objective: %lu, language: %@, models: %@.
SGSQLEntityStore+Reminders: unable to deserialize date components.
SGSQLEntityStore+Reminders: unable to fetch title.
null date derived from reminder.dueDateComponents is unexpected: %@
SGWordBoundaryQuickTypeInference - Invalid model config!
SGWordBoundaryQuickTypeInference - localeIdentifier/language (%@/%@) do not match configured target language (%@)
SGWordBoundaryQuickTypeInference - Unexpected number of confidence thresholds (%ld rather than %ld)
SGWordBoundaryQuickTypeInference - Could not initialize model with config path: %@, bin path: %@
SGWordBoundaryQuickTypeInference - Irrelevant Label predicted with score: %@
SGWordBoundaryQuickTypeInference - Predicted label (%ld) confidence (%@), falls below confidence threshold (%@)!
SGWordBoundaryQuickTypeInference - probable prior prediction of label %ld (score: %@) detected.
SGWordBoundaryQuickTypeInference - objective: %lu, prediction: %ld, score: %@
SGWordBoundaryQuickTypeInference - No name found for thirdparty objective: %ld
SGWordBoundaryQuickTypeInference - Unexpected label %ld
SGStructuredEventDocument: Unable to detect title, missing modelOutput or enrichedTaggedCharacterRanges
SGStructuredEventDocument: No title mapping, unsupported category
SGStructuredEventDocument: Unable to detect reservationId, missing modelOutput or enrichedTaggedCharacterRanges
SGStructuredEventDocument: Unable to detect startDateComponents, missing modelOutput or enrichedTaggedCharacterRanges
SGStructuredEventDocument: Unable to detect endDateComponents, missing modelOutput or enrichedTaggedCharacterRanges
SGStructuredEventDocument: Unable to detect startAddress, missing modelOutput or enrichedTaggedCharacterRanges
SGStructuredEventDocument: Unable to detect %@, missing modelOutput or enrichedTaggedCharacterRanges
SGReminderDissector: detectReminders is OFF
SGReminderDissector: Reminder detection for mail is off
SGReminderDissector: Not processing due to a missing localeAsset. [SGEntity (%{public}@)]
SGReminderDissector: Not processing since PseudoEvent found
SGReminderDissector: Mail has multiple recipients, skipping
SGReminderDissector: Mail is inhuman, skipping
SGReminderDissector: Mail is from mailing list, skipping
SGReminderDissector: Mail is partially downloaded, skipping
SGReminderDissector: Mail is sent, skipping
SGReminderDissector: Mail is older than one week, skipping
SGReminderDissector: Mail is from insignificant sender, skipping
SGReminderDissector: Skipping parts of content that are identified as not plain text
SGReminderDissector: Not model output, bailing
SGEntity: %{public}@ -> SGPipelineEnrichment: %{public}@
Dissecting Text Message to find reminder
SGReminderDissector: ProcessingLanguage: %@
SGReminderDissector: Message with confirmation found
SGReminderDissector: No modelOutput for previousMessage
SGReminderDissector: Previous message has proposal and question
SGReminderDissector: Found title for reminder %@
SGReminderDissector: Couldn't reject reminder: %@
SGReminderDissector: No previous message
SGReminderDissector: %@
SGReminderDissector: timing(ms): %f
SGReminderDissector: Message too short or too long to process or missing conversationIdentifier, bailing
SGReminderDissector: Message is a group chat, bailing
SGReminderDissector: Unable to load model assets
SGReminderDissector: Unable to load emoji assets
SGReminderDissector: Unable to load verb mapping
SGReminderDissector: Date is in the past, skipping
SGReminderDissector: ExtractionModel is nil
SGReminderDissector: Processinglanguage is nil
SGReminderDissector: No model output, bailing
No dueLocation or dueDate, bailing
SGReminderDissector: DueDate in past, bailing
Creating enrichment for Reminder: %@, dueTime: %@, dueLocation: %@
Creating Reminder enrichment
SGReminderDissector - Unknown object encountered while resolving contactId
SGReminderDissector - Could not resolve Contact. Nil contactIdentifier
No groupId found for entity %@
Unable to load RTRoutineManager
Unable to get LocationsOfInterest: %@
Suggestions failed to dlopen CoreRoutine.
SGMessageEventDissectorTrialClientWrapper: Updating factors
SGMessageEventDissectorTrialClientWrapper: No active Trial deployment found
SGMessageEventDissectorTrialClientWrapper: Updating trialEventExtractionAssetsPath from trial: %{private}@
SGMessageEventDissectorTrialClientWrapper: TRILevel is nil for trialEventExtractionAssetsPath
SGMessageEventDissectorTrialClientWrapper: Updating trialEventClassifierModelPath from trial: %{private}@
SGMessageEventDissectorTrialClientWrapper: TRILevel is nil for trialEventClassifierModelPath
SGMessageEventDissectorTrialClientWrapper: Updating trialEventClassifierThreshold from trial: %.02f
SGMessageEventDissectorTrialClientWrapper: TRILevel is nil for trialEventClassifierThreshold
SGMessageEventDissectorTrialClientWrapper: Updating trialMessageProcessingLimit from trial: %.02f
SGMessageEventDissectorTrialClientWrapper: TRILevel is nil for trialMessageProcessingLimit
SGMessageEventDissectorTrialClientWrapper: Updating trialRateLimitInterval from trial: %.02f
SGMessageEventDissectorTrialClientWrapper: TRILevel is nil for trialRateLimitInterval
SGMessageEventDissectorTrialClientWrapper: trialEventExtractionAssetsPath is nil, bailing
SGMessageEventDissectorTrialClientWrapper: EventExtractionAssetsPath loaded with Trial %{private}@
SGMessageEventDissectorTrialClientWrapper: No assets found at trialEventExtractionAssetsPath: %{private}@ isDirectory: %@
SGMessageEventDissectorTrialClientWrapper: trialEventClassifierModelPath is nil, bailing
SGMessageEventDissectorTrialClientWrapper: EventClassifierModelPath loaded with Trial %{private}@
SGMessageEventDissectorTrialClientWrapper: No assets found at trialEventClassifierModelPath: %{private}@ isDirectory: %@
SGMessageEventDissectorTrialClientWrapper: eventClassifierThreshold: %@
SGMessageEventDissectorTrialClientWrapper: messageProcessingLimit: %@
SGMessageEventDissectorTrialClientWrapper: rateLimitInterval: %@
SGURLPlugin: consumeRemindersContentWithContext: notes.length = %tu
SGURLPlugin ignoring item with nil unique identifier
SGURLPlugin: extracting URLs from attributes of %@
SGURLPlugin: %tu detections on %@
SGURLPlugin: deleting URLs from bundleId %@
SGURLPlugin failed to delete URLs from bundleId %@
SGMI SGSqlEntityStore+Saliency: The sortedSaliencyResults method do not currently use mailboxType
Exiting due to SQLite error: %s
Pre-warming suggestd
Starting dissection, len=%tu, ctx=%i
Ending dissection, len=%tu, ctx=%i
Starting ingest of %lu messages
Ending ingest of %lu messages
Database inconsistency; found key for event hash %@ but event is missing
SGDSuggestManager - Database inconsistency: Found key for reminder hash %@ but reminder is missing
SGDSuggestManager failed to clear caches following an asset update: %@
clearing lastSuggestionsFromMessage cache due to settings change
SGDSuggestManager: contentAdmissionBlocklistDidChange: called with %tu bundles
SGDSuggestManager has no entity store and cannot continue
SGDSuggestionsManager going away now, bye!
Warming up suggestions...
Warmed up suggestions in %0.2f ms and found %i enrichments
Suggestions is already warmed up (as of %0.1f seconds ago)
clearCachesFully: %i
contactsFromContact: %@
contactsFromContactIdentifier: %@
Error from CNContactStore contactWithIdentifier: %@
contactsFromContactIdentifiers (%lu ids)
SGDSuggestManager-emailAddressIsSignificant:%@
contactFromRecordId: %@
cnContactMatchesForRecordIds (%lu ids)
storageContactFromRecordId: %@
SGDSuggestManager-contactMatchesWithFullTextSearch:%@ limitTo:%lu
SGDSuggestManager-contactMatchesWithMessagingPrefix:%@ limitTo:%lu
SGDSuggestManager-allContactsWithSnippets:%@ limitTo:%lu
SGDSuggestManager-suggestEventsStartingAt:%@ endingAt:%@ limitTo:%lu
eventFromRecordId: %@
SGDSuggestManager-suggestEventsStartingAt:%@ endingAt:%@ prefix:%@ limitTo:%lu
SGDSuggestManager-suggestEventsInFutureLimitTo:%lu
SGDSuggestManager-confirmReminderByRecordId: %@
SGDSuggestManager-confirmRealtimeReminder
SGDSuggestManager - Confirmation: Unable to retrieve reminder from the harvest store. Computing and storing hashes only.
SGDSuggestManager-rejectReminderByRecordId: %@
SGDSuggestManager-rejectRealtimeReminer
SGDSuggestManager - Rejection: Unable to retrieve reminder from the harvest store. Computing and storing hashes only.
SGDSuggestManager-alarmTriggeredForRecordId: %@
SuggestionsManager getting all Reminders
SuggestionsManager getting reminder title for content
SuggestionsManager logging user created reminder title
SuggestionsManager getting all Deliveries
Suggestions Cache hit: %@
Suggestions Cache hit
Suggestions Cache miss: %@
Suggestions Cache miss
Went from %d to %d suggestions after filtering out already acted-on suggestions
Skipping extracted event that has already passed.
NaturalLanguageEvent Found: Bumping TTL
SGDSuggestManager - For [SGEntity %{public}@], Found %d extracted event candidates.
More than one event found using alternative keys
EKEvent with the same externalIdentifier found, but eventIdentifier is nil.
More than one EKEvent with the same opaque key detected.
EKEvent with the same opaque key found, but eventIdentifier is nil.
EKEvent for cancellation found, but eventIdentifier is nil.
Suppressing update or view duplicate of EKEvent because eventIdentifier is nil.
Suppressing update or view duplicate of EKEvent because event status is canceled.
Newer EKEvent from Suggestions has been found. Showing the updated event insead of this one.
Suppressing NL event because it looks like a near-duplicate of a curated event.
Suppressing NL event because it looks like a duplicate of a recurring curated event.
Suppressing NL event because eventIdentifier is nil.
Suppressing event because we found more than 1 duplicate.
New realtime event
Duplicate realtime event
Update realtime event
Cancellation realtime event
Near duplicate realtime event
Returning %d realtime events.
Skipping event with nonnull suggestionInfo but null suggestionInfo.uniqueKey
Skipping event with dupKeyString that does not pass basic scrutiny: %{private}@
EKEvent exact match with the same duplicate key found, but eventIdentifier is nil.
Entity is from inhuman sender
Contacts after filter, before realtiming, %@
Extracted Realtime contact details about the user and tried to show them in a banner: %@
Extracted a contact with a different handle to the sender: %@
Contact pre-aggregation: %@
Contact post-aggregation: %@
Contact: %@, interesting: %i
Error getting realtime contact for %@: %@
Realtime contacts: %@
SGDSuggestManager-contactMatchesByPhoneNumber
SGDSuggestManager-namesForDetail
SGDSuggestManager-contactsByEmailAddress
SGDSuggestManager-contactsBySocialProfile
SGDSuggestManager-messagesToRefreshWithCompletion
Loading messages to refresh.
SGDSuggestManager-updateMessages
SGDSuggestManager-reportMessagesFound
SGDSuggestManager-fullDownloadRequestBatch
SGDSuggestManager-resolveFullDownloadRequests
SGDSuggestManager-eventFromUniqueId: %@
dupKey: %@
eventFromUniqueId: %@ resulted in dupKey: %@ and event: %@
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Found no item references for event with unique id '%@'
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Found no container reference for event with unique id '%@'
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: %@
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Event was not found and no fallback URL provided.
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Could not get the entity type.
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Found e-mail for Event Found in Mail on device.
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Could not find e-mail for Event Found in Mail on device but did find fallback URL
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Could not find e-mail for Event Found in Mail on device or fallback URL.
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Found message for Event Found in Messages on device.
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Can't find a bundleId for entity type: '%lld'
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Could not find an installed bundle id.
SGDSuggestManager-launchInfoForSuggestedEventWithUniqueIdentifier: Could not create launch intent for event.
SGDSuggestManager-launchAppForSuggestedEventUsingLaunchInfo: Error creating application record: %@
SGDSuggestManager-launchAppForSuggestedEventUsingLaunchInfo: Error opening user activity: %@
SGDSuggestManager-confirmEvent: %@
SGDSuggestManager-confirmEventByRecordId: %@
SGDSuggestManager-rejectEvent: %@
SGDSuggestManager-rejectEventByRecordId: %@
SGDSuggestManager - deleteEventByRecordId: event Id: (%{public}@)
SGDSuggestManager-confirmContact: %@
While confirming/rejecting contact detail, failed to load detail for record id: %@
While confirming/rejecting contact detail, requested detail not in loaded contract for record id: %@
Confirming details as workaround for Contacts search for contact %@
While confirming/rejecting contact, provided recordId was not contactId: %@ %@
SGDSuggestManager-confirmRecord: %@ %td
SGDSuggestManager-rejectRecord: %@ %td
SGDSuggestManager-confirmContactDetailRecord: %@ %td
SGDSuggestManager-rejectContactDetailRecord: %@ %td
SGMISaliencyInference: %@
Suggestions received value %@ for feature setting %ld. Processing of the information not implemented yet.
Suggestions received feedback %@ for NSData %{sensitive}@.
FollowUpFeedback: NSData %{sensitive}@ for warning %{sensitive}@
Suggestions received feedback %@ for StringFromFollowUpWarning %{sensitive}@.
FollowUpFeedback: for StringFromFollowUpWarning %{sensitive}@ for warning %{sensitive}@
SGDSuggestManager: addSearchableItemMetadata: failed to deserialize item data.
SGDSuggestManager: addSearchableItemMetadata: %@ is eligible for harvesting.
SGDSuggestManager: addSearchableItemMetadata: %@ is NOT eligible for harvesting.
SGDSuggestManager addInteractions: bundleId: %{public}@
SGDSuggestManager addInteractions: Can't add 0 interaction from bundleId: %@
SGDSuggestManager addInteractions: Got %i interactions from nil bundleId! Ignoring.
SGDSuggestManager: _harvestPeopleFromInteractions: harvesting from %@ %@
Interaction from %@ rejected. Display name is very likely a phone-number or email address.
SGDSuggestManager: _harvestPeopleFromInteractions: harevsted %tu entities
Buffered interactions when block was scheduled: %tu, now: %tu
Processing all buffered interactions
Waiting for more interactions to be donated before processing.
SGDSuggestManager addInteractions: Encountered INInteraction with nil identifier.
SGDSuggestManager addInteractions: Didn't find any enrichment after dissection of the INInteraction (%{public}@).
Plugins finished purging %lu items from bundle: %@
SGDSuggestManager: Plugins finished deleting %lu items from bundle: %@
SGDSuggestManager: deleting spotlight references: %@ : %@
Plugins finished deleting %lu domains from bundle: %@
Plugins finished deleting bundle: %@
SGDSuggestManager-schemaOrgToEvents
isEventCandidateForURL: %{sensitive}@ -title: %{sensitive}@
SGSuggestionsService isEventCandidateForURL: method called with nil arguments
SGSuggestionsService isEventCandidateForURL: Based on whitelist check, URL is candidate
SGSuggestionsService isEventCandidateForURL: eventCandidate is nil, domain appears not to be whitelisted.
SGDSuggestManager isEventCandidateForURL: Checking classifier output for webpage
SGDSuggestManager-isEventCandidateForURL: %{sensitive}@ -title: %{sensitive}@
SGDSuggestManager isEventCandidateForURL: end processing because detectStructuredEvents is OFF.
SGDSuggestManager suggestionsFromURL - Start processing webpage
SGDSuggestManager-suggestionsFromURL: %{sensitive}@ -title: %{sensitive}@ -HTMLPayload length: %lu 
suggestionsFromURL ignoring item since Safari is disallowed by user's settings
SGDSuggestManager suggestionsFromURL: parent entity has %lu enrichment(s) after dissection
Parents entity has %lu enrichements
Failed to process event suggestion 
 "Show Siri Suggestions" disabled in Calendar.
Failed to process event suggestion 
 you must acknowledge "What's new in Calendar" screen in the Calendar app.
Geocode modified locations, updating enrichment
realtimeSuggestionsFromURL ignoring item since Safari is disallowed by user's settings
SGDSuggestManager-waitForEventWithIdentifier: %@ -toAppearInEventStoreWithLastModificationDate: %@
#logUnknownContactInformationShownCount names for detail %@: %lu
Caching event from with external identifer = %@.
Event found for Spotlight interaction, but not from Suggestions.
Not logging event interaction for bogus uniqueKey: %@
Not logging event interaction for uniqueKey with bad serialization: %@
Attempting to retrieve entity from harvestStore for uniqueKey = %@
Couldn't find Entity with uniqueKey = %@
Entity is not a pseudo event
exiting due to daemonExitWithCompletion request
SGDSuggestManager: Dropping all aggregated contacts
SGDSuggestManager: Dropping aggregated contact for conversation: %@
SGDSuggestManager-ipsosMessagesFromSearchableItems
SGDSuggestManager-recentURLsWithLimit:%u called
SGDSuggestManager-recentURLsWithLimit returning %tu URLs
SGDSuggestManager-urlsFoundBetweenStartDate:%@ endDate:%@ excludingBundleIdentifiers:%@ containingSubstring:%@ flagFilter:%d limit:%u called
SGDSuggestManager-urlsFoundBetweenStartDate:endDate:excludingBundleIdentifiers:containingSubstring:flagFilter:limit returning %tu URLs
SGDSuggestManager-registerURLFeedback:%d url.length:%tu called
SGDSuggestManager-registerURLFeedback returning %d
SGDSuggestManager: Mail: suggestionsFromSearchableItem: %@ : %@ options: %tu
SGDSuggestManager: Mail: suggestionsFromSearchableItem was called with an invalid item
suggestionsFromSearchableItem ignoring item since the bundle is disallowed by user's settings
SGDSuggestManager: Mail: harvestedSuggestionsFromSearchableItem: %@ : %@ options: %tu
harvestedSuggestionsFromSearchableItem ignoring item since the bundle is disallowed by user's settings
SGDSuggestManager: Mail: suggestionsFromEmailContent: %@ options: %tu
SGDSuggestManager: Mail: suggestionsFromSimpleMailMessage: %@ : %@ options: %tu
SGDSuggestManager: Messages: harvestedSuggestionsFromMessage: %@ : %@ options: %tu
harvestedSuggestionsFromMessage ignoring item since the bundle is disallowed by user's settings
SGDSuggestManager: Messages: harvestedSuggestionsFromMessage (deprecated): %@ : %@ options: %tu
SGDSuggestManager: Messages: harvestedSuggestionsFromMessages: %tu messages (options %tu)
harvestedSuggestionsFromMessages ignoring item since the bundle is disallowed by user's settings
harvestedSuggestionsFromMessages called with no inputs
SGDSuggestManager: harvestedSuggestionsFromMessages: Suggesting reminder with recordId: %@
SGSuggestManager-foundInStringForRecordId:%@ style:%u called
No entity found for recordId: %@
Entity %{public}@ -> SGStorageReminder %{public}@
SGDSuggestManager-foundInStringForRecordId: unable to format contact name.
SGDSuggestManager-foundInStringForRecordId: error when fetching contact: %@
SGDSuggestManager: deleteDataDerivedFromContentMatchingRequest
SGDSuggestManager: consumeMailContentWithContext
SGDSuggestManager: consumeMessagesContentWithContext
SGDSuggestManager: consumeInteractionWithContext: %@
Error constructing data detector for featurizing: %@
SGMIDailyActivity Starting Task #1 for Signature Stats logging: -[SGMIFeatureStore warningStatsForLogging:]
SGMIDailyActivity Signature Stats logging do not have enough new data point to submit new logs.
DailyTasks.LogSignature
SGMIDailyActivity will not run signature stats logging (logWarningSignatureStats is disabled)
SGMIDailyActivity Starting Task NicknameMappingLookup
DailyTasks.NicknameMappingLookup
SGMIDailyActivity: Mail saliency detection is off. Will not proceed with daily activity tasks.
SGMIDailyActivity Starting Task #1: SGMISubmodelsManager checkForAndProcessVersionChange
DailyTasks.ModelVersionChange
SGMIDailyActivity Finished Task #1: SGMISubmodelsManager checkForAndProcessVersionChange
SGMIDailyActivity Starting Task #2: SGMISubmodelsManager incrementalSubmodelUpdate
DailyTasks.SubmodelUpdate
SGMIDailyActivity Finished Task #2: SGMISubmodelsManager incrementalSubmodelUpdate
SGMIDailyActivity Starting Task #3: SGMISubmodelsManager pruneDB
DailyTasks.PruneSubmodels
SGMIDailyActivity Finished Task #3: SGMISubmodelsManager pruneDB
SGMIDailyActivity Starting Task #4: Logging
DailyTasks.LogMetrics
SGMIDailyActivity Finished Task #4: Logging
SGMIDailyActivity Starting Task #5: Performing DB maintenance
 enableTelemetry=YES 
DailyTasks.PerformDBMaintenance
SGMIDailyActivity Finished Task #5: Performing DB maintenance
SGStructuredEventExtractionModel: No input or output mapping
Preparing Structured Event model inference
SGStructuredEventExtractionModel: Model initialization failed
Model input feature construction failed.
Model inference failed: %@
Model inference done in %f
Unable to convert to instantiate SGExtractionModelCoreMLFeatureWrapper
SGStructuredEventExtractionModel: Loading model from trial override at path: %@
Unable to load model from URL: %@
SGStructuredEventExtractionModel: No configuration loaded
SGStructuredEventExtractionModel: Unable to get URL for Gazetteer
SGPOSTagger: Unable to create gazetteer %@
Prefilter tree stack overflow
Prefilter tree stack underflow
Registering for MobileAsset metadata download with CTS
CoreSuggestionsModelAssets metadata download success? %d
CoreSuggestionsAssets metadata download success? %d
CoreSuggestionsAssets metadata download - marking activity as done
registering _registerForCollectWeeklyStats
Can not harvest items until first unlock. Waiting for later.
Pruning entities more than a year old
NOT pruning entities more than a year old, due to preference setting.
Vacuuming the database
Registering for identity analysis with CTS
Registering for RTC log sending with CTS
Deferring sending of RTC Logs
Registering for contact detail cache rebuilding with CTS
Deferring CD cache rebuild
Registering for pending-geocode processing with CTS
Deferring remaining geocodes for later
Invalid state transition to DEFER
Registering for pending-verification processing with CTS
SGDManagerForCTS _performProcessPendingVerificationActivity: Starting CTS job for document verification.
SGDManagerForCTS _performProcessPendingVerificationActivity: Deferring CTS document verification for [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: Could not defer CTS document verification for [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: Entity pending source verificaiton did not have an email entity key. [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: Entity pending source verificaiton did not have a message ID. [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: Starting CTS document verification for [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: Successfully verified DKIM signature. [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: DKIM verification resulted in permanent failure: %@. [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: DKIM verification resulted in temporary failure for 2nd time. Treating as permanent failure: %@. [SGEntity (%{public}@)]
SGDManagerForCTS _performProcessPendingVerificationActivity: Could not obtain a lock for document verification.
Registering for mail event aggregation processing with CTS
SGDManagerForCTS _performMailIntelligenceTasksActivity: Activity running even though Class A protected data is unavailable
SGDManagerForCTS _performMailIntelligenceTasksActivity: Starting CTS job for Mail Intelligence Tasks
Mail Intelligence Task deferred by CTS
Mail Intelligence Task interrupted by device lock state change
[HarvestedURLMetric] Registering for harvested URL metrics upload task with CTS
[HarvestedURLMetric] Can not access entity store. Waiting for later.
[HarvestedURLMetric] Performing harvested URL metric upload CTS job.
[HarvestedURLMetric] Got %tu URL(s) in the store.
[HarvestedURLMetric] Deferring for later right after getting URLs
[HarvestedURLMetric] Deferring for later while enumerating URLs
[HarvestedURLMetric] payload: %@
[HarvestedURLMetric] Done with harvested URL metric upload CTS job.
Tombstone exists for queued item; deleting.
Plugins finished CSSI processing via CTS: %@
Plugins finished async CSSI processing via CTS: %@
Dissector pipeline ignoring %@
text message CSSI %@ has no authors
text message CSSI %@ has no accountIdentifier
Unhandled CSSI %@ from %@ in -[SGDManagerForCTS processSearchableItem:pipeline:context:]
SGTextMessage %@ has been processed without dissection, so it will be dropped from the dissector pipeline.
SGSimpleMailMessage %@ appears to be a sent email not in the sent mail folder, so it will be dropped from the dissector pipeline.
SGSimpleMailMessage %@ has been processed without dissection, so it will be dropped from the dissector pipeline.
Ignoring attachments because a structured event already found
Found event
Failed to parse event from ics attachment.
Ignoring event with the request method in an ics attachment from a shared calendar provider.
Ignoring event that has the same UID as another event in the same ics attachment.
Skipping calendar attachment dissector: detectStructuredEvents is OFF
Message with %lu attachments (%lu downloaded ics)
Error when reading attachment at %@:
Error when instantiating ICSDocument for attachment at %@:
Preparing for queries
Running finishSuggestionsSetup (harvestStore=%@, defaultStore=%@)
Error during %@ setup: %@
Sending processing of %@ %@ from %@ to plugin %@
Plugin reported error: %@: %@
Sending processing of interaction %@ from %@ to %@
Plugin %@ requesting historical data: %@
sending purge of %lu items from %@ to plugin %@
sending deletion of %lu items from %@ to plugin %@
sending deletion of %lu domains from %@ to plugin %@
sending deletion of bundle %@ to plugin %@
Refreshing due to account change: %@
Filtering account change that we don't care about: %@
Failed to fetch CalDAV accounts: %@
Calendar accounts updated: %@
SGRemindersAdapter: Not adding reminder that has dueDate in the past
SGRemindersAdapter: PseudoReminder found in Found in Apps list, not adding
SGRemindersAdapter: Duplicate found in user defined list, not adding
SGRemindersAdapter: Adding Reminder with recordId: %@
Reminder is not a valid new one, already exists in SGSuggestHistory
SGRemindersAdapter: Confirming reminder
SGRemindersAdapter: Rejecting reminder
SGRemindersAdapter: alarm triggered from this device
SGRemindersAdapter: Not removing reminder since it's an allDay reminder
SGRemindersAdapter: Confirming reminder from other device
SGRemindersAdapter: Rejecting reminder from other device
SGRemindersAdapter: Removing pseudo reminder because of parent deletion
Multiple reminders linked to one storage reminder
Didn't find any REMReminders to reject
Unable to retrieve found in apps list: %@
Unable to load RemindersFoundInApps list
Unable to serialize ReminderMetadata: %@
Saving Reminder with universal link: %@
Unable to save reminder in ReminderKit error: %@
Unable to delete reminder in ReminderKit error: %@
Unable to load metadata from reminder with id: %@ error: %@
SGRemindersAdapter: Duplicate reminder found based on exact title match
SGRemindersAdapter: Duplicate reminder found based on dueDate and edit distance of title
SGRemindersAdapter - [SGStorageReminder (%{public}@)] constructNotesForReminder: Unable to fetch contact: %{public}@
SGMISaliencyInference: Mail %@ is a sent mail
SGMISaliencyInference: Error - config shouldn't be nil when inferencing saliency
SGMISaliencyInference: No submodels for message ID: %@
SGMISaliencyInference: rule based inference for message ID: %@
SGMISaliencyInference: Performing saliency inference for e-mail message.
Self-id: Skipping - outgoing message
Self-id: Not-a-known-name "%@" word in candidate "%@"
Self-id: Found NO name to extract from candidate "%@"
Self-id: Extracted name "%@" from candidate "%@"
Self-id: Extracted partial name "%@" from candidate "%@"
Self-id: looking for pattern match in: "%@"
Message-Id header not found. Using hash: %@
Skipping setAuthor: detectContacts is OFF
Unknown SGMessage subclass
Ignoring invalid email: %s
Tagging as inhuman: Body
Tagging as human: Headers
SGSuggestHistory: Entering migrateIfNeeded
SGSuggestHistory: Exiting migrateIfNeeded (fromKVS is nil)
SGSuggestHistory: Exiting migrateIfNeeded (migration not needed)
SGSuggestHistory: migrateIfNeeded session %{public}@
SGSuggestHistory: Timed out in migrateIfNeeded -- Ending transaction but migration will continue (unless we probabilistically crash)
SGSuggestHistory: migrateIfNeeded on queue
SGSuggestHistory: migrateIfNeeded aborting due to nil strongSelf
SGSuggestHistory: migrateIfNeeded %@
SGSuggestHistory: needsMigration returning YES because migrationToken is nil
SGSuggestHistory: needsMigration returning YES because migrationToken %{public}@ is not set in the KVS
SGSuggestHistory: needsMigration returning NO because migrationToken %{public}@ is already set in the KVS
SGSuggestHistory: recording successful migration using token %{public}@
SGSuggestHistory: migrateFromKVS aborting to avoid re-entrancy
SGSuggestHistory: migrateFromKVS succeeded, deleting keys from fromKVS: %@
SGSuggestHistory: migrateFromKVS %@, calling completion block...
SGSuggestHistory: migrateFromKVS aborting, %f sec elapsed since last migration but cooldown period is %f
SGSuggestHistory: migrateFromKVS aborting due to nil destination kvs
SGSuggestHistory: migrateFromKVS successfully synced fromKVS
SGSuggestHistory: migrateFromKVS error syncing fromKVS (will still proceed with migration, this is a best-effort thing): %@
SGSuggestHistory: migrateFromKVS bailing, migration no longer needed after attempting to sync dest KVS
SGSuggestHistory: migrateFromKVS bailing due to error syncing dest KVS: %@
SGSuggestHistory: migrateFromKVS copying salt %{private}@ to new kvs
SGSuggestHistory: bailing with success because new (%{private}@) and old (%{private}@) kvs have different salts
SGSuggestHistory: migrateFromKVS copying legacy manatee salt %{private}@
SGSuggestHistory: migrateFromKVS not copying legacy manatee salt because no legacy manatee salt has been generated
SGSuggestHistory: migrateFromKVS legacy manatee salt %{private}@ in fromKVS conflicts with existing legacy manatee salt %{private}@ in dest, so we're going to bail with success
SGSuggestHistory: migrateFromKVS for key %{public}@ has no existing data in fromKVS, so skipping
SGSuggestHistory: migrateFromKVS for key %{public}@ failed to decode data in fromKVS, so skipping
SGSuggestHistory: migrateFromKVS for key %{public}@ fromKVS does not have any existing entries in dest, so copying the serialized object directly
SGSuggestHistory: migrateFromKVS for key %{public}@ fromKVS does not have any entries that aren't already in dest
SGSuggestHistory: migrateFromKVS for key %{public}@ fromKVS migrating %tu entries from fromKVS to dest kvs that dest kvs didn't already have
SGSuggestHistory: migrateFromKVS newDestData is nil for key %{public}@! this should not happen. src: %{private}@, dest: %{private}@
SGSuggestHistory: migrateFromKVS for key %{public}@ newDestData is length %tu
Suppressing cloud sync. This should happen in testing only.
SGSuggestHistory is a no-op with kvs == nil!
Something went wrong with trying to synchronize icloud store
Empty or corrupt resetInfo
Pushing confirmed events set with %i items
Pushing confirmed events without timestamp set with %i items
Pushing rejected events set with %i items
Pushing confirmed reminders set with %i items
Pushing rejected reminders set with %i items
Pushing confirmed event fields set with %i items
Pushing confirmed event without timestamp fields set with %i items
Pushing contacts set with %i items
Pushing storage details set with %i items
Pushing do-not-update set with %i items
Pushing reset info (generation %lu, timestamp %.1f)
SGCK legacy Manatee salt not supported
SGCK will use legacy manatee hashes
SGCK legacyIOS13HashesForClassicHashes was passed a hash that is already a ios13 hash
Resetting suggestions history
Suggestions history synced data change, reason=%i
Resetting history due to a KVS reset event within %g sec time window.
Suppressing KVS history reset because time window has expired.
SGSuggestHistory - Receive updated confirmed event hashes (%{public}lu total, %{public}lu new)
SGSuggestHistory - Receive updated rejected event hashes (%{public}lu total, %{public}lu new)
SGSuggestHistory - Receive updated confirmed event field hashes (%{public}lu total)
SGSuggestHistory - Receive updated confirmed event field without timestamp hashes (%{public}lu total)
SGSuggestHistory - Receive updated confirmed reminder hashes (%{public}lu total, %{public}lu new)
SGSuggestHistory - Receive updated rejected reminder hashes (%{public}lu total %lu new)
Receive updated contact hashes (%lu total)
Receive updated storage detail hashes (%lu total)
Receive updated don't-update hashes (%lu total)
KVS account change
Exceeded iCloud key value storage quota. Can't store any more acted on suggestions.
SGSuggestHistory calling migrateIfNeeded due to NSUbiquitousKeyValueStoreAccountChange
Confirming or rejecting record for contact %@
Confirming or rejecting contact %@
Rejecting contact %@
Don't know how to deal with this realtime contact state (state = %i)
Confirming event %@
Confirming storage event %@
Rejecting event %@
Rejecting storage event %@
Confirming reminder with opaqueKey %@
Rejecting reminder with opaqueKey %@
Argument must be of type SGRealtimeContact or SGRealtimeEvent, but was %@
Error opening file %@ at base path: %@
Lossy conversion. Detected charset: %ld (expected: %ld)
Found %i DD sigs for same person. Using sig %i with %i subresults
Error initializing SGMIAttachmentSizeHistogram with numberArray: %@
Got nil name
Follow Up. [analyzeFeatureVector] Analyze Feature Vector with messageId %@. Feature Vector: %{sensitive}@
Follow Up. [analyzeFeatureVector] Storing Detection Stats for Warning  %{sensitive}@
Follow Up. [_analyzeFeatureVector] Analyze Feature Vector for messageId %@. Feature Vector: %{sensitive}@ with CustomRange %@
Follow Up. [_analyzeFeatureVector] SGMIWarningsConfig loaded: %@
Follow Up. [_analyzeFeatureVector] Aborting computation. Language %@, Config %@, Body %{sensitive}@, RegExpDictionary %@
Follow Up. [_analyzeFeatureVector][RegEx loop] Checking for a match in RegEx: %@
Follow Up. [_analyzeFeatureVector] Match found: %{sensitive}@
Follow Up. [_analyzeFeatureVector] Match valid: %{sensitive}@
Follow Up. [_analyzeFeatureVector] Looking for a potential time reference in: %{sensitive}@
Follow Up. [_analyzeFeatureVector] Exploring Data Detector matches.
Follow Up. [_analyzeFeatureVector] Exploration Data Detector matches finished. Warning start date %{sensitive}@
Follow Up. [_analyzeFeatureVector] Exploring Data Detector Mapped Additions matches.
Follow Up. [_analyzeFeatureVector] Exploration Data Detector Mapped Additions matches finished. Warning start date %{sensitive}@
Follow Up. [_analyzeFeatureVector] Exploring Data Detector Additions matches.
Follow Up. [_analyzeFeatureVector] Exploration Data Detector Additions matches finished. Warning start date %{sensitive}@
Follow Up. [_analyzeFeatureVector] Warning not raised, as one of the following is nil. isNil_snippet: %@, isNil_signature: %@, isNil_detectedLanguage: %@, isNil_startDate: %@
Follow Up. [_analyzeFeatureVector] Exiting the method. Warning found %{sensitive}@
Follow Up. [_analyzeFeatureVector] followUpTimeRangeForDebugging was set in defaults settings. Overriding the custom time range for warning %{sensitive}@
Follow Up. [identifyFollowUpWarningFromSubject:content:] Computing warning for subject: %{sensitive}@ body:%{sensitive}@
Follow Up. [identifyFollowUpWarningFromSubject:body:] Computing warning for subject: %{sensitive}@ body:%{sensitive}@
SGMIFollowUpManager: Mail Intelligence's SPI back end timed out
SGMIFollowUpManager: Mail Intelligence's SPI back took over 5 seconds on a %tu-lengthed content: we have to xpc_transaction_exit_clean
Follow Up. [analyzeForFollowUpMailWithBody:isSent:messageId:date] Can't initialize mailDictionary: nil object. body: %{sensitive}@, isNil_body: %@, messageId: %@, date: %@
Follow Up. [analyzeOutgoingMailFeatureVector] nil config. Follow Up processing aborted.
Follow Up. [analyzeOutgoingMailFeatureVector] detectedLanguage: %@ regExLanguage %@ regexes loaded: %@
[Follow Up] CustomTimeRange behavior specified in asset overriden by default setting. Value: %@
SGMI received %@ feedback for follow up warning
[Follow Up] Engagement type %ld received is not supported.
SGMIFollowUpManager Sending an event to CoreAnalytics: FollowUp is %@
Unable to load plplist content for %@: %@
Unable to resolve path: %@
Unable to create input MLMultiArray: %@
inputDictFromTaggedCharacterRanges: '' not present for inputSection: %@
featureDimensionForInputSection: Model doesn't have description for inputSection: %@
SGExtractioNModel: Unable to find URL for model
Unable to map output to label
Found no Lemma input when trying to extend output label to sequence length.
SGExtractionModel: Couldn't delete model file: %@
Sqlite error while rebuilding identity tables: %@
Can't create interdicts for blob of size %lu; skipping.
Merge group containing %lu names exceeds limit of %lu; skipping interdict construction.
Merge group mapping to %lu CNContacts exceeds limit of %lu; skipping interdict construction.
Failed to encode mergeBlob: %@
Starting identity blob analysis.
Blob analysis complete.
Blob analysis deferring.
Could not defer blob analysis.
Loading pattern plist, path: %@
Loading pattern pldat, path: %@
Loading pattern data from path "%@"
Reinstating death for %i objects
Pausing death for %i objects
Range {%tu, %tu} out of bounds; string length: %tu
Quick responses: No likely language prediction for conversation
Quick responses: Text message has no conversation identifier
Quick responses: processing is disabled for group messages
Quick responses: response message is much too long for labeling or DP reporting
Quick responses: processing requires at least two text messages
Quick responses: No model available for language: %@
Quick responses: processing requires the prompt and reply to have a single sender handle
Quick responses: processing requires the reply to be to a different person's prompt
Quick responses: processing requires the prompt and the reply to have text content
Quick responses: processing requires the prompt to be no more than %lu characters in length
Quick responses: using dynamic label with unique identifier %@
Quick responses: not keeping response message because it is greater than %lu characters in length
Quick responses: labeler failed to offer positive or negative label in language %@
Quick responses: dropping sample with label %@
Quick responses: keeping sample with label %@
Quick responses: not adding session for training - localTraining %d, spotlightReference %d, vector %d, sessionDescriptor %d, version: %@
SGMISaliencyModelConfig: Could not process rule set; name array from Trial is nil.
SGMISaliencyModelConfig: Could not process rule set; lower bounds array from Trial is nil.
SGMISaliencyModelConfig: Could not process rule set; upper bounds array from Trial is nil.
SGMISaliencyModelConfig: Could not process rule set; outputs array from Trial is nil.
SGMISaliencyModelConfig: Inconsistent array sizes in Trial asset.
SGMISaliencyModelConfig: Unexpected feature %@
SGMISaliencyModelConfig: Error in processing outstanding saliency rules.
SGMISaliencyModelConfig: Error, mean for feature standardization is nil.
SGMISaliencyModelConfig: Error in processing ground truth estimation rules.
SGMISaliencyModelConfig: Error, classification threshold is nil.
SGMISaliencyModelConfig: Error, minCountToConsiderATokenAsHighlyDiscriminant is nil.
SGMISaliencyModelConfig: Error, ratioToConsiderATokenAsHighlyDiscriminant is nil.
SGMISaliencyModelConfig: Error, minCountToConsiderATokenAsExtremelyDiscriminant is nil.
SGMISaliencyModelConfig: Error, ratioToConsiderATokenAsExtremelyDiscriminant is nil.
SGLowMemoryContactEnumeration got an error from Spotlight: %@
SGLexicon: Unable to load lexicon, %@
SGLexicon: non utf-8 token passed
Could not load nicknames from %@: %@
Unexpected object returned from Contact Store: %@ Retrieved From %@
SGContactsInterface: CNPhoneNumber initWithStringValue returned nil
Unsupported handleType: %@
Error enumerating contacts: %@
Expecting NSString for airportName but found something else: %@. Asset version = %lu
No airports found in common
Could not get airport code for airport "%@" from flights %@ on carrier %@ because they do not have at least 1 airport in common
Skipping levenshtein for airport "%@" flights %@ on carrier %@ because they have exactly one airport in common: %@
Filtered event records from %tu to %tu filtering for teamIdentifier %@: %@ -> %@
Failed to load model chunk file resource %s
Model loaded.
Failed to locate assets resource %s
Loading model {entity: %s, type: %s, language: %s, version: %tu, path: %s}
Invalid model string: %s
Unknown model class: %s
Unknown model name: %s
More than one prediction model specified for objective %lu, language: %@, models: %@
Failed to load model (objective: %lu, langauge: %@, name: %@)
No prediction model specified for objective %lu, language: %@
Error listing contents of directory %@: %@
Could not unlink %@ while rotating: errno=%i
Rotating bloom filters
Could not move %@ to %@: errno=%i
Could not unlink %@: errno=%i
Could not open Bloom filter file. errno = %i
Could not mmap Bloom filter file. errno = %i
Quick responses: A conversation must have more than 2 messages for a prompt; returning prompt as nil
Quick responses: Most recent message is not a response to a prompt
Error decoding null message.textContent in %@:
Could not open %@: errno=%i: %s
Could not fstat %@: errno=%i: %s
Could not write to journal file %@: errno=%i: %s
Could not read from journal file %@: errno=%i: %s
Journal file has invalid magic number: expected 0x%x, got 0x%x: %@
Journal file truncated: %@
Journal file checksum mismatch: %@: %u / %u
Could not remove %@: errno=%i: %s
SGReminderExtractionModel: Loading model from trial override at path: %@
No inputTokenMapping found
No output configuration found.
Preparing model inference
Model initialization failed
Unable to load model features.
Attempt to read stored logs
Corrupted persistent logging store! Removing corrupted store.
Exception we're not catching
New logging store
SGRTCLogging going away now
RTCLogging: usageMaps: %@, (%@ Maps launch in past 2 weeks)
RTCLogging: usageCalendar: %@, (%@ Calendar events found)
RTCLogging: log and increment interaction key: %@, for eventKey: %@
RTCLogging: can't find eventKey in loggedInteractionsSummary dictionary
RTCLogging: log new interaction summary: %@
RTCLogging: log new interaction: %@
RTCLogging: log extraction (%@) to RTC for templateName: %@ timingProcessing: %llu
RTCLogging: log extraction from Message Event Dissector (%@) to RTC for templateName: %@ timingProcessing: %llu
RTCLogging: entity can't be found
RTCLogging: entity.duplicateKey.entityKey serialization failed
RTCLogging: logging interaction to RTC for interactionKey: %@, eventKey: %@
RTCLogging: Sending privacy-aware suggestions log over the network
RTCLogging: No RTC logs to send this time. Skipping.
RTCLogging: Selected logs (%lu): %@
RTCLogging: No RTC backends found, no logs will be sent at this time.
RTCLogging: Aborting sending of logs as shouldContinueBlock returned NO
RTCLogging: Unable to send logs: %@
RTCLogging: Unable to send logs for storeAge: %@
RTCLogging: Unable to flush logs
Couldn't create the privacy-aware store for Suggestions.
Persisting some logs to disk!
failed to store reimport request: %@: %@
failed to mark reimport request %llu as queried: %@
failed to mark reimport request %llu as executed: %@
failed to mark %tu reimport items for %@ as seen: %@
failed to mark reimport item %@/%@ as seen: %@
failed to update reimport uniqueId item from %@ to %@: %@
failed to load unqueried reimport requests: %@
failed to load unseen reimport items for request: %llu: %@
failed to delete reimport requests older than: %@: %@
failed to delete completed reimport requests: %@
failed to delete orphaned reimport items: %@
error during reimportRequestDBStats query of reimportRequests: %@
error during reimportRequestDBStats query of reimportItems: %@
Already registered for activities
Checking in for activity %s
Stub activity called for %s
Activity "%s" has not registered with the system yet. Returning nil.
Ignoring CTS criteria change as it didn't change.
Setting CTS criteria for activity: %@, criteria: %@
_actuallyAddEvents bailing due to nil weakStore
Got error %@ while fetching unique identifiers for mail message ids %@
Error while writing %tu enrichment appends to %@ protection class: %@
Timed out waiting for spotlight to write enrichment appends
JSON decode error loading schemas: %@
JS not interrupted after 2x timeout!
SGReverseTemplateJS: Received %@ notification.
SGReverseTemplateJS: Queuing request to free JS context.
SGReverseTemplateJS: Asset version = %lu
SGReverseTemplateJS: List of loaded JS files in context = %@
SGReverseTemplateJS: suppressed process memory warning %lu times
Javascript execution timed out! Backtrace:
SGReverseTemplateJS: initialized JS context.
SGReverseTemplateJS: freeing JS context.
SGReverseTemplateJS: loading %@ in JS context.
JS log: %@
%{public}@
Can't get flightInformation, airlineCode is nil
Can't get flightInformation, flightNumber is nil
Can't get flightInformation, flightDate is nil
Can't get flightInformation, could not parse flightDate
SGReverseTemplateJS: completed initialization of JS context.
Could not load data asset %@: %@
SGReverseTemplateJS flightInformationWithAirlineCode: Can't get flightInformation, airlineCode is nil
SGReverseTemplateJS flightInformationWithAirlineCode: Can't get flightInformation, flightNumber is nil
SGReverseTemplateJS flightInformationWithAirlineCode: Can't get flightInformation, flightDate is nil
SGReverseTemplateJS flightInformationWithAirlineCode: Can't get flightInformation, flightDate is malformed
SGReverseTemplateJS flightInformationWithAirlineCode: bundleIdentifier is undefined.
flightInformationWithAirlineCode flightInformationWithAirlineCode: error when calling CoreParsec for: %@, %@, %@ = %@
SGReverseTemplateJS flightInformationWithAirlineCode: CoreParsec results for: %@, %@, %@ = %@
SGReverseTemplateJS loadJSFromASCIIFile: no file defined.
SGReverseTemplateJS loadJSFromASCIIFile: Error loading JS file %@: %@
Tried to call shouldDownloadFull without JS assets
Called shouldDownloadFull with result = %d
JS exception during shouldDownloadFull: %@.
SGReverseTemplateJS: Calling js for event classification
Tried to call eventClassificationForEntity without JS assets
SGReverseTemplateJS: Called eventClassificationForEntity with result: %@
SGReverseTemplateJS _eventClassificationForEntity: JS Exception during eventClassificationForEntity: %@
SGReverseTemplateJS: Calling JS to resolve candidates
Tried to call resolveCandidatesForJSDict without JS assets
SGReverseTemplateJS: Called resolveCandidatesForJSDict with result: %@
SGReverseTemplateJS: JS Exception during resolveCandidatesForJSDict: %@
SGReverseTemplateJS: Calling JS to get privacy aware logging
Tried to call getPrivacyAwareMlLogs without JS assets
SGReverseTemplateJS: Called getPrivacyAwareMlLogs with result: %@
SGReverseTemplateJS: JS Exception during getPrivacyAwareMlLogs: %@
SGReverseTemplateJS: Calling JS to get flight references and reservation id given text message
Tried to call getFlightReferencesAndReservationId without JS assets
SGReverseTemplateJS: Called getFlightReferencesAndReservationId with result: %@
SGReverseTemplateJS: JS Exception during getFlightReferencesAndReservationId: %@
SGReverseTemplateJS: Calling JS to diff schemas
Tried to call diffSchemas without JS assets
SGReverseTemplateJS: Called diffSchemasArrays with result: %@
SGReverseTemplateJS _diffSchemas: JS Exception during diffSchemasArrays: %@
SGReverseTemplateJS: Calling JS to merge schemas
Tried to call mergeSchemas without JS assets
SGReverseTemplateJS: Called mergeSchemasArrays with result: %@
SGReverseTemplateJS _mergeSchemas: JS Exception during mergeSchemasArrays: %@
SGReverseTemplateJS: Tried to call reverseMapEntity without JS assets
SGReverseTemplateJS: Unable to convert JS taggedCharacterRange to Objective-C
SGReverseTemplateJS: JS Exception during reverseMapEntity %@
SGReverseTemplateJS payloadToOutputWithEntryPoint: Tried to call messageToOutput without JS assets
SGReverseTemplateJS: Calling payloadToOutput with entry point: %@
SGReverseTemplateJS payloadToOutputWithEntryPoint: JS exception during messageToOutput: %@
Email: %@ %@ %@ %@ %@ %@ %@ %@ %@ %@
Loading master domains whitelist from path = %@
Received asset update notification. Now loading master domains whitelist from path = %@
SGDomainWhitelistChecker payloadForDomain: trie is nil.
SGDomainWhitelistChecker payloadWithStartChar: trie is nil.
SGDomainWhitelistChecker isStructuredEventCandidateForEmailDomain: trie is nil.
SGStructuredEventTrialClientWrapper: Updating factors
SGStructuredEventTrialClientWrapper: Unable to load plplist for %@ : %@
SGStructuredEventTrialClientWrapper: Unable to load plplist content for %@: %@
SGStructuredEventTrialClientWrapper: TRILevel is nil for foundInMailNotifications
SGStructuredEventTrialClientWrapper: supportedProviders list loaded with Trial: %@
SGStructuredEventTrialClientWrapper: engineConfig list loaded with Trial: %@
SGStructuredEventTrialClientWrapper: structuredEventInputMapping list loaded with Trial: %@
SGStructuredEventTrialClientWrapper: structuredEventOutputMapping list loaded with Trial: %@
SGStructuredEventTrialClientWrapper: foundInMailNotifications: %@
Unable to change SQLite lookaside configuration.
Could not install hasInhumanTag() sqlite function (rc = %i)
Could not install tagsHaveEscapedTag() sqlite function (rc = %i)
Could not install delimitedString() sqlite function (rc = %i)
Could not install firstStringAfterPrefix() sqlite function (rc = %i)
Sqlite could not install busy timeout. (rc = %i)
Sqlite could not install busy handler. (rc = %i)
unable to set auto_vacuum to INCREMENTAL: %@
Write statement should be run in a write transaction: %s
This query was delayed %0.2f ms waiting for db file locked by another sqlite connection: %s
This query was delayed %0.2f ms waiting for db file locked by another sqlite connection -- unknown SQL
failed to get page_count from db: %@. error: %@
failed to get freelist_count from db: %@. error: %@
Calculating pages to vacuum -- pageCount %tu freeCount %tu
not enough pages to vacuum: pageCount: %lu; freeCount: %lu
failed to get auto-vacuum mode from db: %@. error: %@
Will not vacuum db %@ due to device lock state
Called to vacuum %tu pages
failed to set auto_vacuum to INCREMENTAL for db: %@. error: %@
performing FULL VACUUM to make INCREMENTAL effected for db: %@
failed to vacuum db: %@. error: %@
performing INCREMENTAL VACUUM to free %lu pages with %@ iterations for db: %@
Performing incremental vacuum for %tu pages on iteration %d for total pages to free %tu
failed to incremental vacuum db: %@. error: %@
We have a vacuum activity %@ with activity state %@ after %@ batches
We got back that we should defer the vacuuming activity after %@ iterations and having vacuumed %@ pages with deferral success %@
SGStructuredEventDissector: No sender for mailMessage, bailing
SGStructuredEventDissector: extractionSupported: %@, shadowExtraction: %@, pflTraining: %@
SGStructuredEventDissector: Skipping reverse template dissector: detectStructuredEventsML is OFF and provider is not in whitelist
SGStructuredEventDissector: ignoring email
SGStructuredEventDissector: Entity has no content
SGStructuredEventDissector: Previous dissector found event, bailing
SGStructuredEventDissector: skipping shadowLogging extraction for realtime dissection
SGStructuredEventDissector: eventClassification is nil, bailing
SGStructuredEventDissector: Not classified as event, bailing
SGStructuredEventDissector eventClassification: %@
SGStructuredEventDissector: Preprocessed document is nil
SGStructuredEventDissector: Empty enrichedTaggedCharacterRanges
SGStructuredEventDissector: Event found, adding shadow log
SGStructuredEventDissector: Event found, adding ML log and enrichment
Failed to convert object to JSON: %@
SGStructuredEventDissector: Added enrichment
SGStructuredEventDissector: Missing entities for restaurant extraction: %@
SGStructuredEventDissector: Missing entities for hotel extraction: %@
SGStructuredEventDissector: Missing entities for ticket extraction: %@
SGStructuredEventDissector: Missing entities for car extraction: %@
SGStructuredEventDissector: Missing entities for movie extraction: %@
SGStructuredEventDissector: nil domParserResult
SGStructuredEventDissector: no extraction model inferences.
SGStructuredEventDissector: No name for missing entity
SGStructuredEventDissector: annotateContent: empty content or string passed
SGStructuredEventDissector: annotateContent: nil label passed
SGStructuredEventDissector: annotateContent: Unable to create taggedCharacterRange from result
SGScales: %@ took %f seconds
Retrieved location with latitude and longitude both 0
Retrieved location has one valid and one NaN coodinate
Pruning entities older than %0.2f
Pruning mail intelligence data older than one year
Pruning duplicate event entities from web-pages/interactions
web-page event entity exists on calendar, don't delete: %@
entities to delete %@
Pruning duplicate Event entities: %{public}lu
PseudoReminders to prune (%lu), %@
Pruning NL Events older than %f
NL Event entities to delete (%lu) %@
Deleting Mail Intelligence data for %lu messages
SGRealtimeContactConfidenceFeatureVec: <
  contacts with phone number matches: %i
  contacts with name matches: %i
  contact with both phone and name matches: %i
  Phone number matches an existing contact: %s
  Name matches an existing contact: %s
  Email matches an existing contact: %s
  IM Address matches an existing contact: %s
  Existing contact has address: %s
  Address match with existing contact, if both have addrs: %0.3f
  New phone numbers: %i
  New emails: %i
  New IM addresses: %i
  New addresses: %i
  Length of name: %i
  Name has at-sign: %s
SGInhumanityFeatureVec: <
  Has one or more inhuman-looking headers: %s
  Author email address looks inhuman: %s
  Author name looks inhuman: %s
  Body of email contains inhuman phrase: %s
  Domain is a template sender: %s
SGDetectionNotabilityFeatureVec: <
  Is phone number: %s
  Is address: %s
  In HMM-detected sig: %s
  In DD sig: %s
  How far down the email was this found?: %0.3f
  Phone numbers in sig: %i
  Phone numbers in email: %i
  Addresses in sig: %i
  Addresses in email: %i
SGMISaliencyModel: Loading CoreML model.
SGMISaliencyModel: Loading model from Trial at path: %@
SGMISaliencyModel: Error converting model path to file URL
SGMISaliencyModel: Invalid model path specifeid via Trial configuration.
SGMISaliencyModel: Error while initializing MLModel: %@
SGMISaliencyModel: Finished loading CoreML model.
SGMISaliencyModel: Unable to load SGMISaliencyModelConfig defaultConfig
Error - Couldn't get default saliency model when trying to run inference.
Error while preparing feature vector for mlmodel: dimension mismatch, expecting %@ got %lu
SGMISaliencyModel: Error while initializing MLMultiArray for SGMISaliencyModel inference: %@
SGMISaliencyModel: Error while running SGMISaliencyModel inference: %@
SGMISaliencyModel: Error while parsing SGMISaliencyModel inference.
Given a putative e-mail address with no @
Given a putative e-mail address with no @: %@
Processing event with eventName: %@
failed to load snippet data for entity: %@
Unable to calculate stats from entity table: %@
Unable to count merged pseudocontacts: %@
Unable to calculate stats from serializedContacts table: %@
Unable to count entity_fts: %@
Unable to count details in entity_fts: %@
Unable to count snippets: %@
Unable to count snippets with titles: %@
Unable to count snippets with content: %@
Unable to count tombstones: %@
Unable to count orphaned entities: %@
Unable to dump stats: %@
GroupID lookup found unexpected entity type for contact detail (%@)
registering cache precomputation work with CTS
SGSqlEntityStore cache precomputation due to CTS
serializing contacts due to CTS
Finished updating serialized contacts in %0.3f seconds
pre-calculating CN to SG contact matches due to CTS
all async jobs for cache precomputation are done
dbStats returned nil during reportDbStats
reported db stats to AggD
Failed to report dbStats to AggD: %@
SGDOMParser: Error parsing tcr tags from js
SGGDOMParser: Unable to load WKWebConfiguration
SGDOMParser: datastore is nil
SGDOMParser: Unable to load WebView
SGDOMParser: Loaded HTML Document
SGDOMParser: Nil path for HTMLPreprocessor from asset
SGDOMParser: jsContent nil: %@
Error evaluating JS: %@
_SGDCloudKitSyncPersistedState got invalid class name in property: %@
SGCK Persisted state changed (keyPath: %@, change: %@, self: %@)
SGCK Disabling due to incompatible version
SGCK Operation queue suspended
SGCK Will suspend operation queue for delay: %f
SGCK Resuming operation queue
SGCK Suspending sync due to unsynced keychain: %@
SGCK Resuming sync after suspension due to unsynced keychain
SGCK Delaying for %@ seconds (error: %@)
SGCK CloudKit framework recommends retry without delay for error: %@
SGCK addDeleteZoneOperation - Skipping because of out of date software
SGCK addDeleteZoneOperation - Returning operation already in flight
SGCK addDeleteZoneOperation - Adding new operation to operation queue
SGCK addDeleteZoneOperation - Operation completed with error: %@
SGCK addDeleteZoneOperation - Operation completed successfully
SGCK addDeleteZoneAttemptOperationWithRetries:%lu
SGCK Ran out of retries for delete zone operation with network failure: %@
SGCK Unrecoverable error for delete zone operation: %@
SGCK addCreateZoneOperation - Skipping because of out of date software
SGCK addCreateZoneOperation - Returning operation already in flight
SGCK addCreateZoneOperation - Adding new operation to operation queue
SGCK addCreateZoneOperation - Operation completed with error: %@
SGCK addCreateZoneOperation - Operation completed successfully
SGCK addCreateZoneAttemptOperationWithRetries:%lu
SGCK addCreateZoneAttemptOperationWithRetries:%lu - SUCCESS (zone created or already exists)
SGCK got PCS user identity unknown error while creating zone. Running processStateChanges just to be sure we didn't miss anything.
SGCK aborting create zone because out of retries for retry-able error: %@
SGCK Unrecoverable error for create zone operation: %@
SGCK addManateeSanityCheckOperation - Skipping because of out of date software
SGCK Creating Manatee health check operation...
SGCK Manatee health check returned without errors
SGCK Operation error during Manatee sanity check: %@
SGCK Missing Manatee identity detected during sanity check. Deleting-and-then-re-creating zone... (record zone error: %@)
SGCK addProcureSaltOperation - Skipping because of out of date software
SGCK addProcureSaltOperation - Returning operation already in flight
SGCK addProcureSaltOperation - Adding new operation to operation queue
SGCK addProcureSaltOperation - Operation completed with error: %@
SGCK addProcureSaltOperation - Operation completed successfully
SGCK addProcureSaltAttemptOperationWithRetries:%lu
SGCK Will recreate zone and try to procure salt again (error: %@)
SGCK Using existing salt record found on server
SGCK Zone missing while procuring salt: %@
SGCK Will attempt to create zone and then try procuring salt again
SGCK Unrecoverable error while procuring salt: %@
SGCK Successfully procured Manatee salt with atomic reference name %@
SGCK procuredSaltRecord missing critical fields (se=%@, a=%@)! This should not be possible and no recovery path is implemented. CloudKit writes will fail.
SGCK addFetchNewEntitiesOperation - Skipping because of out of date software
SGCK addFetchNewEntitiesOperation - Deferring because not ready for new entities.
SGCK addFetchNewEntitiesOperation - Returning operation already in flight, changing value of _requestedFetchNewEntitiesWhileRequestAlreadyInFlight from %@ to YES
SGCK addFetchNewEntitiesOperation - Adding new operation to operation queue
SGCK addFetchNewEntitiesOperation - Operation completed
SGCK addFetchNewEntitiesAttemptOperationWithRetries:%lu
SGCK ignoring fetched new entities because we are not in a sync enabled state
SGCK ignoring record zone completion block because we are not in a sync enabled state
SGCK Storage was not ready. Will sync again when it's purportedly available.
SGCK Giving up on fetching new changes because out of retries for error: %@
SGCK Change token expired (error: %@)
SGCK Will try fetching again without change token
SGCK Giving up on fetching changes due to unrecoverable error %@
SGCK Fetching more entities from server for these reasons: [%@] Server indicated more entities are coming, [%@] Client was asked again to fetch more entities while this request was already in-flight
SGCK Finished requesting more entities from server.
SGCK addWriteOperationForRecordGetter - Skipping because of out of date software
SGCK Failing to write entity due to unrecoverable error: %@
SGCK Adding and waiting for zone creation before writing entity.
SGCK Adding and waiting for salt procurement before writing entity.
SGCK Will write entity records: %@, delete entity records: %@, retries remaining: %lu
SGCK Will recreate zone and salt and try to write record again (error: %@)
SGCK Zone missing while trying to write or delete record. Setting _noZone flag.
SGCK Retrying after zone missing error
SGCK Not retrying because there is nothing to write.
SGCK Salt atomic reference check failed while trying to write record. Calling failSalt.
SGCK Retrying after salt missing reference error.
SGCK Will wait for in-progress procure salt operation before writing or deleting an entity
SGCK Will wait for in-progress create zone operation before writing or deleting an entity
SGCK Instantiating +[SGCK sharedInstance]
SGCK Running configuration block via +[SGCK sharedInstance] (the configuration block was specified prior to sharedInstance being called for the first time)
SGCK Configuration block has completed from within +[SGCK sharedInstance]'s first invocation. Setting the block to nil.
SGCK No configuration block has been specified before the first invocation of +[SGCK sharedInstance]. If a configuration block is set later on, it will be run immediately.
SGCK Setting configuration block...
SGCK The shared instance already exists, so the configuration block will run immediately.
SGCK Done running the completion block immediately from +[SGCK setSharedInstanceConfigurationBlock:]
SGCK The shared instance doesn't exist yet, so the configuration block won't run until it's instantiated.
SGCK Will add CK operation to queue: %@
SGCK added %lu operations to queue (pending operation count: %lu)
SGCK Existing persisted state was saved but could not be deserialized.
SGCK No persisted state exists for this user.
SGCK Creating new persisted state.
SGCK Discarding non-manatee salt
SGCK Already processing state changes -- will re-process again once complete.
SGCK Already processing state changes and re-processing once complete already scheduled as well.
SGCK Re-processing state changes because a request came in while this one was in progress...
SGCK processStateChanges -- failing salt because !supportsDeviceToDeviceEncryption
SGCK System State Change: Sync %@ --> %@
SGCK About to invoke _deleteAllSyncedItemsCallback from background queue...
SGCK Finished invoking _deleteAllSyncedItemsCallback on background queue. Now hopping back onto _queue...
SGCK Entering sgckQueueBlock.
SGCK deleteAllSyncedItemsSucceeded == YES
SGCK deleteAllSyncedItemsSucceeded == NO. Will defer a processStateChanges.
SGCK About to hop on to background queue to invoke _deleteAllSyncedItemsCallback
SGCK Skipping background queue block because _readyForNewEntities is false.
SGCK Creating subscription in response to state change
SGCK Will fetch new entities in response to state change
SGCK Set new persisted state.
SGCK accountChanged:%@
SGCK accountChanged: - existing future is complete. Setting to nil.
SGCK accountChanged: - existing future is in-flight. Creating a new request...
SGCK accountInfo - returning existing SGFuture
SGCK accountInfo - completionHandler - %@, %@
SGCK accountInfo - completionHandler - received error and/or failed to get account info: %@, %@
SGCK accountInfo - completionHandler - completing future
SGCK accountInfo - completionHandler - ignoring result because a newer request is in flight
SGCK accountInfo - Scheduling call to CloudKit (already one in flight: %@)
SGCK accountInfo - Calling CloudKit (-[CKContainer accountInfoWithCompletionHandler:])
SGCK should remove events from EK because there is no primary iCloud Calendar account
SGCK Going to request account info to determine whether events should be removed from EK...
SGCK Received account info, decision on whether to remove events from EK: %@ (error: %@)
SGCK Got APS environment string: %@ (error: %@, container: %@)
SGCK Error when getting preferred push env. Defaulting to prod instead. Error: %@
SGCK Going to create subscription (retries: %lu)
SGCK Setting hasSubscription persisted flag because new subscription was created successfully
SGCK Setting hasSubscription persisted flag because duplicate subscription already exists on server. This should only happen after a suggest_tool reset.
SGCK Error while attempting to create subscription: %@
SGCK Will re-attempt subscription creation
SGCK Got database: %@, container: %@
SGCK device does not have a subscription. Checking eligibility before creating one...
SGCK Device is eligible. Creating subscription via setDatabase: path...
SGCK actually creating subscription via setDatabase path...
SGCK setDatabase: not going to create subscription because something else created it...
SGCK backfill via setDatabase: path...
SGCK device account (or lack thereof) is not eligible -- not creating subscription
SGCK APS (APNS) Environment: %@
SGCK Error getting APS environment string -- APNS will not work!: %@
CloudKit database %@ has nil container, therefore cannot get APS environment strong and APNS will not work.
SGCK Handling primary iCloud Calendar account change (%@ --> %@)
SGCK addEntity:%@ %@
SGCK addEntity: - ignoring because groupId is nil
SGCK Not adding entity to CloudKit because current state prohibits syncing
Begin: Transmitting Calendar Event
End: Transmitting Calendar Event
SGCK deleteGroupId:%@
SGCK deleteGroupId: passed nil groupId...returning...
SGCK Not deleting entity from CloudKit because current state prohibits syncing
Begin: Transmitting Confirm/Reject Of Calendar Event
End: Transmitting Confirm/Reject Of Calendar Event
SGCK setReadyForNewEntities:%@
SGCK ignoring because readyForNewEntities == _readyForNewEntities
SGCK processing deferred state changes...
SGCK no deferred state changes
SGCK processing deferred sync...
SGCK no deferred sync
SGCK deleteStorageEvent failed because no group id
SGCK privacySalt ensuring not already on _queue...
SGCK privacySalt immediately returning empty NSData because [SGPreferenceStorage useManateeSaltForHistory] is false
SGCK privacySalt about to dispatch_sync to _queue
SGCK privacySalt is now on _queue
SGCK privacySalt reusing existing future
SGCK privacySalt is resolving to empty data because CKErrorIncompatibleVersion was previously encountered, indicating that the server no longer supports syncing with this software version
SGCK privacySalt about to wait on accountInfoFuture
SGCK privacySalt finished waiting on accountInfoFuture
SGCK privacySalt error retrieving account info: %@
SGCK privacySalt resolving to empty data because iCloud account is restricted (parental controls, etc)
SGCK privacySalt resolving to empty data because there is no iCloud account
SGCK privacySalt resolving to empty data because device-to-device encryption is not supported
SGCK privacySalt succeeded (using existing known salt)
SGCK privacySalt resolving to empty data because no salt has been generated yet
SGCK privacySalt future did not complete synchronously; will store future in _privacySaltFuture for reuse
SGCK privacySalt future asynchronously completed, will set _privacySaltFuture to nil
SGCK privacySalt outcome: %@ result, %@ error
SGCK connection:%@ didReceiveToken:%@ forTopic:%@ identifier:%@
SGCK connection:%@ didReceivePublicToken:%@
SGCK connection:%@ didReceiveIncomingMessage:%@
SGCK Got an APNS notification, but not syncing because sync is currently disabled.
SGCK Will fetch new entities for incoming message
SGCK connection:%@ didSendOutgoingMessage:%@
SGCK connection:%@ didFailToSendOutgoingMessage:%@ error:%@
SGCK connection:%@ didChangeConnectedStatus:%@
SGCK connectionDidReconnect:%@
SGCK confirmEventFromThisDevice
SGCK confirmEventFromOtherDevice [IGNORED]
SGCK rejectEventFromThisDevice
SGCK rejectEventFromOtherDevice [IGNORED]
Could not open chat length estimator at %@: %s (errno %i)
Could not mmap chat length estimator file at %@: %s (errno %i)
Chat length estimator reached max size. Clearing.
Error accessing boolValue. numberValue is nil
Error accessing floatValue. numberValue is nil
Error accessing doubleValue. numberValue is nil
Error accessing intValue. numberValue is nil
Error accessing integerValue. numberValue is nil
SGCK Skipping unsupported CloudKit record (record created by version: %@, version required to process record: %@, version running on this device: %@)
SGCK Reading pre-Manatee CloudKit record.
SGCK Error: Record version higher than 3 did not contain parent entity type.
SGCK Error: Record with type interaction is missing interaction info.
SGCK Error: Record with type interaction is missing interaction bundle id.
SGCK Error: Record contained unsupported entity type %lld
SGCK error decoding schema.org plist: %@
SGCK Error decoding schema.org plist: %@
SGCK Error decoding metadata plist: %@
SGCK Error serializing schema.org to plist: %@
SGCK error converting schema.org to plist.
SGCK Error serializing event metadata to plist: %@
SGCK Error converting event metadata to plist.
SGCK Reservation item reference value was nil for interaction entity
SGContactSharingModel - Invalid model config for path: %@
SGContactSharingModel - Could not find transformer instance for language: %@
SGContactSharing Model - Could not initialize featurizer and sessionDescriptor from config.
contact.significance property is true. skipping all other check.
Contact is significant: Found in bloom filter (email)
Contact is significant: Found in bloom filter (phone)
Sender isn't in bloom filter, checking recents
Contact is significant: Found in recents
Contact is significant - VIP email address
Contact is not significant
Contact is not significant, but selecting anyway due to preference setting
Contact is significant: Update to curated contact
Realtime contact is not significant, but selecting anyway due to preference setting
Email Address is significant: Found in bloom filter
Email Address is significant: Found in recents
Email Address is not significant
Handle is significant: Found in bloom filter
Handle is significant: Found in recents
Handle is not significant
Looking up in custom tester function instead of actually hitting recents
Unable to search recents; error: %@
Email was not found in recents
Found email in recents
SGTokenDistanceMappingTransformer: index=%lu, count=%lu
SGDSuggestManager: Mail: Asked for suggestions for a searchable item without headers dictionary or source, returning 0 suggestions
SGDSuggestManager: Mail: Not providing suggestions for searchable item that is spam.
SGDSuggestManager: Mail: Skipping suggestions for searchable item that is in trash.
SGDSuggestManager: Messages: suggestionsFromMessage: %@ : %@ options: %tu completionDelivery: %tu
suggestionsFromMessage ignoring item since the bundle is disallowed by user's settings
suggestionsFromMessage ignoring item since the domainIdentifier (conversationIdentifier) is nil
suggestionsFromMessage ignoring item since the textContent is nil
suggestionsFromMessage consolidating repeated item with previous request
SGDSuggestManager+RealtimeDonations: error donating message to ProactiveHarvesting: %@
SGDSuggestManager: Messages: _suggestionsFromMessage: Got message with no authors. Ignoring.
SGDSuggestManager: Messages: _suggestionsFromMessage: Got message with no domainIdentifier (conversationIdentifier). Ignoring.
SGDSuggestManager: Messages: _suggestionsFromMessage: Got message with no content protection type defined. Will not dissect..
SGDSuggestManager: realtimeSuggestionsForMailOrMessageWithHash: %@ : %@
Existing valid dissection found in store.
Existing dissection found in store, but HTML does not match.
Entity not harvested, but I was told not to dissect.
SGDSuggestManager: starting dissection.
Plugins finished processing message: %@
Timed out waiting for async realtime harvest work
SGDSuggestManager - Getting realtime events for dissected entity [SGEntity %{public}@]
  -> Event [SGEvent %{public}@] in state %i
    -> %@
Found %i realtime events
Getting realtime contacts for dissected entity
Found %i realtime contacts
Entity %@ -> SGReminder %@
SGDSuggestManager: validating cached results
filtering out suggestion that has already been acted on according to history
filtering out suggestion for business chat text
SGSuggestManager validateResultsvalidateResults: DKIM verification resulted in failure: %@
SGSuggestManager validateResultsvalidateResults: Successfully verified DKIM signature.
SGDSuggestManager: realtimeSuggestionsForMailOrMessageWithHash: %@: results: %@
SGDSuggestManager: Filtering out previously engaged reminder
SGDSuggestManager: Filtering out duplicate reminder
SGDSuggestManager: Filtering past Reminder
SGMessageEventDissector: Skipping Message Event dissector: allowMessageEventDissector is OFF
SGMessageEventDissector: Skipping Message: Message is not classified as %@ type by the Event-Classifier.
SGMessageEventDissector: Skipping Message: Exceeded Rate Limit
SGMessageEventDissector: Message is potential event message, dissecting to extract events
SGMessageEventDissector: Unable to fetch Event Extraction Assets from TRIAL, bailing
SGMessageEventDissector: Unable to fetch events from MLRuntime, bailing
SGMessageEventDissector: Unable to find MA path for EventClassifier model
SGMessageEventDissector: EventClassifier Model Path: %{private}@
SGMessageEventDissector: Unable to find MA path for MLEventExtractionAssets
SGMessageEventDissector: MLEventExtractionAssets Path: %{private}@
SGMessageEventDissector: Adding Enrichment: %@ to entity:%@
SGMessageEventDissector: Could not extract event deatils from event dictionary: %@ for entity: %@
SGMessageEventDissector: Fetching events from ML Runtime Plugin com.apple.eventMetaDataExtractor.eventMetaDataExtractorPlugin eventExtractionAssetsPath: %{private}@
SGMessageEventDissector: Nil MessageBody Found. Bailing.
SGMessageEventDissector: MLRuntime Plugin Task failed with error:  %@
SGMessageEventDissector: MLRuntime Plugin task timeout
SGMessageEventDissector: ML Runtime failed to return events information, bailing
SGMessageEventDissector: Using fallback schema for generic event for category: %@
SGMessageEventDissector: Missing entities for message event extraction: %@
SGMessageEventDissector: Unable to load Event Classifier Model. Model Path does not exist
SGMessageEventDissector: Unable to load Event Classifier Model: %@
SGMessageEventDissector: Unable to convert ML Model to NL Model: %@
SGMessageEventDissector: No name for missing entity
SGMessageEventDissector: airlineCode or flightNumber or departureDateTime not found, bailing
SGMessageEventDissector: No flight information found, bailing
SGMessageEventDissector: No flight information for departure date:%{private}@ & departureLocation:%{private}@ found, bailing
SGMessageEventDissector: Message classification by Event-Classifier: %@ (Score: %.02f)
SGCoalescingDropbox %s unable to extend transaction TTL.
Failed to construct DDScanner: %@
SGDataDetectors: data detection: %@
Failed to decode socialProfileData: %@
Attempt to write entity to DB returned entityId 0
Skipping event pending geocode.
Attempt to write enrichment to DB returned enrichmentId 0
Skipping non-event enrichment
Number of event entities to journal: %lu
Writing Entity: %@
invalid serialization found in _prunePseudoContactGeneratingEmails: %@
nil key found in emailMetadata
Removing pendingVerification flag from %@
Error removing pendingVerification flag from %@: %@
Writing %lu event entities to journal. [SGEvent (%{public}@)]
Writing reminder to journal
Trying to write multiple reminders to journal, this is not supported
Writing event to journal
Writing contact to journal
While writing blobs, unexpected missing entity ids
Expected the new mergedContact record Id %@ to be %@:
Writing identity blobs
IdentityStore: Writing deletes for %@
IdentityStore: Newly created contacts %@
IdentityStore: Forced update of contacts %@
HMM confused, too many tokens in signature
HMM confused, too much quoting in signature
Skipping signature dissector: detectContacts is OFF
Signature found by DataDetectors.
Signature found by alternative algorithms.
Sig range %lu-%lu (%@)
No signature found
Tagging as inhuman after adjusting range: Signature pattern
Ignoring signature after adjusting range: Inhuman pattern.
Can't meaningfully call shouldIgnoreSignature with a signature that starts after the content.
Can't meaningfully call shouldIgnoreSignature on an entity with no detected signature.
Tagging as inhuman: Signature pattern
Ignoring signature: Inhuman pattern.
Ignoring signature: Valediction after signature.
Ignoring signature: Recipient's name (composite).
Ignoring signature: Recipient's name (first last).
Ignoring signature: Recipient's name (last first).
Ignoring signature: Recipient's phone.
Ignoring signature: Recipient's postal.
Ignoring signature: Recipient's email.
Ignoring signature: Sender's name unavailable.
Ignoring signature: No sender's name or email.
Ignoring signature: Anti pattern.
Ignoring signature: Sender's name after sig.
Not ignoring signature.
Could not fetch filesystem path for HMM
Could not load HMM data: %@
Failed to insert serialized contact: %@
Failed to insert serialized contact placeholder: %@
Failed to delete serialized contact: %@
Unexpected error while deserializing contact: %lld
Unexpected error while deserializing contact%lldld
Failed to load all serialized contacts: %@
Writing placeholder for contact id: %lli
Could not defer activity
serialized contact precomputation deferring
done serializing new contacts
done trimming serialized contacts
SGUnarchiver: unable to open non-file URL %@.
SGUnarchiver: unable to open file %@ - %{public}s.
SGUnarchiver: unable to close file descriptor %{public}d for %@ (leaking) - %{public}s.
SGUnarchiver: unable to close archive_read - %{public}s.
SGUnarchiver: unable to open archive_read - %{public}s.
SGUnarchiver: archive_read unable to set supported formats - %{public}s.
SGUnarchiver: archive_read unable to set supported compression formats - %{public}s.
SGUnarchiver: unable to free archive_read (leaking) - %{public}s.
SGUnarchiver: failed to create directory at %@ - %@.
SGUnarchiver: unable to resolve physical path for destination path %@ - %s.
SGUnarchiver: archive_read_next_header failed - %{public}s.
SGUnarchiver: archive_entry with no path encountered.
SGUnarchiver: archive_entry with absolute path encountered...ignoring leading %zu of %zu bytes.
SGUnarchiver: archive_entry with no path after sanitization encountered.
SGUnarchiver: archive_write_header failed - %{public}s.
SGUnarchiver: archive_write_finish_entry failed - %{public}s.
SGUnarchiver: unable to close archive_write_disk - %{public}s.
SGUnarchiver: unable to free archive_write_disk (leaking) - %{public}s.
SGUnarchiver: archive_write_disk unable to set lookup functions - %{public}s.
SGUnarchiver: archive_write_disk unable to set options - %{public}s.
SGUnarchiver: archive_read_data_block failed - %{public}s.
SGUnarchiver: archive_write_data_block failed - %{public}s.
SGReminderMessage: No VB in actionVerbIndexRange
SGReminderMessage: No NN, NNP in objectCoreIndexRange
SGReminderMessage: Title has too many characters
SGReminderMessage: No whitelisted action verb or particle actionVerbTokenIndexes
SGReminderTrialClientWrapper: Updating factors
SGReminderTrialClientWrapper: TRILevel is nil for confirmationOptional
SGReminderTrialClientWrapper: TRILevel is nil for triggerOptional
SGReminderTrialClientWrapper: TRILevel is nil for actionVerbOptional
SGReminderTrialClientWrapper: TRILevel is nil for messagesBannerLimit
SGReminderTrialClientWrapper: confirmationOptional: %@
SGReminderTrialClientWrapper: triggerOptional: %@
SGReminderTrialClientWrapper: actionVerbOptional: %@
SGReminderTrialClientWrapper: messagesBannerLimit: %@
SGReminderTrialClientWrapper: reminderOverrides list loaded with Trial: %@
SGReminderTrialClientWrapper: reminderEnrichments list loaded with Trial: %@
SGReminderTrialClientWrapper: reminderInputMapping list loaded with Trial: %@
SGReminderTrialClientWrapper: reminderOutputMapping list loaded with Trial: %@
empty string found in nickname data for: %@
dropping query token that cannot be encoded as utf-8 (utf-16 LE repr: %{private}@)
Could not load duplicate key with record id %@
Could not load event with record id %@
Unable to load entity from database
failed to load snippet data for email entity: %lld
Unable to load entity by recordId: %@
Failed to retrieve PMLTraining singleton
DataDetector is not a definitive match: Anti-pattern.
DataDetector is not a definitive match: Not in definitive phrase.
Ignoring DataDetector match: Too many phones in signature.
Ignoring DataDetector match: All-digit phone without label in signature.
Ignoring DataDetector match: Log line in signature.
Ignoring DataDetector match: Too many postal addresses in signature.
Ignoring DataDetector match: Inhuman email address in signature.
Ignoring DataDetector match: Email address with colon at end of line in signature.
Ignoring DataDetector match: Email address with date or time in line in signature.
Ignoring DataDetector match: Email address in signature is close match to List-Id header.
unifiedContactWithIdentifier failed to generate date for birthday.
unifiedContactWithIdentifier for %@ failed with error %@
No contact identifier for %@
Birthday: Text message has no conversation identifier
Birthday: Entity with type SGEntityTextMessage has invalid message date
Birthday: processing is disabled for group messages
RKAttributedTokenBirthdayType not found for message: %@
SGDetectedAttributeDissector: getResponsesForBirthdayExtractionFromMessage: text message has nil textContent: %@
No responses found for message: %@
Self-id: Text message has no conversation identifier
Self-id: processing is disabled for group messages
Self-id: processing is disabled for business chat
Self-id: No domain identifier found for message: %@
Self-id: ignoring message far in thread (position: %i >= %i)
Self-id: No likely language prediction for conversation
Self-id: text length too long
Start
Completed
SelfIdFeaturizations
Self-id: doesn't look for self id if message has a display name
Self-id: updating pseudo-contact entity with name length: %tu
Self-id: Could not find author-pseudocontact to augment with text message self-identification.
Unexpected Contact detail found in forwarded or inhuman text message: %@ %@
Skipping DetectedAttribute dissection: No author.
Skipping DetectedAttribute dissection: Inhuman sender.
Skipping DetectedAttribute dissection: warm up message.
Training quick responses.
Not training quick responses since conversation history is nil.
TrainQuickResponses
Skipping DetectedAttribute dissector: detectContacts is OFF
Detections: %@
Skipping DetectedAttribute dissection: too many phone numbers (%i, limit %i)
ContactSharingNegativeExample
Ignoring DataDetector match: Blocked phone number.
Ignoring DataDetector match: Quoted region.
Processing low quality phone number match for ML supervision and metrics; detections to be discarded.
Ignoring DataDetector match: Low quality phone number match.
Detected attribute (sig/*): '%@'
Detected attribute (body): '%@'
Detected attribute (ml): '%@'
ContactSharingPositiveExample
SGEspressoModel - Invalid model config: %@
SGEspressoModel - Could not initialize PMLMultiLabelEspressoClassifier: %@
SGEspressoModel - Invalid sessionDescriptor in config: %@
SGExtractionModelCoreMLWrapper: Inconsistent MLFeatureProvider passed
SGTrialClientWrapper: Unable to fetch experimentId, deploymentId, treatmentId
SGTrialClientWrapper: Unable to fetch rolloutIdentifiers
SGReminderTrialClientWrapper: Unzipping model override at path: %@
SGReminderTrialClientWrapper: unable to fetch origin path.
SGReminderTrialClientWrapper: Cannot move model to %@. Error %@
SGReminderTrialClientWrapper: Error while unzipping the model override.
SGReminderTrialClientWrapper: Model override is already in uncompressed at path: %@
SGReminderTrialClientWrapper: No file found at source path: %@
Unable to the source data from file URL: %@. (Error: %@)
SGReminderTrialClientWrapper: Couldn't delete model override file: %@
CNContact cache miss
Found %lu prematched contacts in CNContact cache
Encountered a NULL cnContactIdentifier in cnContactsToSgContacts
cnContactMatchesForRecordId received recordId from wrong table: %@
Popped CN2SG job: %@
CN2SG Over 100K unique rows in cnContactsToSgContactsCacheJobs -- will not enqueue a batch
Clearing entire CN2SG job queue
start updating CNContact matches
%lu contact matches found for %@
Failed to confirm Contact: %@
CN Contact precomputation deferring
done updating CNContact matches
Could not clear CNContactStore change history due to: %@
Failed to enumerate CNContactStore: %@
Do/did we need a full CN to SG sync? %@
Will set full CN to SG sync completed.
Could not register for CNContactStore change history due to: %@
CNChangeHistoryResult truncated: %d , %@
Performing full sync with CNContactStore
Performing delta sync with CNContactStore
Could not enumerate CNContactStore change history due to: %@
refreshSuggestionsContact begin coalescing drop box handler with %tu SGStorageContacts: %@
refreshSuggestionsContact timed out waiting for spotlight
refreshSuggestionsContact will enqueue CNContactIdentifier batch of size %tu (from %tu SGStorageContact's): %@
refreshSuggestionsContact end coalescing drop box handler
refreshSuggestionsContact added %@ storage contact %@
refreshSuggestionsContact running immediately due to large number (%tu) of enqueued items
refreshSuggestionsContact coalescing box size: %tu
SG2CN query for contact %@:
SG2CN found identifier: %@
SG2CN error: %@
SG2CN all found identifiers: %@
SGHarvestQueueMetrics
Suggestions entity store cannot be opened before first unlock
entity store is known to have a future schema. Giving up on store initialization.
Attempting to instantiate the shared default store
Attempting to instantiate the shared harvest store
failed to initialize database at path %@: %@
device locked during db initialization
Integrity check detected corrupt database, attempting to reinitialize.
unable to initialize entity DB
unable to initialize snippets DB
corruption marker is present, recreating db
entity store is migrating
entity store already migrated. Not migrating again.
Detected corrupt database, attempting to reinitialize.
unable to recreate entity DB
unable to recreate snippets DB
entity store did not try to migrate but a migration is needed
migrator found mismatched versions or is in an unrecoverable state, performing corruption recovery
Future db schema detected. Entity store cannot be initialized.
entity store could not migrate databases, bailing out.
entity store initialization flags: isEphemeral:%d executeJournals:%d noMigrate:%d
failed to initialize one or more databases/journals. We cannot continue.
store %@ going deallocating
entity store failed to recreate database during corruption recovery: %@
failed to remove corruption marker
Clearing caches in SGEntityStore
#NoDetailCache Removing other detail...
#NoDetailCache Adding other detail...
#NoDetailCache 10,001 items in _otherDetailsWithNoContact. Removing least recently accessed item...
#NoDetailCache Other detail found
#NoDetailCache Other detail not found
#NoDetailCache Clearing %lu other details
Getting e-mails pending verification
key in emailMetadata was nil
Could not create SGEmailKey for key %@
Error finding e-mails pending verification: %@
Found %lu e-mails pending verification
_enumerateContactsForMasterEntityIds aborting enumeration
Loaded %tu contacts
Got more than %lu results for query. Giving up.
Matched %lu contacts
rankSGContacts: target CNContact is missing required keys
Skipping match because it contains no suggestions: %@
After filtering, %lu contacts
Tried to get contacts with empty messaging prefix.
%lu contacts loaded
Got %llu FTS tokens, truncating to first %i
got out of bounds token range: %@ in UTF8 of size %tu
tokenizer size mismatch
something went wrong while getting tokenizer: %@
Could not parse createQuery %@
Matched %tu contacts
Error retrieving curated contacts: %@
suggestContactByRecordId received recordId from wrong table: %@
Failed to retrieve fieldValues from confirmedFieldValues
Loaded %lu suggested events from %f to %f (max %lu)
Returning %lu suggested events after filtering
Couldn't load event with given duplicate key
Couldn't confirm field values for duplicateKey not in entity table
Confirming details as workaround for Contacts search for realtime contact %@
Could not load event to confirm (recordId=%@)
Could not load event to reject (%@)
Invalid base64encoded string for tag %@
Nil serializedEntityKey found in entityTags
Corrupt database file moved to "%@".
Unable to move corrupt database file to "%@": %@
SGExtractionDissector: XPC error %@
The same origin and destination: %@ (template: %@, short %@)
SGExtractionDissector - groupId is empty. Unable to create Duplicate keys
Failed to process event suggestion 
 reservation start date components invalid.
Couldn't parse date: %@ (template: %@, short %@)
Invalid airport latitude or longitude. Asset version: %lu
Failed to process event suggestion 
 reservation end date in the past.
SGExtractionEntity entityForOutputItem: Event in the past, processing stopped.
Could not create tag from NSUserActivity %@
found forward or reply header in email
Skipping reverse template dissector: contentLen = %llu > %i
[SGPipelineEnrichment (%{public}@)] -> [SGEvent (%{public}@)]
SGPipelineEntity: Starting dissection of mail [SGSimpleMailMessage (%{public}@)], [SGPipelineEntity (%{public}@)]
SGExtractionDissector dissectMailMessage: Skipping reverse template dissector: detectStructuredEvents is OFF.
SGExtractionDissector dissectMailMessage: Not dissecting because ML extraction is on. [SGPipelineEntity (%{public}@)]
SGExtractionDissector dissectMailMessage: Ignoring email, forward or reply detected. [SGPipelineEntity (%{public}@)]
SGExtractionDissector dissectMailMessage: HTML content exceeding max length. [SGPipelineEntity (%{public}@)]
Found cached event classification for email %{public}@
SGExtractionDissector dissectMailMessage: Not extracting event(s) from e-mail because shouldDownloadFull returned false. [SGPipelineEntity (%{public}@)]
SGExtractionDissector dissectMailMessage: Email is not fully downloaded. Requesting full download. [SGPipelineEntity (%{public}@)]
Skipping reverse template dissector: detectStructuredEvents is OFF
SGExtractionDissector: Not dissecting because ML extraction is on
SGExtractionDissector: Starting dissection of interaction [INIteraction (%{public}@)], [SGPipelineEntity (%{public}@)]
SGExtractionDissector dissectInteraction: Skipping reverse template dissector: detectStructuredEvents is OFF
SGExtractionDissector dissectInteraction: Not dissecting because ML extraction is on
SGExtractionDissector dissectInteraction: Could not convert INInteraction (%@) to schema
JS Extraction Status: Template exception %{public}@, in template: %{public}@ (%{public}@). [SGPipelineEntity (%{public}@)]
JS OUTPUT for [SGPipelineEntity (%{public}@)]: %lu output(s). Asset version: %{public}@. Device locale: %{public}@. Document type: %{public}@. Contains schemaOrg?: %{public}@. Bundle ID: %{public}@
JS template match: %@ shortName:%@. [SGPipelineEntity (%{public}@)]
[SGEntity (%{public}@)] - Complete JS output: %@
[SGPipelineEntity (%{public}@)] -> [SGPipelineEnrichment (%{public}@)]
JS Extraction Status: Event. [SGPipelineEntity (%{public}@)]
JS outputItem for enrichment [SGPipelineEnrichment (%{public}@)]: LocationType: %@. Geocoding Mode: %@. isAllDay?: %@. Output Usecase: %@. Output Category: %@.
JS Extraction Status: Output Exception %@. [SGPipelineEntity (%{public}@)]
SGExtractionDissector: Starting dissection of webpage (%{sensitive}@). [SGPipelineEntity (%{public}@)]
SGExtractionDissector dissectURL: Webpage processing stopped: HTML content exceeding max length. [SGPipelineEntity (%{public}@)]
SGExtractionDissector dissectURL: SGOutput is null. [SGPipelineEntity (%{public}@)]
SGExtractionDissector: no bundle identifier identified
SGExtractionDissector: no record found for bundle id %@:%@
Error loading model config during incremental submodel update
SGMISubmodelsManager: Updating Submodels
SGMISubmodelsManager is not allowed to run during the next %.0f seconds.
SGMISubmodelsManager received signal to not continue, stopping at day %lu of %lu
SGMISubmodelsManager processed %lu emails in this session (corresponding to %lu / %lu days) and should stop. Next training will be possible in %.0f seconds
SGMISubmodelsManager performed incremental update of %lu mails. Model had a precision of %.2f%% and a recall of %.2f%% on them.
SGMISubmodelsManager: Starting purge of deleted emails references
SGMLISubModelUpdater: Number of email addresses to validate: %lu
SGMISubmodelsManager: Failed to map email address feature %@ to MDIAttribute
SGMISubmodelsManager: Emails to delete for %@: %lu
SGMISubmodelsManager lost Spotlight connection (device got locked)
Purging deleted emails references took %f seconds
SGMISubmodelsManager: Clearing all tokens from submodel token store that haven't been since %@ or earlier
SGMISubmodelsManager: No prior model version data. Not processing as version change.
SGMISubmodelsManager: Current model version data is not set. Is OTA / Trial configuration for both inference and ground truth versions correct? Not processing as version change.
SGMISubmodelsManager: Ground truth model version updated from %@ to %@. Purging all stateful data.
SGMISubmodelsManager: Inference version updated from %@ to %@ without change in ground truth model version. Retaining submodels and setting all saliency scores to 0.
SGMISubmodelsManager: No version update to process.
SGMISubmodelsManager: Invalid min counts requirements in SGMISaliencyModelConfig.
SGMINicknameManager: Processing mails sent %tu days ago
SGMINicknameManager: A match got identified in a mail from ~%tu days ago: %{sensitive}@ -> %{sensitive}@.
SGMINicknameManager received signal to not continue after processing mails sent %tu days ago
No extraction for %d:%@ = %@
SGMIWarningsConfig: Invalid attachmentLinkDetectionRegex (%@).
SGMIWarningsConfig: Error, unable to get attachmentDetectionRegexes from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get attachmentLinkDetection from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get conservativeRecipientDetection from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get recipientConservativeDetectionRegexes from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get recipientDetectionRegexes from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get nicknameDetectionRegexes from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get followUpOnOutgoingMailsQuestionsDetectionRegexes from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get followUpOnOutgoingMailsAsksDetectionRegexes from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get followUpOnIncomingMailsDetectionRegexes from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get followUpWarningsParameters from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get bodyAnalysisSamplingFactor from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get defaultTimeIntervalToStartWarningExposition from SGMITrialClientWrapper.
SGMIWarningsConfig: Error, unable to get defaultTimeIntervalForAWarning from SGMITrialClientWrapper.
Follow Up. [SGMIFeatureVector] emMessage %{sensitive}@ loaded for messageId %@.
Follow Up. [SGMIFeatureVector] searchableItem %@ loaded for messageId %@.
Error accessing the searchable item associated with messageId: %@
SGMIFeatureVector: PET logging skipped (hashed messageId)
Unexpectedly could not deserialize a serializedSocialProfile: %@
Scanning address string, expected to only find addresses, but found %@
SGContactNicknameDissector: SGContactNicknameDissector is invoked!
SGContactNicknameDissector: Input text is nil, returning.
SGContactNicknameDissector: Input text: %{private}@
SGContactNicknameDissector: Extracted nicknames: %{private}@
SGContactNicknameDissector: Extracted recipient contact id: %@
SGContactNicknameDissector: Extracted person id: %@
SGContactNicknameDissector: Updating count of : <%@, %{private}@>
SGContactNicknameDissector: Found in regex: %{private}@
SGContactNicknameDissector: Found error while executing regexes: %@
SGAppLaunchHistory failed to fetch app launch history with error = %@
entity store notified of device lock state change to %d (es=%d, cs=%d)
SGMISpotlightUtility got signal to exit
SGMISpotlightUtility Query by time range timed out
SGMISpotlightUtility: Query by item timed out.
SGMISpotlightUtility: Found item count was %lu
SGMISpotlightUtility: Finding email addresses to delete
SGMISpotlightUtility got an error from Spotlight while querying existence as %@: %@
SGMISpotlightUtility: Query existence as %@ timed out.
SGMISpotlightUtility: Addresses found in Spotlight: %lu
SGMISpotlightUtility got an error from Spotlight: %@
SGURLDissector ignoring entity due to missing bundle id, unique id, or date
SGURLDissector(URLs) found URL of length %tu, from handle of length %tu, in: (%@, %@)
SGURLDissector(Text) found URL of length %tu, from handle of length %tu, in: (%@, %@)
urlsFromAttributes called with no URL attribute
SGURLDissector(Attributes) found URL of length %tu, from handle of length %tu, in: (%@, %@)
urlsFromAttributes failed to find colon and parenthesis in text
urlsFromAttributes found invalid ranges of colon and parenthesis
Tried to parse a Japanese name with no tokens? This shouldn't happen.
Tried to parse a jp/zh name with no tokens? This shouldn't happen.
Could not create tag from NSUserActivity '%@': %@
SGMIFeatureVectorCollator: message ID %@ was mapped via spotlight mapping table.
SGMIFeatureVectorCollator: message ID %@ was mapped with Biome stream.
SGMIFeatureVectorCollator: No mapping found, creating SGSimpleMailMessage with hashed message ID: %@
SGMIFeatureVectorCollator: Use the CSSI's repliedTo attribute to set the UserReplied feature, biome information was%@ available and UserReplied was%@ already set.
SGJournal-addEntry: Add event
SGJournal-addEntry: Add event batch (count=%lu)
SGJournal-addEntry: Cancel event
SGJournal-addEntry: Cancel event batch (count=%lu)
SGJournal-addEntry: Confirm event from this device
SGJournal-addEntry: Confirm event from other device
SGJournal-addEntry: Reject event from this device
SGJournal-addEntry: Reject event from other device
SGJournal-addEntry: Event parent deletion
SGJournal-addEntry: Not set
SGJournal-addEntry event non-nil, but unknown operation %u
SGJournal-addEntry: Add contact
SGJournal-addEntry: Confirm contact
SGJournal-addEntry: Reject contact
SGJournal-addEntry contact non-nil, but unknown operation %u
SGJournal-addEntry: Add reminder
SGJournal-addEntry: Confirm Reminder from this device
SGJournal-addEntry: Reject Reminder from this device
SGJournal-reminderAlarmTriggered: Reminder alarm triggered from this device
SGJournal-addEntry: Confirm reminder from other device
SGJournal-addEntry: Reject reminder from other device
SGJournal-addEntry: Reminder parent deletion
SGJournal-addEntry reminder non-nil, but unknown operation %u
SGJournal-addEntry: Suggested event calendar deleted
SGJournal-addEntry: Remove all stored pseudo-contacts
Setting a timer to reset DDNL caches in %f seconds
SGPipeline verificationOperation: DKIM verification resulted in temporary failure: %@. [SGPipelineEntity (%{public}@)]
SGPipeline verificationOperation: DKIM verification resulted in permanent failure: %@. [SGPipelineEntity (%{public}@)]
SGPipeline verificationOperation: Successfully verified DKIM signature. [SGPipelineEntity (%{public}@)]
SGPOSTagger: Most tags are SYM, likely missing LinguisticData
Attachment info length mismatch: %lu types, %lu names, %lu paths
Error getting file size from path: %@
Purging %tu unique identifiers from %@.
Deleting %tu unique identifiers from %@.
Deleting %tu domain identifiers from %@.
Deleting all Interactions from %@.
Deleting %tu Interactions from %@.
Deleting %tu group indentifiers for Interactions from %@.
SGDSpotlightReceiver: Received %tu items from %@.
SGDSpotlightReceiver: invalidated highlight cache and notified of refresh
ignoring items since the bundle is disallowed by user's settings
Decoded %tu of %tu items received from %@.
Will delete %tu encrypted items
Deleted %tu encrypted items
SGDSpotlightReceiver: _addSearchableItem: error donating to ProactiveHarvesting: %@
SGDSpotlightReceiver: addUserAction: error donating to ProactiveHarvesting: %@
received user action from %@
Plugins finished NSUA processing via CTS: %@
SGDSpotlightReceiver: purging %tu unique identifiers (%tu after de-duplication) for %@
SGDSpotlightReceiver: purgeSearchableItemsWithIdentifiers: error sending purge to ProactiveHarvesting: %@
SGDSpotlightReceiver: deleting %tu unique identifiers (%tu after de-duplication) for %@
SGDSpotlightReceiver: deleteSearchableItemsWithIdentifiers: error sending deletion to ProactiveHarvesting: %@
SGDSpotlightReceiver: deleting %tu domain identifiers (%tu after removing overlaps) for %@
SGDSpotlightReceiver: deleteSearchableItemsWithDomainIdentifiers: error sending deletion to ProactiveHarvesting: %@
SGDSpotlightReceiver: deleting entire bundle identifier %@
SGDSpotlightReceiver: deleteAllSearchableItemsWithBundleID: error sending deletion to ProactiveHarvesting: %@
SGDSpotlightReceiver: received %lu interactions from %@
SGDSpotlightReceiver: addInteractions: error donating to ProactiveHarvesting: %@
ignoring interactions since the bundle is disallowed by user's settings
Plugins finished processing interaction: %@
phoneNumberWithStringValue unexpectedly failed for string: %@
unifiedContactsMatchingPredicate failed with predicate %@ and error %@
Extracted pseudo-contact email address matches "me" contact: %@
Extracted pseudo-contact phone number matches "me" contact: %@
Extracted pseudo-contact postal address matches "me" contact: %@
Extracted pseudo-contact social profile matches "me" contact: %@
Filtered contact: %@
Extracted pseudo-contact matches "me" contact, Suggestion suppressed
Found %lu curated contacts for pseudo-contact
Failed to locate resource; tradition: %@, fname: %@, path: %@
failed to load trie for naming tradition; tradKey: %@
SGTokenizerMappingTransformer reloading NLTagger in response to new asset installation
Found related EKEvent by db lookup of related keys.
Found %lu events to bump TTL on for OpaqueKey: %@
Unable to save event in event store: %@
Unable to save event in event store; description: %@, error: %@
EKEventStore+Suggestions: bumped TTL for NL Event ZKW
Could not find %@ in message
migrator passed nil filename for entity db
migrator passed nil filename for snippets db
failed to clear snippets db
failed to clear entities db
sqlite_schema had a table with a NULL name
shadow table has nil table name in PRAGMA table_list
migrator for %@ running query: %@
SGDataMigrator encountered error during migration of %@: versions %lu & %lu, query: %@, error: %@
current user language: %@: %@
old user language: %@: %@
languageToUpdateEntityFTSTo returning: %@
failed to generate create query for new FTS table %@
creating new FTS table: %@: %@
failed to create new FTS table %@
failed to determine max docid
highest entity for FTS copy: %@: %llu
fts copy batch: %llu -> %llu
Copying from old FTS table from %lu to %lu
failed to insert from old fts table limit %lu offset %lu
failed to drop %@ in preparation for renaming
failed to rename %@ to %@
starting update of FTS table for language change: %@: %@
resuming copy of FTS data to new table
preparing to copy FTS data
updateLanguageForFTSTablesToLanguage got nil language but has no in-progress copy to restart
done with FTS copy, going to drop old table: %@
failed to drop old entity_fts after updating to new language
bootstrapping snippets migration
catching up snippets migration to %ld
failed to migrate snippets db to %ld
attempt to skip or repeat a migration
migrating entities to version %ld
failed to migrate entity db to %ld
migrating snippets to version %ld
migrating entities from zero to version %lu
failed to migrate entity db from zero to %lu
migrating snippets from zero to version %lu
failed to migrate snippets db from zero to %lu
migrating SGSqliteDatabase
Migrating %@ & %@
Future database version detected. Giving up on migration.
Encountered %@ database; dropping all data.
Encountered empty database (user_version == 0)
Failed to clear legacy database.
Unrecoverable db version mismatch %ld & %ld
database migration bailing out at version %lu due to device being locked.
Finalizing migration with a merge blob sync
about to check for language change for FTS tables: %@
detected need for FTS rebuild: %@: %@
done migrating: %@
unable to attach snippets in order to migrate content data
unable to copy email snippets during content migration
unable to copy non-email snippets during content migration
unable to erase content data from entities during content migration
unable to erase title data from email entities during content migration
needed to add author column but failed
needed to add entityParentage table but failed
needed to add serializedContacts table but failed
needed to add cnContactsToSgContacts table but failed
Unable to add downloadState column during legacy migration: %@
Unable to add entityDownloadStateIdx index during legacy migration: %@
Unable to add contentHash column during legacy migration: %@
Unable to add entityContentHashIdx index during legacy migration: %@
Unable to add groupId column during legacy migration: %@
Unable to add groupIdIdx index during legacy migration: %@
Unable to add duplicateKeyHash column during legacy migration: %@
Unable to add ix_entityTags_dupKeyHash index during legacy migration: %@
migration_RecreateFTSTableWithITS
migration_CreateFTSTableWithITS
Unable to create deduplicated identityPhones table: %@
Unable to clear identityPhones table during deduplication: %@
Unable to rewrite identityPhones table during deduplication: %@
Unable to remove identityPhones table during deduplication: %@
Could not install hashHexToBlob() sqlite function
Unable to set blob value in migration query: %@: Error: %@
Unable to delete messaging terms with semicolons. Error: %@
Unable to clear masterEntityIds from migration_FixupMergeGroups: %@
Unable to copy entities into emailMetadata: %@
Unable to deparent source documents found in entityParentage: %@
Unable to delete source documents from entity table: %@
Unable to populate source document tags: %@
Unable to populate source document snippets in emailSnippets: %@
Unable to delete source document snippets from legacy table: %@
Error selecting source document ids from emailMetadata: %@
starting rebuildFTSWithDetailEntityIDDocIDs
Erroring trying to reinsert FTS row: %@
Error during rebuildFTSWithDetailEntityIDDocIDs: %@
rebuildFTSWithDetailEntityIDDocIDs: failed. Moving old table back.
rebuildFTSWithDetailEntityIDDocIDs: success. Deleting backup table.
failed to drop backup table: entity_fts_docidfix_backup: %@
discarding ill-formatted serialized interaction key
Error during migration_deleteInteractions: %@
unable to detach snippets after trying to migrate content data
SGMailIntelligenceDissector: Mail saliency inference is off
SGMailIntelligenceDissector: a nil message ID, skipping
Dissector.SocialConnectionScore
SGMailIntelligenceDissector: computed sender connection score of %f
Dissector.SaliencyScore
SGMailIntelligenceDissector: Searching for contact matching provided e-mail address.
SGMailIntelligenceDissector: Could not map e-mail address to contact.
SGMailIntelligenceDissector: No interactions with contact found.
SGMailIntelligenceDissector: Fuzzy contact match succeeded.
CandidateNameRange not in plainTextContent: %@ %tu %tu
SGDetectedAttributeML - Failed to load transformer instance for language: %@, %lu
SGDetectedAttributeML: failed to generate vector.
SGDetectedAttributeML - failed to get training descriptor.
Couldn't find uniqueIdentifier %@ in conversation -- aborting detectionFromEntity
Target message (uniqueIdentifier=%@) not the last in conversation -- aborting detectionFromEntity
Couldn't find uniqueIdentifier %@ in conversation -- aborting selfIdDetectionWithEntity
Target message (uniqueIdentifier=%@) not the last in conversation -- aborting selfIdDetectionWithEntity
Conversation message %d with id %@ and content length %lu
Entity message with id %@, content length %lu
Entity message with detected data item %@
Target message unrecoverable state with matching content = %d
ContactMLSharing: Text message has no conversation identifier
ContactMLSharing: Invalid contact detail range plainTextContent.length %tu supervision.ignoreAfter %tu match.range [%tu, %tu]
BirthdayMLExtraction: Text message has no conversation identifier
Error fetching user DOB: %@
SGMIMessageMissingEntityAnalyzer: Mail Intelligence's SPI back end timed out
SGMIMessageMissingEntityAnalyzer: Mail Intelligence's SPI back took over 5 seconds on a %tu-lengthed content: we have to xpc_transaction_exit_clean
SGMI-SPI (input)identifyComposeWarningsFromSubject:%{sensitive}@ content:%{sensitive}@ toRecipients:%{sensitive}@ ccRecipients:%{sensitive}@ bccRecipients:%{sensitive}@ originalToRecipients:%{sensitive}@ originalCcRecipients:%{sensitive}@ attachments:%{sensitive}@ language:%@
SGMI identified a file-sharing link in the body: %{sensitive}@ and therefore consider it as an attachment.
SGMI identified a subject warning but blocked it because of a poor user engagement on the pattern.
SGMI failed to create a warning from a match.
SGMI identified potential missing attachment in '%{sensitive}@',however, given a link seems to be present in the following characters: '%{sensitive}@', this warning got disqualified...
SGMI identified potential missing attachment in '%{sensitive}@',however, given '%{sensitive}@' is in the recipients, this warning got disqualified...
SGMI identified a body warning but blocked it because of a poor user engagement on the pattern.
SGMI-SPI (output compose warnings) %{sensitive}@
SGMI inconsistent recipient detection. Likely an issue in assets: %@
SGMIMessageMissingEntityAnalyzer identified "%{sensitive}@" as a nickname used in the past for %{sensitive}@.
SGMI identified a recipient warning for %{sensitive}@ but blocked it because one recipient address (%{sensitive}@) seems to be a group.
SGMI identified a recipient warning but blocked it because of a poor user engagement on the pattern.
SGMI created a second chance recipient warning for %{sensitive}@.
SGMI identified a recipient warning from a conservative regex which user engagement was poor, even with contact match.
SGMIMessageMissingEntityAnalyzer found a contact match for %{sensitive}@ in CoreRecents
SGMIMessageMissingEntityAnalyzer found a contact match: %{sensitive}@ ->  %{sensitive}@ in Contacts
SGMIMessageMissingEntityAnalyzer found a pseudo contact match: %{sensitive}@ ->  %{sensitive}@
SGMIMessageMissingEntityAnalyzer found a nickname match: %{sensitive}@ ->  %{sensitive}@
SGMIMessageMissingEntityAnalyzer: Attempt to match %{sensitive}@ against the various sources of contacts timed out.
SGMIMessageMissingEntityAnalyzer Attempt to match %{sensitive}@ against the various sources of contacts %@.
SGMI received %@ feedback for missing entity warning
SGMI will %@ trigger a warning for such signature
SGMIWarningsDetectionRegex: Invalid pattern %@ : %@.
SGMIWarningsDetectionRegexMatch (%{sensitive}@) with signature: %@ (%{sensitive}@)
IdentityKey for social profile types currently unsupported: %@
Unknown handle type %@
SGDSpotlightCommander: got reimport request: %@
ignoring reimport request since it is subset of existing query: %@
ignoring reimport request since plugin already has a pending request: %@
SGDSpotlightCommander: attempting to process reimport requests
SGDSpotlightCommander: found %lu unqueried reimport requests
SGDSpotlightCommander: found %lu unexecuted reimport requests
SGDSpotlightCommander: reimportForPersonHandle: %@ : %@ : %@
SGDSpotlightCommander: reimport query found %lu items
SGDSpotlightCommander: foundItemsHandler making new set for %@
SGDSpotlightCommander: foundItemsHandler: %@ - %@
SGDSpotlightCommander: Error: reimport search query error: %@: %@
SGDSpotlightCommander: total items to be reimported: %tu
SGDSpotlightCommander: storing reimport items for %lu bundles for request %llu
SGDSpotlightCommander: Error: unable to get spotlight index to issue reimport command to
SGDSpotlightCommander: issuing command to spotlight: %@
SGDSpotlightCommander: Error during CS issueCommand: %@
SGDSpotlightCommander: reimport command issued: %@
SGDSpotlightCommander: reimport command issued
SGNaturalLanguageDissector: Event is cancelled
Skipping NL dissector: allowNaturalLanguageDissector is OFF
Ignoring NL dissection because an iCalendar attachment exists.
Ignoring NL dissection because document was matched by a template
Failed to check for existing spotlight reference: %@
clearAllTombstonesForSpotlightReferencesIf: waiting for write transaction
clearAllTombstonesForSpotlightReferencesIf:YES (will clear)
clearAllTombstonesForSpotlightReferencesIf:YES (did clear)
clearAllTombstonesForSpotlightReferencesIf:NO
got NULL entityId from serializedContacts table
contactsWithIdentifiers filtered %lu entities from the wrong table.
nil entityId or serializedContact data found: %@ %@
Could not load contacts: %@
Could not fetch last CoreSpotlight state: %@
MDSearchableIndex returned error %@
Encountered corrupt db (%@), attempting to reinitialize
Journaling command: %d
Failed to write command type to journal
Failed to write command blob length to journal
Failed to write command blob to journal
Skipping SGMIFeatureStore _runJournal -- no journal file exists
Beginning SGMIFeatureStore _runJournal
Aborting SGMIFeatureStore _runJournal -- db not available (maybe device is locking again?)
Running journal command: delete column %@
Finished SGMIFeatureStore _runJournal
SGMIFeatureStore: Invalid SGMailIntelligenceUnsubscriptionRuleField for DB lookup
Follow Up. [incrementUserEngagement] warning is nil. Nothing will be stored.
Follow Up. [incrementUserEngagement] Incrementing %@
SGMIFeatureStore Error in signature format: %@
SGMIFeatureStore Unsupported type: %@
Follow Up. [incrementUserEngagement:forFollowUpWarning] Can't access the db.
Unsupported SGMailIntelligenceWarning for method shouldExposeWarning
Follow Up. [updateFollowUpDetectionStatsWithWarning] warning is nil. Nothing will be stored.
Follow Up. [updateFollowUpDetectionStatsWithWarning] Can't access the db.
SGMIFeatureStore: Inconsistent state of the DB.
SGMIFeatureStore will not return SGMIMetricsRegexSignatureStats for sampling reasons
Failed to clearSignatureStatsTable due to Class A data protection
Not performing deleteNaiveBayesModelForProbabilityFeatureName:%ld due to data protection
Discarding commitNaiveBayesModel commit due to data protection
commitNaiveBayesModel:%@ probabilityFeatureName:%ld updateDate:%@
Unable to deleteTokensForDeletedEmailAddresses due to Class A protection
Failed to clearSubmodelTables due to Class A data protection
Failed to clearKVStoreTable due to Class A data protection
Failed to clearNicknameMappingTable due to Class A data protection
Email Searchable Item is malformed - no account identifier
Email Searchable Item is malformed - missing message id or account identifier
[vipManager conformsToProtocol:@protocol(EMVIPReader_Private)] was false (class: %@) -- the VIP set might be empty even if the user has VIP
Could not get message content: %@
Read error %@ loading message content from URL: %@
Ignoring DKIM signature because it has expired.
Ignoring DKIM signature because the signing domain identifier is not the same as or a subdomain of the domain used in the From: header.
Could not create DKIM verification context %@
Failed to process event suggestion 
 No From: header found.
Failed to process event suggestion 
 Could not parse domain in From: header.
Failed to process event suggestion 
 No valid DKIM signature found.
Successfully verified DKIM signature.
Failed to process event suggestion 
 A temporary error occured while verifying the DKIM signature(s).
Failed to process event suggestion 
 A permanent error occured while verifying the DKIM signature(s).
Could not get localized string path for localization '%@
Could not load localized strings from %@: %@
Could not parse localized strings from %@: %@
SGRTCLogging+Reminders: No reminder found for entity record Id: %@
SGRTCLogging+Reminders: logging interaction to RTC
SGRTCLogging+Reminders: logging extraction to RTC
Invalid value for SGNameDetectorAlgorithm: %lu
SGNameDetector - Error querying contacts from people suggester.
Dissecting a donated contact identifier: %@
Received a donated contact identifier: %@, but contact store returned nil
malformed serialized time range: %@
SGSqlEntityStore+Events: event startTimezone is nil but endTimezone is not nil
SGSqlEntityStore+Events: event endTimezone is nil but startTimezone is not nil
SGDNotificationBroadcaster posting event notification
SGDNotificationBroadcaster posting contact notification
SGDNotificationBroadcaster posting reminder notification
SGDNotificationBroadcaster posting SGURL changed notification
SGDNotificationBroadcaster failed to post SGURL change notification: error %u
SGMITrialClientWrapper: No plist file found at %@
SGMITrialClientWrapper: TRILevel is nil for %@
SGMITrialClientWrapper: Unable to load plist content for %@
SGMITrialClientWrapper: Empty plist content for %@
SGMITrialClientWrapper: isEnabled accessed: %@
SGMITrialClientWrapper: isDNUOnlyEnablement accessed: %@
SGMITrialClientWrapper: signatureStatsLogging accessed: %@
SGMITrialClientWrapper: modelGroundTruthVersion accessed: %@
SGMITrialClientWrapper: modelInferenceVersion accessed: %@
SGMITrialClientWrapper: modelPath accessed: %@
SGMITrialClientWrapper: modelFeatureNames accessed: size %lu, first element %@
SGMITrialClientWrapper: modelFeatureStandardizationMeans accessed: size %lu, first element %@
SGMITrialClientWrapper: modelFeatureStandardizationStandardDeviation accessed: size %lu, first element %@
SGMITrialClientWrapper: modelGroundTruthFeatureNames accessed: size %lu, first element %@
SGMITrialClientWrapper: modelGroundTruthFeatureLowerBounds accessed: size %lu, first element %@
SGMITrialClientWrapper: modelGroundTruthFeatureUpperBounds accessed: size %lu, first element %@
SGMITrialClientWrapper: modelGroundTruthOutputs accessed: size %lu, first element %@
SGMITrialClientWrapper: saliencyOverrideFeatureNames accessed: size %lu, first element %@
SGMITrialClientWrapper: saliencyOverrideFeatureLowerBounds accessed: size %lu, first element %@
SGMITrialClientWrapper: saliencyOverrideFeatureUpperBounds accessed: size %lu, first element %@
SGMITrialClientWrapper: saliencyOverrideOutputs accessed: size %lu, first element %@
SGMITrialClientWrapper: classificationThreshold accessed: %@
SGMITrialClientWrapper: classificationOfflinePrecision accessed: %@
SGMITrialClientWrapper: classificationOfflineRecall accessed: %@
SGMITrialClientWrapper: attachmentDetectionRegexes accessed with locales %@.
SGMITrialClientWrapper: attachmentLinkDetection accessed with %lu entries.
SGMITrialClientWrapper: conservativeRecipientDetection accessed: %@
SGMITrialClientWrapper: recipientConservativeDetectionRegexes accessed with locales %@.
SGMITrialClientWrapper: recipientDetectionRegexes accessed with locales %@.
SGMITrialClientWrapper: nicknameDetectionRegexes accessed with locales %@.
SGMITrialClientWrapper: followUpOnOutgoingMailsQuestionsDetectionRegexes accessed with locales %@.
SGMITrialClientWrapper: followUpOnOutgoingMailsAsksDetectionRegexes accessed with locales %@.
SGMITrialClientWrapper: defaultTimeIntervalToStartWarningExposition accessed %@.
SGMITrialClientWrapper: defaultTimeIntervalForAWarning accessed %@.
SGMITrialClientWrapper: followUpOnIncomingMailsDetectionRegexes accessed with locales %@.
SGMITrialClientWrapper: followUpWarningsParameters accessed with locales %@.
SGMITrialClientWrapper: bodyAnalysisSamplingFactor accessed: %@
SGMITrialClientWrapper: minCountToConsiderATokenAsHighlyDiscriminant accessed: %@
SGMITrialClientWrapper: ratioToConsiderATokenAsHighlyDiscriminant accessed: %@
SGMITrialClientWrapper: minCountToConsiderATokenAsExtremelyDiscriminant accessed: %@
SGMITrialClientWrapper: ratioToConsiderATokenAsExtremelyDiscriminant accessed: %@
failed to get URL for library directory: %@
_vCardsDirectoryURL is nil
failed to create %@: %@
Sending pseudo-contact with id %@ to CoreSpotlight
Could not index contact in CoreSpotlight: %@
Not sending pseudo-contact to Spotlight because the store is missing
Not sending pseudo-contact to Spotlight because it was confirmed or rejected
Not sending pseudo-contact to Spotlight because it has no original details
Not sending pseudo-contact to Spotlight because it is already in the curated contacts
Could not delete pseudo-contact from Spotlight: %@
Could not delete all pseudo-contacts: %@
sg_isCuratedEventFromSuggestionNewerThan: missing suggestion info or timestamp
sg_fallbackURL: Event does not have schame
Ignoring URL that is not http or https
Could not convert string to URL
SGExtractionDocument: No model output
SGExtractionDocument: Invalid range
Error: could not mallocRegexp!
Memory not allocated by mallocRegexp: %llu
Failed to process event suggestion 
 INReservation.itemReference.vocabularyIdentifier property is nil.
Failed to process event suggestion 
 two or more INReservation objects share the same INReservation.itemReference.vocabularyIdentifier.
Error retrieving directory for Biome stream data
SGMIBiomeUtility: Successfully consumed stream
SGMIBiomeUtility: Error: %s
CoreSuggestionsAssets [common] metadata download success? %d
CoreSuggestionsAssets [locale] metadata download success? %d
CoreSuggestionsAssets [region] metadata download success? %d
SGEKCalendarAdapter addEvent: Skipping event already known to be cancelled. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter addEvent: Skipping event that has already passed. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter addEvent: Skipping NLEvent with empty title. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter addEvent: Skipping NLEvent that is not status Confirmed. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter addEvent: Skipping NL Event with associated event in EKEventStore. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter addEvent: Skipping event-associated-with-storage-event with missing suggestionInfo. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter addEvent: Skipping event which is not more recent than preexisting EKEvent. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter addEvents: Unable to save events in event store. EKStore commit error: %@
SGEKCalendarAdapter addEvents: Unable to save events in event store; description: %@, error: %@
SGEKCalendarAdapter addEvents: Successfully saved events in event store
SGEKCalendarAdapter _updateEvent: Calendar Event missing from store for identifier: %@. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter _updateEvent: Unable to update event: %@. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter _updateEKEvent: Unable to update event; description: %@, error: %@
SGEKCalendarAdapter _updateEvent: Successfully updated event. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter cancelEvent: No existing event found. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter cancelEvent: NL Event cancelled. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter _updateEvent: Unable to save event cancellation: %@. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter _updateEvent: Unable to save event cancellation; description: %@, error: %@
SGEKCalendarAdapter _updateEvent: Successfully Removed event in a curated calendar. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter cancelEvents: Unable to remove events. EKStore commit error: %@. [SGStorageEvent (%{public}@)]
Unable to remove events; description: %@, error: %@
SGEKCalendarAdapter cancelEvents: Successfully removed events. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter orphanEvent: No existing event found. [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter orphanEvent: Orphaned event is on a curated calendar; not removing. [SGStorageEvent (%{public}@)]
SGEKCalendarAdatper _eventsAssociatedWithStorageEvent: Located associated event based on content rather than pseudoevent key match. [SGStorageEvent (%{public}@)]
SGEKCalendarAdatper _eventsAssociatedWithStorageEvent: More than one matching event found (%lu). [SGStorageEvent (%{public}@)]
SGEKCalendarAdapter _addEKEventToCalendar: Adding event via EK. [SGEvent (%{public}@)]
SGEKCalendarAdapter _addEKEventToCalendar: Adding event to naturalLanguageSuggestedEventCalendar. [SGEvent (%{public}@)]
SGEKCalendarAdapter _addEKEventToCalendar: Adding event to suggestedEventCalendar. [SGEvent (%{public}@)]
SGEKCalendarAdapter _addEKEventToCalendar: Unable to save event in event store: %@. [SGEvent (%{public}@)]
SGEKCalendarAdapter _addEKEventToCalendar: Successfully saved event in event store. [SGEvent (%{public}@)], [EKEvent (%{public}@)]
SGEKCalendarAdapter: Calling _updateEKEvent
SGEKCalendarAdapter: Calling _cancelEKEvent
SGEkCalendarAdapter: no bundle record found: %@
SGEKCalendarAdapter _removeEKEvent: Unable to remove event. EKStore commit error: %@
SGEKCalendar _removeEKEvent: AdapterUnable to remove event; description: %@, error: %@
SGEKCalendarAdapter _removeEKEvent: Successfully removed event.
Cannot calculate free space
Free space attribute is missing
Free space attribute is not an NSNumber
SQLite error: %@
db corruption detected, leaving behind marker so we recover
suggestd exiting due to lack of disk space
suggestd exiting due to corrupt SQL vtable.
SGSqliteDatabase IOERR (device lock state %@): %@
suggestd exiting due to lack of disk space while setting journal_mode.
exiting due to repeated SQLITE_BUSY
SGDatabaseJournal unable to create directory for storing journals: %@
SGDatabaseJournal error when immediately running query: %@: %@
executing journal file: %@
Got nil after trying to unarchive a db journal: %@
No __query key set in journal file: %@
SGDatabaseJournal error when replaying query: %@: %@
ignoring journal file: %@
A bogus or corrupt journal file was found and has been cleaned up. Suggestd will relaunch and continue: %@
SGDatabaseJournal unable to delete journal file: %@: %@
SGDatabaseJournal deleted journal file: %@
Executing queries from journals to %@
SGDatabaseJournal unable to open journal directory: error(%i): %s
journal execution checking lock state after %u files
journal execution exiting early after %u files because device is locked
Removing all journal files at %@
SGDatabaseJournal not removing bogus journal directory: %@
SGDatabaseJournal unable to remove journal directory: %@
SGDatabaseJournal unable to re-create directory for storing journals: %@
softlink:o:path:/System/Library/PrivateFrameworks/CoreRoutine.framework/CoreRoutine
softlink:o:path:/System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore
softlink:o:path:/System/Library/Frameworks/WebKit.framework/WebKit
softlink:o:path:/System/Library/Frameworks/HealthKit.framework/HealthKit
softlink:o:path:/System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore
U0~0
SGTextMessage
SGConversationFlatteningTransformer
PMLTransformerProtocol
PMLPlistAndChunksSerializableProtocol
NSObject
schema
SGM2SelfIdModelScore
NSCopying
SGM2SuggestdExitReason
SGM2AutocompleteUserSelectedContact
SGM2BundleIdsTrackedAsOther
SGCloning
SGParsedPersonFromInteraction
SGM2ContactCreated
Internal
SGMicrodataToJsonParser
URLs
SGModel
SGTransformerInstance
SGModelRules
SGM2ContactDetailExtraction
SGM2ContactDetailSent
SGM2ContactsInterfaceCacheCount
Reminders
SGM2ContactsInterfaceCacheHit
SGM2FoundInMailModelScore
KVStore
SGWordBoundaryQuickTypeInference
SGStructuredEventDocument
SGMIMetricsUpdateProcessInformation
SGReminderDissector
SGMailMessageProcessing
SGTextMessageProcessing
SGM2SearchResultsIncludedPureSuggestion
SGMessageEventDissectorTrialClientWrapperGuardedData
SGMessageEventDissectorTrialClientWrapper
SGM2SearchResultsUserSelectedContact
SGM2SerializedContactsCacheHit
SGM2SqliteErrors
SGURLPlugin
FIAPPlugin
HVRemindersConsumer
HVConsumer
Saliency
SGM2SuggestedContactDetailShown
SGMIMetricsAggregatedAccuracyLogs
SGM2SuggestedContactDetailUsed
SGM2UnknownContactInformationShown
Utilities
SGM2PerfXPCLatency
SGM2CustomResponsesHarvest
SGMicrodataItemScope
SpotlightMapping_Internal
SGMonochrome
SGDetectedAttributeMetrics
SGMessageKey
SGEntityKey
SGSqliteExitOnDeviceLockErrorHandler
SGDPowerLog
SGDeliveryDissector
SGDXPCConnectionUtilities
SGTextMessageKey
SGRealtimeEventResponse
SGHistoryObserver
SGSuggestHistoryObserver
SGRealtimeSuggestionsTuple
SGEKEventStoreProvider
SGDPurgeDeletionBox
SGDSuggestManagerMailProtocol
_SGDSuggestManagerBaseProtocol
_SGDSuggestManagerMetricsProtocol
_SGDSuggestManagerEventsConfirmRejectProtocol
_SGDSuggestManagerContactsConfirmRejectProtocol
SGDSuggestManagerMessagesProtocol
SGDSuggestManager
SGDSuggestManagerAllProtocol
_SGSuggestManagerFoundInAppsProtocol
SGDSuggestManagerContactsProtocol
SGDSuggestManagerURLsProtocol
SGDSuggestManagerEventsProtocol
SGDSuggestManagerRemindersProtocol
SGDSuggestManagerDeliveriesProtocol
SGDSuggestManagerIpsosProtocol
SGDSuggestManagerInternalProtocol
_SGDSuggestManagerInternalHarvestProtocol
SGDSuggestManagerFidesProtocol
HVContentAdmissionObserver
HVMailConsumer
HVInteractionConsumer
SGEntityMappingTransformer
SGMIDailyActivity
SGMIMetricsAggregatedAccuracyLog
SGStructuredEventExtractionModel
SGSignificantEmailAddressModelForIMessage
SGM2HarvestCost
SGRe2PrefilterTree
SGDManagerForCTS
SGDeduper
SGCalendarAttachmentDissector
SGCalendarAttachmentDissectorUtility
SGContactDetailsHolder
SGStorageContact
SGDatabaseMigratorSnippets
SGSuggestionsSystem
SGMISpotlightUtility
SGDPluginManager
TestHelpers
StatsCounters
SGAccountsAdapter
SGInMemoryAdapter
SGJournalCalendarObserver
SGJournalBaseObserver
SGJournalContactsObserver
SGJournalRemindersObserver
SGRemindersAdapter
SGMIMetricsMailIntelligenceForMessage
SGMISaliencyInference
SGNameMappingTransformer
SGSelfIdentification
SGSelfIdentificationDetection
SGSearchableItemIdTriple
SGPipelineEntity
SGEntity
SGMeCardDissector
SGHistorySharedData
SGSuggestHistory
SGNoCloudNSUbiquitousKeyValueStore
SGKeyValueCacheManager
SGWords
FIAPHistoricalDataRequest
NSSecureCoding
NSCoding
RFC822Parsing
SGDataDetectorMatchesWithSignatureRange
SGAddressCoalescingState
SGDataDetectorMatch
SGThreadParser
SGMIAttachmentSizeHistogram
SGInhumans
SGMIFollowUpManager
SGExtractionModel
SGIdentityEdge
SGContactDetailSummary
IdentityStore
SGPatternGlobalData
SGPatterns
SGPatternDataFile
SuggestionsExtensions
HVHeaderCollection
SGSimpleMailHeaderKeyValue
SGSimpleMailMessage
SGQuickResponsesML
EncodedWord
SGMISaliencyModelConfigRule
SGMISaliencyModelConfig
SGLowMemoryContactEnumeration
SGLexicon
SGNicknames
SGContactsInterface
SGSymbolicMappingTransformer
SGOffsetDictionary
SGFlightData
Utility
SGFlight
SGTaggedMallocCompressionBuffer
SGTaggedMallocWorkQueueItemPart
SGTaggedMallocLevenshteinDistanceBuffer
SGTaggedMallocEmailHtml
SGMIMetricsSubmodelsStats
Suggestions
SGBinaryClassificationModel
SGBinaryClassificationModelRules
SGBloomFilter
SGBloomFilterChunkInMemory
SGBloomFilterChunk
SGBloomFilterChunkInMemorySparse
SGBloomFilterChunkMmap
SGMIEnablementConfig
SGTextMessageConversationTracker
SGTextMessageItem
SGConversationTurnProtocol
SGConversationHistory
SGDatabaseJournalFile
SGReminderExtractionModelGuardedData
SGReminderExtractionModel
SGRequestContext
SGStructuredEventCoreMLInputWrapper
MLFeatureProvider
SGRTCLoggingGuardedData
SGRTCLogging
ReimportRequests
sgLogging
SGXPCActivityManager
SGXPCActivityManagerProtocol
SGLongRunningTask
SGLongRunningTaskManager
SGEnrichmentWritebackAdapter
SGMIMetricsSubmodelStats
SGTokenString
SGJSBurstTrie
SGJSBurstTrieExports
JSExport
SGReverseTemplateJS
SGContactStoreFactory
VisibleForTesting
SGDomainWhitelistCheckerGuardedData
SGDomainWhitelistChecker
SGStructuredEventTrialClientWrapperGuardedData
SGStructuredEventTrialClientWrapper
SGSqliteReadTransaction
SGSqliteWriteTransaction
SGSqliteTransaction
SGSqliteDatabaseSharedLock
SGSqliteDatabaseImpl
SGSqliteDatabase
SGStructuredEventDissector
SGMicrodataDocument
SGSchemaOrgKey
Locations
Deleting
SGMailClientUtilMock
NaiveBayesModel
SGAhoCorasick
SGMISaliencyModelFeatureProvider
SGMISaliencyModelOutput
SGMISaliencyModel
SGNames
SGMIBiomeReducedMessageEvents
SGMIBiomeEventReducer
SGSchemaConversionProtocol
SqlHelpers
DatabaseCheck
SGMIMetricsSubmodelsProbabilities
Maintenance
Helpers
SGDOMParser
WKNavigationDelegate
SGStorageLocation
SGEventLocationForGeocode
SGMIStagedLogRecord
SGMIMetricsTrialMetadata
_SGDCloudKitSyncPersistedState
SGDCloudKitSync
APSConnectionDelegate
SGDCloudKitSyncObserver
SGCuratedChangeNotificationsBaseListener
SGCuratedChangeNotificationsAddressBookListener
SGCuratedChangeNotificationsCalendarListener
SGCuratedChangeNotifications
SGReminderDueLocation
SGChatLengthEstimator
SGMIFeatureSubmodelLink
SGMIFeature
CloudKitRecord
SGContactSharingModel
Significance
SGMIMetricsMailAttachmentHistogram
SGMicrodataItem
SGDetection
SGCNContactIdentifierCollection
SGLabeledValue
SGStructuredEventCoreMLOutputWrapper
SGTokenDistanceMappingTransformer
SGJournalEntry
SGMIMetricsMissingElementPrediction
RealtimeDonations
SGStringMappingTransformer
SGMessageEventDissectorGuardedData
SGMessageEventDissector
ContactDetails
SGCoalescingDropBox
SGPostalAddressExtraction
SGSocialProfileDetails
SGModelMappingHelper
Writing
SGHtmlEntities
SGSlice
SGSignatureDissector
SGMeContact
SGMIMetricsRegexSignatureStats
SGMetricsDissector
SGPseudoEventKey
SerializedContacts
SGReminderMessage
SGMailQuoteParser
SGReminderTrialClientWrapperGuardedData
SGReminderTrialClientWrapper
SGSqlEntityStoreCNContactMatcherHelper
SGSignificantEmailAddressModel
SGTokenizer
Loading
SGHKHealthStore
SGDetectedAttributeDissector
SGSelfIdentificationModel
SGInteractionKey
SGEspressoModel
SGExtractionModelCoreMLFeatureWrapper
SGMailPatterns
SGSignificantPhonenumberModel
SGAggregateLogging
SGTaggedCharacterRange
SGTrialClientWrapper
SGContactDetail
CNtoSGContacts
SGSGtoCNContactsCacheUpdateAdapter
SGHarvestQueueMetricsTimer
SGHarvestQueueMetrics
SGEntityStoreToFeatureStoreLockGuardedData
SGSqlEntityStoreTokenizerGuardedData
SGSqlEntityStore
SGOutput
SGExtractionDissector
SGInteractionProcessing
SGMISubmodelsManager
SGMISubmodelsAccumulator
SGMINicknameManager
SGServiceContext
SGReverseTemplatesJSDataDetectors
SGMIWarningsConfig
SGPseudoReminderKey
SGDCKLocation
SGMIFeatureVector
SGDataNormalization
SGDCKInteractionInfo
SGContactNicknameDissector
SGAppLaunchHistory
SGM2HarvestBudgetStatusTransition
ContentProtection
SGPipelineEnrichment
SGMetricsHelper
SGMIBiomeSummaryResults
SGURLContainer
SGExternalEnrichment
SGURLDissector
SGDeliveryKey
SGIdentityName
SGMIFeatureVectorCollator
SGMessage
SGSpotlightIdentifiers
SGM2BirthdayExtractionWithSupervision
SGStructuredEventClassification
SGJournal
SGContactEntity
SGRawKey
SGDOMParserResult
PipelineAdditions
SGPipeline
SGPOSTagger
SGPipelineDissector
SGContactDetailKey
SGPseudoContactKey
SGMailAttachment
SGTextMessageBirthdayCongratsModel
SGStorageEvent
SGEventForGeocode
SGDSpotlightReceiver
SpotlightReceiver
AttributePresence
SGContactPipelineHelper
SGCuratedContactMatcher
SGDCKEvent
SGPaths
SGNameInversionPredictor
SGEmailKey
SGMITokenCounts
SGMINaiveBayesModelQueryResult
SGMINaiveBayesModel
SGMI
ExtractionInfos
SGTokenizerMappingTransformer
SGEntityMatchingTransformer
DatabaseMigrator
SGMailIntelligenceDissector
SGSelfIDSupervision
SGContactDetailSupervision
SGDetectedAttributeML
SGMIMessageMissingEntityAnalyzer
SGRe2
SGRe2Basic
SGRe2Subregexps
SGRe2Lazy
SGMIWarningsDetectionRegexes
SGMIWarningsDetectionRegex
SGMIWarningsDetectors
SGMIWarningsDetectionRegexMatch
SGPlainTextContentCursor
SGIdentityKey
SGMicrodataItemProp
SGMicrodataParser
SGDSpotlightCommander
SGNaturalLanguageDissector
Spotlight
CSSearchableIndexDelegate
SGMIDomainCountingTableGuardedData
SGMIDomainCountingTable
SGMIFeatureStoreGuardedData
SGMIFeatureStore
_PASDatabaseMigrationProtocol
SGMISimpleEngagementStats
SGDuplicateKey
EMVIPReader_Private
SGMailClientUtil
SGSignificantAddressModel
SGProactiveHarvestingSupport
SGFoundInAppsStrings
SGContactAggregator
SGNameDetector
MessageManagement
SGDonatedContactDissector
Events
SGDatabaseMigratorEntities
SGSeekableData
SGSeekable
SGLevenshtein
FIAPResult
SGDCKTimeRange
SGCuratedEventKey
SGStorageReminder
SpotlightMapping
SGDNotificationBroadcaster
SGMIMetricsSubmodelAgeVector
SGXpcTransaction
SGMITrialClientWrapperGuardedData
SGMITrialClientWrapper
SGSchemaKeys
SGSpotlightContactsAdapter
SGSignificantAddressModelForIMessage
SGExtractionDocument
SGWebPageKey
Building
SGMIMetricsRegexSignatureStat
SGDPLogging
SGMIMetricsInferenceAndGroundTruth
SGMicrodataParserStackItem
SGMIBiomeUtility
SGContactSharingTransformer
SGAsset
Tags
SGEKCalendarAdapter
SGM2HarvestCostBreakdown
ErrorHandling
SGDatabaseJournal
HTMLContentDataNoCopy
JSGlobalContextRef
StringAsDetail:
JSONResult
StringAsMethod:
StringAsCategory:
StringAsSource:
StringAsContactDetail:
T@"MLMultiArray",&,N,V_location
StringAsDocumentSource:
T@"NSData",C,N,V_structuredData
StringAsFoundIn:
T@"NSNumber",R,N,V_noEngagement
StringAsHarvestSource:
T@"NSSet",R,N,V_postalAddresses
StringAsMode:
T@"NSString",&,N,V_targetString
StringAsOutcome:
T@"NSString",&,V_addressMapping
StringAsSupervision:
T@"NSString",R,N,V_personHandle
StringAsType:
T@"NSString",R,N,V_providerName
T#,R
TB,N,V_cacheHit
T@"<PMLMultiLabelClassifierProtocol><PMLPlistAndChunksSerializableProtocol>",R,D
TB,R,N,V_allDay
T@"<PMLTransformerProtocol>",R,V_featurizer
TI,N,V_exitCode
T@"CKServerChangeToken",&,N,V_syncToken
Td,N,V_accuracy
T@"CSPerson",&,V_sender
Ti,N,V_category
T@"EAEmailAddressSet",&,N,V_vips
T{_NSRange=QQ},N,V_contextRange
T@"EMDaemonInterface",R,N,V_emailDaemon
T{_NSRange=QQ},R,N,V_valueRange
T@"INInteraction",R,N,V_interaction
T@"MLMultiArray",&,N,V_I
_accountHandles
T@"MLMultiArray",&,N,V_N
_addressMapping
T@"MLMultiArray",&,N,V_bi_lstm_0_c_in
_annotationType
T@"MLMultiArray",&,N,V_bi_lstm_0_c_out
_appNameForApp:
T@"MLMultiArray",&,N,V_bi_lstm_0_h_in
_authorNickname
T@"MLMultiArray",&,N,V_bi_lstm_0_h_out
_bi_lstm_0_c_in
T@"MLMultiArray",&,N,V_core
_cachedContacts
T@"MLMultiArray",&,N,V_time
T@"NSArray",&,N,V_authorMatchingContacts
_classificationOfflinePrecision
T@"NSArray",&,N,V_emailAddresses
_contactsHelper
T@"NSArray",&,N,V_enrichments
_cpuEnd
T@"NSArray",&,N,V_instantMessageAddresses
T@"NSArray",&,N,V_phoneNumbers
_defaultTimeIntervalForAWarning
T@"NSArray",&,N,V_postalAddresses
_deleteDomainIdentifiersDropbox
T@"NSArray",&,N,V_taggedCharacterRanges
_detail
T@"NSArray",&,V_deliveries
_domain
T@"NSArray",&,V_features
_endPtr
T@"NSArray",&,V_invalidatedMessageIdentifiers
_events
T@"NSArray",&,V_reminders
_extractionInfo
T@"NSArray",C,N,V_bcc
T@"NSArray",C,N,V_headers
_greenTeaLogger
T@"NSArray",C,N,V_phones
T@"NSArray",C,N,V_to
_handle
T@"NSArray",R,N,V_dataDetectorMatches
_handle_SQLITE_WARNING:onError:
T@"NSArray",R,N,V_exceptionTemplates
_harvestReservationsFromInteractions:bundleId:queue:completion:
T@"NSArray",R,N,V_instantMessageAddresses
_hashes
T@"NSArray",R,N,V_itemRef
T@"NSArray",R,N,V_locations
_isSent
T@"NSArray",R,N,V_numberArrayValue
_knowledgeStore
T@"NSArray",R,N,V_reminders
_kvCacheManager
T@"NSArray",R,N,V_taggedCharacterRanges
_length
T@"NSArray",R,N,V_uniqueIdentifiers
_locale
T@"NSArray",R,V_bigramQueriedTokensCount
_logReminderInteractionSummaryForReminder:interface:actionType:
T@"NSArray",R,V_featureNames
_mailGotFlagged
T@"NSArray",R,V_groundTruthEstimatorRules
_masterEntityId
T@"NSArray",R,V_mean
T@"NSArray",R,V_saliencyOverrideRules
T@"NSArray",R,V_textConsumers
_nameComponents
T@"NSCharacterSet",&,V_characterSet
_numericMapping
T@"NSData",&,N,V_handle
_oldestTokenAge
T@"NSData",&,N,V_reservationContainerReference
_parent
T@"NSData",&,N,V_salt
_pendingGeocode
T@"NSData",&,N,V_signature
_phones
T@"NSData",R,N
_prepareEntity:
T@"NSDataDetector",&,V_dataDetector
_quoted
T@"NSDate",R,N
_regexpKeysSeen
T@"NSDate",R,N,V_detectedDate
_result
T@"NSDate",R,N,V_endDate
T@"NSDate",R,N,V_timestamp
T@"NSDictionary",&,N,V_indexSetForOutputNameLabel
_sender
T@"NSDictionary",&,V_mappings
_serviceContext
T@"NSDictionary",R,N,V_biomeSummaryByMessage
_simulatedCSSIs
T@"NSDictionary",R,N,V_dataDetectorMappedAdditions
_socialProfiles
T@"NSDictionary",R,N,V_featureDict
_sourceMetadata
T@"NSDictionary",R,N,V_htmlIds
_structuredData
T@"NSDictionary",R,N,V_sourceMetadata
_suffix
T@"NSError",R,N,V_error
_teamIdentifier
T@"NSMutableArray",&,N,V_locations
_tokenizeTitle:
T@"NSMutableArray",&,N,V_missingAttachments
_trackingNumber
T@"NSMutableArray",&,N,V_stats
_unigramFeature
T@"NSMutableDictionary",&,N,V_deleteUniqueIds
_usernamesCache
T@"NSMutableDictionary",R,N,V_emailToCanonicalEmailCache
_whitelistedVerbRangeInContent:
T@"NSMutableDictionary",R,V_unigramTokensCount
accountChanged:
T@"NSNumber",&,N,V_eventsWereRemovedFromEventKit
actions
T@"NSNumber",&,N,V_hasDeferredSync
addEnrichments:
T@"NSNumber",&,N,V_saltUsesManatee
address
T@"NSNumber",R,N,V_numberValue
airport
T@"NSNumber",R,N,V_privateGroupsCount
allFeatureNames
T@"NSNumber",R,V_output
alternativeKeysForEventKitQuery
T@"NSNumber",R,V_salientCount
annotationTypeUniqueIdentifier:
T@"NSNumber",R,V_strictUpperBound
approximateTime
T@"NSObject<SGEntityKey>",R,N,V_entityKey
arrayWithArray:
T@"NSPersonNameComponents",R,N,V_nameComponents
arrivalTerminal
T@"NSSet",&,N,V_authorMatchingContactsKeys
attachmentPaths
T@"NSSet",R,N
augmentSuggestedContactWithContact:conversationId:store:handle:
T@"NSSet",R,N,V_itemType
authorPhotoPath
T@"NSSet",R,N,V_socialProfileIdentifiers
availableTagSchemesForLanguage:
T@"NSString",&,N,V_address
base64EncodedStringWithOptions:
T@"NSString",&,N,V_bundleId
beginIndexBatch
T@"NSString",&,N,V_content
bi_lstm_0_h_out
T@"NSString",&,N,V_emailLanguage
bundleForClass:
T@"NSString",&,N,V_groupId
busTrip
T@"NSString",&,N,V_interactionBundleId
checkForAndProcessVersionChange
T@"NSString",&,N,V_interactionId
clearMigrationCompletedForPaths
T@"NSString",&,N,V_key
comment
T@"NSString",&,N,V_lang
commitSaliency:
T@"NSString",&,N,V_primaryICloudCalendarAccount
computeContactConnectionScoreFromEmailAddress:usingEntityStore:
T@"NSString",&,N,V_sourceKey
confirmContactByRecordID:error:
T@"NSString",&,N,V_treatmentId
confirmReminderFromOtherDevice:
T@"NSString",&,V_conversationIdentifier
contactStoreWithDonatedContacts
T@"NSString",&,V_emailMapping
containsObject:
T@"NSString",&,V_linkMapping
content
T@"NSString",&,V_phoneMapping
conversationAge
T@"NSString",&,V_targetMapping
convertToLocationWithId:origin:
T@"NSString",C,N,V_accountType
correct
T@"NSString",C,N,V_authorPhotoPath
countForObject:
T@"NSString",C,N,V_content
T@"NSString",C,N,V_context
curated
T@"NSString",C,N,V_email
currentCalendar
T@"NSString",C,N,V_messageId
customPipeline:
T@"NSString",C,N,V_operatingSystemVersion
dateOfBirthComponentsWithError:
T@"NSString",C,N,V_sourceKey
dbStats
T@"NSString",C,N,V_textContent
decodeEntities:
T@"NSString",C,N,V_uniqueIdentifier
defaultInstance
T@"NSString",R,C
defaultReceiver
T@"NSString",R,N
deleteCompletedReimportRequests
T@"NSString",R,N,V_address
deleteDomainIds
T@"NSString",R,N,V_airportCode
deleteMessages:
T@"NSString",R,N,V_arrivalAirportDescription
deleteUniqueIds
T@"NSString",R,N,V_bundleIdentifier
detailAsString:
T@"NSString",R,N,V_contactIdentifier
detectReminders
T@"NSString",R,N,V_context
detectedReservationIdWithError:
T@"NSString",R,N,V_displayName
didRegexTrigger
T@"NSString",R,N,V_domainId
divertedAirport
T@"NSString",R,N,V_externalId
donateRelevantActions:bundleID:
T@"NSString",R,N,V_extraction
dropOffLocation
T@"NSString",R,N,V_filename
dtstart
T@"NSString",R,N,V_flightno
dueLocationType
T@"NSString",R,N,V_givenName
encryptedValues
T@"NSString",R,N,V_inReplyTo
endDate
T@"NSString",R,N,V_key
eventActivities
T@"NSString",R,N,V_labelString
eventExtractionMobileAssetsPath
T@"NSString",R,N,V_messageId
exists:
T@"NSString",R,N,V_name
expandRange:by:
T@"NSString",R,N,V_path
extractedSocial
T@"NSString",R,N,V_plainText
fastestEncoding
T@"NSString",R,N,V_preferredUniqueIdentifier
fileSizeInBytes
T@"NSString",R,N,V_senderID
flightInformationWithAirlineCode:flightNumber:flightDate:reply:
T@"NSString",R,N,V_signature
foundIn
T@"NSString",R,N,V_sourceKey
freezeObservers
T@"NSString",R,N,V_suffix
fromInteraction
T@"NSString",R,N,V_teamIdentifier
geocodeAccuracy
T@"NSString",R,N,V_text
getBytes:range:
T@"NSString",R,N,V_trackingNumber
groupId
T@"NSString",R,N,V_uniqueId
handles
T@"NSString",R,N,V_userIdentifier
hasCountOver2MB
T@"NSString",R,N,V_value
hasDeferredSync
T@"NSString",R,V_attachmentFilename
hasEmailAddress
T@"NSString",R,V_path
hasHighPriority
T@"NSString",W,N,V_senderDisplayName
hasLang
T@"NSTimeZone",R,N,V_detectedTimeZone
hasMailboxStats
T@"PETEventTracker2",&,N,V_pet2Tracker
hasModelVersion
T@"SGContactDetail",&,N,V_birthday
hasNoEngagement
T@"SGContactDetailsHolder",&,V_internalDetectedDetails
hasPhoneNumber:
T@"SGDCKInteractionInfo",&,N,V_interactionInfo
hasStandardMailRulesProbability
T@"SGDuplicateKey",&,N,V_duplicateKey
hasSubscription
T@"SGDuplicateKey",R,N,V_duplicateKey
hasTemplateName
T@"SGEntity",R,N,V_entity
hasWhen
T@"SGExtractionInfo",R,N,V_extractionInfo
hashesForOpaqueKey:forMatching:
T@"SGIdentityKey",R,N,V_identityKey
headersContainInhumanOnes:keys:
T@"SGMIMetricsAggregatedAccuracyLog",&,N,V_activeAggregatedAccuracyLogForThePastFourWeeks
hoursSinceLastIncrementalUpdate
T@"SGMIMetricsAggregatedAccuracyLog",&,N,V_backgroundAggregatedAccuracyLogForThePastFourWeeks
htmlIds
T@"SGMIMetricsInferenceAndGroundTruth",&,N,V_active
incStatsCounterWithKey:byValue:
T@"SGMIMetricsMailIntelligenceForMessage",R,V_log
indexed
T@"SGMIMetricsSubmodelStats",&,N,V_conversationStats
inhuman
T@"SGMIMetricsSubmodelStats",&,N,V_listIdStats
initForBuilding
T@"SGMIMetricsSubmodelStats",&,N,V_mailboxTypeStats
initWithDouble:
T@"SGMIMetricsSubmodelStats",&,N,V_personFromSenderInDyadicConversationStats
initWithFormat:
T@"SGMIMetricsSubmodelStats",&,N,V_personToRecipientsStats
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:reservedSeat:trainTrip:
T@"SGMIMetricsSubmodelStats",&,N,V_subjectContentStats
initWithMemoryMappedPath:error:
T@"SGMIMetricsSubmodelsProbabilities",&,N,V_submodelsProbabilities
initWithNSData:
T@"SGMIMetricsTrialMetadata",&,N,V_activeTrialMetadata
initWithRegexp:
T@"SGMIMetricsTrialMetadata",&,N,V_trialMetadata
initWithResult:
T@"SGMITokenCounts",R,V_mailCount
initWithZoneID:
T@"SGMIWarningsDetectionRegex",R,N,V_body
interactionInfo
T@"SGMIWarningsDetectionRegexes",R,N,V_attachment
isContactDetail
T@"SGMIWarningsDetectionRegexes",R,N,V_followUpOnOutgoingMailsAsks
isEqualToArray:
T@"SGMIWarningsDetectionRegexes",R,N,V_nickname
isEvent
T@"SGMIWarningsDetectionRegexes",R,N,V_recipientConservative
isInMemoryPath:
T@"SGMessage",R,N,V_message
isInteractionId
T@"SGMicrodataItem",R,N,V_itemValue
isMailingListId
T@"SGMicrodataParserStackItem",R,V_parent
isPhoneContext:
T@"SGPipelineEntity",&,N,V_entity
isReferencedBy:
T@"SGPostalAddressComponents",R,N,V_postalAddressComponents
isSearchableItemPartOfReimport:
T@"SGRecordId",R,N,V_recordId
isSenderSupportedForExtraction:
T@"SGServiceContext",R,N,V_context
isUnlikelyPhone
T@"SGSimpleMailMessage",R,N,V_mailMessage
itemWithUniqueIdentifier:error:
T@"SGSimpleNamedEmailAddress",C,N,V_mailingList
jsonLdOutputFromPackedJSEntity:
T@"SGSimpleTimeRange",&,N,V_timeRange
keysForContact:
T@"SGSocialProfileDetails",R,N,V_socialProfile
keysSortedByValueUsingSelector:
T@"SGSqlEntityStore",R,N,V_store
T@"SGSqliteDatabase",R,N,V_db
T@"SGStorageEvent",R,N,V_event
launchCountForApp:afterDate:lowerBucket:bucketSize:bucketLimit:
T@"SGStorageReminder",R,N,V_reminder
T@"SGTextMessage",R,V_message
lookup:
T@?,C,N,V_changeCallback
mailAttachmentHistogramAtIndex:
TB,N,V_allDay
mapAndFilter:f:
TB,N,V_contactInformationExtracted
matchForString:
TB,N,V_dateIsCorrect
maxPromptLength
TB,N,V_didResponseKitTrigger
messagesPruned:
TB,N,V_foundMatchingElement
migrate
TB,N,V_hasInhumanHeaders
migrationNeeded
TB,N,V_highPriority
migration_MoveContentToSnippets
TB,N,V_isFirstPerson
migration_createFollowUpTableWithAppleMailMessageIdAsPrimaryKey
TB,N,V_isNegativeExample
multiArrayValue
TB,N,V_isPositiveExample
nameWithString:
TB,N,V_isStoredEncrypted
naturalLanguageEventAttributes:
TB,N,V_isThirdPerson
TB,N,V_needsSourceVerification
TB,N,V_pendingVerification
numberWithLong:
TB,N,V_regexBelongsToSender
orphanReminder:
TB,N,V_result
outputDimension
TB,N,V_significantWork
overwriteEvent:
TB,N,V_wasSuggestedContact
parseRfc822:attachmentCallback:
TB,R,D,N
participantType
TB,R,N
pattern
TB,R,N,V_curated
performedAction:forApp:onEvent:
TB,R,N,V_hasHashedMessageId
TB,R,N,V_inferredDate
predictedStringsFromModelOutput
TB,R,N,V_isEphemeral
processInteraction:bundleIdentifier:protectionClass:completion:
TB,R,N,V_isUnlikelyPhone
processingQueue
TB,R,N,V_linkClicked
pruneDB
TB,R,N,V_markedAsJunk
purgeSpotlightReferencesWithBundleIdentifier:uniqueIdentifiers:
TB,R,N,V_markedAsUnread
quality
TB,R,N,V_replyDraftStarted
read:fromStore:
TB,R,N,V_significantWork
realtimeContactsFromEntity:enrichments:sourceTextMessage:store:
TB,R,N,V_waitForMigrations
recordIdForKey:
TB,V_senderIsAccountOwner
refreshCacheFromAccountsService
TC,R,N,V_locationType
rejectReminderByRecordId:error:
TC,R,N,V_useCase
removeAllPseudoContactsInIdSet:
TI,N,V_blockedWarningCount
removeObserver:
TI,N,V_count32KBTo128KB
requestWithURL:
TI,N,V_count8KBTo32KB
saltUsesManatee
TI,N,V_countUpTo8KB
schemaPostalAddressForPostalAddressExtraction:addressThreshold:
TI,N,V_daysAvailableDuringIncrementalUpdate
seatRow
TI,N,V_deletedEmailsCount
seekToEndOfFile
TI,N,V_errorCode
serviceProvider
TI,N,V_hoursSinceLastIncrementalUpdate
setAccountType:
TI,N,V_ignorablePredictedAsIgnorable
setAllMailIntelligenceAsSalient
TI,N,V_ignorablePredictedAsSalient
setAttachments:
TI,N,V_modelVersion
setBcc:
TI,N,V_nbExtremelyDiscriminantTokensForIgnorability
setContentHash:
TI,N,V_nbHighlyDiscriminantTokensForIgnorability
setData:forKey:
TI,N,V_nbTokensInMailSubject
setDay:
TI,N,V_neutralPredictedAsIgnorable
setDomainFromSenderProbability:
TI,N,V_neutralPredictedAsSalient
setEnrichments:
TI,N,V_numberOfLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
setFilterQuery:
TI,N,V_numberOfPredictedAttachmentOnLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
setHasAccuracy:
TI,N,V_positiveEngagement
setHasCategory:
TI,N,V_previousInteractionOnConversationInMinutes
setHasFloating:
TI,N,V_rollbackedSlicesCountToComplyToPostDeletionPolicy
setHasToStatus:
TI,N,V_salientPredictedAsNeutral
setIgnorablePredictedAsSalient:
TI,N,V_state
setKey:
TI,N,V_totalNumberOfEmailsProcessedForAttachmentDetectionRoundedToClosestMultipleOf20
setListIdStats:
TI,N,V_totalNumberOfEmailsProcessedForRecipientDetectionRoundedToClosestMultipleOf20
setMailingList:
TI,R,N,V_matchType
setMaxDistance:
TI,R,N,V_numberOfMailsViewedBeforeSinceAvailable
setNeutralPredictedAsIgnorable:
TI,R,N,V_numberOfUnreadMessageAtFirstViewTime
setPersonFromSenderProbability:
TI,R,N,V_type
setPos:
TQ,N,V_cumulatedSubmodelsRollbackForPostDeletionPolicyPerformanceInMilliSeconds
setSalientPredictedAsIgnorable:
TQ,N,V_maxDistance
setSupervision:
TQ,N,V_missingRecipientPredictionPerformanceInMilliSeconds
setTransformer:
TQ,N,V_saliencyPredictionPerformanceInMilliSeconds
setUpdateTimerWithDelaySeconds:
TQ,N,V_size
sg_emailAddress
TQ,N,V_submodelsUpdatePerformanceInMilliSeconds
shiftIndexesStartingAtIndex:by:
TQ,R,N
signatureRange:
TQ,R,N,V_count128KBTo512KB
snippet
TQ,R,N,V_count512KBTo2MB
sortedUnsubscriptionOpportunitiesForField:limit:withCompletion:
TQ,R,N,V_countOver2MB
startJournaling
TQ,R,N,V_end
stopKvo
TQ,R,N,V_minCountToConsiderATokenAsHighlyDiscriminant
storeStatsCounterWithKey:value:
TQ,R,N,V_provider
stringByAppendingPathExtension:
TQ,R,N,V_start
stringFromDate:
TQ,R,V_offsetInFile
success
T^{sqlite3=},R,N
suggestContactsByMasterEntityQuery:withSnippets:limit:bindings:
Td,N,V_end
summary
Td,N,V_longitude
suspend
Td,N,V_start
throttlingState
Td,R,N,V_accuracy
toFloatingTime:
Td,R,N,V_defaultTimeIntervalForAWarning
tokensMatchedInContent:content:
Td,R,N,V_defaultTimeIntervalToStartWarningExposition
tracked
Td,R,N,V_firstAppLaunchFollowingFetch
trigger
Td,R,N,V_longitude
Td,R,N,V_messageViewMaxDwellTime
updateReminder:
Td,R,N,V_quality
uppercaseString
Td,R,N,V_ratioToConsiderATokenAsHighlyDiscriminant
urlsFoundBetweenStartDate:endDate:bundleIdentifier:entityStore:
Td,R,V_oldestTokenAge
useCase
Tf,N,V_attachmentsProbability
version
Tf,N,V_conversationProbability
webView
.cxx_destruct
ISOCountryCode
JSONObjectWithData:options:error:
StringAsFoundInSenderCNContact:
StringAsApp:
StringAsOffset:
StringAsCategoryType:
StringAsTokens:
StringAsCtsJobConstraints:
T@"NSArray",R,N
StringAsExtractionSignatureSource:
T@"NSData",R,N,V_structuredData
StringAsFromStatus:
T@"NSSet",R,C,N
StringAsLocationType:
T@"NSString",&,N,V_experimentId
StringAsModel:
T@"NSString",&,N,V_templateName
StringAsPredictedSaliency:
T@"NSString",&,V_numericMapping
StringAsToStatus:
T@"NSString",R,N,V_propertyName
T#,&,N,V_modelClass
T@"NSString",R,V_likelyLanguage
T@"<PMLMultiLabelClassifierProtocol>",R,V_model
TB,N,V_floating
T@"<PMLTransformerProtocol>",&,N,V_transformer
TB,R,V_isLogged
T@"CKRecordID",&,N,V_saltAtomicReferenceId
T^i,R,N
T@"CSPerson",&,N,V_author
Td,N,V_latitude
T@"CSPerson",R,N
Ti,N,V_toStatus
T@"ECDKIMVerifier",R,N,V_dkimVerifier
T{_NSRange=QQ},R,N,V_labelRange
T@"HVHtmlParser",R,N,V_htmlParser
T@"MLMultiArray",&,N,V_D
_abortDueToSqliteError:onError:
T@"MLMultiArray",&,N,V_L
_active
T@"MLMultiArray",&,N,V_W
_allDay
T@"MLMultiArray",&,N,V_bi_lstm_0_c_in_rev
_anyHash:inSet:
T@"MLMultiArray",&,N,V_bi_lstm_0_c_out_rev
_author
T@"MLMultiArray",&,N,V_bi_lstm_0_h_in_rev
_backingKVStore
T@"MLMultiArray",&,N,V_bi_lstm_0_h_out_rev
_bi_lstm_0_h_in
T@"MLMultiArray",&,N,V_data
_carrierEntries
T@"MLMultiArray",&,N,V_title
_changeCallback
T@"NSArray",&,N,V_currentColumns
_conservativeRecipientDetection
T@"NSArray",&,N,V_enrichedTaggedCharacterRanges
_count8KBTo32KB
T@"NSArray",&,N,V_externalEnrichments
_currentColumns
T@"NSArray",&,N,V_matches
T@"NSArray",&,N,V_plainTextDetectedData
_deferRequested
T@"NSArray",&,N,V_socialProfiles
_deleteZeroRows
T@"NSArray",&,V_contacts
_documentSource
T@"NSArray",&,V_events
_emailAddresses
T@"NSArray",&,V_invalidatedIdentifiers
_entity
T@"NSArray",&,V_recipients
_executeFile:onDb:becameLocked:
T@"NSArray",C,N,V_accountHandles
_extractionMode
T@"NSArray",C,N,V_cc
_filterCandidates:withUniqueDetailMatchesToContact:andFeatures:
T@"NSArray",C,N,V_mailboxIdentifiers
T@"NSArray",C,N,V_socialProfileIdentifiers
T@"NSArray",R,N,V_attachments
_handle_SQLITE_CORRUPT:onError:
T@"NSArray",R,N,V_eventBatch
_harvestMetrics
T@"NSArray",R,N,V_historicalDataRequests
_hasDeferredProcessStateChanges
T@"NSArray",R,N,V_itemProps
_htmlBodyCached
T@"NSArray",R,N,V_items
_inProgressProcureSaltOperation
T@"NSArray",R,N,V_matchingContacts
_isTestMessage:
T@"NSArray",R,N,V_outputItems
T@"NSArray",R,N,V_stringArrayValue
_lastSuggestionsFromMessageLock
T@"NSArray",R,N,V_tags
_likelyLanguage
T@"NSArray",R,N,V_wildcardsMatches
_locked
T@"NSArray",R,V_detectedData
_mailClientUtil
T@"NSArray",R,V_groundTruthEstimatorFeatures
_markedAsUnread
T@"NSArray",R,V_itemScopes
_method
T@"NSArray",R,V_messages
T@"NSArray",R,V_std
T@"NSArray",R,V_unigramQueriedTokensCount
_noZone
T@"NSData",&,N,V_contentHash
_offset
T@"NSData",&,N,V_metadata
_output
T@"NSData",&,N,V_reservationItemReferences
_parseDocument:
T@"NSData",&,N,V_schemaOrg
_persistedState
T@"NSData",C,N
_prefix
T@"NSData",R,N,V_handle
_purgeUniqueIds
T@"NSDate",C,N,V_date
_regexp
T@"NSDate",R,N,V_date
_reinstateDeath
T@"NSDate",R,N,V_detectedEndDate
_rotate
T@"NSDate",R,N,V_startDate
T@"NSDate",W,N,V_matchDate
_selfIdentificationMessageCount
T@"NSDictionary",&,N,V_modelOutput
_serializeDate:
T@"NSDictionary",R,N,V_biomeMessageIdByPersistentId
_signatureRange
T@"NSDictionary",R,N,V_dataDetectorAdditions
_sketch
T@"NSDictionary",R,N,V_detectors
_source
T@"NSDictionary",R,N,V_followUpWarningsParameters
_startInDaysAgo
T@"NSDictionary",R,N,V_jsMessageLogs
_submodelsStats
T@"NSDictionary",R,V_submodels
_tagger
T@"NSIndexSet",R,N
T@"NSMutableArray",&,N,V_mailAttachmentHistograms
_tokens
T@"NSMutableArray",&,N,V_missingRecipients
_trialEventExtractionAssetsPath
T@"NSMutableDictionary",&,N,V_deleteDomainIds
_userIdentifier
T@"NSMutableDictionary",&,N,V_purgeUniqueIds
_whitelistRegex
T@"NSMutableDictionary",R,V_bigramTokensCount
T@"NSMutableSet",&,N,V_locations
accountTypeFor:
T@"NSNumber",&,N,V_hasDeferredProcessStateChanges
addEnrichment:withParentEntity:
T@"NSNumber",&,N,V_hasSubscription
addTag:
T@"NSNumber",R,N,V_negativeEngagement
airline
T@"NSNumber",R,N,V_positiveEngagement
aliases
T@"NSNumber",R,V_featureName
allKeys
T@"NSNumber",R,V_regularCount
analyzeDatabase
T@"NSNumber",R,V_strictLowerBound
T@"NSNumber",R,V_threshold
arrayFromPathWithPrefix:suffix:
T@"NSOperationQueue",R,N
arrivalPlatform
T@"NSRegularExpression",R,N,V_attachmentLinkDetectionRegex
attachmentNames
T@"NSSet",&,N,V_featureNames
attachmentTypes
T@"NSSet",R,N,V_emailAddresses
authorAddresses
T@"NSSet",R,N,V_phoneNumbers
authors
T@"NSSet",R,N,V_tags
T@"NSString",&,N,V_airportCode
T@"NSString",&,N,V_componentName
bi_lstm_0_c_out
T@"NSString",&,N,V_domain
bindNamedParam:toNonnullNSData:
T@"NSString",&,N,V_extraKey
busName
T@"NSString",&,N,V_intentResponseUserActivityString
calendarDeleted
T@"NSString",&,N,V_interactionGroupId
ckErrorForRecordZoneId:inError:
T@"NSString",&,N,V_interactionTeamId
cnContactIdentifiersForContact:
T@"NSString",&,N,V_label
commit:
T@"NSString",&,N,V_locale
componentsFromLocaleIdentifier:
T@"NSString",&,N,V_regexLanguage
confirmContact:
T@"NSString",&,N,V_title
confirmEventFromExternalDevice:
T@"NSString",&,V_characterMapping
contact
T@"NSString",&,V_dateMapping
containsDomain:
T@"NSString",&,V_language
containsString:
T@"NSString",&,V_nickname
context
T@"NSString",&,V_photoPath
convertToEvent:
T@"NSString",C,N
copyTo:
T@"NSString",C,N,V_authorNickname
count512KBTo2MB
T@"NSString",C,N,V_bundleIdentifier
country
T@"NSString",C,N,V_contentProtection
createSnapshot:
T@"NSString",C,N,V_domainIdentifier
curatedEventKey
T@"NSString",C,N,V_mailConversationIdentifier
currentPatterns
T@"NSString",C,N,V_name
dateFromString:
T@"NSString",C,N,V_source
T@"NSString",C,N,V_subject
dealloc
T@"NSString",C,N,V_title
defaultDuration
T@"NSString",R
defaultLanguage
T@"NSString",R,C,V_locale
defaultTimeZone
T@"NSString",R,N,V_accountType
deleteContentWithRequest:error:
T@"NSString",R,N,V_airline
deleteInteractionsWithBundleId:
T@"NSString",R,N,V_appleMailMessageId
deleteURLsFromBundleIdentifier:
T@"NSString",R,N,V_bundleId
destroy
T@"NSString",R,N,V_clientName
detectLanguageFromLanguageTags:
T@"NSString",R,N,V_content
detectedEndDate
T@"NSString",R,N,V_departureAirportDescription
detectionsInPlainText:baseDate:
T@"NSString",R,N,V_domain
disable
T@"NSString",R,N,V_email
domain:
T@"NSString",R,N,V_externalIdentifier
downloadMetadataWithCompletion:
T@"NSString",R,N,V_familyName
dtstamp
T@"NSString",R,N,V_firstname
dueDate
T@"NSString",R,N,V_formattedName
ef_trimTrailingCharactersInSet:
T@"NSString",R,N,V_groupId
T@"NSString",R,N,V_interactionIdentifier
enumerateAllRemindersWithBlock:
T@"NSString",R,N,V_label
eventClassifierMobileAssetsPath
T@"NSString",R,N,V_locale
eventIdentifier
T@"NSString",R,N,V_middlename
existsInString:
T@"NSString",R,N,V_parsecWikidataQid
extractedFlight
T@"NSString",R,N,V_phoneNumber
extractedTicket
T@"NSString",R,N,V_pluginIdentifier
fetchMeContactFromContactStore:
T@"NSString",R,N,V_prefix
filterOutUndisplayableEntities:
T@"NSString",R,N,V_service
forward
T@"NSString",R,N,V_source
foundInSenderCNContactAsString:
T@"NSString",R,N,V_stringValue
fromDictionary:
T@"NSString",R,N,V_surname
fromTextMessage
T@"NSString",R,N,V_templateShortName
geocodeLatitude
T@"NSString",R,N,V_title
getNSStringForColumnName:table:
T@"NSString",R,N,V_type
groupIdentifier
T@"NSString",R,N,V_uniqueIdentifier
hasCategoryType
T@"NSString",R,N,V_username
hasCountUpTo8KB
T@"NSString",R,N,V_valueString
hasDeploymentId
T@"NSString",R,V_language
hasExperimentId
T@"NSString",R,V_token
hasHumanHeaders
T@"NSTimeZone",R,N,V_detectedEndTimeZone
hasLocationType
T@"NSUbiquitousKeyValueStore",R,N
hasMode
T@"PMLSessionDescriptor",&,N,V_sessionDescriptor
hasName
T@"SGContactDetail",&,N,V_photoPath
hasPath
T@"SGCuratedEventKey",R,N,V_duplicateEventKey
hasPredictedMissingElementScore
T@"SGDCKTimeRange",&,N,V_when
hasSubjectCountStatsProbability
T@"SGDuplicateKey",&,N,V_extractedReminderDuplicateKey
hasTag:
T@"SGDuplicateKey",R,N,V_parentKey
hasType
T@"SGExtractionInfo",&,N,V_extractionInfo
hashesDidChange
T@"SGHarvestQueueMetrics",&,N,V_harvestMetrics
headers
T@"SGKeyValueCacheManager",R,V_kvCacheManager
holdXpcTransactionForShortDelay
T@"SGMIMetricsAggregatedAccuracyLog",&,N,V_activeAggregatedAccuracyLogSinceModelInitialization
htmlContentData
T@"SGMIMetricsAggregatedAccuracyLog",&,N,V_backgroundAggregatedAccuracyLogSinceModelInitialization
hypotheticalContactSuggestionImpressionsIncludingInsignificant:
T@"SGMIMetricsInferenceAndGroundTruth",&,N,V_background
incomingMessage
T@"SGMIMetricsSubmodelStats",&,N,V_attachmentsStats
ingestFeatures:
T@"SGMIMetricsSubmodelStats",&,N,V_domainFromSenderStats
inhumanFeatures
T@"SGMIMetricsSubmodelStats",&,N,V_mailboxStats
initWithDomain:
T@"SGMIMetricsSubmodelStats",&,N,V_personCCRecipientsStats
initWithEntity:
T@"SGMIMetricsSubmodelStats",&,N,V_personFromSenderStats
initWithHandle:
T@"SGMIMetricsSubmodelStats",&,N,V_standardMailRulesStats
initWithLength:
T@"SGMIMetricsSubmodelStats",&,N,V_subjectCountStatsStats
initWithMessagesFromDaysAgo:throughDaysAgo:limit:withBiomeData:store:useSpotlightDataForMissingBiomeData:preLoadedFeatureNames:
T@"SGMIMetricsSubmodelsStats",&,N,V_submodelsStats
initWithName:iataCode:icaoCode:
T@"SGMIMetricsTrialMetadata",&,N,V_backgroundTrialMetadata
initWithRentalCompanyName:type:make:model:rentalCarDescription:
T@"SGMITokenCounts",R,V_bigramTokenCounts
initWithString:
T@"SGMITokenCounts",R,V_unigramTokenCounts
insertSaliency:
T@"SGMIWarningsDetectionRegex",R,N,V_subject
ipsosMessageWithSearchableItem:
T@"SGMIWarningsDetectionRegexes",R,N,V_followUpOnIncomingMails
isEmpty
T@"SGMIWarningsDetectionRegexes",R,N,V_followUpOnOutgoingMailsQuestions
isEqualToHistoricalDataRequest:
T@"SGMIWarningsDetectionRegexes",R,N,V_recipient
isEventMetadata
T@"SGMessage",&,N,V_message
isInhumanSender
T@"SGMicrodataDocument",R,V_document
isKeyAvailable:
T@"SGMicrodataParserStackItem",R,N,V_stackItem
isMediaMimeType
T@"SGModelSource",R,V_modelSource
isProxy
T@"SGPostalAddressComponents",R,N,V_components
isReservationContainerReference
T@"SGRecordId",&,N,V_recordId
isSearchableItemPartOfReimportWithGetterBlock:bundleIdentifier:
T@"SGSGtoCNContactsCacheUpdateAdapter",R,V_sgToCNContactsCacheUpdateAdapter
isSent:
T@"SGServiceContext",R,N,V_serviceContext
itemRef
T@"SGSimpleNamedEmailAddress",C,N,V_from
journal
T@"SGSimpleNamedEmailAddress",C,N,V_replyTo
T@"SGSimpleTimeRange",R,N,V_when
keysForContactDetail:ofContact:
T@"SGSpotlightContactsAdapter",R,V_spotlightContactsAdapter
knownEmailAddressesForNickname:
T@"SGSqlEntityStore",W,N,V_store
lastInsertRowId
T@"SGStorageContact",R,N,V_contact
latitudeAndLongitudeForAirport:
T@"SGStorageLocation",R,N,V_dueStorageLocation
T@"SGTextMessage",R,N,V_textMessage
logMetricSuggestedContactDetailUsed:contactIdentifier:bundleId:
T@"TRIClient",&,N,V_triClient
lowercaseString
TB,N
mailItemIsSPAM:
TB,N,V_cancelled
mapItem
TB,N,V_correct
matches
TB,N,V_didRegexTrigger
message
TB,N,V_estimatedGroundTruth
methodAsString:
TB,N,V_harvestedOnBattery
migrateIfNeeded
TB,N,V_hasName
migration_CreateFTSTableWithITS
TB,N,V_incomingMessage
migration_RebuildIdentityTables
TB,N,V_isFromCongratulation
minutes
TB,N,V_isPartiallyDownloaded
nameForCarrier:
TB,N,V_isSent
namesFromRegex:
TB,N,V_isSubmodelRebuilt
naturalLanguageEventLanguageID:
TB,N,V_isUnlikelyPhone
normalizedValue
TB,N,V_pendingGeocode
numberWithBool:
TB,N,V_receivedOnBattery
offsetAsString:
TB,N,V_regexDoesNotBelongToSender
outcome
TB,N,V_signature
overridePET2InstanceForTesting:
TB,N,V_wasKnownContact
parseEmailAddressString:displayName:localPart:domain:groupList:
TB,R
parseRfc822Headers:htmlContent:
TB,R,GhasFullDownloadBeenRequested
partySizeFromReservationSchema:
TB,R,N,V_approximateTime
payload
TB,R,N,V_forwardDraftStarted
pluginEndSetup:
TB,R,N,V_hasPhoneLabel
postalAddresses
TB,R,N,V_isDownloadedLocally
preventUnsubscriptionOpportunitiesSuggestionsForField:toValues:
TB,R,N,V_isPotentialEventMessage
processLoadRequestWithFileName:
TB,R,N,V_journaling
protectionClass
TB,R,N,V_mailGotFlagged
pruneDuplicateEventExtractions:
TB,R,N,V_markedAsRead
pushDontUpdate:
TB,R,N,V_partialDate
rawValueForKey:
TB,R,N,V_scrolledToEnd
read:maxLength:
TB,R,N,V_userReplied
recordConversationTurnWithDetail:received:throughApp:withStore:
TB,R,V_senderIsBusinessChat
refresh
TC,R,N,V_category
rejectReminder:
TC,R,N,V_trigger
release
TI,N,V_ageOfTheSubmodelInDays
removeBrackets:
TI,N,V_count128KBTo512KB
replyTo
TI,N,V_count512KBTo2MB
resolveByPairs:
TI,N,V_countOver2MB
schemaFromRentalCarReservation:
TI,N,V_customResponsesAfterPruning
searchableIndex
TI,N,V_daysProcessedDuringIncrementalUpdate
seconds
TI,N,V_deletedTokensCountToComplyToCappingPolicy
service
TI,N,V_extractionModelVersion
TI,N,V_hoursSinceReference
setAirportCode:
TI,N,V_ignorablePredictedAsNeutral
setApp:
TI,N,V_mailsProcessedDuringIncrementalUpdate
setAuthorNames:
TI,N,V_nbCharactersInMailSubject
setContactInformationExtracted:
TI,N,V_nbExtremelyDiscriminantTokensForSaliency
setCustomResponsesAfterPruning:
TI,N,V_nbHighlyDiscriminantTokensForSaliency
setDateMapping:
TI,N,V_negativeEngagement
setDisplayName:
TI,N,V_neutralPredictedAsNeutral
setEnd:
TI,N,V_noEngagement
setEnvironment:
TI,N,V_numberOfLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
setGteSaliency:
TI,N,V_numberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
setHasCacheHit:
TI,N,V_previousInteractionFromUserOnConversationInMinutes
setHasExitCode:
TI,N,V_rollbackedEmailsCountToComplyToPostDeletionPolicy
setHasLatitude:
TI,N,V_salientPredictedAsIgnorable
setIgnorablePredictedAsNeutral:
TI,N,V_salientPredictedAsSalient
setIgnoreAfter:
TI,N,V_timeDifferenceFromReceptionToSaliencyInferenceInSeconds
setLinkMapping:
TI,N,V_totalNumberOfEmailsProcessedForFollowUpDetectionRoundedToClosestMultipleOf20
setLowPriority:
TI,R,N
setMaxConcurrentOperationCount:
TI,R,N,V_messageViewCount
setModelOutput:
TI,R,N,V_numberOfMoreRecentUnreadMessageAtFirstViewTime
setNumberStyle:
TI,R,N,V_state
setPet2Tracker:
TQ,N,V_biomeAggregationPerformanceInMilliSeconds
setReminderOverridesForTesting:
TQ,N,V_ignoreAfter
setState:state:
TQ,N,V_missingAttachmentPredictionPerformanceInMilliSeconds
setTextContent:
TQ,N,V_pos
setTreatmentId:
TQ,N,V_selfIdentificationMessageCount
setUserVersion:
TQ,N,V_submodelsPruningForCappingPolicyPerformanceInMilliSeconds
sharedBackgroundProcessingQueue
TQ,R
shouldAddTitlePrefixForContent:
TQ,R,N,V_annotationType
significantWork
TQ,R,N,V_count32KBTo128KB
snippetsContent
TQ,R,N,V_count8KBTo32KB
sourceAsString:
TQ,R,N,V_countUpTo8KB
TQ,R,N,V_minCountToConsiderATokenAsExtremelyDiscriminant
storageLocationFromDueLocation:
TQ,R,N,V_operation
stringByAppendingPathComponent:
TQ,R,N,V_requestId
stringByExtractingPlainTextFromHTML:tableDelimiters:stripLinks:
TQ,R,N,V_type
subject
T^{?={?=SS}BBBBB},R,N
successWithNumberOfExtractions:
Td,N,V_creationTimestamp
suggestionImpressionsViaBanner:
Td,N,V_lastModifiedTimestamp
surname
Td,N,V_quality
tableId
Td,R,N
tmpPath
Td,R,N,V_cpu
tokensAsString:
Td,R,N,V_defaultTimeIntervalToEndWarningExposition
totalForDomain:
Td,R,N,V_duration
transformerInstanceForLanguage:
Td,R,N,V_latitude
triggerOptional
Td,R,N,V_messageFetchTime
unnormalizedNameSimilarity:and:
Td,R,N,V_messageViewTotalDwellTime
updateWithEvent:eventTimestamp:
Td,R,N,V_ratioToConsiderATokenAsExtremelyDiscriminant
Td,R,N,V_timeBeforeViewStartSinceAvailable
useAllLanguages
Td,R,V_threshold
valueWithRange:
Tf,N,V_conversationAge
wasKnownContact
Tf,N,V_domainFromSenderAge
Tf,N,V_domainFromSenderProbability
Tf,N,V_listIdProbability
Tf,N,V_mailboxProbability
Tf,N,V_mailboxTypeProbability
Tf,N,V_personCCRecipientsAge
Tf,N,V_personCCRecipientsProbability
Tf,N,V_personFromSenderAge
Tf,N,V_personFromSenderInDyadicConversationAge
Tf,N,V_personFromSenderInDyadicConversationProbability
Tf,N,V_personFromSenderProbability
Tf,N,V_personToRecipientsAge
Tf,N,V_personToRecipientsProbability
Tf,N,V_predictedMissingElementScore
Tf,N,V_predictedSaliencyScore
Tf,N,V_senderConnectionScore
Tf,N,V_standardMailRulesProbability
Tf,N,V_subjectContentAge
Tf,N,V_subjectContentProbability
Tf,N,V_subjectCountStatsProbability
Tf,R,N
Tf,R,N,V_bodyAnalysisSamplingFactor
Ti,N,V_app
Ti,N,V_categoryType
Ti,N,V_confidence
Ti,N,V_contactDetail
Ti,N,V_deploymentId
Ti,N,V_detail
Ti,N,V_documentSource
Ti,N,V_extractionSignatureSource
Ti,N,V_foundIn
Ti,N,V_foundInSenderCNContact
Ti,N,V_fromStatus
Ti,N,V_harvestSource
Ti,N,V_locationType
Ti,N,V_method
Ti,N,V_mode
Ti,N,V_model
Ti,N,V_offset
Ti,N,V_outcome
Ti,N,V_predictedSaliency
Ti,N,V_source
Ti,N,V_supervision
Ti,N,V_tokens
Ti,N,V_type
Ti,R,N
Ti,R,N,V_backpressureHazard
Ti,R,N,V_concurrencyBehavior
Ti,R,N,V_extractionMode
Ti,R,N,V_locationType
Ti,R,N,V_parsecDomain
Ti,R,N,V_state
Tq,N,V_endUTCOffsetSeconds
Tq,N,V_groupId
Tq,N,V_masterEntityId
Tq,N,V_parentEntityType
Tq,N,V_schemaVersion
Tq,N,V_startUTCOffsetSeconds
Tq,R,N
Tq,R,N,V_entityType
Tq,R,N,V_featureName
Tq,R,N,V_featureType
Tq,R,N,V_masterEntityId
Tq,R,N,V_writeTransactionDepth
Tq,R,V_bigramFeature
Tq,R,V_submodeledFeature
Tq,R,V_unigramFeature
Tq,V_windowLength
T{?=SS},R,N,V_type
T{SGUnixTimestamp_=d},N,V_creationTimestamp
T{SGUnixTimestamp_=d},N,V_lastModifiedTimestamp
T{SGUnixTimestamp_=d},R,N,V_creationTimestamp
T{SGUnixTimestamp_=d},R,N,V_lastModifiedTimestamp
T{_NSRange=QQ},N,V_candidateNameRange
T{_NSRange=QQ},N,V_contentRangeOfInterest
T{_NSRange=QQ},N,V_plainTextSigRange
T{_NSRange=QQ},N,V_range
T{_NSRange=QQ},N,V_signatureRange
T{_NSRange=QQ},R,N
T{_NSRange=QQ},R,N,V_contextRangeOfInterest
T{_NSRange=QQ},R,N,V_coreRange
T{_NSRange=QQ},R,N,V_match
T{_NSRange=QQ},R,N,V_range
URLByAppendingPathComponent:
URLByAppendingPathComponent:isDirectory:
URLByStandardizingPath
URLForDirectory:inDomain:appropriateForURL:create:error:
URLQueryAllowedCharacterSet
URLWithString:
UTF8String
UUID
UUIDString
_accountInfoFuture
_accountInfoInFlight
_accountStore
_accountType
_accountsAdapter
_accuracy
_actionVerbOptional
_activeAggregatedAccuracyLogForThePastFourWeeks
_activeAggregatedAccuracyLogSinceModelInitialization
_activeTrialMetadata
_activities
_actuallyAddEvents:
_addAuthorContactForMessage:entity:
_addColumn:
_addDependency:toTrain:
_addEKEventToCalendar:storageEvent:ekStore:commit:
_addEnrichmentsToEntityForOutput:entity:startTime:backPressureHazard:
_addEnrichmentsToEntityForOutput:interaction:entity:startTime:backPressureHazard:
_addIndexingTagsTo:
_addIndexingTagsToParent:
_addLocations:toEntityWriteDictionary:
_addObserver:forObjectLifetime:listenerClass:
_addSearchableItem:bundleID:
_addStringToNoContactsCache:
_addTimeRange:toEntityWriteDictionary:
_address
_ageOfTheSubmodelInDays
_airline
_airportCode
_airportDataOffsets
_airportUpdateDataOffsets
_airportsFh
_airportsUpdateFh
_allowedTypesForQueryKeyedArchives
_analyzeFeatureVector:withRegExpDictionary:forOutgoingMail:withDetectedLanguage:withRegExLanguage:withCustomTimeRange:
_analyzeForFollowUpMailWithBody:isSent:messageId:date:
_analyzeMergeBlobsIncremental:
_app
_appEnumForBundleId:
_appleMailMessageId
_applyCappingPolicy:shouldContinue:usingDatabase:
_approximateTime
_apsConnection
_areSubmodelsEmptyUsingDatabase:
_arrivalAirportDescription
_assetPath
_assetUpdateToken
_attachment
_attachmentDetectionRegexes
_attachmentFilename
_attachmentLinkDetection
_attachmentLinkDetectionRegex
_attachments
_attachmentsProbability
_attachmentsStats
_attemptToProcessRequests
_attributeSetsForEvents:
_authorCached
_authorMatchingContacts
_authorMatchingContactsKeys
_authorPhotoPath
_background
_backgroundAggregatedAccuracyLogForThePastFourWeeks
_backgroundAggregatedAccuracyLogSinceModelInitialization
_backgroundTrialMetadata
_backingData
_backpressureHazard
_baseInteractionAttributesForReminder:
_basePath
_bcc
_becomeImmuneToDeath
_beforeSystemInitialization
_bi_lstm_0_c_in_rev
_bi_lstm_0_c_out
_bi_lstm_0_c_out_rev
_bi_lstm_0_h_in_rev
_bi_lstm_0_h_out
_bi_lstm_0_h_out_rev
_bigramFeature
_bigramQueriedTokensCount
_bigramTokenCounts
_bigramTokensCount
_binderForDictionary:
_biomeAggregationPerformanceInMilliSeconds
_biomeMessageIdByPersistentId
_biomeMessageSummary
_biomeSummaryByMessage
_birthday
_blockedWarningCount
_body
_bodyAnalysisSamplingFactor
_boolMaskVectorForTokens:
_box
_boxLock
_buf
_bufferedInteractionsForBundleLock
_bundleId
_bundleIdToPET
_bundleIdentifier
_bytecode
_bytes
_cacheFiles
_cacheHit
_cachedPrimaryICloudAccount
_cachedVIPEmailAddresses
_calendarObservers
_calendarUsageLast2Weeks
_callBlockWithEKEventStoreForReading
_callCalendarObservers:contactsObservers:remindersObservers:withEntry:
_callJSFunction:withArguments:
_callback
_callbackQueue
_canBannerUseStoredDissection:options:
_canaryHash
_cancelEKEvent:ekStore:error:
_cancelled
_candidateNameRange
_carrierCodesByName
_carrierNames
_carrierUpdateCodesByName
_carrierUpdateNames
_category
_categoryType
_characterMapping
_characterSet
_ckErrorForId:inError:
_cks
_cksGetter
_classKey
_classificationOfflineRecall
_classificationThreshold
_classifierCache
_clearBucketForColumn:
_clearBucketForColumn:usingDatabase:
_clearExistingHtml
_clearKVStoreUsingDatabase:
_clearPendingJobs
_clearRegexCache
_clearSignatureStatsTableUsingDatabase:
_clearSubModelsTablesUsingDatabase:
_clientName
_cnToSGContactsCachePendingUpdateRequests
_columnFromDate:
_columnsToZero
_commitDomainsAndCounts:toColumn:
_commitNaiveBayesModel:probabilityFeatureName:updateDate:usingDatabase:
_compareContact:cnContact:newDetails:matchedDetails:matchPreference:stopOnNewDetail:stopOnMatchedDetail:
_compiledRegexes2
_componentName
_components
_computeBlobsRaw:
_computePseudoContactContentHash:contactDetails:
_concurrencyBehavior
_cond
_confidence
_confidenceMapper
_confidenceThreshold
_confirmReminderByRecordId:completion:
_confirmationOptional
_connection
_consumeContentParts:title:fromHandle:documentDate:isOutgoingDocument:uniqueIdentifier:domainIdentifier:bundleIdentifier:context:
_contact
_contactDetail
_contactForMasterEntityId:withSnippets:filterConfirmRejectDetails:
_contactIdForInteractionContactIdentifierMatch:
_contactIdentifier
_contactIdsForContactDetailMatches:detailContactIds:socialProfileContactIds:
_contactIdsForContactNameMatches:strongNameIds:weakNameIds:
_contactInformationExtracted
_contactNames
_contactStore
_contacts
_contactsForMasterEntityIds:withSnippets:
_contactsObservers
_container
_content
_contentHash
_contentProtection
_contentRangeOfInterest
_contentWriteEnrichmentToDb:
_contents
_context
_contextRange
_contextRangeOfInterest
_conversationAge
_conversationIdentifier
_conversationProbability
_conversationStats
_conversationTracker
_conversations
_core
_coreNLPTokenizer
_coreNLPTrustedLanguages
_coreRange
_correct
_count
_count128KBTo512KB
_count32KBTo128KB
_count512KBTo2MB
_countOver2MB
_countPtr
_countUpTo8KB
_coupleOperationTrainWithStart:end:
_cpu
_cpuStart
_crLookup
_createEmptyFileAtPath:
_createEnrichmentsForDetections:entity:
_createEntityFTSTableWithName:
_createOrReuseNLPTagger
_createRTCReporting
_createUserActivityStringsWithOptions:completionHandler:
_createZoneError
_creationTimestamp
_crossPlatformUnifiedMeContactWithKeysToFetch:error:
_ctsCriteriaState
_ctsJobConstraints
_ctsManager
_cumulatedSubmodelsRollbackForPostDeletionPolicyPerformanceInMilliSeconds
_curated
_currentAllowedMessageCount
_currentFile
_currentTasks
_customResponsesAfterPruning
_data
_dataDetector
_dataDetectorAdditions
_dataDetectorMappedAdditions
_dataDetectorMatches
_dataDetectorMatchesWithSignatureForContentCached
_dataDetectorsSignatureForTesting
_database
_date
_dateFormatter
_dateFromColumn:
_dateIsCorrect
_dateMapping
_dateRangeIsSubsetOfHistoricalDataRequest:
_daysAvailableDuringIncrementalUpdate
_daysProcessedDuringIncrementalUpdate
_dbGetter
_dbIsMigrated
_ddTrustedLanguages
_dead
_deadline
_deallocNotifications
_dedupeGenericContactDetails:
_dedupePostalAddresses:
_deepCopy:
_deepMutableContainersCopy:
_defaultConfig
_defaultTimeIntervalToEndWarningExposition
_defaultTimeIntervalToStartWarningExposition
_delayedResetCachesAndModels
_deleteAllSyncedItemsCallback
_deleteChildEntitiesByRecordIdsInTable:
_deleteContactDetailsByRecordIds:
_deleteDomainIds
_deleteEntitiesByDuplicateKeyNoRecurse:
_deleteEventsByRecordIds:
_deleteIfNoSpotlightReferences:addToRecentlyDeletedCache:
_deleteInteractionBundleIdDropbox
_deleteInteractionGroupIdDropbox
_deleteInteractionIdDropbox
_deleteMessageMetadataByDuplicateKeyNoRecurse:
_deleteNaiveBayesModelForProbabilityFeatureName:usingDatabase:
_deleteOldInteractionContactDetails:currentIdentifiers:
_deleteOrphanedItems
_deleteReminder:usingReminderStore:
_deleteRemindersByRecordIds:
_deleteTokensForDeletedEmailAddresses:usingDatabase:
_deleteUniqueIds
_deleteZoneError
_deletedEmailsCount
_deletedTokensCountToComplyToCappingPolicy
_deliveries
_deltaSyncContactsWithChangeHistory:
_departureAirportDescription
_deploymentId
_derefChildrenOf:
_descriptionForActionType:
_descriptionForBundleId:
_descriptionForExtractionStatus:
_descriptionForInterface:
_descriptionForMessageEventDissectorExtractionStatus:
_deserializeDateComponents:
_deserializeRange:
_detectContactNames:
_detectNLPNames:
_detectNames:withNameSet:
_detectedData
_detectedDate
_detectedEndDate
_detectedEndTimeZone
_detectedReminderEnrichmentFromReminderMessage:parentEntity:language:parentMessage:startTimeProcessing:
_detectedTimeZone
_detectionsInPlainText:withEligibleRegions:ddSignature:baseDate:
_detectors
_deviceStateToken
_didRegexTrigger
_didResponseKitTrigger
_diffSchemas:withExpectedSchemas:
_directoryPath
_dirtyLock
_dirtyTransaction
_disabledBecauseOutOfDateSoftware
_displayName
_dissectEntity:inContext:andThen:
_dissectMessage:entity:
_dissectOperations:block:
_dissectOperations:inContext:
_dissectorConfig
_dissectorLock
_dissectorsAndDependencies
_dkimVerifier
_document
_documentSourceForBundleId:
_domainFromSenderAge
_domainFromSenderProbability
_domainFromSenderStats
_domainId
_domainIdentifier
_domainSegmentCount:
_done
_dropBox
_dropColumn:
_dueStorageLocation
_dumpTable:columns:limitTo:
_duplicateEventKey
_duplicateKey
_duplicateKeysWithZeroSpotlightReferencesFromRecordIds:
_duration
_durationStart
_dynamicLabelContentForReply:prompt:language:
_effectiveLockState
_ekStoreProvider
_email
_emailContentCacheSalt
_emailDaemon
_emailLanguage
_emailMapping
_emailToCanonicalEmailCache
_emitChangeNotificationForEnrichment:
_emitChangeNotifications:
_end
_endDate
_endInDaysAgo
_endUTCOffsetSeconds
_engineConfig
_enqueueBatchOfCNContactIds:
_enrichedTaggedCharacterRanges
_enrichmentWritebackAdapter
_enrichmentWritebackVersionKey
_enrichments
_ensureHtmlIsString:
_entityKey
_entityMigrationRequiresMergeBlobUpdate
_entityMigrations
_entityStore
_entityType
_entityVersion
_enumerateContactsForMasterEntityIds:withSnippets:filterConfirmRejectDetails:usingBlock:
_enumerateContactsForMasterEntityIds:withSnippets:usingBlock:
_enumerateMatchesInUtf8:fromString:ngroups:block:
_error
_errorCode
_escapedSQLIdentifier:
_estimatedGroundTruth
_event
_eventBatch
_eventBatchOperationSupportedForEntries:
_eventClassificationForEntity:
_eventClassifierModel
_eventExtractionDictionaryLogForTemplateName:extractionStatus:outputExceptions:outputInfos:jsMessageLogs:jsOutputLogs:timingProcessing:
_eventKeyforReminder:
_eventsAssociatedWithStorageEvent:store:
_eventsWereRemovedFromEventKit
_exceptionTemplates
_executeBoxTasks:
_executeJournals
_executeReimportOfIdentifiers:
_exitCode
_experimentId
_externalEnrichments
_externalId
_externalIdentifier
_extraKey
_extractEmailishTokenFromMailHeader:
_extractedReminderDuplicateKey
_extraction
_extractionModelVersion
_extractionSignatureSource
_familyName
_fastCStringContents:
_fastCharacterContents
_featureDict
_featureName
_featureNameForString:
_featureNames
_featureType
_features
_featuresForDatabase:
_featurizer
_fetchContactNamesToLimit:
_fetchContactNamesToLimit:peopleSuggester:
_fieldValuesClassWhitelist
_fileData
_filename
_filledWithInformationRetrievedThroughMaild
_filterCandidates:similarToName:exceedingThreshold:
_filterOutAllButAcceptedWithUpdatedFields:
_filterOutCancelledEvents:
_filterOutOlderVersionsOfPseudoEvents:
_filterWithAddressBook
_findContactsMatchingPseudoContact:withName:andFeatures:fromContactStore:withKeysToFetch:
_findFuzzyNameCandidatesMatchingPseudoContact:withName:andFeatures:fromContactStore:withKeysToFetch:
_firstAppLaunchFollowingFetch
_firstname
_flagsForBundleIdentifier:documentDate:documentTimeInterval:isOutgoingDocument:
_flightDataOffsets
_flightUpdateDataOffsets
_flightno
_flightsFh
_flightsUpdateFh
_floating
_flushExternalEnrichments
_followUpOnIncomingMails
_followUpOnIncomingMailsDetectionRegexes
_followUpOnOutgoingMailsAsks
_followUpOnOutgoingMailsAsksDetectionRegexes
_followUpOnOutgoingMailsQuestions
_followUpOnOutgoingMailsQuestionsDetectionRegexes
_followUpWarningsParameters
_forNameDetector
_formattedName
_forwardDraftStarted
_foundIn
_foundInMailNotifications
_foundInSenderCNContact
_foundMatchingElement
_from
_fromStatus
_fromSuggestTool
_fullDownloadRequested
_fullSyncContactsWithStore:
_geocodeLock
_getFlightReferencesAndReservationId:
_getListener:
_getListenerByClassMap
_getPeopleWithNameToken:fromContactStore:withKeysToFetch:ifMatchingPredicate:
_getSGMIStoredAddressesUsingDatabase:
_getterForProperty:
_givenName
_groundTruthEstimatorFeatures
_groundTruthEstimatorRules
_groupId
_guardedData
_handleDeviceLockStateEvent:
_handleMemoryPressureStatus:
_handle_SQLITE_ABORT:onError:
_handle_SQLITE_ABORT_ROLLBACK:onError:
_handle_SQLITE_AUTH:onError:
_handle_SQLITE_AUTH_USER:onError:
_handle_SQLITE_BUSY:onError:
_handle_SQLITE_BUSY_RECOVERY:onError:
_handle_SQLITE_BUSY_SNAPSHOT:onError:
_handle_SQLITE_CANTOPEN:onError:
_handle_SQLITE_CANTOPEN_CONVPATH:onError:
_handle_SQLITE_CANTOPEN_FULLPATH:onError:
_handle_SQLITE_CANTOPEN_ISDIR:onError:
_handle_SQLITE_CANTOPEN_NOTEMPDIR:onError:
_handle_SQLITE_CONSTRAINT:onError:
_handle_SQLITE_CONSTRAINT_CHECK:onError:
_handle_SQLITE_CONSTRAINT_COMMITHOOK:onError:
_handle_SQLITE_CONSTRAINT_FOREIGNKEY:onError:
_handle_SQLITE_CONSTRAINT_FUNCTION:onError:
_handle_SQLITE_CONSTRAINT_NOTNULL:onError:
_handle_SQLITE_CONSTRAINT_PRIMARYKEY:onError:
_handle_SQLITE_CONSTRAINT_ROWID:onError:
_handle_SQLITE_CONSTRAINT_TRIGGER:onError:
_handle_SQLITE_CONSTRAINT_UNIQUE:onError:
_handle_SQLITE_CONSTRAINT_VTAB:onError:
_handle_SQLITE_CORRUPT_VTAB:onError:
_handle_SQLITE_EMPTY:onError:
_handle_SQLITE_ERROR:onError:
_handle_SQLITE_FORMAT:onError:
_handle_SQLITE_FULL:onError:
_handle_SQLITE_INTERNAL:onError:
_handle_SQLITE_INTERRUPT:onError:
_handle_SQLITE_IOERR:onError:
_handle_SQLITE_IOERR_ACCESS:onError:
_handle_SQLITE_IOERR_AUTH:onError:
_handle_SQLITE_IOERR_BLOCKED:onError:
_handle_SQLITE_IOERR_CHECKRESERVEDLOCK:onError:
_handle_SQLITE_IOERR_CLOSE:onError:
_handle_SQLITE_IOERR_CONVPATH:onError:
_handle_SQLITE_IOERR_DELETE:onError:
_handle_SQLITE_IOERR_DELETE_NOENT:onError:
_handle_SQLITE_IOERR_DIR_CLOSE:onError:
_handle_SQLITE_IOERR_DIR_FSYNC:onError:
_handle_SQLITE_IOERR_FSTAT:onError:
_handle_SQLITE_IOERR_FSYNC:onError:
_handle_SQLITE_IOERR_GETTEMPPATH:onError:
_handle_SQLITE_IOERR_LOCK:onError:
_handle_SQLITE_IOERR_MMAP:onError:
_handle_SQLITE_IOERR_NOMEM:onError:
_handle_SQLITE_IOERR_RDLOCK:onError:
_handle_SQLITE_IOERR_READ:onError:
_handle_SQLITE_IOERR_SEEK:onError:
_handle_SQLITE_IOERR_SHMLOCK:onError:
_handle_SQLITE_IOERR_SHMMAP:onError:
_handle_SQLITE_IOERR_SHMOPEN:onError:
_handle_SQLITE_IOERR_SHMSIZE:onError:
_handle_SQLITE_IOERR_SHORT_READ:onError:
_handle_SQLITE_IOERR_TRUNCATE:onError:
_handle_SQLITE_IOERR_UNLOCK:onError:
_handle_SQLITE_IOERR_VNODE:onError:
_handle_SQLITE_IOERR_WRITE:onError:
_handle_SQLITE_LOCKED:onError:
_handle_SQLITE_LOCKED_SHAREDCACHE:onError:
_handle_SQLITE_MISMATCH:onError:
_handle_SQLITE_MISUSE:onError:
_handle_SQLITE_NOLFS:onError:
_handle_SQLITE_NOMEM:onError:
_handle_SQLITE_NOTADB:onError:
_handle_SQLITE_NOTFOUND:onError:
_handle_SQLITE_NOTICE:onError:
_handle_SQLITE_NOTICE_RECOVER_ROLLBACK:onError:
_handle_SQLITE_NOTICE_RECOVER_WAL:onError:
_handle_SQLITE_PERM:onError:
_handle_SQLITE_PROTOCOL:onError:
_handle_SQLITE_RANGE:onError:
_handle_SQLITE_READONLY:onError:
_handle_SQLITE_READONLY_CANTLOCK:onError:
_handle_SQLITE_READONLY_DBMOVED:onError:
_handle_SQLITE_READONLY_RECOVERY:onError:
_handle_SQLITE_READONLY_ROLLBACK:onError:
_handle_SQLITE_SCHEMA:onError:
_handle_SQLITE_TOOBIG:onError:
_handle_SQLITE_WARNING_AUTOINDEX:onError:
_handle_UNKNOWN_ERROR:onError:
_handle_sqlite_error_code:error:onError:
_handler
_handlerLock
_handlers
_harvestCostMetrics
_harvestEmail:
_harvestPeopleFromInteractions:bundleId:
_harvestPerson:handle:suggestionType:bundleId:
_harvestPhoneNumber:
_harvestSocialProfile:handle:bundleId:
_harvestSource
_harvestStore
_harvestedOnBattery
_has
_hasColumn:
_hasDeferredSync
_hasHashedMessageId
_hasHumanHeadersCached
_hasInhumanHeaders
_hasName
_hasPhoneLabel
_hasSubscription
_hashAttachedPseudoContacts:
_hashWithDuplicateKeysMatchingTags:
_hashesForConfirmedField:value:storageEvent:forMatching:
_head
_headers
_healthStore
_helperLock
_highPriority
_highlyDiscriminantTokensForFeature:minCount:minRatio:domains:limit:usingDatabase:
_historicalDataRequests
_history
_hmmTrustedLanguages
_hoursSinceLastIncrementalUpdate
_hoursSinceReference
_html
_htmlBody
_htmlContentData
_htmlContentDataCached
_htmlIds
_htmlParser
_identifyComposeWarningsFromSubject:content:toRecipients:ccRecipients:bccRecipients:originalToRecipients:originalCcRecipients:attachments:language:store:disableConservativeCheckRequirement:
_identityKey
_identityStoreDirty
_ignorablePredictedAsIgnorable
_ignorablePredictedAsNeutral
_ignorablePredictedAsSalient
_ignoreAfter
_ignoreDataDetectorsForTesting
_impl
_inMemory
_inProgressCreateZoneOperation
_inProgressDeleteZoneOperation
_inProgressFetchNewEntitiesOperation
_inReplyTo
_incomingMessage
_indexSetForOutputNameLabel
_inferredDate
_inhumanFeatures
_init
_initWithInteractionIdentifier:fromBundleIdentifier:creationTime:
_initWithUserActivityStrings:secondaryString:optionalData:
_initializeDatabaseNolock:withProtection:sharedLock:newDatabaseCreated:
_inputMapping
_inputTokenMapping
_instantMessageAddresses
_intentResponseUserActivityString
_interaction
_interactionAttributesForEntity:parentEntity:
_interactionAttributesForRealtimeEvent:parentEntity:
_interactionAttributesForTags:parentEntity:
_interactionBundleId
_interactionDictionaryForDueLocation:dueDateComponents:
_interactionGroupId
_interactionId
_interactionIdentifier
_interactionInfo
_interactionSummaryForReminder:interface:actionType:
_interactionTeamId
_interactionsWriteQueue
_internalDetectedDetails
_invalidatedIdentifiers
_invalidatedMessageIdentifiers
_isASCII
_isBlobAnalysisQueueEmpty
_isClosed
_isContactInteresting:emailEntity:enrichments:hasContactCard:
_isDNUOnlyEnablement
_isDownloadedLocally
_isEKEventFromNLEventsCalendar:ekStore:
_isEKEventFromSuggestedCalendar:ekStore:
_isEligibleEvent:
_isEnabled
_isEphemeral
_isFirstPerson
_isFromCongratulation
_isIdentityStoreDirty
_isImageAttachment:
_isInhumanContentCached
_isInhumanEmailAddressPatternMatch:
_isInhumanSenderCached
_isLogged
_isMeContact:withContactStore:
_isNegativeExample
_isPartiallyDownloaded
_isPositiveExample
_isPotentialEventMessage
_isSharingSenderLocation:senderName:
_isStoredEncrypted
_isStringInNoContactsCache:
_isSubmodelRebuilt
_isThirdPerson
_isTrivial
_isUnlikelyPhone
_issueCommand:
_issueCommand:completionHandler:
_itemProps
_itemRef
_itemScopes
_itemType
_itemValue
_items
_joinIncompleteIdentityEmailWithOthersOfItsIlk:name:recordId:
_joinIncompleteIdentityPhonesWithOthersOfTheirIlk:name:recordId:
_joinIncompleteIdentitySocialProfilesWithOthersOfTheirIlk:name:recordId:
_journal
_journalEntryFromEntity:
_journalEntryFromReminderEntity:
_journalPath
_journalQueue
_journaling
_jsContext
_jsMessageLogs
_jsVM
_keepRealtimeAsLost
_key
_keyForField:
_kvStoreIdentifier
_kvoHandler
_label
_labelIdentityBlobs:
_labelRange
_labelString
_labelTokenIndexesForOutputName:label:
_lang
_langResolutionOrder
_language
_lastAddressEndPos
_lastAddressIndex
_lastBusyWaitEnded
_lastCriteria
_lastFrontfillFinishTime
_lastModifiedTimestamp
_lastResult
_lastSuggestionsFromMessageRequest
_lastSuggestionsFromMessageResponse
_lastWindowStartTime
_latitude
_lazyCheckMessageForHumanness
_lazyEKStoreLock
_lazySnippetsContent
_len
_lengthsCounts
_lexiconTokenForToken:inLexicon:
_limit
_linkClicked
_linkMapping
_linkNamelessEmailsIfAppropriate:nameToVertex:disjointSets:edges:
_linkNamelessPhonesIfAppropriate:nameToVertex:disjointSets:edges:
_linkNamelessSocialProfilesIfAppropriate:nameToVertex:disjointSets:edges:
_listIdProbability
_listIdStats
_liveObserversMap
_loadDataDetectorAdditionDict:
_loadIdentityBlobs
_loadMessageByKey:
_loadReimportRequestsWithWhereClause:
_loadedSem
_localLanguageVersion
_localTraining
_localeIdentifier
_location
_locationType
_locations
_lock
_lockStateNotificationRegistrationToken
_lockStateRegistration
_log
_logCallInteractions:
_logConfirmPercentWithConfirmCount:rejectCount:domain:suffix:
_logDeliverySenderForSenderDomain:
_logReminderTitleSequence:recorderKey:
_logReminderTitleUnknownTokens:recorderKey:
_logSelfIDForMessage:detection:modelType:modelVersion:
_logUniqueEnrichments:
_loggableTitleSequence:withMask:
_loggableUnknownTokenSequence:withMask:
_loggedExtractions
_loggedInteractions
_loggedInteractionsSummary
_longitude
_lostMessageOverflow
_mailAttachmentHistograms
_mailConversationIdentifier
_mailCount
_mailMessage
_mailboxIdentifiers
_mailboxProbability
_mailboxStats
_mailboxTypeProbability
_mailboxTypeStats
_mailingList
_mailsProcessedDuringIncrementalUpdate
_makeAlnum:
_makeBlobsFromConnectedComponents:edges:
_makeEmptyBox
_makeSimplifiedListIdEmail:
_manager
_mapToPseudoEvents:
_mappings
_mapsUsageLast2Weeks
_markIdentityStoreClean
_markIdentityStoreDirty
_markRecordsLostIfNoSpotlightReferences:
_markedAsJunk
_markedAsRead
_mask
_match
_matchDate
_matchType
_matchableUTF8TokenRangesInMatchExpression:
_matches
_matchingContacts
_maxDistance
_maybeFormatString
_meContact
_mean
_memoryMappedFileNames
_memoryMappedFiles
_memoryPressureQueue
_memoryPressureSource
_mergeColumn:intoColumn:
_mergeSchemas:withExpectedSchemas:
_message
_messageFetchTime
_messageHarvestQueue
_messageId
_messageInhumannessChecked
_messageRecipients
_messageSubjectDetectedDataCached
_messageViewCount
_messageViewMaxDwellTime
_messageViewTotalDwellTime
_messages
_messagesBannerLimit
_metadata
_middlename
_migrator
_minCountToConsiderATokenAsExtremelyDiscriminant
_minCountToConsiderATokenAsHighlyDiscriminant
_minEntityIdFromMinEntityId:withContactIdentifiers:
_minimumConfidence
_missingAttachmentPredictionPerformanceInMilliSeconds
_missingAttachments
_missingRecipientPredictionPerformanceInMilliSeconds
_missingRecipients
_mlQR
_mode
_model
_modelClass
_modelDirectoryPathCreateIfNeeded:
_modelFeatureNames
_modelFeatureStandardizationMeans
_modelFeatureStandardizationStandardDeviations
_modelGroundTruthFeatureLowerBounds
_modelGroundTruthFeatureNames
_modelGroundTruthFeatureUpperBounds
_modelGroundTruthOutputs
_modelGroundTruthVersion
_modelInferenceVersion
_modelNameForCurrentEnrollment
_modelNameForExperimentId:treatmentId:deploymentId:
_modelOutput
_modelPath
_modelPathForExperimentId:treatmentId:deploymentId:createIfNeeded:
_modelSource
_modelVersion
_modelsAvailabeForMode:objective:language:
_mostCommonCountryCode
_mruCarrierEntry
_naiveBayesModelQueryResultForFeature:unigramTokens:bigramTokens:usingDatabase:
_naiveDateFormatter
_name
_nameMappings
_nameTagging
_namespaceName
_nbCharactersInMailSubject
_nbExtremelyDiscriminantTokensForIgnorability
_nbExtremelyDiscriminantTokensForSaliency
_nbHighlyDiscriminantTokensForIgnorability
_nbHighlyDiscriminantTokensForSaliency
_nbTokensInMailSubject
_needsFlushing
_needsSourceVerification
_negativeEngagement
_neutralPredictedAsIgnorable
_neutralPredictedAsNeutral
_neutralPredictedAsSalient
_newEKEventStoreGetter
_nickname
_nicknameCustomKey
_nicknameDetectionRegexes
_nicks
_noCloudFakeBackingKVStore
_noCoreNLPTokenizer
_noEngagement
_noTimeFormatter
_normalizedValue
_notificationCenterToken
_notificationQueue
_nrpns
_numberArrayValue
_numberOfLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
_numberOfLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
_numberOfMailsViewedBeforeSinceAvailable
_numberOfMoreRecentUnreadMessageAtFirstViewTime
_numberOfPredictedAttachmentOnLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
_numberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
_numberOfUnreadMessageAtFirstViewTime
_numberValue
_observersFrozen
_offsetInFile
_opQueue
_operatingSystemVersion
_operation
_operationsToAddToOpQueue
_optimizeAndAddCNContactIdentifier:
_optimizedBuffer
_otherDetailsWithNoContact
_outcome
_outputConfig
_outputItems
_outputMapping
_outstanding
_overrideDataDetectorSignatureForTesting
_pagesToVacuum
_paragraphWithContent:range:exceedsLineLimit:orCharacterLimit:
_parentDomainsForDomain:
_parentEntityType
_parentKey
_parentMessagesLimit
_parsecDomain
_parsecWikidataQid
_partialDate
_pas_componentsJoinedByString:
_pas_enumerateChunksOfSize:usingBlock:
_pas_filteredArrayWithIndexedTest:
_pas_filteredArrayWithTest:
_pas_leftFoldWithInitialObject:accumulate:
_pas_mappedArrayWithIndexedTransform:
_pas_mappedArrayWithTransform:
_pas_mappedSetWithTransform:
_pas_proxyArrayByAppendingArray:
_pas_proxyArrayReversed
_pas_proxyArrayUsingObjectAtIndexBlock:andCountBlock:
_pas_proxyArrayWithMapping:
_pas_proxyComponentsJoinedByString:
_pas_proxyStringByConcatenatingStrings:
_pas_retainsConmingledBackingStore
_pas_shuffledArrayUsingRng:
_pas_stringBackedByUTF8CString
_pas_stringWithDataNoCopy:encoding:nullTerminated:
_pas_unproxy
_path
_pattern
_patternData
_payloadOffset
_pendingMerge
_pendingProcessStateChanges
_pendingVerification
_peopleFromInteraction:
_perMessageTranformer
_performAction:onContactDetailRecord:confirmRejectUI:completion:
_performAction:onRecord:confirmRejectUI:completion:
_performAction:onRecord:withParentConfirmation:confirmRejectUI:completion:
_performCollectWeeklyStats:
_performHarvestedURLMetricUploadAcitivity:
_performIdentityAnalysisActivity:
_performMailIntelligenceTasksActivity:
_performMobileAssetMetadataDownloadActivity:
_performProcessPendingGeocodesActivity:
_performProcessPendingVerificationActivity:overrideVerificationStatus:
_performSendRTCActivity:
_performTrimActivity:
_performVacuumActivity
_persistenceTimerSource
_personCCRecipientsAge
_personCCRecipientsProbability
_personCCRecipientsStats
_personForCSPerson:
_personFromSenderAge
_personFromSenderInDyadicConversationAge
_personFromSenderInDyadicConversationProbability
_personFromSenderInDyadicConversationStats
_personFromSenderProbability
_personFromSenderStats
_personHandle
_personToRecipientsAge
_personToRecipientsProbability
_personToRecipientsStats
_personalNameMapping
_pet2Tracker
_phoneMapping
_phoneNumber
_phoneNumbers
_phonesSeenInContacts
_photoPath
_photoPathCustomKey
_plainText
_plainTextDetectedData
_plainTextSigRange
_pluginIdentifier
_plugins
_pmlTraining
_popBatchOfCNContactIds
_popMergeBlobForAnalysis
_popQueuedSerializedContactId
_pos
_positiveEngagement
_postalAddressComponents
_postalAddresses
_precomputationQueue
_predictedMissingElementScore
_predictedSaliency
_predictedSaliencyScore
_preferredUniqueIdentifier
_prefilter
_prematchedContactIdentifiers
_prepAndRunQuery:columns:dictionary:onError:
_prepQuery:onPrep:onError:
_prepareArguments:
_prepareToCopyFrom:toNewTableNamed:
_previousInteractionFromUserOnConversationInMinutes
_previousInteractionOnConversationInMinutes
_primaryICloudCalendarAccount
_privFullName
_privacyAwareLogsForMLExtractions:
_privacySaltFuture
_privateGroupsCount
_probablePriorPredictionInContext:predictedLabel:
_processBatchOfSerializedContactJobs
_processContactMatchWithContacts:matches:limit:masterEntityId:detailEntityId:contactEntityId:matchinfoData:tokens:requireName:
_processHistoricalDataRequestsForPluginIdentifier:result:
_processMessage:pipeline:context:harvestMetrics:
_processReservationInteractions:bundleId:completion:
_processSearchableItem:harvestMetrics:userAction:
_processingStateChanges
_procureSaltError
_profiles
_propertyName
_protectionClasses
_provider
_providerName
_prunePseudoContactGeneratingEmails:
_punctuationMapping
_purgeAndDeleteIdentifiersDropbox
_purgeDeletionDropBox
_purgeTokensWhichLastUpdateWasBefore:shouldContinue:usingDatabase:
_purgeableNLTaggerWithNameTagging:
_purgeableNSLinguisticTaggerWithTagSchemes:
_pushValuesForContact:usingDomain:subdomain:type:action:extraSignature:
_quality
_queryForAllContactsWithLimit
_queue
_queuedOperations
_quotedRegionsCached
_range
_rankSGContacts:bySimilarityToContact:
_ratioToConsiderATokenAsExtremelyDiscriminant
_ratioToConsiderATokenAsHighlyDiscriminant
_readCurrentColumnsUncached
_readyForNewEntities
_realtimeContactFromPseudoContact:andFeatures:assimilatingMatchingCuratedContacts:
_realtimeContactWithContactStore:forPseudoContact:fromEntity:normalizedName:error:
_receivedOnBattery
_recentlyDeletedEmailKeys
_recentlyHarvestedDetailLock
_recipient
_recipientConservative
_recipientConservativeDetectionRegexes
_recipientDetectionRegexes
_recipients
_recordConversationTurnWithDetail:received:throughApp:withStore:
_recordExtractionEventFromSource:foundInSignature:isDDSignature:detailType:outcome:foundInCNContact:modelVersion:isUnlikelyPhone:sigSource:
_recordExtractionOutcome:detailType:fromMessage:foundInSignature:isDDSignature:detailType:detailValue:modelVersion:isUnlikelyPhone:
_recordId
_recordIdsFromRemovingSpotlightReferencesWithBundleIdentifier:uniqueIdentifiers:
_recordPseudoContactsWithDeletedDetailsInTable:deletedChildrenTable:
_recreateCorruptDatabase:sharedLock:withProtection:
_recycleColumn:asColumn:
_regexBelongsToSender
_regexDoesNotBelongToSender
_regexLanguage
_registerForCTSIdentityAnalysisActivity
_registerForCTSSendRTCActivity
_registerForCTSTrimActivity
_registerForCTSVacuumActivity
_registerForCollectWeeklyStats
_registerForContactDetailCacheRebuildActivity
_registerForLockStateChange
_registerHarvestedURLMetricUploadActivity
_registerMailIntelligenceTasksActivity
_registerMobileAssetMetadataDownloadActivity
_registerProcessPendingGeocodesActivity
_registerProcessPendingVerificationActivity
_registered
_regularCount
_reimportFromBundleId:protectionClasses:identifiers:
_reimportQueryForPersonHandle:startDate:endDate:requestId:
_rejectReminderByRecordId:completion:
_remRemindersAssociatedWithStorageReminder:remStore:
_remRemindersAssociatedWithTitle:sourceUniqueIdentifier:usingStore:
_reminder
_reminderEnrichmentWithTitle:dueDateComponents:dueLocationType:dueLocation:dueLocationTrigger:sourceURL:reminderStatus:parentEntity:parentMessage:allDay:
_reminderEnrichments
_reminderInputMapping
_reminderMessageForTextMessage:withEntity:extractionModel:processingLanguage:preprocessing:
_reminderOutputMapping
_reminderOverrides
_reminderStore
_reminders
_remindersFoundInAppsListInREMStore:
_remindersObservers
_removeColumnFromTotal:
_removeCorruptionMarker
_removeEKEvent:store:commit:
_removeEvent:commit:
_removeSnippetsForEmails:
_removeUnwantedContactDetails:entity:
_renameTable:to:
_replyDraftStarted
_replyTo
_reportDbStatsBackground
_requestId
_requestedFetchNewEntitiesWhileRequestAlreadyInFlight
_reservationContainerReference
_reservationItemReferences
_resetCachesAndModels
_resolveCandidatesForJSDict:
_result:containsTypes:
_result:containsTypes:foundTypes:
_reverseTemplateJSNoXPC
_rng
_rollbackedEmailsCountToComplyToPostDeletionPolicy
_rollbackedSlicesCountToComplyToPostDeletionPolicy
_rolloutIdentifiers
_rotateIfNecessary
_rpns
_rtRoutineManager
_runInitMigrationTasks:noMigrate:
_runJournal
_runWithEKEventStore:
_saliencyOverrideFeatureLowerBounds
_saliencyOverrideFeatureNames
_saliencyOverrideFeatureUpperBounds
_saliencyOverrideOutputs
_saliencyOverrideRules
_saliencyPredictionPerformanceInMilliSeconds
_salientCount
_salientPredictedAsIgnorable
_salientPredictedAsNeutral
_salientPredictedAsSalient
_salt
_saltAtomicReferenceId
_saltUsesManatee
_saveReminder:usingReminderStore:
_scanners
_schemaOrg
_schemaVersion
_scoreContactDetail:
_scoreSGContact:bySimilarityToContact:cnContactFullname:
_scrolledToEnd
_selectingDomainsForDomainIdentifier:
_sendChatChangedNotificationWithDomainIdentifier:
_senderConnectionScore
_senderDisplayName
_senderID
_senderIsAccountOwner
_senderIsBusinessChat
_serialNumber
_serialQueue
_serializeRange:
_serialized
_serializedContactsLimit
_service
_sessionDescriptor
_setAVFoundationEnabled:
_setAllowUniversalAccessFromFileURLs:
_setAllowsJavaScriptMarkup:
_setDOMPasteAllowed:
_setEnabledTopics:
_setHashes:forKey:
_setInteraction:donate:
_setInternalStateAccordingToKVS:
_setJavaScriptCanAccessClipboard:
_setLegacyEncryptedMediaAPIEnabled:
_setLoadsImagesAutomatically:
_setMediaDevicesEnabled:
_setPeerConnectionEnabled:
_setRemotePlaybackEnabled:
_setScreenCaptureEnabled:
_setShouldEnableTextAutosizingBoost:
_setStorageBlockingPolicy:
_setTextAutosizingEnabled:
_setTrieFromPath:guardedData:
_setWebAudioEnabled:
_setterForProperty:
_settingsChangeToken
_setupHistoryObserver:
_sgDb
_sgToCNContactsCacheUpdateAdapter
_sg_fetchEKEventsForPseudoNLEvent:title:participants:
_sgmiFeatureStore
_sharedInstanceConfigurationQueue
_sharedWriteLock
_sharedWriterLock
_shouldContinueReindex:
_shouldDissectContentWithUniqueIdentifier:domainIdentifier:bundleIdentifier:headers:accountIdentifier:
_shouldProcessMessage:entity:
_shouldProcessSearchableItem:
_shouldSampleMessage
_showInFormatStringWithLocalization:
_signature
_signatureStatsLogging
_significantWork
_signpostId
_simpleCandidateForOutputName:label:withError:
_size
_sizeFactor
_slowCopyFromTable:toTable:startingAtEntityId:
_snippetDb
_snippetDbPath
_snippetsJournal
_snippetsMigrations
_snippetsVersion
_socialProfile
_socialProfileIdentifiers
_sourceKey
_spotlightContactsAdapter
_spotlightIdentifier
_spotlightReindexCount
_spotlightReindexQueue
_spotlightUidsForAppleMailMessageIds:
_stackItem
_standardMailRulesProbability
_standardMailRulesStats
_start
_startDate
_startUTCOffsetSeconds
_state
_stats
_std
_store
_storeAndGeocodeEntity:spotlightBundleIdentifier:spotlightUniqueIdentifier:spotlightDomainIdentifier:store:afterCallbackQueue:finalize:
_storeCreationDate
_str
_strictLowerBound
_strictUpperBound
_stringArrayValue
_stringForFeatureName:
_stringFromMemoryPressureStatus:
_stringValue
_structuredEventInputMapping
_structuredEventOutputMapping
_subModelsStatsWithShouldContinueBlock:usingDatabase:
_subject
_subjectContentAge
_subjectContentProbability
_subjectContentStats
_subjectCountStatsProbability
_subjectCountStatsStats
_submodeledFeature
_submodels
_submodelsProbabilities
_submodelsPruningForCappingPolicyPerformanceInMilliSeconds
_submodelsUpdatePerformanceInMilliSeconds
_subregexps
_suggestionsFromMessage:options:dissectIfNecessary:completionDelivery:completionHandler:
_suggestionsFromSearchableItem:options:dissectIfNecessary:withCompletion:
_supervision
_supportedProviders
_surname
_suspendCount
_syncToken
_tableName
_tableNameEscaped
_tagNaturalLanguageEnrichmentsForEntity:
_taggedCharacterRanges
_taggedCharacterRangesCached
_tags
_tagsLock
_tagsSnapshot
_tail
_targetMapping
_targetString
_taskForActivity:
_tasks
_tellObserversHashesDidChange
_templateName
_templateShortName
_testReminder:entity:
_text
_textConsumers
_textContent
_textContentLanguageIdentifierCached
_textMessage
_threshold
_time
_timeBeforeViewStartSinceAvailable
_timeDifferenceFromReceptionToSaliencyInferenceInSeconds
_timeRange
_timeoutTimer
_timestamp
_title
_titleFromMessagesSynthesizedTextContent:
_toStatus
_tofuRegions:utf8:isAOSPMail:
_token
_tokenToIgnore
_tokenizerInstance
_tokenizerModule
_tombstoneExistsForBundleIdentifier:
_totalNumberOfEmailsProcessedForAttachmentDetectionRoundedToClosestMultipleOf20
_totalNumberOfEmailsProcessedForFollowUpDetectionRoundedToClosestMultipleOf20
_totalNumberOfEmailsProcessedForRecipientDetectionRoundedToClosestMultipleOf20
_totalPayloadSize
_tradToInversionRate
_tradToTrie
_transaction
_transformer
_treatmentId
_triClient
_trialEventClassifierModelPath
_trialEventClassifierThreshold
_trialMessageProcessingLimit
_trialMetadata
_trialRateLimitInterval
_trie
_trigger
_triggerOptional
_trimSerializedContacts
_trustCoreNLP
_type
_unarchiveFrom:to:
_uncompressModelAtPath:toPath:
_unigramQueriedTokensCount
_unigramTokenCounts
_unigramTokensCount
_uniqueGoodDetailMatchFrom:toDetails:nonUnique:
_uniqueId
_uniqueIdentifier
_uniqueIdentifiers
_unlikelyPhoneSamplingRate
_unlocked
_unoptimizedIdentifiers
_unregisterForLockStateChange
_updateEKEvent:withEvent:ekStore:error:
_updateEvent:withValuesFrom:ekStore:
_updateEventMetadataInModifiedEvent:withExistingCheckInShortcutInOriginalEvent:ifTeamIdentifierIsDifferentInStorageEvent:
_updateLocationTypeFromInteractionsSummaryForEventKey:locationType:
_updateQueue
_updateSchemaVersion
_updateSource
_updateTimerIsSet
_updateTimerQueue
_updateTimerSource
_updateURLs:stmt:
_urlContainerFromText:documentDate:documentTitle:handle:isOutgoingDocument:uniqueIdentifier:domainIdentifier:bundleIdentifier:
_urlDissector
_urls
_useCase
_useSpotlightDataForMissingBiomeData
_userReplied
_username
_usesDataProtection
_uuid
_vCardsDirectoryURL
_validateDueDateComponents:dueLocation:forReminderMessages:
_value
_valueRange
_valueString
_verificationLock
_vips
_waitForMigrations
_wasKnownContact
_wasSuggestedContact
_weakStore
_webView
_when
_wildcardsMatches
_windowLength
_withBiomeData
_writeContactDetails:
_writeContactEntityToJournal:
_writeEnrichmentToDb:
_writeEnrichmentToSnippetsDb:
_writeEntityParentageFor:entityId:
_writeEventEntitiesToJournal:
_writeEventEntityToJournal:
_writeFTSTermsForEnrichment:entityId:
_writeJournalCommand:blob:
_writeLabeledBlobs:deletedMasterEntityIds:
_writeMergeBlobSnapshotForAnalysis:
_writeMessageEntityToDb:
_writeMessageEntityToSnippetsDb:
_writeOneEntityToDb:
_writeReminderEntitiesToJournal:
_writeTransactionDepth
_written
_xWrote:utf8:
_xpcActivityManager
_xpcConnection
_zeroColumn:
aa_isAccountClass:
abbreviation
absoluteRange
absoluteString
absoluteTimestamp
accessCriteriaUsingBundleIdentifierBlock:domainSelectionBlock:incontrovertiblyDeletedUniqueIdentifiersBlock:purgedUniqueIdentifiersBlock:
accountHandles
accountIdentifier
accountInfo
accountInfoWithCompletionHandler:
accountProperties
accountStatus
accountType
accountWithIdentifier:
accountsStoreDidChange:
accountsWithAccountTypeIdentifiers:error:
accuracy
acquireDissectorLock
actionVerbOptional
active
activeAggregatedAccuracyLogForThePastFourWeeks
activeAggregatedAccuracyLogSinceModelInitialization
activeTrialMetadata
activityForActivityId:
activityType
add:
addAddressBookObserver:forObjectLifetime:
addAlarmWithTrigger:
addAsync:
addBirthdayEnrichment:
addCNContactIdentifier:
addCalendarObserver:
addCalendarObserver:forObjectLifetime:
addCharactersInRange:
addColumn:
addContact:
addContactsObserver:
addContentAdmissionObserver:
addCreateZoneAttemptOperationWithRetries:
addCreateZoneOperation
addCtsJobConstraints:
addDeallocNotification:
addDeleteAndRecreateZoneOperation
addDeleteZoneAttemptOperationWithRetries:
addDeleteZoneOperation
addDeletion:domainSelection:
addDeletion:uniqueIds:
addDependency:
addDetailsFromOriginatingCalendarEntity:
addDetailsFromOriginatingContactEntity:
addDetailsFromOriginatingGenericEntity:
addDetailsFromOriginatingInteractionEntity:
addDetailsFromOriginatingMessageEntity:
addDetailsFromParticipantsOfEntity:
addDetectedBirthday:forIdentity:context:contextRangeOfInterest:extractionInfo:
addDetectedEmailAddress:forIdentity:context:contextRangeOfInterest:extractionInfo:
addDetectedInstantMessageAddress:forIdentity:context:contextRangeOfInterest:extractionInfo:
addDetectedPhoneNumber:forIdentity:context:contextRangeOfInterest:extractionInfo:
addDetectedPostalAddress:forIdentity:context:contextRangeOfInterest:extractionInfo:
addDetectedSocialProfile:forIdentity:context:contextRangeOfInterest:extractionInfo:
addDetection:forIdentity:extractionInfo:
addDomain:
addDomainsFromSelection:
addEmailAddressEnrichment:
addEnrichment:
addEnrichmentForEvents:forMessage:toEntity:
addEnrichmentForEvents:toEntity:message:context:timingProcessingInMs:
addEnrichmentsToEntityForOutputItems:exceptions:jsMessageLogs:interaction:entity:startTime:backPressureHazard:
addEntries:
addEntriesFromDictionary:
addEntry:
addEvent:
addEvent:commit:
addEvents:
addExternalEnrichment:
addFetchNewEntitiesAttemptOperationWithRetries:
addFetchNewEntitiesOperation
addIndex:
addIndexes:
addIndexesInRange:
addInstantMessageAddressEnrichment:
addInteractionTagsToEnrichment:inEntity:interaction:
addInteractions:bundleID:protectionClass:
addInteractions:bundleId:completion:
addInterdictFrom:with:
addItem:
addItemProp:
addLocations:
addMailAttachmentHistogram:
addManateeSanityCheckOperation
addMessage:
addMissingAttachment:
addMissingRecipient:
addObject:
addObjectsFromArray:
addObserver:forKeyPath:options:context:
addObserver:forObjectLifetime:
addObserver:selector:name:object:
addObserverForName:object:queue:usingBlock:
addOperation
addOperation:
addOperationWithBlock:
addOperations:waitUntilFinished:
addOrReplaceEventEnrichment:
addOrReplacePreferredEnrichment:
addOrUpdateSearchableItems:bundleID:
addParams:toParameterizedString:
addParams:toParameterizedString:allowAlternatives:
addPathToFutureDbSchemas:
addProcureSaltAttemptOperationWithRetries:
addProcureSaltOperation
addProfile:
addPurge:uniqueIds:
addRecipientDetailsFromOriginatingMessageEntity:entity:store:
addReminder:
addReminderWithTitle:toListChangeItem:
addRemindersObserver:
addSchemaAsEnrichment:inMessage:parentEntity:eventClassification:mlDefaultExtraction:
addSearchableItemMetadata:htmlData:completion:
addSearchableItems:completion:
addSessionForTrainingWithSource:label:language:objective:spotlightRef:embeddedFeaturizer:
addSessionWithCovariates:label:sessionDescriptor:spotlightReference:isInternal:
addSnippetIfNotExistsFromContentOfEntity:
addSocialProfileEnrichment:
addSpotlightReferenceToEmailIfFullyDownloaded:withBundleIdentifier:uniqueIdentifier:domainIdentifier:
addSpotlightReferenceToEmailRecordId:withBundleIdentifier:uniqueIdentifier:domainIdentifier:
addStats:
addSubmodelStatsToLog:
addSuggestHistoryObserver:
addTaggedCharacterRanges:
addTextMessageItem:
addUpdateHandlerForNamespaceName:usingBlock:
addUserAction:withItem:
addValueForScalarKeyWithDomain:subdomain:suffix:action:value:
addWriteOperationForRecordGetter:deleteGetter:withRetries:
addWriteOperationForRecordGetter:deleteGetter:withRetries:isFirstTry:
additionalRecipients
address:forIdentity:parent:curated:context:contextRangeOfInterest:extractionInfo:
addressComponentThreshold
addressDictionaryForAddressComponents:
addressDictionaryToString:
addressItemsFromEmailString:
addressMapping
addressTags
addresses
ageOfTheSubmodelInDays
aggregateKeyForKeySuffix:
aggregateSummaryBucketizedLaunchCountForApp:afterDate:
airlineFromFlightSchema:
airportCode
airportCodeForAirportName:flightCarrier:flightNumber:otherKnownFlightsToAirport:outputInfos:
airportCodeForAirportName:flightCarrier:flightNumber:outputInfos:
airportFromAirportSchema:
airportIataCodes
airportIataCodesForDataOffset:
airportNameNoiseKeywords
airportsServicedByCarrier:flightNumber:
airportsServicedByCarrier:flightNumber:withDataOffset:andFileHandle:
allContactsMasterEntityIdsLimitedTo:
allContactsWithEntityType:
allContactsWithSnippets:limitTo:
allContactsWithSnippets:limitTo:withCompletion:
allDay
allDayDateComponentsFromDate:
allDeliveriesWithLimit:
allDeliveriesWithLimit:withCompletion:
allDomains
allEntitiesOfType:limitedTo:
allEntitiesOfType:limitedTo:onlyMLExtractions:
allEventsLimitedTo:withCompletion:
allFeaturePrettyNames
allMessages
allNames
allObjects
allPseudoContacts
allRecipients
allRemindersLimitedTo:
allRemindersLimitedTo:withCompletion:
allVIPEmailAddresses
allVIPWaitForResult
allValues
allocWithZone:
allowAgeBasedPruning
allowAnyDomainForMarkup
allowGeocode
allowMessageEventDissector
allowNaturalLanguageDissector
allowUnverifiedSourceForMarkup
alphanumericCharacterSet
alwaysShowCancelledEvents
analyzeBody:forLanguage:forDate:withCustomTimeRange:
analyzeFeatureVector:
analyzeForFollowUpMailWithBody:isSent:messageId:date:
analyzeIncomingMailFeatureVector:
analyzeMergeBlobs:
analyzeOutgoingMailFeatureVector:
andPredicateDescriptorWithDescriptors:
andPredicateWithSubpredicates:
annotateContent:withLabel:forMatchingString:
annotationMatchingStringsForSubject:
annotationType
annotationTypeFromString:
annotationTypeUniqueIdentifier
anyEmailAddressIsSignificant:
anyHandleIsSignificant:
anyObject
app:performedAction:onContacts:withResult:elapsedTime:
app:performedAction:onEvents:withResult:elapsedTime:
appAsString:
appInFocusStream
appLinksWithURL:limit:includeLinksForCurrentApplication:error:
appendBytes:length:
appendData:
appendFormat:
appendString:
appleAnchorHrefs
appleMailMessageId
appleMailMessageId:fromSource:
applicationRecordsForUserActivityType:limit:error:
applicationState
applyAdjustmentIfSane:
applyCappingPolicy:byDiscardingTokensCounts:withMargin:
applyCappingPolicy:shouldContinue:
approximateTimeForDataDetectorResult:
apsEnvironmentStringForContainer:
archivedDataWithRootObject:requiringSecureCoding:error:
areHumanHeaders:
areKeysAvailable:
areModelsAvailableInLanguage:
areSubModelsEmpty
areSubmodelsEmpty
argMaxForLastOutput:
argMaxForOutputIndex:index:shape:
argMaxForSequence:
array
arrayByAddingObject:
arrayByAddingObjectsFromArray:
arrayForKey:
arrayWithCapacity:
arrayWithContentsOfFile:
arrayWithObject:
arrayWithObjects:count:
arrivalActualTime
arrivalAirporGateFromFlightSchema:
arrivalAirport
arrivalAirportDescription
arrivalAirportGate
arrivalBoatTerminalLocation
arrivalBusStopLocation
arrivalGate
arrivalPublishedTime
arrivalStationLocation
asCSPerson
asDictionary
asJsonLd
asset
assetVersion
assetVersion:
assetVersionsForMLMessageEvent
asyncQueue
attachment
attachmentDetectionRegexes
attachmentFilename
attachmentLinkDetection
attachmentLinkDetectionRegex
attachmentWithType:filename:path:
attachments
attachmentsFromBiomeAttachments:
attachmentsFromSearchableItem:
attachmentsProbability
attachmentsStats
attendee
attendeeEmailAddresses
attendees
attributeForKey:
attributeSet
attributes
attributesForNameWord:
attributesOfFileSystemForPath:error:
attributesOfItemAtPath:error:
auditToken
author
authorFirstname:
authorMatchingContacts
authorMatchingContactsKeys
authorName:
authorNickname
automaticGeocodingEnabled
automaticallyNotifiesObserversForKey:
autorelease
autoreleasingSerialQueueWithLabel:
autoreleasingSerialQueueWithLabel:qosClass:
background
backgroundAggregatedAccuracyLogForThePastFourWeeks
backgroundAggregatedAccuracyLogSinceModelInitialization
backgroundTrialMetadata
backpressureHazard
backward
backwardToString:consume:
backwardWhile:
base64EncodedDataWithOptions:
baseAttachmentFrom:includingEvents:withRanges:
baseInteractionDictionaryForInterface:actionType:
baseModelName
baseURLStrings
batch:
batchOf:contactsStartingAtEntityId:
bccHandles
bestLanguageID
bestLocalizedNameForAirport:
bestName:
bestProfile
bi_lstm_0_c_in
bi_lstm_0_c_in_rev
bi_lstm_0_c_out_rev
bi_lstm_0_h_in
bi_lstm_0_h_in_rev
bi_lstm_0_h_out_rev
bigramFeature
bigramQueriedTokensCount
bigramTokenCounts
bigramTokensCount
bindCheckContactRow:isMe:
bindNamedParam:toBlock:
bindNamedParam:toDouble:
bindNamedParam:toDoubleAsNSNumber:
bindNamedParam:toInt64:
bindNamedParam:toInt64AsNSNumber:
bindNamedParam:toInt64AsNonnullNSNumber:
bindNamedParam:toInteger:
bindNamedParam:toNSArray:
bindNamedParam:toNSData:
bindNamedParam:toNSDictionary:
bindNamedParam:toNSIndexSet:
bindNamedParam:toNSSet:
bindNamedParam:toNSString:
bindNamedParam:toNonnullNSString:
bindNamedParamToNull:
bindParam:name:double:
bindParam:name:int64:
bindParam:name:int:
bindParam:name:nsdata:
bindParam:name:nsstring:
bindParam:toDoubleAsNSNumber:
bindParam:toInt64:
bindParam:toInt64AsNSNumber:
bindParam:toNSData:
bindParam:toNSString:
bindParam:toNonnullNSString:
bindParamToNull:
bindParamToNull:name:
bindStatementsForCommit:storageEvent:
biomeAggregationPerformanceInMilliSeconds
biomeMessageIdByPersistentId
biomeSummaryByMessage
biosBasedAnnotation:usingTags:forSection:
birthday
birthday:forIdentity:context:contextRangeOfInterest:extractionInfo:
birthday:forIdentity:parent:curated:context:contextRangeOfInterest:extractionInfo:
birthdayCongratsTextMessage:andLanguage:andHealthStore:
blockOperationWithBlock:
blockedWarningCount
boardingTime
boatName
boatNumber
boatTrip
body
bodyAnalysisSamplingFactor
bookingTime
bookingTimeFromReservationSchema:
boolForKey:
boolValue
booleanValue
bucketerWithEqualityTest:
bucketerWithLabeledBuckets:
bucketerWithMapping:
bucketizeInteger:withBucketSize:limit:
bucketizeIntegerForAggregateSummary:
bucketizeWithSize:
bucketizedRemindersCreatedAfterDate:endDate:
bucketsNames
bumptTTLForNLEvent:
bundleID
bundleId
bundleIdentifier
bundleIdentifiers
bundleRecord
bundleRecordWithBundleIdentifier:allowPlaceholder:error:
bundleWithIdentifier:
busNumber
bytes
cacheHit
cacheOfType:
cachedFeature:
cachedResultForKey:generateResult:validateResults:
cachedSalt
cachedSaltLegacyManatee
calculateCurrentLanguagesFromPreferredLocaleCodes:
calculateLangResolutionOrder
calendar
calendarAppUsageLevel:
calendarItemsWithExternalIdentifier:
calendarWithIdentifier:
callStatus
callWithArguments:
callerIdForDisplay
calscale
canBeConvertedToEncoding:
canConvertToSchemaOrg
canMerge:
canStoreEventsForAccountType:
cancel
cancelAllOperations
cancelEvent:
cancelEvent:commit:
cancelEvents:
cancelUpdateTimer
cancelled
candidateNameRange
candidatesForLabelIndexSets:inPlainText:forTaggedCharacterRanges:
candidatesForLabelTokenIndexes:inPlainText:
candidatesForLabelTokenIndexes:inPlainText:forTaggedCharacterRanges:
candidatesForLabelsWithPlainTextIndexSets:inPlainText:
candidatesForPlainTextIndexSet:inPlainText:
capitalizedString
cappedDeliveryEntityCountsCreatedBetweenStartDate:endDate:
cappedDeliveryEntityCountsCreatedBetweenStartDate:endDate:store:
carrierCode
carrierEntryForKey:
carrierIataCodeForCarrierName:
carrierIataCodes
carrierName
carrierPhoneNumber
caseInsensitiveCompare:
caseInsensitiveContainsString:inCandidates:
category
categoryAsString:
categoryDescription
categoryForCategoryString:
categoryForSchema:
categoryTagWithCategoryType:
categoryType
categoryTypeAsString:
ccHandles
changeCallback
changeHistoryWithFetchRequest:error:
changeLanguageOrPatternData
changeType
changesTruncated
characterAtIndex:
characterIsMember:
characterMapping
characterSet
characterSetWithCharactersInString:
checkExistsEventForDuplicateKey:
checkExistsSaliencyForMessageId:
checkResourceIsReachableAndReturnError:
childrenFromParentKey:
city
cityForIataCode:
cjkSpacerCharacters
cjkSpacersToWhiteSpace:
ckErrorForRecordId:inError:
class
classificationOfflinePrecision
classificationOfflineRecall
classificationParams
classificationThreshold
classifierWithEspressoModelFile:
cleanCandidates:outputName:label:
cleanExperimentModelsFromTrialModelsFolder
cleanLegacyModelsDirectoryOfModelsNamed:
cleanModelAssets
cleanModelsDirectoryOfModelsNamed:
cleanName:
clear
clearAllRegexCaches
clearAllTables
clearAllTombstonesForSpotlightReferencesIf:
clearBucketForDate:
clearBucketsForDates:
clearCache
clearCaches
clearCachesFully:withCompletion:
clearChangeHistory:
clearContactAggregator
clearContactAggregatorConversation:
clearContactsWithConversationIdentifier:
clearConversationCache
clearConversations
clearCtsJobConstraints
clearDatabase:
clearDatabases
clearErrors
clearKVStoreTable
clearLocations
clearMailAttachmentHistograms
clearMailIntelligence
clearMailIntelligenceSaliencyDetection
clearMasterEntityCache
clearMeContactCache
clearMissingAttachments
clearMissingRecipients
clearNicknameMappingTable
clearNoContactsCache
clearRequestCache
clearSaliencyTable
clearSignatureStatsTable
clearStats
clearSubModelsTables
clientIsMail
clientIsMessages
clientName
clientWithIdentifier:
close
closeDatabases
closeFile
closePermanently
cloudKitPersistedState
cloudKitSync
cnContactIdentifier
cnContactIdentifiersSpotlightQueryStringForContact:
cnContactMatchesForRecordId:found:
cnContactMatchesForRecordId:withCompletion:
cnContactMatchesForRecordIds:withCompletion:
coalesceAddress:orAppendMatch:
code
columnQueryPrefixSelect
combinedSuggestions
commitContactDetail:
commitDomainsAndCounts:toColumn:
commitDomainsCountedSet:toColumn:
commitEvent:
commitExtractionInfo:
commitNaiveBayesModel:probabilityFeatureName:
commitNaiveBayesModel:probabilityFeatureName:updateDate:
commitSpotlightMapping:bundleIdentifier:domainIdentifier:uniqueIdentifier:
commitStorageLocation:
commitStorageLocation:withEventId:
commitStorageReminder:
commitTag:
commitTemporaryFile
commitToStore:updateDate:
commitWithStore:
compare:
compare:options:
compareContact:cnContact:newDetails:matchedDetails:matchPreference:
compareContact:cnContact:stopOnNewDetail:stopOnMatchedDetail:matchPreference:
completeWithResult:error:
completer
completionDate
completionDateTimestamp
component:fromDate:
componentForKey:
componentKeys
componentName
components
components:city:state:postalCode:country:
components:fromDate:
components:fromDate:toDate:options:
componentsInTimeZone:fromDate:
componentsJoinedByString:
componentsSeparatedByCharactersInSet:
componentsSeparatedByString:
compositeHash
compress:lowMemory:
computeBlobs
computeContactPriorsForContactIdentifiers:withTimeConstant:withInteractionMechanisms:asOf:overLookbackOf:
concatPathWithPrefix:suffix:extra:
concurrencyBehavior
confidence
confidenceScore:
config
configureMigratorThenMigrateToVersion:
confirm:orRejectContactByRecordID:error:
confirmContact:confirmRejectUI:completion:
confirmContactDetailByRecordID:error:
confirmContactDetailRecord:confirmRejectUI:completion:
confirmEvent:
confirmEvent:completion:
confirmEventByRecordId:completion:
confirmEventByRecordId:error:
confirmEventFromOtherDevice:
confirmEventFromThisDevice:
confirmFieldValues:forEntity:
confirmFieldValues:forStorageEvent:
confirmHashesForOpaqueKey:withCreationTime:forMatching:
confirmHashesForOpaqueKeyWithoutTimestamp:forMatching:
confirmHashesForRemindersOpaqueKey:withCreationTime:forMatching:
confirmOrRejectContact:
confirmOrRejectDetail:forContact:
confirmOrRejectDetailHashes:
confirmOrRejectRecordForContact:
confirmRealtimeContact:error:
confirmRealtimeEvent:error:
confirmRealtimeReminder:completion:
confirmRecord:confirmRejectUI:completion:
confirmReminder:
confirmReminderByRecordId:completion:
confirmReminderByRecordId:error:
confirmReminderFromExternalDevice:
confirmReminderFromThisDevice:
confirmStorageEvent:
confirmStoredEvent:error:
confirmStoredReminder:error:
confirmationOptional
confirmationOptionalTokens
confirmedEventFieldHashes
confirmedEventHashes
confirmedEventWithoutTimestampFieldHashes
confirmedEventWithoutTimestampHashes
confirmedFieldValuesForEntity:
confirmedFieldValuesForEvent:
confirmedReminderHashes
conformsToProtocol:
connection:channelSubscriptionsFailedWithFailures:
connection:didChangeConnectedStatus:
connection:didFailToSendOutgoingMessage:error:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didReceivePublicToken:
connection:didReceiveToken:forInfo:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didSendOutgoingMessage:
connectionDidReconnect:
conservativeRecipientDetection
constructNotesForReminder:
consumeInteractionWithContext:
consumeMailContentWithContext:
consumeMessagesContentWithContext:
consumeRemindersContentWithContext:
consumerName
contactAggregator
contactConfirmed:inApp:
contactContainsEphemeralId:
contactDetail
contactDetail:
contactDetail:label:type:recordId:duplicateKey:sourceKey:context:extractionInfo:
contactDetailAsString:
contactDetailEntityIdForDuplicateKey:
contactDetailFromEntity:
contactDetailKey
contactDetailPrimaryKeyForDuplicateKey:
contactDetailsWithType:
contactEntityFromEntity:
contactEntityWithTitle:duplicateKey:recordId:masterEntityId:
contactFromContactEntity:
contactFromRecordId:withCompletion:
contactHashes
contactIdentifier
contactIdentifier:
contactIdentifierFromSuggestionID:
contactIdsMergedWithMasterEntityId:
contactInformationExtracted
contactIsDisplayable:
contactIsSignificant:
contactIsSignificant:usingCoreRecents:
contactIsSignificantOrSignificanceIsDisabled:
contactIsSignificantOrSignificanceIsDisabled:usingCoreRecents:
contactMatchedRecordTypeFromEntityType:
contactMatchedRecordTypeFromIdentityKeyType:
contactMatchesByEmailAddress:withCompletion:
contactMatchesByPhoneNumber:withCompletion:
contactMatchesBySocialProfile:withCompletion:
contactMatchesWithContact:limitTo:withCompletion:
contactMatchesWithContactIdentifier:limitTo:withCompletion:
contactMatchesWithContactIdentifiers:limitTo:withCompletion:
contactMatchesWithFullTextSearch:limitTo:withCompletion:
contactMatchesWithMessagingPrefix:limitTo:withCompletion:
contactRejected:inApp:
contactSharingNegativeSamplingRate
contactStore
contactSuggestionImpressionsViaBanner:
contactWithId:name:emailAddresses:phones:postalAddresses:socialProfiles:
contactWithId:name:emailAddresses:phones:postalAddresses:socialProfiles:birthday:photoPath:
contactWithMasterEntityId:
contacts
contactsFoundOnDeviceEnabled:
contactsFromEntity:
contactsSuggested:withElapsedTime:inApp:
contactsWithIdentifiers:
container
containsDetailSuggestions
containsEntityExtraction:
containsIndex:
containsNonCuratedData:
containsSuggestions
contentAdmissionBlocklistDidChange:
contentCreationDate
contentHash
contentLength
contentProtection
contentRangeOfInterest
contentURL
contentsOfDirectoryAtPath:error:
contextRange
contextRangeOfInterest
controlCharacterSet
conversationForIdentifier:
conversationForSenderID:
conversationIdentifier
conversationProbability
conversationStats
conversationWithIdentifier:
conversations
convertLineEndingsToNetwork:
convertToContact:
convertToContact:sourceEntity:enrichments:
convertToEventWithOrigin:
coordinate
copy
copyCriteria:
copyDateWithNewComponents:
copyReconstructedAdditionalRecipients
copyReconstructedAuthors
copyReconstructedPrimaryRecipients
copyWithZone:
core
coreRange
coreSpotlightAttributeSetForContact:
corruptionMarkerFilename
corruptionMarkerPath
corruptionMarkerPathForPath:
corruptionMarkerPresent
count
count128KBTo512KB
count32KBTo128KB
count8KBTo32KB
countByEnumeratingWithState:objects:count:
countForColumn:domain:
countOver2MB
countUpTo8KB
countryCode
countryCodeFromLanguageCode:
counts
createAfter:onCreate:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
createEnrichmentWithMatch:onParentEntity:
createFileAtPath:contents:attributes:
createInteractionSummaryForEventKey:expirationDate:interactionKey:interactionAttributes:rtcCategory:
createLaunchIntentForStorageEvent:
createNewSearchableItem
createNewSearchableItemWithSource:uniqueIdentifier:domainIdentifier:
createSubscriptionWithRetries:
createTableNamed:inDatabase:
createWithImmediateResult:
createWithImmediateResult:error:
creationDate
creationTimestamp
ctsJobConstraints
ctsJobConstraintsAsString:
ctsJobConstraintsAtIndex:
ctsJobConstraintsCount
cumulatedSubmodelsRollbackForPostDeletionPolicyPerformanceInMilliSeconds
curatedContactsFromContactStore:matchingPseudoContact:error:
curatedEventKeyForExactMatchOfPseudoEvent:candidates:
curatedRecordIds
currentColumns
currentContext
currentEnvironment
currentHandler
currentLanguages
currentLocale
currentModelURLForModelName:
currentOsBuild
currentRunLoop
currentThread
customIdentifier
customResponsesAfterPruning
daemonExitWithCompletion:
data
dataDetector
dataDetectorAdditions
dataDetectorMappedAdditions
dataDetectorMatches
dataDetectorMatchesForTokenIndexes:dataDetectorMatches:allowDatesInPast:allowTimeOffset:
dataDetectorMatchesWithSignature
dataDetectorWithTypes:error:
dataForKey:
dataForMessageWithIdentifier:error:
dataForOffset:
dataForOffset:includeTerminator:
dataForSearchableIndex:itemIdentifier:typeIdentifier:error:
dataOfLength:
dataTaskWithRequest:completionHandler:
dataTaskWithURL:completionHandler:
dataTransferByteCount
dataUsingEncoding:
dataUsingEncoding:allowLossyConversion:
dataWithBytes:length:
dataWithContentsOfFile:
dataWithContentsOfFile:options:error:
dataWithContentsOfURL:options:error:
dataWithJSONObject:options:error:
dataWithPropertyList:format:options:error:
databaseCorruptionDetectedViaCorruptionMarker
databaseCorruptionDetectedViaIntegrityCheck
databaseHandle
databasecheck_BrokenEntityIDReferences
databasecheck_IntegrityCheck
databasecheck_contactMergeGroupConsistency
date
dateByAddingComponents:toDate:options:
dateByAddingTimeInterval:
dateByAddingUnit:value:toDate:options:
dateByAppendingDaysToCurrentDate:
dateComponents
dateComponents:label:extractionInfo:withRecordId:
dateComponentsFromDataDetectorMatch:inferDates:approximateTime:partialDate:useEndForDurations:
dateComponentsFromDate:
dateFromComponents:
dateFromEmailString:
dateInterval
dateIsCorrect
dateMapping
dateString
dateWithTimeIntervalSince1970:
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
days
daysAvailableDuringIncrementalUpdate
daysProcessedDuringIncrementalUpdate
dbErrorWithCode:sqliteReturnValue:lastErrno:query:
dbHandleForTesting
debugAppendText:
debugDescription
debugSetContext:
debugStoreContext
decimalDigitCharacterSet
decodeBoolForKey:
decodeDoubleForKey:
decodeEncodedTextToData:
decodeEncodedWordsIn:
decodeInt64ForKey:
decodeIntegerForKey:
decodeObjectForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
decodeQuotedPrintable:charset:rfc2047UnderscoreAsSpace:
decodeTopLevelObjectOfClass:forKey:error:
decompress:
dedupe:bucketer:resolver:
dedupeContactDetails:
defaultBudget
defaultCSSearchQueryContextFetchAttributes
defaultCalendarForNewEvents
defaultCenter
defaultConfig
defaultCoordinator
defaultDueDateComponentsFromMessages:
defaultEKStoreProvider
defaultHarvestStore
defaultLogger
defaultManager
defaultModel
defaultOrthographyForLanguage:
defaultPath
defaultPathCreatingSuggestionsDirectoryIfNeeded:
defaultSaliencyOnError
defaultSaliencyOnOverrideFor:
defaultSearchableIndex
defaultSessionConfiguration
defaultSessionDescriptorForModelId:featureVersion:language:windowAndNgrams:
defaultSnippetPath
defaultStore
defaultTimeIntervalForAWarning
defaultTimeIntervalToEndWarningExposition
defaultTimeIntervalToStartWarningExposition
defaultWindowAndNgrams
defaultWorkspace
deleteAllCNContactMatches
deleteAllCNContactMatchesForEntityID:
deleteAllCNContactMatchesForIdSet:
deleteAllInteractionsWithBundleID:protectionClass:
deleteAllJournaledQueries
deleteAllReimportRequestsOlderThanDate:
deleteAllRows
deleteAllSearchableItemsWithBundleID:
deleteAllURLsWithBundleIdentifier:documentIdentifiers:entityStore:
deleteAllURLsWithBundleIdentifier:domainSelection:entityStore:
deleteAllURLsWithBundleIdentifier:entityStore:
deleteAllUserActivities:
deleteByRecordId:
deleteCNContactMatchForContactId:
deleteCloudKitZoneWithCompletion:
deleteDataDerivedFromContentMatchingRequest:
deleteDomain:
deleteDomainSelection:
deleteDomainSelection:keepingDomainsPassingTest:
deleteEntitiesByDuplicateKey:emitChangeNotifications:
deleteEntitiesByDuplicateKey:preserveEventConfirmationHistory:emitChangeNotifications:
deleteEventByRecordId:completion:
deleteGroupId:
deleteInteractionEntitiesExceedingLimit:withSuspensionHandler:
deleteInteractionsWithBundleId:completion:
deleteInteractionsWithBundleId:groupIdentifiers:
deleteInteractionsWithBundleId:groupIdentifiers:completion:
deleteInteractionsWithBundleId:identifiers:
deleteInteractionsWithBundleId:identifiers:completion:
deleteInteractionsWithGroupIdentifiers:bundleID:protectionClass:
deleteInteractionsWithIdentifiers:bundleID:protectionClass:
deleteItemsWithEntityTag:
deleteItemsWithEntityTag:preserveEventConfirmationHistory:
deleteMailIntelligenceForMessageIds:
deleteMessagesByDuplicateKey:
deleteNaiveBayesModelForProbabilityFeatureName:
deletePreparedSqlStoreInMemory
deleteSearchableItemsSinceDate:bundleID:
deleteSearchableItemsWithDomainIdentifiers:bundleID:
deleteSearchableItemsWithDomainIdentifiers:completionHandler:
deleteSearchableItemsWithIdentifiers:bundleID:
deleteSearchableItemsWithIdentifiers:completionHandler:
deleteSerializedContactForId:
deleteSerializedContactsForIdSet:
deleteSessionsWithBundleID:
deleteSessionsWithDomainIdentifiers:bundleID:
deleteSessionsWithIdentifiers:bundleID:
deleteSpotlightReferencesWithBundleIdentifier:
deleteSpotlightReferencesWithBundleIdentifier:completion:
deleteSpotlightReferencesWithBundleIdentifier:domainIdentifiers:
deleteSpotlightReferencesWithBundleIdentifier:domainIdentifiers:completion:
deleteSpotlightReferencesWithBundleIdentifier:uniqueIdentifiers:
deleteSpotlightReferencesWithBundleIdentifier:uniqueIdentifiers:completion:
deleteSpotlightReferencesWithNoBundleIdentifier
deleteStorageEvent:
deleteTokensForDeletedEmailAddresses:
deleteURLsFromBundleIdentifier:documentIdentifiers:
deleteURLsFromBundleIdentifier:groupIdentifierGlobs:
deleteURLsOlderThanDate:deletionCount:
deleteUserActivitiesWithPersistentIdentifiers:bundleID:
deleteValueByRecordId:
deleteValueByRecordIdSet:
deleteValueForKey:
deleteZoneWithCompletion:
deletedEmailsCount
deletedTokensCountToComplyToCappingPolicy
deliveries
deliveriesTestingPipeline
deliveryForEntity:origin:
deliveryForEntity:store:
deliveryKey
departureActualTime
departureAirport
departureAirportDescription
departureAirportGate
departureAirportGateFromFlightSchema:
departureBoatTerminalLocation
departureBusStopLocation
departureGate
departurePlatform
departurePublishedTime
departureStationLocation
departureTerminal
dependencyClassesForDissectorClass:
deploymentId
deregisterUpdateHandlerAsyncWithToken:
deregisterUpdateHandlerWithToken:
describeAnnotationType:
describeCategory:
describeReminderDueLocationTrigger:
describeReminderDueLocationType:
describeReminderExtractionStatus:
describeReminderStatus:
describeUseCase:
description
descriptionForEntityType:
descriptionForOriginType:
descriptionForSGRTCCategory:
descriptorForName:version:locale:
descriptorForRequiredKeysForStyle:
deserializeAttributes:andBody:
destroyAndUnlinkIfEmpty
detail
detail:confirmedForContact:
detail:rejectedForContact:
detailForRecordId:
detailTypeFromPrefix:
detailTypeFromPrefix:detectedLabelPointer:
detectContacts
detectLanguageFromText:
detectLanguageFromTextHeuristicallyWithLanguages:languages:defaultLanguage:
detectMessageEventsML
detectNLEvents
detectNames:algorithm:
detectNames:withNameSet:
detectRemindersInMail
detectSalientMails
detectStructuredEvents
detectStructuredEventsML
detectedAddressForLabel:withError:
detectedData
detectedDataSignatureRange
detectedDate
detectedDateComponentsForTokenIndexes:dataDetectorMatches:allowDatesInPast:inferDates:approximateTime:partialDate:allowTimeOffset:useEndForDurations:
detectedDateComponentsForTokenIndexes:dataDetectorMatches:allowDatesInPast:inferDates:approximateTime:partialDate:useEndForDurations:
detectedDueDateComponents
detectedEndAddressWithError:
detectedEndDateComponents
detectedEndPlaceWithError:
detectedEndTimeZone
detectedEventName
detectedEventPolarity
detectedLanguage
detectedPostalAddressExtractionForTokenIndexes:dataDetectorMatches:label:
detectedStartAddressWithError:
detectedStartDateComponents
detectedStartPlaceWithError:
detectedTimeZone
detectedTitleForLanguage:
detectedTitleInModelOutput:enrichedTaggedCharacterRanges:textContent:language:
detectionFromBodyDDMatch:message:withSupervisionToFill:isUnlikelyPhone:
detectionFromMatch:plainTextContent:extractionInfo:isUnlikelyPhone:
detectionFromMessage:ddMatch:matchedContext:withSupervision:inConversation:entityLanguage:
detectionFromSignatureDDMatch:message:detectedLabelRange:lastClaimedLabelRange:isUnlikelyPhone:
detectionWithType:text:matchRange:matchString:label:hasPhoneLabel:extractionInfo:isUnlikelyPhone:
detectionsAndSignatureInText:eligibleRegions:baseDate:
detectionsInPlainText:withEligibleRegions:
detectionsInPlainText:withEligibleRegions:baseDate:
detectors
dialingCodeForISOCountryCode:
dictRepresentation
dictionary
dictionaryFromPathWithPrefix:suffix:
dictionaryFromTimezone:
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithContentsOfFile:
dictionaryWithObjects:forKeys:count:
dictionaryWithPath:error:
dictionaryWithSharedKeySet:
didChangeValueForKey:
didKVSMigrationTokenForIdentifier:
didResponseKitTrigger
diffSchemas:withExpectedSchemas:
diffSchemas:withExpectedSchemas:reply:
digits
direction
directoryValue
dispatchGroup
displayName
displayableEntities:
displayname
dissect:
dissect:andStore:
dissect:inContext:
dissectAndStore:inContext:
dissectAndStoreEntity:inContext:
dissectAndStoreEntity:inContext:destinationStore:
dissectAndStoreSpotlightEntity:bundleIdentifier:uniqueIdentifier:domainIdentifier:inContext:
dissectEntity:andStore:
dissectInteraction:entity:context:
dissectMailMessage:entity:context:
dissectOperationsForInteraction:entity:inContext:
dissectOperationsForMailMessage:entity:inContext:
dissectOperationsForTextMessage:entity:inContext:
dissectTextMessage:entity:context:
dissectURL:title:htmlPayload:entity:
dissectorWithMockedMLTrainingForTests
dissectors
distanceBetweenStrings:and:
distantFuture
distantPast
district
dkimSignatureHeaders
dkimVerifier
document
documentDate
documentIdentifier
documentSource
documentSourceAsString:
documentTimeInterval
documentTitle
domain
domainByAppendingToken:toDomain:
domainForStringTokens:
domainFromSenderAge
domainFromSenderProbability
domainFromSenderStats
domainId
domainIdForInteractionGroupId:
domainIdentifier
domainIdentifierForSpotlightReferenceForBundleIdentifier:uniqueIdentifier:
dominantLanguageTagFromText:
donateInteractions:bundleIdentifier:error:
donateRelevantShortcuts:bundleID:
donateSearchableItems:bundleIdentifier:error:
donateUserAction:searchableItem:error:
done
done:
doneReturningWasDone
dontUpdate
doubleAsNonnullNSNumberForColumnName:table:
doubleValue
downloadedCalendarAttachmentsFrom:
dropColumn:
dtend
dueDateComponents
dueDateComponentsFromMessages:
dueDateDataDetectorMatches
dueDateTimestamp
dueLocation
dueLocationFromMessages:
dueLocationTrigger
dueStorageLocation
dumpTables:columns:
duplicateEventKey
duplicateKey
duplicateKeyForCuratedEventWithExternalID:
duplicateKeyForDeliveryWithProviderString:trackingNumber:parentKey:
duplicateKeyForEmailWithSource:messageId:
duplicateKeyForInteraction:fromBundleIdentifier:
duplicateKeyForInteractionIdentifier:fromBundleIdentifier:
duplicateKeyForInteractionWithBundleId:personHandle:
duplicateKeyForMessage:fromSource:
duplicateKeyForNaturalLanguageEventWithStartDate:endDate:title:participants:parentKey:
duplicateKeyForPseudoContactWithIdentity:parentKey:
duplicateKeyForPseudoEventWithGroupId:parentKey:
duplicateKeyForPseudoReminderWithGroupId:withCreationTime:parentKey:
duplicateKeyForSchemaOrg
duplicateKeyForSearchableItem:
duplicateKeyForTextMessageWithSource:uniqueIdentifier:
duplicateKeyForWebPageFromSource:
duplicateKeysFromMailMessageKeys:
duplicateKeysFromRecordIds:
duplicateKeysMatchingAnyEventHash:
duplicateKeysMatchingAnyReminderHash:
duplicateKeysMatchingAnyTag:
duplicateKeysMatchingInteractionBundleId:andTags:
duration
earlierDate:
ef_rfc5322Unfold
ef_trimLeadingCharactersInSet:
ekEventAvailabilityState:
email
emailAddress
emailAddress:forIdentity:parent:curated:context:contextRangeOfInterest:extractionInfo:
emailAddress:label:extractionInfo:withRecordId:
emailAddressIsSignificant:withCompletion:
emailAddresses
emailDaemon
emailFrom:
emailFrom:entity:
emailHeaders
emailKey
emailLanguage
emailMapping
emailTags
emailToCanonicalEmailCache
emailToJsonLd:reply:
emailToOutput:reply:
emailsPendingVerification
emitContactDeleted:
emitContactUpdated:
emitEventDeleted:
emitEventUpdated:
emitReminderDeleted:
emitReminderUpdated:
emitURLChanged
emptyPipeline
enabledDataclasses
encodeBool:forKey:
encodeDouble:forKey:
encodeInt64:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
encodedStringForFullName:
encryptedValuesByKey
endDateComponents
endDateUnadjustedForLegacyClients
endDissectionOfMessage:inContext:
endElement
endHarvest
endIndexBatchWithClientState:completionHandler:
endIngestOfMessages:
endTimeZone
endTimer:significantWork:
endUTCOffsetSeconds
engineConfig
enqueueSearchableItems:completion:
enrichAggregateSummaryLog:
enrichAndFilterTaggedCharacterRanges:usingMapping:withAnnotationType:
enrichInteractionSummaryLog:
enrichReminderInteractionSummaryLog:
enrichTaggedCharacterRangesWithModelOutput:usingInputCharacterRanges:
enrichedTaggedCharacterRanges
enrichedTaggedCharacterRangesContainsProfanity:
enrichedTaggedCharacterRangesFromEntity:forMessage:
enrichedTaggedCharacterRangesFromTaggedCharacterRanges:messageIsSent:
enrichmentWithParentEntity:withCalendar:
enrichmentWithParentEntity:withCalendar:withCorrectnessFlag:
enrichments
enrichmentsFromData:inDocument:parentMessage:parentEntity:
enrichmentsFromSchema:forMessage:forEntity:category:
enrichmentsFromSchemas:inMessage:parentEntity:
enrichmentsFromSchemas:inTextMessage:parentEntity:
entity
entityCount
entityForOutputItem:parentEntity:outputExceptions:outputInfos:
entityForOutputItem:parentEntity:outputExceptions:outputInfos:interaction:
entityForOutputItem:withSiblings:parentEntity:outputExceptions:outputInfos:interaction:
entityFromSqlResult:
entityFromSqlResult:withSnippets:
entityFromUniqueKey:
entityIdentifiersFromCNIdentifiers:
entityKey
entityKeyCountsForEntityType:startDate:endDate:
entityType
entityTypeFromIdentityKeyType:
entityWantsFullDownload:
enumerateAllContactsWithSnippets:limitTo:usingBlock:
enumerateByteRangesUsingBlock:
enumerateChildrenOfDomain:depth:usingBlock:
enumerateChildrenOfDomain:greaterThan:depth:limit:usingBlock:
enumerateContactChangesWithKeysToFetch:fromContactStore:error:usingBlock:
enumerateContactIdentifierBatchesUsingBlock:
enumerateContactIdentifiersUsingBlock:
enumerateContactsByMasterEntityQuery:withSnippets:limit:bindings:usingBlock:
enumerateContactsMatchingEmailAddress:withKeysToFetch:usingContactStore:error:usingBlock:
enumerateContactsMatchingName:withKeysToFetch:usingContactStore:error:usingBlock:
enumerateContactsWithFetchRequest:error:usingBlock:
enumerateContactsWithFetchRequest:usingContactStore:error:usingBlock:
enumerateDetailsWithBlock:
enumerateEKEventsForPseudoEventBySimilarStartAndEndTime:store:usingBlock:
enumerateEventsMatchingPredicate:usingBlock:
enumerateIndexesUsingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateLinesUsingBlock:
enumerateLinguisticTagsInRange:scheme:options:orthography:usingBlock:
enumerateMatchesInString:ngroups:block:
enumerateMatchesInString:ngroups:blockWithSubregexp:
enumerateMatchesInString:options:range:usingBlock:
enumerateMatchesInUtf8:fromString:ngroups:block:
enumerateMatchesInUtf8:fromString:ngroups:blockWithSubregexp:
enumerateObjectsUsingBlock:
enumeratePeople:
enumeratePreviousMessages:inEntity:usingBlock:
enumeratePreviousMessages:usingBlock:
enumerateRangesUsingBlock:
enumerateSubstringsInRange:options:usingBlock:
enumerateTagsInRange:scheme:options:usingBlock:
enumerateTagsInRange:unit:scheme:options:usingBlock:
enumerateTokensInString:block:
enumerateTokensInString:withRange:block:
enumeratorAtPath:
environment
error
errorCode
errorWithDomain:code:userInfo:
escapeLike:
estimateGroundTruth
estimateGroundTruthWithConfig:
estimateMessagesInChat:
estimatedGroundTruth
evaluate:enablePreFiltering:config:error:
evaluateFirstMatchAmong:defaultValue:
evaluateJavaScript:completionHandler:
evaluateRecipe:attachments:completion:
event
eventActivitiesForReservationWithReference:inParentEntity:interaction:
eventActivitiesForReservationWithSchema:enrichment:
eventBatch
eventBody
eventClassificationForEntity:reply:
eventClassificationForMailMessage:
eventClassificationWithoutXPCForMailMessage:
eventClassifierModelPath
eventClassifierThreshold
eventConfirmed:inApp:
eventConfirmedByRecord:
eventDuration
eventEnrichmentContainsReverseMappedTags:
eventEnrichmentFromEntity:
eventEnrichmentsCount
eventExtractionAssetsPath
eventFromRecordId:withCompletion:
eventFromSqlResult:
eventFromUniqueId:completion:
eventHash:
eventIsCancelled:
eventMetadata
eventMetadata:
eventMetadataFromEKEvent:
eventName
eventQueryWithPredicate:eventStreams:offset:limit:sortDescriptors:
eventRejected:inApp:
eventRejectedByRecord:
eventSuggestionImpressionsViaBanner:
eventWithExternalID:
eventWithIdentifier:
eventWithRecordId:origin:uniqueKey:opaqueKey:title:notes:start:startTimeZone:end:endTimeZone:isAllDay:creationDate:lastModifiedDate:locations:tags:URL:
events
eventsFoundOnDeviceEnabled:
eventsFromEntity:
eventsFromMessage:eventExtractionAssetsPath:
eventsFromSchemaOrgItems:
eventsHaveIdenticalReservationIds:ekEventFromStore:
eventsHaveSimilarTitles:ekEventFromStore:
eventsInFutureLimitTo:options:withCompletion:
eventsMatchingPredicate:
eventsPerWeekAroundDate:
eventsStartingAt:endingAt:limitTo:options:withCompletion:
eventsStartingAt:endingAt:prefix:limitTo:options:withCompletion:
eventsSuggested:withElapsedTime:inApp:
eventsWereRemovedFromEventKit
eventsWithSameAlternativeOpaqueKeyAsDuplicateKey:harvestStore:
eventsWithSameAlternativeOpaqueKeyAsPseudoEvent:harvestStore:
eventsWithSameAlternativeOpaqueKeyAsStorageEvent:harvestStore:
eventsWithSameOpaqueKeyAsDuplicateKey:extraKey:harvestStore:
eventsWithSameOpaqueKeyAsPseudoEvent:harvestStore:
eventsWithSameOpaqueKeyAsStorageEvent:harvestStore:
exceedsMaxHTMLContentLength:
exception
exceptionTemplates
exceptionWithName:reason:userInfo:
excludeList
excludedContent:
executeChangeHistoryClearRequest:error:
executeDailyTasksWithShouldContinue:
executeQueriesOnDatabase:
executeQuery:error:
existsInUtf8:
exitCode
exitOnErrorIndicatingIOError:
experimentId
experimentIdentifiersWithNamespaceName:
exportedInterface
extendMatchArray:withTarget:
externalEnrichments
externalId
externalIdentifier
externalKey
extraKey
extraKey:
extraKeyTag
extractReminderFromMailMessage:entity:
extractReminderFromOwnedMailMessage:entity:
extractReminderFromTextMessage:entity:store:
extractURLsFromAttributesOfItem:handle:
extractURLsFromTextPropertiesOfItem:handle:
extractedBoat
extractedBus
extractedCarRental
extractedEvent
extractedEventCancellation
extractedFood
extractedFromTemplateWithName:
extractedFromTemplateWithShortName:
extractedHotel
extractedMovie
extractedReminderDuplicateKey
extractedTrain
extraction
extractionInfo
extractionInfoWithExtractionType:modelVersion:confidence:
extractionMode
extractionModelVersion
extractionSignatureSource
extractionSignatureSourceAsString:
extractionType
fail:
failSalt
fakeFlightInformationWithAirlineCode:flightNumber:flightDate:
fallbackLanguageCodeForCountryCode:
fallbackSchemaForGenericEventWithTitle:startDate:endDate:
familyName
feature:
featureDict
featureDimensionForInputSection:forModel:
featureEnabled
featureName
featureNames
featureType
featureTypeForName:
featureValueForName:
featureValueWithMultiArray:
features
featurize:
featurizer
fetchLastClientStateWithCompletionHandler:
fetchLocationOfInterestByType:name:
fetchLocationsOfInterestOfType:withHandler:
fetchRemindersMatchingPredicateDescriptor:sortDescriptors:options:error:
fetchRemindersWithError:
fetchSiriFoundInAppsListWithError:
fieldReverseMapped:
fieldsToSaveOnConfirmation
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileHandleForWritingAtPath:
fileSize
fileSystemRepresentation
fileURLForSearchableIndex:itemIdentifier:typeIdentifier:inPlace:error:
fileURLWithPath:
fileURLWithPath:isDirectory:
fileValue
filename
filename:createIfNeeded:
filesystemPathForAssetDataRelativePath:
filesystemPathsForAssetDataRelativePaths:
filterCandidateDateComponents:
filterCandidates:withDetailSubsetOfCNContact:
filterDangerousSigAddressDetections:
filterDangerousSigDetections:message:
filterDangerousSigEmailDetections:message:
filterDangerousSigPhoneDetections:message:
filterOutOrConvertMatches:visibleFlatRecipientEmailsList:visibleFlatRecipientList:bccFlatRecipientList:contactMatchRequired:textContent:regexLanguage:detectedLanguage:store:
filterOutRejectedDetailsFromContact:
filterPastEvents:
filterRealtimeEvents:
filterRealtimeReminders:
filterUsingPredicate:
filteredArrayUsingPredicate:
filteredSetUsingPredicate:
findContactsForDetailType:andValue:
findContactsForPerson:fetchingKeys:
findDeletedEmailAddresses:mdSearchableItemAttribute:fromDaysAgo:error:
findRejectSig:
findSignaturePrefix:
findSignaturePrefixesInMessage:withSignaturePrefixes:
findValediction:
findValedictionCommencedSignatureRanges:
finishProcessingForUniqueIdentifier:
fire
first
firstAppLaunchFollowingFetch
firstHeaderForKey:
firstIndex
firstMatchInString:options:range:
firstName
firstNameLikelihood:underNamingTradition:default:
firstNonZeroColumnForDomain:withColumns:
firstNonZeroColumnForDomains:withColumns:
firstObject
firstObjectCommonWithArray:
firstRangeInIndexSet:
firstValueOfPropertyForName:
firstname
fixupVersionMismatch
flags
flatVectorForFeatureNames:
flattenTaggedCharacterRanges:usingWhitelist:replaceOOVWithToken:
flight
flightDuration
flightFromReservationSchema:
flightID
flightInformationWithAirlineCode:flightNumber:flightDate:
flightNumber
flightNumberFromFlightSchema:
flightRequestForQuery:date:appBundleId:
flightResults
flightno
floatValue
floating
floatingRangeWithLocalStartDate:endDate:
floatingRangeWithUTCStart:end:
floatingRangeWithUTCStartDate:endDate:
flushExternalEnrichmentsUponDealloc
flushMessages
flushWrites
followUpComputeCustomTimeRangeForLanguage:
followUpOnIncomingMails
followUpOnIncomingMailsDetectionRegexes
followUpOnOutgoingMailsAsks
followUpOnOutgoingMailsAsksDetectionRegexes
followUpOnOutgoingMailsQuestions
followUpOnOutgoingMailsQuestionsDetectionRegexes
followUpTimeRangeForDebugging
followUpWarningStats
followUpWarningsParameters
forEach:
forLocale:
forLocale:tagNames:personalNameMapping:punctuationMapping:
forLocale:tagNames:trustCoreNLP:personalNameMapping:punctuationMapping:
forLocale:withPersonalNameMapping:
forceBlobSync
forceLanguagesTo:
forceRotate
formUnionWithCharacterSet:
formatFlowed:delSp:
formatOptions
formattedDate:withTimezone:
formattedName
forwardDraftStarted
forwardToString:consume:
forwardWhile:
foundInAppsStringCompactVersionWithContactName:
foundInAppsStringForCheckInAction:
foundInAppsStringLongVersionForAppName:contactName:
foundInAppsStringWithoutContactForAppName:
foundInAsString:
foundInMailNotifications
foundInSenderCNContact
foundInStringForRecordId:style:withCompletion:
foundItemCount
foundMatchingElement
frailReadTransaction:
frailWriteTransaction:
freeJSContext
freeSpace
freelistCount
frenchPrependForEnrichedTaggedCharacterRanges:actionVerbIndexRange:
from
fromCalendarAttachment
fromCloudKitRecord:
fromExtractedDomain
fromForwardedMessage
fromHandle
fromReply
fromSchema:
fromSchemas:
fromStartDate:
fromStartDate:endDate:
fromStatus
fromStatusAsString:
fromSync
ftsPrefix:
ftsTokenize:
fullDownloadRequestBatch:withCompletion:
fullDownloadRequested
fullMappingFromFile:
fullName
fullPipeline
fullyDissected
futureForObject:withKey:onCreate:
gate
gazetteer
geoLocation
geoMapItemHandle
geocodeAddress
geocodeAirportCode
geocodeEndDate
geocodeEndTimeZone
geocodeEnrichmentsInPipelineEntity:withCompletion:
geocodeEvent:withCallback:
geocodeHandle
geocodeIsEnd
geocodeIsStart
geocodeLabel
geocodeLocations
geocodeLongitude
geocodeOperation:withDependencies:
geocodeStartDate
geocodeStartTimeZone
geocodedEventWithStartDate:startTimeZone:endDate:endTimeZone:locations:
geocodedLocationWithLabel:address:latitude:longitude:accuracy:handle:
geocodedLocationWithLatitude:longitude:accuracy:handle:
geocodingMode
geocodingModeAddressOnly
geocodingModeAddressThenPOI
geocodingModeAddressWithCanonicalSearch
geocodingModePOIOnly
getAllLinks
getAndRemoveItemReferencesFromSchemas:
getBytes:length:
getBytes:maxLength:usedLength:encoding:options:range:remainingRange:
getCString:maxLength:encoding:
getCharacters:
getCharacters:range:
getContactIdentifierForEmail:usingEntityStore:
getContactIdentifierForName:andEmail:ifMatchingPredicate:
getDoubleAsNSNumberForColumn:
getDoubleForColumn:
getDoubleForColumnName:table:
getDoubleNSNumberForKey:
getFlightInformationForFlightEventData:
getFlightReferencesAndReservationId:
getFlightReferencesAndReservationId:reply:
getForKey:binder:
getInt64AsNSNumberForColumn:
getInt64AsNSNumberForColumnName:table:
getInt64ForColumn:
getInt64ForColumnAlias:
getInt64ForColumnName:table:
getInt64NSNumberForKey:
getIntegerForColumn:
getIntegerForColumnAlias:
getIntegerForColumnName:table:
getJSContext
getLineContaining:inText:
getMaxEntityId
getMergedPrompt:withParams:
getMergedPromptForMessage:conversationTurns:maxPromptLength:maxPromptWindowSeconds:promptJoiningString:
getNSDataForColumn:
getNSDataForColumnName:table:
getNSDateForKey:
getNSStringForColumn:
getNSStringForColumnAlias:
getNSStringForKey:
getNewBlobsIfChanged
getObjectValue:forString:range:error:
getPet2Tracker
getReminder:
getReminderWithDuplicateKey:
getReminderWithRecordId:
getResponsesForBirthdayExtractionFromMessage:withLanguage:
getSGMIStoredAddresses
getSaliencyOutputOf:forArray:
getState:
getUnderlyingError:
getUnsubscriptionOpportunitiesSuggestionsDenyListForField:
getViolationsToTokenCountsPolicy:
givenName
globPatterns
globPrefix:
globalLanguageVersion
gmtOffsetTimeZoneFromString:forDate:
gmtOffsetTimeZoneWithCalendar:withEvent:
gmtOffsetTimeZoneWithHour:withMinute:forDate:
grabNameIfNeededFromContactStore:
groundTruthEstimatorFeatures
groundTruthEstimatorRules
groundTruthVersion
gteSaliency
handle
handleDeviceLockStateEvent:
handleError:sqliteError:forQuery:onError:
handleExistsInContactStoreForHandle:withHandleType:
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
handleIdentifier
handleLastNameFirstOrder:
handleSqliteError:error:onError:db:
handleSyncedDataChanged:
handleTextMessageBirthdayCongratulation:entity:withConversationHistory:
handleTextMessageContactSharing:andMatch:andContext:andLanguage:withSupervision:
handleTextMessageContactSharingWithNegativeSample:andLanguage:
handleTextMessageSelfIdentification:entity:withConversationHistory:
handleType
hardName
harvestDrainedNumberOfMails:
harvestMetrics
harvestSource
harvestSourceAsString:
harvestStore
harvestTimerForName:
harvestTimes
harvestedEntity:withElapsedTime:
harvestedMessageInQueueSince:
harvestedOnBattery
harvestedSuggestionsFromMessage:bundleIdentifier:options:completionHandler:
harvestedSuggestionsFromMessage:bundleIdentifier:options:withCompletion:
harvestedSuggestionsFromMessages:bundleIdentifier:options:completionHandler:
harvestedSuggestionsFromSearchableItem:options:withCompletion:
hasAccuracy
hasActive
hasActiveAggregatedAccuracyLogForThePastFourWeeks
hasActiveAggregatedAccuracyLogSinceModelInitialization
hasActiveTrialMetadata
hasAddress
hasAgeOfTheSubmodelInDays
hasAirportCode
hasAllDay
hasAlreadyHarvestedSearchableItem:
hasApp
hasAttachmentsProbability
hasAttachmentsStats
hasBackground
hasBackgroundAggregatedAccuracyLogForThePastFourWeeks
hasBackgroundAggregatedAccuracyLogSinceModelInitialization
hasBackgroundTrialMetadata
hasBiomeAggregationPerformanceInMilliSeconds
hasBlockedWarningCount
hasBundleId
hasCacheHit
hasCalendarAccount:
hasCalendarAccountForOneOf:
hasCancelled
hasCategory
hasColumn:
hasColumnOnTable:named:
hasComponentName
hasConfirmedField:value:forStorageEvent:
hasContact:
hasContactDetail
hasContactDetail:forContact:
hasContactDetailKey:
hasContent
hasConversationAge
hasConversationProbability
hasConversationStats
hasCorrect
hasCount128KBTo512KB
hasCount32KBTo128KB
hasCount512KBTo2MB
hasCount8KBTo32KB
hasCreationTimestamp
hasCumulatedSubmodelsRollbackForPostDeletionPolicyPerformanceInMilliSeconds
hasCustomResponsesAfterPruning
hasDateIsCorrect
hasDaysAvailableDuringIncrementalUpdate
hasDaysProcessedDuringIncrementalUpdate
hasDeferredProcessStateChanges
hasDeletedEmailsCount
hasDeletedTokensCountToComplyToCappingPolicy
hasDetail
hasDidRegexTrigger
hasDidResponseKitTrigger
hasDocumentSource
hasDomain
hasDomainFromSenderAge
hasDomainFromSenderProbability
hasDomainFromSenderStats
hasEmailAddress:
hasEmailLanguage
hasEnd
hasEndUTCOffsetSeconds
hasErrorCode
hasEstimatedGroundTruth
hasEventEnrichment
hasExitCode
hasExtraKey
hasExtraction
hasExtractionException
hasExtractionModelVersion
hasExtractionSignatureSource
hasFloating
hasFloatingTimeZone
hasFoundIn
hasFoundInSenderCNContact
hasFoundMatchingElement
hasFromStatus
hasFullDownloadBeenRequested
hasGroupId
hasHandle
hasHarvestSource
hasHarvestedOnBattery
hasHasName
hasHashedMessageId
hasHoursSinceLastIncrementalUpdate
hasHoursSinceReference
hasIgnorablePredictedAsIgnorable
hasIgnorablePredictedAsNeutral
hasIgnorablePredictedAsSalient
hasIncomingMessage
hasIndexNamed:
hasInhumanHeaders
hasInstantMessageAddress
hasIntentResponseUserActivityString
hasInteractionBundleId
hasInteractionGroupId
hasInteractionId
hasInteractionInfo
hasInteractionTeamId
hasIsFromCongratulation
hasIsSubmodelRebuilt
hasIsUnlikelyPhone
hasKey
hasLabel
hasLastModifiedTimestamp
hasLatitude
hasListIdProbability
hasListIdStats
hasLocale
hasLongitude
hasMailboxProbability
hasMailboxTypeProbability
hasMailboxTypeStats
hasMailsProcessedDuringIncrementalUpdate
hasMetadata
hasMethod
hasMissingAttachmentPredictionPerformanceInMilliSeconds
hasMissingRecipientPredictionPerformanceInMilliSeconds
hasModel
hasNbCharactersInMailSubject
hasNbExtremelyDiscriminantTokensForIgnorability
hasNbExtremelyDiscriminantTokensForSaliency
hasNbHighlyDiscriminantTokensForIgnorability
hasNbHighlyDiscriminantTokensForSaliency
hasNbTokensInMailSubject
hasNegativeEngagement
hasNeutralPredictedAsIgnorable
hasNeutralPredictedAsNeutral
hasNeutralPredictedAsSalient
hasNonTrivialInfo
hasNumberOfLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
hasNumberOfLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
hasNumberOfPredictedAttachmentOnLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
hasNumberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
hasObserver:
hasOffset
hasOutcome
hasParentEntityType
hasPersonCCRecipientsAge
hasPersonCCRecipientsProbability
hasPersonCCRecipientsStats
hasPersonFromSenderAge
hasPersonFromSenderInDyadicConversationAge
hasPersonFromSenderInDyadicConversationProbability
hasPersonFromSenderInDyadicConversationStats
hasPersonFromSenderProbability
hasPersonFromSenderStats
hasPersonToRecipientsAge
hasPersonToRecipientsProbability
hasPersonToRecipientsStats
hasPhone
hasPhoneLabel
hasPositiveEngagement
hasPostalAddress:
hasPredictedSaliency
hasPredictedSaliencyScore
hasPrefix:
hasPreviousInteractionFromUserOnConversationInMinutes
hasPreviousInteractionOnConversationInMinutes
hasProfileFromInteraction
hasProfileFromTextMessage
hasQuality
hasReceivedOnBattery
hasRecipientFromSameDomainAsSender
hasRecurrenceRules
hasRegexLanguage
hasReservationContainerReference
hasReservationItemReferences
hasResult
hasRollbackedEmailsCountToComplyToPostDeletionPolicy
hasRollbackedSlicesCountToComplyToPostDeletionPolicy
hasSaliencyPredictionPerformanceInMilliSeconds
hasSalientPredictedAsIgnorable
hasSalientPredictedAsNeutral
hasSalientPredictedAsSalient
hasSchemaOrg
hasSenderConnectionScore
hasSignature
hasSignificantWork
hasSocialProfile
hasSource
hasSourceKey
hasSpotlightReferenceForBundleIdentifier:uniqueIdentifier:
hasStandardMailRulesStats
hasStart
hasStartUTCOffsetSeconds
hasStorageContact:
hasSubjectContentAge
hasSubjectContentProbability
hasSubjectContentStats
hasSubjectCountStatsStats
hasSubmodelsProbabilities
hasSubmodelsPruningForCappingPolicyPerformanceInMilliSeconds
hasSubmodelsStats
hasSubmodelsUpdatePerformanceInMilliSeconds
hasSuffix:
hasSupervision
hasTableNamed:
hasTimeComponent
hasTimeDifferenceFromReceptionToSaliencyInferenceInSeconds
hasTitle
hasToStatus
hasTokens
hasTooManyLongNumbers:
hasTotalNumberOfEmailsProcessedForAttachmentDetectionRoundedToClosestMultipleOf20
hasTotalNumberOfEmailsProcessedForFollowUpDetectionRoundedToClosestMultipleOf20
hasTotalNumberOfEmailsProcessedForRecipientDetectionRoundedToClosestMultipleOf20
hasTreatmentId
hasTrialMetadata
hasTrigger
hasWasKnownContact
hasWasSuggestedContact
hasWhitelistedVerbInContent:
hash
hashId
hashedValueOfString:
hashesByAddingCompatibilityHashesToHashes:forMatching:
hashesForContact:forMatching:
hashesForContactDetail:fromContact:forMatching:
hashesForCuratedContactDetail:fromContact:forMatching:
hashesForPseudoEventByKey:forMatching:
hashesForStorageContact:forMatching:
hashesForStrings:forMatching:
headerDictionaryContainsInhumanHeaders:
headerPattern
headerPattern:
headersDictionary
headersPattern
hiddenAdditionalRecipients
highPriority
highlyDiscriminantTokensForFeature:minCount:minRatio:
historicalDataRequestWithPersonHandle:startDate:endDate:
historicalDataRequests
historicalFlightInformationWithAirlineCode:flightNumber:flightDate:
historyForTesting
historyHasContact:
hmmPlausibleSignatureRange:
hmmSignatureRange:
hmmSignatureRangeWithContent:detectedData:quotedRegions:authorName:
horizontalAccuracy
horizontalUncertainty
host
hour
hours
hoursSinceReference
htmlBody
htmlBodyFromRfc822:headers:attachmentCallback:
htmlContent
htmlFromPlainTextBody:
htmlParser
human
hv_addEntriesFromHeadersDictionary:
hv_firstHeaderForKey:
hv_headerKeyFunctions
hv_headerValueFunctions
hypotheticalSuggestionImpressionsIncludingActedOn:
iataCode
iataCodeToCityDatabaseDict
icaoCode
identifier
identifiersPredicateFromCacheForPredicate:isCached:
identifyComposeWarningsFromSubject:content:attributes:toRecipients:ccRecipients:bccRecipients:originalToRecipients:originalCcRecipients:attachments:
identifyComposeWarningsFromSubject:content:attributes:toRecipients:ccRecipients:bccRecipients:originalToRecipients:originalCcRecipients:attachments:withCompletion:
identifyComposeWarningsFromSubject:content:toRecipients:ccRecipients:bccRecipients:originalToRecipients:originalCcRecipients:attachments:
identifyComposeWarningsFromSubject:content:toRecipients:ccRecipients:bccRecipients:originalToRecipients:originalCcRecipients:attachments:language:store:disableConservativeCheckRequirement:
identifyComposeWarningsFromSubject:content:toRecipients:ccRecipients:bccRecipients:originalToRecipients:originalCcRecipients:attachments:withCompletion:
identifyFollowUpWarningFromSubject:body:date:
identifyFollowUpWarningFromSubject:body:date:withCompletion:
identifyFollowUpWarningFromSubject:content:
identifyFollowUpWarningFromSubject:content:withCompletion:
identifyRangeOfEncodedWordAtIndex:
identifyWarningsFromSubject:content:toRecipients:ccRecipients:bccRecipients:originalToRecipients:originalCcRecipients:attachments:
identifyWarningsFromSubject:content:toRecipients:ccRecipients:bccRecipients:originalToRecipients:originalCcRecipients:attachments:withCompletion:
identity:
identityBasedHashesForPseudoEvent:withCreationTime:
identityBasedHashesForPseudoReminder:withCreationTime:
identityGroupSize:
identityKey
identityTypeForKeyPart:
ignorablePredictedAsIgnorable
ignorablePredictedAsNeutral
ignorablePredictedAsSalient
ignoreAfter
inMemoryPath
inReplyTo
incStatsCounterWithKey:
incrementAndUpgradeInteractionSummaryForEventKey:interactionKey:parentEntity:
incrementInt64NSNumber:forKey:
incrementKeyWithDomain:subdomain:suffix:
incrementKeyWithDomain:subdomain:suffix:action:
incrementKeyWithDomain:subdomain:suffix:action:by:
incrementKeyWithDomain:subdomain:suffix:by:
incrementKeyWithDomain:suffix:
incrementNumberOfMailsViewedBeforeSinceAvailable
incrementNumberOfMoreRecentUnreadMessageAtFirstViewTime
incrementUserEngagement:forFollowUpWarning:
incrementUserEngagement:forWarning:
incrementValuesInDomain:subdomain:type:action:withKeysAndIncrements:extraSignature:
incrementalSubmodelUpdateWithSaliencyModelConfig:store:shouldContinue:finalGroundTruthDate:withSimulatedCSSearchableItemForTesting:limit:
incrementalSubmodelUpdateWithSaliencyModelConfig:store:shouldContinue:finalGroundTruthDate:withSimulatedCSSearchableItemForTesting:limit:log:
incrementalSubmodelUpdateWithStore:limit:log:
incrementalSubmodelUpdateWithStore:shouldContinue:limit:log:
indexOfObject:
indexOfObject:inSortedRange:options:usingComparator:
indexOfObjectPassingTest:
indexOfObjectWithOptions:passingTest:
indexSearchableItems:completionHandler:
indexSetForOutputNameLabel
indexSetForOutputNameLabelForModelOutput:
indexSetWithIndexesInRange:
indexesInRange:options:passingTest:
inferProbability
inferenceVersion
inferredDate
inferredDateForDataDetectorResult:
ingest:asSalient:
ingestUnigramTokens:bigramTokens:asSalient:
init
initCancellationOfCuratedEvent:templateShortName:entity:
initCurrentAsset
initDuplicateOfCuratedEvent:withEntity:
initExtractionExceptionWithEntity:
initFileURLWithPath:
initFor:fromUnigram:andBigram:
initForDbStatsOnlyWithError:
initForLocale:tagNames:trustCoreNLP:personalNameMapping:punctuationMapping:
initForMigratorTestWithEntityDb:snippetDb:
initForRawDatabaseAccessWithEntityPath:snippetsPath:error:
initForReadingFromData:error:
initFromString:coreRange:signature:maxWindowSizeAroundCore:detectedLanguage:isIncomingMessage:score:
initIgnoringDataDetectors
initInMemory
initNewEventWithEntity:
initRealtime:wasNoBudgetItem:
initRefreshSuggestionsContactDropBox
initTemporaryForOverwritingCache:
initUpdatedEventWithEntity:curatedEventKey:
initWithActivityType:
initWithAirline:flightNumber:boardingTime:flightDuration:departureAirportGate:arrivalAirportGate:
initWithAirport:terminal:gate:
initWithAnnotationType:tags:range:text:
initWithAppleMailMessageId:snippet:core:signature:detectedLanguage:isIncomingMessage:score:startDate:startDateCore:endDate:endDateCore:
initWithArray:
initWithAssetAttachmentDictionary:attachmentLinkDetection:recipientConservativeDictionary:recipientDictionary:nicknameDictionary:followUpOnOutgoingMailsQuestionsDictionary:followUpOnOutgoingMailsAsksDictionary:followUpOnIncomingMailsDictionary:bodyAnalysisSamplingFactor:defaultTimeIntervalToStartWarningExposition:defaultTimeIntervalForAWarning:defaultTimeIntervalToEndWarningExposition:followUpWarningsParameters:
initWithAssetTypeDescriptorPath:defaultBundlePath:matchingKeysAndValues:notificationQueue:logHandle:enableAssetUpdates:
initWithAssetTypeDescriptorPath:defaultBundlePath:matchingKeysAndValues:notificationQueue:logHandle:enableAssetUpdates:purgeObsoleteInstalledAssets:
initWithAttachmentDictionary:recipientConservativeDictionary:recipientDictionary:nicknameDictionary:followUpOnOutgoingMailsQuestionsDictionary:followUpOnOutgoingMailsAsksDictionary:followUpOnIncomingMailsDictionary:
initWithBase64EncodedData:options:
initWithBase64EncodedString:options:
initWithBasePath:
initWithBiomeSummaryByMessage:biomeMessageIdByPersistentId:
initWithBlock:
initWithBlock:idleTimeout:
initWithBool:
initWithBundleId:domainId:uniqueId:
initWithBundleId:localizedShowInString:userActivity:intent:sourceURL:
initWithBundleId:personHandle:
initWithBundleIdentifier:
initWithBundleIdentifier:allowPlaceholder:error:
initWithBundleIdentifier:domainSelection:
initWithBundleIdentifier:highPriority:harvestedOnBattery:receivedOnBattery:harvestSource:
initWithBundleIdentifier:purgedUniqueIdentifiers:
initWithBundleIdentifier:uniqueIdentifiers:
initWithBytecode:
initWithBytes:length:
initWithBytes:length:encoding:
initWithBytesNoCopy:length:deallocator:
initWithBytesNoCopy:length:encoding:freeWhenDone:
initWithBytesNoCopy:length:freeWhenDone:
initWithCNContact:
initWithCNSocialProfile:
initWithCString:encoding:
initWithCalendarIdentifier:
initWithCapacity:
initWithCarrier:flightNo:depDesc:arrDesc:
initWithCategory:name:eventDuration:location:
initWithCharacters:length:
initWithCharactersNoCopy:length:freeWhenDone:
initWithChineseName:
initWithClassNameKey:
initWithClientIdentifier:
initWithCloudKitSyncGetter:
initWithCode:userActivity:
initWithCoder:
initWithConfiguration:
initWithConnection:store:
initWithContact:
initWithContact:matchTokens:matchInfo:
initWithContact:matchingRecordId:matchType:matchTokens:
initWithContactDetailWithKey:type:extractionInfo:curated:parent:value:context:contextRangeOfInterest:
initWithContacts:events:reminders:
initWithContainerID:options:
initWithContainerIdentifier:environment:
initWithContentType:
initWithContentsOfFile:
initWithContentsOfFile:options:error:
initWithContentsOfURL:error:
initWithContentsOfURL:options:error:
initWithConversations:rtRoutineManager:
initWithCount:asSalient:token:
initWithCountLimit:
initWithData:
initWithData:encoding:
initWithData:options:error:
initWithDatabase:tableName:
initWithDatabaseGetter:journalPath:
initWithDateComponents:
initWithDeadline:manager:
initWithDetectedDate:detectedTimeZone:detectedEndDate:detectedEndTimeZone:matchType:range:labelRange:labelString:valueRange:valueString:allDay:inferredDate:approximateTime:partialDate:
initWithDict:
initWithDictionary:
initWithDirectory:name:
initWithDisplayName:handles:handleIdentifier:
initWithDocument:
initWithDomain:code:userInfo:
initWithDomainsFromArray:
initWithDominantScript:languageMap:
initWithDuplicateKey:recordId:masterEntityId:title:
initWithDuplicateKey:title:
initWithDuplicateKey:title:parent:
initWithEKOptions:
initWithEmail:
initWithEmail:fullName:
initWithEmailMapping:linkMapping:
initWithEmailMessage:
initWithEnrichedTaggedCharacterRanges:modelOutput:
initWithEntity:state:duplicateEventKey:templateShortName:
initWithEntityDbPath:snippetDbPath:isEphemeral:sharedLock:executeJournals:noMigrate:
initWithEntityKey:entityType:parentKey:
initWithEntityStore:
initWithEnvironmentName:namedDelegatePort:queue:
initWithEventStore:opaqueKey:uniqueKey:extractionGroupIdentifier:
initWithExitCode:
initWithExternalId:
initWithFeatureDict:
initWithFeatureName:
initWithFeatureName:numberArrayValue:
initWithFeatureName:numberValue:
initWithFeatureName:strictLowerBound:strictUpperBound:output:
initWithFeatureName:stringArrayValue:
initWithFeatureName:stringValue:
initWithFeatureProvider:
initWithFilehandle:sizeFactor:keyLength:singleByteOffset:
initWithFilename:
initWithFilename:flags:error:errorHandler:
initWithFilename:flags:error:sgDb:
initWithFilename:withProtection:sharedLock:error:
initWithFirst:second:
initWithFirstName:middleName:lastName:fullName:prefix:suffix:recordId:origin:extractionInfo:
initWithFrame:configuration:
initWithGloballyUniqueId:
initWithGroupId:
initWithGuardedData:
initWithGuardedData:serialQueue:
initWithHandle:handleType:fullName:
initWithHarvestStore:xpcActivityManager:
initWithHead:tail:
initWithHeaderData:
initWithHelperMappingType:andLanguage:
initWithHistoricalDataRequests:error:
initWithId:origin:type:label:address:airportCode:latitude:longitude:accuracy:quality:handle:
initWithIdentifier:subject:sender:recipients:dateSent:type:
initWithIdentityKey:
initWithIdentityKey:label:normalizedValue:
initWithInMemoryStorage
initWithInMemoryStorageSparse
initWithIndexesInRange:
initWithIntent:response:
initWithIntentPersonAtDate:bundleId:handle:displayName:
initWithInteraction:fromBundleIdentifier:
initWithInteraction:identifier:fromBundleIdentifier:
initWithInteractionIdentifier:fromBundleIdentifier:
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:lodgingBusinessLocation:reservationDuration:numberOfAdults:numberOfChildren:
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:rentalCar:rentalDuration:pickupLocation:dropOffLocation:
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:reservationDuration:partySize:restaurantLocation:
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:reservedSeat:boatTrip:
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:reservedSeat:busTrip:
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:reservedSeat:event:
initWithItemReference:reservationNumber:bookingTime:reservationStatus:reservationHolderName:actions:URL:reservedSeat:flight:
initWithItemType:itemRef:
initWithJapaneseName:
initWithKVS:kvStoreIdentifier:
initWithKey:ascending:
initWithKey:value:
initWithKeyName:
initWithKeyName:searchable:searchableByDefault:unique:multiValued:
initWithKeyOptions:valueOptions:capacity:
initWithKeyPointerFunctions:valuePointerFunctions:capacity:
initWithKeysToFetch:
initWithKoreanName:
initWithL:D:I:N:W:
initWithL:D:I:N:W:bi_lstm_0_h_in:bi_lstm_0_c_in:bi_lstm_0_h_in_rev:bi_lstm_0_c_in_rev:
initWithLabel:value:
initWithLanguage:
initWithLanguage:windowLength:
initWithLatitude:longitude:
initWithLocaleIdentifier:
initWithLocation:time:title:core:bi_lstm_0_h_out:bi_lstm_0_c_out:bi_lstm_0_h_out_rev:bi_lstm_0_c_out_rev:
initWithLocationType:trigger:name:
initWithLog:isLogged:
initWithLong:
initWithLookupHintInDomain:range:labelRange:labelString:valueRange:valueString:qid:
initWithML:withMLQR:andHealthStore:
initWithMLModel:error:
initWithMachServiceName:options:
initWithMailContentEvent:contentProtection:
initWithMailContentEvent:contentProtection:htmlParser:
initWithMailCount:unigramTokenCounts:bigramTokenCounts:unigramQueriedTokensCount:bigramQueriedTokensCount:oldestTokenAge:
initWithMailCount:unigramTokenCounts:bigramTokenCounts:unigramTokensCount:bigramTokensCount:
initWithMailMessage:
initWithMailMessageKey:
initWithManager:
initWithMappings:
initWithMatchType:range:labelRange:labelString:valueRange:valueString:
initWithMatchType:range:labelRange:labelString:valueRange:valueString:postalAddressComponents:
initWithMemoryMappedPath:
initWithMessage:
initWithMessage:candidateName:
initWithMessage:ddMatch:isUnlikelyPhone:
initWithMessage:entity:enrichedTaggedCharacterRanges:modelOutput:
initWithMessage:plainTextDetectedData:enrichedTaggedCharacterRanges:modelOutput:
initWithMessageDictionary:
initWithMessageId:hasHashedMessageId:simpleMailMessage:senderConnectionScore:biomeMessageSummary:mailClientUtil:store:preLoadedFeatureNames:
initWithMessageId:hasHashedMessageId:simpleMailMessage:senderConnectionScore:biomeMessageSummary:store:preLoadedFeatureNames:
initWithMessageId:hasHashedMessageId:simpleMailMessage:spotlightIdentifier:senderConnectionScore:biomeMessageSummary:mailClientUtil:store:preLoadedFeatureNames:
initWithMessageId:hasHashedMessageId:simpleMailMessage:spotlightIdentifier:senderConnectionScore:biomeMessageSummary:store:preLoadedFeatureNames:
initWithMessageId:mailboxId:score:isSalient:creationDate:
initWithMessageId:mailboxId:score:isSalient:gteSaliency:isCounted:creationDate:
initWithMessageIdHeaderValues:accountIdentifier:
initWithMessages:
initWithMessagesConnection:store:
initWithMessagesContentEvent:contentProtection:
initWithMessagesFromDaysAgo:throughDaysAgo:limit:withBiomeData:store:useSpotlightDataForMissingBiomeData:preLoadedFeatureNames:simulatedCSSIs:
initWithMigrationObjects:
initWithModel:locale:featurizer:modelSource:
initWithName:
initWithName:boxMaker:handler:qos:
initWithName:bundleIdentifier:
initWithName:protectionClass:bundleIdentifier:
initWithName:reason:userInfo:
initWithName:value:
initWithNameMappings:minimumConfidence:confidenceMapper:tokenToIgnore:forNameDetector:
initWithNamedHandle:
initWithNewEKEventStoreGetter:callBlockWithEKEventStoreForReading:
initWithNormalizedEmail:
initWithNumberArray:
initWithNumericMapping:andSymbolicMapping:
initWithObjects:
initWithObjects:forKeys:
initWithObjectsAndKeys:
initWithOperation:
initWithOperation:contact:
initWithOperation:event:
initWithOperation:eventBatch:
initWithOperation:reminder:
initWithOptions:capacity:
initWithOutputItems:exeptionTemplates:jsMessageLogs:
initWithOutputItems:sourceMetadata:exeptionTemplates:jsMessageLogs:
initWithParametersDict:
initWithParent:item:htmlId:textConsumer:
initWithPath:
initWithPattern:
initWithPattern:options:error:
initWithPerMessageTransformer:
initWithPerson:bundleId:interactionIdentifier:groupId:date:
initWithPersonHandle:startDate:endDate:
initWithPlainText:category:dataDetectorMatches:enrichedTaggedCharacterRanges:modelOutput:fromSuggestTool:
initWithPlainText:components:
initWithPlainText:taggedCharacterRanges:
initWithPlist:chunks:context:
initWithPositiveEngagement:noEngagement:negativeEngagement:
initWithPrivateStreamIdentifier:storeConfig:
initWithProvider:boatName:boatNumber:tripDuration:departureBoatTerminalLocation:arrivalBoatTerminalLocation:
initWithProvider:busName:busNumber:tripDuration:departureBusStopLocation:departurePlatform:arrivalBusStopLocation:arrivalPlatform:
initWithProvider:trackingNumber:
initWithProvider:trainName:trainNumber:tripDuration:departureStationLocation:departurePlatform:arrivalStationLocation:arrivalPlatform:
initWithPseudoContactWithKey:parent:name:
initWithQueryString:context:
initWithQueryString:queryContext:
initWithRange:coreRange:signature:wildcardsMatches:
initWithRecordID:action:
initWithRecordId:duplicateKey:sourceKey:content:title:creationTimestamp:lastModifiedTimestamp:tags:when:locations:structuredData:state:curated:
initWithRecordId:duplicateKey:sourceKey:origin:dueDate:dueLocationType:dueLocation:dueLocationTrigger:title:reminderStatus:contactIdentifier:creationDate:
initWithRecordId:origin:parentURL:provider:trackingNumber:
initWithRecordId:origin:title:dueDateComponents:dueLocationType:dueLocation:dueLocationTrigger:sourceURL:reminderStatus:opaqueKey:uniqueKey:contactIdentifier:creationDate:
initWithRecordId:sourceUniqueIdentifier:
initWithRecordName:zoneID:
initWithRecordType:
initWithRecordType:recordID:
initWithRecordZoneIDs:
initWithRecordZoneIDs:configurationsByRecordZoneID:
initWithRegexpData:
initWithReminder:notes:
initWithRequestId:pluginIdentifier:personHandle:startDate:endDate:
initWithReservationContainerReference:reservationItemReferences:
initWithSGSqlEntityStore:
initWithSGSqlEntityStore:andEKStore:
initWithSGSqlEntityStore:andREMStore:
initWithSaliencyOverrideRules:featureNames:mean:std:groundTruthEstimatorRules:threshold:minCountToConsiderATokenAsHighlyDiscriminant:ratioToConsiderATokenAsHighlyDiscriminant:minCountToConsiderATokenAsExtremelyDiscriminant:ratioToConsiderATokenAsExtremelyDiscriminant:
initWithSalientCount:regularCount:token:
initWithScrolledToEnd:messageViewMaxDwellTime:messageViewTotalDwellTime:messageViewCount:timeBeforeViewStartSinceAvailable:numberOfMailsViewedBeforeSinceAvailable:userReplied:replyDraftStarted:forwardDraftStarted:numberOfUnreadMessageAtFirstViewTime:numberOfMoreRecentUnreadMessageAtFirstViewTime:markedAsRead:markedAsUnread:markedAsJunk:mailGotFlagged:linkClicked:
initWithSearchableItem:
initWithSeatSection:seatRow:seatNumber:seatingType:
initWithSerialized:
initWithSerializedEntityKey:entityType:serializedParentKey:
initWithServiceContext:concurrencyBehavior:backpressureHazard:
initWithServiceContext:concurrencyBehavior:backpressureHazard:extractionMode:
initWithSessionDescriptor:modelClass:
initWithSessionInfo:userInfo:frameworksToCheck:
initWithShape:dataType:error:
initWithSnippet:core:signature:detectedLanguage:isIncomingMessage:score:matchFoundInBCC:
initWithSocialProfile:
initWithSource:messageId:
initWithSource:uniqueIdentifier:
initWithSource:vector:
initWithSpanishName:
initWithStartDateComponents:endDateComponents:
initWithStore:
initWithStore:ctsManager:ekStoreProvider:contactStore:pet2Tracker:
initWithStoreIdentifier:type:
initWithStringValue:
initWithStructuredLocation:proximity:
initWithSubregexps:prefilter:
initWithSuiteName:
initWithTagSchemes:
initWithTagSchemes:options:
initWithTarget:maxDistance:
initWithTargetMapping:phoneMapping:emailMapping:addressMapping:andDateMapping:
initWithTeamIdentifier:type:userActivity:validStartDate:validEndDate:
initWithText:originalMessage:index:
initWithText:senderID:timestamp:
initWithTextMessage:
initWithTextMessage:detectedData:
initWithTimeIntervalSince1970:
initWithTimeIntervalSinceNow:
initWithTimeIntervalSinceReferenceDate:
initWithTitle:
initWithTracker:
initWithTraining:
initWithTransformer:sessionDescriptor:modelClass:
initWithType:
initWithType:categoryDescription:originBundleId:confidence:schemaOrg:participants:
initWithType:categoryDescription:originBundleId:confidence:schemaOrg:participants:eventActivities:
initWithType:content:
initWithType:extraction:context:contextRangeOfInterest:label:hasPhoneLabel:match:extractionInfo:isUnlikelyPhone:
initWithType:filename:path:
initWithType:label:address:airportCode:accuracy:quality:
initWithType:label:address:airportCode:latitude:longitude:accuracy:quality:handle:
initWithType:label:airportCode:latitude:longitude:accuracy:quality:
initWithType:range:
initWithType:start:end:
initWithURL:error:
initWithURL:title:receivedFromHandle:bundleIdentifier:groupIdentifier:documentIdentifier:documentTitle:documentDate:documentTimeInterval:receivedAt:flags:
initWithUTF8String:
initWithUniqueIdentifier:domainIdentifier:attributeSet:
initWithUniversalLink:
initWithUnsubscriptionRuleField:tokenCounts:
initWithUsername:userIdentifier:bundleIdentifier:displayName:service:teamIdentifier:
initWithUsername:userIdentifier:bundleIdentifier:displayName:service:teamIdentifier:label:extractionInfo:recordId:
initWithValidatedFormat:validFormatSpecifiers:locale:arguments:error:
initWithValue:label:type:recordId:duplicateKey:sourceKey:context:extractionInfo:
initWithVietnameseName:
initWithVirtualMachine:
initWithVocabularyIdentifier:spokenPhrase:pronunciationHint:
initWithWeeks:days:hours:minutes:seconds:
initWithWesternName:
initWithYear:month:day:hour:minute:second:timeZone:
initWithZoneName:ownerName:
initWithoutSharedInstance
initialize
initializeDatabase:withProtection:sharedLock:newDatabaseCreated:
inputDescriptionsByName
inputDictFromTaggedCharacterRanges:usingTokenMapping:forModel:
inputDictFromTaggedCharacterRanges:usingTokenMapping:forModel:pflTraining:hasEvent:
inputFromTaggedCharacterRanges:usingInputMapping:forModel:pflTraining:hasEvent:
inputFromTaggedCharacterRanges:usingTokenMapping:forModel:
inputMapping
inputStreamWithFileAtPath:
inputTokenMapping
insertEvent:
insertEventTagsAndLocations:primaryKey:
insertOrReplaceIntoTable:dictionary:onError:
insertSubject:
insertSuggestedEventCalendar
insertToken:forFeatureName:salientCount:regularCount:time:
instance
instanceForNameDetector
instantMessageAddress
instantMessageAddress:forIdentity:parent:curated:context:contextRangeOfInterest:extractionInfo:
instantMessageAddresses
int64AsNonnullNSNumberForColumnAlias:
intValue
integerValue
intent
intentClassWhitelist
intentResponse
intentResponseUserActivityString
intentResponseUserActivityString:
interaction
interactionBundleId
interactionBundleId:
interactionContactIdentifier
interactionContactIdentifier:
interactionGroupId
interactionGroupId:
interactionId
interactionId:
interactionIdentifier
interactionKey
interactionKeyForCategory:interface:actionType:
interactionKeyForInterface:actionType:
interactionTeamId
interactionTeamId:
interactionsWriteQueue
interfaceForRealtimeReminder:
interfaceWithProtocol:
internalDetectedDetails
internalEntityId
interrupted
intersectSet:
intersectsIndexesInRange:
intersectsSet:
invalidate
invalidateAndCancel
invalidatedIdentifiers
invalidatedMessageIdentifiers
inversionRateForNamingTradition:
invertedSet
invokeNewEntitiesCallbackWithEntity:
ipsosMessageWithMailMessage:store:
ipsosMessageWithTextMessage:store:
ipsosMessagesFromSearchableItems:withCompletion:
ipsos_confidence
ipsos_eventAttributes
ipsos_eventClassificationType
ipsos_eventStatus
ipsos_messageUnit
ipsos_usedBubblesCount
isAddressContext:
isAllDay
isAllDay:
isAppleMailMessageId
isApplicationMimeType
isBirthdayContext:
isCalendarMimeType
isCancelled
isCandidateForExtraction
isCapitalized:
isClassCLocked
isCommonNameWord:
isCommonVietnameseSurname:
isComplete
isCompleted
isConfirmation
isConfirmationOptionalForContent:
isConfirmedEvent:
isConfirmedEventWithoutTimeStamp:
isConfirmedReminder:
isCounted
isDNUEnabled
isDNUOnlyEnablement
isDeviceFormattedForProtection
isDifficultName:
isDissectorProcessingWithinRateLimit
isDomain
isDownloadedLocally
isDropoff
isEnabled
isEnabledWithCompletion:
isEphemeral
isEphemeralIdentifier:
isEqual:
isEqualToContactDetail:
isEqualToContactDetailKey:
isEqualToContactSharingTransformer:
isEqualToConversationFlatteningTransformer:
isEqualToConversationTurn:
isEqualToCuratedEventKey:
isEqualToDOMParserResult:
isEqualToDataDetectorMatch:
isEqualToDate:
isEqualToDeliveryKey:
isEqualToDuplicateKey:
isEqualToEmailKey:
isEqualToEntity:
isEqualToEntityMappingTransformer:
isEqualToEntityMatchingTransformer:
isEqualToEntityTag:
isEqualToIdentityKey:
isEqualToJournalEntry:
isEqualToLabeledValue:
isEqualToLocation:
isEqualToMessage:
isEqualToMessageKey:
isEqualToNameMappingTransformer:
isEqualToNumber:
isEqualToPseudoContactKey:
isEqualToPseudoEventKey:
isEqualToPseudoReminderKey:
isEqualToRawKey:
isEqualToRecordId:
isEqualToReminderDueLocation:
isEqualToResult:
isEqualToSchemaOrgKey:
isEqualToSearchableItemIdTriple:
isEqualToSet:
isEqualToSimpleMailHeaderKeyValue:
isEqualToSimpleMailMessage:
isEqualToStorageContact:
isEqualToStorageEvent:
isEqualToStorageLocation:
isEqualToStorageReminder:
isEqualToString:
isEqualToStringMappingTransformer:
isEqualToSymbolicMappingTransformer:
isEqualToTaggedCharacterRange:
isEqualToTimeZone:
isEqualToTokenDistanceMappingTransformer:
isEqualToTokenizerMappingTransformer:
isEventCandidateForURL:andTitle:containsSchemaOrg:withCompletion:
isEventCandidateForURL:title:withCompletion:
isExtraKey
isExtractedEventCategory
isFacebookBirthdayCalendar
isFamilyName:
isFieldReverseMapped
isFileURL
isFirstPerson
isFloating
isFromCongratulation
isFromDataDetectors
isFromForwardedMessage
isFromSuggestions
isFullyDownloaded
isHarvested
isInMemory
isIncomingMessage
isInhuman
isInhumanBody:
isInhumanContent
isInhumanContentNoncached
isInhumanEmailAddress:
isInhumanName:
isInhumanNamedEmailAddress:
isInhumanPerson:
isInhumanPhoneNumber:
isInstalled
isIntentResponseUserActivityString
isInteractionBundleId
isInteractionGroupId
isInteractionTeamId
isKindOfClass:
isLegalEmailAddress:
isLikePhoneNumber:
isLogged
isLowercaseStringCommonNameWord:
isMainThread
isMaybeNameContext:
isMe
isMemberOfClass:
isMessageAvailable:
isMessageOfTypeEvent:
isMigrating
isNameRequest:
isNaturalLanguageEvent
isNaturalLanguageEventAttributes
isNaturalLanguageSuggestedEventCalendar
isNegativeExample
isNull
isNullForColumnName:table:
isOthersMimeType
isPOIFilters
isPartiallyDownloaded
isPerson
isPositiveExample
isPossessive:
isPotentialEventMessage
isProbablyShortCJKName:
isProposal
isRecentlyDeleted:
isRejectedEvent:
isRejectedReminder:
isRejection
isReminderDueDateComponentsInPast:givenReferenceDate:allDay:
isReminderMetadata
isRequestFromSharedCalendarProvider:
isReservationItemReferences
isSGEntity:duplicateOfEKEvent:withStore:
isSalient
isSalientName:
isSalientNameByChars:
isSameAsOrUnifiedWithContact:
isSchemaOrg
isSenderSignificant
isSenderSupportedForMLDefaultExtraction:
isSenderSupportedForPFLTraining:
isSenderSupportedForShadowExtraction:
isSent
isStoredEncrypted
isStructuredEventCandidateForEmailDomain:
isStructuredEventCandidateForURL:title:
isSubclassOfClass:
isSubmodelRebuilt
isSubscribedHolidayCalendar
isSuggestedEventCalendar
isSupportedEntityType:
isSupportedSearchableItemBundleIdentifier:
isTemplateName
isTemplateShortName
isThirdPerson
isTriggerOptional
isTrivial
isTwoPersonConversation:
isUnifiedWithContactWithIdentifier:
isUnlocked
isUpdatableContact:
isUrl
isValidAllDayRange
isValidCancelledEvent:
isValidNewEvent:
isValidNewReminder:
isValidSuggestion:
isValidTextMessageForProcessing:
itemProps
itemReference
itemScopes
itemType
itemValue
items
journalForInMemoryDb
journalNameForDbPath:
journalWithName:
journaling
jsDictForResolveCandidates:forCategory:label:rawIndexSet:taggedCharacterRanges:
jsMessageLogs
jsMessageLogsDictionaryForMailMessage:
jsMessageLogsDictionaryForPrivacyAwareLogs:
jsonLdForItem:
jsonLdOutputFromMailMessage:
jsonLdOutputFromTextMessage:
jsonLdOutputFromURL:title:payload:extractionDate:
jsonObject
keepDirty:
keepRealtimeAsLost
keyForContactExternalId:
keyForContactUniqueId:
keyForEmail:
keyForEventKitQuery
keyForInstantMessageAddress:
keyForNormalizedEmail:
keyForNormalizedPhone:
keyForOutputName:label:
keyForPersonHandle:
keyForSocialProfile:
keyValueCacheForPath:
keysForCuratedContactDetail:ofContact:
keysForStorageContact:
keysToFetch
knownTimeZoneNames
kvCacheManager
kvsIfSyncSupported
label
labelForProbabilities:
labelOf:inLanguage:
labelRange
labelString
labelTokenIndexesForOutputName:label:
labelTokenIndexesForOutputName:label:modelOutput:
labelTokenIndexesForOutputName:label:modelOutput:maxMergeDistance:
labels
labelsWithMatchingStringsForMailMessage:
lang
language
languageCode
languageForFTSTable:
languageForLocaleIdentifier:
languagePartOfLanguageCode:
languageToUpdateEntityFTSTo
lastFollowUpWarningResultsWithLimit:includingResultsFromPreviousCall:withCompletion:
lastIndex
lastMigrationAttempt
lastModifiedDate
lastModifiedTimestamp
lastName
lastObject
lastPathComponent
lastSeenTimestampForKey:
lastSuggestionsFromMessageLock
lastSuggestionsFromMessageRequest
lastSuggestionsFromMessageResponse
laterDate:
latestChangeAnchor
latitude
latitudeAndLongitudeForAirport:withDataOffset:andFileHandle:
launchAppForSuggestedEventUsingLaunchInfo:completion:
launchCountForApp:afterDate:limit:
launchCountForBundleId:afterDate:limit:
launchCountMessageAfterDate:
launchInfoForSuggestedEventWithUniqueIdentifier:sourceURL:clientLocale:ignoreUserActivitySupport:ignoreMailCheck:completion:
legacyIOS13HashesForClassicHashes:
legacyManateeSecret
legs
length
lengthOfBytesUsingEncoding:
letterCharacterSet
levelForFactor:withNamespaceName:
likePrefix:
likelyLanguage
lineRangeForRange:
linguisticTagsInRange:scheme:options:orthography:tokenRanges:
link:to:type:strength:
linkClicked
linkMapping
listId
listIdProbability
listIdStats
loadAddressDetailsFrom:
loadAllContactDetailsForRecordId:
loadAllContactDetailsFromTableForRecordId:
loadAllContactDetailsFromTableForRecordId:type:
loadAllContactDetailsWithWhereClause:onPrep:dedupeAgainst:
loadAllDetailsFrom:
loadAllPrecomputedContactMatches
loadAllReimportRequests
loadAllSerializedContacts
loadBinaryClassificationModelFromMobileAssetForObjective:language:withBlock:
loadBirthdayDetailsFrom:
loadCNContactMatchesForContact:andGetMaxEntityId:
loadContactDetailsForRecordId:type:
loadContactDetailsWithWhereClause:onPrep:type:dedupeAgainst:recordId:
loadContactForStorageContact:usingSerializedContactCache:
loadDuplicateKeyByRecordId:
loadEmailAddressDetailsFrom:
loadEntitiesByEntityKey:entityType:resolveDuplicates:
loadEntitiesBySourceKey:entityType:resolveDuplicates:
loadEntityByKey:
loadEntityByRecordId:
loadEventByDuplicateKey:
loadEventByKeyForOldCodePathTesting:
loadEventByRecordId:
loadEventClassifierModel
loadEventClassifierModelFromPath:
loadEventForDuplicateKey:
loadEventForPrimaryKey:
loadEventForRecordId:
loadEventsWithInteractionIdentifiers:fromBundleIdentifier:
loadExtractionInfoForPrimaryKey:
loadFactors
loadFullDownloadRequestBatch:
loadHTMLString:baseURL:
loadInterdicts
loadJSFromASCIIFile:
loadLazyPlistWithBasename:
loadLevelAsBooleanFromFactor:
loadLevelAsLongFromFactor:
loadLevelAsModelPath:
loadLevelAsNumericArrayFromFactor:
loadLevelAsNumericDictionaryFromFactor:
loadLevelAsNumericFromFactor:
loadLevelAsStringArrayFromFactor:
loadLevelAsStringFromFactor:
loadMappingsForType:andLanguage:
loadMessagesToRefresh
loadModel
loadOrigin:
loadOriginByRecordId:
loadPhoneDetailsFrom:
loadReminderByKey:
loadReminderByKeyOld:
loadReminderByRecordId:
loadReminderByRecordIdOld:
loadResetInfo
loadSerializedContactForId:
loadSourceKeyByRecordId:
loadStatsCounterWithKey:
loadStorageContactByRecordId:
loadStorageContactByRecordId:error:
loadTagForPrimaryKey:
loadTrieWithFileName:
loadUnexecutedReimportRequests
loadUnqueriedReimportRequests
loadUnseenReimportItemsForRequest:
localTimeZone
locale
localeAsset
localeAssetIdentifier
localeIdentifier
localeWithLocaleIdentifier:
localizations
localizedApplicationName
localizedCapitalizedString
localizedCaseInsensitiveCompare:
localizedCaseInsensitiveContainsString:
localizedDescription
localizedLowercaseString
localizedNameWithPreferredLocalizations:
localizedStringForKey:preferredLocalization:
localizedStringForKey:value:table:
localizedStringFromPersonNameComponents:style:options:
location
locationType
locationTypeAsString:
locationTypeForEntity:
locationTypeForHandle:latitude:longitude:airportCode:address:label:
locationTypeForRealtimeEvent:
locationWithoutPrediction
locations
locationsAtIndex:
locationsCount
locationsType
lock
lockState
lodgingBusinessLocation
logActionVerb:actionType:
logAggregateSummaryForInteraction:
logAndIncrementEventCountForDictionary:
logBirthdayExtractionMetricForPerson:forDate:isFromCongratulation:withModelVersion:didRegexTrigger:didResponseKitTrigger:
logConfirmPercentAfterContactConfirmation
logConfirmPercentAfterContactDetailConfirmation
logConfirmPercentAfterContactDetailRejection
logConfirmPercentAfterContactRejection
logDKIMStatus:forPipelineEntity:
logEventExtractionForTemplateName:extractionStatus:outputExceptions:outputInfos:jsMessageLogs:jsOutputLogs:timingProcessing:
logEventInteractionForEntity:interface:actionType:
logEventInteractionForEntitySync:interface:actionType:
logEventInteractionForEventWithExternalIdentifier:interface:actionType:
logEventInteractionForEventWithUniqueKey:interface:actionType:
logEventInteractionForRealtimeEvent:interface:actionType:
logEventInteractionForRealtimeEvent:parentEntity:interface:actionType:
logEventInteractionForRealtimeEventSync:parentEntity:interface:actionType:
logFailedEventExtractionForMessage:category:missingEntities:timingProcessingInMs:
logFailedEventExtractionForMessage:failureCode:
logFailedExtractionWithClassification:missingEntities:mlSummary:shadowExtraction:timingProcessingInMs:forMessage:parentEntity:
logFollowUpStatsAndSetting
logMLExtractionForSchema:mergedSchemaAndDiff:parentEntity:timingProcessingInMs:eventClassification:mailMessage:shadowExtraction:mlDefaultExtraction:
logMLInteractions:context:mlDefaultExtraction:
logMLMessageEventExtractionForEntitySync:interface:actionType:
logMLMessageEventExtractionForSchema:message:category:timingProcessingInMs:
logMLMessageEventExtractionForTemplateName:extractionStatus:outputInfo:outputExceptions:timingProcessing:
logMLMessageEventExtractionInteractions:context:
logMLMessageEventInteractionForEntity:interface:actionType:
logMessage:
logMetricAutocompleteResult:recordId:contactIdentifier:bundleId:
logMetricAutocompleteUserSelectedRecordId:contactIdentifier:bundleId:
logMetricContactCreated:contactIdentifier:bundleId:
logMetricContactSearchResult:recordId:contactIdentifier:bundleId:
logMetricContactSearchResultSelected:contactIdentifier:bundleId:
logMetricSearchResultsIncludedPureSuggestionWithBundleId:
logMetricSuggestedContactDetailShown:contactIdentifier:bundleId:
logNewInteractionSummaryWithDictionary:
logNewInteractionWithDictionary:
logOrStageWithSaliency:
logPrewarmWithLastPrewarmTime:
logReminder:actionType:
logReminderExtractionFromEntity:interface:actionType:dueLocation:dueDateComponents:extractionStatus:timingProcessing:
logReminderInteractionFromEntity:usingStore:interface:actionType:
logReminderInteractionFromReminder:interface:actionType:
logReminderTitle:actionType:
logSuggestionInteractionForRecordId:interface:actionType:
logUnknownContactInformationShownCount:notShownCount:bundleId:
logUserCreatedReminderTitle:
logUserCreatedReminderTitle:withCompletion:
logWarningSignatureStats
loggedExtractions
loggedExtractionsDescription
loggedExtractionsEventsCount
loggedInteractions
loggedInteractionsDescription
loggedInteractionsSummary
loggedInteractionsSummaryDescription
loggingIdentifier
logsToSend
longLongValue
longValue
longitude
lookForNicknamesInSentMailsAndStore:shouldContinue:
mailAddressIsAccountOwner:
mailAppUsageLevel:
mailAttachmentHistogramType
mailAttachmentHistograms
mailAttachmentHistogramsCount
mailConversationIdentifier
mailCount
mailGotFlagged
mailIntelligenceSPILogging
mailIntelligenceStagedLogsForMessageId:
mailItemIsInSent:
mailItemIsInTrash:
mailItemIsValid:
mailItemMessageIdHeaderValues:
mailMessage
mailMessageID
mailboxId
mailboxIdentifiers
mailboxProbability
mailboxStats
mailboxTypeProbability
mailboxTypeStats
mailingList
mailingListId:
mailsProcessedDuringIncrementalUpdate
mainBundle
make
makeInterdictsForBlob:withContactStore:
map:f:
mappedArrayBufferForFileName:
mappings
mappingsForType:andLanguage:
markEntityAsDupeByRecordId:
markFinished
markLostSpotlightReferencesWithBundleIdentifier:uniqueIdentifiers:
markMailIntelligenceStagedLogsAsLoggedAndClearLogPayloadForMessageId:
markMessagesFound:
markMessagesLost:
markMessagesUndisplayablyLost:
markReimportItemAsSeenByReceiverWithBundleId:uniqueId:
markReimportItemsAsSeenByReceiverWithBundleId:items:
markReimportRequestAsExecutedWithRequestId:
markedAsHarvested
markedAsJunk
markedAsRead
markedAsUnread
masterEntityIDsForMasterEntityQuery:bindings:
masterEntityId
masterEntityIdForContactOrContactDetailRecord:
match
matchDate
matchForString:withinRange:
matchRecentContact:store:
matchType
matchesForString:
matchesForString:withinRange:onlyFirstMatch:
matchesInString:options:range:
matchesString:
matchesUtf8:
matchinfoDataWithEntityId:detailEntityId:matchinfoData:
matchingContacts
maxDistance
maxIdForTable:
maxKnownDbVersion
maxMergeDistanceForSection:label:
maxPromptWindowSeconds
maxReplyLength
mayHaveSentMessageToEmail:
mayHaveSentMessageToHandle:
md5Hash:
mean
merge:
mergeAll:
mergeColumn:intoColumn:
mergeComponent:usingBaseDateComponents:withDateComponents:
mergeContact:withContact:
mergeDetectedDateComponents:
mergeDueLocations:
mergeFallbackSchema:parentEntity:
mergeFrom:
mergeIntoEKEvent:withStore:preservingValuesDifferentFrom:
mergePostalAddressComponents:
mergeSchemas:withExpectedSchemas:
mergeSchemas:withExpectedSchemas:reply:
mergeTaggedCharacterRanges:usingBaseTaggedCharacterRanges:extraTags:tagOverrides:alignWithGroundTruth:
mergeTagsFromTaggedCharacterRanges:withTaggedCharacterRanges:
messageAvailableTime
messageEventCategoryForCategoryString:
messageFetchTime
messageForObjectID:
messageForSearchableItemIdentifier:
messageHarvestQueue
messageId
messageIdForBundleIdentifier:uniqueIdentifier:
messageIdHeaderValuesFromHeaders:
messageIdWithoutBrackets
messageIdentifier
messageIdentifiersGeneratingContact:
messageIdsForBundleIdentifier:domainIdentifierGlobs:limit:
messageIdsForBundleIdentifier:limit:
messageIdsForBundleIdentifier:uniqueIdentifiers:
messageKey
messageObjectIDForURL:
messageProcessingLimit
messageRepository
messageSeparatorPattern
messageSubjectDetectedData
messageUnits
messageViewCount
messageViewMaxDwellTime
messageViewTotalDwellTime
messageWithEmailKey:
messageWithIPMessage:
messageWithIdentifier:error:
messageWithMessageId:fromSource:
messageWithSearchableItem:
messages
messagesAdded:
messagesAppUsageLevel:
messagesBannerLimit
messagesDeleted:
messagesFound:
messagesFoundAfterUndisplayablyLost:
messagesLost:
messagesToRefreshWithCompletion:
messagesUndisplayablyLost:
metadata
method
methodForSelector:
metricsContactDetailFoundIn
metricsContactDetailOwner
middleName
middlename
migrateDatabases
migrateFromKVS:withCompletion:
migrateFromStore
migrateToVersion:
migration_AddAuthorColumnIfMissing
migration_AddNewishTablesIfMissing
migration_ConvertContentAndDupKeyHashesToBlobs
migration_DeduplicateIdentityPhones
migration_DropMessagingTermsWithPhoneExtensions
migration_FixUpColumnsForDevicesWhoMissedTheImprovedLegacyMigration
migration_FixupMergeGroups
migration_RecreateFTSTableWithITS
migration_RemoveEntityReferencesWithoutBundleIdentifier
migration_createFeaturesTable
migration_createFollowUpTable
migration_createKVTable
migration_createSignatureStatsTable
migration_deleteEmergencyExtractions
migration_deleteInteractions
migration_deleteInternalExtractionsFromML
migration_deleteLegacyMessages
migration_deleteNilDateEvents
migration_deleteSerializedContacts
migration_newContactDetailsSchema
migration_newEventsSchema
migration_newRemindersSchema
migration_rebuildFTSWithDetailEntityIDDocIDs
migration_reimport
migration_separateMessageEntities
migration_separateMessageSnippets
migrations
mimeCategory
minCountToConsiderATokenAsExtremelyDiscriminant
minCountToConsiderATokenAsHighlyDiscriminant
miniSignatureRange:
minusSet:
minute
missingAttachmentAtIndex:
missingAttachmentPredictionPerformanceInMilliSeconds
missingAttachmentType
missingAttachments
missingAttachmentsCount
missingRecipientAtIndex:
missingRecipientPredictionPerformanceInMilliSeconds
missingRecipientType
missingRecipients
missingRecipientsCount
mobileAssetsEnabled
mode
modeAsString:
model
modelAsString:
modelClass
modelClassForObjective:
modelDescription
modelFeatureNames
modelFeatureStandardizationMeans
modelFeatureStandardizationStandardDeviations
modelForPath:modelClass:
modelFromMobileAssetForEntity:type:language:class:
modelFromMobileAssetForName:language:
modelGroundTruthFeatureLowerBounds
modelGroundTruthFeatureNames
modelGroundTruthFeatureUpperBounds
modelGroundTruthOutputs
modelGroundTruthVersion
modelInferenceVersion
modelInferences:
modelInferences:pflTraining:hasEvent:
modelOutput
modelOutputFromOutputMapping:modelOutput:modelInput:
modelOutputSummary
modelOutputSummary:
modelPath
modelPathForCurrentEnrollment
modelPathForExperimentId:treatmentId:deploymentId:
modelPathForTriClient:andNamespace:
modelSource
modelVersion
modelWithConfigPath:binPath:
modelWithContentsOfURL:configuration:error:
modelsDirectoryName
month
mostRecentParentKeyForDuplicateKey:
moveItemAtPath:toPath:error:
multiArrayConstraint
mutableBytes
mutableCopy
mutableSetForKey:
naiveBayesModelQueryResultForFeature:unigramTokens:bigramTokens:
name
nameComponents
nameDetectorRules
nameForActivityId:
nameForDataDetectorMatch:withValue:
nameFromEmail:
nameMappingForToken:withConfidence:
namePayload:
nameSimilarity:and:
nameStringFromEmailAddress:
namedEmailAddressWithCSPerson:
namedEmailAddressWithFieldValue:
namedEmailAddressesWithFieldValues:
namesApproximatelyMatch:and:
namesApproximatelyMatch:and:threshold:
namesForAirport:
namesForAirport:withDataOffset:andFileHandle:
namesForDetail:limitTo:prependMaybe:onlySignificant:withCompletion:
namesForDetailCacheSnapshotsWithCompletion:
namesFromTagger:
nanosecond
naturalLanguageEvent
naturalLanguageEventAttributes
naturalLanguageEventTypeIdentifier:
naturalLanguageSuggestedEventCalendar
nbCharactersInMailSubject
nbExtremelyDiscriminantTokensForIgnorability
nbExtremelyDiscriminantTokensForSaliency
nbHighlyDiscriminantTokensForIgnorability
nbHighlyDiscriminantTokensForSaliency
nbTokensInMailSubject
needsFullSync
needsMigration
needsSourceVerification
negativeEngagement
neutralPredictedAsIgnorable
neutralPredictedAsNeutral
neutralPredictedAsSalient
newByAdding:asSalient:
newPrivateStreamDefaultConfigurationWithStoreBasePath:
newTestingInstanceWithSharedKVS:
newTransformerInstanceForLanguage:
newlineCharacterSet
nextMessage:
nextMessage:entity:
nextObject
nextPendingGeocode
nickNameRegex
nickNamesFrom:
nickname
nicknameCSSearchQueryContextFetchAttributes
nicknameDetectionRegexes
nicknamesForName:
nilEntities:
noEngagement
nonPersistentDataStore
nonZeroColumnsForDomain:withColumns:
nonZeroColumnsForDomains:withColumns:
nonnullNSStringForColumn:
nonnullNSStringForColumnAlias:
nonnullNSStringForColumnName:table:
noopWithCompletion:
normalizeHandleForRecipientFilterAndRemoveFromDetailsCache:
normalizeLowercaseWord:
normalizeWord:
normalizedDigits:
notes
notificationCount
notificationFromRemoteNotificationDictionary:
notificationQueue
notificationType
notificationWithName:object:userInfo:
notificationsAllowListOverride
notifyWhenFlushed:
nsDataFromSignature:
null
numberArray
numberArrayValue
numberMatchesContactsForm:
numberMatchesContactsForm:amongContactsWithIdentifiers:
numberOfDaysBetweenDate:andDate:
numberOfExtractions
numberOfLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
numberOfLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
numberOfMailsViewedBeforeSinceAvailable
numberOfMoreRecentUnreadMessageAtFirstViewTime
numberOfNonZeroValues
numberOfPredictedAttachmentOnLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20
numberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20
numberOfRanges
numberOfRowsAssociatedWithDomain:
numberOfRowsInTable:
numberOfUnreadMessageAtFirstViewTime
numberValue
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedChar:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
numberWithUnsignedShort:
numericMapping
numericValue
objCType
objectAtIndex:
objectAtIndexedSubscript:
objectEnumerator
objectForKey:
objectForKeyedSubscript:
objectID
objectsPassingTest:
observeValueForKeyPath:ofObject:change:context:
observers
offset
offsetInFile
oldestTokenAge
onlyShowSignificantNLEvents
onlyShowSignificantPseudoContacts
opaqueKey
open
openURL:configuration:completionHandler:
openUserActivity:usingApplicationRecord:configuration:completionHandler:
operatingSystemVersion
operation
operationCount
operatorCarrierCode
operatorFlightNumber
optimize:
optionsWithRequestedRepresentationType:networkUsage:
optionsWithRequestedRepresentationType:networkUsage:includeSuggestions:
orPredicateDescriptorWithDescriptors:
orderedSetWithObjects:
origin
originBundleId
originForDuplicateKey:entity:parent:store:
originForDuplicateKey:sourceKey:store:
originFromRecordId:completion:
originTypeForEntityType:
originWithType:sourceKey:externalKey:bundleId:fromForwardedMessage:
originWithType:sourceKey:externalKey:fromForwardedMessage:
orphanEvent:
outcomeAsString:
output
outputConfig
outputExceptionsFromOutput:
outputFromPackedJSMailMessage:
outputFromPackedJSSchema:
outputFromPackedJSTextMessage:
outputItems
outputLogsForClassification:
outputMapping
outputStreamToFileAtPath:append:
packedJSInteractionFromInteraction:bundleIdentifier:creationTimestamp:
packedJSMailMessageFromMailMessage:
packedJSMailMessageFromMailMessage:context:
packedJSSchemaFromSchemaOrgItems:
packedJSTextMessageFromTextMessage:
packedJSURLFromURL:title:payload:
packedJSURLFromURL:title:payload:creationTimestamp:
pageCount
parMapOnQueue:concurrencyLimit:input:f:
parallelPipeline:
parent
parentAccount
parentEntityType
parentKey
parentKeysForDuplicateKey:
parse:
parseHTML:
parseHTML:reply:
parseHeaders:
parseInteraction:bundleId:
parseMicrodataToJsonLd:error:
parseParameterizedHeaderValue:
parseRfc822:
parseRfc822Headers:htmlContent:source:
parsecDomain
parsecFlightCachingAPIBaseURL
parsecWikidataQid
partialDate
partialDateForDataDetectorResult:
participantCount:
participants
partySize
path
pathComponents
pathExtension
pathForResource:ofType:
pathForResource:ofType:inDirectory:
pathForResource:ofType:inDirectory:forLocalization:
pathHasFutureDbSchema:
patternData
patternDict
patternInstances
patterns
patternsForClass:
patternsForIdentifier:
pauseCacheEvictionTemporarily
pauseIfNeededAndReturnRetryEligibilityForError:
payloadCountForKey:
payloadForDomain:
payloadForString:
payloadForString:range:
payloadForUTF8String:length:
payloadLengthForKey:
payloadToOutputWithEntryPoint:arguments:
payloadToOutputWithEntryPoint:arguments:reply:
payloadWithStartChar:andSize:
pendingGeocode
pendingVerification
performContactDetailCacheRebuildActivity:
performDatabaseCheck
performIntegrityCheck
performIntegrityCheckOnly
performMaintenanceWithShouldContinueBlock:
performRecentsSearch:operationQueue:completion:
performRecentsSearch:queue:completion:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performTask:forPluginID:completionHandler:
performedAction:forApp:onContact:
performedAction:onDetail:forContact:
performedAction:onEventInCalendar:
performedAction:onRecordForContact:
personCCRecipientsAge
personCCRecipientsProbability
personCCRecipientsStats
personExistsInContacts:name:handle:
personFromSenderAge
personFromSenderInDyadicConversationAge
personFromSenderInDyadicConversationProbability
personFromSenderInDyadicConversationStats
personFromSenderProbability
personFromSenderStats
personHandle
personToRecipientsAge
personToRecipientsProbability
personToRecipientsStats
pet2Tracker
phone
phoneMapping
phoneNumber
phoneNumber:forIdentity:parent:curated:context:contextRangeOfInterest:extractionInfo:
phoneNumber:label:extractionInfo:recordId:
phoneNumberWithStringValue:
phoneNumbers
phoneTags
phones
photoPath
pickupLocation
pipelineEntity
placeCorruptionMarker
placemarkWithLocation:name:postalAddress:
plainText
plainTextDetectedData
plainTextSigRange
plainTextStringsByLabelInTaggedCharacterRanges:inPlainText:
planReceivedFromServerWithPayload:completion:
planReceivedWithPayload:error:
planReceivedWithRecipe:attachments:error:
pluginEndDeletion:
pluginEndProcessingSearchableItem:
pluginIdentifier
pluginIdentifiers
pluginStartDeletion:
pluginStartProcessingSearchableItem:
pluginStartSetup:
poiFilters
poiFilters:
pointerValue
posTaggerNouns
positiveEngagement
possibleNameStringFromEmailAddress:
postHistoricalFlightInformationWithAirlineCode:flightNumber:flightDate:andPayload:
postNotificationName:object:userInfo:deliverImmediately:
postalAddress
postalAddress:components:label:extractionInfo:recordId:
postalAddressComponents
postalAddressFromString:
postalCode
powerStateWithCompletion:
precomposedStringWithCanonicalMapping
predicate
predicateDescriptorForRemindersWithCompleted:
predicateDescriptorForRemindersWithDueDateBetween:and:
predicateDescriptorForRemindersWithTitleContains:
predicateForContactsMatchingEmailAddress:
predicateForContactsMatchingFullTextSearch:containerIdentifiers:groupIdentifiers:
predicateForContactsMatchingName:
predicateForContactsMatchingPhoneNumber:
predicateForContactsWithIdentifiers:
predicateForEventCreatedFromSuggestionWithOpaqueKey:
predicateForEventsWithStartDate:endDate:calendars:
predicateForEventsWithStartDateAfter:
predicateForEventsWithStringValue:
predicateForKey:inCollection:
predicateSatisfyingAllSubpredicates:
predicateSatisfyingAnySubpredicate:
predicateWithBlock:
predicateWithFormat:
predict:
predictForInput:
predictLabelForInput:
predictedCCEmailAddressesWithToAddresses:ccAddresses:fromAddress:date:bounds:completion:
predictedLabelHypothesesForString:maximumCount:
predictedMissingElementScore
predictedSaliency
predictedSaliencyAsString:
predictedSaliencyScore
predictedToEmailAddressesWithToAddresses:ccAddresses:fromAddress:date:bounds:completion:
predictionFromFeatures:error:
preferences
preferredLanguages
preferredLocalizationsFromArray:forPreferences:
preferredName
preferredUniqueIdentifier
prefilterNameMatchTerms
prefix
prefixForForIdentityKey:
prematchedContactIdentifiers
prepAndRunNonDataQueries:onError:
prepAndRunQuery:onPrep:onRow:onError:
prepAndRunSQL:onPrep:onRow:onError:
prepMigrator
prepQuery:onPrep:onError:
prepareForRealtimeExtraction:
prepareSqlStoreInMemory
prepareSqlStoreInMemoryByClearingExistingStore:
preprocessDomParserResult:subject:epoch:category:labelsWithMatchingStrings:
preprocessHTML:subject:epoch:category:labelsWithMatchingStrings:
preprocessPackedSGMessage:
preprocessWithoutXPCForHTML:subject:epoch:category:labelsWithMatchingStrings:
prettyName:
prettyNamesReverseMapping
preventUnsubscriptionOpportunitiesSuggestionsForField:toValues:withCompletion:
previousInteractionFromUserOnConversationInMinutes
previousInteractionOnConversationInMinutes
primaryICloudCalendarAccount
primaryRecipients
priorScore
privacyAwareLogsForMLExtractions:
privacyAwareLogsForMLExtractions:reply:
privacySalt
privateCloudDatabase
privateGroupsCount
processContactEnrichment:recordId:
processConversation:options:
processConversation:threadLength:options:
processIdentifier
processInfo
processInteraction:bundleIdentifier:protectionClass:
processMailMessage:headers:pipeline:context:harvestMetrics:
processNewConfirmOrRejectEventHashes:
processNewConfirmedOrRejectedReminderHashes:
processPseudoContactEntity:recordId:
processSearchableItem:
processSearchableItem:harvestMetrics:
processSearchableItem:pipeline:context:
processSearchableItem:pipeline:context:harvestMetrics:
processSearchableItemForTesting:
processStateChanges
processTextMessage:pipeline:context:harvestMetrics:
processTextMessageConversation:threadLength:
processUserAction:searchableItem:
processingLanguageForContent:
prodid
profanityInTokens:forLocaleIdentifier:
profiles
promptJoiningString
properties
propertiesForName:
propertyListWithData:options:format:error:
propertyName
protection
protocol
provider
providerForString:
providerName
proxyArray
pruneEntitiesOlderThan:suspensionHandler:
pruneEntitiesOlderThan:suspensionHandler:batchSize:
pruneEntitiesOlderThanOneYearWithSuspensionHandler:
pruneLostMessagesWithSource:count:
pruneMailIntelligenceOlderThanOneYearWithSuspensionHandler:
pruneNLEventEntitiesOlderThan:
pruneNLEventEntitiesOlderThanTwoWeeks
pruneReminders
pseudoContactKey
pseudoContactVcardDirectory
pseudoEventKey
pseudoReminderKey
publisherFromStartTime:
punctuationCharacterSet
purgeDeletedEmailsReferencesFromStore:
purgeOldNicknameMappingRecords
purgeOldTokensFromStore:
purgeSearchableItemsWithIdentifiers:bundleID:
purgeSpotlightReferencesWithBundleIdentifier:uniqueIdentifiers:completion:
purgeTokensToMatchCappingPolicyFromStore:
purgeTokensWhichLastUpdateWasBefore:
purgeTokensWhichLastUpdateWasBefore:shouldContinue:
purgeUniqueIds
pushAll:
pushConfirmedEventFields:
pushConfirmedEventWithoutTimestampFields:
pushConfirmedEvents:
pushConfirmedEventsWithoutTimestamp:
pushConfirmedReminders:
pushContacts:
pushEmptyHashesForTestingKey:
pushRejectedEvents:
pushRejectedReminders:
pushResetInfo:
pushStorageDetails:
pushValue:toDistKeyWithDomain:suffix:
pushValue:toDistKeyWithSuffix:
pushValueForDistributionKeyWithDomain:subdomain:suffix:action:value:
queriesToSkipFromEmptyToVersion:
queryEmailsFromDaysAgo:throughDaysAgo:fetchAttributes:filterQuery:queryString:bundleIds:spotlightTimeOut:withError:
queryForPersonHandle:startDate:endDate:contentTypes:
queryFromDaysAgo:throughDaysAgo:limit:withError:handler:
queryFromDaysAgo:throughDaysAgo:limit:withError:simulatedCSSIs:handler:
queryItemWithName:value:
querySentMailsForNicknameMatchingFromDaysAgo:throughDaysAgo:limit:handler:
quickTypeTriggerForContext:localeIdentifier:modelConfigPath:espressoBinFilePath:
quickTypeTriggerForContext:localeIdentifier:modelConfigPath:espressoBinFilePath:useContactNames:
quotedRegionStartPattern
quotedRegions
quotedRegionsFrom:isAOSPMail:foundToEndOfMessage:
radius
raise
raise:format:
rampId
randomlyNamedInMemoryPathWithBaseName:
range
rangeAtIndex:
rangeOfBodyFromRfc822:
rangeOfCharacterFromSet:
rangeOfCharacterFromSet:options:range:
rangeOfData:options:range:
rangeOfFirstMatchInString:options:range:
rangeOfHeadersFromRfc822:
rangeOfSenderName:inRange:restrictLength:forMessage:
rangeOfSenderNameComponents:withFullname:inSubstring:
rangeOfString:
rangeOfString:options:
rangeOfString:options:range:
rangeOfUnit:startDate:interval:forDate:
rangeValue
rangeWithGregorianStartComponents:endComponents:
rangeWithName:
rangeWithStart:startTimeZone:end:endTimeZone:
rangeWithStartDate:startTimeZone:endDate:endTimeZone:
rankedGlobalSuggestionsFromContext:contactsOnly:
rateLimitInterval
ratioToConsiderATokenAsExtremelyDiscriminant
ratioToConsiderATokenAsHighlyDiscriminant
rawValueOrDataForKey:
rawValuesForKey:
re2WithRegexp:
re2WithRegexpData:
re2WithRegexpDataLazy:
re2WithRegexpLazy:
re2WithSubregexps:
re2WithSubregexps:prefilter:
reMatched:
reactAfterChangesToKeyPath:ofObject:usingBlock:
read
readCachedAccounts
readDataOfLength:
readFrom:
readObjectWithPlist:chunks:context:
readTransaction:
readTransactionWithHandle:block:
realtimeContactForFields:updatedFields:addedToCuratedContact:
realtimeContactForNewContact:
realtimeContactIsSignificant:
realtimeContactIsSignificantOrSignificanceIsDisabled:
realtimeContactWithContactStore:forPseudoContact:error:
realtimeContactWithContactStore:forPseudoContact:fromEntity:error:
realtimeEventForCanceledEvent:eventIdentifier:harvested:
realtimeEventForDuplicateEvent:eventIdentifier:harvested:
realtimeEventForExtractionExceptionWithSourceMessageId:
realtimeEventForNearDuplicateEvent:harvested:
realtimeEventForNewEvent:
realtimeEventForNewEvent:harvested:
realtimeEventUpdateToEvent:withNewValues:harvested:
realtimeSuggestionsForMailOrMessageWithHash:options:completion:completionDelivery:providedBy:searchableItem:dissectIfNecessary:isTextMessage:
realtimeSuggestionsFromURL:title:HTMLPayload:extractionDate:withCompletion:
rebuildContactDetailsCacheWithShouldContinueBlock:
rebuildIdentityTables
rebuildNamesForDetailCache:
receivedAt
receivedFromHandle
receivedOnBattery
recentCalls
recentURLsWithLimit:
recentURLsWithLimit:withCompletion:
recentlyHarvestedDetailLock
recentsContainSomeOfEmails:phoneNumbers:instantMessageAddresses:
recipient
recipientConservative
recipientConservativeDetectionRegexes
recipientDetectionRegexes
recipients
recordBannerConfirmedWithContact:proposedCNContact:confirmedCNContact:inApp:confirmationUI:pet2Tracker:
recordBannerConfirmedWithEvent:proposedEKEvent:confirmedEKEvent:inApp:
recordBannerRejectedWithEvent:inApp:
recordBannerShownWithContacts:events:inApp:
recordBirthdayExtractionAccuracy:withOffset:withModelVersion:isFromCongratulation:didRegexTrigger:didResponseKitTrigger:
recordConfirmedForContact:
recordContactDetailEngagementWithResolution:detailType:extractionType:modelVersion:confirmRejectUI:pet2Tracker:
recordConversationTurnWithContact:received:curated:throughApp:withDetailName:withDetailExtraction:
recordExtractionOutcome:forDetectionsInMessage:signatureRange:isDDSignature:
recordExtractionOutcome:fromMessage:foundInSignature:isDDSignature:detection:
recordExtractionOutcome:fromMessage:foundInSignature:isDDSignature:match:foundInCNContact:modelVersion:isUnlikelyPhone:
recordExtractionOutcome:fromMessage:foundInSignature:isDDSignature:match:modelVersion:isUnlikelyPhone:
recordID
recordId
recordIdForContactDetailWithRowId:
recordIdForContactWithRowId:
recordIdForEmailWithRowId:
recordIdForEventWithRowId:
recordIdWithInternalEntityId:
recordIdWithNumericValue:
recordIdWithTableId:rowId:
recordInteractionForEventWithInterface:actionType:harvestedEKEvent:curatedEKEvent:
recordInteractionForEventWithInterface:actionType:harvestedSGEvent:curatedEKEvent:
recordInteractionIgnoredWithReason:
recordMappingFromNickname:toEmailAddress:
recordMappingFromNickname:toEmailAddress:withDateOfMatch:
recordMaybeContactFrom:withVersion:
recordMessageInChat:
recordName
recordRejectedContact:inApp:rejectionUI:pet2Tracker:
recordRejectedForContact:
recordSelfIdMatchWithPatternType:patternHash:nameTokenCount:nameClassification:messageIndex:
recordSelfIdModelScore:model:supervision:
recordSentContactDetailWithMessage:match:found:
recordSuccessfulMigration
recordType
recordWithTimezoneValue:datetimeType:
recordZoneId
recycleColumn:asColumn:
referenceWithBundleId:domainId:itemIds:
refreshAssetPath
refreshEnrollmentInformationForNamespace:
refreshRolloutIdentifiersForNamespace:
refreshSuggestionsContact:
regex2ForKey:
regexBelongsToSender
regexDoesNotBelongToSender
regexFromJoinedArray:wordBoundary:
regexLanguage
regexesImmuneToDeath
regexpIdsThatMightMatchUtf8:
regionAsset
regionAssetIdentifier
registerActivitiesWithSystem
registerAndLinkIdentity:recordId:phones:socialProfiles:email:curated:
registerAndLinkIdentity:recordId:phones:socialProfiles:email:curated:isSent:
registerBlockOnSuggestionsSettingsChange:
registerCachePrecomputationWithCTS
registerChangeHistoryClientIdentifier:error:
registerForActivity:handler:
registerForCTS
registerForCoreSpotlightIndexing
registerForLockStateChangeNotifications:
registerForProactiveHarvesting
registerInteractionConsumer:levelOfService:
registerJournalUnlockHandler
registerMailConsumer:levelOfService:
registerNotificationObserver
registerOnUpdateBlock:
registerRemindersConsumer:levelOfService:
registerSentMailMessage:
registerSentTextMessage:
registerURLFeedback:absoluteURL:
registerURLFeedback:absoluteURL:withCompletion:
registerUpdateHandler:
regularCount
regularExpressionWithPattern:options:error:
regularScore
reimportRequestDBStats
reimportRequestsContainBundleIdentifier:uniqueIdentifier:
reindexSearchableItemsWithMinimumEntityId:searchableIndex:acknowledgementHandler:reindexCount:
rejectContact:
rejectContact:confirmRejectUI:completion:
rejectContactByRecordID:error:
rejectContactDetailByRecordID:error:
rejectContactDetailKey:
rejectContactDetailRecord:confirmRejectUI:completion:
rejectEvent:
rejectEvent:completion:
rejectEventByRecordId:completion:
rejectEventByRecordId:error:
rejectEventFromExternalDevice:
rejectEventFromOtherDevice:
rejectEventFromThisDevice:
rejectFieldValuesForRecordId:
rejectHashesForOpaqueKey:forMatching:
rejectRealtimeContact:
rejectRealtimeContact:error:
rejectRealtimeEvent:error:
rejectRealtimeReminder:completion:
rejectRecord:confirmRejectUI:completion:
rejectReminderByKey:error:
rejectReminderByRecordId:completion:
rejectReminderFromExternalDevice:
rejectReminderFromOtherDevice:
rejectReminderFromThisDevice:
rejectStorageEvent:
rejectStoredEvent:error:
rejectStoredReminder:error:
rejectedEventHashes
rejectedReminderHashes
relatedContentItems
releaseDissectorLock
releaseInstanceAndWaitForDealloc:
reload
reminder
reminderAlarmTriggeredForRecordId:completion:
reminderAlarmTriggeredForRecordId:error:
reminderAlarmTriggeredForStorageReminder:error:
reminderAlarmTriggeredFromThisDevice:
reminderDuplicateKeyForEntityId:
reminderEnrichments
reminderEntityIdForDuplicateKey:
reminderEntityIdForPrimaryKey:
reminderHasDuplicate:usingStore:
reminderHash:
reminderInputMapping
reminderMetadata
reminderMetadata:
reminderOriginForPrimaryKey:
reminderOutputMapping
reminderOverrides
reminderPredicateForReminder:
reminderPrimaryKeyForEntityId:
reminderSourceKeyForDuplicateKey:
reminderStatus
reminderTitleForContent:
reminderTitleForContent:withCompletion:
reminderTitleFromMessages:forLanguage:
reminders
remindersCreatedBetweenStartDate:endDate:
remindersTestingPipeline
remindersTestingPipelineWithCustomReminderDissector:
removeAllObjects
removeAllStoredPseudoContacts
removeAllStoredPseudoContactsWithCompletion:
removeConfirmationHistoryForEntityWithOpaqueKey:creationTimestamp:
removeConfirmationHistoryForEvent:
removeContact:
removeDKIMSignatureHeaders:
removeDependency:
removeEvent:span:commit:error:
removeExternalEnrichmentAtIndex:
removeFromList
removeIndex:
removeIndexes:
removeInteractionsSummaryLogsFromLogs:
removeItemAtPath:error:
removeLastObject
removeNotificationObserver
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObjectsAtIndexes:
removeObjectsInArray:
removeObjectsInRange:
removeObserver:forKeyPath:context:
removeSnippetsForEntities:
removeStringFromNoContactsCache:
removeSuggestedEventCalendar
removeTag:
rentalCar
rentalCompanyName
rentalDuration
replaceBytesInRange:withBytes:length:
replaceCacheOfType:block:
replaceCharactersInRange:withString:
replaceDetailsInContact:onDiskContact:
replaceOccurrencesOfString:withString:options:range:
replaceTzid:inDocument:fromOriginal:withBaseLength:withEventRange:
replyAttributionPattern
replyDraftStarted
reportDbStats
reportMailIntelligenceFollowUpUserEngagement:forNSDataFromFollowUpWarning:withCompletion:
reportMailIntelligenceFollowUpUserEngagement:forStringFromFollowUpWarning:withCompletion:
reportMessagesFound:lost:withCompletion:
reportUserEngagement:forWarning:
reportUserEngagement:forWarning:store:
reportUserEngagement:forWarning:withCompletion:
reportValue:forFeatureSetting:withCompletion:
requestCache
requestDefer
requestFullDownload
requestId
requestReimportForHistoricalDataRequest:
requestReimportFromIdentifier:forPersonHandle:startDate:endDate:
requestRepresentationWithOptions:completionHandler:
reservationClassForSchema:
reservationContainerReference
reservationContainerReference:
reservationContainerReferenceWithData:
reservationDuration
reservationDurationFromReservationSchema:
reservationHolderName
reservationHolderNameFromReservationSchema:
reservationItemReferences
reservationItemReferences:
reservationItemReferencesWithData:
reservationNumber
reservationNumberFromReservationSchema:
reservationStatus
reservationStatusFromReservationSchema:
reservationStatusToSchema:
reservations
reservationsContainUniqueItemReferences
reservedSeat
reset
resetConfirmationAndRejectionHistory:
resetExtractionLogs
resetIfNeeded
resetInfo
resetInteractionsLogs
resetInteractionsSummaryLogs
resetLogs
resetNoFlush
resetSharedCachesAndModels
resetToDefaultPatternsForTesting
resetUnusedScannersForTesting
resolveByScoreBreakTiesArbitrarily:
resolveCandidates:forCategory:label:rawIndexSet:taggedCharacterRanges:
resolveCandidatesForJSDict:reply:
resolveCandidatesWithoutXPC:forCategory:label:rawIndexSet:taggedCharacterRanges:
resolveFullDownloadRequests:
resolveFullDownloadRequests:withCompletion:
resolveItemRefsWithDocument:
resolveName:
resolveSGContactDetailsPreferringPhraseExtractionsAndLabels
resourceBundle
resourcePath
respondsToSelector:
response
response1
responseWith:
responseWith:also:also:
responseWithError:
responsesForMessage:maximumResponses:forContext:withLanguage:options:
restaurantLocation
result
resultIfAvailable
resultNonnullWithBlock:
resultType
resultWithBlock:
resultWithHistoricalDataRequests:error:
resultWithTimeout:error:
resume
retain
retainCount
retrainingPipeline
reverseMapEntity:forCategory:withSchemaExpectation:
reverseMapMailMessage:withPreprocessedHTML:forCategory:withSchemExpectation:
reverseObjectEnumerator
richness
rollbackedEmailsCountToComplyToPostDeletionPolicy
rollbackedSlicesCountToComplyToPostDeletionPolicy
rolloutId
rolloutIdentifiers
rolloutIdentifiersWithNamespaceName:
round:toSignificantFigures:
rowId
ruleBasedInferenceFor:
ruleBasedInferenceFor:config:
rules
rulesFromFeatures:lowerBounds:upperBounds:outputs:
runAsyncOnQueue:afterDelaySeconds:block:
runDataDetectors:locale:epoch:metadataForTypes:
runJavascriptOnWebView:withCallback:
runMode:beforeDate:
runQueries:forVersion:inTransactionOnDb:
runQuery:onDb:
runQuery:onRow:onError:
runQuery:values:onDb:
runWithDissectorLock:
runWithExceptionBarrier:
runWithLockAcquired:
runWithWriteLockAcquired:
saliencyForFeatureVector:
saliencyForMessageId:
saliencyFromEmailHeaders:withCompletion:
saliencyFromRFC822Data:withCompletion:
saliencyOverrideFeatureLowerBounds
saliencyOverrideFeatureNames
saliencyOverrideFeatureUpperBounds
saliencyOverrideOutputs
saliencyOverrideRules
saliencyPredictionPerformanceInMilliSeconds
saliencyThreshold
saliencyWithScore:isSalient:
saliencyWithScore:isSalient:gteSaliency:isCounted:
salientCount
salientPredictedAsIgnorable
salientPredictedAsNeutral
salientPredictedAsSalient
salientScore
salt
saltAtomicReferenceId
sanitizeAirportName:
sanitizeHandles:
saveEvent:span:commit:error:
saveSubscription:completionHandler:
saveSynchronouslyWithError:
scanEventsInLastMessageOnly:synchronously:completionHandler:
scanEventsInMessageUnits:synchronously:completionHandler:
scanHexInt:
scannerWithString:
schema
schemaFromAirline:
schemaFromAirport:
schemaFromBoatReservation:
schemaFromBusReservation:
schemaFromFlight:
schemaFromFlightReservation:
schemaFromGenericTicketedEventReservation:
schemaFromLodgingReservation:
schemaFromMovieTicketedEventReservation:
schemaFromReservation:
schemaFromRestaurantReservation:
schemaFromTicketedEventReservation:
schemaFromTrainReservation:
schemaOrg
schemaOrg:
schemaOrgAndMissingEntitiesForExtractedEvent:
schemaOrgAndMissingEntitiesForMessage:withMLModelParameters:
schemaOrgAndMissingEntitiesForPreprocessed:eventClassification:fromSuggestTool:
schemaOrgAndMissingEntitiesForPreprocessed:eventClassification:fromSuggestTool:addressThreshold:pflTrainable:hasEvent:
schemaOrgToEvents:completion:
schemaOrgToOutput:reply:
schemaStringForDateComponents:
schemaStringForEventStatus:
schemaStringForReservationStatus:
schemaURLString:isEqualTo:
schemaVersion
scheme
score
scrolledToEnd
searchQueryForSearchTerm:preferredKinds:sendingAddress:recentsDomain:
searchTokensForReminderTitle:
searchableIndex:reindexAllSearchableItemsWithAcknowledgementHandler:
searchableIndex:reindexSearchableItemsWithIdentifiers:acknowledgementHandler:
searchableIndexDidFinishThrottle:
searchableIndexDidThrottle:
searchableItem
searchableItemIdTripleWithBundleId:domainId:uniqueId:
searchableItemIsEligibleForDissectorPipeline:targetPluginsCustomAttributeName:
searchableItemIsEligibleForHarvesting:eligibleExceptForAge:
searchableItemIsEligibleForHarvestingWithGetterBlock:bundleIdentifier:eligibleExceptForAge:
searchableItemIsOutgoing:
searchableItemIsStoredEncryptedWithGetterBlock:bundleIdentifier:
searchableItemsForContactsForInternalIdentifiers:
seatNumber
seatSection
seatingType
second
secondsFromGMT
secondsFromGMTForDate:
securityMethod
seekLocationForKey:
seekToEnd
seekToFileOffset:
seekToStart
segmentWesternNameWithNameParts:andPrefix:
selectAuthoritativeDetailsForContactWithId:
selectColumns:fromTable:whereClause:onPrep:onError:
selectEntityQuery:
selectMigrationQueue
self
selfIdDetectionWithTextMessage:inConversation:withSupervision:
selfIdentificationMessageCount
sendContactToSpotlight:
sendMessageWithCategory:type:payload:error:
sendRTCLogsWithCompletion:
sendRTCLogsWithShouldContinueBlock:completion:
sender
senderConnectionScore
senderDisplayName
senderDomain
senderID
senderIsAccountOwner
senderIsBusinessChat
serializationPassesBasicScrutiny:
serialize
serializeAll:
serialized
serializedContactsLimit
serializedEntityIds
serverIdentifierForAccount:
serverPreferredPushEnvironmentWithCompletionHandler:
serviceContext
sessionDescriptor
sessionWithConfiguration:
setAccountHandles:
setAccountIdentifier:
setAccountSetup:
setAccuracy:
setActive:
setActiveAggregatedAccuracyLogForThePastFourWeeks:
setActiveAggregatedAccuracyLogSinceModelInitialization:
setActiveTrialMetadata:
setAdditionalInfo:
setAdditionalRecipients:
setAddress:
setAddressMapping:
setAgeOfTheSubmodelInDays:
setAllDay:
setAllMailIntelligenceAsNotSalient
setAllowGeocode:
setAllowsAirPlayForMediaPlayback:
setAllowsContentJavaScript:
setAllowsInlineMediaPlayback:
setAllowsPictureInPictureMediaPlayback:
setArray:forKey:
setArrivalAirportCode:
setArrivalAirportName:
setArrivalDateTime:
setAssetPath:
setAtomic:
setAttachmentsProbability:
setAttachmentsStats:
setAuthor:
setAuthorEmailAddresses:
setAuthorMatchingContacts:
setAuthorMatchingContactsKeys:
setAuthorNickname:
setAuthorPhotoPath:
setAuthors:
setBackground:
setBackgroundAggregatedAccuracyLogForThePastFourWeeks:
setBackgroundAggregatedAccuracyLogSinceModelInitialization:
setBackgroundTrialMetadata:
setBi_lstm_0_c_in:
setBi_lstm_0_c_in_rev:
setBi_lstm_0_c_out:
setBi_lstm_0_c_out_rev:
setBi_lstm_0_h_in:
setBi_lstm_0_h_in_rev:
setBi_lstm_0_h_out:
setBi_lstm_0_h_out_rev:
setBiomeAggregationPerformanceInMilliSeconds:
setBirthday:
setBlockedWarningCount:
setBookingInfoUrl:
setBundleID:
setBundleIDs:
setBundleId:
setBundleIdentifier:
setByAddingObject:
setByAddingObjectsFromArray:
setByAddingObjectsFromSet:
setCRLookupForTesting:
setCacheHit:
setCacheLimitForTesting:
setCachedAccounts
setCachedVIPEmailAddresses:
setCalendar:
setCallbackQueue:
setCancelled:
setCandidateNameRange:
setCategory:
setCategoryType:
setCc:
setChangeCallback:
setCharacterMapping:
setCharacterSet:
setCheckInUrl:
setCity:
setCloudKitPersistedState:
setCompletionBlock:
setCompletionHandler:
setComponentName:
setComputeUnits:
setConfidence:
setConfiguration:
setConfirmationNumber:
setContactDetail:
setContacts:
setContainer:
setContent:
setContentCreationDate:
setContentProtection:
setContentRangeOfInterest:
setContext:
setContextRange:
setConversationAge:
setConversationIdentifier:
setConversationProbability:
setConversationStats:
setCore:
setCorrect:
setCount128KBTo512KB:
setCount32KBTo128KB:
setCount512KBTo2MB:
setCount8KBTo32KB:
setCountLimit:
setCountOver2MB:
setCountUpTo8KB:
setCountry:
setCreationDate:
setCreationTimestamp:
setCriteria:criteria:forActivity:
setCtsJobConstraints:count:
setCumulatedSubmodelsRollbackForPostDeletionPolicyPerformanceInMilliSeconds:
setCurrentColumns:
setCustomObject:forKey:
setD:
setData:
setDataDetector:
setDatabase:
setDate:
setDateFormat:
setDateIsCorrect:
setDateStyle:
setDaysAvailableDuringIncrementalUpdate:
setDaysProcessedDuringIncrementalUpdate:
setDecodingFailurePolicy:
setDefaultWebpagePreferences:
setDelegate:
setDeleteAllSyncedItemsCallback:
setDeleteDomainIds:
setDeleteUniqueIds:
setDeletedEmailsCount:
setDeletedTokensCountToComplyToCappingPolicy:
setDeletedWithRelatedUniqueIdentifier:
setDeliveries:
setDepartureAirportCode:
setDepartureAirportName:
setDepartureDateTime:
setDeploymentId:
setDetail:
setDidKVSMigrationToken:forIdentifier:
setDidRegexTrigger:
setDidResponseKitTrigger:
setDocumentSource:
setDomain:
setDomainFromSenderAge:
setDomainFromSenderStats:
setDomainIdentifier:
setDomains:
setDonatedEvent:
setDoubleNSNumber:forKey:
setDueDateComponents:
setDuplicateKey:
setEmail:
setEmailAddresses:
setEmailHeaders:
setEmailLanguage:
setEmailMapping:
setEndUTCOffsetSeconds:
setEnrichedTaggedCharacterRanges:
setEntity:
setErrorCode:
setEstimatedGroundTruth:
setEvents:
setEventsWereRemovedFromEventKit:
setException:
setExitCode:
setExperimentId:
setExternalEnrichments:
setExtraKey:
setExtractedReminderDuplicateKey:
setExtractionInfo:
setExtractionModelVersion:
setExtractionSignatureSource:
setFamilyName:
setFeatureNames:
setFeatureToNumberArrayValue:forName:
setFeatureToNumberValue:forName:
setFeatureToStringArrayValue:forName:
setFeatureToStringValue:forName:
setFeatures:
setFetchAllChanges:
setFetchAttributes:
setFetchRecordZonesCompletionBlock:
setFlightCarrier:
setFlightNumber:
setFlightStatus:
setFloating:
setForKey:
setFormatOptions:
setFormatterBehavior:
setFoundIn:
setFoundInSenderCNContact:
setFoundItemsHandler:
setFoundMatchingElement:
setFrom:
setFromAllowListedSender:
setFromStatus:
setGazetteers:forTagScheme:
setGivenName:
setGroupId:
setGroupingSeparator:
setHTMLContentData:
setHTTPBody:
setHTTPMethod:
setHandle:
setHarvestMetrics:
setHarvestSource:
setHarvestedOnBattery:
setHasAgeOfTheSubmodelInDays:
setHasAllDay:
setHasApp:
setHasAttachmentsProbability:
setHasBiomeAggregationPerformanceInMilliSeconds:
setHasBlockedWarningCount:
setHasCancelled:
setHasCategoryType:
setHasContactDetail:
setHasConversationAge:
setHasConversationProbability:
setHasCorrect:
setHasCount128KBTo512KB:
setHasCount32KBTo128KB:
setHasCount512KBTo2MB:
setHasCount8KBTo32KB:
setHasCountOver2MB:
setHasCountUpTo8KB:
setHasCreationTimestamp:
setHasCumulatedSubmodelsRollbackForPostDeletionPolicyPerformanceInMilliSeconds:
setHasCustomResponsesAfterPruning:
setHasDateIsCorrect:
setHasDaysAvailableDuringIncrementalUpdate:
setHasDaysProcessedDuringIncrementalUpdate:
setHasDeferredProcessStateChanges:
setHasDeferredSync:
setHasDeletedEmailsCount:
setHasDeletedTokensCountToComplyToCappingPolicy:
setHasDeploymentId:
setHasDetail:
setHasDidRegexTrigger:
setHasDidResponseKitTrigger:
setHasDocumentSource:
setHasDomainFromSenderAge:
setHasDomainFromSenderProbability:
setHasEnd:
setHasEndUTCOffsetSeconds:
setHasErrorCode:
setHasEstimatedGroundTruth:
setHasExtractionModelVersion:
setHasExtractionSignatureSource:
setHasFoundIn:
setHasFoundInSenderCNContact:
setHasFoundMatchingElement:
setHasFromStatus:
setHasFullSync
setHasHarvestSource:
setHasHarvestedOnBattery:
setHasHasName:
setHasHighPriority:
setHasHoursSinceLastIncrementalUpdate:
setHasHoursSinceReference:
setHasIgnorablePredictedAsIgnorable:
setHasIgnorablePredictedAsNeutral:
setHasIgnorablePredictedAsSalient:
setHasIncomingMessage:
setHasInhumanHeaders:
setHasIsFromCongratulation:
setHasIsSubmodelRebuilt:
setHasIsUnlikelyPhone:
setHasLastModifiedTimestamp:
setHasListIdProbability:
setHasLocationType:
setHasLongitude:
setHasMailboxProbability:
setHasMailboxTypeProbability:
setHasMailsProcessedDuringIncrementalUpdate:
setHasMethod:
setHasMissingAttachmentPredictionPerformanceInMilliSeconds:
setHasMissingRecipientPredictionPerformanceInMilliSeconds:
setHasMode:
setHasModel:
setHasModelVersion:
setHasName:
setHasNbCharactersInMailSubject:
setHasNbExtremelyDiscriminantTokensForIgnorability:
setHasNbExtremelyDiscriminantTokensForSaliency:
setHasNbHighlyDiscriminantTokensForIgnorability:
setHasNbHighlyDiscriminantTokensForSaliency:
setHasNbTokensInMailSubject:
setHasNegativeEngagement:
setHasNeutralPredictedAsIgnorable:
setHasNeutralPredictedAsNeutral:
setHasNeutralPredictedAsSalient:
setHasNoEngagement:
setHasNumberOfLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20:
setHasNumberOfLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20:
setHasNumberOfPredictedAttachmentOnLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20:
setHasNumberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20:
setHasOffset:
setHasOutcome:
setHasParentEntityType:
setHasPersonCCRecipientsAge:
setHasPersonCCRecipientsProbability:
setHasPersonFromSenderAge:
setHasPersonFromSenderInDyadicConversationAge:
setHasPersonFromSenderInDyadicConversationProbability:
setHasPersonFromSenderProbability:
setHasPersonToRecipientsAge:
setHasPersonToRecipientsProbability:
setHasPositiveEngagement:
setHasPredictedMissingElementScore:
setHasPredictedSaliency:
setHasPredictedSaliencyScore:
setHasPreviousInteractionFromUserOnConversationInMinutes:
setHasPreviousInteractionOnConversationInMinutes:
setHasQuality:
setHasReceivedOnBattery:
setHasResult:
setHasRollbackedEmailsCountToComplyToPostDeletionPolicy:
setHasRollbackedSlicesCountToComplyToPostDeletionPolicy:
setHasSaliencyPredictionPerformanceInMilliSeconds:
setHasSalientPredictedAsIgnorable:
setHasSalientPredictedAsNeutral:
setHasSalientPredictedAsSalient:
setHasSenderConnectionScore:
setHasSignature:
setHasSignificantWork:
setHasSource:
setHasStandardMailRulesProbability:
setHasStart:
setHasStartUTCOffsetSeconds:
setHasSubjectContentAge:
setHasSubjectContentProbability:
setHasSubjectCountStatsProbability:
setHasSubmodelsPruningForCappingPolicyPerformanceInMilliSeconds:
setHasSubmodelsUpdatePerformanceInMilliSeconds:
setHasSubscription:
setHasSupervision:
setHasTimeDifferenceFromReceptionToSaliencyInferenceInSeconds:
setHasTokens:
setHasTotalNumberOfEmailsProcessedForAttachmentDetectionRoundedToClosestMultipleOf20:
setHasTotalNumberOfEmailsProcessedForFollowUpDetectionRoundedToClosestMultipleOf20:
setHasTotalNumberOfEmailsProcessedForRecipientDetectionRoundedToClosestMultipleOf20:
setHasType:
setHasWasKnownContact:
setHasWasSuggestedContact:
setHeaders:
setHiddenAdditionalRecipients:
setHighPriority:
setHost:
setHour:
setHoursSinceLastIncrementalUpdate:
setHoursSinceReference:
setHtmlBody:
setHtmlContentData:
setHtmlIdItemScope:forHtmlId:
setI:
setISOCountryCode:
setIgnorablePredictedAsIgnorable:
setInProcessSuggestManager:
setIncludeDonatedContacts:
setIncomingMessage:
setIndexDelegate:
setIndexSetForOutputNameLabel:
setInstantMessageAddresses:
setInt64NSNumber:forKey:
setIntentHandlingStatus:
setIntentResponseUserActivityString:
setInteractionBundleId:
setInteractionGroupId:
setInteractionId:
setInteractionInfo:
setInteractionTeamId:
setInternalDetectedDetails:
setInternalStateAccordingToKVS
setInvalidatedIdentifiers:
setInvalidatedMessageIdentifiers:
setIsCounted:
setIsFirstPerson:
setIsFromCongratulation:
setIsGroupConversation:
setIsNegativeExample:
setIsPartiallyDownloaded:
setIsPositiveExample:
setIsSenderSignificant:
setIsSent:
setIsStoredEncrypted:
setIsSubmodelRebuilt:
setIsThirdPerson:
setIsUnlikelyPhone:
setIsUpdate:
setJavaScriptCanOpenWindowsAutomatically:
setKeyWithDomain:suffix:toValue:
setL:
setLabel:
setLang:
setLanguage:
setLanguage:range:
setLastModifiedTimestamp:
setLastSuggestionsFromMessageRequest:
setLastSuggestionsFromMessageResponse:
setLatitude:
setLenient:
setLimitingStartDate:
setListIdProbability:
setLocalCustomObject:forKey:
setLocale:
setLocation:
setLocationType:
setLocations:
setLongitude:
setLostMessageOverflow:
setMailAttachmentHistograms:
setMailConversationIdentifier:
setMailIntelligenceStagedLogs:forMessageId:
setMailMessageID:
setMailboxIdentifiers:
setMailboxProbability:
setMailboxStats:
setMailboxTypeProbability:
setMailboxTypeStats:
setMailsProcessedDuringIncrementalUpdate:
setMalformedEventWhenRangeForTesting
setMappings:
setMasterEntityId:
setMatchDate:
setMatches:
setMaxCount:
setMaximumFractionDigits:
setMaximumSignificantDigits:
setMessage:
setMessageId:
setMessageUnits:
setMetadata:
setMethod:
setMiddleName:
setMigrateFromStore:
setMinimumSignificantDigits:
setMinute:
setMissingAttachmentPredictionPerformanceInMilliSeconds:
setMissingAttachments:
setMissingRecipientPredictionPerformanceInMilliSeconds:
setMissingRecipients:
setMode:
setModel:
setModelClass:
setModelVersion:
setModifyRecordZonesCompletionBlock:
setModifyRecordsCompletionBlock:
setMonth:
setN:
setNSDate:forKey:
setNSString:forKey:
setName:
setNamePrefix:
setNameSuffix:
setNanosecond:
setNavigationDelegate:
setNbCharactersInMailSubject:
setNbExtremelyDiscriminantTokensForIgnorability:
setNbExtremelyDiscriminantTokensForSaliency:
setNbHighlyDiscriminantTokensForIgnorability:
setNbHighlyDiscriminantTokensForSaliency:
setNbTokensInMailSubject:
setNeedsSourceVerification:
setNegativeEngagement:
setNegativePrefix:
setNeutralPredictedAsNeutral:
setNeutralPredictedAsSalient:
setNewEntitiesCallback:
setNickname:
setNoEngagement:
setNotes:
setNumberOfLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20:
setNumberOfLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20:
setNumberOfPredictedAttachmentOnLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20:
setNumberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20:
setNumericMapping:
setObject:atIndexedSubscript:
setObject:forKey:
setObject:forKeyedSubscript:
setOffset:
setOperatingSystemVersion:
setOutcome:
setParentEntityType:
setParentMessagesLimitForTesting:
setPath:
setPatternsDictForTesting:
setPendingGeocode:
setPendingVerification:
setPersonCCRecipientsAge:
setPersonCCRecipientsProbability:
setPersonCCRecipientsStats:
setPersonFromSenderAge:
setPersonFromSenderInDyadicConversationAge:
setPersonFromSenderInDyadicConversationProbability:
setPersonFromSenderInDyadicConversationStats:
setPersonFromSenderStats:
setPersonToRecipientsAge:
setPersonToRecipientsProbability:
setPersonToRecipientsStats:
setPhoneMapping:
setPhoneNumbers:
setPhones:
setPhotoPath:
setPlainTextDetectedData:
setPlainTextSigRange:
setPluginIdentifier:
setPlugins:
setPositiveEngagement:
setPositivePrefix:
setPostalAddresses:
setPostalCode:
setPredicate:
setPredictedMissingElementScore:
setPredictedSaliency:
setPredictedSaliencyScore:
setPreferredContentMode:
setPreviousInteractionFromUserOnConversationInMinutes:
setPreviousInteractionOnConversationInMinutes:
setPreviousServerChangeToken:
setPrimaryICloudCalendarAccount:
setPrimaryRecipients:
setPrivateIndex:
setProtection:
setProtectionClasses:
setPurgeUniqueIds:
setQuality:
setQualityOfService:
setQueryItems:
setRadius:
setRange:
setReadyForNewEntities:
setReceivedOnBattery:
setRecipient:
setRecipients:
setRecordChangedBlock:
setRecordIDsToDelete:
setRecordId:
setRecordType:
setRecordZoneFetchCompletionBlock:
setRecordZoneIDsToDelete:
setRecordZonesToSave:
setRecordsToSave:
setRegexBelongsToSender:
setRegexDoesNotBelongToSender:
setRegexLanguage:
setRelatedUniqueIdentifier:
setReminders:
setRemoteObjectInterface:
setReplyTo:
setRequestId:
setRequireFullBodySignature:
setRequiredUserInfoKeys:
setReservationContainerReference:
setReservationItemReferences:
setReservations:
setResult:
setRollbackedEmailsCountToComplyToPostDeletionPolicy:
setRollbackedSlicesCountToComplyToPostDeletionPolicy:
setSaliencyPredictionPerformanceInMilliSeconds:
setSalientPredictedAsNeutral:
setSalientPredictedAsSalient:
setSalt:
setSaltAtomicReferenceId:
setSaltUsesManatee:
setSavePolicy:
setSchemaOrg:
setSchemaVersion:
setScheme:
setSearchPredicate:
setSecond:
setSelfIdentificationMessageCount:
setSender:
setSenderConnectionScore:
setSenderDisplayName:
setSenderIsAccountOwner:
setSerializedContactsLimit:
setSessionDescriptor:
setSgmiFeatureStore:
setSharedInstance:
setSharedInstanceConfigurationBlock:
setShortMonthSymbols:
setShortWeekdaySymbols:
setShouldSendContentAvailable:
setShouldUnifyResults:
setSignature:
setSignatureRange:
setSignificance:
setSignificanceOrigin:
setSignificantWork:
setSiriFoundInAppsData:
setSize:
setSocialProfileIdentifiers:
setSocialProfiles:
setSource:
setSourceKey:
setStandardMailRulesProbability:
setStandardMailRulesStats:
setStart:
setStartUTCOffsetSeconds:
setState:
setStateOrProvince:
setStats:
setStore:
setStreet:
setString:
setStructuredData:
setSubject:
setSubjectContentAge:
setSubjectContentProbability:
setSubjectContentStats:
setSubjectCountStatsProbability:
setSubjectCountStatsStats:
setSubmodelsProbabilities:
setSubmodelsPruningForCappingPolicyPerformanceInMilliSeconds:
setSubmodelsStats:
setSubmodelsUpdatePerformanceInMilliSeconds:
setSuggestionInfo:
setSuspended:
setSyncToken:
setTaggedCharacterRanges:
setTargetMapping:
setTargetQueue:useAfterCompletion:
setTargetString:
setTemplateName:
setTime:
setTimeDifferenceFromReceptionToSaliencyInferenceInSeconds:
setTimeRange:
setTimeStyle:
setTimeZone:
setTimeout:
setTimeoutIntervalForRequest:
setTimeoutIntervalForResource:
setTimestamp:
setTitle:
setTo:
setToChangeAnchor:
setToStatus:
setTokens:
setTotalNumberOfEmailsProcessedForAttachmentDetectionRoundedToClosestMultipleOf20:
setTotalNumberOfEmailsProcessedForFollowUpDetectionRoundedToClosestMultipleOf20:
setTotalNumberOfEmailsProcessedForRecipientDetectionRoundedToClosestMultipleOf20:
setTriClient:
setTrialMetadata:
setTrieFromPath:
setType:
setTzid:
setUnderlyingQueue:
setUniqueIdentifier:
setUnsubscriptionOpportunitiesSuggestionsDenyListForField:toValues:
setUpdatedFields:
setUserAccountsPersistedState:
setUserActivity:
setUserInfo:
setUsesGroupingSeparator:
setUsesSignificantDigits:
setValue:forComponent:
setValue:forCustomKey:
setValue:forHTTPHeaderField:
setValue:forKey:
setValue:forKey:binder:
setValue:forKey:fromRecordId:
setValueForScalarKeyWithDomain:subdomain:suffix:action:value:
setValueIfNotPresent:forKey:fromRecordId:
setValueIfNotPresentWithDict:fromRecordId:
setVips:
setW:
setWasKnownContact:
setWasSuggestedContact:
setWebpageURL:
setWebsiteDataStore:
setWhen:
setWindowLength:
setWithArray:
setYear:
setup
setupKvo
setupManagerWithConnection:store:ctsManager:ekStoreProvider:contactStore:pet2Tracker:
sfAirportToDictionnary:
sfFlightStatusToString:
sfFlightsToDictionary:
sgNameFromString:origin:recordId:extractionInfo:
sgToCNContactsCacheUpdateAdapter
sg_LoggingIdentifier
sg_applicationRecordForDefaultWebBrowser
sg_bumpTimeToLiveForZeroKeywordNLEventOnInteraction:
sg_clonableItemAtIndex:inCodedArray:
sg_clone
sg_confirmedEKEventForSGEvent:
sg_dateComponentsFromISO8601String:
sg_decodeEncodedWords
sg_descriptionForMimeHeaders
sg_enumerateChunksOfSize:usingBlock:
sg_eventMetadata
sg_fallbackURL
sg_fetchEKEventsForPseudoEventBySimilarTitleAndStartTime:
sg_fetchEKEventsForPseudoNLEvent:entity:
sg_fetchEKEventsForPseudoNLEvent:message:
sg_initWithNamedEmailAddress:
sg_initWithSerializedForm:
sg_isAppleBundleIdentifier
sg_isCuratedEventFromSuggestionNewerThan:
sg_isSignificantWithStore:
sg_md5Hash
sg_newStore
sg_preferredApplicationRecordForURL:
sg_preferredApplicationRecordForUserActivityType:withTeamIdentifier:preferredBundleIdentifier:
sg_schemas
sg_serialize
sg_serialized
sg_stringWithDecodedEncodedWords
sg_userActivityWithRequiredString:
sg_usingSharedStoreForReadingOnly:
sgd_clientName
sgmiFeatureStore
shape
sharedBackgroundStorageQueue
sharedDefaults
sharedInstance
sharedKeySetForKeys:
sharedManager
sharedSession
sharedSingletonInstance
sharedSingletonWithDirectory:
sharedSuggestHistory
shortNamesAndRealtimeEventsFromEntity:enrichments:store:
shortNamesAndRealtimeEventsFromEntity:message:enrichments:store:
shouldAdmitContentFromBundleIdentifier:
shouldAllowNotificationsInCalendarWithAllowListOverride:
shouldAnalyzeBody
shouldCollectTrainingDataForObjective:language:
shouldContinue
shouldDefer
shouldDefer:
shouldDownloadFull:
shouldDownloadFull:reply:
shouldExposeWarning:
shouldExposeWarning:updateAction:
shouldExposeWarningGivenPositiveFeedbackCount:negativeFeedbackCount:
shouldHarvestEvents
shouldIgnoreEntity:
shouldIgnoreMailMessage:
shouldIgnoreSignature:signatureRange:isInhuman:
shouldInvertFirst:last:
shouldInvertFirst:last:underNamingTradition:
shouldInvertOrderOfFirst:last:
shouldProcessTextMessage:entity:
shouldRecreateZoneForRecordError:operationError:
shouldRemoveEventsFromEventKit
shouldRunHandlerImmediately
shouldSampleForLabel:inLanguage:isDynamicLabel:
showOperatingSystemVersionInSnippets
showPastEvents
signature
signatureExpiration
signatureRange
signatureRegions
signatureRules
signatureStatsLogging
signaturesToRemoveForDKIMVerificationContext:withFromHeaderDomain:
significance
significanceOrigin
significantSender
signingDomainIdentifier
simpleCandidateResolutionFromCandidates:
simpleDedupe:
simpleMailMessageFromHeaders:
simulateAddressBookChange
simulateCalendarChange
simulateOnDiskDatabase
singleLineSignatureLeadingCharacterSet
sinkWithCompletion:receiveInput:
siriFoundInAppsData
size
sketchesForName:
skipFromZeroSchema
skipFromZeroSchema:
sleepWithCompletion:
sliceWithType:range:
sliceWithType:start:end:
snippetFromString:coreRange:withMaxWindowSizeAroundCore:
snippetsDbHandleForTesting
socialProfile
socialProfile:forIdentity:parent:curated:context:contextRangeOfInterest:extractionInfo:
socialProfileIdentifiers
socialProfileTags
socialProfiles
sortUsingComparator:
sortUsingSelector:
sortedArrayUsingComparator:
sortedArrayUsingDescriptors:
sortedArrayUsingSelector:
sortedArrayWithOptions:usingComparator:
sortedSaliencyResultsRestrictedToMailboxTypes:mailboxIds:receivedOnOrAfter:ascending:limit:
sortedSaliencyResultsRestrictedToMailboxTypes:mailboxIds:receivedOnOrAfter:ascending:limit:withCompletion:
sortedUnsubscriptionOpportunitiesForField:limit:
sortedUnsubscriptionOpportunitiesForField:minCount:minScore:limit:
sortedUnsubscriptionOpportunitiesForField:minCount:minScore:limit:withCompletion:
source
sourceKey
sourceMetadata
sourceURL
sourceUniqueIdentifier
sourceUniqueIdentifierForStorageReminder:
splitAttachment:intoEvents:withTimezones:
splitBlob:withInterdicts:edges:curatedRecordIds:
splitContactDetailsByType:
splitNeededFor:withInterdicts:curatedRecordIds:
spokenPhrase
spotlightBundleIdentifier
spotlightContactsAdapter
spotlightDomainIdentifier
spotlightReference
spotlightReimportFromIdentifier:forPersonHandle:startDate:endDate:completion:
spotlightUniqueIdentifier
spotlightUniqueIdentifierForBundleIdentifier:messageId:
sqlStoreInMemory
sqlStoreWithEntityDbPath:snippetDbPath:isEphemeral:executeJournals:
sqlStoreWithEntityDbPath:snippetDbPath:isEphemeral:sharedLock:executeJournals:
sqlStoreWithEntityDbPathNoMigrate:snippetDbPath:isEphemeral:executeJournals:
sqliteDatabaseInMemoryWithError:
sqliteDatabaseWithFilename:contentProtection:errorHandler:error:
sqliteDatabaseWithFilename:error:
stackItem
standardMailRulesProbability
standardMailRulesStats
standardizeCSPersons
start
startConfigurationWithCompletionHandler:
startDate
startDateComponents
startDissectionOfMessage:inContext:
startElement:withAttributes:
startHarvest
startIngestOfMessages:
startListening
startTimeZone
startTimer:
startUTCOffsetSeconds
state
state:index:section:
stats
statsAtIndex:
statsCount
statsType
status
stmt
stopJournaling
stopListening
storageContactByKey:
storageContactByMasterEntityId:withSnippets:
storageContactByRecordId:withSnippets:
storageContactFromRecordId:
storageDetailHashes
storageEventFromEntity:
storageLocationWithPrimaryKey:
storageQueue
storageReminderFromDuplicateKey:store:
storageReminderFromEntity:origin:
storageReminderFromEntity:store:
storageReminderFromRecordId:store:
storageReminderWithPrimaryKey:store:
store
storeAge
storeInMemory
storeOperation:spotlightBundleIdentifier:spotlightUniqueIdentifier:spotlightDomainIdentifier:withStore:dependencies:
storeOperation:spotlightBundleIdentifier:spotlightUniqueIdentifier:spotlightDomainIdentifier:withStore:dependencies:originalEnrichmentCount:
storeOperation:withStore:dependencies:
storeOperation:withStore:dependencies:originalEnrichmentCount:
storeReimportItems:requestId:
storeReimportRequest:
storeToDisk
storeWithDefaultLocationAndExecuteJournals:
storeWithFilename:
stored
street
strength
strictLowerBound
strictUpperBound
string
stringArrayRepresentation
stringArrayValue
stringByAddingPercentEncodingWithAllowedCharacters:
stringByAppendingFormat:
stringByAppendingString:
stringByDeletingLastPathComponent
stringByDeletingPathExtension
stringByExtractingPlainTextFromHTML:
stringByReplacingCharactersInRange:withString:
stringByReplacingMatches:inRange:withBlock:
stringByReplacingOccurrencesOfString:withString:
stringByReplacingOccurrencesOfString:withString:options:range:
stringByTrimmingCharactersInSet:
stringEncoding
stringEncodingForData:encodingOptions:convertedString:usedLossyConversion:
stringForProvider:
stringFromContact:style:
stringFromNumber:
stringFromPostalAddress:style:
stringHasDatesOrTimes:
stringSetMatcherForKey:
stringTokensFromDomain:
stringValue
stringValueForKey:fromFile:
stringWithCharacters:length:
stringWithContentsOfFile:encoding:error:
stringWithFormat:
stringWithNewContents:
stringWithString:
stringWithString:range:
stringWithString:range:confidence:
stringWithUTF8String:
stripAndReturnHonorifics:
stripBirthdayFromSGContact:
stripChevrons:
stripEventInformation
stripHonorifics:
stripRepeatedContent:repeatedLength:
stripRepeatedContentForSectionLength:label:
stripStaleBirthdayFromSGContact:withEntity:
stripTrailingASCIIHSpace:
strongNamePatterns
strongToWeakObjectsMapTable
structuredData
structuredEventInputMapping
structuredEventOutputMapping
structuredLocation
structuredLocationWithoutPrediction
subModelsStats
subModelsStatsWithShouldContinueBlock:
subarrayWithRange:
subdataWithRange:
subdirectory:createIfNeeded:
subjectByCleaningPrefixesInSubject:
subjectContentAge
subjectContentProbability
subjectContentStats
subjectCountStatsProbability
subjectCountStatsStats
submodeledFeature
submodeledFeatures
submodels
submodelsAgesInDays
submodelsProbabilities
submodelsPruningForCappingPolicyPerformanceInMilliSeconds
submodelsStats
submodelsUpdatePerformanceInMilliSeconds
subsetOfHistoricalDataRequest:
substringFromIndex:
substringToIndex:
substringWithRange:
succeed:
suffix
suggestContactByIdentityKey:parentKey:
suggestContactByKey:
suggestContactByRecordId:
suggestContactByRecordId:withSnippets:filterConfirmRejectDetails:
suggestContactMatchesByContactDetailTag:
suggestContactMatchesByContactDetailTag:matchType:
suggestContactMatchesByEmailAddress:
suggestContactMatchesByEmailAddress:isMaybe:onlySignificant:
suggestContactMatchesByPhoneNumber:
suggestContactMatchesByPhoneNumber:isMaybe:onlySignificant:
suggestContactMatchesBySocialProfile:
suggestContactMatchesBySocialProfile:isMaybe:onlySignificant:
suggestContactMatchesByType:searchString:isMaybe:onlySignificant:
suggestContactMatchesWithContact:limitTo:
suggestContactMatchesWithFullTextSearch:limitTo:
suggestContactMatchesWithMessagingPrefix:limitTo:
suggestContactsByMasterEntityQuery:limit:bindings:
suggestContactsWithContact:withSnippets:filterConfirmRejectDetails:limitTo:
suggestContactsWithPrefix:limitTo:
suggestEventsStartingAt:endingAt:limitTo:
suggestEventsStartingAt:endingAt:limitTo:additionalWhereClause:options:onPrep:
suggestEventsStartingAt:endingAt:limitTo:options:
suggestEventsStartingAt:endingAt:prefix:limitTo:
suggestEventsStartingAt:endingAt:prefix:limitTo:options:
suggestedEventCalendar
suggestedNickname
suggestedPhotoPath
suggestionIDFromContactIdentifier:
suggestionImpressionsViaBannerSuppressed:
suggestionInfo
suggestionType
suggestionsCount
suggestionsDirectory
suggestionsDirectoryAfterCreatingIfNeeded:
suggestionsDirectoryFile:
suggestionsDirectoryFile:creatingSuggestionsDirectoryIfNeeded:
suggestionsFromEmailContent:headers:source:options:withCompletion:
suggestionsFromMessage:options:completionDelivery:completionHandler:fullCompletionHandler:
suggestionsFromMessage:options:completionHandler:
suggestionsFromMessage:options:fullCompletionHandler:
suggestionsFromRFC822Data:source:options:withCompletion:
suggestionsFromSearchableItem:options:withCompletion:
suggestionsFromSimpleMailMessage:headers:options:withCompletion:
suggestionsFromURL:title:HTMLPayload:withCompletion:
suggestionsSubdirectory:
suggestionsSubdirectory:creatingDirectoriesIfNeeded:
summarizeStreamByMessage
summarizeStreamByMessageStartingFromDaysAgo:
summarizeStreamByMessageWithPublisher:
superclass
supervision
supervisionAsString:
supportedBundleIDs
supportedBundleIdentifiers
supportedContentTypes
supportedINIntentClassNames
supportedProviders
supportsDeviceToDeviceEncryption
supportsSecureCoding
surnameFromName:
suspendAndResumeAfter:
symbolCharacterSet
syncContactsWithStore:
syncHistoryToCloud
syncNewBlobsIfChanged
syncToken
synchronize
synchronizeWithCompletionHandler:
synchronousRemoteObjectProxyWithErrorHandler:
systemTimeZoneForDate:
systemTimeZoneFromString:
systemTimeZoneWithCalendar:withEvent:withCorrectnessFlag:
systemTimeZoneWithWindowsName:
tablesWithColumnNamed:
tabularRegions
tagForLabel:value:
tagSchemes
taggedCharacterRanges
tags
tagsWithModelOutputFromEnrichedTaggedCharacterRanges:
targetApplicationRecord
targetMapping
targetString
task
taskWithDeadline:
taskWithRequest:completion:
teamId
teamIdentifier
tellCurrentTasksToDefer
templateException
templateName
templateShortName
terminal
testAttachmentWithType:size:
text
textConsumers
textContent
textContent:
textContentLanguageIdentifier
textContentNoCopy
textContentNoCopyRetainingBackingBuffer:
textMessage
textMessageKey
textMessageToOutput:reply:
textRangeForIndexRange:inTaggedCharacterRanges:
textRangeForTokenRange:
thawObserversForTesting
threadDictionary
threshold
time
timeBeforeViewStartSinceAvailable
timeDifferenceFromReceptionToSaliencyInferenceInSeconds
timeInterval
timeIntervalSince1970
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timeRange
timeZone
timeZoneForSecondsFromGMT:
timeZoneWithAbbreviation:
timeZoneWithName:
timestamp
timezone
timezoneIdentifier:
timezoneOlsonCodeForAirport:
timezoneOlsonCodeForAirport:withDataOffset:andFileHandle:
title
titleGeneratedFromSubject
titleGeneratedFromTemplate
titleMapping
titlePrefixTokens
titlePrependForActionVerbIndexRange:enrichedTaggedCharacterRanges:language:content:
toBool
toCloudKitRecordWithId:parentEntityType:
toDictionary
toEKEventWithStore:
toFloatingTime:withDSTAmbiguityPreferences:
toHandles
toJsonString
toMailMessageKey
toPlistWithChunks:
toReminder
toSGNameWithOrigin:recordId:extractionInfo:
toSchemas
toStatus
toStatusAsString:
toString
token
tokenCount:
tokenCountForPostalAddressComponents:
tokenize:
tokenizeMessageContent:
tokenizeTextContent:languageHint:
tokenizeTextContent:languageHint:gazetteer:
tokenizerWithCoreNLPEnabled:
tokens
tokensMatchedDetailTypeForContact:contactEntityId:detailEntityId:matchinfoData:tokens:
tombstoneExistsForSpotlightReferenceWithBundleIdentifier:uniqueIdentifier:domainIdentifier:
topDirectory
topDirectoryCreateIfNeeded:
topDirectoryWithName:createIfNeeded:
topSalienciesForMailboxId:limit:
topSalienciesForMailboxId:limit:withCompletion:
totalNumberOfEmailsProcessedForAttachmentDetectionRoundedToClosestMultipleOf20
totalNumberOfEmailsProcessedForFollowUpDetectionRoundedToClosestMultipleOf20
totalNumberOfEmailsProcessedForRecipientDetectionRoundedToClosestMultipleOf20
totalsForDomains:
trackDistributionForMessage:value:
trackScalarForMessage:
trackScalarForMessage:count:
trackScalarForMessage:updateCount:
trackingNumber
trailingSenderNameLineRange:
trainName
trainNumber
trainQuickResponsesForMessage:withConversationHistory:
trainTrip
trainingFeaturesOf:
trainingFeaturesOf:inLanguage:
trainingFeaturesOf:inLanguage:withObjective:
transactionWithName:
transform:
transform:stopAfterTransformerWithIndex:
transformArray:withTargetIndex:maximumDistance:
transformWithCoreNLP:block:
transformWithNLLinguisticTagger:block:
transformer
transformerInstanceForLanguage:mode:
transformerInstanceForLanguage:withObjective:
transformers
treatmentId
triClient
trialIds
trialIdsForStructuredEvent
trialMetadata
trialMetadataString
triggerOptionalTokens
trimDbWithDeferralBlock:
trimURLTableDownToLimit:deletionCount:
trimURLs
tripDuration
truncateContactDetailTable
truncateDatabaseAtPath:
tryExecuteSnippetsJournal
tupleWithEntity:label:
tupleWithError:label:
tupleWithFirst:second:
twoSigFigs:
type
typeAsString:
typeCheckingSink:
tzid
unarchivedObjectOfClass:fromData:error:
unarchivedObjectOfClasses:fromData:error:
uncompressModelAndUpdateFactors:destinationPath:
unifiedContactWithIdentifier:keysToFetch:error:
unifiedContactWithIdentifier:keysToFetch:usingContactStore:error:
unifiedContactsMatchingPredicate:keysToFetch:error:
unifiedContactsMatchingPredicate:keysToFetch:usingContactStore:error:
unifiedMeContactWithKeysToFetch:usingContactStore:error:
unigramFeature
unigramQueriedTokensCount
unigramTokenCounts
unigramTokensCount
unionOrderedSet:
unionSet:
uniqueId
uniqueIdForInteractionIdentifier:
uniqueIdForPersistentIdentifier:
uniqueIdentifier
uniqueIdentifierForMessageId:
uniqueIdentifiers
uniqueKey
uniquePersonIdentifier:
universalCleanName:
universalURL
unlink
unlock
unmergedCandidatesLimitedTo:
unmigrateDatabases
unnormalizedNamesApproximatelyMatch:and:
unnormalizedNamesApproximatelyMatch:and:threshold:
unregister:
unregisterForLockStateChangeNotifications:
unsafeMigrateToVersionForTesting:
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
unsignedLongValue
unsignedShortValue
updateAirports
updateAll
updateAndScheduleDiskWrite
updateAttachmentDetectionStatsOnMailWithTextContent:attachments:warningRaised:attachmentPredicted:isIncomingMail:
updateBox:
updateBox:delay:
updateCNContactMatches:
updateCarriers
updateCounts:identifier:
updateEvent:primaryKey:
updateEventToEvent:
updateFactors
updateFlights
updateFollowUpDetectionStatsWithWarning:
updateLanguageForFTSTablesToLanguage:
updateList:
updateMessages:state:
updateMessages:state:completion:
updateRecipientDetectionStatsWarningRaised:
updateReimportItemUniqueIdForBundleId:oldValue:newValue:
updateSaliency:saliency:
updateSaliencyCreationTimestampForTesting:timestamp:
updateSerializedContacts:
updateSummaryDict:fetchedUnreadMessages:event:timestamp:
updateTable:dictionary:whereClause:onError:
updateWithAppLaunchAtTime:
updateWithFlagChangedEvent
updateWithMessageFetchedEventAtTime:
updateWithMessageMovedEventWithPayload:
updateWithReadChangedEventWithPayload:
updateWithViewEndWithPayload:
updateWithViewStartAtTime:unreadMessageCount:
updatedFields
url:
urlForEKEventFromTextMessageWithUniqueIdentifier:
urlForMailMessageWithId:
urlForRecordIdVCard:
urlForStorageContactVCard:
urlFromReservationSchema:
urlFromTags
urlsFoundBetweenStartDate:endDate:bundleIdentifier:
urlsFoundBetweenStartDate:endDate:excludingBundleIdentifiers:containingSubstring:flagFilter:limit:
urlsFoundBetweenStartDate:endDate:excludingBundleIdentifiers:containingSubstring:flagFilter:limit:withCompletion:
urlsFoundBetweenStartDate:endDate:excludingBundleIdentifiers:limit:withCompletion:
urlsFromAttributes:handle:bundleIdentifier:domainIdentifier:uniqueIdentifier:documentTitle:documentDate:documentTimeInterval:receivedAt:isOutgoingDocument:
urlsFromText:handle:dataDetectorMatches:bundleIdentifier:domainIdentifier:uniqueIdentifier:documentTitle:documentDate:documentTimeInterval:receivedAt:isOutgoingDocument:
urlsFromURLs:handle:bundleIdentifier:domainIdentifier:uniqueIdentifier:documentTitle:documentDate:documentTimeInterval:receivedAt:isOutgoingDocument:
useAllLanguagesAtOnce:
useCaseForUseCaseString:
useMLModelForContactSharing
useMLModelForContacts
useMLModelForSelfId
useManateeSaltForHistory
useMockContactStore:
useProactiveHarvestingForBundleIdentifier:
usedBubblesCount:
userAccountsPersistedState
userActivity
userIdentifier
userInfo
userKnowledgeStore
userReplied
userVersion
username
uudecode:
vacuum
vacuumMode
vacuumWithShouldContinueBlock:error:
validActionVerbIndexRange:enrichedTaggedCharacterRanges:
validDuration
validModelOutput:error:
validObjectCoreIndexRange:enrichedTaggedCharacterRanges:
validate
validate:
validatedCompleteDateTime
value
valueForComponent:
valueForCustomKey:
valueForKey:
valueForKeyPath:
valueRange
valueString
valueWithJSValueRef:inContext:
valueWithNewErrorFromMessage:inContext:
valueWithPointer:
valueWithUndefinedInContext:
vector
verificationContextForMessageData:error:
verificationOperation:overrideVerificationStatus:withDependencies:
verificationOperation:withDependencies:
verifyDKIMSignatureForMailWithData:error:
verifyDKIMSignatureForMailWithData:options:error:
verifyDKIMSignatureForMailWithIdentifier:error:
verifyDKIMSignatureForPipelineEntity:error:
verifyDKIMSignatureForStorageEvent:error:
verifyMessageWithContext:options:error:
vipManager
vips
virtualMachineWithContextGroupRef:
visits
vocabularyIdentifier
wait
wait:
waitForBlock:timeoutSeconds:
waitForEventWithIdentifier:toAppearInEventStoreWithLastModificationDate:completion:
waitForFuturesToComplete:withCallback:
waitForGroup:timeoutSeconds:
waitForMigrations
waitForSemaphore:
waitForSemaphore:timeoutSeconds:
waitForUniqueIdentifierToProcess:
waitForXpcActivityQueue
waitUntilFinished
warningStatsCount
warningStatsForLogging:
wasSuggestedContact
weakNamePatterns
weakObjectsHashTable
weakToStrongObjectsMapTable
webPageKey
webView:authenticationChallenge:shouldAllowDeprecatedTLS:
webView:decidePolicyForNavigationAction:decisionHandler:
webView:decidePolicyForNavigationAction:preferences:decisionHandler:
webView:decidePolicyForNavigationResponse:decisionHandler:
webView:didCommitNavigation:
webView:didFailNavigation:withError:
webView:didFailProvisionalNavigation:withError:
webView:didFinishNavigation:
webView:didReceiveAuthenticationChallenge:completionHandler:
webView:didReceiveServerRedirectForProvisionalNavigation:
webView:didStartProvisionalNavigation:
webView:navigationAction:didBecomeDownload:
webView:navigationResponse:didBecomeDownload:
webViewWebContentProcessDidTerminate:
weekOfYear
weeks
when
whitelistedLogFromLog:
whitelistedRangesInContent:
whitelistedVerbInContent:
whitespaceAndNewlineCharacterSet
whitespaceCharacterSet
whitespaceSplit:
wildcardsMatches
willChangeValueForKey:
windowLength
withBucketSize:andNgrams:
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:
withEmailMapping:linkMapping:
withFullNameMapping:firstNameMapping:lastNameMapping:andPossessive:
withFullNameMapping:firstNameMapping:lastNameMapping:minimumConfidence:confidenceMapper:tokenToIgnore:andPossessive:
withHelperMappingType:andLanguage:
withMappings:
withMethods:
withNumericMapping:andSymbolicMapping:
withPerMessageTransformer:
withTarget:maxDistance:
withTargetMapping:phoneMapping:emailMapping:addressMapping:andDateMapping:
withTransformers:
write:
write:maxLength:
writeAndPushConfirmedEventHashes:
writeAndPushConfirmedEventWithoutTimestampHashes:
writeAndPushConfirmedReminderHashes:
writeAndPushRejectedEventHashes:
writeAndPushRejectedReminderHashes:
writeCNContactMatchAndUpdateSetForContact:withMatches:andMaxEntityId:
writeCNContactMatchForContact:withMatches:andMaxEntityId:
writeCNContactMissForRecordId:
writeData:
writeEmailVerificationResultForEmailWithKey:eventEntities:
writeEnrichment:
writeEntity:
writeEntity:withSpotlightReferenceForBundleIdentifier:uniqueIdentifier:domainIdentifier:
writeEntityGeocodeResultToDb:
writeIdentityBlobs:forceRewrite:
writeInteractionEventEntities:
writeSerializedContact:
writeSerializedContactAndUpdateEntityIDSet:
writeSerializedContactPlaceholder:
writeTo:
writeToFile:atomically:
writeToPlistWithObject:andChunks:
writeTombstoneForSpotlightReferenceWithBundleIdentifier:
writeTombstoneForSpotlightReferenceWithBundleIdentifier:domainIdentifier:
writeTombstoneForSpotlightReferenceWithBundleIdentifier:domainIdentifiers:
writeTombstoneForSpotlightReferenceWithBundleIdentifier:uniqueIdentifier:
writeTombstoneForSpotlightReferenceWithBundleIdentifier:uniqueIdentifiers:
writeTransaction:
writeTransactionDepth
writeTransactionWithHandle:block:
writeURL:
writeWithEntityStore:
writebackEnrichmentsForNewCopyOfMessage:
x_wr_timezone
year
zeroColumn:
zone
@16@0:8
B24@0:8@16
@24@0:8@16
@32@0:8@16@24
@24@0:8^{_NSZone=}16
v24@0:8@16
B16@0:8
v20@0:8B16
v16@0:8
@"CSPerson"
@"NSArray"
@"NSString"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@40@0:8@16@24@32
@24@0:8@"NSMutableArray"16
@40@0:8@16@"NSArray"24@"NSDictionary"32
@"NSObject<PMLTransformerProtocol>"
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
{?="model"b1"supervision"b1"result"b1}
v20@0:8I16
I16@0:8
{?="exitCode"b1}
{?="app"b1"wasKnownContact"b1"wasSuggestedContact"b1}
@32@0:8Q16@24
@56@0:8@16@24@32@40@48
v48@0:8@16@24q32@40
v40@0:8@16@24@32
@"INPersonHandle"
@"NSDate"
@"NSPersonNameComponents"
@"SGSocialProfileDetails"
{?="app"b1"wasSuggestedContact"b1}
@32@0:8@16^@24
@24@0:8q16
@60@0:8@16@24@32@40C48q52
B28@0:8C16@20
{_PASDBIterAction_=B}32@0:8@16@24
B32@0:8q16^q24
B32@0:8@16^q24
B32@0:8@16@24
@32@0:8@16Q24
#24@0:8Q16
@40@0:8@16@24Q32
@48@0:8@16@24@32@40
@"<PMLMultiLabelClassifierProtocol>"
@"<PMLTransformerProtocol>"
@"SGModelSource"
@40@0:8@16@24#32
v24@0:8#16
@"PMLSessionDescriptor"
@40@0:8Q16Q24@32
B32@0:8Q16@24
{?="detail"b1"extractionModelVersion"b1"extractionSignatureSource"b1"foundInSenderCNContact"b1"outcome"b1"source"b1"isUnlikelyPhone"b1"signature"b1}
{?="detail"b1"foundIn"b1"source"b1"tokens"b1"hasName"b1}
q24@0:8@16
{?="cacheHit"b1}
{?="contactDetail"b1"mode"b1"model"b1"supervision"b1"correct"b1"result"b1}
v40@0:8@16@24@?32
@32@0:8@16@?24
v32@0:8@16@24
@52@0:8@16@24@32@40B48
B32@0:8@16q24
@56@0:8@16C24@28@36@44B52
@24@0:8^@16
@40@0:8@16@24^@32
@52@0:8@16C24@28@36@44
C16@0:8
^i16@0:8
i24@0:8Q16
v32@0:8^i16Q24
v24@0:8Q16
{?="list"^i"count"Q"size"Q}
@"SGMIMetricsTrialMetadata"
@"SGMIMetricsSubmodelsStats"
{?="biomeAggregationPerformanceInMilliSeconds"b1"cumulatedSubmodelsRollbackForPostDeletionPolicyPerformanceInMilliSeconds"b1"submodelsPruningForCappingPolicyPerformanceInMilliSeconds"b1"submodelsUpdatePerformanceInMilliSeconds"b1"daysAvailableDuringIncrementalUpdate"b1"daysProcessedDuringIncrementalUpdate"b1"deletedEmailsCount"b1"deletedTokensCountToComplyToCappingPolicy"b1"hoursSinceLastIncrementalUpdate"b1"hoursSinceReference"b1"mailsProcessedDuringIncrementalUpdate"b1"rollbackedEmailsCountToComplyToPostDeletionPolicy"b1"rollbackedSlicesCountToComplyToPostDeletionPolicy"b1"isSubmodelRebuilt"b1}
@28@0:8@16B24
B36@0:8@16@24B32
@40@0:8@16@24@?32
v40@0:8@"SGSimpleMailMessage"16@"SGPipelineEntity"24@"SGRequestContext"32
v40@0:8@"SGTextMessage"16@"SGPipelineEntity"24@"SGRequestContext"32
@56@0:8@16@24@32@40Q48
@80@0:8@16@24C32@36C44@48C56@60@68B76
@32@0:8q16@24
@"NSMutableDictionary"
@"RTRoutineManager"
{?="app"b1}
@"NSNumber"
@"_PASLock"
{?="errorCode"b1}
@"FIAPResult"16@0:8
@"FIAPResult"24@0:8@"CSSearchableItem"16
@"FIAPResult"32@0:8@"CSUserAction"16@"CSSearchableItem"24
@"FIAPResult"40@0:8@"INInteraction"16@"NSString"24@"NSString"32
v32@0:8@"NSString"16@"NSArray"24
v24@0:8@"NSString"16
@"HVConsumerReply"24@0:8@"HVSpotlightDeletionRequest"16
@"HVConsumerReply"24@0:8@"HVConsumptionContext"16
@84@0:8@16@24@32@40B48@52@60@68@76
@76@0:8@16@24@32@40B48@52@60@68
@"SGSqlEntityStore"
@"SGURLDissector"
@32@0:8@16q24
@52@0:8@16@24@32B40Q44
q32@0:8q16@24
q32@0:8q16{SGUnixTimestamp_=d}24
@"SGMIMetricsAggregatedAccuracyLog"
{?="hoursSinceReference"b1}
{?="method"b1}
{?="customResponsesAfterPruning"b1}
@"NSMutableArray"
@32@0:8@16B24B28
v76@0:8{SGMDocumentType_=Q}16B24B28{SGMContactDetailType_=Q}32{SGMContactDetailExtractionOutcome_=Q}40{SGMContactDetailOwner_=Q}48@56B64{SGMContactDetailExtractionSignatureSource_=Q}68
v76@0:8{SGMContactDetailExtractionOutcome_=Q}16{SGMContactDetailType_=Q}24@32B40B44Q48@56@64B72
v48@0:8{SGMContactDetailExtractionOutcome_=Q}16@24B32B36@40
v60@0:8{SGMContactDetailExtractionOutcome_=Q}16@24B32B36@40@48B56
v68@0:8{SGMContactDetailExtractionOutcome_=Q}16@24B32B36@40{SGMContactDetailOwner_=Q}48@56B64
v52@0:8{SGMContactDetailExtractionOutcome_=Q}16@24{_NSRange=QQ}32B48
v48@0:8C16@20@28C36C40C44
v28@0:8B16i20i24
v40@0:8@16@24{SGMContactDetailFoundIn_=Q}32
@"PETEventTracker2"
v56@0:8@16@24@32@40q48
v64@0:8@16@24@32@40@48@56
B24@0:8q16
@24@0:8@"NSString"16
B44@0:8i16@20@?28@36
v32@0:8@16Q24
v24@0:8d16
@44@0:8@16i24@28@36
@"SGEntity"
@"SGCuratedEventKey"
v24@0:8@"NSSet"16
@32@0:8@?16@?24
v40@0:8Q16Q24@32
v44@0:8i16@20@28@36
v32@0:8@16S24S28
v40@0:8Q16Q24@"NSString"32
v44@0:8i16@"SGRecordId"20@"NSString"28@"NSString"36
v40@0:8@"SGRecordId"16@"NSString"24@"NSString"32
v32@0:8@"NSString"16S24S28
v32@0:8@"SGRecordId"16S24S28
v24@0:8@?16
v24@0:8@?<v@?@"SGXPCResponse1">16
v24@0:8@?<v@?@"SGXPCResponse">16
v32@0:8@16@?24
v32@0:8@"SGRealtimeEvent"16@?<v@?@"SGXPCResponse">24
v32@0:8@"SGRecordId"16@?<v@?@"SGXPCResponse">24
v40@0:8@"NSString"16@"NSDate"24@?<v@?@"SGXPCResponse1">32
v36@0:8@16i24@?28
v36@0:8@"SGRealtimeContact"16i24@?<v@?@"SGXPCResponse">28
v36@0:8@"SGRecordId"16i24@?<v@?@"SGXPCResponse">28
v40@0:8@16Q24@?32
v32@0:8Q16@?24
v40@0:8@16q24@?32
v60@0:8@16@24@32B40Q44@?52
v36@0:8Q16B24@?28
v48@0:8@16@24@32@?40
v40@0:8q16@24@?32
v56@0:8q16Q24d32Q40@?48
v40@0:8q16Q24@?32
v88@0:8@16@24@32@40@48@56@64@72@?80
v96@0:8@16@24@32@40@48@56@64@72@80@?88
v36@0:8B16@20@?28
v36@0:8B16q20@?28
v40@0:8@"CSSearchableItem"16Q24@?<v@?@"SGXPCResponse1">32
v40@0:8@"NSArray"16Q24@?<v@?@"SGXPCResponse">32
v40@0:8@"NSArray"16@"NSArray"24@?<v@?@"SGXPCResponse">32
v32@0:8Q16@?<v@?@"SGXPCResponse1">24
v32@0:8@"NSArray"16@?<v@?@"SGXPCResponse">24
v32@0:8@"NSData"16@?<v@?@"SGXPCResponse1">24
v32@0:8@"SGMailHeaders"16@?<v@?@"SGXPCResponse1">24
v40@0:8@"NSString"16q24@?<v@?@"SGXPCResponse1">32
v60@0:8@"NSArray"16@"NSArray"24@"NSDate"32B40Q44@?<v@?@"SGXPCResponse1">52
v36@0:8Q16B24@?<v@?@"SGXPCResponse1">28
v40@0:8@"NSString"16@"NSAttributedString"24@?<v@?@"SGXPCResponse1">32
v48@0:8@"NSString"16@"NSString"24@"NSDate"32@?<v@?@"SGXPCResponse1">40
v40@0:8q16@"NSArray"24@?<v@?@"SGXPCResponse">32
v56@0:8q16Q24d32Q40@?<v@?@"SGXPCResponse1">48
v40@0:8q16Q24@?<v@?@"SGXPCResponse1">32
v88@0:8@"NSString"16@"NSAttributedString"24@"NSArray"32@"NSArray"40@"NSArray"48@"NSArray"56@"NSArray"64@"NSArray"72@?<v@?@"SGXPCResponse1">80
v96@0:8@"NSString"16@"NSString"24@"NSDictionary"32@"NSArray"40@"NSArray"48@"NSArray"56@"NSArray"64@"NSArray"72@"NSArray"80@?<v@?@"SGXPCResponse1">88
v36@0:8B16@"SGMailIntelligenceWarning"20@?<v@?@"SGXPCResponse1">28
v36@0:8B16q20@?<v@?@"SGXPCResponse1">28
v40@0:8q16@"NSData"24@?<v@?@"SGXPCResponse1">32
v40@0:8q16@"NSString"24@?<v@?@"SGXPCResponse1">32
v48@0:8@16@24Q32@?40
v40@0:8@"CSSearchableItem"16Q24@?<v@?@"SGXPCResponse3">32
v48@0:8@"CSSearchableItem"16@"NSString"24Q32@?<v@?@"SGXPCResponse3">40
v48@0:8@"CSSearchableItem"16@"NSString"24Q32@?<v@?@"SGXPCResponse1">40
v48@0:8@"NSArray"16@"NSString"24Q32@?<v@?@"SGXPCResponse3">40
v36@0:8@16C24@?28
v36@0:8@"SGRecordId"16C24@?<v@?@"SGXPCResponse1">28
v48@0:8@16Q24B32B36@?40
v36@0:8B16Q20@?28
v40@0:8@"CNContact"16Q24@?<v@?@"SGXPCResponse1">32
v40@0:8@"NSString"16Q24@?<v@?@"SGXPCResponse1">32
v40@0:8@"NSArray"16Q24@?<v@?@"SGXPCResponse1">32
v32@0:8@"NSString"16@?<v@?@"SGXPCResponse1">24
v32@0:8@"SGRecordId"16@?<v@?@"SGXPCResponse1">24
v32@0:8@"NSArray"16@?<v@?@"SGXPCResponse1">24
v32@0:8@"SGSocialProfile"16@?<v@?@"SGXPCResponse1">24
v48@0:8@"NSString"16Q24B32B36@?<v@?@"SGXPCResponse1">40
v24@0:8@?<v@?@"SGXPCResponse3">16
v36@0:8B16Q20@?<v@?@"SGXPCResponse1">28
v28@0:8I16@?20
v52@0:8@16@24@32I40@?44
v64@0:8@16@24@32@40C48I52@?56
v36@0:8C16@20@?28
v28@0:8I16@?<v@?@"SGXPCResponse1">20
v52@0:8@"NSDate"16@"NSDate"24@"NSSet"32I40@?<v@?@"SGXPCResponse1">44
v64@0:8@"NSDate"16@"NSDate"24@"NSSet"32@"NSString"40C48I52@?<v@?@"SGXPCResponse1">56
v36@0:8C16@"NSString"20@?<v@?@"SGXPCResponse">28
v56@0:8@16@24@32B40B44@?48
v44@0:8@16@24B32@?36
v56@0:8@"NSString"16@"NSURL"24@"NSLocale"32B40B44@?<v@?@"SGXPCResponse1">48
v32@0:8@"SGSuggestedEventLaunchInfo"16@?<v@?@"SGXPCResponse">24
v40@0:8@"NSURL"16@"NSString"24@?<v@?@"SGXPCResponse1">32
v44@0:8@"NSURL"16@"NSString"24B32@?<v@?@"SGXPCResponse1">36
v48@0:8@"NSURL"16@"NSString"24@"NSString"32@?<v@?@"SGXPCResponse1">40
v32@0:8@"SGReminder"16@?<v@?@"SGXPCResponse">24
v32@0:8@"NSString"16@?<v@?@"SGXPCResponse">24
v40@0:8@"NSData"16@"NSData"24@?<v@?@"SGXPCResponse">32
v40@0:8@"NSString"16@"NSArray"24@?<v@?@"SGXPCResponse">32
v40@0:8@"NSString"16@"_PASDomainSelection"24@?<v@?@"SGXPCResponse">32
v52@0:8@16@24Q32I40@?44
v60@0:8@16@24@32Q40I48@?52
v36@0:8Q16I24@?28
v56@0:8@16@24@32@40@?48
v28@0:8B16@?20
v64@0:8@16@24@32d40@48@?56
v56@0:8@16@24@32Q40@?48
v52@0:8@"NSDate"16@"NSDate"24Q32I40@?<v@?@"SGXPCResponse1">44
v60@0:8@"NSDate"16@"NSDate"24@"NSString"32Q40I48@?<v@?@"SGXPCResponse1">52
v36@0:8Q16I24@?<v@?@"SGXPCResponse1">28
v56@0:8@"NSURL"16@"NSString"24@"NSString"32@"NSDate"40@?<v@?@"SGXPCResponse1">48
v48@0:8@"NSData"16@"NSString"24Q32@?<v@?@"SGXPCResponse1">40
v28@0:8B16@?<v@?@"SGXPCResponse">20
v64@0:8@"NSArray"16@"NSArray"24@"NSString"32d40@"NSArray"48@?<v@?@"SGXPCResponse1">56
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"SGXPCResponse">32
v56@0:8@"NSString"16@"NSString"24@"NSDate"32@"NSDate"40@?<v@?@"SGXPCResponse">48
v56@0:8@"NSString"16@"NSData"24@"NSString"32Q40@?<v@?@"SGXPCResponse1">48
v48@0:8@"SGSimpleMailMessage"16@"NSData"24Q32@?<v@?@"SGXPCResponse1">40
v40@0:8@"NSDictionary"16@"NSArray"24@?<v@?@"SGXPCResponse1">32
S24@0:8@16
@40@0:8@16@?24@?32
B40@0:8@16@24@32
B48@0:8@16@24@32Q40
v44@0:8@16@24i32@?36
v48@0:8@16@24B32i36@?40
B32@0:8@?16@24
{SGMContactDetailUsedApp_=Q}24@0:8@16
@"NSXPCConnection"
@"SGSuggestHistory"
@"_PASNotificationToken"
@"NSOperationQueue"
@"SGDManagerForCTS"
@"SGEKEventStoreProvider"
@"CNContactStore"
@"NSDictionary"
@"NSLock"
@"SGXpcTransaction"
@"SGSearchableItemIdTriple"
@"SGFuture"
@"SGCoalescingDropBox"
@"SGServiceContext"
@"NSDataDetector"
{?="ignorablePredictedAsIgnorable"b1"ignorablePredictedAsNeutral"b1"ignorablePredictedAsSalient"b1"neutralPredictedAsIgnorable"b1"neutralPredictedAsNeutral"b1"neutralPredictedAsSalient"b1"salientPredictedAsIgnorable"b1"salientPredictedAsNeutral"b1"salientPredictedAsSalient"b1}
@48@0:8@16@24@32B40B44
Q32@0:8@16@24
{?="documentSource"b1"harvestSource"b1"harvestedOnBattery"b1"highPriority"b1"receivedOnBattery"b1}
@24@0:8r*16
@"NSData"
B48@0:8@16@24@32@40
B56@0:8@16@24@32@40@48
{SGDSuggestManagerCTSCriteriaState="hasItemsHighPriority"B"hasItemsLowPriority"B}
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
@"<SGXPCActivityManagerProtocol>"
@?24@0:8@?16
@?16@0:8
C32@0:8@16@24
@40@0:8q16q24@32
@40@0:8@16@24^B32
q64@0:8@16@24@32Q40{_NSRange=QQ}48
{SGMEventICSSourceType_=Q}24@0:8@16
@"SGAccountsAdapter"
@"SGContactDetail"
q16@0:8
@"NSMutableSet"
@"SGRecordId"
@"SGContactDetailsHolder"
@24@0:8^I16
v32@0:8@16d24
d32@0:8@16d24
d24@0:8@16
v48@0:8d16d24@32@40
@"NSSet"
@"ACAccountStore"
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_source>"
v24@0:8@"SGStorageEvent"16
v24@0:8@"NSArray"16
v24@0:8@"SGStorageContact"16
v24@0:8@"SGStorageReminder"16
@"REMStore"
v20@0:8f16
@24@0:8Q16
f16@0:8
@"SGMIMetricsInferenceAndGroundTruth"
{?="hoursSinceReference"b1"nbCharactersInMailSubject"b1"nbTokensInMailSubject"b1"previousInteractionFromUserOnConversationInMinutes"b1"previousInteractionOnConversationInMinutes"b1"senderConnectionScore"b1"timeDifferenceFromReceptionToSaliencyInferenceInSeconds"b1}
@44@0:8@16B24@28^@36
@68@0:8@16@24@32i40@?44@52@60
@48@0:8@16i24@?28@36B44
@32@0:8@16^i24
@40@0:8@16Q24Q32
{_NSRange=QQ}16@0:8
v32@0:8{_NSRange=QQ}16
@"SGExtractionInfo"
{_NSRange="location"Q"length"Q}
v24@0:8{SGUnixTimestamp_=d}16
v64@0:8@16@24@32{_NSRange=QQ}40@56
@64@0:8@16@24@32{_NSRange=QQ}40@56
^{?={?=SS}BBBBB}16@0:8
{?="_featureType"{?="bom"S"tag"S}"hasInhumanHeaders"B"inhumanEmailAddress"B"inhumanAuthorName"B"inhumanBody"B"isTemplate"B}
@"_PASLazyResult"
@"SGMessage"
@"SGSimpleMailMessage"
@"SGTextMessage"
@"INInteraction"
@"SGHarvestQueueMetrics"
{SGUnixTimestamp_=d}16@0:8
d16@0:8
v24@0:8q16
@"SGDuplicateKey"
{SGUnixTimestamp_="secondsFromUnixEpoch"d}
@"SGSimpleTimeRange"
@"NSUbiquitousKeyValueStore"
@36@0:8@16@24B32
@32@0:8@16{SGUnixTimestamp_=d}24
@36@0:8@16{SGUnixTimestamp_=d}24B32
v32@0:8@16{SGUnixTimestamp_=d}24
@44@0:8@16@24@32B40
@"SGNoCloudNSUbiquitousKeyValueStore"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@56@0:8Q16@24@32@40@48
@36@0:8@16Q24B32
{_NSRange=QQ}24@0:8@16
v32@0:8^{__DDResult={__CFRuntimeBase=QAQ}{__DDQueryRange={__DDQueryOffset=b32b32}{__DDQueryOffset=b32b32}}{?=qq}q^{__CFArray}^{__CFString}^{__CFString}^v^{__CFDictionary}qCf}16@24
^{__DDResult={__CFRuntimeBase=QAQ}{__DDQueryRange={__DDQueryOffset=b32b32}{__DDQueryOffset=b32b32}}{?=qq}q^{__CFArray}^{__CFString}^{__CFString}^v^{__CFDictionary}qCf}
B24@0:8^{__DDResult={__CFRuntimeBase=QAQ}{__DDQueryRange={__DDQueryOffset=b32b32}{__DDQueryOffset=b32b32}}{?=qq}q^{__CFArray}^{__CFString}^{__CFString}^v^{__CFDictionary}qCf}16
@48@0:8@16@24^{_NSRange=QQ}32@40
@84@0:8I16{_NSRange=QQ}20{_NSRange=QQ}36@52{_NSRange=QQ}60@76
@92@0:8i16{_NSRange=QQ}20{_NSRange=QQ}36@52{_NSRange=QQ}60@76@84
@132@0:8@16@24@32@40I48{_NSRange=QQ}52{_NSRange=QQ}68@84{_NSRange=QQ}92@108B116B120B124B128
@92@0:8I16{_NSRange=QQ}20{_NSRange=QQ}36@52{_NSRange=QQ}60@76@84
@"NSTimeZone"
@"SGPostalAddressComponents"
@56@0:8@16@24B32@36@44B52
@44@0:8@16B24@28@36
v32@0:8q16@24
@36@0:8@16i24@28
@24@0:8@?16
B60@0:8@16@24@32@40@48B56
B64@0:8@16@24@32@40@48B56B60
v44@0:8@16@24I32d36
v48@0:8^{graph_t=II^{_vertex_t}}16@24^{DisjointSetHandle=}32@40
@"SGPatternDataFile"
@"NSHashTable"
@24@0:8#16
@"NSCache"
@28@0:8@16i24
@"NSString"24@0:8@"NSString"16
@"_PASCachedResult"
@"SGSimpleNamedEmailAddress"
@"HVHtmlParser"
@"<PMLTrainingProtocol>"
@96@0:8@16@24@32@40@48@56@64@72@80@88
I32@0:8@16^{_LXLexicon=}24
@48@0:8@16@24@32^@40
@32@0:8@16^B24
B48@0:8@16@24^@32@?40
B56@0:8@16@24@32^@40@?48
@"NSCharacterSet"
@40@0:8@16Q24i32B36
^{?=QS[3c]}24@0:8r*16
Q24@0:8r*16
i24@0:8r*16
@32@0:8r*16@24
^{?=QS[3c]}
@44@0:8@16S24@28@36
@28@0:8@16S24
@44@0:8@16@24S32@36
@52@0:8@16@24S32@36@44
@"<SGSeekable>"
@"_PASLazyPurgeableResult"
@"SGMIMetricsSubmodelStats"
@32@0:8@16#24
@48@0:8@16@24@32#40
v40@0:8Q16@24@?32
@"<SGBloomFilterChunk>"
v24@0:8(?=Q(?=II))16
B24@0:8(?=Q(?=II))16
[49200C]
@"SGConversationTracker"
B24@0:8@"<SGConversationTurnProtocol>"16
@"NSDate"16@0:8
@"NSRegularExpression"
@32@0:8@16i24i28
@36@0:8@16i24i28i32
@"MLFeatureValue"24@0:8@"NSString"16
@"NSSet"16@0:8
@88@0:8@16@24@32@40@48@56@64@72@80
@"MLMultiArray"
@24@0:8S16S20
@52@0:8@16@24@32@40S48
@68@0:8@16S24@28@36@44@52Q60
v68@0:8@16S24@28@36@44@52Q60
v52@0:8@16S24@28@36Q44
@28@0:8S16S20S24
v40@0:8@16@24S32S36
v32@0:8@?16@?24
@20@0:8S16
Q24@0:8@16
v28@0:8i16@?20
v36@0:8@16@24i32
v28@0:8i16@?<v@?@"NSObject<OS_xpc_object>">20
@"NSObject<OS_xpc_object>"20@0:8i16
q24@0:8@"NSObject<OS_xpc_object>"16
B32@0:8@"NSObject<OS_xpc_object>"16q24
v36@0:8@"NSObject<OS_xpc_object>"16@"NSObject<OS_xpc_object>"24i32
B24@0:8@"NSObject<OS_xpc_object>"16
@"NSObject<OS_xpc_object>"24@0:8@"NSObject<OS_xpc_object>"16
@"SGLongRunningTaskManager"
@24@0:8d16
{?="ageOfTheSubmodelInDays"b1"nbExtremelyDiscriminantTokensForIgnorability"b1"nbExtremelyDiscriminantTokensForSaliency"b1"nbHighlyDiscriminantTokensForIgnorability"b1"nbHighlyDiscriminantTokensForSaliency"b1}
@40@0:8@16{_NSRange=QQ}24
@44@0:8@16{_NSRange=QQ}24i40
S24@0:8Q16
v40@0:8^S16{_NSRange=QQ}24
r*16@0:8
r*20@0:8B16
r^S16@0:8
(?="ascii"[0c]"utf16"[0S])
I24@0:8@16
I24@0:8@"NSString"16
v32@0:8@"NSDictionary"16@?<v@?B>24
v32@0:8@"NSDictionary"16@?<v@?@"NSArray"@"NSDictionary"@"NSArray"@"NSDictionary">24
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary">24
v32@0:8@"NSDictionary"16@?<v@?@"NSString">24
v40@0:8@"NSArray"16@"NSArray"24@?<v@?@"NSDictionary">32
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSArray">40
v32@0:8@"NSString"16@?<v@?@"SGDOMParserResult">24
v48@0:8@16@24@32@40
@"JSVirtualMachine"
@"JSContext"
@"SGReverseTemplatesJSDataDetectors"
@"NSURL"
@"NSISO8601DateFormatter"
@"_PASCFBurstTrie"
{?=b1b1b1b1b1b27}24@0:8@16
{?=b1b1b1b1b1b27}32@0:8r*16Q24
@"SGSqliteDatabase"
@44@0:8@16i24^@28@36
B44@0:8q16i24@28@?36
i32@0:8^{sqlite3_stmt=}16r*24
i36@0:8^{sqlite3_stmt=}16r*24i32
i40@0:8^{sqlite3_stmt=}16r*24q32
i40@0:8^{sqlite3_stmt=}16r*24d32
i40@0:8^{sqlite3_stmt=}16r*24@32
^{sqlite3=}16@0:8
B40@0:8@16@?24@?32
B48@0:8@16@?24@?32@?40
B32@0:8@16@?24
@56@0:8@16@24@32@?40@?48
B24@0:8@?16
B20@0:8I16
@"SGSqliteDatabaseImpl"
@"SGSqliteDatabaseSharedLock"
v52@0:8@16@24@32@40B48
@52@0:8@16@24B32Q36B44B48
@56@0:8@16@24d32@40@48
@20@0:8C16
v72@0:8@16@24@32Q40@48@56B64B68
v68@0:8@16@24@32B40Q44@52@60
v36@0:8@16@24B32
q32@0:8@16q24
v32@0:8{SGUnixTimestamp_=d}16@?24
v40@0:8{SGUnixTimestamp_=d}16@?24Q32
v28@0:8@16B24
v32@0:8@16B24B28
@"EAEmailAddressSet"
@40@0:8q16@24@32
@40@0:8q16Q24d32
v32@0:8@16q24
v40@0:8@16q24@32
@32@0:8q16Q24
@48@0:8q16Q24d32Q40
v36@0:8@16@24f32
q32@0:8@16@24
{?=b1b1b1b1b8b20}24@0:8@16
d32@0:8@16@24
B40@0:8@16@24d32
@92@0:8B16d20d28I36d40I48B52B56B60I64I68B72B76B80B84B88
v28@0:8d16I24
v48@0:8@16@24@32d40
@"NSArray"16@0:8
@24@0:8@"NSArray"16
@24@0:8^{sqlite3_stmt=}16
@28@0:8^{sqlite3_stmt=}16B24
f24@0:8@16
{?="attachmentsProbability"b1"conversationProbability"b1"domainFromSenderProbability"b1"listIdProbability"b1"mailboxProbability"b1"mailboxTypeProbability"b1"personCCRecipientsProbability"b1"personFromSenderInDyadicConversationProbability"b1"personFromSenderProbability"b1"personToRecipientsProbability"b1"standardMailRulesProbability"b1"subjectContentProbability"b1"subjectCountStatsProbability"b1}
Q40@0:8Q16Q24Q32
Q24@0:8Q16
d32@0:8d16q24
Q40@0:8@16@24Q32
Q56@0:8@16@24Q32Q40Q48
@64@0:8@16d24d32@40@48@56
v40@0:8@"WKWebView"16@"WKNavigationAction"24@?<v@?q>32
v48@0:8@"WKWebView"16@"WKNavigationAction"24@"WKWebpagePreferences"32@?<v@?q@"WKWebpagePreferences">40
v40@0:8@"WKWebView"16@"WKNavigationResponse"24@?<v@?q>32
v32@0:8@"WKWebView"16@"WKNavigation"24
v40@0:8@"WKWebView"16@"WKNavigation"24@"NSError"32
v40@0:8@"WKWebView"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"WKWebView"16
v40@0:8@"WKWebView"16@"NSURLAuthenticationChallenge"24@?<v@?B>32
v40@0:8@"WKWebView"16@"WKNavigationAction"24@"WKDownload"32
v40@0:8@"WKWebView"16@"WKNavigationResponse"24@"WKDownload"32
@"NSObject<OS_dispatch_semaphore>"
@"WKWebView"
@64@0:8@16@24d32d40d48@56
@48@0:8d16d24d32@40
@"NSData"16@0:8
@64@0:8@"NSString"16@"NSString"24d32d40d48@"NSData"56
@48@0:8d16d24d32@"NSData"40
@60@0:8i16@20@28@36d44d52
@68@0:8i16@20@28d36d44d52d60
@84@0:8i16@20@28@36d44d52d60d68@76
Q24@0:8q16
@28@0:8C16q20
@"SGMIMetricsMailIntelligenceForMessage"
{?="deploymentId"b1}
:24@0:8^{objc_property=}16
v48@0:8@16@24@32^v40
@"CKRecordID"
@"CKServerChangeToken"
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
@40@0:8@?16@?24Q32
@44@0:8@?16@?24Q32B40
@"_PASKVOHandler"
@"CKDatabase"
@"APSConnection"
@"CKContainer"
@"_SGDCloudKitSyncPersistedState"
@"NSOperation"
@"NSError"
^{ct_green_tea_logger_s=}
@"SGDCloudKitSync"
v32@0:8@?16@24
@"NSMapTable"
@"<NSObject>"
v40@0:8@?16@24#32
@32@0:8C16C20@24
@"NSMutableData"
@40@0:8q16q24q32
q24@0:8q16
{?="category"b1"count128KBTo512KB"b1"count32KBTo128KB"b1"count512KBTo2MB"b1"count8KBTo32KB"b1"countOver2MB"b1"countUpTo8KB"b1}
@76@0:8I16@20{_NSRange=QQ}28@44@52B60@64B72
@92@0:8I16@20@28{_NSRange=QQ}36@52B60{_NSRange=QQ}64@80B88
B28@0:8@16B24
@80@0:8@16@24@32@40@48@56@64@72
@"SGStorageEvent"
@"SGStorageContact"
@"SGStorageReminder"
{?="predictedMissingElementScore"b1"foundMatchingElement"b1}
v44@0:8@16Q24B32@?36
v56@0:8@16Q24Q32@?40@?48
v52@0:8@16Q24B32Q36@?44
v72@0:8@16Q24@?32Q40@?48@56B64B68
B32@0:8@16Q24
v72@0:8@16@24@32@40@48@56@?64
C24@0:8@16
v56@0:8@16@24@32@40Q48
v48@0:8@16@24@32Q40
@44@0:8r*16@?24@?32I40
v32@0:8@?16d24
{_opaque_pthread_cond_t="__sig"q"__opaque"[40c]}
@"NSObject<OS_os_transaction>"
@64@0:8@16@24@32@40@48@56
q48@0:8@16@24@32@40
@36@0:8{?=SS}16Q20Q28
@36@0:8{?=SS}16{_NSRange=QQ}20
{?=SS}16@0:8
{?="category"S"subtype"S}
{_NSRange=QQ}48@0:8@16@24@32@40
{_NSRange=QQ}52@0:8@16{_NSRange=QQ}24B40@44
{_NSRange=QQ}40@0:8@16@24@32
B56@0:8@16{_NSRange=QQ}24Q40Q48
B40@0:8@16^{_NSRange=QQ}24^B32
@"CNContact"
{?="numberOfLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20"b1"numberOfLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20"b1"numberOfPredictedAttachmentOnLargeIncomingMailsWithAttachmentRoundedToClosestMultipleOf20"b1"numberOfPredictedAttachmentOnLargeOutgoingMailsWithAttachmentRoundedToClosestMultipleOf20"b1"totalNumberOfEmailsProcessedForAttachmentDetectionRoundedToClosestMultipleOf20"b1"totalNumberOfEmailsProcessedForFollowUpDetectionRoundedToClosestMultipleOf20"b1"totalNumberOfEmailsProcessedForRecipientDetectionRoundedToClosestMultipleOf20"b1}
{SGUnixTimestamp_=d}24@0:8@16
@56@0:8{_NSRange=QQ}16@32@40@48
B40@0:8{_NSRange=QQ}16@32
B32@0:8@16^@24
@"SGPipelineEntity"
@36@0:8@16r*24B32
@32@0:8@16r*24
@36@0:8@16B24^B28
v48@0:8@16{_NSRange=QQ}24@?40
@36@0:8q16Q24B32
@40@0:8@16q24@?32
@56@0:8@16@?24Q32@40@48
@40@0:8@16@?24@32
@"HKHealthStore"
v48@0:8@16@24{SGMSelfIdModelType_=Q}32Q40
@60@0:8@16@24^{_NSRange=QQ}32{_NSRange=QQ}40B56
v52@0:8@16@24C32@36C44C48
@40@0:8{_NSRange=QQ}16@32
@32@0:8@16^{_NSRange=QQ}24
@"SGDetectedAttributeML"
@"SGQuickResponsesML"
@"SGContactPipelineHelper"
@"SGHKHealthStore"
v40@0:8@16@24Q32
v32@0:8d16@24
v40@0:8d16@24@32
v40@0:8@16Q24Q32
@56@0:8Q16@24{_NSRange=QQ}32@48
@20@0:8B16
@"TRIClient"
@"TRIRolloutIdentifiers"
@80@0:8@16@24Q32@40@48@56@64@72
v40@0:8@16@24q32
@32@0:8@16^q24
@40@0:8@16B24B28B32i36
@"SGM2HarvestCost"
@"SGMIFeatureStore"
@"_PASSqliteDatabase"
^{sqlite3_tokenizer_module=i^?^?^?^?^?^{sqlite3}}
^{sqlite3_tokenizer=^{sqlite3_tokenizer_module}}
@40@0:8@16@24B32B36
@48@0:8@16@24B32@36B44
@44@0:8@16B24@28^B36
v24@0:8^@16
@52@0:8@16@24B32@36B44B48
@28@0:8q16B24
v36@0:8@16B24@?28
v40@0:8@16B24B28@?32
v52@0:8@16B24Q28@?36@?44
@40@0:8@16Q24@?32
@44@0:8@16B24Q28@?36
@40@0:8@16B24B28Q32
d40@0:8@16@24@32
{_PASDBIterAction_=B}84@0:8@16@24q32@40@48@56@64@72B80
@28@0:8B16Q20
@40@0:8q16@24B32B36
q24@0:8Q16
@44@0:8{SGUnixTimestamp_=d}16{SGUnixTimestamp_=d}24Q32I40
@52@0:8{SGUnixTimestamp_=d}16{SGUnixTimestamp_=d}24@32Q40I48
@40@0:8{SGUnixTimestamp_=d}16{SGUnixTimestamp_=d}24Q32
@48@0:8{SGUnixTimestamp_=d}16{SGUnixTimestamp_=d}24@32Q40
@60@0:8{SGUnixTimestamp_=d}16{SGUnixTimestamp_=d}24Q32@40I48@?52
B36@0:8B16@20^@28
@"SGDatabaseJournal"
{atomic_flag="_Value"AB}
@"SGJournal"
@"SGSpotlightContactsAdapter"
@"SGSGtoCNContactsCacheUpdateAdapter"
@"SGBloomFilter"
@"NSMutableOrderedSet"
@"SGEnrichmentWritebackAdapter"
@"SGKeyValueCacheManager"
v40@0:8@"INInteraction"16@"SGPipelineEntity"24@"SGRequestContext"32
@40@0:8@16@24d32
@48@0:8@16@24@32d40
B24@0:8Q16
v44@0:8@16@24Q32i40
v52@0:8@16@24@32Q40i48
v68@0:8@16@24@32@40@48Q56i64
@"<SGReverseTemplateJS>"
v40@0:8@16Q24@32
v48@0:8@16@?24Q32@40
v64@0:8@16@24@?32@40@48Q56
v72@0:8@16@24@?32@40@48Q56@64
@48@0:8@16@24d32@40
@32@0:8^{__DDResult=}16@24
v40@0:8^{__DDResult=}16@24@32
@"NSDateFormatter"
@116@0:8@16@24@32@40@48@56@64@72f80d84d92d100@108
{?="accuracy"b1"latitude"b1"longitude"b1"quality"b1"locationType"b1}
@84@0:8@16B24@28@36@44@52@60@68@76
@76@0:8@16B24@28@36@44@52@60@68
@68@0:8@16B24@28@36@44@52@60
@40@0:8@16B24q28B36
@"SGMailClientUtil"
@"SGMIBiomeReducedMessageEvents"
@"_DKKnowledgeStore"
{?="fromStatus"b1"toStatus"b1}
@76@0:8@16@24@32B40@44{_NSRange=QQ}52@68
@84@0:8@16Q24@32B40@44@52@60{_NSRange=QQ}68
B56@0:8Q16Q24Q32^@40@?48
B64@0:8Q16Q24Q32^@40@48@?56
v48@0:8Q16Q24Q32@?40
@48@0:8@16@24Q32^@40
@80@0:8Q16Q24@32@40@48@56Q64^@72
v44@0:8@16B24@28@36
v24@0:8@"SGSqlEntityStore"16
@"NSNumber"16@0:8
@92@0:8@16@24@32@40@48@56@64d72@80B88
@100@0:8@16@24@32@40@48@56@64@72d80@88B96
C44@0:8@16@24d32B40
@64@0:8Q16Q24Q32B40@44B52@56
@72@0:8Q16Q24Q32B40@44B52@56@64
{?="modelVersion"b1"offset"b1"dateIsCorrect"b1"didRegexTrigger"b1"didResponseKitTrigger"b1"isFromCongratulation"b1}
@48@0:8@16@24@32q40
@48@0:8@16@24q32@40
@48@0:8@16@24@32Q40
@72@0:8@16@24@32@40@48@56Q64
v56@0:8@16@24@32@40@48
@"SGIdentityKey"
@"NSTimeZone"16@0:8
@56@0:8@"NSDate"16@"NSTimeZone"24@"NSDate"32@"NSTimeZone"40@"NSArray"48
@112@0:8@16@24@32@40@48{SGUnixTimestamp_=d}56{SGUnixTimestamp_=d}64@72@80@88@96I104B108
v32@0:8@"NSArray"16@"NSString"24
v32@0:8@"NSDate"16@"NSString"24
v32@0:8@"CSUserAction"16@"CSSearchableItem"24
v40@0:8@"NSArray"16@"NSString"24@"NSString"32
v32@0:8@"NSString"16@"NSString"24
@"SGDSuggestManager"
@48@0:8@16@24@32@?40
@56@0:8@16@24^{?={?=SS}iiiBBBBBfiiiiiB}32@40@48
@40@0:8@16@24^{?={?=SS}iiiBBBBBfiiiiiB}32
v56@0:8@16@24^@32^@40q48
B48@0:8@16@24B32B36q40
B64@0:8@16@24^@32^@40q48B56B60
@40@0:8@16^{?={?=SS}iiiBBBBBfiiiiiB}24@32
@56@0:8@16@24@32@40^@48
@"SGDCKInteractionInfo"
@"SGDCKTimeRange"
{?="creationTimestamp"b1"lastModifiedTimestamp"b1"parentEntityType"b1"categoryType"b1"allDay"b1"cancelled"b1}
d40@0:8@16@24d32
@36@0:8@16B24@28
@64@0:8@16@24@32@40@48d56
@"SGMITokenCounts"
@48@0:8@16B24B28@32@40
^v16@0:8
{_NSRange=QQ}40@0:8{_NSRange=QQ}16Q32
@48@0:8@16{_NSRange=QQ}24@?40
q36@0:8@16I24@28
f32@0:8@16@24
{SGMContactDetailOwner_=Q}16@0:8
{SGMContactDetailFoundIn_=Q}16@0:8
v64@0:8@16q24@32Q40@48@?56
@100@0:8@16@24@32@40@48@56@64@72@80@88B96
@28@0:8B16@20
@36@0:8B16@20@28
v48@0:8r*16@24Q32@?40
i48@0:8r*16@24Q32@?40
@"SGRe2PrefilterTree"
@"SGMIWarningsDetectionRegex"
@44@0:8@16{_NSRange=QQ}24B40
@72@0:8@16@24@32@40@48@56@64
@"SGMIWarningsDetectionRegexes"
@64@0:8{_NSRange=QQ}16{_NSRange=QQ}32@48@56
@"NSIndexSet"
^{__CFString=}
{?="buffer"[64S]"theString"^{__CFString}"directUniCharBuffer"^S"directCStringBuffer"*"rangeToBuffer"{?="location"q"length"q}"bufferedRangeStart"q"bufferedRangeEnd"q}
@"SGMicrodataItem"
@"SGMicrodataParserStackItem"
@32@0:8Q16Q24
Q32@0:8Q16@24
v44@0:8Q16@24@?32i40
B20@0:8i16
@48@0:8@16@24@32o^@40
@52@0:8@16@24@32B40o^@44
v32@0:8@"CSSearchableIndex"16@?<v@?>24
v40@0:8@"CSSearchableIndex"16@"NSArray"24@?<v@?>32
v24@0:8@"CSSearchableIndex"16
@"NSData"48@0:8@"CSSearchableIndex"16@"NSString"24@"NSString"32o^@40
@"NSURL"52@0:8@"CSSearchableIndex"16@"NSString"24@"NSString"32B40o^@44
v56@0:8@16@24Q32@40@?48
@"SGMIDomainCountingTable"
@"_PASSqliteDatabase"16@0:8
@"NSDictionary"16@0:8
@"NSArray"24@0:8^I16
@32@0:8@?16@24
@48@0:8q16@24@32@40
@64@0:8q16Q24d32@40@48@56
v28@0:8B16@20
v44@0:8@16@24B32B36B40
v48@0:8@16q24@32@40
B40@0:8@16@?24@32
v56@0:8@16q24q32q40@48
@"_PASDatabaseMigrator"
@40@0:8@16{SGUnixTimestamp_=d}24@32
@40@0:8@16q24@32
@"NSObject<SGEntityKey>"
q32@0:8@16^@24
q40@0:8@16q24^@32
@"EMDaemonInterface"
@"ECDKIMVerifier"
@"_PASLRUCache"
v60@0:8@16S24S28@32@40C48d52
@32@0:8@16S24S28
@"SGTokenizerMappingTransformer"
@"SGNameMappingTransformer"
r^v24@0:8Q16
{?="end"b1"endUTCOffsetSeconds"b1"start"b1"startUTCOffsetSeconds"b1"floating"b1}
@100@0:8@16@24@32@40@48C56@60C68@72C80@84@92
@"SGStorageLocation"
{?="conversationAge"b1"domainFromSenderAge"b1"personCCRecipientsAge"b1"personFromSenderAge"b1"personFromSenderInDyadicConversationAge"b1"personToRecipientsAge"b1"subjectContentAge"b1}
@24@0:8r^v16
B24@0:8{SGUnixTimestamp_=d}16
{_NSRange=QQ}40@0:8{_NSRange=QQ}16@32
@40@0:8@16B24B28B32B36
@40@0:8Q16@24@32
@56@0:8@16@24B32B36B40B44B48B52
{_NSRange=QQ}32@0:8{_NSRange=QQ}16
@52@0:8@16@24B32B36B40B44B48
#24@0:8@16
{?="blockedWarningCount"b1"negativeEngagement"b1"noEngagement"b1"positiveEngagement"b1"type"b1"incomingMessage"b1}
v28@0:8@16S24
@"SGMIMetricsSubmodelsProbabilities"
{?="missingAttachmentPredictionPerformanceInMilliSeconds"b1"missingRecipientPredictionPerformanceInMilliSeconds"b1"saliencyPredictionPerformanceInMilliSeconds"b1"predictedSaliency"b1"predictedSaliencyScore"b1"estimatedGroundTruth"b1}
@"SGMicrodataDocument"
{?="s"[2Q]}
v44@0:8@16@24@32B40
B48@0:8@16@24@32^@40
B40@0:8@16@24^@32
{?="documentSource"b1"significantWork"b1}
@40@0:8Q16i24i28@32
B36@0:8i16@20@?28
@?24@0:8@16
B40@0:8@16@24^B32
@"SGDatabaseJournalFile"
