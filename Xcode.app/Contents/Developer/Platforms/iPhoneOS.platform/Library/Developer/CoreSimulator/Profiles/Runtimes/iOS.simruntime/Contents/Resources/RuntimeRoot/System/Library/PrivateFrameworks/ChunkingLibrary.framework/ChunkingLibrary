@(#)PROGRAM:ChunkingLibrary  PROJECT:ChunkingLibrary-2050
dflt
aiff
cpbitmap
jpeg
pict
sfark
sitx
tbz2
tiff
numbers
pages
dflt
aiff
aside
avci
cpbitmap
epub
heif
heic
jpeg
pict
sfark
sitx
sqlite-wal
tbz2
tiff
waveform
numbers
pages
private-sqlite-db
private-sqlite-wal
private-sqlite3-s
QuickLook/Preview.pdf
CKChunkCryptorV2Init
CKChunkCryptorV2.c
paddedLength >= dataLength
CKChunkSignatureGenerator
Bad assetKey
Bad salt
Bad concatenatedChunkKeys
CCKeyDerivationHMac %d
CKStreamKeyDerivation
CKChunkCryptor
CKChunkDigestArguments
boundaryKey
fileKey
v2 %sencrypted %@ %@
v2 %sencrypted (null keys)
CKFileSignatureGenerator
SQL DB not open: '%s'
SQL error: '%s', (%d) %s
%s SQL DB not open: '%s'
CSsql_get64
sqlite3_prepare_v2 failed: %d %s
sqlite3_step failed: %d %s
out64 parameter is NULL!
CSsql_get64_safe
PRAGMA locking_mode = EXCLUSIVE;
PRAGMA page_size = 4096;
PRAGMA journal_mode = WAL;
PRAGMA wal_autocheckpoint = 2000;
PRAGMA temp_store = MEMORY
BEGIN EXCLUSIVE
CREATE TABLE IF NOT EXISTS CSDatabaseVersion (version INTEGER)
SELECT version FROM CSDatabaseVersion
CREATE TABLE IF NOT EXISTS CSRegisteredFileTable (crt_rowid INTEGER PRIMARY KEY,crt_id
BLOB,crt_iid BIGINT,crt_filekey BLOB,crt_filesize BIGINT,crt_profileType INTEGER,crt_profileTypeIsDefault INTEGER,crt_profileConfigurationVersion TEXT,crt_profileResolvedFileExtension TEXT)
CREATE INDEX IF NOT EXISTS CSRegisteredFileTable_crt_id_inx ON CSRegisteredFileTable(crt_id)
CREATE UNIQUE INDEX IF NOT EXISTS CSRegisteredFileTable_crt_iid_inx ON CSRegisteredFileTable(crt_iid)
ALTER TABLE CSRegisteredFileTable ADD COLUMN crt_filekey BLOB
ALTER TABLE CSRegisteredFileTable ADD COLUMN crt_filesize BIGINT
ALTER TABLE CSRegisteredFileTable ADD COLUMN crt_profileType INTEGER
ALTER TABLE CSRegisteredFileTable ADD COLUMN crt_profileTypeIsDefault INTEGER
ALTER TABLE CSRegisteredFileTable ADD COLUMN crt_profileConfigurationVersion TEXT
ALTER TABLE CSRegisteredFileTable ADD COLUMN crt_profileResolvedFileExtension TEXT
CREATE TABLE IF NOT EXISTS CSChunkTable (ct_rowid INTEGER PRIMARY KEY,cid BLOB,ct_iid BIGINT,ft_rowid BIGINT,offset BIGINT,dataLen INTEGER,refCount INTEGER,timeStamp BIGINT,location INTEGER,key BLOB)
DROP TABLE IF EXISTS CSStorageFileTable
DROP TABLE IF EXISTS CSStorageChunkListTable
DROP TABLE IF EXISTS CSStoragePendingChunksTable
DROP TABLE IF EXISTS CSStoragePendingFileChunklistTable
CREATE INDEX IF NOT EXISTS CSChunkTable_cid_inx ON CSChunkTable(cid)
CREATE INDEX IF NOT EXISTS CSChunkTable_iid_inx ON CSChunkTable(ct_iid)
CREATE INDEX IF NOT EXISTS CSChunkTable_ftrowid_inx ON CSChunkTable(ft_rowid)
DROP INDEX IF EXISTS CSChunkTable_refCount_inx
DROP INDEX IF EXISTS CSChunkTable_loc_inx
DROP INDEX IF EXISTS CSChunkTable_iidloc_inx
DROP INDEX IF EXISTS CSChunkTable_rowidloc_inx
DROP INDEX IF EXISTS CSChunkTable_rowidrefcnt_inx
DROP INDEX IF EXISTS CSChunkTable_cidloc_inx
CREATE TABLE IF NOT EXISTS CSStorageFileTable (ft_rowid INTEGER PRIMARY KEY,ft_inode BIGINT,ft_space INTEGER,ft_pspace INTEGER,vt_rowid BIGINT,ft_status INTEGER)
CREATE INDEX IF NOT EXISTS CSStorageFileTable_ft_rowid_inx ON CSStorageFileTable(ft_rowid)
CREATE INDEX IF NOT EXISTS CSStorageFileTable_ft_inode_inx ON CSStorageFileTable(ft_inode)
CREATE INDEX IF NOT EXISTS CSStorageFileTable_ft_space_inx ON CSStorageFileTable(ft_space)
CREATE INDEX IF NOT EXISTS CSStorageFileTable_ft_pspace_inx ON CSStorageFileTable(ft_pspace)
CREATE INDEX IF NOT EXISTS CSStorageFileTable_vt_rowid_inx ON CSStorageFileTable(vt_rowid)
CREATE INDEX IF NOT EXISTS CSStorageFileTable_ft_status_inx ON CSStorageFileTable(ft_status)
CREATE TABLE IF NOT EXISTS CSStorageChunkListTable (clt_rowid INTEGER PRIMARY KEY AUTOINCREMENT,clt_inode BIGINT,clt_count BIGINT,clt_chunkRowIDs BLOB)
CREATE INDEX IF NOT EXISTS CSStorageChunkListTable_clt_rowid_inx ON CSStorageChunkListTable(clt_rowid)
CREATE INDEX IF NOT EXISTS CSStorageChunkListTable_clt_inode_inx ON CSStorageChunkListTable(clt_inode)
CREATE TABLE IF NOT EXISTS CSStoragePendingChunksTable (pct_rowid INTEGER PRIMARY KEY,pct_inode BIGINT,pct_count BIGINT,pct_chunkRowIDs BLOB)
CREATE INDEX IF NOT EXISTS CSStoragePendingChunksTable_pct_inode_inx ON CSStoragePendingChunksTable(pct_inode)
CREATE TABLE IF NOT EXISTS CSStoragePendingFileChunklistTable (pft_rowid INTEGER PRIMARY KEY,pft_token BIGINT,pft_inode BIGINT)
CREATE INDEX IF NOT EXISTS CSStoragePendingFileChunklistTable_pft_token_inx ON CSStoragePendingFileChunklistTable(pft_token)
CREATE INDEX IF NOT EXISTS CSStoragePendingFileChunklistTable_pft_inode_inx ON CSStoragePendingFileChunklistTable(pft_inode)
INSERT INTO CSDatabaseVersion (version) VALUES (%llu)
UPDATE CSDatabaseVersion SET version = %lld
COMMIT
ChunkStore.c
%s unable to open storage file %lld,%lld:%s
CSReadChunkData
CKCreateChunkIDsFromFile
!CKChunkStoreIsRegistry(chunkStore) && "can't create chunk IDs because the chunkstore is a registry"
CKCreateChunkIDsFromFD
CKChunkListForToken
!CKChunkStoreIsRegistry(chunkStore) && "can't get chunklist because the chunkstore is a registry"
CKChunkRefsForToken
!CKChunkStoreIsRegistry(chunkStore) && "can't get chunk refs because the chunkstore is a registry"
CKCopyDataForChunkID
!CKChunkStoreIsRegistry(chunkStore) && "can't copy data for chunk because the chunkstore is a registry"
%s failed short read of StoredChunk for token: %llu
%s failed to get StoredChunk for token: %llu
fstat failed: (%d) %s
lseek failed: (%d) %s
Writing to SF rowID:%llu at o:0x%llx
write of %ld bytes on fd %d failed : %s
CSCopyData failed, copied %d bytes
orig_sz (%lld) + used_sz (%u) is too big: %u < %llu 
write failed for rowID:%llu: %d (%s)
write failed: %d != %d
unable to open storage file: %s
ftruncate failed for rowId:%lld: %d (%s)
addSourceChunk
array->count < array->capacity
array->data
rc || count < array->count
CKRemoveStoredFile
!CKChunkStoreIsRegistry(chunkStore) && "can't remove stored file because the chunkstore is a registry"
CKCompactStorage
!CKChunkStoreIsRegistry(chunkStore) && "can't compact storage because the chunkstore is a registry"
CKCreateStoredFileWithFlags
!CKChunkStoreIsRegistry(chunkStore) && "can't create stored file because the chunkstore is a registry"
CKCreateStoredFile
CKCommitChunkedFile
!CKChunkStoreIsRegistry(chunkStore) && "can't commit chunked file because the chunkstore is a registry"
CKCopyChunkListForStoredFileToken
!CKChunkStoreIsRegistry(chunkStore) && "can't copy chunklist for stored file because the chunkstore is a registry"
CKGetLocationOfChunkInStorage
!CKChunkStoreIsRegistry(chunkStore) && "can't get location of chunk in storage because the chunkstore is a registry"
CKTokenForStoredChunk
!CKChunkStoreIsRegistry(chunkStore) && "can't get token for stored chunk because the chunkstore is a registry"
CKRegisteredItemCount
CKChunkStoreIsRegistry(chunkStore) && "can't get registered item count because the chunkstore is not a registry"
CKGetRegisteredItems
CKChunkStoreIsRegistry(chunkStore) && "can't get registered items because the chunkstore is not a registry"
deprecated
CS_CHUNK_TYPE_NONE
CS_CHUNK_TYPE_RABIN
CS_CHUNK_TYPE_FIXED
CS_CHUNK_TYPE_SQLITE_DB_HEADER
CS_CHUNK_TYPE_SQLITE_DB_PAGE
CS_CHUNK_TYPE_SQLITE_WAL_HEADER
CS_CHUNK_TYPE_SQLITE_WAL_FRAME_HEADER
CS_CHUNK_TYPE_SQLITE_WAL_PAGE
CS_CHUNK_TYPE_ZIP_FILE_HEADER
CS_CHUNK_TYPE_MP3
unknown cs_chunk_type_t
CKRegisterChunksForFileWithHint
CKChunkStoreIsRegistry(cs) && "can't register chunks for file because the chunkstore is not a registry"
NOT registering chunks for dataless file fd:%d, itemID:%lld
get_path_for_fd failed for fd:%d: %d (%s)
com.apple.ChunkingLibrary.CustomFixedChunk
CKRegisterChunksForItem
CKChunkStoreIsRegistry(cs) && "can't register chunks for item because the chunkstore is not a registry"
CKRegisterItemAndChunks
CKChunkStoreIsRegistry(cs) && "can't register item and chunks because the chunkstore is not a registry"
fileDigestResults
CKUnregisterFile
CKChunkStoreIsRegistry(chunkStore) && "can't unregister file because the chunkstore is not a registry"
CKGetRegisteredChunksForItemID
CKChunkStoreIsRegistry(chunkStore) && "can't get registered chunks because the chunkstore is not a registry"
CKGetRegisteredChunksForFileSignature
CKRegisterChunk
CKChunkStoreIsRegistry(chunkStore) && "can't register chunk because the chunkstore is not a registry"
CKGetRegisteredChunk
CKChunkStoreIsRegistry(chunkStore) && "can't get registered chunk because the chunkstore is not a registry"
CKGetRegisteredChunks
CKRegisterFile
CKChunkStoreIsRegistry(chunkStore) && "can't register file because the chunkstore is not a registry"
can't register file %lld because the chunkstore is readonly
CKGetRegisteredFileSignature
CKChunkStoreIsRegistry(chunkStore) && "can't get signature for registered file because the chunkstore is not a registry"
CKGetRegisteredFileMetadata
CKGetRegisteredFileItemID
CKChunkStoreIsRegistry(chunkStore) && "can't get item ID for registered file because the chunkstore is not a registry"
CKUnregisterAllTemporaryChunks
CKChunkStoreIsRegistry(chunkStore) && "can't unregister all temporary chunks because the chunkstore is not a registry"
CKUnregisterTemporaryChunks
CKChunkStoreIsRegistry(chunkStore) && "can't unregister temporary chunks because the chunkstore is not a registry"
CKRegisterTemporaryChunk
CKChunkStoreIsRegistry(chunkStore) && "can't register temporary chunk because the chunkstore is not a registry"
CKRegisterTemporaryChunks
CKChunkStoreIsRegistry(chunkStore) && "can't register temporary chunks because the chunkstore is not a registry"
CKUnregisterTemporaryChunk
CKChunkStoreIsRegistry(chunkStore) && "can't unregister temporary chunk because the chunkstore is not a registry"
CKUnregisterTemporaryNChunk
CKUnregisterTemporaryTChunk
CKRelocateTemporaryChunk
CKChunkStoreIsRegistry(chunkStore) && "can't relocate temporary chunk because the chunkstore is not a registry"
Invalid chunk rowID, itemID:%lld, o:0x%llx, sz:0x%x
Invalid chunk relocation ('%c'/'%c') for itemID:%lld, o:0x%llx, sz:0x%x, rowID:%llu
CKConvertTemporaryChunks
CKChunkStoreIsRegistry(chunkStore) && "can't convert temporary chunks because the chunkstore is not a registry"
CKKeyForRegisteredChunk
CKChunkStoreIsRegistry(chunkStore) && "can't get key for registered chunk because the chunkstore is not a registry"
CKRegisterNeededChunk
CKChunkStoreIsRegistry(chunkStore) && "can't register needed chunk because the chunkstore is not a registry"
CKUnregisterChunksForItem
CKChunkStoreIsRegistry(chunkStore) && "can't unregister chunks because the chunkstore is not a registry"
CKTokenForRegisteredChunk
CKChunkStoreIsRegistry(chunkStore) && "can't get token for registered chunk because the chunkstore is not a registry"
open failed for "%s": %s
DROP INDEX IF EXISTS CSStorageFileTable_ft_rowid_inx
DROP INDEX IF EXISTS CSStorageFileTable_ft_inode_inx
DROP TABLE IF EXISTS CSStorageVolumeTable
ALTER TABLE CSStorageFileTable ADD COLUMN ft_status INTEGER
DROP INDEX IF EXISTS CSRegisteredFileTable_crt_id_inx
DROP INDEX IF EXISTS CSRegisteredFileTable_crt_iid_inx
DROP TABLE IF EXISTS CSRegisteredFileTable
failed to create entry for chunk:
_CSFlushChunkBatch
batchIndex <= chunkCount
chunkSize
_CSStoreChunks failed, batchIndex:%u, batchCount:%u
com.apple.decmpfs
registerChunksForItem
readContext->open
readContext->close
readContext->read
readContext->stat
"%s", hint:"%s", itemID:%lld, encrypt:%u, scheme:0x%x, fixedChunkSize:0x%x, %u
Invalid custom fixed chunk size:0x%x for itemID:%lld
Invalid file signature scheme:0x%x for itemID:%lld
SELECT ct_rowid FROM CSChunkTable WHERE ct_iid = %lld
failed to get file sig for itemID:%lld
overwriteChunkRegistry || (!alreadyChunked && !chunks && !fileDigestResults)
Failed to unregister chunks for itemID:%llu
open failed on itemID:%lld, path:"%s", error:"%@"
stat failed on itemID:%lld, path:"%s", ino:%llu, error:"%@"
opCtx->fileDigestResults
CKFileDigestResultsEqual(fileDigestResults, opCtx->expectedFileDigestResults)
rc:%u, itemID:%lld, size:%llu, chunkCount:%llu, ac:%u
addRegisteredChunk failed, itemID:%lld, offset:0x%llx, size:0x%x
chunkFdForStorage
!CKChunkStoreIsRegistry(cs) && "can't chunk file for storage because the chunkstore is a registry"
fdInfo
stat failed on path:"%s", error:"%@"
stat failed on itemID:%lld, path:"%s", ino:%llu, error:%@
chunk store database corruption: detected error %d in sqlite3_open_v2
chunk store database corruption: detected error %d in sqlite3_step
chunk store database corruption: detected error %d in sqlite3_exec
chunk store database corruption: detected error %d in sqlite3_prepare_v2
chunk store database corruption: detected error %d in CSsql_do
CKFileDigestResults
com.apple.cscache
Invalid chunk list cache for "%s", size:%u, type:%u
Different type chunk list cache found for "%s", size:%u, type:%u expected %u
setChunkListCacheBlob
CSchunk.c
sizeof(*blob) <= (uint32_t)CFDataGetLength(data)
kCKChunkListCacheType == opCtx->chunkListCacheType || kCKChunkListCacheCloudType == opCtx->chunkListCacheType
"%s", hint:"%s", scheme:0x%x, size:%llu, fileID:0x%016llx(%llu), itemID:%lld
Chunking "%s"
Not chunking "%s" - no chunking profile!
Done chunking "%s", rc:%d, chunkCount:%llu, itemID:%lld
srcPath:"%s", dstPath:"%s"
open failed on "%s": %d (%s)
Invalid chunk list cache for "%s", type:%u, mtime:%llu/%llu, ino:%llu/%llu, generation:%u/%u, sz:%llu/%llu
Copied chunk list cache from "%s" to "%s" (%llu/%llu)
Invalid file signature cache for "%s", type:%u, mtime:%llu/%llu, ino:%llu/%llu, generation:%u/%u, sz:%llu/%llu
Copied file signature cache from "%s" to "%s" (%llu/%llu)
Fixed up chunk list cache for "%s" (%llu)
Fixed up file signature cache for "%s" (%llu)
fstat failed for fd:%d, path:"%s": (%d) %s
make_fd_uncached failed for fd:%d, path:"%s", ino:%llu: %d (%s)
closeFd
opCtx->openInfo == openInfo
statFd
readFd
get path failed for fd:%d: %d (%s)
readlink failed for fd:%d, path:"%s": (%d) %s
pread failed on fd:%d, path:"%s", offset:0x%llx: (%d) %s
getCacheBlobFd
setCacheBlobFd
CS_DISABLE_CL_CACHE
generation:%u, mtime:%llu, ino:%llu, sz:%llu, fileSignatureSize:%u, chunkInfoSize:%u, chunkInfoCount:%u
Invalid chunk cache for "%s", type:%u, mtime:%llu/%llu, ino:%llu/%llu, generation:%u/%u, sz:%llu/%llu, chunkInfoCount:%u
Invalid file signature size for "%s", %u/%u
Invalid file signature scheme for "%s": 0x%x
Invalid chunk info size/count for "%s", %u/%u/%u
Invalid chunk signature/key scheme for "%s": 0x%x/0x%x
Found chunk list cache "%s" for "%s", blobSize:%u, chunkInfoCount:%u, sz:%llu, ino:%llu, mtime:%llu, generation:%u
chunkUsingChunkCache
cache->blobData
!sourceChunk->data
!opCtx->chunkCount
!opCtx->processedSize
Using cache "%s" for "%s", ino:%llu, (0x%x/%u/%u)
Signature scheme mismatch: 0x%x/0x%x
Key scheme mismatch: 0x%x/0x%x
File signature mismatch: 0x%x/0x%x
sizeof(uint32_t) < chunkInfoSize
Reading chunk, o:0x%llx, size:0x%x
Failed to read chunk bytes: %u != %u
callback failed for chunk %u: %d
cache file signature not supported
file signature mismatch for %lld item has %@ != %@ for the chunk store
The file signature changed: from %@ on the item to %@ registered in the chunk store for item %lld. Perhaps the item should be unregistered.
Found %u chunks for "%s", ino:%llu
Skipping zero length section %u.
CSchunklist_streamRead failed
CSfixed_chunk_stream failed
under-read for rabin chunking; only read %lld bytes and not at EOF
At EOF and zero bytes left. We should be done by now. Chunk profile inconsistent?
CSrabin_chunk_stream failed
section %u done (%u, eo:0x%llx, %u)
not all sections chunked before eof reached
Begin stats for "%s"
End stats for "%s"
CHUNK_BUFFER_LENGTH
Unable to use env value %s for CHUNK_BUFFER_LENGTH. Parsed %lld and the minimum is %d. Using default value %lu
_SetSourceChunk
!sourceChunk->signatureGenerator
overflow; buffer length: %lu producer location %lu
CS_fixed_chunk_stream_accumulate
sourceChunk->data || !sourceChunk->chk.length
CKChunkSignatureGeneratorFinish failed
Ignoring attempt to add 0 length chunk
"%s": %llu, %llu, o:0x%llx, sz:0x%x(%u), s:%s
"%s": %llu, %lld, o:0x%llx, sz:0x%x(%u), s:%s
"%s": %s, %lld, o:0x%llx, sz:0x%x(%u), s:%s
File offset is already great than sectionEnd. Shouldn't we be in a different section?
  === segment end marker ===
Ignoring attempt to add a chunk with invalid length %d.
encrypting
doEncrypt failed
"%s": %llu, %lld, o:0x%llx, sz:0x%x(%u), s:%s, (%u, %s)
"%s": %s, %llu, o:0x%llx, sz:0x%x(%u), s:%s
CK_CHUNK_COUNT
%llu
CK_STORED_CHUNK_COUNT
CK_STORED_SIZE
CK_HARD_BREAK_COUNT
CK_CHUNK_TMIN
CK_CHUNK_TMAX
"%s" changed, mtime:%llu/%llu, sz:%llu/%llu, generation:%u/%u
Invalid chunk array, chunkArray:%p, chunkCount:%llu
Storing cache "%s" for "%s", scheme:0x%x, ino:%llu, chunkCount:%llu, mtime:%llu, generation:%u, registering:%u
setChunkListCache
fileSignature
fileSignatureSize <= UINT16_MAX
chunkInfoSize <= UINT16_MAX
fileSignatureSize:%u, chunkInfoSize:%u, chunkInfoCount:%u
Invalid size/count: 0x%x/0x%x/0x%x
p == (u_char*)blob + blobSize
Stored chunk list cache for "%s", chunkCount:%llu, blobSize:%u, sz:%llu, ino:%llu, mtime:%llu, generation:%u
Removed chunk list cache for "%s", sz:%llu ino:%llu, mtime:%llu, generation:%u
signature-key
cs_longrdunlock
CSChunkStore.c
lock->mutexHolder == 0
ERROR: NULL location parameter
CFURLGetFileSystemRepresentation(%s) error: %s
bufLen is too small: %lu
ChunkStorage
ChunkStoreNoCopy
copyfile_state_alloc failed
copyfile_state_set failed
copyfile failed: %s
NESTED TRANSACTION!
BEGIN TRANSACTION
Unable to begin transaction: %d (%s)
END TRANSACTION
Unable to commit transaction: %d (%s)
TRANSACTION COUNT ALREADY ZERO!
ROLLBACK TRANSACTION
Unable to rollback transaction: %d (%s)
_CSPrepareStatement
chunkstore->db
sqlite3_prepare_v2 returned: %d %s for query "%s"
CKChunkStoreGetLocation failed
failed to add SF entry to database!
unable to create storage directory
unable to create storage path
file %s already exists (size: %lld), trying again.
open(%s) failed: %s
fstat failed: %s
UPDATE CSStorageFileTable SET ft_inode = %lld WHERE ft_rowid = %lld
failed to set inode for file: %s: %d %s
UPDATE CSStorageFileTable SET ft_space = %d WHERE ft_rowid = %lld
failed to set space for file: %s: %d %s
UPDATE CSStorageFileTable SET ft_pspace = %d WHERE ft_rowid = %lld
failed to set purgeable space for file: %s: %d %s
Created a new SF, ino:%llu, rowID:%llu
Updating SF space for ftRowId:%llu curspace:%llu, space:%llu
UPDATE CSStorageFileTable SET ft_space = ? WHERE ft_rowid = ?
sqlite3_bind_int returned: %d %s
sqlite3_bind_int64 returned: %d %s
sqlite3_step returned: %d %s
_CSSyncStorageFile
could not create storage file path for storage file %llu in %s
could not open storage file directory %s in %s: %s (%d)
close failed for SF rowID:%llu
_CSGetStorageFile
neededSize <= INT_MAX
Found cached SF %u at rowID:%llu, space:%llu, needSize:%llu
SELECT ft_rowid, ft_space FROM CSStorageFileTable WHERE (ft_space >= ? AND ft_status IS NULL)
NULL stmt
Checking free space for SF at rowID:%llu, %llu/%llu
Found a candidate SF at rowID:%llu
Attempting first aid in %s after open failed for "%s": %s
fstat failed for "%s": %s
The size on disk is different from the size in db for "%s": usedSpace:%llu, size:%llu - truncating
ftruncate failed for "%s": %s
_CSCreateStoragePath failed for rowID: %lld
spaceNeeded:%llu
removeUnreferencedChunks freed %llu bytes, totalFreeSpace:%llu, spaceNeeded:%llu, rc:%d
copyReferencedChunks freed %llu bytes, totalFreeSpace:%llu, spaceNeeded:%llu, rc:%d
freeSpace:%llu
_CSCompactStorage
Failed first aid check in %s
_CSStoreChunks
_CSInsertChunk failed, i:%llu, count:%llu
INSERT INTO CSStoragePendingChunksTable (pct_inode, pct_count, pct_chunkRowIDs) VALUES (?, ?, ?)
sqlite3_step returned: %d (%s)
SELECT pft_inode FROM CSStoragePendingFileChunklistTable WHERE pft_token = ?
DELETE FROM CSStoragePendingFileChunklistTable WHERE pft_token = %llu
_CSRemoveStoredFile
!cs->readOnly
_CSChunkRefsForToken failed
Invalid signature size, sigSize:%u
_CSChunkSignatureForToken failed for chunk token %lld
_CSReleaseChunkForSignature failed for chunk token %lld
DELETE FROM CSStorageChunkListTable WHERE clt_rowid = %llu
CSsql_do returned: %d (%s)
token:%llu, result:%d, sqlRc:%d
SELECT cid, dataLen FROM CSChunkTable WHERE ct_rowid = ? AND location = ?
sqlite3_step returned: %d %s, for _CSChunkSizeForToken
SELECT CSChunkTable.ct_rowid, CSStorageFileTable.ft_rowid, CSStorageFileTable.ft_status FROM CSStorageFileTable INNER JOIN CSChunkTable on CSChunkTable.ft_rowid = CSStorageFileTable.ft_rowid WHERE CSChunkTable.ct_rowid = ? 
sqlite3_step returned in %s: %s (%d)
_CSChunkIsInvalid
SELECT clt_count, clt_chunkRowIDs FROM CSStorageChunkListTable WHERE clt_rowid = ?
sqlite3_step returned: %d %s, for listToken:%llu
_CSChunkSizeForToken failed for file token %llu, chunk token:%llu (count:%llu)
SELECT ft_rowid FROM CSChunkTable WHERE cid = ? AND location = ?
sqlite3_step returned: %s (%d), for signature:
SELECT ct_rowid FROM CSChunkTable WHERE cid = ? AND location = ?
sqlite3_step returned: %d %s, for signature:
SELECT cid FROM CSChunkTable WHERE ct_rowid = ?
no signature for token %llu
INSERT INTO CSChunkTable (cid, ft_rowid, offset, dataLen, refCount, timestamp, location) VALUES (?, ?, ?, ?, ?, ?, ?)
null sqlite3_stmt
SELECT * FROM CSChunkTable WHERE ct_rowid = ?
not a stored chunk
SELECT refCount, dataLen, ft_rowid FROM CSChunkTable WHERE ct_rowid = ?
sqlite3_bind_int64 failed for row id %lld: %d %s
setFT_pSpace failed for ftRowId:%llu, rowId:%llu
Attempted to retain row ID %llu that did not exist
Failed to get row ID %llu from database (%d)
UPDATE CSChunkTable SET refCount = ? WHERE ct_rowid = ?
sqlite3_bind_int64 failed for refCount %lld: %d %s
sqlite3_bind_int64 failed for rowId %lld: %d %s
SELECT refCount, dataLen, ft_rowid, ct_rowid FROM CSChunkTable WHERE cid = ? AND location = ?
sqlite3_bind failed: %s (%d)
sqlite3_step failed: %s (%d)
refCount already zero for:
null sqlite3_stmt (stmt)
UPDATE CSChunkTable SET refCount = 0 WHERE ct_rowid = %lld
CSsql_do returned: %d %s
SELECT ft_pspace FROM CSStorageFileTable WHERE ft_rowid = %lld
UPDATE CSStorageFileTable SET ft_pspace = %lld WHERE ft_rowid = %lld
unable to update purgable space for SF rowID:%llu
null sqlite3_stmt (sel_stmt)
SELECT refCount FROM CSChunkTable WHERE ct_rowid = ? AND location = ?
sqlite3_bind returned: %s (%d)
sqlite3_step returned: %s (%d)
stat failed for path: %s : %s
Attempting first aid in %s after stat failed for "%s": %s
_CSStorageFileInode
SELECT ft_inode FROM CSStorageFileTable WHERE ft_rowid = ?
INSERT INTO CSStorageFileTable (ft_inode, vt_rowID) VALUES (?, ?)
DELETE FROM CSStorageFileTable WHERE ft_rowid = ?
addRegisteredChunk
addStoredChunk
_CSRegisterChunk failed
_CSRegisterChunk
INSERT INTO CSChunkTable (cid, ct_iid, offset, dataLen, location, key) VALUES (?, ?, ?, ?, ?, ?)
sqlite3_step returned: %d %s, for chunk:
SELECT * FROM CSChunkTable WHERE cid = ?
sqlite3_step returned: %d %s, for signature:
registerItem
Registering itemID:%lld
INSERT INTO CSRegisteredFileTable (crt_id, crt_iid, crt_filekey, crt_filesize, crt_profileType, crt_profileTypeIsDefault, crt_profileConfigurationVersion, crt_profileResolvedFileExtension) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
unregisterItem
Unregistering itemID:%lld
DELETE FROM CSRegisteredFileTable WHERE crt_iid = ?
sqlite3_step returned: %d %s, for itemID:%lld
SELECT ct_rowid, cid, offset, dataLen, location, key FROM CSChunkTable WHERE ct_iid = ? ORDER BY offset
SELECT crt_iid FROM CSRegisteredFileTable WHERE crt_id = ?
SELECT crt_id, crt_filekey, crt_filesize, crt_profileType, crt_profileTypeIsDefault, crt_profileConfigurationVersion, crt_profileResolvedFileExtension FROM CSRegisteredFileTable WHERE crt_iid = ?
sqlite3_column_blob returned bad data for itemID:%lld, blobSize:%d, expectedSize:%u
signature size is 0, itemID:%lld
Unregistering chunks for itemID:%lld
DELETE FROM CSChunkTable WHERE ct_iid = ? AND location = 114
_CSUnregisterAllTemporaryChunks
DELETE FROM CSChunkTable WHERE location = ?
_CSUnregisterTemporaryChunks
DELETE FROM CSChunkTable WHERE location = ? AND ct_iid = ?
sqlite3_step returned: %d %s for itemID:%lld
_CSRelocateRegisteredChunk
UPDATE CSChunkTable SET location = ? WHERE rowid = ? AND location = ? AND ct_iid = ? AND cid = ? AND offset = ? AND dataLen = ?
Couldn't update chunk ('%c'/'%c') for itemID:%lld, o:0x%llx, sz:0x%x, rowID:%llu
UPDATE CSChunkTable INDEXED BY CSChunkTable_cid_inx SET location = ? WHERE location = ? AND ct_iid = ? AND cid = ? AND offset = ? AND dataLen = ?
Moved registered chunk ('%c'/'%c') for itemID:%lld, o:0x%llx, sz:0x%x, rowID:%llu
_CSUnregisterChunk
DELETE FROM CSChunkTable INDEXED BY CSChunkTable_cid_inx WHERE location = ? AND ct_iid = ? AND cid = ? AND offset = ? AND dataLen = ?
sqlite3_step returned: %d %s, for signature
_CSConvertTemporaryChunks
DELETE FROM CSChunkTable WHERE location = 114 AND ct_iid = %llu;
UPDATE CSChunkTable SET location = 114 WHERE ct_iid = ?
key param is NULL, failing.
SELECT key FROM CSChunkTable WHERE cid = ?
Bad size for key...
sqlite3_column_blob returned NULL.
sqlite3_step returned: %d %s, for signature: 
_CSUnregisterAllChunksForItem
Unregistering all chunks for itemID:%lld
DELETE FROM CSChunkTable WHERE ct_iid = ?
SELECT count(*) FROM CSRegisteredFileTable
_CSGetRegisteredItems
itemCount && "item count"
*itemCount > 0 && "item count = 0"
SELECT crt_iid FROM CSRegisteredFileTable WHERE crt_iid > ? ORDER BY crt_iid ASC LIMIT ?
read only location and no tmp path makes ChunkStore unhappy!
CK_CHUNKSTORE_VERBOSE
CS_LOG_PATH
CHUNK_STORE_UNIT_TESTS
CS_LOG_VERBOSE
CS_LOG_STDOUT
logging to stdout
log debug enabled
stat failed for %s: %s
%s/%s
unable to create directory: %s : %d:%s
path:%s
struct __CSChunkStore
unable to create chunk store object for %s
%s/chunk_store_XXXXXX
safe_snprintf truncated %s
mkdtemp failed to create %s : %s
unable open chunk store database for %s
path:%s
CKChunkStoreRelocateDB failed to copy database to temp location!
%s/%s/%s
ChunkStoreDatabase
unable to rename old chunk store at %s: %s
unable to create directory %s : %s
%s_old_%u
can't rename "%s", too many old files (%u)
renaming "%s" to "%s"
unable to rename "%s": %d (%s)
finalizing "%s"
sqlite3_finalize returned %d: %s
SELECT pft_rowid, pft_token FROM CSStoragePendingFileChunklistTable
SELECT pft_rowid, pft_token FROM CSStoragePendingFileChunklistTable where pft_inode = ?
sqlite3_bind_int64 for inode: %lld returned: %d (%s)
sqlite3_step returned: %d (%s), listToken: %llu
DELETE FROM CSStoragePendingFileChunklistTable WHERE pft_rowid = %lld
stat failed for "%s"
CKChunkStoreGetLocation failed
open (%lld,%lld) failed: %s
Unable to release chunk at token %lld (%llu)
failed to get chunk store location!
%s/%s/%d/%d/%d
outPath too small
%s/%s/%d/%d/%d/%d
failed to get chunk store location!
%s/%s/%d/%d/%d/
path exceeds %d characters!
failed to create directory: %s, %s
SELECT ft_space FROM CSStorageFileTable WHERE ft_rowid = %lld
removeUnreferencedChunks
SELECT ft_rowid FROM CSStorageFileTable WHERE ft_pspace > 0 ORDER BY ft_pspace DESC
removeUnreferencedChunksAtEof
ftRowId:%llu, spaceNeeded:%llu
SELECT ct_rowid, dataLen, offset, refCount FROM CSChunkTable WHERE ft_rowid = ? AND location = ? ORDER BY offset DESC
ctRowId:%llu, refCount:%llu, offset:0x%llx, size:0x%llx
Invalid chunk, ftRowId:%llu, ctRowId:%llu, chunkOffset:0x%llx, truncateOffset:0x%llx
chunkCount:%u, truncateOffset:0x%llx, freeSpace:%llu
DELETE FROM CSChunkTable WHERE ct_rowid = ?
sqlite3_step error: %d, %s
ftRowId:%llu, totalFreeSpace:%llu, rc:%d
ftRowId:%llu, offset:0x%llx, spaceDelta:%llu
open failed for "%s" with ENOENT, but we can clear the storage file reference anyway
DELETE FROM CSChunkTable WHERE ft_rowid = %lld
DELETE FROM CSStorageFileTable WHERE ft_rowid = %lld
CSsql_do error: %d, %s
unlink failed for ftRowId:%llu, path:"%s": %s
fstat failed for "%s": %s
Invalid file size/offset for "%s": fileSize:0x%llx, offset:0x%llx
Invalid free space for "%s": diffSize:%llu, spaceDelta:%llu
Updating free space for ftRowId:%llu, spaceDelta:%llu, space:%llu
failed to set the free space for ftRowId:%llu, path:"%s", space:0x%llx
Updating free pspace for ftRowId:%llu, pspaceDelta:%llu, pspace:%llu
failed to set the free pspace for ftRowId:%llu, path:"%s", pspace:0x%llx
ftruncate failed for ftRowId:%llu, path:"%s", offset:0x%llx: %s
ftRowId:%llu, rc:%d
UPDATE CSStorageFileTable SET ft_space = %lld WHERE ft_rowid = %lld
copyReferencedChunks
SELECT ft_rowid FROM CSStorageFileTable WHERE (ft_pspace > 0 AND ft_status IS NULL) ORDER BY ft_pspace DESC
_CSRelocateStorageFileChunks
Failed first aid check in %s, skipping chunk copying
open failed for "%s", ft_rowid=%lld: %s
"%s" does not exist, ft_rowid:%llu
SELECT CSChunkTable.ct_rowid, CSChunkTable.dataLen, CSChunkTable.offset FROM CSStorageFileTable INNER JOIN CSChunkTable on CSChunkTable.ft_rowid = CSStorageFileTable.ft_rowid WHERE CSChunkTable.ft_rowid = ? AND CSChunkTable.refCount > 0 AND CSChunkTable.location = ? AND CSStorageFileTable.ft_status IS NULL ORDER BY CSChunkTable.refCount DESC
Bad chunk in "%s", ctRowId:%llu, chunkOffset:0x%llx, chunkSize:0x%llx
compact_source_invalid
com.apple.message.signature
invariant_violated
com.apple.chunkinglibrary.chunk_validation
compact_destination_invalid
pread(%d, 0x%llx, 0x%llx) failed: %s, read %lld bytes, file is 0x%llx(%lld) bytes long
Read size doesn't match request
DELETE FROM CSChunkTable WHERE ct_rowid = %lld
_CSCreateStorageFile failed, rc:%d
pwrite(%d, sz:0x%llx, o:0x%llx) failed: %d, %s
pwrite(%d, sz:0x%llx, o:0x%llx) failed: wrote %lld bytes
newRowID != CK_INVALID_TOKEN
Nothing was moved from SF ft_rowid:%lld
UPDATE CSStorageFileTable SET ft_space = %lld, ft_pspace = 0 WHERE ft_rowid = %lld
UPDATE CSChunkTable SET offset = ?, ft_rowid = ? WHERE ct_rowid = ?
failed to sync storage file while relocating chunks in %s
Removing SF "%s"
unlink failed for "%s": %s
sqlite3_step error: %d (%s)
CSsql_do error: %d (%s)
totalMoved <= origFileSize
fileSize:%llu, totalMoved:%llu
There was a problem compacting SF ft_rowid:%lld, rc:%d
offset_bounded_by_storage_file_length
length_bounded_by_slot_size
chunk_contained_in_storage_file
ChunkStoreDirty
unlink failed "%s": %d (%s)
o:0x%llx, sz:0x%x, (0x%x/%u/%llu)
zero length chunk for file "%s"
UPDATE CSChunkTable SET cid = ?, ft_rowid = ?, offset = ?, dataLen = ?, refCount = ?, timestamp = ?, location = ? WHERE ct_rowid = ?
Retaining chunk: o:0x%llx, sz:0x%x
Fixing corruption in chunk %llu by storing chunk: o:0x%llx, sz:0x%x
Storing chunk: o:0x%llx, sz:0x%x
Could not retrieve retain count for chunk with ct_rowid %llu
chunk_insert_invalid
_CSRemovePendingBatchesForInode
SELECT * FROM CSStoragePendingChunksTable
SELECT * FROM CSStoragePendingChunksTable WHERE pct_inode = ?
sqlite3_bind_int64 for inode:%lld returned: %d (%s)
Removing pending batch for inode:%llu, rowId:%llu, count:0x%llu
DELETE FROM CSStoragePendingChunksTable WHERE pct_rowid = %lld
INSERT INTO CSStorageChunkListTable (clt_count, clt_chunkRowIDs, clt_inode) VALUES (?, ?, ?)
DELETE FROM CSStoragePendingChunksTable WHERE pct_inode = %llu
INSERT INTO CSStoragePendingFileChunklistTable (pft_token, pft_inode) VALUES (%llu, %llu)
chunk-key
file-key
copy-key
CCCryptorRelease() => %d
expected key size 16; got %u
CCCryptorCreate() => %d
crypting:CCCryptorUpdate() => %d
v2 boundaryKey
v2 chunkKey
v2 invalid
Unknown file signature scheme: 0x%x
com.apple.XattrObjectSalt
com.apple.DataObjectSalt
sig %s len %llu fileVerificationKey %s
present
not-present
chunk store database corruption: retaining contents, isRegistry false
chunk store database corruption: could not unlink files, dbname null
chunk store database corruption: would normally abort here
chunk store database corruption: would normally abort here.  Exiting instead
chunk store database corruption: aborting
database
%s-journal
journal
%s-wal
%s-shm
chunk store database corruption: unlinked database files
CKFileDigestArguments
Unknown chunk signature scheme: 0x%x
CKChunkEncryptionKeySize
CKChunkScheme.c
"invalid key scheme" && !(key[0] & 0x80)
Unknown key scheme: 0x%x
_CSCopyStoredChunkListForStorageFileID
SELECT ct_rowid, cid, offset, dataLen, timestamp, location FROM CSChunkTable WHERE ft_rowid = ? ORDER BY offset
Could not create prepared sqlite3 statement in %s
sqlite3_bind failed in %s: %s (%d)
sqlite3_step in %s failed for ft_rowid %lld: %s (%d)
CSAttemptFirstAidForStorageFile
First aid found %llu inconsistent chunks in storage file with ft_rowid %llu, but chunk store is read-only
First aid found %llu inconsistent chunks in storage file with ft_rowid %llu, but could not invalidate storage file
First aid found %llu inconsistent chunks in storage file with ft_rowid %llu, and returned database to consistent state
_CSValidateStorageFile
Could not construct path for storage file with ft_rowid %llu
stat failed in %s for path "%s": %s (%d)
Storage file with ft_rowid %lld is missing
_CSPurgeInvalidStorageFileID
UPDATE CSStorageFileTable SET ft_status = ? WHERE ft_rowid = ?
sqlite3_step failed in %s: %s (%d)
SELECT changes()
sqlite3_step failed for changes() in %s: %s (%d)
Storage file with ft_rowid %llu does not exist in database
Bad iv
Bad key
Bad mode
CCCryptorCreateWithMode %d
CCCryptorGCMSetIV %d
CKStreamCoderUpdate
CKStreamCoder.c
0 && "invalid coder mode"
CCCryptorGCMDecrypt %d
CKStreamCoderFinish
tagPtr && "tagPtr"
errorPtr && "error object ptr"
CKStreamCoder
encrypt
decrypt
unknown
stream %s coder
CCCryptorGCMFinalize %d
_CKStreamCoderFinishEncrypt
_CKStreamCoderFinishDecrypt
tag && "tag object"
Tag failure on decrypt
CKChunkCoderUpdate
CKChunkCoder.c
Chunk digest results differ
Not enough bytes tranversed coder
CKChunkCoder
identity
chunk %s coder expected %@ 
v8@?0
com.apple.chunkinglibrary
default
read failed (read %ld bytes of requested %lld bytes) for fd:%d : %d (%s)
write failed for fd:%d, %d (%s)
write failed for fd:%d, %lld != %lld
0123456789abcdef
signature:%s, key:%s
signature:%s
StoredChunk at %p:
StoredChunk 
StoredChunk volume info: 
StoredChunk device: %d
StoredChunk inode: %lld
StoredChunk stgPath: 0x%08x
StoredChunk token: %lld
StoredChunk offset: %lld
StoredChunk length: %d
StoredChunk location: %c
StoredChunk data: 
RegisteredChunk: itemID:%lld, offset:0x%llx, size:0x%x(%u), location:%c
en_US
Option %@ had CFStringRef "%@" but couldn't parse as a number.
Unable to recognized type id '%@' for boolean decoding for key '%@'.
com.apple.cscachefs
Invalid file signature cache for "%s", size:%u, type:%u
CS_DISABLE_FS_CACHE
Invalid file signature cache for "%s", ino:%llu, sz:%llu, type:%u, scheme:0x%x, generation:%u
Found cached file signature for "%s", blobSize:%u, sz:%llu, ino:%llu, time:%llu, generation:%u
get2FileSignatureCache
CSutils.c
rc || CKFileDigestResultsFileSignature(fileDigestResults) != NULL
setFileSignatureCacheBlob
setFileSignatureCache
signature && signatureSize == CKSHA_SCHEME_AND_SIGNATURE_SIZE
stat failed for "%s", ino:%llu
"%s"changed, ino:%llu, mtime:%llu/%llu, sz:%llu/%llu, generation:%u/%u
Stored file signature cache for "%s", blobSize:%u, sz:%llu, ino:%llu, mtim:%llu, generation:%u
Removed file signature cache for "%s", blobSize:%u, sz:%llu, ino:%llu, mtime:%llu, generation:%u
NULL read context
open failed on path:"%@", error:"%@"
stat failed on path:"%@", ino:%llu, error:"%@"
CK2CalculateItemSignatureWithFlags
read failed on path:"%@", ino:%llu, offset:0x%llx, size:%u, error:"%@"
CKFileSignatureGeneratorUpdate failed
ino:%llu changed
!fileDigestResults
error:"%@", path:"%@", ino:%llu, sz:%llu, o:%llu
path:"%@", flags:0x%llx, ino:%llu, sz:%llu, o:%llu, ck:%s
CKCalculateFileSignature
scheme == kCKFileSignatureSha1 && "bad scheme"
!sig || sigSize == CKSHA_SCHEME_AND_SIGNATURE_SIZE
signature size is 0
CK_TIME_CHUNKING
CK_SIZE_STATS
CK_CHUNKSTORE_VERBOSE_FOR_TEST_TOOL
CK_NO_RESULTS
freeOpCtx
chunkSize || !count
read failed on itemID:%lld, path:"%s", ino:%llu, offset:0x%llx, size:%u, error:"%@"
sectionIndex %u out of range (numSections = %u)
section %u/0x%llx is before section %u/0x%llx
fpathconf failed on "%s": %s
fgetattrlist(ATTR_CMN_GEN_COUNT) failed on "%s", fd:%d: %d (%s)
Invalid cache size for "%s", blobName:%s, size:%u
Invalid cache hash for "%s", blobName:%s
setCacheBlob
sizeof(*header) <= bufferSize
file-write-xattr
fgetxattr failed on "%s", fd:%d, xattrName:%s: %d (%s)
fgetxattr failed on "%s", fd:%d, xattrName:%s
fgetxattr failled on "%s", fd:%d, xattrName:%s
fremovexattr failed on "%s", xattrName:%s: %d (%s)
fsetxattr failed for "%s", fd:%d, xattrName:%s: %d (%s)
 Summary for item %lld (%s):
profiler created %d sections
%32s
Throughput
Elapsed Time
%10s %13.7f %7s
chunking
seconds
%12.4f MB/sec
%10s %13.7f %-10s
hashing
file read
file write
DB access
Chunked%s
, hashed, encrypted and hashed again
 and hashed
%s %llu bytes into %lld chunks, stored %lld chunks (%lld bytes) in %6.4f seconds (%8.4f MB/sec )
Average chunk size: %llu.%llu
Average chunk size: 0 (0 chunks)
chunk store database corruption: simulating corruption in sqlite3_open_v2
chunk store database corruption: simulating corruption in sqlite3_step
chunk store database corruption: simulating corruption in sqlite3_prepare_v2
chunk store database corruption: simulating corruption in sqlite3_exec
chunk store database corruption: initializing with probability %d
CSChunkDigester_Verify succeeded by chunk digest and expected chunk digest not equal
com.apple.DataObjectSaltV2
CKFileSignatureGeneratorV2Finish
CKFileSignatureGeneratorV2.c
NULL != CKFileDigestResultsFileVerificationKey(expectedFileDigestResults)
Parameter validation failed!
Failed to encrypt the IV
Encryption failed!
Decryption failed!
Error occurred while encrypting block during chaining mode. status = %d
v1 %sencrypted
CKChunkDigestResults
sig %s key %s len %lu
com.apple.chunkinglibrary.internal
com.apple.chunkinglibrary.sqlite
Attempted to call %s, but chunk store is %s
registry
not registry
Memory could not be allocated for the intended error
v1 %s
encrypted
unencrypted
kCKItemChunkLength
kCKItemChunkProfileConfigurationVersion
kCKItemChunkProfileConfigurationFileExtensionToProfileMap
kCKItemChunkProfileConfigurationDefaultProfilePolicy
adaptive_chunk_size
CSprofile.c
"Invalid chunk size" && sqlitePageSize
returning %u sections for "%s"
CK_CHUNK_DEFAULT
Using Rabin chunking on "%s" (CK_CHUNK_DEFAULT)
CK_FIXED_CHUNK
Using fixed size chunking on "%s" (CK_FIXED_CHUNK)
fixed size chunking requested with %llu bytes per chunk
createChunkProfile
0 && "unknown chunkListCacheType"
suffix_index_for_type_hint(typeHint:"%s", "%s") returned type:%d
profile_type_for_content("%s") returned type:%d
type:%d, typeHint:"%s"
profiler
section[%u/%u]: [%s] sz:%lld(0x%llx) [0x%llx-0x%llx), ap:0x%llx, cc:%u
uti:%@, tag:%@
class:%@, tag:%@
Unknown
requestedFixedChunkSize/%llu exceeds MAX_FIXED_LENGTH_CHUNK_SIZE/%llu
requestedFixedChunkSize/%llu below MIN_FIXED_LENGTH_CHUNK_SIZE/%llu
requestedFixedChunkSize/%llu not large enough to accomodate file size %llu
fixedChunkSize set to %llu bytes
"%s" is a big file (%lld bytes!), using fixed chunker
"%s" is just right to be Rabin chunked (%lld bytes)
profile_type_for_content
readCtx
qt sz:0x%x, has_type:%d, "%c%c%c%c"
create_custom_fixed_profile
"Invalid chunk size" && fixedChunkSize
too many records, num_recs:0x%x, max_recs:0x%x
failed to read zip-dir-rec at %u/%u
bogus looking zip-dir-rec at %u (0x%08x != 0x%08x)
bogus field_len 0x%x at 0x%llx, expected_len: 0x%x
failed to read zip64-extra-field at 0x%llx
bogus looking zip_foffset/zip_size on zip-dir-rec at %u (foffset:0x%llx size:0x%llx dataSize:0x%llx)
first entry must begin at location zero!
failed to read the zip-local-header at %u/0x%llx
zip-local-header %u @ 0x%llx looks corrupt (0x%08x != 0x%08x)
entries %u and %u overlap
%u >= %u, last_rabin:%d, last_rabin_base:0x%llx
locate_central_dir
search_eocd || search_loc64
failed to read zip-end-of-central-dir at 0x%llx
zip-end-of-central-dir, offset:0x%x, size:0x%x, recs:%u/%u
failed to read zip64-end-of-central-dir-locator at 0x%llx
zip64-end-of-central-dir-locator, zip64-end-of-central-dir-offset:0x%llx
failed to read zip64-end-of-central-dir at 0x%llx
zip64-end-of-central-dir, central-dir-offset:0x%llx, central-dir-size:0x%llx, num-central-dir-recs:%llu/%llu
didn't find the zip-central-dir-end for "%s"
didn't find the zip64-central-dir-end for "%s"
failed to read extra-field-hdr at 0x%llx
ID3v2 tag present at 0x%llx, v2_tag_size:0x%x
ID3v2 tag larger than the file, v2_tag_size:0x%x, dataSize:0x%llx
ID3v1 tag %s at 0x%llx
missing
create_mp3_profile
has_v2_tag
decode_synchsize
result <= 0xfffffff
CKProfileResultsCreate
CKProfileResults.c
objectPtr
kCKProfileTypeNone
kCKProfileTypeFixed
kCKProfileTypeRabin
kCKProfileTypeZip
kCKProfileTypeMP3
kCKProfileTypeQuicktime
kCKProfileTypeCustomFixed
kCKProfileTypeSQLiteDatabaseWAL
kCKProfileTypeSQLiteDatabase
kCKProfileTypeSQLiteDatabaseS
kCKProfileTypeUnknown
kCKDefaultProfilePolicyTypeInferred
kCKDefaultProfilePolicyTypeFixedLength
kCKDefaultProfilePolicyTypeUnknown
CKProfileResults
type:%s configVersion:%@ ext:%@ isDefault:%s
(null)
CKChunkSignatureGeneratorV1Finish
CKChunkSignatureGeneratorV1.c
object->chunkDigestResults
sig %s len %llu
%{public}@
sqlite3_open_v2 failed, dbname:"%s": %d %s
sqlite3_open_v2 failed, dbname:"%s": %s
failed to set locking_mode on db (%s)
failed to set page_size pragma on db (%s)
failed to set journal mode (%s)
failed to set wal_autocheckpoint (%s)
ver=%llu/%llu
odd database version %llu
UPDATE CSDatabaseVersion SET version failed: %s
sqlite3 error: %d %s
rc:%d
sqlite3_close failed: %s
migrating chunk store from version %llu to version %llu
attempting to migrate chunk store from version %llu to version %llu, which is not supported
sqlite3 error on migration: %d %s
fsopen(%d,%llu,0x%0llx): unimplemented; returning -1
could not fsync null storage file in %s
could not fsync closed storage file %llu in %s
fsync for storage file %llu in %s failed: %s (%d)
fsync for storage file %llu parent directory in %s failed: %s (%d)
failed to checkpoint WAL in %s: %s
Bad chunk offset/size in "%s", ctRowId:%llu, chunkOffset:0x%llx, chunkSize:0x%llx (%s violated)
Bad chunk offset/size, ctRowId:%llu, dstOffset:0x%llx, chunkSize:0x%llx (%s violated)
Bad chunk value(s): o:0x%llx, sz:0x%x (%s violated)
chunk store database corruption: unable to unlink %{public}s (%s): %{public}s (%d)
chunk store database corruption: unlinked %{public}s (%s)
Automatic first aid found some missing chunks and made the database consistent again: %@
Automatic first aid failed: %@
Validating storage file with ft_rowid %llu
Purging invalid storage file with ft_rowid %llu
Update appeared to change %lld rows when marking storage file with ft_rowid %llu as missing
typeHint:%{public}s typeRequested:%{public}s typeUsed:%{public}s sectionCount:%llu default:%{public}s resolvedType:%{public}@ serverConfig:%{public}@
@(#)PROGRAM:ChunkingLibrary  PROJECT:ChunkingLibrary-2050
dflt
aiff
cpbitmap
jpeg
pict
sfark
sitx
tbz2
tiff
numbers
pages
dflt
aiff
aside
avci
cpbitmap
epub
heif
heic
jpeg
pict
sfark
sitx
sqlite-wal
tbz2
tiff
waveform
numbers
pages
private-sqlite-db
private-sqlite-wal
private-sqlite3-s
QuickLook/Preview.pdf
CKChunkCryptorV2Init
CKChunkCryptorV2.c
paddedLength >= dataLength
CKChunkSignatureGenerator
Bad assetKey
Bad salt
Bad concatenatedChunkKeys
CCKeyDerivationHMac %d
CKStreamKeyDerivation
CKChunkCryptor
CKChunkDigestArguments
boundaryKey
fileKey
v2 %sencrypted %@ %@
v2 %sencrypted (null keys)
CKFileSignatureGenerator
v8@?0
com.apple.chunkinglibrary
default
SQL DB not open: '%s'
SQL error: '%s', (%d) %s
%s SQL DB not open: '%s'
CSsql_get64
sqlite3_prepare_v2 failed: %d %s
sqlite3_step failed: %d %s
out64 parameter is NULL!
CSsql_get64_safe
PRAGMA locking_mode = EXCLUSIVE;
PRAGMA page_size = 4096;
PRAGMA journal_mode = WAL;
PRAGMA wal_autocheckpoint = 2000;
PRAGMA temp_store = MEMORY
BEGIN EXCLUSIVE
CREATE TABLE IF NOT EXISTS CSDatabaseVersion (version INTEGER)
SELECT version FROM CSDatabaseVersion
CREATE TABLE IF NOT EXISTS CSRegisteredFileTable (crt_rowid INTEGER PRIMARY KEY,crt_id
BLOB,crt_iid BIGINT,crt_filekey BLOB,crt_filesize BIGINT,crt_profileType INTEGER,crt_profileTypeIsDefault INTEGER,crt_profileConfigurationVersion TEXT,crt_profileResolvedFileExtension TEXT)
CREATE INDEX IF NOT EXISTS CSRegisteredFileTable_crt_id_inx ON CSRegisteredFileTable(crt_id)
CREATE UNIQUE INDEX IF NOT EXISTS CSRegisteredFileTable_crt_iid_inx ON CSRegisteredFileTable(crt_iid)
ALTER TABLE CSRegisteredFileTable ADD COLUMN crt_filekey BLOB
ALTER TABLE CSRegisteredFileTable ADD COLUMN crt_filesize BIGINT
ALTER TABLE CSRegisteredFileTable ADD COLUMN crt_profileType INTEGER
ALTER TABLE CSRegisteredFileTable ADD COLUMN crt_profileTypeIsDefault INTEGER
ALTER TABLE CSRegisteredFileTable ADD COLUMN crt_profileConfigurationVersion TEXT
ALTER TABLE CSRegisteredFileTable ADD COLUMN crt_profileResolvedFileExtension TEXT
CREATE TABLE IF NOT EXISTS CSChunkTable (ct_rowid INTEGER PRIMARY KEY,cid BLOB,ct_iid BIGINT,ft_rowid BIGINT,offset BIGINT,dataLen INTEGER,refCount INTEGER,timeStamp BIGINT,location INTEGER,key BLOB)
DROP TABLE IF EXISTS CSStorageFileTable
DROP TABLE IF EXISTS CSStorageChunkListTable
DROP TABLE IF EXISTS CSStoragePendingChunksTable
DROP TABLE IF EXISTS CSStoragePendingFileChunklistTable
CREATE INDEX IF NOT EXISTS CSChunkTable_cid_inx ON CSChunkTable(cid)
CREATE INDEX IF NOT EXISTS CSChunkTable_iid_inx ON CSChunkTable(ct_iid)
CREATE INDEX IF NOT EXISTS CSChunkTable_ftrowid_inx ON CSChunkTable(ft_rowid)
DROP INDEX IF EXISTS CSChunkTable_refCount_inx
DROP INDEX IF EXISTS CSChunkTable_loc_inx
DROP INDEX IF EXISTS CSChunkTable_iidloc_inx
DROP INDEX IF EXISTS CSChunkTable_rowidloc_inx
DROP INDEX IF EXISTS CSChunkTable_rowidrefcnt_inx
DROP INDEX IF EXISTS CSChunkTable_cidloc_inx
CREATE TABLE IF NOT EXISTS CSStorageFileTable (ft_rowid INTEGER PRIMARY KEY,ft_inode BIGINT,ft_space INTEGER,ft_pspace INTEGER,vt_rowid BIGINT,ft_status INTEGER)
CREATE INDEX IF NOT EXISTS CSStorageFileTable_ft_rowid_inx ON CSStorageFileTable(ft_rowid)
CREATE INDEX IF NOT EXISTS CSStorageFileTable_ft_inode_inx ON CSStorageFileTable(ft_inode)
CREATE INDEX IF NOT EXISTS CSStorageFileTable_ft_space_inx ON CSStorageFileTable(ft_space)
CREATE INDEX IF NOT EXISTS CSStorageFileTable_ft_pspace_inx ON CSStorageFileTable(ft_pspace)
CREATE INDEX IF NOT EXISTS CSStorageFileTable_vt_rowid_inx ON CSStorageFileTable(vt_rowid)
CREATE INDEX IF NOT EXISTS CSStorageFileTable_ft_status_inx ON CSStorageFileTable(ft_status)
CREATE TABLE IF NOT EXISTS CSStorageChunkListTable (clt_rowid INTEGER PRIMARY KEY AUTOINCREMENT,clt_inode BIGINT,clt_count BIGINT,clt_chunkRowIDs BLOB)
CREATE INDEX IF NOT EXISTS CSStorageChunkListTable_clt_rowid_inx ON CSStorageChunkListTable(clt_rowid)
CREATE INDEX IF NOT EXISTS CSStorageChunkListTable_clt_inode_inx ON CSStorageChunkListTable(clt_inode)
CREATE TABLE IF NOT EXISTS CSStoragePendingChunksTable (pct_rowid INTEGER PRIMARY KEY,pct_inode BIGINT,pct_count BIGINT,pct_chunkRowIDs BLOB)
CREATE INDEX IF NOT EXISTS CSStoragePendingChunksTable_pct_inode_inx ON CSStoragePendingChunksTable(pct_inode)
CREATE TABLE IF NOT EXISTS CSStoragePendingFileChunklistTable (pft_rowid INTEGER PRIMARY KEY,pft_token BIGINT,pft_inode BIGINT)
CREATE INDEX IF NOT EXISTS CSStoragePendingFileChunklistTable_pft_token_inx ON CSStoragePendingFileChunklistTable(pft_token)
CREATE INDEX IF NOT EXISTS CSStoragePendingFileChunklistTable_pft_inode_inx ON CSStoragePendingFileChunklistTable(pft_inode)
INSERT INTO CSDatabaseVersion (version) VALUES (%llu)
UPDATE CSDatabaseVersion SET version = %lld
COMMIT
ChunkStore.c
%s unable to open storage file %lld,%lld:%s
CSReadChunkData
CKCreateChunkIDsFromFile
!CKChunkStoreIsRegistry(chunkStore) && "can't create chunk IDs because the chunkstore is a registry"
CKCreateChunkIDsFromFD
CKChunkListForToken
!CKChunkStoreIsRegistry(chunkStore) && "can't get chunklist because the chunkstore is a registry"
CKChunkRefsForToken
!CKChunkStoreIsRegistry(chunkStore) && "can't get chunk refs because the chunkstore is a registry"
CKCopyDataForChunkID
!CKChunkStoreIsRegistry(chunkStore) && "can't copy data for chunk because the chunkstore is a registry"
%s failed short read of StoredChunk for token: %llu
%s failed to get StoredChunk for token: %llu
fstat failed: (%d) %s
lseek failed: (%d) %s
Writing to SF rowID:%llu at o:0x%llx
write of %ld bytes on fd %d failed : %s
CSCopyData failed, copied %d bytes
orig_sz (%lld) + used_sz (%u) is too big: %u < %llu 
write failed for rowID:%llu: %d (%s)
write failed: %d != %d
unable to open storage file: %s
ftruncate failed for rowId:%lld: %d (%s)
addSourceChunk
array->count < array->capacity
array->data
rc || count < array->count
CKRemoveStoredFile
!CKChunkStoreIsRegistry(chunkStore) && "can't remove stored file because the chunkstore is a registry"
CKCompactStorage
!CKChunkStoreIsRegistry(chunkStore) && "can't compact storage because the chunkstore is a registry"
CKCreateStoredFileWithFlags
!CKChunkStoreIsRegistry(chunkStore) && "can't create stored file because the chunkstore is a registry"
CKCreateStoredFile
CKCommitChunkedFile
!CKChunkStoreIsRegistry(chunkStore) && "can't commit chunked file because the chunkstore is a registry"
CKCopyChunkListForStoredFileToken
!CKChunkStoreIsRegistry(chunkStore) && "can't copy chunklist for stored file because the chunkstore is a registry"
CKGetLocationOfChunkInStorage
!CKChunkStoreIsRegistry(chunkStore) && "can't get location of chunk in storage because the chunkstore is a registry"
CKTokenForStoredChunk
!CKChunkStoreIsRegistry(chunkStore) && "can't get token for stored chunk because the chunkstore is a registry"
CKRegisteredItemCount
CKChunkStoreIsRegistry(chunkStore) && "can't get registered item count because the chunkstore is not a registry"
CKGetRegisteredItems
CKChunkStoreIsRegistry(chunkStore) && "can't get registered items because the chunkstore is not a registry"
deprecated
CS_CHUNK_TYPE_NONE
CS_CHUNK_TYPE_RABIN
CS_CHUNK_TYPE_FIXED
CS_CHUNK_TYPE_SQLITE_DB_HEADER
CS_CHUNK_TYPE_SQLITE_DB_PAGE
CS_CHUNK_TYPE_SQLITE_WAL_HEADER
CS_CHUNK_TYPE_SQLITE_WAL_FRAME_HEADER
CS_CHUNK_TYPE_SQLITE_WAL_PAGE
CS_CHUNK_TYPE_ZIP_FILE_HEADER
CS_CHUNK_TYPE_MP3
unknown cs_chunk_type_t
CKRegisterChunksForFileWithHint
CKChunkStoreIsRegistry(cs) && "can't register chunks for file because the chunkstore is not a registry"
NOT registering chunks for dataless file fd:%d, itemID:%lld
get_path_for_fd failed for fd:%d: %d (%s)
com.apple.ChunkingLibrary.CustomFixedChunk
CKRegisterChunksForItem
CKChunkStoreIsRegistry(cs) && "can't register chunks for item because the chunkstore is not a registry"
CKRegisterItemAndChunks
CKChunkStoreIsRegistry(cs) && "can't register item and chunks because the chunkstore is not a registry"
fileDigestResults
CKUnregisterFile
CKChunkStoreIsRegistry(chunkStore) && "can't unregister file because the chunkstore is not a registry"
CKGetRegisteredChunksForItemID
CKChunkStoreIsRegistry(chunkStore) && "can't get registered chunks because the chunkstore is not a registry"
CKGetRegisteredChunksForFileSignature
CKRegisterChunk
CKChunkStoreIsRegistry(chunkStore) && "can't register chunk because the chunkstore is not a registry"
CKGetRegisteredChunk
CKChunkStoreIsRegistry(chunkStore) && "can't get registered chunk because the chunkstore is not a registry"
CKGetRegisteredChunks
CKRegisterFile
CKChunkStoreIsRegistry(chunkStore) && "can't register file because the chunkstore is not a registry"
can't register file %lld because the chunkstore is readonly
CKGetRegisteredFileSignature
CKChunkStoreIsRegistry(chunkStore) && "can't get signature for registered file because the chunkstore is not a registry"
CKGetRegisteredFileMetadata
CKGetRegisteredFileItemID
CKChunkStoreIsRegistry(chunkStore) && "can't get item ID for registered file because the chunkstore is not a registry"
CKUnregisterAllTemporaryChunks
CKChunkStoreIsRegistry(chunkStore) && "can't unregister all temporary chunks because the chunkstore is not a registry"
CKUnregisterTemporaryChunks
CKChunkStoreIsRegistry(chunkStore) && "can't unregister temporary chunks because the chunkstore is not a registry"
CKRegisterTemporaryChunk
CKChunkStoreIsRegistry(chunkStore) && "can't register temporary chunk because the chunkstore is not a registry"
CKRegisterTemporaryChunks
CKChunkStoreIsRegistry(chunkStore) && "can't register temporary chunks because the chunkstore is not a registry"
CKUnregisterTemporaryChunk
CKChunkStoreIsRegistry(chunkStore) && "can't unregister temporary chunk because the chunkstore is not a registry"
CKUnregisterTemporaryNChunk
CKUnregisterTemporaryTChunk
CKRelocateTemporaryChunk
CKChunkStoreIsRegistry(chunkStore) && "can't relocate temporary chunk because the chunkstore is not a registry"
Invalid chunk rowID, itemID:%lld, o:0x%llx, sz:0x%x
Invalid chunk relocation ('%c'/'%c') for itemID:%lld, o:0x%llx, sz:0x%x, rowID:%llu
CKConvertTemporaryChunks
CKChunkStoreIsRegistry(chunkStore) && "can't convert temporary chunks because the chunkstore is not a registry"
CKKeyForRegisteredChunk
CKChunkStoreIsRegistry(chunkStore) && "can't get key for registered chunk because the chunkstore is not a registry"
CKRegisterNeededChunk
CKChunkStoreIsRegistry(chunkStore) && "can't register needed chunk because the chunkstore is not a registry"
CKUnregisterChunksForItem
CKChunkStoreIsRegistry(chunkStore) && "can't unregister chunks because the chunkstore is not a registry"
CKTokenForRegisteredChunk
CKChunkStoreIsRegistry(chunkStore) && "can't get token for registered chunk because the chunkstore is not a registry"
open failed for "%s": %s
DROP INDEX IF EXISTS CSStorageFileTable_ft_rowid_inx
DROP INDEX IF EXISTS CSStorageFileTable_ft_inode_inx
DROP TABLE IF EXISTS CSStorageVolumeTable
ALTER TABLE CSStorageFileTable ADD COLUMN ft_status INTEGER
DROP INDEX IF EXISTS CSRegisteredFileTable_crt_id_inx
DROP INDEX IF EXISTS CSRegisteredFileTable_crt_iid_inx
DROP TABLE IF EXISTS CSRegisteredFileTable
failed to create entry for chunk:
_CSFlushChunkBatch
batchIndex <= chunkCount
chunkSize
_CSStoreChunks failed, batchIndex:%u, batchCount:%u
com.apple.decmpfs
registerChunksForItem
readContext->open
readContext->close
readContext->read
readContext->stat
"%s", hint:"%s", itemID:%lld, encrypt:%u, scheme:0x%x, fixedChunkSize:0x%x, %u
Invalid custom fixed chunk size:0x%x for itemID:%lld
Invalid file signature scheme:0x%x for itemID:%lld
SELECT ct_rowid FROM CSChunkTable WHERE ct_iid = %lld
failed to get file sig for itemID:%lld
overwriteChunkRegistry || (!alreadyChunked && !chunks && !fileDigestResults)
Failed to unregister chunks for itemID:%llu
open failed on itemID:%lld, path:"%s", error:"%@"
stat failed on itemID:%lld, path:"%s", ino:%llu, error:"%@"
opCtx->fileDigestResults
CKFileDigestResultsEqual(fileDigestResults, opCtx->expectedFileDigestResults)
rc:%u, itemID:%lld, size:%llu, chunkCount:%llu, ac:%u
addRegisteredChunk failed, itemID:%lld, offset:0x%llx, size:0x%x
chunkFdForStorage
!CKChunkStoreIsRegistry(cs) && "can't chunk file for storage because the chunkstore is a registry"
fdInfo
stat failed on path:"%s", error:"%@"
stat failed on itemID:%lld, path:"%s", ino:%llu, error:%@
chunk store database corruption: detected error %d in sqlite3_open_v2
chunk store database corruption: detected error %d in sqlite3_step
chunk store database corruption: detected error %d in sqlite3_exec
chunk store database corruption: detected error %d in sqlite3_prepare_v2
chunk store database corruption: detected error %d in CSsql_do
CKFileDigestResults
com.apple.cscache
Invalid chunk list cache for "%s", size:%u, type:%u
Different type chunk list cache found for "%s", size:%u, type:%u expected %u
setChunkListCacheBlob
CSchunk.c
sizeof(*blob) <= (uint32_t)CFDataGetLength(data)
kCKChunkListCacheType == opCtx->chunkListCacheType || kCKChunkListCacheCloudType == opCtx->chunkListCacheType
"%s", hint:"%s", scheme:0x%x, size:%llu, fileID:0x%016llx(%llu), itemID:%lld
Chunking "%s"
Not chunking "%s" - no chunking profile!
Done chunking "%s", rc:%d, chunkCount:%llu, itemID:%lld
srcPath:"%s", dstPath:"%s"
open failed on "%s": %d (%s)
Invalid chunk list cache for "%s", type:%u, mtime:%llu/%llu, ino:%llu/%llu, generation:%u/%u, sz:%llu/%llu
Copied chunk list cache from "%s" to "%s" (%llu/%llu)
Invalid file signature cache for "%s", type:%u, mtime:%llu/%llu, ino:%llu/%llu, generation:%u/%u, sz:%llu/%llu
Copied file signature cache from "%s" to "%s" (%llu/%llu)
Fixed up chunk list cache for "%s" (%llu)
Fixed up file signature cache for "%s" (%llu)
fstat failed for fd:%d, path:"%s": (%d) %s
make_fd_uncached failed for fd:%d, path:"%s", ino:%llu: %d (%s)
closeFd
opCtx->openInfo == openInfo
statFd
readFd
get path failed for fd:%d: %d (%s)
readlink failed for fd:%d, path:"%s": (%d) %s
pread failed on fd:%d, path:"%s", offset:0x%llx: (%d) %s
getCacheBlobFd
setCacheBlobFd
CS_DISABLE_CL_CACHE
generation:%u, mtime:%llu, ino:%llu, sz:%llu, fileSignatureSize:%u, chunkInfoSize:%u, chunkInfoCount:%u
Invalid chunk cache for "%s", type:%u, mtime:%llu/%llu, ino:%llu/%llu, generation:%u/%u, sz:%llu/%llu, chunkInfoCount:%u
Invalid file signature size for "%s", %u/%u
Invalid file signature scheme for "%s": 0x%x
Invalid chunk info size/count for "%s", %u/%u/%u
Invalid chunk signature/key scheme for "%s": 0x%x/0x%x
Found chunk list cache "%s" for "%s", blobSize:%u, chunkInfoCount:%u, sz:%llu, ino:%llu, mtime:%llu, generation:%u
chunkUsingChunkCache
cache->blobData
!sourceChunk->data
!opCtx->chunkCount
!opCtx->processedSize
Using cache "%s" for "%s", ino:%llu, (0x%x/%u/%u)
Signature scheme mismatch: 0x%x/0x%x
Key scheme mismatch: 0x%x/0x%x
File signature mismatch: 0x%x/0x%x
sizeof(uint32_t) < chunkInfoSize
Reading chunk, o:0x%llx, size:0x%x
Failed to read chunk bytes: %u != %u
callback failed for chunk %u: %d
cache file signature not supported
file signature mismatch for %lld item has %@ != %@ for the chunk store
The file signature changed: from %@ on the item to %@ registered in the chunk store for item %lld. Perhaps the item should be unregistered.
Found %u chunks for "%s", ino:%llu
Skipping zero length section %u.
CSchunklist_streamRead failed
CSfixed_chunk_stream failed
under-read for rabin chunking; only read %lld bytes and not at EOF
At EOF and zero bytes left. We should be done by now. Chunk profile inconsistent?
CSrabin_chunk_stream failed
section %u done (%u, eo:0x%llx, %u)
not all sections chunked before eof reached
Begin stats for "%s"
End stats for "%s"
CHUNK_BUFFER_LENGTH
Unable to use env value %s for CHUNK_BUFFER_LENGTH. Parsed %lld and the minimum is %d. Using default value %lu
_SetSourceChunk
!sourceChunk->signatureGenerator
overflow; buffer length: %lu producer location %lu
CS_fixed_chunk_stream_accumulate
sourceChunk->data || !sourceChunk->chk.length
CKChunkSignatureGeneratorFinish failed
Ignoring attempt to add 0 length chunk
"%s": %llu, %llu, o:0x%llx, sz:0x%x(%u), s:%s
"%s": %llu, %lld, o:0x%llx, sz:0x%x(%u), s:%s
"%s": %s, %lld, o:0x%llx, sz:0x%x(%u), s:%s
File offset is already great than sectionEnd. Shouldn't we be in a different section?
  === segment end marker ===
Ignoring attempt to add a chunk with invalid length %d.
encrypting
doEncrypt failed
"%s": %llu, %lld, o:0x%llx, sz:0x%x(%u), s:%s, (%u, %s)
"%s": %s, %llu, o:0x%llx, sz:0x%x(%u), s:%s
CK_CHUNK_COUNT
%llu
CK_STORED_CHUNK_COUNT
CK_STORED_SIZE
CK_HARD_BREAK_COUNT
CK_CHUNK_TMIN
CK_CHUNK_TMAX
stat failed for "%s", ino:%llu
"%s" changed, mtime:%llu/%llu, sz:%llu/%llu, generation:%u/%u
Invalid chunk array, chunkArray:%p, chunkCount:%llu
Storing cache "%s" for "%s", scheme:0x%x, ino:%llu, chunkCount:%llu, mtime:%llu, generation:%u, registering:%u
setChunkListCache
fileSignature
fileSignatureSize <= UINT16_MAX
chunkInfoSize <= UINT16_MAX
fileSignatureSize:%u, chunkInfoSize:%u, chunkInfoCount:%u
Invalid size/count: 0x%x/0x%x/0x%x
p == (u_char*)blob + blobSize
Stored chunk list cache for "%s", chunkCount:%llu, blobSize:%u, sz:%llu, ino:%llu, mtime:%llu, generation:%u
Removed chunk list cache for "%s", sz:%llu ino:%llu, mtime:%llu, generation:%u
signature-key
cs_longrdunlock
CSChunkStore.c
lock->mutexHolder == 0
ERROR: NULL location parameter
CFURLGetFileSystemRepresentation(%s) error: %s
bufLen is too small: %lu
ChunkStorage
ChunkStoreNoCopy
copyfile_state_alloc failed
copyfile_state_set failed
copyfile failed: %s
NESTED TRANSACTION!
BEGIN TRANSACTION
Unable to begin transaction: %d (%s)
END TRANSACTION
Unable to commit transaction: %d (%s)
TRANSACTION COUNT ALREADY ZERO!
ROLLBACK TRANSACTION
Unable to rollback transaction: %d (%s)
_CSPrepareStatement
chunkstore->db
sqlite3_prepare_v2 returned: %d %s for query "%s"
CKChunkStoreGetLocation failed
failed to add SF entry to database!
unable to create storage directory
unable to create storage path
file %s already exists (size: %lld), trying again.
open(%s) failed: %s
fstat failed: %s
UPDATE CSStorageFileTable SET ft_inode = %lld WHERE ft_rowid = %lld
failed to set inode for file: %s: %d %s
UPDATE CSStorageFileTable SET ft_space = %d WHERE ft_rowid = %lld
failed to set space for file: %s: %d %s
UPDATE CSStorageFileTable SET ft_pspace = %d WHERE ft_rowid = %lld
failed to set purgeable space for file: %s: %d %s
Created a new SF, ino:%llu, rowID:%llu
Updating SF space for ftRowId:%llu curspace:%llu, space:%llu
UPDATE CSStorageFileTable SET ft_space = ? WHERE ft_rowid = ?
sqlite3_bind_int returned: %d %s
sqlite3_bind_int64 returned: %d %s
sqlite3_step returned: %d %s
_CSSyncStorageFile
could not create storage file path for storage file %llu in %s
could not open storage file directory %s in %s: %s (%d)
close failed for SF rowID:%llu
_CSGetStorageFile
neededSize <= INT_MAX
Found cached SF %u at rowID:%llu, space:%llu, needSize:%llu
SELECT ft_rowid, ft_space FROM CSStorageFileTable WHERE (ft_space >= ? AND ft_status IS NULL)
NULL stmt
Checking free space for SF at rowID:%llu, %llu/%llu
Found a candidate SF at rowID:%llu
Attempting first aid in %s after open failed for "%s": %s
fstat failed for "%s": %s
The size on disk is different from the size in db for "%s": usedSpace:%llu, size:%llu - truncating
ftruncate failed for "%s": %s
_CSCreateStoragePath failed for rowID: %lld
spaceNeeded:%llu
removeUnreferencedChunks freed %llu bytes, totalFreeSpace:%llu, spaceNeeded:%llu, rc:%d
copyReferencedChunks freed %llu bytes, totalFreeSpace:%llu, spaceNeeded:%llu, rc:%d
freeSpace:%llu
_CSCompactStorage
Failed first aid check in %s
_CSStoreChunks
_CSInsertChunk failed, i:%llu, count:%llu
INSERT INTO CSStoragePendingChunksTable (pct_inode, pct_count, pct_chunkRowIDs) VALUES (?, ?, ?)
sqlite3_step returned: %d (%s)
SELECT pft_inode FROM CSStoragePendingFileChunklistTable WHERE pft_token = ?
DELETE FROM CSStoragePendingFileChunklistTable WHERE pft_token = %llu
_CSRemoveStoredFile
!cs->readOnly
_CSChunkRefsForToken failed
Invalid signature size, sigSize:%u
_CSChunkSignatureForToken failed for chunk token %lld
_CSReleaseChunkForSignature failed for chunk token %lld
DELETE FROM CSStorageChunkListTable WHERE clt_rowid = %llu
CSsql_do returned: %d (%s)
token:%llu, result:%d, sqlRc:%d
SELECT cid, dataLen FROM CSChunkTable WHERE ct_rowid = ? AND location = ?
sqlite3_step returned: %d %s, for _CSChunkSizeForToken
SELECT CSChunkTable.ct_rowid, CSStorageFileTable.ft_rowid, CSStorageFileTable.ft_status FROM CSStorageFileTable INNER JOIN CSChunkTable on CSChunkTable.ft_rowid = CSStorageFileTable.ft_rowid WHERE CSChunkTable.ct_rowid = ? 
sqlite3_step returned in %s: %s (%d)
_CSChunkIsInvalid
SELECT clt_count, clt_chunkRowIDs FROM CSStorageChunkListTable WHERE clt_rowid = ?
sqlite3_step returned: %d %s, for listToken:%llu
_CSChunkSizeForToken failed for file token %llu, chunk token:%llu (count:%llu)
SELECT ft_rowid FROM CSChunkTable WHERE cid = ? AND location = ?
sqlite3_step returned: %s (%d), for signature:
SELECT ct_rowid FROM CSChunkTable WHERE cid = ? AND location = ?
sqlite3_step returned: %d %s, for signature:
SELECT cid FROM CSChunkTable WHERE ct_rowid = ?
no signature for token %llu
INSERT INTO CSChunkTable (cid, ft_rowid, offset, dataLen, refCount, timestamp, location) VALUES (?, ?, ?, ?, ?, ?, ?)
null sqlite3_stmt
SELECT * FROM CSChunkTable WHERE ct_rowid = ?
not a stored chunk
SELECT refCount, dataLen, ft_rowid FROM CSChunkTable WHERE ct_rowid = ?
sqlite3_bind_int64 failed for row id %lld: %d %s
setFT_pSpace failed for ftRowId:%llu, rowId:%llu
Attempted to retain row ID %llu that did not exist
Failed to get row ID %llu from database (%d)
UPDATE CSChunkTable SET refCount = ? WHERE ct_rowid = ?
sqlite3_bind_int64 failed for refCount %lld: %d %s
sqlite3_bind_int64 failed for rowId %lld: %d %s
SELECT refCount, dataLen, ft_rowid, ct_rowid FROM CSChunkTable WHERE cid = ? AND location = ?
sqlite3_bind failed: %s (%d)
sqlite3_step failed: %s (%d)
refCount already zero for:
null sqlite3_stmt (stmt)
UPDATE CSChunkTable SET refCount = 0 WHERE ct_rowid = %lld
CSsql_do returned: %d %s
SELECT ft_pspace FROM CSStorageFileTable WHERE ft_rowid = %lld
UPDATE CSStorageFileTable SET ft_pspace = %lld WHERE ft_rowid = %lld
unable to update purgable space for SF rowID:%llu
null sqlite3_stmt (sel_stmt)
SELECT refCount FROM CSChunkTable WHERE ct_rowid = ? AND location = ?
sqlite3_bind returned: %s (%d)
sqlite3_step returned: %s (%d)
stat failed for path: %s : %s
Attempting first aid in %s after stat failed for "%s": %s
_CSStorageFileInode
SELECT ft_inode FROM CSStorageFileTable WHERE ft_rowid = ?
INSERT INTO CSStorageFileTable (ft_inode, vt_rowID) VALUES (?, ?)
DELETE FROM CSStorageFileTable WHERE ft_rowid = ?
addRegisteredChunk
addStoredChunk
_CSRegisterChunk failed
_CSRegisterChunk
INSERT INTO CSChunkTable (cid, ct_iid, offset, dataLen, location, key) VALUES (?, ?, ?, ?, ?, ?)
sqlite3_step returned: %d %s, for chunk:
SELECT * FROM CSChunkTable WHERE cid = ?
sqlite3_step returned: %d %s, for signature:
registerItem
Registering itemID:%lld
INSERT INTO CSRegisteredFileTable (crt_id, crt_iid, crt_filekey, crt_filesize, crt_profileType, crt_profileTypeIsDefault, crt_profileConfigurationVersion, crt_profileResolvedFileExtension) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
unregisterItem
Unregistering itemID:%lld
DELETE FROM CSRegisteredFileTable WHERE crt_iid = ?
sqlite3_step returned: %d %s, for itemID:%lld
SELECT ct_rowid, cid, offset, dataLen, location, key FROM CSChunkTable WHERE ct_iid = ? ORDER BY offset
SELECT crt_iid FROM CSRegisteredFileTable WHERE crt_id = ?
SELECT crt_id, crt_filekey, crt_filesize, crt_profileType, crt_profileTypeIsDefault, crt_profileConfigurationVersion, crt_profileResolvedFileExtension FROM CSRegisteredFileTable WHERE crt_iid = ?
sqlite3_column_blob returned bad data for itemID:%lld, blobSize:%d, expectedSize:%u
signature size is 0, itemID:%lld
Unregistering chunks for itemID:%lld
DELETE FROM CSChunkTable WHERE ct_iid = ? AND location = 114
_CSUnregisterAllTemporaryChunks
DELETE FROM CSChunkTable WHERE location = ?
_CSUnregisterTemporaryChunks
DELETE FROM CSChunkTable WHERE location = ? AND ct_iid = ?
sqlite3_step returned: %d %s for itemID:%lld
_CSRelocateRegisteredChunk
UPDATE CSChunkTable SET location = ? WHERE rowid = ? AND location = ? AND ct_iid = ? AND cid = ? AND offset = ? AND dataLen = ?
Couldn't update chunk ('%c'/'%c') for itemID:%lld, o:0x%llx, sz:0x%x, rowID:%llu
UPDATE CSChunkTable INDEXED BY CSChunkTable_cid_inx SET location = ? WHERE location = ? AND ct_iid = ? AND cid = ? AND offset = ? AND dataLen = ?
Moved registered chunk ('%c'/'%c') for itemID:%lld, o:0x%llx, sz:0x%x, rowID:%llu
_CSUnregisterChunk
DELETE FROM CSChunkTable INDEXED BY CSChunkTable_cid_inx WHERE location = ? AND ct_iid = ? AND cid = ? AND offset = ? AND dataLen = ?
sqlite3_step returned: %d %s, for signature
_CSConvertTemporaryChunks
DELETE FROM CSChunkTable WHERE location = 114 AND ct_iid = %llu;
UPDATE CSChunkTable SET location = 114 WHERE ct_iid = ?
key param is NULL, failing.
SELECT key FROM CSChunkTable WHERE cid = ?
Bad size for key...
sqlite3_column_blob returned NULL.
sqlite3_step returned: %d %s, for signature: 
_CSUnregisterAllChunksForItem
Unregistering all chunks for itemID:%lld
DELETE FROM CSChunkTable WHERE ct_iid = ?
SELECT count(*) FROM CSRegisteredFileTable
_CSGetRegisteredItems
itemCount && "item count"
*itemCount > 0 && "item count = 0"
SELECT crt_iid FROM CSRegisteredFileTable WHERE crt_iid > ? ORDER BY crt_iid ASC LIMIT ?
read only location and no tmp path makes ChunkStore unhappy!
CK_CHUNKSTORE_VERBOSE
CS_LOG_PATH
CHUNK_STORE_UNIT_TESTS
CS_LOG_VERBOSE
CS_LOG_STDOUT
logging to stdout
log debug enabled
stat failed for %s: %s
%s/%s
unable to create directory: %s : %d:%s
path:%s
struct __CSChunkStore
unable to create chunk store object for %s
%s/chunk_store_XXXXXX
safe_snprintf truncated %s
mkdtemp failed to create %s : %s
unable open chunk store database for %s
path:%s
CKChunkStoreRelocateDB failed to copy database to temp location!
%s/%s/%s
ChunkStoreDatabase
unable to rename old chunk store at %s: %s
unable to create directory %s : %s
%s_old_%u
can't rename "%s", too many old files (%u)
renaming "%s" to "%s"
unable to rename "%s": %d (%s)
finalizing "%s"
sqlite3_finalize returned %d: %s
SELECT pft_rowid, pft_token FROM CSStoragePendingFileChunklistTable
SELECT pft_rowid, pft_token FROM CSStoragePendingFileChunklistTable where pft_inode = ?
sqlite3_bind_int64 for inode: %lld returned: %d (%s)
sqlite3_step returned: %d (%s), listToken: %llu
DELETE FROM CSStoragePendingFileChunklistTable WHERE pft_rowid = %lld
stat failed for "%s"
CKChunkStoreGetLocation failed
open (%lld,%lld) failed: %s
Unable to release chunk at token %lld (%llu)
failed to get chunk store location!
%s/%s/%d/%d/%d
outPath too small
%s/%s/%d/%d/%d/%d
failed to get chunk store location!
%s/%s/%d/%d/%d/
path exceeds %d characters!
failed to create directory: %s, %s
SELECT ft_space FROM CSStorageFileTable WHERE ft_rowid = %lld
removeUnreferencedChunks
SELECT ft_rowid FROM CSStorageFileTable WHERE ft_pspace > 0 ORDER BY ft_pspace DESC
removeUnreferencedChunksAtEof
ftRowId:%llu, spaceNeeded:%llu
SELECT ct_rowid, dataLen, offset, refCount FROM CSChunkTable WHERE ft_rowid = ? AND location = ? ORDER BY offset DESC
ctRowId:%llu, refCount:%llu, offset:0x%llx, size:0x%llx
Invalid chunk, ftRowId:%llu, ctRowId:%llu, chunkOffset:0x%llx, truncateOffset:0x%llx
chunkCount:%u, truncateOffset:0x%llx, freeSpace:%llu
DELETE FROM CSChunkTable WHERE ct_rowid = ?
sqlite3_step error: %d, %s
ftRowId:%llu, totalFreeSpace:%llu, rc:%d
ftRowId:%llu, offset:0x%llx, spaceDelta:%llu
open failed for "%s" with ENOENT, but we can clear the storage file reference anyway
DELETE FROM CSChunkTable WHERE ft_rowid = %lld
DELETE FROM CSStorageFileTable WHERE ft_rowid = %lld
CSsql_do error: %d, %s
unlink failed for ftRowId:%llu, path:"%s": %s
fstat failed for "%s": %s
Invalid file size/offset for "%s": fileSize:0x%llx, offset:0x%llx
Invalid free space for "%s": diffSize:%llu, spaceDelta:%llu
Updating free space for ftRowId:%llu, spaceDelta:%llu, space:%llu
failed to set the free space for ftRowId:%llu, path:"%s", space:0x%llx
Updating free pspace for ftRowId:%llu, pspaceDelta:%llu, pspace:%llu
failed to set the free pspace for ftRowId:%llu, path:"%s", pspace:0x%llx
ftruncate failed for ftRowId:%llu, path:"%s", offset:0x%llx: %s
ftRowId:%llu, rc:%d
UPDATE CSStorageFileTable SET ft_space = %lld WHERE ft_rowid = %lld
copyReferencedChunks
SELECT ft_rowid FROM CSStorageFileTable WHERE (ft_pspace > 0 AND ft_status IS NULL) ORDER BY ft_pspace DESC
_CSRelocateStorageFileChunks
Failed first aid check in %s, skipping chunk copying
open failed for "%s", ft_rowid=%lld: %s
"%s" does not exist, ft_rowid:%llu
SELECT CSChunkTable.ct_rowid, CSChunkTable.dataLen, CSChunkTable.offset FROM CSStorageFileTable INNER JOIN CSChunkTable on CSChunkTable.ft_rowid = CSStorageFileTable.ft_rowid WHERE CSChunkTable.ft_rowid = ? AND CSChunkTable.refCount > 0 AND CSChunkTable.location = ? AND CSStorageFileTable.ft_status IS NULL ORDER BY CSChunkTable.refCount DESC
Bad chunk in "%s", ctRowId:%llu, chunkOffset:0x%llx, chunkSize:0x%llx
compact_source_invalid
com.apple.message.signature
invariant_violated
com.apple.chunkinglibrary.chunk_validation
compact_destination_invalid
pread(%d, 0x%llx, 0x%llx) failed: %s, read %lld bytes, file is 0x%llx(%lld) bytes long
Read size doesn't match request
DELETE FROM CSChunkTable WHERE ct_rowid = %lld
_CSCreateStorageFile failed, rc:%d
pwrite(%d, sz:0x%llx, o:0x%llx) failed: %d, %s
pwrite(%d, sz:0x%llx, o:0x%llx) failed: wrote %lld bytes
newRowID != CK_INVALID_TOKEN
Nothing was moved from SF ft_rowid:%lld
UPDATE CSStorageFileTable SET ft_space = %lld, ft_pspace = 0 WHERE ft_rowid = %lld
UPDATE CSChunkTable SET offset = ?, ft_rowid = ? WHERE ct_rowid = ?
failed to sync storage file while relocating chunks in %s
Removing SF "%s"
unlink failed for "%s": %s
sqlite3_step error: %d (%s)
CSsql_do error: %d (%s)
totalMoved <= origFileSize
fileSize:%llu, totalMoved:%llu
There was a problem compacting SF ft_rowid:%lld, rc:%d
offset_bounded_by_storage_file_length
length_bounded_by_slot_size
chunk_contained_in_storage_file
ChunkStoreDirty
unlink failed "%s": %d (%s)
o:0x%llx, sz:0x%x, (0x%x/%u/%llu)
zero length chunk for file "%s"
UPDATE CSChunkTable SET cid = ?, ft_rowid = ?, offset = ?, dataLen = ?, refCount = ?, timestamp = ?, location = ? WHERE ct_rowid = ?
Retaining chunk: o:0x%llx, sz:0x%x
Fixing corruption in chunk %llu by storing chunk: o:0x%llx, sz:0x%x
Storing chunk: o:0x%llx, sz:0x%x
Could not retrieve retain count for chunk with ct_rowid %llu
chunk_insert_invalid
_CSRemovePendingBatchesForInode
SELECT * FROM CSStoragePendingChunksTable
SELECT * FROM CSStoragePendingChunksTable WHERE pct_inode = ?
sqlite3_bind_int64 for inode:%lld returned: %d (%s)
Removing pending batch for inode:%llu, rowId:%llu, count:0x%llu
DELETE FROM CSStoragePendingChunksTable WHERE pct_rowid = %lld
INSERT INTO CSStorageChunkListTable (clt_count, clt_chunkRowIDs, clt_inode) VALUES (?, ?, ?)
DELETE FROM CSStoragePendingChunksTable WHERE pct_inode = %llu
INSERT INTO CSStoragePendingFileChunklistTable (pft_token, pft_inode) VALUES (%llu, %llu)
chunk-key
file-key
copy-key
CCCryptorRelease() => %d
expected key size 16; got %u
CCCryptorCreate() => %d
crypting:CCCryptorUpdate() => %d
v2 boundaryKey
v2 chunkKey
v2 invalid
Unknown file signature scheme: 0x%x
com.apple.XattrObjectSalt
com.apple.DataObjectSalt
sig %s len %llu fileVerificationKey %s
present
not-present
chunk store database corruption: retaining contents, isRegistry false
chunk store database corruption: could not unlink files, dbname null
chunk store database corruption: would normally abort here
chunk store database corruption: would normally abort here.  Exiting instead
chunk store database corruption: aborting
database
%s-journal
journal
%s-wal
%s-shm
chunk store database corruption: unlinked database files
CKFileDigestArguments
Unknown chunk signature scheme: 0x%x
CKChunkEncryptionKeySize
CKChunkScheme.c
"invalid key scheme" && !(key[0] & 0x80)
Unknown key scheme: 0x%x
_CSCopyStoredChunkListForStorageFileID
SELECT ct_rowid, cid, offset, dataLen, timestamp, location FROM CSChunkTable WHERE ft_rowid = ? ORDER BY offset
Could not create prepared sqlite3 statement in %s
sqlite3_bind failed in %s: %s (%d)
sqlite3_step in %s failed for ft_rowid %lld: %s (%d)
CSAttemptFirstAidForStorageFile
First aid found %llu inconsistent chunks in storage file with ft_rowid %llu, but chunk store is read-only
First aid found %llu inconsistent chunks in storage file with ft_rowid %llu, but could not invalidate storage file
First aid found %llu inconsistent chunks in storage file with ft_rowid %llu, and returned database to consistent state
_CSValidateStorageFile
Could not construct path for storage file with ft_rowid %llu
stat failed in %s for path "%s": %s (%d)
Storage file with ft_rowid %lld is missing
_CSPurgeInvalidStorageFileID
UPDATE CSStorageFileTable SET ft_status = ? WHERE ft_rowid = ?
sqlite3_step failed in %s: %s (%d)
SELECT changes()
sqlite3_step failed for changes() in %s: %s (%d)
Storage file with ft_rowid %llu does not exist in database
Bad iv
Bad key
Bad mode
CCCryptorCreateWithMode %d
CCCryptorGCMSetIV %d
CKStreamCoderUpdate
CKStreamCoder.c
0 && "invalid coder mode"
CCCryptorGCMDecrypt %d
CKStreamCoderFinish
tagPtr && "tagPtr"
errorPtr && "error object ptr"
CKStreamCoder
encrypt
decrypt
unknown
stream %s coder
CCCryptorGCMFinalize %d
_CKStreamCoderFinishEncrypt
_CKStreamCoderFinishDecrypt
tag && "tag object"
Tag failure on decrypt
CKChunkCoderUpdate
CKChunkCoder.c
Chunk digest results differ
Not enough bytes tranversed coder
CKChunkCoder
identity
chunk %s coder expected %@ 
read failed (read %ld bytes of requested %lld bytes) for fd:%d : %d (%s)
write failed for fd:%d, %d (%s)
write failed for fd:%d, %lld != %lld
0123456789abcdef
signature:%s, key:%s
signature:%s
StoredChunk at %p:
StoredChunk 
StoredChunk volume info: 
StoredChunk device: %d
StoredChunk inode: %lld
StoredChunk stgPath: 0x%08x
StoredChunk token: %lld
StoredChunk offset: %lld
StoredChunk length: %d
StoredChunk location: %c
StoredChunk data: 
RegisteredChunk: itemID:%lld, offset:0x%llx, size:0x%x(%u), location:%c
en_US
Option %@ had CFStringRef "%@" but couldn't parse as a number.
Unable to recognized type id '%@' for boolean decoding for key '%@'.
com.apple.cscachefs
Invalid file signature cache for "%s", size:%u, type:%u
CS_DISABLE_FS_CACHE
Invalid file signature cache for "%s", ino:%llu, sz:%llu, type:%u, scheme:0x%x, generation:%u
Found cached file signature for "%s", blobSize:%u, sz:%llu, ino:%llu, time:%llu, generation:%u
get2FileSignatureCache
CSutils.c
rc || CKFileDigestResultsFileSignature(fileDigestResults) != NULL
setFileSignatureCacheBlob
setFileSignatureCache
signature && signatureSize == CKSHA_SCHEME_AND_SIGNATURE_SIZE
"%s"changed, ino:%llu, mtime:%llu/%llu, sz:%llu/%llu, generation:%u/%u
Stored file signature cache for "%s", blobSize:%u, sz:%llu, ino:%llu, mtim:%llu, generation:%u
Removed file signature cache for "%s", blobSize:%u, sz:%llu, ino:%llu, mtime:%llu, generation:%u
NULL read context
open failed on path:"%@", error:"%@"
stat failed on path:"%@", ino:%llu, error:"%@"
CK2CalculateItemSignatureWithFlags
read failed on path:"%@", ino:%llu, offset:0x%llx, size:%u, error:"%@"
CKFileSignatureGeneratorUpdate failed
ino:%llu changed
!fileDigestResults
error:"%@", path:"%@", ino:%llu, sz:%llu, o:%llu
path:"%@", flags:0x%llx, ino:%llu, sz:%llu, o:%llu, ck:%s
CKCalculateFileSignature
scheme == kCKFileSignatureSha1 && "bad scheme"
!sig || sigSize == CKSHA_SCHEME_AND_SIGNATURE_SIZE
signature size is 0
CK_TIME_CHUNKING
CK_SIZE_STATS
CK_CHUNKSTORE_VERBOSE_FOR_TEST_TOOL
CK_NO_RESULTS
freeOpCtx
chunkSize || !count
read failed on itemID:%lld, path:"%s", ino:%llu, offset:0x%llx, size:%u, error:"%@"
sectionIndex %u out of range (numSections = %u)
section %u/0x%llx is before section %u/0x%llx
fpathconf failed on "%s": %s
fgetattrlist(ATTR_CMN_GEN_COUNT) failed on "%s", fd:%d: %d (%s)
Invalid cache size for "%s", blobName:%s, size:%u
Invalid cache hash for "%s", blobName:%s
setCacheBlob
sizeof(*header) <= bufferSize
file-write-xattr
fgetxattr failed on "%s", fd:%d, xattrName:%s: %d (%s)
fgetxattr failed on "%s", fd:%d, xattrName:%s
fgetxattr failled on "%s", fd:%d, xattrName:%s
fremovexattr failed on "%s", xattrName:%s: %d (%s)
fsetxattr failed for "%s", fd:%d, xattrName:%s: %d (%s)
 Summary for item %lld (%s):
profiler created %d sections
%32s
Throughput
Elapsed Time
%10s %13.7f %7s
chunking
seconds
%12.4f MB/sec
%10s %13.7f %-10s
hashing
file read
file write
DB access
Chunked%s
, hashed, encrypted and hashed again
 and hashed
%s %llu bytes into %lld chunks, stored %lld chunks (%lld bytes) in %6.4f seconds (%8.4f MB/sec )
Average chunk size: %llu.%llu
Average chunk size: 0 (0 chunks)
chunk store database corruption: simulating corruption in sqlite3_open_v2
chunk store database corruption: simulating corruption in sqlite3_step
chunk store database corruption: simulating corruption in sqlite3_prepare_v2
chunk store database corruption: simulating corruption in sqlite3_exec
chunk store database corruption: initializing with probability %d
CSChunkDigester_Verify succeeded by chunk digest and expected chunk digest not equal
com.apple.DataObjectSaltV2
CKFileSignatureGeneratorV2Finish
CKFileSignatureGeneratorV2.c
NULL != CKFileDigestResultsFileVerificationKey(expectedFileDigestResults)
Parameter validation failed!
Failed to encrypt the IV
Encryption failed!
Decryption failed!
Error occurred while encrypting block during chaining mode. status = %d
v1 %sencrypted
CKChunkDigestResults
sig %s key %s len %lu
com.apple.chunkinglibrary.internal
com.apple.chunkinglibrary.sqlite
Attempted to call %s, but chunk store is %s
registry
not registry
Memory could not be allocated for the intended error
v1 %s
encrypted
unencrypted
kCKItemChunkLength
kCKItemChunkProfileConfigurationVersion
kCKItemChunkProfileConfigurationFileExtensionToProfileMap
kCKItemChunkProfileConfigurationDefaultProfilePolicy
adaptive_chunk_size
CSprofile.c
"Invalid chunk size" && sqlitePageSize
returning %u sections for "%s"
CK_CHUNK_DEFAULT
Using Rabin chunking on "%s" (CK_CHUNK_DEFAULT)
CK_FIXED_CHUNK
Using fixed size chunking on "%s" (CK_FIXED_CHUNK)
fixed size chunking requested with %llu bytes per chunk
createChunkProfile
0 && "unknown chunkListCacheType"
suffix_index_for_type_hint(typeHint:"%s", "%s") returned type:%d
profile_type_for_content("%s") returned type:%d
type:%d, typeHint:"%s"
profiler
section[%u/%u]: [%s] sz:%lld(0x%llx) [0x%llx-0x%llx), ap:0x%llx, cc:%u
uti:%@, tag:%@
class:%@, tag:%@
Unknown
requestedFixedChunkSize/%llu exceeds MAX_FIXED_LENGTH_CHUNK_SIZE/%llu
requestedFixedChunkSize/%llu below MIN_FIXED_LENGTH_CHUNK_SIZE/%llu
requestedFixedChunkSize/%llu not large enough to accomodate file size %llu
fixedChunkSize set to %llu bytes
"%s" is a big file (%lld bytes!), using fixed chunker
"%s" is just right to be Rabin chunked (%lld bytes)
profile_type_for_content
readCtx
qt sz:0x%x, has_type:%d, "%c%c%c%c"
create_custom_fixed_profile
"Invalid chunk size" && fixedChunkSize
too many records, num_recs:0x%x, max_recs:0x%x
failed to read zip-dir-rec at %u/%u
bogus looking zip-dir-rec at %u (0x%08x != 0x%08x)
bogus field_len 0x%x at 0x%llx, expected_len: 0x%x
failed to read zip64-extra-field at 0x%llx
bogus looking zip_foffset/zip_size on zip-dir-rec at %u (foffset:0x%llx size:0x%llx dataSize:0x%llx)
first entry must begin at location zero!
failed to read the zip-local-header at %u/0x%llx
zip-local-header %u @ 0x%llx looks corrupt (0x%08x != 0x%08x)
entries %u and %u overlap
%u >= %u, last_rabin:%d, last_rabin_base:0x%llx
locate_central_dir
search_eocd || search_loc64
failed to read zip-end-of-central-dir at 0x%llx
zip-end-of-central-dir, offset:0x%x, size:0x%x, recs:%u/%u
failed to read zip64-end-of-central-dir-locator at 0x%llx
zip64-end-of-central-dir-locator, zip64-end-of-central-dir-offset:0x%llx
failed to read zip64-end-of-central-dir at 0x%llx
zip64-end-of-central-dir, central-dir-offset:0x%llx, central-dir-size:0x%llx, num-central-dir-recs:%llu/%llu
didn't find the zip-central-dir-end for "%s"
didn't find the zip64-central-dir-end for "%s"
failed to read extra-field-hdr at 0x%llx
ID3v2 tag present at 0x%llx, v2_tag_size:0x%x
ID3v2 tag larger than the file, v2_tag_size:0x%x, dataSize:0x%llx
ID3v1 tag %s at 0x%llx
missing
create_mp3_profile
has_v2_tag
decode_synchsize
result <= 0xfffffff
CKProfileResultsCreate
CKProfileResults.c
objectPtr
kCKProfileTypeNone
kCKProfileTypeFixed
kCKProfileTypeRabin
kCKProfileTypeZip
kCKProfileTypeMP3
kCKProfileTypeQuicktime
kCKProfileTypeCustomFixed
kCKProfileTypeSQLiteDatabaseWAL
kCKProfileTypeSQLiteDatabase
kCKProfileTypeSQLiteDatabaseS
kCKProfileTypeUnknown
kCKDefaultProfilePolicyTypeInferred
kCKDefaultProfilePolicyTypeFixedLength
kCKDefaultProfilePolicyTypeUnknown
CKProfileResults
type:%s configVersion:%@ ext:%@ isDefault:%s
(null)
CKChunkSignatureGeneratorV1Finish
CKChunkSignatureGeneratorV1.c
object->chunkDigestResults
sig %s len %llu
%{public}@
sqlite3_open_v2 failed, dbname:"%s": %d %s
sqlite3_open_v2 failed, dbname:"%s": %s
failed to set locking_mode on db (%s)
failed to set page_size pragma on db (%s)
failed to set journal mode (%s)
failed to set wal_autocheckpoint (%s)
ver=%llu/%llu
odd database version %llu
UPDATE CSDatabaseVersion SET version failed: %s
sqlite3 error: %d %s
rc:%d
sqlite3_close failed: %s
migrating chunk store from version %llu to version %llu
attempting to migrate chunk store from version %llu to version %llu, which is not supported
sqlite3 error on migration: %d %s
fsopen(%d,%llu,0x%0llx): unimplemented; returning -1
could not fsync null storage file in %s
could not fsync closed storage file %llu in %s
fsync for storage file %llu in %s failed: %s (%d)
fsync for storage file %llu parent directory in %s failed: %s (%d)
failed to checkpoint WAL in %s: %s
Bad chunk offset/size in "%s", ctRowId:%llu, chunkOffset:0x%llx, chunkSize:0x%llx (%s violated)
Bad chunk offset/size, ctRowId:%llu, dstOffset:0x%llx, chunkSize:0x%llx (%s violated)
Bad chunk value(s): o:0x%llx, sz:0x%x (%s violated)
chunk store database corruption: unable to unlink %{public}s (%s): %{public}s (%d)
chunk store database corruption: unlinked %{public}s (%s)
Automatic first aid found some missing chunks and made the database consistent again: %@
Automatic first aid failed: %@
Validating storage file with ft_rowid %llu
Purging invalid storage file with ft_rowid %llu
Update appeared to change %lld rows when marking storage file with ft_rowid %llu as missing
typeHint:%{public}s typeRequested:%{public}s typeUsed:%{public}s sectionCount:%llu default:%{public}s resolvedType:%{public}@ serverConfig:%{public}@
