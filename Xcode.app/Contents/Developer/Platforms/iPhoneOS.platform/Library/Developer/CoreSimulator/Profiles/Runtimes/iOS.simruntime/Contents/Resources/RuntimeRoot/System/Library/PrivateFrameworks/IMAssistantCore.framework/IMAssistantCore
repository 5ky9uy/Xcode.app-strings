@(#)PROGRAM:IMAssistantCore  PROJECT:IMAssistantCore-
INMessage %@
Conversation identifier: %@
Group name: %@
Sender: %@
Recipients (%@): %@
IMAssistantCore
Failed to initialize AVAudioPlayer: %@
Failed to set category and options on AVAudioSession: %@
Failed to setup AVAudioSession: %@
Completing confirmSendMessage with %@
v8@?0
Performing intent: %@
v16@?0@"INSendMessageIntentResponse"8
Send Message Intent: GroupName: %@
Send Message Intent: Recipients: %@
Send Message Intent: Conversation Identifier: %@
Will try to send a current location message.
Will try to send a Audio Message with attachment: %@
Will try to send a shared link for the URL at: %@
Will try to send files at the following locations: %@
Sending message to chat with identifier specified in intent. chat=%@
Using stored conversation identifier that was resolved during recipient resolution. conversationIdentifier=%@
Sending message to chat that has already been resolved. chat=%@
Could not find IMChat matching conversation identifier resolved during recipient resolution. Ignoring. conversationIdentifier=%@
Custom identifier not set, falling back to personHandle.value: %@
Could not send message; recipient had no usable handle: %@
Found existing chat with the recipients; sending
Could not find any existing chat matching addresses. Creating new chat. Addresses: %@
Could not send message; no messaging accounts available
Could not send message; an address could not be resolved to an IMHandle: %@
Failed to determine the prefferred sender identity, returning failure requiring app launch so the user can use the sim selection UI
Sending message to a new chat. Attempting to determine best sender identity.
@16@?0@"IMHandle"8
Could not determine preferred sender identity for handleIDs. This may mean that the user has conflicting sim preferences for these recipients.
Resolving Outgoing Message Type with Text (%ld)
Resolving Outgoing Message Type with Audio (%ld)
v16@?0@"NSArray"8
Will not use CRR to resolve recipients.
Resolve recipients with legacy resolution results: %@
Intent contains an attachment and no content. Returning notRequired for content.
Resolve content result: %@
Resolving speakableGroupName: %@ vocabID: %@
Intent contains a conversationIdentifier, %@, using that to resolve group name
Intent contains a speakableGroupName.vocabularyIdentifier, %@, using that to resolve group name
speakableGroupName contains %ld alternativeSpeakableMatches: %@
alternativeSpeakableMatch does not contain a vocabularyIdentifier, ignoring. alternativeSpeakableMatch: %@
Intent contains neither a conversationID nor a spoken group name. Returning notRequired for resolveSpeakableGroupName.
Intent contains one unique conversationIdentifier: %@ chatIdentifier: %@
Chat resolved via conversation identifier is a business chat. Not resolving speakableGroupName to the business name, because the business name will be included in the recipients. Returning notRequired for speakableGroupName.
Found a named chat matching chatIdentifier, %@ with name "%@".
Returning unsupported because the chat group (%@) contains non-allowlisted participants and isn't allowed by downtime.
Returning success with name "%@".
Could not find a name for the chat with the chatIdentifier %@, ignoring.
Could not find chat with the chatIdentifier %@, ignoring
Intent contains %ld unique conversationIdentifiers: %@
Could not find chat with chatIdentifier %@, ignoring
%ld chats match chatIdentifiers. Chats: %@
Returning speakableGroupName resolution result: %@
Intent contains no chat guids.
Intent does not contain a spoken group name. Returning notRequired for resolveSpeakableGroupName.
Attempting to resolve via speakableGroupName.spokenPhrase = "%@"
Found chat name "%@" matching chat: %@
Returning unsupported because the chat group contains non-allowlisted participants and isn't allowed by downtime.
Using chat name "%@" resolved from matching chat: %@
Could not determine chat name from only matching chat. Returning unsupported/notFound. Matching chat: %@
Found %ld chats matching requested spoken phrase. Producing disambiguation options. matchingChats: %@
Could not find any chats matching requested spokenPhrase. Returning unsupported (a.k.a. notFound)
Resolved group name result: %@
Have not determined authorization to send current location message for bundle %@. Returning failure, prompting user to determine authorization for the bundle.
Authorization to send current location has been explicitly disabled for bundle %@. Returning failure, prompting user to determine authorization for the bundle.
Authorization to get precise location has been disabled for bundle %@. Returning failure, prompting user to determine authorization for the bundle.
Setting expressiveSendStyleID on message: %@ 
Setting source application ID on message: %@
Setting IDS identifier on IMMessage: %@ 
Suppressing send sound for message GUID: %@ 
refreshServiceForSending completed
canSendMessage check succeeded
message send completed
canSendMessage check failed for chat: %@
Image sensitivity analysis error: '%@'
Image sensisitivty %d.
v20@?0B8@"NSError"12
v12@?0B8
Determining location authorization status.
Authorized to send current location message. Sending.
com.apple.MobileSMS.MessagesAssistantExtension
v16@?0@"IMMessage"8
Not authorized to send current location message.
Unable to build a PHAsset message as requested. Returning failure.
Unable to send a PHAsset message as requested. Returning failure.
Returning %@ response.
v24@?0q8@"NSArray"16
Send Messages Intent: Failed. Downtime enabled, chat contained non-allowlisted handles: %@
Send Messages Intent: Failed. Will not send to chat in Un-Joined state: %@
Send Messages Intent: Invoked with an empty message request.
Using sourceApplicationID %@ for executionContext %ld.
Attempting to send a link
Resolved persons from relevant chats contained an inconsistent number of recipients, ignoring relevant chats.
v32@?0@"INPerson"8Q16^B24
Could not resolve recipients; no messaging account enabled
Attempting to resolve by speakableGroupName.vocabularyIdentifier: %@
A speakableGroupName.vocabularyIdentifier matching a valid chat was provided, extracting recipients from chat and attaching to intent for use in Siri dialog.
Returning unsupported because the chat group with speakableGroupName (%@) contains non-allowlisted participants and isn't allowed by downtime.
Will return unsupported with an unknown reason, error: %@
Returning unsupported for recipient because the resolved chat is read-only. Using INSendMessageRecipientUnsupportedReasonMessagingServiceNotEnabledForRecipient
Returning success with recipients resolved from speakableGroupName: %@ recipients: %@
Recipients could not be resolved from speakableGroupName.vocabularyIdentifier: %@. Ignoring identifier and continuing with person resolution.
No chat could be found matching speakableGroupName.vocabularyIdentifier: %@. Ignoring identifier and continuing with person resolution.
Attempting to resolve by conversationIdentifier: %@
A conversationIdentifier matching a valid chat was provided, extracting recipients from chat and attaching to intent for use in Siri dialog.
Returning unsupported because the chat group w/ conversation identifier(%@) contains non-allowlisted participants and isn't allowed by downtime.
Returning success with recipients resolved from chat: %@
Recipients could not be resolved from conversationIdentifier: %@. Ignoring conversation identifier and continuing with person resolution.
No chat could be found matching conversationIdentifier: %@. Ignoring conversation identifier and continuing with person resolution.
No recipients are required if a group name is present
No recipients provided to resolve, returning needsValue.
Resolving recipients with CRR: %@
Neither a group name nor a conversation identifier were provided, attempting to resolve by recipients.
This recipient is already fully resolved: %@
Resolving %@
CRR offered no suggestions for %@
Error extracting a scoredPerson from %@
CRR resolved to a confident match: %@
CRR resolved to needs confirmation: %@
CRR resolved to needs disambiguation: %@
Resolving recipients without CRR: %@
@16@?0@"INPerson"8
All recipients already have a resolved handle, validating screentime status.
Returning unsupported because the preresolved handles contain a non-screentime allowlisted recipient.
Returning success with pre-resolved handles.
Recipient contains neither siriMatches nor a personHandle.value, returning unsupported/notFound for recipient: %@
Found %ld matching handles on contact %@ for recipient: %@
Using %ld matching handles from contacts: %@
Recipient contains both an explicit personHandle.value and contact identifiers, attempting to extract mathcing handle from contacts. Recipient: %@
Handle %@ was not found on any of the contacts, using handle without a contact
Using %ld matching manually dictated handles: %@
Using %ld matching business chat handle: %@
Found no handles matching recipient: %@
Skipping existing chat search because we have pre resolved siriMatch results.
Skipping existing chat search as at least one of the recipients has no valid handles.
Attempting to find an existing chat with the desired recipients
Returning unsupported because one of the intended recipient handles is not allowed by downtime.
Found an existing chat matching recipients. Storing conversationIdentifier=%@
Multiple existing recent chats match the requested participant(s).
Returning disambiguation result: %@
Could not construct disambiguation result. Ignoring relevant chats.
Did not find any existing chat matching request.
Beginning contact resolution for recipient: %@
found multiple resolved siri matches. disambiguating: %@
found one resolved siri match with a valid handle. picking it: %@
found one resolved siri match, but no handle. falling back to legacy contact resolution.
did not find any siri matches. falling back to legacy contact resolution.
Already have a resolved contact and handle for this recipient. Returning success: %@
@24@?0@"INPerson"8Q16
Could not resolve a single contact for each recipient, returning resolution result: %@
Beginning handle resolution for recipient: %@
Intent already has a resolved handle for this recipient. Returning success: %@
A handle was already resolved as part of contact resolution (e.g. contacts with duplicate names that only contain one valid handle). Returning success with the resolved handle: %@
More than one matching contact exists after person resolution. Person resolution should have resolved the recipients down to a single contact. Something has gone horribly wrong. Picking the first one and continuing with handle resolution.
Contacts: %@
Returning unsupported because chat is blocked for downtime.
Completed handle resolution with results: %@
Validating resolved handles for screentime
Handles are not allowed by screentime: %@.
Handles are allowed by screentime
Attempting to resolve ambiguous handle to contact using the Contacts Framework.
Could not resolve ambiguous handle to contact using the Contacts Framework.
%ld contacts matched chat participant %@. Matching identifiers: %@. Using contact: %@
%ld contacts have the name "%@". Will use handles for these contacts, rather than just name, when disambiguating. Contacts: %@
v32@?0@"NSString"8@"NSMutableArray"16^B24
Attempting to find a matching chat by examining %ld recent chats.
v32@?0@"INPerson"8@"IMHandle"16@"IMAssistantHandleFromContact"24
Beginning evaluation of participants in chat %@.
Found a chat participant handle: %@ matching requested handle: %@
Did not find any matching chat participant for requested person %@
Found a matching existing chat: %@
Found %ld contacts matching handle: %@. Using contact identifier %@ from list %@. Contact: %@
Did not find any contacts matching manually requested handle: %@
Could not find a valid 1-1 relationship between chat participants and requested recipients. Ending evaluation of chat %@.
Matching chat participant not found for all recipients. Ending evaluation of chat %@.
Did not find a matching existing chat.
Next chat is beyond maximum relevant time interval. Ending evaluation of relevant chats. TimeSinceLastMessageInMatchingChat: %ld s, TimeSinceLastMessageInNextChat: %ld s, MaximumRelevantTimeInterval: %ld s
B24@?0@"IMAssistantChatParticipant"8@"NSDictionary"16
Manually specified handle. Ready to proceed to handle resolution with person: %@
Multiple contacts match recipient. Contacts: %@
Contact has the same name as another possible disambiguation option, including handles in disambiguation for contact: %@
Could not create INPerson from contant %@ and handle %@
Contacts matching the requested recipient have identical names, but one of the contacts has no valid phone numbers or email addreses for this request. Ignoring that contact, as including it in the list of disambiguation options would make it indistinguishable from the other valid options with the exact same name. Contact: %@
There was more than one contact matching the requested recipient but those contacts had the exact same name, and none of those contacts had a valid handle matching the requested type. We won't offer disambiguation of the contacts, because none of the choices would lead to a successful resolution and the options would be indistinguishable and confusing.
If the user had specified a different label/handle-type, valid options would have been available, returning unsupportedReason = NoHandleForLabel.
None of the ambiguous contacts had any valid handles. Returning unsupportedReason = NoValidHandle.
There was more than one contact matching the requested recipient AND those contacts had the exact same name, but only one of those contacts had a valid handle matching the request. Using that handle.
Requesting disambiguation of %ld options: %@
Only one contact matches recipient. Ready to proceed to handle resolution for contact: %@
Could not find any matching handles, and contact has no phone numbers or email addresses, returning unsupported.
Could not find any handles matching the requested label/handle-type, returning unsupported with suggested alternatives.
Asking user to disambiguate among the matching handles.
@16@?0@"IMAssistantHandleFromContact"8
Only found one handle matching request, returning success for person.
The user explicitly requested a handle, e.g. 'Send a message to 555-555-5555', look up the contact to include in dialog.
Found %ld contacts matching manually requested person handle: %@.
Using contact identifier %@
Found contact %@
Resolved manually dictated recipient: %@
Could not create an IMHandle for handleID: %@
Intent contains an current location attachment: %@
Intent contains an audio message request, looking for the attachment
Intent contains a audioFileAttachment: %@
Checking the intent for a shared link.
There was an error unarchiving the attachment to LPLinkMetadata: %@
SDK doesn't support API.
We have a shared link and metadata, but there is a URL mismatch. Clearing out the metadata to avoid attaching the wrong metadata.
Checking the intent for a file attachment.
Checking the intent for a PHAsset attachment.
Intent contains a conversation identifier. Using that to find an existing chat. conversationIdentifier=%@
Intent contains a group name vocabulary identifier. Using that to find an existing chat. vocabularyIdentifier=%@ chatIdentifier=%@
Could not find a chat with the vocabularyIdentifier %@ chatIdentifier %@, ignoring
speakableGroupName does not contain a vocabularyIdentifier. speakableGroupName=%@
Could not find a chat with the conversationIdentifier %@, ignoring.
Could not find a chat with nil or empty conversationIdentifier, ignoring
Could not find a name for chat, ignoring. chat: %@, isGroupChat: %@, isBusinessChat: %@, displayName: %@
Could not construct disambiguation option for chat: %@, isGroupChat: %@, displayName: %@. Ignoring.
q24@?0@"IMChat"8@"IMChat"16
%ld chats have the name "%@". Presenting disambiguation of chats with the same name is confusing, so using the most recent one, %@.
Only one disambiguation option remains, returning success with resolved name: %@
Asking user to disambiguate among %ld disambiguation options: %@
No disambiguation options remain. Returning unsupported (a.k.a. notFound)
com.apple.MobileSMS
SuppressingSendSoundMessageGUIDs
Provided localFileAttachmentURL is nil
Building a file transfer message based on a file at %@
The message's file transfer guids are: %@
Error, url is not a fileURL: %@
Failed to copy the file from %@ into the MessagesAssistantExtension Sandbox. Error: %@
Building a PHAsset transfer message based on the PHAsset with id: %@
The requested PHAsset has adjustments, we will use the edited resources.
The requested PHAsset does not have adjustments, we will use the original resources.
The requested PHAsset has %ld resources
PHAsset has an asset resource of type: %ld
The requested PHAsset attachment is a live photo.
Live photo photo write completed.
Failed to write the photo (%@) into the MessagesAssistantExtension Sandbox. Error: %@
v16@?0@"NSError"8
Live photo video write completed.
Failed to write the live photo video compliment (%@) into the MessagesAssistantExtension Sandbox. Error: %@
Attempting to transfer a live photo with photo URL %@ and video URL %@
The requested PHAsset attachment is a photo.
Photo write completed.
The requested PHAsset attachment is a video.
Video write completed.
Failed to write the video (%@) into the MessagesAssistantExtension Sandbox. Error: %@
B16@?0@"IMChat"8
Could not determine person handle label or type because [IMHandle normalizedID] was neither a phone number nor an email address: %@
%@ is an invalid personHandle.value.
com.apple.Messages
SendMessageIntent
SearchForMessageIntent
v16@?0@"NSString"8
Using cached business name: %@
Business name lookup beginning.
Business name lookup timed out
Business name lookup completed with name: %@
Normalized handle %@
@16@?0@8
resolveRecipients called with intent: %@
Calling resolveRecipients completion handler with result: %@
v24@?0@"NSArray"8@"NSArray"16
resolveSenders called with intent: %@
Calling resolveSenders completion handler with result: %@
resolveAttributes called with intent: %@
intent with read options lacks message identifiers: %@
intent with read options lacks dateTimeRange: %@
Calling resolveAttributes completion handler with result: %@
resolveSpeakableGroupNames called with intent: %@
Calling resolveSpeakableGroupNames completion handler with results: %@
Calling resolveSpeakableGroupNames completion handler with empty results
Could not search for messages; no messaging accounts available
Intent with %u identifiers, looking at both unread and read messages
Intent with %u notificationIdentifiers, looking at only unread messages from those threads
v32@?0@"NSArray"8@"NSArray"16@"NSArray"24
Returning success response with %ld messages
Message search returned nil results (e.g. an exception was caught). Returning intent failure response.
IMAssistantMessageSearchHandler: Failed to resolve recipients: %@
IMAssistantMessageSearchHandler: Failed to resolve senders: %@
resolveSpeakableGroupName for name:"%@" vocabularyIdentifier:"%@" matches %ld chats: %@
Resolve chatName: %@ and vocabularyIdentifier: %@
Chat search by name resolved to a chat without a displayName. Passing through the input name instead.
downtime suppressing resolve for chatName: %@ and vocabularyIdentifier: %@
Using input as resolved value.
No matching chats were found, returning unsupported/notFound for resolveSpeakableGroupNames
Handling INUnsendMessagesIntent: %@
Exptected at least one message matching the message identifier %@
No chats found for message identifiers
ScreenTime or DownTime restriction is in-place, returning
Will not send to chat in Un-Joined state: %@
Message has more than one part, requiring app launch
Message type does not support retraction
Message is too old to be retracted
Messages from different senders cannot be retracted
Messages has been edited too many times
Messages is currently sending
Retracting message with identifier %@
Exptected at least one message matching the message identifiers %@
Searching for chat corresponding to conversation identifiers %@
Play audioURL: %@
Started playing audio
Failed to play audio
Could not find audioURL
v16@?0@"NSURL"8
Confirm intent: %@
Confirm intent completion audioURL: %@
Intent Extension initialized
Using %@ %p for intent %@
Received an unknown intent: %@
Intent does not have an intentIdentifier set. Creating new handler.
Found existing handler for intent identifier: %@.
Existing handler not found for intent identifier: %@. Creating new handler.
Updating recently used intent handler cache for an intent with no intentIdentifier.
<IMAssistantChatParticipant %p> {IMHandle: %@, handleFromContact: %@}
__kIMAssistantContinuityHandlesKey
__kIMAssistantContinuityChatsKey
__kIMAssistantMessageHandlerErrorDomain
Person resolved to %ld contacts via siriMatches. Person: %@, Contacts: %@
Person contained siriMatches that did not resolve to any contacts. Person: %@
Person to resolve contains no siriMatches. Person: %@
Error fetching unified contact identifier for contact with identifier %@ from contact store. Error: %@
Error fetching contact with identifier %@ from contact store. Error: %@
Error fetching %@ from contact store: %@
Could not find person %@ in contact store with predicate
Returning empty contactID array for nil handleID
Returning empty contactID array for handleID that is a businessID: %@
Could not create CNPhoneNumber from handle ID: %@
Could not create contact search predicate for handle ID that is neither a phone number or an email address: %@
Error fetching contact identifiers matching handle %@ from contact store: %@
Could not search for contacts matching handle because a predicate could not be consrtuced from handle ID: %@
Error fetching me contact: %@
Could not find me contact identifier
%ld contacts matched handle %@. Matching identifiers: %@. Using contact: %@
Connecting to IMDaemonController
IMDaemonController blockUntilConnected completed in %.4f seconds. Connected: %@
Not triggering IMDaemonController reconnect. Connection was established %.4f seconds ago.
Calling IMSystemMonitor _forceSuspended and _forceResumed
IMSystemMonitor _forceResumed completed
Failed to allocate contact store
Contact store change notification received.
Handling INPlayMessageSoundIntent: %@
Calling completion with INPlayMessageSoundIntentResponse: %@
Playing send sounds for messageGUID: %@
No effect for effect identifier: %@
@"NSString"16@?0@"LPImageMetadata"8
@"NSString"16@?0@"LPIconMetadata"8
LinkPresentation
LPiTunesMediaSongMetadata
LPiTunesMediaAlbumMetadata
LPiTunesMediaMusicVideoMetadata
LPiTunesMediaArtistMetadata
LPiTunesMediaPlaylistMetadata
LPiTunesMediaRadioMetadata
LPiTunesMediaSoftwareMetadata
LPiTunesMediaBookMetadata
LPiTunesMediaAudioBookMetadata
LPiTunesMediaPodcastEpisodeMetadata
LPiTunesMediaPodcastMetadata
LPiTunesMediaTVEpisodeMetadata
LPiTunesMediaTVSeasonMetadata
LPiTunesMediaMovieMetadata
LPiTunesMediaMovieBundleMetadata
LPAppleTVMetadata
LPAppleMusicTVShowMetadata
Could not create INSpeakableString, chat did not have a display name
@"INPerson"16@?0@"IMSPIHandle"8
Link Metadata: %@
Message %@ has a reference to multi-part message %@. Reference should be to a single part, e.g. a tapback on a photo in a group of photos, but we do not have the infomration to resolve which part. Naively choosing the first part.
Message %@ has a reference to a message %@ that could not be converted to an INMessage.
Could not find attachment matching attachmentGUID %@ for messagePart %ld of message %@
Skipping empty text message part %ld of %@
Aggregating message part %ld of %@ to previous INMessage
numberOfAttachments
Unable to convert message part %ld of %@ to INMessage
v32@?0@"IMMessagePartDescriptor"8Q16^B24
Message %@ converted to %ld INMessages
Cannot map balloon plugin message to INMessageType. Using unspecified.
<IMAssistantRelevantChatMatchingRecipients %p> {Chat: %@, ResolvedPersons: %@}
Handling SetMessageAttribute intent: %@
Message marked as read: %@ success: %@
Message marked as read: %@
Calling completion with response: %@
Should not be able to create this object with an invalid handle type
Should not be able to create this object with an empty handleID
Should not be able to create this object with a none or invalid handle type
Detected an excluded phone number in the requested handle, doing a strict string comparison insted of a phone number match.
<IMAssistantHandleFromContact %p> {type: Phone, labeledPhoneNumber: %@ conact: %@}
<IMAssistantHandleFromContact %p> {type: Email, labeledEmailAddress: %@ conact: %@}
<IMAssistantHandleFromContact %p> {type: Business, businessID: %@ conact: %@}
Could not create IMHandle with phone number: %@ from contact: %@
Could not create IMHandle with email address: %@ from contact: %@
Could not create IMHandle with phone number: %@ account: %@ from contact: %@ 
Could not create IMHandle with email address: %@ account: %@ from contact: %@
Resolving persons: %@ for intent: %@
Resolving person: %@
Successfully resolved person to %ld contact identifiers: %@
Successfully resolved person to handle: %@
Could not resolve person %@ for intent %@
IMAssistantIMSPIQueue
Found %ld chat guids: %@, matching chat: %@
Calling IMSPIQueryMessagesWithChatIdentifiers services: %@, chatIdentifiers: %@, onlyUnread: %d, limit: %ld
IMSPIQueryMessagesWithChatIdentifiers failed
Could not construct chat GUID from handleID: %@ service: %@
Could not extract handleID: %@ or service: %@ from IMHandle %@
Could not parse identifier or service from chat GUID: %@
Performing query for messages from handles: %@ services: %@ onlyUnread: %d, limit: %ld
IMSPIQueryMessagesWithIDsWithOnlyUnread failed
IMSPIQueryUnreadMessages failed
IMSPIQueryMessagesWithGUIDs failed
IMSPIQueryMessagesWithRowIDs failed
B24@?0@"NSArray"8@"NSDictionary"16
B24@?0@"IMAssistantMessageSearchChatParticipant"8@"NSDictionary"16
 AND 
self LIKE[cd] %@
*%@*
@"NSString"16@?0@"IMHandle"8
Found %ld chats matching participants. Chats: %@
Found exsting chat matching conversationIdentifier: %@ chatIdentifier: %@
Could not find chat matching conversationIdentifier: %@ chatIdentifier: %@
@16@?0@"NSString"8
Found %ld chats matching chat names:%@ vocabularyIdentifiers:%@ chats:%@
Searching for messages with attributes onlyUnreadMessages: %@ | onlyReadMessages %@
No start date specified for date filtering, using open ended start date.
No end date specified for date filtering, using open ended end date.
Filtering the search results to date time interval: [%@, %@]
Filter block executed with %ld messages.
Message filtered because it did not pass downtime allowlist check: %@
Message filtered because it is from a blackholed chat: %@
Message filtered because it did not fall within the specified date interval: %@
Message filtered due to not being an unread message: %@
Message filtered due to not being a read message: %@
Message filtered because it did not pass the contents predicate: %@
Message filtered because it did not pass the senders predicate: %@
Message filtered because it did not pass the recipients predicate: %@
Message passed filter: %@
Filter block completed with %ld messages.
@"NSArray"16@?0@"NSArray"8
Conversion block executed with %ld messages.
Finished converting message: %@
Performing search via message identifiers search, then filter.
Performing search for messages matching the notification identifiers, then filter.
Performing search via chat name search, then filter.
Failed to find any chats matching chatNames: %@
Performing search via chat search, then filter.
Failed to find any chats matching conversation identifiers: %@
Performing search via recipients search, then filter.
Failed to find chats containing all specified persons (recipients + senders) during search: %@
Performing search via senders search, then filter.
Performing search via unread search, then filter.
Performing search via examining all chats, then filter.
Could not find chatIdentifier %@ in chat registry, looking up IMSPIChat to determine blackhole status.
Determined message %@ from chat %@ isBlackholed=%d
x-apple-sms:guid=
Looking up %ld messages with IMSPIQueryMessagesWithRowIDs
@"NSNumber"16@?0@"NSString"8
Looking up %ld messages with IMSPIQueryMessagesWithGUIDs
Could not canonicalize handle "%@" because it is neither a phone number nor an email address.
confirmSendMessageIntent
handleSendMessageIntent
resolveRecipientsForSendMessage
resolveContentForSendMessage
resolveSpeakableGroupNameForSendMessage
sendMessageWithText
resolveRecipientsFromGroup
resolveRecipientsFromConversationID
resolvedRecipientsFromChat
duplicateNameCheck
examineRelevantChat
resolveRecipientsFromRelevantChat
mapRecipientsToParticipants
contactResolutionResultForContacts
handleResolutionResultForContact
resolveRecipientsForSearchForMessages
resolveSendersForSearchForMessages
resolveAttributesForSearchForMessages
resolveSpeakableGroupNamesForSearchForMessages
handleSearchForMessages
contactsMatchingPerson
unifiedContactIdentifierForContactIdentifier
contactWithIdentifier
contactsMatchingPredicate
contactIdentifiersMatchingHandleID
meContactIdentifier
personFromSPIHandle
imDaemonControllerConnection
imSystemMonitorSuspendAndResume
screentimeAllowedToShowChat
screentimeAllowedToShowConversationWithHandleIDs
INMessagesForSPIMessage
INMessageForOutgoingIMMessage
handleSetMessageAttributeIntent
queryMessagesWithChatIdentifiers
queryMessagesWithIDs
queryUnreadMessages
queryMessagesWithGUIDs
queryMessagesWithRowIDs
filterMessageScreentimeCheck
filterIndividualMessage
filterMessages
convertMessages
IMAssistantCore
IMAssistantAudioPlayer
AVAudioPlayerDelegate
NSObject
IMAssistantMessageAttributeOptions
IMAssistantURLWithMetadata
IMAssistantMessageSendHandler
INSendMessageIntentHandling
IMAssistantMessageSendHandlerDefaultDelegate
IMAssistantMessageSendHandlerDelegate
IMAssistantMessageSearchHandler
INSearchForMessagesIntentHandling
IMAssistantUnsendMessagesHandler
INUnsendMessagesIntentHandling
IMAssistantContactsDataSource
IMAssistantMessagePlayAudioHandler
IMAssistantAudioPlayerDelegate
INPlayAudioMessageIntentHandling
IMAssistantIntentHandler
IMAssistantChatParticipant
IMAssistantMessageHandler
IMAssistantINMessageConverterPersonProvider
IMAssistantIdentifiableIntentHandler
IMAssistantChatDataSource
IMAssistantAccountDefaultDataSource
IMAssistantAccountDataSource
IMAssistantCoreTelephonySubscriptionsDefaultDataSource
IMAssistantCoreTelephonySubscriptionsDataSource
IMAssistantMessageHandlerDefaultDataSource
IMAssistantMessageHandlerDataSource
IMAssistantMessagePlayMessageSoundHandler
INPlayMessageSoundIntentHandling
IMAssistantCommSafetyManager
IMAssistantINMessageConverter
IMAssistantRelevantChatMatchingRecipients
IMAssistantMessageSetAttributeHandler
INSetMessageAttributeIntentHandling
IMAssistantHandleFromContact
IMAssistantMessageSearchChatParticipant
IMAssistantMessageQueryHandler
IMAssistantMessageReadAttributeSanitizer
IMAssistantMessageAttributeSanitizer
T@"IMCommSafetyRequestsManager",R,N,V_commSafetyRequestsManager
AuxGUIDFromFileTransferGUID:
T@"NSArray",R,N
IMAssistantIMSPIQueue
INMessagesForSPIMessage:personProvider:
_handle
SPIQueryMessagesForChats:onlyUnread:limit:completion:
account
SPIQueryMessagesForSenders:onlyUnread:limit:completion:
canSendMessage:
SPIQueryMessagesWithRowIDs:completion:
contact
T#,R
content
T@"<IMAssistantChatDataSource>",R,N
curator
T@"<IMAssistantContactsDataSource>",R,N
excludedNumbers
T@"<IMAssistantFileManager>",R,N
fileURL
T@"<IMAssistantMessageHandlerDataSource>",&,N,V_messageHandlerDataSource
iMessageService
T@"<IMFileTransferCenter>",R,N
initWithString:
T@"CNContact",R,N,V_contact
localIdentifier
T@"CNLabeledValue",R,N,V_labeledEmailAddress
makeIMMessageFromSharedLinkURL:
T@"IMAssistantHandleFromContact",R,N,V_handleFromContact
phAsset
T@"IMHandle",R,N,V_imHandle
release
T@"NSArray",&,N,V_keysToFetch
senders
T@"NSArray",R,C,N,V_contactIdentifiers
setKeysToFetch:
T@"NSString",C,N,V_intentIdentifier
setUrl:
T@"NSString",R,C,N
storeIdentifier
T@"NSString",R,N
synchronousReplyingRemoteDaemon
T@"NSString",R,N,V_displayID
.cxx_destruct
T@"IMCommSafetySettingsManager",R,N,V_commSafetySettingsManager
T@"NSCache",R,N
INMessageForOutgoingIMMessage:toChat:messageType:personProvider:
_forceSuspended
INPersonsForSPIHandles:personProvider:
_player
SPIQueryMessagesForChatsWithIdentifiers:services:onlyUnread:limit:completion:
address
SPIQueryMessagesWithGUIDs:completion:
conformsToType:
SPIQueryUnreadMessages:completion:
containsObject:
T@"<IMAssistantAccountDataSource>",R,N
creator
T@"<IMAssistantCommSafetyManager>",R,N
currentLocation
T@"<IMAssistantCoreTelephonySubscriptionsDataSource>",R,N
existingChatWithChatIdentifier:
T@"<IMAssistantMessageAttributeSanitizer>",&,N,V_attributeSanitizer
fileUrl
T@"<IMAssistantMessageSendHandlerDelegate>",&,N,V_messageSendHandlerDelegate
imHandleWithID:
T@"<IMLocationManager>",R,N
isProxy
T@"CNContactStore",&,N,V_contactStore
locationAuthorizationDetermined
T@"CNLabeledValue",R,N,V_labeledPhoneNumber
messagePartBody
T@"IMChat",&,N,V_chat
placeholderName
T@"LPLinkMetadata",&,N,V_metadata
resolvedPersons
T@"NSArray",C,N,V_resolvedPersons
service
T@"NSObject<OS_dispatch_queue>",R,N
setPhonemeData:
T@"NSString",R,C
spiChatWithQOS:
T@"NSString",R,C,N,V_handle
summary
T@"NSString",R,N,V_businessID
T@"NSString",R,N,V_identifier
T@"NSURL",&,N,V_url
TB,N,V_didRegisterForContactStoreChangeNotifications
TB,R,N
TB,R,N,V_isMe
TQ,R
TQ,R,N,V_attributes
Tq,R,N
Tq,R,N,V_handleType
__INMessageLinkMetadataForLPLinkMetadata:
__INSpeakableStringForChat:
__INSpeakableStringForMessage:
__imArrayByApplyingBlock:
__imArrayByFilteringWithBlock:
__im_assistant_allContactIdentifiers
__im_assistant_allIMHandles
__im_assistant_allValidPersonOptionsWithAccountDataSource:
__im_assistant_arrayByApplyingBlockWithIndex:
__im_assistant_bestMessagingAccount
__im_assistant_displayNameForContact:displayFormattedHandle:normalizedHandle:
__im_assistant_emailAddressesMatchingLabel:
__im_assistant_extractIntentHandleLabelAndTypeFromContact:forNormalizedID:
__im_assistant_handleType
__im_assistant_handleTypeForString:
__im_assistant_handlesMatchingHandleID:
__im_assistant_handlesMatchingRequestedHandleType:requestedHandleLabel:
__im_assistant_initAnonymousRecipientWithIMHandle:
__im_assistant_initForContactResolutionResultWithContact:type:label:
__im_assistant_initWithContact:displayFormattedHandle:normalizedHandle:type:label:
__im_assistant_initWithContact:imHandle:
__im_assistant_initWithContact:imHandle:type:label:
__im_assistant_initWithContact:unformattedPersonHandle:accountDataSource:
__im_assistant_initWithHandleFromContact:accountDataSource:
__im_assistant_matchingNormalizedHandlesForType:andLabel:forCountryCode:
__im_assistant_phoneNumbersMatchingLabel:
__im_dateWithCurrentServerTime
__im_messagePartIndexes
__im_messageTextByRemovingMessagePartIndex:
__im_personFromSPIHandle:contact:
__im_visitMessageParts:
__imcore__containsNonSuccess:
__imcore__isSuccess
_attributeSanitizer
_attributes
_audioPlayer
_businessID
_chat
_commSafetyRequestsManager
_commSafetySettingsManager
_completionHandler
_contact
_contactIdentifiers
_contactStore
_conversationIdentifierResolvedDuringRecipientResolution
_crossPlatformUnifiedMeContactWithKeysToFetch:error:
_delegate
_didRegisterForContactStoreChangeNotifications
_displayID
_executionContext
_forceResumed
_handleFromContact
_handleType
_identifier
_imHandle
_initWithDataSource:contactKeysToFetch:intentIdentifier:
_initWithPhoneNumber:emailAddress:businessID:handleType:contact:
_intentIdentifier
_isMe
_keysToFetch
_labeledEmailAddress
_labeledPhoneNumber
_messageHandlerDataSource
_messageSendHandlerDelegate
_metadata
_recentIntentHandlers
_resolvedPersons
_setBlocksConnectionAtResume:
_stringByRemovingMessagesControlCharactersFromString:
_stripFZIDPrefix
_url
absoluteString
accountDataSource
accounts
activeAudioPlayer
addListenerID:capabilities:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
addRetractedPartIndex:
album
allExistingChats
allGUIDsForChat:
allIMHandlesForHandle:
allKeysForObject:
allValues
allowedByScreenTime
allowedToShowConversationSync
allowedToShowConversationWithHandleIDs:sync:context:
alternativeSpeakableMatches
amount
appendString:
applicationCurrentlyLimited
arePreResolvedSiriMatchesEnabled
array
arrayByAddingObject:
arrayWithCapacity:
arrayWithObjects:count:
artist
assetResourcesForAsset:
attachments
attributeSanitizer
attributedText
attributes
audioMessageFile
audioPlayerBeginInterruption:
audioPlayerDecodeErrorDidOccur:error:
audioPlayerDidFinishPlaying:successfully:
audioPlayerEndInterruption:
audioPlayerEndInterruption:withFlags:
audioPlayerEndInterruption:withOptions:
author
autorelease
bestAccountForService:
bestSenderIdentityForChatWithHandleIDs:
blackholedChatsExist
blockUntilConnected
body
bundleId
businessID
businessNameForUID:updateHandler:
canSendLocationMessageWithLocationManager:withError:
chat
chatDataSource
chatForIMHandle:
chatForIMHandles:
chatIdentifier
chatParticipantForSPIHandle:
chatParticipantsForSPIHandles:
chatStyle
chatsContainingRequiredParticipants:
chatsForChatNames:
chatsForMessageIdentifiers:completion:
chatsWithConversationIdentifiers:
checkSensitivePhotos
class
cleanupAudioSession
cnContactWithKeys:
code
commSafetyDataSource
commSafetyRequestsManager
commSafetySettingsManager
commSafetyUIEnabled
compare:
compareChatByDate:
componentsForContact:
confirmPlayAudioMessage:completion:
confirmPlayMessageSound:completion:
confirmSearchForMessages:completion:
confirmSendMessage:completion:
confirmSetMessageAttribute:completion:
confirmUnsendMessages:completion:
confirmationRequiredWithPersonToConfirm:
conformsToProtocol:
connectToIMDaemonController
contactIdentifier
contactIdentifierToUnifiedContactIdentifierCache
contactIdentifiers
contactIdentifiersForParticipantsInChat:
contactIdentifiersMatchingHandle:
contactIdentifiersMatchingHandleID:
contactIdentifiersMatchingINPersonHandle:
contactIdentifiersMatchingSPIHandle:
contactResolutionResultForContacts:matchingRecipient:
contactStore
contactStoreDidChange:
contactWithIdentifier:
contactsDataSource
contactsMatchingINPerson:
contactsMatchingPredicate:forPerson:
contactsWithDuplicateNamesAmongContacts:
containsDate:
contents
conversationIdentifier
conversationIdentifiers
copy
coreTelephonySubscriptionsDataSource
count
countByEnumeratingWithState:objects:count:
countryCode
createAudioPlayerWithIdentifier:
currency
customIdentifier
data
date
dateForLastReadMessageInChat
dateTimeRange
debugDescription
debugLogString
defaultCenter
defaultManager
description
descriptorForRequiredKeysForStyle:
descriptorForUsedKeys
deviceHasMultipleSubscriptions
dictionaryWithCapacity:
dictionaryWithObjects:forKeys:count:
didRegisterForContactStoreChangeNotifications
disambiguationWithPeopleToDisambiguate:
disambiguationWithStringsToDisambiguate:
displayID
displayName
distantFuture
distantPast
domain
effect
eligibilityForEditType:messagePartIndex:
emailAddresses
endDateComponents
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
episodeName
errorWithDomain:code:userInfo:
evaluateWithObject:
exceptionWithName:reason:userInfo:
existingChatForAddresses:allowRetargeting:bestHandles:
existingHandlerForIntentIdentifier:
expressiveSendIdFromMessageEffectType:
expressiveSendStyleID
fetchAssetsWithLocalIdentifiers:options:
file
fileManagerDataSource
fileTransferCenterDataSource
fileTransferGUIDs
filterUsingPredicate:
findValidMappingOfRequestedRecipientToChatParticipantAmongMatches:
firstIndex
firstObject
forceTriggerResumeNotification
genre
getResourceValue:forKey:error:
groupName
guid
guidForNewOutgoingTransferWithLocalURL:
handle
handleFromContact
handleID
handleIDForSenderIdentity:
handlePlayAudioMessage:completion:
handlePlayMessageSound:completion:
handleResolutionResultForHandles:resolvedContactForAlternatives:recipient:
handleSearchForMessages:completion:
handleSendMessage:completion:
handleSetMessageAttribute:completion:
handleToContactIdentifierCache
handleType
handleUnsendMessages:completion:
handlerForIntent:
handlesAndServicesForChatGuids:handles:services:
handlesAndServicesForPersons:handles:services:
hasAdjustments
hasMessagingAccount
hasOriginatingDeviceIdsIdentifier
hasPrefix:
hash
iMessageEnabledForSenderLastAddressedHandle:simID:
icons
identifier
identifiers
imAssistantAudioPlayer:didUpdateState:
imHandle
im_copySecurityScopedResourceAtURL:toDestination:error:
im_stripCategoryLabel
im_temporaryDirectoryPathForFilename:
images
includeRead
includeUnread
indexOfObjectIdenticalTo:
init
initWithAddress:countryCode:isMe:
initWithAmount:currencyCode:
initWithArray:
initWithArray:copyItems:
initWithAttributeSanitizer:intentIdentifier:
initWithAttributes:
initWithAttributes:sanitizer:
initWithBusinessID:
initWithCNLabeledEmailAddress:contact:
initWithCNLabeledPhoneNumber:contact:
initWithCapacity:
initWithChat:resolvedPersons:
initWithCode:userActivity:
initWithCommSafetyRequestsManager:commSafetySettingsManager:
initWithContentsOfURL:error:
initWithDataSource:attributeSanitizer:intentIdentifier:
initWithDataSource:delegate:intentIdentifier:
initWithDataSource:intentIdentifier:
initWithDataSource:keysToFetch:intentIdentifier:
initWithDelegate:identifier:
initWithHandle:contactIdentifiers:isMe:
initWithIMHandle:handleFromContact:
initWithIdentifier:conversationIdentifier:content:dateSent:sender:recipients:groupName:dateMessageWasLastRead:numberOfAttachments:messageType:messageEffectType:referencedMessage:serviceName:
initWithIntentIdentifier:
initWithKeyOptions:valueOptions:capacity:
initWithLabel:value:
initWithObjects:
initWithPersonHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:
initWithSiteName:summary:title:itemType:originalURL:imageURLs:iconURLs:creator:linkMediaType:iTunesStoreIdentifier:iTunesStoreFrontIdentifier:songTitle:songArtist:songAlbum:albumName:albumArtist:musicVideoName:musicVideoArtist:artistName:artistGenre:playlistName:playlistCurator:radioName:radioCurator:softwareName:softwareGenre:softwarePlatform:bookName:bookAuthor:audioBookName:audioBookAuthor:audioBookNarrator:podcastName:podcastArtist:podcastEpisodeName:podcastEpisodePodcastName:podcastEpisodeArtist:podcastEpisodeReleaseDate:tvEpisodeEpisodeName:tvEpisodeSeasonName:tvEpisodeGenre:tvSeasonName:tvSeasonGenre:movieName:movieGenre:tvShowName:movieBundleName:movieBundleGenre:appleTvTitle:appleTvSubtitle:
initWithStartDate:endDate:
initWithString:attributes:
initWithStringValue:
initWithURL:metadata:
initWithValue:type:
initWithValue:type:label:
initWithVocabularyIdentifier:spokenPhrase:pronunciationHint:
insertObject:atIndex:
instantMessageWithText:flags:threadIdentifier:
instantMessageWithText:messageSubject:fileTransferGUIDs:flags:threadIdentifier:
intValue
integerValue
intentIdentifier
isBlackholed
isBusinessChat
isConnected
isContactLimitsFeatureEnabled
isEqual:
isEqualToString:
isFileURL
isGroupChat
isInternationalSpamFilteringEnabled
isKindOfClass:
isLikePhoneNumber:
isMainThread
isMe
isMemberOfChat
isMemberOfClass:
isModernXPCEnabled
isOperational
isOutgoing
isPhoneNumber:equivalentToExistingPhoneNumber:
isPlaying
isRead
isSensitiveFileAttachmentURLs:chat:completion:
isSensitiveImage:withChatID:completionHandler:
itemType
joinState
keyEnumerator
keysToFetch
label
labeledEmailAddress
labeledPhoneNumber
lastAddressedHandleID
lastFinishedMessageDate
lastObject
lastPathComponent
length
localizedDescription
localizedStringFromPersonNameComponents:style:options:
locationAuthorizationDenied
locationManagerDataSource
lock
longLongValue
mainBundle
makeIMMessageFromText:
makeINMessage:message:numberOfAttachments:personProvider:referencedINMessage:content:
makeRetractedMessageItem:
markMessageAsReadWithGUID:callerOrigin:reply:
markReadForMessageGUID:callerOrigin:queryID:
matchesHandleID:
matchesIMHandle:
matchesPerson:withUnifiedContactIdentifiers:
meContactIdentifier
messageContentsPredicate:
messageEffectTypeFromExpressiveSendId:
messageEffectTypeToExpressiveSendIdDictionary
messageHandlerDataSource
messageIdentifier
messageIdentifiers
messageIsFromBlackholedChat:
messagePartIndex
messageSendHandlerDelegate
messageType
messagesMatchingMessageIdentifiers:completion:
metadata
name
narrator
needsValue
newMessageItemFrom:withText:deleteSubject:withFileTransferGUIDs:
normalizedID
notRequired
notificationIdentifiers
numberOfAttachments
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInteger:
objectAtIndex:
objectAtIndexedSubscript:
objectEnumerator
objectForKey:
objectForKeyedSubscript:
optionsWithAttributes:
optionsWithAttributes:sanitizer:
originalFilename
originalID
originalURL
originatingDeviceIdsIdentifier
outgoingMessageType
participantsWithState:
peerPaymentAmount
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
person
personFromSPIHandle:
personHandle
personHandleLabel
personHandleType
phAssetId
phoneNumbers
phonemeData
plainBody
platform
play
playSendSoundForMessageGUID:
playSendSoundForMessageGUID:callerOrigin:
playerState
podcastName
preciseLocationAuthorized
predicateForContactsMatchingEmailAddress:
predicateForContactsMatchingPhoneNumber:
predicateForContactsWithIdentifiers:
predicateWithBlock:
predicateWithFormat:argumentArray:
prepareToPlay
queryAudioMessageURLForIntent:completion:
raise
rangeOfString:
recipientDisambiguationResultsFromMultipleRelevantChats:
recipientHandleResolutionResultsAllowedByScreentime:error:
recipients
recipientsPredicate:
recipientsResolutionFailureResultWithResult:forRecipient:amongRecipients:
recommendation
referencedMessage
refreshServiceForSending
registerForContactStoreChangeNotificationsIfNecessary
registerGUID:forNewOutgoingTransferWithLocalURL:
registerTransferWithDaemon:
removeAllObjects
removeLastObject
removeObjectAtIndex:
removeObjectForKey:
resolutionResultCode
resolutionResultUnsupportedWithReason:alternativeItems:
resolveAttributeForSetMessageAttribute:withCompletion:
resolveAttributesForSearchForMessages:withCompletion:
resolveContentForSendMessage:withCompletion:
resolveDateTimeRange:
resolveDateTimeRangeForSearchForMessages:withCompletion:
resolveGroupNameForSendMessage:withCompletion:
resolveGroupNamesForSearchForMessages:withCompletion:
resolveMessageContentWithString:
resolveOutgoingMessageTypeForSendMessage:withCompletion:
resolvePersons:forIntent:completionHandler:
resolveRecipientsAndSender:withCompletion:
resolveRecipientsByFindingExistingRelevantChatsForRecipients:withMatchingHandlesByRecipient:fromChats:
resolveRecipientsForSearchForMessages:withCompletion:
resolveRecipientsForSendMessage:completion:
resolveRecipientsForSendMessage:withCompletion:
resolveRecipientsWithCRR:forIntent:completion:
resolveRecipientsWithGroupNameOrConversationIdentifier:forIntent:
resolveRecipientsWithoutCRR:forIntent:completion:
resolveSendersForSearchForMessages:withCompletion:
resolveSpeakableGroupNameForSendMessage:withCompletion:
resolveSpeakableGroupNames:forIntent:
resolveSpeakableGroupNamesForSearchForMessages:withCompletion:
resolvedRecipientsFromChat:
resolvedValue
respondsToSelector:
retain
retainCount
retractPartIndex:fromMessageItem:chat:backwardCompatabilityText:
richLinkMetadata
sanitize:
scoredAlternatives
screentimeAllowedToShowChat:error:
screentimeAllowedToShowConversationWithHandleIDs:error:
searchMessagesWithContents:messageIdentifiers:notificationIdentifiers:chatNames:conversationIdentifiers:recipients:senders:dateTimeRange:attributes:completion:
seasonName
self
sendCurrentLocationMessageWithChat:withLocationManager:withSourceApplicationIdentifier:foregroundAssertionForBundleIdentifier:completion:
sendEditedMessage:previousMessage:partIndex:editType:toChatIdentifier:style:account:backwardCompatabilityText:
sendFileAttachmentURLs:chat:executionContext:expressiveSendStyleID:idsIdentifier:sourceApplicationID:sentMessages:completion:
sendLocalFileAttachmentURLs:chat:executionContext:expressiveSendStyleID:idsIdentifier:sourceApplicationID:sentMessages:completion:
sendLocationMessageToChat:sourceApplicationID:sentMessages:completion:
sendMessage:
sendMessage:toChat:
sendMessageWithDraft:expressiveSendStyleID:idsIdentifier:executionContext:sourceApplicationID:toChat:
sendMessagesWithText:currentLocation:sharedLinkURL:audioMessageAttachment:photoLibraryAttachment:fileAttachments:expressiveSendStyleID:idsIdentifier:executionContext:toChat:completion:
sendPhotoAssetMessageToChat:executionContext:expressiveSendStyleID:idsIdentifier:phAsset:sentMessages:sourceApplicationID:completion:
sender
sendersPredicate:
serviceName
setActive:error:
setAttributeSanitizer:
setAuxImageForTransfer:value:
setAuxVideoForTransfer:value:
setBalloonBundleID:
setCategory:withOptions:error:
setChat:
setContactStore:
setCustomIdentifier:
setDateEdited:
setDelegate:
setDidRegisterForContactStoreChangeNotifications:
setExpressiveSendStyleID:
setIncludeGuestAssets:
setIncludeHiddenAssets:
setIntentIdentifier:
setIsMe:
setLastAddressedHandleID:
setLastAddressedSIMID:
setLinkMetadata:
setMessageHandlerDataSource:
setMessageSendHandlerDelegate:
setMessages:
setMetadata:
setNetworkAccessAllowed:
setNotificationIDSTokenURI:
setObject:forKey:
setObject:forKeyedSubscript:
setPaymentAmount:
setResolvedPersons:
setSentMessages:
setSourceApplicationID:
setValue:forKey:
setupAudioSession
sharedController
sharedFeatureFlags
sharedInstance
sharedLink
sharedManager
sharedRegistry
shouldContinueToExamineRelevantChatsWithMatches:nextChat:
simIDForSenderIdentity:
siriMatches
siteName
smsEnabled
smsService
sortedArrayUsingComparator:
sortedArrayUsingSelector:
soundType
speakableGroupName
speakableGroupNames
specialization
spiHandleForIMHandle:isMe:
spiHandleToPersonCache
spokenPhrase
spokenPhrasesForSpeakableStrings:
startDateComponents
startPlayingAudioURL:
stop
stopPlaying
storeFrontIdentifier
string
stringByReplacingOccurrencesOfString:withString:
stringFromContact:style:
stringGUID
stringValue
stringWithFormat:
substringFromIndex:
subtitle
successWithResolvedDateComponentsRange:
successWithResolvedMessageAttributeOptions:
successWithResolvedOutgoingMessageType:
successWithResolvedPerson:
successWithResolvedString:
superclass
synchronousRemoteDaemon
text
time
timeIntervalSinceDate:
timeIntervalSinceNow
title
transferGUID
trimmedString
type
typeIdentifier
unarchivedObjectOfClass:fromData:error:
unifiedContactIdentifierForContactIdentifier:
unifiedContactIdentifiersForPerson:
unifiedContactWithIdentifier:keysToFetch:error:
unifiedContactsMatchingPredicate:keysToFetch:error:
uniqueID
unlock
unsupported
unsupportedForReason:
unsupportedWithReason:
updateRecentlyUsedHandlersWithHandler:
updateSenderIdentityForNewlyCreatedChat:
value
vocabularyIdentifier
vocabularyIdentifiersFromSpeakableStrings:
writeDataForAssetResource:toFile:options:completionHandler:
zone
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v28@0:8@16B24
v32@0:8@16@24
v24@0:8@16
v32@0:8@16Q24
v28@0:8@"AVAudioPlayer"16B24
v32@0:8@"AVAudioPlayer"16@"NSError"24
v24@0:8@"AVAudioPlayer"16
v32@0:8@"AVAudioPlayer"16Q24
@32@0:8@16@24
v16@0:8
q16@0:8
@"<IMAssistantAudioPlayerDelegate>"
@"NSString"
@"AVAudioPlayer"
@24@0:8Q16
@32@0:8Q16@24
@"NSURL"
@"LPLinkMetadata"
v32@0:8@16@?24
v32@0:8@"INSendMessageIntent"16@?<v@?@"INSendMessageIntentResponse">24
v32@0:8@"INSendMessageIntent"16@?<v@?@"NSArray">24
v32@0:8@"INSendMessageIntent"16@?<v@?@"INStringResolutionResult">24
v32@0:8@"INSendMessageIntent"16@?<v@?@"INOutgoingMessageTypeResolutionResult">24
v32@0:8@"INSendMessageIntent"16@?<v@?@"INSpeakableStringResolutionResult">24
@40@0:8@16@24@32
B32@0:8@16^q24
B64@0:8@16@24@32q40@48@56
@24@0:8@16
v40@0:8@16@24@?32
v80@0:8@16@24q32@40@48@56@64@?72
v48@0:8@16@24@32@?40
v80@0:8@16q24@32@40@48@56@64@?72
v100@0:8@16B24@28@36@44@52@60@68q76@84@?92
B32@0:8@16^@24
B32@0:8@16@24
@"<IMAssistantMessageSendHandlerDelegate>"
v32@0:8@"IMMessage"16@"IMChat"24
q24@0:8@16
@48@0:8@16@24q32@40
@40@0:8@16q24@32
@56@0:8@16@24@32q40@48
@24@0:8@?16
v32@0:8@"INSearchForMessagesIntent"16@?<v@?@"INSearchForMessagesIntentResponse">24
v32@0:8@"INSearchForMessagesIntent"16@?<v@?@"NSArray">24
v32@0:8@"INSearchForMessagesIntent"16@?<v@?@"INMessageAttributeOptionsResolutionResult">24
v32@0:8@"INSearchForMessagesIntent"16@?<v@?@"INDateComponentsRangeResolutionResult">24
@"<IMAssistantMessageAttributeSanitizer>"
v32@0:8@"INUnsendMessagesIntent"16@?<v@?@"INUnsendMessagesIntentResponse">24
v48@0:8q16@24@32@40
@40@0:8@16@24^@32
@32@0:8@16^@24
@"CNContact"40@0:8@"NSString"16@"NSArray"24^@32
@"NSArray"40@0:8@"NSPredicate"16@"NSArray"24^@32
@"CNContact"32@0:8@"NSArray"16^@24
v32@0:8@16q24
v32@0:8@"IMAssistantAudioPlayer"16q24
v32@0:8@"INPlayAudioMessageIntent"16@?<v@?@"INPlayAudioMessageIntentResponse">24
@"IMAssistantAudioPlayer"
@"NSMutableArray"
@"IMHandle"
@"IMAssistantHandleFromContact"
@"INPerson"24@0:8@"IMSPIHandle"16
@"<IMAssistantMessageHandlerDataSource>"
@"NSArray"
@36@0:8@16B24^@28
@"IMChat"24@0:8@"NSString"16
@"IMChat"36@0:8@"NSArray"16B24^@28
@"IMChat"24@0:8@"IMHandle"16
@"IMChat"24@0:8@"NSArray"16
@"NSArray"24@0:8@"IMChat"16
@"NSArray"16@0:8
@"IMHandle"24@0:8@"NSString"16
@"TUSenderIdentity"24@0:8@"NSArray"16
@"NSString"24@0:8@"TUSenderIdentity"16
B32@0:8@"IMChat"16^@24
B32@0:8@"NSArray"16^@24
@"<IMAssistantContactsDataSource>"16@0:8
@"<IMAssistantChatDataSource>"16@0:8
@"<IMAssistantAccountDataSource>"16@0:8
@"<IMAssistantCoreTelephonySubscriptionsDataSource>"16@0:8
@"<IMLocationManager>"16@0:8
@"<IMAssistantFileManager>"16@0:8
@"<IMFileTransferCenter>"16@0:8
@"<IMAssistantCommSafetyManager>"16@0:8
@"NSCache"16@0:8
v20@0:8B16
@"CNContactStore"
v32@0:8@"INPlayMessageSoundIntent"16@?<v@?@"INPlayMessageSoundIntentResponse">24
v40@0:8@"NSURL"16@"NSString"24@?<v@?B@"NSError">32
@"IMCommSafetyRequestsManager"
@"IMCommSafetySettingsManager"
@24@0:8q16
@28@0:8@16B24
@64@0:8q16@24q32@40@48@56
@"IMChat"
v32@0:8@"INSetMessageAttributeIntent"16@?<v@?@"INSetMessageAttributeIntentResponse">24
v32@0:8@"INSetMessageAttributeIntent"16@?<v@?@"INMessageAttributeResolutionResult">24
@"CNContact"
@"CNLabeledValue"
@32@0:8q16@24
@40@0:8q16@24@32
@36@0:8@16@24B32
B40@0:8@16@24@?32
v44@0:8@16B24q28@?36
v52@0:8@16@24B32q36@?44
v40@0:8@16^@24^@32
v32@0:8q16@?24
v96@0:8@16@24@32@40@48@56@64@72Q80@?88
Q24@0:8Q16
@(#)PROGRAM:IMAssistantCore  PROJECT:IMAssistantCore-
INMessage %@
Conversation identifier: %@
Group name: %@
Sender: %@
Recipients (%@): %@
IMAssistantCore
Failed to initialize AVAudioPlayer: %@
Failed to set category and options on AVAudioSession: %@
Failed to setup AVAudioSession: %@
Completing confirmSendMessage with %@
v8@?0
Performing intent: %@
v16@?0@"INSendMessageIntentResponse"8
Send Message Intent: GroupName: %@
Send Message Intent: Recipients: %@
Send Message Intent: Conversation Identifier: %@
Will try to send a current location message.
Will try to send a Audio Message with attachment: %@
Will try to send a shared link for the URL at: %@
Will try to send files at the following locations: %@
Sending message to chat with identifier specified in intent. chat=%@
Using stored conversation identifier that was resolved during recipient resolution. conversationIdentifier=%@
Sending message to chat that has already been resolved. chat=%@
Could not find IMChat matching conversation identifier resolved during recipient resolution. Ignoring. conversationIdentifier=%@
Custom identifier not set, falling back to personHandle.value: %@
Could not send message; recipient had no usable handle: %@
Found existing chat with the recipients; sending
Could not find any existing chat matching addresses. Creating new chat. Addresses: %@
Could not send message; no messaging accounts available
Could not send message; an address could not be resolved to an IMHandle: %@
Failed to determine the prefferred sender identity, returning failure requiring app launch so the user can use the sim selection UI
Sending message to a new chat. Attempting to determine best sender identity.
@16@?0@"IMHandle"8
Could not determine preferred sender identity for handleIDs. This may mean that the user has conflicting sim preferences for these recipients.
Resolving Outgoing Message Type with Text (%ld)
Resolving Outgoing Message Type with Audio (%ld)
v16@?0@"NSArray"8
Will not use CRR to resolve recipients.
Resolve recipients with legacy resolution results: %@
Intent contains an attachment and no content. Returning notRequired for content.
Resolve content result: %@
Resolving speakableGroupName: %@ vocabID: %@
Intent contains a conversationIdentifier, %@, using that to resolve group name
Intent contains a speakableGroupName.vocabularyIdentifier, %@, using that to resolve group name
speakableGroupName contains %ld alternativeSpeakableMatches: %@
alternativeSpeakableMatch does not contain a vocabularyIdentifier, ignoring. alternativeSpeakableMatch: %@
Intent contains neither a conversationID nor a spoken group name. Returning notRequired for resolveSpeakableGroupName.
Intent contains one unique conversationIdentifier: %@ chatIdentifier: %@
Chat resolved via conversation identifier is a business chat. Not resolving speakableGroupName to the business name, because the business name will be included in the recipients. Returning notRequired for speakableGroupName.
Found a named chat matching chatIdentifier, %@ with name "%@".
Returning unsupported because the chat group (%@) contains non-allowlisted participants and isn't allowed by downtime.
Returning success with name "%@".
Could not find a name for the chat with the chatIdentifier %@, ignoring.
Could not find chat with the chatIdentifier %@, ignoring
Intent contains %ld unique conversationIdentifiers: %@
Could not find chat with chatIdentifier %@, ignoring
%ld chats match chatIdentifiers. Chats: %@
Returning speakableGroupName resolution result: %@
Intent contains no chat guids.
Intent does not contain a spoken group name. Returning notRequired for resolveSpeakableGroupName.
Attempting to resolve via speakableGroupName.spokenPhrase = "%@"
Found chat name "%@" matching chat: %@
Returning unsupported because the chat group contains non-allowlisted participants and isn't allowed by downtime.
Using chat name "%@" resolved from matching chat: %@
Could not determine chat name from only matching chat. Returning unsupported/notFound. Matching chat: %@
Found %ld chats matching requested spoken phrase. Producing disambiguation options. matchingChats: %@
Could not find any chats matching requested spokenPhrase. Returning unsupported (a.k.a. notFound)
Resolved group name result: %@
Have not determined authorization to send current location message for bundle %@. Returning failure, prompting user to determine authorization for the bundle.
Authorization to send current location has been explicitly disabled for bundle %@. Returning failure, prompting user to determine authorization for the bundle.
Authorization to get precise location has been disabled for bundle %@. Returning failure, prompting user to determine authorization for the bundle.
Setting expressiveSendStyleID on message: %@ 
Setting source application ID on message: %@
Setting IDS identifier on IMMessage: %@ 
Suppressing send sound for message GUID: %@ 
refreshServiceForSending completed
canSendMessage check succeeded
message send completed
canSendMessage check failed for chat: %@
Image sensitivity analysis error: '%@'
Image sensisitivty %d.
v20@?0B8@"NSError"12
v12@?0B8
Determining location authorization status.
Authorized to send current location message. Sending.
com.apple.MobileSMS.MessagesAssistantExtension
v16@?0@"IMMessage"8
Not authorized to send current location message.
Unable to build a PHAsset message as requested. Returning failure.
Unable to send a PHAsset message as requested. Returning failure.
Returning %@ response.
v24@?0q8@"NSArray"16
Send Messages Intent: Failed. Downtime enabled, chat contained non-allowlisted handles: %@
Send Messages Intent: Failed. Will not send to chat in Un-Joined state: %@
Send Messages Intent: Invoked with an empty message request.
Using sourceApplicationID %@ for executionContext %ld.
Attempting to send a link
Resolved persons from relevant chats contained an inconsistent number of recipients, ignoring relevant chats.
v32@?0@"INPerson"8Q16^B24
Could not resolve recipients; no messaging account enabled
Attempting to resolve by speakableGroupName.vocabularyIdentifier: %@
A speakableGroupName.vocabularyIdentifier matching a valid chat was provided, extracting recipients from chat and attaching to intent for use in Siri dialog.
Returning unsupported because the chat group with speakableGroupName (%@) contains non-allowlisted participants and isn't allowed by downtime.
Will return unsupported with an unknown reason, error: %@
Returning unsupported for recipient because the resolved chat is read-only. Using INSendMessageRecipientUnsupportedReasonMessagingServiceNotEnabledForRecipient
Returning success with recipients resolved from speakableGroupName: %@ recipients: %@
Recipients could not be resolved from speakableGroupName.vocabularyIdentifier: %@. Ignoring identifier and continuing with person resolution.
No chat could be found matching speakableGroupName.vocabularyIdentifier: %@. Ignoring identifier and continuing with person resolution.
Attempting to resolve by conversationIdentifier: %@
A conversationIdentifier matching a valid chat was provided, extracting recipients from chat and attaching to intent for use in Siri dialog.
Returning unsupported because the chat group w/ conversation identifier(%@) contains non-allowlisted participants and isn't allowed by downtime.
Returning success with recipients resolved from chat: %@
Recipients could not be resolved from conversationIdentifier: %@. Ignoring conversation identifier and continuing with person resolution.
No chat could be found matching conversationIdentifier: %@. Ignoring conversation identifier and continuing with person resolution.
No recipients are required if a group name is present
No recipients provided to resolve, returning needsValue.
Resolving recipients with CRR: %@
Neither a group name nor a conversation identifier were provided, attempting to resolve by recipients.
This recipient is already fully resolved: %@
Resolving %@
CRR offered no suggestions for %@
Error extracting a scoredPerson from %@
CRR resolved to a confident match: %@
CRR resolved to needs confirmation: %@
CRR resolved to needs disambiguation: %@
Resolving recipients without CRR: %@
@16@?0@"INPerson"8
All recipients already have a resolved handle, validating screentime status.
Returning unsupported because the preresolved handles contain a non-screentime allowlisted recipient.
Returning success with pre-resolved handles.
Recipient contains neither siriMatches nor a personHandle.value, returning unsupported/notFound for recipient: %@
Found %ld matching handles on contact %@ for recipient: %@
Using %ld matching handles from contacts: %@
Recipient contains both an explicit personHandle.value and contact identifiers, attempting to extract mathcing handle from contacts. Recipient: %@
Handle %@ was not found on any of the contacts, using handle without a contact
Using %ld matching manually dictated handles: %@
Using %ld matching business chat handle: %@
Found no handles matching recipient: %@
Skipping existing chat search because we have pre resolved siriMatch results.
Skipping existing chat search as at least one of the recipients has no valid handles.
Attempting to find an existing chat with the desired recipients
Returning unsupported because one of the intended recipient handles is not allowed by downtime.
Found an existing chat matching recipients. Storing conversationIdentifier=%@
Multiple existing recent chats match the requested participant(s).
Returning disambiguation result: %@
Could not construct disambiguation result. Ignoring relevant chats.
Did not find any existing chat matching request.
Beginning contact resolution for recipient: %@
found multiple resolved siri matches. disambiguating: %@
found one resolved siri match with a valid handle. picking it: %@
found one resolved siri match, but no handle. falling back to legacy contact resolution.
did not find any siri matches. falling back to legacy contact resolution.
Already have a resolved contact and handle for this recipient. Returning success: %@
@24@?0@"INPerson"8Q16
Could not resolve a single contact for each recipient, returning resolution result: %@
Beginning handle resolution for recipient: %@
Intent already has a resolved handle for this recipient. Returning success: %@
A handle was already resolved as part of contact resolution (e.g. contacts with duplicate names that only contain one valid handle). Returning success with the resolved handle: %@
More than one matching contact exists after person resolution. Person resolution should have resolved the recipients down to a single contact. Something has gone horribly wrong. Picking the first one and continuing with handle resolution.
Contacts: %@
Returning unsupported because chat is blocked for downtime.
Completed handle resolution with results: %@
Validating resolved handles for screentime
Handles are not allowed by screentime: %@.
Handles are allowed by screentime
Attempting to resolve ambiguous handle to contact using the Contacts Framework.
Could not resolve ambiguous handle to contact using the Contacts Framework.
%ld contacts matched chat participant %@. Matching identifiers: %@. Using contact: %@
%ld contacts have the name "%@". Will use handles for these contacts, rather than just name, when disambiguating. Contacts: %@
v32@?0@"NSString"8@"NSMutableArray"16^B24
Attempting to find a matching chat by examining %ld recent chats.
v32@?0@"INPerson"8@"IMHandle"16@"IMAssistantHandleFromContact"24
Beginning evaluation of participants in chat %@.
Found a chat participant handle: %@ matching requested handle: %@
Did not find any matching chat participant for requested person %@
Found a matching existing chat: %@
Found %ld contacts matching handle: %@. Using contact identifier %@ from list %@. Contact: %@
Did not find any contacts matching manually requested handle: %@
Could not find a valid 1-1 relationship between chat participants and requested recipients. Ending evaluation of chat %@.
Matching chat participant not found for all recipients. Ending evaluation of chat %@.
Did not find a matching existing chat.
Next chat is beyond maximum relevant time interval. Ending evaluation of relevant chats. TimeSinceLastMessageInMatchingChat: %ld s, TimeSinceLastMessageInNextChat: %ld s, MaximumRelevantTimeInterval: %ld s
B24@?0@"IMAssistantChatParticipant"8@"NSDictionary"16
Manually specified handle. Ready to proceed to handle resolution with person: %@
Multiple contacts match recipient. Contacts: %@
Contact has the same name as another possible disambiguation option, including handles in disambiguation for contact: %@
Could not create INPerson from contant %@ and handle %@
Contacts matching the requested recipient have identical names, but one of the contacts has no valid phone numbers or email addreses for this request. Ignoring that contact, as including it in the list of disambiguation options would make it indistinguishable from the other valid options with the exact same name. Contact: %@
There was more than one contact matching the requested recipient but those contacts had the exact same name, and none of those contacts had a valid handle matching the requested type. We won't offer disambiguation of the contacts, because none of the choices would lead to a successful resolution and the options would be indistinguishable and confusing.
If the user had specified a different label/handle-type, valid options would have been available, returning unsupportedReason = NoHandleForLabel.
None of the ambiguous contacts had any valid handles. Returning unsupportedReason = NoValidHandle.
There was more than one contact matching the requested recipient AND those contacts had the exact same name, but only one of those contacts had a valid handle matching the request. Using that handle.
Requesting disambiguation of %ld options: %@
Only one contact matches recipient. Ready to proceed to handle resolution for contact: %@
Could not find any matching handles, and contact has no phone numbers or email addresses, returning unsupported.
Could not find any handles matching the requested label/handle-type, returning unsupported with suggested alternatives.
Asking user to disambiguate among the matching handles.
@16@?0@"IMAssistantHandleFromContact"8
Only found one handle matching request, returning success for person.
The user explicitly requested a handle, e.g. 'Send a message to 555-555-5555', look up the contact to include in dialog.
Found %ld contacts matching manually requested person handle: %@.
Using contact identifier %@
Found contact %@
Resolved manually dictated recipient: %@
Could not create an IMHandle for handleID: %@
Intent contains an current location attachment: %@
Intent contains an audio message request, looking for the attachment
Intent contains a audioFileAttachment: %@
Checking the intent for a shared link.
There was an error unarchiving the attachment to LPLinkMetadata: %@
SDK doesn't support API.
We have a shared link and metadata, but there is a URL mismatch. Clearing out the metadata to avoid attaching the wrong metadata.
Checking the intent for a file attachment.
Checking the intent for a PHAsset attachment.
Intent contains a conversation identifier. Using that to find an existing chat. conversationIdentifier=%@
Intent contains a group name vocabulary identifier. Using that to find an existing chat. vocabularyIdentifier=%@ chatIdentifier=%@
Could not find a chat with the vocabularyIdentifier %@ chatIdentifier %@, ignoring
speakableGroupName does not contain a vocabularyIdentifier. speakableGroupName=%@
Could not find a chat with the conversationIdentifier %@, ignoring.
Could not find a chat with nil or empty conversationIdentifier, ignoring
Could not find a name for chat, ignoring. chat: %@, isGroupChat: %@, isBusinessChat: %@, displayName: %@
Could not construct disambiguation option for chat: %@, isGroupChat: %@, displayName: %@. Ignoring.
q24@?0@"IMChat"8@"IMChat"16
%ld chats have the name "%@". Presenting disambiguation of chats with the same name is confusing, so using the most recent one, %@.
Only one disambiguation option remains, returning success with resolved name: %@
Asking user to disambiguate among %ld disambiguation options: %@
No disambiguation options remain. Returning unsupported (a.k.a. notFound)
com.apple.MobileSMS
SuppressingSendSoundMessageGUIDs
Provided localFileAttachmentURL is nil
Building a file transfer message based on a file at %@
The message's file transfer guids are: %@
Error, url is not a fileURL: %@
Failed to copy the file from %@ into the MessagesAssistantExtension Sandbox. Error: %@
Building a PHAsset transfer message based on the PHAsset with id: %@
The requested PHAsset has adjustments, we will use the edited resources.
The requested PHAsset does not have adjustments, we will use the original resources.
The requested PHAsset has %ld resources
PHAsset has an asset resource of type: %ld
The requested PHAsset attachment is a live photo.
Live photo photo write completed.
Failed to write the photo (%@) into the MessagesAssistantExtension Sandbox. Error: %@
v16@?0@"NSError"8
Live photo video write completed.
Failed to write the live photo video compliment (%@) into the MessagesAssistantExtension Sandbox. Error: %@
Attempting to transfer a live photo with photo URL %@ and video URL %@
The requested PHAsset attachment is a photo.
Photo write completed.
The requested PHAsset attachment is a video.
Video write completed.
Failed to write the video (%@) into the MessagesAssistantExtension Sandbox. Error: %@
B16@?0@"IMChat"8
Could not determine person handle label or type because [IMHandle normalizedID] was neither a phone number nor an email address: %@
%@ is an invalid personHandle.value.
com.apple.Messages
SendMessageIntent
SearchForMessageIntent
v16@?0@"NSString"8
Using cached business name: %@
Business name lookup beginning.
Business name lookup timed out
Business name lookup completed with name: %@
Normalized handle %@
@16@?0@8
resolveRecipients called with intent: %@
Calling resolveRecipients completion handler with result: %@
v24@?0@"NSArray"8@"NSArray"16
resolveSenders called with intent: %@
Calling resolveSenders completion handler with result: %@
resolveAttributes called with intent: %@
intent with read options lacks message identifiers: %@
intent with read options lacks dateTimeRange: %@
Calling resolveAttributes completion handler with result: %@
resolveSpeakableGroupNames called with intent: %@
Calling resolveSpeakableGroupNames completion handler with results: %@
Calling resolveSpeakableGroupNames completion handler with empty results
Could not search for messages; no messaging accounts available
Intent with %u identifiers, looking at both unread and read messages
Intent with %u notificationIdentifiers, looking at only unread messages from those threads
v32@?0@"NSArray"8@"NSArray"16@"NSArray"24
Returning success response with %ld messages
Message search returned nil results (e.g. an exception was caught). Returning intent failure response.
IMAssistantMessageSearchHandler: Failed to resolve recipients: %@
IMAssistantMessageSearchHandler: Failed to resolve senders: %@
resolveSpeakableGroupName for name:"%@" vocabularyIdentifier:"%@" matches %ld chats: %@
Resolve chatName: %@ and vocabularyIdentifier: %@
Chat search by name resolved to a chat without a displayName. Passing through the input name instead.
downtime suppressing resolve for chatName: %@ and vocabularyIdentifier: %@
Using input as resolved value.
No matching chats were found, returning unsupported/notFound for resolveSpeakableGroupNames
Handling INUnsendMessagesIntent: %@
Exptected at least one message matching the message identifier %@
No chats found for message identifiers
ScreenTime or DownTime restriction is in-place, returning
Will not send to chat in Un-Joined state: %@
Message has more than one part, requiring app launch
Message type does not support retraction
Message is too old to be retracted
Messages from different senders cannot be retracted
Messages has been edited too many times
Messages is currently sending
Retracting message with identifier %@
Exptected at least one message matching the message identifiers %@
Searching for chat corresponding to conversation identifiers %@
Play audioURL: %@
Started playing audio
Failed to play audio
Could not find audioURL
v16@?0@"NSURL"8
Confirm intent: %@
Confirm intent completion audioURL: %@
Intent Extension initialized
Using %@ %p for intent %@
Received an unknown intent: %@
Intent does not have an intentIdentifier set. Creating new handler.
Found existing handler for intent identifier: %@.
Existing handler not found for intent identifier: %@. Creating new handler.
Updating recently used intent handler cache for an intent with no intentIdentifier.
<IMAssistantChatParticipant %p> {IMHandle: %@, handleFromContact: %@}
__kIMAssistantContinuityHandlesKey
__kIMAssistantContinuityChatsKey
__kIMAssistantMessageHandlerErrorDomain
Person resolved to %ld contacts via siriMatches. Person: %@, Contacts: %@
Person contained siriMatches that did not resolve to any contacts. Person: %@
Person to resolve contains no siriMatches. Person: %@
Error fetching unified contact identifier for contact with identifier %@ from contact store. Error: %@
Error fetching contact with identifier %@ from contact store. Error: %@
Error fetching %@ from contact store: %@
Could not find person %@ in contact store with predicate
Returning empty contactID array for nil handleID
Returning empty contactID array for handleID that is a businessID: %@
Could not create CNPhoneNumber from handle ID: %@
Could not create contact search predicate for handle ID that is neither a phone number or an email address: %@
Error fetching contact identifiers matching handle %@ from contact store: %@
Could not search for contacts matching handle because a predicate could not be consrtuced from handle ID: %@
Error fetching me contact: %@
Could not find me contact identifier
%ld contacts matched handle %@. Matching identifiers: %@. Using contact: %@
Connecting to IMDaemonController
IMDaemonController blockUntilConnected completed in %.4f seconds. Connected: %@
Not triggering IMDaemonController reconnect. Connection was established %.4f seconds ago.
Calling IMSystemMonitor _forceSuspended and _forceResumed
IMSystemMonitor _forceResumed completed
Failed to allocate contact store
Contact store change notification received.
Handling INPlayMessageSoundIntent: %@
Calling completion with INPlayMessageSoundIntentResponse: %@
Playing send sounds for messageGUID: %@
No effect for effect identifier: %@
@"NSString"16@?0@"LPImageMetadata"8
@"NSString"16@?0@"LPIconMetadata"8
LinkPresentation
LPiTunesMediaSongMetadata
LPiTunesMediaAlbumMetadata
LPiTunesMediaMusicVideoMetadata
LPiTunesMediaArtistMetadata
LPiTunesMediaPlaylistMetadata
LPiTunesMediaRadioMetadata
LPiTunesMediaSoftwareMetadata
LPiTunesMediaBookMetadata
LPiTunesMediaAudioBookMetadata
LPiTunesMediaPodcastEpisodeMetadata
LPiTunesMediaPodcastMetadata
LPiTunesMediaTVEpisodeMetadata
LPiTunesMediaTVSeasonMetadata
LPiTunesMediaMovieMetadata
LPiTunesMediaMovieBundleMetadata
LPAppleTVMetadata
LPAppleMusicTVShowMetadata
Could not create INSpeakableString, chat did not have a display name
@"INPerson"16@?0@"IMSPIHandle"8
Link Metadata: %@
Message %@ has a reference to multi-part message %@. Reference should be to a single part, e.g. a tapback on a photo in a group of photos, but we do not have the infomration to resolve which part. Naively choosing the first part.
Message %@ has a reference to a message %@ that could not be converted to an INMessage.
Could not find attachment matching attachmentGUID %@ for messagePart %ld of message %@
Skipping empty text message part %ld of %@
Aggregating message part %ld of %@ to previous INMessage
numberOfAttachments
Unable to convert message part %ld of %@ to INMessage
v32@?0@"IMMessagePartDescriptor"8Q16^B24
Message %@ converted to %ld INMessages
Cannot map balloon plugin message to INMessageType. Using unspecified.
<IMAssistantRelevantChatMatchingRecipients %p> {Chat: %@, ResolvedPersons: %@}
Handling SetMessageAttribute intent: %@
Message marked as read: %@ success: %@
Message marked as read: %@
Calling completion with response: %@
Should not be able to create this object with an invalid handle type
Should not be able to create this object with an empty handleID
Should not be able to create this object with a none or invalid handle type
Detected an excluded phone number in the requested handle, doing a strict string comparison insted of a phone number match.
<IMAssistantHandleFromContact %p> {type: Phone, labeledPhoneNumber: %@ conact: %@}
<IMAssistantHandleFromContact %p> {type: Email, labeledEmailAddress: %@ conact: %@}
<IMAssistantHandleFromContact %p> {type: Business, businessID: %@ conact: %@}
Could not create IMHandle with phone number: %@ from contact: %@
Could not create IMHandle with email address: %@ from contact: %@
Could not create IMHandle with phone number: %@ account: %@ from contact: %@ 
Could not create IMHandle with email address: %@ account: %@ from contact: %@
Resolving persons: %@ for intent: %@
Resolving person: %@
Successfully resolved person to %ld contact identifiers: %@
Successfully resolved person to handle: %@
Could not resolve person %@ for intent %@
IMAssistantIMSPIQueue
Found %ld chat guids: %@, matching chat: %@
Calling IMSPIQueryMessagesWithChatIdentifiers services: %@, chatIdentifiers: %@, onlyUnread: %d, limit: %ld
IMSPIQueryMessagesWithChatIdentifiers failed
Could not construct chat GUID from handleID: %@ service: %@
Could not extract handleID: %@ or service: %@ from IMHandle %@
Could not parse identifier or service from chat GUID: %@
Performing query for messages from handles: %@ services: %@ onlyUnread: %d, limit: %ld
IMSPIQueryMessagesWithIDsWithOnlyUnread failed
IMSPIQueryUnreadMessages failed
IMSPIQueryMessagesWithGUIDs failed
IMSPIQueryMessagesWithRowIDs failed
B24@?0@"NSArray"8@"NSDictionary"16
B24@?0@"IMAssistantMessageSearchChatParticipant"8@"NSDictionary"16
 AND 
self LIKE[cd] %@
*%@*
@"NSString"16@?0@"IMHandle"8
Found %ld chats matching participants. Chats: %@
Found exsting chat matching conversationIdentifier: %@ chatIdentifier: %@
Could not find chat matching conversationIdentifier: %@ chatIdentifier: %@
@16@?0@"NSString"8
Found %ld chats matching chat names:%@ vocabularyIdentifiers:%@ chats:%@
Searching for messages with attributes onlyUnreadMessages: %@ | onlyReadMessages %@
No start date specified for date filtering, using open ended start date.
No end date specified for date filtering, using open ended end date.
Filtering the search results to date time interval: [%@, %@]
Filter block executed with %ld messages.
Message filtered because it did not pass downtime allowlist check: %@
Message filtered because it is from a blackholed chat: %@
Message filtered because it did not fall within the specified date interval: %@
Message filtered due to not being an unread message: %@
Message filtered due to not being a read message: %@
Message filtered because it did not pass the contents predicate: %@
Message filtered because it did not pass the senders predicate: %@
Message filtered because it did not pass the recipients predicate: %@
Message passed filter: %@
Filter block completed with %ld messages.
@"NSArray"16@?0@"NSArray"8
Conversion block executed with %ld messages.
Finished converting message: %@
Performing search via message identifiers search, then filter.
Performing search for messages matching the notification identifiers, then filter.
Performing search via chat name search, then filter.
Failed to find any chats matching chatNames: %@
Performing search via chat search, then filter.
Failed to find any chats matching conversation identifiers: %@
Performing search via recipients search, then filter.
Failed to find chats containing all specified persons (recipients + senders) during search: %@
Performing search via senders search, then filter.
Performing search via unread search, then filter.
Performing search via examining all chats, then filter.
Could not find chatIdentifier %@ in chat registry, looking up IMSPIChat to determine blackhole status.
Determined message %@ from chat %@ isBlackholed=%d
x-apple-sms:guid=
Looking up %ld messages with IMSPIQueryMessagesWithRowIDs
@"NSNumber"16@?0@"NSString"8
Looking up %ld messages with IMSPIQueryMessagesWithGUIDs
Could not canonicalize handle "%@" because it is neither a phone number nor an email address.
confirmSendMessageIntent
handleSendMessageIntent
resolveRecipientsForSendMessage
resolveContentForSendMessage
resolveSpeakableGroupNameForSendMessage
sendMessageWithText
resolveRecipientsFromGroup
resolveRecipientsFromConversationID
resolvedRecipientsFromChat
duplicateNameCheck
examineRelevantChat
resolveRecipientsFromRelevantChat
mapRecipientsToParticipants
contactResolutionResultForContacts
handleResolutionResultForContact
resolveRecipientsForSearchForMessages
resolveSendersForSearchForMessages
resolveAttributesForSearchForMessages
resolveSpeakableGroupNamesForSearchForMessages
handleSearchForMessages
contactsMatchingPerson
unifiedContactIdentifierForContactIdentifier
contactWithIdentifier
contactsMatchingPredicate
contactIdentifiersMatchingHandleID
meContactIdentifier
personFromSPIHandle
imDaemonControllerConnection
imSystemMonitorSuspendAndResume
screentimeAllowedToShowChat
screentimeAllowedToShowConversationWithHandleIDs
INMessagesForSPIMessage
INMessageForOutgoingIMMessage
handleSetMessageAttributeIntent
queryMessagesWithChatIdentifiers
queryMessagesWithIDs
queryUnreadMessages
queryMessagesWithGUIDs
queryMessagesWithRowIDs
filterMessageScreentimeCheck
filterIndividualMessage
filterMessages
convertMessages
IMAssistantCore
IMAssistantAudioPlayer
AVAudioPlayerDelegate
NSObject
IMAssistantMessageAttributeOptions
IMAssistantURLWithMetadata
IMAssistantMessageSendHandler
INSendMessageIntentHandling
IMAssistantMessageSendHandlerDefaultDelegate
IMAssistantMessageSendHandlerDelegate
IMAssistantMessageSearchHandler
INSearchForMessagesIntentHandling
IMAssistantUnsendMessagesHandler
INUnsendMessagesIntentHandling
IMAssistantContactsDataSource
IMAssistantMessagePlayAudioHandler
IMAssistantAudioPlayerDelegate
INPlayAudioMessageIntentHandling
IMAssistantIntentHandler
IMAssistantChatParticipant
IMAssistantMessageHandler
IMAssistantINMessageConverterPersonProvider
IMAssistantIdentifiableIntentHandler
IMAssistantChatDataSource
IMAssistantAccountDefaultDataSource
IMAssistantAccountDataSource
IMAssistantCoreTelephonySubscriptionsDefaultDataSource
IMAssistantCoreTelephonySubscriptionsDataSource
IMAssistantMessageHandlerDefaultDataSource
IMAssistantMessageHandlerDataSource
IMAssistantMessagePlayMessageSoundHandler
INPlayMessageSoundIntentHandling
IMAssistantCommSafetyManager
IMAssistantINMessageConverter
IMAssistantRelevantChatMatchingRecipients
IMAssistantMessageSetAttributeHandler
INSetMessageAttributeIntentHandling
IMAssistantHandleFromContact
IMAssistantMessageSearchChatParticipant
IMAssistantMessageQueryHandler
IMAssistantMessageReadAttributeSanitizer
IMAssistantMessageAttributeSanitizer
T@"IMCommSafetyRequestsManager",R,N,V_commSafetyRequestsManager
AuxGUIDFromFileTransferGUID:
T@"NSArray",R,N
IMAssistantIMSPIQueue
INMessagesForSPIMessage:personProvider:
_handle
SPIQueryMessagesForChats:onlyUnread:limit:completion:
account
SPIQueryMessagesForSenders:onlyUnread:limit:completion:
canSendMessage:
SPIQueryMessagesWithRowIDs:completion:
contact
T#,R
content
T@"<IMAssistantChatDataSource>",R,N
curator
T@"<IMAssistantContactsDataSource>",R,N
excludedNumbers
T@"<IMAssistantFileManager>",R,N
fileURL
T@"<IMAssistantMessageHandlerDataSource>",&,N,V_messageHandlerDataSource
iMessageService
T@"<IMFileTransferCenter>",R,N
initWithString:
T@"CNContact",R,N,V_contact
localIdentifier
T@"CNLabeledValue",R,N,V_labeledEmailAddress
makeIMMessageFromSharedLinkURL:
T@"IMAssistantHandleFromContact",R,N,V_handleFromContact
phAsset
T@"IMHandle",R,N,V_imHandle
release
T@"NSArray",&,N,V_keysToFetch
senders
T@"NSArray",R,C,N,V_contactIdentifiers
setKeysToFetch:
T@"NSString",C,N,V_intentIdentifier
setUrl:
T@"NSString",R,C,N
storeIdentifier
T@"NSString",R,N
synchronousReplyingRemoteDaemon
T@"NSString",R,N,V_displayID
.cxx_destruct
T@"IMCommSafetySettingsManager",R,N,V_commSafetySettingsManager
T@"NSCache",R,N
INMessageForOutgoingIMMessage:toChat:messageType:personProvider:
_forceSuspended
INPersonsForSPIHandles:personProvider:
_player
SPIQueryMessagesForChatsWithIdentifiers:services:onlyUnread:limit:completion:
address
SPIQueryMessagesWithGUIDs:completion:
conformsToType:
SPIQueryUnreadMessages:completion:
containsObject:
T@"<IMAssistantAccountDataSource>",R,N
creator
T@"<IMAssistantCommSafetyManager>",R,N
currentLocation
T@"<IMAssistantCoreTelephonySubscriptionsDataSource>",R,N
existingChatWithChatIdentifier:
T@"<IMAssistantMessageAttributeSanitizer>",&,N,V_attributeSanitizer
fileUrl
T@"<IMAssistantMessageSendHandlerDelegate>",&,N,V_messageSendHandlerDelegate
imHandleWithID:
T@"<IMLocationManager>",R,N
isProxy
T@"CNContactStore",&,N,V_contactStore
locationAuthorizationDetermined
T@"CNLabeledValue",R,N,V_labeledPhoneNumber
messagePartBody
T@"IMChat",&,N,V_chat
placeholderName
T@"LPLinkMetadata",&,N,V_metadata
resolvedPersons
T@"NSArray",C,N,V_resolvedPersons
service
T@"NSObject<OS_dispatch_queue>",R,N
setPhonemeData:
T@"NSString",R,C
spiChatWithQOS:
T@"NSString",R,C,N,V_handle
summary
T@"NSString",R,N,V_businessID
T@"NSString",R,N,V_identifier
T@"NSURL",&,N,V_url
TB,N,V_didRegisterForContactStoreChangeNotifications
TB,R,N
TB,R,N,V_isMe
TQ,R
TQ,R,N,V_attributes
Tq,R,N
Tq,R,N,V_handleType
__INMessageLinkMetadataForLPLinkMetadata:
__INSpeakableStringForChat:
__INSpeakableStringForMessage:
__imArrayByApplyingBlock:
__imArrayByFilteringWithBlock:
__im_assistant_allContactIdentifiers
__im_assistant_allIMHandles
__im_assistant_allValidPersonOptionsWithAccountDataSource:
__im_assistant_arrayByApplyingBlockWithIndex:
__im_assistant_bestMessagingAccount
__im_assistant_displayNameForContact:displayFormattedHandle:normalizedHandle:
__im_assistant_emailAddressesMatchingLabel:
__im_assistant_extractIntentHandleLabelAndTypeFromContact:forNormalizedID:
__im_assistant_handleType
__im_assistant_handleTypeForString:
__im_assistant_handlesMatchingHandleID:
__im_assistant_handlesMatchingRequestedHandleType:requestedHandleLabel:
__im_assistant_initAnonymousRecipientWithIMHandle:
__im_assistant_initForContactResolutionResultWithContact:type:label:
__im_assistant_initWithContact:displayFormattedHandle:normalizedHandle:type:label:
__im_assistant_initWithContact:imHandle:
__im_assistant_initWithContact:imHandle:type:label:
__im_assistant_initWithContact:unformattedPersonHandle:accountDataSource:
__im_assistant_initWithHandleFromContact:accountDataSource:
__im_assistant_matchingNormalizedHandlesForType:andLabel:forCountryCode:
__im_assistant_phoneNumbersMatchingLabel:
__im_dateWithCurrentServerTime
__im_messagePartIndexes
__im_messageTextByRemovingMessagePartIndex:
__im_personFromSPIHandle:contact:
__im_visitMessageParts:
__imcore__containsNonSuccess:
__imcore__isSuccess
_attributeSanitizer
_attributes
_audioPlayer
_businessID
_chat
_commSafetyRequestsManager
_commSafetySettingsManager
_completionHandler
_contact
_contactIdentifiers
_contactStore
_conversationIdentifierResolvedDuringRecipientResolution
_crossPlatformUnifiedMeContactWithKeysToFetch:error:
_delegate
_didRegisterForContactStoreChangeNotifications
_displayID
_executionContext
_forceResumed
_handleFromContact
_handleType
_identifier
_imHandle
_initWithDataSource:contactKeysToFetch:intentIdentifier:
_initWithPhoneNumber:emailAddress:businessID:handleType:contact:
_intentIdentifier
_isMe
_keysToFetch
_labeledEmailAddress
_labeledPhoneNumber
_messageHandlerDataSource
_messageSendHandlerDelegate
_metadata
_recentIntentHandlers
_resolvedPersons
_setBlocksConnectionAtResume:
_stringByRemovingMessagesControlCharactersFromString:
_stripFZIDPrefix
_url
absoluteString
accountDataSource
accounts
activeAudioPlayer
addListenerID:capabilities:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
addRetractedPartIndex:
album
allExistingChats
allGUIDsForChat:
allIMHandlesForHandle:
allKeysForObject:
allValues
allowedByScreenTime
allowedToShowConversationSync
allowedToShowConversationWithHandleIDs:sync:context:
alternativeSpeakableMatches
amount
appendString:
applicationCurrentlyLimited
arePreResolvedSiriMatchesEnabled
array
arrayByAddingObject:
arrayWithCapacity:
arrayWithObjects:count:
artist
assetResourcesForAsset:
attachments
attributeSanitizer
attributedText
attributes
audioMessageFile
audioPlayerBeginInterruption:
audioPlayerDecodeErrorDidOccur:error:
audioPlayerDidFinishPlaying:successfully:
audioPlayerEndInterruption:
audioPlayerEndInterruption:withFlags:
audioPlayerEndInterruption:withOptions:
author
autorelease
bestAccountForService:
bestSenderIdentityForChatWithHandleIDs:
blackholedChatsExist
blockUntilConnected
body
bundleId
businessID
businessNameForUID:updateHandler:
canSendLocationMessageWithLocationManager:withError:
chat
chatDataSource
chatForIMHandle:
chatForIMHandles:
chatIdentifier
chatParticipantForSPIHandle:
chatParticipantsForSPIHandles:
chatStyle
chatsContainingRequiredParticipants:
chatsForChatNames:
chatsForMessageIdentifiers:completion:
chatsWithConversationIdentifiers:
checkSensitivePhotos
class
cleanupAudioSession
cnContactWithKeys:
code
commSafetyDataSource
commSafetyRequestsManager
commSafetySettingsManager
commSafetyUIEnabled
compare:
compareChatByDate:
componentsForContact:
confirmPlayAudioMessage:completion:
confirmPlayMessageSound:completion:
confirmSearchForMessages:completion:
confirmSendMessage:completion:
confirmSetMessageAttribute:completion:
confirmUnsendMessages:completion:
confirmationRequiredWithPersonToConfirm:
conformsToProtocol:
connectToIMDaemonController
contactIdentifier
contactIdentifierToUnifiedContactIdentifierCache
contactIdentifiers
contactIdentifiersForParticipantsInChat:
contactIdentifiersMatchingHandle:
contactIdentifiersMatchingHandleID:
contactIdentifiersMatchingINPersonHandle:
contactIdentifiersMatchingSPIHandle:
contactResolutionResultForContacts:matchingRecipient:
contactStore
contactStoreDidChange:
contactWithIdentifier:
contactsDataSource
contactsMatchingINPerson:
contactsMatchingPredicate:forPerson:
contactsWithDuplicateNamesAmongContacts:
containsDate:
contents
conversationIdentifier
conversationIdentifiers
copy
coreTelephonySubscriptionsDataSource
count
countByEnumeratingWithState:objects:count:
countryCode
createAudioPlayerWithIdentifier:
currency
customIdentifier
data
date
dateForLastReadMessageInChat
dateTimeRange
debugDescription
debugLogString
defaultCenter
defaultManager
description
descriptorForRequiredKeysForStyle:
descriptorForUsedKeys
deviceHasMultipleSubscriptions
dictionaryWithCapacity:
dictionaryWithObjects:forKeys:count:
didRegisterForContactStoreChangeNotifications
disambiguationWithPeopleToDisambiguate:
disambiguationWithStringsToDisambiguate:
displayID
displayName
distantFuture
distantPast
domain
effect
eligibilityForEditType:messagePartIndex:
emailAddresses
endDateComponents
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
episodeName
errorWithDomain:code:userInfo:
evaluateWithObject:
exceptionWithName:reason:userInfo:
existingChatForAddresses:allowRetargeting:bestHandles:
existingHandlerForIntentIdentifier:
expressiveSendIdFromMessageEffectType:
expressiveSendStyleID
fetchAssetsWithLocalIdentifiers:options:
file
fileManagerDataSource
fileTransferCenterDataSource
fileTransferGUIDs
filterUsingPredicate:
findValidMappingOfRequestedRecipientToChatParticipantAmongMatches:
firstIndex
firstObject
forceTriggerResumeNotification
genre
getResourceValue:forKey:error:
groupName
guid
guidForNewOutgoingTransferWithLocalURL:
handle
handleFromContact
handleID
handleIDForSenderIdentity:
handlePlayAudioMessage:completion:
handlePlayMessageSound:completion:
handleResolutionResultForHandles:resolvedContactForAlternatives:recipient:
handleSearchForMessages:completion:
handleSendMessage:completion:
handleSetMessageAttribute:completion:
handleToContactIdentifierCache
handleType
handleUnsendMessages:completion:
handlerForIntent:
handlesAndServicesForChatGuids:handles:services:
handlesAndServicesForPersons:handles:services:
hasAdjustments
hasMessagingAccount
hasOriginatingDeviceIdsIdentifier
hasPrefix:
hash
iMessageEnabledForSenderLastAddressedHandle:simID:
icons
identifier
identifiers
imAssistantAudioPlayer:didUpdateState:
imHandle
im_copySecurityScopedResourceAtURL:toDestination:error:
im_stripCategoryLabel
im_temporaryDirectoryPathForFilename:
images
includeRead
includeUnread
indexOfObjectIdenticalTo:
init
initWithAddress:countryCode:isMe:
initWithAmount:currencyCode:
initWithArray:
initWithArray:copyItems:
initWithAttributeSanitizer:intentIdentifier:
initWithAttributes:
initWithAttributes:sanitizer:
initWithBusinessID:
initWithCNLabeledEmailAddress:contact:
initWithCNLabeledPhoneNumber:contact:
initWithCapacity:
initWithChat:resolvedPersons:
initWithCode:userActivity:
initWithCommSafetyRequestsManager:commSafetySettingsManager:
initWithContentsOfURL:error:
initWithDataSource:attributeSanitizer:intentIdentifier:
initWithDataSource:delegate:intentIdentifier:
initWithDataSource:intentIdentifier:
initWithDataSource:keysToFetch:intentIdentifier:
initWithDelegate:identifier:
initWithHandle:contactIdentifiers:isMe:
initWithIMHandle:handleFromContact:
initWithIdentifier:conversationIdentifier:content:dateSent:sender:recipients:groupName:dateMessageWasLastRead:numberOfAttachments:messageType:messageEffectType:referencedMessage:serviceName:
initWithIntentIdentifier:
initWithKeyOptions:valueOptions:capacity:
initWithLabel:value:
initWithObjects:
initWithPersonHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:
initWithSiteName:summary:title:itemType:originalURL:imageURLs:iconURLs:creator:linkMediaType:iTunesStoreIdentifier:iTunesStoreFrontIdentifier:songTitle:songArtist:songAlbum:albumName:albumArtist:musicVideoName:musicVideoArtist:artistName:artistGenre:playlistName:playlistCurator:radioName:radioCurator:softwareName:softwareGenre:softwarePlatform:bookName:bookAuthor:audioBookName:audioBookAuthor:audioBookNarrator:podcastName:podcastArtist:podcastEpisodeName:podcastEpisodePodcastName:podcastEpisodeArtist:podcastEpisodeReleaseDate:tvEpisodeEpisodeName:tvEpisodeSeasonName:tvEpisodeGenre:tvSeasonName:tvSeasonGenre:movieName:movieGenre:tvShowName:movieBundleName:movieBundleGenre:appleTvTitle:appleTvSubtitle:
initWithStartDate:endDate:
initWithString:attributes:
initWithStringValue:
initWithURL:metadata:
initWithValue:type:
initWithValue:type:label:
initWithVocabularyIdentifier:spokenPhrase:pronunciationHint:
insertObject:atIndex:
instantMessageWithText:flags:threadIdentifier:
instantMessageWithText:messageSubject:fileTransferGUIDs:flags:threadIdentifier:
intValue
integerValue
intentIdentifier
isBlackholed
isBusinessChat
isConnected
isContactLimitsFeatureEnabled
isEqual:
isEqualToString:
isFileURL
isGroupChat
isInternationalSpamFilteringEnabled
isKindOfClass:
isLikePhoneNumber:
isMainThread
isMe
isMemberOfChat
isMemberOfClass:
isModernXPCEnabled
isOperational
isOutgoing
isPhoneNumber:equivalentToExistingPhoneNumber:
isPlaying
isRead
isSensitiveFileAttachmentURLs:chat:completion:
isSensitiveImage:withChatID:completionHandler:
itemType
joinState
keyEnumerator
keysToFetch
label
labeledEmailAddress
labeledPhoneNumber
lastAddressedHandleID
lastFinishedMessageDate
lastObject
lastPathComponent
length
localizedDescription
localizedStringFromPersonNameComponents:style:options:
locationAuthorizationDenied
locationManagerDataSource
lock
longLongValue
mainBundle
makeIMMessageFromText:
makeINMessage:message:numberOfAttachments:personProvider:referencedINMessage:content:
makeRetractedMessageItem:
markMessageAsReadWithGUID:callerOrigin:reply:
markReadForMessageGUID:callerOrigin:queryID:
matchesHandleID:
matchesIMHandle:
matchesPerson:withUnifiedContactIdentifiers:
meContactIdentifier
messageContentsPredicate:
messageEffectTypeFromExpressiveSendId:
messageEffectTypeToExpressiveSendIdDictionary
messageHandlerDataSource
messageIdentifier
messageIdentifiers
messageIsFromBlackholedChat:
messagePartIndex
messageSendHandlerDelegate
messageType
messagesMatchingMessageIdentifiers:completion:
metadata
name
narrator
needsValue
newMessageItemFrom:withText:deleteSubject:withFileTransferGUIDs:
normalizedID
notRequired
notificationIdentifiers
numberOfAttachments
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInteger:
objectAtIndex:
objectAtIndexedSubscript:
objectEnumerator
objectForKey:
objectForKeyedSubscript:
optionsWithAttributes:
optionsWithAttributes:sanitizer:
originalFilename
originalID
originalURL
originatingDeviceIdsIdentifier
outgoingMessageType
participantsWithState:
peerPaymentAmount
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
person
personFromSPIHandle:
personHandle
personHandleLabel
personHandleType
phAssetId
phoneNumbers
phonemeData
plainBody
platform
play
playSendSoundForMessageGUID:
playSendSoundForMessageGUID:callerOrigin:
playerState
podcastName
preciseLocationAuthorized
predicateForContactsMatchingEmailAddress:
predicateForContactsMatchingPhoneNumber:
predicateForContactsWithIdentifiers:
predicateWithBlock:
predicateWithFormat:argumentArray:
prepareToPlay
queryAudioMessageURLForIntent:completion:
raise
rangeOfString:
recipientDisambiguationResultsFromMultipleRelevantChats:
recipientHandleResolutionResultsAllowedByScreentime:error:
recipients
recipientsPredicate:
recipientsResolutionFailureResultWithResult:forRecipient:amongRecipients:
recommendation
referencedMessage
refreshServiceForSending
registerForContactStoreChangeNotificationsIfNecessary
registerGUID:forNewOutgoingTransferWithLocalURL:
registerTransferWithDaemon:
removeAllObjects
removeLastObject
removeObjectAtIndex:
removeObjectForKey:
resolutionResultCode
resolutionResultUnsupportedWithReason:alternativeItems:
resolveAttributeForSetMessageAttribute:withCompletion:
resolveAttributesForSearchForMessages:withCompletion:
resolveContentForSendMessage:withCompletion:
resolveDateTimeRange:
resolveDateTimeRangeForSearchForMessages:withCompletion:
resolveGroupNameForSendMessage:withCompletion:
resolveGroupNamesForSearchForMessages:withCompletion:
resolveMessageContentWithString:
resolveOutgoingMessageTypeForSendMessage:withCompletion:
resolvePersons:forIntent:completionHandler:
resolveRecipientsAndSender:withCompletion:
resolveRecipientsByFindingExistingRelevantChatsForRecipients:withMatchingHandlesByRecipient:fromChats:
resolveRecipientsForSearchForMessages:withCompletion:
resolveRecipientsForSendMessage:completion:
resolveRecipientsForSendMessage:withCompletion:
resolveRecipientsWithCRR:forIntent:completion:
resolveRecipientsWithGroupNameOrConversationIdentifier:forIntent:
resolveRecipientsWithoutCRR:forIntent:completion:
resolveSendersForSearchForMessages:withCompletion:
resolveSpeakableGroupNameForSendMessage:withCompletion:
resolveSpeakableGroupNames:forIntent:
resolveSpeakableGroupNamesForSearchForMessages:withCompletion:
resolvedRecipientsFromChat:
resolvedValue
respondsToSelector:
retain
retainCount
retractPartIndex:fromMessageItem:chat:backwardCompatabilityText:
richLinkMetadata
sanitize:
scoredAlternatives
screentimeAllowedToShowChat:error:
screentimeAllowedToShowConversationWithHandleIDs:error:
searchMessagesWithContents:messageIdentifiers:notificationIdentifiers:chatNames:conversationIdentifiers:recipients:senders:dateTimeRange:attributes:completion:
seasonName
self
sendCurrentLocationMessageWithChat:withLocationManager:withSourceApplicationIdentifier:foregroundAssertionForBundleIdentifier:completion:
sendEditedMessage:previousMessage:partIndex:editType:toChatIdentifier:style:account:backwardCompatabilityText:
sendFileAttachmentURLs:chat:executionContext:expressiveSendStyleID:idsIdentifier:sourceApplicationID:sentMessages:completion:
sendLocalFileAttachmentURLs:chat:executionContext:expressiveSendStyleID:idsIdentifier:sourceApplicationID:sentMessages:completion:
sendLocationMessageToChat:sourceApplicationID:sentMessages:completion:
sendMessage:
sendMessage:toChat:
sendMessageWithDraft:expressiveSendStyleID:idsIdentifier:executionContext:sourceApplicationID:toChat:
sendMessagesWithText:currentLocation:sharedLinkURL:audioMessageAttachment:photoLibraryAttachment:fileAttachments:expressiveSendStyleID:idsIdentifier:executionContext:toChat:completion:
sendPhotoAssetMessageToChat:executionContext:expressiveSendStyleID:idsIdentifier:phAsset:sentMessages:sourceApplicationID:completion:
sender
sendersPredicate:
serviceName
setActive:error:
setAttributeSanitizer:
setAuxImageForTransfer:value:
setAuxVideoForTransfer:value:
setBalloonBundleID:
setCategory:withOptions:error:
setChat:
setContactStore:
setCustomIdentifier:
setDateEdited:
setDelegate:
setDidRegisterForContactStoreChangeNotifications:
setExpressiveSendStyleID:
setIncludeGuestAssets:
setIncludeHiddenAssets:
setIntentIdentifier:
setIsMe:
setLastAddressedHandleID:
setLastAddressedSIMID:
setLinkMetadata:
setMessageHandlerDataSource:
setMessageSendHandlerDelegate:
setMessages:
setMetadata:
setNetworkAccessAllowed:
setNotificationIDSTokenURI:
setObject:forKey:
setObject:forKeyedSubscript:
setPaymentAmount:
setResolvedPersons:
setSentMessages:
setSourceApplicationID:
setValue:forKey:
setupAudioSession
sharedController
sharedFeatureFlags
sharedInstance
sharedLink
sharedManager
sharedRegistry
shouldContinueToExamineRelevantChatsWithMatches:nextChat:
simIDForSenderIdentity:
siriMatches
siteName
smsEnabled
smsService
sortedArrayUsingComparator:
sortedArrayUsingSelector:
soundType
speakableGroupName
speakableGroupNames
specialization
spiHandleForIMHandle:isMe:
spiHandleToPersonCache
spokenPhrase
spokenPhrasesForSpeakableStrings:
startDateComponents
startPlayingAudioURL:
stop
stopPlaying
storeFrontIdentifier
string
stringByReplacingOccurrencesOfString:withString:
stringFromContact:style:
stringGUID
stringValue
stringWithFormat:
substringFromIndex:
subtitle
successWithResolvedDateComponentsRange:
successWithResolvedMessageAttributeOptions:
successWithResolvedOutgoingMessageType:
successWithResolvedPerson:
successWithResolvedString:
superclass
synchronousRemoteDaemon
text
time
timeIntervalSinceDate:
timeIntervalSinceNow
title
transferGUID
trimmedString
type
typeIdentifier
unarchivedObjectOfClass:fromData:error:
unifiedContactIdentifierForContactIdentifier:
unifiedContactIdentifiersForPerson:
unifiedContactWithIdentifier:keysToFetch:error:
unifiedContactsMatchingPredicate:keysToFetch:error:
uniqueID
unlock
unsupported
unsupportedForReason:
unsupportedWithReason:
updateRecentlyUsedHandlersWithHandler:
updateSenderIdentityForNewlyCreatedChat:
value
vocabularyIdentifier
vocabularyIdentifiersFromSpeakableStrings:
writeDataForAssetResource:toFile:options:completionHandler:
zone
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v28@0:8@16B24
v32@0:8@16@24
v24@0:8@16
v32@0:8@16Q24
v28@0:8@"AVAudioPlayer"16B24
v32@0:8@"AVAudioPlayer"16@"NSError"24
v24@0:8@"AVAudioPlayer"16
v32@0:8@"AVAudioPlayer"16Q24
@32@0:8@16@24
v16@0:8
q16@0:8
@"<IMAssistantAudioPlayerDelegate>"
@"NSString"
@"AVAudioPlayer"
@24@0:8Q16
@32@0:8Q16@24
@"NSURL"
@"LPLinkMetadata"
v32@0:8@16@?24
v32@0:8@"INSendMessageIntent"16@?<v@?@"INSendMessageIntentResponse">24
v32@0:8@"INSendMessageIntent"16@?<v@?@"NSArray">24
v32@0:8@"INSendMessageIntent"16@?<v@?@"INStringResolutionResult">24
v32@0:8@"INSendMessageIntent"16@?<v@?@"INOutgoingMessageTypeResolutionResult">24
v32@0:8@"INSendMessageIntent"16@?<v@?@"INSpeakableStringResolutionResult">24
@40@0:8@16@24@32
B32@0:8@16^q24
B64@0:8@16@24@32q40@48@56
@24@0:8@16
v40@0:8@16@24@?32
v80@0:8@16@24q32@40@48@56@64@?72
v48@0:8@16@24@32@?40
v80@0:8@16q24@32@40@48@56@64@?72
v100@0:8@16B24@28@36@44@52@60@68q76@84@?92
B32@0:8@16^@24
B32@0:8@16@24
@"<IMAssistantMessageSendHandlerDelegate>"
v32@0:8@"IMMessage"16@"IMChat"24
q24@0:8@16
@48@0:8@16@24q32@40
@40@0:8@16q24@32
@56@0:8@16@24@32q40@48
@24@0:8@?16
v32@0:8@"INSearchForMessagesIntent"16@?<v@?@"INSearchForMessagesIntentResponse">24
v32@0:8@"INSearchForMessagesIntent"16@?<v@?@"NSArray">24
v32@0:8@"INSearchForMessagesIntent"16@?<v@?@"INMessageAttributeOptionsResolutionResult">24
v32@0:8@"INSearchForMessagesIntent"16@?<v@?@"INDateComponentsRangeResolutionResult">24
@"<IMAssistantMessageAttributeSanitizer>"
v32@0:8@"INUnsendMessagesIntent"16@?<v@?@"INUnsendMessagesIntentResponse">24
v48@0:8q16@24@32@40
@40@0:8@16@24^@32
@32@0:8@16^@24
@"CNContact"40@0:8@"NSString"16@"NSArray"24^@32
@"NSArray"40@0:8@"NSPredicate"16@"NSArray"24^@32
@"CNContact"32@0:8@"NSArray"16^@24
v32@0:8@16q24
v32@0:8@"IMAssistantAudioPlayer"16q24
v32@0:8@"INPlayAudioMessageIntent"16@?<v@?@"INPlayAudioMessageIntentResponse">24
@"IMAssistantAudioPlayer"
@"NSMutableArray"
@"IMHandle"
@"IMAssistantHandleFromContact"
@"INPerson"24@0:8@"IMSPIHandle"16
@"<IMAssistantMessageHandlerDataSource>"
@"NSArray"
@36@0:8@16B24^@28
@"IMChat"24@0:8@"NSString"16
@"IMChat"36@0:8@"NSArray"16B24^@28
@"IMChat"24@0:8@"IMHandle"16
@"IMChat"24@0:8@"NSArray"16
@"NSArray"24@0:8@"IMChat"16
@"NSArray"16@0:8
@"IMHandle"24@0:8@"NSString"16
@"TUSenderIdentity"24@0:8@"NSArray"16
@"NSString"24@0:8@"TUSenderIdentity"16
B32@0:8@"IMChat"16^@24
B32@0:8@"NSArray"16^@24
@"<IMAssistantContactsDataSource>"16@0:8
@"<IMAssistantChatDataSource>"16@0:8
@"<IMAssistantAccountDataSource>"16@0:8
@"<IMAssistantCoreTelephonySubscriptionsDataSource>"16@0:8
@"<IMLocationManager>"16@0:8
@"<IMAssistantFileManager>"16@0:8
@"<IMFileTransferCenter>"16@0:8
@"<IMAssistantCommSafetyManager>"16@0:8
@"NSCache"16@0:8
v20@0:8B16
@"CNContactStore"
v32@0:8@"INPlayMessageSoundIntent"16@?<v@?@"INPlayMessageSoundIntentResponse">24
v40@0:8@"NSURL"16@"NSString"24@?<v@?B@"NSError">32
@"IMCommSafetyRequestsManager"
@"IMCommSafetySettingsManager"
@24@0:8q16
@28@0:8@16B24
@64@0:8q16@24q32@40@48@56
@"IMChat"
v32@0:8@"INSetMessageAttributeIntent"16@?<v@?@"INSetMessageAttributeIntentResponse">24
v32@0:8@"INSetMessageAttributeIntent"16@?<v@?@"INMessageAttributeResolutionResult">24
@"CNContact"
@"CNLabeledValue"
@32@0:8q16@24
@40@0:8q16@24@32
@36@0:8@16@24B32
B40@0:8@16@24@?32
v44@0:8@16B24q28@?36
v52@0:8@16@24B32q36@?44
v40@0:8@16^@24^@32
v32@0:8q16@?24
v96@0:8@16@24@32@40@48@56@64@72Q80@?88
Q24@0:8Q16
