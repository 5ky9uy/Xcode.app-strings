ICMusicSubscriptionStatusCacheDidChangeNotification
ICMusicSubscriptionStatusCacheUnderlyingCachingPropertiesDidChangeNotification
com.apple.itunescloud.ICMusicSubscriptionStatusDidChangeDistributedNotification
lastKnownOSVersion
lastKnownActiveDSID
responses
com.apple.iTunesCloud.ICMusicSubscriptionStatusCache.accessQueue
com.apple.iTunesCloud.ICMusicSubscriptionStatusCache.calloutQueue
com.apple.iTunesCloud.ICMusicSubscriptionStatusCache.persistenceQueue
v16@?0@"ICMusicSubscriptionStatusCacheKey"8
ICMusicSubscriptionStatusCache.m
Caching a non final subscription status request is not allowed: %@.
v32@?0@"ICMusicSubscriptionStatusCacheKey"8@"ICMusicSubscriptionStatusResponse"16^B24
B32@?0@"NSURLQueryItem"8q16^B24
v32@?0q8@"NSString"16^B24
recoAlgoId
Missing required expirationDate
Type: CloudCredentials
Type: PICRequest
Expires: %@
Data: %ld Bytes
%@ [%@]
queueContext
keybag
isRequestingSlot
v16@?0@"NSDictionary"8
com.apple.iTunesCloud.ICSAPSession.SharedAccessQueue
@"ICSAPSession"16@?0@"NSArray"8
com.apple.iTunesCloud.ICSAPSession.calloutQueue
com.apple.iTunesCloud.ICSAPSession.prepareFairPlayContextOperationQueue
reactionId
ICStoreRequestContext.m
identityStore != nil && identity != nil
<%@: %p [%@/%@; %@]>
 (Macintosh; OS X %@)
 AppleWebKit/%@
 %@/%@
 AppleTV/%@
 model/%@
 hwp/%@
 build/%@
dt:%d
 (%@)
delegatedIdentity
identity
identityStore
storeDialogResponseHandler
allowsExpiredBags
personalizationStyle
Mutation not allowed beyond initialization.
Frameworks
WebKit.framework
_MSVHasher_SipHash_1_3_Append32: invalid byte count detected [byteCount & 7, tail == 0]: %lld
_MSVHasher_SipHash_1_3_Append32: invalid byte count detected [byteCount & 3]: %lld
controlSettings
titleMessage
detailMessage
%@ %@
target
messageType
carousel
priority
templateURL
maximumDisplays
startDate
endDate
hasCloseButton
contentPages
rule
webArchiveURL
modalPresentationStyle
globalPresentationPolicyGroup
assetPrefetchStrategy
holdoutEvent
localNotification
impressionEvent
presentationTriggers
applicationBadge
reportingEnabled
Modal
Native
(unknown: %i)
Card
Fullscreen
Normal
Restricted
Default
Immediate
Never
xpab
ICMusicUserStateCookies.m
Attempt to mutate after being initialized.
library-artist
use-artist
artist-name
rep-cloud-id
artist-id
com.apple.itunescloudd.ICCloudClientCloudService.serial.queue
externalId
participantUUID
storefront
unreliablePlaybackSyncStatus
metadata
downloadKey
sinfs
fileSize
file-size
vacToken
fileExtension
null
NSData * _Nonnull MSVDataFromHexString(NSString * _Nonnull __strong)
NSString+MSVAdditions.h
Passed non-hex string into MSVDataFromHexString: %@
LWHQ
1080p
720p
hdmv
480p
SDMV
com.apple.iTunesCloud.ICStorePlatformRequestOperation.accessQueue
Failed to run SP lookup
%.0f
buster
events
override-headers
auto-play-mode
build-features
build-version
container-ids
container-type
end-position-in-milliseconds
end-reason-type
enqueuer
external-identifier
feature-name
household-id
internal-build
media-duration-in-milliseconds
media-type
persistent-id
personalized-container-id
player
play-mode
private-enabled
queue-grouping-id
event-reason-hint-type
reco-data
repeat-play-mode
bundle-id
bundle-version
sb-enabled
siri-initiated
shuffle-play-mode
source-type
start-position-in-milliseconds
store-front
timed-metadata
milliseconds-since-play
event-type
shared-activity-devices-current
shared-activity-devices-max
utc-offset-in-seconds
display-type
character-displayed-count
lyric-language
audio-quality-targeted
audio-quality-provided
user-preference-audio-quality
user-preference-playback-format
album-adam-id
artist-adam-id
cloud-album-id
cloud-playlist-id
global-playlist-id
playlist-version-hash
station-hash
station-personalized-id
auc-adam-id
lyric-id
purchased-adam-id
radio-adam-id
orig-sf-adam-id
reporting-adam-id
subscription-adam-id
audio-sample-rate-in-hz
audio-bit-depth
bit-rate-in-bps
audio-channel-type
playback-format
%llu
11-15
16-20
21-25
feature-movie
music-video
tv-episode
cloud-id
itemName
sort-name
artistName
sort-artist
playlistName
sort-album
playlistArtistName
composerName
sort-composer
genre
genreId
playlistId
trackCount
trackNumber
duration
explicit
bitRate
comments
dateAdded
bitrate
gapless
isMasteredForItunes
sampleRate
versionRestrictions
rank
yyyy-MM-dd'T'HH:mm:ss'Z'
vendorId
com.apple.itunescloud.delegate-account-store
ICError
NotSupported
Timeout
Cancelled
SerializationFailed
FirstUnlockRequired
PrivacyAcknowledgementRequired
ItemNotFound
OperationNotAllowed
DaemonConnectionEstablishmentFailed
DaemonConnectionMessageSendingFailed
NotEnoughMemory
ConnectionFailed
InvalidRequest
InvalidResponse
RetryRequired
ResourceUnavailable
BagLoadingFailure
BagMissingKey
BagInvalidValueType
MissingCertificateData
InvalidUserIdentity
AccountNotFound
AuthenticationNotAllowed
AuthenticationFailed
SiriServiceUnavailable
SiriServiceFailed
FairPlayHardwareInfoInvalid
FairPlayContextCreationFailed
FairPlayInvalidData
FairPlayMissingSICData
MusicSubscriptionCannotInitiateLease
MusicSubscriptionCarrierBundlingHeaderEnrichmentFailed
MusicSubscriptionCapabilityMissing
DatabaseCouldNotOpen
DatabaseReadOnly
DelegationServiceStreamResolutionFailure
DelegationServiceStreamPreparationFailure
DelegationServiceStreamClosed
DelegationServiceInvalidMessage
DelegationServiceDataDecryptionFailure
DelegationServiceDataEncryptionFailure
DelegationServiceSecuritySettingsLoadingFailure
InvalidAuthenticationToken
TelephonyFailedToSendTextMessage
MusicUserTokenRevoked
MusicUserTokenFetchingUnauthorized
MusicUserTokenFetchingFailed
MusicUserTokenCachingFailed
MusicUserTokenInvalidationFailed
DeveloperTokenFetchingFailed
DeveloperTokenInvalidationFailed
DeveloperTokenFormatUnsupported
AssetDownloadSessionUnavailable
AssetDownloadMediaResponseItemInvalid
AssetDownloadMediaServicesLost
UnknownCode/%lld
ICStoreServerError
AccountMissing
SecureTokenMissing
WeakTokenMissing
BadToken
ExpiredToken
ASNTokenMissing
StreamingSlotTransferWarning
StreamingSlotLimit
StreamingSlotTaken
StreamingSlotTakenWithFamilyUpsell
ContentRestoreNotAvailable
PodcastEpisodeNotFound
AgeVerificationRequiredForExplicitContent
UpgradeToPerformAgeVerification
LinkAccountToPerformAgeVerification
SuzeLeaseNoSlotsAvailable
SuzeLeaseMissingDSID
SuzeLeaseMissingGUID
SuzeLeaseMissingMediaKind
SuzeLeaseMissingClientData
SuzeLeaseInvalidAuthenticationToken
SuzeLeaseMissingLeaseID
SuzeLeaseExceptionThrown
SuzeLeaseServerCacheMissingLeaseKey
ICMusicSubscriptionCarrierBundlingServerError
StorefrontMismatch
PhoneNumberPortingException
ICRadioServerError
UserOptedOut
UserNotOptedIn
NoStationMatch
FallbackStationFound
PlayHistoryClearFailed
UserIsFreeloader
UnableToReturnTracks
NoAvailableVersion
SharedStationWasDeleted
SharedStationNotAvailableForStorefront
StationNotShared
StationSubscriptionFailure
TermsAndConditionsNotAccepted
HeartbeatInvalid
InvalidStation
StreamingSlotLimitReached
SKDKeyCreationFailure
SubscriptionLeaseError
SubscriptionRequired
RestrictedLocation
ICKeyServerError
NoOfflineSlot
ICMediaUserStateError
FailedToCreateSynchronousServer
FailedToCreateAsynchronousServer
FailedToForceRefreshUserState
ICFairPlayError
ICSQLiteError
ICMusicKitServerError
errorCode
Eligibility response not valid %@
fuseCarrierBundleStatus
checkBack
startFuseHeaderEnrichment
startFuseManualSms
hasFuseCarrierBundleSubscription
fuseHeaderEnrichmentMessage
fuseHeaderEnrichmentSessionId
fuseHeaderEnrichmentUrl
fuseSilentSMSMessage
fuseSilentSMSNumber
fuseSmsSessionId
waitTime
isFamily
bitDepth
codec
isSpatialized
skips-used
skips
stationID
tracks
curIndex
v16@?0@"NSMutableArray"8
store
container-id
containerID
Statement already finalized
ICAgeVerificationStateDidChangeNotification
com.apple.iTunesCloud.ICAgeVerificationManager.serialAccess
com.apple.iTunesCloud.ICAgeVerificationManager.concurrentCallout
apple
keychain-access-groups
v16@?0@"ICAgeVerificationState"8
Error retrieving properties for account %@ during age verification - Explicit content allowed and marked with 'E'.
ICAgeVerificationManager - Error retrieving bag during age verification
ICAgeVerificationManager.m
Bag should never be nil when no error was provided
korea
<%@: %p; {
    developerToken: "%@",
    userToken: "%@",
    userTokenFetchingError: %@
Failed to decode valid developer token while initializing instance of ICMusicKitTokensResponse from decoder.
com.apple.itunescloud.in-app-message-service
ICInAppMessagesDidChangeNotification
com.apple.itunescloud.ICInAppMessagesDidChangeDistributedNotification
com.apple.iTunesCloud.ICInAppMessageManager.operationQueue
com.apple.iTunesCloud.ICInAppMessageManager.downloadOperationQueue
com.apple.iTunesCloud.ICInAppMessageManager.accessQueue
v24@?0@"ICInAppMessageEntry"8@"NSError"16
com.apple.iTunesCloud.ICInAppMessageManager.addMessage
com.apple.iTunesCloud.ICInAppMessageManager.updateMessage
com.apple.iTunesCloud.ICInAppMessageManager.removeMessageWithIdentifier
com.apple.iTunesCloud.ICInAppMessageManager.removeAllMessagesForBundleIdentifier
music://itunes.apple.com
content-identifier
level
alert
MusicAlertMessage
_url
actionType
actionUrl
notificationAction
eventVersion
notificationId
notification
topic
xp_amp_notifications
notificationType
Content
details
notificationSubtype
content-available
ams_%@
_bid
notificationRequest
platformId
platformName
com.apple.iTunesCloud.ICInAppMessageManager.syncMessages
com.apple.iTunesCloud.ICInAppMessageManager.resetMessages
com.apple.iTunesCloud.ICInAppMessageManager.reportEvents
com.apple.iTunesCloud.ICInAppMessageManager.flushEvents
com.apple.iTunesCloud.ICInAppMessageManager.downloadResourcesForMessageWithIdentifier
v24@?0@"ICInAppMessageMetadataEntry"8@"NSError"16
com.apple.iTunesCloud.ICInAppMessageManager.updateMetadata
com.apple.iTunesCloud.ICInAppMessageManager.clearMetadataForMessageIdentifier
com.apple.iTunesCloud.ICInAppMessageManager.handleAccountChange
com.apple.itunescloud.ICInAppMessageManager.periodic-poll-activity
v16@?0@"NSObject<OS_xpc_object>"8
v24@?0@"ICInAppMessageConfiguration"8@"NSError"16
v24@?0@"ICIAMSynchronizeMessagesResponse"8@"NSError"16
com.apple.iTunesCloud.ICInAppMessageManager.performSyncRetryIfPending
com.apple.iTunesCloud.ICInAppMessageManager.setShouldDownloadResources
com.apple.iTunesCloud.ICInAppMessageManager.downloadMessageResources
ResourceCache
com.apple.iTunesCloud.ICInAppMessageManager.performCacheConsistencyCheck
RemoveAll
Reset
date
remoteRequestOperationResponseClassName
remoteRequestOperationResponse
remoteRequestOperationError
Attempted to decode an instance of ICRemoteRequestOperationExecutionResponse with an unallowed class name for remoteRequestOperationResponse: %@.
Attempted to encode an instance of ICRemoteRequestOperationExecutionResponse with an unallowed class name for remoteRequestOperationResponse: %@.
salableAdamId
originatorId
addItems
moveItem
participantChange
serverNotice
clientInfo
playNowQueueItems
queueSync
originatorUUID
displayNotice
displayMessage
items
radio
trackGenerationSource
com.apple.iTunesCloud.ICDelegationConsumerNetService.accessQueue
com.apple.iTunesCloud.ICDelegationConsumerNetService.netServiceQueue
com.apple.iTunesCloud.ICDelegationConsumerNetService.calloutQueue
local.
purchaseHistory
music
musicvideo
tvshow
Failed to create an ICURLSession instance
Invalid ICStoreMediaResponseItem object (assetURL=nil)
com.apple.iTunesCloud.ICMediaAssetDownloadRequest.
discretionary.
power.
wifi.
failDownloadOnConstrainedNetworks.
downloadKey=%@
com.apple.iTunesCloud.ICURLSessionManager.accessQueue
UserInteractive
UserInitiated
Utility
Background
com.apple.iTunesCloud.ICURLSessionManager.%@.max%lu
com.apple.SessionTrackerApp
application/json
application/gzip
insertPositionType
radioSource
mediaId
com.apple.iTunesCloud.ICCloudClient.serial.access
com.apple.iTunesCloud.ICCloudClient.serverSetupQueue
disabled
enabled
v24@?0@"NSNumber"8@"NSError"16
v16@?0@"NSArray"8
v24@?0@"NSError"8@"NSArray"16
v16@?0B8B12
v20@?0@"NSError"8f16
com.apple.itunescloud.setupcompleted
com.apple.itunescloudd.jaliscoUpdateInProgressChanged
com.apple.itunescloudd.sagaUpdateInProgressChanged
ICCloudClient.m
userIndentityStore cannot be nil
userIndentity cannot be nil
HasMigratedMusicMatchCellularDataSwitch
com.apple.mobileipod
AllowMatchOnCellular
AllowAutoDownloadOnCellular
com.apple.itunesstored
com.apple.itunesstored.autodownloaddefaultschange
HasMigratedMusicDownloadsOnCellularDataSwitch
AllowsCellularDataDownloads
com.apple.Music-AllowsCellularDataDownloads
unknown reason
initial load
push notification
user initiated poll
periodic poll
periodic reload
user initiated reload
app launch poll
edit initiated poll
edit error reload
subscribed playlist periodic poll
subscribed playlist TTL refresh
subscribed playlist manual refresh
supported sync media types changed
deferred push notification
ICAddToPlaylistBehaviorUndecided
ICAddToPlaylistBehaviorAlwaysAddToLibrary
ICAddToPlaylistBehaviorOnlyAddToPlaylist
ML3MusicLibrary
Class getML3MusicLibraryClass(void)_block_invoke
Unable to find class %s
void *MusicLibraryLibrary(void)
com.apple.iTunesCloud.ICAsyncBlockOperation.accessQueue
com.apple.iTunesCloud.ICRemoteRequestOperationController.accessQueue
v16@?0@"ICRemoteRequestOperationExecutionResponse"8
songId
artworkURL
cancel-download-url
download-id
purchased-redownload
purchaseDate
redownload-parameters
lease-id
v24@?0@"ICRadioFetchMetadataResponse"8@"NSError"16
fetchMetadata
allowed-kinds
allowed-match-status
com.apple.storekit.cloud-service-exempted-from-tcc-access
; lightweightSubscriptionStatus = %@
lightweightSubscriptionStatus
resultCode
serverHostName
serverInstance
true
%@ resultCode=%d token=%@
generatedAtMillis
timeToLiveMillis
lifespanMillis
tokenID
<private>
%@: [%@, expires %@]
tokenString
ttlMillis
unresolved
signed out
Active Account: <%@>
Active Locker Account: <%@>
Autoupdating Active Account
Autoupdating Active Locker Account
Carrier Bundle: %@
Null
Account: <%@>
<%@ %p: [%@]>
delegation
time
deviceID
hasResolvedDSID
 bitRate: %zd
 bitDepth: %zd
channels: %@
codec: %@
 sampleRate: %zd
 spatialized: %@
channelLayoutDescription
spatialized
%c%c%c%c
https://init.itunes.apple.com/bag.xml
cache_entries
build_version
ICURLBagProviderDidUpdateBagNotification
request_context
url_bag
com.apple.iTunesCloud.ICURLBagProvider.access
com.apple.iTunesCloud.ICURLBagProvider.persistence
com.apple.iTunesCloud.ICURLBagProvider.callback
ICURLBagProvider.m
requestContext != nil
v32@?0@"ICURLBag"8Q16^B24
%ld-%@-%@-%@-%@-%@
locale
Failed to fetch url bag
Failed to load payload dictionary
v32@?0@"NSString"8@"ICURLBag"16^B24
%@.plist
URLBags
revision
preferredPlayItemId
expiration
valid
; expirationDate = %@
; isFinalResponse = %@
; needsReload = YES
; subscriptionStatus = %@
isFinalResponse
needsReload
Invalid subscription status value: %@
errorMessage
Subscription status error: %@
removeType
removedItemIds
mz_at_ssl-%@
dsid
sslToken
dsids
com.apple.iTunesCloud.ICDelegationConsumerServiceProtocolHandler.operationQueue
com.apple.iTunesCloud.ICDelegationConsumerServiceProtocolHandler.calloutQueue
ATV-
iOS-
com.apple.iTunesCloud.ICMusicSubscriptionPlaybackRequestOperation.accessQueue
Missing bag key '%@'
POST
followup
lease-only
v24@?0@"NSData"8@"NSData"16
lease
preview
size
%@; shouldSignBody=%d, fields=%@, headers=%@
sessionID
expirationTimeInterval
autoPlay
ICDelegateAccountStoreDidChangeNotification
options not single-writer
Invalid XPC options
Non-concrete user identity: %@
Out-of-scope transaction usage: %@
v16@?0@"<ICDelegateAccountStoreWriter>"8
Cannot use a closed delegate account store: %@
ICMediaUserStateCenterUserStatesDidChangeNotification
com.apple.private.itunescloud.ICUserStateCenter.siri
com.apple.iTunesCloud.ICUserStateCenter.accessQueue
B16@?0@"ICMediaUserState"8
Error creating async server during force refresh user states
Failed to force refresh user states
v24@?0@"<ICMediaUserStateCenterServerProtocol>"8@"NSError"16
Failed to create connection for async server
Failed to create connection for sync server
com.apple.itunescloud.ICStorageManager.accessQueue
CACHE_DELETE_VOLUME
/private/var
CACHE_DELETE_AMOUNT
CACHE_DELETE_PURGE_TIMEOUT
v16@?0^{__CFDictionary=}8
Caches
sharedSessionToken
isExecuting
error
isFinished
com.apple.iTunesCloud.ICAsyncOperation.childOperationQueue-%@
; name = "%@"
; maxConcurrentOperationCount = %ld
????
userInteractive
userInitiated
utility
background
; qualityOfService = %@
com.apple.amp.iTunesCloud.ICNanoPairedDeviceStatusMonitor.queue
com.apple.amp.iTunesCloud.ICNanoPairedDeviceStatusMonitor.callBackQueue
com.apple.nanoregistry.devicedidpair
com.apple.nanoregistry.devicedidunpair
com.apple.nanoregistry.paireddevicedidchangeversion
C5DDE5DD-2FF7-4735-80A3-0108488556DE
NSString *getNRDevicePropertyPairingID(void)
ICNanoPairedDeviceStatusMonitor.m
NRDevicePropertyPairingID
void *NanoRegistryLibrary(void)
PSYInitialSyncStateObserver
Class getPSYInitialSyncStateObserverClass(void)_block_invoke
void *PairedSyncLibrary(void)
NSString *getNRPairedDeviceRegistryDeviceDidBecomeActive(void)
NRPairedDeviceRegistryDeviceDidBecomeActive
NRPairedDeviceRegistry
Class getNRPairedDeviceRegistryClass(void)_block_invoke
NSString *getNRDevicePropertyUDID(void)
NRDevicePropertyUDID
NSString *getNRDevicePropertyIsAltAccount(void)
NRDevicePropertyIsAltAccount
NSString *getNRDevicePropertyCompanionMusicGUID(void)
NRDevicePropertyCompanionMusicGUID
result
com.apple.iTunesCloud.ICDelegationProviderService.accessQueue
com.apple.iTunesCloud.ICDelegationProviderService.netServiceBrowserQueue
com.apple.iTunesCloud.ICDelegationProviderService.identityStoreOperationQueue
ICDelegationProviderService.m
Cannot start XPC service for non-system service.
local
com.apple.iTunesCloud.ICDelegationProviderService.supportedDelegationAccountUUIDsAccessQueue
v32@?0@"ICDelegateToken"8@"ICUserIdentity"16^B24
com.apple.iTunesCloud.ICUserIdentityStoreACAccountBackend.callbackQueue
com.apple.iTunesCloud.ICUserIdentityStoreACAccountBackend.accountStoreDelegateQueue
com.apple.accounts.appleaccount.fullaccess
ICUserIdentityStoreACAccountBackend.m
accountDSID != nil
B32@?0@"ACAccount"8q16^B24
altDSID
carrierDeviceID
cloudBackup
delegated
delegateToken
firstName
iCloudPersonID
lastName
isManaged
sandboxed
subscriptionStatusEnabled
username
ageVerificationExpirationDate
homeUserIdentifiers
cloudLibraryStateReason
activeLocker
active
privateListeningEnabledForHomeUsers
privacyAcknowledgementVersions
DSID
com.apple.itunescloud.ICHTTPArchive.accessQueue
HTTPArchives
request
response
creator
entries
yyyy-MM-dd_HH-mm-ss-SSSS
%@_%@.har
com.apple.itunescloud
method
HTTP/1.1
httpVersion
headersSize
text
postData
bodySize
statusText
mimeType
content
q24@?0@"NSURL"8@"NSURL"16
; client = %@/%@
legacy
musicUserToken
; personalizationMethod = %@
automatic
always
; personalizationStyle = %@
; developerTokenProvider = %@
; playbackAuthorizationToken = %@
; collectionPlaybackAuthorizationToken = %@
personalizationMethod
developerTokenProviderClassName
developerTokenProvider
playbackAuthorizationToken
collectionPlaybackAuthorizationToken
Attempted to decode an instance of ICMusicKitRequestContext with an unallowed class name for developerTokenProvider: %@.
Failed to look up class of developer token provider with name: %@.
Attempted to encode an instance of ICMusicKitRequestContext with an unallowed class name for developerTokenProvider: %@.
ICMusicKitRequestContext.m
Setting up a MusicKit request context with a developer token provider that is not provided by iTunesCloud.framework is not supported.
Cannot append to unknown hasher algorithm
Cannot finalize unknown hasher algorithm
BuildVersion
UNKNOWN
%@/%@
%@/%@%@
<%@ %p [userIdentity:%@]>
baseURL
libraryBagKey
buildIdentifier
purchaseClientIdentifier
requestReason
familyMemberStoreID
userIdentity
userIdentityStore
tccUserIdentity
cloudId
adamId
recommendedContentIds
playbackSync
removeItem
currentItemChange
playbackControlSettings
reaction
replaceQueueItems
currentItemTransition
transitionItemId
default
silent-only
silent-if-possible
always-renew
establish-only
once-a-day
settings
<%@ %p shouldPlaybackRequireOnlineKeys: %@; hasOnlinePlaybackKeys: %@; hasOfflinePlaybackKeys: %@; hasPendingLeaseAcquisition: %@, hasInflightLeaseAcquisition: %@, isTakenDueToLeasePrevention:%@, leaseState: %@; stateReasonDialog: %@>
expired
taken
register-success
environment
device-name-data
serial-number
%lld
affiliateID
Software
participantStates
transportControlStates
currentItemId
initialAVSyncStartItemId
initialAVSyncInitiator
tokenResult
lastError
lastUpdateTime
excludeFromBackgroundRefresh
lockup
play
playlist-product
product
omni
caller
artwork
platform
X-JS-SP-TOKEN
X-JS-TIMESTAMP
com.apple.iTunesCloud.ICStorePlatformRequest.operationQueue
com.apple.iTunesCloud.ICStorePlatformRequest.union
com.apple.iTunesCloud.ICStorePlatformRequest.callout
v24@?0@"<ICStorePlatformResponse>"8@"NSError"16
Batch size must be <= %ld
yyyy-MM-dd HH:mm:ss ZZZ
v32@?0@"ICStoreDialogResponseButton"8Q16^B24
lastUpdatedDate
shouldExcludeFromBackgroundRefresh
ICMusicLibraryAuthTokenStatus.m
playlist
album
artist
tvSeason
radioStation
musicVideo
uploadedAudio
uploadedVideo
tvEpisode
movie
spatial
lossless
hi-res-lossless
atmos
surround
lossy-stereo
artistId
libraryTrackId
collectionName
collectionId
discNumber
contentRatingsBySystem
genreNames
genres
hasLyrics
hasTimeSyncedLyrics
movementCount
movementName
movementNumber
offers
releaseDate
showComposer
formerIds
workName
audioTraits
classicalUrl
YYYY-MM-dd
ICLiveLinkPlaybackCoordinatorMedium.m
Subclass %@ must implement -%@ defined in %@.
ICLiveLinkPlaybackCoordinatorMedium
LamportTimestamp
Identifier
InitialSync
minimal
ICMusicSubscriptionStatusRequestOperation.m
%@ _performSubscriptionStatusURLRequestWithRequestContext:... is required to call its completion handler with either a non-nil response, or a non-nil error.
%@%@
v20@?0@"ICMutableMusicSubscriptionStatus"8B16
com.apple.iTunesCloud.ICURLSession.access
com.apple.iTunesCloud.ICURLSession.operation
com.apple.iTunesCloud.ICURLSession.utility
ICURLSession
Enqueued data request with invalid url '%@'
Too many redirects (%d)
Download request received HTTP status code %@
ICURLSession.m
_enqueue request called with nil request
unsupported request type %d
requestSignature
com.apple.amp.itunescloud.LoadURL
appVersion
appleTimingApp
cachedResponse
connectionReused
connectionType
radioType
radioTechnology
redirectCount
requestMessageSize
requestUrl
responseMessageSize
responseMessageSizeUncompressed
statusCode
fetchStartTime
domainLookupStartTime
domainLookupEndTime
domainLookupTime
connectionStartTime
secureConnectionStartTime
connectionEndTime
connectionTime
requestStartTime
responseStartTime
responseEndTime
responseTime
totalTime
@"NSDictionary"8@?0
B16@?0@"NSURLQueryItem"8
com.apple.amp.iTunesCloud.URLSessionMetrics
device-name
store-front-id
account-id
match-status
song
application/x-apple-plist
com.apple.atc
ICInAppMessageEntryResourceIdentifierWebArchive
ICInAppMessageEntryResourceIdentifierTemplate
com.apple.iTunesCloud.ICInAppMessageEntry.accessQueue
[%@:%@, %@, (valid from %@ - %@), download=%d]
applicationMessage
shouldDownloadResources
didCacheRequiredResources
isBadgingApplication
resourceCache
Banner
Notification
commandType
commandSerialNumber
Remove
v24@?0@"AMSSnapshotBag"8@"NSError"16
No value for bag key '%@'
value for bag key '%@' is unexpected type '%@'
ICCloudClientErrorDomain
ICCloudClientLibraryUploadErrorDomain
com.apple.iTunesCloud.ICDelegateAccountStoreServiceListener.accessQueue
com.apple.iTunesCloud.ICDelegateAccountStoreServiceListener.callbackQueue
v20@?0@"ICMutableUserIdentityProperties"8B16
shuffleMode
availability
noGeneration
dmap.status
dmap.itemid
dmap.longitemid
dmap.dictionary
full-token
full-url
oval-token
oval-url
template-url
supports-layered-image
template-artwork-json
cover-url
cover-artwork-json
com.apple.itunescloudd.isAuthenticatedDidChangeNotification
com.apple.itunescloudd.artworkDownloadsDidCompleteNotification
com.apple.itunescloudd.cloudAddToPlaylistBehaviorDidChangeNotification
com.apple.itunescloudd.enableCloudLibraryFailureTypeChangedNotification
com.apple.itunescloudd.startingInitialImportNotification
com.apple.itunescloudd.activeUserIdentityDidChangeNotification
com.apple.itunescloudd.initialCloudLibraryImportCompletedNotification
main
networkAvailability
cloud
cloudStatusMonitor
mediaUserStateCenterServer
applicationMessageSyncResponses
feature
pattern
anonymous
ICRadioPlaybackHistoryStore.m
com.apple.iTunesCloud.ICRadioPlaybackHistoryStore
com.apple.iTunesCloud.ICRadioPlaybackHistoryStore.callback
com.apple.iTunesCloud.ICRadioPlaybackHistoryStore.identity
com.apple.iTunesCloud
ICRadioPlaybackHistoryStore
%@_%@.plist
com.apple.itunescloudd.playactivity
ICPlayActivityControllerEndpointIdentifierJingle
ICPlayActivityControllerEndpointIdentifierPairedDevice
ICPlayActivityControllerDidRecordPlayActivityEventsNotification
ICPlayActivityControllerEndpointRevisionInformationDidChangeNotification
ICPlayActivityControllerUserInfoKeyEndpointIdentifier
ICPlayActivityControllerUserInfoKeyEndRevision
ICPlayActivityControllerUserInfoKeyStartRevision
ICPlayActivityEndpointRevisionInformation
AdditionalPendingRevisions
CurrentRevision
RevisionVersionToken
com.apple.iTunesCloud.ICPlayActivityController.serialQueue
v32@?0@"_ICPlayActivityFlushSessionInformation"8@"NSArray"16@"NSError"24
ShouldDebugLogRecordedEvents
com.apple.iTunesCloud.ICPlayActivityController.debugLogOperationQueue
v32@?0Q8@"NSString"16@"NSError"24
com.apple.iTunesCloud.ICPlayActivityControllerEndpointRevisionInformationDidChange
remove-push-notification-type-url
notification-type
file-read-data
file-write-data
movpkg
bgColor
textColor1
textColor2
textColor3
textColor4
heic
width
hasP3
imageTraits
textGradient
responseArray
responseDictionary
ICStoreArtworkInfo.m
cropStyle != nil
format != nil
hasTitle
q24@?0@"NSDictionary"8@"NSDictionary"16
{CGSize=dd}
q24@?0@"ICStoreArtworkInfo"8@"ICStoreArtworkInfo"16
MSVHasher+Algorithms.h
contributingParticipantId
container
isExplicit
mediaInfo
sectionType
ICLiveLinkParticipantsDidChangeNotification
ICLiveLinkErrorDomain
ICLiveLinkServerErrorDomain
ICLiveLinkTransportControlStateKey
ICLiveLinkPlaybackSyncParticipantStateKey
com.apple.itunescloud.quic.inprocess
Album
RadioStation
Playlist
Group
AutoPlayStation
UnknownKind-%ld
LiveLinkMaxRetries
LiveLinkMaxRetryWaitPeriod
com.apple.amp.MediaServices.LiveLink.delegateQueue
ICLiveLink.m
Attempted to start an already started live link
forceExternalQR
v24@?0@"_ICLLProtocolMessage"8@"NSError"16
Received current item ID not in queue: %@
ServerAction[AddItems]
@"NSString"16@?0@"_ICLLPlaybackItem"8
B16@?0@"ICLiveLinkIdentity"8
ServerAction[MoveItem]
ParticipantChangeAction
ServerAction[PlayNowQueueItems]
ServerAction[RemoveItem]
ServerAction[ReplaceQueueItems]
Received invalid UUID from server: %@
v16@?0@"ICLiveLinkIdentity<_ICMutableLiveLinkIdentityPrivate>"8
@"ICLiveLinkIdentity"16@?0@"_ICLLParticipant"8
LiveLink action completion handler not called: %@
Unexpected state (pending actions dequeued while processing) action=%@ firstAction=%@
traceID
completion
Attempted to overwrite completion handler for traceID %@
received no participants in response
received no queue in response
received no playback control settings in response
Failed to load initial participants
Failed to load initial queue
ResyncAfterRetry
ResyncAfterConnect
Unexpected client info status %@
Connection ended with error.
v32@?0@"NSString"8@?<v@?@"_ICLLProtocolMessage"@"NSError">16^B24
Requested reconnection because %@.
<%@: %p id=%@ kind=%@ mediaID=%@ featureName="%@">
<%@: %p id=%@ mediaID=%@>
<%@: %p identifier=%@ queueContext=%@ revision=%ld> (%@)
B16@?0@"ICSharedListeningContainer"8
PotluckRadioAutoPlay
Failed to turn AutoPlay %@, Feature not enabled
Error [%ld]
Failed to turn AutoPlay %@
UpdateAfterAutoplayToggled%@
preferredStartIndex out of bounds (%ld/%ld)
v24@?0@"_ICLLRadioSource"8@"_ICLLAutoPlaySource"16
preferredStartIndexPath section out of bounds (%ld/%ld)
preferredStartIndexPath item out of bounds (%ld/%ld)
UpdateAfterRequestError
Failed to replace tracklist
UpdateAfterReplaceQueueItems
position
Failed to insert tracklist at position
UpdateAfterAddItems
Failed to insert tracklist after item
UpdateAfterPlayNow
UpdateAfterRemoveItem
UpdateAfterRemoveItems [bulk]
UpdateAfterRemoveAllItemsAfterItem
Could not find item to move: %@
Could not find item to insert after: %@
UpdateAfterMoveItemBefore
UpdateAfterMoveItemAfter
v24@?0@"_ICLLPlaybackSyncStateQuery"8@"NSError"16
v32@?0@"ICSharedListeningItem"8@"NSIndexPath"16^B24
v32@?0@"ICSharedListeningItem"8q16^B24
v32@?0@"ICSharedListeningContainer"8q16^B24
PBUNSET
PlaybackSync
AddItems
RemoveItem
MoveItem
CurrentItemChange
Reaction
ParticipantChange
ServerNotice
ClientInfo
PlayNowQueueItems
ReplaceQueueItems
CurrentItemTransition
QueueSync
UnknownAction-%ld
INVALID TOKEN
UnexpectedCode-%ld
INTERNAL
INVALID REQUEST
NOT FOUND
QUEUE ACTION MOVE CONFLICT
NO-OP
INVALID AUTOPLAY SETTINGS
INVALID REPEAT MODE SETTINGS
INVALID SHUFFLE MODE SETTINGS
PLAYBACK CONTROL SETTINGS NO-OP
SERVER RESTART
CONTENT UNKNOWN
CONTENT NOT AVAILABLE
CURRENT ITEM CHANGE TIMEOUT
CLEAN_USER_NOT_ALLOWED
com.apple.iTunesCloud.ICSuzeLeaseSession.calloutQueue
com.apple.iTunesCloud.ICSuzeLeaseSession.operationQueue
v24@?0@"ICSuzeLeaseResponse"8@"NSError"16
Unable to start lease session [no valid DSID for user identity] - userIdentity=%@ - properties=%@
guid
icloud-backup-enabled
lightweight
playback
streamingRental
accountHistory
lockerHistory
backend
delegationOptions
style
applicationMessageIdentifier
eventParameters
dpInfo
pinf
sinf
sinf2
com.apple.itunescloudd
music-notification-default
developerToken
options
Missing developer token for user token request.
Missing requesting bundle identifier for user token request.
Missing requesting bundle version for user token request.
Invalid request: %@
Not getting music user token because privacy acknowledgement is required.
No active account.
v16@?0@"NSString"8
Could not find URL to get music user token.
assertion
tcc-acceptance-date
error_description
Response error: %@
This is most likely due to an expired or otherwise invalid developer token
Failed to fetch music user token with %@ status code. %@.
music_token
%@ in response is of unexpected type.
itemId
playerInfoContextRequestToken
Beta
Carrier
Internal
Desense
Lite Internal
Vendor
NonUI
Restore
com.apple.iTunesCloud.ICDeviceInfo.deviceNameUpdateQueue
ProductType
ReleaseType
HardwarePlatform
%012x
UniqueDeviceID
UserAssignedDeviceName
Unknown
%02X
main-screen-width
main-screen-height
cellular-data
CellularTelephonyCapability
wi-fi
wapi
DeviceSupports720p
DeviceSupports1080p
green-tea
main-screen-class
DeviceClass
unknown
System/Library/CoreServices/SystemVersion.plist
watchOS
macOS
tvOS
InternalBuild
AppleLocale
/bfa1LxXd7G1WqHujpjsdA
DeviceClassNumber
IOBuiltin
IOService
IOMACAddress
No Content
Partial Content
Success Range End
Multiple Choices
Not Modified
Redirection Range End
Bad Request
Unauthorized
Forbidden
Not Found
Client Error Range End
Internal Server Error
Not Implemented
Bad Gateway
Service Unavailable
Server Error Range End
%@ (%ld)
NSData * _Nonnull ICDAAPUtilitiesCreateData(void (^__strong _Nonnull)(DKDAAPWriter *__strong))
ICDAAPUtilities.m
block
NSData * _Nonnull ICDAAPUtilitiesCreateDataForContainer(DKDAAPElementCode, void (^__strong _Nonnull)(DKDAAPWriter *__strong))
containerCode
v16@?0@"DKDAAPWriter"8
void ICDAAPUtilitiesWriteProperty(DKDAAPWriter *__strong _Nonnull, DKDAAPElementCode, DKDAAPValueType, __strong id _Nonnull)
DKDAAPValueTypeUInt8 only supports NSNumber.
DKDAAPValueTypeSInt8 only supports NSNumber.
DKDAAPValueTypeUInt16 only supports NSNumber.
DKDAAPValueTypeSInt16 only supports NSNumber.
DKDAAPValueTypeUInt32 only supports NSNumber.
DKDAAPValueTypeSInt32 only supports NSNumber.
DKDAAPValueTypeUInt64 only supports NSNumber.
DKDAAPValueTypeSInt64 only supports NSNumber.
DKDAAPValueTypeString only supports NSString.
DKDAAPValueTypeDate only supports NSDate.
DKDAAPValueTypeBinary only supports NSData.
Cannot make element from unsupported DAAP value type.
void ICDAAPUtilitiesWriteContainer(DKDAAPWriter *__strong _Nonnull, DKDAAPElementCode, void (^__strong _Nonnull)(DKDAAPWriter *__strong))
stationId
seed
-init is not supported, use initWithPlayActivityController
ICFlushPlayActivityEventsOperation.m
initWithPlayActivityController called with nil playActivityController
com.apple.itunesstored.ICPlayActivityFeedFlushOperation.accessQueue
com.apple.iTunesCloud.ICFlushPlayActivityEventsOperation.serialQueue
v28@?0@"NSArray"8Q16B24
v16@?0Q8
v32@?0@"NSNumber"8Q16^B24
v32@?0@"NSArray"8Q16@"NSError"24
dataType
comparisonType
triggerValue
triggerConditionType
bundleIdentifier
Boolean
String
Integer
Equal
NotEqual
LessThan
LessThanOrEqualTo
GreaterThan
GreaterThanOrEqualTo
Countable
Value
Event
ContextProperty
height
com.apple.iTunesCloud.ICInAppMessageMetadataEntry.accessQueue
ic-key
renewalDate
failureCount
%@-%lud.%@
v32@?0@"NSString"8@"ICContentKeyStoreEntry"16^B24
base-url
like-event-url
continue-listening
max-queue-size-in-request
max-upcoming-tracks-to-maintain
max-queue-size-for-autoplay
num-kbsyncs-to-include-for-getTracks
max-protocol-version
header-actions
ICAgeVerifier %p - verificationExpirationDate: %@ - status: %@
Age verification status unknown
Age verification not required
Age verification required
Age verification completed and successful
PRAGMA journal_mode=WAL
PRAGMA cache_size=%ld
-----------------------------------------
com.apple.PlayActivityFeed
PlayActivityEvents.log
com.apple.itunescloud.ICURLRequest.observer
waiting
running
paused
finished
<%@ %p (%@) [%@/%@]>
AppleLanguages
requestState
Data
Download
Upload
AVDownload
Resumed Download
AVAggregateDownload
<unknown>
ICURLRequest.m
There is no retry count for ICURLResponseHandlingRetryReasonNone.
/WebObjects/
HTTP-%ld
B16@?0@"ACAccount"8
v24@?0@"ACAccountType"8@"NSError"16
v32@?0@"ACAccount"8Q16^B24
v24@?0@"ACAccount"8@"NSError"16
ACAccountStore+ICAccountStoreAdditions.m
Invalid parameter not satisfying: %@
account != nil
storeAccountID != nil
homeUserID
playerDelegateInfoToken
triggerName
ICCloudItemIDListItemIDs
ICCloudItemIDListIDTypes
<%@: %p Item ID Count = %lu>
activeDSID
lockerDSID
localStoreAccountProperties
getPushNotificationSettings
setPushNotificationSettings
serviceId=com.apple.Music
application/json; charset=UTF-8
pageId
pageType
pageDetails
targetId
targetType
actionURL
actionDetails
eventType
pageUrl
impressionType
impression
Button
Slider
Close
Navigate
Swipe
Select
com.apple.ICDelegationConsumerService.accessQueue
v52@?0@"ICDelegationConsumerServiceSession"8@"ICUserIdentity"16@"ICDelegateToken"24@"NSString"32@"NSError"40B48
library-album
album-name
activeWatchKitUser
ICTVUserState.m
ICTVUserState instance already exists
v16@?0@"ICTVUserState<ICMutableTVUserState>"8
NoDSID
ICAgeVerificationState %p - explicit content allowed: %u - status: %@ - treatment: %ld - url: %@ - verifier: %@ - error: %@
ICAgeVerificationState.m
_status != ICAgeVerificationStatusUnknown
ICAgeVerificationStateKeyDSID
ICAgeVerificationStateKeyStatus
ICAgeVerificationStateKeyTreatment
ICAgeVerificationStateKeyVerificationURL
ICAgeVerificationStateKeyAgeVerifierExpirationDate
[dictionaryRepresentation[ICAgeVerificationStateKeyDSID] isKindOfClass:[NSString class]]
[dictionaryRepresentation[ICAgeVerificationStateKeyStatus] isKindOfClass:[NSNumber class]]
[dictionaryRepresentation[ICAgeVerificationStateKeyTreatment] isKindOfClass:[NSNumber class]]
[dictionaryRepresentation[ICAgeVerificationStateKeyVerificationURL] isKindOfClass:[NSString class]] || !dictionaryRepresentation[ICAgeVerificationStateKeyVerificationURL]
[dictionaryRepresentation[ICAgeVerificationStateKeyAgeVerifierExpirationDate] isKindOfClass:[NSDate class]] || !dictionaryRepresentation[ICAgeVerificationStateKeyAgeVerifierExpirationDate]
ICMusicSubscriptionCarrierBundlingEligibilityOperation.m
Phone number access is restricted.
v16@?0@?<v@?>8
v24@?0@"ICMusicSubscriptionCarrierBundlingEligibilityResponse"8@"NSError"16
carrier
IMEI
responseCode
error-domain
error-code
error-title
error-underlying
ValidateMobile
SOAPAction
com.apple.iTunesCloud.ICMusicSubscriptionCarrierBundlingEligibilityOperation
@"ICURLSession"8@?0
responseMessage
sessionId
phoneNumber
expirationDate
ICMusicLibraryAuthToken.m
v40@?0@8Q16q24^B32
v32@?0@"_ICValueHistoryItem"8Q16^B24
timestamp
trigger
interval
Calendar
TimeInterval
com.apple.amp.iTunesCloud
Default_Oversize
CloudClient
Delegation
AgeVerification
Subscription
Subscription_Oversize
StoreArtworkInfo
AccountNotifications
LiveLink
LiveLink_Oversize
LiveLinkMedium
QuickRelay_Oversize
Analytics
UserState
flavor
stream-url
stream-key-cert-url
stream-key-server-url
is-itunes-stream
SHOUTCAST
com.apple.siri.client.state.DynamiteClientState%s
.siri_data_changed
shortDebugName
isActive
alternateDSID
homeUserIDs
ageVerificationRequired
v16@?0@"ICMediaUserState<ICMutableMediaUserState>"8
homeUserIds
<%@: %p [%@]>
<%@: %p> firstName=%@ isActive=%dl
"%@" (%@)
ICMediaUserState.m
allowsHandlingNonAuthenticationDialogs
shouldRecordLastAuthenticationDialogResponseTime
v24@?0@"ICMediaRedownloadResponse"8@"NSError"16
v24@?0@8@"NSError"16
Cannot obtain hash from unknown hasher algorithm
APRequestHandler
Class getAPRequestHandlerClass(void)_block_invoke
ICStoreDialogResponseHandler.m
void *AskPermissionLibrary(void)
play-info
<%@: %p serverID=%ld participantID=%@ externalID=%@>
iurl
_MSVHasher_SipHash_1_3_Append64: invalid byte count detected [byteCount & 7, tail == 0]: %lld
playbackSyncState
participant
query
com.apple.amp.iTunesCloud.ICDeviceSetupStatusMonitor.callBackQueue
NSString *getBYSetupAssistantLaunchedDarwinNotification(void)
ICDeviceSetupStatusMonitor.m
BYSetupAssistantLaunchedDarwinNotification
void *SetupAssistantLibrary(void)
NSString *getBYSetupAssistantFinishedDarwinNotification(void)
BYSetupAssistantFinishedDarwinNotification
BYSetupAssistantNeedsToRun
authorized
cancel-purchase-batch
download-queue-item-count
jingleAction
participantQuery
bundleID
syncCommands
repeat_play_mode
shuffle_play_mode
auto_play_mode
Not allowing silent authentication because one was recently attempted already
This action requires authentication to proceed
com.apple.iTunesCloud.ICDispatchOnce
<%@: %p [%@/%@]>
authenticationProviderClassName
authenticationProvider
networkConstraints
Attempted to decode an instance of ICRequestContext with an unallowed class name for authenticationProvider: %@.
Failed to look up class of authentication provider with name: %@.
Attempted to encode an instance of ICRequestContext with an unallowed class name for authenticationProvider: %@.
ICRequestContext.m
inAppMessagesReportEvent
inAppMessagesSerialCheck
inAppMessagesSync
inAppMessagesResourceDomain
inAppMessagesPollingIntervalSeconds
v24@?0@"ICMusicAccountNotificationsSettingsResponse"8@"NSError"16
subscription
promo-content
after
before
asset-info
drm-type
assets
asset-url
stream-protocol
is-skippable
adam-id
track-info
v24@?0@"NSString"8@"NSString"16
album-id
is-explicit
key-server-protocol-type
com.apple.iTunesCloud.ICDelegationServiceConnection.accessQueue
com.apple.iTunesCloud.ICDelegationServiceConnection.calloutQueue
com.apple.iTunesCloud.ICDelegationServiceConnection.streamReaderQueue
com.apple.iTunesCloud.ICDelegationServiceConnection.streamWriterQueue
v16@?0@"NSData"8
playlistGlobalID
albumAdamID
displayText
requiresDelegate
actionParameters
clickEvent
messageRemovalPolicy
None
Local
Global
X-Apple-Tz
X-Apple-I-Client-Time
X-Apple-Connection-Type
X-Apple-Cuid
X-Apple-Issuing-Process
X-Apple-Requesting-Process
X-Apple-NSURLCachePolicy
X-Apple-Store-Front
iCloud-DSID
X-Dsid
X-Guid
X-WHA-Token
X-Apple-Set-Cookie
X-Apple-Set-User-Cookie
X-Apple-AMD
X-Apple-AMD-M
X-Apple-AMD-S
X-Apple-AMD-Action
X-Apple-AMD-Data
X-Apple-MD
X-Apple-MD-M
X-Apple-MD-S
X-Apple-MD-Action
X-Apple-MD-Data
X-Apple-ActionSignature
X-Set-Apple-Store-Front
x-apple-jingle-correlation-key
X-Apple-Device-Model
X-Enqueuer-DSID
X-Request-TimeStamp
x-apple-use-amd
X-Apple-Requesting-Bundle-Id
X-Apple-Requesting-Bundle-Version
X-Apple-Request-Store-Front
X-Apple-Private-Listening
X-Apple-Enqueuer-Private-Listening
X-Apple-Enqueuer-Store-Front
X-Apple-Allow-Auth-Types
X-Mme-Client-Application
X-Apple-Application-Site
apple-timing-app
X-Cache
X-apple-vactoken
X-apple-container-vac-token
itre
itrv
itst
itfe
ICStoreURLRequest.m
[requestContext isKindOfClass:[ICStoreRequestContext class]]
[requestContext=%@]
com.apple.iTunesCloud.ICStoreURLRequest.serialQueue
ICStoreURLRequest
Using store request for url with untrusted host '%@'
en_US_POSIX
yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'
.apple.com
WiFi
NSURLRequestReloadIgnoringCacheData
NSURLRequestReloadIgnoringLocalAndRemoteCacheData
NSURLRequestReturnCacheDataElseLoad
NSURLRequestReloadRevalidatingCacheData
NSURLRequestReturnCacheDataDontLoad
NSURLRequestUseProtocolCachePolicy
com.apple.iTunesCloud.ICDelegateAccountStoreXPCWriter.accessQueue
com.apple.iTunesCloud.ICDelegateAccountStoreXPCWriter.callbackQueue
v16@?0@"NSXPCConnection"8
v28@?0B8@"NSString"12@"NSError"20
; storeRequestContext = %@
; allowsFallbackToExpiredStatus = YES
; allowsFallbackToStatusNeedingReload = YES
never
once
; carrierBundleProvisioningStyle = %@
deepLink
; reason = %@
; shouldIgnoreCache = YES
; shouldReturnLastKnownStatusOnly = YES
; shouldBypassEnforcementOfPrivacyAcknowledgement = YES
; requestIdentifier = %@
allowsFallbackToExpiredStatus
allowsFallbackToStatusNeedingReload
carrierBundleProvisioningStyle
reason
shouldIgnoreCache
storeRequestContext
shouldReturnLastKnownStatusOnly
shouldBypassEnforcementOfPrivacyAcknowledgement
requestIdentifier
revision_id
store_account_id
event_data
events_current_revision
events_revision_version_token
unknown-revision-version
INSERT OR REPLACE INTO events (pid, revision_id, store_account_id, event_data) VALUES (?, ?, ?, ?)
DELETE FROM %@ WHERE %@ <= ?;
Q16@?0Q8
Library
play_activity.sqlitedb
-shm
properties
CREATE TABLE IF NOT EXISTS %@ (%@ INTEGER PRIMARY KEY, %@ INTEGER, %@ INTEGER, %@ BLOB);
CREATE TABLE IF NOT EXISTS %@ (%@ TEXT PRIMARY KEY, %@ TEXT);
PRAGMA legacy_file_format = 0;
PRAGMA journal_mode=WAL;
DROP TABLE IF EXISTS %@;
INSERT OR IGNORE INTO %@ (%@, %@) VALUES ('%@', '%@');
SELECT 
 FROM %@ WHERE (
(%@ == %llu) AND (
%@ BETWEEN %llu AND %llu
 OR %@ BETWEEN %lu AND %lu
v32@?0{_NSRange=QQ}8^B24
) ORDER BY 
%@,%@ ASC;
%@ ASC;
SELECT DISTINCT %@ FROM %@ WHERE %@ IN (
%llu%@
ICPlayActivityTable.m
key cannot be nil
INSERT OR REPLACE INTO %@ (%@, %@) VALUES ('%@', '%@');
DELETE FROM %@ WHERE %@ = '%@';
SELECT %@ FROM %@ WHERE %@ = '%@';
<%p> - accountUniqueIdentifier: %llu - hasOfflinePlaybackKeys=%@ - hasOnlinePlaybackKeys=%@
statusType
reasonType
eligibleOffers
<%@: %p
; statusType = %@
; reasonType = %@
; capabilities = %@
; eligibleOffers = [%@]
_ICPlayActivityEventCoderDataRepresentation
<%@ %p persistentID:%llu version:%lu
    eventType: %lu
    containerID:'%@'
    containerIDs:'%@'
    containerType:%td
    deviceName:'%@'
    endReasonType:%td
    enqueuerProperties:'%@'
    eventDate:%@
    eventTimeZone:%@
    externalID:'%@'
    featureName:'%@'
    householdID:'%@'
    systemReleaseType: %li
    itemDuration:%f
    itemStartTime:%f  
    itemEndTime:%f
    itemType:%td
    itemIDs:'%@'
    mediaType:%td
    offline:%@
    personalizedContainerID:'%@'
    queueGroupingID:'%@'
    hasRecommendationData:true
    privateListeningEnabled: %@
    SBEnabled:%@
    siriInitiated: %@
    sourceType:%td
    storeAccountID:%llu
    storeFrontID:%@
    storeID:'%@'
    requestingBundleIdentifier:'%@'
    requestingBundleVersion:'%@'
    timedMetadata(length):%td
    hasTrackInfo:true
    buildFeatures:[%@]
    autoPlayMode:%td
    repeatPlayMode:%td
    shufflePlayMode:%td
    audioQualityPreference:%lu
    playbackFormatPreference:%lu
    targetedAudioQuality:%@
    providedAudioQuality:%@
    sharedActivityGroupSizeCurrent:%llu
    sharedActivityGroupSizeMax:%llu
; DSID = %@
; phoneNumber = "%@"
; storefrontIdentifier = "%@"
ICMusicSubscriptionStatusCacheKey.m
Cannot set a nil DSID on an instance of %@
Cannot set a nil phoneNumber on an instance of %@
Cannot set a nil storefrontIdentifier on an instance of %@
%lli
MSVHasher+SipHash.h
subtitle
body
images
messageActions
contentParameters
pageEvent
closeClickEvent
cardClickEvent
v12@?0f8
; statusCode = %@
; serverCorrelationKey = "%@"
; serverEnvironment = "%@"
; serverError = %@
errors
code
title
%@ (%ld). %@ (%ld). id=%@
Media Services were lost
Media Services were reset
tmp.%@
v32@?0@"NSValue"8Q16^B24
Media Download
Aggregate Media Download
remoteRequestOperationClassName
remoteRequestOperation
qualityOfService
Attempted to decode an instance of ICRemoteRequestOperationExecutionContext with an unallowed class name for remoteRequestOperation: %@.
Attempted to encode an instance of ICRemoteRequestOperationExecutionContext with an unallowed class name for remoteRequestOperation: %@.
ICRadioGetTracksRequest.m
Request context must not be nil.
getTracks
radio-station-id
station-id
count
clean
station-requests
global-version
include-metadata
include-asset-info
include-station-dict
now-playing-match
queue
playback-context
reason-type
will-continue-playback
v32@?0@"NSURLRequest"8@"ICStoreURLRequestBuilderProperties"16@?<v@?@"NSDictionary"@"NSError">24
v24@?0@"ICMusicSubscriptionStatus"8@"NSError"16
identifier
ruleOperator
subrules
triggerCondition
triggerEventName
requiredApplicationContextBundleIdentifier
Simple
Compound
purchase
mzbookkeeper
com.apple.itunescloud.RecentlyPlayedDidChange
v24@?0@"NSXPCListenerEndpoint"8@"NSError"16
com.apple.itunescloudd.xpc
com.apple.iTunesCloud.ICSuzeLeaseRequest.calloutQueue
media-kind
podcast
audio-book
booklet
tv-show
buildVersion
deviceGUID
timeZoneName
carrierBundleDeviceID
libraryAuthTokenStatus
subscriptionStatus
cloudLibrarySyncStatus
usesListeningHistory
cookies
v16@?0@"ICMusicUserState<ICMutableMusicUserState>"8
ICMusicUserState.m
reasonHintType
subscriptionAdamID
purchasedAdamID
radioAdamID
itemCloudID
lyricsID
equivalencySourceAdamID
containerAdamID
globalPlaylistID
stationHash
stationStringID
cloudAlbumID
cloudPlaylistID
playlistVersionHash
containerType
deviceName
endReasonType
eventDateTimestamp
featureName
itemDuration
itemEndTime
itemStartTime
itemType
mediaType
persistentID
storeAccountID
timedMetadata
recommendationData
storeFrontID
requestingBundleIdentifier
requestingBundleVersion
enqueuerProperties
householdID
privateListeningEnabled
siriInitiated
systemReleaseType
eventTimeZoneName
displayType
characterDisplayedCount
lyricLanguage
buildFeatures
play_mode
audioQualityPreference
playbackFormatPreference
targetedAudioQuality
providedAudioQuality
queueGroupingID
reportingAdamID
sharedActivityGroupSizeCurrent
sharedActivityGroupSizeMax
personalizedContainerID
storeID
externalID
tvShowPurchasedAdamID
tvShowSubscriptionAdamID
internalBuild
eventSecondsFromGMT
<%@ %p
 adamID: %lli
 cloudAlbumID: %@
 cloudPlaylistID: %llu
 globalPlaylistID: %@
 playlistVersionHash: %@
 stationHash: %@
 stationStringID: %@
 stationID: %lli
ICPlayActivityEventContainerIDsAdamID
ICPlayActivityEventContainerIDsCloudAlbumID
ICPlayActivityEventContainerIDsCloudPlaylistID
ICPlayActivityEventContainerIDsGlobalPlaylistID
ICPlayActivityEventContainerIDsPlaylistVersionHash
ICPlayActivityEventContainerIDsStationHash
ICPlayActivityEventContainerIDsStationStringID
ICPlayActivityEventContainerIDsStationID
<default>
com.apple.iTunesCloud.ICDelegationServicePairingSession.accessSerialQueue
com.apple.iTunesCloud.ICDelegationServicePairingSession.calloutQueue
DelegationService-Read-Encryption-Key
DelegationService-Write-Encryption-Key
DelegationService-Salt
; observersCount = %lu
allowExpiredBag
requireValidBag
v32@?0@"<NSCopying>"8@?<v@?@"ICURLBag">16^B24
ICPurchasedBookPurchaseHistoryID
ICPurchasedBookStoreID
ICPurchasedBookTitle
ICPurchasedBookAuthor
ICPurchasedBookGenre
ICPurchasedBookDatePurchased
ICPurchasedBookArtworkURL
ICPurchasedBookRedownloadParameters
ICPurchasedBookVPPLicensed
ICPurchasedBookVPPOrganizationID
ICPurchasedBookVPPOrganizationDisplayName
<%@: %p title='%@'>
v24@?0@"ICRadioLikeResponse"8@"NSError"16
like-value
playerAnisetteMID
playerDeviceGUID
playerInfoContextToken
playerUserAgent
%@: [status=%d, msg='%@']
type
hashValue
playParams
void _MSVHasherAppendBytes(MSVHasher * _Nonnull, const void * _Nonnull, size_t)
NSString * _Nonnull _MSVHashGetDigest(MSVHash)
Cannot obtain digest from unknown hasher algorithm
developer-token-invalidated
music-user-token-invalidated
ICMusicKitURLResponseHandler.m
%@ only knows how to process responses for MusicKit requests. %@ is unsupported.
v32@?0q8@"NSString"16@"NSError"24
Failed to invalidate developer token.
Failed to invalidate music user token.
requestUniqueID
startDelegationResponse
finishDelegationResponse
com.apple.iTunesCloud.NSOperationQueue.ICRequestUtility
com.apple.iTunesCloud.NSOperationQueue.ICRequestUserIntitiated
com.apple.iTunesCloud.NSOperationQueue.ICRequestUserInteractive
com.apple.iTunesCloud.NSOperationQueue.ICRequestBackground
com.apple.iTunesCloud.NSOperationQueue.ICRequestDefault
family
refetch
v24@?0@"ICAuthorizeMachineResponse"8@"NSError"16
ICLibraryAuthServiceClientTokenDidChangeNotification
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider._ICLibraryAuthServiceClientTokenDidChangeDistributedNotification
com.apple.itunescloud.library-auth-token-provider
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider.accessQueue
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider.operationQueue
Unable to fetch library token [no DSID on active account] - properties=%@
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider.allTokens
v24@?0@"NSDictionary"8@"NSError"16
ICLibraryAuthServiceClientTokenProvider.m
getTokenForDSID requires a valid DSID
v24@?0@"ICLibraryAuthServiceClientTokenResult"8@"NSError"16
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider.getTokenResultForDSID
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider.getTokenResultsForDSIDs
addTokenResult requires a valid DSID
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider.addTokenResult
v16@?0@"ICStoreRequestContext"8
v24@?0@"ICLibraryAuthServiceClientTokenResponse"8@"NSError"16
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider._refreshTokensForDSIDs.resultsGroup
v24@?0@"ICLibraryAuthServiceBulkClientTokenResponse"8@"NSError"16
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider._handleLibraryAuthServiceClientTokenDidChangeDistributedNotification
Committing the cache is not allowed from a client
v32@?0@"NSNumber"8@"ICLibraryAuthServiceClientTokenStatus"16^B24
token_refresh_dsid
com.apple.itunescloud.library_auth_token_refresh_timer
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider.tokenRefreshTimer
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider._handleUserIdentityStoreDidChangeNotification
AFMultiUserConnection
Class getAFMultiUserConnectionClass(void)_block_invoke
void *AssistantServicesLibrary(void)
lease-start
lease-renew
content-id
hw.model
subPlayType
player-guid
Music
Books
Podcasts
AppStore
FitnessPlus
ImproveFitnessPlus
v32@?0@"NSString"8@"NSMutableDictionary"16^B24
v32@?0@"<NSCopying>"8@?<v@?@"NSString"B>16^B24
NSString *getOBPrivacyAppleMusicIdentifier(void)
ICPrivacyInfo.m
OBPrivacyAppleMusicIdentifier
void *OnBoardingKitLibrary(void)
NSString *getOBPrivacyTVAppIdentifier(void)
OBPrivacyTVAppIdentifier
NSString *getOBPrivacyiBooksIdentifier(void)
OBPrivacyiBooksIdentifier
NSString *getOBPrivacyPodcastsIdentifier(void)
OBPrivacyPodcastsIdentifier
NSString *getOBPrivacyAppStoreIdentifier(void)
OBPrivacyAppStoreIdentifier
NSString *getOBPrivacyFitnessPlusIdentifier(void)
OBPrivacyFitnessPlusIdentifier
NSString *getOBPrivacyImproveFitnessPlusIdentifier(void)
OBPrivacyImproveFitnessPlusIdentifier
flush-track-cache
hls-key-cert-url
hls-key-server-url
hls-playlist-url
mp-hls-playlist-url
mp-hls-key-cert-url
mp-hls-key-server-url
standard
simplified
@16@?0@"NSString"8
token
ICMusicSubscriptionLeaseSessionLeaseStatusDidChangeNotification
com.apple.iTunesCloud.ICMusicSubscriptionLease.calloutQueue
<%@ %p requestContext: %@; leaseStatus: %@>
v24@?0@"ICMusicSubscriptionPlaybackResponse"8@"NSError"16
com.apple.iTunesCloud.ICMusicSubscriptionLeaseSession.operationQueue
Playback request operation was canceled
com.apple.iTunesCloud.ICMusicSubscriptionLeaseSession.innerOperationQueue
v16@?0@"ICMusicSubscriptionPlaybackRequestOperation"8
v24@?0@"ICMusicSubscriptionLeaseStatus"8@"NSDate"16
v32@?0@"ICMusicSubscriptionPlaybackResponse"8@"NSArray"16@"NSError"24
com.apple.itunescloudd.ICCloudClientAvailabilityService.serial.queue
containerId
serverRevision
accountDSID
syncPending
lastSyncAttempt
lastSyncedOSVersion
com.apple.iTunesCloud.ICInAppMessageStore.accessQueue
com.apple.iTunesCloud.ICInAppMessageStore.callbackQueue
MessageStore.plist
InAppMessages
applicationProperties
messages
v32@?0@8@"NSData"16^B24
v32@?0@8@"NSDictionary"16^B24
client-data
lease-duration
uploaded-audio
uploaded-video
radio-track
library-track
album-artist
playlist-name
compilation
composer-name
copyright
disc-count
disc-number
genre-name
kind
item-name
item-id
track-count
track-number
year
track-ulid
albumArtist
composer
genreName
discCount
cloudID
positionType
queueQuery
player-mid
player-user-agent
enqueuers
wha-token
ICDefaultsCloudMediaLibraryUID
ICDefaultsCachedSubscriptionStatus
ICDefaultsCachedMusicUserTokens
ICDefaultsRegisteredPushNotificationState
ICDefaultsKeyMediaLibraryAccessApplicationIdentifiersWithTCCAcceptanceDates
ICDefaultsKeyLastActiveAccountDSID
ICDefaultsKeyLastCookieHeadersForRevokingMusicUserTokens
ICDefaultsKeyLastAllowedInteractiveAuthenticationTime
ICDefaultsKeyAuthServiceClientTokenCache
ICDefaultsKeyLastAuthenticationDialogResponseTime
ICDefaultsKeyLastKnownLocalStoreAccountProperties
ICDefaultsKeyLastKnownSubscriptionStatusBaseCacheKey
ICDefaultsKeyAccountNotificationsShowInLibrarySwitch
ICDefaultsKeyLastKnownHouseholdID
ICDefaultsKeyShouldForceStreamingOnlyKeysForPlayback
ICDefaultsKeyDeviceClassOverride
ICDefaultsKeyDeviceModelOverride
ICDefaultsKeyFairPlayDeviceTypeOverride
ICDefaultsKeyHardwarePlatformOverride
ICDefaultsKeyProductVersionOverride
ICDefaultsKeyProductPlatformOverride
ICDefaultsKeyNetworkTypeOverride
ICDefaultsKeyNetworkLinkQualityOverride
ICDefaultsKeyChargingStateOverride
ICDefaultsKeyBatteryLevelOverride
ICDefaultsKeySpoofIPhone
ICDefaultsKeySpoofIPad
ICDefaultsKeyBypassBagSanityChecks
ICDefaultsKeyShouldRunAgeVerification
ICDefaultsKeyAgeVerificationExpirationDate
ICDefaultsKeyExplicitContentAllowedForCurrentYear
ICDefaultsKeyExplicitContentAllowedForExpirationYear
ICDefaultsKeyAuthServiceClientTokenTimeToLive
ICDefaultsKeyGrazingPathEnabled
ICDefaultsKeyLastKnownUserAgeVerificationState
ICInternalDefaultsKeyTreatSubscriptionStatusAsExpired
ICInternalDefaultsKeyTreatSubscriptionStatusAsIncomplete
ICInternalDefaultsKeyTreatSagaAddComputerCallAsFailed
ICInternalDefaultsKeyTreatInitialSagaImportAsFailed
ICInternalDefaultsKeyOverrideSubscriptionStatusToGlide
ICInternalDefaultsKeyShouldForcePrivacyAcknowledgementRequiredForMusic
ICInternalDefaultsKeyShouldUseNewBagProtocol
ICInternalDefaultsKeyShouldBypassURLBagCache
ICInternalDefaultsKeySecureKeyRenewalTimeOverride
ICDefaultsCachedSubscriptionStatusIsValid
suppressPrivacyWelcomeScreen
forceLibraryRecommendations
allowLowAffinityRecommendations
reduceLibraryRecommendationsXPCInterval
DownloadOnAddToLibrary
ICEnableMultipathTCP
com.apple.itunescloud.internal
ISIgnoreExtendedValidation
iPhone
12,3
iPad
8,12
t8030
t8027
16.0
ISCacheBuster
assetStoreFront
sbsync
companion-guid
v32@?0@"NSData"8@"NSData"16@"NSError"24
accountless-streaming
subscriptionAdamId
purchaseAdamId
universalLibraryId
%@?%@ %@
is-current-track
pause-position-in-millis
recorded-skip-time-in-millis
expires
pauseTime
skipDate
<%@ %p name:'%@'%@ uniqueIdentifier:%@>
 expirationDate:'%@
uniqueIdentifier
(unknown)
 buildVersion: %@
 deviceGUID: %@
 deviceName: %@
 privateListeningEnabled: %@
 systemReleaseType: %li
 SBEnabled: %@
 storeAccountID: %llu
 storeFrontID: %@
 timeZone:%@
SBEnabled
timeZone
v24@?0@"ICFPSAPContext"8@"NSError"16
com.apple.iTunesCloud.ICUserNotificationManager.access
com.apple.iTunesCloud.ICUserNotificationManager.notification
ICUserNotificationManager.m
no dialog info for user notification %@
sbKeyBag
subKeyBag
wishlistItemName
v24@?0@"ICStorePlatformMetadata"8^B16
v32@?0@"<ICStorePlatformResponse>"8Q16^B24
rawResponse
com.apple.itunescloud.delegation-provider
Set parental control failed [no propertires for user identity]- userIdentity=%@
Set parental control failed  [no DSID for user identity] - userIdentity=%@
manual
participantState
com.apple.itunescloudd.tcchelper
ICCloudServiceStatusActiveAccountDidChangeNotification
ICCloudServiceStatusCapabilitiesDidChangeNotification
ICCloudServiceStatusStorefrontCountryCodeDidChangeNotification
ICCloudServiceStatusStorefrontIdentifierDidChangeNotification
ICCloudServiceStatusAuthorizationWasGrantedNotification
musicCatalogPlayback
addToCloudMusicLibrary
musicCatalogSubscriptionEligible
none
prompt-prohibited
prompt-allowed
Will begin
Already
Will end
Will keep
@"NSMutableArray"16@?0@"NSNumber"8
developer token
v24@?0@"<ICCloudServiceStatusRemoteMonitoringService>"8@"NSString"16
@"NSMutableArray"16@?0@"MSVPair"8
user token
v24@?0@"ICMusicKitTokensResponse"8@"NSError"16
MusicKit tokens
ICCloudServiceStatusMonitor.m
Calling -_beginTransactionForCloudServiceStatusMonitorConnectionWithIdentifier: with the same transaction identifier more than once is invalid.
Failed to get listener endpoint for cloud service status monitor.
request-%@-%@
Encountered error while requesting %@.
TCCAccessRequest completion handler was not called.
v12@?0C8
com.apple.private.tcc.allow
cloud service capabilities
v24@?0Q8@"NSError"16
storefront country code
storefront identifier
cloud service status observation token
v16@?0@"NSUUID"8
ongoing-observation-of-cloud-service-status-%@
relinquishment of cloud service status observation token
com.apple.itunescloudd.launched
uniqueID
startDelegationRequest
finishDelegationRequest
authentication-performed
com.apple.iTunesCloud.ICCloudContentTasteRequestListener.MediaContentTaste
v16@?0@"NSError"8
com.apple.itunescloud.contenttaste
notice
HSCloudAvailabilityControllerCanShowCloudDownloadButtonsDidChangeNotification
HSCloudAvailabilityControllerCanShowCloudTracksDidChangeNotification
HSCloudAvailabilityControllerHasProperNetworkConditionsToShowCloudMediaDidChangeNotification
HSCloudAvailabilityControllerIsCellularDataRestrictedDidChangeNotification
HSCloudAvailabilityControllerNetworkReachabilityDidChangeNotification
com.apple.iTunesCloud.ICCloudAvailabilityController.accessQueue
com.apple.mobileipod-prefsChanged
UIApplicationWillEnterForegroundNotification
UIApplicationDidEnterBackgroundNotification
com.apple.iTunesCloud.ICCloudAvailabilityController
v24@?0^{__CFString=}8^{__CFDictionary=}16
VideosShowCloudMediaEnabledSetting
ICMusicUserTokenCacheDidChangeNotification
com.apple.iTunesCloud.ICMusicUserTokensDidChangeDistributedNotification
com.apple.iTunesCloud.ICMusicUserTokenCache.accessQueue
com.apple.iTunesCloud.ICMusicUserTokenCache.calloutQueue
User Token caching failed
v12@?0B8
Failed to create a key for the Music User Token Cache because the key identifier and/or the team identifier could not be derived from developer token "%@".
Failed to create a key for the Music User Token Cache because there was no DSID in the user identity for the request.
%lli;%@;%@
com.apple.iTunesCloud.ICDelegationProviderServiceSession.accessQueue
com.apple.iTunesCloud.ICDelegationProviderServiceSession.calloutQueue
v24@?0@"ICDelegationServiceSecuritySettings"8@"NSError"16
v32@?0@"NSInputStream"8@"NSOutputStream"16@"NSError"24
v24@?0@"ICPBDGSResponse"8@"NSError"16
v28@?0@"ICPBDGSFinishDelegationRequest"8@"NSError"16B24
v32@?0@"ICPBDGSStartDelegationRequest"8@"NSDictionary"16@"NSError"24
v20@?0B8q12
Server requested authentication
Failed to get verification context for identity %@
silent
station-dict
tracklist-action-type
station-track-dict
queueId
explicitSetting
storefronts
currentRadioStationId
demarkationPos
error-value
error-message
traceId
command
action
token-ttl-in-seconds
-wal
com.apple.itunescloud.ICUserNotificationSettingsDidChangeNotification
com.apple.itunescloud.ICUserNotificationSettingsAreAuthorizedUserInfoKey
<%@: %p; identity = %@; identityStore = %@>
_MSVHasher_SipHash_1_3_Append64: invalid byte count detected [byteCount & 3]: %lld
_itsdlgt._tcp.
com.apple.itunescloud.remote-request-execution-service
Media/EnhancedAudioSharedKeys/
<%@ %p (%@, status:%d, persistable:%d)>
com.apple.iTunesCloud.ICContentKeySession.accessQueue
<%@ %p (%@, requestOfflineKeys:%d)>
contentKeySpecifiersEligibleForPreloading
FromCache
Success
Error-%@-%lld
Fallback
v24@?0@"ICSecureKeyDeliveryResponse"8@"NSError"16
v32@?0@"NSString"8@"NSDate"16^B24
v24@?0@"NSString"8^B16
v32@?0@?<v@?>8Q16^B24
com.apple.Music
com.apple.tv
com.apple.iBooks
com.apple.podcasts
com.apple.AppStore
com.apple.NanoMusic
com.apple.NanoBooks
com.apple.TVMusic
com.apple.TVWatchList
NSString * _Nonnull ICBundleIdentifierForSystemApplicationType(ICSystemApplicationType)
ICSystemApplication.m
No bundle identifier defined for application type %d
clientType
v24@?0@"AMSMediaToken"8@"NSError"16
Media API Token Service responded with status code: %@. This suggests that "%@" was likely not registered as a valid client identifier.
Media API Token Service's response was invalid (status code: %@).
Media API Token Service's response was invalid.
Failed to fetch media token from %@.
<%@ %p securityMode: %li hasPassword: %@>
com.apple.iTunesCloud.ICDelegationServiceSecuritySettings.receiverSerialQueue
accessControlLevel
v16@?0^v8
com.apple.iTunesCloud.ICDelegationServiceSecuritySettings.senderSerialQueue
v16@?0^{__CFString=}8
APSSettingsGetInt64
void *AirPlaySupportLibrary(void)
ICDelegationServiceSecuritySettings.m
int64_t soft_APSSettingsGetInt64(CFStringRef, OSStatus *)
AUUID-
DeviceName
ServiceVersion
SecurityMode
v32@?0@"NSString"8@"NSData"16^B24
Delegation UUIDs: %@
Delegation UUIDs: Missing
Device name: %@
Device name: Uknonwn
defaultButton
explanation
initialCheckboxValue
message
m-allowed
isFree
okButtonString
okButtonAction
cancelButtonString
cancelButtonAction
otherButtonString
otherButtonAction
subtarget
authorization
cancel
other
Goto
GotoFinance
OpenURL
GoBack
QRCode
redeem-code
Review
RetryRestoreAll
ServiceAction
FamilyPermissionAction
account
<%@ %p responseDictionary: %@>
contentTypeCode
ICMusicSubscriptionStatusDidChangeNotification
_ICMusicSubscriptionStatusDidChangeDistributedNotification
ICUserIdentityForMusicSubscriptionStatusDidChangeKey
ICNewStatusForMusicSubscriptionStatusDidChangeKey
ICOldStatusForMusicSubscriptionStatusDidChangeKey
com.apple.itunescloud.ICMusicSubscriptionStatusDidChangeFollowingPrivacyAcknowledgementDistributedNotification
com.apple.security.exception.mach-lookup.global-name
com.apple.iTunesCloud.ICMusicSubscriptionStatusController.accessQueue
com.apple.iTunesCloud.ICMusicSubscriptionStatusController.callbackQueue
com.apple.iTunesCloud.ICMusicSubscriptionStatusController.operationQueue
v20@?0@"NSString"8B16
v16@?0@"ICRequestContext"8
Disallowing subscription status request for sandboxed user identity %@
v32@?0@"NSUUID"8@"ICMusicSubscriptionStatusRequest"16^B24
com.apple.iTunesCloud.ICDelegationConsumerServiceSession.accessQueue
com.apple.iTunesCloud.ICDelegationConsumerServiceSession.calloutQueue
v32@?0@"ICPBDGSStartDelegationResponse"8@"NSDictionary"16@"NSError"24
v32@?0@"NSNumber"8@"ICDelegationConsumerServiceSessionRequestResult"16^B24
v32@?0@"ICPBDGSFinishDelegationResponse"8@"NSDictionary"16@"NSError"24
v32@?0@"ICUserIdentity"8Q16^B24
v32@?0@"NSString"8Q16^B24
v32@?0@"NSString"8@"NSDictionary"16^B24
v32@?0@"NSDictionary"8@"NSString"16^B24
meta
isAuthenticated
results
storePlatformData
messageID
params
eventID
qrp-01
/SharedListening/stream
SharedListening
music-colistening.itunes.apple.com
music-colistening-sandbox.itunes.apple.com
ICLiveLinkQRConnectionDataSourcePseudonymURI
ICLiveLinkQRConnectionDataSourcePseudonymURIExpirationTimestamp
com.apple.amp.mediaservices.MSVQRConnectionLiveLinkDataSource.serialQueue
Session Discovery
v32@?0@"NSString"8@"NSArray"16@"NSError"24
com.apple.private.alloy.amp.potluck
MediaPlayer
NewPotluckService
com.apple.private.alloy.itunes
Provision Pseudonym
v24@?0@"IDSPseudonym"8@"NSError"16
No account found on service.
User account has no registered URIs.
Failed to provision pseudonym.
Failed to renew pseudonym.
Join Request
Create Request
Get Bag
anonymousHandle
externalParticipantId
parameters
v16@?0@"ICMusicKitRequestContext"8
Received error from session discovery.
x-responding-instance
Session data did not form dictionary.
messageForDisplay
detail
Server Error [%ld]
serverError
Session response contained error: [%ld] %@ %@
session
attributes
joinParams
Session response is missing required fields.
groupId
anonymousHandles
joinToken
v24@?0@"ICURLBag"8@"NSError"16
Missing music API domains.
sharedListening
Missing default music API domain.
Bag is missing country code.
https://%@/v1/shared-media/%@/join/media-sessions/%@
https://%@/v1/shared-media/%@/create/media-sessions
PotluckEnvironment
Production
Carry
Sandbox
Custom
PotluckCustomHostName
Cannot determine environment.
Potluck
1.2.840.113635.100.6.27.61
v28@?0^{__SecTrust=}8B16^{__CFError=}20
v40@?0@"NSObject<OS_sec_protocol_metadata>"8@"NSObject<OS_sec_trust>"16@"NSObject<OS_dispatch_queue>"24@?<v@?B@"NSError">32
MCProfileConnection
Class getMCProfileConnectionClass(void)_block_invoke
ICLiveLinkQRConnectionDataSource.m
void *ManagedConfigurationLibrary(void)
NSString *getMCFeatureExplicitContentAllowed(void)
MCFeatureExplicitContentAllowed
NSString *getMCFeatureMusicVideosAllowed(void)
MCFeatureMusicVideosAllowed
<%@ %p (ckc:%@, renewalDate:%@)>
<redacted>
ICTelephonyPhoneNumberDidChangeNotification
com.apple.iTunesCloud.ICTelephonyController.accessQueue
com.apple.iTunesCloud.ICTelephonyController.telephonyCallbackQueue
CarrierName
Failed to send SMS using telephony slot: %@.
SessionEvent
PlaybackEvent
QueueEvent
ReactionEvent
CustomEvent
Unknown/type=%ld
<ICLiveLinkEvent: %p participant=%@ unknown/invalid>
<ICLiveLinkEvent: %p participant=%@ sessionEvent=%@>
<ICLiveLinkEvent: %p participant=%@ playbackEvent=%@>
<ICLiveLinkEvent: %p participant=%@ queueEvent=%@>
<ICLiveLinkEvent: %p participant=%@ reactionEvent=%@>
<ICLiveLinkEvent: %p participant=%@ customEvent=%@>
<ICLiveLinkEvent: %p participant=%@ unknown/eventType=%ld>
<ICLiveLinkCustomEvent: %p localizedMessage="%@">
<ICLiveLinkPlaybackEvent: %p kind=%@>
<ICLiveLinkQueueEvent: %p unknown/invalid>
<ICLiveLinkQueueEvent: %p contentAdded=%@
<ICLiveLinkQueueEvent: %p contentRemoved=%@
<ICLiveLinkQueueEvent: %p contentReordered=%@
<ICLiveLinkQueueEvent: %p contentReplaced=%@
<ICLiveLinkQueueEvent: %p contentPlayedNow=%@
<ICLiveLinkQueueEvent: %p contentUpdatedMessage=%@
<ICLiveLinkQueueEvent: %p playbackModeChanged=%@
<ICLiveLinkQueueEvent: %p unknown/eventKind=%ld
<ICLiveLinkQueueEventContentAdded: %p %@(%@)=%@ itemIdentifiers=%@>
<ICLiveLinkQueueEventContentAdded: %p unknown itemIdentifiers=%@>
<ICLiveLinkQueueEventContentPlayedNow: %p %@(%@)=%@ itemIdentifiers=%@ startItemID=%@>
<ICLiveLinkQueueEventContentPlayedNow: %p unknown itemIdentifiers=%@ startItemID=%@>
<ICLiveLinkQueueEventContentRemoved: %p itemIdentifier=%@>
<ICLiveLinkQueueEventContentReordered: %p itemIdentifier=%@>
<ICLiveLinkQueueEventContentReplaced: %p startItemID=%@>
<ICLiveLinkQueueEventContentUpdatedMessage: %p localizedTitle="%@" localizedMessage="%@">
q8@?0
<ICLiveLinkQueueEventPlaybackModeChanged: %p unknown/invalid>
<ICLiveLinkQueueEventPlaybackModeChanged: %p shuffleType=%@>
<ICLiveLinkQueueEventPlaybackModeChanged: %p repeatType=%@>
<ICLiveLinkQueueEventPlaybackModeChanged: %p autoPlayEnabled=%@>
<ICLiveLinkQueueEventPlaybackModeChanged: %p unknown/kind=%ld>
<ICLiveLinkReactionEvent: %p reaction="%@" reactionID=%@ itemID=%@>
<ICLiveLinkSessionEvent: %p kind=%@>
Play
Pause
Scrub
Skip
Unknown/kind=%ld
Items
Collections
Unknown/shuffleType=%ld
Unknown/repeatType=%ld
Join
Connect
Disconnect
Leave
Update
com.apple.AppleMediaServices.accountmediatype.itunes
storefrontID
scope
isActiveLockerAccount
isManagedAppleID
mergeToCloudLibraryPreference
eligibleServices
automaticDownloadKinds
musicPrivateListeningEnabled
musicPrivateListeningEnabledForHomeUsers
activeMediaTypes
privacyAcknowledgement
<%@ (%@) [DSID=%@, isActive=%d]>
<%@ (%@) [primary=%d]>
v32@?0@"NSString"8@"NSNumber"16^B24
v32@?0@"NSUUID"8@"NSNumber"16^B24
guid-urls
getMatchStatusSrv
isMatchServiceEnabled
cloud-welcome
amd-domains
sign-sap-request
sign-sap-response
signed-actions
musicCommon
sign-sap-setup-cert
sign-sap-setup
fps-cert
fps-request
subDownload
md-finish-provisioning
amd-finish-provisioning
md-sync-machine
amd-sync-machine
redownloadProduct
paidRedownloadProduct
auth-can-post
songDownloadDone
storefront-header-suffix
musicForYou
browse
grouping
radioTab
getSubscriptionStatusSrv
lease-stop
storeplatform-lookup-url
storeplatform-lookup-url-unpersonalized
delegatePlayback
enableSubscription
disableSubscrption
getSubscriptionStatus
getWholeHouseAudioPlayInfo
play-activity-feed-request-post-url
authorizeMachine
mobile-network-constraints
library-auth-service-token-url
musicSubscription
buyProduct
push-notification-types
push-notifications
revokeMusicToken
subscription-status-refresh-interval-in-seconds
push-notification-allowexplicit
library-daap
preference-service-sync-url
preference-service-scheduled-sync-period-in-minutes
musicFriends
isExplicitContentAgeVerificationRequired
ExplicitContentBadgeTreatment
korAgeVerificationUrl
fuseHeaderEnrichment
fuseHeaderEnrichmentResponse
createMusicToken
inAppMessages
musicConnect
addToSiriTagHistoryBaseUrl
addToTRHistoryBaseUrl
pmlt-url
addToWishlistBaseUrl
getShareIdentifiers
purchase-daap
p2-content-restore
cloud-add-computer
storeFrontId
artist-new-content
countryCode
fetchSinfs
fuseCarrierMccMncList
ampMusicAPIDomains
enhanced-audio
get-play-info
url-regex-map
ios-app-url
voiceActivationTokenTTLInSeconds
js-app-url
trustedDomains
musicTabs
pm-feedback-base-url
max-mini-sinf-batch-size
getSubscriptionOffersSrv
auto-enrollment-percentage
use-apple-pay-classic
language
language-tag
manageSubscriptionsV2Url
AddFundsUrl
modifyAccount
marketingItemDynamicUIUrl
amsui-sources
musicui-js-url
commerce-ui-urls
musicSubscriptionOffersForStorefront
commerceApp
commerceAppBaseUrl
commerceAppFallbackUrl
financeApp
marketing-item-media-api-path
marketing-item-media-api-realm-mappings
subscription-storefront-header-suffix
redeemCodeLanding
cloud-library-opt-out-url
absinthe-requests
aps-sampling-percentage
clientIDDomains
ios-app-download-retry-count
lyricsOnByDefaultDisabled
md-domains
min-artist-update-polling-frequency-secs
ratingWarningThreshold
ratingWarningTitle
ratingWarningText
TLSSamplingPercentage
TLSSamplingSessionDuration
TFOSamplingPercentage
TFOSamplingSessionDuration
cloud-library-update-request
cloud-library-update-check
heif-format-rollout
sRdnld
isExplicitMusicDisallowed
processRedirectUrl
getMusicSDKAuthorizationsSrv
metrics
manageSubscriptionsUrl
appleMusicDeviceOfferDeepLink
revokeMusicSDKAuthorizationSrv
bag_dictionary
fallback_values
expiration_time
request_time
server_correlation_key
server_environment
profile_name
profile_version
aource_account_dsid
v32@?0@"NSString"8@16^B24
http
ICURLBag
Found unexpected type for bag key '%@' in profile '%@': '%@' (expected String)
Found unexpected type for bag key '%@' in profile '%@': '%@' (expected Array)
Found unexpected type for bag key '%@' in profile '%@': '%@' (expected Dictionary)
Failed to create url for bag key '%@' in profile '%@': '%@'
fields
headers
musicMescal
actions
Failed to create a snapshot bag
regex
schemes
https
https://play.itunes.apple.com/WebObjects/MZPlay.woa/wa/getSubscriptionStatusSrv
https://play.itunes.apple.com/WebObjects/MZPlay.woa/wa/revokeMusicToken
https://p49-buy.itunes.apple.com/WebObjects/MZFinance.woa/wa/sagaAddComputer
https://apps.apple.com/redeem/
https://genius-2.itunes.apple.com/WebObjects/UCGovernor.woa/wa/optOutCloudLibrary
https://sp.itunes.apple.com/WebObjects/MZStorePlatform.woa/wa/lookup
https://client-api.itunes.apple.com/WebObjects/MZStorePlatform.woa/wa/lookup
https://play.itunes.apple.com/WebObjects/MZPlay.woa/wa/subPlaybackDispatch
https://buy.itunes.apple.com/WebObjects/MZBuy.woa/wa/paidRedownloadProduct
https://buy.itunes.apple.com/WebObjects/MZBuy.woa/wa/redownloadProduct
https://genius-2.itunes.apple.com/WebObjects/UCGovernor.woa/wa/checkCloudUpdateStatus
https://genius-2.itunes.apple.com/WebObjects/UCGovernor.woa/wa/requestCloudLibraryUpdate
https://play.itunes.apple.com/WebObjects/MZPlay.woa/wa/sRdnld
https://p49-buy.itunes.apple.com/commerce/subscription/offers/music
/v1/engagement/{cc}/upsell/marketing-items
https://apps.mzstatic.com/content/54a1317a0ad442d3965d64ef6bfaae1c/
https://apps.mzstatic.com/content/54a1317a0ad442d3965d64ef6bfaae1c/subscribe
https://{ld-$TrPod$}.itunes.apple.com:443/WebObjects/MZDaap.woa/daap
com.apple.iTunesCloud.ICDelegationProviderServiceProtocolHandler.operationQueue
com.apple.iTunesCloud.ICDelegationProviderServiceProtocolHandler.calloutQueue
rules
provider-resource
sharing-enabled
like-enabled
core-seed-name
description
name
attribution-label
station-type
station-subtype
requires-subscription
INSERT OR REPLACE INTO delegation_uuid (user_identity, uuid, insertion_date) VALUES (?, ?, ?)
v16@?0@"<ICSQLiteBinding>"8
DELETE FROM token
DELETE FROM delegation_uuid WHERE user_identity==? AND uuid=?
DELETE FROM token WHERE expiration_date<?
INSERT OR REPLACE INTO metadata (key, value) VALUES (?, ?)
INSERT OR REPLACE INTO account (identity, storefront) VALUES (?, ?)
DELETE FROM account WHERE identity==?
DELETE FROM token WHERE account_identity==?
INSERT OR REPLACE INTO token (account_identity, data, expiration_date, type) VALUES(?, ?, ?, ?)
interactionLevel
transportControlState
payload
ICSecurityInfoFirstUnlockNotification
com.apple.itunescloud.ICSecurityInfo.accessQueue
com.apple.itunescloud.ICSecurityInfo.calloutQueue
isMatchSubscriber
AMSAutomaticDownloadKindsSetTask failed
v24@?0@"AMSAutomaticDownloadKindsResult"8@"NSError"16
v24@?0@"AMSAuthenticateResult"8@"NSError"16
v24@?0@"AMSDialogResult"8@"NSError"16
v24@?0@"ICRemoteRequestOperationExecutionResponse"8@"NSError"16
com.apple.iTunesCloud.ICMusicSubscriptionLeaseController.accessQueue
com.apple.iTunesCloud.ICMusicSubscriptionLeaseController.leaseSessionPreparationOperationQueue
com.apple.iTunesCloud.ICMusicSubscriptionLeaseController.notificationSerialQueue
com.apple.itunesstored.PlaybackLeaseDidEnd
ICMusicSubscriptionLeaseIgnorePushNotifications
v32@?0@"_ICMusicSubscriptionLeaseIdentityCacheKey"8@"ICMusicSubscriptionLeaseSession"16^B24
Failed to get lease session [missing user identity or user identity store] - userIdentity=%@ - userIdentityStore=%@
v16@?0@"ICUserIdentityProperties"8
Failed to get lease session [invalid delegated identity] - delegatedIdentity=%@
v24@?0@"ICUserIdentityProperties"8@"NSError"16
Failed to get lease session [no properties for user identity] - userIdentity=%@
v32@?0@"NSString"8@"NSString"16^B24
%@=%@
Accept-Language
Cookie
Content-Encoding
Content-Type
User-Agent
Set-Cookie
Cache-Control
Content-Range
Expires
ETag
max-age
text/xml; charset=utf-8
application/x-protobuf
activeCommandsOnly
expiration_prune
CREATE TABLE IF NOT EXISTS account(identity TEXT PRIMARY KEY,storefront TEXT);
CREATE TABLE IF NOT EXISTS metadata(key TEXT PRIMARY KEY,value TEXT);
CREATE TABLE IF NOT EXISTS token(account_identity TEXT UNIQUE,type INTEGER NOT NULL,expiration_date REAL,data BLOB NOT NULL);
CREATE TABLE IF NOT EXISTS delegation_uuid(user_identity TEXT,uuid TEXT,insertion_date REAL,UNIQUE(user_identity, uuid));
Library/com.apple.iTunesCloud/ICDelegateAccountStore.db
PRAGMA user_version=%ld
B8@?0
ANALYZE
PRAGMA user_version
ICMusicKitURLRequest.m
[requestContext isKindOfClass:[ICMusicKitRequestContext class]]
; requestContext = %@
Failed to fetch developer token from %@.
v24@?0@"NSString"8@"NSError"16
Bearer %@
Authorization
personalized
unpersonalized
Music-User-Token
Failed to fetch user token.
Unauthorized to fetch user token, but reached maximum retry count for developer token invalidation; aborting.
Unauthorized to fetch user token, but developer token invalidation failed; aborting.
com.apple.itunescloud.music-subscription-status-service
ICSharedListeningConnectionControllerError
com.apple.iTunesCloud.ICDirectSharedListeningConnectionController.delegateQueue
SharedListeningAssertion
QuickRelay
com.apple.iTunesCloud.ICExternalSharedListeningConnectionController.delegateQueue
com.apple.iTunesCloud.SharedListeningConnectionService
XPC connection interrupted.
XPC connection invalidated.
; identity = %@
; identityStore = %@
@"ICMusicSubscriptionStatusMonitor"16@?0@"ICUserIdentityContext"8
v16@?0@"NSNotification"8
allowed
restricted
required
v24@?0@"ICMusicSubscriptionStatusResponse"8@"NSError"16
v32@?0@"<NSCopying>"8@?<v@?@"ICMusicSubscriptionStatusMonitor"@"ICMusicSubscriptionStatus">16^B24
SELECT uuid FROM delegation_uuid WHERE user_identity==?
uuid
v32@?0@"ICSQLiteRow"8@"NSError"16^B24
v24@?0@"ICSQLiteQueryResults"8@"NSError"16
SELECT data, expiration_date, type, account_identity FROM token WHERE (expiration_date IS NULL) OR (expiration_date >= ?)
SELECT data, expiration_date, type, account_identity FROM token WHERE (type == ?) AND ((expiration_date IS NULL) OR (expiration_date >= ?))
SELECT account.storefront AS storefront, token.data AS data, token.expiration_date AS expiration_date, token.type AS type FROM account LEFT OUTER JOIN token ON account.identity==token.account_identity WHERE account.identity==?
SELECT value FROM metadata WHERE key==?
SELECT count(account_identity) FROM token
SELECT data, expiration_date, type FROM token WHERE account_identity==?
expiration_date
account_identity
is-async
gzip
v24@?0@"NSURLRequest"8@"NSError"16
%ld/%@
X-Apple-Radio-Client-Version
false
machine-data-action-performed
dialog-processed
v20@?0B8@"NSError"12
v36@?0B8q12@"NSString"20@"NSError"28
invalidate-url-bags
errorKey
Received HTTP error status code %ld
dialog
v32@?0@"NSString"8@"NSString"16@"NSError"24
v24@?0B8B12@"NSError"16
v16@?0@"ICMutableLocalStoreAccountProperties"8
status
accountID
previousItemId
Shared Listening Report
Shared listening session ID: %@
Group session ID: %@
Total time: %.3f seconds.
%@: %.3fs.
 Error: %@.
itemIdsToRemove
repeatMode
sagaId
com.apple.itunescloud.ICStoreHTTPCookieManager
v32@?0@"NSString"8@"NSHTTPCookie"16^B24
value
dataUpdated
data
settingId
notifications.music.account.showInLibrary
notifications.music.account.artistsAndShows
ICUserIdentityStoreDelegateAccountStoreDidChangeNotification
ICUserIdentityStoreDidChangeNotification
ICActiveUserIdentityDidChangeNotification
ICUserIdentityStoreLocalStoreAccountPropertiesDidChangeNotification
com.apple.iTunesCloud.ICUserIdentityStore.accessQueue
com.apple.iTunesCloud.ICUserIdentityStore.callback
v16@?0@"ICDelegateAccountStoreReader"8
Unable to get verification context for user identity - activeAccountDSID=%@ - allowsAccountEstablishment=%u
ICUserIdentityStore.m
dsID != nil
helper
The following method is not supported on the null identity store: %s.
v24@?0@"ICDelegateAccountStore"8@"NSError"16
com.apple.iTunesCloud.ICMachineDataSession.callback
com.apple.iTunesCloud.ICMachineDataSession.operation
motionDetailTall
previewFrame
video
videoFile
assetUrl
v32@?0@8@16^B24
pf=%@/hls=%@/crabs=%@
trackInfo
redownload
buyParams
action-params
priceFormatted
price
ICDelegationProviderNetServiceDelegationAccountUUIDsDidChangeNotification
com.apple.iTunesCloud.ICDelegationProviderNetService.accessQueue
com.apple.iTunesCloud.ICDelegationProviderNetService.serialQueue
com.apple.iTunesCloud.ICDelegationProviderNetService.netServiceStreamResolutionQueue
PRAGMA user_version=%@
BEGIN DEFERRED TRANSACTION
ROLLBACK TRANSACTION
COMMIT TRANSACTION
Cannot prepare statement without a database.
Statement from a different connection
text/html
media_api_url_map.plist
etag
mappings
Library/Caches/com.apple.iTunesCloud/
database-id
database-name
is-online-genius-for-match-enabled
play-data-batch-interval-in-minutes
subscribed-container-polling-frequency-secs
update-polling-frequency-secs
auto-update-polling-frequency-secs
max-sync-retry-interval-secs
ICMusicSubscriptionFairPlayKeyStatusDidChangeNotification
com.apple.itunescloud.ICMusicSubscriptionFairPlayKeyStatusDidChangeNotification
com.apple.iTunesCloud.ICMusicSubscriptionFairPlayController.calloutQueue
com.apple.iTunesCloud.ICMusicSubscriptionFairPlayController.fairPlaySerialQueue
v24@?0@"NSArray"8@"NSError"16
householdId
ICMusicSubscriptionLeaseDurationInterval
leaseDurationInSeconds
songList
<%@: %p; params = %@>
isOfflineDownload
requestProtocolType
contentURI
adamID
certificateURL
keyServerURL
@"NSData"24@?0@"NSData"8^@16
v24@?0@"NSData"8@?<v@?@"NSData"@"NSError">16
fairplay-streaming-response
streaming-keys
renew-after
expiration-time
playback-start-time
download-repair-wait
failureType
v24@?0@"ICURLResponse"8@"NSError"16
v24@?0@"NSData"8@"NSError"16
rental-id
skipped-rental-checkout
renew
start
stop
lease-action
fairplay-streaming-request
version
keyUri
offline
participantId
path
signal-bars-max
signal-bars
com.apple.itunescloud.ICEnvironmentMonitor.accessQueue
com.apple.itunescloud.ICEnvironmentMonitor.calloutQueue
v12@?0i8
UIApplicationDidEnterForegroundNotification
%d (%@)
high
fair
v8@?0
com.apple.iTunesCloud.ICUserCredentialProvider.accessQueue
com.apple.iTunesCloud.ICUserCredentialProvider.calloutQueue
v36@?0@"ICUserCredentialRequest"8@"ICUserCredentialResponse"16@"NSError"24B32
v16@?0@"ICAsyncBlockOperation"8
com.apple.iTunesCloud.ICUserCredentialProvider.delegationAccountUUIDOperationQueue
com.apple.iTunesCloud.ICUserCredentialProvider.delegationAccountUUIDSerialQueue
v16@?0@"ICMutableUserIdentityProperties"8
v44@?0@"ICUserIdentity"8@"ICDelegateToken"16@"NSString"24@"NSError"32B40
ICUserCredentialProvider.m
[credentialRequests count] > 0
storefrontIdentifier
 cloudID: %llu
 lyricsID: %@
 purchasedAdamID: %lli
 radioAdamID: %lli
 equivalencySourceAdamID: %lli
 reportingAdamID: %lli
 subscriptionAdamID: %lli
ICPlayActivityEventItemIDsCloudID
ICPlayActivityEventItemIDsLyricsID
ICPlayActivityEventItemIDsPurchasedAdamID
ICPlayActivityEventItemIDsRadioAdamID
ICPlayActivityEventItemIDsEquivalencySourceAdamID
ICPlayActivityEventItemIDsReportingAdamID
ICPlayActivityEventItemIDsSubscriptionAdamID
NONE
INTRO
RETAIL
HOME_POD
WIN_BACK_1
WIN_BACK_2
WIN_BACK_3
HARDWARE_1
MINT_SPECIAL
STUDENT_1
Enabled
Glide
Disabled
Individual
Family
Member
InvalidToken
fullCatalogPlayback
voiceActivatedCatalogPlayback
anyCatalogPlayback
CatalogPlayback
catalogPlayback[%@]
cloudLibraryEligible
addCatalogContentToCloudLibrary
catalogLyricsViewing
_ICMusicSubscriptionStatusAdditionalProperties
isMinor
hasFamily
hasFamilyGreaterThanOneMember
isHoH
match
hasOfflineSlots
isInFreeTrial
isNotEligibleForFreeTrial
isPurchaser
source
Apple
isInGlidePreview
Discovery
Unlinked
isUnlinked
isPartOfBundle
ownsBundle
terms
acceptSilentAuth
cellularOperatorName
sessionIdentifier
carrierBundlingErrorCode
carrierBundlingStatusType
isMinorAccountHolder
isHeadOfHousehold
isMatchEnabled
isEligibleForFreeTrial
sourceType
isAdministrator
isDiscoveryModeEligible
termsStatusList
isBundleOwner
Eligible
NotEligible
NeedsManualVerification
 carrierBundlingErrorCode:%ld
 eligibleOffers:%@
<%@ %p statusType:%@, matchEnabled=%@, carrierBundlingStatusType:%@, reasonType:%@, sourceType:%@%@, capabilities:%@, eligibleOffers:[%@], isInFreeTrial:%@, isEligibleForFreeTrial:%@>
Store
latestTerms
agreedToTerms
currentVersion
acceptedVersion
ICWiFiManagerWiFiDidChangeNotification
ICWiFiManagerWiFiEnabledUserInfoKey
ICWiFiManagerWiFiAssociatedUserInfoKey
com.apple.amp.HomeSharing.HSWiFiManager.accessQueue
com.apple.wifi.plist
%s (%d)
hls-cert
hls-prefetch-skd-urls
itunescloudd
; bundleIdentifier = "%@"
; processName = "%@"
; clientIdentifier = "%@"
; clientVersion = "%@"
; requestingBundleIdentifier = "%@"
; requestingBundleVersion = "%@"
; bagProfile = "%@"
; bagProfileVersion = "%@"
itunescloudtool
NanoMusic
TVMusic
MRMusic
AirMusic
processName
clientIdentifier
clientVersion
bagProfile
bagProfileVersion
kinds
size-limits
com.apple.itunescloud.ICNetworkConstraints
void _MSVHasherAppend64(MSVHasher * _Nonnull, uint64_t)
void _MSVHasher_SipHash_1_3_Append64(MSVHasherSipHash_1_3 *, uint64_t)
void _MSVHasherAppend32(MSVHasher * _Nonnull, uint32_t)
void _MSVHasher_SipHash_1_3_Append32(MSVHasherSipHash_1_3 *, uint32_t)
NSUInteger _MSVHashGetHash(MSVHash)
0123456789abcdef
MSVHash _MSVHasherFinalize(MSVHasher * _Nonnull)
sections
sectionId
com.apple.Music.main
success
add-push-notification-type-url
Subscription status cache will not observe phone number because phone number access is restricted.
Setting cached subscription status response for cache key %{public}@: %{public}@.
Removing cached subscription status response for cache key %{public}@.
Base cache key for subscription status cache remains unchanged: %{public}@.
Base cache key for subscription status cache updated from %{public}@ to %{public}@.
Posting %{public}@.
Received phone number did change notification. Updating base cache key for subscription status cache.
Received user identity store did change notification. Updating base cache key for subscription status cache.
Received active identity did change notification - invalidating cache.
Reloading subscription status cache due to external change notification
Posting local change notification as shouldTreatSubscriptionStatusAsExpired is set
%{public}@ Failed to load active account DSID - skipping account check. err=%{public}@
%{public}@ invalidating loaded cached subscription status. cachedOSVersion=%{public}@, currentOSVersion=%{public}@; cachedActiveAcccountDSID=%{public}@, currentActiveAccountDSID=%{public}@
%{public}@ loaded subscription status cache: %{public}@
%{public}@ Failed to load active account DSID to save. err=%{public}@
%{public}@ failed to get user identity properties. err=%{public}@
%{public}@ received subscription response %{public}@
%{public}@ failed to import subscription keybag. err=%{public}@
%{public}@ Performing lightweight subscription status request. Extended request: %{public}@.
ICCloudClientCloudService %p - Creating XPC Client Connection [started]
ICCloudClientCloudService %p - Creating XPC Client Connection [failed] - endpoint=%{public}@ - error=%{public}@
ICCloudClientCloudService %p - Creating XPC Client Connection [ended] - connection=%{public}@
ICCloudClientCloudService %p - Unable to create XPC Connection [no listener endpoint]
ICCloudClientCloudService %p - Connection to cloud availability service interrupted
ICCloudClientCloudService %p - Connection to cloud availability service invalidated
ICCloudClientCloudService %p - Resetting XPC connection to nil
ICAgeVerificationManager %p - ageVerificationStateForUserIdentity - Retrieving state [Disk cache] - Kicking off refresh - State=%@
ICAgeVerificationManager %p - ageVerificationStateForUserIdentity - Retrieving state [In-memory cache] - State=%@
ICAgeVerificationManager - Missing critical entitlement for age verification: "apple" - "keychain-access-groups"
ICAgeVerificationManager %p - Received ICUserIdentityStoreDidChangeNotification - Refreshing state for active user
ICAgeVerificationManager %p - Error retrieving properties for account %{public}@ during age verification: %{public}@ - Explicit content allowed and marked with 'E'.
ICAgeVerificationManager %p - Error retrieving bag during age verification: %{public}@ - Explicit content allowed and marked with 'E'.
ICAgeVerificationManager %p - There are no properties for account %{public}@ - Explicit content allowed.
ICAgeVerificationManager %p - Explicit content allowed.
ICAgeVerificationManager %p - Performing age verification
%{public}@ - Expiration date provided from ICDefaults: %{time_t}zd
%{public}@ - Expiration date provided from ACAccount: %{time_t}zd
ICAgeVerificationManager %p - Age verification state: %{public}@
ICAgeVerificationManager %p - Bag key(s) missing for age verification: %{public}@ - Explicit content allowed and marked with 'E'.
Failed to decode valid developer token while initializing instance of ICMusicKitTokensResponse from decoder.
%{public}@ Starting system service...
%{public}@ Requesting a sync because the system version has changed from %{public}@ --> %{public}@
%{public}@ Stopping system service...
%{public}@ fetching all messages
%{public}@ Failed to load all messages. err=%{public}@
%{public}@ fetching messages for bundle identifiers %{public}@
%{public}@ Failed to load messages for bundle identifiers %{public}@. err=%{public}@
%{public}@ fetching message with identifier %{public}@ for bundle identifier %{public}@
%{public}@ Failed to load message %{public}@ for bundle identifier %{public}@. err=%{public}@
%{public}@ adding message: %{public}@
Failed to add message %{public}@. err=%{public}@
%{public}@ updating message %{public}@
Failed to update message %{public}@. err=%{public}@
%{public}@ removing message %{public}@ for bundle identifier %{public}@
%{public}@ removing all messages for bundle identifier %{public}@
%{public}@ Adding message for bundle identifier '%{public}@' from dialog request %{public}@
%{public}@ Failed to serialize local notification data. err=%{public}@
%{public}@ Finished adding message for dialog request. err=%{public}@
%{public}@ Performing sync
%{public}@ Performing reset
Failed to reset message store. err=%{public}@
%{public}@ Reporting event for message identifier %{public}@: %{public}@
%{public}@ Failed to add message event. err=%{public}@
%{public}@ Added message event %{public}@ for message 
%{public}@ Flushing message events
%{public}@ Not flushing events because privacy acknowledgement is required
Failed to load message events. err=%{public}@
%{public}@ Flushing %d events
Failed to flush message event %{public}@. err=%{public}@
Failed to remove completed event %{public}@. err=%{public}@
%{public}@ downloading resources for message %{public}@:%{public}@
%{public}@ clearing cached resources for message %{public}@:%{public}@
%{public}@ Failed to connect to remote service. err=%{public}@
%{public}@ Failed to remove badge for application with bundleId=%{public}@ and messageId=%{public}@. err=%{public}@
%{public}@ Failed to update messageEntry for messageId=%{public}@. err=%{public}@
Failed to get account properties. err=%{public}@
Failed to get message store account property. err=%{public}@
%{public}@ account changed from %lld --> %lld - performing reset
%{public}@ Failed to reset message store. err=%{public}@
%{public}@ Failed to update message store account property. err=%{public}@
%{public}@ Failed to sync after the reset. err=%{public}@
Connection to in-app message service interrupted
Connection to in-app message service invalidated
%{public}@ Adjusting bag refresh interval of %llds --> 7 days
%{public}@ Setting timer to perform periodic poll for %llds (+/- %llds)
%{public}@ Performing periodic sync
%{public}@ Periodic sync completed. err=%{public}@
%{public}@ Failed to update sync pending flag. err=%{public}@
%{public}@ Failed to get properties for active account for sync. err=%{public}@
%{public}@ Not performing sync because there's no active account
%{public}@ Not syncing because privacy acknowledgement is required
%{public}@ Sync request failed. err=%{public}@
%{public}@ Sync completed. err=%{public}@
%{public}@ Failed to get current server revision from message store. err=%{public}@
%{public}@ Ignoring sync command we've already applied (serial# %lld, currentRevision=%lld)
%{public}@ Processing sync command #%lld: %{public}@ %{public}@
%{public}@ Failed to process sync command. err=%{public}@
%{public}@ Finished processing sync commands. currentSyncRevision=%lld
%{public}@ Failed to add message %{public}@. err=%{public}@
Failed to badge application with bundleId=%{public}@ and badgeId=%{public}@. err=%{public}@
%{public}@ Processing local user notification in message %{public}@
%{public}@ Not posting local notification in message %{public}@ because the target app is in the foreground
%{public}@ Ignoring local notification in message %{public}@ because the notification string was not provided
%{public}@ Failed to parse notification for message %{public}@. err=%{public}@, payload=%{public}@
%{public}@ Extracted notification content: %{public}@
%{public}@ Failed to process notification for message %{public}@. payload=%{public}@
%{public}@ Failed to fetch with message with identifier:  %{public}@. err=%{public}@. Will not remove badge.
%{public}@ removing user notifications with identifier %{public}@
%{public}@ Failed to remove message %{public}@. err=%{public}@
%{public}@ Failed to remove message metadata for identifier %{public}@. err=%{public}@
%{public}@ Failed to gather messages to remove - some additional cleanup will be skipped. err=%{public}@
Failed to remove badge for application with bundleId=%{public}@ and badgeId=%{public}@. err=%{public}@
%{public}@ Failed to remove messages for bundle identifier %{public}@. err=%{public}@
%{public}@ Failed to remove message metadata for bundle identifier %{public}@. err=%{public}@
%{public}@ Had pending sync - retrying now
%{public}@ failed to fetch message %{public}@:%{public}@ to set the download setting on. err=%{public}@
%{public}@ failed to update message %{public}@:%{public}@ with the updated download setting. err=%{public}@
%{public}@ Initiating downloads for messages marked for caching
%{public}@ failed to load messages to check for downloads. err=%{public}@
%{public}@ Skipping downloads for message %{public}@:%{public}@ as its not allowed on the current network type (%d)
%{public}@ failed to fetch message %{public}@:%{public}@ to set the download flag on. err=%{public}@
%{public}@ base resource url missing from configuration - skipping download
%{public}@ Downloading web archive for message %{public}@:%{public}@
%{public}@ failed to download web archive for message %{public}@. err=%{public}@
%{public}@ Downloading template file for message %{public}@:%{public}@
%{public}@ failed to download template for message %{public}@. err=%{public}@
%{public}@ Downloading image %{public}@ for message %{public}@:%{public}@
%{public}@ failed to download image %{public}@ for message %{public}@. err=%{public}@
%{public}@ Downloaded %d resources for message %{public}@:%{public}@
%{public}@ failed to fetch message %{public}@ to update with cached resource locations. err=%{public}@
%{public}@ failed to update resource cache locations for message %{public}@. err=%{public}@
%{public}@ failed to load bag for configuration. err=%{public}@
%{public}@ failed to load configuration from bag
%{public}@ Purging orphaned cache directory %{public}@
%{public}@ Receiving New incoming connection from %{public}@: %{public}@
%{public}@ Client process %{public}@ does not have required entitlements - rejecting connection
%{public}@ Connection from %{public}@ interrupted - removing connection %{public}@
%{public}@ Connection from %{public}@ invalidated - removing connection %{public}@
%{public}@: Did accept connection with service: %{public}@ input: %{public}@ output: %{public}@
%{public}@: Remote server advertisement success with service: %{public}@
%{public}@: Remote server advertisement failed with service: %{public}@, error: %{public}@, retrying in %f seconds...
%{public}@: Created net service %{public}@.
%{public}@: Published net service %{public}@.
%{public}@: Retrieved security settings: %{public}@ with error: %{public}@
%{public}@: Published net service TXTRecord: %{public}@
%{public}@: Stopped net service %{public}@.
%{public}@ Failed to create an ICURLSession instance
%{public}@ An HLS asset is available and is preferred, so we will use it
%{public}@ Failed to download because the item is invalid (assetURL=nil) %{public}@
%{public}@ Failed to create download destination directory. This isn't fatal but may result in failure to save the playback keys. err=%{public}@
%{public}@ Enqueueing aggregate asset download using key session %{public}@
%{public}@ Aggregate asset download complete. err=%{public}@, destinationPath=%{public}@
%{public}@ Failed to copy key file '%{public}@'. err=%{public}@
%{public}@ Enqueueing AV asset download
%{public}@ AV asset download complete. err=%{public}@, destinationPath=%{public}@
%{public}@ Enqueueing standard file asset download
%{public}@ File asset download complete. err=%{public}@, destinationPath=%{public}@
%{public}@ Failed to fetch key with identifier '%{public}@'. err=%{public}@
%{public}@ failed to load identity properties. err=%{public}@
%{public}@ enabled multipath service type NSURLSessionMultipathServiceTypeInteractive for session %{public}@
%{public}@ Failed to decode compressed aps payload data.
%{public}@ Failed to decompress aps payload data.
%{public}@ Failed to deserialize aps payload data. err=%{public}@
%{public}@ unknown APS format %{public}@. assuming dictionary
xpcConnection=nil. %lu pending blocks may not execute.
Set cloud add-to-playlist behavior failed with error: %{public}@
Must provide at least a playlist name when creating a playlist.
Create cloud playlist failed with error: %{public}@
SDK: Create cloud playlist failed with error: %{public}@
Set cloud playlist properties failed with error: %{public}@
SDK Set cloud playlist properties failed with error: %{public}@
Add store item to playlist failed with error: %{public}@
Add saga id to playlist failed with error: %{public}@
SDK: Add store item to playlist failed with error: %{public}@
SDK: Add saga id to playlist failed with error: %{public}@
Publish cloud playlist failed with error: %{public}@
Upload playlist artwork failed with error: %{public}@
Update subscribed playlists failed with error: %{public}@
Update pinned subscribed playlists failed with error: %{public}@
Must provide a valid adam ID (%lld) adding to library.
Add store item to library failed with error: %{public}@
SDK: Add store item to library failed with error: %{public}@
Add store playlist to library failed with error: %{public}@
Remove cloud playlists from library failed with error: %{public}@
Remove cloud items from library failed with error: %{public}@
Hide items from purchase history failed with error: %{public}@
Create cloud genius playlist failed with error: %{public}@
Failed to create Genius playlist with error: %{public}@
<ICCloudClient %p> - Attempting cloud library authenticate (start initial import with explicit user action, merge policy=%d, shouldStartInitialImport=%{BOOL}u, isExplicitUserAction = %{BOOL}u)
Could not get remote object to authenticate and start initial Saga import - error=%{public}@
Could not authenticate and start initial import of Saga library - error=%{public}@
Successfully authenticated and finished Saga import.
<ICCloudClient %p> - Attempting disable cloud library
Could not get remote object to deauth Saga library - error=%{public}@
Could not deauthenticate Saga library and disable active locker account - error=%{public}@.
Finished deauthenticating Saga library
ICCloudClient %p - becomeActive - Error retrieving xpc service - error=%{public}@
Update Jalisco Library failed with error: %{public}@
Remove Jalisco failed with error: %{public}@
Checking if mediakind=%d is disabled failed with error=%{public}@
Could not get if mediaKind=%d is disabled for Jalisco sync. error=%{public}@, isMediaKindDisabled=%d
mediaKind=%d is %{public}s for Jalisco sync
Sending request to update Cloud Library...
Can't update cloud library using current network - skipping
Update Match Library failed with error: %{public}@
Update Match Library failed with status: %ld
Sending deauthenticate request...
Deauthenticate failed with error: %{public}@
loading last known iCML state change failed with error: %{public}@
Sending request to import item artwork for purchase history ID %llu...
Skipping request to import item screenshot for purchase history ID %llu due to insufficient network conditions
Sending request to import screenshot for purchase history ID %llu...
Import Purchase History Screenshot failed with error: %{public}@
Sending request to import item artwork for saga ID %llu...
Import Item Artwork failed with error: %{public}@
Sending request to import screenshot for saga ID %llu...
Import Cloud Screenshot failed with error: %{public}@
Sending request to import container artwork for saga ID %llu...
Import Container Artwork failed with error: %{public}@
Sending request to import subscription artwork for item persistent ID %lld...
Import Subscription Item Artwork failed with error: %{public}@
Sending request to import subscription screenshot for item persistent ID %lld...
Import Subscription Screenshot failed with error: %{public}@
Sending request to import subscription artwork for container persistent ID %lld...
Import Subscription Container Artwork with error: %{public}@
Sending request to artist hero image hero for item persistent ID %lld...
Import Artist Hero Artwork failed with error: %{public}@
Sending request to import album artist hero image for item persistent ID %lld...
Import Album Artist Hero Artwork failed with error: %{public}@
Sending request to deprioritize item artwork import with purchase history ID %llu...
Failed to deprioritize item artwork import with purchase history ID %llu with error: %{public}@
Sending request to deprioritize screenshot artwork import with purchase history ID %llu...
Failed to deprioritize screenshot artwork import with purchase history ID %llu with error: %{public}@
Sending request to deprioritize item artwork import with saga ID %llu...
Failed to deprioritize item artwork import with saga ID %llu with error: %{public}@
Sending request to deprioritize screenshot import with saga ID %llu...
Failed to deprioritize screenshot import with saga ID %llu with error: %{public}@
Sending request to deprioritize container artwork import with saga ID %llu...
Failed to deprioritize container artwork import with saga ID %llu with error: %{public}@
Sending request to deprioritize subscription item artwork import with persistent ID %lld...
Failed to deprioritize subscription item artwork import with persistent ID %lld with error: %{public}@
Sending request to deprioritize subscription screenshot import with persistent ID %lld...
Failed to deprioritize subscription screenshot import with persistent ID %lld with error: %{public}@
Sending request to deprioritize subscription container artwork import with persistent ID %lld...
Failed to deprioritize subscription container artwork import with persistent ID %lld with error: %{public}@
Sending request to deprioritize artist hero artwork import with persistent ID %lld...
Failed to deprioritize artist hero artwork import with persistent ID %lld with error: %{public}@
Sending request to deprioritize album artist hero artwork import with persistent ID %lld...
Failed to deprioritize album artist hero artwork import with persistent ID %lld with error: %{public}@
Load Artwork Info for purchase history screenshot failed with error: %{public}@
Load Artwork Info failed with error: %{public}@
Load Container Artwork Info failed with error: %{public}@
Load Subscription Item Artwork Info failed with error: %{public}@
Load Subscription Screenshot Artwork Info failed with error: %{public}@
Load Subscription Container Artwork Info failed with error: %{public}@
loadMissingArtwork failed with error: %{public}@
Sending load genius items request for saga ID %llu...
Load Genius Items failed with error: %{public}@
Load Update In Progress failed with error: %{public}@
Saga update In Progress failed with error: %{public}@
Jalisco load Update In Progress failed with error: %{public}@
Saga update progress failed with error: %{public}@
Jalisco update progress failed with error: %{public}@
Check for initial library syncs completion failed to load identity properties. err = %{public}@
Checking if initial library syncs are completed. userIdentity = %{public}@, jaliscoOnDiskDatabaseRevision=%ld, sagaOnDiskDatabaseRevision=%ld, syncLibraryID=%{public}@, isActiveLocker=%{BOOL}u
Initial library syncs completed: %{BOOL}u
Setting item properties %{public}@ for purchaseHistoryID %llu...
Setting item properties %{public}@ for saga ID %llu...
Failed to set item properties with error: %{public}@
Failed to update cloud item properties with error: %{public}@
Failed to update cloud plaulist properties with error: %{public}@
Setting album properties %{public}@ for persistent ID %llu...
Failed to set collection properties with error: %{public}@
Sending request to update artist hero images...
Failed to update artist hero images with error: %{public}@
Load Books failed with error: %{public}@
%{public}@ Updating automatic download preference change. shouldAutomaticallyDownload=%{BOOL}u
%{public}@ Automatic download media kind update task completed error: %{public}@
%{public}@ Automatic download media kind update task completed
Automatic downloads are %{BOOL}u for media kind music
Not able to determine if automatic downloads are enabled for media kind music. Could not load active store account: error=%{public}@
Failed to add message entry from AMS dialog. err=%{public}@
Sending request to refresh enhanced-audio shared keys...
Failed to refresh enhanced-audio shared keys. err=%{public}@
Sending request to fetch enhanced-audio offline keys...
Failed to fetch enhanced-audio offline keys. err=%{public}@
Sending notification that setup has completed...
Completing sending setup completed notification error: %{public}@
Completing sending setup completed notification
Failed to list cloud server operations with error: %{public}@
Running %d blocks.
%{public}@ - Receveived Saga update in progress notification [Handler present: %{BOOL}u
%{public}@ - Receveived Jalisco update in progress notification [Handler present: %{BOOL}u
%{public}@ - isAuthenticatedWithQueue: - Error retrieving properties - userIdentity=%@ - error=%{public}@
%{public}@ - isAuthenticatedWithQueue: - isAuthenticated=%{BOOL}u
MIGRATION: isMatchAuthenticated: %d, isMatchCellularDataEnabled: %d, hasAutomaticDownloads: %d, isAutomaticDownloadCellularDataEnabled: %d. New cellular data state: %d
MIGRATION: migrating store auto download setting to music download setting: %d
%{public}@ Failed to obtain remote proxy to perform remote request operation. error = %{public}@.
Invalidating connection to remote request execution service.
Creating connection to remote request execution service.
Connection to remote request execution service interrupted.
Connection to remote request execution service invalidated.
%{public}@ Payload contains HLS asset without an adam ID, which is unexpected: %{public}@
Override may not be less than 120000
Overridden to %lld milis.
%{public}@ Setting resolved DSID: %{public}@
warning: ICUserIdentity - Resolving DSID without an externally supplied identity store; if encoding the identity into an NSCoder, make sure to use -[NSCoder ic_encodeUserIdentity:withStore:forKey:]. Falling back to using [ICUserIdentityStore defaultIdentityStore].
ICUserIdentity - Unable to retrieve DSID for userIdentity=%{public}@ - error=%{public}@
%{public}@ failed - no properties for account %{public}@
%{public}@ failed to parse token response
%{public}@ no token in library auth service response: %{public}@
%{public}@ received error %{public}@. http status code=%d
%{public}@ Returned expired URL bag, so scheduling an URL bag refresh in 10 seconds
%{public}@ Starting to refresh an expired URL bag
%{public}@ Will fetch bag for requestContext %{public}@
%{public}@ Notifying %lu callers that we got the bag for context %{public}@
%{public}@ Invalidating all entries in url bag cache by expiring them
%{public}@ Failed to fetch identity properties. err=%{public}@
%{public}@ No bag profile name provided - using default
%{public}@ No bag profile version provided - using default
%{public}@ Failed to load account DSID. err=%{public}@
%{public}@ Failed to fetch legacy url bag. err=%{public}@
%{public}@ Failed to parse the legacy bag response. body=%{public}@
%{public}@ fetched new bag which expires in %fs (expiration date: %{time_t}zd).
%{public}@ Failed to fetch url bag. err=%{public}@
%{public}@ Failed to load payload dictionary. err=%{public}@
%{public}@ user identity changed - invalidating bag cache
%{public}@ Failed to load properties for account %{public}@. err=%{public}@
%{public}@ Failed to load sslToken for account DSID %@ - skipping
%{public}@ Failed to serialize request body. err=%{public}@
%{public}@ Recevied token response %@
%{public}@ Failed to load bag. err=%{public}@
%{public}@ playback endpoing missing from bag - treating as an error
%{public}@ certificate url missing from bag - treating as an error
%{public}@ Failed to load certificate data. err=%{public}@
%{public}@ No certificate data in response - treating as an error
Could not truncate delegate account store for reset
Could not setup delegate account store for reset: %{public}@
Could not recreate delegate account store: %{public}@
%{public}@: Failed listenerEndpointForService:ICCloudServerSupportedServiceMediaUserStateCenterServer, err=%{public}@
%{public}@: Failed to create async server to get user states, err=%{public}@
%{public}@: Failed to create sync server to get user states, err=%{public}@
Failed to obtain system free space. err=%{public}@
%{public}@: Created child operation queue: %{public}@.
%{public}@ performing authentication validation for user identity %{public}@
%{public}@ Failed to fetch the bag. err=%{public}@
%{public}@ Validation failed because the subscription status url is missing from the bag
%{public}@ Failed to fetch subscription status. err=%{public}@
%{public}@ Subscription status load failed due to invalid response.
%{public}@ Subscription status response parsing failed with error: %{public}@.
%{public}@ authentication validation completed successfully
%{public}@ Received invalidToken response - attempting to authenticate
%{public}@ Authentication complete. authenticated = %{BOOL}u, err = %{public}@
HAS_PAIRED_SYNC
active paired device pairing id %{public}@
paired device pairing id %{public}@
Found %d paired device ids
failed to obtain paired device GUID - you may need an entitlement for this process
failed to obtain paired device GUID because there is no active paired device
failed to obtain CompanionMusicGUID - you may need an entitlement for this process
failed to obtain pairedDeviceMediaGUID because there is no active paired device
obtained initial sync state for %{public}@. hasCompletedSync=%d, err=%{public}@, initialSyncComplete=%d
Could not get activePairedDeviceId %{public}@, _initialSyncStateObserver %{public}@.
Got device did pair notification
Got device did unpair notification
%{public}@: Starting XPC service.
%{public}@ Found service %{public}@
%{public}@ Removing service %{public}@
%{public}@: Connection %{public}@ did add assertion: %{public}@
%{public}@: Connection %{public}@ did remove assertion: %{public}@
%{public}@: Delegation account UUIDs did change for with notification: %{public}@
%{public}@: Updating browsing status
%{public}@: Searching for services with browser: %{public}@
%{public}@: Stopping service search with browser: %{public}@
%{public}@: Updating delegation UUIDs [discovered services] - currentUUIDs=%{public}@ - discoveredServices=%{public}@
   |_ Processing service %{public}@ - delegationAccountUUIDs=%{public}@
      Processing service %{public}@ - eligibleDelegationAccountUUIDs=%{public}@
      Processing service %{public}@ - activeSessions=%{public}@
      Processing service %{public}@ - %lu new delegated accounts - delegationAccountUUIDs=%{public}@
%{public}@: Creating delegation provider session [new delegated account] - userIdentity=%{public}@ - delegationAccountUUIDs=%{public}@ -  netService=%{public}@
[ICDelegationProviderService] Connection interrupted.
[ICDelegationProviderService] Connection invalidated.
%{public}@ Could not load store account for accountDSID=%@, error=%{public}@
%{public}@ Handling account-added notification for iTunes account %{public}@. _activeAccountDSID=%@
%{public}@ Handling account-added notification for Apple account %{public}@. _primaryICloudAccount=%@
%{public}@ Handling account-updated notification for iTunes account %{public}@. _activeAccountDSID=%@
%{public}@ Detected new iTunes account %{public}@ (DSID = %@)
%{public}@ Detected active iTunes account changing from %@ --> nil
%{public}@ Detected active iTunes account changing from %@ --> %@
%{public}@ Previosly active account '%{public}@ is no longer an itunes account - removing from cache
%{public}@ Detected properties change for account %@
%{public}@ Account %@ changed but properties remain the same - ignoring
%{public}@ Ignoring change to account
%{public}@ Ignoring change to account with no DSID
%{public}@ Detected active iTunes account is no longer an iTunes account at all. Active iTunes account changing from %@ --> nil
%{public}@ Handling account-updated notification for Apple account %{public}@. _primaryICloudAccount=%@
%{public}@ Detected change to primary apple account
%{public}@ Ignoring change to non-primary apple account %{public}@
%{public}@ Handling account-removed notification for iTunes account %{public}@. _activeAccountDSID=%@
%{public}@ The active account was removed
%{public}@ A non-active account was removed of account %@
%{public}@ Ignoring removal of account %@
%{public}@ Handling account-removed notification for Apple account %{public}@. _primaryICloudAccount=%@
%{public}@ Handling credentials-changed notification for iTunes account %{public}@. _activeAccountDSID=%@
%{public}@ Handling credentials-changed notification for Apple account %{public}@. _primaryICloudAccount=%@
%{public}@ Registering for account monitoring
%{public}@ Failed to register for account monitoring. err=%{public}@
%{public}@ Loaded %lu iTunes accounts %{public}@. _activeAccountDSID=%@, _primaryICloudAccount=%{public}@
%{public}@ Synchronizing with account store
ICHTTPArchive directory '%{public}@' is not a directory! Disabling archiving
%{public}@: Instantiated MusicKit request context with a default client info.
This is not recommended, as you need to be explicit about the client identifier and client version your application is meant to use, per agreement with the AMP Core Services team.
Nevertheless, proceeding with clientIdentifier = "%{public}@" and clientVersion = "%{public}@".
Attempted to decode an instance of ICMusicKitRequestContext with an unallowed class name for developerTokenProvider: %{public}@.
Failed to look up class of developer token provider with name: %{public}@.
Attempted to encode an instance of ICMusicKitRequestContext with an unallowed class name for developerTokenProvider: %{public}@.
%{public}@ Performing request with seed itemID %lld, isLibraryID=%d
%{public}@ Failed to serialize recommended content request. err= %{public}@
%{public}@ Failed to fetch recommended content. err=%{public}@
%{public}@ no response body - treating as failure
%{public}@ registering APNS token %{public}@
%{public}@ Failed to load url bag. err=%{public}@
%{public}@ Missing register-success url in bag - skipping
%{public}@ request failed. err=%{public}@
%{public}@ recieved response %{public}@
%{public}@ Performing request with storeID %lld, affiliate %{public}@
%{public}@ No active iTunes account - failing request
%{public}@ Finished request with err %{public}@
%{public}@ Performing platform request of %ld items with profile '%{public}@'
%{public}@ Request completed with %ld responses. err=%{public}@
MLLM %p: playback sync initialized without a server defined local participant UUID: locallyGeneratedUUID=%{public}@
MLLM %p: ignoring participant state of unknown form %{private}@
MLLM %p: ignoring transport control state of unknown form %{private}@
MLLM %p: no state found in sync payload %{private}@
MLLM %p: synchronizePlaybackStateForReason [flushing pending completions] completionCount=%ld
MLLM %p: _loadInitialPlaybackSyncData [request failed] error=%{public}@
MLLM %p: synchronizePlaybackState [invalid JSON] reason=%{public}@ error=%{public}@ participantStateString=%{public}@
MLLM %p: synchronizePlaybackState [importing] reason=%{public}@ participantState=%{public}@
MLLM %p: synchronizePlaybackState [invalid JSON] reason=%{public}@ error=%{public}@ transportControlStateString=%{public}@
MLLM %p: synchronizePlaybackState [importing] reason=%{public}@ transportControlState=%{public}@
MLLM %p: synchronizePlaybackState [computed local currentItemID] reason=%{public}@ currentItemID=%{public}@
MLLM %p: synchronizePlaybackState [importing] reason=%{public}@ currentItemID=%{public}@
MLLM %p: reloadTransportControlStateForItemWithIdentifier calling fetching item state [coordinator requested] itemID=%{public}@
MLLM %p: reloadTransportControlStateForItemWithIdentifier [invalid JSON] itemID=%{public}@ error=%{public}@ transportControlStateString=%{public}@
MLLM %p: reloadTransportControlStateForItemWithIdentifier [importing] itemID=%{public}@ transportControlState=%{public}@
MLLM %p: reloadTransportControlStateForItemWithIdentifier [fetch request failed] error=%{public}@
MLLM %p: reloadTransportControlStateForItemWithIdentifier enqueuing completion handler [fetch server state in progress]
MLLM %p: _playbackCoordinatorDidIssueCommandToPlaybackObjectNotification [ignoring local event] userInfo=%{public}@
MLLM %p: _playbackCoordinatorDidIssueCommandToPlaybackObjectNotification [produced event] event=%{public}@ userInfo=%{public}@
%{public}@ Loading carrier bundling status is not allowed because phone number access is restricted.
%{public}@ Returning last known subscription status %{public}@ with error %{public}@ for: %{public}@
%{public}@ Using cached subscription status %{public}@ for: %{public}@
%{public}@ Aborted fetching subscription status because privacy link needs to be displayed first.
%{public}@ Subscription status load failed for %{public}@ due to URL bag load failure: %{public}@
%{public}@ Successfully loaded bag: %{public}@ (serverCorrelationKey: %{public}@; serverEnvironment: %{public}@).
%{public}@ Subscription status load failed for %{public}@ due to missing the key in the bag.
%{public}@ Skipping loading of carrier bundling status because the combination (MCC: %{public}@, MNC: %{public}@) for the current active SIM card is not in the allow list.
%{public}@ Subscription status load failed for %{public}@ due to invalid response.
%{public}@ Received subscription status response for %{public}@: %{public}@
%{public}@ Failed parsing subscription status response for %{public}@ with error: %{public}@.
%{public}@ Received invalid token response for %{public}@, authenticating...
%{public}@ Authentication failed with error: %{public}@
%{public}@ Received invalid token response but not allowed to authenticate for: %{public}@
%{public}@ Subscription status load failed for %{public}@ due to response error: %{public}@
%{public}@ Enqueued data request with invalid url '%{public}@'
%{public}@ %{public}@ pausing request...
%{public}@ %{public}@ resuming request...
%{public}@ %{public}@ failed to cancel request because it could not be found
%{public}@ %{public}@ cancelling request...
%{public}@ Pausing...
%{public}@ Resuming...
%@ %{public}@ task finished. err=%{public}@
%{public}@ finished task %{public}@ for request %{public}@ [%lld sent, %lld rcvd in %.3fs (%lld bytes/s)]. err=%{public}@
%{public}@ no request for completed task %{public}@ - ignoring
%{public}@ %{public}@ exceeded the redirect limit - aborting
%{public}@ %{public}@ handling redirect response --> %{public}@
%{public}@ %{public}@ Failed to process redirect response. err=%{public}@
%{public}@ either response %{public}@ or new request %{public}@ is invalid - ignoring
%{public}@ no request for redirected task %{public}@ - ignoring
%{public}@ %{public}@ received response for task %{public}@: %{public}@
%{public}@ no request for data task %{public}@ - ignoring
%@ %{public}@ download task finished. location=%{public}@
%@ %{public}@ moving download file %{public}@ --> %{public}@
%@ %{public}@ failed to link download file %{public}@ --> %{public}@
%{public}@ enqueueing new %{public}@ request %{public}@ with url %{public}@
%{public}@ Checking request queue (counter = %lu).
%{public}@ Request queue state for counter = %lu: _activeRequests = %{public}@, _pendingRequests = %{public}@
%{public}@ Activating request %{public}@
%{public}@ %{public}@ failed to build URL request. err=%{public}@
%{public}@ %{public}@ created URL task %{public}@ (attempt %lu/%lu) for request: %{public}@
%{public}@
%{public}@ %{public}@ created URL task %{public}@ (attempt %lu/%lu) for request: %{public}@
%{public}@ retrying request %{public}@ in %f seconds (retryReason = %{public}@, retryCount = %lu, maxRetryCount = %lu)
%{public}@ rejecting retry for request %{public}@ (retryReason = %{public}@, retryCount = %lu, maxRetryCount = %lu)
%{public}@ Checking for timeouts
%{public}@ timing out request %{public}@
%{public}@ Scheduling next timeout check in %.2fs
%{public}@ Canceling timeout timer
%{public}@ Logging CoreAnalytics %{public}@ event: %@
%{public}@ No bag profile name or profile version provided - using default
Error reading restore configuration from bag
Asset type %{public}@ is not present in allowed restore kinds (%{public}@)
StoreMatchStatus is not in acceptable list - allowedMatchStatus=%{public}@, itemMatchStatus=%lld
Error reading restore URL from bag
Could not get properties for %{public}@, error=%{public}@
Invalid userName (%{public}@), DSID (%{public}@)
Error serializing request body data
%{public}@ Serializing request body failed with error: %{public}@
%{public}@ Encountered missing bag value at key path %{public}@
%{public}@ Error %{public}@ completing %lu play activity events with session token:%llu flushResult:%lu
%{public}@ Completed %lu play activity events with session token:%llu flushResult:%lu with error %{public}@
%{public}@  Error %{public}@ flushing play activity events for %{public}@
%{public}@  Finished flushing play activity events for %{public}@ with error %{public}@
%{public}@ Recording play activity events: %@
%{public}@ Error %{public}@ recording %lu play activity events
%{public}@ Finished recording %lu play activity events with error %{public}@
Removing play events up to revision: %llu
%{public}@ Error %{public}@ removing play activity events upto revision %llu
%{public}@ Finished removing play activity events upto revision %llu with error %{public}@
%{public}@ Error %{public}@ setting revision %llu, version token %{public}@ for end point identifier %{public}@
%{public}@ Finished setting revision %llu, version token %{public}@ for end point identifier %{public}@ with error %{public}@
%{public}@ Error %{public}@ getting play activity events for end point identifier %{public}@
%{public}@ Finished getting %lu play activity events for end point identifier %{public}@
Completing pending play events for revision index set: %@ session token: %llu with result: %lu
Session information: %@
Removing pending revisions index set %@ from sessionInformation revisions index set: %@
Resulting index set: %@
Existing additional pending revisions index set: %@
New additional pending revisions index set from flush success: %@
New additional pending revisions index set from flush failure: %@
Revisions version token has changed, clearing out.
Connection to daemon play activity controller interrupted.
Connection to daemon play activity controller invalidated.
%{public}@: Failed to unarchive revision information. Error = %{public}@
%{public}@: Failed to archive revision information. Error = %{public}@
%{public}@ Disabling push notifications for type %{public}@
%{public}@ Missing remove-push-notification-type-url url in bag - skipping
%{public}@ removePushNotification request failed. err=%{public}@
%{public}@ removePushNotification request returned response %{public}@
ILL %p: Deallocating.
ILL %p: Starting.
ILL %p: forcing reconnect because: %{public}@
ILL %p: already syncing playback with coordinator: %{public}@
ILL %p: beginning playback sync with coordinator: %{public}@
ILL %p: failed to begin playback sync with AVCFPlaybackCoordinator [ICLiveLink compiled without AVCFPlaybackCoordinator.h]
ILL %p: ending playback sync
ILL %p: broadcastDirectCurrentItemChangedToItemIdentifier itemId=%{public}@
ILL %p: Notifying server of updated externalID: %{public}@
ILL %p: expectingToJoin startItem=%{public}@ asInitiator=%{BOOL}u
ILL %p: fetchPlaybackSyncStateForMedium [first AV sync] initialAVSyncStartItem=%{public}@ initialAVSyncInitiator=%{BOOL}u
ILL %p: Failed to find participant with UUID: %{public}@, in participants: %{public}@
ILL %p: receivedEvent delegate=<%{public}@ %p> event=%{public}@
ILL %p: Serialization failed with error %{public}@ for transport control state %{public}@
ILL %p: Serialization failed with error %{public}@ for participant state %{public}@
ILL %p: Playback sync payload had no recognized key. Payload: %{public}@
ILL %p: Received invalid AddItemsAction %{public}@
ILL %p: Received AddItemsAction with displayNotice=NO %{public}@
ILL %p: Received invalid CurrentItemChangeAction %{public}@
ILL %p: [received current item change] currentItemIdentifier=%{public}@ originator=%{public}@
ILL %p: Received CurrentItemChangeAction with displayNotice=NO %{public}@
ILL %p: Received invalid CurrentItemTransitionAction %{public}@
ILL %p: [received current item transition - INFORMATIONAL ONLY] fromItemID=%{public}@ toItemID=%{public}@ originator=%{public}@
ILL %p: Received invalid MoveItemAction %{public}@
ILL %p: Received MoveItemAction with displayNotice=NO %{public}@
ILL %p: Received invalid ParticipantChangeAction %{public}@
ILL %p: Received Participant Leave/Disconnect for unknown participant ID = %ld
ILL %p: Received invalid PlaybackSyncAction %{public}@
ILL %p: No payload for sync message %{public}@
ILL %p: Could not construct payload for sync message %{public}@
ILL %p: Received invalid PlayNowQueueItemsAction %{public}@
ILL %p: Received PlayNowQueueItemsAction without preferredPlayItemId, using first itemId: %{public}@
ILL %p: Received PlayNowQueueItemsAction with displayNotice=NO %{public}@
ILL %p: Received invalid QueueSyncAction %{public}@
ILL %p: Received QueueSyncAction with displayNotice=NO %{public}@
ILL %p: Received QueueSyncAction with displayNotice=YES but no DisplayMessage %{public}@
ILL %p: Received invalid ReactionAction %{public}@
ILL %p: Received ReactionAction with displayNotice=NO %{public}@
ILL %p: Received invalid RemoveItemAction %{public}@
ILL %p: Received RemoveItemAction with displayNotice=NO %{public}@
ILL %p: Received invalid ReplaceQueueItemsAction %{public}@
ILL %p: Received ReplaceQueueItemsAction without preferredPlayItemId, using first itemId: %{public}@
ILL %p: Received ReplaceQueueItemsAction with displayNotice=NO %{public}@
ILL %p: Received invalid ServerNoticeAction %{public}@
ILL %p: Received ServerNoticeAction with displayNotice=NO %{public}@
ILL %p: Received ParticipantChangeAction with displayNotice=NO %{public}@
ILL %p: Received ParticipantChangeAction for the local participant: %lld
ILL %p: Received Participant Join/Connect for unknown participant ID = %ld
ILL %p: _handleReceivedMessage enqueuing action: %{public}@
ILL %p: Received unhandled message %{public}@
ILL %p: Dropping participants [waiting for clientInfo] %{public}@
ILL %p: _handleUpdatedQueue [serverRevision:(%ld --> %ld), isAutoPlayAvailable:(%{BOOL}u --> %{BOOL}u), isAutoPlayEnabled:(%{BOOL}u --> %{BOOL}u)]
ILL %p: _handleUpdatedQueue dropping queue update [client already has newer revision] currentRevision=%ld updatedRevision=%ld
ILL %p: _processPendingActions: [action already in flight] action=%p pendingActionCount=%ld
ILL %p: _processPendingActions: [processing action] action=%p
ILL %p: _processPendingActions: [completed action] action=%p pendingActionCount=%ld
ILL %p: Received ClientInfo action with no matching completion %{public}@
ILL %p: Received invalid action %{public}@
ILL %p: Received unknown action %{public}@
ILL %p: _updateParticipantsWithReason [requesting] reason=%{public}@ traceID=%{public}@
ILL %p: _updateParticipantsWithReason [received response] reason=%{public}@ traceID=%{public}@ participants=%{public}@
ILL %p: received no participants in response.
ILL %p: _updateQueueWithReason [requesting] reason=%{public}@ traceID=%{public}@
ILL %p: _updateQueueWithReason [received response] reason=%{public}@ traceID=%{public}@ queue=%{public}@
ILL %p: received no queue in response.
ILL %p: _updatePlaybackControlSettingsWithReason [requesting] reason=%{public}@ traceID=%{public}@
ILL %p: _updatePlaybackControlSettingsWithReason [received response] reason=%{public}@ traceID=%{public}@ settings=%{public}@
ILL %p: received no playback control settings in response
ILL %p: stopping live link [failed to load initial participants] error=%{public}@
ILL %p: stopping live link [failed to load initial queue] error=%{public}@
ILL %p: received unexpected status %{public}@ for Client Info. Stopping.
ILL %p: calling delegate didStartLiveLink
ILL %p: calling delegate liveLinkDidReconnect
ILL %p: Stopping because connection controller encountered fatal error: %{public}@
ILL %p: Server restart. Will retry connection after termination.
ILL %p: Received error code %@, message %{public}@
ILL %p: QRConnection encountered error %{public}@, willRetry: %{BOOL}u
ILL %p: QRConnection will retry connection after %ld seconds.
ILL %p: QRConnection retry attempt %ld (max attempts: %ld)
ILL %p: _playParamsForPlaybackItemProto: Error deserializing playParams: %{public}@ error: %{public}@
ILL %p: setMediaIdentifiers:preferredStartIndex: trimming from %ld to %d items. Taking items from indices %ld to %ld.
ILL %p: replaceTracklist completing immediately [tracklist.totalItemCount = 0, hasRadioTrackGenerationSource = NO]
ILL %p: [replaceTracklist] preferredStartItemID=%{public}@ tracklist=%{public}@
ILL %p: [replaceTracklist] Received requestError=%{public}@
ILL %p: addMediaIdentifiers:afterItemIdentifier: trimming from %ld to %d items.
ILL %p: insertTracklist completing immediately [tracklist.totalItemCount = 0, hasRadioTrackGenerationSource = NO]
ILL %p: [insertTracklist] Received requestError=%{public}@
ILL %p: insertTracklistPlayNow completing immediately [tracklist.totalItemCount = 0, hasRadioTrackGenerationSource = NO]
ILL %p: [insertTracklistAndPlayNow] Received requestError=%{public}@
ILL %p: [removeItem] Received requestError=%{public}@
ILL %p: [moveItemBefore] Received requestError=%{public}@
ILL %p: [moveItemAfter] Received requestError=%{public}@
ILL %p: getExpectedCurrentItemWithCompletion returning nil [currentItemID not in queue]
ILL %p: getExpectedCurrentItemWithCompletion returning nil [currentItemID not in PlaybackSyncState]
ILL %p: _playbackItemProtosForTracklist: trimming from %ld to %d items. Taking items from indices %ld to %ld.
%{public}@: Starting lease session...
%{public}@: Start: Successfully started.
%{public}@: Start: Failed to import lease response data with error: %{public}@
%{public}@: Start: Client data missing from response.
%{public}@: Start: Received response error: %{public}@
%{public}@: Start: Failed to generate FairPlay sync session with error: %{public}@
%{public}@: Start: Failed to retrieve a valid DSID from the identity store.
%{public}@: Start: Lease session already started.
%{public}@: Stopping lease session...
%{public}@: Stop: Successfully ended lease sync.
%{public}@: Stop: FairPlay failed ending lease sync with error: %{public}@.
%{public}@: Lease session already stopped, returning success.
%{public}@: Lease renew timer fired.
%{public}@: Renew: Successfully processed renew response data.
%{public}@: Renew: Failed to process response data with error: %{public}@.
%{public}@: Renew: No client data in response, treating as successful.
%{public}@: Renew: Response failed with error: %{public}@
%{public}@: Renew: Failed to generate renew request data with error: %{public}@
%{public}@: Lease renew invalid because the session is no longer running.
%{public}@: Skipping renewal timer scheduling with automatic refresh count: %li, leaseExpirationDate: %{public}@, isRunning: %{public}@
%{public}@: Scheduling lease renewal in %f seconds with expiration date of: %{public}@.
%{public}@ Starting
%{public}@ Failed to load icloud account properties. err=%{public}@
%{public}@ stopping because the operation was cancelled
%{public}@ Failing due to missing bag key '%{public}@
%{public}@ Error getting deviceGUID
%{public}@ failed to serialize body data. err=%{public}@, bodyDictionary=%{public}@
%{public}@ Request completed with error %{public}@
%{public}@ Recieved a message to increment the badge count of the Music app when it already is badged with the number 1. The count will not be incremented.
%{public}@: Invalid request. %{public}@
%{public}@: %{public}@
%{public}@: No active account. Failing request.
%{public}@: shouldIgnoreCache = YES.
%{public}@: Found music user token in cache.
%{public}@: Did not find music user token in cache.
%{public}@: Failed to get bag with error %{public}@.
%{public}@: Got bag with %{public}@.
%{public}@: Finished with error %{public}@ and status code %{public}@.
%{public}@: Finished with status code %{public}@.
%{public}@: Music user token was revoked. Error description: %{public}@
%{public}@: Server reported success, but %{public}@ was not a string: %{public}@ (of type %{public}@).
%{public}@: Music user token: "%@".
%{public}@: Revoked TCC access for %{public}@ with status %{bool}u.
Failed to obtain device MAC address
Getting MAC address is not supported on this platform
Failed to obtain device class from MobileGestalt
[%{public}@] flushed %lu play events with result %d isFinalResult: %d
[%{public}@] completed pending play events finished with error: %{public}@ for session token: %llu flushResult: %lu
[%{public}@] removing flushed play events finished with error: %{public}@
[%{public}@] Operation has been cancelled, finishing.
[%{public}@] Received play event acquisition error: %{public}@.
[%{public}@] No pending play events, finishing.
[%{public}@] Unexpected empty store account IDs, finishing.
[%{public}@] Adding PAF event %{public}@.
[%{public}@] error (%{public}@ serializing request data (%{public}@).
[%{public}@] error compressing request data
[%{public}@] Flush %d PAF events finished with HTTP code %ld
[%{public}@] MALFORMED PAF EVENTS 
[%{public}@] MALFORMED PAF EVENTS=%{public}@, requestData=%{public}@
[%{public}@] Uploading malformed PAF events
[%{public}@] response is NOT of kind NSHTTPURLResponse
[%{public}@] operation finished with error %{public}@, HTTTP statusCode %ld, parsedResponseBody %{public}@
[%{public}@] Failed to resolve a URL request for override headers with error: %{public}@
[%{public}@] Post URL missing from bag
[%{public}@] Failed to load URL bag with error: %{public}@
%{public}@ - Provided expiration date is nil
%{public}@ - Age verification status has expired
%{public}@ - Age verification status is current
ICURLRequestWaiting
 enableTelemetry=YES request=%{public, signpost.telemetry:string1}s
ICURLRequest
result=%{public, signpost.telemetry:string2}s
ACAccountStore %p - Error retrieving iTunesStore accounts. err=%{public}@
ACAccountStore %p - Error retrieving all store accounts, err=%{public}@
ACAccountStore %p - Error updating active bit for account %{public}@. err=%{public}@
active store account does not have the locker bit set - returning nil
Setting %{public}@ as the active locker account
Removing %{public}@ as the active locker account
ACAccountStore %p - Error setting active locker account %{public}@. err=%{public}@
ACAccountStore %p - Error removing active locker account %{public}@. err=%{public}@
ACAccountStore %p - Error fetching primary apple account. err=%{public}@
ACAccountStore %p - Error retrieving store account for DSID %{public}@. err=%{public}@
ACAccountStore %p - Error retrieving store account type. err=%{public}@
ACAccountStore %p - Error retrieving store account for home ID %{public}@. err=%{public}@
ACAccountStore %p - Error retrieving local store account. err=%{public}@
Failed to serialize body data. error=%{public}@, bodyDictionary=%{public}@
ICAgeVerificationState - cachedStateForDSID: - Reading state from disk - DSID=%@
ICAgeVerificationState - cachedStateForDSID: - Creating default state [No cache found] - DSID=%@
ICAgeVerificationState - cachedStateForDSID: - No cached state [Unactionable DSID] - DSID=%@
%{public}@ Carrier bundling eligibility operation failed for %{public}@ due to missing header enrichment URL in response body: %{public}@
%{public}@ Carrier bundling eligibility operation failed for %{public}@ due to missing silent SMS message or number in response body: %{public}@
%{public}@ Sending header enrichment response.
%{public}@ Carrier bundling eligibility operation failed for %{public}@ error while sending header enrichment response: %{public}@
%{public}@ Sending header enrichment request.
%{public}@ Carrier bundling eligibility operation failed for %{public}@ because header enrichment failed with error: %{public}@.
%{public}@ Performing delayed retry after %{public}f seconds: still needs header enrichment.
%{public}@ Carrier bundling eligibility operation failed for %{public}@ due to URL bag load failure: %{public}@
%{public}@ Carrier bundling eligibility operation failed for %{public}@ due to missing the key in the bag.
%{public}@ Encountered error trying to serialize body data for %{public}@: %{public}@.
%{public}@ Sending preflight request.
%{public}@ Carrier bundling eligibility operation failed for %{public}@ error while issuing preflight request: %{public}@
%{public}@ Carrier bundling eligibility operation failed for %{public}@ due to invalid response.
%{public}@ Got carrier bundling response for %{public}@ with body: %{public}@
%{public}@ Silent SMS succeeded.
%{public}@ Failed to send silent SMS for %{public}@.
%{public}@ Carrier bundling eligibility operation failed for %{public}@ due to error in response body: %{public}@
%{public}@ Performing delayed retry after %{public}f seconds: still needs silent SMS.
[ICUserIdentityStore] - Returning zero SiriSharedUserIDs [unsupported platform]
unexpected dialog button action type %ld
Failed to create user notification
failed to find user notification button for responseFlags %lu
Performing Buy button action with params %{public}@
Failed to perform buy button action. err=%{public}@
missing action URL in Goto button action - skipping
unknown Goto button action subtarget %{public}@
missing action URL in family permissions button action - skipping
Failed to resolve identity for family permissions dialog. err=%{public}@
Failed to resolve account for family permissions dialog. err=%{public}@
Failed to load APRequestHandler class - assuming not available on this platform
Family permissions request completed with err=%{public}@
%{public}@ Received darwin notification: %{public}@
%{public}@ Failed to weak link symbol BYSetupAssistantLaunchedDarwinNotification
%{public}@ Registering for darwin notification: %{public}@
%{public}@ Failed to weak link symbol BYSetupAssistantFinishedDarwinNotification
%{public}@ Could not determine if setup assistant needs to run - assume its not needed
%{public}@ initialized. isSetupAssistantComplete=%{BOOL}u, isDeviceSetupComplete=%{BOOL}u
%{public}@ Setup assistant has completed:%{BOOL}u
 enableTelemetry=YES 
ICInitialSync
%{public}@ Device %{public}@ has not completed setup and initial sync
%{public}@ Device %{public}@ has completed setup and initial sync
%{public}@ Running %d blocks of type %d
%{public}@ Performing %{public}@ authentication for account %{public}@
%{public}@ No account provided - skipping verification
%{public}@ Skipping silent authentication attempt due to throttling. last attempt was at %{public}@ (%.2fs ago)
%{public}@ Authentication task complete error: %{public}@
%{public}@ Authentication task complete
%{public}@ Handling dialog request %{public}@
%{public}@ Failed to present dialog. err=%{public}@
%{public}@ Retrieving account notifications switches.
%{public}@ Successfully retrieved account notifications switches.
%{public}@ Setting account notifications switches to: %{BOOL}u.
%{public}@ Successfully retrieved account notifications switches response.
%{public}@ Cacheing show in library switch as %{BOOL}u.
%{public}@: Encountered error: %{public}@
%{public}@: Received data of length: %li.
%{public}@: Finished reading.
%{public}@: Failing to send message as there is no longer a pairing session
%{public}@: Writing data of length: %li
%{public}@: Sending request message: %@
%{public}@: Sending response message: %@
%{public}@: Stream did close.
%{public}@: Received message: %@
%{public}@ Failed to send response message. err=%{public}@
%{public}@ failed to load account properties. err=%{public}@
%{public}@ failed to load bag. err=%{public}@
%{public}@ failed to find bag key for url endpoint
%{public}@ invalid message parm: {%{public}@ : %{public}@}
%{public}@ failed to serialize request object
%{public}@ Log event request failed. err=%{public}@
Request %{public}@ issued before before first unlock, returning error.
%{public}@ - buildURLRequestWithCompletionHandler [Delegated identity found] - delegatedIdentity=%@
%{public}@ - buildURLRequestWithCompletionHandler - Adding delegation info to builder - delegatedDSID=%@ - delegatedToken=%@
%{public}@ Using store request for url with untrusted host: '%{public}@'
%{public}@ Building %{public}s store URL request
%{public}@ - buildStoreURLRequestWithURLRequest:properties:completionHandler: - Delegation header [dsid] [%@: %@]
%{public}@ - buildStoreURLRequestWithURLRequest:properties:completionHandler: - Delegation header [token] [%@: %@]
%{public}@ failed to sign request. err=%{public}@
%{public}@ creating mescal signature for request. configuration=%{public}@
%{public}@ -- Error creating database, removing if possible...: %@ -- %@
%{public}@ -- Removing database successful, attempting to recreate...: %@ -- %@
%{public}@ -- Error creating database for a second time, bailing out: %@
%{public}@ -- Error removing database: %@ -- %@
%{public}@ -- Error creating directory: %@ -- %@
Failed to query for revisions index set. err=%{public}@
Failed to set database property ('%{public}@' = '%{public}@'). err=%{public}@
Failed to delete database property '%{public}@'. err=%{public}@
Failed to get database property '%{public}@'. err=%{public}@
RemoveDRM operation complete. err=%{public}@, resultInfo=%{public}@
Failed to parse server error for %{public}@. Raw error dictionary: %{public}@.
%{public}@ Creating downloadTask with URLRequest: %{public}@
%{public}@ Creating assetDownloadTask with urlAsset: %{public}@, options %{public}@
%{public}@ Creating aggregateAssetDownloadTask with urlAsset: %{public}@, options %{public}@
%{public}@
%{public}@: listenerEndpointForService - XPC Error retrieving endpoint [Attempt %ld of %ld] - service=%{public}@[%ld] - error=%{public}@
%{public}@: listenerEndpointForService - XPC Error [no listener endpoint for service] - service=%{public}@[%ld] - error=%{public}@
%{public}@: listenerEndpointForService [done with error] - service=%{public}@[%ld] - endpoint=%{public}@ - error=%{public}@
%{public}@: listenerEndpointForService [done] - service=%{public}@[%ld] - endpoint=%{public}@
%{public}@: listenerEndpointProviderConnection [started]
%{public}@: listenerEndpointProviderConnection [done] - connection:%{public}@
%{public}@: Opening with security settings: %@
%{public}@: Finishing pairing session with error: %{public}@
%{public}@: Failed to derive output key (OSStatus = %li)
%{public}@: Failed to derive input key (OSStatus = %li)
%{public}@: Passing data of length %li to pairing session
%{public}@: Error returned from PairingSessionExchange: %i
%{public}@: Registered new bag observer with token: %{public}@.
%{public}@: Removed bag observer with token: %{public}@.
%{public}@: Invalidated timer for bag expiration.
%{public}@: Bag expiration date is in the past: %{public}@. Not scheduling timer for bag expiration.
%{public}@: Scheduling timer for bag expiration for date %{public}@; i.e. for %.1f seconds.
%{public}@: Bag expiration timer did fire.
%{public}@: Beginning to observe bag.
%{public}@: Stopped observing bag.
%{public}@: Handling %{public}@.
%{public}@: Requesting bag with policy %{public}@.
%{public}@: Failed to fetch bag with error: %{public}@.
%{public}@: Bag did change: %{public}@ (serverCorrelationKey: %{public}@; serverEnvironment: %{public}@). About to invoke %llu observation handler%s.
%{public}@: Bag did not change. Skipping invoking observation handlers.
%{public}@: Invoking observation handler with token %{public}@; bag = %{public}@.
%{public}@: Handling network reachability change; isRemoteServerLikelyReachable = %{BOOL}u.
%{public}@: Deferring to %{public}@ to process initial response with status code %{public}@ for %{public}@.
%{public}@: Invalidating developer token upon processing completed response with status code %{public}@.
%{public}@: Invalidating developer token upon processing completed response with status code %{public}@, after considering generic response handler.
%{public}@: Invalidating user token upon processing completed response with status code %{public}@, after considering generic response handler.
%{public}@: Completed processing response %{public}@ with error %{public}@.
HTTP response=%{public}@
body=%{public}@
%{public}@: Completed processing response %{public}@.
%{public}@: Deferring to %{public}@ to process completed response with status code %{public}@ for %{public}@.
%{public}@: Retrying request after successfully invalidating developer token.
%{public}@: Retrying request after successfully invalidating music user token.
%{public}@: Encountered error while processing initial response %{public}@. %{public}@
[%{public}@] Finishing.
[%{public}@] Response has invalid format
[%{public}@] Response returned error: %{public}@
[%{public}@] Missing authorize machine URL bag key
%{public}@ failed to get identity properties for token request. err=%{public}@
%{public}@ not fetching library token because there's no active account
%{public}@ Failed to gather DSIDs from the account store to fetch tokens for. err=%{public}@
%{public}@ Skipping account %@ because either the DSID is missing or it has no home user ids
%{public}@ getTokenResultForDSID returning cached token result %{public}@
%{public}@ Refreshing expired token for DSID %@
%{public}@ Failed to refresh the token. err=%{public}@
%{public}@ getTokenResultsForDSIDs returning cached token results %{public}@
%{public}@ Refreshing expired tokens for DSIDs %@
%{public}@ Failed to refresh tokens. err=%{public}@
%{public}@ cachedTokenAndResetCache %d
%{public}@ failed to get remote object proxy for token request. err=%{public}@
%{public}@ Failed to fetch all client tokens. err=%{public}@
%{public}@ No token result for DSID %@ in bulk response - this will be treated as an error
%{public}@ failed fetching siri shared user id for homeIdentifier %{public}@:%{private}@. err=%{public}@
%{public}@ Refreshing token for DSID %@
%{public}@ Not refreshing token for DSID %@ because privacy acknowledgement is required
%{public}@ Finished fetching new token for DSID %@. err=%{public}@. token=%@
%{public}@ Refreshing tokens for DSIDs %@
%{public}@ Not refreshing token for DSIDs %@ because privacy acknowledgement is required
%{public}@ Failed to fetch new tokens for DSIDs %@. err=%{public}@
%{public}@ No token result for DSID %@ - attempting to fetch it individually
%{public}@ Token result missing from response for DSID %@
%{public}@ Failed to fetch new token for DSID %@. err=%{public}@
%{public}@ fetched new token result for DSID %@: %{public}@
%{public}@ got change notification
%{public}@ Clearing token cache for external change notification
ICLibraryAuthServiceClientTokenProvider client connection interrupted
%{public}@ Failed to deserialize cached token result data. err=%{public}@
%{public}@ Failed to serialize token result to cache. err=%{public}@
%{public}@ Skipping background refresh of DSID %@. last error: %{public}@}
%{public}@ Setting timer to refresh library auth token for DSID %@ at %{public}@}
%{public}@ Performing bulk token refresh
%{public}@ No DSIDs available to refresh - ignoring
%{public}@ Pre-fetching library token for new account with DSID %@
%{public}@ Removing token entry for non-existent or inactive account DSID %@
%{public}@ Rescheduling a refresh due to account changes
%{public}@ Connection interrupted
%{public}@ Connection invalidated
%{public}@ Request completed. err=%{public}@
%{public}@ Executing playInfo request with context %{public}@
%{public}@ Failed to extract account DSID. err=%{public}@
%{public}@ Failed to serialize body data. err=%{public}@
%{public}@ Request URL not found - failing request
%{public}@ failed to parse response
%{public}@: Acknowledging privacy policy for %{public}@ (%{public}@)...
%{public}@: Failed to acknowledge privacy policy for %{public}@ (%{public}@). didSucceed = %{BOOL}u, error = %{public}@.
%{public}@: Successfully completed privacy policy acknowledgement for %{public}@.
%{public}@: Beginning to observe privacy acknowledgement for %{public}@.
%{public}@: Registered new observer of privacy acknowledgement for %{public}@ with token: %{public}@.
%{public}@: Removed observer of privacy acknowledgement for %{public}@ with token: %{public}@.
%{public}@: Stopped observing privacy acknowledgement for %{public}@.
%{public}@: Ignoring privacy acknowledgement for %{public}@ because -[ICDefaults isPrivacyAcknowledgementDisabledForMusic] returned YES.
%{public}@: Forcing privacy acknowledgement needed for %{public}@ because -[ICDefaults shouldForcePrivacyAcknowledgementRequiredForMusic] returned YES.
%{public}@: Privacy acknowledgement required for %{public}@ (%{public}@)? %{BOOL}u.
%{public}@: Invoking observation handler for %{public}@ with token %{public}@. isPrivacyAcknowledgementRequired = %{BOOL}u.
[Lease] - [%{public}@] - _handlePlaybackLeaseDidEndPushNotification - _hasPendingLeaseDidEndPushNotification: %{BOOL}u
[Lease] - [%{public}@] - _receivedUserInteractionEvent - leaseStatus: %{public}@
[AL] - ICMusicSubscriptionPlaybackRequestOperation canceled - request: %{public}@
[Lease] - [%{public}@] - _newOperationForPlaybackRequest - Will start playback request operation - Request: %{public}@ - Type: %ld
[Lease] - [%{public}@] - _newOperationForPlaybackRequest - Completed playback request operation - Request: %{public}@ - Type: %ld - status: %{public}@
[Lease] - [%{public}@] - Automatic lease refresh timer enabled with time left: %f.
[Lease] - [%{public}@] - Automatic lease refresh timer disabled.
[Lease] - [%{public}@] - PlaybackLeaseDidEndPushNotification - Dropped [_hasPendingLeaseDidEndPushNotification:NO]
[Lease] - [%{public}@] - PlaybackLeaseDidEndPushNotification - Deferred until refresh timer gets activated [_automaticRefreshCount:0]
[Lease] - [%{public}@] - PlaybackLeaseDidEndPushNotification - Deferred until the in-flight lease acquisition completed [hasInflightLeaseAcquisition:YES]
[Lease] - [%{public}@] - PlaybackLeaseDidEndPushNotification - Dropped [hasOnlinePlaybackKeys:NO]
[Lease] - [%{public}@] - PlaybackLeaseDidEndPushNotification - Completed error: %{public}@
[Lease] - [%{public}@] - PlaybackLeaseDidEndPushNotification - Completed
[Lease] - [%{public}@] - PlaybackLeaseDidEndPushNotification - Handled
ICCloudClientAvailabilityService %p - Creating XPC Client Connection [started]
ICCloudClientAvailabilityService %p - Creating XPC Client Connection [failed] - endpoint=%{public}@ - error=%{public}@
ICCloudClientAvailabilityService %p - Creating XPC Client Connection [done] - connection=%{public}@
ICCloudClientAvailabilityService %p - Unable to create XPC Connection [no listener endpoint]
ICCloudClientAvailabilityService %p - Connection to cloud availability service interrupted
ICCloudClientAvailabilityService %p - Connection to cloud availability service invalidated
ICCloudClientAvailabilityService %p - Resetting XPC connection to nil
%{public}@ Failed to read message store data. err=%{public}@
%{public}@ Failed to deserialize message entry with identifier %{public}@. err=%{public}@
%{public}@ Failed to deserialize message metadata entry with identifier %{public}@. err=%{public}@
%{public}@ Failed to deserialize event entry. err=%{public}@
%{public}@ Failed to serialize message entry with identifier %{public}@. err=%{public}@
%{public}@ Failed to serialize message metadata entry with identifier %{public}@. err=%{public}@
%{public}@ Failed to serialize event entry with identifier %{public}@. err=%{public}@
%{public}@ Failed to commit message store data. err=%{public}@
warning: Internal default %{public}@ was set to %{BOOL}u. This is an unsupported configuration meant to help with some aspects of the development of the Glide feature.
%{public}@ Failed to generate subscription lease fairplay data. err=%{public}@
%{public}@ Performing request with storeID=%lld, itemName=%{public}@
%{public}@ Finished with err=%{public}@, response=%{public}@
%{public}@ Performing setParentalControl request
%{public}@ failed - no DSID for account %{public}@
%{public}@ setParentalControl request failed. err=%{public}@
%{public}@ setParentalControl request returned response %{public}@
%{public}@ Missing setParentalControl url in bag - skipping
%{public}@: Cloud service status monitor was configured with privacy acknowledgement policy: %{public}@.
%{public}@: Cloud service status monitor incremented requests count for observing cloud service status to %lu. %{public}s observing cloud service status.
%{public}@: Cloud service status monitor decremented requests count for observing cloud service status to %lu. %{public}s observing cloud service status with token %{public}@.
%{public}@: Requesting developer token from service.
%{public}@: Skipping redundant request for developer token from service; appending completion handler to existing list (%lu completion handlers).
%{public}@: Invoking %lu completion handler%s for developer token.
%{public}@: Requesting user token from service.
%{public}@: Skipping redundant request for user token from service; appending completion handler to existing list (%lu completion handlers).
%{public}@: Invoking %lu completion handler%s for user token.
%{public}@: Requesting MusicKit tokens from service.
%{public}@: Skipping redundant request for MusicKit tokens from service; appending completion handler to existing list (%lu completion handlers).
%{public}@: Invoking %lu completion handler%s for MusicKit tokens.
%{public}@: Revoking music user tokens DSID %{public}@
%{public}@: Revocation of music user tokens completed error: %{public}@
%{public}@: Revocation of music user tokens completed
%{public}@: Active account did change. Posting %@.
%{public}@: Began transaction with identifier %{public}@ for cloud service status monitor connection; updated number of active transactions: %lu.
%{public}@: Attempted to end transaction with unknown transaction identifier for cloud service status monitor connection: %{public}@. Ignoring.
%{public}@: Ended transaction with identifier %{public}@ for cloud service status monitor connection; updated number of active transactions: %lu.
%{public}@: About to invalidate cloud service status monitor connection.
%{public}@: Cloud service status monitor connection was interrupted.
%{public}@: Cloud service status monitor connection was invalidated.
%{public}@: Encountered error while requesting %{public}@. %{public}@ Underlying error: %{public}@.
%{public}@: %{public}@.
%{public}@: Did invalidate cloud service status monitor connection.
%{public}@: Did reset cloud service status monitor connection.
%{public}@: Was previously observing cloud service status with token: %{public}@. Scheduling appropriate triggers to request begin observing cloud service status again.
%{public}@: Application has expired authorization, and couldn't be renewed.
%{public}@: Connection to %{public}@ service interrupted.
%{public}@: Connection to %{public}@ service invalidated.
%{public}@: Connection to %{public}@ failed to get remote object proxy: %{public}@
%{public}@: Failed to validate authorization expiry: %{public}@.
%{public}@: Began observing cloud service status with token: %{public}@.
%{public}@: Began observing cloud service status with token: %{public}@, despite the fact that the client requested to end observing it. Immediately cancelling this.
%{public}@: Ending observing cloud service status with token: %{public}@.
%{public}@: Ended observing cloud service status with token: %{public}@.
%{public}@: Observation token %{public}@ did not match with active observation token %{public}@. Did not end observing cloud service status.
%{public}@: Cloud service capabilities did change: %{public}@. Posting %@.
%{public}@: Storefront country code did change: "%{public}@". Posting %{public}@.
%{public}@: Storefront identifier did change: "%{public}@". Posting %@.
%{public}@: Handling "%{public}s" notification: cloud server did launch.
%{public}@: Successfully registered notify token for notify topic named "%{public}s".
%{public}@: Failed to register notify token for notify topic named "%{public}s"; notifyRegisterDispatchStatus = %lu.
%{public}@: Successfully cancelled notify token for notify topic named "%{public}s".
%{public}@: Failed to cancel notify token for notify topic named "%{public}s"; notifyCancelStatus = %lu.
%{public}@: Scheduling timeout timer for cloud server launch for %.1f seconds.
%{public}@: Cloud server launch timeout timer did fire.
%{public}@: Invalidated timeout timer for cloud server launch.
%{public}@: Missing cloud service status observation token despite the fact that the client asked to actively observe it.
%{public}@ %{public}@ attempting re-authentication for HTTP response code %{public}@.
%{public}@ %{public}@ authentication for HTTP response code %{public}@ successful - retrying request
-init is not supported - use sharedCloudContentTasteRequestListener
Error %{public}@ setting content taste type on item %lld.
Set content taste type on item %lld with error %{public}@.
Error %{public}@ setting content taste type on playlist %{public}@
Set content taste type on global playlist %{public}@} with error %{public}@.
Error %{public}@ setting content taste type on album %lld.
Set content taste type on album %lld with error %{public}@.
Error %{public}@ setting running content taste operation
Finished running content taste update operation with error %{public}@.
Connection to media content taste service interrupted
Connection to media content taste service invalidated
<ICCloudAvailabilityController %p> init [CoreTelephonyClient getInternetConnectionStateSync] encountered error=%{public}@
<ICCloudAvailabilityController %p>  Received kCTPerAppNetworkDataAccessPolicyChangedNotification. Updating cellular data restrictions
<ICCloudAvailabilityController %p> Videos allow cellular data: %d
<ICCloudAvailabilityController %p> StoreApps allow cellular data: %d
<ICCloudAvailabilityController %p> getting CTDataConnectionStatus from _telephonyClient <CoreTelephonyClient %p>
<ICCloudAvailabilityController %p> _applicationWillEnterForeground [CoreTelephonyClient getInternetConnectionStateSync] encountered error=%{public}@
<ICCloudAvailabilityController %p> received _telephonyClient CTDataConnectionStatus.state=%{private}@
<ICCloudAvailabilityController %p> _isCellularDataActive=%{BOOL}u, cellularDataRestrictedForMusic=%{BOOL}u, newIsCellularDataActive=%{BOOL}u, newCellularDataRestrictedForMusic=%{BOOL}u
<ICCloudAvailabilityController %p> Error (domain %d, code %d) registering for PerAppNetworkDataAccessPolicyChangedNotification
<ICCloudAvailabilityController %p> _registerPerAppNetworkDataAccessPolicyChangedNotificationfor CTPerAppNetworkDataAccessPolicyChangedNotification
<ICCloudAvailabilityController %p> Music restrict cellular data: %d
<ICCloudAvailabilityController %p> CoreTelephonyClientDataDelegate internetConnectionStateChanged: _isCellularDataActive=%{BOOL}u, newIsCellularDataActive=%{BOOL}u
%{public}@: Reloading Music User Token due to external change notification.
%{public}@: _handleMusicUserTokensDidChangeDistributedNotification: didContentsChange = %{BOOL}d
%{public}@: Failed to correct developer token encoded part: "%@".
%{public}@: Failed to convert base 64 encoded string with developer token encoded part to data: "%@".
%{public}@: Failed to deserialize developer token encoded part data with error: %{public}@.
%{public}@: Failed to decode developer token encoded part because resulting object is of unexpected type: %{public}@.
%{public}@: Failed to extract key identifier and team identifier from developer token "%@" because it has an unexpected number of parts: %lu.
%{public}@: Starting session...
%{public}@: Resolving streams...
%{public}@: Finished resolving streams with error: %{public}@
%{public}@: Opening connection...
%{public}@: Finished opening connection with success: %{public}@ error: %{public}@
%{public}@: Failed to get device sender security settings with error: %{public}@
%{public}@: Received response: %{public}@
%{public}@ Not authenticating because %{public}@ authentication is not allowed for this response
%{public}@ Skipping automatic re-authentication because the user hasn't accepted the latest privacy link, and personalization is automatic
%{public}@ Performing %{public}@ authentication using request context %{public}@
%{public}@ Failed to get verification context for identity %{public}@. error=%{public}@
%{public}@ Sending sync request with revision %lld; %{private}@
%{public}@ failed to decode response object
%{public}@ [SKD] - Failed to load enhanced audio configuration from the bag. err=%{public}@
%{public}@ [SKD] - loaded prefetch identifiers %{public}@
%{public}@ [SKD] - Timed out waiting for the enhanced audio configuration to load. we may fail to fetch the shared key
%{public}@ [SKD] - Created AVContentKeySession %{public}@
%{public}@ [SKD] - Adding asset %{public}@. shouldPreloadKeys=%{BOOL}u
%{public}@ [SKD] - Preloading key '%{Public}@' for asset %{public}@
%{public}@ [SKD] - Timed out waiting for the list of content keys on the asset to load. this may delay key fetch
%{public}@ [SKD] - Pausing automatic key renewal
%{public}@ [SKD] - Automatic key renewal will resume when the first key has been requested.
%{public}@ [SKD] - Resuming automatic key renewal
%{public}@ [SKD] - No pending key renewals to wait for
%{public}@ [SKD] - Waiting for key renewals to complete
%{public}@ [SKD] - Waiting for key requests to complete with timeout %lus
%{public}@ [SKD] - Finished waiting for key requests to complete
%{public}@ [SKD] - Waiting for %lu keys: %{public}@
%{public}@ [SKD] - Timed out waiting for %lu keys: %{public}@
%{public}@ [SKD] - handling key request %{public}@. isPrefetchKey=%{BOOL}u, shouldForceStreamingOnlyKeysForPlayback=%{BOOL}u
%{public}@ [SKD] - Requesting persistable content key for %{public}@
%{public}@ [SKD] - Failed to request persistable content key for '%{public}@' - requesting streaming key instead. err=%{public}@
 enableTelemetry=YES type=%{public, signpost.telemetry:number1, name=type}d
ContentKeyRequest
%{public}@ [SKD] - handling persistable content key request %{public}@. isPrefetchKey=%{BOOL}u
%{public}@ [SKD] - Failed to load key from store for key request %{public}@. err=%{public}@
%{public}@ [SKD] - Not using cached key needing renewal for request %{public}@. renewalDate=%{public}@
%{public}@ [SKD] - Returning cached key for key request %{public}@. renewalDate=%{public}@
 enableTelemetry=YES result=%{public, signpost.telemetry:string1, name=result}s
%{public}@ [SKD] - handling renewing key request %{public}@. isPrefetchKey=%{BOOL}u
%{public}@ [SKD] - contentKeySession:%{public}@ contentKeyRequestDidSucceed:%{public}@
%{public}@ [SKD] - contentKeySession:%{public}@ contentKeyRequest:%{public}@ didFailWithError:%{public}@
%{public}@ [SKD] - Secure key request failed for request %{public}@. err=%{public}@
%{public}@ [SKD] - Key server returned a slot error - disabling requesting of offline keys for future retries
%{public}@ [SKD] - Secure key request completed for request %{public}@. response=%{public}@
%{public}@ [SKD] - Failed to create persistable data for key request %{public}@. err=%{public}@
%{public}@ [SKD] - Failed to save key for persistable key request %{public}@. err=%{public}@
%{public}@ [SKD] - Completed content key request %{public}@ with response %{public}@
%{public}@ [SKD] - skipping automatic renewal for offline key request %{public}@
%{public}@ [SKD] - No renewal date provided in response to key request %{public}@ - skipping automatic renewal
%{public}@ [SKD] - Failed to renew key for request %{public}@ - falling back to existing cached key
%{public}@ [SKD] - Failed to load cached prefetch key for request %{public}@. err=%{public}@
%{public}@ [SKD] - Completed content key request %{public}@ with response error %{public}@
%{public}@ [SKD] - Scheduling a retry in 2 minutes for key %{public}@
%{public}@ [SKD] - Scheduling next key renewal using renewal times %{public}@
%{public}@ [SKD] - Scheduling next key refresh at %{public}@
%{public}@ [SKD] - Automatic key renewal is currently paused
%{public}@ [SKD] - Renewing key requests due to expire before %{public}@
%{public}@ [SKD] - Renewing key request %{public}@
%{public}@ [SKD] - No existing key request to renew for identifier %{public}@ - requesting a new one
%{public}@ [SKD] - Requesting key with identifier %{public}@
%{public}@ [SKD] - Finished waiting for key renewals to complete
%{public}@: Requesting developer token using %{public}@ with client identifier %{public}@.
%{public}@: Instantiated AMSBag with profile %{public}@ and version %{public}@: <AMSBag: %p>.
%{public}@: Instantiated AMSMediaTokenService with client identifier %{public}@: %{public}@.
%{public}@: Invalidated cached developer token using %{public}@ with client identifier %{public}@.
%{public}@ - TXTRecord dictionary from data decoding: %{public}@
%{public}@ - TXTRecord dictionary for data encoding: %{public}@
%{public}@ began observing privacy acknowledgement for %{public}@ with token %{public}@.
%{public}@ ending observation of privacy acknowledgement for %{public}@ with token %{public}@.
Disallowing subscription status request for sandboxed user identity %@
warning: it has recently become deprecated to request the music subscription status in process; the new supported code path fetches it in itunescloudd, but you need to add the service %{public}@ to the array value of your entitlement %{public}@ in order to opt into this new code path.
%{public}@ Sending request %{public}@ to subscription status service
%{public}@ Failed to obtain remote proxy to perform subscription status request. error = %{public}@.
Enabling subscription for user identity %@
Failed to enable subscription for user identity %{public}@. err=%{public}@
Disabling subscription for user identity %@
Failed to disable subscription for user identity %{public}@. err=%{public}@
Refreshing subscription for user identity %@
Failed to refresh subscription for user identity %@. err=%{public}@
Invalidating cached subscription status
Delivering result for %{public}@ to %llu status handler%s: error = %{public}@.
Delivering result for %{public}@ to %llu status handler%s: response = %{public}@.
No status handlers found for request %{public}@. pendingRequests = %{public}@
Invalidating connection with identifier %{public}@ to music subscription status service.
Creating connection with identifier %{public}@ to music subscription status service.
Connection to music subscription status service with identifier %{public}@ interrupted.
Connection to music subscription status service with identifier %{public}@ invalidated.
Identifier for severed connection to music subscription status service %{public}@ doesn't match current identifier: %{public}@. Ignoring.
Performing %{public}@; total number of pending requests %llu
Skipping redundant %{public}@; pending identical request %{public}@; total number of status handlers: %llu. total number of pending requests %llu
Cancelling requests for identifiers: %{public}@
%{public}@ handling privacy acknowledgement requirement changed notification: isPrivacyAcknowledgementRequired = %{BOOL}u. Posting distributed notification %{public}@.
%{public}@ handling %{public}@. Posting %{public}@.
[%{public}@] Failed to get device receiver security settings with error: %{public}@
[ICQRConnectionLLDS] <%p> Deallocating.
[ICQRConnectionLLDS] <%p> Populated with shared listening identifier: %{public}@
[ICQRConnectionLLDS] Creating service %@
[ICQRConnectionLLDS] <%p> Using existing pseudonym: %{public}@ with expiry: %{public}@
[ICQRConnectionLLDS] <%p> Provisioning pseudonym for uri: %{private}@.
[ICQRConnectionLLDS] <%p> Provisioned pseudonym: %{public}@ with expiry: %{public}@, error: %{public}@
[ICQRConnectionLLDS] <%p> Will renew pseudonym %{public}@
[ICQRConnectionLLDS] <%p> Cleared while renewing pseudonym.
[ICQRConnectionLLDS] <%p> Failed to renew pseudonym with error: %{public}@
[ICQRConnectionLLDS] <%p> Renewed pseudonym: %{public}@ with expiry: %{public}@
[ICQRConnectionLLDS] <%p> Joining shared listening session %{public}@ with handle %{public}@
[ICQRConnectionLLDS] <%p> Creating shared listening session with handle %{public}@
[ICQRConnectionLLDS] <%p> Failed to load bag with error %{public}@
[ICQRConnectionLLDS] <%p> resolved session discovery URL %{public}@
[ICQRConnectionLLDS] <%p> Response error %{public}@
<%p> unexpected response instance=%{public}@ correlationKey=%{public}@ body=%{public}@
[ICQRConnectionLLDS] <%p> Session discovery response %@
<%p> response contains errors: instance=%{public}@ correlationKey=%{public}@ body=%{public}@
<%p> response is missing required fields: instance=%{public}@ correlationKey=%{public}@ body=%{public}@
<%p> Response is missing required information. instance=%{public}@ correlationKey=%{public}@ body=%{public}@
[ICQRConnectionLLDS] <%p> Missing music API domains.
[ICQRConnectionLLDS] <%p> Missing default music API domain.
[ICQRConnectionLLDS] <%p> bag is missing country code
[ICQRConnectionLLDS] <%p> Selected environment %{private}@.
[ICQRConnectionLLDS] <%p> Cannot determine environment.
[ICQRConnectionLLDS] <%p> Failed to create pinning policy.
Failed to retrieve telephony mobile subscriber country code with error: %{public}@.
Failed to retrieve telephony mobile subscriber network code with error: %{public}@.
Failed to retrieve telephony mobile equipment info with error: %{public}@.
Telephony request to send SMS to %@ failed. Telephony context: %{public}@.
Telephony active subscriptions did change.
Telephony phone number available.
Telephony phone number changed.
Failed to instantiate CoreTelephonyClient.
Current device does not have telephony capability. Skipping telephony client initialization.
Failed to get telephony user default voice subscription context with error: %{public}@.
Found telephony subscription context %{public}@ at slot %ld as the user default voice one.
Could not find a valid telephony subscription context. Available telephony subscription contexts: %{public}@.
Failed to retrieve telephony phone number with error: %{public}@.
%@ phone number changed from %@ to %@.
unexpected storefront value type. propertyType=%{public}@ propertyValue=%{public}@
%{public}@ Failed to load value for bag key '%{public}@'. err=%{public}@
%{public}@ Found unexpected type for bag key '%{public}@' in profile '%{public}@: '%{public}@ (expected String)
%{public}@ Found unexpected type for bag key '%{public}@' in profile '%{public}@: '%{public}@ (expected Array)
%{public}@ Found unexpected type for bag key '%{public}@' in profile '%{public}@: '%{public}@ (expected Dictionary)
%{public}@ Failed to create url for bag key '%{public}@' in profile '%{public}@': '%{public}@'
%{public}@ Found unexpected type for bag key '%{public}@' in profile '%{public}@: '%{public}@ (expected URL)
%{public}@ Found unexpected type for bag key '%{public}@' in profile '%{public}@: '%{public}@ (expected Number)
%{public}@ Failed to find value for variable '%{public}@' in url '%{public}@'
%{public}@ Encountered missing bag key '%{public}@' in profile '%{public}@/%{public}@'
%{public}@ Used fallback value for missing bag key '%{public}@' : '%{public}@'
%{public}@ No fallback value for missing bag key '%{public}@'. this is probably an optional entry
%{public}@: Skipping saga account status request because privacy acknowledgement is required
%{public}@ Received match status response: %{public}@
performing songDownloadDone request. downloadID=%{public}@, songID=%llu
%{public}@ performing request with media kinds to add: %{public}@, kinds to remove: %{public}@
%{public}@ Failed to lookup account ID for user identity %{public}@. err=%{public}@
%{public}@ No active account so nothing to do
%{public}@ Failed to lookup account for user identity %{public}@. err=%{public}@
%{public}@ Updating media kinds from %{public}@ --> %{public}@
%{public}@ AMSAutomaticDownloadKindsSetTask completed with result %{public}@ error: %{public}@
%{public}@ AMSAutomaticDownloadKindsSetTask completed with result %{public}@
%{public}@ No change in media types - finishing
%{public}@ handling authentication request %{public}@
%{public}@ handling dialog request %{public}@
%{public}@ dialog task complete error: %{public}@
%{public}@ dialog task complete
[Lease] - %{public}@ - musicLeaseSession:didFinishPlaybackRequest:withPlaybackResponse: finshed with response=%p, updatedFairPlayKeyStatusList(count)=%d, error=%{public}@...
[Lease] - %{public}@ - musicLeaseSession:requestsFairPlayKeyStatusUpdateWithCompletion:
[Lease] - %{public}@ - musicLeaseSession:requestsFairPlayKeyStatusUpdateWithCompletion: - Completing with lease status: %{public}@
%{public}@: Request was issued before before first unlock, returning error.
%{public}@: Deferring to equivalent store URL request to build the actual URL request: %{public}@.
%{public}@: Building %{public}s URL request.
%{public}@: Skipping personalization; issuing request merely decorated with a developer token: %{public}@.
%{public}@: Issuing request decorated with both a developer token and a user token: %{public}@.
%{public}@: %{public}@ (retryReason = %{public}@, retryCount = %lu, maxRetryCount = %lu)
%{public}@: Unauthorized to fetch user token. Invalidating developer token.
%{public}@: Successfully invalidated developer token; retrying building URL request.
[ICSharedListeningConnectionController][D] <%p> Deallocating.
[ICSharedListeningConnectionController][D] <%p> Taking out assertion %@.
[ICSharedListeningConnectionController][D] <%p> Begin session discovery and connection.
[ICSharedListeningConnectionController][D] Start connection for populated controller.
[ICSharedListeningConnectionController][D] Client trying to start controller in invalidated state.
[ICSharedListeningConnectionController][D] <%p> Releasing assertion %@.
[ICSharedListeningConnectionController][D] %@
[ICSharedListeningConnectionController][E] <%p> Initializing XPC connection.
[ICSharedListeningConnectionController][E] <%p> XPC interrupted.
[ICSharedListeningConnectionController][E] <%p> XPC invalidated.
[ICSharedListeningConnectionController][E] <%p> Requesting hosted connection.
[ICSharedListeningConnectionController][E] <%p> Error retrieving proxy.
%{public}@ was initialized.
%{public}@ is being deallocated. wasObservingSubscriptionStatus=%{BOOL}u
%{public}@: Registered new subscription status observer with token: %{public}@.
%{public}@: Encountered unexpected error while resolving DSID for effective user identity %@: %{public}@.
%{public}@: Removed subscription status observer with token: %{public}@. wasLastObserver=%{BOOL}u
%{public}@: Handling %{public}@. The active user identity has changed in the daemon. Checking to see if the subscription status has changed.
%{public}@: Ignoring %{public}@ because it specifically refers to a different user identity: %{public}@.
%{public}@: Upon handling %{public}@, encountered unexpected error while resolving DSID for effective user identity %@: %{public}@.
%{public}@: Handling %{public}@. DSID changed from %@ to %@. Checking to see if the subscription status has changed.
%{public}@: clearing current subscription status for dsid change
%{public}@: Handling %{public}@. DSID has not changed (it is still equal to %@). Ignoring this notification.
%{public}@: Beginning to observe subscription status.
%{public}@: Stopped observing subscription status.
%{public}@: Requesting subscription status with caching %{public}@, using %{public}@.
%{public}@: Did complete %{public}@. Encountered error: %{public}@.
%{public}@: Did complete %{public}@. Received subscription status response %{public}@.
%{public}@: Subscription status did not change. Skipping invoking observation handlers.
%{public}@: Subscription status did change: %{public}@. About to invoke %llu observation handler%s.
%{public}@: Invoking observation handler with token %{public}@; subscription status = <%{public}@: %p>
%{public}@ retry requested by authkit
%{public}@ Failed to fetch identity properties to process the response. err=%{public}@
%{public}@ Server response included an updated storefront %{public}@
%{public}@ Failed to save updated storefront value. err=%{public}@
%{public}@ invalidating bag cache because invalidate-url-bags is set in the response
%{public}@ completed with:
error: %{public}@
correlationKey: %{public}@
response: 
%{public}@
body: 
%{public}@
%{public}@ completed successfully. correlationKey=%{public}@
%{public}@ received failureType=%{public}@
body=%{public}@
%{public}@ retrying request after action taken for dialog response
%{public}@ retrying request after successful re-authentication
%{public}@ retrying request after machine data action %{public}@
%{public}@ mescal verification failed for the response. err=%{public}@
%{public}@ verifying mescal signature for request. configuration=%{public}@
%{public}@ Not verifying mescal signature because the payload is too large. length=%lld, limit=%lld
%{public}@ %{public}@ Recevied authentication error. server response=%{public}@
%{public}@ %{public}@ received store dialog response %{public}@
%{public}@ %{public}@ no dialog response handler - ignoring
%{public}@: Failed to load accounts to remove cookies. err=%{public}@
%{public}@: Failed to load accounts to remove all cookies. err=%{public}@
%{public}@: Failed to load account for identifier %{public}@. err=%{public}@
[ICUserIdentityStore] - initializing account histories with activeAccountDSID = %{public}@, existingActiveAccountID = %{public}@, timestamp = %lld
[ICUserIdentityStore] Request for properties for active iCloud account before first unlock.
[ICUserIdentityStore] Failed to load active icloud account properties. err=%{public}@
[ICUserIdentityStore] Request for properties for user identity %@ before first unlock.
[ICUserIdentityStore] Failed to load properties for identity %{public}@. err=%{public}@
[ICUserIdentityStore] - updating active account to %{public}@ (timestamp = %lld)
[ICUserIdentityStore] - updating active locker account to %{public}@ (timestamp = %lld)
[ICUserIdentityStore] - removed cloud library setting from %{public}@ (timestamp = %lld) error=%{public}@
[ICUserIdentityStore] - Error retrieving user identities for manageable accounts - error=%{public}@
[ICUserIdentityStore] Failed to fetch local store account synchronously with error: %{public}@.
[ICUserIdentityStore] - Error retrieving user identities for all accounts - error=%{public}@
[ICUserIdentityStore] - Backend changed
[ICUserIdentityStore] Failed to fetch local store account with error: %{public}@.
[ICUserIdentityStore] - Local store account properties change detected [Posting notification]
[ICUserIdentityStore] - checking for active account change at timestamp %llu. activeAccountDSID = %{public}@, lastKnownActiveAccountDSID = %{public}@ (timestamp = %llu)
[ICUserIdentityStore] - Active account change detected
[ICUserIdentityStore] - reloadForExternalChange failed to obtain active account DSID. err=%{public}@
[ICUserIdentityStore] - checking for active locker account change at timestamp %llu. activeLockerAccountDSID = %{public}@, lastKnownActiveLockerAccountDSID = %{public}@ (timestamp = %lld)
[ICUserIdentityStore] - Active locker account change detected
[ICUserIdentityStore] - reloadForExternalChange failed to obtain active locker account DSID. err=%{public}@
[ICUserIdentityStore] - Local store account properties change detected
[ICUserIdentityStore] - _icValidStoreAccountsFromACAccounts=%{public}@
processing machine data action %{public}@
unknown machine data action %{public}@ - ignoring
machine data action %{public}@ completed. err=%{public}@
failed to decode anisette response data from response %{public}@
NSURL: %p -initWithMasterPlaylistURL: Omitting video dictionary [received video dictionary with inconsistent aspect ratio] currentAspectRatio=%f aspectRatio=%f videoDictionary=%@
%{public}@: TXT record data updated.
%{public}@: Net service did resolve address.
%{public}@: Net service did not resolve address with error dictionary: %{public}@.
%{public}@: Resolved net service.
%{public}@: Getting streams...
%{public}@: Successfully created streams.
%{public}@: Failed to create streams.
%{public}@: Updated net service TXTRecord: %{public}@
Failed to update user version. err=%{public}@
%{public}@ Failed to load mapping cache
%{public}@ Failed to load url mappings from cache file
%{public}@ Regex map file url is missing from the bag - skipping
%{public}@ Failed to fetch url mapping file from server. err=%{public}@
%{public}@ Failed to parse url mappings from response body
%{public}@ Fetched updated url mappings %{public}@
%{public}@ Removing cache file
%{public}@ Failed to remove cache file. err=%{public}@
%{public}@ Failed to load cache from file. err=%{public}@
%{public}@ Failed to save cache dicationry. err=%{public}@
%{public}@ [SKD] - Finished with error %{public}@
%{public}@ [SKD] - Executing request %{public}@
[%{public}@]: [SKD] - Missing certificate URL: %{public}@, key server URL: %{public}@, serverPlaybackContextDataCreationHandler: %{BOOL}u
[%{public}@]: [SKD] - Missing request context.
[%{public}@]: [SKD] - Requesting iTunes Store content with a non-store request context.
[%{public}@]: [SKD] - Failed to load certificate data with error: %{public}@
[%{public}@]: [SKD] - Failed to generate server playback context data with error: %{public}@
[%{public}@]: [SKD] - Failed to serialize key server request data with error: %{public}@
[%{public}@]: [SKD] - Key server request returned error: %{public}@.
[%{public}@]: [SKD] - Missing key dictionary in response: %{public}@
[%{public}@]: [SKD] - using secure key renewalTime override: %{public}@
[%{public}@]: [SKD] - Loaded successfully.
[%{public}@]: [SKD] - Missing content key context data in response.
[%{public}@]: [SKD] - Received failure in response: %{public}@
ICEnvironmentMonitor: failed to create network path observer
error registering for thermal pressure levels change notifications status=%u
Network reachability values changed. networkType=%{public}d, telephonyDataIndicator=%{public}@, isRemoteServerReachable=%{BOOL}u, isRemoteServerLikelyReachable=%{BOOL}u, currentNetworkLinkQuality=%{public}@, _currentNetworkLinkExpensive=%{BOOL}u, _wifiAssociated=%{BOOL}u, _ethernetWired=%{BOOL}u, _networkConstrained=%{BOOL}u
thermal levels changed - oldValue=%llu, newValue=%llu
Failed to get current thermal level. status=%u, using %llu for now
current thermal pressure level=%llu
error getting current thermal pressure level - status=%u, _currentThermalLevel=%llu
error checking for thermal pressure level status=%u
%{public}@ Found network type override value %{public}@
Error fetching operator name. error=%{public}@
Error fetching registration status. error=%{public}@
Error fetching data status. error=%{public}@
%{public}@ skipping invalid offer value %{public}@
No default bag profile for client '%{public}@' - using default '%{public}@'
ICNetworkConstraints %p [%@] - cellularDataAllowed:%{BOOL}u, wifiDataAllowed:%{BOOL}u
%{public}@ Enabling push notifications for type %{public}@ with params %{public}@
%{public}@ Missing add-push-notification-type-url url in bag - skipping
%{public}@ addPushNotification request failed. err=%{public}@
%{public}@ addPushNotification request returned response %{public}@
softlink:r:path:/System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
softlink:r:path:/System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry
softlink:r:path:/System/Library/PrivateFrameworks/PairedSync.framework/PairedSync
softlink:r:path:/System/Library/PrivateFrameworks/AskPermission.framework/AskPermission
softlink:r:path:/System/Library/PrivateFrameworks/SetupAssistant.framework/SetupAssistant
softlink:r:path:/System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices
softlink:r:path:/System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit
softlink:r:path:/System/Library/PrivateFrameworks/AirPlaySupport.framework/AirPlaySupport
softlink:r:path:/System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration
ICMusicSubscriptionStatusCache
ICJSSign
ICJSSignConfiguration
NSCopying
ICIAMImpressionNode
ICUnfairLock
ICDelegateToken
NSSecureCoding
NSCoding
_ICLLPlayNowQueueItemsCommand
ICAuthorizeMachineResponse
ICMusicSubscriptionRequest
ICSAPSession
_ICLLReactionCommand
ICStoreRequestContext
ICDelegateAccountStoreOptions
_ICLLQueueSyncAction
_ICLLDisplayMessage
ICLightweightMusicSubscriptionStatusRequest
_ICLLPlaybackControlSettingsCommand
ICIAMApplicationMessage
ICAuthenticationUtilities
ICMusicUserStateCookies
ICMutableMusicUserStateCookies
NSObject
ICRadioLibraryArtistContentReference
ICCloudServerProtocol
ICCloudClientCloudService
_ICLLParticipant
ICStoreFileAssetInfo
ICSAPSessionSignDataOperation
ICStorePlatformRequestOperation
ICPlayActivityFeedSerialization
ICStoreFinanceItemMetadata
ICDelegateAccountStoreServiceClient
ICDelegateAccountStoreService
ICMusicSubscriptionCarrierBundlingEligibilityResponse
ICPAAudioQualityDictionary
ICRadioPlaybackHistory
NSMutableCopying
ICMutableRadioPlaybackHistory
ICRadioStoreContentReference
ICRadioContentReferenceContainable
ICSQLiteStatement
ICSQLiteBinding
ICAgeVerificationManager
ICMusicKitTokensResponse
ICInAppMessageManagerProtocol
ICInAppMessageManager
NSXPCListenerDelegate
ICEnvironmentMonitorObserver
ICURLPerformanceMetrics
ICRemoteRequestOperationExecutionResponse
ICSubscriptionRedownloadRequest
_ICLLActionMessage
_ICLLReplaceQueueItemsCommand
ICDelegationConsumerNetService
NSNetServiceDelegate
ICMachineDataProvisionOperation
ICMediaAssetDownloadRequest
ICContentKeySessionDelegateProtocol
ICURLSessionManager
ICAdditions
ICPushNotificationMessage
ic_SagaAdditions
ic_JaliscoAdditions
ic_ITunesStoreAdditions
_ICLLAddQueueItemsCommand
_ICLLRadioSeed
ICCloudClient
ICCloudAvailability
ICAsyncBlockOperation
ICRemoteRequestOperationController
ICDeveloperTokenDefaultProvider
ICDeveloperTokenProvider
ICStoreMediaResponseItem
ICRadioFetchMetadataRequest
ICMusicRestoreBagConfiguration
ICCloudServiceStatusRemoteMonitoringClient
ICCloudServiceStatusRemoteMonitoringService
ICCloudServiceStatusRemoteMonitoring
ICLightweightMusicSubscriptionStatusResponse
ICLibraryAuthServiceClientTokenResponse
ICLibraryAuthServiceClientTokenResult
ICLibraryAuthServiceClientTokenIdentifier
ICUserIdentity
_MSVAccountInformationProviding
ICPlayActivityAudioQualityProperties
ICMutablePlayActivityAudioQualityProperties
ICLibraryAuthServiceClientTokenRequest
ICURLBagProvider
_ICLLPlayNowQueueItemsAction
ICMusicSubscriptionStatusResponse
_ICLLRemoveQueueItemAction
ICLibraryAuthServiceBulkClientTokenRequest
ICMusicSubscriptionAccountlessPlaybackRequest
ICDelegationConsumerServiceProtocolHandler
ICAMSBagValuePromise
ICMusicSubscriptionPlaybackRequestOperation
ICMusicSubscriptionPlaybackResponseItem
ICStorePlatformOfferAsset
ICURLBagMescalConfiguration
ICPBDGSPlayerDelegateInfoToken
_ICLLReplaceQueueItemsAction
ICDelegateAccountStore
ICSQLiteConnectionDelegate
ICDelegateAccountStoreWriter
ICMediaUserStateCenterServerProtocol
ICMediaUserStateCenterClientProtocol
ICMediaUserStateCenter
ICStorageManager
_ICLLClientInfoCommand
ICUserCredentialResponse
ICAsyncOperation
ICFPLeaseSyncSession
ICUserAuthenticationValidationRequest
ICNanoPairedDeviceStatusMonitor
PSYInitialSyncStateObserverDelegate
ICLibraryAuthServiceBulkClientTokenResponse
ICDelegationProviderService
ICSDelegationProviderServiceXPC
ICDelegationProviderServiceSessionDelegate
NSNetServiceBrowserDelegate
ICUserIdentityStoreACAccountBackend
ACMonitoredAccountStoreDelegateProtocol
ICUserIdentityStoreBackend
ICUserIdentityProperties
ICMutableUserIdentityProperties
itunescloudd
ICIAMSerialCheckRequest
ICHTTPArchive
ICMusicKitRequestContext
ICConnectionConfiguration
ICMusicSubscriptionRecommendationsRequest
_ICLLCommandMessage
_ICLLCurrentItemTransitionCommand
ICUserVerificationContext
_ICLLPlaybackControlSettingsQuery
_ICLLReactionAction
ICMusicSubscriptionLeaseStatus
ICPushNotificationsRegisterAPNSTokenRequest
ICSiriAddToAccousticHistoryRequest
_ICLLPlaybackSyncStateQuery
ICLibraryAuthServiceClientTokenStatus
ICStorePlatformRequest
ICUserNotificationBuilder
ICMusicLibraryAuthTokenStatus
ICMutableMusicLibraryAuthTokenStatus
ICStorePlatformMetadata
ICLiveLinkPlaybackCoordinatorMedium
ICLinkLinkAVPlaybackCoordinatorMedium
AVPlaybackCoordinationMediumDelegate
ICMusicSubscriptionStatusRequestOperation
ICURLSession
NSURLSessionDelegate
NSURLSessionDownloadDelegate
NSURLSessionTaskDelegate
NSURLSessionDataDelegate
ICMusicRestoreRequest
ICInAppMessageEntry
ICIAMApplicationMessageSyncCommand
ICAMSBagAdapter
AMSBagProtocol
ICDelegationConsumerServiceSessionRequestInfo
ICCloudCLientErrorAdditions
ICDelegateAccountStoreServiceListener
ICFPSAPContext
_ICLLPlaybackControlSettings
ICIAMSynchronizeMessagesResponse
ICMediaAPIURLMapping
ICMediaAPIURLMappingSet
ICFPContentInfo
ICRadioPlaybackHistoryStore
ICProcessPlayActivityEventsRequestListener
ICPlayActivityController
_ICPlayActivityEndpointRevisionInformation
_ICPlayActivityFlushSessionInformation
ICPushNotificationsDisableTypesRequest
ICStoreArtworkSizeInfo
ICStoreArtworkInfo
_ICLLPlaybackItem
ICLiveLink
ICSharedListeningConnectionControllerDelegate
ICSharedListeningContainer
ICSharedListeningItem
ICSharedTracklistPosition
ICSharedListeningQueue
ICSuzeLeaseSession
ICMediaRedownloadRequest
ICUserIdentityStoreCoding
ICIAMLogEventRequest
ICStoreURLRequestBuilderProperties
ICStoreFileAssetFairPlayInfo
ICInAppMessageUserNotificationCoordinator
ICMusicUserTokenFetchRequest
_ICLLCurrentItemChangeAction
ICPBDGSStartDelegationRequest
_ICLLMoveQueueItemCommand
ICDeviceInfo
ICNanoPairedDeviceStatusObserver
_ICLLRadioSource
ICFlushPlayActivityEventsOperation
ICIAMTriggerCondition
ICIAMImage
ICInAppMessageMetadataEntry
ICContentKeyStoreEntry
ICFileContentKeyStore
ICContentKeyStoreProtocol
ICMemoryContentKeyStore
ICMachineDataSyncOperation
ICURLBagRadioConfiguration
ICAgeVerifier
ICSQLiteConnectionOptions
ICRadioFetchMetadataResponse
ICPlayActivityDebugLogOperation
ICURLRequest
NSProgressReporting
ICAccountStoreAdditions
ICPBDGSFinishDelegationRequest
ICIAMMessagePresentationTrigger
ICCloudItemIDList
ICUserIdentityStoreTestingBackend
ICMusicAccountNotificationsSettingsRequestOperation
ICIAMMetricEvent
ICMusicRestoreRequestParameters
ICDelegationConsumerService
ICDelegationConsumerServiceRequest
ICRadioLibraryAlbumContentReference
ICTVUserState
ICMutableTVUserState
_ICLLMoveQueueItemAction
ICRadioStationProviderResource
ICAgeVerificationState
ICMusicSubscriptionCarrierBundlingEligibilityOperation
ICMusicLibraryAuthToken
ICMutableMusicLibraryAuthToken
ICValueHistory
_ICValueHistoryItem
ICIAMLocalNotification
ICFPStreamContext
ICStoreRadioStreamAssetInfo
ICMediaUserState
ICMutableMediaUserState
ICStoreDialogResponseHandler
ICStoreDialogResponseHandlerConfiguration
ICFairPlayUtilityAdditions
ICPlayInfoResponse
ICLiveLinkIdentity
_ICMutableLiveLinkIdentityPrivate
ICMutableLiveLinkIdentity
_ICLLQueryMessage
ICDeviceSetupStatusMonitor
ICMediaRedownloadResponse
ICStoreResponseProtocol
_ICLLParticipantChangeAction
ICIAMApplicationMessageSyncResponse
ICPAPlayModeDictionary
ICACAccountVerificationOperation
AMSAuthenticateTaskDelegate
ICDispatchOnce
ICRequestContext
_ICLLCurrentItemChangeCommand
ICLiveLinkQRConnectionMessageCoder
ICInAppMessageConfiguration
ICMusicAccountNotificationsSettingsManager
ICRadioStationTrack
ICDelegationServiceConnection
ICDelegationServicePairingSessionDelegate
MSVMessageParserDelegate
_ICDelegationServiceConnectionPendingRequestContext
_ICLLParticipantQuery
_ICLLQueueQuery
ICCloudAddReferral
ICIAMMessageAction
ICInAppReportEventRequest
ICMusicSubscriptionLeasePlaybackRequest
ICStoreURLRequest
ICDelegateAccountStoreXPCWriter
ICMusicSubscriptionStatusRequest
ICPlayActivityTable
ICMusicSubscriptionFairPlayKeyStatus
ICLightweightMusicSubscriptionStatus
ICPlayActivityEvent
ICMutablePlayActivityEvent
ICMusicSubscriptionStatusCacheKey
ICIAMMessageContent
ICMachineDataEraseOperation
ICRemoveMediaDRMOperation
ICMusicKitURLResponse
ICAVAssetDownloadURLSession
AVAssetDownloadDelegate
ICRemoteRequestOperationExecutionContext
ICUserVerificationOperation
ICSQLiteRow
ICRadioGetTracksRequest
ICIAMMessageRule
ICCloudServerListenerEndpointServiceProtocol
ICCloudServerListenerEndpointProvider
ICCloudServerListenerEndpointProviding
ICSuzeLeaseRequest
ICPAPlayActivityEnqueuerProperties
ICMusicUserState
ICMutableMusicUserState
ICPAPlayActivityEvent
ICPlayActivityEventContainerIDs
ICMutablePlayActivityEventContainerIDs
ICDelegationServicePairingSession
ICURLBagMonitor
ICBook
ICRadioLikeRequest
ICAuthorizeMachineURLRequest
ICDelegationConsumerServiceSessionRequestResult
ICPBDGSStartDelegationResponse
ICAddToWishListResponse
_ICLLRevisionHash
_ICLLMediaInfo
ICMusicKitURLResponseHandler
ICPBDGSResponse
ICRequestAdditions
ICAuthorizeMachineRequest
ICLibraryAuthServiceClientTokenProviderProtocol
ICLibraryAuthServiceClientTokenProvider
ICSQLitePreparedStatement
ICPlayInfoRequest
ICPrivacyInfo
ICUserCredentialRequest
ICRadioLikeResponse
ICStoreHLSAssetInfo
ICPBDGSPlayerInfoContextToken
ICMusicSubscriptionLeaseSession
ICKeyedSharedInstanceManager
ICCloudServerAvailabilityServiceProtocol
ICCloudClientAvailabilityService
_ICLLPlaybackItemContainer
ICPushNotificationsResponse
ICInAppMessageStore
ICSuzeLeaseResponse
ICSAPSessionPrepareFairPlayContextOperation
ICRadioLibraryTrackContentReference
_ICLLAddQueueItemsAction
ICDelegationPlayInfoRequest
ICDelegationPlayInfoTokenRequest
ICDefaults
ICMusicSubscriptionPlaybackURLRequest
ICRadioPlaybackHistoryItem
ICMutableRadioPlaybackHistoryItem
ICDelegationProviderServiceAssertion
ICPlayActivityEnqueuerProperties
ICMutablePlayActivityEnqueuerProperties
ICSAPSessionAbstractOperation
ICUserNotificationContext
ICUserNotificationManager
ICAddToWishListRequest
ICStorePlatformResponseGroup
ICStorePlatformResponse
ICCDelegationProviderServiceXPC
ICSetParentalControlRequestOperation
ICIAMLogEventResponse
ICSQLiteQueryResults
_ICLLPlaybackSyncCommand
ICMediaLibraryAccessPermissionsHelper
ICCloudServiceStatusMonitor
ICPBDGSFinishDelegationResponse
ICPBDGSMessage
ICPBDGSRequest
ICURLResponseHandler
ICUpdateContentTasteRequestListener
ICCloudContentTasteRequestListener
_ICLLServerNoticeAction
ICCloudAvailabilityController
RadiosPreferencesDelegate
CoreTelephonyClientDataDelegate
ICMusicUserTokenCache
ICBuyProductRequest
ICDelegationProviderServiceSession
ICDelegationServiceConnectionDelegate
ICStoreURLResponseAuthenticationProvider
ICRadioGetTracksResponse
_ICLLQueue
ICRadioResponse
_ICLLProtocolMessage
ICDelegationPlayInfoRequestOperation
ICDelegationPlayInfoResponseToken
ICIAMParameter
ICPurchaseRedownloadRequest
ICInAppMessageSyncRequest
ICUserIdentityContext
ICRemoteRequestOperationExecutingClient
ICRemoteRequestOperationExecutingService
ICRemoteRequestOperationExecuting
ICContentKeySession
AVContentKeySessionDelegate
ICDeveloperTokenFetchRequest
ICDelegationServiceSecuritySettings
ICDelegationNetServiceTXTRecord
ICStoreDialogResponse
ICStoreDialogResponseButton
ICStoreDialogResponseButtonAction
_ICLLErrorMessage
ICMusicSubscriptionStatusController
ICMusicSubscriptionStatusRemoteRequestingClient
ICDelegationConsumerServiceSession
ICDelegationConsumerNetServiceDelegate
ICInAppMessageEventEntry
ICLiveLinkQRConnectionDataSource
MSVQRConnectionSessionDataSource
ICSecureKeyDeliveryResponse
ICTelephonyController
CoreTelephonyClientDelegate
CoreTelephonyClientSuppServicesDelegate
ICLiveLinkEvent
ICLiveLinkCustomEvent
ICLiveLinkPlaybackEvent
ICLiveLinkQueueEvent
ICLiveLinkQueueEventContentAdded
ICLiveLinkQueueEventContentPlayedNow
ICLiveLinkQueueEventContentRemoved
ICLiveLinkQueueEventContentReordered
ICLiveLinkQueueEventContentReplaced
ICLiveLinkQueueEventContentUpdatedMessage
ICLiveLinkQueueEventPlaybackModeChanged
ICLiveLinkReactionEvent
ICLiveLinkSessionEvent
ICAccountAdditions
ICURLBag
ICDelegationProviderServiceProtocolHandler
ICRadioStationMetadata
ICDelegateAccountStoreSQLWriter
ICURLResponseAuthenticationProvider
_ICLLPlaybackSyncAction
ICSecurityInfo
ICSagaGetAccountStatusRequest
ICSongDownloadDoneRequest
MusicKit
MusicKit_Private
ICUpdateAutomaticDownloadMediaKindsRequest
AMSRequestPresentationDelegate
ICRemoteRequestOperation
_ICLLAutoPlaySource
ICMusicSubscriptionLeaseController
ICMusicSubscriptionLeaseSessionDelegate
_ICMusicSubscriptionLeaseIdentityCacheKey
ICIAMSynchronizeMessagesRequest
ICDelegateAccountStoreSchema
ICMusicKitURLRequest
ICSAPSessionVerifySignatureOperation
ICMusicSubscriptionStatusRemoteRequestingService
ICMusicSubscriptionStatusRemoteRequesting
ICSharedListeningConnectionController
ICDirectSharedListeningConnectionController
MSVQRConnectionDelegate
ICSharedListeningConnectionClientProtocol
ICSharedListeningConnectionServiceProtocol
ICExternalSharedListeningConnectionController
ICUserVerificationRequest
ICMusicSubscriptionStatusMonitor
ICDelegateAccountStoreReader
ICRadioURLRequest
ICStoreURLResponseHandler
ICPBDGSPlayerInfoContextRequestToken
_ICLLCurrentItemTransitionAction
ICSharedListeningConnectionReportEvent
ICSharedListeningConnectionReport
MSVQRConnectionReportProtocol
ICRequestOperation
ICSuzeLeaseSessionConfiguration
_ICLLRemoveQueueItemCommand
_ICLLAvailability
ICMatchRedownloadRequest
ICHTTPCookieStore
ICMusicAccountNotificationsSettingsSwitch
ICUserIdentityStore
ICUserIdentityStoreBackendDelegate
ICMachineDataActionHandler
ICStoreVideoArtworkInfo
ICRadioTrackInfoContentReference
ICRadioContentReference
ICStorePlatformOffer
ICDelegationProviderNetService
ICSQLiteConnection
ICURLResponse
ICMediaAPIURLMappingProvider
ICURLBagLibraryDAAPConfiguration
ICMusicSubscriptionFairPlayController
ICMusicSubscriptionPlaybackResponse
ICMachineDataOperation
ICSecureKeyDeliveryRequest
ICSecureKeyDeliveryRequestOperation
_ICLLClientInfoAction
ICEnvironmentMonitor
ICADIUtilities
ICADIUtilityAdditions
ICADIProvisionSession
ICUserCredentialProvider
_ICUserCredentialProviderRequestSession
_ICLLNoGenerationSource
ICLocalStoreAccountProperties
ICMutableLocalStoreAccountProperties
ICPlayActivityEventItemIDs
ICMutablePlayActivityEventItemIDs
ICMusicSubscriptionStatus
ICMutableMusicSubscriptionStatus
ICMusicSubscriptionStatusTerms
ICWiFiManager
ICURLBagEnhancedAudioConfiguration
ICClientInfo
ICMutableClientInfo
ICIAMSerialCheckResponse
ICNetworkConstraints
ICMutableNetworkConstraints
ICMusicAccountNotificationsSettingsResponse
ICPushNotificationsEnableTypesRequest
ICIAMApplicationBadge
_init
init
currentDeviceInfo
isPhoneNumberAccessRestricted
standardDefaults
lastKnownSubscriptionStatusBaseCacheKey
initWithDictionaryRepresentation:requiringDSID:
updateBaseCacheKey
defaultCenter
_handlePhoneNumberDidChangeNotification:
sharedController
addObserver:selector:name:object:
_handleUserIdentityStoreDidChangeNotification:
defaultIdentityStore
_handleActiveAccountDidChangeNotification:
_handleSubscriptionStatusChangedDistributedNotification:
_loadPersistedCacheWithCompletion:
removeObserver:name:object:
dealloc
objectForKey:
_getCacheKeyForRequestContext:completion:
isFinalResponse
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
setObject:forKey:
subscriptionStatus
removeObjectForKey:
isEqualToStatus:
_persistCachePostingGlobalNotification:
delegatedIdentity
identity
_statusChangeUserInfoForUserIdentity:oldStatus:newStatus:
_postLocalChangeNotificationWithUserInfo:
copy
needsReload
setNeedsReload:
enumerateKeysAndObjectsUsingBlock:
activeAccount
setIdentity:
setAllowsExpiredBags:
initWithBlock:
sharedBagProvider
stringForBagKey:
length
setStorefrontIdentifier:
phoneNumber
setPhoneNumber:
dictionaryRepresentationIncludingDSID:
setLastKnownSubscriptionStatusBaseCacheKey:
postNotificationName:object:
getBagForRequestContext:forceRefetch:withCompletionHandler:
setCachedSubscriptionStatusResponseNeedsReloadForAllRequestContextsWithCompletion:
shouldTreatSubscriptionStatusAsExpired
count
countByEnumeratingWithState:objects:count:
identityStore
DSID
setDSID:
getPropertiesForUserIdentity:completionHandler:
synchronize
cachedSubscriptionStatus
ic_dictionaryValueForKey:
ic_stringValueForKey:
buildVersion
DSIDForUserIdentity:outError:
ic_numberValueForKey:
unsignedLongLongValue
initWithStringRepresentation:
isValidSubscriptionStatusPropertyListRepresentation:error:
initWithPropertyListRepresentation:
addObject:
specificAccountWithDSID:
processInfo
ic_isCloudDaemon
mutableCopy
removeObjectsForKeys:
setCachedSubscriptionStatus:
dictionaryWithCapacity:
stringRepresentation
propertyListRepresentation
setValue:forKey:
postNotificationName:object:userInfo:
setObject:forKeyedSubscript:
sharedCache
T@"ICMusicSubscriptionStatusCache",R,N
getCachedSubscriptionStatusResponseForRequestContext:completion:
setCachedSubscriptionStatusResponse:forRequestContext:completion:
setCachedSubscriptionStatusResponseNeedsReloadForRequestContext:completion:
.cxx_destruct
_accessQueue
_calloutQueue
_persistenceQueue
_isPhoneNumberAccessRestricted
_baseCacheKey
_cachedSubscriptionStatusResponses
isEqual:
signatureStringWithURLRequest:
UTF8String
initWithLength:
mutableBytes
setLength:
string
initWithURL:resolvingAgainstBaseURL:
queryItems
ic_valuesForCookieWithName:
firstObject
ic_valueForHTTPHeaderField:
name
caseInsensitiveCompare:
value
appendString:
_enumerateComponentsUsingBlock:
initWithConfiguration:
signatureDataWithURLRequest:
_configuration
includeHeaderWithName:
includeQueryItemWithName:
setSignatureDataHeaderName:
_addRequestComponent:withName:
allocWithZone:
mutableCopyWithZone:
copyWithZone:
initWithInteger:
integerValue
objectAtIndex:
enumerateObjectsUsingBlock:
storePlatformConfiguration
includeCookieWithName:
signatureDataCookieName
setSignatureDataCookieName:
signatureDataHeaderName
_componentNames
_components
_signatureDataCookieName
_signatureDataHeaderName
T@"NSString",C,N,V_signatureDataCookieName
T@"NSString",C,N,V_signatureDataHeaderName
description
dictionaryRepresentation
stringWithFormat:
dictionary
setImpressionType:
setRecoAlgoId:
isMemberOfClass:
hash
hasImpressionType
hasRecoAlgoId
readFrom:
writeTo:
copyTo:
mergeFrom:
impressionType
recoAlgoId
_impressionType
_recoAlgoId
TB,R,N
T@"NSString",&,N,V_impressionType
T@"NSString",&,N,V_recoAlgoId
lock
unlock
lockWithBlock:
_lock
initWithType:data:expirationDate:
raise:format:
compare:
initWithFormat:
componentsJoinedByString:
isEqualToDate:
isEqualToData:
decodeObjectOfClass:forKey:
decodeIntegerForKey:
encodeObject:forKey:
encodeInteger:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithType:data:
expiresBeforeDate:
isExpired
data
type
expirationDate
_data
_type
_expirationDate
T@"NSData",R,C,N,V_data
Tq,R,N,V_type
T@"NSDate",R,C,N,V_expirationDate
expired
TB,R,N,GisExpired
removeAllObjects
numberWithInt:
initWithCapacity:
_items
_position
_preferredPlayItemId
_queueContext
_radioSource
_revision
_has
initWithBase64EncodedString:options:
initWithResponseDictionary:
keybagData
tokenData
_responseDictionary
T@"NSData",R,C,N
finishWithError:
_bagKeyForRequestType:
urlForBagKey:
errorWithDomain:code:userInfo:
requestWithURL:
setHTTPMethod:
setValue:forHTTPHeaderField:
deviceInfo
deviceGUID
isWatch
sharedMonitor
pairedDeviceMediaGUID
dataWithPropertyList:format:options:error:
setHTTPBody:
initWithURLRequest:requestContext:
defaultSession
parsedBodyDictionary
intValue
importSubscriptionKeyBagData:completionHandler:
enqueueDataRequest:withCompletionHandler:
getBagForRequestContext:withCompletionHandler:
initWithStoreRequestContext:requestType:requestingOfflineSlot:
execute
_storeRequestContext
_requestType
_requestingOfflineSlot
sapVersion
_certificateURL
_setupURL
_initWithVersion:certificateURL:setupURL:requestContext:
setName:
setMaxConcurrentOperationCount:
setQualityOfService:
setSapSession:
setData:
setResponseHandler:
addOperation:
setSignatureData:
sharedSAPSessionWithVersion:URLBag:requestContext:
signData:withCompletionHandler:
verifySignatureData:forData:withCompletionHandler:
_sapContext
_setSAPContext:
_prepareFairPlayContextOperationQueue
_requestContext
_operationQueue
_sapVersion
T@"NSOperationQueue",R,N,V_prepareFairPlayContextOperationQueue
T@"ICFPSAPContext",&,N,S_setSAPContext:,V_sapContext
T@"NSURL",R,C,N,V_certificateURL
T@"ICStoreRequestContext",R,C,N,V_requestContext
T@"NSURL",R,C,N,V_setupURL
TI,R,N,V_sapVersion
_itemId
_reaction
_reactionId
initWithIdentity:
defaultInfo
initWithIdentity:clientInfo:
initWithIdentity:identityStore:clientInfo:
initWithUserInteractionLevel:
initWithIdentity:identityStore:clientInfo:authenticationProvider:
setClientInfo:
setIdentityStore:
setAuthenticationProvider:
nullIdentity
nullIdentityStore
clientInfo
clientIdentifier
clientVersion
copyWithBlock:
_clientIdentifierForUserAgent
productPlatform
productVersion
isMac
appendFormat:
_webkitUserAgentVersion
isAppleTV
deviceModel
hardwarePlatform
deviceClass
fairPlayDeviceType
hashInStore:
decodeBoolForKey:
ic_encodeUserIdentity:withStore:forKey:
encodeBool:forKey:
_allowsMutation
arrayWithObjects:count:
pathWithComponents:
bundleWithPath:
objectForInfoDictionaryKey:
decimalDigitCharacterSet
invertedSet
rangeOfCharacterFromSet:
substringFromIndex:
activeStoreAccountRequestContext
userAgent
setDelegatedIdentity:
setStoreDialogResponseHandler:
setPersonalizationStyle:
storeDialogResponseHandler
allowsExpiredBags
personalizationStyle
_delegatedIdentity
_identity
_identityStore
_storeDialogResponseHandler
_personalizationStyle
_allowsExpiredBags
T@"ICUserIdentity",R,C,N,V_identity
T@"ICUserIdentity",R,C,N,V_delegatedIdentity
T@"ICUserIdentityStore",R,N,V_identityStore
T@"ICStoreDialogResponseHandler",R,C,N,V_storeDialogResponseHandler
TB,R,N,V_allowsExpiredBags
Tq,R,N,V_personalizationStyle
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
initWithBytesNoCopy:length:encoding:freeWhenDone:
isEqualToIdentity:inStore:
defaultOptionsWithServiceEndpoint:
defaultOptionsWithServiceName:
singleWriterOptionsWithDatabasePath:
databasePath
XPCServiceName
setDatabasePath:
isSingleWriter
setSingleWriter:
XPCEndpoint
setXPCEndpoint:
setXPCServiceName:
_databasePath
_listenerEndpoint
_serviceName
_singleWriter
T@"NSString",C,N,V_databasePath
singleWriter
TB,N,GisSingleWriter,V_singleWriter
T@"NSXPCListenerEndpoint",&,N,V_listenerEndpoint
T@"NSString",C,N,V_serviceName
_controlSettings
_queue
_detailMessage
_titleMessage
performRequestWithCompletionHandler:
initWithStoreRequestContext:
setAllowsFallbackToExpiredStatus:
setAllowsFallbackToStatusNeedingReload:
setShouldIgnoreCache:
setShouldReturnLastKnownStatusOnly:
setShouldBypassEnforcementOfPrivacyAcknowledgement:
initWithRequest:
setAllowsFuseHeaderEnrichment:
setShouldRequestLightweightStatus:
_finishWithExtendedSubscriptionStatusResponse:error:
enqueueChildOperation:
_initWithExtendedSubscriptionStatusResponse:
initWithRequestContext:
performRequestWithResponseHandler:
requestContext
setRequestContext:
_response
T@"ICStoreRequestContext",C,N,V_requestContext
_settings
numberWithBool:
numberWithDouble:
addTarget:
addContentPages:
addPresentationTriggers:
setIdentifier:
targetsCount
clearTargets
targetAtIndex:
setTemplateURL:
contentPagesCount
clearContentPages
contentPagesAtIndex:
setRule:
setWebArchiveURL:
setHoldoutEvent:
setLocalNotification:
setImpressionEvent:
presentationTriggersCount
clearPresentationTriggers
presentationTriggersAtIndex:
setApplicationBadge:
targetType
contentPagesType
presentationTriggersType
hasIdentifier
messageType
setMessageType:
setHasMessageType:
hasMessageType
messageTypeAsString:
StringAsMessageType:
carousel
setCarousel:
setHasCarousel:
hasCarousel
setPriority:
setHasPriority:
hasPriority
hasTemplateURL
setMaximumDisplays:
setHasMaximumDisplays:
hasMaximumDisplays
setStartDate:
setHasStartDate:
hasStartDate
setEndDate:
setHasEndDate:
hasEndDate
hasCloseButton
setHasCloseButton:
setHasHasCloseButton:
hasHasCloseButton
hasRule
hasWebArchiveURL
modalPresentationStyle
setModalPresentationStyle:
setHasModalPresentationStyle:
hasModalPresentationStyle
modalPresentationStyleAsString:
StringAsModalPresentationStyle:
globalPresentationPolicyGroup
setGlobalPresentationPolicyGroup:
setHasGlobalPresentationPolicyGroup:
hasGlobalPresentationPolicyGroup
globalPresentationPolicyGroupAsString:
StringAsGlobalPresentationPolicyGroup:
assetPrefetchStrategy
setAssetPrefetchStrategy:
setHasAssetPrefetchStrategy:
hasAssetPrefetchStrategy
assetPrefetchStrategyAsString:
StringAsAssetPrefetchStrategy:
hasHoldoutEvent
hasLocalNotification
hasImpressionEvent
hasApplicationBadge
reportingEnabled
setReportingEnabled:
setHasReportingEnabled:
hasReportingEnabled
identifier
targets
setTargets:
priority
templateURL
maximumDisplays
startDate
endDate
contentPages
setContentPages:
rule
webArchiveURL
holdoutEvent
localNotification
impressionEvent
presentationTriggers
setPresentationTriggers:
applicationBadge
_endDate
_startDate
_applicationBadge
_assetPrefetchStrategy
_contentPages
_globalPresentationPolicyGroup
_holdoutEvent
_identifier
_impressionEvent
_localNotification
_maximumDisplays
_messageType
_modalPresentationStyle
_presentationTriggers
_priority
_rule
_targets
_templateURL
_webArchiveURL
_carousel
_hasCloseButton
_reportingEnabled
T@"NSString",&,N,V_identifier
T@"NSMutableArray",&,N,V_targets
TB,N
Ti,N,V_messageType
TB,N,V_carousel
Ti,N,V_priority
T@"NSString",&,N,V_templateURL
Ti,N,V_maximumDisplays
Td,N,V_startDate
Td,N,V_endDate
TB,N,V_hasCloseButton
T@"NSMutableArray",&,N,V_contentPages
T@"ICIAMMessageRule",&,N,V_rule
T@"NSString",&,N,V_webArchiveURL
Ti,N,V_modalPresentationStyle
Ti,N,V_globalPresentationPolicyGroup
Ti,N,V_assetPrefetchStrategy
T@"ICIAMMetricEvent",&,N,V_holdoutEvent
T@"ICIAMLocalNotification",&,N,V_localNotification
T@"ICIAMMetricEvent",&,N,V_impressionEvent
T@"NSMutableArray",&,N,V_presentationTriggers
T@"ICIAMApplicationBadge",&,N,V_applicationBadge
TB,N,V_reportingEnabled
isEqualToString:
sharedAuthKitSession
T@"AKAppleIDSession",R,N
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
xpab
setXpab:
itfe
setItfe:
T@"NSString",C,N
isFrozen
setFrozen:
_frozen
_xpab
_itfe
T@"NSString",C,N,V_xpab
T@"NSString",C,N,V_itfe
frozen
TB,N,GisFrozen,V_frozen
rawContentDictionaryWithSubscriptionStatus:
addEntriesFromDictionary:
artistName
contentType
matchDictionaryWithSubscriptionStatus:
setArtistName:
representativeCloudIdentifier
setRepresentativeCloudIdentifier:
storeIdentifier
setStoreIdentifier:
_artistName
_representativeCloudIdentifier
_storeIdentifier
T@"NSString",C,N,V_artistName
T@"NSNumber",C,N,V_representativeCloudIdentifier
T@"NSNumber",C,N,V_storeIdentifier
serialQueue
listenerEndpointProvider
listenerEndpointForService:error:
_xpcConnectionWithListenerEndpoint:
initWithListenerEndpoint:
setupInitialSagaPoolingForConfiguration:
setupInitialJaliscoPoolingForConfiguration:
setPreferredVideoQuality:forConfiguration:completion:
isSagaAuthenticatedForConfiguration:completion:
updateJaliscoLibraryWithReason:forConfiguration:completion:
updateSagaLibraryWithReason:forConfiguration:completion:
authenticateForConfiguration:startInitialImport:enableCloudLibraryPolicy:isExplicitUserAction:completion:
deauthenticateForConfiguration:completion:
disableCloudLibraryWithReason:completion:
setCloudAddToPlaylistBehavior:forConfiguration:completion:
removeJaliscoLibraryForConfiguration:completion:
isMediaKindDisabledForJaliscoLibrary:configuration:completion:
loadIsUpdateInProgressForConfiguration:completion:
loadUpdateProgressForConfiguration:completion:
loadIsSagaUpdateInProgressForConfiguration:completion:
loadSagaUpdateProgressForConfiguration:completion:
loadIsJaliscoUpdateInProgressForConfiguration:completion:
loadJaliscoUpdateProgressForConfiguration:completion:
loadLastKnownEnableICMLErrorStatusForConfiguration:completion:
importItemArtworkForPurchaseHistoryID:configuration:completion:
importScreenshotForPurchaseHistoryID:configuration:completion:
importItemArtworkForSagaID:configuration:completion:
importScreenshotForSagaID:configuration:completion:
importContainerArtworkForSagaID:configuration:completion:
importSubscriptionItemArtworkForPersistentID:configuration:completion:
importSubscriptionScreenshotForPersistentID:configuration:completion:
importSubscriptionContainerArtworkForPersistentID:configuration:completion:
importArtistHeroImageForPersistentID:configuration:completion:
importAlbumArtistHeroImageForPersistentID:configuration:completion:
deprioritizeItemArtworkForPurchaseHistoryID:configuration:
deprioritizeScreenshotForPurchaseHistoryID:configuration:
deprioritizeItemArtworkForSagaID:configuration:
deprioritizeScreenshotForSagaID:configuration:
deprioritizeContainerArtworkForSagaID:configuration:
deprioritizeSubscriptionItemArtworkForPersistentID:configuration:
deprioritizeSubscriptionScreenshotForPersistentID:configuration:
deprioritizeSubscriptionContainerArtworkForPersistentID:configuration:
deprioritizeArtistHeroImageForPersistentID:configuration:
deprioritizeAlbumArtistHeroImageForPersistentID:configuration:
loadArtworkInfoForPurchaseHistoryIDs:configuration:completion:
loadScreenshotInfoForPurchaseHistoryIDs:configuration:completion:
loadArtworkInfoForSagaIDs:configuration:completion:
loadArtworkInfoForContainerSagaIDs:configuration:completion:
loadScreenshotInfoForSagaIDs:configuration:completion:
loadArtworkInfoForSubscriptionItemPersistentIDs:configuration:completion:
loadScreenshotInfoForSubscriptionPersistentIDs:configuration:completion:
loadArtworkInfoForSubscriptionContainerPersistentIDs:configuration:completion:
loadMissingArtworkForConfiguration:
loadGeniusItemsForSagaID:configuration:completion:
addGeniusPlaylistWithPersistentID:name:seedItemSagaIDs:itemSagaIDs:configuration:completion:
createPlaylistWithPersistentID:properties:trackList:configuration:completion:
sdk_createPlaylistWithPersistentID:properties:trackList:configuration:completion:
setPlaylistProperties:trackList:forPlaylistPersistentID:configuration:completion:
sdk_setPlaylistProperties:trackList:forPlaylistPersistentID:configuration:completion:
addStoreItemWithAdamID:referral:toPlaylistWithPersistentID:configuration:completion:
addItemWithSagaID:toPlaylistWithPersistentID:configuration:completion:
sdk_addStoreItemWithOpaqueID:toPlaylistWithPersistentID:configuration:completion:
sdk_addItemWithSagaID:toPlaylistWithPersistentID:configuration:completion:
publishPlaylistWithSagaID:configuration:completion:
removePlaylistsWithSagaIDs:configuration:completion:
uploadArtworkForPlaylistWithPersistentID:configuration:completion:
updateSubscribedPlaylistsWithSagaIDs:ignoreMinRefreshInterval:configuration:completion:
updatePinnedSubscribedPlaylistsWithConfiguration:completion:
addStoreItemWithAdamID:referral:configuration:completion:
sdk_addStoreItemWithOpaqueID:configuration:completion:
addStorePlaylistWithGlobalID:configuration:completion:
removeItemsWithSagaIDs:configuration:completion:
hideItemsWithPurchaseHistoryIDs:configuration:completion:
setItemProperties:forPurchaseHistoryID:configuration:completion:
setItemProperties:forSagaID:configuration:completion:
uploadCloudItemPropertiesForConfiguration:completion:
uploadCloudPlaylistPropertiesForConfiguration:completion:
setAlbumProperties:forAlbumPersistentID:configuration:completion:
updateArtistHeroImagesForConfiguration:
loadBooksForStoreIDs:configuration:completion:
refreshEnhancedAudioSharedKeys
fetchEnhancedAudioOfflineKeys
listCloudServerOperations
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
setRemoteObjectInterface:
setExportedObject:
setInterruptionHandler:
setInvalidationHandler:
resume
initWithListenerEndpointProvider:
xpcConnection
_xpcConnection
_serialQueue
_listenerEndpointProvider
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
T@"<ICCloudServerListenerEndpointProviding>",R,W,N,V_listenerEndpointProvider
T@"NSXPCConnection",R,N,V_xpcConnection
numberWithLongLong:
_participantId
_externalId
_participantUUID
_storefront
_unreliablePlaybackSyncStatus
absoluteString
dictionaryWithObjects:forKeys:count:
initWithFileAssetResponseDictionary:
URLWithString:
initWithResponseSinfDictionary:
_metadataDictionary
initWithMetadataDictionary:
fairPlayInfoList
initWithAssetURL:
responseDictionary
assetURL
downloadKey
fileExtension
flavorType
fileSize
metadata
protectionType
playbackAuthorizationToken
setAssetURL:
setDownloadKey:
setFairPlayInfoList:
setFlavorType:
setFileExtension:
setFileSize:
setMetadata:
setMd5:
expectedProtectionType
setExpectedProtectionType:
_assetURL
_downloadKey
_fairPlayInfoList
_flavorType
_fileExtension
_fileSize
_metadata
_md5
_playbackAuthorizationToken
_expectedProtectionType
T@"NSURL",C,N,V_assetURL
T@"NSString",C,N,V_downloadKey
Tq,N,V_expectedProtectionType
T@"NSArray",C,N,V_fairPlayInfoList
Tq,N,V_flavorType
T@"NSString",C,N,V_fileExtension
TQ,N,V_fileSize
T@"ICStoreFinanceItemMetadata",C,N,V_metadata
T@"NSData",C,N,V_md5
T@"NSDictionary",R,C,N
Tq,R,N
T@"NSString",R,C,N,V_playbackAuthorizationToken
lowercaseString
initWithBytesNoCopy:length:freeWhenDone:
signData:returningSignatureData:error:
executeWithSAPContext:
finishWithSAPContextPreparationError:
responseHandler
_responseHandler
T@"NSData",C,N,V_data
T@?,C,N,V_responseHandler
initWithPlatformRequest:usingURLSession:
qualityOfService
cancel
cancelRequest:
isCancelled
_finishWithResponse:error:
_executePersonalized
_executeUnpersonalized
retryDelay
setRetryDelay:
itemIdentifiers
initWithURLResponse:requestedItemIdentifiers:
msv_errorWithDomain:code:underlyingError:debugDescription:
_URLRequestWithBaseURL:
setShouldReportLoadURLMetrics:
_enqueueDataRequest:
date
timeIntervalSince1970
setJSSignConfiguration:
setShouldUseMescalSigning:
shouldIgnoreCache
UUID
UUIDString
queryItemWithName:value:
ic_URLByAppendingQueryItems:
initWithURL:
HTTPHeaders
setAllHTTPHeaderFields:
timeoutInterval
setTimeoutInterval:
initWithPlatformRequest:
platformRequest
_activeURLRequest
_strongSelf
_urlSession
_platformRequest
T@"ICStorePlatformRequest",R,C,N,V_platformRequest
eventType
targetedAudioQuality
bitDepth
numberWithInteger:
bitRate
channelLayoutDescription
codecString
sampleRate
isSpatialized
providedAudioQuality
audioQualityPreference
playbackFormatPreference
buildFeatures
initWithArray:
enqueuerProperties
isSBEnabled
deviceName
storeFrontID
timeZone
secondsFromGMT
isPrivateListeningEnabled
systemReleaseType
storeAccountID
numberWithUnsignedLongLong:
eventTimeZone
containerType
itemEndTime
endReasonType
displayType
numberWithUnsignedInteger:
lyricsDisplayedCharacterCount
lyricsLanguage
featureName
itemDuration
mediaType
isOffline
repeatPlayMode
shufflePlayMode
autoPlayMode
persistentID
queueGroupingID
sharedActivityGroupSizeCurrent
sharedActivityGroupSizeMax
eventDate
timeIntervalSinceNow
recommendationData
sourceType
itemStartTime
timedMetadata
trackInfo
propertyListWithData:options:format:error:
itemType
requestingBundleIdentifier
requestingBundleVersion
householdID
isSiriInitiated
version
containerID
externalID
personalizedContainerID
storeID
reasonHintType
itemIDs
radioAdamID
subscriptionAdamID
equivalencySourceAdamID
purchasedAdamID
cloudID
reportingAdamID
lyricsID
containerIDs
stationHash
stationStringID
stationID
adamID
cloudAlbumID
globalPlaylistID
playlistVersionHash
cloudPlaylistID
defaultOverrideHTTPHeaderFields
propertyListObjectWithPlayActivityEvent:
currentStoreFrontID
setCurrentStoreFrontID:
_currentStoreFrontID
T@"NSString",C,N,V_currentStoreFrontID
setDateFormat:
localeWithLocaleIdentifier:
setLocale:
setLenient:
timeZoneForSecondsFromGMT:
setTimeZone:
dateFromString:
itemAdamID
itemCloudID
itemName
itemSortName
artistSortName
artistID
playlistName
albumSortName
playlistArtistName
composerName
composerSortName
genre
genreID
albumID
discCount
discNumber
trackCount
trackNumber
duration
isExplicit
year
bitrate
comments
dateAdded
drmVersionNumber
isGapless
isMasteredForITunes
kind
versionRestrictions
isCompilation
copyright
rank
releaseDate
storefrontID
vendorID
metadataDictionary
playlistID
_playlistID
T@"NSDictionary",R,C,N,V_metadataDictionary
T@"NSNumber",R,C,N
T@"NSString",R,C,N
T@"NSNumber",R,C,N,V_playlistID
T@"NSDate",R,C,N
delegateAccountStoreDidChange
openWithCompletionHandler:
recreateWithCompletionHandler:
addDelegationUUIDs:forUserIdentity:completionHandler:
removeAllTokensWithCompletionHandler:
removeDelegationUUIDs:forUserIdentity:completionHandler:
removeIdentityPropertiesForUserIdentity:completionHandler:
removeTokenForUserIdentity:completionHandler:
removeTokensExpiringBeforeDate:completionHandler:
setIdentityProperties:forUserIdentity:completionHandler:
setToken:forUserIdentity:completionHandler:
initWithObjects:
boolValue
doubleValue
initWithEligibilityDictionary:cellularProviderName:phoneNumber:
carrierBundlingStatusType
isFamilySubscription
error
SMSSessionIdentifier
delayInterval
wantsDelayedRetry
headerEnrichmentMessage
headerEnrichmentSessionIdentifier
headerEnrichmentURL
needsHeaderEnrichment
needsSilentSMS
silentSMSMessage
silentSMSNumber
cellularProviderName
_familySubscription
_wantsDelayedRetry
_needsHeaderEnrichment
_needsSilentSMS
_carrierBundlingStatusType
_error
_SMSSessionIdentifier
_delayInterval
_headerEnrichmentMessage
_headerEnrichmentSessionIdentifier
_headerEnrichmentURL
_silentSMSMessage
_silentSMSNumber
_cellularProviderName
_phoneNumber
Tq,R,N,V_carrierBundlingStatusType
familySubscription
TB,R,N,GisFamilySubscription,V_familySubscription
T@"NSError",R,N,V_error
T@"NSString",R,N,V_SMSSessionIdentifier
Td,R,N,V_delayInterval
TB,R,N,V_wantsDelayedRetry
T@"NSString",R,N,V_headerEnrichmentMessage
T@"NSString",R,N,V_headerEnrichmentSessionIdentifier
T@"NSURL",R,N,V_headerEnrichmentURL
TB,R,N,V_needsHeaderEnrichment
TB,R,N,V_needsSilentSMS
T@"NSString",R,N,V_silentSMSMessage
T@"NSString",R,N,V_silentSMSNumber
T@"NSString",R,N,V_cellularProviderName
T@"NSString",R,N,V_phoneNumber
numberWithUnsignedInt:
_bitDepth
_bitRate
_sampleRate
_channelLayoutDescription
_codec
_isSpatialized
indexOfObject:
isEqualToArray:
decodeObjectOfClasses:forKey:
containsValueForKey:
initWithStationIdentifier:
tracks
stationIdentifier
numberOfSkips
currentTrack
_currentTrack
_numberOfSkips
_stationIdentifier
_tracks
T@"NSString",R,C,N,V_stationIdentifier
Tq,R,N,V_numberOfSkips
T@"NSArray",R,C,N
T@"ICRadioPlaybackHistoryItem",R,C,N,V_currentTrack
_updateTracksUsingBlock:
addObjectsFromArray:
removeObjectAtIndex:
_checkCurrentTrackIsPresent
removeObjectsAtIndexes:
replaceObjectAtIndex:withObject:
containsObject:
addTrack:
addTracks:
removeExpiredTracks
removeTracksAtIndexes:
replaceTrackAtIndex:withTrack:
setCurrentTrack:
setNumberOfSkips:
setTracks:
T@"ICRadioPlaybackHistoryItem",C,D,N
Tq,D,N
T@"NSArray",C,D,N
setContainerID:
initWithStoreIdentifier:
_containerID
T@"NSString",C,N,V_containerID
initWithInt:
initWithUTF8String:
bytes
longLongValue
bindDouble:atPosition:
bindFloat:atPosition:
bindInt:atPosition:
bindInt64:atPosition:
bindNullAtPosition:
bindNumber:atPosition:
bindData:atPosition:
bindString:atPosition:
bindDataCopy:atPosition:
bindStringCopy:atPosition:
clearBindings
initWithStatement:connection:
columnIndexByName
finalizeStatement
isReadOnly
reset
step
connection
sqlite3_stmt
_connection
_statement
T@"ICSQLiteConnection",R,N,V_connection
T^{sqlite3_stmt=},R,N,V_statement
readOnly
TB,R,N,GisReadOnly
getAgeVerificationStateForUserIdentity:completion:
_updateAgeVerificationStateForUserIdentity:sendNotification:completion:
ageVerificationStateForUserIdentity:
accessQueue
ageVerificationStateInternal
objectForKeyedSubscript:
cachedStateForDSID:
_updateAgeVerificationStateAndSendNotification:completion:
_registerForNotifications
isInternalBuild
hasEntitlement:inGroup:
_userIdentityStoreDidChange:
_processAgeVerificationState:forDSID:
calloutQueue
_runAgeVerificationForUserIdentity:completion:
ageVerificationStateNotRequiredForUserIdentity:withError:
_bagHasValidKeys:
ageVerificationStateNotRequiredForUserIdentity:
ageVerificationStateNotRequiredForUserIdentity:withTreatment:verificationURL:
boolValueForBagKey:
shouldRunAgeVerification
ageVerificationExpirationDate
initWithExpirationDate:
initWithUserIdentity:ageVerifier:treatment:verificationURL:
saveToUserDefaults
numberForBagKey:
defaultManager
T@"ICAgeVerificationManager",R,N
getAgeVerificationStateWithCompletion:
ageVerificationState
setAccessQueue:
setCalloutQueue:
setAgeVerificationStateInternal:
_ageVerificationStateInternal
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_calloutQueue
T@"NSMutableDictionary",&,N,V_ageVerificationStateInternal
T@"ICAgeVerificationState",R,N
stringValue
substringWithRange:
_descriptionOfToken:forDebugging:
_descriptionForDebugging:
initWithDeveloperToken:userToken:userTokenFetchingError:
msv_errorWithDomain:code:debugDescription:
failWithError:
developerToken
userToken
userTokenFetchingError
_developerToken
_userToken
_userTokenFetchingError
T@"NSString",R,C,N,V_developerToken
T@"NSString",R,C,N,V_userToken
T@"NSError",R,C,N,V_userTokenFetchingError
initWithMessageStore:identityStore:
_handleICInAppMessagesDidChangeDistributedNotification:
isAudioAccessory
initWithMachServiceName:
setDelegate:
_schedulePeriodicUpdate
syncMessagesWithCompletion:
updateStoreProperty:forKey:completion:
getStorePropertyForKey:completion:
registerObserver:
sharedPrivacyInfo
_performSyncRetryIfPending:
beginObservingPrivacyAcknowledgementForIdentifier:handler:
endObservingPrivacyAcknowledgementForIdentifier:withToken:
unregisterObserver:
invalidate
_xpcClientConnection
remoteObjectProxyWithErrorHandler:
allMessageEntriesWithCompletion:
getAllMessageEntriesWithCompletion:
setWithObject:
messageEntriesForBundleIdentifiers:completion:
getAllMessageEntriesForBundleIdentifiers:completion:
messageEntryWithIdentifier:bundleIdentifier:completion:
getMessageEntryWithIdentifier:bundleIdentifier:completion:
addMessageEntry:completion:
_addMessageEntry:completion:
initWithStartHandler:
updateMessageEntry:completion:
removeMessageEntryWithIdentifier:forBundleIdentifier:completion:
_removeMessageEntryWithIdentifier:forBundleIdentifier:completion:
removeAllMessageEntriesForBundleIdentifier:completion:
_removeAllMessageEntriesForBundleIdentifier:completion:
defaultAction
deepLink
dateWithTimeIntervalSinceNow:
title
setTitle:
message
setSubtitle:
array
currentLocale
dataWithJSONObject:options:error:
base64EncodedStringWithOptions:
setNotification:
initWithApplicationMessage:bundleIdentifier:
sharedManager
downloadResourcesForMessageWithIdentifier:bundleIdentifier:completion:
_performSyncWithCompletion:
resetMessagesWithCompletion:
_resourceCacheDirectoryPath
removeItemAtPath:error:
resetStoreWithCompletion:
reportEventForMessageIdentifier:withParams:flushImmediately:completion:
initWithMessageIdentifier:params:
eventIdentifier
flushEventsWithCompletion:
addPendingMessageEvent:completion:
_privacyAcknowledgementRequired
messageIdentifier
params
initWithStoreRequestContext:messageIdentifier:params:
removePendingMessageEventWithIdentifier:completion:
pendingMessageEventsWithCompletion:
_downloadResourcesForMessageWithIdentifier:bundleIdentifier:completion:
_updateShouldDownloadResources:onMessageWithIdentifier:bundleIdentifier:completion:
clearCachedResourcesForMessageWithIdentifier:bundleIdentifier:completion:
getMetadataForMessageIdentifier:bundleIdentifier:completion:
getAllMetadataForBundleIdentifiers:completion:
updateMetadata:messageIdentifier:bundleIdentifier:completion:
removeMetadataForMessageIdentifier:bundleIdentifier:completion:
getGlobalPropertyForKey:completion:
setGlobalProperty:forKey:completion:
getPropertyForKey:bundleIdentifier:completion:
getStorePropertyForKey:bundleIdentifier:completion:
setProperty:forKey:bundleIdentifier:completion:
updateStoreProperty:forKey:bundleIdentifier:completion:
isBadgingApplication
applicationMessage
setIsBadgingApplication:
removeBadgeIconForBundleIdentifier:completion:
initWithMachServiceName:options:
messageEntriesForBundleIdentifier:completion:
removeApplicationBadgeForBundleIdentifier:fromPresentedMessageEntry:completion:
syncPollingInterval
bypassBagSanityChecks
_performCacheConsistencyCheck
_loadConfigurationWithCompletion:
timeIntervalSinceReferenceDate
initWithStoreRequestContext:fromRevision:
_processSyncResponse:completion:
applicationMessageSyncResponsesCount
applicationMessageSyncResponsesAtIndex:
bundleID
syncCommandsCount
syncCommandsAtIndex:
commandSerialNumber
commandType
shouldDownloadResources
_checkForMessageResourcesNeedingDownloadForcingIfNecessary:
setShouldDownloadResources:
hasBundleIdentifier
bundleIdentifier
addBadgeIconForBundleIdentifier:completion:
initWithBundleIDs:states:
applicationStateForApplication:
notification
JSONObjectWithData:options:error:
scheduleNotificationWithPayload:forBundleIdentifier:
hasPrefix:
removeNotificationWithIdentifier:forBundleIdentifier:
stringByAppendingPathComponent:
removeAllMetadataForBundleIdentifier:completion:
getAllMessageEntriesForBundleIdentifier:completion:
allStorePropertiesWithCompletion:
clearCachedResources
operationCount
initWithBundleIdentifier:
lastKnownNetworkType
shouldAllowDataForNetworkType:
resourceDomainURL
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
cachedLocationForResourceWithIdentifier:
URLWithString:relativeToURL:
lastPathComponent
initWithURL:requestContext:
fileURLWithPath:
enqueueDownloadRequest:toDestination:withCompletionHandler:
images
hasURL
setCacheLocation:forResourceWithIdentifier:
setDidCacheRequiredResources:
dictionaryForBagKey:
initWithDictionary:
setWithCapacity:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
removeItemAtURL:error:
privacyAcknowledgementRequiredForIdentifier:
auditToken
valueForEntitlement:
setExportedInterface:
_removeConnection:
_addConnection:
removeObject:
isRemoteServerLikelyReachable
networkType
isCurrentNetworkLinkHighQuality
listener:shouldAcceptNewConnection:
environmentMonitorDidChangeNetworkReachability:
environmentMonitorDidChangeNetworkType:
environmentMonitorDidChangePower:
environmentMonitorDidChangeBatteryLevel:
environmentMonitorDidChangeTelephonyStatus:
environmentMonitorDidChangeThermalLevel:
T@"ICInAppMessageManager",R,N
startSystemService
stopSystemService
addMessageEntryFromAMSDialogRequest:bundleIdentifier:completion:
reportEventForMessageIdentifier:withParams:completion:
getAllMetadataForBundleIdentifier:completion:
_unsafeMessageStore
_downloadOperationQueue
_callbackQueue
_messageStore
_isSystemService
_foregroundApplicationIdentifier
_privacyObserverToken
_xpcServiceListener
_xpcConnections
T@"ICInAppMessageStore",R,N,V_messageStore
connectStartDate
connectEndDate
domainLookupStartDate
domainLookupEndDate
fetchStartDate
requestStartDate
responseStartDate
responseEndDate
secureConnectionStartDate
resourceFetchType
isReusedConnection
redirectCount
urlRequest
HTTPBody
responseData
response
valueForHTTPHeaderField:
statusCode
_CFURLResponse
stringWithCString:encoding:
requestStartTime
domainLookupStartTime
connectionStartTime
responseEndTime
networkingTimeFromMetrics:
initWithTransactionMetrics:request:
connectionEndTime
domainLookupEndTime
fetchStartTime
responseStartTime
secureConnectionStartTime
cachedResponse
connectionReused
appleTimingApp
connectionType
edgeNodeCacheStatus
environmentDataCenter
responseDate
requestMessageSize
requestUrl
resolvedIPAddress
responseMessageSize
_cachedResponse
_connectionReused
_connectionStartTime
_connectionEndTime
_domainLookupStartTime
_domainLookupEndTime
_fetchStartTime
_requestStartTime
_responseStartTime
_responseEndTime
_secureConnectionStartTime
_appleTimingApp
_connectionType
_edgeNodeCacheStatus
_environmentDataCenter
_responseDate
_statusCode
_redirectCount
_requestMessageSize
_requestUrl
_resolvedIPAddress
_responseMessageSize
Td,R,N,V_connectionStartTime
Td,R,N,V_connectionEndTime
Td,R,N,V_domainLookupStartTime
Td,R,N,V_domainLookupEndTime
Td,R,N,V_fetchStartTime
Td,R,N,V_requestStartTime
Td,R,N,V_responseStartTime
Td,R,N,V_responseEndTime
Td,R,N,V_secureConnectionStartTime
TB,R,N,V_cachedResponse
TB,R,N,V_connectionReused
T@"NSString",R,N,V_appleTimingApp
T@"NSString",R,N,V_connectionType
T@"NSString",R,N,V_edgeNodeCacheStatus
T@"NSString",R,N,V_environmentDataCenter
T@"NSString",R,N,V_responseDate
TQ,R,N,V_statusCode
TQ,R,N,V_redirectCount
TQ,R,N,V_requestMessageSize
T@"NSString",R,N,V_requestUrl
T@"NSString",R,N,V_resolvedIPAddress
TQ,R,N,V_responseMessageSize
msv_description
isNSString__
initWithRemoteRequestOperationResponse:remoteRequestOperationError:
remoteRequestOperationResponse
setRemoteRequestOperationResponse:
remoteRequestOperationError
setRemoteRequestOperationError:
_remoteRequestOperationResponse
_remoteRequestOperationError
T@"<NSSecureCoding>",&,N,V_remoteRequestOperationResponse
T@"NSError",&,N,V_remoteRequestOperationError
setRequestURLBagKey:
setIncludeKeybagSyncData:
setIncludeSubscriptionKeybagSyncData:
initWithRequestContext:redownloadParameters:
initWithRequestContext:subscriptionItemID:
_originatorId
_action
_addItems
_clientInfo
_currentItemChange
_currentItemTransition
_displayMessage
_moveItem
_originatorUUID
_participantChange
_playNowQueueItems
_playbackSync
_queueSync
_removeItem
_replaceQueueItems
_serverNotice
_displayNotice
_autoPlay
_radio
_trackGenerationSource
stop
delegationConsumerNetService:didAcceptConnectionWithInputStream:outputStream:
code
_updateNetServiceStatus
substringToIndex:
initWithDomain:type:name:port:
objectEnumerator
setDelegationAccountUUIDs:
setServiceVersion:
setDeviceName:
securityMode
setSecurityMode:
TXTRecordData
setTXTRecordData:
publishWithOptions:
getDeviceReceiverSettingsWithCompletion:
netServiceWillPublish:
netServiceDidPublish:
netService:didNotPublish:
netServiceWillResolve:
netServiceDidResolveAddress:
netService:didNotResolve:
netServiceDidStop:
netService:didUpdateTXTRecordData:
netService:didAcceptConnectionWithInputStream:outputStream:
initWithUserIdentityDelegationAccountUUIDs:
securitySettings
publish
delegate
userIdentityDelegationAccountUUIDs
_didPublish
_isPublished
_netService
_netServiceQueue
_securitySettings
_delegate
_userIdentityDelegationAccountUUIDs
T@"<ICDelegationConsumerNetServiceDelegate>",W,N,V_delegate
T@"NSDictionary",R,C,N,V_userIdentityDelegationAccountUUIDs
T@"ICDelegationServiceSecuritySettings",R,N
_finishWithError:
completionHandler
_provisionSession
ic_sharedRequestOperationQueueWithQualityOfService:
performRequestOnOperationQueue:withCompletionHandler:
_sessionIdentifier
sharedSessionManager
backgroundSessionConfigurationWithIdentifier:
defaultSessionConfiguration
setDiscretionary:
setHTTPCookieAcceptPolicy:
setHTTPShouldSetCookies:
setHTTPShouldUsePipelining:
setRequestCachePolicy:
setSessionSendsLaunchEvents:
set_requiresPowerPluggedIn:
set_sourceApplicationBundleIdentifier:
set_socketStreamProperties:
set_prefersInfraWiFi:
set_companionProxyPreference:
set_allowsWCA:
setAllowsCellularAccess:
sessionWithIdentifier:creationBlock:
hlsAsset
playlistURL
downloadableAsset
initWithURL:requestContext:resumeData:
progress
addChild:withPendingUnitCount:
URLAssetWithURL:options:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
keyServerURL
keyCertificateURL
keyServerProtocolType
path
initWithPath:
initWithRequestContext:keyStore:delegate:
setRequestOfflineKeys:
setKeyServerURL:
setKeyServerProtocolType:
setKeyCertificateURL:
storeAdamID
setAdamID:
addAsset:shouldPreloadKeys:waitForKeyIdentifiers:
waitForAllKeysToProcess
_createAVAssetDownloadOptionsDictionary
bodyDataURL
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
moveItemAtURL:toURL:error:
enqueueAggregateAssetDownloadRequest:toDestination:withAVURLAsset:options:completionHandler:
enqueueAVDownloadRequest:toDestination:withOptions:completionHandler:
stringWithString:
responseSinfDictionary
getPropertiesForUserIdentity:error:
redownloadParameters
_mediaKindFromResponseItemMetadata:
contentKeySession:didFinishProcessingKey:withResponse:error:
initWithRequestContext:storeMediaResponseItem:resumeData:
destinationURL
setDestinationURL:
allowsCellularData
setAllowsCellularData:
allowsProxyCellularData
setAllowsProxyCellularData:
allowsCellularFallback
setAllowsCellularFallback:
allowDownloadOnConstrainedNetworks
setAllowDownloadOnConstrainedNetworks:
isDiscretionary
requiresPower
setRequiresPower:
prefersHLSAsset
setPrefersHLSAsset:
resumeData
setResumeData:
minimumBitrate
setMinimumBitrate:
maximumSampleRate
setMaximumSampleRate:
prefersLossless
setPrefersLossless:
prefersMultichannel
setPrefersMultichannel:
_storeMediaResponseItem
_additionalHTTPHeaderFields
_downloadSession
_request
_contentKeySession
_keyDeliveryError
_allowsCellularData
_allowsProxyCellularData
_allowsCellularFallback
_allowDownloadOnConstrainedNetworks
_discretionary
_requiresPower
_prefersHLSAsset
_prefersLossless
_prefersMultichannel
_destinationURL
_resumeData
_minimumBitrate
_maximumSampleRate
T@"NSURL",C,N,V_destinationURL
TB,N,V_allowsCellularData
TB,N,V_allowsProxyCellularData
TB,N,V_allowsCellularFallback
TB,N,V_allowDownloadOnConstrainedNetworks
discretionary
TB,N,GisDiscretionary,V_discretionary
TB,N,V_requiresPower
TB,N,V_prefersHLSAsset
T@"NSData",C,N,V_resumeData
T@"NSNumber",C,N,V_minimumBitrate
T@"NSNumber",C,N,V_maximumSampleRate
TB,N,V_prefersLossless
TB,N,V_prefersMultichannel
defaultMaximumConcurrentRequests
_defaultSessionWithQualityOfService:maxConcurrentRequests:
_defaultSessionIdentifierWithQualityOfService:maxConcurrentRequests:
ic_defaultSessionConfiguration
set_requiresSustainedDataDelivery:
set_ignoreDidReceiveResponseDisposition:
hasCellularDataCapability
enableMultipathTCP
setMultipathServiceType:
initWithConfiguration:maxConcurrentRequests:qualityOfService:
highPrioritySession
unlimitedHighPrioritySession
T@"ICURLSessionManager",R,N
T@"ICURLSession",R,N
sessionWithQualityOfService:
removeSessionWithIdentifier:
sessionWithIdentifier:
sessionWithIdentifier:configuration:
addSession:withIdentifier:
_cachedSessions
set_tlsTrustPinningPolicyName:
ignoreExtendedCertificateValidation
set_alwaysPerformDefaultTrustEvaluation:
bundleRecordForCurrentProcess
T@"NSURLSessionConfiguration",R
ic_int64ValueForKey:
ic_intValueForKey:
initWithMessageUserInfo:
userInfo
accountDSID
actionType
apsPayload
_userInfo
_accountDSID
_actionType
_apsPayload
T@"NSDictionary",R,C,N,V_userInfo
Tq,R,N,V_accountDSID
Tq,R,N,V_actionType
T@"NSDictionary",R,C,N,V_apsPayload
ic_arrayValueForKey:
sagaServerRevision
sagaUpdatedSubscribedPlaylistIDs
jaliscoServerRevision
jaliscoChangedMediaTypes
moduleIdentifier
_insertPositionType
_mediaId
initWithUserIdentity:
_setupNotifications
_tearDownNotifications
serverIsSetup
configuration
ic_cloudClientErrorWithCode:userInfo:
authenticateAndStartInitialImport:completionHandler:
_enableCloudLibraryWithPolicy:startinitialImport:isExplicitUserAction:completionHandler:
_isAuthenticated
disableCloudLibraryWithReason:completionHandler:
isActive
setActive:
isAuthenticated
synchronousRemoteObjectProxyWithErrorHandler:
updateJaliscoLibraryWithReason:completionHandler:
updateSagaLibraryWithReason:completionHandler:
shouldProhibitMusicActionForCurrentNetworkConditions
isAuthenticatedWithQueue:completionHandler:
shouldProhibitVideosActionForCurrentNetworkConditions
loadArtworkInfoForPurchaseHistoryIDs:completionHandler:
loadScreenshotInfoForPurchaseHistoryIDs:completionHandler:
loadArtworkInfoForSagaIDs:completionHandler:
loadArtworkInfoForContainerSagaIDs:completionHandler:
loadScreenshotInfoForSagaIDs:completionHandler:
loadArtworkInfoForSubscriptionItemPersistentIDs:completionHandler:
loadScreenshotInfoForSubscriptionPersistentIDs:completionHandler:
loadArtworkInfoForSubscriptionContainerPersistentIDs:completionHandler:
userIdentity
musicLibraryForUserAccount:
userIdentityStore
jaliscoOnDiskDatabaseRevision
sagaOnDiskDatabaseRevision
syncLibraryID
isActiveLocker
isMediaSyncingSupported
serialAccessQueue
remoteObjectProxy
uploadCloudItemProperties
automaticDownloadMediaKindsForMusic
initWithRequestContext:mediaKindsToAdd:mediaKindsToRemove:
ic_sharedAccountStore
ic_activeStoreAccountWithError:
ic_isAutomaticDownloadsEnabledForMediaKindMusic
automaticDownloadsEnabled
notifyDeviceSetupFinishedWithCompletion:
availabilityService
hasProperNetworkConditionsToPlayMedia
hasProperNetworkConditionsToShowCloudMedia
isCellularDataRestrictedForMusic
isCellularDataRestrictedForVideos
isCellularDataRestrictedForStoreApps
shouldProhibitStoreAppsActionForCurrentNetworkConditions
canShowCloudDownloadButtons
canShowCloudMusic
canShowCloudVideo
cloudService
setServerIsSetup:
updateSagaInProgressChangedHandler
loadIsSagaUpdateInProgressWithCompletionHandler:
updateJaliscoInProgressChangedHandler
loadIsJaliscoUpdateInProgressWithCompletionHandler:
performBlockAfterServerSetup:
setCloudAddToPlaylistBehavior:completionHandler:
createPlaylistWithPersistentID:properties:trackList:completionHandler:
sdk_createPlaylistWithPersistentID:properties:tracklist:completionHandler:
setPlaylistProperties:trackList:forPlaylistPersistentID:completionHandler:
sdk_setPlaylistProperties:trackList:forPlaylistPersistentID:completionHandler:
addStoreItemWithAdamID:referral:toPlaylistWithPersistentID:completionHandler:
addItemWithSagaID:toPlaylistWithPersistentID:completionHandler:
sdk_addStoreItemWithOpaqueID:toPlaylistWithPersistentID:completionHandler:
sdk_addItemWithSagaID:toPlaylistWithPersistentID:completionHandler:
publishPlaylistWithSagaID:completionHandler:
uploadArtworkForPlaylistWithPersistentID:completionHandler:
updateSubscribedPlaylistsWithSagaIDs:ignoreMinRefreshInterval:completionHandler:
updatePinnedSubscribedPlaylistsWithCompletion:
addStoreItemWithAdamID:referral:completionHandler:
sdk_addStoreItemWithOpaqueID:completionHandler:
addStorePlaylistWithGlobalID:completionHandler:
removePlaylistsWithSagaIDs:completionHandler:
removeItemsWithSagaIDs:completionHandler:
hideItemsWithPurchaseHistoryIDs:completionHandler:
addGeniusPlaylistWithPersistentID:name:seedItemSagaIDs:itemSagaIDs:completionHandler:
authenticateWithCompletionHandler:
enableCloudLibraryWithPolicy:startInitialImport:completionHandler:
disableCloudLibraryWithCompletionHandler:
becomeActive
removeJaliscoLibraryWithCompletionHander:
isMediaKindDisabledForJaliscoLibrary:
updateJaliscoLibraryWithCompletionHandler:
updateSagaLibraryWithCompletionHandler:
deauthenticateWithCompletionHandler:
isAuthenticatedWithCompletionHandler:
loadLastKnownEnableICMLErrorStatusWithCompletionHander:
importItemArtworkForPurchaseHistoryID:completionHandler:
importScreenshotForPurchaseHistoryID:completionHandler:
importItemArtworkForSagaID:completionHandler:
importScreenshotForSagaID:completionHandler:
importContainerArtworkForSagaID:completionHandler:
importSubscriptionItemArtworkForPersistentID:completionHandler:
importSubscriptionScreenshotForPersistentID:completionHandler:
importSubscriptionContainerArtworkForPersistentID:completionHandler:
importArtistHeroImageForPersistentID:completionHandler:
importAlbumArtistHeroImageForPersistentID:completionHandler:
deprioritizeItemArtworkForPurchaseHistoryID:
deprioritizeScreenshotForPurchaseHistoryID:
deprioritizeItemArtworkForSagaID:
deprioritizeScreenshotForSagaID:
deprioritizeContainerArtworkForSagaID:
deprioritizeSubscriptionItemArtworkForPersistentID:
deprioritizeSubscriptionScreenshotForPersistentID:
deprioritizeSubscriptionContainerArtworkForPersistentID:
deprioritizeArtistHeroImageForPersistentID:
deprioritizeAlbumArtistHeroImageForPersistentID:
loadArtworkInfoForPurchaseHistoryID:completionHandler:
loadScreenshotInfoForPurchaseHistoryID:completionHandler:
loadArtworkInfoForSagaID:completionHandler:
loadArtworkInfoForContainerSagaID:completionHandler:
loadScreenshotInfoForSagaID:completionHandler:
loadArtworkInfoForSubscriptionItemPersistentID:completionHandler:
loadScreenshotInfoForSubscriptionPersistentID:completionHandler:
loadArtworkInfoForSubscriptionContainerPersistentID:completionHandler:
loadMissingArtwork
loadGeniusItemsForSagaID:completionHandler:
loadIsUpdateInProgressWithCompletionHandler:
loadUpdateProgressWithCompletionHandler:
loadSagaUpdateProgressWithCompletionHandler:
loadJaliscoUpdateProgressWithCompletionHandler:
initialLibrarySyncsComplete
resetConfiguration:
resignActive
setDaemonConfiguration:
setPreferredVideoQuality:
setItemProperties:forPurchaseHistoryID:
setItemProperties:forSagaID:
uploadItemProperties
uploadCloudPlaylistProperties
setAlbumProperties:forAlbumPersistentID:completionHandler:
updateArtistHeroImages
loadBooksForStoreIDs:withCompletionHandler:
handleAutomaticDownloadPreferenceChangedForMediaKindMusic:withCompletionHandler:
isAutomaticDownloadsEnabledForMediaKindMusic
hasSetPreferenceForAutomaticDownloads
createMusicNotificationFromAMSDialogRequest:error:
isCellularDataRestricted
shouldProhibitActionsForCurrentNetworkConditions
_serverSetupDidComplete
_serverSagaUpdateInProgressDidChange
_serverJaliscoUpdateInProgressDidChange
setUpdateSagaInProgressChangedHandler:
setUpdateJaliscoInProgressChangedHandler:
serverSetupBlockQueue
preferredVideoQuality
pendingServerSetupCompleteBlocks
setPendingServerSetupCompleteBlocks:
_active
_serverIsSetup
_updateSagaInProgressChangedHandler
_updateJaliscoInProgressChangedHandler
_serialAccessQueue
_serverSetupBlockQueue
_preferredVideoQuality
_availabilityService
_cloudService
_pendingServerSetupCompleteBlocks
T@"NSObject<OS_dispatch_queue>",R,N,V_serialAccessQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_serverSetupBlockQueue
T@"NSXPCConnection",R,N
Tq,N,V_preferredVideoQuality
active
TB,N,GisActive,V_active
T@"ICCloudClientAvailabilityService",R,N,V_availabilityService
T@"ICCloudClientCloudService",R,N,V_cloudService
T@"ICCloudServerListenerEndpointProvider",R,N,V_listenerEndpointProvider
T@"NSMutableArray",&,N,V_pendingServerSetupCompleteBlocks
TB,N,V_serverIsSetup
T@"ICConnectionConfiguration",R,N,V_configuration
T@?,C,N,V_updateSagaInProgressChangedHandler
T@?,C,N,V_updateJaliscoInProgressChangedHandler
activeLockerAccount
ic_automaticDownloadKinds
ic_activeStoreAccountWithCompletion:
cancellationHandler
setCancellationHandler:
startHandler
_cancellationHandler
_startHandler
T@?,R,C,N,V_startHandler
T@?,C,N
_willBeginExecutingRemoteRequestOperation
_clientConnection
_didEndExecutingRemoteRequestOperation
performRemoteRequestOperationWithExecutionContext:completionHandler:
_scheduleInvalidationOfClientConnection
machServiceName
clientInterface
serviceInterface
_cancelClientConnectionInvalidationTimer
_invalidateClientConnection
_clientConnectionInvalidationTimerDidExpire
sharedRemoteRequestOperationController
T@"ICRemoteRequestOperationController",R,N
_numberOfActiveRequests
_clientConnectionInvalidationTimer
initWithClientInfo:options:
setClientType:
invalidateCachedDeveloperTokenForClientInfo:clientType:requester:completionHandler:
fetchDeveloperTokenForClientInfo:completionHandler:
invalidateCachedDeveloperTokenForClientInfo:completionHandler:
initWithItemResponseDictionary:
enhancedAudioConfiguration
certificateURL
setKeyServerAdamID:
fileAssets
initWithItemResponseDictionary:urlBag:
artworkURL
cancelDownloadURL
downloadIdentifier
isPurchasedRedownload
purchaseDate
suzeLeaseID
downloadableAssetMatchingFlavorType:
assetExpirationDate
setAssetExpirationDate:
_itemResponseDictionary
_urlBag
_assetExpirationDate
T@"NSDate",C,N,V_assetExpirationDate
T@"NSURL",R,C,N
T@"ICStoreFinanceItemMetadata",R,C,N
T@"ICStoreHLSAssetInfo",R,C,N
T@,R,N
storeRequestContext
radioConfiguration
baseURL
URLByAppendingPathComponent:isDirectory:
timedMetadataData
storeAdamIDs
setRadioContentDictionaryCreationBlock:
initWithURLResponse:
performWithResponseHandler:
setStoreAdamIDs:
setStoreRequestContext:
setTimedMetadataData:
_storeAdamIDs
_timedMetadataData
_qualityOfService
T@"NSArray",C,N,V_storeAdamIDs
T@"ICStoreRequestContext",C,N,V_storeRequestContext
T@"NSData",C,N,V_timedMetadataData
Tq,N,V_qualityOfService
arrayWithObjects:
ic_boolValueForKey:
initWithServerConfiguration:
allowedKinds
allowedMatchStatus
restoreURL
shouldGZip
_shouldGZip
_allowedKinds
_allowedMatchStatus
_restoreURL
T@"NSArray",R,C,N,V_allowedKinds
T@"NSArray",R,C,N,V_allowedMatchStatus
T@"NSURL",R,C,N,V_restoreURL
TB,R,N,V_shouldGZip
activeAccountDidChange
capabilitiesDidChange:
storefrontCountryCodeDidChange:
storefrontIdentifierDidChange:
beginObservingCloudServiceStatusWithCompletionHandler:
endObservingCloudServiceStatusWithToken:completionHandler:
requestCapabilitiesWithPrivacyPromptPolicy:completionHandler:
requestStorefrontCountryCodeWithCompletionHandler:
requestStorefrontIdentifierWithCompletionHandler:
requestDeveloperTokenWithOptions:clientInfo:completionHandler:
requestUserTokenForDeveloperToken:options:clientInfo:completionHandler:
requestMusicKitTokensWithOptions:clientInfo:completionHandler:
_initWithExtendedSubscriptionStatus:
lightweightSubscriptionStatus
_lightweightSubscriptionStatus
T@"ICLightweightMusicSubscriptionStatus",R,C,N,V_lightweightSubscriptionStatus
resultCode
initWithResultCode:
serverHostName
serverInstance
isSuccess
setSuccess:
tokenResult
_success
_resultCode
_serverHostName
_serverInstance
_tokenResult
Ti,R,N,V_resultCode
T@"NSString",R,C,N,V_serverHostName
Tq,R,N,V_serverInstance
success
TB,N,GisSuccess,V_success
T@"ICLibraryAuthServiceClientTokenResult",R,C,N,V_tokenResult
isNSNumber__
authServiceClientTokenTimeToLive
dateWithTimeIntervalSince1970:
decodeInt64ForKey:
encodeInt64:forKey:
token
generatedAtMillis
timeToLiveMillis
lifespanMillis
tokenIdentitifer
_token
_generatedAtMillis
_timeToLiveMillis
_lifespanMillis
_tokenIdentitifer
T@"NSString",R,C,N,V_token
Tq,R,N,V_generatedAtMillis
Tq,R,N,V_timeToLiveMillis
Tq,R,N,V_lifespanMillis
T@"ICLibraryAuthServiceClientTokenIdentifier",R,C,N,V_tokenIdentitifer
_DSID
_deviceGUID
T@"NSNumber",R,C,N,V_DSID
T@"NSString",R,C,N,V_deviceGUID
_isComparableUsingResolvedDSID
_resolvedDSIDUsingSpecificIdentityStore:
deviceIdentifier
_ensureResolvedDSIDUsingSpecificIdentityStore:
autoupdatingActiveAccount
autoupdatingActiveLockerAccount
carrierBundleWithDeviceIdentifier:
identityAllowingDelegation:
identityAllowingEstablishment:
_setResolvedDSID:
_performEncodingTaskUsingSpecificIdentityStore:encodingHandler:
allowsDelegation
allowsAccountEstablishment
hasResolvedDSID
creationTime
_deviceIdentifier
_isEncodingUsingSpecificIdentityStore
_allowsDelegation
_allowsAccountEstablishment
_hasResolvedDSID
_creationTime
TB,R,N,V_hasResolvedDSID
TQ,R,N,V_creationTime
TB,R,N,V_allowsDelegation
TB,R,N,V_allowsAccountEstablishment
TQ,R,N
archivedDataWithRootObject:requiringSecureCoding:error:
ic_archivedDataWithRootUserIdentity:inStore:requiringSecureCoding:error:
encodeInt32:forKey:
decodeObjectForKey:
decodeInt32ForKey:
_copyWithClass:zone:
codec
_spatialized
Tq,R,N,V_bitRate
Tq,R,N,V_bitDepth
T@"NSString",R,N,V_channelLayoutDescription
TI,R,N,V_codec
T@"NSString",R,N
Tq,R,N,V_sampleRate
spatialized
TB,R,N,GisSpatialized,V_spatialized
setBitRate:
setBitDepth:
setChannelLayoutDescription:
setCodec:
setSampleRate:
setSpatialized:
T@"NSString",D,N
TI,D,N
TB,D,N,GisSpatialized
ic_URLByAppendingQueryParameters:
setCachePolicy:
urlResponse
_loadCache
_getCacheKeyForRequestContext:
shouldBypassURLBagCache
_fetchBagForRequestContext:withCompletionHandler:
allValues
_setExpirationDate:
_saveCache
storefrontIdentifier
_shouldUseLegacyProtocolForRequestContext:
componentsSeparatedByString:
bagProfile
bagProfileVersion
setShouldRequireURLBag:
setAnisetteVersion:
setPrioritize:
parsedBody
_calculatedExpiration
dateWithTimeIntervalSinceReferenceDate:
_initWithDictionary:amsBag:fallbackValues:requestDate:expirationDate:serverCorrelationKey:serverEnvironment:profileName:profileVersion:sourceAccountDSID:
_amsProcessInfoFromRequestContext:
bagForProfile:profileVersion:processInfo:
_temporaryDictionary
resultWithError:
createSnapshotWithCompletion:
shouldUseNewBagProtocol
invalidateCache
_cacheFilePath
initWithContentsOfFile:
_initWithPropertyListRepresentation:
_propertyListRepresentation
stringByDeletingLastPathComponent
writeToFile:atomically:
processName
setExecutableName:
setLocalizedName:
setClientVersion:
clientBundleIdentifier
setProxyAppBundleID:
T@"ICURLBagProvider",R,N
_cache
_pendingOperationsForCacheKey
_cacheKeysScheduledForRefresh
_queueQuery
isValidSubscriptionStatusResponseDictionary:error:
initWithResponseDictionary:expirationDate:
setSubscriptionStatus:
setFinalResponse:
_finalResponse
_needsReload
_subscriptionStatus
finalResponse
TB,N,GisFinalResponse,V_finalResponse
TB,N,V_needsReload
T@"ICMusicSubscriptionStatus",C,N,V_subscriptionStatus
_removeType
_removedItemIds
arrayWithCapacity:
sharedCookieStore
getCookieWithName:userIdentifier:
initWithStoreRequestContext:accountDSIDs:
_accountDSIDs
progressWithTotalUnitCount:
setCancellable:
setRequestType:
setAssetSourceStorefrontID:
setCompletedUnitCount:
setStoreSubscriptionAdamID:
initWithRequestContext:storeSubscriptionAdamID:
assetSourceStorefrontID
storeSubscriptionAdamID
_assetSourceStorefrontID
_storeSubscriptionAdamID
T@"NSString",C,N,V_assetSourceStorefrontID
Tq,R,N,V_storeSubscriptionAdamID
getResponseForFinishDelegationRequest:withSessionIDToRequestInfoMap:completionHandler:
getResponseForStartDelegationRequest:requestContext:withCompletionHandler:
initWithBagKey:bagValueType:
bagKey
bagValueType
_bagKey
_bagValueType
T@"NSString",R,C,N,V_bagKey
TQ,R,N,V_bagValueType
privacyAcknowledgementRequiredForMusic
setStoreCloudID:
setStorePurchasedAdamID:
setDelegatedPlayback:
setCloudUniversalLibraryID:
setPlaybackAuthorizationToken:
setLeaseCertificateData:
setLeaseAssetIDData:
setAdditionalQueryItems:
initWithResponseDictionary:requestDate:urlBag:
leaseInfoData
subscriptionKeyBagData
importSubscriptionKeyBagData:leaseInfoData:completionHandler:
setShouldParseBodyData:
bodyData
initWithBytes:length:
start
isDelegatedPlayback
requestType
willBeginExecutionHandler
setWillBeginExecutionHandler:
storeCloudID
storePurchasedAdamID
cloudUniversalLibraryID
isFollowUp
setFollowUp:
_delegatedPlayback
_followUp
_willBeginExecutionHandler
_storeCloudID
_storePurchasedAdamID
_cloudUniversalLibraryID
delegatedPlayback
TB,N,GisDelegatedPlayback,V_delegatedPlayback
Tq,N,V_requestType
T@?,C,N,V_willBeginExecutionHandler
TQ,N,V_storeCloudID
Tq,N,V_storeSubscriptionAdamID
Tq,N,V_storePurchasedAdamID
T@"NSString",C,N,V_cloudUniversalLibraryID
followUp
TB,N,GisFollowUp,V_followUp
T@"NSString",C,N,V_playbackAuthorizationToken
fileAssetWithFlavorType:
previewDuration
previewURL
size
Td,R,N
shouldSignBody
setShouldSignBody:
fields
setFields:
headers
setHeaders:
_shouldSignBody
_fields
_headers
TB,N,V_shouldSignBody
T@"NSArray",C,N,V_fields
T@"NSArray",C,N,V_headers
_expirationTimeInterval
_sessionID
_storefrontIdentifier
initWithOptions:
_initWithValidatedOptions:
initSingleWriterWithOptions:error:
initWithAccountStoreOptions:
_openWithXPCWriter:completionHandler:
close
_popConnection
initWithConnection:
_recycleConnection:
_postDidChangeNotification
_writeUsingBlock:
_resetCorruptionUsingSQL
_resetCorruptionUsingXPC
setExternalChangeHandler:
domain
defaultDatabasePath
setReadOnly:
truncate
lastExpirationPruningDate
timeIntervalSinceDate:
performTransaction:
_writeSQLUsingBlock:
_writeXPCUsingBlock:
openWithOptions:completionHandler:
connectionNeedsResetForCorruption:
readUsingBlock:
_connectionPool
_isOpen
_options
_xpcWriter
setupWithConnection:error:
initWithDatabasePath:
_getUserStatesForcingRefresh:
allUserStates
msv_firstWhere:
getUserStatesForcingRefresh:withReply:
_onAsyncServer:
applyServerStateUpdatedWithUserStates:
_onSyncServer:
_establishClientConnection
shared
T@"ICMediaUserStateCenter",R,N
activeUserState
refreshUserStatesWithCompletion:
setAllUserStates:
_allUserStates
T@"NSArray",C,N,V_allUserStates
T@"ICMediaUserState",R,N
attributesOfFileSystemForPath:error:
storageSpaceAvailable
cachingEnabled
ensureStorageIsAvailable:withCompletionHandler:
_sharedSessionToken
identityProperties
setIdentityProperties:
iCloudIdentityProperties
setICloudIdentityProperties:
_identityProperties
_iCloudIdentityProperties
T@"ICUserIdentityProperties",C,N,V_identityProperties
T@"ICUserIdentityProperties",C,N,V_iCloudIdentityProperties
currentThread
willChangeValueForKey:
didChangeValueForKey:
_execute
maxConcurrentOperationCount
isAsynchronous
isConcurrent
isExecuting
isFinished
finish
_asyncOperationLock
_childOperationQueue
_qualityOfServiceForChildOperationQueue
_isExecuting
_isFinished
T@"NSError",R,C,N,V_error
leaseSyncSessionWithID:accountID:mediaKind:returningLeaseSyncRequestData:error:
endLeaseSyncAndReturnError:
getLeaseSyncRenewRequestData:error:
importLeaseSyncResponseData:error:
processRenewResponseData:error:
accountID
leaseID
mediaKind
_mediaKind
_accountID
_leaseID
TQ,R,N,V_accountID
T@,R,N,V_leaseID
TI,R,N,V_mediaKind
setMaxRetryCount:
reasonType
authenticationProvider
performAuthenticationUsingRequestContext:withCompletionHandler:
performWithCompletion:
mapTableWithKeyOptions:valueOptions:
initWithDelegate:
deviceBecameActive:
_activePairedDevice
valueForProperty:
sharedInstance
pairingID
getPairedDevices
initWithUUIDString:
supportsCapability:
activePairedDevicePairingID
requestInitialSyncStateForPairingIdentifier:completion:
activeDeviceSelectorBlock
getAllDevicesWithArchivedAltAccountDevicesMatching:
_allObservers
nanoPairedDeviceStatusMonitorPairedDeviceChanged:
nanoPairedDeviceStatusMonitorNewActiveDevice:
nanoPairedDeviceStatusMonitor:didFinishInitialSyncForPairingIdentifier:
initialSyncStateObserver:initialSyncDidCompleteForPairingIdentifier:
initialSyncStateObserver:syncDidResetForPairingIdentifier:
initialSyncStateObserver:syncDidCompleteForPairingIdentifier:
initialSyncStateObserverClientCanRetryFailedRequests:
T@"ICNanoPairedDeviceStatusMonitor",R,N
addObserver:
removeObserver:
pairedDevicePairingID
allPairedDevicePairingIDs
allPairedDeviceGUIDs
pairedDeviceGUID
isInitialSyncComplete
_handlePairedDeviceChangedNotification
_callBackQueue
_observers
_pairingIDPropertyName
_pairedDeviceGUID
_pairedDeviceMediaGUID
_initialSyncStateObserver
T@"NSUUID",R,C,N
mediaSyncingSupported
TB,R,N,GisMediaSyncingSupported
tokenResults
tokenResultForAccountDSID:
_parsedTokenResults
_userIdentityStoreDidChangeNotification:
sharedSecurityInfo
_updateSupportedDelegationAccountUUIDs
performBlockAfterFirstUnlock:
_unregisterNotificationsForDelegationNetService:
_updateBrowsingStatus
delegationProviderServiceAddAssertion:
_updateAssertionTimeouts
delegationProviderServiceRemoveAssertion:
initWithNetService:
_registerNotificationsForDelegationNetService:
_updateDelegationForDiscoveredServices
netService
currentConnection
strongToStrongObjectsMapTable
_netServiceDelegationAccountUUIDsDidChangeNotification:
earlierDate:
minusSet:
setIncludesPeerToPeer:
searchForServicesOfType:inDomain:
delegationAccountUUIDs
allKeys
removeObjectsInArray:
initWithUserIdentities:userIdentityStore:requestContext:netService:delegationAccountUUIDs:
enumerateDelegateTokensWithType:usingBlock:completionHandler:
getDelegationUUIDsForUserIdentity:completionHandler:
sharedService
systemServiceWithRequestContext:
delegationProviderServiceSession:didFinishWithError:
netServiceBrowserWillSearch:
netServiceBrowserDidStopSearch:
netServiceBrowser:didNotSearch:
netServiceBrowser:didFindDomain:moreComing:
netServiceBrowser:didFindService:moreComing:
netServiceBrowser:didRemoveDomain:moreComing:
netServiceBrowser:didRemoveService:moreComing:
T@"ICDelegationProviderService",R,N
addAssertion:
removeAssertion:
startSystemXPCService
_activeServiceSessions
_connections
_connectionToAssertions
_assertions
_assertionTimeoutSource
_discoveredServices
_isNetServiceBrowserSearching
_listener
_netServiceBrowser
_netServiceBrowserQueue
_identityStoreOperationQueue
_supportedDelegationAccountUUIDToUserIdentity
T@"ICRequestContext",R,C,N,V_requestContext
hasBoolEntitlement:
initWithAccountTypes:delegate:
_activeStoreAccountWithError:
ic_DSID
_storeAccountForDSID:error:
ic_setActiveStoreAccount:error:
_synchronize
ic_isActiveLockerAccount
ic_setActiveLockerAccount:error:
ic_disableActiveLockerAccount:error:
_userIdentityPropertiesForAccount:
_primaryAppleAccountWithError:
removeAccount:withCompletionHandler:
_applyIdentityProperties:toAccount:
saveVerifiedAccount:error:
ic_storeAccountForStoreAccountID:error:
contextWithACAccount:accountStore:
ic_storeAccountTypeWithError:
initWithAccountType:
ic_localStoreAccountWithError:
_newLocalStoreAccountPropertiesFromAccount:
_applyLocalStoreAccountProperties:toAccount:
_allStoreAccountsWithError:
ic_isManageable
ic_isLocalAccount
ic_isITunesAccount
ic_description
supportsMultipleITunesAccounts
accountType
aa_isAccountClass:
_postAccountsChangeNotification
userIdentityStoreBackendDidChange:
alternateDSID
ic_setAltDSID:
ic_setDSID:
firstName
ic_setFirstName:
lastName
ic_setLastName:
isManagedAppleID
ic_setManagedAppleID:
isSandboxed
ic_setSandboxed:
ic_setStorefront:
isSubscriptionStatusEnabled
ic_setSubscriptionStatusEnabled:
username
setUsername:
mergeToCloudLibraryPreference
ic_setMergeWithCloudLibraryPreference:
cloudLibraryStateReason
ic_setCloudLibraryStateReason:
privateListeningEnabled
ic_setPrivateListeningEnabled:
ic_setActiveLockerAccount:
monitoredAccounts
registerSynchronouslyWithError:
_registerAndLoadAccountsIfNecessary
ic_storefront
_newUserIdentityPropertiesForAccount:
ic_altDSID
setAlternateDSID:
ic_firstName
setFirstName:
ic_lastName
setLastName:
ic_isManagedAppleID
setManagedAppleID:
ic_isSandboxed
setSandboxed:
ic_isSubscriptionStatusEnabled
setSubscriptionStatusEnabled:
ic_ageVerificationExpirationDate
setAgeVerificationExpirationDate:
ic_mergeWithCloudLibraryPreference
setMergeToCloudLibraryPreference:
ic_homeUserIdentifiers
setHomeUserIdentifiers:
ic_cloudLibraryStateReason
setCloudLibraryStateReason:
ic_privateListeningEnabled
setPrivateListeningEnabled:
setActiveLocker:
ic_privateListeningEnabledForHomeUsers
setPrivateListeningEnabledForHomeUsers:
ic_privacyAcknowledgementVersions
setPrivacyAcknowledgementVersions:
ic_isCloudBackupEnabled
setCloudBackupEnabled:
aa_personID
setICloudPersonID:
accountWasAdded:
accountWasModified:
accountWasRemoved:
accountCredentialChanged:
activeAccountDSIDWithError:
updateActiveAccountDSID:error:
activeLockerAccountDSIDWithError:
updateActiveLockerAccountDSID:error:
disableLockerAccountDSID:error:
allStoreAccountDSIDsWithError:
allManageableStoreAccountDSIDsWithError:
identityPropertiesForDSID:error:
identityPropertiesForPrimaryICloudAccountWithError:
removeIdentityForDSID:completion:
replaceIdentityProperties:forDSID:error:
setIdentityProperties:forDSID:error:
localStoreAccountPropertiesWithError:
setLocalStoreAccountProperties:error:
verificationContextForDSID:error:
verificationContextForAccountEstablishmentWithError:
T@"<ICUserIdentityStoreBackendDelegate>",W,N
allStoreAccountsWithError:
localStoreAccountWithError:
storeAccountForDSID:error:
_accountStore
_identityPropertiesCache
_allStoreAccountsByDSID
_primaryICloudAccount
_activeAccountDSID
_accountStoreDelegateQueue
T@"<ICUserIdentityStoreBackendDelegate>",W,N,V_delegate
isEqualToIdentityProperties:
carrierBundleDeviceIdentifier
homeUserIdentifiers
privateListeningEnabledForHomeUsers
isCloudBackupEnabled
iCloudPersonID
isDelegated
delegateToken
privacyAcknowledgementVersions
isSubclassOfClass:
_alternateDSID
_carrierBundleDeviceIdentifier
_cloudBackupEnabled
_delegated
_delegateToken
_dsid
_firstName
_iCloudPersonID
_lastName
_managedAppleID
_sandboxed
_subscriptionStatusEnabled
_username
_ageVerificationExpirationDate
_mergeToCloudLibraryPreference
_homeUserIdentifiers
_cloudLibraryStateReason
_privateListeningEnabled
_activeLocker
_privateListeningEnabledForHomeUsers
_privacyAcknowledgementVersions
cloudBackupEnabled
TB,N,GisCloudBackupEnabled,V_cloudBackupEnabled
T@"NSString",C,N,SsetICloudPersonID:,V_iCloudPersonID
T@"NSArray",C,N,V_homeUserIdentifiers
T@"NSDictionary",C,N,V_privateListeningEnabledForHomeUsers
T@"NSNumber",R,C,N,V_dsid
managedAppleID
TB,R,N,GisManagedAppleID,V_managedAppleID
sandboxed
TB,R,N,GisSandboxed,V_sandboxed
subscriptionStatusEnabled
TB,R,N,GisSubscriptionStatusEnabled,V_subscriptionStatusEnabled
T@"NSNumber",R,C,N,V_privateListeningEnabled
activeLocker
TB,R,N,GisActiveLocker,V_activeLocker
TB,R,N,GisActive,V_active
delegated
TB,R,N,GisDelegated,V_delegated
T@"ICDelegateToken",R,C,N,V_delegateToken
replaceValuesWithValuesFromProperties:
setCarrierBundleDeviceIdentifier:
setDelegated:
setDelegateToken:
T@"NSString",C,D,N
TB,D,N,GisDelegated
T@"ICDelegateToken",C,D,N
T@"NSNumber",C,D,N
TB,D,N,GisManagedAppleID
TB,D,N,GisSandboxed
TB,D,N,GisSubscriptionStatusEnabled
T@"NSDate",C,D,N
T@"NSDictionary",C,D,N
TB,D,N,GisActiveLocker
TB,D,N,GisActive
setDeviceID:
setHasDSID:
hasDSID
hasDeviceID
dSID
deviceID
_dSID
_deviceID
Tq,N,V_dSID
T@"NSString",&,N,V_deviceID
fileExistsAtPath:isDirectory:
_loadExistingArchivePaths
_pruneOldArchives
_onQueueFlush
_archiveForRequest:
_archiveForResponse:responseData:
_archiveCreator
stringFromDate:
insertObject:atIndex:
HTTPMethod
allHTTPHeaderFields
_arrayFromHeaderDictionary:
initWithData:encoding:
localizedStringForStatusCode:
allHeaderFields
MIMEType
fileURLWithPath:isDirectory:
sortUsingComparator:
lastObject
removeLastObject
sharedArchive
T@"ICHTTPArchive",R,N
archiveRequest:withResponse:responseData:
flush
_loggedEvents
_flushTimer
_currentArchiveFileName
_dateFormatter
_creatorDictionary
_archiveDirectoryPath
_archiveFilePaths
_hasValidArchiveDirectory
clientInfoForMusicKitRequestWithClientIdentifier:clientVersion:
_description
bundleForClass:
setDeveloperTokenProvider:
setPersonalizationMethod:
setCollectionPlaybackAuthorizationToken:
_storeRequestPersonalizationStyle
developerTokenProvider
personalizationMethod
collectionPlaybackAuthorizationToken
_developerTokenProvider
_personalizationMethod
_collectionPlaybackAuthorizationToken
_cachedDescription
T@"<ICDeveloperTokenProvider>",R,N,V_developerTokenProvider
Tq,R,N,V_personalizationMethod
T@"NSString",R,C,N,V_collectionPlaybackAuthorizationToken
setUserIdentity:
initWithUserIdentity:userIdentityStore:
initWithUserIdentity:userIdentityStore:clientIdentity:
libraryBagKey
buildIdentifier
purchaseClientIdentifier
requestReason
familyMemberStoreID
decodeTCCIdentityForKey:
encodeTCCIdentity:forKey:
configurationFromSourceConfiguration:userIdentity:
clientIdentity
setBaseURL:
setLibraryBagKey:
setBuildIdentifier:
setPurchaseClientIdentifier:
setRequestReason:
setFamilyMemberStoreID:
_userIdentity
_userIdentityStore
_clientIdentity
_baseURL
_libraryBagKey
_buildIdentifier
_purchaseClientIdentifier
_requestReason
_familyMemberStoreID
T@"ICUserIdentity",C,N,V_userIdentity
T@"ICUserIdentityStore",R,N,V_userIdentityStore
T@"NSObject<OS_tcc_identity>",R,N,V_clientIdentity
T@"NSURL",C,N,V_baseURL
T@"NSString",C,N,V_libraryBagKey
T@"NSString",C,N,V_buildIdentifier
T@"NSString",C,N,V_purchaseClientIdentifier
Tq,N,V_requestReason
T@"NSNumber",C,N,V_familyMemberStoreID
initWithRequestContext:seedItemID:isLibraryID:maxResultCount:
_seedItemID
_isLibraryID
_maxResultCount
_resultsList
_command
_playbackControlSettings
_previousItemId
_transitionItemId
setACAccount:
setACAccountStore:
setVerificationStyle:
interactionLevel
setInteractionLevel:
debugReason
setDebugReason:
ACAccount
ACAccountStore
verificationStyle
_interactionLevel
_debugReason
_ACAccount
_ACAccountStore
_verificationStyle
T@"ACAccount",&,N,V_ACAccount
T@"ACAccountStore",&,N,V_ACAccountStore
T@"ICUserIdentityStore",&,N,V_identityStore
Tq,N,V_verificationStyle
Tq,N,V_interactionLevel
T@"NSString",C,N,V_debugReason
shouldPlaybackRequireOnlineKeys
hasOnlinePlaybackKeys
hasOfflinePlaybackKeys
hasPendingLeaseAcquisition
hasInflightLeaseAcquisition
isTakenDueToLeasePrevention
leaseState
stateReasonDialog
stateReasonDialogMetricsDictionary
isEqualToDictionary:
setShouldPlaybackRequireOnlineKeys:
setHasOnlinePlaybackKeys:
setHasOfflinePlaybackKeys:
setHasPendingLeaseAcquisition:
setHasInflightLeaseAcquisition:
setTakenDueToLeasePrevention:
setLeaseState:
setStateReasonDialog:
setStateReasonDialogMetricsDictionary:
_shouldPlaybackRequireOnlineKeys
_hasOnlinePlaybackKeys
_hasOfflinePlaybackKeys
_hasPendingLeaseAcquisition
_hasInflightLeaseAcquisition
_takenDueToLeasePrevention
_leaseState
_stateReasonDialog
_stateReasonDialogMetricsDictionary
TB,N,V_hasOnlinePlaybackKeys
TB,N,V_hasOfflinePlaybackKeys
TB,N,V_hasPendingLeaseAcquisition
TB,N,V_hasInflightLeaseAcquisition
takenDueToLeasePrevention
TB,N,GisTakenDueToLeasePrevention,V_takenDueToLeasePrevention
TB,N,V_shouldPlaybackRequireOnlineKeys
Tq,N,V_leaseState
T@"ICStoreDialogResponse",C,N,V_stateReasonDialog
T@"NSDictionary",C,N,V_stateReasonDialogMetricsDictionary
dataUsingEncoding:allowLossyConversion:
serialNumber
initWithRequestContext:token:
initWithRequestContext:storeItemID:affiliateIdentifier:
_storeItemID
_affiliateIdentifier
_currentItemId
_initialAVSyncStartItemId
_participantStates
_transportControlStates
_initialAVSyncInitiator
stringWithCapacity:
decodeDoubleForKey:
encodeDouble:forKey:
initWithTimeIntervalSince1970:
lastUpdatedDate
setTokenResult:
lastError
setLastError:
lastUpdateAttemptTime
setLastUpdateAttemptTime:
shouldExcludeFromBackgroundRefresh
setShouldExcludeFromBackgroundRefresh:
_shouldExcludeFromBackgroundRefresh
_lastError
_lastUpdateAttemptTime
T@"ICLibraryAuthServiceClientTokenResult",C,N,V_tokenResult
T@"NSError",C,N,V_lastError
Td,N,V_lastUpdateAttemptTime
TB,N,V_shouldExcludeFromBackgroundRefresh
mainBundle
keyProfile
maxConcurrentRequests
cancelAllOperations
copyWithItemIdentifiersInRange:
completedUnitCount
initWithResponses:
subarrayWithRange:
initWithLocaleIdentifier:
returnsLocalEquivalencies
protocolVersion
imageProfile
platformIdentifier
setBatchSize:
setClientIdentifier:
setClientBundleIdentifier:
clientBundleVersion
setClientBundleVersion:
setItemIdentifiers:
batchSize
batchResultsHandler
setBatchResultsHandler:
setImageProfile:
setKeyProfile:
setPlatformIdentifier:
setProtocolVersion:
setReturnsLocalEquivalencies:
_returnsLocalEquivalencies
_shouldIgnoreCache
_clientIdentifier
_clientBundleIdentifier
_clientBundleVersion
_itemIdentifiers
_batchSize
_batchResultsHandler
_imageProfile
_keyProfile
_platformIdentifier
_protocolVersion
_retryDelay
_timeoutInterval
T@"NSString",C,N,V_clientIdentifier
T@"NSString",C,N,V_clientBundleIdentifier
T@"NSString",C,N,V_clientBundleVersion
T@"NSArray",C,N,V_itemIdentifiers
Tq,N,V_batchSize
T@?,C,N,V_batchResultsHandler
T@"NSString",C,N,V_imageProfile
T@"NSString",C,N,V_keyProfile
Tq,N,V_personalizationStyle
T@"NSString",C,N,V_platformIdentifier
T@"NSString",C,N,V_protocolVersion
Td,N,V_retryDelay
TB,N,V_returnsLocalEquivalencies
Td,N,V_timeoutInterval
TB,N,V_shouldIgnoreCache
explanation
setMessage:
buttons
setAlternateButtonTitle:
setDefaultButtonTitle:
setOtherButtonTitle:
_setBoolValue:forKey:
initWithStoreDialog:
allowInCar
alternateButtonTitle
createCFUserNotification
defaultButtonTitle
displaysActionButtonOnLockScreen
displaysAsTopMost
forcesModalAppearance
otherButtonTitle
setAllowInCar:
setDisplaysActionButtonOnLockScreen:
setDisplaysAsTopMost:
setForcesModalAppearance:
alertLevel
setAlertLevel:
_userNotificationDictionary
_alertLevel
Tq,N,V_alertLevel
setToken:
setLastUpdatedDate:
T@"ICMusicLibraryAuthToken",&,N
T@"NSError",C,N
T@"NSDate",C,N
_lastUpdatedDate
T@"ICMusicLibraryAuthToken",&,N,V_token
T@"NSDate",C,N,V_lastUpdatedDate
initWithMetadataDictionary:expirationDate:
calendarWithIdentifier:
offers
assets
explicitRating
offerType
_storePlatformReleaseDateFormatter
initWithArtworkResponseDictionary:
storeServerCalendar
T@"NSCalendar",R,N
artistStoreAdamID
collectionName
collectionStoreAdamID
copyrightText
genreNames
hasLyrics
hasTimeSyncedLyrics
movementCount
movementName
movementNumber
playlistGlobalID
offerWithType:
radioStationStringID
shouldShowComposer
formerStoreAdamIDs
workName
artworkInfos
audioTraits
classicalURL
handleNewParticipantStateDictionary:
handleNewTransportControlStateDictionary:
instanceMethodForSelector:
liveLink
dataUsingEncoding:
receivedCurrentItemIdentifier:fromParticipant:
fetchPlaybackSyncStateWithCompletion:
sendPlaybackSyncPayload:
fetchPlaybackSyncStateForMediumWithCompletion:
initWithLiveLink:
isCoordinatorSuspended
handlePlaybackSyncPayload:
removeParticipant:
synchronizePlaybackStateForReason:
clearCoordinationMediumDelegate
_broadcastLocalParticipantStateDictionary:
_broadcastTransportControlStateDictionary:forItemWithIdentifier:
_reloadTransportControlStateForItemWithIdentifier:completionHandler:
localParticipantUUID
fetchServerStateLock
fetchServerStateInProgressCount
fetchServerStateCompletions
_fetchServerStateLock
_liveLink
_localParticipantUUID
_fetchServerStateInProgressCount
_fetchServerStateCompletions
T@"NSUUID",R,C,N,V_localParticipantUUID
T{os_unfair_lock_s=I},R,N,V_fetchServerStateLock
Tq,R,N,V_fetchServerStateInProgressCount
T@"NSMutableArray",R,N,V_fetchServerStateCompletions
T@"ICLiveLink",R,W,N,V_liveLink
setCoordinationMediumDelegate:
_playbackCoordinatorDidIssueCommandToPlaybackObjectNotification:
suspensionReasons
initWithKind:
participantForParticipantUUID:
eventWithPlaybackEvent:participant:
receivedEvent:
handleRemovalOfParticipant:
localParticipantUUIDForPlaybackCoordinator:
playbackCoordinator:broadcastLocalParticipantStateDictionary:
playbackCoordinator:broadcastTransportControlStateDictionary:forItemWithIdentifier:
playbackCoordinator:reloadTransportControlStateForItemWithIdentifier:completionHandler:
initWithPlaybackCoordinator:liveLink:
playbackCoordinator
_playbackCoordinator
T@"AVPlayerPlaybackCoordinator",R,N,V_playbackCoordinator
shouldBypassEnforcementOfPrivacyAcknowledgement
allowsFallbackToExpiredStatus
allowsFallbackToStatusNeedingReload
shouldReturnLastKnownStatusOnly
serverCorrelationKey
serverEnvironment
reason
hasSuffix:
mobileSubscriberCountryCode
mobileSubscriberNetworkCode
_cacheAccountEligibilityWithStatus:requestContext:
setCarrierBundlingStatusType:
carrierBundleProvisioningStyle
statusType
_carrierBundleStatusIsValidForCachedSubscriptionStatus:
cellularOperatorName
setCellularOperatorName:
sessionIdentifier
setSessionIdentifier:
setDeepLink:
setReasonType:
msv_underlyingError
setCarrierBundlingErrorCode:
_performSubscriptionStatusURLRequestWithRequestContext:subscriptionStatusURL:allowsAuthentication:completion:
acceptSilentAuth
updatePropertiesForUserIdentity:usingBlock:
request
allowsFuseHeaderEnrichment
shouldRequestLightweightStatus
_allowsFuseHeaderEnrichment
_shouldRequestLightweightStatus
TB,N,V_shouldRequestLightweightStatus
T@"ICMusicSubscriptionStatusRequest",R,C,N,V_request
TB,N,V_allowsFuseHeaderEnrichment
ephemeralSessionConfiguration
initWithConfiguration:maxConcurrentRequests:
timeoutIntervalForRequest
setTimeoutIntervalForRequest:
set_timingDataOptions:
_createURLSessionWithConfiguration:
_checkRequestTimeouts
host
snapshotWithDomain:type:subType:context:triggerThresholdValues:events:completion:
setType:
setCompletionHandler:
_enqueueRequest:
setResponseDataURL:
requestState
task
suspend
setRequestState:
_processPendingRequests
cancelRequest:withError:
setHandlingType:
setRetryReason:
setError:
_finishRequest:
prioritize
_requestForTask:
setLastUpdateTime:
setUrlResponse:
startTime
countOfBytesSent
countOfBytesReceived
shouldReportLoadURLMetrics
_reportLoadURLMetricsWithSession:task:request:error:
protectionSpace
authenticationMethod
sender
performDefaultHandlingForAuthenticationChallenge:
serverTrust
credentialForTrust:
currentURLRequest
setURL:
setCurrentURLRequest:
setRedirectCount:
_responseClass
performanceMetrics
initWithURLResponse:urlRequest:bodyData:performanceMetrics:
buildURLRequestWithCompletionHandler:
processInitialResponse:toRequest:withCompletionHandler:
_newResponseForRequest:
expectedContentLength
setTotalUnitCount:
_ignoreDidReceiveResponseDisposition
appendData:
_updateProgressForSessionTask:withTotalBytesWritten:totalBytesExpectedToWrite:
responseDataURL
linkItemAtURL:toURL:error:
transactionMetrics
setPerformanceMetrics:
_nameForRequestType:
updateState:
_processRequest:
networkConstraints
shouldAllowDataForCellularNetworkTypes
allowsCellularAccess
_createURLSessionTaskForRequest:usingSession:
setTask:
retryCount
maxRetryCount
setResponseData:
setStartTime:
_scheduleNextRequestTimeoutCheck
_retryCountForReason:
_maxRetryCountForReason:
_incrementRetryCountForReason:
processCompletedResponse:toRequest:withCompletionHandler:
taskIdentifier
sessionWithConfiguration:delegate:delegateQueue:
dataTaskWithRequest:
downloadTaskWithRequest:
uploadTaskWithRequest:fromData:
downloadTaskWithResumeData:
initWithURLResponse:urlRequest:bodyDataURL:performanceMetrics:
_timeoutForRequest:
lastUpdateTime
totalUnitCount
lastProgressUpdateTime
setLastProgressUpdateTime:
_incompleteTaskMetrics
initWithTask:metrics:
setSession:
setResponseBody:
initWithContext:
_analyticSignature
setProperty:forBodyKey:
_sendLoadUrlMetricsToCoreAnalytics:
dictionaryForPosting
_sanitizeURLString:
componentsWithString:
setFragment:
msv_filter:
setQueryItems:
stringByAppendingString:
initWithContainerID:bag:
_amsMetricsForRequestContext:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:didCreateTask:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:downloadTask:didFinishDownloadingToURL:
URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
enqueueUploadRequest:withCompletionHandler:
enqueueDownloadRequest:withCompletionHandler:
pauseRequest:
resumeRequest:
cancelPendingRequestsWithError:
pause
URLSession:avAssetDownloadTask:didReceiveAVAssetDownloadToken:
URLSession:avAssetDownloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
_utilityQueue
_pendingRequestsProcessingCounter
_pendingRequests
_activeRequests
_completionHandlers
_paused
_requestTimeoutTimer
_maxConcurrentRequests
TQ,R,N,V_maxConcurrentRequests
isIPhone
isIPad
isIPod
matchStatus
_serializedBodyDataWithAccountID:
flavor
dictionaryWithObjectsAndKeys:
initWithRequestContext:parameters:
performRestoreRequestWithCompletionHandler:
_storeURLRequest
_requestParameters
didCacheRequiredResources
updateMetadataValue:forKey:
allCachedResourceLocations
_bundleIdentifier
_resourceCache
_shouldDownloadResources
_didCacheRequiredResources
_isBadgingApplication
_applicationMessage
T@"ICIAMApplicationMessage",R,N,V_applicationMessage
T@"NSString",R,N,V_bundleIdentifier
T@"NSDictionary",R,N
TB,N,V_shouldDownloadResources
TB,N,V_didCacheRequiredResources
TB,N,V_isBadgingApplication
setApplicationMessage:
setCommandType:
setHasCommandType:
hasCommandType
commandTypeAsString:
StringAsCommandType:
hasApplicationMessage
setCommandSerialNumber:
setHasCommandSerialNumber:
hasCommandSerialNumber
_commandSerialNumber
_commandType
Ti,N,V_commandType
T@"ICIAMApplicationMessage",&,N,V_applicationMessage
Tq,N,V_commandSerialNumber
_bagValueForKey:valueType:
createAMSSnapshotBagWithCompletion:
_didFinishLoadingBag:error:
_valueFromICURLBag:forKeyPath:valueType:
_value:matchesExpectedType:
objectAtIndexedSubscript:
arrayForBagKey:
_valueForBagKey:valueType:fromURLBag:urlBagLoadingError:valueRetrievingError:
failingBagValueWithKey:valueType:error:
frozenBagValueWithKey:value:valueType:
bagValueWithKey:valueType:valuePromise:
finishWithResult:
arrayForKey:
boolForKey:
doubleForKey:
integerForKey:
stringForKey:
URLForKey:
dictionaryForKey:
profile
profileVersion
URLForKey:account:
T@"NSDate",R,N
T@"AMSProcessInfo",R,C,N
_pendingBagValuePromises
_urlBagLoadingError
T@"ICStoreRequestContext",R,N,V_requestContext
initWithAccountID:fairPlaySessionID:
fairPlaySessionID
_fairPlaySessionID
TQ,R,N,V_fairPlaySessionID
ic_cloudClientLibraryUploadErrorWithCode:userInfo:
_initWithXPCListener:testingIdentityStore:
anonymousListener
_userIdentityStoreDelegateAccountStoreDidChangeNotification:
endpoint
_prepareDelegateAccountStoreWithCompletionHandler:
_resetDelegateAccountStoreWithCompletionHandler:
removeAllDelegateTokensWithCompletionHandler:
removePropertiesForUserIdentity:completionHandler:
removeDelegateTokenForUserIdentity:completionHandler:
removeDelegateTokensExpiringBeforeDate:completionHandler:
insertPropertiesForUserIdentity:usingBlock:completionHandler:
updatePropertiesForUserIdentity:usingBlock:completionHandler:
machServiceListener
testingListenerWithIdentityStore:
_ignoresEntitlements
_testingIdentityStore
T@"NSXPCListenerEndpoint",R,N
initReturningError:
exchangeWithSAPVersion:data:returningData:exchangeStatus:error:
processResponseWithSignatureData:data:error:
_availability
_noGeneration
_repeatMode
_shuffleMode
keyForObject:
addApplicationMessageSyncResponses:
clearApplicationMessageSyncResponses
applicationMessageSyncResponsesType
applicationMessageSyncResponses
setApplicationMessageSyncResponses:
_applicationMessageSyncResponses
T@"NSMutableArray",&,N,V_applicationMessageSyncResponses
pattern
initWithResponsePayload:
responsePayload
enumerateMappingsUsingBlock:
mappingsForFeatureName:
_responsePayload
whaContentInfoWithAccountID:
fpContentInfo
vodkaType
_vodkaType
Tq,R,N,V_vodkaType
T(FPContentInfo_=I{VanillaVodkaAttributes_=I^{sinfEntry_}I}{CloudVodkaAttributes_=IIQ}{WHAVodkaAttributes_=IQ}),R,N
_defaultContainerURL
initWithContainerDirectoryURL:
initWithContainerDirectoryURL:identityStore:
_playbackHistoryOfClass:forStationWithIdentifier:identityKey:error:
_getCacheKeyForUserIdentity:completionHandler:
_fileURLForStationWithIdentifier:identityKey:
updateHistoryForStationWithIdentifier:userIdentity:usingBlock:completionHandler:
writeToURL:options:error:
initWithContentsOfURL:options:error:
unarchivedObjectOfClass:fromData:error:
initWithIdentityStore:
flushWithCompletionHandler:
getHistoryForStationWithIdentifier:userIdentity:completionHandler:
removeHistoryForStationWithIdentifier:userIdentity:completionHandler:
updateHistoryForStationWithIdentifier:userIdentity:usingBlock:
containerDirectoryURL
_containerURL
_identityResolutionQueue
T@"NSURL",R,C,N,V_containerURL
initWithWritingStyle:
initWithWritingStyle:databasePath:
_acquirePendingPlayActivityEventsForEndpointIdentifier:withStoreAccountID:shouldFilterStoreAccountID:completionHandler:
_revisionsIndexSetForPlayActivityEvents:
_completePendingPlayEventsWithRevisionIndexSet:forSessionToken:withResult:completionHandler:
_daemonPlayActivityControllerConnection
completePendingPlayActivityEvents:forSessionToken:result:withReplyBlock:
_revisionsIndexSetForPlayActivityEventPersistentIDs:
flushPlayActivityEventsForEndPointIdentifier:withReplyBlock:
revisionsIndexSet
_getFlushSessionInformationForEndpointIdentifier:shouldAcquire:storeAccountID:shouldFilterStoreAccountID:withCompletionHandler:
_table
currentEventsRevision
eventsRevisionVersionToken
performTransactionWithBlock:
getPlayActivityEvents:relevantRevisionsIndexSet:withStartRevision:endRevision:additionalRevisionsIndexSet:ignoredRevisionsIndexSet:error:
insertPlayActivityEvent:withRevision:returningError:
setCurrentEventsRevision:
setPlayActivityEvents:
insertPlayActivityEvents:withReplyBlock:
_loadEndpointIdentifierInformationIfNeeded
_requiredEndpointIdentifiers
currentRevision
additionalPendingRevisionsIndexSet
firstIndex
removePlayActivityEventsUpToRevision:withCompletionHandler:
removePlayActivityEventsUpToRevision:returningError:
removePlayActivityEventsUptoRevision:withReplyBlock:
setCurrentRevision:
setRevisionVersionToken:
_setEndpointRevisionInformation:forEndpointIdentifier:
setRevision:revisionVersionToken:forEndpointIdentifier:withReplyBlock:
sessionToken
acquirePendingPlayActivityEventsForEndpointIdentifier:storeAccountID:shouldFilterStoreAccountID:withReplyBlock:
_sessionInformationForSessionToken:
endpointIdentifier
removeIndexes:
_copyEndpointRevisionInformationForEndpointIdentifier:
revisionVersionToken
setAdditionalPendingRevisionsIndexSet:
addIndexes:
setRevisionsIndexSet:
getPlayActivityEvents:relevantRevisionsIndexSet:withStartRevision:endRevision:storeAccountID:additionalRevisionsIndexSet:ignoredRevisionsIndexSet:error:
lastIndex
setEndpointIdentifier:
setSessionToken:
getRevisionInformationWithCompletionHandler:
_setupNotifyTokenIfNeeded
revisionsIndexSetForPlayActivityEvents:
revisionsIndexSetForPlayActivityEventPersistentIDs:
acquirePendingPlayActivityEventsForEndpointIdentifier:withStoreAccountID:completionHandler:
acquirePendingPlayActivityEventsForEndpointIdentifier:withCompletionHandler:
completePendingPlayActivityEvents:forSessionToken:withResult:completionHandler:
completePendingPlayActivityEventPersistentIDs:forSessionToken:withResult:completionHandler:
flushPendingPlayActivityEventsForEndpointIdentifier:withCompletionHandler:
getHasPendingPlayEventsForEndpointIdentifier:withCompletionHandler:
getPlayActivityEventsFromRevision:toRevision:withCompletionHandler:
recordPlayActivityEvents:withCompletionHandler:
removeFlushedPlayActivityEventsWithCompletionHandler:
setCurrentRevision:revisionVersionToken:forEndpointIdentifier:withCompletionHandler:
writingStyle
_debugLogOperationQueue
_endpointIdentifierToEndpointRevisionInformation
_endpointRevisionInformationDidChangeNotifyToken
_hasAttemptedTableCreation
_hasLoadedEndpointRevisionInformation
_hasSetupEndpointRevisionInformationDidChangeNotifyToken
_hasValidEndpointRevisionInformationDidChangeNotifyToken
_pendingFlushingSessions
_writingStyle
TQ,R,N,V_writingStyle
isEqualToIndexSet:
_additionalPendingRevisionsIndexSet
_currentRevision
_revisionVersionToken
T@"NSIndexSet",C,N,V_additionalPendingRevisionsIndexSet
TQ,N,V_currentRevision
T@"NSString",C,N,V_revisionVersionToken
_endpointIdentifier
_revisionsIndexSet
_sessionToken
T@"NSString",C,N,V_endpointIdentifier
T@"NSIndexSet",&,N,V_revisionsIndexSet
TQ,N,V_sessionToken
initWithRequestContext:notificationType:
_notificationType
componentsWithURL:resolvingAgainstBaseURL:
setQuery:
ic_queryParametersDictionary
ic_queryParametersDictionaryFromString:
fileSystemRepresentation
supportedSizes
hasMaxSupportedSize
maxSupportedSize
setSupportedSizes:
setHasMaxSupportedSize:
setMaxSupportedSize:
_hasMaxSupportedSize
_supportedSizes
_maxSupportedSize
Tq,N,V_type
T@"NSArray",C,N,V_supportedSizes
TB,N,V_hasMaxSupportedSize
T{CGSize=dd},N,V_maxSupportedSize
_sortResponseArray
_sortSupportedSizesArray
initWithArtworkResponseArray:
initWithArtworkURL:
sizeInfo
responseArray
decodePropertyListForKey:
_hasOriginalSize
originalSize
artworkURLWithSize:cropStyle:format:
artworkURLWithSize:cropStyle:format:preferP3ColorSpace:
sortedResponseArray
rangeOfString:options:
replaceCharactersInRange:withString:
insertString:atIndex:
colorFromStringRepresentation:
msv_compactMap:
sortedArrayUsingComparator:
floatValue
valueWithBytes:objCType:
initWithArtworkResponseValue:
copyColorWithKind:
imageTraits
textGradient
setSortedResponseArray:
sortedSupportedSizesArray
setSortedSupportedSizesArray:
_sizeInfo
_artworkURL
_sortedResponseArray
_sortedSupportedSizesArray
_responseArray
T@"NSArray",C,N,V_sortedResponseArray
T@"NSArray",C,N,V_sortedSupportedSizesArray
T@"NSURL",R,C,N,V_artworkURL
T@"NSArray",R,C,N,V_responseArray
T@"NSDictionary",R,C,N,V_responseDictionary
T@"ICStoreArtworkSizeInfo",R,N,V_sizeInfo
T{CGSize=dd},R,N
T@"NSArray",R,N
_contributingParticipantId
_container
_mediaInfo
_sectionType
_isExplicit
initWithSharedListeningSessionIdentifier:identity:
initWithSuiteName:
connectionController
inviteURL
isStarted
setStarting:
clientSpecifiedIdentity
externalSharedListeningConnectionWithSessionIdentifier:identity:bundleID:
setConnectionController:
sharedListeningConnectionWithSessionIdentifier:identity:bundleID:
setStarted:
setForcedReconnectReason:
setDeferredReconnectReason:
didStopLiveLink:
delegateQueue
forcedReconnectReason
setCurrentRetryCount:
sendMessage:completion:
externalIdentifier
serverID
itemForIdentifier:
liveLink:didReceiveDirectCurrentItemChanged:fromParticipant:
liveLink:didReceiveDirectCurrentItemChanged:
liveLink:didReceiveEvent:
_storeTraceID:completion:
sendMessage:
msv_map:
initWithItemIdentifiers:containerKind:containerIdentifier:containerMediaIdentifier:
queueEventWithContentAdded:
_participantForAction:
eventWithQueueEvent:participant:
_updateQueueWithReason:completion:
participants
initWithItemIdentifier:
queueEventWithContentReordered:
_handleUpdatedParticipantQuery:
_emitSessionEventIfNeededForAction:disconnectedParticipant:
_updateParticipantsWithReason:completion:
initWithItemIdentifiers:containerKind:containerIdentifier:containerMediaIdentifier:startItemIdentifier:
queueEventWithContentPlayedNow:
_handleUpdatedQueue:playbackControlSettings:serverQueueContext:
initWithLocalizedTitle:localizedMessage:
queueEventWithContentUpdatedMessage:
initWithReaction:reactionIdentifier:itemIdentifier:
eventWithReactionEvent:participant:
queueEventWithContentRemoved:
initWithStartItemIdentifier:
queueEventWithContentReplaced:
initWithLocalizedMessage:
eventWithCustomEvent:participant:
eventWithSessionEvent:participant:
_processPendingActions
_didReceivePluginErrorMessage:
setServerID:
setExternalIdentifier:
_initWithBlock:
setWithArray:
liveLink:didUpdateParticipants:
initWithProtobuf:serverQueueContext:liveLink:playbackControlSettings:
serverRevision
isAutoPlayEnabled
isAutoPlayAvailable
liveLink:didUpdateQueue:
_participantForParticipantID:
initWithDeallocHandler:
disarm
_didReceiveAddItemsAction:completion:
_didReceiveMoveItemAction:completion:
_didReceiveRemoveItemAction:completion:
_didReceivePlaybackSyncAction:completion:
_didReceiveCurrentItemChangeAction:completion:
_didReceiveReactionAction:completion:
_didReceiveParticipantChangeAction:completion:
_didReceiveServerNoticeAction:completion:
_didReceiveReplaceQueueItemsAction:completion:
_didReceivePlayNowQueueItemsAction:completion:
_didReceiveCurrentItemTransitionAction:completion:
_didReceiveQueueSyncAction:completion:
liveLink:didEncounterError:willRetry:
currentRetryCount
playbackCoordinatorMedium
setReceivedDisconnectionNotice:
deferredReconnectReason
reconnectWithReason:options:
didStartLiveLink:
liveLinkDidReconnect:
_performClientInfoExchangeAndInitializeQueue
_handlePotentiallyRecoverableError:
_handleReceivedMessage:
maxRetries
maxRetryWaitPeriod
linkWithIdentity:
linkWithSessionIdentifier:identity:
connectionControllerConnectionDidStart:
connectionController:connectionDidEndWithError:
connectionController:didEncounterFatalError:
connectionController:connectionDidReceiveMessage:
invitationURL
beginSynchronizedPlaybackWithAVPlaybackCoordinator:
beginSynchronizedPlaybackWithAVCFPlaybackCoordinator:
endSynchronizedPlayback
broadcastDirectCurrentItemChangedToItemIdentifier:
updateWithIdentity:
expectingToJoinWithStartItem:asInitiator:
queue
_updatePlaybackControlSettingsWithReason:completion:
sessionKey
pendingRequests
setPendingRequests:
pendingActions
setPendingActions:
processingAction
setProcessingAction:
setPlaybackCoordinatorMedium:
localParticipantServerID
isStarting
receivedDisconnectionNotice
setMaxRetries:
setMaxRetryWaitPeriod:
expectingToJoinStartItemIdentifier
setExpectingToJoinStartItemIdentifier:
expectingToJoinAsInitiator
setExpectingToJoinAsInitiator:
_processingAction
_starting
_started
_receivedDisconnectionNotice
_expectingToJoinAsInitiator
_participants
_sessionKey
_pendingActions
_playbackCoordinatorMedium
_delegateQueue
_connectionController
_clientSpecifiedIdentity
_localParticipantServerID
_forcedReconnectReason
_deferredReconnectReason
_currentRetryCount
_maxRetries
_maxRetryWaitPeriod
_expectingToJoinStartItemIdentifier
T{os_unfair_lock_s=I},R,N,V_lock
T@"NSMutableDictionary",&,N,V_pendingRequests
T@"NSMutableArray",&,N,V_pendingActions
TB,N,V_processingAction
T@"ICLiveLinkPlaybackCoordinatorMedium",&,N,V_playbackCoordinatorMedium
T@"NSObject<OS_dispatch_queue>",R,N,V_delegateQueue
T@"NSString",C,N,V_identifier
T@"ICSharedListeningConnectionController",&,N,V_connectionController
T@"ICLiveLinkIdentity",R,C,N,V_clientSpecifiedIdentity
Tq,R,N,V_localParticipantServerID
starting
TB,N,GisStarting,V_starting
started
TB,N,GisStarted,V_started
T@"NSString",C,N,V_forcedReconnectReason
T@"NSString",C,N,V_deferredReconnectReason
TB,N,V_receivedDisconnectionNotice
Tq,N,V_currentRetryCount
Tq,N,V_maxRetries
Tq,N,V_maxRetryWaitPeriod
T@"NSString",C,N,V_expectingToJoinStartItemIdentifier
TB,N,V_expectingToJoinAsInitiator
T@"<ICLiveLinkDelegate>",W,N,V_delegate
T@"NSURL",R,N
T@"NSString",R,N,V_sessionKey
T@"ICLiveLinkIdentity",R,C,N
T@"NSArray",R,N,V_participants
T@"ICSharedListeningQueue",R,C,N,V_queue
_initWithKind:mediaIdentifier:featureName:
_initWithKind:seedItem:featureName:
groupWithFeatureName:
albumContainerWithMediaIdentifier:featureName:
playlistContainerWithMediaIdentifier:featureName:
radioContainerWithMediaIdentifier:featureName:
radioContainerWithSeedItem:featureName:
autoPlayContainerWithMediaIdentifier:featureName:
initWithProtobuf:
mediaIdentifier
seedItem
_kind
_mediaIdentifier
_featureName
_seedItem
_stationHash
Tq,R,N,V_kind
T@"NSString",R,C,N,V_mediaIdentifier
T@"NSString",R,C,N,V_featureName
T@"ICSharedListeningItem",R,C,N,V_seedItem
T@"NSString",R,C,N,V_stationHash
_playParamsForPlaybackItemProto:
itemWithMediaIdentifier:
initWithProtobuf:identity:
isAutoPlayItem
contributorIdentity
playParams
_isAutoPlayItem
_contributorIdentity
_playParams
TB,R,N,V_isAutoPlayItem
T@"ICLiveLinkIdentity",R,C,N,V_contributorIdentity
T@"NSDictionary",R,C,N,V_playParams
specifiedPositionAfterItemIdentifier:
playNextPositionWithAfterItemIdentifierHint:
playLastPositionWithAfterItemIdentifierHint:
afterItemIdentifier
_afterItemIdentifier
T@"NSString",R,C,N,V_afterItemIdentifier
_tracklistForQueueProto:
allItems
allSections
playbackControlSettings
msv_errorWithDomain:code:userInfo:debugDescription:
_itemForIdentifier:outIndexPath:
appendSection:
appendItem:
msv_indexPathForItem:inSection:
replaceTracklist:preferredStartIndexPath:completion:
_detectTrackGenerationSourceForTracklist:detectedCompletion:
totalItemCount
msv_section
numberOfSections
msv_item
numberOfItemsInSection:
itemAtIndexPath:
_playbackItemProtosForTracklist:withPreferredStartItemIndexPath:
insertTracklist:afterItemIdentifier:completion:
insertTracklist:atPosition:completion:
insertTracklist:atPosition:completionEx:
_afterItemPositionForItemIdentifier:
insertTracklist:afterItemIdentifier:playNowWithPreferredStartIndexPath:completionEx:
globalIndexForIndexPath:
enumerateItemsUsingBlock:
enumerateItemsInSectionAtIndex:usingBlock:
enumerateSectionsUsingBlock:
reverseEnumerateSectionsUsingBlock:
items
containerForIdentifier:
hasActiveRadioStation
setAutoPlayEnabled:completion:
setMediaIdentifiers:preferredStartIndex:
addMediaIdentifiers:afterItemIdentifier:
insertTracklist:afterItemIdentifier:playNowWithPreferredStartIndexPath:completion:
removeItemIdentifier:
removeItemIdentifiers:
removeAllItemIdentifiersAfterItemIdentifier:
moveItemIdentifier:beforeItemIdentifier:
moveItemIdentifier:afterItemIdentifier:
getExpectedCurrentItemWithCompletion:
explicitContentState
tracklist
setLiveLink:
serverQueueContext
_explicitContentState
_tracklist
_serverRevision
_serverQueueContext
T@"ICLiveLink",W,N,V_liveLink
Tq,R,N,V_serverRevision
T@"NSString",R,C,N,V_serverQueueContext
T@"_ICLLPlaybackControlSettings",R,N,V_playbackControlSettings
T@"NSString",R,C,N,V_identifier
Tq,R,N,V_explicitContentState
T@"MSVSectionedCollection",R,C,N,V_tracklist
_updateRenewalTimer
addOperationWithBlock:
_newSuzeLeaseRequestWithType:clientData:
clientData
_updateRenewalTimerWithResponse:
initWithRequestContext:requestType:leaseID:mediaType:clientData:
suzeLeaseSession:leaseRenewalDidFailWithError:
_renewLeaseTimerAction
leaseExpirationDate
beginAutomaticallyRefreshingLease
endAutomaticallyRefreshingLease
startLeaseSessionWithCompletionHandler:
stopLeaseSessionWithCompletionHandler:
_automaticRefreshCount
_isRunning
_leaseExpirationDate
_leaseRenewTimer
_leaseSyncSession
T@"ICSuzeLeaseSessionConfiguration",R,C,N,V_configuration
T@"<ICSuzeLeaseSessionDelegate>",W,N,V_delegate
getPropertiesForActiveICloudAccountReturningError:
_executeWithActiveICloudAccountProperties:
dictionaryWithDictionary:
initWithRequestContext:redownloadParametersString:
isPlaybackRequest
setPlaybackRequest:
isStreamingRental
setStreamingRental:
usePrioritizedURLSession
setUsePrioritizedURLSession:
urlSession
setUrlSession:
setRedownloadParameters:
requestURLBagKey
includeKeybagSyncData
includeSubscriptionKeybagSyncData
_redownloadResponse
_playbackRequest
_streamingRental
_usePrioritizedURLSession
_includeKeybagSyncData
_includeSubscriptionKeybagSyncData
_redownloadParameters
_requestURLBagKey
T@"NSDictionary",C,N,V_redownloadParameters
T@"NSString",C,N,V_requestURLBagKey
TB,N,V_includeKeybagSyncData
TB,N,V_includeSubscriptionKeybagSyncData
playbackRequest
TB,N,GisPlaybackRequest,V_playbackRequest
streamingRental
TB,N,GisStreamingRental,V_streamingRental
TB,N,V_usePrioritizedURLSession
T@"ICURLSession",&,N,V_urlSession
_initCommon
initWithIdentityStoreStyle:
lock:
identityStoreStyle
uniqueIdentifier
activeAccountHistory
setActiveAccountHistory:
activeLockerAccountHistory
setActiveLockerAccountHistory:
backend
setBackend:
delegateAccountStoreOptions
setDelegateAccountStoreOptions:
_identityStoreStyle
_uniqueIdentifier
_activeAccountHistory
_activeLockerAccountHistory
_backend
_delegateAccountStoreOptions
Tq,R,N,V_identityStoreStyle
Tq,R,N,V_uniqueIdentifier
T@"ICValueHistory",C,N,V_activeAccountHistory
T@"ICValueHistory",C,N,V_activeLockerAccountHistory
T@"<ICUserIdentityStoreBackend>",C,N,V_backend
T@"ICDelegateAccountStoreOptions",C,N,V_delegateAccountStoreOptions
addEventParameters:
setApplicationMessageIdentifier:
eventParametersCount
clearEventParameters
eventParametersAtIndex:
eventParametersType
hasApplicationMessageIdentifier
applicationMessageIdentifier
eventParameters
setEventParameters:
_applicationMessageIdentifier
_eventParameters
T@"NSString",&,N,V_applicationMessageIdentifier
T@"NSMutableArray",&,N,V_eventParameters
URLBag
setURLBag:
delegatedDSID
setDelegatedDSID:
delegatedStorefrontIdentifier
setDelegatedStorefrontIdentifier:
delegatedURLBag
setDelegatedURLBag:
_URLBag
_delegatedDSID
_delegatedStorefrontIdentifier
_delegatedURLBag
T@"NSString",C,N,V_iCloudPersonID
T@"ICURLBag",&,N,V_URLBag
T@"NSNumber",C,N,V_DSID
T@"NSString",C,N,V_storefrontIdentifier
T@"NSNumber",C,N,V_delegatedDSID
T@"NSString",C,N,V_delegatedStorefrontIdentifier
T@"ICDelegateToken",C,N,V_delegateToken
T@"ICURLBag",&,N,V_delegatedURLBag
dpInfoData
pinfData
sinfData
sinf2Data
purchaseBundleSinfDictionary
_responseSinfDictionary
T@"NSDictionary",R,C,N,V_responseSinfDictionary
setUserNotificationExtensionId:
bagForProfile:profileVersion:
initWithConfiguration:bag:
_centerForBundleIdentifier:
_musicCenter
badgeNumber
unsignedIntegerValue
numberWithUnsignedLong:
setBadgeNumber:withCompletionHandler:
_amsPushHandler
shouldHandleNotification:
handleNotification:
removePendingNotificationRequestsWithIdentifiers:
removeDeliveredNotificationsWithIdentifiers:
performRequestOnOperationQueue:withResponseHandler:
_executeByPerformingStoreRequestWithContext:qualityOfService:
setResponse:
getCachedUserTokenForDeveloperToken:requestContext:completion:
mediaLibraryAccessApplicationIdentifiersWithTCCAcceptanceDates
setCancelOnHTTPErrors:
setCachedUserToken:forDeveloperToken:requestContext:completion:
initWithDeveloperToken:clientInfo:options:
_playerInfoContextRequestTokens
deviceModelOverride
hardwarePlatformOverride
deviceClassOverride
_gestaltDeviceClass
macAddressData
dataWithBytes:length:
productVersionOverride
productPlatformOverride
fairPlayDeviceTypeOverride
unsignedIntValue
nanoPairedDeviceStatusMonitor:didChangeClientSyncState:
T@"ICDeviceInfo",R,N
rawDeviceModel
deviceFairPlayGUIDData
macAddress
mainScreenSize
hasTelephonyCapability
hasWiFiCapability
hasWAPICapability
has720pCapability
has1080pCapability
screenClass
isROSDevice
deviceClassName
isSeedBuild
supportsSideLoadedMediaContent
supportsMusicStreaming
_hasRegisteredForNameNotifications
_nameNotificationToken
_productVersion
_deviceModel
_rawDeviceModel
_hardwarePlatform
_buildVersion
_deviceClass
_deviceClassName
_fairPlayDeviceType
_currentLocale
_deviceGUIDData
_name
_serialNumber
_macAddressData
_mainScreenSize
_hasCellularDataCapabilityNumber
_hasTelephonyCapabilityNumber
_hasWiFiCapabilityValue
_hasWAPICapabilityValue
_has720pCapabilityValue
_has1080pCapabilityValue
_isPhoneNumberAccessRestrictedValue
_screenClassValue
_isInternalBuildNumber
_supportsMusicStreamingValue
_systemReleaseType
_deviceNameUpdateQueue
phoneNumberAccessRestricted
TB,R,N,GisPhoneNumberAccessRestricted
Ti,R,N
internalBuild
TB,R,N,GisInternalBuild
seedBuild
TB,R,N,GisSeedBuild
TI,R,N
stringByReplacingOccurrencesOfString:withString:
outputStreamToMemory
initWithStream:
propertyForKey:
startContainerWithCode:
endContainerWithCode:
writeUInt8:withCode:
unsignedCharValue
charValue
writeSInt8:withCode:
unsignedShortValue
writeUInt16:withCode:
shortValue
writeSInt16:withCode:
writeUInt32:withCode:
writeSInt32:withCode:
writeUInt64:withCode:
writeSInt64:withCode:
writeString:withCode:
writeData:withCode:
_seed
_stationId
storefrontHeaderSuffix
initWithObjectsAndKeys:
localStoreAccountProperties
initWithPlayActivityController:
playActivityController
_playActivityController
T@"ICPlayActivityController",R,N,V_playActivityController
setTriggerValue:
setBundleIdentifier:
dataType
setDataType:
setHasDataType:
hasDataType
dataTypeAsString:
StringAsDataType:
comparisonType
setComparisonType:
setHasComparisonType:
hasComparisonType
comparisonTypeAsString:
StringAsComparisonType:
hasTriggerValue
triggerConditionType
setTriggerConditionType:
setHasTriggerConditionType:
hasTriggerConditionType
triggerConditionTypeAsString:
StringAsTriggerConditionType:
setKind:
setHasKind:
hasKind
kindAsString:
StringAsKind:
triggerValue
_comparisonType
_dataType
_triggerConditionType
_triggerValue
Ti,N,V_dataType
Ti,N,V_comparisonType
T@"NSString",&,N,V_triggerValue
Ti,N,V_triggerConditionType
Ti,N,V_kind
T@"NSString",&,N,V_bundleIdentifier
setWidth:
setHasWidth:
hasWidth
setHeight:
setHasHeight:
hasHeight
width
height
_height
_uRL
_width
T@"NSString",&,N,V_uRL
TI,N,V_width
TI,N,V_height
setMetadataValue:forKey:
metadataValueForKey:
allMetadataValues
_metadataValues
initWithIdentifier:
initWithDictionaryRepresentation:
keyData
setKeyData:
renewalDate
setRenewalDate:
failureCount
setFailureCount:
_keyData
_renewalDate
_failureCount
T@"NSData",C,N,V_keyData
T@"NSDate",C,N,V_renewalDate
TQ,N,V_failureCount
_keyEntryForIdentifier:error:
_saveKeyEntry:
_filePathForKeyIdentifier:
enumeratorAtPath:
initWithContentsOfURL:error:
fileExistsAtPath:
writeToURL:error:
containsKeyForIdentifier:error:
loadKeyForIdentifier:renewalDate:error:
saveKey:forIdentifier:withRenewalDate:
incrementFailureCountForKeyWithIdentifier:
removeKeyForIdentifier:
removeAllKeys
enumerateKeysUsingBlock:
_filePath
_keyEntries
_finishWithSyncState:error:
urlForBagRadioKey:
initWithBagRadioDictionary:
getTracksDPInfoKBSyncCount
maxSupportedProtocolVersion
isContinueListeningAvailable
continueListeningMaxQueueSizeInRequest
continueListeningMaxUpcomingTracksSizeToMaintain
continueListeningLoadStationThreshold
shouldIncludeHTTPHeaderField:forRequestURL:
_bagRadioDictionary
continueListeningAvailable
TB,R,N,GisContinueListeningAvailable
setStatus:
verificationExpirationDate
status
runAgeVerification
isExplicitContentAllowed
_status
_verificationExpirationDate
Tq,N,V_status
explicitContentAllowed
TB,R,N,GisExplicitContentAllowed
T@"NSDate",R,N,V_verificationExpirationDate
setCacheSizeWithNumberOfKilobytes:
setCacheSize:
cacheSize
setCacheSizeWithNumberOfDatabasePages:
applyToDatabase:
_readOnly
_cacheSize
Tq,N,V_cacheSize
TB,N,GisReadOnly,V_readOnly
contentDictionary
_storePlatformMetadataDictionaryFromRadioMetadataDictionary:
allStorePlatformMetadata
storePlatformMetadataForStoreAdamID:
playActivityEvents
outputStreamToFileAtPath:append:
open
writePropertyList:toStream:format:options:error:
write:maxLength:
main
_playActivityEvents
T@"NSArray",C,N,V_playActivityEvents
initWithURLRequest:requestContext:resumeData:
_responseHandlerClass
setProgress:
standardUserDefaults
ICURLRequest:didChangeState:
_setMaxRetryCount:forReason:
_updateSignpostsForNewState:
_ensureValidRetryReason:
_defaultMaxRetryCountForReason:
msv_analyticSignature
T@"NSProgress",R
cancelOnHTTPErrors
waitSemaphore
setWaitSemaphore:
avDownloadOptions
setAVDownloadOptions:
avURLAsset
setAVURLAsset:
handlingType
retryReason
_maxRetryCounts
_retryCounts
_observerQueue
_signpostIdentifier
_prioritize
_cancelOnHTTPErrors
_shouldReportLoadURLMetrics
_progress
_requestState
_urlRequest
_task
_waitSemaphore
_currentURLRequest
_urlResponse
_responseData
_responseDataURL
_avDownloadOptions
_avURLAsset
_handlingType
_retryReason
_startTime
_lastUpdateTime
_lastProgressUpdateTime
_performanceMetrics
_completionHandler
T@"NSURLRequest",R,N,V_urlRequest
T@"NSURLSessionTask",&,N,V_task
T@"NSObject<OS_dispatch_semaphore>",&,N,V_waitSemaphore
T@"NSURLRequest",&,N,V_currentURLRequest
T@"NSURLResponse",&,N,V_urlResponse
T@"NSMutableData",&,N,V_responseData
T@"NSURL",&,N,V_responseDataURL
T@"NSError",&,N,V_error
T@"NSDictionary",&,N,SsetAVDownloadOptions:,V_avDownloadOptions
T@"AVURLAsset",&,N,SsetAVURLAsset:,V_avURLAsset
Tq,N,V_handlingType
T@"NSString",&,N,V_retryReason
Td,N,V_startTime
Td,N,V_lastUpdateTime
Td,N,V_lastProgressUpdateTime
T@"ICURLPerformanceMetrics",&,N,V_performanceMetrics
T@?,C,N,V_completionHandler
T@"NSProgress",&,N,V_progress
TB,N,V_prioritize
TB,N,V_cancelOnHTTPErrors
TQ,N
TQ,N,V_redirectCount
Tq,N,V_requestState
T@"NSData",R,C,N,V_resumeData
T@"ICURLResponseHandler",&,N,V_responseHandler
TB,N,V_shouldReportLoadURLMetrics
defaultStore
accountsWithAccountType:options:completion:
ic_storeAccountTypeWithCompletion:
accountTypeWithAccountTypeIdentifier:error:
accountsWithAccountType:options:error:
ic_allStoreAccountsWithCompletion:
ic_allStoreAccountsWithError:
saveAccount:withDataclassActions:doVerify:completion:
aa_primaryAppleAccountWithCompletion:
aa_appleAccountsWithError:
isEqualToNumber:
accountTypeWithIdentifier:completion:
ic_activeLockerAccountWithCompletion:
ic_primaryAppleAccountWithCompletion:
ic_setActiveStoreAccount:completion:
ic_setActiveLockerAccount:completion:
ic_storeAccountForStoreAccountID:completion:
ic_activeLockerAccountWithError:
ic_primaryAppleAccountWithError:
ic_storeAccountForHomeUserIdentifier:completion:
ic_storeAccountForHomeUserIdentifier:error:
ic_localStoreAccountWithCompletion:
ic_allStoreAccounts
ic_activeStoreAccount
ic_activeLockerAccount
ic_primaryAppleAccount
ic_setActiveStoreAccount:
ic_storeAccountForStoreAccountID:
_ic_storeAccountType
T@"ACAccount",&,N,Sic_setActiveStoreAccount:
T@"ACAccount",&,N,Sic_setActiveLockerAccount:
T@"ACAccount",R,N
T@"ACAccountStore",R,N
_playerDelegateInfoTokens
setTriggerName:
hasTriggerName
triggerName
_triggerName
T@"NSString",&,N,V_triggerName
addCloudItemID:idType:
addGlobalPlaylistID:
insertCloudItemID:idType:atIndex:
enumerateCloudItemIDsUsingBlock:
_itemIDs
_idTypes
_propertiesToSaveForProperties:
defaultActiveAccountDSID
setDefaultActiveAccountDSID:
defaultActiveLockerAccountDSID
setDefaultActiveLockerAccountDSID:
defaultStorefrontIdentifier
setDefaultStorefrontIdentifier:
T@"NSNumber",C,N
_activeLockerAccountDSID
_localStoreAccountProperties
initWithRequestContext:withRequestMethod:
initWithRequestContext:withRequestMethod:andBodyDictionary:
_requestMethod
_bodyDictionary
addPageDetails:
addActionDetails:
setPageId:
pageDetailsCount
clearPageDetails
pageDetailsAtIndex:
setTargetId:
setActionURL:
actionDetailsCount
clearActionDetails
actionDetailsAtIndex:
setEventType:
setPageUrl:
setImpression:
pageDetailsType
actionDetailsType
hasPageId
pageType
setPageType:
setHasPageType:
hasPageType
pageTypeAsString:
StringAsPageType:
hasTargetId
setTargetType:
setHasTargetType:
hasTargetType
targetTypeAsString:
StringAsTargetType:
setActionType:
setHasActionType:
hasActionType
actionTypeAsString:
StringAsActionType:
hasActionURL
hasEventType
hasPageUrl
hasImpression
pageId
pageDetails
setPageDetails:
targetId
actionURL
actionDetails
setActionDetails:
pageUrl
impression
_actionDetails
_actionURL
_eventType
_impression
_pageDetails
_pageId
_pageType
_pageUrl
_targetId
_targetType
T@"NSString",&,N,V_pageId
Ti,N,V_pageType
T@"NSMutableArray",&,N,V_pageDetails
T@"NSString",&,N,V_targetId
Ti,N,V_targetType
Ti,N,V_actionType
T@"NSString",&,N,V_actionURL
T@"NSMutableArray",&,N,V_actionDetails
T@"NSString",&,N,V_eventType
T@"NSString",&,N,V_pageUrl
T@"ICIAMImpressionNode",&,N,V_impression
initWithItemID:title:storeFrontID:mediaKind:accountID:matchStatus:flavor:
_adamID
_matchStatus
_title
_storeFrontID
_flavor
T@"NSNumber",R,C,N,V_adamID
T@"NSNumber",R,C,N,V_accountID
T@"NSNumber",R,C,N,V_matchStatus
T@"NSString",R,C,N,V_title
T@"NSString",R,C,N,V_storeFrontID
T@"NSString",R,C,N,V_mediaKind
T@"NSString",R,C,N,V_flavor
initWithRequest:responseHandler:
performRequest:withResponseHandler:
_activeSessions
initWithUserIdentityDelegationAccountUUIDs:requestContext:timeoutInterval:
Td,R,N,V_timeoutInterval
albumName
setAlbumName:
_albumName
T@"NSString",C,N,V_albumName
isActiveWatchKitUser
activeWatchKitUser
setActiveWatchKitUser:
_activeWatchKitUser
TB,N,GisActiveWatchKitUser,V_activeWatchKitUser
initWithRadioStationProviderResourceDictionary:
_url
T@"NSURL",R,C,N,V_url
T@"NSString",R,C,N,V_bundleIdentifier
ageVerificationStateNotRequiredForUserIdentity:withTreatment:
_initWithUserIdentity:status:treatment:verificationURL:error:
lastKnownUserAgeVerificationState
_stateFromDictionaryRepresentation:DSID:
ageVerifier
_dictionaryRepresentationWithDSID:
setLastKnownUserAgeVerificationState:
treatment
verificationURL
isDynamic
_treatment
_verificationURL
_ageVerifier
T@"ICAgeVerifier",R,C,N,V_ageVerifier
dynamic
TB,R,N,GisDynamic
Tq,R,N,V_treatment
Tq,R,N,V_status
T@"NSURL",R,C,N,V_verificationURL
T@"ICUserIdentity",R,N,V_userIdentity
providerName
IMEI
_sendEnrichmentRequestWithURL:preflightResponse:completionHandler:
_sendSilentSMSRequestWithMessage:number:preflightResponse:completionHandler:
_sendPreflightRequestWithCompletionHandler:
_finishEnrichmentWithBodyDictionary:completionHandler:
_newDefaultRequestBodyDictionary
set_CTDataConnectionServiceType:
initWithURL:statusCode:HTTPVersion:headerFields:
_newDefaultRequestBodyDictionaryWithResponseCode:error:
sendSMSWithText:toPhoneNumber:error:
isDeepLink
_mobileSubscriberCountryCode
_mobileSubscriberNetworkCode
_IMEI
_deepLink
TB,N,GisDeepLink,V_deepLink
setExpirationDate:
setDeviceGUID:
T@"NSString",C,N,V_token
T@"NSDate",C,N,V_expirationDate
T@"NSString",C,N,V_deviceGUID
initWithValue:timestamp:
timestamp
addValue:timestamp:
enumerateValuesUsingBlock:
enumerateObjectsWithOptions:usingBlock:
addValuesFromHistory:
firstValueAfterOrEqualToTimestamp:
firstValueBeforeTimestamp:
firstValueBeforeOrEqualToTimestamp:
lastValue
lastValueAndTimestamp:
removeAllValues
removeValuesBeforeTimestamp:
initWithUnsignedLongLong:
_timestamp
_value
TQ,R,N,V_timestamp
T@,R,N,V_value
trigger
setTrigger:
setHasTrigger:
hasTrigger
triggerAsString:
StringAsTrigger:
setDate:
setHasDate:
hasDate
setInterval:
setHasInterval:
hasInterval
hasNotification
interval
_date
_interval
_notification
_trigger
Ti,N,V_trigger
Td,N,V_date
Td,N,V_interval
T@"NSString",&,N,V_notification
initWithVersion:contextID:contentInfo:returningError:
getPlayerDelegateInfoDataUsingPlayerDelegateInfoResponseData:returningData:error:
getStreamerInfoContextDataUsingPlayerInfoContextData:returningData:error:
playerInfoContextRequestData
_playerInfoContextRequestData
T@"NSData",R,C,N,V_playerInfoContextRequestData
ICStoreRadioStreamFlavorWithString:
ICStoreRadioStreamProtocolWithString:
streamProtocol
streamURL
isiTunesStoreStream
iTunesStoreStream
TB,R,N,GisiTunesStoreStream
dsid
homeUserIDs
music
digest
shortDebugName
setShortDebugName:
setIsActive:
setDsid:
setHomeUserIDs:
ageVerificationRequired
setAgeVerificationRequired:
setMusic:
setTv:
T@"NSArray",C,N
T@"ICMusicUserState",&,N
T@"ICTVUserState",&,N
redactedDescription
_isActive
_ageVerificationRequired
_homeUserIDs
_music
_shortDebugName
T@"NSString",C,N,V_shortDebugName
TB,N,V_isActive
T@"NSNumber",C,N,V_dsid
T@"NSString",C,N,V_alternateDSID
T@"NSArray",C,N,V_homeUserIDs
T@"NSString",C,N,V_firstName
T@"NSString",C,N,V_lastName
T@"NSString",C,N,V_username
TB,N,V_ageVerificationRequired
T@"ICMusicUserState",&,N,V_music
T@"ICTVUserState",&,N,V_tv
allowsHandlingNonAuthenticationDialogs
shouldRecordLastAuthenticationDialogResponseTime
_handleBuyButtonAction:usingRequestContext:withCompletionHandler:
_handleGotoButtonAction:usingRequestContext:withCompletionHandler:
_handleFamilyPermissionButtonAction:usingRequestContext:completion:
handleStoreDialogResponse:usingRequestContext:withDialogTimeout:withCompletionHandler:
_handleDefaultStoreDialogResponse:usingRequestContext:withDialogTimeout:withCompletionHandler:
_handleAuthenticationStoreDialogResponse:usingRequestContext:withDialogTimeout:withCompletionHandler:
setAllowsHandlingNonAuthenticationDialogs:
setShouldRecordLastAuthenticationDialogResponseTime:
action
handleButtonAction:usingRequestContext:withCompletionHandler:
displayUserNotification:withCompletionHandler:
setLastAuthenticationDialogResponseTime:
buyParams
initWithRequestContext:buyParametersString:includeKeybagSyncData:
subtarget
URLString
addRequestWithURL:account:completion:
handleStoreDialogResponse:usingRequestContext:withCompletionHandler:
_allowsHandlingNonAuthenticationDialogs
_shouldRecordLastAuthenticationDialogResponseTime
TB,N,V_allowsHandlingNonAuthenticationDialogs
TB,N,V_shouldRecordLastAuthenticationDialogResponseTime
ic_dataWithFairPlayBytes:length:
ic_dataValueForKey:
playInfoData
T@"NSData",R,N
identityWithIdentifier:
nameComponents
setNameComponents:
imageURL
setImageURL:
T@"NSPersonNameComponents",C,N
T@"NSURL",C,N
Tq,N
T@"NSUUID",C,N
_serverID
_externalIdentifier
_nameComponents
_imageURL
Tq,N,V_serverID
T@"NSUUID",C,N,V_identifier
T@"NSString",C,N,V_externalIdentifier
T@"NSPersonNameComponents",C,N,V_nameComponents
T@"NSURL",C,N,V_imageURL
_participant
_playbackSyncState
_query
setSetupAssistantComplete:
_runAllPendingBlocksOfType:
T@"ICDeviceSetupStatusMonitor",R,N
isSetupAssistantComplete
isDeviceSetupComplete
performBlockAfterBuddySetup:
performBlockAfterDeviceSetup:
_workQueue
_pendingBuddyCompleteBlocks
_pendingSetupCompleteBlocks
_setupAssistantComplete
_watchInitialSyncIsComplete
_setupAssistantFinishedNotifyToken
_setupAssistantLaunchedNotifyToken
setupAssistantComplete
TB,N,GisSetupAssistantComplete
deviceSetupComplete
TB,R,N,GisDeviceSetupComplete
dateByAddingTimeInterval:
serverError
dialog
T@"NSError",R,C,N
T@"ICStoreDialogResponse",R,C,N
authorized
shouldCancelPurchaseBatch
downloadQueueItemCount
jingleAction
_requestDate
_participantQuery
addSyncCommands:
setBundleID:
clearSyncCommands
syncCommandsType
hasBundleID
syncCommands
setSyncCommands:
_bundleID
_syncCommands
T@"NSString",&,N,V_bundleID
T@"NSMutableArray",&,N,V_syncCommands
_autoPlayMode
_repeatPlayMode
_shufflePlayMode
verificationRequest
verificationContext
lastAllowedInteractiveAuthenticationTime
setLastAllowedInteractiveAuthenticationTime:
setAllowServerDialogs:
setAuthenticationType:
setEnableAccountCreation:
setCanMakeAccountActive:
setIgnoreAccountConversion:
initWithAccount:options:bag:
performAuthentication
addFinishBlock:
_reloadForExternalChange
present
authenticateTask:handleDialogRequest:completion:
_invalidate
initWithBool:
startWithTimeout:queue:
initWithBooleanHandler:
initWithObjectHandler:
finishWithBooleanResult:error:
finishWithObjectResult:error:
startWithTimeout:
_booleanHandler
_didFire
_objectHandler
_timeout
_timeoutTimer
defaultProvider
initWithClientInfo:authenticationProvider:
initWithClientInfo:
setDeviceInfo:
setNetworkConstraints:
_networkConstraints
_deviceInfo
_authenticationProvider
T@"ICClientInfo",R,C,N,V_clientInfo
T@"ICDeviceInfo",R,N,V_deviceInfo
T@"ICURLResponseAuthenticationProvider",R,N,V_authenticationProvider
T@"ICNetworkConstraints",R,C,N,V_networkConstraints
initWithData:
messageFromData:
dataFromMessage:
traceIdentifierForMessage:
reportEventURL
serialCheckURL
syncURL
_dictionary
settingsSwitches
itemResponseDictionary
setAccountNotificationsShowInLibraryDictionary:
initWithToggleState:hasBeenToggled:identifier:
sharedStatusController
_getSwitchesDependingOnSubscriptionStatus:withResponse:togglingSwitchesToValue:
createResponseBodyWithSwitches:
wasSuccessful
getSubscriptionStatusForUserIdentity:bypassingCache:withCompletionHandler:
accountNotificationsShowInLibraryDictionary
hasCapability:
setIsToggled:
T@"ICMusicAccountNotificationsSettingsManager",R,N
getAccountNotificationsWithCompletionHandler:
setAccountNotificationsArtistContentFeature:withCompletionHandler:
setCachedAccountNotificationsShowInLibraryEnabled:
cachedAccountNotificationsShowInLibrarySwitch
beforePromoContentTrack
afterPromoContentTrack
initWithResponseDictionary:responseVersion:expirationDate:
trackType
_hlsAssetFromAssetDictionary:
setPlaylistURL:
setITunesStoreStream:
flattenedTracksWithTracks:
hasStartTime
radioStreamAssets
isSkippable
likeState
serverTrackInfo
storePlatformMetadata
parentTrack
_responseVersion
_parentTrack
T@"ICStorePlatformMetadata",R,C,N
skippable
TB,R,N,GisSkippable
T@"ICRadioStationTrack",R,N
T@"ICRadioStationTrack",R,N,V_parentTrack
initWithInputStream:queue:
_streamEncounteredError:
setDidEncounterErrorBlock:
processData:
receievedData:
setDidReadDataBlock:
_streamDidClose
setDidFinishReadingBlock:
initWithOutputStream:queue:
writeData:withCompletion:
_streamDidParseMessage:
getDecryptedDataForEncryptedData:withCompletionHandler:
initWithRole:securitySettings:
prepareEncryptedSessionWithCompletionHandler:
_sendRequest:withResponseHandler:
_sendResponse:forRequest:withCompletionHandler:
createHeader:
getEncryptedDataForData:withCompletionHandler:
_nextRequestUniqueID
_sendMessage:withCompletionHandler:
_finishPendingRequestsWithError:
delegationServiceConnectionDidClose:
delegationServiceConnection:didReceiveRequest:
allObjects
delegationServiceConnection:didEncouterError:
delegationServicePairingSession:sendData:withCompletionHandler:
parser:didParseMessage:
initWithConnectionRole:inputStream:outputStream:securitySettings:
sendRequest:withResponseHandler:
sendResponse:forRequest:withCompletionHandler:
connectionRole
_isPaired
_isStarted
_messageParser
_nextRequestID
_pairingSession
_pendingRequestIDToRequestContext
_streamReader
_streamReaderQueue
_streamWriter
_streamWriterQueue
_connectionRole
T@"<ICDelegationServiceConnectionDelegate>",W,N
Tq,R,N,V_connectionRole
T@"ICDelegationServiceSecuritySettings",R,N,V_securitySettings
T@"ICPBDGSRequest",R,N,V_request
T@?,R,C,N,V_responseHandler
referralWithPlaylistGlobalID:
referralWithAlbumAdamID:
albumAdamID
_playlistGlobalID
_albumAdamID
T@"NSString",R,C,N,V_playlistGlobalID
Tq,R,N,V_albumAdamID
addActionParameters:
setDisplayText:
actionParametersCount
clearActionParameters
actionParametersAtIndex:
setClickEvent:
actionParametersType
hasDisplayText
requiresDelegate
setRequiresDelegate:
setHasRequiresDelegate:
hasRequiresDelegate
hasClickEvent
messageRemovalPolicy
setMessageRemovalPolicy:
setHasMessageRemovalPolicy:
hasMessageRemovalPolicy
messageRemovalPolicyAsString:
StringAsMessageRemovalPolicy:
displayText
actionParameters
setActionParameters:
clickEvent
_actionParameters
_clickEvent
_displayText
_messageRemovalPolicy
_requiresDelegate
T@"NSString",&,N,V_displayText
TB,N,V_requiresDelegate
T@"NSMutableArray",&,N,V_actionParameters
T@"ICIAMMetricEvent",&,N,V_clickEvent
Ti,N,V_messageRemovalPolicy
setKey:
setValue:
_messageIdentifier
_params
shouldPreventLeaseAcquisition
setShouldPreventLeaseAcquisition:
shouldRequireLeaseAcquisition
setShouldRequireLeaseAcquisition:
isTriggeredByLeasePrevention
setTriggeredByLeasePrevention:
_shouldPreventLeaseAcquisition
_shouldRequireLeaseAcquisition
_triggeredByLeasePrevention
TB,N,V_shouldPreventLeaseAcquisition
TB,N,V_shouldRequireLeaseAcquisition
triggeredByLeasePrevention
TB,N,GisTriggeredByLeasePrevention,V_triggeredByLeasePrevention
stringByAppendingFormat:
isContentProtectionEnabled
isDeviceClassCUnlocked
sharedProvider
isTrustedHostForURL:
buildStoreURLRequestWithURLRequest:builderProperties:completionHandler:
performCredentialRequests:withResponseHandler:
_shouldPersonalizeRequest
shouldAppendDeviceGUIDForURL:
isLegacyStoreCacheBusterEnabled
additionalQueryItems
localTimeZone
currentConnectionTypeHeader
cloudMediaLibraryUID
cachePolicy
_stringForCachePolicy:
setHTTPShouldHandleCookies:
getCookiesHeadersForURL:userIdentifier:
getCookiesForURL:userIdentifier:
requestHeaderFieldsWithCookies:
ic_appendHTTPCookies:
shouldAppendMachineDataHeadersForURL:
ic_appendHTTPCookieWithName:value:
appleIDHeadersForRequest:
_getSignatureDataForRequest:urlBag:completionHandler:
telephonyOperatorName
URLQueryAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
mescalConfigurationForRequest:
privacyAcknowledgementRequiredForBundleIdentifier:
_shouldPersonalizeRequestForClientInfo:personalizationStyle:
additionalHTTPCookies
anisetteVersion
shouldUseMescalSigning
shouldParseBodyData
shouldRequireURLBag
machineDataSyncState
setMachineDataSyncState:
setAdditionalHTTPCookies:
JSSignConfiguration
_shouldUseMescalSigning
_shouldParseBodyData
_shouldRequireURLBag
_anisetteVersion
_machineDataSyncState
_additionalHTTPCookies
_additionalQueryItems
_JSSignConfiguration
T@"ICStoreRequestContext",R,C,N
Tq,N,V_anisetteVersion
TB,N,V_shouldUseMescalSigning
TB,N,V_shouldParseBodyData
TB,N,V_shouldRequireURLBag
T@"NSString",C,N,V_machineDataSyncState
T@"NSDictionary",C,N,V_additionalHTTPCookies
T@"NSArray",C,N,V_additionalQueryItems
T@"ICJSSignConfiguration",C,N,V_JSSignConfiguration
_onceWithCompletionHandler:
_getXPCConnectionWithCompletion:
externalChangeHandler
_accountStoreOptions
_externalChangeHandler
_hasReceivedConnectionInvalidation
T@?,C,N,V_externalChangeHandler
setReason:
setCarrierBundleProvisioningStyle:
requestIdentifier
_allowsFallbackToExpiredStatus
_allowsFallbackToStatusNeedingReload
_shouldReturnLastKnownStatusOnly
_shouldBypassEnforcementOfPrivacyAcknowledgement
_reason
_carrierBundleProvisioningStyle
_requestIdentifier
TB,N,V_shouldBypassEnforcementOfPrivacyAcknowledgement
Tq,N,V_reason
TB,N,V_allowsFallbackToExpiredStatus
TB,N,V_allowsFallbackToStatusNeedingReload
TB,N,V_shouldReturnLastKnownStatusOnly
Tq,N,V_carrierBundleProvisioningStyle
T@"NSUUID",R,N,V_requestIdentifier
_migrateDatabaseFiles
_defaultDatabasePath
_setupDatabase:
_removeDatabaseReturningError:
contentsOfDirectoryAtPath:error:
_valueForDatabasePropertyKey:
_setValue:forDatabasePropertyKey:
dataRepresentation
executeStatement:error:bindings:
_getPlayActivityEvents:relevantRevisionsIndexSet:withStartRevision:endRevision:storeAccountID:shouldFilterStoreAccountID:additionalRevisionsIndexSet:ignoredRevisionsIndexSet:error:
_eventsDatabaseTableName
_revisionsIndexSetUsingPersisentIDGenerationBlock:count:
moveItemAtPath:toPath:error:
_propertiesDatabaseTableName
executeStatement:error:
userVersion
setUserVersion:
initWithString:
enumerateRangesUsingBlock:
int64ForColumnIndex:
containsIndex:
addIndex:
dataForColumnIndex:
initWithDataRepresentation:
enumerateRowsUsingBlock:
executeQuery:withResults:
firstStringValue
_databaseConnection
accountUniqueIdentifier
setAccountUniqueIdentifier:
_accountUniqueIdentifier
TQ,N,V_accountUniqueIdentifier
eligibleOffers
capabilities
_capabilitiesForStatusType:carrierBundlingStatusType:isMatchEnabled:
_statusType
_reasonType
_eligibleOffers
Tq,R,N,V_statusType
Tq,R,N,V_reasonType
T@"NSArray",R,C,N,V_eligibleOffers
timeZoneWithName:
setBuildVersion:
setSystemReleaseType:
setSBEnabled:
setStoreAccountID:
setStoreFrontID:
setGlobalPlaylistID:
setPlaylistVersionHash:
setStationHash:
setStationStringID:
setStationID:
setCloudAlbumID:
setCloudPlaylistID:
setSubscriptionAdamID:
setPurchasedAdamID:
setRadioAdamID:
setCloudID:
setLyricsID:
setEquivalencySourceAdamID:
setReportingAdamID:
msv_compactDescription
_mutableCopyClass
isEqualToEvent:
_buildFeatures
_containerIDs
_containerType
_deviceName
_displayType
_endReasonType
_enqueuerProperties
_eventDate
_eventTimeZone
_externalID
_householdID
_itemDuration
_itemEndTime
_itemStartTime
_itemType
_lyricsDisplayedCharacterCount
_lyricsLanguage
_mediaType
_offline
_persistentID
_personalizedContainerID
_queueGroupingID
_reasonHintType
_recommendationData
_requestingBundleIdentifier
_requestingBundleVersion
_SBEnabled
_siriInitiated
_sourceType
_storeAccountID
_storeID
_timedMetadata
_trackInfo
_version
_audioQualityPreference
_playbackFormatPreference
_targetedAudioQuality
_providedAudioQuality
_sharedActivityGroupSizeCurrent
_sharedActivityGroupSizeMax
Tq,R,N,V_version
TQ,R,N,V_autoPlayMode
T@"NSArray",R,C,N,V_buildFeatures
T@"NSString",R,C,N,V_buildVersion
T@"ICPlayActivityEventContainerIDs",R,C,N,V_containerIDs
TQ,R,N,V_containerType
T@"NSString",R,C,N,V_deviceName
TQ,R,N,V_displayType
TQ,R,N,V_endReasonType
T@"ICPlayActivityEnqueuerProperties",R,C,N,V_enqueuerProperties
T@"NSDate",R,C,N,V_eventDate
TQ,R,N,V_eventType
T@"NSTimeZone",R,C,N,V_eventTimeZone
T@"NSString",R,C,N,V_householdID
T@"ICPlayActivityEventItemIDs",R,C,N,V_itemIDs
Td,R,N,V_itemDuration
Td,R,N,V_itemEndTime
Td,R,N,V_itemStartTime
TQ,R,N,V_itemType
TQ,R,N,V_lyricsDisplayedCharacterCount
T@"NSString",R,C,N,V_lyricsLanguage
TQ,R,N,V_mediaType
offline
TB,R,N,GisOffline,V_offline
T@"NSNumber",R,C,N,GisPrivateListeningEnabled,V_privateListeningEnabled
T@"NSString",R,C,N,V_queueGroupingID
TQ,R,N,V_reasonHintType
T@"NSData",R,C,N,V_recommendationData
TQ,R,N,V_repeatPlayMode
T@"NSString",R,C,N,V_requestingBundleIdentifier
T@"NSString",R,C,N,V_requestingBundleVersion
SBEnabled
TB,R,N,GisSBEnabled,V_SBEnabled
TQ,R,N,V_shufflePlayMode
siriInitiated
T@"NSNumber",R,C,N,GisSiriInitiated,V_siriInitiated
TQ,R,N,V_sourceType
TQ,R,N,V_storeAccountID
Tq,R,N,V_systemReleaseType
T@"NSData",R,C,N,V_timedMetadata
T@"NSData",R,C,N,V_trackInfo
TQ,R,N,V_audioQualityPreference
TQ,R,N,V_playbackFormatPreference
T@"ICPlayActivityAudioQualityProperties",R,C,N,V_targetedAudioQuality
T@"ICPlayActivityAudioQualityProperties",R,C,N,V_providedAudioQuality
TQ,R,N,V_sharedActivityGroupSizeCurrent
TQ,R,N,V_sharedActivityGroupSizeMax
T@"NSString",R,C,N,V_containerID
T@"NSString",R,C,N,V_externalID
T@"NSString",R,C,N,V_personalizedContainerID
T@"NSString",R,C,N,V_storeID
setAutoPlayMode:
setBuildFeatures:
setContainerIDs:
setContainerType:
setDisplayType:
setEndReasonType:
setEnqueuerProperties:
setEventDate:
setEventTimeZone:
setExternalID:
setFeatureName:
setHouseholdID:
setInternalBuild:
setItemIDs:
setItemDuration:
setItemEndTime:
setItemStartTime:
setItemType:
setLyricsDisplayedCharacterCount:
setLyricsLanguage:
setMediaType:
setOffline:
setPersistentID:
setPersonalizedContainerID:
setQueueGroupingID:
setReasonHintType:
setRecommendationData:
setRepeatPlayMode:
setRequestingBundleIdentifier:
setRequestingBundleVersion:
setShufflePlayMode:
setSiriInitiated:
setSourceType:
setStoreID:
setTimedMetadata:
setTrackInfo:
setAudioQualityPreference:
setPlaybackFormatPreference:
setTargetedAudioQuality:
setProvidedAudioQuality:
setSharedActivityGroupSizeCurrent:
setSharedActivityGroupSizeMax:
TQ,D,N
T@"ICPlayActivityEventContainerIDs",C,D,N
T@"ICPlayActivityEnqueuerProperties",C,D,N
T@"NSTimeZone",C,D,N
T@"ICPlayActivityEventItemIDs",C,D,N
Td,D,N
TB,D,N,GisOffline
T@"NSNumber",C,D,N,GisPrivateListeningEnabled
T@"NSData",C,D,N
TB,D,N,GisSBEnabled
T@"NSNumber",C,D,N,GisSiriInitiated
T@"ICPlayActivityAudioQualityProperties",C,D,N
TB,D,N,GisInternalBuild
T@"NSString",C,N,V_phoneNumber
addImages:
addMessageActions:
addContentParameters:
setBody:
imagesCount
clearImages
imagesAtIndex:
messageActionsCount
clearMessageActions
messageActionsAtIndex:
contentParametersCount
clearContentParameters
contentParametersAtIndex:
setPageEvent:
setCloseClickEvent:
setCardClickEvent:
imagesType
messageActionsType
contentParametersType
hasTitle
hasSubtitle
hasBody
hasPageEvent
hasCloseClickEvent
hasCardClickEvent
subtitle
body
setImages:
messageActions
setMessageActions:
contentParameters
setContentParameters:
pageEvent
closeClickEvent
cardClickEvent
_body
_cardClickEvent
_closeClickEvent
_contentParameters
_images
_messageActions
_pageEvent
_subtitle
T@"NSString",&,N,V_title
T@"NSString",&,N,V_subtitle
T@"NSString",&,N,V_body
T@"NSMutableArray",&,N,V_images
T@"NSMutableArray",&,N,V_messageActions
T@"NSMutableArray",&,N,V_contentParameters
T@"ICIAMMetricEvent",&,N,V_pageEvent
T@"ICIAMMetricEvent",&,N,V_closeClickEvent
T@"ICIAMMetricEvent",&,N,V_cardClickEvent
fileProcessor
processPurchasedItem:withAttributes:resultInfo:progressBlock:
initWithFilePath:sinfs:
removeDRMWithCompletionHandler:
_mediaFilePath
_sinfs
_newFileExtension
_initializeMusicKitURLResponse
_parseServerErrorDictionary:
ic_integerValueForKey:
_parseServerError
_serverCorrelationKey
_serverEnvironment
_serverError
T@"NSString",R,C,N,V_serverCorrelationKey
T@"NSString",R,C,N,V_serverEnvironment
T@"NSError",R,N,V_serverError
mediaServicesWereLost:
mediaServicesWereReset:
enqueueAVDownloadRequest:toDestination:withAVURLAsset:options:completionHandler:
enqueueAggregateAssetDownloadRequest:toDestination:withOptions:resourceLoaderDelegate:completionHandler:
resourceLoader
setDelegate:queue:
getValue:
sessionWithConfiguration:assetDownloadDelegate:delegateQueue:
assetDownloadTaskWithURLAsset:assetTitle:assetArtworkData:options:
allMediaSelections
aggregateAssetDownloadTaskWithURLAsset:mediaSelections:assetTitle:assetArtworkData:options:
URLSession:assetDownloadTask:didFinishDownloadingToURL:
URLSession:assetDownloadTask:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:
URLSession:assetDownloadTask:didResolveMediaSelection:
URLSession:aggregateAssetDownloadTask:willDownloadToURL:
URLSession:aggregateAssetDownloadTask:didCompleteForMediaSelection:
URLSession:aggregateAssetDownloadTask:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:forMediaSelection:
URLSession:assetDownloadTask:willDownloadVariants:
enqueueAVDownloadRequest:withOptions:completionHandler:
enqueueAggregateAssetDownloadRequest:toDestination:withOptions:completionHandler:
initWithRemoteRequestOperation:
remoteRequestOperation
_remoteRequestOperation
T@"ICRemoteRequestOperation",R,N,V_remoteRequestOperation
operationWithVerificationRequest:
_verificationRequest
T@"ICUserVerificationRequest",R,C,N,V_verificationRequest
columnIndexForColumnName:
numberForColumnIndex:
stringForColumnIndex:
initWithStatement:
dataForColumnName:
doubleForColumnIndex:
doubleForColumnName:
intForColumnIndex:
intForColumnName:
int64ForColumnName:
numberForColumnName:
numberOfColumns
stringForColumnName:
_columnIndexByName
_statementWrapper
setDelegatedPrivateListeningEnabled:
stationURL
seedContentReference
allowsExplicitContent
shouldResponseContainStationMetadata
nowPlayingContentReference
queueContentReferences
playbackContext
isPreservingCurrentlyPlayingItem
getSubscriptionStatusForUserIdentity:withCompletionHandler:
additionalRequestParameters
setAdditionalRequestParameters:
setAllowsExplicitContent:
setPlaybackContext:
setPreservingCurrentlyPlayingItem:
isDelegatedPrivateListeningEnabled
setShouldResponseContainStationMetadata:
requestedTrackCount
setRequestedTrackCount:
setStationURL:
stationPlaybackAuthorizationToken
setStationPlaybackAuthorizationToken:
setSeedContentReference:
setNowPlayingContentReference:
setQueueContentReferences:
_allowsExplicitContent
_preservingCurrentlyPlayingItem
_shouldResponseContainStationMetadata
_additionalRequestParameters
_playbackContext
_delegatedPrivateListeningEnabled
_requestedTrackCount
_stationID
_stationStringID
_stationURL
_stationPlaybackAuthorizationToken
_seedContentReference
_nowPlayingContentReference
_queueContentReferences
T@"NSDictionary",C,N,V_additionalRequestParameters
TB,N,V_allowsExplicitContent
T@"ICRadioPlaybackHistory",C,N,V_playbackContext
preservingCurrentlyPlayingItem
TB,N,GisPreservingCurrentlyPlayingItem,V_preservingCurrentlyPlayingItem
T@"NSNumber",C,N,GisPrivateListeningEnabled,V_privateListeningEnabled
delegatedPrivateListeningEnabled
T@"NSNumber",C,N,GisDelegatedPrivateListeningEnabled,V_delegatedPrivateListeningEnabled
Tq,N,V_reasonType
TB,N,V_shouldResponseContainStationMetadata
Tq,N,V_requestedTrackCount
T@"NSString",C,N,V_stationHash
Tq,N,V_stationID
T@"NSString",C,N,V_stationStringID
T@"NSURL",C,N,V_stationURL
T@"NSString",C,N,V_stationPlaybackAuthorizationToken
T@"ICRadioContentReference",C,N,V_seedContentReference
T@"ICRadioContentReference",C,N,V_nowPlayingContentReference
T@"NSArray",C,N,V_queueContentReferences
addSubrules:
subrulesCount
clearSubrules
subrulesAtIndex:
setTriggerCondition:
setTriggerEventName:
setRequiredApplicationContextBundleIdentifier:
subrulesType
setHasType:
hasType
typeAsString:
StringAsType:
ruleOperator
setRuleOperator:
setHasRuleOperator:
hasRuleOperator
ruleOperatorAsString:
StringAsRuleOperator:
hasTriggerCondition
hasTriggerEventName
hasRequiredApplicationContextBundleIdentifier
subrules
setSubrules:
triggerCondition
triggerEventName
requiredApplicationContextBundleIdentifier
_requiredApplicationContextBundleIdentifier
_ruleOperator
_subrules
_triggerCondition
_triggerEventName
Ti,N,V_type
Ti,N,V_ruleOperator
T@"NSMutableArray",&,N,V_subrules
T@"ICIAMTriggerCondition",&,N,V_triggerCondition
T@"NSString",&,N,V_triggerEventName
T@"NSString",&,N,V_requiredApplicationContextBundleIdentifier
_listenerEndpointProviderConnection
getListenerEndpointForService:completion:
initWithResponseDictionary:requestDate:
_clientData
T@"NSData",R,C,N,V_clientData
T@"NSString",R,C,N,V_leaseID
Tq,R,N,V_mediaType
Tq,R,N,V_requestType
_timeZoneName
_sBEnabled
carrierBundleDeviceID
libraryAuthTokenStatus
cloudLibrarySyncStatus
usesListeningHistory
setCarrierBundleDeviceID:
setLibraryAuthTokenStatus:
setLightweightSubscriptionStatus:
setCloudLibrarySyncStatus:
setUsesListeningHistory:
cookies
setCookies:
T@"ICMusicLibraryAuthTokenStatus",C,N
T@"ICMusicSubscriptionStatus",C,N
T@"ICLightweightMusicSubscriptionStatus",C,N
T@"ICMusicUserStateCookies",C,N
_isDelegated
_usesListeningHistory
_carrierBundleDeviceID
_libraryAuthTokenStatus
_cloudLibrarySyncStatus
_cookies
T@"NSString",C,N,V_carrierBundleDeviceID
T@"ICMusicLibraryAuthTokenStatus",C,N,V_libraryAuthTokenStatus
T@"ICLightweightMusicSubscriptionStatus",C,N,V_lightweightSubscriptionStatus
Tq,N,V_cloudLibrarySyncStatus
TB,N,V_usesListeningHistory
T@"ICMusicUserStateCookies",C,N,V_cookies
TB,R,N,V_isDelegated
_characterDisplayedCount
_cloudPlaylistID
_containerAdamID
_equivalencySourceAdamID
_eventDateTimestamp
_eventSecondsFromGMT
_itemCloudID
_purchasedAdamID
_radioAdamID
_reportingAdamID
_subscriptionAdamID
_tvShowPurchasedAdamID
_tvShowSubscriptionAdamID
_cloudAlbumID
_eventTimeZoneName
_globalPlaylistID
_lyricLanguage
_lyricsID
_playMode
_playlistVersionHash
_internalBuild
_copyWithClass:
Tq,R,N,V_adamID
T@"NSString",R,C,N,V_cloudAlbumID
TQ,R,N,V_cloudPlaylistID
T@"NSString",R,C,N,V_globalPlaylistID
T@"NSString",R,C,N,V_playlistVersionHash
T@"NSString",R,C,N,V_stationStringID
Tq,R,N,V_stationID
password
_handlePairingSessionCompletionWithError:
_receivedData:
subdataWithRange:
_encryptedDataForData:
appendBytes:length:
_deriveEncryptionKeysReturningError:
dataWithBytesNoCopy:length:freeWhenDone:
_sendData:withCompletionHandler:
role
_accessSerialQueue
_existingPairingCompletionHandlers
_inputKey
_inputNonce
_outputKey
_outputNonce
_state
_role
T@"<ICDelegationServicePairingSessionDelegate>",W,N,V_delegate
Tq,R,N,V_role
_endObservingBag
_beginObservingBag
_requestBagWithPolicy:completionHandler:
_invalidateBagExpirationTimer
_handleBagExpirationTimerFired
_handleUserIdentityStoreDidChange:
_scheduleBagExpirationTimerForDate:
_updateWithBag:
sharedBagMonitor
T@"ICURLBagMonitor",R,N
beginObservingBagWithHandler:
endObservingBagWithToken:
_bag
_bagExpirationTimer
T@"ICURLBag",R
setPurchaseHistoryID:
setAuthor:
setGenre:
setDatePurchased:
setArtworkURL:
setVppLicensed:
setVppOrganizationID:
setVppOrganizationDisplayName:
purchaseHistoryID
author
datePurchased
isVPPLicensed
vppOrganizationID
vppOrganizationDisplayName
_vppLicensed
_purchaseHistoryID
_author
_genre
_datePurchased
_vppOrganizationID
_vppOrganizationDisplayName
TQ,N,V_purchaseHistoryID
TQ,N,V_storeID
T@"NSString",C,N,V_title
T@"NSString",C,N,V_author
T@"NSString",C,N,V_genre
T@"NSDate",C,N,V_datePurchased
T@"NSURL",C,N,V_artworkURL
T@"NSString",C,N,V_redownloadParameters
vppLicensed
TB,N,GisVPPLicensed,V_vppLicensed
T@"NSString",C,N,V_vppOrganizationID
T@"NSString",C,N,V_vppOrganizationDisplayName
setStoreAdamID:
setLikeState:
_storeAdamID
_likeState
Tq,N,V_storeAdamID
Tq,N,V_likeState
keybagPath
setKeybagPath:
setTokenData:
_keybagPath
_tokenData
T@"NSString",C,N,V_keybagPath
T@"NSString",C,N,V_reason
T@"NSData",C,N,V_tokenData
initWithDelegateToken:storefrontIdentifier:resultError:
resultError
_resultError
T@"NSError",R,C,N,V_resultError
T@"NSString",R,C,N,V_storefrontIdentifier
_playerAnisetteMID
_playerDeviceGUID
_playerInfoContextTokens
_playerUserAgent
_hashValue
_pendingEquivalentStoreURLRequest
_updateRequest:forProcessedResponseOfStoreURLRequest:
_invalidateDeveloperTokenForInitialResponse:toRequest:withCompletionHandler:
_invalidateUserTokenForInitialResponse:toRequest:withCompletionHandler:
_finishDelegationResponse
_requestUniqueID
_startDelegationResponse
_handleLibraryAuthServiceClientTokenDidChangeDistributedNotification:
_updateEntriesForAccountsChanges
_updateRefreshTimer
getTokenForDSID:forceRefresh:completion:
_unsafeBackend
getSharedUserIdForHomeUserId:completion:
getTokenResultsForDSIDs:forceRefresh:completion:
getTokenResultForDSID:forceRefresh:completion:
_updateTokenCacheEntryForDSID:tokenResult:error:
_refreshTokenForDSID:forExternalRequest:completion:
_refreshTokensForDSIDs:forExternalRequest:completion:
getTokenForcingRefresh:completion:
addTokenResult:forDSID:completion:
_commitCache
getTokenStatusForDSIDs:forcingRefresh:completion:
_isPrivacyAcknowledgementRequired
authServiceClientTokenCache
setAuthServiceClientTokenCache:
_shouldStopBackgroundRefreshForError:
T@"ICLibraryAuthServiceClientTokenProvider",R,N
startService
stopService
getAllTokensForAssistantForcingRefresh:completion:
cachedTokenAndResetCache:
getTokenStatusForcingRefresh:completion:
getAllTokenStatusForAssistantForcingRefresh:completion:
_tokenCache
_isService
_siriConnection
initWithConnection:SQL:
connectionPointer
_connectionPointer
_SQL
Tr^v,R,N,V_connectionPointer
T@"NSString",R,C,N,V_SQL
_getSinfParamValue:
_hasRentalInfo
playerGUID
setPlayerGUID:
SICData
setSICData:
sinfs
setSinfs:
contentIdentifier
setContentIdentifier:
subscriptionPlaybackType
setSubscriptionPlaybackType:
_playerGUID
_SICData
_contentIdentifier
_subscriptionPlaybackType
T@"NSString",C,N,V_playerGUID
T@"NSData",C,N,V_SICData
T@"NSArray",C,N,V_sinfs
T@"NSNumber",C,N,V_contentIdentifier
T@"NSString",C,N,V_subscriptionPlaybackType
_privacyAcknowledgementRequiredForIdentifier:
_onboardingKitPrivacyIdentifierForPrivacyIdentifier:
setShouldForcePrivacyAcknowledgementRequiredForMusic:
initWithPrivacyIdentifier:
acknowledgePrivacy
_updateForPrivacyAcknowledgementChanged
isPrivacyAcknowledgementDisabledForMusic
shouldForcePrivacyAcknowledgementRequiredForMusic
acknowledgementNeededForPrivacyIdentifier:
_queryPrivacyAcknowledgementRequiredForIdentifier:
T@"ICPrivacyInfo",R,N
privacyAcknowledgementRequiredForMedia
acknowledgePrivacyPolicyForIdentifier:completionHandler:
shouldFlushTrackCache
characterSetWithCharactersInString:
stringByTrimmingCharactersInSet:
whitespaceCharacterSet
alternatePlaylistURL
alternateKeyCertificateURL
alternateKeyServerURL
keyServerAdamID
setAudioTraits:
_isiTunesStoreStream
_keyCertificateURL
_keyServerURL
_playlistURL
_keyServerProtocolType
_keyServerAdamID
_audioTraits
T@"NSURL",C,N,V_playlistURL
T@"NSURL",C,N,V_keyCertificateURL
T@"NSURL",C,N,V_keyServerURL
T@"NSString",C,N,V_keyServerProtocolType
T@"NSNumber",C,N,V_keyServerAdamID
TB,N,GisiTunesStoreStream,V_isiTunesStoreStream
T@"NSSet",C,N,V_audioTraits
leaseStatus
_locked_updateAutomaticRefreshProperties
_locked_handlePendingPlaybackLeaseDidEndPushNotificationIfReady
_locked_setLeaseStatus:updatedLeaseExpirationDate:
_sharedOperationQueue
_newOperationForPlaybackRequest:completionHandler:
musicLeaseSession:requestsFairPlayKeyStatusUpdateWithCompletion:
isAutomaticallyRefreshingLease
musicLeaseSession:didFinishPlaybackRequest:withPlaybackResponse:responseError:updatedFairPlayKeyStatusList:completionHandler:
_locked_performAutomaticRefresh
_initWithRequestContext:isDelegatedLeaseSession:delegate:leaseStatus:
performPlaybackRequest:completionHandler:
reloadFairPlayKeyStatusWithCompletionHandler:
_handlePlaybackLeaseDidEndPushNotification
_handleRemoteServerDidBecomeLikelyReachable
_receivedUserInteractionEvent
_setLeaseStatus:updatedLeaseExpirationDate:
isDelegatedLeaseSession
_automaticRefreshTimerSource
_isPerformingAutomaticRefresh
_leaseStatus
_pendingLeaseAcquisitionRevisionID
_startedLeaseAcquisitionRevisionID
_hasPendingLeaseDidEndPushNotification
_delegatedLeaseSession
T@"<ICMusicSubscriptionLeaseSessionDelegate>",R,W,N,V_delegate
T@"NSDate",R,C,N,V_leaseExpirationDate
delegatedLeaseSession
TB,R,N,GisDelegatedLeaseSession,V_delegatedLeaseSession
T@"ICMusicSubscriptionLeaseStatus",R,C,N
automaticallyRefreshingLease
TB,R,N,GisAutomaticallyRefreshingLease
strongToWeakObjectsMapTable
initWithInstantiationHandler:
sharedInstanceForKey:
incrementUsageCountForKey:
decrementUsageCountForKey:
_instantiationHandler
_stronglyHeldSharedInstances
_weaklyHeldSharedInstances
_usageCounts
hasProperNetworkConditionsToPlayMediaWithCompletion:
hasProperNetworkConditionsToShowCloudMediaWithCompletion:
isCellularDataRestrictedForMusicWithCompletion:
shouldProhibitMusicActionForCurrentNetworkConditionsWithCompletion:
isCellularDataRestrictedForVideosWithCompletion:
shouldProhibitVideosActionForCurrentNetworkConditionsWithCompletion:
isCellularDataRestrictedForStoreAppsWithCompletion:
shouldProhibitStoreAppsActionForCurrentNetworkConditionsWithCompletion:
canShowCloudDownloadButtonsWithCompletion:
canShowCloudMusicWithCompletion:
canShowCloudVideoWithCompletion:
_containerId
Tq,R,N,V_statusCode
_defaultStoreFilePath
initWithFilePath:
_load
_commit
dictionaryWithObject:forKey:
allApplicationStorePropertiesWithCompletion:
removeMessageEntry:completion:
_messageEntryCache
_globalPropertyCache
_applicationPropertyCache
_messageMetadataCache
_pendingEvents
_cacheControlParameters
whitespaceAndNewlineCharacterSet
hasCacheControl
cacheControlMaxAge
_exchangeDataWithSAPContext:requestContext:setupURL:responseData:completionHandler:
sapSession
_sapSession
T@"ICSAPSession",&,N,V_sapSession
albumArtistName
genreName
setAlbumArtistName:
setComposerName:
setCopyright:
setDiscCount:
setDiscNumber:
setGenreName:
setCompilation:
setDuration:
storeAdamIdentifier
setStoreAdamIdentifier:
storeCloudIdentifier
setStoreCloudIdentifier:
setTrackCount:
setTrackNumber:
setYear:
universalCloudLibraryID
setUniversalCloudLibraryID:
_albumArtistName
_composerName
_copyright
_discCount
_discNumber
_genreName
_compilation
_duration
_storeAdamIdentifier
_storeCloudIdentifier
_trackCount
_trackNumber
_year
_universalCloudLibraryID
T@"NSString",C,N,V_albumArtistName
T@"NSString",C,N,V_composerName
T@"NSString",C,N,V_copyright
T@"NSNumber",C,N,V_discCount
T@"NSNumber",C,N,V_discNumber
T@"NSNumber",C,N,V_fileSize
T@"NSString",C,N,V_genreName
compilation
T@"NSNumber",C,N,GisCompilation,V_compilation
T@"NSNumber",C,N,V_duration
T@"NSString",C,N,V_kind
T@"NSString",C,N,V_name
T@"NSNumber",C,N,V_storeAdamIdentifier
T@"NSNumber",C,N,V_storeCloudIdentifier
T@"NSNumber",C,N,V_trackCount
T@"NSNumber",C,N,V_trackNumber
T@"NSNumber",C,N,V_year
T@"NSString",C,N,V_universalCloudLibraryID
_positionType
playerDeviceGUID
tokenRequests
playerUserAgent
playerAnisetteMID
setPlayerAnisetteMID:
setPlayerDeviceGUID:
setPlayerUserAgent:
setTokenRequests:
_tokenRequests
T@"NSData",C,N,V_playerAnisetteMID
T@"NSString",C,N,V_playerDeviceGUID
T@"NSString",C,N,V_playerUserAgent
T@"NSArray",C,N,V_tokenRequests
T@"NSMutableDictionary",R,C,N
initWithDSID:SICData:
cloudCredentialsTokenData
setCloudCredentialsTokenData:
_cloudCredentialsTokenData
T@"NSData",C,N,V_cloudCredentialsTokenData
_setOrRemoveObject:forKey:
setBool:forKey:
internalDefaults
_shouldSpoofIPhoneRequestProperties
_shouldSpoofIPadRequestProperties
_setOrRemoveInternalDefaultsObject:forKey:
valueForKey:
_musicUserDefaults
T@"ICDefaults",R,N
setCloudMediaLibraryUID:
defaultStoreFront
cachedMusicUserTokens
setCachedMusicUserTokens:
pushNotificationState
setPushNotificationState:
setMediaLibraryAccessApplicationIdentifiersWithTCCAcceptanceDates:
lastActiveAccountDSID
setLastActiveAccountDSID:
lastCookieHeadersForRevokingMusicUserTokens
setLastCookieHeadersForRevokingMusicUserTokens:
lastAuthenticationDialogResponseTime
lastKnownLocalStoreAccountProperties
setLastKnownLocalStoreAccountProperties:
lastKnownHouseholdID
setLastKnownHouseholdID:
shouldForceStreamingOnlyKeysForPlayback
setShouldForceStreamingOnlyKeysForPlayback:
setIgnoreExtendedCertificateValidation:
setDeviceClassOverride:
setDeviceModelOverride:
setFairPlayDeviceTypeOverride:
setHardwarePlatformOverride:
setProductVersionOverride:
setProductPlatformOverride:
networkTypeOverride
setNetworkTypeOverride:
networkLinkQualityOverride
setNetworkLinkQualityOverride:
chargingStateOverride
setChargingStateOverride:
batteryLevelOverride
setBatteryLevelOverride:
shouldForceiPhoneBehaviors
setShouldRunAgeVerification:
isExplicitContentAllowedForCurrentYear
setExplicitContentAllowedForCurrentYear:
isExplicitContentAllowedForExpirationYear
setExplicitContentAllowedForExpirationYear:
isGrazingPathEnabled
setGrazingPathEnabled:
shouldForceLibraryRecommendationAnalysis
shouldOverrideSubscriptionStatusToGlide
shouldReduceLibraryRecommendationsXPCInterval
shouldTreatSubscriptionStatusCheckAsIncomplete
shouldTreatSagaAddComputerCallAsFailed
shouldTreatInitialSagaImportAsFailed
setAutomaticDownloadsEnabled:
deleteAutomaticDownloadsKey
allowLowAffinityRecommendations
secureKeyRenewalTimeOverride
_userDefaults
_internalDefaults
T@"NSUserDefaults",R,N,V_internalDefaults
T@"NSDictionary",C,N
Td,N
explicitContentAllowedForCurrentYear
TB,N,GisExplicitContentAllowedForCurrentYear
explicitContentAllowedForExpirationYear
TB,N,GisExplicitContentAllowedForExpirationYear
grazingPathEnabled
TB,N,GisGrazingPathEnabled
privacyAcknowledgementDisabledForMusic
TB,R,N,GisPrivacyAcknowledgementDisabledForMusic
legacyStoreCacheBusterEnabled
TB,R,N,GisLegacyStoreCacheBusterEnabled
_populateItemIdentifiers:
generateSubscriptionLeaseRequestWithAccountUniqueID:transactionType:certificateData:assetIDData:completionHandler:
query
leaseCertificateData
leaseAssetIDData
_leaseCertificateData
_leaseAssetIDData
T@"NSData",C,N,V_leaseCertificateData
T@"NSData",C,N,V_leaseAssetIDData
initWithTrack:
pauseTime
skipDate
_pauseTime
_serverTrackInfo
_skipDate
T@"NSNumber",R,C,N,V_pauseTime
T@"NSDate",R,C,N,V_skipDate
Tq,R,N,V_storeIdentifier
setPauseTime:
setServerTrackInfo:
setSkipDate:
initWithName:
T@"NSString",R,C,N,V_name
T@"NSUUID",R,C,N,V_uniqueIdentifier
_timeZone
T@"NSTimeZone",R,C,N,V_timeZone
clearRunLoop
runLoopSourceRef
setRunLoopSourceRef:
_runLoopSourceRef
T^{__CFRunLoopSource=},N,V_runLoopSourceRef
initWithKeyOptions:valueOptions:capacity:
T@"ICUserNotificationManager",R,N
_handleCallbackForUserNotification:responseFlags:
_contextForUserNotification
buyParameters
initWithRequestContext:buyParams:storeItemID:itemName:itemKind:
initWithRequestContext:platformMetadataItem:
_buyParams
_itemName
_itemKind
accountIdentifier
enqueuerAccountIdentifier
valueForKeyPath:
rawResponse
T@,R,C,N
_childResponses
_getURLFromBagAndSendRequest
initWithName:value:
_buildAndSendRequestForURL:
initWithRequestContext:allowsExplicitContent:isAutomatic:
isAutomatic
setAutomatic:
storeURLRequest
setStoreURLRequest:
_automatic
automatic
TB,N,GisAutomatic,V_automatic
T@"ICStoreRequestContext",&,N,V_requestContext
T@"ICStoreURLRequest",&,N,V_storeURLRequest
currentError
resetAfterCorruptionError
resetAfterIOError
firstInt64Value
firstNumberValue
_participantState
_payload
_transportControlState
_invalidateTriggersForCloudServiceStatusObservationRecovery
_locked_isObservingCloudServiceStatus
_beginObservingCloudServiceStatus
_endObservingCloudServiceStatusWithToken:
_requestCapabilitiesWithPrivacyPromptPolicy:requestCapabilitiesWithCompletionHandler:
_requestStorefrontCountryCodeWithCompletionHandler:
_requestStorefrontIdentifierWithCompletionHandler:
initWithDefaultValue:
_didEndRequestingTokenWithTransactionIdentifier:
_performCloudServiceStatusMonitorRequestWithDescription:requestHandler:errorHandler:
requestUserTokenForDeveloperToken:options:completionHandler:
pairWithFirst:second:
validateExpirationForBundleIdentifier:withReplyBlock:
revokeMusicKitUserTokensForUserIdentity:withCompletion:
_updateWithCapabilities:hasValidCapabilities:transactionIdentifier:
_updateWithStorefrontCountryCode:transactionIdentifier:
_updateWithStorefrontIdentifier:transactionIdentifier:
_resetCloudServiceStatusMonitorConnectionAllowingExplicitInvalidation:
_cloudServiceStatusMonitorConnectionWasInterrupted
_cloudServiceStatusMonitorConnectionWasInvalidated
_beginTransactionForCloudServiceStatusMonitorConnectionWithIdentifier:
_cloudServiceStatusMonitorConnectionForTransactionIdentifier:error:
_endTransactionForCloudServiceStatusMonitorConnectionWithIdentifier:
_scheduleTriggersForCloudServiceStatusObservationRecovery
_hasEntitlementForStatusAccessExemptedFromUserConsentRequirement
authorizationStatusForScopes:
_validateAuthorizationExpiryWithCompletionHandler:
hasEntitlement:inGroup:shouldLogForMissingEntitlement:
hasBoolEntitlement:shouldLogForMissingEntitlement:
_didBeginObservingCloudServiceStatusWithToken:transactionIdentifier:
_didEndObservingCloudServiceStatusWithToken:transactionIdentifier:
_recoverObservingCloudServiceStatus
_invalidateCloudServerLaunchTimeoutTimer
_refreshCloudServiceStatus
_registerCloudServerLaunchedNotifyToken
_scheduleCloudServerLaunchTimeoutTimer
_cancelCloudServerLaunchedNotifyToken
privacyAcknowledgementPolicy
setPrivacyAcknowledgementPolicy:
isObservingCloudServiceStatus
beginObservingCloudServiceStatus
endObservingCloudServiceStatus
requestCapabilitiesWithCompletionHandler:
requestDeveloperTokenWithOptions:completionHandler:
requestUserTokenForDeveloperToken:completionHandler:
requestMusicKitTokensWithOptions:completionHandler:
revokeMusicKitUserTokensForAccountDSID:withCompletion:
requestAuthorizationForScopes:completionHandler:
_cloudServiceStatusMonitorConnection
_cloudServiceStatusMonitorConnectionEstablishmentError
_activeTransactionIdentifiersForCloudServiceStatusMonitorConnection
_privacyAcknowledgementPolicy
_observingCloudServiceStatusRequestsCount
_observationToken
_transactionIdentifierForActiveObservationToken
_cloudServerLaunchedNotifyToken
_cloudServerLaunchTimeoutTimer
_capabilities
_hasValidCapabilities
_storefrontCountryCode
_developerTokenCompletionHandlers
_userTokenCompletionHandlers
_tokensCompletionHandlers
observingCloudServiceStatus
TB,R,GisObservingCloudServiceStatus
_finishDelegationRequest
_startDelegationRequest
_uniqueID
performAuthenticationToHandleResponse:toRequest:withCompletionHandler:
_setupContentTasteServiceConnection
setContentTaste:forMediaItem:storeIdentifier:configuration:timeStamp:withCompletionHandler:
setContentTaste:forPlaylistGlobalID:configuration:withCompletionHandler:
setContentTaste:forAlbumStoreID:configuration:withCompletionHandler:
updateContentTasteForMediaItemsAndInvalidateLocalCache:configuration:withCompletionHandler:
sharedCloudContentTasteRequestListener
setContentTaste:forMediaItem:storeIdentifier:timeStamp:withCompletionHandler:
setContentTaste:forPlaylistGlobalID:withCompletionHandler:
setContentTaste:forAlbumStoreID:withCompletionHandler:
updateContentTasteForMediaItemsAndInvalidateLocalCache:withCompletionHandler:
_notice
_uncachedIsShowingAllMusic
_uncachedIsShowingAllVideo
initWithQueue:
getInternetConnectionStateSync:
state
_onQueue_updateCanShowCloudDownloadButtonsWithNotification:
_onQueue_updateCanShowCloudTracksWithNotification:
_applicationWillEnterForeground:
_applicationDidEnterBackground:
_onQueue_updateIsCellularDataRestrictedForMusic
_registerPerAppNetworkDataAccessPolicyChangedNotification
airplaneMode
_uncachedIsAutoDownloadOnCellularAllowed
isEthernetWired
_wifiStateDidChangeNotification:
sharedWiFiManager
isWiFiEnabled
isWiFiAssociated
_unregisterPerAppNetworkDataAccessPolicyChangedNotification
constraintsForSystemApplicationType:
_hasCellularCapability
_hasWiFiCapability
airplaneModeChanged
connectionStateChanged:connection:dataConnectionStatusInfo:
connectionActivationError:connection:error:
anbrActivationState:enabled:
anbrBitrateRecommendation:bitrate:direction:
preferredDataSimChanged:
preferredDataServiceDescriptorChanged:
currentDataSimChanged:
currentDataServiceDescriptorChanged:
servingNetworkChanged:
connectionAvailability:availableConnections:
dataStatus:dataStatusInfo:
regDataModeChanged:dataMode:
dataSettingsChanged:
internetConnectionStateChanged:
internetConnectionActivationError:
internetDataStatusBasic:
internetDataStatus:
internetConnectionAvailability:
tetheringStatus:
tetheringStatus:connectionType:
serviceDisconnection:status:
dataRoamingSettingsChanged:status:
isNetworkReachable
_isAutoDownloadOnCellularAllowed
_setNewIsNetworkReachable:networkType:
_hasProperNetworkConditionsToShowCloudMedia
_isAirplaneModeActive
_isCellularDataActive
_isCellularDataRestrictedForMusic
_isShowingAllMusic
_isShowingAllVideo
_isUpdateInProgress
_isWiFiEnabled
_isWiFiAssociated
_isEthernetWired
_isNetworkReachable
_canShowCloudMusic
_canShowCloudVideo
_canShowCloudDownloadButtons
_preferencesChangedNotifyToken
_preferencesChangedNotifyTokenIsValid
_networkType
_radiosPreferences
_ctServerConnection
_telephonyClient
_handleMusicUserTokensDidChangeDistributedNotification:
_getCacheKeyForDeveloperToken:requestContext:completion:
_persistCache
_postLocalChangeNotification
_decodeDeveloperTokenPart:
T@"ICMusicUserTokenCache",R,N
_cachedUserTokens
initWithRequestContext:buyParameters:includeKeybagSyncData:
_buyParameters
_parsedResponse
initWithUserIdentityStore:requestContext:
_startDelegation
getDeviceSenderSettingsForReceiverName:securityMode:completion:
getResolvedStreamsWithCompletionHandler:
getFinishDelegationRequestsWithStartDelegationResponse:streamContexts:replyHandler:
_handleStartDelegationResponse:
getStartDelegationRequestForAccountIDs:withCompletionHandler:
userIdentities
_protocolHandler
_sessionIDToStreamContext
_delegationAccountUUIDs
_userIdentities
T@"<ICDelegationProviderServiceSessionDelegate>",W,N
T@"NSArray",R,C,N,V_delegationAccountUUIDs
T@"ICDelegationProviderNetService",R,N,V_netService
T@"NSArray",R,C,N,V_userIdentities
_performAuthenticationUsingRequestContext:usingVerificationInteractionLevel:withCompletionHandler:
_adjustedAuthenticationPolicyForResponse:withCompletionHandler:
getVerificationContextForUserIdentity:error:
initWithVerificationContext:
stationMetadata
tracklistActionType
T@"ICRadioStationMetadata",R,N
T@"NSDate",R,C,N,V_assetExpirationDate
exceptionWithName:reason:userInfo:
raise
_storefronts
_currentRadioStationId
_demarkationPos
_explicitSetting
_queueId
T@"NSArray",&,N,V_performanceMetrics
_traceId
_finishWithResult:tokens:error:
parsedBodyArray
initWithURL:cachePolicy:timeoutInterval:
finishWithResponse:requestDate:error:
playInfoRequest
setPlayInfoRequest:
_playInfoRequest
T@"ICDelegationPlayInfoRequest",C,N,V_playInfoRequest
T@"ICStoreRequestContext",&,N,V_storeRequestContext
hasKey
hasValue
_key
T@"NSString",&,N,V_key
T@"NSString",&,N,V_value
initWithRequestContext:storeItemID:
initWithSystemApplicationType:
setActiveCommandsOnly:
_syncResponse
_fromRevision
initWithIdentity:identityStore:
T@"ICUserIdentity",R,N,V_identity
canProvidePersistableContentKey
initWithRequestContext:keyStore:
enhancedAudioSharedContentKeyPath
prefetchSKDs
contentKeySessionWithKeySystem:
addContentKeyRecipient:
contentKeySpecifiersEligibleForPreloading
_processKeyWithIdentifier:
loadValuesAsynchronouslyForKeys:completionHandler:
removeContentKeyRecipient:
_scheduleKeyRefreshTimer
arrayWithObject:
waitForAllKeysToProcessWithTimeout:
allowFallbackToStreamingKeys
respondByRequestingPersistableContentKeyRequestAndReturnError:
_performKeyDeliveryRequestForContentKeyRequest:persistResponse:isRenewal:
contentKeyResponseWithFairPlayStreamingKeyResponseData:
processContentKeyResponse:
_finishProcessingKeyWithIdentifier:
setShouldIncludeDeviceGUID:
setCertificateURL:
configureUsingContentKeyRequest:
setITunesStoreRequest:
setIsOfflineDownload:
setRequestProtocolType:
setPlaybackToken:
setLeaseActionType:
contentKeyContextData
persistableContentKeyFromKeyVendorResponse:options:error:
processContentKeyResponseError:
_renewExpiredKeys
setWithSet:
unionSet:
renewExpiringResponseDataForContentKeyRequest:
processContentKeyRequestWithIdentifier:initializationData:options:
contentKeySession:didProvideContentKeyRequest:
contentKeySession:didProvideRenewingContentKeyRequest:
contentKeySession:didProvidePersistableContentKeyRequest:
contentKeySession:didUpdatePersistableContentKey:forContentKeyIdentifier:
contentKeySession:contentKeyRequest:didFailWithError:
contentKeySession:shouldRetryContentKeyRequest:reason:
contentKeySession:contentKeyRequestDidSucceed:
contentKeySessionContentProtectionSessionIdentifierDidChange:
contentKeySessionDidGenerateExpiredSessionReport:
addAsset:
removeAsset:
processKeyWithIdentifier:
pauseAutomaticKeyRenewal
resumeAutomaticKeyRenewal
waitForKeyRenewalsWithCompletionHandler:
playbackToken
bypassCache
setBypassCache:
requestOfflineKeys
setAllowFallbackToStreamingKeys:
_keyStore
_pendingKeyIdentifiers
_pendingRenewalKeyIdentifiers
_renewalCompletionBlocks
_waitForKeysSemaphore
_playbackToken
_prefetchKeyIdentifiers
_prefetchKeyServerURL
_prefetchKeyCertificateURL
_prefetchedContentKeyStore
_keyRenewalDates
_keyRequestsPendingRenewal
_keyRenewalTimer
_automaticKeyRenewalPaused
_bypassCache
_requestOfflineKeys
_allowFallbackToStreamingKeys
T@"NSNumber",C,N,V_adamID
T@"NSString",C,N,V_playbackToken
TB,N,V_bypassCache
TB,N,V_requestOfflineKeys
TB,N,V_allowFallbackToStreamingKeys
Tq,N,V_keyServerProtocolType
initWithBundleIdentifier:allowPlaceholder:error:
applicationState
isValid
_createMediaTokenServiceForClientInfo:clientType:requester:
_invalidateCachedDeveloperTokenForClientInfo:requester:usingMediaTokenService:
fetchMediaToken
_didFetchMediaToken:withError:
initWithClientIdentifier:bag:
invalidateMediaToken
tokenString
clientType
_mediaTokenService
_clientType
Tq,N,V_clientType
_securityMode
_password
Tq,R,N,V_securityMode
T@"NSString",R,C,N,V_password
dictionaryFromTXTRecordData:
rangeOfString:
dataFromTXTRecordDictionary:
initWithTXTRecordData:
serviceVersion
_serviceVersion
T@"NSArray",C,N,V_delegationAccountUUIDs
T@"NSString",C,N,V_deviceName
Tq,N,V_securityMode
Tq,N,V_serviceVersion
_buttonWithType:
_buttonTitleKeyForType:
_buttonActionKeyForType:
initWithResponseButtonActionDictionary:
defaultButtonType
initWithType:isDefaultButton:title:action:
isInitialCheckboxValue
isBiometricAuthenticationAllowed
initialCheckboxValue
TB,R,N,GisInitialCheckboxValue
biometricAuthenticationAllowed
TB,R,N,GisBiometricAuthenticationAllowed
isDefaultButton
_isDefaultButton
TB,R,N,V_isDefaultButton
T@"ICStoreDialogResponseButtonAction",R,C,N,V_action
actionDictionary
_actionDictionary
T@"NSDictionary",R,C,N,V_actionDictionary
_code
_contentTypeCode
_message
_handleSubscriptionStatusCacheDidChangeNotification:
_handleSubscriptionStatusCacheUnderlyingCachingPropertiesDidChangeNotification:
_handleSubscriptionStatusDidChangeFollowingPrivacyAcknowledgementNotification:
_handlePrivacyAcknowledgementRequirementChanged:
_handleSubscriptionStatusDidChangeDistributedNotification:
_cancelRemoteRequestingClientConnectionInvalidationTimer
_invalidateRemoteRequestingClientConnection
performSubscriptionStatusRequest:withCompletionHandler:
performSubscriptionStatusRequest:withStatusHandler:
_willPerformSubscriptionStatusRequest:withStatusHandler:
_deliverSubscriptionStatusResponse:forRequest:error:
_hasEntitlementForMusicSubscriptionStatusService
_willBeginRemoteRequestWithUniqueIdentifier:statusHandler:
_remoteRequestingClientConnection
deliverSubscriptionStatusResponse:forRemoteRequestWithUniqueIdentifier:error:
performSubscriptionStatusRequest:forUniqueIdentifier:
enableSubscriptionForUserIdentity:withCompletionHandler:
disableSubscriptionForUserIdentity:withCompletionHandler:
refreshSubscriptionForUserIdentity:withCompletionHandler:
refreshSubscriptionUsingRequestContext:withCompletionHandler:
_didEndRemoteRequestWithUniqueIdentifier:
_scheduleInvalidationOfRemoteRequestingClientConnection
_handleSeveredRemoteClientConnectionWithIdentifier:
_cancelPendingRequests
_remoteRequestingClientConnectionInvalidationTimerDidExpire
postNotificationName:object:userInfo:deliverImmediately:
T@"ICMusicSubscriptionStatusController",R,N
getSubscriptionStatusWithCompletionHandler:
enableSubscriptionWithCompletionHandler:
disableSubscriptionWithCompletionHandler:
refreshSubscriptionWithCompletionHandler:
invalidateCachedSubscriptionStatusWithCompletionHandler:
invalidateCachedSubscriptionStatusForUserIdentity:withCompletionHandler:
_numberOfActiveRemoteRequests
_privacyAcknowledgementObservationToken
_remoteRequestingClientConnectionIdentifier
_remoteRequestingClientConnectionInvalidationTimer
_statusHandlersForPendingIdenticalRequests
_stop
_handleTimeout
_acceptedConnections
_pendingUserIdentities
_sessionIDToRequestInfoMap
_timeoutDispatchSource
T@"ICDelegationConsumerServiceRequest",R,C,N,V_request
T@?,R,N,V_responseHandler
initWithResponseDictionary:requestedItemIdentifiers:
_enumerateResultDictionariesUsingBlock:
resultsDictionary
_accountIdentifier
_enqueuerAccountIdentifier
_requestedItemIdentifiers
authenticated
TB,R,N,GisAuthenticated
T@"NSNumber",R,C,N,V_accountIdentifier
T@"NSNumber",R,C,N,V_enqueuerAccountIdentifier
T@"NSArray",R,N,V_performanceMetrics
initWithMessageIdentifier:params:eventIdentifier:
_eventIdentifier
T@"NSString",R,N,V_messageIdentifier
T@"NSDictionary",R,N,V_params
T@"NSString",R,N,V_eventIdentifier
report
endEvent:withError:
pseudonymRenewalTimer
setGroupSessionIdentifier:
sharedListeningSessionIdentifier
setSharedListeningSessionIdentifier:
groupSessionIdentifier
setGroupSessionOptions:
initWithService:
setService:
startEvent:
setPseudonym:
_beginPseudonymAutoRenewal
_joinSharedListeningSessionWithCompletion:
_provisionUserPseudonymWithCompletion:
account
accountRegisteredURIs
service
pseudonymURIMap
properties
prefixedURI
pseudonymPropertiesWithFeatureID:scopeID:expiryDurationInSeconds:
setDouble:forKey:
provisionPseudonymForURI:withProperties:completion:
pseudonym
_renewUserPseudonym
initWithInterval:queue:block:
setPseudonymRenewalTimer:
dataSourceErrorHandler
renewPseudonym:forUpdatedDuration:completion:
revokePseudonym:completion:
startEvent:withParentEvent:
sessionURLForBag:error:
sharedConnection
effectiveBoolValueForSetting:
setSharedListeningSessionInviteURL:
setSharedSessionToken:
accounts
dataSourceForNewSharedListeningSessionWithIdentity:
dataSourceForExistingSharedListeningSession:identity:
groupSessionOptions
pluginIdentifier
rpcPath
trustHandler
applicationProtocol
T@"IDSService",R,N
T@"IDSAccount",R,N
T@"NSUUID",R,N
T@?,R,N
populateWithCompletion:
_revokeUserPseudonymWithCompletion:
sharedListeningSessionInviteURL
sharedSessionToken
setReport:
setDataSourceErrorHandler:
setAccount:
setQueue:
_service
_groupSessionIdentifier
_groupSessionOptions
_sharedListeningSessionInviteURL
_sharedListeningSessionIdentifier
_report
_dataSourceErrorHandler
_account
_pseudonym
_pseudonymRenewalTimer
T@"IDSService",&,N,V_service
T@"IDSAccount",&,N,V_account
T@"NSUUID",&,N,V_groupSessionIdentifier
T@"NSDictionary",&,N,V_groupSessionOptions
T@"IDSPseudonym",&,N,V_pseudonym
T@"MSVTimer",&,N,V_pseudonymRenewalTimer
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSURL",&,N,V_sharedListeningSessionInviteURL
T@"NSString",C,N,V_sharedListeningSessionIdentifier
T@"NSString",&,N,V_sharedSessionToken
T@"NSString",&,N,V_externalIdentifier
T@"ICSharedListeningConnectionReport",W,N,V_report
T@?,C,N,V_dataSourceErrorHandler
contentInformationRequest
dataRequest
respondWithData:
finishLoadingWithError:
finishLoading
finishAssetResourceLoadingRequest:withError:
setDialog:
setServerError:
bulkRefreshWaitInterval
setBulkRefreshWaitInterval:
rentalExpirationDate
setRentalExpirationDate:
rentalPlaybackStartDate
setRentalPlaybackStartDate:
serverPlaybackContextData
setServerPlaybackContextData:
setContentKeyContextData:
_dialog
_bulkRefreshWaitInterval
_rentalExpirationDate
_rentalPlaybackStartDate
_serverPlaybackContextData
_contentKeyContextData
T@"ICStoreDialogResponse",C,N,V_dialog
T@"NSError",C,N,V_serverError
TQ,N,V_bulkRefreshWaitInterval
T@"NSDate",C,N,V_rentalExpirationDate
T@"NSDate",C,N,V_rentalPlaybackStartDate
T@"NSData",C,N,V_serverPlaybackContextData
T@"NSData",C,N,V_contentKeyContextData
_updatePhoneNumberAllowingDidChangeNotification:
_ensureTelephonyHandlesAreReady
initWithBundleType:
copyCarrierBundleValue:key:bundleType:error:
copyMobileSubscriberCountryCode:error:
copyMobileSubscriberNetworkCode:error:
getMobileEquipmentInfoFor:error:
slotID
phoneNumberWithDigits:digits:countryCode:
sharedMessageCenter
canonicalFormat
sendSMSWithText:text:serviceCenter:toAddress:
_handleActiveSubscriptionsDidChange
_telephonySubscriptionContext
getUserDefaultVoiceSubscriptionContext:
getActiveContexts:
subscriptions
getPhoneNumber:error:
number
subscriptionInfoDidChange
activeSubscriptionsDidChange
simLessSubscriptionsDidChange
dualSimCapabilityDidChange
suppServicesEvent:event:settingsType:data:
spcUnlockSuccessful:
phoneBookSelected:
phoneBookFetched:
phoneBookWritten:
phoneBookError:
phoneNumberAvailable:
phoneNumberChanged:
suppServicesStarted:
suppServicesCompleted:
suppServicesError:error:
T@"ICTelephonyController",R,N
_telephonyCallbackQueue
_initWithType:participant:
participant
sessionEvent
playbackEvent
queueEvent
reactionEvent
customEvent
_sessionEvent
_playbackEvent
_queueEvent
_reactionEvent
_customEvent
T@"ICLiveLinkIdentity",R,N,V_participant
T@"ICLiveLinkSessionEvent",R,N,V_sessionEvent
T@"ICLiveLinkPlaybackEvent",R,N,V_playbackEvent
T@"ICLiveLinkQueueEvent",R,N,V_queueEvent
T@"ICLiveLinkReactionEvent",R,N,V_reactionEvent
T@"ICLiveLinkCustomEvent",R,N,V_customEvent
localizedMessage
_localizedMessage
T@"NSString",R,C,N,V_localizedMessage
queueEventWithPlaybackModeChanged:
contentAdded
contentPlayedNow
contentRemoved
contentReordered
contentReplaced
contentUpdatedMessage
playbackModeChanged
_contentAdded
_contentPlayedNow
_contentRemoved
_contentReordered
_contentReplaced
_contentUpdatedMessage
_playbackModeChanged
T@"ICLiveLinkQueueEventContentAdded",R,N,V_contentAdded
T@"ICLiveLinkQueueEventContentPlayedNow",R,N,V_contentPlayedNow
T@"ICLiveLinkQueueEventContentRemoved",R,N,V_contentRemoved
T@"ICLiveLinkQueueEventContentReordered",R,N,V_contentReordered
T@"ICLiveLinkQueueEventContentReplaced",R,N,V_contentReplaced
T@"ICLiveLinkQueueEventContentUpdatedMessage",R,N,V_contentUpdatedMessage
T@"ICLiveLinkQueueEventPlaybackModeChanged",R,N,V_playbackModeChanged
containerIdentifier
containerKind
containerMediaIdentifier
_containerIdentifier
_containerKind
_containerMediaIdentifier
T@"NSString",R,N,V_containerIdentifier
Tq,R,N,V_containerKind
T@"NSString",R,C,N,V_containerMediaIdentifier
T@"NSArray",R,C,N,V_itemIdentifiers
startItemIdentifier
_startItemIdentifier
T@"NSString",R,C,N,V_startItemIdentifier
itemIdentifier
_itemIdentifier
T@"NSString",R,C,N,V_itemIdentifier
localizedTitle
_localizedTitle
T@"NSString",R,C,N,V_localizedTitle
initWithUpdatedShuffleType:
initWithUpdatedRepeatType:
initWithUpdatedAutoPlayEnabled:
shuffleType
repeatType
autoPlayEnabled
_shuffleType
_repeatType
_autoPlayEnabled
T@?,R,N,V_shuffleType
T@?,R,N,V_repeatType
T@?,R,N,V_autoPlayEnabled
reactionIdentifier
reaction
_reactionIdentifier
T@"NSString",R,C,N,V_reactionIdentifier
T@"NSString",R,C,N,V_reaction
accountPropertyForKey:
setAccountProperty:forKey:
isEnabledForDataclass:
ams_accountFlagValueForAccountFlag:
ams_setAccountFlagValue:forAccountFlag:
ams_isLocalAccount
ams_automaticDownloadKinds
ic_activeMediaTypes
ic_uniqueIdentifier
ic_setUniqueIdentifier:
ic_setAgeVerificationExpirationDate:
ic_setAutomaticDownloadKinds:
ic_setPrivateListeningEnabledForHomeUsers:
T@"NSNumber",C,N,Sic_setDSID:
T@"NSString",C,N,Sic_setAltDSID:
T@"NSString",C,N,Sic_setFirstName:
T@"NSString",C,N,Sic_setLastName:
T@"NSString",C,N,Sic_setStorefront:
T@"NSNumber",C,N,Sic_setUniqueIdentifier:
ic_sandboxed
TB,N,Gic_isSandboxed,Sic_setSandboxed:
TB,N,Gic_isActiveLockerAccount,Sic_setActiveLockerAccount:
ic_cloudBackupEnabled
TB,R,N,Gic_isCloudBackupEnabled
ic_managedAppleID
TB,N,Gic_isManagedAppleID,Sic_setManagedAppleID:
T@"NSDate",C,N,Sic_setAgeVerificationExpirationDate:
T@"NSNumber",C,N,Sic_setMergeWithCloudLibraryPreference:
ic_subscriptionStatusEnabled
TB,N,Gic_isSubscriptionStatusEnabled,Sic_setSubscriptionStatusEnabled:
ic_localAccount
TB,R,N,Gic_isLocalAccount
T@"NSSet",C,N,Sic_setAutomaticDownloadKinds:
T@"NSNumber",C,N,Sic_setPrivateListeningEnabled:
T@"NSDictionary",C,N,Sic_setCloudLibraryStateReason:
T@"NSDictionary",C,N,Sic_setPrivateListeningEnabledForHomeUsers:
ic_manageable
TB,R,N,Gic_isManageable
_knownMissingBagValuesDictionary
_knownMissingBagSubKeyValuesDictionary
bagValues
_valueForBagKey:
valueWithError:
_logAndReturnFallbackValueForMissingKey:
_urlStringFromBagStringValue:
_knownIncorrectValues
_validateGUIDURLConfigIfNeeded
GUIDURLRegexPatterns
GUIDURLSchemes
scheme
rangeOfFirstMatchInString:options:range:
_shouldMescalSignBodyForURL:withSignatureConfiguration:
initWithURL:MIMEType:expectedContentLength:textEncodingName:
mescalConfigurationForResponse:
initWithBagLibraryDAAPDictionary:
initWithBagEnhancedAudioDictionary:
profileName
setProfile:
setProfileVersion:
buildWithError:
_allBagKeys
initWithPattern:options:error:
setGUIDURLRegexPatterns:
setGUIDURLSchemes:
rangeOfString:options:range:
stringByReplacingCharactersInRange:withString:
_knownOptionalBagKeys
_initWithDictionary:
valueForBagKey:
valuesForBagKeys:
hasValueForBagKey:
int64ValueForBagKey:
mescalConfigurationForRequestURL:
mescalConfigurationForResponseURL:
libraryDAAPConfiguration
canPostKeybagSyncData
_allValues
setBagValues:
convertedActionsCache
setConvertedActionsCache:
requestDate
sourceAccountDSID
amsBag
setAmsBag:
fallbackValues
setFallbackValues:
_bagValues
_convertedActionsCache
_GUIDURLRegexPatterns
_GUIDURLSchemes
_profileName
_profileVersion
_sourceAccountDSID
_amsBag
_fallbackValues
T@"NSDictionary",C,N,V_bagValues
T@"<AMSBagProtocol>",C,N,V_amsBag
T@"NSDictionary",C,N,V_fallbackValues
T@"NSMutableDictionary",&,N,V_convertedActionsCache
T@"NSArray",&,N,V_GUIDURLRegexPatterns
T@"NSSet",&,N,V_GUIDURLSchemes
T@"NSDate",C,N,S_setExpirationDate:,V_expirationDate
T@"ICURLBagRadioConfiguration",R,N
T@"ICURLBagLibraryDAAPConfiguration",R,N
T@"ICURLBagEnhancedAudioConfiguration",R,N
T@"NSDate",R,C,N,V_requestDate
T@"NSString",R,C,N,V_profileName
T@"NSString",R,C,N,V_profileVersion
T@"NSNumber",R,C,N,V_sourceAccountDSID
uppercaseLetterCharacterSet
rangeOfCharacterFromSet:options:range:
_getPlayInfoRequestWithStartDelegationResponse:streamContexts:completionHandler:
_nextSessionUniqueID
allowsSharing
allowsItemLiking
artworkInfo
coreSeedName
descriptionText
attributionLabel
subtype
isSubscriptionRequired
providerResource
T@"ICStoreArtworkInfo",R,C,N
subscriptionRequired
TB,R,N,GisSubscriptionRequired
T@"ICRadioStationProviderResource",R,C,N
prepareStatement:error:
valueForDate:
executePreparedStatement:error:bindings:
dispatchAfterTransaction:
lastChangeCount
_removeAccountForIdentityKey:
_removeTokenForIdentityKey:
_setToken:forIdentityKey:
_isValid
Tq,R,N,V_interactionLevel
_getContentProtectionEnabled:isDeviceClassCUnlocked:
_loadContentProtectionEnabled:isDeviceClassCUnlocked:
T@"ICSecurityInfo",R,N
isDeviceUnlocked
_processFirstUnlockNotification
_hasLoadedDeviceClassCUnlocked
_isDeviceClassCUnlocked
_hasLoadedContentProtectionEnabled
_isContentProtectionEnabled
_firstUnlockNotificationToken
_pendingFirstUnlockBlocks
contentProtectionEnabled
TB,R,N,GisContentProtectionEnabled,V_isContentProtectionEnabled
deviceUnlocked
TB,R,N,GisDeviceUnlocked
deviceClassCUnlocked
TB,R,N,GisDeviceClassCUnlocked,V_isDeviceClassCUnlocked
_isEnabled
_canSubscribe
_isSubscriber
initWithRequestContext:downloadIdentifier:songID:
_downloadIdentifier
_songID
clientInfoForMusicKitRequestWithClientIdentifier:clientVersion:bundleIdentifier:
setBagProfile:
setBagProfileVersion:
_clientInfoForCloudDaemonOriginatedMusicKitRequestWithRequestingBundleIdentifier:
bagSubProfile
bagSubProfileVersion
initWithEnabledMediaKinds:account:bag:presentationDelegate:
perform
resultWithCompletion:
handleAuthenticateRequest:completion:
handleDialogRequest:completion:
T@"NSSet",R,N
_mediaKindsToAdd
_mediaKindsToRemove
_isShadowOperationForRemoteExecution
currentQueue
_setShadowOperationForRemoteExecution:
__shadowOperationForRemoteExecution
_shadowOperationForRemoteExecution
TB,N,G_isShadowOperationForRemoteExecution,S_setShadowOperationForRemoteExecution:,V__shadowOperationForRemoteExecution
T@"<NSSecureCoding>",&,N,V_response
metricsDictionary
stopSubscriptionLeaseWithCompletion:
getKeyStatusListWithCompletionHandler:
initWithDSID:carrierBundleDeviceIdentifier:delegatedDSID:
T@"ICMusicSubscriptionLeaseController",R,N
getLastKnownHouseholdIDWithCompletion:
getLeaseSessionWithRequestContext:completionHandler:
receivedUserInteractionEvent
_accountDSIDToFairPlayKeyStatus
_cacheKeyToLeaseSession
_hasReceivedUserInteractionEvent
_isRemoteServerLikelyReachable
_isServerReachable
_lastKnownHouseholdID
_leaseDidEndNotificationToken
_leaseSessionPreparationOperationQueue
T@"NSNumber",R,C,N,V_delegatedDSID
T@"NSString",R,C,N,V_carrierBundleDeviceIdentifier
setHasActiveCommandsOnly:
hasActiveCommandsOnly
activeCommandsOnly
_activeCommandsOnly
TB,N,V_activeCommandsOnly
_createDefaultSchemaWithConnection:error:
currentVersion
dateForValue:
_updateURLSessionManagedPropertiesForEquivalentStoreURLRequest:
_buildMusicKitURLRequestWithBaseURLRequest:completionHandler:
_setDeveloperToken:
_buildEquivalentStoreURLRequestWithDeveloperToken:completionHandler:
_buildUserTokenBasedMusicKitURLRequestWithBaseURLRequest:developerToken:completionHandler:
T@"ICStoreURLRequest",R,N
T@"ICMusicKitRequestContext",R,C,N
signatureData
_signatureData
T@"NSData",C,N,V_signatureData
T@"NSMutableData",&,N,V_data
initWithSessionIdentifier:identity:bundleID:
setInviteURL:
_inviteURL
T@"NSString",&,N,V_sessionIdentifier
T@"NSString",&,N,V_sessionToken
T@"NSURL",&,N,V_inviteURL
T@"NSString",R,N,V_bundleID
T@"ICLiveLinkIdentity",R,N,V_identity
T@"<ICSharedListeningConnectionControllerDelegate>",W,N,V_delegate
assertion
initWithName:bundleID:subsystem:reason:flags:
setAssertion:
setState:
_handleQRDataSourceError:
connectionWithDataSource:messageCoder:
setConnection:
formattedReport
connectionDidStart:
connection:didReceiveMessage:
connection:didEndWithError:
dataSource
setDelegateQueue:
_dataSource
_assertion
Tq,N,V_state
T@"MSVQRConnection",&,N,V_connection
T@"ICLiveLinkQRConnectionDataSource",R,N,V_dataSource
T@"ICSharedListeningConnectionReport",&,N,V_report
T@"NSObject<OS_dispatch_queue>",&,N,V_delegateQueue
T@"MSVTaskAssertion",&,N,V_assertion
initWithServiceName:
receiveMessageData:
receiveConnectionError:
receiveFatalError:
receiveStartWithSessionIdentifier:sessionToken:inviteURLString:
proxyWithObject:protocol:
populateSessionIdentifier:identity:
sendMessageData:
setXpcConnection:
_initializeConnectionIfNeeded
T@"NSXPCConnection",&,N,V_xpcConnection
_verificationContext
T@"ICUserVerificationContext",R,C,N,V_verificationContext
sharedMonitorForIdentity:identityStore:
_sharedInstanceManager
_endObservingSubscriptionStatus
_effectiveIdentityForRequestingSubscriptionStatus
_beginObservingSubscriptionStatus
_requestSubscriptionStatusWithCachingPolicy:completion:
_initWithIdentityContext:
_handleSubscriptionStatusDidChange:
addObserverForName:object:queue:usingBlock:
_isMonitoringSubscriptionStatusForAutoupdatingIdentity
_updateWithSubscriptionStatus:
sharedMonitorForIdentity:
beginObservingSubscriptionStatusWithHandler:
endObservingSubscriptionStatusWithToken:
refreshSubscriptionStatus
_handleActiveUserIdentityDidChangeRemoteNotification
_identityContext
_notificationHandlers
T@"ICUserIdentity",R,N
T@"ICMusicSubscriptionStatus",R,N,V_subscriptionStatus
_enumerateQueryResults:usingBlock:
_tokenWithSQLiteRow:
_userIdentityWithSQLiteRow:
enumerateDelegationUUIDsForUserIdentity:usingBlock:
enumerateTokensUsingBlock:
enumerateTokensWithType:usingBlock:
identityPropertiesForUserIdentity:
overestimatedNumberOfTokens
tokenForUserIdentity:
isBackgroundRadioRequest
_decorateHeaderPropertiesForURLRequest:withBuilderProperties:
radioContentDictionaryCreationBlock
setBackgroundRadioRequest:
_backgroundRadioRequest
_radioContentDictionaryCreationBlock
backgroundRadioRequest
TB,N,GisBackgroundRadioRequest,V_backgroundRadioRequest
Tq,N,V_protocolVersion
T@?,C,N,V_radioContentDictionaryCreationBlock
handleResponse:forRequest:shouldRetry:
cookiesWithResponseHeaderFields:forURL:
saveCookies:forURL:userIdentifier:
saveGlobalAccountCookies:forURL:
_updateDefaultStorefrontIdentifier:usingIdentityStore:
parsedBodyText
sharedHandler
_verifyMescalSignatureForResponse:toRequest:completionHandler:
processActionFromResponse:withRequestContext:withCompletionHandler:
_performAuthenticationForResponse:toRequest:completionHandler:
_processDialogResponse:toRequest:completionHandler:
updatePropertiesForLocalStoreAccountUsingBlock:completionHandler:
subEvents
setSubEvents:
addSubEvent:
_subEvents
T@"NSString",&,N,V_name
T@"NSDate",&,N,V_startDate
T@"NSDate",&,N,V_endDate
T@"NSMutableArray",&,N,V_subEvents
weakToWeakObjectsMapTable
topLevelEvents
allEvents
stringByPaddingToLength:withString:startingAtIndex:
_addEvents:toReportString:eventLevel:
endEvent:
analyticsPayload
setTopLevelEvents:
setAllEvents:
_topLevelEvents
_allEvents
T@"NSMutableArray",&,N,V_topLevelEvents
T@"NSMapTable",&,N,V_allEvents
T@"NSString",C,N,V_groupSessionIdentifier
discreteProgressWithTotalUnitCount:
initWithRequestContext:leaseID:mediaType:
_itemIdsToRemoves
_repeatModes
_shuffleModes
initWithRequestContext:itemSagaID:
sharedHTTPCookieStorage
cookiesForURL:
_cookieDictionaryForURL:userIdentifier:
getCookiesForUserIdentifier:
setCookies:forURL:mainDocumentURL:
_saveCookies:userIdentifier:
ams_removeCookiesMatchingProperties:
saveVerifiedAccount:withCompletionHandler:
ams_removeAllCookies
_accountForUserIdentifier:
ams_cookiesForURL:
ams_cookies
ams_addCookies:
T@"ICHTTPCookieStore",R,N
getCookiesForURL:
getGlobalAccountCookiesForURL:
saveCookies:forURL:
removeCookiesWithProperties:
removeAllCookies
isToggled
hasBeenPreviouslyToggled
setHasBeenPreviouslyToggled:
_valueDictionary
_isToggled
_hasBeenPreviouslyToggled
T@"NSDictionary",R,C,N,V_itemResponseDictionary
_initializeLocalStoreAccountProperties
_initWithStyle:delegateAccountStoreOptions:
_assertNonNullIdentityStoreForSelector:
_openDelegateAccountStoreWithError:
_dispatchDidChangeNotification:didDelegateAccountStoreChange:
_existingIdentityPropertiesForUserIdentity:error:
_dsidForUserIdentity:error:
insertPropertiesForUserIdentity:andPostAccountChangeNotification:usingBlock:completionHandler:
_saveIdentityProperties:andPostAccountChangeNotification:forUserIdentity:error:
_allowsDelegationForUserIdentity:
_dsidForTimestamp:history:
_refreshLocalStoreAccountPropertiesAllowingDidChangeNotification:
_unregisterForDelegateAccountStoreNotifications:
_registerForDelegateAccountStoreNotifications:
_importValuesFromCodingHelper:
_delegateAccountStoreDidChangeNotification:
_claimSingleWriterStatus
testingIdentityStoreWithDatabasePath:
testingIdentityStoreWithSingleWriterService:
T@"ICUserIdentityStore",R,N
enumerateDelegateTokensUsingBlock:completionHandler:
insertPropertiesForUserIdentity:usingBlock:
setActiveAccountWithDSID:completionHandler:
setActiveLockerAccountWithDSID:completionHandler:
disableLockerAccountWithDSID:completionHandler:
synchronizeWithCompletionHandler:
userIdentitiesForManageableAccountsWithError:
userIdentitiesForAllStoreAccountsWithError:
_unsafe_deleteDelegateAccountStore
_updateDelegateAccountStoreUsingBlock:
_openDelegateAccountStoreForUserIdentity:error:
_icValidStoreAccountsFromACAccounts:
_codingHelper
_delegateAccountStore
_lastKnownActiveAccountTimestamp
_lastKnownActiveLockerAccountTimestamp
T@"<ICUserIdentityStoreBackend>",R,N
T@"ICLocalStoreAccountProperties",R,N
processAction:data:withRequestContext:version:withCompletionHandler:
T@"ICMachineDataActionHandler",R,N
_aspectRatioKeyForAspectRatio:
valueWithCGSize:
initWithVideoArtworkResponseDictionary:
supportedSizesForCRABSVideoForAspectRatio:
CRABSVideoURLMatchingSize:
HLSVideoURLForAspectRatio:
previewFrameArtworkInfoMatchingAspectRatio:
_aspectRatioToCRABSVideoDictionaries
_aspectRatioToHLSVideoURL
_aspectRatioToPreviewFrameArtworkInfo
_stringRepresentation
T@"NSString",R,C,N,V_stringRepresentation
CGSizeValue
initWithStoreIdentifier:trackInfo:
T@"NSDictionary",R,C,N,V_trackInfo
storeItemWithIdentifier:
formattedPrice
price
mainRunLoop
scheduleInRunLoop:forMode:
resolveWithTimeout:
_updateTXTRecordProperties
_setState:
startMonitoring
getInputStream:outputStream:
_resolveWithCompletionHandler:
_netServiceStreamResolutionQueue
_resolutionCompletionHandlers
_txtRecord
T@"NSNetService",R,N,V_netService
_close
_verifiedStatementForPreparedStatement:error:
_executeStatement:error:
_verifiedStatementForSQL:error:
_open
_flushAfterTransactionBlocks
_prepareStatement:error:
_finalizeAllStatements
_performResetAfterCorruptionError
_statementForPreparedStatement:error:
executePreparedQuery:withResults:
executePreparedStatement:error:
options
_afterTransactionBlocks
_database
_didResetForCorruption
_preparedStatements
_transactionDepth
_transactionWantsRollback
T@"ICSQLiteConnectionOptions",R,C,N,V_options
T@"<ICSQLiteConnectionDelegate>",W,N,V_delegate
_prepareParsedBodyResponse
_parsedBodyResponseType
_parsedBodyResponse
_bodyData
_bodyDataURL
T@"NSURLResponse",R,N,V_urlResponse
T@"NSData",R,N,V_bodyData
T@"NSURL",R,N,V_bodyDataURL
_loadCacheDictionary
_saveCachedResponsePayload:eTag:
_cacheFileURL
T@"ICMediaAPIURLMappingProvider",R,N
getCurrentURLMappingSet
updateURLMappingsWithCompletion:
clearCachedURLMappings
setCurrentURLMappingSet:
ic_uintValueForKey:
databaseID
databaseName
isOnlineGeniusForMatchEnabled
playDataBatchIntervalInMinutes
subscribedContainerPollingFrequencySeconds
updatePollingFrequencySeconds
autoUpdatePollingFrequencySeconds
maxSyncRetryIntervalSeconds
_bagDictionary
onlineGeniusForMatchEnabled
TB,R,N,GisOnlineGeniusForMatchEnabled
_handleSubscriptionFairPlayKeyStatusChangedDistributedNotification:
T@"ICMusicSubscriptionFairPlayController",R,N
getKeyStatusForAccountUniqueIdentifier:error:
generateSubscriptionBagRequestWithAccountUniqueIdentifier:transactionType:machineIDData:completionHandler:
_fairPlaySerialQueue
_subscriptionKeyBagStatusCache
itemWithStoreAdamID:
T@"NSData",&,N,V_data
null
streamingContentKeyRequestDataForApp:contentIdentifier:options:error:
setServerPlaybackContextDataCreationHandler:
setContentURI:
makeStreamingContentKeyRequestDataForApp:contentIdentifier:options:completionHandler:
setAsyncServerPlaybackContextDataCreationHandler:
setRequest:
configureUsingAssetResourceLoadingRequest:
contentURI
leaseActionType
rentalID
setRentalID:
skippedRentalCheckout
setSkippedRentalCheckout:
isITunesStoreRequest
serverPlaybackContextDataCreationHandler
asyncServerPlaybackContextDataCreationHandler
shouldIncludeDeviceGUID
requestProtocolType
isOfflineDownload
_skippedRentalCheckout
_ITunesStoreRequest
_shouldIncludeDeviceGUID
_isOfflineDownload
_contentURI
_leaseActionType
_rentalID
_serverPlaybackContextDataCreationHandler
_asyncServerPlaybackContextDataCreationHandler
_requestProtocolType
T@"NSURL",C,N,V_certificateURL
T@"NSString",C,N,V_contentURI
Tq,N,V_leaseActionType
T@"ICRequestContext",C,N,V_requestContext
Tq,N,V_rentalID
TB,N,V_skippedRentalCheckout
ITunesStoreRequest
TB,N,GisITunesStoreRequest,V_ITunesStoreRequest
T@?,C,N,V_serverPlaybackContextDataCreationHandler
T@?,C,N,V_asyncServerPlaybackContextDataCreationHandler
TB,N,V_shouldIncludeDeviceGUID
Tq,N,V_requestProtocolType
TB,N,V_isOfflineDownload
_createSimplifiedProtocolRequestBodyUsingPlaybackContextData:
_createDefaultProtocolRequestBodyUsingPlaybackContextData:
_createServerPlaybackContextUsingCertificateData:completion:
T@"ICSecureKeyDeliveryRequest",C,N,V_request
weakObjectsHashTable
sharedDefaultEvaluator
addObserver:forKeyPath:options:context:
_onQueue_networkConstrained
_onQueue_updateNetworkReachabilityAndNotifyObservers:
_onQueue_loadInitialThermalLevel
_onQueue_updateThermalLevelWithToken:
_handleApplicationDidEnterForegroundNotification:
removeObserver:forKeyPath:context:
_onQueue_currentNetworkType
isExpensive
usesInterfaceType:
_networkTypeFromWatchCarousel
isConstrained
getOperatorName:error:
copyRegistrationStatus:error:
getDataStatus:error:
indicator
_notifyObserversEnvironmentMonitorDidChangeTelephonyStatus
_onQueue_updateTelephonyStateAndNotifyObservers:
observeValueForKeyPath:ofObject:change:context:
T@"ICEnvironmentMonitor",R,N
isCharging
isRemoteServerReachable
currentNetworkLinkQuality
isCurrentNetworkLinkExpensive
isWifiActive
isNetworkConstrained
currentThermalLevel
currentBatteryLevel
telephonyRegistrationStatus
signalInfo
signalStrength
isWiFiActive
_observersLock
_networkPathEvaluator
_thermalNotificationToken
_telephonyStatusIndicator
_dataSubscriptionContext
_cellSignalInfo
_batteryNotificationToken
_powerSourceNotificationToken
_charging
_remoteServerReachable
_remoteServerLikelyReachable
_currentNetworkLinkExpensive
_wifiAssociated
_ethernetWired
_wiFiActive
_networkConstrained
_lastKnownNetworkType
_currentNetworkLinkQuality
_currentThermalLevel
_currentBatteryLevel
_telephonyOperatorName
_telephonyRegistrationStatus
charging
TB,R,N,GisCharging,V_charging
Tq,R,N,V_networkType
Tq,R,N,V_lastKnownNetworkType
remoteServerReachable
TB,R,N,GisRemoteServerReachable,V_remoteServerReachable
remoteServerLikelyReachable
TB,R,N,GisRemoteServerLikelyReachable,V_remoteServerLikelyReachable
TQ,R,N,V_currentNetworkLinkQuality
currentNetworkLinkHighQuality
TB,R,N,GisCurrentNetworkLinkHighQuality
currentNetworkLinkExpensive
TB,R,N,GisCurrentNetworkLinkExpensive,V_currentNetworkLinkExpensive
wifiAssociated
TB,R,N,GisWiFiAssociated,V_wifiAssociated
ethernetWired
TB,R,N,GisEthernetWired,V_ethernetWired
wiFiActive
TB,R,N,GisWiFiActive,V_wiFiActive
networkConstrained
TB,R,N,GisNetworkConstrained,V_networkConstrained
TQ,R,N,V_currentThermalLevel
Td,R,N,V_currentBatteryLevel
T@"NSString",R,C,N,V_telephonyOperatorName
T@"NSString",R,C,N,V_telephonyRegistrationStatus
generateMachineDataForAccountID:returningMachineIDData:otpData:error:
ic_dataWithADIBytes:length:
_destroySession
initWithAccountID:
startWithServerActionData:returningClientData:error:
endWithMessageData:transportKey:error:
maximumQualityOfService
setActiveICloudAccountProperties:
_handleCredentialRequestIdentityPropertiesForSession:
delegationCredentialRequestToSpecificUserIdentity
setDelegationUserIdentityToUUIDs:
_handlePendingDelegationRequestsForSession:
delegationCredentialRequestToIdentityProperties
delegationUserIdentityToUUIDs
pendingResponseCredentialRequests
activeICloudAccountProperties
hasPendingResponses
pendingPropertyLoadCredentialRequests
setDelegationCredentialRequestToSpecificUserIdentity:
setDelegationCredentialRequestToIdentityProperties:
_handleDelegationAccountUUIDsForSession:
credentialRequests
setPendingPropertyLoadCredentialRequests:
_handleIdentityProperties:forIdentity:loadingError:credentialRequest:session:
initWithCredentialRequests:responseHandler:
_handleRequestIndependentPropertiesForSession:
T@"ICUserCredentialProvider",R,N
performCredentialRequest:withResponseHandler:
_delegationDiscoveryCount
_delegationConsumerService
setPendingResponseCredentialRequests:
_activeICloudAccountProperties
_credentialRequests
_delegationCredentialRequestToSpecificUserIdentity
_delegationCredentialRequestToIdentityProperties
_delegationUserIdentityToUUIDs
_maximumQualityOfService
_pendingPropertyLoadCredentialRequests
_pendingResponseCredentialRequests
T@"ICUserIdentityProperties",C,N,V_activeICloudAccountProperties
T@"NSArray",R,C,N,V_credentialRequests
T@"NSMapTable",&,N,V_delegationCredentialRequestToSpecificUserIdentity
T@"NSMapTable",&,N,V_delegationCredentialRequestToIdentityProperties
T@"NSMutableDictionary",&,N,V_delegationUserIdentityToUUIDs
Tq,R,N,V_maximumQualityOfService
T@"NSMutableArray",&,N,V_pendingPropertyLoadCredentialRequests
T@"NSMutableArray",&,N,V_pendingResponseCredentialRequests
_copyLocalStoreAccountPropertiesToOtherInstance:withZone:
_cloudID
TQ,R,N,V_cloudID
T@"NSString",R,C,N,V_lyricsID
Tq,R,N,V_purchasedAdamID
Tq,R,N,V_radioAdamID
Tq,R,N,V_equivalencySourceAdamID
Tq,R,N,V_reportingAdamID
Tq,R,N,V_subscriptionAdamID
initWithResponseTermsDictionary:
_copySubscriptionStatusPropertiesToStatus:withZone:
hasCatalogPlaybackCapability
hasAddToCloudLibraryCapability
isCloudMusicServiceEnabled
isMinorAccountHolder
hasFamily
hasFamilyGreaterThanOneMember
isHeadOfHousehold
isMatchEnabled
hasOfflineSlots
isInFreeTrial
isEligibleForFreeTrial
isPurchaser
isAdministrator
isDiscoveryModeEligible
termsStatusList
carrierBundlingErrorCode
isPartOfBundle
isBundleOnwer
isInGlidePreview
_isMinorAccountHolder
_hasFamily
_hasFamilyGreaterThanOneMember
_isHeadOfHousehold
_isMatchEnabled
_hasOfflineSlots
_isInFreeTrial
_isInGlidePreview
_isEligibleForFreeTrial
_isPurchaser
_isAdministrator
_isDiscoveryModeEligible
_termsStatusList
_cellularOperatorName
_carrierBundlingErrorCode
_isPartOfBundle
_isBundleOwner
_partOfBundle
_bundleOwner
_acceptSilentAuth
cloudMusicServiceEnabled
TB,R,N,GisCloudMusicServiceEnabled
minorAccountHolder
TB,R,N,GisMinorAccountHolder,V_isMinorAccountHolder
TB,R,N,V_hasFamily
TB,R,N,V_hasFamilyGreaterThanOneMember
headOfHousehold
TB,R,N,GisHeadOfHousehold,V_isHeadOfHousehold
matchEnabled
TB,R,N,GisMatchEnabled,V_isMatchEnabled
TB,R,N,V_hasOfflineSlots
inFreeTrial
TB,R,N,GisInFreeTrial,V_isInFreeTrial
eligibleForFreeTrial
TB,R,N,GisEligibleForFreeTrial,V_isEligibleForFreeTrial
purchaser
TB,R,N,GisPurchaser,V_isPurchaser
Tq,R,N,V_sourceType
administrator
TB,R,N,GisAdministrator,V_isAdministrator
discoveryModeEligible
TB,R,N,GisDiscoveryModeEligible,V_isDiscoveryModeEligible
partOfBundle
TB,R,N,GisPartOfBundle,V_partOfBundle
bundleOwner
TB,R,N,GisBundleOnwer,V_bundleOwner
inGlidePreview
TB,R,N,GisInGlidePreview,V_isInGlidePreview
T@"NSArray",R,C,N,V_termsStatusList
T@"NSString",R,C,N,V_phoneNumber
T@"NSString",R,C,N,V_cellularOperatorName
T@"NSString",R,C,N,V_sessionIdentifier
Tq,R,N,V_carrierBundlingErrorCode
T@"NSNumber",R,C,N,V_acceptSilentAuth
setMinorAccountHolder:
setHasFamily:
setHasFamilyGreaterThanOneMember:
setHeadOfHousehold:
setMatchEnabled:
setHasOfflineSlots:
setInFreeTrial:
setEligibleForFreeTrial:
setPurchaser:
setStatusType:
setAdministrator:
setDiscoveryModeEligible:
setTermsStatusList:
setPartOfBundle:
setBundleOwner:
setEligibleOffers:
setInGlidePreview:
setStatusCode:
TB,D,N,GisMinorAccountHolder
TB,D,N
TB,D,N,GisHeadOfHousehold
TB,D,N,GisMatchEnabled
TB,D,N,GisInFreeTrial
TB,D,N,GisEligibleForFreeTrial
TB,D,N,GisPurchaser
TB,D,N,GisAdministrator
TB,D,N,GisDiscoveryModeEligible
Tq,N,V_statusCode
TB,D,N,GisPartOfBundle
TB,D,N,GisBundleOnwer
TB,D,N,GisInGlidePreview
acceptedVersion
_acceptedVersion
_currentVersion
Tq,R,N,V_acceptedVersion
Tq,R,N,V_currentVersion
_processIdentifier
_getWiFiEnabledFromPrefs
_wifiCallBack:
_getWiFiAssociated
setWiFiEnabled:
setWiFiAssociated:
_wifiPreferences
_wiFiEnabled
_wiFiAssociated
wiFiEnabled
TB,N,GisWiFiEnabled,V_wiFiEnabled
wiFiAssociated
TB,N,GisWiFiAssociated,V_wiFiAssociated
_urlForBagEnhancedAudioKey:
bagEnhancedAudioDictionary
setBagEnhancedAudioDictionary:
_bagEnhancedAudioDictionary
T@"NSDictionary",C,N,V_bagEnhancedAudioDictionary
setProcessName:
infoDictionary
_setDefaultBagProfileForClientIdentifier:
bundleRecordWithBundleIdentifier:allowPlaceholder:error:
executableURL
shortVersionString
bundleVersion
_clientInfoCopyWithClass:
T@"ICClientInfo",R,N
_processName
_clientVersion
_bagProfile
_bagProfileVersion
T@"NSString",R,C,N,V_processName
T@"NSString",R,C,N,V_clientIdentifier
T@"NSString",R,C,N,V_clientVersion
T@"NSString",R,C,N,V_bagProfile
T@"NSString",R,C,N,V_bagProfileVersion
setShouldAllowDataForAllNetworkTypes:
setSizeLimit:forNetworkType:
mediaTypeNetworkConstraintsFromURLBag:
shouldAllowDataForWiFiNetworkTypes
sizeLimitForNetworkType:
_dataAllowedFallbackValue
_cellularDataAllowedFallbackValue
_wiFiDataAllowedFallbackValue
_networkTypeToDataAllowed
_networkTypeToSizeLimit
setShouldAllowData:forNetworkType:
setShouldAllowDataForCellularNetworkTypes:
setShouldAllowDataForWiFiNetworkTypes:
_wasSuccessful
TB,R,N,V_wasSuccessful
initWithRequestContext:notificationType:notificationParameters:
_notificationParams
@16@0:8
v16@0:8
v32@0:8@16@?24
v40@0:8@16@24@?32
v24@0:8@?16
v24@0:8@16
v20@0:8B16
@40@0:8@16@24@32
@"NSObject<OS_dispatch_queue>"
@"ICMusicSubscriptionStatusCacheKey"
@"NSMutableDictionary"
@24@0:8@16
@"ICJSSignConfiguration"
@24@0:8^{_NSZone=}16
v32@0:8q16@24
@"NSMutableArray"
@"NSString"
B16@0:8
B24@0:8@16
Q16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@32@0:8q16@24
@40@0:8q16@24@32
q16@0:8
@"NSData"
@"NSDate"
@"_ICLLRadioSource"
{?="position"b1"revision"b1}
@"NSDictionary"
@36@0:8@16q24B32
@24@0:8q16
@"ICStoreRequestContext"
@36@0:8I16@20@28
@44@0:8I16@20@28@36
I16@0:8
@"NSOperationQueue"
@"NSURL"
@"ICFPSAPContext"
@32@0:8@16@24
@48@0:8@16@24@32@40
@24@0:8@?16
v24@0:8q16
@"ICUserIdentity"
@"ICUserIdentityStore"
@"ICStoreDialogResponseHandler"
@"NSXPCListenerEndpoint"
@"_ICLLPlaybackControlSettings"
@"_ICLLQueue"
{?="revision"b1}
v32@0:8@16@24
@"ICLightweightMusicSubscriptionStatusResponse"
#16@0:8
@24@0:8Q16
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
v24@0:8d16
d16@0:8
@"ICIAMApplicationBadge"
@"ICIAMMetricEvent"
@"ICIAMLocalNotification"
@"ICIAMMessageRule"
{?="endDate"b1"startDate"b1"assetPrefetchStrategy"b1"globalPresentationPolicyGroup"b1"maximumDisplays"b1"messageType"b1"modalPresentationStyle"b1"priority"b1"carousel"b1"hasCloseButton"b1"reportingEnabled"b1}
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"NSString"16
@"NSNumber"
v40@0:8q16@24@?32
v48@0:8@16B24q28B36@?40
v32@0:8q16@?24
v40@0:8Q16@24@?32
v32@0:8Q16@24
v64@0:8q16@24@32@40@48@?56
v56@0:8q16@24@32@40@?48
v56@0:8@16@24q32@40@?48
v56@0:8q16@24q32@40@?48
v48@0:8q16q24@32@?40
v48@0:8@16q24@32@?40
v44@0:8@16B24@28@?36
v48@0:8q16@24@32@?40
v48@0:8@16Q24@32@?40
v24@0:8@"ICConnectionConfiguration"16
v40@0:8q16@"ICConnectionConfiguration"24@?<v@?@"NSError">32
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSError"B>24
v48@0:8@"ICConnectionConfiguration"16B24q28B36@?<v@?@"NSError">40
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSError">24
v32@0:8q16@?<v@?@"NSError">24
v40@0:8q16@"ICConnectionConfiguration"24@?<v@?B@"NSError">32
v32@0:8@"ICConnectionConfiguration"16@?<v@?BB>24
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSError"f>24
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSNumber"@"NSError">24
v40@0:8Q16@"ICConnectionConfiguration"24@?<v@?@"NSError">32
v32@0:8Q16@"ICConnectionConfiguration"24
v32@0:8q16@"ICConnectionConfiguration"24
v40@0:8@"NSArray"16@"ICConnectionConfiguration"24@?<v@?@"NSError"@"NSArray">32
v40@0:8Q16@"ICConnectionConfiguration"24@?<v@?@"NSArray"@"NSError">32
v64@0:8q16@"NSString"24@"NSArray"32@"NSArray"40@"ICConnectionConfiguration"48@?<v@?Q@"NSError">56
v56@0:8q16@"NSDictionary"24@"ICCloudItemIDList"32@"ICConnectionConfiguration"40@?<v@?Q@"NSError">48
v56@0:8@"NSDictionary"16@"ICCloudItemIDList"24q32@"ICConnectionConfiguration"40@?<v@?@"NSError">48
v56@0:8q16@"ICCloudAddReferral"24q32@"ICConnectionConfiguration"40@?<v@?@"NSError">48
v48@0:8q16q24@"ICConnectionConfiguration"32@?<v@?@"NSError">40
v48@0:8@"NSString"16q24@"ICConnectionConfiguration"32@?<v@?@"NSDictionary"@"NSError">40
v40@0:8q16@"ICConnectionConfiguration"24@?<v@?@"NSString"@"NSString"@"NSError">32
v40@0:8@"NSArray"16@"ICConnectionConfiguration"24@?<v@?@"NSError">32
v44@0:8@"NSArray"16B24@"ICConnectionConfiguration"28@?<v@?@"NSError">36
v48@0:8q16@"ICCloudAddReferral"24@"ICConnectionConfiguration"32@?<v@?@"NSDictionary"@"NSError">40
v40@0:8@"NSString"16@"ICConnectionConfiguration"24@?<v@?@"NSDictionary"@"NSError">32
v48@0:8@"NSDictionary"16Q24@"ICConnectionConfiguration"32@?<v@?@"NSError">40
v48@0:8@"NSDictionary"16q24@"ICConnectionConfiguration"32@?<v@?@"NSError">40
v40@0:8@"NSArray"16@"ICConnectionConfiguration"24@?<v@?@"NSArray"@"NSError">32
@"NSXPCConnection"
@"<ICCloudServerListenerEndpointProviding>"
{?="participantId"b1"storefront"b1"unreliablePlaybackSyncStatus"b1}
v24@0:8Q16
@"NSArray"
@"ICStoreFinanceItemMetadata"
@?16@0:8
@"ICStoreURLRequest"
@"ICStorePlatformRequestOperation"
@"ICURLSession"
@"ICStorePlatformRequest"
v24@0:8@?<v@?B@"NSString"@"NSError">16
v24@0:8@?<v@?B@"NSError">16
v40@0:8@"NSArray"16@"ICUserIdentity"24@?<v@?B@"NSError">32
v32@0:8@"ICUserIdentity"16@?<v@?B@"NSError">24
v32@0:8@"NSDate"16@?<v@?B@"NSError">24
v40@0:8@"ICUserIdentityProperties"16@"ICUserIdentity"24@?<v@?B@"NSError">32
v40@0:8@"ICDelegateToken"16@"ICUserIdentity"24@?<v@?B@"NSError">32
@"NSError"
{?="bitDepth"b1"bitRate"b1"sampleRate"b1"codec"b1"isSpatialized"b1}
@"ICRadioPlaybackHistoryItem"
v28@0:8d16i24
v24@0:8f16i20
v24@0:8i16i20
v28@0:8q16i24
v28@0:8@16i24
v28@0:8@"NSNumber"16i24
v28@0:8@"NSData"16i24
v28@0:8@"NSString"16i24
@32@0:8^{sqlite3_stmt=}16@24
^{sqlite3_stmt=}16@0:8
@"ICSQLiteConnection"
^{sqlite3_stmt=}
@"ICSQLiteStatement"
v28@0:8B16@?20
v36@0:8@16B24@?28
B32@0:8@16@24
@28@0:8@16B24
@20@0:8B16
v44@0:8@16@24B32@?36
v48@0:8@16@24@32@?40
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"NSSet"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"ICInAppMessageEntry"@"NSError">32
v32@0:8@"ICInAppMessageEntry"16@?<v@?@"NSError">24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSError">16
v44@0:8@"NSString"16@"NSDictionary"24B32@?<v@?@"NSError">36
v40@0:8@"NSString"16@"NSString"24@?<v@?@"ICInAppMessageMetadataEntry"@"NSError">32
v32@0:8@"NSSet"16@?<v@?@"NSDictionary"@"NSError">24
v48@0:8@"ICInAppMessageMetadataEntry"16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v32@0:8@"NSString"16@?<v@?@@"NSError">24
v40@0:8@16@"NSString"24@?<v@?@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?@@"NSError">32
v48@0:8@16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"ICInAppMessageEntry"24@?<v@?@"NSError">32
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@"ICEnvironmentMonitor"16
v44@0:8B16@20@28@?36
@"ICInAppMessageStore"
@"<NSCopying>"
@"NSXPCListener"
@"NSMutableSet"
d24@0:8@16
@"<NSSecureCoding>"
@32@0:8@16Q24
@"_ICLLAddQueueItemsAction"
@"_ICLLClientInfoAction"
@"_ICLLCurrentItemChangeAction"
@"_ICLLCurrentItemTransitionAction"
@"_ICLLDisplayMessage"
@"_ICLLMoveQueueItemAction"
@"_ICLLParticipantChangeAction"
@"_ICLLPlayNowQueueItemsAction"
@"_ICLLPlaybackSyncAction"
@"_ICLLQueueSyncAction"
@"_ICLLReactionAction"
@"_ICLLRemoveQueueItemAction"
@"_ICLLReplaceQueueItemsAction"
@"_ICLLServerNoticeAction"
{?="originatorId"b1"action"b1"displayNotice"b1}
@"_ICLLAutoPlaySource"
{?="revision"b1"trackGenerationSource"b1}
v40@0:8@16@24@32
v24@0:8@"NSNetService"16
v32@0:8@"NSNetService"16@"NSDictionary"24
v32@0:8@"NSNetService"16@"NSData"24
v40@0:8@"NSNetService"16@"NSInputStream"24@"NSOutputStream"32
@"NSNetService"
@"ICDelegationServiceSecuritySettings"
@"<ICDelegationConsumerNetServiceDelegate>"
@"ICADIProvisionSession"
v48@0:8@16@24@32@40
v48@0:8@"ICContentKeySession"16@"NSString"24@"ICSecureKeyDeliveryResponse"32@"NSError"40
@"ICStoreMediaResponseItem"
@"ICURLRequest"
@"ICURLResponse"
@"ICContentKeySession"
@32@0:8@16@?24
@32@0:8q16Q24
{?="insertPositionType"b1"position"b1"revision"b1}
v48@0:8@16@24q32@?40
v48@0:8q16@24q32@?40
v40@0:8q16q24@?32
v40@0:8@16q24@?32
v36@0:8q16B24@?28
v40@0:8q16B24B28@?32
B24@0:8q16
v32@0:8Q16@?24
v32@0:8@16Q24
B32@0:8@16^@24
@"ICConnectionConfiguration"
@"ICCloudServerListenerEndpointProvider"
@"ICCloudClientAvailabilityService"
@"ICCloudClientCloudService"
@"NSObject<OS_dispatch_source>"
v32@0:8@"ICClientInfo"16@?<v@?@"NSString"@"NSError">24
v32@0:8@"ICClientInfo"16@?<v@?B@"NSError">24
@"ICURLBag"
v24@0:8@?<v@?@"NSUUID">16
v32@0:8@"NSUUID"16@?<v@?>24
v32@0:8q16@?<v@?Q@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSError">16
v40@0:8Q16@"ICClientInfo"24@?<v@?@"NSString"@"NSError">32
v48@0:8@"NSString"16Q24@"ICClientInfo"32@?<v@?@"NSString"@"NSError">40
v40@0:8Q16@"ICClientInfo"24@?<v@?@"ICMusicKitTokensResponse"@"NSError">32
@"ICLightweightMusicSubscriptionStatus"
@"ICLibraryAuthServiceClientTokenResult"
@"ICLibraryAuthServiceClientTokenIdentifier"
Q24@0:8@16
@44@0:8@16@24B32^@36
@32@0:8#16^{_NSZone=}24
v20@0:8I16
@"ICLibraryAuthServiceClientTokenResponse"
@"_ICLLQueueQuery"
@"ICMusicSubscriptionStatus"
{?="removeType"b1"revision"b1}
@"ICLibraryAuthServiceBulkClientTokenResponse"
@"NSSet"
@32@0:8@16q24
{?="expirationTimeInterval"b1"sessionID"b1}
B24@0:8@"ICSQLiteConnection"16
@32@0:8@16^@24
@"ICDelegateAccountStoreOptions"
@"ICDelegateAccountStore"
@"ICDelegateAccountStoreXPCWriter"
v28@0:8B16@?<v@?@"NSArray"@"NSError">20
v24@0:8@"NSArray"16
@"ICUserIdentityProperties"
@52@0:8@16Q24I32^@36^@44
B24@0:8^@16
B32@0:8^@16^@24
v32@0:8@"PSYInitialSyncStateObserver"16@"NSUUID"24
v24@0:8@"PSYInitialSyncStateObserver"16
@"NSMapTable"
@"PSYInitialSyncStateObserver"
v24@0:8@"ICDelegationProviderServiceAssertion"16
v32@0:8@"ICDelegationProviderServiceSession"16@"NSError"24
v36@0:8@16@24B32
v24@0:8@"NSNetServiceBrowser"16
v32@0:8@"NSNetServiceBrowser"16@"NSDictionary"24
v36@0:8@"NSNetServiceBrowser"16@"NSString"24B32
v36@0:8@"NSNetServiceBrowser"16@"NSNetService"24B32
@"NSNetServiceBrowser"
@"ICRequestContext"
v24@0:8@"ACAccount"16
@24@0:8^@16
B40@0:8@16@24^@32
@"NSNumber"24@0:8^@16
B32@0:8@"NSNumber"16^@24
@"NSArray"24@0:8^@16
@"ICUserIdentityProperties"32@0:8@"NSNumber"16^@24
@"ICUserIdentityProperties"24@0:8^@16
v32@0:8@"NSNumber"16@?<v@?B@"NSError">24
B40@0:8@"ICUserIdentityProperties"16@"NSNumber"24^@32
@"ICLocalStoreAccountProperties"24@0:8^@16
B32@0:8@"ICLocalStoreAccountProperties"16^@24
@"ICUserVerificationContext"32@0:8@"NSNumber"16^@24
@"ICUserVerificationContext"24@0:8^@16
@"<ICUserIdentityStoreBackendDelegate>"16@0:8
v24@0:8@"<ICUserIdentityStoreBackendDelegate>"16
@"ACMonitoredAccountStore"
@"ACAccount"
@"<ICUserIdentityStoreBackendDelegate>"
@"ICDelegateToken"
{?="dSID"b1}
@"NSDateFormatter"
@"<ICDeveloperTokenProvider>"
@"NSObject<OS_tcc_identity>"
@44@0:8@16q24B32q36
@"_ICLLAddQueueItemsCommand"
@"_ICLLClientInfoCommand"
@"_ICLLCurrentItemChangeCommand"
@"_ICLLCurrentItemTransitionCommand"
@"_ICLLMoveQueueItemCommand"
@"_ICLLPlayNowQueueItemsCommand"
@"_ICLLPlaybackControlSettingsCommand"
@"_ICLLPlaybackSyncCommand"
@"_ICLLReactionCommand"
@"_ICLLRemoveQueueItemCommand"
@"_ICLLReplaceQueueItemsCommand"
{?="command"b1}
@"ACAccountStore"
@"ICStoreDialogResponse"
@"ICPushNotificationsResponse"
@40@0:8@16q24@32
{?="initialAVSyncInitiator"b1}
@32@0:8{_NSRange=QQ}16
^{__CFUserNotification=}16@0:8
v28@0:8B16^{__CFString=}20
@"ICMusicLibraryAuthToken"16@0:8
v24@0:8@"ICMusicLibraryAuthToken"16
@"NSError"16@0:8
v24@0:8@"NSError"16
@"NSDate"16@0:8
v24@0:8@"NSDate"16
@"ICMusicLibraryAuthToken"
{os_unfair_lock_s=I}16@0:8
@"ICLiveLink"
@"NSUUID"
@"NSUUID"24@0:8@"AVPlaybackCoordinator"16
v32@0:8@"AVPlaybackCoordinator"16@"NSDictionary"24
v40@0:8@"AVPlaybackCoordinator"16@"NSDictionary"24@"NSString"32
v40@0:8@"AVPlaybackCoordinator"16@"NSString"24@?<v@?>32
@"AVPlayerPlaybackCoordinator"
@"ICMusicSubscriptionStatusRequest"
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@16@24q32q40
v40@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24@"NSURL"32
v56@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@40@0:8@16Q24q32
v40@0:8@16@24Q32
v40@0:8@16q24q32
@"NSMutableOrderedSet"
@"NSURLSession"
@"ICMediaRedownloadResponse"
@"ICMusicRestoreRequestParameters"
@"ICIAMApplicationMessage"
{?="commandSerialNumber"b1"commandType"b1}
@56@0:8@16Q24@32@40^@48
@40@0:8@16@24Q32
B32@0:8@16Q24
@"AMSBagValue"24@0:8@"NSString"16
v24@0:8@?<v@?@"AMSSnapshotBag"@"NSError">16
@"AMSBagValue"32@0:8@"NSString"16@"ACAccount"24
@"AMSProcessInfo"16@0:8
@32@0:8Q16Q24
B52@0:8I16@20^@28*36^@44
B40@0:8@16^@24^@32
@"_ICLLAvailability"
@"_ICLLNoGenerationSource"
{?="repeatMode"b1"shuffleMode"b1"trackGenerationSource"b1}
(FPContentInfo_=I{VanillaVodkaAttributes_=I^{sinfEntry_}I}{CloudVodkaAttributes_=IIQ}{WHAVodkaAttributes_=IQ})16@0:8
v48@0:8@16@24@?32@?40
@48@0:8#16@24@32^@40
v48@0:8Q16@24@32@?40
v44@0:8@16Q24B32@?36
v48@0:8@16Q24Q32@?40
v48@0:8Q16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v44@0:8@"NSString"16Q24B32@?<v@?@"NSArray"Q@"NSError">36
v32@0:8Q16@?<v@?@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v48@0:8@"NSArray"16Q24Q32@?<v@?@"NSError">40
@32@0:8Q16@24
v40@0:8@16Q24@?32
v40@0:8Q16Q24@?32
v48@0:8@16B24Q28B36@?40
@"ICPlayActivityTable"
@"NSIndexSet"
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
{CGSize="width"d"height"d}
@48@0:8{CGSize=dd}16@32@40
@52@0:8{CGSize=dd}16@32@40B48
^{CGColor=}24@0:8@16
@"ICStoreArtworkSizeInfo"
@"_ICLLPlaybackItemContainer"
@"_ICLLMediaInfo"
{?="contributingParticipantId"b1"sectionType"b1"isExplicit"b1}
v24@0:8@"ICSharedListeningConnectionController"16
v32@0:8@"ICSharedListeningConnectionController"16@"NSError"24
v32@0:8@"ICSharedListeningConnectionController"16@"_ICLLProtocolMessage"24
v24@0:8^v16
v28@0:8@16B24
@"ICSharedListeningQueue"
@"<ICLiveLinkDelegate>"
@"ICLiveLinkPlaybackCoordinatorMedium"
@"ICSharedListeningConnectionController"
@"ICLiveLinkIdentity"
@"ICSharedListeningItem"
v32@0:8@16q24
q24@0:8@16
@"MSVSectionedCollection"
@"ICFPLeaseSyncSession"
@"ICSuzeLeaseSessionConfiguration"
@"<ICSuzeLeaseSessionDelegate>"
@"ICUnfairLock"
@"ICValueHistory"
@"<ICUserIdentityStoreBackend>"
@"ICClientInfo"
v24@0:8@"ICNanoPairedDeviceStatusMonitor"16
v32@0:8@"ICNanoPairedDeviceStatusMonitor"16Q24
v32@0:8@"ICNanoPairedDeviceStatusMonitor"16@"NSUUID"24
{atomic_flag="_Value"AB}
^{MGNotificationTokenStruct=}
@"_ICLLRadioSeed"
@"ICPlayActivityController"
{?="comparisonType"b1"dataType"b1"kind"b1"triggerConditionType"b1}
{?="height"b1"width"b1}
@40@0:8@16^@24^@32
B32@0:8@"NSString"16^@24
@"NSData"40@0:8@"NSString"16^@24^@32
@"NSError"40@0:8@"NSData"16@"NSString"24@"NSDate"32
@"NSError"24@0:8@"NSString"16
v24@0:8@?<v@?@"NSString"@"NSData"@"NSDate"Q^B>16
i24@0:8^{sqlite3=}16
@"NSProgress"16@0:8
@"NSProgress"
@"ICURLResponseHandler"
@"NSURLRequest"
@"NSURLSessionTask"
@"NSObject<OS_dispatch_semaphore>"
@"NSURLResponse"
@"NSMutableData"
@"AVURLAsset"
@"ICURLPerformanceMetrics"
{?="kind"b1}
v32@0:8Q16q24
v40@0:8Q16q24Q32
@"ICLocalStoreAccountProperties"
@"ICMusicAccountNotificationsSettingsResponse"
@"ICIAMImpressionNode"
{?="actionType"b1"pageType"b1"targetType"b1}
@72@0:8@16@24@32@40@48@56@64
@40@0:8@16@24d32
@56@0:8@16q24q32@40@48
@48@0:8@16@24q32@40
@"ICAgeVerifier"
@24@0:8^Q16
{?="date"b1"interval"b1"trigger"b1}
@40@0:8I16I20@24^@32
@"NSNumber"16@0:8
v24@0:8@"NSNumber"16
@"NSArray"16@0:8
@"ICMusicUserState"16@0:8
v24@0:8@"ICMusicUserState"16
@"ICTVUserState"16@0:8
v24@0:8@"ICTVUserState"16
@"ICMusicUserState"
@"ICTVUserState"
v48@0:8@16@24d32@?40
@28@0:8*16I24
@"NSPersonNameComponents"16@0:8
v24@0:8@"NSPersonNameComponents"16
@"NSURL"16@0:8
v24@0:8@"NSURL"16
@"NSUUID"16@0:8
v24@0:8@"NSUUID"16
@"NSPersonNameComponents"
@"_ICLLParticipantQuery"
@"_ICLLPlaybackControlSettingsQuery"
@"_ICLLPlaybackSyncStateQuery"
{?="query"b1}
@"ICStoreDialogResponse"16@0:8
{?="participantId"b1"status"b1}
{?="autoPlayMode"b1"repeatPlayMode"b1"shufflePlayMode"b1}
v40@0:8@"AMSAuthenticateTask"16@"AMSDialogRequest"24@?<v@?@"AMSDialogResult"@"NSError">32
v28@0:8B16@20
v32@0:8d16@24
@"ICDispatchOnce"
@"ICNetworkConstraints"
@"ICDeviceInfo"
@"ICURLResponseAuthenticationProvider"
@36@0:8@16@24B32
@"ICRadioStationTrack"
v40@0:8@"ICDelegationServicePairingSession"16@"NSData"24@?<v@?B@"NSError">32
v32@0:8@"MSVMessageParser"16@"NSData"24
@48@0:8q16@24@32@40
@"<ICDelegationServiceConnectionDelegate>"
@"MSVMessageParser"
@"ICDelegationServicePairingSession"
@"MSVStreamReader"
@"MSVStreamWriter"
@"ICPBDGSRequest"
{?="messageRemovalPolicy"b1"requiresDelegate"b1}
B32@0:8@16q24
B40@0:8@16Q24^@32
B72@0:8^@16^@24Q32Q40@48@56^@64
B80@0:8^@16^@24Q32Q40Q48@56@64^@72
B32@0:8Q16^@24
B84@0:8^@16^@24Q32Q40Q48B56@60@68^@76
@32@0:8@?16Q24
B24@0:8Q16
@"ICPlayActivityEventContainerIDs"
@"ICPlayActivityEnqueuerProperties"
@"NSTimeZone"
@"ICPlayActivityEventItemIDs"
@"ICPlayActivityAudioQualityProperties"
v136@0:8@16@24{?={?=qiIq}{?=qiIq}}32@80{?={?=qiIq}{?=qiIq}}88
v144@0:8@16@24{?={?=qiIq}{?=qiIq}}32@80{?={?=qiIq}{?=qiIq}}88@136
v40@0:8@"NSURLSession"16@"AVAssetDownloadTask"24@"NSURL"32
v136@0:8@"NSURLSession"16@"AVAssetDownloadTask"24{?={?=qiIq}{?=qiIq}}32@"NSArray"80{?={?=qiIq}{?=qiIq}}88
v40@0:8@"NSURLSession"16@"AVAssetDownloadTask"24@"AVMediaSelection"32
v40@0:8@"NSURLSession"16@"AVAggregateAssetDownloadTask"24@"NSURL"32
v40@0:8@"NSURLSession"16@"AVAggregateAssetDownloadTask"24@"AVMediaSelection"32
v144@0:8@"NSURLSession"16@"AVAggregateAssetDownloadTask"24{?={?=qiIq}{?=qiIq}}32@"NSArray"80{?={?=qiIq}{?=qiIq}}88@"AVMediaSelection"136
v40@0:8@"NSURLSession"16@"AVAssetDownloadTask"24@"NSArray"32
@"ICRemoteRequestOperation"
@"ICUserVerificationRequest"
d20@0:8i16
i20@0:8i16
q20@0:8i16
@"ICRadioPlaybackHistory"
@"ICRadioContentReference"
@"ICIAMTriggerCondition"
{?="ruleOperator"b1"type"b1}
v32@0:8q16@?<v@?@"NSXPCListenerEndpoint"@"NSError">24
@32@0:8q16^@24
@"NSXPCListenerEndpoint"32@0:8q16^@24
@56@0:8@16q24@32q40@48
{?="storeAccountID"b1"systemReleaseType"b1"privateListeningEnabled"b1"sBEnabled"b1}
@"ICMusicLibraryAuthTokenStatus"16@0:8
v24@0:8@"ICMusicLibraryAuthTokenStatus"16
@"ICMusicSubscriptionStatus"16@0:8
v24@0:8@"ICMusicSubscriptionStatus"16
@"ICLightweightMusicSubscriptionStatus"16@0:8
v24@0:8@"ICLightweightMusicSubscriptionStatus"16
@"ICMusicUserStateCookies"16@0:8
v24@0:8@"ICMusicUserStateCookies"16
@"ICMusicLibraryAuthTokenStatus"
@"ICMusicUserStateCookies"
@"ICPAPlayActivityEnqueuerProperties"
@"ICPAPlayModeDictionary"
@"ICPAAudioQualityDictionary"
{?="characterDisplayedCount"b1"cloudPlaylistID"b1"containerAdamID"b1"equivalencySourceAdamID"b1"eventDateTimestamp"b1"eventSecondsFromGMT"b1"itemCloudID"b1"itemDuration"b1"itemEndTime"b1"itemStartTime"b1"persistentID"b1"purchasedAdamID"b1"radioAdamID"b1"reportingAdamID"b1"sharedActivityGroupSizeCurrent"b1"sharedActivityGroupSizeMax"b1"stationID"b1"storeAccountID"b1"subscriptionAdamID"b1"tvShowPurchasedAdamID"b1"tvShowSubscriptionAdamID"b1"audioQualityPreference"b1"containerType"b1"displayType"b1"endReasonType"b1"eventType"b1"itemType"b1"mediaType"b1"playbackFormatPreference"b1"reasonHintType"b1"sourceType"b1"systemReleaseType"b1"internalBuild"b1"offline"b1"privateListeningEnabled"b1"sBEnabled"b1"siriInitiated"b1}
@24@0:8#16
^{PairingSessionPrivate=}
@"<ICDelegationServicePairingSessionDelegate>"
{?="revision"b1"type"b1}
@"ICPBDGSFinishDelegationResponse"
@"ICPBDGSStartDelegationResponse"
{?="requestUniqueID"b1}
v36@0:8@"NSNumber"16B24@?<v@?@"ICLibraryAuthServiceClientTokenResult"@"NSError">28
v36@0:8@"NSSet"16B24@?<v@?@"NSDictionary"@"NSError">28
v40@0:8@"ICLibraryAuthServiceClientTokenResult"16@"NSNumber"24@?<v@?@"NSError">32
@"AFMultiUserConnection"
@32@0:8r^v16@24
r^v16@0:8
@"ICPlayInfoResponse"
{?="sessionID"b1}
@44@0:8@16B24@28@36
@"NSRecursiveLock"
@"ICMusicSubscriptionLeaseStatus"
@"<ICMusicSubscriptionLeaseSessionDelegate>"
v24@0:8@?<v@?B>16
{?="type"b1}
@"ICSAPSession"
{?="position"b1"positionType"b1"revision"b1}
@"NSUserDefaults"
^{__CFRunLoopSource=}16@0:8
v24@0:8^{__CFRunLoopSource=}16
^{__CFRunLoopSource=}
v32@0:8^{__CFUserNotification=}16@?24
v32@0:8^{__CFUserNotification=}16Q24
@56@0:8@16@24q32@40@48
@"ICAddToWishListResponse"
v24@0:8@?<v@?@"ICStorePlatformMetadata"^B>16
@"ICStorePlatformMetadata"24@0:8@"NSString"16
@32@0:8@16B24B28
{?="payload"b1}
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v32@0:8@"ICUserIdentity"16@?<v@?@"NSError">24
v40@0:8@16@?24@?32
q24@0:8q16
v36@0:8Q16B24@28
@"MSVDefaultDictionary"
@"ICPBDGSResponse"
@"ICPBDGSFinishDelegationRequest"
@"ICPBDGSStartDelegationRequest"
{?="uniqueID"b1}
v64@0:8q16q24q32@40@48@?56
v36@0:8B16@20@?28
v64@0:8q16q24q32@"ICConnectionConfiguration"40@"NSDate"48@?<v@?@"NSError">56
v48@0:8q16@"NSString"24@"ICConnectionConfiguration"32@?<v@?@"NSError">40
v36@0:8B16@"ICConnectionConfiguration"20@?<v@?@"NSError">28
v56@0:8q16q24q32@40@?48
v36@0:8@16i24@28
v32@0:8@16i24i28
v36@0:8@16@24i32
v36@0:8@"CTXPCServiceSubscriptionContext"16i24@"CTDataConnectionStatus"28
v32@0:8@"CTXPCServiceSubscriptionContext"16i24i28
v28@0:8@"CTXPCServiceSubscriptionContext"16B24
v36@0:8@"CTXPCServiceSubscriptionContext"16@"NSNumber"24i32
v24@0:8@"CTXPCServiceSubscriptionContext"16
v24@0:8@"CTServiceDescriptor"16
v32@0:8@"CTXPCServiceSubscriptionContext"16@"NSArray"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTDataStatus"24
v28@0:8@"CTXPCServiceSubscriptionContext"16i24
v24@0:8@"CTDataSettings"16
v24@0:8@"CTDataConnectionStatus"16
v24@0:8@"CTDataStatusBasic"16
v24@0:8@"CTDataStatus"16
v24@0:8@"CTTetheringStatus"16
v28@0:8@"CTTetheringStatus"16i24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTServiceDisconnectionStatus"24
v28@0:8@"CTServiceDescriptor"16B24
v28@0:8B16q20
@"RadiosPreferences"
^{__CTServerConnection=}
@"CoreTelephonyClient"
v24@0:8@"ICDelegationServiceConnection"16
v32@0:8@"ICDelegationServiceConnection"16@"NSError"24
B32@0:8@"ICDelegationServiceConnection"16@"ICPBDGSRequest"24
@56@0:8@16@24@32@40@48
@"ICDelegationServiceConnection"
@"<ICDelegationProviderServiceSessionDelegate>"
@"ICDelegationProviderServiceProtocolHandler"
@"ICDelegationProviderNetService"
{?="list"^i"count"Q"size"Q}
{?="demarkationPos"b1"explicitSetting"b1"revision"b1}
@"_ICLLActionMessage"
@"_ICLLCommandMessage"
@"_ICLLErrorMessage"
@"_ICLLQueryMessage"
v36@0:8B16@20@28
@"ICDelegationPlayInfoRequestOperation"
@"ICDelegationPlayInfoRequest"
@"ICIAMSynchronizeMessagesResponse"
v32@0:8@"ICRemoteRequestOperationExecutionContext"16@?<v@?@"ICRemoteRequestOperationExecutionResponse">24
B40@0:8@16@24@32
v32@0:8@"AVContentKeySession"16@"AVContentKeyRequest"24
v32@0:8@"AVContentKeySession"16@"AVPersistableContentKeyRequest"24
v40@0:8@"AVContentKeySession"16@"NSData"24@32
v40@0:8@"AVContentKeySession"16@"AVContentKeyRequest"24@"NSError"32
B40@0:8@"AVContentKeySession"16@"AVContentKeyRequest"24@"NSString"32
v24@0:8@"AVContentKeySession"16
v32@0:8@16B24B28
@"AVContentKeySession"
@"<ICContentKeyStoreProtocol>"
@"ICFileContentKeyStore"
@"<ICContentKeySessionDelegateProtocol>"
@"AMSMediaTokenService"
@44@0:8q16B24@28@36
@"ICStoreDialogResponseButtonAction"
{?="code"b1"contentTypeCode"b1}
v40@0:8@"ICMusicSubscriptionStatusResponse"16@"NSUUID"24@"NSError"32
B32@0:8@16@?24
v40@0:8@"ICDelegationConsumerNetService"16@"NSInputStream"24@"NSOutputStream"32
@"ICDelegationConsumerNetService"
@"ICDelegationConsumerServiceProtocolHandler"
@"ICDelegationConsumerServiceRequest"
@"IDSService"16@0:8
@"IDSAccount"16@0:8
@"NSDictionary"16@0:8
@?<v@?@"NSObject<OS_sec_protocol_metadata>"@"NSObject<OS_sec_trust>"@"NSObject<OS_dispatch_queue>"@?<v@?B@"NSError">>16@0:8
@"IDSService"
@"ICSharedListeningConnectionReport"
@"IDSAccount"
@"IDSPseudonym"
@"MSVTimer"
v40@0:8@16i24i28@32
v40@0:8@"CTXPCServiceSubscriptionContext"16i24i28@"CTSuppServicesNotificationData"32
v32@0:8@"CTXPCServiceSubscriptionContext"16@"NSError"24
@"CTXPCServiceSubscriptionContext"
@"ICLiveLinkSessionEvent"
@"ICLiveLinkPlaybackEvent"
@"ICLiveLinkQueueEvent"
@"ICLiveLinkReactionEvent"
@"ICLiveLinkCustomEvent"
@"ICLiveLinkQueueEventContentAdded"
@"ICLiveLinkQueueEventContentPlayedNow"
@"ICLiveLinkQueueEventContentRemoved"
@"ICLiveLinkQueueEventContentReordered"
@"ICLiveLinkQueueEventContentReplaced"
@"ICLiveLinkQueueEventContentUpdatedMessage"
@"ICLiveLinkQueueEventPlaybackModeChanged"
@48@0:8@16q24@32@40
@56@0:8@16q24@32@40@48
@96@0:8@16@24@32@40@48@56@64@72@80@88
@"<AMSBagProtocol>"
v32@0:8^B16^B24
v24@0:8B16B20
v32@0:8@"AMSAuthenticateRequest"16@?<v@?@"AMSAuthenticateResult"@"NSError">24
v32@0:8@"AMSDialogRequest"16@?<v@?@"AMSDialogResult"@"NSError">24
v64@0:8@16@24@32@40@48@?56
v64@0:8@"ICMusicSubscriptionLeaseSession"16@"ICMusicSubscriptionLeasePlaybackRequest"24@"ICMusicSubscriptionPlaybackResponse"32@"NSError"40@"NSArray"48@?<v@?@"ICMusicSubscriptionLeaseStatus"@"NSDate">56
v32@0:8@"ICMusicSubscriptionLeaseSession"16@?<v@?@"ICMusicSubscriptionLeaseStatus"@"NSError">24
{?="commandSerialNumber"b1"dSID"b1"activeCommandsOnly"b1}
@24@0:8d16
v32@0:8@"ICMusicSubscriptionStatusRequest"16@"NSUUID"24
@"<ICSharedListeningConnectionControllerDelegate>"
v24@0:8@"MSVQRConnection"16
v32@0:8@"MSVQRConnection"16@24
v32@0:8@"MSVQRConnection"16@"NSError"24
@"MSVQRConnection"
@"ICLiveLinkQRConnectionDataSource"
@"MSVTaskAssertion"
v24@0:8@"NSData"16
v40@0:8@"NSString"16@"NSString"24@"NSString"32
v32@0:8@"NSString"16@"ICLiveLinkIdentity"24
@"ICUserVerificationContext"
@"ICUserIdentityContext"
{?="accountID"b1"sessionID"b1}
v32@0:8@"NSString"16@"NSString"24
v32@0:8@"NSString"16@"NSError"24
v40@0:8@16@24q32
@40@0:8@16@24q32
{?="autoPlay"b1}
@32@0:8B16B20@24
v24@0:8@"<ICUserIdentityStoreBackend>"16
v32@0:8@?16@?24
v40@0:8q16@?24@?32
v44@0:8@16B24@?28@?36
B20@0:8B16
v24@0:8:16
B44@0:8@16B24@28^@36
@"ICUserIdentityStoreCoding"
v56@0:8@16@24@32q40@?48
@32@0:8{CGSize=dd}16
@"ICDelegationNetServiceTXTRecord"
B40@0:8@16^@24@?32
^{sqlite3=}
@"<ICSQLiteConnectionDelegate>"
@"ICSQLiteConnectionOptions"
I24@0:8@16
@32@0:8Q16^@24
v44@0:8Q16I24@28@?36
v52@0:8Q16I24@28@36@?44
@"ICSecureKeyDeliveryRequest"
{?="participantId"b1"code"b1}
v48@0:8@16@24@32^v40
@"NSHashTable"
{os_unfair_recursive_lock_s="ourl_lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"ourl_count"I}
@"NWPathEvaluator"
B48@0:8Q16^@24^@32^@40
v56@0:8@16@24@32@40@48
@"ICDelegationConsumerService"
v32@0:8@16^{_NSZone=}24
Q36@0:8q16q24B32
^{__SCPreferences=}
{?="commandSerialNumber"b1}
#BSYb
#)2Q
NQTWZ]`c
*-0369<?BEHK
#BKj
7HNWr
#BSr{
!$'*-
#BS\o
#,KT
7HQd
3RVi
2Ed{/
]bglqv{
#&5),
%(+.
*8CQ_my
)HNm
)17Vu{
2,,,
!%)-
#4EMMMMMMQW]
)HYpv
$*05
#BSr
!=Zw
!(/6
#)HR
 //2
ICMusicSubscriptionStatusCacheDidChangeNotification
ICMusicSubscriptionStatusCacheUnderlyingCachingPropertiesDidChangeNotification
com.apple.itunescloud.ICMusicSubscriptionStatusDidChangeDistributedNotification
lastKnownOSVersion
lastKnownActiveDSID
responses
com.apple.iTunesCloud.ICMusicSubscriptionStatusCache.accessQueue
com.apple.iTunesCloud.ICMusicSubscriptionStatusCache.calloutQueue
com.apple.iTunesCloud.ICMusicSubscriptionStatusCache.persistenceQueue
v16@?0@"ICMusicSubscriptionStatusCacheKey"8
ICMusicSubscriptionStatusCache.m
Caching a non final subscription status request is not allowed: %@.
v32@?0@"ICMusicSubscriptionStatusCacheKey"8@"ICMusicSubscriptionStatusResponse"16^B24
B32@?0@"NSURLQueryItem"8q16^B24
v32@?0q8@"NSString"16^B24
%@ %@
impressionType
recoAlgoId
Missing required expirationDate
Type: CloudCredentials
Type: PICRequest
Expires: %@
Data: %ld Bytes
%@ [%@]
revision
position
items
preferredPlayItemId
queueContext
radioSource
keybag
token
POST
true
guid
companion-guid
isRequestingSlot
statusCode
v16@?0@"NSDictionary"8
com.apple.iTunesCloud.ICSAPSession.SharedAccessQueue
@"ICSAPSession"16@?0@"NSArray"8
com.apple.iTunesCloud.ICSAPSession.calloutQueue
com.apple.iTunesCloud.ICSAPSession.prepareFairPlayContextOperationQueue
reactionId
reaction
itemId
ICStoreRequestContext.m
Invalid parameter not satisfying: %@
identityStore != nil && identity != nil
<%@: %p [%@/%@; %@]>
%@/%@
 (Macintosh; OS X %@)
 AppleWebKit/%@
 %@/%@
 AppleTV/%@
 model/%@
 hwp/%@
 build/%@
dt:%d
 (%@)
delegatedIdentity
identity
identityStore
storeDialogResponseHandler
allowsExpiredBags
personalizationStyle
Mutation not allowed beyond initialization.
Frameworks
WebKit.framework
MSVHasher+Algorithms.h
Cannot append to unknown hasher algorithm
MSVHasher+SipHash.h
_MSVHasher_SipHash_1_3_Append64: invalid byte count detected [byteCount & 7, tail == 0]: %lld
_MSVHasher_SipHash_1_3_Append64: invalid byte count detected [byteCount & 3]: %lld
_MSVHasher_SipHash_1_3_Append32: invalid byte count detected [byteCount & 7, tail == 0]: %lld
_MSVHasher_SipHash_1_3_Append32: invalid byte count detected [byteCount & 3]: %lld
Cannot obtain hash from unknown hasher algorithm
Cannot finalize unknown hasher algorithm
queue
controlSettings
titleMessage
detailMessage
settings
identifier
target
messageType
carousel
priority
templateURL
maximumDisplays
startDate
endDate
hasCloseButton
contentPages
rule
webArchiveURL
modalPresentationStyle
globalPresentationPolicyGroup
assetPrefetchStrategy
holdoutEvent
localNotification
impressionEvent
presentationTriggers
applicationBadge
reportingEnabled
Banner
Modal
Native
Notification
(unknown: %i)
Card
Fullscreen
Normal
Restricted
Immediate
Never
xpab
itfe
ICMusicUserStateCookies.m
Attempt to mutate after being initialized.
library-artist
use-artist
artist-name
rep-cloud-id
artist-id
com.apple.itunescloudd.ICCloudClientCloudService.serial.queue
participantId
externalId
participantUUID
storefront
unreliablePlaybackSyncStatus
metadata
downloadKey
flavor
sinfs
fileSize
file-size
asset-info
vacToken
fileExtension
null
NSData * _Nonnull MSVDataFromHexString(NSString * _Nonnull __strong)
NSString+MSVAdditions.h
Passed non-hex string into MSVDataFromHexString: %@
LWHQ
1080p
720p
hdmv
480p
SDMV
com.apple.iTunesCloud.ICStorePlatformRequestOperation.accessQueue
Failed to run SP lookup
%.0f
buster
events
override-headers
auto-play-mode
build-features
build-version
container-id
container-ids
container-type
device-name
dsid
end-position-in-milliseconds
end-reason-type
enqueuer
external-identifier
feature-name
household-id
internal-build
type
media-duration-in-milliseconds
media-type
offline
persistent-id
personalized-container-id
player
play-mode
private-enabled
queue-grouping-id
event-reason-hint-type
reco-data
repeat-play-mode
bundle-id
bundle-version
sb-enabled
siri-initiated
shuffle-play-mode
source-type
start-position-in-milliseconds
store-front
timed-metadata
milliseconds-since-play
track-info
event-type
shared-activity-devices-current
shared-activity-devices-max
utc-offset-in-seconds
display-type
character-displayed-count
lyric-language
audio-quality-targeted
audio-quality-provided
user-preference-audio-quality
user-preference-playback-format
album-adam-id
artist-adam-id
cloud-album-id
cloud-playlist-id
global-playlist-id
playlist-version-hash
station-hash
station-personalized-id
station-id
auc-adam-id
cloud-id
lyric-id
purchased-adam-id
radio-adam-id
orig-sf-adam-id
reporting-adam-id
subscription-adam-id
audio-sample-rate-in-hz
audio-bit-depth
bit-rate-in-bps
codec
audio-channel-type
playback-format
%llu
11-15
16-20
21-25
song
feature-movie
music-video
tv-episode
itemName
sort-name
artistName
sort-artist
artistId
playlistName
sort-album
playlistArtistName
composerName
sort-composer
genre
genreId
playlistId
discCount
discNumber
trackCount
trackNumber
duration
explicit
year
bitRate
comments
dateAdded
bitrate
gapless
isMasteredForItunes
kind
sampleRate
versionRestrictions
compilation
copyright
rank
releaseDate
yyyy-MM-dd'T'HH:mm:ss'Z'
en_US_POSIX
vendorId
com.apple.itunescloud.delegate-account-store
ICError
Unknown
NotSupported
Timeout
Cancelled
SerializationFailed
FirstUnlockRequired
PrivacyAcknowledgementRequired
ItemNotFound
OperationNotAllowed
DaemonConnectionEstablishmentFailed
DaemonConnectionMessageSendingFailed
NotEnoughMemory
ConnectionFailed
InvalidRequest
InvalidResponse
RetryRequired
ResourceUnavailable
BagLoadingFailure
BagMissingKey
BagInvalidValueType
MissingCertificateData
InvalidUserIdentity
AccountNotFound
AuthenticationNotAllowed
AuthenticationFailed
SiriServiceUnavailable
SiriServiceFailed
FairPlayHardwareInfoInvalid
FairPlayContextCreationFailed
FairPlayInvalidData
FairPlayMissingSICData
MusicSubscriptionCannotInitiateLease
MusicSubscriptionCarrierBundlingHeaderEnrichmentFailed
MusicSubscriptionCapabilityMissing
DatabaseCouldNotOpen
DatabaseReadOnly
DelegationServiceStreamResolutionFailure
DelegationServiceStreamPreparationFailure
DelegationServiceStreamClosed
DelegationServiceInvalidMessage
DelegationServiceDataDecryptionFailure
DelegationServiceDataEncryptionFailure
DelegationServiceSecuritySettingsLoadingFailure
InvalidAuthenticationToken
TelephonyFailedToSendTextMessage
MusicUserTokenRevoked
MusicUserTokenFetchingUnauthorized
MusicUserTokenFetchingFailed
MusicUserTokenCachingFailed
MusicUserTokenInvalidationFailed
DeveloperTokenFetchingFailed
DeveloperTokenInvalidationFailed
DeveloperTokenFormatUnsupported
AssetDownloadSessionUnavailable
AssetDownloadMediaResponseItemInvalid
AssetDownloadMediaServicesLost
UnknownCode/%lld
ICStoreServerError
AccountMissing
SecureTokenMissing
WeakTokenMissing
BadToken
ExpiredToken
ASNTokenMissing
StreamingSlotTransferWarning
StreamingSlotLimit
StreamingSlotTaken
StreamingSlotTakenWithFamilyUpsell
ContentRestoreNotAvailable
PodcastEpisodeNotFound
AgeVerificationRequiredForExplicitContent
UpgradeToPerformAgeVerification
LinkAccountToPerformAgeVerification
SuzeLeaseNoSlotsAvailable
SuzeLeaseMissingDSID
SuzeLeaseMissingGUID
SuzeLeaseMissingMediaKind
SuzeLeaseMissingClientData
SuzeLeaseInvalidAuthenticationToken
SuzeLeaseMissingLeaseID
SuzeLeaseExceptionThrown
SuzeLeaseServerCacheMissingLeaseKey
ICMusicSubscriptionCarrierBundlingServerError
StorefrontMismatch
PhoneNumberPortingException
ICRadioServerError
UserOptedOut
UserNotOptedIn
NoStationMatch
FallbackStationFound
PlayHistoryClearFailed
UserIsFreeloader
UnableToReturnTracks
NoAvailableVersion
SharedStationWasDeleted
SharedStationNotAvailableForStorefront
StationNotShared
StationSubscriptionFailure
TermsAndConditionsNotAccepted
HeartbeatInvalid
InvalidStation
StreamingSlotLimitReached
SKDKeyCreationFailure
SubscriptionLeaseError
SubscriptionRequired
RestrictedLocation
ICKeyServerError
NoOfflineSlot
ICMediaUserStateError
FailedToCreateSynchronousServer
FailedToCreateAsynchronousServer
FailedToForceRefreshUserState
ICFairPlayError
ICSQLiteError
ICMusicKitServerError
failureType
status
errorCode
Eligibility response not valid %@
fuseCarrierBundleStatus
checkBack
startFuseHeaderEnrichment
startFuseManualSms
hasFuseCarrierBundleSubscription
fuseHeaderEnrichmentMessage
fuseHeaderEnrichmentSessionId
fuseHeaderEnrichmentUrl
fuseSilentSMSMessage
fuseSilentSMSNumber
fuseSmsSessionId
waitTime
isFamily
bitDepth
channelLayoutDescription
isSpatialized
skips-used
skips
stationID
tracks
curIndex
v16@?0@"NSMutableArray"8
store
containerID
Statement already finalized
ICAgeVerificationStateDidChangeNotification
com.apple.iTunesCloud.ICAgeVerificationManager.serialAccess
com.apple.iTunesCloud.ICAgeVerificationManager.concurrentCallout
apple
keychain-access-groups
v16@?0@"ICAgeVerificationState"8
Error retrieving properties for account %@ during age verification - Explicit content allowed and marked with 'E'.
ICAgeVerificationManager - Error retrieving bag during age verification
ICAgeVerificationManager.m
Bag should never be nil when no error was provided
korea
<%@: %p; {
    developerToken: "%@",
    userToken: "%@",
    userTokenFetchingError: %@
Failed to decode valid developer token while initializing instance of ICMusicKitTokensResponse from decoder.
com.apple.itunescloud.in-app-message-service
ICInAppMessagesDidChangeNotification
com.apple.itunescloud.ICInAppMessagesDidChangeDistributedNotification
com.apple.iTunesCloud.ICInAppMessageManager.operationQueue
com.apple.iTunesCloud.ICInAppMessageManager.downloadOperationQueue
com.apple.iTunesCloud.ICInAppMessageManager.accessQueue
v24@?0@"ICInAppMessageEntry"8@"NSError"16
com.apple.iTunesCloud.ICInAppMessageManager.addMessage
com.apple.iTunesCloud.ICInAppMessageManager.updateMessage
com.apple.iTunesCloud.ICInAppMessageManager.removeMessageWithIdentifier
com.apple.iTunesCloud.ICInAppMessageManager.removeAllMessagesForBundleIdentifier
music://itunes.apple.com
content-identifier
title
body
level
alert
MusicAlertMessage
_url
actionType
actionUrl
eventType
notificationAction
eventVersion
notificationId
targetType
notification
topic
xp_amp_notifications
notificationType
Content
details
notificationSubtype
content-available
ams_%@
_bid
notificationRequest
language
platformId
platformName
com.apple.iTunesCloud.ICInAppMessageManager.syncMessages
com.apple.iTunesCloud.ICInAppMessageManager.resetMessages
com.apple.iTunesCloud.ICInAppMessageManager.reportEvents
com.apple.iTunesCloud.ICInAppMessageManager.flushEvents
com.apple.iTunesCloud.ICInAppMessageManager.downloadResourcesForMessageWithIdentifier
v24@?0@"ICInAppMessageMetadataEntry"8@"NSError"16
com.apple.iTunesCloud.ICInAppMessageManager.updateMetadata
com.apple.iTunesCloud.ICInAppMessageManager.clearMetadataForMessageIdentifier
com.apple.iTunesCloud.ICInAppMessageManager.handleAccountChange
com.apple.itunescloud.ICInAppMessageManager.periodic-poll-activity
v16@?0@"NSObject<OS_xpc_object>"8
v24@?0@"ICInAppMessageConfiguration"8@"NSError"16
v24@?0@"ICIAMSynchronizeMessagesResponse"8@"NSError"16
com.apple.iTunesCloud.ICInAppMessageManager.performSyncRetryIfPending
com.apple.iTunesCloud.ICInAppMessageManager.setShouldDownloadResources
com.apple.iTunesCloud.ICInAppMessageManager.downloadMessageResources
InAppMessages
ResourceCache
com.apple.iTunesCloud.ICInAppMessageManager.performCacheConsistencyCheck
Remove
RemoveAll
Reset
date
remoteRequestOperationResponseClassName
remoteRequestOperationResponse
remoteRequestOperationError
Attempted to decode an instance of ICRemoteRequestOperationExecutionResponse with an unallowed class name for remoteRequestOperationResponse: %@.
Failed to look up class of developer token provider with name: %@.
Attempted to encode an instance of ICRemoteRequestOperationExecutionResponse with an unallowed class name for remoteRequestOperationResponse: %@.
salableAdamId
originatorId
playbackSync
addItems
removeItem
moveItem
currentItemChange
participantChange
serverNotice
clientInfo
replaceQueueItems
playNowQueueItems
currentItemTransition
queueSync
action
originatorUUID
displayNotice
displayMessage
autoPlay
radio
trackGenerationSource
com.apple.iTunesCloud.ICDelegationConsumerNetService.accessQueue
com.apple.iTunesCloud.ICDelegationConsumerNetService.netServiceQueue
com.apple.iTunesCloud.ICDelegationConsumerNetService.calloutQueue
local.
purchaseHistory
match
music
movie
musicvideo
tvshow
Failed to create an ICURLSession instance
Invalid ICStoreMediaResponseItem object (assetURL=nil)
com.apple.iTunesCloud.ICMediaAssetDownloadRequest.
discretionary.
power.
wifi.
failDownloadOnConstrainedNetworks.
downloadKey=%@
com.apple.iTunesCloud.ICURLSessionManager.accessQueue
UserInteractive
UserInitiated
Utility
Background
com.apple.iTunesCloud.ICURLSessionManager.%@.max%lu
com.apple.SessionTrackerApp
application/json
application/gzip
insertPositionType
mediaId
com.apple.iTunesCloud.ICCloudClient.serial.access
com.apple.iTunesCloud.ICCloudClient.serverSetupQueue
com.apple.itunescloud.setupcompleted
name
disabled
enabled
v24@?0@"NSNumber"8@"NSError"16
v16@?0@"NSArray"8
v24@?0@"NSError"8@"NSArray"16
v16@?0B8B12
v20@?0@"NSError"8f16
com.apple.itunescloudd.jaliscoUpdateInProgressChanged
com.apple.itunescloudd.sagaUpdateInProgressChanged
ICCloudClient.m
userIndentityStore cannot be nil
userIndentity cannot be nil
HasMigratedMusicMatchCellularDataSwitch
com.apple.mobileipod
AllowMatchOnCellular
AllowAutoDownloadOnCellular
com.apple.itunesstored
com.apple.itunesstored.autodownloaddefaultschange
HasMigratedMusicDownloadsOnCellularDataSwitch
AllowsCellularDataDownloads
com.apple.Music
com.apple.Music-AllowsCellularDataDownloads
unknown reason
initial load
push notification
user initiated poll
periodic poll
periodic reload
user initiated reload
app launch poll
edit initiated poll
edit error reload
subscribed playlist periodic poll
subscribed playlist TTL refresh
subscribed playlist manual refresh
supported sync media types changed
deferred push notification
ICAddToPlaylistBehaviorUndecided
ICAddToPlaylistBehaviorAlwaysAddToLibrary
ICAddToPlaylistBehaviorOnlyAddToPlaylist
ML3MusicLibrary
Class getML3MusicLibraryClass(void)_block_invoke
Unable to find class %s
void *MusicLibraryLibrary(void)
com.apple.iTunesCloud.ICAsyncBlockOperation.accessQueue
com.apple.iTunesCloud.ICRemoteRequestOperationController.accessQueue
v16@?0@"ICRemoteRequestOperationExecutionResponse"8
songId
artworkURL
cancel-download-url
download-id
purchased-redownload
purchaseDate
redownload-parameters
lease-id
assets
v24@?0@"ICRadioFetchMetadataResponse"8@"NSError"16
fetchMetadata
allowed-kinds
allowed-match-status
gzip
com.apple.storekit.cloud-service-exempted-from-tcc-access
<%@: %p
; lightweightSubscriptionStatus = %@
lightweightSubscriptionStatus
resultCode
serverHostName
serverInstance
success
result
%@ resultCode=%d token=%@
generatedAtMillis
timeToLiveMillis
lifespanMillis
tokenID
<private>
%@: [%@, expires %@]
tokenString
ttlMillis
deviceGUID
unresolved
signed out
Active Account: <%@>
Active Locker Account: <%@>
Autoupdating Active Account
Autoupdating Active Locker Account
Carrier Bundle: %@
Null
Account: <%@>
<%@ %p: [%@]>
delegation
time
deviceID
hasResolvedDSID
<%@ %p
 bitRate: %zd
 bitDepth: %zd
channels: %@
codec: %@
 sampleRate: %zd
 spatialized: %@
spatialized
%c%c%c%c
https://init.itunes.apple.com/bag.xml
cache_entries
build_version
ICURLBagProviderDidUpdateBagNotification
request_context
url_bag
com.apple.iTunesCloud.ICURLBagProvider.access
com.apple.iTunesCloud.ICURLBagProvider.persistence
com.apple.iTunesCloud.ICURLBagProvider.callback
ICURLBagProvider.m
requestContext != nil
v32@?0@"ICURLBag"8Q16^B24
%ld-%@-%@-%@-%@-%@
locale
Failed to fetch url bag
Failed to load payload dictionary
v32@?0@"NSString"8@"ICURLBag"16^B24
%@.plist
unknown
URLBags
queueQuery
expiration
valid
; expirationDate = %@
; isFinalResponse = %@
; needsReload = YES
; subscriptionStatus = %@
expirationDate
isFinalResponse
needsReload
subscriptionStatus
Invalid subscription status value: %@
errorMessage
Subscription status error: %@
removeType
removedItemIds
mz_at_ssl-%@
sslToken
dsids
com.apple.iTunesCloud.ICDelegationConsumerServiceProtocolHandler.operationQueue
com.apple.iTunesCloud.ICDelegationConsumerServiceProtocolHandler.calloutQueue
ATV-
iOS-
com.apple.iTunesCloud.ICMusicSubscriptionPlaybackRequestOperation.accessQueue
Missing bag key '%@'
followup
lease-only
v24@?0@"NSData"8@"NSData"16
lease
preview
size
%@; shouldSignBody=%d, fields=%@, headers=%@
sessionID
expirationTimeInterval
storefrontIdentifier
ICDelegateAccountStoreDidChangeNotification
options not single-writer
Invalid XPC options
Non-concrete user identity: %@
Out-of-scope transaction usage: %@
v16@?0@"<ICDelegateAccountStoreWriter>"8
Cannot use a closed delegate account store: %@
ICMediaUserStateCenterUserStatesDidChangeNotification
com.apple.private.itunescloud.ICUserStateCenter.siri
com.apple.iTunesCloud.ICUserStateCenter.accessQueue
B16@?0@"ICMediaUserState"8
Error creating async server during force refresh user states
Failed to force refresh user states
v24@?0@"<ICMediaUserStateCenterServerProtocol>"8@"NSError"16
Failed to create connection for async server
Failed to create connection for sync server
com.apple.itunescloud.ICStorageManager.accessQueue
CACHE_DELETE_VOLUME
/private/var
CACHE_DELETE_AMOUNT
CACHE_DELETE_PURGE_TIMEOUT
v16@?0^{__CFDictionary=}8
Caches
com.apple.iTunesCloud
sharedSessionToken
isExecuting
error
isFinished
com.apple.iTunesCloud.ICAsyncOperation.childOperationQueue-%@
; name = "%@"
; maxConcurrentOperationCount = %ld
????
userInteractive
userInitiated
utility
background
default
; qualityOfService = %@
com.apple.amp.iTunesCloud.ICNanoPairedDeviceStatusMonitor.queue
com.apple.amp.iTunesCloud.ICNanoPairedDeviceStatusMonitor.callBackQueue
com.apple.nanoregistry.devicedidpair
com.apple.nanoregistry.devicedidunpair
com.apple.nanoregistry.paireddevicedidchangeversion
C5DDE5DD-2FF7-4735-80A3-0108488556DE
NSString *getNRDevicePropertyPairingID(void)
ICNanoPairedDeviceStatusMonitor.m
NRDevicePropertyPairingID
void *NanoRegistryLibrary(void)
PSYInitialSyncStateObserver
Class getPSYInitialSyncStateObserverClass(void)_block_invoke
void *PairedSyncLibrary(void)
NSString *getNRPairedDeviceRegistryDeviceDidBecomeActive(void)
NRPairedDeviceRegistryDeviceDidBecomeActive
NRPairedDeviceRegistry
Class getNRPairedDeviceRegistryClass(void)_block_invoke
NSString *getNRDevicePropertyUDID(void)
NRDevicePropertyUDID
NSString *getNRDevicePropertyIsAltAccount(void)
NRDevicePropertyIsAltAccount
NSString *getNRDevicePropertyCompanionMusicGUID(void)
NRDevicePropertyCompanionMusicGUID
com.apple.iTunesCloud.ICDelegationProviderService.accessQueue
com.apple.iTunesCloud.ICDelegationProviderService.netServiceBrowserQueue
com.apple.iTunesCloud.ICDelegationProviderService.identityStoreOperationQueue
ICDelegationProviderService.m
Cannot start XPC service for non-system service.
local
com.apple.iTunesCloud.ICDelegationProviderService.supportedDelegationAccountUUIDsAccessQueue
v32@?0@"ICDelegateToken"8@"ICUserIdentity"16^B24
com.apple.iTunesCloud.ICUserIdentityStoreACAccountBackend.callbackQueue
com.apple.iTunesCloud.ICUserIdentityStoreACAccountBackend.accountStoreDelegateQueue
com.apple.accounts.appleaccount.fullaccess
ICUserIdentityStoreACAccountBackend.m
accountDSID != nil
B32@?0@"ACAccount"8q16^B24
altDSID
carrierDeviceID
cloudBackup
delegated
delegateToken
firstName
iCloudPersonID
lastName
isManaged
sandboxed
subscriptionStatusEnabled
username
ageVerificationExpirationDate
mergeToCloudLibraryPreference
homeUserIdentifiers
cloudLibraryStateReason
privateListeningEnabled
activeLocker
active
privateListeningEnabledForHomeUsers
privacyAcknowledgementVersions
DSID
com.apple.itunescloud.ICHTTPArchive.accessQueue
HTTPArchives
request
response
version
creator
entries
yyyy-MM-dd_HH-mm-ss-SSSS
%@_%@.har
com.apple.itunescloud
method
HTTP/1.1
httpVersion
headers
headersSize
text
postData
bodySize
statusText
mimeType
content
value
q24@?0@"NSURL"8@"NSURL"16
; client = %@/%@
legacy
musicUserToken
; personalizationMethod = %@
automatic
always
; personalizationStyle = %@
; developerTokenProvider = %@
; playbackAuthorizationToken = %@
; collectionPlaybackAuthorizationToken = %@
personalizationMethod
developerTokenProviderClassName
developerTokenProvider
playbackAuthorizationToken
collectionPlaybackAuthorizationToken
Attempted to decode an instance of ICMusicKitRequestContext with an unallowed class name for developerTokenProvider: %@.
Attempted to encode an instance of ICMusicKitRequestContext with an unallowed class name for developerTokenProvider: %@.
ICMusicKitRequestContext.m
Setting up a MusicKit request context with a developer token provider that is not provided by iTunesCloud.framework is not supported.
BuildVersion
UNKNOWN
%@/%@%@
<%@ %p [userIdentity:%@]>
baseURL
libraryBagKey
buildIdentifier
purchaseClientIdentifier
requestReason
familyMemberStoreID
userIdentity
userIdentityStore
tccUserIdentity
cloudId
adamId
count
Software
recommendedContentIds
playbackControlSettings
command
transitionItemId
previousItemId
silent-only
silent-if-possible
always-renew
establish-only
once-a-day
<%@ %p shouldPlaybackRequireOnlineKeys: %@; hasOnlinePlaybackKeys: %@; hasOfflinePlaybackKeys: %@; hasPendingLeaseAcquisition: %@, hasInflightLeaseAcquisition: %@, isTakenDueToLeasePrevention:%@, leaseState: %@; stateReasonDialog: %@>
expired
taken
register-success
environment
device-name-data
serial-number
%lld
affiliateID
participantStates
transportControlStates
currentItemId
initialAVSyncStartItemId
initialAVSyncInitiator
tokenResult
lastError
lastUpdateTime
excludeFromBackgroundRefresh
lockup
play
playlist-product
product
omni
caller
artwork
platform
X-JS-SP-TOKEN
X-JS-TIMESTAMP
com.apple.iTunesCloud.ICStorePlatformRequest.operationQueue
com.apple.iTunesCloud.ICStorePlatformRequest.union
com.apple.iTunesCloud.ICStorePlatformRequest.callout
v24@?0@"<ICStorePlatformResponse>"8@"NSError"16
Batch size must be <= %ld
yyyy-MM-dd HH:mm:ss ZZZ
v32@?0@"ICStoreDialogResponseButton"8Q16^B24
lastUpdatedDate
shouldExcludeFromBackgroundRefresh
ICMusicLibraryAuthTokenStatus.m
playlist
album
artist
tvSeason
radioStation
musicVideo
uploadedAudio
uploadedVideo
tvEpisode
spatial
lossless
hi-res-lossless
atmos
surround
lossy-stereo
libraryTrackId
collectionName
collectionId
composer
contentRatingsBySystem
is-explicit
genreNames
genres
hasLyrics
hasTimeSyncedLyrics
movementCount
movementName
movementNumber
offers
showComposer
formerIds
workName
audioTraits
classicalUrl
YYYY-MM-dd
ICLiveLinkPlaybackCoordinatorMedium.m
Subclass %@ must implement -%@ defined in %@.
ICLiveLinkPlaybackCoordinatorMedium
LamportTimestamp
Identifier
InitialSync
minimal
ICMusicSubscriptionStatusRequestOperation.m
%@ _performSubscriptionStatusURLRequestWithRequestContext:... is required to call its completion handler with either a non-nil response, or a non-nil error.
%@%@
v20@?0@"ICMutableMusicSubscriptionStatus"8B16
Phone number access is restricted.
com.apple.iTunesCloud.ICURLSession.access
com.apple.iTunesCloud.ICURLSession.operation
com.apple.iTunesCloud.ICURLSession.utility
ICURLSession
Enqueued data request with invalid url '%@'
tmp.%@
Too many redirects (%d)
Download request received HTTP status code %@
ICURLSession.m
_enqueue request called with nil request
unsupported request type %d
requestSignature
com.apple.amp.itunescloud.LoadURL
appVersion
appleTimingApp
cachedResponse
connectionReused
connectionType
radioType
radioTechnology
redirectCount
requestMessageSize
requestUrl
responseMessageSize
responseMessageSizeUncompressed
fetchStartTime
domainLookupStartTime
domainLookupEndTime
domainLookupTime
connectionStartTime
secureConnectionStartTime
connectionEndTime
connectionTime
requestStartTime
responseStartTime
responseEndTime
responseTime
totalTime
@"NSDictionary"8@?0
B16@?0@"NSURLQueryItem"8
com.apple.amp.iTunesCloud.URLSessionMetrics
item-id
store-front-id
account-id
match-status
application/x-apple-plist
com.apple.atc
ICInAppMessageEntryResourceIdentifierWebArchive
ICInAppMessageEntryResourceIdentifierTemplate
com.apple.iTunesCloud.ICInAppMessageEntry.accessQueue
[%@:%@, %@, (valid from %@ - %@), download=%d]
applicationMessage
bundleID
shouldDownloadResources
didCacheRequiredResources
isBadgingApplication
resourceCache
commandType
commandSerialNumber
v24@?0@"AMSSnapshotBag"8@"NSError"16
No value for bag key '%@'
value for bag key '%@' is unexpected type '%@'
ICCloudClientErrorDomain
ICCloudClientLibraryUploadErrorDomain
com.apple.iTunesCloud.ICDelegateAccountStoreServiceListener.accessQueue
com.apple.iTunesCloud.ICDelegateAccountStoreServiceListener.callbackQueue
v20@?0@"ICMutableUserIdentityProperties"8B16
shuffleMode
repeatMode
availability
noGeneration
dmap.status
dmap.itemid
dmap.longitemid
dmap.dictionary
full-token
full-url
oval-token
oval-url
template-url
supports-layered-image
template-artwork-json
cover-url
cover-artwork-json
com.apple.itunescloudd.isAuthenticatedDidChangeNotification
com.apple.itunescloudd.artworkDownloadsDidCompleteNotification
com.apple.itunescloudd.cloudAddToPlaylistBehaviorDidChangeNotification
com.apple.itunescloudd.enableCloudLibraryFailureTypeChangedNotification
com.apple.itunescloudd.startingInitialImportNotification
com.apple.itunescloudd.activeUserIdentityDidChangeNotification
com.apple.itunescloudd.initialCloudLibraryImportCompletedNotification
main
networkAvailability
cloud
cloudStatusMonitor
mediaUserStateCenterServer
applicationMessageSyncResponses
feature
pattern
anonymous
ICRadioPlaybackHistoryStore.m
com.apple.iTunesCloud.ICRadioPlaybackHistoryStore
com.apple.iTunesCloud.ICRadioPlaybackHistoryStore.callback
com.apple.iTunesCloud.ICRadioPlaybackHistoryStore.identity
ICRadioPlaybackHistoryStore
%@_%@.plist
com.apple.itunescloudd.playactivity
ICPlayActivityControllerEndpointIdentifierJingle
ICPlayActivityControllerEndpointIdentifierPairedDevice
ICPlayActivityControllerDidRecordPlayActivityEventsNotification
ICPlayActivityControllerEndpointRevisionInformationDidChangeNotification
ICPlayActivityControllerUserInfoKeyEndpointIdentifier
ICPlayActivityControllerUserInfoKeyEndRevision
ICPlayActivityControllerUserInfoKeyStartRevision
ICPlayActivityEndpointRevisionInformation
AdditionalPendingRevisions
CurrentRevision
RevisionVersionToken
com.apple.iTunesCloud.ICPlayActivityController.serialQueue
v32@?0@"_ICPlayActivityFlushSessionInformation"8@"NSArray"16@"NSError"24
ShouldDebugLogRecordedEvents
com.apple.PlayActivityFeed
com.apple.iTunesCloud.ICPlayActivityController.debugLogOperationQueue
v32@?0Q8@"NSString"16@"NSError"24
com.apple.iTunesCloud.ICPlayActivityControllerEndpointRevisionInformationDidChange
remove-push-notification-type-url
notification-type
file-read-data
file-write-data
movpkg
bgColor
textColor1
textColor2
textColor3
textColor4
heic
width
height
hasP3
imageTraits
textGradient
responseArray
responseDictionary
ICStoreArtworkInfo.m
cropStyle != nil
format != nil
hasTitle
q24@?0@"NSDictionary"8@"NSDictionary"16
{CGSize=dd}
q24@?0@"ICStoreArtworkInfo"8@"ICStoreArtworkInfo"16
contributingParticipantId
container
isExplicit
mediaInfo
sectionType
ICLiveLinkParticipantsDidChangeNotification
ICLiveLinkErrorDomain
ICLiveLinkServerErrorDomain
ICLiveLinkTransportControlStateKey
ICLiveLinkPlaybackSyncParticipantStateKey
com.apple.itunescloud.quic.inprocess
Album
RadioStation
Playlist
Group
AutoPlayStation
UnknownKind-%ld
LiveLinkMaxRetries
LiveLinkMaxRetryWaitPeriod
com.apple.amp.MediaServices.LiveLink.delegateQueue
ICLiveLink.m
Attempted to start an already started live link
forceExternalQR
v24@?0@"_ICLLProtocolMessage"8@"NSError"16
Received current item ID not in queue: %@
ServerAction[AddItems]
@"NSString"16@?0@"_ICLLPlaybackItem"8
B16@?0@"ICLiveLinkIdentity"8
ServerAction[MoveItem]
ParticipantChangeAction
ServerAction[PlayNowQueueItems]
ServerAction[RemoveItem]
ServerAction[ReplaceQueueItems]
Received invalid UUID from server: %@
v16@?0@"ICLiveLinkIdentity<_ICMutableLiveLinkIdentityPrivate>"8
@"ICLiveLinkIdentity"16@?0@"_ICLLParticipant"8
LiveLink action completion handler not called: %@
Unexpected state (pending actions dequeued while processing) action=%@ firstAction=%@
traceID
completion
Attempted to overwrite completion handler for traceID %@
received no participants in response
received no queue in response
received no playback control settings in response
Failed to load initial participants
Failed to load initial queue
ResyncAfterRetry
ResyncAfterConnect
Unexpected client info status %@
Connection ended with error.
v32@?0@"NSString"8@?<v@?@"_ICLLProtocolMessage"@"NSError">16^B24
Requested reconnection because %@.
<%@: %p id=%@ kind=%@ mediaID=%@ featureName="%@">
<%@: %p id=%@ mediaID=%@>
<%@: %p identifier=%@ queueContext=%@ revision=%ld> (%@)
B16@?0@"ICSharedListeningContainer"8
PotluckRadioAutoPlay
Failed to turn AutoPlay %@, Feature not enabled
Error [%ld]
Failed to turn AutoPlay %@
UpdateAfterAutoplayToggled%@
preferredStartIndex out of bounds (%ld/%ld)
v24@?0@"_ICLLRadioSource"8@"_ICLLAutoPlaySource"16
preferredStartIndexPath section out of bounds (%ld/%ld)
preferredStartIndexPath item out of bounds (%ld/%ld)
UpdateAfterRequestError
Failed to replace tracklist
UpdateAfterReplaceQueueItems
Failed to insert tracklist at position
UpdateAfterAddItems
Failed to insert tracklist after item
UpdateAfterPlayNow
UpdateAfterRemoveItem
UpdateAfterRemoveItems [bulk]
UpdateAfterRemoveAllItemsAfterItem
Could not find item to move: %@
Could not find item to insert after: %@
UpdateAfterMoveItemBefore
UpdateAfterMoveItemAfter
v24@?0@"_ICLLPlaybackSyncStateQuery"8@"NSError"16
v32@?0@"ICSharedListeningItem"8@"NSIndexPath"16^B24
v32@?0@"ICSharedListeningItem"8q16^B24
v32@?0@"ICSharedListeningContainer"8q16^B24
PBUNSET
PlaybackSync
AddItems
RemoveItem
MoveItem
CurrentItemChange
Reaction
ParticipantChange
ServerNotice
ClientInfo
PlayNowQueueItems
ReplaceQueueItems
CurrentItemTransition
QueueSync
UnknownAction-%ld
INVALID TOKEN
UnexpectedCode-%ld
INTERNAL
INVALID REQUEST
NOT FOUND
QUEUE ACTION MOVE CONFLICT
NO-OP
INVALID AUTOPLAY SETTINGS
INVALID REPEAT MODE SETTINGS
INVALID SHUFFLE MODE SETTINGS
PLAYBACK CONTROL SETTINGS NO-OP
SERVER RESTART
CONTENT UNKNOWN
CONTENT NOT AVAILABLE
CURRENT ITEM CHANGE TIMEOUT
CLEAN_USER_NOT_ALLOWED
com.apple.iTunesCloud.ICSuzeLeaseSession.calloutQueue
com.apple.iTunesCloud.ICSuzeLeaseSession.operationQueue
Unable to start lease session [no valid DSID for user identity] - userIdentity=%@ - properties=%@
icloud-backup-enabled
lightweight
playback
streamingRental
accountHistory
lockerHistory
backend
delegationOptions
style
applicationMessageIdentifier
eventParameters
dpInfo
pinf
sinf
sinf2
com.apple.itunescloudd
music-notification-default
Music
developerToken
options
Missing developer token for user token request.
Missing requesting bundle identifier for user token request.
Missing requesting bundle version for user token request.
Invalid request: %@
Not getting music user token because privacy acknowledgement is required.
No active account.
v16@?0@"NSString"8
Could not find URL to get music user token.
assertion
tcc-acceptance-date
error_description
Response error: %@
This is most likely due to an expired or otherwise invalid developer token
Failed to fetch music user token with %@ status code. %@.
music_token
%@ in response is of unexpected type.
playerInfoContextRequestToken
Beta
Carrier
Internal
Desense
Lite Internal
Vendor
NonUI
Restore
com.apple.iTunesCloud.ICDeviceInfo.deviceNameUpdateQueue
ProductType
ReleaseType
HardwarePlatform
%012x
UniqueDeviceID
UserAssignedDeviceName
%02X
main-screen-width
main-screen-height
cellular-data
CellularTelephonyCapability
wi-fi
wapi
DeviceSupports720p
DeviceSupports1080p
green-tea
main-screen-class
DeviceClass
System/Library/CoreServices/SystemVersion.plist
watchOS
macOS
tvOS
InternalBuild
AppleLocale
/bfa1LxXd7G1WqHujpjsdA
DeviceClassNumber
IOBuiltin
IOService
IOMACAddress
No Content
Partial Content
Success Range End
Multiple Choices
Not Modified
Redirection Range End
Bad Request
Unauthorized
Forbidden
Not Found
Client Error Range End
Internal Server Error
Not Implemented
Bad Gateway
Service Unavailable
Server Error Range End
%@ (%ld)
NSData * _Nonnull ICDAAPUtilitiesCreateData(void (^__strong _Nonnull)(DKDAAPWriter *__strong))
ICDAAPUtilities.m
block
NSData * _Nonnull ICDAAPUtilitiesCreateDataForContainer(DKDAAPElementCode, void (^__strong _Nonnull)(DKDAAPWriter *__strong))
containerCode
v16@?0@"DKDAAPWriter"8
void ICDAAPUtilitiesWriteProperty(DKDAAPWriter *__strong _Nonnull, DKDAAPElementCode, DKDAAPValueType, __strong id _Nonnull)
DKDAAPValueTypeUInt8 only supports NSNumber.
DKDAAPValueTypeSInt8 only supports NSNumber.
DKDAAPValueTypeUInt16 only supports NSNumber.
DKDAAPValueTypeSInt16 only supports NSNumber.
DKDAAPValueTypeUInt32 only supports NSNumber.
DKDAAPValueTypeSInt32 only supports NSNumber.
DKDAAPValueTypeUInt64 only supports NSNumber.
DKDAAPValueTypeSInt64 only supports NSNumber.
DKDAAPValueTypeString only supports NSString.
DKDAAPValueTypeDate only supports NSDate.
DKDAAPValueTypeBinary only supports NSData.
Cannot make element from unsupported DAAP value type.
void ICDAAPUtilitiesWriteContainer(DKDAAPWriter *__strong _Nonnull, DKDAAPElementCode, void (^__strong _Nonnull)(DKDAAPWriter *__strong))
stationId
seed
featureName
-init is not supported, use initWithPlayActivityController
ICFlushPlayActivityEventsOperation.m
initWithPlayActivityController called with nil playActivityController
com.apple.itunesstored.ICPlayActivityFeedFlushOperation.accessQueue
com.apple.iTunesCloud.ICFlushPlayActivityEventsOperation.serialQueue
v28@?0@"NSArray"8Q16B24
v16@?0Q8
v32@?0@"NSNumber"8Q16^B24
v32@?0@"NSArray"8Q16@"NSError"24
dataType
comparisonType
triggerValue
triggerConditionType
bundleIdentifier
Boolean
String
Integer
Equal
NotEqual
LessThan
LessThanOrEqualTo
GreaterThan
GreaterThanOrEqualTo
Countable
Value
Event
ContextProperty
com.apple.iTunesCloud.ICInAppMessageMetadataEntry.accessQueue
ic-key
renewalDate
failureCount
%@-%lud.%@
v32@?0@"NSString"8@"ICContentKeyStoreEntry"16^B24
base-url
like-event-url
continue-listening
max-queue-size-in-request
max-upcoming-tracks-to-maintain
max-queue-size-for-autoplay
num-kbsyncs-to-include-for-getTracks
max-protocol-version
header-actions
ICAgeVerifier %p - verificationExpirationDate: %@ - status: %@
Age verification status unknown
Age verification not required
Age verification required
Age verification completed and successful
PRAGMA journal_mode=WAL
PRAGMA cache_size=%ld
results
album-id
-----------------------------------------
PlayActivityEvents.log
com.apple.itunescloud.ICURLRequest.observer
waiting
running
paused
finished
<%@ %p (%@) [%@/%@]>
AppleLanguages
requestState
Data
Download
Upload
AVDownload
Resumed Download
AVAggregateDownload
<unknown>
ICURLRequest.m
There is no retry count for ICURLResponseHandlingRetryReasonNone.
/WebObjects/
HTTP-%ld
B16@?0@"ACAccount"8
v24@?0@"ACAccountType"8@"NSError"16
v32@?0@"ACAccount"8Q16^B24
v24@?0@"ACAccount"8@"NSError"16
ACAccountStore+ICAccountStoreAdditions.m
account != nil
storeAccountID != nil
homeUserID
playerDelegateInfoToken
triggerName
ICCloudItemIDListItemIDs
ICCloudItemIDListIDTypes
<%@: %p Item ID Count = %lu>
activeDSID
lockerDSID
localStoreAccountProperties
getPushNotificationSettings
setPushNotificationSettings
serviceId=com.apple.Music
application/json; charset=UTF-8
pageId
pageType
pageDetails
targetId
actionURL
actionDetails
pageUrl
impression
Button
Slider
Close
Navigate
Swipe
Select
com.apple.ICDelegationConsumerService.accessQueue
v52@?0@"ICDelegationConsumerServiceSession"8@"ICUserIdentity"16@"ICDelegateToken"24@"NSString"32@"NSError"40B48
library-album
album-name
activeWatchKitUser
ICTVUserState.m
ICTVUserState instance already exists
v16@?0@"ICTVUserState<ICMutableTVUserState>"8
<%@: %p [%@]>
NoDSID
ICAgeVerificationState %p - explicit content allowed: %u - status: %@ - treatment: %ld - url: %@ - verifier: %@ - error: %@
ICAgeVerificationState.m
_status != ICAgeVerificationStatusUnknown
ICAgeVerificationStateKeyDSID
ICAgeVerificationStateKeyStatus
ICAgeVerificationStateKeyTreatment
ICAgeVerificationStateKeyVerificationURL
ICAgeVerificationStateKeyAgeVerifierExpirationDate
[dictionaryRepresentation[ICAgeVerificationStateKeyDSID] isKindOfClass:[NSString class]]
[dictionaryRepresentation[ICAgeVerificationStateKeyStatus] isKindOfClass:[NSNumber class]]
[dictionaryRepresentation[ICAgeVerificationStateKeyTreatment] isKindOfClass:[NSNumber class]]
[dictionaryRepresentation[ICAgeVerificationStateKeyVerificationURL] isKindOfClass:[NSString class]] || !dictionaryRepresentation[ICAgeVerificationStateKeyVerificationURL]
[dictionaryRepresentation[ICAgeVerificationStateKeyAgeVerifierExpirationDate] isKindOfClass:[NSDate class]] || !dictionaryRepresentation[ICAgeVerificationStateKeyAgeVerifierExpirationDate]
ICMusicSubscriptionCarrierBundlingEligibilityOperation.m
v16@?0@?<v@?>8
v24@?0@"ICMusicSubscriptionCarrierBundlingEligibilityResponse"8@"NSError"16
carrier
IMEI
responseCode
error-domain
error-code
error-title
error-message
error-underlying
ValidateMobile
SOAPAction
com.apple.iTunesCloud.ICMusicSubscriptionCarrierBundlingEligibilityOperation
@"ICURLSession"8@?0
responseMessage
sessionId
deepLink
phoneNumber
ICMusicLibraryAuthToken.m
v40@?0@8Q16q24^B32
v32@?0@"_ICValueHistoryItem"8Q16^B24
timestamp
trigger
interval
Calendar
TimeInterval
com.apple.amp.iTunesCloud
Default
Default_Oversize
CloudClient
Delegation
AgeVerification
Subscription
Subscription_Oversize
StoreArtworkInfo
AccountNotifications
LiveLink
LiveLink_Oversize
LiveLinkMedium
QuickRelay
QuickRelay_Oversize
Analytics
UserState
stream-protocol
stream-url
stream-key-cert-url
stream-key-server-url
is-itunes-stream
SHOUTCAST
com.apple.siri.client.state.DynamiteClientState%s
.siri_data_changed
shortDebugName
isActive
alternateDSID
homeUserIDs
ageVerificationRequired
v16@?0@"ICMediaUserState<ICMutableMediaUserState>"8
homeUserIds
<%@: %p> firstName=%@ isActive=%dl
"%@" (%@)
ICMediaUserState.m
allowsHandlingNonAuthenticationDialogs
shouldRecordLastAuthenticationDialogResponseTime
sagaId
v24@?0@"ICMediaRedownloadResponse"8@"NSError"16
v24@?0@8@"NSError"16
APRequestHandler
Class getAPRequestHandlerClass(void)_block_invoke
ICStoreDialogResponseHandler.m
void *AskPermissionLibrary(void)
play-info
<%@: %p serverID=%ld participantID=%@ externalID=%@>
iurl
playbackSyncState
participant
query
com.apple.amp.iTunesCloud.ICDeviceSetupStatusMonitor.callBackQueue
NSString *getBYSetupAssistantLaunchedDarwinNotification(void)
ICDeviceSetupStatusMonitor.m
BYSetupAssistantLaunchedDarwinNotification
void *SetupAssistantLibrary(void)
NSString *getBYSetupAssistantFinishedDarwinNotification(void)
BYSetupAssistantFinishedDarwinNotification
BYSetupAssistantNeedsToRun
authorized
cancel-purchase-batch
dialog
download-queue-item-count
jingleAction
songList
participantQuery
syncCommands
repeat_play_mode
shuffle_play_mode
auto_play_mode
Not allowing silent authentication because one was recently attempted already
This action requires authentication to proceed
com.apple.iTunesCloud.ICDispatchOnce
<%@: %p [%@/%@]>
authenticationProviderClassName
authenticationProvider
networkConstraints
Attempted to decode an instance of ICRequestContext with an unallowed class name for authenticationProvider: %@.
Failed to look up class of authentication provider with name: %@.
Attempted to encode an instance of ICRequestContext with an unallowed class name for authenticationProvider: %@.
ICRequestContext.m
inAppMessagesReportEvent
inAppMessagesSerialCheck
inAppMessagesSync
inAppMessagesResourceDomain
inAppMessagesPollingIntervalSeconds
v24@?0@"ICMusicAccountNotificationsSettingsResponse"8@"NSError"16
subscription
promo-content
after
before
drm-type
asset-url
is-skippable
like-value
adam-id
v24@?0@"NSString"8@"NSString"16
key-server-protocol-type
com.apple.iTunesCloud.ICDelegationServiceConnection.accessQueue
com.apple.iTunesCloud.ICDelegationServiceConnection.calloutQueue
com.apple.iTunesCloud.ICDelegationServiceConnection.streamReaderQueue
com.apple.iTunesCloud.ICDelegationServiceConnection.streamWriterQueue
v16@?0@"NSData"8
playlistGlobalID
albumAdamID
displayText
requiresDelegate
actionParameters
clickEvent
messageRemovalPolicy
None
Local
Global
X-Apple-Tz
X-Apple-I-Client-Time
X-Apple-Connection-Type
X-Apple-Cuid
X-Apple-Issuing-Process
X-Apple-Requesting-Process
X-Apple-NSURLCachePolicy
X-Apple-Store-Front
iCloud-DSID
X-Dsid
X-Guid
X-WHA-Token
X-Apple-Set-Cookie
X-Apple-Set-User-Cookie
X-Apple-AMD
X-Apple-AMD-M
X-Apple-AMD-S
X-Apple-AMD-Action
X-Apple-AMD-Data
X-Apple-MD
X-Apple-MD-M
X-Apple-MD-S
X-Apple-MD-Action
X-Apple-MD-Data
X-Apple-ActionSignature
X-Set-Apple-Store-Front
x-apple-jingle-correlation-key
X-Apple-Device-Model
X-Enqueuer-DSID
X-Request-TimeStamp
x-apple-use-amd
X-Apple-Requesting-Bundle-Id
X-Apple-Requesting-Bundle-Version
X-Apple-Request-Store-Front
X-Apple-Private-Listening
X-Apple-Enqueuer-Private-Listening
X-Apple-Enqueuer-Store-Front
X-Apple-Allow-Auth-Types
X-Mme-Client-Application
X-Apple-Application-Site
apple-timing-app
X-Cache
X-apple-vactoken
X-apple-container-vac-token
itre
itrv
itst
ICStoreURLRequest.m
[requestContext isKindOfClass:[ICStoreRequestContext class]]
[requestContext=%@]
com.apple.iTunesCloud.ICStoreURLRequest.serialQueue
ICStoreURLRequest
Using store request for url with untrusted host '%@'
yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'
.apple.com
WiFi
NSURLRequestReloadIgnoringCacheData
NSURLRequestReloadIgnoringLocalAndRemoteCacheData
NSURLRequestReturnCacheDataElseLoad
NSURLRequestReloadRevalidatingCacheData
NSURLRequestReturnCacheDataDontLoad
NSURLRequestUseProtocolCachePolicy
com.apple.iTunesCloud.ICDelegateAccountStoreXPCWriter.accessQueue
com.apple.iTunesCloud.ICDelegateAccountStoreXPCWriter.callbackQueue
v16@?0@"NSXPCConnection"8
v28@?0B8@"NSString"12@"NSError"20
; storeRequestContext = %@
; allowsFallbackToExpiredStatus = YES
; allowsFallbackToStatusNeedingReload = YES
never
once
; carrierBundleProvisioningStyle = %@
; reason = %@
; shouldIgnoreCache = YES
; shouldReturnLastKnownStatusOnly = YES
; shouldBypassEnforcementOfPrivacyAcknowledgement = YES
; requestIdentifier = %@
allowsFallbackToExpiredStatus
allowsFallbackToStatusNeedingReload
carrierBundleProvisioningStyle
reason
shouldIgnoreCache
storeRequestContext
shouldReturnLastKnownStatusOnly
shouldBypassEnforcementOfPrivacyAcknowledgement
requestIdentifier
revision_id
store_account_id
event_data
events_current_revision
events_revision_version_token
unknown-revision-version
INSERT OR REPLACE INTO events (pid, revision_id, store_account_id, event_data) VALUES (?, ?, ?, ?)
DELETE FROM %@ WHERE %@ <= ?;
Q16@?0Q8
Library
play_activity.sqlitedb
-wal
-shm
properties
CREATE TABLE IF NOT EXISTS %@ (%@ INTEGER PRIMARY KEY, %@ INTEGER, %@ INTEGER, %@ BLOB);
CREATE TABLE IF NOT EXISTS %@ (%@ TEXT PRIMARY KEY, %@ TEXT);
PRAGMA legacy_file_format = 0;
PRAGMA journal_mode=WAL;
DROP TABLE IF EXISTS %@;
INSERT OR IGNORE INTO %@ (%@, %@) VALUES ('%@', '%@');
SELECT 
 FROM %@ WHERE (
(%@ == %llu) AND (
%@ BETWEEN %llu AND %llu
 OR %@ BETWEEN %lu AND %lu
v32@?0{_NSRange=QQ}8^B24
) ORDER BY 
%@,%@ ASC;
%@ ASC;
SELECT DISTINCT %@ FROM %@ WHERE %@ IN (
%llu%@
ICPlayActivityTable.m
key cannot be nil
INSERT OR REPLACE INTO %@ (%@, %@) VALUES ('%@', '%@');
DELETE FROM %@ WHERE %@ = '%@';
SELECT %@ FROM %@ WHERE %@ = '%@';
<%p> - accountUniqueIdentifier: %llu - hasOfflinePlaybackKeys=%@ - hasOnlinePlaybackKeys=%@
statusType
reasonType
eligibleOffers
; statusType = %@
; reasonType = %@
; capabilities = %@
; eligibleOffers = [%@]
_ICPlayActivityEventCoderDataRepresentation
<%@ %p persistentID:%llu version:%lu
    eventType: %lu
    containerID:'%@'
    containerIDs:'%@'
    containerType:%td
    deviceName:'%@'
    endReasonType:%td
    enqueuerProperties:'%@'
    eventDate:%@
    eventTimeZone:%@
    externalID:'%@'
    featureName:'%@'
    householdID:'%@'
    systemReleaseType: %li
    itemDuration:%f
    itemStartTime:%f  
    itemEndTime:%f
    itemType:%td
    itemIDs:'%@'
    mediaType:%td
    offline:%@
false
    personalizedContainerID:'%@'
    queueGroupingID:'%@'
    hasRecommendationData:true
    privateListeningEnabled: %@
    SBEnabled:%@
    siriInitiated: %@
    sourceType:%td
    storeAccountID:%llu
    storeFrontID:%@
    storeID:'%@'
    requestingBundleIdentifier:'%@'
    requestingBundleVersion:'%@'
    timedMetadata(length):%td
    hasTrackInfo:true
    buildFeatures:[%@]
    autoPlayMode:%td
    repeatPlayMode:%td
    shufflePlayMode:%td
    audioQualityPreference:%lu
    playbackFormatPreference:%lu
    targetedAudioQuality:%@
    providedAudioQuality:%@
    sharedActivityGroupSizeCurrent:%llu
    sharedActivityGroupSizeMax:%llu
; DSID = %@
; phoneNumber = "%@"
; storefrontIdentifier = "%@"
ICMusicSubscriptionStatusCacheKey.m
Cannot set a nil DSID on an instance of %@
Cannot set a nil phoneNumber on an instance of %@
Cannot set a nil storefrontIdentifier on an instance of %@
storefrontID
%lli
subtitle
images
messageActions
contentParameters
pageEvent
closeClickEvent
cardClickEvent
v12@?0f8
; statusCode = %@
; serverCorrelationKey = "%@"
; serverEnvironment = "%@"
; serverError = %@
errors
code
detail
%@ (%ld). %@ (%ld). id=%@
Media Services were lost
Media Services were reset
v32@?0@"NSValue"8Q16^B24
Media Download
Aggregate Media Download
remoteRequestOperationClassName
remoteRequestOperation
qualityOfService
Attempted to decode an instance of ICRemoteRequestOperationExecutionContext with an unallowed class name for remoteRequestOperation: %@.
Attempted to encode an instance of ICRemoteRequestOperationExecutionContext with an unallowed class name for remoteRequestOperation: %@.
ICRadioGetTracksRequest.m
Request context must not be nil.
getTracks
radio-station-id
clean
station-requests
global-version
include-metadata
include-asset-info
include-station-dict
now-playing-match
playback-context
reason-type
will-continue-playback
v32@?0@"NSURLRequest"8@"ICStoreURLRequestBuilderProperties"16@?<v@?@"NSDictionary"@"NSError">24
v24@?0@"ICMusicSubscriptionStatus"8@"NSError"16
ruleOperator
subrules
triggerCondition
triggerEventName
requiredApplicationContextBundleIdentifier
Simple
Compound
purchase
mzbookkeeper
com.apple.itunescloud.RecentlyPlayedDidChange
v24@?0@"NSXPCListenerEndpoint"8@"NSError"16
com.apple.itunescloudd.xpc
com.apple.iTunesCloud.ICSuzeLeaseRequest.calloutQueue
v24@?0@"ICSuzeLeaseResponse"8@"NSError"16
media-kind
client-data
podcast
audio-book
booklet
tv-show
buildVersion
deviceName
timeZoneName
systemReleaseType
SBEnabled
storeAccountID
storeFrontID
carrierBundleDeviceID
libraryAuthTokenStatus
cloudLibrarySyncStatus
usesListeningHistory
cookies
v16@?0@"ICMusicUserState<ICMutableMusicUserState>"8
ICMusicUserState.m
reasonHintType
subscriptionAdamID
purchasedAdamID
radioAdamID
itemCloudID
lyricsID
equivalencySourceAdamID
containerAdamID
globalPlaylistID
stationHash
stationStringID
cloudAlbumID
cloudPlaylistID
playlistVersionHash
containerType
endReasonType
eventDateTimestamp
itemDuration
itemEndTime
itemStartTime
itemType
mediaType
persistentID
sourceType
timedMetadata
trackInfo
recommendationData
requestingBundleIdentifier
requestingBundleVersion
enqueuerProperties
householdID
siriInitiated
eventTimeZoneName
displayType
characterDisplayedCount
lyricLanguage
buildFeatures
play_mode
audioQualityPreference
playbackFormatPreference
targetedAudioQuality
providedAudioQuality
queueGroupingID
reportingAdamID
sharedActivityGroupSizeCurrent
sharedActivityGroupSizeMax
personalizedContainerID
storeID
externalID
tvShowPurchasedAdamID
tvShowSubscriptionAdamID
internalBuild
eventSecondsFromGMT
 adamID: %lli
 cloudAlbumID: %@
 cloudPlaylistID: %llu
 globalPlaylistID: %@
 playlistVersionHash: %@
 stationHash: %@
 stationStringID: %@
 stationID: %lli
ICPlayActivityEventContainerIDsAdamID
ICPlayActivityEventContainerIDsCloudAlbumID
ICPlayActivityEventContainerIDsCloudPlaylistID
ICPlayActivityEventContainerIDsGlobalPlaylistID
ICPlayActivityEventContainerIDsPlaylistVersionHash
ICPlayActivityEventContainerIDsStationHash
ICPlayActivityEventContainerIDsStationStringID
ICPlayActivityEventContainerIDsStationID
<default>
com.apple.iTunesCloud.ICDelegationServicePairingSession.accessSerialQueue
com.apple.iTunesCloud.ICDelegationServicePairingSession.calloutQueue
DelegationService-Read-Encryption-Key
DelegationService-Write-Encryption-Key
DelegationService-Salt
; observersCount = %lu
allowExpiredBag
requireValidBag
v32@?0@"<NSCopying>"8@?<v@?@"ICURLBag">16^B24
ICPurchasedBookPurchaseHistoryID
ICPurchasedBookStoreID
ICPurchasedBookTitle
ICPurchasedBookAuthor
ICPurchasedBookGenre
ICPurchasedBookDatePurchased
ICPurchasedBookArtworkURL
ICPurchasedBookRedownloadParameters
ICPurchasedBookVPPLicensed
ICPurchasedBookVPPOrganizationID
ICPurchasedBookVPPOrganizationDisplayName
<%@: %p title='%@'>
v24@?0@"ICRadioLikeResponse"8@"NSError"16
playerAnisetteMID
playerDeviceGUID
playerInfoContextToken
playerUserAgent
%@: [status=%d, msg='%@']
hashValue
playParams
void _MSVHasherAppendBytes(MSVHasher * _Nonnull, const void * _Nonnull, size_t)
NSString * _Nonnull _MSVHashGetDigest(MSVHash)
Cannot obtain digest from unknown hasher algorithm
developer-token-invalidated
music-user-token-invalidated
ICMusicKitURLResponseHandler.m
%@ only knows how to process responses for MusicKit requests. %@ is unsupported.
Failed to invalidate developer token.
Failed to invalidate music user token.
requestUniqueID
startDelegationResponse
finishDelegationResponse
com.apple.iTunesCloud.NSOperationQueue.ICRequestUtility
com.apple.iTunesCloud.NSOperationQueue.ICRequestUserIntitiated
com.apple.iTunesCloud.NSOperationQueue.ICRequestUserInteractive
com.apple.iTunesCloud.NSOperationQueue.ICRequestBackground
com.apple.iTunesCloud.NSOperationQueue.ICRequestDefault
family
refetch
v24@?0@"ICAuthorizeMachineResponse"8@"NSError"16
ICLibraryAuthServiceClientTokenDidChangeNotification
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider._ICLibraryAuthServiceClientTokenDidChangeDistributedNotification
com.apple.itunescloud.library-auth-token-provider
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider.accessQueue
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider.operationQueue
Unable to fetch library token [no DSID on active account] - properties=%@
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider.allTokens
ICLibraryAuthServiceClientTokenProvider.m
getTokenForDSID requires a valid DSID
v24@?0@"ICLibraryAuthServiceClientTokenResult"8@"NSError"16
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider.getTokenResultForDSID
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider.getTokenResultsForDSIDs
addTokenResult requires a valid DSID
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider.addTokenResult
v16@?0@"ICStoreRequestContext"8
v24@?0@"ICLibraryAuthServiceClientTokenResponse"8@"NSError"16
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider._refreshTokensForDSIDs.resultsGroup
v24@?0@"ICLibraryAuthServiceBulkClientTokenResponse"8@"NSError"16
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider._handleLibraryAuthServiceClientTokenDidChangeDistributedNotification
Committing the cache is not allowed from a client
v32@?0@"NSNumber"8@"ICLibraryAuthServiceClientTokenStatus"16^B24
token_refresh_dsid
com.apple.itunescloud.library_auth_token_refresh_timer
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider.tokenRefreshTimer
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider._handleUserIdentityStoreDidChangeNotification
AFMultiUserConnection
Class getAFMultiUserConnectionClass(void)_block_invoke
void *AssistantServicesLibrary(void)
lease-start
lease-renew
content-id
hw.model
subPlayType
player-guid
Books
Podcasts
AppStore
FitnessPlus
ImproveFitnessPlus
v32@?0@"NSString"8@"NSMutableDictionary"16^B24
v32@?0@"<NSCopying>"8@?<v@?@"NSString"B>16^B24
NSString *getOBPrivacyAppleMusicIdentifier(void)
ICPrivacyInfo.m
OBPrivacyAppleMusicIdentifier
void *OnBoardingKitLibrary(void)
NSString *getOBPrivacyTVAppIdentifier(void)
OBPrivacyTVAppIdentifier
NSString *getOBPrivacyiBooksIdentifier(void)
OBPrivacyiBooksIdentifier
NSString *getOBPrivacyPodcastsIdentifier(void)
OBPrivacyPodcastsIdentifier
NSString *getOBPrivacyAppStoreIdentifier(void)
OBPrivacyAppStoreIdentifier
NSString *getOBPrivacyFitnessPlusIdentifier(void)
OBPrivacyFitnessPlusIdentifier
NSString *getOBPrivacyImproveFitnessPlusIdentifier(void)
OBPrivacyImproveFitnessPlusIdentifier
flush-track-cache
hls-key-cert-url
hls-key-server-url
hls-playlist-url
mp-hls-playlist-url
mp-hls-key-cert-url
mp-hls-key-server-url
standard
simplified
@16@?0@"NSString"8
ICMusicSubscriptionLeaseSessionLeaseStatusDidChangeNotification
com.apple.iTunesCloud.ICMusicSubscriptionLease.calloutQueue
<%@ %p requestContext: %@; leaseStatus: %@>
v24@?0@"ICMusicSubscriptionPlaybackResponse"8@"NSError"16
com.apple.iTunesCloud.ICMusicSubscriptionLeaseSession.operationQueue
Playback request operation was canceled
com.apple.iTunesCloud.ICMusicSubscriptionLeaseSession.innerOperationQueue
v16@?0@"ICMusicSubscriptionPlaybackRequestOperation"8
v24@?0@"ICMusicSubscriptionLeaseStatus"8@"NSDate"16
v32@?0@"ICMusicSubscriptionPlaybackResponse"8@"NSArray"16@"NSError"24
com.apple.itunescloudd.ICCloudClientAvailabilityService.serial.queue
containerId
serverRevision
accountDSID
syncPending
lastSyncAttempt
lastSyncedOSVersion
com.apple.iTunesCloud.ICInAppMessageStore.accessQueue
com.apple.iTunesCloud.ICInAppMessageStore.callbackQueue
MessageStore.plist
applicationProperties
messages
v32@?0@8@"NSData"16^B24
v32@?0@8@"NSDictionary"16^B24
lease-duration
uploaded-audio
uploaded-video
radio-track
library-track
album-artist
playlist-name
composer-name
disc-count
disc-number
genre-name
item-name
track-count
track-number
track-ulid
albumArtist
genreName
cloudID
positionType
player-mid
player-user-agent
enqueuers
wha-token
ICDefaultsCloudMediaLibraryUID
ICDefaultsCachedSubscriptionStatus
ICDefaultsCachedMusicUserTokens
ICDefaultsRegisteredPushNotificationState
ICDefaultsKeyMediaLibraryAccessApplicationIdentifiersWithTCCAcceptanceDates
ICDefaultsKeyLastActiveAccountDSID
ICDefaultsKeyLastCookieHeadersForRevokingMusicUserTokens
ICDefaultsKeyLastAllowedInteractiveAuthenticationTime
ICDefaultsKeyAuthServiceClientTokenCache
ICDefaultsKeyLastAuthenticationDialogResponseTime
ICDefaultsKeyLastKnownLocalStoreAccountProperties
ICDefaultsKeyLastKnownSubscriptionStatusBaseCacheKey
ICDefaultsKeyAccountNotificationsShowInLibrarySwitch
ICDefaultsKeyLastKnownHouseholdID
ICDefaultsKeyShouldForceStreamingOnlyKeysForPlayback
ICDefaultsKeyDeviceClassOverride
ICDefaultsKeyDeviceModelOverride
ICDefaultsKeyFairPlayDeviceTypeOverride
ICDefaultsKeyHardwarePlatformOverride
ICDefaultsKeyProductVersionOverride
ICDefaultsKeyProductPlatformOverride
ICDefaultsKeyNetworkTypeOverride
ICDefaultsKeyNetworkLinkQualityOverride
ICDefaultsKeyChargingStateOverride
ICDefaultsKeyBatteryLevelOverride
ICDefaultsKeySpoofIPhone
ICDefaultsKeySpoofIPad
ICDefaultsKeyBypassBagSanityChecks
ICDefaultsKeyShouldRunAgeVerification
ICDefaultsKeyAgeVerificationExpirationDate
ICDefaultsKeyExplicitContentAllowedForCurrentYear
ICDefaultsKeyExplicitContentAllowedForExpirationYear
ICDefaultsKeyAuthServiceClientTokenTimeToLive
ICDefaultsKeyGrazingPathEnabled
ICDefaultsKeyLastKnownUserAgeVerificationState
ICInternalDefaultsKeyTreatSubscriptionStatusAsExpired
ICInternalDefaultsKeyTreatSubscriptionStatusAsIncomplete
ICInternalDefaultsKeyTreatSagaAddComputerCallAsFailed
ICInternalDefaultsKeyTreatInitialSagaImportAsFailed
ICInternalDefaultsKeyOverrideSubscriptionStatusToGlide
ICInternalDefaultsKeyShouldForcePrivacyAcknowledgementRequiredForMusic
ICInternalDefaultsKeyShouldUseNewBagProtocol
ICInternalDefaultsKeyShouldBypassURLBagCache
ICInternalDefaultsKeySecureKeyRenewalTimeOverride
ICDefaultsCachedSubscriptionStatusIsValid
suppressPrivacyWelcomeScreen
forceLibraryRecommendations
allowLowAffinityRecommendations
reduceLibraryRecommendationsXPCInterval
DownloadOnAddToLibrary
ICEnableMultipathTCP
com.apple.itunescloud.internal
ISIgnoreExtendedValidation
iPhone
12,3
iPad
8,12
t8030
t8027
16.0
ISCacheBuster
assetStoreFront
sbsync
v32@?0@"NSData"8@"NSData"16@"NSError"24
accountless-streaming
subscriptionAdamId
purchaseAdamId
universalLibraryId
%@?%@ %@
is-current-track
pause-position-in-millis
recorded-skip-time-in-millis
expires
pauseTime
skipDate
<%@ %p name:'%@'%@ uniqueIdentifier:%@>
 expirationDate:'%@
uniqueIdentifier
(unknown)
 buildVersion: %@
 deviceGUID: %@
 deviceName: %@
 privateListeningEnabled: %@
 systemReleaseType: %li
 SBEnabled: %@
 storeAccountID: %llu
 storeFrontID: %@
 timeZone:%@
timeZone
v24@?0@"ICFPSAPContext"8@"NSError"16
com.apple.iTunesCloud.ICUserNotificationManager.access
com.apple.iTunesCloud.ICUserNotificationManager.notification
ICUserNotificationManager.m
no dialog info for user notification %@
sbKeyBag
subKeyBag
wishlistItemName
v24@?0@"ICStorePlatformMetadata"8^B16
v32@?0@"<ICStorePlatformResponse>"8Q16^B24
rawResponse
com.apple.itunescloud.delegation-provider
Set parental control failed [no propertires for user identity]- userIdentity=%@
Set parental control failed  [no DSID for user identity] - userIdentity=%@
manual
participantState
transportControlState
payload
com.apple.itunescloudd.tcchelper
ICCloudServiceStatusActiveAccountDidChangeNotification
ICCloudServiceStatusCapabilitiesDidChangeNotification
ICCloudServiceStatusStorefrontCountryCodeDidChangeNotification
ICCloudServiceStatusStorefrontIdentifierDidChangeNotification
ICCloudServiceStatusAuthorizationWasGrantedNotification
musicCatalogPlayback
addToCloudMusicLibrary
musicCatalogSubscriptionEligible
none
prompt-prohibited
prompt-allowed
Will begin
Already
Will end
Will keep
@"NSMutableArray"16@?0@"NSNumber"8
developer token
v24@?0@"<ICCloudServiceStatusRemoteMonitoringService>"8@"NSString"16
@"NSMutableArray"16@?0@"MSVPair"8
user token
v24@?0@"ICMusicKitTokensResponse"8@"NSError"16
MusicKit tokens
ICCloudServiceStatusMonitor.m
Calling -_beginTransactionForCloudServiceStatusMonitorConnectionWithIdentifier: with the same transaction identifier more than once is invalid.
Failed to get listener endpoint for cloud service status monitor.
request-%@-%@
Encountered error while requesting %@.
TCCAccessRequest completion handler was not called.
v12@?0C8
com.apple.private.tcc.allow
cloud service capabilities
v24@?0Q8@"NSError"16
storefront country code
storefront identifier
cloud service status observation token
v16@?0@"NSUUID"8
ongoing-observation-of-cloud-service-status-%@
relinquishment of cloud service status observation token
com.apple.itunescloudd.launched
uniqueID
startDelegationRequest
finishDelegationRequest
authentication-performed
other
com.apple.iTunesCloud.ICCloudContentTasteRequestListener.MediaContentTaste
v16@?0@"NSError"8
com.apple.itunescloud.contenttaste
notice
HSCloudAvailabilityControllerCanShowCloudDownloadButtonsDidChangeNotification
HSCloudAvailabilityControllerCanShowCloudTracksDidChangeNotification
HSCloudAvailabilityControllerHasProperNetworkConditionsToShowCloudMediaDidChangeNotification
HSCloudAvailabilityControllerIsCellularDataRestrictedDidChangeNotification
HSCloudAvailabilityControllerNetworkReachabilityDidChangeNotification
com.apple.iTunesCloud.ICCloudAvailabilityController.accessQueue
com.apple.mobileipod-prefsChanged
UIApplicationWillEnterForegroundNotification
UIApplicationDidEnterBackgroundNotification
com.apple.iTunesCloud.ICCloudAvailabilityController
v24@?0^{__CFString=}8^{__CFDictionary=}16
VideosShowCloudMediaEnabledSetting
ICMusicUserTokenCacheDidChangeNotification
com.apple.iTunesCloud.ICMusicUserTokensDidChangeDistributedNotification
com.apple.iTunesCloud.ICMusicUserTokenCache.accessQueue
com.apple.iTunesCloud.ICMusicUserTokenCache.calloutQueue
User Token caching failed
v12@?0B8
Failed to create a key for the Music User Token Cache because the key identifier and/or the team identifier could not be derived from developer token "%@".
Failed to create a key for the Music User Token Cache because there was no DSID in the user identity for the request.
%lli;%@;%@
com.apple.iTunesCloud.ICDelegationProviderServiceSession.accessQueue
com.apple.iTunesCloud.ICDelegationProviderServiceSession.calloutQueue
v24@?0@"ICDelegationServiceSecuritySettings"8@"NSError"16
v32@?0@"NSInputStream"8@"NSOutputStream"16@"NSError"24
v24@?0@"ICPBDGSResponse"8@"NSError"16
v28@?0@"ICPBDGSFinishDelegationRequest"8@"NSError"16B24
v32@?0@"ICPBDGSStartDelegationRequest"8@"NSDictionary"16@"NSError"24
v20@?0B8q12
Server requested authentication
Failed to get verification context for identity %@
silent
station-dict
tracklist-action-type
station-track-dict
queueId
explicitSetting
storefronts
currentRadioStationId
demarkationPos
error-value
traceId
token-ttl-in-seconds
com.apple.itunescloud.ICUserNotificationSettingsDidChangeNotification
com.apple.itunescloud.ICUserNotificationSettingsAreAuthorizedUserInfoKey
<%@: %p; identity = %@; identityStore = %@>
_itsdlgt._tcp.
com.apple.itunescloud.remote-request-execution-service
Media/EnhancedAudioSharedKeys/
<%@ %p (%@, status:%d, persistable:%d)>
com.apple.iTunesCloud.ICContentKeySession.accessQueue
<%@ %p (%@, requestOfflineKeys:%d)>
contentKeySpecifiersEligibleForPreloading
FromCache
Success
Error-%@-%lld
Fallback
v24@?0@"ICSecureKeyDeliveryResponse"8@"NSError"16
v32@?0@"NSString"8@"NSDate"16^B24
v24@?0@"NSString"8^B16
v32@?0@?<v@?>8Q16^B24
com.apple.tv
com.apple.iBooks
com.apple.podcasts
com.apple.AppStore
com.apple.NanoMusic
com.apple.NanoBooks
com.apple.TVMusic
com.apple.TVWatchList
NSString * _Nonnull ICBundleIdentifierForSystemApplicationType(ICSystemApplicationType)
ICSystemApplication.m
No bundle identifier defined for application type %d
clientType
v24@?0@"AMSMediaToken"8@"NSError"16
Media API Token Service responded with status code: %@. This suggests that "%@" was likely not registered as a valid client identifier.
Media API Token Service's response was invalid (status code: %@).
Media API Token Service's response was invalid.
Failed to fetch media token from %@.
<%@ %p securityMode: %li hasPassword: %@>
com.apple.iTunesCloud.ICDelegationServiceSecuritySettings.receiverSerialQueue
accessControlLevel
v16@?0^v8
com.apple.iTunesCloud.ICDelegationServiceSecuritySettings.senderSerialQueue
v16@?0^{__CFString=}8
APSSettingsGetInt64
void *AirPlaySupportLibrary(void)
ICDelegationServiceSecuritySettings.m
int64_t soft_APSSettingsGetInt64(CFStringRef, OSStatus *)
AUUID-
DeviceName
ServiceVersion
SecurityMode
v32@?0@"NSString"8@"NSData"16^B24
Delegation UUIDs: %@
Delegation UUIDs: Missing
Device name: %@
Device name: Uknonwn
defaultButton
explanation
initialCheckboxValue
message
m-allowed
isFree
okButtonString
okButtonAction
cancelButtonString
cancelButtonAction
otherButtonString
otherButtonAction
buyParams
subtarget
authorization
cancel
Goto
GotoFinance
OpenURL
GoBack
QRCode
redeem-code
Review
RetryRestoreAll
ServiceAction
FamilyPermissionAction
account
<%@ %p responseDictionary: %@>
contentTypeCode
ICMusicSubscriptionStatusDidChangeNotification
_ICMusicSubscriptionStatusDidChangeDistributedNotification
ICUserIdentityForMusicSubscriptionStatusDidChangeKey
ICNewStatusForMusicSubscriptionStatusDidChangeKey
ICOldStatusForMusicSubscriptionStatusDidChangeKey
com.apple.itunescloud.ICMusicSubscriptionStatusDidChangeFollowingPrivacyAcknowledgementDistributedNotification
com.apple.security.exception.mach-lookup.global-name
com.apple.iTunesCloud.ICMusicSubscriptionStatusController.accessQueue
com.apple.iTunesCloud.ICMusicSubscriptionStatusController.callbackQueue
com.apple.iTunesCloud.ICMusicSubscriptionStatusController.operationQueue
v20@?0@"NSString"8B16
v16@?0@"ICRequestContext"8
Disallowing subscription status request for sandboxed user identity %@
v32@?0@"NSUUID"8@"ICMusicSubscriptionStatusRequest"16^B24
com.apple.iTunesCloud.ICDelegationConsumerServiceSession.accessQueue
com.apple.iTunesCloud.ICDelegationConsumerServiceSession.calloutQueue
v32@?0@"ICPBDGSStartDelegationResponse"8@"NSDictionary"16@"NSError"24
v32@?0@"NSNumber"8@"ICDelegationConsumerServiceSessionRequestResult"16^B24
v32@?0@"ICPBDGSFinishDelegationResponse"8@"NSDictionary"16@"NSError"24
v32@?0@"ICUserIdentity"8Q16^B24
v32@?0@"NSString"8Q16^B24
v32@?0@"NSString"8@"NSDictionary"16^B24
v32@?0@"NSDictionary"8@"NSString"16^B24
meta
isAuthenticated
storePlatformData
messageID
params
eventID
qrp-01
/SharedListening/stream
SharedListening
music-colistening.itunes.apple.com
music-colistening-sandbox.itunes.apple.com
ICLiveLinkQRConnectionDataSourcePseudonymURI
ICLiveLinkQRConnectionDataSourcePseudonymURIExpirationTimestamp
com.apple.amp.mediaservices.MSVQRConnectionLiveLinkDataSource.serialQueue
Session Discovery
v32@?0@"NSString"8@"NSArray"16@"NSError"24
com.apple.private.alloy.amp.potluck
MediaPlayer
NewPotluckService
com.apple.private.alloy.itunes
Provision Pseudonym
v24@?0@"IDSPseudonym"8@"NSError"16
No account found on service.
User account has no registered URIs.
Failed to provision pseudonym.
Failed to renew pseudonym.
Join Request
Create Request
Get Bag
Content-Type
anonymousHandle
externalParticipantId
parameters
v16@?0@"ICMusicKitRequestContext"8
Received error from session discovery.
x-responding-instance
Session data did not form dictionary.
messageForDisplay
Server Error [%ld]
serverError
Session response contained error: [%ld] %@ %@
session
attributes
joinParams
Session response is missing required fields.
groupId
anonymousHandles
joinToken
Missing music API domains.
sharedListening
Missing default music API domain.
Bag is missing country code.
https://%@/v1/shared-media/%@/join/media-sessions/%@
https://%@/v1/shared-media/%@/create/media-sessions
PotluckEnvironment
Production
Carry
Sandbox
Custom
PotluckCustomHostName
Cannot determine environment.
Potluck
1.2.840.113635.100.6.27.61
v28@?0^{__SecTrust=}8B16^{__CFError=}20
v40@?0@"NSObject<OS_sec_protocol_metadata>"8@"NSObject<OS_sec_trust>"16@"NSObject<OS_dispatch_queue>"24@?<v@?B@"NSError">32
MCProfileConnection
Class getMCProfileConnectionClass(void)_block_invoke
ICLiveLinkQRConnectionDataSource.m
void *ManagedConfigurationLibrary(void)
NSString *getMCFeatureExplicitContentAllowed(void)
MCFeatureExplicitContentAllowed
NSString *getMCFeatureMusicVideosAllowed(void)
MCFeatureMusicVideosAllowed
<%@ %p (ckc:%@, renewalDate:%@)>
<redacted>
ICTelephonyPhoneNumberDidChangeNotification
com.apple.iTunesCloud.ICTelephonyController.accessQueue
com.apple.iTunesCloud.ICTelephonyController.telephonyCallbackQueue
CarrierName
Failed to send SMS using telephony slot: %@.
SessionEvent
PlaybackEvent
QueueEvent
ReactionEvent
CustomEvent
Unknown/type=%ld
<ICLiveLinkEvent: %p participant=%@ unknown/invalid>
<ICLiveLinkEvent: %p participant=%@ sessionEvent=%@>
<ICLiveLinkEvent: %p participant=%@ playbackEvent=%@>
<ICLiveLinkEvent: %p participant=%@ queueEvent=%@>
<ICLiveLinkEvent: %p participant=%@ reactionEvent=%@>
<ICLiveLinkEvent: %p participant=%@ customEvent=%@>
<ICLiveLinkEvent: %p participant=%@ unknown/eventType=%ld>
<ICLiveLinkCustomEvent: %p localizedMessage="%@">
<ICLiveLinkPlaybackEvent: %p kind=%@>
<ICLiveLinkQueueEvent: %p unknown/invalid>
<ICLiveLinkQueueEvent: %p contentAdded=%@
<ICLiveLinkQueueEvent: %p contentRemoved=%@
<ICLiveLinkQueueEvent: %p contentReordered=%@
<ICLiveLinkQueueEvent: %p contentReplaced=%@
<ICLiveLinkQueueEvent: %p contentPlayedNow=%@
<ICLiveLinkQueueEvent: %p contentUpdatedMessage=%@
<ICLiveLinkQueueEvent: %p playbackModeChanged=%@
<ICLiveLinkQueueEvent: %p unknown/eventKind=%ld
<ICLiveLinkQueueEventContentAdded: %p %@(%@)=%@ itemIdentifiers=%@>
<ICLiveLinkQueueEventContentAdded: %p unknown itemIdentifiers=%@>
<ICLiveLinkQueueEventContentPlayedNow: %p %@(%@)=%@ itemIdentifiers=%@ startItemID=%@>
<ICLiveLinkQueueEventContentPlayedNow: %p unknown itemIdentifiers=%@ startItemID=%@>
<ICLiveLinkQueueEventContentRemoved: %p itemIdentifier=%@>
<ICLiveLinkQueueEventContentReordered: %p itemIdentifier=%@>
<ICLiveLinkQueueEventContentReplaced: %p startItemID=%@>
<ICLiveLinkQueueEventContentUpdatedMessage: %p localizedTitle="%@" localizedMessage="%@">
q8@?0
<ICLiveLinkQueueEventPlaybackModeChanged: %p unknown/invalid>
<ICLiveLinkQueueEventPlaybackModeChanged: %p shuffleType=%@>
<ICLiveLinkQueueEventPlaybackModeChanged: %p repeatType=%@>
<ICLiveLinkQueueEventPlaybackModeChanged: %p autoPlayEnabled=%@>
<ICLiveLinkQueueEventPlaybackModeChanged: %p unknown/kind=%ld>
<ICLiveLinkReactionEvent: %p reaction="%@" reactionID=%@ itemID=%@>
<ICLiveLinkSessionEvent: %p kind=%@>
Play
Pause
Scrub
Skip
Unknown/kind=%ld
Items
Collections
Unknown/shuffleType=%ld
Unknown/repeatType=%ld
Join
Connect
Disconnect
Leave
Update
com.apple.AppleMediaServices.accountmediatype.itunes
scope
isActiveLockerAccount
isManagedAppleID
eligibleServices
automaticDownloadKinds
musicPrivateListeningEnabled
musicPrivateListeningEnabledForHomeUsers
activeMediaTypes
privacyAcknowledgement
<%@ (%@) [DSID=%@, isActive=%d]>
<%@ (%@) [primary=%d]>
v32@?0@"NSString"8@"NSNumber"16^B24
v32@?0@"NSUUID"8@"NSNumber"16^B24
guid-urls
getMatchStatusSrv
isMatchServiceEnabled
cloud-welcome
amd-domains
sign-sap-request
sign-sap-response
signed-actions
musicCommon
sign-sap-setup-cert
sign-sap-setup
fps-cert
fps-request
subDownload
md-finish-provisioning
amd-finish-provisioning
md-sync-machine
amd-sync-machine
redownloadProduct
paidRedownloadProduct
auth-can-post
songDownloadDone
storefront-header-suffix
musicForYou
browse
grouping
radioTab
getSubscriptionStatusSrv
lease-stop
storeplatform-lookup-url
storeplatform-lookup-url-unpersonalized
delegatePlayback
enableSubscription
disableSubscrption
getSubscriptionStatus
getWholeHouseAudioPlayInfo
play-activity-feed-request-post-url
authorizeMachine
mobile-network-constraints
library-auth-service-token-url
musicSubscription
buyProduct
push-notification-types
push-notifications
revokeMusicToken
subscription-status-refresh-interval-in-seconds
push-notification-allowexplicit
library-daap
preference-service-sync-url
preference-service-scheduled-sync-period-in-minutes
musicFriends
isExplicitContentAgeVerificationRequired
ExplicitContentBadgeTreatment
korAgeVerificationUrl
fuseHeaderEnrichment
fuseHeaderEnrichmentResponse
createMusicToken
inAppMessages
musicConnect
addToSiriTagHistoryBaseUrl
addToTRHistoryBaseUrl
pmlt-url
addToWishlistBaseUrl
getShareIdentifiers
purchase-daap
p2-content-restore
cloud-add-computer
storeFrontId
artist-new-content
countryCode
fetchSinfs
fuseCarrierMccMncList
ampMusicAPIDomains
enhanced-audio
get-play-info
url-regex-map
ios-app-url
voiceActivationTokenTTLInSeconds
js-app-url
trustedDomains
musicTabs
pm-feedback-base-url
max-mini-sinf-batch-size
getSubscriptionOffersSrv
auto-enrollment-percentage
use-apple-pay-classic
language-tag
manageSubscriptionsV2Url
AddFundsUrl
modifyAccount
marketingItemDynamicUIUrl
amsui-sources
musicui-js-url
commerce-ui-urls
musicSubscriptionOffersForStorefront
commerceApp
commerceAppBaseUrl
commerceAppFallbackUrl
financeApp
marketing-item-media-api-path
marketing-item-media-api-realm-mappings
subscription-storefront-header-suffix
redeemCodeLanding
cloud-library-opt-out-url
absinthe-requests
aps-sampling-percentage
clientIDDomains
ios-app-download-retry-count
lyricsOnByDefaultDisabled
md-domains
min-artist-update-polling-frequency-secs
ratingWarningThreshold
ratingWarningTitle
ratingWarningText
TLSSamplingPercentage
TLSSamplingSessionDuration
TFOSamplingPercentage
TFOSamplingSessionDuration
cloud-library-update-request
cloud-library-update-check
heif-format-rollout
sRdnld
isExplicitMusicDisallowed
processRedirectUrl
getMusicSDKAuthorizationsSrv
metrics
manageSubscriptionsUrl
appleMusicDeviceOfferDeepLink
revokeMusicSDKAuthorizationSrv
bag_dictionary
fallback_values
expiration_time
request_time
server_correlation_key
server_environment
profile_name
profile_version
aource_account_dsid
v32@?0@"NSString"8@16^B24
http
ICURLBag
Found unexpected type for bag key '%@' in profile '%@': '%@' (expected String)
Found unexpected type for bag key '%@' in profile '%@': '%@' (expected Array)
Found unexpected type for bag key '%@' in profile '%@': '%@' (expected Dictionary)
Failed to create url for bag key '%@' in profile '%@': '%@'
fields
musicMescal
actions
Failed to create a snapshot bag
regex
schemes
https
https://play.itunes.apple.com/WebObjects/MZPlay.woa/wa/getSubscriptionStatusSrv
https://play.itunes.apple.com/WebObjects/MZPlay.woa/wa/revokeMusicToken
https://p49-buy.itunes.apple.com/WebObjects/MZFinance.woa/wa/sagaAddComputer
https://apps.apple.com/redeem/
https://genius-2.itunes.apple.com/WebObjects/UCGovernor.woa/wa/optOutCloudLibrary
https://sp.itunes.apple.com/WebObjects/MZStorePlatform.woa/wa/lookup
https://client-api.itunes.apple.com/WebObjects/MZStorePlatform.woa/wa/lookup
https://play.itunes.apple.com/WebObjects/MZPlay.woa/wa/subPlaybackDispatch
https://buy.itunes.apple.com/WebObjects/MZBuy.woa/wa/paidRedownloadProduct
https://buy.itunes.apple.com/WebObjects/MZBuy.woa/wa/redownloadProduct
https://genius-2.itunes.apple.com/WebObjects/UCGovernor.woa/wa/checkCloudUpdateStatus
https://genius-2.itunes.apple.com/WebObjects/UCGovernor.woa/wa/requestCloudLibraryUpdate
https://play.itunes.apple.com/WebObjects/MZPlay.woa/wa/sRdnld
https://p49-buy.itunes.apple.com/commerce/subscription/offers/music
/v1/engagement/{cc}/upsell/marketing-items
https://apps.mzstatic.com/content/54a1317a0ad442d3965d64ef6bfaae1c/
https://apps.mzstatic.com/content/54a1317a0ad442d3965d64ef6bfaae1c/subscribe
https://{ld-$TrPod$}.itunes.apple.com:443/WebObjects/MZDaap.woa/daap
com.apple.iTunesCloud.ICDelegationProviderServiceProtocolHandler.operationQueue
com.apple.iTunesCloud.ICDelegationProviderServiceProtocolHandler.calloutQueue
rules
provider-resource
sharing-enabled
like-enabled
core-seed-name
description
attribution-label
station-type
station-subtype
requires-subscription
INSERT OR REPLACE INTO delegation_uuid (user_identity, uuid, insertion_date) VALUES (?, ?, ?)
v16@?0@"<ICSQLiteBinding>"8
DELETE FROM token
DELETE FROM delegation_uuid WHERE user_identity==? AND uuid=?
DELETE FROM token WHERE expiration_date<?
INSERT OR REPLACE INTO metadata (key, value) VALUES (?, ?)
INSERT OR REPLACE INTO account (identity, storefront) VALUES (?, ?)
DELETE FROM account WHERE identity==?
DELETE FROM token WHERE account_identity==?
INSERT OR REPLACE INTO token (account_identity, data, expiration_date, type) VALUES(?, ?, ?, ?)
interactionLevel
ICSecurityInfoFirstUnlockNotification
com.apple.itunescloud.ICSecurityInfo.accessQueue
com.apple.itunescloud.ICSecurityInfo.calloutQueue
isMatchSubscriber
itunescloudd
AMSAutomaticDownloadKindsSetTask failed
v24@?0@"AMSAutomaticDownloadKindsResult"8@"NSError"16
v24@?0@"AMSAuthenticateResult"8@"NSError"16
v24@?0@"AMSDialogResult"8@"NSError"16
v24@?0@"ICRemoteRequestOperationExecutionResponse"8@"NSError"16
com.apple.iTunesCloud.ICMusicSubscriptionLeaseController.accessQueue
com.apple.iTunesCloud.ICMusicSubscriptionLeaseController.leaseSessionPreparationOperationQueue
com.apple.iTunesCloud.ICMusicSubscriptionLeaseController.notificationSerialQueue
com.apple.itunesstored.PlaybackLeaseDidEnd
ICMusicSubscriptionLeaseIgnorePushNotifications
v32@?0@"_ICMusicSubscriptionLeaseIdentityCacheKey"8@"ICMusicSubscriptionLeaseSession"16^B24
Failed to get lease session [missing user identity or user identity store] - userIdentity=%@ - userIdentityStore=%@
v16@?0@"ICUserIdentityProperties"8
Failed to get lease session [invalid delegated identity] - delegatedIdentity=%@
v24@?0@"ICUserIdentityProperties"8@"NSError"16
Failed to get lease session [no properties for user identity] - userIdentity=%@
v32@?0@"NSString"8@"NSString"16^B24
%@=%@
Accept-Language
Cookie
Content-Encoding
User-Agent
Set-Cookie
Cache-Control
Content-Range
Expires
ETag
max-age
text/xml; charset=utf-8
application/x-protobuf
activeCommandsOnly
expiration_prune
CREATE TABLE IF NOT EXISTS account(identity TEXT PRIMARY KEY,storefront TEXT);
CREATE TABLE IF NOT EXISTS metadata(key TEXT PRIMARY KEY,value TEXT);
CREATE TABLE IF NOT EXISTS token(account_identity TEXT UNIQUE,type INTEGER NOT NULL,expiration_date REAL,data BLOB NOT NULL);
CREATE TABLE IF NOT EXISTS delegation_uuid(user_identity TEXT,uuid TEXT,insertion_date REAL,UNIQUE(user_identity, uuid));
Library/com.apple.iTunesCloud/ICDelegateAccountStore.db
PRAGMA user_version=%ld
B8@?0
ANALYZE
PRAGMA user_version
ICMusicKitURLRequest.m
[requestContext isKindOfClass:[ICMusicKitRequestContext class]]
; requestContext = %@
Failed to fetch developer token from %@.
v24@?0@"NSString"8@"NSError"16
Bearer %@
Authorization
personalized
unpersonalized
Music-User-Token
Failed to fetch user token.
Unauthorized to fetch user token, but reached maximum retry count for developer token invalidation; aborting.
Unauthorized to fetch user token, but developer token invalidation failed; aborting.
com.apple.itunescloud.music-subscription-status-service
ICSharedListeningConnectionControllerError
com.apple.iTunesCloud.ICDirectSharedListeningConnectionController.delegateQueue
SharedListeningAssertion
com.apple.iTunesCloud.ICExternalSharedListeningConnectionController.delegateQueue
com.apple.iTunesCloud.SharedListeningConnectionService
XPC connection interrupted.
XPC connection invalidated.
; identity = %@
; identityStore = %@
@"ICMusicSubscriptionStatusMonitor"16@?0@"ICUserIdentityContext"8
v16@?0@"NSNotification"8
allowed
restricted
required
v24@?0@"ICMusicSubscriptionStatusResponse"8@"NSError"16
v32@?0@"<NSCopying>"8@?<v@?@"ICMusicSubscriptionStatusMonitor"@"ICMusicSubscriptionStatus">16^B24
SELECT uuid FROM delegation_uuid WHERE user_identity==?
uuid
v32@?0@"ICSQLiteRow"8@"NSError"16^B24
v24@?0@"ICSQLiteQueryResults"8@"NSError"16
SELECT data, expiration_date, type, account_identity FROM token WHERE (expiration_date IS NULL) OR (expiration_date >= ?)
SELECT data, expiration_date, type, account_identity FROM token WHERE (type == ?) AND ((expiration_date IS NULL) OR (expiration_date >= ?))
SELECT account.storefront AS storefront, token.data AS data, token.expiration_date AS expiration_date, token.type AS type FROM account LEFT OUTER JOIN token ON account.identity==token.account_identity WHERE account.identity==?
SELECT value FROM metadata WHERE key==?
SELECT count(account_identity) FROM token
SELECT data, expiration_date, type FROM token WHERE account_identity==?
data
expiration_date
account_identity
is-async
v24@?0@"NSDictionary"8@"NSError"16
v24@?0@"NSURLRequest"8@"NSError"16
%ld/%@
X-Apple-Radio-Client-Version
machine-data-action-performed
dialog-processed
v20@?0B8@"NSError"12
v36@?0B8q12@"NSString"20@"NSError"28
invalidate-url-bags
errorKey
Received HTTP error status code %ld
v32@?0@"NSString"8@"NSString"16@"NSError"24
v24@?0B8B12@"NSError"16
v32@?0q8@"NSString"16@"NSError"24
v16@?0@"ICMutableLocalStoreAccountProperties"8
accountID
Shared Listening Report
Shared listening session ID: %@
Group session ID: %@
Total time: %.3f seconds.
%@: %.3fs.
 Error: %@.
itemIdsToRemove
com.apple.itunescloud.ICStoreHTTPCookieManager
v32@?0@"NSString"8@"NSHTTPCookie"16^B24
dataUpdated
settingId
notifications.music.account.showInLibrary
notifications.music.account.artistsAndShows
ICUserIdentityStoreDelegateAccountStoreDidChangeNotification
ICUserIdentityStoreDidChangeNotification
ICActiveUserIdentityDidChangeNotification
ICUserIdentityStoreLocalStoreAccountPropertiesDidChangeNotification
com.apple.iTunesCloud.ICUserIdentityStore.accessQueue
com.apple.iTunesCloud.ICUserIdentityStore.callback
v16@?0@"ICDelegateAccountStoreReader"8
Unable to get verification context for user identity - activeAccountDSID=%@ - allowsAccountEstablishment=%u
ICUserIdentityStore.m
dsID != nil
helper
The following method is not supported on the null identity store: %s.
v24@?0@"ICDelegateAccountStore"8@"NSError"16
com.apple.iTunesCloud.ICMachineDataSession.callback
com.apple.iTunesCloud.ICMachineDataSession.operation
motionDetailTall
previewFrame
video
videoFile
assetUrl
v32@?0@8@16^B24
pf=%@/hls=%@/crabs=%@
redownload
action-params
priceFormatted
price
ICDelegationProviderNetServiceDelegationAccountUUIDsDidChangeNotification
com.apple.iTunesCloud.ICDelegationProviderNetService.accessQueue
com.apple.iTunesCloud.ICDelegationProviderNetService.serialQueue
com.apple.iTunesCloud.ICDelegationProviderNetService.netServiceStreamResolutionQueue
PRAGMA user_version=%@
ROLLBACK TRANSACTION
COMMIT TRANSACTION
BEGIN DEFERRED TRANSACTION
Cannot prepare statement without a database.
Statement from a different connection
text/html
media_api_url_map.plist
etag
mappings
v24@?0@"ICURLBag"8@"NSError"16
Library/Caches/com.apple.iTunesCloud/
database-id
database-name
is-online-genius-for-match-enabled
play-data-batch-interval-in-minutes
subscribed-container-polling-frequency-secs
update-polling-frequency-secs
auto-update-polling-frequency-secs
max-sync-retry-interval-secs
ICMusicSubscriptionFairPlayKeyStatusDidChangeNotification
com.apple.itunescloud.ICMusicSubscriptionFairPlayKeyStatusDidChangeNotification
com.apple.iTunesCloud.ICMusicSubscriptionFairPlayController.calloutQueue
com.apple.iTunesCloud.ICMusicSubscriptionFairPlayController.fairPlaySerialQueue
v24@?0@"NSArray"8@"NSError"16
householdId
ICMusicSubscriptionLeaseDurationInterval
leaseDurationInSeconds
<%@: %p; params = %@>
isOfflineDownload
requestProtocolType
contentURI
adamID
certificateURL
keyServerURL
@"NSData"24@?0@"NSData"8^@16
v24@?0@"NSData"8@?<v@?@"NSData"@"NSError">16
fairplay-streaming-response
streaming-keys
renew-after
expiration-time
playback-start-time
download-repair-wait
v24@?0@"ICURLResponse"8@"NSError"16
v24@?0@"NSData"8@"NSError"16
rental-id
skipped-rental-checkout
renew
start
stop
lease-action
fairplay-streaming-request
keyUri
path
signal-bars-max
signal-bars
com.apple.itunescloud.ICEnvironmentMonitor.accessQueue
com.apple.itunescloud.ICEnvironmentMonitor.calloutQueue
v12@?0i8
UIApplicationDidEnterForegroundNotification
%d (%@)
high
fair
v8@?0
com.apple.iTunesCloud.ICUserCredentialProvider.accessQueue
com.apple.iTunesCloud.ICUserCredentialProvider.calloutQueue
v36@?0@"ICUserCredentialRequest"8@"ICUserCredentialResponse"16@"NSError"24B32
v16@?0@"ICAsyncBlockOperation"8
com.apple.iTunesCloud.ICUserCredentialProvider.delegationAccountUUIDOperationQueue
com.apple.iTunesCloud.ICUserCredentialProvider.delegationAccountUUIDSerialQueue
v16@?0@"ICMutableUserIdentityProperties"8
v44@?0@"ICUserIdentity"8@"ICDelegateToken"16@"NSString"24@"NSError"32B40
ICUserCredentialProvider.m
[credentialRequests count] > 0
 cloudID: %llu
 lyricsID: %@
 purchasedAdamID: %lli
 radioAdamID: %lli
 equivalencySourceAdamID: %lli
 reportingAdamID: %lli
 subscriptionAdamID: %lli
ICPlayActivityEventItemIDsCloudID
ICPlayActivityEventItemIDsLyricsID
ICPlayActivityEventItemIDsPurchasedAdamID
ICPlayActivityEventItemIDsRadioAdamID
ICPlayActivityEventItemIDsEquivalencySourceAdamID
ICPlayActivityEventItemIDsReportingAdamID
ICPlayActivityEventItemIDsSubscriptionAdamID
NONE
INTRO
RETAIL
HOME_POD
WIN_BACK_1
WIN_BACK_2
WIN_BACK_3
HARDWARE_1
MINT_SPECIAL
STUDENT_1
Enabled
Glide
Disabled
Individual
Family
Member
InvalidToken
fullCatalogPlayback
voiceActivatedCatalogPlayback
anyCatalogPlayback
CatalogPlayback
catalogPlayback[%@]
cloudLibraryEligible
addCatalogContentToCloudLibrary
catalogLyricsViewing
_ICMusicSubscriptionStatusAdditionalProperties
isMinor
hasFamily
hasFamilyGreaterThanOneMember
isHoH
hasOfflineSlots
isInFreeTrial
isNotEligibleForFreeTrial
isPurchaser
source
Apple
isInGlidePreview
Discovery
Unlinked
isUnlinked
isPartOfBundle
ownsBundle
terms
acceptSilentAuth
cellularOperatorName
sessionIdentifier
carrierBundlingErrorCode
carrierBundlingStatusType
isMinorAccountHolder
isHeadOfHousehold
isMatchEnabled
isEligibleForFreeTrial
isAdministrator
isDiscoveryModeEligible
termsStatusList
isBundleOwner
Eligible
NotEligible
NeedsManualVerification
 carrierBundlingErrorCode:%ld
 eligibleOffers:%@
<%@ %p statusType:%@, matchEnabled=%@, carrierBundlingStatusType:%@, reasonType:%@, sourceType:%@%@, capabilities:%@, eligibleOffers:[%@], isInFreeTrial:%@, isEligibleForFreeTrial:%@>
Store
latestTerms
agreedToTerms
currentVersion
acceptedVersion
ICWiFiManagerWiFiDidChangeNotification
ICWiFiManagerWiFiEnabledUserInfoKey
ICWiFiManagerWiFiAssociatedUserInfoKey
com.apple.amp.HomeSharing.HSWiFiManager.accessQueue
com.apple.wifi.plist
%s (%d)
hls-cert
hls-prefetch-skd-urls
; bundleIdentifier = "%@"
; processName = "%@"
; clientIdentifier = "%@"
; clientVersion = "%@"
; requestingBundleIdentifier = "%@"
; requestingBundleVersion = "%@"
; bagProfile = "%@"
; bagProfileVersion = "%@"
itunescloudtool
NanoMusic
TVMusic
MRMusic
AirMusic
processName
clientIdentifier
clientVersion
bagProfile
bagProfileVersion
kinds
size-limits
com.apple.itunescloud.ICNetworkConstraints
void _MSVHasherAppend64(MSVHasher * _Nonnull, uint64_t)
void _MSVHasher_SipHash_1_3_Append64(MSVHasherSipHash_1_3 *, uint64_t)
void _MSVHasherAppend32(MSVHasher * _Nonnull, uint32_t)
void _MSVHasher_SipHash_1_3_Append32(MSVHasherSipHash_1_3 *, uint32_t)
NSUInteger _MSVHashGetHash(MSVHash)
0123456789abcdef
MSVHash _MSVHasherFinalize(MSVHasher * _Nonnull)
sections
sectionId
com.apple.Music.main
add-push-notification-type-url
Subscription status cache will not observe phone number because phone number access is restricted.
Setting cached subscription status response for cache key %{public}@: %{public}@.
Removing cached subscription status response for cache key %{public}@.
Base cache key for subscription status cache remains unchanged: %{public}@.
Base cache key for subscription status cache updated from %{public}@ to %{public}@.
Posting %{public}@.
Received phone number did change notification. Updating base cache key for subscription status cache.
Received user identity store did change notification. Updating base cache key for subscription status cache.
Received active identity did change notification - invalidating cache.
Reloading subscription status cache due to external change notification
Posting local change notification as shouldTreatSubscriptionStatusAsExpired is set
%{public}@ Failed to load active account DSID - skipping account check. err=%{public}@
%{public}@ invalidating loaded cached subscription status. cachedOSVersion=%{public}@, currentOSVersion=%{public}@; cachedActiveAcccountDSID=%{public}@, currentActiveAccountDSID=%{public}@
%{public}@ loaded subscription status cache: %{public}@
%{public}@ Failed to load active account DSID to save. err=%{public}@
%{public}@ failed to get user identity properties. err=%{public}@
%{public}@ received subscription response %{public}@
%{public}@ failed to import subscription keybag. err=%{public}@
%{public}@ Performing lightweight subscription status request. Extended request: %{public}@.
ICCloudClientCloudService %p - Creating XPC Client Connection [started]
ICCloudClientCloudService %p - Creating XPC Client Connection [failed] - endpoint=%{public}@ - error=%{public}@
ICCloudClientCloudService %p - Creating XPC Client Connection [ended] - connection=%{public}@
ICCloudClientCloudService %p - Unable to create XPC Connection [no listener endpoint]
ICCloudClientCloudService %p - Connection to cloud availability service interrupted
ICCloudClientCloudService %p - Connection to cloud availability service invalidated
ICCloudClientCloudService %p - Resetting XPC connection to nil
ICAgeVerificationManager %p - ageVerificationStateForUserIdentity - Retrieving state [Disk cache] - Kicking off refresh - State=%@
ICAgeVerificationManager %p - ageVerificationStateForUserIdentity - Retrieving state [In-memory cache] - State=%@
ICAgeVerificationManager - Missing critical entitlement for age verification: "apple" - "keychain-access-groups"
ICAgeVerificationManager %p - Received ICUserIdentityStoreDidChangeNotification - Refreshing state for active user
ICAgeVerificationManager %p - Error retrieving properties for account %{public}@ during age verification: %{public}@ - Explicit content allowed and marked with 'E'.
ICAgeVerificationManager %p - Error retrieving bag during age verification: %{public}@ - Explicit content allowed and marked with 'E'.
ICAgeVerificationManager %p - There are no properties for account %{public}@ - Explicit content allowed.
ICAgeVerificationManager %p - Explicit content allowed.
ICAgeVerificationManager %p - Performing age verification
%{public}@ - Expiration date provided from ICDefaults: %{time_t}zd
%{public}@ - Expiration date provided from ACAccount: %{time_t}zd
ICAgeVerificationManager %p - Age verification state: %{public}@
ICAgeVerificationManager %p - Bag key(s) missing for age verification: %{public}@ - Explicit content allowed and marked with 'E'.
Failed to decode valid developer token while initializing instance of ICMusicKitTokensResponse from decoder.
%{public}@ Starting system service...
%{public}@ Requesting a sync because the system version has changed from %{public}@ --> %{public}@
%{public}@ Stopping system service...
%{public}@ fetching all messages
%{public}@ Failed to load all messages. err=%{public}@
%{public}@ fetching messages for bundle identifiers %{public}@
%{public}@ Failed to load messages for bundle identifiers %{public}@. err=%{public}@
%{public}@ fetching message with identifier %{public}@ for bundle identifier %{public}@
%{public}@ Failed to load message %{public}@ for bundle identifier %{public}@. err=%{public}@
%{public}@ adding message: %{public}@
Failed to add message %{public}@. err=%{public}@
%{public}@ updating message %{public}@
Failed to update message %{public}@. err=%{public}@
%{public}@ removing message %{public}@ for bundle identifier %{public}@
%{public}@ removing all messages for bundle identifier %{public}@
%{public}@ Adding message for bundle identifier '%{public}@' from dialog request %{public}@
%{public}@ Failed to serialize local notification data. err=%{public}@
%{public}@ Finished adding message for dialog request. err=%{public}@
%{public}@ Performing sync
%{public}@ Performing reset
Failed to reset message store. err=%{public}@
%{public}@ Reporting event for message identifier %{public}@: %{public}@
%{public}@ Failed to add message event. err=%{public}@
%{public}@ Added message event %{public}@ for message 
%{public}@ Flushing message events
%{public}@ Not flushing events because privacy acknowledgement is required
Failed to load message events. err=%{public}@
%{public}@ Flushing %d events
Failed to flush message event %{public}@. err=%{public}@
Failed to remove completed event %{public}@. err=%{public}@
%{public}@ downloading resources for message %{public}@:%{public}@
%{public}@ clearing cached resources for message %{public}@:%{public}@
%{public}@ Failed to connect to remote service. err=%{public}@
%{public}@ Failed to remove badge for application with bundleId=%{public}@ and messageId=%{public}@. err=%{public}@
%{public}@ Failed to update messageEntry for messageId=%{public}@. err=%{public}@
Failed to get account properties. err=%{public}@
Failed to get message store account property. err=%{public}@
%{public}@ account changed from %lld --> %lld - performing reset
%{public}@ Failed to reset message store. err=%{public}@
%{public}@ Failed to update message store account property. err=%{public}@
%{public}@ Failed to sync after the reset. err=%{public}@
Connection to in-app message service interrupted
Connection to in-app message service invalidated
%{public}@ Adjusting bag refresh interval of %llds --> 7 days
%{public}@ Setting timer to perform periodic poll for %llds (+/- %llds)
%{public}@ Performing periodic sync
%{public}@ Periodic sync completed. err=%{public}@
%{public}@ Failed to update sync pending flag. err=%{public}@
%{public}@ Failed to get properties for active account for sync. err=%{public}@
%{public}@ Not performing sync because there's no active account
%{public}@ Not syncing because privacy acknowledgement is required
%{public}@ Sync request failed. err=%{public}@
%{public}@ Sync completed. err=%{public}@
%{public}@ Failed to get current server revision from message store. err=%{public}@
%{public}@ Ignoring sync command we've already applied (serial# %lld, currentRevision=%lld)
%{public}@ Processing sync command #%lld: %{public}@ %{public}@
%{public}@ Failed to process sync command. err=%{public}@
%{public}@ Finished processing sync commands. currentSyncRevision=%lld
%{public}@ Failed to add message %{public}@. err=%{public}@
Failed to badge application with bundleId=%{public}@ and badgeId=%{public}@. err=%{public}@
%{public}@ Processing local user notification in message %{public}@
%{public}@ Not posting local notification in message %{public}@ because the target app is in the foreground
%{public}@ Ignoring local notification in message %{public}@ because the notification string was not provided
%{public}@ Failed to parse notification for message %{public}@. err=%{public}@, payload=%{public}@
%{public}@ Extracted notification content: %{public}@
%{public}@ Failed to process notification for message %{public}@. payload=%{public}@
%{public}@ Failed to fetch with message with identifier:  %{public}@. err=%{public}@. Will not remove badge.
%{public}@ removing user notifications with identifier %{public}@
%{public}@ Failed to remove message %{public}@. err=%{public}@
%{public}@ Failed to remove message metadata for identifier %{public}@. err=%{public}@
%{public}@ Failed to gather messages to remove - some additional cleanup will be skipped. err=%{public}@
Failed to remove badge for application with bundleId=%{public}@ and badgeId=%{public}@. err=%{public}@
%{public}@ Failed to remove messages for bundle identifier %{public}@. err=%{public}@
%{public}@ Failed to remove message metadata for bundle identifier %{public}@. err=%{public}@
%{public}@ Had pending sync - retrying now
%{public}@ failed to fetch message %{public}@:%{public}@ to set the download setting on. err=%{public}@
%{public}@ failed to update message %{public}@:%{public}@ with the updated download setting. err=%{public}@
%{public}@ Initiating downloads for messages marked for caching
%{public}@ failed to load messages to check for downloads. err=%{public}@
%{public}@ Skipping downloads for message %{public}@:%{public}@ as its not allowed on the current network type (%d)
%{public}@ failed to fetch message %{public}@:%{public}@ to set the download flag on. err=%{public}@
%{public}@ base resource url missing from configuration - skipping download
%{public}@ Downloading web archive for message %{public}@:%{public}@
%{public}@ failed to download web archive for message %{public}@. err=%{public}@
%{public}@ Downloading template file for message %{public}@:%{public}@
%{public}@ failed to download template for message %{public}@. err=%{public}@
%{public}@ Downloading image %{public}@ for message %{public}@:%{public}@
%{public}@ failed to download image %{public}@ for message %{public}@. err=%{public}@
%{public}@ Downloaded %d resources for message %{public}@:%{public}@
%{public}@ failed to fetch message %{public}@ to update with cached resource locations. err=%{public}@
%{public}@ failed to update resource cache locations for message %{public}@. err=%{public}@
%{public}@ failed to load bag for configuration. err=%{public}@
%{public}@ failed to load configuration from bag
%{public}@ Purging orphaned cache directory %{public}@
%{public}@ Receiving New incoming connection from %{public}@: %{public}@
%{public}@ Client process %{public}@ does not have required entitlements - rejecting connection
%{public}@ Connection from %{public}@ interrupted - removing connection %{public}@
%{public}@ Connection from %{public}@ invalidated - removing connection %{public}@
%{public}@
%{public}@: Did accept connection with service: %{public}@ input: %{public}@ output: %{public}@
%{public}@: Remote server advertisement success with service: %{public}@
%{public}@: Remote server advertisement failed with service: %{public}@, error: %{public}@, retrying in %f seconds...
%{public}@: Created net service %{public}@.
%{public}@: Published net service %{public}@.
%{public}@: Retrieved security settings: %{public}@ with error: %{public}@
%{public}@: Published net service TXTRecord: %{public}@
%{public}@: Stopped net service %{public}@.
%{public}@ Failed to create an ICURLSession instance
%{public}@ An HLS asset is available and is preferred, so we will use it
%{public}@ Failed to download because the item is invalid (assetURL=nil) %{public}@
%{public}@ Failed to create download destination directory. This isn't fatal but may result in failure to save the playback keys. err=%{public}@
%{public}@ Enqueueing aggregate asset download using key session %{public}@
%{public}@ Aggregate asset download complete. err=%{public}@, destinationPath=%{public}@
%{public}@ Failed to copy key file '%{public}@'. err=%{public}@
%{public}@ Enqueueing AV asset download
%{public}@ AV asset download complete. err=%{public}@, destinationPath=%{public}@
%{public}@ Enqueueing standard file asset download
%{public}@ File asset download complete. err=%{public}@, destinationPath=%{public}@
%{public}@ Failed to fetch key with identifier '%{public}@'. err=%{public}@
%{public}@ failed to load identity properties. err=%{public}@
%{public}@ enabled multipath service type NSURLSessionMultipathServiceTypeInteractive for session %{public}@
%{public}@ Failed to decode compressed aps payload data.
%{public}@ Failed to decompress aps payload data.
%{public}@ Failed to deserialize aps payload data. err=%{public}@
%{public}@ unknown APS format %{public}@. assuming dictionary
xpcConnection=nil. %lu pending blocks may not execute.
Set cloud add-to-playlist behavior failed with error: %{public}@
Must provide at least a playlist name when creating a playlist.
Create cloud playlist failed with error: %{public}@
SDK: Create cloud playlist failed with error: %{public}@
Set cloud playlist properties failed with error: %{public}@
SDK Set cloud playlist properties failed with error: %{public}@
Add store item to playlist failed with error: %{public}@
Add saga id to playlist failed with error: %{public}@
SDK: Add store item to playlist failed with error: %{public}@
SDK: Add saga id to playlist failed with error: %{public}@
Publish cloud playlist failed with error: %{public}@
Upload playlist artwork failed with error: %{public}@
Update subscribed playlists failed with error: %{public}@
Update pinned subscribed playlists failed with error: %{public}@
Must provide a valid adam ID (%lld) adding to library.
Add store item to library failed with error: %{public}@
SDK: Add store item to library failed with error: %{public}@
Add store playlist to library failed with error: %{public}@
Remove cloud playlists from library failed with error: %{public}@
Remove cloud items from library failed with error: %{public}@
Hide items from purchase history failed with error: %{public}@
Create cloud genius playlist failed with error: %{public}@
Failed to create Genius playlist with error: %{public}@
<ICCloudClient %p> - Attempting cloud library authenticate (start initial import with explicit user action, merge policy=%d, shouldStartInitialImport=%{BOOL}u, isExplicitUserAction = %{BOOL}u)
Could not get remote object to authenticate and start initial Saga import - error=%{public}@
Could not authenticate and start initial import of Saga library - error=%{public}@
Successfully authenticated and finished Saga import.
<ICCloudClient %p> - Attempting disable cloud library
Could not get remote object to deauth Saga library - error=%{public}@
Could not deauthenticate Saga library and disable active locker account - error=%{public}@.
Finished deauthenticating Saga library
ICCloudClient %p - becomeActive - Error retrieving xpc service - error=%{public}@
Update Jalisco Library failed with error: %{public}@
Remove Jalisco failed with error: %{public}@
Checking if mediakind=%d is disabled failed with error=%{public}@
Could not get if mediaKind=%d is disabled for Jalisco sync. error=%{public}@, isMediaKindDisabled=%d
mediaKind=%d is %{public}s for Jalisco sync
Sending request to update Cloud Library...
Can't update cloud library using current network - skipping
Update Match Library failed with error: %{public}@
Update Match Library failed with status: %ld
Sending deauthenticate request...
Deauthenticate failed with error: %{public}@
loading last known iCML state change failed with error: %{public}@
Sending request to import item artwork for purchase history ID %llu...
Skipping request to import item screenshot for purchase history ID %llu due to insufficient network conditions
Sending request to import screenshot for purchase history ID %llu...
Import Purchase History Screenshot failed with error: %{public}@
Sending request to import item artwork for saga ID %llu...
Import Item Artwork failed with error: %{public}@
Sending request to import screenshot for saga ID %llu...
Import Cloud Screenshot failed with error: %{public}@
Sending request to import container artwork for saga ID %llu...
Import Container Artwork failed with error: %{public}@
Sending request to import subscription artwork for item persistent ID %lld...
Import Subscription Item Artwork failed with error: %{public}@
Sending request to import subscription screenshot for item persistent ID %lld...
Import Subscription Screenshot failed with error: %{public}@
Sending request to import subscription artwork for container persistent ID %lld...
Import Subscription Container Artwork with error: %{public}@
Sending request to artist hero image hero for item persistent ID %lld...
Import Artist Hero Artwork failed with error: %{public}@
Sending request to import album artist hero image for item persistent ID %lld...
Import Album Artist Hero Artwork failed with error: %{public}@
Sending request to deprioritize item artwork import with purchase history ID %llu...
Failed to deprioritize item artwork import with purchase history ID %llu with error: %{public}@
Sending request to deprioritize screenshot artwork import with purchase history ID %llu...
Failed to deprioritize screenshot artwork import with purchase history ID %llu with error: %{public}@
Sending request to deprioritize item artwork import with saga ID %llu...
Failed to deprioritize item artwork import with saga ID %llu with error: %{public}@
Sending request to deprioritize screenshot import with saga ID %llu...
Failed to deprioritize screenshot import with saga ID %llu with error: %{public}@
Sending request to deprioritize container artwork import with saga ID %llu...
Failed to deprioritize container artwork import with saga ID %llu with error: %{public}@
Sending request to deprioritize subscription item artwork import with persistent ID %lld...
Failed to deprioritize subscription item artwork import with persistent ID %lld with error: %{public}@
Sending request to deprioritize subscription screenshot import with persistent ID %lld...
Failed to deprioritize subscription screenshot import with persistent ID %lld with error: %{public}@
Sending request to deprioritize subscription container artwork import with persistent ID %lld...
Failed to deprioritize subscription container artwork import with persistent ID %lld with error: %{public}@
Sending request to deprioritize artist hero artwork import with persistent ID %lld...
Failed to deprioritize artist hero artwork import with persistent ID %lld with error: %{public}@
Sending request to deprioritize album artist hero artwork import with persistent ID %lld...
Failed to deprioritize album artist hero artwork import with persistent ID %lld with error: %{public}@
Load Artwork Info for purchase history screenshot failed with error: %{public}@
Load Artwork Info failed with error: %{public}@
Load Container Artwork Info failed with error: %{public}@
Load Subscription Item Artwork Info failed with error: %{public}@
Load Subscription Screenshot Artwork Info failed with error: %{public}@
Load Subscription Container Artwork Info failed with error: %{public}@
loadMissingArtwork failed with error: %{public}@
Sending load genius items request for saga ID %llu...
Load Genius Items failed with error: %{public}@
Load Update In Progress failed with error: %{public}@
Saga update In Progress failed with error: %{public}@
Jalisco load Update In Progress failed with error: %{public}@
Saga update progress failed with error: %{public}@
Jalisco update progress failed with error: %{public}@
Check for initial library syncs completion failed to load identity properties. err = %{public}@
Checking if initial library syncs are completed. userIdentity = %{public}@, jaliscoOnDiskDatabaseRevision=%ld, sagaOnDiskDatabaseRevision=%ld, syncLibraryID=%{public}@, isActiveLocker=%{BOOL}u
Initial library syncs completed: %{BOOL}u
Setting item properties %{public}@ for purchaseHistoryID %llu...
Setting item properties %{public}@ for saga ID %llu...
Failed to set item properties with error: %{public}@
Failed to update cloud item properties with error: %{public}@
Failed to update cloud plaulist properties with error: %{public}@
Setting album properties %{public}@ for persistent ID %llu...
Failed to set collection properties with error: %{public}@
Sending request to update artist hero images...
Failed to update artist hero images with error: %{public}@
Load Books failed with error: %{public}@
%{public}@ Updating automatic download preference change. shouldAutomaticallyDownload=%{BOOL}u
%{public}@ Automatic download media kind update task completed error: %{public}@
%{public}@ Automatic download media kind update task completed
Automatic downloads are %{BOOL}u for media kind music
Not able to determine if automatic downloads are enabled for media kind music. Could not load active store account: error=%{public}@
Failed to add message entry from AMS dialog. err=%{public}@
Sending request to refresh enhanced-audio shared keys...
Failed to refresh enhanced-audio shared keys. err=%{public}@
Sending request to fetch enhanced-audio offline keys...
Failed to fetch enhanced-audio offline keys. err=%{public}@
Sending notification that setup has completed...
Completing sending setup completed notification error: %{public}@
Completing sending setup completed notification
Failed to list cloud server operations with error: %{public}@
Running %d blocks.
%{public}@ - Receveived Saga update in progress notification [Handler present: %{BOOL}u
%{public}@ - Receveived Jalisco update in progress notification [Handler present: %{BOOL}u
%{public}@ - isAuthenticatedWithQueue: - Error retrieving properties - userIdentity=%@ - error=%{public}@
%{public}@ - isAuthenticatedWithQueue: - isAuthenticated=%{BOOL}u
MIGRATION: isMatchAuthenticated: %d, isMatchCellularDataEnabled: %d, hasAutomaticDownloads: %d, isAutomaticDownloadCellularDataEnabled: %d. New cellular data state: %d
MIGRATION: migrating store auto download setting to music download setting: %d
%{public}@ Failed to obtain remote proxy to perform remote request operation. error = %{public}@.
Invalidating connection to remote request execution service.
Creating connection to remote request execution service.
Connection to remote request execution service interrupted.
Connection to remote request execution service invalidated.
%{public}@ Payload contains HLS asset without an adam ID, which is unexpected: %{public}@
Override may not be less than 120000
Overridden to %lld milis.
%{public}@ Setting resolved DSID: %{public}@
warning: ICUserIdentity - Resolving DSID without an externally supplied identity store; if encoding the identity into an NSCoder, make sure to use -[NSCoder ic_encodeUserIdentity:withStore:forKey:]. Falling back to using [ICUserIdentityStore defaultIdentityStore].
ICUserIdentity - Unable to retrieve DSID for userIdentity=%{public}@ - error=%{public}@
%{public}@ failed - no properties for account %{public}@
%{public}@ failed to parse token response
%{public}@ no token in library auth service response: %{public}@
%{public}@ received error %{public}@. http status code=%d
%{public}@ Returned expired URL bag, so scheduling an URL bag refresh in 10 seconds
%{public}@ Starting to refresh an expired URL bag
%{public}@ Will fetch bag for requestContext %{public}@
%{public}@ Notifying %lu callers that we got the bag for context %{public}@
%{public}@ Invalidating all entries in url bag cache by expiring them
%{public}@ Failed to fetch identity properties. err=%{public}@
%{public}@ No bag profile name provided - using default
%{public}@ No bag profile version provided - using default
%{public}@ Failed to load account DSID. err=%{public}@
%{public}@ Failed to fetch legacy url bag. err=%{public}@
%{public}@ Failed to parse the legacy bag response. body=%{public}@
%{public}@ fetched new bag which expires in %fs (expiration date: %{time_t}zd).
%{public}@ Failed to fetch url bag. err=%{public}@
%{public}@ Failed to load payload dictionary. err=%{public}@
%{public}@ user identity changed - invalidating bag cache
%{public}@ Failed to load properties for account %{public}@. err=%{public}@
%{public}@ Failed to load sslToken for account DSID %@ - skipping
%{public}@ Failed to serialize request body. err=%{public}@
%{public}@ Recevied token response %@
%{public}@ Failed to load bag. err=%{public}@
%{public}@ playback endpoing missing from bag - treating as an error
%{public}@ certificate url missing from bag - treating as an error
%{public}@ Failed to load certificate data. err=%{public}@
%{public}@ No certificate data in response - treating as an error
Could not truncate delegate account store for reset
Could not setup delegate account store for reset: %{public}@
Could not recreate delegate account store: %{public}@
%{public}@: Failed listenerEndpointForService:ICCloudServerSupportedServiceMediaUserStateCenterServer, err=%{public}@
%{public}@: Failed to create async server to get user states, err=%{public}@
%{public}@: Failed to create sync server to get user states, err=%{public}@
Failed to obtain system free space. err=%{public}@
%{public}@: Created child operation queue: %{public}@.
%{public}@ performing authentication validation for user identity %{public}@
%{public}@ Failed to fetch the bag. err=%{public}@
%{public}@ Validation failed because the subscription status url is missing from the bag
%{public}@ Failed to fetch subscription status. err=%{public}@
%{public}@ Subscription status load failed due to invalid response.
%{public}@ Subscription status response parsing failed with error: %{public}@.
%{public}@ authentication validation completed successfully
%{public}@ Received invalidToken response - attempting to authenticate
%{public}@ Authentication complete. authenticated = %{BOOL}u, err = %{public}@
HAS_PAIRED_SYNC
active paired device pairing id %{public}@
paired device pairing id %{public}@
Found %d paired device ids
failed to obtain paired device GUID - you may need an entitlement for this process
failed to obtain paired device GUID because there is no active paired device
failed to obtain CompanionMusicGUID - you may need an entitlement for this process
failed to obtain pairedDeviceMediaGUID because there is no active paired device
obtained initial sync state for %{public}@. hasCompletedSync=%d, err=%{public}@, initialSyncComplete=%d
Could not get activePairedDeviceId %{public}@, _initialSyncStateObserver %{public}@.
Got device did pair notification
Got device did unpair notification
%{public}@: Starting XPC service.
%{public}@ Found service %{public}@
%{public}@ Removing service %{public}@
%{public}@: Connection %{public}@ did add assertion: %{public}@
%{public}@: Connection %{public}@ did remove assertion: %{public}@
%{public}@: Delegation account UUIDs did change for with notification: %{public}@
%{public}@: Updating browsing status
%{public}@: Searching for services with browser: %{public}@
%{public}@: Stopping service search with browser: %{public}@
%{public}@: Updating delegation UUIDs [discovered services] - currentUUIDs=%{public}@ - discoveredServices=%{public}@
   |_ Processing service %{public}@ - delegationAccountUUIDs=%{public}@
      Processing service %{public}@ - eligibleDelegationAccountUUIDs=%{public}@
      Processing service %{public}@ - activeSessions=%{public}@
      Processing service %{public}@ - %lu new delegated accounts - delegationAccountUUIDs=%{public}@
%{public}@: Creating delegation provider session [new delegated account] - userIdentity=%{public}@ - delegationAccountUUIDs=%{public}@ -  netService=%{public}@
[ICDelegationProviderService] Connection interrupted.
[ICDelegationProviderService] Connection invalidated.
%{public}@ Could not load store account for accountDSID=%@, error=%{public}@
%{public}@ Handling account-added notification for iTunes account %{public}@. _activeAccountDSID=%@
%{public}@ Handling account-added notification for Apple account %{public}@. _primaryICloudAccount=%@
%{public}@ Handling account-updated notification for iTunes account %{public}@. _activeAccountDSID=%@
%{public}@ Detected new iTunes account %{public}@ (DSID = %@)
%{public}@ Detected active iTunes account changing from %@ --> nil
%{public}@ Detected active iTunes account changing from %@ --> %@
%{public}@ Previosly active account '%{public}@ is no longer an itunes account - removing from cache
%{public}@ Detected properties change for account %@
%{public}@ Account %@ changed but properties remain the same - ignoring
%{public}@ Ignoring change to account
%{public}@ Ignoring change to account with no DSID
%{public}@ Detected active iTunes account is no longer an iTunes account at all. Active iTunes account changing from %@ --> nil
%{public}@ Handling account-updated notification for Apple account %{public}@. _primaryICloudAccount=%@
%{public}@ Detected change to primary apple account
%{public}@ Ignoring change to non-primary apple account %{public}@
%{public}@ Handling account-removed notification for iTunes account %{public}@. _activeAccountDSID=%@
%{public}@ The active account was removed
%{public}@ A non-active account was removed of account %@
%{public}@ Ignoring removal of account %@
%{public}@ Handling account-removed notification for Apple account %{public}@. _primaryICloudAccount=%@
%{public}@ Handling credentials-changed notification for iTunes account %{public}@. _activeAccountDSID=%@
%{public}@ Handling credentials-changed notification for Apple account %{public}@. _primaryICloudAccount=%@
%{public}@ Registering for account monitoring
%{public}@ Failed to register for account monitoring. err=%{public}@
%{public}@ Loaded %lu iTunes accounts %{public}@. _activeAccountDSID=%@, _primaryICloudAccount=%{public}@
%{public}@ Synchronizing with account store
ICHTTPArchive directory '%{public}@' is not a directory! Disabling archiving
%{public}@: Instantiated MusicKit request context with a default client info.
This is not recommended, as you need to be explicit about the client identifier and client version your application is meant to use, per agreement with the AMP Core Services team.
Nevertheless, proceeding with clientIdentifier = "%{public}@" and clientVersion = "%{public}@".
Attempted to decode an instance of ICMusicKitRequestContext with an unallowed class name for developerTokenProvider: %{public}@.
Failed to look up class of developer token provider with name: %{public}@.
Attempted to encode an instance of ICMusicKitRequestContext with an unallowed class name for developerTokenProvider: %{public}@.
%{public}@ Performing request with seed itemID %lld, isLibraryID=%d
%{public}@ Failed to serialize recommended content request. err= %{public}@
%{public}@ Failed to fetch recommended content. err=%{public}@
%{public}@ no response body - treating as failure
%{public}@ registering APNS token %{public}@
%{public}@ Failed to load url bag. err=%{public}@
%{public}@ Missing register-success url in bag - skipping
%{public}@ request failed. err=%{public}@
%{public}@ recieved response %{public}@
%{public}@ Performing request with storeID %lld, affiliate %{public}@
%{public}@ No active iTunes account - failing request
%{public}@ Finished request with err %{public}@
%{public}@ Performing platform request of %ld items with profile '%{public}@'
%{public}@ Request completed with %ld responses. err=%{public}@
MLLM %p: playback sync initialized without a server defined local participant UUID: locallyGeneratedUUID=%{public}@
MLLM %p: ignoring participant state of unknown form %{private}@
MLLM %p: ignoring transport control state of unknown form %{private}@
MLLM %p: no state found in sync payload %{private}@
MLLM %p: synchronizePlaybackStateForReason [flushing pending completions] completionCount=%ld
MLLM %p: _loadInitialPlaybackSyncData [request failed] error=%{public}@
MLLM %p: synchronizePlaybackState [invalid JSON] reason=%{public}@ error=%{public}@ participantStateString=%{public}@
MLLM %p: synchronizePlaybackState [importing] reason=%{public}@ participantState=%{public}@
MLLM %p: synchronizePlaybackState [invalid JSON] reason=%{public}@ error=%{public}@ transportControlStateString=%{public}@
MLLM %p: synchronizePlaybackState [importing] reason=%{public}@ transportControlState=%{public}@
MLLM %p: synchronizePlaybackState [computed local currentItemID] reason=%{public}@ currentItemID=%{public}@
MLLM %p: synchronizePlaybackState [importing] reason=%{public}@ currentItemID=%{public}@
MLLM %p: reloadTransportControlStateForItemWithIdentifier calling fetching item state [coordinator requested] itemID=%{public}@
MLLM %p: reloadTransportControlStateForItemWithIdentifier [invalid JSON] itemID=%{public}@ error=%{public}@ transportControlStateString=%{public}@
MLLM %p: reloadTransportControlStateForItemWithIdentifier [importing] itemID=%{public}@ transportControlState=%{public}@
MLLM %p: reloadTransportControlStateForItemWithIdentifier [fetch request failed] error=%{public}@
MLLM %p: reloadTransportControlStateForItemWithIdentifier enqueuing completion handler [fetch server state in progress]
MLLM %p: _playbackCoordinatorDidIssueCommandToPlaybackObjectNotification [ignoring local event] userInfo=%{public}@
MLLM %p: _playbackCoordinatorDidIssueCommandToPlaybackObjectNotification [produced event] event=%{public}@ userInfo=%{public}@
%{public}@ Loading carrier bundling status is not allowed because phone number access is restricted.
%{public}@ Returning last known subscription status %{public}@ with error %{public}@ for: %{public}@
%{public}@ Using cached subscription status %{public}@ for: %{public}@
%{public}@ Aborted fetching subscription status because privacy link needs to be displayed first.
%{public}@ Subscription status load failed for %{public}@ due to URL bag load failure: %{public}@
%{public}@ Successfully loaded bag: %{public}@ (serverCorrelationKey: %{public}@; serverEnvironment: %{public}@).
%{public}@ Subscription status load failed for %{public}@ due to missing the key in the bag.
%{public}@ Skipping loading of carrier bundling status because the combination (MCC: %{public}@, MNC: %{public}@) for the current active SIM card is not in the allow list.
%{public}@ Subscription status load failed for %{public}@ due to invalid response.
%{public}@ Received subscription status response for %{public}@: %{public}@
%{public}@ Failed parsing subscription status response for %{public}@ with error: %{public}@.
%{public}@ Received invalid token response for %{public}@, authenticating...
%{public}@ Authentication failed with error: %{public}@
%{public}@ Received invalid token response but not allowed to authenticate for: %{public}@
%{public}@ Subscription status load failed for %{public}@ due to response error: %{public}@
%{public}@ Enqueued data request with invalid url '%{public}@'
%{public}@ %{public}@ pausing request...
%{public}@ %{public}@ resuming request...
%{public}@ %{public}@ failed to cancel request because it could not be found
%{public}@ %{public}@ cancelling request...
%{public}@ Pausing...
%{public}@ Resuming...
%@ %{public}@ task finished. err=%{public}@
%{public}@ finished task %{public}@ for request %{public}@ [%lld sent, %lld rcvd in %.3fs (%lld bytes/s)]. err=%{public}@
%{public}@ no request for completed task %{public}@ - ignoring
%{public}@ %{public}@ exceeded the redirect limit - aborting
%{public}@ %{public}@ handling redirect response --> %{public}@
%{public}@ %{public}@ Failed to process redirect response. err=%{public}@
%{public}@ either response %{public}@ or new request %{public}@ is invalid - ignoring
%{public}@ no request for redirected task %{public}@ - ignoring
%{public}@ %{public}@ received response for task %{public}@: %{public}@
%{public}@ no request for data task %{public}@ - ignoring
%@ %{public}@ download task finished. location=%{public}@
%@ %{public}@ moving download file %{public}@ --> %{public}@
%@ %{public}@ failed to link download file %{public}@ --> %{public}@
%{public}@ enqueueing new %{public}@ request %{public}@ with url %{public}@
%{public}@ Checking request queue (counter = %lu).
%{public}@ Request queue state for counter = %lu: _activeRequests = %{public}@, _pendingRequests = %{public}@
%{public}@ Activating request %{public}@
%{public}@ %{public}@ failed to build URL request. err=%{public}@
%{public}@ %{public}@ created URL task %{public}@ (attempt %lu/%lu) for request: %{public}@
%{public}@
%{public}@ %{public}@ created URL task %{public}@ (attempt %lu/%lu) for request: %{public}@
%{public}@ retrying request %{public}@ in %f seconds (retryReason = %{public}@, retryCount = %lu, maxRetryCount = %lu)
%{public}@ rejecting retry for request %{public}@ (retryReason = %{public}@, retryCount = %lu, maxRetryCount = %lu)
%{public}@ Checking for timeouts
%{public}@ timing out request %{public}@
%{public}@ Scheduling next timeout check in %.2fs
%{public}@ Canceling timeout timer
%{public}@ Logging CoreAnalytics %{public}@ event: %@
%{public}@ No bag profile name or profile version provided - using default
Error reading restore configuration from bag
Asset type %{public}@ is not present in allowed restore kinds (%{public}@)
StoreMatchStatus is not in acceptable list - allowedMatchStatus=%{public}@, itemMatchStatus=%lld
Error reading restore URL from bag
Could not get properties for %{public}@, error=%{public}@
Invalid userName (%{public}@), DSID (%{public}@)
Error serializing request body data
%{public}@ Serializing request body failed with error: %{public}@
%{public}@ Encountered missing bag value at key path %{public}@
%{public}@ Error %{public}@ completing %lu play activity events with session token:%llu flushResult:%lu
%{public}@ Completed %lu play activity events with session token:%llu flushResult:%lu with error %{public}@
%{public}@  Error %{public}@ flushing play activity events for %{public}@
%{public}@  Finished flushing play activity events for %{public}@ with error %{public}@
%{public}@ Recording play activity events: %@
%{public}@ Error %{public}@ recording %lu play activity events
%{public}@ Finished recording %lu play activity events with error %{public}@
Removing play events up to revision: %llu
%{public}@ Error %{public}@ removing play activity events upto revision %llu
%{public}@ Finished removing play activity events upto revision %llu with error %{public}@
%{public}@ Error %{public}@ setting revision %llu, version token %{public}@ for end point identifier %{public}@
%{public}@ Finished setting revision %llu, version token %{public}@ for end point identifier %{public}@ with error %{public}@
%{public}@ Error %{public}@ getting play activity events for end point identifier %{public}@
%{public}@ Finished getting %lu play activity events for end point identifier %{public}@
Completing pending play events for revision index set: %@ session token: %llu with result: %lu
Session information: %@
Removing pending revisions index set %@ from sessionInformation revisions index set: %@
Resulting index set: %@
Existing additional pending revisions index set: %@
New additional pending revisions index set from flush success: %@
New additional pending revisions index set from flush failure: %@
Revisions version token has changed, clearing out.
Connection to daemon play activity controller interrupted.
Connection to daemon play activity controller invalidated.
%{public}@: Failed to unarchive revision information. Error = %{public}@
%{public}@: Failed to archive revision information. Error = %{public}@
%{public}@ Disabling push notifications for type %{public}@
%{public}@ Missing remove-push-notification-type-url url in bag - skipping
%{public}@ removePushNotification request failed. err=%{public}@
%{public}@ removePushNotification request returned response %{public}@
ILL %p: Deallocating.
ILL %p: Starting.
ILL %p: forcing reconnect because: %{public}@
ILL %p: already syncing playback with coordinator: %{public}@
ILL %p: beginning playback sync with coordinator: %{public}@
ILL %p: failed to begin playback sync with AVCFPlaybackCoordinator [ICLiveLink compiled without AVCFPlaybackCoordinator.h]
ILL %p: ending playback sync
ILL %p: broadcastDirectCurrentItemChangedToItemIdentifier itemId=%{public}@
ILL %p: Notifying server of updated externalID: %{public}@
ILL %p: expectingToJoin startItem=%{public}@ asInitiator=%{BOOL}u
ILL %p: fetchPlaybackSyncStateForMedium [first AV sync] initialAVSyncStartItem=%{public}@ initialAVSyncInitiator=%{BOOL}u
ILL %p: Failed to find participant with UUID: %{public}@, in participants: %{public}@
ILL %p: receivedEvent delegate=<%{public}@ %p> event=%{public}@
ILL %p: Serialization failed with error %{public}@ for transport control state %{public}@
ILL %p: Serialization failed with error %{public}@ for participant state %{public}@
ILL %p: Playback sync payload had no recognized key. Payload: %{public}@
ILL %p: Received invalid AddItemsAction %{public}@
ILL %p: Received AddItemsAction with displayNotice=NO %{public}@
ILL %p: Received invalid CurrentItemChangeAction %{public}@
ILL %p: [received current item change] currentItemIdentifier=%{public}@ originator=%{public}@
ILL %p: Received CurrentItemChangeAction with displayNotice=NO %{public}@
ILL %p: Received invalid CurrentItemTransitionAction %{public}@
ILL %p: [received current item transition - INFORMATIONAL ONLY] fromItemID=%{public}@ toItemID=%{public}@ originator=%{public}@
ILL %p: Received invalid MoveItemAction %{public}@
ILL %p: Received MoveItemAction with displayNotice=NO %{public}@
ILL %p: Received invalid ParticipantChangeAction %{public}@
ILL %p: Received Participant Leave/Disconnect for unknown participant ID = %ld
ILL %p: Received invalid PlaybackSyncAction %{public}@
ILL %p: No payload for sync message %{public}@
ILL %p: Could not construct payload for sync message %{public}@
ILL %p: Received invalid PlayNowQueueItemsAction %{public}@
ILL %p: Received PlayNowQueueItemsAction without preferredPlayItemId, using first itemId: %{public}@
ILL %p: Received PlayNowQueueItemsAction with displayNotice=NO %{public}@
ILL %p: Received invalid QueueSyncAction %{public}@
ILL %p: Received QueueSyncAction with displayNotice=NO %{public}@
ILL %p: Received QueueSyncAction with displayNotice=YES but no DisplayMessage %{public}@
ILL %p: Received invalid ReactionAction %{public}@
ILL %p: Received ReactionAction with displayNotice=NO %{public}@
ILL %p: Received invalid RemoveItemAction %{public}@
ILL %p: Received RemoveItemAction with displayNotice=NO %{public}@
ILL %p: Received invalid ReplaceQueueItemsAction %{public}@
ILL %p: Received ReplaceQueueItemsAction without preferredPlayItemId, using first itemId: %{public}@
ILL %p: Received ReplaceQueueItemsAction with displayNotice=NO %{public}@
ILL %p: Received invalid ServerNoticeAction %{public}@
ILL %p: Received ServerNoticeAction with displayNotice=NO %{public}@
ILL %p: Received ParticipantChangeAction with displayNotice=NO %{public}@
ILL %p: Received ParticipantChangeAction for the local participant: %lld
ILL %p: Received Participant Join/Connect for unknown participant ID = %ld
ILL %p: _handleReceivedMessage enqueuing action: %{public}@
ILL %p: Received unhandled message %{public}@
ILL %p: Dropping participants [waiting for clientInfo] %{public}@
ILL %p: _handleUpdatedQueue [serverRevision:(%ld --> %ld), isAutoPlayAvailable:(%{BOOL}u --> %{BOOL}u), isAutoPlayEnabled:(%{BOOL}u --> %{BOOL}u)]
ILL %p: _handleUpdatedQueue dropping queue update [client already has newer revision] currentRevision=%ld updatedRevision=%ld
ILL %p: _processPendingActions: [action already in flight] action=%p pendingActionCount=%ld
ILL %p: _processPendingActions: [processing action] action=%p
ILL %p: _processPendingActions: [completed action] action=%p pendingActionCount=%ld
ILL %p: Received ClientInfo action with no matching completion %{public}@
ILL %p: Received invalid action %{public}@
ILL %p: Received unknown action %{public}@
ILL %p: _updateParticipantsWithReason [requesting] reason=%{public}@ traceID=%{public}@
ILL %p: _updateParticipantsWithReason [received response] reason=%{public}@ traceID=%{public}@ participants=%{public}@
ILL %p: received no participants in response.
ILL %p: _updateQueueWithReason [requesting] reason=%{public}@ traceID=%{public}@
ILL %p: _updateQueueWithReason [received response] reason=%{public}@ traceID=%{public}@ queue=%{public}@
ILL %p: received no queue in response.
ILL %p: _updatePlaybackControlSettingsWithReason [requesting] reason=%{public}@ traceID=%{public}@
ILL %p: _updatePlaybackControlSettingsWithReason [received response] reason=%{public}@ traceID=%{public}@ settings=%{public}@
ILL %p: received no playback control settings in response
ILL %p: stopping live link [failed to load initial participants] error=%{public}@
ILL %p: stopping live link [failed to load initial queue] error=%{public}@
ILL %p: received unexpected status %{public}@ for Client Info. Stopping.
ILL %p: calling delegate didStartLiveLink
ILL %p: calling delegate liveLinkDidReconnect
ILL %p: Stopping because connection controller encountered fatal error: %{public}@
ILL %p: Server restart. Will retry connection after termination.
ILL %p: Received error code %@, message %{public}@
ILL %p: QRConnection encountered error %{public}@, willRetry: %{BOOL}u
ILL %p: QRConnection will retry connection after %ld seconds.
ILL %p: QRConnection retry attempt %ld (max attempts: %ld)
ILL %p: _playParamsForPlaybackItemProto: Error deserializing playParams: %{public}@ error: %{public}@
ILL %p: setMediaIdentifiers:preferredStartIndex: trimming from %ld to %d items. Taking items from indices %ld to %ld.
ILL %p: replaceTracklist completing immediately [tracklist.totalItemCount = 0, hasRadioTrackGenerationSource = NO]
ILL %p: [replaceTracklist] preferredStartItemID=%{public}@ tracklist=%{public}@
ILL %p: [replaceTracklist] Received requestError=%{public}@
ILL %p: addMediaIdentifiers:afterItemIdentifier: trimming from %ld to %d items.
ILL %p: insertTracklist completing immediately [tracklist.totalItemCount = 0, hasRadioTrackGenerationSource = NO]
ILL %p: [insertTracklist] Received requestError=%{public}@
ILL %p: insertTracklistPlayNow completing immediately [tracklist.totalItemCount = 0, hasRadioTrackGenerationSource = NO]
ILL %p: [insertTracklistAndPlayNow] Received requestError=%{public}@
ILL %p: [removeItem] Received requestError=%{public}@
ILL %p: [moveItemBefore] Received requestError=%{public}@
ILL %p: [moveItemAfter] Received requestError=%{public}@
ILL %p: getExpectedCurrentItemWithCompletion returning nil [currentItemID not in queue]
ILL %p: getExpectedCurrentItemWithCompletion returning nil [currentItemID not in PlaybackSyncState]
ILL %p: _playbackItemProtosForTracklist: trimming from %ld to %d items. Taking items from indices %ld to %ld.
%{public}@: Starting lease session...
%{public}@: Start: Successfully started.
%{public}@: Start: Failed to import lease response data with error: %{public}@
%{public}@: Start: Client data missing from response.
%{public}@: Start: Received response error: %{public}@
%{public}@: Start: Failed to generate FairPlay sync session with error: %{public}@
%{public}@: Start: Failed to retrieve a valid DSID from the identity store.
%{public}@: Start: Lease session already started.
%{public}@: Stopping lease session...
%{public}@: Stop: Successfully ended lease sync.
%{public}@: Stop: FairPlay failed ending lease sync with error: %{public}@.
%{public}@: Lease session already stopped, returning success.
%{public}@: Lease renew timer fired.
%{public}@: Renew: Successfully processed renew response data.
%{public}@: Renew: Failed to process response data with error: %{public}@.
%{public}@: Renew: No client data in response, treating as successful.
%{public}@: Renew: Response failed with error: %{public}@
%{public}@: Renew: Failed to generate renew request data with error: %{public}@
%{public}@: Lease renew invalid because the session is no longer running.
%{public}@: Skipping renewal timer scheduling with automatic refresh count: %li, leaseExpirationDate: %{public}@, isRunning: %{public}@
%{public}@: Scheduling lease renewal in %f seconds with expiration date of: %{public}@.
%{public}@ Starting
%{public}@ Failed to load icloud account properties. err=%{public}@
%{public}@ stopping because the operation was cancelled
%{public}@ Failing due to missing bag key '%{public}@
%{public}@ Error getting deviceGUID
%{public}@ failed to serialize body data. err=%{public}@, bodyDictionary=%{public}@
%{public}@ Request completed with error %{public}@
%{public}@ Recieved a message to increment the badge count of the Music app when it already is badged with the number 1. The count will not be incremented.
%{public}@: Invalid request. %{public}@
%{public}@: %{public}@
%{public}@: No active account. Failing request.
%{public}@: shouldIgnoreCache = YES.
%{public}@: Found music user token in cache.
%{public}@: Did not find music user token in cache.
%{public}@: Failed to get bag with error %{public}@.
%{public}@: Got bag with %{public}@.
%{public}@: Finished with error %{public}@ and status code %{public}@.
%{public}@: Finished with status code %{public}@.
%{public}@: Music user token was revoked. Error description: %{public}@
%{public}@: Server reported success, but %{public}@ was not a string: %{public}@ (of type %{public}@).
%{public}@: Music user token: "%@".
%{public}@: Revoked TCC access for %{public}@ with status %{bool}u.
Failed to obtain device MAC address
Getting MAC address is not supported on this platform
Failed to obtain device class from MobileGestalt
[%{public}@] flushed %lu play events with result %d isFinalResult: %d
[%{public}@] completed pending play events finished with error: %{public}@ for session token: %llu flushResult: %lu
[%{public}@] removing flushed play events finished with error: %{public}@
[%{public}@] Operation has been cancelled, finishing.
[%{public}@] Received play event acquisition error: %{public}@.
[%{public}@] No pending play events, finishing.
[%{public}@] Unexpected empty store account IDs, finishing.
[%{public}@] Adding PAF event %{public}@.
[%{public}@] error (%{public}@ serializing request data (%{public}@).
[%{public}@] error compressing request data
[%{public}@] Flush %d PAF events finished with HTTP code %ld
[%{public}@] MALFORMED PAF EVENTS 
[%{public}@] MALFORMED PAF EVENTS=%{public}@, requestData=%{public}@
[%{public}@] Uploading malformed PAF events
[%{public}@] response is NOT of kind NSHTTPURLResponse
[%{public}@] operation finished with error %{public}@, HTTTP statusCode %ld, parsedResponseBody %{public}@
[%{public}@] Failed to resolve a URL request for override headers with error: %{public}@
[%{public}@] Post URL missing from bag
[%{public}@] Failed to load URL bag with error: %{public}@
%{public}@ - Provided expiration date is nil
%{public}@ - Age verification status has expired
%{public}@ - Age verification status is current
ICURLRequestWaiting
 enableTelemetry=YES request=%{public, signpost.telemetry:string1}s
ICURLRequest
result=%{public, signpost.telemetry:string2}s
ACAccountStore %p - Error retrieving iTunesStore accounts. err=%{public}@
ACAccountStore %p - Error retrieving all store accounts, err=%{public}@
ACAccountStore %p - Error updating active bit for account %{public}@. err=%{public}@
active store account does not have the locker bit set - returning nil
Setting %{public}@ as the active locker account
Removing %{public}@ as the active locker account
ACAccountStore %p - Error setting active locker account %{public}@. err=%{public}@
ACAccountStore %p - Error removing active locker account %{public}@. err=%{public}@
ACAccountStore %p - Error fetching primary apple account. err=%{public}@
ACAccountStore %p - Error retrieving store account for DSID %{public}@. err=%{public}@
ACAccountStore %p - Error retrieving store account type. err=%{public}@
ACAccountStore %p - Error retrieving store account for home ID %{public}@. err=%{public}@
ACAccountStore %p - Error retrieving local store account. err=%{public}@
Failed to serialize body data. error=%{public}@, bodyDictionary=%{public}@
ICAgeVerificationState - cachedStateForDSID: - Reading state from disk - DSID=%@
ICAgeVerificationState - cachedStateForDSID: - Creating default state [No cache found] - DSID=%@
ICAgeVerificationState - cachedStateForDSID: - No cached state [Unactionable DSID] - DSID=%@
%{public}@ Carrier bundling eligibility operation failed for %{public}@ due to missing header enrichment URL in response body: %{public}@
%{public}@ Carrier bundling eligibility operation failed for %{public}@ due to missing silent SMS message or number in response body: %{public}@
%{public}@ Sending header enrichment response.
%{public}@ Carrier bundling eligibility operation failed for %{public}@ error while sending header enrichment response: %{public}@
%{public}@ Sending header enrichment request.
%{public}@ Carrier bundling eligibility operation failed for %{public}@ because header enrichment failed with error: %{public}@.
%{public}@ Performing delayed retry after %{public}f seconds: still needs header enrichment.
%{public}@ Carrier bundling eligibility operation failed for %{public}@ due to URL bag load failure: %{public}@
%{public}@ Carrier bundling eligibility operation failed for %{public}@ due to missing the key in the bag.
%{public}@ Encountered error trying to serialize body data for %{public}@: %{public}@.
%{public}@ Sending preflight request.
%{public}@ Carrier bundling eligibility operation failed for %{public}@ error while issuing preflight request: %{public}@
%{public}@ Carrier bundling eligibility operation failed for %{public}@ due to invalid response.
%{public}@ Got carrier bundling response for %{public}@ with body: %{public}@
%{public}@ Silent SMS succeeded.
%{public}@ Failed to send silent SMS for %{public}@.
%{public}@ Carrier bundling eligibility operation failed for %{public}@ due to error in response body: %{public}@
%{public}@ Performing delayed retry after %{public}f seconds: still needs silent SMS.
[ICUserIdentityStore] - Returning zero SiriSharedUserIDs [unsupported platform]
unexpected dialog button action type %ld
Failed to create user notification
failed to find user notification button for responseFlags %lu
Performing Buy button action with params %{public}@
Failed to perform buy button action. err=%{public}@
missing action URL in Goto button action - skipping
unknown Goto button action subtarget %{public}@
missing action URL in family permissions button action - skipping
Failed to resolve identity for family permissions dialog. err=%{public}@
Failed to resolve account for family permissions dialog. err=%{public}@
Failed to load APRequestHandler class - assuming not available on this platform
Family permissions request completed with err=%{public}@
%{public}@ Received darwin notification: %{public}@
%{public}@ Failed to weak link symbol BYSetupAssistantLaunchedDarwinNotification
%{public}@ Registering for darwin notification: %{public}@
%{public}@ Failed to weak link symbol BYSetupAssistantFinishedDarwinNotification
%{public}@ Could not determine if setup assistant needs to run - assume its not needed
%{public}@ initialized. isSetupAssistantComplete=%{BOOL}u, isDeviceSetupComplete=%{BOOL}u
%{public}@ Setup assistant has completed:%{BOOL}u
ICInitialSync
 enableTelemetry=YES 
%{public}@ Device %{public}@ has not completed setup and initial sync
%{public}@ Device %{public}@ has completed setup and initial sync
%{public}@ Running %d blocks of type %d
%{public}@ Performing %{public}@ authentication for account %{public}@
%{public}@ No account provided - skipping verification
%{public}@ Skipping silent authentication attempt due to throttling. last attempt was at %{public}@ (%.2fs ago)
%{public}@ Authentication task complete error: %{public}@
%{public}@ Authentication task complete
%{public}@ Handling dialog request %{public}@
%{public}@ Failed to present dialog. err=%{public}@
%{public}@ Retrieving account notifications switches.
%{public}@ Successfully retrieved account notifications switches.
%{public}@ Setting account notifications switches to: %{BOOL}u.
%{public}@ Successfully retrieved account notifications switches response.
%{public}@ Cacheing show in library switch as %{BOOL}u.
%{public}@: Encountered error: %{public}@
%{public}@: Received data of length: %li.
%{public}@: Finished reading.
%{public}@: Failing to send message as there is no longer a pairing session
%{public}@: Writing data of length: %li
%{public}@: Sending request message: %@
%{public}@: Sending response message: %@
%{public}@: Stream did close.
%{public}@: Received message: %@
%{public}@ Failed to send response message. err=%{public}@
%{public}@ failed to load account properties. err=%{public}@
%{public}@ failed to load bag. err=%{public}@
%{public}@ failed to find bag key for url endpoint
%{public}@ invalid message parm: {%{public}@ : %{public}@}
%{public}@ failed to serialize request object
%{public}@ Log event request failed. err=%{public}@
Request %{public}@ issued before before first unlock, returning error.
%{public}@ - buildURLRequestWithCompletionHandler [Delegated identity found] - delegatedIdentity=%@
%{public}@ - buildURLRequestWithCompletionHandler - Adding delegation info to builder - delegatedDSID=%@ - delegatedToken=%@
%{public}@ Using store request for url with untrusted host: '%{public}@'
%{public}@ Building %{public}s store URL request
%{public}@ - buildStoreURLRequestWithURLRequest:properties:completionHandler: - Delegation header [dsid] [%@: %@]
%{public}@ - buildStoreURLRequestWithURLRequest:properties:completionHandler: - Delegation header [token] [%@: %@]
%{public}@ failed to sign request. err=%{public}@
%{public}@ creating mescal signature for request. configuration=%{public}@
%{public}@ -- Error creating database, removing if possible...: %@ -- %@
%{public}@ -- Removing database successful, attempting to recreate...: %@ -- %@
%{public}@ -- Error creating database for a second time, bailing out: %@
%{public}@ -- Error removing database: %@ -- %@
%{public}@ -- Error creating directory: %@ -- %@
Failed to query for revisions index set. err=%{public}@
Failed to set database property ('%{public}@' = '%{public}@'). err=%{public}@
Failed to delete database property '%{public}@'. err=%{public}@
Failed to get database property '%{public}@'. err=%{public}@
RemoveDRM operation complete. err=%{public}@, resultInfo=%{public}@
Failed to parse server error for %{public}@. Raw error dictionary: %{public}@.
%{public}@ Creating downloadTask with URLRequest: %{public}@
%{public}@ Creating assetDownloadTask with urlAsset: %{public}@, options %{public}@
%{public}@ Creating aggregateAssetDownloadTask with urlAsset: %{public}@, options %{public}@
%{public}@: listenerEndpointForService - XPC Error retrieving endpoint [Attempt %ld of %ld] - service=%{public}@[%ld] - error=%{public}@
%{public}@: listenerEndpointForService - XPC Error [no listener endpoint for service] - service=%{public}@[%ld] - error=%{public}@
%{public}@: listenerEndpointForService [done with error] - service=%{public}@[%ld] - endpoint=%{public}@ - error=%{public}@
%{public}@: listenerEndpointForService [done] - service=%{public}@[%ld] - endpoint=%{public}@
%{public}@: listenerEndpointProviderConnection [started]
%{public}@: listenerEndpointProviderConnection [done] - connection:%{public}@
%{public}@: Opening with security settings: %@
%{public}@: Finishing pairing session with error: %{public}@
%{public}@: Failed to derive output key (OSStatus = %li)
%{public}@: Failed to derive input key (OSStatus = %li)
%{public}@: Passing data of length %li to pairing session
%{public}@: Error returned from PairingSessionExchange: %i
%{public}@: Registered new bag observer with token: %{public}@.
%{public}@: Removed bag observer with token: %{public}@.
%{public}@: Invalidated timer for bag expiration.
%{public}@: Bag expiration date is in the past: %{public}@. Not scheduling timer for bag expiration.
%{public}@: Scheduling timer for bag expiration for date %{public}@; i.e. for %.1f seconds.
%{public}@: Bag expiration timer did fire.
%{public}@: Beginning to observe bag.
%{public}@: Stopped observing bag.
%{public}@: Handling %{public}@.
%{public}@: Requesting bag with policy %{public}@.
%{public}@: Failed to fetch bag with error: %{public}@.
%{public}@: Bag did change: %{public}@ (serverCorrelationKey: %{public}@; serverEnvironment: %{public}@). About to invoke %llu observation handler%s.
%{public}@: Bag did not change. Skipping invoking observation handlers.
%{public}@: Invoking observation handler with token %{public}@; bag = %{public}@.
%{public}@: Handling network reachability change; isRemoteServerLikelyReachable = %{BOOL}u.
%{public}@: Deferring to %{public}@ to process initial response with status code %{public}@ for %{public}@.
%{public}@: Invalidating developer token upon processing completed response with status code %{public}@.
%{public}@: Invalidating developer token upon processing completed response with status code %{public}@, after considering generic response handler.
%{public}@: Invalidating user token upon processing completed response with status code %{public}@, after considering generic response handler.
%{public}@: Completed processing response %{public}@ with error %{public}@.
HTTP response=%{public}@
body=%{public}@
%{public}@: Completed processing response %{public}@.
%{public}@: Deferring to %{public}@ to process completed response with status code %{public}@ for %{public}@.
%{public}@: Retrying request after successfully invalidating developer token.
%{public}@: Retrying request after successfully invalidating music user token.
%{public}@: Encountered error while processing initial response %{public}@. %{public}@
[%{public}@] Finishing.
[%{public}@] Response has invalid format
[%{public}@] Response returned error: %{public}@
[%{public}@] Missing authorize machine URL bag key
%{public}@ failed to get identity properties for token request. err=%{public}@
%{public}@ not fetching library token because there's no active account
%{public}@ Failed to gather DSIDs from the account store to fetch tokens for. err=%{public}@
%{public}@ Skipping account %@ because either the DSID is missing or it has no home user ids
%{public}@ getTokenResultForDSID returning cached token result %{public}@
%{public}@ Refreshing expired token for DSID %@
%{public}@ Failed to refresh the token. err=%{public}@
%{public}@ getTokenResultsForDSIDs returning cached token results %{public}@
%{public}@ Refreshing expired tokens for DSIDs %@
%{public}@ Failed to refresh tokens. err=%{public}@
%{public}@ cachedTokenAndResetCache %d
%{public}@ failed to get remote object proxy for token request. err=%{public}@
%{public}@ Failed to fetch all client tokens. err=%{public}@
%{public}@ No token result for DSID %@ in bulk response - this will be treated as an error
%{public}@ failed fetching siri shared user id for homeIdentifier %{public}@:%{private}@. err=%{public}@
%{public}@ Refreshing token for DSID %@
%{public}@ Not refreshing token for DSID %@ because privacy acknowledgement is required
%{public}@ Finished fetching new token for DSID %@. err=%{public}@. token=%@
%{public}@ Refreshing tokens for DSIDs %@
%{public}@ Not refreshing token for DSIDs %@ because privacy acknowledgement is required
%{public}@ Failed to fetch new tokens for DSIDs %@. err=%{public}@
%{public}@ No token result for DSID %@ - attempting to fetch it individually
%{public}@ Token result missing from response for DSID %@
%{public}@ Failed to fetch new token for DSID %@. err=%{public}@
%{public}@ fetched new token result for DSID %@: %{public}@
%{public}@ got change notification
%{public}@ Clearing token cache for external change notification
ICLibraryAuthServiceClientTokenProvider client connection interrupted
%{public}@ Failed to deserialize cached token result data. err=%{public}@
%{public}@ Failed to serialize token result to cache. err=%{public}@
%{public}@ Skipping background refresh of DSID %@. last error: %{public}@}
%{public}@ Setting timer to refresh library auth token for DSID %@ at %{public}@}
%{public}@ Performing bulk token refresh
%{public}@ No DSIDs available to refresh - ignoring
%{public}@ Pre-fetching library token for new account with DSID %@
%{public}@ Removing token entry for non-existent or inactive account DSID %@
%{public}@ Rescheduling a refresh due to account changes
%{public}@ Connection interrupted
%{public}@ Connection invalidated
%{public}@ Request completed. err=%{public}@
%{public}@ Executing playInfo request with context %{public}@
%{public}@ Failed to extract account DSID. err=%{public}@
%{public}@ Failed to serialize body data. err=%{public}@
%{public}@ Request URL not found - failing request
%{public}@ failed to parse response
%{public}@: Acknowledging privacy policy for %{public}@ (%{public}@)...
%{public}@: Failed to acknowledge privacy policy for %{public}@ (%{public}@). didSucceed = %{BOOL}u, error = %{public}@.
%{public}@: Successfully completed privacy policy acknowledgement for %{public}@.
%{public}@: Beginning to observe privacy acknowledgement for %{public}@.
%{public}@: Registered new observer of privacy acknowledgement for %{public}@ with token: %{public}@.
%{public}@: Removed observer of privacy acknowledgement for %{public}@ with token: %{public}@.
%{public}@: Stopped observing privacy acknowledgement for %{public}@.
%{public}@: Ignoring privacy acknowledgement for %{public}@ because -[ICDefaults isPrivacyAcknowledgementDisabledForMusic] returned YES.
%{public}@: Forcing privacy acknowledgement needed for %{public}@ because -[ICDefaults shouldForcePrivacyAcknowledgementRequiredForMusic] returned YES.
%{public}@: Privacy acknowledgement required for %{public}@ (%{public}@)? %{BOOL}u.
%{public}@: Invoking observation handler for %{public}@ with token %{public}@. isPrivacyAcknowledgementRequired = %{BOOL}u.
[Lease] - [%{public}@] - _handlePlaybackLeaseDidEndPushNotification - _hasPendingLeaseDidEndPushNotification: %{BOOL}u
[Lease] - [%{public}@] - _receivedUserInteractionEvent - leaseStatus: %{public}@
[AL] - ICMusicSubscriptionPlaybackRequestOperation canceled - request: %{public}@
[Lease] - [%{public}@] - _newOperationForPlaybackRequest - Will start playback request operation - Request: %{public}@ - Type: %ld
[Lease] - [%{public}@] - _newOperationForPlaybackRequest - Completed playback request operation - Request: %{public}@ - Type: %ld - status: %{public}@
[Lease] - [%{public}@] - Automatic lease refresh timer enabled with time left: %f.
[Lease] - [%{public}@] - Automatic lease refresh timer disabled.
[Lease] - [%{public}@] - PlaybackLeaseDidEndPushNotification - Dropped [_hasPendingLeaseDidEndPushNotification:NO]
[Lease] - [%{public}@] - PlaybackLeaseDidEndPushNotification - Deferred until refresh timer gets activated [_automaticRefreshCount:0]
[Lease] - [%{public}@] - PlaybackLeaseDidEndPushNotification - Deferred until the in-flight lease acquisition completed [hasInflightLeaseAcquisition:YES]
[Lease] - [%{public}@] - PlaybackLeaseDidEndPushNotification - Dropped [hasOnlinePlaybackKeys:NO]
[Lease] - [%{public}@] - PlaybackLeaseDidEndPushNotification - Completed error: %{public}@
[Lease] - [%{public}@] - PlaybackLeaseDidEndPushNotification - Completed
[Lease] - [%{public}@] - PlaybackLeaseDidEndPushNotification - Handled
ICCloudClientAvailabilityService %p - Creating XPC Client Connection [started]
ICCloudClientAvailabilityService %p - Creating XPC Client Connection [failed] - endpoint=%{public}@ - error=%{public}@
ICCloudClientAvailabilityService %p - Creating XPC Client Connection [done] - connection=%{public}@
ICCloudClientAvailabilityService %p - Unable to create XPC Connection [no listener endpoint]
ICCloudClientAvailabilityService %p - Connection to cloud availability service interrupted
ICCloudClientAvailabilityService %p - Connection to cloud availability service invalidated
ICCloudClientAvailabilityService %p - Resetting XPC connection to nil
%{public}@ Failed to read message store data. err=%{public}@
%{public}@ Failed to deserialize message entry with identifier %{public}@. err=%{public}@
%{public}@ Failed to deserialize message metadata entry with identifier %{public}@. err=%{public}@
%{public}@ Failed to deserialize event entry. err=%{public}@
%{public}@ Failed to serialize message entry with identifier %{public}@. err=%{public}@
%{public}@ Failed to serialize message metadata entry with identifier %{public}@. err=%{public}@
%{public}@ Failed to serialize event entry with identifier %{public}@. err=%{public}@
%{public}@ Failed to commit message store data. err=%{public}@
warning: Internal default %{public}@ was set to %{BOOL}u. This is an unsupported configuration meant to help with some aspects of the development of the Glide feature.
%{public}@ Failed to generate subscription lease fairplay data. err=%{public}@
%{public}@ Performing request with storeID=%lld, itemName=%{public}@
%{public}@ Finished with err=%{public}@, response=%{public}@
%{public}@ Performing setParentalControl request
%{public}@ failed - no DSID for account %{public}@
%{public}@ setParentalControl request failed. err=%{public}@
%{public}@ setParentalControl request returned response %{public}@
%{public}@ Missing setParentalControl url in bag - skipping
%{public}@: Cloud service status monitor was configured with privacy acknowledgement policy: %{public}@.
%{public}@: Cloud service status monitor incremented requests count for observing cloud service status to %lu. %{public}s observing cloud service status.
%{public}@: Cloud service status monitor decremented requests count for observing cloud service status to %lu. %{public}s observing cloud service status with token %{public}@.
%{public}@: Requesting developer token from service.
%{public}@: Skipping redundant request for developer token from service; appending completion handler to existing list (%lu completion handlers).
%{public}@: Invoking %lu completion handler%s for developer token.
%{public}@: Requesting user token from service.
%{public}@: Skipping redundant request for user token from service; appending completion handler to existing list (%lu completion handlers).
%{public}@: Invoking %lu completion handler%s for user token.
%{public}@: Requesting MusicKit tokens from service.
%{public}@: Skipping redundant request for MusicKit tokens from service; appending completion handler to existing list (%lu completion handlers).
%{public}@: Invoking %lu completion handler%s for MusicKit tokens.
%{public}@: Revoking music user tokens DSID %{public}@
%{public}@: Revocation of music user tokens completed error: %{public}@
%{public}@: Revocation of music user tokens completed
%{public}@: Active account did change. Posting %@.
%{public}@: Began transaction with identifier %{public}@ for cloud service status monitor connection; updated number of active transactions: %lu.
%{public}@: Attempted to end transaction with unknown transaction identifier for cloud service status monitor connection: %{public}@. Ignoring.
%{public}@: Ended transaction with identifier %{public}@ for cloud service status monitor connection; updated number of active transactions: %lu.
%{public}@: About to invalidate cloud service status monitor connection.
%{public}@: Cloud service status monitor connection was interrupted.
%{public}@: Cloud service status monitor connection was invalidated.
%{public}@: Encountered error while requesting %{public}@. %{public}@ Underlying error: %{public}@.
%{public}@: %{public}@.
%{public}@: Did invalidate cloud service status monitor connection.
%{public}@: Did reset cloud service status monitor connection.
%{public}@: Was previously observing cloud service status with token: %{public}@. Scheduling appropriate triggers to request begin observing cloud service status again.
%{public}@: Application has expired authorization, and couldn't be renewed.
%{public}@: Connection to %{public}@ service interrupted.
%{public}@: Connection to %{public}@ service invalidated.
%{public}@: Connection to %{public}@ failed to get remote object proxy: %{public}@
%{public}@: Failed to validate authorization expiry: %{public}@.
%{public}@: Began observing cloud service status with token: %{public}@.
%{public}@: Began observing cloud service status with token: %{public}@, despite the fact that the client requested to end observing it. Immediately cancelling this.
%{public}@: Ending observing cloud service status with token: %{public}@.
%{public}@: Ended observing cloud service status with token: %{public}@.
%{public}@: Observation token %{public}@ did not match with active observation token %{public}@. Did not end observing cloud service status.
%{public}@: Cloud service capabilities did change: %{public}@. Posting %@.
%{public}@: Storefront country code did change: "%{public}@". Posting %{public}@.
%{public}@: Storefront identifier did change: "%{public}@". Posting %@.
%{public}@: Handling "%{public}s" notification: cloud server did launch.
%{public}@: Successfully registered notify token for notify topic named "%{public}s".
%{public}@: Failed to register notify token for notify topic named "%{public}s"; notifyRegisterDispatchStatus = %lu.
%{public}@: Successfully cancelled notify token for notify topic named "%{public}s".
%{public}@: Failed to cancel notify token for notify topic named "%{public}s"; notifyCancelStatus = %lu.
%{public}@: Scheduling timeout timer for cloud server launch for %.1f seconds.
%{public}@: Cloud server launch timeout timer did fire.
%{public}@: Invalidated timeout timer for cloud server launch.
%{public}@: Missing cloud service status observation token despite the fact that the client asked to actively observe it.
%{public}@ %{public}@ attempting re-authentication for HTTP response code %{public}@.
%{public}@ %{public}@ authentication for HTTP response code %{public}@ successful - retrying request
-init is not supported - use sharedCloudContentTasteRequestListener
Error %{public}@ setting content taste type on item %lld.
Set content taste type on item %lld with error %{public}@.
Error %{public}@ setting content taste type on playlist %{public}@
Set content taste type on global playlist %{public}@} with error %{public}@.
Error %{public}@ setting content taste type on album %lld.
Set content taste type on album %lld with error %{public}@.
Error %{public}@ setting running content taste operation
Finished running content taste update operation with error %{public}@.
Connection to media content taste service interrupted
Connection to media content taste service invalidated
<ICCloudAvailabilityController %p> init [CoreTelephonyClient getInternetConnectionStateSync] encountered error=%{public}@
<ICCloudAvailabilityController %p>  Received kCTPerAppNetworkDataAccessPolicyChangedNotification. Updating cellular data restrictions
<ICCloudAvailabilityController %p> Videos allow cellular data: %d
<ICCloudAvailabilityController %p> StoreApps allow cellular data: %d
<ICCloudAvailabilityController %p> getting CTDataConnectionStatus from _telephonyClient <CoreTelephonyClient %p>
<ICCloudAvailabilityController %p> _applicationWillEnterForeground [CoreTelephonyClient getInternetConnectionStateSync] encountered error=%{public}@
<ICCloudAvailabilityController %p> received _telephonyClient CTDataConnectionStatus.state=%{private}@
<ICCloudAvailabilityController %p> _isCellularDataActive=%{BOOL}u, cellularDataRestrictedForMusic=%{BOOL}u, newIsCellularDataActive=%{BOOL}u, newCellularDataRestrictedForMusic=%{BOOL}u
<ICCloudAvailabilityController %p> Error (domain %d, code %d) registering for PerAppNetworkDataAccessPolicyChangedNotification
<ICCloudAvailabilityController %p> _registerPerAppNetworkDataAccessPolicyChangedNotificationfor CTPerAppNetworkDataAccessPolicyChangedNotification
<ICCloudAvailabilityController %p> Music restrict cellular data: %d
<ICCloudAvailabilityController %p> CoreTelephonyClientDataDelegate internetConnectionStateChanged: _isCellularDataActive=%{BOOL}u, newIsCellularDataActive=%{BOOL}u
%{public}@: Reloading Music User Token due to external change notification.
%{public}@: _handleMusicUserTokensDidChangeDistributedNotification: didContentsChange = %{BOOL}d
%{public}@: Failed to correct developer token encoded part: "%@".
%{public}@: Failed to convert base 64 encoded string with developer token encoded part to data: "%@".
%{public}@: Failed to deserialize developer token encoded part data with error: %{public}@.
%{public}@: Failed to decode developer token encoded part because resulting object is of unexpected type: %{public}@.
%{public}@: Failed to extract key identifier and team identifier from developer token "%@" because it has an unexpected number of parts: %lu.
%{public}@: Starting session...
%{public}@: Resolving streams...
%{public}@: Finished resolving streams with error: %{public}@
%{public}@: Opening connection...
%{public}@: Finished opening connection with success: %{public}@ error: %{public}@
%{public}@: Failed to get device sender security settings with error: %{public}@
%{public}@: Received response: %{public}@
%{public}@ Not authenticating because %{public}@ authentication is not allowed for this response
%{public}@ Skipping automatic re-authentication because the user hasn't accepted the latest privacy link, and personalization is automatic
%{public}@ Performing %{public}@ authentication using request context %{public}@
%{public}@ Failed to get verification context for identity %{public}@. error=%{public}@
%{public}@ Sending sync request with revision %lld; %{private}@
%{public}@ failed to decode response object
%{public}@ [SKD] - Failed to load enhanced audio configuration from the bag. err=%{public}@
%{public}@ [SKD] - loaded prefetch identifiers %{public}@
%{public}@ [SKD] - Timed out waiting for the enhanced audio configuration to load. we may fail to fetch the shared key
%{public}@ [SKD] - Created AVContentKeySession %{public}@
%{public}@ [SKD] - Adding asset %{public}@. shouldPreloadKeys=%{BOOL}u
%{public}@ [SKD] - Preloading key '%{Public}@' for asset %{public}@
%{public}@ [SKD] - Timed out waiting for the list of content keys on the asset to load. this may delay key fetch
%{public}@ [SKD] - Pausing automatic key renewal
%{public}@ [SKD] - Automatic key renewal will resume when the first key has been requested.
%{public}@ [SKD] - Resuming automatic key renewal
%{public}@ [SKD] - No pending key renewals to wait for
%{public}@ [SKD] - Waiting for key renewals to complete
%{public}@ [SKD] - Waiting for key requests to complete with timeout %lus
%{public}@ [SKD] - Finished waiting for key requests to complete
%{public}@ [SKD] - Waiting for %lu keys: %{public}@
%{public}@ [SKD] - Timed out waiting for %lu keys: %{public}@
%{public}@ [SKD] - handling key request %{public}@. isPrefetchKey=%{BOOL}u, shouldForceStreamingOnlyKeysForPlayback=%{BOOL}u
%{public}@ [SKD] - Requesting persistable content key for %{public}@
%{public}@ [SKD] - Failed to request persistable content key for '%{public}@' - requesting streaming key instead. err=%{public}@
 enableTelemetry=YES type=%{public, signpost.telemetry:number1, name=type}d
ContentKeyRequest
%{public}@ [SKD] - handling persistable content key request %{public}@. isPrefetchKey=%{BOOL}u
%{public}@ [SKD] - Failed to load key from store for key request %{public}@. err=%{public}@
%{public}@ [SKD] - Not using cached key needing renewal for request %{public}@. renewalDate=%{public}@
%{public}@ [SKD] - Returning cached key for key request %{public}@. renewalDate=%{public}@
 enableTelemetry=YES result=%{public, signpost.telemetry:string1, name=result}s
%{public}@ [SKD] - handling renewing key request %{public}@. isPrefetchKey=%{BOOL}u
%{public}@ [SKD] - contentKeySession:%{public}@ contentKeyRequestDidSucceed:%{public}@
%{public}@ [SKD] - contentKeySession:%{public}@ contentKeyRequest:%{public}@ didFailWithError:%{public}@
%{public}@ [SKD] - Secure key request failed for request %{public}@. err=%{public}@
%{public}@ [SKD] - Key server returned a slot error - disabling requesting of offline keys for future retries
%{public}@ [SKD] - Secure key request completed for request %{public}@. response=%{public}@
%{public}@ [SKD] - Failed to create persistable data for key request %{public}@. err=%{public}@
%{public}@ [SKD] - Failed to save key for persistable key request %{public}@. err=%{public}@
%{public}@ [SKD] - Completed content key request %{public}@ with response %{public}@
%{public}@ [SKD] - skipping automatic renewal for offline key request %{public}@
%{public}@ [SKD] - No renewal date provided in response to key request %{public}@ - skipping automatic renewal
%{public}@ [SKD] - Failed to renew key for request %{public}@ - falling back to existing cached key
%{public}@ [SKD] - Failed to load cached prefetch key for request %{public}@. err=%{public}@
%{public}@ [SKD] - Completed content key request %{public}@ with response error %{public}@
%{public}@ [SKD] - Scheduling a retry in 2 minutes for key %{public}@
%{public}@ [SKD] - Scheduling next key renewal using renewal times %{public}@
%{public}@ [SKD] - Scheduling next key refresh at %{public}@
%{public}@ [SKD] - Automatic key renewal is currently paused
%{public}@ [SKD] - Renewing key requests due to expire before %{public}@
%{public}@ [SKD] - Renewing key request %{public}@
%{public}@ [SKD] - No existing key request to renew for identifier %{public}@ - requesting a new one
%{public}@ [SKD] - Requesting key with identifier %{public}@
%{public}@ [SKD] - Finished waiting for key renewals to complete
%{public}@: Requesting developer token using %{public}@ with client identifier %{public}@.
%{public}@: Instantiated AMSBag with profile %{public}@ and version %{public}@: <AMSBag: %p>.
%{public}@: Instantiated AMSMediaTokenService with client identifier %{public}@: %{public}@.
%{public}@: Invalidated cached developer token using %{public}@ with client identifier %{public}@.
%{public}@ - TXTRecord dictionary from data decoding: %{public}@
%{public}@ - TXTRecord dictionary for data encoding: %{public}@
%{public}@ began observing privacy acknowledgement for %{public}@ with token %{public}@.
%{public}@ ending observation of privacy acknowledgement for %{public}@ with token %{public}@.
Disallowing subscription status request for sandboxed user identity %@
warning: it has recently become deprecated to request the music subscription status in process; the new supported code path fetches it in itunescloudd, but you need to add the service %{public}@ to the array value of your entitlement %{public}@ in order to opt into this new code path.
%{public}@ Sending request %{public}@ to subscription status service
%{public}@ Failed to obtain remote proxy to perform subscription status request. error = %{public}@.
Enabling subscription for user identity %@
Failed to enable subscription for user identity %{public}@. err=%{public}@
Disabling subscription for user identity %@
Failed to disable subscription for user identity %{public}@. err=%{public}@
Refreshing subscription for user identity %@
Failed to refresh subscription for user identity %@. err=%{public}@
Invalidating cached subscription status
Delivering result for %{public}@ to %llu status handler%s: error = %{public}@.
Delivering result for %{public}@ to %llu status handler%s: response = %{public}@.
No status handlers found for request %{public}@. pendingRequests = %{public}@
Invalidating connection with identifier %{public}@ to music subscription status service.
Creating connection with identifier %{public}@ to music subscription status service.
Connection to music subscription status service with identifier %{public}@ interrupted.
Connection to music subscription status service with identifier %{public}@ invalidated.
Identifier for severed connection to music subscription status service %{public}@ doesn't match current identifier: %{public}@. Ignoring.
Performing %{public}@; total number of pending requests %llu
Skipping redundant %{public}@; pending identical request %{public}@; total number of status handlers: %llu. total number of pending requests %llu
Cancelling requests for identifiers: %{public}@
%{public}@ handling privacy acknowledgement requirement changed notification: isPrivacyAcknowledgementRequired = %{BOOL}u. Posting distributed notification %{public}@.
%{public}@ handling %{public}@. Posting %{public}@.
[%{public}@] Failed to get device receiver security settings with error: %{public}@
[ICQRConnectionLLDS] <%p> Deallocating.
[ICQRConnectionLLDS] <%p> Populated with shared listening identifier: %{public}@
[ICQRConnectionLLDS] Creating service %@
[ICQRConnectionLLDS] <%p> Using existing pseudonym: %{public}@ with expiry: %{public}@
[ICQRConnectionLLDS] <%p> Provisioning pseudonym for uri: %{private}@.
[ICQRConnectionLLDS] <%p> Provisioned pseudonym: %{public}@ with expiry: %{public}@, error: %{public}@
[ICQRConnectionLLDS] <%p> Will renew pseudonym %{public}@
[ICQRConnectionLLDS] <%p> Cleared while renewing pseudonym.
[ICQRConnectionLLDS] <%p> Failed to renew pseudonym with error: %{public}@
[ICQRConnectionLLDS] <%p> Renewed pseudonym: %{public}@ with expiry: %{public}@
[ICQRConnectionLLDS] <%p> Joining shared listening session %{public}@ with handle %{public}@
[ICQRConnectionLLDS] <%p> Creating shared listening session with handle %{public}@
[ICQRConnectionLLDS] <%p> Failed to load bag with error %{public}@
[ICQRConnectionLLDS] <%p> resolved session discovery URL %{public}@
[ICQRConnectionLLDS] <%p> Response error %{public}@
<%p> unexpected response instance=%{public}@ correlationKey=%{public}@ body=%{public}@
[ICQRConnectionLLDS] <%p> Session discovery response %@
<%p> response contains errors: instance=%{public}@ correlationKey=%{public}@ body=%{public}@
<%p> response is missing required fields: instance=%{public}@ correlationKey=%{public}@ body=%{public}@
<%p> Response is missing required information. instance=%{public}@ correlationKey=%{public}@ body=%{public}@
[ICQRConnectionLLDS] <%p> Missing music API domains.
[ICQRConnectionLLDS] <%p> Missing default music API domain.
[ICQRConnectionLLDS] <%p> bag is missing country code
[ICQRConnectionLLDS] <%p> Selected environment %{private}@.
[ICQRConnectionLLDS] <%p> Cannot determine environment.
[ICQRConnectionLLDS] <%p> Failed to create pinning policy.
Failed to retrieve telephony mobile subscriber country code with error: %{public}@.
Failed to retrieve telephony mobile subscriber network code with error: %{public}@.
Failed to retrieve telephony mobile equipment info with error: %{public}@.
Telephony request to send SMS to %@ failed. Telephony context: %{public}@.
Telephony active subscriptions did change.
Telephony phone number available.
Telephony phone number changed.
Failed to instantiate CoreTelephonyClient.
Current device does not have telephony capability. Skipping telephony client initialization.
Failed to get telephony user default voice subscription context with error: %{public}@.
Found telephony subscription context %{public}@ at slot %ld as the user default voice one.
Could not find a valid telephony subscription context. Available telephony subscription contexts: %{public}@.
Failed to retrieve telephony phone number with error: %{public}@.
%@ phone number changed from %@ to %@.
unexpected storefront value type. propertyType=%{public}@ propertyValue=%{public}@
%{public}@ Failed to load value for bag key '%{public}@'. err=%{public}@
%{public}@ Found unexpected type for bag key '%{public}@' in profile '%{public}@: '%{public}@ (expected String)
%{public}@ Found unexpected type for bag key '%{public}@' in profile '%{public}@: '%{public}@ (expected Array)
%{public}@ Found unexpected type for bag key '%{public}@' in profile '%{public}@: '%{public}@ (expected Dictionary)
%{public}@ Failed to create url for bag key '%{public}@' in profile '%{public}@': '%{public}@'
%{public}@ Found unexpected type for bag key '%{public}@' in profile '%{public}@: '%{public}@ (expected URL)
%{public}@ Found unexpected type for bag key '%{public}@' in profile '%{public}@: '%{public}@ (expected Number)
%{public}@ Failed to find value for variable '%{public}@' in url '%{public}@'
%{public}@ Encountered missing bag key '%{public}@' in profile '%{public}@/%{public}@'
%{public}@ Used fallback value for missing bag key '%{public}@' : '%{public}@'
%{public}@ No fallback value for missing bag key '%{public}@'. this is probably an optional entry
%{public}@: Skipping saga account status request because privacy acknowledgement is required
%{public}@ Received match status response: %{public}@
performing songDownloadDone request. downloadID=%{public}@, songID=%llu
%{public}@ performing request with media kinds to add: %{public}@, kinds to remove: %{public}@
%{public}@ Failed to lookup account ID for user identity %{public}@. err=%{public}@
%{public}@ No active account so nothing to do
%{public}@ Failed to lookup account for user identity %{public}@. err=%{public}@
%{public}@ Updating media kinds from %{public}@ --> %{public}@
%{public}@ AMSAutomaticDownloadKindsSetTask completed with result %{public}@ error: %{public}@
%{public}@ AMSAutomaticDownloadKindsSetTask completed with result %{public}@
%{public}@ No change in media types - finishing
%{public}@ handling authentication request %{public}@
%{public}@ handling dialog request %{public}@
%{public}@ dialog task complete error: %{public}@
%{public}@ dialog task complete
[Lease] - %{public}@ - musicLeaseSession:didFinishPlaybackRequest:withPlaybackResponse: finshed with response=%p, updatedFairPlayKeyStatusList(count)=%d, error=%{public}@...
[Lease] - %{public}@ - musicLeaseSession:requestsFairPlayKeyStatusUpdateWithCompletion:
[Lease] - %{public}@ - musicLeaseSession:requestsFairPlayKeyStatusUpdateWithCompletion: - Completing with lease status: %{public}@
%{public}@: Request was issued before before first unlock, returning error.
%{public}@: Deferring to equivalent store URL request to build the actual URL request: %{public}@.
%{public}@: Building %{public}s URL request.
%{public}@: Skipping personalization; issuing request merely decorated with a developer token: %{public}@.
%{public}@: Issuing request decorated with both a developer token and a user token: %{public}@.
%{public}@: %{public}@ (retryReason = %{public}@, retryCount = %lu, maxRetryCount = %lu)
%{public}@: Unauthorized to fetch user token. Invalidating developer token.
%{public}@: Successfully invalidated developer token; retrying building URL request.
[ICSharedListeningConnectionController][D] <%p> Deallocating.
[ICSharedListeningConnectionController][D] <%p> Taking out assertion %@.
[ICSharedListeningConnectionController][D] <%p> Begin session discovery and connection.
[ICSharedListeningConnectionController][D] Start connection for populated controller.
[ICSharedListeningConnectionController][D] Client trying to start controller in invalidated state.
[ICSharedListeningConnectionController][D] <%p> Releasing assertion %@.
[ICSharedListeningConnectionController][D] %@
[ICSharedListeningConnectionController][E] <%p> Initializing XPC connection.
[ICSharedListeningConnectionController][E] <%p> XPC interrupted.
[ICSharedListeningConnectionController][E] <%p> XPC invalidated.
[ICSharedListeningConnectionController][E] <%p> Requesting hosted connection.
[ICSharedListeningConnectionController][E] <%p> Error retrieving proxy.
%{public}@ was initialized.
%{public}@ is being deallocated. wasObservingSubscriptionStatus=%{BOOL}u
%{public}@: Registered new subscription status observer with token: %{public}@.
%{public}@: Encountered unexpected error while resolving DSID for effective user identity %@: %{public}@.
%{public}@: Removed subscription status observer with token: %{public}@. wasLastObserver=%{BOOL}u
%{public}@: Handling %{public}@. The active user identity has changed in the daemon. Checking to see if the subscription status has changed.
%{public}@: Ignoring %{public}@ because it specifically refers to a different user identity: %{public}@.
%{public}@: Upon handling %{public}@, encountered unexpected error while resolving DSID for effective user identity %@: %{public}@.
%{public}@: Handling %{public}@. DSID changed from %@ to %@. Checking to see if the subscription status has changed.
%{public}@: clearing current subscription status for dsid change
%{public}@: Handling %{public}@. DSID has not changed (it is still equal to %@). Ignoring this notification.
%{public}@: Beginning to observe subscription status.
%{public}@: Stopped observing subscription status.
%{public}@: Requesting subscription status with caching %{public}@, using %{public}@.
%{public}@: Did complete %{public}@. Encountered error: %{public}@.
%{public}@: Did complete %{public}@. Received subscription status response %{public}@.
%{public}@: Subscription status did not change. Skipping invoking observation handlers.
%{public}@: Subscription status did change: %{public}@. About to invoke %llu observation handler%s.
%{public}@: Invoking observation handler with token %{public}@; subscription status = <%{public}@: %p>
%{public}@ retry requested by authkit
%{public}@ Failed to fetch identity properties to process the response. err=%{public}@
%{public}@ Server response included an updated storefront %{public}@
%{public}@ Failed to save updated storefront value. err=%{public}@
%{public}@ invalidating bag cache because invalidate-url-bags is set in the response
%{public}@ completed with:
error: %{public}@
correlationKey: %{public}@
response: 
%{public}@
body: 
%{public}@
%{public}@ completed successfully. correlationKey=%{public}@
%{public}@ received failureType=%{public}@
body=%{public}@
%{public}@ retrying request after action taken for dialog response
%{public}@ retrying request after successful re-authentication
%{public}@ retrying request after machine data action %{public}@
%{public}@ mescal verification failed for the response. err=%{public}@
%{public}@ verifying mescal signature for request. configuration=%{public}@
%{public}@ Not verifying mescal signature because the payload is too large. length=%lld, limit=%lld
%{public}@ %{public}@ Recevied authentication error. server response=%{public}@
%{public}@ %{public}@ received store dialog response %{public}@
%{public}@ %{public}@ no dialog response handler - ignoring
%{public}@: Failed to load accounts to remove cookies. err=%{public}@
%{public}@: Failed to load accounts to remove all cookies. err=%{public}@
%{public}@: Failed to load account for identifier %{public}@. err=%{public}@
[ICUserIdentityStore] - initializing account histories with activeAccountDSID = %{public}@, existingActiveAccountID = %{public}@, timestamp = %lld
[ICUserIdentityStore] Request for properties for active iCloud account before first unlock.
[ICUserIdentityStore] Failed to load active icloud account properties. err=%{public}@
[ICUserIdentityStore] Request for properties for user identity %@ before first unlock.
[ICUserIdentityStore] Failed to load properties for identity %{public}@. err=%{public}@
[ICUserIdentityStore] - updating active account to %{public}@ (timestamp = %lld)
[ICUserIdentityStore] - updating active locker account to %{public}@ (timestamp = %lld)
[ICUserIdentityStore] - removed cloud library setting from %{public}@ (timestamp = %lld) error=%{public}@
[ICUserIdentityStore] - Error retrieving user identities for manageable accounts - error=%{public}@
[ICUserIdentityStore] Failed to fetch local store account synchronously with error: %{public}@.
[ICUserIdentityStore] - Error retrieving user identities for all accounts - error=%{public}@
[ICUserIdentityStore] - Backend changed
[ICUserIdentityStore] Failed to fetch local store account with error: %{public}@.
[ICUserIdentityStore] - Local store account properties change detected [Posting notification]
[ICUserIdentityStore] - checking for active account change at timestamp %llu. activeAccountDSID = %{public}@, lastKnownActiveAccountDSID = %{public}@ (timestamp = %llu)
[ICUserIdentityStore] - Active account change detected
[ICUserIdentityStore] - reloadForExternalChange failed to obtain active account DSID. err=%{public}@
[ICUserIdentityStore] - checking for active locker account change at timestamp %llu. activeLockerAccountDSID = %{public}@, lastKnownActiveLockerAccountDSID = %{public}@ (timestamp = %lld)
[ICUserIdentityStore] - Active locker account change detected
[ICUserIdentityStore] - reloadForExternalChange failed to obtain active locker account DSID. err=%{public}@
[ICUserIdentityStore] - Local store account properties change detected
[ICUserIdentityStore] - _icValidStoreAccountsFromACAccounts=%{public}@
processing machine data action %{public}@
unknown machine data action %{public}@ - ignoring
machine data action %{public}@ completed. err=%{public}@
failed to decode anisette response data from response %{public}@
NSURL: %p -initWithMasterPlaylistURL: Omitting video dictionary [received video dictionary with inconsistent aspect ratio] currentAspectRatio=%f aspectRatio=%f videoDictionary=%@
%{public}@: TXT record data updated.
%{public}@: Net service did resolve address.
%{public}@: Net service did not resolve address with error dictionary: %{public}@.
%{public}@: Resolved net service.
%{public}@: Getting streams...
%{public}@: Successfully created streams.
%{public}@: Failed to create streams.
%{public}@: Updated net service TXTRecord: %{public}@
Failed to update user version. err=%{public}@
%{public}@ Failed to load mapping cache
%{public}@ Failed to load url mappings from cache file
%{public}@ Regex map file url is missing from the bag - skipping
%{public}@ Failed to fetch url mapping file from server. err=%{public}@
%{public}@ Failed to parse url mappings from response body
%{public}@ Fetched updated url mappings %{public}@
%{public}@ Removing cache file
%{public}@ Failed to remove cache file. err=%{public}@
%{public}@ Failed to load cache from file. err=%{public}@
%{public}@ Failed to save cache dicationry. err=%{public}@
%{public}@ [SKD] - Finished with error %{public}@
%{public}@ [SKD] - Executing request %{public}@
[%{public}@]: [SKD] - Missing certificate URL: %{public}@, key server URL: %{public}@, serverPlaybackContextDataCreationHandler: %{BOOL}u
[%{public}@]: [SKD] - Missing request context.
[%{public}@]: [SKD] - Requesting iTunes Store content with a non-store request context.
[%{public}@]: [SKD] - Failed to load certificate data with error: %{public}@
[%{public}@]: [SKD] - Failed to generate server playback context data with error: %{public}@
[%{public}@]: [SKD] - Failed to serialize key server request data with error: %{public}@
[%{public}@]: [SKD] - Key server request returned error: %{public}@.
[%{public}@]: [SKD] - Missing key dictionary in response: %{public}@
[%{public}@]: [SKD] - using secure key renewalTime override: %{public}@
[%{public}@]: [SKD] - Loaded successfully.
[%{public}@]: [SKD] - Missing content key context data in response.
[%{public}@]: [SKD] - Received failure in response: %{public}@
ICEnvironmentMonitor: failed to create network path observer
error registering for thermal pressure levels change notifications status=%u
Network reachability values changed. networkType=%{public}d, telephonyDataIndicator=%{public}@, isRemoteServerReachable=%{BOOL}u, isRemoteServerLikelyReachable=%{BOOL}u, currentNetworkLinkQuality=%{public}@, _currentNetworkLinkExpensive=%{BOOL}u, _wifiAssociated=%{BOOL}u, _ethernetWired=%{BOOL}u, _networkConstrained=%{BOOL}u
thermal levels changed - oldValue=%llu, newValue=%llu
Failed to get current thermal level. status=%u, using %llu for now
current thermal pressure level=%llu
error getting current thermal pressure level - status=%u, _currentThermalLevel=%llu
error checking for thermal pressure level status=%u
%{public}@ Found network type override value %{public}@
Error fetching operator name. error=%{public}@
Error fetching registration status. error=%{public}@
Error fetching data status. error=%{public}@
%{public}@ skipping invalid offer value %{public}@
No default bag profile for client '%{public}@' - using default '%{public}@'
ICNetworkConstraints %p [%@] - cellularDataAllowed:%{BOOL}u, wifiDataAllowed:%{BOOL}u
%{public}@ Enabling push notifications for type %{public}@ with params %{public}@
%{public}@ Missing add-push-notification-type-url url in bag - skipping
%{public}@ addPushNotification request failed. err=%{public}@
%{public}@ addPushNotification request returned response %{public}@
softlink:r:path:/System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
softlink:r:path:/System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry
softlink:r:path:/System/Library/PrivateFrameworks/PairedSync.framework/PairedSync
softlink:r:path:/System/Library/PrivateFrameworks/AskPermission.framework/AskPermission
softlink:r:path:/System/Library/PrivateFrameworks/SetupAssistant.framework/SetupAssistant
softlink:r:path:/System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices
softlink:r:path:/System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit
softlink:r:path:/System/Library/PrivateFrameworks/AirPlaySupport.framework/AirPlaySupport
softlink:r:path:/System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration
ICMusicSubscriptionStatusCache
ICJSSign
ICJSSignConfiguration
NSCopying
ICIAMImpressionNode
ICUnfairLock
ICDelegateToken
NSSecureCoding
NSCoding
_ICLLPlayNowQueueItemsCommand
ICAuthorizeMachineResponse
ICMusicSubscriptionRequest
ICSAPSession
_ICLLReactionCommand
ICStoreRequestContext
ICDelegateAccountStoreOptions
_ICLLQueueSyncAction
_ICLLDisplayMessage
ICLightweightMusicSubscriptionStatusRequest
_ICLLPlaybackControlSettingsCommand
ICIAMApplicationMessage
ICAuthenticationUtilities
ICMusicUserStateCookies
ICMutableMusicUserStateCookies
NSObject
ICRadioLibraryArtistContentReference
ICCloudServerProtocol
ICCloudClientCloudService
_ICLLParticipant
ICStoreFileAssetInfo
ICSAPSessionSignDataOperation
ICStorePlatformRequestOperation
ICPlayActivityFeedSerialization
ICStoreFinanceItemMetadata
ICDelegateAccountStoreServiceClient
ICDelegateAccountStoreService
ICMusicSubscriptionCarrierBundlingEligibilityResponse
ICPAAudioQualityDictionary
ICRadioPlaybackHistory
NSMutableCopying
ICMutableRadioPlaybackHistory
ICRadioStoreContentReference
ICRadioContentReferenceContainable
ICSQLiteStatement
ICSQLiteBinding
ICAgeVerificationManager
ICMusicKitTokensResponse
ICInAppMessageManagerProtocol
ICInAppMessageManager
NSXPCListenerDelegate
ICEnvironmentMonitorObserver
ICURLPerformanceMetrics
ICRemoteRequestOperationExecutionResponse
ICSubscriptionRedownloadRequest
_ICLLActionMessage
_ICLLReplaceQueueItemsCommand
ICDelegationConsumerNetService
NSNetServiceDelegate
ICMachineDataProvisionOperation
ICMediaAssetDownloadRequest
ICContentKeySessionDelegateProtocol
ICURLSessionManager
ICAdditions
ICPushNotificationMessage
ic_SagaAdditions
ic_JaliscoAdditions
ic_ITunesStoreAdditions
_ICLLAddQueueItemsCommand
_ICLLRadioSeed
ICCloudClient
ICCloudAvailability
ICAsyncBlockOperation
ICRemoteRequestOperationController
ICDeveloperTokenDefaultProvider
ICDeveloperTokenProvider
ICStoreMediaResponseItem
ICRadioFetchMetadataRequest
ICMusicRestoreBagConfiguration
ICCloudServiceStatusRemoteMonitoringClient
ICCloudServiceStatusRemoteMonitoringService
ICCloudServiceStatusRemoteMonitoring
ICLightweightMusicSubscriptionStatusResponse
ICLibraryAuthServiceClientTokenResponse
ICLibraryAuthServiceClientTokenResult
ICLibraryAuthServiceClientTokenIdentifier
ICUserIdentity
_MSVAccountInformationProviding
ICPlayActivityAudioQualityProperties
ICMutablePlayActivityAudioQualityProperties
ICLibraryAuthServiceClientTokenRequest
ICURLBagProvider
_ICLLPlayNowQueueItemsAction
ICMusicSubscriptionStatusResponse
_ICLLRemoveQueueItemAction
ICLibraryAuthServiceBulkClientTokenRequest
ICMusicSubscriptionAccountlessPlaybackRequest
ICDelegationConsumerServiceProtocolHandler
ICAMSBagValuePromise
ICMusicSubscriptionPlaybackRequestOperation
ICMusicSubscriptionPlaybackResponseItem
ICStorePlatformOfferAsset
ICURLBagMescalConfiguration
ICPBDGSPlayerDelegateInfoToken
_ICLLReplaceQueueItemsAction
ICDelegateAccountStore
ICSQLiteConnectionDelegate
ICDelegateAccountStoreWriter
ICMediaUserStateCenterServerProtocol
ICMediaUserStateCenterClientProtocol
ICMediaUserStateCenter
ICStorageManager
_ICLLClientInfoCommand
ICUserCredentialResponse
ICAsyncOperation
ICFPLeaseSyncSession
ICUserAuthenticationValidationRequest
ICNanoPairedDeviceStatusMonitor
PSYInitialSyncStateObserverDelegate
ICLibraryAuthServiceBulkClientTokenResponse
ICDelegationProviderService
ICSDelegationProviderServiceXPC
ICDelegationProviderServiceSessionDelegate
NSNetServiceBrowserDelegate
ICUserIdentityStoreACAccountBackend
ACMonitoredAccountStoreDelegateProtocol
ICUserIdentityStoreBackend
ICUserIdentityProperties
ICMutableUserIdentityProperties
itunescloudd
ICIAMSerialCheckRequest
ICHTTPArchive
ICMusicKitRequestContext
ICConnectionConfiguration
ICMusicSubscriptionRecommendationsRequest
_ICLLCommandMessage
_ICLLCurrentItemTransitionCommand
ICUserVerificationContext
_ICLLPlaybackControlSettingsQuery
_ICLLReactionAction
ICMusicSubscriptionLeaseStatus
ICPushNotificationsRegisterAPNSTokenRequest
ICSiriAddToAccousticHistoryRequest
_ICLLPlaybackSyncStateQuery
ICLibraryAuthServiceClientTokenStatus
ICStorePlatformRequest
ICUserNotificationBuilder
ICMusicLibraryAuthTokenStatus
ICMutableMusicLibraryAuthTokenStatus
ICStorePlatformMetadata
ICLiveLinkPlaybackCoordinatorMedium
ICLinkLinkAVPlaybackCoordinatorMedium
AVPlaybackCoordinationMediumDelegate
ICMusicSubscriptionStatusRequestOperation
ICURLSession
NSURLSessionDelegate
NSURLSessionDownloadDelegate
NSURLSessionTaskDelegate
NSURLSessionDataDelegate
ICMusicRestoreRequest
ICInAppMessageEntry
ICIAMApplicationMessageSyncCommand
ICAMSBagAdapter
AMSBagProtocol
ICDelegationConsumerServiceSessionRequestInfo
ICCloudCLientErrorAdditions
ICDelegateAccountStoreServiceListener
ICFPSAPContext
_ICLLPlaybackControlSettings
ICIAMSynchronizeMessagesResponse
ICMediaAPIURLMapping
ICMediaAPIURLMappingSet
ICFPContentInfo
ICRadioPlaybackHistoryStore
ICProcessPlayActivityEventsRequestListener
ICPlayActivityController
_ICPlayActivityEndpointRevisionInformation
_ICPlayActivityFlushSessionInformation
ICPushNotificationsDisableTypesRequest
ICStoreArtworkSizeInfo
ICStoreArtworkInfo
_ICLLPlaybackItem
ICLiveLink
ICSharedListeningConnectionControllerDelegate
ICSharedListeningContainer
ICSharedListeningItem
ICSharedTracklistPosition
ICSharedListeningQueue
ICSuzeLeaseSession
ICMediaRedownloadRequest
ICUserIdentityStoreCoding
ICIAMLogEventRequest
ICStoreURLRequestBuilderProperties
ICStoreFileAssetFairPlayInfo
ICInAppMessageUserNotificationCoordinator
ICMusicUserTokenFetchRequest
_ICLLCurrentItemChangeAction
ICPBDGSStartDelegationRequest
_ICLLMoveQueueItemCommand
ICDeviceInfo
ICNanoPairedDeviceStatusObserver
_ICLLRadioSource
ICFlushPlayActivityEventsOperation
ICIAMTriggerCondition
ICIAMImage
ICInAppMessageMetadataEntry
ICContentKeyStoreEntry
ICFileContentKeyStore
ICContentKeyStoreProtocol
ICMemoryContentKeyStore
ICMachineDataSyncOperation
ICURLBagRadioConfiguration
ICAgeVerifier
ICSQLiteConnectionOptions
ICRadioFetchMetadataResponse
ICPlayActivityDebugLogOperation
ICURLRequest
NSProgressReporting
ICAccountStoreAdditions
ICPBDGSFinishDelegationRequest
ICIAMMessagePresentationTrigger
ICCloudItemIDList
ICUserIdentityStoreTestingBackend
ICMusicAccountNotificationsSettingsRequestOperation
ICIAMMetricEvent
ICMusicRestoreRequestParameters
ICDelegationConsumerService
ICDelegationConsumerServiceRequest
ICRadioLibraryAlbumContentReference
ICTVUserState
ICMutableTVUserState
_ICLLMoveQueueItemAction
ICRadioStationProviderResource
ICAgeVerificationState
ICMusicSubscriptionCarrierBundlingEligibilityOperation
ICMusicLibraryAuthToken
ICMutableMusicLibraryAuthToken
ICValueHistory
_ICValueHistoryItem
ICIAMLocalNotification
ICFPStreamContext
ICStoreRadioStreamAssetInfo
ICMediaUserState
ICMutableMediaUserState
ICStoreDialogResponseHandler
ICStoreDialogResponseHandlerConfiguration
ICFairPlayUtilityAdditions
ICPlayInfoResponse
ICLiveLinkIdentity
_ICMutableLiveLinkIdentityPrivate
ICMutableLiveLinkIdentity
_ICLLQueryMessage
ICDeviceSetupStatusMonitor
ICMediaRedownloadResponse
ICStoreResponseProtocol
_ICLLParticipantChangeAction
ICIAMApplicationMessageSyncResponse
ICPAPlayModeDictionary
ICACAccountVerificationOperation
AMSAuthenticateTaskDelegate
ICDispatchOnce
ICRequestContext
_ICLLCurrentItemChangeCommand
ICLiveLinkQRConnectionMessageCoder
ICInAppMessageConfiguration
ICMusicAccountNotificationsSettingsManager
ICRadioStationTrack
ICDelegationServiceConnection
ICDelegationServicePairingSessionDelegate
MSVMessageParserDelegate
_ICDelegationServiceConnectionPendingRequestContext
_ICLLParticipantQuery
_ICLLQueueQuery
ICCloudAddReferral
ICIAMMessageAction
ICInAppReportEventRequest
ICMusicSubscriptionLeasePlaybackRequest
ICStoreURLRequest
ICDelegateAccountStoreXPCWriter
ICMusicSubscriptionStatusRequest
ICPlayActivityTable
ICMusicSubscriptionFairPlayKeyStatus
ICLightweightMusicSubscriptionStatus
ICPlayActivityEvent
ICMutablePlayActivityEvent
ICMusicSubscriptionStatusCacheKey
ICIAMMessageContent
ICMachineDataEraseOperation
ICRemoveMediaDRMOperation
ICMusicKitURLResponse
ICAVAssetDownloadURLSession
AVAssetDownloadDelegate
ICRemoteRequestOperationExecutionContext
ICUserVerificationOperation
ICSQLiteRow
ICRadioGetTracksRequest
ICIAMMessageRule
ICCloudServerListenerEndpointServiceProtocol
ICCloudServerListenerEndpointProvider
ICCloudServerListenerEndpointProviding
ICSuzeLeaseRequest
ICPAPlayActivityEnqueuerProperties
ICMusicUserState
ICMutableMusicUserState
ICPAPlayActivityEvent
ICPlayActivityEventContainerIDs
ICMutablePlayActivityEventContainerIDs
ICDelegationServicePairingSession
ICURLBagMonitor
ICBook
ICRadioLikeRequest
ICAuthorizeMachineURLRequest
ICDelegationConsumerServiceSessionRequestResult
ICPBDGSStartDelegationResponse
ICAddToWishListResponse
_ICLLRevisionHash
_ICLLMediaInfo
ICMusicKitURLResponseHandler
ICPBDGSResponse
ICRequestAdditions
ICAuthorizeMachineRequest
ICLibraryAuthServiceClientTokenProviderProtocol
ICLibraryAuthServiceClientTokenProvider
ICSQLitePreparedStatement
ICPlayInfoRequest
ICPrivacyInfo
ICUserCredentialRequest
ICRadioLikeResponse
ICStoreHLSAssetInfo
ICPBDGSPlayerInfoContextToken
ICMusicSubscriptionLeaseSession
ICKeyedSharedInstanceManager
ICCloudServerAvailabilityServiceProtocol
ICCloudClientAvailabilityService
_ICLLPlaybackItemContainer
ICPushNotificationsResponse
ICInAppMessageStore
ICSuzeLeaseResponse
ICSAPSessionPrepareFairPlayContextOperation
ICRadioLibraryTrackContentReference
_ICLLAddQueueItemsAction
ICDelegationPlayInfoRequest
ICDelegationPlayInfoTokenRequest
ICDefaults
ICMusicSubscriptionPlaybackURLRequest
ICRadioPlaybackHistoryItem
ICMutableRadioPlaybackHistoryItem
ICDelegationProviderServiceAssertion
ICPlayActivityEnqueuerProperties
ICMutablePlayActivityEnqueuerProperties
ICSAPSessionAbstractOperation
ICUserNotificationContext
ICUserNotificationManager
ICAddToWishListRequest
ICStorePlatformResponseGroup
ICStorePlatformResponse
ICCDelegationProviderServiceXPC
ICSetParentalControlRequestOperation
ICIAMLogEventResponse
ICSQLiteQueryResults
_ICLLPlaybackSyncCommand
ICMediaLibraryAccessPermissionsHelper
ICCloudServiceStatusMonitor
ICPBDGSFinishDelegationResponse
ICPBDGSMessage
ICPBDGSRequest
ICURLResponseHandler
ICUpdateContentTasteRequestListener
ICCloudContentTasteRequestListener
_ICLLServerNoticeAction
ICCloudAvailabilityController
RadiosPreferencesDelegate
CoreTelephonyClientDataDelegate
ICMusicUserTokenCache
ICBuyProductRequest
ICDelegationProviderServiceSession
ICDelegationServiceConnectionDelegate
ICStoreURLResponseAuthenticationProvider
ICRadioGetTracksResponse
_ICLLQueue
ICRadioResponse
_ICLLProtocolMessage
ICDelegationPlayInfoRequestOperation
ICDelegationPlayInfoResponseToken
ICIAMParameter
ICPurchaseRedownloadRequest
ICInAppMessageSyncRequest
ICUserIdentityContext
ICRemoteRequestOperationExecutingClient
ICRemoteRequestOperationExecutingService
ICRemoteRequestOperationExecuting
ICContentKeySession
AVContentKeySessionDelegate
ICDeveloperTokenFetchRequest
ICDelegationServiceSecuritySettings
ICDelegationNetServiceTXTRecord
ICStoreDialogResponse
ICStoreDialogResponseButton
ICStoreDialogResponseButtonAction
_ICLLErrorMessage
ICMusicSubscriptionStatusController
ICMusicSubscriptionStatusRemoteRequestingClient
ICDelegationConsumerServiceSession
ICDelegationConsumerNetServiceDelegate
ICInAppMessageEventEntry
ICLiveLinkQRConnectionDataSource
MSVQRConnectionSessionDataSource
ICSecureKeyDeliveryResponse
ICTelephonyController
CoreTelephonyClientDelegate
CoreTelephonyClientSuppServicesDelegate
ICLiveLinkEvent
ICLiveLinkCustomEvent
ICLiveLinkPlaybackEvent
ICLiveLinkQueueEvent
ICLiveLinkQueueEventContentAdded
ICLiveLinkQueueEventContentPlayedNow
ICLiveLinkQueueEventContentRemoved
ICLiveLinkQueueEventContentReordered
ICLiveLinkQueueEventContentReplaced
ICLiveLinkQueueEventContentUpdatedMessage
ICLiveLinkQueueEventPlaybackModeChanged
ICLiveLinkReactionEvent
ICLiveLinkSessionEvent
ICAccountAdditions
ICURLBag
ICDelegationProviderServiceProtocolHandler
ICRadioStationMetadata
ICDelegateAccountStoreSQLWriter
ICURLResponseAuthenticationProvider
_ICLLPlaybackSyncAction
ICSecurityInfo
ICSagaGetAccountStatusRequest
ICSongDownloadDoneRequest
MusicKit
MusicKit_Private
ICUpdateAutomaticDownloadMediaKindsRequest
AMSRequestPresentationDelegate
ICRemoteRequestOperation
_ICLLAutoPlaySource
ICMusicSubscriptionLeaseController
ICMusicSubscriptionLeaseSessionDelegate
_ICMusicSubscriptionLeaseIdentityCacheKey
ICIAMSynchronizeMessagesRequest
ICDelegateAccountStoreSchema
ICMusicKitURLRequest
ICSAPSessionVerifySignatureOperation
ICMusicSubscriptionStatusRemoteRequestingService
ICMusicSubscriptionStatusRemoteRequesting
ICSharedListeningConnectionController
ICDirectSharedListeningConnectionController
MSVQRConnectionDelegate
ICSharedListeningConnectionClientProtocol
ICSharedListeningConnectionServiceProtocol
ICExternalSharedListeningConnectionController
ICUserVerificationRequest
ICMusicSubscriptionStatusMonitor
ICDelegateAccountStoreReader
ICRadioURLRequest
ICStoreURLResponseHandler
ICPBDGSPlayerInfoContextRequestToken
_ICLLCurrentItemTransitionAction
ICSharedListeningConnectionReportEvent
ICSharedListeningConnectionReport
MSVQRConnectionReportProtocol
ICRequestOperation
ICSuzeLeaseSessionConfiguration
_ICLLRemoveQueueItemCommand
_ICLLAvailability
ICMatchRedownloadRequest
ICHTTPCookieStore
ICMusicAccountNotificationsSettingsSwitch
ICUserIdentityStore
ICUserIdentityStoreBackendDelegate
ICMachineDataActionHandler
ICStoreVideoArtworkInfo
ICRadioTrackInfoContentReference
ICRadioContentReference
ICStorePlatformOffer
ICDelegationProviderNetService
ICSQLiteConnection
ICURLResponse
ICMediaAPIURLMappingProvider
ICURLBagLibraryDAAPConfiguration
ICMusicSubscriptionFairPlayController
ICMusicSubscriptionPlaybackResponse
ICMachineDataOperation
ICSecureKeyDeliveryRequest
ICSecureKeyDeliveryRequestOperation
_ICLLClientInfoAction
ICEnvironmentMonitor
ICADIUtilities
ICADIUtilityAdditions
ICADIProvisionSession
ICUserCredentialProvider
_ICUserCredentialProviderRequestSession
_ICLLNoGenerationSource
ICLocalStoreAccountProperties
ICMutableLocalStoreAccountProperties
ICPlayActivityEventItemIDs
ICMutablePlayActivityEventItemIDs
ICMusicSubscriptionStatus
ICMutableMusicSubscriptionStatus
ICMusicSubscriptionStatusTerms
ICWiFiManager
ICURLBagEnhancedAudioConfiguration
ICClientInfo
ICMutableClientInfo
ICIAMSerialCheckResponse
ICNetworkConstraints
ICMutableNetworkConstraints
ICMusicAccountNotificationsSettingsResponse
ICPushNotificationsEnableTypesRequest
ICIAMApplicationBadge
numberWithLongLong:
handleFailureInFunction:file:lineNumber:description:
shortValue
bundleVersion
numberWithUnsignedInt:
currentThread
initWithAccountType:
addObjectsFromArray:
handleFailureInMethod:object:file:lineNumber:description:
bundleWithPath:
shortVersionString
numberWithUnsignedInteger:
initWithAccountTypes:delegate:
setResponseBody:
numberWithUnsignedLong:
initWithURL:
addObserver:forKeyPath:options:context:
numberWithUnsignedLongLong:
initWithArray:
setExecutableName:
tokenString
addObserver:selector:name:object:
initWithURL:MIMEType:expectedContentLength:textEncodingName:
handleNotification:
objectAtIndex:
initWithURL:cachePolicy:timeoutInterval:
addObserverForName:object:queue:usingBlock:
objectAtIndexedSubscript:
totalItemCount
dataFromTXTRecordDictionary:
addOperation:
lastObject
bytes
handleRemovalOfParticipant:
setExportedInterface:
objectEnumerator
totalUnitCount
enumerateItemsInSectionAtIndex:usingBlock:
addOperationWithBlock:
lastPathComponent
handleResponse:forRequest:shouldRetry:
objectForInfoDictionaryKey:
setExportedObject:
dataRequest
initWithURL:resolvingAgainstBaseURL:
cachePolicy
objectForKey:
enumerateKeysAndObjectsUsingBlock:
initWithURL:statusCode:HTTPVersion:headerFields:
objectForKeyedSubscript:
transactionMetrics
enumerateObjectsUsingBlock:
registerSynchronouslyWithError:
serverTrust
remoteObjectProxy
enumerateObjectsWithOptions:usingBlock:
addRequestWithURL:account:completion:
dataTaskWithRequest:
remoteObjectProxyWithErrorHandler:
enumerateRangesUsingBlock:
initWithBase64EncodedString:options:
dataUsingEncoding:
shouldHandleNotification:
dataUsingEncoding:allowLossyConversion:
enumerateSectionsUsingBlock:
hasBoolEntitlement:
calendarWithIdentifier:
dataWithBytes:length:
initWithBool:
removeAccount:withCompletionHandler:
hasBoolEntitlement:shouldLogForMissingEntitlement:
unarchivedObjectOfClass:fromData:error:
dataWithBytesNoCopy:length:freeWhenDone:
initWithUTF8String:
sessionWithConfiguration:assetDownloadDelegate:delegateQueue:
canProvidePersistableContentKey
dataWithJSONObject:options:error:
operationCount
initWithBundleIDs:states:
setFragment:
unionSet:
initWithUUIDString:
sessionWithConfiguration:delegate:delegateQueue:
dataWithPropertyList:format:options:error:
enumeratorAtPath:
initWithUnsignedLongLong:
length
initWithBundleIdentifier:allowPlaceholder:error:
removeAllObjects
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
outputStreamToFileAtPath:append:
initWithBundleType:
outputStreamToMemory
initWithBytes:length:
dateByAddingTimeInterval:
hasEntitlement:inGroup:
unsignedCharValue
initWithBytesNoCopy:length:encoding:freeWhenDone:
removeContentKeyRecipient:
hasEntitlement:inGroup:shouldLogForMissingEntitlement:
initWithBytesNoCopy:length:freeWhenDone:
dateFromString:
linkItemAtURL:toURL:error:
initWithCapacity:
unsignedIntegerValue
pairWithFirst:second:
ephemeralSessionConfiguration
cancelAllOperations
setHTTPBody:
dateWithTimeIntervalSince1970:
initWithClientIdentifier:bag:
setSession:
unsignedShortValue
dateWithTimeIntervalSinceNow:
setHTTPCookieAcceptPolicy:
pairingID
removeDeliveredNotificationsWithIdentifiers:
setAccountProperty:forKey:
setHTTPMethod:
dateWithTimeIntervalSinceReferenceDate:
errorWithDomain:code:userInfo:
setSessionSendsLaunchEvents:
setHTTPShouldHandleCookies:
setHTTPShouldSetCookies:
setHTTPShouldUsePipelining:
initWithConfiguration:bag:
hasPrefix:
canonicalFormat
decimalDigitCharacterSet
removeIndexes:
decodeBoolForKey:
removeItemAtPath:error:
decodeDoubleForKey:
removeItemAtURL:error:
insertObject:atIndex:
decodeInt32ForKey:
path
decodeInt64ForKey:
aggregateAssetDownloadTaskWithURLAsset:mediaSelections:assetTitle:assetArtworkData:options:
pathWithComponents:
decodeIntegerForKey:
removeLastObject
airplaneMode
decodeObjectForKey:
caseInsensitiveCompare:
hasSuffix:
decodeObjectOfClass:forKey:
initWithContainerID:bag:
allHTTPHeaderFields
insertString:atIndex:
decodeObjectOfClasses:forKey:
initWithContentsOfFile:
allHeaderFields
decodePropertyListForKey:
initWithContentsOfURL:error:
perform
removeObject:
setAllHTTPHeaderFields:
decodeTCCIdentityForKey:
initWithContentsOfURL:options:error:
performAuthentication
removeObjectAtIndex:
allKeys
executableURL
setAllowServerDialogs:
initWithContext:
removeObjectForKey:
charValue
setAllowsCellularAccess:
removeObjectsAtIndexes:
instanceMethodForSelector:
allMediaSelections
characterSetWithCharactersInString:
defaultAction
removeObjectsForKeys:
initWithData:
removeObjectsInArray:
allObjects
defaultCenter
_temporaryDictionary
initWithData:encoding:
allSections
JSONObjectWithData:options:error:
removeObserver:forKeyPath:context:
MIMEType
removeObserver:name:object:
expectedContentLength
initWithDeallocHandler:
initWithDefaultValue:
interfaceWithProtocol:
initWithDelegate:
setIgnoreAccountConversion:
removePendingNotificationRequestsWithIdentifiers:
slotID
allocWithZone:
snapshotWithDomain:type:subType:context:triggerThresholdValues:events:completion:
uploadTaskWithRequest:fromData:
sortUsingComparator:
host
URLAssetWithURL:options:
uppercaseLetterCharacterSet
sortedArrayUsingComparator:
URLByAppendingPathComponent:isDirectory:
invalidateMediaToken
initWithDomain:type:name:port:
defaultSessionConfiguration
setIncludesPeerToPeer:
invertedSet
allowsCellularAccess
failingBagValueWithKey:valueType:error:
defaultStore
URLQueryAllowedCharacterSet
setInterruptionHandler:
persistableContentKeyFromKeyVendorResponse:options:error:
initWithEnabledMediaKinds:account:bag:presentationDelegate:
renewExpiringResponseDataForContentKeyRequest:
setInvalidationHandler:
URLWithString:
renewPseudonym:forUpdatedDuration:completion:
URLWithString:relativeToURL:
standardUserDefaults
UTF8String
initWithFormat:
UUID
startContainerWithCode:
setAuthenticationType:
UUIDString
replaceCharactersInRange:withString:
loadValuesAsynchronouslyForKeys:completionHandler:
phoneNumberWithDigits:digits:countryCode:
ams_accountFlagValueForAccountFlag:
replaceObjectAtIndex:withObject:
fetchMediaToken
ams_addCookies:
setBadgeNumber:withCompletionHandler:
_CFURLResponse
usesInterfaceType:
ams_automaticDownloadKinds
startMonitoring
ams_cookies
fetchStartDate
ams_cookiesForURL:
localTimeZone
ams_isLocalAccount
localeWithLocaleIdentifier:
initWithInputStream:queue:
isCancelled
ams_removeAllCookies
localizedStringForStatusCode:
valueForEntitlement:
fileExistsAtPath:
ams_removeCookiesMatchingProperties:
setBool:forKey:
initWithInt:
valueForHTTPHeaderField:
fileExistsAtPath:isDirectory:
ams_setAccountFlagValue:forAccountFlag:
initWithInteger:
valueForKey:
anonymousListener
fileProcessor
valueForKeyPath:
initWithInterval:queue:block:
fileSystemRepresentation
appendBytes:length:
valueForProperty:
fileURLWithPath:
appendData:
lowercaseString
valueWithBytes:objCType:
appendFormat:
fileURLWithPath:isDirectory:
requestHeaderFieldsWithCookies:
appendItem:
valueWithCGSize:
setCachePolicy:
postNotificationName:object:
requestInitialSyncStateForPairingIdentifier:completion:
valueWithError:
appendSection:
isConstrained
postNotificationName:object:userInfo:
appendString:
finishLoading
code
initWithKeyOptions:valueOptions:capacity:
postNotificationName:object:userInfo:deliverImmediately:
appleIDHeadersForRequest:
finishLoadingWithError:
setTXTRecordData:
initWithLength:
prefixedURI
requestStartDate
mainBundle
initWithListenerEndpoint:
mainRunLoop
isEnabledForDataclass:
makeStreamingContentKeyRequestDataForApp:contentIdentifier:options:completionHandler:
initWithLocaleIdentifier:
present
applicationState
finishWithResult:
mapTableWithKeyOptions:valueOptions:
isEqualToArray:
applicationStateForApplication:
setCanMakeAccountActive:
isEqualToData:
firstIndex
setLength:
initWithMachServiceName:
isEqualToDate:
setTimeoutIntervalForRequest:
compare:
setCancellable:
maxConcurrentOperationCount
setLenient:
initWithMachServiceName:options:
archivedDataWithRootObject:requiringSecureCoding:error:
isEqualToDictionary:
HTTPMethod
requestWithURL:
array
firstObject
completedUnitCount
setLocale:
isEqualToIndexSet:
setLocalizedName:
arrayWithCapacity:
setTotalUnitCount:
isEqualToNumber:
componentsJoinedByString:
weakObjectsHashTable
arrayWithObject:
componentsSeparatedByString:
weakToWeakObjectsMapTable
isEqualToString:
arrayWithObjects:
componentsWithString:
initWithName:bundleID:subsystem:reason:flags:
arrayWithObjects:count:
componentsWithURL:resolvingAgainstBaseURL:
streamingContentKeyRequestDataForApp:contentIdentifier:options:error:
setMaxConcurrentOperationCount:
whitespaceAndNewlineCharacterSet
initWithName:value:
isExpensive
string
whitespaceCharacterSet
processContentKeyRequestWithIdentifier:initializationData:options:
resolveWithTimeout:
setClasses:forSelector:argumentIndex:ofReply:
stringByAddingPercentEncodingWithAllowedCharacters:
willChangeValueForKey:
processContentKeyResponse:
connectEndDate
stringByAppendingFormat:
initWithObjects:
write:maxLength:
processContentKeyResponseError:
resourceFetchType
stringByAppendingPathComponent:
connectStartDate
writeData:withCode:
initWithObjectsAndKeys:
processData:
resourceLoader
assetDownloadTaskWithURLAsset:assetTitle:assetArtworkData:options:
stringByAppendingString:
writeData:withCompletion:
respondByRequestingPersistableContentKeyRequestAndReturnError:
stringByDeletingLastPathComponent
dictionary
writePropertyList:toStream:format:options:error:
initWithOutputStream:queue:
frozenBagValueWithKey:value:valueType:
respondWithData:
stringByPaddingToLength:withString:startingAtIndex:
writeSInt16:withCode:
setMultipathServiceType:
setUserNotificationExtensionId:
stringByReplacingCharactersInRange:withString:
writeSInt32:withCode:
processPurchasedItem:withAttributes:resultInfo:progressBlock:
initWithPattern:options:error:
stringByReplacingOccurrencesOfString:withString:
writeSInt64:withCode:
dictionaryForPosting
HTTPBody
getActiveContexts:
stringByTrimmingCharactersInSet:
writeSInt8:withCode:
dictionaryFromTXTRecordData:
attributesOfFileSystemForPath:error:
writeString:withCode:
initWithPrivacyIdentifier:
getAllDevicesWithArchivedAltAccountDevicesMatching:
setObject:forKey:
writeToFile:atomically:
setValue:forKey:
auditToken
responseEndDate
dictionaryWithCapacity:
setObject:forKeyedSubscript:
writeToURL:error:
aa_appleAccountsWithError:
connectionWithDataSource:messageCoder:
aa_isAccountClass:
writeToURL:options:error:
dictionaryWithDictionary:
stringFromDate:
writeUInt16:withCode:
aa_personID
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
writeUInt32:withCode:
aa_primaryAppleAccountWithCompletion:
initWithQueue:
stringValue
writeUInt64:withCode:
absoluteString
dictionaryWithObjectsAndKeys:
responseStartDate
authenticationMethod
stringWithCString:encoding:
setCompletedUnitCount:
minusSet:
writeUInt8:withCode:
progressWithTotalUnitCount:
isNSNumber__
_ignoreDidReceiveResponseDisposition
containsIndex:
_calculatedExpiration
didChangeValueForKey:
properties
isNSString__
stringWithFormat:
propertyForKey:
_incompleteTaskMetrics
containsObject:
stringWithString:
monitoredAccounts
setWithArray:
resultWithCompletion:
stringWithUTF8String:
containsValueForKey:
moveItemAtPath:toPath:error:
setWithCapacity:
resultWithError:
moveItemAtURL:toURL:error:
strongToStrongObjectsMapTable
propertyListWithData:options:format:error:
setWithObject:
msv_analyticSignature
strongToWeakObjectsMapTable
contentInformationRequest
protectionSpace
accountPropertyForKey:
setWithObjects:
getDataStatus:error:
msv_compactDescription
accountRegisteredURIs
setWithSet:
subarrayWithRange:
msv_compactMap:
contentKeyResponseWithFairPlayStreamingKeyResponseData:
accountType
msv_description
subdataWithRange:
setCookies:forURL:mainDocumentURL:
disarm
accountTypeWithAccountTypeIdentifier:error:
set_CTDataConnectionServiceType:
msv_errorWithDomain:code:debugDescription:
setCoordinationMediumDelegate:
contentKeySessionWithKeySystem:
accountTypeWithIdentifier:completion:
provisionPseudonymForURI:withProperties:completion:
discreteProgressWithTotalUnitCount:
isReusedConnection
set_allowsWCA:
backgroundSessionConfigurationWithIdentifier:
msv_errorWithDomain:code:underlyingError:debugDescription:
contentKeySpecifiersEligibleForPreloading
proxyWithObject:protocol:
set_alwaysPerformDefaultTrustEvaluation:
reverseEnumerateSectionsUsingBlock:
badgeNumber
msv_errorWithDomain:code:userInfo:debugDescription:
accounts
set_companionProxyPreference:
bagForProfile:profileVersion:
msv_filter:
accountsWithAccountType:options:completion:
pseudonymPropertiesWithFeatureID:scopeID:expiryDurationInSeconds:
set_ignoreDidReceiveResponseDisposition:
bagForProfile:profileVersion:processInfo:
msv_firstWhere:
domain
accountsWithAccountType:options:error:
set_prefersInfraWiFi:
getInputStream:outputStream:
msv_indexPathForItem:inSection:
subscriptions
domainLookupEndDate
acknowledgePrivacy
pseudonymURIMap
set_requiresPowerPluggedIn:
getInternetConnectionStateSync:
substringFromIndex:
msv_item
domainLookupStartDate
acknowledgementNeededForPrivacyIdentifier:
setProfile:
set_requiresSustainedDataDelivery:
substringToIndex:
msv_map:
setProfileVersion:
set_socketStreamProperties:
isSubclassOfClass:
revokePseudonym:completion:
substringWithRange:
bagSubProfile
msv_section
contentsOfDirectoryAtPath:error:
publishWithOptions:
set_sourceApplicationBundleIdentifier:
bagSubProfileVersion
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
msv_underlyingError
setProperty:forBodyKey:
sagaOnDiskDatabaseRevision
set_timingDataOptions:
setDateFormat:
set_tlsTrustPinningPolicyName:
bagValueWithKey:valueType:valuePromise:
supportsCapability:
cookiesForURL:
getMobileEquipmentInfoFor:error:
cookiesWithResponseHeaderFields:forURL:
setProxyAppBundleID:
downloadTaskWithRequest:
base64EncodedStringWithOptions:
getOperatorName:error:
copy
musicLibraryForUserAccount:
downloadTaskWithResumeData:
query
getPairedDevices
saveAccount:withDataclassActions:doVerify:completion:
mutableBytes
suspensionReasons
copyCarrierBundleValue:key:bundleType:error:
queryItemWithName:value:
isValid
getPhoneNumber:error:
mutableCopy
copyMobileSubscriberCountryCode:error:
copyMobileSubscriberNetworkCode:error:
setDelegate:queue:
copyRegistrationStatus:error:
activeDeviceSelectorBlock
syncLibraryID
earlierDate:
setQuery:
saveVerifiedAccount:error:
setQueryItems:
effectiveBoolValueForSetting:
saveVerifiedAccount:withCompletionHandler:
initWithService:
itemAtIndexPath:
scheduleInRunLoop:forMode:
initWithServiceName:
sharedConnection
countByEnumeratingWithState:objects:count:
scheme
countOfBytesReceived
encodeBool:forKey:
synchronousRemoteObjectProxyWithErrorHandler:
countOfBytesSent
encodeDouble:forKey:
sharedDefaultEvaluator
encodeInt32:forKey:
getSharedUserIdForHomeUserId:completion:
sharedHTTPCookieStorage
encodeInt64:forKey:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
encodeInteger:forKey:
sharedInstance
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
encodeObject:forKey:
searchForServicesOfType:inDomain:
createHeader:
raise:format:
setRemoteObjectInterface:
addChild:withPendingUnitCount:
encodeTCCIdentity:forKey:
secondsFromGMT
taskIdentifier
endContainerWithCode:
rangeOfCharacterFromSet:
addContentKeyRecipient:
secureConnectionStartDate
rangeOfCharacterFromSet:options:range:
null
rangeOfFirstMatchInString:options:range:
timeIntervalSince1970
jaliscoOnDiskDatabaseRevision
rangeOfString:
sharedMessageCenter
timeIntervalSinceDate:
credentialForTrust:
addEntriesFromDictionary:
rangeOfString:options:
timeIntervalSinceNow
number
rangeOfString:options:range:
keyForObject:
timeIntervalSinceReferenceDate
currentConnection
initWithStream:
setRequestCachePolicy:
addFinishBlock:
getUserDefaultVoiceSubscriptionContext:
setDidEncounterErrorBlock:
initWithString:
endpoint
timeZoneForSecondsFromGMT:
setDidFinishReadingBlock:
CGSizeValue
getValue:
indexOfObject:
numberOfItemsInSection:
setDidReadDataBlock:
timeZoneWithName:
initWithSuiteName:
addIndex:
buildWithError:
numberOfSections
indicator
addIndexes:
bundleForClass:
globalIndexForIndexPath:
numberWithBool:
currentHandler
infoDictionary
sendSMSWithText:text:serviceCenter:toAddress:
numberWithDouble:
setDouble:forKey:
initWithTask:metrics:
numberWithInt:
timeoutIntervalForRequest
setEnableAccountCreation:
currentQueue
initWithTimeIntervalSince1970:
bundleRecordForCurrentProcess
sender
numberWithInteger:
initWithAccount:options:bag:
lastIndex
bundleRecordWithBundleIdentifier:allowPlaceholder:error:
addObject:
init
_handlePhoneNumberDidChangeNotification:
_handleUserIdentityStoreDidChangeNotification:
_handleActiveAccountDidChangeNotification:
_handleSubscriptionStatusChangedDistributedNotification:
dealloc
sharedCache
T@"ICMusicSubscriptionStatusCache",R,N
_init
getCachedSubscriptionStatusResponseForRequestContext:completion:
setCachedSubscriptionStatusResponse:forRequestContext:completion:
setCachedSubscriptionStatusResponseNeedsReloadForAllRequestContextsWithCompletion:
setCachedSubscriptionStatusResponseNeedsReloadForRequestContext:completion:
updateBaseCacheKey
_getCacheKeyForRequestContext:completion:
_loadPersistedCacheWithCompletion:
_persistCachePostingGlobalNotification:
_postLocalChangeNotificationWithUserInfo:
_statusChangeUserInfoForUserIdentity:oldStatus:newStatus:
.cxx_destruct
_accessQueue
_calloutQueue
_persistenceQueue
_isPhoneNumberAccessRestricted
_baseCacheKey
_cachedSubscriptionStatusResponses
initWithConfiguration:
signatureDataWithURLRequest:
signatureStringWithURLRequest:
_configuration
storePlatformConfiguration
copyWithZone:
includeCookieWithName:
includeHeaderWithName:
includeQueryItemWithName:
_addRequestComponent:withName:
_enumerateComponentsUsingBlock:
signatureDataCookieName
setSignatureDataCookieName:
signatureDataHeaderName
setSignatureDataHeaderName:
_componentNames
_components
_signatureDataCookieName
_signatureDataHeaderName
T@"NSString",C,N,V_signatureDataCookieName
T@"NSString",C,N,V_signatureDataHeaderName
description
hasImpressionType
hasRecoAlgoId
dictionaryRepresentation
readFrom:
writeTo:
copyTo:
isEqual:
hash
mergeFrom:
impressionType
setImpressionType:
recoAlgoId
setRecoAlgoId:
_impressionType
_recoAlgoId
TB,R,N
T@"NSString",&,N,V_impressionType
T@"NSString",&,N,V_recoAlgoId
lock
unlock
lockWithBlock:
_lock
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithType:data:
initWithType:data:expirationDate:
expiresBeforeDate:
isExpired
data
type
expirationDate
_data
_type
_expirationDate
T@"NSData",R,C,N,V_data
Tq,R,N,V_type
T@"NSDate",R,C,N,V_expirationDate
expired
TB,R,N,GisExpired
_items
_position
_preferredPlayItemId
_queueContext
_radioSource
_revision
_has
initWithResponseDictionary:
keybagData
tokenData
_responseDictionary
T@"NSData",R,C,N
intValue
initWithStoreRequestContext:requestType:requestingOfflineSlot:
execute
_bagKeyForRequestType:
_storeRequestContext
_requestType
_requestingOfflineSlot
sharedSAPSessionWithVersion:URLBag:requestContext:
_initWithVersion:certificateURL:setupURL:requestContext:
signData:withCompletionHandler:
verifySignatureData:forData:withCompletionHandler:
_certificateURL
_setupURL
_sapContext
_setSAPContext:
_prepareFairPlayContextOperationQueue
_requestContext
sapVersion
_operationQueue
_sapVersion
T@"NSOperationQueue",R,N,V_prepareFairPlayContextOperationQueue
T@"ICFPSAPContext",&,N,S_setSAPContext:,V_sapContext
T@"NSURL",R,C,N,V_certificateURL
T@"ICStoreRequestContext",R,C,N,V_requestContext
T@"NSURL",R,C,N,V_setupURL
TI,R,N,V_sapVersion
_itemId
_reaction
_reactionId
initWithBlock:
copyWithBlock:
activeStoreAccountRequestContext
initWithIdentity:
initWithIdentity:clientInfo:
initWithIdentity:identityStore:clientInfo:
initWithIdentity:identityStore:clientInfo:authenticationProvider:
userAgent
setDelegatedIdentity:
setIdentity:
setIdentityStore:
setStoreDialogResponseHandler:
setAllowsExpiredBags:
setPersonalizationStyle:
_webkitUserAgentVersion
identity
delegatedIdentity
identityStore
storeDialogResponseHandler
allowsExpiredBags
personalizationStyle
_delegatedIdentity
_identity
_identityStore
_storeDialogResponseHandler
_personalizationStyle
_allowsExpiredBags
T@"ICUserIdentity",R,C,N,V_identity
T@"ICUserIdentity",R,C,N,V_delegatedIdentity
T@"ICUserIdentityStore",R,N,V_identityStore
T@"ICStoreDialogResponseHandler",R,C,N,V_storeDialogResponseHandler
TB,R,N,V_allowsExpiredBags
Tq,R,N,V_personalizationStyle
defaultOptionsWithServiceEndpoint:
defaultOptionsWithServiceName:
singleWriterOptionsWithDatabasePath:
databasePath
XPCServiceName
setDatabasePath:
isSingleWriter
setSingleWriter:
XPCEndpoint
setXPCEndpoint:
setXPCServiceName:
_databasePath
_listenerEndpoint
_serviceName
_singleWriter
T@"NSString",C,N,V_databasePath
singleWriter
TB,N,GisSingleWriter,V_singleWriter
T@"NSXPCListenerEndpoint",&,N,V_listenerEndpoint
T@"NSString",C,N,V_serviceName
_controlSettings
_queue
_detailMessage
_titleMessage
initWithRequestContext:
performRequestWithResponseHandler:
_finishWithExtendedSubscriptionStatusResponse:error:
requestContext
setRequestContext:
_response
T@"ICStoreRequestContext",C,N,V_requestContext
_settings
targetType
contentPagesType
presentationTriggersType
hasIdentifier
clearTargets
addTarget:
targetsCount
targetAtIndex:
messageType
setMessageType:
setHasMessageType:
hasMessageType
messageTypeAsString:
StringAsMessageType:
carousel
setCarousel:
setHasCarousel:
hasCarousel
setPriority:
setHasPriority:
hasPriority
hasTemplateURL
setMaximumDisplays:
setHasMaximumDisplays:
hasMaximumDisplays
setStartDate:
setHasStartDate:
hasStartDate
setEndDate:
setHasEndDate:
hasEndDate
hasCloseButton
setHasCloseButton:
setHasHasCloseButton:
hasHasCloseButton
clearContentPages
addContentPages:
contentPagesCount
contentPagesAtIndex:
hasRule
hasWebArchiveURL
modalPresentationStyle
setModalPresentationStyle:
setHasModalPresentationStyle:
hasModalPresentationStyle
modalPresentationStyleAsString:
StringAsModalPresentationStyle:
globalPresentationPolicyGroup
setGlobalPresentationPolicyGroup:
setHasGlobalPresentationPolicyGroup:
hasGlobalPresentationPolicyGroup
globalPresentationPolicyGroupAsString:
StringAsGlobalPresentationPolicyGroup:
assetPrefetchStrategy
setAssetPrefetchStrategy:
setHasAssetPrefetchStrategy:
hasAssetPrefetchStrategy
assetPrefetchStrategyAsString:
StringAsAssetPrefetchStrategy:
hasHoldoutEvent
hasLocalNotification
hasImpressionEvent
clearPresentationTriggers
addPresentationTriggers:
presentationTriggersCount
presentationTriggersAtIndex:
hasApplicationBadge
reportingEnabled
setReportingEnabled:
setHasReportingEnabled:
hasReportingEnabled
identifier
setIdentifier:
targets
setTargets:
priority
templateURL
setTemplateURL:
maximumDisplays
startDate
endDate
contentPages
setContentPages:
rule
setRule:
webArchiveURL
setWebArchiveURL:
holdoutEvent
setHoldoutEvent:
localNotification
setLocalNotification:
impressionEvent
setImpressionEvent:
presentationTriggers
setPresentationTriggers:
applicationBadge
setApplicationBadge:
_endDate
_startDate
_applicationBadge
_assetPrefetchStrategy
_contentPages
_globalPresentationPolicyGroup
_holdoutEvent
_identifier
_impressionEvent
_localNotification
_maximumDisplays
_messageType
_modalPresentationStyle
_presentationTriggers
_priority
_rule
_targets
_templateURL
_webArchiveURL
_carousel
_hasCloseButton
_reportingEnabled
T@"NSString",&,N,V_identifier
T@"NSMutableArray",&,N,V_targets
TB,N
Ti,N,V_messageType
TB,N,V_carousel
Ti,N,V_priority
T@"NSString",&,N,V_templateURL
Ti,N,V_maximumDisplays
Td,N,V_startDate
Td,N,V_endDate
TB,N,V_hasCloseButton
T@"NSMutableArray",&,N,V_contentPages
T@"ICIAMMessageRule",&,N,V_rule
T@"NSString",&,N,V_webArchiveURL
Ti,N,V_modalPresentationStyle
Ti,N,V_globalPresentationPolicyGroup
Ti,N,V_assetPrefetchStrategy
T@"ICIAMMetricEvent",&,N,V_holdoutEvent
T@"ICIAMLocalNotification",&,N,V_localNotification
T@"ICIAMMetricEvent",&,N,V_impressionEvent
T@"NSMutableArray",&,N,V_presentationTriggers
T@"ICIAMApplicationBadge",&,N,V_applicationBadge
TB,N,V_reportingEnabled
sharedAuthKitSession
T@"AKAppleIDSession",R,N
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
xpab
setXpab:
itfe
setItfe:
T@"NSString",C,N
isFrozen
setFrozen:
_frozen
_xpab
_itfe
T@"NSString",C,N,V_xpab
T@"NSString",C,N,V_itfe
frozen
TB,N,GisFrozen,V_frozen
rawContentDictionaryWithSubscriptionStatus:
artistName
contentType
matchDictionaryWithSubscriptionStatus:
setArtistName:
representativeCloudIdentifier
setRepresentativeCloudIdentifier:
storeIdentifier
setStoreIdentifier:
_artistName
_representativeCloudIdentifier
_storeIdentifier
T@"NSString",C,N,V_artistName
T@"NSNumber",C,N,V_representativeCloudIdentifier
T@"NSNumber",C,N,V_storeIdentifier
setupInitialSagaPoolingForConfiguration:
setupInitialJaliscoPoolingForConfiguration:
setPreferredVideoQuality:forConfiguration:completion:
isSagaAuthenticatedForConfiguration:completion:
updateJaliscoLibraryWithReason:forConfiguration:completion:
updateSagaLibraryWithReason:forConfiguration:completion:
authenticateForConfiguration:startInitialImport:enableCloudLibraryPolicy:isExplicitUserAction:completion:
deauthenticateForConfiguration:completion:
disableCloudLibraryWithReason:completion:
setCloudAddToPlaylistBehavior:forConfiguration:completion:
removeJaliscoLibraryForConfiguration:completion:
isMediaKindDisabledForJaliscoLibrary:configuration:completion:
loadIsUpdateInProgressForConfiguration:completion:
loadUpdateProgressForConfiguration:completion:
loadIsSagaUpdateInProgressForConfiguration:completion:
loadSagaUpdateProgressForConfiguration:completion:
loadIsJaliscoUpdateInProgressForConfiguration:completion:
loadJaliscoUpdateProgressForConfiguration:completion:
loadLastKnownEnableICMLErrorStatusForConfiguration:completion:
importItemArtworkForPurchaseHistoryID:configuration:completion:
importScreenshotForPurchaseHistoryID:configuration:completion:
importItemArtworkForSagaID:configuration:completion:
importScreenshotForSagaID:configuration:completion:
importContainerArtworkForSagaID:configuration:completion:
importSubscriptionItemArtworkForPersistentID:configuration:completion:
importSubscriptionScreenshotForPersistentID:configuration:completion:
importSubscriptionContainerArtworkForPersistentID:configuration:completion:
importArtistHeroImageForPersistentID:configuration:completion:
importAlbumArtistHeroImageForPersistentID:configuration:completion:
deprioritizeItemArtworkForPurchaseHistoryID:configuration:
deprioritizeScreenshotForPurchaseHistoryID:configuration:
deprioritizeItemArtworkForSagaID:configuration:
deprioritizeScreenshotForSagaID:configuration:
deprioritizeContainerArtworkForSagaID:configuration:
deprioritizeSubscriptionItemArtworkForPersistentID:configuration:
deprioritizeSubscriptionScreenshotForPersistentID:configuration:
deprioritizeSubscriptionContainerArtworkForPersistentID:configuration:
deprioritizeArtistHeroImageForPersistentID:configuration:
deprioritizeAlbumArtistHeroImageForPersistentID:configuration:
loadArtworkInfoForPurchaseHistoryIDs:configuration:completion:
loadScreenshotInfoForPurchaseHistoryIDs:configuration:completion:
loadArtworkInfoForSagaIDs:configuration:completion:
loadArtworkInfoForContainerSagaIDs:configuration:completion:
loadScreenshotInfoForSagaIDs:configuration:completion:
loadArtworkInfoForSubscriptionItemPersistentIDs:configuration:completion:
loadScreenshotInfoForSubscriptionPersistentIDs:configuration:completion:
loadArtworkInfoForSubscriptionContainerPersistentIDs:configuration:completion:
loadMissingArtworkForConfiguration:
loadGeniusItemsForSagaID:configuration:completion:
addGeniusPlaylistWithPersistentID:name:seedItemSagaIDs:itemSagaIDs:configuration:completion:
createPlaylistWithPersistentID:properties:trackList:configuration:completion:
sdk_createPlaylistWithPersistentID:properties:trackList:configuration:completion:
setPlaylistProperties:trackList:forPlaylistPersistentID:configuration:completion:
sdk_setPlaylistProperties:trackList:forPlaylistPersistentID:configuration:completion:
addStoreItemWithAdamID:referral:toPlaylistWithPersistentID:configuration:completion:
addItemWithSagaID:toPlaylistWithPersistentID:configuration:completion:
sdk_addStoreItemWithOpaqueID:toPlaylistWithPersistentID:configuration:completion:
sdk_addItemWithSagaID:toPlaylistWithPersistentID:configuration:completion:
publishPlaylistWithSagaID:configuration:completion:
removePlaylistsWithSagaIDs:configuration:completion:
uploadArtworkForPlaylistWithPersistentID:configuration:completion:
updateSubscribedPlaylistsWithSagaIDs:ignoreMinRefreshInterval:configuration:completion:
updatePinnedSubscribedPlaylistsWithConfiguration:completion:
addStoreItemWithAdamID:referral:configuration:completion:
sdk_addStoreItemWithOpaqueID:configuration:completion:
addStorePlaylistWithGlobalID:configuration:completion:
removeItemsWithSagaIDs:configuration:completion:
hideItemsWithPurchaseHistoryIDs:configuration:completion:
setItemProperties:forPurchaseHistoryID:configuration:completion:
setItemProperties:forSagaID:configuration:completion:
uploadCloudItemPropertiesForConfiguration:completion:
uploadCloudPlaylistPropertiesForConfiguration:completion:
setAlbumProperties:forAlbumPersistentID:configuration:completion:
updateArtistHeroImagesForConfiguration:
loadBooksForStoreIDs:configuration:completion:
refreshEnhancedAudioSharedKeys
fetchEnhancedAudioOfflineKeys
listCloudServerOperations
initWithListenerEndpointProvider:
xpcConnection
_xpcConnectionWithListenerEndpoint:
serialQueue
listenerEndpointProvider
_xpcConnection
_serialQueue
_listenerEndpointProvider
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
T@"<ICCloudServerListenerEndpointProviding>",R,W,N,V_listenerEndpointProvider
T@"NSXPCConnection",R,N,V_xpcConnection
_participantId
_externalId
_participantUUID
_storefront
_unreliablePlaybackSyncStatus
initWithAssetURL:
initWithFileAssetResponseDictionary:
responseDictionary
assetURL
downloadKey
fairPlayInfoList
fileExtension
flavorType
fileSize
metadata
protectionType
playbackAuthorizationToken
_metadataDictionary
setAssetURL:
setDownloadKey:
setFairPlayInfoList:
setFlavorType:
setFileExtension:
setFileSize:
setMetadata:
setMd5:
expectedProtectionType
setExpectedProtectionType:
_assetURL
_downloadKey
_fairPlayInfoList
_flavorType
_fileExtension
_fileSize
_metadata
_md5
_playbackAuthorizationToken
_expectedProtectionType
T@"NSURL",C,N,V_assetURL
T@"NSString",C,N,V_downloadKey
Tq,N,V_expectedProtectionType
T@"NSArray",C,N,V_fairPlayInfoList
Tq,N,V_flavorType
T@"NSString",C,N,V_fileExtension
TQ,N,V_fileSize
T@"ICStoreFinanceItemMetadata",C,N,V_metadata
T@"NSData",C,N,V_md5
T@"NSDictionary",R,C,N
Tq,R,N
T@"NSString",R,C,N,V_playbackAuthorizationToken
executeWithSAPContext:
finishWithSAPContextPreparationError:
setData:
responseHandler
setResponseHandler:
_responseHandler
T@"NSData",C,N,V_data
T@?,C,N,V_responseHandler
cancel
finishWithError:
initWithPlatformRequest:
initWithPlatformRequest:usingURLSession:
_enqueueDataRequest:
_executePersonalized
_executeUnpersonalized
_finishWithResponse:error:
_URLRequestWithBaseURL:
platformRequest
_activeURLRequest
_strongSelf
_urlSession
_platformRequest
T@"ICStorePlatformRequest",R,C,N,V_platformRequest
defaultOverrideHTTPHeaderFields
propertyListObjectWithPlayActivityEvent:
currentStoreFrontID
setCurrentStoreFrontID:
_currentStoreFrontID
T@"NSString",C,N,V_currentStoreFrontID
initWithMetadataDictionary:
itemAdamID
itemCloudID
itemName
itemSortName
artistSortName
artistID
playlistName
albumSortName
playlistArtistName
composerName
composerSortName
genre
genreID
albumID
discCount
discNumber
trackCount
trackNumber
duration
isExplicit
year
bitrate
comments
dateAdded
drmVersionNumber
isGapless
isMasteredForITunes
kind
sampleRate
versionRestrictions
isCompilation
copyright
rank
releaseDate
storefrontID
vendorID
metadataDictionary
playlistID
_playlistID
T@"NSDictionary",R,C,N,V_metadataDictionary
T@"NSNumber",R,C,N
T@"NSString",R,C,N
T@"NSNumber",R,C,N,V_playlistID
T@"NSDate",R,C,N
delegateAccountStoreDidChange
openWithCompletionHandler:
recreateWithCompletionHandler:
addDelegationUUIDs:forUserIdentity:completionHandler:
removeAllTokensWithCompletionHandler:
removeDelegationUUIDs:forUserIdentity:completionHandler:
removeIdentityPropertiesForUserIdentity:completionHandler:
removeTokenForUserIdentity:completionHandler:
removeTokensExpiringBeforeDate:completionHandler:
setIdentityProperties:forUserIdentity:completionHandler:
setToken:forUserIdentity:completionHandler:
integerValue
boolValue
doubleValue
initWithEligibilityDictionary:cellularProviderName:phoneNumber:
carrierBundlingStatusType
isFamilySubscription
error
SMSSessionIdentifier
delayInterval
wantsDelayedRetry
headerEnrichmentMessage
headerEnrichmentSessionIdentifier
headerEnrichmentURL
needsHeaderEnrichment
needsSilentSMS
silentSMSMessage
silentSMSNumber
cellularProviderName
phoneNumber
_familySubscription
_wantsDelayedRetry
_needsHeaderEnrichment
_needsSilentSMS
_carrierBundlingStatusType
_error
_SMSSessionIdentifier
_delayInterval
_headerEnrichmentMessage
_headerEnrichmentSessionIdentifier
_headerEnrichmentURL
_silentSMSMessage
_silentSMSNumber
_cellularProviderName
_phoneNumber
Tq,R,N,V_carrierBundlingStatusType
familySubscription
TB,R,N,GisFamilySubscription,V_familySubscription
T@"NSError",R,N,V_error
T@"NSString",R,N,V_SMSSessionIdentifier
Td,R,N,V_delayInterval
TB,R,N,V_wantsDelayedRetry
T@"NSString",R,N,V_headerEnrichmentMessage
T@"NSString",R,N,V_headerEnrichmentSessionIdentifier
T@"NSURL",R,N,V_headerEnrichmentURL
TB,R,N,V_needsHeaderEnrichment
TB,R,N,V_needsSilentSMS
T@"NSString",R,N,V_silentSMSMessage
T@"NSString",R,N,V_silentSMSNumber
T@"NSString",R,N,V_cellularProviderName
T@"NSString",R,N,V_phoneNumber
_bitDepth
_bitRate
_sampleRate
_channelLayoutDescription
_codec
_isSpatialized
mutableCopyWithZone:
initWithStationIdentifier:
propertyListRepresentation
tracks
stationIdentifier
numberOfSkips
currentTrack
_currentTrack
_numberOfSkips
_stationIdentifier
_tracks
T@"NSString",R,C,N,V_stationIdentifier
Tq,R,N,V_numberOfSkips
T@"NSArray",R,C,N
T@"ICRadioPlaybackHistoryItem",R,C,N,V_currentTrack
addTrack:
addTracks:
removeExpiredTracks
removeTracksAtIndexes:
replaceTrackAtIndex:withTrack:
setCurrentTrack:
setNumberOfSkips:
setTracks:
_checkCurrentTrackIsPresent
_updateTracksUsingBlock:
T@"ICRadioPlaybackHistoryItem",C,D,N
Tq,D,N
T@"NSArray",C,D,N
containerID
setContainerID:
initWithStoreIdentifier:
_containerID
T@"NSString",C,N,V_containerID
bindDouble:atPosition:
bindFloat:atPosition:
bindInt:atPosition:
bindInt64:atPosition:
bindNullAtPosition:
bindNumber:atPosition:
bindData:atPosition:
bindString:atPosition:
bindDataCopy:atPosition:
bindStringCopy:atPosition:
clearBindings
initWithStatement:connection:
columnIndexByName
finalizeStatement
isReadOnly
reset
step
connection
sqlite3_stmt
_connection
_statement
T@"ICSQLiteConnection",R,N,V_connection
T^{sqlite3_stmt=},R,N,V_statement
readOnly
TB,R,N,GisReadOnly
_userIdentityStoreDidChange:
defaultManager
T@"ICAgeVerificationManager",R,N
getAgeVerificationStateWithCompletion:
getAgeVerificationStateForUserIdentity:completion:
ageVerificationState
ageVerificationStateForUserIdentity:
_registerForNotifications
_updateAgeVerificationStateAndSendNotification:completion:
_updateAgeVerificationStateForUserIdentity:sendNotification:completion:
_runAgeVerificationForUserIdentity:completion:
_processAgeVerificationState:forDSID:
_bagHasValidKeys:
accessQueue
setAccessQueue:
calloutQueue
setCalloutQueue:
ageVerificationStateInternal
setAgeVerificationStateInternal:
_ageVerificationStateInternal
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_calloutQueue
T@"NSMutableDictionary",&,N,V_ageVerificationStateInternal
T@"ICAgeVerificationState",R,N
initWithDeveloperToken:userToken:userTokenFetchingError:
_descriptionOfToken:forDebugging:
_descriptionForDebugging:
developerToken
userToken
userTokenFetchingError
_developerToken
_userToken
_userTokenFetchingError
T@"NSString",R,C,N,V_developerToken
T@"NSString",R,C,N,V_userToken
T@"NSError",R,C,N,V_userTokenFetchingError
_handleICInAppMessagesDidChangeDistributedNotification:
allMessageEntriesWithCompletion:
messageEntriesForBundleIdentifiers:completion:
messageEntriesForBundleIdentifier:completion:
messageEntryWithIdentifier:bundleIdentifier:completion:
addMessageEntry:completion:
updateMessageEntry:completion:
removeMessageEntryWithIdentifier:forBundleIdentifier:completion:
removeAllMessageEntriesForBundleIdentifier:completion:
syncMessagesWithCompletion:
resetMessagesWithCompletion:
reportEventForMessageIdentifier:withParams:flushImmediately:completion:
flushEventsWithCompletion:
downloadResourcesForMessageWithIdentifier:bundleIdentifier:completion:
clearCachedResourcesForMessageWithIdentifier:bundleIdentifier:completion:
getMetadataForMessageIdentifier:bundleIdentifier:completion:
getAllMetadataForBundleIdentifiers:completion:
updateMetadata:messageIdentifier:bundleIdentifier:completion:
removeMetadataForMessageIdentifier:bundleIdentifier:completion:
getGlobalPropertyForKey:completion:
setGlobalProperty:forKey:completion:
getPropertyForKey:bundleIdentifier:completion:
setProperty:forKey:bundleIdentifier:completion:
removeApplicationBadgeForBundleIdentifier:fromPresentedMessageEntry:completion:
sharedManager
listener:shouldAcceptNewConnection:
environmentMonitorDidChangeNetworkReachability:
environmentMonitorDidChangeNetworkType:
environmentMonitorDidChangePower:
environmentMonitorDidChangeBatteryLevel:
environmentMonitorDidChangeTelephonyStatus:
environmentMonitorDidChangeThermalLevel:
T@"ICInAppMessageManager",R,N
initWithMessageStore:identityStore:
startSystemService
stopSystemService
addMessageEntryFromAMSDialogRequest:bundleIdentifier:completion:
reportEventForMessageIdentifier:withParams:completion:
getAllMetadataForBundleIdentifier:completion:
_xpcClientConnection
_schedulePeriodicUpdate
_performSyncWithCompletion:
_processSyncResponse:completion:
_addMessageEntry:completion:
_removeMessageEntryWithIdentifier:forBundleIdentifier:completion:
_removeAllMessageEntriesForBundleIdentifier:completion:
_performSyncRetryIfPending:
_updateShouldDownloadResources:onMessageWithIdentifier:bundleIdentifier:completion:
_checkForMessageResourcesNeedingDownloadForcingIfNecessary:
_downloadResourcesForMessageWithIdentifier:bundleIdentifier:completion:
_resourceCacheDirectoryPath
_loadConfigurationWithCompletion:
_performCacheConsistencyCheck
_privacyAcknowledgementRequired
_addConnection:
_removeConnection:
_unsafeMessageStore
_downloadOperationQueue
_callbackQueue
_messageStore
_isSystemService
_foregroundApplicationIdentifier
_privacyObserverToken
_xpcServiceListener
_xpcConnections
T@"ICInAppMessageStore",R,N,V_messageStore
networkingTimeFromMetrics:
initWithTransactionMetrics:request:
connectionStartTime
connectionEndTime
domainLookupStartTime
domainLookupEndTime
fetchStartTime
requestStartTime
responseStartTime
responseEndTime
secureConnectionStartTime
cachedResponse
connectionReused
appleTimingApp
connectionType
edgeNodeCacheStatus
environmentDataCenter
responseDate
statusCode
redirectCount
requestMessageSize
requestUrl
resolvedIPAddress
responseMessageSize
_cachedResponse
_connectionReused
_connectionStartTime
_connectionEndTime
_domainLookupStartTime
_domainLookupEndTime
_fetchStartTime
_requestStartTime
_responseStartTime
_responseEndTime
_secureConnectionStartTime
_appleTimingApp
_connectionType
_edgeNodeCacheStatus
_environmentDataCenter
_responseDate
_statusCode
_redirectCount
_requestMessageSize
_requestUrl
_resolvedIPAddress
_responseMessageSize
Td,R,N,V_connectionStartTime
Td,R,N,V_connectionEndTime
Td,R,N,V_domainLookupStartTime
Td,R,N,V_domainLookupEndTime
Td,R,N,V_fetchStartTime
Td,R,N,V_requestStartTime
Td,R,N,V_responseStartTime
Td,R,N,V_responseEndTime
Td,R,N,V_secureConnectionStartTime
TB,R,N,V_cachedResponse
TB,R,N,V_connectionReused
T@"NSString",R,N,V_appleTimingApp
T@"NSString",R,N,V_connectionType
T@"NSString",R,N,V_edgeNodeCacheStatus
T@"NSString",R,N,V_environmentDataCenter
T@"NSString",R,N,V_responseDate
TQ,R,N,V_statusCode
TQ,R,N,V_redirectCount
TQ,R,N,V_requestMessageSize
T@"NSString",R,N,V_requestUrl
T@"NSString",R,N,V_resolvedIPAddress
TQ,R,N,V_responseMessageSize
initWithRemoteRequestOperationResponse:remoteRequestOperationError:
remoteRequestOperationResponse
setRemoteRequestOperationResponse:
remoteRequestOperationError
setRemoteRequestOperationError:
_remoteRequestOperationResponse
_remoteRequestOperationError
T@"<NSSecureCoding>",&,N,V_remoteRequestOperationResponse
T@"NSError",&,N,V_remoteRequestOperationError
initWithRequestContext:redownloadParameters:
initWithRequestContext:subscriptionItemID:
_originatorId
_action
_addItems
_clientInfo
_currentItemChange
_currentItemTransition
_displayMessage
_moveItem
_originatorUUID
_participantChange
_playNowQueueItems
_playbackSync
_queueSync
_removeItem
_replaceQueueItems
_serverNotice
_displayNotice
_autoPlay
_radio
_trackGenerationSource
delegationConsumerNetService:didAcceptConnectionWithInputStream:outputStream:
netServiceWillPublish:
netServiceDidPublish:
netService:didNotPublish:
netServiceWillResolve:
netServiceDidResolveAddress:
netService:didNotResolve:
netServiceDidStop:
netService:didUpdateTXTRecordData:
netService:didAcceptConnectionWithInputStream:outputStream:
initWithUserIdentityDelegationAccountUUIDs:
securitySettings
publish
stop
_updateNetServiceStatus
delegate
setDelegate:
userIdentityDelegationAccountUUIDs
_didPublish
_isPublished
_netService
_netServiceQueue
_securitySettings
_delegate
_userIdentityDelegationAccountUUIDs
T@"<ICDelegationConsumerNetServiceDelegate>",W,N,V_delegate
T@"NSDictionary",R,C,N,V_userIdentityDelegationAccountUUIDs
T@"ICDelegationServiceSecuritySettings",R,N
_finishWithError:
_provisionSession
contentKeySession:didFinishProcessingKey:withResponse:error:
initWithRequestContext:storeMediaResponseItem:resumeData:
setValue:forHTTPHeaderField:
_sessionIdentifier
_createAVAssetDownloadOptionsDictionary
_mediaKindFromResponseItemMetadata:
destinationURL
setDestinationURL:
allowsCellularData
setAllowsCellularData:
allowsProxyCellularData
setAllowsProxyCellularData:
allowsCellularFallback
setAllowsCellularFallback:
allowDownloadOnConstrainedNetworks
setAllowDownloadOnConstrainedNetworks:
isDiscretionary
setDiscretionary:
requiresPower
setRequiresPower:
prefersHLSAsset
setPrefersHLSAsset:
resumeData
setResumeData:
minimumBitrate
setMinimumBitrate:
maximumSampleRate
setMaximumSampleRate:
prefersLossless
setPrefersLossless:
prefersMultichannel
setPrefersMultichannel:
_storeMediaResponseItem
_additionalHTTPHeaderFields
_downloadSession
_request
_contentKeySession
_keyDeliveryError
_allowsCellularData
_allowsProxyCellularData
_allowsCellularFallback
_allowDownloadOnConstrainedNetworks
_discretionary
_requiresPower
_prefersHLSAsset
_prefersLossless
_prefersMultichannel
_destinationURL
_resumeData
_minimumBitrate
_maximumSampleRate
T@"NSURL",C,N,V_destinationURL
TB,N,V_allowsCellularData
TB,N,V_allowsProxyCellularData
TB,N,V_allowsCellularFallback
TB,N,V_allowDownloadOnConstrainedNetworks
discretionary
TB,N,GisDiscretionary,V_discretionary
TB,N,V_requiresPower
TB,N,V_prefersHLSAsset
T@"NSData",C,N,V_resumeData
T@"NSNumber",C,N,V_minimumBitrate
T@"NSNumber",C,N,V_maximumSampleRate
TB,N,V_prefersLossless
TB,N,V_prefersMultichannel
sharedSessionManager
defaultSession
highPrioritySession
unlimitedHighPrioritySession
T@"ICURLSessionManager",R,N
T@"ICURLSession",R,N
sessionWithQualityOfService:
sessionWithIdentifier:creationBlock:
removeSessionWithIdentifier:
sessionWithIdentifier:
sessionWithIdentifier:configuration:
addSession:withIdentifier:
_defaultSessionWithQualityOfService:maxConcurrentRequests:
_defaultSessionIdentifierWithQualityOfService:maxConcurrentRequests:
_cachedSessions
ic_defaultSessionConfiguration
T@"NSURLSessionConfiguration",R
initWithMessageUserInfo:
userInfo
accountDSID
actionType
apsPayload
_userInfo
_accountDSID
_actionType
_apsPayload
T@"NSDictionary",R,C,N,V_userInfo
Tq,R,N,V_accountDSID
Tq,R,N,V_actionType
T@"NSDictionary",R,C,N,V_apsPayload
sagaServerRevision
sagaUpdatedSubscribedPlaylistIDs
jaliscoServerRevision
jaliscoChangedMediaTypes
clientIdentifier
moduleIdentifier
_insertPositionType
_mediaId
hasProperNetworkConditionsToPlayMedia
hasProperNetworkConditionsToShowCloudMedia
isCellularDataRestrictedForMusic
shouldProhibitMusicActionForCurrentNetworkConditions
isCellularDataRestrictedForVideos
shouldProhibitVideosActionForCurrentNetworkConditions
isCellularDataRestrictedForStoreApps
shouldProhibitStoreAppsActionForCurrentNetworkConditions
canShowCloudDownloadButtons
canShowCloudMusic
canShowCloudVideo
initWithUserIdentity:
performBlockAfterServerSetup:
configuration
setCloudAddToPlaylistBehavior:completionHandler:
createPlaylistWithPersistentID:properties:trackList:completionHandler:
sdk_createPlaylistWithPersistentID:properties:tracklist:completionHandler:
setPlaylistProperties:trackList:forPlaylistPersistentID:completionHandler:
sdk_setPlaylistProperties:trackList:forPlaylistPersistentID:completionHandler:
addStoreItemWithAdamID:referral:toPlaylistWithPersistentID:completionHandler:
addItemWithSagaID:toPlaylistWithPersistentID:completionHandler:
sdk_addStoreItemWithOpaqueID:toPlaylistWithPersistentID:completionHandler:
sdk_addItemWithSagaID:toPlaylistWithPersistentID:completionHandler:
publishPlaylistWithSagaID:completionHandler:
uploadArtworkForPlaylistWithPersistentID:completionHandler:
updateSubscribedPlaylistsWithSagaIDs:ignoreMinRefreshInterval:completionHandler:
updatePinnedSubscribedPlaylistsWithCompletion:
addStoreItemWithAdamID:referral:completionHandler:
sdk_addStoreItemWithOpaqueID:completionHandler:
addStorePlaylistWithGlobalID:completionHandler:
removePlaylistsWithSagaIDs:completionHandler:
removeItemsWithSagaIDs:completionHandler:
hideItemsWithPurchaseHistoryIDs:completionHandler:
addGeniusPlaylistWithPersistentID:name:seedItemSagaIDs:itemSagaIDs:completionHandler:
authenticateWithCompletionHandler:
authenticateAndStartInitialImport:completionHandler:
enableCloudLibraryWithPolicy:startInitialImport:completionHandler:
_enableCloudLibraryWithPolicy:startinitialImport:isExplicitUserAction:completionHandler:
disableCloudLibraryWithCompletionHandler:
disableCloudLibraryWithReason:completionHandler:
becomeActive
updateJaliscoLibraryWithReason:completionHandler:
removeJaliscoLibraryWithCompletionHander:
isMediaKindDisabledForJaliscoLibrary:
updateJaliscoLibraryWithCompletionHandler:
updateSagaLibraryWithCompletionHandler:
updateSagaLibraryWithReason:completionHandler:
deauthenticateWithCompletionHandler:
isAuthenticated
isAuthenticatedWithCompletionHandler:
isAuthenticatedWithQueue:completionHandler:
loadLastKnownEnableICMLErrorStatusWithCompletionHander:
importItemArtworkForPurchaseHistoryID:completionHandler:
importScreenshotForPurchaseHistoryID:completionHandler:
importItemArtworkForSagaID:completionHandler:
importScreenshotForSagaID:completionHandler:
importContainerArtworkForSagaID:completionHandler:
importSubscriptionItemArtworkForPersistentID:completionHandler:
importSubscriptionScreenshotForPersistentID:completionHandler:
importSubscriptionContainerArtworkForPersistentID:completionHandler:
importArtistHeroImageForPersistentID:completionHandler:
importAlbumArtistHeroImageForPersistentID:completionHandler:
deprioritizeItemArtworkForPurchaseHistoryID:
deprioritizeScreenshotForPurchaseHistoryID:
deprioritizeItemArtworkForSagaID:
deprioritizeScreenshotForSagaID:
deprioritizeContainerArtworkForSagaID:
deprioritizeSubscriptionItemArtworkForPersistentID:
deprioritizeSubscriptionScreenshotForPersistentID:
deprioritizeSubscriptionContainerArtworkForPersistentID:
deprioritizeArtistHeroImageForPersistentID:
deprioritizeAlbumArtistHeroImageForPersistentID:
loadArtworkInfoForPurchaseHistoryID:completionHandler:
loadArtworkInfoForPurchaseHistoryIDs:completionHandler:
loadScreenshotInfoForPurchaseHistoryID:completionHandler:
loadScreenshotInfoForPurchaseHistoryIDs:completionHandler:
loadArtworkInfoForSagaID:completionHandler:
loadArtworkInfoForSagaIDs:completionHandler:
loadArtworkInfoForContainerSagaID:completionHandler:
loadArtworkInfoForContainerSagaIDs:completionHandler:
loadScreenshotInfoForSagaID:completionHandler:
loadScreenshotInfoForSagaIDs:completionHandler:
loadArtworkInfoForSubscriptionItemPersistentID:completionHandler:
loadArtworkInfoForSubscriptionItemPersistentIDs:completionHandler:
loadScreenshotInfoForSubscriptionPersistentID:completionHandler:
loadScreenshotInfoForSubscriptionPersistentIDs:completionHandler:
loadArtworkInfoForSubscriptionContainerPersistentID:completionHandler:
loadArtworkInfoForSubscriptionContainerPersistentIDs:completionHandler:
loadMissingArtwork
loadGeniusItemsForSagaID:completionHandler:
loadIsUpdateInProgressWithCompletionHandler:
loadUpdateProgressWithCompletionHandler:
loadIsSagaUpdateInProgressWithCompletionHandler:
loadIsJaliscoUpdateInProgressWithCompletionHandler:
loadSagaUpdateProgressWithCompletionHandler:
loadJaliscoUpdateProgressWithCompletionHandler:
initialLibrarySyncsComplete
resetConfiguration:
resignActive
setDaemonConfiguration:
setPreferredVideoQuality:
setItemProperties:forPurchaseHistoryID:
setItemProperties:forSagaID:
uploadItemProperties
uploadCloudItemProperties
uploadCloudPlaylistProperties
setAlbumProperties:forAlbumPersistentID:completionHandler:
updateArtistHeroImages
loadBooksForStoreIDs:withCompletionHandler:
handleAutomaticDownloadPreferenceChangedForMediaKindMusic:withCompletionHandler:
isAutomaticDownloadsEnabledForMediaKindMusic
hasSetPreferenceForAutomaticDownloads
createMusicNotificationFromAMSDialogRequest:error:
notifyDeviceSetupFinishedWithCompletion:
isCellularDataRestricted
shouldProhibitActionsForCurrentNetworkConditions
isActive
setActive:
_setupNotifications
_tearDownNotifications
_serverSetupDidComplete
_serverSagaUpdateInProgressDidChange
_serverJaliscoUpdateInProgressDidChange
_isAuthenticated
updateSagaInProgressChangedHandler
setUpdateSagaInProgressChangedHandler:
updateJaliscoInProgressChangedHandler
setUpdateJaliscoInProgressChangedHandler:
serialAccessQueue
serverSetupBlockQueue
preferredVideoQuality
availabilityService
cloudService
pendingServerSetupCompleteBlocks
setPendingServerSetupCompleteBlocks:
serverIsSetup
setServerIsSetup:
_active
_serverIsSetup
_updateSagaInProgressChangedHandler
_updateJaliscoInProgressChangedHandler
_serialAccessQueue
_serverSetupBlockQueue
_preferredVideoQuality
_availabilityService
_cloudService
_pendingServerSetupCompleteBlocks
T@"NSObject<OS_dispatch_queue>",R,N,V_serialAccessQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_serverSetupBlockQueue
T@"NSXPCConnection",R,N
Tq,N,V_preferredVideoQuality
active
TB,N,GisActive,V_active
T@"ICCloudClientAvailabilityService",R,N,V_availabilityService
T@"ICCloudClientCloudService",R,N,V_cloudService
T@"ICCloudServerListenerEndpointProvider",R,N,V_listenerEndpointProvider
T@"NSMutableArray",&,N,V_pendingServerSetupCompleteBlocks
TB,N,V_serverIsSetup
T@"ICConnectionConfiguration",R,N,V_configuration
T@?,C,N,V_updateSagaInProgressChangedHandler
T@?,C,N,V_updateJaliscoInProgressChangedHandler
initWithStartHandler:
cancellationHandler
setCancellationHandler:
startHandler
_cancellationHandler
_startHandler
T@?,R,C,N,V_startHandler
T@?,C,N
sharedRemoteRequestOperationController
T@"ICRemoteRequestOperationController",R,N
performRemoteRequestOperationWithExecutionContext:completionHandler:
_cancelClientConnectionInvalidationTimer
_didEndExecutingRemoteRequestOperation
_invalidateClientConnection
_clientConnection
_clientConnectionInvalidationTimerDidExpire
_scheduleInvalidationOfClientConnection
_willBeginExecutingRemoteRequestOperation
_numberOfActiveRequests
_clientConnectionInvalidationTimer
fetchDeveloperTokenForClientInfo:completionHandler:
invalidateCachedDeveloperTokenForClientInfo:completionHandler:
initWithItemResponseDictionary:urlBag:
storeAdamID
artworkURL
cancelDownloadURL
downloadIdentifier
isPurchasedRedownload
purchaseDate
redownloadParameters
suzeLeaseID
fileAssets
hlsAsset
downloadableAsset
downloadableAssetMatchingFlavorType:
assetExpirationDate
setAssetExpirationDate:
_itemResponseDictionary
_urlBag
_assetExpirationDate
T@"NSDate",C,N,V_assetExpirationDate
T@"NSURL",R,C,N
T@"ICStoreFinanceItemMetadata",R,C,N
T@"ICStoreHLSAssetInfo",R,C,N
T@,R,N
performWithResponseHandler:
storeAdamIDs
setStoreAdamIDs:
storeRequestContext
setStoreRequestContext:
timedMetadataData
setTimedMetadataData:
qualityOfService
setQualityOfService:
_storeAdamIDs
_timedMetadataData
_qualityOfService
T@"NSArray",C,N,V_storeAdamIDs
T@"ICStoreRequestContext",C,N,V_storeRequestContext
T@"NSData",C,N,V_timedMetadataData
Tq,N,V_qualityOfService
initWithServerConfiguration:
allowedKinds
allowedMatchStatus
restoreURL
shouldGZip
_shouldGZip
_allowedKinds
_allowedMatchStatus
_restoreURL
T@"NSArray",R,C,N,V_allowedKinds
T@"NSArray",R,C,N,V_allowedMatchStatus
T@"NSURL",R,C,N,V_restoreURL
TB,R,N,V_shouldGZip
activeAccountDidChange
capabilitiesDidChange:
storefrontCountryCodeDidChange:
storefrontIdentifierDidChange:
beginObservingCloudServiceStatusWithCompletionHandler:
endObservingCloudServiceStatusWithToken:completionHandler:
requestCapabilitiesWithPrivacyPromptPolicy:completionHandler:
requestStorefrontCountryCodeWithCompletionHandler:
requestStorefrontIdentifierWithCompletionHandler:
requestDeveloperTokenWithOptions:clientInfo:completionHandler:
requestUserTokenForDeveloperToken:options:clientInfo:completionHandler:
requestMusicKitTokensWithOptions:clientInfo:completionHandler:
clientInterface
serviceInterface
_initWithExtendedSubscriptionStatusResponse:
lightweightSubscriptionStatus
_lightweightSubscriptionStatus
T@"ICLightweightMusicSubscriptionStatus",R,C,N,V_lightweightSubscriptionStatus
initWithResultCode:
resultCode
serverHostName
serverInstance
isSuccess
setSuccess:
tokenResult
_success
_resultCode
_serverHostName
_serverInstance
_tokenResult
Ti,R,N,V_resultCode
T@"NSString",R,C,N,V_serverHostName
Tq,R,N,V_serverInstance
success
TB,N,GisSuccess,V_success
T@"ICLibraryAuthServiceClientTokenResult",R,C,N,V_tokenResult
token
generatedAtMillis
timeToLiveMillis
lifespanMillis
tokenIdentitifer
_token
_generatedAtMillis
_timeToLiveMillis
_lifespanMillis
_tokenIdentitifer
T@"NSString",R,C,N,V_token
Tq,R,N,V_generatedAtMillis
Tq,R,N,V_timeToLiveMillis
Tq,R,N,V_lifespanMillis
T@"ICLibraryAuthServiceClientTokenIdentifier",R,C,N,V_tokenIdentitifer
DSID
deviceGUID
_DSID
_deviceGUID
T@"NSNumber",R,C,N,V_DSID
T@"NSString",R,C,N,V_deviceGUID
activeAccount
activeLockerAccount
autoupdatingActiveAccount
autoupdatingActiveLockerAccount
carrierBundleWithDeviceIdentifier:
nullIdentity
specificAccountWithDSID:
deviceIdentifier
identityAllowingDelegation:
identityAllowingEstablishment:
_setResolvedDSID:
isEqualToIdentity:inStore:
hashInStore:
_ensureResolvedDSIDUsingSpecificIdentityStore:
_performEncodingTaskUsingSpecificIdentityStore:encodingHandler:
_isComparableUsingResolvedDSID
_resolvedDSIDUsingSpecificIdentityStore:
allowsDelegation
allowsAccountEstablishment
hasResolvedDSID
creationTime
_deviceIdentifier
_isEncodingUsingSpecificIdentityStore
_allowsDelegation
_allowsAccountEstablishment
_hasResolvedDSID
_creationTime
TB,R,N,V_hasResolvedDSID
TQ,R,N,V_creationTime
TB,R,N,V_allowsDelegation
TB,R,N,V_allowsAccountEstablishment
TQ,R,N
ic_encodeUserIdentity:withStore:forKey:
ic_archivedDataWithRootUserIdentity:inStore:requiringSecureCoding:error:
codecString
_copyWithClass:zone:
bitRate
bitDepth
channelLayoutDescription
codec
isSpatialized
_spatialized
Tq,R,N,V_bitRate
Tq,R,N,V_bitDepth
T@"NSString",R,N,V_channelLayoutDescription
TI,R,N,V_codec
T@"NSString",R,N
Tq,R,N,V_sampleRate
spatialized
TB,R,N,GisSpatialized,V_spatialized
setBitRate:
setBitDepth:
setChannelLayoutDescription:
setCodec:
setSampleRate:
setSpatialized:
T@"NSString",D,N
TI,D,N
TB,D,N,GisSpatialized
initWithStoreRequestContext:
sharedBagProvider
T@"ICURLBagProvider",R,N
getBagForRequestContext:withCompletionHandler:
getBagForRequestContext:forceRefetch:withCompletionHandler:
invalidateCache
_getCacheKeyForRequestContext:
_fetchBagForRequestContext:withCompletionHandler:
_shouldUseLegacyProtocolForRequestContext:
_loadCache
_saveCache
_cacheFilePath
_amsProcessInfoFromRequestContext:
_cache
_pendingOperationsForCacheKey
_cacheKeysScheduledForRefresh
_queueQuery
isValidSubscriptionStatusPropertyListRepresentation:error:
isValidSubscriptionStatusResponseDictionary:error:
initWithPropertyListRepresentation:
initWithResponseDictionary:expirationDate:
subscriptionStatus
setSubscriptionStatus:
isFinalResponse
setFinalResponse:
needsReload
setNeedsReload:
_finalResponse
_needsReload
_subscriptionStatus
finalResponse
TB,N,GisFinalResponse,V_finalResponse
TB,N,V_needsReload
T@"ICMusicSubscriptionStatus",C,N,V_subscriptionStatus
_removeType
_removedItemIds
initWithStoreRequestContext:accountDSIDs:
_accountDSIDs
initWithRequestContext:storeSubscriptionAdamID:
assetSourceStorefrontID
setAssetSourceStorefrontID:
storeSubscriptionAdamID
_assetSourceStorefrontID
_storeSubscriptionAdamID
T@"NSString",C,N,V_assetSourceStorefrontID
Tq,R,N,V_storeSubscriptionAdamID
getResponseForFinishDelegationRequest:withSessionIDToRequestInfoMap:completionHandler:
getResponseForStartDelegationRequest:requestContext:withCompletionHandler:
initWithBagKey:bagValueType:
bagKey
bagValueType
_bagKey
_bagValueType
T@"NSString",R,C,N,V_bagKey
TQ,R,N,V_bagValueType
start
isDelegatedPlayback
setDelegatedPlayback:
requestType
setRequestType:
willBeginExecutionHandler
setWillBeginExecutionHandler:
storeCloudID
setStoreCloudID:
setStoreSubscriptionAdamID:
storePurchasedAdamID
setStorePurchasedAdamID:
cloudUniversalLibraryID
setCloudUniversalLibraryID:
isFollowUp
setFollowUp:
setPlaybackAuthorizationToken:
_delegatedPlayback
_followUp
_willBeginExecutionHandler
_storeCloudID
_storePurchasedAdamID
_cloudUniversalLibraryID
delegatedPlayback
TB,N,GisDelegatedPlayback,V_delegatedPlayback
Tq,N,V_requestType
T@?,C,N,V_willBeginExecutionHandler
TQ,N,V_storeCloudID
Tq,N,V_storeSubscriptionAdamID
Tq,N,V_storePurchasedAdamID
T@"NSString",C,N,V_cloudUniversalLibraryID
followUp
TB,N,GisFollowUp,V_followUp
T@"NSString",C,N,V_playbackAuthorizationToken
longLongValue
fileAssetWithFlavorType:
previewDuration
previewURL
size
Td,R,N
shouldSignBody
setShouldSignBody:
fields
setFields:
headers
setHeaders:
_shouldSignBody
_fields
_headers
TB,N,V_shouldSignBody
T@"NSArray",C,N,V_fields
T@"NSArray",C,N,V_headers
_expirationTimeInterval
_sessionID
_storefrontIdentifier
openWithOptions:completionHandler:
connectionNeedsResetForCorruption:
_initWithValidatedOptions:
initSingleWriterWithOptions:error:
close
readUsingBlock:
_openWithXPCWriter:completionHandler:
_popConnection
_postDidChangeNotification
_recycleConnection:
_resetCorruptionUsingSQL
_resetCorruptionUsingXPC
_writeSQLUsingBlock:
_writeUsingBlock:
_writeXPCUsingBlock:
_connectionPool
_isOpen
_options
_xpcWriter
getUserStatesForcingRefresh:withReply:
applyServerStateUpdatedWithUserStates:
shared
T@"ICMediaUserStateCenter",R,N
allUserStates
activeUserState
refreshUserStatesWithCompletion:
_establishClientConnection
_getUserStatesForcingRefresh:
_onAsyncServer:
_onSyncServer:
setAllUserStates:
_allUserStates
T@"NSArray",C,N,V_allUserStates
T@"ICMediaUserState",R,N
storageSpaceAvailable
cachingEnabled
ensureStorageIsAvailable:withCompletionHandler:
_sharedSessionToken
identityProperties
setIdentityProperties:
iCloudIdentityProperties
setICloudIdentityProperties:
_identityProperties
_iCloudIdentityProperties
T@"ICUserIdentityProperties",C,N,V_identityProperties
T@"ICUserIdentityProperties",C,N,V_iCloudIdentityProperties
isAsynchronous
isConcurrent
isExecuting
isFinished
finish
enqueueChildOperation:
_execute
_asyncOperationLock
_childOperationQueue
_qualityOfServiceForChildOperationQueue
_isExecuting
_isFinished
T@"NSError",R,C,N,V_error
leaseSyncSessionWithID:accountID:mediaKind:returningLeaseSyncRequestData:error:
endLeaseSyncAndReturnError:
getLeaseSyncRenewRequestData:error:
importLeaseSyncResponseData:error:
processRenewResponseData:error:
accountID
leaseID
mediaKind
_mediaKind
_accountID
_leaseID
TQ,R,N,V_accountID
T@,R,N,V_leaseID
TI,R,N,V_mediaKind
performWithCompletion:
deviceBecameActive:
nanoPairedDeviceStatusMonitorPairedDeviceChanged:
nanoPairedDeviceStatusMonitorNewActiveDevice:
nanoPairedDeviceStatusMonitor:didFinishInitialSyncForPairingIdentifier:
sharedMonitor
initialSyncStateObserver:initialSyncDidCompleteForPairingIdentifier:
initialSyncStateObserver:syncDidResetForPairingIdentifier:
initialSyncStateObserver:syncDidCompleteForPairingIdentifier:
initialSyncStateObserverClientCanRetryFailedRequests:
T@"ICNanoPairedDeviceStatusMonitor",R,N
addObserver:
removeObserver:
activePairedDevicePairingID
pairedDevicePairingID
allPairedDevicePairingIDs
allPairedDeviceGUIDs
pairedDeviceGUID
pairedDeviceMediaGUID
isInitialSyncComplete
isMediaSyncingSupported
_allObservers
_activePairedDevice
_handlePairedDeviceChangedNotification
_callBackQueue
_observers
_pairingIDPropertyName
_pairedDeviceGUID
_pairedDeviceMediaGUID
_initialSyncStateObserver
T@"NSUUID",R,C,N
mediaSyncingSupported
TB,R,N,GisMediaSyncingSupported
tokenResults
tokenResultForAccountDSID:
_parsedTokenResults
_userIdentityStoreDidChangeNotification:
_netServiceDelegationAccountUUIDsDidChangeNotification:
sharedService
systemServiceWithRequestContext:
delegationProviderServiceAddAssertion:
delegationProviderServiceRemoveAssertion:
delegationProviderServiceSession:didFinishWithError:
netServiceBrowserWillSearch:
netServiceBrowserDidStopSearch:
netServiceBrowser:didNotSearch:
netServiceBrowser:didFindDomain:moreComing:
netServiceBrowser:didFindService:moreComing:
netServiceBrowser:didRemoveDomain:moreComing:
netServiceBrowser:didRemoveService:moreComing:
T@"ICDelegationProviderService",R,N
addAssertion:
removeAssertion:
startSystemXPCService
_registerNotificationsForDelegationNetService:
_unregisterNotificationsForDelegationNetService:
_updateAssertionTimeouts
_updateBrowsingStatus
_updateDelegationForDiscoveredServices
_updateSupportedDelegationAccountUUIDs
_activeServiceSessions
_connections
_connectionToAssertions
_assertions
_assertionTimeoutSource
_discoveredServices
_isNetServiceBrowserSearching
_listener
_netServiceBrowser
_netServiceBrowserQueue
_identityStoreOperationQueue
_supportedDelegationAccountUUIDToUserIdentity
T@"ICRequestContext",R,C,N,V_requestContext
accountWasAdded:
accountWasModified:
accountWasRemoved:
accountCredentialChanged:
activeAccountDSIDWithError:
updateActiveAccountDSID:error:
activeLockerAccountDSIDWithError:
updateActiveLockerAccountDSID:error:
disableLockerAccountDSID:error:
allStoreAccountDSIDsWithError:
allManageableStoreAccountDSIDsWithError:
identityPropertiesForDSID:error:
identityPropertiesForPrimaryICloudAccountWithError:
removeIdentityForDSID:completion:
replaceIdentityProperties:forDSID:error:
setIdentityProperties:forDSID:error:
localStoreAccountPropertiesWithError:
setLocalStoreAccountProperties:error:
synchronize
verificationContextForDSID:error:
verificationContextForAccountEstablishmentWithError:
T@"<ICUserIdentityStoreBackendDelegate>",W,N
allStoreAccountsWithError:
localStoreAccountWithError:
storeAccountForDSID:error:
_postAccountsChangeNotification
_applyIdentityProperties:toAccount:
_applyLocalStoreAccountProperties:toAccount:
_registerAndLoadAccountsIfNecessary
_allStoreAccountsWithError:
_primaryAppleAccountWithError:
_activeStoreAccountWithError:
_storeAccountForDSID:error:
_newLocalStoreAccountPropertiesFromAccount:
_userIdentityPropertiesForAccount:
_newUserIdentityPropertiesForAccount:
_synchronize
_accountStore
_identityPropertiesCache
_allStoreAccountsByDSID
_primaryICloudAccount
_activeAccountDSID
_accountStoreDelegateQueue
T@"<ICUserIdentityStoreBackendDelegate>",W,N,V_delegate
alternateDSID
carrierBundleDeviceIdentifier
firstName
iCloudPersonID
lastName
storefrontIdentifier
username
ageVerificationExpirationDate
mergeToCloudLibraryPreference
cloudLibraryStateReason
homeUserIdentifiers
privateListeningEnabledForHomeUsers
privacyAcknowledgementVersions
isEqualToIdentityProperties:
delegateToken
isActiveLocker
isManagedAppleID
isSandboxed
isSubscriptionStatusEnabled
privateListeningEnabled
isCloudBackupEnabled
setCloudBackupEnabled:
isDelegated
setICloudPersonID:
setHomeUserIdentifiers:
setPrivateListeningEnabledForHomeUsers:
_alternateDSID
_carrierBundleDeviceIdentifier
_cloudBackupEnabled
_delegated
_delegateToken
_dsid
_firstName
_iCloudPersonID
_lastName
_managedAppleID
_sandboxed
_subscriptionStatusEnabled
_username
_ageVerificationExpirationDate
_mergeToCloudLibraryPreference
_homeUserIdentifiers
_cloudLibraryStateReason
_privateListeningEnabled
_activeLocker
_privateListeningEnabledForHomeUsers
_privacyAcknowledgementVersions
cloudBackupEnabled
TB,N,GisCloudBackupEnabled,V_cloudBackupEnabled
T@"NSString",C,N,SsetICloudPersonID:,V_iCloudPersonID
T@"NSArray",C,N,V_homeUserIdentifiers
T@"NSDictionary",C,N,V_privateListeningEnabledForHomeUsers
T@"NSNumber",R,C,N,V_dsid
managedAppleID
TB,R,N,GisManagedAppleID,V_managedAppleID
sandboxed
TB,R,N,GisSandboxed,V_sandboxed
subscriptionStatusEnabled
TB,R,N,GisSubscriptionStatusEnabled,V_subscriptionStatusEnabled
T@"NSNumber",R,C,N,V_privateListeningEnabled
activeLocker
TB,R,N,GisActiveLocker,V_activeLocker
TB,R,N,GisActive,V_active
delegated
TB,R,N,GisDelegated,V_delegated
T@"ICDelegateToken",R,C,N,V_delegateToken
replaceValuesWithValuesFromProperties:
setAlternateDSID:
setCarrierBundleDeviceIdentifier:
setDelegated:
setDelegateToken:
setDSID:
setFirstName:
setLastName:
setManagedAppleID:
setSandboxed:
setStorefrontIdentifier:
setSubscriptionStatusEnabled:
setUsername:
setAgeVerificationExpirationDate:
setMergeToCloudLibraryPreference:
setCloudLibraryStateReason:
setPrivateListeningEnabled:
setPrivacyAcknowledgementVersions:
T@"NSString",C,D,N
TB,D,N,GisDelegated
T@"ICDelegateToken",C,D,N
T@"NSNumber",C,D,N
TB,D,N,GisManagedAppleID
TB,D,N,GisSandboxed
TB,D,N,GisSubscriptionStatusEnabled
T@"NSDate",C,D,N
T@"NSDictionary",C,D,N
setActiveLocker:
TB,D,N,GisActiveLocker
TB,D,N,GisActive
setHasDSID:
hasDSID
hasDeviceID
dSID
deviceID
setDeviceID:
_dSID
_deviceID
Tq,N,V_dSID
T@"NSString",&,N,V_deviceID
sharedArchive
T@"ICHTTPArchive",R,N
archiveRequest:withResponse:responseData:
flush
_onQueueFlush
_archiveCreator
_archiveForRequest:
_archiveForResponse:responseData:
_arrayFromHeaderDictionary:
_loadExistingArchivePaths
_pruneOldArchives
_loggedEvents
_flushTimer
_currentArchiveFileName
_dateFormatter
_creatorDictionary
_archiveDirectoryPath
_archiveFilePaths
_hasValidArchiveDirectory
_description
setDeveloperTokenProvider:
setPersonalizationMethod:
setCollectionPlaybackAuthorizationToken:
_storeRequestPersonalizationStyle
developerTokenProvider
personalizationMethod
collectionPlaybackAuthorizationToken
_developerTokenProvider
_personalizationMethod
_collectionPlaybackAuthorizationToken
_cachedDescription
T@"<ICDeveloperTokenProvider>",R,N,V_developerTokenProvider
Tq,R,N,V_personalizationMethod
T@"NSString",R,C,N,V_collectionPlaybackAuthorizationToken
configurationFromSourceConfiguration:userIdentity:
initWithUserIdentity:userIdentityStore:
initWithUserIdentity:userIdentityStore:clientIdentity:
userIdentity
setUserIdentity:
userIdentityStore
clientIdentity
baseURL
setBaseURL:
libraryBagKey
setLibraryBagKey:
buildIdentifier
setBuildIdentifier:
purchaseClientIdentifier
setPurchaseClientIdentifier:
requestReason
setRequestReason:
familyMemberStoreID
setFamilyMemberStoreID:
_userIdentity
_userIdentityStore
_clientIdentity
_baseURL
_libraryBagKey
_buildIdentifier
_purchaseClientIdentifier
_requestReason
_familyMemberStoreID
T@"ICUserIdentity",C,N,V_userIdentity
T@"ICUserIdentityStore",R,N,V_userIdentityStore
T@"NSObject<OS_tcc_identity>",R,N,V_clientIdentity
T@"NSURL",C,N,V_baseURL
T@"NSString",C,N,V_libraryBagKey
T@"NSString",C,N,V_buildIdentifier
T@"NSString",C,N,V_purchaseClientIdentifier
Tq,N,V_requestReason
T@"NSNumber",C,N,V_familyMemberStoreID
initWithRequestContext:seedItemID:isLibraryID:maxResultCount:
_seedItemID
_isLibraryID
_maxResultCount
_resultsList
_command
_playbackControlSettings
_previousItemId
_transitionItemId
contextWithACAccount:accountStore:
interactionLevel
setInteractionLevel:
debugReason
setDebugReason:
ACAccount
setACAccount:
ACAccountStore
setACAccountStore:
verificationStyle
setVerificationStyle:
_interactionLevel
_debugReason
_ACAccount
_ACAccountStore
_verificationStyle
T@"ACAccount",&,N,V_ACAccount
T@"ACAccountStore",&,N,V_ACAccountStore
T@"ICUserIdentityStore",&,N,V_identityStore
Tq,N,V_verificationStyle
Tq,N,V_interactionLevel
T@"NSString",C,N,V_debugReason
shouldPlaybackRequireOnlineKeys
setShouldPlaybackRequireOnlineKeys:
hasOnlinePlaybackKeys
setHasOnlinePlaybackKeys:
hasOfflinePlaybackKeys
setHasOfflinePlaybackKeys:
hasPendingLeaseAcquisition
setHasPendingLeaseAcquisition:
hasInflightLeaseAcquisition
setHasInflightLeaseAcquisition:
isTakenDueToLeasePrevention
setTakenDueToLeasePrevention:
leaseState
setLeaseState:
stateReasonDialog
setStateReasonDialog:
stateReasonDialogMetricsDictionary
setStateReasonDialogMetricsDictionary:
_shouldPlaybackRequireOnlineKeys
_hasOnlinePlaybackKeys
_hasOfflinePlaybackKeys
_hasPendingLeaseAcquisition
_hasInflightLeaseAcquisition
_takenDueToLeasePrevention
_leaseState
_stateReasonDialog
_stateReasonDialogMetricsDictionary
TB,N,V_hasOnlinePlaybackKeys
TB,N,V_hasOfflinePlaybackKeys
TB,N,V_hasPendingLeaseAcquisition
TB,N,V_hasInflightLeaseAcquisition
takenDueToLeasePrevention
TB,N,GisTakenDueToLeasePrevention,V_takenDueToLeasePrevention
TB,N,V_shouldPlaybackRequireOnlineKeys
Tq,N,V_leaseState
T@"ICStoreDialogResponse",C,N,V_stateReasonDialog
T@"NSDictionary",C,N,V_stateReasonDialogMetricsDictionary
initWithRequestContext:token:
initWithRequestContext:storeItemID:affiliateIdentifier:
_storeItemID
_affiliateIdentifier
_currentItemId
_initialAVSyncStartItemId
_participantStates
_transportControlStates
_initialAVSyncInitiator
lastUpdatedDate
setTokenResult:
lastError
setLastError:
lastUpdateAttemptTime
setLastUpdateAttemptTime:
shouldExcludeFromBackgroundRefresh
setShouldExcludeFromBackgroundRefresh:
_shouldExcludeFromBackgroundRefresh
_lastError
_lastUpdateAttemptTime
T@"ICLibraryAuthServiceClientTokenResult",C,N,V_tokenResult
T@"NSError",C,N,V_lastError
Td,N,V_lastUpdateAttemptTime
TB,N,V_shouldExcludeFromBackgroundRefresh
imageProfile
itemIdentifiers
keyProfile
platformIdentifier
protocolVersion
setBatchSize:
copyWithItemIdentifiersInRange:
HTTPHeaders
queryItems
setClientIdentifier:
clientBundleIdentifier
setClientBundleIdentifier:
clientBundleVersion
setClientBundleVersion:
setItemIdentifiers:
batchSize
batchResultsHandler
setBatchResultsHandler:
setImageProfile:
setKeyProfile:
setPlatformIdentifier:
setProtocolVersion:
retryDelay
setRetryDelay:
returnsLocalEquivalencies
setReturnsLocalEquivalencies:
timeoutInterval
setTimeoutInterval:
shouldIgnoreCache
setShouldIgnoreCache:
_returnsLocalEquivalencies
_shouldIgnoreCache
_clientIdentifier
_clientBundleIdentifier
_clientBundleVersion
_itemIdentifiers
_batchSize
_batchResultsHandler
_imageProfile
_keyProfile
_platformIdentifier
_protocolVersion
_retryDelay
_timeoutInterval
T@"NSString",C,N,V_clientIdentifier
T@"NSString",C,N,V_clientBundleIdentifier
T@"NSString",C,N,V_clientBundleVersion
T@"NSArray",C,N,V_itemIdentifiers
Tq,N,V_batchSize
T@?,C,N,V_batchResultsHandler
T@"NSString",C,N,V_imageProfile
T@"NSString",C,N,V_keyProfile
Tq,N,V_personalizationStyle
T@"NSString",C,N,V_platformIdentifier
T@"NSString",C,N,V_protocolVersion
Td,N,V_retryDelay
TB,N,V_returnsLocalEquivalencies
Td,N,V_timeoutInterval
TB,N,V_shouldIgnoreCache
initWithStoreDialog:
allowInCar
alternateButtonTitle
createCFUserNotification
defaultButtonTitle
displaysActionButtonOnLockScreen
displaysAsTopMost
forcesModalAppearance
message
otherButtonTitle
setAllowInCar:
setAlternateButtonTitle:
setDefaultButtonTitle:
setDisplaysActionButtonOnLockScreen:
setDisplaysAsTopMost:
setForcesModalAppearance:
setMessage:
setOtherButtonTitle:
setTitle:
title
_setBoolValue:forKey:
alertLevel
setAlertLevel:
_userNotificationDictionary
_alertLevel
Tq,N,V_alertLevel
setToken:
setLastUpdatedDate:
T@"ICMusicLibraryAuthToken",&,N
T@"NSError",C,N
T@"NSDate",C,N
_lastUpdatedDate
T@"ICMusicLibraryAuthToken",&,N,V_token
T@"NSDate",C,N,V_lastUpdatedDate
storeServerCalendar
T@"NSCalendar",R,N
initWithMetadataDictionary:expirationDate:
artistStoreAdamID
collectionName
collectionStoreAdamID
copyrightText
explicitRating
genreNames
hasLyrics
hasTimeSyncedLyrics
movementCount
movementName
movementNumber
name
playlistGlobalID
offers
offerWithType:
radioStationStringID
shouldShowComposer
formerStoreAdamIDs
workName
artworkInfos
audioTraits
classicalURL
_storePlatformReleaseDateFormatter
initWithLiveLink:
isCoordinatorSuspended
handlePlaybackSyncPayload:
removeParticipant:
handleNewParticipantStateDictionary:
handleNewTransportControlStateDictionary:
synchronizePlaybackStateForReason:
clearCoordinationMediumDelegate
_broadcastLocalParticipantStateDictionary:
_broadcastTransportControlStateDictionary:forItemWithIdentifier:
_reloadTransportControlStateForItemWithIdentifier:completionHandler:
liveLink
localParticipantUUID
fetchServerStateLock
fetchServerStateInProgressCount
fetchServerStateCompletions
_fetchServerStateLock
_liveLink
_localParticipantUUID
_fetchServerStateInProgressCount
_fetchServerStateCompletions
T@"NSUUID",R,C,N,V_localParticipantUUID
T{os_unfair_lock_s=I},R,N,V_fetchServerStateLock
Tq,R,N,V_fetchServerStateInProgressCount
T@"NSMutableArray",R,N,V_fetchServerStateCompletions
T@"ICLiveLink",R,W,N,V_liveLink
_playbackCoordinatorDidIssueCommandToPlaybackObjectNotification:
localParticipantUUIDForPlaybackCoordinator:
playbackCoordinator:broadcastLocalParticipantStateDictionary:
playbackCoordinator:broadcastTransportControlStateDictionary:forItemWithIdentifier:
playbackCoordinator:reloadTransportControlStateForItemWithIdentifier:completionHandler:
initWithPlaybackCoordinator:liveLink:
playbackCoordinator
_playbackCoordinator
T@"AVPlayerPlaybackCoordinator",R,N,V_playbackCoordinator
initWithRequest:
_performSubscriptionStatusURLRequestWithRequestContext:subscriptionStatusURL:allowsAuthentication:completion:
_cacheAccountEligibilityWithStatus:requestContext:
_carrierBundleStatusIsValidForCachedSubscriptionStatus:
request
allowsFuseHeaderEnrichment
setAllowsFuseHeaderEnrichment:
shouldRequestLightweightStatus
setShouldRequestLightweightStatus:
_allowsFuseHeaderEnrichment
_shouldRequestLightweightStatus
TB,N,V_shouldRequestLightweightStatus
T@"ICMusicSubscriptionStatusRequest",R,C,N,V_request
TB,N,V_allowsFuseHeaderEnrichment
performDefaultHandlingForAuthenticationChallenge:
defaultMaximumConcurrentRequests
_sendLoadUrlMetricsToCoreAnalytics:
_sanitizeURLString:
_amsMetricsForRequestContext:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:didCreateTask:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:downloadTask:didFinishDownloadingToURL:
URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
initWithConfiguration:maxConcurrentRequests:
initWithConfiguration:maxConcurrentRequests:qualityOfService:
enqueueDataRequest:withCompletionHandler:
enqueueUploadRequest:withCompletionHandler:
enqueueDownloadRequest:withCompletionHandler:
enqueueDownloadRequest:toDestination:withCompletionHandler:
pauseRequest:
resumeRequest:
cancelRequest:
cancelRequest:withError:
cancelPendingRequestsWithError:
pause
resume
URLSession:avAssetDownloadTask:didReceiveAVAssetDownloadToken:
URLSession:avAssetDownloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
_enqueueRequest:
_processPendingRequests
_processRequest:
_finishRequest:
_requestForTask:
_createURLSessionWithConfiguration:
_createURLSessionTaskForRequest:usingSession:
_newResponseForRequest:
_checkRequestTimeouts
_scheduleNextRequestTimeoutCheck
_timeoutForRequest:
_updateProgressForSessionTask:withTotalBytesWritten:totalBytesExpectedToWrite:
_reportLoadURLMetricsWithSession:task:request:error:
maxConcurrentRequests
_utilityQueue
_pendingRequestsProcessingCounter
_pendingRequests
_activeRequests
_completionHandlers
_paused
_requestTimeoutTimer
_maxConcurrentRequests
TQ,R,N,V_maxConcurrentRequests
initWithRequestContext:parameters:
performRestoreRequestWithCompletionHandler:
_serializedBodyDataWithAccountID:
_storeURLRequest
_requestParameters
initWithApplicationMessage:bundleIdentifier:
updateMetadataValue:forKey:
cachedLocationForResourceWithIdentifier:
setCacheLocation:forResourceWithIdentifier:
clearCachedResources
allCachedResourceLocations
applicationMessage
bundleIdentifier
shouldDownloadResources
setShouldDownloadResources:
didCacheRequiredResources
setDidCacheRequiredResources:
isBadgingApplication
setIsBadgingApplication:
_bundleIdentifier
_resourceCache
_shouldDownloadResources
_didCacheRequiredResources
_isBadgingApplication
_applicationMessage
T@"ICIAMApplicationMessage",R,N,V_applicationMessage
T@"NSString",R,N,V_bundleIdentifier
T@"NSDictionary",R,N
TB,N,V_shouldDownloadResources
TB,N,V_didCacheRequiredResources
TB,N,V_isBadgingApplication
commandType
setCommandType:
setHasCommandType:
hasCommandType
commandTypeAsString:
StringAsCommandType:
hasApplicationMessage
setCommandSerialNumber:
setHasCommandSerialNumber:
hasCommandSerialNumber
setApplicationMessage:
commandSerialNumber
_commandSerialNumber
_commandType
Ti,N,V_commandType
T@"ICIAMApplicationMessage",&,N,V_applicationMessage
Tq,N,V_commandSerialNumber
_valueForBagKey:valueType:fromURLBag:urlBagLoadingError:valueRetrievingError:
_valueFromICURLBag:forKeyPath:valueType:
_value:matchesExpectedType:
arrayForKey:
boolForKey:
createSnapshotWithCompletion:
doubleForKey:
integerForKey:
stringForKey:
URLForKey:
dictionaryForKey:
profile
profileVersion
URLForKey:account:
processInfo
T@"NSDate",R,N
T@"AMSProcessInfo",R,C,N
_bagValueForKey:valueType:
_didFinishLoadingBag:error:
_pendingBagValuePromises
_urlBagLoadingError
T@"ICStoreRequestContext",R,N,V_requestContext
initWithAccountID:fairPlaySessionID:
fairPlaySessionID
_fairPlaySessionID
TQ,R,N,V_fairPlaySessionID
ic_cloudClientErrorWithCode:userInfo:
ic_cloudClientLibraryUploadErrorWithCode:userInfo:
_userIdentityStoreDelegateAccountStoreDidChangeNotification:
machServiceListener
testingListenerWithIdentityStore:
_initWithXPCListener:testingIdentityStore:
invalidate
suspend
_ignoresEntitlements
_testingIdentityStore
T@"NSXPCListenerEndpoint",R,N
initReturningError:
exchangeWithSAPVersion:data:returningData:exchangeStatus:error:
processResponseWithSignatureData:data:error:
signData:returningSignatureData:error:
_availability
_noGeneration
_repeatMode
_shuffleMode
applicationMessageSyncResponsesType
clearApplicationMessageSyncResponses
addApplicationMessageSyncResponses:
applicationMessageSyncResponsesCount
applicationMessageSyncResponsesAtIndex:
applicationMessageSyncResponses
setApplicationMessageSyncResponses:
_applicationMessageSyncResponses
T@"NSMutableArray",&,N,V_applicationMessageSyncResponses
featureName
pattern
initWithResponsePayload:
responsePayload
enumerateMappingsUsingBlock:
mappingsForFeatureName:
_responsePayload
whaContentInfoWithAccountID:
fpContentInfo
vodkaType
_vodkaType
Tq,R,N,V_vodkaType
T(FPContentInfo_=I{VanillaVodkaAttributes_=I^{sinfEntry_}I}{CloudVodkaAttributes_=IIQ}{WHAVodkaAttributes_=IQ}),R,N
_defaultContainerURL
initWithContainerDirectoryURL:
initWithContainerDirectoryURL:identityStore:
initWithIdentityStore:
flushWithCompletionHandler:
getHistoryForStationWithIdentifier:userIdentity:completionHandler:
removeHistoryForStationWithIdentifier:userIdentity:completionHandler:
updateHistoryForStationWithIdentifier:userIdentity:usingBlock:
updateHistoryForStationWithIdentifier:userIdentity:usingBlock:completionHandler:
_fileURLForStationWithIdentifier:identityKey:
_getCacheKeyForUserIdentity:completionHandler:
_playbackHistoryOfClass:forStationWithIdentifier:identityKey:error:
containerDirectoryURL
_containerURL
_identityResolutionQueue
T@"NSURL",R,C,N,V_containerURL
flushPlayActivityEventsForEndPointIdentifier:withReplyBlock:
setRevision:revisionVersionToken:forEndpointIdentifier:withReplyBlock:
acquirePendingPlayActivityEventsForEndpointIdentifier:storeAccountID:shouldFilterStoreAccountID:withReplyBlock:
removePlayActivityEventsUptoRevision:withReplyBlock:
insertPlayActivityEvents:withReplyBlock:
completePendingPlayActivityEvents:forSessionToken:result:withReplyBlock:
_requiredEndpointIdentifiers
initWithWritingStyle:
initWithWritingStyle:databasePath:
acquirePendingPlayActivityEventsForEndpointIdentifier:withStoreAccountID:completionHandler:
acquirePendingPlayActivityEventsForEndpointIdentifier:withCompletionHandler:
completePendingPlayActivityEvents:forSessionToken:withResult:completionHandler:
completePendingPlayActivityEventPersistentIDs:forSessionToken:withResult:completionHandler:
flushPendingPlayActivityEventsForEndpointIdentifier:withCompletionHandler:
getHasPendingPlayEventsForEndpointIdentifier:withCompletionHandler:
getRevisionInformationWithCompletionHandler:
getPlayActivityEventsFromRevision:toRevision:withCompletionHandler:
recordPlayActivityEvents:withCompletionHandler:
removeFlushedPlayActivityEventsWithCompletionHandler:
removePlayActivityEventsUpToRevision:withCompletionHandler:
setCurrentRevision:revisionVersionToken:forEndpointIdentifier:withCompletionHandler:
_acquirePendingPlayActivityEventsForEndpointIdentifier:withStoreAccountID:shouldFilterStoreAccountID:completionHandler:
_completePendingPlayEventsWithRevisionIndexSet:forSessionToken:withResult:completionHandler:
_daemonPlayActivityControllerConnection
_copyEndpointRevisionInformationForEndpointIdentifier:
_getFlushSessionInformationForEndpointIdentifier:shouldAcquire:storeAccountID:shouldFilterStoreAccountID:withCompletionHandler:
_loadEndpointIdentifierInformationIfNeeded
_revisionsIndexSetForPlayActivityEvents:
_revisionsIndexSetForPlayActivityEventPersistentIDs:
_sessionInformationForSessionToken:
_setEndpointRevisionInformation:forEndpointIdentifier:
_setupNotifyTokenIfNeeded
_table
writingStyle
_debugLogOperationQueue
_endpointIdentifierToEndpointRevisionInformation
_endpointRevisionInformationDidChangeNotifyToken
_hasAttemptedTableCreation
_hasLoadedEndpointRevisionInformation
_hasSetupEndpointRevisionInformationDidChangeNotifyToken
_hasValidEndpointRevisionInformationDidChangeNotifyToken
_pendingFlushingSessions
_writingStyle
TQ,R,N,V_writingStyle
additionalPendingRevisionsIndexSet
setAdditionalPendingRevisionsIndexSet:
currentRevision
setCurrentRevision:
revisionVersionToken
setRevisionVersionToken:
_additionalPendingRevisionsIndexSet
_currentRevision
_revisionVersionToken
T@"NSIndexSet",C,N,V_additionalPendingRevisionsIndexSet
TQ,N,V_currentRevision
T@"NSString",C,N,V_revisionVersionToken
endpointIdentifier
setEndpointIdentifier:
revisionsIndexSet
setRevisionsIndexSet:
sessionToken
setSessionToken:
_endpointIdentifier
_revisionsIndexSet
_sessionToken
T@"NSString",C,N,V_endpointIdentifier
T@"NSIndexSet",&,N,V_revisionsIndexSet
TQ,N,V_sessionToken
initWithRequestContext:notificationType:
_notificationType
ic_URLByAppendingQueryItems:
ic_URLByAppendingQueryParameters:
ic_queryParametersDictionary
ic_queryParametersDictionaryFromString:
setType:
supportedSizes
setSupportedSizes:
hasMaxSupportedSize
setHasMaxSupportedSize:
maxSupportedSize
setMaxSupportedSize:
_hasMaxSupportedSize
_supportedSizes
_maxSupportedSize
Tq,N,V_type
T@"NSArray",C,N,V_supportedSizes
TB,N,V_hasMaxSupportedSize
T{CGSize=dd},N,V_maxSupportedSize
floatValue
initWithArtworkResponseArray:
initWithArtworkResponseDictionary:
initWithArtworkURL:
initWithArtworkResponseValue:
sizeInfo
artworkURLWithSize:cropStyle:format:
artworkURLWithSize:cropStyle:format:preferP3ColorSpace:
copyColorWithKind:
colorFromStringRepresentation:
originalSize
stringRepresentation
imageTraits
textGradient
_sortResponseArray
_sortSupportedSizesArray
_hasOriginalSize
sortedResponseArray
setSortedResponseArray:
sortedSupportedSizesArray
setSortedSupportedSizesArray:
responseArray
_sizeInfo
_artworkURL
_sortedResponseArray
_sortedSupportedSizesArray
_responseArray
T@"NSArray",C,N,V_sortedResponseArray
T@"NSArray",C,N,V_sortedSupportedSizesArray
T@"NSURL",R,C,N,V_artworkURL
T@"NSArray",R,C,N,V_responseArray
T@"NSDictionary",R,C,N,V_responseDictionary
T@"ICStoreArtworkSizeInfo",R,N,V_sizeInfo
T{CGSize=dd},R,N
T@"NSArray",R,N
_contributingParticipantId
_container
_mediaInfo
_sectionType
_isExplicit
didStopLiveLink:
liveLink:didReceiveDirectCurrentItemChanged:fromParticipant:
liveLink:didReceiveDirectCurrentItemChanged:
liveLink:didReceiveEvent:
liveLink:didUpdateParticipants:
liveLink:didUpdateQueue:
liveLink:didEncounterError:willRetry:
didStartLiveLink:
liveLinkDidReconnect:
linkWithIdentity:
linkWithSessionIdentifier:identity:
connectionControllerConnectionDidStart:
connectionController:connectionDidEndWithError:
connectionController:didEncounterFatalError:
connectionController:connectionDidReceiveMessage:
initWithSharedListeningSessionIdentifier:identity:
isStarted
invitationURL
reconnectWithReason:options:
beginSynchronizedPlaybackWithAVPlaybackCoordinator:
beginSynchronizedPlaybackWithAVCFPlaybackCoordinator:
endSynchronizedPlayback
broadcastDirectCurrentItemChangedToItemIdentifier:
updateWithIdentity:
expectingToJoinWithStartItem:asInitiator:
participants
queue
fetchPlaybackSyncStateForMediumWithCompletion:
fetchPlaybackSyncStateWithCompletion:
participantForParticipantUUID:
receivedCurrentItemIdentifier:fromParticipant:
receivedEvent:
sendPlaybackSyncPayload:
sendMessage:completion:
_didReceiveAddItemsAction:completion:
_didReceiveCurrentItemChangeAction:completion:
_didReceiveCurrentItemTransitionAction:completion:
_didReceiveMoveItemAction:completion:
_didReceiveParticipantChangeAction:completion:
_didReceivePlaybackSyncAction:completion:
_didReceivePlayNowQueueItemsAction:completion:
_didReceiveQueueSyncAction:completion:
_didReceiveReactionAction:completion:
_didReceiveRemoveItemAction:completion:
_didReceiveReplaceQueueItemsAction:completion:
_didReceiveServerNoticeAction:completion:
_emitSessionEventIfNeededForAction:disconnectedParticipant:
_handleReceivedMessage:
_handleUpdatedParticipantQuery:
_handleUpdatedQueue:playbackControlSettings:serverQueueContext:
_participantForAction:
_participantForParticipantID:
_processPendingActions
_storeTraceID:completion:
_updateParticipantsWithReason:completion:
_updateQueueWithReason:completion:
_updatePlaybackControlSettingsWithReason:completion:
_performClientInfoExchangeAndInitializeQueue
_didReceivePluginErrorMessage:
_handlePotentiallyRecoverableError:
sessionKey
pendingRequests
setPendingRequests:
pendingActions
setPendingActions:
processingAction
setProcessingAction:
playbackCoordinatorMedium
setPlaybackCoordinatorMedium:
delegateQueue
connectionController
setConnectionController:
clientSpecifiedIdentity
localParticipantServerID
isStarting
setStarting:
setStarted:
forcedReconnectReason
setForcedReconnectReason:
deferredReconnectReason
setDeferredReconnectReason:
receivedDisconnectionNotice
setReceivedDisconnectionNotice:
currentRetryCount
setCurrentRetryCount:
maxRetries
setMaxRetries:
maxRetryWaitPeriod
setMaxRetryWaitPeriod:
expectingToJoinStartItemIdentifier
setExpectingToJoinStartItemIdentifier:
expectingToJoinAsInitiator
setExpectingToJoinAsInitiator:
_processingAction
_starting
_started
_receivedDisconnectionNotice
_expectingToJoinAsInitiator
_participants
_sessionKey
_pendingActions
_playbackCoordinatorMedium
_delegateQueue
_connectionController
_clientSpecifiedIdentity
_localParticipantServerID
_forcedReconnectReason
_deferredReconnectReason
_currentRetryCount
_maxRetries
_maxRetryWaitPeriod
_expectingToJoinStartItemIdentifier
T{os_unfair_lock_s=I},R,N,V_lock
T@"NSMutableDictionary",&,N,V_pendingRequests
T@"NSMutableArray",&,N,V_pendingActions
TB,N,V_processingAction
T@"ICLiveLinkPlaybackCoordinatorMedium",&,N,V_playbackCoordinatorMedium
T@"NSObject<OS_dispatch_queue>",R,N,V_delegateQueue
T@"NSString",C,N,V_identifier
T@"ICSharedListeningConnectionController",&,N,V_connectionController
T@"ICLiveLinkIdentity",R,C,N,V_clientSpecifiedIdentity
Tq,R,N,V_localParticipantServerID
starting
TB,N,GisStarting,V_starting
started
TB,N,GisStarted,V_started
T@"NSString",C,N,V_forcedReconnectReason
T@"NSString",C,N,V_deferredReconnectReason
TB,N,V_receivedDisconnectionNotice
Tq,N,V_currentRetryCount
Tq,N,V_maxRetries
Tq,N,V_maxRetryWaitPeriod
T@"NSString",C,N,V_expectingToJoinStartItemIdentifier
TB,N,V_expectingToJoinAsInitiator
T@"<ICLiveLinkDelegate>",W,N,V_delegate
T@"NSURL",R,N
T@"NSString",R,N,V_sessionKey
T@"ICLiveLinkIdentity",R,C,N
T@"NSArray",R,N,V_participants
T@"ICSharedListeningQueue",R,C,N,V_queue
albumContainerWithMediaIdentifier:featureName:
playlistContainerWithMediaIdentifier:featureName:
radioContainerWithMediaIdentifier:featureName:
radioContainerWithSeedItem:featureName:
groupWithFeatureName:
autoPlayContainerWithMediaIdentifier:featureName:
initWithProtobuf:
_initWithKind:mediaIdentifier:featureName:
_initWithKind:seedItem:featureName:
mediaIdentifier
seedItem
stationHash
_kind
_mediaIdentifier
_featureName
_seedItem
_stationHash
Tq,R,N,V_kind
T@"NSString",R,C,N,V_mediaIdentifier
T@"NSString",R,C,N,V_featureName
T@"ICSharedListeningItem",R,C,N,V_seedItem
T@"NSString",R,C,N,V_stationHash
itemWithMediaIdentifier:
initWithProtobuf:identity:
_playParamsForPlaybackItemProto:
isAutoPlayItem
contributorIdentity
playParams
_isAutoPlayItem
_contributorIdentity
_playParams
TB,R,N,V_isAutoPlayItem
T@"ICLiveLinkIdentity",R,C,N,V_contributorIdentity
T@"NSDictionary",R,C,N,V_playParams
specifiedPositionAfterItemIdentifier:
playNextPositionWithAfterItemIdentifierHint:
playLastPositionWithAfterItemIdentifierHint:
afterItemIdentifier
_afterItemIdentifier
T@"NSString",R,C,N,V_afterItemIdentifier
initWithProtobuf:serverQueueContext:liveLink:playbackControlSettings:
items
containerForIdentifier:
hasActiveRadioStation
isAutoPlayAvailable
isAutoPlayEnabled
setAutoPlayEnabled:completion:
itemForIdentifier:
setMediaIdentifiers:preferredStartIndex:
replaceTracklist:preferredStartIndexPath:completion:
addMediaIdentifiers:afterItemIdentifier:
insertTracklist:afterItemIdentifier:completion:
insertTracklist:atPosition:completion:
insertTracklist:atPosition:completionEx:
insertTracklist:afterItemIdentifier:playNowWithPreferredStartIndexPath:completion:
insertTracklist:afterItemIdentifier:playNowWithPreferredStartIndexPath:completionEx:
removeItemIdentifier:
removeItemIdentifiers:
removeAllItemIdentifiersAfterItemIdentifier:
moveItemIdentifier:beforeItemIdentifier:
moveItemIdentifier:afterItemIdentifier:
getExpectedCurrentItemWithCompletion:
_afterItemPositionForItemIdentifier:
_itemForIdentifier:outIndexPath:
_playbackItemProtosForTracklist:withPreferredStartItemIndexPath:
_detectTrackGenerationSourceForTracklist:detectedCompletion:
_tracklistForQueueProto:
explicitContentState
tracklist
setLiveLink:
serverRevision
serverQueueContext
playbackControlSettings
_explicitContentState
_tracklist
_serverRevision
_serverQueueContext
T@"ICLiveLink",W,N,V_liveLink
Tq,R,N,V_serverRevision
T@"NSString",R,C,N,V_serverQueueContext
T@"_ICLLPlaybackControlSettings",R,N,V_playbackControlSettings
T@"NSString",R,C,N,V_identifier
Tq,R,N,V_explicitContentState
T@"MSVSectionedCollection",R,C,N,V_tracklist
suzeLeaseSession:leaseRenewalDidFailWithError:
beginAutomaticallyRefreshingLease
endAutomaticallyRefreshingLease
startLeaseSessionWithCompletionHandler:
stopLeaseSessionWithCompletionHandler:
_newSuzeLeaseRequestWithType:clientData:
_renewLeaseTimerAction
_updateRenewalTimer
_updateRenewalTimerWithResponse:
_automaticRefreshCount
_isRunning
_leaseExpirationDate
_leaseRenewTimer
_leaseSyncSession
T@"ICSuzeLeaseSessionConfiguration",R,C,N,V_configuration
T@"<ICSuzeLeaseSessionDelegate>",W,N,V_delegate
initWithRequestContext:redownloadParametersString:
_executeWithActiveICloudAccountProperties:
isPlaybackRequest
setPlaybackRequest:
isStreamingRental
setStreamingRental:
usePrioritizedURLSession
setUsePrioritizedURLSession:
urlSession
setUrlSession:
setRedownloadParameters:
requestURLBagKey
setRequestURLBagKey:
includeKeybagSyncData
setIncludeKeybagSyncData:
includeSubscriptionKeybagSyncData
setIncludeSubscriptionKeybagSyncData:
_redownloadResponse
_playbackRequest
_streamingRental
_usePrioritizedURLSession
_includeKeybagSyncData
_includeSubscriptionKeybagSyncData
_redownloadParameters
_requestURLBagKey
T@"NSDictionary",C,N,V_redownloadParameters
T@"NSString",C,N,V_requestURLBagKey
TB,N,V_includeKeybagSyncData
TB,N,V_includeSubscriptionKeybagSyncData
playbackRequest
TB,N,GisPlaybackRequest,V_playbackRequest
streamingRental
TB,N,GisStreamingRental,V_streamingRental
TB,N,V_usePrioritizedURLSession
T@"ICURLSession",&,N,V_urlSession
_initCommon
initWithIdentityStoreStyle:
lock:
identityStoreStyle
uniqueIdentifier
activeAccountHistory
setActiveAccountHistory:
activeLockerAccountHistory
setActiveLockerAccountHistory:
backend
setBackend:
delegateAccountStoreOptions
setDelegateAccountStoreOptions:
_identityStoreStyle
_uniqueIdentifier
_activeAccountHistory
_activeLockerAccountHistory
_backend
_delegateAccountStoreOptions
Tq,R,N,V_identityStoreStyle
Tq,R,N,V_uniqueIdentifier
T@"ICValueHistory",C,N,V_activeAccountHistory
T@"ICValueHistory",C,N,V_activeLockerAccountHistory
T@"<ICUserIdentityStoreBackend>",C,N,V_backend
T@"ICDelegateAccountStoreOptions",C,N,V_delegateAccountStoreOptions
eventParametersType
hasApplicationMessageIdentifier
clearEventParameters
addEventParameters:
eventParametersCount
eventParametersAtIndex:
applicationMessageIdentifier
setApplicationMessageIdentifier:
eventParameters
setEventParameters:
_applicationMessageIdentifier
_eventParameters
T@"NSString",&,N,V_applicationMessageIdentifier
T@"NSMutableArray",&,N,V_eventParameters
URLBag
setURLBag:
delegatedDSID
setDelegatedDSID:
delegatedStorefrontIdentifier
setDelegatedStorefrontIdentifier:
delegatedURLBag
setDelegatedURLBag:
_URLBag
_delegatedDSID
_delegatedStorefrontIdentifier
_delegatedURLBag
T@"NSString",C,N,V_iCloudPersonID
T@"ICURLBag",&,N,V_URLBag
T@"NSNumber",C,N,V_DSID
T@"NSString",C,N,V_storefrontIdentifier
T@"NSNumber",C,N,V_delegatedDSID
T@"NSString",C,N,V_delegatedStorefrontIdentifier
T@"ICDelegateToken",C,N,V_delegateToken
T@"ICURLBag",&,N,V_delegatedURLBag
initWithResponseSinfDictionary:
dpInfoData
pinfData
sinfData
sinf2Data
purchaseBundleSinfDictionary
responseSinfDictionary
_responseSinfDictionary
T@"NSDictionary",R,C,N,V_responseSinfDictionary
ic_isCloudDaemon
_musicCenter
_amsPushHandler
addBadgeIconForBundleIdentifier:completion:
removeBadgeIconForBundleIdentifier:completion:
scheduleNotificationWithPayload:forBundleIdentifier:
removeNotificationWithIdentifier:forBundleIdentifier:
_centerForBundleIdentifier:
initWithDeveloperToken:clientInfo:options:
performRequestOnOperationQueue:withResponseHandler:
_executeByPerformingStoreRequestWithContext:qualityOfService:
_playerInfoContextRequestTokens
currentDeviceInfo
defaultInfo
nanoPairedDeviceStatusMonitor:didChangeClientSyncState:
T@"ICDeviceInfo",R,N
deviceModel
rawDeviceModel
systemReleaseType
hardwarePlatform
deviceFairPlayGUIDData
deviceClass
serialNumber
macAddress
macAddressData
mainScreenSize
hasCellularDataCapability
hasTelephonyCapability
hasWiFiCapability
hasWAPICapability
has720pCapability
has1080pCapability
isPhoneNumberAccessRestricted
screenClass
isIPhone
isAppleTV
isIPad
isIPod
isWatch
isAudioAccessory
isMac
isROSDevice
deviceClassName
productVersion
productPlatform
buildVersion
isInternalBuild
isSeedBuild
fairPlayDeviceType
currentLocale
supportsSideLoadedMediaContent
supportsMusicStreaming
supportsMultipleITunesAccounts
_gestaltDeviceClass
_hasRegisteredForNameNotifications
_nameNotificationToken
_productVersion
_deviceModel
_rawDeviceModel
_hardwarePlatform
_buildVersion
_deviceClass
_deviceClassName
_fairPlayDeviceType
_currentLocale
_deviceGUIDData
_name
_serialNumber
_macAddressData
_mainScreenSize
_hasCellularDataCapabilityNumber
_hasTelephonyCapabilityNumber
_hasWiFiCapabilityValue
_hasWAPICapabilityValue
_has720pCapabilityValue
_has1080pCapabilityValue
_isPhoneNumberAccessRestrictedValue
_screenClassValue
_isInternalBuildNumber
_supportsMusicStreamingValue
_systemReleaseType
_deviceNameUpdateQueue
phoneNumberAccessRestricted
TB,R,N,GisPhoneNumberAccessRestricted
Ti,R,N
internalBuild
TB,R,N,GisInternalBuild
seedBuild
TB,R,N,GisSeedBuild
TI,R,N
_seed
_stationId
initWithPlayActivityController:
playActivityController
_playActivityController
T@"ICPlayActivityController",R,N,V_playActivityController
dataType
setDataType:
setHasDataType:
hasDataType
dataTypeAsString:
StringAsDataType:
comparisonType
setComparisonType:
setHasComparisonType:
hasComparisonType
comparisonTypeAsString:
StringAsComparisonType:
hasTriggerValue
triggerConditionType
setTriggerConditionType:
setHasTriggerConditionType:
hasTriggerConditionType
triggerConditionTypeAsString:
StringAsTriggerConditionType:
setKind:
setHasKind:
hasKind
kindAsString:
StringAsKind:
hasBundleIdentifier
triggerValue
setTriggerValue:
setBundleIdentifier:
_comparisonType
_dataType
_triggerConditionType
_triggerValue
Ti,N,V_dataType
Ti,N,V_comparisonType
T@"NSString",&,N,V_triggerValue
Ti,N,V_triggerConditionType
Ti,N,V_kind
T@"NSString",&,N,V_bundleIdentifier
hasURL
setWidth:
setHasWidth:
hasWidth
setHeight:
setHasHeight:
hasHeight
setURL:
width
height
_height
_uRL
_width
T@"NSString",&,N,V_uRL
TI,N,V_width
TI,N,V_height
setMetadataValue:forKey:
metadataValueForKey:
allMetadataValues
_metadataValues
initWithIdentifier:
initWithDictionaryRepresentation:
keyData
setKeyData:
renewalDate
setRenewalDate:
failureCount
setFailureCount:
_keyData
_renewalDate
_failureCount
T@"NSData",C,N,V_keyData
T@"NSDate",C,N,V_renewalDate
TQ,N,V_failureCount
containsKeyForIdentifier:error:
loadKeyForIdentifier:renewalDate:error:
saveKey:forIdentifier:withRenewalDate:
incrementFailureCountForKeyWithIdentifier:
removeKeyForIdentifier:
removeAllKeys
enumerateKeysUsingBlock:
initWithPath:
_keyEntryForIdentifier:error:
_saveKeyEntry:
_filePathForKeyIdentifier:
_filePath
_keyEntries
_finishWithSyncState:error:
initWithBagRadioDictionary:
getTracksDPInfoKBSyncCount
maxSupportedProtocolVersion
isContinueListeningAvailable
continueListeningMaxQueueSizeInRequest
continueListeningMaxUpcomingTracksSizeToMaintain
continueListeningLoadStationThreshold
shouldIncludeHTTPHeaderField:forRequestURL:
urlForBagRadioKey:
_bagRadioDictionary
continueListeningAvailable
TB,R,N,GisContinueListeningAvailable
initWithExpirationDate:
runAgeVerification
isExplicitContentAllowed
status
setStatus:
verificationExpirationDate
_status
_verificationExpirationDate
Tq,N,V_status
explicitContentAllowed
TB,R,N,GisExplicitContentAllowed
T@"NSDate",R,N,V_verificationExpirationDate
initWithDatabasePath:
setCacheSizeWithNumberOfDatabasePages:
setCacheSizeWithNumberOfKilobytes:
applyToDatabase:
cacheSize
setCacheSize:
setReadOnly:
_readOnly
_cacheSize
Tq,N,V_cacheSize
TB,N,GisReadOnly,V_readOnly
allStorePlatformMetadata
storePlatformMetadataForStoreAdamID:
_storePlatformMetadataDictionaryFromRadioMetadataDictionary:
main
playActivityEvents
setPlayActivityEvents:
_playActivityEvents
T@"NSArray",C,N,V_playActivityEvents
ICURLRequest:didChangeState:
_defaultMaxRetryCountForReason:
_nameForRequestType:
_responseClass
_responseHandlerClass
progress
T@"NSProgress",R
initWithURL:requestContext:
initWithURL:requestContext:resumeData:
initWithURLRequest:requestContext:
initWithURLRequest:requestContext:resumeData:
buildURLRequestWithCompletionHandler:
registerObserver:
unregisterObserver:
updateState:
maxRetryCount
setMaxRetryCount:
retryCount
setRequestState:
_maxRetryCountForReason:
_setMaxRetryCount:forReason:
_retryCountForReason:
_incrementRetryCountForReason:
_ensureValidRetryReason:
_analyticSignature
_updateSignpostsForNewState:
setProgress:
prioritize
setPrioritize:
cancelOnHTTPErrors
setCancelOnHTTPErrors:
setRedirectCount:
requestState
shouldReportLoadURLMetrics
setShouldReportLoadURLMetrics:
urlRequest
task
setTask:
waitSemaphore
setWaitSemaphore:
currentURLRequest
setCurrentURLRequest:
urlResponse
setUrlResponse:
responseData
setResponseData:
responseDataURL
setResponseDataURL:
setError:
avDownloadOptions
setAVDownloadOptions:
avURLAsset
setAVURLAsset:
handlingType
setHandlingType:
retryReason
setRetryReason:
startTime
setStartTime:
lastUpdateTime
setLastUpdateTime:
lastProgressUpdateTime
setLastProgressUpdateTime:
performanceMetrics
setPerformanceMetrics:
completionHandler
setCompletionHandler:
_maxRetryCounts
_retryCounts
_observerQueue
_signpostIdentifier
_prioritize
_cancelOnHTTPErrors
_shouldReportLoadURLMetrics
_progress
_requestState
_urlRequest
_task
_waitSemaphore
_currentURLRequest
_urlResponse
_responseData
_responseDataURL
_avDownloadOptions
_avURLAsset
_handlingType
_retryReason
_startTime
_lastUpdateTime
_lastProgressUpdateTime
_performanceMetrics
_completionHandler
T@"NSURLRequest",R,N,V_urlRequest
T@"NSURLSessionTask",&,N,V_task
T@"NSObject<OS_dispatch_semaphore>",&,N,V_waitSemaphore
T@"NSURLRequest",&,N,V_currentURLRequest
T@"NSURLResponse",&,N,V_urlResponse
T@"NSMutableData",&,N,V_responseData
T@"NSURL",&,N,V_responseDataURL
T@"NSError",&,N,V_error
T@"NSDictionary",&,N,SsetAVDownloadOptions:,V_avDownloadOptions
T@"AVURLAsset",&,N,SsetAVURLAsset:,V_avURLAsset
Tq,N,V_handlingType
T@"NSString",&,N,V_retryReason
Td,N,V_startTime
Td,N,V_lastUpdateTime
Td,N,V_lastProgressUpdateTime
T@"ICURLPerformanceMetrics",&,N,V_performanceMetrics
T@?,C,N,V_completionHandler
T@"NSProgress",&,N,V_progress
TB,N,V_prioritize
TB,N,V_cancelOnHTTPErrors
TQ,N
TQ,N,V_redirectCount
Tq,N,V_requestState
T@"NSData",R,C,N,V_resumeData
T@"ICURLResponseHandler",&,N,V_responseHandler
TB,N,V_shouldReportLoadURLMetrics
ic_allStoreAccountsWithCompletion:
ic_allStoreAccountsWithError:
ic_activeStoreAccountWithCompletion:
ic_activeStoreAccountWithError:
ic_setActiveStoreAccount:completion:
ic_setActiveStoreAccount:error:
ic_activeLockerAccountWithCompletion:
ic_activeLockerAccountWithError:
ic_setActiveLockerAccount:completion:
ic_setActiveLockerAccount:error:
ic_disableActiveLockerAccount:error:
ic_primaryAppleAccountWithCompletion:
ic_primaryAppleAccountWithError:
ic_storeAccountForStoreAccountID:completion:
ic_storeAccountForStoreAccountID:error:
ic_storeAccountTypeWithCompletion:
ic_storeAccountTypeWithError:
ic_storeAccountForHomeUserIdentifier:completion:
ic_storeAccountForHomeUserIdentifier:error:
ic_localStoreAccountWithCompletion:
ic_localStoreAccountWithError:
ic_allStoreAccounts
ic_activeStoreAccount
ic_activeLockerAccount
ic_primaryAppleAccount
ic_setActiveStoreAccount:
ic_setActiveLockerAccount:
ic_storeAccountForStoreAccountID:
_ic_storeAccountType
ic_sharedAccountStore
T@"ACAccount",&,N,Sic_setActiveStoreAccount:
T@"ACAccount",&,N,Sic_setActiveLockerAccount:
T@"ACAccount",R,N
T@"ACAccountStore",R,N
_playerDelegateInfoTokens
hasTriggerName
triggerName
setTriggerName:
_triggerName
T@"NSString",&,N,V_triggerName
addCloudItemID:idType:
addGlobalPlaylistID:
insertCloudItemID:idType:atIndex:
enumerateCloudItemIDsUsingBlock:
count
_itemIDs
_idTypes
defaultActiveAccountDSID
setDefaultActiveAccountDSID:
defaultActiveLockerAccountDSID
setDefaultActiveLockerAccountDSID:
defaultStorefrontIdentifier
setDefaultStorefrontIdentifier:
T@"NSNumber",C,N
_propertiesToSaveForProperties:
_activeLockerAccountDSID
_localStoreAccountProperties
initWithRequestContext:withRequestMethod:
initWithRequestContext:withRequestMethod:andBodyDictionary:
_requestMethod
_bodyDictionary
pageDetailsType
actionDetailsType
hasPageId
pageType
setPageType:
setHasPageType:
hasPageType
pageTypeAsString:
StringAsPageType:
clearPageDetails
addPageDetails:
pageDetailsCount
pageDetailsAtIndex:
hasTargetId
setTargetType:
setHasTargetType:
hasTargetType
targetTypeAsString:
StringAsTargetType:
setActionType:
setHasActionType:
hasActionType
actionTypeAsString:
StringAsActionType:
hasActionURL
clearActionDetails
addActionDetails:
actionDetailsCount
actionDetailsAtIndex:
hasEventType
hasPageUrl
hasImpression
pageId
setPageId:
pageDetails
setPageDetails:
targetId
setTargetId:
actionURL
setActionURL:
actionDetails
setActionDetails:
eventType
setEventType:
pageUrl
setPageUrl:
impression
setImpression:
_actionDetails
_actionURL
_eventType
_impression
_pageDetails
_pageId
_pageType
_pageUrl
_targetId
_targetType
T@"NSString",&,N,V_pageId
Ti,N,V_pageType
T@"NSMutableArray",&,N,V_pageDetails
T@"NSString",&,N,V_targetId
Ti,N,V_targetType
Ti,N,V_actionType
T@"NSString",&,N,V_actionURL
T@"NSMutableArray",&,N,V_actionDetails
T@"NSString",&,N,V_eventType
T@"NSString",&,N,V_pageUrl
T@"ICIAMImpressionNode",&,N,V_impression
initWithItemID:title:storeFrontID:mediaKind:accountID:matchStatus:flavor:
adamID
matchStatus
storeFrontID
flavor
_adamID
_matchStatus
_title
_storeFrontID
_flavor
T@"NSNumber",R,C,N,V_adamID
T@"NSNumber",R,C,N,V_accountID
T@"NSNumber",R,C,N,V_matchStatus
T@"NSString",R,C,N,V_title
T@"NSString",R,C,N,V_storeFrontID
T@"NSString",R,C,N,V_mediaKind
T@"NSString",R,C,N,V_flavor
performRequest:withResponseHandler:
_activeSessions
initWithUserIdentityDelegationAccountUUIDs:requestContext:timeoutInterval:
Td,R,N,V_timeoutInterval
albumName
setAlbumName:
_albumName
T@"NSString",C,N,V_albumName
activeWatchKitUser
setActiveWatchKitUser:
isActiveWatchKitUser
_activeWatchKitUser
TB,N,GisActiveWatchKitUser,V_activeWatchKitUser
initWithRadioStationProviderResourceDictionary:
_url
T@"NSURL",R,C,N,V_url
T@"NSString",R,C,N,V_bundleIdentifier
ageVerificationStateNotRequiredForUserIdentity:
ageVerificationStateNotRequiredForUserIdentity:withError:
ageVerificationStateNotRequiredForUserIdentity:withTreatment:
ageVerificationStateNotRequiredForUserIdentity:withTreatment:verificationURL:
cachedStateForDSID:
_stateFromDictionaryRepresentation:DSID:
_initWithUserIdentity:status:treatment:verificationURL:error:
initWithUserIdentity:ageVerifier:treatment:verificationURL:
isDynamic
saveToUserDefaults
_dictionaryRepresentationWithDSID:
treatment
verificationURL
ageVerifier
_treatment
_verificationURL
_ageVerifier
T@"ICAgeVerifier",R,C,N,V_ageVerifier
dynamic
TB,R,N,GisDynamic
Tq,R,N,V_treatment
Tq,R,N,V_status
T@"NSURL",R,C,N,V_verificationURL
T@"ICUserIdentity",R,N,V_userIdentity
_finishEnrichmentWithBodyDictionary:completionHandler:
_newDefaultRequestBodyDictionary
_newDefaultRequestBodyDictionaryWithResponseCode:error:
_sendEnrichmentRequestWithURL:preflightResponse:completionHandler:
_sendPreflightRequestWithCompletionHandler:
_sendSilentSMSRequestWithMessage:number:preflightResponse:completionHandler:
isDeepLink
setDeepLink:
_mobileSubscriberCountryCode
_mobileSubscriberNetworkCode
_IMEI
_deepLink
deepLink
TB,N,GisDeepLink,V_deepLink
setExpirationDate:
setDeviceGUID:
T@"NSString",C,N,V_token
T@"NSDate",C,N,V_expirationDate
T@"NSString",C,N,V_deviceGUID
addValue:timestamp:
addValuesFromHistory:
enumerateValuesUsingBlock:
firstValueAfterOrEqualToTimestamp:
firstValueBeforeTimestamp:
firstValueBeforeOrEqualToTimestamp:
lastValue
lastValueAndTimestamp:
removeAllValues
removeValuesBeforeTimestamp:
initWithValue:timestamp:
timestamp
value
_timestamp
_value
TQ,R,N,V_timestamp
T@,R,N,V_value
trigger
setTrigger:
setHasTrigger:
hasTrigger
triggerAsString:
StringAsTrigger:
setDate:
setHasDate:
hasDate
setInterval:
setHasInterval:
hasInterval
hasNotification
date
interval
notification
setNotification:
_date
_interval
_notification
_trigger
Ti,N,V_trigger
Td,N,V_date
Td,N,V_interval
T@"NSString",&,N,V_notification
initWithVersion:contextID:contentInfo:returningError:
getPlayerDelegateInfoDataUsingPlayerDelegateInfoResponseData:returningData:error:
getStreamerInfoContextDataUsingPlayerInfoContextData:returningData:error:
playerInfoContextRequestData
_playerInfoContextRequestData
T@"NSData",R,C,N,V_playerInfoContextRequestData
initWithItemResponseDictionary:
streamProtocol
streamURL
keyCertificateURL
keyServerURL
isiTunesStoreStream
ICStoreRadioStreamFlavorWithString:
ICStoreRadioStreamProtocolWithString:
iTunesStoreStream
TB,R,N,GisiTunesStoreStream
shortDebugName
setShortDebugName:
setIsActive:
dsid
setDsid:
homeUserIDs
setHomeUserIDs:
ageVerificationRequired
setAgeVerificationRequired:
music
setMusic:
setTv:
T@"NSArray",C,N
T@"ICMusicUserState",&,N
T@"ICTVUserState",&,N
redactedDescription
digest
_isActive
_ageVerificationRequired
_homeUserIDs
_music
_shortDebugName
T@"NSString",C,N,V_shortDebugName
TB,N,V_isActive
T@"NSNumber",C,N,V_dsid
T@"NSString",C,N,V_alternateDSID
T@"NSArray",C,N,V_homeUserIDs
T@"NSString",C,N,V_firstName
T@"NSString",C,N,V_lastName
T@"NSString",C,N,V_username
TB,N,V_ageVerificationRequired
T@"ICMusicUserState",&,N,V_music
T@"ICTVUserState",&,N,V_tv
handleButtonAction:usingRequestContext:withCompletionHandler:
handleStoreDialogResponse:usingRequestContext:withCompletionHandler:
handleStoreDialogResponse:usingRequestContext:withDialogTimeout:withCompletionHandler:
_handleDefaultStoreDialogResponse:usingRequestContext:withDialogTimeout:withCompletionHandler:
_handleAuthenticationStoreDialogResponse:usingRequestContext:withDialogTimeout:withCompletionHandler:
_handleBuyButtonAction:usingRequestContext:withCompletionHandler:
_handleGotoButtonAction:usingRequestContext:withCompletionHandler:
_handleFamilyPermissionButtonAction:usingRequestContext:completion:
_allowsHandlingNonAuthenticationDialogs
_shouldRecordLastAuthenticationDialogResponseTime
allowsHandlingNonAuthenticationDialogs
setAllowsHandlingNonAuthenticationDialogs:
shouldRecordLastAuthenticationDialogResponseTime
setShouldRecordLastAuthenticationDialogResponseTime:
TB,N,V_allowsHandlingNonAuthenticationDialogs
TB,N,V_shouldRecordLastAuthenticationDialogResponseTime
ic_dataWithFairPlayBytes:length:
playInfoData
T@"NSData",R,N
identityWithIdentifier:
externalIdentifier
setExternalIdentifier:
nameComponents
setNameComponents:
imageURL
setImageURL:
T@"NSPersonNameComponents",C,N
T@"NSURL",C,N
serverID
setServerID:
Tq,N
T@"NSUUID",C,N
_initWithBlock:
_serverID
_externalIdentifier
_nameComponents
_imageURL
Tq,N,V_serverID
T@"NSUUID",C,N,V_identifier
T@"NSString",C,N,V_externalIdentifier
T@"NSPersonNameComponents",C,N,V_nameComponents
T@"NSURL",C,N,V_imageURL
_participant
_playbackSyncState
_query
T@"ICDeviceSetupStatusMonitor",R,N
isSetupAssistantComplete
setSetupAssistantComplete:
isDeviceSetupComplete
performBlockAfterBuddySetup:
performBlockAfterDeviceSetup:
_runAllPendingBlocksOfType:
_workQueue
_pendingBuddyCompleteBlocks
_pendingSetupCompleteBlocks
_setupAssistantComplete
_watchInitialSyncIsComplete
_setupAssistantFinishedNotifyToken
_setupAssistantLaunchedNotifyToken
setupAssistantComplete
TB,N,GisSetupAssistantComplete
deviceSetupComplete
TB,R,N,GisDeviceSetupComplete
serverError
dialog
T@"NSError",R,C,N
T@"ICStoreDialogResponse",R,C,N
initWithResponseDictionary:requestDate:urlBag:
authorized
shouldCancelPurchaseBatch
downloadQueueItemCount
jingleAction
subscriptionKeyBagData
_requestDate
_participantQuery
syncCommandsType
hasBundleID
clearSyncCommands
addSyncCommands:
syncCommandsCount
syncCommandsAtIndex:
bundleID
setBundleID:
syncCommands
setSyncCommands:
_bundleID
_syncCommands
T@"NSString",&,N,V_bundleID
T@"NSMutableArray",&,N,V_syncCommands
_autoPlayMode
_repeatPlayMode
_shufflePlayMode
authenticateTask:handleDialogRequest:completion:
initWithBooleanHandler:
initWithObjectHandler:
failWithError:
finishWithBooleanResult:error:
finishWithObjectResult:error:
startWithTimeout:
startWithTimeout:queue:
_invalidate
_booleanHandler
_didFire
_objectHandler
_timeout
_timeoutTimer
initWithClientInfo:
initWithClientInfo:authenticationProvider:
setAuthenticationProvider:
setClientInfo:
setDeviceInfo:
setNetworkConstraints:
_allowsMutation
networkConstraints
clientInfo
deviceInfo
authenticationProvider
_networkConstraints
_deviceInfo
_authenticationProvider
T@"ICClientInfo",R,C,N,V_clientInfo
T@"ICDeviceInfo",R,N,V_deviceInfo
T@"ICURLResponseAuthenticationProvider",R,N,V_authenticationProvider
T@"ICNetworkConstraints",R,C,N,V_networkConstraints
messageFromData:
dataFromMessage:
traceIdentifierForMessage:
initWithDictionary:
reportEventURL
serialCheckURL
syncURL
resourceDomainURL
syncPollingInterval
_dictionary
T@"ICMusicAccountNotificationsSettingsManager",R,N
getAccountNotificationsWithCompletionHandler:
setAccountNotificationsArtistContentFeature:withCompletionHandler:
setCachedAccountNotificationsShowInLibraryEnabled:
cachedAccountNotificationsShowInLibrarySwitch
_getSwitchesDependingOnSubscriptionStatus:withResponse:togglingSwitchesToValue:
flattenedTracksWithTracks:
initWithResponseDictionary:responseVersion:expirationDate:
afterPromoContentTrack
beforePromoContentTrack
hasStartTime
radioStreamAssets
isSkippable
likeState
serverTrackInfo
storePlatformMetadata
trackType
_hlsAssetFromAssetDictionary:
parentTrack
_responseVersion
_parentTrack
T@"ICStorePlatformMetadata",R,C,N
skippable
TB,R,N,GisSkippable
T@"ICRadioStationTrack",R,N
T@"ICRadioStationTrack",R,N,V_parentTrack
delegationServiceConnectionDidClose:
delegationServiceConnection:didReceiveRequest:
delegationServiceConnection:didEncouterError:
delegationServicePairingSession:sendData:withCompletionHandler:
parser:didParseMessage:
initWithConnectionRole:inputStream:outputStream:securitySettings:
sendRequest:withResponseHandler:
sendResponse:forRequest:withCompletionHandler:
_nextRequestUniqueID
_sendMessage:withCompletionHandler:
_sendRequest:withResponseHandler:
_sendResponse:forRequest:withCompletionHandler:
_streamDidClose
_streamDidParseMessage:
_finishPendingRequestsWithError:
_streamEncounteredError:
connectionRole
_isPaired
_isStarted
_messageParser
_nextRequestID
_pairingSession
_pendingRequestIDToRequestContext
_streamReader
_streamReaderQueue
_streamWriter
_streamWriterQueue
_connectionRole
T@"<ICDelegationServiceConnectionDelegate>",W,N
Tq,R,N,V_connectionRole
T@"ICDelegationServiceSecuritySettings",R,N,V_securitySettings
initWithRequest:responseHandler:
T@"ICPBDGSRequest",R,N,V_request
T@?,R,C,N,V_responseHandler
referralWithPlaylistGlobalID:
referralWithAlbumAdamID:
albumAdamID
_playlistGlobalID
_albumAdamID
T@"NSString",R,C,N,V_playlistGlobalID
Tq,R,N,V_albumAdamID
actionParametersType
hasDisplayText
requiresDelegate
setRequiresDelegate:
setHasRequiresDelegate:
hasRequiresDelegate
clearActionParameters
addActionParameters:
actionParametersCount
actionParametersAtIndex:
hasClickEvent
messageRemovalPolicy
setMessageRemovalPolicy:
setHasMessageRemovalPolicy:
hasMessageRemovalPolicy
messageRemovalPolicyAsString:
StringAsMessageRemovalPolicy:
displayText
setDisplayText:
actionParameters
setActionParameters:
clickEvent
setClickEvent:
_actionParameters
_clickEvent
_displayText
_messageRemovalPolicy
_requiresDelegate
T@"NSString",&,N,V_displayText
TB,N,V_requiresDelegate
T@"NSMutableArray",&,N,V_actionParameters
T@"ICIAMMetricEvent",&,N,V_clickEvent
Ti,N,V_messageRemovalPolicy
initWithStoreRequestContext:messageIdentifier:params:
_messageIdentifier
_params
shouldPreventLeaseAcquisition
setShouldPreventLeaseAcquisition:
shouldRequireLeaseAcquisition
setShouldRequireLeaseAcquisition:
isTriggeredByLeasePrevention
setTriggeredByLeasePrevention:
_shouldPreventLeaseAcquisition
_shouldRequireLeaseAcquisition
_triggeredByLeasePrevention
TB,N,V_shouldPreventLeaseAcquisition
TB,N,V_shouldRequireLeaseAcquisition
triggeredByLeasePrevention
TB,N,GisTriggeredByLeasePrevention,V_triggeredByLeasePrevention
currentConnectionTypeHeader
_shouldPersonalizeRequestForClientInfo:personalizationStyle:
additionalHTTPCookies
buildStoreURLRequestWithURLRequest:builderProperties:completionHandler:
_getSignatureDataForRequest:urlBag:completionHandler:
_stringForCachePolicy:
_shouldPersonalizeRequest
anisetteVersion
setAnisetteVersion:
shouldUseMescalSigning
setShouldUseMescalSigning:
shouldParseBodyData
setShouldParseBodyData:
shouldRequireURLBag
setShouldRequireURLBag:
machineDataSyncState
setMachineDataSyncState:
setAdditionalHTTPCookies:
additionalQueryItems
setAdditionalQueryItems:
JSSignConfiguration
setJSSignConfiguration:
_shouldUseMescalSigning
_shouldParseBodyData
_shouldRequireURLBag
_anisetteVersion
_machineDataSyncState
_additionalHTTPCookies
_additionalQueryItems
_JSSignConfiguration
T@"ICStoreRequestContext",R,C,N
Tq,N,V_anisetteVersion
TB,N,V_shouldUseMescalSigning
TB,N,V_shouldParseBodyData
TB,N,V_shouldRequireURLBag
T@"NSString",C,N,V_machineDataSyncState
T@"NSDictionary",C,N,V_additionalHTTPCookies
T@"NSArray",C,N,V_additionalQueryItems
T@"ICJSSignConfiguration",C,N,V_JSSignConfiguration
initWithAccountStoreOptions:
externalChangeHandler
setExternalChangeHandler:
_onceWithCompletionHandler:
_getXPCConnectionWithCompletion:
_accountStoreOptions
_externalChangeHandler
_hasReceivedConnectionInvalidation
T@?,C,N,V_externalChangeHandler
reason
setReason:
allowsFallbackToExpiredStatus
setAllowsFallbackToExpiredStatus:
allowsFallbackToStatusNeedingReload
setAllowsFallbackToStatusNeedingReload:
shouldReturnLastKnownStatusOnly
setShouldReturnLastKnownStatusOnly:
carrierBundleProvisioningStyle
setCarrierBundleProvisioningStyle:
requestIdentifier
shouldBypassEnforcementOfPrivacyAcknowledgement
setShouldBypassEnforcementOfPrivacyAcknowledgement:
_allowsFallbackToExpiredStatus
_allowsFallbackToStatusNeedingReload
_shouldReturnLastKnownStatusOnly
_shouldBypassEnforcementOfPrivacyAcknowledgement
_reason
_carrierBundleProvisioningStyle
_requestIdentifier
TB,N,V_shouldBypassEnforcementOfPrivacyAcknowledgement
Tq,N,V_reason
TB,N,V_allowsFallbackToExpiredStatus
TB,N,V_allowsFallbackToStatusNeedingReload
TB,N,V_shouldReturnLastKnownStatusOnly
Tq,N,V_carrierBundleProvisioningStyle
T@"NSUUID",R,N,V_requestIdentifier
_migrateDatabaseFiles
_defaultDatabasePath
_eventsDatabaseTableName
_propertiesDatabaseTableName
_setupDatabase:
_removeDatabaseReturningError:
currentEventsRevision
setCurrentEventsRevision:
eventsRevisionVersionToken
insertPlayActivityEvent:withRevision:returningError:
performTransactionWithBlock:
getPlayActivityEvents:relevantRevisionsIndexSet:withStartRevision:endRevision:additionalRevisionsIndexSet:ignoredRevisionsIndexSet:error:
getPlayActivityEvents:relevantRevisionsIndexSet:withStartRevision:endRevision:storeAccountID:additionalRevisionsIndexSet:ignoredRevisionsIndexSet:error:
removePlayActivityEventsUpToRevision:returningError:
revisionsIndexSetForPlayActivityEvents:
revisionsIndexSetForPlayActivityEventPersistentIDs:
_getPlayActivityEvents:relevantRevisionsIndexSet:withStartRevision:endRevision:storeAccountID:shouldFilterStoreAccountID:additionalRevisionsIndexSet:ignoredRevisionsIndexSet:error:
_revisionsIndexSetUsingPersisentIDGenerationBlock:count:
_setValue:forDatabasePropertyKey:
_valueForDatabasePropertyKey:
_databaseConnection
accountUniqueIdentifier
setAccountUniqueIdentifier:
_accountUniqueIdentifier
TQ,N,V_accountUniqueIdentifier
_initWithExtendedSubscriptionStatus:
capabilities
hasCapability:
statusType
reasonType
eligibleOffers
_statusType
_reasonType
_eligibleOffers
Tq,R,N,V_statusType
Tq,R,N,V_reasonType
T@"NSArray",R,C,N,V_eligibleOffers
initWithDataRepresentation:
isEqualToEvent:
dataRepresentation
persistentID
_mutableCopyClass
autoPlayMode
buildFeatures
containerIDs
containerType
deviceName
displayType
endReasonType
enqueuerProperties
eventDate
eventTimeZone
householdID
itemIDs
itemDuration
itemEndTime
itemStartTime
itemType
lyricsDisplayedCharacterCount
lyricsLanguage
mediaType
isOffline
isPrivateListeningEnabled
queueGroupingID
reasonHintType
recommendationData
repeatPlayMode
requestingBundleIdentifier
requestingBundleVersion
isSBEnabled
shufflePlayMode
isSiriInitiated
sourceType
storeAccountID
timedMetadata
trackInfo
audioQualityPreference
playbackFormatPreference
targetedAudioQuality
providedAudioQuality
sharedActivityGroupSizeCurrent
sharedActivityGroupSizeMax
externalID
personalizedContainerID
storeID
version
_buildFeatures
_containerIDs
_containerType
_deviceName
_displayType
_endReasonType
_enqueuerProperties
_eventDate
_eventTimeZone
_externalID
_householdID
_itemDuration
_itemEndTime
_itemStartTime
_itemType
_lyricsDisplayedCharacterCount
_lyricsLanguage
_mediaType
_offline
_persistentID
_personalizedContainerID
_queueGroupingID
_reasonHintType
_recommendationData
_requestingBundleIdentifier
_requestingBundleVersion
_SBEnabled
_siriInitiated
_sourceType
_storeAccountID
_storeID
_timedMetadata
_trackInfo
_version
_audioQualityPreference
_playbackFormatPreference
_targetedAudioQuality
_providedAudioQuality
_sharedActivityGroupSizeCurrent
_sharedActivityGroupSizeMax
Tq,R,N,V_version
TQ,R,N,V_autoPlayMode
T@"NSArray",R,C,N,V_buildFeatures
T@"NSString",R,C,N,V_buildVersion
T@"ICPlayActivityEventContainerIDs",R,C,N,V_containerIDs
TQ,R,N,V_containerType
T@"NSString",R,C,N,V_deviceName
TQ,R,N,V_displayType
TQ,R,N,V_endReasonType
T@"ICPlayActivityEnqueuerProperties",R,C,N,V_enqueuerProperties
T@"NSDate",R,C,N,V_eventDate
TQ,R,N,V_eventType
T@"NSTimeZone",R,C,N,V_eventTimeZone
T@"NSString",R,C,N,V_householdID
T@"ICPlayActivityEventItemIDs",R,C,N,V_itemIDs
Td,R,N,V_itemDuration
Td,R,N,V_itemEndTime
Td,R,N,V_itemStartTime
TQ,R,N,V_itemType
TQ,R,N,V_lyricsDisplayedCharacterCount
T@"NSString",R,C,N,V_lyricsLanguage
TQ,R,N,V_mediaType
offline
TB,R,N,GisOffline,V_offline
T@"NSNumber",R,C,N,GisPrivateListeningEnabled,V_privateListeningEnabled
T@"NSString",R,C,N,V_queueGroupingID
TQ,R,N,V_reasonHintType
T@"NSData",R,C,N,V_recommendationData
TQ,R,N,V_repeatPlayMode
T@"NSString",R,C,N,V_requestingBundleIdentifier
T@"NSString",R,C,N,V_requestingBundleVersion
SBEnabled
TB,R,N,GisSBEnabled,V_SBEnabled
TQ,R,N,V_shufflePlayMode
siriInitiated
T@"NSNumber",R,C,N,GisSiriInitiated,V_siriInitiated
TQ,R,N,V_sourceType
TQ,R,N,V_storeAccountID
Tq,R,N,V_systemReleaseType
T@"NSData",R,C,N,V_timedMetadata
T@"NSData",R,C,N,V_trackInfo
TQ,R,N,V_audioQualityPreference
TQ,R,N,V_playbackFormatPreference
T@"ICPlayActivityAudioQualityProperties",R,C,N,V_targetedAudioQuality
T@"ICPlayActivityAudioQualityProperties",R,C,N,V_providedAudioQuality
TQ,R,N,V_sharedActivityGroupSizeCurrent
TQ,R,N,V_sharedActivityGroupSizeMax
T@"NSString",R,C,N,V_containerID
T@"NSString",R,C,N,V_externalID
T@"NSString",R,C,N,V_personalizedContainerID
T@"NSString",R,C,N,V_storeID
setAutoPlayMode:
setBuildFeatures:
setBuildVersion:
setContainerIDs:
setContainerType:
setDeviceName:
setDisplayType:
setEndReasonType:
setEnqueuerProperties:
setEventDate:
setEventTimeZone:
setExternalID:
setFeatureName:
setHouseholdID:
setInternalBuild:
setItemIDs:
setItemDuration:
setItemEndTime:
setItemStartTime:
setItemType:
setLyricsDisplayedCharacterCount:
setLyricsLanguage:
setMediaType:
setOffline:
setPersistentID:
setPersonalizedContainerID:
setQueueGroupingID:
setReasonHintType:
setRecommendationData:
setRepeatPlayMode:
setRequestingBundleIdentifier:
setRequestingBundleVersion:
setSBEnabled:
setShufflePlayMode:
setSiriInitiated:
setSourceType:
setStoreAccountID:
setStoreFrontID:
setStoreID:
setSystemReleaseType:
setTimedMetadata:
setTrackInfo:
setAudioQualityPreference:
setPlaybackFormatPreference:
setTargetedAudioQuality:
setProvidedAudioQuality:
setSharedActivityGroupSizeCurrent:
setSharedActivityGroupSizeMax:
TQ,D,N
T@"ICPlayActivityEventContainerIDs",C,D,N
T@"ICPlayActivityEnqueuerProperties",C,D,N
T@"NSTimeZone",C,D,N
T@"ICPlayActivityEventItemIDs",C,D,N
Td,D,N
TB,D,N,GisOffline
T@"NSNumber",C,D,N,GisPrivateListeningEnabled
T@"NSData",C,D,N
TB,D,N,GisSBEnabled
T@"NSNumber",C,D,N,GisSiriInitiated
T@"ICPlayActivityAudioQualityProperties",C,D,N
TB,D,N,GisInternalBuild
setPhoneNumber:
initWithDictionaryRepresentation:requiringDSID:
dictionaryRepresentationIncludingDSID:
initWithStringRepresentation:
T@"NSString",C,N,V_phoneNumber
imagesType
messageActionsType
contentParametersType
hasTitle
hasSubtitle
hasBody
clearImages
addImages:
imagesCount
imagesAtIndex:
clearMessageActions
addMessageActions:
messageActionsCount
messageActionsAtIndex:
clearContentParameters
addContentParameters:
contentParametersCount
contentParametersAtIndex:
hasPageEvent
hasCloseClickEvent
hasCardClickEvent
subtitle
setSubtitle:
body
setBody:
images
setImages:
messageActions
setMessageActions:
contentParameters
setContentParameters:
pageEvent
setPageEvent:
closeClickEvent
setCloseClickEvent:
cardClickEvent
setCardClickEvent:
_body
_cardClickEvent
_closeClickEvent
_contentParameters
_images
_messageActions
_pageEvent
_subtitle
T@"NSString",&,N,V_title
T@"NSString",&,N,V_subtitle
T@"NSString",&,N,V_body
T@"NSMutableArray",&,N,V_images
T@"NSMutableArray",&,N,V_messageActions
T@"NSMutableArray",&,N,V_contentParameters
T@"ICIAMMetricEvent",&,N,V_pageEvent
T@"ICIAMMetricEvent",&,N,V_closeClickEvent
T@"ICIAMMetricEvent",&,N,V_cardClickEvent
initWithFilePath:sinfs:
removeDRMWithCompletionHandler:
_mediaFilePath
_sinfs
_newFileExtension
initWithURLResponse:urlRequest:bodyData:performanceMetrics:
initWithURLResponse:urlRequest:bodyDataURL:performanceMetrics:
_parseServerError
_parseServerErrorDictionary:
_initializeMusicKitURLResponse
serverCorrelationKey
serverEnvironment
_serverCorrelationKey
_serverEnvironment
_serverError
T@"NSString",R,C,N,V_serverCorrelationKey
T@"NSString",R,C,N,V_serverEnvironment
T@"NSError",R,N,V_serverError
mediaServicesWereLost:
mediaServicesWereReset:
URLSession:assetDownloadTask:didFinishDownloadingToURL:
URLSession:assetDownloadTask:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:
URLSession:assetDownloadTask:didResolveMediaSelection:
URLSession:aggregateAssetDownloadTask:willDownloadToURL:
URLSession:aggregateAssetDownloadTask:didCompleteForMediaSelection:
URLSession:aggregateAssetDownloadTask:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:forMediaSelection:
URLSession:assetDownloadTask:willDownloadVariants:
enqueueAVDownloadRequest:withOptions:completionHandler:
enqueueAVDownloadRequest:toDestination:withOptions:completionHandler:
enqueueAVDownloadRequest:toDestination:withAVURLAsset:options:completionHandler:
enqueueAggregateAssetDownloadRequest:toDestination:withOptions:completionHandler:
enqueueAggregateAssetDownloadRequest:toDestination:withOptions:resourceLoaderDelegate:completionHandler:
enqueueAggregateAssetDownloadRequest:toDestination:withAVURLAsset:options:completionHandler:
initWithRemoteRequestOperation:
remoteRequestOperation
_remoteRequestOperation
T@"ICRemoteRequestOperation",R,N,V_remoteRequestOperation
operationWithVerificationRequest:
verificationRequest
_verificationRequest
T@"ICUserVerificationRequest",R,C,N,V_verificationRequest
initWithStatement:
dataForColumnIndex:
dataForColumnName:
doubleForColumnIndex:
doubleForColumnName:
intForColumnIndex:
intForColumnName:
int64ForColumnIndex:
int64ForColumnName:
numberForColumnIndex:
numberForColumnName:
numberOfColumns
stringForColumnIndex:
stringForColumnName:
columnIndexForColumnName:
_columnIndexByName
_statementWrapper
additionalRequestParameters
setAdditionalRequestParameters:
allowsExplicitContent
setAllowsExplicitContent:
playbackContext
setPlaybackContext:
isPreservingCurrentlyPlayingItem
setPreservingCurrentlyPlayingItem:
isDelegatedPrivateListeningEnabled
setDelegatedPrivateListeningEnabled:
setReasonType:
shouldResponseContainStationMetadata
setShouldResponseContainStationMetadata:
requestedTrackCount
setRequestedTrackCount:
setStationHash:
stationID
setStationID:
stationStringID
setStationStringID:
stationURL
setStationURL:
stationPlaybackAuthorizationToken
setStationPlaybackAuthorizationToken:
seedContentReference
setSeedContentReference:
nowPlayingContentReference
setNowPlayingContentReference:
queueContentReferences
setQueueContentReferences:
_allowsExplicitContent
_preservingCurrentlyPlayingItem
_shouldResponseContainStationMetadata
_additionalRequestParameters
_playbackContext
_delegatedPrivateListeningEnabled
_requestedTrackCount
_stationID
_stationStringID
_stationURL
_stationPlaybackAuthorizationToken
_seedContentReference
_nowPlayingContentReference
_queueContentReferences
T@"NSDictionary",C,N,V_additionalRequestParameters
TB,N,V_allowsExplicitContent
T@"ICRadioPlaybackHistory",C,N,V_playbackContext
preservingCurrentlyPlayingItem
TB,N,GisPreservingCurrentlyPlayingItem,V_preservingCurrentlyPlayingItem
T@"NSNumber",C,N,GisPrivateListeningEnabled,V_privateListeningEnabled
delegatedPrivateListeningEnabled
T@"NSNumber",C,N,GisDelegatedPrivateListeningEnabled,V_delegatedPrivateListeningEnabled
Tq,N,V_reasonType
TB,N,V_shouldResponseContainStationMetadata
Tq,N,V_requestedTrackCount
T@"NSString",C,N,V_stationHash
Tq,N,V_stationID
T@"NSString",C,N,V_stationStringID
T@"NSURL",C,N,V_stationURL
T@"NSString",C,N,V_stationPlaybackAuthorizationToken
T@"ICRadioContentReference",C,N,V_seedContentReference
T@"ICRadioContentReference",C,N,V_nowPlayingContentReference
T@"NSArray",C,N,V_queueContentReferences
subrulesType
setHasType:
hasType
typeAsString:
StringAsType:
ruleOperator
setRuleOperator:
setHasRuleOperator:
hasRuleOperator
ruleOperatorAsString:
StringAsRuleOperator:
clearSubrules
addSubrules:
subrulesCount
subrulesAtIndex:
hasTriggerCondition
hasTriggerEventName
hasRequiredApplicationContextBundleIdentifier
subrules
setSubrules:
triggerCondition
setTriggerCondition:
triggerEventName
setTriggerEventName:
requiredApplicationContextBundleIdentifier
setRequiredApplicationContextBundleIdentifier:
_requiredApplicationContextBundleIdentifier
_ruleOperator
_subrules
_triggerCondition
_triggerEventName
Ti,N,V_type
Ti,N,V_ruleOperator
T@"NSMutableArray",&,N,V_subrules
T@"ICIAMTriggerCondition",&,N,V_triggerCondition
T@"NSString",&,N,V_triggerEventName
T@"NSString",&,N,V_requiredApplicationContextBundleIdentifier
getListenerEndpointForService:completion:
listenerEndpointForService:error:
_listenerEndpointProviderConnection
initWithRequestContext:requestType:leaseID:mediaType:clientData:
clientData
_clientData
T@"NSData",R,C,N,V_clientData
T@"NSString",R,C,N,V_leaseID
Tq,R,N,V_mediaType
Tq,R,N,V_requestType
_timeZoneName
_sBEnabled
carrierBundleDeviceID
setCarrierBundleDeviceID:
libraryAuthTokenStatus
setLibraryAuthTokenStatus:
setLightweightSubscriptionStatus:
cloudLibrarySyncStatus
setCloudLibrarySyncStatus:
usesListeningHistory
setUsesListeningHistory:
cookies
setCookies:
T@"ICMusicLibraryAuthTokenStatus",C,N
T@"ICMusicSubscriptionStatus",C,N
T@"ICLightweightMusicSubscriptionStatus",C,N
T@"ICMusicUserStateCookies",C,N
_isDelegated
_usesListeningHistory
_carrierBundleDeviceID
_libraryAuthTokenStatus
_cloudLibrarySyncStatus
_cookies
T@"NSString",C,N,V_carrierBundleDeviceID
T@"ICMusicLibraryAuthTokenStatus",C,N,V_libraryAuthTokenStatus
T@"ICLightweightMusicSubscriptionStatus",C,N,V_lightweightSubscriptionStatus
Tq,N,V_cloudLibrarySyncStatus
TB,N,V_usesListeningHistory
T@"ICMusicUserStateCookies",C,N,V_cookies
TB,R,N,V_isDelegated
_characterDisplayedCount
_cloudPlaylistID
_containerAdamID
_equivalencySourceAdamID
_eventDateTimestamp
_eventSecondsFromGMT
_itemCloudID
_purchasedAdamID
_radioAdamID
_reportingAdamID
_subscriptionAdamID
_tvShowPurchasedAdamID
_tvShowSubscriptionAdamID
_cloudAlbumID
_eventTimeZoneName
_globalPlaylistID
_lyricLanguage
_lyricsID
_playMode
_playlistVersionHash
_internalBuild
_copyWithClass:
cloudAlbumID
cloudPlaylistID
globalPlaylistID
playlistVersionHash
Tq,R,N,V_adamID
T@"NSString",R,C,N,V_cloudAlbumID
TQ,R,N,V_cloudPlaylistID
T@"NSString",R,C,N,V_globalPlaylistID
T@"NSString",R,C,N,V_playlistVersionHash
T@"NSString",R,C,N,V_stationStringID
Tq,R,N,V_stationID
setAdamID:
setCloudAlbumID:
setCloudPlaylistID:
setGlobalPlaylistID:
setPlaylistVersionHash:
initWithRole:securitySettings:
prepareEncryptedSessionWithCompletionHandler:
receievedData:
getDecryptedDataForEncryptedData:withCompletionHandler:
getEncryptedDataForData:withCompletionHandler:
_encryptedDataForData:
_handlePairingSessionCompletionWithError:
_deriveEncryptionKeysReturningError:
_receivedData:
_sendData:withCompletionHandler:
role
_accessSerialQueue
_existingPairingCompletionHandlers
_inputKey
_inputNonce
_outputKey
_outputNonce
_state
_role
T@"<ICDelegationServicePairingSessionDelegate>",W,N,V_delegate
Tq,R,N,V_role
_handleUserIdentityStoreDidChange:
sharedBagMonitor
T@"ICURLBagMonitor",R,N
beginObservingBagWithHandler:
endObservingBagWithToken:
_invalidateBagExpirationTimer
_scheduleBagExpirationTimerForDate:
_handleBagExpirationTimerFired
_beginObservingBag
_endObservingBag
_requestBagWithPolicy:completionHandler:
_updateWithBag:
_bag
_bagExpirationTimer
T@"ICURLBag",R
purchaseHistoryID
setPurchaseHistoryID:
author
setAuthor:
setGenre:
datePurchased
setDatePurchased:
setArtworkURL:
isVPPLicensed
setVppLicensed:
vppOrganizationID
setVppOrganizationID:
vppOrganizationDisplayName
setVppOrganizationDisplayName:
_vppLicensed
_purchaseHistoryID
_author
_genre
_datePurchased
_vppOrganizationID
_vppOrganizationDisplayName
TQ,N,V_purchaseHistoryID
TQ,N,V_storeID
T@"NSString",C,N,V_title
T@"NSString",C,N,V_author
T@"NSString",C,N,V_genre
T@"NSDate",C,N,V_datePurchased
T@"NSURL",C,N,V_artworkURL
T@"NSString",C,N,V_redownloadParameters
vppLicensed
TB,N,GisVPPLicensed,V_vppLicensed
T@"NSString",C,N,V_vppOrganizationID
T@"NSString",C,N,V_vppOrganizationDisplayName
setStoreAdamID:
setLikeState:
_storeAdamID
_likeState
Tq,N,V_storeAdamID
Tq,N,V_likeState
keybagPath
setKeybagPath:
setTokenData:
_keybagPath
_tokenData
T@"NSString",C,N,V_keybagPath
T@"NSString",C,N,V_reason
T@"NSData",C,N,V_tokenData
initWithDelegateToken:storefrontIdentifier:resultError:
resultError
_resultError
T@"NSError",R,C,N,V_resultError
T@"NSString",R,C,N,V_storefrontIdentifier
_playerAnisetteMID
_playerDeviceGUID
_playerInfoContextTokens
_playerUserAgent
_hashValue
processInitialResponse:toRequest:withCompletionHandler:
processCompletedResponse:toRequest:withCompletionHandler:
_invalidateDeveloperTokenForInitialResponse:toRequest:withCompletionHandler:
_invalidateUserTokenForInitialResponse:toRequest:withCompletionHandler:
_updateRequest:forProcessedResponseOfStoreURLRequest:
_finishDelegationResponse
_requestUniqueID
_startDelegationResponse
ic_sharedRequestOperationQueueWithQualityOfService:
_handleLibraryAuthServiceClientTokenDidChangeDistributedNotification:
getTokenResultForDSID:forceRefresh:completion:
getTokenResultsForDSIDs:forceRefresh:completion:
addTokenResult:forDSID:completion:
getTokenStatusForDSIDs:forcingRefresh:completion:
sharedProvider
T@"ICLibraryAuthServiceClientTokenProvider",R,N
startService
stopService
getTokenForcingRefresh:completion:
getAllTokensForAssistantForcingRefresh:completion:
getTokenForDSID:forceRefresh:completion:
cachedTokenAndResetCache:
getTokenStatusForcingRefresh:completion:
getAllTokenStatusForAssistantForcingRefresh:completion:
_refreshTokenForDSID:forExternalRequest:completion:
_refreshTokensForDSIDs:forExternalRequest:completion:
_commitCache
_updateRefreshTimer
_shouldStopBackgroundRefreshForError:
_updateTokenCacheEntryForDSID:tokenResult:error:
_isPrivacyAcknowledgementRequired
_updateEntriesForAccountsChanges
_tokenCache
_isService
_siriConnection
initWithConnection:SQL:
connectionPointer
_connectionPointer
_SQL
Tr^v,R,N,V_connectionPointer
T@"NSString",R,C,N,V_SQL
_getSinfParamValue:
_hasRentalInfo
playerGUID
setPlayerGUID:
SICData
setSICData:
sinfs
setSinfs:
contentIdentifier
setContentIdentifier:
subscriptionPlaybackType
setSubscriptionPlaybackType:
_playerGUID
_SICData
_contentIdentifier
_subscriptionPlaybackType
T@"NSString",C,N,V_playerGUID
T@"NSData",C,N,V_SICData
T@"NSArray",C,N,V_sinfs
T@"NSNumber",C,N,V_contentIdentifier
T@"NSString",C,N,V_subscriptionPlaybackType
sharedPrivacyInfo
_onboardingKitPrivacyIdentifierForPrivacyIdentifier:
_queryPrivacyAcknowledgementRequiredForIdentifier:
T@"ICPrivacyInfo",R,N
privacyAcknowledgementRequiredForMedia
privacyAcknowledgementRequiredForMusic
privacyAcknowledgementRequiredForIdentifier:
privacyAcknowledgementRequiredForBundleIdentifier:
acknowledgePrivacyPolicyForIdentifier:completionHandler:
beginObservingPrivacyAcknowledgementForIdentifier:handler:
endObservingPrivacyAcknowledgementForIdentifier:withToken:
_privacyAcknowledgementRequiredForIdentifier:
_updateForPrivacyAcknowledgementChanged
shouldFlushTrackCache
alternatePlaylistURL
alternateKeyCertificateURL
alternateKeyServerURL
keyServerProtocolType
setITunesStoreStream:
setKeyCertificateURL:
setKeyServerURL:
playlistURL
setPlaylistURL:
setKeyServerProtocolType:
keyServerAdamID
setKeyServerAdamID:
setAudioTraits:
_isiTunesStoreStream
_keyCertificateURL
_keyServerURL
_playlistURL
_keyServerProtocolType
_keyServerAdamID
_audioTraits
T@"NSURL",C,N,V_playlistURL
T@"NSURL",C,N,V_keyCertificateURL
T@"NSURL",C,N,V_keyServerURL
T@"NSString",C,N,V_keyServerProtocolType
T@"NSNumber",C,N,V_keyServerAdamID
TB,N,GisiTunesStoreStream,V_isiTunesStoreStream
T@"NSSet",C,N,V_audioTraits
_sharedOperationQueue
_initWithRequestContext:isDelegatedLeaseSession:delegate:leaseStatus:
leaseStatus
isAutomaticallyRefreshingLease
performPlaybackRequest:completionHandler:
reloadFairPlayKeyStatusWithCompletionHandler:
_handlePlaybackLeaseDidEndPushNotification
_handleRemoteServerDidBecomeLikelyReachable
_receivedUserInteractionEvent
_setLeaseStatus:updatedLeaseExpirationDate:
_newOperationForPlaybackRequest:completionHandler:
_locked_performAutomaticRefresh
_locked_setLeaseStatus:updatedLeaseExpirationDate:
_locked_updateAutomaticRefreshProperties
_locked_handlePendingPlaybackLeaseDidEndPushNotificationIfReady
isDelegatedLeaseSession
leaseExpirationDate
_automaticRefreshTimerSource
_isPerformingAutomaticRefresh
_leaseStatus
_pendingLeaseAcquisitionRevisionID
_startedLeaseAcquisitionRevisionID
_hasPendingLeaseDidEndPushNotification
_delegatedLeaseSession
T@"<ICMusicSubscriptionLeaseSessionDelegate>",R,W,N,V_delegate
T@"NSDate",R,C,N,V_leaseExpirationDate
delegatedLeaseSession
TB,R,N,GisDelegatedLeaseSession,V_delegatedLeaseSession
T@"ICMusicSubscriptionLeaseStatus",R,C,N
automaticallyRefreshingLease
TB,R,N,GisAutomaticallyRefreshingLease
initWithInstantiationHandler:
sharedInstanceForKey:
incrementUsageCountForKey:
decrementUsageCountForKey:
_instantiationHandler
_stronglyHeldSharedInstances
_weaklyHeldSharedInstances
_usageCounts
hasProperNetworkConditionsToPlayMediaWithCompletion:
hasProperNetworkConditionsToShowCloudMediaWithCompletion:
isCellularDataRestrictedForMusicWithCompletion:
shouldProhibitMusicActionForCurrentNetworkConditionsWithCompletion:
isCellularDataRestrictedForVideosWithCompletion:
shouldProhibitVideosActionForCurrentNetworkConditionsWithCompletion:
isCellularDataRestrictedForStoreAppsWithCompletion:
shouldProhibitStoreAppsActionForCurrentNetworkConditionsWithCompletion:
canShowCloudDownloadButtonsWithCompletion:
canShowCloudMusicWithCompletion:
canShowCloudVideoWithCompletion:
_containerId
Tq,R,N,V_statusCode
initWithFilePath:
updateStoreProperty:forKey:completion:
getStorePropertyForKey:completion:
allStorePropertiesWithCompletion:
updateStoreProperty:forKey:bundleIdentifier:completion:
getStorePropertyForKey:bundleIdentifier:completion:
allApplicationStorePropertiesWithCompletion:
removeMessageEntry:completion:
getMessageEntryWithIdentifier:bundleIdentifier:completion:
getAllMessageEntriesWithCompletion:
getAllMessageEntriesForBundleIdentifier:completion:
getAllMessageEntriesForBundleIdentifiers:completion:
resetStoreWithCompletion:
addPendingMessageEvent:completion:
pendingMessageEventsWithCompletion:
removePendingMessageEventWithIdentifier:completion:
removeAllMetadataForBundleIdentifier:completion:
_defaultStoreFilePath
_load
_commit
_messageEntryCache
_globalPropertyCache
_applicationPropertyCache
_messageMetadataCache
_pendingEvents
initWithResponseDictionary:requestDate:
hasCacheControl
cacheControlMaxAge
ic_valueForHTTPHeaderField:
_cacheControlParameters
_exchangeDataWithSAPContext:requestContext:setupURL:responseData:completionHandler:
sapSession
setSapSession:
_sapSession
T@"ICSAPSession",&,N,V_sapSession
albumArtistName
genreName
setAlbumArtistName:
setComposerName:
setCopyright:
setDiscCount:
setDiscNumber:
setGenreName:
setCompilation:
setDuration:
setName:
storeAdamIdentifier
setStoreAdamIdentifier:
storeCloudIdentifier
setStoreCloudIdentifier:
setTrackCount:
setTrackNumber:
setYear:
universalCloudLibraryID
setUniversalCloudLibraryID:
_albumArtistName
_composerName
_copyright
_discCount
_discNumber
_genreName
_compilation
_duration
_storeAdamIdentifier
_storeCloudIdentifier
_trackCount
_trackNumber
_year
_universalCloudLibraryID
T@"NSString",C,N,V_albumArtistName
T@"NSString",C,N,V_composerName
T@"NSString",C,N,V_copyright
T@"NSNumber",C,N,V_discCount
T@"NSNumber",C,N,V_discNumber
T@"NSNumber",C,N,V_fileSize
T@"NSString",C,N,V_genreName
compilation
T@"NSNumber",C,N,GisCompilation,V_compilation
T@"NSNumber",C,N,V_duration
T@"NSString",C,N,V_kind
T@"NSString",C,N,V_name
T@"NSNumber",C,N,V_storeAdamIdentifier
T@"NSNumber",C,N,V_storeCloudIdentifier
T@"NSNumber",C,N,V_trackCount
T@"NSNumber",C,N,V_trackNumber
T@"NSNumber",C,N,V_year
T@"NSString",C,N,V_universalCloudLibraryID
_positionType
playerDeviceGUID
tokenRequests
playerUserAgent
playerAnisetteMID
setPlayerAnisetteMID:
setPlayerDeviceGUID:
setPlayerUserAgent:
setTokenRequests:
_tokenRequests
T@"NSData",C,N,V_playerAnisetteMID
T@"NSString",C,N,V_playerDeviceGUID
T@"NSString",C,N,V_playerUserAgent
T@"NSArray",C,N,V_tokenRequests
T@"NSMutableDictionary",R,C,N
initWithDSID:SICData:
cloudCredentialsTokenData
setCloudCredentialsTokenData:
_cloudCredentialsTokenData
T@"NSData",C,N,V_cloudCredentialsTokenData
standardDefaults
T@"ICDefaults",R,N
cloudMediaLibraryUID
setCloudMediaLibraryUID:
defaultStoreFront
cachedSubscriptionStatus
setCachedSubscriptionStatus:
cachedMusicUserTokens
setCachedMusicUserTokens:
pushNotificationState
setPushNotificationState:
mediaLibraryAccessApplicationIdentifiersWithTCCAcceptanceDates
setMediaLibraryAccessApplicationIdentifiersWithTCCAcceptanceDates:
lastActiveAccountDSID
setLastActiveAccountDSID:
lastCookieHeadersForRevokingMusicUserTokens
setLastCookieHeadersForRevokingMusicUserTokens:
lastAllowedInteractiveAuthenticationTime
setLastAllowedInteractiveAuthenticationTime:
authServiceClientTokenTimeToLive
authServiceClientTokenCache
setAuthServiceClientTokenCache:
lastAuthenticationDialogResponseTime
setLastAuthenticationDialogResponseTime:
setLastKnownUserAgeVerificationState:
lastKnownUserAgeVerificationState
lastKnownLocalStoreAccountProperties
setLastKnownLocalStoreAccountProperties:
lastKnownSubscriptionStatusBaseCacheKey
setLastKnownSubscriptionStatusBaseCacheKey:
setAccountNotificationsShowInLibraryDictionary:
accountNotificationsShowInLibraryDictionary
lastKnownHouseholdID
setLastKnownHouseholdID:
shouldForceStreamingOnlyKeysForPlayback
setShouldForceStreamingOnlyKeysForPlayback:
ignoreExtendedCertificateValidation
setIgnoreExtendedCertificateValidation:
bypassBagSanityChecks
deviceClassOverride
setDeviceClassOverride:
deviceModelOverride
setDeviceModelOverride:
fairPlayDeviceTypeOverride
setFairPlayDeviceTypeOverride:
hardwarePlatformOverride
setHardwarePlatformOverride:
productVersionOverride
setProductVersionOverride:
productPlatformOverride
setProductPlatformOverride:
networkTypeOverride
setNetworkTypeOverride:
networkLinkQualityOverride
setNetworkLinkQualityOverride:
chargingStateOverride
setChargingStateOverride:
batteryLevelOverride
setBatteryLevelOverride:
shouldForceiPhoneBehaviors
shouldRunAgeVerification
setShouldRunAgeVerification:
isExplicitContentAllowedForCurrentYear
setExplicitContentAllowedForCurrentYear:
isExplicitContentAllowedForExpirationYear
setExplicitContentAllowedForExpirationYear:
isGrazingPathEnabled
setGrazingPathEnabled:
isPrivacyAcknowledgementDisabledForMusic
shouldForcePrivacyAcknowledgementRequiredForMusic
setShouldForcePrivacyAcknowledgementRequiredForMusic:
isLegacyStoreCacheBusterEnabled
shouldForceLibraryRecommendationAnalysis
shouldOverrideSubscriptionStatusToGlide
shouldReduceLibraryRecommendationsXPCInterval
shouldTreatSubscriptionStatusAsExpired
shouldTreatSubscriptionStatusCheckAsIncomplete
shouldTreatSagaAddComputerCallAsFailed
shouldTreatInitialSagaImportAsFailed
automaticDownloadsEnabled
setAutomaticDownloadsEnabled:
deleteAutomaticDownloadsKey
allowLowAffinityRecommendations
shouldUseNewBagProtocol
shouldBypassURLBagCache
secureKeyRenewalTimeOverride
enableMultipathTCP
_musicUserDefaults
_shouldSpoofIPhoneRequestProperties
_shouldSpoofIPadRequestProperties
_setOrRemoveObject:forKey:
_setOrRemoveInternalDefaultsObject:forKey:
internalDefaults
_userDefaults
_internalDefaults
T@"NSUserDefaults",R,N,V_internalDefaults
T@"NSDictionary",C,N
Td,N
explicitContentAllowedForCurrentYear
TB,N,GisExplicitContentAllowedForCurrentYear
explicitContentAllowedForExpirationYear
TB,N,GisExplicitContentAllowedForExpirationYear
grazingPathEnabled
TB,N,GisGrazingPathEnabled
privacyAcknowledgementDisabledForMusic
TB,R,N,GisPrivacyAcknowledgementDisabledForMusic
legacyStoreCacheBusterEnabled
TB,R,N,GisLegacyStoreCacheBusterEnabled
_populateItemIdentifiers:
leaseCertificateData
setLeaseCertificateData:
leaseAssetIDData
setLeaseAssetIDData:
_leaseCertificateData
_leaseAssetIDData
T@"NSData",C,N,V_leaseCertificateData
T@"NSData",C,N,V_leaseAssetIDData
initWithTrack:
pauseTime
skipDate
_pauseTime
_serverTrackInfo
_skipDate
T@"NSNumber",R,C,N,V_pauseTime
T@"NSDate",R,C,N,V_skipDate
Tq,R,N,V_storeIdentifier
setPauseTime:
setServerTrackInfo:
setSkipDate:
initWithName:
T@"NSString",R,C,N,V_name
T@"NSUUID",R,C,N,V_uniqueIdentifier
timeZone
_timeZone
T@"NSTimeZone",R,C,N,V_timeZone
setTimeZone:
clearRunLoop
runLoopSourceRef
setRunLoopSourceRef:
_runLoopSourceRef
T^{__CFRunLoopSource=},N,V_runLoopSourceRef
T@"ICUserNotificationManager",R,N
displayUserNotification:withCompletionHandler:
_handleCallbackForUserNotification:responseFlags:
_contextForUserNotification
initWithRequestContext:buyParams:storeItemID:itemName:itemKind:
initWithRequestContext:platformMetadataItem:
_buyParams
_itemName
_itemKind
enumerateItemsUsingBlock:
allItems
accountIdentifier
enqueuerAccountIdentifier
rawResponse
T@,R,C,N
initWithResponses:
_childResponses
initWithRequestContext:allowsExplicitContent:isAutomatic:
_buildAndSendRequestForURL:
_getURLFromBagAndSendRequest
isAutomatic
setAutomatic:
storeURLRequest
setStoreURLRequest:
_automatic
automatic
TB,N,GisAutomatic,V_automatic
T@"ICStoreRequestContext",&,N,V_requestContext
T@"ICStoreURLRequest",&,N,V_storeURLRequest
enumerateRowsUsingBlock:
firstInt64Value
firstNumberValue
firstStringValue
_participantState
_payload
_transportControlState
validateExpirationForBundleIdentifier:withReplyBlock:
revokeMusicKitUserTokensForUserIdentity:withCompletion:
_hasEntitlementForStatusAccessExemptedFromUserConsentRequirement
privacyAcknowledgementPolicy
setPrivacyAcknowledgementPolicy:
isObservingCloudServiceStatus
beginObservingCloudServiceStatus
endObservingCloudServiceStatus
requestCapabilitiesWithCompletionHandler:
requestDeveloperTokenWithOptions:completionHandler:
requestUserTokenForDeveloperToken:completionHandler:
requestUserTokenForDeveloperToken:options:completionHandler:
requestMusicKitTokensWithOptions:completionHandler:
revokeMusicKitUserTokensForAccountDSID:withCompletion:
_beginTransactionForCloudServiceStatusMonitorConnectionWithIdentifier:
_endTransactionForCloudServiceStatusMonitorConnectionWithIdentifier:
_cloudServiceStatusMonitorConnectionForTransactionIdentifier:error:
_cloudServiceStatusMonitorConnectionWasInterrupted
_cloudServiceStatusMonitorConnectionWasInvalidated
_performCloudServiceStatusMonitorRequestWithDescription:requestHandler:errorHandler:
_resetCloudServiceStatusMonitorConnectionAllowingExplicitInvalidation:
authorizationStatusForScopes:
requestAuthorizationForScopes:completionHandler:
_validateAuthorizationExpiryWithCompletionHandler:
_requestCapabilitiesWithPrivacyPromptPolicy:requestCapabilitiesWithCompletionHandler:
_requestStorefrontCountryCodeWithCompletionHandler:
_requestStorefrontIdentifierWithCompletionHandler:
_locked_isObservingCloudServiceStatus
_beginObservingCloudServiceStatus
_didBeginObservingCloudServiceStatusWithToken:transactionIdentifier:
_endObservingCloudServiceStatusWithToken:
_didEndObservingCloudServiceStatusWithToken:transactionIdentifier:
_didEndRequestingTokenWithTransactionIdentifier:
_updateWithCapabilities:hasValidCapabilities:transactionIdentifier:
_updateWithStorefrontCountryCode:transactionIdentifier:
_updateWithStorefrontIdentifier:transactionIdentifier:
_registerCloudServerLaunchedNotifyToken
_cancelCloudServerLaunchedNotifyToken
_scheduleCloudServerLaunchTimeoutTimer
_invalidateCloudServerLaunchTimeoutTimer
_recoverObservingCloudServiceStatus
_refreshCloudServiceStatus
_scheduleTriggersForCloudServiceStatusObservationRecovery
_invalidateTriggersForCloudServiceStatusObservationRecovery
_cloudServiceStatusMonitorConnection
_cloudServiceStatusMonitorConnectionEstablishmentError
_activeTransactionIdentifiersForCloudServiceStatusMonitorConnection
_privacyAcknowledgementPolicy
_observingCloudServiceStatusRequestsCount
_observationToken
_transactionIdentifierForActiveObservationToken
_cloudServerLaunchedNotifyToken
_cloudServerLaunchTimeoutTimer
_capabilities
_hasValidCapabilities
_storefrontCountryCode
_developerTokenCompletionHandlers
_userTokenCompletionHandlers
_tokensCompletionHandlers
observingCloudServiceStatus
TB,R,GisObservingCloudServiceStatus
_finishDelegationRequest
_startDelegationRequest
_uniqueID
setContentTaste:forMediaItem:storeIdentifier:configuration:timeStamp:withCompletionHandler:
setContentTaste:forPlaylistGlobalID:configuration:withCompletionHandler:
setContentTaste:forAlbumStoreID:configuration:withCompletionHandler:
updateContentTasteForMediaItemsAndInvalidateLocalCache:configuration:withCompletionHandler:
sharedCloudContentTasteRequestListener
setContentTaste:forMediaItem:storeIdentifier:timeStamp:withCompletionHandler:
setContentTaste:forPlaylistGlobalID:withCompletionHandler:
setContentTaste:forAlbumStoreID:withCompletionHandler:
updateContentTasteForMediaItemsAndInvalidateLocalCache:withCompletionHandler:
_setupContentTasteServiceConnection
_notice
_applicationWillEnterForeground:
_applicationDidEnterBackground:
_wifiStateDidChangeNotification:
sharedController
airplaneModeChanged
connectionStateChanged:connection:dataConnectionStatusInfo:
connectionActivationError:connection:error:
anbrActivationState:enabled:
anbrBitrateRecommendation:bitrate:direction:
preferredDataSimChanged:
preferredDataServiceDescriptorChanged:
currentDataSimChanged:
currentDataServiceDescriptorChanged:
servingNetworkChanged:
connectionAvailability:availableConnections:
dataStatus:dataStatusInfo:
regDataModeChanged:dataMode:
dataSettingsChanged:
internetConnectionStateChanged:
internetConnectionActivationError:
internetDataStatusBasic:
internetDataStatus:
internetConnectionAvailability:
tetheringStatus:
tetheringStatus:connectionType:
serviceDisconnection:status:
dataRoamingSettingsChanged:status:
isNetworkReachable
_isAutoDownloadOnCellularAllowed
_hasCellularCapability
_hasWiFiCapability
_setNewIsNetworkReachable:networkType:
_registerPerAppNetworkDataAccessPolicyChangedNotification
_unregisterPerAppNetworkDataAccessPolicyChangedNotification
_uncachedIsAutoDownloadOnCellularAllowed
_uncachedIsShowingAllMusic
_onQueue_updateIsCellularDataRestrictedForMusic
_uncachedIsShowingAllVideo
_onQueue_updateCanShowCloudDownloadButtonsWithNotification:
_onQueue_updateCanShowCloudTracksWithNotification:
_hasProperNetworkConditionsToShowCloudMedia
_isAirplaneModeActive
_isCellularDataActive
_isCellularDataRestrictedForMusic
_isShowingAllMusic
_isShowingAllVideo
_isUpdateInProgress
_isWiFiEnabled
_isWiFiAssociated
_isEthernetWired
_isNetworkReachable
_canShowCloudMusic
_canShowCloudVideo
_canShowCloudDownloadButtons
_preferencesChangedNotifyToken
_preferencesChangedNotifyTokenIsValid
_networkType
_radiosPreferences
_ctServerConnection
_telephonyClient
_handleMusicUserTokensDidChangeDistributedNotification:
_decodeDeveloperTokenPart:
_getCacheKeyForDeveloperToken:requestContext:completion:
T@"ICMusicUserTokenCache",R,N
getCachedUserTokenForDeveloperToken:requestContext:completion:
setCachedUserToken:forDeveloperToken:requestContext:completion:
_persistCache
_postLocalChangeNotification
_cachedUserTokens
initWithRequestContext:buyParameters:includeKeybagSyncData:
initWithRequestContext:buyParametersString:includeKeybagSyncData:
_buyParameters
_parsedResponse
initWithUserIdentities:userIdentityStore:requestContext:netService:delegationAccountUUIDs:
_handleStartDelegationResponse:
_startDelegation
delegationAccountUUIDs
netService
userIdentities
_protocolHandler
_sessionIDToStreamContext
_delegationAccountUUIDs
_userIdentities
T@"<ICDelegationProviderServiceSessionDelegate>",W,N
T@"NSArray",R,C,N,V_delegationAccountUUIDs
T@"ICDelegationProviderNetService",R,N,V_netService
T@"NSArray",R,C,N,V_userIdentities
performAuthenticationToHandleResponse:toRequest:withCompletionHandler:
performAuthenticationUsingRequestContext:withCompletionHandler:
_performAuthenticationUsingRequestContext:usingVerificationInteractionLevel:withCompletionHandler:
_adjustedAuthenticationPolicyForResponse:withCompletionHandler:
stationMetadata
tracklistActionType
T@"ICRadioStationMetadata",R,N
T@"NSDate",R,C,N,V_assetExpirationDate
_storefronts
_currentRadioStationId
_demarkationPos
_explicitSetting
_queueId
initWithURLResponse:
contentDictionary
T@"NSArray",&,N,V_performanceMetrics
_traceId
finishWithResponse:requestDate:error:
_finishWithResult:tokens:error:
playInfoRequest
setPlayInfoRequest:
_playInfoRequest
T@"ICDelegationPlayInfoRequest",C,N,V_playInfoRequest
T@"ICStoreRequestContext",&,N,V_storeRequestContext
hasKey
hasValue
setKey:
setValue:
_key
T@"NSString",&,N,V_key
T@"NSString",&,N,V_value
initWithRequestContext:storeItemID:
initWithStoreRequestContext:fromRevision:
_syncResponse
_fromRevision
initWithIdentity:identityStore:
T@"ICUserIdentity",R,N,V_identity
machServiceName
ic_description
enhancedAudioSharedContentKeyPath
contentKeySession:didProvideContentKeyRequest:
contentKeySession:didProvideRenewingContentKeyRequest:
contentKeySession:didProvidePersistableContentKeyRequest:
contentKeySession:didUpdatePersistableContentKey:forContentKeyIdentifier:
contentKeySession:contentKeyRequest:didFailWithError:
contentKeySession:shouldRetryContentKeyRequest:reason:
contentKeySession:contentKeyRequestDidSucceed:
contentKeySessionContentProtectionSessionIdentifierDidChange:
contentKeySessionDidGenerateExpiredSessionReport:
initWithRequestContext:keyStore:
initWithRequestContext:keyStore:delegate:
addAsset:
addAsset:shouldPreloadKeys:waitForKeyIdentifiers:
removeAsset:
processKeyWithIdentifier:
pauseAutomaticKeyRenewal
resumeAutomaticKeyRenewal
waitForKeyRenewalsWithCompletionHandler:
waitForAllKeysToProcess
waitForAllKeysToProcessWithTimeout:
_performKeyDeliveryRequestForContentKeyRequest:persistResponse:isRenewal:
_scheduleKeyRefreshTimer
_renewExpiredKeys
_processKeyWithIdentifier:
_finishProcessingKeyWithIdentifier:
playbackToken
setPlaybackToken:
bypassCache
setBypassCache:
requestOfflineKeys
setRequestOfflineKeys:
allowFallbackToStreamingKeys
setAllowFallbackToStreamingKeys:
_keyStore
_pendingKeyIdentifiers
_pendingRenewalKeyIdentifiers
_renewalCompletionBlocks
_waitForKeysSemaphore
_playbackToken
_prefetchKeyIdentifiers
_prefetchKeyServerURL
_prefetchKeyCertificateURL
_prefetchedContentKeyStore
_keyRenewalDates
_keyRequestsPendingRenewal
_keyRenewalTimer
_automaticKeyRenewalPaused
_bypassCache
_requestOfflineKeys
_allowFallbackToStreamingKeys
T@"NSNumber",C,N,V_adamID
T@"NSString",C,N,V_playbackToken
TB,N,V_bypassCache
TB,N,V_requestOfflineKeys
TB,N,V_allowFallbackToStreamingKeys
Tq,N,V_keyServerProtocolType
invalidateCachedDeveloperTokenForClientInfo:clientType:requester:completionHandler:
_createMediaTokenServiceForClientInfo:clientType:requester:
_invalidateCachedDeveloperTokenForClientInfo:requester:usingMediaTokenService:
initWithClientInfo:options:
_didFetchMediaToken:withError:
clientType
setClientType:
_mediaTokenService
_clientType
Tq,N,V_clientType
getDeviceReceiverSettingsWithCompletion:
getDeviceSenderSettingsForReceiverName:securityMode:completion:
securityMode
password
_securityMode
_password
Tq,R,N,V_securityMode
T@"NSString",R,C,N,V_password
initWithTXTRecordData:
TXTRecordData
setDelegationAccountUUIDs:
setSecurityMode:
serviceVersion
setServiceVersion:
_serviceVersion
T@"NSArray",C,N,V_delegationAccountUUIDs
T@"NSString",C,N,V_deviceName
Tq,N,V_securityMode
Tq,N,V_serviceVersion
explanation
isInitialCheckboxValue
isBiometricAuthenticationAllowed
buttons
defaultButtonType
_buttonWithType:
_buttonTitleKeyForType:
_buttonActionKeyForType:
initialCheckboxValue
TB,R,N,GisInitialCheckboxValue
biometricAuthenticationAllowed
TB,R,N,GisBiometricAuthenticationAllowed
initWithType:isDefaultButton:title:action:
isDefaultButton
action
_isDefaultButton
TB,R,N,V_isDefaultButton
T@"ICStoreDialogResponseButtonAction",R,C,N,V_action
initWithResponseButtonActionDictionary:
buyParams
subtarget
URLString
actionDictionary
_actionDictionary
T@"NSDictionary",R,C,N,V_actionDictionary
_code
_contentTypeCode
_message
_handleSubscriptionStatusCacheDidChangeNotification:
_handleSubscriptionStatusCacheUnderlyingCachingPropertiesDidChangeNotification:
_handleSubscriptionStatusDidChangeFollowingPrivacyAcknowledgementNotification:
_handleSubscriptionStatusDidChangeDistributedNotification:
sharedStatusController
_hasEntitlementForMusicSubscriptionStatusService
deliverSubscriptionStatusResponse:forRemoteRequestWithUniqueIdentifier:error:
T@"ICMusicSubscriptionStatusController",R,N
getSubscriptionStatusWithCompletionHandler:
getSubscriptionStatusForUserIdentity:withCompletionHandler:
getSubscriptionStatusForUserIdentity:bypassingCache:withCompletionHandler:
performSubscriptionStatusRequest:withCompletionHandler:
performSubscriptionStatusRequest:withStatusHandler:
enableSubscriptionWithCompletionHandler:
enableSubscriptionForUserIdentity:withCompletionHandler:
disableSubscriptionWithCompletionHandler:
disableSubscriptionForUserIdentity:withCompletionHandler:
refreshSubscriptionWithCompletionHandler:
refreshSubscriptionForUserIdentity:withCompletionHandler:
refreshSubscriptionUsingRequestContext:withCompletionHandler:
invalidateCachedSubscriptionStatusWithCompletionHandler:
invalidateCachedSubscriptionStatusForUserIdentity:withCompletionHandler:
_cancelRemoteRequestingClientConnectionInvalidationTimer
_deliverSubscriptionStatusResponse:forRequest:error:
_didEndRemoteRequestWithUniqueIdentifier:
_invalidateRemoteRequestingClientConnection
_remoteRequestingClientConnection
_handleSeveredRemoteClientConnectionWithIdentifier:
_remoteRequestingClientConnectionInvalidationTimerDidExpire
_scheduleInvalidationOfRemoteRequestingClientConnection
_willBeginRemoteRequestWithUniqueIdentifier:statusHandler:
_willPerformSubscriptionStatusRequest:withStatusHandler:
_cancelPendingRequests
_handlePrivacyAcknowledgementRequirementChanged:
_numberOfActiveRemoteRequests
_privacyAcknowledgementObservationToken
_remoteRequestingClientConnectionIdentifier
_remoteRequestingClientConnectionInvalidationTimer
_statusHandlersForPendingIdenticalRequests
_handleTimeout
_stop
_acceptedConnections
_pendingUserIdentities
_sessionIDToRequestInfoMap
_timeoutDispatchSource
T@"ICDelegationConsumerServiceRequest",R,C,N,V_request
T@?,R,N,V_responseHandler
initWithResponseDictionary:requestedItemIdentifiers:
initWithURLResponse:requestedItemIdentifiers:
resultsDictionary
_enumerateResultDictionariesUsingBlock:
_accountIdentifier
_enqueuerAccountIdentifier
_requestedItemIdentifiers
authenticated
TB,R,N,GisAuthenticated
T@"NSNumber",R,C,N,V_accountIdentifier
T@"NSNumber",R,C,N,V_enqueuerAccountIdentifier
T@"NSArray",R,N,V_performanceMetrics
initWithMessageIdentifier:params:
initWithMessageIdentifier:params:eventIdentifier:
messageIdentifier
params
eventIdentifier
_eventIdentifier
T@"NSString",R,N,V_messageIdentifier
T@"NSDictionary",R,N,V_params
T@"NSString",R,N,V_eventIdentifier
dataSourceForNewSharedListeningSessionWithIdentity:
dataSourceForExistingSharedListeningSession:identity:
service
account
groupSessionIdentifier
groupSessionOptions
pluginIdentifier
rpcPath
trustHandler
applicationProtocol
T@"IDSService",R,N
T@"IDSAccount",R,N
T@"NSUUID",R,N
T@?,R,N
populateWithCompletion:
_provisionUserPseudonymWithCompletion:
_beginPseudonymAutoRenewal
_renewUserPseudonym
_revokeUserPseudonymWithCompletion:
_joinSharedListeningSessionWithCompletion:
sessionURLForBag:error:
setService:
setGroupSessionIdentifier:
setGroupSessionOptions:
sharedListeningSessionInviteURL
setSharedListeningSessionInviteURL:
sharedListeningSessionIdentifier
setSharedListeningSessionIdentifier:
sharedSessionToken
setSharedSessionToken:
report
setReport:
dataSourceErrorHandler
setDataSourceErrorHandler:
setAccount:
pseudonym
setPseudonym:
pseudonymRenewalTimer
setPseudonymRenewalTimer:
setQueue:
_service
_groupSessionIdentifier
_groupSessionOptions
_sharedListeningSessionInviteURL
_sharedListeningSessionIdentifier
_report
_dataSourceErrorHandler
_account
_pseudonym
_pseudonymRenewalTimer
T@"IDSService",&,N,V_service
T@"IDSAccount",&,N,V_account
T@"NSUUID",&,N,V_groupSessionIdentifier
T@"NSDictionary",&,N,V_groupSessionOptions
T@"IDSPseudonym",&,N,V_pseudonym
T@"MSVTimer",&,N,V_pseudonymRenewalTimer
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSURL",&,N,V_sharedListeningSessionInviteURL
T@"NSString",C,N,V_sharedListeningSessionIdentifier
T@"NSString",&,N,V_sharedSessionToken
T@"NSString",&,N,V_externalIdentifier
T@"ICSharedListeningConnectionReport",W,N,V_report
T@?,C,N,V_dataSourceErrorHandler
finishAssetResourceLoadingRequest:withError:
setDialog:
setServerError:
bulkRefreshWaitInterval
setBulkRefreshWaitInterval:
rentalExpirationDate
setRentalExpirationDate:
rentalPlaybackStartDate
setRentalPlaybackStartDate:
serverPlaybackContextData
setServerPlaybackContextData:
contentKeyContextData
setContentKeyContextData:
_dialog
_bulkRefreshWaitInterval
_rentalExpirationDate
_rentalPlaybackStartDate
_serverPlaybackContextData
_contentKeyContextData
T@"ICStoreDialogResponse",C,N,V_dialog
T@"NSError",C,N,V_serverError
TQ,N,V_bulkRefreshWaitInterval
T@"NSDate",C,N,V_rentalExpirationDate
T@"NSDate",C,N,V_rentalPlaybackStartDate
T@"NSData",C,N,V_serverPlaybackContextData
T@"NSData",C,N,V_contentKeyContextData
subscriptionInfoDidChange
activeSubscriptionsDidChange
simLessSubscriptionsDidChange
dualSimCapabilityDidChange
suppServicesEvent:event:settingsType:data:
spcUnlockSuccessful:
phoneBookSelected:
phoneBookFetched:
phoneBookWritten:
phoneBookError:
phoneNumberAvailable:
phoneNumberChanged:
suppServicesStarted:
suppServicesCompleted:
suppServicesError:error:
T@"ICTelephonyController",R,N
providerName
mobileSubscriberCountryCode
mobileSubscriberNetworkCode
IMEI
sendSMSWithText:toPhoneNumber:error:
_ensureTelephonyHandlesAreReady
_handleActiveSubscriptionsDidChange
_telephonySubscriptionContext
_updatePhoneNumberAllowingDidChangeNotification:
_telephonyCallbackQueue
eventWithSessionEvent:participant:
eventWithPlaybackEvent:participant:
eventWithQueueEvent:participant:
eventWithReactionEvent:participant:
eventWithCustomEvent:participant:
_initWithType:participant:
participant
sessionEvent
playbackEvent
queueEvent
reactionEvent
customEvent
_sessionEvent
_playbackEvent
_queueEvent
_reactionEvent
_customEvent
T@"ICLiveLinkIdentity",R,N,V_participant
T@"ICLiveLinkSessionEvent",R,N,V_sessionEvent
T@"ICLiveLinkPlaybackEvent",R,N,V_playbackEvent
T@"ICLiveLinkQueueEvent",R,N,V_queueEvent
T@"ICLiveLinkReactionEvent",R,N,V_reactionEvent
T@"ICLiveLinkCustomEvent",R,N,V_customEvent
initWithLocalizedMessage:
localizedMessage
_localizedMessage
T@"NSString",R,C,N,V_localizedMessage
initWithKind:
queueEventWithContentAdded:
queueEventWithContentPlayedNow:
queueEventWithContentRemoved:
queueEventWithContentReordered:
queueEventWithContentReplaced:
queueEventWithContentUpdatedMessage:
queueEventWithPlaybackModeChanged:
contentAdded
contentPlayedNow
contentRemoved
contentReordered
contentReplaced
contentUpdatedMessage
playbackModeChanged
_contentAdded
_contentPlayedNow
_contentRemoved
_contentReordered
_contentReplaced
_contentUpdatedMessage
_playbackModeChanged
T@"ICLiveLinkQueueEventContentAdded",R,N,V_contentAdded
T@"ICLiveLinkQueueEventContentPlayedNow",R,N,V_contentPlayedNow
T@"ICLiveLinkQueueEventContentRemoved",R,N,V_contentRemoved
T@"ICLiveLinkQueueEventContentReordered",R,N,V_contentReordered
T@"ICLiveLinkQueueEventContentReplaced",R,N,V_contentReplaced
T@"ICLiveLinkQueueEventContentUpdatedMessage",R,N,V_contentUpdatedMessage
T@"ICLiveLinkQueueEventPlaybackModeChanged",R,N,V_playbackModeChanged
initWithItemIdentifiers:containerKind:containerIdentifier:containerMediaIdentifier:
containerIdentifier
containerKind
containerMediaIdentifier
_containerIdentifier
_containerKind
_containerMediaIdentifier
T@"NSString",R,N,V_containerIdentifier
Tq,R,N,V_containerKind
T@"NSString",R,C,N,V_containerMediaIdentifier
T@"NSArray",R,C,N,V_itemIdentifiers
initWithItemIdentifiers:containerKind:containerIdentifier:containerMediaIdentifier:startItemIdentifier:
startItemIdentifier
_startItemIdentifier
T@"NSString",R,C,N,V_startItemIdentifier
initWithItemIdentifier:
itemIdentifier
_itemIdentifier
T@"NSString",R,C,N,V_itemIdentifier
initWithStartItemIdentifier:
initWithLocalizedTitle:localizedMessage:
localizedTitle
_localizedTitle
T@"NSString",R,C,N,V_localizedTitle
initWithUpdatedShuffleType:
initWithUpdatedRepeatType:
initWithUpdatedAutoPlayEnabled:
shuffleType
repeatType
autoPlayEnabled
_shuffleType
_repeatType
_autoPlayEnabled
T@?,R,N,V_shuffleType
T@?,R,N,V_repeatType
T@?,R,N,V_autoPlayEnabled
initWithReaction:reactionIdentifier:itemIdentifier:
reactionIdentifier
reaction
_reactionIdentifier
T@"NSString",R,C,N,V_reactionIdentifier
T@"NSString",R,C,N,V_reaction
ic_DSID
ic_setDSID:
ic_altDSID
ic_setAltDSID:
ic_firstName
ic_setFirstName:
ic_lastName
ic_setLastName:
ic_storefront
ic_setStorefront:
ic_uniqueIdentifier
ic_setUniqueIdentifier:
ic_isSandboxed
ic_setSandboxed:
ic_isActiveLockerAccount
ic_isCloudBackupEnabled
ic_isManagedAppleID
ic_setManagedAppleID:
ic_ageVerificationExpirationDate
ic_setAgeVerificationExpirationDate:
ic_mergeWithCloudLibraryPreference
ic_setMergeWithCloudLibraryPreference:
ic_isSubscriptionStatusEnabled
ic_setSubscriptionStatusEnabled:
ic_homeUserIdentifiers
ic_cloudLibraryStateReason
ic_setCloudLibraryStateReason:
ic_isLocalAccount
ic_isManageable
ic_automaticDownloadKinds
ic_setAutomaticDownloadKinds:
ic_isAutomaticDownloadsEnabledForMediaKindMusic
ic_privateListeningEnabled
ic_setPrivateListeningEnabled:
ic_privateListeningEnabledForHomeUsers
ic_setPrivateListeningEnabledForHomeUsers:
ic_activeMediaTypes
ic_isITunesAccount
ic_privacyAcknowledgementVersions
T@"NSNumber",C,N,Sic_setDSID:
T@"NSString",C,N,Sic_setAltDSID:
T@"NSString",C,N,Sic_setFirstName:
T@"NSString",C,N,Sic_setLastName:
T@"NSString",C,N,Sic_setStorefront:
T@"NSNumber",C,N,Sic_setUniqueIdentifier:
ic_sandboxed
TB,N,Gic_isSandboxed,Sic_setSandboxed:
TB,N,Gic_isActiveLockerAccount,Sic_setActiveLockerAccount:
ic_cloudBackupEnabled
TB,R,N,Gic_isCloudBackupEnabled
ic_managedAppleID
TB,N,Gic_isManagedAppleID,Sic_setManagedAppleID:
T@"NSDate",C,N,Sic_setAgeVerificationExpirationDate:
T@"NSNumber",C,N,Sic_setMergeWithCloudLibraryPreference:
ic_subscriptionStatusEnabled
TB,N,Gic_isSubscriptionStatusEnabled,Sic_setSubscriptionStatusEnabled:
ic_localAccount
TB,R,N,Gic_isLocalAccount
T@"NSSet",C,N,Sic_setAutomaticDownloadKinds:
T@"NSNumber",C,N,Sic_setPrivateListeningEnabled:
T@"NSDictionary",C,N,Sic_setCloudLibraryStateReason:
T@"NSDictionary",C,N,Sic_setPrivateListeningEnabledForHomeUsers:
ic_manageable
TB,R,N,Gic_isManageable
_allBagKeys
_initWithDictionary:
_initWithDictionary:amsBag:fallbackValues:requestDate:expirationDate:serverCorrelationKey:serverEnvironment:profileName:profileVersion:sourceAccountDSID:
allValues
valueForBagKey:
valuesForBagKeys:
hasValueForBagKey:
stringForBagKey:
arrayForBagKey:
dictionaryForBagKey:
urlForBagKey:
numberForBagKey:
int64ValueForBagKey:
boolValueForBagKey:
shouldAppendDeviceGUIDForURL:
shouldAppendMachineDataHeadersForURL:
mescalConfigurationForRequestURL:
mescalConfigurationForRequest:
mescalConfigurationForResponseURL:
mescalConfigurationForResponse:
radioConfiguration
libraryDAAPConfiguration
enhancedAudioConfiguration
storefrontHeaderSuffix
canPostKeybagSyncData
isTrustedHostForURL:
createAMSSnapshotBagWithCompletion:
GUIDURLRegexPatterns
setGUIDURLRegexPatterns:
GUIDURLSchemes
setGUIDURLSchemes:
_allValues
_valueForBagKey:
_initWithPropertyListRepresentation:
_propertyListRepresentation
_shouldMescalSignBodyForURL:withSignatureConfiguration:
_validateGUIDURLConfigIfNeeded
_urlStringFromBagStringValue:
_logAndReturnFallbackValueForMissingKey:
_knownMissingBagValuesDictionary
_knownMissingBagSubKeyValuesDictionary
_knownOptionalBagKeys
_knownIncorrectValues
bagValues
setBagValues:
convertedActionsCache
setConvertedActionsCache:
requestDate
_setExpirationDate:
profileName
sourceAccountDSID
amsBag
setAmsBag:
fallbackValues
setFallbackValues:
_bagValues
_convertedActionsCache
_GUIDURLRegexPatterns
_GUIDURLSchemes
_profileName
_profileVersion
_sourceAccountDSID
_amsBag
_fallbackValues
T@"NSDictionary",C,N,V_bagValues
T@"<AMSBagProtocol>",C,N,V_amsBag
T@"NSDictionary",C,N,V_fallbackValues
T@"NSMutableDictionary",&,N,V_convertedActionsCache
T@"NSArray",&,N,V_GUIDURLRegexPatterns
T@"NSSet",&,N,V_GUIDURLSchemes
T@"NSDate",C,N,S_setExpirationDate:,V_expirationDate
T@"ICURLBagRadioConfiguration",R,N
T@"ICURLBagLibraryDAAPConfiguration",R,N
T@"ICURLBagEnhancedAudioConfiguration",R,N
T@"NSDate",R,C,N,V_requestDate
T@"NSString",R,C,N,V_profileName
T@"NSString",R,C,N,V_profileVersion
T@"NSNumber",R,C,N,V_sourceAccountDSID
initWithUserIdentityStore:requestContext:
getFinishDelegationRequestsWithStartDelegationResponse:streamContexts:replyHandler:
getStartDelegationRequestForAccountIDs:withCompletionHandler:
_getPlayInfoRequestWithStartDelegationResponse:streamContexts:completionHandler:
_nextSessionUniqueID
allowsSharing
allowsItemLiking
artworkInfo
coreSeedName
descriptionText
attributionLabel
subtype
isSubscriptionRequired
providerResource
T@"ICStoreArtworkInfo",R,C,N
subscriptionRequired
TB,R,N,GisSubscriptionRequired
T@"ICRadioStationProviderResource",R,C,N
initWithConnection:
_removeAccountForIdentityKey:
_removeTokenForIdentityKey:
_setToken:forIdentityKey:
_isValid
defaultProvider
initWithUserInteractionLevel:
Tq,R,N,V_interactionLevel
sharedSecurityInfo
T@"ICSecurityInfo",R,N
isContentProtectionEnabled
isDeviceClassCUnlocked
isDeviceUnlocked
performBlockAfterFirstUnlock:
_getContentProtectionEnabled:isDeviceClassCUnlocked:
_loadContentProtectionEnabled:isDeviceClassCUnlocked:
_processFirstUnlockNotification
_hasLoadedDeviceClassCUnlocked
_isDeviceClassCUnlocked
_hasLoadedContentProtectionEnabled
_isContentProtectionEnabled
_firstUnlockNotificationToken
_pendingFirstUnlockBlocks
contentProtectionEnabled
TB,R,N,GisContentProtectionEnabled,V_isContentProtectionEnabled
deviceUnlocked
TB,R,N,GisDeviceUnlocked
deviceClassCUnlocked
TB,R,N,GisDeviceClassCUnlocked,V_isDeviceClassCUnlocked
_isEnabled
_canSubscribe
_isSubscriber
initWithRequestContext:downloadIdentifier:songID:
_downloadIdentifier
_songID
clientInfoForMusicKitRequestWithClientIdentifier:clientVersion:
clientInfoForMusicKitRequestWithClientIdentifier:clientVersion:bundleIdentifier:
_clientInfoForCloudDaemonOriginatedMusicKitRequestWithRequestingBundleIdentifier:
automaticDownloadMediaKindsForMusic
handleAuthenticateRequest:completion:
handleDialogRequest:completion:
T@"NSSet",R,N
initWithRequestContext:mediaKindsToAdd:mediaKindsToRemove:
_mediaKindsToAdd
_mediaKindsToRemove
_isShadowOperationForRemoteExecution
_setShadowOperationForRemoteExecution:
response
setResponse:
__shadowOperationForRemoteExecution
_shadowOperationForRemoteExecution
TB,N,G_isShadowOperationForRemoteExecution,S_setShadowOperationForRemoteExecution:,V__shadowOperationForRemoteExecution
T@"<NSSecureCoding>",&,N,V_response
musicLeaseSession:didFinishPlaybackRequest:withPlaybackResponse:responseError:updatedFairPlayKeyStatusList:completionHandler:
musicLeaseSession:requestsFairPlayKeyStatusUpdateWithCompletion:
T@"ICMusicSubscriptionLeaseController",R,N
getLastKnownHouseholdIDWithCompletion:
getLeaseSessionWithRequestContext:completionHandler:
receivedUserInteractionEvent
_accountDSIDToFairPlayKeyStatus
_cacheKeyToLeaseSession
_hasReceivedUserInteractionEvent
_isRemoteServerLikelyReachable
_isServerReachable
_lastKnownHouseholdID
_leaseDidEndNotificationToken
_leaseSessionPreparationOperationQueue
initWithDSID:carrierBundleDeviceIdentifier:delegatedDSID:
T@"NSNumber",R,C,N,V_delegatedDSID
T@"NSString",R,C,N,V_carrierBundleDeviceIdentifier
ic_valuesForCookieWithName:
ic_appendHTTPCookies:
ic_appendHTTPCookieWithName:value:
setActiveCommandsOnly:
setHasActiveCommandsOnly:
hasActiveCommandsOnly
activeCommandsOnly
_activeCommandsOnly
TB,N,V_activeCommandsOnly
currentVersion
dateForValue:
defaultDatabasePath
setupWithConnection:error:
valueForDate:
_createDefaultSchemaWithConnection:error:
_setDeveloperToken:
_pendingEquivalentStoreURLRequest
_buildMusicKitURLRequestWithBaseURLRequest:completionHandler:
_buildEquivalentStoreURLRequestWithDeveloperToken:completionHandler:
_buildUserTokenBasedMusicKitURLRequestWithBaseURLRequest:developerToken:completionHandler:
_updateURLSessionManagedPropertiesForEquivalentStoreURLRequest:
T@"ICStoreURLRequest",R,N
T@"ICMusicKitRequestContext",R,C,N
signatureData
setSignatureData:
_signatureData
T@"NSData",C,N,V_signatureData
T@"NSMutableData",&,N,V_data
performSubscriptionStatusRequest:forUniqueIdentifier:
externalSharedListeningConnectionWithSessionIdentifier:identity:bundleID:
sharedListeningConnectionWithSessionIdentifier:identity:bundleID:
initWithSessionIdentifier:identity:bundleID:
sendMessage:
sessionIdentifier
setSessionIdentifier:
inviteURL
setInviteURL:
_inviteURL
T@"NSString",&,N,V_sessionIdentifier
T@"NSString",&,N,V_sessionToken
T@"NSURL",&,N,V_inviteURL
T@"NSString",R,N,V_bundleID
T@"ICLiveLinkIdentity",R,N,V_identity
T@"<ICSharedListeningConnectionControllerDelegate>",W,N,V_delegate
connectionDidStart:
connection:didReceiveMessage:
connection:didEndWithError:
_handleQRDataSourceError:
state
setState:
setConnection:
dataSource
setDelegateQueue:
assertion
setAssertion:
_dataSource
_assertion
Tq,N,V_state
T@"MSVQRConnection",&,N,V_connection
T@"ICLiveLinkQRConnectionDataSource",R,N,V_dataSource
T@"ICSharedListeningConnectionReport",&,N,V_report
T@"NSObject<OS_dispatch_queue>",&,N,V_delegateQueue
T@"MSVTaskAssertion",&,N,V_assertion
receiveMessageData:
receiveConnectionError:
receiveFatalError:
receiveStartWithSessionIdentifier:sessionToken:inviteURLString:
populateSessionIdentifier:identity:
sendMessageData:
_initializeConnectionIfNeeded
setXpcConnection:
T@"NSXPCConnection",&,N,V_xpcConnection
initWithVerificationContext:
verificationContext
_verificationContext
T@"ICUserVerificationContext",R,C,N,V_verificationContext
sharedMonitorForIdentity:
sharedMonitorForIdentity:identityStore:
_sharedInstanceManager
_initWithIdentityContext:
beginObservingSubscriptionStatusWithHandler:
endObservingSubscriptionStatusWithToken:
refreshSubscriptionStatus
_handleActiveUserIdentityDidChangeRemoteNotification
_handleSubscriptionStatusDidChange:
_beginObservingSubscriptionStatus
_endObservingSubscriptionStatus
_effectiveIdentityForRequestingSubscriptionStatus
_isMonitoringSubscriptionStatusForAutoupdatingIdentity
_requestSubscriptionStatusWithCachingPolicy:completion:
_updateWithSubscriptionStatus:
_identityContext
_notificationHandlers
T@"ICUserIdentity",R,N
T@"ICMusicSubscriptionStatus",R,N,V_subscriptionStatus
enumerateDelegationUUIDsForUserIdentity:usingBlock:
enumerateTokensUsingBlock:
enumerateTokensWithType:usingBlock:
identityPropertiesForUserIdentity:
lastExpirationPruningDate
overestimatedNumberOfTokens
tokenForUserIdentity:
_enumerateQueryResults:usingBlock:
_tokenWithSQLiteRow:
_userIdentityWithSQLiteRow:
_decorateHeaderPropertiesForURLRequest:withBuilderProperties:
isBackgroundRadioRequest
setBackgroundRadioRequest:
radioContentDictionaryCreationBlock
setRadioContentDictionaryCreationBlock:
_backgroundRadioRequest
_radioContentDictionaryCreationBlock
backgroundRadioRequest
TB,N,GisBackgroundRadioRequest,V_backgroundRadioRequest
Tq,N,V_protocolVersion
T@?,C,N,V_radioContentDictionaryCreationBlock
_updateDefaultStorefrontIdentifier:usingIdentityStore:
_verifyMescalSignatureForResponse:toRequest:completionHandler:
_performAuthenticationForResponse:toRequest:completionHandler:
_processDialogResponse:toRequest:completionHandler:
addSubEvent:
subEvents
setSubEvents:
_subEvents
T@"NSString",&,N,V_name
T@"NSDate",&,N,V_startDate
T@"NSDate",&,N,V_endDate
T@"NSMutableArray",&,N,V_subEvents
startEvent:
startEvent:withParentEvent:
endEvent:
endEvent:withError:
formattedReport
_addEvents:toReportString:eventLevel:
analyticsPayload
topLevelEvents
setTopLevelEvents:
allEvents
setAllEvents:
_topLevelEvents
_allEvents
T@"NSMutableArray",&,N,V_topLevelEvents
T@"NSMapTable",&,N,V_allEvents
T@"NSString",C,N,V_groupSessionIdentifier
performRequestWithCompletionHandler:
performRequestOnOperationQueue:withCompletionHandler:
initWithRequestContext:leaseID:mediaType:
_itemIdsToRemoves
_repeatModes
_shuffleModes
initWithRequestContext:itemSagaID:
sharedCookieStore
T@"ICHTTPCookieStore",R,N
getCookiesForURL:
getCookiesForURL:userIdentifier:
getCookiesForUserIdentifier:
getCookieWithName:userIdentifier:
getGlobalAccountCookiesForURL:
getCookiesHeadersForURL:userIdentifier:
saveCookies:forURL:
saveCookies:forURL:userIdentifier:
saveGlobalAccountCookies:forURL:
removeCookiesWithProperties:
removeAllCookies
_accountForUserIdentifier:
_cookieDictionaryForURL:userIdentifier:
_saveCookies:userIdentifier:
initWithToggleState:hasBeenToggled:identifier:
isToggled
setIsToggled:
hasBeenPreviouslyToggled
setHasBeenPreviouslyToggled:
itemResponseDictionary
_valueDictionary
_isToggled
_hasBeenPreviouslyToggled
T@"NSDictionary",R,C,N,V_itemResponseDictionary
_delegateAccountStoreDidChangeNotification:
defaultIdentityStore
_claimSingleWriterStatus
nullIdentityStore
testingIdentityStoreWithDatabasePath:
testingIdentityStoreWithSingleWriterService:
userIdentityStoreBackendDidChange:
T@"ICUserIdentityStore",R,N
_initWithStyle:delegateAccountStoreOptions:
enumerateDelegateTokensUsingBlock:completionHandler:
enumerateDelegateTokensWithType:usingBlock:completionHandler:
getDelegationUUIDsForUserIdentity:completionHandler:
getPropertiesForActiveICloudAccountReturningError:
getPropertiesForUserIdentity:completionHandler:
getPropertiesForUserIdentity:error:
getVerificationContextForUserIdentity:error:
insertPropertiesForUserIdentity:usingBlock:
insertPropertiesForUserIdentity:usingBlock:completionHandler:
insertPropertiesForUserIdentity:andPostAccountChangeNotification:usingBlock:completionHandler:
removeAllDelegateTokensWithCompletionHandler:
removeDelegateTokenForUserIdentity:completionHandler:
removeDelegateTokensExpiringBeforeDate:completionHandler:
removePropertiesForUserIdentity:completionHandler:
setActiveAccountWithDSID:completionHandler:
setActiveLockerAccountWithDSID:completionHandler:
disableLockerAccountWithDSID:completionHandler:
synchronizeWithCompletionHandler:
updatePropertiesForUserIdentity:usingBlock:
updatePropertiesForUserIdentity:usingBlock:completionHandler:
DSIDForUserIdentity:outError:
userIdentitiesForManageableAccountsWithError:
localStoreAccountProperties
updatePropertiesForLocalStoreAccountUsingBlock:completionHandler:
userIdentitiesForAllStoreAccountsWithError:
_unsafeBackend
_prepareDelegateAccountStoreWithCompletionHandler:
_refreshLocalStoreAccountPropertiesAllowingDidChangeNotification:
_reloadForExternalChange
_resetDelegateAccountStoreWithCompletionHandler:
_unsafe_deleteDelegateAccountStore
_updateDelegateAccountStoreUsingBlock:
_allowsDelegationForUserIdentity:
_assertNonNullIdentityStoreForSelector:
_dispatchDidChangeNotification:didDelegateAccountStoreChange:
_dsidForTimestamp:history:
_dsidForUserIdentity:error:
_existingIdentityPropertiesForUserIdentity:error:
_importValuesFromCodingHelper:
_initializeLocalStoreAccountProperties
_openDelegateAccountStoreWithError:
_openDelegateAccountStoreForUserIdentity:error:
_registerForDelegateAccountStoreNotifications:
_saveIdentityProperties:andPostAccountChangeNotification:forUserIdentity:error:
_unregisterForDelegateAccountStoreNotifications:
_icValidStoreAccountsFromACAccounts:
_codingHelper
_delegateAccountStore
_lastKnownActiveAccountTimestamp
_lastKnownActiveLockerAccountTimestamp
T@"<ICUserIdentityStoreBackend>",R,N
T@"ICLocalStoreAccountProperties",R,N
sharedHandler
T@"ICMachineDataActionHandler",R,N
processAction:data:withRequestContext:version:withCompletionHandler:
processActionFromResponse:withRequestContext:withCompletionHandler:
initWithVideoArtworkResponseDictionary:
supportedSizesForCRABSVideoForAspectRatio:
CRABSVideoURLMatchingSize:
HLSVideoURLForAspectRatio:
previewFrameArtworkInfoMatchingAspectRatio:
_aspectRatioKeyForAspectRatio:
_aspectRatioToCRABSVideoDictionaries
_aspectRatioToHLSVideoURL
_aspectRatioToPreviewFrameArtworkInfo
_stringRepresentation
T@"NSString",R,C,N,V_stringRepresentation
initWithStoreIdentifier:trackInfo:
T@"NSDictionary",R,C,N,V_trackInfo
storeItemWithIdentifier:
assets
buyParameters
formattedPrice
offerType
price
initWithNetService:
getResolvedStreamsWithCompletionHandler:
_resolveWithCompletionHandler:
_setState:
_updateTXTRecordProperties
_netServiceStreamResolutionQueue
_resolutionCompletionHandlers
_txtRecord
T@"NSNetService",R,N,V_netService
initWithOptions:
dispatchAfterTransaction:
executePreparedQuery:withResults:
executePreparedStatement:error:
executePreparedStatement:error:bindings:
executeQuery:withResults:
executeStatement:error:
executeStatement:error:bindings:
lastChangeCount
userVersion
setUserVersion:
open
performTransaction:
prepareStatement:error:
truncate
currentError
resetAfterCorruptionError
resetAfterIOError
_close
_executeStatement:error:
_finalizeAllStatements
_flushAfterTransactionBlocks
_open
_performResetAfterCorruptionError
_prepareStatement:error:
_statementForPreparedStatement:error:
_verifiedStatementForPreparedStatement:error:
_verifiedStatementForSQL:error:
options
_afterTransactionBlocks
_database
_didResetForCorruption
_preparedStatements
_transactionDepth
_transactionWantsRollback
T@"ICSQLiteConnectionOptions",R,C,N,V_options
T@"<ICSQLiteConnectionDelegate>",W,N,V_delegate
parsedBodyArray
parsedBodyDictionary
parsedBodyText
parsedBody
_prepareParsedBodyResponse
bodyData
bodyDataURL
_parsedBodyResponseType
_parsedBodyResponse
_bodyData
_bodyDataURL
T@"NSURLResponse",R,N,V_urlResponse
T@"NSData",R,N,V_bodyData
T@"NSURL",R,N,V_bodyDataURL
T@"ICMediaAPIURLMappingProvider",R,N
getCurrentURLMappingSet
updateURLMappingsWithCompletion:
clearCachedURLMappings
setCurrentURLMappingSet:
_cacheFileURL
_loadCacheDictionary
_saveCachedResponsePayload:eTag:
unsignedIntValue
ic_numberValueForKey:
ic_integerValueForKey:
ic_intValueForKey:
ic_uintValueForKey:
ic_int64ValueForKey:
ic_boolValueForKey:
ic_arrayValueForKey:
ic_dictionaryValueForKey:
ic_stringValueForKey:
ic_dataValueForKey:
initWithBagLibraryDAAPDictionary:
databaseID
databaseName
isOnlineGeniusForMatchEnabled
playDataBatchIntervalInMinutes
subscribedContainerPollingFrequencySeconds
updatePollingFrequencySeconds
autoUpdatePollingFrequencySeconds
maxSyncRetryIntervalSeconds
_bagDictionary
onlineGeniusForMatchEnabled
TB,R,N,GisOnlineGeniusForMatchEnabled
_handleSubscriptionFairPlayKeyStatusChangedDistributedNotification:
T@"ICMusicSubscriptionFairPlayController",R,N
getKeyStatusForAccountUniqueIdentifier:error:
getKeyStatusListWithCompletionHandler:
importSubscriptionKeyBagData:completionHandler:
importSubscriptionKeyBagData:leaseInfoData:completionHandler:
generateSubscriptionBagRequestWithAccountUniqueIdentifier:transactionType:machineIDData:completionHandler:
generateSubscriptionLeaseRequestWithAccountUniqueID:transactionType:certificateData:assetIDData:completionHandler:
stopSubscriptionLeaseWithCompletion:
_fairPlaySerialQueue
_subscriptionKeyBagStatusCache
itemWithStoreAdamID:
leaseInfoData
metricsDictionary
T@"NSData",&,N,V_data
configureUsingAssetResourceLoadingRequest:
configureUsingContentKeyRequest:
certificateURL
setCertificateURL:
contentURI
setContentURI:
leaseActionType
setLeaseActionType:
rentalID
setRentalID:
skippedRentalCheckout
setSkippedRentalCheckout:
isITunesStoreRequest
setITunesStoreRequest:
serverPlaybackContextDataCreationHandler
setServerPlaybackContextDataCreationHandler:
asyncServerPlaybackContextDataCreationHandler
setAsyncServerPlaybackContextDataCreationHandler:
shouldIncludeDeviceGUID
setShouldIncludeDeviceGUID:
requestProtocolType
setRequestProtocolType:
isOfflineDownload
setIsOfflineDownload:
_skippedRentalCheckout
_ITunesStoreRequest
_shouldIncludeDeviceGUID
_isOfflineDownload
_contentURI
_leaseActionType
_rentalID
_serverPlaybackContextDataCreationHandler
_asyncServerPlaybackContextDataCreationHandler
_requestProtocolType
T@"NSURL",C,N,V_certificateURL
T@"NSString",C,N,V_contentURI
Tq,N,V_leaseActionType
T@"ICRequestContext",C,N,V_requestContext
Tq,N,V_rentalID
TB,N,V_skippedRentalCheckout
ITunesStoreRequest
TB,N,GisITunesStoreRequest,V_ITunesStoreRequest
T@?,C,N,V_serverPlaybackContextDataCreationHandler
T@?,C,N,V_asyncServerPlaybackContextDataCreationHandler
TB,N,V_shouldIncludeDeviceGUID
Tq,N,V_requestProtocolType
TB,N,V_isOfflineDownload
_createDefaultProtocolRequestBodyUsingPlaybackContextData:
_createSimplifiedProtocolRequestBodyUsingPlaybackContextData:
_createServerPlaybackContextUsingCertificateData:completion:
setRequest:
T@"ICSecureKeyDeliveryRequest",C,N,V_request
_handleApplicationDidEnterForegroundNotification:
observeValueForKeyPath:ofObject:change:context:
T@"ICEnvironmentMonitor",R,N
isCharging
networkType
lastKnownNetworkType
isRemoteServerReachable
isRemoteServerLikelyReachable
currentNetworkLinkQuality
isCurrentNetworkLinkExpensive
isWiFiAssociated
isEthernetWired
isWifiActive
isNetworkConstrained
currentThermalLevel
currentBatteryLevel
telephonyOperatorName
telephonyRegistrationStatus
signalInfo
signalStrength
isCurrentNetworkLinkHighQuality
_onQueue_updateNetworkReachabilityAndNotifyObservers:
_onQueue_updateThermalLevelWithToken:
_onQueue_loadInitialThermalLevel
_notifyObserversEnvironmentMonitorDidChangeTelephonyStatus
_onQueue_currentNetworkType
_networkTypeFromWatchCarousel
_onQueue_networkConstrained
_onQueue_updateTelephonyStateAndNotifyObservers:
isWiFiActive
_observersLock
_networkPathEvaluator
_thermalNotificationToken
_telephonyStatusIndicator
_dataSubscriptionContext
_cellSignalInfo
_batteryNotificationToken
_powerSourceNotificationToken
_charging
_remoteServerReachable
_remoteServerLikelyReachable
_currentNetworkLinkExpensive
_wifiAssociated
_ethernetWired
_wiFiActive
_networkConstrained
_lastKnownNetworkType
_currentNetworkLinkQuality
_currentThermalLevel
_currentBatteryLevel
_telephonyOperatorName
_telephonyRegistrationStatus
charging
TB,R,N,GisCharging,V_charging
Tq,R,N,V_networkType
Tq,R,N,V_lastKnownNetworkType
remoteServerReachable
TB,R,N,GisRemoteServerReachable,V_remoteServerReachable
remoteServerLikelyReachable
TB,R,N,GisRemoteServerLikelyReachable,V_remoteServerLikelyReachable
TQ,R,N,V_currentNetworkLinkQuality
currentNetworkLinkHighQuality
TB,R,N,GisCurrentNetworkLinkHighQuality
currentNetworkLinkExpensive
TB,R,N,GisCurrentNetworkLinkExpensive,V_currentNetworkLinkExpensive
wifiAssociated
TB,R,N,GisWiFiAssociated,V_wifiAssociated
ethernetWired
TB,R,N,GisEthernetWired,V_ethernetWired
wiFiActive
TB,R,N,GisWiFiActive,V_wiFiActive
networkConstrained
TB,R,N,GisNetworkConstrained,V_networkConstrained
TQ,R,N,V_currentThermalLevel
Td,R,N,V_currentBatteryLevel
T@"NSString",R,C,N,V_telephonyOperatorName
T@"NSString",R,C,N,V_telephonyRegistrationStatus
generateMachineDataForAccountID:returningMachineIDData:otpData:error:
ic_dataWithADIBytes:length:
initWithAccountID:
startWithServerActionData:returningClientData:error:
endWithMessageData:transportKey:error:
_destroySession
T@"ICUserCredentialProvider",R,N
performCredentialRequest:withResponseHandler:
_handleRequestIndependentPropertiesForSession:
_handleDelegationAccountUUIDsForSession:
_handlePendingDelegationRequestsForSession:
_handleIdentityProperties:forIdentity:loadingError:credentialRequest:session:
_handleCredentialRequestIdentityPropertiesForSession:
performCredentialRequests:withResponseHandler:
_delegationDiscoveryCount
_delegationConsumerService
initWithCredentialRequests:responseHandler:
hasPendingResponses
activeICloudAccountProperties
setActiveICloudAccountProperties:
credentialRequests
delegationCredentialRequestToSpecificUserIdentity
setDelegationCredentialRequestToSpecificUserIdentity:
delegationCredentialRequestToIdentityProperties
setDelegationCredentialRequestToIdentityProperties:
delegationUserIdentityToUUIDs
setDelegationUserIdentityToUUIDs:
maximumQualityOfService
pendingPropertyLoadCredentialRequests
setPendingPropertyLoadCredentialRequests:
pendingResponseCredentialRequests
setPendingResponseCredentialRequests:
_activeICloudAccountProperties
_credentialRequests
_delegationCredentialRequestToSpecificUserIdentity
_delegationCredentialRequestToIdentityProperties
_delegationUserIdentityToUUIDs
_maximumQualityOfService
_pendingPropertyLoadCredentialRequests
_pendingResponseCredentialRequests
T@"ICUserIdentityProperties",C,N,V_activeICloudAccountProperties
T@"NSArray",R,C,N,V_credentialRequests
T@"NSMapTable",&,N,V_delegationCredentialRequestToSpecificUserIdentity
T@"NSMapTable",&,N,V_delegationCredentialRequestToIdentityProperties
T@"NSMutableDictionary",&,N,V_delegationUserIdentityToUUIDs
Tq,R,N,V_maximumQualityOfService
T@"NSMutableArray",&,N,V_pendingPropertyLoadCredentialRequests
T@"NSMutableArray",&,N,V_pendingResponseCredentialRequests
_copyLocalStoreAccountPropertiesToOtherInstance:withZone:
cloudID
lyricsID
purchasedAdamID
radioAdamID
equivalencySourceAdamID
reportingAdamID
subscriptionAdamID
_cloudID
TQ,R,N,V_cloudID
T@"NSString",R,C,N,V_lyricsID
Tq,R,N,V_purchasedAdamID
Tq,R,N,V_radioAdamID
Tq,R,N,V_equivalencySourceAdamID
Tq,R,N,V_reportingAdamID
Tq,R,N,V_subscriptionAdamID
setCloudID:
setLyricsID:
setPurchasedAdamID:
setRadioAdamID:
setEquivalencySourceAdamID:
setReportingAdamID:
setSubscriptionAdamID:
unsignedLongLongValue
_capabilitiesForStatusType:carrierBundlingStatusType:isMatchEnabled:
isEqualToStatus:
hasCatalogPlaybackCapability
hasAddToCloudLibraryCapability
isCloudMusicServiceEnabled
_copySubscriptionStatusPropertiesToStatus:withZone:
isMinorAccountHolder
hasFamily
hasFamilyGreaterThanOneMember
isHeadOfHousehold
isMatchEnabled
hasOfflineSlots
isInFreeTrial
isEligibleForFreeTrial
isPurchaser
isAdministrator
isDiscoveryModeEligible
termsStatusList
cellularOperatorName
carrierBundlingErrorCode
isPartOfBundle
isBundleOnwer
isInGlidePreview
acceptSilentAuth
_isMinorAccountHolder
_hasFamily
_hasFamilyGreaterThanOneMember
_isHeadOfHousehold
_isMatchEnabled
_hasOfflineSlots
_isInFreeTrial
_isInGlidePreview
_isEligibleForFreeTrial
_isPurchaser
_isAdministrator
_isDiscoveryModeEligible
_termsStatusList
_cellularOperatorName
_carrierBundlingErrorCode
_isPartOfBundle
_isBundleOwner
_partOfBundle
_bundleOwner
_acceptSilentAuth
cloudMusicServiceEnabled
TB,R,N,GisCloudMusicServiceEnabled
minorAccountHolder
TB,R,N,GisMinorAccountHolder,V_isMinorAccountHolder
TB,R,N,V_hasFamily
TB,R,N,V_hasFamilyGreaterThanOneMember
headOfHousehold
TB,R,N,GisHeadOfHousehold,V_isHeadOfHousehold
matchEnabled
TB,R,N,GisMatchEnabled,V_isMatchEnabled
TB,R,N,V_hasOfflineSlots
inFreeTrial
TB,R,N,GisInFreeTrial,V_isInFreeTrial
eligibleForFreeTrial
TB,R,N,GisEligibleForFreeTrial,V_isEligibleForFreeTrial
purchaser
TB,R,N,GisPurchaser,V_isPurchaser
Tq,R,N,V_sourceType
administrator
TB,R,N,GisAdministrator,V_isAdministrator
discoveryModeEligible
TB,R,N,GisDiscoveryModeEligible,V_isDiscoveryModeEligible
partOfBundle
TB,R,N,GisPartOfBundle,V_partOfBundle
bundleOwner
TB,R,N,GisBundleOnwer,V_bundleOwner
inGlidePreview
TB,R,N,GisInGlidePreview,V_isInGlidePreview
T@"NSArray",R,C,N,V_termsStatusList
T@"NSString",R,C,N,V_phoneNumber
T@"NSString",R,C,N,V_cellularOperatorName
T@"NSString",R,C,N,V_sessionIdentifier
Tq,R,N,V_carrierBundlingErrorCode
T@"NSNumber",R,C,N,V_acceptSilentAuth
setMinorAccountHolder:
setHasFamily:
setHasFamilyGreaterThanOneMember:
setHeadOfHousehold:
setMatchEnabled:
setHasOfflineSlots:
setInFreeTrial:
setEligibleForFreeTrial:
setPurchaser:
setCarrierBundlingStatusType:
setStatusType:
setAdministrator:
setDiscoveryModeEligible:
setTermsStatusList:
setCellularOperatorName:
setCarrierBundlingErrorCode:
setPartOfBundle:
setBundleOwner:
setEligibleOffers:
setInGlidePreview:
setStatusCode:
TB,D,N,GisMinorAccountHolder
TB,D,N
TB,D,N,GisHeadOfHousehold
TB,D,N,GisMatchEnabled
TB,D,N,GisInFreeTrial
TB,D,N,GisEligibleForFreeTrial
TB,D,N,GisPurchaser
TB,D,N,GisAdministrator
TB,D,N,GisDiscoveryModeEligible
Tq,N,V_statusCode
TB,D,N,GisPartOfBundle
TB,D,N,GisBundleOnwer
TB,D,N,GisInGlidePreview
initWithResponseTermsDictionary:
acceptedVersion
_acceptedVersion
_currentVersion
Tq,R,N,V_acceptedVersion
Tq,R,N,V_currentVersion
sharedWiFiManager
_processIdentifier
_getWiFiEnabledFromPrefs
_getWiFiAssociated
_wifiCallBack:
isWiFiEnabled
setWiFiEnabled:
setWiFiAssociated:
_wifiPreferences
_wiFiEnabled
_wiFiAssociated
wiFiEnabled
TB,N,GisWiFiEnabled,V_wiFiEnabled
wiFiAssociated
TB,N,GisWiFiAssociated,V_wiFiAssociated
initWithBagEnhancedAudioDictionary:
prefetchSKDs
_urlForBagEnhancedAudioKey:
bagEnhancedAudioDictionary
setBagEnhancedAudioDictionary:
_bagEnhancedAudioDictionary
T@"NSDictionary",C,N,V_bagEnhancedAudioDictionary
T@"ICClientInfo",R,N
initWithBundleIdentifier:
initWithSystemApplicationType:
_clientIdentifierForUserAgent
_clientInfoCopyWithClass:
_setDefaultBagProfileForClientIdentifier:
processName
clientVersion
bagProfile
bagProfileVersion
_processName
_clientVersion
_bagProfile
_bagProfileVersion
T@"NSString",R,C,N,V_processName
T@"NSString",R,C,N,V_clientIdentifier
T@"NSString",R,C,N,V_clientVersion
T@"NSString",R,C,N,V_bagProfile
T@"NSString",R,C,N,V_bagProfileVersion
setProcessName:
setClientVersion:
setBagProfile:
setBagProfileVersion:
mediaTypeNetworkConstraintsFromURLBag:
constraintsForSystemApplicationType:
shouldAllowDataForNetworkType:
shouldAllowDataForCellularNetworkTypes
shouldAllowDataForWiFiNetworkTypes
sizeLimitForNetworkType:
_dataAllowedFallbackValue
_cellularDataAllowedFallbackValue
_wiFiDataAllowedFallbackValue
_networkTypeToDataAllowed
_networkTypeToSizeLimit
setShouldAllowDataForAllNetworkTypes:
setShouldAllowData:forNetworkType:
setShouldAllowDataForCellularNetworkTypes:
setShouldAllowDataForWiFiNetworkTypes:
setSizeLimit:forNetworkType:
createResponseBodyWithSwitches:
settingsSwitches
wasSuccessful
_wasSuccessful
TB,R,N,V_wasSuccessful
initWithRequestContext:notificationType:notificationParameters:
_notificationParams
@16@0:8
v16@0:8
v32@0:8@16@?24
v40@0:8@16@24@?32
v24@0:8@?16
v24@0:8@16
v20@0:8B16
@40@0:8@16@24@32
@"NSObject<OS_dispatch_queue>"
@"ICMusicSubscriptionStatusCacheKey"
@"NSMutableDictionary"
@24@0:8@16
@"ICJSSignConfiguration"
@24@0:8^{_NSZone=}16
v32@0:8q16@24
@"NSMutableArray"
@"NSString"
B16@0:8
B24@0:8@16
Q16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@32@0:8q16@24
@40@0:8q16@24@32
q16@0:8
@"NSData"
@"NSDate"
@"_ICLLRadioSource"
{?="position"b1"revision"b1}
@"NSDictionary"
@36@0:8@16q24B32
@24@0:8q16
@"ICStoreRequestContext"
@36@0:8I16@20@28
@44@0:8I16@20@28@36
I16@0:8
@"NSOperationQueue"
@"NSURL"
@"ICFPSAPContext"
@32@0:8@16@24
@48@0:8@16@24@32@40
@24@0:8@?16
v24@0:8q16
@"ICUserIdentity"
@"ICUserIdentityStore"
@"ICStoreDialogResponseHandler"
@"NSXPCListenerEndpoint"
@"_ICLLPlaybackControlSettings"
@"_ICLLQueue"
{?="revision"b1}
v32@0:8@16@24
@"ICLightweightMusicSubscriptionStatusResponse"
#16@0:8
@24@0:8Q16
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
v24@0:8d16
d16@0:8
@"ICIAMApplicationBadge"
@"ICIAMMetricEvent"
@"ICIAMLocalNotification"
@"ICIAMMessageRule"
{?="endDate"b1"startDate"b1"assetPrefetchStrategy"b1"globalPresentationPolicyGroup"b1"maximumDisplays"b1"messageType"b1"modalPresentationStyle"b1"priority"b1"carousel"b1"hasCloseButton"b1"reportingEnabled"b1}
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"NSString"16
@"NSNumber"
v40@0:8q16@24@?32
v48@0:8@16B24q28B36@?40
v32@0:8q16@?24
v40@0:8Q16@24@?32
v32@0:8Q16@24
v64@0:8q16@24@32@40@48@?56
v56@0:8q16@24@32@40@?48
v56@0:8@16@24q32@40@?48
v56@0:8q16@24q32@40@?48
v48@0:8q16q24@32@?40
v48@0:8@16q24@32@?40
v44@0:8@16B24@28@?36
v48@0:8q16@24@32@?40
v48@0:8@16Q24@32@?40
v24@0:8@"ICConnectionConfiguration"16
v40@0:8q16@"ICConnectionConfiguration"24@?<v@?@"NSError">32
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSError"B>24
v48@0:8@"ICConnectionConfiguration"16B24q28B36@?<v@?@"NSError">40
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSError">24
v32@0:8q16@?<v@?@"NSError">24
v40@0:8q16@"ICConnectionConfiguration"24@?<v@?B@"NSError">32
v32@0:8@"ICConnectionConfiguration"16@?<v@?BB>24
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSError"f>24
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSNumber"@"NSError">24
v40@0:8Q16@"ICConnectionConfiguration"24@?<v@?@"NSError">32
v32@0:8Q16@"ICConnectionConfiguration"24
v32@0:8q16@"ICConnectionConfiguration"24
v40@0:8@"NSArray"16@"ICConnectionConfiguration"24@?<v@?@"NSError"@"NSArray">32
v40@0:8Q16@"ICConnectionConfiguration"24@?<v@?@"NSArray"@"NSError">32
v64@0:8q16@"NSString"24@"NSArray"32@"NSArray"40@"ICConnectionConfiguration"48@?<v@?Q@"NSError">56
v56@0:8q16@"NSDictionary"24@"ICCloudItemIDList"32@"ICConnectionConfiguration"40@?<v@?Q@"NSError">48
v56@0:8@"NSDictionary"16@"ICCloudItemIDList"24q32@"ICConnectionConfiguration"40@?<v@?@"NSError">48
v56@0:8q16@"ICCloudAddReferral"24q32@"ICConnectionConfiguration"40@?<v@?@"NSError">48
v48@0:8q16q24@"ICConnectionConfiguration"32@?<v@?@"NSError">40
v48@0:8@"NSString"16q24@"ICConnectionConfiguration"32@?<v@?@"NSDictionary"@"NSError">40
v40@0:8q16@"ICConnectionConfiguration"24@?<v@?@"NSString"@"NSString"@"NSError">32
v40@0:8@"NSArray"16@"ICConnectionConfiguration"24@?<v@?@"NSError">32
v44@0:8@"NSArray"16B24@"ICConnectionConfiguration"28@?<v@?@"NSError">36
v48@0:8q16@"ICCloudAddReferral"24@"ICConnectionConfiguration"32@?<v@?@"NSDictionary"@"NSError">40
v40@0:8@"NSString"16@"ICConnectionConfiguration"24@?<v@?@"NSDictionary"@"NSError">32
v48@0:8@"NSDictionary"16Q24@"ICConnectionConfiguration"32@?<v@?@"NSError">40
v48@0:8@"NSDictionary"16q24@"ICConnectionConfiguration"32@?<v@?@"NSError">40
v40@0:8@"NSArray"16@"ICConnectionConfiguration"24@?<v@?@"NSArray"@"NSError">32
@"NSXPCConnection"
@"<ICCloudServerListenerEndpointProviding>"
{?="participantId"b1"storefront"b1"unreliablePlaybackSyncStatus"b1}
v24@0:8Q16
@"NSArray"
@"ICStoreFinanceItemMetadata"
@?16@0:8
@"ICStoreURLRequest"
@"ICStorePlatformRequestOperation"
@"ICURLSession"
@"ICStorePlatformRequest"
v24@0:8@?<v@?B@"NSString"@"NSError">16
v24@0:8@?<v@?B@"NSError">16
v40@0:8@"NSArray"16@"ICUserIdentity"24@?<v@?B@"NSError">32
v32@0:8@"ICUserIdentity"16@?<v@?B@"NSError">24
v32@0:8@"NSDate"16@?<v@?B@"NSError">24
v40@0:8@"ICUserIdentityProperties"16@"ICUserIdentity"24@?<v@?B@"NSError">32
v40@0:8@"ICDelegateToken"16@"ICUserIdentity"24@?<v@?B@"NSError">32
@"NSError"
{?="bitDepth"b1"bitRate"b1"sampleRate"b1"codec"b1"isSpatialized"b1}
@"ICRadioPlaybackHistoryItem"
v28@0:8d16i24
v24@0:8f16i20
v24@0:8i16i20
v28@0:8q16i24
v28@0:8@16i24
v28@0:8@"NSNumber"16i24
v28@0:8@"NSData"16i24
v28@0:8@"NSString"16i24
@32@0:8^{sqlite3_stmt=}16@24
^{sqlite3_stmt=}16@0:8
@"ICSQLiteConnection"
^{sqlite3_stmt=}
@"ICSQLiteStatement"
v28@0:8B16@?20
v36@0:8@16B24@?28
B32@0:8@16@24
@28@0:8@16B24
@20@0:8B16
v44@0:8@16@24B32@?36
v48@0:8@16@24@32@?40
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"NSSet"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"ICInAppMessageEntry"@"NSError">32
v32@0:8@"ICInAppMessageEntry"16@?<v@?@"NSError">24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSError">16
v44@0:8@"NSString"16@"NSDictionary"24B32@?<v@?@"NSError">36
v40@0:8@"NSString"16@"NSString"24@?<v@?@"ICInAppMessageMetadataEntry"@"NSError">32
v32@0:8@"NSSet"16@?<v@?@"NSDictionary"@"NSError">24
v48@0:8@"ICInAppMessageMetadataEntry"16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v32@0:8@"NSString"16@?<v@?@@"NSError">24
v40@0:8@16@"NSString"24@?<v@?@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?@@"NSError">32
v48@0:8@16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"ICInAppMessageEntry"24@?<v@?@"NSError">32
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@"ICEnvironmentMonitor"16
v44@0:8B16@20@28@?36
@"ICInAppMessageStore"
@"<NSCopying>"
@"NSXPCListener"
@"NSMutableSet"
d24@0:8@16
@"<NSSecureCoding>"
@32@0:8@16Q24
@"_ICLLAddQueueItemsAction"
@"_ICLLClientInfoAction"
@"_ICLLCurrentItemChangeAction"
@"_ICLLCurrentItemTransitionAction"
@"_ICLLDisplayMessage"
@"_ICLLMoveQueueItemAction"
@"_ICLLParticipantChangeAction"
@"_ICLLPlayNowQueueItemsAction"
@"_ICLLPlaybackSyncAction"
@"_ICLLQueueSyncAction"
@"_ICLLReactionAction"
@"_ICLLRemoveQueueItemAction"
@"_ICLLReplaceQueueItemsAction"
@"_ICLLServerNoticeAction"
{?="originatorId"b1"action"b1"displayNotice"b1}
@"_ICLLAutoPlaySource"
{?="revision"b1"trackGenerationSource"b1}
v40@0:8@16@24@32
v24@0:8@"NSNetService"16
v32@0:8@"NSNetService"16@"NSDictionary"24
v32@0:8@"NSNetService"16@"NSData"24
v40@0:8@"NSNetService"16@"NSInputStream"24@"NSOutputStream"32
@"NSNetService"
@"ICDelegationServiceSecuritySettings"
@"<ICDelegationConsumerNetServiceDelegate>"
@"ICADIProvisionSession"
v48@0:8@16@24@32@40
v48@0:8@"ICContentKeySession"16@"NSString"24@"ICSecureKeyDeliveryResponse"32@"NSError"40
@"ICStoreMediaResponseItem"
@"ICURLRequest"
@"ICURLResponse"
@"ICContentKeySession"
@32@0:8@16@?24
@32@0:8q16Q24
{?="insertPositionType"b1"position"b1"revision"b1}
v48@0:8@16@24q32@?40
v48@0:8q16@24q32@?40
v40@0:8q16q24@?32
v40@0:8@16q24@?32
v36@0:8q16B24@?28
v40@0:8q16B24B28@?32
B24@0:8q16
v32@0:8Q16@?24
v32@0:8@16Q24
B32@0:8@16^@24
@"ICConnectionConfiguration"
@"ICCloudServerListenerEndpointProvider"
@"ICCloudClientAvailabilityService"
@"ICCloudClientCloudService"
@"NSObject<OS_dispatch_source>"
v32@0:8@"ICClientInfo"16@?<v@?@"NSString"@"NSError">24
v32@0:8@"ICClientInfo"16@?<v@?B@"NSError">24
@"ICURLBag"
v24@0:8@?<v@?@"NSUUID">16
v32@0:8@"NSUUID"16@?<v@?>24
v32@0:8q16@?<v@?Q@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSError">16
v40@0:8Q16@"ICClientInfo"24@?<v@?@"NSString"@"NSError">32
v48@0:8@"NSString"16Q24@"ICClientInfo"32@?<v@?@"NSString"@"NSError">40
v40@0:8Q16@"ICClientInfo"24@?<v@?@"ICMusicKitTokensResponse"@"NSError">32
@"ICLightweightMusicSubscriptionStatus"
@"ICLibraryAuthServiceClientTokenResult"
@"ICLibraryAuthServiceClientTokenIdentifier"
Q24@0:8@16
@44@0:8@16@24B32^@36
@32@0:8#16^{_NSZone=}24
v20@0:8I16
@"ICLibraryAuthServiceClientTokenResponse"
@"_ICLLQueueQuery"
@"ICMusicSubscriptionStatus"
{?="removeType"b1"revision"b1}
@"ICLibraryAuthServiceBulkClientTokenResponse"
@"NSSet"
@32@0:8@16q24
{?="expirationTimeInterval"b1"sessionID"b1}
B24@0:8@"ICSQLiteConnection"16
@32@0:8@16^@24
@"ICDelegateAccountStoreOptions"
@"ICDelegateAccountStore"
@"ICDelegateAccountStoreXPCWriter"
v28@0:8B16@?<v@?@"NSArray"@"NSError">20
v24@0:8@"NSArray"16
@"ICUserIdentityProperties"
@52@0:8@16Q24I32^@36^@44
B24@0:8^@16
B32@0:8^@16^@24
v32@0:8@"PSYInitialSyncStateObserver"16@"NSUUID"24
v24@0:8@"PSYInitialSyncStateObserver"16
@"NSMapTable"
@"PSYInitialSyncStateObserver"
v24@0:8@"ICDelegationProviderServiceAssertion"16
v32@0:8@"ICDelegationProviderServiceSession"16@"NSError"24
v36@0:8@16@24B32
v24@0:8@"NSNetServiceBrowser"16
v32@0:8@"NSNetServiceBrowser"16@"NSDictionary"24
v36@0:8@"NSNetServiceBrowser"16@"NSString"24B32
v36@0:8@"NSNetServiceBrowser"16@"NSNetService"24B32
@"NSNetServiceBrowser"
@"ICRequestContext"
v24@0:8@"ACAccount"16
@24@0:8^@16
B40@0:8@16@24^@32
@"NSNumber"24@0:8^@16
B32@0:8@"NSNumber"16^@24
@"NSArray"24@0:8^@16
@"ICUserIdentityProperties"32@0:8@"NSNumber"16^@24
@"ICUserIdentityProperties"24@0:8^@16
v32@0:8@"NSNumber"16@?<v@?B@"NSError">24
B40@0:8@"ICUserIdentityProperties"16@"NSNumber"24^@32
@"ICLocalStoreAccountProperties"24@0:8^@16
B32@0:8@"ICLocalStoreAccountProperties"16^@24
@"ICUserVerificationContext"32@0:8@"NSNumber"16^@24
@"ICUserVerificationContext"24@0:8^@16
@"<ICUserIdentityStoreBackendDelegate>"16@0:8
v24@0:8@"<ICUserIdentityStoreBackendDelegate>"16
@"ACMonitoredAccountStore"
@"ACAccount"
@"<ICUserIdentityStoreBackendDelegate>"
@"ICDelegateToken"
{?="dSID"b1}
@"NSDateFormatter"
@"<ICDeveloperTokenProvider>"
@"NSObject<OS_tcc_identity>"
@44@0:8@16q24B32q36
@"_ICLLAddQueueItemsCommand"
@"_ICLLClientInfoCommand"
@"_ICLLCurrentItemChangeCommand"
@"_ICLLCurrentItemTransitionCommand"
@"_ICLLMoveQueueItemCommand"
@"_ICLLPlayNowQueueItemsCommand"
@"_ICLLPlaybackControlSettingsCommand"
@"_ICLLPlaybackSyncCommand"
@"_ICLLReactionCommand"
@"_ICLLRemoveQueueItemCommand"
@"_ICLLReplaceQueueItemsCommand"
{?="command"b1}
@"ACAccountStore"
@"ICStoreDialogResponse"
@"ICPushNotificationsResponse"
@40@0:8@16q24@32
{?="initialAVSyncInitiator"b1}
@32@0:8{_NSRange=QQ}16
^{__CFUserNotification=}16@0:8
v28@0:8B16^{__CFString=}20
@"ICMusicLibraryAuthToken"16@0:8
v24@0:8@"ICMusicLibraryAuthToken"16
@"NSError"16@0:8
v24@0:8@"NSError"16
@"NSDate"16@0:8
v24@0:8@"NSDate"16
@"ICMusicLibraryAuthToken"
{os_unfair_lock_s=I}16@0:8
@"ICLiveLink"
@"NSUUID"
@"NSUUID"24@0:8@"AVPlaybackCoordinator"16
v32@0:8@"AVPlaybackCoordinator"16@"NSDictionary"24
v40@0:8@"AVPlaybackCoordinator"16@"NSDictionary"24@"NSString"32
v40@0:8@"AVPlaybackCoordinator"16@"NSString"24@?<v@?>32
@"AVPlayerPlaybackCoordinator"
@"ICMusicSubscriptionStatusRequest"
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@16@24q32q40
v40@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24@"NSURL"32
v56@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@40@0:8@16Q24q32
v40@0:8@16@24Q32
v40@0:8@16q24q32
@"NSMutableOrderedSet"
@"NSURLSession"
@"ICMediaRedownloadResponse"
@"ICMusicRestoreRequestParameters"
@"ICIAMApplicationMessage"
{?="commandSerialNumber"b1"commandType"b1}
@56@0:8@16Q24@32@40^@48
@40@0:8@16@24Q32
B32@0:8@16Q24
@"AMSBagValue"24@0:8@"NSString"16
v24@0:8@?<v@?@"AMSSnapshotBag"@"NSError">16
@"AMSBagValue"32@0:8@"NSString"16@"ACAccount"24
@"AMSProcessInfo"16@0:8
@32@0:8Q16Q24
B52@0:8I16@20^@28*36^@44
B40@0:8@16^@24^@32
@"_ICLLAvailability"
@"_ICLLNoGenerationSource"
{?="repeatMode"b1"shuffleMode"b1"trackGenerationSource"b1}
(FPContentInfo_=I{VanillaVodkaAttributes_=I^{sinfEntry_}I}{CloudVodkaAttributes_=IIQ}{WHAVodkaAttributes_=IQ})16@0:8
v48@0:8@16@24@?32@?40
@48@0:8#16@24@32^@40
v48@0:8Q16@24@32@?40
v44@0:8@16Q24B32@?36
v48@0:8@16Q24Q32@?40
v48@0:8Q16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v44@0:8@"NSString"16Q24B32@?<v@?@"NSArray"Q@"NSError">36
v32@0:8Q16@?<v@?@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v48@0:8@"NSArray"16Q24Q32@?<v@?@"NSError">40
@32@0:8Q16@24
v40@0:8@16Q24@?32
v40@0:8Q16Q24@?32
v48@0:8@16B24Q28B36@?40
@"ICPlayActivityTable"
@"NSIndexSet"
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
{CGSize="width"d"height"d}
@48@0:8{CGSize=dd}16@32@40
@52@0:8{CGSize=dd}16@32@40B48
^{CGColor=}24@0:8@16
@"ICStoreArtworkSizeInfo"
@"_ICLLPlaybackItemContainer"
@"_ICLLMediaInfo"
{?="contributingParticipantId"b1"sectionType"b1"isExplicit"b1}
v24@0:8@"ICSharedListeningConnectionController"16
v32@0:8@"ICSharedListeningConnectionController"16@"NSError"24
v32@0:8@"ICSharedListeningConnectionController"16@"_ICLLProtocolMessage"24
v24@0:8^v16
v28@0:8@16B24
@"ICSharedListeningQueue"
@"<ICLiveLinkDelegate>"
@"ICLiveLinkPlaybackCoordinatorMedium"
@"ICSharedListeningConnectionController"
@"ICLiveLinkIdentity"
@"ICSharedListeningItem"
v32@0:8@16q24
q24@0:8@16
@"MSVSectionedCollection"
@"ICFPLeaseSyncSession"
@"ICSuzeLeaseSessionConfiguration"
@"<ICSuzeLeaseSessionDelegate>"
@"ICUnfairLock"
@"ICValueHistory"
@"<ICUserIdentityStoreBackend>"
@"ICClientInfo"
v24@0:8@"ICNanoPairedDeviceStatusMonitor"16
v32@0:8@"ICNanoPairedDeviceStatusMonitor"16Q24
v32@0:8@"ICNanoPairedDeviceStatusMonitor"16@"NSUUID"24
{atomic_flag="_Value"AB}
^{MGNotificationTokenStruct=}
@"_ICLLRadioSeed"
@"ICPlayActivityController"
{?="comparisonType"b1"dataType"b1"kind"b1"triggerConditionType"b1}
{?="height"b1"width"b1}
@40@0:8@16^@24^@32
B32@0:8@"NSString"16^@24
@"NSData"40@0:8@"NSString"16^@24^@32
@"NSError"40@0:8@"NSData"16@"NSString"24@"NSDate"32
@"NSError"24@0:8@"NSString"16
v24@0:8@?<v@?@"NSString"@"NSData"@"NSDate"Q^B>16
i24@0:8^{sqlite3=}16
@"NSProgress"16@0:8
@"NSProgress"
@"ICURLResponseHandler"
@"NSURLRequest"
@"NSURLSessionTask"
@"NSObject<OS_dispatch_semaphore>"
@"NSURLResponse"
@"NSMutableData"
@"AVURLAsset"
@"ICURLPerformanceMetrics"
{?="kind"b1}
v32@0:8Q16q24
v40@0:8Q16q24Q32
@"ICLocalStoreAccountProperties"
@"ICMusicAccountNotificationsSettingsResponse"
@"ICIAMImpressionNode"
{?="actionType"b1"pageType"b1"targetType"b1}
@72@0:8@16@24@32@40@48@56@64
@40@0:8@16@24d32
@56@0:8@16q24q32@40@48
@48@0:8@16@24q32@40
@"ICAgeVerifier"
@24@0:8^Q16
{?="date"b1"interval"b1"trigger"b1}
@40@0:8I16I20@24^@32
@"NSNumber"16@0:8
v24@0:8@"NSNumber"16
@"NSArray"16@0:8
@"ICMusicUserState"16@0:8
v24@0:8@"ICMusicUserState"16
@"ICTVUserState"16@0:8
v24@0:8@"ICTVUserState"16
@"ICMusicUserState"
@"ICTVUserState"
v48@0:8@16@24d32@?40
@28@0:8*16I24
@"NSPersonNameComponents"16@0:8
v24@0:8@"NSPersonNameComponents"16
@"NSURL"16@0:8
v24@0:8@"NSURL"16
@"NSUUID"16@0:8
v24@0:8@"NSUUID"16
@"NSPersonNameComponents"
@"_ICLLParticipantQuery"
@"_ICLLPlaybackControlSettingsQuery"
@"_ICLLPlaybackSyncStateQuery"
{?="query"b1}
@"ICStoreDialogResponse"16@0:8
{?="participantId"b1"status"b1}
{?="autoPlayMode"b1"repeatPlayMode"b1"shufflePlayMode"b1}
v40@0:8@"AMSAuthenticateTask"16@"AMSDialogRequest"24@?<v@?@"AMSDialogResult"@"NSError">32
v28@0:8B16@20
v32@0:8d16@24
@"ICDispatchOnce"
@"ICNetworkConstraints"
@"ICDeviceInfo"
@"ICURLResponseAuthenticationProvider"
@36@0:8@16@24B32
@"ICRadioStationTrack"
v40@0:8@"ICDelegationServicePairingSession"16@"NSData"24@?<v@?B@"NSError">32
v32@0:8@"MSVMessageParser"16@"NSData"24
@48@0:8q16@24@32@40
@"<ICDelegationServiceConnectionDelegate>"
@"MSVMessageParser"
@"ICDelegationServicePairingSession"
@"MSVStreamReader"
@"MSVStreamWriter"
@"ICPBDGSRequest"
{?="messageRemovalPolicy"b1"requiresDelegate"b1}
B32@0:8@16q24
B40@0:8@16Q24^@32
B72@0:8^@16^@24Q32Q40@48@56^@64
B80@0:8^@16^@24Q32Q40Q48@56@64^@72
B32@0:8Q16^@24
B84@0:8^@16^@24Q32Q40Q48B56@60@68^@76
@32@0:8@?16Q24
B24@0:8Q16
@"ICPlayActivityEventContainerIDs"
@"ICPlayActivityEnqueuerProperties"
@"NSTimeZone"
@"ICPlayActivityEventItemIDs"
@"ICPlayActivityAudioQualityProperties"
v136@0:8@16@24{?={?=qiIq}{?=qiIq}}32@80{?={?=qiIq}{?=qiIq}}88
v144@0:8@16@24{?={?=qiIq}{?=qiIq}}32@80{?={?=qiIq}{?=qiIq}}88@136
v40@0:8@"NSURLSession"16@"AVAssetDownloadTask"24@"NSURL"32
v136@0:8@"NSURLSession"16@"AVAssetDownloadTask"24{?={?=qiIq}{?=qiIq}}32@"NSArray"80{?={?=qiIq}{?=qiIq}}88
v40@0:8@"NSURLSession"16@"AVAssetDownloadTask"24@"AVMediaSelection"32
v40@0:8@"NSURLSession"16@"AVAggregateAssetDownloadTask"24@"NSURL"32
v40@0:8@"NSURLSession"16@"AVAggregateAssetDownloadTask"24@"AVMediaSelection"32
v144@0:8@"NSURLSession"16@"AVAggregateAssetDownloadTask"24{?={?=qiIq}{?=qiIq}}32@"NSArray"80{?={?=qiIq}{?=qiIq}}88@"AVMediaSelection"136
v40@0:8@"NSURLSession"16@"AVAssetDownloadTask"24@"NSArray"32
@"ICRemoteRequestOperation"
@"ICUserVerificationRequest"
d20@0:8i16
i20@0:8i16
q20@0:8i16
@"ICRadioPlaybackHistory"
@"ICRadioContentReference"
@"ICIAMTriggerCondition"
{?="ruleOperator"b1"type"b1}
v32@0:8q16@?<v@?@"NSXPCListenerEndpoint"@"NSError">24
@32@0:8q16^@24
@"NSXPCListenerEndpoint"32@0:8q16^@24
@56@0:8@16q24@32q40@48
{?="storeAccountID"b1"systemReleaseType"b1"privateListeningEnabled"b1"sBEnabled"b1}
@"ICMusicLibraryAuthTokenStatus"16@0:8
v24@0:8@"ICMusicLibraryAuthTokenStatus"16
@"ICMusicSubscriptionStatus"16@0:8
v24@0:8@"ICMusicSubscriptionStatus"16
@"ICLightweightMusicSubscriptionStatus"16@0:8
v24@0:8@"ICLightweightMusicSubscriptionStatus"16
@"ICMusicUserStateCookies"16@0:8
v24@0:8@"ICMusicUserStateCookies"16
@"ICMusicLibraryAuthTokenStatus"
@"ICMusicUserStateCookies"
@"ICPAPlayActivityEnqueuerProperties"
@"ICPAPlayModeDictionary"
@"ICPAAudioQualityDictionary"
{?="characterDisplayedCount"b1"cloudPlaylistID"b1"containerAdamID"b1"equivalencySourceAdamID"b1"eventDateTimestamp"b1"eventSecondsFromGMT"b1"itemCloudID"b1"itemDuration"b1"itemEndTime"b1"itemStartTime"b1"persistentID"b1"purchasedAdamID"b1"radioAdamID"b1"reportingAdamID"b1"sharedActivityGroupSizeCurrent"b1"sharedActivityGroupSizeMax"b1"stationID"b1"storeAccountID"b1"subscriptionAdamID"b1"tvShowPurchasedAdamID"b1"tvShowSubscriptionAdamID"b1"audioQualityPreference"b1"containerType"b1"displayType"b1"endReasonType"b1"eventType"b1"itemType"b1"mediaType"b1"playbackFormatPreference"b1"reasonHintType"b1"sourceType"b1"systemReleaseType"b1"internalBuild"b1"offline"b1"privateListeningEnabled"b1"sBEnabled"b1"siriInitiated"b1}
@24@0:8#16
^{PairingSessionPrivate=}
@"<ICDelegationServicePairingSessionDelegate>"
{?="revision"b1"type"b1}
@"ICPBDGSFinishDelegationResponse"
@"ICPBDGSStartDelegationResponse"
{?="requestUniqueID"b1}
v36@0:8@"NSNumber"16B24@?<v@?@"ICLibraryAuthServiceClientTokenResult"@"NSError">28
v36@0:8@"NSSet"16B24@?<v@?@"NSDictionary"@"NSError">28
v40@0:8@"ICLibraryAuthServiceClientTokenResult"16@"NSNumber"24@?<v@?@"NSError">32
@"AFMultiUserConnection"
@32@0:8r^v16@24
r^v16@0:8
@"ICPlayInfoResponse"
{?="sessionID"b1}
@44@0:8@16B24@28@36
@"NSRecursiveLock"
@"ICMusicSubscriptionLeaseStatus"
@"<ICMusicSubscriptionLeaseSessionDelegate>"
v24@0:8@?<v@?B>16
{?="type"b1}
@"ICSAPSession"
{?="position"b1"positionType"b1"revision"b1}
@"NSUserDefaults"
^{__CFRunLoopSource=}16@0:8
v24@0:8^{__CFRunLoopSource=}16
^{__CFRunLoopSource=}
v32@0:8^{__CFUserNotification=}16@?24
v32@0:8^{__CFUserNotification=}16Q24
@56@0:8@16@24q32@40@48
@"ICAddToWishListResponse"
v24@0:8@?<v@?@"ICStorePlatformMetadata"^B>16
@"ICStorePlatformMetadata"24@0:8@"NSString"16
@32@0:8@16B24B28
{?="payload"b1}
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v32@0:8@"ICUserIdentity"16@?<v@?@"NSError">24
v40@0:8@16@?24@?32
q24@0:8q16
v36@0:8Q16B24@28
@"MSVDefaultDictionary"
@"ICPBDGSResponse"
@"ICPBDGSFinishDelegationRequest"
@"ICPBDGSStartDelegationRequest"
{?="uniqueID"b1}
v64@0:8q16q24q32@40@48@?56
v36@0:8B16@20@?28
v64@0:8q16q24q32@"ICConnectionConfiguration"40@"NSDate"48@?<v@?@"NSError">56
v48@0:8q16@"NSString"24@"ICConnectionConfiguration"32@?<v@?@"NSError">40
v36@0:8B16@"ICConnectionConfiguration"20@?<v@?@"NSError">28
v56@0:8q16q24q32@40@?48
v36@0:8@16i24@28
v32@0:8@16i24i28
v36@0:8@16@24i32
v36@0:8@"CTXPCServiceSubscriptionContext"16i24@"CTDataConnectionStatus"28
v32@0:8@"CTXPCServiceSubscriptionContext"16i24i28
v28@0:8@"CTXPCServiceSubscriptionContext"16B24
v36@0:8@"CTXPCServiceSubscriptionContext"16@"NSNumber"24i32
v24@0:8@"CTXPCServiceSubscriptionContext"16
v24@0:8@"CTServiceDescriptor"16
v32@0:8@"CTXPCServiceSubscriptionContext"16@"NSArray"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTDataStatus"24
v28@0:8@"CTXPCServiceSubscriptionContext"16i24
v24@0:8@"CTDataSettings"16
v24@0:8@"CTDataConnectionStatus"16
v24@0:8@"CTDataStatusBasic"16
v24@0:8@"CTDataStatus"16
v24@0:8@"CTTetheringStatus"16
v28@0:8@"CTTetheringStatus"16i24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTServiceDisconnectionStatus"24
v28@0:8@"CTServiceDescriptor"16B24
v28@0:8B16q20
@"RadiosPreferences"
^{__CTServerConnection=}
@"CoreTelephonyClient"
v24@0:8@"ICDelegationServiceConnection"16
v32@0:8@"ICDelegationServiceConnection"16@"NSError"24
B32@0:8@"ICDelegationServiceConnection"16@"ICPBDGSRequest"24
@56@0:8@16@24@32@40@48
@"ICDelegationServiceConnection"
@"<ICDelegationProviderServiceSessionDelegate>"
@"ICDelegationProviderServiceProtocolHandler"
@"ICDelegationProviderNetService"
{?="list"^i"count"Q"size"Q}
{?="demarkationPos"b1"explicitSetting"b1"revision"b1}
@"_ICLLActionMessage"
@"_ICLLCommandMessage"
@"_ICLLErrorMessage"
@"_ICLLQueryMessage"
v36@0:8B16@20@28
@"ICDelegationPlayInfoRequestOperation"
@"ICDelegationPlayInfoRequest"
@"ICIAMSynchronizeMessagesResponse"
v32@0:8@"ICRemoteRequestOperationExecutionContext"16@?<v@?@"ICRemoteRequestOperationExecutionResponse">24
B40@0:8@16@24@32
v32@0:8@"AVContentKeySession"16@"AVContentKeyRequest"24
v32@0:8@"AVContentKeySession"16@"AVPersistableContentKeyRequest"24
v40@0:8@"AVContentKeySession"16@"NSData"24@32
v40@0:8@"AVContentKeySession"16@"AVContentKeyRequest"24@"NSError"32
B40@0:8@"AVContentKeySession"16@"AVContentKeyRequest"24@"NSString"32
v24@0:8@"AVContentKeySession"16
v32@0:8@16B24B28
@"AVContentKeySession"
@"<ICContentKeyStoreProtocol>"
@"ICFileContentKeyStore"
@"<ICContentKeySessionDelegateProtocol>"
@"AMSMediaTokenService"
@44@0:8q16B24@28@36
@"ICStoreDialogResponseButtonAction"
{?="code"b1"contentTypeCode"b1}
v40@0:8@"ICMusicSubscriptionStatusResponse"16@"NSUUID"24@"NSError"32
B32@0:8@16@?24
v40@0:8@"ICDelegationConsumerNetService"16@"NSInputStream"24@"NSOutputStream"32
@"ICDelegationConsumerNetService"
@"ICDelegationConsumerServiceProtocolHandler"
@"ICDelegationConsumerServiceRequest"
@"IDSService"16@0:8
@"IDSAccount"16@0:8
@"NSDictionary"16@0:8
@?<v@?@"NSObject<OS_sec_protocol_metadata>"@"NSObject<OS_sec_trust>"@"NSObject<OS_dispatch_queue>"@?<v@?B@"NSError">>16@0:8
@"IDSService"
@"ICSharedListeningConnectionReport"
@"IDSAccount"
@"IDSPseudonym"
@"MSVTimer"
v40@0:8@16i24i28@32
v40@0:8@"CTXPCServiceSubscriptionContext"16i24i28@"CTSuppServicesNotificationData"32
v32@0:8@"CTXPCServiceSubscriptionContext"16@"NSError"24
@"CTXPCServiceSubscriptionContext"
@"ICLiveLinkSessionEvent"
@"ICLiveLinkPlaybackEvent"
@"ICLiveLinkQueueEvent"
@"ICLiveLinkReactionEvent"
@"ICLiveLinkCustomEvent"
@"ICLiveLinkQueueEventContentAdded"
@"ICLiveLinkQueueEventContentPlayedNow"
@"ICLiveLinkQueueEventContentRemoved"
@"ICLiveLinkQueueEventContentReordered"
@"ICLiveLinkQueueEventContentReplaced"
@"ICLiveLinkQueueEventContentUpdatedMessage"
@"ICLiveLinkQueueEventPlaybackModeChanged"
@48@0:8@16q24@32@40
@56@0:8@16q24@32@40@48
@96@0:8@16@24@32@40@48@56@64@72@80@88
@"<AMSBagProtocol>"
v32@0:8^B16^B24
v24@0:8B16B20
v32@0:8@"AMSAuthenticateRequest"16@?<v@?@"AMSAuthenticateResult"@"NSError">24
v32@0:8@"AMSDialogRequest"16@?<v@?@"AMSDialogResult"@"NSError">24
v64@0:8@16@24@32@40@48@?56
v64@0:8@"ICMusicSubscriptionLeaseSession"16@"ICMusicSubscriptionLeasePlaybackRequest"24@"ICMusicSubscriptionPlaybackResponse"32@"NSError"40@"NSArray"48@?<v@?@"ICMusicSubscriptionLeaseStatus"@"NSDate">56
v32@0:8@"ICMusicSubscriptionLeaseSession"16@?<v@?@"ICMusicSubscriptionLeaseStatus"@"NSError">24
{?="commandSerialNumber"b1"dSID"b1"activeCommandsOnly"b1}
@24@0:8d16
v32@0:8@"ICMusicSubscriptionStatusRequest"16@"NSUUID"24
@"<ICSharedListeningConnectionControllerDelegate>"
v24@0:8@"MSVQRConnection"16
v32@0:8@"MSVQRConnection"16@24
v32@0:8@"MSVQRConnection"16@"NSError"24
@"MSVQRConnection"
@"ICLiveLinkQRConnectionDataSource"
@"MSVTaskAssertion"
v24@0:8@"NSData"16
v40@0:8@"NSString"16@"NSString"24@"NSString"32
v32@0:8@"NSString"16@"ICLiveLinkIdentity"24
@"ICUserVerificationContext"
@"ICUserIdentityContext"
{?="accountID"b1"sessionID"b1}
v32@0:8@"NSString"16@"NSString"24
v32@0:8@"NSString"16@"NSError"24
v40@0:8@16@24q32
@40@0:8@16@24q32
{?="autoPlay"b1}
@32@0:8B16B20@24
v24@0:8@"<ICUserIdentityStoreBackend>"16
v32@0:8@?16@?24
v40@0:8q16@?24@?32
v44@0:8@16B24@?28@?36
B20@0:8B16
v24@0:8:16
B44@0:8@16B24@28^@36
@"ICUserIdentityStoreCoding"
v56@0:8@16@24@32q40@?48
@32@0:8{CGSize=dd}16
@"ICDelegationNetServiceTXTRecord"
B40@0:8@16^@24@?32
^{sqlite3=}
@"<ICSQLiteConnectionDelegate>"
@"ICSQLiteConnectionOptions"
I24@0:8@16
@32@0:8Q16^@24
v44@0:8Q16I24@28@?36
v52@0:8Q16I24@28@36@?44
@"ICSecureKeyDeliveryRequest"
{?="participantId"b1"code"b1}
v48@0:8@16@24@32^v40
@"NSHashTable"
{os_unfair_recursive_lock_s="ourl_lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"ourl_count"I}
@"NWPathEvaluator"
B48@0:8Q16^@24^@32^@40
v56@0:8@16@24@32@40@48
@"ICDelegationConsumerService"
v32@0:8@16^{_NSZone=}24
Q36@0:8q16q24B32
^{__SCPreferences=}
{?="commandSerialNumber"b1}
