ICMusicSubscriptionStatusCacheDidChangeNotification
ICMusicSubscriptionStatusCacheUnderlyingCachingPropertiesDidChangeNotification
com.apple.itunescloud.ICMusicSubscriptionStatusDidChangeDistributedNotification
v32@?0@"ICMusicSubscriptionStatusCacheKey"8@"ICMusicSubscriptionStatusResponse"16^B24
v16@?0@"ICMusicSubscriptionStatusCacheKey"8
Caching a non final subscription status request is not allowed: %@.
ICMusicSubscriptionStatusCache.m
com.apple.iTunesCloud.ICMusicSubscriptionStatusCache.accessQueue
com.apple.iTunesCloud.ICMusicSubscriptionStatusCache.calloutQueue
com.apple.iTunesCloud.ICMusicSubscriptionStatusCache.persistenceQueue
v32@?0q8@"NSString"16^B24
B32@?0@"NSURLQueryItem"8q16^B24
recoAlgoId
impressionType
%@ %@
%@ [%@]
Data: %ld Bytes
Expires: %@
Type: CloudCredentials
Type: PICRequest
Missing required expirationDate
token
keybag
v16@?0@"NSDictionary"8
statusCode
isRequestingSlot
companion-guid
guid
true
POST
com.apple.iTunesCloud.ICSAPSession.calloutQueue
com.apple.iTunesCloud.ICSAPSession.prepareFairPlayContextOperationQueue
@"ICSAPSession"16@?0@"NSArray"8
com.apple.iTunesCloud.ICSAPSession.SharedAccessQueue
Mutation not allowed beyond initialization.
ICStoreRequestContext.m
personalizationStyle
allowsExpiredBags
storeDialogResponseHandler
identityStore
identity
delegatedIdentity
_MSVHasherAppend32: invalid byte count detected [byteCount & 3]: %lld
_MSVHasherAppend32: invalid byte count detected [byteCount & 7, tail == 0]: %lld
_MSVHasherAppend64: invalid byte count detected [byteCount & 3]: %lld
_MSVHasherAppend64: invalid byte count detected [byteCount & 7, tail == 0]: %lld
MSVHasher.h
<%@: %p [%@/%@; %@]>
identityStore != nil && identity != nil
Invalid parameter not satisfying: %@
presentationTriggers
impressionEvent
localNotification
holdoutEvent
assetPrefetchStrategy
Immediate
Never
globalPresentationPolicyGroup
Normal
Restricted
modalPresentationStyle
Card
Fullscreen
webArchiveURL
rule
contentPages
hasCloseButton
endDate
startDate
maximumDisplays
templateURL
priority
carousel
messageType
Banner
Modal
Native
Notification
(unknown: %i)
target
identifier
artist-id
rep-cloud-id
artist-name
use-artist
library-artist
com.apple.itunescloudd.ICCloudClientCloudService.serial.queue
metadata
asset-info
file-size
fileSize
SDMV
480p
hdmv
720p
1080p
LWHQ
flavor
fileExtension
sinfs
null
downloadKey
buster
%.0f
com.apple.iTunesCloud.ICStorePlatformRequestOperation.accessQueue
events
override-headers
container-ids
cloud-playlist-id
playlist-version-hash
global-playlist-id
artist-adam-id
cloud-album-id
album-adam-id
station-personalized-id
station-id
station-hash
lyric-id
cloud-id
purchased-adam-id
orig-sf-adam-id
subscription-adam-id
auc-adam-id
radio-adam-id
event-type
event-reason-hint-type
personalized-container-id
external-identifier
container-id
siri-initiated
household-id
bundle-version
bundle-id
type
track-info
timed-metadata
start-position-in-milliseconds
source-type
reco-data
milliseconds-since-play
persistent-id
play-mode
auto-play-mode
shuffle-play-mode
repeat-play-mode
offline
media-type
media-duration-in-milliseconds
feature-name
lyric-language
character-displayed-count
display-type
end-reason-type
end-position-in-milliseconds
container-type
player
enqueuer
dsid
internal-build
private-enabled
build-version
utc-offset-in-seconds
store-front
device-name
sb-enabled
build-features
user-preference-playback-format
user-preference-audio-quality
audio-quality-provided
audio-quality-targeted
audio-sample-rate-in-hz
codec
audio-channel-type
bit-rate-in-bps
audio-bit-depth
song
feature-movie
music-video
tv-episode
vendorId
en_US_POSIX
yyyy-MM-dd'T'HH:mm:ss'Z'
releaseDate
rank
copyright
compilation
versionRestrictions
sampleRate
kind
isMasteredForItunes
gapless
bitrate
dateAdded
comments
bitRate
year
explicit
duration
trackNumber
trackCount
discNumber
discCount
playlistId
genreId
genre
sort-composer
composerName
playlistArtistName
sort-album
playlistName
artistId
sort-artist
artistName
sort-name
itemName
itemId
com.apple.itunescloud.delegate-account-store
isFamily
waitTime
fuseSmsSessionId
fuseSilentSMSNumber
fuseSilentSMSMessage
fuseHeaderEnrichmentUrl
fuseHeaderEnrichmentSessionId
fuseHeaderEnrichmentMessage
hasFuseCarrierBundleSubscription
startFuseManualSms
startFuseHeaderEnrichment
checkBack
fuseCarrierBundleStatus
errorCode
status
failureType
channelLayoutDescription
bitDepth
tracks
stationID
skips
curIndex
v16@?0@"NSMutableArray"8
queue
skips-used
containerID
store
Statement already finalized
ICAgeVerificationStateDidChangeNotification
korea
Bag should never be nil when no error was provided
ICAgeVerificationManager.m
ICAgeVerificationManager - Error retrieving bag during age verification
Error retrieving properties for account %@ during age verification - Explicit content allowed and marked with 'E'.
v16@?0@"ICAgeVerificationState"8
com.apple.iTunesCloud.ICAgeVerificationManager.serialAccess
com.apple.iTunesCloud.ICAgeVerificationManager.concurrentCallout
keychain-access-groups
apple
com.apple.itunescloud.in-app-message-service
ICInAppMessagesDidChangeNotification
Music
music-notification-default
com.apple.iTunesCloud.ICInAppMessageManager.performCacheConsistencyCheck
ResourceCache
InAppMessages
v24@?0@"ICInAppMessageEntry"8@"NSError"16
v24@?0@"ICInAppMessageConfiguration"8@"NSError"16
com.apple.iTunesCloud.ICInAppMessageManager.setShouldDownloadResources
com.apple.itunescloud.ICInAppMessagesDidChangeDistributedNotification
com.apple.iTunesCloud.ICInAppMessageManager.downloadMessageResources
com.apple.iTunesCloud.ICInAppMessageManager.performSyncRetryIfPending
ams_%@
Remove
RemoveAll
Reset
v24@?0@"ICIAMSynchronizeMessagesResponse"8@"NSError"16
com.apple.itunescloud.ICInAppMessageManager.periodic-poll-activity
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.iTunesCloud.ICInAppMessageManager.handleAccountChange
com.apple.iTunesCloud.ICInAppMessageManager.clearMetadataForMessageIdentifier
com.apple.iTunesCloud.ICInAppMessageManager.updateMetadata
v24@?0@"ICInAppMessageMetadataEntry"8@"NSError"16
com.apple.iTunesCloud.ICInAppMessageManager.downloadResourcesForMessageWithIdentifier
com.apple.iTunesCloud.ICInAppMessageManager.flushEvents
com.apple.iTunesCloud.ICInAppMessageManager.reportEvents
com.apple.iTunesCloud.ICInAppMessageManager.resetMessages
com.apple.iTunesCloud.ICInAppMessageManager.syncMessages
com.apple.iTunesCloud.ICInAppMessageManager.removeAllMessagesForBundleIdentifier
com.apple.iTunesCloud.ICInAppMessageManager.removeMessageWithIdentifier
com.apple.iTunesCloud.ICInAppMessageManager.updateMessage
com.apple.iTunesCloud.ICInAppMessageManager.addMessage
com.apple.iTunesCloud.ICInAppMessageManager.accessQueue
com.apple.iTunesCloud.ICInAppMessageManager.downloadOperationQueue
com.apple.iTunesCloud.ICInAppMessageManager.operationQueue
date
remoteRequestOperationResponse
remoteRequestOperationResponseClassName
Attempted to encode an instance of ICRemoteRequestOperationExecutionResponse with an unallowed class name for remoteRequestOperationResponse: %@.
remoteRequestOperationError
Failed to look up class of developer token provider with name: %@.
Attempted to decode an instance of ICRemoteRequestOperationExecutionResponse with an unallowed class name for remoteRequestOperationResponse: %@.
salableAdamId
local.
com.apple.iTunesCloud.ICDelegationConsumerNetService.accessQueue
com.apple.iTunesCloud.ICDelegationConsumerNetService.netServiceQueue
com.apple.iTunesCloud.ICDelegationConsumerNetService.calloutQueue
tvshow
musicvideo
movie
music
match
purchaseHistory
downloadKey=%@
failDownloadOnConstrainedNetworks.
wifi.
power.
discretionary.
com.apple.iTunesCloud.ICMediaAssetDownloadRequest.
com.apple.iTunesCloud.ICURLSessionManager.%@
UserInteractive
UserInitiated
Utility
Background
Unknown
com.apple.SessionTrackerApp
@"ICURLSession"8@?0
com.apple.iTunesCloud.ICURLSessionManager.accessQueue
application/gzip
application/json
userIndentity cannot be nil
userIndentityStore cannot be nil
ICCloudClient.m
v16@?0B8B12
com.apple.itunescloudd.jaliscoUpdateInProgressChanged
com.apple.itunescloudd.sagaUpdateInProgressChanged
v20@?0@"NSError"8f16
v24@?0@"NSError"8@"NSArray"16
v16@?0@"NSArray"8
v24@?0@"NSNumber"8@"NSError"16
v24@?0q8@"NSError"16
v24@?0@"NSURL"8@"NSError"16
enabled
disabled
MLCloudAccountAddToPlaylistBehavior
ML3MusicLibrary
com.apple.iTunesCloud.ICCloudClient.serial.access
com.apple.itunesstored.autodownloaddefaultschange
com.apple.itunesstored
AllowAutoDownloadOnCellular
AllowMatchOnCellular
com.apple.mobileipod
HasMigratedMusicMatchCellularDataSwitch
com.apple.Music-AllowsCellularDataDownloads
com.apple.Music
AllowsCellularDataDownloads
HasMigratedMusicDownloadsOnCellularDataSwitch
MLCloudAccountID
MLCloudDatabaseUserVersion
MLJaliscoAccountID
MLStorefrontID
MLCloudDatabaseRevision
MLCloudLastLibraryUpdate
MLCloudLastSubscribedContainersUpdate
MLJaliscoDatabaseRevision
MLJaliscoLastLibraryUpdate
MLCloudDatabasePreferredVideoQuality
unknown reason
initial load
push notification
user initiated poll
periodic poll
periodic reload
user initiated reload
app launch poll
edit initiated poll
edit error reload
subscribed playlist periodic poll
subscribed playlist TTL refresh
subscribed playlist manual refresh
supported sync media types changed
deferred push notification
ICAddToPlaylistBehaviorUndecided
ICAddToPlaylistBehaviorAlwaysAddToLibrary
ICAddToPlaylistBehaviorOnlyAddToPlaylist
com.apple.iTunesCloud.ICAsyncBlockOperation.accessQueue
v16@?0@"ICRemoteRequestOperationExecutionResponse"8
com.apple.iTunesCloud.ICRemoteRequestOperationController.accessQueue
assets
lease-id
redownload-parameters
purchaseDate
purchased-redownload
download-id
cancel-download-url
artworkURL
songId
v32@?0@"NSURLRequest"8@"ICStoreURLRequestBuilderProperties"16@?<v@?@"NSDictionary"@"NSError">24
fetchMetadata
v24@?0@"ICRadioFetchMetadataResponse"8@"NSError"16
gzip
allowed-match-status
allowed-kinds
tokenID
lifespanMillis
ttlMillis
generatedAtMillis
tokenString
deviceGUID
%@: [%@, expires %@]
<private>
timeToLiveMillis
%@ resultCode=%d token=%@
result
success
serverInstance
serverHostName
resultCode
deviceID
time
delegation
%@: [%@]
Account: <redacted>
Active Locker Account: <unresolved dsid>
Active Locker Account: <redacted dsid>
Active Account: <unresolved dsid>
Active Account: <redacted dsid>
Autoupdating Active Account
Autoupdating Active Locker Account
Null
Account: <%@>
Carrier Bundle: %@
Active Locker Account: <%@>
Active Account: <%@>
 sampleRate: %zd
codec: %@
%c%c%c%c
channels: %@
 bitDepth: %zd
 bitRate: %zd
<%@ %p
ICURLBagProviderDidUpdateBagNotification
request_context
url_bag
URLBags
%@.plist
unknown
build_version
cache_entries
v32@?0@"NSString"8@"ICURLBag"16^B24
&locale=%@
&os=%@
https://init.itunes.apple.com/bag.xml?ix=6
%ld-%@-%@-%@-%@-%@
v32@?0@"ICURLBag"8Q16^B24
requestContext != nil
ICURLBagProvider.m
com.apple.iTunesCloud.ICURLBagProvider.access
com.apple.iTunesCloud.ICURLBagProvider.persistence
com.apple.iTunesCloud.ICURLBagProvider.callback
expiration
valid
subscriptionStatus
needsReload
isFinalResponse
expirationDate
; subscriptionStatus = %@
; needsReload = YES
; isFinalResponse = %@
; expirationDate = %@
<%@: %p
errorMessage
dsids
sslToken
mz_at_ssl-%@
com.apple.iTunesCloud.ICDelegationConsumerServiceProtocolHandler.calloutQueue
com.apple.iTunesCloud.ICDelegationConsumerServiceProtocolHandler.operationQueue
iOS-
ATV-
Missing bag key '%@'
lease-only
followup
com.apple.iTunesCloud.ICMusicSubscriptionPlaybackRequestOperation.accessQueue
com.apple.itunescloud.setupcompleted
size
preview
%@; shouldSignBody=%d, fields=%@, headers=%@
storefrontIdentifier
expirationTimeInterval
sessionID
ICDelegateAccountStoreDidChangeNotification
Cannot use a closed delegate account store: %@
v16@?0@"<ICDelegateAccountStoreWriter>"8
options not single-writer
Invalid XPC options
Non-concrete user identity: %@
Out-of-scope transaction usage: %@
v16@?0^{__CFDictionary=}8
CACHE_DELETE_PURGE_TIMEOUT
CACHE_DELETE_AMOUNT
/private/var
CACHE_DELETE_VOLUME
com.apple.itunescloud.ICStorageManager.accessQueue
com.apple.iTunesCloud
Caches
; qualityOfService = %@
userInteractive
userInitiated
utility
background
default
????
; maxConcurrentOperationCount = %ld
; name = "%@"
com.apple.iTunesCloud.ICAsyncOperation.childOperationQueue-%@
isExecuting
isFinished
error
NRPairedDeviceRegistry
/System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry
NRDevicePropertyUDID
NRDevicePropertyCompanionMusicGUID
C5DDE5DD-2FF7-4735-80A3-0108488556DE
NRDevicePropertyIsAltAccount
NRPairedDeviceRegistryDeviceDidBecomeActive
com.apple.nanoregistry.paireddevicedidchangeversion
com.apple.nanoregistry.devicedidunpair
com.apple.nanoregistry.devicedidpair
com.apple.amp.iTunesCloud.ICNanoPairedDeviceStatusMonitor.queue
com.apple.amp.iTunesCloud.ICNanoPairedDeviceStatusMonitor.callBackQueue
PSYInitialSyncStateObserver
/System/Library/PrivateFrameworks/PairedSync.framework/PairedSync
NRDevicePropertyPairingID
com.apple.iTunesCloud.ICDelegationProviderService.supportedDelegationAccountUUIDsAccessQueue
v32@?0@"ICDelegateToken"8@"ICUserIdentity"16^B24
local
Cannot start XPC service for non-system service.
ICDelegationProviderService.m
com.apple.iTunesCloud.ICDelegationProviderService.accessQueue
com.apple.iTunesCloud.ICDelegationProviderService.netServiceBrowserQueue
com.apple.iTunesCloud.ICDelegationProviderService.identityStoreOperationQueue
B32@?0@"ACAccount"8q16^B24
com.apple.itunesstored.accountschanged
com.apple.iTunesCloud.ICUserIdentityStoreACAccountBackend.callbackQueue
privateListeningEnabledForHomeUsers
active
activeLocker
privateListeningEnabled
cloudLibraryStateReason
homeUserIdentifiers
mergeToCloudLibraryPreference
ageVerificationExpirationDate
username
subscriptionStatusEnabled
storefront
sandboxed
isManaged
lastName
iCloudPersonID
firstName
delegateToken
delegated
cloudBackup
carrierDeviceID
altDSID
DSID
q24@?0@"NSURL"8@"NSURL"16
value
name
content
bodySize
text
mimeType
headersSize
headers
httpVersion
HTTP/1.1
statusText
postData
method
version
com.apple.itunescloud
%@_%@.har
yyyy-MM-dd_HH-mm-ss-SSSS
entries
creator
response
request
com.apple.itunescloud.ICHTTPArchive.accessQueue
HTTPArchives
ICMusicKitRequestContext.m
Setting up a MusicKit request context with a developer token provider that is not provided by iTunesCloud.framework is not supported.
developerTokenProvider
developerTokenProviderClassName
Attempted to encode an instance of ICMusicKitRequestContext with an unallowed class name for developerTokenProvider: %@.
personalizationMethod
Attempted to decode an instance of ICMusicKitRequestContext with an unallowed class name for developerTokenProvider: %@.
; developerTokenProvider = %@
; personalizationStyle = %@
automatic
always
; personalizationMethod = %@
legacy
musicUserToken
; client = %@/%@
v16@?0@"ICMusicKitRequestContext"8
familyMemberStoreID
requestReason
purchaseClientIdentifier
buildIdentifier
libraryBagKey
baseURL
userIdentityStore
userIdentity
%@/%@%@
%@/%@
UNKNOWN
BuildVersion
recommendedContentIds
Software
count
cloudId
adamId
silent-only
silent-if-possible
always-renew
establish-only
once-a-day
<%@ %p shouldPlaybackRequireOnlineKeys: %@; hasOnlinePlaybackKeys: %@; hasOfflinePlaybackKeys: %@; hasPendingLeaseAcquisition: %@, isTakenDueToLeasePrevention:%@, leaseState: %@; stateReasonDialog: %@>
expired
taken
serial-number
device-name-data
environment
register-success
affiliateID
%lld
excludeFromBackgroundRefresh
lastUpdateTime
lastError
tokenResult
lockup
play
playlist-product
product
omni
caller
artwork
platform
X-JS-SP-TOKEN
X-JS-TIMESTAMP
yyyy-MM-dd HH:mm:ss ZZZ
Batch size must be <= %ld
com.apple.iTunesCloud.ICStorePlatformRequest.union
com.apple.iTunesCloud.ICStorePlatformRequest.callout
v24@?0@"<ICStorePlatformResponse>"8@"NSError"16
com.apple.iTunesCloud.ICStorePlatformRequest.operationQueue
v32@?0@"ICStoreDialogResponseButton"8Q16^B24
playlist
album
artist
tvSeason
radioStation
musicVideo
uploadedAudio
uploadedVideo
tvEpisode
YYYY-MM-dd
audioTraits
workName
title
formerIds
showComposer
offers
movementNumber
movementName
movementCount
hasTimeSyncedLyrics
hasLyrics
genres
genreNames
is-explicit
contentRatingsBySystem
composer
collectionId
collectionName
libraryTrackId
v20@?0@"ICMutableMusicSubscriptionStatus"8B16
%@%@
%@ _performSubscriptionStatusURLRequestWithRequestContext:... is required to call its completion handler with either a non-nil response, or a non-nil error.
ICMusicSubscriptionStatusRequestOperation.m
unsupported request type %d
ICURLSession.m
_enqueue request called with nil request
Download request received HTTP status code %ld
Too many redirects (%d)
tmp.%@
com.apple.iTunesCloud.ICURLSession.access
com.apple.iTunesCloud.ICURLSession.operation
com.apple.iTunesCloud.ICURLSession.oversizeLogging
items
match-status
account-id
store-front-id
item-id
com.apple.atc
application/x-apple-plist
ICInAppMessageEntryResourceIdentifierWebArchive
ICInAppMessageEntryResourceIdentifierTemplate
resourceCache
didCacheRequiredResources
shouldDownloadResources
bundleID
applicationMessage
[%@:%@, %@, (valid from %@ - %@), download=%d]
com.apple.iTunesCloud.ICInAppMessageEntry.accessQueue
commandSerialNumber
commandType
AMSBag: AMSSnapshotBag failed.
ICCloudClientErrorDomain
ICCloudClientLibraryUploadErrorDomain
v20@?0@"ICMutableUserIdentityProperties"8B16
com.apple.iTunesCloud.ICDelegateAccountStoreServiceListener.accessQueue
com.apple.iTunesCloud.ICDelegateAccountStoreServiceListener.callbackQueue
dmap.status
dmap.itemid
dmap.longitemid
dmap.dictionary
full-token
full-url
oval-token
oval-url
template-url
supports-layered-image
template-artwork-json
cover-url
cover-artwork-json
com.apple.itunescloudd.isAuthenticatedDidChangeNotification
com.apple.itunescloudd.artworkDownloadsDidCompleteNotification
com.apple.itunescloudd.cloudAddToPlaylistBehaviorDidChangeNotification
com.apple.itunescloudd.enableCloudLibraryFailureTypeChangedNotification
com.apple.itunescloudd.startingInitialImportNotification
cloudStatusMonitor
cloud
networkAvailability
main
applicationMessageSyncResponses
anonymous
%@_%@.plist
com.apple.iTunesCloud.ICRadioPlaybackHistoryStore
com.apple.iTunesCloud.ICRadioPlaybackHistoryStore.callback
com.apple.iTunesCloud.ICRadioPlaybackHistoryStore.identity
ICRadioPlaybackHistoryStore.m
ICRadioPlaybackHistoryStore
ICPlayActivityControllerEndpointIdentifierJingle
ICPlayActivityControllerEndpointIdentifierPairedDevice
ICPlayActivityControllerDidRecordPlayActivityEventsNotification
ICPlayActivityControllerEndpointRevisionInformationDidChangeNotification
ICPlayActivityControllerUserInfoKeyEndpointIdentifier
ICPlayActivityControllerUserInfoKeyEndRevision
ICPlayActivityControllerUserInfoKeyStartRevision
com.apple.iTunesCloud.ICPlayActivityControllerEndpointRevisionInformationDidChange
ICPlayActivityEndpointRevisionInformation
RevisionVersionToken
CurrentRevision
AdditionalPendingRevisions
v32@?0Q8@"NSString"16@"NSError"24
com.apple.itunescloudd.playactivity
v32@?0@"_ICPlayActivityFlushSessionInformation"8@"NSArray"16@"NSError"24
com.apple.iTunesCloud.ICPlayActivityController.debugLogOperationQueue
com.apple.PlayActivityFeed
ShouldDebugLogRecordedEvents
com.apple.iTunesCloud.ICPlayActivityController.serialQueue
notification-type
remove-push-notification-type-url
movpkg
file-read-data
file-write-data
bgColor
textColor1
textColor2
textColor3
textColor4
heic
height
width
{CGSize=dd}
q24@?0@"NSDictionary"8@"NSDictionary"16
hasP3
format != nil
cropStyle != nil
ICStoreArtworkInfo.m
responseDictionary
responseArray
q24@?0@"ICStoreArtworkInfo"8@"ICStoreArtworkInfo"16
Unable to start lease session [no valid DSID for user identity] - userIdentity=%@ - properties=%@
com.apple.iTunesCloud.ICSuzeLeaseSession.calloutQueue
com.apple.iTunesCloud.ICSuzeLeaseSession.operationQueue
streamingRental
playback
lightweight
icloud-backup-enabled
style
delegationOptions
backend
lockerHistory
accountHistory
eventParameters
applicationMessageIdentifier
dpInfo
pinf
sinf
sinf2
com.apple.itunescloudd
%@ in response is of unexpected type.
music_token
Failed to fetch music user token with unauthorized (%ld) status code. %@.
This is most likely due to an expired or otherwise invalid developer token
error_description
tcc-acceptance-date
assertion
v16@?0@"NSString"8
Missing requesting bundle version for user token request.
Missing requesting bundle identifier for user token request.
Missing developer token for user token request.
options
developerToken
clientInfo
Media/EnhancedAudioSharedKeys/
playerInfoContextRequestToken
Beta
Carrier
Internal
Desense
Lite Internal
Vendor
NonUI
Restore
DeviceClassNumber
/bfa1LxXd7G1WqHujpjsdA
AppleLocale
InternalBuild
watchOS
System/Library/CoreServices/SystemVersion.plist
main-screen-class
DeviceSupports1080p
DeviceSupports720p
wapi
wi-fi
CellularTelephonyCapability
cellular-data
main-screen-height
main-screen-width
IOService
IOMACAddress
IOBuiltin
%02X
com.apple.iTunesCloud.ICDeviceInfo.deviceNameUpdateQueue
UserAssignedDeviceName
UniqueDeviceID
%012x
HardwarePlatform
ReleaseType
ProductType
v32@?0@"NSArray"8Q16@"NSError"24
com.apple.iTunesCloud.ICFlushPlayActivityEventsOperation.serialQueue
v32@?0@"NSNumber"8Q16^B24
v16@?0Q8
v28@?0@"NSArray"8Q16B24
com.apple.itunesstored.ICPlayActivityFeedFlushOperation.accessQueue
initWithPlayActivityController called with nil playActivityController
ICFlushPlayActivityEventsOperation.m
-init is not supported, use initWithPlayActivityController
bundleIdentifier
Event
ContextProperty
triggerConditionType
Countable
Value
triggerValue
comparisonType
Equal
NotEqual
LessThan
LessThanOrEqualTo
GreaterThan
GreaterThanOrEqualTo
dataType
Boolean
String
Integer
com.apple.iTunesCloud.ICInAppMessageMetadataEntry.accessQueue
ic-key
%@-%lud.%@
base-url
like-event-url
header-actions
max-queue-size-for-autoplay
continue-listening
max-upcoming-tracks-to-maintain
max-queue-size-in-request
max-protocol-version
num-kbsyncs-to-include-for-getTracks
ICAgeVerifier %p - verificationExpirationDate: %@ - status: %@
Age verification status unknown
Age verification not required
Age verification required
Age verification completed and successful
PRAGMA journal_mode=WAL
PRAGMA cache_size=%ld
album-id
results
-----------------------------------------
PlayActivityEvents.log
There is no retry count for ICURLResponseHandlingRetryReasonNone.
ICURLRequest.m
AppleLanguages
 [%@/%@]
com.apple.itunescloud.ICURLRequest.observer
Data
Download
Upload
AVDownload
Resumed Download
AVAggregateDownload
<unknown>
v32@?0@"ACAccount"8Q16^B24
homeUserID
ACAccountStore+ICAccountStoreAdditions.m
v24@?0@"ACAccountType"8@"NSError"16
storeAccountID
v24@?0@"ACAccount"8@"NSError"16
playerDelegateInfoToken
triggerName
<%@: %p Item ID Count = %lu>
ICCloudItemIDListIDTypes
ICCloudItemIDListItemIDs
localStoreAccountProperties
lockerDSID
activeDSID
application/json; charset=UTF-8
serviceId=com.apple.Music
setPushNotificationSettings
getPushNotificationSettings
impression
pageUrl
eventType
actionDetails
actionURL
actionType
Navigate
Swipe
Select
targetType
Button
Slider
Close
targetId
pageDetails
pageType
pageId
v52@?0@"ICDelegationConsumerServiceSession"8@"ICUserIdentity"16@"ICDelegateToken"24@"NSString"32@"NSError"40B48
com.apple.ICDelegationConsumerService.accessQueue
album-name
library-album
NoDSID
ICAgeVerificationStateKeyAgeVerifierExpirationDate
ICAgeVerificationStateKeyVerificationURL
ICAgeVerificationStateKeyTreatment
ICAgeVerificationStateKeyStatus
ICAgeVerificationStateKeyDSID
_status != ICAgeVerificationStatusUnknown
ICAgeVerificationState.m
ICAgeVerificationState %p - explicit content allowed: %u - status: %@ - treatment: %ld - url: %@ - verifier: %@ - error: %@
[dictionaryRepresentation[ICAgeVerificationStateKeyAgeVerifierExpirationDate] isKindOfClass:[NSDate class]] || !dictionaryRepresentation[ICAgeVerificationStateKeyAgeVerifierExpirationDate]
[dictionaryRepresentation[ICAgeVerificationStateKeyVerificationURL] isKindOfClass:[NSString class]] || !dictionaryRepresentation[ICAgeVerificationStateKeyVerificationURL]
[dictionaryRepresentation[ICAgeVerificationStateKeyTreatment] isKindOfClass:[NSNumber class]]
[dictionaryRepresentation[ICAgeVerificationStateKeyStatus] isKindOfClass:[NSNumber class]]
[dictionaryRepresentation[ICAgeVerificationStateKeyDSID] isKindOfClass:[NSString class]]
v24@?0@"ICMusicSubscriptionCarrierBundlingEligibilityResponse"8@"NSError"16
deepLink
sessionId
phoneNumber
responseMessage
com.apple.iTunesCloud.ICMusicSubscriptionCarrierBundlingEligibilityOperation
SOAPAction
ValidateMobile
error-underlying
error-message
error-title
error-code
error-domain
responseCode
IMEI
carrier
v16@?0@?<v@?>8
timestamp
v32@?0@"_ICValueHistoryItem"8Q16^B24
v40@?0@8Q16q24^B32
notification
interval
trigger
Calendar
TimeInterval
com.apple.amp.iTunesCloud
Default
Default_Oversize
CloudClient
Delegation
AgeVerification
Subscription
Subscription_Oversize
StoreArtworkInfo
AccountNotifications
SHOUTCAST
is-itunes-stream
stream-key-server-url
stream-key-cert-url
stream-url
stream-protocol
.siri_data_changed
com.apple.siri.client.state.DynamiteClientState%s
shouldRecordLastAuthenticationDialogResponseTime
allowsHandlingNonAuthenticationDialogs
/System/Library/PrivateFrameworks/AskPermission.framework/AskPermission
/System/Library/PrivateFrameworks/AskPermission.framework/Contents/MacOS/AskPermission
void *AskPermissionLibrary(void)
APRequestHandler
Class getAPRequestHandlerClass(void)_block_invoke
Unable to find class %s
ICStoreDialogResponseHandler.m
v24@?0@8@"NSError"16
v24@?0@"ICMediaRedownloadResponse"8@"NSError"16
sagaId
com.apple.amp.iTunesCloud.ICDeviceSetupStatusMonitor.queue
com.apple.amp.iTunesCloud.ICDeviceSetupStatusMonitor.callBackQueue
BYSetupAssistantLaunchedDarwinNotification
BYSetupAssistantFinishedDarwinNotification
BYSetupAssistantNeedsToRun
SetupAssistant
songList
jingleAction
download-queue-item-count
dialog
cancel-purchase-batch
authorized
syncCommands
auto_play_mode
shuffle_play_mode
repeat_play_mode
v24@?0@"AMSAuthenticateResult"8@"NSError"16
This action requires authentication to proceed
com.apple.iTunesCloud.ICDispatchOnce
WebKit.framework
Frameworks
 (%@)
dt:%d
 build/%@
 hwp/%@
 model/%@
 AppleTV/%@
 %@/%@
 AppleWebKit/%@
 (Macintosh; OS X %@)
ICRequestContext.m
authenticationProvider
authenticationProviderClassName
Attempted to encode an instance of ICRequestContext with an unallowed class name for authenticationProvider: %@.
networkConstraints
Failed to look up class of authentication provider with name: %@.
Attempted to decode an instance of ICRequestContext with an unallowed class name for authenticationProvider: %@.
<%@: %p [%@/%@]>
inAppMessagesPollingIntervalSeconds
inAppMessagesResourceDomain
inAppMessagesSync
inAppMessagesSerialCheck
inAppMessagesReportEvent
v24@?0@"ICMusicAccountNotificationsSettingsResponse"8@"NSError"16
v24@?0@"ICMusicSubscriptionStatus"8@"NSError"16
v24@?0@"NSString"8@"NSString"16
adam-id
like-value
is-skippable
asset-url
subscription
drm-type
before
promo-content
after
com.apple.iTunesCloud.ICDelegationServiceConnection.accessQueue
com.apple.iTunesCloud.ICDelegationServiceConnection.calloutQueue
com.apple.iTunesCloud.ICDelegationServiceConnection.streamReaderQueue
com.apple.iTunesCloud.ICDelegationServiceConnection.streamWriterQueue
v16@?0@"NSData"8
preferences
albumAdamID
playlistGlobalID
messageRemovalPolicy
None
Local
Global
clickEvent
actionParameters
requiresDelegate
displayText
X-Apple-Tz
X-Apple-I-Client-Time
X-Apple-Connection-Type
X-Apple-Cuid
X-Apple-Issuing-Process
X-Apple-Requesting-Process
X-Apple-NSURLCachePolicy
X-Apple-Store-Front
iCloud-DSID
X-Dsid
X-Guid
X-WHA-Token
X-Apple-Set-Cookie
X-Apple-Set-User-Cookie
X-Apple-AMD
X-Apple-AMD-M
X-Apple-AMD-S
X-Apple-AMD-Action
X-Apple-AMD-Data
X-Apple-MD
X-Apple-MD-M
X-Apple-MD-S
X-Apple-MD-Action
X-Apple-MD-Data
X-Apple-ActionSignature
X-Set-Apple-Store-Front
x-apple-jingle-correlation-key
X-Apple-Device-Model
X-Enqueuer-DSID
X-Request-TimeStamp
x-apple-use-amd
X-Apple-Requesting-Bundle-Id
X-Apple-Requesting-Bundle-Version
X-Apple-Request-Store-Front
X-Apple-Private-Listening
X-Apple-Enqueuer-Private-Listening
X-Apple-Enqueuer-Store-Front
X-Apple-Allow-Auth-Types
X-Mme-Client-Application
X-Apple-Application-Site
apple-timing-app
X-Cache
NSURLRequestReloadIgnoringCacheData
NSURLRequestReloadIgnoringLocalAndRemoteCacheData
NSURLRequestReturnCacheDataElseLoad
NSURLRequestReloadRevalidatingCacheData
NSURLRequestReturnCacheDataDontLoad
NSURLRequestUseProtocolCachePolicy
.apple.com
itfe
yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'
com.apple.iTunesCloud.ICStoreURLRequest.serialQueue
[requestContext=%@]
[requestContext isKindOfClass:[ICStoreRequestContext class]]
ICStoreURLRequest.m
WiFi
v16@?0@"NSXPCConnection"8
v28@?0B8@"NSString"12@"NSError"20
com.apple.iTunesCloud.ICDelegateAccountStoreXPCWriter.accessQueue
com.apple.iTunesCloud.ICDelegateAccountStoreXPCWriter.callbackQueue
requestIdentifier
shouldBypassEnforcementOfPrivacyAcknowledgement
shouldReturnLastKnownStatusOnly
storeRequestContext
shouldIgnoreCache
reason
carrierBundleProvisioningStyle
allowsFallbackToStatusNeedingReload
allowsFallbackToExpiredStatus
; requestIdentifier = %@
; shouldBypassEnforcementOfPrivacyAcknowledgement = YES
; shouldReturnLastKnownStatusOnly = YES
; shouldIgnoreCache = YES
; reason = %@
; carrierBundleProvisioningStyle = %@
never
once
; allowsFallbackToStatusNeedingReload = YES
; allowsFallbackToExpiredStatus = YES
; storeRequestContext = %@
SELECT %@ FROM %@ WHERE %@ = '%@';
key cannot be nil
ICPlayActivityTable.m
DELETE FROM %@ WHERE %@ = '%@';
INSERT OR REPLACE INTO %@ (%@, %@) VALUES ('%@', '%@');
%llu%@
revision_id
SELECT DISTINCT %@ FROM %@ WHERE %@ IN (
%@ ASC;
%@,%@ ASC;
) ORDER BY 
v32@?0{_NSRange=QQ}8^B24
 OR %@ BETWEEN %lu AND %lu
%@ BETWEEN %llu AND %llu
(%@ == %llu) AND (
 FROM %@ WHERE (
store_account_id
event_data
SELECT 
-shm
-wal
play_activity.sqlitedb
Library
Q16@?0Q8
DELETE FROM %@ WHERE %@ <= ?;
INSERT OR REPLACE INTO events (pid, revision_id, store_account_id, event_data) VALUES (?, ?, ?, ?)
unknown-revision-version
events_revision_version_token
events_current_revision
%llu
INSERT OR IGNORE INTO %@ (%@, %@) VALUES ('%@', '%@');
DROP TABLE IF EXISTS %@;
PRAGMA journal_mode=WAL;
PRAGMA legacy_file_format = 0;
CREATE TABLE IF NOT EXISTS %@ (%@ TEXT PRIMARY KEY, %@ TEXT);
CREATE TABLE IF NOT EXISTS %@ (%@ INTEGER PRIMARY KEY, %@ INTEGER, %@ INTEGER, %@ BLOB);
properties
<%p> - accountUniqueIdentifier: %llu - hasOfflinePlaybackKeys=%@ - hasOnlinePlaybackKeys=%@
_ICPlayActivityEventCoderDataRepresentation
    providedAudioQuality:%@
    targetedAudioQuality:%@
    audioQualityPreference:%lu
    shufflePlayMode:%td
    repeatPlayMode:%td
    autoPlayMode:%td
    buildFeatures:[%@]
    hasTrackInfo:true
    timedMetadata(length):%td
    requestingBundleVersion:'%@'
    requestingBundleIdentifier:'%@'
    storeID:'%@'
    storeFrontID:%@
    storeAccountID:%llu
    sourceType:%td
    siriInitiated: %@
    SBEnabled:%@
    privateListeningEnabled: %@
    hasRecommendationData:true
    personalizedContainerID:'%@'
    offline:%@
false
    mediaType:%td
    itemIDs:'%@'
    itemType:%td
    itemDuration:%f
    itemStartTime:%f  
    itemEndTime:%f
    systemReleaseType: %li
    householdID:'%@'
    featureName:'%@'
    externalID:'%@'
    eventTimeZone:%@
    eventDate:%@
    enqueuerProperties:'%@'
    endReasonType:%td
    deviceName:'%@'
    containerType:%td
    containerIDs:'%@'
    containerID:'%@'
    eventType: %lu
<%@ %p persistentID:%llu version:%lu
%lli
storefrontID
Cannot set a nil storefrontIdentifier on an instance of %@
ICMusicSubscriptionStatusCacheKey.m
Cannot set a nil phoneNumber on an instance of %@
Cannot set a nil DSID on an instance of %@
; storefrontIdentifier = "%@"
; phoneNumber = "%@"
; DSID = %@
cardClickEvent
closeClickEvent
pageEvent
contentParameters
messageActions
images
body
subtitle
v12@?0f8
; serverEnvironment = "%@"
; serverCorrelationKey = "%@"
; statusCode = %ld
Aggregate Media Download
v32@?0@"NSValue"8Q16^B24
remoteRequestOperation
remoteRequestOperationClassName
Attempted to encode an instance of ICRemoteRequestOperationExecutionContext with an unallowed class name for remoteRequestOperation: %@.
qualityOfService
Attempted to decode an instance of ICRemoteRequestOperationExecutionContext with an unallowed class name for remoteRequestOperation: %@.
getTracks
Request context must not be nil.
ICRadioGetTracksRequest.m
requiredApplicationContextBundleIdentifier
triggerEventName
triggerCondition
subrules
ruleOperator
Simple
Compound
purchase
mzbookkeeper
com.apple.itunescloud.RecentlyPlayedDidChange
com.apple.itunescloudd.xpc
v24@?0@"NSXPCListenerEndpoint"8@"NSError"16
client-data
media-kind
podcast
audio-book
booklet
tv-show
v24@?0@"ICSuzeLeaseResponse"8@"NSError"16
com.apple.iTunesCloud.ICSuzeLeaseRequest.calloutQueue
storeFrontID
SBEnabled
systemReleaseType
timeZoneName
deviceName
buildVersion
eventSecondsFromGMT
internalBuild
tvShowSubscriptionAdamID
tvShowPurchasedAdamID
externalID
storeID
personalizedContainerID
providedAudioQuality
targetedAudioQuality
playbackFormatPreference
audioQualityPreference
play_mode
buildFeatures
lyricLanguage
characterDisplayedCount
displayType
eventTimeZoneName
siriInitiated
householdID
enqueuerProperties
requestingBundleVersion
requestingBundleIdentifier
recommendationData
trackInfo
timedMetadata
sourceType
persistentID
mediaType
itemType
itemStartTime
itemEndTime
itemDuration
featureName
eventDateTimestamp
endReasonType
containerType
playlistVersionHash
cloudPlaylistID
cloudAlbumID
stationStringID
stationHash
globalPlaylistID
containerAdamID
equivalencySourceAdamID
lyricsID
itemCloudID
radioAdamID
purchasedAdamID
subscriptionAdamID
reasonHintType
ICPlayActivityEventContainerIDsStationID
ICPlayActivityEventContainerIDsStationStringID
ICPlayActivityEventContainerIDsStationHash
ICPlayActivityEventContainerIDsPlaylistVersionHash
ICPlayActivityEventContainerIDsGlobalPlaylistID
ICPlayActivityEventContainerIDsCloudPlaylistID
ICPlayActivityEventContainerIDsCloudAlbumID
ICPlayActivityEventContainerIDsAdamID
 stationID: %lli
 stationStringID: %@
 stationHash: %@
 playlistVersionHash: %@
 globalPlaylistID: %@
 cloudPlaylistID: %llu
 cloudAlbumID: %@
 adamID: %lli
DelegationService-Read-Encryption-Key
DelegationService-Write-Encryption-Key
DelegationService-Salt
<default>
com.apple.iTunesCloud.ICDelegationServicePairingSession.accessSerialQueue
com.apple.iTunesCloud.ICDelegationServicePairingSession.calloutQueue
v32@?0@"<NSCopying>"8@?<v@?@"ICURLBag">16^B24
allowExpiredBag
requireValidBag
; observersCount = %lu
<%@: %p title='%@'>
ICPurchasedBookVPPOrganizationDisplayName
ICPurchasedBookVPPOrganizationID
ICPurchasedBookVPPLicensed
ICPurchasedBookRedownloadParameters
ICPurchasedBookArtworkURL
ICPurchasedBookDatePurchased
ICPurchasedBookGenre
ICPurchasedBookAuthor
ICPurchasedBookTitle
ICPurchasedBookStoreID
ICPurchasedBookPurchaseHistoryID
radio-station-id
v24@?0@"ICRadioLikeResponse"8@"NSError"16
playerUserAgent
playerInfoContextToken
playerDeviceGUID
playerAnisetteMID
%@: [status=%d, msg='%@']
developer-token-invalidated
music-user-token-invalidated
Failed to invalidate music user token.
Failed to invalidate developer token.
%@ only knows how to process responses for MusicKit requests. %@ is unsupported.
ICMusicKitURLResponseHandler.m
finishDelegationResponse
startDelegationResponse
requestUniqueID
com.apple.iTunesCloud.NSOperationQueue.ICRequestDefault
com.apple.iTunesCloud.NSOperationQueue.ICRequestBackground
com.apple.iTunesCloud.NSOperationQueue.ICRequestUserInteractive
com.apple.iTunesCloud.NSOperationQueue.ICRequestUserIntitiated
com.apple.iTunesCloud.NSOperationQueue.ICRequestUtility
family
refetch
v24@?0@"ICAuthorizeMachineResponse"8@"NSError"16
ICLibraryAuthServiceClientTokenDidChangeNotification
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider._handleUserIdentityStoreDidChangeNotification
v32@?0@"NSNumber"8@"ICLibraryAuthServiceClientTokenStatus"16^B24
v24@?0@"ICLibraryAuthServiceClientTokenResult"8@"NSError"16
token_refresh_dsid
com.apple.itunescloud.library_auth_token_refresh_timer
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider.tokenRefreshTimer
Committing the cache is not allowed from a client
ICLibraryAuthServiceClientTokenProvider.m
com.apple.itunescloud.library-auth-token-provider
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider._handleLibraryAuthServiceClientTokenDidChangeDistributedNotification
v24@?0@"ICLibraryAuthServiceBulkClientTokenResponse"8@"NSError"16
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider._refreshTokensForDSIDs.resultsGroup
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider._ICLibraryAuthServiceClientTokenDidChangeDistributedNotification
v24@?0@"ICLibraryAuthServiceClientTokenResponse"8@"NSError"16
v16@?0@"ICStoreRequestContext"8
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider.allTokens
Unable to fetch library token [no DSID on active account] - properties=%@
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider.addTokenResult
addTokenResult requires a valid DSID
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider.getTokenResultsForDSIDs
v32@?0@"NSNumber"8@"ICLibraryAuthServiceClientTokenResult"16^B24
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider.getTokenResultForDSID
getTokenForDSID requires a valid DSID
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider.accessQueue
AFMultiUserConnection
/System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider.operationQueue
Books
Podcasts
AppStore
FitnessPlus
ImproveFitnessPlus
v32@?0@"<NSCopying>"8@?<v@?@"NSString"B>16^B24
v32@?0@"NSString"8@"NSMutableDictionary"16^B24
OBPrivacyAppleMusicIdentifier
NSString *getOBPrivacyAppleMusicIdentifier(void)
OBPrivacyTVAppIdentifier
NSString *getOBPrivacyTVAppIdentifier(void)
OBPrivacyiBooksIdentifier
NSString *getOBPrivacyiBooksIdentifier(void)
OBPrivacyPodcastsIdentifier
NSString *getOBPrivacyPodcastsIdentifier(void)
OBPrivacyAppStoreIdentifier
NSString *getOBPrivacyAppStoreIdentifier(void)
OBPrivacyFitnessPlusIdentifier
NSString *getOBPrivacyFitnessPlusIdentifier(void)
OBPrivacyImproveFitnessPlusIdentifier
NSString *getOBPrivacyImproveFitnessPlusIdentifier(void)
ICPrivacyInfo.m
/System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit
/System/Library/PrivateFrameworks/OnBoardingKit.framework/Contents/MacOS/OnBoardingKit
void *OnBoardingKitLibrary(void)
flush-track-cache
mp-hls-key-server-url
mp-hls-key-cert-url
mp-hls-playlist-url
hls-key-server-url
hls-key-cert-url
hls-playlist-url
ICMusicSubscriptionLeaseSessionLeaseStatusDidChangeNotification
v24@?0@"ICMusicSubscriptionPlaybackResponse"8@"NSError"16
v32@?0@"ICMusicSubscriptionPlaybackResponse"8@"NSArray"16@"NSError"24
v24@?0@"ICMusicSubscriptionLeaseStatus"8@"NSDate"16
v16@?0@"ICMusicSubscriptionPlaybackRequestOperation"8
com.apple.iTunesCloud.ICMusicSubscriptionLeaseSession.innerOperationQueue
<%@ %p requestContext: %@; leaseStatus: %@>
com.apple.iTunesCloud.ICMusicSubscriptionLeaseSession.accessQueue
com.apple.iTunesCloud.ICMusicSubscriptionLease.calloutQueue
com.apple.iTunesCloud.ICMusicSubscriptionLeaseSession.operationQueue
com.apple.itunescloudd.ICCloudClientAvailabilityService.serial.queue
action_timestamp_millis
preference_type
created_offset_millis
external_id
adam_id
preference
serverRevision
accountDSID
syncPending
lastSyncAttempt
lastSyncedOSVersion
messages
applicationProperties
MessageStore.plist
com.apple.iTunesCloud.ICInAppMessageStore.accessQueue
com.apple.iTunesCloud.ICInAppMessageStore.callbackQueue
lease-duration
uploaded-audio
uploaded-video
cloudID
genreName
albumArtist
track-ulid
track-number
track-count
item-name
genre-name
disc-number
disc-count
composer-name
playlist-name
album-artist
library-track
enqueuers
player-user-agent
player-guid
player-mid
wha-token
ICDefaultsKeySpoofIPhone
allowLowAffinityRecommendations
DownloadOnAddToLibrary
ICInternalDefaultsKeyTreatInitialSagaImportAsFailed
ICInternalDefaultsKeyTreatSagaAddComputerCallAsFailed
ICInternalDefaultsKeyTreatSubscriptionStatusAsIncomplete
ICInternalDefaultsKeyTreatSubscriptionStatusAsExpired
reduceLibraryRecommendationsXPCInterval
forceLibraryRecommendations
ISCacheBuster
suppressPrivacyWelcomeScreen
ICDefaultsKeyGrazingPathEnabled
ICDefaultsKeyExplicitContentAllowedForExpirationYear
ICDefaultsKeyExplicitContentAllowedForCurrentYear
ICDefaultsKeyAgeVerificationExpirationDate
ICDefaultsKeyShouldRunAgeVerification
ICDefaultsKeyNetworkTypeOverride
ICDefaultsKeyProductPlatformOverride
13.4
ICDefaultsKeyProductVersionOverride
t8030
ICDefaultsKeyHardwarePlatformOverride
ICDefaultsKeyFairPlayDeviceTypeOverride
12,3
iPhone
ICDefaultsKeyDeviceModelOverride
ICDefaultsKeyDeviceClassOverride
ICDefaultsKeyBypassBagSanityChecks
ISIgnoreExtendedValidation
ICDefaultsKeyLastKnownHouseholdID
ICDefaultsKeyAccountNotificationsShowInLibrarySwitch
ICDefaultsKeyLastKnownSubscriptionStatusBaseCacheKey
ICDefaultsKeyLastKnownLocalStoreAccountProperties
ICDefaultsKeyLastKnownUserAgeVerificationState
ICDefaultsKeyLastAuthenticationDialogResponseTime
ICDefaultsKeyAuthServiceClientTokenCache
ICDefaultsKeyAuthServiceClientTokenTimeToLive
ICDefaultsKeyLastAllowedInteractiveAuthenticationTime
ICDefaultsKeyLastCookieHeadersForRevokingMusicUserTokens
ICDefaultsKeyLastActiveAccountDSID
ICDefaultsKeyMediaLibraryAccessApplicationIdentifiersWithTCCAcceptanceDates
ICDefaultsRegisteredPushNotificationState
ICDefaultsCachedMusicUserTokens
ICDefaultsCachedSubscriptionStatus
ICDefaultsCloudMediaLibraryUID
ICDefaultsCachedSubscriptionStatusIsValid
com.apple.itunescloud.internal
universalLibraryId
purchaseAdamId
subscriptionAdamId
sbsync
assetStoreFront
action
accountless-streaming
lease-start
lease-renew
is-current-track
skipDate
pauseTime
expires
recorded-skip-time-in-millis
pause-position-in-millis
(unknown)
uniqueIdentifier
<%@ %p name:'%@'%@ uniqueIdentifier:%@>
 expirationDate:'%@
timeZone
 timeZone:%@
 storeFrontID: %@
 storeAccountID: %llu
 SBEnabled: %@
 systemReleaseType: %li
 privateListeningEnabled: %@
 deviceName: %@
 deviceGUID: %@
 buildVersion: %@
v24@?0@"ICFPSAPContext"8@"NSError"16
no dialog info for user notification %@
ICUserNotificationManager.m
com.apple.iTunesCloud.ICUserNotificationManager.access
com.apple.iTunesCloud.ICUserNotificationManager.notification
subKeyBag
sbKeyBag
wishlistItemName
rawResponse
v32@?0@"<ICStorePlatformResponse>"8Q16^B24
v24@?0@"ICStorePlatformMetadata"8^B16
com.apple.itunescloud.delegation-provider
manual
Set parental control failed  [no DSID for user identity] - userIdentity=%@
Set parental control failed [no propertires for user identity]- userIdentity=%@
ICErrorDomain
ICFairPlayErrorDomain
ICSQLiteErrorDomain
ICStoreServerErrorDomain
ICRadioServerErrorDomain
ICMusicSubscriptionCarrierBundlingServerErrorDomain
ICCloudServiceStatusCapabilitiesDidChangeNotification
ICCloudServiceStatusStorefrontCountryCodeDidChangeNotification
ICCloudServiceStatusStorefrontIdentifierDidChangeNotification
com.apple.itunescloudd.launched
none
musicCatalogSubscriptionEligible
addToCloudMusicLibrary
musicCatalogPlayback
relinquishment of cloud service status observation token
v24@?0@"<ICCloudServiceStatusRemoteMonitoringService>"8@"NSString"16
ongoing-observation-of-cloud-service-status-%@
cloud service status observation token
v16@?0@"NSUUID"8
storefront identifier
storefront country code
cloud service capabilities
v24@?0Q8@"NSError"16
Encountered error while requesting %@.
request-%@-%@
Failed to get listener endpoint for cloud service status monitor.
Calling -_beginTransactionForCloudServiceStatusMonitorConnectionWithIdentifier: with the same transaction identifier more than once is invalid.
ICCloudServiceStatusMonitor.m
user token
%@: Calling %s without calling %s first is invalid.
%@: Calling %s more than once is invalid.
prompt-prohibited
prompt-allowed
finishDelegationRequest
startDelegationRequest
uniqueID
authentication-performed
other
com.apple.itunescloud.contenttaste
com.apple.iTunesCloud.ICCloudContentTasteRequestListener.MediaContentTaste
HSCloudAvailabilityControllerCanShowCloudDownloadButtonsDidChangeNotification
HSCloudAvailabilityControllerCanShowCloudTracksDidChangeNotification
HSCloudAvailabilityControllerHasProperNetworkConditionsToShowCloudMediaDidChangeNotification
HSCloudAvailabilityControllerIsCellularDataRestrictedDidChangeNotification
HSCloudAvailabilityControllerNetworkReachabilityDidChangeNotification
VideosShowCloudMediaEnabledSetting
UIApplicationWillEnterForegroundNotification
com.apple.HomeSharing.HSCloudAvailabilityController.accessQueue
com.apple.mobileipod-prefsChanged
com.apple.homesharing.HSCloudAvailabilityController
v24@?0^{__CFString=}8^{__CFDictionary=}16
ICMusicUserTokenCacheDidChangeNotification
v12@?0B8
com.apple.iTunesCloud.ICMusicUserTokensDidChangeDistributedNotification
com.apple.iTunesCloud.ICMusicUserTokenCache.accessQueue
com.apple.iTunesCloud.ICMusicUserTokenCache.calloutQueue
%lli;%@;%@
Failed to create a key for the Music User Token Cache because there was no DSID in the user identity for the request.
Failed to create a key for the Music User Token Cache because the key identifier and/or the team identifier could not be derived from developer token "%@".
v32@?0@"ICPBDGSStartDelegationRequest"8@"NSDictionary"16@"NSError"24
v24@?0@"ICPBDGSResponse"8@"NSError"16
v28@?0@"ICPBDGSFinishDelegationRequest"8@"NSError"16B24
v32@?0@"NSInputStream"8@"NSOutputStream"16@"NSError"24
v24@?0@"ICDelegationServiceSecuritySettings"8@"NSError"16
com.apple.iTunesCloud.ICDelegationProviderServiceSession.accessQueue
com.apple.iTunesCloud.ICDelegationProviderServiceSession.calloutQueue
silent
Failed to get verification context for identity %@
Server requested authentication
v20@?0B8q12
station-track-dict
tracklist-action-type
station-dict
error-value
token-ttl-in-seconds
play-info
com.apple.itunescloud.ICUserNotificationSettingsDidChangeNotification
com.apple.itunescloud.ICUserNotificationSettingsAreAuthorizedUserInfoKey
<%@: %p; identity = %@; identityStore = %@>
_itsdlgt._tcp.
com.apple.itunescloud.remote-request-execution-service
v24@?0@"ICSecureKeyDeliveryResponse"8@"NSError"16
com.apple.iTunesCloud.ICEnhancedAudioContentKeySession.accessQueue
NSString * _Nonnull ICBundleIdentifierForSystemApplicationType(ICSystemApplicationType)
No bundle identifier defined for application type %d
ICSystemApplication.m
com.apple.TVWatchList
com.apple.TVMusic
com.apple.NanoBooks
com.apple.NanoMusic
com.apple.AppStore
com.apple.podcasts
com.apple.iBooks
com.apple.tv
v24@?0@"AMSMediaToken"8@"NSError"16
AMSBag
Class getAMSBagClass(void)_block_invoke
ICDeveloperTokenFetchRequest.m
/System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices
/System/Library/PrivateFrameworks/AppleMediaServices.framework/Contents/MacOS/AppleMediaServices
void *AppleMediaServicesLibrary(void)
AMSBagKeySet
Class getAMSBagKeySetClass(void)_block_invoke
AMSMediaTokenService
Class getAMSMediaTokenServiceClass(void)_block_invoke
<%@ %p securityMode: %li hasPassword: %@>
v16@?0^{__CFString=}8
com.apple.iTunesCloud.ICDelegationServiceSecuritySettings.senderSerialQueue
v16@?0^v8
APSSettingsGetInt64
accessControlLevel
/System/Library/PrivateFrameworks/AirPlaySupport.framework/AirPlaySupport
com.apple.iTunesCloud.ICDelegationServiceSecuritySettings.receiverSerialQueue
DeviceName
SecurityMode
ServiceVersion
AUUID-
Device name: Uknonwn
Device name: %@
Delegation UUIDs: Missing
Delegation UUIDs: %@
v32@?0@"NSString"8@"NSData"16^B24
defaultButton
explanation
initialCheckboxValue
message
m-allowed
isFree
okButtonString
okButtonAction
cancelButtonString
cancelButtonAction
otherButtonString
otherButtonAction
buyParams
subtarget
authorization
cancel
Goto
account
FamilyPermissionAction
ServiceAction
RetryRestoreAll
Review
redeem-code
QRCode
GoBack
OpenURL
GotoFinance
<%@ %p responseDictionary: %@>
ICMusicSubscriptionStatusDidChangeNotification
ICUserIdentityForMusicSubscriptionStatusDidChangeKey
ICNewStatusForMusicSubscriptionStatusDidChangeKey
ICOldStatusForMusicSubscriptionStatusDidChangeKey
_ICMusicSubscriptionStatusDidChangeDistributedNotification
com.apple.itunescloud.ICMusicSubscriptionStatusDidChangeFollowingPrivacyAcknowledgementDistributedNotification
v32@?0@"NSUUID"8@"ICMusicSubscriptionStatusRequest"16^B24
v16@?0@"NSError"8
com.apple.security.exception.mach-lookup.global-name
Disallowing subscription status request for sandboxed user identity %@
v16@?0@"ICRequestContext"8
com.apple.iTunesCloud.ICMusicSubscriptionStatusController.accessQueue
com.apple.iTunesCloud.ICMusicSubscriptionStatusController.callbackQueue
v20@?0@"NSString"8B16
com.apple.iTunesCloud.ICMusicSubscriptionStatusController.operationQueue
v32@?0@"ICUserIdentity"8Q16^B24
v32@?0@"ICPBDGSFinishDelegationResponse"8@"NSDictionary"16@"NSError"24
v32@?0@"NSNumber"8@"ICDelegationConsumerServiceSessionRequestResult"16^B24
v32@?0@"ICPBDGSStartDelegationResponse"8@"NSDictionary"16@"NSError"24
com.apple.iTunesCloud.ICDelegationConsumerServiceSession.accessQueue
com.apple.iTunesCloud.ICDelegationConsumerServiceSession.calloutQueue
v32@?0@"NSString"8@"NSDictionary"16^B24
storePlatformData
isAuthenticated
meta
v32@?0@"NSDictionary"8@"NSString"16^B24
v32@?0@"NSString"8Q16^B24
eventID
params
messageID
ICTelephonyPhoneNumberDidChangeNotification
Failed to send SMS using telephony slot: %@.
InternationalMobileEquipmentIdentity
CarrierName
com.apple.iTunesCloud.ICTelephonyController.accessQueue
com.apple.iTunesCloud.ICTelephonyController.telephonyCallbackQueue
enable
disable
musicPrivateListeningEnabledForHomeUsers
v32@?0@"NSUUID"8@"NSNumber"16^B24
v32@?0@"NSString"8@"NSNumber"16^B24
musicPrivateListeningEnabled
automaticDownloadKinds
eligibleServices
isManagedAppleID
isActiveLockerAccount
scope
guid-urls
getMatchStatusSrv
isMatchServiceEnabled
cloud-welcome
amd-domains
sign-sap-request
sign-sap-response
signed-actions
musicCommon
sign-sap-setup-cert
sign-sap-setup
fps-cert
fps-request
subDownload
md-finish-provisioning
amd-finish-provisioning
md-sync-machine
amd-sync-machine
redownloadProduct
paidRedownloadProduct
auth-can-post
songDownloadDone
radio
storefront-header-suffix
musicForYou
browse
grouping
radioTab
getSubscriptionStatusSrv
lease-stop
storeplatform-lookup-url
storeplatform-lookup-url-unpersonalized
delegatePlayback
enableSubscription
disableSubscrption
getSubscriptionStatus
getWholeHouseAudioPlayInfo
play-activity-feed-request-post-url
authorizeMachine
mobile-network-constraints
library-auth-service-token-url
musicSubscription
buyProduct
push-notification-types
push-notifications
revokeMusicToken
subscription-status-refresh-interval-in-seconds
push-notification-allowexplicit
library-daap
preference-service-sync-url
preference-service-scheduled-sync-period-in-minutes
musicFriends
isExplicitContentAgeVerificationRequired
ExplicitContentBadgeTreatment
korAgeVerificationUrl
fuseHeaderEnrichment
fuseHeaderEnrichmentResponse
createMusicToken
inAppMessages
musicConnect
addToSiriTagHistoryBaseUrl
addToTRHistoryBaseUrl
pmlt-url
addToWishlistBaseUrl
getShareIdentifiers
purchase-daap
p2-content-restore
cloud-add-computer
storeFrontId
artist-new-content
countryCode
fetchSinfs
fuseCarrierMccMncList
ampMusicAPIDomains
enhanced-audio
https
schemes
regex
server_environment
server_correlation_key
expiration_time
bag_dictionary
actions
musicMescal
fields
com.apple.itunescloud.ICURLBag
https://p49-buy.itunes.apple.com/WebObjects/MZFinance.woa/wa/sagaAddComputer
https://play.itunes.apple.com/WebObjects/MZPlay.woa/wa/revokeMusicToken
https://p49-buy.itunes.apple.com/WebObjects/MZFinance.woa/wa/getSubscriptionStatus
https://play.itunes.apple.com/WebObjects/MZPlay.woa/wa/getSubscriptionStatusSrv
com.apple.iTunesCloud.ICDelegationProviderServiceProtocolHandler.calloutQueue
com.apple.iTunesCloud.ICDelegationProviderServiceProtocolHandler.operationQueue
provider-resource
requires-subscription
station-subtype
station-type
attribution-label
description
core-seed-name
like-enabled
rules
sharing-enabled
INSERT OR REPLACE INTO token (account_identity, data, expiration_date, type) VALUES(?, ?, ?, ?)
v16@?0@"<ICSQLiteBinding>"8
DELETE FROM token WHERE account_identity==?
DELETE FROM account WHERE identity==?
INSERT OR REPLACE INTO account (identity, storefront) VALUES (?, ?)
INSERT OR REPLACE INTO metadata (key, value) VALUES (?, ?)
DELETE FROM token WHERE expiration_date<?
DELETE FROM delegation_uuid WHERE user_identity==? AND uuid=?
DELETE FROM token
INSERT OR REPLACE INTO delegation_uuid (user_identity, uuid, insertion_date) VALUES (?, ?, ?)
interactionLevel
ICSecurityInfoFirstUnlockNotification
com.apple.itunescloud.ICSecurityInfo.accessQueue
com.apple.itunescloud.ICSecurityInfo.calloutQueue
isMatchSubscriber
itunescloudd
v24@?0@"ICRemoteRequestOperationExecutionResponse"8@"NSError"16
Failed to get lease session [no properties for user identity] - userIdentity=%@
Failed to get lease session [invalid delegated identity] - delegatedIdentity=%@
v16@?0@"ICUserIdentityProperties"8
Failed to get lease session [missing user identity or user identity store] - userIdentity=%@ - userIdentityStore=%@
v32@?0@"_ICMusicSubscriptionLeaseIdentityCacheKey"8@"ICMusicSubscriptionLeaseSession"16^B24
com.apple.iTunesCloud.ICMusicSubscriptionLeaseController.accessQueue
com.apple.iTunesCloud.ICMusicSubscriptionLeaseController.notificationSerialQueue
com.apple.itunesstored.PlaybackLeaseDidEnd
ICMusicSubscriptionLeaseIgnorePushNotifications
com.apple.iTunesCloud.ICMusicSubscriptionLeaseController.leaseSessionPreparationOperationQueue
Cookie
Accept-Language
Content-Encoding
Content-Type
User-Agent
Set-Cookie
Cache-Control
Content-Range
Expires
max-age
text/xml; charset=utf-8
application/x-protobuf
v32@?0@"NSString"8@"NSString"16^B24
%@=%@
ML3ContainerPropertyExternalVendorContainerTag
/System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
ML3ContainerPropertyExternalVendorDisplayName
ML3ContainerPropertyExternalVendorIdentifier
ML3ContainerPropertyParentPersistentID
ML3ContainerPropertyCloudAuthorStoreID
ML3ContainerPropertyCloudIsVisible
ML3ContainerPropertyCloudIsPublic
ML3ContainerPropertyLikedState
ML3ContainerPropertyDateCreated
ML3ContainerPropertyDatePlayed
ML3ContainerPropertyDescription
ML3ContainerPropertyName
com.apple.itunes.cloud-artwork-token
daap.incrementplaycount
ML3TrackPropertyLikedStateChangedDate
ML3TrackPropertyAlbumLikedState
ML3TrackPropertyLikedState
ML3TrackPropertyDateSkipped
ML3TrackPropertyDatePlayed
ML3TrackPropertyHidden
ML3TrackPropertyUserRating
dmap.itemhidden
daap.incrementskipcount
NSData * _Nonnull ICDAAPUtilitiesCreateData(void (^__strong _Nonnull)(DKDAAPWriter *__strong))
block
ICDAAPUtilities.m
NSData * _Nonnull ICDAAPUtilitiesCreateDataForContainer(DKDAAPElementCode, void (^__strong _Nonnull)(DKDAAPWriter *__strong))
v16@?0@"DKDAAPWriter"8
containerCode
void ICDAAPUtilitiesWriteProperty(DKDAAPWriter *__strong _Nonnull, DKDAAPElementCode, DKDAAPValueType, __strong id _Nonnull)
Cannot make element from unsupported DAAP value type.
DKDAAPValueTypeBinary only supports NSData.
DKDAAPValueTypeDate only supports NSDate.
DKDAAPValueTypeString only supports NSString.
DKDAAPValueTypeSInt64 only supports NSNumber.
DKDAAPValueTypeUInt64 only supports NSNumber.
DKDAAPValueTypeSInt32 only supports NSNumber.
DKDAAPValueTypeUInt32 only supports NSNumber.
DKDAAPValueTypeSInt16 only supports NSNumber.
DKDAAPValueTypeUInt16 only supports NSNumber.
DKDAAPValueTypeSInt8 only supports NSNumber.
DKDAAPValueTypeUInt8 only supports NSNumber.
void ICDAAPUtilitiesWriteContainer(DKDAAPWriter *__strong _Nonnull, DKDAAPElementCode, void (^__strong _Nonnull)(DKDAAPWriter *__strong))
activeCommandsOnly
expiration_prune
ANALYZE
CREATE TABLE IF NOT EXISTS delegation_uuid(user_identity TEXT,uuid TEXT,insertion_date REAL,UNIQUE(user_identity, uuid));
CREATE TABLE IF NOT EXISTS token(account_identity TEXT UNIQUE,type INTEGER NOT NULL,expiration_date REAL,data BLOB NOT NULL);
CREATE TABLE IF NOT EXISTS metadata(key TEXT PRIMARY KEY,value TEXT);
CREATE TABLE IF NOT EXISTS account(identity TEXT PRIMARY KEY,storefront TEXT);
B8@?0
PRAGMA user_version=%ld
PRAGMA user_version
ICDelegateAccountStore.db
personalized
unpersonalized
v24@?0@"NSString"8@"NSError"16
Unauthorized to fetch user token, but developer token invalidation failed; aborting.
Unauthorized to fetch user token, but reached maximum retry count for developer token invalidation; aborting.
Failed to fetch user token.
Music-User-Token
Authorization
Bearer %@
Failed to fetch developer token from %@.
; requestContext = %@
[requestContext isKindOfClass:[ICMusicKitRequestContext class]]
ICMusicKitURLRequest.m
com.apple.itunescloud.music-subscription-status-service
v32@?0@"<NSCopying>"8@?<v@?@"ICMusicSubscriptionStatusMonitor"@"ICMusicSubscriptionStatus">16^B24
v24@?0@"ICMusicSubscriptionStatusResponse"8@"NSError"16
allowed
restricted
required
; identityStore = %@
; identity = %@
@"ICMusicSubscriptionStatusMonitor"16@?0@"ICUserIdentityContext"8
account_identity
expiration_date
data
v32@?0@"ICSQLiteRow"8@"NSError"16^B24
SELECT data, expiration_date, type FROM token WHERE account_identity==?
v24@?0@"ICSQLiteQueryResults"8@"NSError"16
SELECT count(account_identity) FROM token
SELECT value FROM metadata WHERE key==?
SELECT account.storefront AS storefront, token.data AS data, token.expiration_date AS expiration_date, token.type AS type FROM account LEFT OUTER JOIN token ON account.identity==token.account_identity WHERE account.identity==?
SELECT data, expiration_date, type, account_identity FROM token WHERE (type == ?) AND ((expiration_date IS NULL) OR (expiration_date >= ?))
SELECT data, expiration_date, type, account_identity FROM token WHERE (expiration_date IS NULL) OR (expiration_date >= ?)
SELECT uuid FROM delegation_uuid WHERE user_identity==?
uuid
X-Apple-Radio-Client-Version
%ld/%@
v24@?0@"NSURLRequest"8@"NSError"16
v24@?0@"NSDictionary"8@"NSError"16
is-async
machine-data-action-performed
dialog-processed
v24@?0@"ICURLBag"8@"NSError"16
v32@?0q8@"NSString"16@"NSError"24
v24@?0B8B12@"NSError"16
v20@?0B8@"NSError"12
v32@?0@"NSString"8@"NSString"16@"NSError"24
errorKey
invalidate-url-bags
v36@?0B8q12@"NSString"20@"NSError"28
v24@?0@"ICUserIdentityProperties"8@"NSError"16
v16@?0@"ICMutableLocalStoreAccountProperties"8
accountID
v32@?0@"NSString"8@"NSHTTPCookie"16^B24
com.apple.itunescloud.ICStoreHTTPCookieManager
settingId
notifications.music.account.showInLibrary
notifications.music.account.artistsAndShows
dataUpdated
ICUserIdentityStoreDelegateAccountStoreDidChangeNotification
ICUserIdentityStoreDidChangeNotification
ICActiveUserIdentityDidChangeNotification
ICUserIdentityStoreLocalStoreAccountPropertiesDidChangeNotification
v24@?0@"ICDelegateAccountStore"8@"NSError"16
v16@?0@"ICDelegateAccountStoreReader"8
The following method is not supported on the null identity store: %s.
ICUserIdentityStore.m
helper
Unable to get verification context for user identity - activeAccountDSID=%@ - allowsAccountEstablishment=%u
v24@?0@"NSString"8^B16
com.apple.iTunesCloud.ICUserIdentityStore.accessQueue
com.apple.iTunesCloud.ICUserIdentityStore.callback
com.apple.iTunesCloud.ICMachineDataSession.callback
com.apple.iTunesCloud.ICMachineDataSession.operation
assetUrl
pf=%@/hls=%@/crabs=%@
v32@?0@8@16^B24
videoFile
video
previewFrame
redownload
price
priceFormatted
action-params
ICDelegationProviderNetServiceDelegationAccountUUIDsDidChangeNotification
com.apple.iTunesCloud.ICDelegationProviderNetService.netServiceStreamResolutionQueue
com.apple.iTunesCloud.ICDelegationProviderNetService.accessQueue
com.apple.iTunesCloud.ICDelegationProviderNetService.serialQueue
Statement from a different connection
BEGIN DEFERRED TRANSACTION
COMMIT TRANSACTION
ROLLBACK TRANSACTION
PRAGMA user_version=%@
max-sync-retry-interval-secs
auto-update-polling-frequency-secs
update-polling-frequency-secs
subscribed-container-polling-frequency-secs
play-data-batch-interval-in-minutes
is-online-genius-for-match-enabled
database-name
database-id
ICMusicSubscriptionFairPlayKeyStatusDidChangeNotification
v24@?0@"NSArray"8@"NSError"16
com.apple.iTunesCloud.ICMusicSubscriptionFairPlayController.calloutQueue
com.apple.iTunesCloud.ICMusicSubscriptionFairPlayController.fairPlaySerialQueue
com.apple.itunescloud.ICMusicSubscriptionFairPlayKeyStatusDidChangeNotification
metrics
leaseDurationInSeconds
ICMusicSubscriptionLeaseDurationInterval
householdId
v24@?0@"NSData"8@?<v@?@"NSData"@"NSError">16
@"NSData"24@?0@"NSData"8^@16
keyUri
streaming-keys
fairplay-streaming-request
lease-action
renew
stop
start
skipped-rental-checkout
rental-id
v24@?0@"ICURLResponse"8@"NSError"16
v24@?0@"NSData"8@"NSError"16
playback-start-time
expiration-time
renew-after
fairplay-streaming-response
signal-bars-max
signal-bars
path
com.apple.itunescloud.ICEnvironmentMonitor.accessQueue
com.apple.itunescloud.ICEnvironmentMonitor.calloutQueue
v12@?0i8
UIApplicationDidEnterForegroundNotification
[credentialRequests count] > 0
ICUserCredentialProvider.m
v8@?0
v44@?0@"ICUserIdentity"8@"ICDelegateToken"16@"NSString"24@"NSError"32B40
v16@?0@"ICMutableUserIdentityProperties"8
com.apple.iTunesCloud.ICUserCredentialProvider.delegationAccountUUIDSerialQueue
com.apple.iTunesCloud.ICUserCredentialProvider.delegationAccountUUIDOperationQueue
v16@?0@"ICAsyncBlockOperation"8
v36@?0@"ICUserCredentialRequest"8@"ICUserCredentialResponse"16@"NSError"24B32
com.apple.iTunesCloud.ICUserCredentialProvider.accessQueue
com.apple.iTunesCloud.ICUserCredentialProvider.calloutQueue
ICPlayActivityEventItemIDsSubscriptionAdamID
ICPlayActivityEventItemIDsEquivalencySourceAdamID
ICPlayActivityEventItemIDsRadioAdamID
ICPlayActivityEventItemIDsPurchasedAdamID
ICPlayActivityEventItemIDsLyricsID
ICPlayActivityEventItemIDsCloudID
 subscriptionAdamID: %lli
 equivalencySourceAdamID: %lli
 radioAdamID: %lli
 purchasedAdamID: %lli
 lyricsID: %@
 cloudID: %llu
acceptedVersion
currentVersion
agreedToTerms
latestTerms
Store
source
_ICMusicSubscriptionStatusAdditionalProperties
carrierBundlingStatusType
carrierBundlingErrorCode
sessionIdentifier
cellularOperatorName
<%@ %p statusType:%@ carrierBundlingStatusType:%@ reasonType:%@ sourceType:%@%@>
 carrierBundlingErrorCode:%ld
Apple
Individual
Family
InvalidToken
Unlinked
Eligible
NotEligible
NeedsManualVerification
Enabled
Disabled
isBundleOwner
isPartOfBundle
termsStatusList
isDiscoveryModeEligible
isAdministrator
statusType
reasonType
isPurchaser
isEligibleForFreeTrial
isInFreeTrial
hasOfflineSlots
isMatchEnabled
isHeadOfHousehold
hasFamilyGreaterThanOneMember
hasFamily
isMinorAccountHolder
terms
ownsBundle
isUnlinked
Discovery
isNotEligibleForFreeTrial
isHoH
isMinor
ICWiFiManagerWiFiDidChangeNotification
ICWiFiManagerWiFiAssociatedUserInfoKey
ICWiFiManagerWiFiEnabledUserInfoKey
%s (%d)
com.apple.amp.HomeSharing.HSWiFiManager.accessQueue
com.apple.wifi.plist
hls-prefetch-skd-urls
hls-cert
bagProfileVersion
bagProfile
clientVersion
clientIdentifier
processName
; bagProfileVersion = "%@"
; bagProfile = "%@"
; requestingBundleVersion = "%@"
; requestingBundleIdentifier = "%@"
; clientVersion = "%@"
; clientIdentifier = "%@"
; processName = "%@"
; bundleIdentifier = "%@"
void _MSVHasherAppend64(MSVHasher * _Nonnull, uint64_t)
void _MSVHasherAppend32(MSVHasher * _Nonnull, uint32_t)
com.apple.itunescloud.ICNetworkConstraints
size-limits
kinds
settings
com.apple.Music.main
sectionId
sections
parameters
add-push-notification-type-url
Reloading subscription status cache due to external change notification
Posting local change notification as shouldTreatSubscriptionStatusAsExpired is set
Received user identity store did change notification. Updating base cache key for subscription status cache.
Received phone number did change notification. Updating base cache key for subscription status cache.
Base cache key for subscription status cache remains unchanged: %{public}@.
Base cache key for subscription status cache updated from %{public}@ to %{public}@.
Posting %{public}@.
Setting cached subscription status response for cache key %{public}@: %{public}@.
Removing cached subscription status response for cache key %{public}@.
%{public}@ failed to get user identity properties. err=%{public}@
%{public}@ received subscription response %{public}@
%{public}@ failed to import subscription keybag. err=%{public}@
ICCloudClientCloudService %p - Unable to create XPC Connection [no listener endpoint]
ICCloudClientCloudService %p - Connection to cloud availability service invalidated
ICCloudClientCloudService %p - Resetting XPC connection to nil
ICCloudClientCloudService %p - Connection to cloud availability service interrupted
ICCloudClientCloudService %p - Creating XPC Client Connection [started]
ICCloudClientCloudService %p - Creating XPC Client Connection [failed] - endpoint=%{public}@ - error=%{public}@
ICCloudClientCloudService %p - Creating XPC Client Connection [ended] - connection=%{public}@
ICAgeVerificationManager %p - Bag key(s) missing for age verification: %{public}@ - Explicit content allowed and marked with 'E'.
ICAgeVerificationManager %p - Age verification state: %{public}@
ICAgeVerificationManager %p - Error retrieving properties for account %{public}@ during age verification: %{public}@ - Explicit content allowed and marked with 'E'.
ICAgeVerificationManager %p - Error retrieving bag during age verification: %{public}@ - Explicit content allowed and marked with 'E'.
ICAgeVerificationManager %p - There are no properties for account %{public}@ - Explicit content allowed.
ICAgeVerificationManager %p - Explicit content allowed.
ICAgeVerificationManager %p - Performing age verification
%{public}@ - Expiration date provided from ICDefaults: %{time_t}zd
%{public}@ - Expiration date provided from ACAccount: %{time_t}zd
ICAgeVerificationManager %p - Received ICUserIdentityStoreDidChangeNotification - Refreshing state for active user
ICAgeVerificationManager - Missing critical entitlement for age verification: "apple" - "keychain-access-groups"
ICAgeVerificationManager %p - ageVerificationStateForUserIdentity - Retrieving state [Disk cache] - Kicking off refresh - State=%@
ICAgeVerificationManager %p - ageVerificationStateForUserIdentity - Retrieving state [In-memory cache] - State=%@
%{public}@ Connection invalidated
%{public}@ Connection interrupted
%{public}@ Purging orphaned cache directory %{public}@
%{public}@ failed to load bag for configuration. err=%{public}@
%{public}@ failed to load configuration from bag
%{public}@ Skipping downloads for message %{public}@:%{public}@ as its not allowed on the current network type (%d)
%{public}@ failed to fetch message %{public}@:%{public}@ to set the download flag on. err=%{public}@
%{public}@ base resource url missing from configuration - skipping download
%{public}@ Downloading web archive for message %{public}@:%{public}@
%{public}@ Downloading template file for message %{public}@:%{public}@
%{public}@ Downloading image %{public}@ for message %{public}@:%{public}@
%{public}@ Downloaded %d resources for message %{public}@:%{public}@
%{public}@ failed to fetch message %{public}@ to update with cached resource locations. err=%{public}@
%{public}@ failed to update resource cache locations for message %{public}@. err=%{public}@
%{public}@ failed to download image %{public}@ for message %{public}@. err=%{public}@
%{public}@ failed to download template for message %{public}@. err=%{public}@
%{public}@ failed to download web archive for message %{public}@. err=%{public}@
%{public}@ Initiating downloads for messages marked for caching
%{public}@ failed to load messages to check for downloads. err=%{public}@
%{public}@ failed to fetch message %{public}@:%{public}@ to set the download setting on. err=%{public}@
%{public}@ failed to update message %{public}@:%{public}@ with the updated download setting. err=%{public}@
%{public}@ Had pending sync - retrying now
%{public}@ Failed to gather messages to remove - some additional cleanup will be skipped. err=%{public}@
%{public}@ Failed to remove messages for bundle identifier %{public}@. err=%{public}@
%{public}@ Failed to remove message metadata for bundle identifier %{public}@. err=%{public}@
%{public}@ Failed to remove message %{public}@. err=%{public}@
%{public}@ Failed to remove message metadata for identifier %{public}@. err=%{public}@
%{public}@ removing user notifications with identifier %{public}@
%{public}@ Failed to add message %{public}@. err=%{public}@
%{public}@ Processing local user notification in message %{public}@
%{public}@ Not posting local notification in message %{public}@ because the target app is in the foreground
%{public}@ Ignoring local notification in message %{public}@ because the notification string was not provided
%{public}@ Failed to parse notification for message %{public}@. err=%{public}@, payload=%{public}@
%{public}@ Failed to process notification for message %{public}@. payload=%{public}@
%{public}@ Failed to get current server revision from message store. err=%{public}@
%{public}@ Ignoring sync command we've already applied (serial# %lld, currentRevision=%lld)
%{public}@ Processing sync command #%lld: %{public}@ %{public}@
%{public}@ Failed to process sync command. err=%{public}@
%{public}@ Finished processing sync commands. currentSyncRevision=%lld
%{public}@ Failed to update sync pending flag. err=%{public}@
%{public}@ Failed to get properties for active account for sync. err=%{public}@
%{public}@ Not performing sync because there's no active account
%{public}@ Not syncing because privacy acknowledgement is required
%{public}@ Sync request failed. err=%{public}@
%{public}@ Sync completed. err=%{public}@
%{public}@ Adjusting bag refresh interval of %llds --> 7 days
%{public}@ Setting timer to perform periodic poll for %llds (+/- %llds)
%{public}@ Performing periodic sync
%{public}@ Periodic sync completed. err=%{public}@
Connection to in-app message service invalidated
Connection to in-app message service interrupted
Failed to get account properties. err=%{public}@
Failed to get message store account property. err=%{public}@
%{public}@ account changed from %lld --> %lld - performing reset
%{public}@ Failed to reset message store. err=%{public}@
%{public}@ Failed to update message store account property. err=%{public}@
%{public}@ Failed to sync after the reset. err=%{public}@
%{public}@ Failed to connect to remote service. err=%{public}@
%{public}@ clearing cached resources for message %{public}@:%{public}@
%{public}@ downloading resources for message %{public}@:%{public}@
%{public}@ Flushing message events
%{public}@ Not flushing events because privacy acknowledgement is required
Failed to load message events. err=%{public}@
%{public}@ Flushing %d events
Failed to flush message event %{public}@. err=%{public}@
Failed to remove completed event %{public}@. err=%{public}@
%{public}@ Reporting event for message identifier %{public}@: %{public}@
%{public}@ Failed to add message event. err=%{public}@
%{public}@ Added message event %{public}@ for message 
%{public}@ Performing reset
Failed to reset message store. err=%{public}@
%{public}@ Performing sync
%{public}@ removing all messages for bundle identifier %{public}@
%{public}@ removing message %{public}@ for bundle identifier %{public}@
%{public}@ updating message %{public}@
Failed to update message %{public}@. err=%{public}@
%{public}@ adding message: %{public}@
Failed to add message %{public}@. err=%{public}@
%{public}@ fetching message with identifier %{public}@ for bundle identifier %{public}@
%{public}@ Failed to load message %{public}@ for bundle identifier %{public}@. err=%{public}@
%{public}@ fetching messages for bundle identifiers %{public}@
%{public}@ Failed to load messages for bundle identifiers %{public}@. err=%{public}@
%{public}@ fetching all messages
%{public}@ Failed to load all messages. err=%{public}@
%{public}@ Stopping system service...
%{public}@ Starting system service...
%{public}@ Requesting a sync because the system version has changed from %{public}@ --> %{public}@
%{public}@: Created net service %{public}@.
%{public}@: Published net service %{public}@.
%{public}@: Stopped net service %{public}@.
%{public}@: Retrieved security settings: %{public}@ with error: %{public}@
%{public}@: Published net service TXTRecord: %{public}@
%{public}@: Remote server advertisement failed with service: %{public}@, error: %{public}@, retrying in %f seconds...
%{public}@: Remote server advertisement success with service: %{public}@
%{public}@: Did accept connection with service: %{public}@ input: %{public}@ output: %{public}@
%{public}@ failed to load identity properties. err=%{public}@
%{public}@ An HLS asset is available and is preferred, so we will use it
%{public}@ Enqueueing aggregate asset download
%{public}@ Enqueueing AV asset download
%{public}@ Enqueueing standard file asset download
%{public}@ File asset download complete. err=%{public}@, destinationPath=%{public}@
%{public}@ AV asset download complete. err=%{public}@, destinationPath=%{public}@
%{public}@ Aggregate asset download complete. err=%{public}@, destinationPath=%{public}@
%{public}@ Failed to decode compressed aps payload data.
%{public}@ Failed to decompress aps payload data.
%{public}@ Failed to deserialize aps payload data. err=%{public}@
%{public}@ unknown APS format %{public}@. assuming dictionary
%{public}@ - isAuthenticatedWithQueue: - Error retrieving properties - userIdentity=%@ - error=%{public}@
%{public}@ - isAuthenticatedWithQueue: - isAuthenticated=%{BOOL}u
%{public}@ - Receveived Jalisco update in progress notification [Handler present: %{BOOL}u
%{public}@ - Receveived Saga update in progress notification [Handler present: %{BOOL}u
Failed to list cloud server operations with error: %{public}@
Automatic downloads are %{BOOL}u for media kind music
Not able to determine if automatic downloads are enabled for media kind music. Could not load active store account: error=%{public}@
Not updating automatic download kinds by %{BOOL}u media kind music. Could not load active store account: error=%{public}@
Updating user defaults with automaticDownloadsEnabled=1
Load Books failed with error: %{public}@
Sending request to update artist hero images...
Failed to update artist hero images with error: %{public}@
Setting album properties %{public}@ for persistent ID %llu...
Failed to set collection properties with error: %{public}@
Failed to update cloud plaulist properties with error: %{public}@
Failed to update cloud item properties with error: %{public}@
Setting item properties %{public}@ for saga ID %llu...
Failed to set item properties with error: %{public}@
Setting item properties %{public}@ for purchaseHistoryID %llu...
Jalisco update progress failed with error: %{public}@
Saga update progress failed with error: %{public}@
Jalisco load Update In Progress failed with error: %{public}@
Saga update In Progress failed with error: %{public}@
Load Update In Progress failed with error: %{public}@
Sending load genius items request for saga ID %llu...
Load Genius Items failed with error: %{public}@
loadMissingArtwork failed with error: %{public}@
Load Subscription Container Artwork Info failed with error: %{public}@
Load Subscription Screenshot Artwork Info failed with error: %{public}@
Load Subscription Item Artwork Info failed with error: %{public}@
Load Container Artwork Info failed with error: %{public}@
Load Artwork Info failed with error: %{public}@
Load Artwork Info for purchase history screenshot failed with error: %{public}@
Sending request to deprioritize album artist hero artwork import with persistent ID %lld...
Failed to deprioritize album artist hero artwork import with persistent ID %lld with error: %{public}@
Sending request to deprioritize artist hero artwork import with persistent ID %lld...
Failed to deprioritize artist hero artwork import with persistent ID %lld with error: %{public}@
Sending request to deprioritize subscription container artwork import with persistent ID %lld...
Failed to deprioritize subscription container artwork import with persistent ID %lld with error: %{public}@
Sending request to deprioritize subscription screenshot import with persistent ID %lld...
Failed to deprioritize subscription screenshot import with persistent ID %lld with error: %{public}@
Sending request to deprioritize subscription item artwork import with persistent ID %lld...
Failed to deprioritize subscription item artwork import with persistent ID %lld with error: %{public}@
Sending request to deprioritize container artwork import with saga ID %llu...
Failed to deprioritize container artwork import with saga ID %llu with error: %{public}@
Sending request to deprioritize screenshot import with saga ID %llu...
Failed to deprioritize screenshot import with saga ID %llu with error: %{public}@
Sending request to deprioritize item artwork import with saga ID %llu...
Failed to deprioritize item artwork import with saga ID %llu with error: %{public}@
Sending request to deprioritize screenshot artwork import with purchase history ID %llu...
Failed to deprioritize screenshot artwork import with purchase history ID %llu with error: %{public}@
Sending request to deprioritize item artwork import with purchase history ID %llu...
Failed to deprioritize item artwork import with purchase history ID %llu with error: %{public}@
Sending request to import album artist hero image for item persistent ID %lld...
Import Album Artist Hero Artwork failed with error: %{public}@
Sending request to artist hero image hero for item persistent ID %lld...
Import Artist Hero Artwork failed with error: %{public}@
Sending request to import subscription artwork for container persistent ID %lld...
Import Subscription Container Artwork with error: %{public}@
Sending request to import subscription screenshot for item persistent ID %lld...
Import Subscription Screenshot failed with error: %{public}@
Sending request to import subscription artwork for item persistent ID %lld...
Import Subscription Item Artwork failed with error: %{public}@
Sending request to import container artwork for saga ID %llu...
Import Container Artwork failed with error: %{public}@
Sending request to import screenshot for saga ID %llu...
Import Cloud Screenshot failed with error: %{public}@
Sending request to import item artwork for saga ID %llu...
Import Item Artwork failed with error: %{public}@
Skipping request to import item screenshot for purchase history ID %llu due to insufficient network conditions
Sending request to import screenshot for purchase history ID %llu...
Import Purchase History Screenshot failed with error: %{public}@
Sending request to import item artwork for purchase history ID %llu...
loading last known iCML state change failed with error: %{public}@
Sending request to disable Jalisco Genius...
Disable Genius failed with error: %{public}@
Send request to check status of Jalisco genius operation...
Load Update Genius Status failed with error: %{public}@
Sending request to cancel the update Jalisco genius data operation in progress...
Cancel Update Genius Data failed with error: %{public}@
Sending request to update Jalisco Genius data...
Update Genius Data failed with error: %{public}@
Sending request to enable Jalisco Genius...
Enable Genius failed with error: %{public}@
Sending request to set Genius CUID...
Set Genius CUID failed with error: %{public}@
Sending request to load Genius CUID...
Load Genius CUID failed with error: %{public}@
Sending request to load Learn More URL from bag...
Load Learn More failed with error: %{public}@
Sending deauthenticate request...
Deauthenticate failed with error: %{public}@
Sending request to update Cloud Library...
Can't update cloud library using current network - skipping
Update Match Library failed with status: %ld
Update Match Library failed with error: %{public}@
Could not get if mediaKind=%d is disabled for Jalisco sync. error=%{public}@, isMediaKindDisabled=%d
mediaKind=%d is %{public}s for Jalisco sync
Checking if mediakind=%d is disabled failed with error=%{public}@
Remove Jalisco failed with error: %{public}@
Update Jalisco Library failed with error: %{public}@
ICCloudClient %p - becomeActive - Error retrieving xpc service - error=%{public}@
<ICCloudClient %p> - Attempting disable cloud library
Could not deauthenticate Saga library and disable active locker account - error=%{public}@.
Finished deauthenticating Saga library
Could not get remote object to deauth Saga library - error=%{public}@
<ICCloudClient %p> - Attempting cloud library authenticate (start initial import with explicit user action, merge policy=%d, shouldStartInitialImport=%{BOOL}u, isExplicitUserAction = %{BOOL}u)
Could not authenticate and start initial import of Saga library - error=%{public}@
Successfully authenticated and finished Saga import.
Could not get remote object to authenticate and start initial Saga import - error=%{public}@
Failed to create Genius playlist with error: %{public}@
Create cloud genius playlist failed with error: %{public}@
Hide items from purchase history failed with error: %{public}@
Remove cloud items from library failed with error: %{public}@
Remove cloud playlists from library failed with error: %{public}@
Add store playlist to library failed with error: %{public}@
SDK: Add store item to library failed with error: %{public}@
Must provide a valid adam ID (%lld) adding to library.
Add store item to library failed with error: %{public}@
Update pinned subscribed playlists failed with error: %{public}@
Update subscribed playlists failed with error: %{public}@
Upload playlist artwork failed with error: %{public}@
Publish cloud playlist failed with error: %{public}@
SDK: Add store item to playlist failed with error: %{public}@
Add saga id to playlist failed with error: %{public}@
Add store item to playlist failed with error: %{public}@
Set cloud playlist properties failed with error: %{public}@
SDK: Create cloud playlist failed with error: %{public}@
Must provide at least a playlist name when creating a playlist.
Create cloud playlist failed with error: %{public}@
Set cloud add-to-playlist behavior failed with error: %{public}@
MIGRATION: isMatchAuthenticated: %d, isMatchCellularDataEnabled: %d, hasAutomaticDownloads: %d, isAutomaticDownloadCellularDataEnabled: %d. New cellular data state: %d
MIGRATION: migrating store auto download setting to music download setting: %d
Creating connection to remote request execution service.
Connection to remote request execution service invalidated.
Connection to remote request execution service interrupted.
Invalidating connection to remote request execution service.
%{public}@ Failed to obtain remote proxy to perform remote request operation. error = %{public}@.
Override may not be less than 120000
Overridden to %lld milis.
warning: ICUserIdentity - Resolving DSID without an externally supplied identity store; if encoding the identity into an NSCoder, make sure to use -[NSCoder ic_encodeUserIdentity:withStore:forKey:]. Falling back to using [ICUserIdentityStore defaultIdentityStore].
ICUserIdentity - Unable to retrieve DSID for userIdentity=%{public}@ - error=%{public}@
%{public}@ failed - no properties for account %{public}@
%{public}@ failed to parse token response
%{public}@ no token in library auth service response: %{public}@
%{public}@ received error %{public}@. http status code=%d
%{public}@ user identity changed - invalidating bag cache
%{public}@ fetched new bag which expires in %fs (expiration date: %{time_t}zd).
%{public}@ Invalidating all entries in url bag cache by expiring them
%{public}@ Returned expired URL bag, so forcing a refresh now for next time
%{public}@ Will fetch bag for requestContext %{public}@
%{public}@ Notifying %lu callers that we got the bag for context %{public}@
%{public}@ Failed to load properties for account %{public}@. err=%{public}@
%{public}@ Failed to load sslToken for account DSID %@ - skipping
%{public}@ Failed to serialize request body. err=%{public}@
%{public}@ Recevied token response %@
%{public}@ Failed to load playback endpoint URL from the bag
Could not recreate delegate account store: %{public}@
Could not truncate delegate account store for reset
Could not setup delegate account store for reset: %{public}@
Failed to obtain system free space. err=%{public}@
%{public}@: Created child operation queue: %{public}@.
%{public}@ performing authentication validation for user identity %{public}@
%{public}@ Failed to fetch the bag. err=%{public}@
%{public}@ Validation failed because the subscription status url is missing from the bag
%{public}@ Failed to fetch subscription status. err=%{public}@
%{public}@ Subscription status load failed due to invalid response.
%{public}@ Subscription status response parsing failed with error: %{public}@.
%{public}@ authentication validation completed successfully
%{public}@ Received invalidToken response - attempting to authenticate
%{public}@ Authentication complete. authenticated = %{BOOL}u, err = %{public}@
Could not get activePairedDeviceId %{public}@, _initialSyncStateObserver %{public}@.
obtained initial sync state for %{public}@. hasCompletedSync=%d, err=%{public}@, initialSyncComplete=%d
failed to obtain CompanionMusicGUID - you may need an entitlement for this process
failed to obtain pairedDeviceMediaGUID because there is no active paired device
failed to obtain paired device GUID - you may need an entitlement for this process
failed to obtain paired device GUID because there is no active paired device
Found %d paired device ids
paired device pairing id %{public}@
active paired device pairing id %{public}@
HAS_PAIRED_SYNC
Got device did unpair notification
Got device did pair notification
[ICDelegationProviderService] Connection invalidated.
[ICDelegationProviderService] Connection interrupted.
%{public}@: Updating delegation UUIDs [discovered services] - currentUUIDs=%{public}@ - discoveredServices=%{public}@
   |_ Processing service %{public}@ - delegationAccountUUIDs=%{public}@
      Processing service %{public}@ - eligibleDelegationAccountUUIDs=%{public}@
      Processing service %{public}@ - activeSessions=%{public}@
      Processing service %{public}@ - %lu new delegated accounts - delegationAccountUUIDs=%{public}@
%{public}@: Creating delegation provider session [new delegated account] - userIdentity=%{public}@ - delegationAccountUUIDs=%{public}@ -  netService=%{public}@
%{public}@: Updating browsing status
%{public}@: Stopping service search with browser: %{public}@
%{public}@: Searching for services with browser: %{public}@
%{public}@: Delegation account UUIDs did change for with notification: %{public}@
%{public}@: Connection %{public}@ did remove assertion: %{public}@
%{public}@: Connection %{public}@ did add assertion: %{public}@
%{public}@ Removing service %{public}@
%{public}@ Found service %{public}@
%{public}@: Starting XPC service.
iTunes accounts have changed - invalidating user identity cache
ICHTTPArchive directory '%{public}@' is not a directory! Disabling archiving
%{public}@
%{public}@: Instantiated MusicKit request context with a default client info.
This is not recommended, as you need to be explicit about the client identifier and client version your application is meant to use, per agreement with the AMP Core Services team.
Nevertheless, proceeding with clientIdentifier = "%{public}@" and clientVersion = "%{public}@".
%{public}@ Performing request with seed itemID %lld, isLibraryID=%d
%{public}@ Failed to serialize recommended content request. err= %{public}@
%{public}@ Failed to fetch recommended content. err=%{public}@
%{public}@ no response body - treating as failure
%{public}@ registering APNS token %{public}@
%{public}@ Failed to load url bag. err=%{public}@
%{public}@ Missing register-success url in bag - skipping
%{public}@ request failed. err=%{public}@
%{public}@ recieved response %{public}@
%{public}@ Performing request with storeID %lld, affiliate %{public}@
%{public}@ No active iTunes account - failing request
%{public}@ Finished request with err %{public}@
%{public}@ Performing platform request of %ld items with profile '%{public}@'
%{public}@ Request completed with %ld responses. err=%{public}@
%{public}@ Subscription status load failed for %{public}@ due to invalid response.
%{public}@ Received subscription status response for %{public}@: %{public}@
%{public}@ Failed parsing subscription status response for %{public}@ with error: %{public}@.
%{public}@ Received invalid token response for %{public}@, authenticating...
%{public}@ Received invalid token response but not allowed to authenticate for: %{public}@
%{public}@ Subscription status load failed for %{public}@ due to response error: %{public}@
%{public}@ Authentication failed with error: %{public}@
%{public}@ Returning last known subscription status %{public}@ with error %{public}@ for: %{public}@
%{public}@ Using cached subscription status %{public}@ for: %{public}@
%{public}@ Aborted fetching subscription status because privacy link needs to be displayed first.
%{public}@ Subscription status load failed for %{public}@ due to URL bag load failure: %{public}@
%{public}@ Successfully loaded bag: %{public}@ (serverCorrelationKey: %{public}@; serverEnvironment: %{public}@).
%{public}@ Subscription status load failed for %{public}@ due to missing the key in the bag.
%{public}@ Skipping loading of carrier bundling status because the combination (MCC: %{public}@, MNC: %{public}@) for the current active SIM card is not in the allow list.
%{public}@ Scheduling next timeout check in %.2fs
%{public}@ Canceling timeout timer
%{public}@ Checking for timeouts
%{public}@ timing out request %{public}@
%{public}@ retrying request %{public}@ in %f seconds (retryReason = %{public}@, retryCount = %lu, maxRetryCount = %lu)
%{public}@ rejecting retry for request %{public}@ (retryReason = %{public}@, retryCount = %lu, maxRetryCount = %lu)
%{public}@ %{public}@ failed to build URL request. err=%{public}@
%{public}@ %{public}@ created URL task %{public}@ (attempt %lu/%lu) for request: %{public}@
%{public}@
%{public}@ %{public}@ created URL task %{public}@ (attempt %lu/%lu) for request: %{public}@
%{public}@ Checking request queue (counter = %lu).
%{public}@ Activating request %{public}@
%{public}@ Request queue state for counter = %lu: _activeRequests = %{public}@, _pendingRequests = %{public}@
%{public}@ enqueueing new %{public}@ request %{public}@ with url %{public}@
%@ %{public}@ download task finished. location=%{public}@
%@ %{public}@ moving download file %{public}@ --> %{public}@
%@ %{public}@ failed to link download file %{public}@ --> %{public}@
%{public}@ no request for data task %{public}@ - ignoring
%{public}@ %{public}@ received response for task %{public}@: %{public}@
%{public}@ %{public}@ received response for task %{public}@: %d
%{public}@ %{public}@ exceeded the redirect limit - aborting
%{public}@ %{public}@ handling redirect response --> %{public}@
%{public}@ either response %{public}@ or new request %{public}@ is invalid - ignoring
%{public}@ no request for redirected task %{public}@ - ignoring
%{public}@ %{public}@ Failed to process redirect response. err=%{public}@
%@ %{public}@ task finished. err=%{public}@
%{public}@ finished task %{public}@ for request %{public}@ [%lld sent, %lld rcvd in %.3fs (%lld bytes/s)]. err=%{public}@
%{public}@ no request for completed task %{public}@ - ignoring
%{public}@ Resuming...
%{public}@ Pausing...
%{public}@ %{public}@ cancelling request...
%{public}@ %{public}@ failed to cancel request because it could not be found
%{public}@ Serializing request body failed with error: %{public}@
Error reading restore configuration from bag
Asset type %{public}@ is not present in allowed restore kinds (%{public}@)
StoreMatchStatus is not in acceptable list - allowedMatchStatus=%{public}@, itemMatchStatus=%lld
Error reading restore URL from bag
Could not get properties for %{public}@, error=%{public}@
Invalid userName (%{public}@), DSID (%{public}@)
Error serializing request body data
%{public}@: Failed to archive revision information. Error = %{public}@
%{public}@: Failed to unarchive revision information. Error = %{public}@
Connection to daemon play activity controller invalidated.
Connection to daemon play activity controller interrupted.
Completing pending play events for revision index set: %@ session token: %llu with result: %lu
Session information: %@
Removing pending revisions index set %@ from sessionInformation revisions index set: %@
Resulting index set: %@
Existing additional pending revisions index set: %@
New additional pending revisions index set from flush success: %@
New additional pending revisions index set from flush failure: %@
Revisions version token has changed, clearing out.
%{public}@ Finished getting %lu play activity events for end point identifier %{public}@
%{public}@ Error %{public}@ getting play activity events for end point identifier %{public}@
%{public}@ Finished setting revision %llu, version token %{public}@ for end point identifier %{public}@ with error %{public}@
%{public}@ Error %{public}@ setting revision %llu, version token %{public}@ for end point identifier %{public}@
Removing play events up to revision: %llu
%{public}@ Finished removing play activity events upto revision %llu with error %{public}@
%{public}@ Error %{public}@ removing play activity events upto revision %llu
%{public}@ Recording play activity events: %@
%{public}@ Finished recording %lu play activity events with error %{public}@
%{public}@ Error %{public}@ recording %lu play activity events
%{public}@  Finished flushing play activity events for %{public}@ with error %{public}@
%{public}@  Error %{public}@ flushing play activity events for %{public}@
%{public}@ Completed %lu play activity events with session token:%llu flushResult:%lu with error %{public}@
%{public}@ Error %{public}@ completing %lu play activity events with session token:%llu flushResult:%lu
%{public}@ Disabling push notifications for type %{public}@
%{public}@ Missing remove-push-notification-type-url url in bag - skipping
%{public}@ removePushNotification request failed. err=%{public}@
%{public}@ removePushNotification request returned response %{public}@
%{public}@: Skipping renewal timer scheduling with automatic refresh count: %li, leaseExpirationDate: %{public}@, isRunning: %{public}@
%{public}@: Scheduling lease renewal in %f seconds with expiration date of: %{public}@.
%{public}@: Lease renew timer fired.
%{public}@: Renew: Failed to generate renew request data with error: %{public}@
%{public}@: Lease renew invalid because the session is no longer running.
%{public}@: Renew: Successfully processed renew response data.
%{public}@: Renew: Failed to process response data with error: %{public}@.
%{public}@: Renew: No client data in response, treating as successful.
%{public}@: Renew: Response failed with error: %{public}@
%{public}@: Stopping lease session...
%{public}@: Stop: Successfully ended lease sync.
%{public}@: Stop: FairPlay failed ending lease sync with error: %{public}@.
%{public}@: Lease session already stopped, returning success.
%{public}@: Starting lease session...
%{public}@: Start: Lease session already started.
%{public}@: Start: Failed to generate FairPlay sync session with error: %{public}@
%{public}@: Start: Failed to retrieve a valid DSID from the identity store.
%{public}@: Start: Successfully started.
%{public}@: Start: Failed to import lease response data with error: %{public}@
%{public}@: Start: Client data missing from response.
%{public}@: Start: Received response error: %{public}@
Error getting deviceGUID
failed to serialize body data. err=%{public}@, bodyDictionary=%{public}@
Failed to load icloud account properties. err=%{public}@
%{public}@: Failed to get bag with error %{public}@.
%{public}@: Got bag with %{public}@.
%{public}@: Did not find URL to get music user token.
%{public}@: Finished with error %{public}@ and statusCode %ld.
%{public}@: Finished with statusCode %ld.
%{public}@: Music user token was revoked. Error description: %{public}@
%{public}@: %{public}@
%{public}@: Server reported success, but %{public}@ was not a string: %{public}@ (of type %{public}@).
%{public}@: Music user token: "%@".
%{public}@: Revoked TCC access for %{public}@ with status %{bool}u.
%{public}@: Invalid request. %{public}@
%{public}@: Not getting music user token because privacy acknowledgement is required.
%{public}@: No active account. Failing request.
%{public}@: shouldIgnoreCache = YES.
%{public}@: Found music user token in cache.
%{public}@: Did not find music user token in cache.
%{public}@ [SKD] - created key session for prefetch keys %{public}@
%{public}@ [SKD] - couldnt create key session for prefetched keys because the configuration is missing from the bag
Failed to obtain device class from MobileGestalt
Failed to obtain device MAC address
Getting MAC address is not supported on this platform
[%{public}@] Operation has been cancelled, finishing.
[%{public}@] Received play event acquisition error: %{public}@.
[%{public}@] No pending play events, finishing.
[%{public}@] Unexpected empty store account IDs, finishing.
[%{public}@] Post URL missing from bag
[%{public}@] Failed to load URL bag with error: %{public}@
[%{public}@] Adding PAF event %{public}@.
[%{public}@] error (%{public}@ serializing request data (%{public}@).
[%{public}@] error compressing request data
[%{public}@] Failed to resolve a URL request for override headers with error: %{public}@
[%{public}@] Flush %d PAF events finished with HTTP code %ld
[%{public}@] MALFORMED PAF EVENTS 
[%{public}@] MALFORMED PAF EVENTS=%{public}@, requestData=%{public}@
[%{public}@] Uploading malformed PAF events
[%{public}@] response is NOT of kind NSHTTPURLResponse
[%{public}@] operation finished with error %{public}@, HTTTP statusCode %ld, parsedResponseBody %{public}@
[%{public}@] flushed %lu play events with result %d isFinalResult: %d
[%{public}@] completed pending play events finished with error: %{public}@ for session token: %llu flushResult: %lu
[%{public}@] removing flushed play events finished with error: %{public}@
%{public}@ - Provided expiration date is nil
%{public}@ - Age verification status has expired
%{public}@ - Age verification status is current
ACAccountStore %p - Error retrieving local store account. err=%{public}@
ACAccountStore %p - Error retrieving store account for home ID %{public}@. err=%{public}@
ACAccountStore %p - Error retrieving store account type. err=%{public}@
ACAccountStore %p - Error retrieving store account for DSID %{public}@. err=%{public}@
ACAccountStore %p - Error fetching primary apple account. err=%{public}@
ACAccountStore %p - Error setting active locker account %{public}@. err=%{public}@
Setting %{public}@ as the active locker account
Removing %{public}@ as the active locker account
active store account does not have the locker bit set - returning nil
ACAccountStore %p - Error updating active bit for account %{public}@. err=%{public}@
ACAccountStore %p - Error retrieving all store accounts, err=%{public}@
ACAccountStore %p - Error retrieving iTunesStore accounts. err=%{public}@
Failed to serialize body data. error=%{public}@, bodyDictionary=%{public}@
ICAgeVerificationState - cachedStateForDSID: - Reading state from disk - DSID=%@
ICAgeVerificationState - cachedStateForDSID: - Creating default state [No cache found] - DSID=%@
ICAgeVerificationState - cachedStateForDSID: - No cached state [Unactionable DSID] - DSID=%@
%{public}@ Silent SMS succeeded.
%{public}@ Failed to send silent SMS for %{public}@.
%{public}@ Carrier bundling eligibility operation failed for %{public}@ due to error in response body: %{public}@
%{public}@ Performing delayed retry after %{public}f seconds: still needs silent SMS.
%{public}@ Carrier bundling eligibility operation failed for %{public}@ due to URL bag load failure: %{public}@
%{public}@ Carrier bundling eligibility operation failed for %{public}@ due to missing the key in the bag.
%{public}@ Encountered error trying to serialize body data for %{public}@: %{public}@.
%{public}@ Sending preflight request.
%{public}@ Carrier bundling eligibility operation failed for %{public}@ error while issuing preflight request: %{public}@
%{public}@ Carrier bundling eligibility operation failed for %{public}@ due to invalid response.
%{public}@ Got carrier bundling response for %{public}@ with body: %{public}@
%{public}@ Sending header enrichment request.
%{public}@ Carrier bundling eligibility operation failed for %{public}@ because header enrichment failed with error: %{public}@.
%{public}@ Performing delayed retry after %{public}f seconds: still needs header enrichment.
%{public}@ Sending header enrichment response.
%{public}@ Carrier bundling eligibility operation failed for %{public}@ error while sending header enrichment response: %{public}@
%{public}@ Carrier bundling eligibility operation failed for %{public}@ due to missing header enrichment URL in response body: %{public}@
%{public}@ Carrier bundling eligibility operation failed for %{public}@ due to missing silent SMS message or number in response body: %{public}@
missing action URL in family permissions button action - skipping
Failed to resolve identity for family permissions dialog. err=%{public}@
Failed to resolve account for family permissions dialog. err=%{public}@
Failed to load APRequestHandler class - assuming not available on this platform
Family permissions request completed with err=%{public}@
missing action URL in Goto button action - skipping
unknown Goto button action subtarget %{public}@
Performing Buy button action with params %{public}@
Failed to perform buy button action. err=%{public}@
Failed to create user notification
failed to find user notification button for responseFlags %lu
unexpected dialog button action type %ld
Running %d blocks of type %d
Device %{public}@ has completed setup and initial sync
Failed to weak link symbol BYSetupAssistantLaunchedDarwinNotification
Registering for darwin notification: %{public}@
Failed to weak link symbol BYSetupAssistantFinishedDarwinNotification
Could not determine if setup assistant needs to run
Setup assistant needs to run: %{BOOL}u
Received darwin notification: %{public}@
%{public}@ Handling dialog request %{public}@
%{public}@ Failed to present dialog. err=%{public}@
%{public}@ Performing %{public}@ authentication for account %{public}@
%{public}@ No account provided - skipping verification
%{public}@ Authentication task complete. err=%{public}@
%{public}@ Cacheing show in library switch as %{BOOL}u.
%{public}@ Setting account notifications switches to: %{BOOL}u.
%{public}@ Successfully retrieved account notifications switches response.
%{public}@ Retrieving account notifications switches.
%{public}@ Successfully retrieved account notifications switches.
%{public}@: Received message: %@
%{public}@: Stream did close.
%{public}@: Sending response message: %@
%{public}@: Sending request message: %@
%{public}@: Writing data of length: %li
%{public}@: Finished reading.
%{public}@: Received data of length: %li.
%{public}@: Encountered error: %{public}@
%{public}@ failed to load account properties. err=%{public}@
%{public}@ failed to load bag. err=%{public}@
%{public}@ failed to find bag key for url endpoint
%{public}@ failed to serialize request object
%{public}@ Log event request failed. err=%{public}@
%{public}@ invalid message parm: {%{public}@ : %{public}@}
%{public}@ creating mescal signature for request. configuration=%{public}@
%{public}@ Building %{public}s store URL request
%{public}@ - buildStoreURLRequestWithURLRequest:properties:completionHandler: - Delegation header [dsid] [%@: %@]
%{public}@ - buildStoreURLRequestWithURLRequest:properties:completionHandler: - Delegation header [token] [%@: %@]
%{public}@ failed to sign request. err=%{public}@
Request %{public}@ issued before before first unlock, returning error.
%{public}@ - buildURLRequestWithCompletionHandler [Delegated identity found] - delegatedIdentity=%@
%{public}@ - buildURLRequestWithCompletionHandler - Adding delegation info to builder - delegatedDSID=%@ - delegatedToken=%@
Failed to get database property '%{public}@'. err=%{public}@
Failed to set database property ('%{public}@' = '%{public}@'). err=%{public}@
Failed to delete database property '%{public}@'. err=%{public}@
Failed to query for revisions index set. err=%{public}@
%{public}@ -- Error creating database, removing if possible...: %@ -- %@
%{public}@ -- Removing database successful, attempting to recreate...: %@ -- %@
%{public}@ -- Error creating database for a second time, bailing out: %@
%{public}@ -- Error removing database: %@ -- %@
%{public}@ -- Error creating directory: %@ -- %@
RemoveDRM operation complete. err=%{public}@, resultInfo=%{public}@
%{public}@ Creating assetDownloadTask with url: %{public}@, options %{public}@
%{public}@ Creating aggregateAssetDownloadTask with urlAsset: %{public}@, options %{public}@
%{public}@: listenerEndpointProviderConnection [started]
%{public}@: listenerEndpointProviderConnection [done] - connection:%{public}@
%{public}@: listenerEndpointForService [done with error] - service=%{public}@[%ld] - endpoint=%{public}@ - error=%{public}@
%{public}@: listenerEndpointForService [done] - service=%{public}@[%ld] - endpoint=%{public}@
%{public}@: listenerEndpointForService - XPC Error [no listener endpoint for service] - service=%{public}@[%ld] - error=%{public}@
%{public}@: listenerEndpointForService - XPC Error retrieving endpoint [Attempt %ld of %ld] - service=%{public}@[%ld] - error=%{public}@
%{public}@: Passing data of length %li to pairing session
%{public}@: Error returned from PairingSessionExchange: %i
%{public}@: Failed to derive output key (OSStatus = %li)
%{public}@: Failed to derive input key (OSStatus = %li)
%{public}@: Finishing pairing session with error: %{public}@
%{public}@: Opening with security settings: %@
%{public}@: Handling network reachability change; isRemoteServerLikelyReachable = %{BOOL}u.
%{public}@: Bag did change: %{public}@ (serverCorrelationKey: %{public}@; serverEnvironment: %{public}@). About to invoke %llu observation handler%s.
%{public}@: Bag did not change. Skipping invoking observation handlers.
%{public}@: Invoking observation handler with token %{public}@; bag = %{public}@.
%{public}@: Requesting bag with policy %{public}@.
%{public}@: Failed to fetch bag with error: %{public}@.
%{public}@: Handling %{public}@.
%{public}@: Stopped observing bag.
%{public}@: Beginning to observe bag.
%{public}@: Bag expiration date is in the past: %{public}@. Not scheduling timer for bag expiration.
%{public}@: Scheduling timer for bag expiration for date %{public}@; i.e. for %.1f seconds.
%{public}@: Bag expiration timer did fire.
%{public}@: Invalidated timer for bag expiration.
%{public}@: Removed bag observer with token: %{public}@.
%{public}@: Registered new bag observer with token: %{public}@.
%{public}@: Retrying request after successfully invalidating music user token.
%{public}@: Encountered error while processing initial response %{public}@. %{public}@. Underlying error: %{public}@.
%{public}@: Retrying request after successfully invalidating developer token.
%{public}@: Invalidating developer token upon processing completed response with status code %ld.
%{public}@: Deferring to %{public}@ to process completed response with status code %ld for %{public}@.
%{public}@: Invalidating developer token upon processing completed response with status code %ld, after considering generic response handler.
%{public}@: Invalidating user token upon processing completed response with status code %ld, after considering generic response handler.
%{public}@: Completed processing response %{public}@ with error %{public}@.
HTTP response=%{public}@
body=%{public}@
%{public}@: Completed processing response %{public}@.
%{public}@: Deferring to %{public}@ to process initial response with status code %ld for %{public}@.
[%{public}@] Missing authorize machine URL bag key
[%{public}@] Finishing.
[%{public}@] Response has invalid format
[%{public}@] Response returned error: %{public}@
%{public}@ Rescheduling a refresh due to account changes
%{public}@ Pre-fetching library token for new account with DSID %@
%{public}@ Removing token entry for non-existent account DSID %@
%{public}@ Setting timer to refresh library auth token for DSID %@ at %{public}@}
%{public}@ Performing bulk token refresh
%{public}@ No DSIDs available to refresh - ignoring
%{public}@ Skipping background refresh of DSID %@. last error: %{public}@}
%{public}@ Failed to serialize token result to cache. err=%{public}@
%{public}@ Failed to deserialize cached token result data. err=%{public}@
ICLibraryAuthServiceClientTokenProvider client connection interrupted
%{public}@ got change notification
%{public}@ Clearing token cache for external change notification
%{public}@ Refreshing tokens for DSIDs %@
%{public}@ Not refreshing token for DSIDs %@ because privacy acknowledgement is required
%{public}@ Failed to fetch new tokens for DSIDs %@. err=%{public}@
%{public}@ No token result for DSID %@ - attempting to fetch it individually
%{public}@ fetched new token result for DSID %@: %{public}@
%{public}@ Token result missing from response for DSID %@
%{public}@ Failed to fetch new token for DSID %@. err=%{public}@
%{public}@ Refreshing token for DSID %@
%{public}@ Not refreshing token for DSID %@ because privacy acknowledgement is required
%{public}@ Finished fetching new token for DSID %@. err=%{public}@. token=%@
%{public}@ Failed to fetch all client tokens. err=%{public}@
%{public}@ No token result for DSID %@ in bulk response - this will be treated as an error
%{public}@ failed fetching siri shared user id for homeIdentifier %{public}@:%{private}@. err=%{public}@
%{public}@ failed to get remote object proxy for token request. err=%{public}@
%{public}@ cachedTokenAndResetCache %d
%{public}@ getTokenResultsForDSIDs returning cached token results %{public}@
%{public}@ Refreshing expired tokens for DSIDs %@
%{public}@ Failed to refresh tokens. err=%{public}@
%{public}@ getTokenResultForDSID returning cached token result %{public}@
%{public}@ Refreshing expired token for DSID %@
%{public}@ Failed to refresh the token. err=%{public}@
%{public}@ Failed to gather DSIDs from the account store to fetch tokens for. err=%{public}@
%{public}@ Skipping account %@ because either the DSID is missing or it has no home user ids
%{public}@ failed to get identity properties for token request. err=%{public}@
%{public}@ not fetching library token because there's no active account
%{public}@: Invoking observation handler for %{public}@ with token %{public}@. isPrivacyAcknowledgementRequired = %{BOOL}u.
%{public}@: Removed observer of privacy acknowledgement for %{public}@ with token: %{public}@.
%{public}@: Stopped observing privacy acknowledgement for %{public}@.
%{public}@: Beginning to observe privacy acknowledgement for %{public}@.
%{public}@: Registered new observer of privacy acknowledgement for %{public}@ with token: %{public}@.
%{public}@: Acknowledging privacy policy for %{public}@ (%{public}@)...
%{public}@: Failed to acknowledge privacy policy for %{public}@ (%{public}@). didSucceed = %{BOOL}u, error = %{public}@.
%{public}@: Successfully completed privacy policy acknowledgement for %{public}@.
%{public}@: Ignoring privacy acknowledgement for %{public}@ because -[ICDefaults isPrivacyAcknowledgementDisabledForMusic] returned YES.
%{public}@: Privacy acknowledgement required for %{public}@ (%{public}@)? %{BOOL}u.
[%{public}@] [Lease] Automatic lease refresh timer enabled with time left: %f.
[%{public}@] [Lease] Automatic lease refresh timer disabled.
[%{public}@] [Lease] Completed playback request operation - Request: %{public}@ - Type: %ld
[%{public}@] [Lease] Will start playback request operation - Request: %{public}@ - Type: %ld
ICCloudClientAvailabilityService %p - Unable to create XPC Connection [no listener endpoint]
ICCloudClientAvailabilityService %p - Connection to cloud availability service invalidated
ICCloudClientAvailabilityService %p - Resetting XPC connection to nil
ICCloudClientAvailabilityService %p - Connection to cloud availability service interrupted
ICCloudClientAvailabilityService %p - Creating XPC Client Connection [started]
ICCloudClientAvailabilityService %p - Creating XPC Client Connection [failed] - endpoint=%{public}@ - error=%{public}@
ICCloudClientAvailabilityService %p - Creating XPC Client Connection [done] - connection=%{public}@
%{public}@ Failed to serialize event entry with identifier %{public}@. err=%{public}@
%{public}@ Failed to commit message store data. err=%{public}@
%{public}@ Failed to serialize message metadata entry with identifier %{public}@. err=%{public}@
%{public}@ Failed to serialize message entry with identifier %{public}@. err=%{public}@
%{public}@ Failed to read message store data. err=%{public}@
%{public}@ Failed to deserialize event entry. err=%{public}@
%{public}@ Failed to deserialize message metadata entry with identifier %{public}@. err=%{public}@
%{public}@ Failed to deserialize message entry with identifier %{public}@. err=%{public}@
%{public}@ Failed to generate subscription lease fairplay data. err=%{public}@
%{public}@ Performing request with storeID=%lld, itemName=%{public}@
%{public}@ Finished with err=%{public}@, response=%{public}@
%{public}@ Missing setParentalControl url in bag - skipping
%{public}@ setParentalControl request failed. err=%{public}@
%{public}@ setParentalControl request returned response %{public}@
%{public}@ Performing setParentalControl request
%{public}@ failed - no DSID for account %{public}@
%{public}@: Missing cloud service status observation token despite the fact that the client asked to actively observe it.
%{public}@: Invalidated timeout timer for cloud server launch.
%{public}@: Scheduling timeout timer for cloud server launch for %.1f seconds.
%{public}@: Cloud server launch timeout timer did fire.
%{public}@: Successfully cancelled notify token for notify topic named "%{public}s".
%{public}@: Failed to cancel notify token for notify topic named "%{public}s"; notifyCancelStatus = %lu.
%{public}@: Successfully registered notify token for notify topic named "%{public}s".
%{public}@: Failed to register notify token for notify topic named "%{public}s"; notifyRegisterDispatchStatus = %lu.
%{public}@: Handling "%{public}s" notification: cloud server did launch.
%{public}@: Storefront identifier did change: "%{public}@". Posting %@.
%{public}@: Storefront country code did change: "%{public}@". Posting %{public}@.
%{public}@: Cloud service capabilities did change: %{public}@. Posting %@.
%{public}@: Ended observing cloud service status with token: %{public}@.
%{public}@: Observation token %{public}@ did not match with active observation token %{public}@. Did not end observing cloud service status.
%{public}@: Ending observing cloud service status with token: %{public}@.
%{public}@: Began observing cloud service status with token: %{public}@.
%{public}@: Began observing cloud service status with token: %{public}@, despite the fact that the client requested to end observing it. Immediately cancelling this.
%{public}@: Did invalidate cloud service status monitor connection.
%{public}@: Did reset cloud service status monitor connection.
%{public}@: Was previously observing cloud service status with token: %{public}@. Scheduling appropriate triggers to request begin observing cloud service status again.
%{public}@: %{public}@ Error: %{public}@.
%{public}@: Encountered error while requesting %{public}@. %{public}@ Underlying error: %{public}@.
%{public}@: Cloud service status monitor connection was invalidated.
%{public}@: Cloud service status monitor connection was interrupted.
%{public}@: Attempted to end transaction with unknown transaction identifier for cloud service status monitor connection: %{public}@. Ignoring.
%{public}@: Ended transaction with identifier %{public}@ for cloud service status monitor connection; updated number of active transactions: %lu.
%{public}@: About to invalidate cloud service status monitor connection.
%{public}@: Began transaction with identifier %{public}@ for cloud service status monitor connection; updated number of active transactions: %lu.
%{public}@: Cloud service status monitor was configured with privacy acknowledgement policy: %{public}@.
%{public}@ %{public}@ attempting re-authentication for http response code %d
%{public}@ %{public}@ authentication for http response code %d successful - retrying request
Connection to media content taste service invalidated
Connection to media content taste service interrupted
Finished running content taste update operation with error %{public}@.
Error %{public}@ setting running content taste operation
Set content taste type on album %lld with error %{public}@.
Error %{public}@ setting content taste type on album %lld.
Set content taste type on global playlist %{public}@} with error %{public}@.
Error %{public}@ setting content taste type on playlist %{public}@
Set content taste type on item %lld with error %{public}@.
Error %{public}@ setting content taste type on item %lld.
-init is not supported - use sharedCloudContentTasteRequestListener
Music restrict cellular data: %d
_isCellularDataActive=%{BOOL}u, cellularDataRestrictedForMusic=%{BOOL}u, newIsCellularDataActive=%{BOOL}u, newCellularDataRestrictedForMusic=%{BOOL}u
StoreApps allow cellular data: %d
Videos allow cellular data: %d
Error (domain %d, code %d) registering for RegistrationDataStatusChangedNotification
Error (domain %d, code %d) registering for PerAppNetworkDataAccessPolicyChangedNotification
%{public}@: Reloading Music User Token due to external change notification.
%{public}@: _handleMusicUserTokensDidChangeDistributedNotification: didContentsChange = %{BOOL}d
%{public}@: Failed to extract key identifier and team identifier from developer token "%@" because it has an unexpected number of parts: %lu.
%{public}@: Failed to correct developer token encoded part: "%@".
%{public}@: Failed to convert base 64 encoded string with developer token encoded part to data: "%@".
%{public}@: Failed to deserialize developer token encoded part data with error: %{public}@.
%{public}@: Failed to decode developer token encoded part because resulting object is of unexpected type: %{public}@.
%{public}@: Received response: %{public}@
%{public}@: Starting session...
%{public}@: Resolving streams...
%{public}@: Finished resolving streams with error: %{public}@
%{public}@: Opening connection...
%{public}@: Failed to get device sender security settings with error: %{public}@
%{public}@: Finished opening connection with success: %{public}@ error: %{public}@
%{public}@ Skipping automatic re-authentication because the user hasn't accepted the latest privacy link, and personalization is automatic
%{public}@ Performing %{public}@ authentication using request context %{public}@
%{public}@ Failed to get verification context for identity %{public}@. error=%{public}@
%{public}@ Not authenticating because %{public}@ authentication is not allowed for this response
%{public}@ Sending sync request with revision %lld; %{private}@
%{public}@ failed to decode response object
%{public}@ [SKD] - handling persistable content key request %{public}@ (%{public}@)
%{public}@ [SKD] - Failed to load key from store for identifier %{public}@. err=%{public}@
%{public}@ [SKD] - Returning cached key for identifier %{public}@
%{public}@ [SKD] - Persistable content key request completed for request identifier %{public}@. err=%{public}@
%{public}@ [SKD] - Failed persistable secure key request with identifier %{public}@. err=%{public}@
%{public}@ [SKD] - Failed to create persistable content key for identifier %{public}@. err=%{public}@
%{public}@ [SKD] - Failed to save key for persistable key request %{public}@. err=%{public}@
%{public}@ [SKD] - handling key request %{public}@ (%{public}@)
%{public}@ [SKD] - Requesting persistable content key request %{public}@ (%{public}@)
%{public}@ [SKD] - Key request completed for request %{public}@. err=%{public}@
%{public}@ [SKD] - Waiting for %lu keys: %{public}@
%{public}@ [SKD] - Processing key %{public}@
%{public}@: Requesting developer token using %{public}@ with client identifier %{public}@.
%{public}@: Invalidated cached developer token using %{public}@ with client identifier %{public}@.
%{public}@: Instantiated AMSBag with profile %{public}@ and version %{public}@: <AMSBag: %p>.
%{public}@: Instantiated AMSMediaTokenService with client identifier %{public}@: %{public}@.
%{public}@ - TXTRecord dictionary for data encoding: %{public}@
%{public}@ - TXTRecord dictionary from data decoding: %{public}@
%{public}@ handling %{public}@. Posting %{public}@.
%{public}@ handling privacy acknowledgement requirement changed notification: isPrivacyAcknowledgementRequired = %{BOOL}u. Posting distributed notification %{public}@.
Performing %{public}@; total number of pending requests %llu
Skipping redundant %{public}@; pending identical request %{public}@; total number of status handlers: %llu. total number of pending requests %llu
Creating connection to music subscription status service.
Connection to music subscription status service invalidated.
Connection to music subscription status service interrupted.
Invalidating connection to music subscription status service.
Delivering result for %{public}@ to %llu status handler%s: error = %{public}@.
Delivering result for %{public}@ to %llu status handler%s: response = %{public}@.
No status handlers found for request %{public}@. pendingRequests = %{public}@
Invalidating cached subscription status
Refreshing subscription for user identity %@
Failed to refresh subscription for user identity %@. err=%{public}@
Disabling subscription for user identity %@
Failed to disable subscription for user identity %{public}@. err=%{public}@
Enabling subscription for user identity %@
Failed to enable subscription for user identity %{public}@. err=%{public}@
Disallowing subscription status request for sandboxed user identity %@
warning: it has recently become deprecated to request the music subscription status in process; the new supported code path fetches it in itunescloudd, but you need to add the service %{public}@ to the array value of your entitlement %{public}@ in order to opt into this new code path.
%{public}@ Sending request %{public}@ to subscription status service
%{public}@ Failed to obtain remote proxy to perform subscription status request. error = %{public}@.
%{public}@ ending observation of privacy acknowledgement for %{public}@ with token %{public}@.
%{public}@ began observing privacy acknowledgement for %{public}@ with token %{public}@.
[%{public}@] Failed to get device receiver security settings with error: %{public}@
Failed to retrieve telephony phone number with error: %{public}@.
%@ phone number changed from %@ to %@.
Failed to get telephony active contexts info with error: %{public}@.
Failed to retrieve UUID of voice preferred telephony subscription context.
Found telephony subscription context %{public}@ at slot %ld as the voice preferred one.
Could not find a valid telephony subscription context. Available telephony subscription contexts: %{public}@.
Failed to instantiate CoreTelephonyClient.
Current device does not have telephony capability. Skipping telephony client initialization.
Telephony phone number changed.
Telephony phone number available.
Telephony active subscriptions did change.
Telephony request to send SMS to %@ failed. Telephony context: %{public}@.
Failed to retrieve telephony mobile subscriber netword code with error: %{public}@.
Failed to retrieve telephony mobile subscriber country code with error: %{public}@.
updating account to %s automatic downloads for media kinds %{public}@ and %{public}@
Finished updating enabled media kinds=%{public}@ with result=%{public}@, error=%{public}@
enabled media kinds (%{public}@) have not changed. Not running update operation
Loading homeUserIdentifierItems(NSArray)=%{public}@
Loading homeUserIdentifierItems(NSDictionary)=%{public}@
Could not create NSUUID for homeUserIdentifier=%{public}@
unexpected storefront value type. propertyValue=%{public}@
%{public}@: Skipping saga account status request because privacy acknowledgement is required
%{public}@ Received match status response: %{public}@
performing songDownloadDone request. downloadID=%{public}@, songID=%llu
%{public}@ - [Lease] - musicLeaseSession:requestsFairPlayKeyStatusUpdateWithCompletion:
%{public}@ - [Lease] - musicLeaseSession:didFinishPlaybackRequest:withPlaybackResponse:...
%{public}@: Building %{public}s URL request.
%{public}@: Skipping personalization; issuing request merely decorated with a developer token: %{public}@.
%{public}@: Issuing request decorated with both a developer token and a user token: %{public}@.
%{public}@: %{public}@ Underlying error: %{public}@.
%{public}@: %{public}@ (retryReason = %{public}@, retryCount = %lu, maxRetryCount = %lu) Underlying error: %{public}@.
%{public}@: Unauthorized to fetch user token. Invalidating developer token.
%{public}@: Successfully invalidated developer token; retrying building URL request.
%{public}@: Deferring to equivalent store URL request to build the actual URL request: %{public}@.
%{public}@: Request was issued before before first unlock, returning error.
%{public}@: Subscription status did not change. Skipping invoking observation handlers.
%{public}@: Subscription status did change: %{public}@. About to invoke %llu observation handler%s.
%{public}@: Invoking observation handler with token %{public}@; subscription status = <%{public}@: %p>
%{public}@: Requesting subscription status with caching %{public}@, using %{public}@.
%{public}@: Did complete %{public}@. Encountered error: %{public}@.
%{public}@: Did complete %{public}@. Received subscription status response %{public}@.
%{public}@: Stopped observing subscription status.
%{public}@: Beginning to observe subscription status.
%{public}@: Ignoring %{public}@ because it specifically refers to a different user identity: %{public}@.
%{public}@: Removed subscription status observer with token: %{public}@.
%{public}@: Registered new subscription status observer with token: %{public}@.
%{public}@ is being deallocated.
%{public}@ was initialized.
%{public}@ %{public}@ received store dialog response %{public}@
%{public}@ %{public}@ no dialog response handler - ignoring
%{public}@ %{public}@ Recevied authentication error. server response=%{public}@
%{public}@ verifying mescal signature for request. configuration=%{public}@
%{public}@ Not verifying mescal signature because the payload is too large. length=%lld, limit=%lld
%{public}@ invalidating bag cache because invalidate-url-bags is set in the response
%{public}@ completed with error %{public}@. correlationKey=%{public}@
response=%{public}@
body=%{public}@
%{public}@ completed successfully. correlationKey=%{public}@
%{public}@ received failureType=%{public}@
body=%{public}@
%{public}@ retrying request after action taken for dialog response
%{public}@ retrying request after successful re-authentication
%{public}@ retrying request after machine data action %{public}@
%{public}@ mescal verification failed for the response. err=%{public}@
%{public}@ retry requested by authkit
%{public}@: Failed to load accounts to remove cookies. err=%{public}@
[ICUserIdentityStore] - _icValidStoreAccountsFromACAccounts=%{public}@
[ICUserIdentityStore] - Active account change detected [Posting notification]
[ICUserIdentityStore] - Local store account properties change detected [Posting notification]
[ICUserIdentityStore] Failed to fetch local store account with error: %{public}@.
[ICUserIdentityStore] - Backend changed
[ICUserIdentityStore] - Error retrieving user identities for store accounts - error=%{public}@
[ICUserIdentityStore] Failed to fetch local store account synchronously with error: %{public}@.
[ICUserIdentityStore] - Error retrieving user identities for manageable accounts - error=%{public}@
[ICUserIdentityStore] - DSIDForUserIdentity - DSID already resolved - userIdentity=%{public}@
[ICUserIdentityStore] Request for properties for user identity %@ before first unlock.
[ICUserIdentityStore] Failed to load properties for identity %{public}@. err=%{public}@
[ICUserIdentityStore] Request for properties for active iCloud account before first unlock.
[ICUserIdentityStore] Failed to load active icloud account properties. err=%{public}@
failed to decode anisette response data from response %{public}@
processing machine data action %{public}@
unknown machine data action %{public}@ - ignoring
machine data action %{public}@ completed. err=%{public}@
NSURL: %p -initWithMasterPlaylistURL: Omitting video dictionary [received video dictionary with inconsistent aspect ratio] currentAspectRatio=%f aspectRatio=%f videoDictionary=%@
%{public}@: Updated net service TXTRecord: %{public}@
%{public}@: Resolved net service.
%{public}@: Getting streams...
%{public}@: Successfully created streams.
%{public}@: Failed to create streams.
%{public}@: Net service did not resolve address with error dictionary: %{public}@.
%{public}@: Net service did resolve address.
%{public}@: TXT record data updated.
Failed to update user version. err=%{public}@
[%{public}@]: [SKD] - Missing certificate URL: %{public}@, key server URL: %{public}@, serverPlaybackContextDataCreationHandler: %{BOOL}u
[%{public}@]: [SKD] - Missing request context.
[%{public}@]: [SKD] - Requesting iTunes Store content with a non-store request context.
[%{public}@]: [SKD] - Failed to load certificate data with error: %{public}@
[%{public}@]: [SKD] - Failed to generate server playback context data with error: %{public}@
[%{public}@]: [SKD] - Failed to serialize key server request data with error: %{public}@
[%{public}@]: [SKD] - Key server request returned error: %{public}@
[%{public}@]: [SKD] - Missing key dictionary in response: %{public}@
[%{public}@]: [SKD] - Loaded successfully.
[%{public}@]: [SKD] - Missing content key context data in response.
[%{public}@]: [SKD] - Received failure in response: %{public}@
%{public}@ [SKD] - Finished with error %{public}@
%{public}@ Found network type override value %{public}@
current thermal pressure level=%llu
error getting current thermal pressure level - status=%u, _currentThermalLevel=%llu
error checking for thermal pressure level status=%u
thermal levels changed - oldValue=%llu, newValue=%llu
Failed to get current thermal level. status=%u, using %llu for now
Network reachability changed. networkType=%{public}d, telephonyDataIndicator=%{public}@, isRemoteServerReachable=%{BOOL}u, isRemoteServerLikelyReachable=%{BOOL}u, currentNetworkLinkHighQuality=%{BOOL}u%{public}@, _currentNetworkLinkExpensive=%{BOOL}u, _wifiAssociated=%{BOOL}u, _ethernetWired=%{BOOL}u, _networkConstrained=%{BOOL}u
Failed to create network path observer!
error registering for thermal pressure levels change notifications status=%u
ICNetworkConstraints %p [%@] - cellularDataAllowed:%{BOOL}u, wifiDataAllowed:%{BOOL}u
%{public}@ Enabling push notifications for type %{public}@ with params %{public}@
%{public}@ Missing add-push-notification-type-url url in bag - skipping
%{public}@ addPushNotification request failed. err=%{public}@
%{public}@ addPushNotification request returned response %{public}@
softlink:r:path:/System/Library/PrivateFrameworks/AskPermission.framework/AskPermission
softlink:r:path:/System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit
softlink:r:path:/System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices
ICMusicSubscriptionStatusCache
ICJSSign
NSCopying
ICJSSignConfiguration
ICIAMImpressionNode
ICUnfairLock
ICDelegateToken
NSSecureCoding
NSCoding
ICAuthorizeMachineResponse
ICMusicSubscriptionRequest
ICSAPSession
ICStoreRequestContext
ICDelegateAccountStoreOptions
ICIAMApplicationMessage
ICAuthenticationUtilities
ICRadioLibraryArtistContentReference
ICCloudClientCloudService
ICCloudServerProtocol
ICStoreFileAssetInfo
ICSAPSessionSignDataOperation
ICStorePlatformRequestOperation
ICPlayActivityFeedSerialization
ICStoreFinanceItemMetadata
NSObject
ICDelegateAccountStoreServiceClient
ICDelegateAccountStoreService
ICMusicSubscriptionCarrierBundlingEligibilityResponse
ICPAAudioQualityDictionary
ICRadioPlaybackHistory
NSMutableCopying
ICMutableRadioPlaybackHistory
ICRadioStoreContentReference
ICRadioContentReferenceContainable
ICSQLiteStatement
ICSQLiteBinding
ICAgeVerificationManager
ICInAppMessageManager
ICEnvironmentMonitorObserver
ICInAppMessageManagerProtocol
NSXPCListenerDelegate
ICURLPerformanceMetrics
ICRemoteRequestOperationExecutionResponse
ICSubscriptionRedownloadRequest
ICDelegationConsumerNetService
NSNetServiceDelegate
ICMachineDataProvisionOperation
ICMediaAssetDownloadRequest
AVAssetResourceLoaderDelegate
ICURLSessionManager
ICPushNotificationMessage
ic_SagaAdditions
ic_JaliscoAdditions
ic_ITunesStoreAdditions
ICCloudClient
ICCloudAvailability
ICAsyncBlockOperation
ICRemoteRequestOperationController
ICDeveloperTokenDefaultProvider
ICDeveloperTokenProvider
ICStoreMediaResponseItem
ICRadioFetchMetadataRequest
ICMusicRestoreBagConfiguration
ICCloudServiceStatusRemoteMonitoringClient
ICCloudServiceStatusRemoteMonitoringService
ICCloudServiceStatusRemoteMonitoring
ICLibraryAuthServiceClientTokenResult
ICLibraryAuthServiceClientTokenIdentifier
ICLibraryAuthServiceClientTokenResponse
ICUserIdentity
ICPlayActivityAudioQualityProperties
ICMutablePlayActivityAudioQualityProperties
ICLibraryAuthServiceClientTokenRequest
ICURLBagProvider
ICMusicSubscriptionStatusResponse
ICLibraryAuthServiceBulkClientTokenRequest
ICMusicSubscriptionAccountlessPlaybackRequest
ICDelegationConsumerServiceProtocolHandler
ICAMSBagValuePromise
ICMusicSubscriptionPlaybackRequestOperation
ICMusicSubscriptionPlaybackResponseItem
ICStorePlatformOfferAsset
ICURLBagMescalConfiguration
ICPBDGSPlayerDelegateInfoToken
ICDelegateAccountStore
ICDelegateAccountStoreWriter
ICSQLiteConnectionDelegate
ICStorageManager
ICUserCredentialResponse
ICAsyncOperation
ICFPLeaseSyncSession
ICUserAuthenticationValidationRequest
ICNanoPairedDeviceStatusMonitor
PSYInitialSyncStateObserverDelegate
ICLibraryAuthServiceBulkClientTokenResponse
ICDelegationProviderService
NSNetServiceBrowserDelegate
ICDelegationProviderServiceSessionDelegate
ICSDelegationProviderServiceXPC
ICUserIdentityStoreACAccountBackend
ICUserIdentityStoreBackend
ICMutableUserIdentityProperties
ICUserIdentityProperties
itunescloudd
ICIAMSerialCheckRequest
ICHTTPArchive
ICMusicKitRequestContext
ICConnectionConfiguration
ICMusicSubscriptionRecommendationsRequest
ICUserVerificationContext
ICMusicSubscriptionLeaseStatus
ICPushNotificationsRegisterAPNSTokenRequest
ICSiriAddToAccousticHistoryRequest
ICLibraryAuthServiceClientTokenStatus
ICStorePlatformRequest
ICUserNotificationBuilder
ICStorePlatformMetadata
ICMusicSubscriptionStatusRequestOperation
ICURLSession
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDownloadDelegate
NSURLSessionDelegate
ICMusicRestoreRequest
ICInAppMessageEntry
ICIAMApplicationMessageSyncCommand
ICAMSBagAdapter
AMSBagProtocol
ICDelegationConsumerServiceSessionRequestInfo
ICCloudCLientErrorAdditions
ICDelegateAccountStoreServiceListener
ICFPSAPContext
ICIAMSynchronizeMessagesResponse
ICFPContentInfo
ICRadioPlaybackHistoryStore
ICPlayActivityController
_ICPlayActivityEndpointRevisionInformation
_ICPlayActivityFlushSessionInformation
ICProcessPlayActivityEventsRequestListener
ICPushNotificationsDisableTypesRequest
ICAdditions
ICStoreArtworkSizeInfo
ICStoreArtworkInfo
ICSuzeLeaseSession
ICMediaRedownloadRequest
ICUserIdentityStoreCoding
ICIAMLogEventRequest
ICStoreURLRequestBuilderProperties
ICStoreFileAssetFairPlayInfo
ICMusicUserTokenFetchRequest
ICEnhancedAudioContentKeySession
ICPBDGSStartDelegationRequest
ICDeviceInfo
ICNanoPairedDeviceStatusObserver
ICFlushPlayActivityEventsOperation
ICIAMTriggerCondition
ICIAMImage
ICInAppMessageMetadataEntry
ICFileContentKeyStore
ICContentKeyStoreProtocol
ICMemoryContentKeyStore
ICMachineDataSyncOperation
ICURLBagRadioConfiguration
ICAgeVerifier
ICSQLiteConnectionOptions
ICRadioFetchMetadataResponse
ICPlayActivityDebugLogOperation
ICURLRequest
NSProgressReporting
ICAccountStoreAdditions
ICPBDGSFinishDelegationRequest
ICIAMMessagePresentationTrigger
ICCloudItemIDList
ICUserIdentityStoreTestingBackend
ICMusicAccountNotificationsSettingsRequestOperation
ICIAMMetricEvent
ICMusicRestoreRequestParameters
ICDelegationConsumerService
ICDelegationConsumerServiceRequest
ICRadioLibraryAlbumContentReference
ICRadioStationProviderResource
ICAgeVerificationState
ICMusicSubscriptionCarrierBundlingEligibilityOperation
_ICValueHistoryItem
ICValueHistory
ICIAMLocalNotification
ICFPStreamContext
ICStoreRadioStreamAssetInfo
ICStoreDialogResponseHandlerConfiguration
ICStoreDialogResponseHandler
ICFairPlayUtilityAdditions
ICDeviceSetupStatusMonitor
ICMediaRedownloadResponse
ICStoreResponseProtocol
ICIAMApplicationMessageSyncResponse
ICPAPlayModeDictionary
ICACAccountVerificationOperation
AMSAuthenticateTaskDelegate
ICDispatchOnce
ICRequestContext
ICInAppMessageConfiguration
ICMusicAccountNotificationsSettingsManager
ICRadioStationTrack
ICDelegationServiceConnection
MSVMessageParserDelegate
ICDelegationServicePairingSessionDelegate
_ICDelegationServiceConnectionPendingRequestContext
ICCloudContentTastePBFusePreferences
ICCloudAddReferral
ICIAMMessageAction
ICInAppReportEventRequest
ICMusicSubscriptionLeasePlaybackRequest
ICStoreURLRequest
ICDelegateAccountStoreXPCWriter
ICMusicSubscriptionStatusRequest
ICPlayActivityTable
ICMusicSubscriptionFairPlayKeyStatus
ICPlayActivityEvent
ICMutablePlayActivityEvent
ICMusicSubscriptionStatusCacheKey
ICIAMMessageContent
ICMachineDataEraseOperation
ICRemoveMediaDRMOperation
ICMusicKitURLResponse
ICAVAssetDownloadURLSession
AVAssetDownloadDelegate
ICRemoteRequestOperationExecutionContext
ICUserVerificationOperation
ICSQLiteRow
ICRadioGetTracksRequest
ICIAMMessageRule
ICCloudServerListenerEndpointProvider
ICCloudServerListenerEndpointProviding
ICCloudServerListenerEndpointServiceProtocol
ICSuzeLeaseRequest
ICPAPlayActivityEnqueuerProperties
ICPAPlayActivityEvent
ICMutablePlayActivityEventContainerIDs
ICPlayActivityEventContainerIDs
ICDelegationServicePairingSession
ICURLBagMonitor
ICBook
ICRadioLikeRequest
ICAuthorizeMachineURLRequest
ICDelegationConsumerServiceSessionRequestResult
ICPBDGSStartDelegationResponse
ICAddToWishListResponse
ICMusicKitURLResponseHandler
ICPBDGSResponse
ICRequestAdditions
ICAuthorizeMachineRequest
ICLibraryAuthServiceClientTokenProvider
ICLibraryAuthServiceClientTokenProviderProtocol
ICSQLitePreparedStatement
ICPrivacyInfo
ICUserCredentialRequest
ICRadioLikeResponse
ICStoreHLSAssetInfo
ICPBDGSPlayerInfoContextToken
ICMusicSubscriptionLeaseSession
ICKeyedSharedInstanceManager
ICCloudClientAvailabilityService
ICCloudServerAvailabilityServiceProtocol
ICCloudContentTastePBFuseItemPreference
ICPushNotificationsResponse
ICInAppMessageStore
ICSuzeLeaseResponse
ICSAPSessionPrepareFairPlayContextOperation
ICRadioLibraryTrackContentReference
ICDelegationPlayInfoRequest
ICDelegationPlayInfoTokenRequest
ICDefaults
ICMusicSubscriptionPlaybackURLRequest
ICRadioPlaybackHistoryItem
ICMutableRadioPlaybackHistoryItem
ICDelegationProviderServiceAssertion
ICPlayActivityEnqueuerProperties
ICMutablePlayActivityEnqueuerProperties
ICSAPSessionAbstractOperation
ICUserNotificationContext
ICUserNotificationManager
ICAddToWishListRequest
ICStorePlatformResponseGroup
ICCDelegationProviderServiceXPC
ICSetParentalControlRequestOperation
ICIAMLogEventResponse
ICSQLiteQueryResults
ICCloudServiceStatusMonitor
ICPBDGSFinishDelegationResponse
ICPBDGSMessage
ICPBDGSRequest
ICURLResponseHandler
ICCloudContentTasteRequestListener
ICUpdateContentTasteRequestListener
ICCloudAvailabilityController
RadiosPreferencesDelegate
ICMusicUserTokenCache
ICBuyProductRequest
ICDelegationProviderServiceSession
ICDelegationServiceConnectionDelegate
ICStoreURLResponseAuthenticationProvider
ICRadioGetTracksResponse
ICRadioResponse
ICDelegationPlayInfoResponseToken
ICDelegationPlayInfoRequestOperation
ICIAMParameter
ICPurchaseRedownloadRequest
ICInAppMessageSyncRequest
ICUserIdentityContext
ICRemoteRequestOperationExecutingClient
ICRemoteRequestOperationExecutingService
ICRemoteRequestOperationExecuting
ICContentKeySession
AVContentKeySessionDelegate
ICDeveloperTokenFetchRequest
ICDelegationServiceSecuritySettings
ICDelegationNetServiceTXTRecord
ICStoreDialogResponse
ICStoreDialogResponseButton
ICStoreDialogResponseButtonAction
ML3AccountInformationProviding
ML3MusicLibrary
ICMusicSubscriptionStatusController
ICMusicSubscriptionStatusRemoteRequestingClient
ICDelegationConsumerServiceSession
ICDelegationConsumerNetServiceDelegate
ICStorePlatformResponse
ICInAppMessageEventEntry
ICSecureKeyDeliveryResponse
ICTelephonyController
CoreTelephonyClientDelegate
ICAccountAdditions
ICURLBag
ICDelegationProviderServiceProtocolHandler
ICRadioStationMetadata
ICDelegateAccountStoreSQLWriter
ICURLResponseAuthenticationProvider
ICSecurityInfo
ICSagaGetAccountStatusRequest
ICSongDownloadDoneRequest
MusicKit
MusicKit_Private
ICRemoteRequestOperation
ICMusicSubscriptionLeaseController
ICMusicSubscriptionLeaseSessionDelegate
_ICMusicSubscriptionLeaseIdentityCacheKey
ICDAAPPropertyInfo
ICIAMSynchronizeMessagesRequest
ICDelegateAccountStoreSchema
ICMusicKitURLRequest
ICSAPSessionVerifySignatureOperation
ICMusicSubscriptionStatusRemoteRequestingService
ICMusicSubscriptionStatusRemoteRequesting
ICUserVerificationRequest
ICMusicSubscriptionStatusMonitor
ICDelegateAccountStoreReader
ICRadioURLRequest
ICStoreURLResponseHandler
ICPBDGSPlayerInfoContextRequestToken
ICRequestOperation
ICSuzeLeaseSessionConfiguration
ICMatchRedownloadRequest
ICHTTPCookieStore
ICMusicAccountNotificationsSettingsSwitch
ICUserIdentityStore
ICUserIdentityStoreBackendDelegate
ICMachineDataActionHandler
ICStoreVideoArtworkInfo
ICRadioTrackInfoContentReference
ICRadioContentReference
ICStorePlatformOffer
ICDelegationProviderNetService
ICSQLiteConnection
ICURLResponse
ICURLBagLibraryDAAPConfiguration
ICMusicSubscriptionFairPlayController
ICMusicSubscriptionPlaybackResponse
ICMachineDataOperation
ICSecureKeyDeliveryRequest
ICSecureKeyDeliveryRequestOperation
ICEnvironmentMonitor
ICADIUtilities
ICADIProvisionSession
ICADIUtilityAdditions
ICUserCredentialProvider
_ICUserCredentialProviderRequestSession
ICMutableLocalStoreAccountProperties
ICLocalStoreAccountProperties
ICMutablePlayActivityEventItemIDs
ICPlayActivityEventItemIDs
ICMusicSubscriptionStatusTerms
ICMusicSubscriptionStatus
ICMutableMusicSubscriptionStatus
ICWiFiManager
ICURLBagEnhancedAudioConfiguration
ICMutableClientInfo
ICClientInfo
ICIAMSerialCheckResponse
ICNetworkConstraints
ICMutableNetworkConstraints
ICMusicAccountNotificationsSettingsResponse
ICPushNotificationsEnableTypesRequest
_accessQueue
_calloutQueue
_persistenceQueue
_baseCacheKey
_cachedSubscriptionStatusResponses
_init
dealloc
getCachedSubscriptionStatusResponseForRequestContext:completion:
setCachedSubscriptionStatusResponse:forRequestContext:completion:
setCachedSubscriptionStatusResponseNeedsReloadForAllRequestContextsWithCompletion:
setCachedSubscriptionStatusResponseNeedsReloadForRequestContext:completion:
updateBaseCacheKey
_handlePhoneNumberDidChangeNotification:
_handleUserIdentityStoreDidChangeNotification:
_handleSubscriptionStatusChangedDistributedNotification:
_getCacheKeyForRequestContext:completion:
_loadPersistedCacheWithCompletion:
_persistCachePostingGlobalNotification:
_postLocalChangeNotificationWithUserInfo:
_statusChangeUserInfoForUserIdentity:oldStatus:newStatus:
.cxx_destruct
setObject:forKeyedSubscript:
copy
dictionaryWithCapacity:
postNotificationName:object:userInfo:
defaultCenter
postNotificationName:object:
enumerateKeysAndObjectsUsingBlock:
setObject:forKey:
removeObjectsForKeys:
mutableCopy
addObject:
objectForKey:
countByEnumeratingWithState:objects:count:
length
removeObjectForKey:
handleFailureInMethod:object:file:lineNumber:description:
currentHandler
removeObserver:name:object:
addObserver:selector:name:object:
T@"ICMusicSubscriptionStatusCache",R
sharedCache
_configuration
initWithConfiguration:
signatureDataWithURLRequest:
signatureStringWithURLRequest:
_enumerateComponentsUsingBlock:
appendString:
caseInsensitiveCompare:
firstObject
initWithURL:resolvingAgainstBaseURL:
string
setLength:
mutableBytes
initWithLength:
UTF8String
copyWithZone:
storePlatformConfiguration
setSignatureDataCookieName:
includeQueryItemWithName:
includeHeaderWithName:
includeCookieWithName:
T@"NSString",C,N,V_signatureDataCookieName
T@"NSString",C,N,V_signatureDataHeaderName
_componentNames
_components
_signatureDataCookieName
_signatureDataHeaderName
_addRequestComponent:withName:
signatureDataCookieName
signatureDataHeaderName
setSignatureDataHeaderName:
enumerateObjectsUsingBlock:
objectAtIndex:
integerValue
initWithInteger:
allocWithZone:
TB,R,N
T@"NSString",&,N,V_impressionType
T@"NSString",&,N,V_recoAlgoId
_impressionType
_recoAlgoId
hasImpressionType
hasRecoAlgoId
description
dictionaryRepresentation
readFrom:
writeTo:
copyTo:
isEqual:
hash
mergeFrom:
impressionType
setImpressionType:
recoAlgoId
setRecoAlgoId:
dictionary
stringWithFormat:
_lock
init
lock
unlock
lockWithBlock:
T@"NSData",R,C,N,V_data
Tq,R,N,V_type
T@"NSDate",R,C,N,V_expirationDate
expired
TB,R,N,GisExpired
_data
_type
_expirationDate
TB,R
supportsSecureCoding
encodeWithCoder:
initWithCoder:
initWithType:data:
initWithType:data:expirationDate:
expiresBeforeDate:
isExpired
data
type
expirationDate
encodeInteger:forKey:
encodeObject:forKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
isEqualToData:
isEqualToDate:
componentsJoinedByString:
initWithFormat:
compare:
raise:format:
T@"NSData",R,C,N
_responseDictionary
initWithResponseDictionary:
keybagData
tokenData
initWithBase64EncodedString:options:
_storeRequestContext
_requestType
_requestingOfflineSlot
initWithStoreRequestContext:requestType:requestingOfflineSlot:
execute
_bagKeyForRequestType:
intValue
setHTTPBody:
dataWithPropertyList:format:options:error:
setHTTPMethod:
requestWithURL:
errorWithDomain:code:userInfo:
T@"NSOperationQueue",R,N,V_prepareFairPlayContextOperationQueue
T@"ICFPSAPContext",&,N,S_setSAPContext:,V_sapContext
T@"NSURL",R,C,N,V_certificateURL
T@"ICStoreRequestContext",R,C,N,V_requestContext
T@"NSURL",R,C,N,V_setupURL
TI,R,N,V_sapVersion
_operationQueue
_sapVersion
_certificateURL
_setupURL
_sapContext
_prepareFairPlayContextOperationQueue
_requestContext
_initWithVersion:certificateURL:setupURL:requestContext:
signData:withCompletionHandler:
verifySignatureData:forData:withCompletionHandler:
_setSAPContext:
sapVersion
addOperation:
setMaxConcurrentOperationCount:
sharedSAPSessionWithVersion:URLBag:requestContext:
T@"ICUserIdentity",R,C,N,V_identity
T@"ICUserIdentity",R,C,N,V_delegatedIdentity
T@"ICUserIdentityStore",R,N,V_identityStore
T@"ICStoreDialogResponseHandler",R,C,N,V_storeDialogResponseHandler
TB,R,N,V_allowsExpiredBags
Tq,R,N,V_personalizationStyle
_delegatedIdentity
_identity
_identityStore
_storeDialogResponseHandler
_personalizationStyle
_allowsExpiredBags
initWithIdentity:
initWithIdentity:clientInfo:
initWithIdentity:identityStore:clientInfo:
initWithIdentity:identityStore:clientInfo:authenticationProvider:
initWithBlock:
copyWithBlock:
setDelegatedIdentity:
setIdentity:
setIdentityStore:
setStoreDialogResponseHandler:
setAllowsExpiredBags:
setPersonalizationStyle:
identity
delegatedIdentity
identityStore
storeDialogResponseHandler
allowsExpiredBags
personalizationStyle
encodeBool:forKey:
decodeBoolForKey:
handleFailureInFunction:file:lineNumber:description:
stringWithUTF8String:
activeStoreAccountRequestContext
T@"NSString",C,N,V_databasePath
singleWriter
TB,N,GisSingleWriter,V_singleWriter
T@"NSXPCListenerEndpoint",&,N,V_listenerEndpoint
T@"NSString",C,N,V_serviceName
_databasePath
_listenerEndpoint
_serviceName
_singleWriter
databasePath
XPCServiceName
setDatabasePath:
isSingleWriter
setSingleWriter:
XPCEndpoint
setXPCEndpoint:
setXPCServiceName:
defaultOptionsWithServiceEndpoint:
defaultOptionsWithServiceName:
singleWriterOptionsWithDatabasePath:
T@"NSString",&,N,V_identifier
T@"NSMutableArray",&,N,V_targets
TB,N
Ti,N,V_messageType
TB,N,V_carousel
Ti,N,V_priority
T@"NSString",&,N,V_templateURL
Ti,N,V_maximumDisplays
Td,N,V_startDate
Td,N,V_endDate
TB,N,V_hasCloseButton
T@"NSMutableArray",&,N,V_contentPages
T@"ICIAMMessageRule",&,N,V_rule
T@"NSString",&,N,V_webArchiveURL
Ti,N,V_modalPresentationStyle
Ti,N,V_globalPresentationPolicyGroup
Ti,N,V_assetPrefetchStrategy
T@"ICIAMMetricEvent",&,N,V_holdoutEvent
T@"ICIAMLocalNotification",&,N,V_localNotification
T@"ICIAMMetricEvent",&,N,V_impressionEvent
T@"NSMutableArray",&,N,V_presentationTriggers
_endDate
_startDate
_assetPrefetchStrategy
_contentPages
_globalPresentationPolicyGroup
_holdoutEvent
_identifier
_impressionEvent
_localNotification
_maximumDisplays
_messageType
_modalPresentationStyle
_presentationTriggers
_priority
_rule
_targets
_templateURL
_webArchiveURL
_carousel
_hasCloseButton
_has
hasIdentifier
clearTargets
addTarget:
targetsCount
targetAtIndex:
messageType
setMessageType:
setHasMessageType:
hasMessageType
messageTypeAsString:
StringAsMessageType:
carousel
setCarousel:
setHasCarousel:
hasCarousel
setPriority:
setHasPriority:
hasPriority
hasTemplateURL
setMaximumDisplays:
setHasMaximumDisplays:
hasMaximumDisplays
setStartDate:
setHasStartDate:
hasStartDate
setEndDate:
setHasEndDate:
hasEndDate
hasCloseButton
setHasCloseButton:
setHasHasCloseButton:
hasHasCloseButton
clearContentPages
addContentPages:
contentPagesCount
contentPagesAtIndex:
hasRule
hasWebArchiveURL
modalPresentationStyle
setModalPresentationStyle:
setHasModalPresentationStyle:
hasModalPresentationStyle
modalPresentationStyleAsString:
StringAsModalPresentationStyle:
globalPresentationPolicyGroup
setGlobalPresentationPolicyGroup:
setHasGlobalPresentationPolicyGroup:
hasGlobalPresentationPolicyGroup
globalPresentationPolicyGroupAsString:
StringAsGlobalPresentationPolicyGroup:
assetPrefetchStrategy
setAssetPrefetchStrategy:
setHasAssetPrefetchStrategy:
hasAssetPrefetchStrategy
assetPrefetchStrategyAsString:
StringAsAssetPrefetchStrategy:
hasHoldoutEvent
hasLocalNotification
hasImpressionEvent
clearPresentationTriggers
addPresentationTriggers:
presentationTriggersCount
presentationTriggersAtIndex:
identifier
setIdentifier:
targets
setTargets:
priority
templateURL
setTemplateURL:
maximumDisplays
startDate
endDate
contentPages
setContentPages:
rule
setRule:
webArchiveURL
setWebArchiveURL:
holdoutEvent
setHoldoutEvent:
localNotification
setLocalNotification:
impressionEvent
setImpressionEvent:
presentationTriggers
setPresentationTriggers:
initWithCapacity:
numberWithDouble:
numberWithInt:
numberWithBool:
removeAllObjects
isEqualToString:
targetType
contentPagesType
presentationTriggersType
T@"AKAppleIDSession",R
sharedAuthKitSession
T@"NSString",C,N,V_artistName
T@"NSNumber",C,N,V_representativeCloudIdentifier
T@"NSNumber",C,N,V_storeIdentifier
_artistName
_representativeCloudIdentifier
_storeIdentifier
artistName
contentType
matchDictionary
rawContentDictionary
setArtistName:
representativeCloudIdentifier
setRepresentativeCloudIdentifier:
storeIdentifier
setStoreIdentifier:
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
T@"<ICCloudServerListenerEndpointProviding>",R,W,N,V_listenerEndpointProvider
T@"NSXPCConnection",R,N,V_xpcConnection
_xpcConnection
_serialQueue
_listenerEndpointProvider
initWithListenerEndpointProvider:
xpcConnection
_xpcConnectionWithListenerEndpoint:
serialQueue
listenerEndpointProvider
setInvalidationHandler:
setInterruptionHandler:
setExportedObject:
setRemoteObjectInterface:
setClasses:forSelector:argumentIndex:ofReply:
loadBooksForStoreIDs:configuration:completion:
setWithObjects:
interfaceWithProtocol:
setupInitialSagaPoolingForConfiguration:
setupInitialJaliscoPoolingForConfiguration:
setPreferredVideoQuality:forConfiguration:completion:
isSagaAuthenticatedForConfiguration:completion:
updateJaliscoLibraryWithReason:forConfiguration:completion:
updateSagaLibraryWithReason:forConfiguration:completion:
authenticateForConfiguration:startInitialImport:enableCloudLibraryPolicy:isExplicitUserAction:completion:
deauthenticateForConfiguration:completion:
disableCloudLibraryWithReason:completion:
setCloudAddToPlaylistBehavior:forConfiguration:completion:
removeJaliscoLibraryForConfiguration:completion:
isMediaKindDisabledForJaliscoLibrary:configuration:completion:
loadIsUpdateInProgressForConfiguration:completion:
loadUpdateProgressForConfiguration:completion:
loadIsSagaUpdateInProgressForConfiguration:completion:
loadSagaUpdateProgressForConfiguration:completion:
loadIsJaliscoUpdateInProgressForConfiguration:completion:
loadJaliscoUpdateProgressForConfiguration:completion:
loadLastKnownEnableICMLErrorStatusForConfiguration:completion:
importItemArtworkForPurchaseHistoryID:configuration:completion:
importScreenshotForPurchaseHistoryID:configuration:completion:
importItemArtworkForSagaID:configuration:completion:
importScreenshotForSagaID:configuration:completion:
importContainerArtworkForSagaID:configuration:completion:
importSubscriptionItemArtworkForPersistentID:configuration:completion:
importSubscriptionScreenshotForPersistentID:configuration:completion:
importSubscriptionContainerArtworkForPersistentID:configuration:completion:
importArtistHeroImageForPersistentID:configuration:completion:
importAlbumArtistHeroImageForPersistentID:configuration:completion:
deprioritizeItemArtworkForPurchaseHistoryID:configuration:
deprioritizeScreenshotForPurchaseHistoryID:configuration:
deprioritizeItemArtworkForSagaID:configuration:
deprioritizeScreenshotForSagaID:configuration:
deprioritizeContainerArtworkForSagaID:configuration:
deprioritizeSubscriptionItemArtworkForPersistentID:configuration:
deprioritizeSubscriptionScreenshotForPersistentID:configuration:
deprioritizeSubscriptionContainerArtworkForPersistentID:configuration:
deprioritizeArtistHeroImageForPersistentID:configuration:
deprioritizeAlbumArtistHeroImageForPersistentID:configuration:
loadArtworkInfoForPurchaseHistoryIDs:configuration:completion:
loadScreenshotInfoForPurchaseHistoryIDs:configuration:completion:
loadArtworkInfoForSagaIDs:configuration:completion:
loadArtworkInfoForContainerSagaIDs:configuration:completion:
loadScreenshotInfoForSagaIDs:configuration:completion:
loadArtworkInfoForSubscriptionItemPersistentIDs:configuration:completion:
loadScreenshotInfoForSubscriptionPersistentIDs:configuration:completion:
loadArtworkInfoForSubscriptionContainerPersistentIDs:configuration:completion:
loadMissingArtworkForConfiguration:
loadGeniusItemsForSagaID:configuration:completion:
addGeniusPlaylistWithPersistentID:name:seedItemSagaIDs:itemSagaIDs:configuration:completion:
createPlaylistWithPersistentID:properties:trackList:configuration:completion:
sdk_createPlaylistWithPersistentID:properties:trackList:configuration:completion:
setPlaylistProperties:trackList:forPlaylistPersistentID:configuration:completion:
addStoreItemWithAdamID:referral:toPlaylistWithPersistentID:configuration:completion:
addItemWithSagaID:toPlaylistWithPersistentID:configuration:completion:
sdk_addStoreItemWithOpaqueID:toPlaylistWithPersistentID:configuration:completion:
publishPlaylistWithSagaID:configuration:completion:
removePlaylistsWithSagaIDs:configuration:completion:
uploadArtworkForPlaylistWithPersistentID:configuration:completion:
updateSubscribedPlaylistsWithSagaIDs:ignoreMinRefreshInterval:configuration:completion:
updatePinnedSubscribedPlaylistsWithConfiguration:completion:
addStoreItemWithAdamID:referral:configuration:completion:
sdk_addStoreItemWithOpaqueID:configuration:completion:
addStorePlaylistWithGlobalID:configuration:completion:
removeItemsWithSagaIDs:configuration:completion:
hideItemsWithPurchaseHistoryIDs:configuration:completion:
setItemProperties:forPurchaseHistoryID:configuration:completion:
setItemProperties:forSagaID:configuration:completion:
uploadCloudItemPropertiesForConfiguration:completion:
uploadCloudPlaylistPropertiesForConfiguration:completion:
setAlbumProperties:forAlbumPersistentID:configuration:completion:
updateArtistHeroImagesForConfiguration:
loadIsJaliscoGeniusSupportedForConfiguration:completion:
loadJaliscoGeniusLearnMoreURLForConfiguration:completion:
loadJaliscoGeniusCUIDForConfiguration:completion:
setJaliscoGeniusCUID:forConfiguration:completion:
enableJaliscoGeniusForConfiguration:completion:
updateJaliscoGeniusDataForConfiguration:completion:
cancelUpdateJaliscoGeniusDataForConfiguration:completion:
loadJaliscoGeniusOperationStatusForConfiguration:completion:
disableJaliscoGeniusForConfiguration:completion:
listCloudServerOperations
initWithListenerEndpoint:
T@"NSURL",C,N,V_assetURL
T@"NSString",C,N,V_downloadKey
Tq,N,V_expectedProtectionType
T@"NSArray",C,N,V_fairPlayInfoList
Tq,N,V_flavorType
T@"NSString",C,N,V_fileExtension
TQ,N,V_fileSize
T@"ICStoreFinanceItemMetadata",C,N,V_metadata
T@"NSData",C,N,V_md5
T@"NSDictionary",R,C,N
Tq,R,N
_assetURL
_downloadKey
_fairPlayInfoList
_flavorType
_fileExtension
_fileSize
_metadata
_md5
_expectedProtectionType
initWithAssetURL:
initWithFileAssetResponseDictionary:
responseDictionary
assetURL
downloadKey
fairPlayInfoList
fileExtension
flavorType
fileSize
metadata
protectionType
_metadataDictionary
setAssetURL:
setDownloadKey:
setFairPlayInfoList:
setFlavorType:
setFileExtension:
setFileSize:
setMetadata:
setMd5:
expectedProtectionType
setExpectedProtectionType:
unsignedLongLongValue
URLWithString:
dictionaryWithObjects:forKeys:count:
absoluteString
T@"NSData",C,N,V_data
T@?,C,N,V_responseHandler
_responseHandler
executeWithSAPContext:
finishWithSAPContextPreparationError:
setData:
responseHandler
setResponseHandler:
T@"ICStorePlatformRequest",R,C,N,V_platformRequest
_activeURLRequest
_strongSelf
_urlSession
_platformRequest
initWithPlatformRequest:
initWithPlatformRequest:usingURLSession:
cancel
finishWithError:
_enqueueDataRequest:
_executePersonalized
_executeUnpersonalized
_finishWithResponse:error:
_URLRequestWithBaseURL:
platformRequest
setAllHTTPHeaderFields:
initWithURL:
queryItemWithName:value:
UUIDString
UUID
timeIntervalSince1970
isCancelled
defaultOverrideHTTPHeaderFields
arrayWithObjects:count:
T@"NSString",C,N,V_currentStoreFrontID
_currentStoreFrontID
propertyListObjectWithPlayActivityEvent:
currentStoreFrontID
setCurrentStoreFrontID:
propertyListWithData:options:format:error:
timeIntervalSinceNow
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
numberWithLongLong:
secondsFromGMT
initWithArray:
numberWithInteger:
T@"NSDictionary",R,C,N,V_metadataDictionary
T@"NSNumber",R,C,N
T@"NSString",R,C,N
T@"NSNumber",R,C,N,V_playlistID
T@"NSDate",R,C,N
_playlistID
initWithMetadataDictionary:
itemAdamID
itemCloudID
itemName
itemSortName
artistSortName
artistID
playlistName
albumSortName
playlistArtistName
composerName
composerSortName
genre
genreID
albumID
discCount
discNumber
trackCount
trackNumber
duration
isExplicit
year
bitrate
comments
dateAdded
drmVersionNumber
isGapless
isMasteredForITunes
kind
sampleRate
versionRestrictions
isCompilation
copyright
rank
releaseDate
storefrontID
vendorID
metadataDictionary
playlistID
dateFromString:
timeZoneForSecondsFromGMT:
setLenient:
setLocale:
localeWithLocaleIdentifier:
setDateFormat:
TQ,R
T#,R
T@"NSString",R,C
debugDescription
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
delegateAccountStoreDidChange
openWithCompletionHandler:
recreateWithCompletionHandler:
addDelegationUUIDs:forUserIdentity:completionHandler:
removeAllTokensWithCompletionHandler:
removeDelegationUUIDs:forUserIdentity:completionHandler:
removeIdentityPropertiesForUserIdentity:completionHandler:
removeTokenForUserIdentity:completionHandler:
removeTokensExpiringBeforeDate:completionHandler:
setIdentityProperties:forUserIdentity:completionHandler:
setToken:forUserIdentity:completionHandler:
initWithObjects:
Tq,R,N,V_carrierBundlingStatusType
familySubscription
TB,R,N,GisFamilySubscription,V_familySubscription
T@"NSError",R,N,V_error
T@"NSString",R,N,V_SMSSessionIdentifier
Td,R,N,V_delayInterval
TB,R,N,V_wantsDelayedRetry
T@"NSString",R,N,V_headerEnrichmentMessage
T@"NSString",R,N,V_headerEnrichmentSessionIdentifier
T@"NSURL",R,N,V_headerEnrichmentURL
TB,R,N,V_needsHeaderEnrichment
TB,R,N,V_needsSilentSMS
T@"NSString",R,N,V_silentSMSMessage
T@"NSString",R,N,V_silentSMSNumber
T@"NSString",R,N,V_cellularProviderName
T@"NSString",R,N,V_phoneNumber
_familySubscription
_wantsDelayedRetry
_needsHeaderEnrichment
_needsSilentSMS
_carrierBundlingStatusType
_error
_SMSSessionIdentifier
_delayInterval
_headerEnrichmentMessage
_headerEnrichmentSessionIdentifier
_headerEnrichmentURL
_silentSMSMessage
_silentSMSNumber
_cellularProviderName
_phoneNumber
initWithEligibilityDictionary:cellularProviderName:phoneNumber:
carrierBundlingStatusType
isFamilySubscription
error
SMSSessionIdentifier
delayInterval
wantsDelayedRetry
headerEnrichmentMessage
headerEnrichmentSessionIdentifier
headerEnrichmentURL
needsHeaderEnrichment
needsSilentSMS
silentSMSMessage
silentSMSNumber
cellularProviderName
phoneNumber
doubleValue
boolValue
Tq,N,V_bitRate
Tq,N,V_bitDepth
T@"NSString",&,N,V_channelLayoutDescription
TI,N,V_codec
Tq,N,V_sampleRate
_bitDepth
_bitRate
_sampleRate
_channelLayoutDescription
_codec
setBitRate:
setHasBitRate:
hasBitRate
setBitDepth:
setHasBitDepth:
hasBitDepth
hasChannelLayoutDescription
setCodec:
setHasCodec:
hasCodec
setSampleRate:
setHasSampleRate:
hasSampleRate
bitRate
bitDepth
channelLayoutDescription
setChannelLayoutDescription:
codec
numberWithUnsignedInt:
T@"NSString",R,C,N,V_stationIdentifier
Tq,R,N,V_numberOfSkips
T@"NSArray",R,C,N
T@"ICRadioPlaybackHistoryItem",R,C,N,V_currentTrack
_currentTrack
_numberOfSkips
_stationIdentifier
_tracks
mutableCopyWithZone:
initWithStationIdentifier:
propertyListRepresentation
tracks
stationIdentifier
numberOfSkips
currentTrack
indexOfObject:
containsValueForKey:
decodeObjectOfClasses:forKey:
T@"ICRadioPlaybackHistoryItem",C,D,N
Tq,D,N
T@"NSArray",C,D,N
addTrack:
addTracks:
removeExpiredTracks
removeTracksAtIndexes:
replaceTrackAtIndex:withTrack:
setCurrentTrack:
setNumberOfSkips:
setTracks:
_checkCurrentTrackIsPresent
_updateTracksUsingBlock:
containsObject:
replaceObjectAtIndex:withObject:
removeObjectsAtIndexes:
removeObjectAtIndex:
addObjectsFromArray:
isEqualToArray:
T@"NSString",C,N,V_containerID
_containerID
T@"NSString",C,N
containerID
setContainerID:
initWithStoreIdentifier:
T@"ICSQLiteConnection",R,N,V_connection
T^{sqlite3_stmt=},R,N,V_statement
readOnly
TB,R,N,GisReadOnly
_connection
_statement
bindDouble:atPosition:
bindFloat:atPosition:
bindInt:atPosition:
bindInt64:atPosition:
bindNullAtPosition:
bindNumber:atPosition:
bindData:atPosition:
bindString:atPosition:
bindDataCopy:atPosition:
bindStringCopy:atPosition:
clearBindings
initWithStatement:connection:
columnIndexByName
finalizeStatement
isReadOnly
reset
step
connection
sqlite3_stmt
longLongValue
bytes
initWithUTF8String:
initWithInt:
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_calloutQueue
T@"NSMutableDictionary",&,N,V_ageVerificationStateInternal
T@"ICAgeVerificationState",R,N
_ageVerificationStateInternal
getAgeVerificationStateWithCompletion:
getAgeVerificationStateForUserIdentity:completion:
ageVerificationState
ageVerificationStateForUserIdentity:
_registerForNotifications
_userIdentityStoreDidChange:
_updateAgeVerificationStateAndSendNotification:completion:
_updateAgeVerificationStateForUserIdentity:sendNotification:completion:
_runAgeVerificationForUserIdentity:completion:
_processAgeVerificationState:forDSID:
_bagHasValidKeys:
accessQueue
setAccessQueue:
calloutQueue
setCalloutQueue:
ageVerificationStateInternal
setAgeVerificationStateInternal:
objectForKeyedSubscript:
stringValue
hasEntitlement:inGroup:
T@"ICAgeVerificationManager",R
defaultManager
T@"ICInAppMessageStore",R,N,V_messageStore
_downloadOperationQueue
_callbackQueue
_messageStore
_isSystemService
_amsPushHandler
_foregroundApplicationIdentifier
_privacyObserverToken
_xpcServiceListener
_xpcConnections
_xpcClientConnection
environmentMonitorDidChangeNetworkReachability:
environmentMonitorDidChangeNetworkType:
environmentMonitorDidChangePower:
environmentMonitorDidChangeBatteryLevel:
environmentMonitorDidChangeTelephonyStatus:
environmentMonitorDidChangeThermalLevel:
allMessageEntriesWithCompletion:
messageEntriesForBundleIdentifiers:completion:
messageEntriesForBundleIdentifier:completion:
messageEntryWithIdentifier:bundleIdentifier:completion:
addMessageEntry:completion:
updateMessageEntry:completion:
removeMessageEntryWithIdentifier:forBundleIdentifier:completion:
removeAllMessageEntriesForBundleIdentifier:completion:
syncMessagesWithCompletion:
resetMessagesWithCompletion:
reportEventForMessageIdentifier:withParams:flushImmediately:completion:
flushEventsWithCompletion:
downloadResourcesForMessageWithIdentifier:bundleIdentifier:completion:
clearCachedResourcesForMessageWithIdentifier:bundleIdentifier:completion:
getMetadataForMessageIdentifier:bundleIdentifier:completion:
getAllMetadataForBundleIdentifiers:completion:
updateMetadata:messageIdentifier:bundleIdentifier:completion:
removeMetadataForMessageIdentifier:bundleIdentifier:completion:
getGlobalPropertyForKey:completion:
setGlobalProperty:forKey:completion:
getPropertyForKey:bundleIdentifier:completion:
setProperty:forKey:bundleIdentifier:completion:
listener:shouldAcceptNewConnection:
initWithMessageStore:identityStore:
startSystemService
stopSystemService
reportEventForMessageIdentifier:withParams:completion:
getAllMetadataForBundleIdentifier:completion:
_schedulePeriodicUpdate
_performSyncWithCompletion:
_processSyncResponse:completion:
_addMessageEntry:completion:
_removeMessageEntryWithIdentifier:forBundleIdentifier:completion:
_removeAllMessageEntriesForBundleIdentifier:completion:
_handleICInAppMessagesDidChangeDistributedNotification:
_performSyncRetryIfPending:
_updateShouldDownloadResources:onMessageWithIdentifier:bundleIdentifier:completion:
_checkForMessageResourcesNeedingDownloadForcingIfNecessary:
_downloadResourcesForMessageWithIdentifier:bundleIdentifier:completion:
_resourceCacheDirectoryPath
_loadConfigurationWithCompletion:
_performCacheConsistencyCheck
_privacyAcknowledgementRequired
_addConnection:
_removeConnection:
_unsafeMessageStore
removeObject:
setExportedInterface:
valueForEntitlement:
initWithConfiguration:bag:
bagForProfile:profileVersion:
registerBagKeySet:forProfile:profileVersion:
bagKeySet
setUserNotificationExtensionId:
removeItemAtURL:error:
lastPathComponent
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
fileURLWithPath:
array
setWithCapacity:
pathWithComponents:
URLWithString:relativeToURL:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
stringByAppendingPathComponent:
operationCount
timeIntervalSinceReferenceDate
removeItemAtPath:error:
removeDeliveredNotificationsWithIdentifiers:
removePendingNotificationRequestsWithIdentifiers:
hasPrefix:
handleNotification:
shouldHandleNotification:
JSONObjectWithData:options:error:
applicationStateForApplication:
initWithBundleIDs:states:
initWithMachServiceName:options:
remoteObjectProxyWithErrorHandler:
setWithObject:
initWithMachServiceName:
T@"ICInAppMessageManager",R
sharedManager
Td,R,N,V_connectionStartTime
Td,R,N,V_connectionEndTime
Td,R,N,V_domainLookupStartTime
Td,R,N,V_domainLookupEndTime
Td,R,N,V_fetchStartTime
Td,R,N,V_requestStartTime
Td,R,N,V_responseStartTime
Td,R,N,V_responseEndTime
Td,R,N,V_secureConnectionStartTime
TB,R,N,V_cachedResponse
TB,R,N,V_connectionReused
T@"NSString",R,N,V_appleTimingApp
T@"NSString",R,N,V_connectionType
T@"NSString",R,N,V_edgeNodeCacheStatus
T@"NSString",R,N,V_environmentDataCenter
T@"NSString",R,N,V_responseDate
TQ,R,N,V_statusCode
TQ,R,N,V_redirectCount
TQ,R,N,V_requestMessageSize
T@"NSString",R,N,V_requestUrl
T@"NSString",R,N,V_resolvedIPAddress
TQ,R,N,V_responseMessageSize
_cachedResponse
_connectionReused
_connectionStartTime
_connectionEndTime
_domainLookupStartTime
_domainLookupEndTime
_fetchStartTime
_requestStartTime
_responseStartTime
_responseEndTime
_secureConnectionStartTime
_appleTimingApp
_connectionType
_edgeNodeCacheStatus
_environmentDataCenter
_responseDate
_statusCode
_redirectCount
_requestMessageSize
_requestUrl
_resolvedIPAddress
_responseMessageSize
initWithTransactionMetrics:request:
connectionStartTime
connectionEndTime
domainLookupStartTime
domainLookupEndTime
fetchStartTime
requestStartTime
responseStartTime
responseEndTime
secureConnectionStartTime
cachedResponse
connectionReused
appleTimingApp
connectionType
edgeNodeCacheStatus
environmentDataCenter
responseDate
statusCode
redirectCount
requestMessageSize
requestUrl
resolvedIPAddress
responseMessageSize
stringWithCString:encoding:
_CFURLResponse
valueForHTTPHeaderField:
HTTPBody
isReusedConnection
resourceFetchType
secureConnectionStartDate
responseEndDate
responseStartDate
requestStartDate
fetchStartDate
domainLookupEndDate
domainLookupStartDate
connectEndDate
connectStartDate
T@"<NSSecureCoding>",&,N,V_remoteRequestOperationResponse
T@"NSError",&,N,V_remoteRequestOperationError
_remoteRequestOperationResponse
_remoteRequestOperationError
initWithRemoteRequestOperationResponse:remoteRequestOperationError:
remoteRequestOperationResponse
setRemoteRequestOperationResponse:
remoteRequestOperationError
setRemoteRequestOperationError:
isNSString__
initWithRequestContext:subscriptionItemID:
T@"<ICDelegationConsumerNetServiceDelegate>",W,N,V_delegate
T@"NSDictionary",R,C,N,V_userIdentityDelegationAccountUUIDs
T@"ICDelegationServiceSecuritySettings",R,N
_didPublish
_isPublished
_netService
_netServiceQueue
_securitySettings
_delegate
_userIdentityDelegationAccountUUIDs
netServiceWillPublish:
netServiceDidPublish:
netService:didNotPublish:
netServiceWillResolve:
netServiceDidResolveAddress:
netService:didNotResolve:
netServiceDidStop:
netService:didUpdateTXTRecordData:
netService:didAcceptConnectionWithInputStream:outputStream:
initWithUserIdentityDelegationAccountUUIDs:
securitySettings
publish
stop
_updateNetServiceStatus
delegate
setDelegate:
userIdentityDelegationAccountUUIDs
publishWithOptions:
setTXTRecordData:
objectEnumerator
initWithDomain:type:name:port:
substringToIndex:
code
_provisionSession
_finishWithError:
T@"NSURL",C,N,V_destinationURL
TB,N,V_allowsCellularData
TB,N,V_allowsCellularFallback
TB,N,V_allowDownloadOnConstrainedNetworks
discretionary
TB,N,GisDiscretionary,V_discretionary
TB,N,V_requiresPower
TB,N,V_prefersHLSAsset
T@"NSData",C,N,V_resumeData
_storeMediaResponseItem
_additionalHTTPHeaderFields
_downloadSession
_request
_response
_contentKeySession
_allowsCellularData
_allowsCellularFallback
_allowDownloadOnConstrainedNetworks
_discretionary
_requiresPower
_prefersHLSAsset
_destinationURL
_resumeData
resourceLoader:shouldWaitForLoadingOfRequestedResource:
resourceLoader:shouldWaitForRenewalOfRequestedResource:
resourceLoader:didCancelLoadingRequest:
resourceLoader:shouldWaitForResponseToAuthenticationChallenge:
resourceLoader:didCancelAuthenticationChallenge:
initWithRequestContext:storeMediaResponseItem:resumeData:
performRequestWithResponseHandler:
setValue:forHTTPHeaderField:
_sessionIdentifier
_createAVAssetDownloadOptionsDictionary
_mediaKindFromResponseItemMetadata:
destinationURL
setDestinationURL:
allowsCellularData
setAllowsCellularData:
allowsCellularFallback
setAllowsCellularFallback:
allowDownloadOnConstrainedNetworks
setAllowDownloadOnConstrainedNetworks:
isDiscretionary
setDiscretionary:
requiresPower
setRequiresPower:
prefersHLSAsset
setPrefersHLSAsset:
resumeData
setResumeData:
stringWithString:
finishLoading
setContentType:
contentInformationRequest
path
setDelegate:queue:
setPreloadsEligibleContentKeys:
resourceLoader
URLAssetWithURL:options:
addChild:withPendingUnitCount:
set_companionProxyPreference:
set_prefersInfraWiFi:
set_socketStreamProperties:
set_sourceApplicationBundleIdentifier:
set_requiresPowerPluggedIn:
setSessionSendsLaunchEvents:
setRequestCachePolicy:
setHTTPShouldUsePipelining:
setHTTPShouldSetCookies:
setHTTPCookieAcceptPolicy:
setAllowsCellularAccess:
backgroundSessionConfigurationWithIdentifier:
defaultSessionConfiguration
_cachedSessions
sessionWithIdentifier:
sessionWithQualityOfService:
sessionWithIdentifier:configuration:
sessionWithIdentifier:creationBlock:
addSession:withIdentifier:
removeSessionWithIdentifier:
_newSessionWithQualityOfService:
_sessionIdentifierWithQualityOfService:
set_ignoreDidReceiveResponseDisposition:
set_requiresSustainedDataDelivery:
bundleProxyForCurrentProcess
set_alwaysPerformDefaultTrustEvaluation:
set_tlsTrustPinningPolicyName:
T@"ICURLSessionManager",R
T@"ICURLSession",R
sharedSessionManager
defaultSession
highPrioritySession
T@"NSDictionary",R,C,N,V_userInfo
Tq,R,N,V_accountDSID
Tq,R,N,V_actionType
T@"NSDictionary",R,C,N,V_apsPayload
_userInfo
_accountDSID
_actionType
_apsPayload
initWithMessageUserInfo:
userInfo
accountDSID
actionType
apsPayload
sagaServerRevision
sagaUpdatedSubscribedPlaylistIDs
jaliscoServerRevision
jaliscoChangedMediaTypes
clientIdentifier
moduleIdentifier
T@"NSObject<OS_dispatch_queue>",R,N,V_serialAccessQueue
T@"NSXPCConnection",R,N
Tq,N,V_preferredVideoQuality
active
TB,N,GisActive,V_active
T@"ICCloudClientAvailabilityService",R,N,V_availabilityService
T@"ICCloudClientCloudService",R,N,V_cloudService
T@"ICCloudServerListenerEndpointProvider",R,N,V_listenerEndpointProvider
T@"ICConnectionConfiguration",R,N,V_configuration
T@?,C,N,V_updateSagaInProgressChangedHandler
T@?,C,N,V_updateJaliscoInProgressChangedHandler
_active
_updateSagaInProgressChangedHandler
_updateJaliscoInProgressChangedHandler
_serialAccessQueue
_preferredVideoQuality
_availabilityService
_cloudService
hasProperNetworkConditionsToPlayMedia
hasProperNetworkConditionsToShowCloudMedia
isCellularDataRestrictedForMusic
shouldProhibitMusicActionForCurrentNetworkConditions
isCellularDataRestrictedForVideos
shouldProhibitVideosActionForCurrentNetworkConditions
isCellularDataRestrictedForStoreApps
shouldProhibitStoreAppsActionForCurrentNetworkConditions
canShowCloudDownloadButtons
canShowCloudMusic
canShowCloudVideo
initWithUserIdentity:
configuration
cloudAddToPlaylistBehavior
setCloudAddToPlaylistBehavior:completionHandler:
createPlaylistWithPersistentID:properties:trackList:completionHandler:
sdk_createPlaylistWithPersistentID:properties:tracklist:completionHandler:
canSetPlaylistProperty:
setPlaylistProperties:trackList:forPlaylistPersistentID:completionHandler:
addStoreItemWithAdamID:referral:toPlaylistWithPersistentID:completionHandler:
addItemWithSagaID:toPlaylistWithPersistentID:completionHandler:
sdk_addStoreItemWithOpaqueID:toPlaylistWithPersistentID:completionHandler:
publishPlaylistWithSagaID:completionHandler:
uploadArtworkForPlaylistWithPersistentID:completionHandler:
updateSubscribedPlaylistsWithSagaIDs:ignoreMinRefreshInterval:completionHandler:
updatePinnedSubscribedPlaylistsWithCompletion:
addStoreItemWithAdamID:referral:completionHandler:
sdk_addStoreItemWithOpaqueID:completionHandler:
addStorePlaylistWithGlobalID:completionHandler:
removePlaylistsWithSagaIDs:completionHandler:
removeItemsWithSagaIDs:completionHandler:
hideItemsWithPurchaseHistoryIDs:completionHandler:
addGeniusPlaylistWithPersistentID:name:seedItemSagaIDs:itemSagaIDs:completionHandler:
authenticateWithCompletionHandler:
authenticateAndStartInitialImport:completionHandler:
enableCloudLibraryWithPolicy:startInitialImport:completionHandler:
_enableCloudLibraryWithPolicy:startinitialImport:isExplicitUserAction:completionHandler:
disableCloudLibraryWithCompletionHandler:
disableCloudLibraryWithReason:completionHandler:
becomeActive
updateJaliscoLibraryWithReason:completionHandler:
removeJaliscoLibraryWithCompletionHander:
isMediaKindDisabledForJaliscoLibrary:
updateJaliscoLibraryWithCompletionHandler:
updateSagaLibraryWithCompletionHandler:
updateSagaLibraryWithReason:completionHandler:
deauthenticateWithCompletionHandler:
loadIsJaliscoGeniusSupportedWithCompletionHandler:
loadJaliscoGeniusLearnMoreURLWithCompletionHandler:
loadJaliscoGeniusCUIDWithCompletionHandler:
setJaliscoGeniusCUID:withCompletionHandler:
enableJaliscoGeniusWithCompletionHandler:
updateJaliscoGeniusDataWithCompletionHandler:
cancelUpdateJaliscoGeniusDataInProgressWithCompletionHandler:
loadJaliscoGeniusOperationStatusWithCompletionHandler:
disableJaliscoGeniusWithCompletionHandler:
isAuthenticated
isAuthenticatedWithCompletionHandler:
isAuthenticatedWithQueue:completionHandler:
loadLastKnownEnableICMLErrorStatusWithCompletionHander:
importItemArtworkForPurchaseHistoryID:completionHandler:
importScreenshotForPurchaseHistoryID:completionHandler:
importItemArtworkForSagaID:completionHandler:
importScreenshotForSagaID:completionHandler:
importContainerArtworkForSagaID:completionHandler:
importSubscriptionItemArtworkForPersistentID:completionHandler:
importSubscriptionScreenshotForPersistentID:completionHandler:
importSubscriptionContainerArtworkForPersistentID:completionHandler:
importArtistHeroImageForPersistentID:completionHandler:
importAlbumArtistHeroImageForPersistentID:completionHandler:
deprioritizeItemArtworkForPurchaseHistoryID:
deprioritizeScreenshotForPurchaseHistoryID:
deprioritizeItemArtworkForSagaID:
deprioritizeScreenshotForSagaID:
deprioritizeContainerArtworkForSagaID:
deprioritizeSubscriptionItemArtworkForPersistentID:
deprioritizeSubscriptionScreenshotForPersistentID:
deprioritizeSubscriptionContainerArtworkForPersistentID:
deprioritizeArtistHeroImageForPersistentID:
deprioritizeAlbumArtistHeroImageForPersistentID:
loadArtworkInfoForPurchaseHistoryID:completionHandler:
loadArtworkInfoForPurchaseHistoryIDs:completionHandler:
loadScreenshotInfoForPurchaseHistoryID:completionHandler:
loadScreenshotInfoForPurchaseHistoryIDs:completionHandler:
loadArtworkInfoForSagaID:completionHandler:
loadArtworkInfoForSagaIDs:completionHandler:
loadArtworkInfoForContainerSagaID:completionHandler:
loadArtworkInfoForContainerSagaIDs:completionHandler:
loadScreenshotInfoForSagaID:completionHandler:
loadScreenshotInfoForSagaIDs:completionHandler:
loadArtworkInfoForSubscriptionItemPersistentID:completionHandler:
loadArtworkInfoForSubscriptionItemPersistentIDs:completionHandler:
loadScreenshotInfoForSubscriptionPersistentID:completionHandler:
loadScreenshotInfoForSubscriptionPersistentIDs:completionHandler:
loadArtworkInfoForSubscriptionContainerPersistentID:completionHandler:
loadArtworkInfoForSubscriptionContainerPersistentIDs:completionHandler:
loadMissingArtwork
loadGeniusItemsForSagaID:completionHandler:
loadIsUpdateInProgressWithCompletionHandler:
loadUpdateProgressWithCompletionHandler:
loadIsSagaUpdateInProgressWithCompletionHandler:
loadIsJaliscoUpdateInProgressWithCompletionHandler:
loadSagaUpdateProgressWithCompletionHandler:
loadJaliscoUpdateProgressWithCompletionHandler:
resetConfiguration:
resignActive
setDaemonConfiguration:
setPreferredVideoQuality:
canSetItemProperty:
setItemProperties:forPurchaseHistoryID:
setItemProperties:forSagaID:
uploadItemProperties
uploadCloudItemProperties
uploadCloudPlaylistProperties
setAlbumProperties:forAlbumPersistentID:completionHandler:
updateArtistHeroImages
loadBooksForStoreIDs:withCompletionHandler:
handleAutomaticDownloadPreferenceChangedForMediaKindMusic:withCompletionHandler:
isAutomaticDownloadsEnabledForMediaKindMusic
hasSetPreferenceForAutomaticDownloads
isCellularDataRestricted
shouldProhibitActionsForCurrentNetworkConditions
isActive
setActive:
_setupNotifications
_tearDownNotifications
_serverDidLaunch
_serverSagaUpdateInProgressDidChange
_serverJaliscoUpdateInProgressDidChange
_isAuthenticated
updateSagaInProgressChangedHandler
setUpdateSagaInProgressChangedHandler:
updateJaliscoInProgressChangedHandler
setUpdateJaliscoInProgressChangedHandler:
serialAccessQueue
preferredVideoQuality
availabilityService
cloudService
remoteObjectProxy
synchronousRemoteObjectProxyWithErrorHandler:
valueForDatabaseProperty:
sharedLibrary
setValue:forDatabaseProperty:
deleteDatabaseProperty:
dateWithTimeIntervalSinceReferenceDate:
T@?,R,C,N,V_startHandler
T@?,C,N
_cancellationHandler
_startHandler
initWithStartHandler:
cancellationHandler
setCancellationHandler:
startHandler
_numberOfActiveRequests
_clientConnection
_clientConnectionInvalidationTimer
performRemoteRequestOperationWithExecutionContext:completionHandler:
_cancelClientConnectionInvalidationTimer
_didEndExecutingRemoteRequestOperation
_invalidateClientConnection
_clientConnectionInvalidationTimerDidExpire
_scheduleInvalidationOfClientConnection
_willBeginExecutingRemoteRequestOperation
T@"ICRemoteRequestOperationController",R
sharedRemoteRequestOperationController
fetchDeveloperTokenForClientInfo:completionHandler:
invalidateCachedDeveloperTokenForClientInfo:completionHandler:
T@"NSDate",C,N,V_assetExpirationDate
T@"NSURL",R,C,N
T@"ICStoreFinanceItemMetadata",R,C,N
T@"ICStoreHLSAssetInfo",R,C,N
T@,R,N
_itemResponseDictionary
_urlBag
_assetExpirationDate
initWithItemResponseDictionary:urlBag:
storeAdamID
artworkURL
cancelDownloadURL
downloadIdentifier
isPurchasedRedownload
purchaseDate
redownloadParameters
suzeLeaseID
fileAssets
hlsAsset
downloadableAsset
downloadableAssetMatchingFlavorType:
assetExpirationDate
setAssetExpirationDate:
T@"NSArray",C,N,V_storeAdamIDs
T@"ICStoreRequestContext",C,N,V_storeRequestContext
T@"NSData",C,N,V_timedMetadataData
Tq,N,V_qualityOfService
_storeAdamIDs
_timedMetadataData
_qualityOfService
performWithResponseHandler:
storeAdamIDs
setStoreAdamIDs:
storeRequestContext
setStoreRequestContext:
timedMetadataData
setTimedMetadataData:
qualityOfService
setQualityOfService:
URLByAppendingPathComponent:isDirectory:
T@"NSArray",R,C,N,V_allowedKinds
T@"NSArray",R,C,N,V_allowedMatchStatus
T@"NSURL",R,C,N,V_restoreURL
TB,R,N,V_shouldGZip
_shouldGZip
_allowedKinds
_allowedMatchStatus
_restoreURL
initWithServerConfiguration:
allowedKinds
allowedMatchStatus
restoreURL
shouldGZip
arrayWithObjects:
capabilitiesDidChange:
storefrontCountryCodeDidChange:
storefrontIdentifierDidChange:
beginObservingCloudServiceStatusWithCompletionHandler:
endObservingCloudServiceStatusWithToken:completionHandler:
requestCapabilitiesWithPrivacyPromptPolicy:completionHandler:
requestStorefrontCountryCodeWithCompletionHandler:
requestStorefrontIdentifierWithCompletionHandler:
requestUserTokenForDeveloperToken:clientInfo:completionHandler:
clientInterface
serviceInterface
T@"NSString",R,C,N,V_token
Tq,R,N,V_generatedAtMillis
Tq,R,N,V_timeToLiveMillis
Tq,R,N,V_lifespanMillis
T@"ICLibraryAuthServiceClientTokenIdentifier",R,C,N,V_tokenIdentitifer
_token
_generatedAtMillis
_timeToLiveMillis
_lifespanMillis
_tokenIdentitifer
token
generatedAtMillis
timeToLiveMillis
lifespanMillis
tokenIdentitifer
encodeInt64:forKey:
T@"NSNumber",R,C,N,V_DSID
T@"NSString",R,C,N,V_deviceGUID
_DSID
_deviceGUID
DSID
deviceGUID
decodeInt64ForKey:
dateWithTimeIntervalSince1970:
isNSNumber__
Ti,R,N,V_resultCode
T@"NSString",R,C,N,V_serverHostName
Tq,R,N,V_serverInstance
success
TB,N,GisSuccess,V_success
T@"ICLibraryAuthServiceClientTokenResult",R,C,N,V_tokenResult
_success
_resultCode
_serverHostName
_serverInstance
_tokenResult
initWithResultCode:
resultCode
serverHostName
serverInstance
isSuccess
setSuccess:
tokenResult
TQ,R,N,V_creationTime
TB,R,N,V_allowsDelegation
TB,R,N,V_allowsAccountEstablishment
_deviceIdentifier
_isEncodingUsingSpecificIdentityStore
_allowsDelegation
_allowsAccountEstablishment
_creationTime
deviceIdentifier
identityAllowingDelegation:
identityAllowingEstablishment:
_setResolvedDSID:
isEqualToIdentity:inStore:
hashInStore:
_ensureResolvedDSIDUsingSpecificIdentityStore:
_performEncodingTaskUsingSpecificIdentityStore:encodingHandler:
_isComparableUsingResolvedDSID
_resolvedDSIDUsingSpecificIdentityStore:
allowsDelegation
allowsAccountEstablishment
creationTime
activeAccount
activeLockerAccount
autoupdatingActiveAccount
autoupdatingActiveLockerAccount
carrierBundleWithDeviceIdentifier:
nullIdentity
specificAccountWithDSID:
ic_encodeUserIdentity:withStore:forKey:
archivedDataWithRootObject:requiringSecureCoding:error:
ic_archivedDataWithRootUserIdentity:inStore:requiringSecureCoding:error:
Tq,R,N,V_bitRate
Tq,R,N,V_bitDepth
T@"NSString",R,N,V_channelLayoutDescription
TI,R,N,V_codec
T@"NSString",R,N,V_codecString
Tq,R,N,V_sampleRate
_codecString
_copyWithClass:zone:
codecString
T@"NSString",D,N
TI,D,N
decodeInt32ForKey:
decodeObjectForKey:
encodeInt32:forKey:
appendFormat:
initWithStoreRequestContext:
setCachePolicy:
_cache
_pendingOperationsForCacheKey
getBagForRequestContext:withCompletionHandler:
getBagForRequestContext:forceRefetch:withCompletionHandler:
invalidateCache
_getCacheKeyForRequestContext:completionHandler:
_fetchBagForRequestContext:withCompletionHandler:
_loadCache
_saveCache
_cacheFilePath
writeToFile:atomically:
stringByDeletingLastPathComponent
initWithContentsOfFile:
_calculatedExpiration
componentsSeparatedByString:
T@"ICURLBagProvider",R
sharedBagProvider
finalResponse
TB,N,GisFinalResponse,V_finalResponse
TB,N,V_needsReload
T@"ICMusicSubscriptionStatus",C,N,V_subscriptionStatus
_finalResponse
_needsReload
_subscriptionStatus
initWithPropertyListRepresentation:
initWithResponseDictionary:expirationDate:
subscriptionStatus
setSubscriptionStatus:
isFinalResponse
setFinalResponse:
needsReload
setNeedsReload:
isValidSubscriptionStatusPropertyListRepresentation:error:
isValidSubscriptionStatusResponseDictionary:error:
_accountDSIDs
initWithStoreRequestContext:accountDSIDs:
dataWithJSONObject:options:error:
arrayWithCapacity:
T@"NSString",C,N,V_assetSourceStorefrontID
Tq,R,N,V_storeSubscriptionAdamID
_assetSourceStorefrontID
_storeSubscriptionAdamID
initWithRequestContext:storeSubscriptionAdamID:
assetSourceStorefrontID
setAssetSourceStorefrontID:
requestContext
storeSubscriptionAdamID
setCompletedUnitCount:
setCancellable:
progressWithTotalUnitCount:
getResponseForFinishDelegationRequest:withSessionIDToRequestInfoMap:completionHandler:
getResponseForStartDelegationRequest:requestContext:withCompletionHandler:
T@"NSString",R,C,N,V_bagKey
TQ,R,N,V_bagValueType
_bagKey
_bagValueType
initWithBagKey:bagValueType:
bagKey
bagValueType
delegatedPlayback
TB,N,GisDelegatedPlayback,V_delegatedPlayback
Tq,N,V_requestType
T@?,C,N,V_willBeginExecutionHandler
T@"ICStoreRequestContext",C,N,V_requestContext
TQ,N,V_storeCloudID
Tq,N,V_storeSubscriptionAdamID
Tq,N,V_storePurchasedAdamID
T@"NSString",C,N,V_cloudUniversalLibraryID
followUp
TB,N,GisFollowUp,V_followUp
_delegatedPlayback
_followUp
_willBeginExecutionHandler
_storeCloudID
_storePurchasedAdamID
_cloudUniversalLibraryID
start
isDelegatedPlayback
setDelegatedPlayback:
requestType
setRequestType:
willBeginExecutionHandler
setWillBeginExecutionHandler:
setRequestContext:
storeCloudID
setStoreCloudID:
setStoreSubscriptionAdamID:
storePurchasedAdamID
setStorePurchasedAdamID:
cloudUniversalLibraryID
setCloudUniversalLibraryID:
isFollowUp
setFollowUp:
fileAssetWithFlavorType:
Td,R,N
previewDuration
previewURL
size
TB,N,V_shouldSignBody
T@"NSArray",C,N,V_fields
T@"NSArray",C,N,V_headers
_shouldSignBody
_fields
_headers
shouldSignBody
setShouldSignBody:
fields
setFields:
headers
setHeaders:
T@"NSData",&,N,V_token
TQ,N,V_sessionID
Td,N,V_expirationTimeInterval
T@"NSString",&,N,V_storefrontIdentifier
_expirationTimeInterval
_sessionID
_storefrontIdentifier
hasToken
setSessionID:
setHasSessionID:
hasSessionID
setExpirationTimeInterval:
setHasExpirationTimeInterval:
hasExpirationTimeInterval
hasStorefrontIdentifier
setToken:
sessionID
expirationTimeInterval
storefrontIdentifier
setStorefrontIdentifier:
_connectionPool
_isOpen
_options
_xpcWriter
connectionNeedsResetForCorruption:
_initWithValidatedOptions:
initSingleWriterWithOptions:error:
close
readUsingBlock:
_openWithXPCWriter:completionHandler:
_popConnection
_postDidChangeNotification
_recycleConnection:
_resetCorruptionUsingSQL
_resetCorruptionUsingXPC
_writeSQLUsingBlock:
_writeUsingBlock:
_writeXPCUsingBlock:
timeIntervalSinceDate:
domain
openWithOptions:completionHandler:
TQ,R,N
storageSpaceAvailable
cachingEnabled
ensureStorageIsAvailable:withCompletionHandler:
attributesOfFileSystemForPath:error:
T@"ICUserIdentityProperties",C,N,V_identityProperties
T@"ICUserIdentityProperties",C,N,V_iCloudIdentityProperties
_identityProperties
_iCloudIdentityProperties
identityProperties
setIdentityProperties:
iCloudIdentityProperties
setICloudIdentityProperties:
T@"NSError",R,C,N,V_error
_asyncOperationLock
_childOperationQueue
_qualityOfServiceForChildOperationQueue
_isExecuting
_isFinished
isAsynchronous
isConcurrent
isExecuting
isFinished
finish
enqueueChildOperation:
_execute
maxConcurrentOperationCount
didChangeValueForKey:
willChangeValueForKey:
currentThread
leaseSyncSessionWithID:accountID:mediaKind:returningLeaseSyncRequestData:error:
TQ,R,N,V_accountID
T@,R,N,V_leaseID
TI,R,N,V_mediaKind
_mediaKind
_accountID
_leaseID
endLeaseSyncAndReturnError:
getLeaseSyncRenewRequestData:error:
importLeaseSyncResponseData:error:
processRenewResponseData:error:
accountID
leaseID
mediaKind
initWithRequestContext:
performWithCompletion:
T@"NSUUID",R,C,N
mediaSyncingSupported
TB,R,N,GisMediaSyncingSupported
_queue
_callBackQueue
_observers
_pairingIDPropertyName
_pairedDeviceGUID
_pairedDeviceMediaGUID
_initialSyncStateObserver
initialSyncStateObserver:initialSyncDidCompleteForPairingIdentifier:
initialSyncStateObserver:syncDidResetForPairingIdentifier:
initialSyncStateObserver:syncDidCompleteForPairingIdentifier:
initialSyncStateObserverClientCanRetryFailedRequests:
addObserver:
removeObserver:
activePairedDevicePairingID
pairedDevicePairingID
allPairedDevicePairingIDs
pairedDeviceGUID
pairedDeviceMediaGUID
isInitialSyncComplete
isMediaSyncingSupported
_allObservers
_activePairedDevice
_handlePairedDeviceChangedNotification
deviceBecameActive:
getAllDevicesWithArchivedAltAccountDevicesMatching:
activeDeviceSelectorBlock
sharedInstance
requestInitialSyncStateForPairingIdentifier:completion:
supportsCapability:
initWithUUIDString:
valueForProperty:
getPairedDevices
pairingID
initWithDelegate:
mapTableWithKeyOptions:valueOptions:
T@"ICNanoPairedDeviceStatusMonitor",R
sharedMonitor
_parsedTokenResults
tokenResults
tokenResultForAccountDSID:
T@"ICRequestContext",R,C,N,V_requestContext
_activeServiceSessions
_connections
_connectionToAssertions
_assertions
_assertionTimeoutSource
_discoveredServices
_isNetServiceBrowserSearching
_listener
_netServiceBrowser
_netServiceBrowserQueue
_identityStoreOperationQueue
_supportedDelegationAccountUUIDToUserIdentity
netServiceBrowserWillSearch:
netServiceBrowserDidStopSearch:
netServiceBrowser:didNotSearch:
netServiceBrowser:didFindDomain:moreComing:
netServiceBrowser:didFindService:moreComing:
netServiceBrowser:didRemoveDomain:moreComing:
netServiceBrowser:didRemoveService:moreComing:
delegationProviderServiceSession:didFinishWithError:
delegationProviderServiceAddAssertion:
delegationProviderServiceRemoveAssertion:
addAssertion:
removeAssertion:
startSystemXPCService
_netServiceDelegationAccountUUIDsDidChangeNotification:
_userIdentityStoreDidChangeNotification:
_registerNotificationsForDelegationNetService:
_unregisterNotificationsForDelegationNetService:
_updateAssertionTimeouts
_updateBrowsingStatus
_updateDelegationForDiscoveredServices
_updateSupportedDelegationAccountUUIDs
removeObjectsInArray:
strongToStrongObjectsMapTable
allKeys
searchForServicesOfType:inDomain:
setIncludesPeerToPeer:
minusSet:
earlierDate:
currentConnection
T@"ICDelegationProviderService",R
sharedService
systemServiceWithRequestContext:
T@"<ICUserIdentityStoreBackendDelegate>",W,N,V_delegate
_accountStore
_accountToIdentityProperties
_allStoreAccounts
_dsidToAccount
_primaryICloudAccountIdentityPropertiesValue
_storeAccountType
T@"<ICUserIdentityStoreBackendDelegate>",W,N
activeAccountDSIDWithError:
updateActiveAccountDSID:error:
activeLockerAccountDSIDWithError:
updateActiveLockerAccountDSID:error:
identityPropertiesForDSID:error:
identityPropertiesForPrimaryICloudAccountWithError:
removeIdentityForDSID:completion:
replaceIdentityProperties:forDSID:error:
setIdentityProperties:forDSID:error:
localStoreAccountPropertiesWithError:
setLocalStoreAccountProperties:error:
synchronize
verificationContextForDSID:error:
verificationContextForAccountEstablishmentWithError:
initWithACAccountStore:
_handleITunesStoreAccountsChanged
_accountStoreDidChangeNotification:
_applyIdentityProperties:toAccount:
_applyLocalStoreAccountProperties:toAccount:
_allStoreAccountsWithError:
_activeStoreAccountWithError:
_newLocalStoreAccountPropertiesFromAccount:
_newUserIdentityPropertiesForAccount:
_primaryICloudAccountIdentityProperties
_storeAccountForDSID:error:
_storeAccountForDSID:bypassCache:error:
_storeAccountTypeWithError:
_synchronize
null
aa_personID
aa_primaryAppleAccount
initWithKeyOptions:valueOptions:capacity:
saveVerifiedAccount:error:
initWithAccountType:
setAccountType:
removeAccount:withCompletionHandler:
alternateDSID
T@"NSString",C,D,N
carrierBundleDeviceIdentifier
delegated
TB,D,N,GisDelegated
delegateToken
T@"ICDelegateToken",C,D,N
T@"NSNumber",C,D,N
firstName
lastName
managedAppleID
TB,D,N,GisManagedAppleID
sandboxed
TB,D,N,GisSandboxed
subscriptionStatusEnabled
TB,D,N,GisSubscriptionStatusEnabled
username
ageVerificationExpirationDate
T@"NSDate",C,D,N
mergeToCloudLibraryPreference
cloudLibraryStateReason
T@"NSDictionary",C,D,N
privateListeningEnabled
replaceValuesWithValuesFromProperties:
setAlternateDSID:
setCarrierBundleDeviceIdentifier:
setDelegated:
setDelegateToken:
setDSID:
setFirstName:
setLastName:
setManagedAppleID:
setSandboxed:
setSubscriptionStatusEnabled:
setUsername:
setAgeVerificationExpirationDate:
setMergeToCloudLibraryPreference:
setHomeUserIdentifiers:
setCloudLibraryStateReason:
setPrivateListeningEnabled:
setPrivateListeningEnabledForHomeUsers:
setCloudBackupEnabled:
setICloudPersonID:
cloudBackupEnabled
TB,N,GisCloudBackupEnabled,V_cloudBackupEnabled
T@"NSString",C,N,SsetICloudPersonID:,V_iCloudPersonID
T@"NSArray",C,N,V_homeUserIdentifiers
T@"NSDictionary",C,N,V_privateListeningEnabledForHomeUsers
T@"NSNumber",R,C,N,V_dsid
TB,R,N,GisManagedAppleID,V_managedAppleID
TB,R,N,GisSandboxed,V_sandboxed
TB,R,N,GisSubscriptionStatusEnabled,V_subscriptionStatusEnabled
T@"NSNumber",R,C,N,V_privateListeningEnabled
activeLocker
TB,R,N,GisActiveLocker,V_activeLocker
TB,R,N,GisActive,V_active
TB,R,N,GisDelegated,V_delegated
T@"ICDelegateToken",R,C,N,V_delegateToken
_alternateDSID
_carrierBundleDeviceIdentifier
_cloudBackupEnabled
_delegated
_delegateToken
_dsid
_firstName
_iCloudPersonID
_lastName
_managedAppleID
_sandboxed
_subscriptionStatusEnabled
_username
_ageVerificationExpirationDate
_mergeToCloudLibraryPreference
_homeUserIdentifiers
_cloudLibraryStateReason
_privateListeningEnabled
_activeLocker
_privateListeningEnabledForHomeUsers
iCloudPersonID
homeUserIdentifiers
privateListeningEnabledForHomeUsers
isActiveLocker
isManagedAppleID
isSandboxed
isSubscriptionStatusEnabled
isCloudBackupEnabled
isDelegated
isSubclassOfClass:
setActiveLocker:
TB,D,N,GisActiveLocker
TB,D,N,GisActive
Tq,N,V_dSID
T@"NSString",&,N,V_deviceID
_dSID
_deviceID
setHasDSID:
hasDSID
hasDeviceID
dSID
deviceID
setDeviceID:
_loggedEvents
_flushTimer
_currentArchiveFileName
_dateFormatter
_creatorDictionary
_archiveDirectoryPath
_archiveFilePaths
_hasValidArchiveDirectory
archiveRequest:withResponse:responseData:
flush
_onQueueFlush
_archiveCreator
_archiveForRequest:
_archiveForResponse:responseData:
_arrayFromHeaderDictionary:
_loadExistingArchivePaths
_pruneOldArchives
removeLastObject
lastObject
sortUsingComparator:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
fileURLWithPath:isDirectory:
base64EncodedStringWithOptions:
initWithData:encoding:
MIMEType
allHeaderFields
localizedStringForStatusCode:
allHTTPHeaderFields
HTTPMethod
insertObject:atIndex:
stringFromDate:
fileExistsAtPath:isDirectory:
T@"ICHTTPArchive",R
sharedArchive
T@"<ICDeveloperTokenProvider>",R,N,V_developerTokenProvider
Tq,R,N,V_personalizationMethod
_developerTokenProvider
_personalizationMethod
_cachedDescription
_description
setDeveloperTokenProvider:
setPersonalizationMethod:
_storeRequestPersonalizationStyle
developerTokenProvider
personalizationMethod
bundleForClass:
T@"ICUserIdentity",C,N,V_userIdentity
T@"ICUserIdentityStore",R,N,V_userIdentityStore
T@"NSURL",C,N,V_baseURL
T@"NSString",C,N,V_libraryBagKey
T@"NSString",C,N,V_buildIdentifier
T@"NSString",C,N,V_purchaseClientIdentifier
Tq,N,V_requestReason
T@"NSNumber",C,N,V_familyMemberStoreID
_userIdentity
_userIdentityStore
_baseURL
_libraryBagKey
_buildIdentifier
_purchaseClientIdentifier
_requestReason
_familyMemberStoreID
initWithUserIdentity:userIdentityStore:
userIdentity
setUserIdentity:
userIdentityStore
baseURL
setBaseURL:
libraryBagKey
setLibraryBagKey:
buildIdentifier
setBuildIdentifier:
purchaseClientIdentifier
setPurchaseClientIdentifier:
requestReason
setRequestReason:
familyMemberStoreID
setFamilyMemberStoreID:
configurationFromSourceConfiguration:userIdentity:
_seedItemID
_isLibraryID
_maxResultCount
_resultsList
initWithRequestContext:seedItemID:isLibraryID:maxResultCount:
contextWithACAccount:accountStore:
setVerificationStyle:
setACAccountStore:
setACAccount:
T@"ACAccount",&,N,V_ACAccount
T@"ACAccountStore",&,N,V_ACAccountStore
T@"ICUserIdentityStore",&,N,V_identityStore
Tq,N,V_verificationStyle
Tq,N,V_interactionLevel
T@"NSString",C,N,V_debugReason
_interactionLevel
_debugReason
_ACAccount
_ACAccountStore
_verificationStyle
interactionLevel
setInteractionLevel:
debugReason
setDebugReason:
ACAccount
ACAccountStore
verificationStyle
TB,N,V_hasOnlinePlaybackKeys
TB,N,V_hasOfflinePlaybackKeys
TB,N,V_hasPendingLeaseAcquisition
takenDueToLeasePrevention
TB,N,GisTakenDueToLeasePrevention,V_takenDueToLeasePrevention
TB,N,V_shouldPlaybackRequireOnlineKeys
Tq,N,V_leaseState
T@"ICStoreDialogResponse",C,N,V_stateReasonDialog
T@"NSDictionary",C,N,V_stateReasonDialogMetricsDictionary
_shouldPlaybackRequireOnlineKeys
_hasOnlinePlaybackKeys
_hasOfflinePlaybackKeys
_hasPendingLeaseAcquisition
_takenDueToLeasePrevention
_leaseState
_stateReasonDialog
_stateReasonDialogMetricsDictionary
shouldPlaybackRequireOnlineKeys
setShouldPlaybackRequireOnlineKeys:
hasOnlinePlaybackKeys
setHasOnlinePlaybackKeys:
hasOfflinePlaybackKeys
setHasOfflinePlaybackKeys:
hasPendingLeaseAcquisition
setHasPendingLeaseAcquisition:
isTakenDueToLeasePrevention
setTakenDueToLeasePrevention:
leaseState
setLeaseState:
stateReasonDialog
setStateReasonDialog:
stateReasonDialogMetricsDictionary
setStateReasonDialogMetricsDictionary:
isEqualToDictionary:
initWithRequestContext:token:
dataUsingEncoding:allowLossyConversion:
_storeItemID
_affiliateIdentifier
initWithRequestContext:storeItemID:affiliateIdentifier:
stringWithCapacity:
T@"ICLibraryAuthServiceClientTokenResult",C,N,V_tokenResult
T@"NSError",C,N,V_lastError
Td,N,V_lastUpdateAttemptTime
TB,N,V_shouldExcludeFromBackgroundRefresh
_shouldExcludeFromBackgroundRefresh
_lastError
_lastUpdateAttemptTime
setTokenResult:
lastError
setLastError:
lastUpdateAttemptTime
setLastUpdateAttemptTime:
shouldExcludeFromBackgroundRefresh
setShouldExcludeFromBackgroundRefresh:
encodeDouble:forKey:
decodeDoubleForKey:
T@"NSString",C,N,V_clientIdentifier
T@"NSString",C,N,V_clientBundleIdentifier
T@"NSString",C,N,V_clientBundleVersion
T@"NSArray",C,N,V_itemIdentifiers
Tq,N,V_batchSize
T@?,C,N,V_batchResultsHandler
T@"NSString",C,N,V_imageProfile
T@"NSString",C,N,V_keyProfile
Tq,N,V_personalizationStyle
T@"NSString",C,N,V_platformIdentifier
T@"NSString",C,N,V_protocolVersion
Td,N,V_retryDelay
TB,N,V_returnsLocalEquivalencies
Td,N,V_timeoutInterval
TB,N,V_shouldIgnoreCache
_returnsLocalEquivalencies
_shouldIgnoreCache
_clientIdentifier
_clientBundleIdentifier
_clientBundleVersion
_itemIdentifiers
_batchSize
_batchResultsHandler
_imageProfile
_keyProfile
_platformIdentifier
_protocolVersion
_retryDelay
_timeoutInterval
imageProfile
itemIdentifiers
keyProfile
platformIdentifier
protocolVersion
setBatchSize:
copyWithItemIdentifiersInRange:
HTTPHeaders
queryItems
setClientIdentifier:
clientBundleIdentifier
setClientBundleIdentifier:
clientBundleVersion
setClientBundleVersion:
setItemIdentifiers:
batchSize
batchResultsHandler
setBatchResultsHandler:
setImageProfile:
setKeyProfile:
setPlatformIdentifier:
setProtocolVersion:
retryDelay
setRetryDelay:
returnsLocalEquivalencies
setReturnsLocalEquivalencies:
timeoutInterval
setTimeoutInterval:
shouldIgnoreCache
setShouldIgnoreCache:
initWithLocaleIdentifier:
subarrayWithRange:
completedUnitCount
cancelAllOperations
mainBundle
Tq,N,V_alertLevel
_userNotificationDictionary
_alertLevel
initWithStoreDialog:
allowInCar
alternateButtonTitle
createCFUserNotification
defaultButtonTitle
displaysActionButtonOnLockScreen
displaysAsTopMost
forcesModalAppearance
message
otherButtonTitle
setAllowInCar:
setAlternateButtonTitle:
setDefaultButtonTitle:
setDisplaysActionButtonOnLockScreen:
setDisplaysAsTopMost:
setForcesModalAppearance:
setMessage:
setOtherButtonTitle:
setTitle:
title
_setBoolValue:forKey:
alertLevel
setAlertLevel:
initWithMetadataDictionary:expirationDate:
artistStoreAdamID
collectionName
collectionStoreAdamID
copyrightText
explicitRating
genreNames
hasLyrics
hasTimeSyncedLyrics
movementCount
movementName
movementNumber
name
playlistGlobalID
offers
offerWithType:
radioStationStringID
shouldShowComposer
formerStoreAdamIDs
workName
artworkInfos
audioTraits
_storePlatformReleaseDateFormatter
T@"NSCalendar",R
storeServerCalendar
calendarWithIdentifier:
T@"ICMusicSubscriptionStatusRequest",R,C,N,V_request
TB,N,V_allowsFuseHeaderEnrichment
_allowsFuseHeaderEnrichment
initWithRequest:
_performSubscriptionStatusURLRequestWithRequestContext:subscriptionStatusURL:allowsAuthentication:completion:
_cacheAccountEligibilityWithStatus:requestContext:
_carrierBundleStatusIsValidForCachedSubscriptionStatus:
request
allowsFuseHeaderEnrichment
setAllowsFuseHeaderEnrichment:
substringWithRange:
hasSuffix:
TQ,R,N,V_maxConcurrentRequests
_oversizeLoggingQueue
_pendingRequestsProcessingCounter
_pendingRequests
_activeRequests
_completionHandlers
_paused
_requestTimeoutTimer
_maxConcurrentRequests
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:
URLSession:downloadTask:didFinishDownloadingToURL:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
initWithConfiguration:maxConcurrentRequests:
initWithConfiguration:maxConcurrentRequests:qualityOfService:
enqueueDataRequest:withCompletionHandler:
enqueueUploadRequest:withCompletionHandler:
enqueueDownloadRequest:withCompletionHandler:
enqueueDownloadRequest:toDestination:withCompletionHandler:
cancelRequest:
cancelRequest:withError:
pause
resume
URLSession:avAssetDownloadTask:didReceiveAVAssetDownloadToken:
URLSession:avAssetDownloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
_enqueueRequest:
_processPendingRequests
_processRequest:
_finishRequest:
_requestForTask:
_createURLSessionWithConfiguration:
_createURLSessionTaskForRequest:usingSession:
_newResponseForRequest:
_checkRequestTimeouts
_scheduleNextRequestTimeoutCheck
_timeoutForRequest:
_updateProgressForSessionTask:withTotalBytesWritten:totalBytesExpectedToWrite:
maxConcurrentRequests
setTotalUnitCount:
totalUnitCount
timeoutIntervalForRequest
downloadTaskWithResumeData:
uploadTaskWithRequest:fromData:
downloadTaskWithRequest:
dataTaskWithRequest:
sessionWithConfiguration:delegate:delegateQueue:
taskIdentifier
allowsCellularAccess
transactionMetrics
linkItemAtURL:toURL:error:
appendData:
_ignoreDidReceiveResponseDisposition
expectedContentLength
credentialForTrust:
serverTrust
performDefaultHandlingForAuthenticationChallenge:
sender
authenticationMethod
protectionSpace
countOfBytesReceived
countOfBytesSent
state
setTimeoutIntervalForRequest:
ephemeralSessionConfiguration
defaultMaximumConcurrentRequests
_storeURLRequest
_requestParameters
initWithRequestContext:parameters:
performRestoreRequestWithCompletionHandler:
_serializedBodyDataWithAccountID:
setValue:forKey:
dictionaryWithObjectsAndKeys:
T@"ICIAMApplicationMessage",R,N,V_applicationMessage
T@"NSString",R,N,V_bundleIdentifier
T@"NSDictionary",R,N
TB,N,V_shouldDownloadResources
TB,N,V_didCacheRequiredResources
_bundleIdentifier
_resourceCache
_shouldDownloadResources
_didCacheRequiredResources
_applicationMessage
initWithApplicationMessage:bundleIdentifier:
updateMetadataValue:forKey:
cachedLocationForResourceWithIdentifier:
setCacheLocation:forResourceWithIdentifier:
clearCachedResources
allCachedResourceLocations
applicationMessage
bundleIdentifier
shouldDownloadResources
setShouldDownloadResources:
didCacheRequiredResources
setDidCacheRequiredResources:
Ti,N,V_commandType
T@"ICIAMApplicationMessage",&,N,V_applicationMessage
Tq,N,V_commandSerialNumber
_commandSerialNumber
_commandType
commandType
setCommandType:
setHasCommandType:
hasCommandType
commandTypeAsString:
StringAsCommandType:
hasApplicationMessage
setCommandSerialNumber:
setHasCommandSerialNumber:
hasCommandSerialNumber
setApplicationMessage:
commandSerialNumber
T@"ICStoreRequestContext",R,N,V_requestContext
T@"NSDate",R,N
processInfo
T@"AMSProcessInfo",R,C,N
_pendingBagValuePromises
_urlBagLoadingError
URLForKey:account:
arrayForKey:
boolForKey:
createSnapshotWithCompletion:
doubleForKey:
integerForKey:
stringForKey:
URLForKey:
dictionaryForKey:
profile
profileVersion
_bagValueForKey:valueType:
_didFinishLoadingBag:error:
finishWithResult:
_valueForBagKey:valueType:fromURLBag:urlBagLoadingError:valueRetrievingError:
bagValueWithKey:valueType:valuePromise:
frozenBagValueWithKey:value:valueType:
failingBagValueWithKey:valueType:error:
buildWithError:
setProfileVersion:
setProfile:
_valueFromBagDictionary:forKeyPath:valueType:
_value:matchesExpectedType:
TQ,R,N,V_fairPlaySessionID
_fairPlaySessionID
initWithAccountID:fairPlaySessionID:
fairPlaySessionID
ic_cloudClientErrorWithCode:userInfo:
ic_cloudClientLibraryUploadErrorWithCode:userInfo:
T@"NSXPCListenerEndpoint",R,N
_ignoresEntitlements
_testingIdentityStore
_initWithXPCListener:testingIdentityStore:
invalidate
suspend
_userIdentityStoreDelegateAccountStoreDidChangeNotification:
endpoint
machServiceListener
testingListenerWithIdentityStore:
anonymousListener
initReturningError:
exchangeWithSAPVersion:data:returningData:exchangeStatus:error:
processResponseWithSignatureData:data:error:
signData:returningSignatureData:error:
keyForObject:
T@"NSMutableArray",&,N,V_applicationMessageSyncResponses
_applicationMessageSyncResponses
clearApplicationMessageSyncResponses
addApplicationMessageSyncResponses:
applicationMessageSyncResponsesCount
applicationMessageSyncResponsesAtIndex:
applicationMessageSyncResponses
setApplicationMessageSyncResponses:
applicationMessageSyncResponsesType
Tq,R,N,V_vodkaType
T(FPContentInfo_=I{VanillaVodkaAttributes_=I^{sinfEntry_}I}{CloudVodkaAttributes_=IIQ}),R,N
_vodkaType
fpContentInfo
vodkaType
whaContentInfoWithAccountID:
T@"NSURL",R,C,N,V_containerURL
_containerURL
_identityResolutionQueue
initWithContainerDirectoryURL:
initWithContainerDirectoryURL:identityStore:
initWithIdentityStore:
flushWithCompletionHandler:
getHistoryForStationWithIdentifier:userIdentity:completionHandler:
removeHistoryForStationWithIdentifier:userIdentity:completionHandler:
updateHistoryForStationWithIdentifier:userIdentity:usingBlock:
updateHistoryForStationWithIdentifier:userIdentity:usingBlock:completionHandler:
_fileURLForStationWithIdentifier:identityKey:
_getCacheKeyForUserIdentity:completionHandler:
_playbackHistoryOfClass:forStationWithIdentifier:identityKey:error:
containerDirectoryURL
unarchivedObjectOfClass:fromData:error:
initWithContentsOfURL:options:error:
writeToURL:options:error:
_defaultContainerURL
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
TQ,R,N,V_writingStyle
_debugLogOperationQueue
_endpointIdentifierToEndpointRevisionInformation
_endpointRevisionInformationDidChangeNotifyToken
_hasAttemptedTableCreation
_hasLoadedEndpointRevisionInformation
_hasSetupEndpointRevisionInformationDidChangeNotifyToken
_hasValidEndpointRevisionInformationDidChangeNotifyToken
_pendingFlushingSessions
_table
_daemonPlayActivityControllerConnection
_writingStyle
initWithWritingStyle:
initWithWritingStyle:databasePath:
acquirePendingPlayActivityEventsForEndpointIdentifier:withStoreAccountID:completionHandler:
acquirePendingPlayActivityEventsForEndpointIdentifier:withCompletionHandler:
completePendingPlayActivityEvents:forSessionToken:withResult:completionHandler:
completePendingPlayActivityEventPersistentIDs:forSessionToken:withResult:completionHandler:
flushPendingPlayActivityEventsForEndpointIdentifier:withCompletionHandler:
getHasPendingPlayEventsForEndpointIdentifier:withCompletionHandler:
getRevisionInformationWithCompletionHandler:
getPlayActivityEventsFromRevision:toRevision:withCompletionHandler:
recordPlayActivityEvents:withCompletionHandler:
removeFlushedPlayActivityEventsWithCompletionHandler:
removePlayActivityEventsUpToRevision:withCompletionHandler:
setCurrentRevision:revisionVersionToken:forEndpointIdentifier:withCompletionHandler:
_acquirePendingPlayActivityEventsForEndpointIdentifier:withStoreAccountID:shouldFilterStoreAccountID:completionHandler:
_completePendingPlayEventsWithRevisionIndexSet:forSessionToken:withResult:completionHandler:
_copyEndpointRevisionInformationForEndpointIdentifier:
_getFlushSessionInformationForEndpointIdentifier:shouldAcquire:storeAccountID:shouldFilterStoreAccountID:withCompletionHandler:
_loadEndpointIdentifierInformationIfNeeded
_revisionsIndexSetForPlayActivityEvents:
_revisionsIndexSetForPlayActivityEventPersistentIDs:
_sessionInformationForSessionToken:
_setEndpointRevisionInformation:forEndpointIdentifier:
_setupNotifyTokenIfNeeded
writingStyle
sessionToken
T@"NSIndexSet",C,N,V_additionalPendingRevisionsIndexSet
TQ,N,V_currentRevision
T@"NSString",C,N,V_revisionVersionToken
_additionalPendingRevisionsIndexSet
_currentRevision
_revisionVersionToken
additionalPendingRevisionsIndexSet
setAdditionalPendingRevisionsIndexSet:
currentRevision
setCurrentRevision:
revisionVersionToken
setRevisionVersionToken:
isEqualToIndexSet:
setSessionToken:
setEndpointIdentifier:
setRevisionsIndexSet:
T@"NSString",C,N,V_endpointIdentifier
T@"NSIndexSet",&,N,V_revisionsIndexSet
TQ,N,V_sessionToken
_endpointIdentifier
_revisionsIndexSet
_sessionToken
endpointIdentifier
revisionsIndexSet
lastIndex
addIndexes:
acquirePendingPlayActivityEventsForEndpointIdentifier:storeAccountID:shouldFilterStoreAccountID:withReplyBlock:
completePendingPlayActivityEvents:forSessionToken:result:withReplyBlock:
insertPlayActivityEvents:withReplyBlock:
flushPlayActivityEventsForEndPointIdentifier:withReplyBlock:
setRevision:revisionVersionToken:forEndpointIdentifier:withReplyBlock:
removePlayActivityEventsUptoRevision:withReplyBlock:
removeIndexes:
firstIndex
_requiredEndpointIdentifiers
_notificationType
initWithRequestContext:notificationType:
componentsWithURL:resolvingAgainstBaseURL:
setQuery:
ic_URLByAppendingQueryItems:
ic_URLByAppendingQueryParameters:
ic_queryParametersDictionary
ic_queryParametersDictionaryFromString:
fileSystemRepresentation
setQueryItems:
Tq,N,V_type
T@"NSArray",C,N,V_supportedSizes
TB,N,V_hasMaxSupportedSize
T{CGSize=dd},N,V_maxSupportedSize
_hasMaxSupportedSize
_supportedSizes
_maxSupportedSize
setType:
supportedSizes
setSupportedSizes:
hasMaxSupportedSize
setHasMaxSupportedSize:
maxSupportedSize
setMaxSupportedSize:
T@"NSArray",C,N,V_sortedResponseArray
T@"NSArray",C,N,V_sortedSupportedSizesArray
T@"NSURL",R,C,N,V_artworkURL
T@"NSArray",R,C,N,V_responseArray
T@"NSDictionary",R,C,N,V_responseDictionary
T@"ICStoreArtworkSizeInfo",R,N,V_sizeInfo
T{CGSize=dd},R,N
_sizeInfo
_artworkURL
_sortedResponseArray
_sortedSupportedSizesArray
_responseArray
initWithArtworkResponseArray:
initWithArtworkResponseDictionary:
initWithArtworkURL:
initWithArtworkResponseValue:
sizeInfo
artworkURLWithSize:cropStyle:format:
artworkURLWithSize:cropStyle:format:preferP3ColorSpace:
copyColorWithKind:
originalSize
stringRepresentation
_sortResponseArray
_sortSupportedSizesArray
_hasOriginalSize
sortedResponseArray
setSortedResponseArray:
sortedSupportedSizesArray
setSortedSupportedSizesArray:
responseArray
valueWithBytes:objCType:
floatValue
sortedArrayUsingComparator:
insertString:atIndex:
replaceCharactersInRange:withString:
rangeOfString:options:
decodePropertyListForKey:
T@"ICSuzeLeaseSessionConfiguration",R,C,N,V_configuration
T@"<ICSuzeLeaseSessionDelegate>",W,N,V_delegate
_automaticRefreshCount
_isRunning
_leaseExpirationDate
_leaseRenewTimer
_leaseSyncSession
beginAutomaticallyRefreshingLease
endAutomaticallyRefreshingLease
startLeaseSessionWithCompletionHandler:
stopLeaseSessionWithCompletionHandler:
_newSuzeLeaseRequestWithType:clientData:
_renewLeaseTimerAction
_updateRenewalTimer
_updateRenewalTimerWithResponse:
suzeLeaseSession:leaseRenewalDidFailWithError:
addOperationWithBlock:
T@"NSDictionary",C,N,V_redownloadParameters
T@"NSString",C,N,V_requestURLBagKey
TB,N,V_includeKeybagSyncData
TB,N,V_includeSubscriptionKeybagSyncData
playbackRequest
TB,N,GisPlaybackRequest,V_playbackRequest
streamingRental
TB,N,GisStreamingRental,V_streamingRental
TB,N,V_usePrioritizedURLSession
_redownloadResponse
_playbackRequest
_streamingRental
_usePrioritizedURLSession
_includeKeybagSyncData
_includeSubscriptionKeybagSyncData
_redownloadParameters
_requestURLBagKey
initWithRequestContext:redownloadParameters:
initWithRequestContext:redownloadParametersString:
_executeWithActiveICloudAccountProperties:
isPlaybackRequest
setPlaybackRequest:
isStreamingRental
setStreamingRental:
usePrioritizedURLSession
setUsePrioritizedURLSession:
setRedownloadParameters:
requestURLBagKey
setRequestURLBagKey:
includeKeybagSyncData
setIncludeKeybagSyncData:
includeSubscriptionKeybagSyncData
setIncludeSubscriptionKeybagSyncData:
dictionaryWithDictionary:
Tq,R,N,V_identityStoreStyle
Tq,R,N,V_uniqueIdentifier
T@"ICValueHistory",C,N,V_activeAccountHistory
T@"ICValueHistory",C,N,V_activeLockerAccountHistory
T@"<ICUserIdentityStoreBackend>",C,N,V_backend
T@"ICDelegateAccountStoreOptions",C,N,V_delegateAccountStoreOptions
_identityStoreStyle
_uniqueIdentifier
_activeAccountHistory
_activeLockerAccountHistory
_backend
_delegateAccountStoreOptions
_initCommon
initWithIdentityStoreStyle:
lock:
identityStoreStyle
uniqueIdentifier
activeAccountHistory
setActiveAccountHistory:
activeLockerAccountHistory
setActiveLockerAccountHistory:
backend
setBackend:
delegateAccountStoreOptions
setDelegateAccountStoreOptions:
T@"NSString",&,N,V_applicationMessageIdentifier
T@"NSMutableArray",&,N,V_eventParameters
_applicationMessageIdentifier
_eventParameters
hasApplicationMessageIdentifier
clearEventParameters
addEventParameters:
eventParametersCount
eventParametersAtIndex:
applicationMessageIdentifier
setApplicationMessageIdentifier:
eventParameters
setEventParameters:
eventParametersType
T@"NSString",C,N,V_iCloudPersonID
T@"ICURLBag",&,N,V_URLBag
T@"NSNumber",C,N,V_DSID
T@"NSString",C,N,V_storefrontIdentifier
T@"NSNumber",C,N,V_delegatedDSID
T@"NSString",C,N,V_delegatedStorefrontIdentifier
T@"ICDelegateToken",C,N,V_delegateToken
T@"ICURLBag",&,N,V_delegatedURLBag
_URLBag
_delegatedDSID
_delegatedStorefrontIdentifier
_delegatedURLBag
URLBag
setURLBag:
delegatedDSID
setDelegatedDSID:
delegatedStorefrontIdentifier
setDelegatedStorefrontIdentifier:
delegatedURLBag
setDelegatedURLBag:
T@"NSDictionary",R,C,N,V_responseSinfDictionary
_responseSinfDictionary
initWithResponseSinfDictionary:
dpInfoData
pinfData
sinfData
sinf2Data
purchaseBundleSinfDictionary
responseSinfDictionary
ic_isCloudDaemon
_clientInfo
_developerToken
initWithDeveloperToken:clientInfo:options:
performRequestOnOperationQueue:withResponseHandler:
_executeByPerformingStoreRequestWithContext:qualityOfService:
_prefetchKeyIdentifiers
_prefetchedContentKeyStore
_prefetchedContentKeySession
initWithRequestContext:keyStore:
preloadExistingKeys
setForceRefresh:
setRequestOfflineKeys:
waitForAllKeysToProcess
contentKeySession:didProvideContentKeyRequest:
contentKeySession:didProvidePersistableContentKeyRequest:
_createPrefetchKeySessionIfNeeded
_isPrefetchKeyIdentifier:
setWithArray:
T@"NSMutableArray",&,N,V_playerInfoContextRequestTokens
_playerInfoContextRequestTokens
clearPlayerInfoContextRequestTokens
addPlayerInfoContextRequestToken:
playerInfoContextRequestTokensCount
playerInfoContextRequestTokenAtIndex:
playerInfoContextRequestTokens
setPlayerInfoContextRequestTokens:
playerInfoContextRequestTokenType
Ti,R,N
internalBuild
TB,R,N,GisInternalBuild
TI,R,N
_hasRegisteredForNameNotifications
_nameNotificationToken
_productVersion
_deviceModel
_rawDeviceModel
_hardwarePlatform
_buildVersion
_deviceClass
_fairPlayDeviceType
_currentLocale
_deviceGUIDData
_name
_serialNumber
_macAddressData
_mainScreenSize
_hasCellularDataCapabilityNumber
_hasTelephonyCapabilityNumber
_hasWiFiCapabilityValue
_hasWAPICapabilityValue
_has720pCapabilityValue
_has1080pCapabilityValue
_screenClassValue
_isInternalBuildNumber
_supportsMusicStreamingValue
_systemReleaseType
nanoPairedDeviceStatusMonitorPairedDeviceChanged:
nanoPairedDeviceStatusMonitorNewActiveDevice:
nanoPairedDeviceStatusMonitor:didChangeClientSyncState:
nanoPairedDeviceStatusMonitor:didFinishInitialSyncForPairingIdentifier:
deviceModel
rawDeviceModel
systemReleaseType
hardwarePlatform
deviceFairPlayGUIDData
deviceClass
serialNumber
macAddress
macAddressData
mainScreenSize
hasCellularDataCapability
hasTelephonyCapability
hasWiFiCapability
hasWAPICapability
has720pCapability
has1080pCapability
screenClass
isIPhone
isAppleTV
isIPad
isIPod
isWatch
isAudioAccessory
isMac
productVersion
productPlatform
buildVersion
isInternalBuild
fairPlayDeviceType
currentLocale
supportsSideLoadedMediaContent
supportsMusicStreaming
_gestaltDeviceClass
unsignedIntValue
dataWithBytes:length:
dataUsingEncoding:
T@"ICDeviceInfo",R
currentDeviceInfo
defaultInfo
T@"ICPlayActivityController",R,N,V_playActivityController
_playActivityController
initWithPlayActivityController:
playActivityController
initWithObjectsAndKeys:
stringByAppendingString:
Ti,N,V_dataType
Ti,N,V_comparisonType
T@"NSString",&,N,V_triggerValue
Ti,N,V_triggerConditionType
Ti,N,V_kind
T@"NSString",&,N,V_bundleIdentifier
_comparisonType
_dataType
_kind
_triggerConditionType
_triggerValue
dataType
setDataType:
setHasDataType:
hasDataType
dataTypeAsString:
StringAsDataType:
comparisonType
setComparisonType:
setHasComparisonType:
hasComparisonType
comparisonTypeAsString:
StringAsComparisonType:
hasTriggerValue
triggerConditionType
setTriggerConditionType:
setHasTriggerConditionType:
hasTriggerConditionType
triggerConditionTypeAsString:
StringAsTriggerConditionType:
setKind:
setHasKind:
hasKind
kindAsString:
StringAsKind:
hasBundleIdentifier
triggerValue
setTriggerValue:
setBundleIdentifier:
T@"NSString",&,N,V_uRL
TI,N,V_width
TI,N,V_height
_height
_uRL
_width
hasURL
setWidth:
setHasWidth:
hasWidth
setHeight:
setHasHeight:
hasHeight
setURL:
width
height
_metadataValues
setMetadataValue:forKey:
metadataValueForKey:
allMetadataValues
_filePath
containsKeyForIdentifier:error:
loadKeyForIdentifier:error:
saveKey:forIdentifier:
enumerateKeysUsingBlock:
initWithPath:
_filePathForKeyIdentifier:
initWithContentsOfURL:error:
enumeratorAtPath:
writeToURL:error:
fileExistsAtPath:
_contentKeys
_finishWithSyncState:error:
continueListeningAvailable
TB,R,N,GisContinueListeningAvailable
_bagRadioDictionary
initWithBagRadioDictionary:
getTracksDPInfoKBSyncCount
maxSupportedProtocolVersion
isContinueListeningAvailable
continueListeningMaxQueueSizeInRequest
continueListeningMaxUpcomingTracksSizeToMaintain
continueListeningLoadStationThreshold
shouldIncludeHTTPHeaderField:forRequestURL:
urlForBagRadioKey:
Tq,N,V_status
explicitContentAllowed
TB,R,N,GisExplicitContentAllowed
T@"NSDate",R,N,V_verificationExpirationDate
_status
_verificationExpirationDate
initWithExpirationDate:
runAgeVerification
isExplicitContentAllowed
status
setStatus:
verificationExpirationDate
Tq,N,V_cacheSize
TB,N,GisReadOnly,V_readOnly
_readOnly
_cacheSize
initWithDatabasePath:
setCacheSizeWithNumberOfDatabasePages:
setCacheSizeWithNumberOfKilobytes:
applyToDatabase:
cacheSize
setCacheSize:
setReadOnly:
allStorePlatformMetadata
storePlatformMetadataForStoreAdamID:
_storePlatformMetadataDictionaryFromRadioMetadataDictionary:
T@"NSArray",C,N,V_playActivityEvents
_playActivityEvents
main
playActivityEvents
setPlayActivityEvents:
write:maxLength:
writePropertyList:toStream:format:options:error:
outputStreamToFileAtPath:append:
T@"NSURLRequest",R,N,V_urlRequest
T@"NSURLSessionTask",&,N,V_task
T@"NSObject<OS_dispatch_semaphore>",&,N,V_waitSemaphore
T@"NSURLRequest",&,N,V_currentURLRequest
T@"NSURLResponse",&,N,V_urlResponse
T@"NSMutableData",&,N,V_responseData
T@"NSURL",&,N,V_responseDataURL
T@"NSError",&,N,V_error
T@"NSDictionary",&,N,SsetAVDownloadOptions:,V_avDownloadOptions
T@"AVURLAsset",&,N,SsetAVURLAsset:,V_avURLAsset
Tq,N,V_handlingType
T@"NSString",&,N,V_retryReason
Td,N,V_startTime
Td,N,V_lastUpdateTime
Td,N,V_lastProgressUpdateTime
T@"ICURLPerformanceMetrics",&,N,V_performanceMetrics
T@?,C,N,V_completionHandler
T@"NSProgress",&,N,V_progress
TB,N,V_prioritize
TB,N,V_cancelOnHTTPErrors
TQ,N
TQ,N,V_redirectCount
Tq,N,V_requestState
T@"NSData",R,C,N,V_resumeData
T@"ICURLResponseHandler",&,N,V_responseHandler
_maxRetryCounts
_retryCounts
_observerQueue
_prioritize
_cancelOnHTTPErrors
_progress
_requestState
_urlRequest
_task
_waitSemaphore
_currentURLRequest
_urlResponse
_responseData
_responseDataURL
_avDownloadOptions
_avURLAsset
_handlingType
_retryReason
_startTime
_lastUpdateTime
_lastProgressUpdateTime
_performanceMetrics
_completionHandler
T@"NSProgress",R
progress
initWithURL:requestContext:
initWithURL:requestContext:resumeData:
initWithURLRequest:requestContext:
initWithURLRequest:requestContext:resumeData:
buildURLRequestWithCompletionHandler:
updateState:
maxRetryCount
setMaxRetryCount:
retryCount
_maxRetryCountForReason:
_setMaxRetryCount:forReason:
_retryCountForReason:
_incrementRetryCountForReason:
_ensureValidRetryReason:
setProgress:
prioritize
setPrioritize:
cancelOnHTTPErrors
setCancelOnHTTPErrors:
setRedirectCount:
requestState
setRequestState:
urlRequest
task
setTask:
waitSemaphore
setWaitSemaphore:
currentURLRequest
setCurrentURLRequest:
urlResponse
setUrlResponse:
responseData
setResponseData:
responseDataURL
setResponseDataURL:
setError:
avDownloadOptions
setAVDownloadOptions:
avURLAsset
setAVURLAsset:
handlingType
setHandlingType:
retryReason
setRetryReason:
startTime
setStartTime:
lastUpdateTime
setLastUpdateTime:
lastProgressUpdateTime
setLastProgressUpdateTime:
performanceMetrics
setPerformanceMetrics:
completionHandler
setCompletionHandler:
unsignedIntegerValue
_defaultMaxRetryCountForReason:
ICURLRequest:didChangeState:
standardUserDefaults
stringByAppendingFormat:
_responseHandlerClass
_nameForRequestType:
_responseClass
accountsWithAccountType:options:completion:
ic_storeAccountForHomeUserIdentifier:error:
ic_localStoreAccountWithCompletion:
ic_localStoreAccountWithError:
ic_allStoreAccounts
ic_activeStoreAccount
ic_activeLockerAccount
ic_primaryAppleAccount
ic_setActiveStoreAccount:
ic_storeAccountForStoreAccountID:
_ic_storeAccountType
ic_sharedAccountStore
ic_allStoreAccountsWithCompletion:
ic_allStoreAccountsWithError:
saveAccount:withDataclassActions:doVerify:completion:
ic_storeAccountTypeWithCompletion:
ic_activeStoreAccountWithCompletion:
ic_activeStoreAccountWithError:
ic_setActiveLockerAccount:
aa_primaryAppleAccountWithCompletion:
aa_appleAccountsWithError:
accountTypeWithAccountTypeIdentifier:error:
aa_isAccountClass:
isEqualToNumber:
accountTypeWithIdentifier:completion:
accountsWithAccountType:options:error:
ic_activeLockerAccountWithCompletion:
ic_primaryAppleAccountWithCompletion:
ic_setActiveStoreAccount:completion:
ic_setActiveLockerAccount:completion:
ic_storeAccountForStoreAccountID:completion:
ic_setActiveStoreAccount:error:
ic_activeLockerAccountWithError:
ic_setActiveLockerAccount:error:
ic_primaryAppleAccountWithError:
ic_storeAccountForStoreAccountID:error:
ic_storeAccountTypeWithError:
ic_storeAccountForHomeUserIdentifier:completion:
T@"ACAccount",&,N,Sic_setActiveStoreAccount:
T@"ACAccount",&,N,Sic_setActiveLockerAccount:
T@"ACAccount",R,N
T@"ACAccountStore",R
T@"NSMutableArray",&,N,V_playerDelegateInfoTokens
_playerDelegateInfoTokens
clearPlayerDelegateInfoTokens
addPlayerDelegateInfoToken:
playerDelegateInfoTokensCount
playerDelegateInfoTokenAtIndex:
playerDelegateInfoTokens
setPlayerDelegateInfoTokens:
playerDelegateInfoTokenType
T@"NSString",&,N,V_triggerName
_triggerName
hasTriggerName
triggerName
setTriggerName:
_itemIDs
_idTypes
addCloudItemID:idType:
insertCloudItemID:idType:atIndex:
enumerateCloudItemIDsUsingBlock:
count
_activeAccountDSID
_activeLockerAccountDSID
_localStoreAccountProperties
_propertiesToSaveForProperties:
T@"NSNumber",C,N
defaultActiveAccountDSID
setDefaultActiveAccountDSID:
defaultActiveLockerAccountDSID
setDefaultActiveLockerAccountDSID:
defaultStorefrontIdentifier
setDefaultStorefrontIdentifier:
_requestMethod
_bodyDictionary
initWithRequestContext:withRequestMethod:
initWithRequestContext:withRequestMethod:andBodyDictionary:
addEntriesFromDictionary:
T@"NSString",&,N,V_pageId
Ti,N,V_pageType
T@"NSMutableArray",&,N,V_pageDetails
T@"NSString",&,N,V_targetId
Ti,N,V_targetType
Ti,N,V_actionType
T@"NSString",&,N,V_actionURL
T@"NSMutableArray",&,N,V_actionDetails
T@"NSString",&,N,V_eventType
T@"NSString",&,N,V_pageUrl
T@"ICIAMImpressionNode",&,N,V_impression
_actionDetails
_actionURL
_eventType
_impression
_pageDetails
_pageId
_pageType
_pageUrl
_targetId
_targetType
hasPageId
pageType
setPageType:
setHasPageType:
hasPageType
pageTypeAsString:
StringAsPageType:
clearPageDetails
addPageDetails:
pageDetailsCount
pageDetailsAtIndex:
hasTargetId
setTargetType:
setHasTargetType:
hasTargetType
targetTypeAsString:
StringAsTargetType:
setActionType:
setHasActionType:
hasActionType
actionTypeAsString:
StringAsActionType:
hasActionURL
clearActionDetails
addActionDetails:
actionDetailsCount
actionDetailsAtIndex:
hasEventType
hasPageUrl
hasImpression
pageId
setPageId:
pageDetails
setPageDetails:
targetId
setTargetId:
actionURL
setActionURL:
actionDetails
setActionDetails:
eventType
setEventType:
pageUrl
setPageUrl:
impression
setImpression:
pageDetailsType
actionDetailsType
T@"NSNumber",R,C,N,V_adamID
T@"NSNumber",R,C,N,V_accountID
T@"NSNumber",R,C,N,V_matchStatus
T@"NSString",R,C,N,V_title
T@"NSString",R,C,N,V_storeFrontID
T@"NSString",R,C,N,V_mediaKind
T@"NSString",R,C,N,V_flavor
_adamID
_matchStatus
_title
_storeFrontID
_flavor
initWithItemID:title:storeFrontID:mediaKind:accountID:matchStatus:flavor:
adamID
matchStatus
storeFrontID
flavor
_activeSessions
performRequest:withResponseHandler:
Td,R,N,V_timeoutInterval
initWithUserIdentityDelegationAccountUUIDs:requestContext:timeoutInterval:
T@"NSString",C,N,V_albumName
_albumName
albumName
setAlbumName:
T@"NSURL",R,C,N,V_url
T@"NSString",R,C,N,V_bundleIdentifier
_url
initWithRadioStationProviderResourceDictionary:
T@"ICAgeVerifier",R,C,N,V_ageVerifier
dynamic
TB,R,N,GisDynamic
Tq,R,N,V_treatment
Tq,R,N,V_status
T@"NSURL",R,C,N,V_verificationURL
T@"ICUserIdentity",R,N,V_userIdentity
_treatment
_verificationURL
_ageVerifier
_initWithUserIdentity:status:treatment:verificationURL:error:
initWithUserIdentity:ageVerifier:treatment:verificationURL:
isDynamic
saveToUserDefaults
_dictionaryRepresentationWithDSID:
treatment
verificationURL
ageVerifier
ageVerificationStateNotRequiredForUserIdentity:
ageVerificationStateNotRequiredForUserIdentity:withError:
ageVerificationStateNotRequiredForUserIdentity:withTreatment:
ageVerificationStateNotRequiredForUserIdentity:withTreatment:verificationURL:
cachedStateForDSID:
_stateFromDictionaryRepresentation:DSID:
deepLink
TB,N,GisDeepLink,V_deepLink
_mobileSubscriberCountryCode
_mobileSubscriberNetworkCode
_IMEI
_deepLink
_finishEnrichmentWithBodyDictionary:completionHandler:
_newDefaultRequestBodyDictionary
_newDefaultRequestBodyDictionaryWithResponseCode:error:
_sendEnrichmentRequestWithURL:preflightResponse:completionHandler:
_sendPreflightRequestWithCompletionHandler:
_sendSilentSMSRequestWithMessage:number:preflightResponse:completionHandler:
isDeepLink
setDeepLink:
initWithURL:statusCode:HTTPVersion:headerFields:
set_CTDataConnectionServiceType:
subarraysOfSize:
TQ,R,N,V_timestamp
T@,R,N,V_value
_timestamp
_value
initWithValue:timestamp:
timestamp
value
initWithUnsignedLongLong:
_items
addValue:timestamp:
addValuesFromHistory:
enumerateValuesUsingBlock:
firstValueAfterOrEqualToTimestamp:
firstValueBeforeTimestamp:
lastValue
removeAllValues
removeValuesBeforeTimestamp:
enumerateObjectsWithOptions:usingBlock:
Ti,N,V_trigger
Td,N,V_date
Td,N,V_interval
T@"NSString",&,N,V_notification
_date
_interval
_notification
_trigger
trigger
setTrigger:
setHasTrigger:
hasTrigger
triggerAsString:
StringAsTrigger:
setDate:
setHasDate:
hasDate
setInterval:
setHasInterval:
hasInterval
hasNotification
date
interval
notification
setNotification:
T@"NSData",R,C,N,V_playerInfoContextRequestData
_playerInfoContextRequestData
initWithVersion:contextID:contentInfo:returningError:
getPlayerDelegateInfoDataUsingPlayerDelegateInfoResponseData:returningData:error:
getStreamerInfoContextDataUsingPlayerInfoContextData:returningData:error:
playerInfoContextRequestData
iTunesStoreStream
TB,R,N,GisiTunesStoreStream
initWithItemResponseDictionary:
streamProtocol
streamURL
keyCertificateURL
keyServerURL
isiTunesStoreStream
ICStoreRadioStreamFlavorWithString:
ICStoreRadioStreamProtocolWithString:
TB,N,V_allowsHandlingNonAuthenticationDialogs
TB,N,V_shouldRecordLastAuthenticationDialogResponseTime
_allowsHandlingNonAuthenticationDialogs
_shouldRecordLastAuthenticationDialogResponseTime
allowsHandlingNonAuthenticationDialogs
setAllowsHandlingNonAuthenticationDialogs:
shouldRecordLastAuthenticationDialogResponseTime
setShouldRecordLastAuthenticationDialogResponseTime:
handleButtonAction:usingRequestContext:withCompletionHandler:
handleStoreDialogResponse:usingRequestContext:withCompletionHandler:
handleStoreDialogResponse:usingRequestContext:withDialogTimeout:withCompletionHandler:
_handleDefaultStoreDialogResponse:usingRequestContext:withDialogTimeout:withCompletionHandler:
_handleAuthenticationStoreDialogResponse:usingRequestContext:withDialogTimeout:withCompletionHandler:
_handleBuyButtonAction:usingRequestContext:withCompletionHandler:
_handleGotoButtonAction:usingRequestContext:withCompletionHandler:
_handleFamilyPermissionButtonAction:usingRequestContext:completion:
addRequestWithURL:account:completion:
ic_dataWithFairPlayBytes:length:
setupAssistantRunning
TB,R,N,GisSetupAssistantRunning
deviceSetupComplete
TB,R,N,GisDeviceSetupComplete
_workQueue
_pendingBuddyCompleteBlocks
_pendingSetupCompleteBlocks
_setupAssistantRunning
_setupAssistantFinishedNotifyToken
_setupAssistantLaunchedNotifyToken
isSetupAssistantRunning
isDeviceSetupComplete
performBlockAfterBuddySetup:
performBlockAfterDeviceSetup:
_runAllPendingBlocksOfType:
T@"ICDeviceSetupStatusMonitor",R
T@"ICStoreDialogResponse",R,C,N
T@"NSError",R,C,N
_requestDate
serverError
dialog
initWithResponseDictionary:requestDate:urlBag:
authorized
shouldCancelPurchaseBatch
downloadQueueItemCount
jingleAction
items
subscriptionKeyBagData
dateByAddingTimeInterval:
T@"NSString",&,N,V_bundleID
T@"NSMutableArray",&,N,V_syncCommands
_bundleID
_syncCommands
hasBundleID
clearSyncCommands
addSyncCommands:
syncCommandsCount
syncCommandsAtIndex:
bundleID
setBundleID:
syncCommands
setSyncCommands:
syncCommandsType
Ti,N,V_repeatPlayMode
Ti,N,V_shufflePlayMode
Ti,N,V_autoPlayMode
_autoPlayMode
_repeatPlayMode
_shufflePlayMode
repeatPlayMode
setRepeatPlayMode:
setHasRepeatPlayMode:
hasRepeatPlayMode
shufflePlayMode
setShufflePlayMode:
setHasShufflePlayMode:
hasShufflePlayMode
autoPlayMode
setAutoPlayMode:
setHasAutoPlayMode:
hasAutoPlayMode
authenticateTask:handleDialogRequest:completion:
resultWithError:
present
addFinishBlock:
performAuthentication
initWithAccount:options:bag:
setEnableAccountCreation:
setAuthenticationType:
setAllowServerDialogs:
_booleanHandler
_didFire
_objectHandler
_timeout
_timeoutTimer
initWithBooleanHandler:
initWithObjectHandler:
failWithError:
finishWithBooleanResult:error:
finishWithObjectResult:error:
startWithTimeout:
startWithTimeout:queue:
_invalidate
initWithBool:
T@"ICClientInfo",R,C,N,V_clientInfo
T@"ICDeviceInfo",R,N,V_deviceInfo
T@"ICURLResponseAuthenticationProvider",R,N,V_authenticationProvider
T@"ICNetworkConstraints",R,C,N,V_networkConstraints
_allowsMutation
_networkConstraints
_deviceInfo
_authenticationProvider
initWithClientInfo:
initWithClientInfo:authenticationProvider:
setAuthenticationProvider:
setClientInfo:
setDeviceInfo:
setNetworkConstraints:
userAgent
_webkitUserAgentVersion
networkConstraints
clientInfo
deviceInfo
authenticationProvider
substringFromIndex:
rangeOfCharacterFromSet:
invertedSet
decimalDigitCharacterSet
objectForInfoDictionaryKey:
bundleWithPath:
objectAtIndexedSubscript:
T@"NSURL",R,N
_dictionary
initWithDictionary:
reportEventURL
serialCheckURL
syncURL
resourceDomainURL
syncPollingInterval
getAccountNotificationsWithCompletionHandler:
setAccountNotificationsArtistContentFeature:withCompletionHandler:
setCachedAccountNotificationsShowInLibraryEnabled:
cachedAccountNotificationsShowInLibrarySwitch
_getSwitchesDependingOnSubscriptionStatus:withResponse:togglingSwitchesToValue:
T@"ICMusicAccountNotificationsSettingsManager",R
T@"ICStorePlatformMetadata",R,C,N
skippable
TB,R,N,GisSkippable
T@"ICRadioStationTrack",R,N
T@"ICRadioStationTrack",R,N,V_parentTrack
_responseVersion
_parentTrack
initWithResponseDictionary:responseVersion:expirationDate:
afterPromoContentTrack
beforePromoContentTrack
hasStartTime
radioStreamAssets
isSkippable
likeState
serverTrackInfo
storePlatformMetadata
trackType
_hlsAssetFromAssetDictionary:
parentTrack
flattenedTracksWithTracks:
T@"<ICDelegationServiceConnectionDelegate>",W,N
Tq,R,N,V_connectionRole
T@"ICDelegationServiceSecuritySettings",R,N,V_securitySettings
_isPaired
_isStarted
_messageParser
_nextRequestID
_pairingSession
_pendingRequestIDToRequestContext
_streamReader
_streamReaderQueue
_streamWriter
_streamWriterQueue
_connectionRole
parser:didParseMessage:
delegationServicePairingSession:sendData:withCompletionHandler:
initWithConnectionRole:inputStream:outputStream:securitySettings:
sendRequest:withResponseHandler:
sendResponse:forRequest:withCompletionHandler:
_nextRequestUniqueID
_sendMessage:withCompletionHandler:
_sendRequest:withResponseHandler:
_sendResponse:forRequest:withCompletionHandler:
_streamDidClose
_streamDidParseMessage:
_finishPendingRequestsWithError:
_streamEncounteredError:
connectionRole
allObjects
initWithRequest:responseHandler:
T@"ICPBDGSRequest",R,N,V_request
T@?,R,C,N,V_responseHandler
writeData:withCompletion:
createHeader:
initWithData:
initWithOutputStream:queue:
setDidFinishReadingBlock:
setDidReadDataBlock:
processData:
setDidEncounterErrorBlock:
initWithInputStream:queue:
T@"NSMutableArray",&,N,V_preferences
_preferences
clearPreferences
addPreferences:
preferencesCount
preferencesAtIndex:
preferences
setPreferences:
preferencesType
T@"NSString",R,C,N,V_playlistGlobalID
Tq,R,N,V_albumAdamID
_playlistGlobalID
_albumAdamID
albumAdamID
referralWithPlaylistGlobalID:
referralWithAlbumAdamID:
T@"NSString",&,N,V_displayText
TB,N,V_requiresDelegate
T@"NSMutableArray",&,N,V_actionParameters
T@"ICIAMMetricEvent",&,N,V_clickEvent
Ti,N,V_messageRemovalPolicy
_actionParameters
_clickEvent
_displayText
_messageRemovalPolicy
_requiresDelegate
hasDisplayText
requiresDelegate
setRequiresDelegate:
setHasRequiresDelegate:
hasRequiresDelegate
clearActionParameters
addActionParameters:
actionParametersCount
actionParametersAtIndex:
hasClickEvent
messageRemovalPolicy
setMessageRemovalPolicy:
setHasMessageRemovalPolicy:
hasMessageRemovalPolicy
messageRemovalPolicyAsString:
StringAsMessageRemovalPolicy:
displayText
setDisplayText:
actionParameters
setActionParameters:
clickEvent
setClickEvent:
actionParametersType
_messageIdentifier
_params
initWithStoreRequestContext:messageIdentifier:params:
TB,N,V_shouldPreventLeaseAcquisition
TB,N,V_shouldRequireLeaseAcquisition
triggeredByLeasePrevention
TB,N,GisTriggeredByLeasePrevention,V_triggeredByLeasePrevention
_shouldPreventLeaseAcquisition
_shouldRequireLeaseAcquisition
_triggeredByLeasePrevention
shouldPreventLeaseAcquisition
setShouldPreventLeaseAcquisition:
shouldRequireLeaseAcquisition
setShouldRequireLeaseAcquisition:
isTriggeredByLeasePrevention
setTriggeredByLeasePrevention:
T@"ICStoreRequestContext",R,C,N
Tq,N,V_anisetteVersion
TB,N,V_shouldUseMescalSigning
TB,N,V_shouldParseBodyData
TB,N,V_shouldRequireURLBag
T@"NSString",C,N,V_machineDataSyncState
T@"NSDictionary",C,N,V_additionalHTTPCookies
T@"NSArray",C,N,V_additionalQueryItems
T@"ICJSSignConfiguration",C,N,V_JSSignConfiguration
_shouldUseMescalSigning
_shouldParseBodyData
_shouldRequireURLBag
_anisetteVersion
_machineDataSyncState
_additionalHTTPCookies
_additionalQueryItems
_JSSignConfiguration
additionalHTTPCookies
buildStoreURLRequestWithURLRequest:builderProperties:completionHandler:
_getSignatureDataForRequest:urlBag:completionHandler:
_stringForCachePolicy:
_shouldPersonalizeRequest
anisetteVersion
setAnisetteVersion:
shouldUseMescalSigning
setShouldUseMescalSigning:
shouldParseBodyData
setShouldParseBodyData:
shouldRequireURLBag
setShouldRequireURLBag:
machineDataSyncState
setMachineDataSyncState:
setAdditionalHTTPCookies:
additionalQueryItems
setAdditionalQueryItems:
JSSignConfiguration
setJSSignConfiguration:
_shouldPersonalizeRequestForClientInfo:personalizationStyle:
appleIDHeadersForRequest:
requestHeaderFieldsWithCookies:
setHTTPShouldHandleCookies:
cachePolicy
currentConnectionTypeHeader
localTimeZone
stringByAddingPercentEncodingWithAllowedCharacters:
URLQueryAllowedCharacterSet
T@?,C,N,V_externalChangeHandler
_accountStoreOptions
_externalChangeHandler
_hasReceivedConnectionInvalidation
initWithAccountStoreOptions:
externalChangeHandler
setExternalChangeHandler:
_onceWithCompletionHandler:
_getXPCConnectionWithCompletion:
TB,N,V_shouldBypassEnforcementOfPrivacyAcknowledgement
Tq,N,V_reason
TB,N,V_allowsFallbackToExpiredStatus
TB,N,V_allowsFallbackToStatusNeedingReload
TB,N,V_shouldReturnLastKnownStatusOnly
Tq,N,V_carrierBundleProvisioningStyle
T@"NSUUID",R,N,V_requestIdentifier
_allowsFallbackToExpiredStatus
_allowsFallbackToStatusNeedingReload
_shouldReturnLastKnownStatusOnly
_shouldBypassEnforcementOfPrivacyAcknowledgement
_reason
_carrierBundleProvisioningStyle
_requestIdentifier
reason
setReason:
allowsFallbackToExpiredStatus
setAllowsFallbackToExpiredStatus:
allowsFallbackToStatusNeedingReload
setAllowsFallbackToStatusNeedingReload:
shouldReturnLastKnownStatusOnly
setShouldReturnLastKnownStatusOnly:
carrierBundleProvisioningStyle
setCarrierBundleProvisioningStyle:
requestIdentifier
shouldBypassEnforcementOfPrivacyAcknowledgement
setShouldBypassEnforcementOfPrivacyAcknowledgement:
_databaseConnection
_removeDatabaseReturningError:
currentEventsRevision
setCurrentEventsRevision:
eventsRevisionVersionToken
insertPlayActivityEvent:withRevision:returningError:
performTransactionWithBlock:
getPlayActivityEvents:relevantRevisionsIndexSet:withStartRevision:endRevision:additionalRevisionsIndexSet:ignoredRevisionsIndexSet:error:
getPlayActivityEvents:relevantRevisionsIndexSet:withStartRevision:endRevision:storeAccountID:additionalRevisionsIndexSet:ignoredRevisionsIndexSet:error:
removePlayActivityEventsUpToRevision:returningError:
revisionsIndexSetForPlayActivityEvents:
revisionsIndexSetForPlayActivityEventPersistentIDs:
_migrateDatabaseFiles
_getPlayActivityEvents:relevantRevisionsIndexSet:withStartRevision:endRevision:storeAccountID:shouldFilterStoreAccountID:additionalRevisionsIndexSet:ignoredRevisionsIndexSet:error:
_revisionsIndexSetUsingPersisentIDGenerationBlock:count:
_setValue:forDatabasePropertyKey:
_valueForDatabasePropertyKey:
_propertiesDatabaseTableName
addIndex:
_eventsDatabaseTableName
containsIndex:
enumerateRangesUsingBlock:
initWithString:
moveItemAtPath:toPath:error:
_defaultDatabasePath
contentsOfDirectoryAtPath:error:
_setupDatabase:
TQ,N,V_accountUniqueIdentifier
_accountUniqueIdentifier
accountUniqueIdentifier
setAccountUniqueIdentifier:
Tq,R,N,V_version
TQ,R,N,V_autoPlayMode
T@"NSArray",R,C,N,V_buildFeatures
T@"NSString",R,C,N,V_buildVersion
T@"ICPlayActivityEventContainerIDs",R,C,N,V_containerIDs
TQ,R,N,V_containerType
T@"NSString",R,C,N,V_deviceName
TQ,R,N,V_displayType
TQ,R,N,V_endReasonType
T@"ICPlayActivityEnqueuerProperties",R,C,N,V_enqueuerProperties
T@"NSDate",R,C,N,V_eventDate
TQ,R,N,V_eventType
T@"NSTimeZone",R,C,N,V_eventTimeZone
T@"NSString",R,C,N,V_featureName
T@"NSString",R,C,N,V_householdID
T@"ICPlayActivityEventItemIDs",R,C,N,V_itemIDs
Td,R,N,V_itemDuration
Td,R,N,V_itemEndTime
Td,R,N,V_itemStartTime
TQ,R,N,V_itemType
TQ,R,N,V_lyricsDisplayedCharacterCount
T@"NSString",R,C,N,V_lyricsLanguage
TQ,R,N,V_mediaType
offline
TB,R,N,GisOffline,V_offline
T@"NSNumber",R,C,N,GisPrivateListeningEnabled,V_privateListeningEnabled
TQ,R,N,V_reasonHintType
T@"NSData",R,C,N,V_recommendationData
TQ,R,N,V_repeatPlayMode
T@"NSString",R,C,N,V_requestingBundleIdentifier
T@"NSString",R,C,N,V_requestingBundleVersion
SBEnabled
TB,R,N,GisSBEnabled,V_SBEnabled
TQ,R,N,V_shufflePlayMode
siriInitiated
T@"NSNumber",R,C,N,GisSiriInitiated,V_siriInitiated
TQ,R,N,V_sourceType
TQ,R,N,V_storeAccountID
Tq,R,N,V_systemReleaseType
T@"NSData",R,C,N,V_timedMetadata
T@"NSData",R,C,N,V_trackInfo
TQ,R,N,V_audioQualityPreference
TQ,R,N,V_playbackFormatPreference
T@"ICPlayActivityAudioQualityProperties",R,C,N,V_targetedAudioQuality
T@"ICPlayActivityAudioQualityProperties",R,C,N,V_providedAudioQuality
T@"NSString",R,C,N,V_containerID
T@"NSString",R,C,N,V_externalID
T@"NSString",R,C,N,V_personalizedContainerID
T@"NSString",R,C,N,V_storeID
_buildFeatures
_containerIDs
_containerType
_deviceName
_displayType
_endReasonType
_enqueuerProperties
_eventDate
_eventTimeZone
_externalID
_featureName
_householdID
_itemDuration
_itemEndTime
_itemStartTime
_itemType
_lyricsDisplayedCharacterCount
_lyricsLanguage
_mediaType
_offline
_persistentID
_personalizedContainerID
_reasonHintType
_recommendationData
_requestingBundleIdentifier
_requestingBundleVersion
_SBEnabled
_siriInitiated
_sourceType
_storeAccountID
_storeID
_timedMetadata
_trackInfo
_version
_audioQualityPreference
_playbackFormatPreference
_targetedAudioQuality
_providedAudioQuality
initWithDataRepresentation:
isEqualToEvent:
dataRepresentation
persistentID
_mutableCopyClass
buildFeatures
containerIDs
containerType
deviceName
displayType
endReasonType
enqueuerProperties
eventDate
eventTimeZone
featureName
householdID
itemIDs
itemDuration
itemEndTime
itemStartTime
itemType
lyricsDisplayedCharacterCount
lyricsLanguage
mediaType
isOffline
isPrivateListeningEnabled
reasonHintType
recommendationData
requestingBundleIdentifier
requestingBundleVersion
isSBEnabled
isSiriInitiated
sourceType
storeAccountID
timedMetadata
trackInfo
audioQualityPreference
playbackFormatPreference
targetedAudioQuality
providedAudioQuality
externalID
personalizedContainerID
storeID
version
TQ,D,N
T@"ICPlayActivityEventContainerIDs",C,D,N
T@"ICPlayActivityEnqueuerProperties",C,D,N
T@"NSTimeZone",C,D,N
T@"ICPlayActivityEventItemIDs",C,D,N
Td,D,N
TB,D,N,GisOffline
T@"NSNumber",C,D,N,GisPrivateListeningEnabled
T@"NSData",C,D,N
TB,D,N,GisSBEnabled
T@"NSNumber",C,D,N,GisSiriInitiated
T@"ICPlayActivityAudioQualityProperties",C,D,N
TB,D,N,GisInternalBuild
setBuildFeatures:
setBuildVersion:
setContainerIDs:
setContainerType:
setDeviceName:
setDisplayType:
setEndReasonType:
setEnqueuerProperties:
setEventDate:
setEventTimeZone:
setExternalID:
setFeatureName:
setHouseholdID:
setInternalBuild:
setItemIDs:
setItemDuration:
setItemEndTime:
setItemStartTime:
setItemType:
setLyricsDisplayedCharacterCount:
setLyricsLanguage:
setMediaType:
setOffline:
setPersistentID:
setPersonalizedContainerID:
setReasonHintType:
setRecommendationData:
setRequestingBundleIdentifier:
setRequestingBundleVersion:
setSBEnabled:
setSiriInitiated:
setSourceType:
setStoreAccountID:
setStoreFrontID:
setStoreID:
setSystemReleaseType:
setTimedMetadata:
setTrackInfo:
setAudioQualityPreference:
setPlaybackFormatPreference:
setTargetedAudioQuality:
setProvidedAudioQuality:
isEqualToTimeZone:
msv_compactDescription
timeZoneWithName:
T@"NSString",C,N,V_phoneNumber
setPhoneNumber:
initWithDictionaryRepresentation:requiringDSID:
dictionaryRepresentationIncludingDSID:
initWithStringRepresentation:
T@"NSString",&,N,V_title
T@"NSString",&,N,V_subtitle
T@"NSString",&,N,V_body
T@"NSMutableArray",&,N,V_images
T@"NSMutableArray",&,N,V_messageActions
T@"NSMutableArray",&,N,V_contentParameters
T@"ICIAMMetricEvent",&,N,V_pageEvent
T@"ICIAMMetricEvent",&,N,V_closeClickEvent
T@"ICIAMMetricEvent",&,N,V_cardClickEvent
_body
_cardClickEvent
_closeClickEvent
_contentParameters
_images
_messageActions
_pageEvent
_subtitle
hasTitle
hasSubtitle
hasBody
clearImages
addImages:
imagesCount
imagesAtIndex:
clearMessageActions
addMessageActions:
messageActionsCount
messageActionsAtIndex:
clearContentParameters
addContentParameters:
contentParametersCount
contentParametersAtIndex:
hasPageEvent
hasCloseClickEvent
hasCardClickEvent
subtitle
setSubtitle:
body
setBody:
images
setImages:
messageActions
setMessageActions:
contentParameters
setContentParameters:
pageEvent
setPageEvent:
closeClickEvent
setCloseClickEvent:
cardClickEvent
setCardClickEvent:
imagesType
messageActionsType
contentParametersType
_mediaFilePath
_sinfs
_newFileExtension
initWithFilePath:sinfs:
removeDRMWithCompletionHandler:
processPurchasedItem:withAttributes:resultInfo:progressBlock:
fileProcessor
T@"NSString",R,C,N,V_serverCorrelationKey
T@"NSString",R,C,N,V_serverEnvironment
_serverCorrelationKey
_serverEnvironment
initWithURLResponse:urlRequest:bodyData:performanceMetrics:
initWithURLResponse:urlRequest:bodyDataURL:performanceMetrics:
_initializeMusicKitURLResponse
serverCorrelationKey
serverEnvironment
URLSession:assetDownloadTask:didFinishDownloadingToURL:
URLSession:assetDownloadTask:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:
URLSession:assetDownloadTask:didResolveMediaSelection:
URLSession:aggregateAssetDownloadTask:willDownloadToURL:
URLSession:aggregateAssetDownloadTask:didCompleteForMediaSelection:
URLSession:aggregateAssetDownloadTask:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:forMediaSelection:
enqueueAVDownloadRequest:withOptions:completionHandler:
enqueueAVDownloadRequest:toDestination:withOptions:completionHandler:
enqueueAggregateAssetDownloadRequest:toDestination:withOptions:completionHandler:
enqueueAggregateAssetDownloadRequest:toDestination:withOptions:resourceLoaderDelegate:completionHandler:
enqueueAggregateAssetDownloadRequest:toDestination:withAVURLAsset:options:completionHandler:
aggregateAssetDownloadTaskWithURLAsset:mediaSelections:assetTitle:assetArtworkData:options:
allMediaSelections
sessionWithConfiguration:assetDownloadDelegate:delegateQueue:
getValue:
T@"ICRemoteRequestOperation",R,N,V_remoteRequestOperation
_remoteRequestOperation
initWithRemoteRequestOperation:
remoteRequestOperation
operationWithVerificationRequest:
T@"ICUserVerificationRequest",R,C,N,V_verificationRequest
_verificationRequest
verificationRequest
_columnIndexByName
_statementWrapper
initWithStatement:
dataForColumnIndex:
dataForColumnName:
doubleForColumnIndex:
doubleForColumnName:
intForColumnIndex:
intForColumnName:
int64ForColumnIndex:
int64ForColumnName:
numberForColumnIndex:
numberForColumnName:
numberOfColumns
stringForColumnIndex:
stringForColumnName:
columnIndexForColumnName:
T@"NSDictionary",C,N,V_additionalRequestParameters
TB,N,V_allowsExplicitContent
T@"ICRadioPlaybackHistory",C,N,V_playbackContext
preservingCurrentlyPlayingItem
TB,N,GisPreservingCurrentlyPlayingItem,V_preservingCurrentlyPlayingItem
T@"NSNumber",C,N,GisPrivateListeningEnabled,V_privateListeningEnabled
delegatedPrivateListeningEnabled
T@"NSNumber",C,N,GisDelegatedPrivateListeningEnabled,V_delegatedPrivateListeningEnabled
Tq,N,V_reasonType
TB,N,V_shouldResponseContainStationMetadata
Tq,N,V_requestedTrackCount
T@"NSString",C,N,V_stationHash
Tq,N,V_stationID
T@"NSString",C,N,V_stationStringID
T@"NSURL",C,N,V_stationURL
T@"ICRadioContentReference",C,N,V_seedContentReference
T@"ICRadioContentReference",C,N,V_nowPlayingContentReference
T@"NSArray",C,N,V_queueContentReferences
_allowsExplicitContent
_preservingCurrentlyPlayingItem
_shouldResponseContainStationMetadata
_additionalRequestParameters
_playbackContext
_delegatedPrivateListeningEnabled
_reasonType
_requestedTrackCount
_stationHash
_stationID
_stationStringID
_stationURL
_seedContentReference
_nowPlayingContentReference
_queueContentReferences
additionalRequestParameters
setAdditionalRequestParameters:
allowsExplicitContent
setAllowsExplicitContent:
playbackContext
setPlaybackContext:
isPreservingCurrentlyPlayingItem
setPreservingCurrentlyPlayingItem:
isDelegatedPrivateListeningEnabled
setDelegatedPrivateListeningEnabled:
reasonType
setReasonType:
shouldResponseContainStationMetadata
setShouldResponseContainStationMetadata:
requestedTrackCount
setRequestedTrackCount:
stationHash
setStationHash:
stationID
setStationID:
stationStringID
setStationStringID:
stationURL
setStationURL:
seedContentReference
setSeedContentReference:
nowPlayingContentReference
setNowPlayingContentReference:
queueContentReferences
setQueueContentReferences:
Ti,N,V_type
Ti,N,V_ruleOperator
T@"NSMutableArray",&,N,V_subrules
T@"ICIAMTriggerCondition",&,N,V_triggerCondition
T@"NSString",&,N,V_triggerEventName
T@"NSString",&,N,V_requiredApplicationContextBundleIdentifier
_requiredApplicationContextBundleIdentifier
_ruleOperator
_subrules
_triggerCondition
_triggerEventName
setHasType:
hasType
typeAsString:
StringAsType:
ruleOperator
setRuleOperator:
setHasRuleOperator:
hasRuleOperator
ruleOperatorAsString:
StringAsRuleOperator:
clearSubrules
addSubrules:
subrulesCount
subrulesAtIndex:
hasTriggerCondition
hasTriggerEventName
hasRequiredApplicationContextBundleIdentifier
subrules
setSubrules:
triggerCondition
setTriggerCondition:
triggerEventName
setTriggerEventName:
requiredApplicationContextBundleIdentifier
setRequiredApplicationContextBundleIdentifier:
subrulesType
_listenerEndpointProviderConnection
listenerEndpointForService:error:
getListenerEndpointForService:completion:
T@"NSData",R,C,N,V_clientData
T@"NSString",R,C,N,V_leaseID
Tq,R,N,V_mediaType
Tq,R,N,V_requestType
_clientData
initWithRequestContext:requestType:leaseID:mediaType:clientData:
clientData
T@"NSString",&,N,V_buildVersion
T@"NSString",&,N,V_deviceGUID
T@"NSString",&,N,V_deviceName
T@"NSString",&,N,V_timeZoneName
Ti,N,V_systemReleaseType
TB,N,V_sBEnabled
TQ,N,V_storeAccountID
T@"NSString",&,N,V_storeFrontID
TB,N,V_privateListeningEnabled
_timeZoneName
_sBEnabled
hasBuildVersion
hasDeviceGUID
hasDeviceName
hasTimeZoneName
setHasSystemReleaseType:
hasSystemReleaseType
setHasSBEnabled:
hasSBEnabled
setHasStoreAccountID:
hasStoreAccountID
hasStoreFrontID
setHasPrivateListeningEnabled:
hasPrivateListeningEnabled
setDeviceGUID:
timeZoneName
setTimeZoneName:
sBEnabled
Ti,N,V_eventType
Ti,N,V_reasonHintType
Tq,N,V_subscriptionAdamID
Tq,N,V_purchasedAdamID
Tq,N,V_radioAdamID
TQ,N,V_itemCloudID
T@"NSString",&,N,V_lyricsID
Tq,N,V_equivalencySourceAdamID
Tq,N,V_containerAdamID
T@"NSString",&,N,V_globalPlaylistID
T@"NSString",&,N,V_stationHash
T@"NSString",&,N,V_stationStringID
T@"NSString",&,N,V_cloudAlbumID
TQ,N,V_cloudPlaylistID
T@"NSString",&,N,V_playlistVersionHash
Ti,N,V_containerType
Ti,N,V_endReasonType
Td,N,V_eventDateTimestamp
T@"NSString",&,N,V_featureName
Td,N,V_itemDuration
Td,N,V_itemEndTime
Td,N,V_itemStartTime
Ti,N,V_itemType
Ti,N,V_mediaType
TB,N,V_offline
Tq,N,V_persistentID
Ti,N,V_sourceType
T@"NSData",&,N,V_timedMetadata
T@"NSData",&,N,V_trackInfo
T@"NSData",&,N,V_recommendationData
T@"NSString",&,N,V_requestingBundleIdentifier
T@"NSString",&,N,V_requestingBundleVersion
T@"ICPAPlayActivityEnqueuerProperties",&,N,V_enqueuerProperties
T@"NSString",&,N,V_householdID
TB,N,V_siriInitiated
T@"NSString",&,N,V_eventTimeZoneName
Ti,N,V_displayType
Tq,N,V_characterDisplayedCount
T@"NSString",&,N,V_lyricLanguage
T@"NSMutableArray",&,N,V_buildFeatures
T@"ICPAPlayModeDictionary",&,N,V_playMode
Ti,N,V_audioQualityPreference
Ti,N,V_playbackFormatPreference
T@"ICPAAudioQualityDictionary",&,N,V_targetedAudioQuality
T@"ICPAAudioQualityDictionary",&,N,V_providedAudioQuality
T@"NSString",&,N,V_containerID
T@"NSString",&,N,V_personalizedContainerID
T@"NSString",&,N,V_storeID
T@"NSString",&,N,V_externalID
Tq,N,V_tvShowPurchasedAdamID
Tq,N,V_tvShowSubscriptionAdamID
TB,N,V_internalBuild
Td,N,V_eventSecondsFromGMT
_characterDisplayedCount
_cloudPlaylistID
_containerAdamID
_equivalencySourceAdamID
_eventDateTimestamp
_eventSecondsFromGMT
_itemCloudID
_purchasedAdamID
_radioAdamID
_subscriptionAdamID
_tvShowPurchasedAdamID
_tvShowSubscriptionAdamID
_cloudAlbumID
_eventTimeZoneName
_globalPlaylistID
_lyricLanguage
_lyricsID
_playMode
_playlistVersionHash
_internalBuild
setHasEventType:
setHasReasonHintType:
hasReasonHintType
setSubscriptionAdamID:
setHasSubscriptionAdamID:
hasSubscriptionAdamID
setPurchasedAdamID:
setHasPurchasedAdamID:
hasPurchasedAdamID
setRadioAdamID:
setHasRadioAdamID:
hasRadioAdamID
setItemCloudID:
setHasItemCloudID:
hasItemCloudID
hasLyricsID
setEquivalencySourceAdamID:
setHasEquivalencySourceAdamID:
hasEquivalencySourceAdamID
setContainerAdamID:
setHasContainerAdamID:
hasContainerAdamID
hasGlobalPlaylistID
hasStationHash
hasStationStringID
setHasStationID:
hasStationID
hasCloudAlbumID
setCloudPlaylistID:
setHasCloudPlaylistID:
hasCloudPlaylistID
hasPlaylistVersionHash
setHasContainerType:
hasContainerType
setHasEndReasonType:
hasEndReasonType
setEventDateTimestamp:
setHasEventDateTimestamp:
hasEventDateTimestamp
hasFeatureName
setHasItemDuration:
hasItemDuration
setHasItemEndTime:
hasItemEndTime
setHasItemStartTime:
hasItemStartTime
setHasItemType:
hasItemType
setHasMediaType:
hasMediaType
setHasOffline:
hasOffline
setHasPersistentID:
hasPersistentID
setHasSourceType:
hasSourceType
hasTimedMetadata
hasTrackInfo
hasRecommendationData
hasRequestingBundleIdentifier
hasRequestingBundleVersion
hasEnqueuerProperties
hasHouseholdID
setHasSiriInitiated:
hasSiriInitiated
hasEventTimeZoneName
setHasDisplayType:
hasDisplayType
setCharacterDisplayedCount:
setHasCharacterDisplayedCount:
hasCharacterDisplayedCount
hasLyricLanguage
clearBuildFeatures
addBuildFeatures:
buildFeaturesCount
buildFeaturesAtIndex:
hasPlayMode
setHasAudioQualityPreference:
hasAudioQualityPreference
setHasPlaybackFormatPreference:
hasPlaybackFormatPreference
hasTargetedAudioQuality
hasProvidedAudioQuality
hasContainerID
hasPersonalizedContainerID
hasStoreID
hasExternalID
setTvShowPurchasedAdamID:
setHasTvShowPurchasedAdamID:
hasTvShowPurchasedAdamID
setTvShowSubscriptionAdamID:
setHasTvShowSubscriptionAdamID:
hasTvShowSubscriptionAdamID
setHasInternalBuild:
hasInternalBuild
setEventSecondsFromGMT:
setHasEventSecondsFromGMT:
hasEventSecondsFromGMT
subscriptionAdamID
purchasedAdamID
radioAdamID
lyricsID
setLyricsID:
equivalencySourceAdamID
containerAdamID
globalPlaylistID
setGlobalPlaylistID:
cloudAlbumID
setCloudAlbumID:
cloudPlaylistID
playlistVersionHash
setPlaylistVersionHash:
eventDateTimestamp
eventTimeZoneName
setEventTimeZoneName:
characterDisplayedCount
lyricLanguage
setLyricLanguage:
playMode
setPlayMode:
tvShowPurchasedAdamID
tvShowSubscriptionAdamID
eventSecondsFromGMT
buildFeaturesType
setAdamID:
_copyWithClass:
Tq,R,N,V_adamID
T@"NSString",R,C,N,V_cloudAlbumID
TQ,R,N,V_cloudPlaylistID
T@"NSString",R,C,N,V_globalPlaylistID
T@"NSString",R,C,N,V_playlistVersionHash
T@"NSString",R,C,N,V_stationHash
T@"NSString",R,C,N,V_stationStringID
Tq,R,N,V_stationID
T@"<ICDelegationServicePairingSessionDelegate>",W,N,V_delegate
Tq,R,N,V_role
_accessSerialQueue
_existingPairingCompletionHandlers
_inputKey
_inputNonce
_outputKey
_outputNonce
_state
_role
initWithRole:securitySettings:
prepareEncryptedSessionWithCompletionHandler:
receievedData:
getDecryptedDataForEncryptedData:withCompletionHandler:
getEncryptedDataForData:withCompletionHandler:
_encryptedDataForData:
_handlePairingSessionCompletionWithError:
_deriveEncryptionKeysReturningError:
_receivedData:
_sendData:withCompletionHandler:
role
dataWithBytesNoCopy:length:freeWhenDone:
appendBytes:length:
subdataWithRange:
T@"ICURLBag",R
_bag
_bagExpirationTimer
beginObservingBagWithHandler:
endObservingBagWithToken:
_invalidateBagExpirationTimer
_scheduleBagExpirationTimerForDate:
_handleBagExpirationTimerFired
_beginObservingBag
_endObservingBag
_handleUserIdentityStoreDidChange:
_requestBagWithPolicy:completionHandler:
_updateWithBag:
T@"ICURLBagMonitor",R
sharedBagMonitor
TQ,N,V_purchaseHistoryID
TQ,N,V_storeID
T@"NSString",C,N,V_title
T@"NSString",C,N,V_author
T@"NSString",C,N,V_genre
T@"NSDate",C,N,V_datePurchased
T@"NSURL",C,N,V_artworkURL
T@"NSString",C,N,V_redownloadParameters
vppLicensed
TB,N,GisVPPLicensed,V_vppLicensed
T@"NSString",C,N,V_vppOrganizationID
T@"NSString",C,N,V_vppOrganizationDisplayName
_vppLicensed
_purchaseHistoryID
_author
_genre
_datePurchased
_vppOrganizationID
_vppOrganizationDisplayName
purchaseHistoryID
setPurchaseHistoryID:
author
setAuthor:
setGenre:
datePurchased
setDatePurchased:
setArtworkURL:
isVPPLicensed
setVppLicensed:
vppOrganizationID
setVppOrganizationID:
vppOrganizationDisplayName
setVppOrganizationDisplayName:
Tq,N,V_storeAdamID
Tq,N,V_likeState
_storeAdamID
_likeState
setStoreAdamID:
setLikeState:
T@"NSString",C,N,V_keybagPath
T@"NSString",C,N,V_reason
T@"NSData",C,N,V_tokenData
_keybagPath
_tokenData
keybagPath
setKeybagPath:
setTokenData:
T@"NSError",R,C,N,V_resultError
T@"NSString",R,C,N,V_storefrontIdentifier
_resultError
initWithDelegateToken:storefrontIdentifier:resultError:
resultError
T@"NSData",&,N,V_playerAnisetteMID
T@"NSData",&,N,V_playerDeviceGUID
T@"NSMutableArray",&,N,V_playerInfoContextTokens
T@"NSString",&,N,V_playerUserAgent
_playerAnisetteMID
_playerDeviceGUID
_playerInfoContextTokens
_playerUserAgent
hasPlayerAnisetteMID
hasPlayerDeviceGUID
clearPlayerInfoContextTokens
addPlayerInfoContextToken:
playerInfoContextTokensCount
playerInfoContextTokenAtIndex:
hasPlayerUserAgent
playerAnisetteMID
setPlayerAnisetteMID:
playerDeviceGUID
setPlayerDeviceGUID:
playerInfoContextTokens
setPlayerInfoContextTokens:
playerUserAgent
setPlayerUserAgent:
playerInfoContextTokenType
T@"NSString",R,N
processInitialResponse:toRequest:withCompletionHandler:
processCompletedResponse:toRequest:withCompletionHandler:
_invalidateDeveloperTokenForInitialResponse:toRequest:withCompletionHandler:
_invalidateUserTokenForInitialResponse:toRequest:withCompletionHandler:
_updateRequest:forProcessedResponseOfStoreURLRequest:
TI,N,V_requestUniqueID
T@"ICPBDGSStartDelegationResponse",&,N,V_startDelegationResponse
T@"ICPBDGSFinishDelegationResponse",&,N,V_finishDelegationResponse
_finishDelegationResponse
_requestUniqueID
_startDelegationResponse
setRequestUniqueID:
setHasRequestUniqueID:
hasRequestUniqueID
hasStartDelegationResponse
hasFinishDelegationResponse
requestUniqueID
startDelegationResponse
setStartDelegationResponse:
finishDelegationResponse
setFinishDelegationResponse:
ic_sharedRequestOperationQueueWithQualityOfService:
_tokenCache
_isService
_siriConnection
getTokenResultForDSID:forceRefresh:completion:
getTokenResultsForDSIDs:forceRefresh:completion:
addTokenResult:forDSID:completion:
getTokenStatusForDSIDs:forcingRefresh:completion:
startService
stopService
getTokenForcingRefresh:completion:
getAllTokensForAssistantForcingRefresh:completion:
getTokenForDSID:forceRefresh:completion:
cachedTokenAndResetCache:
getTokenStatusForcingRefresh:completion:
getAllTokenStatusForAssistantForcingRefresh:completion:
_refreshTokenForDSID:forExternalRequest:completion:
_refreshTokensForDSIDs:forExternalRequest:completion:
_handleLibraryAuthServiceClientTokenDidChangeDistributedNotification:
_commitCache
_updateRefreshTimer
_shouldStopBackgroundRefreshForError:
_updateTokenCacheEntryForDSID:tokenResult:error:
_isPrivacyAcknowledgementRequired
_updateEntriesForAccountsChanges
getSharedUserIdForHomeUserId:completion:
T@"ICLibraryAuthServiceClientTokenProvider",R
sharedProvider
Tr^v,R,N,V_connectionPointer
T@"NSString",R,C,N,V_SQL
_connectionPointer
_SQL
initWithConnection:SQL:
connectionPointer
privacyAcknowledgementRequiredForMedia
privacyAcknowledgementRequiredForMusic
privacyAcknowledgementRequiredForIdentifier:
privacyAcknowledgementRequiredForBundleIdentifier:
acknowledgePrivacyPolicyForIdentifier:completionHandler:
beginObservingPrivacyAcknowledgementForIdentifier:handler:
endObservingPrivacyAcknowledgementForIdentifier:withToken:
_privacyAcknowledgementRequiredForIdentifier:
_updateForPrivacyAcknowledgementChanged
_queryPrivacyAcknowledgementRequiredForIdentifier:
acknowledgePrivacy
initWithPrivacyIdentifier:
_onboardingKitPrivacyIdentifierForPrivacyIdentifier:
T@"ICPrivacyInfo",R
sharedPrivacyInfo
acknowledgementNeededForPrivacyIdentifier:
shouldFlushTrackCache
T@"NSURL",C,N,V_playlistURL
T@"NSURL",C,N,V_keyCertificateURL
T@"NSURL",C,N,V_keyServerURL
TB,N,GisiTunesStoreStream,V_isiTunesStoreStream
T@"NSURL",C,N,VenhancedAudioKeyCertificateURL
T@"NSURL",C,N,VenhancedAudioKeyServerURL
_isiTunesStoreStream
_keyCertificateURL
_keyServerURL
_playlistURL
enhancedAudioKeyCertificateURL
enhancedAudioKeyServerURL
alternatePlaylistURL
alternateKeyCertificateURL
alternateKeyServerURL
setITunesStoreStream:
setKeyCertificateURL:
setKeyServerURL:
playlistURL
setPlaylistURL:
setEnhancedAudioKeyCertificateURL:
setEnhancedAudioKeyServerURL:
T@"<ICMusicSubscriptionLeaseSessionDelegate>",R,W,N,V_delegate
T@"NSDate",R,C,N,V_leaseExpirationDate
delegatedLeaseSession
TB,R,N,GisDelegatedLeaseSession,V_delegatedLeaseSession
T@"ICMusicSubscriptionLeaseStatus",R,C,N
automaticallyRefreshingLease
TB,R,N,GisAutomaticallyRefreshingLease
_automaticRefreshTimerSource
_isPerformingAutomaticRefresh
_leaseStatus
_pendingLeaseAcquisitionRevisionID
_delegatedLeaseSession
_initWithRequestContext:isDelegatedLeaseSession:delegate:leaseStatus:
leaseStatus
isAutomaticallyRefreshingLease
performPlaybackRequest:completionHandler:
reloadFairPlayKeyStatusWithCompletionHandler:
_handlePlaybackLeaseDidEndPushNotification
_handleRemoteServerDidBecomeLikelyReachable
_receivedUserInteractionEvent
_setLeaseStatus:updatedLeaseExpirationDate:
_newOperationForPlaybackRequest:completionHandler:
_performAutomaticRefresh
_onQueue_setLeaseStatus:updatedLeaseExpirationDate:
_updateAutomaticRefreshProperties
isDelegatedLeaseSession
leaseExpirationDate
_sharedOperationQueue
_instantiationHandler
_stronglyHeldSharedInstances
_weaklyHeldSharedInstances
_usageCounts
initWithInstantiationHandler:
sharedInstanceForKey:
incrementUsageCountForKey:
decrementUsageCountForKey:
strongToWeakObjectsMapTable
hasProperNetworkConditionsToPlayMediaWithCompletion:
hasProperNetworkConditionsToShowCloudMediaWithCompletion:
isCellularDataRestrictedForMusicWithCompletion:
shouldProhibitMusicActionForCurrentNetworkConditionsWithCompletion:
isCellularDataRestrictedForVideosWithCompletion:
shouldProhibitVideosActionForCurrentNetworkConditionsWithCompletion:
isCellularDataRestrictedForStoreAppsWithCompletion:
shouldProhibitStoreAppsActionForCurrentNetworkConditionsWithCompletion:
canShowCloudDownloadButtonsWithCompletion:
canShowCloudMusicWithCompletion:
canShowCloudVideoWithCompletion:
Ti,N,V_preference
Tq,N,V_adamId
T@"NSString",&,N,V_externalId
Tq,N,V_createdOffsetMillis
Ti,N,V_preferenceType
Tq,N,V_actionTimestampMillis
_actionTimestampMillis
_adamId
_createdOffsetMillis
_externalId
_preference
_preferenceType
setAdamId:
setHasAdamId:
hasAdamId
hasExternalId
setCreatedOffsetMillis:
setHasCreatedOffsetMillis:
hasCreatedOffsetMillis
preferenceType
setPreferenceType:
setHasPreferenceType:
hasPreferenceType
setActionTimestampMillis:
setHasActionTimestampMillis:
hasActionTimestampMillis
preference
setPreference:
adamId
externalId
setExternalId:
createdOffsetMillis
actionTimestampMillis
Tq,R,N,V_statusCode
_messageEntryCache
_globalPropertyCache
_applicationPropertyCache
_messageMetadataCache
_pendingEvents
initWithFilePath:
updateStoreProperty:forKey:completion:
getStorePropertyForKey:completion:
allStorePropertiesWithCompletion:
updateStoreProperty:forKey:bundleIdentifier:completion:
getStorePropertyForKey:bundleIdentifier:completion:
allApplicationStorePropertiesWithCompletion:
removeMessageEntry:completion:
getMessageEntryWithIdentifier:bundleIdentifier:completion:
getAllMessageEntriesWithCompletion:
getAllMessageEntriesForBundleIdentifier:completion:
getAllMessageEntriesForBundleIdentifiers:completion:
resetStoreWithCompletion:
addPendingMessageEvent:completion:
pendingMessageEventsWithCompletion:
removePendingMessageEventWithIdentifier:completion:
removeAllMetadataForBundleIdentifier:completion:
_defaultStoreFilePath
_load
_commit
dictionaryWithObject:forKey:
initWithResponseDictionary:requestDate:
ic_valueForHTTPHeaderField:
_cacheControlParameters
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
hasCacheControl
cacheControlMaxAge
T@"ICSAPSession",&,N,V_sapSession
_sapSession
_exchangeDataWithSAPContext:requestContext:setupURL:responseData:completionHandler:
sapSession
setSapSession:
T@"NSString",C,N,V_albumArtistName
T@"NSString",C,N,V_composerName
T@"NSString",C,N,V_copyright
T@"NSNumber",C,N,V_discCount
T@"NSNumber",C,N,V_discNumber
T@"NSNumber",C,N,V_fileSize
T@"NSString",C,N,V_genreName
compilation
T@"NSNumber",C,N,GisCompilation,V_compilation
T@"NSNumber",C,N,V_duration
T@"NSString",C,N,V_kind
T@"NSString",C,N,V_name
T@"NSNumber",C,N,V_storeAdamIdentifier
T@"NSNumber",C,N,V_storeCloudIdentifier
T@"NSNumber",C,N,V_trackCount
T@"NSNumber",C,N,V_trackNumber
T@"NSNumber",C,N,V_year
T@"NSString",C,N,V_universalCloudLibraryID
_albumArtistName
_composerName
_copyright
_discCount
_discNumber
_genreName
_compilation
_duration
_storeAdamIdentifier
_storeCloudIdentifier
_trackCount
_trackNumber
_year
_universalCloudLibraryID
albumArtistName
genreName
setAlbumArtistName:
setComposerName:
setCopyright:
setDiscCount:
setDiscNumber:
setGenreName:
setCompilation:
setDuration:
setName:
storeAdamIdentifier
setStoreAdamIdentifier:
storeCloudIdentifier
setStoreCloudIdentifier:
setTrackCount:
setTrackNumber:
setYear:
universalCloudLibraryID
setUniversalCloudLibraryID:
T@"NSData",C,N,V_playerAnisetteMID
T@"NSString",C,N,V_playerDeviceGUID
T@"NSString",C,N,V_playerUserAgent
T@"NSArray",C,N,V_tokenRequests
T@"NSMutableDictionary",R,C,N
_tokenRequests
tokenRequests
setTokenRequests:
T@"NSData",C,N,V_cloudCredentialsTokenData
T@"NSData",C,N,V_SICData
_cloudCredentialsTokenData
_SICData
initWithDSID:SICData:
cloudCredentialsTokenData
setCloudCredentialsTokenData:
SICData
setSICData:
T@"NSUserDefaults",R,N,V_internalDefaults
T@"NSDictionary",C,N
T@"NSDate",C,N
Td,N
explicitContentAllowedForCurrentYear
TB,N,GisExplicitContentAllowedForCurrentYear
explicitContentAllowedForExpirationYear
TB,N,GisExplicitContentAllowedForExpirationYear
grazingPathEnabled
TB,N,GisGrazingPathEnabled
privacyAcknowledgementDisabledForMusic
TB,R,N,GisPrivacyAcknowledgementDisabledForMusic
legacyStoreCacheBusterEnabled
TB,R,N,GisLegacyStoreCacheBusterEnabled
_userDefaults
_musicUserDefaults
_internalDefaults
cloudMediaLibraryUID
setCloudMediaLibraryUID:
defaultStoreFront
cachedSubscriptionStatus
setCachedSubscriptionStatus:
cachedMusicUserTokens
setCachedMusicUserTokens:
pushNotificationState
setPushNotificationState:
mediaLibraryAccessApplicationIdentifiersWithTCCAcceptanceDates
setMediaLibraryAccessApplicationIdentifiersWithTCCAcceptanceDates:
lastActiveAccountDSID
setLastActiveAccountDSID:
lastCookieHeadersForRevokingMusicUserTokens
setLastCookieHeadersForRevokingMusicUserTokens:
lastAllowedInteractiveAuthenticationTime
setLastAllowedInteractiveAuthenticationTime:
authServiceClientTokenTimeToLive
authServiceClientTokenCache
setAuthServiceClientTokenCache:
lastAuthenticationDialogResponseTime
setLastAuthenticationDialogResponseTime:
setLastKnownUserAgeVerificationState:
lastKnownUserAgeVerificationState
lastKnownLocalStoreAccountProperties
setLastKnownLocalStoreAccountProperties:
lastKnownSubscriptionStatusBaseCacheKey
setLastKnownSubscriptionStatusBaseCacheKey:
setAccountNotificationsShowInLibraryDictionary:
accountNotificationsShowInLibraryDictionary
lastKnownHouseholdID
setLastKnownHouseholdID:
ignoreExtendedCertificateValidation
setIgnoreExtendedCertificateValidation:
bypassBagSanityChecks
deviceClassOverride
deviceModelOverride
fairPlayDeviceTypeOverride
hardwarePlatformOverride
productVersionOverride
productPlatformOverride
networkTypeOverride
shouldForceiPhoneBehaviors
shouldRunAgeVerification
setShouldRunAgeVerification:
isExplicitContentAllowedForCurrentYear
setExplicitContentAllowedForCurrentYear:
isExplicitContentAllowedForExpirationYear
setExplicitContentAllowedForExpirationYear:
isGrazingPathEnabled
setGrazingPathEnabled:
isPrivacyAcknowledgementDisabledForMusic
isLegacyStoreCacheBusterEnabled
shouldForceLibraryRecommendationAnalysis
shouldReduceLibraryRecommendationsXPCInterval
shouldTreatSubscriptionStatusAsExpired
shouldTreatSubscriptionStatusCheckAsIncomplete
shouldTreatSagaAddComputerCallAsFailed
shouldTreatInitialSagaImportAsFailed
automaticDownloadsEnabled
setAutomaticDownloadsEnabled:
deleteAutomaticDownloadsKey
allowLowAffinityRecommendations
_shouldSpoofIPhoneRequestProperties
_setOrRemoveObject:forKey:
internalDefaults
initWithSuiteName:
valueForKey:
setBool:forKey:
T@"ICDefaults",R
standardDefaults
T@"NSNumber",R,C,N,V_pauseTime
T@"NSDate",R,C,N,V_skipDate
Tq,R,N,V_storeIdentifier
_pauseTime
_serverTrackInfo
_skipDate
initWithTrack:
pauseTime
skipDate
setExpirationDate:
setPauseTime:
setServerTrackInfo:
setSkipDate:
T@"NSDate",C,N,V_expirationDate
T@"NSString",R,C,N,V_name
T@"NSUUID",R,C,N,V_uniqueIdentifier
initWithName:
T@"NSTimeZone",R,C,N,V_timeZone
_timeZone
timeZone
setTimeZone:
T^{__CFRunLoopSource=},N,V_runLoopSourceRef
_runLoopSourceRef
clearRunLoop
runLoopSourceRef
setRunLoopSourceRef:
_contextForUserNotification
displayUserNotification:withCompletionHandler:
_handleCallbackForUserNotification:responseFlags:
T@"ICUserNotificationManager",R
_buyParams
_itemName
_itemKind
initWithRequestContext:buyParams:storeItemID:itemName:itemKind:
initWithRequestContext:platformMetadataItem:
T@,R,C,N
_childResponses
enumerateItemsUsingBlock:
itemForIdentifier:
allItems
accountIdentifier
enqueuerAccountIdentifier
rawResponse
initWithResponses:
valueForKeyPath:
automatic
TB,N,GisAutomatic,V_automatic
T@"ICStoreRequestContext",&,N,V_requestContext
T@"ICStoreURLRequest",&,N,V_storeURLRequest
_automatic
initWithRequestContext:allowsExplicitContent:isAutomatic:
_buildAndSendRequestForURL:
_getURLFromBagAndSendRequest
isAutomatic
setAutomatic:
storeURLRequest
setStoreURLRequest:
query
initWithName:value:
enumerateRowsUsingBlock:
firstInt64Value
firstNumberValue
firstStringValue
observingCloudServiceStatus
TB,R,GisObservingCloudServiceStatus
_cloudServiceStatusMonitorConnection
_cloudServiceStatusMonitorConnectionEstablishmentError
_activeTransactionIdentifiersForCloudServiceStatusMonitorConnection
_privacyAcknowledgementPolicy
_isObservingCloudServiceStatus
_observationToken
_transactionIdentifierForActiveObservationToken
_cloudServerLaunchedNotifyToken
_cloudServerLaunchTimeoutTimer
_capabilities
_hasValidCapabilities
_storefrontCountryCode
privacyAcknowledgementPolicy
setPrivacyAcknowledgementPolicy:
isObservingCloudServiceStatus
beginObservingCloudServiceStatus
endObservingCloudServiceStatus
requestCapabilitiesWithCompletionHandler:
requestUserTokenForDeveloperToken:completionHandler:
_beginTransactionForCloudServiceStatusMonitorConnectionWithIdentifier:
_endTransactionForCloudServiceStatusMonitorConnectionWithIdentifier:
_cloudServiceStatusMonitorConnectionForTransactionIdentifier:error:
_cloudServiceStatusMonitorConnectionWasInterrupted
_cloudServiceStatusMonitorConnectionWasInvalidated
_performCloudServiceStatusMonitorRequestWithDescription:requestHandler:errorHandler:
_handleCloudServiceStatusMonitorConnectionRemoteObjectProxyError:forRequestWithDescription:transactionIdentifier:
_resetCloudServiceStatusMonitorConnectionAllowingExplicitInvalidation:
_requestCapabilitiesWithPrivacyPromptPolicy:requestCapabilitiesWithCompletionHandler:
_requestStorefrontCountryCodeWithCompletionHandler:
_requestStorefrontIdentifierWithCompletionHandler:
_beginObservingCloudServiceStatus
_didBeginObservingCloudServiceStatusWithToken:transactionIdentifier:
_endObservingCloudServiceStatusWithToken:
_didEndObservingCloudServiceStatusWithToken:transactionIdentifier:
_didEndRequestingUserTokenWithTransactionIdentifier:
_updateWithCapabilities:hasValidCapabilities:transactionIdentifier:
_updateWithStorefrontCountryCode:transactionIdentifier:
_updateWithStorefrontIdentifier:transactionIdentifier:
_registerCloudServerLaunchedNotifyToken
_cancelCloudServerLaunchedNotifyToken
_scheduleCloudServerLaunchTimeoutTimer
_invalidateCloudServerLaunchTimeoutTimer
_recoverObservingCloudServiceStatus
_refreshCloudServiceStatus
_scheduleTriggersForCloudServiceStatusObservationRecovery
_invalidateTriggersForCloudServiceStatusObservationRecovery
stringByReplacingOccurrencesOfString:withString:
T@"ICPBDGSRequest",&,N,V_request
T@"ICPBDGSResponse",&,N,V_response
hasRequest
hasResponse
setRequest:
response
setResponse:
TI,N,V_uniqueID
T@"ICPBDGSStartDelegationRequest",&,N,V_startDelegationRequest
T@"ICPBDGSFinishDelegationRequest",&,N,V_finishDelegationRequest
_finishDelegationRequest
_startDelegationRequest
_uniqueID
setUniqueID:
setHasUniqueID:
hasUniqueID
hasStartDelegationRequest
hasFinishDelegationRequest
uniqueID
startDelegationRequest
setStartDelegationRequest:
finishDelegationRequest
setFinishDelegationRequest:
setContentTaste:forMediaItem:storeIdentifier:configuration:timeStamp:withCompletionHandler:
setContentTaste:forPlaylistGlobalID:configuration:withCompletionHandler:
setContentTaste:forAlbumStoreID:configuration:withCompletionHandler:
updateContentTasteForMediaItemsAndInvalidateLocalCache:configuration:withCompletionHandler:
setContentTaste:forMediaItem:storeIdentifier:timeStamp:withCompletionHandler:
setContentTaste:forPlaylistGlobalID:withCompletionHandler:
setContentTaste:forAlbumStoreID:withCompletionHandler:
updateContentTasteForMediaItemsAndInvalidateLocalCache:withCompletionHandler:
_setupContentTasteServiceConnection
sharedCloudContentTasteRequestListener
_hasProperNetworkConditionsToShowCloudMedia
_isAirplaneModeActive
_isAutoDownloadOnCellularAllowed
_isCellularDataActive
_isCellularDataRestrictedForMusic
_isShowingAllMusic
_isShowingAllVideo
_isUpdateInProgress
_isWiFiEnabled
_isWiFiAssociated
_isEthernetWired
_isNetworkReachable
_canShowCloudMusic
_canShowCloudVideo
_canShowCloudDownloadButtons
_preferencesChangedNotifyToken
_preferencesChangedNotifyTokenIsValid
_networkType
_radiosPreferences
_networkReachabilityObservationCount
_ctServerConnection
airplaneModeChanged
isNetworkReachable
beginObservingNetworkReachability
endObservingNetworkReachability
_wifiStateDidChangeNotification:
_applicationWillEnterForeground:
_hasCellularCapability
_hasWiFiCapability
_setNewIsNetworkReachable:networkType:
_uncachedIsAutoDownloadOnCellularAllowed
_uncachedIsShowingAllMusic
_onQueue_updateIsCellularDataRestrictedForMusic
_uncachedIsShowingAllVideo
_onQueue_updateCanShowCloudDownloadButtonsWithNotification:
_onQueue_updateCanShowCloudTracksWithNotification:
_onQueue_beginObservingReachabilityChanges
_onQueue_endObservingReachabilityChanges
airplaneMode
sharedController
_cachedUserTokens
getCachedUserTokenForDeveloperToken:requestContext:completion:
setCachedUserToken:forDeveloperToken:requestContext:completion:
_handleMusicUserTokensDidChangeDistributedNotification:
_persistCache
_postLocalChangeNotification
_getCacheKeyForDeveloperToken:requestContext:completion:
T@"ICMusicUserTokenCache",R
_decodeDeveloperTokenPart:
_buyParameters
_parsedResponse
initWithRequestContext:buyParameters:includeKeybagSyncData:
initWithRequestContext:buyParametersString:includeKeybagSyncData:
T@"<ICDelegationProviderServiceSessionDelegate>",W,N
T@"NSArray",R,C,N,V_delegationAccountUUIDs
T@"ICDelegationProviderNetService",R,N,V_netService
T@"NSArray",R,C,N,V_userIdentities
_protocolHandler
_sessionIDToStreamContext
_delegationAccountUUIDs
_userIdentities
delegationServiceConnectionDidClose:
delegationServiceConnection:didEncouterError:
delegationServiceConnection:didReceiveRequest:
initWithUserIdentities:userIdentityStore:requestContext:netService:delegationAccountUUIDs:
_handleStartDelegationResponse:
_startDelegation
delegationAccountUUIDs
netService
userIdentities
performAuthenticationToHandleResponse:toRequest:withCompletionHandler:
performAuthenticationUsingRequestContext:withCompletionHandler:
_performAuthenticationUsingRequestContext:usingVerificationInteractionLevel:withCompletionHandler:
_adjustedAuthenticationPolicyForResponse:withCompletionHandler:
T@"ICRadioStationMetadata",R,N
T@"NSDate",R,C,N,V_assetExpirationDate
stationMetadata
tracklistActionType
dateWithTimeIntervalSinceNow:
initWithURLResponse:
contentDictionary
T@"ICDelegationPlayInfoRequest",C,N,V_playInfoRequest
T@"ICStoreRequestContext",&,N,V_storeRequestContext
_playInfoRequest
finishWithResponse:requestDate:error:
_finishWithResult:tokens:error:
playInfoRequest
setPlayInfoRequest:
initWithURL:cachePolicy:timeoutInterval:
T@"NSString",&,N,V_key
T@"NSString",&,N,V_value
_key
hasKey
hasValue
setKey:
setValue:
initWithRequestContext:storeItemID:
_syncResponse
_fromRevision
initWithStoreRequestContext:fromRevision:
T@"ICUserIdentity",R,N,V_identity
initWithIdentity:identityStore:
machServiceName
T@"NSNumber",C,N,V_adamID
TB,N,V_forceRefresh
TB,N,V_requestOfflineKeys
_keyStore
_pendingKeyIdentifiers
_waitForKeysSemaphore
_forceRefresh
_requestOfflineKeys
contentKeySession:didProvideRenewingContentKeyRequest:
contentKeySession:didUpdatePersistableContentKey:forContentKeyIdentifier:
contentKeySession:contentKeyRequest:didFailWithError:
contentKeySession:shouldRetryContentKeyRequest:reason:
contentKeySession:contentKeyRequestDidSucceed:
contentKeySessionContentProtectionSessionIdentifierDidChange:
contentKeySessionDidGenerateExpiredSessionReport:
addAsset:
removeAsset:
processKeyWithIdentifier:
_performKeyDeliveryRequestForContentKeyRequest:offlineDownload:completion:
forceRefresh
requestOfflineKeys
processContentKeyResponseError:
persistableContentKeyFromKeyVendorResponse:options:error:
processContentKeyResponse:
contentKeyResponseWithFairPlayStreamingKeyResponseData:
respondByRequestingPersistableContentKeyRequestAndReturnError:
processContentKeyRequestWithIdentifier:initializationData:options:
removeContentKeyRecipient:
addContentKeyRecipient:
contentKeySessionWithKeySystem:
applicationProxyForIdentifier:
appState
isValid
_mediaTokenService
initWithClientInfo:options:
_didFetchMediaToken:withError:
tokenString
fetchMediaToken
_invalidateCachedDeveloperTokenForClientInfo:requester:usingMediaTokenService:
_createMediaTokenServiceForClientInfo:requester:
invalidateCachedDeveloperTokenForClientInfo:requester:completionHandler:
invalidateMediaToken
initWithClientIdentifier:bag:
Tq,R,N,V_securityMode
T@"NSString",R,C,N,V_password
_securityMode
_password
securityMode
password
getDeviceReceiverSettingsWithCompletion:
getDeviceSenderSettingsForReceiverName:securityMode:completion:
T@"NSArray",C,N,V_delegationAccountUUIDs
T@"NSString",C,N,V_deviceName
Tq,N,V_securityMode
Tq,N,V_serviceVersion
_serviceVersion
initWithTXTRecordData:
TXTRecordData
setDelegationAccountUUIDs:
setSecurityMode:
serviceVersion
setServiceVersion:
dataFromTXTRecordDictionary:
rangeOfString:
dictionaryFromTXTRecordData:
initialCheckboxValue
TB,R,N,GisInitialCheckboxValue
biometricAuthenticationAllowed
TB,R,N,GisBiometricAuthenticationAllowed
explanation
isInitialCheckboxValue
isBiometricAuthenticationAllowed
buttons
defaultButtonType
_buttonWithType:
_buttonTitleKeyForType:
_buttonActionKeyForType:
initWithType:isDefaultButton:title:action:
TB,R,N,V_isDefaultButton
T@"ICStoreDialogResponseButtonAction",R,C,N,V_action
_isDefaultButton
_action
isDefaultButton
action
initWithResponseButtonActionDictionary:
T@"NSDictionary",R,C,N,V_actionDictionary
_actionDictionary
buyParams
subtarget
URLString
actionDictionary
_numberOfActiveRemoteRequests
_privacyAcknowledgementObservationToken
_remoteRequestingClientConnection
_remoteRequestingClientConnectionInvalidationTimer
_statusHandlersForPendingIdenticalRequests
deliverSubscriptionStatusResponse:forRemoteRequestWithUniqueIdentifier:error:
getSubscriptionStatusWithCompletionHandler:
getSubscriptionStatusForUserIdentity:withCompletionHandler:
getSubscriptionStatusForUserIdentity:bypassingCache:withCompletionHandler:
performSubscriptionStatusRequest:withCompletionHandler:
performSubscriptionStatusRequest:withStatusHandler:
enableSubscriptionWithCompletionHandler:
enableSubscriptionForUserIdentity:withCompletionHandler:
disableSubscriptionWithCompletionHandler:
disableSubscriptionForUserIdentity:withCompletionHandler:
refreshSubscriptionWithCompletionHandler:
refreshSubscriptionForUserIdentity:withCompletionHandler:
refreshSubscriptionUsingRequestContext:withCompletionHandler:
invalidateCachedSubscriptionStatusWithCompletionHandler:
invalidateCachedSubscriptionStatusForUserIdentity:withCompletionHandler:
_cancelRemoteRequestingClientConnectionInvalidationTimer
_deliverSubscriptionStatusResponse:forRequest:error:
_didEndRemoteRequestWithUniqueIdentifier:
_invalidateRemoteRequestingClientConnection
_remoteRequestingClientConnectionInvalidationTimerDidExpire
_scheduleInvalidationOfRemoteRequestingClientConnection
_willBeginRemoteRequestWithUniqueIdentifier:statusHandler:
_willPerformSubscriptionStatusRequest:withStatusHandler:
_handlePrivacyAcknowledgementRequirementChanged:
_handleSubscriptionStatusDidChangeFollowingPrivacyAcknowledgementNotification:
_handleSubscriptionStatusCacheDidChangeNotification:
_handleSubscriptionStatusCacheUnderlyingCachingPropertiesDidChangeNotification:
_handleSubscriptionStatusDidChangeDistributedNotification:
postNotificationName:object:userInfo:deliverImmediately:
arrayWithObject:
_hasEntitlementForMusicSubscriptionStatusService
T@"ICMusicSubscriptionStatusController",R
sharedStatusController
T@"ICDelegationConsumerServiceRequest",R,C,N,V_request
T@?,R,N,V_responseHandler
_acceptedConnections
_pendingUserIdentities
_sessionIDToRequestInfoMap
_timeoutDispatchSource
delegationConsumerNetService:didAcceptConnectionWithInputStream:outputStream:
_handleTimeout
_stop
authenticated
TB,R,N,GisAuthenticated
T@"NSNumber",R,C,N,V_accountIdentifier
T@"NSNumber",R,C,N,V_enqueuerAccountIdentifier
_accountIdentifier
_enqueuerAccountIdentifier
_requestedItemIdentifiers
initWithResponseDictionary:requestedItemIdentifiers:
initWithURLResponse:requestedItemIdentifiers:
resultsDictionary
_enumerateResultDictionariesUsingBlock:
T@"NSString",R,N,V_messageIdentifier
T@"NSDictionary",R,N,V_params
T@"NSString",R,N,V_eventIdentifier
_eventIdentifier
initWithMessageIdentifier:params:
initWithMessageIdentifier:params:eventIdentifier:
messageIdentifier
params
eventIdentifier
ic_errorWithDomain:code:debugDescription:underlyingError:
ic_underlyingError
ic_errorWithDomain:code:debugDescription:
ic_errorWithDomain:code:underlyingError:
T@"NSError",R
T@"ICStoreDialogResponse",C,N,V_dialog
T@"NSError",C,N,V_serverError
T@"NSDate",C,N,V_rentalExpirationDate
T@"NSDate",C,N,V_rentalPlaybackStartDate
T@"NSDate",C,N,V_renewalDate
T@"NSData",C,N,V_serverPlaybackContextData
T@"NSData",C,N,V_contentKeyContextData
_dialog
_serverError
_rentalExpirationDate
_rentalPlaybackStartDate
_renewalDate
_serverPlaybackContextData
_contentKeyContextData
finishAssetResourceLoadingRequest:withError:
setDialog:
setServerError:
rentalExpirationDate
setRentalExpirationDate:
rentalPlaybackStartDate
setRentalPlaybackStartDate:
renewalDate
setRenewalDate:
serverPlaybackContextData
setServerPlaybackContextData:
contentKeyContextData
setContentKeyContextData:
finishLoadingWithError:
respondWithData:
dataRequest
_telephonyCallbackQueue
_telephonyClient
_telephonySubscriptionContext
subscriptionInfoDidChange
activeSubscriptionsDidChange
simLessSubscriptionsDidChange
dualSimCapabilityDidChange
providerName
mobileSubscriberCountryCode
mobileSubscriberNetworkCode
IMEI
sendSMSWithText:toPhoneNumber:error:
phoneNumberAvailable:
phoneNumberChanged:
_ensureTelephonyHandlesAreReady
_handleActiveSubscriptionsDidChange
_updatePhoneNumberAllowingDidChangeNotification:
number
getPhoneNumber:error:
subscriptions
slotID
context
findForUuid:
voicePreferred
getActiveContexts:
initWithQueue:
sendSMSWithText:text:serviceCenter:toAddress:
canonicalFormat
sharedMessageCenter
phoneNumberWithDigits:digits:countryCode:
copyMobileSubscriberNetworkCode:error:
copyMobileSubscriberCountryCode:error:
copyCarrierBundleValue:key:bundleType:error:
initWithBundleType:
T@"ICTelephonyController",R
accountPropertyForKey:
ic_isLocalAccount
ic_DSID
ic_homeUserIdentifiers
ams_automaticDownloadKinds
_updateAutomaticDownloadKindsByAddingMediaKindMusic:error:
bagSubProfile
bagSubProfileVersion
initWithEnabledMediaKinds:account:bag:
perform
ic_setDSID:
ic_altDSID
ic_setAltDSID:
ic_firstName
ic_setFirstName:
ic_lastName
ic_setLastName:
ic_storefront
ic_setStorefront:
ic_uniqueIdentifier
ic_setUniqueIdentifier:
ic_isSandboxed
ic_setSandboxed:
ic_isActiveLockerAccount
ic_isCloudBackupEnabled
ic_isManagedAppleID
ic_setManagedAppleID:
ic_ageVerificationExpirationDate
ic_setAgeVerificationExpirationDate:
ic_mergeWithCloudLibraryPreference
ic_setMergeWithCloudLibraryPreference:
ic_isSubscriptionStatusEnabled
ic_setSubscriptionStatusEnabled:
ic_cloudLibraryStateReason
ic_setCloudLibraryStateReason:
ic_isManageable
ic_automaticDownloadKinds
ic_setAutomaticDownloadKinds:
ic_isAutomaticDownloadsEnabledForMediaKindMusic
ic_updateAutomaticDownloadKindsByAddingMediaKindMusic:error:
ic_updateAutomaticDownloadKindsByAddingMediaKindMusic:completionHandler:
ic_privateListeningEnabled
ic_setPrivateListeningEnabled:
ic_privateListeningEnabledForHomeUsers
ic_setPrivateListeningEnabledForHomeUsers:
setAccountProperty:forKey:
isEnabledForDataclass:
ams_accountFlagValueForAccountFlag:
ams_setAccountFlagValue:forAccountFlag:
ams_isLocalAccount
T@"NSNumber",C,N,Sic_setDSID:
T@"NSString",C,N,Sic_setAltDSID:
T@"NSString",C,N,Sic_setFirstName:
T@"NSString",C,N,Sic_setLastName:
T@"NSString",C,N,Sic_setStorefront:
T@"NSNumber",C,N,Sic_setUniqueIdentifier:
ic_sandboxed
TB,N,Gic_isSandboxed,Sic_setSandboxed:
TB,N,Gic_isActiveLockerAccount,Sic_setActiveLockerAccount:
ic_cloudBackupEnabled
TB,R,N,Gic_isCloudBackupEnabled
ic_managedAppleID
TB,N,Gic_isManagedAppleID,Sic_setManagedAppleID:
T@"NSDate",C,N,Sic_setAgeVerificationExpirationDate:
T@"NSNumber",C,N,Sic_setMergeWithCloudLibraryPreference:
ic_subscriptionStatusEnabled
TB,N,Gic_isSubscriptionStatusEnabled,Sic_setSubscriptionStatusEnabled:
ic_localAccount
TB,R,N,Gic_isLocalAccount
T@"NSSet",C,N,Sic_setAutomaticDownloadKinds:
T@"NSNumber",C,N,Sic_setPrivateListeningEnabled:
T@"NSDictionary",C,N,Sic_setCloudLibraryStateReason:
T@"NSDictionary",C,N,Sic_setPrivateListeningEnabledForHomeUsers:
ic_manageable
TB,R,N,Gic_isManageable
T@"NSDictionary",C,N,V_bagValues
T@"NSMutableDictionary",&,N,V_convertedActionsCache
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSArray",&,N,V_GUIDURLRegexPatterns
T@"NSSet",&,N,V_GUIDURLSchemes
T@"NSDate",C,N,S_setExpirationDate:,V_expirationDate
T@"ICURLBagRadioConfiguration",R,N
T@"ICURLBagLibraryDAAPConfiguration",R,N
T@"ICURLBagEnhancedAudioConfiguration",R,N
_bagValues
_convertedActionsCache
_GUIDURLRegexPatterns
_GUIDURLSchemes
_initWithDictionary:expirationDate:serverCorrelationKey:serverEnvironment:
allValues
valueForBagKey:
hasValueForBagKey:
urlForBagKey:
int64ValueForBagKey:
boolValueForBagKey:
shouldAppendDeviceGUIDForURL:
shouldAppendMachineDataHeadersForURL:
mescalConfigurationForRequestURL:
mescalConfigurationForRequest:
mescalConfigurationForResponseURL:
mescalConfigurationForResponse:
radioConfiguration
libraryDAAPConfiguration
enhancedAudioConfiguration
storefrontHeaderSuffix
canPostKeybagSyncData
GUIDURLRegexPatterns
setGUIDURLRegexPatterns:
GUIDURLSchemes
setGUIDURLSchemes:
_initWithPropertyListRepresentation:
_propertyListRepresentation
_shouldMescalSignBodyForURL:withSignatureConfiguration:
_validateGUIDURLConfigIfNeeded
bagValues
setBagValues:
convertedActionsCache
setConvertedActionsCache:
queue
setQueue:
_setExpirationDate:
initWithPattern:options:error:
lowercaseString
rangeOfCharacterFromSet:options:range:
uppercaseLetterCharacterSet
initWithURL:MIMEType:expectedContentLength:textEncodingName:
host
rangeOfFirstMatchInString:options:range:
scheme
_nextSessionUniqueID
initWithUserIdentityStore:requestContext:
getFinishDelegationRequestsWithStartDelegationResponse:streamContexts:replyHandler:
getStartDelegationRequestForAccountIDs:withCompletionHandler:
_getPlayInfoRequestWithStartDelegationResponse:streamContexts:completionHandler:
T@"ICStoreArtworkInfo",R,C,N
subscriptionRequired
TB,R,N,GisSubscriptionRequired
T@"ICRadioStationProviderResource",R,C,N
allowsSharing
allowsItemLiking
artworkInfo
coreSeedName
descriptionText
attributionLabel
subtype
isSubscriptionRequired
providerResource
_isValid
initWithConnection:
_removeAccountForIdentityKey:
_removeTokenForIdentityKey:
_setToken:forIdentityKey:
Tq,R,N,V_interactionLevel
initWithUserInteractionLevel:
defaultProvider
contentProtectionEnabled
TB,R,N,GisContentProtectionEnabled,V_isContentProtectionEnabled
deviceUnlocked
TB,R,N,GisDeviceUnlocked
deviceClassCUnlocked
TB,R,N,GisDeviceClassCUnlocked,V_isDeviceClassCUnlocked
_hasLoadedDeviceClassCUnlocked
_isDeviceClassCUnlocked
_hasLoadedContentProtectionEnabled
_isContentProtectionEnabled
_firstUnlockNotificationToken
_pendingFirstUnlockBlocks
isContentProtectionEnabled
isDeviceClassCUnlocked
isDeviceUnlocked
performBlockAfterFirstUnlock:
_getContentProtectionEnabled:isDeviceClassCUnlocked:
_loadContentProtectionEnabled:isDeviceClassCUnlocked:
_processFirstUnlockNotification
T@"ICSecurityInfo",R
sharedSecurityInfo
_isEnabled
_canSubscribe
_isSubscriber
_downloadIdentifier
_songID
initWithRequestContext:downloadIdentifier:songID:
clientInfoForMusicKitRequestWithClientIdentifier:clientVersion:
_clientInfoForCloudDaemonOriginatedMusicKitRequestWithRequestingBundleIdentifier:
clientInfoForMusicKitRequestWithClientIdentifier:clientVersion:bundleIdentifier:
_shadowOperationForRemoteExecution
TB,N,G_isShadowOperationForRemoteExecution,S_setShadowOperationForRemoteExecution:,V__shadowOperationForRemoteExecution
T@"<NSSecureCoding>",&,N,V_response
__shadowOperationForRemoteExecution
_isShadowOperationForRemoteExecution
_setShadowOperationForRemoteExecution:
currentQueue
_accountDSIDToFairPlayKeyStatus
_cacheKeyToLeaseSession
_hasReceivedUserInteractionEvent
_isRemoteServerLikelyReachable
_isServerReachable
_lastKnownHouseholdID
_leaseDidEndNotificationToken
_leaseSessionPreparationOperationQueue
musicLeaseSession:didFinishPlaybackRequest:withPlaybackResponse:responseError:updatedFairPlayKeyStatusList:completionHandler:
musicLeaseSession:requestsFairPlayKeyStatusUpdateWithCompletion:
getLastKnownHouseholdIDWithCompletion:
getLeaseSessionWithRequestContext:completionHandler:
receivedUserInteractionEvent
initWithDSID:carrierBundleDeviceIdentifier:delegatedDSID:
T@"NSNumber",R,C,N,V_delegatedDSID
T@"NSString",R,C,N,V_carrierBundleDeviceIdentifier
T@"ICMusicSubscriptionLeaseController",R
ic_valuesForCookieWithName:
ic_appendHTTPCookies:
ic_appendHTTPCookieWithName:value:
T@"NSMutableDictionary",&,N,V_codeMap
T@"NSMutableDictionary",&,N,V_valueTypeMap
_codeMap
_valueTypeMap
hasInfoForProperty:
elementCodeForProperty:
valueTypeForProperty:
mapProperty:toCode:valueType:
codeMap
setCodeMap:
valueTypeMap
setValueTypeMap:
T@"ICDAAPPropertyInfo",R,N
sharedItemPropertyInfo
sharedContainerPropertyInfo
outputStreamToMemory
initWithStream:
propertyForKey:
startContainerWithCode:
endContainerWithCode:
writeUInt8:withCode:
unsignedCharValue
charValue
writeSInt8:withCode:
unsignedShortValue
writeUInt16:withCode:
shortValue
writeSInt16:withCode:
writeUInt32:withCode:
writeSInt32:withCode:
writeUInt64:withCode:
writeSInt64:withCode:
writeString:withCode:
writeData:withCode:
TB,N,V_activeCommandsOnly
_activeCommandsOnly
setActiveCommandsOnly:
setHasActiveCommandsOnly:
hasActiveCommandsOnly
activeCommandsOnly
Tq,R
currentVersion
dateForValue:
defaultDatabasePath
setupWithConnection:error:
valueForDate:
_createDefaultSchemaWithConnection:error:
T@"NSString",R,C,N,V_developerToken
T@"ICStoreURLRequest",R,N
T@"ICMusicKitRequestContext",R,C,N
_pendingEquivalentStoreURLRequest
_setDeveloperToken:
_buildMusicKitURLRequestWithBaseURLRequest:completionHandler:
_buildEquivalentStoreURLRequestWithDeveloperToken:completionHandler:
_buildUserTokenBasedMusicKitURLRequestWithBaseURLRequest:developerToken:completionHandler:
_updateURLSessionManagedPropertiesForEquivalentStoreURLRequest:
T@"NSData",C,N,V_signatureData
T@"NSMutableData",&,N,V_data
_signatureData
signatureData
setSignatureData:
performSubscriptionStatusRequest:forUniqueIdentifier:
T@"ICUserVerificationContext",R,C,N,V_verificationContext
_verificationContext
initWithVerificationContext:
verificationContext
T@"ICUserIdentity",R,N
T@"ICMusicSubscriptionStatus",R,N,V_subscriptionStatus
_identityContext
_initWithIdentityContext:
beginObservingSubscriptionStatusWithHandler:
endObservingSubscriptionStatusWithToken:
refreshSubscriptionStatus
_handleSubscriptionStatusDidChange:
_beginObservingSubscriptionStatus
_endObservingSubscriptionStatus
_effectiveIdentityForRequestingSubscriptionStatus
_requestSubscriptionStatusWithCachingPolicy:completion:
_updateWithSubscriptionStatus:
_sharedInstanceManager
sharedMonitorForIdentity:
sharedMonitorForIdentity:identityStore:
enumerateDelegationUUIDsForUserIdentity:usingBlock:
enumerateTokensUsingBlock:
enumerateTokensWithType:usingBlock:
identityPropertiesForUserIdentity:
lastExpirationPruningDate
overestimatedNumberOfTokens
tokenForUserIdentity:
_enumerateQueryResults:usingBlock:
_tokenWithSQLiteRow:
_userIdentityWithSQLiteRow:
backgroundRadioRequest
TB,N,GisBackgroundRadioRequest,V_backgroundRadioRequest
Tq,N,V_protocolVersion
T@?,C,N,V_radioContentDictionaryCreationBlock
_backgroundRadioRequest
_radioContentDictionaryCreationBlock
_decorateHeaderPropertiesForURLRequest:withBuilderProperties:
isBackgroundRadioRequest
setBackgroundRadioRequest:
radioContentDictionaryCreationBlock
setRadioContentDictionaryCreationBlock:
_verifyMescalSignatureForResponse:toRequest:completionHandler:
_performAuthenticationForResponse:toRequest:completionHandler:
_processDialogResponse:toRequest:completionHandler:
_updateDefaultStorefrontIdentifier:usingIdentityStore:
cookiesWithResponseHeaderFields:forURL:
handleResponse:forRequest:shouldRetry:
TQ,N,V_accountID
setAccountID:
setHasAccountID:
hasAccountID
performRequestWithCompletionHandler:
performRequestOnOperationQueue:withCompletionHandler:
discreteProgressWithTotalUnitCount:
initWithRequestContext:leaseID:mediaType:
initWithRequestContext:itemSagaID:
getCookiesForURL:
getCookiesForURL:userIdentifier:
getCookiesForUserIdentifier:
getCookie:userIdentifier:
getGlobalAccountCookiesForURL:
getCookiesHeadersForURL:userIdentifier:
saveCookies:forURL:
saveCookies:forURL:userIdentifier:
saveGlobalAccountCookies:forURL:
removeCookiesWithProperties:
removeAllCookies
_accountForUserIdentifier:
_cookieDictionaryForURL:userIdentifier:
_saveCookies:userIdentifier:
saveVerifiedAccount:withCompletionHandler:
ams_addCookies:
ams_cookiesForURL:
ams_cookies
ams_removeAllCookies
ams_removeCookiesMatchingProperties:
setCookies:forURL:mainDocumentURL:
sharedHTTPCookieStorage
cookiesForURL:
T@"ICHTTPCookieStore",R
sharedCookieStore
T@"NSDictionary",R,C,N,V_itemResponseDictionary
_valueDictionary
_isToggled
_hasBeenPreviouslyToggled
initWithToggleState:hasBeenToggled:identifier:
isToggled
setIsToggled:
hasBeenPreviouslyToggled
setHasBeenPreviouslyToggled:
itemResponseDictionary
T@"<ICUserIdentityStoreBackend>",R,N
T@"ICLocalStoreAccountProperties",R,N
_codingHelper
_delegateAccountStore
userIdentityStoreBackendDidChange:
_initWithStyle:delegateAccountStoreOptions:
enumerateDelegateTokensUsingBlock:completionHandler:
enumerateDelegateTokensWithType:usingBlock:completionHandler:
getDelegationUUIDsForUserIdentity:completionHandler:
getPropertiesForActiveICloudAccountReturningError:
getPropertiesForUserIdentity:completionHandler:
getPropertiesForUserIdentity:error:
getVerificationContextForUserIdentity:error:
insertPropertiesForUserIdentity:usingBlock:
insertPropertiesForUserIdentity:usingBlock:completionHandler:
insertPropertiesForUserIdentity:andPostAccountChangeNotification:usingBlock:completionHandler:
removeAllDelegateTokensWithCompletionHandler:
removeDelegateTokenForUserIdentity:completionHandler:
removeDelegateTokensExpiringBeforeDate:completionHandler:
removePropertiesForUserIdentity:completionHandler:
setActiveAccountWithDSID:completionHandler:
setActiveLockerAccountWithDSID:completionHandler:
synchronizeWithCompletionHandler:
updatePropertiesForUserIdentity:usingBlock:
updatePropertiesForUserIdentity:usingBlock:completionHandler:
DSIDForUserIdentity:outError:
userIdentitiesForManageableAccountsWithError:
getUserIdentitiesForManageableAccountsWithCompletionHandler:
localStoreAccountProperties
updatePropertiesForLocalStoreAccountUsingBlock:completionHandler:
userIdentitiesForAllStoreAccountsWithError:
getuserIdentitiesForAllStoreAccountsWithCompletionHandler:
_unsafeBackend
_prepareDelegateAccountStoreWithCompletionHandler:
_refreshLocalStoreAccountPropertiesAllowingDidChangeNotification:
_reloadForExternalChange
_resetDelegateAccountStoreWithCompletionHandler:
_unsafe_deleteDelegateAccountStore
_updateDelegateAccountStoreUsingBlock:
_delegateAccountStoreDidChangeNotification:
_allowsDelegationForUserIdentity:
_assertNonNullIdentityStoreForSelector:
_dispatchDidChangeNotification:didDelegateAccountStoreChange:
_dsidForTimestamp:history:
_dsidForUserIdentity:error:
_existingIdentityPropertiesForUserIdentity:error:
_importValuesFromCodingHelper:
_initializeLocalStoreAccountProperties
_openDelegateAccountStoreWithError:
_openDelegateAccountStoreForUserIdentity:error:
_registerForDelegateAccountStoreNotifications:
_saveIdentityProperties:andPostAccountChangeNotification:forUserIdentity:error:
_unregisterForDelegateAccountStoreNotifications:
_icValidStoreAccountsFromACAccounts:
nullIdentityStore
defaultIdentityStore
T@"ICUserIdentityStore",R
_claimSingleWriterStatus
testingIdentityStoreWithDatabasePath:
testingIdentityStoreWithSingleWriterService:
processAction:data:withRequestContext:version:withCompletionHandler:
processActionFromResponse:withRequestContext:withCompletionHandler:
T@"ICMachineDataActionHandler",R
sharedHandler
T@"NSString",R,C,N,V_stringRepresentation
_aspectRatioToCRABSVideoDictionaries
_aspectRatioToHLSVideoURL
_aspectRatioToPreviewFrameArtworkInfo
_stringRepresentation
initWithVideoArtworkResponseDictionary:
supportedSizesForCRABSVideoForAspectRatio:
CRABSVideoURLMatchingSize:
HLSVideoURLForAspectRatio:
previewFrameArtworkInfoMatchingAspectRatio:
_aspectRatioKeyForAspectRatio:
valueWithCGSize:
CGSizeValue
T@"NSDictionary",R,C,N,V_trackInfo
initWithStoreIdentifier:trackInfo:
storeItemWithIdentifier:
assets
buyParameters
formattedPrice
offerType
price
T@"NSNetService",R,N,V_netService
_netServiceStreamResolutionQueue
_resolutionCompletionHandlers
_txtRecord
initWithNetService:
getResolvedStreamsWithCompletionHandler:
_resolveWithCompletionHandler:
_setState:
_updateTXTRecordProperties
getInputStream:outputStream:
startMonitoring
resolveWithTimeout:
scheduleInRunLoop:forMode:
mainRunLoop
T@"ICSQLiteConnectionOptions",R,C,N,V_options
T@"<ICSQLiteConnectionDelegate>",W,N,V_delegate
_afterTransactionBlocks
_database
_didResetForCorruption
_preparedStatements
_transactionDepth
_transactionWantsRollback
initWithOptions:
dispatchAfterTransaction:
executePreparedQuery:withResults:
executePreparedStatement:error:
executePreparedStatement:error:bindings:
executeQuery:withResults:
executeStatement:error:
executeStatement:error:bindings:
lastChangeCount
userVersion
setUserVersion:
open
performTransaction:
prepareStatement:error:
truncate
currentError
resetAfterCorruptionError
resetAfterIOError
_close
_executeStatement:error:
_finalizeAllStatements
_flushAfterTransactionBlocks
_open
_performResetAfterCorruptionError
_prepareStatement:error:
_statementForPreparedStatement:error:
_verifiedStatementForPreparedStatement:error:
_verifiedStatementForSQL:error:
options
T@"NSURLResponse",R,N,V_urlResponse
T@"NSData",R,N,V_bodyData
T@"NSURL",R,N,V_bodyDataURL
_parsedBodyResponseType
_parsedBodyResponse
_bodyData
_bodyDataURL
parsedBodyArray
parsedBodyDictionary
parsedBody
_prepareParsedBodyResponse
bodyData
bodyDataURL
ic_intValueForKey:
ic_uintValueForKey:
ic_int64ValueForKey:
ic_boolValueForKey:
ic_arrayValueForKey:
ic_dictionaryValueForKey:
ic_stringValueForKey:
ic_dataValueForKey:
ic_numberValueForKey:
onlineGeniusForMatchEnabled
TB,R,N,GisOnlineGeniusForMatchEnabled
_bagDictionary
initWithBagLibraryDAAPDictionary:
databaseID
databaseName
isOnlineGeniusForMatchEnabled
playDataBatchIntervalInMinutes
subscribedContainerPollingFrequencySeconds
updatePollingFrequencySeconds
autoUpdatePollingFrequencySeconds
maxSyncRetryIntervalSeconds
_fairPlaySerialQueue
_subscriptionKeyBagStatusCache
getKeyStatusForAccountUniqueIdentifier:withCompletionHandler:
getKeyStatusListWithCompletionHandler:
importSubscriptionKeyBagData:completionHandler:
importSubscriptionKeyBagData:leaseInfoData:completionHandler:
generateSubscriptionBagRequestWithAccountUniqueIdentifier:transactionType:machineIDData:completionHandler:
generateSubscriptionLeaseRequestWithAccountUniqueID:transactionType:completionHandler:
stopSubscriptionLeaseWithCompletion:
_handleSubscriptionFairPlayKeyStatusChangedDistributedNotification:
T@"ICMusicSubscriptionFairPlayController",R
itemWithStoreAdamID:
leaseInfoData
metricsDictionary
T@"NSData",&,N,V_data
T@"NSURL",C,N,V_certificateURL
T@"NSString",C,N,V_contentURI
Tq,N,V_leaseActionType
T@"ICRequestContext",C,N,V_requestContext
Tq,N,V_rentalID
TB,N,V_skippedRentalCheckout
ITunesStoreRequest
TB,N,GisITunesStoreRequest,V_ITunesStoreRequest
T@?,C,N,V_serverPlaybackContextDataCreationHandler
T@?,C,N,V_asyncServerPlaybackContextDataCreationHandler
TB,N,V_shouldIncludeDeviceGUID
Tq,N,V_requestProtocolType
TB,N,V_isOfflineDownload
_skippedRentalCheckout
_ITunesStoreRequest
_shouldIncludeDeviceGUID
_isOfflineDownload
_contentURI
_leaseActionType
_rentalID
_serverPlaybackContextDataCreationHandler
_asyncServerPlaybackContextDataCreationHandler
_requestProtocolType
configureUsingAssetResourceLoadingRequest:
configureUsingContentKeyRequest:
certificateURL
setCertificateURL:
contentURI
setContentURI:
leaseActionType
setLeaseActionType:
rentalID
setRentalID:
skippedRentalCheckout
setSkippedRentalCheckout:
isITunesStoreRequest
setITunesStoreRequest:
serverPlaybackContextDataCreationHandler
setServerPlaybackContextDataCreationHandler:
asyncServerPlaybackContextDataCreationHandler
setAsyncServerPlaybackContextDataCreationHandler:
shouldIncludeDeviceGUID
setShouldIncludeDeviceGUID:
requestProtocolType
setRequestProtocolType:
isOfflineDownload
setIsOfflineDownload:
makeStreamingContentKeyRequestDataForApp:contentIdentifier:options:completionHandler:
streamingContentKeyRequestDataForApp:contentIdentifier:options:error:
T@"ICSecureKeyDeliveryRequest",C,N,V_request
_createDefaultProtocolRequestBodyUsingPlaybackContextData:
_createAudioProtocolRequestBodyUsingPlaybackContextData:
_createServerPlaybackContextUsingCertificateData:completion:
charging
TB,R,N,GisCharging,V_isCharging
Tq,R,N,V_networkType
Tq,R,N,V_lastKnownNetworkType
remoteServerReachable
TB,R,N,GisRemoteServerReachable,V_remoteServerReachable
remoteServerLikelyReachable
TB,R,N,GisRemoteServerLikelyReachable,V_isRemoteServerLikelyReachable
currentNetworkLinkHighQuality
TB,R,N,GisCurrentNetworkLinkHighQuality,V_currentNetworkLinkHighQuality
currentNetworkLinkExpensive
TB,R,N,GisCurrentNetworkLinkExpensive,V_currentNetworkLinkExpensive
wifiAssociated
TB,R,N,GisWiFiAssociated,V_wifiAssociated
ethernetWired
TB,R,N,GisEthernetWired,V_ethernetWired
wiFiActive
TB,R,N,GisWiFiActive,V_isWiFiActive
networkConstrained
TB,R,N,GisNetworkConstrained,V_networkConstrained
TQ,R,N,V_currentThermalLevel
Td,R,N,V_currentBatteryLevel
T@"NSString",R,C,N,V_telephonyStatusIndicator
T@"NSString",R,C,N,V_telephonyOperatorName
T@"NSString",R,C,N,V_telephonyRegistrationStatus
_observersLock
_telephonyServerConnectionRef
_networkPathEvaluator
_thermalNotificationToken
_dataSubscriptionContext
_cellSignalInfo
_powerNotificationRef
_symptomPresentationFeedDyLibHandle
_isCharging
_isWiFiActive
_currentNetworkLinkHighQuality
_wifiAssociated
_networkConstrained
_ethernetWired
_currentNetworkLinkExpensive
_remoteServerReachable
_telephonyOperatorName
_telephonyRegistrationStatus
_telephonyStatusIndicator
_currentBatteryLevel
_lastKnownNetworkType
_currentThermalLevel
signalInfo
signalStrength
_onQueue_updateNetworkReachabilityAndNotifyObservers:
_onQueue_updateThermalLevelWithToken:
_onQueue_loadInitialThermalLevel
_currentNetworkType
_networkTypeFromWatchCarousel
_networkTypeFromTelephonyStatusIndicator:
_onQueue_updateTelephonyStateAndNotifyObservers:
_handleApplicationDidEnterForegroundNotification:
_handleCTServerConnectionNotification:userInfo:
observeValueForKeyPath:ofObject:change:context:
isCharging
isRemoteServerLikelyReachable
telephonyOperatorName
telephonyRegistrationStatus
telephonyStatusIndicator
isWiFiActive
isCurrentNetworkLinkHighQuality
isWiFiAssociated
isNetworkConstrained
isEthernetWired
currentBatteryLevel
isCurrentNetworkLinkExpensive
networkType
lastKnownNetworkType
isRemoteServerReachable
currentThermalLevel
isConstrained
usesInterfaceType:
isExpensive
removeObserver:forKeyPath:context:
addObserver:forKeyPath:options:context:
sharedDefaultEvaluator
weakObjectsHashTable
T@"ICEnvironmentMonitor",R
generateMachineDataForAccountID:returningMachineIDData:otpData:error:
initWithAccountID:
startWithServerActionData:returningClientData:error:
endWithMessageData:transportKey:error:
_destroySession
ic_dataWithADIBytes:length:
_delegationDiscoveryCount
_delegationConsumerService
performCredentialRequest:withResponseHandler:
_handleRequestIndependentPropertiesForSession:
_handleDelegationAccountUUIDsForSession:
_handlePendingDelegationRequestsForSession:
_handleIdentityProperties:forIdentity:loadingError:credentialRequest:session:
_handleCredentialRequestIdentityPropertiesForSession:
performCredentialRequests:withResponseHandler:
initWithCredentialRequests:responseHandler:
T@"ICUserIdentityProperties",C,N,V_activeICloudAccountProperties
T@"NSArray",R,C,N,V_credentialRequests
T@"NSMapTable",&,N,V_delegationCredentialRequestToSpecificUserIdentity
T@"NSMapTable",&,N,V_delegationCredentialRequestToIdentityProperties
T@"NSMutableDictionary",&,N,V_delegationUserIdentityToUUIDs
T@"ICUserIdentityStore",R,N
Tq,R,N,V_maximumQualityOfService
T@"NSMutableArray",&,N,V_pendingPropertyLoadCredentialRequests
T@"NSMutableArray",&,N,V_pendingResponseCredentialRequests
_activeICloudAccountProperties
_credentialRequests
_delegationCredentialRequestToSpecificUserIdentity
_delegationCredentialRequestToIdentityProperties
_delegationUserIdentityToUUIDs
_maximumQualityOfService
_pendingPropertyLoadCredentialRequests
_pendingResponseCredentialRequests
hasPendingResponses
activeICloudAccountProperties
setActiveICloudAccountProperties:
credentialRequests
delegationCredentialRequestToSpecificUserIdentity
setDelegationCredentialRequestToSpecificUserIdentity:
delegationCredentialRequestToIdentityProperties
setDelegationCredentialRequestToIdentityProperties:
delegationUserIdentityToUUIDs
setDelegationUserIdentityToUUIDs:
maximumQualityOfService
pendingPropertyLoadCredentialRequests
setPendingPropertyLoadCredentialRequests:
pendingResponseCredentialRequests
setPendingResponseCredentialRequests:
T@"ICUserCredentialProvider",R
_copyLocalStoreAccountPropertiesToOtherInstance:withZone:
cloudID
setCloudID:
TQ,R,N,V_cloudID
T@"NSString",R,C,N,V_lyricsID
Tq,R,N,V_purchasedAdamID
Tq,R,N,V_radioAdamID
Tq,R,N,V_equivalencySourceAdamID
Tq,R,N,V_subscriptionAdamID
_cloudID
Tq,R,N,V_acceptedVersion
Tq,R,N,V_currentVersion
Tq,R,N,V_sourceType
_acceptedVersion
_currentVersion
initWithResponseTermsDictionary:
acceptedVersion
minorAccountHolder
TB,R,N,GisMinorAccountHolder,V_isMinorAccountHolder
TB,R,N,V_hasFamily
TB,R,N,V_hasFamilyGreaterThanOneMember
headOfHousehold
TB,R,N,GisHeadOfHousehold,V_isHeadOfHousehold
matchEnabled
TB,R,N,GisMatchEnabled,V_isMatchEnabled
TB,R,N,V_hasOfflineSlots
inFreeTrial
TB,R,N,GisInFreeTrial,V_isInFreeTrial
eligibleForFreeTrial
TB,R,N,GisEligibleForFreeTrial,V_isEligibleForFreeTrial
purchaser
TB,R,N,GisPurchaser,V_isPurchaser
Tq,R,N,V_reasonType
Tq,R,N,V_statusType
administrator
TB,R,N,GisAdministrator,V_isAdministrator
discoveryModeEligible
TB,R,N,GisDiscoveryModeEligible,V_isDiscoveryModeEligible
partOfBundle
TB,R,N,GisPartOfBundle,V_partOfBundle
bundleOwner
TB,R,N,GisBundleOnwer,V_bundleOwner
T@"NSArray",R,C,N,V_termsStatusList
T@"NSString",R,C,N,V_phoneNumber
T@"NSString",R,C,N,V_cellularOperatorName
T@"NSString",R,C,N,V_sessionIdentifier
Tq,R,N,V_carrierBundlingErrorCode
cloudMusicServiceEnabled
TB,R,N,GisCloudMusicServiceEnabled
_isMinorAccountHolder
_hasFamily
_hasFamilyGreaterThanOneMember
_isHeadOfHousehold
_isMatchEnabled
_hasOfflineSlots
_isInFreeTrial
_isEligibleForFreeTrial
_isPurchaser
_statusType
_isAdministrator
_isDiscoveryModeEligible
_termsStatusList
_cellularOperatorName
_carrierBundlingErrorCode
_isPartOfBundle
_isBundleOwner
_partOfBundle
_bundleOwner
isEqualToStatus:
hasCatalogPlaybackCapability
hasAddToCloudLibraryCapability
isCloudMusicServiceEnabled
_copySubscriptionStatusPropertiesToStatus:withZone:
isMinorAccountHolder
hasFamily
hasFamilyGreaterThanOneMember
isHeadOfHousehold
isMatchEnabled
hasOfflineSlots
isInFreeTrial
isEligibleForFreeTrial
isPurchaser
statusType
isAdministrator
isDiscoveryModeEligible
termsStatusList
cellularOperatorName
sessionIdentifier
carrierBundlingErrorCode
isPartOfBundle
isBundleOnwer
TB,D,N,GisMinorAccountHolder
TB,D,N
TB,D,N,GisHeadOfHousehold
TB,D,N,GisMatchEnabled
TB,D,N,GisInFreeTrial
TB,D,N,GisEligibleForFreeTrial
TB,D,N,GisPurchaser
TB,D,N,GisAdministrator
TB,D,N,GisDiscoveryModeEligible
Tq,N,V_statusCode
TB,D,N,GisPartOfBundle
TB,D,N,GisBundleOnwer
setMinorAccountHolder:
setHasFamily:
setHasFamilyGreaterThanOneMember:
setHeadOfHousehold:
setMatchEnabled:
setHasOfflineSlots:
setInFreeTrial:
setEligibleForFreeTrial:
setPurchaser:
setCarrierBundlingStatusType:
setStatusType:
setAdministrator:
setDiscoveryModeEligible:
setTermsStatusList:
setCellularOperatorName:
setSessionIdentifier:
setCarrierBundlingErrorCode:
setPartOfBundle:
setBundleOwner:
setStatusCode:
initWithTimeIntervalSince1970:
wiFiEnabled
TB,N,GisWiFiEnabled,V_wiFiEnabled
wiFiAssociated
TB,N,GisWiFiAssociated,V_wiFiAssociated
_wifiPreferences
_wiFiEnabled
_wiFiAssociated
_processIdentifier
_getWiFiEnabledFromPrefs
_getWiFiAssociated
_wifiCallBack:
isWiFiEnabled
setWiFiEnabled:
setWiFiAssociated:
sharedWiFiManager
T@"NSDictionary",C,N,V_bagEnhancedAudioDictionary
_bagEnhancedAudioDictionary
initWithBagEnhancedAudioDictionary:
prefetchSKDs
_urlForBagEnhancedAudioKey:
bagEnhancedAudioDictionary
setBagEnhancedAudioDictionary:
processName
clientVersion
bagProfile
bagProfileVersion
setProcessName:
setClientVersion:
setBagProfile:
setBagProfileVersion:
_clientInfoCopyWithClass:
T@"NSString",R,C,N,V_processName
T@"NSString",R,C,N,V_clientIdentifier
T@"NSString",R,C,N,V_clientVersion
_processName
_clientVersion
_bagProfile
_bagProfileVersion
initWithBundleIdentifier:
initWithSystemApplicationType:
bundleVersion
shortVersionString
bundleExecutable
bundleProxyForIdentifier:
T@"ICClientInfo",R
_dataAllowedFallbackValue
_cellularDataAllowedFallbackValue
_wiFiDataAllowedFallbackValue
_networkTypeToDataAllowed
_networkTypeToSizeLimit
shouldAllowDataForNetworkType:
shouldAllowDataForCellularNetworkTypes
shouldAllowDataForWiFiNetworkTypes
sizeLimitForNetworkType:
setShouldAllowDataForAllNetworkTypes:
setShouldAllowData:forNetworkType:
setShouldAllowDataForCellularNetworkTypes:
setShouldAllowDataForWiFiNetworkTypes:
setSizeLimit:forNetworkType:
mediaTypeNetworkConstraintsFromURLBag:
constraintsForSystemApplicationType:
T@"NSArray",R,N
TB,R,N,V_wasSuccessful
_wasSuccessful
settingsSwitches
wasSuccessful
createResponseBodyWithSwitches:
_notificationParams
initWithRequestContext:notificationType:notificationParameters:
@"NSObject<OS_dispatch_queue>"
@"ICMusicSubscriptionStatusCacheKey"
@"NSMutableDictionary"
@16@0:8
v16@0:8
v32@0:8@16@?24
v40@0:8@16@24@?32
v24@0:8@?16
v24@0:8@16
v20@0:8B16
@40@0:8@16@24@32
@"ICJSSignConfiguration"
@24@0:8@16
@24@0:8^{_NSZone=}16
@"NSMutableArray"
@"NSString"
v32@0:8q16@24
B16@0:8
B24@0:8@16
Q16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSData"
@"NSDate"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@32@0:8q16@24
@40@0:8q16@24@32
q16@0:8
@"NSDictionary"
@"ICStoreRequestContext"
@36@0:8@16q24B32
@24@0:8q16
@"NSOperationQueue"
@"NSURL"
@"ICFPSAPContext"
@44@0:8I16@20@28@36
I16@0:8
@36@0:8I16@20@28
@"ICUserIdentity"
@"ICUserIdentityStore"
@"ICStoreDialogResponseHandler"
@32@0:8@16@24
@48@0:8@16@24@32@40
@24@0:8@?16
v24@0:8q16
@"NSXPCListenerEndpoint"
@"ICIAMMetricEvent"
@"ICIAMLocalNotification"
@"ICIAMMessageRule"
{?="endDate"b1"startDate"b1"assetPrefetchStrategy"b1"globalPresentationPolicyGroup"b1"maximumDisplays"b1"messageType"b1"modalPresentationStyle"b1"priority"b1"carousel"b1"hasCloseButton"b1}
@24@0:8Q16
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
v24@0:8d16
d16@0:8
#16@0:8
@"NSNumber"
@"NSXPCConnection"
@"<ICCloudServerListenerEndpointProviding>"
v24@0:8@"ICConnectionConfiguration"16
v40@0:8q16@"ICConnectionConfiguration"24@?<v@?@"NSError">32
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSError"B>24
v48@0:8@"ICConnectionConfiguration"16B24q28B36@?<v@?@"NSError">40
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSError">24
v32@0:8q16@?<v@?@"NSError">24
v40@0:8q16@"ICConnectionConfiguration"24@?<v@?B@"NSError">32
v32@0:8@"ICConnectionConfiguration"16@?<v@?BB>24
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSError"f>24
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSNumber"@"NSError">24
v40@0:8Q16@"ICConnectionConfiguration"24@?<v@?@"NSError">32
v32@0:8Q16@"ICConnectionConfiguration"24
v32@0:8q16@"ICConnectionConfiguration"24
v40@0:8@"NSArray"16@"ICConnectionConfiguration"24@?<v@?@"NSError"@"NSArray">32
v40@0:8Q16@"ICConnectionConfiguration"24@?<v@?@"NSArray"@"NSError">32
v64@0:8q16@"NSString"24@"NSArray"32@"NSArray"40@"ICConnectionConfiguration"48@?<v@?Q@"NSError">56
v56@0:8q16@"NSDictionary"24@"ICCloudItemIDList"32@"ICConnectionConfiguration"40@?<v@?Q@"NSError">48
v56@0:8@"NSDictionary"16@"ICCloudItemIDList"24q32@"ICConnectionConfiguration"40@?<v@?@"NSError">48
v56@0:8q16@"ICCloudAddReferral"24q32@"ICConnectionConfiguration"40@?<v@?@"NSError">48
v48@0:8q16q24@"ICConnectionConfiguration"32@?<v@?@"NSError">40
v48@0:8@"NSString"16q24@"ICConnectionConfiguration"32@?<v@?@"NSDictionary"@"NSError">40
v40@0:8q16@"ICConnectionConfiguration"24@?<v@?@"NSString"@"NSString"@"NSError">32
v40@0:8@"NSArray"16@"ICConnectionConfiguration"24@?<v@?@"NSError">32
v44@0:8@"NSArray"16B24@"ICConnectionConfiguration"28@?<v@?@"NSError">36
v48@0:8q16@"ICCloudAddReferral"24@"ICConnectionConfiguration"32@?<v@?@"NSDictionary"@"NSError">40
v40@0:8@"NSString"16@"ICConnectionConfiguration"24@?<v@?@"NSDictionary"@"NSError">32
v48@0:8@"NSDictionary"16Q24@"ICConnectionConfiguration"32@?<v@?@"NSError">40
v48@0:8@"NSDictionary"16q24@"ICConnectionConfiguration"32@?<v@?@"NSError">40
v32@0:8@"ICConnectionConfiguration"16@?<v@?B@"NSError">24
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSURL"@"NSError">24
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"NSString"16@"ICConnectionConfiguration"24@?<v@?@"NSError">32
v32@0:8@"ICConnectionConfiguration"16@?<v@?q@"NSError">24
v40@0:8@"NSArray"16@"ICConnectionConfiguration"24@?<v@?@"NSArray"@"NSError">32
v40@0:8q16@24@?32
v48@0:8@16B24q28B36@?40
v32@0:8q16@?24
v40@0:8Q16@24@?32
v32@0:8Q16@24
v64@0:8q16@24@32@40@48@?56
v56@0:8q16@24@32@40@?48
v56@0:8@16@24q32@40@?48
v56@0:8q16@24q32@40@?48
v48@0:8q16q24@32@?40
v48@0:8@16q24@32@?40
v44@0:8@16B24@28@?36
v48@0:8q16@24@32@?40
v48@0:8@16Q24@32@?40
@"NSArray"
@"ICStoreFinanceItemMetadata"
v24@0:8Q16
@?16@0:8
@"ICStoreURLRequest"
@"ICStorePlatformRequestOperation"
@"ICURLSession"
@"ICStorePlatformRequest"
v32@0:8@16@24
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v24@0:8@?<v@?B@"NSString"@"NSError">16
v24@0:8@?<v@?B@"NSError">16
v40@0:8@"NSArray"16@"ICUserIdentity"24@?<v@?B@"NSError">32
v32@0:8@"ICUserIdentity"16@?<v@?B@"NSError">24
v32@0:8@"NSDate"16@?<v@?B@"NSError">24
v40@0:8@"ICUserIdentityProperties"16@"ICUserIdentity"24@?<v@?B@"NSError">32
v40@0:8@"ICDelegateToken"16@"ICUserIdentity"24@?<v@?B@"NSError">32
@"NSError"
{?="bitDepth"b1"bitRate"b1"sampleRate"b1"codec"b1}
v20@0:8I16
@"ICRadioPlaybackHistoryItem"
v24@0:8@"NSString"16
@"ICSQLiteConnection"
^{sqlite3_stmt=}
@"ICSQLiteStatement"
v28@0:8d16i24
v24@0:8f16i20
v24@0:8i16i20
v28@0:8q16i24
v28@0:8@"NSNumber"16i24
v28@0:8@"NSData"16i24
v28@0:8@"NSString"16i24
v28@0:8@16i24
@32@0:8^{sqlite3_stmt=}16@24
^{sqlite3_stmt=}16@0:8
v28@0:8B16@?20
v36@0:8@16B24@?28
B32@0:8@16@24
@"ICInAppMessageStore"
@"AMSPushHandler"
@"<NSCopying>"
@"NSXPCListener"
@"NSMutableSet"
v24@0:8@"ICEnvironmentMonitor"16
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"NSSet"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"ICInAppMessageEntry"@"NSError">32
v32@0:8@"ICInAppMessageEntry"16@?<v@?@"NSError">24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSError">16
v44@0:8@"NSString"16@"NSDictionary"24B32@?<v@?@"NSError">36
v40@0:8@"NSString"16@"NSString"24@?<v@?@"ICInAppMessageMetadataEntry"@"NSError">32
v32@0:8@"NSSet"16@?<v@?@"NSDictionary"@"NSError">24
v48@0:8@"ICInAppMessageMetadataEntry"16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v32@0:8@"NSString"16@?<v@?@@"NSError">24
v40@0:8@16@"NSString"24@?<v@?@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?@@"NSError">32
v48@0:8@16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v44@0:8@16@24B32@?36
v48@0:8@16@24@32@?40
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v44@0:8B16@20@28@?36
@"<NSSecureCoding>"
@32@0:8@16Q24
@"NSNetService"
@"ICDelegationServiceSecuritySettings"
@"<ICDelegationConsumerNetServiceDelegate>"
v24@0:8@"NSNetService"16
v32@0:8@"NSNetService"16@"NSDictionary"24
v32@0:8@"NSNetService"16@"NSData"24
v40@0:8@"NSNetService"16@"NSInputStream"24@"NSOutputStream"32
v40@0:8@16@24@32
@"ICADIProvisionSession"
@"ICStoreMediaResponseItem"
@"ICURLRequest"
@"ICURLResponse"
@"ICContentKeySession"
B32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceLoadingRequest"24
B32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceRenewalRequest"24
v32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceLoadingRequest"24
B32@0:8@"AVAssetResourceLoader"16@"NSURLAuthenticationChallenge"24
v32@0:8@"AVAssetResourceLoader"16@"NSURLAuthenticationChallenge"24
@32@0:8@16@?24
@"ICConnectionConfiguration"
@"ICCloudServerListenerEndpointProvider"
@"ICCloudClientAvailabilityService"
@"ICCloudClientCloudService"
v48@0:8@16@24q32@?40
v48@0:8q16@24q32@?40
v40@0:8q16q24@?32
v40@0:8@16q24@?32
v36@0:8q16B24@?28
v40@0:8q16B24B28@?32
B24@0:8q16
v32@0:8Q16@?24
v32@0:8@16Q24
@"NSObject<OS_dispatch_source>"
v32@0:8@"ICClientInfo"16@?<v@?@"NSString"@"NSError">24
v32@0:8@"ICClientInfo"16@?<v@?B@"NSError">24
@"ICURLBag"
v24@0:8@?<v@?@"NSUUID">16
v32@0:8@"NSUUID"16@?<v@?>24
v32@0:8q16@?<v@?Q@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSError">16
v40@0:8@"NSString"16@"ICClientInfo"24@?<v@?@"NSString"@"NSError">32
@"ICLibraryAuthServiceClientTokenIdentifier"
@"ICLibraryAuthServiceClientTokenResult"
@20@0:8B16
Q24@0:8@16
@44@0:8@16@24B32^@36
@32@0:8#16^{_NSZone=}24
@"ICLibraryAuthServiceClientTokenResponse"
@"ICMusicSubscriptionStatus"
B32@0:8@16^@24
@"ICLibraryAuthServiceBulkClientTokenResponse"
@"NSSet"
@32@0:8@16q24
{?="expirationTimeInterval"b1"sessionID"b1}
@"ICDelegateAccountStoreOptions"
@"ICDelegateAccountStore"
@"ICDelegateAccountStoreXPCWriter"
B24@0:8@"ICSQLiteConnection"16
@32@0:8@16^@24
@"ICUserIdentityProperties"
@52@0:8@16Q24I32^@36^@44
B24@0:8^@16
B32@0:8^@16^@24
@"NSMapTable"
@"PSYInitialSyncStateObserver"
v32@0:8@"PSYInitialSyncStateObserver"16@"NSUUID"24
v24@0:8@"PSYInitialSyncStateObserver"16
@"NSNetServiceBrowser"
@"ICRequestContext"
v24@0:8@"NSNetServiceBrowser"16
v32@0:8@"NSNetServiceBrowser"16@"NSDictionary"24
v36@0:8@"NSNetServiceBrowser"16@"NSString"24B32
v36@0:8@"NSNetServiceBrowser"16@"NSNetService"24B32
v36@0:8@16@24B32
v32@0:8@"ICDelegationProviderServiceSession"16@"NSError"24
v24@0:8@"ICDelegationProviderServiceAssertion"16
@"ACAccountStore"
@"ACAccountType"
@"ICUnfairLock"
@"<ICUserIdentityStoreBackendDelegate>"
@"NSNumber"24@0:8^@16
B32@0:8@"NSNumber"16^@24
@"ICUserIdentityProperties"32@0:8@"NSNumber"16^@24
@"ICUserIdentityProperties"24@0:8^@16
v32@0:8@"NSNumber"16@?<v@?B@"NSError">24
B40@0:8@"ICUserIdentityProperties"16@"NSNumber"24^@32
@"ICLocalStoreAccountProperties"24@0:8^@16
B32@0:8@"ICLocalStoreAccountProperties"16^@24
@"ICUserVerificationContext"32@0:8@"NSNumber"16^@24
@"ICUserVerificationContext"24@0:8^@16
@"<ICUserIdentityStoreBackendDelegate>"16@0:8
v24@0:8@"<ICUserIdentityStoreBackendDelegate>"16
@24@0:8^@16
B40@0:8@16@24^@32
@36@0:8@16B24^@28
@"ICDelegateToken"
{?="dSID"b1}
@"NSDateFormatter"
@"<ICDeveloperTokenProvider>"
@44@0:8@16q24B32q36
@"ACAccount"
@"ICStoreDialogResponse"
@"ICPushNotificationsResponse"
@40@0:8@16q24@32
@32@0:8{_NSRange=QQ}16
^{__CFUserNotification=}16@0:8
v28@0:8B16^{__CFString=}20
@"ICMusicSubscriptionStatusRequest"
@"NSMutableOrderedSet"
@"NSURLSession"
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24@"NSURL"32
v56@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40
v48@0:8@16@24q32q40
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
@40@0:8@16Q24q32
v40@0:8@16@24Q32
d24@0:8@16
v40@0:8@16q24q32
@"ICMediaRedownloadResponse"
@"ICMusicRestoreRequestParameters"
@"ICIAMApplicationMessage"
{?="commandSerialNumber"b1"commandType"b1}
@"AMSBagValue"24@0:8@"NSString"16
v24@0:8@?<v@?@"AMSSnapshotBag"@"NSError">16
@"NSDate"16@0:8
@"AMSBagValue"32@0:8@"NSString"16@"ACAccount"24
@"AMSProcessInfo"16@0:8
@56@0:8@16Q24@32@40^@48
@40@0:8@16@24Q32
B32@0:8@16Q24
@32@0:8Q16Q24
B52@0:8I16@20^@28*36^@44
B40@0:8@16^@24^@32
(FPContentInfo_=I{VanillaVodkaAttributes_=I^{sinfEntry_}I}{CloudVodkaAttributes_=IIQ})16@0:8
v48@0:8@16@24@?32@?40
@48@0:8#16@24@32^@40
@"ICPlayActivityTable"
@32@0:8Q16@24
v40@0:8@16Q24@?32
v48@0:8@16Q24Q32@?40
v40@0:8Q16Q24@?32
v48@0:8Q16@24@32@?40
v44@0:8@16Q24B32@?36
v48@0:8@16B24Q28B36@?40
@"NSIndexSet"
v48@0:8Q16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v44@0:8@"NSString"16Q24B32@?<v@?@"NSArray"Q@"NSError">36
v32@0:8Q16@?<v@?@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v48@0:8@"NSArray"16Q24Q32@?<v@?@"NSError">40
{CGSize="width"d"height"d}
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
@"ICStoreArtworkSizeInfo"
@48@0:8{CGSize=dd}16@32@40
@52@0:8{CGSize=dd}16@32@40B48
^{CGColor=}24@0:8@16
@"ICFPLeaseSyncSession"
@"ICSuzeLeaseSessionConfiguration"
@"<ICSuzeLeaseSessionDelegate>"
@"ICValueHistory"
@"<ICUserIdentityStoreBackend>"
@"ICClientInfo"
v32@0:8@16q24
@"ICFileContentKeyStore"
{atomic_flag="_Value"AB}
^{MGNotificationTokenStruct=}
v24@0:8@"ICNanoPairedDeviceStatusMonitor"16
v32@0:8@"ICNanoPairedDeviceStatusMonitor"16Q24
v32@0:8@"ICNanoPairedDeviceStatusMonitor"16@"NSUUID"24
@"ICPlayActivityController"
{?="comparisonType"b1"dataType"b1"kind"b1"triggerConditionType"b1}
{?="height"b1"width"b1}
B32@0:8@"NSString"16^@24
@"NSData"32@0:8@"NSString"16^@24
@"NSError"32@0:8@"NSData"16@"NSString"24
v24@0:8@?<v@?@"NSString"@"NSData"^B>16
i24@0:8^{sqlite3=}16
@"NSProgress"
@"ICURLResponseHandler"
@"NSURLRequest"
@"NSURLSessionTask"
@"NSObject<OS_dispatch_semaphore>"
@"NSURLResponse"
@"NSMutableData"
@"AVURLAsset"
@"ICURLPerformanceMetrics"
@"NSProgress"16@0:8
{?="kind"b1}
v32@0:8Q16q24
v40@0:8Q16q24Q32
@"ICLocalStoreAccountProperties"
@"ICMusicAccountNotificationsSettingsResponse"
@"ICIAMImpressionNode"
{?="actionType"b1"pageType"b1"targetType"b1}
@72@0:8@16@24@32@40@48@56@64
@40@0:8@16@24d32
@"ICAgeVerifier"
@56@0:8@16q24q32@40@48
@48@0:8@16@24q32@40
{?="date"b1"interval"b1"trigger"b1}
@40@0:8I16I20@24^@32
q24@0:8@16
v48@0:8@16@24d32@?40
@28@0:8*16I24
@"NSError"16@0:8
@"ICStoreDialogResponse"16@0:8
{?="autoPlayMode"b1"repeatPlayMode"b1"shufflePlayMode"b1}
v40@0:8@"AMSAuthenticateTask"16@"AMSDialogRequest"24@?<v@?@"AMSDialogResult"@"NSError">32
@"ICDispatchOnce"
v28@0:8B16@20
v32@0:8d16@24
@"ICNetworkConstraints"
@"ICDeviceInfo"
@"ICURLResponseAuthenticationProvider"
@36@0:8@16@24B32
@"ICRadioStationTrack"
@"<ICDelegationServiceConnectionDelegate>"
@"MSVMessageParser"
@"ICDelegationServicePairingSession"
@"MSVStreamReader"
@"MSVStreamWriter"
v32@0:8@"MSVMessageParser"16@"NSData"24
v40@0:8@"ICDelegationServicePairingSession"16@"NSData"24@?<v@?B@"NSError">32
@48@0:8q16@24@32@40
@"ICPBDGSRequest"
{?="messageRemovalPolicy"b1"requiresDelegate"b1}
B32@0:8@16q24
@"NSUUID"
B40@0:8@16Q24^@32
B72@0:8^@16^@24Q32Q40@48@56^@64
B80@0:8^@16^@24Q32Q40Q48@56@64^@72
B32@0:8Q16^@24
B84@0:8^@16^@24Q32Q40Q48B56@60@68^@76
@32@0:8@?16Q24
@"ICPlayActivityEventContainerIDs"
@"ICPlayActivityEnqueuerProperties"
@"NSTimeZone"
@"ICPlayActivityEventItemIDs"
@"ICPlayActivityAudioQualityProperties"
@28@0:8@16B24
v40@0:8@"NSURLSession"16@"AVAssetDownloadTask"24@"NSURL"32
v136@0:8@"NSURLSession"16@"AVAssetDownloadTask"24{?={?=qiIq}{?=qiIq}}32@"NSArray"80{?={?=qiIq}{?=qiIq}}88
v40@0:8@"NSURLSession"16@"AVAssetDownloadTask"24@"AVMediaSelection"32
v40@0:8@"NSURLSession"16@"AVAggregateAssetDownloadTask"24@"NSURL"32
v40@0:8@"NSURLSession"16@"AVAggregateAssetDownloadTask"24@"AVMediaSelection"32
v144@0:8@"NSURLSession"16@"AVAggregateAssetDownloadTask"24{?={?=qiIq}{?=qiIq}}32@"NSArray"80{?={?=qiIq}{?=qiIq}}88@"AVMediaSelection"136
v136@0:8@16@24{?={?=qiIq}{?=qiIq}}32@80{?={?=qiIq}{?=qiIq}}88
v144@0:8@16@24{?={?=qiIq}{?=qiIq}}32@80{?={?=qiIq}{?=qiIq}}88@136
@"ICRemoteRequestOperation"
@"ICUserVerificationRequest"
d20@0:8i16
i20@0:8i16
q20@0:8i16
@"ICRadioPlaybackHistory"
@"ICRadioContentReference"
@"ICIAMTriggerCondition"
{?="ruleOperator"b1"type"b1}
@"NSXPCListenerEndpoint"32@0:8q16^@24
@32@0:8q16^@24
v32@0:8q16@?<v@?@"NSXPCListenerEndpoint"@"NSError">24
@56@0:8@16q24@32q40@48
{?="storeAccountID"b1"systemReleaseType"b1"privateListeningEnabled"b1"sBEnabled"b1}
@"ICPAPlayActivityEnqueuerProperties"
@"ICPAPlayModeDictionary"
@"ICPAAudioQualityDictionary"
{?="characterDisplayedCount"b1"cloudPlaylistID"b1"containerAdamID"b1"equivalencySourceAdamID"b1"eventDateTimestamp"b1"eventSecondsFromGMT"b1"itemCloudID"b1"itemDuration"b1"itemEndTime"b1"itemStartTime"b1"persistentID"b1"purchasedAdamID"b1"radioAdamID"b1"stationID"b1"storeAccountID"b1"subscriptionAdamID"b1"tvShowPurchasedAdamID"b1"tvShowSubscriptionAdamID"b1"audioQualityPreference"b1"containerType"b1"displayType"b1"endReasonType"b1"eventType"b1"itemType"b1"mediaType"b1"playbackFormatPreference"b1"reasonHintType"b1"sourceType"b1"systemReleaseType"b1"internalBuild"b1"offline"b1"privateListeningEnabled"b1"sBEnabled"b1"siriInitiated"b1}
@24@0:8#16
^{PairingSessionPrivate=}
@"<ICDelegationServicePairingSessionDelegate>"
@"ICPBDGSFinishDelegationResponse"
@"ICPBDGSStartDelegationResponse"
{?="requestUniqueID"b1}
@"AFMultiUserConnection"
v36@0:8@"NSNumber"16B24@?<v@?@"ICLibraryAuthServiceClientTokenResult"@"NSError">28
v36@0:8@"NSSet"16B24@?<v@?@"NSDictionary"@"NSError">28
v40@0:8@"ICLibraryAuthServiceClientTokenResult"16@"NSNumber"24@?<v@?@"NSError">32
@32@0:8r^v16@24
r^v16@0:8
{?="sessionID"b1}
@"ICMusicSubscriptionLeaseStatus"
@"<ICMusicSubscriptionLeaseSessionDelegate>"
@44@0:8@16B24@28@36
v24@0:8@?<v@?B>16
{?="actionTimestampMillis"b1"adamId"b1"createdOffsetMillis"b1"preferenceType"b1}
@"ICSAPSession"
@"NSUserDefaults"
^{__CFRunLoopSource=}
^{__CFRunLoopSource=}16@0:8
v24@0:8^{__CFRunLoopSource=}16
v32@0:8^{__CFUserNotification=}16@?24
v32@0:8^{__CFUserNotification=}16Q24
@"ICAddToWishListResponse"
@56@0:8@16@24q32@40@48
v24@0:8@?<v@?@"ICStorePlatformMetadata"^B>16
@"ICStorePlatformMetadata"24@0:8@"NSString"16
@"NSArray"16@0:8
@"NSNumber"16@0:8
@32@0:8@16B24B28
v40@0:8@16@?24@?32
v36@0:8Q16B24@28
@"ICPBDGSResponse"
@"ICPBDGSFinishDelegationRequest"
@"ICPBDGSStartDelegationRequest"
{?="uniqueID"b1}
v64@0:8q16q24q32@40@48@?56
v36@0:8B16@20@?28
v56@0:8q16q24q32@40@?48
v64@0:8q16q24q32@"ICConnectionConfiguration"40@"NSDate"48@?<v@?@"NSError">56
v48@0:8q16@"NSString"24@"ICConnectionConfiguration"32@?<v@?@"NSError">40
v36@0:8B16@"ICConnectionConfiguration"20@?<v@?@"NSError">28
@"RadiosPreferences"
^{__CTServerConnection=}
v28@0:8B16q20
@"ICDelegationServiceConnection"
@"<ICDelegationProviderServiceSessionDelegate>"
@"ICDelegationProviderServiceProtocolHandler"
@"ICDelegationProviderNetService"
v24@0:8@"ICDelegationServiceConnection"16
v32@0:8@"ICDelegationServiceConnection"16@"NSError"24
B32@0:8@"ICDelegationServiceConnection"16@"ICPBDGSRequest"24
@56@0:8@16@24@32@40@48
@"ICDelegationPlayInfoRequestOperation"
@"ICDelegationPlayInfoRequest"
v36@0:8B16@20@28
@"ICIAMSynchronizeMessagesResponse"
v32@0:8@"ICRemoteRequestOperationExecutionContext"16@?<v@?@"ICRemoteRequestOperationExecutionResponse">24
@"AVContentKeySession"
@"<ICContentKeyStoreProtocol>"
v32@0:8@"AVContentKeySession"16@"AVContentKeyRequest"24
v32@0:8@"AVContentKeySession"16@"AVPersistableContentKeyRequest"24
v40@0:8@"AVContentKeySession"16@"NSData"24@32
v40@0:8@"AVContentKeySession"16@"AVContentKeyRequest"24@"NSError"32
B40@0:8@"AVContentKeySession"16@"AVContentKeyRequest"24@"NSString"32
v24@0:8@"AVContentKeySession"16
B40@0:8@16@24@32
@"AMSMediaTokenService"
@"ICStoreDialogResponseButtonAction"
@44@0:8q16B24@28@36
v40@0:8@"ICMusicSubscriptionStatusResponse"16@"NSUUID"24@"NSError"32
B32@0:8@16@?24
@"ICDelegationConsumerNetService"
@"ICDelegationConsumerServiceProtocolHandler"
@"ICDelegationConsumerServiceRequest"
v40@0:8@"ICDelegationConsumerNetService"16@"NSInputStream"24@"NSOutputStream"32
@48@0:8@16q24@32@40
@"CoreTelephonyClient"
@"CTXPCServiceSubscriptionContext"
B28@0:8B16^@20
v32@0:8^B16^B24
v24@0:8B16B20
v64@0:8@"ICMusicSubscriptionLeaseSession"16@"ICMusicSubscriptionLeasePlaybackRequest"24@"ICMusicSubscriptionPlaybackResponse"32@"NSError"40@"NSArray"48@?<v@?@"ICMusicSubscriptionLeaseStatus"@"NSDate">56
v32@0:8@"ICMusicSubscriptionLeaseSession"16@?<v@?@"ICMusicSubscriptionLeaseStatus"@"NSError">24
v64@0:8@16@24@32@40@48@?56
I24@0:8@16
v36@0:8@16I24q28
{?="commandSerialNumber"b1"dSID"b1"activeCommandsOnly"b1}
@24@0:8d16
v32@0:8@"ICMusicSubscriptionStatusRequest"16@"NSUUID"24
@"ICUserVerificationContext"
@"ICUserIdentityContext"
{?="accountID"b1"sessionID"b1}
@40@0:8@16@24q32
@32@0:8B16B20@24
@"ICUserIdentityStoreCoding"
v24@0:8@"<ICUserIdentityStoreBackend>"16
v32@0:8@?16@?24
v40@0:8q16@?24@?32
v44@0:8@16B24@?28@?36
B20@0:8B16
v24@0:8:16
B44@0:8@16B24@28^@36
v56@0:8@16@24@32q40@?48
@32@0:8{CGSize=dd}16
@"ICDelegationNetServiceTXTRecord"
^{sqlite3=}
@"<ICSQLiteConnectionDelegate>"
@"ICSQLiteConnectionOptions"
B40@0:8@16^@24@?32
v44@0:8Q16I24@28@?36
v36@0:8Q16I24@?28
@"ICSecureKeyDeliveryRequest"
@"NSHashTable"
{os_unfair_recursive_lock_s="ourl_lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"ourl_count"I}
@"NWPathEvaluator"
v48@0:8@16@24@32^v40
B48@0:8Q16^@24^@32^@40
@"ICDelegationConsumerService"
v56@0:8@16@24@32@40@48
v32@0:8@16^{_NSZone=}24
^{__SCPreferences=}
{?="commandSerialNumber"b1}
