orthograpy
language
AXSpeechPronunciationOptions: %@ %@
v8@?0
AXSpeechPronunciationClient
AXAssetAndDataServer
assistant
Received result from server for message: %@
results
error
audioLevel
Request start session: %d
Sending data: %{public}@
Error: %@
options
Request stop session: %d
Request cance session %d
v24@?0@"NSDictionary"8@"NSError"16
com.apple.accessibility.component-change
AXAssetAndDataServer-%@
v16@?0@"NSNotification"8
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityUmbrellaFramework/Frameworks/SpeechAssetServices/AXSpeechAssetMonitorHelper.m
-[AXSpeechAssetMonitorHelper clearCurrentVoicesAndRefreshTTSVoiceListOnNextBoot]
Should not attempt to clear voice cache using clearCurrentVoicesAndRefreshTTSVoiceListOnNextBoot unless we are in the data migrator
AXAssetsService
Unable to find class %s
com.apple.speech.synthesis.voice.Victoria
com.apple.speech.synthesis.voice.Fred
asset-work-queue
download-voices
B24@?0@"MAAsset"8Q16
(attributes.%@ != %@)
(attributes.%K BETWEEN %@)
((%@ IN attributes.%K) || (%@ IN attributes.%K) || (%@ IN attributes.%K))
(attributes.%@ = %@)
(%d = attributes.%K)
((%@ IN attributes.%K) || (%@ = attributes.%K))
 && 
v16@?0q8
v16@?0@"MAProgressNotification"8
v28@?0d8B16@"NSError"20
AXAssetClient-voice-assets-%@
Starting process of updating available speech assets.
Told AXSpeechAssetUpdater to update available speech assets: %@
completionBlock
VOICE_SAMPLE_STRING_SIRI
GeneralAccessibility
VOICE_SAMPLE_STRING
gryphon_GetMinCompatibilityVersion
gryphon_GetCurrentCompatibilityVersion
%{public}@
Check for asset updates: %d
Beginning check for asset updates (force: %d
No extant voices available so force asset update:
Did not complete check for asset updates (force: %d, isVoiceOverRunning: %d
Aborting asset update because we updated less than an hour ago. %f - duration: %f
Checking for asset updates (force: %d, isVoiceOverRunning: %d).
Waited 60 seconds for our voices, will monitor network changes to try to get voices again
Starting proces of updating available voices...
Told AXAssetAndDataServer to update available voice assets. Reply: %{public}@
AXSpeechAssetMonitorHelper: Migration task timer set for 5 minutes.
AXSpeechAssetMonitorHelper: Running migration from SpringBoard after first unlock.
**VoiceProvider: SynthesisProvider audio components changed
**VoiceProvider: Running on-boot synthesis provider component scan. 
**VoiceProvider: Sending synthesis provider component change notification
fetched asset %{public}@
Querying for siri voice: %@
Could not retrieve language for voiceId: %@
Could not parse the voiceID %{public}@ as a Nashville voice ID
Querying for: %{public}@ predicate: %@
Retrieved results: %{public}@
Retrieved results local only: %{public}@
Further filtered results: %{public}@
MAAssetQuery error fetching results: %{public}@
Deleting asset: %{public}@
Deleted asset: %{public}@ [error: %{public}@]
starting download asset %{public}@
Asset stalled, cancelling: %{public}@
Cancelled download: %{public}@
Begin download: %{public}@
Asset download failed with error: %{public}@
asset download progress: %{public}@ %{public}f
Retrieved asset for %@ %@ -> %@
Starting siri download %@
Siri download progress %@ = %d
Not notifying Siri of voice download because voice download was requested from AXUIServer. Usage should be updated using AXAssetAndDataServer directly.
Request asset progres: %{public}@ %{public}@
Stop downloading: %{public}@, %{public}@
Cancel download %{public}@: %{public}@
Delete siri asset: %{public}@, %{public}@
Deleting asset: %{public}@, %{public}@
PREMIUM: Is reachable: %d
softlink:r:path:/System/Library/PrivateFrameworks/AXAssetLoader.framework/AXAssetLoader
softlink:r:path:/System/Library/PrivateFrameworks/SiriTTS.framework/SiriTTS
AXSpeechPronunciationOptions
NSSecureCoding
NSCoding
AXSpeechPronunciationHelper
AXUIClientDelegate
NSObject
AXSpeechAssetMonitorHelper
AXSettingsVoiceAssetManager
AVSpeechSynthesizerDelegate
init
decodeObjectOfClass:forKey:
setOrthography:
setLanguage:
orthography
encodeObject:forKey:
language
stringWithFormat:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
description
.cxx_destruct
_orthography
_language
T@"NSString",&,N,V_orthography
T@"NSString",&,N,V_language
initWithIdentifier:serviceBundleName:
_assetUpdaterClient
setDelegate:
dealloc
sharedPreferences
dictationIsEnabled
sharedInstance
ignoreLogging
identifier
objectForKeyedSubscript:
errorWithDomain:code:userInfo:
sendSynchronousMessage:withIdentifier:error:
floatValue
copy
archivedDataWithRootObject:requiringSecureCoding:error:
dictionaryWithObjects:forKeys:count:
mainAccessQueue
sendAsynchronousMessage:withIdentifier:targetAccessQueue:completion:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
userInterfaceClient:processMessageFromServer:withIdentifier:error:
userInterfaceClient:messageFromServerForWithIdentifierShouldBeProcessedAsynchronously:
userInterfaceClient:processMessageFromServerAsynchronously:withIdentifier:completion:
userInterfaceClient:accessQueueForProcessingMessageWithIdentifier:
userInterfaceClient:messageWithIdentifierRequiresWritingBlock:
userInterfaceClient:willActivateUserInterfaceServiceWithInitializationMessage:
connectionWithServiceWasInterruptedForUserInterfaceClient:
supportsPronunciationSessions
audioLevel
startPronunciationSession:resultCallback:
stopPronunciationSession
cancelPronunciationSession
_inSession
_resultCallback
_monitorSpeechExtensionVoiceChanges
_monitorSpeechAssetChanges
siriAutoUpdateListInitialized
numberWithInt:
extantVoicesExist
currentVoicesExist
_areMobileAssetsPresent
dataMigratorRequestedVoiceCacheRefresh
setDataMigratorRequestedVoiceCacheRefresh:
_platformSupportsMobileAssetVoices
_monitorForNetworkChanges
extantVoices
countByEnumeratingWithState:objects:count:
canBeDownloaded
_registerForReachabilityNotifications
_clientUpdateAvailableSpeechAssets
restartTTSResourceMigration
sharedAudioUnitComponentManager
defaultCenter
mainQueue
_speechExtensionComponentsChanged
addObserverForName:object:queue:usingBlock:
startMigrationOnDeviceUnlock
runFirstBootTasks:
speechAssetUpdaterClient
_checkClientForUpdates:
_unregisterForReachabilityNotifications
updateAvailableSpeechAssets
clearCurrentVoicesAndRefreshTTSVoiceListOnNextBoot
_lastVoiceAssetUpdateTime
_reachability
_assetService
initWithOptions:
addPointer:
count
removePointerAtIndex:
compact
setAllowsCellularAccess:
setDiscretionary:
isSiriVoiceIdentifier:
isOldSiriVoiceIdentifier:
hasPrefix:
_allAssetsForVoiceId:forDeletion:
state
_assetTypeForVoiceId:
firstObject
axFilterObjectsUsingBlock:
speechVoices
isEqualToString:
initWithType:
setDoNotBlockBeforeFirstUnlock:
addObject:
numberWithUnsignedInt:
arrayWithObjects:count:
stringByReplacingOccurrencesOfString:withString:
addKeyValuePair:with:
isNeuralSiriVoiceIdentifier:
isCombinedVoice
isInstalled
rangeOfString:options:
substringWithRange:
componentsJoinedByString:
predicateWithFormat:argumentArray:
nameWithoutQuality
returnTypes:
queryParams
queryMetaDataSync
results
filteredArrayUsingPredicate:
assetType
removeObject:
setAccessibilityAssetState:
_assetForVoiceId:forDeletion:
_allInstalledAssetsForVoiceId:
arrayWithArray:
objectAtIndexedSubscript:
removeObjectAtIndex:
getLocalFileUrl
alexLocalAssetURL
setAlexLocalAssetURL:
clientUpdateAvailableSpeechAssets
purge:
isAssetManagedBySiriForVoiceId:
mobileAssetDownloadQueue
_startDownloadingSiriVoice:
_startDownloadingMobileAssetVoice:
_cachedAssetForVoiceId:
isStalled
cancelDownload:
_currentDelegates
assetManagerFinishedDownloadingAsset:wasCancelled:
diskSizeForAsset:
_handleAssetProgress:voiceId:diskSize:asset:
attachProgressCallBack:
_mobileAssetDownloadOptions
currentVoices
startDownload:then:
totalWritten
totalExpected
attributes
objectForKey:
assetManagerVoiceLanguageDownloadProgress:progress:storageSize:requiredDiskSpace:versionId:
setObject:forKey:
unsignedIntegerValue
spaceCheck:
isVocalizerVoiceIdentifier:
assetForLanguage:gender:footprint:voiceName:voiceType:
voiceAssetForVoiceId:
numberWithDouble:
fileSize
masteredVersion
languages
_notifySiriVoiceAssetUsageChanged:forLanguage:
downloadAsset:progressHandler:
isCombinedVocalizerVoiceIdentifier:
isCompactVocalizerVoiceIdentifier:
mobileAssetWorkQueue
_requestVoiceDownloadProgress:
isDownloading
_requestSiriVoiceDownloadProgress:
_requestMobileAssetVoiceDownloadProgress:
refreshState
_stopDownloadingSiriAssetVoice:
_stopDownloadingMobileAssetVoice:
stopDownload:
_deleteSiriAssetVoice:
_deleteMobileAssetVoice:
purgeAsset:
_accessibilityValueForKey:
setIsInternalSynth:
setUsesApplicationAudioSession:
stopSpeakingAtBoundary:
speechUtteranceWithString:
_accessibilitySetValue:forKey:storageMode:
setVoice:
speakUtterance:
speechSynthesizer:didStartSpeechUtterance:
speechSynthesizer:didFinishSpeechUtterance:
speechSynthesizer:didPauseSpeechUtterance:
speechSynthesizer:didContinueSpeechUtterance:
speechSynthesizer:didCancelSpeechUtterance:
speechSynthesizer:willSpeakRangeOfSpeechString:utterance:
addDelegate:
removeDelegate:
setAssetsForTesting:
assetsForTesting
inUnitTestMode
replaceTestAsset:withAsset:
setSelectedIdsForTesting:
selectedIdsForTesting
mobileAssetForVoiceId:
allInstalledAssetsForVoiceId:
cleanUpExtraInstalledAssetsIfNecessary:
startDownloadingVoice:
requestVoiceDownloadProgress:
stopDownloadingVoice:
deleteDownloadVoice:
updateAvailableSpeechAssetsSynchronously
_updateAllowedToDownload
allowedToDownloadVoiceAssets
playSample:completion:
_delegates
_samplePlayer
assetManagerUpdateToDownloadAvailabilityChanged
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@16@0:8
v16@0:8
@"NSString"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@48@0:8@16@24Q32^@40
B32@0:8@16Q24
v48@0:8@16@24Q32@?40
@32@0:8@16Q24
v32@0:8@16@24
@"NSDictionary"48@0:8@"AXUIClient"16@"NSDictionary"24Q32^@40
B32@0:8@"AXUIClient"16Q24
v48@0:8@"AXUIClient"16@"NSDictionary"24Q32@?<v@?@"NSDictionary"@"NSError">40
@"AXAccessQueue"32@0:8@"AXUIClient"16Q24
v32@0:8@"AXUIClient"16@"NSMutableDictionary"24
v24@0:8@"AXUIClient"16
f16@0:8
v32@0:8@16@?24
v20@0:8B16
^{__SCNetworkReachability=}
@"AXAssetsService"
v48@0:8@16{_NSRange=QQ}24@40
v32@0:8@"AVSpeechSynthesizer"16@"AVSpeechUtterance"24
v48@0:8@"AVSpeechSynthesizer"16{_NSRange=QQ}24@"AVSpeechUtterance"40
@28@0:8@16B24
v48@0:8@16@24q32@40
q24@0:8@16
@"NSPointerArray"
@"AVSpeechSynthesizer"
orthograpy
language
AXSpeechPronunciationOptions: %@ %@
v8@?0
AXSpeechPronunciationClient
AXAssetAndDataServer
assistant
Received result from server for message: %@
results
error
audioLevel
Request start session: %d
Sending data: %{public}@
Error: %@
options
Request stop session: %d
Request cance session %d
v24@?0@"NSDictionary"8@"NSError"16
com.apple.accessibility.component-change
AXAssetAndDataServer-%@
v16@?0@"NSNotification"8
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityUmbrellaFramework/Frameworks/SpeechAssetServices/AXSpeechAssetMonitorHelper.m
-[AXSpeechAssetMonitorHelper clearCurrentVoicesAndRefreshTTSVoiceListOnNextBoot]
Should not attempt to clear voice cache using clearCurrentVoicesAndRefreshTTSVoiceListOnNextBoot unless we are in the data migrator
AXAssetsService
Unable to find class %s
com.apple.speech.synthesis.voice.Victoria
com.apple.speech.synthesis.voice.Fred
asset-work-queue
download-voices
B24@?0@"MAAsset"8Q16
(attributes.%@ != %@)
(attributes.%K BETWEEN %@)
((%@ IN attributes.%K) || (%@ IN attributes.%K) || (%@ IN attributes.%K))
(attributes.%@ = %@)
(%d = attributes.%K)
((%@ IN attributes.%K) || (%@ = attributes.%K))
 && 
v16@?0q8
v16@?0@"MAProgressNotification"8
v28@?0d8B16@"NSError"20
AXAssetClient-voice-assets-%@
Starting process of updating available speech assets.
Told AXSpeechAssetUpdater to update available speech assets: %@
completionBlock
VOICE_SAMPLE_STRING_SIRI
GeneralAccessibility
VOICE_SAMPLE_STRING
gryphon_GetMinCompatibilityVersion
gryphon_GetCurrentCompatibilityVersion
%{public}@
Check for asset updates: %d
Beginning check for asset updates (force: %d
No extant voices available so force asset update:
Did not complete check for asset updates (force: %d, isVoiceOverRunning: %d
Aborting asset update because we updated less than an hour ago. %f - duration: %f
Checking for asset updates (force: %d, isVoiceOverRunning: %d).
Waited 60 seconds for our voices, will monitor network changes to try to get voices again
Starting proces of updating available voices...
Told AXAssetAndDataServer to update available voice assets. Reply: %{public}@
AXSpeechAssetMonitorHelper: Migration task timer set for 5 minutes.
AXSpeechAssetMonitorHelper: Running migration from SpringBoard after first unlock.
**VoiceProvider: SynthesisProvider audio components changed
**VoiceProvider: Running on-boot synthesis provider component scan. 
**VoiceProvider: Sending synthesis provider component change notification
fetched asset %{public}@
Querying for siri voice: %@
Could not retrieve language for voiceId: %@
Could not parse the voiceID %{public}@ as a Nashville voice ID
Querying for: %{public}@ predicate: %@
Retrieved results: %{public}@
Retrieved results local only: %{public}@
Further filtered results: %{public}@
MAAssetQuery error fetching results: %{public}@
Deleting asset: %{public}@
Deleted asset: %{public}@ [error: %{public}@]
starting download asset %{public}@
Asset stalled, cancelling: %{public}@
Cancelled download: %{public}@
Begin download: %{public}@
Asset download failed with error: %{public}@
asset download progress: %{public}@ %{public}f
Retrieved asset for %@ %@ -> %@
Starting siri download %@
Siri download progress %@ = %d
Not notifying Siri of voice download because voice download was requested from AXUIServer. Usage should be updated using AXAssetAndDataServer directly.
Request asset progres: %{public}@ %{public}@
Stop downloading: %{public}@, %{public}@
Cancel download %{public}@: %{public}@
Delete siri asset: %{public}@, %{public}@
Deleting asset: %{public}@, %{public}@
PREMIUM: Is reachable: %d
softlink:r:path:/System/Library/PrivateFrameworks/AXAssetLoader.framework/AXAssetLoader
softlink:r:path:/System/Library/PrivateFrameworks/SiriTTS.framework/SiriTTS
AXSpeechPronunciationOptions
NSSecureCoding
NSCoding
AXSpeechPronunciationHelper
AXUIClientDelegate
NSObject
AXSpeechAssetMonitorHelper
AXSettingsVoiceAssetManager
AVSpeechSynthesizerDelegate
assetType
numberWithInt:
masteredVersion
siriAutoUpdateListInitialized
ignoreLogging
cancelDownload:
restartTTSResourceMigration
defaultCenter
setAccessibilityAssetState:
predicateWithFormat:argumentArray:
startDownload:then:
unsignedIntegerValue
setDiscretionary:
assetManagerVoiceLanguageDownloadProgress:progress:storageSize:requiredDiskSpace:versionId:
encodeObject:forKey:
rangeOfString:options:
addObject:
isStalled
arrayWithArray:
downloadAsset:progressHandler:
stringByReplacingOccurrencesOfString:withString:
isEqualToString:
filteredArrayUsingPredicate:
sharedPreferences
sendSynchronousMessage:withIdentifier:error:
stopSpeakingAtBoundary:
identifier
decodeObjectOfClass:forKey:
speechVoices
fileSize
addKeyValuePair:with:
queryParams
numberWithDouble:
assetManagerUpdateToDownloadAvailabilityChanged
setDelegate:
mainQueue
canBeDownloaded
setObject:forKey:
totalWritten
removePointerAtIndex:
isSiriVoiceIdentifier:
speechUtteranceWithString:
copy
archivedDataWithRootObject:requiringSecureCoding:error:
hasPrefix:
dataMigratorRequestedVoiceCacheRefresh
stopDownload:
objectForKeyedSubscript:
sendAsynchronousMessage:withIdentifier:targetAccessQueue:completion:
isDownloading
initWithType:
queryMetaDataSync
totalExpected
axFilterObjectsUsingBlock:
setDataMigratorRequestedVoiceCacheRefresh:
mainAccessQueue
alexLocalAssetURL
objectForKey:
extantVoicesExist
setIsInternalSynth:
assetManagerFinishedDownloadingAsset:wasCancelled:
speakUtterance:
removeObjectAtIndex:
componentsJoinedByString:
nameWithoutQuality
getLocalFileUrl
_accessibilitySetValue:forKey:storageMode:
purgeAsset:
isOldSiriVoiceIdentifier:
currentVoicesExist
runFirstBootTasks:
sharedAudioUnitComponentManager
setVoice:
isCompactVocalizerVoiceIdentifier:
languages
attributes
setAllowsCellularAccess:
initWithOptions:
dictionaryWithObjects:forKeys:count:
state
assetForLanguage:gender:footprint:voiceName:voiceType:
compact
addPointer:
currentVoices
extantVoices
removeObject:
objectAtIndexedSubscript:
refreshState
isNeuralSiriVoiceIdentifier:
substringWithRange:
spaceCheck:
returnTypes:
floatValue
attachProgressCallBack:
setUsesApplicationAudioSession:
setAlexLocalAssetURL:
_accessibilityValueForKey:
purge:
initWithIdentifier:serviceBundleName:
dictationIsEnabled
isCombinedVoice
setDoNotBlockBeforeFirstUnlock:
numberWithUnsignedInt:
isVocalizerVoiceIdentifier:
addObserverForName:object:queue:usingBlock:
errorWithDomain:code:userInfo:
arrayWithObjects:count:
isInstalled
count
results
isCombinedVocalizerVoiceIdentifier:
firstObject
countByEnumeratingWithState:objects:count:
stringWithFormat:
init
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
description
orthography
setOrthography:
language
setLanguage:
.cxx_destruct
_orthography
_language
T@"NSString",&,N,V_orthography
T@"NSString",&,N,V_language
dealloc
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
userInterfaceClient:processMessageFromServer:withIdentifier:error:
userInterfaceClient:messageFromServerForWithIdentifierShouldBeProcessedAsynchronously:
userInterfaceClient:processMessageFromServerAsynchronously:withIdentifier:completion:
userInterfaceClient:accessQueueForProcessingMessageWithIdentifier:
userInterfaceClient:messageWithIdentifierRequiresWritingBlock:
userInterfaceClient:willActivateUserInterfaceServiceWithInitializationMessage:
connectionWithServiceWasInterruptedForUserInterfaceClient:
_assetUpdaterClient
supportsPronunciationSessions
audioLevel
startPronunciationSession:resultCallback:
stopPronunciationSession
cancelPronunciationSession
_inSession
_resultCallback
sharedInstance
speechAssetUpdaterClient
_platformSupportsMobileAssetVoices
_checkClientForUpdates:
_areMobileAssetsPresent
_registerForReachabilityNotifications
_unregisterForReachabilityNotifications
_monitorForNetworkChanges
_clientUpdateAvailableSpeechAssets
updateAvailableSpeechAssets
startMigrationOnDeviceUnlock
_monitorSpeechExtensionVoiceChanges
_speechExtensionComponentsChanged
_monitorSpeechAssetChanges
clearCurrentVoicesAndRefreshTTSVoiceListOnNextBoot
_lastVoiceAssetUpdateTime
_reachability
_assetService
speechSynthesizer:didStartSpeechUtterance:
speechSynthesizer:didFinishSpeechUtterance:
speechSynthesizer:didPauseSpeechUtterance:
speechSynthesizer:didContinueSpeechUtterance:
speechSynthesizer:didCancelSpeechUtterance:
speechSynthesizer:willSpeakRangeOfSpeechString:utterance:
addDelegate:
mobileAssetWorkQueue
mobileAssetDownloadQueue
removeDelegate:
_mobileAssetDownloadOptions
_assetTypeForVoiceId:
_assetForVoiceId:forDeletion:
_allInstalledAssetsForVoiceId:
_allAssetsForVoiceId:forDeletion:
_currentDelegates
setAssetsForTesting:
assetsForTesting
inUnitTestMode
replaceTestAsset:withAsset:
setSelectedIdsForTesting:
selectedIdsForTesting
mobileAssetForVoiceId:
allInstalledAssetsForVoiceId:
cleanUpExtraInstalledAssetsIfNecessary:
startDownloadingVoice:
_startDownloadingMobileAssetVoice:
_handleAssetProgress:voiceId:diskSize:asset:
_cachedAssetForVoiceId:
diskSizeForAsset:
voiceAssetForVoiceId:
_startDownloadingSiriVoice:
isAssetManagedBySiriForVoiceId:
_notifySiriVoiceAssetUsageChanged:forLanguage:
requestVoiceDownloadProgress:
_requestSiriVoiceDownloadProgress:
_requestVoiceDownloadProgress:
_requestMobileAssetVoiceDownloadProgress:
stopDownloadingVoice:
_stopDownloadingSiriAssetVoice:
_stopDownloadingMobileAssetVoice:
deleteDownloadVoice:
_deleteSiriAssetVoice:
_deleteMobileAssetVoice:
updateAvailableSpeechAssetsSynchronously
clientUpdateAvailableSpeechAssets
_updateAllowedToDownload
allowedToDownloadVoiceAssets
playSample:completion:
_delegates
_samplePlayer
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@16@0:8
v16@0:8
@"NSString"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@48@0:8@16@24Q32^@40
B32@0:8@16Q24
v48@0:8@16@24Q32@?40
@32@0:8@16Q24
v32@0:8@16@24
@"NSDictionary"48@0:8@"AXUIClient"16@"NSDictionary"24Q32^@40
B32@0:8@"AXUIClient"16Q24
v48@0:8@"AXUIClient"16@"NSDictionary"24Q32@?<v@?@"NSDictionary"@"NSError">40
@"AXAccessQueue"32@0:8@"AXUIClient"16Q24
v32@0:8@"AXUIClient"16@"NSMutableDictionary"24
v24@0:8@"AXUIClient"16
f16@0:8
v32@0:8@16@?24
v20@0:8B16
^{__SCNetworkReachability=}
@"AXAssetsService"
v48@0:8@16{_NSRange=QQ}24@40
v32@0:8@"AVSpeechSynthesizer"16@"AVSpeechUtterance"24
v48@0:8@"AVSpeechSynthesizer"16{_NSRange=QQ}24@"AVSpeechUtterance"40
@28@0:8@16B24
v48@0:8@16@24q32@40
q24@0:8@16
@"NSPointerArray"
@"AVSpeechSynthesizer"
