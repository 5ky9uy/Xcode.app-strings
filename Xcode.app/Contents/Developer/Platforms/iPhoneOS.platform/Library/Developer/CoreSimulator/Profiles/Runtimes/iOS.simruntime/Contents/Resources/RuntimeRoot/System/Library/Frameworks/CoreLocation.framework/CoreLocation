@(#)PROGRAM:CoreLocation  PROJECT:CoreLocation-2667.0.25
NSt3__120__shared_ptr_emplaceI19CLConnectionMessageNS_9allocatorIS1_EEEE
@<@A
15CLNameValuePair
@10BasicMutex
5Mutex
11NonCopyable
N13CLPreferences10OtherPrefsE
13CLPreferences
14CLPlatformInfo
16CLDaemonSettings
NSt3__120__shared_ptr_pointerIP16CLDaemonSettingsN12_GLOBAL__N_112null_deleterENS_9allocatorIS1_EEEE
N12_GLOBAL__N_112null_deleterE
5CLLog
NSt3__120__shared_ptr_pointerIP19CLCircularLogBufferNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI19CLCircularLogBufferE27__shared_ptr_default_deleteIS1_S1_EE
@10CLSettings
p@f@
@ffffff
MbP?
sA-C
Zw+?
Zwk?
xVXA
xVXA
9CLLogBase
non-matching retain (%p) and release (%p) functions in context, ignoring
Failed to initilize fHeadingCalibrationDisplayMutex, error code: %{public}d
CL: CLClientCreateWithBundleIdentifierAndPath
{"msg%{public}.0s":"CLClientCreateWithBundleIdentifierAndPath", "event":%{public, location:escape_only}s, "effectiveBundleIdentifier":%{public, location:escape_only}@, "effectiveBundlePath":%{public, location:escape_only}@}
{"msg%{public}.0s":"client allocated", "client":"%{public}p"}
{"msg%{public}.0s":"client about to be destroyed", "client":"%{public}p"}
{"msg%{public}.0s":"CLClient needs to be invalidated first before destroying.", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"client->fContext should be NULL", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Location callback block not executed in a timely manner!
Discarding message for event %{private}d because of too many unprocessed messages
received client will resign active notification
received client did become active notification
Missing UsageDescription key for requested authorization: %{public}d
Invalid requested authorization: %{public}d
CL: CLClientIsLocationServicesEnabled
{"msg%{public}.0s":"CLClientIsLocationServicesEnabled", "event":%{public, location:escape_only}s}
#Warning CLInternalGetLocationServicesEnabled failed: could not reach daemon
CL: CLClientIsAuthorizationPromptMapDisplayEnabled
{"msg%{public}.0s":"CLClientIsAuthorizationPromptMapDisplayEnabled", "event":%{public, location:escape_only}s}
#Warning CLInternalGetAuthorizationPromptMapDisplayEnabled failed: could not reach daemon
{"msg%{public}.0s":"invalidating client", "client":"%{public}p"}
CLClient is deprecated. Will be obsolete soon. (%{public}s)
{"msg%{public}.0s":"#NullIsland Received a latitude or longitude from getLocationForBundleID that was exactly zero", "latIsZero":%{public}hhd, "lonIsZero":%{public}hhd, "location":%{private, location:CLClientLocation}.*P}
{"msg%{public}.0s":"CLClientShowHeadingCalibration", "showHeadingCal":%{public}hhd, "isHeadingCalibrated":%{public}hhd, "isApplicationActive":%{public}hhd, "isUpdatingHeading":%{public}hhd}
Application inactive, will not show heading calibration
Fence: CLClientRequestRegionState, unsupported fence type, %{private}d
{"msg%{public}.0s":"Unable to get vertices from encoded data", "error":%{public, location:escape_only}@}
Number of vertices received doesn't match stored, %{public}d, %{public}lu
Number of vertices received invalid, %{public}d, internal
Copied %{private}d vertices
{"msg%{public}.0s":"#Warning Client is subject to corrective compensation, but hasn't been updated to find out about it yet"}
kCLConnectionMessageAutomaticPromptingEnabled is not supported
Invalid call to CLClientGetAutopauseState
malformed message: kCLConnectionMessageAutopauseStatus
CL: _CLClientCreateConnection
{"msg%{public}.0s":"_CLClientCreateConnection", "event":%{public, location:escape_only}s, "client":"%{public}p"}
CL: CLClientInterruptionHandler
{"msg%{public}.0s":"CLClientInterruptionHandler", "event":%{public, location:escape_only}s, "client":"%{public}p"}
Got unhandled message %s from daemon
{"msg%{public}.0s":"Unable to encode vertices for polygonal region"}
{"msg%{public}.0s":"#location #routine sendLocations to RT, didUpdateLocations)"}
{"msg%{public}.0s":"#location #routine sendLocations to RT, not respondsToSelector @selector(locationManager:didUpdateLocations:)"}
{"msg%{public}.0s":"#location #routine sendLocations to RT, didUpdateLocations:withReply"}
{"msg%{public}.0s":"#location #routine sendLocations to RT, not respondsToSelector @selector(locationManager:didUpdateLocations:completion:)"}
{"msg%{public}.0s":"#location #routine createConnection"}
{"msg%{public}.0s":"Non-specific CLEmergencyEnablementAssertion is no longer supported #CLEEA"}
{"msg%{public}.0s":"Already in a transaction. LocationManager threading bug?", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "new":%{public, location:_CLLocationManagerStateTrackerState}.*P}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "old":"%{public}p", "new":"%{public}p"}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "old":"%{public}f", "new":"%{public}f"}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "old":%{public}hhd, "new":%{public}hhd}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "old":%{public, location:CLClientAuthorizationStatus}lld, "new":%{public, location:CLClientAuthorizationStatus}lld}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "old":%{public, location:CLActivityType}lld, "new":%{public, location:CLActivityType}lld}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "old":%{public, location:CLAutoPause}lld, "new":%{public, location:CLAutoPause}lld}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "old":%{public, location:_CLLocationManagerStateTrackerState}.*P, "new":%{public, location:_CLLocationManagerStateTrackerState}.*P}
{"msg%{public}.0s":"state dump failure", "expected_size":%{public}lld, "provided_size":%{public}lld}
#Warning Has lingering peer ranging request
CL: CLLocationManager
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "identifier":%{public, location:escape_only}@, "bundle":%{public, location:escape_only}@}
initializing CLLocationManager with a nil identifier
{"msg%{public}.0s":"delegate and queue must not be nil", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
initializing CLLocationManager with a nil bundle
initializing CLLocationManager with a nil limiting identifier
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p"}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "delegate":"%{public}p"}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "distance":"%{public}f"}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "accuracy":"%{public}f"}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "pausesLocationUpdatesAutomatically":%{public}hhd}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "allows":%{public}hhd}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "shows":%{public}hhd}
{"msg%{public}.0s":"#NullIsland Either the latitude or longitude was exactly 0! That's highly unlikely: refreshing property", "latIsZero":%{public}hhd, "lonIsZero":%{public}hhd}
{"msg%{public}.0s":"We have a valid, cached location. Fetching from internal state", "location":%{private, location:CLClientLocation}.*P}
{"msg%{public}.0s":"No valid, cached location. Fetched from daemon", "location":%{private, location:CLClientLocation}.*P}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "supportInfo":%{public}hhd}
Obsolete
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "privateMode":%{public}hhd}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "purpose":%{private, location:escape_only}@}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "activityType":%{public, location:CLActivityType}lld}
Client,%s,setActivityType,%ld
Client,%s,setActivityType,allowing map correction
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "bundleID":%{public, location:escape_only}s}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "bundlePath":%{public, location:escape_only}s}
Canceling requestLocation
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@}
Ignoring requestLocation due to ongoing location.
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "distance":"%{public}f", "timeout_s":"%{public}.09f"}
Canceling requestLocation.
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "filter":"%{public}f"}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "orientation":%{public, location:CLDeviceOrientation}lld}
heading, %{private}s
Start updating heading. HeadingFilter, %{public}.2f
Stop updating heading
Dismissing Compass Calibration HUD
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "region":%{private, location:escape_only}@}
{"msg%{public}.0s":"Region is nil"}
Number of vertices %{public}lu
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "region":%{private, location:escape_only}@}
{"msg%{public}.0s":"Cannot start ranging beacons on behalf of another app", "onBehalfOf":%{public, location:escape_only}s}
{"msg%{public}.0s":"Region is not an instance of CLBeaconRegion"}
{"msg%{public}.0s":"Cannot stop ranging beacons on behalf of another app", "onBehalfOf":%{public, location:escape_only}s}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "constraint":%{private, location:escape_only}@}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "constraint":%{private, location:escape_only}@}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "peers":%{private, location:escape_only}@, "timeout_s":"%{public}.09f"}
WRTT: received requestRangingToPeers, timeout, %{public}lf
#Warning Ignoring requestRangingToPeers due to ongoing ranging
WRTT: received respondToRangingFromPeers, timeout, %{public}lf
#Warning Ignoring respondToRangingFromPeers due to ongoing ranging.
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "peers":%{private, location:escape_only}@, "interval":%{public}lld}
WRTT: received startRangingToPeers, interval, %{public}lu
#Warning Ignoring startRangingToPeers due to ongoing ranging
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "peers":%{private, location:escape_only}@}
WRTT: received stopRangingToPeers
WRTT: received startRangingFromPeers
#Warning Ignoring startRangingFromPeers due to ongoing ranging
WRTT: received stopRangingFromPeers
{"msg%{public}.0s":"received internal version get request"}
{"msg%{public}.0s":"received localization scan request"}
{"msg%{public}.0s":"received recording scan request", "forced:":%{public}hhd}
{"msg%{public}.0s":"received truth label donation request"}
{"msg%{public}.0s":"received request to purge semi-supervised models"}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate - request timeout", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "location":%{private, location:CLClientLocation}.*P}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate - request timeout", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@}
{"msg%{public}.0s":"-onClientEvent:supportInfo:", "event":%{public, location:CLClientEvent}lld, "data":%{private, location:escape_only}@}
could not get updated authorization status
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "approved":%{public}hhd}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "authorizationStatus":%{public, location:CLClientAuthorizationStatus}lld, "limitsPrecision":%{public}hhd, "isAuthorizedForWidgetUpdates":%{public}hhd}
Location event received with empty payload
New location is identical to old location; discarding
New location predates old location, and the event types differ; discarding
{"msg%{public}.0s":"#CLLocationManager invoking #delegate - invalid location", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@}
{"msg%{public}.0s":"#NullIsland onClientEventLocation:forceMapMatching: got a latitude or longitude that was exactly zero", "latIsZero":%{public}hhd, "lonIsZero":%{public}hhd, "location":%{private, location:CLClientLocation}.*P}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "location":%{private, location:CLClientLocation}.*P, "eventType":%{public, location:escape_only}@}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate - location unavailable", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@}
could not get updated heading
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "heading":%{public, location:escape_only}@}
CL: Invoking Compass Calibration HUD
Could not show heading calibration
in onClientEventPlaceInferenceResult for CLPlaceInferenceSubscription
{"msg%{public}.0s":"Got a place inference result without a result!?"}
in onClientEventPlaceInferenceError for CLPlaceInferenceSubscription
{"msg%{public}.0s":"Got a place inference error without an error!?"}
{"msg%{public}.0s":"#Warning Got place inference result without a handler block"}
could not get error
{"msg%{public}.0s":"Location access was denied; bailing early cancelling requestLocation"}
{"msg%{public}.0s":"Location access was denied; but not bailing early"}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "error":%{public, location:escape_only}@}
could not get region monitoring event
{"msg%{public}.0s":"Fence: onClientEventRegion, unable to fetch region"}
{"msg%{public}.0s":"Delivering region monitoring event, no delegate", "self":"%{public}p"}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "region":%{private, location:escape_only}@, "state":%{public, location:CLRegionState}lld}
could not get the region state
{"msg%{public}.0s":"Fence: onClientEventRegionState, unknown region type", "regionType":%{public, location:CLClientRegionType}lld}
{"msg%{public}.0s":"#Warning Fence: onClientEventRegionState, unknown state", "regionState":%{public, location:CLClientRegionState}lld}
{"msg%{public}.0s":"Delivering region monitoring state request, no delegate", "self":"%{public}p"}
{"msg%{public}.0s":"Fence: onClientEventRegionError, unknown region type", "regionType":%{public, location:CLClientRegionType}lld}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "region":%{private, location:escape_only}@, "error":%{public, location:escape_only}@}
could not get ranged beacons
Client beacon is invalid (count,%lu).
could not get ranging error
{"msg%{public}.0s":"Delivering range error to client's delegate", "self":"%{public}p", "delegate":"%{public}p"}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "constraint":%{private, location:escape_only}@, "error":%{public, location:escape_only}@}
WRTT: received onClientEventPeerRanging
WRTT: received onClientEventPeerRangingRequestProcessed
WRTT: received onClientEventPeerRangingError
could not get updated paused state
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "duration_s":"%{public}.09f"}
{"msg%{public}.0s":"Delivering region monitoring watchdog, no delegate", "self":"%{public}p"}
{"msg%{public}.0s":"Client region type is not supported.
", "regionType":%{public, location:CLClientRegionType}lld}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "notification":%{private, location:escape_only}@}
could not get batch result
Finished deferred updates: %s
could not get updated vehicle speed
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "vehicleSpeed":%{public, location:escape_only}@}
could not get updated vehicle heading
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "vehicleHeading":%{public, location:escape_only}@}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "visit":%{private, location:escape_only}@}
{"msg%{public}.0s":"Processing Significant Location Visit State Request Event", "self":"%{public}p", "delegate":"%{public}p"}
{"msg%{public}.0s":"isAuthorizedForPreciseLocation is deprecated and will be removed in the next seed. use accuracyAuthorization"}
{"msg%{public}.0s":"Requesting when in use authorization"}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "SEL":%{public, location:escape_only}s}
{"msg%{public}.0s":"Requesting always authorization"}
{"msg%{public}.0s":"Requesting temporary accuracy increase"}
{"msg%{public}.0s":"requestTemporaryPreciseLocationAuthorizationWithPurposeKey is deprecated and will be removed in the next seed. use requestTemporaryFullAccuracyAuthorizationWithPurposeKey"}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "enabled":%{public}hhd}
{"msg%{public}.0s":"must pass handler to dumpDiagnosticFilesWithHandler", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
dumpDiagnosticFiles called, trying to make an xpc call
#diagnosticManager failed to get remoteObjectProxy with error %@
#diagnosticManager error copying files: %@
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "isActuallyAWatchKitExtension":%{public}hhd}
Start updating vehicle speed
Stop updating vehicle speed
Start updating vehicle heading
Stop updating vehicle heading
#slv: Request visit state
Setup PlaceInferences common logic
Start oneshot PlaceInferences
Start continuous PlaceInferences
Stop continuous PlaceInferences
Widget has NSWidgetWantsLocation key in its Info.plist
{"msg%{public}.0s":"#Warning widget is missing NSWidgetWantsLocation key in its Info.plist"}
Encoded coarse meta data found
CLLocationManager should not get multile locations with coarseMetaData
#Warning Changing CLCommon's runloop after it was already established
#Warning Setting CLCommon's runloop after it was already established
CLCommonSetRunLoop, %p
cannot open source file: %{public}s, errno %{public}d
cannot open target file: %{public}s, errno %{public}d
error reading source file: %{public}s
error writing target file: %{public}s
cannot open compression stream: %{public}s, bzerror %{public}d
error writing target file: %{public}s, bzerror: %{public}d
error closing target file: %{public}s, bzerror: %{public}d
CLCommonCompareLocationEqualityClient compared two coordinates that were identical other than their reference frames: (%lf, %lf, %d) (%lf, %lf, %d)
{"msg%{public}.0s":"Bundle for LocationdInternalSystemService not marked as SystemService", "bundle":%{public, location:escape_only}s, "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
os_transaction created: (%p) %@
os_transaction releasing: (%p) %@
Please update userSpecificPlaceTypeFromRTUserType
Please update placeInferencePlaceTypeFromRTPlaceType
#clgda,client,CLGnssDisablementAssertionInternal,name,%s,dict,%@
#clgda,client,#warning,unexpected message,%s
#clgda,client,message,%s
#clgda,#warning,client,noRegisteredCallback
#clgda,client,~CLGnssDisablementAssertionInternal()
{"msg%{public}.0s":"#clgda,client,reason missing"}
{"msg%{public}.0s":"#clgda,client,bundleID or bundlePath needed"}
{"msg%{public}.0s":"#clgda,client,nil callback queue"}
{"msg%{public}.0s":"#clgda,client,nil callback block"}
#clgda,client,newAssertionForBundleIdentifier
#clgda,client,newAssertionForBundle
Got Reply: message: %s
informing client -- did connect to device: %s -  %s
informing client -- did disconnect from device: %s -  %s
Got a message we do not understand... dropping!
Connection to locationd interrupted!!
Connect to device: %@
Disconnect from device: %@
Init Rose on device: %@
Stop Rose on device: %@
Set Rose Range Parameters on device: %@
Stop Rose Ranging on device: %@
Start Rose Ranging on device: %@
Fetch firmware from device: %@
#durian Got Reply: message: %s
{"msg%{public}.0s":"#durian handling message to client", "message":%{public, location:escape_only}s, "beaconUUID":%{private, location:escape_only}@, "error":%{private, location:escape_only}@}
{"msg%{public}.0s":"#durian #hawkeye got fragment", "opcode":%{private}u, "dataFragment":%{private, location:escape_only}@}
{"msg%{public}.0s":"#durian #hawkeye error appending fragment", "opcode":%{private}u, "dataFragment":%{private, location:escape_only}@}
{"msg%{public}.0s":"#durian #client client received advertisement", "uuid":%{private, location:escape_only}@, "address":%{private, location:escape_only}@, "advertisementData":%{private, location:escape_only}@, "scanDate":%{private, location:escape_only}@, "status":%{private}u, "rssi":%{private}ld, "reserved":%{private, location:escape_only}@}
#durian Got a message we do not understand... dropping!
{"msg%{public}.0s":"#durian #hawkeye clearing fragments from accumulator", "uuid":%{private, location:escape_only}@}
{"msg%{public}.0s":"#durian client sending message", "messageName":%{public, location:escape_only}s, "beaconUUID":%{public, location:escape_only}s}
{"msg%{public}.0s":"#durian client sending message", "messageName":%{public, location:escape_only}s}
{"msg%{public}.0s":"#durian Client requested scan for nearby owner"}
{"msg%{public}.0s":"#durian Client requested scan for HELE"}
{"msg%{public}.0s":"#durian Client requested scan for nearby devices long"}
{"msg%{public}.0s":"#durian Client requested stop to scan for nearby devices long"}
{"msg%{public}.0s":"#durian Client requested for current scan parameters"}
#clreg,addConfigForIso,%s
#clreg,addConfigForCircularRegion,%.6f,%.6f,%.2f
#clreg,#warning,addConfigForIsoList,invalidArgs,ignoring
#clreg,#warning,addConfigForIsoList,emptyIso,ignoring
#clreg,#warning,addConfigForCircularRegionList,invalidArgs,ignoring
#clreg,#warning,addConfigForCircularRegionList,invalidRadius,ignoring
#clreg,fetchRAEConfig,%{private}.6f,%{private}.6f,%{private}.2f,distToLocation,%{private}2.f,result,found
#clreg,completionCallback,%{private}@,nil,nil
#clreg,fetchRAEConfig,%{private}.6f,%{private}.6f,%{private}.2f,distToLocation,%{private}2.f,result,notFound
#clreg,fetchRAEConfig,no RAEs matched
#clreg,completionCallback,default,nil,nil
#clreg,completionCallback,%{private}@,%{private}@,nil
#clreg,#map,query,lla,%{private}.6f,lon,%{private}.6f,accuracy,%{private}.2f
#clreg,#map,response,#warning,error,%@
#clreg,#map,response,#warning,results,Nil
#clreg,#map,response,#warning,invalidResultEntry,ignoring
#clreg,#map,response,disputed,first,%{private}s,interested,%@
#clreg,#map,response,disputed,next,%{private}s,interested,%@
#clreg,#map,response,nonDisputed,first,%{private}@
#clreg,#map,response,nonDisputed,next,%{private}@
#clreg,#warning,fetchIsoOrDefaultConfig,geoLocationAllocFailed
#clreg,cbLocation,iso,%{private}@,neighbors,%{private}@
#clreg,cbExtendedLocation,iso,%{private}@,neighbors,%{private}@
#clreg,cbWrapper,isoActual,%{private}@,neighborsWithinLocation,%{private}@,extendedNeighbors,%{private}@
#clreg,fetchConfigForLocation,#warning,location is nil
#clreg,fetchConfigForLocation,%{private}.6f,%{private}.6f,%{private}.2f
#clreg,fetchConfigForLocation,#warning,invalidAccuracy
#clreg,findRAEConfig,%{private}.6f,%{private}.6f,%{private}.2f,distToLocation,%{private}2.f,result,found
#clreg,findRAEConfig,%{private}.6f,%{private}.6f,%{private}.2f,distToLocation,%{private}2.f,result,notFound
#clreg,findRAEConfig,no RAEs matched
sendIsoInfoSync,region,%{private}@,neighbors,%{private}@
#clreg,invalidRegionType
#clreg,#map,response,lla,%{private}.6f,lon,%{private}.6f,accuracy,%{private}.2f,results,%{private}@
Invalid neighbor or excludeRegionName,%{private}@,%{private}@
#clreg,fetchInfoForLocation,#warning,location is nil
#clreg,fetchInfoForLocation,%{private}.6f,%{private}.6f,%{private}.2f
#clreg,fetchInfoForLocation,#warning,invalidAccuracy
processed %p %d to (%s)
could not create new mutable dictionary
{"msg%{public}.0s":"could not deserialize property list", "file":%{public, location:escape_only}s}
{"msg%{public}.0s":"file does not exist... clearing", "file":%{public, location:escape_only}s, "error":%{public, location:escape_only}s}
{"msg%{public}.0s":"#Warning Error reading file", "file":%{public, location:escape_only}s, "error":%{public, location:escape_only}s}
Could not create NSURL for file: %{public}s
Could not write data to disk %{public}s, %{public}s
Could not serialize data for file %{public}s
{"msg%{public}.0s":"Could not serialize data", "file":%{public, location:escape_only}s}
key %{public}s does not have element %{public}d in array of size %{public}ld
key %{public}s does not have element %{public}d in non-array type %{public}lu
Unsupported type at %@:%@ (domain:key)
type IDs do not match for key %{public}s - %{public}lu vs %{public}lu
specified index is out of range for key %{public}s (%{public}d of %{public}ld)
specified index %{public}d not applicable to type %{public}lu for key %{public}s
could not create cf type for key %{public}s
could not create write stream
could not open write stream
could not write data, error code, %{public}ld, error domain, %{public}s
could not create intermediate property list - %{public}ld (%{public}s)
%s = <dictionary (%ld entries)>:
%s = %s
%s = %0.6f
%s = %d
%s = <unhandled value type %lu>
could not get value
type IDs do not match - %{public}lu vs %{public}lu
could not convert to C string
can't convert %{public}u data bytes
#Warning type IDs do not match - %{public}lu
{"msg%{public}.0s":"rangeForTransmitPower: invalid range of transmit power", "transmitPower_dBm":"%{public}.6f"}
{"msg%{public}.0s":"Selected location", "loc":%{private, location:escape_only}s}
{"msg%{public}.0s":"Removed location", "loc":%{private, location:escape_only}s}
Reductive filtering: Sum of weights <= 0 after at least one point added.
{"msg%{public}.0s":"Reductive filtering", "input":%{public}d, "outliers":%{public}d, "used":%{public}d, "transmitPower":"%{public}.6f", "rangeOfBeacon":"%{public}.6f", "lat":"%{private}f", "lon":"%{private}f", "hunc":"%{private}f", "timestamp":%{public, location:escape_only}s, "isAccurateLocationAvailable":%{public}hhd, "filtered":%{public}d}
{"msg%{public}.0s":"Reductive filtering - options", "beaconType":%{public}lu, "transmitPower":"%{public}.6f", "biasRate":"%{public}.6f", "applyRangeEstimation":%{public}hhd}
{"msg%{public}.0s":"Reductive filtering - location observations", "countInput":%{public}lu, "countFiltered":%{public}lu, "loc":%{private, location:escape_only}s}
{"msg%{public}.0s":"Reductive filtering - location trace", "countInput":%{public}lu, "countFiltered":%{public}lu, "loc":%{private, location:escape_only}s}
Unable to load CompassUI framework
Could not load CUICalibrationClass from CompassUI framework
{"msg%{public}.0s":"CSI assertion failed", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
***not supported***
<empty>
Attempt to set key %{public}s for read-only preferences %{public}s/%{public}s!
{"msg%{public}.0s":"Assertion failed", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
unknown hardware type %{private}d
Unsupported HW type %d; file a radar to CoreMotion Factory | 1.0
Unsupported HW type %{private}d; file a radar to CoreMotion Factory | 1.0
no mutable store path for type, %{public}d
could not get mutable store path for type, %{public}d
{"msg%{public}.0s":"CLBBTFTA,reason missing"}
{"msg%{public}.0s":"CLBBTFTA,bundleID or bundlePath needed"}
{"msg%{public}.0s":"CLBBTFTA,nil callback queue"}
{"msg%{public}.0s":"CLBBTFTA,nil callback block"}
CLBBTFTA,unexpected message,%s
{"msg%{public}.0s":"CLBBTFTA", "Connection Message":%{public, location:escape_only}s}
{"msg%{public}.0s":"Could not serialize _CLVLLocalizationResult", "error":%{public, location:escape_only}@}
{"msg%{public}.0s":"identifier is nil"}
{"msg%{public}.0s":"identifier is too long"}
#CLEU,CLGetUncertaintyScaleFactors,input horzontal or vertical SF pointer is NULL
#CLEU,CLGetUncertaintyScaleFactors,confidence out of bounds,%{public}d
#CLEU,CLGetUncertaintyScaleFactors,conf,%{public}d,horzSF,%{public}f,vertSF,%{public}f
#CLEU,linearInterp,x is less than the first point in table,x,%{public}d,table[0].first,%{public}d
#CLEU,linearInterp,x is greater than the last point in table,x,%{public}d,table[size-1].first,%{public}d
#CLEU,linearInterp,failed to find table points bounding x
this SPI is obsolete and will be removed in the future
{"msg%{public}.0s":"getDaemonProxy called"}
{"msg%{public}.0s":"no existing connection, trying to get one"}
Simulation connection interrupted
Simulation connection invalidated
Error fetching remoteObjectProxy
{"msg%{public}.0s":"Do we have a proxy?", "proxy":%{public, location:escape_only}@, "connection":%{public, location:escape_only}@}
Failed parse os_log format specifier for shimming:missing closing brace,format,%{public}s
{"msg%{public}.0s":"Do not use CLGeocoder when GeoServices is missing", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Coarse MetaData cannot be decoded while reverse geocoding location, error, %@
#Warning Geocode error: %{private}@
#Spi, Interrupted
#Spi, Invalidated
#Spi, Error with proxy, error: %@
#Spi, Key is NULL!
#Spi, Couldn't set location default!
{"msg%{public}.0s":"#Spi, getLocationDefaultForKey, ", "error":%{public, location:escape_only}@}
#Spi, setPrivateMode failed
#Spi, CLInternalSetLocationServicesEnabled failed
#Spi, CLInternalSetAuthorizationPromptMapDisplayEnabled failed
{"msg%{public}.0s":"#Spi, CLSetClientTransientAuthorizationInfo failed", "error":%{public, location:escape_only}@}
{"msg%{public}.0s":"#Spi, CLGetClientTransientAuthorizationInfo failed", "error":%{public, location:escape_only}@}
{"msg%{public}.0s":"#Spi, CLInternalChangeClientAuthorizationTime failed", "error":%{public, location:escape_only}@}
{"msg%{public}.0s":"#Spi, CLInternalTriggerExpiredAuthorizationPurge failed", "error":%{public, location:escape_only}@}
#Spi, CLInternalSetGestureServiceEnabled failed
{"msg%{public}.0s":"#Spi, CLInternalGetPrecisionPermission failed", "error":%{public, location:escape_only}@}
#Spi, _CLInternalPerformMigration failed
#Spi, _CLShutdownDaemon failed
#Spi, _CLDisplayStatistics failed
#Spi, _CLDumpLogs failed
#Spi,RouteHintError, Exceeded max number of route hint road segments (%{public}d > %{public}d)
#Spi,RouteHint,LocationInternal,Received route hint road segments,%{public}d,routeType,%{public}d,stepType,%{public}d
#Spi,RouteHintError,Couldn't set map-matching route hint!
#Spi,getAccessoryTypeBitSet,failed
#Spi,getAccessoryTypeBitSet,%d
#Spi, _CLCopyLastLog failed
{"msg%{public}.0s":"#Spi, Setting status bar enabled for entity class failed", "entityClass":%{public, location:CLLocationDictionaryUtilitiesEntityClass}lld}
{"msg%{public}.0s":"Getting status bar enabled for entity class failed", "entityClass":%{public, location:CLLocationDictionaryUtilitiesEntityClass}lld}
CL: CLInternalSetAuthorizationStatus
{"msg%{public}.0s":"CLInternalSetAuthorizationStatus", "event":%{public, location:escape_only}s}
CL: CLCopyAppsUsingLocation
{"msg%{public}.0s":"CLCopyAppsUsingLocation", "event":%{public, location:escape_only}s}
CL: CLSetLocationDefault
{"msg%{public}.0s":"CLSetLocationDefault", "event":%{public, location:escape_only}s, "key":%{public, location:escape_only}@}
CL: CLCopyMicroLocationInternalVersion
{"msg%{public}.0s":"CLCopyMicroLocationInternalVersion", "event":%{public, location:escape_only}s}
CL: CLCopyZaxisStats
{"msg%{public}.0s":"CLCopyZaxisStats", "event":%{public, location:escape_only}s}
CL: CLCopyTechnologiesInUse
{"msg%{public}.0s":"CLCopyTechnologiesInUse", "event":%{public, location:escape_only}s}
CL: CLCopyGnssBandsInUse
{"msg%{public}.0s":"CLCopyGnssBandsInUse", "event":%{public, location:escape_only}s}
Invalid bandUse,%{public}d
CL: CLGetLocationDefault
{"msg%{public}.0s":"CLGetLocationDefault", "event":%{public, location:escape_only}s, "key":%{public, location:escape_only}@}
CL: CLGetPipelinedCaches
{"msg%{public}.0s":"CLGetPipelinedCaches", "event":%{public, location:escape_only}s}
CL: CLGetMotionSensorLogs
{"msg%{public}.0s":"CLGetMotionSensorLogs", "event":%{public, location:escape_only}s}
CL: CLGetAccessoryMotionSensorLogs
{"msg%{public}.0s":"CLGetAccessoryMotionSensorLogs", "event":%{public, location:escape_only}s}
CL: CLApplyArchivedAuthorizationDecisions
{"msg%{public}.0s":"CLApplyArchivedAuthorizationDecisions", "event":%{public, location:escape_only}s}
CL: CLGetArchivedAuthorizationDecisions
{"msg%{public}.0s":"CLGetArchivedAuthorizationDecisions", "event":%{public, location:escape_only}s}
CL: CLTimeZoneAtLocation
{"msg%{public}.0s":"CLTimeZoneAtLocation", "event":%{public, location:escape_only}s}
CL: CLStartStopAdvertisingBeacon
{"msg%{public}.0s":"CLStartStopAdvertisingBeacon", "event":%{public, location:escape_only}s, "region":%{private, location:escape_only}@, "power":%{public, location:escape_only}@}
CL: CLPingDaemon
{"msg%{public}.0s":"CLPingDaemon", "event":%{public, location:escape_only}s}
CL: CLPassKitNotifyPassUsage
{"msg%{public}.0s":"CLPassKitNotifyPassUsage", "event":%{public, location:escape_only}s}
CL: CLWeatherNotifyForecastUsage
{"msg%{public}.0s":"CLWeatherNotifyForecastUsage", "event":%{public, location:escape_only}s}
CL: CLGetClientTransientAuthorizationInfo
{"msg%{public}.0s":"CLGetClientTransientAuthorizationInfo", "event":%{public, location:escape_only}s}
CL: CLSetClientTransientAuthorizationInfo
{"msg%{public}.0s":"CLSetClientTransientAuthorizationInfo", "event":%{public, location:escape_only}s}
CL: CLInternalGetPrecisionPermission
{"msg%{public}.0s":"CLInternalGetPrecisionPermission", "event":%{public, location:escape_only}s}
CL: CLInternalGetAuthorizationStatus
{"msg%{public}.0s":"CLInternalGetAuthorizationStatus", "event":%{public, location:escape_only}s}
CL: CLInternalGetIncidentalUseMode
{"msg%{public}.0s":"CLInternalGetIncidentalUseMode", "event":%{public, location:escape_only}s}
CL: CLInternalPerformMigration
{"msg%{public}.0s":"CLInternalPerformMigration", "event":%{public, location:escape_only}s}
CL: CLGetStatusBarIconState
{"msg%{public}.0s":"CLGetStatusBarIconState", "event":%{public, location:escape_only}s}
CLStatusBarIconState received an icon stateu of %d
CL: CLSetMapMatchingRouteHint
{"msg%{public}.0s":"CLSetMapMatchingRouteHint", "event":%{public, location:escape_only}s}
RouteHints,CLSetRouteHintsForMapMatching,received,%lu,routeType,%d,stepType,%d
CL: CLSetRouteHintsForMapMatching
{"msg%{public}.0s":"CLSetRouteHintsForMapMatching", "event":%{public, location:escape_only}s}
RouteHints,CLSetRouteHintsForMapMatching,received,%lu,routeType,%d
CLGetAccessoryTypeBitSet
CL: CLInternalSetTemporaryAuthorizationGranted
{"msg%{public}.0s":"CLInternalSetTemporaryAuthorizationGranted", "event":%{public, location:escape_only}s}
CL: CLInternalSetAuthorizationStatusByType
{"msg%{public}.0s":"CLInternalSetAuthorizationStatusByType", "event":%{public, location:escape_only}s}
CL: CLInternalSetIncidentalUseMode
{"msg%{public}.0s":"CLInternalSetIncidentalUseMode", "event":%{public, location:escape_only}s}
{"msg%{public}.0s":"Could not serialize _CLARSessionState"}
{"msg%{public}.0s":"Do not use CLPlaceMark when GeoServices is missing", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"transmitPower: invalid range of transmit power", "transmitPower_dBm":"%{public}.6f", "min.TransmitPower_dBm":"%{public}.6f", "max.TransmitPower_dBm":"%{public}.6f"}
[%{public}@] Location Push Service extension context initialized
[%{public}@] didReceiveLocationPushPayload:reply:
[%{public}@] Location Push Service extension time will expire
[%{public}@] Cleaning up extension
number of vertices (%{public}lu) mustn't exceed %{public}lu
number of vertices (%{public}lu) must be greater or equal than %{public}lu
monitoring requires a valid connected polygon where first and last coordinates are the same
All vertices, except for the first and last equals, have to be unique
CLHarvester invalidation handler
CLHarvester interruption handler
CLHarvester synchronous remote proxy invalidated
CLHarvester fetchState reply block called
{"msg%{public}.0s":"Could not serialize _CLVIOEstimation", "error":%{public, location:escape_only}@}
{"msg%{public}.0s":"Subclass should have overriden this", "class":%{public, location:escape_only}s, "SEL":%{public, location:escape_only}s}
{"msg%{public}.0s":"Dictionary utilites reported the arrow is in max state?!", "clientRecord":%{public, location:escape_only}@}
informing client -- did retreive personalization info for device: %s - %s with info: %@
informing client -- firmware update for device: %s - %s
informing client -- use local asset request for product group: %s, product number: %s - %s
informing client -- use default asset request for product group: %s, product number: %s - %s
informing client -- local firmware asset is %s for product group: %s, product number: %s
CLFindMyAccessoryFirmwareUpdateManager - Unknown Message - ignoring
getPersonalizationInfoForDevice: %@
updateFirmwareForDevice for device: %@ with assetURL: %@
abortFirmwareUpdateForDevice: %@
useLocalFirmwareAssetFromURL: %@ forProductGroup: %@ forPorductNumber: %@ withSandboxExtension: %@
useDefaultFirmwareAssetSourceForProductGroup: %@ forPorductNumber: %@
fetchWhetherLocalFirmwareAssetIsInUseForProductGroup: %@ forPorductNumber: %@
#Warning refAlt < %.1lf,refAlt,%.1lf,using the min
#Warning refAlt > %.1lf,refAlt,%.1lf,using the max
LowPower not supported for this object/platform
Conservative not supported for this object/platform
{"msg%{public}.0s":"Requesting new assertion", "messageDictionary":%{public, location:escape_only}@}
CLClientRef CLClientAllocate(CFAllocatorRef, CLClientCallback, const CLClientContext *)
CoreLocation: non-matching retain (%p) and release (%p) functions in context, ignoring
CoreLocation: Failed to initilize fHeadingCalibrationDisplayMutex, error code: %{public}d
com.apple.CoreLocation.%p
UIApplicationWillResignActiveNotification
UIApplicationDidBecomeActiveNotification
v8@?0
activity
CLClient-runloop
UIBackgroundModes
location
assert
client->fInvalidated
%s:%d: assertion failure in %s
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Framework/CLClient.mm
_CLClientDestroy
!client->fContext.info
<CLClient %p [%p]>
CLClient
void CLClientInvokeCallback(CLClientRef, CLClientEvent, id)
CoreLocation: Location callback block not executed in a timely manner!
CoreLocation: Discarding message for event %{private}d because of too many unprocessed messages
void CLClientHandleWillResignActiveNotification(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)
CoreLocation: received client will resign active notification
void CLClientHandleDidBecomeActiveNotification(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)_block_invoke
CoreLocation: received client did become active notification
kCLConnectionMessagePurposeKey
kCLConnectionMessagePurpose
void CLClientRequestAuthorization(CLClientRef, CLClientAuthorizationStatus)
CoreLocation: Missing UsageDescription key for requested authorization: %{public}d
CoreLocation: Invalid requested authorization: %{public}d
kCLConnectionMessageStatusKey
kCLConnectionMessageRequestAuthorization
kCLConnectionMessagePurposeIdentifierKey
kCLConnectionMessagePurposeKey
kCLConnectionMessageRequestTemporaryPrecise
kCLConnectionMessageErrorKey
v24@?0{shared_ptr<CLConnectionMessage>=^{CLConnectionMessage}^{__shared_weak_count}}8
kCLConnectionMessageSubscribeKey
kCLConnectionMessageLocationPush
kCLConnectionMessagePushTokenKey
kCLConnectionMessageSubscribeKey
Boolean CLClientIsLocationServicesEnabled(CLClientRef)
CoreLocation: #Warning CLInternalGetLocationServicesEnabled failed: could not reach daemon
Boolean CLClientIsAuthorizationPromptMapDisplayEnabled()
CoreLocation: #Warning CLInternalGetAuthorizationPromptMapDisplayEnabled failed: could not reach daemon
mach-lookup
com.apple.locationd.registration
CLClientShutdownDaemon
Boolean CLClientShutdownDaemon(CLClientRef)
CoreLocation: CLClient is deprecated. Will be obsolete soon. (%{public}s)
CLClientLogDump
Boolean CLClientLogDump(CLClientRef, const char *, Boolean)
kCLConnectionMessageDesiredAccuracyKey
kCLConnectionMessageDistanceFilterKey
kCLConnectionMessageDynamicAccuracyReductionKey
kCLConnectionMessageAlteredAccessoryLocationsKey
kCLConnectionMessageLocation
kCLConnectionMessageEnabledKey
kCLConnectionMessageIsActuallyAWatchKitExtension
kCLConnectionMessageProxyForRemoteClient
kCLConnectionMessageHeadingFilterKey
kCLConnectionMessageHeading
Boolean CLClientShowHeadingCalibration(CLClientRef, Boolean)
CoreLocation: Application inactive, will not show heading calibration
kCLConnectionMessageSLCDistanceKey
kCLConnectionMessageSLCPowerBudgetKey
kCLConnectionMessageSignificantLocationChange
kCLConnectionMessagePlaceInferenceFidelityPolicyKey
kCLConnectionMessagePlaceInference
kCLConnectionMessagePlaceInferenceStopKey
kCLConnectionMessagePlaceInferenceStop
kCLConnectionMessageSignificantLocationVisitTypeKey
kCLConnectionMessageSignificantLocationVisit
kCLConnectionMessageSignificantLocationVisitState
kCLConnectionMessageRegionMonitoring
Boolean CLClientRequestRegionState(CLClientRef, CLRegion *)
CoreLocation: Fence: CLClientRequestRegionState, unsupported fence type, %{private}d
kCLConnectionMessageRegionState
kCLConnectionMessageBeaconRegionKey
kCLConnectionMessageCircularRegionKey
kCLConnectionMessageRangingPeersKey
kCLConnectionMessageRangingPeerTimeoutKey
kCLConnectionMessageRangingPeerInitiatorKey
kCLConnectionMessagePeerRanging
IsFitnessMatch
kCLConnectionMessageNameKey
kCLConnectionMessageOnBehalfOfKey
kCLConnectionMessageDeviceIDKey
kCLConnectionMessageHandoffTagKey
kCLConnectionMessageRegionTypeKey
kCLConnectionMessageNotifyOnEntryKey
kCLConnectionMessageNotifyOnExitKey
kCLConnectionMessageConservativeEntry
kCLConnectionMessageEmergencyKey
kCLConnectionMessageReferenceFrameKey
kCLConnectionMessageMonitoringNearby
kCLConnectionMessageLowPowerFenceKey
kCLConnectionMessageLatitudeKey
kCLConnectionMessageLongitudeKey
kCLConnectionMessageRadiusKey
kCLConnectionMessagePolygonalVerticesCountKey
Boolean CLClientPopulateRegionFromInfo(CLRegion **, CFDictionaryRef)
CoreLocation: Number of vertices received doesn't match stored, %{public}d, %{public}lu
CoreLocation: Number of vertices received invalid, %{public}d, internal
CoreLocation: Copied %{private}d vertices
kCLConnectionMessageNotifyEntryStateOnDisplayKey
kCLConnectionMessageProximityUUIDKey
kCLConnectionMessageMajorKey
kCLConnectionMessageMinorKey
kCLConnectionMessageRegionDefinitionKey
kCLConnectionMessageEventKey
kCLConnectionMessageErrorKey
kCLConnectionMessageAlternateRegionKey
kCLConnectionMessageRegionWatchdogSinceLast
kCLConnectionMessageIdentifierKey
kCLConnectionMessageRegionsKey
kCLConnectionMessageRanging
kCLConnectionMessageBeaconsKey
kCLConnectionMessageCompensationKey
kCLConnectionMessageAuthorizedForWidgetUpdatesKey
kCLConnectionMessageMatchInfoEnabled
kCLConnectionMessageGroundAltitudeEnabled
kCLConnectionMessageFusionInfoEnabled
kCLConnectionMessageAllowsLocationPrompts
kCLConnectionMessageShowLocationPrompt
kCLConnectionMessageMarkAsHavingReceivedLocation
void CLClientSetAutomaticPromptingEnabled(CLClientRef, Boolean)
CoreLocation: kCLConnectionMessageAutomaticPromptingEnabled is not supported
kCLConnectionMessageARSessionState
kCLConnectionMessageVIOEstimation
kCLConnectionMessageVLLocalizationResult
kCLConnectionMessageActivityTypeKey
kCLConnectionMessageActivityType
kCLConnectionMessagePausesLocationUpdatesAutomaticallyKey
kCLConnectionMessagePausesLocationUpdatesAutomatically
Boolean CLClientGetAutopauseState(CFDictionaryRef, Boolean *, Boolean *)
CoreLocation: Invalid call to CLClientGetAutopauseState
kCLConnectionMessageAutopauseStatusKey
kCLConnectionMessageAutopauseOverrideKey
CoreLocation: malformed message: kCLConnectionMessageAutopauseStatus
kCLConnectionMessageAllowsBackgroundLocationUpdatesKey
kCLConnectionMessageAllowsBackgroundLocationUpdates
kCLConnectionMessageShowsBackgroundLocationIndicatorKey
kCLConnectionMessageShowsBackgroundLocationIndicator
kCLConnectionMessageBatchAllowedKey
kCLConnectionMessageBatchDistanceKey
kCLConnectionMessageBatchTimeoutKey
kCLConnectionMessageBatch
kCLConnectionMessageAllowsMapCorrectionKey
kCLConnectionMessageAllowsMapCorrection
kCLConnectionMessageRegisterAsLocationClient
kCLConnectionMessageVehicleSpeedKey
kCLConnectionMessageVehicleHeadingKey
kCLConnectionMessageVehicleSpeed
kCLConnectionMessageVehicleHeading
kCLConnectionMessageRequestMicroLocation
kCLConnectionMessageRequestMicroLocationRecordingScan
kCLConnectionMessageMicroLocationTruthLabelKey
kCLConnectionMessageMicroLocationRecordingTriggerUuidKey
kCLConnectionMessageMicroLocationDonateTruthLabelEvent
kCLConnectionMessagePurgeMicroLocationSemiSupervisedData
kCLConnectionMessageFetchEstimatedLocationDateKey
kCLConnectionMessageFetchEstimatedLocationAtDate
kCLConnectionMessageFetchEstimatedLocationLocationKey
com.apple.locationd.Core
Client
Generic
ClientsCohortWorkLoop
kCLConnectionMessageCompensatedLocation
kCLClientEventKey
void _CLClientHandleMessage(CLClientRef, std::shared_ptr<CLConnectionMessage>)
CoreLocation: Got unhandled message %s from daemon
LocationManager/kCLConnectionMessageRegistration
kCLConnectionMessageError
kCLConnectionMessageLocationUnavailable
kCLConnectionMessageRegionMonitoringError
kCLConnectionMessageRangingError
kCLConnectionMessageRegionMonitoringResponseDelayed
kCLConnectionMessageRegionMonitoringSetupCompleted
kCLConnectionMessageAuthorizationStatus
kCLConnectionMessageAutopauseStatus
kCLConnectionMessagePeerRangingRequestProcessed
kCLConnectionMessagePeerRangingError
kCLConnectionMessagePlaceInferenceResult
kCLConnectionMessagePlaceInferenceError
kCLConnectionMessageRegionMonitoringNoLocationWatchdog
kCLConnectionMessageHeadingDataKey
kCLConnectionMessageBundleIdentifierKey
kCLConnectionMessageBundlePathKey
kCLConnectionMessageClientSDKKey
kCLConnectionMessagePolygonalVerticesKey
CLLocationManagerRoutine.m
Invalid parameter not satisfying: %@
queue
locationManagerRoutine
com.apple.locationd.routine
v8@?0
Connection Interrupted, serviceName, %@
Connection Invalidated, serviceName %@
_CLLocationManagerRoutineProxy, %p
delegate must respond to selector locationManager:didUpdateLocations:
Routine
EmergencyEnablementAssertion/kCLConnectionMessage
CLFindMyAccessoryConnectionMaterial.m
[otherMaterial isKindOfClass:[CLFindMyAccessoryConnectionMaterial class]]
CLFindMyAccessoryConnectionMaterial <%p>, PrimaryIndex: %@, SecondaryIndex:%@, Address:%@, LTK:%@
address
primaryIndex
secondaryIndex
%02X:%02X:%02X:%02X:%02X:%02X
%02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X
!_inTransaction
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Framework/CoreLocation/CLLocationManager.m
-[CLLocationManagerStateTracker initWithQueue:identifier:state:]
state_transition
LocationManager
init
lifecycle
distanceFilter
desiredAccuracy
updatingLocation
requestingLocation
requestingRanging
updatingRanging
updatingHeading
headingFilter
allowsLocationPrompts
allowsAlteredAccessoryLocations
dynamicAccuracyReductionEnabled
previousAuthorizationStatusValid
previousAuthorizationStatus
limitsPrecision
activityType
pausesLocationUpdatesAutomatically
paused
allowsBackgroundLocationUpdates
showsBackgroundLocationIndicator
allowsMapCorrection
batchingLocation
updatingVehicleSpeed
updatingVehicleHeading
matchInfoEnabled
groundAltitudeEnabled
fusionInfoEnabled
courtesyPromptNeeded
isAuthorizedForWidgetUpdates
-[CLLocationManagerStateTracker updateState:]
allStates
_CLLocationManagerStateTrackerState
v16@?0@"CLLocationManagerStateTracker"8
-[CLLocationManagerInternal hasLingeringRangingRequest]
CoreLocation: #Warning Has lingering peer ranging request
CLLocationManager-runloop
-[CLLocationManager initWithEffectiveBundleIdentifier:]
CoreLocation: initializing CLLocationManager with a nil identifier
-[CLLocationManager initWithEffectiveBundleIdentifier:delegate:onQueue:]
delegate && queue
-[CLLocationManager initWithEffectiveBundle:]
CoreLocation: initializing CLLocationManager with a nil bundle
-[CLLocationManager initWithEffectiveBundle:delegate:onQueue:]
-[CLLocationManager initWithEffectiveBundle:limitingBundleIdentifier:delegate:onQueue:]
CoreLocation: initializing CLLocationManager with a nil limiting identifier
-[CLLocationManager _initWithDelegate:onQueue:]
CLLocationManager.m
Non-UI clients cannot be autopaused
!stayUp || CLClientIsBackgroundable(internal->fClient) || _CFMZEnabled()
-[CLLocationManager setSupportInfo:]
CoreLocation: Obsolete
-[CLLocationManager setActivityType:]
CoreLocation: Client,%s,setActivityType,%ld
com.apple.Maps
com.apple.NanoMaps
CoreLocation: Client,%s,setActivityType,allowing map correction
-[CLLocationManager startUpdatingLocation]
CoreLocation: Canceling requestLocation
Delegate must respond to locationManager:didUpdateLocations:
Delegate must respond to locationManager:didFailWithError:
-[CLLocationManager requestLocation]
CoreLocation: Ignoring requestLocation due to ongoing location.
-[CLLocationManager allowDeferredLocationUpdatesUntilTraveled:timeout:]
CoreLocation: Canceling requestLocation.
Application must support the location background mode (in app's Info.plist, {UIBackgroundModes=(location);}
-[CLLocationManager heading]
CoreLocation: heading, %{private}s
-[CLLocationManager startUpdatingHeading]
CoreLocation: Start updating heading. HeadingFilter, %{public}.2f
-[CLLocationManager stopUpdatingHeading]
CoreLocation: Stop updating heading
-[CLLocationManager dismissHeadingCalibrationDisplay]
CoreLocation: Dismissing Compass Calibration HUD
-[CLLocationManager startMonitoringForRegion:]
CoreLocation: Number of vertices %{public}lu
constraint
constraint != nil
-[CLLocationManager requestRangingToPeers:timeoutSeconds:]
CoreLocation: WRTT: received requestRangingToPeers, timeout, %{public}lf
peers != nil
peers.count > 0
timeout > 0.0
timeout < kCLPeerRangingRequestTimeoutSecondsMax
Delegate must respond to locationManager:didRangePeers:
Delegate must respond to locationManager:rangingDidFailForPeer:withError:
CoreLocation: #Warning Ignoring requestRangingToPeers due to ongoing ranging
-[CLLocationManager respondToRangingFromPeers:timeoutSeconds:]
CoreLocation: WRTT: received respondToRangingFromPeers, timeout, %{public}lf
CoreLocation: #Warning Ignoring respondToRangingFromPeers due to ongoing ranging.
-[CLLocationManager startRangingToPeers:intervalSeconds:]
CoreLocation: WRTT: received startRangingToPeers, interval, %{public}lu
CoreLocation: #Warning Ignoring startRangingToPeers due to ongoing ranging
-[CLLocationManager stopRangingToPeers:]
CoreLocation: WRTT: received stopRangingToPeers
-[CLLocationManager startRangingFromPeers:]
CoreLocation: WRTT: received startRangingFromPeers
CoreLocation: #Warning Ignoring startRangingFromPeers due to ongoing ranging
-[CLLocationManager stopRangingFromPeers:]
CoreLocation: WRTT: received stopRangingFromPeers
ForceMapMatching
-[CLLocationManager onClientEventAuthStatus:]
CoreLocation: could not get updated authorization status
-[CLLocationManager onClientEventLocation:forceMapMatching:type:]
CoreLocation: Location event received with empty payload
CoreLocation: New location is identical to old location; discarding
CoreLocation: New location predates old location, and the event types differ; discarding
-[CLLocationManager onClientEventHeading:]
CoreLocation: could not get updated heading
-[CLLocationManager onClientEventHeadingCalibration:]
CoreLocation: CL: Invoking Compass Calibration HUD
CoreLocation: Could not show heading calibration
-[CLLocationManager onClientEventPlaceInferenceResult:]
CoreLocation: in onClientEventPlaceInferenceResult for CLPlaceInferenceSubscription
kCLConnectionMessagePlaceInferencePlaceInferenceKey
kCLConnectionMessagePlaceInferencePlaceInferenceFallbackLocationKey
v24@?0@"NSArray"8@"NSError"16
-[CLLocationManager onClientEventPlaceInferenceError:]
CoreLocation: in onClientEventPlaceInferenceError for CLPlaceInferenceSubscription
-[CLLocationManager onClientEventError:]
CoreLocation: could not get error
-[CLLocationManager onClientEventRegion:]
CoreLocation: could not get region monitoring event
-[CLLocationManager onClientEventRegionState:]
CoreLocation: could not get the region state
-[CLLocationManager onClientEventRegionError:]
-[CLLocationManager onClientEventRanging:]
CoreLocation: could not get ranged beacons
-[CLLocationManager onClientEventRanging:]_block_invoke
CoreLocation: Client beacon is invalid (count,%lu).
v32@?0@8Q16^B24
proximity
accuracy
-[CLLocationManager onClientEventRangingError:]
CoreLocation: could not get ranging error
-[CLLocationManager onClientEventPeerRanging:]
CoreLocation: WRTT: received onClientEventPeerRanging
-[CLLocationManager onClientEventPeerRangingRequestProcessed:]
CoreLocation: WRTT: received onClientEventPeerRangingRequestProcessed
-[CLLocationManager onClientEventPeerRangingError:]
CoreLocation: WRTT: received onClientEventPeerRangingError
kCLConnectionMessageErrorsKey
[peers count] == [errors count]
-[CLLocationManager onClientEventRegionResponseDelayed:]
-[CLLocationManager onClientEventNoLocationWatchdog:]
CoreLocation: could not get updated paused state
-[CLLocationManager onClientEventRegionSetupCompleted:]
-[CLLocationManager onClientEventAutopauseStatus:]
-[CLLocationManager onClientEventBatch:]
CoreLocation: could not get batch result
success
CoreLocation: Finished deferred updates: %s
-[CLLocationManager onClientEventVehicleSpeed:]
CoreLocation: could not get updated vehicle speed
-[CLLocationManager onClientEventVehicleHeading:]
CoreLocation: could not get updated vehicle heading
kCLConnectionMessageSignificantLocationVisitKey
kCLConnectionMessageSignificantLocationVisitStateKey
handler
+[CLLocationManager dumpDiagnosticFilesWithHandler:]
CoreLocation: dumpDiagnosticFiles called, trying to make an xpc call
com.apple.locationd.diagnostic
+[CLLocationManager dumpDiagnosticFilesWithHandler:]_block_invoke
CoreLocation: #diagnosticManager failed to get remoteObjectProxy with error %@
v16@?0@"NSError"8
CoreLocation: #diagnosticManager error copying files: %@
-[CLLocationManager(VehicleData) startUpdatingVehicleSpeed]
CoreLocation: Start updating vehicle speed
-[CLLocationManager(VehicleData) stopUpdatingVehicleSpeed]
CoreLocation: Stop updating vehicle speed
-[CLLocationManager(VehicleData) startUpdatingVehicleHeading]
CoreLocation: Start updating vehicle heading
-[CLLocationManager(VehicleData) stopUpdatingVehicleHeading]
CoreLocation: Stop updating vehicle heading
-[CLLocationManager(CLVisitExtensions) _requestVisitState]
CoreLocation: #slv: Request visit state
-[CLLocationManager(_CLPlaceInferenceExtensions) _startPlaceInferencesCommonLogic:handler:]
CoreLocation: Setup PlaceInferences common logic
placeInferenceHandler
-[CLLocationManager(_CLPlaceInferenceExtensions) _fetchPlaceInferencesWithFidelityPolicy:handler:]
CoreLocation: Start oneshot PlaceInferences
-[CLLocationManager(_CLPlaceInferenceExtensions) _fetchContinuousPlaceInferencesWithFidelityPolicy:handler:]_block_invoke
CoreLocation: Start continuous PlaceInferences
-[CLLocationManager(_CLPlaceInferenceExtensions) _stopFetchingContinuousPlaceInferences]
CoreLocation: Stop continuous PlaceInferences
Core
NSExtension
NSExtensionPointIdentifier
com.apple.widgetkit-extension
void verifyWidgetKitExtension()
CoreLocation: Widget has NSWidgetWantsLocation key in its Info.plist
com.apple.locationd.Position
Proximity
Microlocation
LocationCount
Locations
LocationsPrivate
CoarseMetaData
NSArray *copyArrayFromPayload(NSDictionary *)
CoreLocation: Encoded coarse meta data found
CoreLocation: CLLocationManager should not get multile locations with coarseMetaData
ERROR
WARNING
STATUS
INFO
VERBOSE
NONE
com.apple.locationd
com.apple.locationd.DumpDiagnostics
NSLocationUsageDescription
NSLocationAlwaysUsageDescription
NSLocationWhenInUseUsageDescription
NSLocationAlwaysAndWhenInUseUsageDescription
NSLocationTemporaryUsageDescriptionDictionary
NSLocationDefaultAccuracyReduced
NSLocationInterestZones
NSWidgetWantsLocation
WKWatchOnly
WKRunsIndependentlyOfCompanionApp
void CLCommonSetRunLoop(CFRunLoopRef)
CoreLocation: #Warning Changing CLCommon's runloop after it was already established
CoreLocation: #Warning Setting CLCommon's runloop after it was already established
CoreLocation: CLCommonSetRunLoop, %p
mobile
int CLCommonCopyFile(const char *, const char *)
CoreLocation: cannot open source file: %{public}s, errno %{public}d
CoreLocation: cannot open target file: %{public}s, errno %{public}d
CoreLocation: error reading source file: %{public}s
CoreLocation: error writing target file: %{public}s
int CLCommonBzipFile(const char *, const char *)
CoreLocation: cannot open compression stream: %{public}s, bzerror %{public}d
CoreLocation: error writing target file: %{public}s, bzerror: %{public}d
CoreLocation: error closing target file: %{public}s, bzerror: %{public}d
compress:%@
%.1f
Boolean CLCommonCompareLocationEqualityClientWithTimeCheck(const CLClientLocation *, const CLClientLocation *, bool)
CoreLocation: CLCommonCompareLocationEqualityClient compared two coordinates that were identical other than their reference frames: (%lf, %lf, %d) (%lf, %lf, %d)
/System/Library/LocationBundles/LocationPromptUI.bundle
/System/Library/LocationBundles/LocationFenceSync.bundle
/System/Library/LocationBundles/PLAMonitor.bundle
CLBundleKeyValueCache::instance()->isSystemService(bundlePath)
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Shared/Utilities/CLCommon.mm
CLCommonIsBundleLocationdInternalSystemService
com.apple.locationd.Legacy
Generic_deprecated
CLAutoOSTransaction::CLAutoOSTransaction(const char *, CLAutoOSTransaction::LoggingPolicy)
CoreLocation: os_transaction created: (%p) %@
com.apple.locationd.Utility
CLAutoOSTransaction::~CLAutoOSTransaction()
CoreLocation: os_transaction releasing: (%p) %@
__TEXT
Binary Images:
armv6
armv7
unknown
%16p - %lld %c%s %s <
%02X
> %s
Utility
+[_CLPlaceInference(_CLRoutineExtensions) _userSpecificPlaceTypeFromRTUserType:]
CoreLocation: Please update userSpecificPlaceTypeFromRTUserType
+[_CLPlaceInference(_CLRoutineExtensions) _placeInferencePlaceTypeFromRTPlaceType:]
CoreLocation: Please update placeInferencePlaceTypeFromRTPlaceType
kCLLocationCodingKeyGroundAltitudeEstimate
kCLLocationCodingKeyGroundAltitudeUncertainty
kCLLocationCodingKeyGroundAltitudeUndulation
kCLLocationCodingKeyGroundAltitudeUndulationModel
_CLLocationSmootherProxy, %p
com.apple.locationd.smoother
CLSmootherErrorDomain
sampleCount
threshold
sampleRate
sleepDuration
com.apple.locationd.registration
NULL
CLGnssDisablementAssertionInternal::CLGnssDisablementAssertionInternal(dispatch_queue_t, const char *, NSDictionary *, CLGnssDisablementAssertionCallback)
CoreLocation: #clgda,client,CLGnssDisablementAssertionInternal,name,%s,dict,%@
v24@?0{shared_ptr<CLConnectionMessage>=^{CLConnectionMessage}^{__shared_weak_count}}8
CLGnssDisablementAssertionInternal::CLGnssDisablementAssertionInternal(dispatch_queue_t, const char *, NSDictionary *, CLGnssDisablementAssertionCallback)_block_invoke
CoreLocation: #clgda,client,#warning,unexpected message,%s
CoreLocation: #clgda,client,message,%s
CoreLocation: #clgda,#warning,client,noRegisteredCallback
kCLConnectionMessageGnssDisablementAssertRsp
CLGnssDisablementAssertionInternal::~CLGnssDisablementAssertionInternal()
CoreLocation: #clgda,client,~CLGnssDisablementAssertionInternal()
kCLConnectionMessageGnssDisablementAssertReq
+[CLGnssDisablementAssertion newAssertionForBundleIdentifier:withReason:callbackQueue:completionHandler:]
CoreLocation: #clgda,client,newAssertionForBundleIdentifier
+[CLGnssDisablementAssertion newAssertionForBundle:withReason:callbackQueue:completionHandler:]
CoreLocation: #clgda,client,newAssertionForBundle
kCLLocationMatchInfoCodingKeyMatchQuality
kCLLocationMatchInfoCodingKeyMatchCoordinateLatitude
kCLLocationMatchInfoCodingKeyMatchCoordinateLongitude
kCLLocationMatchInfoCodingKeyMatchCourse
kCLLocationMatchInfoCodingKeyMatchFormOfWay
kCLLocationMatchInfoCodingKeyMatchRoadClass
kCLLocationMatchInfoCodingKeyMatchShifted
kCLLocationMatchInfoCodingKeyMatchDataArray
matchQuality %ld matchCoordinate <%+.8f,%+.8f> matchCourse %.2f matchFormOfWay %d matchRoadClass %d matchShifted %d
%ld <%+.8f,%+.8f> %.2f %d %d %d
com.apple.findMyAccessoryRangingManager.privateQueue
-[CLFindMyAccessoryRangingManager handleMessage:]
CoreLocation: Got Reply: message: %s
DurianManagement/DidConnect
DurianManagement/DidDisconnect
Failed
Success
CoreLocation: informing client -- did connect to device: %s -  %s
CoreLocation: informing client -- did disconnect from device: %s -  %s
DurianManagement/DidFetchFirmwareVersion
DurianManagement/DidInitRose
DurianManagement/DidDeinitRose
DurianManagement/DidSetRoseRangeParameters
DurianManagement/DidStartRoseRanging
DurianManagement/DidCompleteRoseRanging
DurianManagement/DidReceiveRoseError
DurianManagement/DidReceiveRoseP2PTimestampData
DurianManagement/DidReceiveRoseP2PTimestampDebugData
DurianManagement/DeviceDidMove
DurianManagement/DidPrepareForStartRanging
DurianManagement/DidFailToChangeEventCounter
CoreLocation: Got a message we do not understand... dropping!
-[CLFindMyAccessoryRangingManager handleInterruption]
CoreLocation: Connection to locationd interrupted!!
Connection to locationd interrupted!
CLFindMyAccessoryRangingManager.mm
device
-[CLFindMyAccessoryRangingManager connectToDevice:]
CoreLocation: Connect to device: %@
-[CLFindMyAccessoryRangingManager disconnectFromDevice:]
CoreLocation: Disconnect from device: %@
-[CLFindMyAccessoryRangingManager initRoseWithParameters:onDevice:]
CoreLocation: Init Rose on device: %@
-[CLFindMyAccessoryRangingManager stopRoseWithParameters:onDevice:]
CoreLocation: Stop Rose on device: %@
parameters
-[CLFindMyAccessoryRangingManager setRoseRangingParameters:onDevice:]
CoreLocation: Set Rose Range Parameters on device: %@
-[CLFindMyAccessoryRangingManager prepareForStartRangingOnDevice:]
CoreLocation: Stop Rose Ranging on device: %@
-[CLFindMyAccessoryRangingManager startRangingWithParameters:onDevice:]
CoreLocation: Start Rose Ranging on device: %@
-[CLFindMyAccessoryRangingManager stopRangingOnDevice:]
-[CLFindMyAccessoryRangingManager startEventCounterOnDevice:]
-[CLFindMyAccessoryRangingManager stopEventCounterOnDevice:]
-[CLFindMyAccessoryRangingManager fetchFirmwareVersionFromDevice:]
CoreLocation: Fetch firmware from device: %@
DurianManagement/Connect
DurianManagement/Disconnect
DurianManagement/InitRose
DurianManagement/DeinitRose
DurianManagement/SetRoseRangeParameters
DurianManagement/PrepareForStartRanging
DurianManagement/StartRoseRanging
DurianManagement/StopRoseRanging
DurianManagement/StartEventCounter
DurianManagement/StopEventCounter
DurianManagement/FetchFirmwareVersion
private.HomeKit.accessory.accessoryUUID
private.HomeKit.accessory.serviceType
private.HomeKit.accessory.characteristicType
private.HomeKit.accessory.source
private.HomeKit.accessory.stateString
private.HomeKit.accessory.serviceUUID
private.HomeKit.accessory.serviceGroupUUID
private.HomeKit.accessory.roomUUID
private.HomeKit.scene.actionSetUUID
private.HomeKit.scene.actionSetName
private.HomeKit.scene.actionSetType
private.HomeKit.scene.clientName
private.HomeKit.scene.source
private.HomeKit.scene.homeName
private.MicroLocation.truthtag.identifier
private.MicroLocation.forced.recordingRequest
private.MicroLocation.recordingTriggerUUID
com.apple.DurianManagement.privateQueue
DurianManagement/DidFetchHawkeyeSerialNumber
DurianManagement/DidFetchHawkeyeCurrentPrimaryKey
DurianManagement/DidFetchHawkeyeiCloudIdentifier
Invalid response length
Response unavailable
-[CLFindMyAccessoryManager handleMessage:]
CoreLocation: #durian Got Reply: message: %s
DurianManagement/DidReceiveDataFragment
DurianManagement/DidFetchConnectionState
DurianManagement/DidStartPlayingSound
DurianManagement/DidCompletePlayingSound
DurianManagement/DidStopPlayingSound
DurianManagement/DidStartPlayingUnauthorizedSound
DurianManagement/DidCompletePlayingUnauthorizedSound
DurianManagement/DidStopPlayingUnauthorizedSound
DurianManagement/DidReceiveKeyRollIndex
DurianManagement/DidGetMultiStatus
DurianManagement/DidFetchBatteryStatus
DurianManagement/DidDetectCrash
DurianManagement/DidDumpLogs
DurianManagement/DidUnpair
DurianManagement/DidSetTagType
DurianManagement/DidSetObfuscatedIdentifier
DurianManagement/DidSetNearOwnerTimeout
DurianManagement/DidSetWildConfiguration
DurianManagement/DidFetchUserStats
DurianManagement/DidRollWildKey
DurianManagement/DidSetAccelerometerSlopeMode
DurianManagement/DidSetAccelerometerOrientationMode
DurianManagement/DidGetAccelerometerSlopeModeConfiguration
DurianManagement/DidGetAccelerometerMode
DurianManagement/DidSetUnauthorizedPlaySoundRateLimit
DurianManagement/DidCompleteHawkeyeTask
DurianManagement/DidSetHawkeyeUTMotionConfig
DurianManagement/DidFetchTxPower
DurianManagement/DidStartAggressiveAdvertising
DurianManagement/DidStopAggressiveAdvertising
DurianManagement/DidCompleteAggressiveAdvertising
DurianManagement/DidStartUnauthorizedAggressiveAdvertising
DurianManagement/DidFetchHawkeyeAISProductData
DurianManagement/DidFetchHawkeyeAISManufacturerName
DurianManagement/DidFetchHawkeyeAISModelName
DurianManagement/DidFetchHawkeyeAISModelColorCode
DurianManagement/DidFetchHawkeyeAISAccessoryCategory
DurianManagement/DidFetchHawkeyeAISAccessoryCapabilities
DurianManagement/DidFetchHawkeyeAISFindMyVersion
DurianManagement/DidFetchHawkeyeAISBatteryType
DurianManagement/DidObserveAdvertisement
DurianManagement/DidFetchCurrentScanParameters
CoreLocation: #durian Got a message we do not understand... dropping!
-[CLFindMyAccessoryManager handleInterruption]
CLFindMyAccessoryManager.mm
messageName
DurianManagement/FetchConnectionState
sequence
DurianManagement/StartSoundSequence
DurianManagement/StartUnauthorizedSound
DurianManagement/StopSound
DurianManagement/StopUnauthorizedSound
DurianManagement/GetMultiStatus
DurianManagement/DumpLogs
DurianManagement/InduceCrash
DurianManagement/Unpair
DurianManagement/SetNearOwnerTimeout
DurianManagement/SetTagType
DurianManagement/SetObfuscatedIdentifier
configuration
DurianManagement/SetWildConfiguration
DurianManagement/RollWildKey
DurianManagement/SetKeyRollInterval
DurianManagement/SetBatteryStatus
DurianManagement/FetchBatteryStatus
DurianManagement/FetchUserStats
DurianManagement/SetAccelerometerSlopeMode
DurianManagement/GetAccelerometerSlopeModeConfiguration
DurianManagement/SetAccelerometerOrientationMode
DurianManagement/GetAccelerometerOrientationModeConfiguration
DurianManagement/SetUnauthorizedPlaySoundRateLimit
DurianManagement/FetchTxPower
DurianManagement/StartAggressiveAdvertising
DurianManagement/StopAggressiveAdvertising
DurianManagement/StartUnauthorizedAggressiveAdvertising
DurianManagement/SetHawkeyeTestMode
DurianManagement/SetHawkeyeUTMotionConfig
DurianManagement/FetchHawkeyeAISProductData
DurianManagement/FetchHawkeyeAISManufacturerName
DurianManagement/FetchHawkeyeAISModelName
DurianManagement/FetchHawkeyeAISModelColorCode
DurianManagement/FetchHawkeyeAISAccessoryCategory
DurianManagement/FetchHawkeyeAISAccessoryCapabilities
DurianManagement/FetchHawkeyeAISFindMyVersion
DurianManagement/FetchHawkeyeAISBatteryType
DurianManagement/FetchHawkeyeSerialNumber
DurianManagement/FetchHawkeyeCurrentPrimaryKey
DurianManagement/FetchHawkeyeiCloudIdentifier
DurianManagement/StartMonitoringForAvengerAdvertisementsForBTFinding
DurianManagement/StopMonitoringForAvengerAdvertisementsForBTFinding
DurianManagement/ScanForNearOwner
DurianManagement/ScanForHELE
DurianManagement/ScanForNearbyDevicesLong
DurianManagement/StopScanForNearbyDevicesLong
DurianManagement/FetchCurrentScanParameters
void CLRegulatoryConfigInternal::addConfigForIso(std::string, NSDictionary *)
CoreLocation: #clreg,addConfigForIso,%s
void CLRegulatoryConfigInternal::addConfigForCircularRegion(CLCircularRegion *, NSDictionary *)
CoreLocation: #clreg,addConfigForCircularRegion,%.6f,%.6f,%.2f
void CLRegulatoryConfigInternal::addConfigForIsoList(CLRegulatoryIsoList, NSDictionary *)
CoreLocation: #clreg,#warning,addConfigForIsoList,invalidArgs,ignoring
CoreLocation: #clreg,#warning,addConfigForIsoList,emptyIso,ignoring
void CLRegulatoryConfigInternal::addConfigForCircularRegionList(CLRegulatoryCircularRegionList, NSDictionary *)
CoreLocation: #clreg,#warning,addConfigForCircularRegionList,invalidArgs,ignoring
CoreLocation: #clreg,#warning,addConfigForCircularRegionList,invalidRadius,ignoring
bool CLRegulatoryConfigInternal::fetchRAEConfig(CLLocation *, CLRegulatoryConfigCallback)
CoreLocation: #clreg,fetchRAEConfig,%{private}.6f,%{private}.6f,%{private}.2f,distToLocation,%{private}2.f,result,found
bool CLRegulatoryConfigInternal::fetchRAEConfig(CLLocation *, CLRegulatoryConfigCallback)_block_invoke
CoreLocation: #clreg,completionCallback,%{private}@,nil,nil
CoreLocation: #clreg,fetchRAEConfig,%{private}.6f,%{private}.6f,%{private}.2f,distToLocation,%{private}2.f,result,notFound
CoreLocation: #clreg,fetchRAEConfig,no RAEs matched
void CLRegulatoryConfigInternal::sendIsoConfig(NSString *, CLRegulatoryIsoList, CLRegulatoryConfigCallback)
CoreLocation: #clreg,completionCallback,default,nil,nil
CoreLocation: #clreg,completionCallback,%{private}@,%{private}@,nil
void CLRegulatoryConfigInternal::runMapsQuery(GEOLocation *, CLRegulatoryConfigInternal::MapsResultCallback)
CoreLocation: #clreg,#map,query,lla,%{private}.6f,lon,%{private}.6f,accuracy,%{private}.2f
void CLRegulatoryConfigInternal::runMapsQuery(GEOLocation *, CLRegulatoryConfigInternal::MapsResultCallback)_block_invoke
CoreLocation: #clreg,#map,response,#warning,error,%@
CoreLocation: #clreg,#map,response,#warning,results,Nil
CoreLocation: #clreg,#map,response,#warning,invalidResultEntry,ignoring
CoreLocation: #clreg,#map,response,disputed,first,%{private}s,interested,%@
CoreLocation: #clreg,#map,response,disputed,next,%{private}s,interested,%@
CoreLocation: #clreg,#map,response,nonDisputed,first,%{private}@
CoreLocation: #clreg,#map,response,nonDisputed,next,%{private}@
v24@?0@"NSSet"8@"NSError"16
void CLRegulatoryConfigInternal::fetchIsoOrDefaultConfig(CLLocation *, CLRegulatoryConfigCallback)
CoreLocation: #clreg,#warning,fetchIsoOrDefaultConfig,geoLocationAllocFailed
void CLRegulatoryConfigInternal::fetchIsoOrDefaultConfig(CLLocation *, CLRegulatoryConfigCallback)_block_invoke
CoreLocation: #clreg,cbLocation,iso,%{private}@,neighbors,%{private}@
v24@?0@"NSString"8@"NSMutableSet"16
CoreLocation: #clreg,cbExtendedLocation,iso,%{private}@,neighbors,%{private}@
CoreLocation: #clreg,cbWrapper,isoActual,%{private}@,neighborsWithinLocation,%{private}@,extendedNeighbors,%{private}@
void CLRegulatoryConfigInternal::fetchConfigForLocation(CLLocation *, CLRegulatoryConfigCallback)
CoreLocation: #clreg,fetchConfigForLocation,#warning,location is nil
CoreLocation: #clreg,fetchConfigForLocation,%{private}.6f,%{private}.6f,%{private}.2f
CoreLocation: #clreg,fetchConfigForLocation,#warning,invalidAccuracy
const CLRegulatoryConfigInternal::CircularZoneConfig *CLRegulatoryConfigInternal::findRAEConfig(CLLocation *)
CoreLocation: #clreg,findRAEConfig,%{private}.6f,%{private}.6f,%{private}.2f,distToLocation,%{private}2.f,result,found
CoreLocation: #clreg,findRAEConfig,%{private}.6f,%{private}.6f,%{private}.2f,distToLocation,%{private}2.f,result,notFound
CoreLocation: #clreg,findRAEConfig,no RAEs matched
kCLRegRegionTypeKey
kCLRegRegionTypeDefault
void CLRegulatoryConfigInternal::sendRaeInfoAsync(NSDictionary *, CLRegulatoryInfoCallback)_block_invoke
kCLRegRegionTypeRae
void CLRegulatoryConfigInternal::sendIsoInfoSync(CLRegulatoryRegion, CLRegulatoryRegionMutableList, CLRegulatoryInfoCallback)
CoreLocation: sendIsoInfoSync,region,%{private}@,neighbors,%{private}@
void CLRegulatoryConfigInternal::sendIsoInfoSync(CLRegulatoryRegion, CLRegulatoryRegionMutableList, CLRegulatoryInfoCallback)_block_invoke
CoreLocation: #clreg,invalidRegionType
kCLRegNameKey
kCLRegGeoRegionMatchedKey
kCLRegNeighborsKey
v24@?0@"NSString"8@"NSDictionary"16
kCLRegRegionTypeGeo
void CLRegulatoryConfigInternal::runMapInfoQuery(GEOLocation *, CLRegulatoryConfigInternal::MapsInfoReply)
void CLRegulatoryConfigInternal::runMapInfoQuery(GEOLocation *, CLRegulatoryConfigInternal::MapsInfoReply)_block_invoke
CoreLocation: #clreg,#map,response,lla,%{private}.6f,lon,%{private}.6f,accuracy,%{private}.2f,results,%{private}@
kCLGEOTerritoryInfoKey
%llX
void CLRegulatoryConfigInternal::appendNeighbor(CLRegulatoryRegionMutableList, CLRegulatoryRegion, NSString *)
CoreLocation: Invalid neighbor or excludeRegionName,%{private}@,%{private}@
void CLRegulatoryConfigInternal::sendIsoOrDefaultInfo(CLLocation *, CLRegulatoryInfoCallback)
v24@?0@"NSDictionary"8@"NSMutableSet"16
void CLRegulatoryConfigInternal::fetchInfoForLocation(CLLocation *, CLRegulatoryInfoCallback)
CoreLocation: #clreg,fetchInfoForLocation,#warning,location is nil
CoreLocation: #clreg,fetchInfoForLocation,%{private}.6f,%{private}.6f,%{private}.2f
CoreLocation: #clreg,fetchInfoForLocation,#warning,invalidAccuracy
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
UIApplication
static bool CLNameValuePair::encodeBase64(const void *, unsigned long, std::string &)
CoreLocation: processed %p %d to (%s)
CLNameValuePair::CLNameValuePair()
CoreLocation: could not create new mutable dictionary
CLNameValuePair::CLNameValuePair(CFDictionaryRef)
Memory
bool CLNameValuePair::writeDataToFile(const char *, CFDataRef, CLNameValuePair::CLNVPDataProtection) const
CoreLocation: Could not create NSURL for file: %{public}s
CoreLocation: Could not write data to disk %{public}s, %{public}s
virtual bool CLNameValuePair::saveToFile(const char *) const
CoreLocation: Could not serialize data for file %{public}s
CLNameValuePair.SaveToBinaryFile
virtual void CLNameValuePair::clearInternal(const CFStringRef, int)
CoreLocation: key %{public}s does not have element %{public}d in array of size %{public}ld
CoreLocation: key %{public}s does not have element %{public}d in non-array type %{public}lu
virtual bool CLNameValuePair::get(CFStringRef, bool &, int) const
CoreLocation: Unsupported type at %@:%@ (domain:key)
virtual bool CLNameValuePair::get(CFStringRef, uint16_t &, int) const
virtual bool CLNameValuePair::get(CFStringRef, short &, int) const
virtual bool CLNameValuePair::get(CFStringRef, uint32_t &, int) const
virtual bool CLNameValuePair::get(CFStringRef, int64_t &, int) const
virtual bool CLNameValuePair::get(CFStringRef, int &, int) const
virtual bool CLNameValuePair::get(CFStringRef, long &, int) const
virtual bool CLNameValuePair::get(CFStringRef, double &, int) const
virtual bool CLNameValuePair::get(CFStringRef, CLNameValuePair &, int) const
virtual bool CLNameValuePair::get(CFStringRef, std::string &, int) const
virtual bool CLNameValuePair::get(CFStringRef, CFArrayRef &) const
CoreLocation: type IDs do not match for key %{public}s - %{public}lu vs %{public}lu
virtual bool CLNameValuePair::get(CFStringRef, CFDataRef &, int) const
virtual bool CLNameValuePair::get(CFStringRef, CFStringRef &, int) const
virtual bool CLNameValuePair::get(CFStringRef, const char *&, unsigned int &, int) const
virtual bool CLNameValuePair::copyInternal(CFStringRef, CFTypeRef &, int) const
CoreLocation: specified index is out of range for key %{public}s (%{public}d of %{public}ld)
CoreLocation: specified index %{public}d not applicable to type %{public}lu for key %{public}s
virtual bool CLNameValuePair::set(CFStringRef, const bool &)
CoreLocation: could not create cf type for key %{public}s
virtual bool CLNameValuePair::set(CFStringRef, const uint16_t &)
virtual bool CLNameValuePair::set(CFStringRef, const short &)
virtual bool CLNameValuePair::set(CFStringRef, const uint32_t &)
virtual bool CLNameValuePair::set(CFStringRef, const int64_t &)
virtual bool CLNameValuePair::set(CFStringRef, const int &)
virtual bool CLNameValuePair::set(CFStringRef, const long &)
virtual bool CLNameValuePair::set(CFStringRef, const double &)
virtual bool CLNameValuePair::set(CFStringRef, const char *)
virtual bool CLNameValuePair::set(CFStringRef, const CLNameValuePair &)
virtual bool CLNameValuePair::insert(CFStringRef, const bool &)
virtual bool CLNameValuePair::insert(CFStringRef, const uint16_t &)
virtual bool CLNameValuePair::insert(CFStringRef, const short &)
virtual bool CLNameValuePair::insert(CFStringRef, const uint32_t &)
virtual bool CLNameValuePair::insert(CFStringRef, const int64_t &)
virtual bool CLNameValuePair::insert(CFStringRef, const int &)
virtual bool CLNameValuePair::insert(CFStringRef, const long &)
virtual bool CLNameValuePair::insert(CFStringRef, const double &)
virtual bool CLNameValuePair::insert(CFStringRef, const char *)
virtual bool CLNameValuePair::insert(CFStringRef, const CLNameValuePair &)
virtual bool CLNameValuePair::serializeBinary(CFDataRef *) const
CoreLocation: could not create write stream
CoreLocation: could not open write stream
unknown error
CoreLocation: could not write data, error code, %{public}ld, error domain, %{public}s
virtual bool CLNameValuePair::deserialize(const CFDataRef)
CoreLocation: could not create intermediate property list - %{public}ld (%{public}s)
virtual void CLNameValuePair::print() const
CoreLocation: %s
<empty>
static void CLNameValuePair::printKeyValue(const void *, const void *, void *)
CoreLocation: 
%s = <dictionary (%ld entries)>:
CoreLocation: 
%s = %s
CoreLocation: 
%s = %0.6f
CoreLocation: 
%s = %d
CoreLocation: 
%s = <unhandled value type %lu>
type ID does not match - %lu vs %lu
%s = <dictionary (%ld entries)>:
%s = %s
%s = %0.6f
%s = %d
%s = <unhandled value type %lu>
%s[%d]
static bool CLNameValuePair::fromCfType(const CFTypeRef, short &)
CoreLocation: could not get value
static bool CLNameValuePair::fromCfType(const CFTypeRef, int64_t &)
static bool CLNameValuePair::fromCfType(const CFTypeRef, int &)
static bool CLNameValuePair::fromCfType(const CFTypeRef, long &)
static bool CLNameValuePair::fromCfType(const CFTypeRef, double &)
CoreLocation: type IDs do not match - %{public}lu vs %{public}lu
static bool CLNameValuePair::fromCfType(const CFTypeRef, std::string &)
CoreLocation: could not convert to C string
CoreLocation: can't convert %{public}u data bytes
CoreLocation: #Warning type IDs do not match - %{public}lu
static bool CLNameValuePair::fromCfType(const CFTypeRef, const char *&, unsigned int &)
static bool CLNameValuePair::fromCfType(const CFTypeRef, CLNameValuePair &)
Direct_deprecated
CLReductiveFilterSuite.m
options
+[CLReductiveFilterSuite deriveLocationFromLocations:options:]
CoreLocation: Reductive filtering: Sum of weights <= 0 after at least one point added.
yyyy-MM-dd HH:mm:ss.SSSS
timestamp
Position
/System/Library/PrivateFrameworks/CompassUI.framework/CompassUI
void CLClientLoadCompassUIIfNecessary(void)
CoreLocation: Unable to load CompassUI framework
CUICalibration
CoreLocation: Could not load CUICalibrationClass from CompassUI framework
error == 0
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Daemon/Core/CSI/CLMachThreadSupport.mm
lock
info->fCount >= 0
(info->fCount == 0) || (info->fOwner == curThread)
(info->fCount > 0) || (info->fOwner == __null)
info->fCount > 0
unlock
kCLHeadingCodingKeyMagneticHeading
kCLHeadingCodingKeyTrueHeading
kCLHeadingCodingKeyAccuracy
kCLHeadingCodingKeyX
kCLHeadingCodingKeyY
kCLHeadingCodingKeyZ
kCLHeadingCodingKeyTimestamp
magneticHeading %.2f trueHeading %.2f accuracy %.2f x %+.3f y %+.3f z %+.3f @ %@
virtual bool CLPreferences::serialize(CFDataRef *) const
CoreLocation: ***not supported***
virtual bool CLPreferences::serializeBinary(CFDataRef *) const
virtual bool CLPreferences::deserialize(const CFDataRef)
virtual void CLPreferences::print() const
CoreLocation: 
<empty>
virtual void CLPreferences::merge(const CLPreferences &, bool)
virtual bool CLPreferences::loadFromFile(const char *)
virtual bool CLPreferences::saveToFile(const char *) const
virtual bool CLPreferences::saveToBinaryFile(const char *) const
virtual void CLPreferences::setInternal(const CFStringRef, const CFTypeRef)
CoreLocation: Attempt to set key %{public}s for read-only preferences %{public}s/%{public}s!
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Daemon/Shared/Utilities/CLPreferences.mm
containsInternal
OtherPref
kCLErrorDomain
kCLErrorDomainPrivate
kCLErrorUserInfoAlternateRegionKey
IsSimulator
<null>
<name>
<version>
<build>
hw.model
IOPlatformExpertDevice
IOPlatformSerialNumber
CLPlatformInfo::Provider CLPlatformInfo::getProviders()_block_invoke
CoreLocation: unknown hardware type %{private}d
locationd
static CLPlatformInfo::MotionProviders CLPlatformInfo::motionProviders()
CoreLocation: Unsupported HW type %d; file a radar to CoreMotion Factory | 1.0
CLPlatformInfo::MotionCapabilities CLPlatformInfo::queryMotionCaps()
CoreLocation: Unsupported HW type %{private}d; file a radar to CoreMotion Factory | 1.0
odometer
deltaDistance
deltaDistanceAccuracy
coordinateFused
coordinateFusedWithVL
coordinateLatitude
coordinateLongitude
horizontalAccuracy
referenceFrame
altitude
verticalAccuracy
course
courseAccuracy
Name
Thoroughfare
SubThoroughfare
City
SubLocality
State
SubAdministrativeArea
CountryCode
Country
InlandWater
Ocean
/Library/Caches/locationd/
root
static std::string CLPersistentStore::getMutableStorePath(CLPersistentStoreType)
CoreLocation: no mutable store path for type, %{public}d
CoreLocation: could not get mutable store path for type, %{public}d
/System/Library/Frameworks/CoreLocation.framework/Support/
/System/Library/Frameworks/CoreLocation.framework
SIMULATOR_ROOT
kCLConnectionMessageBBTimeFreqTransferAssert
CLCallbackAssertionInternal::CLCallbackAssertionInternal(dispatch_queue_t, const char *, NSDictionary *, BBTimeFreqTransferCallback)_block_invoke
CoreLocation: CLBBTFTA,unexpected message,%s
kCLConnectionMessageBBTimeFreqTransferAssertError
kCLConnectionMessageBBTimeFreqTransferMeasurement
kCLConnectionMessageGNSSHeatMap
CLBBTFTA Error
(Unspecified)
kCLConnectionMessageAssertionLevelKey
InUseAssertion/kCLConnectionMessage
CLLocationPushServiceErrorDomain
kCLRegionCodingKeyIdentifier
kCLRegionCodingKeyOnBehalfOfBundleId
kCLRegionCodingKeyNotifyOnEntry
kCLRegionCodingKeyNotifyOnExit
kCLRegionCodingKeyConservativeEntry
kCLRegionCodingKeyEmergency
kCLRegionCodingKeyRegionType
kCLRegionCodingKeyDeviceId
kCLRegionCodingKeyHandoffTag
CLRegion.m
CLRegion is an abstract class. Use one of the derived classes
CLRegion (identifier:'%@')
CLFindMyAccessoryAbsoluteWildConfiguration <%hhx> DesiredKeyRollDate:%@ NextWildKeyIndex: %lu
kCLFindMyAccessoryWildConfigurationRollDate
kCLFindMyAccessoryWildConfigurationNextWildKeyIndex
CoreLocation
cl_fence_handoff
kCLCircularRegionCodingKeyCenterLatitude
kCLCircularRegionCodingKeyCenterLongitude
kCLCircularRegionCodingKeyRadius
reserved
kCLCircularRegionCodingKeyMonitoringNearby
kCLCircularRegionCodingKeyLowPower
kCLCircularRegionEncodedKeyVersion
kCLRegionCodingKeyCenterLatitude
kCLRegionCodingKeyCenterLongitude
kCLRegionCodingKeyRadius
CLCircularRegion (identifier:'%@', center:<%+.8f,%+.8f>, radius:%.2fm)
bool CLGetUncertaintyScaleFactors(unsigned int, double *, double *)
CoreLocation: #CLEU,CLGetUncertaintyScaleFactors,input horzontal or vertical SF pointer is NULL
CoreLocation: #CLEU,CLGetUncertaintyScaleFactors,confidence out of bounds,%{public}d
CoreLocation: #CLEU,CLGetUncertaintyScaleFactors,conf,%{public}d,horzSF,%{public}f,vertSF,%{public}f
Emergency
double linearInterp(unsigned int, std::array<std::pair<unsigned int, double>, size>) [size = 9UL]
CoreLocation: #CLEU,linearInterp,x is less than the first point in table,x,%{public}d,table[0].first,%{public}d
CoreLocation: #CLEU,linearInterp,x is greater than the last point in table,x,%{public}d,table[size-1].first,%{public}d
CoreLocation: #CLEU,linearInterp,failed to find table points bounding x
CLBeaconRegionAnyIdentifier
CLBeaconRegion.m
beaconIdentityConstraint
kCLBeaconRegionCodingKeyProximityUUID
kCLBeaconRegionCodingKeyMajor
kCLBeaconRegionCodingKeyMinor
kCLBeaconRegionNotifyEntryStateOnDisplay
CLBeaconRegion (identifier:'%@', uuid:%@, major:%@, minor:%@)
kCLBeaconCodingKeyTimestamp
kCLBeaconCodingKeyProximityUUID
kCLBeaconCodingKeyMajor
kCLBeaconCodingKeyMinor
kCLBeaconCodingKeyProximity
kCLBeaconCodingKeyAccuracy
kCLBeaconCodingKeyRSSI
CLBeacon (uuid:%@, major:%@, minor:%@, proximity:%d +/- %.2fm, rssi:%ld, timestamp:%@)
com.apple.locationd.appreset
com.apple.locationd.appstatus
com.apple.locationd.techstatus
com.apple.locationd.started
com.apple.locationd.statusbar
com.apple.locationd.authorization
com.apple.locationd.gnssbands
Locations
LocationCount
transform
covariance
confidence
<_CLVLLocalizationResult: %p> {
%@.timestamp = %f,
%@.location = { .coordinate = [%f, %f, %f], .horizontalAccuracy = %f },
%@.transform = [%f, %f, %f, %f; %f, %f, %f, %f; %f, %f, %f, %f; %f, %f, %f, %f ],
%@.covariance = [%f, %f, %f, %f, %f, %f; %f, %f, %f, %f, %f, %f; %f, %f, %f, %f, %f, %f; %f, %f, %f, %f, %f, %f; %f, %f, %f, %f, %f, %f; %f, %f, %f, %f, %f, %f ],
%@.confidence = %f
%+08.4lf%+09.4lf/
%+08.4lf%+09.4lf%+08.3lf/
SimulationScenarios
Couldn't get list of location simulation scenarios
plist
Selected location simulation scenario is not a file URL
Selected location simulation scenario does not exist
Selected location simulation scenario is not a property list
CLSimulation: Object passed to appendSimulatedLocation is not a CLLocation!
-[CLSimulationManager clearSimulatedCells]
CoreLocation: this SPI is obsolete and will be removed in the future
-[CLSimulationManager setSimulatedCell:]
-[CLSimulationManager startCellSimulation]
-[CLSimulationManager stopCellSimulation]
-[CLSimulationManager setSimulatedCellRegistrationStatus:]
-[CLSimulationManager setWifiScanResults:]
-[CLSimulationManager startWifiSimulation]
-[CLSimulationManager stopWifiSimulation]
-[CLSimulationManager setSimulatedWifiPower:]
-[CLSimulationManager flush]
com.apple.locationd.simulation
-[CLSimulationManager daemonProxy]_block_invoke
CoreLocation: Simulation connection interrupted
CoreLocation: Simulation connection invalidated
CoreLocation: Error fetching remoteObjectProxy
Simulation
CLBeaconIdentityConstraint.m
The UUID parameter is required
[decoder allowsKeyedCoding]
kCLBeaconIdentityConstraintUUID
kCLBeaconIdentityConstraintMajor
kCLBeaconIdentityConstraintMinor
[encoder allowsKeyedCoding]
CLBeaconIdentityConstraint (uuid:%@, major:%@, minor:%@)
LogFile
LogFileDirectory
LogFilePrefix
LogFileFlush
ShowError
LogFence
LogBufferSize
LogShowUI
LogFileLevel
LogBufferLevel
LogConsoleLevel
LogStackLevel
.log
com.apple.locationd.log.compression
vlog
CLLog.mm
newFullContentLength == fullContentLength
'\n' == buffer[fullContentLength - 1]
%s,%s,Time,%08.3f,Function,"%s",
%s,%s,Time,%08.3f,
%s,%s,logging locations to %s%s
NOTICE
CLLog
 and flushing immediately
 no flush
%s,%s,logging locations to an internal buffer with capacity %d
.bz2
%s,%s,Failed to move aside log file %s (%d)
ERROR
.log.bz2
%s/%s
Failed to delete log
%s,%s,Rotation path is too long, could not delete old logs.
C16@?0r*8
%s,%s,Failed to write %s
%s,%s,could not open locations log %s, errno %d
Unplugged!
void CLLog::logHeader()
CoreLocation-%s
locationd was compiled on %s at %s
Feb 23 2022
22:20:34
%s @ system model %s / version %s
/usr/libexec/locationd @ system model %s / version %s
IOPlatformSerialNumber: %s
Begin settings dump (read at construction of CLSettings or upon darwin notification 'com.apple.locationd/prefs')
End settings dump
com.apple.timed
%s,%s,dumping internal buffer
LogNatalimetry
LogCalorimetry
userinfo
.plist
cache
.plist.log
%s,%s,could not copy %s log
WARNING
%s,%s,could not dump log file
%s,%s,Time,%08.3f,%d
0x%08lx %s + %lu
STATUS
STACK
%s,%s,Time,%08.3f,%d
0x%08lx 0x%08lx + %lu
%s,%s,Time,%08.3f,%d
0x%08lx
kCLVehicleHeadingCodingKeyTrueHeading
kCLVehicleHeadingCodingKeyTimestamp
trueHeading %.2f @ %@
%.2f
kCLVehicleSpeedCodingKeySpeed
kCLVehicleSpeedCodingKeyTimestamp
speed %.2f mps @ %@
%.0fmph
CLDurianIdentifier
CLDurianMacAddress
CLDurianConnectionState
CLDurianError
CLDurianLogs
CLDurianLogType
CLDurianRoseParameters
CLDurianVersionData
CLDurianBatteryStatus
CLDurianRoseResponse
CLDurianTagType
CLDurianObfuscatedIdentifier
CLDurianNearOwnerTimeout
CLDurianSoundSequence
CLDurianPersonalizationInfo
CLDurianFirmwareAssetURL
CLDurianWildConfig
CLDurianMultiStatus
CLDurianUserStats
CLDurianUserStatsPersistence
CLDurianAccelerometerSlopeModeConfigurationKey
CLDurianAccelerometerOrientationModeConfigurationKey
CLDurianAccelerometerModeKey
CLDurianSetUnauthorizedPlaySoundRateLimitKey
CLDurianRoseRangingParameters
CLDurianKeyRollIndex
CLDurianKeyRollInterval
CLHawkeyeTaskOpcodeKey
CLHawkeyeTestModeKey
CLHawkeyeSeparatedUTTimeoutSecondsKey
CLHawkeyeSeparatedUTBackoffTimeoutSecondsKey
CLHawkeyeTxPowerKey
CLHawkeyeAISProductDataKey
CLHawkeyeAISManufacturerNameKey
CLHawkeyeAISModelNameKey
CLHawkeyeAISModelColorCodeKey
CLHawkeyeAISAccessoryCategoryKey
CLHawkeyeAISAccessoryCapabilitiesKey
CLHawkeyeAISFindMyVersionKey
CLHawkeyeAISBatteryTypeKey
CLHawkeyeSerialNumberKey
CLHawkeyeCurrentPrimaryKeyKey
CLHawkeyeiCloudIdentifierKey
CLHawkeyeDataFragmentKey
CLHawkeyeFirmwareAssetURLKey
CLHawkeyeProductGroupKey
CLHawkeyeProductNumberKey
CLHawkeyeFirmwareURLSandboxExtensionKey
CLHawkeyeLocalFirmwareInUseResultKey
CLHawkeyeAggressiveAdvertisementTimeoutKey
CLHawkeyeFetchTxPowerOwnerKey
CLAvengerAdvertisementScanDateKey
CLAvengerAdvertisementAddressKey
CLAvengerAdvertisementDataKey
CLAvengerAdvertisementStatusKey
CLAvengerAdvertisementRSSIKey
CLAvengerAdvertisementReservedKey
CLAvengerAdvertisementOwnershipTypeKey
CLAvengerAdvertisementChannelKey
CLAvengerScanParametersKey
CLCircularLogBuffer
CLVisit.m
kCLVisitCodingKeyLatitude
kCLVisitCodingKeyLongitude
kCLVisitCodingKeyHorizontalAccuracy
kCLVisitCodingKeyArrivalDate
kCLVisitCodingKeyDepartureDate
kCLVisitCodingKeyDetectionDate
kCLVisitCodingKeyPlaceInference
<%+.8f,%+.8f> +/- %.2fm (%@ to %@) %@
CLGeocoder
[GEOMapService class]
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Framework/CoreLocation/CLGeocoder.m
-[CLGeocoder init]
-[CLGeocoder reverseGeocodeLocation:preferredLocale:heading:localResultsOnly:completionHandler:]_block_invoke
CoreLocation: Coarse MetaData cannot be decoded while reverse geocoding location, error, %@
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v24@?0@"<GEOMapItem>"8@"NSError"16
-[CLGeocoder _ticket:didReturnError:partialResultForLocation:]_block_invoke
CoreLocation: #Warning Geocode error: %{private}@
com.apple.locationd.synchronous
-[CLLocationInternalClient connection]_block_invoke
CoreLocation: #Spi, Interrupted
CoreLocation: #Spi, Invalidated
-[CLLocationInternalClient synchronousRemoteObject]_block_invoke
CoreLocation: #Spi, Error with proxy, error: %@
v20@?0@"NSError"8i16
v24@?0@"NSError"8@"NSData"16
com.apple.locationd.internalservice.errorDomain
v24@?0@"NSError"8@"NSDictionary"16
v24@?0@"NSError"8@"NSArray"16
v24@?0@"NSError"8@"NSString"16
-[CLLocationInternalClient setLocationDefaultForKey:value:]
CoreLocation: #Spi, Key is NULL!
-[CLLocationInternalClient setLocationDefaultForKey:value:]_block_invoke
CoreLocation: #Spi, Couldn't set location default!
-[CLLocationInternalClient timeZoneAtLocation:]
LocationInternal.m
nil != location
-[CLLocationInternalClient setPrivateMode:]_block_invoke
CoreLocation: #Spi, setPrivateMode failed
v20@?0@"NSError"8B16
-[CLLocationInternalClient setLocationServicesEnabled:]_block_invoke
CoreLocation: #Spi, CLInternalSetLocationServicesEnabled failed
-[CLLocationInternalClient setAuthorizationPromptMapDisplayEnabled:]_block_invoke
CoreLocation: #Spi, CLInternalSetAuthorizationPromptMapDisplayEnabled failed
-[CLLocationInternalClient setTemporaryAuthorizationStatusForBundleId:orBundlePath:statusData:]
data != nil
v24@?0@"NSError"8d16
-[CLLocationInternalClient setGestureServiceEnabled:]_block_invoke
CoreLocation: #Spi, CLInternalSetGestureServiceEnabled failed
-[CLLocationInternalClient performMigration]
CoreLocation: #Spi, _CLInternalPerformMigration failed
-[CLLocationInternalClient shutdownDaemon]
CoreLocation: #Spi, _CLShutdownDaemon failed
-[CLLocationInternalClient displayStatistics]
CoreLocation: #Spi, _CLDisplayStatistics failed
-[CLLocationInternalClient dumpLogs:]
CoreLocation: #Spi, _CLDumpLogs failed
v192@?0@"NSError"8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16
v48@?0@"NSError"8{?=dddi}16
-[CLLocationInternalClient setMapMatchingRouteHint:count:routingType:stepType:]
CoreLocation: #Spi,RouteHintError, Exceeded max number of route hint road segments (%{public}d > %{public}d)
CoreLocation: #Spi,RouteHint,LocationInternal,Received route hint road segments,%{public}d,routeType,%{public}d,stepType,%{public}d
-[CLLocationInternalClient setMapMatchingRouteHint:count:routingType:stepType:]_block_invoke
CoreLocation: #Spi,RouteHintError,Couldn't set map-matching route hint!
-[CLLocationInternalClient getAccessoryTypeBitSet]_block_invoke
CoreLocation: #Spi,getAccessoryTypeBitSet,failed
-[CLLocationInternalClient getAccessoryTypeBitSet]
CoreLocation: #Spi,getAccessoryTypeBitSet,%d
-[CLLocationInternalClient copyLastLog]
CoreLocation: #Spi, _CLCopyLastLog failed
v32@?0@"NSError"8Q16Q24
CFArrayRef CLCopyGnssBandsInUse(void)
CoreLocation: Invalid bandUse,%{public}d
{CLGnssBandInfo=iddi}
CLStatusBarIconState CLGetStatusBarIconState()
CoreLocation: CLStatusBarIconState received an icon stateu of %d
void CLSetMapMatchingRouteHint(CLClientLocationRouteHintType, CLClientLocationRouteHintType, CLMapsRouteHint *, int)
CoreLocation: RouteHints,CLSetRouteHintsForMapMatching,received,%lu,routeType,%d,stepType,%d
void CLSetRouteHintsForMapMatching(CLClientLocationRouteHintType, CLMapsRouteHint *, int)
CoreLocation: RouteHints,CLSetRouteHintsForMapMatching,received,%lu,routeType,%d
int32_t CLGetAccessoryTypeBitSet()
CoreLocation: CLGetAccessoryTypeBitSet
[GEOLocation class]
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Framework/CoreLocation/CLPlacemark.m
-[CLPlacemarkInternal init]
<%+.8f,%+.8f> radius %.2f
kCLPlacemarkCodingKeyLocation
kCLPlacemarkCodingKeyAddress
kCLPlacemarkCodingKeyRegion
kCLPlacemarkCodingKeyAreasOfInterest
kCLPlacemarkCodingKeyMapItemSource
kCLPlacemarkCodingKeyGEOMapItem
kCLPlacemarkCodingKeyGEOMapItemHandle
kCLPlacemarkCodingKeyMeCardAddress
Street
FormattedAddressLines
<%+.8f,%+.8f> +/- %.2fm
, region 
, source 
CNPostalAddressStreetKey
/System/Library/Frameworks/Contacts.framework/Contacts
CNPostalAddressSubLocalityKey
CNPostalAddressCityKey
CNPostalAddressSubAdministrativeAreaKey
CNPostalAddressStateKey
CNPostalAddressPostalCodeKey
CNPostalAddressCountryKey
CNPostalAddressISOCountryCodeKey
CNPostalAddress
-[CLLocationPushServiceExtensionRemoteContext initWithInputItems:listenerEndpoint:contextUUID:]
CoreLocation: [%{public}@] Location Push Service extension context initialized
-[CLLocationPushServiceExtensionRemoteContext didReceiveLocationPushPayload:reply:]
CoreLocation: [%{public}@] didReceiveLocationPushPayload:reply:
-[CLLocationPushServiceExtensionRemoteContext serviceExtensionWillTerminate]
CoreLocation: [%{public}@] Location Push Service extension time will expire
-[CLLocationPushServiceExtensionRemoteContext serviceExtensionPerformCleanup]
CoreLocation: [%{public}@] Cleaning up extension
kCLVertexCodingKeyLatitude
kCLVertexCodingKeyLongitude
_CLVertex (latitude:'%.07lf', longitude:'%.07lf')
-[_CLPolygonalRegion initWithVertices:identifier:]
CoreLocation: number of vertices (%{public}lu) mustn't exceed %{public}lu
CoreLocation: number of vertices (%{public}lu) must be greater or equal than %{public}lu
CoreLocation: monitoring requires a valid connected polygon where first and last coordinates are the same
CoreLocation: All vertices, except for the first and last equals, have to be unique
CLPolygonalRegion.m
kCLPolygonalRegionCodingKeyVertices
kCLPolygonalRegionCodingKeyReferenceFrame
kCLPolygonalRegionCodingKeyMonitoringNearby
_CLPolygonalRegion (identifier:'%@', count:'%lu')
com.apple.locationd.harvester
CLPPoiHarvest
-[CLHarvester connect]_block_invoke
CoreLocation: CLHarvester invalidation handler
CoreLocation: CLHarvester interruption handler
-[CLHarvester currentStateDictionary]_block_invoke
CoreLocation: CLHarvester synchronous remote proxy invalidated
CoreLocation: CLHarvester fetchState reply block called
v16@?0@"NSDictionary"8
Harvester
CLFindMyAccessoryFirmwareVersion <%p> VanBurenVersion: %@, RTKitVersion: %@, RoseAPVersion: %lu, RoseDSPVersion: %lu, CalibrationDataVersion: %lu
%u%c%u
%u.%u
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
UnknownStateTracker
ZoneId
BundleId
BundlePath
com.apple.FindMyAccessoryFirmwareUpdateManager.privateQueue
-[CLFindMyAccessoryFirmwareUpdateManager handleInterruption]
-[CLFindMyAccessoryFirmwareUpdateManager handleMessage:]
DurianManagement/DidFetchPersonalizationInformation
CoreLocation: informing client -- did retreive personalization info for device: %s - %s with info: %@
DurianManagement/DidUpdateFirmware
Succeeded
CoreLocation: informing client -- firmware update for device: %s - %s
DurianManagement/DidUseLocalAssetRequest
CoreLocation: informing client -- use local asset request for product group: %s, product number: %s - %s
DurianManagement/DidUseDefaultAssetRequest
CoreLocation: informing client -- use default asset request for product group: %s, product number: %s - %s
DurianManagement/DidFetchWhetherLocalFirmwareAssetIsInUse
IN USE
NOT IN USE
CoreLocation: informing client -- local firmware asset is %s for product group: %s, product number: %s
CoreLocation: CLFindMyAccessoryFirmwareUpdateManager - Unknown Message - ignoring
CLFindMyAccessoryFirmwareUpdateManager.mm
-[CLFindMyAccessoryFirmwareUpdateManager getPersonalizationInfoForDevice:]
CoreLocation: getPersonalizationInfoForDevice: %@
assetURL
-[CLFindMyAccessoryFirmwareUpdateManager updateFirmwareForDevice:withAssetURL:]
CoreLocation: updateFirmwareForDevice for device: %@ with assetURL: %@
-[CLFindMyAccessoryFirmwareUpdateManager abortFirmwareUpdateForDevice:]
CoreLocation: abortFirmwareUpdateForDevice: %@
firmwareUpdateAssetURL
productGroup
productNumber
extension
-[CLFindMyAccessoryFirmwareUpdateManager useLocalFirmwareAssetFromURL:forProductGroup:forProductNumber:withSandboxExtension:]
CoreLocation: useLocalFirmwareAssetFromURL: %@ forProductGroup: %@ forPorductNumber: %@ withSandboxExtension: %@
-[CLFindMyAccessoryFirmwareUpdateManager useDefaultFirmwareAssetSourceForProductGroup:andProductNumber:]
CoreLocation: useDefaultFirmwareAssetSourceForProductGroup: %@ forPorductNumber: %@
-[CLFindMyAccessoryFirmwareUpdateManager fetchWhetherLocalFirmwareAssetIsInUseForProductGroup:andProductNumber:]
CoreLocation: fetchWhetherLocalFirmwareAssetIsInUseForProductGroup: %@ forPorductNumber: %@
DurianManagement/FetchPersonalizationInformation
DurianManagement/UpdateFirmware
DurianManagement/AbortFirmwareUpdate
DurianManagement/UseLocalFirmwareAssetFromUrl
DurianManagement/UseDefaultFirmwareAssetSource
DurianManagement/FetchWhetherLocalFirmwareAssetIsInUse
ProvisionalMonitoring
RemoteUsage
InUseLevel
Authorization
Authorized
SupportedAuthorizationMask
CorrectiveCompensationEnabled
IncidentalUseMode
InterestZones
Relevant
BackgroundIndicatorEnabled
LocationTimeStarted
LocationTimeStopped
FenceTimeStarted
FenceTimeStopped
SignificantTimeStarted
SignificantTimeStopped
VisitTimeStarted
VisitTimeStopped
RangeTimeStarted
RangeTimeStopped
BeaconRegionTimeStarted
BeaconRegionTimeStopped
ReceivingLocationInformationTimeStarted
ReceivingLocationInformationTimeStopped
NonPersistentSignificantTimeStarted
NonPersistentSignificantTimeStopped
PushTimeStarted
PushTimeStopped
Registered
CLBundleKeyValueCache
CLSystemService
CLIsFindMyiPhone
CLIsCoreRoutine
CLEmergencyService
CLPlaceInference.m
kCLPlaceInferenceUserType
kCLPlaceInferencePlaceType
kCLPlaceInferencePlacemark
kCLPlaceInferenceReferenceLocation
kCLPlaceInferenceConfidence
kCLPlaceInferencePreferredName
kCLPlaceInferenceLoiIdentifier
CLPlaceInference, ref, <%f,%f> +/- %f, userType, %lu, placeType, %lu, placemark, %@, preferredName, %@, confidence, %f, related loi identifier, %@
double CLDistanceCalc::calculateDistance(const CLDaemonLocation &, const CLDaemonLocation &)
CoreLocation: #Warning refAlt < %.1lf,refAlt,%.1lf,using the min
CoreLocation: #Warning refAlt > %.1lf,refAlt,%.1lf,using the max
-[_CLSignificantRegion initWithCenter:radius:referenceFrame:lowPower:identifier:onBehalfOfBundleId:notifyOnEntry:notifyOnExit:conservativeEntry:emergency:deviceId:handoffTag:]
CoreLocation: LowPower not supported for this object/platform
CoreLocation: Conservative not supported for this object/platform
CLSignificantRegion.m
kCLSignificantRegionCodingKeyType
CLSignificantRegion (identifier:'%@', center:<%+.8f,%+.8f>, radius:%.2fm, frame:%d)
CLFindMyAccessoryWildConfiguration <%hhx> DesiredKeyRollDate:%@ KeyRollInterval:%llu KeysRemaining:%llu KeyCount:%llu
kCLFindMyAccessoryWildConfigurationKeyRollInterval
kCLFindMyAccessoryWildConfigurationKeysRemaining
kCLFindMyAccessoryWildConfigurationKeyCount
kCLLocationCodingKeyCoordinateLatitude
kCLLocationCodingKeyCoordinateLongitude
kCLLocationCodingKeyHorizontalAccuracy
kCLLocationCodingKeyAltitude
kCLLocationCodingKeyVerticalAccuracy
kCLLocationCodingKeySpeed
kCLLocationCodingKeySpeedAccuracy
kCLLocationCodingKeyCourse
kCLLocationCodingKeyCourseAccuracy
kCLLocationCodingKeyTimestamp
kCLLocationCodingKeyType
kCLLocationCodingKeyLifespan
kCLLocationCodingKeyMatchInfo
kCLLocationCodingKeyFloor
kCLLocationCodingKeySimulationParams
kCLLocationCodingKeyFromSoftwareSimulator
kCLLocationCodingKeyFromExternalAccessory
kCLLocationCodingKeyIntegrity
kCLLocationCodingKeyGroundAltitude
kCLLocationCodingKeyFusionInfo
kCLLocationCodingKeyRawCoordinateLatitude
kCLLocationCodingKeyRawCoordinateLongitude
kCLLocationCodingKeyRawHorizontalAccuracy
kCLLocationCodingKeyRawReferenceFrame
kCLLocationCodingKeyRawAltitude
kCLLocationCodingKeyRawVerticalAccuracy
kCLLocationCodingKeyRawCourse
kCLLocationCodingKeyRawCourseAccuracy
kCLLocationCodingKeyCoarseMetaData
kCLLocationCodingKeySignalEnvironmentType
kCLLocationCodingKeyEllipsoidalAltitude
kCLLocationCodingKeyPositionContextState
kCLLocationCodingKeyProbabilityPositionContextStateIndoor
kCLLocationCodingKeyProbabilityPositionContextStateOutdoor
kCLLocationCodingKeyGnssOdometerInfo
{CLLocationSourceInformation=#BB}
<%+.8f,%+.8f> +/- %.2fm (speed %.2f mps / course %.2f) @ %@
suitability
latitude
longitude
speed
lifespan
type
rawLatitude
rawLongitude
rawReferenceFrame
signalEnvironment
ellipsoidalAltitude
isSoftwareSimulated
isFromExternalAccessory
CLAssertionInternalQueue
Type
EncodedSequence
CLLogBase
yyyy-MM-dd_HH-mm-ss
/Library/Logs/CrashReporter/com.apple.locationd
mobile
Library
Caches
Logs
CrashReporter
CLRangingPeer.m
(macAddress & 0xFFFF000000000000) == 0
macAddress
[aDecoder allowsKeyedCoding]
[aCoder allowsKeyedCoding]
Peer:%@ hasKey:%s
(len >= 11) && (len <= 17)
peer
date
distance
Peer: %@ time:%@ distance[m]:%.02f accuracy[m]:%.02f unlock:%s secure:%s initiator:%s
kCLCodingKeyRangingPeerMacAddress
kCLCodingKeyRangingPeerSecureRangingKeyID
kCLCodingKeyRangingPeerDistancePeer
kCLCodingKeyRangingPeerDistanceTimestamp
kCLCodingKeyRangingPeerDistanceDistance
kCLCodingKeyRangingPeerDistanceAccuracy
kCLCodingKeyRangingPeerDistanceInitiator
kCLCodingKeyRangingPeerDistanceUnlock
LocationIndependenceAssertion/kCLConnectionMessage
<_CLLSLLocationCoordinate: %p> { .latitude = %f, .longitude = %f }
coordinate
<_CLLSLLocation: %p> {
%@.coordinate = %@,
%@.altitude = %f,
%@.timestamp = %f
roadID
polylines
<NSArray: %p> {
%@%@%@
<_CLLSLMapRoadSegment: %p> {
%@.roadID = %llu,
%@.polylines = %@
roadSegment
<_CLLSLHeadingSupplInfo: %p> {
%@.roadSegment = %@
rotationFromGlobalToDeviceFrame
rotationFromGlobalToCameraFrame
rotationalAccuracyInRadians
globalReferenceFrame
supplemantaryInfo
<_CLLSLHeading: %p> {
%@.timestamp = %f,
%@.rotationFromGlobalToDeviceFrame = [%f, %f, %f; %f, %f, %f; %f, %f, %f],
%@.rotationFromGlobalToCameraFrame = [%f, %f, %f; %f, %f, %f; %f, %f, %f],
%@.rotationalAccuracyInRadians = [%f, %f, %f],
%@.confidence = %f,
%@.globalReferenceFrame = %zu,
%@.location = %@,
%@.supplemantryInfo = %@
status
headings
<_CLLSLHeadingEstimation: %p> {
%@.status = %d,
%@.headings = %@
trackingState
originTimestamp
inertialStateInfo
inertialState
inertialCovarianceInfo
inertialCovariance
cameraPose
cameraIntrinsics
cameraImageResolutionKey
{CGSize=dd}
<_CLVIOEstimation: %p> {
%@.trackingState = %d,
%@.originTimestamp = %f,
%@.timestamp = %f,
%@.inertialStateInfo = { .stateLengthInbytes = %lu, .stateLength = %d, ... },
%@.inertialState = <NSData: %p> %@,
%@.inertialCovarianceInfo = { .covarianceSizeInbytes = %lu, .covariance = %d, ... },
%@.inertialCovariance = <NSData: %p> %@,
%@.cameraPose = [%f, %f, %f, %f; %f, %f, %f, %f; %f, %f, %f, %f; ... ],
%@.cameraIntrinsics = [%f, %f, %f; %f, %f, %f; %f, %f, %f],
%@.cameraImageResolution = [%f, %f]
Data does not exist
Data is valid
Data exceeded maximum buffer size
CLLocationManagerRoutineClientInterface
NSObject
CLLocationManagerRoutineServerInterface
_CLLocationManagerRoutineProxy
CLLocationManagerRoutine
CLEmergencyEnablementAssertion
CLFindMyAccessoryConnectionMaterial
NSCopying
NSSecureCoding
NSCoding
CLLocationManagerStateTracker
CLLocationManagerInternal
CLDiagnosticManagerXPCServerInterface
CLLocationManager
VehicleData
MatchInfo
GroundAltitude
FusionInfo
CLVisitExtensions
_CLPlaceInferenceExtensions
_CLEstimatedLocationExtensions
_CLRoutineExtensions
_CLLocationGroundAltitude
CLLocationSmootherClientInterface
CLLocationSmootherServerInterface
_CLLocationSmootherProxy
CLLocationSmoother
CLFindMyAccessoryAccelerometerSlopeModeConfiguration
CLFindMyAccessoryAccelerometerOrientationModeConfiguration
CLGnssDisablementAssertion
CLLocationMatchInfoInternal
CLLocationMatchInfo
CLFindMyAccessoryRangingManager
CLLocationPushServiceExtensionHostContext
CLLocationPushServiceExtensionHostXPCInterface
CLFindMyAccessoryManager
CLRegulatoryConfig
CLReductiveFilterSuite
CLHeadingInternal
CLHeading
CLLocationGnssOdometerInfo
_CLLocationFusionInfo
CLBBTimeFreqTransferCallbackAssertion
_CLVLExtensions
CLInUseAssertion
DeprecatedMethods
CLRegion
CLFindMyAccessoryAbsoluteWildConfiguration
CLCircularRegion
CLBeaconRegion
CLBeaconInternal
CLBeacon
_CLVLLocalizationResult
CLSimulationXPCServerInterface
CLSimulationLocationProtocol
CLSimulationManager
CLBeaconIdentityConstraint
CLLocationPushServiceExtensionRemoteXPCInterface
CLLocationPushServiceExtensionContext
CLVehicleHeadingInternal
CLVehicleHeading
CLVehicleSpeedInternal
CLVehicleSpeed
CLVisit
CLGeocoderExtras
CLGeocoderInternal
CLGeocoder
ContactsAdditions
CLLocationInternalServiceProtocol
CLLocationInternalClient
_CLARExtensions
CLPlacemarkInternal
CLPlacemark
CLReductiveFilterOptions
CLLocationPushServiceExtensionRemoteContext
_CLVertex
_CLPolygonalRegion
CLHarvesterServerInterface
CLHarvester
_CLVIOExtensions
CLFindMyAccessoryFirmwareVersion
CLStateTracker
CLLocationManagerAuthorization
CLFindMyAccessoryFirmwareUpdateManager
_CLPlaceInference
_CLSignificantRegion
CLFindMyAccessoryWildConfiguration
CLLocationInternal
CLFloor
CLLocationSourceInformation
CLLocation
GnssOdometerInfo
CLAssertion
CLFindMyAccessorySoundSequence
_CLRangingPeerInternal
_CLRangingPeerDistanceInternal
_CLRangingPeer
_CLRangingPeerDistance
CLLocationIndependenceAssertion
_CLLSLLocationCoordinate
_CLLSLLocation
_CLLSLMapRoadSegment
_CLLSLHeadingSupplInfo
_CLLSLHeading
_CLLSLHeadingEstimation
_CLVIOEstimation
CLFindMyAccessoryFragmentAccumulator
initWithCurrentRunLoopAndIdentifier:
UTF8String
async:
mainBundle
objectForInfoDictionaryKey:
dictionary
setObject:forKeyedSubscript:
errorWithDomain:code:userInfo:
setWithObject:
objectForKeyedSubscript:
setWithObjects:
type
initWithCapacity:
addObject:
archivedDataWithRootObject:requiringSecureCoding:error:
length
objectForKey:
intValue
stringWithUTF8String:
initWithUUIDString:
initWithCenter:radius:referenceFrame:allowMonitoringWhenNearby:lowPower:identifier:onBehalfOfBundleId:notifyOnEntry:notifyOnExit:conservativeEntry:emergency:deviceId:handoffTag:
unarchivedArrayOfObjectsOfClass:fromData:error:
count
initWithVertices:identifier:
setReferenceFrame:
setEmergency:
initWithUUID:major:minor:identifier:
initWithUUID:major:identifier:
initWithUUID:identifier:
initWithIdentifier:
setOnBehalfOfBundleId:
setNotifyEntryStateOnDisplay:
setNotifyOnEntry:
setNotifyOnExit:
setConservativeEntry:
countByEnumeratingWithState:objects:count:
onBehalfOfBundleId
identifier
definitionMask
UUID
UUIDString
major
unsignedShortValue
minor
notifyOnEntry
notifyOnExit
notifyEntryStateOnDisplay
conservativeEntry
emergency
dictionaryWithObjects:forKeys:count:
newTimer
setHandler:
setNextFireDelay:
invalidate
deviceId
handoffTag
center
radius
desiredAccuracy
referenceFrame
allowMonitoringWhileNearby
isLowPower
vertices
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
init
createConnection
setLocationManagerRoutine:
setDelegate:
connection
setConnection:
dealloc
delegate
locationManager:didUpdateLocations:
locationManagerRoutine
didUpdateLocations:
locationManager:didUpdateLocations:completion:
initWithMachServiceName:options:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
didUpdateLocations:withReply:
interfaceWithProtocol:
setExportedInterface:
setExportedObject:
exportedInterface
setClasses:forSelector:argumentIndex:ofReply:
startUpdatingLocation
stopUpdatingLocation
setRemoteObjectInterface:
serviceName
setInterruptionHandler:
setInvalidationHandler:
resume
updating
remoteObjectProxy
initWithQueue:locationManagerRoutine:
setUpdating:
_queue
_updating
_connection
_delegate
_locationManagerRoutine
T@"NSXPCConnection",&,N,V_connection
T@,N,V_delegate
T@"CLLocationManagerRoutine",N,V_locationManagerRoutine
TB,N,V_updating
stringWithFormat:
initWithQueue:
locationManagerRoutineProxy
setLocationManagerRoutineProxy:
_locationManagerRoutineProxy
T@"_CLLocationManagerRoutineProxy",&,N,V_locationManagerRoutineProxy
T@"<CLLocationManagerDelegate>",N
initWithRegistrationMessageName:messageDictionary:
copy
bundlePath
newAssertionWithReason:
newAssertionForBundleIdentifier:withReason:
newAssertionForBundle:withReason:
doesNotRecognizeSelector:
initWithAddress:ltk:primaryIndex:secondaryIndex:
isEqualToMaterial:
address
isEqualToData:
primaryIndex
isEqualToNumber:
secondaryIndex
decodeObjectOfClass:forKey:
encodeObject:forKey:
setObject:forKey:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
initWithAddress:ltk:
dictionaryDescription
_address
_ltk
_primaryIndex
_secondaryIndex
T@"NSData",R,V_address
T@"NSData",R,V_ltk
T@"NSNumber",R,V_primaryIndex
T@"NSNumber",R,V_secondaryIndex
bytes
initInSilo:withIdentifier:state:
assertInside
queue
initWithQueue:identifier:state:
trackerStateSize
trackerStateTypeName
initInSilo:withIdentifier:
initWithQueue:identifier:
distanceFilter
setDistanceFilter:
setDesiredAccuracy:
updatingLocation
setUpdatingLocation:
requestingLocation
setRequestingLocation:
requestingRanging
setRequestingRanging:
updatingRanging
setUpdatingRanging:
updatingHeading
setUpdatingHeading:
headingFilter
setHeadingFilter:
allowsLocationPrompts
setAllowsLocationPrompts:
allowsAlteredAccessoryLocations
setAllowsAlteredAccessoryLocations:
dynamicAccuracyReductionEnabled
setDynamicAccuracyReductionEnabled:
previousAuthorizationStatusValid
setPreviousAuthorizationStatusValid:
previousAuthorizationStatus
setPreviousAuthorizationStatus:
limitsPrecision
setLimitsPrecision:
activityType
setActivityType:
pausesLocationUpdatesAutomatically
setPausesLocationUpdatesAutomatically:
paused
setPaused:
allowsBackgroundLocationUpdates
setAllowsBackgroundLocationUpdates:
showsBackgroundLocationIndicator
setShowsBackgroundLocationIndicator:
allowsMapCorrection
setAllowsMapCorrection:
batchingLocation
setBatchingLocation:
updatingVehicleSpeed
setUpdatingVehicleSpeed:
updatingVehicleHeading
setUpdatingVehicleHeading:
matchInfoEnabled
setMatchInfoEnabled:
groundAltitudeEnabled
setGroundAltitudeEnabled:
fusionInfoEnabled
setFusionInfoEnabled:
courtesyPromptNeeded
setCourtesyPromptNeeded:
isAuthorizedForWidgetUpdates
setIsAuthorizedForWidgetUpdates:
updateState:
dumpState:withSize:hints:
_state
_identifier
_inTransaction
Td,N
TB,N
Ti,N
Tq,N
hasLingeringRangingRequest
cancelRangingRequest
initWithInfo:bundleIdentifier:bundle:delegate:silo:
PausesLocationUpdatesAutomatically
stopUpdatingLocationAutoPaused
cancelLocationRequest
cancelLingeringRangingRequest
performCourtesyPromptIfNeeded
rangedRegions
rangedConstraints
manager
setManager:
.cxx_destruct
fClient
fDelegate
fManager
fState
fLocation
fLocationEventType
fLocationRequestTimer
fLocationRequestTimeout
fRangingRequestTimer
fLastRangingRequestTimeout
fLastRangingRequestMachTime
fHeadingOrientation
fRangedRegions
fRangedConstraints
fPlaceInferenceHandler
fFidelityPolicy
fPlaceInferenceTimer
fSilo
T@"NSMutableSet",R,N,VfRangedRegions
T@"NSMutableSet",R,N,VfRangedConstraints
T@"<CLLocationManagerDelegate>",W,N,VfDelegate
T@"CLLocationManager",W,N,VfManager
onClientEvent:supportInfo:
initWithCurrentRunLoopAndIdentifier:bePermissive:
defaultCenter
onDidBecomeActive:
addObserver:selector:name:object:
initWithEffectiveBundleIdentifier:bundle:delegate:silo:
initWithUnderlyingQueue:bePermissive:
removeObserver:
locationServicesEnabled
initWithClientLocation:
_authorizationStatus
bundleIdentifier
containsString:
isEqualToString:
locationManagerDidResumeLocationUpdates:
locationManager:didFailWithError:
onLocationRequestTimeout
initWithClientHeading:
startMonitoringForRegion:
locationManager:monitoringDidFailForRegion:withError:
initWithArray:
removeObject:
initWithSet:copyItems:
locationManager:rangingBeaconsDidFailForRegion:withError:
initWithBeaconIdentityConstraint:identifier:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didRangePeers:
locationManager:rangingDidFailForPeer:withError:
onRangingRequestTimeout
setValue:forKey:
arrayWithObjects:count:
initWithDictionary:copyItems:
removeObjectForKey:
requestMicroLocationRecordingScanWithAdditionalInformation:shouldForceRecording:
setWithArray:
arrayWithObject:
onClientEventAuthStatus:
boolValue
onClientEventLocation:forceMapMatching:type:
onClientEventLocationUnavailable:
onClientEventHeading:
onClientEventHeadingCalibration:
onClientEventError:
onClientEventRegion:
onClientEventRegionState:
onClientEventRegionError:
onClientEventRanging:
onClientEventRangingError:
onClientEventPeerRanging:
onClientEventPeerRangingRequestProcessed:
onClientEventPeerRangingError:
onClientEventRegionResponseDelayed:
onClientEventRegionSetupCompleted:
onClientEventNoLocationWatchdog:
onClientEventAutopauseStatus:
onClientEventBatch:
onClientEventInterrupted:
onClientEventVehicleSpeed:
onClientEventVehicleHeading:
onClientEventSignificantLocationVisit:
onClientEventSignificantLocationVisitStateRequest:
onClientEventPlaceInferenceError:
onClientEventPlaceInferenceResult:
locationManagerDidChangeAuthorization:
locationManager:didReceiveApproval:
locationManager:didChangeAuthorizationStatus:
unmatch
makeObjectsPerformSelector:
lastObject
clientLocation
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
callPlaceInferenceHandlerWithResult:error:
_setResponseSilo:
array
initWithUserType:placeType:placemark:referenceLocation:confidence:preferredName:loiIdentifier:
reverseGeocodeLocation:completionHandler:
locationManager:didEnter:completion:
locationManager:didEnterRegion:
locationManager:didExit:completion:
locationManager:didExitRegion:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:didRangeBeacons:satisfyingConstraint:
objectAtIndex:
integerValue
doubleValue
shortValue
initWithUUID:major:minor:proximity:accuracy:rssi:timestamp:
enumerateObjectsUsingBlock:
sortDescriptorWithKey:ascending:
arrayWithObjects:
sortUsingDescriptors:
beaconIdentityConstraint
containsObject:
initForReadingFromData:error:
decodeObjectOfClasses:forKey:
finishDecoding
locationManager:didStartRangingForPeer:
locationManager:didStopRangingForPeer:
objectAtIndexedSubscript:
code
dictionaryWithObject:forKey:
locationManager:didNotReceiveLocationUpdatesForRegionMonitoringInInterval:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
name
resumeLocationUpdates
pauseLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didUpdateVehicleSpeed:
initWithClientVehicleSpeed:
locationManager:didUpdateVehicleHeading:
initWithClientVehicleHeading:
locationManager:didVisit:
locationManager:didReportVisit:
_authorizationStatusForBundleIdentifier:bundle:
authorizationStatus
accuracyAuthorization
requestWhenInUseAuthorization
_requestTemporaryFullAccuracyWithUsageDescription:completion:
requestTemporaryFullAccuracyAuthorizationWithPurposeKey:
requestTemporaryFullAccuracyAuthorizationWithPurposeKey:completion:
copyRegisteredFilesWithHandler:
remoteObjectProxyWithErrorHandler:
sharedManager
locationServicesEnabled:
setLocationServicesEnabled:
setAuthorizationPromptMapDisplayEnabled:
authorizationPromptMapDisplayEnabled
headingAvailable
significantLocationChangeMonitoringAvailable
isMonitoringAvailableForClass:
regionMonitoringAvailable
regionMonitoringEnabled
isRangingAvailable
mapCorrectionAvailable
_checkAndExerciseAuthorizationForBundleID:error:
_checkAndExerciseAuthorizationForBundle:error:
deferredLocationUpdatesAvailable
isPeerRangingAvailable
metadataForHomekitAccessoryControlEventWithUUID:stateString:serviceUUID:serviceType:characteristicType:serviceGroupUUID:source:roomUUID:
metadataForHomekitActionSetEventWithUUID:name:type:clientName:source:homeName:
metadataForMicroLocationTruthTagEventWithTagUUID:
_archivedAuthorizationDecisionsWithError:
_applyArchivedAuthorizationDecisions:
authorizationStatusForBundleIdentifier:
authorizationStatusForBundle:
setAuthorizationStatus:forBundleIdentifier:
setAuthorizationStatus:forBundle:
setAuthorizationStatusByType:forBundleIdentifier:
setAuthorizationStatusByType:forBundle:
setAuthorizationStatusByType:withCorrectiveCompensation:forBundleIdentifier:
updateCorrectiveCompensationChoiceForOutstandingPrompt:
setAuthorizationStatusByType:withCorrectiveCompensation:forBundle:
setIncidentalUseMode:forBundle:
setIncidentalUseMode:forBundleIdentifier:
getIncidentalUseMode:forBundle:
getIncidentalUseMode:forBundleIdentifier:
registerCircularInterestZoneWithId:latitue:longitude:radius:serviceMaskOperator:provenanceType:forBundleIdentifier:error:
registerCircularInterestZoneWithId:latitue:longitude:radius:serviceMaskOperator:provenanceType:forBundle:error:
registerPhenolicInterestZoneWithId:phenolicLocation:serviceMaskOperator:provenanceType:forBundleIdentifier:error:
registerPhenolicInterestZoneWithId:phenolicLocation:serviceMaskOperator:provenanceType:forBundle:error:
setAuthorizationStatus:withCorrectiveCompensation:forInterestZoneWithId:registeredForBundleIdentifier:
setAuthorizationStatus:withCorrectiveCompensation:forInterestZoneWithId:registeredForBundle:
setRelevance:forInterestZoneWithId:registeredForBundleIdentifier:error:
setRelevance:forInterestZoneWithId:registeredForBundle:error:
deleteInterestZoneWithId:registeredForBundleIdentifier:error:
deleteInterestZoneWithId:registeredForBundle:error:
setTemporaryAuthorizationGranted:forBundleIdentifier:
setTemporaryAuthorizationGranted:forBundle:
grantTemporaryAuthorizationUsingLocationButtonToClientWithAuditToken:voiceInteractionEnabled:
setBackgroundIndicatorEnabled:forBundleIdentifier:
setBackgroundIndicatorEnabled:forBundle:
setDefaultEffectiveBundleIdentifier:
setDefaultEffectiveBundle:
dumpLogsWithMessage:
dumpDiagnosticFilesWithHandler:
shutdownDaemon
bundleSupported:
advertiseAsBeacon:withPower:
_getClientTransientAuthorizationInfoForBundleId:error:
_getClientTransientAuthorizationInfoForBundlePath:error:
_setClientTransientAuthorizationInfoForBundleId:data:
_setClientTransientAuthorizationInfoForBundlePath:data:
initWithEffectiveBundleIdentifier:
initWithEffectiveBundleIdentifier:delegate:onQueue:
initWithEffectiveBundle:
initWithEffectiveBundle:delegate:onQueue:
initWithEffectiveBundle:limitingBundleIdentifier:delegate:onQueue:
_initWithDelegate:onQueue:
_limitsPrecision
location
locationServicesAvailable
locationServicesApproved
expectedGpsUpdateInterval
setSupportInfo:
supportInfo
internalClient
setPrivateMode:
privateMode
setPurpose:
purpose
markAsHavingReceivedLocation
startUpdatingLocationWithPrompt
requestLocation
allowDeferredLocationUpdatesUntilTraveled:timeout:
disallowDeferredLocationUpdates
setHeadingOrientation:
headingOrientation
heading
startUpdatingHeading
stopUpdatingHeading
dismissHeadingCalibrationDisplay
startAppStatusUpdates
stopAppStatusUpdates
startTechStatusUpdates
stopTechStatusUpdates
startMonitoringSignificantLocationChanges
_startMonitoringSignificantLocationChangesOfDistance:withPowerBudget:
stopMonitoringSignificantLocationChanges
startMonitoringLocationPushesWithCompletion:
stopMonitoringLocationPushes
startMonitoringForRegion:desiredAccuracy:
stopMonitoringForRegion:
requestStateForRegion:
maximumRegionMonitoringDistance
monitoredRegions
startRangingBeaconsInRegion:
stopRangingBeaconsInRegion:
startRangingBeaconsSatisfyingConstraint:
stopRangingBeaconsSatisfyingConstraint:
rangedBeaconConstraints
requestRangingToPeers:timeoutSeconds:
respondToRangingFromPeers:timeoutSeconds:
startRangingToPeers:intervalSeconds:
stopRangingToPeers:
startRangingFromPeers:
stopRangingFromPeers:
getMicroLocationInternalVersion
requestCurrentMicroLocationWithAdditionalInformation:
requestMicroLocationRecordingScanWithAdditionalInformation:
getRecordingTriggerUUIDAndRequestMicroLocationRecordingScanWithAdditionalInformation:shouldForceRecording:handler:
donateMicroLocationTruthTagWithTagUUID:correspondingToTriggerUUID:handler:
purgeMicroLocationSemiSupervisedData
resetApps
appsUsingLocation
appsUsingLocationWithDetails
technologiesInUse
_zAxisStatistics
isAuthorizedForPreciseLocation
requestWhenInUseAuthorizationWithPrompt
requestAlwaysAuthorization
_requestTemporaryFullAccuracyWithUsageDescription:
requestTemporaryPreciseLocationAuthorizationWithPurposeKey:
requestTemporaryPreciseLocationAuthorizationWithPurposeKey:completion:
isLocationServicesPreferencesDialogEnabled
setLocationServicesPreferencesDialogEnabled:
isDynamicAccuracyReductionEnabled
registerAsLocationClient
setIsActuallyAWatchKitExtension:
_internal
TB,R,N
Td,R,N
T^{__CLClient=},R,N
locationServicesPreferencesDialogEnabled
TB,N,GisLocationServicesPreferencesDialogEnabled
TB,N,GisDynamicAccuracyReductionEnabled
Ti,R,N
authorizedForPreciseLocation
TB,R,N,GisAuthorizedForPreciseLocation
Tq,R,N
authorizedForWidgetUpdates
TB,R,N,GisAuthorizedForWidgetUpdates
T@"<CLLocationManagerDelegate>",W,N
T@"NSString",C,N
T@"CLLocation",R,C,N
T@"CLHeading",R,C,N
T@"NSSet",R,C,N
startUpdatingVehicleSpeed
stopUpdatingVehicleSpeed
startUpdatingVehicleHeading
stopUpdatingVehicleHeading
isMatchInfoEnabled
TB,N,GisMatchInfoEnabled
_isGroundAltitudeEnabled
initWithEstimate:uncertainty:undulation:undulationModel:
_setGroundAltitudeEnabled:
_groundAltitudeAtLocation:
_groundAltitudeEnabled
TB,N,G_isGroundAltitudeEnabled,S_setGroundAltitudeEnabled:
_isFusionInfoEnabled
_setFusionInfoEnabled:
startMonitoringVisits
stopMonitoringVisits
_startLeechingVisits
_requestVisitState
fireInterval
_startPlaceInferencesCommonLogic:handler:
setNextFireDelay:interval:
_fetchPlaceInferencesWithFidelityPolicy:handler:
_fetchContinuousPlaceInferencesWithFidelityPolicy:handler:
_stopFetchingContinuousPlaceInferences
_fetchEstimatedLocationAtDate:handler:
initWithClientLocation:coarseMetaData:
initWithClientLocation:clientLocationPrivate:coarseMetaData:
lastPathComponent
boolForKey:defaultValue:
hasValueForKey:
mapItem
_initWithRTLocation:
referenceLocation
_initWithRTMapItem:location:
userType
_userSpecificPlaceTypeFromRTUserType:
placeType
_placeInferencePlaceTypeFromRTPlaceType:
confidence
preferredName
loiIdentifier
_initWithRTPlaceInference:
allowsKeyedCoding
encodeValueOfObjCType:at:
encodeDouble:forKey:
encodeInt:forKey:
decodeValueOfObjCType:at:
decodeDoubleForKey:
decodeIntForKey:
estimate
initWithEstimate:uncertainty:
altitude
uncertainty
undulation
undulationModel
isAltitudeWgs84Available
altitudeWgs84
uncertaintyWgs84
_isAltitudeWgs84Available
_undulationModel
_estimate
_uncertainty
_undulation
_altitudeWgs84
_uncertaintyWgs84
Td,R,N,V_estimate
Td,R,N,V_uncertainty
Td,R,N,V_undulation
Ti,R,N,V_undulationModel
TB,R,N,V_isAltitudeWgs84Available
Td,R,N,V_altitudeWgs84
Td,R,N,V_uncertaintyWgs84
setLocationManagerSmoother:
locationManagerSmoother
locationManager:didSmoothLocations:ofType:
didSmoothLocations:ofType:
smoothLocations:useType:
smoothLocations:workoutActivity:handler:
initWithCLLocationSmoother:
_locationManagerSmoother
T@"<CLLocationSmootherDelegate>",N,V_delegate
T@"CLLocationSmoother",N,V_locationManagerSmoother
locationManagerSmootherProxy
numberWithInt:
smoothLocations:workoutActivityType:handler:
remoteObjectInterface
smoothLocations:
smoothLocations:handler:
_locationManagerSmootherProxy
T@"_CLLocationSmootherProxy",R,&,N
T@"<CLLocationManagerDelegateInternal>",N
minimumThreshold
maximumThreshold
minimumSampleCount
maximumSampleCount
decodeFloatForKey:
encodeFloat:forKey:
TC,R
Tf,R
initWithThreshold:sampleCount:sampleRate:
threshold
setThreshold:
sampleCount
setSampleCount:
sampleRate
setSampleRate:
_sampleCount
_sampleRate
_threshold
Tf,N,V_threshold
TC,N,V_sampleCount
TC,N,V_sampleRate
initWithThreshold:sleepDuration:
sleepDuration_ms
setSleepDuration_ms:
_sleepDuration_ms
TI,N,V_threshold
TS,N,V_sleepDuration_ms
initWithRegistrationMessageName:messagePayload:callbackQueue:completionHandler:
newAssertionForBundleIdentifier:withReason:callbackQueue:completionHandler:
newAssertionForBundle:withReason:callbackQueue:completionHandler:
.cxx_construct
fInternal
allocWithZone:
initWithMatchQuality:matchCoordinate:matchCourse:matchFormOfWay:matchRoadClass:matchShifted:matchDataArray:
fMatchQuality
fMatchCoordinate
fMatchCourse
fMatchFormOfWay
fMatchRoadClass
fMatchShifted
fMatchDataArray
decodeIntegerForKey:
decodeInt32ForKey:
decodeBoolForKey:
encodeInteger:forKey:
encodeInt32:forKey:
encodeBool:forKey:
initWithMatchQuality:matchCoordinate:matchCourse:matchFormOfWay:matchRoadClass:matchShifted:
shortDescription
matchQuality
matchCoordinate
matchCourse
matchFormOfWay
matchRoadClass
isMatchShifted
matchDataArray
T{CLLocationCoordinate2D=dd},R,N
matchShifted
TB,R,N,GisMatchShifted
T@"NSData",R,C,N
handleMessage:
handleInterruption
findMyAccessoryRangingManager:didConnectToDevice:withMacAddress:withError:
findMyAccessoryRangingManager:didDisconnectFromDevice:withError:
findMyAccessoryRangingManager:didFetchFirmwareVersion:fromDevice:withError:
findMyAccessoryRangingManager:didInitRoseOnDevice:withResponse:error:
findMyAccessoryRangingManager:didStopRoseOnDevice:withResponse:error:
findMyAccessoryRangingManager:didSetRoseRangingParametersOnDevice:withResponse:error:
findMyAccessoryRangingManager:didStartRoseRangingOnDevice:withError:
findMyAccessoryRangingManager:didCompleteRoseRangingOnDevice:withResponse:error:
findMyAccessoryRangingManager:didReceiveRoseError:fromDevice:
findMyAccessoryRangingManager:didReceiveRoseP2PTimestamp:fromDevice:
findMyAccessoryRangingManager:didReceiveRoseDebugP2PTimestamp:fromDevice:
findMyAccessoryRangingManager:deviceDidMove:
findMyAccessoryRangingManager:didPrepareForStartRangingOnDevice:withError:
findMyAccessoryRangingManager:didFailWithError:forDevice:
initWithDomain:code:userInfo:
dictionaryWithDictionary:
initWithDelegate:delegateQueue:
connectToDevice:
disconnectFromDevice:
initRoseWithParameters:onDevice:
stopRoseWithParameters:onDevice:
setRoseRangingParameters:onDevice:
prepareForStartRangingOnDevice:
startRangingWithParameters:onDevice:
stopRangingOnDevice:
startEventCounterOnDevice:
stopEventCounterOnDevice:
fetchFirmwareVersionFromDevice:
_delegateQueue
T@"<CLFindMyAccessoryRangingManagerDelegate>",W,N,V_delegate
latitude
longitude
horizontalUncertainty
date
timeIntervalSinceReferenceDate
initWithMaxBytesPerUUID:
initAccumulator
convertDataStatusToString:
dataWithLength:
unsignedIntValue
appendData:forUUID:
findMyAccessoryManager:didConnectDevice:error:
findMyAccessoryManager:didConnectDevice:
findMyAccessoryManager:didDisconnectDevice:
findMyAccessoryManager:didFetchConnectionState:forDevice:
unsignedIntegerValue
findMyAccessoryManager:didStartPlayingSoundOnDevice:withError:
findMyAccessoryManager:didCompletePlayingSoundOnDevice:withError:
findMyAccessoryManager:didStopPlayingSoundOnDevice:withError:
findMyAccessoryManager:didStartPlayingUnauthorizedSoundOnDevice:withError:
findMyAccessoryManager:didPlayUnauthorizedSoundOnDevice:withError:
findMyAccessoryManager:didCompletePlayingUnauthorizedSoundOnDevice:withError:
findMyAccessoryManager:didStopPlayingUnauthorizedSoundOnDevice:withError:
findMyAccessoryManager:didReceiveKeyRollIndex:fromDevice:withError:
findMyAccessoryManager:didGetMultiStatus:fromDevice:withError:
unsignedLongValue
findMyAccessoryManager:didFetchBatteryStatus:forDevice:withError:
findMyAccessoryManager:didFetchBatteryStatus:forDevice:
findMyAccessoryManager:didDetectCrashOnDevice:
getDataStatusForUUID:
errorFromFragmentationStatus:
dataForUUID:
findMyAccessoryManager:didDumpLogData:ofType:fromDevice:withError:
findMyAccessoryManager:didUnpairFromDevice:withError:
findMyAccessoryManager:didSetDeviceTypeOnDevice:withError:
findMyAccessoryManager:didSetObfuscatedIdentifierOnDevice:withError:
findMyAccessoryManager:didSetNearOwnerTimeoutOnDevice:withError:
findMyAccessoryManager:didSetWildConfigurationOnDevice:withError:
findMyAccessoryManager:didFetchUserStats:fromDevice:withError:
findMyAccessoryManager:didRollWildKeyOnDevice:withError:
findMyAccessoryManager:didSetAccelerometerSlopeModeConfigurationForDevice:withError:
findMyAccessoryManager:didFetchAccelerometerSlopeModeConfiguration:forDevice:withError:
findMyAccessoryManager:didSetAccelerometerOrientationModeConfigurationForDevice:withError:
findMyAccessoryManager:didFetchAccelerometerMode:forDevice:withError:
findMyAccessoryManager:didSetUnauthorizedPlaySoundRateLimitFromDevice:withError:
findMyAccessoryManager:didFetchFirmwareVersion:fromDevice:withError:
findMyAccessoryManager:didCompleteHawkeyeTaskWithOpcode:fromDevice:withError:
findMyAccessoryManager:didSetHawkeyeUTMotionConfigForDevice:withError:
findMyAccessoryManager:didFetchTxPower:fromDevice:withError:
findMyAccessoryManager:didStartAggressiveAdvertisingOnDevice:withError:
findMyAccessoryManager:didStopAggressiveAdvertisingOnDevice:withError:
findMyAccessoryManager:didCompleteAggressiveAdvertisingOnDevice:withError:
findMyAccessoryManager:didStartUnauthorizedAggressiveAdvertisingOnDevice:withError:
findMyAccessoryManager:didFetchHawkeyeAISProductData:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeAISManufacturerName:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeAISModelName:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeAISModelColorCode:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeAISAccessoryCategory:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeAISAccessoryCapabilities:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeAISFindMyVersion:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeAISBatteryType:fromDevice:withError:
checkAvailabilityForPairedOwnerInformationControlPointMessages:messageName:
findMyAccessoryManager:didFetchHawkeyeSerialNumber:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeCurrentPrimaryKey:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeiCloudIdentifier:fromDevice:withError:
findMyAccessoryManager:didObserveAdvertisementWithDate:address:advertisementData:status:rssi:reserved:uuid:ownershipType:channel:
findMyAccessoryManager:didFetchCurrentScanParameters:withError:
clearForUUID:
findMyAccessoryManager:didFailWithError:forDevice:
sendMessage:withPayload:
numberWithUnsignedInteger:
numberWithUnsignedShort:
numberWithUnsignedChar:
numberWithUnsignedInt:
numberWithBool:
sendMessage:
connectDevice:
disconnectDevice:
fetchConnectionStateForDevice:
startPlayingSoundSequence:onDevice:
startPlayingUnauthorizedSoundOnDevice:
startPlayingUnauthorizedSoundSequence:onDevice:
stopPlayingSoundOnDevice:
stopPlayingUnauthorizedSoundOnDevice:
getMultiStatusFromDevice:
dumpLogDataOfType:fromDevice:
induceCrashOnDevice:
unpairFromDevice:
unpairFromDeviceWithAddress:
setNearOwnerTimeout:onDevice:
setDeviceType:onDevice:
setObfuscatedIdentifier:onDevice:
setWildConfiguration:onDevice:
rollWildKeyOnDevice:
setKeyRollInterval:onDevice:
setBatteryStatus:forDevice:
fetchBatteryStatusForDevice:
fetchUserStatsWithPersistence:fromDevice:
scanForNearbyOwner
scanForHELE
scanForNearbyDevicesLong
stopScanForNearbyDevicesLong
fetchCurrentScanParameters
setAccelerometerSlopeModeConfiguration:forDevice:
fetchAccelerometerSlopeModeConfigurationForDevice:
setAccelerometerOrientationModeConfiguration:forDevice:
fetchAccelerometerOrientationModeConfigurationForDevice:
setUnauthorizedPlaySoundRateLimit:forDevice:
fetchTxPower:
fetchTxPowerFromDevice:asOwner:
startAggressiveAdvertisingOnDevice:withTimeout:
stopAggressiveAdvertisingOnDevice:
startUnauthorizedAggressiveAdvertisingOnDevice:
setHawkeyeTestMode:forDevice:
setHawkeyeUTMotionConfigWithSeparatedUTTimeoutSeconds:separatedUTBackoffTimeoutSeconds:forDevice:
fetchHawkeyeAISProductData:
fetchHawkeyeAISManufacturerName:
fetchHawkeyeAISModelName:
fetchHawkeyeAISModelColorCode:
fetchHawkeyeAISAccessoryCategory:
fetchHawkeyeAISAccessoryCapabilities:
fetchHawkeyeAISFindMyVersion:
fetchHawkeyeAISBatteryType:
fetchHawkeyeSerialNumber:
fetchHawkeyeCurrentPrimaryKey:
fetchHawkeyeiCloudIdentifier:
startMonitoringForAvengerAdvertisementsForBTFinding
stopMonitoringForAvengerAdvertisementsForBTFinding
_accumulator
T@"<CLFindMyAccessoryManagerDelegate>",W,N,V_delegate
coordinate
horizontalAccuracy
initWithGEOCoordinate:
setAltitude:
setHorizontalAccuracy:
verticalAccuracy
setVerticalAccuracy:
allObjects
componentsJoinedByString:
isDisputed
iso3166CountryCode
disputedTerritoryName
interestedPartyIso3166CountryCodes
setByAddingObjectsFromArray:
fetchPossibleTerritoriesForLocation:responseQueue:responseBlock:
unionSet:
uniqueIdentifier
initWithQueue:defaultConfig:
addConfigForIsoList:config:error:
addConfigForRegionList:config:error:
fetchConfigForLocation:withReply:
fetchInfoForLocation:withReply:
setExtendedBorderDetection:withExtendedDistance:
_config
sharedApplication
applicationState
fileURLWithPath:isDirectory:
dataWithContentsOfURL:options:error:
instancesRespondToSelector:
dataWithContentsOfURL:
domain
writeToURL:options:error:
applyRangeEstimation
transmitPower
rangeForTransmitPower:
filterOutliers:options:
rangeForReductiveFilterOptions:
reverseObjectEnumerator
firstObject
distanceFromLocation:
timestamp
timeIntervalSince1970
insertObject:atIndex:
deriveLocationFromLocations:options:
biasRateInMeasurement
setDateFormat:
stringFromDate:
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:
sortedArrayUsingDescriptors:
beaconType
setBiasRateInMeasurement:
setApplyRangeEstimation:
filterOutliers:
deriveLocationFromLocations:
applyFilterToLocationObservations:options:
applyFilterToLocationTrace:options:
showCalibrationAlert
dismissCalibrationAlert
fHeading
dateWithTimeIntervalSinceReferenceDate:
magneticHeading
trueHeading
headingAccuracy
T@"NSDate",R,C,N
mutableCopy
addEntriesFromDictionary:
processInfo
isiOSAppOnMac
processName
compare:
containsValueForKey:
initWithOdometer:deltaDistance:deltaDistanceAccuracy:
odometer
deltaDistance
deltaDistanceAccuracy
_odometer
_deltaDistance
_deltaDistanceAccuracy
Td,R,N,V_odometer
Td,R,N,V_deltaDistance
Td,R,N,V_deltaDistanceAccuracy
initWithCoordinateFused:coordinateFusedWithVL:coordinate:horizontalAccuracy:referenceFrame:altitude:verticalAccuracy:course:courseAccuracy:
isCoordinateFused
isCoordinateFusedWithVL
course
courseAccuracy
_coordinateFused
_coordinateFusedWithVL
_referenceFrame
_horizontalAccuracy
_altitude
_verticalAccuracy
_course
_courseAccuracy
_coordinate
coordinateFused
TB,R,N,GisCoordinateFused,V_coordinateFused
coordinateFusedWithVL
TB,R,N,GisCoordinateFusedWithVL,V_coordinateFusedWithVL
T{?=dd},R,N,V_coordinate
Td,R,N,V_horizontalAccuracy
Ti,R,N,V_referenceFrame
Td,R,N,V_altitude
Td,R,N,V_verticalAccuracy
Td,R,N,V_course
Td,R,N,V_courseAccuracy
thoroughfare
subThoroughfare
locality
subLocality
administrativeArea
subAdministrativeArea
postalCode
countryCode
country
inlandWater
ocean
source
_cLMapItemSourceFromRLMapItemSource:
areasOfInterest
geoMapItemHandle
initWithLocation:addressDictionary:region:areasOfInterest:mapItemSource:geoMapItemHandle:meCardAddress:
defaultManager
currentDirectoryPath
stringByAppendingString:
silo
initWithRegistrationMessageName:messageDictionary:dispatchQueue:codeBlock:
newAssertionForBundleIdentifier:withReason:withCallbackQueue:andBlock:
newAssertionForBundle:withReason:withCallbackQueue:andBlock:
_updateVLLocalizationResult:
newAssertionForBundleIdentifier:bundlePath:reason:level:
newAssertionForBundleIdentifier:withReason:level:
newAssertionForBundle:withReason:level:
initWithIdentifier:onBehalfOf:regionType:notifyOnEntry:notifyOnExit:conservativeEntry:emergency:
initWithCenter:radius:identifier:
initWithIdentifier:onBehalfOf:regionType:notifyOnEntry:notifyOnExit:conservativeEntry:emergency:deviceId:handoffTag:
lengthOfBytesUsingEncoding:
initLegacyObjectWithCoder:
decodeObject
encodeObject:
initWithClientRegion:
initCircularRegionWithCenter:radius:identifier:
initWithIdentifier:andRegionType:
containsCoordinate:
setType:
_notifyOnEntry
_notifyOnExit
_conservativeEntry
_emergency
_type
_radius
_deviceId
_handoffTag
_onBehalfOfBundleId
_center
T@"NSUUID",R,C,N,V_deviceId
T@"NSString",R,C,N,V_handoffTag
T@"NSString",C,N,V_onBehalfOfBundleId
TB,V_conservativeEntry
Ti,V_referenceFrame
TB,V_emergency
Ti,V_type
T{CLLocationCoordinate2D=dd},R,V_center
Td,R,V_radius
T@"NSString",R,C,N,V_identifier
TB,V_notifyOnEntry
TB,V_notifyOnExit
timeIntervalSinceDate:
dataWithBytes:length:
initWithDesiredNextKeyRollDate:nextWildIndex:
encodeConfiguration
desiredKeyRollDate
nextWildIndex
_nextWildIndex
_desiredKeyRollDate
T@"NSDate",R,V_desiredKeyRollDate
TI,R,V_nextWildIndex
initWithCenter:radius:referenceFrame:allowMonitoringWhenNearby:lowPower:identifier:onBehalfOfBundleId:notifyOnEntry:notifyOnExit:conservativeEntry:emergency:
decodeObjectForKey:
geoReferenceFrame
initWithCenter:radius:identifier:onBehalfOfBundleId:
initWithCenter:radius:identifier:nearbyAllowed:
initNearbyAllowedWithCenter:radius:identifier:
initForLowPowerWithCenter:radius:identifier:
geoCenter
geoRadius
setGeoReferenceFrame:
_isLowPower
_allowMonitoringWhileNearby
_geoReferenceFrame
_geoRadius
_desiredAccuracy
_geoCenter
T{CLLocationCoordinate2D=dd},R,N,V_geoCenter
Td,R,N,V_geoRadius
Ti,N,V_geoReferenceFrame
TB,R,N,V_isLowPower
Td,R,N,V_desiredAccuracy
TB,R,N,V_allowMonitoringWhileNearby
T{CLLocationCoordinate2D=dd},R
Td,R
setGutsWithProximityUUID:major:minor:notifyOnDisplay:
initWithUUID:major:minor:identifier:notifyEntryStateOnDisplay:
getUUIDBytes:
charValue
_measuredPowerForDevice
dataWithCapacity:
appendBytes:length:
_initWithUUID:major:minor:
proximityUUID
initWithProximityUUID:identifier:
initWithProximityUUID:major:identifier:
initWithProximityUUID:major:minor:identifier:
peripheralDataWithMeasuredPower:
_notifyEntryStateOnDisplay
_definitionMask
_UUID
_major
_minor
Ti,R,N,V_definitionMask
T@"CLBeaconIdentityConstraint",R,C,N
T@"NSUUID",R,C,N,V_UUID
T@"NSUUID",R,C,N
T@"NSNumber",R,C,N,V_major
T@"NSNumber",R,C,N,V_minor
TB,V_notifyEntryStateOnDisplay
proximity
accuracy
rssi
initWithProximityUUID:major:minor:proximity:accuracy:rssi:
T@"NSNumber",R,C,N
getBytes:length:
descriptionWithMemberIndent:endIndent:
transform
covariance
setTimestamp:
setLocation:
setTransform:
setCovariance:
setConfidence:
_confidence
_timestamp
_location
_transform
_covariance
Td,N,V_timestamp
T{?=d},N,V_location
T{?=[4]},N,V_transform
T{?=[6[6f]]},N,V_covariance
Tf,N,V_confidence
stringByAppendingPathComponent:
scenariosPath
contentsOfDirectoryAtPath:error:
stringByDeletingPathExtension
stringByAppendingPathExtension:
fileURLWithPath:
loadScenarioFromURL:
isFileURL
path
fileExistsAtPath:
pathExtension
daemonProxy
setSimulationScenario:
setLocationDeliveryBehavior:
setIntermediateLocationDistance:
setLocationInterval:
setLocationTravellingSpeed:
setLocationRepeatBehavior:
clearSimulatedLocations
appendSimulatedLocations:
startLocationSimulation
stopLocationSimulation
simulateVisit:
simulateSignificantLocationChange:
getFencesForBundleID:withReply:
simulateFenceWithBundleID:andFenceID:eventType:atLocation:
simulateBeaconWithProximityUUID:major:minor:eventType:
availableScenarios
localizedNameForScenario:
selectScenario:
setLocationDistance:
setLocationSpeed:
appendSimulatedLocation:
getFencesForBundleID:withHandler:
clearSimulatedCells
setSimulatedCell:
startCellSimulation
stopCellSimulation
setSimulatedCellRegistrationStatus:
setWifiScanResults:
startWifiSimulation
stopWifiSimulation
setSimulatedWifiPower:
flush
locationDeliveryBehavior
locationDistance
locationInterval
locationSpeed
locationRepeatBehavior
_locationDistance
_locationInterval
_locationSpeed
_locationRepeatBehavior
_locationDeliveryBehavior
T@"<CLSimulationXPCServerInterface>",R
TC,N,V_locationDeliveryBehavior
Td,N,V_locationDistance
Td,N,V_locationInterval
Td,N,V_locationSpeed
TC,N,V_locationRepeatBehavior
initWithUUID:
initWithUUID:major:
initWithUUID:major:minor:
setUUID:
T@"NSUUID",C,N,V_UUID
didReceiveLocationPushPayload:reply:
serviceExtensionWillTerminate
serviceExtensionPerformCleanup
_extensionAuxiliaryHostProtocol
_extensionAuxiliaryVendorProtocol
localizedStringFromDate:dateStyle:timeStyle:
T@"NSDate",R,N
fSpeed
speed
initWithCoordinate:horizontalAccuracy:arrivalDate:departureDate:detectionDate:placeInference:
arrivalDate
departureDate
detectionDate
_placeInference
distantFuture
distantPast
hasArrivalDate
hasDepartureDate
initWithCoordinate:horizontalAccuracy:arrivalDate:departureDate:detectionDate:
_arrivalDate
_departureDate
_detectionDate
__placeInference
T@"NSDate",R,C,N,V_detectionDate
T@"_CLPlaceInference",R,N,V__placeInference
T@"NSDate",R,C,N,V_arrivalDate
T@"NSDate",R,C,N,V_departureDate
T{CLLocationCoordinate2D=dd},R,N,V_coordinate
objectEnumerator
setSouthLat:
setWestLng:
setNorthLat:
setEastLng:
_initWithCircularRegion:
main
responseSilo
setResponseSilo:
_geocodeCompletionHandler
_ticket
_responseSilo
T@"CLSilo",&,V_responseSilo
reverseGeocodeLocation:preferredLocale:heading:localResultsOnly:completionHandler:
isGeocoding
_notifyNoResult
sharedService
defaultTraits
clearDeviceDisplayLanguages
localeIdentifier
canonicalLanguageIdentifierFromString:
addDeviceDisplayLanguage:
_initWithCLClientLocation:
setHeading:
coarseMetaData
unarchivedObjectOfClass:fromData:error:
setCoarseMetadata:
ticketForReverseGeocodeLocation:placeTypeLimit:traits:
_cl_ticketForReverseGeocodeLocation:traits:
_ticket:didReturnError:partialResultForLocation:
_ticket:didReturnGeoMapItems:
submitWithHandler:networkActivity:
_ensureMainThreadExecutionContextForBlock:
geocodeAddressDictionary:preferredLocale:completionHandler:
_cl_ticketForForwardGeocodeAddressDictionary:maxResults:traits:
_ticket:didReturnError:
submitWithRefinedHandler:networkActivity:
geocodeAddressString:inRegion:preferredLocale:completionHandler:
setDeviceLocation:
setMapRegion:
_cl_ticketForForwardGeocodeString:maxResults:traits:
resolveMapItemLocallyFromHandle:completionHandler:
cancel
_notifyCancel
placemarkWithGEOMapItem:
_notifyResult:
_notifyError:
_notifyResult:error:
_timeZoneAtLocation:
hydrateGeoMapItemLocallyFromHandle:completionHandler:
reverseGeocodeLocation:localResultsOnly:completionHandler:
reverseGeocodeLocation:preferredLocale:completionHandler:
reverseGeocodeLocation:heading:completionHandler:
reverseGeocodeLocation:heading:localResultsOnly:completionHandler:
geocodeAddressDictionary:completionHandler:
geocodeAddressString:completionHandler:
geocodeAddressString:inRegion:completionHandler:
cancelGeocode
_notifyPartialResult:
T@"CLSilo",S_setResponseSilo:
geocoding
TB,R,N,GisGeocoding
setSpeed:
setCourse:
geocodePostalAddress:preferredLocale:completionHandler:
street
city
state
ISOCountryCode
geocodePostalAddress:completionHandler:
getTechnologiesInUseWithReplyBlock:
getMicroLocationInternalVersionWithReplyBlock:
getZaxisStatsWithReplyBlock:
getGnssBandsInUseWithReplyBlock:
getAppsUsingLocationWithReplyBlock:
setLocationDefaultForKey:andValue:replyBlock:
getLocationDefaultForKey:replyBlock:
timeZoneForLocation:replyBlock:
setGestureServiceEnabled:replyBlock:
triggerExpiredAuthorizationPurgeWithReplyBlock:
setTemporaryAuthorizationStatusForBundleId:orBundlePath:statusData:replyBlock:
getTemporaryAuthorizationStatusForBundleId:orBundlePath:replyBlock:
modifyOrSetAuthorizationTime:forBundleID:orBundlePath:replyBlock:
performMigrationWithReplyBlock:
shutdownDaemonWithReplyBlock:
setAuthorizationStatus:withCorrectiveCompensation:forBundleID:orBundlePath:replyBlock:
setPrivateMode:replyBlock:
getPrivateMode:
setLocationServicesEnabled:replyBlock:
getLocationServicesEnabledWithReplyBlock:
setAuthorizationPromptMapDisplayEnabled:replyBlock:
getAuthorizationPromptMapDisplayEnabledWithReplyBlock:
getGestureServiceEnabledWithReplyBlock:
pingDaemonWithReplyBlock:
getAuthorizationStatusForBundleID:orBundlePath:replyBlock:
getIncidentalUseModeForBundleID:orBundlePath:replyBlock:
getPrecisionPermissionForBundleID:orBundlePath:replyBlock:
displayStatisticsWithReplyBlock:
dumpLogsWithDescription:replyBlock:
copyLastLogWithReplyBlock:
getMonitoredRegionsForBundleID:orBundlePath:replyBlock:
checkAndExerciseAuthorizationForBundleID:orBundlePath:services:replyBlock:
registerCircularInterestZoneWithId:latitude:longitude:radius:serviceMaskOperator:provenanceType:forBundleId:orBundlePath:replyBlock:
registerPhenolicInterestZoneWithId:phenolicLocation:serviceMaskOperator:provenanceType:forBundleId:orBundlePath:replyBlock:
setRelevance:forInterestZoneWithId:registeredForBundleId:orBundlePath:replyBlock:
deleteInterestZoneWithId:registeredForBundleId:orBundlePath:replyBlock:
getLocationForBundleID:orBundlePath:dynamicAccuracyReductionEnabled:allowsAlteredAccessoryLocations:replyBlock:
getGroundAltitudeForBundleID:orBundlePath:location:replyBlock:
resetAllClientsWithReplyBlock:
applyArchivedAuthorizationDecisions:withConfirmationToken:replyBlock:
getArchivedAuthorizationDecisionsWithReplyBlock:
setStatusBarIconEnabledForEntityClass:enabled:replyBlock:
getStatusBarIconEnabledForEntityClass:replyBlock:
getStatusBarIconState:
setMapMatchingRouteHint:routingType:stepType:replyBlock:
getAccessoryTypeBitSetWithReplyBlock:
getPipelinedCacheWithReply:
setTemporaryAuthorizationGranted:forBundleID:orBundlePath:orAuditToken:byLocationButton:voiceInteractionEnabled:replyBlock:
getActivitiesWithReplyBlock:
updateCorrectiveCompensationChoiceForOutstandingPrompt:replyBlock:
setIncidentalUseMode:forBundleID:orBundlePath:replyBlock:
setAuthorizationStatusByType:withCorrectiveCompensation:andZoneIdentifier:forBundleID:orBundlePath:replyBlock:
gyroCalibrationDatabaseSupportsMiniCalibrationWithReplyBlock:
setBackgroundIndicatorEnabled:forBundleID:orBundlePath:replyBlock:
getOscarTimeSyncWithReplyBlock:
notifyPassKitPayment:transaction:info:
notifyWeatherForecast:airQualityConditions:hourlyForecasts:dailyForecasts:latitude:longitude:
synchronousRemoteObjectProxyWithErrorHandler:
synchronousRemoteObject
dataWithPropertyList:format:options:error:
propertyListWithData:options:format:error:
handleFailureInFunction:file:lineNumber:description:
initWithName:
sharedServiceClient
setAuthorizationStatus:withCorrectiveCompensation:forBundleID:orBundlePath:
getIncidentalUseMode:forBundleID:orBundlePath:
clearLocationAuthorizations
getArchivedAuthorizationDecisionsWithError:
applyArchivedAuthorizationDecisions:
copyAppsUsingLocation
copyTechnologiesInUse
copyMicroLocationInternalVersion
copyZaxisStats
copyGnssBandsInUse
setLocationDefaultForKey:value:
getLocationDefaultForKey:
timeZoneAtLocation:
getPrivateMode
pingDaemon
getLocationServicesEnabled:
getAuthorizationPromptMapDisplayEnabled:
setTemporaryAuthorizationStatusForBundleId:orBundlePath:statusData:
getTemporaryAuthorizationStatusForBundleId:orBundlePath:error:
modifyOrSetAuthorizationTime:forBundleID:orBundlePath:
triggerExpiredAuthorizationPurgeOnClientManager
setGestureServiceEnabled:
getGestureServiceEnabled:
getAuthorizationStatus:forBundleID:orBundlePath:
getPrecisionPermission:forBundleID:orBundlePath:
performMigration
displayStatistics
dumpLogs:
copyMonitoredRegionsForBundleIdentifier:orBundlePath:
checkAndExerciseAuthorizationForBundleID:orBundlePath:services:error:
registerCircularInterestZoneWithId:latitude:longitude:radius:serviceMaskOperator:provenanceType:forBundleId:orBundlePath:error:
registerPhenolicInterestZoneWithId:phenolicLocation:serviceMaskOperator:provenanceType:forBundleId:orBundlePath:error:
setRelevance:forInterestZoneWithId:registeredForBundleId:orBundlePath:error:
deleteInterestZoneWithId:registeredForBundleId:orBundlePath:error:
getLocationForBundleID:orBundlePath:dynamicAccuracyReductionEnabled:allowsAlteredAccessoryLocations:location:
getGroundAltitudeForBundleID:orBundlePath:location:groundAltitude:
setMapMatchingRouteHint:count:routingType:stepType:
getAccessoryTypeBitSet
copyLastLog
setStatusBarIconEnabled:forEntityClass:
getStatusBarIconEnabled:forEntityClass:
getStatusBarIconState
getPipelinedCache
getMotionSensorLogs
getAccessoryMotionSensorLogs
setTemporaryAuthorizationGranted:forBundleID:orBundlePath:orAuditToken:byLocationButton:voiceInteractionEnabled:
copyActivityAlarms
setAuthorizationStatusByType:withCorrectiveCompensation:andZoneIdentifier:forBundleID:orBundlePath:
setIncidentalUseMode:forBundleID:orBundlePath:
setBackgroundIndicatorForBundleID:orBundlePath:enabled:
gyroCalibrationDatabaseSupportsMiniCalibration:
timeSyncMachTimeStamp:oscarTimeStamp:
valueWithBytes:objCType:
_updateARSessionState:
addressDictionary
region
geoMapItemStorage
timeZone
_cLMapItemSource
_geoMapItemHandle
mecardAddress
mapItemStorageForGEOMapItem:
geoFenceMapRegion
hasNorthLat
hasSouthLat
hasEastLng
hasWestLng
northLat
southLat
westLng
eastLng
timezone
_initWithGeoMapItem:
initWithPlacemark:
geoAddress
formattedAddressLines
stringWithString:
appendString:
isValid
initWithLocation:addressDictionary:region:areasOfInterest:
ISOcountryCode
fullThoroughfare
fetchFormattedAddress:queue:
_geoMapItem
T@"CLRegion",R,C,N
T@"NSTimeZone",R,C,N
T@"NSDictionary",R,C,N
T@"NSString",R,C,N
T@"NSArray",R,C,N
postalAddressWithDictionaryRepresentation:
postalAddress
T@"CNPostalAddress",R,N
initWithBeaconType:
initWithBeaconType:transmitPower:
_beaconType
_transmitPower
_biasRateInMeasurement
_applyRangeEstimation
Td,N,V_biasRateInMeasurement
Td,N,V_applyRangeEstimation
TQ,R,N,V_beaconType
Td,R,N,V_transmitPower
initWithInputItems:listenerEndpoint:contextUUID:
_principalObject
didReceiveLocationPushPayload:completion:
completeRequestReturningItems:completionHandler:
initWithCoordinate:
initWithClientCoordinate:
getDistanceFrom:
initNearbyAllowedWithVertices:identifier:
_vertices
T@"NSArray",R,C,N,V_vertices
Ti,V_geoReferenceFrame
submitSample:
fetchStateWithReply:
setClass:forSelector:argumentIndex:ofReply:
connect
currentStateDictionary
_updateVIOEstimation:
initWithBytes:length:
vanBurenVersion
rtKitVersion
roseAPVersion
roseDSPVersion
calibrationDataVersion
initWithData:
specificationVersion
hardwareVersion
_version
T@"NSString",R
_handle
T^v,R,N
primaryEntityClassForLocationDictionary:
activeLocationServiceTypesForLocationDictionary:
isEntityAuthorizedForLocationDictionary:
entityAuthorizationForLocationDictionary:
allKeys
bundleWithPath:
setEntityAuthorization:withCorrectiveCompensationType:forLocationDictionary:
setStatusBarIconEnabled:forLocationEntityClass:
isStatusBarIconEnabledForLocationEntityClass:
entityClassesForLocationDictionary:
isLocationActiveForLocationDictionary:
dateLocationLastUsedForLocationDictionary:
hasUsedBackgroundLocationServices:
allowableAuthorizationForLocationDictionary:
correctiveCompensationStatusForLocationDictionary:
incidentalUseModeForLocationDictionary:
interestZonesIdentifierListForLocationDictionary:
interestZoneDictionaryIdentifiedById:forLocationDictionary:
isInterestZoneReleventForLocationDictionary:
setEntityAuthorized:forLocationDictionary:
setEntityAuthorization:forLocationDictionary:
setEntityAuthorization:withCorrectiveCompensation:forLocationDictionary:
backgroundIndicatorEnabledForLocationDictionary:
setBackgroundIndicatorEnabled:forLocationDictionary:
findMyAccessoryFirmwareUpdateManager:didFailWithError:forDevice:
findMyAccessoryFirmwareUpdateManager:personalizationRequestForDevice:completedWithInfo:andError:
findMyAccessoryFirmwareUpdateManager:firmwareUpdateRequestForDevice:completedWithError:
findMyAccessoryFirmwareUpdateManager:useLocalAssetRequestForProductGroup:andProductNumber:completedWithError:
findMyAccessoryFirmwareUpdateManager:useDefaultAssetRequestForProductGroup:andProductNumber:completedWithError:
findMyAccessoryFirmwareUpdateManager:didFetchWhetherLocalFirmwareAssetIsInUseForProductGroup:andProductNumber:withResult:
getPersonalizationInfoForDevice:
updateFirmwareForDevice:withAssetURL:
abortFirmwareUpdateForDevice:
useLocalFirmwareAssetFromURL:forProductGroup:forProductNumber:withSandboxExtension:
useDefaultFirmwareAssetSourceForProductGroup:andProductNumber:
fetchWhetherLocalFirmwareAssetIsInUseForProductGroup:andProductNumber:
T@"<CLFindMyAccessoryFirmwareUpdateDelegate>",W,N,V_delegate
earlierDate:
laterDate:
placemark
_loiIdentifier
_userType
_placeType
_placemark
_referenceLocation
_preferredName
__loiIdentifier
TQ,R,N,V_userType
TQ,R,N,V_placeType
T@"CLPlacemark",R,N,V_placemark
T@"CLLocation",R,N,V_referenceLocation
Td,R,N,V_confidence
T@"NSString",R,N,V_preferredName
T@"NSUUID",R,N,V__loiIdentifier
initWithCenter:radius:identifier:onBehalfOfBundleId:referenceFrame:
initWithCenter:radius:referenceFrame:lowPower:identifier:onBehalfOfBundleId:notifyOnEntry:notifyOnExit:conservativeEntry:emergency:deviceId:handoffTag:
initWithDesiredNextKeyRollDate:keyRollInterval:keysRemainingInWildPeriod:wildPeriodKeyCount:
keyRollInterval
keysRemaining
keyCount
_keysRemaining
_keyCount
_keyRollInterval
TI,R,V_keyRollInterval
TS,R,V_keysRemaining
TS,R,V_keyCount
initWithClientLocation:matchInfo:trustedTimestamp:groundAltitude:fusionInfo:rawHorizontalAccuracy:rawAltitude:rawVerticalAccuracy:rawCourseAccuracy:positionContextStateType:probabilityPositionContextStateIndoor:probabilityPositionContextStateOutdoor:gnssOdometerInfo:
initWithClientLocation:clientLocationPrivate:
initWithClientLocation:matchInfo:trustedTimestamp:groundAltitude:fusionInfo:rawHorizontalAccuracy:rawAltitude:rawVerticalAccuracy:rawCourseAccuracy:positionContextStateType:probabilityPositionContextStateIndoor:probabilityPositionContextStateOutdoor:gnssOdometerInfo:coarseMetaData:
initWithClientLocation:matchInfo:trustedTimestamp:groundAltitude:
fMatchInfo
fGroundAltitude
fTrustedTimestamp
fCoarseMetaData
fFusionInfo
fRawHorizontalAccuracy
fRawAltitude
fRawVerticalAccuracy
fRawCourseAccuracy
fPositionContextState
fProbabilityPositionContextStateIndoor
fProbabilityPositionContextStateOutdoor
fGnssOdometerInfo
initWithLevel:
level
Tq,R,N,Vlevel
initWithSoftwareSimulationState:andExternalAccessoryState:
isSimulatedBySoftware
isProducedByAccessory
TB,R,N,VisSimulatedBySoftware
TB,R,N,VisProducedByAccessory
initWithLatitude:longitude:
_initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:courseAccuracy:speed:speedAccuracy:timestamp:floor:sourceParams:
sourceInformation
numberWithDouble:
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:speed:timestamp:
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:courseAccuracy:speed:speedAccuracy:timestamp:
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:courseAccuracy:speed:speedAccuracy:timestamp:sourceInfo:
jsonObject
rawCoordinate
rawAltitude
ellipsoidalAltitude
rawHorizontalAccuracy
rawVerticalAccuracy
speedAccuracy
rawCourse
rawCourseAccuracy
integrity
trustedTimestamp
signalEnvironmentType
positionContextState
probabilityPositionContextStateIndoor
probabilityPositionContextStateOutdoor
floor
snapToResolution:
propagateLocationToTime:
iso6709Notation
initWithClientLocation:matchInfo:trustedTimestamp:groundAltitude:fusionInfo:rawHorizontalAccuracy:rawCourseAccuracy:coarseMetaData:
T{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB},R,N
T@"NSString",R,N
T@"NSData",R,N
TI,R,N
TB,R,N,GisCoordinateFused
TB,R,N,GisCoordinateFusedWithVL
T@"CLFloor",R,C,N
T@"CLLocationSourceInformation",R,N
initWithClientLocation:matchInfo:trustedTimestamp:
initWithClientLocation:matchInfo:
matchInfo
T@"CLLocationMatchInfo",R,N
_groundAltitude
T@"_CLLocationGroundAltitude",R,N
_fusionInfo
T@"_CLLocationFusionInfo",R,N
gnssOdometerInfo
T@"CLLocationGnssOdometerInfo",R,N
initWithType:encodedSequence:
initWithType:
addSoundBlockWithAsset:loopCount:duration:
defaultSequence
shortSequence
rangingSequence
encodedSequence
_encodedSequence
T@"NSData",R
TQ,R,V_type
initWithMacAddressAsUInt:secureRangingKeyID:
_macAddress
_secureRangingKeyID
initWithPeer:date:distanceMeters:accuracyMeters:initiator:shouldUnlock:
_peer
_date
_distanceMeters
_accuracyMeters
_initiator
_shouldUnlock
uintMacAddressFromString:
initWithMacAddressAsString:secureRangingKeyID:
macAddress
hexStringMacAddressFromUInt:
decodeInt64ForKey:
encodeInt64:forKey:
getMacAddressAsString
secureRangingKeyID
isEqualToPeer:
getCharacters:range:
scannerWithString:
scanHexInt:
initWithMacAddressAsData:secureRangingKeyID:
TQ,R,N
initWithPeer:date:distanceMeters:accuracyMeters:initiator:
floatValue
initWithPeer:timestamp:distanceMeters:accuracyMeters:initiator:
peer
distanceMeters
accuracyMeters
shouldUnlock
initiator
isInitiator
T@"_CLRangingPeer",R,C,N
TB,R,N,GisInitiator,V_initiator
setLatitude:
setLongitude:
_latitude
_longitude
Td,N,V_latitude
Td,N,V_longitude
initWithCoordinate:altitude:timetamp:
initWithLatitude:longitude:altitude:timetamp:
setCoordinate:
T@"_CLLSLLocationCoordinate",C,N,V_coordinate
Td,N,V_altitude
polylines
roadID
setRoadID:
setPolylines:
_roadID
_polylines
TQ,N,V_roadID
T@"NSArray",C,N,V_polylines
roadSegment
setRoadSegment:
_roadSegment
T@"_CLLSLMapRoadSegment",C,N,V_roadSegment
rotationFromGlobalToDeviceFrame
rotationFromGlobalToCameraFrame
rotationalAccuracyInRadians
globalReferenceFrame
supplemantaryInfo
setRotationFromGlobalToDeviceFrame:
setRotationFromGlobalToCameraFrame:
setRotationalAccuracyInRadians:
setGlobalReferenceFrame:
setSupplemantaryInfo:
_globalReferenceFrame
_supplemantaryInfo
_rotationalAccuracyInRadians
_rotationFromGlobalToDeviceFrame
_rotationFromGlobalToCameraFrame
T{?=[3]},N,V_rotationFromGlobalToDeviceFrame
T{?=[3]},N,V_rotationFromGlobalToCameraFrame
T,N,V_rotationalAccuracyInRadians
Td,N,V_confidence
TQ,N,V_globalReferenceFrame
T@"_CLLSLLocation",C,N,V_location
T@"_CLLSLHeadingSupplInfo",C,N,V_supplemantaryInfo
headings
status
setStatus:
setHeadings:
_status
_headings
Ti,N,V_status
T@"NSArray",C,N,V_headings
objCType
getValue:
value:withObjCType:
trackingState
originTimestamp
inertialStateInfo
inertialState
inertialCovarianceInfo
inertialCovariance
cameraPose
cameraIntrinsics
cameraImageResolution
setTrackingState:
setOriginTimestamp:
setInertialStateInfo:
setInertialState:
setInertialCovarianceInfo:
setInertialCovariance:
setCameraPose:
setCameraIntrinsics:
setCameraImageResolution:
_trackingState
_originTimestamp
_inertialState
_inertialCovariance
_cameraImageResolution
_inertialStateInfo
_inertialCovarianceInfo
_cameraIntrinsics
_cameraPose
Ti,N,V_trackingState
Td,N,V_originTimestamp
T{?=QCCCCCCCCCCC},N,V_inertialStateInfo
T@"NSData",C,N,V_inertialState
T{?=QCCCCCCCCCCC},N,V_inertialCovarianceInfo
T@"NSData",C,N,V_inertialCovariance
T{?=[4]},N,V_cameraPose
T{?=[3]},N,V_cameraIntrinsics
T{CGSize=dd},N,V_cameraImageResolution
data
subdataWithRange:
dataWithData:
appendData:
uuidToData
setUuidToData:
maxBytesPerUUID
setMaxBytesPerUUID:
_uuidToData
_maxBytesPerUUID
T@"NSMutableDictionary",N,V_uuidToData
TQ,N,V_maxBytesPerUUID
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v32@0:8@16@?24
v24@0:8@"NSArray"16
v32@0:8@"NSArray"16@?<v@?>24
v16@0:8
@32@0:8@16@24
v20@0:8B16
@"NSObject<OS_dispatch_queue>"
@"NSXPCConnection"
@"CLLocationManagerRoutine"
@24@0:8@16
@"_CLLocationManagerRoutineProxy"
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@48@0:8@16@24@32@40
@"NSData"
@"NSNumber"
r*16@0:8
@32@0:8@16^v24
@40@0:8@16^v24@?32
d16@0:8
v24@0:8d16
i16@0:8
v20@0:8i16
q16@0:8
v24@0:8q16
v24@0:8@?16
B40@0:8^v16Q24^{os_state_hints_s=I*II}32
^v16@0:8
{_CLLocationManagerStateTrackerState="distanceFilter"d"desiredAccuracy"d"updatingLocation"B"requestingLocation"B"requestingRanging"B"updatingRanging"B"updatingHeading"B"headingFilter"d"allowsLocationPrompts"B"allowsAlteredAccessoryLocations"B"dynamicAccuracyReductionEnabled"B"previousAuthorizationStatusValid"B"previousAuthorizationStatus"i"limitsPrecision"B"activityType"q"pausesLocationUpdatesAutomatically"i"paused"B"allowsBackgroundLocationUpdates"B"showsBackgroundLocationIndicator"B"allowsMapCorrection"B"batchingLocation"B"updatingVehicleSpeed"B"updatingVehicleHeading"B"matchInfoEnabled"B"groundAltitudeEnabled"B"fusionInfoEnabled"B"courtesyPromptNeeded"B"isAuthorizedForWidgetUpdates"B}
@56@0:8@16@24@32@40@48
^{__CLClient=}
@"<CLLocationManagerDelegate>"
@"CLLocationManager"
@"CLLocationManagerStateTracker"
{?="padding1"i"suitability"i"coordinate"{?="latitude"d"longitude"d}"horizontalAccuracy"d"altitude"d"verticalAccuracy"d"padding2"d"padding3"d"speed"d"speedAccuracy"d"course"d"courseAccuracy"d"timestamp"d"confidence"i"lifespan"d"type"i"rawCoordinate"{?="latitude"d"longitude"d}"rawCourse"d"floor"i"integrity"I"referenceFrame"i"rawReferenceFrame"i"signalEnvironmentType"i"ellipsoidalAltitude"d"fromSimulationController"B}
@"NSString"
@"CLTimer"
@"NSMutableSet"
@"CLSilo"
v24@0:8@?<v@?@"NSArray"@"NSError">16
B20@0:8B16
@20@0:8B16
B32@0:8@16^@24
@80@0:8@16@24@32@40@48@56@64@72
@64@0:8@16@24@32@40@48@56
@24@0:8^@16
i32@0:8@16@24
i24@0:8@16
v28@0:8B16@20
v28@0:8i16@20
v32@0:8i16i20@24
v32@0:8^i16@24
v72@0:8@16d24d32d40i48i52@56^@64
v52@0:8@16i24i28i32@36^@44
v40@0:8i16i20@24@32
v44@0:8B16@20@28^@36
v40@0:8@16@24^@32
v52@0:8{?=[8I]}16B48
B32@0:8@16@24
@32@0:8@16^@24
@40@0:8@16@24@32
^{__CLClient=}16@0:8
v32@0:8d16d24
v28@0:8d16i24
v32@0:8@16d24
v32@0:8@16Q24
v28@0:8@16B24
@36@0:8@16B24@?28
v40@0:8@16@24@?32
v36@0:8@16B24@28
v32@0:8@16@24
@32@0:8Q16@?24
v32@0:8Q16@?24
Q24@0:8Q16
@32@0:8d16d24
@44@0:8d16d24d32i40
v32@0:8@"NSArray"16@"NSNumber"24
v36@0:8@16i24@?28
v36@0:8@"NSArray"16i24@?<v@?@"NSArray"@"NSError">28
@"<CLLocationSmootherDelegate>"
@"CLLocationSmoother"
v40@0:8@16Q24@?32
@"_CLLocationSmootherProxy"
C16@0:8
f16@0:8
@28@0:8f16C20C24
v20@0:8f16
v20@0:8C16
@24@0:8I16S20
I16@0:8
v20@0:8I16
S16@0:8
v20@0:8S16
@48@0:8@16@24@32@?40
@48@0:8r*16@24@32@?40
{unique_ptr<CLGnssDisablementAssertionInternal, std::default_delete<CLGnssDisablementAssertionInternal>>="__ptr_"{__compressed_pair<CLGnssDisablementAssertionInternal *, std::default_delete<CLGnssDisablementAssertionInternal>>="__value_"^{CLGnssDisablementAssertionInternal}}}
@68@0:8q16{CLLocationCoordinate2D=dd}24d40i48i52B56@60
{CLLocationCoordinate2D="latitude"d"longitude"d}
@60@0:8q16{CLLocationCoordinate2D=dd}24d40i48i52B56
{CLLocationCoordinate2D=dd}16@0:8
v32@0:8{shared_ptr<CLConnectionMessage>=^{CLConnectionMessage}^{__shared_weak_count}}16
@"<CLFindMyAccessoryRangingManagerDelegate>"
{unique_ptr<CLConnectionClient, std::default_delete<CLConnectionClient>>="__ptr_"{__compressed_pair<CLConnectionClient *, std::default_delete<CLConnectionClient>>="__value_"^{CLConnectionClient}}}
@24@0:8Q16
@48@0:8@16{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}24
v32@0:8r*16@24
v24@0:8r*16
v32@0:8Q16@24
v28@0:8S16@20
v28@0:8C16@20
v28@0:8I16@20
v28@0:8@16I24
v32@0:8I16I20@24
@"<CLFindMyAccessoryManagerDelegate>"
@"CLFindMyAccessoryFragmentAccumulator"
B40@0:8@16@24^@32
B24@0:8B16i20
{unique_ptr<CLRegulatoryConfigInternal, std::default_delete<CLRegulatoryConfigInternal>>="__ptr_"{__compressed_pair<CLRegulatoryConfigInternal *, std::default_delete<CLRegulatoryConfigInternal>>="__value_"^{CLRegulatoryConfigInternal}}}
d24@0:8@16
d24@0:8d16
@104@0:8{?=ddddddddddi}16
{?="x"d"y"d"z"d"magneticHeading"d"trueHeading"d"accuracy"d"timestamp"d"temperature"d"magnitude"d"inclination"d"calibration"i}
@40@0:8d16d24d32
@84@0:8B16B20{?=dd}24d40i48d52d60d68d76
{?=dd}16@0:8
{?="latitude"d"longitude"d}
^{CLCallbackAssertionInternal=@@?^{CLConnectionClient}}
@44@0:8@16@24@32i40
@36@0:8@16@24i32
@3192@0:8{?=[512c][512c][512c]iBBBB(?={?=[512c]SSiB}{?={?=dd}ddiBB}{?=[101{?=dd}]iiB})}16
@48@0:8{CLLocationCoordinate2D=dd}16d32@40
@28@0:8@16i24
@52@0:8@16@24i32B36B40B44B48
@68@0:8@16@24i32B36B40B44B48@52@60
B32@0:8{CLLocationCoordinate2D=dd}16
@"NSUUID"
@28@0:8@16I24
@"NSDate"
@56@0:8{CLLocationCoordinate2D=dd}16d32@40@48
@52@0:8{CLLocationCoordinate2D=dd}16d32@40B48
@84@0:8{CLLocationCoordinate2D=dd}16d32i40B44B48@52@60B68B72B76B80
@100@0:8{CLLocationCoordinate2D=dd}16d32i40B44B48@52@60B68B72B76B80@84@92
v44@0:8@16@24@32B40
@36@0:8@16S24@28
@40@0:8@16S24S28@32
@44@0:8@16S24S28@32B40
c16@0:8
@64@0:8@16@24@32q40d48q56
@72@0:8@16@24@32q40d48q56d64
@"CLBeaconInternal"
{?=d}16@0:8
v64@0:8{?=d}16
{?=[4]}16@0:8
v144@0:8{?=[4]}16
{?=[6[6f]]}16@0:8
v160@0:8{?=[6[6f]]}16
{?="coordinate""horizontalAccuracy"d}
{?="columns"[4]}
{?="v"[6[6f]]}
v44@0:8@16@24C32@36
v44@0:8@16q24q32C40
v24@0:8@"NSURL"16
v24@0:8@"CLVisit"16
v24@0:8@"CLLocation"16
v32@0:8@"NSString"16@?<v@?@"NSDictionary">24
v44@0:8@"NSString"16@"NSString"24C32@"CLLocation"36
v44@0:8@"NSString"16q24q32C40
@28@0:8@16S24
@32@0:8@16S24S28
v32@0:8@"NSDictionary"16@?<v@?>24
@32@0:8{?=dd}16
{?="trueHeading"d"timestamp"d}
@48@0:8{?=dddd}16
{?="speed"d"timestamp"d"machContinuousTime"d"machAbsoluteTime"d}
@72@0:8{CLLocationCoordinate2D=dd}16d32@40@48@56@64
@64@0:8{CLLocationCoordinate2D=dd}16d32@40@48@56
@"_CLPlaceInference"
@"<GEOMapServiceTicket>"
v36@0:8@16B24@?28
v40@0:8@16d24@?32
v44@0:8@16d24B32@?36
v52@0:8@16@24d32B40@?44
v48@0:8@16@24@32@?40
v40@0:8@16@24@32
@"CLGeocoderInternal"
@24@0:8r^{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16
v200@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@?192
v28@0:8B16@?20
v48@0:8d16@24@32@?40
v48@0:8B16i20@24@32@?40
v48@0:8@16@24Q32@?40
v80@0:8@16d24d32d40i48i52@56@64@?72
v60@0:8@16i24i28i32@36@44@?52
v52@0:8B16@20@28@36@?44
v48@0:8@16@24B32B36@?40
v32@0:8I16B20@?24
v28@0:8I16@?20
v40@0:8@16i24i28@?32
v84@0:8B16@20@28{?=[8I]}36B68B72@?76
v28@0:8i16@?20
v44@0:8i16@20@28@?36
v56@0:8i16i20@24@32@40@?48
v44@0:8B16@20@28@?36
v64@0:8@16@24@32@40d48d56
v24@0:8@?<v@?@"NSError"@"NSArray">16
v24@0:8@?<v@?@"NSError"@"NSString">16
v24@0:8@?<v@?@"NSError"@"NSDictionary">16
v40@0:8@"NSString"16@"NSData"24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSError"@"NSData">24
v200@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@?<v@?@"NSError"@"NSString">192
v28@0:8B16@?<v@?@"NSError">20
v24@0:8@?<v@?@"NSError">16
v48@0:8@"NSString"16@"NSString"24@"NSData"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError"@"NSData">32
v48@0:8d16@"NSString"24@"NSString"32@?<v@?@"NSError"d>40
v48@0:8B16i20@"NSString"24@"NSString"32@?<v@?@"NSError">40
v24@0:8@?<v@?@"NSError"B>16
v24@0:8@?<v@?@"NSError"i>16
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError"i>32
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError"B>32
v32@0:8@"NSString"16@?<v@?@"NSError">24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError"@"NSDictionary">32
v48@0:8@"NSString"16@"NSString"24Q32@?<v@?@"NSError"B>40
v80@0:8@"NSString"16d24d32d40i48i52@"NSString"56@"NSString"64@?<v@?@"NSError">72
v60@0:8@"NSString"16i24i28i32@"NSString"36@"NSString"44@?<v@?@"NSError">52
v52@0:8B16@"NSString"20@"NSString"28@"NSString"36@?<v@?@"NSError">44
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v48@0:8@"NSString"16@"NSString"24B32B36@?<v@?@"NSError"{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}>40
v48@0:8@"NSString"16@"NSString"24@"CLLocation"32@?<v@?@"NSError"{?=dddi}>40
v40@0:8@"NSData"16@"NSUUID"24@?<v@?@"NSError">32
v24@0:8@?<v@?@"NSError"@"NSData">16
v32@0:8I16B20@?<v@?@"NSError">24
v28@0:8I16@?<v@?@"NSError"B>20
v40@0:8@"NSData"16i24i28@?<v@?@"NSError">32
v84@0:8B16@"NSString"20@"NSString"28{?=[8I]}36B68B72@?<v@?@"NSError">76
v28@0:8i16@?<v@?@"NSError">20
v44@0:8i16@"NSString"20@"NSString"28@?<v@?@"NSError">36
v56@0:8i16i20@"NSString"24@"NSString"32@"NSString"40@?<v@?@"NSError">48
v44@0:8B16@"NSString"20@"NSString"28@?<v@?@"NSError">36
v24@0:8@?<v@?@"NSError"QQ>16
v40@0:8@"NSString"16@"NSString"24@"NSDictionary"32
v64@0:8@"NSDictionary"16@"NSDictionary"24@"NSArray"32@"NSArray"40d48d56
C40@0:8C16i20r^{__CFString=}24r^{__CFString=}32
C40@0:8^i16r^{__CFString=}24r^{__CFString=}32
r^{__CFDictionary=}16@0:8
r^{__CFArray=}16@0:8
r^{__CFString=}16@0:8
v32@0:8r^{__CFString=}16r^v24
r^v24@0:8r^{__CFString=}16
C24@0:8*16
@20@0:8C16
@40@0:8@16@24^@32
d40@0:8d16@24@32
C40@0:8*16r^{__CFString=}24r^{__CFString=}32
C24@0:8r^{__CFString=}16
r^{__CFDictionary=}32@0:8r^{__CFString=}16r^{__CFString=}24
B48@0:8@16@24Q32^@40
B80@0:8@16d24d32d40i48i52@56@64^@72
B60@0:8@16i24i28i32@36@44^@52
B52@0:8B16@20@28@36^@44
B48@0:8@16@24@32^@40
C48@0:8r^{__CFString=}16r^{__CFString=}24C32C36^{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}40
C48@0:8r^{__CFString=}16r^{__CFString=}24@32^{?=dddi}40
v36@0:8^{?=Qdddd}16i24i28i32
C24@0:8B16I20
C28@0:8^B16I24
C76@0:8C16r^{__CFString=}20r^{__CFString=}28{?=[8I]}36C68C72
C48@0:8i16i20r^{__CFString=}24r^{__CFString=}32r^{__CFString=}40
C20@0:8i16
C36@0:8i16r^{__CFString=}20r^{__CFString=}28
C36@0:8r^{__CFString=}16r^{__CFString=}24C32
C24@0:8^i16
C32@0:8^Q16^Q24
v24@0:8Q16
@"CLLocation"
@"NSDictionary"
@"CLRegion"
@"NSArray"
@"GEOMapItemStorage"
@"NSTimeZone"
@72@0:8@16@24@32@40Q48@56@64
v32@0:8@?16@24
@"CLPlacemarkInternal"
@32@0:8Q16d24
@32@0:8{CLLocationCoordinate2D=dd}16
d32@0:8{CLLocationCoordinate2D=dd}16
v24@0:8@"PBCodable"16
v24@0:8@?<v@?@"NSDictionary">16
@32@0:8r^v16Q24
^{?=ISSSSSSCC}
v28@0:8B16Q20
B24@0:8Q16
Q24@0:8@16
v36@0:8Q16B24@28
v36@0:8Q16i24@28
v48@0:8@16@24@32@40
@"<CLFindMyAccessoryFirmwareUpdateDelegate>"
@72@0:8Q16Q24@32@40d48@56@64
@"CLPlacemark"
@60@0:8{CLLocationCoordinate2D=dd}16d32@40@48i56
@96@0:8{CLLocationCoordinate2D=dd}16d32i40B44@48@56B64B68B72B76@80@88
@36@0:8@16I24S28S32
@192@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16
@200@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@192
@544@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16{?=dddddfffBi{?=dd}diiB{?=ddBB}{?=dd}if{?=dd}ddiBddddddddBB{?=dd}diddddidd}192
@552@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16{?=dddddfffBi{?=dd}diiB{?=ddBB}{?=dd}if{?=dd}ddiBddddddddBB{?=dd}diddddidd}192@544
@216@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@192d200@208
@284@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@192d200@208@216d224d232d240d248i256d260d268@276
@292@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@192d200@208@216d224d232d240d248i256d260d268@276@284
@"CLLocationMatchInfo"
@"_CLLocationGroundAltitude"
@"_CLLocationFusionInfo"
@"CLLocationGnssOdometerInfo"
@24@0:8q16
@24@0:8B16B20
@108@0:8{CLLocationCoordinate2D=dd}16d32d40d48d56d64d72d80@88i96@100
@64@0:8{CLLocationCoordinate2D=dd}16d32d40d48@56
@80@0:8{CLLocationCoordinate2D=dd}16d32d40d48d56d64@72
@96@0:8{CLLocationCoordinate2D=dd}16d32d40d48d56d64d72d80@88
@104@0:8{CLLocationCoordinate2D=dd}16d32d40d48d56d64d72d80@88@96
{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@0:8
@24@0:8d16
@248@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@192d200@208@216d224d232@240
@208@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@192d200
@32@0:8r*16@24
^{CLAssertionInternal=@^{CLConnectionClient}}
@32@0:8Q16@24
v32@0:8Q16C24S28
@"NSMutableData"
@56@0:8@16@24@32@40B48B52
@"_CLRangingPeer"
@52@0:8@16@24@32@40B48
@48@0:8d16d24d32d40
@40@0:8@16d24d32
@"_CLLSLLocationCoordinate"
@"_CLLSLMapRoadSegment"
{?=[3]}16@0:8
v112@0:8{?=[3]}16
16@0:8
v48@0:816
@"_CLLSLLocation"
@"_CLLSLHeadingSupplInfo"
{?="columns"[3]}
{?=QCCCCCCCCCCC}16@0:8
v40@0:8{?=QCCCCCCCCCCC}16
v80@0:8{?=[4]}16
v64@0:8{?=[3]}16
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
{CGSize="width"d"height"d}
{?="stateLengthInBytes"Q"stateLength"C"orientationOffset"C"orientationLength"C"gyroBiasOffset"C"gyroBiasLength"C"velocityOffset"C"velocityLength"C"accelBiasOffset"C"accelBiasLength"C"positionOffset"C"positionLength"C}
{?="covarianceSizeInBytes"Q"covarianceSize"C"orientationCovOffset"C"orientationDof"C"gyroBiasCovOffset"C"gyroBiasDof"C"velocityCovOffset"C"velocityDof"C"accelBiasCovOffset"C"accelBiasDof"C"positionCovOffset"C"positionDof"C}
@"NSMutableDictionary"
@(#)PROGRAM:CoreLocation  PROJECT:CoreLocation-2667.0.25
NSt3__120__shared_ptr_emplaceI19CLConnectionMessageNS_9allocatorIS1_EEEE
@<@A
15CLNameValuePair
@10BasicMutex
5Mutex
11NonCopyable
N13CLPreferences10OtherPrefsE
13CLPreferences
14CLPlatformInfo
16CLDaemonSettings
NSt3__120__shared_ptr_pointerIP16CLDaemonSettingsN12_GLOBAL__N_112null_deleterENS_9allocatorIS1_EEEE
N12_GLOBAL__N_112null_deleterE
5CLLog
NSt3__120__shared_ptr_pointerIP19CLCircularLogBufferNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI19CLCircularLogBufferE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__114default_deleteI19CLCircularLogBufferEE
@10CLSettings
p@f@
@ffffff
MbP?
sA-C
Zw+?(
Zwk?
TXA{
xVXA
xVXA
9CLLogBase
non-matching retain (%p) and release (%p) functions in context, ignoring
Failed to initilize fHeadingCalibrationDisplayMutex, error code: %{public}d
CL: CLClientCreateWithBundleIdentifierAndPath
{"msg%{public}.0s":"CLClientCreateWithBundleIdentifierAndPath", "event":%{public, location:escape_only}s, "effectiveBundleIdentifier":%{public, location:escape_only}@, "effectiveBundlePath":%{public, location:escape_only}@}
{"msg%{public}.0s":"client allocated", "client":"%{public}p"}
{"msg%{public}.0s":"client about to be destroyed", "client":"%{public}p"}
{"msg%{public}.0s":"CLClient needs to be invalidated first before destroying.", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"client->fContext should be NULL", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Location callback block not executed in a timely manner!
Discarding message for event %{private}d because of too many unprocessed messages
received client will resign active notification
received client did become active notification
Missing UsageDescription key for requested authorization: %{public}d
Invalid requested authorization: %{public}d
CL: CLClientIsLocationServicesEnabled
{"msg%{public}.0s":"CLClientIsLocationServicesEnabled", "event":%{public, location:escape_only}s}
#Warning CLInternalGetLocationServicesEnabled failed: could not reach daemon
CL: CLClientIsAuthorizationPromptMapDisplayEnabled
{"msg%{public}.0s":"CLClientIsAuthorizationPromptMapDisplayEnabled", "event":%{public, location:escape_only}s}
#Warning CLInternalGetAuthorizationPromptMapDisplayEnabled failed: could not reach daemon
{"msg%{public}.0s":"invalidating client", "client":"%{public}p"}
CLClient is deprecated. Will be obsolete soon. (%{public}s)
{"msg%{public}.0s":"#NullIsland Received a latitude or longitude from getLocationForBundleID that was exactly zero", "latIsZero":%{public}hhd, "lonIsZero":%{public}hhd, "location":%{private, location:CLClientLocation}.*P}
{"msg%{public}.0s":"CLClientShowHeadingCalibration", "showHeadingCal":%{public}hhd, "isHeadingCalibrated":%{public}hhd, "isApplicationActive":%{public}hhd, "isUpdatingHeading":%{public}hhd}
Application inactive, will not show heading calibration
Fence: CLClientRequestRegionState, unsupported fence type, %{private}d
{"msg%{public}.0s":"Unable to get vertices from encoded data", "error":%{public, location:escape_only}@}
Number of vertices received doesn't match stored, %{public}d, %{public}lu
Number of vertices received invalid, %{public}d, internal
Copied %{private}d vertices
{"msg%{public}.0s":"#Warning Client is subject to corrective compensation, but hasn't been updated to find out about it yet"}
kCLConnectionMessageAutomaticPromptingEnabled is not supported
Invalid call to CLClientGetAutopauseState
malformed message: kCLConnectionMessageAutopauseStatus
CL: _CLClientCreateConnection
{"msg%{public}.0s":"_CLClientCreateConnection", "event":%{public, location:escape_only}s, "client":"%{public}p"}
CL: CLClientInterruptionHandler
{"msg%{public}.0s":"CLClientInterruptionHandler", "event":%{public, location:escape_only}s, "client":"%{public}p"}
Got unhandled message %s from daemon
{"msg%{public}.0s":"Unable to encode vertices for polygonal region"}
{"msg%{public}.0s":"#location #routine sendLocations to RT, didUpdateLocations)"}
{"msg%{public}.0s":"#location #routine sendLocations to RT, not respondsToSelector @selector(locationManager:didUpdateLocations:)"}
{"msg%{public}.0s":"#location #routine sendLocations to RT, didUpdateLocations:withReply"}
{"msg%{public}.0s":"#location #routine sendLocations to RT, not respondsToSelector @selector(locationManager:didUpdateLocations:completion:)"}
{"msg%{public}.0s":"#location #routine createConnection"}
{"msg%{public}.0s":"Non-specific CLEmergencyEnablementAssertion is no longer supported #CLEEA"}
{"msg%{public}.0s":"Already in a transaction. LocationManager threading bug?", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "new":%{public, location:_CLLocationManagerStateTrackerState}.*P}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "old":"%{public}p", "new":"%{public}p"}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "old":"%{public}f", "new":"%{public}f"}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "old":%{public}hhd, "new":%{public}hhd}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "old":%{public, location:CLClientAuthorizationStatus}lld, "new":%{public, location:CLClientAuthorizationStatus}lld}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "old":%{public, location:CLActivityType}lld, "new":%{public, location:CLActivityType}lld}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "old":%{public, location:CLAutoPause}lld, "new":%{public, location:CLAutoPause}lld}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "old":%{public, location:_CLLocationManagerStateTrackerState}.*P, "new":%{public, location:_CLLocationManagerStateTrackerState}.*P}
{"msg%{public}.0s":"state dump failure", "expected_size":%{public}lld, "provided_size":%{public}lld}
#Warning Has lingering peer ranging request
CL: CLLocationManager
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "identifier":%{public, location:escape_only}@, "bundle":%{public, location:escape_only}@}
initializing CLLocationManager with a nil identifier
{"msg%{public}.0s":"delegate and queue must not be nil", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
initializing CLLocationManager with a nil bundle
initializing CLLocationManager with a nil limiting identifier
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p"}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "delegate":"%{public}p"}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "distance":"%{public}f"}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "accuracy":"%{public}f"}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "pausesLocationUpdatesAutomatically":%{public}hhd}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "allows":%{public}hhd}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "shows":%{public}hhd}
{"msg%{public}.0s":"#NullIsland Either the latitude or longitude was exactly 0! That's highly unlikely: refreshing property", "latIsZero":%{public}hhd, "lonIsZero":%{public}hhd}
{"msg%{public}.0s":"We have a valid, cached location. Fetching from internal state", "location":%{private, location:CLClientLocation}.*P}
{"msg%{public}.0s":"No valid, cached location. Fetched from daemon", "location":%{private, location:CLClientLocation}.*P}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "supportInfo":%{public}hhd}
Obsolete
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "privateMode":%{public}hhd}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "purpose":%{private, location:escape_only}@}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "activityType":%{public, location:CLActivityType}lld}
Client,%s,setActivityType,%ld
Client,%s,setActivityType,allowing map correction
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "bundleID":%{public, location:escape_only}s}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "bundlePath":%{public, location:escape_only}s}
Canceling requestLocation
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@}
Ignoring requestLocation due to ongoing location.
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "distance":"%{public}f", "timeout_s":"%{public}.09f"}
Canceling requestLocation.
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "filter":"%{public}f"}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "orientation":%{public, location:CLDeviceOrientation}lld}
heading, %{private}s
Start updating heading. HeadingFilter, %{public}.2f
Stop updating heading
Dismissing Compass Calibration HUD
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "region":%{private, location:escape_only}@}
{"msg%{public}.0s":"Region is nil"}
Number of vertices %{public}lu
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "region":%{private, location:escape_only}@}
{"msg%{public}.0s":"Cannot start ranging beacons on behalf of another app", "onBehalfOf":%{public, location:escape_only}s}
{"msg%{public}.0s":"Region is not an instance of CLBeaconRegion"}
{"msg%{public}.0s":"Cannot stop ranging beacons on behalf of another app", "onBehalfOf":%{public, location:escape_only}s}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "constraint":%{private, location:escape_only}@}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "constraint":%{private, location:escape_only}@}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "peers":%{private, location:escape_only}@, "timeout_s":"%{public}.09f"}
WRTT: received requestRangingToPeers, timeout, %{public}lf
#Warning Ignoring requestRangingToPeers due to ongoing ranging
WRTT: received respondToRangingFromPeers, timeout, %{public}lf
#Warning Ignoring respondToRangingFromPeers due to ongoing ranging.
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "peers":%{private, location:escape_only}@, "interval":%{public}lld}
WRTT: received startRangingToPeers, interval, %{public}lu
#Warning Ignoring startRangingToPeers due to ongoing ranging
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "peers":%{private, location:escape_only}@}
WRTT: received stopRangingToPeers
WRTT: received startRangingFromPeers
#Warning Ignoring startRangingFromPeers due to ongoing ranging
WRTT: received stopRangingFromPeers
{"msg%{public}.0s":"received internal version get request"}
{"msg%{public}.0s":"received localization scan request"}
{"msg%{public}.0s":"received recording scan request", "forced:":%{public}hhd}
{"msg%{public}.0s":"received truth label donation request"}
{"msg%{public}.0s":"received request to purge semi-supervised models"}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate - request timeout", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "location":%{private, location:CLClientLocation}.*P}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate - request timeout", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@}
{"msg%{public}.0s":"-onClientEvent:supportInfo:", "event":%{public, location:CLClientEvent}lld, "data":%{private, location:escape_only}@}
could not get updated authorization status
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "approved":%{public}hhd}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "authorizationStatus":%{public, location:CLClientAuthorizationStatus}lld, "limitsPrecision":%{public}hhd, "isAuthorizedForWidgetUpdates":%{public}hhd}
Location event received with empty payload
New location is identical to old location; discarding
New location predates old location, and the event types differ; discarding
{"msg%{public}.0s":"#CLLocationManager invoking #delegate - invalid location", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@}
{"msg%{public}.0s":"#NullIsland onClientEventLocation:forceMapMatching: got a latitude or longitude that was exactly zero", "latIsZero":%{public}hhd, "lonIsZero":%{public}hhd, "location":%{private, location:CLClientLocation}.*P}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "location":%{private, location:CLClientLocation}.*P, "eventType":%{public, location:escape_only}@}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate - location unavailable", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@}
could not get updated heading
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "heading":%{public, location:escape_only}@}
CL: Invoking Compass Calibration HUD
Could not show heading calibration
in onClientEventPlaceInferenceResult for CLPlaceInferenceSubscription
{"msg%{public}.0s":"Got a place inference result without a result!?"}
in onClientEventPlaceInferenceError for CLPlaceInferenceSubscription
{"msg%{public}.0s":"Got a place inference error without an error!?"}
{"msg%{public}.0s":"#Warning Got place inference result without a handler block"}
could not get error
{"msg%{public}.0s":"Location access was denied; bailing early cancelling requestLocation"}
{"msg%{public}.0s":"Location access was denied; but not bailing early"}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "error":%{public, location:escape_only}@}
could not get region monitoring event
{"msg%{public}.0s":"Fence: onClientEventRegion, unable to fetch region"}
{"msg%{public}.0s":"Delivering region monitoring event, no delegate", "self":"%{public}p"}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "region":%{private, location:escape_only}@, "state":%{public, location:CLRegionState}lld}
could not get the region state
{"msg%{public}.0s":"Fence: onClientEventRegionState, unknown region type", "regionType":%{public, location:CLClientRegionType}lld}
{"msg%{public}.0s":"#Warning Fence: onClientEventRegionState, unknown state", "regionState":%{public, location:CLClientRegionState}lld}
{"msg%{public}.0s":"Delivering region monitoring state request, no delegate", "self":"%{public}p"}
{"msg%{public}.0s":"Fence: onClientEventRegionError, unknown region type", "regionType":%{public, location:CLClientRegionType}lld}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "region":%{private, location:escape_only}@, "error":%{public, location:escape_only}@}
could not get ranged beacons
Client beacon is invalid (count,%lu).
could not get ranging error
{"msg%{public}.0s":"Delivering range error to client's delegate", "self":"%{public}p", "delegate":"%{public}p"}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "constraint":%{private, location:escape_only}@, "error":%{public, location:escape_only}@}
WRTT: received onClientEventPeerRanging
WRTT: received onClientEventPeerRangingRequestProcessed
WRTT: received onClientEventPeerRangingError
could not get updated paused state
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "duration_s":"%{public}.09f"}
{"msg%{public}.0s":"Delivering region monitoring watchdog, no delegate", "self":"%{public}p"}
{"msg%{public}.0s":"Client region type is not supported.
", "regionType":%{public, location:CLClientRegionType}lld}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "notification":%{private, location:escape_only}@}
could not get batch result
Finished deferred updates: %s
could not get updated vehicle speed
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "vehicleSpeed":%{public, location:escape_only}@}
could not get updated vehicle heading
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "vehicleHeading":%{public, location:escape_only}@}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "visit":%{private, location:escape_only}@}
{"msg%{public}.0s":"Processing Significant Location Visit State Request Event", "self":"%{public}p", "delegate":"%{public}p"}
{"msg%{public}.0s":"isAuthorizedForPreciseLocation is deprecated and will be removed in the next seed. use accuracyAuthorization"}
{"msg%{public}.0s":"Requesting when in use authorization"}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "SEL":%{public, location:escape_only}s}
{"msg%{public}.0s":"Requesting always authorization"}
{"msg%{public}.0s":"Requesting temporary accuracy increase"}
{"msg%{public}.0s":"requestTemporaryPreciseLocationAuthorizationWithPurposeKey is deprecated and will be removed in the next seed. use requestTemporaryFullAccuracyAuthorizationWithPurposeKey"}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "enabled":%{public}hhd}
{"msg%{public}.0s":"must pass handler to dumpDiagnosticFilesWithHandler", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
dumpDiagnosticFiles called, trying to make an xpc call
#diagnosticManager failed to get remoteObjectProxy with error %@
#diagnosticManager error copying files: %@
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "isActuallyAWatchKitExtension":%{public}hhd}
Start updating vehicle speed
Stop updating vehicle speed
Start updating vehicle heading
Stop updating vehicle heading
#slv: Request visit state
Setup PlaceInferences common logic
Start oneshot PlaceInferences
Start continuous PlaceInferences
Stop continuous PlaceInferences
Widget has NSWidgetWantsLocation key in its Info.plist
{"msg%{public}.0s":"#Warning widget is missing NSWidgetWantsLocation key in its Info.plist"}
Encoded coarse meta data found
CLLocationManager should not get multile locations with coarseMetaData
#Warning Changing CLCommon's runloop after it was already established
#Warning Setting CLCommon's runloop after it was already established
CLCommonSetRunLoop, %p
cannot open source file: %{public}s, errno %{public}d
cannot open target file: %{public}s, errno %{public}d
error reading source file: %{public}s
error writing target file: %{public}s
cannot open compression stream: %{public}s, bzerror %{public}d
error writing target file: %{public}s, bzerror: %{public}d
error closing target file: %{public}s, bzerror: %{public}d
CLCommonCompareLocationEqualityClient compared two coordinates that were identical other than their reference frames: (%lf, %lf, %d) (%lf, %lf, %d)
{"msg%{public}.0s":"Bundle for LocationdInternalSystemService not marked as SystemService", "bundle":%{public, location:escape_only}s, "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
os_transaction created: (%p) %@
os_transaction releasing: (%p) %@
Please update userSpecificPlaceTypeFromRTUserType
Please update placeInferencePlaceTypeFromRTPlaceType
#clgda,client,CLGnssDisablementAssertionInternal,name,%s,dict,%@
#clgda,client,#warning,unexpected message,%s
#clgda,client,message,%s
#clgda,#warning,client,noRegisteredCallback
#clgda,client,~CLGnssDisablementAssertionInternal()
{"msg%{public}.0s":"#clgda,client,reason missing"}
{"msg%{public}.0s":"#clgda,client,bundleID or bundlePath needed"}
{"msg%{public}.0s":"#clgda,client,nil callback queue"}
{"msg%{public}.0s":"#clgda,client,nil callback block"}
#clgda,client,newAssertionForBundleIdentifier
#clgda,client,newAssertionForBundle
Got Reply: message: %s
informing client -- did connect to device: %s -  %s
informing client -- did disconnect from device: %s -  %s
Got a message we do not understand... dropping!
Connection to locationd interrupted!!
Connect to device: %@
Disconnect from device: %@
Init Rose on device: %@
Stop Rose on device: %@
Set Rose Range Parameters on device: %@
Stop Rose Ranging on device: %@
Start Rose Ranging on device: %@
Fetch firmware from device: %@
#durian Got Reply: message: %s
{"msg%{public}.0s":"#durian handling message to client", "message":%{public, location:escape_only}s, "beaconUUID":%{private, location:escape_only}@, "error":%{private, location:escape_only}@}
{"msg%{public}.0s":"#durian #hawkeye got fragment", "opcode":%{private}u, "dataFragment":%{private, location:escape_only}@}
{"msg%{public}.0s":"#durian #hawkeye error appending fragment", "opcode":%{private}u, "dataFragment":%{private, location:escape_only}@}
{"msg%{public}.0s":"#durian #client client received advertisement", "uuid":%{private, location:escape_only}@, "address":%{private, location:escape_only}@, "advertisementData":%{private, location:escape_only}@, "scanDate":%{private, location:escape_only}@, "status":%{private}u, "rssi":%{private}ld, "reserved":%{private, location:escape_only}@}
#durian Got a message we do not understand... dropping!
{"msg%{public}.0s":"#durian #hawkeye clearing fragments from accumulator", "uuid":%{private, location:escape_only}@}
{"msg%{public}.0s":"#durian client sending message", "messageName":%{public, location:escape_only}s, "beaconUUID":%{public, location:escape_only}s}
{"msg%{public}.0s":"#durian client sending message", "messageName":%{public, location:escape_only}s}
{"msg%{public}.0s":"#durian Client requested scan for nearby owner"}
{"msg%{public}.0s":"#durian Client requested scan for HELE"}
{"msg%{public}.0s":"#durian Client requested scan for nearby devices long"}
{"msg%{public}.0s":"#durian Client requested stop to scan for nearby devices long"}
{"msg%{public}.0s":"#durian Client requested for current scan parameters"}
#clreg,addConfigForIso,%s
#clreg,addConfigForCircularRegion,%.6f,%.6f,%.2f
#clreg,#warning,addConfigForIsoList,invalidArgs,ignoring
#clreg,#warning,addConfigForIsoList,emptyIso,ignoring
#clreg,#warning,addConfigForCircularRegionList,invalidArgs,ignoring
#clreg,#warning,addConfigForCircularRegionList,invalidRadius,ignoring
#clreg,fetchRAEConfig,%{private}.6f,%{private}.6f,%{private}.2f,distToLocation,%{private}2.f,result,found
#clreg,completionCallback,%{private}@,nil,nil
#clreg,fetchRAEConfig,%{private}.6f,%{private}.6f,%{private}.2f,distToLocation,%{private}2.f,result,notFound
#clreg,fetchRAEConfig,no RAEs matched
#clreg,completionCallback,default,nil,nil
#clreg,completionCallback,%{private}@,%{private}@,nil
#clreg,#map,query,lla,%{private}.6f,lon,%{private}.6f,accuracy,%{private}.2f
#clreg,#map,response,#warning,error,%@
#clreg,#map,response,#warning,results,Nil
#clreg,#map,response,#warning,invalidResultEntry,ignoring
#clreg,#map,response,disputed,first,%{private}s,interested,%@
#clreg,#map,response,disputed,next,%{private}s,interested,%@
#clreg,#map,response,nonDisputed,first,%{private}@
#clreg,#map,response,nonDisputed,next,%{private}@
#clreg,#warning,fetchIsoOrDefaultConfig,geoLocationAllocFailed
#clreg,cbLocation,iso,%{private}@,neighbors,%{private}@
#clreg,cbExtendedLocation,iso,%{private}@,neighbors,%{private}@
#clreg,cbWrapper,isoActual,%{private}@,neighborsWithinLocation,%{private}@,extendedNeighbors,%{private}@
#clreg,fetchConfigForLocation,#warning,location is nil
#clreg,fetchConfigForLocation,%{private}.6f,%{private}.6f,%{private}.2f
#clreg,fetchConfigForLocation,#warning,invalidAccuracy
#clreg,findRAEConfig,%{private}.6f,%{private}.6f,%{private}.2f,distToLocation,%{private}2.f,result,found
#clreg,findRAEConfig,%{private}.6f,%{private}.6f,%{private}.2f,distToLocation,%{private}2.f,result,notFound
#clreg,findRAEConfig,no RAEs matched
sendIsoInfoSync,region,%{private}@,neighbors,%{private}@
#clreg,invalidRegionType
#clreg,#map,response,lla,%{private}.6f,lon,%{private}.6f,accuracy,%{private}.2f,results,%{private}@
Invalid neighbor or excludeRegionName,%{private}@,%{private}@
#clreg,fetchInfoForLocation,#warning,location is nil
#clreg,fetchInfoForLocation,%{private}.6f,%{private}.6f,%{private}.2f
#clreg,fetchInfoForLocation,#warning,invalidAccuracy
processed %p %d to (%s)
could not create new mutable dictionary
{"msg%{public}.0s":"could not deserialize property list", "file":%{public, location:escape_only}s}
{"msg%{public}.0s":"file does not exist... clearing", "file":%{public, location:escape_only}s, "error":%{public, location:escape_only}s}
{"msg%{public}.0s":"#Warning Error reading file", "file":%{public, location:escape_only}s, "error":%{public, location:escape_only}s}
Could not create NSURL for file: %{public}s
Could not write data to disk %{public}s, %{public}s
Could not serialize data for file %{public}s
{"msg%{public}.0s":"Could not serialize data", "file":%{public, location:escape_only}s}
key %{public}s does not have element %{public}d in array of size %{public}ld
key %{public}s does not have element %{public}d in non-array type %{public}lu
Unsupported type at %@:%@ (domain:key)
type IDs do not match for key %{public}s - %{public}lu vs %{public}lu
specified index is out of range for key %{public}s (%{public}d of %{public}ld)
specified index %{public}d not applicable to type %{public}lu for key %{public}s
could not create cf type for key %{public}s
could not create write stream
could not open write stream
could not write data, error code, %{public}ld, error domain, %{public}s
could not create intermediate property list - %{public}ld (%{public}s)
%s = <dictionary (%ld entries)>:
%s = %s
%s = %0.6f
%s = %d
%s = <unhandled value type %lu>
could not get value
type IDs do not match - %{public}lu vs %{public}lu
could not convert to C string
can't convert %{public}u data bytes
#Warning type IDs do not match - %{public}lu
{"msg%{public}.0s":"rangeForTransmitPower: invalid range of transmit power", "transmitPower_dBm":"%{public}.6f"}
{"msg%{public}.0s":"Selected location", "loc":%{private, location:escape_only}s}
{"msg%{public}.0s":"Removed location", "loc":%{private, location:escape_only}s}
Reductive filtering: Sum of weights <= 0 after at least one point added.
{"msg%{public}.0s":"Reductive filtering", "input":%{public}d, "outliers":%{public}d, "used":%{public}d, "transmitPower":"%{public}.6f", "rangeOfBeacon":"%{public}.6f", "lat":"%{private}f", "lon":"%{private}f", "hunc":"%{private}f", "timestamp":%{public, location:escape_only}s, "isAccurateLocationAvailable":%{public}hhd, "filtered":%{public}d}
{"msg%{public}.0s":"Reductive filtering - options", "beaconType":%{public}lu, "transmitPower":"%{public}.6f", "biasRate":"%{public}.6f", "applyRangeEstimation":%{public}hhd}
{"msg%{public}.0s":"Reductive filtering - location observations", "countInput":%{public}lu, "countFiltered":%{public}lu, "loc":%{private, location:escape_only}s}
{"msg%{public}.0s":"Reductive filtering - location trace", "countInput":%{public}lu, "countFiltered":%{public}lu, "loc":%{private, location:escape_only}s}
Unable to load CompassUI framework
Could not load CUICalibrationClass from CompassUI framework
{"msg%{public}.0s":"CSI assertion failed", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
***not supported***
<empty>
Attempt to set key %{public}s for read-only preferences %{public}s/%{public}s!
{"msg%{public}.0s":"Assertion failed", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
unknown hardware type %{private}d
Unsupported HW type %d; file a radar to CoreMotion Factory | 1.0
Unsupported HW type %{private}d; file a radar to CoreMotion Factory | 1.0
no mutable store path for type, %{public}d
could not get mutable store path for type, %{public}d
{"msg%{public}.0s":"CLBBTFTA,reason missing"}
{"msg%{public}.0s":"CLBBTFTA,bundleID or bundlePath needed"}
{"msg%{public}.0s":"CLBBTFTA,nil callback queue"}
{"msg%{public}.0s":"CLBBTFTA,nil callback block"}
CLBBTFTA,unexpected message,%s
{"msg%{public}.0s":"CLBBTFTA", "Connection Message":%{public, location:escape_only}s}
{"msg%{public}.0s":"Could not serialize _CLVLLocalizationResult", "error":%{public, location:escape_only}@}
{"msg%{public}.0s":"identifier is nil"}
{"msg%{public}.0s":"identifier is too long"}
#CLEU,CLGetUncertaintyScaleFactors,input horzontal or vertical SF pointer is NULL
#CLEU,CLGetUncertaintyScaleFactors,confidence out of bounds,%{public}d
#CLEU,CLGetUncertaintyScaleFactors,conf,%{public}d,horzSF,%{public}f,vertSF,%{public}f
#CLEU,linearInterp,x is less than the first point in table,x,%{public}d,table[0].first,%{public}d
#CLEU,linearInterp,x is greater than the last point in table,x,%{public}d,table[size-1].first,%{public}d
#CLEU,linearInterp,failed to find table points bounding x
this SPI is obsolete and will be removed in the future
{"msg%{public}.0s":"getDaemonProxy called"}
{"msg%{public}.0s":"no existing connection, trying to get one"}
Simulation connection interrupted
Simulation connection invalidated
Error fetching remoteObjectProxy
{"msg%{public}.0s":"Do we have a proxy?", "proxy":%{public, location:escape_only}@, "connection":%{public, location:escape_only}@}
Failed parse os_log format specifier for shimming:missing closing brace,format,%{public}s
{"msg%{public}.0s":"Do not use CLGeocoder when GeoServices is missing", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Coarse MetaData cannot be decoded while reverse geocoding location, error, %@
#Warning Geocode error: %{private}@
#Spi, Interrupted
#Spi, Invalidated
#Spi, Error with proxy, error: %@
#Spi, Key is NULL!
#Spi, Couldn't set location default!
{"msg%{public}.0s":"#Spi, getLocationDefaultForKey, ", "error":%{public, location:escape_only}@}
#Spi, setPrivateMode failed
#Spi, CLInternalSetLocationServicesEnabled failed
#Spi, CLInternalSetAuthorizationPromptMapDisplayEnabled failed
{"msg%{public}.0s":"#Spi, CLSetClientTransientAuthorizationInfo failed", "error":%{public, location:escape_only}@}
{"msg%{public}.0s":"#Spi, CLGetClientTransientAuthorizationInfo failed", "error":%{public, location:escape_only}@}
{"msg%{public}.0s":"#Spi, CLInternalChangeClientAuthorizationTime failed", "error":%{public, location:escape_only}@}
{"msg%{public}.0s":"#Spi, CLInternalTriggerExpiredAuthorizationPurge failed", "error":%{public, location:escape_only}@}
#Spi, CLInternalSetGestureServiceEnabled failed
{"msg%{public}.0s":"#Spi, CLInternalGetPrecisionPermission failed", "error":%{public, location:escape_only}@}
#Spi, _CLInternalPerformMigration failed
#Spi, _CLShutdownDaemon failed
#Spi, _CLDisplayStatistics failed
#Spi, _CLDumpLogs failed
#Spi,RouteHintError, Exceeded max number of route hint road segments (%{public}d > %{public}d)
#Spi,RouteHint,LocationInternal,Received route hint road segments,%{public}d,routeType,%{public}d,stepType,%{public}d
#Spi,RouteHintError,Couldn't set map-matching route hint!
#Spi,getAccessoryTypeBitSet,failed
#Spi,getAccessoryTypeBitSet,%d
#Spi, _CLCopyLastLog failed
{"msg%{public}.0s":"#Spi, Setting status bar enabled for entity class failed", "entityClass":%{public, location:CLLocationDictionaryUtilitiesEntityClass}lld}
{"msg%{public}.0s":"Getting status bar enabled for entity class failed", "entityClass":%{public, location:CLLocationDictionaryUtilitiesEntityClass}lld}
CL: CLInternalSetAuthorizationStatus
{"msg%{public}.0s":"CLInternalSetAuthorizationStatus", "event":%{public, location:escape_only}s}
CL: CLCopyAppsUsingLocation
{"msg%{public}.0s":"CLCopyAppsUsingLocation", "event":%{public, location:escape_only}s}
CL: CLSetLocationDefault
{"msg%{public}.0s":"CLSetLocationDefault", "event":%{public, location:escape_only}s, "key":%{public, location:escape_only}@}
CL: CLCopyMicroLocationInternalVersion
{"msg%{public}.0s":"CLCopyMicroLocationInternalVersion", "event":%{public, location:escape_only}s}
CL: CLCopyZaxisStats
{"msg%{public}.0s":"CLCopyZaxisStats", "event":%{public, location:escape_only}s}
CL: CLCopyTechnologiesInUse
{"msg%{public}.0s":"CLCopyTechnologiesInUse", "event":%{public, location:escape_only}s}
CL: CLCopyGnssBandsInUse
{"msg%{public}.0s":"CLCopyGnssBandsInUse", "event":%{public, location:escape_only}s}
Invalid bandUse,%{public}d
CL: CLGetLocationDefault
{"msg%{public}.0s":"CLGetLocationDefault", "event":%{public, location:escape_only}s, "key":%{public, location:escape_only}@}
CL: CLGetPipelinedCaches
{"msg%{public}.0s":"CLGetPipelinedCaches", "event":%{public, location:escape_only}s}
CL: CLGetMotionSensorLogs
{"msg%{public}.0s":"CLGetMotionSensorLogs", "event":%{public, location:escape_only}s}
CL: CLGetAccessoryMotionSensorLogs
{"msg%{public}.0s":"CLGetAccessoryMotionSensorLogs", "event":%{public, location:escape_only}s}
CL: CLApplyArchivedAuthorizationDecisions
{"msg%{public}.0s":"CLApplyArchivedAuthorizationDecisions", "event":%{public, location:escape_only}s}
CL: CLGetArchivedAuthorizationDecisions
{"msg%{public}.0s":"CLGetArchivedAuthorizationDecisions", "event":%{public, location:escape_only}s}
CL: CLTimeZoneAtLocation
{"msg%{public}.0s":"CLTimeZoneAtLocation", "event":%{public, location:escape_only}s}
CL: CLStartStopAdvertisingBeacon
{"msg%{public}.0s":"CLStartStopAdvertisingBeacon", "event":%{public, location:escape_only}s, "region":%{private, location:escape_only}@, "power":%{public, location:escape_only}@}
CL: CLPingDaemon
{"msg%{public}.0s":"CLPingDaemon", "event":%{public, location:escape_only}s}
CL: CLPassKitNotifyPassUsage
{"msg%{public}.0s":"CLPassKitNotifyPassUsage", "event":%{public, location:escape_only}s}
CL: CLWeatherNotifyForecastUsage
{"msg%{public}.0s":"CLWeatherNotifyForecastUsage", "event":%{public, location:escape_only}s}
CL: CLGetClientTransientAuthorizationInfo
{"msg%{public}.0s":"CLGetClientTransientAuthorizationInfo", "event":%{public, location:escape_only}s}
CL: CLSetClientTransientAuthorizationInfo
{"msg%{public}.0s":"CLSetClientTransientAuthorizationInfo", "event":%{public, location:escape_only}s}
CL: CLInternalGetPrecisionPermission
{"msg%{public}.0s":"CLInternalGetPrecisionPermission", "event":%{public, location:escape_only}s}
CL: CLInternalGetAuthorizationStatus
{"msg%{public}.0s":"CLInternalGetAuthorizationStatus", "event":%{public, location:escape_only}s}
CL: CLInternalGetIncidentalUseMode
{"msg%{public}.0s":"CLInternalGetIncidentalUseMode", "event":%{public, location:escape_only}s}
CL: CLInternalPerformMigration
{"msg%{public}.0s":"CLInternalPerformMigration", "event":%{public, location:escape_only}s}
CL: CLGetStatusBarIconState
{"msg%{public}.0s":"CLGetStatusBarIconState", "event":%{public, location:escape_only}s}
CLStatusBarIconState received an icon stateu of %d
CL: CLSetMapMatchingRouteHint
{"msg%{public}.0s":"CLSetMapMatchingRouteHint", "event":%{public, location:escape_only}s}
RouteHints,CLSetRouteHintsForMapMatching,received,%lu,routeType,%d,stepType,%d
CL: CLSetRouteHintsForMapMatching
{"msg%{public}.0s":"CLSetRouteHintsForMapMatching", "event":%{public, location:escape_only}s}
RouteHints,CLSetRouteHintsForMapMatching,received,%lu,routeType,%d
CLGetAccessoryTypeBitSet
CL: CLInternalSetTemporaryAuthorizationGranted
{"msg%{public}.0s":"CLInternalSetTemporaryAuthorizationGranted", "event":%{public, location:escape_only}s}
CL: CLInternalSetAuthorizationStatusByType
{"msg%{public}.0s":"CLInternalSetAuthorizationStatusByType", "event":%{public, location:escape_only}s}
CL: CLInternalSetIncidentalUseMode
{"msg%{public}.0s":"CLInternalSetIncidentalUseMode", "event":%{public, location:escape_only}s}
{"msg%{public}.0s":"Could not serialize _CLARSessionState"}
{"msg%{public}.0s":"Do not use CLPlaceMark when GeoServices is missing", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"transmitPower: invalid range of transmit power", "transmitPower_dBm":"%{public}.6f", "min.TransmitPower_dBm":"%{public}.6f", "max.TransmitPower_dBm":"%{public}.6f"}
[%{public}@] Location Push Service extension context initialized
[%{public}@] didReceiveLocationPushPayload:reply:
[%{public}@] Location Push Service extension time will expire
[%{public}@] Cleaning up extension
number of vertices (%{public}lu) mustn't exceed %{public}lu
number of vertices (%{public}lu) must be greater or equal than %{public}lu
monitoring requires a valid connected polygon where first and last coordinates are the same
All vertices, except for the first and last equals, have to be unique
CLHarvester invalidation handler
CLHarvester interruption handler
CLHarvester synchronous remote proxy invalidated
CLHarvester fetchState reply block called
{"msg%{public}.0s":"Could not serialize _CLVIOEstimation", "error":%{public, location:escape_only}@}
{"msg%{public}.0s":"Subclass should have overriden this", "class":%{public, location:escape_only}s, "SEL":%{public, location:escape_only}s}
{"msg%{public}.0s":"Dictionary utilites reported the arrow is in max state?!", "clientRecord":%{public, location:escape_only}@}
informing client -- did retreive personalization info for device: %s - %s with info: %@
informing client -- firmware update for device: %s - %s
informing client -- use local asset request for product group: %s, product number: %s - %s
informing client -- use default asset request for product group: %s, product number: %s - %s
informing client -- local firmware asset is %s for product group: %s, product number: %s
CLFindMyAccessoryFirmwareUpdateManager - Unknown Message - ignoring
getPersonalizationInfoForDevice: %@
updateFirmwareForDevice for device: %@ with assetURL: %@
abortFirmwareUpdateForDevice: %@
useLocalFirmwareAssetFromURL: %@ forProductGroup: %@ forPorductNumber: %@ withSandboxExtension: %@
useDefaultFirmwareAssetSourceForProductGroup: %@ forPorductNumber: %@
fetchWhetherLocalFirmwareAssetIsInUseForProductGroup: %@ forPorductNumber: %@
#Warning refAlt < %.1lf,refAlt,%.1lf,using the min
#Warning refAlt > %.1lf,refAlt,%.1lf,using the max
LowPower not supported for this object/platform
Conservative not supported for this object/platform
{"msg%{public}.0s":"Requesting new assertion", "messageDictionary":%{public, location:escape_only}@}
CLClientRef CLClientAllocate(CFAllocatorRef, CLClientCallback, const CLClientContext *)
CoreLocation: non-matching retain (%p) and release (%p) functions in context, ignoring
CoreLocation: Failed to initilize fHeadingCalibrationDisplayMutex, error code: %{public}d
com.apple.CoreLocation.%p
UIApplicationWillResignActiveNotification
UIApplicationDidBecomeActiveNotification
v8@?0
activity
CLClient-runloop
UIBackgroundModes
location
assert
client->fInvalidated
%s:%d: assertion failure in %s
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Framework/CLClient.mm
_CLClientDestroy
!client->fContext.info
<CLClient %p [%p]>
CLClient
void CLClientInvokeCallback(CLClientRef, CLClientEvent, id)
CoreLocation: Location callback block not executed in a timely manner!
CoreLocation: Discarding message for event %{private}d because of too many unprocessed messages
void CLClientHandleWillResignActiveNotification(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)
CoreLocation: received client will resign active notification
void CLClientHandleDidBecomeActiveNotification(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)_block_invoke
CoreLocation: received client did become active notification
kCLConnectionMessagePurposeKey
kCLConnectionMessagePurpose
void CLClientRequestAuthorization(CLClientRef, CLClientAuthorizationStatus)
CoreLocation: Missing UsageDescription key for requested authorization: %{public}d
CoreLocation: Invalid requested authorization: %{public}d
kCLConnectionMessageStatusKey
kCLConnectionMessageRequestAuthorization
kCLConnectionMessagePurposeIdentifierKey
kCLConnectionMessagePurposeKey
kCLConnectionMessageRequestTemporaryPrecise
kCLConnectionMessageErrorKey
v24@?0{shared_ptr<CLConnectionMessage>=^{CLConnectionMessage}^{__shared_weak_count}}8
kCLConnectionMessageSubscribeKey
kCLConnectionMessageLocationPush
kCLConnectionMessagePushTokenKey
kCLConnectionMessageSubscribeKey
Boolean CLClientIsLocationServicesEnabled(CLClientRef)
CoreLocation: #Warning CLInternalGetLocationServicesEnabled failed: could not reach daemon
Boolean CLClientIsAuthorizationPromptMapDisplayEnabled()
CoreLocation: #Warning CLInternalGetAuthorizationPromptMapDisplayEnabled failed: could not reach daemon
mach-lookup
com.apple.locationd.registration
CLClientShutdownDaemon
Boolean CLClientShutdownDaemon(CLClientRef)
CoreLocation: CLClient is deprecated. Will be obsolete soon. (%{public}s)
CLClientLogDump
Boolean CLClientLogDump(CLClientRef, const char *, Boolean)
kCLConnectionMessageDesiredAccuracyKey
kCLConnectionMessageDistanceFilterKey
kCLConnectionMessageDynamicAccuracyReductionKey
kCLConnectionMessageAlteredAccessoryLocationsKey
kCLConnectionMessageLocation
kCLConnectionMessageEnabledKey
kCLConnectionMessageIsActuallyAWatchKitExtension
kCLConnectionMessageProxyForRemoteClient
kCLConnectionMessageHeadingFilterKey
kCLConnectionMessageHeading
Boolean CLClientShowHeadingCalibration(CLClientRef, Boolean)
CoreLocation: Application inactive, will not show heading calibration
kCLConnectionMessageSLCDistanceKey
kCLConnectionMessageSLCPowerBudgetKey
kCLConnectionMessageSignificantLocationChange
kCLConnectionMessagePlaceInferenceFidelityPolicyKey
kCLConnectionMessagePlaceInference
kCLConnectionMessagePlaceInferenceStopKey
kCLConnectionMessagePlaceInferenceStop
kCLConnectionMessageSignificantLocationVisitTypeKey
kCLConnectionMessageSignificantLocationVisit
kCLConnectionMessageSignificantLocationVisitState
kCLConnectionMessageRegionMonitoring
Boolean CLClientRequestRegionState(CLClientRef, CLRegion *)
CoreLocation: Fence: CLClientRequestRegionState, unsupported fence type, %{private}d
kCLConnectionMessageRegionState
kCLConnectionMessageBeaconRegionKey
kCLConnectionMessageCircularRegionKey
kCLConnectionMessageRangingPeersKey
kCLConnectionMessageRangingPeerTimeoutKey
kCLConnectionMessageRangingPeerInitiatorKey
kCLConnectionMessagePeerRanging
IsFitnessMatch
kCLConnectionMessageNameKey
kCLConnectionMessageOnBehalfOfKey
kCLConnectionMessageDeviceIDKey
kCLConnectionMessageHandoffTagKey
kCLConnectionMessageRegionTypeKey
kCLConnectionMessageNotifyOnEntryKey
kCLConnectionMessageNotifyOnExitKey
kCLConnectionMessageConservativeEntry
kCLConnectionMessageEmergencyKey
kCLConnectionMessageReferenceFrameKey
kCLConnectionMessageMonitoringNearby
kCLConnectionMessageLowPowerFenceKey
kCLConnectionMessageLatitudeKey
kCLConnectionMessageLongitudeKey
kCLConnectionMessageRadiusKey
kCLConnectionMessagePolygonalVerticesCountKey
Boolean CLClientPopulateRegionFromInfo(CLRegion **, CFDictionaryRef)
CoreLocation: Number of vertices received doesn't match stored, %{public}d, %{public}lu
CoreLocation: Number of vertices received invalid, %{public}d, internal
CoreLocation: Copied %{private}d vertices
kCLConnectionMessageNotifyEntryStateOnDisplayKey
kCLConnectionMessageProximityUUIDKey
kCLConnectionMessageMajorKey
kCLConnectionMessageMinorKey
kCLConnectionMessageRegionDefinitionKey
kCLConnectionMessageEventKey
kCLConnectionMessageErrorKey
kCLConnectionMessageAlternateRegionKey
kCLConnectionMessageRegionWatchdogSinceLast
kCLConnectionMessageIdentifierKey
kCLConnectionMessageRegionsKey
kCLConnectionMessageRanging
kCLConnectionMessageBeaconsKey
kCLConnectionMessageCompensationKey
kCLConnectionMessageAuthorizedForWidgetUpdatesKey
kCLConnectionMessageMatchInfoEnabled
kCLConnectionMessageGroundAltitudeEnabled
kCLConnectionMessageFusionInfoEnabled
kCLConnectionMessageAllowsLocationPrompts
kCLConnectionMessageShowLocationPrompt
kCLConnectionMessageMarkAsHavingReceivedLocation
void CLClientSetAutomaticPromptingEnabled(CLClientRef, Boolean)
CoreLocation: kCLConnectionMessageAutomaticPromptingEnabled is not supported
kCLConnectionMessageARSessionState
kCLConnectionMessageVIOEstimation
kCLConnectionMessageVLLocalizationResult
kCLConnectionMessageActivityTypeKey
kCLConnectionMessageActivityType
kCLConnectionMessagePausesLocationUpdatesAutomaticallyKey
kCLConnectionMessagePausesLocationUpdatesAutomatically
Boolean CLClientGetAutopauseState(CFDictionaryRef, Boolean *, Boolean *)
CoreLocation: Invalid call to CLClientGetAutopauseState
kCLConnectionMessageAutopauseStatusKey
kCLConnectionMessageAutopauseOverrideKey
CoreLocation: malformed message: kCLConnectionMessageAutopauseStatus
kCLConnectionMessageAllowsBackgroundLocationUpdatesKey
kCLConnectionMessageAllowsBackgroundLocationUpdates
kCLConnectionMessageShowsBackgroundLocationIndicatorKey
kCLConnectionMessageShowsBackgroundLocationIndicator
kCLConnectionMessageBatchAllowedKey
kCLConnectionMessageBatchDistanceKey
kCLConnectionMessageBatchTimeoutKey
kCLConnectionMessageBatch
kCLConnectionMessageAllowsMapCorrectionKey
kCLConnectionMessageAllowsMapCorrection
kCLConnectionMessageRegisterAsLocationClient
kCLConnectionMessageVehicleSpeedKey
kCLConnectionMessageVehicleHeadingKey
kCLConnectionMessageVehicleSpeed
kCLConnectionMessageVehicleHeading
kCLConnectionMessageRequestMicroLocation
kCLConnectionMessageRequestMicroLocationRecordingScan
kCLConnectionMessageMicroLocationTruthLabelKey
kCLConnectionMessageMicroLocationRecordingTriggerUuidKey
kCLConnectionMessageMicroLocationDonateTruthLabelEvent
kCLConnectionMessagePurgeMicroLocationSemiSupervisedData
kCLConnectionMessageFetchEstimatedLocationDateKey
kCLConnectionMessageFetchEstimatedLocationAtDate
kCLConnectionMessageFetchEstimatedLocationLocationKey
com.apple.locationd.Core
Client
Generic
ClientsCohortWorkLoop
kCLConnectionMessageCompensatedLocation
kCLClientEventKey
void _CLClientHandleMessage(CLClientRef, std::shared_ptr<CLConnectionMessage>)
CoreLocation: Got unhandled message %s from daemon
LocationManager/kCLConnectionMessageRegistration
kCLConnectionMessageError
kCLConnectionMessageLocationUnavailable
kCLConnectionMessageRegionMonitoringError
kCLConnectionMessageRangingError
kCLConnectionMessageRegionMonitoringResponseDelayed
kCLConnectionMessageRegionMonitoringSetupCompleted
kCLConnectionMessageAuthorizationStatus
kCLConnectionMessageAutopauseStatus
kCLConnectionMessagePeerRangingRequestProcessed
kCLConnectionMessagePeerRangingError
kCLConnectionMessagePlaceInferenceResult
kCLConnectionMessagePlaceInferenceError
kCLConnectionMessageRegionMonitoringNoLocationWatchdog
kCLConnectionMessageHeadingDataKey
kCLConnectionMessageBundleIdentifierKey
kCLConnectionMessageBundlePathKey
kCLConnectionMessageClientSDKKey
kCLConnectionMessagePolygonalVerticesKey
CLLocationManagerRoutine.m
Invalid parameter not satisfying: %@
queue
locationManagerRoutine
com.apple.locationd.routine
v8@?0
Connection Interrupted, serviceName, %@
Connection Invalidated, serviceName %@
_CLLocationManagerRoutineProxy, %p
delegate must respond to selector locationManager:didUpdateLocations:
Routine
EmergencyEnablementAssertion/kCLConnectionMessage
CLFindMyAccessoryConnectionMaterial.m
[otherMaterial isKindOfClass:[CLFindMyAccessoryConnectionMaterial class]]
CLFindMyAccessoryConnectionMaterial <%p>, PrimaryIndex: %@, SecondaryIndex:%@, Address:%@, LTK:%@
address
primaryIndex
secondaryIndex
%02X:%02X:%02X:%02X:%02X:%02X
%02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X
!_inTransaction
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Framework/CoreLocation/CLLocationManager.m
-[CLLocationManagerStateTracker initWithQueue:identifier:state:]
state_transition
LocationManager
init
lifecycle
distanceFilter
desiredAccuracy
updatingLocation
requestingLocation
requestingRanging
updatingRanging
updatingHeading
headingFilter
allowsLocationPrompts
allowsAlteredAccessoryLocations
dynamicAccuracyReductionEnabled
previousAuthorizationStatusValid
previousAuthorizationStatus
limitsPrecision
activityType
pausesLocationUpdatesAutomatically
paused
allowsBackgroundLocationUpdates
showsBackgroundLocationIndicator
allowsMapCorrection
batchingLocation
updatingVehicleSpeed
updatingVehicleHeading
matchInfoEnabled
groundAltitudeEnabled
fusionInfoEnabled
courtesyPromptNeeded
isAuthorizedForWidgetUpdates
-[CLLocationManagerStateTracker updateState:]
allStates
_CLLocationManagerStateTrackerState
v16@?0@"CLLocationManagerStateTracker"8
-[CLLocationManagerInternal hasLingeringRangingRequest]
CoreLocation: #Warning Has lingering peer ranging request
CLLocationManager-runloop
-[CLLocationManager initWithEffectiveBundleIdentifier:]
CoreLocation: initializing CLLocationManager with a nil identifier
-[CLLocationManager initWithEffectiveBundleIdentifier:delegate:onQueue:]
delegate && queue
-[CLLocationManager initWithEffectiveBundle:]
CoreLocation: initializing CLLocationManager with a nil bundle
-[CLLocationManager initWithEffectiveBundle:delegate:onQueue:]
-[CLLocationManager initWithEffectiveBundle:limitingBundleIdentifier:delegate:onQueue:]
CoreLocation: initializing CLLocationManager with a nil limiting identifier
-[CLLocationManager _initWithDelegate:onQueue:]
CLLocationManager.m
Non-UI clients cannot be autopaused
!stayUp || CLClientIsBackgroundable(internal->fClient) || _CFMZEnabled()
-[CLLocationManager setSupportInfo:]
CoreLocation: Obsolete
-[CLLocationManager setActivityType:]
CoreLocation: Client,%s,setActivityType,%ld
com.apple.Maps
com.apple.NanoMaps
CoreLocation: Client,%s,setActivityType,allowing map correction
-[CLLocationManager startUpdatingLocation]
CoreLocation: Canceling requestLocation
Delegate must respond to locationManager:didUpdateLocations:
Delegate must respond to locationManager:didFailWithError:
-[CLLocationManager requestLocation]
CoreLocation: Ignoring requestLocation due to ongoing location.
-[CLLocationManager allowDeferredLocationUpdatesUntilTraveled:timeout:]
CoreLocation: Canceling requestLocation.
Application must support the location background mode (in app's Info.plist, {UIBackgroundModes=(location);}
-[CLLocationManager heading]
CoreLocation: heading, %{private}s
-[CLLocationManager startUpdatingHeading]
CoreLocation: Start updating heading. HeadingFilter, %{public}.2f
-[CLLocationManager stopUpdatingHeading]
CoreLocation: Stop updating heading
-[CLLocationManager dismissHeadingCalibrationDisplay]
CoreLocation: Dismissing Compass Calibration HUD
-[CLLocationManager startMonitoringForRegion:]
CoreLocation: Number of vertices %{public}lu
constraint
constraint != nil
-[CLLocationManager requestRangingToPeers:timeoutSeconds:]
CoreLocation: WRTT: received requestRangingToPeers, timeout, %{public}lf
peers != nil
peers.count > 0
timeout > 0.0
timeout < kCLPeerRangingRequestTimeoutSecondsMax
Delegate must respond to locationManager:didRangePeers:
Delegate must respond to locationManager:rangingDidFailForPeer:withError:
CoreLocation: #Warning Ignoring requestRangingToPeers due to ongoing ranging
-[CLLocationManager respondToRangingFromPeers:timeoutSeconds:]
CoreLocation: WRTT: received respondToRangingFromPeers, timeout, %{public}lf
CoreLocation: #Warning Ignoring respondToRangingFromPeers due to ongoing ranging.
-[CLLocationManager startRangingToPeers:intervalSeconds:]
CoreLocation: WRTT: received startRangingToPeers, interval, %{public}lu
CoreLocation: #Warning Ignoring startRangingToPeers due to ongoing ranging
-[CLLocationManager stopRangingToPeers:]
CoreLocation: WRTT: received stopRangingToPeers
-[CLLocationManager startRangingFromPeers:]
CoreLocation: WRTT: received startRangingFromPeers
CoreLocation: #Warning Ignoring startRangingFromPeers due to ongoing ranging
-[CLLocationManager stopRangingFromPeers:]
CoreLocation: WRTT: received stopRangingFromPeers
ForceMapMatching
-[CLLocationManager onClientEventAuthStatus:]
CoreLocation: could not get updated authorization status
-[CLLocationManager onClientEventLocation:forceMapMatching:type:]
CoreLocation: Location event received with empty payload
CoreLocation: New location is identical to old location; discarding
CoreLocation: New location predates old location, and the event types differ; discarding
-[CLLocationManager onClientEventHeading:]
CoreLocation: could not get updated heading
-[CLLocationManager onClientEventHeadingCalibration:]
CoreLocation: CL: Invoking Compass Calibration HUD
CoreLocation: Could not show heading calibration
-[CLLocationManager onClientEventPlaceInferenceResult:]
CoreLocation: in onClientEventPlaceInferenceResult for CLPlaceInferenceSubscription
kCLConnectionMessagePlaceInferencePlaceInferenceKey
kCLConnectionMessagePlaceInferencePlaceInferenceFallbackLocationKey
v24@?0@"NSArray"8@"NSError"16
-[CLLocationManager onClientEventPlaceInferenceError:]
CoreLocation: in onClientEventPlaceInferenceError for CLPlaceInferenceSubscription
-[CLLocationManager onClientEventError:]
CoreLocation: could not get error
-[CLLocationManager onClientEventRegion:]
CoreLocation: could not get region monitoring event
-[CLLocationManager onClientEventRegionState:]
CoreLocation: could not get the region state
-[CLLocationManager onClientEventRegionError:]
-[CLLocationManager onClientEventRanging:]
CoreLocation: could not get ranged beacons
-[CLLocationManager onClientEventRanging:]_block_invoke
CoreLocation: Client beacon is invalid (count,%lu).
v32@?0@8Q16^B24
proximity
accuracy
-[CLLocationManager onClientEventRangingError:]
CoreLocation: could not get ranging error
-[CLLocationManager onClientEventPeerRanging:]
CoreLocation: WRTT: received onClientEventPeerRanging
-[CLLocationManager onClientEventPeerRangingRequestProcessed:]
CoreLocation: WRTT: received onClientEventPeerRangingRequestProcessed
-[CLLocationManager onClientEventPeerRangingError:]
CoreLocation: WRTT: received onClientEventPeerRangingError
kCLConnectionMessageErrorsKey
[peers count] == [errors count]
-[CLLocationManager onClientEventRegionResponseDelayed:]
-[CLLocationManager onClientEventNoLocationWatchdog:]
CoreLocation: could not get updated paused state
-[CLLocationManager onClientEventRegionSetupCompleted:]
-[CLLocationManager onClientEventAutopauseStatus:]
-[CLLocationManager onClientEventBatch:]
CoreLocation: could not get batch result
success
CoreLocation: Finished deferred updates: %s
-[CLLocationManager onClientEventVehicleSpeed:]
CoreLocation: could not get updated vehicle speed
-[CLLocationManager onClientEventVehicleHeading:]
CoreLocation: could not get updated vehicle heading
kCLConnectionMessageSignificantLocationVisitKey
kCLConnectionMessageSignificantLocationVisitStateKey
handler
+[CLLocationManager dumpDiagnosticFilesWithHandler:]
CoreLocation: dumpDiagnosticFiles called, trying to make an xpc call
com.apple.locationd.diagnostic
+[CLLocationManager dumpDiagnosticFilesWithHandler:]_block_invoke
CoreLocation: #diagnosticManager failed to get remoteObjectProxy with error %@
v16@?0@"NSError"8
CoreLocation: #diagnosticManager error copying files: %@
-[CLLocationManager(VehicleData) startUpdatingVehicleSpeed]
CoreLocation: Start updating vehicle speed
-[CLLocationManager(VehicleData) stopUpdatingVehicleSpeed]
CoreLocation: Stop updating vehicle speed
-[CLLocationManager(VehicleData) startUpdatingVehicleHeading]
CoreLocation: Start updating vehicle heading
-[CLLocationManager(VehicleData) stopUpdatingVehicleHeading]
CoreLocation: Stop updating vehicle heading
-[CLLocationManager(CLVisitExtensions) _requestVisitState]
CoreLocation: #slv: Request visit state
-[CLLocationManager(_CLPlaceInferenceExtensions) _startPlaceInferencesCommonLogic:handler:]
CoreLocation: Setup PlaceInferences common logic
placeInferenceHandler
-[CLLocationManager(_CLPlaceInferenceExtensions) _fetchPlaceInferencesWithFidelityPolicy:handler:]
CoreLocation: Start oneshot PlaceInferences
-[CLLocationManager(_CLPlaceInferenceExtensions) _fetchContinuousPlaceInferencesWithFidelityPolicy:handler:]_block_invoke
CoreLocation: Start continuous PlaceInferences
-[CLLocationManager(_CLPlaceInferenceExtensions) _stopFetchingContinuousPlaceInferences]
CoreLocation: Stop continuous PlaceInferences
Core
NSExtension
NSExtensionPointIdentifier
com.apple.widgetkit-extension
void verifyWidgetKitExtension()
CoreLocation: Widget has NSWidgetWantsLocation key in its Info.plist
com.apple.locationd.Position
Proximity
Microlocation
LocationCount
Locations
LocationsPrivate
CoarseMetaData
NSArray *copyArrayFromPayload(NSDictionary *)
CoreLocation: Encoded coarse meta data found
CoreLocation: CLLocationManager should not get multile locations with coarseMetaData
ERROR
WARNING
STATUS
INFO
VERBOSE
NONE
com.apple.locationd
com.apple.locationd.DumpDiagnostics
NSLocationUsageDescription
NSLocationAlwaysUsageDescription
NSLocationWhenInUseUsageDescription
NSLocationAlwaysAndWhenInUseUsageDescription
NSLocationTemporaryUsageDescriptionDictionary
NSLocationDefaultAccuracyReduced
NSLocationInterestZones
NSWidgetWantsLocation
WKWatchOnly
WKRunsIndependentlyOfCompanionApp
void CLCommonSetRunLoop(CFRunLoopRef)
CoreLocation: #Warning Changing CLCommon's runloop after it was already established
CoreLocation: #Warning Setting CLCommon's runloop after it was already established
CoreLocation: CLCommonSetRunLoop, %p
mobile
int CLCommonCopyFile(const char *, const char *)
CoreLocation: cannot open source file: %{public}s, errno %{public}d
CoreLocation: cannot open target file: %{public}s, errno %{public}d
CoreLocation: error reading source file: %{public}s
CoreLocation: error writing target file: %{public}s
int CLCommonBzipFile(const char *, const char *)
CoreLocation: cannot open compression stream: %{public}s, bzerror %{public}d
CoreLocation: error writing target file: %{public}s, bzerror: %{public}d
CoreLocation: error closing target file: %{public}s, bzerror: %{public}d
compress:%@
%.1f
Boolean CLCommonCompareLocationEqualityClientWithTimeCheck(const CLClientLocation *, const CLClientLocation *, bool)
CoreLocation: CLCommonCompareLocationEqualityClient compared two coordinates that were identical other than their reference frames: (%lf, %lf, %d) (%lf, %lf, %d)
/System/Library/LocationBundles/LocationPromptUI.bundle
/System/Library/LocationBundles/LocationFenceSync.bundle
/System/Library/LocationBundles/PLAMonitor.bundle
CLBundleKeyValueCache::instance()->isSystemService(bundlePath)
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Shared/Utilities/CLCommon.mm
CLCommonIsBundleLocationdInternalSystemService
com.apple.locationd.Legacy
Generic_deprecated
CLAutoOSTransaction::CLAutoOSTransaction(const char *, CLAutoOSTransaction::LoggingPolicy)
CoreLocation: os_transaction created: (%p) %@
com.apple.locationd.Utility
CLAutoOSTransaction::~CLAutoOSTransaction()
CoreLocation: os_transaction releasing: (%p) %@
__TEXT
Binary Images:
other
armv6
armv7
unknown
%16p - %lld %c%s %s <
%02X
> %s
Utility
+[_CLPlaceInference(_CLRoutineExtensions) _userSpecificPlaceTypeFromRTUserType:]
CoreLocation: Please update userSpecificPlaceTypeFromRTUserType
+[_CLPlaceInference(_CLRoutineExtensions) _placeInferencePlaceTypeFromRTPlaceType:]
CoreLocation: Please update placeInferencePlaceTypeFromRTPlaceType
kCLLocationCodingKeyGroundAltitudeEstimate
kCLLocationCodingKeyGroundAltitudeUncertainty
kCLLocationCodingKeyGroundAltitudeUndulation
kCLLocationCodingKeyGroundAltitudeUndulationModel
_CLLocationSmootherProxy, %p
com.apple.locationd.smoother
CLSmootherErrorDomain
sampleCount
threshold
sampleRate
sleepDuration
com.apple.locationd.registration
NULL
CLGnssDisablementAssertionInternal::CLGnssDisablementAssertionInternal(dispatch_queue_t, const char *, NSDictionary *, CLGnssDisablementAssertionCallback)
CoreLocation: #clgda,client,CLGnssDisablementAssertionInternal,name,%s,dict,%@
v24@?0{shared_ptr<CLConnectionMessage>=^{CLConnectionMessage}^{__shared_weak_count}}8
CLGnssDisablementAssertionInternal::CLGnssDisablementAssertionInternal(dispatch_queue_t, const char *, NSDictionary *, CLGnssDisablementAssertionCallback)_block_invoke
CoreLocation: #clgda,client,#warning,unexpected message,%s
CoreLocation: #clgda,client,message,%s
CoreLocation: #clgda,#warning,client,noRegisteredCallback
kCLConnectionMessageGnssDisablementAssertRsp
CLGnssDisablementAssertionInternal::~CLGnssDisablementAssertionInternal()
CoreLocation: #clgda,client,~CLGnssDisablementAssertionInternal()
kCLConnectionMessageGnssDisablementAssertReq
+[CLGnssDisablementAssertion newAssertionForBundleIdentifier:withReason:callbackQueue:completionHandler:]
CoreLocation: #clgda,client,newAssertionForBundleIdentifier
+[CLGnssDisablementAssertion newAssertionForBundle:withReason:callbackQueue:completionHandler:]
CoreLocation: #clgda,client,newAssertionForBundle
kCLLocationMatchInfoCodingKeyMatchQuality
kCLLocationMatchInfoCodingKeyMatchCoordinateLatitude
kCLLocationMatchInfoCodingKeyMatchCoordinateLongitude
kCLLocationMatchInfoCodingKeyMatchCourse
kCLLocationMatchInfoCodingKeyMatchFormOfWay
kCLLocationMatchInfoCodingKeyMatchRoadClass
kCLLocationMatchInfoCodingKeyMatchShifted
kCLLocationMatchInfoCodingKeyMatchDataArray
matchQuality %ld matchCoordinate <%+.8f,%+.8f> matchCourse %.2f matchFormOfWay %d matchRoadClass %d matchShifted %d
%ld <%+.8f,%+.8f> %.2f %d %d %d
com.apple.findMyAccessoryRangingManager.privateQueue
-[CLFindMyAccessoryRangingManager handleMessage:]
CoreLocation: Got Reply: message: %s
DurianManagement/DidConnect
DurianManagement/DidDisconnect
Failed
Success
CoreLocation: informing client -- did connect to device: %s -  %s
CoreLocation: informing client -- did disconnect from device: %s -  %s
DurianManagement/DidFetchFirmwareVersion
DurianManagement/DidInitRose
DurianManagement/DidDeinitRose
DurianManagement/DidSetRoseRangeParameters
DurianManagement/DidStartRoseRanging
DurianManagement/DidCompleteRoseRanging
DurianManagement/DidReceiveRoseError
DurianManagement/DidReceiveRoseP2PTimestampData
DurianManagement/DidReceiveRoseP2PTimestampDebugData
DurianManagement/DeviceDidMove
DurianManagement/DidPrepareForStartRanging
DurianManagement/DidFailToChangeEventCounter
CoreLocation: Got a message we do not understand... dropping!
-[CLFindMyAccessoryRangingManager handleInterruption]
CoreLocation: Connection to locationd interrupted!!
Connection to locationd interrupted!
CLFindMyAccessoryRangingManager.mm
device
-[CLFindMyAccessoryRangingManager connectToDevice:]
CoreLocation: Connect to device: %@
-[CLFindMyAccessoryRangingManager disconnectFromDevice:]
CoreLocation: Disconnect from device: %@
-[CLFindMyAccessoryRangingManager initRoseWithParameters:onDevice:]
CoreLocation: Init Rose on device: %@
-[CLFindMyAccessoryRangingManager stopRoseWithParameters:onDevice:]
CoreLocation: Stop Rose on device: %@
parameters
-[CLFindMyAccessoryRangingManager setRoseRangingParameters:onDevice:]
CoreLocation: Set Rose Range Parameters on device: %@
-[CLFindMyAccessoryRangingManager prepareForStartRangingOnDevice:]
CoreLocation: Stop Rose Ranging on device: %@
-[CLFindMyAccessoryRangingManager startRangingWithParameters:onDevice:]
CoreLocation: Start Rose Ranging on device: %@
-[CLFindMyAccessoryRangingManager stopRangingOnDevice:]
-[CLFindMyAccessoryRangingManager startEventCounterOnDevice:]
-[CLFindMyAccessoryRangingManager stopEventCounterOnDevice:]
-[CLFindMyAccessoryRangingManager fetchFirmwareVersionFromDevice:]
CoreLocation: Fetch firmware from device: %@
DurianManagement/Connect
DurianManagement/Disconnect
DurianManagement/InitRose
DurianManagement/DeinitRose
DurianManagement/SetRoseRangeParameters
DurianManagement/PrepareForStartRanging
DurianManagement/StartRoseRanging
DurianManagement/StopRoseRanging
DurianManagement/StartEventCounter
DurianManagement/StopEventCounter
DurianManagement/FetchFirmwareVersion
private.HomeKit.accessory.accessoryUUID
private.HomeKit.accessory.serviceType
private.HomeKit.accessory.characteristicType
private.HomeKit.accessory.source
private.HomeKit.accessory.stateString
private.HomeKit.accessory.serviceUUID
private.HomeKit.accessory.serviceGroupUUID
private.HomeKit.accessory.roomUUID
private.HomeKit.scene.actionSetUUID
private.HomeKit.scene.actionSetName
private.HomeKit.scene.actionSetType
private.HomeKit.scene.clientName
private.HomeKit.scene.source
private.HomeKit.scene.homeName
private.MicroLocation.truthtag.identifier
private.MicroLocation.forced.recordingRequest
private.MicroLocation.recordingTriggerUUID
com.apple.DurianManagement.privateQueue
DurianManagement/DidFetchHawkeyeSerialNumber
DurianManagement/DidFetchHawkeyeCurrentPrimaryKey
DurianManagement/DidFetchHawkeyeiCloudIdentifier
Invalid response length
Response unavailable
-[CLFindMyAccessoryManager handleMessage:]
CoreLocation: #durian Got Reply: message: %s
DurianManagement/DidReceiveDataFragment
DurianManagement/DidFetchConnectionState
DurianManagement/DidStartPlayingSound
DurianManagement/DidCompletePlayingSound
DurianManagement/DidStopPlayingSound
DurianManagement/DidStartPlayingUnauthorizedSound
DurianManagement/DidCompletePlayingUnauthorizedSound
DurianManagement/DidStopPlayingUnauthorizedSound
DurianManagement/DidReceiveKeyRollIndex
DurianManagement/DidGetMultiStatus
DurianManagement/DidFetchBatteryStatus
DurianManagement/DidDetectCrash
DurianManagement/DidDumpLogs
DurianManagement/DidUnpair
DurianManagement/DidSetTagType
DurianManagement/DidSetObfuscatedIdentifier
DurianManagement/DidSetNearOwnerTimeout
DurianManagement/DidSetWildConfiguration
DurianManagement/DidFetchUserStats
DurianManagement/DidRollWildKey
DurianManagement/DidSetAccelerometerSlopeMode
DurianManagement/DidSetAccelerometerOrientationMode
DurianManagement/DidGetAccelerometerSlopeModeConfiguration
DurianManagement/DidGetAccelerometerMode
DurianManagement/DidSetUnauthorizedPlaySoundRateLimit
DurianManagement/DidCompleteHawkeyeTask
DurianManagement/DidSetHawkeyeUTMotionConfig
DurianManagement/DidFetchTxPower
DurianManagement/DidStartAggressiveAdvertising
DurianManagement/DidStopAggressiveAdvertising
DurianManagement/DidCompleteAggressiveAdvertising
DurianManagement/DidStartUnauthorizedAggressiveAdvertising
DurianManagement/DidFetchHawkeyeAISProductData
DurianManagement/DidFetchHawkeyeAISManufacturerName
DurianManagement/DidFetchHawkeyeAISModelName
DurianManagement/DidFetchHawkeyeAISModelColorCode
DurianManagement/DidFetchHawkeyeAISAccessoryCategory
DurianManagement/DidFetchHawkeyeAISAccessoryCapabilities
DurianManagement/DidFetchHawkeyeAISFindMyVersion
DurianManagement/DidFetchHawkeyeAISBatteryType
DurianManagement/DidObserveAdvertisement
DurianManagement/DidFetchCurrentScanParameters
CoreLocation: #durian Got a message we do not understand... dropping!
-[CLFindMyAccessoryManager handleInterruption]
CLFindMyAccessoryManager.mm
messageName
DurianManagement/FetchConnectionState
sequence
DurianManagement/StartSoundSequence
DurianManagement/StartUnauthorizedSound
DurianManagement/StopSound
DurianManagement/StopUnauthorizedSound
DurianManagement/GetMultiStatus
DurianManagement/DumpLogs
DurianManagement/InduceCrash
DurianManagement/Unpair
DurianManagement/SetNearOwnerTimeout
DurianManagement/SetTagType
DurianManagement/SetObfuscatedIdentifier
configuration
DurianManagement/SetWildConfiguration
DurianManagement/RollWildKey
DurianManagement/SetKeyRollInterval
DurianManagement/SetBatteryStatus
DurianManagement/FetchBatteryStatus
DurianManagement/FetchUserStats
DurianManagement/SetAccelerometerSlopeMode
DurianManagement/GetAccelerometerSlopeModeConfiguration
DurianManagement/SetAccelerometerOrientationMode
DurianManagement/GetAccelerometerOrientationModeConfiguration
DurianManagement/SetUnauthorizedPlaySoundRateLimit
DurianManagement/FetchTxPower
DurianManagement/StartAggressiveAdvertising
DurianManagement/StopAggressiveAdvertising
DurianManagement/StartUnauthorizedAggressiveAdvertising
DurianManagement/SetHawkeyeTestMode
DurianManagement/SetHawkeyeUTMotionConfig
DurianManagement/FetchHawkeyeAISProductData
DurianManagement/FetchHawkeyeAISManufacturerName
DurianManagement/FetchHawkeyeAISModelName
DurianManagement/FetchHawkeyeAISModelColorCode
DurianManagement/FetchHawkeyeAISAccessoryCategory
DurianManagement/FetchHawkeyeAISAccessoryCapabilities
DurianManagement/FetchHawkeyeAISFindMyVersion
DurianManagement/FetchHawkeyeAISBatteryType
DurianManagement/FetchHawkeyeSerialNumber
DurianManagement/FetchHawkeyeCurrentPrimaryKey
DurianManagement/FetchHawkeyeiCloudIdentifier
DurianManagement/StartMonitoringForAvengerAdvertisementsForBTFinding
DurianManagement/StopMonitoringForAvengerAdvertisementsForBTFinding
DurianManagement/ScanForNearOwner
DurianManagement/ScanForHELE
DurianManagement/ScanForNearbyDevicesLong
DurianManagement/StopScanForNearbyDevicesLong
DurianManagement/FetchCurrentScanParameters
void CLRegulatoryConfigInternal::addConfigForIso(std::string, NSDictionary *)
CoreLocation: #clreg,addConfigForIso,%s
void CLRegulatoryConfigInternal::addConfigForCircularRegion(CLCircularRegion *, NSDictionary *)
CoreLocation: #clreg,addConfigForCircularRegion,%.6f,%.6f,%.2f
void CLRegulatoryConfigInternal::addConfigForIsoList(CLRegulatoryIsoList, NSDictionary *)
CoreLocation: #clreg,#warning,addConfigForIsoList,invalidArgs,ignoring
CoreLocation: #clreg,#warning,addConfigForIsoList,emptyIso,ignoring
void CLRegulatoryConfigInternal::addConfigForCircularRegionList(CLRegulatoryCircularRegionList, NSDictionary *)
CoreLocation: #clreg,#warning,addConfigForCircularRegionList,invalidArgs,ignoring
CoreLocation: #clreg,#warning,addConfigForCircularRegionList,invalidRadius,ignoring
bool CLRegulatoryConfigInternal::fetchRAEConfig(CLLocation *, CLRegulatoryConfigCallback)
CoreLocation: #clreg,fetchRAEConfig,%{private}.6f,%{private}.6f,%{private}.2f,distToLocation,%{private}2.f,result,found
bool CLRegulatoryConfigInternal::fetchRAEConfig(CLLocation *, CLRegulatoryConfigCallback)_block_invoke
CoreLocation: #clreg,completionCallback,%{private}@,nil,nil
CoreLocation: #clreg,fetchRAEConfig,%{private}.6f,%{private}.6f,%{private}.2f,distToLocation,%{private}2.f,result,notFound
CoreLocation: #clreg,fetchRAEConfig,no RAEs matched
void CLRegulatoryConfigInternal::sendIsoConfig(NSString *, CLRegulatoryIsoList, CLRegulatoryConfigCallback)
CoreLocation: #clreg,completionCallback,default,nil,nil
CoreLocation: #clreg,completionCallback,%{private}@,%{private}@,nil
void CLRegulatoryConfigInternal::runMapsQuery(GEOLocation *, CLRegulatoryConfigInternal::MapsResultCallback)
CoreLocation: #clreg,#map,query,lla,%{private}.6f,lon,%{private}.6f,accuracy,%{private}.2f
void CLRegulatoryConfigInternal::runMapsQuery(GEOLocation *, CLRegulatoryConfigInternal::MapsResultCallback)_block_invoke
CoreLocation: #clreg,#map,response,#warning,error,%@
CoreLocation: #clreg,#map,response,#warning,results,Nil
CoreLocation: #clreg,#map,response,#warning,invalidResultEntry,ignoring
CoreLocation: #clreg,#map,response,disputed,first,%{private}s,interested,%@
CoreLocation: #clreg,#map,response,disputed,next,%{private}s,interested,%@
CoreLocation: #clreg,#map,response,nonDisputed,first,%{private}@
CoreLocation: #clreg,#map,response,nonDisputed,next,%{private}@
v24@?0@"NSSet"8@"NSError"16
void CLRegulatoryConfigInternal::fetchIsoOrDefaultConfig(CLLocation *, CLRegulatoryConfigCallback)
CoreLocation: #clreg,#warning,fetchIsoOrDefaultConfig,geoLocationAllocFailed
void CLRegulatoryConfigInternal::fetchIsoOrDefaultConfig(CLLocation *, CLRegulatoryConfigCallback)_block_invoke
CoreLocation: #clreg,cbLocation,iso,%{private}@,neighbors,%{private}@
v24@?0@"NSString"8@"NSMutableSet"16
CoreLocation: #clreg,cbExtendedLocation,iso,%{private}@,neighbors,%{private}@
CoreLocation: #clreg,cbWrapper,isoActual,%{private}@,neighborsWithinLocation,%{private}@,extendedNeighbors,%{private}@
void CLRegulatoryConfigInternal::fetchConfigForLocation(CLLocation *, CLRegulatoryConfigCallback)
CoreLocation: #clreg,fetchConfigForLocation,#warning,location is nil
CoreLocation: #clreg,fetchConfigForLocation,%{private}.6f,%{private}.6f,%{private}.2f
CoreLocation: #clreg,fetchConfigForLocation,#warning,invalidAccuracy
const CLRegulatoryConfigInternal::CircularZoneConfig *CLRegulatoryConfigInternal::findRAEConfig(CLLocation *)
CoreLocation: #clreg,findRAEConfig,%{private}.6f,%{private}.6f,%{private}.2f,distToLocation,%{private}2.f,result,found
CoreLocation: #clreg,findRAEConfig,%{private}.6f,%{private}.6f,%{private}.2f,distToLocation,%{private}2.f,result,notFound
CoreLocation: #clreg,findRAEConfig,no RAEs matched
kCLRegRegionTypeKey
kCLRegRegionTypeDefault
void CLRegulatoryConfigInternal::sendRaeInfoAsync(NSDictionary *, CLRegulatoryInfoCallback)_block_invoke
kCLRegRegionTypeRae
void CLRegulatoryConfigInternal::sendIsoInfoSync(CLRegulatoryRegion, CLRegulatoryRegionMutableList, CLRegulatoryInfoCallback)
CoreLocation: sendIsoInfoSync,region,%{private}@,neighbors,%{private}@
void CLRegulatoryConfigInternal::sendIsoInfoSync(CLRegulatoryRegion, CLRegulatoryRegionMutableList, CLRegulatoryInfoCallback)_block_invoke
CoreLocation: #clreg,invalidRegionType
kCLRegNameKey
kCLRegGeoRegionMatchedKey
kCLRegNeighborsKey
v24@?0@"NSString"8@"NSDictionary"16
kCLRegRegionTypeGeo
void CLRegulatoryConfigInternal::runMapInfoQuery(GEOLocation *, CLRegulatoryConfigInternal::MapsInfoReply)
void CLRegulatoryConfigInternal::runMapInfoQuery(GEOLocation *, CLRegulatoryConfigInternal::MapsInfoReply)_block_invoke
CoreLocation: #clreg,#map,response,lla,%{private}.6f,lon,%{private}.6f,accuracy,%{private}.2f,results,%{private}@
kCLGEOTerritoryInfoKey
%llX
void CLRegulatoryConfigInternal::appendNeighbor(CLRegulatoryRegionMutableList, CLRegulatoryRegion, NSString *)
CoreLocation: Invalid neighbor or excludeRegionName,%{private}@,%{private}@
void CLRegulatoryConfigInternal::sendIsoOrDefaultInfo(CLLocation *, CLRegulatoryInfoCallback)
v24@?0@"NSDictionary"8@"NSMutableSet"16
void CLRegulatoryConfigInternal::fetchInfoForLocation(CLLocation *, CLRegulatoryInfoCallback)
CoreLocation: #clreg,fetchInfoForLocation,#warning,location is nil
CoreLocation: #clreg,fetchInfoForLocation,%{private}.6f,%{private}.6f,%{private}.2f
CoreLocation: #clreg,fetchInfoForLocation,#warning,invalidAccuracy
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
UIApplication
static bool CLNameValuePair::encodeBase64(const void *, unsigned long, std::string &)
CoreLocation: processed %p %d to (%s)
CLNameValuePair::CLNameValuePair()
CoreLocation: could not create new mutable dictionary
CLNameValuePair::CLNameValuePair(CFDictionaryRef)
Memory
bool CLNameValuePair::writeDataToFile(const char *, CFDataRef, CLNameValuePair::CLNVPDataProtection) const
CoreLocation: Could not create NSURL for file: %{public}s
CoreLocation: Could not write data to disk %{public}s, %{public}s
virtual bool CLNameValuePair::saveToFile(const char *) const
CoreLocation: Could not serialize data for file %{public}s
CLNameValuePair.SaveToBinaryFile
virtual void CLNameValuePair::clearInternal(const CFStringRef, int)
CoreLocation: key %{public}s does not have element %{public}d in array of size %{public}ld
CoreLocation: key %{public}s does not have element %{public}d in non-array type %{public}lu
virtual bool CLNameValuePair::get(CFStringRef, bool &, int) const
CoreLocation: Unsupported type at %@:%@ (domain:key)
virtual bool CLNameValuePair::get(CFStringRef, uint16_t &, int) const
virtual bool CLNameValuePair::get(CFStringRef, short &, int) const
virtual bool CLNameValuePair::get(CFStringRef, uint32_t &, int) const
virtual bool CLNameValuePair::get(CFStringRef, int64_t &, int) const
virtual bool CLNameValuePair::get(CFStringRef, int &, int) const
virtual bool CLNameValuePair::get(CFStringRef, long &, int) const
virtual bool CLNameValuePair::get(CFStringRef, double &, int) const
virtual bool CLNameValuePair::get(CFStringRef, CLNameValuePair &, int) const
virtual bool CLNameValuePair::get(CFStringRef, std::string &, int) const
virtual bool CLNameValuePair::get(CFStringRef, CFArrayRef &) const
CoreLocation: type IDs do not match for key %{public}s - %{public}lu vs %{public}lu
virtual bool CLNameValuePair::get(CFStringRef, CFDataRef &, int) const
virtual bool CLNameValuePair::get(CFStringRef, CFStringRef &, int) const
virtual bool CLNameValuePair::get(CFStringRef, const char *&, unsigned int &, int) const
virtual bool CLNameValuePair::copyInternal(CFStringRef, CFTypeRef &, int) const
CoreLocation: specified index is out of range for key %{public}s (%{public}d of %{public}ld)
CoreLocation: specified index %{public}d not applicable to type %{public}lu for key %{public}s
virtual bool CLNameValuePair::set(CFStringRef, const bool &)
CoreLocation: could not create cf type for key %{public}s
virtual bool CLNameValuePair::set(CFStringRef, const uint16_t &)
virtual bool CLNameValuePair::set(CFStringRef, const short &)
virtual bool CLNameValuePair::set(CFStringRef, const uint32_t &)
virtual bool CLNameValuePair::set(CFStringRef, const int64_t &)
virtual bool CLNameValuePair::set(CFStringRef, const int &)
virtual bool CLNameValuePair::set(CFStringRef, const long &)
virtual bool CLNameValuePair::set(CFStringRef, const double &)
virtual bool CLNameValuePair::set(CFStringRef, const char *)
virtual bool CLNameValuePair::set(CFStringRef, const CLNameValuePair &)
virtual bool CLNameValuePair::insert(CFStringRef, const bool &)
virtual bool CLNameValuePair::insert(CFStringRef, const uint16_t &)
virtual bool CLNameValuePair::insert(CFStringRef, const short &)
virtual bool CLNameValuePair::insert(CFStringRef, const uint32_t &)
virtual bool CLNameValuePair::insert(CFStringRef, const int64_t &)
virtual bool CLNameValuePair::insert(CFStringRef, const int &)
virtual bool CLNameValuePair::insert(CFStringRef, const long &)
virtual bool CLNameValuePair::insert(CFStringRef, const double &)
virtual bool CLNameValuePair::insert(CFStringRef, const char *)
virtual bool CLNameValuePair::insert(CFStringRef, const CLNameValuePair &)
virtual bool CLNameValuePair::serializeBinary(CFDataRef *) const
CoreLocation: could not create write stream
CoreLocation: could not open write stream
unknown error
CoreLocation: could not write data, error code, %{public}ld, error domain, %{public}s
virtual bool CLNameValuePair::deserialize(const CFDataRef)
CoreLocation: could not create intermediate property list - %{public}ld (%{public}s)
virtual void CLNameValuePair::print() const
CoreLocation: %s
<empty>
static void CLNameValuePair::printKeyValue(const void *, const void *, void *)
CoreLocation: 
%s = <dictionary (%ld entries)>:
CoreLocation: 
%s = %s
CoreLocation: 
%s = %0.6f
CoreLocation: 
%s = %d
CoreLocation: 
%s = <unhandled value type %lu>
type ID does not match - %lu vs %lu
%s = <dictionary (%ld entries)>:
%s = %s
%s = %0.6f
%s = %d
%s = <unhandled value type %lu>
%s[%d]
static bool CLNameValuePair::fromCfType(const CFTypeRef, short &)
CoreLocation: could not get value
static bool CLNameValuePair::fromCfType(const CFTypeRef, int64_t &)
static bool CLNameValuePair::fromCfType(const CFTypeRef, int &)
static bool CLNameValuePair::fromCfType(const CFTypeRef, long &)
static bool CLNameValuePair::fromCfType(const CFTypeRef, double &)
CoreLocation: type IDs do not match - %{public}lu vs %{public}lu
static bool CLNameValuePair::fromCfType(const CFTypeRef, std::string &)
CoreLocation: could not convert to C string
CoreLocation: can't convert %{public}u data bytes
CoreLocation: #Warning type IDs do not match - %{public}lu
static bool CLNameValuePair::fromCfType(const CFTypeRef, const char *&, unsigned int &)
static bool CLNameValuePair::fromCfType(const CFTypeRef, CLNameValuePair &)
Direct_deprecated
CLReductiveFilterSuite.m
options
+[CLReductiveFilterSuite deriveLocationFromLocations:options:]
CoreLocation: Reductive filtering: Sum of weights <= 0 after at least one point added.
yyyy-MM-dd HH:mm:ss.SSSS
timestamp
Position
/System/Library/PrivateFrameworks/CompassUI.framework/CompassUI
void CLClientLoadCompassUIIfNecessary(void)
CoreLocation: Unable to load CompassUI framework
CUICalibration
CoreLocation: Could not load CUICalibrationClass from CompassUI framework
error == 0
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Daemon/Core/CSI/CLMachThreadSupport.mm
lock
info->fCount >= 0
(info->fCount == 0) || (info->fOwner == curThread)
(info->fCount > 0) || (info->fOwner == __null)
info->fCount > 0
unlock
kCLHeadingCodingKeyMagneticHeading
kCLHeadingCodingKeyTrueHeading
kCLHeadingCodingKeyAccuracy
kCLHeadingCodingKeyX
kCLHeadingCodingKeyY
kCLHeadingCodingKeyZ
kCLHeadingCodingKeyTimestamp
magneticHeading %.2f trueHeading %.2f accuracy %.2f x %+.3f y %+.3f z %+.3f @ %@
virtual bool CLPreferences::serialize(CFDataRef *) const
CoreLocation: ***not supported***
virtual bool CLPreferences::serializeBinary(CFDataRef *) const
virtual bool CLPreferences::deserialize(const CFDataRef)
virtual void CLPreferences::print() const
CoreLocation: 
<empty>
virtual void CLPreferences::merge(const CLPreferences &, bool)
virtual bool CLPreferences::loadFromFile(const char *)
virtual bool CLPreferences::saveToFile(const char *) const
virtual bool CLPreferences::saveToBinaryFile(const char *) const
virtual void CLPreferences::setInternal(const CFStringRef, const CFTypeRef)
CoreLocation: Attempt to set key %{public}s for read-only preferences %{public}s/%{public}s!
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Daemon/Shared/Utilities/CLPreferences.mm
containsInternal
OtherPref
kCLErrorDomain
kCLErrorDomainPrivate
kCLErrorUserInfoAlternateRegionKey
IsSimulator
<null>
<name>
<version>
<build>
hw.model
IOPlatformExpertDevice
IOPlatformSerialNumber
CLPlatformInfo::Provider CLPlatformInfo::getProviders()_block_invoke
CoreLocation: unknown hardware type %{private}d
locationd
static CLPlatformInfo::MotionProviders CLPlatformInfo::motionProviders()
CoreLocation: Unsupported HW type %d; file a radar to CoreMotion Factory | 1.0
CLPlatformInfo::MotionCapabilities CLPlatformInfo::queryMotionCaps()
CoreLocation: Unsupported HW type %{private}d; file a radar to CoreMotion Factory | 1.0
odometer
deltaDistance
deltaDistanceAccuracy
coordinateFused
coordinateFusedWithVL
coordinateLatitude
coordinateLongitude
horizontalAccuracy
referenceFrame
altitude
verticalAccuracy
course
courseAccuracy
Name
Thoroughfare
SubThoroughfare
City
SubLocality
State
SubAdministrativeArea
CountryCode
Country
InlandWater
Ocean
/Library/Caches/locationd/
root
static std::string CLPersistentStore::getMutableStorePath(CLPersistentStoreType)
CoreLocation: no mutable store path for type, %{public}d
CoreLocation: could not get mutable store path for type, %{public}d
/System/Library/Frameworks/CoreLocation.framework/Support/
/System/Library/Frameworks/CoreLocation.framework
SIMULATOR_ROOT
kCLConnectionMessageBBTimeFreqTransferAssert
CLCallbackAssertionInternal::CLCallbackAssertionInternal(dispatch_queue_t, const char *, NSDictionary *, BBTimeFreqTransferCallback)_block_invoke
CoreLocation: CLBBTFTA,unexpected message,%s
kCLConnectionMessageBBTimeFreqTransferAssertError
kCLConnectionMessageBBTimeFreqTransferMeasurement
kCLConnectionMessageGNSSHeatMap
CLBBTFTA Error
(Unspecified)
kCLConnectionMessageAssertionLevelKey
InUseAssertion/kCLConnectionMessage
CLLocationPushServiceErrorDomain
kCLRegionCodingKeyIdentifier
kCLRegionCodingKeyOnBehalfOfBundleId
kCLRegionCodingKeyNotifyOnEntry
kCLRegionCodingKeyNotifyOnExit
kCLRegionCodingKeyConservativeEntry
kCLRegionCodingKeyEmergency
kCLRegionCodingKeyRegionType
kCLRegionCodingKeyDeviceId
kCLRegionCodingKeyHandoffTag
CLRegion.m
CLRegion is an abstract class. Use one of the derived classes
CLRegion (identifier:'%@')
CLFindMyAccessoryAbsoluteWildConfiguration <%hhx> DesiredKeyRollDate:%@ NextWildKeyIndex: %lu
kCLFindMyAccessoryWildConfigurationRollDate
kCLFindMyAccessoryWildConfigurationNextWildKeyIndex
CoreLocation
cl_fence_handoff
kCLCircularRegionCodingKeyCenterLatitude
kCLCircularRegionCodingKeyCenterLongitude
kCLCircularRegionCodingKeyRadius
reserved
kCLCircularRegionCodingKeyMonitoringNearby
kCLCircularRegionCodingKeyLowPower
kCLCircularRegionEncodedKeyVersion
kCLRegionCodingKeyCenterLatitude
kCLRegionCodingKeyCenterLongitude
kCLRegionCodingKeyRadius
CLCircularRegion (identifier:'%@', center:<%+.8f,%+.8f>, radius:%.2fm)
bool CLGetUncertaintyScaleFactors(unsigned int, double *, double *)
CoreLocation: #CLEU,CLGetUncertaintyScaleFactors,input horzontal or vertical SF pointer is NULL
CoreLocation: #CLEU,CLGetUncertaintyScaleFactors,confidence out of bounds,%{public}d
CoreLocation: #CLEU,CLGetUncertaintyScaleFactors,conf,%{public}d,horzSF,%{public}f,vertSF,%{public}f
Emergency
double linearInterp(unsigned int, std::array<std::pair<unsigned int, double>, size>) [size = 9UL]
CoreLocation: #CLEU,linearInterp,x is less than the first point in table,x,%{public}d,table[0].first,%{public}d
CoreLocation: #CLEU,linearInterp,x is greater than the last point in table,x,%{public}d,table[size-1].first,%{public}d
CoreLocation: #CLEU,linearInterp,failed to find table points bounding x
CLBeaconRegionAnyIdentifier
CLBeaconRegion.m
beaconIdentityConstraint
kCLBeaconRegionCodingKeyProximityUUID
kCLBeaconRegionCodingKeyMajor
kCLBeaconRegionCodingKeyMinor
kCLBeaconRegionNotifyEntryStateOnDisplay
CLBeaconRegion (identifier:'%@', uuid:%@, major:%@, minor:%@)
kCLBeaconCodingKeyTimestamp
kCLBeaconCodingKeyProximityUUID
kCLBeaconCodingKeyMajor
kCLBeaconCodingKeyMinor
kCLBeaconCodingKeyProximity
kCLBeaconCodingKeyAccuracy
kCLBeaconCodingKeyRSSI
CLBeacon (uuid:%@, major:%@, minor:%@, proximity:%d +/- %.2fm, rssi:%ld, timestamp:%@)
com.apple.locationd.appreset
com.apple.locationd.appstatus
com.apple.locationd.techstatus
com.apple.locationd.started
com.apple.locationd.statusbar
com.apple.locationd.authorization
com.apple.locationd.gnssbands
Locations
LocationCount
transform
covariance
confidence
<_CLVLLocalizationResult: %p> {
%@.timestamp = %f,
%@.location = { .coordinate = [%f, %f, %f], .horizontalAccuracy = %f },
%@.transform = [%f, %f, %f, %f; %f, %f, %f, %f; %f, %f, %f, %f; %f, %f, %f, %f ],
%@.covariance = [%f, %f, %f, %f, %f, %f; %f, %f, %f, %f, %f, %f; %f, %f, %f, %f, %f, %f; %f, %f, %f, %f, %f, %f; %f, %f, %f, %f, %f, %f; %f, %f, %f, %f, %f, %f ],
%@.confidence = %f
%+08.4lf%+09.4lf/
%+08.4lf%+09.4lf%+08.3lf/
SimulationScenarios
Couldn't get list of location simulation scenarios
plist
Selected location simulation scenario is not a file URL
Selected location simulation scenario does not exist
Selected location simulation scenario is not a property list
CLSimulation: Object passed to appendSimulatedLocation is not a CLLocation!
-[CLSimulationManager clearSimulatedCells]
CoreLocation: this SPI is obsolete and will be removed in the future
-[CLSimulationManager setSimulatedCell:]
-[CLSimulationManager startCellSimulation]
-[CLSimulationManager stopCellSimulation]
-[CLSimulationManager setSimulatedCellRegistrationStatus:]
-[CLSimulationManager setWifiScanResults:]
-[CLSimulationManager startWifiSimulation]
-[CLSimulationManager stopWifiSimulation]
-[CLSimulationManager setSimulatedWifiPower:]
-[CLSimulationManager flush]
com.apple.locationd.simulation
-[CLSimulationManager daemonProxy]_block_invoke
CoreLocation: Simulation connection interrupted
CoreLocation: Simulation connection invalidated
CoreLocation: Error fetching remoteObjectProxy
Simulation
CLBeaconIdentityConstraint.m
The UUID parameter is required
[decoder allowsKeyedCoding]
kCLBeaconIdentityConstraintUUID
kCLBeaconIdentityConstraintMajor
kCLBeaconIdentityConstraintMinor
[encoder allowsKeyedCoding]
CLBeaconIdentityConstraint (uuid:%@, major:%@, minor:%@)
LogFile
LogFileDirectory
LogFilePrefix
LogFileFlush
ShowError
LogFence
LogBufferSize
LogShowUI
LogFileLevel
LogBufferLevel
LogConsoleLevel
LogStackLevel
.log
com.apple.locationd.log.compression
vlog
CLLog.mm
newFullContentLength == fullContentLength
'\n' == buffer[fullContentLength - 1]
%s,%s,Time,%08.3f,Function,"%s",
%s,%s,Time,%08.3f,
%s,%s,logging locations to %s%s
NOTICE
CLLog
 and flushing immediately
 no flush
%s,%s,logging locations to an internal buffer with capacity %d
.bz2
%s,%s,Failed to move aside log file %s (%d)
ERROR
.log.bz2
%s/%s
Failed to delete log
%s,%s,Rotation path is too long, could not delete old logs.
C16@?0r*8
%s,%s,Failed to write %s
%s,%s,could not open locations log %s, errno %d
Unplugged!
void CLLog::logHeader()
CoreLocation-%s
locationd was compiled on %s at %s
Feb 23 2022
22:21:29
%s @ system model %s / version %s
/usr/libexec/locationd @ system model %s / version %s
IOPlatformSerialNumber: %s
Begin settings dump (read at construction of CLSettings or upon darwin notification 'com.apple.locationd/prefs')
End settings dump
com.apple.timed
%s,%s,dumping internal buffer
LogNatalimetry
LogCalorimetry
userinfo
.plist
cache
.plist.log
%s,%s,could not copy %s log
WARNING
%s,%s,could not dump log file
%s,%s,Time,%08.3f,%d
0x%08lx %s + %lu
STATUS
STACK
%s,%s,Time,%08.3f,%d
0x%08lx 0x%08lx + %lu
%s,%s,Time,%08.3f,%d
0x%08lx
kCLVehicleHeadingCodingKeyTrueHeading
kCLVehicleHeadingCodingKeyTimestamp
trueHeading %.2f @ %@
%.2f
kCLVehicleSpeedCodingKeySpeed
kCLVehicleSpeedCodingKeyTimestamp
speed %.2f mps @ %@
%.0fmph
CLDurianIdentifier
CLDurianMacAddress
CLDurianConnectionState
CLDurianError
CLDurianLogs
CLDurianLogType
CLDurianRoseParameters
CLDurianVersionData
CLDurianBatteryStatus
CLDurianRoseResponse
CLDurianTagType
CLDurianObfuscatedIdentifier
CLDurianNearOwnerTimeout
CLDurianSoundSequence
CLDurianPersonalizationInfo
CLDurianFirmwareAssetURL
CLDurianWildConfig
CLDurianMultiStatus
CLDurianUserStats
CLDurianUserStatsPersistence
CLDurianAccelerometerSlopeModeConfigurationKey
CLDurianAccelerometerOrientationModeConfigurationKey
CLDurianAccelerometerModeKey
CLDurianSetUnauthorizedPlaySoundRateLimitKey
CLDurianRoseRangingParameters
CLDurianKeyRollIndex
CLDurianKeyRollInterval
CLHawkeyeTaskOpcodeKey
CLHawkeyeTestModeKey
CLHawkeyeSeparatedUTTimeoutSecondsKey
CLHawkeyeSeparatedUTBackoffTimeoutSecondsKey
CLHawkeyeTxPowerKey
CLHawkeyeAISProductDataKey
CLHawkeyeAISManufacturerNameKey
CLHawkeyeAISModelNameKey
CLHawkeyeAISModelColorCodeKey
CLHawkeyeAISAccessoryCategoryKey
CLHawkeyeAISAccessoryCapabilitiesKey
CLHawkeyeAISFindMyVersionKey
CLHawkeyeAISBatteryTypeKey
CLHawkeyeSerialNumberKey
CLHawkeyeCurrentPrimaryKeyKey
CLHawkeyeiCloudIdentifierKey
CLHawkeyeDataFragmentKey
CLHawkeyeFirmwareAssetURLKey
CLHawkeyeProductGroupKey
CLHawkeyeProductNumberKey
CLHawkeyeFirmwareURLSandboxExtensionKey
CLHawkeyeLocalFirmwareInUseResultKey
CLHawkeyeAggressiveAdvertisementTimeoutKey
CLHawkeyeFetchTxPowerOwnerKey
CLAvengerAdvertisementScanDateKey
CLAvengerAdvertisementAddressKey
CLAvengerAdvertisementDataKey
CLAvengerAdvertisementStatusKey
CLAvengerAdvertisementRSSIKey
CLAvengerAdvertisementReservedKey
CLAvengerAdvertisementOwnershipTypeKey
CLAvengerAdvertisementChannelKey
CLAvengerScanParametersKey
CLCircularLogBuffer
CLVisit.m
kCLVisitCodingKeyLatitude
kCLVisitCodingKeyLongitude
kCLVisitCodingKeyHorizontalAccuracy
kCLVisitCodingKeyArrivalDate
kCLVisitCodingKeyDepartureDate
kCLVisitCodingKeyDetectionDate
kCLVisitCodingKeyPlaceInference
<%+.8f,%+.8f> +/- %.2fm (%@ to %@) %@
CLGeocoder
[GEOMapService class]
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Framework/CoreLocation/CLGeocoder.m
-[CLGeocoder init]
-[CLGeocoder reverseGeocodeLocation:preferredLocale:heading:localResultsOnly:completionHandler:]_block_invoke
CoreLocation: Coarse MetaData cannot be decoded while reverse geocoding location, error, %@
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v24@?0@"<GEOMapItem>"8@"NSError"16
-[CLGeocoder _ticket:didReturnError:partialResultForLocation:]_block_invoke
CoreLocation: #Warning Geocode error: %{private}@
com.apple.locationd.synchronous
-[CLLocationInternalClient connection]_block_invoke
CoreLocation: #Spi, Interrupted
CoreLocation: #Spi, Invalidated
-[CLLocationInternalClient synchronousRemoteObject]_block_invoke
CoreLocation: #Spi, Error with proxy, error: %@
v20@?0@"NSError"8i16
v24@?0@"NSError"8@"NSData"16
com.apple.locationd.internalservice.errorDomain
v24@?0@"NSError"8@"NSDictionary"16
v24@?0@"NSError"8@"NSArray"16
v24@?0@"NSError"8@"NSString"16
-[CLLocationInternalClient setLocationDefaultForKey:value:]
CoreLocation: #Spi, Key is NULL!
-[CLLocationInternalClient setLocationDefaultForKey:value:]_block_invoke
CoreLocation: #Spi, Couldn't set location default!
-[CLLocationInternalClient timeZoneAtLocation:]
LocationInternal.m
nil != location
-[CLLocationInternalClient setPrivateMode:]_block_invoke
CoreLocation: #Spi, setPrivateMode failed
v20@?0@"NSError"8B16
-[CLLocationInternalClient setLocationServicesEnabled:]_block_invoke
CoreLocation: #Spi, CLInternalSetLocationServicesEnabled failed
-[CLLocationInternalClient setAuthorizationPromptMapDisplayEnabled:]_block_invoke
CoreLocation: #Spi, CLInternalSetAuthorizationPromptMapDisplayEnabled failed
-[CLLocationInternalClient setTemporaryAuthorizationStatusForBundleId:orBundlePath:statusData:]
data != nil
v24@?0@"NSError"8d16
-[CLLocationInternalClient setGestureServiceEnabled:]_block_invoke
CoreLocation: #Spi, CLInternalSetGestureServiceEnabled failed
-[CLLocationInternalClient performMigration]
CoreLocation: #Spi, _CLInternalPerformMigration failed
-[CLLocationInternalClient shutdownDaemon]
CoreLocation: #Spi, _CLShutdownDaemon failed
-[CLLocationInternalClient displayStatistics]
CoreLocation: #Spi, _CLDisplayStatistics failed
-[CLLocationInternalClient dumpLogs:]
CoreLocation: #Spi, _CLDumpLogs failed
v192@?0@"NSError"8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16
v48@?0@"NSError"8{?=dddi}16
-[CLLocationInternalClient setMapMatchingRouteHint:count:routingType:stepType:]
CoreLocation: #Spi,RouteHintError, Exceeded max number of route hint road segments (%{public}d > %{public}d)
CoreLocation: #Spi,RouteHint,LocationInternal,Received route hint road segments,%{public}d,routeType,%{public}d,stepType,%{public}d
-[CLLocationInternalClient setMapMatchingRouteHint:count:routingType:stepType:]_block_invoke
CoreLocation: #Spi,RouteHintError,Couldn't set map-matching route hint!
-[CLLocationInternalClient getAccessoryTypeBitSet]_block_invoke
CoreLocation: #Spi,getAccessoryTypeBitSet,failed
-[CLLocationInternalClient getAccessoryTypeBitSet]
CoreLocation: #Spi,getAccessoryTypeBitSet,%d
-[CLLocationInternalClient copyLastLog]
CoreLocation: #Spi, _CLCopyLastLog failed
v32@?0@"NSError"8Q16Q24
CFArrayRef CLCopyGnssBandsInUse(void)
CoreLocation: Invalid bandUse,%{public}d
{CLGnssBandInfo=iddi}
CLStatusBarIconState CLGetStatusBarIconState()
CoreLocation: CLStatusBarIconState received an icon stateu of %d
void CLSetMapMatchingRouteHint(CLClientLocationRouteHintType, CLClientLocationRouteHintType, CLMapsRouteHint *, int)
CoreLocation: RouteHints,CLSetRouteHintsForMapMatching,received,%lu,routeType,%d,stepType,%d
void CLSetRouteHintsForMapMatching(CLClientLocationRouteHintType, CLMapsRouteHint *, int)
CoreLocation: RouteHints,CLSetRouteHintsForMapMatching,received,%lu,routeType,%d
int32_t CLGetAccessoryTypeBitSet()
CoreLocation: CLGetAccessoryTypeBitSet
[GEOLocation class]
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Framework/CoreLocation/CLPlacemark.m
-[CLPlacemarkInternal init]
<%+.8f,%+.8f> radius %.2f
kCLPlacemarkCodingKeyLocation
kCLPlacemarkCodingKeyAddress
kCLPlacemarkCodingKeyRegion
kCLPlacemarkCodingKeyAreasOfInterest
kCLPlacemarkCodingKeyMapItemSource
kCLPlacemarkCodingKeyGEOMapItem
kCLPlacemarkCodingKeyGEOMapItemHandle
kCLPlacemarkCodingKeyMeCardAddress
Street
FormattedAddressLines
<%+.8f,%+.8f> +/- %.2fm
, region 
, source 
CNPostalAddressStreetKey
/System/Library/Frameworks/Contacts.framework/Contacts
CNPostalAddressSubLocalityKey
CNPostalAddressCityKey
CNPostalAddressSubAdministrativeAreaKey
CNPostalAddressStateKey
CNPostalAddressPostalCodeKey
CNPostalAddressCountryKey
CNPostalAddressISOCountryCodeKey
CNPostalAddress
-[CLLocationPushServiceExtensionRemoteContext initWithInputItems:listenerEndpoint:contextUUID:]
CoreLocation: [%{public}@] Location Push Service extension context initialized
-[CLLocationPushServiceExtensionRemoteContext didReceiveLocationPushPayload:reply:]
CoreLocation: [%{public}@] didReceiveLocationPushPayload:reply:
-[CLLocationPushServiceExtensionRemoteContext serviceExtensionWillTerminate]
CoreLocation: [%{public}@] Location Push Service extension time will expire
-[CLLocationPushServiceExtensionRemoteContext serviceExtensionPerformCleanup]
CoreLocation: [%{public}@] Cleaning up extension
kCLVertexCodingKeyLatitude
kCLVertexCodingKeyLongitude
_CLVertex (latitude:'%.07lf', longitude:'%.07lf')
-[_CLPolygonalRegion initWithVertices:identifier:]
CoreLocation: number of vertices (%{public}lu) mustn't exceed %{public}lu
CoreLocation: number of vertices (%{public}lu) must be greater or equal than %{public}lu
CoreLocation: monitoring requires a valid connected polygon where first and last coordinates are the same
CoreLocation: All vertices, except for the first and last equals, have to be unique
CLPolygonalRegion.m
kCLPolygonalRegionCodingKeyVertices
kCLPolygonalRegionCodingKeyReferenceFrame
kCLPolygonalRegionCodingKeyMonitoringNearby
_CLPolygonalRegion (identifier:'%@', count:'%lu')
com.apple.locationd.harvester
CLPPoiHarvest
-[CLHarvester connect]_block_invoke
CoreLocation: CLHarvester invalidation handler
CoreLocation: CLHarvester interruption handler
-[CLHarvester currentStateDictionary]_block_invoke
CoreLocation: CLHarvester synchronous remote proxy invalidated
CoreLocation: CLHarvester fetchState reply block called
v16@?0@"NSDictionary"8
Harvester
CLFindMyAccessoryFirmwareVersion <%p> VanBurenVersion: %@, RTKitVersion: %@, RoseAPVersion: %lu, RoseDSPVersion: %lu, CalibrationDataVersion: %lu
%u%c%u
%u.%u
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
UnknownStateTracker
ZoneId
BundleId
BundlePath
com.apple.FindMyAccessoryFirmwareUpdateManager.privateQueue
-[CLFindMyAccessoryFirmwareUpdateManager handleInterruption]
-[CLFindMyAccessoryFirmwareUpdateManager handleMessage:]
DurianManagement/DidFetchPersonalizationInformation
CoreLocation: informing client -- did retreive personalization info for device: %s - %s with info: %@
DurianManagement/DidUpdateFirmware
Succeeded
CoreLocation: informing client -- firmware update for device: %s - %s
DurianManagement/DidUseLocalAssetRequest
CoreLocation: informing client -- use local asset request for product group: %s, product number: %s - %s
DurianManagement/DidUseDefaultAssetRequest
CoreLocation: informing client -- use default asset request for product group: %s, product number: %s - %s
DurianManagement/DidFetchWhetherLocalFirmwareAssetIsInUse
IN USE
NOT IN USE
CoreLocation: informing client -- local firmware asset is %s for product group: %s, product number: %s
CoreLocation: CLFindMyAccessoryFirmwareUpdateManager - Unknown Message - ignoring
CLFindMyAccessoryFirmwareUpdateManager.mm
-[CLFindMyAccessoryFirmwareUpdateManager getPersonalizationInfoForDevice:]
CoreLocation: getPersonalizationInfoForDevice: %@
assetURL
-[CLFindMyAccessoryFirmwareUpdateManager updateFirmwareForDevice:withAssetURL:]
CoreLocation: updateFirmwareForDevice for device: %@ with assetURL: %@
-[CLFindMyAccessoryFirmwareUpdateManager abortFirmwareUpdateForDevice:]
CoreLocation: abortFirmwareUpdateForDevice: %@
firmwareUpdateAssetURL
productGroup
productNumber
extension
-[CLFindMyAccessoryFirmwareUpdateManager useLocalFirmwareAssetFromURL:forProductGroup:forProductNumber:withSandboxExtension:]
CoreLocation: useLocalFirmwareAssetFromURL: %@ forProductGroup: %@ forPorductNumber: %@ withSandboxExtension: %@
-[CLFindMyAccessoryFirmwareUpdateManager useDefaultFirmwareAssetSourceForProductGroup:andProductNumber:]
CoreLocation: useDefaultFirmwareAssetSourceForProductGroup: %@ forPorductNumber: %@
-[CLFindMyAccessoryFirmwareUpdateManager fetchWhetherLocalFirmwareAssetIsInUseForProductGroup:andProductNumber:]
CoreLocation: fetchWhetherLocalFirmwareAssetIsInUseForProductGroup: %@ forPorductNumber: %@
DurianManagement/FetchPersonalizationInformation
DurianManagement/UpdateFirmware
DurianManagement/AbortFirmwareUpdate
DurianManagement/UseLocalFirmwareAssetFromUrl
DurianManagement/UseDefaultFirmwareAssetSource
DurianManagement/FetchWhetherLocalFirmwareAssetIsInUse
ProvisionalMonitoring
RemoteUsage
InUseLevel
Authorization
Authorized
SupportedAuthorizationMask
CorrectiveCompensationEnabled
IncidentalUseMode
InterestZones
Relevant
BackgroundIndicatorEnabled
LocationTimeStarted
LocationTimeStopped
FenceTimeStarted
FenceTimeStopped
SignificantTimeStarted
SignificantTimeStopped
VisitTimeStarted
VisitTimeStopped
RangeTimeStarted
RangeTimeStopped
BeaconRegionTimeStarted
BeaconRegionTimeStopped
ReceivingLocationInformationTimeStarted
ReceivingLocationInformationTimeStopped
NonPersistentSignificantTimeStarted
NonPersistentSignificantTimeStopped
PushTimeStarted
PushTimeStopped
Registered
CLBundleKeyValueCache
CLSystemService
CLIsFindMyiPhone
CLIsCoreRoutine
CLEmergencyService
CLPlaceInference.m
kCLPlaceInferenceUserType
kCLPlaceInferencePlaceType
kCLPlaceInferencePlacemark
kCLPlaceInferenceReferenceLocation
kCLPlaceInferenceConfidence
kCLPlaceInferencePreferredName
kCLPlaceInferenceLoiIdentifier
CLPlaceInference, ref, <%f,%f> +/- %f, userType, %lu, placeType, %lu, placemark, %@, preferredName, %@, confidence, %f, related loi identifier, %@
double CLDistanceCalc::calculateDistance(const CLDaemonLocation &, const CLDaemonLocation &)
CoreLocation: #Warning refAlt < %.1lf,refAlt,%.1lf,using the min
CoreLocation: #Warning refAlt > %.1lf,refAlt,%.1lf,using the max
-[_CLSignificantRegion initWithCenter:radius:referenceFrame:lowPower:identifier:onBehalfOfBundleId:notifyOnEntry:notifyOnExit:conservativeEntry:emergency:deviceId:handoffTag:]
CoreLocation: LowPower not supported for this object/platform
CoreLocation: Conservative not supported for this object/platform
CLSignificantRegion.m
kCLSignificantRegionCodingKeyType
CLSignificantRegion (identifier:'%@', center:<%+.8f,%+.8f>, radius:%.2fm, frame:%d)
CLFindMyAccessoryWildConfiguration <%hhx> DesiredKeyRollDate:%@ KeyRollInterval:%llu KeysRemaining:%llu KeyCount:%llu
kCLFindMyAccessoryWildConfigurationKeyRollInterval
kCLFindMyAccessoryWildConfigurationKeysRemaining
kCLFindMyAccessoryWildConfigurationKeyCount
kCLLocationCodingKeyCoordinateLatitude
kCLLocationCodingKeyCoordinateLongitude
kCLLocationCodingKeyHorizontalAccuracy
kCLLocationCodingKeyAltitude
kCLLocationCodingKeyVerticalAccuracy
kCLLocationCodingKeySpeed
kCLLocationCodingKeySpeedAccuracy
kCLLocationCodingKeyCourse
kCLLocationCodingKeyCourseAccuracy
kCLLocationCodingKeyTimestamp
kCLLocationCodingKeyType
kCLLocationCodingKeyLifespan
kCLLocationCodingKeyMatchInfo
kCLLocationCodingKeyFloor
kCLLocationCodingKeySimulationParams
kCLLocationCodingKeyFromSoftwareSimulator
kCLLocationCodingKeyFromExternalAccessory
kCLLocationCodingKeyIntegrity
kCLLocationCodingKeyGroundAltitude
kCLLocationCodingKeyFusionInfo
kCLLocationCodingKeyRawCoordinateLatitude
kCLLocationCodingKeyRawCoordinateLongitude
kCLLocationCodingKeyRawHorizontalAccuracy
kCLLocationCodingKeyRawReferenceFrame
kCLLocationCodingKeyRawAltitude
kCLLocationCodingKeyRawVerticalAccuracy
kCLLocationCodingKeyRawCourse
kCLLocationCodingKeyRawCourseAccuracy
kCLLocationCodingKeyCoarseMetaData
kCLLocationCodingKeySignalEnvironmentType
kCLLocationCodingKeyEllipsoidalAltitude
kCLLocationCodingKeyPositionContextState
kCLLocationCodingKeyProbabilityPositionContextStateIndoor
kCLLocationCodingKeyProbabilityPositionContextStateOutdoor
kCLLocationCodingKeyGnssOdometerInfo
{CLLocationSourceInformation=#BB}
<%+.8f,%+.8f> +/- %.2fm (speed %.2f mps / course %.2f) @ %@
suitability
latitude
longitude
speed
lifespan
type
rawLatitude
rawLongitude
rawReferenceFrame
signalEnvironment
ellipsoidalAltitude
isSoftwareSimulated
isFromExternalAccessory
CLAssertionInternalQueue
Type
EncodedSequence
CLLogBase
yyyy-MM-dd_HH-mm-ss
/Library/Logs/CrashReporter/com.apple.locationd
mobile
Library
Caches
Logs
CrashReporter
CLRangingPeer.m
(macAddress & 0xFFFF000000000000) == 0
macAddress
[aDecoder allowsKeyedCoding]
[aCoder allowsKeyedCoding]
Peer:%@ hasKey:%s
(len >= 11) && (len <= 17)
peer
date
distance
Peer: %@ time:%@ distance[m]:%.02f accuracy[m]:%.02f unlock:%s secure:%s initiator:%s
kCLCodingKeyRangingPeerMacAddress
kCLCodingKeyRangingPeerSecureRangingKeyID
kCLCodingKeyRangingPeerDistancePeer
kCLCodingKeyRangingPeerDistanceTimestamp
kCLCodingKeyRangingPeerDistanceDistance
kCLCodingKeyRangingPeerDistanceAccuracy
kCLCodingKeyRangingPeerDistanceInitiator
kCLCodingKeyRangingPeerDistanceUnlock
LocationIndependenceAssertion/kCLConnectionMessage
<_CLLSLLocationCoordinate: %p> { .latitude = %f, .longitude = %f }
coordinate
<_CLLSLLocation: %p> {
%@.coordinate = %@,
%@.altitude = %f,
%@.timestamp = %f
roadID
polylines
<NSArray: %p> {
%@%@%@
<_CLLSLMapRoadSegment: %p> {
%@.roadID = %llu,
%@.polylines = %@
roadSegment
<_CLLSLHeadingSupplInfo: %p> {
%@.roadSegment = %@
rotationFromGlobalToDeviceFrame
rotationFromGlobalToCameraFrame
rotationalAccuracyInRadians
globalReferenceFrame
supplemantaryInfo
<_CLLSLHeading: %p> {
%@.timestamp = %f,
%@.rotationFromGlobalToDeviceFrame = [%f, %f, %f; %f, %f, %f; %f, %f, %f],
%@.rotationFromGlobalToCameraFrame = [%f, %f, %f; %f, %f, %f; %f, %f, %f],
%@.rotationalAccuracyInRadians = [%f, %f, %f],
%@.confidence = %f,
%@.globalReferenceFrame = %zu,
%@.location = %@,
%@.supplemantryInfo = %@
status
headings
<_CLLSLHeadingEstimation: %p> {
%@.status = %d,
%@.headings = %@
trackingState
originTimestamp
inertialStateInfo
inertialState
inertialCovarianceInfo
inertialCovariance
cameraPose
cameraIntrinsics
cameraImageResolutionKey
{CGSize=dd}
<_CLVIOEstimation: %p> {
%@.trackingState = %d,
%@.originTimestamp = %f,
%@.timestamp = %f,
%@.inertialStateInfo = { .stateLengthInbytes = %lu, .stateLength = %d, ... },
%@.inertialState = <NSData: %p> %@,
%@.inertialCovarianceInfo = { .covarianceSizeInbytes = %lu, .covariance = %d, ... },
%@.inertialCovariance = <NSData: %p> %@,
%@.cameraPose = [%f, %f, %f, %f; %f, %f, %f, %f; %f, %f, %f, %f; ... ],
%@.cameraIntrinsics = [%f, %f, %f; %f, %f, %f; %f, %f, %f],
%@.cameraImageResolution = [%f, %f]
Data does not exist
Data is valid
Data exceeded maximum buffer size
CLLocationManagerRoutineClientInterface
NSObject
CLLocationManagerRoutineServerInterface
_CLLocationManagerRoutineProxy
CLLocationManagerRoutine
CLEmergencyEnablementAssertion
CLFindMyAccessoryConnectionMaterial
NSCopying
NSSecureCoding
NSCoding
CLLocationManagerStateTracker
CLLocationManagerInternal
CLDiagnosticManagerXPCServerInterface
CLLocationManager
VehicleData
MatchInfo
GroundAltitude
FusionInfo
CLVisitExtensions
_CLPlaceInferenceExtensions
_CLEstimatedLocationExtensions
_CLRoutineExtensions
_CLLocationGroundAltitude
CLLocationSmootherClientInterface
CLLocationSmootherServerInterface
_CLLocationSmootherProxy
CLLocationSmoother
CLFindMyAccessoryAccelerometerSlopeModeConfiguration
CLFindMyAccessoryAccelerometerOrientationModeConfiguration
CLGnssDisablementAssertion
CLLocationMatchInfoInternal
CLLocationMatchInfo
CLFindMyAccessoryRangingManager
CLLocationPushServiceExtensionHostContext
CLLocationPushServiceExtensionHostXPCInterface
CLFindMyAccessoryManager
CLRegulatoryConfig
CLReductiveFilterSuite
CLHeadingInternal
CLHeading
CLLocationGnssOdometerInfo
_CLLocationFusionInfo
CLBBTimeFreqTransferCallbackAssertion
_CLVLExtensions
CLInUseAssertion
DeprecatedMethods
CLRegion
CLFindMyAccessoryAbsoluteWildConfiguration
CLCircularRegion
CLBeaconRegion
CLBeaconInternal
CLBeacon
_CLVLLocalizationResult
CLSimulationXPCServerInterface
CLSimulationLocationProtocol
CLSimulationManager
CLBeaconIdentityConstraint
CLLocationPushServiceExtensionRemoteXPCInterface
CLLocationPushServiceExtensionContext
CLVehicleHeadingInternal
CLVehicleHeading
CLVehicleSpeedInternal
CLVehicleSpeed
CLVisit
CLGeocoderExtras
CLGeocoderInternal
CLGeocoder
ContactsAdditions
CLLocationInternalServiceProtocol
CLLocationInternalClient
_CLARExtensions
CLPlacemarkInternal
CLPlacemark
CLReductiveFilterOptions
CLLocationPushServiceExtensionRemoteContext
_CLVertex
_CLPolygonalRegion
CLHarvesterServerInterface
CLHarvester
_CLVIOExtensions
CLFindMyAccessoryFirmwareVersion
CLStateTracker
CLLocationManagerAuthorization
CLFindMyAccessoryFirmwareUpdateManager
_CLPlaceInference
_CLSignificantRegion
CLFindMyAccessoryWildConfiguration
CLLocationInternal
CLFloor
CLLocationSourceInformation
CLLocation
GnssOdometerInfo
CLAssertion
CLFindMyAccessorySoundSequence
_CLRangingPeerInternal
_CLRangingPeerDistanceInternal
_CLRangingPeer
_CLRangingPeerDistance
CLLocationIndependenceAssertion
_CLLSLLocationCoordinate
_CLLSLLocation
_CLLSLMapRoadSegment
_CLLSLHeadingSupplInfo
_CLLSLHeading
_CLLSLHeadingEstimation
_CLVIOEstimation
CLFindMyAccessoryFragmentAccumulator
initWithCurrentRunLoopAndIdentifier:
UTF8String
async:
mainBundle
objectForInfoDictionaryKey:
dictionary
setObject:forKeyedSubscript:
errorWithDomain:code:userInfo:
setWithObject:
objectForKeyedSubscript:
setWithObjects:
type
initWithCapacity:
addObject:
archivedDataWithRootObject:requiringSecureCoding:error:
length
objectForKey:
intValue
stringWithUTF8String:
initWithUUIDString:
initWithCenter:radius:referenceFrame:allowMonitoringWhenNearby:lowPower:identifier:onBehalfOfBundleId:notifyOnEntry:notifyOnExit:conservativeEntry:emergency:deviceId:handoffTag:
unarchivedArrayOfObjectsOfClass:fromData:error:
count
initWithVertices:identifier:
setReferenceFrame:
setEmergency:
initWithUUID:major:minor:identifier:
initWithUUID:major:identifier:
initWithUUID:identifier:
initWithIdentifier:
setOnBehalfOfBundleId:
setNotifyEntryStateOnDisplay:
setNotifyOnEntry:
setNotifyOnExit:
setConservativeEntry:
countByEnumeratingWithState:objects:count:
onBehalfOfBundleId
identifier
definitionMask
UUID
UUIDString
major
unsignedShortValue
minor
notifyOnEntry
notifyOnExit
notifyEntryStateOnDisplay
conservativeEntry
emergency
dictionaryWithObjects:forKeys:count:
newTimer
setHandler:
setNextFireDelay:
invalidate
deviceId
handoffTag
center
radius
desiredAccuracy
referenceFrame
allowMonitoringWhileNearby
isLowPower
vertices
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
init
createConnection
setLocationManagerRoutine:
setDelegate:
connection
setConnection:
dealloc
delegate
locationManager:didUpdateLocations:
locationManagerRoutine
didUpdateLocations:
locationManager:didUpdateLocations:completion:
initWithMachServiceName:options:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
didUpdateLocations:withReply:
interfaceWithProtocol:
setExportedInterface:
setExportedObject:
exportedInterface
setClasses:forSelector:argumentIndex:ofReply:
startUpdatingLocation
stopUpdatingLocation
setRemoteObjectInterface:
serviceName
setInterruptionHandler:
setInvalidationHandler:
resume
updating
remoteObjectProxy
initWithQueue:locationManagerRoutine:
setUpdating:
_queue
_updating
_connection
_delegate
_locationManagerRoutine
T@"NSXPCConnection",&,N,V_connection
T@,N,V_delegate
T@"CLLocationManagerRoutine",N,V_locationManagerRoutine
TB,N,V_updating
stringWithFormat:
initWithQueue:
locationManagerRoutineProxy
setLocationManagerRoutineProxy:
_locationManagerRoutineProxy
T@"_CLLocationManagerRoutineProxy",&,N,V_locationManagerRoutineProxy
T@"<CLLocationManagerDelegate>",N
initWithRegistrationMessageName:messageDictionary:
copy
bundlePath
newAssertionWithReason:
newAssertionForBundleIdentifier:withReason:
newAssertionForBundle:withReason:
doesNotRecognizeSelector:
initWithAddress:ltk:primaryIndex:secondaryIndex:
isEqualToMaterial:
address
isEqualToData:
primaryIndex
isEqualToNumber:
secondaryIndex
decodeObjectOfClass:forKey:
encodeObject:forKey:
setObject:forKey:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
initWithAddress:ltk:
dictionaryDescription
_address
_ltk
_primaryIndex
_secondaryIndex
T@"NSData",R,V_address
T@"NSData",R,V_ltk
T@"NSNumber",R,V_primaryIndex
T@"NSNumber",R,V_secondaryIndex
bytes
initInSilo:withIdentifier:state:
assertInside
queue
initWithQueue:identifier:state:
trackerStateSize
trackerStateTypeName
initInSilo:withIdentifier:
initWithQueue:identifier:
distanceFilter
setDistanceFilter:
setDesiredAccuracy:
updatingLocation
setUpdatingLocation:
requestingLocation
setRequestingLocation:
requestingRanging
setRequestingRanging:
updatingRanging
setUpdatingRanging:
updatingHeading
setUpdatingHeading:
headingFilter
setHeadingFilter:
allowsLocationPrompts
setAllowsLocationPrompts:
allowsAlteredAccessoryLocations
setAllowsAlteredAccessoryLocations:
dynamicAccuracyReductionEnabled
setDynamicAccuracyReductionEnabled:
previousAuthorizationStatusValid
setPreviousAuthorizationStatusValid:
previousAuthorizationStatus
setPreviousAuthorizationStatus:
limitsPrecision
setLimitsPrecision:
activityType
setActivityType:
pausesLocationUpdatesAutomatically
setPausesLocationUpdatesAutomatically:
paused
setPaused:
allowsBackgroundLocationUpdates
setAllowsBackgroundLocationUpdates:
showsBackgroundLocationIndicator
setShowsBackgroundLocationIndicator:
allowsMapCorrection
setAllowsMapCorrection:
batchingLocation
setBatchingLocation:
updatingVehicleSpeed
setUpdatingVehicleSpeed:
updatingVehicleHeading
setUpdatingVehicleHeading:
matchInfoEnabled
setMatchInfoEnabled:
groundAltitudeEnabled
setGroundAltitudeEnabled:
fusionInfoEnabled
setFusionInfoEnabled:
courtesyPromptNeeded
setCourtesyPromptNeeded:
isAuthorizedForWidgetUpdates
setIsAuthorizedForWidgetUpdates:
updateState:
dumpState:withSize:hints:
_state
_identifier
_inTransaction
Td,N
TB,N
Ti,N
Tq,N
hasLingeringRangingRequest
cancelRangingRequest
initWithInfo:bundleIdentifier:bundle:delegate:silo:
PausesLocationUpdatesAutomatically
stopUpdatingLocationAutoPaused
cancelLocationRequest
cancelLingeringRangingRequest
performCourtesyPromptIfNeeded
rangedRegions
rangedConstraints
manager
setManager:
.cxx_destruct
fClient
fDelegate
fManager
fState
fLocation
fLocationEventType
fLocationRequestTimer
fLocationRequestTimeout
fRangingRequestTimer
fLastRangingRequestTimeout
fLastRangingRequestMachTime
fHeadingOrientation
fRangedRegions
fRangedConstraints
fPlaceInferenceHandler
fFidelityPolicy
fPlaceInferenceTimer
fSilo
T@"NSMutableSet",R,N,VfRangedRegions
T@"NSMutableSet",R,N,VfRangedConstraints
T@"<CLLocationManagerDelegate>",W,N,VfDelegate
T@"CLLocationManager",W,N,VfManager
onClientEvent:supportInfo:
initWithCurrentRunLoopAndIdentifier:bePermissive:
defaultCenter
onDidBecomeActive:
addObserver:selector:name:object:
initWithEffectiveBundleIdentifier:bundle:delegate:silo:
initWithUnderlyingQueue:bePermissive:
removeObserver:
locationServicesEnabled
initWithClientLocation:
_authorizationStatus
bundleIdentifier
containsString:
isEqualToString:
locationManagerDidResumeLocationUpdates:
locationManager:didFailWithError:
onLocationRequestTimeout
initWithClientHeading:
startMonitoringForRegion:
locationManager:monitoringDidFailForRegion:withError:
initWithArray:
removeObject:
initWithSet:copyItems:
locationManager:rangingBeaconsDidFailForRegion:withError:
initWithBeaconIdentityConstraint:identifier:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didRangePeers:
locationManager:rangingDidFailForPeer:withError:
onRangingRequestTimeout
setValue:forKey:
arrayWithObjects:count:
initWithDictionary:copyItems:
removeObjectForKey:
requestMicroLocationRecordingScanWithAdditionalInformation:shouldForceRecording:
setWithArray:
arrayWithObject:
onClientEventAuthStatus:
boolValue
onClientEventLocation:forceMapMatching:type:
onClientEventLocationUnavailable:
onClientEventHeading:
onClientEventHeadingCalibration:
onClientEventError:
onClientEventRegion:
onClientEventRegionState:
onClientEventRegionError:
onClientEventRanging:
onClientEventRangingError:
onClientEventPeerRanging:
onClientEventPeerRangingRequestProcessed:
onClientEventPeerRangingError:
onClientEventRegionResponseDelayed:
onClientEventRegionSetupCompleted:
onClientEventNoLocationWatchdog:
onClientEventAutopauseStatus:
onClientEventBatch:
onClientEventInterrupted:
onClientEventVehicleSpeed:
onClientEventVehicleHeading:
onClientEventSignificantLocationVisit:
onClientEventSignificantLocationVisitStateRequest:
onClientEventPlaceInferenceError:
onClientEventPlaceInferenceResult:
locationManagerDidChangeAuthorization:
locationManager:didReceiveApproval:
locationManager:didChangeAuthorizationStatus:
unmatch
makeObjectsPerformSelector:
lastObject
clientLocation
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
callPlaceInferenceHandlerWithResult:error:
_setResponseSilo:
array
initWithUserType:placeType:placemark:referenceLocation:confidence:preferredName:loiIdentifier:
reverseGeocodeLocation:completionHandler:
locationManager:didEnter:completion:
locationManager:didEnterRegion:
locationManager:didExit:completion:
locationManager:didExitRegion:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:didRangeBeacons:satisfyingConstraint:
objectAtIndex:
integerValue
doubleValue
shortValue
initWithUUID:major:minor:proximity:accuracy:rssi:timestamp:
enumerateObjectsUsingBlock:
sortDescriptorWithKey:ascending:
arrayWithObjects:
sortUsingDescriptors:
beaconIdentityConstraint
containsObject:
initForReadingFromData:error:
decodeObjectOfClasses:forKey:
finishDecoding
locationManager:didStartRangingForPeer:
locationManager:didStopRangingForPeer:
objectAtIndexedSubscript:
code
dictionaryWithObject:forKey:
locationManager:didNotReceiveLocationUpdatesForRegionMonitoringInInterval:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
name
resumeLocationUpdates
pauseLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didUpdateVehicleSpeed:
initWithClientVehicleSpeed:
locationManager:didUpdateVehicleHeading:
initWithClientVehicleHeading:
locationManager:didVisit:
locationManager:didReportVisit:
_authorizationStatusForBundleIdentifier:bundle:
authorizationStatus
accuracyAuthorization
requestWhenInUseAuthorization
_requestTemporaryFullAccuracyWithUsageDescription:completion:
requestTemporaryFullAccuracyAuthorizationWithPurposeKey:
requestTemporaryFullAccuracyAuthorizationWithPurposeKey:completion:
copyRegisteredFilesWithHandler:
remoteObjectProxyWithErrorHandler:
sharedManager
locationServicesEnabled:
setLocationServicesEnabled:
setAuthorizationPromptMapDisplayEnabled:
authorizationPromptMapDisplayEnabled
headingAvailable
significantLocationChangeMonitoringAvailable
isMonitoringAvailableForClass:
regionMonitoringAvailable
regionMonitoringEnabled
isRangingAvailable
mapCorrectionAvailable
_checkAndExerciseAuthorizationForBundleID:error:
_checkAndExerciseAuthorizationForBundle:error:
deferredLocationUpdatesAvailable
isPeerRangingAvailable
metadataForHomekitAccessoryControlEventWithUUID:stateString:serviceUUID:serviceType:characteristicType:serviceGroupUUID:source:roomUUID:
metadataForHomekitActionSetEventWithUUID:name:type:clientName:source:homeName:
metadataForMicroLocationTruthTagEventWithTagUUID:
_archivedAuthorizationDecisionsWithError:
_applyArchivedAuthorizationDecisions:
authorizationStatusForBundleIdentifier:
authorizationStatusForBundle:
setAuthorizationStatus:forBundleIdentifier:
setAuthorizationStatus:forBundle:
setAuthorizationStatusByType:forBundleIdentifier:
setAuthorizationStatusByType:forBundle:
setAuthorizationStatusByType:withCorrectiveCompensation:forBundleIdentifier:
updateCorrectiveCompensationChoiceForOutstandingPrompt:
setAuthorizationStatusByType:withCorrectiveCompensation:forBundle:
setIncidentalUseMode:forBundle:
setIncidentalUseMode:forBundleIdentifier:
getIncidentalUseMode:forBundle:
getIncidentalUseMode:forBundleIdentifier:
registerCircularInterestZoneWithId:latitue:longitude:radius:serviceMaskOperator:provenanceType:forBundleIdentifier:error:
registerCircularInterestZoneWithId:latitue:longitude:radius:serviceMaskOperator:provenanceType:forBundle:error:
registerPhenolicInterestZoneWithId:phenolicLocation:serviceMaskOperator:provenanceType:forBundleIdentifier:error:
registerPhenolicInterestZoneWithId:phenolicLocation:serviceMaskOperator:provenanceType:forBundle:error:
setAuthorizationStatus:withCorrectiveCompensation:forInterestZoneWithId:registeredForBundleIdentifier:
setAuthorizationStatus:withCorrectiveCompensation:forInterestZoneWithId:registeredForBundle:
setRelevance:forInterestZoneWithId:registeredForBundleIdentifier:error:
setRelevance:forInterestZoneWithId:registeredForBundle:error:
deleteInterestZoneWithId:registeredForBundleIdentifier:error:
deleteInterestZoneWithId:registeredForBundle:error:
setTemporaryAuthorizationGranted:forBundleIdentifier:
setTemporaryAuthorizationGranted:forBundle:
grantTemporaryAuthorizationUsingLocationButtonToClientWithAuditToken:voiceInteractionEnabled:
setBackgroundIndicatorEnabled:forBundleIdentifier:
setBackgroundIndicatorEnabled:forBundle:
setDefaultEffectiveBundleIdentifier:
setDefaultEffectiveBundle:
dumpLogsWithMessage:
dumpDiagnosticFilesWithHandler:
shutdownDaemon
bundleSupported:
advertiseAsBeacon:withPower:
_getClientTransientAuthorizationInfoForBundleId:error:
_getClientTransientAuthorizationInfoForBundlePath:error:
_setClientTransientAuthorizationInfoForBundleId:data:
_setClientTransientAuthorizationInfoForBundlePath:data:
initWithEffectiveBundleIdentifier:
initWithEffectiveBundleIdentifier:delegate:onQueue:
initWithEffectiveBundle:
initWithEffectiveBundle:delegate:onQueue:
initWithEffectiveBundle:limitingBundleIdentifier:delegate:onQueue:
_initWithDelegate:onQueue:
_limitsPrecision
location
locationServicesAvailable
locationServicesApproved
expectedGpsUpdateInterval
setSupportInfo:
supportInfo
internalClient
setPrivateMode:
privateMode
setPurpose:
purpose
markAsHavingReceivedLocation
startUpdatingLocationWithPrompt
requestLocation
allowDeferredLocationUpdatesUntilTraveled:timeout:
disallowDeferredLocationUpdates
setHeadingOrientation:
headingOrientation
heading
startUpdatingHeading
stopUpdatingHeading
dismissHeadingCalibrationDisplay
startAppStatusUpdates
stopAppStatusUpdates
startTechStatusUpdates
stopTechStatusUpdates
startMonitoringSignificantLocationChanges
_startMonitoringSignificantLocationChangesOfDistance:withPowerBudget:
stopMonitoringSignificantLocationChanges
startMonitoringLocationPushesWithCompletion:
stopMonitoringLocationPushes
startMonitoringForRegion:desiredAccuracy:
stopMonitoringForRegion:
requestStateForRegion:
maximumRegionMonitoringDistance
monitoredRegions
startRangingBeaconsInRegion:
stopRangingBeaconsInRegion:
startRangingBeaconsSatisfyingConstraint:
stopRangingBeaconsSatisfyingConstraint:
rangedBeaconConstraints
requestRangingToPeers:timeoutSeconds:
respondToRangingFromPeers:timeoutSeconds:
startRangingToPeers:intervalSeconds:
stopRangingToPeers:
startRangingFromPeers:
stopRangingFromPeers:
getMicroLocationInternalVersion
requestCurrentMicroLocationWithAdditionalInformation:
requestMicroLocationRecordingScanWithAdditionalInformation:
getRecordingTriggerUUIDAndRequestMicroLocationRecordingScanWithAdditionalInformation:shouldForceRecording:handler:
donateMicroLocationTruthTagWithTagUUID:correspondingToTriggerUUID:handler:
purgeMicroLocationSemiSupervisedData
resetApps
appsUsingLocation
appsUsingLocationWithDetails
technologiesInUse
_zAxisStatistics
isAuthorizedForPreciseLocation
requestWhenInUseAuthorizationWithPrompt
requestAlwaysAuthorization
_requestTemporaryFullAccuracyWithUsageDescription:
requestTemporaryPreciseLocationAuthorizationWithPurposeKey:
requestTemporaryPreciseLocationAuthorizationWithPurposeKey:completion:
isLocationServicesPreferencesDialogEnabled
setLocationServicesPreferencesDialogEnabled:
isDynamicAccuracyReductionEnabled
registerAsLocationClient
setIsActuallyAWatchKitExtension:
_internal
TB,R,N
Td,R,N
T^{__CLClient=},R,N
locationServicesPreferencesDialogEnabled
TB,N,GisLocationServicesPreferencesDialogEnabled
TB,N,GisDynamicAccuracyReductionEnabled
Ti,R,N
authorizedForPreciseLocation
TB,R,N,GisAuthorizedForPreciseLocation
Tq,R,N
authorizedForWidgetUpdates
TB,R,N,GisAuthorizedForWidgetUpdates
T@"<CLLocationManagerDelegate>",W,N
T@"NSString",C,N
T@"CLLocation",R,C,N
T@"CLHeading",R,C,N
T@"NSSet",R,C,N
startUpdatingVehicleSpeed
stopUpdatingVehicleSpeed
startUpdatingVehicleHeading
stopUpdatingVehicleHeading
isMatchInfoEnabled
TB,N,GisMatchInfoEnabled
_isGroundAltitudeEnabled
initWithEstimate:uncertainty:undulation:undulationModel:
_setGroundAltitudeEnabled:
_groundAltitudeAtLocation:
_groundAltitudeEnabled
TB,N,G_isGroundAltitudeEnabled,S_setGroundAltitudeEnabled:
_isFusionInfoEnabled
_setFusionInfoEnabled:
startMonitoringVisits
stopMonitoringVisits
_startLeechingVisits
_requestVisitState
fireInterval
_startPlaceInferencesCommonLogic:handler:
setNextFireDelay:interval:
_fetchPlaceInferencesWithFidelityPolicy:handler:
_fetchContinuousPlaceInferencesWithFidelityPolicy:handler:
_stopFetchingContinuousPlaceInferences
_fetchEstimatedLocationAtDate:handler:
initWithClientLocation:coarseMetaData:
initWithClientLocation:clientLocationPrivate:coarseMetaData:
lastPathComponent
boolForKey:defaultValue:
hasValueForKey:
mapItem
_initWithRTLocation:
referenceLocation
_initWithRTMapItem:location:
userType
_userSpecificPlaceTypeFromRTUserType:
placeType
_placeInferencePlaceTypeFromRTPlaceType:
confidence
preferredName
loiIdentifier
_initWithRTPlaceInference:
allowsKeyedCoding
encodeValueOfObjCType:at:
encodeDouble:forKey:
encodeInt:forKey:
decodeValueOfObjCType:at:
decodeDoubleForKey:
decodeIntForKey:
estimate
initWithEstimate:uncertainty:
altitude
uncertainty
undulation
undulationModel
isAltitudeWgs84Available
altitudeWgs84
uncertaintyWgs84
_isAltitudeWgs84Available
_undulationModel
_estimate
_uncertainty
_undulation
_altitudeWgs84
_uncertaintyWgs84
Td,R,N,V_estimate
Td,R,N,V_uncertainty
Td,R,N,V_undulation
Ti,R,N,V_undulationModel
TB,R,N,V_isAltitudeWgs84Available
Td,R,N,V_altitudeWgs84
Td,R,N,V_uncertaintyWgs84
setLocationManagerSmoother:
locationManagerSmoother
locationManager:didSmoothLocations:ofType:
didSmoothLocations:ofType:
smoothLocations:useType:
smoothLocations:workoutActivity:handler:
initWithCLLocationSmoother:
_locationManagerSmoother
T@"<CLLocationSmootherDelegate>",N,V_delegate
T@"CLLocationSmoother",N,V_locationManagerSmoother
locationManagerSmootherProxy
numberWithInt:
smoothLocations:workoutActivityType:handler:
remoteObjectInterface
smoothLocations:
smoothLocations:handler:
_locationManagerSmootherProxy
T@"_CLLocationSmootherProxy",R,&,N
T@"<CLLocationManagerDelegateInternal>",N
minimumThreshold
maximumThreshold
minimumSampleCount
maximumSampleCount
decodeFloatForKey:
encodeFloat:forKey:
TC,R
Tf,R
initWithThreshold:sampleCount:sampleRate:
threshold
setThreshold:
sampleCount
setSampleCount:
sampleRate
setSampleRate:
_sampleCount
_sampleRate
_threshold
Tf,N,V_threshold
TC,N,V_sampleCount
TC,N,V_sampleRate
initWithThreshold:sleepDuration:
sleepDuration_ms
setSleepDuration_ms:
_sleepDuration_ms
TI,N,V_threshold
TS,N,V_sleepDuration_ms
initWithRegistrationMessageName:messagePayload:callbackQueue:completionHandler:
newAssertionForBundleIdentifier:withReason:callbackQueue:completionHandler:
newAssertionForBundle:withReason:callbackQueue:completionHandler:
.cxx_construct
fInternal
allocWithZone:
initWithMatchQuality:matchCoordinate:matchCourse:matchFormOfWay:matchRoadClass:matchShifted:matchDataArray:
fMatchQuality
fMatchCoordinate
fMatchCourse
fMatchFormOfWay
fMatchRoadClass
fMatchShifted
fMatchDataArray
decodeIntegerForKey:
decodeInt32ForKey:
decodeBoolForKey:
encodeInteger:forKey:
encodeInt32:forKey:
encodeBool:forKey:
initWithMatchQuality:matchCoordinate:matchCourse:matchFormOfWay:matchRoadClass:matchShifted:
shortDescription
matchQuality
matchCoordinate
matchCourse
matchFormOfWay
matchRoadClass
isMatchShifted
matchDataArray
T{CLLocationCoordinate2D=dd},R,N
matchShifted
TB,R,N,GisMatchShifted
T@"NSData",R,C,N
handleMessage:
handleInterruption
findMyAccessoryRangingManager:didConnectToDevice:withMacAddress:withError:
findMyAccessoryRangingManager:didDisconnectFromDevice:withError:
findMyAccessoryRangingManager:didFetchFirmwareVersion:fromDevice:withError:
findMyAccessoryRangingManager:didInitRoseOnDevice:withResponse:error:
findMyAccessoryRangingManager:didStopRoseOnDevice:withResponse:error:
findMyAccessoryRangingManager:didSetRoseRangingParametersOnDevice:withResponse:error:
findMyAccessoryRangingManager:didStartRoseRangingOnDevice:withError:
findMyAccessoryRangingManager:didCompleteRoseRangingOnDevice:withResponse:error:
findMyAccessoryRangingManager:didReceiveRoseError:fromDevice:
findMyAccessoryRangingManager:didReceiveRoseP2PTimestamp:fromDevice:
findMyAccessoryRangingManager:didReceiveRoseDebugP2PTimestamp:fromDevice:
findMyAccessoryRangingManager:deviceDidMove:
findMyAccessoryRangingManager:didPrepareForStartRangingOnDevice:withError:
findMyAccessoryRangingManager:didFailWithError:forDevice:
initWithDomain:code:userInfo:
dictionaryWithDictionary:
initWithDelegate:delegateQueue:
connectToDevice:
disconnectFromDevice:
initRoseWithParameters:onDevice:
stopRoseWithParameters:onDevice:
setRoseRangingParameters:onDevice:
prepareForStartRangingOnDevice:
startRangingWithParameters:onDevice:
stopRangingOnDevice:
startEventCounterOnDevice:
stopEventCounterOnDevice:
fetchFirmwareVersionFromDevice:
_delegateQueue
T@"<CLFindMyAccessoryRangingManagerDelegate>",W,N,V_delegate
latitude
longitude
horizontalUncertainty
date
timeIntervalSinceReferenceDate
initWithMaxBytesPerUUID:
initAccumulator
convertDataStatusToString:
dataWithLength:
unsignedIntValue
appendData:forUUID:
findMyAccessoryManager:didConnectDevice:error:
findMyAccessoryManager:didConnectDevice:
findMyAccessoryManager:didDisconnectDevice:
findMyAccessoryManager:didFetchConnectionState:forDevice:
unsignedIntegerValue
findMyAccessoryManager:didStartPlayingSoundOnDevice:withError:
findMyAccessoryManager:didCompletePlayingSoundOnDevice:withError:
findMyAccessoryManager:didStopPlayingSoundOnDevice:withError:
findMyAccessoryManager:didStartPlayingUnauthorizedSoundOnDevice:withError:
findMyAccessoryManager:didPlayUnauthorizedSoundOnDevice:withError:
findMyAccessoryManager:didCompletePlayingUnauthorizedSoundOnDevice:withError:
findMyAccessoryManager:didStopPlayingUnauthorizedSoundOnDevice:withError:
findMyAccessoryManager:didReceiveKeyRollIndex:fromDevice:withError:
findMyAccessoryManager:didGetMultiStatus:fromDevice:withError:
unsignedLongValue
findMyAccessoryManager:didFetchBatteryStatus:forDevice:withError:
findMyAccessoryManager:didFetchBatteryStatus:forDevice:
findMyAccessoryManager:didDetectCrashOnDevice:
getDataStatusForUUID:
errorFromFragmentationStatus:
dataForUUID:
findMyAccessoryManager:didDumpLogData:ofType:fromDevice:withError:
findMyAccessoryManager:didUnpairFromDevice:withError:
findMyAccessoryManager:didSetDeviceTypeOnDevice:withError:
findMyAccessoryManager:didSetObfuscatedIdentifierOnDevice:withError:
findMyAccessoryManager:didSetNearOwnerTimeoutOnDevice:withError:
findMyAccessoryManager:didSetWildConfigurationOnDevice:withError:
findMyAccessoryManager:didFetchUserStats:fromDevice:withError:
findMyAccessoryManager:didRollWildKeyOnDevice:withError:
findMyAccessoryManager:didSetAccelerometerSlopeModeConfigurationForDevice:withError:
findMyAccessoryManager:didFetchAccelerometerSlopeModeConfiguration:forDevice:withError:
findMyAccessoryManager:didSetAccelerometerOrientationModeConfigurationForDevice:withError:
findMyAccessoryManager:didFetchAccelerometerMode:forDevice:withError:
findMyAccessoryManager:didSetUnauthorizedPlaySoundRateLimitFromDevice:withError:
findMyAccessoryManager:didFetchFirmwareVersion:fromDevice:withError:
findMyAccessoryManager:didCompleteHawkeyeTaskWithOpcode:fromDevice:withError:
findMyAccessoryManager:didSetHawkeyeUTMotionConfigForDevice:withError:
findMyAccessoryManager:didFetchTxPower:fromDevice:withError:
findMyAccessoryManager:didStartAggressiveAdvertisingOnDevice:withError:
findMyAccessoryManager:didStopAggressiveAdvertisingOnDevice:withError:
findMyAccessoryManager:didCompleteAggressiveAdvertisingOnDevice:withError:
findMyAccessoryManager:didStartUnauthorizedAggressiveAdvertisingOnDevice:withError:
findMyAccessoryManager:didFetchHawkeyeAISProductData:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeAISManufacturerName:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeAISModelName:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeAISModelColorCode:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeAISAccessoryCategory:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeAISAccessoryCapabilities:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeAISFindMyVersion:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeAISBatteryType:fromDevice:withError:
checkAvailabilityForPairedOwnerInformationControlPointMessages:messageName:
findMyAccessoryManager:didFetchHawkeyeSerialNumber:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeCurrentPrimaryKey:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeiCloudIdentifier:fromDevice:withError:
findMyAccessoryManager:didObserveAdvertisementWithDate:address:advertisementData:status:rssi:reserved:uuid:ownershipType:channel:
findMyAccessoryManager:didFetchCurrentScanParameters:withError:
clearForUUID:
findMyAccessoryManager:didFailWithError:forDevice:
sendMessage:withPayload:
numberWithUnsignedInteger:
numberWithUnsignedShort:
numberWithUnsignedChar:
numberWithUnsignedInt:
numberWithBool:
sendMessage:
connectDevice:
disconnectDevice:
fetchConnectionStateForDevice:
startPlayingSoundSequence:onDevice:
startPlayingUnauthorizedSoundOnDevice:
startPlayingUnauthorizedSoundSequence:onDevice:
stopPlayingSoundOnDevice:
stopPlayingUnauthorizedSoundOnDevice:
getMultiStatusFromDevice:
dumpLogDataOfType:fromDevice:
induceCrashOnDevice:
unpairFromDevice:
unpairFromDeviceWithAddress:
setNearOwnerTimeout:onDevice:
setDeviceType:onDevice:
setObfuscatedIdentifier:onDevice:
setWildConfiguration:onDevice:
rollWildKeyOnDevice:
setKeyRollInterval:onDevice:
setBatteryStatus:forDevice:
fetchBatteryStatusForDevice:
fetchUserStatsWithPersistence:fromDevice:
scanForNearbyOwner
scanForHELE
scanForNearbyDevicesLong
stopScanForNearbyDevicesLong
fetchCurrentScanParameters
setAccelerometerSlopeModeConfiguration:forDevice:
fetchAccelerometerSlopeModeConfigurationForDevice:
setAccelerometerOrientationModeConfiguration:forDevice:
fetchAccelerometerOrientationModeConfigurationForDevice:
setUnauthorizedPlaySoundRateLimit:forDevice:
fetchTxPower:
fetchTxPowerFromDevice:asOwner:
startAggressiveAdvertisingOnDevice:withTimeout:
stopAggressiveAdvertisingOnDevice:
startUnauthorizedAggressiveAdvertisingOnDevice:
setHawkeyeTestMode:forDevice:
setHawkeyeUTMotionConfigWithSeparatedUTTimeoutSeconds:separatedUTBackoffTimeoutSeconds:forDevice:
fetchHawkeyeAISProductData:
fetchHawkeyeAISManufacturerName:
fetchHawkeyeAISModelName:
fetchHawkeyeAISModelColorCode:
fetchHawkeyeAISAccessoryCategory:
fetchHawkeyeAISAccessoryCapabilities:
fetchHawkeyeAISFindMyVersion:
fetchHawkeyeAISBatteryType:
fetchHawkeyeSerialNumber:
fetchHawkeyeCurrentPrimaryKey:
fetchHawkeyeiCloudIdentifier:
startMonitoringForAvengerAdvertisementsForBTFinding
stopMonitoringForAvengerAdvertisementsForBTFinding
_accumulator
T@"<CLFindMyAccessoryManagerDelegate>",W,N,V_delegate
coordinate
horizontalAccuracy
initWithGEOCoordinate:
setAltitude:
setHorizontalAccuracy:
verticalAccuracy
setVerticalAccuracy:
allObjects
componentsJoinedByString:
isDisputed
iso3166CountryCode
disputedTerritoryName
interestedPartyIso3166CountryCodes
setByAddingObjectsFromArray:
fetchPossibleTerritoriesForLocation:responseQueue:responseBlock:
unionSet:
uniqueIdentifier
initWithQueue:defaultConfig:
addConfigForIsoList:config:error:
addConfigForRegionList:config:error:
fetchConfigForLocation:withReply:
fetchInfoForLocation:withReply:
setExtendedBorderDetection:withExtendedDistance:
_config
sharedApplication
applicationState
fileURLWithPath:isDirectory:
dataWithContentsOfURL:options:error:
instancesRespondToSelector:
dataWithContentsOfURL:
domain
writeToURL:options:error:
applyRangeEstimation
transmitPower
rangeForTransmitPower:
filterOutliers:options:
rangeForReductiveFilterOptions:
reverseObjectEnumerator
firstObject
distanceFromLocation:
timestamp
timeIntervalSince1970
insertObject:atIndex:
deriveLocationFromLocations:options:
biasRateInMeasurement
setDateFormat:
stringFromDate:
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:
sortedArrayUsingDescriptors:
beaconType
setBiasRateInMeasurement:
setApplyRangeEstimation:
filterOutliers:
deriveLocationFromLocations:
applyFilterToLocationObservations:options:
applyFilterToLocationTrace:options:
showCalibrationAlert
dismissCalibrationAlert
fHeading
dateWithTimeIntervalSinceReferenceDate:
magneticHeading
trueHeading
headingAccuracy
T@"NSDate",R,C,N
mutableCopy
addEntriesFromDictionary:
processInfo
isiOSAppOnMac
processName
compare:
containsValueForKey:
initWithOdometer:deltaDistance:deltaDistanceAccuracy:
odometer
deltaDistance
deltaDistanceAccuracy
_odometer
_deltaDistance
_deltaDistanceAccuracy
Td,R,N,V_odometer
Td,R,N,V_deltaDistance
Td,R,N,V_deltaDistanceAccuracy
initWithCoordinateFused:coordinateFusedWithVL:coordinate:horizontalAccuracy:referenceFrame:altitude:verticalAccuracy:course:courseAccuracy:
isCoordinateFused
isCoordinateFusedWithVL
course
courseAccuracy
_coordinateFused
_coordinateFusedWithVL
_referenceFrame
_horizontalAccuracy
_altitude
_verticalAccuracy
_course
_courseAccuracy
_coordinate
coordinateFused
TB,R,N,GisCoordinateFused,V_coordinateFused
coordinateFusedWithVL
TB,R,N,GisCoordinateFusedWithVL,V_coordinateFusedWithVL
T{?=dd},R,N,V_coordinate
Td,R,N,V_horizontalAccuracy
Ti,R,N,V_referenceFrame
Td,R,N,V_altitude
Td,R,N,V_verticalAccuracy
Td,R,N,V_course
Td,R,N,V_courseAccuracy
thoroughfare
subThoroughfare
locality
subLocality
administrativeArea
subAdministrativeArea
postalCode
countryCode
country
inlandWater
ocean
source
_cLMapItemSourceFromRLMapItemSource:
areasOfInterest
geoMapItemHandle
initWithLocation:addressDictionary:region:areasOfInterest:mapItemSource:geoMapItemHandle:meCardAddress:
defaultManager
currentDirectoryPath
stringByAppendingString:
silo
initWithRegistrationMessageName:messageDictionary:dispatchQueue:codeBlock:
newAssertionForBundleIdentifier:withReason:withCallbackQueue:andBlock:
newAssertionForBundle:withReason:withCallbackQueue:andBlock:
_updateVLLocalizationResult:
newAssertionForBundleIdentifier:bundlePath:reason:level:
newAssertionForBundleIdentifier:withReason:level:
newAssertionForBundle:withReason:level:
initWithIdentifier:onBehalfOf:regionType:notifyOnEntry:notifyOnExit:conservativeEntry:emergency:
initWithCenter:radius:identifier:
initWithIdentifier:onBehalfOf:regionType:notifyOnEntry:notifyOnExit:conservativeEntry:emergency:deviceId:handoffTag:
lengthOfBytesUsingEncoding:
initLegacyObjectWithCoder:
decodeObject
encodeObject:
initWithClientRegion:
initCircularRegionWithCenter:radius:identifier:
initWithIdentifier:andRegionType:
containsCoordinate:
setType:
_notifyOnEntry
_notifyOnExit
_conservativeEntry
_emergency
_type
_radius
_deviceId
_handoffTag
_onBehalfOfBundleId
_center
T@"NSUUID",R,C,N,V_deviceId
T@"NSString",R,C,N,V_handoffTag
T@"NSString",C,N,V_onBehalfOfBundleId
TB,V_conservativeEntry
Ti,V_referenceFrame
TB,V_emergency
Ti,V_type
T{CLLocationCoordinate2D=dd},R,V_center
Td,R,V_radius
T@"NSString",R,C,N,V_identifier
TB,V_notifyOnEntry
TB,V_notifyOnExit
timeIntervalSinceDate:
dataWithBytes:length:
initWithDesiredNextKeyRollDate:nextWildIndex:
encodeConfiguration
desiredKeyRollDate
nextWildIndex
_nextWildIndex
_desiredKeyRollDate
T@"NSDate",R,V_desiredKeyRollDate
TI,R,V_nextWildIndex
initWithCenter:radius:referenceFrame:allowMonitoringWhenNearby:lowPower:identifier:onBehalfOfBundleId:notifyOnEntry:notifyOnExit:conservativeEntry:emergency:
decodeObjectForKey:
geoReferenceFrame
initWithCenter:radius:identifier:onBehalfOfBundleId:
initWithCenter:radius:identifier:nearbyAllowed:
initNearbyAllowedWithCenter:radius:identifier:
initForLowPowerWithCenter:radius:identifier:
geoCenter
geoRadius
setGeoReferenceFrame:
_isLowPower
_allowMonitoringWhileNearby
_geoReferenceFrame
_geoRadius
_desiredAccuracy
_geoCenter
T{CLLocationCoordinate2D=dd},R,N,V_geoCenter
Td,R,N,V_geoRadius
Ti,N,V_geoReferenceFrame
TB,R,N,V_isLowPower
Td,R,N,V_desiredAccuracy
TB,R,N,V_allowMonitoringWhileNearby
T{CLLocationCoordinate2D=dd},R
Td,R
setGutsWithProximityUUID:major:minor:notifyOnDisplay:
initWithUUID:major:minor:identifier:notifyEntryStateOnDisplay:
getUUIDBytes:
charValue
_measuredPowerForDevice
dataWithCapacity:
appendBytes:length:
_initWithUUID:major:minor:
proximityUUID
initWithProximityUUID:identifier:
initWithProximityUUID:major:identifier:
initWithProximityUUID:major:minor:identifier:
peripheralDataWithMeasuredPower:
_notifyEntryStateOnDisplay
_definitionMask
_UUID
_major
_minor
Ti,R,N,V_definitionMask
T@"CLBeaconIdentityConstraint",R,C,N
T@"NSUUID",R,C,N,V_UUID
T@"NSUUID",R,C,N
T@"NSNumber",R,C,N,V_major
T@"NSNumber",R,C,N,V_minor
TB,V_notifyEntryStateOnDisplay
proximity
accuracy
rssi
initWithProximityUUID:major:minor:proximity:accuracy:rssi:
T@"NSNumber",R,C,N
getBytes:length:
descriptionWithMemberIndent:endIndent:
transform
covariance
setTimestamp:
setLocation:
setTransform:
setCovariance:
setConfidence:
_confidence
_timestamp
_location
_transform
_covariance
Td,N,V_timestamp
T{?=d},N,V_location
T{?=[4]},N,V_transform
T{?=[6[6f]]},N,V_covariance
Tf,N,V_confidence
stringByAppendingPathComponent:
scenariosPath
contentsOfDirectoryAtPath:error:
stringByDeletingPathExtension
stringByAppendingPathExtension:
fileURLWithPath:
loadScenarioFromURL:
isFileURL
path
fileExistsAtPath:
pathExtension
daemonProxy
setSimulationScenario:
setLocationDeliveryBehavior:
setIntermediateLocationDistance:
setLocationInterval:
setLocationTravellingSpeed:
setLocationRepeatBehavior:
clearSimulatedLocations
appendSimulatedLocations:
startLocationSimulation
stopLocationSimulation
simulateVisit:
simulateSignificantLocationChange:
getFencesForBundleID:withReply:
simulateFenceWithBundleID:andFenceID:eventType:atLocation:
simulateBeaconWithProximityUUID:major:minor:eventType:
availableScenarios
localizedNameForScenario:
selectScenario:
setLocationDistance:
setLocationSpeed:
appendSimulatedLocation:
getFencesForBundleID:withHandler:
clearSimulatedCells
setSimulatedCell:
startCellSimulation
stopCellSimulation
setSimulatedCellRegistrationStatus:
setWifiScanResults:
startWifiSimulation
stopWifiSimulation
setSimulatedWifiPower:
flush
locationDeliveryBehavior
locationDistance
locationInterval
locationSpeed
locationRepeatBehavior
_locationDistance
_locationInterval
_locationSpeed
_locationRepeatBehavior
_locationDeliveryBehavior
T@"<CLSimulationXPCServerInterface>",R
TC,N,V_locationDeliveryBehavior
Td,N,V_locationDistance
Td,N,V_locationInterval
Td,N,V_locationSpeed
TC,N,V_locationRepeatBehavior
initWithUUID:
initWithUUID:major:
initWithUUID:major:minor:
setUUID:
T@"NSUUID",C,N,V_UUID
didReceiveLocationPushPayload:reply:
serviceExtensionWillTerminate
serviceExtensionPerformCleanup
_extensionAuxiliaryHostProtocol
_extensionAuxiliaryVendorProtocol
localizedStringFromDate:dateStyle:timeStyle:
T@"NSDate",R,N
fSpeed
speed
initWithCoordinate:horizontalAccuracy:arrivalDate:departureDate:detectionDate:placeInference:
arrivalDate
departureDate
detectionDate
_placeInference
distantFuture
distantPast
hasArrivalDate
hasDepartureDate
initWithCoordinate:horizontalAccuracy:arrivalDate:departureDate:detectionDate:
_arrivalDate
_departureDate
_detectionDate
__placeInference
T@"NSDate",R,C,N,V_detectionDate
T@"_CLPlaceInference",R,N,V__placeInference
T@"NSDate",R,C,N,V_arrivalDate
T@"NSDate",R,C,N,V_departureDate
T{CLLocationCoordinate2D=dd},R,N,V_coordinate
objectEnumerator
setSouthLat:
setWestLng:
setNorthLat:
setEastLng:
_initWithCircularRegion:
main
responseSilo
setResponseSilo:
_geocodeCompletionHandler
_ticket
_responseSilo
T@"CLSilo",&,V_responseSilo
reverseGeocodeLocation:preferredLocale:heading:localResultsOnly:completionHandler:
isGeocoding
_notifyNoResult
sharedService
defaultTraits
clearDeviceDisplayLanguages
localeIdentifier
canonicalLanguageIdentifierFromString:
addDeviceDisplayLanguage:
_initWithCLClientLocation:
setHeading:
coarseMetaData
unarchivedObjectOfClass:fromData:error:
setCoarseMetadata:
ticketForReverseGeocodeLocation:placeTypeLimit:traits:
_cl_ticketForReverseGeocodeLocation:traits:
_ticket:didReturnError:partialResultForLocation:
_ticket:didReturnGeoMapItems:
submitWithHandler:networkActivity:
_ensureMainThreadExecutionContextForBlock:
geocodeAddressDictionary:preferredLocale:completionHandler:
_cl_ticketForForwardGeocodeAddressDictionary:maxResults:traits:
_ticket:didReturnError:
submitWithRefinedHandler:networkActivity:
geocodeAddressString:inRegion:preferredLocale:completionHandler:
setDeviceLocation:
setMapRegion:
_cl_ticketForForwardGeocodeString:maxResults:traits:
resolveMapItemLocallyFromHandle:completionHandler:
cancel
_notifyCancel
placemarkWithGEOMapItem:
_notifyResult:
_notifyError:
_notifyResult:error:
_timeZoneAtLocation:
hydrateGeoMapItemLocallyFromHandle:completionHandler:
reverseGeocodeLocation:localResultsOnly:completionHandler:
reverseGeocodeLocation:preferredLocale:completionHandler:
reverseGeocodeLocation:heading:completionHandler:
reverseGeocodeLocation:heading:localResultsOnly:completionHandler:
geocodeAddressDictionary:completionHandler:
geocodeAddressString:completionHandler:
geocodeAddressString:inRegion:completionHandler:
cancelGeocode
_notifyPartialResult:
T@"CLSilo",S_setResponseSilo:
geocoding
TB,R,N,GisGeocoding
setSpeed:
setCourse:
geocodePostalAddress:preferredLocale:completionHandler:
street
city
state
ISOCountryCode
geocodePostalAddress:completionHandler:
getTechnologiesInUseWithReplyBlock:
getMicroLocationInternalVersionWithReplyBlock:
getZaxisStatsWithReplyBlock:
getGnssBandsInUseWithReplyBlock:
getAppsUsingLocationWithReplyBlock:
setLocationDefaultForKey:andValue:replyBlock:
getLocationDefaultForKey:replyBlock:
timeZoneForLocation:replyBlock:
setGestureServiceEnabled:replyBlock:
triggerExpiredAuthorizationPurgeWithReplyBlock:
setTemporaryAuthorizationStatusForBundleId:orBundlePath:statusData:replyBlock:
getTemporaryAuthorizationStatusForBundleId:orBundlePath:replyBlock:
modifyOrSetAuthorizationTime:forBundleID:orBundlePath:replyBlock:
performMigrationWithReplyBlock:
shutdownDaemonWithReplyBlock:
setAuthorizationStatus:withCorrectiveCompensation:forBundleID:orBundlePath:replyBlock:
setPrivateMode:replyBlock:
getPrivateMode:
setLocationServicesEnabled:replyBlock:
getLocationServicesEnabledWithReplyBlock:
setAuthorizationPromptMapDisplayEnabled:replyBlock:
getAuthorizationPromptMapDisplayEnabledWithReplyBlock:
getGestureServiceEnabledWithReplyBlock:
pingDaemonWithReplyBlock:
getAuthorizationStatusForBundleID:orBundlePath:replyBlock:
getIncidentalUseModeForBundleID:orBundlePath:replyBlock:
getPrecisionPermissionForBundleID:orBundlePath:replyBlock:
displayStatisticsWithReplyBlock:
dumpLogsWithDescription:replyBlock:
copyLastLogWithReplyBlock:
getMonitoredRegionsForBundleID:orBundlePath:replyBlock:
checkAndExerciseAuthorizationForBundleID:orBundlePath:services:replyBlock:
registerCircularInterestZoneWithId:latitude:longitude:radius:serviceMaskOperator:provenanceType:forBundleId:orBundlePath:replyBlock:
registerPhenolicInterestZoneWithId:phenolicLocation:serviceMaskOperator:provenanceType:forBundleId:orBundlePath:replyBlock:
setRelevance:forInterestZoneWithId:registeredForBundleId:orBundlePath:replyBlock:
deleteInterestZoneWithId:registeredForBundleId:orBundlePath:replyBlock:
getLocationForBundleID:orBundlePath:dynamicAccuracyReductionEnabled:allowsAlteredAccessoryLocations:replyBlock:
getGroundAltitudeForBundleID:orBundlePath:location:replyBlock:
resetAllClientsWithReplyBlock:
applyArchivedAuthorizationDecisions:withConfirmationToken:replyBlock:
getArchivedAuthorizationDecisionsWithReplyBlock:
setStatusBarIconEnabledForEntityClass:enabled:replyBlock:
getStatusBarIconEnabledForEntityClass:replyBlock:
getStatusBarIconState:
setMapMatchingRouteHint:routingType:stepType:replyBlock:
getAccessoryTypeBitSetWithReplyBlock:
getPipelinedCacheWithReply:
setTemporaryAuthorizationGranted:forBundleID:orBundlePath:orAuditToken:byLocationButton:voiceInteractionEnabled:replyBlock:
getActivitiesWithReplyBlock:
updateCorrectiveCompensationChoiceForOutstandingPrompt:replyBlock:
setIncidentalUseMode:forBundleID:orBundlePath:replyBlock:
setAuthorizationStatusByType:withCorrectiveCompensation:andZoneIdentifier:forBundleID:orBundlePath:replyBlock:
gyroCalibrationDatabaseSupportsMiniCalibrationWithReplyBlock:
setBackgroundIndicatorEnabled:forBundleID:orBundlePath:replyBlock:
getOscarTimeSyncWithReplyBlock:
notifyPassKitPayment:transaction:info:
notifyWeatherForecast:airQualityConditions:hourlyForecasts:dailyForecasts:latitude:longitude:
synchronousRemoteObjectProxyWithErrorHandler:
synchronousRemoteObject
dataWithPropertyList:format:options:error:
propertyListWithData:options:format:error:
handleFailureInFunction:file:lineNumber:description:
initWithName:
sharedServiceClient
setAuthorizationStatus:withCorrectiveCompensation:forBundleID:orBundlePath:
getIncidentalUseMode:forBundleID:orBundlePath:
clearLocationAuthorizations
getArchivedAuthorizationDecisionsWithError:
applyArchivedAuthorizationDecisions:
copyAppsUsingLocation
copyTechnologiesInUse
copyMicroLocationInternalVersion
copyZaxisStats
copyGnssBandsInUse
setLocationDefaultForKey:value:
getLocationDefaultForKey:
timeZoneAtLocation:
getPrivateMode
pingDaemon
getLocationServicesEnabled:
getAuthorizationPromptMapDisplayEnabled:
setTemporaryAuthorizationStatusForBundleId:orBundlePath:statusData:
getTemporaryAuthorizationStatusForBundleId:orBundlePath:error:
modifyOrSetAuthorizationTime:forBundleID:orBundlePath:
triggerExpiredAuthorizationPurgeOnClientManager
setGestureServiceEnabled:
getGestureServiceEnabled:
getAuthorizationStatus:forBundleID:orBundlePath:
getPrecisionPermission:forBundleID:orBundlePath:
performMigration
displayStatistics
dumpLogs:
copyMonitoredRegionsForBundleIdentifier:orBundlePath:
checkAndExerciseAuthorizationForBundleID:orBundlePath:services:error:
registerCircularInterestZoneWithId:latitude:longitude:radius:serviceMaskOperator:provenanceType:forBundleId:orBundlePath:error:
registerPhenolicInterestZoneWithId:phenolicLocation:serviceMaskOperator:provenanceType:forBundleId:orBundlePath:error:
setRelevance:forInterestZoneWithId:registeredForBundleId:orBundlePath:error:
deleteInterestZoneWithId:registeredForBundleId:orBundlePath:error:
getLocationForBundleID:orBundlePath:dynamicAccuracyReductionEnabled:allowsAlteredAccessoryLocations:location:
getGroundAltitudeForBundleID:orBundlePath:location:groundAltitude:
setMapMatchingRouteHint:count:routingType:stepType:
getAccessoryTypeBitSet
copyLastLog
setStatusBarIconEnabled:forEntityClass:
getStatusBarIconEnabled:forEntityClass:
getStatusBarIconState
getPipelinedCache
getMotionSensorLogs
getAccessoryMotionSensorLogs
setTemporaryAuthorizationGranted:forBundleID:orBundlePath:orAuditToken:byLocationButton:voiceInteractionEnabled:
copyActivityAlarms
setAuthorizationStatusByType:withCorrectiveCompensation:andZoneIdentifier:forBundleID:orBundlePath:
setIncidentalUseMode:forBundleID:orBundlePath:
setBackgroundIndicatorForBundleID:orBundlePath:enabled:
gyroCalibrationDatabaseSupportsMiniCalibration:
timeSyncMachTimeStamp:oscarTimeStamp:
valueWithBytes:objCType:
_updateARSessionState:
addressDictionary
region
geoMapItemStorage
timeZone
_cLMapItemSource
_geoMapItemHandle
mecardAddress
mapItemStorageForGEOMapItem:
geoFenceMapRegion
hasNorthLat
hasSouthLat
hasEastLng
hasWestLng
northLat
southLat
westLng
eastLng
timezone
_initWithGeoMapItem:
initWithPlacemark:
geoAddress
formattedAddressLines
stringWithString:
appendString:
isValid
initWithLocation:addressDictionary:region:areasOfInterest:
ISOcountryCode
fullThoroughfare
fetchFormattedAddress:queue:
_geoMapItem
T@"CLRegion",R,C,N
T@"NSTimeZone",R,C,N
T@"NSDictionary",R,C,N
T@"NSString",R,C,N
T@"NSArray",R,C,N
postalAddressWithDictionaryRepresentation:
postalAddress
T@"CNPostalAddress",R,N
initWithBeaconType:
initWithBeaconType:transmitPower:
_beaconType
_transmitPower
_biasRateInMeasurement
_applyRangeEstimation
Td,N,V_biasRateInMeasurement
Td,N,V_applyRangeEstimation
TQ,R,N,V_beaconType
Td,R,N,V_transmitPower
initWithInputItems:listenerEndpoint:contextUUID:
_principalObject
didReceiveLocationPushPayload:completion:
completeRequestReturningItems:completionHandler:
initWithCoordinate:
initWithClientCoordinate:
getDistanceFrom:
initNearbyAllowedWithVertices:identifier:
_vertices
T@"NSArray",R,C,N,V_vertices
Ti,V_geoReferenceFrame
submitSample:
fetchStateWithReply:
setClass:forSelector:argumentIndex:ofReply:
connect
currentStateDictionary
_updateVIOEstimation:
initWithBytes:length:
vanBurenVersion
rtKitVersion
roseAPVersion
roseDSPVersion
calibrationDataVersion
initWithData:
specificationVersion
hardwareVersion
_version
T@"NSString",R
_handle
T^v,R,N
primaryEntityClassForLocationDictionary:
activeLocationServiceTypesForLocationDictionary:
isEntityAuthorizedForLocationDictionary:
entityAuthorizationForLocationDictionary:
allKeys
bundleWithPath:
setEntityAuthorization:withCorrectiveCompensationType:forLocationDictionary:
setStatusBarIconEnabled:forLocationEntityClass:
isStatusBarIconEnabledForLocationEntityClass:
entityClassesForLocationDictionary:
isLocationActiveForLocationDictionary:
dateLocationLastUsedForLocationDictionary:
hasUsedBackgroundLocationServices:
allowableAuthorizationForLocationDictionary:
correctiveCompensationStatusForLocationDictionary:
incidentalUseModeForLocationDictionary:
interestZonesIdentifierListForLocationDictionary:
interestZoneDictionaryIdentifiedById:forLocationDictionary:
isInterestZoneReleventForLocationDictionary:
setEntityAuthorized:forLocationDictionary:
setEntityAuthorization:forLocationDictionary:
setEntityAuthorization:withCorrectiveCompensation:forLocationDictionary:
backgroundIndicatorEnabledForLocationDictionary:
setBackgroundIndicatorEnabled:forLocationDictionary:
findMyAccessoryFirmwareUpdateManager:didFailWithError:forDevice:
findMyAccessoryFirmwareUpdateManager:personalizationRequestForDevice:completedWithInfo:andError:
findMyAccessoryFirmwareUpdateManager:firmwareUpdateRequestForDevice:completedWithError:
findMyAccessoryFirmwareUpdateManager:useLocalAssetRequestForProductGroup:andProductNumber:completedWithError:
findMyAccessoryFirmwareUpdateManager:useDefaultAssetRequestForProductGroup:andProductNumber:completedWithError:
findMyAccessoryFirmwareUpdateManager:didFetchWhetherLocalFirmwareAssetIsInUseForProductGroup:andProductNumber:withResult:
getPersonalizationInfoForDevice:
updateFirmwareForDevice:withAssetURL:
abortFirmwareUpdateForDevice:
useLocalFirmwareAssetFromURL:forProductGroup:forProductNumber:withSandboxExtension:
useDefaultFirmwareAssetSourceForProductGroup:andProductNumber:
fetchWhetherLocalFirmwareAssetIsInUseForProductGroup:andProductNumber:
T@"<CLFindMyAccessoryFirmwareUpdateDelegate>",W,N,V_delegate
earlierDate:
laterDate:
placemark
_loiIdentifier
_userType
_placeType
_placemark
_referenceLocation
_preferredName
__loiIdentifier
TQ,R,N,V_userType
TQ,R,N,V_placeType
T@"CLPlacemark",R,N,V_placemark
T@"CLLocation",R,N,V_referenceLocation
Td,R,N,V_confidence
T@"NSString",R,N,V_preferredName
T@"NSUUID",R,N,V__loiIdentifier
initWithCenter:radius:identifier:onBehalfOfBundleId:referenceFrame:
initWithCenter:radius:referenceFrame:lowPower:identifier:onBehalfOfBundleId:notifyOnEntry:notifyOnExit:conservativeEntry:emergency:deviceId:handoffTag:
initWithDesiredNextKeyRollDate:keyRollInterval:keysRemainingInWildPeriod:wildPeriodKeyCount:
keyRollInterval
keysRemaining
keyCount
_keysRemaining
_keyCount
_keyRollInterval
TI,R,V_keyRollInterval
TS,R,V_keysRemaining
TS,R,V_keyCount
initWithClientLocation:matchInfo:trustedTimestamp:groundAltitude:fusionInfo:rawHorizontalAccuracy:rawAltitude:rawVerticalAccuracy:rawCourseAccuracy:positionContextStateType:probabilityPositionContextStateIndoor:probabilityPositionContextStateOutdoor:gnssOdometerInfo:
initWithClientLocation:clientLocationPrivate:
initWithClientLocation:matchInfo:trustedTimestamp:groundAltitude:fusionInfo:rawHorizontalAccuracy:rawAltitude:rawVerticalAccuracy:rawCourseAccuracy:positionContextStateType:probabilityPositionContextStateIndoor:probabilityPositionContextStateOutdoor:gnssOdometerInfo:coarseMetaData:
initWithClientLocation:matchInfo:trustedTimestamp:groundAltitude:
fMatchInfo
fGroundAltitude
fTrustedTimestamp
fCoarseMetaData
fFusionInfo
fRawHorizontalAccuracy
fRawAltitude
fRawVerticalAccuracy
fRawCourseAccuracy
fPositionContextState
fProbabilityPositionContextStateIndoor
fProbabilityPositionContextStateOutdoor
fGnssOdometerInfo
initWithLevel:
level
Tq,R,N,Vlevel
initWithSoftwareSimulationState:andExternalAccessoryState:
isSimulatedBySoftware
isProducedByAccessory
TB,R,N,VisSimulatedBySoftware
TB,R,N,VisProducedByAccessory
initWithLatitude:longitude:
_initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:courseAccuracy:speed:speedAccuracy:timestamp:floor:sourceParams:
sourceInformation
numberWithDouble:
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:speed:timestamp:
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:courseAccuracy:speed:speedAccuracy:timestamp:
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:courseAccuracy:speed:speedAccuracy:timestamp:sourceInfo:
jsonObject
rawCoordinate
rawAltitude
ellipsoidalAltitude
rawHorizontalAccuracy
rawVerticalAccuracy
speedAccuracy
rawCourse
rawCourseAccuracy
integrity
trustedTimestamp
signalEnvironmentType
positionContextState
probabilityPositionContextStateIndoor
probabilityPositionContextStateOutdoor
floor
snapToResolution:
propagateLocationToTime:
iso6709Notation
initWithClientLocation:matchInfo:trustedTimestamp:groundAltitude:fusionInfo:rawHorizontalAccuracy:rawCourseAccuracy:coarseMetaData:
T{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB},R,N
T@"NSString",R,N
T@"NSData",R,N
TI,R,N
TB,R,N,GisCoordinateFused
TB,R,N,GisCoordinateFusedWithVL
T@"CLFloor",R,C,N
T@"CLLocationSourceInformation",R,N
initWithClientLocation:matchInfo:trustedTimestamp:
initWithClientLocation:matchInfo:
matchInfo
T@"CLLocationMatchInfo",R,N
_groundAltitude
T@"_CLLocationGroundAltitude",R,N
_fusionInfo
T@"_CLLocationFusionInfo",R,N
gnssOdometerInfo
T@"CLLocationGnssOdometerInfo",R,N
initWithType:encodedSequence:
initWithType:
addSoundBlockWithAsset:loopCount:duration:
defaultSequence
shortSequence
rangingSequence
encodedSequence
_encodedSequence
T@"NSData",R
TQ,R,V_type
initWithMacAddressAsUInt:secureRangingKeyID:
_macAddress
_secureRangingKeyID
initWithPeer:date:distanceMeters:accuracyMeters:initiator:shouldUnlock:
_peer
_date
_distanceMeters
_accuracyMeters
_initiator
_shouldUnlock
uintMacAddressFromString:
initWithMacAddressAsString:secureRangingKeyID:
macAddress
hexStringMacAddressFromUInt:
decodeInt64ForKey:
encodeInt64:forKey:
getMacAddressAsString
secureRangingKeyID
isEqualToPeer:
getCharacters:range:
scannerWithString:
scanHexInt:
initWithMacAddressAsData:secureRangingKeyID:
TQ,R,N
initWithPeer:date:distanceMeters:accuracyMeters:initiator:
floatValue
initWithPeer:timestamp:distanceMeters:accuracyMeters:initiator:
peer
distanceMeters
accuracyMeters
shouldUnlock
initiator
isInitiator
T@"_CLRangingPeer",R,C,N
TB,R,N,GisInitiator,V_initiator
setLatitude:
setLongitude:
_latitude
_longitude
Td,N,V_latitude
Td,N,V_longitude
initWithCoordinate:altitude:timetamp:
initWithLatitude:longitude:altitude:timetamp:
setCoordinate:
T@"_CLLSLLocationCoordinate",C,N,V_coordinate
Td,N,V_altitude
polylines
roadID
setRoadID:
setPolylines:
_roadID
_polylines
TQ,N,V_roadID
T@"NSArray",C,N,V_polylines
roadSegment
setRoadSegment:
_roadSegment
T@"_CLLSLMapRoadSegment",C,N,V_roadSegment
rotationFromGlobalToDeviceFrame
rotationFromGlobalToCameraFrame
rotationalAccuracyInRadians
globalReferenceFrame
supplemantaryInfo
setRotationFromGlobalToDeviceFrame:
setRotationFromGlobalToCameraFrame:
setRotationalAccuracyInRadians:
setGlobalReferenceFrame:
setSupplemantaryInfo:
_globalReferenceFrame
_supplemantaryInfo
_rotationalAccuracyInRadians
_rotationFromGlobalToDeviceFrame
_rotationFromGlobalToCameraFrame
T{?=[3]},N,V_rotationFromGlobalToDeviceFrame
T{?=[3]},N,V_rotationFromGlobalToCameraFrame
T,N,V_rotationalAccuracyInRadians
Td,N,V_confidence
TQ,N,V_globalReferenceFrame
T@"_CLLSLLocation",C,N,V_location
T@"_CLLSLHeadingSupplInfo",C,N,V_supplemantaryInfo
headings
status
setStatus:
setHeadings:
_status
_headings
Ti,N,V_status
T@"NSArray",C,N,V_headings
objCType
getValue:
value:withObjCType:
trackingState
originTimestamp
inertialStateInfo
inertialState
inertialCovarianceInfo
inertialCovariance
cameraPose
cameraIntrinsics
cameraImageResolution
setTrackingState:
setOriginTimestamp:
setInertialStateInfo:
setInertialState:
setInertialCovarianceInfo:
setInertialCovariance:
setCameraPose:
setCameraIntrinsics:
setCameraImageResolution:
_trackingState
_originTimestamp
_inertialState
_inertialCovariance
_cameraImageResolution
_inertialStateInfo
_inertialCovarianceInfo
_cameraIntrinsics
_cameraPose
Ti,N,V_trackingState
Td,N,V_originTimestamp
T{?=QCCCCCCCCCCC},N,V_inertialStateInfo
T@"NSData",C,N,V_inertialState
T{?=QCCCCCCCCCCC},N,V_inertialCovarianceInfo
T@"NSData",C,N,V_inertialCovariance
T{?=[4]},N,V_cameraPose
T{?=[3]},N,V_cameraIntrinsics
T{CGSize=dd},N,V_cameraImageResolution
data
subdataWithRange:
dataWithData:
appendData:
uuidToData
setUuidToData:
maxBytesPerUUID
setMaxBytesPerUUID:
_uuidToData
_maxBytesPerUUID
T@"NSMutableDictionary",N,V_uuidToData
TQ,N,V_maxBytesPerUUID
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v32@0:8@16@?24
v24@0:8@"NSArray"16
v32@0:8@"NSArray"16@?<v@?>24
v16@0:8
@32@0:8@16@24
v20@0:8B16
@"NSObject<OS_dispatch_queue>"
@"NSXPCConnection"
@"CLLocationManagerRoutine"
@24@0:8@16
@"_CLLocationManagerRoutineProxy"
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@48@0:8@16@24@32@40
@"NSData"
@"NSNumber"
r*16@0:8
@32@0:8@16^v24
@40@0:8@16^v24@?32
d16@0:8
v24@0:8d16
i16@0:8
v20@0:8i16
q16@0:8
v24@0:8q16
v24@0:8@?16
B40@0:8^v16Q24^{os_state_hints_s=I*II}32
^v16@0:8
{_CLLocationManagerStateTrackerState="distanceFilter"d"desiredAccuracy"d"updatingLocation"B"requestingLocation"B"requestingRanging"B"updatingRanging"B"updatingHeading"B"headingFilter"d"allowsLocationPrompts"B"allowsAlteredAccessoryLocations"B"dynamicAccuracyReductionEnabled"B"previousAuthorizationStatusValid"B"previousAuthorizationStatus"i"limitsPrecision"B"activityType"q"pausesLocationUpdatesAutomatically"i"paused"B"allowsBackgroundLocationUpdates"B"showsBackgroundLocationIndicator"B"allowsMapCorrection"B"batchingLocation"B"updatingVehicleSpeed"B"updatingVehicleHeading"B"matchInfoEnabled"B"groundAltitudeEnabled"B"fusionInfoEnabled"B"courtesyPromptNeeded"B"isAuthorizedForWidgetUpdates"B}
@56@0:8@16@24@32@40@48
^{__CLClient=}
@"<CLLocationManagerDelegate>"
@"CLLocationManager"
@"CLLocationManagerStateTracker"
{?="padding1"i"suitability"i"coordinate"{?="latitude"d"longitude"d}"horizontalAccuracy"d"altitude"d"verticalAccuracy"d"padding2"d"padding3"d"speed"d"speedAccuracy"d"course"d"courseAccuracy"d"timestamp"d"confidence"i"lifespan"d"type"i"rawCoordinate"{?="latitude"d"longitude"d}"rawCourse"d"floor"i"integrity"I"referenceFrame"i"rawReferenceFrame"i"signalEnvironmentType"i"ellipsoidalAltitude"d"fromSimulationController"B}
@"NSString"
@"CLTimer"
@"NSMutableSet"
@"CLSilo"
v24@0:8@?<v@?@"NSArray"@"NSError">16
B20@0:8B16
@20@0:8B16
B32@0:8@16^@24
@80@0:8@16@24@32@40@48@56@64@72
@64@0:8@16@24@32@40@48@56
@24@0:8^@16
i32@0:8@16@24
i24@0:8@16
v28@0:8B16@20
v28@0:8i16@20
v32@0:8i16i20@24
v32@0:8^i16@24
v72@0:8@16d24d32d40i48i52@56^@64
v52@0:8@16i24i28i32@36^@44
v40@0:8i16i20@24@32
v44@0:8B16@20@28^@36
v40@0:8@16@24^@32
v52@0:8{?=[8I]}16B48
B32@0:8@16@24
@32@0:8@16^@24
@40@0:8@16@24@32
^{__CLClient=}16@0:8
v32@0:8d16d24
v28@0:8d16i24
v32@0:8@16d24
v32@0:8@16Q24
v28@0:8@16B24
@36@0:8@16B24@?28
v40@0:8@16@24@?32
v36@0:8@16B24@28
v32@0:8@16@24
@32@0:8Q16@?24
v32@0:8Q16@?24
Q24@0:8Q16
@32@0:8d16d24
@44@0:8d16d24d32i40
v32@0:8@"NSArray"16@"NSNumber"24
v36@0:8@16i24@?28
v36@0:8@"NSArray"16i24@?<v@?@"NSArray"@"NSError">28
@"<CLLocationSmootherDelegate>"
@"CLLocationSmoother"
v40@0:8@16Q24@?32
@"_CLLocationSmootherProxy"
C16@0:8
f16@0:8
@28@0:8f16C20C24
v20@0:8f16
v20@0:8C16
@24@0:8I16S20
I16@0:8
v20@0:8I16
S16@0:8
v20@0:8S16
@48@0:8@16@24@32@?40
@48@0:8r*16@24@32@?40
{unique_ptr<CLGnssDisablementAssertionInternal, std::default_delete<CLGnssDisablementAssertionInternal>>="__ptr_"{__compressed_pair<CLGnssDisablementAssertionInternal *, std::default_delete<CLGnssDisablementAssertionInternal>>="__value_"^{CLGnssDisablementAssertionInternal}}}
@68@0:8q16{CLLocationCoordinate2D=dd}24d40i48i52B56@60
{CLLocationCoordinate2D="latitude"d"longitude"d}
@60@0:8q16{CLLocationCoordinate2D=dd}24d40i48i52B56
{CLLocationCoordinate2D=dd}16@0:8
v32@0:8{shared_ptr<CLConnectionMessage>=^{CLConnectionMessage}^{__shared_weak_count}}16
@"<CLFindMyAccessoryRangingManagerDelegate>"
{unique_ptr<CLConnectionClient, std::default_delete<CLConnectionClient>>="__ptr_"{__compressed_pair<CLConnectionClient *, std::default_delete<CLConnectionClient>>="__value_"^{CLConnectionClient}}}
@24@0:8Q16
@48@0:8@16{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}24
v32@0:8r*16@24
v24@0:8r*16
v32@0:8Q16@24
v28@0:8S16@20
v28@0:8C16@20
v28@0:8I16@20
v28@0:8@16I24
v32@0:8I16I20@24
@"<CLFindMyAccessoryManagerDelegate>"
@"CLFindMyAccessoryFragmentAccumulator"
B40@0:8@16@24^@32
B24@0:8B16i20
{unique_ptr<CLRegulatoryConfigInternal, std::default_delete<CLRegulatoryConfigInternal>>="__ptr_"{__compressed_pair<CLRegulatoryConfigInternal *, std::default_delete<CLRegulatoryConfigInternal>>="__value_"^{CLRegulatoryConfigInternal}}}
d24@0:8@16
d24@0:8d16
@104@0:8{?=ddddddddddi}16
{?="x"d"y"d"z"d"magneticHeading"d"trueHeading"d"accuracy"d"timestamp"d"temperature"d"magnitude"d"inclination"d"calibration"i}
@40@0:8d16d24d32
@84@0:8B16B20{?=dd}24d40i48d52d60d68d76
{?=dd}16@0:8
{?="latitude"d"longitude"d}
^{CLCallbackAssertionInternal=@@?^{CLConnectionClient}}
@44@0:8@16@24@32i40
@36@0:8@16@24i32
@3192@0:8{?=[512c][512c][512c]iBBBB(?={?=[512c]SSiB}{?={?=dd}ddiBB}{?=[101{?=dd}]iiB})}16
@48@0:8{CLLocationCoordinate2D=dd}16d32@40
@28@0:8@16i24
@52@0:8@16@24i32B36B40B44B48
@68@0:8@16@24i32B36B40B44B48@52@60
B32@0:8{CLLocationCoordinate2D=dd}16
@"NSUUID"
@28@0:8@16I24
@"NSDate"
@56@0:8{CLLocationCoordinate2D=dd}16d32@40@48
@52@0:8{CLLocationCoordinate2D=dd}16d32@40B48
@84@0:8{CLLocationCoordinate2D=dd}16d32i40B44B48@52@60B68B72B76B80
@100@0:8{CLLocationCoordinate2D=dd}16d32i40B44B48@52@60B68B72B76B80@84@92
v44@0:8@16@24@32B40
@36@0:8@16S24@28
@40@0:8@16S24S28@32
@44@0:8@16S24S28@32B40
c16@0:8
@64@0:8@16@24@32q40d48q56
@72@0:8@16@24@32q40d48q56d64
@"CLBeaconInternal"
{?=d}16@0:8
v64@0:8{?=d}16
{?=[4]}16@0:8
v144@0:8{?=[4]}16
{?=[6[6f]]}16@0:8
v160@0:8{?=[6[6f]]}16
{?="coordinate""horizontalAccuracy"d}
{?="columns"[4]}
{?="v"[6[6f]]}
v44@0:8@16@24C32@36
v44@0:8@16q24q32C40
v24@0:8@"NSURL"16
v24@0:8@"CLVisit"16
v24@0:8@"CLLocation"16
v32@0:8@"NSString"16@?<v@?@"NSDictionary">24
v44@0:8@"NSString"16@"NSString"24C32@"CLLocation"36
v44@0:8@"NSString"16q24q32C40
@28@0:8@16S24
@32@0:8@16S24S28
v32@0:8@"NSDictionary"16@?<v@?>24
@32@0:8{?=dd}16
{?="trueHeading"d"timestamp"d}
@48@0:8{?=dddd}16
{?="speed"d"timestamp"d"machContinuousTime"d"machAbsoluteTime"d}
@72@0:8{CLLocationCoordinate2D=dd}16d32@40@48@56@64
@64@0:8{CLLocationCoordinate2D=dd}16d32@40@48@56
@"_CLPlaceInference"
@"<GEOMapServiceTicket>"
v36@0:8@16B24@?28
v40@0:8@16d24@?32
v44@0:8@16d24B32@?36
v52@0:8@16@24d32B40@?44
v48@0:8@16@24@32@?40
v40@0:8@16@24@32
@"CLGeocoderInternal"
@24@0:8r^{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16
v200@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@?192
v28@0:8B16@?20
v48@0:8d16@24@32@?40
v48@0:8B16i20@24@32@?40
v48@0:8@16@24Q32@?40
v80@0:8@16d24d32d40i48i52@56@64@?72
v60@0:8@16i24i28i32@36@44@?52
v52@0:8B16@20@28@36@?44
v48@0:8@16@24B32B36@?40
v32@0:8I16B20@?24
v28@0:8I16@?20
v40@0:8@16i24i28@?32
v84@0:8B16@20@28{?=[8I]}36B68B72@?76
v28@0:8i16@?20
v44@0:8i16@20@28@?36
v56@0:8i16i20@24@32@40@?48
v44@0:8B16@20@28@?36
v64@0:8@16@24@32@40d48d56
v24@0:8@?<v@?@"NSError"@"NSArray">16
v24@0:8@?<v@?@"NSError"@"NSString">16
v24@0:8@?<v@?@"NSError"@"NSDictionary">16
v40@0:8@"NSString"16@"NSData"24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSError"@"NSData">24
v200@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@?<v@?@"NSError"@"NSString">192
v28@0:8B16@?<v@?@"NSError">20
v24@0:8@?<v@?@"NSError">16
v48@0:8@"NSString"16@"NSString"24@"NSData"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError"@"NSData">32
v48@0:8d16@"NSString"24@"NSString"32@?<v@?@"NSError"d>40
v48@0:8B16i20@"NSString"24@"NSString"32@?<v@?@"NSError">40
v24@0:8@?<v@?@"NSError"B>16
v24@0:8@?<v@?@"NSError"i>16
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError"i>32
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError"B>32
v32@0:8@"NSString"16@?<v@?@"NSError">24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError"@"NSDictionary">32
v48@0:8@"NSString"16@"NSString"24Q32@?<v@?@"NSError"B>40
v80@0:8@"NSString"16d24d32d40i48i52@"NSString"56@"NSString"64@?<v@?@"NSError">72
v60@0:8@"NSString"16i24i28i32@"NSString"36@"NSString"44@?<v@?@"NSError">52
v52@0:8B16@"NSString"20@"NSString"28@"NSString"36@?<v@?@"NSError">44
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v48@0:8@"NSString"16@"NSString"24B32B36@?<v@?@"NSError"{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}>40
v48@0:8@"NSString"16@"NSString"24@"CLLocation"32@?<v@?@"NSError"{?=dddi}>40
v40@0:8@"NSData"16@"NSUUID"24@?<v@?@"NSError">32
v24@0:8@?<v@?@"NSError"@"NSData">16
v32@0:8I16B20@?<v@?@"NSError">24
v28@0:8I16@?<v@?@"NSError"B>20
v40@0:8@"NSData"16i24i28@?<v@?@"NSError">32
v84@0:8B16@"NSString"20@"NSString"28{?=[8I]}36B68B72@?<v@?@"NSError">76
v28@0:8i16@?<v@?@"NSError">20
v44@0:8i16@"NSString"20@"NSString"28@?<v@?@"NSError">36
v56@0:8i16i20@"NSString"24@"NSString"32@"NSString"40@?<v@?@"NSError">48
v44@0:8B16@"NSString"20@"NSString"28@?<v@?@"NSError">36
v24@0:8@?<v@?@"NSError"QQ>16
v40@0:8@"NSString"16@"NSString"24@"NSDictionary"32
v64@0:8@"NSDictionary"16@"NSDictionary"24@"NSArray"32@"NSArray"40d48d56
C40@0:8C16i20r^{__CFString=}24r^{__CFString=}32
C40@0:8^i16r^{__CFString=}24r^{__CFString=}32
r^{__CFDictionary=}16@0:8
r^{__CFArray=}16@0:8
r^{__CFString=}16@0:8
v32@0:8r^{__CFString=}16r^v24
r^v24@0:8r^{__CFString=}16
C24@0:8*16
@20@0:8C16
@40@0:8@16@24^@32
d40@0:8d16@24@32
C40@0:8*16r^{__CFString=}24r^{__CFString=}32
C24@0:8r^{__CFString=}16
r^{__CFDictionary=}32@0:8r^{__CFString=}16r^{__CFString=}24
B48@0:8@16@24Q32^@40
B80@0:8@16d24d32d40i48i52@56@64^@72
B60@0:8@16i24i28i32@36@44^@52
B52@0:8B16@20@28@36^@44
B48@0:8@16@24@32^@40
C48@0:8r^{__CFString=}16r^{__CFString=}24C32C36^{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}40
C48@0:8r^{__CFString=}16r^{__CFString=}24@32^{?=dddi}40
v36@0:8^{?=Qdddd}16i24i28i32
C24@0:8B16I20
C28@0:8^B16I24
C76@0:8C16r^{__CFString=}20r^{__CFString=}28{?=[8I]}36C68C72
C48@0:8i16i20r^{__CFString=}24r^{__CFString=}32r^{__CFString=}40
C20@0:8i16
C36@0:8i16r^{__CFString=}20r^{__CFString=}28
C36@0:8r^{__CFString=}16r^{__CFString=}24C32
C24@0:8^i16
C32@0:8^Q16^Q24
v24@0:8Q16
@"CLLocation"
@"NSDictionary"
@"CLRegion"
@"NSArray"
@"GEOMapItemStorage"
@"NSTimeZone"
@72@0:8@16@24@32@40Q48@56@64
v32@0:8@?16@24
@"CLPlacemarkInternal"
@32@0:8Q16d24
@32@0:8{CLLocationCoordinate2D=dd}16
d32@0:8{CLLocationCoordinate2D=dd}16
v24@0:8@"PBCodable"16
v24@0:8@?<v@?@"NSDictionary">16
@32@0:8r^v16Q24
^{?=ISSSSSSCC}
v28@0:8B16Q20
B24@0:8Q16
Q24@0:8@16
v36@0:8Q16B24@28
v36@0:8Q16i24@28
v48@0:8@16@24@32@40
@"<CLFindMyAccessoryFirmwareUpdateDelegate>"
@72@0:8Q16Q24@32@40d48@56@64
@"CLPlacemark"
@60@0:8{CLLocationCoordinate2D=dd}16d32@40@48i56
@96@0:8{CLLocationCoordinate2D=dd}16d32i40B44@48@56B64B68B72B76@80@88
@36@0:8@16I24S28S32
@192@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16
@200@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@192
@544@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16{?=dddddfffBi{?=dd}diiB{?=ddBB}{?=dd}if{?=dd}ddiBddddddddBB{?=dd}diddddidd}192
@552@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16{?=dddddfffBi{?=dd}diiB{?=ddBB}{?=dd}if{?=dd}ddiBddddddddBB{?=dd}diddddidd}192@544
@216@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@192d200@208
@284@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@192d200@208@216d224d232d240d248i256d260d268@276
@292@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@192d200@208@216d224d232d240d248i256d260d268@276@284
@"CLLocationMatchInfo"
@"_CLLocationGroundAltitude"
@"_CLLocationFusionInfo"
@"CLLocationGnssOdometerInfo"
@24@0:8q16
@24@0:8B16B20
@108@0:8{CLLocationCoordinate2D=dd}16d32d40d48d56d64d72d80@88i96@100
@64@0:8{CLLocationCoordinate2D=dd}16d32d40d48@56
@80@0:8{CLLocationCoordinate2D=dd}16d32d40d48d56d64@72
@96@0:8{CLLocationCoordinate2D=dd}16d32d40d48d56d64d72d80@88
@104@0:8{CLLocationCoordinate2D=dd}16d32d40d48d56d64d72d80@88@96
{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@0:8
@24@0:8d16
@248@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@192d200@208@216d224d232@240
@208@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@192d200
@32@0:8r*16@24
^{CLAssertionInternal=@^{CLConnectionClient}}
@32@0:8Q16@24
v32@0:8Q16C24S28
@"NSMutableData"
@56@0:8@16@24@32@40B48B52
@"_CLRangingPeer"
@52@0:8@16@24@32@40B48
@48@0:8d16d24d32d40
@40@0:8@16d24d32
@"_CLLSLLocationCoordinate"
@"_CLLSLMapRoadSegment"
{?=[3]}16@0:8
v112@0:8{?=[3]}16
16@0:8
v48@0:816
@"_CLLSLLocation"
@"_CLLSLHeadingSupplInfo"
{?="columns"[3]}
{?=QCCCCCCCCCCC}16@0:8
v40@0:8{?=QCCCCCCCCCCC}16
v80@0:8{?=[4]}16
v64@0:8{?=[3]}16
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
{CGSize="width"d"height"d}
{?="stateLengthInBytes"Q"stateLength"C"orientationOffset"C"orientationLength"C"gyroBiasOffset"C"gyroBiasLength"C"velocityOffset"C"velocityLength"C"accelBiasOffset"C"accelBiasLength"C"positionOffset"C"positionLength"C}
{?="covarianceSizeInBytes"Q"covarianceSize"C"orientationCovOffset"C"orientationDof"C"gyroBiasCovOffset"C"gyroBiasDof"C"velocityCovOffset"C"velocityDof"C"accelBiasCovOffset"C"accelBiasDof"C"positionCovOffset"C"positionDof"C}
@"NSMutableDictionary"
