@(#)PROGRAM:CoreLocation  PROJECT:CoreLocation-2785.1.32
33333
0EnMessageLocationkCLConnectionMes
NSt3__120__shared_ptr_emplaceI19CLConnectionMessageNS_9allocatorIS1_EEEE
@<@A
TXAH
MbP?
u@-C
A@15CLNameValuePair
@10BasicMutex
5Mutex
11NonCopyable
N13CLPreferences10OtherPrefsE
13CLPreferences
14CLPlatformInfo
16CLDaemonSettings
NSt3__120__shared_ptr_pointerIP16CLDaemonSettingsN12_GLOBAL__N_112null_deleterENS_9allocatorIS1_EEEE
N12_GLOBAL__N_112null_deleterE
ssageGNSSHeatMap
5CLLog
NSt3__120__shared_ptr_pointerIP19CLCircularLogBufferNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI19CLCircularLogBufferE27__shared_ptr_default_deleteIS1_S1_EE
@10CLSettings
p@f@
@ffffff
sA-C
Zw+?
Zwk?
TXA{
xVXA
@xVXA
xVXA
@NSt3__120__shared_ptr_pointerIP35CLEmergencyLocationSelectorInternalZNS1_C1EP33CLEmergencyLocationSelectorConfigPU28objcproto17OS_dispatch_queue8NSObjectU13block_pointerFvP10CLLocationEE3$_0NS_9allocatorIS1_EEEE
ZN35CLEmergencyLocationSelectorInternalC1EP33CLEmergencyLocationSelectorConfigPU28objcproto17OS_dispatch_queue8NSObjectU13block_pointerFvP10CLLocationEE3$_0
u"A9CLLogBase
non-matching retain (%p) and release (%p) functions in context, ignoring
Failed to initilize fHeadingCalibrationDisplayMutex, error code: %{public}d
CL: CLClientCreateWithBundleIdentifierAndPath
{"msg%{public}.0s":"CLClientCreateWithBundleIdentifierAndPath", "event":%{public, location:escape_only}s, "effectiveBundleIdentifier":%{public, location:escape_only}@, "effectiveBundlePath":%{public, location:escape_only}@}
{"msg%{public}.0s":"client allocated", "client":"%{public}p"}
{"msg%{public}.0s":"client about to be destroyed", "client":"%{public}p"}
CLClient needs to be invalidated first before destroying.
{"msg%{public}.0s":"CLClient needs to be invalidated first before destroying.", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
client->fContext should be NULL
{"msg%{public}.0s":"client->fContext should be NULL", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Location callback block not executed in a timely manner!
Discarding message for event %{private}d because of too many unprocessed messages
received client will resign active notification
received client did become active notification
Invalid requested authorization: %{public}d
Missing UsageDescription key for requested authorization: %{public}d
CL: CLClientIsLocationServicesEnabled
{"msg%{public}.0s":"CLClientIsLocationServicesEnabled", "event":%{public, location:escape_only}s}
This method can cause UI unresponsiveness if invoked on the main thread. Instead, consider waiting for the `-locationManagerDidChangeAuthorization:` callback and checking `authorizationStatus` first.
#Warning CLInternalGetLocationServicesEnabled failed: could not reach daemon
CL: CLClientIsAuthorizationPromptMapDisplayEnabled
{"msg%{public}.0s":"CLClientIsAuthorizationPromptMapDisplayEnabled", "event":%{public, location:escape_only}s}
#Warning CLInternalGetAuthorizationPromptMapDisplayEnabled failed: could not reach daemon
{"msg%{public}.0s":"invalidating client", "client":"%{public}p"}
CLClient is deprecated. Will be obsolete soon. (%{public}s)
{"msg%{public}.0s":"#NullIsland Received a latitude or longitude from getLocationForBundleID that was exactly zero", "latIsNonzero":%{public}hhd, "lonIsNonzero":%{public}hhd, "hAcc":"%{public}f", "location":%{private, location:CLClientLocation}.*P}
{"msg%{public}.0s":"CLClientShowHeadingCalibration", "showHeadingCal":%{public}hhd, "isHeadingCalibrated":%{public}hhd, "isApplicationActive":%{public}hhd, "isUpdatingHeading":%{public}hhd}
Application inactive, will not show heading calibration
#transcriptSession reply for fetchTranscriptLocation is nil
#historicalLocations reply for fetchTranscriptLocation is nil
Fence: CLClientRequestRegionState, unsupported fence type, %{private}d
{"msg%{public}.0s":"Unable to get vertices from encoded data", "error":%{public, location:escape_only}@}
Unable to get vertices from encoded data
Number of vertices received doesn't match stored, %{public}d, %{public}lu
Number of vertices received invalid, %{public}d, internal
Copied %{private}d vertices
{"msg%{public}.0s":"#Warning Client is subject to corrective compensation, but hasn't been updated to find out about it yet"}
kCLConnectionMessageAutomaticPromptingEnabled is not supported
Invalid call to CLClientGetAutopauseState
malformed message: kCLConnectionMessageAutopauseStatus
CL: _CLClientCreateConnection
{"msg%{public}.0s":"_CLClientCreateConnection", "event":%{public, location:escape_only}s, "client":"%{public}p"}
CL: CLClientInterruptionHandler
{"msg%{public}.0s":"CLClientInterruptionHandler", "event":%{public, location:escape_only}s, "client":"%{public}p"}
Got unhandled message %s from daemon
{"msg%{public}.0s":"Unable to encode vertices for polygonal region"}
Unable to encode vertices for polygonal region
{"msg%{public}.0s":"#location #routine sendLocations to RT, didUpdateLocations)"}
{"msg%{public}.0s":"#location #routine sendLocations to RT, not respondsToSelector @selector(locationManager:didUpdateLocations:)"}
{"msg%{public}.0s":"#location #routine sendLocations to RT, didUpdateLocations:withReply"}
{"msg%{public}.0s":"#location #routine sendLocations to RT, not respondsToSelector @selector(locationManager:didUpdateLocations:completion:)"}
{"msg%{public}.0s":"#location #routine createConnection"}
{"msg%{public}.0s":"Non-specific CLEmergencyEnablementAssertion is no longer supported #CLEEA"}
Non-specific CLEmergencyEnablementAssertion is no longer supported #CLEEA
Already in a transaction. LocationManager threading bug?
{"msg%{public}.0s":"Already in a transaction. LocationManager threading bug?", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "new":%{public, location:_CLLocationManagerStateTrackerState}.*P}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "old":"%{public}p", "new":"%{public}p"}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "old":"%{public}f", "new":"%{public}f"}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "old":%{public}hhd, "new":%{public}hhd}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "old":%{public, location:CLClientAuthorizationStatus}lld, "new":%{public, location:CLClientAuthorizationStatus}lld}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "old":%{public, location:CLActivityType}lld, "new":%{public, location:CLActivityType}lld}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "old":%{public, location:CLAutoPause}lld, "new":%{public, location:CLAutoPause}lld}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "old":%{public, location:_CLLocationManagerStateTrackerState}.*P, "new":%{public, location:_CLLocationManagerStateTrackerState}.*P}
{"msg%{public}.0s":"state dump failure", "expected_size":%{public}lld, "provided_size":%{public}lld}
state dump failure
#Warning Has lingering peer ranging request
CL: CLLocationManager
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "identifier":%{public, location:escape_only}@, "bundlePath":%{public, location:escape_only}s}
initializing CLLocationManager with a nil websiteIdentifier
delegate and queue must not be nil
{"msg%{public}.0s":"delegate and queue must not be nil", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
initializing CLLocationManager with a nil identifier
initializing CLLocationManager with a nil bundle path
initializing CLLocationManager with a nil limiting identifier
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p"}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "delegate":"%{public}p"}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "distance":"%{public}f"}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "accuracy":"%{public}f"}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "pausesLocationUpdatesAutomatically":%{public}hhd}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "allows":%{public}hhd}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "shows":%{public}hhd}
{"msg%{public}.0s":"#NullIsland Either the latitude or longitude was exactly 0! That's highly unlikely: refreshing property", "latIsNonzero":%{public}hhd, "lonIsNonzero":%{public}hhd}
{"msg%{public}.0s":"We have a valid, cached location. Fetching from internal state", "location":%{private, location:CLClientLocation}.*P}
{"msg%{public}.0s":"No valid, cached location. Fetched from daemon", "location":%{private, location:CLClientLocation}.*P}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "supportInfo":%{public}hhd}
Obsolete
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "privateMode":%{public}hhd}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "purpose":%{private, location:escape_only}@}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "activityType":%{public, location:CLActivityType}lld}
Client,%s,setActivityType,%ld
Client,%s,setActivityType,allowing map correction
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "bundleID":%{public, location:escape_only}s}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "bundlePath":%{public, location:escape_only}s}
Canceling requestLocation
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@}
Ignoring requestLocation due to ongoing location.
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "distance":"%{public}f", "timeout_s":"%{public}.09f"}
Canceling requestLocation.
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "filter":"%{public}f"}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "orientation":%{public, location:CLDeviceOrientation}lld}
heading, %{private}s
Start updating heading. HeadingFilter, %{public}.2f
Stop updating heading
Dismissing Compass Calibration HUD
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "region":%{private, location:escape_only}@}
{"msg%{public}.0s":"Region is nil"}
Region is nil
Number of vertices %{public}lu
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "region":%{private, location:escape_only}@}
{"msg%{public}.0s":"Cannot start ranging beacons on behalf of another app", "onBehalfOf":%{public, location:escape_only}s}
Cannot start ranging beacons on behalf of another app
{"msg%{public}.0s":"Region is not an instance of CLBeaconRegion"}
Region is not an instance of CLBeaconRegion
{"msg%{public}.0s":"Cannot stop ranging beacons on behalf of another app", "onBehalfOf":%{public, location:escape_only}s}
Cannot stop ranging beacons on behalf of another app
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "constraint":%{private, location:escape_only}@}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "constraint":%{private, location:escape_only}@}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "peers":%{private, location:escape_only}@, "timeout_s":"%{public}.09f"}
WRTT: received requestRangingToPeers, timeout, %{public}lf
#Warning Ignoring requestRangingToPeers due to ongoing ranging
WRTT: received respondToRangingFromPeers, timeout, %{public}lf
#Warning Ignoring respondToRangingFromPeers due to ongoing ranging.
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "peers":%{private, location:escape_only}@, "interval":%{public}lld}
WRTT: received startRangingToPeers, interval, %{public}lu
#Warning Ignoring startRangingToPeers due to ongoing ranging
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "peers":%{private, location:escape_only}@}
WRTT: received stopRangingToPeers
WRTT: received startRangingFromPeers
#Warning Ignoring startRangingFromPeers due to ongoing ranging
WRTT: received stopRangingFromPeers
{"msg%{public}.0s":"received internal version get request"}
{"msg%{public}.0s":"received request to export copy of MiLo DB tables"}
{"msg%{public}.0s":"LocationManager, Could not export MicroLocation database tables", "error":%{private, location:escape_only}@}
LocationManager, Could not export MicroLocation database tables
{"msg%{public}.0s":"received request to get per anchor per cluster measured value statistics"}
{"msg%{public}.0s":"LocationManager, couldn't export per anchor per cluster measured value statistics", "error":%{private, location:escape_only}@}
{"msg%{public}.0s":"received localization scan request"}
{"msg%{public}.0s":"received recording scan request", "forced:":%{public}hhd}
{"msg%{public}.0s":"received truth label donation request for a recording trigger"}
{"msg%{public}.0s":"received truth label donation request between Dates"}
{"msg%{public}.0s":"received request to purge semi-supervised models"}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate - request timeout", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "location":%{private, location:CLClientLocation}.*P}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate - request timeout", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@}
{"msg%{public}.0s":"-onClientEvent:supportInfo:", "event":%{public, location:CLClientEvent}lld, "data":%{private, location:escape_only}@}
could not get updated authorization status
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "approved":%{public}hhd}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "authorizationStatus":%{public, location:CLClientAuthorizationStatus}lld, "limitsPrecision":%{public}hhd, "isAuthorizedForWidgetUpdates":%{public}hhd}
Location event received with empty payload
New location is identical to old location; discarding
New location predates old location, and the event types differ; discarding
{"msg%{public}.0s":"#CLLocationManager invoking #delegate - invalid location", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@}
{"msg%{public}.0s":"#NullIsland onClientEventLocation:forceMapMatching: got a latitude or longitude that was exactly zero", "latIsNonzero":%{public}hhd, "lonIsNonzero":%{public}hhd, "location":%{private, location:CLClientLocation}.*P}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "location":%{private, location:CLClientLocation}.*P, "eventType":%{public, location:escape_only}@}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate - location unavailable", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@}
could not get updated heading
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "heading":%{public, location:escape_only}@}
CL: Invoking Compass Calibration HUD
Could not show heading calibration
in onClientEventPlaceInferenceResult for CLPlaceInferenceSubscription
{"msg%{public}.0s":"Got a place inference result without a result!?"}
Got a place inference result without a result!?
in onClientEventPlaceInferenceError for CLPlaceInferenceSubscription
{"msg%{public}.0s":"Got a place inference error without an error!?"}
Got a place inference error without an error!?
{"msg%{public}.0s":"#Warning Got place inference result without a handler block"}
could not get error
{"msg%{public}.0s":"Location access was denied; bailing early cancelling requestLocation"}
{"msg%{public}.0s":"Location access was denied; but not bailing early"}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "error":%{public, location:escape_only}@}
could not get region monitoring event
{"msg%{public}.0s":"Fence: onClientEventRegion, unable to fetch region"}
Fence: onClientEventRegion, unable to fetch region
{"msg%{public}.0s":"Delivering region monitoring event, no delegate", "self":"%{public}p"}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "region":%{private, location:escape_only}@, "state":%{public, location:CLRegionState}lld}
could not get the region state
{"msg%{public}.0s":"Fence: onClientEventRegionState, unknown region type", "regionType":%{public, location:CLClientRegionType}lld}
Fence: onClientEventRegionState, unknown region type
{"msg%{public}.0s":"#Warning Fence: onClientEventRegionState, unknown state", "regionState":%{public, location:CLClientRegionState}lld}
{"msg%{public}.0s":"Delivering region monitoring state request, no delegate", "self":"%{public}p"}
{"msg%{public}.0s":"Fence: onClientEventRegionError, unknown region type", "regionType":%{public, location:CLClientRegionType}lld}
Fence: onClientEventRegionError, unknown region type
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "region":%{private, location:escape_only}@, "error":%{public, location:escape_only}@}
{"msg%{public}.0s":"Delivering region monitoring failure, no delegate", "self":"%{public}p"}
could not get ranged beacons
Client beacon is invalid (count,%lu).
could not get ranging error
{"msg%{public}.0s":"Delivering range error to client's delegate", "self":"%{public}p", "delegate":"%{public}p"}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "constraint":%{private, location:escape_only}@, "error":%{public, location:escape_only}@}
WRTT: received onClientEventPeerRanging
WRTT: received onClientEventPeerRangingRequestProcessed
WRTT: received onClientEventPeerRangingError
could not get updated paused state
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "duration_s":"%{public}.09f"}
{"msg%{public}.0s":"Delivering region monitoring watchdog, no delegate", "self":"%{public}p"}
{"msg%{public}.0s":"Client region type is not supported.
", "regionType":%{public, location:CLClientRegionType}lld}
Client region type is not supported.
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "notification":%{private, location:escape_only}@}
could not get batch result
Finished deferred updates: %s
could not get updated vehicle speed
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "vehicleSpeed":%{public, location:escape_only}@}
could not get updated vehicle heading
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "vehicleHeading":%{public, location:escape_only}@}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "visit":%{private, location:escape_only}@}
{"msg%{public}.0s":"Unarchiver error in -[CLLocationManager onClientEventSignificantLocationVisit:]", "error":%{public, location:escape_only}@}
Unarchiver error in -[CLLocationManager onClientEventSignificantLocationVisit:]
{"msg%{public}.0s":"Processing Significant Location Visit State Request Event", "self":"%{public}p", "delegate":"%{public}p"}
{"msg%{public}.0s":"isAuthorizedForPreciseLocation is deprecated and will be removed in the next seed. use accuracyAuthorization"}
isAuthorizedForPreciseLocation is deprecated and will be removed in the next seed. use accuracyAuthorization
{"msg%{public}.0s":"Requesting when in use authorization"}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "SEL":%{public, location:escape_only}s}
{"msg%{public}.0s":"Requesting always authorization"}
{"msg%{public}.0s":"Requesting temporary accuracy increase"}
{"msg%{public}.0s":"requestTemporaryPreciseLocationAuthorizationWithPurposeKey is deprecated and will be removed in the next seed. use requestTemporaryFullAccuracyAuthorizationWithPurposeKey"}
requestTemporaryPreciseLocationAuthorizationWithPurposeKey is deprecated and will be removed in the next seed. use requestTemporaryFullAccuracyAuthorizationWithPurposeKey
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "enabled":%{public}hhd}
must pass handler to dumpDiagnosticFilesWithHandler
{"msg%{public}.0s":"must pass handler to dumpDiagnosticFilesWithHandler", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
dumpDiagnosticFiles called, trying to make an xpc call
#diagnosticManager failed to get remoteObjectProxy with error %@
#diagnosticManager error copying files: %@
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "isActuallyAWatchKitExtension":%{public}hhd}
Start updating vehicle speed
Stop updating vehicle speed
Start updating vehicle heading
Stop updating vehicle heading
#slv: Request visit state
Setup PlaceInferences common logic
Start oneshot PlaceInferences
Start continuous PlaceInferences
Stop continuous PlaceInferences
Widget has NSWidgetWantsLocation key in its Info.plist
{"msg%{public}.0s":"#Warning widget is missing NSWidgetWantsLocation key in its Info.plist"}
Encoded coarse meta data found
CLLocationManager should not get multile locations with coarseMetaData
#Warning Changing CLCommon's runloop after it was already established
#Warning Setting CLCommon's runloop after it was already established
CLCommonSetRunLoop, %p
cannot open source file: %{public}s, errno %{public}d
cannot open target file: %{public}s, errno %{public}d
error reading source file: %{public}s
error writing target file: %{public}s
cannot open compression stream: %{public}s, bzerror %{public}d
error writing target file: %{public}s, bzerror: %{public}d
error closing target file: %{public}s, bzerror: %{public}d
CLCommonCompareLocationEqualityClient compared two coordinates that were identical other than their reference frames: (%lf, %lf, %d) (%lf, %lf, %d)
{"msg%{public}.0s":"Bundle for LocationdInternalSystemService not marked as SystemService", "bundle":%{public, location:escape_only}s, "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Bundle for LocationdInternalSystemService not marked as SystemService
{"msg%{public}.0s":"Assertion failed", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Assertion failed
os_transaction created: (%p) %@
os_transaction releasing: (%p) %@
Please update userSpecificPlaceTypeFromRTUserType
Please update placeInferencePlaceTypeFromRTPlaceType
WMM initialization encountered an error
WMM evaluation encountered an error
geomagnetic model invalid near poles (%f, %f, %f)
could not open geomagnetic data file %s (%{public}s)
geomagnetic data file appears to be empty
geomagnetic data file appears to have invalid dimensions
supplied date (%{public}f) outside valid range (epoch=%{public}f)
#clgda,client,CLGnssDisablementAssertionInternal,name,%s,dict,%@
#clgda,client,#warning,unexpected message,%s
#clgda,client,message,%s
#clgda,#warning,client,noRegisteredCallback
#clgda,client,~CLGnssDisablementAssertionInternal()
{"msg%{public}.0s":"#clgda,client,reason missing"}
#clgda,client,reason missing
{"msg%{public}.0s":"#clgda,client,bundleID or bundlePath needed"}
#clgda,client,bundleID or bundlePath needed
{"msg%{public}.0s":"#clgda,client,nil callback queue"}
#clgda,client,nil callback queue
{"msg%{public}.0s":"#clgda,client,nil callback block"}
#clgda,client,nil callback block
#clgda,client,newAssertionForBundleIdentifier
#clgda,client,newAssertionForBundle
Got Reply: message: %s
Connection to locationd interrupted!!
{"msg%{public}.0s":"#durian handling message to client", "message":%{public, location:escape_only}s, "beaconUUID":%{private, location:escape_only}@, "error":%{private, location:escape_only}@}
{"msg%{public}.0s":"#durian #hawkeye got fragment", "opcode":%{private}u, "dataFragment":%{private, location:escape_only}@}
{"msg%{public}.0s":"#durian #hawkeye error appending fragment", "opcode":%{private}u, "dataFragment":%{private, location:escape_only}@}
#durian #hawkeye error appending fragment
{"msg%{public}.0s":"#durian #client client received advertisement", "uuid":%{private, location:escape_only}@, "address":%{private, location:escape_only}@, "advertisementData":%{private, location:escape_only}@, "scanDate":%{private, location:escape_only}@, "status":%{private}u, "rssi":%{private}ld, "reserved":%{private, location:escape_only}@}
{"msg%{public}.0s":"didFetchStatusOfUTEnablementRequirements"}
#durian Got a message we do not understand... dropping!
{"msg%{public}.0s":"#durian #hawkeye clearing fragments from accumulator", "uuid":%{private, location:escape_only}@}
{"msg%{public}.0s":"#durian client sending message", "messageName":%{public, location:escape_only}s, "beaconUUID":%{public, location:escape_only}s}
{"msg%{public}.0s":"#durian client sending message", "messageName":%{public, location:escape_only}s}
{"msg%{public}.0s":"#durian Client requested scan for nearby owner"}
{"msg%{public}.0s":"#durian Client requested scan for HELE"}
{"msg%{public}.0s":"#durian Client requested scan for nearby devices long"}
{"msg%{public}.0s":"#durian Client requested stop to scan for nearby devices long"}
Init Ranging on device: %@
Deinit Ranging on device: %@
Configure Ranging on device: %@
Prepare Ranging on device: %@
Start Ranging on device: %@
Stop Ranging on device: %@
Start EventCounter on device: %@
Stop EventCounter on device: %@
#clreg,addConfigForIso,%s
#clreg,addConfigForCircularRegion,%.6f,%.6f,%.2f
#clreg,#warning,addConfigForIsoList,invalidArgs,ignoring
#clreg,#warning,addConfigForIsoList,emptyIso,ignoring
#clreg,#warning,addConfigForCircularRegionList,invalidArgs,ignoring
#clreg,#warning,addConfigForCircularRegionList,invalidRadius,ignoring
#clreg,fetchRAEConfig,%{private}.6f,%{private}.6f,%{private}.2f,distToLocation,%{private}2.f,result,found
#clreg,completionCallback,%{private}@,nil,nil
#clreg,fetchRAEConfig,%{private}.6f,%{private}.6f,%{private}.2f,distToLocation,%{private}2.f,result,notFound
#clreg,fetchRAEConfig,no RAEs matched
#clreg,completionCallback,default,nil,nil
#clreg,completionCallback,%{private}@,%{private}@,nil
#clreg,#map,query,lla,%{private}.6f,lon,%{private}.6f,accuracy,%{private}.2f
#clreg,#map,response,#warning,error,%@
#clreg,#map,response,#warning,results,Nil
#clreg,#map,response,#warning,invalidResultEntry,ignoring
#clreg,#map,response,disputed,first,%{private}s,interested,%@
#clreg,#map,response,disputed,next,%{private}s,interested,%@
#clreg,#map,response,nonDisputed,first,%{private}@
#clreg,#map,response,nonDisputed,next,%{private}@
#clreg,#warning,fetchIsoOrDefaultConfig,geoLocationAllocFailed
#clreg,cbLocation,iso,%{private}@,neighbors,%{private}@
#clreg,cbExtendedLocation,iso,%{private}@,neighbors,%{private}@
#clreg,cbWrapper,isoActual,%{private}@,neighborsWithinLocation,%{private}@,extendedNeighbors,%{private}@
#clreg,fetchConfigForLocation,#warning,location is nil
#clreg,fetchConfigForLocation,%{private}.6f,%{private}.6f,%{private}.2f
#clreg,fetchConfigForLocation,#warning,invalidAccuracy
#clreg,findRAEConfig,%{private}.6f,%{private}.6f,%{private}.2f,distToLocation,%{private}2.f,result,found
#clreg,findRAEConfig,%{private}.6f,%{private}.6f,%{private}.2f,distToLocation,%{private}2.f,result,notFound
#clreg,findRAEConfig,no RAEs matched
sendIsoInfoSync,region,%{private}@,neighbors,%{private}@
#clreg,invalidRegionType
#clreg,#map,response,lla,%{private}.6f,lon,%{private}.6f,accuracy,%{private}.2f,results,%{private}@
Invalid neighbor or excludeRegionName,%{private}@,%{private}@
#clreg,fetchInfoForLocation,#warning,location is nil
#clreg,fetchInfoForLocation,%{private}.6f,%{private}.6f,%{private}.2f
#clreg,fetchInfoForLocation,#warning,invalidAccuracy
CLRR,convertRouteDataToMatrix,input data array is null
CLRR,convertRouteDataToMatrix,input data array is empty
CLRR,convertRouteDataToMatrix,input data point is null at index,%{public}d
CLRR,convertRouteDataToMatrix,invalid coordinates,lat,%{private}.7lf,lon,%{private}.7lf,at index,%{public}d
CLRR,convertRouteDataToMatrix,invalid reference point,lat,%{private}.7lf,lon,%{private}.7lf,alt,%{private}.2lf,at index,%{public}d
CLRR,convertRouteDataToMatrix,raceStartLineProximityIndex,%{public}d
CLRR,convertRouteDataToMatrix,boxRows,%{public}d,boxColumns,%{public}d,boxMinLat,%{private}.7lf,boxMaxLat,%{private}.7lf,boxMinLon,%{private}.7lf,boxMaxLon,%{private}.7lf
CLRR,convertRouteDataToMatrix,time,%{public}.1lf,lat,%{private}.7lf,lon,%{private}.7lf,alt,%{private}.2lf,odom,%{public}.2lf,signalEnv,%{public}d,pointCount,%{public}d
CLRR,convertRouteDataToMatrix,invalid index for location,lat,%{private}.7lf,lon,%{private}.7lf
CLRR,updateScoreboard,null data point
CLRR,updateScoreboard,invalid data point,%{private}.7lf,%{private}.7lf,%{private}.7lf,%{private}.7lf
CLRR,updateScoreboard,null input data or segment point
CLRR,updateScoreboard,invalid input data or segment point,%{private}.7lf,%{private}.7lf,%{private}.7lf,%{private}.7lf,%{private}.7lf,%{private}.7lf
CLRR,updateScoreboard,invalid raceStartPointOnReferenceRoute,%{private}.7lf,%{private}.7lf
CLRR,updateScoreboard,invalid referenceState,%{private}.7lf,%{private}.7lf
CLRR,EvaluateProjectionStatus,user moved but its projection on reference route is same as before,skip this point,timestamp,%{private}.1lf
CLRR,EvaluateProjectionStatus,projection went backward,timestamp,%{private}.1lf
CLRR,updateDistanceAndAveragePace,DistanceAlongReferenceRoute passed upper threshold
CLRR,updateDistanceAndAveragePace,DistanceAlongReferenceRoute passed lower threshold
CLRR,findNearestPointIndex,invalid search range index,fromIndex,%{public}d,toIndex,%{public}d
CLRR,findNearestPointIndex,invalid coordinates,lat,%{private}.7lf,lon,%{private}.7lf
CLRR,findNearestPointIndex,reached end of reference route
CLRR,findNearestPointIndex,invalid search index,%{public}d,array size,%{public}lu
CLRR,findNearestPointIndex,start point is matched to reference head section,min distance,%{public}.2lf,index from start of reference route,%{public}d
CLRR,findNearestPointIndex,min distance,%{public}.2lf,index from start of search window,%{public}d
CLRR,updateSearchRange,empty matrix cell at index,%d,
CLRR,updateSearchRange,detected a short segment across the cell border,expanding the search range
CLRR,processLocationPoint,current data point is null
CLRR,processLocationPoint,input data array is null
CLRR,processLocationPoint,invalid matrix index
CLRR,processLocationPoint,failed to determine neighboring cells index
CLRR,processLocationPoint,unknown point type
CLRR,processLocationPoint,processing matrix cell index,%{public}d
CLRR,processLocationPoint,no points within the accepted distance in matrix cell index,%{public}d
CLRR,processLocationPoint,no matched point is found in the current or neighboring cells.Skip this point.
CLRR,processLocationPoint,index exceeded buffer range,last matched index,%{public}d,buffer size,%{public}d
CLRR,processLocationPoint,invalid raceStartLineProximityIndex,%{public}d
CLRR,processLocationPoint,user joined the race at a wrong location,lastMatchedPointIndex,%{public}d,raceStartLineProximityIndex,%{public}d
CLRR,processLocationPoint,invalid prematureRaceEndIndex,%{public}d
CLRR,processLocationPoint,race start point already detected,most recent matched point jumped from head to tail of the reference route,skip this data point to avoid premature race ending,reference route count,%{public}lu,premature race ending index,%{public}d,last matched index,%{public}d,matched index before update,%{public}d
CLRR,processLocationPoint,pointType,%{public}d,last matched index,%{public}d
CLRR,processLocationPoint,reached end of reference route
CLRR,processLocationPoint,end the race in %{public}.2lf seconds if it did not happen naturally
CLRR,processLocationPoint,too close to finish line,jump to the end of the reference route
CLRR,processLocationPoint,timeout,jump to the end of the reference route,current time,%{public}.2lf,registeredTimeAtThreshold,%{public}.2lf,endOfRaceTimeThreshold,%{public}.2lf
CLRR,processLocationPoint,failed to set the most recent point
CLRR,processLocationPoint,failed to process the most recent point,the matched point is too far away
CLRR,setLocationPoint,current data point is null
CLRR,setLocationPoint,input data array is null
CLRR,setLocationPoint,reached end of route
CLRR,setLocationPoint,index out of bounds,input array size,%{public}lu,index,%{public}d
CLRR,setLocationPoint,startOfArray,failed to convert LLA to ENU at index,%{public}d
CLRR,setLocationPoint,startOfArray,projectionOnNextSegment,failed to get projection ratio at index,%{public}d
CLRR,setLocationPoint,startOfArray,projectionOnNextSegment,failed to update scoreboard at index,%{public}d
CLRR,setLocationPoint,startOfArray,this matched point has already been the projected point,skip this point
CLRR,setLocationPoint,startOfArray,failed to update scoreboard at index,%{public}d
CLRR,setLocationPoint,endOfArray,failed to convert LLA to ENU at index,%{public}d
CLRR,setLocationPoint,endOfArray,projectionOnPreviousSegment,failed to get projection ratio at index,%{public}d
CLRR,setLocationPoint,endOfArray,projectionOnPreviousSegment,failed to update scoreboard at index,%{public}d
CLRR,setLocationPoint,endOfArray,this matched point has already been the projected point,skip this point
CLRR,setLocationPoint,endOfArray,failed to update scoreboard at index,%{public}d
CLRR,setLocationPoint,failed to convert LLA to ENU at index,%{public}d
CLRR,setLocationPoint,projectionOnBothSegments,wrt n1,failed to get projection ratio at index,%{public}d
CLRR,setLocationPoint,projectionOnBothSegments,wrt n0,failed to get projection ratio at index,%{public}d
CLRR,setLocationPoint,projectionOnBothSegments,pickedNearestPoint,this matched point has already been the projected point,skip this point
CLRR,setLocationPoint,projectionOnBothSegments,pickedNearestPoint,failed to update scoreboard at index,%{public}d
CLRR,setLocationPoint,projectionOnBothSegments,pickedNextSegment,failed to update scoreboard at index,%{public}d
CLRR,setLocationPoint,projectionOnBothSegments,pickedPreviousSegment,failed to update scoreboard at index,%{public}d
CLRR,setLocationPoint,projectionOnNearestPoint,this matched point has already been the projected point,skip this point
CLRR,setLocationPoint,projectionOnNearestPoint,failed to update scoreboard at index,%{public}d
CLRR,setLocationPoint,projectionOnNextSegment,failed to get projection ratio at index,%{public}d
CLRR,setLocationPoint,projectionOnNextSegment,failed to update scoreboard at index,%{public}d
CLRR,setLocationPoint,projectionOnPreviousSegment,failed to get projection ratio at index,%{public}d
CLRR,setLocationPoint,projectionOnPreviousSegment,failed to update scoreboard at index,%{public}d
CLRR,getNumberOfRoutePointsToAdd,required number of points,%{public}d
CLRR,updateRoutePointsBuffer,input data array is null
CLRR,updateRoutePointsBuffer,recovery mode,update started,number of requested points,%{public}d,number of given points,%{public}d
CLRR,updateRoutePointsBuffer,update started,number of requested points,%{public}d,number of given points,%{public}d
CLRR,updateRoutePointsBuffer,input data array is empty
CLRR,updateRoutePointsBuffer,no more data available,rolling buffer includes the end of the reference route
CLRR,updateRoutePointsBuffer,buffer capacity exceeded,bufferSize,%{public}d,numberOfPointsToAdd,%{public}d,routePointsCount,%{public}d
CLRR,updateRoutePointsBuffer,rolling buffer includes the end of the reference route
CLRR,updateRoutePointsBuffer,buffer capacity exceeded,bufferSize,%{public}d,numberOfPointsToAdd,%{public}d,bufferedRoutePointsCount,%{public}u
CLRR,updateRoutePointsBuffer,location series too short,minimumPointsToProcess,%{public}u,bufferedRoutePointsCount,%{public}u
CLRR,updateRoutePointsBuffer,buffer capacity exceeded,bufferSize,%{public}d,bufferedRoutePointsCount,%{public}u,routePointsCount,%{public}d
CLRR,updateRoutePointsBuffer,unable to convert reference route to matrix
CLRR,updateRoutePointsBuffer,update completed,rollingBufferUpdateCounter,%{public}d,lastMatchedPointIndex,%{public}d,rollingBufferStartIndexOnReferenceRoute,%{public}d,referenceRouteDataPointCounter,%{public}d,numberOfRoutePointsToAdd,%{public}d,routePointsArrayInitialized,%{public}d
CLRR,getDistanceDuringOffRoutePeriod,current data point is null
CLRR,getDistanceDuringOffRoutePeriod,invalid array index, %{public}d
CLRR,getDistanceDuringOffRoutePeriod,invalid time, %{public}.2lf
CLRR,getDistanceDuringOffRoutePeriod,distAlongRefRoute,%{private}.2lf,refDistAlongRefRoute,%{private}.2lf
CLRR,printDebugLog,pointType,%{public}s,time,%{public}.1lf,lat,%{private}.7lf,lon,%{private}.7lf,alt,%{private}.2lf,timeFromStart,%{public}.1lf,offRouteTime,%{public}.1lf,distFromStart,%{public}.2lf,offRouteDist,%{public}.2lf,pace,%{private}.2lf,odom,%{public}.2lf,distAlongRefRoute,%{public}.2lf,refTime,%{public}.1lf,refLat,%{private}.7lf,refLon,%{private}.7lf,refAlt,%{private}.2lf,refTimeFromStart,%{public}.1lf,refOffRouteTime,%{public}.1lf,refDistFromStart,%{public}.2lf,refOffRouteDist,%{public}.2lf,refPace,%{private}.2lf,refOdom,%{public}.2lf,refDistAlongRefRoute,%{public}.2lf,signalEnv,%{public}d,timeAhead,%{public}.2lf,distanceAhead,%{public}.2lf
CLRR,printRoutePointArray,fRoutePoints is a null pointer
CLRR,printRoutePointArray,boxRows,%{public}d,boxColumns,%{public}d,boxMinLat,%{private}.7lf,boxMaxLat,%{private}.7lf,boxMinLon,%{private}.7lf,boxMaxLon,%{private}.7lf
CLRR,printRoutePointArray,time,%{public}.1lf,lat,%{private}.7lf,lon,%{private}.7lf,alt,%{private}.2lf,odom,%{public}.2lf,signalEnv,%{public}d,pointCount,%{public}d
CLRR,configureRouteModel,unsupported activity type,%{public}d
CLRR,configureRouteModel,buffer size is too small,%{public}d
CLRR,configureRouteModel,configuration succeeded,workout activity type,%{public}u,route points rolling buffer size,%{public}d,number of route points to add,%{public}d,off route grace duration,%{public}d
CLRR,getPerformanceResults,route model has NOT been configured successfully,expire the race session
CLRR,getPerformanceResults,passed finish line
CLRR,getPerformanceResults,current data point is null
CLRR,getPerformanceResults,invalid input data,time,%{public}.1lf,lastOnRouteTime,%{public}.1lf,odom,%{public}.2lf,lastOnRouteOdom,%{public}.2lf
CLRR,getPerformanceResults,invalid input data,lat,%{private}.7lf,lon,%{private}.7lf,alt,%{private}.2lf
CLRR,getPerformanceResults,race session expired
CLRR,getPerformanceResults,race session expired but failed to updateDistanceDuringOffRoutePeriod
CLRR,getPerformanceResults,pointType,currentLocation,time,%{private}.1lf,lat,%{private}.7lf,lon,%{private}.7lf,alt,%{private}.2lf,odom,%{private}.2lf,signalEnv,%{private}d,pointCount,%{public}d
CLRR,getPerformanceResults,reference route total length,%{private}.2lf
CLRR,getPerformanceResults,invalid signal environment type,%{public}d
CLRR,getPerformanceResults,nearest neighbor maximum accepted distance,%{private}.2lf
CLRR,getPerformanceResults,race not started yet,current location outside of bounding box,unspecified state
CLRR,getPerformanceResults,current location outside of bounding box,user is off-route
CLRR,getPerformanceResults,user is off-route but failed to updateDistanceDuringOffRoutePeriod
CLRR,getPerformanceResults,current location outside of bounding box,unspecified state
CLRR,getPerformanceResults,unspecified state,invalid index for location,lat,%{private}.7lf,lon,%{private}.7lf
CLRR,getPerformanceResults,race not started yet,unspecified state
CLRR,getPerformanceResults,user is off-route
CLRR,getPerformanceResults,unspecified state
CLRR,setRacingRouteParameters,set race parameters
CLRR,setRacingRouteParameters,racingRouteParameters is null
CLRR,setRacingRouteParameters,racingRouteParameters.routeMatrixIndexVec is null
CLRR,setRacingRouteParameters,racingRouteParameters.racingRouteVariables is null
CLRR,setRacingRouteParameters,racingRouteParameters.routeBoundingBox is null
CLRR,setRacingRouteParameters,racingRouteParameters.startPointOnCurrentRoute is null
CLRR,setRacingRouteParameters,racingRouteParameters.startPointOnReferenceRoute is null
CLRR,setRacingRouteParameters,racingRouteParameters.lastOnRouteDataPoint is null
CLRR,setRacingRouteParameters,racingRouteParameters.lastProjectedDataPoint is null
CLRR,setRacingRouteParameters,recoveryMode,%{public}d,lastMatchedPointIndex,%{public}d,lastMatchedPointIndexOnReferenceRoute,%{public}d,timestampOfLastMatchedPointOnReferenceRoute,%{public}.1lf
processed %p %d to (%s)
could not create new mutable dictionary
{"msg%{public}.0s":"could not deserialize property list", "file":%{public, location:escape_only}s}
could not deserialize property list
{"msg%{public}.0s":"file does not exist... clearing", "file":%{public, location:escape_only}s, "error":%{public, location:escape_only}s}
file does not exist... clearing
{"msg%{public}.0s":"#Warning Error reading file", "file":%{public, location:escape_only}s, "error":%{public, location:escape_only}s}
#Warning Error reading file
Could not create NSURL for file: %{public}s
Could not write data to disk %{public}s, %{public}s
Could not serialize data for file %{public}s
{"msg%{public}.0s":"Could not serialize data", "file":%{public, location:escape_only}s}
Could not serialize data
key %{public}s does not have element %{public}d in array of size %{public}ld
key %{public}s does not have element %{public}d in non-array type %{public}lu
Unsupported type at %@:%@ (domain:key)
type IDs do not match for key %{public}s - %{public}lu vs %{public}lu
specified index is out of range for key %{public}s (%{public}d of %{public}ld)
specified index %{public}d not applicable to type %{public}lu for key %{public}s
could not create cf type for key %{public}s
could not create write stream
could not open write stream
could not write data, error code, %{public}ld, error domain, %{public}s
could not create intermediate property list - %{public}ld (%{public}s)
%s = <dictionary (%ld entries)>:
%s = %s
%s = %0.6f
%s = %d
%s = <unhandled value type %lu>
could not get value
type IDs do not match - %{public}lu vs %{public}lu
could not convert to C string
can't convert %{public}u data bytes
#Warning type IDs do not match - %{public}lu
{"msg%{public}.0s":"rangeForTransmitPower: invalid range of transmit power", "transmitPower_dBm":"%{public}.6f"}
rangeForTransmitPower: invalid range of transmit power
{"msg%{public}.0s":"Selected location", "loc":%{private, location:escape_only}s}
{"msg%{public}.0s":"Removed location", "loc":%{private, location:escape_only}s}
Reductive filtering: Sum of weights <= 0 after at least one point added.
{"msg%{public}.0s":"Reductive filtering", "input":%{public}d, "outliers":%{public}d, "used":%{public}d, "transmitPower":"%{public}.6f", "rangeOfBeacon":"%{public}.6f", "lat":"%{private}f", "lon":"%{private}f", "hunc":"%{private}f", "timestamp":%{public, location:escape_only}s, "isAccurateLocationAvailable":%{public}hhd, "filtered":%{public}d}
{"msg%{public}.0s":"Reductive filtering - options", "beaconType":%{public}lu, "transmitPower":"%{public}.6f", "biasRate":"%{public}.6f", "applyRangeEstimation":%{public}hhd}
{"msg%{public}.0s":"Reductive filtering - location observations", "countInput":%{public}lu, "countFiltered":%{public}lu, "loc":%{private, location:escape_only}s}
{"msg%{public}.0s":"Reductive filtering - location trace", "countInput":%{public}lu, "countFiltered":%{public}lu, "loc":%{private, location:escape_only}s}
Unable to load CompassUI framework
Could not load CUICalibrationClass from CompassUI framework
{"msg%{public}.0s":"CSI assertion failed", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
CSI assertion failed
***not supported***
<empty>
Attempt to set key %{public}s for read-only preferences %{public}s/%{public}s!
unknown hardware type %{private}d
Unsupported HW type %d; file a radar to CoreMotion Factory | 1.0
Unsupported HW type %{private}d; file a radar to CoreMotion Factory | 1.0
motion default ignored,'%{public}s'.
no mutable store path for type, %{public}d
could not get mutable store path for type, %{public}d
{"msg%{public}.0s":"CLBBTFTA,reason missing"}
CLBBTFTA,reason missing
{"msg%{public}.0s":"CLBBTFTA,bundleID or bundlePath needed"}
CLBBTFTA,bundleID or bundlePath needed
{"msg%{public}.0s":"CLBBTFTA,nil callback queue"}
CLBBTFTA,nil callback queue
{"msg%{public}.0s":"CLBBTFTA,nil callback block"}
CLBBTFTA,nil callback block
CLBBTFTA,unexpected message,%s
{"msg%{public}.0s":"CLBBTFTA", "Connection Message":%{public, location:escape_only}s}
{"msg%{public}.0s":"Could not serialize _CLVLLocalizationResult", "error":%{public, location:escape_only}@}
Could not serialize _CLVLLocalizationResult
{"msg%{public}.0s":"identifier is nil"}
identifier is nil
{"msg%{public}.0s":"identifier is too long"}
identifier is too long
#CLEU,CLGetUncertaintyScaleFactors,input horzontal or vertical SF pointer is NULL
#CLEU,CLGetUncertaintyScaleFactors,confidence out of bounds,%{public}d
#CLEU,CLGetUncertaintyScaleFactors,conf,%{public}d,horzSF,%{public}f,vertSF,%{public}f
#CLEU,linearInterp,x is less than the first point in table,x,%{public}d,table[0].first,%{public}d
#CLEU,linearInterp,x is greater than the last point in table,x,%{public}d,table[size-1].first,%{public}d
#CLEU,linearInterp,failed to find table points bounding x
this SPI is obsolete and will be removed in the future
{"msg%{public}.0s":"getDaemonProxy called"}
{"msg%{public}.0s":"no existing connection, trying to get one"}
Simulation connection interrupted
Simulation connection invalidated
Error fetching remoteObjectProxy
{"msg%{public}.0s":"Do we have a proxy?", "proxy":%{public, location:escape_only}@, "connection":%{public, location:escape_only}@}
Failed parse os_log format specifier for shimming:missing closing brace,format,%{public}s
Do not use CLGeocoder when GeoServices is missing
{"msg%{public}.0s":"Do not use CLGeocoder when GeoServices is missing", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Coarse MetaData cannot be decoded while reverse geocoding location, error, %@
#Warning Geocode error: %{private}@
#Spi, Interrupted
#Spi, Invalidated
#Spi, Error with proxy, error: %@
#Spi, Key is NULL!
#Spi, Couldn't set location default!
{"msg%{public}.0s":"#Spi, getLocationDefaultForKey, ", "error":%{public, location:escape_only}@}
#Spi, setPrivateMode failed
#Spi, CLInternalSetLocationServicesEnabled failed
#Spi, CLInternalSetAuthorizationPromptMapDisplayEnabled failed
{"msg%{public}.0s":"#Spi, CLSetClientTransientAuthorizationInfo failed", "error":%{public, location:escape_only}@}
#Spi, CLSetClientTransientAuthorizationInfo failed
{"msg%{public}.0s":"#Spi, CLGetClientTransientAuthorizationInfo failed", "error":%{public, location:escape_only}@}
#Spi, CLGetClientTransientAuthorizationInfo failed
{"msg%{public}.0s":"#Spi, CLInternalChangeClientAuthorizationTime failed", "error":%{public, location:escape_only}@}
#Spi, CLInternalChangeClientAuthorizationTime failed
{"msg%{public}.0s":"#Spi, CLInternalTriggerExpiredAuthorizationPurge failed", "error":%{public, location:escape_only}@}
#Spi, CLInternalTriggerExpiredAuthorizationPurge failed
#Spi, CLInternalSetGestureServiceEnabled failed
{"msg%{public}.0s":"#Spi, CLInternalGetPrecisionPermission failed", "error":%{public, location:escape_only}@}
#Spi, CLInternalGetPrecisionPermission failed
#Spi, _CLInternalPerformMigration failed
#Spi, _CLShutdownDaemon failed
#Spi, _CLDisplayStatistics failed
#Spi, _CLDumpLogs failed
#Spi,RouteHintError, Exceeded max number of route hint road segments (%{public}d > %{public}d)
#Spi,RouteHint,LocationInternal,Received route hint road segments,%{public}d,routeType,%{public}d,stepType,%{public}d
#Spi,RouteHintError,Couldn't set map-matching route hint!
#Spi,CLTR,CLTrackRunHint received,framework side
#Spi,CLTR,TrackRunHintError,Couldn't set track run hint!
#Spi,getAccessoryTypeBitSet,failed
#Spi,getAccessoryTypeBitSet,%d
#Spi,getAccessoryPASCDTransmissionState,failed
#Spi,getAccessoryPASCDTransmissionState,%d
#Spi,getOdometryBatchedLocations,received data count,%{public}lu
#Spi,getOdometryBatchedLocations,returned with error
#Spi,getOdometryBatchedLocations,returned with count,%{public}lu
#Spi, _CLCopyLastLog failed
{"msg%{public}.0s":"#Spi, Setting status bar enabled for entity class failed", "entityClass":%{public, location:CLLocationDictionaryUtilitiesEntityClass}lld}
#Spi, Setting status bar enabled for entity class failed
{"msg%{public}.0s":"Getting status bar enabled for entity class failed", "entityClass":%{public, location:CLLocationDictionaryUtilitiesEntityClass}lld}
Getting status bar enabled for entity class failed
CL: CLInternalSetAuthorizationStatus
{"msg%{public}.0s":"CLInternalSetAuthorizationStatus", "event":%{public, location:escape_only}s}
CL: CLCopyAppsUsingLocation
{"msg%{public}.0s":"CLCopyAppsUsingLocation", "event":%{public, location:escape_only}s}
CL: CLCopyActiveClientsUsingLocation
{"msg%{public}.0s":"CLCopyActiveClientsUsingLocation", "event":%{public, location:escape_only}s}
CL: CLSetLocationDefault
{"msg%{public}.0s":"CLSetLocationDefault", "event":%{public, location:escape_only}s, "key":%{public, location:escape_only}@}
CL: CLCopyMicroLocationInternalVersion
{"msg%{public}.0s":"CLCopyMicroLocationInternalVersion", "event":%{public, location:escape_only}s}
CL: CLCopyZaxisStats
{"msg%{public}.0s":"CLCopyZaxisStats", "event":%{public, location:escape_only}s}
CL: CLCopyTechnologiesInUse
{"msg%{public}.0s":"CLCopyTechnologiesInUse", "event":%{public, location:escape_only}s}
CL: CLCopyGnssBandsInUse
{"msg%{public}.0s":"CLCopyGnssBandsInUse", "event":%{public, location:escape_only}s}
Invalid bandUse,%{public}d
CL: CLGetLocationDefault
{"msg%{public}.0s":"CLGetLocationDefault", "event":%{public, location:escape_only}s, "key":%{public, location:escape_only}@}
CL: CLGetPipelinedCaches
{"msg%{public}.0s":"CLGetPipelinedCaches", "event":%{public, location:escape_only}s}
CL: CLGetMotionSensorLogs
{"msg%{public}.0s":"CLGetMotionSensorLogs", "event":%{public, location:escape_only}s}
CL: CLGetAccessoryMotionSensorLogs
{"msg%{public}.0s":"CLGetAccessoryMotionSensorLogs", "event":%{public, location:escape_only}s}
CL: CLApplyArchivedAuthorizationDecisions
{"msg%{public}.0s":"CLApplyArchivedAuthorizationDecisions", "event":%{public, location:escape_only}s}
CL: CLGetArchivedAuthorizationDecisions
{"msg%{public}.0s":"CLGetArchivedAuthorizationDecisions", "event":%{public, location:escape_only}s}
CL: CLTimeZoneAtLocation
{"msg%{public}.0s":"CLTimeZoneAtLocation", "event":%{public, location:escape_only}s}
CL: CLStartStopAdvertisingBeacon
{"msg%{public}.0s":"CLStartStopAdvertisingBeacon", "event":%{public, location:escape_only}s, "region":%{private, location:escape_only}@, "power":%{public, location:escape_only}@}
CL: CLPingDaemon
{"msg%{public}.0s":"CLPingDaemon", "event":%{public, location:escape_only}s}
CL: CLPassKitNotifyPassUsage
{"msg%{public}.0s":"CLPassKitNotifyPassUsage", "event":%{public, location:escape_only}s}
CL: CLWeatherNotifyForecastUsage
{"msg%{public}.0s":"CLWeatherNotifyForecastUsage", "event":%{public, location:escape_only}s}
CL: CLGetClientTransientAuthorizationInfo
{"msg%{public}.0s":"CLGetClientTransientAuthorizationInfo", "event":%{public, location:escape_only}s}
CL: CLSetClientTransientAuthorizationInfo
{"msg%{public}.0s":"CLSetClientTransientAuthorizationInfo", "event":%{public, location:escape_only}s}
CL: CLInternalGetPrecisionPermission
{"msg%{public}.0s":"CLInternalGetPrecisionPermission", "event":%{public, location:escape_only}s}
CL: CLInternalGetAuthorizationStatus
{"msg%{public}.0s":"CLInternalGetAuthorizationStatus", "event":%{public, location:escape_only}s}
CL: CLInternalGetIncidentalUseMode
{"msg%{public}.0s":"CLInternalGetIncidentalUseMode", "event":%{public, location:escape_only}s}
CL: CLInternalPerformMigration
{"msg%{public}.0s":"CLInternalPerformMigration", "event":%{public, location:escape_only}s}
CL: CLGetStatusBarIconState
{"msg%{public}.0s":"CLGetStatusBarIconState", "event":%{public, location:escape_only}s}
CLStatusBarIconState received an icon stateu of %d
CL: CLSetMapMatchingRouteHint
{"msg%{public}.0s":"CLSetMapMatchingRouteHint", "event":%{public, location:escape_only}s}
RouteHints,CLSetRouteHintsForMapMatching,received,%lu,routeType,%d,stepType,%d
CL: CLSetRouteHintsForMapMatching
{"msg%{public}.0s":"CLSetRouteHintsForMapMatching", "event":%{public, location:escape_only}s}
RouteHints,CLSetRouteHintsForMapMatching,received,%lu,routeType,%d
CL: CLSetTrackRunHint
{"msg%{public}.0s":"CLSetTrackRunHint", "event":%{public, location:escape_only}s}
TrackRunHint,CLSetTrackRunHint,received,MCTime,%{public}.1lf,lane,%{private}d,notification,%{private}d
CLGetAccessoryTypeBitSet
CLGetAccessoryPASCDTransmissionState
CLGetOdometryBatchedLocations
CL: CLInternalSetTemporaryAuthorizationGranted
{"msg%{public}.0s":"CLInternalSetTemporaryAuthorizationGranted", "event":%{public, location:escape_only}s}
CL: CLInternalSetLocationButtonUseMode
{"msg%{public}.0s":"CLInternalSetLocationButtonUseMode", "event":%{public, location:escape_only}s}
CL: CLInternalSetAuthorizationStatusByType
{"msg%{public}.0s":"CLInternalSetAuthorizationStatusByType", "event":%{public, location:escape_only}s}
CL: CLInternalSetIncidentalUseMode
{"msg%{public}.0s":"CLInternalSetIncidentalUseMode", "event":%{public, location:escape_only}s}
{"msg%{public}.0s":"Could not serialize _CLARSessionState"}
Could not serialize _CLARSessionState
Do not use CLPlaceMark when GeoServices is missing
{"msg%{public}.0s":"Do not use CLPlaceMark when GeoServices is missing", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"transmitPower: invalid range of transmit power", "transmitPower_dBm":"%{public}.6f", "min.TransmitPower_dBm":"%{public}.6f", "max.TransmitPower_dBm":"%{public}.6f"}
transmitPower: invalid range of transmit power
[%{public}@] Location Push Service extension context initialized
[%{public}@] didReceiveLocationPushPayload:reply:
[%{public}@] Location Push Service extension time will expire
[%{public}@] Cleaning up extension
#polygon,number of vertices (%{public}lu) mustn't exceed %{public}lu
#polygon,number of vertices (%{public}lu) must be greater or equal than %{public}lu
#polygon,monitoring requires a valid connected polygon where first and last coordinates are the same
#polygon,All vertices, except for the first and last equals, have to be unique
#polygon,#warning invalid coordinate
#polygon,#warning No points data found for polygon
#polygon,#warning distanceToBorder is nil
#polygon,distanceToBorder,%.3lf,inRegion %d
CLHarvester invalidation handler
CLHarvester interruption handler
CLHarvester synchronous remote proxy invalidated
CLHarvester fetchState reply block called
{"msg%{public}.0s":"Could not serialize _CLVIOEstimation", "error":%{public, location:escape_only}@}
Could not serialize _CLVIOEstimation
{"msg%{public}.0s":"Subclass should have overriden this", "class":%{public, location:escape_only}s, "SEL":%{public, location:escape_only}s}
Subclass should have overriden this
{"msg%{public}.0s":"Dictionary utilites reported the arrow is in max state?!", "clientRecord":%{public, location:escape_only}@}
Dictionary utilites reported the arrow is in max state?!
informing client -- did retreive personalization info for device: %s - %s with info: %@
informing client -- firmware update for device: %s - %s
informing client -- use local asset request for product group: %s, product number: %s - %s
informing client -- use default asset request for product group: %s, product number: %s - %s
informing client -- local firmware asset is %s for product group: %s, product number: %s
CLFindMyAccessoryFirmwareUpdateManager - Unknown Message - ignoring
getPersonalizationInfoForDevice: %@
updateFirmwareForDevice for device: %@ with assetURL: %@
abortFirmwareUpdateForDevice: %@
useLocalFirmwareAssetFromURL: %@ forProductGroup: %@ forPorductNumber: %@ withSandboxExtension: %@
useDefaultFirmwareAssetSourceForProductGroup: %@ forPorductNumber: %@
fetchWhetherLocalFirmwareAssetIsInUseForProductGroup: %@ forPorductNumber: %@
#Warning refAlt < %.1lf,refAlt,%.1lf,using the min
#Warning refAlt > %.1lf,refAlt,%.1lf,using the max
LowPower not supported for this object/platform
Conservative not supported for this object/platform
%{public}@,vuncCheckRequiredForUsability,%{public}d,altitudeStitchingEnabled,%{public}d,maxUsableAge,%{public}f,maxUsableHunc,%{public}f,maxUsableVunc,%{public}f,minUsableIntegrity,%{public}d
#CLELS,%{public}@,printConfiguration,firstUpdateEnabled,%{public}d,periodicUpdatesEnabled,%{public}d,firstLocationMaxEarlyReturnHunc,%{public}f,firstLocationMaxEarlyReturnVunc,%{public}f,locationUpdateHuncReductionToSendEarly,%{public}f,locationUpdateDistanceMovedToSendEarly,%{public}f,firstLocationEarlyReturnEnabled,%{public}d,firstLocationTimeout,%{public}f,locationUpdateTimeout,%{public}f,locationUpdateMinDelay,%{public}f
#CLELS,%{public}@,updateLocation,nil Location object
#CLELS,%{public}@,updateLocation,lat,%{private}.7f,lon,%{private}.7f,hunc,%{public}f,alt,%{private}f,ellipsoidalAlt,%{private}f,vunc,%{public}f,timestamp,%{public}@,locationType,%{public}d,integrity,%{public}d
#CLELS,%{public}@,isLocationUsable,invalid parameters
#CLELS,%{public}@,isLocationUsable,invalid coordinates
#CLELS,%{public}@,isLocationUsable,location too old. Age:%{public}f
#CLELS,%{public}@,isLocationUsable,horizontal accuracy too low. Hunc:%{public}f
#CLELS,%{public}@,isLocationUsable,integrity too low. Integrity:%{public}d
#CLELS,%{public}@,isLocationUsable,unusable altitude
#CLELS,%{public}@,isLocationUsableForFirstUpdate,not saving,invalid parameters
#CLELS,%{public}@,isLocationUsableForFirstUpdate,not saving,invalid hunc
#CLELS,%{public}@,isLocationUsableForFirstUpdate,not saving,integrity too low. Integrity:%{public}d
#CLELS,%{public}@,isLocationUsableForFirstUpdate,saving,haven't save first update before.
#CLELS,%{public}@,isLocationUsableForFirstUpdate,saving,better Hunc
#CLELS,%{public}@,isLocationUsableForFirstUpdate,saving,location changed significantly,dist,%{public}f
#CLELS,%{public}@,isLocationUsableForFirstUpdate,not saving
#CLELS,%{public}@,isAltitudeUsable,NO,invalid parameters
#CLELS,%{public}@,isAltitudeUsable,NO,vertical accuracy too low,%{public}.2f
#CLELS,%{public}@,isAltitudeUsable,NO,received altitude is not valid,%{private}.2f
#CLELS,%{public}@,isAltitudeUsableForFirstUpdate,YES,FirstUpdateVerticalLocation being saved first time
#CLELS,%{public}@,isAltitudeUsableForFirstUpdate,YES,received Vunc better than cached Vunc
#CLELS,%{public}@,isAltitudeUsableForFirstUpdate,YES,altitude change significant,%{public}f
#CLELS,%{public}@,isAltitudeUsableForFirstUpdate,NO
#CLELS,%{public}@,shouldSendFirstLocationEarly,not sending,invalid cached location
#CLELS,%{public}@,shouldSendFirstLocationEarly,not sending,invalid coordinates
#CLELS,%{public}@,shouldSendFirstLocationEarly,not sending,First location early return Hunc not satisfied
#CLELS,%{public}@,shouldSendFirstLocationEarly,not sending,First location early return Vunc not satisfied
#CLELS,%{public}@,shouldSendFirstLocationEarly,can send first location early
#CLELS,%{public}@,shouldSendLocationUpdateEarly,not sending,invalid cached location
#CLELS,%{public}@,shouldSendLocationUpdateEarly,sending,first valid fix being sent after sending no fix or nil fix
#CLELS,%{public}@,shouldSendLocationUpdateEarly,not sending,last send was too recent,tDiff,%{public}f
#CLELS,%{public}@,shouldSendLocationUpdateEarly,sending,higher hunc reduction,previous,%{public}f,current,%{public}f
#CLELS,%{public}@,shouldSendLocationUpdateEarly,sending,location changed significantly,dist,%{public}f
#CLELS,%{public}@,shouldSendLocationUpdateEarly,sending,altitude is usable now
#CLELS,%{public}@,shouldSendLocationUpdateEarly,sending,higher vunc reduction,previous,%{public}f,current,%{public}f
#CLELS,%{public}@,shouldSendLocationUpdateEarly,sending,higher altitude change,%{public}f
#CLELS,%{public}@,canSendLocationAtTimeout,will send nil location
#CLELS,%{public}@,canSendLocationAtTimeout,not sending,location too old. Age:%{public}f
#CLELS,%{public}@,sendCachedLocation,location sent to client without altitude stitching
#CLELS,%{public}@,sendCachedLocation,location sent to client with altitude stitching
#CLELS,%{public}@,sendCachedLocation,location sent to client with altitude cleared
#CLELS,%{public}@,sendFirstUpdateLocation,send nil Location
#CLELS,%{public}@,sendFirstUpdateLocation,FirstUpdateHorizontalLocation,with altitude cleared
#CLELS,%{public}@,sendFirstUpdateLocation,FirstUpdateHorizontalLocation,with altitude stitching
#CLELS,%{public}@,sendFirstUpdateLocation,FirstUpdateHorizontalLocation,as-is
#CLELS,%{public}@,sendLocation,nil location sent to client
#CLELS,%{public}@,sendLocation,lat,%{private}.7f,lon,%{private}.7f,hunc,%{public}f,alt,%{private}f,ellipsoidalAlt,%{private}f,vunc,%{public}f,timestamp,%{public}@,locationType,%{public}d,integrity,%{public}d
%sstate,%d,%s
%scurrent_state,%s,event,%s
%sNested invocation of state machine
%snewState,%s
%soldState,%s,event,%s
%snewState,%s,event,%s
%sInvoking timers without callback queue set
%sCannot start timer, event, %{public}s, timeOutSec, %{public}.2f
%scannot create timer, event, %{public}s
%sevent,%s,timeout,%.2f
%scancel timer,event,%s
#Warning,%s,cancel timer,notFound, event,%s
{"msg%{public}.0s":"Requesting new assertion", "messageDictionary":%{public, location:escape_only}@}
CLClientRef CLClientAllocate(CFAllocatorRef, CLClientCallback, const CLClientContext *)
CoreLocation: non-matching retain (%p) and release (%p) functions in context, ignoring
CoreLocation: Failed to initilize fHeadingCalibrationDisplayMutex, error code: %{public}d
com.apple.CoreLocation.%p
UIApplicationWillResignActiveNotification
UIApplicationDidBecomeActiveNotification
v8@?0
activity
CLClient-runloop
UIBackgroundModes
location
assert
client->fInvalidated
%s:%d: assertion failure in %s
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Framework/CLClient.mm
_CLClientDestroy
!client->fContext.info
<CLClient %p [%p]>
CLClient
void CLClientInvokeCallback(CLClientRef, CLClientEvent, id)
CoreLocation: Location callback block not executed in a timely manner!
CoreLocation: Discarding message for event %{private}d because of too many unprocessed messages
void CLClientHandleWillResignActiveNotification(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)
CoreLocation: received client will resign active notification
void CLClientHandleDidBecomeActiveNotification(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)_block_invoke
CoreLocation: received client did become active notification
kCLConnectionMessagePurposeKey
kCLConnectionMessagePurpose
kCLConnectionMessagePurposeIdentifierKey
void CLClientRequestAuthorization(CLClientRef, CLClientAuthorizationStatus, CLNameValuePair &)
CoreLocation: Invalid requested authorization: %{public}d
CoreLocation: Missing UsageDescription key for requested authorization: %{public}d
kCLConnectionMessageStatusKey
kCLConnectionMessageRequestAuthorization
kCLConnectionMessagePurposeIdentifierKey
kCLConnectionMessagePurposeKey
kCLConnectionMessageRequestTemporaryPrecise
kCLConnectionMessageErrorKey
v24@?0{shared_ptr<CLConnectionMessage>=^{CLConnectionMessage}^{__shared_weak_count}}8
kCLConnectionMessageSubscribeKey
kCLConnectionMessageLocationPush
kCLConnectionMessagePushTokenKey
kCLConnectionMessageSubscribeKey
com.apple.runtime-issues
CoreLocation
Boolean CLClientIsLocationServicesEnabled(CLClientRef)
CoreLocation: #Warning CLInternalGetLocationServicesEnabled failed: could not reach daemon
Boolean CLClientIsAuthorizationPromptMapDisplayEnabled()
CoreLocation: #Warning CLInternalGetAuthorizationPromptMapDisplayEnabled failed: could not reach daemon
mach-lookup
com.apple.locationd.registration
CLClientShutdownDaemon
Boolean CLClientShutdownDaemon(CLClientRef)
CoreLocation: CLClient is deprecated. Will be obsolete soon. (%{public}s)
CLClientLogDump
Boolean CLClientLogDump(CLClientRef, const char *, Boolean)
kCLConnectionMessageCurrentClientDictionary
kCLConnectionMessageDesiredAccuracyKey
kCLConnectionMessageDistanceFilterKey
kCLConnectionMessageDynamicAccuracyReductionKey
kCLConnectionMessageAlteredAccessoryLocationsKey
kCLConnectionMessageLocation
kCLConnectionMessageEnabledKey
kCLConnectionMessageIsActuallyAWatchKitExtension
kCLConnectionMessageProxyForRemoteClient
kCLConnectionMessageHeadingFilterKey
kCLConnectionMessageHeading
Boolean CLClientShowHeadingCalibration(CLClientRef, Boolean)
CoreLocation: Application inactive, will not show heading calibration
kCLConnectionMessageSLCDistanceKey
kCLConnectionMessageSLCPowerBudgetKey
kCLConnectionMessageSignificantLocationChange
kCLConnectionMessagePlaceInferenceFidelityPolicyKey
kCLConnectionMessagePlaceInference
kCLConnectionMessagePlaceInferenceStopKey
kCLConnectionMessagePlaceInferenceStop
kCLConnectionMessageSignificantLocationVisitTypeKey
kCLConnectionMessageSignificantLocationVisit
kCLConnectionMessageSignificantLocationVisitState
kCLConnectionMessageRegionMonitoring
kCLConnectionMessageTranscriptSession
kCLConnectionMessageTranscriptFetchRadiusKey
kCLConnectionMessageTranscriptFetchSampleCountKey
kCLConnectionMessageTranscriptFetchCenterKey
kCLConnectionMessageTranscriptFetch
void CLClientFetchTranscriptLocations(CLClientRef, double, int, CLLocationCoordinate2D, void (^)(NSArray *, NSError *))_block_invoke
CoreLocation: #transcriptSession reply for fetchTranscriptLocation is nil
kCLConnectionMessageTranscriptFetchLocationsKey
kCLConnectionMessageTranscriptError
kCLConnectionMessageRequestHistoricalLocations
void CLClientRequestHistoricalLocations(CLClientRef, NSString *, NSInteger, void (^)(NSArray *, NSError *))_block_invoke
CoreLocation: #historicalLocations reply for fetchTranscriptLocation is nil
Boolean CLClientRequestRegionState(CLClientRef, CLRegion *)
CoreLocation: Fence: CLClientRequestRegionState, unsupported fence type, %{private}d
kCLConnectionMessageRegionState
kCLConnectionMessageBeaconRegionKey
kCLConnectionMessageCircularRegionKey
kCLConnectionMessageRangingPeersKey
kCLConnectionMessageRangingPeerTimeoutKey
kCLConnectionMessageRangingPeerInitiatorKey
kCLConnectionMessagePeerRanging
IsFitnessMatch
kCLConnectionMessageNameKey
kCLConnectionMessageOnBehalfOfKey
kCLConnectionMessageDeviceIDKey
kCLConnectionMessageHandoffTagKey
kCLConnectionMessageRegionTypeKey
kCLConnectionMessageNotifyOnEntryKey
kCLConnectionMessageNotifyOnExitKey
kCLConnectionMessageConservativeEntry
kCLConnectionMessageEmergencyKey
kCLConnectionMessageReferenceFrameKey
kCLConnectionMessageMonitoringNearby
kCLConnectionMessageLowPowerFenceKey
kCLConnectionMessageLatitudeKey
kCLConnectionMessageLongitudeKey
kCLConnectionMessageRadiusKey
kCLConnectionMessagePolygonalVerticesCountKey
Boolean CLClientPopulateRegionFromInfo(CLRegion **, CFDictionaryRef)
CoreLocation: Number of vertices received doesn't match stored, %{public}d, %{public}lu
CoreLocation: Number of vertices received invalid, %{public}d, internal
CoreLocation: Copied %{private}d vertices
kCLConnectionMessageNotifyEntryStateOnDisplayKey
kCLConnectionMessageProximityUUIDKey
kCLConnectionMessageMajorKey
kCLConnectionMessageMinorKey
kCLConnectionMessageRegionDefinitionKey
kCLConnectionMessageEventKey
kCLConnectionMessageErrorKey
kCLConnectionMessageAlternateRegionKey
kCLConnectionMessageRegionWatchdogSinceLast
kCLConnectionMessageIdentifierKey
kCLConnectionMessageRegionsKey
kCLConnectionMessageRanging
kCLConnectionMessageBeaconsKey
kCLConnectionMessageCompensationKey
kCLConnectionMessageAuthorizedForWidgetUpdatesKey
kCLConnectionMessageMatchInfoEnabled
kCLConnectionMessageGroundAltitudeEnabled
kCLConnectionMessageFusionInfoEnabled
kCLConnectionMessageTrackRunInfoEnabled
kCLConnectionMessageAllowsLocationPrompts
kCLConnectionMessageShowLocationPrompt
kCLConnectionMessageMarkAsHavingReceivedLocation
void CLClientSetAutomaticPromptingEnabled(CLClientRef, Boolean)
CoreLocation: kCLConnectionMessageAutomaticPromptingEnabled is not supported
kCLConnectionMessageARSessionState
kCLConnectionMessageVIOEstimation
kCLConnectionMessageVLLocalizationResult
kCLConnectionMessageActivityTypeKey
kCLConnectionMessageActivityType
kCLConnectionMessagePausesLocationUpdatesAutomaticallyKey
kCLConnectionMessagePausesLocationUpdatesAutomatically
Boolean CLClientGetAutopauseState(CFDictionaryRef, Boolean *, Boolean *)
CoreLocation: Invalid call to CLClientGetAutopauseState
kCLConnectionMessageAutopauseStatusKey
kCLConnectionMessageAutopauseOverrideKey
CoreLocation: malformed message: kCLConnectionMessageAutopauseStatus
kCLConnectionMessageAllowsBackgroundLocationUpdatesKey
kCLConnectionMessageAllowsBackgroundLocationUpdates
kCLConnectionMessageShowsBackgroundLocationIndicatorKey
kCLConnectionMessageShowsBackgroundLocationIndicator
kCLConnectionMessageBatchAllowedKey
kCLConnectionMessageBatchDistanceKey
kCLConnectionMessageBatchTimeoutKey
kCLConnectionMessageBatch
kCLConnectionMessageAllowsMapCorrectionKey
kCLConnectionMessageAllowsMapCorrection
kCLConnectionMessageRegisterAsLocationClient
kCLConnectionMessageVehicleSpeedKey
kCLConnectionMessageVehicleHeadingKey
kCLConnectionMessageVehicleSpeed
kCLConnectionMessageVehicleHeading
kCLConnectionMessageRequestMicroLocation
kCLConnectionMessageRequestMicroLocationRecordingScan
kCLConnectionMessageMicroLocationTruthLabelKey
kCLConnectionMessageMicroLocationRecordingTriggerUuidKey
kCLConnectionMessageMicroLocationDonateTruthLabelEvent
kCLConnectionMessageMicroLocationTruthLabelStartDateKey
kCLConnectionMessageMicroLocationTruthLabelEndDateKey
kCLConnectionMessageMicroLocationDonateTruthLabelBetweenDatesEvent
kCLConnectionMessageMicroLocationExportDatabaseTables
kCLConnectionMessageMicroLocationExportDatabaseTablesInfoKey
kCLConnectionMessageMicroLocationRequestStaticSourcesStatistics
kCLConnectionMessageMicroLocationRequestStaticSourcesStatisticsInfoKey
kCLConnectionMessagePurgeMicroLocationSemiSupervisedData
kCLConnectionMessageFetchEstimatedLocationDateKey
kCLConnectionMessageFetchEstimatedLocationAtDate
kCLConnectionMessageFetchEstimatedLocationLocationKey
com.apple.locationd.Core
Client
Generic
ClientsCohortWorkLoop
/System/Library/LocationBundles/RemindersAlerts.bundle
basic_string
kCLConnectionMessageCompensatedLocation
kCLClientEventKey
void _CLClientHandleMessage(CLClientRef, std::shared_ptr<CLConnectionMessage>)
CoreLocation: Got unhandled message %s from daemon
LocationManager/kCLConnectionMessageRegistration
kCLConnectionMessageError
kCLConnectionMessageLocationUnavailable
kCLConnectionMessageRegionMonitoringError
kCLConnectionMessageRangingError
kCLConnectionMessageRegionMonitoringResponseDelayed
kCLConnectionMessageRegionMonitoringSetupCompleted
kCLConnectionMessageAuthorizationStatus
kCLConnectionMessageAutopauseStatus
kCLConnectionMessagePeerRangingRequestProcessed
kCLConnectionMessagePeerRangingError
kCLConnectionMessagePlaceInferenceResult
kCLConnectionMessagePlaceInferenceError
kCLConnectionMessageRegionMonitoringNoLocationWatchdog
kCLConnectionMessageHeadingDataKey
kCLConnectionMessageBundleIdentifierKey
kCLConnectionMessageBundlePathKey
kCLConnectionMessageSubidentityKey
kCLConnectionMessageClientSDKAtLeast2014Key
kCLConnectionMessageClientSDKAtLeast2017Key
kCLConnectionMessageClientSDKAtLeast2019Key
kCLConnectionMessagePolygonalVerticesKey
CLLocationManagerRoutine.m
Invalid parameter not satisfying: %@
queue
locationManagerRoutine
com.apple.locationd.routine
v8@?0
Connection Interrupted, serviceName, %@
Connection Invalidated, serviceName %@
_CLLocationManagerRoutineProxy, %p
delegate must respond to selector locationManager:didUpdateLocations:
Routine
kCLConnectionMessageOverrideDeauthorizationKey
EmergencyEnablementAssertion/kCLConnectionMessage
CLFindMyAccessoryConnectionMaterial.m
[otherMaterial isKindOfClass:[CLFindMyAccessoryConnectionMaterial class]]
CLFindMyAccessoryConnectionMaterial <%p>, PrimaryIndex: %@, SecondaryIndex:%@, Address:%@, LTK:%@
address
primaryIndex
secondaryIndex
%02X:%02X:%02X:%02X:%02X:%02X
%02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X
UIApplicationWillEnterForegroundNotification
UIApplicationDidEnterBackgroundNotification
!_inTransaction
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Framework/CoreLocation/CLLocationManager.m
-[CLLocationManagerStateTracker initWithQueue:identifier:state:]
state_transition
LocationManager
init
lifecycle
distanceFilter
desiredAccuracy
updatingLocation
requestingLocation
requestingRanging
updatingRanging
updatingHeading
headingFilter
allowsLocationPrompts
allowsAlteredAccessoryLocations
dynamicAccuracyReductionEnabled
previousAuthorizationStatusValid
previousAuthorizationStatus
limitsPrecision
activityType
pausesLocationUpdatesAutomatically
paused
allowsBackgroundLocationUpdates
showsBackgroundLocationIndicator
allowsMapCorrection
batchingLocation
updatingVehicleSpeed
updatingVehicleHeading
matchInfoEnabled
groundAltitudeEnabled
fusionInfoEnabled
courtesyPromptNeeded
isAuthorizedForWidgetUpdates
trackRunInfoEnabled
-[CLLocationManagerStateTracker updateState:]
allStates
_CLLocationManagerStateTrackerState
v16@?0@"CLLocationManagerStateTracker"8
-[CLLocationManagerInternal hasLingeringRangingRequest]
CoreLocation: #Warning Has lingering peer ranging request
CLLocationManager-runloop
-[CLLocationManager initWithWebsiteIdentifier:]
CoreLocation: initializing CLLocationManager with a nil websiteIdentifier
-[CLLocationManager initWithWebsiteIdentifier:delegate:onQueue:]
delegate && queue
-[CLLocationManager initWithEffectiveBundleIdentifier:]
CoreLocation: initializing CLLocationManager with a nil identifier
-[CLLocationManager initWithEffectiveBundleIdentifier:delegate:onQueue:]
-[CLLocationManager initWithEffectiveBundlePath:]
CoreLocation: initializing CLLocationManager with a nil bundle path
-[CLLocationManager initWithEffectiveBundlePath:delegate:onQueue:]
-[CLLocationManager initWithEffectiveBundlePath:limitingBundleIdentifier:delegate:onQueue:]
CoreLocation: initializing CLLocationManager with a nil limiting identifier
-[CLLocationManager _initWithDelegate:onQueue:]
CLLocationManager.m
Non-UI clients cannot be autopaused
!stayUp || CLClientIsBackgroundable(internal->fClient) || _CFMZEnabled()
-[CLLocationManager setSupportInfo:]
CoreLocation: Obsolete
-[CLLocationManager setActivityType:]
CoreLocation: Client,%s,setActivityType,%ld
com.apple.Maps
com.apple.NanoMaps
CoreLocation: Client,%s,setActivityType,allowing map correction
-[CLLocationManager startUpdatingLocation]
CoreLocation: Canceling requestLocation
Delegate must respond to locationManager:didUpdateLocations:
Delegate must respond to locationManager:didFailWithError:
-[CLLocationManager requestLocation]
CoreLocation: Ignoring requestLocation due to ongoing location.
-[CLLocationManager allowDeferredLocationUpdatesUntilTraveled:timeout:]
CoreLocation: Canceling requestLocation.
Application must support the location background mode (in app's Info.plist, {UIBackgroundModes=(location);}
-[CLLocationManager heading]
CoreLocation: heading, %{private}s
-[CLLocationManager startUpdatingHeading]
CoreLocation: Start updating heading. HeadingFilter, %{public}.2f
-[CLLocationManager stopUpdatingHeading]
CoreLocation: Stop updating heading
-[CLLocationManager dismissHeadingCalibrationDisplay]
CoreLocation: Dismissing Compass Calibration HUD
-[CLLocationManager startMonitoringForRegion:]
CoreLocation: Number of vertices %{public}lu
constraint
constraint != nil
-[CLLocationManager requestRangingToPeers:timeoutSeconds:]
CoreLocation: WRTT: received requestRangingToPeers, timeout, %{public}lf
peers != nil
peers.count > 0
timeout > 0.0
timeout < kCLPeerRangingRequestTimeoutSecondsMax
Delegate must respond to locationManager:didRangePeers:
Delegate must respond to locationManager:rangingDidFailForPeer:withError:
CoreLocation: #Warning Ignoring requestRangingToPeers due to ongoing ranging
-[CLLocationManager respondToRangingFromPeers:timeoutSeconds:]
CoreLocation: WRTT: received respondToRangingFromPeers, timeout, %{public}lf
CoreLocation: #Warning Ignoring respondToRangingFromPeers due to ongoing ranging.
-[CLLocationManager startRangingToPeers:intervalSeconds:]
CoreLocation: WRTT: received startRangingToPeers, interval, %{public}lu
CoreLocation: #Warning Ignoring startRangingToPeers due to ongoing ranging
-[CLLocationManager stopRangingToPeers:]
CoreLocation: WRTT: received stopRangingToPeers
-[CLLocationManager startRangingFromPeers:]
CoreLocation: WRTT: received startRangingFromPeers
CoreLocation: #Warning Ignoring startRangingFromPeers due to ongoing ranging
-[CLLocationManager stopRangingFromPeers:]
CoreLocation: WRTT: received stopRangingFromPeers
v24@?0@"NSError"8^{__CFDictionary=}16
donateTruthTagLabelForClient failed because startDate is later than endDate
ForceMapMatching
-[CLLocationManager onClientEventAuthStatus:]
CoreLocation: could not get updated authorization status
-[CLLocationManager onClientEventLocation:forceMapMatching:type:]
CoreLocation: Location event received with empty payload
CoreLocation: New location is identical to old location; discarding
CoreLocation: New location predates old location, and the event types differ; discarding
-[CLLocationManager onClientEventHeading:]
CoreLocation: could not get updated heading
-[CLLocationManager onClientEventHeadingCalibration:]
CoreLocation: CL: Invoking Compass Calibration HUD
CoreLocation: Could not show heading calibration
-[CLLocationManager onClientEventPlaceInferenceResult:]
CoreLocation: in onClientEventPlaceInferenceResult for CLPlaceInferenceSubscription
kCLConnectionMessagePlaceInferencePlaceInferenceKey
kCLConnectionMessagePlaceInferencePlaceInferenceFallbackLocationKey
v24@?0@"NSArray"8@"NSError"16
-[CLLocationManager onClientEventPlaceInferenceError:]
CoreLocation: in onClientEventPlaceInferenceError for CLPlaceInferenceSubscription
-[CLLocationManager onClientEventError:]
CoreLocation: could not get error
-[CLLocationManager onClientEventRegion:]
CoreLocation: could not get region monitoring event
-[CLLocationManager onClientEventRegionState:]
CoreLocation: could not get the region state
-[CLLocationManager onClientEventRegionError:]
-[CLLocationManager onClientEventRanging:]
CoreLocation: could not get ranged beacons
-[CLLocationManager onClientEventRanging:]_block_invoke
CoreLocation: Client beacon is invalid (count,%lu).
v32@?0@8Q16^B24
proximity
accuracy
-[CLLocationManager onClientEventRangingError:]
CoreLocation: could not get ranging error
-[CLLocationManager onClientEventPeerRanging:]
CoreLocation: WRTT: received onClientEventPeerRanging
-[CLLocationManager onClientEventPeerRangingRequestProcessed:]
CoreLocation: WRTT: received onClientEventPeerRangingRequestProcessed
-[CLLocationManager onClientEventPeerRangingError:]
CoreLocation: WRTT: received onClientEventPeerRangingError
kCLConnectionMessageErrorsKey
[peers count] == [errors count]
-[CLLocationManager onClientEventRegionResponseDelayed:]
-[CLLocationManager onClientEventNoLocationWatchdog:]
CoreLocation: could not get updated paused state
-[CLLocationManager onClientEventRegionSetupCompleted:]
-[CLLocationManager onClientEventAutopauseStatus:]
-[CLLocationManager onClientEventBatch:]
CoreLocation: could not get batch result
success
CoreLocation: Finished deferred updates: %s
-[CLLocationManager onClientEventVehicleSpeed:]
CoreLocation: could not get updated vehicle speed
-[CLLocationManager onClientEventVehicleHeading:]
CoreLocation: could not get updated vehicle heading
kCLConnectionMessageSignificantLocationVisitKey
kCLConnectionMessageSignificantLocationVisitStateKey
purposeKey
handler
+[CLLocationManager dumpDiagnosticFilesWithHandler:]
CoreLocation: dumpDiagnosticFiles called, trying to make an xpc call
com.apple.locationd.diagnostic
+[CLLocationManager dumpDiagnosticFilesWithHandler:]_block_invoke
CoreLocation: #diagnosticManager failed to get remoteObjectProxy with error %@
v16@?0@"NSError"8
CoreLocation: #diagnosticManager error copying files: %@
-[CLLocationManager(VehicleData) startUpdatingVehicleSpeed]
CoreLocation: Start updating vehicle speed
-[CLLocationManager(VehicleData) stopUpdatingVehicleSpeed]
CoreLocation: Stop updating vehicle speed
-[CLLocationManager(VehicleData) startUpdatingVehicleHeading]
CoreLocation: Start updating vehicle heading
-[CLLocationManager(VehicleData) stopUpdatingVehicleHeading]
CoreLocation: Stop updating vehicle heading
-[CLLocationManager(CLVisitExtensions) _requestVisitState]
CoreLocation: #slv: Request visit state
-[CLLocationManager(_CLPlaceInferenceExtensions) _startPlaceInferencesCommonLogic:handler:]
CoreLocation: Setup PlaceInferences common logic
placeInferenceHandler
-[CLLocationManager(_CLPlaceInferenceExtensions) _fetchPlaceInferencesWithFidelityPolicy:handler:]
CoreLocation: Start oneshot PlaceInferences
-[CLLocationManager(_CLPlaceInferenceExtensions) _fetchContinuousPlaceInferencesWithFidelityPolicy:handler:]_block_invoke
CoreLocation: Start continuous PlaceInferences
-[CLLocationManager(_CLPlaceInferenceExtensions) _stopFetchingContinuousPlaceInferences]
CoreLocation: Stop continuous PlaceInferences
Core
NSExtension
NSExtensionPointIdentifier
com.apple.widgetkit-extension
void verifyWidgetKitExtension()
CoreLocation: Widget has NSWidgetWantsLocation key in its Info.plist
com.apple.locationd.Position
Proximity
Microlocation
LocationCount
Locations
LocationsPrivate
CoarseMetaData
NSArray *copyArrayFromPayload(NSDictionary *)
CoreLocation: Encoded coarse meta data found
CoreLocation: CLLocationManager should not get multile locations with coarseMetaData
ERROR
WARNING
STATUS
INFO
VERBOSE
NONE
com.apple.locationd
com.apple.locationd.DumpDiagnostics
NSLocationUsageDescription
NSLocationAlwaysUsageDescription
NSLocationWhenInUseUsageDescription
NSLocationAlwaysAndWhenInUseUsageDescription
NSLocationTemporaryUsageDescriptionDictionary
NSLocationAuthorizationPurposeDescriptionDictionary
NSLocationWildernessSafetyUsageDescriptionDictionary
NSLocationDefaultAccuracyReduced
NSLocationInterestZones
NSWidgetWantsLocation
WKWatchOnly
WKRunsIndependentlyOfCompanionApp
void CLCommonSetRunLoop(CFRunLoopRef)
CoreLocation: #Warning Changing CLCommon's runloop after it was already established
CoreLocation: #Warning Setting CLCommon's runloop after it was already established
CoreLocation: CLCommonSetRunLoop, %p
mobile
int CLCommonCopyFile(const char *, const char *)
CoreLocation: cannot open source file: %{public}s, errno %{public}d
CoreLocation: cannot open target file: %{public}s, errno %{public}d
CoreLocation: error reading source file: %{public}s
CoreLocation: error writing target file: %{public}s
int CLCommonBzipFile(const char *, const char *)
CoreLocation: cannot open compression stream: %{public}s, bzerror %{public}d
CoreLocation: error writing target file: %{public}s, bzerror: %{public}d
CoreLocation: error closing target file: %{public}s, bzerror: %{public}d
compress:%@
%.1f
Boolean CLCommonCompareLocationEqualityClientWithTimeCheck(const CLClientLocation *, const CLClientLocation *, bool)
CoreLocation: CLCommonCompareLocationEqualityClient compared two coordinates that were identical other than their reference frames: (%lf, %lf, %d) (%lf, %lf, %d)
/System/Library/LocationBundles/LocationPromptUI.bundle
/System/Library/LocationBundles/LocationFenceSync.bundle
/System/Library/LocationBundles/PLAMonitor.bundle
CLBundleKeyValueCache::instance()->isSystemService(bundlePath)
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Shared/Utilities/CLCommon.mm
CLCommonIsBundleLocationdInternalSystemService
com.apple.locationd.Legacy
Generic_deprecated
CLAutoOSTransaction::CLAutoOSTransaction(const char *, CLAutoOSTransaction::LoggingPolicy)
CoreLocation: os_transaction created: (%p) %@
com.apple.locationd.Utility
CLAutoOSTransaction::~CLAutoOSTransaction()
CoreLocation: os_transaction releasing: (%p) %@
__TEXT
Binary Images:
armv6
armv7
unknown
%16p - %lld %c%s %s <
%02X
> %s
Utility
vector
+[_CLPlaceInference(_CLRoutineExtensions) _userSpecificPlaceTypeFromRTUserType:]
CoreLocation: Please update userSpecificPlaceTypeFromRTUserType
+[_CLPlaceInference(_CLRoutineExtensions) _placeInferencePlaceTypeFromRTPlaceType:]
CoreLocation: Please update placeInferencePlaceTypeFromRTPlaceType
kCLLocationCodingKeyGroundAltitudeEstimate
kCLLocationCodingKeyGroundAltitudeUncertainty
kCLLocationCodingKeyGroundAltitudeUndulation
kCLLocationCodingKeyGroundAltitudeUndulationModel
_CLLocationSmootherProxy, %p
com.apple.locationd.smoother
CLSmootherErrorDomain
int declinationCalc(const float, const float, const float, const float, GeomagneticData *)
CoreLocation: WMM initialization encountered an error
CoreLocation: WMM evaluation encountered an error
CoreLocation: geomagnetic model invalid near poles (%f, %f, %f)
com.apple.locationd.Motion
Compass
int E0000(int, int *, float, float, float, float, float *, float *, float *, float *)
CoreLocation: could not open geomagnetic data file %s (%{public}s)
CoreLocation: geomagnetic data file appears to be empty
%d%d%f%f%f%f
CoreLocation: geomagnetic data file appears to have invalid dimensions
CoreLocation: supplied date (%{public}f) outside valid range (epoch=%{public}f)
sampleCount
threshold
sampleRate
sleepDuration
com.apple.locationd.registration
NULL
CLGnssDisablementAssertionInternal::CLGnssDisablementAssertionInternal(dispatch_queue_t, const char *, NSDictionary *, CLGnssDisablementAssertionCallback)
CoreLocation: #clgda,client,CLGnssDisablementAssertionInternal,name,%s,dict,%@
v24@?0{shared_ptr<CLConnectionMessage>=^{CLConnectionMessage}^{__shared_weak_count}}8
CLGnssDisablementAssertionInternal::CLGnssDisablementAssertionInternal(dispatch_queue_t, const char *, NSDictionary *, CLGnssDisablementAssertionCallback)_block_invoke
CoreLocation: #clgda,client,#warning,unexpected message,%s
CoreLocation: #clgda,client,message,%s
CoreLocation: #clgda,#warning,client,noRegisteredCallback
kCLConnectionMessageGnssDisablementAssertRsp
CLGnssDisablementAssertionInternal::~CLGnssDisablementAssertionInternal()
CoreLocation: #clgda,client,~CLGnssDisablementAssertionInternal()
kCLConnectionMessageGnssDisablementAssertReq
+[CLGnssDisablementAssertion newAssertionForBundleIdentifier:withReason:callbackQueue:completionHandler:]
CoreLocation: #clgda,client,newAssertionForBundleIdentifier
+[CLGnssDisablementAssertion newAssertionForBundle:withReason:callbackQueue:completionHandler:]
CoreLocation: #clgda,client,newAssertionForBundle
kCLLocationMatchInfoCodingKeyMatchQuality
kCLLocationMatchInfoCodingKeyMatchCoordinateLatitude
kCLLocationMatchInfoCodingKeyMatchCoordinateLongitude
kCLLocationMatchInfoCodingKeyMatchCourse
kCLLocationMatchInfoCodingKeyMatchFormOfWay
kCLLocationMatchInfoCodingKeyMatchRoadClass
kCLLocationMatchInfoCodingKeyMatchShifted
kCLLocationMatchInfoCodingKeyMatchDataArray
matchQuality %ld matchCoordinate <%+.8f,%+.8f> matchCourse %.2f matchFormOfWay %d matchRoadClass %d matchShifted %d
%ld <%+.8f,%+.8f> %.2f %d %d %d
com.apple.findMyAccessoryRangingManager.privateQueue
-[CLFindMyAccessoryRangingManager handleMessage:]
CoreLocation: Got Reply: message: %s
-[CLFindMyAccessoryRangingManager handleInterruption]
CoreLocation: Connection to locationd interrupted!!
Connection to locationd interrupted!
Feature Not Supported
private.HomeKit.accessory.accessoryUUID
private.HomeKit.accessory.serviceType
private.HomeKit.accessory.characteristicType
private.HomeKit.accessory.source
private.HomeKit.accessory.stateString
private.HomeKit.accessory.serviceUUID
private.HomeKit.accessory.serviceGroupUUID
private.HomeKit.accessory.roomUUID
private.HomeKit.scene.actionSetUUID
private.HomeKit.scene.actionSetName
private.HomeKit.scene.actionSetType
private.HomeKit.scene.clientName
private.HomeKit.scene.source
private.HomeKit.scene.homeName
private.MicroLocation.truthtag.identifier
private.MicroLocation.forced.recordingRequest
private.MicroLocation.recordingTriggerUUID
trackRunLapCount
trackRunCurrentLapStartTime
trackRunCurrentLapDurationInSeconds
trackRunCurrentLapDistanceInMeters
trackRunPreviousLapDurationInSeconds
trackRunPreviousLapDistanceInMeters
trackRunPreviousLapPositionAtCompletionInDegreesLatitude
trackRunPreviousLapPositionAtCompletionInDegreesLongitude
trackRunCurrentTrackRunSessionDurationInSeconds
trackRunCurrentTrackRunSessionDistanceInMeters
trackRunLaneNumber
trackRunLaneCount
trackRunTrackId
trackRunEstimatedLaneNumber
trackRunEstimatedLaneConfidence
trackRunTrackProximity
UTDisableReasonBTOff
UTDisableReasonLocationServicesOff
UTDisableReasonTrackingNotificationsDisallowed
UTDisableReasonAirplaneModeOn
UTDisableReasonFindMyDeleted
UTDegradationReasonSignificantLocationsOff
UTDegradationReasonWifiOff
UTEnablementStatus
com.apple.DurianManagement.privateQueue
DurianManagement/DidFetchHawkeyeSerialNumber
DurianManagement/DidFetchHawkeyeCurrentPrimaryKey
DurianManagement/DidFetchHawkeyeiCloudIdentifier
Invalid response length
Response unavailable
DurianManagement/DidReceiveDataFragment
DurianManagement/DidConnect
DurianManagement/DidDisconnect
DurianManagement/DidFetchConnectionState
DurianManagement/DidStartPlayingSound
DurianManagement/DidCompletePlayingSound
DurianManagement/DidStopPlayingSound
DurianManagement/DidInitRanging
DurianManagement/DidDeinitRanging
DurianManagement/DidConfigureRanging
DurianManagement/DidPrepareRanging
DurianManagement/DidStartRanging
DurianManagement/DidCompleteRanging
DurianManagement/DidReceiveRangingError
DurianManagement/DidReceiveRangingTimestamps
DurianManagement/DidHaveRangingMovement
DurianManagement/DidFailRangingEventCounterAction
DurianManagement/DidStartPlayingUnauthorizedSound
DurianManagement/DidCompletePlayingUnauthorizedSound
DurianManagement/DidStopPlayingUnauthorizedSound
DurianManagement/DidReceiveKeyRollIndex
DurianManagement/DidGetMultiStatus
DurianManagement/DidReceiveGroupStatus
DurianManagement/DidFetchBatteryStatus
DurianManagement/DidDetectCrash
DurianManagement/DidDumpLogs
DurianManagement/DidUnpair
DurianManagement/DidSetTagType
DurianManagement/DidSetObfuscatedIdentifier
DurianManagement/DidSetNearOwnerTimeout
DurianManagement/DidSetWildConfiguration
DurianManagement/DidFetchUserStats
DurianManagement/DidRollWildKey
DurianManagement/DidSetAccelerometerSlopeMode
DurianManagement/DidSetAccelerometerOrientationMode
DurianManagement/DidGetAccelerometerSlopeModeConfiguration
DurianManagement/DidGetAccelerometerMode
DurianManagement/DidSetUnauthorizedPlaySoundRateLimit
DurianManagement/DidFetchFirmwareVersion
DurianManagement/DidCompleteHawkeyeTask
DurianManagement/DidSetHawkeyeUTMotionConfig
DurianManagement/DidFetchTxPower
DurianManagement/DidStartAggressiveAdvertising
DurianManagement/DidStopAggressiveAdvertising
DurianManagement/DidCompleteAggressiveAdvertising
DurianManagement/DidStartUnauthorizedAggressiveAdvertising
DurianManagement/DidFetchHawkeyeAISProductData
DurianManagement/DidFetchHawkeyeAISManufacturerName
DurianManagement/DidFetchHawkeyeAISModelName
DurianManagement/DidFetchHawkeyeAISModelColorCode
DurianManagement/DidFetchHawkeyeAISAccessoryCategory
DurianManagement/DidFetchHawkeyeAISAccessoryCapabilities
DurianManagement/DidFetchHawkeyeAISFindMyVersion
DurianManagement/DidFetchHawkeyeAISBatteryType
DurianManagement/DidObserveAdvertisement
DurianManagement/DidFetchStatusOfUTEnablementRequirements
-[CLFindMyAccessoryManager handleMessage:]
CoreLocation: #durian Got a message we do not understand... dropping!
-[CLFindMyAccessoryManager handleInterruption]
CLFindMyAccessoryManager.mm
messageName
device
DurianManagement/Connect
DurianManagement/Disconnect
DurianManagement/FetchConnectionState
sequence
DurianManagement/StartSoundSequence
DurianManagement/StartUnauthorizedSound
DurianManagement/StopSound
DurianManagement/StopUnauthorizedSound
DurianManagement/GetMultiStatus
DurianManagement/GetMultiPartStatus
DurianManagement/DumpLogs
DurianManagement/InduceCrash
DurianManagement/Unpair
DurianManagement/SetNearOwnerTimeout
DurianManagement/SetTagType
DurianManagement/SetObfuscatedIdentifier
configuration
DurianManagement/SetWildConfiguration
DurianManagement/RollWildKey
DurianManagement/SetKeyRollInterval
DurianManagement/SetBatteryStatus
DurianManagement/FetchBatteryStatus
DurianManagement/FetchUserStats
DurianManagement/SetAccelerometerSlopeMode
DurianManagement/GetAccelerometerSlopeModeConfiguration
DurianManagement/SetAccelerometerOrientationMode
DurianManagement/GetAccelerometerOrientationModeConfiguration
DurianManagement/SetUnauthorizedPlaySoundRateLimit
DurianManagement/FetchFirmwareVersion
DurianManagement/FetchTxPower
DurianManagement/StartAggressiveAdvertising
DurianManagement/StopAggressiveAdvertising
DurianManagement/StartUnauthorizedAggressiveAdvertising
DurianManagement/SetHawkeyeTestMode
DurianManagement/SetHawkeyeUTMotionConfig
DurianManagement/FetchHawkeyeAISProductData
DurianManagement/FetchHawkeyeAISManufacturerName
DurianManagement/FetchHawkeyeAISModelName
DurianManagement/FetchHawkeyeAISModelColorCode
DurianManagement/FetchHawkeyeAISAccessoryCategory
DurianManagement/FetchHawkeyeAISAccessoryCapabilities
DurianManagement/FetchHawkeyeAISFindMyVersion
DurianManagement/FetchHawkeyeAISBatteryType
DurianManagement/FetchHawkeyeSerialNumber
DurianManagement/FetchHawkeyeCurrentPrimaryKey
DurianManagement/FetchHawkeyeiCloudIdentifier
DurianManagement/StartMonitoringForAvengerAdvertisementsForBTFinding
DurianManagement/StopMonitoringForAvengerAdvertisementsForBTFinding
DurianManagement/PerformAggressiveScanForSeparationAlerts
DurianManagement/PerformLongAggressiveScanForSeparationAlerts
DurianManagement/StopLongAggressiveScanForSeparationAlerts
DurianManagement/PerformAggressiveScanForTrackingAvoidance
DurianManagement/PerformHELEScanForTrackingAvoidance
DurianManagement/PerformAggressiveScanForDurianService
DurianManagement/FetchStatusOfUTEnablementRequirements
macAddress
DurianManagement/FetchAISForTAUnknownBeacon
type
DurianManagement/StageTADetection
DurianManagement/ForceSurfaceStagedDetections
-[CLFindMyAccessoryManager initRangingOnDevice:macAddress:]
CoreLocation: Init Ranging on device: %@
-[CLFindMyAccessoryManager deinitRangingOnDevice:]
CoreLocation: Deinit Ranging on device: %@
-[CLFindMyAccessoryManager configureRangingOnDevice:macAddress:countryCode:uwbChannel:acqPreamble:trackingPreamble:interval:]
CoreLocation: Configure Ranging on device: %@
-[CLFindMyAccessoryManager prepareRangingOnDevice:]
CoreLocation: Prepare Ranging on device: %@
-[CLFindMyAccessoryManager startRangingOnDevice:targetEventCounter:]
CoreLocation: Start Ranging on device: %@
-[CLFindMyAccessoryManager stopRangingOnDevice:]
CoreLocation: Stop Ranging on device: %@
-[CLFindMyAccessoryManager startEventCounterForDevice:]
CoreLocation: Start EventCounter on device: %@
-[CLFindMyAccessoryManager stopEventCounterForDevice:]
CoreLocation: Stop EventCounter on device: %@
DurianManagement/ScanForNearOwner
DurianManagement/ScanForHELE
DurianManagement/ScanForNearbyDevicesLong
DurianManagement/StopScanForNearbyDevicesLong
DurianManagement/InitRanging
DurianManagement/DeinitRanging
DurianManagement/ConfigureRanging
DurianManagement/PrepareRanging
DurianManagement/StartRanging
DurianManagement/StopRanging
DurianManagement/StartEventCounter
DurianManagement/StopEventCounter
void CLRegulatoryConfigInternal::addConfigForIso(std::string, NSDictionary *)
CoreLocation: #clreg,addConfigForIso,%s
void CLRegulatoryConfigInternal::addConfigForCircularRegion(CLCircularRegion *, NSDictionary *)
CoreLocation: #clreg,addConfigForCircularRegion,%.6f,%.6f,%.2f
void CLRegulatoryConfigInternal::addConfigForIsoList(CLRegulatoryIsoList, NSDictionary *)
CoreLocation: #clreg,#warning,addConfigForIsoList,invalidArgs,ignoring
CoreLocation: #clreg,#warning,addConfigForIsoList,emptyIso,ignoring
void CLRegulatoryConfigInternal::addConfigForCircularRegionList(CLRegulatoryCircularRegionList, NSDictionary *)
CoreLocation: #clreg,#warning,addConfigForCircularRegionList,invalidArgs,ignoring
CoreLocation: #clreg,#warning,addConfigForCircularRegionList,invalidRadius,ignoring
bool CLRegulatoryConfigInternal::fetchRAEConfig(CLLocation *, CLRegulatoryConfigCallback)
CoreLocation: #clreg,fetchRAEConfig,%{private}.6f,%{private}.6f,%{private}.2f,distToLocation,%{private}2.f,result,found
bool CLRegulatoryConfigInternal::fetchRAEConfig(CLLocation *, CLRegulatoryConfigCallback)_block_invoke
CoreLocation: #clreg,completionCallback,%{private}@,nil,nil
CoreLocation: #clreg,fetchRAEConfig,%{private}.6f,%{private}.6f,%{private}.2f,distToLocation,%{private}2.f,result,notFound
CoreLocation: #clreg,fetchRAEConfig,no RAEs matched
void CLRegulatoryConfigInternal::sendIsoConfig(NSString *, CLRegulatoryIsoList, CLRegulatoryConfigCallback)
CoreLocation: #clreg,completionCallback,default,nil,nil
CoreLocation: #clreg,completionCallback,%{private}@,%{private}@,nil
void CLRegulatoryConfigInternal::runMapsQuery(GEOLocation *, CLRegulatoryConfigInternal::MapsResultCallback)
CoreLocation: #clreg,#map,query,lla,%{private}.6f,lon,%{private}.6f,accuracy,%{private}.2f
void CLRegulatoryConfigInternal::runMapsQuery(GEOLocation *, CLRegulatoryConfigInternal::MapsResultCallback)_block_invoke
CoreLocation: #clreg,#map,response,#warning,error,%@
CoreLocation: #clreg,#map,response,#warning,results,Nil
CoreLocation: #clreg,#map,response,#warning,invalidResultEntry,ignoring
CoreLocation: #clreg,#map,response,disputed,first,%{private}s,interested,%@
CoreLocation: #clreg,#map,response,disputed,next,%{private}s,interested,%@
CoreLocation: #clreg,#map,response,nonDisputed,first,%{private}@
CoreLocation: #clreg,#map,response,nonDisputed,next,%{private}@
v24@?0@"NSSet"8@"NSError"16
void CLRegulatoryConfigInternal::fetchIsoOrDefaultConfig(CLLocation *, CLRegulatoryConfigCallback)
CoreLocation: #clreg,#warning,fetchIsoOrDefaultConfig,geoLocationAllocFailed
void CLRegulatoryConfigInternal::fetchIsoOrDefaultConfig(CLLocation *, CLRegulatoryConfigCallback)_block_invoke
CoreLocation: #clreg,cbLocation,iso,%{private}@,neighbors,%{private}@
v24@?0@"NSString"8@"NSMutableSet"16
CoreLocation: #clreg,cbExtendedLocation,iso,%{private}@,neighbors,%{private}@
CoreLocation: #clreg,cbWrapper,isoActual,%{private}@,neighborsWithinLocation,%{private}@,extendedNeighbors,%{private}@
void CLRegulatoryConfigInternal::fetchConfigForLocation(CLLocation *, CLRegulatoryConfigCallback)
CoreLocation: #clreg,fetchConfigForLocation,#warning,location is nil
CoreLocation: #clreg,fetchConfigForLocation,%{private}.6f,%{private}.6f,%{private}.2f
CoreLocation: #clreg,fetchConfigForLocation,#warning,invalidAccuracy
const CLRegulatoryConfigInternal::CircularZoneConfig *CLRegulatoryConfigInternal::findRAEConfig(CLLocation *)
CoreLocation: #clreg,findRAEConfig,%{private}.6f,%{private}.6f,%{private}.2f,distToLocation,%{private}2.f,result,found
CoreLocation: #clreg,findRAEConfig,%{private}.6f,%{private}.6f,%{private}.2f,distToLocation,%{private}2.f,result,notFound
CoreLocation: #clreg,findRAEConfig,no RAEs matched
kCLRegRegionTypeKey
kCLRegRegionTypeDefault
void CLRegulatoryConfigInternal::sendRaeInfoAsync(NSDictionary *, CLRegulatoryInfoCallback)_block_invoke
kCLRegRegionTypeRae
void CLRegulatoryConfigInternal::sendIsoInfoSync(CLRegulatoryRegion, CLRegulatoryRegionMutableList, CLRegulatoryInfoCallback)
CoreLocation: sendIsoInfoSync,region,%{private}@,neighbors,%{private}@
void CLRegulatoryConfigInternal::sendIsoInfoSync(CLRegulatoryRegion, CLRegulatoryRegionMutableList, CLRegulatoryInfoCallback)_block_invoke
CoreLocation: #clreg,invalidRegionType
kCLRegNameKey
kCLRegGeoRegionMatchedKey
kCLRegNeighborsKey
v24@?0@"NSString"8@"NSDictionary"16
kCLRegRegionTypeGeo
void CLRegulatoryConfigInternal::runMapInfoQuery(GEOLocation *, CLRegulatoryConfigInternal::MapsInfoReply)
void CLRegulatoryConfigInternal::runMapInfoQuery(GEOLocation *, CLRegulatoryConfigInternal::MapsInfoReply)_block_invoke
CoreLocation: #clreg,#map,response,lla,%{private}.6f,lon,%{private}.6f,accuracy,%{private}.2f,results,%{private}@
kCLGEOTerritoryInfoKey
%llX
void CLRegulatoryConfigInternal::appendNeighbor(CLRegulatoryRegionMutableList, CLRegulatoryRegion, NSString *)
CoreLocation: Invalid neighbor or excludeRegionName,%{private}@,%{private}@
void CLRegulatoryConfigInternal::sendIsoOrDefaultInfo(CLLocation *, CLRegulatoryInfoCallback)
v24@?0@"NSDictionary"8@"NSMutableSet"16
void CLRegulatoryConfigInternal::fetchInfoForLocation(CLLocation *, CLRegulatoryInfoCallback)
CoreLocation: #clreg,fetchInfoForLocation,#warning,location is nil
CoreLocation: #clreg,fetchInfoForLocation,%{private}.6f,%{private}.6f,%{private}.2f
CoreLocation: #clreg,fetchInfoForLocation,#warning,invalidAccuracy
bool CLRacingRoute::convertRouteDataToMatrix(NSArray<CLRoutePoint *> *)
CoreLocation: CLRR,convertRouteDataToMatrix,input data array is null
CoreLocation: CLRR,convertRouteDataToMatrix,input data array is empty
CoreLocation: CLRR,convertRouteDataToMatrix,input data point is null at index,%{public}d
CoreLocation: CLRR,convertRouteDataToMatrix,invalid coordinates,lat,%{private}.7lf,lon,%{private}.7lf,at index,%{public}d
CoreLocation: CLRR,convertRouteDataToMatrix,invalid reference point,lat,%{private}.7lf,lon,%{private}.7lf,alt,%{private}.2lf,at index,%{public}d
CoreLocation: CLRR,convertRouteDataToMatrix,raceStartLineProximityIndex,%{public}d
CoreLocation: CLRR,convertRouteDataToMatrix,boxRows,%{public}d,boxColumns,%{public}d,boxMinLat,%{private}.7lf,boxMaxLat,%{private}.7lf,boxMinLon,%{private}.7lf,boxMaxLon,%{private}.7lf
CoreLocation: CLRR,convertRouteDataToMatrix,time,%{public}.1lf,lat,%{private}.7lf,lon,%{private}.7lf,alt,%{private}.2lf,odom,%{public}.2lf,signalEnv,%{public}d,pointCount,%{public}d
CoreLocation: CLRR,convertRouteDataToMatrix,invalid index for location,lat,%{private}.7lf,lon,%{private}.7lf
bool CLRacingRoute::updateScoreboard(CLRoutePoint *, CLRoutePoint *, const CLRacingRoute::RacingRoutePointType &, RacingRouteScoreboard &)
CoreLocation: CLRR,updateScoreboard,null data point
CoreLocation: CLRR,updateScoreboard,invalid data point,%{private}.7lf,%{private}.7lf,%{private}.7lf,%{private}.7lf
bool CLRacingRoute::updateScoreboard(CLRoutePoint *, CLRoutePoint *, CLRoutePoint *, const double &, const CLRacingRoute::RacingRoutePointType &, RacingRouteScoreboard &)
CoreLocation: CLRR,updateScoreboard,null input data or segment point
CoreLocation: CLRR,updateScoreboard,invalid input data or segment point,%{private}.7lf,%{private}.7lf,%{private}.7lf,%{private}.7lf,%{private}.7lf,%{private}.7lf
CoreLocation: CLRR,updateScoreboard,invalid raceStartPointOnReferenceRoute,%{private}.7lf,%{private}.7lf
CoreLocation: CLRR,updateScoreboard,invalid referenceState,%{private}.7lf,%{private}.7lf
bool CLRacingRoute::EvaluateProjectionStatus(RacingRouteState &, RacingRouteState &) const
CoreLocation: CLRR,EvaluateProjectionStatus,user moved but its projection on reference route is same as before,skip this point,timestamp,%{private}.1lf
CoreLocation: CLRR,EvaluateProjectionStatus,projection went backward,timestamp,%{private}.1lf
void CLRacingRoute::updateDistanceAndAveragePace(RacingRouteState &, RacingRouteState &) const
CoreLocation: CLRR,updateDistanceAndAveragePace,DistanceAlongReferenceRoute passed upper threshold
CoreLocation: CLRR,updateDistanceAndAveragePace,DistanceAlongReferenceRoute passed lower threshold
bool CLRacingRoute::findNearestPointIndex(CLRoutePoint *, const NSArray<CLRoutePoint *> *, const int &, const int &, const CLRacingRoute::RacingRoutePointType &, int &)
CoreLocation: CLRR,findNearestPointIndex,invalid search range index,fromIndex,%{public}d,toIndex,%{public}d
CoreLocation: CLRR,findNearestPointIndex,invalid coordinates,lat,%{private}.7lf,lon,%{private}.7lf
CoreLocation: CLRR,findNearestPointIndex,reached end of reference route
CoreLocation: CLRR,findNearestPointIndex,invalid search index,%{public}d,array size,%{public}lu
CoreLocation: CLRR,findNearestPointIndex,start point is matched to reference head section,min distance,%{public}.2lf,index from start of reference route,%{public}d
CoreLocation: CLRR,findNearestPointIndex,min distance,%{public}.2lf,index from start of search window,%{public}d
void CLRacingRoute::updateSearchRange(const int &, int &, int &, bool &) const
CoreLocation: CLRR,updateSearchRange,empty matrix cell at index,%d,
CoreLocation: CLRR,updateSearchRange,detected a short segment across the cell border,expanding the search range
bool CLRacingRoute::processLocationPoint(CLRoutePoint *, const NSArray<CLRoutePoint *> *, const int &, const CLRacingRoute::RacingRoutePointType &, RacingRouteScoreboard &)
CoreLocation: CLRR,processLocationPoint,current data point is null
CoreLocation: CLRR,processLocationPoint,input data array is null
CoreLocation: CLRR,processLocationPoint,invalid matrix index
CoreLocation: CLRR,processLocationPoint,failed to determine neighboring cells index
CoreLocation: CLRR,processLocationPoint,unknown point type
CoreLocation: CLRR,processLocationPoint,processing matrix cell index,%{public}d
CoreLocation: CLRR,processLocationPoint,no points within the accepted distance in matrix cell index,%{public}d
CoreLocation: CLRR,processLocationPoint,no matched point is found in the current or neighboring cells.Skip this point.
CoreLocation: CLRR,processLocationPoint,index exceeded buffer range,last matched index,%{public}d,buffer size,%{public}d
CoreLocation: CLRR,processLocationPoint,invalid raceStartLineProximityIndex,%{public}d
CoreLocation: CLRR,processLocationPoint,user joined the race at a wrong location,lastMatchedPointIndex,%{public}d,raceStartLineProximityIndex,%{public}d
CoreLocation: CLRR,processLocationPoint,invalid prematureRaceEndIndex,%{public}d
CoreLocation: CLRR,processLocationPoint,race start point already detected,most recent matched point jumped from head to tail of the reference route,skip this data point to avoid premature race ending,reference route count,%{public}lu,premature race ending index,%{public}d,last matched index,%{public}d,matched index before update,%{public}d
CoreLocation: CLRR,processLocationPoint,pointType,%{public}d,last matched index,%{public}d
CoreLocation: CLRR,processLocationPoint,reached end of reference route
CoreLocation: CLRR,processLocationPoint,end the race in %{public}.2lf seconds if it did not happen naturally
CoreLocation: CLRR,processLocationPoint,too close to finish line,jump to the end of the reference route
CoreLocation: CLRR,processLocationPoint,timeout,jump to the end of the reference route,current time,%{public}.2lf,registeredTimeAtThreshold,%{public}.2lf,endOfRaceTimeThreshold,%{public}.2lf
CoreLocation: CLRR,processLocationPoint,failed to set the most recent point
CoreLocation: CLRR,processLocationPoint,failed to process the most recent point,the matched point is too far away
bool CLRacingRoute::setLocationPoint(CLRoutePoint *, const NSArray<CLRoutePoint *> *, const int &, const bool &, const CLRacingRoute::RacingRoutePointType &, RacingRouteScoreboard &)
CoreLocation: CLRR,setLocationPoint,current data point is null
CoreLocation: CLRR,setLocationPoint,input data array is null
CoreLocation: CLRR,setLocationPoint,index out of bounds,input array size,%{public}lu,index,%{public}d
CoreLocation: CLRR,setLocationPoint,reached end of route
CoreLocation: CLRR,setLocationPoint,startOfArray,failed to convert LLA to ENU at index,%{public}d
CoreLocation: CLRR,setLocationPoint,startOfArray,projectionOnNextSegment,failed to get projection ratio at index,%{public}d
CoreLocation: CLRR,setLocationPoint,startOfArray,projectionOnNextSegment,failed to update scoreboard at index,%{public}d
CoreLocation: CLRR,setLocationPoint,startOfArray,this matched point has already been the projected point,skip this point
CoreLocation: CLRR,setLocationPoint,startOfArray,failed to update scoreboard at index,%{public}d
CoreLocation: CLRR,setLocationPoint,endOfArray,failed to convert LLA to ENU at index,%{public}d
CoreLocation: CLRR,setLocationPoint,endOfArray,projectionOnPreviousSegment,failed to get projection ratio at index,%{public}d
CoreLocation: CLRR,setLocationPoint,endOfArray,projectionOnPreviousSegment,failed to update scoreboard at index,%{public}d
CoreLocation: CLRR,setLocationPoint,endOfArray,this matched point has already been the projected point,skip this point
CoreLocation: CLRR,setLocationPoint,endOfArray,failed to update scoreboard at index,%{public}d
CoreLocation: CLRR,setLocationPoint,failed to convert LLA to ENU at index,%{public}d
CoreLocation: CLRR,setLocationPoint,projectionOnBothSegments,wrt n1,failed to get projection ratio at index,%{public}d
CoreLocation: CLRR,setLocationPoint,projectionOnBothSegments,wrt n0,failed to get projection ratio at index,%{public}d
CoreLocation: CLRR,setLocationPoint,projectionOnBothSegments,pickedNearestPoint,this matched point has already been the projected point,skip this point
CoreLocation: CLRR,setLocationPoint,projectionOnBothSegments,pickedNearestPoint,failed to update scoreboard at index,%{public}d
CoreLocation: CLRR,setLocationPoint,projectionOnBothSegments,pickedNextSegment,failed to update scoreboard at index,%{public}d
CoreLocation: CLRR,setLocationPoint,projectionOnBothSegments,pickedPreviousSegment,failed to update scoreboard at index,%{public}d
CoreLocation: CLRR,setLocationPoint,projectionOnNearestPoint,this matched point has already been the projected point,skip this point
CoreLocation: CLRR,setLocationPoint,projectionOnNearestPoint,failed to update scoreboard at index,%{public}d
CoreLocation: CLRR,setLocationPoint,projectionOnNextSegment,failed to get projection ratio at index,%{public}d
CoreLocation: CLRR,setLocationPoint,projectionOnNextSegment,failed to update scoreboard at index,%{public}d
CoreLocation: CLRR,setLocationPoint,projectionOnPreviousSegment,failed to get projection ratio at index,%{public}d
CoreLocation: CLRR,setLocationPoint,projectionOnPreviousSegment,failed to update scoreboard at index,%{public}d
int CLRacingRoute::getNumberOfRoutePointsToAdd() const
CoreLocation: CLRR,getNumberOfRoutePointsToAdd,required number of points,%{public}d
CLRacingRouteBufferUpdateState CLRacingRoute::updateRoutePointsBuffer(NSArray<CLRoutePoint *> *)
CoreLocation: CLRR,updateRoutePointsBuffer,input data array is null
CoreLocation: CLRR,updateRoutePointsBuffer,recovery mode,update started,number of requested points,%{public}d,number of given points,%{public}d
CoreLocation: CLRR,updateRoutePointsBuffer,update started,number of requested points,%{public}d,number of given points,%{public}d
CoreLocation: CLRR,updateRoutePointsBuffer,input data array is empty
CoreLocation: CLRR,updateRoutePointsBuffer,no more data available,rolling buffer includes the end of the reference route
CoreLocation: CLRR,updateRoutePointsBuffer,buffer capacity exceeded,bufferSize,%{public}d,numberOfPointsToAdd,%{public}d,routePointsCount,%{public}d
CoreLocation: CLRR,updateRoutePointsBuffer,rolling buffer includes the end of the reference route
CoreLocation: CLRR,updateRoutePointsBuffer,buffer capacity exceeded,bufferSize,%{public}d,numberOfPointsToAdd,%{public}d,bufferedRoutePointsCount,%{public}u
CoreLocation: CLRR,updateRoutePointsBuffer,location series too short,minimumPointsToProcess,%{public}u,bufferedRoutePointsCount,%{public}u
CoreLocation: CLRR,updateRoutePointsBuffer,buffer capacity exceeded,bufferSize,%{public}d,bufferedRoutePointsCount,%{public}u,routePointsCount,%{public}d
CoreLocation: CLRR,updateRoutePointsBuffer,unable to convert reference route to matrix
CoreLocation: CLRR,updateRoutePointsBuffer,update completed,rollingBufferUpdateCounter,%{public}d,lastMatchedPointIndex,%{public}d,rollingBufferStartIndexOnReferenceRoute,%{public}d,referenceRouteDataPointCounter,%{public}d,numberOfRoutePointsToAdd,%{public}d,routePointsArrayInitialized,%{public}d
bool CLRacingRoute::updateDistanceDuringOffRoutePeriod(const CLRoutePoint *, RacingRouteScoreboard &) const
CoreLocation: CLRR,getDistanceDuringOffRoutePeriod,current data point is null
CoreLocation: CLRR,getDistanceDuringOffRoutePeriod,invalid array index, %{public}d
CoreLocation: CLRR,getDistanceDuringOffRoutePeriod,invalid time, %{public}.2lf
CoreLocation: CLRR,getDistanceDuringOffRoutePeriod,distAlongRefRoute,%{private}.2lf,refDistAlongRefRoute,%{private}.2lf
void CLRacingRoute::printDebugLog(const RacingRouteScoreboard &, const std::string) const
CoreLocation: CLRR,printDebugLog,pointType,%{public}s,time,%{public}.1lf,lat,%{private}.7lf,lon,%{private}.7lf,alt,%{private}.2lf,timeFromStart,%{public}.1lf,offRouteTime,%{public}.1lf,distFromStart,%{public}.2lf,offRouteDist,%{public}.2lf,pace,%{private}.2lf,odom,%{public}.2lf,distAlongRefRoute,%{public}.2lf,refTime,%{public}.1lf,refLat,%{private}.7lf,refLon,%{private}.7lf,refAlt,%{private}.2lf,refTimeFromStart,%{public}.1lf,refOffRouteTime,%{public}.1lf,refDistFromStart,%{public}.2lf,refOffRouteDist,%{public}.2lf,refPace,%{private}.2lf,refOdom,%{public}.2lf,refDistAlongRefRoute,%{public}.2lf,signalEnv,%{public}d,timeAhead,%{public}.2lf,distanceAhead,%{public}.2lf
void CLRacingRoute::printRoutePointArray() const
CoreLocation: CLRR,printRoutePointArray,fRoutePoints is a null pointer
CoreLocation: CLRR,printRoutePointArray,boxRows,%{public}d,boxColumns,%{public}d,boxMinLat,%{private}.7lf,boxMaxLat,%{private}.7lf,boxMinLon,%{private}.7lf,boxMaxLon,%{private}.7lf
CoreLocation: CLRR,printRoutePointArray,time,%{public}.1lf,lat,%{private}.7lf,lon,%{private}.7lf,alt,%{private}.2lf,odom,%{public}.2lf,signalEnv,%{public}d,pointCount,%{public}d
CLRacingRouteConfigurationState CLRacingRoute::configureRouteModel(const CLMotionActivity::Type &, const int &, const int &)
CoreLocation: CLRR,configureRouteModel,unsupported activity type,%{public}d
CoreLocation: CLRR,configureRouteModel,buffer size is too small,%{public}d
CoreLocation: CLRR,configureRouteModel,configuration succeeded,workout activity type,%{public}u,route points rolling buffer size,%{public}d,number of route points to add,%{public}d,off route grace duration,%{public}d
CLRacingRouteLocationState CLRacingRoute::getPerformanceResults(CLRoutePoint *, RacingRouteScoreboard &)
CoreLocation: CLRR,getPerformanceResults,route model has NOT been configured successfully,expire the race session
CoreLocation: CLRR,getPerformanceResults,passed finish line
CoreLocation: CLRR,getPerformanceResults,current data point is null
CoreLocation: CLRR,getPerformanceResults,invalid input data,time,%{public}.1lf,lastOnRouteTime,%{public}.1lf,odom,%{public}.2lf,lastOnRouteOdom,%{public}.2lf
CoreLocation: CLRR,getPerformanceResults,invalid input data,lat,%{private}.7lf,lon,%{private}.7lf,alt,%{private}.2lf
CoreLocation: CLRR,getPerformanceResults,race session expired
CoreLocation: CLRR,getPerformanceResults,race session expired but failed to updateDistanceDuringOffRoutePeriod
CoreLocation: CLRR,getPerformanceResults,pointType,currentLocation,time,%{private}.1lf,lat,%{private}.7lf,lon,%{private}.7lf,alt,%{private}.2lf,odom,%{private}.2lf,signalEnv,%{private}d,pointCount,%{public}d
CoreLocation: CLRR,getPerformanceResults,reference route total length,%{private}.2lf
CoreLocation: CLRR,getPerformanceResults,invalid signal environment type,%{public}d
CoreLocation: CLRR,getPerformanceResults,nearest neighbor maximum accepted distance,%{private}.2lf
CoreLocation: CLRR,getPerformanceResults,race not started yet,current location outside of bounding box,unspecified state
CoreLocation: CLRR,getPerformanceResults,current location outside of bounding box,user is off-route
CoreLocation: CLRR,getPerformanceResults,user is off-route but failed to updateDistanceDuringOffRoutePeriod
CoreLocation: CLRR,getPerformanceResults,current location outside of bounding box,unspecified state
CoreLocation: CLRR,getPerformanceResults,unspecified state,invalid index for location,lat,%{private}.7lf,lon,%{private}.7lf
CoreLocation: CLRR,getPerformanceResults,race not started yet,unspecified state
start
CoreLocation: CLRR,getPerformanceResults,user is off-route
CoreLocation: CLRR,getPerformanceResults,unspecified state
rejoin
onRoute
bool CLRacingRoute::setRacingRouteParameters(CLRacingRouteParameters *)
CoreLocation: CLRR,setRacingRouteParameters,set race parameters
CoreLocation: CLRR,setRacingRouteParameters,racingRouteParameters is null
CoreLocation: CLRR,setRacingRouteParameters,racingRouteParameters.routeMatrixIndexVec is null
CoreLocation: CLRR,setRacingRouteParameters,racingRouteParameters.racingRouteVariables is null
CoreLocation: CLRR,setRacingRouteParameters,racingRouteParameters.routeBoundingBox is null
CoreLocation: CLRR,setRacingRouteParameters,racingRouteParameters.startPointOnCurrentRoute is null
CoreLocation: CLRR,setRacingRouteParameters,racingRouteParameters.startPointOnReferenceRoute is null
CoreLocation: CLRR,setRacingRouteParameters,racingRouteParameters.lastOnRouteDataPoint is null
CoreLocation: CLRR,setRacingRouteParameters,racingRouteParameters.lastProjectedDataPoint is null
CoreLocation: CLRR,setRacingRouteParameters,recoveryMode,%{public}d,lastMatchedPointIndex,%{public}d,lastMatchedPointIndexOnReferenceRoute,%{public}d,timestampOfLastMatchedPointOnReferenceRoute,%{public}.1lf
RacingRoute
UIApplication
static bool CLNameValuePair::encodeBase64(const void *, unsigned long, std::string &)
CoreLocation: processed %p %d to (%s)
CLNameValuePair::CLNameValuePair()
CoreLocation: could not create new mutable dictionary
CLNameValuePair::CLNameValuePair(CFDictionaryRef)
Memory
bool CLNameValuePair::writeDataToFile(const char *, CFDataRef, CLNameValuePair::CLNVPDataProtection) const
CoreLocation: Could not create NSURL for file: %{public}s
CoreLocation: Could not write data to disk %{public}s, %{public}s
virtual bool CLNameValuePair::saveToFile(const char *) const
CoreLocation: Could not serialize data for file %{public}s
CLNameValuePair.SaveToBinaryFile
virtual void CLNameValuePair::clearInternal(const CFStringRef, int)
CoreLocation: key %{public}s does not have element %{public}d in array of size %{public}ld
CoreLocation: key %{public}s does not have element %{public}d in non-array type %{public}lu
virtual bool CLNameValuePair::get(CFStringRef, bool &, int) const
CoreLocation: Unsupported type at %@:%@ (domain:key)
virtual bool CLNameValuePair::get(CFStringRef, uint16_t &, int) const
virtual bool CLNameValuePair::get(CFStringRef, short &, int) const
virtual bool CLNameValuePair::get(CFStringRef, uint32_t &, int) const
virtual bool CLNameValuePair::get(CFStringRef, int64_t &, int) const
virtual bool CLNameValuePair::get(CFStringRef, int &, int) const
virtual bool CLNameValuePair::get(CFStringRef, long &, int) const
virtual bool CLNameValuePair::get(CFStringRef, double &, int) const
virtual bool CLNameValuePair::get(CFStringRef, CLNameValuePair &, int) const
virtual bool CLNameValuePair::get(CFStringRef, std::string &, int) const
virtual bool CLNameValuePair::get(CFStringRef, CFArrayRef &) const
CoreLocation: type IDs do not match for key %{public}s - %{public}lu vs %{public}lu
virtual bool CLNameValuePair::get(CFStringRef, CFDataRef &, int) const
virtual bool CLNameValuePair::get(CFStringRef, CFStringRef &, int) const
virtual bool CLNameValuePair::get(CFStringRef, const char *&, unsigned int &, int) const
virtual bool CLNameValuePair::copyInternal(CFStringRef, CFTypeRef &, int) const
CoreLocation: specified index is out of range for key %{public}s (%{public}d of %{public}ld)
CoreLocation: specified index %{public}d not applicable to type %{public}lu for key %{public}s
virtual bool CLNameValuePair::set(CFStringRef, const bool &)
CoreLocation: could not create cf type for key %{public}s
virtual bool CLNameValuePair::set(CFStringRef, const uint16_t &)
virtual bool CLNameValuePair::set(CFStringRef, const short &)
virtual bool CLNameValuePair::set(CFStringRef, const uint32_t &)
virtual bool CLNameValuePair::set(CFStringRef, const int64_t &)
virtual bool CLNameValuePair::set(CFStringRef, const int &)
virtual bool CLNameValuePair::set(CFStringRef, const long &)
virtual bool CLNameValuePair::set(CFStringRef, const double &)
virtual bool CLNameValuePair::set(CFStringRef, const char *)
virtual bool CLNameValuePair::set(CFStringRef, const CLNameValuePair &)
virtual bool CLNameValuePair::insert(CFStringRef, const bool &)
virtual bool CLNameValuePair::insert(CFStringRef, const uint16_t &)
virtual bool CLNameValuePair::insert(CFStringRef, const short &)
virtual bool CLNameValuePair::insert(CFStringRef, const uint32_t &)
virtual bool CLNameValuePair::insert(CFStringRef, const int64_t &)
virtual bool CLNameValuePair::insert(CFStringRef, const int &)
virtual bool CLNameValuePair::insert(CFStringRef, const long &)
virtual bool CLNameValuePair::insert(CFStringRef, const double &)
virtual bool CLNameValuePair::insert(CFStringRef, const char *)
virtual bool CLNameValuePair::insert(CFStringRef, const CLNameValuePair &)
virtual bool CLNameValuePair::serializeBinary(CFDataRef *) const
CoreLocation: could not create write stream
CoreLocation: could not open write stream
unknown error
CoreLocation: could not write data, error code, %{public}ld, error domain, %{public}s
virtual bool CLNameValuePair::deserialize(const CFDataRef)
CoreLocation: could not create intermediate property list - %{public}ld (%{public}s)
virtual void CLNameValuePair::print() const
CoreLocation: %s
<empty>
static void CLNameValuePair::printKeyValue(const void *, const void *, void *)
CoreLocation: 
%s = <dictionary (%ld entries)>:
CoreLocation: 
%s = %s
CoreLocation: 
%s = %0.6f
CoreLocation: 
%s = %d
CoreLocation: 
%s = <unhandled value type %lu>
type ID does not match - %lu vs %lu
%s = <dictionary (%ld entries)>:
%s = %s
%s = %0.6f
%s = %d
%s = <unhandled value type %lu>
%s[%d]
static bool CLNameValuePair::fromCfType(const CFTypeRef, short &)
CoreLocation: could not get value
static bool CLNameValuePair::fromCfType(const CFTypeRef, int64_t &)
static bool CLNameValuePair::fromCfType(const CFTypeRef, int &)
static bool CLNameValuePair::fromCfType(const CFTypeRef, long &)
static bool CLNameValuePair::fromCfType(const CFTypeRef, double &)
CoreLocation: type IDs do not match - %{public}lu vs %{public}lu
static bool CLNameValuePair::fromCfType(const CFTypeRef, std::string &)
CoreLocation: could not convert to C string
CoreLocation: can't convert %{public}u data bytes
CoreLocation: #Warning type IDs do not match - %{public}lu
static bool CLNameValuePair::fromCfType(const CFTypeRef, const char *&, unsigned int &)
static bool CLNameValuePair::fromCfType(const CFTypeRef, CLNameValuePair &)
Direct_deprecated
CLReductiveFilterSuite.m
options
+[CLReductiveFilterSuite deriveLocationFromLocations:options:]
CoreLocation: Reductive filtering: Sum of weights <= 0 after at least one point added.
yyyy-MM-dd HH:mm:ss.SSSS
timestamp
Position
/System/Library/PrivateFrameworks/CompassUI.framework/CompassUI
void CLClientLoadCompassUIIfNecessary(void)
CoreLocation: Unable to load CompassUI framework
CUICalibration
CoreLocation: Could not load CUICalibrationClass from CompassUI framework
error == 0
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Daemon/Core/CSI/CLMachThreadSupport.mm
lock
info->fCount >= 0
(info->fCount == 0) || (info->fOwner == curThread)
(info->fCount > 0) || (info->fOwner == __null)
info->fCount > 0
unlock
kCLHeadingCodingKeyMagneticHeading
kCLHeadingCodingKeyTrueHeading
kCLHeadingCodingKeyAccuracy
kCLHeadingCodingKeyX
kCLHeadingCodingKeyY
kCLHeadingCodingKeyZ
kCLHeadingCodingKeyTimestamp
magneticHeading %.2f trueHeading %.2f accuracy %.2f x %+.3f y %+.3f z %+.3f @ %@
virtual bool CLPreferences::serialize(CFDataRef *) const
CoreLocation: ***not supported***
virtual bool CLPreferences::serializeBinary(CFDataRef *) const
virtual bool CLPreferences::deserialize(const CFDataRef)
virtual void CLPreferences::print() const
CoreLocation: 
<empty>
virtual void CLPreferences::merge(const CLPreferences &, bool)
virtual bool CLPreferences::loadFromFile(const char *)
virtual bool CLPreferences::saveToFile(const char *) const
virtual bool CLPreferences::saveToBinaryFile(const char *) const
virtual void CLPreferences::setInternal(const CFStringRef, const CFTypeRef)
CoreLocation: Attempt to set key %{public}s for read-only preferences %{public}s/%{public}s!
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Daemon/Shared/Utilities/CLPreferences.mm
containsInternal
OtherPref
kCLErrorDomain
kCLErrorDomainPrivate
kCLErrorUserInfoAlternateRegionKey
IsSimulator
<null>
<name>
<version>
<build>
hw.model
IOPlatformExpertDevice
IOPlatformSerialNumber
CLPlatformInfo::Provider CLPlatformInfo::getProviders()_block_invoke
CoreLocation: unknown hardware type %{private}d
locationd
static CLPlatformInfo::MotionProviders CLPlatformInfo::motionProviders()
CoreLocation: Unsupported HW type %d; file a radar to CoreMotion Factory | 1.0
CLPlatformInfo::MotionCapabilities CLPlatformInfo::queryMotionCaps()
CoreLocation: Unsupported HW type %{private}d; file a radar to CoreMotion Factory | 1.0
OverrideMotionCapEclipseService
CLMotionDefaultsWrite<bool>::CLMotionDefaultsWrite(const char *, const T &) [T = bool]
CoreLocation: motion default ignored,'%{public}s'.
Motion
odometer
deltaDistance
deltaDistanceAccuracy
coordinateFused
coordinateFusedWithVL
coordinateLatitude
coordinateLongitude
horizontalAccuracy
referenceFrame
altitude
verticalAccuracy
course
courseAccuracy
Name
Thoroughfare
SubThoroughfare
City
SubLocality
State
SubAdministrativeArea
CountryCode
Country
InlandWater
Ocean
/Library/Caches/locationd/
root
static std::string CLPersistentStore::getMutableStorePath(CLPersistentStoreType)
CoreLocation: no mutable store path for type, %{public}d
CoreLocation: could not get mutable store path for type, %{public}d
/System/Library/Frameworks/CoreLocation.framework/Support/
/System/Library/Frameworks/CoreLocation.framework
SIMULATOR_ROOT
kCLConnectionMessageBBTimeFreqTransferAssert
CLCallbackAssertionInternal::CLCallbackAssertionInternal(dispatch_queue_t, const char *, NSDictionary *, BBTimeFreqTransferCallback)_block_invoke
CoreLocation: CLBBTFTA,unexpected message,%s
kCLConnectionMessageBBTimeFreqTransferAssertError
kCLConnectionMessageBBTimeFreqTransferMeasurement
CLBBTFTA Error
(Unspecified)
kCLConnectionMessageAssertionLevelKey
InUseAssertion/kCLConnectionMessage
CLLocationPushServiceErrorDomain
kCLRegionCodingKeyIdentifier
kCLRegionCodingKeyOnBehalfOfBundleId
kCLRegionCodingKeyNotifyOnEntry
kCLRegionCodingKeyNotifyOnExit
kCLRegionCodingKeyConservativeEntry
kCLRegionCodingKeyEmergency
kCLRegionCodingKeyRegionType
kCLRegionCodingKeyDeviceId
kCLRegionCodingKeyHandoffTag
CLRegion.m
CLRegion is an abstract class. Use one of the derived classes
CLRegion (identifier:'%@')
AuthContext InUse:%d  RegResult:%d(%d) EffectiveMask:%d  ProvisionalMask:%d
CLFindMyAccessoryAbsoluteWildConfiguration <%hhx> DesiredKeyRollDate:%@ NextWildKeyIndex: %lu
kCLFindMyAccessoryWildConfigurationRollDate
kCLFindMyAccessoryWildConfigurationNextWildKeyIndex
cl_fence_handoff
kCLCircularRegionCodingKeyCenterLatitude
kCLCircularRegionCodingKeyCenterLongitude
kCLCircularRegionCodingKeyRadius
reserved
kCLCircularRegionCodingKeyMonitoringNearby
kCLCircularRegionCodingKeyLowPower
kCLCircularRegionEncodedKeyVersion
kCLRegionCodingKeyCenterLatitude
kCLRegionCodingKeyCenterLongitude
kCLRegionCodingKeyRadius
CLCircularRegion (identifier:'%@', center:<%+.8f,%+.8f>, radius:%.2fm)
bool CLGetUncertaintyScaleFactors(unsigned int, double *, double *)
CoreLocation: #CLEU,CLGetUncertaintyScaleFactors,input horzontal or vertical SF pointer is NULL
CoreLocation: #CLEU,CLGetUncertaintyScaleFactors,confidence out of bounds,%{public}d
CoreLocation: #CLEU,CLGetUncertaintyScaleFactors,conf,%{public}d,horzSF,%{public}f,vertSF,%{public}f
Emergency
double linearInterp(unsigned int, std::array<std::pair<unsigned int, double>, size>) [size = 9UL]
CoreLocation: #CLEU,linearInterp,x is less than the first point in table,x,%{public}d,table[0].first,%{public}d
CoreLocation: #CLEU,linearInterp,x is greater than the last point in table,x,%{public}d,table[size-1].first,%{public}d
CoreLocation: #CLEU,linearInterp,failed to find table points bounding x
CLBeaconRegionAnyIdentifier
CLBeaconRegion.m
beaconIdentityConstraint
kCLBeaconRegionCodingKeyProximityUUID
kCLBeaconRegionCodingKeyMajor
kCLBeaconRegionCodingKeyMinor
kCLBeaconRegionNotifyEntryStateOnDisplay
CLBeaconRegion (identifier:'%@', uuid:%@, major:%@, minor:%@)
kCLBeaconCodingKeyTimestamp
kCLBeaconCodingKeyProximityUUID
kCLBeaconCodingKeyMajor
kCLBeaconCodingKeyMinor
kCLBeaconCodingKeyProximity
kCLBeaconCodingKeyAccuracy
kCLBeaconCodingKeyRSSI
CLBeacon (uuid:%@, major:%@, minor:%@, proximity:%d +/- %.2fm, rssi:%ld, timestamp:%@)
com.apple.locationd.appreset
com.apple.locationd.appstatus
com.apple.locationd.techstatus
com.apple.locationd.started
com.apple.locationd.statusbar
com.apple.locationd.authorization
com.apple.locationd.gnssbands
Locations
LocationCount
transform
covariance
confidence
debugInfo
<_CLVLLocalizationResult: %p> {
%@.timestamp = %f,
%@.location = {
%@.coordinate = [%f, %f, %f],
%@.horizontalAccuracy = %f
%@},
%@.transform = [%f, %f, %f, %f;
%@%f, %f, %f, %f;
%@%f, %f, %f, %f;
%@%f, %f, %f, %f],
%@.covariance = [%f, %f, %f, %f, %f, %f;
%@%f, %f, %f, %f, %f, %f;
%@%f, %f, %f, %f, %f, %f;
%@%f, %f, %f, %f, %f, %f;
%@%f, %f, %f, %f, %f, %f;
%@%f, %f, %f, %f, %f, %f],
%@.confidence = %f
%@.debugInfo = %@
%+08.4lf%+09.4lf/
%+08.4lf%+09.4lf%+08.3lf/
SimulationScenarios
Couldn't get list of location simulation scenarios
plist
Selected location simulation scenario is not a file URL
Selected location simulation scenario does not exist
Selected location simulation scenario is not a property list
CLSimulation: Object passed to appendSimulatedLocation is not a CLLocation!
-[CLSimulationManager clearSimulatedCells]
CoreLocation: this SPI is obsolete and will be removed in the future
-[CLSimulationManager setSimulatedCell:]
-[CLSimulationManager startCellSimulation]
-[CLSimulationManager stopCellSimulation]
-[CLSimulationManager setSimulatedCellRegistrationStatus:]
-[CLSimulationManager setWifiScanResults:]
-[CLSimulationManager startWifiSimulation]
-[CLSimulationManager stopWifiSimulation]
-[CLSimulationManager setSimulatedWifiPower:]
-[CLSimulationManager flush]
com.apple.locationd.simulation
-[CLSimulationManager daemonProxy]_block_invoke
CoreLocation: Simulation connection interrupted
CoreLocation: Simulation connection invalidated
CoreLocation: Error fetching remoteObjectProxy
Simulation
CLBeaconIdentityConstraint.m
The UUID parameter is required
[decoder allowsKeyedCoding]
kCLBeaconIdentityConstraintUUID
kCLBeaconIdentityConstraintMajor
kCLBeaconIdentityConstraintMinor
[encoder allowsKeyedCoding]
CLBeaconIdentityConstraint (uuid:%@, major:%@, minor:%@)
LogFile
LogFileDirectory
LogFilePrefix
LogFileFlush
ShowError
LogFence
LogBufferSize
LogShowUI
LogFileLevel
LogBufferLevel
LogConsoleLevel
LogStackLevel
.log
com.apple.locationd.log.compression
vlog
CLLog.mm
newFullContentLength == fullContentLength
'\n' == buffer[fullContentLength - 1]
%s,%s,Time,%08.3f,Function,"%s",
%s,%s,Time,%08.3f,
%s,%s,logging locations to %s%s
NOTICE
CLLog
 and flushing immediately
 no flush
%s,%s,logging locations to an internal buffer with capacity %d
%s,%s,Failed to move aside log file %s (%d)
ERROR
.log.bz2
%s/%s
Failed to delete log
%s,%s,Rotation path is too long, could not delete old logs.
C16@?0r*8
%s,%s,Failed to write %s
%s,%s,could not open locations log %s, errno %d
Unplugged!
void CLLog::logHeader()
CoreLocation-%s
locationd was compiled on %s at %s
Mar  7 2023
20:21:55
%s @ system model %s / version %s
/usr/libexec/locationd @ system model %s / version %s
IOPlatformSerialNumber: %s
Begin settings dump (read at construction of CLSettings or upon darwin notification 'com.apple.locationd/prefs')
End settings dump
com.apple.timed
%s,%s,dumping internal buffer
LogNatalimetry
LogCalorimetry
userinfo
.plist
cache
.plist.log
%s,%s,could not copy %s log
WARNING
%s,%s,could not dump log file
%s,%s,Time,%08.3f,%d
0x%08lx %s + %lu
STATUS
STACK
%s,%s,Time,%08.3f,%d
0x%08lx 0x%08lx + %lu
%s,%s,Time,%08.3f,%d
0x%08lx
kCLVehicleHeadingCodingKeyTrueHeading
kCLVehicleHeadingCodingKeyTimestamp
trueHeading %.2f @ %@
%.2f
kCLVehicleSpeedCodingKeySpeed
kCLVehicleSpeedCodingKeyTimestamp
speed %.2f mps @ %@
%.0fmph
CLDurianIdentifier
CLDurianMacAddress
CLDurianConnectionState
CLDurianError
CLDurianLogs
CLDurianLogType
CLDurianVersionData
CLDurianBatteryStatus
CLDurianTagType
CLDurianObfuscatedIdentifier
CLDurianNearOwnerTimeout
CLDurianSoundSequence
CLDurianPersonalizationInfo
CLDurianFirmwareAssetURL
CLDurianWildConfig
CLDurianMultiStatus
CLDurianGroupRelation
CLDurianGroupMaintenance
CLDurianUserStats
CLDurianUserStatsPersistence
CLDurianAccelerometerSlopeModeConfigurationKey
CLDurianAccelerometerOrientationModeConfigurationKey
CLDurianAccelerometerModeKey
CLDurianSetUnauthorizedPlaySoundRateLimitKey
CLDurianKeyRollIndex
CLDurianKeyRollInterval
CLDurianRangingMacAddress
CLDurianRangingCountryCode
CLDurianRangingUwbChannel
CLDurianRangingAcqPreamble
CLDurianRangingTrackingPreamble
CLDurianRangingInterval
CLDurianRangingTargetEventCounter
CLDurianRangingStatus
CLDurianRangingEndReason
CLDurianRangingTimestampStatus
CLDurianRangingRtt
CLDurianRangingTat
CLDurianRangingCycleIndex
CLHawkeyeTaskOpcodeKey
CLHawkeyeTestModeKey
CLHawkeyeSeparatedUTTimeoutSecondsKey
CLHawkeyeSeparatedUTBackoffTimeoutSecondsKey
CLHawkeyeTxPowerKey
CLHawkeyeAISProductDataKey
CLHawkeyeAISManufacturerNameKey
CLHawkeyeAISModelNameKey
CLHawkeyeAISModelColorCodeKey
CLHawkeyeAISAccessoryCategoryKey
CLHawkeyeAISAccessoryCapabilitiesKey
CLHawkeyeAISFindMyVersionKey
CLHawkeyeAISBatteryTypeKey
CLHawkeyeSerialNumberKey
CLHawkeyeCurrentPrimaryKeyKey
CLHawkeyeiCloudIdentifierKey
CLHawkeyeDataFragmentKey
CLHawkeyeFirmwareAssetURLKey
CLHawkeyeProductGroupKey
CLHawkeyeProductNumberKey
CLHawkeyeFirmwareURLSandboxExtensionKey
CLHawkeyeLocalFirmwareInUseResultKey
CLHawkeyeAggressiveAdvertisementTimeoutKey
CLHawkeyeFetchTxPowerOwnerKey
CLAvengerAdvertisementScanDateKey
CLAvengerAdvertisementAddressKey
CLAvengerAdvertisementDataKey
CLAvengerAdvertisementStatusKey
CLAvengerAdvertisementRSSIKey
CLAvengerAdvertisementReservedKey
CLAvengerAdvertisementOwnershipTypeKey
CLAvengerAdvertisementChannelKey
CLTAEnablementRequirementsStatusKey
CLCircularLogBuffer
CLVisit.m
kCLVisitCodingKeyLatitude
kCLVisitCodingKeyLongitude
kCLVisitCodingKeyHorizontalAccuracy
kCLVisitCodingKeyArrivalDate
kCLVisitCodingKeyDepartureDate
kCLVisitCodingKeyDetectionDate
kCLVisitCodingKeyPlaceInference
<%+.8f,%+.8f> +/- %.2fm (%@ to %@) %@
CLGeocoder
[GEOMapService class]
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Framework/CoreLocation/CLGeocoder.m
-[CLGeocoder init]
-[CLGeocoder reverseGeocodeLocation:preferredLocale:heading:localResultsOnly:completionHandler:]_block_invoke
CoreLocation: Coarse MetaData cannot be decoded while reverse geocoding location, error, %@
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v24@?0@"<GEOMapItem>"8@"NSError"16
-[CLGeocoder _ticket:didReturnError:partialResultForLocation:]_block_invoke
CoreLocation: #Warning Geocode error: %{private}@
com.apple.locationd.synchronous
-[CLLocationInternalClient connection]_block_invoke
CoreLocation: #Spi, Interrupted
CoreLocation: #Spi, Invalidated
CLInternalService
-[CLLocationInternalClient synchronousRemoteObject]_block_invoke
CoreLocation: #Spi, Error with proxy, error: %@
v20@?0@"NSError"8i16
v24@?0@"NSError"8@"NSData"16
com.apple.locationd.internalservice.errorDomain
v24@?0@"NSError"8@"NSDictionary"16
v24@?0@"NSError"8@"NSArray"16
v24@?0@"NSError"8@"NSString"16
-[CLLocationInternalClient setLocationDefaultForKey:value:]
CoreLocation: #Spi, Key is NULL!
-[CLLocationInternalClient setLocationDefaultForKey:value:]_block_invoke
CoreLocation: #Spi, Couldn't set location default!
-[CLLocationInternalClient timeZoneAtLocation:]
LocationInternal.m
nil != location
-[CLLocationInternalClient setPrivateMode:]_block_invoke
CoreLocation: #Spi, setPrivateMode failed
v20@?0@"NSError"8B16
-[CLLocationInternalClient setLocationServicesEnabled:]_block_invoke
CoreLocation: #Spi, CLInternalSetLocationServicesEnabled failed
-[CLLocationInternalClient setAuthorizationPromptMapDisplayEnabled:]_block_invoke
CoreLocation: #Spi, CLInternalSetAuthorizationPromptMapDisplayEnabled failed
-[CLLocationInternalClient setTemporaryAuthorizationStatusForBundleId:orBundlePath:statusData:]
data != nil
v24@?0@"NSError"8d16
-[CLLocationInternalClient setGestureServiceEnabled:]_block_invoke
CoreLocation: #Spi, CLInternalSetGestureServiceEnabled failed
-[CLLocationInternalClient performMigration]
CoreLocation: #Spi, _CLInternalPerformMigration failed
-[CLLocationInternalClient shutdownDaemon]
CoreLocation: #Spi, _CLShutdownDaemon failed
-[CLLocationInternalClient displayStatistics]
CoreLocation: #Spi, _CLDisplayStatistics failed
-[CLLocationInternalClient dumpLogs:]
CoreLocation: #Spi, _CLDumpLogs failed
v192@?0@"NSError"8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16
v48@?0@"NSError"8{?=dddi}16
-[CLLocationInternalClient setMapMatchingRouteHint:count:routingType:stepType:]
CoreLocation: #Spi,RouteHintError, Exceeded max number of route hint road segments (%{public}d > %{public}d)
CoreLocation: #Spi,RouteHint,LocationInternal,Received route hint road segments,%{public}d,routeType,%{public}d,stepType,%{public}d
-[CLLocationInternalClient setMapMatchingRouteHint:count:routingType:stepType:]_block_invoke
CoreLocation: #Spi,RouteHintError,Couldn't set map-matching route hint!
-[CLLocationInternalClient setTrackRunHint:]
CoreLocation: #Spi,CLTR,CLTrackRunHint received,framework side
-[CLLocationInternalClient setTrackRunHint:]_block_invoke
CoreLocation: #Spi,CLTR,TrackRunHintError,Couldn't set track run hint!
-[CLLocationInternalClient getAccessoryTypeBitSet]_block_invoke
CoreLocation: #Spi,getAccessoryTypeBitSet,failed
-[CLLocationInternalClient getAccessoryTypeBitSet]
CoreLocation: #Spi,getAccessoryTypeBitSet,%d
-[CLLocationInternalClient getAccessoryPASCDTransmissionState]_block_invoke
CoreLocation: #Spi,getAccessoryPASCDTransmissionState,failed
-[CLLocationInternalClient getAccessoryPASCDTransmissionState]
CoreLocation: #Spi,getAccessoryPASCDTransmissionState,%d
-[CLLocationInternalClient getOdometryBatchedLocations]_block_invoke
CoreLocation: #Spi,getOdometryBatchedLocations,received data count,%{public}lu
CoreLocation: #Spi,getOdometryBatchedLocations,returned with error
-[CLLocationInternalClient getOdometryBatchedLocations]
CoreLocation: #Spi,getOdometryBatchedLocations,returned with count,%{public}lu
-[CLLocationInternalClient copyLastLog]
CoreLocation: #Spi, _CLCopyLastLog failed
v32@?0@"NSError"8Q16Q24
CFArrayRef CLCopyGnssBandsInUse(void)
CoreLocation: Invalid bandUse,%{public}d
{CLGnssBandInfo=iddi}
CLStatusBarIconState CLGetStatusBarIconState()
CoreLocation: CLStatusBarIconState received an icon stateu of %d
void CLSetMapMatchingRouteHint(CLClientLocationRouteHintType, CLClientLocationRouteHintType, CLMapsRouteHint *, int)
CoreLocation: RouteHints,CLSetRouteHintsForMapMatching,received,%lu,routeType,%d,stepType,%d
void CLSetRouteHintsForMapMatching(CLClientLocationRouteHintType, CLMapsRouteHint *, int)
CoreLocation: RouteHints,CLSetRouteHintsForMapMatching,received,%lu,routeType,%d
void CLSetTrackRunHint(CLTrackRunHint *)
CoreLocation: TrackRunHint,CLSetTrackRunHint,received,MCTime,%{public}.1lf,lane,%{private}d,notification,%{private}d
int32_t CLGetAccessoryTypeBitSet()
CoreLocation: CLGetAccessoryTypeBitSet
CLClientPASCDTransmissionState CLGetAccessoryPASCDTransmissionState()
CoreLocation: CLGetAccessoryPASCDTransmissionState
NSDictionary *CLGetOdometryBatchedLocations()
CoreLocation: CLGetOdometryBatchedLocations
[GEOLocation class]
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Framework/CoreLocation/CLPlacemark.m
-[CLPlacemarkInternal init]
<%+.8f,%+.8f> radius %.2f
kCLPlacemarkCodingKeyLocation
kCLPlacemarkCodingKeyAddress
kCLPlacemarkCodingKeyRegion
kCLPlacemarkCodingKeyAreasOfInterest
kCLPlacemarkCodingKeyMapItemSource
kCLPlacemarkCodingKeyGEOMapItem
kCLPlacemarkCodingKeyGEOMapItemHandle
kCLPlacemarkCodingKeyMeCardAddress
Street
FormattedAddressLines
<%+.8f,%+.8f> +/- %.2fm
, region 
, source 
CNPostalAddressStreetKey
/System/Library/Frameworks/Contacts.framework/Contacts
CNPostalAddressSubLocalityKey
CNPostalAddressCityKey
CNPostalAddressSubAdministrativeAreaKey
CNPostalAddressStateKey
CNPostalAddressPostalCodeKey
CNPostalAddressCountryKey
CNPostalAddressISOCountryCodeKey
CNPostalAddress
-[CLLocationPushServiceExtensionRemoteContext initWithInputItems:listenerEndpoint:contextUUID:]
CoreLocation: [%{public}@] Location Push Service extension context initialized
-[CLLocationPushServiceExtensionRemoteContext didReceiveLocationPushPayload:reply:]
CoreLocation: [%{public}@] didReceiveLocationPushPayload:reply:
-[CLLocationPushServiceExtensionRemoteContext serviceExtensionWillTerminate]
CoreLocation: [%{public}@] Location Push Service extension time will expire
-[CLLocationPushServiceExtensionRemoteContext serviceExtensionPerformCleanup]
CoreLocation: [%{public}@] Cleaning up extension
kCLVertexCodingKeyLatitude
kCLVertexCodingKeyLongitude
#polygon,_CLVertex (latitude:'%.07lf', longitude:'%.07lf')
-[_CLPolygonalRegion initWithVertices:identifier:]
CoreLocation: #polygon,number of vertices (%{public}lu) mustn't exceed %{public}lu
CoreLocation: #polygon,number of vertices (%{public}lu) must be greater or equal than %{public}lu
CoreLocation: #polygon,monitoring requires a valid connected polygon where first and last coordinates are the same
CoreLocation: #polygon,All vertices, except for the first and last equals, have to be unique
CLPolygonalRegion.m
kCLPolygonalRegionCodingKeyVertices
kCLPolygonalRegionCodingKeyReferenceFrame
kCLPolygonalRegionCodingKeyMonitoringNearby
_CLPolygonalRegion (identifier:'%@', count:'%lu')
-[_CLPolygonalRegion pointInPolygonWithCoordinate:withDistanceToBorder:]
CoreLocation: #polygon,#warning invalid coordinate
CoreLocation: #polygon,#warning No points data found for polygon
CoreLocation: #polygon,#warning distanceToBorder is nil
CoreLocation: #polygon,distanceToBorder,%.3lf,inRegion %d
com.apple.locationd.harvester
CLPPoiHarvest
-[CLHarvester connect]_block_invoke
CoreLocation: CLHarvester invalidation handler
CoreLocation: CLHarvester interruption handler
-[CLHarvester currentStateDictionary]_block_invoke
CoreLocation: CLHarvester synchronous remote proxy invalidated
CoreLocation: CLHarvester fetchState reply block called
v16@?0@"NSDictionary"8
Harvester
CLFindMyAccessoryFirmwareVersion <%p> VanBurenVersion: %@, RTKitVersion: %@, RoseAPVersion: %lu, RoseDSPVersion: %lu, CalibrationDataVersion: %lu
%u%c%u
%u.%u
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
UnknownStateTracker
ZoneId
BundleId
BundlePath
com.apple.FindMyAccessoryFirmwareUpdateManager.privateQueue
-[CLFindMyAccessoryFirmwareUpdateManager handleInterruption]
-[CLFindMyAccessoryFirmwareUpdateManager handleMessage:]
DurianManagement/DidFetchPersonalizationInformation
Failed
Success
CoreLocation: informing client -- did retreive personalization info for device: %s - %s with info: %@
DurianManagement/DidUpdateFirmware
Succeeded
CoreLocation: informing client -- firmware update for device: %s - %s
DurianManagement/DidUseLocalAssetRequest
CoreLocation: informing client -- use local asset request for product group: %s, product number: %s - %s
DurianManagement/DidUseDefaultAssetRequest
CoreLocation: informing client -- use default asset request for product group: %s, product number: %s - %s
DurianManagement/DidFetchWhetherLocalFirmwareAssetIsInUse
IN USE
NOT IN USE
CoreLocation: informing client -- local firmware asset is %s for product group: %s, product number: %s
CoreLocation: CLFindMyAccessoryFirmwareUpdateManager - Unknown Message - ignoring
CLFindMyAccessoryFirmwareUpdateManager.mm
-[CLFindMyAccessoryFirmwareUpdateManager getPersonalizationInfoForDevice:]
CoreLocation: getPersonalizationInfoForDevice: %@
assetURL
-[CLFindMyAccessoryFirmwareUpdateManager updateFirmwareForDevice:withAssetURL:]
CoreLocation: updateFirmwareForDevice for device: %@ with assetURL: %@
-[CLFindMyAccessoryFirmwareUpdateManager abortFirmwareUpdateForDevice:]
CoreLocation: abortFirmwareUpdateForDevice: %@
firmwareUpdateAssetURL
productGroup
productNumber
extension
-[CLFindMyAccessoryFirmwareUpdateManager useLocalFirmwareAssetFromURL:forProductGroup:forProductNumber:withSandboxExtension:]
CoreLocation: useLocalFirmwareAssetFromURL: %@ forProductGroup: %@ forPorductNumber: %@ withSandboxExtension: %@
-[CLFindMyAccessoryFirmwareUpdateManager useDefaultFirmwareAssetSourceForProductGroup:andProductNumber:]
CoreLocation: useDefaultFirmwareAssetSourceForProductGroup: %@ forPorductNumber: %@
-[CLFindMyAccessoryFirmwareUpdateManager fetchWhetherLocalFirmwareAssetIsInUseForProductGroup:andProductNumber:]
CoreLocation: fetchWhetherLocalFirmwareAssetIsInUseForProductGroup: %@ forPorductNumber: %@
DurianManagement/FetchPersonalizationInformation
DurianManagement/UpdateFirmware
DurianManagement/AbortFirmwareUpdate
DurianManagement/UseLocalFirmwareAssetFromUrl
DurianManagement/UseDefaultFirmwareAssetSource
DurianManagement/FetchWhetherLocalFirmwareAssetIsInUse
ProvisionalMonitoring
RemoteUsage
InUseLevel
Authorization
Authorized
SupportedAuthorizationMask
CorrectiveCompensationEnabled
IncidentalUseMode
InterestZones
Relevant
BackgroundIndicatorEnabled
FenceTimeStarted
FenceTimeStopped
SignificantTimeStarted
SignificantTimeStopped
VisitTimeStarted
VisitTimeStopped
BeaconRegionTimeStarted
BeaconRegionTimeStopped
PushTimeStarted
PushTimeStopped
TranscriptTimeStarted
TranscriptTimeStopped
Registered
LocationTimeStarted
LocationTimeStopped
RangeTimeStarted
RangeTimeStopped
ReceivingLocationInformationTimeStarted
ReceivingLocationInformationTimeStopped
NonPersistentSignificantTimeStarted
NonPersistentSignificantTimeStopped
CLBundleKeyValueCache
CLSystemService
CLIsFindMyiPhone
CLIsCoreRoutine
CLEmergencyService
CLPlaceInference.m
kCLPlaceInferenceUserType
kCLPlaceInferencePlaceType
kCLPlaceInferencePlacemark
kCLPlaceInferenceReferenceLocation
kCLPlaceInferenceConfidence
kCLPlaceInferencePreferredName
kCLPlaceInferenceLoiIdentifier
CLPlaceInference, ref, <%f,%f> +/- %f, userType, %lu, placeType, %lu, placemark, %@, preferredName, %@, confidence, %f, related loi identifier, %@
double CLDistanceCalc::calculateDistance(const CLDaemonLocation &, const CLDaemonLocation &)
CoreLocation: #Warning refAlt < %.1lf,refAlt,%.1lf,using the min
CoreLocation: #Warning refAlt > %.1lf,refAlt,%.1lf,using the max
-[_CLSignificantRegion initWithCenter:radius:referenceFrame:lowPower:identifier:onBehalfOfBundleId:notifyOnEntry:notifyOnExit:conservativeEntry:emergency:deviceId:handoffTag:]
CoreLocation: LowPower not supported for this object/platform
CoreLocation: Conservative not supported for this object/platform
CLSignificantRegion.m
kCLSignificantRegionCodingKeyType
CLSignificantRegion (identifier:'%@', center:<%+.8f,%+.8f>, radius:%.2fm, frame:%d)
first
second
minLatitude
maxLatitude
minLongitude
maxLongitude
nRows
nColumns
latitude
longitude
timeSinceStart
offRouteTime
distanceSinceStart
offRouteDistance
averagePace
distanceAlongReference
raceStartPointDetected
raceEndPointDetected
userIsOffRoute
projectedOnNearestPoint
raceSessionExpired
rollingBufferReachedEndOfReferenceRoute
routeConfigurationSuccessful
racingRouteAnalyticsSent
prematureRaceEndDetected
referenceRouteTotalLengthDetermined
locationPointIsOutsideOfAcceptedRange
locationPointNotMatched
routePointsBufferSize
numberOfRoutePointsToAdd
offRouteGraceDuration
matchedPointCounter
referenceRouteDataPointCounter
currentRouteDataPointCounter
offRouteDataPointCounter
inutileDataPointCounter
rollingBufferUpdateCounter
lastMatchedPointIndex
lastMatchedPointIndexOnReferenceRoute
rollingBufferStartIndexOnReferenceRoute
matrixCellIndexForLastMatchedPoint
referenceRouteTotalLength
timestampOfLastMatchedPointOnReferenceRoute
registeredTimeAtThresholdDistance
endOfRaceTimeThreshold
nearestNeighborMaximumAcceptedDistance
routeMatrixIndexVec
racingRouteVariables
startPointOnCurrentRoute
startPointOnReferenceRoute
lastOnRouteDataPoint
lastProjectedDataPoint
routeBoundingBox
CLFindMyAccessoryWildConfiguration <%hhx> DesiredKeyRollDate:%@ KeyRollInterval:%llu KeysRemaining:%llu KeyCount:%llu
kCLFindMyAccessoryWildConfigurationKeyRollInterval
kCLFindMyAccessoryWildConfigurationKeysRemaining
kCLFindMyAccessoryWildConfigurationKeyCount
kCLLocationCodingKeyCoordinateLatitude
kCLLocationCodingKeyCoordinateLongitude
kCLLocationCodingKeyHorizontalAccuracy
kCLLocationCodingKeyAltitude
kCLLocationCodingKeyVerticalAccuracy
kCLLocationCodingKeySpeed
kCLLocationCodingKeySpeedAccuracy
kCLLocationCodingKeyCourse
kCLLocationCodingKeyCourseAccuracy
kCLLocationCodingKeyTimestamp
kCLLocationCodingKeyType
kCLLocationCodingKeyLifespan
kCLLocationCodingKeyMatchInfo
kCLLocationCodingKeyFloor
kCLLocationCodingKeySimulationParams
kCLLocationCodingKeyFromSoftwareSimulator
kCLLocationCodingKeyFromExternalAccessory
kCLLocationCodingKeyIntegrity
kCLLocationCodingKeyGroundAltitude
kCLLocationCodingKeyFusionInfo
kCLLocationCodingKeyTrackRunInfo
kCLLocationCodingKeyRawCoordinateLatitude
kCLLocationCodingKeyRawCoordinateLongitude
kCLLocationCodingKeyRawHorizontalAccuracy
kCLLocationCodingKeyRawReferenceFrame
kCLLocationCodingKeyRawAltitude
kCLLocationCodingKeyRawVerticalAccuracy
kCLLocationCodingKeyRawCourse
kCLLocationCodingKeyRawCourseAccuracy
kCLLocationCodingKeyCoarseMetaData
kCLLocationCodingKeySignalEnvironmentType
kCLLocationCodingKeyEllipsoidalAltitude
kCLLocationCodingKeyPositionContextState
kCLLocationCodingKeyProbabilityPositionContextStateIndoor
kCLLocationCodingKeyProbabilityPositionContextStateOutdoor
kCLLocationCodingKeyGnssOdometerInfo
<%+.8f,%+.8f> +/- %.2fm (speed %.2f mps / course %.2f) @ %@
suitability
speed
lifespan
rawLatitude
rawLongitude
rawReferenceFrame
signalEnvironment
ellipsoidalAltitude
isSoftwareSimulated
isFromExternalAccessory
/System/Library/Frameworks/CoreLocation.framework/Support/WMM.dat
{CLLocationCoordinate2D=dd}
-[CLEmergencyLocationUsabilityCriteria printUsabilityCriteria:]
CoreLocation: %{public}@,vuncCheckRequiredForUsability,%{public}d,altitudeStitchingEnabled,%{public}d,maxUsableAge,%{public}f,maxUsableHunc,%{public}f,maxUsableVunc,%{public}f,minUsableIntegrity,%{public}d
-[CLEmergencyLocationSelectorConfig printConfiguration]
CoreLocation: #CLELS,%{public}@,printConfiguration,firstUpdateEnabled,%{public}d,periodicUpdatesEnabled,%{public}d,firstLocationMaxEarlyReturnHunc,%{public}f,firstLocationMaxEarlyReturnVunc,%{public}f,locationUpdateHuncReductionToSendEarly,%{public}f,locationUpdateDistanceMovedToSendEarly,%{public}f,firstLocationEarlyReturnEnabled,%{public}d,firstLocationTimeout,%{public}f,locationUpdateTimeout,%{public}f,locationUpdateMinDelay,%{public}f
#CLELS,%@,first location usability criteria
#CLELS,%@,location update usability criteria
CLEmergencyLocationSelector.mm
config
bundle
delegate
Emergency Location Session for %@
v16@?0@"CLLocation"8
#CLELS,
,state machine
void CLEmergencyLocationSelectorInternal::updateLocation(CLLocation *)
CoreLocation: #CLELS,%{public}@,updateLocation,nil Location object
CoreLocation: #CLELS,%{public}@,updateLocation,lat,%{private}.7f,lon,%{private}.7f,hunc,%{public}f,alt,%{private}f,ellipsoidalAlt,%{private}f,vunc,%{public}f,timestamp,%{public}@,locationType,%{public}d,integrity,%{public}d
Enter
Exit
StopSession
LocationUpdate
SendLocationTimeout
FirstLocation
FirstUpdate
PeriodicUpdates
SessionFinshed
bool CLEmergencyLocationSelectorInternal::isLocationUsable(CLEmergencyLocationUsabilityCriteria *, CLLocation *)
CoreLocation: #CLELS,%{public}@,isLocationUsable,invalid parameters
CoreLocation: #CLELS,%{public}@,isLocationUsable,invalid coordinates
CoreLocation: #CLELS,%{public}@,isLocationUsable,location too old. Age:%{public}f
CoreLocation: #CLELS,%{public}@,isLocationUsable,horizontal accuracy too low. Hunc:%{public}f
CoreLocation: #CLELS,%{public}@,isLocationUsable,integrity too low. Integrity:%{public}d
CoreLocation: #CLELS,%{public}@,isLocationUsable,unusable altitude
bool CLEmergencyLocationSelectorInternal::isLocationUsableForFirstUpdate(CLEmergencyLocationUsabilityCriteria *, CLLocation *)
CoreLocation: #CLELS,%{public}@,isLocationUsableForFirstUpdate,not saving,invalid parameters
CoreLocation: #CLELS,%{public}@,isLocationUsableForFirstUpdate,not saving,invalid hunc
CoreLocation: #CLELS,%{public}@,isLocationUsableForFirstUpdate,not saving,integrity too low. Integrity:%{public}d
CoreLocation: #CLELS,%{public}@,isLocationUsableForFirstUpdate,saving,haven't save first update before.
CoreLocation: #CLELS,%{public}@,isLocationUsableForFirstUpdate,saving,better Hunc
CoreLocation: #CLELS,%{public}@,isLocationUsableForFirstUpdate,saving,location changed significantly,dist,%{public}f
CoreLocation: #CLELS,%{public}@,isLocationUsableForFirstUpdate,not saving
bool CLEmergencyLocationSelectorInternal::isAltitudeUsable(CLEmergencyLocationUsabilityCriteria *, CLLocation *)
CoreLocation: #CLELS,%{public}@,isAltitudeUsable,NO,invalid parameters
CoreLocation: #CLELS,%{public}@,isAltitudeUsable,NO,vertical accuracy too low,%{public}.2f
CoreLocation: #CLELS,%{public}@,isAltitudeUsable,NO,received altitude is not valid,%{private}.2f
bool CLEmergencyLocationSelectorInternal::isAltitudeUsableForFirstUpdate(CLEmergencyLocationUsabilityCriteria *, CLLocation *)
CoreLocation: #CLELS,%{public}@,isAltitudeUsableForFirstUpdate,YES,FirstUpdateVerticalLocation being saved first time
CoreLocation: #CLELS,%{public}@,isAltitudeUsableForFirstUpdate,YES,received Vunc better than cached Vunc
CoreLocation: #CLELS,%{public}@,isAltitudeUsableForFirstUpdate,YES,altitude change significant,%{public}f
CoreLocation: #CLELS,%{public}@,isAltitudeUsableForFirstUpdate,NO
bool CLEmergencyLocationSelectorInternal::shouldSendFirstLocationEarly()
CoreLocation: #CLELS,%{public}@,shouldSendFirstLocationEarly,not sending,invalid cached location
CoreLocation: #CLELS,%{public}@,shouldSendFirstLocationEarly,not sending,invalid coordinates
CoreLocation: #CLELS,%{public}@,shouldSendFirstLocationEarly,not sending,First location early return Hunc not satisfied
CoreLocation: #CLELS,%{public}@,shouldSendFirstLocationEarly,not sending,First location early return Vunc not satisfied
CoreLocation: #CLELS,%{public}@,shouldSendFirstLocationEarly,can send first location early
bool CLEmergencyLocationSelectorInternal::shouldSendLocationUpdateEarly()
CoreLocation: #CLELS,%{public}@,shouldSendLocationUpdateEarly,not sending,invalid cached location
CoreLocation: #CLELS,%{public}@,shouldSendLocationUpdateEarly,sending,first valid fix being sent after sending no fix or nil fix
CoreLocation: #CLELS,%{public}@,shouldSendLocationUpdateEarly,not sending,last send was too recent,tDiff,%{public}f
CoreLocation: #CLELS,%{public}@,shouldSendLocationUpdateEarly,sending,higher hunc reduction,previous,%{public}f,current,%{public}f
CoreLocation: #CLELS,%{public}@,shouldSendLocationUpdateEarly,sending,location changed significantly,dist,%{public}f
CoreLocation: #CLELS,%{public}@,shouldSendLocationUpdateEarly,sending,altitude is usable now
CoreLocation: #CLELS,%{public}@,shouldSendLocationUpdateEarly,sending,higher vunc reduction,previous,%{public}f,current,%{public}f
CoreLocation: #CLELS,%{public}@,shouldSendLocationUpdateEarly,sending,higher altitude change,%{public}f
bool CLEmergencyLocationSelectorInternal::isLocationRecentEnough(CLEmergencyLocationUsabilityCriteria *, CLLocation *)
CoreLocation: #CLELS,%{public}@,canSendLocationAtTimeout,will send nil location
CoreLocation: #CLELS,%{public}@,canSendLocationAtTimeout,not sending,location too old. Age:%{public}f
void CLEmergencyLocationSelectorInternal::sendCachedLocation(CLEmergencyLocationUsabilityCriteria *)
CoreLocation: #CLELS,%{public}@,sendCachedLocation,location sent to client without altitude stitching
CoreLocation: #CLELS,%{public}@,sendCachedLocation,location sent to client with altitude stitching
CoreLocation: #CLELS,%{public}@,sendCachedLocation,location sent to client with altitude cleared
void CLEmergencyLocationSelectorInternal::sendFirstUpdateLocation()
CoreLocation: #CLELS,%{public}@,sendFirstUpdateLocation,send nil Location
CoreLocation: #CLELS,%{public}@,sendFirstUpdateLocation,FirstUpdateHorizontalLocation,with altitude cleared
CoreLocation: #CLELS,%{public}@,sendFirstUpdateLocation,FirstUpdateHorizontalLocation,with altitude stitching
CoreLocation: #CLELS,%{public}@,sendFirstUpdateLocation,FirstUpdateHorizontalLocation,as-is
void CLEmergencyLocationSelectorInternal::sendLocation(CLLocation *)
CoreLocation: #CLELS,%{public}@,sendLocation,nil location sent to client
CoreLocation: #CLELS,%{public}@,sendLocation,lat,%{private}.7f,lon,%{private}.7f,hunc,%{public}f,alt,%{private}f,ellipsoidalAlt,%{private}f,vunc,%{public}f,timestamp,%{public}@,locationType,%{public}d,integrity,%{public}d
!name.empty()
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Daemon/Positioning/GPS/CLStateMachine.h
CLStateMachine
Gnss
h && "invalid handler"
setStateHandler
void CLStateMachine<CLEmergencyLocationSelectorInternal>::setStateHandler(CLStateMachine::State, CLStateMachine::StateHandler) [T = CLEmergencyLocationSelectorInternal]
CoreLocation: %sstate,%d,%s
handler && "invalid handler"
handleEvent
fIniitalized && "must call initialize(state) first"
CLStateMachine::State CLStateMachine<CLEmergencyLocationSelectorInternal>::handleEvent(CLStateMachine::Event) [T = CLEmergencyLocationSelectorInternal]
CoreLocation: %scurrent_state,%s,event,%s
handlerFn != std::end(state_handlers)
newState == oldState
CoreLocation: %sNested invocation of state machine
CoreLocation: %snewState,%s
CoreLocation: %soldState,%s,event,%s
retState == oldState
CoreLocation: %snewState,%s,event,%s
retState == newState
void CLStateMachine<CLEmergencyLocationSelectorInternal>::setTimeoutEvent(CLStateMachine::Event, double) [T = CLEmergencyLocationSelectorInternal]
CoreLocation: %sInvoking timers without callback queue set
false
setTimeoutEvent
CoreLocation: %sCannot start timer, event, %{public}s, timeOutSec, %{public}.2f
CoreLocation: %scannot create timer, event, %{public}s
CoreLocation: %sevent,%s,timeout,%.2f
void CLStateMachine<CLEmergencyLocationSelectorInternal>::cancelTimeoutEvent(CLStateMachine::Event) [T = CLEmergencyLocationSelectorInternal]
CoreLocation: %scancel timer,event,%s
CoreLocation: #Warning,%s,cancel timer,notFound, event,%s
CLAssertionInternalQueue
Type
EncodedSequence
<%@ latitude: %.7lf, longitude: %.7lf, altitude: %.3lf, odometer: %.3lf, timestamp: %.3lf, signalEnvironment: %d>
CLLogBase
yyyy-MM-dd_HH-mm-ss
/Library/Logs/CrashReporter/com.apple.locationd
mobile
Library
Caches
Logs
CrashReporter
CLRangingPeer.m
(macAddress & 0xFFFF000000000000) == 0
[aDecoder allowsKeyedCoding]
[aCoder allowsKeyedCoding]
Peer:%@ hasKey:%s
(len >= 11) && (len <= 17)
peer
date
distance
Peer: %@ time:%@ distance[m]:%.02f accuracy[m]:%.02f unlock:%s secure:%s initiator:%s
kCLCodingKeyRangingPeerMacAddress
kCLCodingKeyRangingPeerSecureRangingKeyID
kCLCodingKeyRangingPeerDistancePeer
kCLCodingKeyRangingPeerDistanceTimestamp
kCLCodingKeyRangingPeerDistanceDistance
kCLCodingKeyRangingPeerDistanceAccuracy
kCLCodingKeyRangingPeerDistanceInitiator
kCLCodingKeyRangingPeerDistanceUnlock
LocationIndependenceAssertion/kCLConnectionMessage
points2D
points3D
inlierIndices
slamOrigin
descriptorDimension
slamTracks
slamTrackDescriptors
slamTrackObservations
slamTracks2D
slamTrackImageIndices
perFrameVioStatusCodes
perFrameVioPoses
perFrameCalibrationMatrices
perFrameDistortion
resultPoseRotation
resultPoseTranslation
<_CLVLLocalizationMaps488Details: %p> {
%@.inliersCount = %zu,
%@.points2D = <float: %p> {length = %zu},
%@.points3D = <double: %p> {length = %zu},
%@.inlierIndices = <int: %p> {length = %zu},
%@.slamOrigin = <double: %p> {length = 6, values = [%f, %f, %f, %f, %f, %f]},
%@.slamTracksCount = %zu,
%@.slamTracks = <float: %p> {length = %zu},
%@.descriptorDimension = %zu,
%@.slamTrackDescriptors = <unsigned char: %p> {length = %zu},
%@.slamTrackObservations = <short: %p> {length = %zu},
%@.slamTracks2D = <float: %p> {length = %zu},
%@.slamTrackImageIndices = <short: %p> {length = %zu},
%@.frameCount = %zu,
%@.perFrameVioStatusCodes = <int: %p> {length = %zu},
%@.perFrameVioPoses = <float: %p> {length = %zu},
%@.perFrameCalibrationMatrices = <float: %p> {length = %zu},
%@.perFrameDistortion = <float: %p> {length = %zu},
%@.resultPoseRotation = <double: %p> {length = 9, values = [%f, %f, %f;
%@%f, %f, %f;
%@%f, %f, %f]},
%@.resultPoseTranslation = <double: %p> {length = 3, values = [%f, %f, %f]}
<_CLLSLLocationCoordinate: %p> { .latitude = %f, .longitude = %f }
coordinate
<_CLLSLLocation: %p> {
%@.coordinate = %@,
%@.altitude = %f,
%@.timestamp = %f
roadID
polylines
<NSArray: %p> {
%@%@%@
<_CLLSLMapRoadSegment: %p> {
%@.roadID = %llu,
%@.polylines = %@
roadSegment
<_CLLSLHeadingSupplInfo: %p> {
%@.roadSegment = %@
rotationFromGlobalToDeviceFrame
rotationFromGlobalToCameraFrame
rotationalAccuracyInRadians
globalReferenceFrame
supplemantaryInfo
<_CLLSLHeading: %p> {
%@.timestamp = %f,
%@.rotationFromGlobalToDeviceFrame = [%f, %f, %f; %f, %f, %f; %f, %f, %f],
%@.rotationFromGlobalToCameraFrame = [%f, %f, %f; %f, %f, %f; %f, %f, %f],
%@.rotationalAccuracyInRadians = [%f, %f, %f],
%@.confidence = %f,
%@.globalReferenceFrame = %zu,
%@.location = %@,
%@.supplemantryInfo = %@
status
headings
<_CLLSLHeadingEstimation: %p> {
%@.status = %d,
%@.headings = %@
clusterId
meanUwbRange
meanBleRssi
clusterIdentifier: %@, meanUwbRange: %.3f(m), meanBleRssi: %.3f(dbm)
sourceId
sourceData
sourceIdentifier: %@
%@%@
sourcesData
trackingState
originTimestamp
inertialStateInfo
inertialState
inertialCovarianceInfo
inertialCovariance
cameraPose
cameraIntrinsics
cameraImageResolutionKey
{CGSize=dd}
<_CLVIOEstimation: %p> {
%@.trackingState = %d,
%@.originTimestamp = %f,
%@.timestamp = %f,
%@.inertialStateInfo = { .stateLengthInbytes = %lu, .stateLength = %d, ... },
%@.inertialState = <NSData: %p> %@,
%@.inertialCovarianceInfo = { .covarianceSizeInbytes = %lu, .covariance = %d, ... },
%@.inertialCovariance = <NSData: %p> %@,
%@.cameraPose = [%f, %f, %f, %f;
%@%f, %f, %f, %f;
%@%f, %f, %f, %f;
%@%f, %f, %f, %f],
%@.cameraIntrinsics = [%f, %f, %f;
%@%f, %f, %f;
%@%f, %f, %f],
%@.cameraImageResolution = [%f, %f]
Data does not exist
Data is valid
Data exceeded maximum buffer size
<_CLVLLocalizationDebugInfo: %p> {
%@.maps488Details = %@
CLLocationManagerRoutineClientInterface
NSObject
CLLocationManagerRoutineServerInterface
_CLLocationManagerRoutineProxy
CLLocationManagerRoutine
CLEmergencyEnablementAssertion
CLFindMyAccessoryConnectionMaterial
NSCopying
NSSecureCoding
NSCoding
CLLocationManagerStateTracker
CLLocationManagerInternal
CLDiagnosticManagerXPCServerInterface
CLLocationManager
VehicleData
MatchInfo
GroundAltitude
FusionInfo
TrackRunInfo
CLVisitExtensions
_CLPlaceInferenceExtensions
_CLEstimatedLocationExtensions
_CLRoutineExtensions
_CLLocationGroundAltitude
CLLocationSmootherClientInterface
CLLocationSmootherServerInterface
_CLLocationSmootherProxy
CLLocationSmoother
CLFindMyAccessoryAccelerometerSlopeModeConfiguration
CLFindMyAccessoryAccelerometerOrientationModeConfiguration
CLGnssDisablementAssertion
CLLocationMatchInfoInternal
CLLocationMatchInfo
CLFindMyAccessoryRangingManager
CLLocationPushServiceExtensionHostContext
CLLocationPushServiceExtensionHostXPCInterface
CLLocationTrackRunInfo
CLFindMyAccessoryManager
CLRegulatoryConfig
CLClientTypesPrivate
CLReductiveFilterSuite
CLHeadingInternal
CLHeading
CLLocationGnssOdometerInfo
_CLLocationFusionInfo
CLBBTimeFreqTransferCallbackAssertion
_CLVLExtensions
CLInUseAssertion
DeprecatedMethods
CLRegion
CLClientManagerAuthorizationContext
CLFindMyAccessoryAbsoluteWildConfiguration
CLPlatformInfoPrivate
CLCircularRegion
CLBeaconRegion
CLBeaconInternal
CLBeacon
_CLVLLocalizationResult
CLSimulationXPCServerInterface
CLSimulationLocationProtocol
CLSimulationManager
CLBeaconIdentityConstraint
CLLocationPushServiceExtensionRemoteXPCInterface
CLLocationPushServiceExtensionContext
CLVehicleHeadingInternal
CLVehicleHeading
CLVehicleSpeedInternal
CLVehicleSpeed
CLVisit
CLGeocoderExtras
CLGeocoderInternal
CLGeocoder
ContactsAdditions
CLLocationInternalServiceProtocol
CLLocationInternalClient
_CLARExtensions
CLPlacemarkInternal
CLPlacemark
CLReductiveFilterOptions
CLLocationPushServiceExtensionRemoteContext
_CLVertex
_CLPolygonalRegion
CLHarvesterServerInterface
CLHarvester
_CLVIOExtensions
CLFindMyAccessoryFirmwareVersion
CLStateTracker
CLLocationManagerAuthorization
CLFindMyAccessoryFirmwareUpdateManager
CLRacingRoutePerformanceResults
_CLPlaceInference
_CLSignificantRegion
CLPair
CLRouteBoundingBox
CLRacingRouteState
CLRacingRouteVariables
CLRacingRouteParameters
CLFindMyAccessoryWildConfiguration
CLLocationInternal
CLFloor
CLLocationSourceInformation
CLLocation
GnssOdometerInfo
NSValueCoreLocationExtensions
CLEmergencyLocationUsabilityCriteria
CLEmergencyLocationSelectorConfig
CLEmergencyLocationSelector
CLLocationManagerDelegate
CLAssertion
CLFindMyAccessorySoundSequence
CLRoutePoint
CLRacingRouteManager
_CLRangingPeerInternal
_CLRangingPeerDistanceInternal
_CLRangingPeer
_CLRangingPeerDistance
CLEmergencyClientEnablementAssertion
CLLocationIndependenceAssertion
_CLVLLocalizationMaps488Details
_CLLSLLocationCoordinate
_CLLSLLocation
_CLLSLMapRoadSegment
_CLLSLHeadingSupplInfo
_CLLSLHeading
_CLLSLHeadingEstimation
_CLMicroLocationClusterIdAndClusterData
_CLMicroLocationSourceIdAndSourceData
_CLMicroLocationSourcesStatisticsResult
_CLVIOEstimation
CLFindMyAccessoryFragmentAccumulator
_CLVLLocalizationDebugInfo
T@"CLPlacemark",R,N,V_placemark
.cxx_destruct
T@"NSNumber",R,V_secondaryIndex
ISOcountryCode
T@"NSString",R,C,N,V_handoffTag
T#,R
T@"NSUUID",R,N,V__loiIdentifier
T,N,V_rotationalAccuracyInRadians
TB,N,V_altitudeStitchingEnabled
T@"<CLFindMyAccessoryManagerDelegate>",W,N,V_delegate
TB,R,N,GisCoordinateFusedWithVL
T@"<CLLocationManagerDelegate>",N
TB,R,N,V_raceStartPointDetected
T@"<CLLocationManagerDelegate>",W,N,VfDelegate
TQ,R,N,V_provisionalServiceMask
T@"<CLLocationSmootherDelegate>",N,V_delegate
TS,R,V_keyCount
T@"CLBeaconIdentityConstraint",R,C,N
T^s,R,N,V_slamTrackImageIndices
T@"CLEmergencyLocationUsabilityCriteria",&,N,V_locationUpdateUsabilityCriteria
T^v,R,N
T@"CLHeading",R,C,N
Td,N,V_latitude
T@"CLLocation",R,N,V_referenceLocation
Td,R,N,V_distanceAlongReference
T@"CLLocationManager",W,N,VfManager
Td,R,N,V_totalOverlapDistance_m
T@"CLLocationMatchInfo",R,N
__loiIdentifier
T@"CLLocationSourceInformation",R,N
_center
T@"CLRacingRouteState",R,C,N,V_lastOnRouteDataPoint
_config
T@"CLRacingRouteState",R,C,N,V_startPointOnCurrentRoute
_courseAccuracy
T@"CLRacingRouteVariables",R,C,N,V_racingRouteVariables
_distanceMeters
T@"CLRouteBoundingBox",R,C,N,V_routeBoundingBox
_firstLocationUsabilityCriteria
T@"CLSilo",S_setResponseSilo:
_handle
T@"NSArray",C,N,V_headings
_notifyNoResult
T@"NSArray",R,C,N
_radius
T@"NSArray",R,C,N,V_sourceData
_referenceRouteDataPointCounter
T@"NSData",C,N,V_inertialCovariance
_second
T@"NSData",R
_status
T@"NSData",R,N
_timeSinceStart
T@"NSData",R,V_ltk
_userIsOffRoute
T@"NSDate",R,C,N,V_arrivalDate
address
T@"NSDate",R,C,N,V_detectionDate
allKeys
T@"NSDate",R,V_desiredKeyRollDate
allowsBackgroundLocationUpdates
T@"NSMutableDictionary",N,V_uuidToData
appLocationInfo
T@"NSMutableSet",R,N,VfRangedRegions
bundleWithPath:
T@"NSNumber",R,C,N,V_major
containsObject:
T@"NSNumber",R,N,V_trackId
coordinateFused
T@"NSString",C,N
country
T@"NSString",R
dataWithLength:
T@"NSString",R,C,N
dealloc
T@"NSString",R,C,N,V_sourceIdsIdentifier
desiredAccuracy
T@"NSString",R,N,V_preferredName
dumpDiagnosticFilesWithHandler:
T@"NSUUID",C,N,V_UUID
eastLng
T@"NSUUID",R,C,N,V_UUID
fClient
T@"NSXPCConnection",&,N,V_connection
fFidelityPolicy
T@"_CLLSLLocation",C,N,V_location
fMatchDataArray
T@"_CLLSLMapRoadSegment",C,N,V_roadSegment
fMatchRoadClass
T@"_CLLocationGroundAltitude",R,N
fetchFirmwareVersionFromDevice:
T@"_CLLocationSmootherProxy",R,&,N
fetchTxPowerFromDevice:asOwner:
T@"_CLRangingPeer",R,C,N
findMyAccessoryManager:didInitRangingOnDevice:withStatus:error:
T@"_CLVLLocalizationMaps488Details",C,N,V_maps488Details
firstLocationMaxEarlyReturnHunc
TB,N,G_isGroundAltitudeEnabled,S_setGroundAltitudeEnabled:
getFencesForBundleID:withReply:
TB,N,GisLocationServicesPreferencesDialogEnabled
getMicroLocationInternalVersion
TB,N,GisTrackRunInfoEnabled,SsetTrackRunInfoEnabled:
getPrivateMode:
TB,N,V_firstUpdateEnabled
hasValueForKey:
TB,N,V_vuncCheckRequiredForUsability
headingAccuracy
TB,R,N
initRangingOnDevice:macAddress:
TB,R,N,GisAuthorizedForWidgetUpdates
initWithDelegate:delegateQueue:
TB,R,N,GisCoordinateFused,V_coordinateFused
initWithQueue:identifier:state:
TB,R,N,GisGeocoding
isProxy
TB,R,N,V_allowMonitoringWhileNearby
iso6709Notation
TB,R,N,V_isAltitudeWgs84Available
lapInfo
TB,R,N,V_locationPointIsOutsideOfAcceptedRange
locationManager:didEnterRegion:
TB,R,N,V_prematureRaceEndDetected
locationUpdateUsabilityCriteria
TB,R,N,V_raceEndPointDetected
magneticHeading
TB,R,N,V_racingRouteAnalyticsSent
mapItem
TB,R,N,V_rollingBufferReachedEndOfReferenceRoute
maxBytesPerUUID
TB,R,N,V_userIsOffRoute
numberWithBool:
TB,R,N,VisSimulatedBySoftware
performMigrationWithReplyBlock:
TB,V_emergency
purpose
TB,V_notifyOnEntry
rangingSequence
TC,N,V_locationRepeatBehavior
release
TC,N,V_sampleRate
requestLocation
TI,N,V_minUsableIntegrity
rotationFromGlobalToCameraFrame
TI,R,N
selectScenario:
TI,R,V_nextWildIndex
setIncidentalUseMode:forBundle:
TQ,N,V_maxBytesPerUUID
setLocationManagerRoutineProxy:
TQ,R
setPrivateMode:
TQ,R,N,V_beaconType
setRotationalAccuracyInRadians:
TQ,R,N,V_effectiveServiceMask
setSupportInfo:
TQ,R,N,V_inliersCount
slamTracksCount
TQ,R,N,V_slamTracksCount
stringByAppendingPathComponent:
TQ,R,N,V_staticServiceMask
stringFromDate:
TQ,R,V_type
timeZoneForLocation:replyBlock:
TS,R,V_keysRemaining
undulationModel
T^f,R,N,V_perFrameCalibrationMatrices
updatingHeading
T^f,R,N,V_perFrameVioPoses
vanBurenVersion
T^f,R,N,V_slamTracks
T^i,R,N,V_inlierIndices
.cxx_construct
T@"NSArray",R,C,N,V_sourcesData
ISOCountryCode
T@"NSSet",R,C,N
PausesLocationUpdatesAutomatically
T@"NSString",R,C,N,V_identifier
T*,R,N,V_slamTrackDescriptors
T@,N,V_delegate
T@"<CLFindMyAccessoryFirmwareUpdateDelegate>",W,N,V_delegate
TB,N,V_updating
T@"<CLFindMyAccessoryRangingManagerDelegate>",W,N,V_delegate
TB,R,N,GisInitiator,V_initiator
T@"<CLLocationManagerDelegate>",W,N
TC,N,V_locationDeliveryBehavior
T@"<CLLocationManagerDelegateInternal>",N
TQ,R,N,V_totalObservationsCount
T@"<CLSimulationXPCServerInterface>",R
T^d,R,N
T@"CLEmergencyLocationUsabilityCriteria",&,N,V_firstLocationUsabilityCriteria
T^s,R,N,V_slamTrackObservations
T@"CLFloor",R,C,N
Td,N,V_altitude
T@"CLLocation",R,C,N
Td,R,N,V_course
T@"CLLocationGnssOdometerInfo",R,N
Td,R,N,V_endOfRaceTimeThreshold
T@"CLLocationManagerRoutine",N,V_locationManagerRoutine
Ti,R,N,V_second
T@"CLLocationSmoother",N,V_locationManagerSmoother
_accuracyMeters
T@"CLLocationTrackRunInfo",R,N
_cl_ticketForForwardGeocodeAddressDictionary:maxResults:traits:
T@"CLRacingRouteState",R,C,N,V_lastProjectedDataPoint
_course
T@"CLRacingRouteState",R,C,N,V_startPointOnReferenceRoute
_definitionMask
T@"CLRegion",R,C,N
_extensionAuxiliaryHostProtocol
T@"CLSilo",&,V_responseSilo
_groundAltitude
T@"CNPostalAddress",R,N
_maps488Details
T@"NSArray",C,N,V_polylines
_placeInference
T@"NSArray",R,C,N,V_routeMatrixIndexVec
_referenceFrame
T@"NSArray",R,C,N,V_vertices
_roadID
T@"NSData",C,N,V_inertialState
_secondaryIndex
T@"NSData",R,C,N
_ticket
T@"NSData",R,V_address
_trackProximity
T@"NSDate",R,C,N
addRoutePoints:
T@"NSDate",R,C,N,V_departureDate
advanceToPoint:
T@"NSDate",R,N
allowsAlteredAccessoryLocations
T@"NSDictionary",R,C,N
T@"NSMutableSet",R,N,VfRangedConstraints
areasOfInterest
T@"NSNumber",R,C,N
connect
T@"NSNumber",R,C,N,V_minor
containsString:
T@"NSNumber",R,V_primaryIndex
copyRegisteredFilesWithHandler:
T@"NSString",C,N,V_onBehalfOfBundleId
currentCalendar
T@"NSString",R,C
T@"NSString",R,C,N,V_clusterIdentifier
defaultSequence
T@"NSString",R,N
disallowDeferredLocationUpdates
T@"NSTimeZone",R,C,N
dynamicAccuracyReductionEnabled
T@"NSUUID",R,C,N
encodedSequence
T@"NSUUID",R,C,N,V_deviceId
fCoarseMetaData
T@"_CLLSLHeadingSupplInfo",C,N,V_supplemantaryInfo
fGroundAltitude
T@"_CLLSLLocationCoordinate",C,N,V_coordinate
fMatchFormOfWay
T@"_CLLocationFusionInfo",R,N
feature
T@"_CLLocationManagerRoutineProxy",&,N,V_locationManagerRoutineProxy
fetchInfoForLocation:withReply:
T@"_CLPlaceInference",R,N,V__placeInference
filterOutliers:
T@"_CLVLLocalizationDebugInfo",C,N,V_debugInfo
firstLocationEarlyReturnEnabled
TB,N
firstLocationMaxEarlyReturnVunc
TB,N,GisDynamicAccuracyReductionEnabled
getIncidentalUseMode:forBundle:
TB,N,GisMatchInfoEnabled
getOscarTimeSyncWithReplyBlock:
TB,N,V_firstLocationEarlyReturnEnabled
hardwareVersion
TB,N,V_periodicUpdatesEnabled
heading
TB,R
initAccumulator
TB,R,N,GisAuthorizedForPreciseLocation
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:courseAccuracy:speed:speedAccuracy:timestamp:sourceInfo:
TB,R,N,GisCoordinateFused
initWithPeer:timestamp:distanceMeters:accuracyMeters:initiator:
TB,R,N,GisCoordinateFusedWithVL,V_coordinateFusedWithVL
isAuthorizedForServiceTypeMask:
TB,R,N,GisMatchShifted
isValid
TB,R,N,V_authorizedForWidgetUpdates
keyRollInterval
TB,R,N,V_isLowPower
limitsPrecision
TB,R,N,V_locationPointNotMatched
locationManager:didReportVisit:
TB,R,N,V_projectedOnNearestPoint
TB,R,N,V_raceSessionExpired
manager
TB,R,N,V_referenceRouteTotalLengthDetermined
matchCoordinate
TB,R,N,V_routeConfigurationSuccessful
maximumRegionMonitoringDistance
TB,R,N,VisProducedByAccessory
originTimestamp
TB,V_conservativeEntry
prepareForStartRangingOnDevice:
TB,V_notifyEntryStateOnDisplay
rangeForReductiveFilterOptions:
TB,V_notifyOnExit
registerCircularInterestZoneWithId:latitude:longitude:radius:serviceMaskOperator:provenanceType:forBundleId:orBundlePath:error:
TC,N,V_sampleCount
removeObserver:
TC,R
resetSlamTracks
TI,N,V_threshold
rotationFromGlobalToDeviceFrame
TI,R,V_keyRollInterval
setDay:
TQ,N,V_globalReferenceFrame
setLocationDefaultForKey:value:
TQ,N,V_roadID
setPreviousAuthorizationStatus:
TQ,R,N
setRoadSegment:
TQ,R,N,V_descriptorDimension
setSampleCount:
TQ,R,N,V_frameCount
setWithObjects:
TQ,R,N,V_placeType
startUpdatingLocationWithPrompt
TQ,R,N,V_state
stringByAppendingPathExtension:
TQ,R,N,V_userType
subThoroughfare
TS,N,V_sleepDuration_ms
trackId
T^d,R,N,V_points3D
unmatch
T^f,R,N,V_perFrameDistortion
updatingRanging
T^f,R,N,V_points2D
westLng
T^f,R,N,V_slamTracks2D
T^i,R,N,V_perFrameVioStatusCodes
T^{__CLClient=},R,N
Td,N
Td,N,V_applyRangeEstimation
Td,N,V_biasRateInMeasurement
Td,N,V_confidence
Td,N,V_firstLocationMaxEarlyReturnHunc
Td,N,V_firstLocationMaxEarlyReturnVunc
Td,N,V_firstLocationTimeout
Td,N,V_firstUpdateTimeout
Td,N,V_locationDistance
Td,N,V_locationInterval
Td,N,V_locationSpeed
Td,N,V_locationUpdateChangeInAltitudeToSendEarly
Td,N,V_locationUpdateDistanceMovedToSendEarly
Td,N,V_locationUpdateHuncReductionToSendEarly
Td,N,V_locationUpdateMinDelay
Td,N,V_locationUpdateTimeout
Td,N,V_locationUpdateVuncReductionToSendEarly
Td,N,V_longitude
Td,N,V_maxUsableAge
Td,N,V_maxUsableHunc
Td,N,V_maxUsableVunc
Td,N,V_originTimestamp
Td,N,V_timestamp
Td,R
Td,R,N
Td,R,N,V_altitude
Td,R,N,V_altitudeWgs84
Td,R,N,V_altitude_m
Td,R,N,V_averagePace
Td,R,N,V_confidence
Td,R,N,V_courseAccuracy
Td,R,N,V_currentAveragePace_s_per_m
Td,R,N,V_currentDistance_m
Td,R,N,V_deltaDistance
Td,R,N,V_deltaDistanceAccuracy
Td,R,N,V_desiredAccuracy
Td,R,N,V_distanceSinceStart
Td,R,N,V_estimate
Td,R,N,V_geoRadius
Td,R,N,V_horizontalAccuracy
Td,R,N,V_latitude
Td,R,N,V_latitude_deg
Td,R,N,V_longitude
Td,R,N,V_longitude_deg
Td,R,N,V_maxLatitude
Td,R,N,V_maxLongitude
Td,R,N,V_meanBLEReceivedSignalStrength
Td,R,N,V_meanUWBRange
Td,R,N,V_minLatitude
Td,R,N,V_minLongitude
Td,R,N,V_nearestNeighborMaximumAcceptedDistance
Td,R,N,V_odometer
Td,R,N,V_odometer_m
Td,R,N,V_offRouteDistance
Td,R,N,V_offRouteTime
Td,R,N,V_referenceDistance_m
Td,R,N,V_referenceRouteTotalLength
Td,R,N,V_registeredTimeAtThresholdDistance
Td,R,N,V_timeAhead_s
Td,R,N,V_timeSinceStart
Td,R,N,V_timestamp
Td,R,N,V_timestampOfLastMatchedPointOnReferenceRoute
Td,R,N,V_timestamp_s
Td,R,N,V_transmitPower
Td,R,N,V_uncertainty
Td,R,N,V_uncertaintyWgs84
Td,R,N,V_undulation
Td,R,N,V_verticalAccuracy
Td,R,V_radius
Tf,N,V_confidence
Tf,N,V_threshold
Tf,R
Ti,N
Ti,N,V_geoReferenceFrame
Ti,N,V_status
Ti,N,V_trackingState
Ti,R,N
Ti,R,N,V_currentRouteDataPointCounter
Ti,R,N,V_definitionMask
Ti,R,N,V_estimatedLaneConfidence
Ti,R,N,V_first
Ti,R,N,V_inUseLevel
Ti,R,N,V_inutileDataPointCounter
Ti,R,N,V_lastMatchedPointIndex
Ti,R,N,V_lastMatchedPointIndexOnReferenceRoute
Ti,R,N,V_matchedPointCounter
Ti,R,N,V_matrixCellIndexForLastMatchedPoint
Ti,R,N,V_nColumns
Ti,R,N,V_nRows
Ti,R,N,V_numberOfRoutePointsToAdd
Ti,R,N,V_offRouteDataPointCounter
Ti,R,N,V_offRouteGraceDuration
Ti,R,N,V_referenceFrame
Ti,R,N,V_referenceRouteDataPointCounter
Ti,R,N,V_registrationResult
Ti,R,N,V_rollingBufferStartIndexOnReferenceRoute
Ti,R,N,V_rollingBufferUpdateCounter
Ti,R,N,V_routePointsBufferSize
Ti,R,N,V_signalEnvironmentType
Ti,R,N,V_trackProximity
Ti,R,N,V_transientAwareRegistrationResult
Ti,R,N,V_undulationModel
Ti,V_geoReferenceFrame
Ti,V_referenceFrame
Ti,V_type
Tq,N
Tq,N,V_feature
Tq,R,N
Tq,R,N,V_estimatedLaneNumber
Tq,R,N,V_laneCount
Tq,R,N,V_laneNumber
Tq,R,N,Vlevel
T{?=QCCCCCCCCCCC},N,V_inertialCovarianceInfo
T{?=QCCCCCCCCCCC},N,V_inertialStateInfo
T{?=[3]},N,V_cameraIntrinsics
T{?=[3]},N,V_rotationFromGlobalToCameraFrame
T{?=[3]},N,V_rotationFromGlobalToDeviceFrame
T{?=[4]},N,V_cameraPose
T{?=[4]},N,V_transform
T{?=[6[6f]]},N,V_covariance
T{?=dd},R,N,V_coordinate
T{?=d},N,V_location
T{?=iddddd{?=dd}dd},R,N,V_lapInfo
T{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB},R,N
T{CGSize=dd},N,V_cameraImageResolution
T{CLLocationCoordinate2D=dd},R
T{CLLocationCoordinate2D=dd},R,N
T{CLLocationCoordinate2D=dd},R,N,V_coordinate
T{CLLocationCoordinate2D=dd},R,N,V_geoCenter
T{CLLocationCoordinate2D=dd},R,V_center
UTF8String
UUID
UUIDString
_UUID
__placeInference
_accumulator
_address
_allowMonitoringWhileNearby
_altitude
_altitudeStitchingEnabled
_altitudeWgs84
_altitude_m
_applyArchivedAuthorizationDecisions:
_applyRangeEstimation
_archivedAuthorizationDecisionsWithError:
_arrivalDate
_authorizationStatus
_authorizationStatusForBundleIdentifier:bundlePath:
_authorizedForWidgetUpdates
_averagePace
_beaconType
_biasRateInMeasurement
_cLMapItemSource
_cLMapItemSourceFromRLMapItemSource:
_cameraImageResolution
_cameraIntrinsics
_cameraPose
_checkAndExerciseAuthorizationForBundle:error:
_checkAndExerciseAuthorizationForBundleID:error:
_cl_ticketForForwardGeocodeString:maxResults:traits:
_cl_ticketForReverseGeocodeLocation:traits:
_clusterIdentifier
_confidence
_connection
_conservativeEntry
_coordinate
_coordinateFused
_coordinateFusedWithVL
_covariance
_currentAveragePace_s_per_m
_currentDistance_m
_currentRouteDataPointCounter
_date
_debugInfo
_delegate
_delegateQueue
_deltaDistance
_deltaDistanceAccuracy
_departureDate
_descriptorDimension
_desiredAccuracy
_desiredKeyRollDate
_detectionDate
_deviceId
_distanceAlongReference
_distanceSinceStart
_effectiveServiceMask
_emergency
_encodedSequence
_endOfRaceTimeThreshold
_ensureMainThreadExecutionContextForBlock:
_estimate
_estimatedLaneConfidence
_estimatedLaneNumber
_extensionAuxiliaryVendorProtocol
_feature
_fetchContinuousPlaceInferencesWithFidelityPolicy:handler:
_fetchEstimatedLocationAtDate:handler:
_fetchPlaceInferencesWithFidelityPolicy:handler:
_first
_firstLocationEarlyReturnEnabled
_firstLocationMaxEarlyReturnHunc
_firstLocationMaxEarlyReturnVunc
_firstLocationTimeout
_firstUpdateEnabled
_firstUpdateTimeout
_frameCount
_fusionInfo
_geoCenter
_geoMapItem
_geoMapItemHandle
_geoRadius
_geoReferenceFrame
_geocodeCompletionHandler
_getClientTransientAuthorizationInfoForBundleId:error:
_getClientTransientAuthorizationInfoForBundlePath:error:
_globalReferenceFrame
_groundAltitudeAtLocation:
_groundAltitudeEnabled
_handoffTag
_headings
_horizontalAccuracy
_identifier
_inTransaction
_inUseLevel
_inertialCovariance
_inertialCovarianceInfo
_inertialState
_inertialStateInfo
_initWithCLClientLocation:
_initWithCircularRegion:
_initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:courseAccuracy:speed:speedAccuracy:timestamp:floor:sourceParams:
_initWithDelegate:onQueue:
_initWithGeoMapItem:
_initWithRTLocation:
_initWithRTMapItem:location:
_initWithRTPlaceInference:
_initWithUUID:major:minor:
_initiator
_inlierIndices
_inliersCount
_internal
_inutileDataPointCounter
_isAltitudeWgs84Available
_isFusionInfoEnabled
_isGroundAltitudeEnabled
_isLowPower
_keyCount
_keyRollInterval
_keysRemaining
_laneCount
_laneNumber
_lapInfo
_lastMatchedPointIndex
_lastMatchedPointIndexOnReferenceRoute
_lastOnRouteDataPoint
_lastProjectedDataPoint
_latitude
_latitude_deg
_limitsPrecision
_location
_locationDeliveryBehavior
_locationDistance
_locationInterval
_locationManagerRoutine
_locationManagerRoutineProxy
_locationManagerSmoother
_locationManagerSmootherProxy
_locationPointIsOutsideOfAcceptedRange
_locationPointNotMatched
_locationRepeatBehavior
_locationSpeed
_locationUpdateChangeInAltitudeToSendEarly
_locationUpdateDistanceMovedToSendEarly
_locationUpdateHuncReductionToSendEarly
_locationUpdateMinDelay
_locationUpdateTimeout
_locationUpdateUsabilityCriteria
_locationUpdateVuncReductionToSendEarly
_loiIdentifier
_longitude
_longitude_deg
_ltk
_macAddress
_major
_matchedPointCounter
_matrixCellIndexForLastMatchedPoint
_maxBytesPerUUID
_maxLatitude
_maxLongitude
_maxUsableAge
_maxUsableHunc
_maxUsableVunc
_meanBLEReceivedSignalStrength
_meanUWBRange
_measuredPowerForDevice
_minLatitude
_minLongitude
_minUsableIntegrity
_minor
_nColumns
_nRows
_nearestNeighborMaximumAcceptedDistance
_nextWildIndex
_notifyCancel
_notifyEntryStateOnDisplay
_notifyError:
_notifyOnEntry
_notifyOnExit
_notifyPartialResult:
_notifyResult:
_notifyResult:error:
_numberOfRoutePointsToAdd
_odometer
_odometer_m
_offRouteDataPointCounter
_offRouteDistance
_offRouteGraceDuration
_offRouteTime
_onBehalfOfBundleId
_originTimestamp
_peer
_perFrameCalibrationMatrices
_perFrameDistortion
_perFrameVioPoses
_perFrameVioStatusCodes
_periodicUpdatesEnabled
_placeInferencePlaceTypeFromRTPlaceType:
_placeType
_placemark
_points2D
_points3D
_polylines
_preferredName
_prematureRaceEndDetected
_primaryIndex
_principalObject
_projectedOnNearestPoint
_provisionalServiceMask
_queue
_raceEndPointDetected
_raceSessionExpired
_raceStartPointDetected
_racingRouteAnalyticsSent
_racingRouteVariables
_referenceDistance_m
_referenceLocation
_referenceRouteTotalLength
_referenceRouteTotalLengthDetermined
_registeredTimeAtThresholdDistance
_registrationResult
_requestTemporaryFullAccuracyWithUsageDescription:
_requestTemporaryFullAccuracyWithUsageDescription:completion:
_requestVisitState
_responseSilo
_resultPoseRotation
_resultPoseTranslation
_roadSegment
_rollingBufferReachedEndOfReferenceRoute
_rollingBufferStartIndexOnReferenceRoute
_rollingBufferUpdateCounter
_rotationFromGlobalToCameraFrame
_rotationFromGlobalToDeviceFrame
_rotationalAccuracyInRadians
_routeBoundingBox
_routeConfigurationSuccessful
_routeMatrixIndexVec
_routePointsBufferSize
_sampleCount
_sampleRate
_secureRangingKeyID
_setClientTransientAuthorizationInfoForBundleId:data:
_setClientTransientAuthorizationInfoForBundlePath:data:
_setFusionInfoEnabled:
_setGroundAltitudeEnabled:
_setResponseSilo:
_shouldUnlock
_signalEnvironmentType
_slamOrigin
_slamTrackDescriptors
_slamTrackImageIndices
_slamTrackObservations
_slamTracks
_slamTracks2D
_slamTracksCount
_sleepDuration_ms
_sourceData
_sourceIdsIdentifier
_sourcesData
_startLeechingVisits
_startMonitoringSignificantLocationChangesOfDistance:withPowerBudget:
_startPlaceInferencesCommonLogic:handler:
_startPointOnCurrentRoute
_startPointOnReferenceRoute
_state
_staticServiceMask
_stopFetchingContinuousPlaceInferences
_supplemantaryInfo
_threshold
_ticket:didReturnError:
_ticket:didReturnError:partialResultForLocation:
_ticket:didReturnGeoMapItems:
_timeAhead_s
_timeZoneAtLocation:
_timestamp
_timestampOfLastMatchedPointOnReferenceRoute
_timestamp_s
_totalObservationsCount
_totalOverlapDistance_m
_trackId
_trackingState
_transform
_transientAwareRegistrationResult
_transmitPower
_type
_uncertainty
_uncertaintyWgs84
_undulation
_undulationModel
_updateARSessionState:
_updateVIOEstimation:
_updateVLLocalizationResult:
_updating
_userSpecificPlaceTypeFromRTUserType:
_userType
_uuidToData
_version
_verticalAccuracy
_vertices
_vuncCheckRequiredForUsability
_zAxisStatistics
abortFirmwareUpdateForDevice:
accuracy
accuracyAuthorization
accuracyMeters
activeLocationClientsWithInfo
activeLocationServiceTypesForLocationDictionary:
activityType
addConfigForIsoList:config:error:
addConfigForRegionList:config:error:
addDeviceDisplayLanguage:
addEntriesFromDictionary:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
addSoundBlockWithAsset:loopCount:duration:
addressDictionary
administrativeArea
advertiseAsBeacon:withPower:
allObjects
allocWithZone:
allowDeferredLocationUpdatesUntilTraveled:timeout:
allowMonitoringWhileNearby
allowableAuthorizationForLocationDictionary:
allowsKeyedCoding
allowsLocationPrompts
allowsMapCorrection
altitude
altitudeStitchingEnabled
altitudeWgs84
altitude_m
appendBytes:length:
appendData:
appendData:forUUID:
appendSimulatedLocation:
appendSimulatedLocations:
appendString:
applicationState
applyArchivedAuthorizationDecisions:
applyArchivedAuthorizationDecisions:withConfirmationToken:replyBlock:
applyFilterToLocationObservations:options:
applyFilterToLocationTrace:options:
applyRangeEstimation
appsUsingLocation
appsUsingLocationWithDetails
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:
arrayWithObjects:count:
arrivalDate
assertInside
async:
authorizationContextByANDingServiceMaskTuple:
authorizationPromptMapDisplayEnabled
authorizationStatus
authorizationStatusForBundle:
authorizationStatusForBundleIdentifier:
authorizationStatusForBundlePath:
authorizedForPreciseLocation
authorizedForWidgetUpdates
autorelease
availableScenarios
averagePace
backgroundIndicatorEnabledForLocationDictionary:
batchingLocation
beaconIdentityConstraint
beaconType
biasRateInMeasurement
boolForKey:defaultValue:
boolValue
bundleIdentifier
bundlePath
bundleSupported:
bytes
calibrationDataVersion
callPlaceInferenceHandlerWithResult:error:
cameraImageResolution
cameraIntrinsics
cameraPose
cancel
cancelGeocode
cancelLingeringRangingRequest
cancelLocationRequest
cancelRangingRequest
canonicalLanguageIdentifierFromString:
center
charValue
checkAndExerciseAuthorizationForBundleID:orBundlePath:services:error:
checkAndExerciseAuthorizationForBundleID:orBundlePath:services:replyBlock:
checkAvailabilityForPairedOwnerInformationControlPointMessages:messageName:
city
class
clearDeviceDisplayLanguages
clearForUUID:
clearLocationAuthorizationForBundleId:orBundlePath:
clearLocationAuthorizations
clearSimulatedCells
clearSimulatedLocations
clientLocation
clrr
clusterIdentifier
coarseMetaData
code
compare:
completeRequestReturningItems:completionHandler:
components:fromDate:
components:fromDate:toDate:options:
componentsJoinedByString:
confidence
configureRangingOnDevice:macAddress:countryCode:uwbChannel:acqPreamble:trackingPreamble:interval:
configureWithWorkoutActivityType:bufferSize:offRouteGraceDurationInSec:
conformsToProtocol:
connectDevice:
connectToDevice:
connection
conservativeEntry
containsCoordinate:
containsCoordinate:withDistanceToBorder:
containsValueForKey:
contentsOfDirectoryAtPath:error:
convertDataStatusToString:
coordinate
coordinateFusedWithVL
copy
copyActiveClientsUsingLocation
copyActivityAlarms
copyAppsUsingLocation
copyGnssBandsInUse
copyLastLog
copyLastLogWithReplyBlock:
copyMicroLocationInternalVersion
copyMonitoredRegionsForBundleIdentifier:orBundlePath:
copyTechnologiesInUse
copyWithZone:
copyZaxisStats
correctiveCompensationStatusForLocationDictionary:
count
countByEnumeratingWithState:objects:count:
countryCode
course
courseAccuracy
courtesyPromptNeeded
covariance
createConnection
currentAveragePace_s_per_m
currentDirectoryPath
currentDistance_m
currentHandler
currentRouteDataPointCounter
currentStateDictionary
daemonProxy
data
dataForUUID:
dataWithBytes:length:
dataWithCapacity:
dataWithContentsOfURL:
dataWithContentsOfURL:options:error:
dataWithData:
dataWithPropertyList:format:options:error:
date
dateFromComponents:
dateLocationLastUsedForLocationDictionary:
dateWithTimeIntervalSinceReferenceDate:
debugDescription
debugInfo
decodeBoolForKey:
decodeBytesForKey:returnedLength:
decodeDoubleForKey:
decodeFloatForKey:
decodeInt32ForKey:
decodeInt64ForKey:
decodeIntForKey:
decodeIntegerForKey:
decodeObject
decodeObjectForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
decodeValueOfObjCType:at:
defaultCLClientLocationPrivate
defaultCenter
defaultManager
defaultTraits
deferredLocationUpdatesAvailable
definitionMask
deinitRangingOnDevice:
delegate
deleteInterestZoneWithId:registeredForBundle:error:
deleteInterestZoneWithId:registeredForBundleId:orBundlePath:error:
deleteInterestZoneWithId:registeredForBundleId:orBundlePath:replyBlock:
deleteInterestZoneWithId:registeredForBundleIdentifier:error:
deltaDistance
deltaDistanceAccuracy
departureDate
deriveLocationFromLocations:
deriveLocationFromLocations:options:
description
descriptionWithMemberIndent:endIndent:
descriptorDimension
desiredKeyRollDate
detectionDate
deviceId
dictionary
dictionaryDescription
dictionaryWithDictionary:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
didReceiveLocationPushPayload:completion:
didReceiveLocationPushPayload:reply:
didSmoothLocations:ofType:
didUpdateLocations:
didUpdateLocations:withReply:
disconnectDevice:
disconnectFromDevice:
dismissCalibrationAlert
dismissHeadingCalibrationDisplay
displayStatistics
displayStatisticsWithReplyBlock:
disputedTerritoryName
distanceAlongReference
distanceFilter
distanceFromLocation:
distanceMeters
distanceSinceStart
distantFuture
distantPast
doesNotRecognizeSelector:
domain
donateMicroLocationTruthTagWithTagUUID:correspondingToTriggerUUID:handler:
donateMicroLocationTruthTagWithTagUUID:forRecordingEventsBetweenDate:andDate:handler:
doubleValue
dumpLogDataOfType:fromDevice:
dumpLogs:
dumpLogsWithDescription:replyBlock:
dumpLogsWithMessage:
dumpState:withSize:hints:
earlierDate:
effectiveServiceMask
ellipsoidalAltitude
emergency
encodeBool:forKey:
encodeBytes:length:forKey:
encodeConfiguration
encodeDouble:forKey:
encodeFloat:forKey:
encodeInt32:forKey:
encodeInt64:forKey:
encodeInt:forKey:
encodeInteger:forKey:
encodeObject:
encodeObject:forKey:
encodeValueOfObjCType:at:
encodeWithCoder:
endOfRaceTimeThreshold
endTranscriptSession
endTranscriptSessionWithCompletion:
entityAuthorizationForLocationDictionary:
entityClassesForLocationDictionary:
enumerateObjectsUsingBlock:
errorFromFragmentationStatus:
errorWithDomain:code:userInfo:
estimate
estimatedLaneConfidence
estimatedLaneNumber
expectedGpsUpdateInterval
exportMicroLocationDatabaseTablesWithCompletion:
exportedInterface
fDelegate
fFusionInfo
fGnssOdometerInfo
fHeading
fHeadingOrientation
fInternal
fLastRangingRequestMachTime
fLastRangingRequestTimeout
fLocation
fLocationEventType
fLocationRequestTimeout
fLocationRequestTimer
fManager
fMatchCoordinate
fMatchCourse
fMatchInfo
fMatchQuality
fMatchShifted
fPlaceInferenceHandler
fPlaceInferenceTimer
fPositionContextState
fProbabilityPositionContextStateIndoor
fProbabilityPositionContextStateOutdoor
fRangedConstraints
fRangedRegions
fRangingRequestTimer
fRawAltitude
fRawCourseAccuracy
fRawHorizontalAccuracy
fRawVerticalAccuracy
fSilo
fSpeed
fState
fTrackRunInfo
fTrustedTimestamp
featureString:
fetchAISForTAUnknownBeacon:macAddress:deviceType:
fetchAccelerometerOrientationModeConfigurationForDevice:
fetchAccelerometerSlopeModeConfigurationForDevice:
fetchBatteryStatusForDevice:
fetchConfigForLocation:withReply:
fetchConnectionStateForDevice:
fetchFormattedAddress:queue:
fetchHawkeyeAISAccessoryCapabilities:
fetchHawkeyeAISAccessoryCategory:
fetchHawkeyeAISBatteryType:
fetchHawkeyeAISFindMyVersion:
fetchHawkeyeAISManufacturerName:
fetchHawkeyeAISModelColorCode:
fetchHawkeyeAISModelName:
fetchHawkeyeAISProductData:
fetchHawkeyeCurrentPrimaryKey:
fetchHawkeyeSerialNumber:
fetchHawkeyeiCloudIdentifier:
fetchPossibleTerritoriesForLocation:responseQueue:responseBlock:
fetchStateWithReply:
fetchStatusOfUTEnablementRequirements
fetchTranscriptLocationsWithRadius:sampleCount:center:completionHandler:
fetchTxPower:
fetchUserStatsWithPersistence:fromDevice:
fetchWhetherLocalFirmwareAssetIsInUseForProductGroup:andProductNumber:
fileExistsAtPath:
fileURLWithPath:
fileURLWithPath:isDirectory:
filterOutliers:options:
findMyAccessoryFirmwareUpdateManager:didFailWithError:forDevice:
findMyAccessoryFirmwareUpdateManager:didFetchWhetherLocalFirmwareAssetIsInUseForProductGroup:andProductNumber:withResult:
findMyAccessoryFirmwareUpdateManager:firmwareUpdateRequestForDevice:completedWithError:
findMyAccessoryFirmwareUpdateManager:personalizationRequestForDevice:completedWithInfo:andError:
findMyAccessoryFirmwareUpdateManager:useDefaultAssetRequestForProductGroup:andProductNumber:completedWithError:
findMyAccessoryFirmwareUpdateManager:useLocalAssetRequestForProductGroup:andProductNumber:completedWithError:
findMyAccessoryManager:didCompleteAggressiveAdvertisingOnDevice:withError:
findMyAccessoryManager:didCompleteHawkeyeTaskWithOpcode:fromDevice:withError:
findMyAccessoryManager:didCompletePlayingSoundOnDevice:withError:
findMyAccessoryManager:didCompletePlayingUnauthorizedSoundOnDevice:withError:
findMyAccessoryManager:didCompleteRangingOnDevice:withStatus:endReason:error:
findMyAccessoryManager:didConfigureRangingOnDevice:withStatus:error:
findMyAccessoryManager:didConnectDevice:
findMyAccessoryManager:didConnectDevice:error:
findMyAccessoryManager:didDeinitRangingOnDevice:withStatus:error:
findMyAccessoryManager:didDetectCrashOnDevice:
findMyAccessoryManager:didDisconnectDevice:
findMyAccessoryManager:didDumpLogData:ofType:fromDevice:withError:
findMyAccessoryManager:didFailWithError:forDevice:
findMyAccessoryManager:didFetchAccelerometerMode:forDevice:withError:
findMyAccessoryManager:didFetchAccelerometerSlopeModeConfiguration:forDevice:withError:
findMyAccessoryManager:didFetchBatteryStatus:forDevice:
findMyAccessoryManager:didFetchBatteryStatus:forDevice:withError:
findMyAccessoryManager:didFetchConnectionState:forDevice:
findMyAccessoryManager:didFetchFirmwareVersion:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeAISAccessoryCapabilities:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeAISAccessoryCategory:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeAISBatteryType:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeAISFindMyVersion:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeAISManufacturerName:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeAISModelColorCode:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeAISModelName:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeAISProductData:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeCurrentPrimaryKey:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeSerialNumber:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeiCloudIdentifier:fromDevice:withError:
findMyAccessoryManager:didFetchStatusOfUTEnablementRequirementsWithStatus:withError:
findMyAccessoryManager:didFetchTxPower:fromDevice:withError:
findMyAccessoryManager:didFetchUserStats:fromDevice:withError:
findMyAccessoryManager:didGetMultiStatus:fromDevice:withError:
findMyAccessoryManager:didHaveRangingMovementOnDevice:
findMyAccessoryManager:didObserveAdvertisementWithDate:address:advertisementData:status:rssi:reserved:uuid:ownershipType:channel:
findMyAccessoryManager:didPlayUnauthorizedSoundOnDevice:withError:
findMyAccessoryManager:didPrepareRangingOnDevice:error:
findMyAccessoryManager:didReceiveGroupRelationStatus:maintenanceStatus:fromDevice:withError:
findMyAccessoryManager:didReceiveKeyRollIndex:fromDevice:withError:
findMyAccessoryManager:didReceiveRangingErrorFromDevice:withStatus:
findMyAccessoryManager:didReceiveRangingTimestampFromDevice:status:rtt:tat:cycleIndex:
findMyAccessoryManager:didRollWildKeyOnDevice:withError:
findMyAccessoryManager:didSetAccelerometerOrientationModeConfigurationForDevice:withError:
findMyAccessoryManager:didSetAccelerometerSlopeModeConfigurationForDevice:withError:
findMyAccessoryManager:didSetDeviceTypeOnDevice:withError:
findMyAccessoryManager:didSetHawkeyeUTMotionConfigForDevice:withError:
findMyAccessoryManager:didSetNearOwnerTimeoutOnDevice:withError:
findMyAccessoryManager:didSetObfuscatedIdentifierOnDevice:withError:
findMyAccessoryManager:didSetUnauthorizedPlaySoundRateLimitFromDevice:withError:
findMyAccessoryManager:didSetWildConfigurationOnDevice:withError:
findMyAccessoryManager:didStartAggressiveAdvertisingOnDevice:withError:
findMyAccessoryManager:didStartPlayingSoundOnDevice:withError:
findMyAccessoryManager:didStartPlayingUnauthorizedSoundOnDevice:withError:
findMyAccessoryManager:didStartRangingOnDevice:error:
findMyAccessoryManager:didStartUnauthorizedAggressiveAdvertisingOnDevice:withError:
findMyAccessoryManager:didStopAggressiveAdvertisingOnDevice:withError:
findMyAccessoryManager:didStopPlayingSoundOnDevice:withError:
findMyAccessoryManager:didStopPlayingUnauthorizedSoundOnDevice:withError:
findMyAccessoryManager:didUnpairFromDevice:withError:
findMyAccessoryRangingManager:didFailWithError:forDevice:
finishDecoding
fireInterval
first
firstLocationTimeout
firstLocationUsabilityCriteria
firstObject
firstUpdateEnabled
firstUpdateTimeout
floatValue
floor
flush
forceSurfaceStagedDetections:deviceType:
formattedAddressLines
frameCount
fullThoroughfare
fusionInfoEnabled
geoAddress
geoCenter
geoFenceMapRegion
geoMapItemHandle
geoMapItemStorage
geoRadius
geoReferenceFrame
geocodeAddressDictionary:completionHandler:
geocodeAddressDictionary:preferredLocale:completionHandler:
geocodeAddressString:completionHandler:
geocodeAddressString:inRegion:completionHandler:
geocodeAddressString:inRegion:preferredLocale:completionHandler:
geocodePostalAddress:completionHandler:
geocodePostalAddress:preferredLocale:completionHandler:
geocoding
getAccessoryMotionSensorLogs
getAccessoryPASCDTransmissionState
getAccessoryPASCDTransmissionStateWithReplyBlock:
getAccessoryTypeBitSet
getAccessoryTypeBitSetWithReplyBlock:
getActiveClientsUsingLocationWithReplyBlock:
getActivitiesWithReplyBlock:
getAppsUsingLocationWithReplyBlock:
getArchivedAuthorizationDecisionsWithError:
getArchivedAuthorizationDecisionsWithReplyBlock:
getAuthorizationPromptMapDisplayEnabled:
getAuthorizationPromptMapDisplayEnabledWithReplyBlock:
getAuthorizationStatus:forBundleID:orBundlePath:
getAuthorizationStatusForApp:withAuditToken:
getAuthorizationStatusForAppWithAuditToken:replyBlock:
getAuthorizationStatusForBundleID:orBundlePath:replyBlock:
getBytes:length:
getCharacters:range:
getDataStatusForUUID:
getDistanceFrom:
getFencesForBundleID:withHandler:
getGestureServiceEnabled:
getGestureServiceEnabledWithReplyBlock:
getGnssBandsInUseWithReplyBlock:
getGroundAltitudeForBundleID:orBundlePath:location:groundAltitude:
getGroundAltitudeForBundleID:orBundlePath:location:replyBlock:
getGyroCalibrationDatabaseBiasFit:atTemperature:
getGyroCalibrationDatabaseBiasFitAtTemperature:withReply:
getIncidentalUseMode:forBundleID:orBundlePath:
getIncidentalUseMode:forBundleIdentifier:
getIncidentalUseModeForBundleID:orBundlePath:replyBlock:
getLocationDefaultForKey:
getLocationDefaultForKey:replyBlock:
getLocationForBundleID:orBundlePath:dynamicAccuracyReductionEnabled:allowsAlteredAccessoryLocations:location:
getLocationForBundleID:orBundlePath:dynamicAccuracyReductionEnabled:allowsAlteredAccessoryLocations:replyBlock:
getLocationServicesEnabled:
getLocationServicesEnabledWithReplyBlock:
getMacAddressAsString
getMicroLocationInternalVersionWithReplyBlock:
getMonitoredRegionsForBundleID:orBundlePath:replyBlock:
getMotionSensorLogs
getMultiPartStatusFromDevice:
getMultiStatusFromDevice:
getOdometryBatchedLocations
getOdometryBatchedLocationsWithReplyBlock:
getPersonalizationInfoForDevice:
getPipelinedCache
getPipelinedCacheWithReply:
getPrecisionPermission:forBundleID:orBundlePath:
getPrecisionPermissionForBundleID:orBundlePath:replyBlock:
getPrivateMode
getRaceParameters
getRecordingTriggerUUIDAndRequestMicroLocationRecordingScanWithAdditionalInformation:shouldForceRecording:handler:
getStatusBarIconEnabled:forEntityClass:
getStatusBarIconEnabledForEntityClass:replyBlock:
getStatusBarIconState
getStatusBarIconState:
getTechnologiesInUseWithReplyBlock:
getTemporaryAuthorizationStatusForBundleId:orBundlePath:error:
getTemporaryAuthorizationStatusForBundleId:orBundlePath:replyBlock:
getUUIDBytes:
getValue:
getZaxisStatsWithReplyBlock:
globalReferenceFrame
gnssOdometerInfo
grantTemporaryAuthorizationUsingLocationButtonToClientWithAuditToken:voiceInteractionEnabled:
groundAltitudeEnabled
gyroCalibrationDatabaseSupportsMiniCalibration:
gyroCalibrationDatabaseSupportsMiniCalibrationWithReplyBlock:
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
handleInterruption
handleMessage:
handoffTag
hasArrivalDate
hasDepartureDate
hasEastLng
hasLingeringRangingRequest
hasNorthLat
hasSouthLat
hasUsedBackgroundLocationServices:
hasWestLng
hash
headingAvailable
headingFilter
headingOrientation
headings
hexStringMacAddressFromUInt:
horizontalAccuracy
horizontalUncertainty
hydrateGeoMapItemLocallyFromHandle:completionHandler:
identifier
inUseLevel
inUseLevelIsAtLeast:
incidentalUseModeForLocationDictionary:
indexOfObject:
induceCrashOnDevice:
inertialCovariance
inertialCovarianceInfo
inertialState
inertialStateInfo
init
initCircularRegionWithCenter:radius:identifier:
initForFeature:withUpdatesEnabled:
initForLowPowerWithCenter:radius:identifier:
initForReadingFromData:error:
initInSilo:withIdentifier:
initInSilo:withIdentifier:state:
initLegacyObjectWithCoder:
initNearbyAllowedWithCenter:radius:identifier:
initNearbyAllowedWithVertices:identifier:
initRoseWithParameters:onDevice:
initWithAddress:ltk:
initWithAddress:ltk:primaryIndex:secondaryIndex:
initWithArray:
initWithBeaconIdentityConstraint:identifier:
initWithBeaconType:
initWithBeaconType:transmitPower:
initWithBytes:length:
initWithCLLocationSmoother:
initWithCalendarIdentifier:
initWithCapacity:
initWithCenter:radius:identifier:
initWithCenter:radius:identifier:nearbyAllowed:
initWithCenter:radius:identifier:onBehalfOfBundleId:
initWithCenter:radius:identifier:onBehalfOfBundleId:referenceFrame:
initWithCenter:radius:referenceFrame:allowMonitoringWhenNearby:lowPower:identifier:onBehalfOfBundleId:notifyOnEntry:notifyOnExit:conservativeEntry:emergency:
initWithCenter:radius:referenceFrame:allowMonitoringWhenNearby:lowPower:identifier:onBehalfOfBundleId:notifyOnEntry:notifyOnExit:conservativeEntry:emergency:deviceId:handoffTag:
initWithCenter:radius:referenceFrame:lowPower:identifier:onBehalfOfBundleId:notifyOnEntry:notifyOnExit:conservativeEntry:emergency:deviceId:handoffTag:
initWithClientCoordinate:
initWithClientHeading:
initWithClientLocation:
initWithClientLocation:clientLocationPrivate:
initWithClientLocation:clientLocationPrivate:coarseMetaData:
initWithClientLocation:coarseMetaData:
initWithClientLocation:matchInfo:
initWithClientLocation:matchInfo:trustedTimestamp:
initWithClientLocation:matchInfo:trustedTimestamp:groundAltitude:
initWithClientLocation:matchInfo:trustedTimestamp:groundAltitude:fusionInfo:trackRunInfo:rawHorizontalAccuracy:rawAltitude:rawVerticalAccuracy:rawCourseAccuracy:positionContextStateType:probabilityPositionContextStateIndoor:probabilityPositionContextStateOutdoor:gnssOdometerInfo:
initWithClientLocation:matchInfo:trustedTimestamp:groundAltitude:fusionInfo:trackRunInfo:rawHorizontalAccuracy:rawAltitude:rawVerticalAccuracy:rawCourseAccuracy:positionContextStateType:probabilityPositionContextStateIndoor:probabilityPositionContextStateOutdoor:gnssOdometerInfo:coarseMetaData:
initWithClientLocation:matchInfo:trustedTimestamp:groundAltitude:fusionInfo:trackRunInfo:rawHorizontalAccuracy:rawCourseAccuracy:coarseMetaData:
initWithClientRegion:
initWithClientVehicleHeading:
initWithClientVehicleSpeed:
initWithClusterIdentifier:meanBleRssi:meanUwbRange:
initWithCoder:
initWithConfig:bundle:delegate:queue:
initWithCoordinate:
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:courseAccuracy:speed:speedAccuracy:timestamp:
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:speed:timestamp:
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:
initWithCoordinate:altitude:timetamp:
initWithCoordinate:horizontalAccuracy:arrivalDate:departureDate:detectionDate:
initWithCoordinate:horizontalAccuracy:arrivalDate:departureDate:detectionDate:placeInference:
initWithCoordinateFused:coordinateFusedWithVL:coordinate:horizontalAccuracy:referenceFrame:altitude:verticalAccuracy:course:courseAccuracy:
initWithCurrentRunLoopAndIdentifier:
initWithCurrentRunLoopAndIdentifier:bePermissive:
initWithData:
initWithDesiredNextKeyRollDate:keyRollInterval:keysRemainingInWildPeriod:wildPeriodKeyCount:
initWithDesiredNextKeyRollDate:nextWildIndex:
initWithDictionary:copyItems:
initWithDomain:code:userInfo:
initWithEffectiveBundle:
initWithEffectiveBundle:delegate:onQueue:
initWithEffectiveBundle:limitingBundleIdentifier:delegate:onQueue:
initWithEffectiveBundleIdentifier:
initWithEffectiveBundleIdentifier:bundlePath:websiteIdentifier:delegate:silo:
initWithEffectiveBundleIdentifier:delegate:onQueue:
initWithEffectiveBundlePath:
initWithEffectiveBundlePath:delegate:onQueue:
initWithEffectiveBundlePath:limitingBundleIdentifier:delegate:onQueue:
initWithEstimate:uncertainty:
initWithEstimate:uncertainty:undulation:undulationModel:
initWithFirst:second:
initWithGEOCoordinate:
initWithIdentifier:
initWithIdentifier:andRegionType:
initWithIdentifier:onBehalfOf:regionType:notifyOnEntry:notifyOnExit:conservativeEntry:emergency:
initWithIdentifier:onBehalfOf:regionType:notifyOnEntry:notifyOnExit:conservativeEntry:emergency:deviceId:handoffTag:
initWithInUseLevel:registrationResult:transientAwareRegistrationResult:serviceMaskTuple:authorizedForWidgetUpdates:
initWithInfo:bundleIdentifier:bundlePath:websiteIdentifier:delegate:silo:
initWithInputItems:listenerEndpoint:contextUUID:
initWithLapInfo:laneNumber:laneCount:trackId:estimatedLaneNumber:estimatedLaneConfidence:trackProximity:
initWithLatitude:longitude:
initWithLatitude:longitude:altitude:odometer:timestamp:signalEnvironmentType:
initWithLatitude:longitude:altitude:odometer:timestamp:timeSinceStart:offRouteTime:distanceSinceStart:offRouteDistance:averagePace:distanceAlongReference:
initWithLatitude:longitude:altitude:timetamp:
initWithLevel:
initWithLocation:addressDictionary:region:areasOfInterest:
initWithLocation:addressDictionary:region:areasOfInterest:mapItemSource:geoMapItemHandle:meCardAddress:
initWithMacAddressAsData:secureRangingKeyID:
initWithMacAddressAsString:secureRangingKeyID:
initWithMacAddressAsUInt:secureRangingKeyID:
initWithMachServiceName:options:
initWithMatchQuality:matchCoordinate:matchCourse:matchFormOfWay:matchRoadClass:matchShifted:
initWithMatchQuality:matchCoordinate:matchCourse:matchFormOfWay:matchRoadClass:matchShifted:matchDataArray:
initWithMaxBytesPerUUID:
initWithMinLatitude:maxLatitude:minLongitude:maxLongitude:nRows:nColumns:
initWithName:
initWithOdometer:deltaDistance:deltaDistanceAccuracy:
initWithPeer:date:distanceMeters:accuracyMeters:initiator:
initWithPeer:date:distanceMeters:accuracyMeters:initiator:shouldUnlock:
initWithPlacemark:
initWithProximityUUID:identifier:
initWithProximityUUID:major:identifier:
initWithProximityUUID:major:minor:identifier:
initWithProximityUUID:major:minor:proximity:accuracy:rssi:
initWithQueue:
initWithQueue:defaultConfig:
initWithQueue:identifier:
initWithQueue:locationManagerRoutine:
initWithRaceStartPointDetected:raceEndPointDetected:userIsOffRoute:projectedOnNearestPoint:raceSessionExpired:rollingBufferReachedEndOfReferenceRoute:routeConfigurationSuccessful:racingRouteAnalyticsSent:prematureRaceEndDetected:referenceRouteTotalLengthDetermined:locationPointIsOutsideOfAcceptedRange:locationPointNotMatched:routePointsBufferSize:numberOfRoutePointsToAdd:offRouteGraceDuration:matchedPointCounter:referenceRouteDataPointCounter:currentRouteDataPointCounter:offRouteDataPointCounter:inutileDataPointCounter:rollingBufferUpdateCounter:lastMatchedPointIndex:lastMatchedPointIndexOnReferenceRoute:rollingBufferStartIndexOnReferenceRoute:matrixCellIndexForLastMatchedPoint:referenceRouteTotalLength:timestampOfLastMatchedPointOnReferenceRoute:registeredTimeAtThresholdDistance:endOfRaceTimeThreshold:nearestNeighborMaximumAcceptedDistance:
initWithRegistrationMessageName:messageDictionary:
initWithRegistrationMessageName:messageDictionary:dispatchQueue:codeBlock:
initWithRegistrationMessageName:messagePayload:callbackQueue:completionHandler:
initWithRouteMatrixIndexVec:racingRouteVariables:startPointOnCurrentRoute:startPointOnReferenceRoute:lastOnRouteDataPoint:lastProjectedDataPoint:routeBoundingBox:
initWithSet:copyItems:
initWithSoftwareSimulationState:andExternalAccessoryState:
initWithSourceIdsIdentifier:sourceData:
initWithSourcesData:
initWithThreshold:sampleCount:sampleRate:
initWithThreshold:sleepDuration:
initWithTimeAhead:currentDistance:referenceDistance:currentAveragePace:totalOverlapDistance:state:
initWithTimestamp:localizationResult:
initWithType:
initWithType:encodedSequence:
initWithUUID:
initWithUUID:identifier:
initWithUUID:major:
initWithUUID:major:identifier:
initWithUUID:major:minor:
initWithUUID:major:minor:identifier:
initWithUUID:major:minor:identifier:notifyEntryStateOnDisplay:
initWithUUID:major:minor:proximity:accuracy:rssi:timestamp:
initWithUUIDString:
initWithUnderlyingQueue:bePermissive:
initWithUnsignedLongLong:
initWithUserType:placeType:placemark:referenceLocation:confidence:preferredName:loiIdentifier:
initWithVLLocalizationDebugInfo:
initWithVertices:identifier:
initWithWebsiteIdentifier:
initWithWebsiteIdentifier:delegate:onQueue:
initiator
inlandWater
inlierIndices
inliersCount
insertObject:atIndex:
instancesRespondToSelector:
intValue
integerValue
integrity
intendToSyncServiceWithName:
interestZoneDictionaryIdentifiedById:forLocationDictionary:
interestZonesIdentifierListForLocationDictionary:
interestedPartyIso3166CountryCodes
interfaceWithProtocol:
internalClient
inutileDataPointCounter
invalidate
isAltitudeWgs84Available
isAuthorizedForPreciseLocation
isAuthorizedForServiceType:
isAuthorizedForWidgetUpdates
isCoordinateFused
isCoordinateFusedWithVL
isDisputed
isDynamicAccuracyReductionEnabled
isEntityAuthorizedForLocationDictionary:
isEqual:
isEqualToData:
isEqualToMaterial:
isEqualToNumber:
isEqualToPeer:
isEqualToString:
isFileURL
isGeocoding
isInitiator
isInterestZoneReleventForLocationDictionary:
isKindOfClass:
isLocationActiveForLocationDictionary:
isLocationServicesPreferencesDialogEnabled
isLowPower
isMatchInfoEnabled
isMatchShifted
isMemberOfClass:
isMonitoringAvailableForClass:
isNonProvisionallyAuthorizedForServiceType:
isNonProvisionallyAuthorizedForServiceTypeMask:
isPeerRangingAvailable
isProducedByAccessory
isRangingAvailable
isSimulatedBySoftware
isStatusBarIconEnabledForLocationEntityClass:
isTrackRunInfoEnabled
isiOSAppOnMac
iso3166CountryCode
jsonObject
keyCount
keysRemaining
laneCount
laneNumber
lastMatchedPointIndex
lastMatchedPointIndexOnReferenceRoute
lastObject
lastOnRouteDataPoint
lastPathComponent
lastProjectedDataPoint
laterDate:
latitude
latitude_deg
length
lengthOfBytesUsingEncoding:
level
loadScenarioFromURL:
localeIdentifier
locality
localizedNameForScenario:
localizedStringFromDate:dateStyle:timeStyle:
location
locationDeliveryBehavior
locationDistance
locationInterval
locationManager:didChangeAuthorizationStatus:
locationManager:didDetermineState:forRegion:
locationManager:didEnter:completion:
locationManager:didExit:completion:
locationManager:didExitRegion:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didFailWithError:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didNotReceiveLocationUpdatesForRegionMonitoringInInterval:
locationManager:didRangeBeacons:inRegion:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didRangePeers:
locationManager:didReceiveApproval:
locationManager:didSmoothLocations:ofType:
locationManager:didStartMonitoringForRegion:
locationManager:didStartRangingForPeer:
locationManager:didStopRangingForPeer:
locationManager:didUpdateHeading:
locationManager:didUpdateLocations:
locationManager:didUpdateLocations:completion:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateVehicleHeading:
locationManager:didUpdateVehicleSpeed:
locationManager:didVisit:
locationManager:monitoringDidFailForRegion:withError:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:rangingDidFailForPeer:withError:
locationManagerDidChangeAuthorization:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManagerRoutine
locationManagerRoutineProxy
locationManagerShouldDisplayHeadingCalibration:
locationManagerSmoother
locationManagerSmootherProxy
locationPointIsOutsideOfAcceptedRange
locationPointNotMatched
locationRepeatBehavior
locationSelectorDidSelectLocation:
locationServicesApproved
locationServicesAvailable
locationServicesEnabled
locationServicesEnabled:
locationServicesPreferencesDialogEnabled
locationSpeed
locationUpdateChangeInAltitudeToSendEarly
locationUpdateDistanceMovedToSendEarly
locationUpdateHuncReductionToSendEarly
locationUpdateMinDelay
locationUpdateTimeout
locationUpdateVuncReductionToSendEarly
loiIdentifier
longitude
longitude_deg
macAddress
magneticDeclination
main
mainBundle
major
makeObjectsPerformSelector:
mapCorrectionAvailable
mapItemStorageForGEOMapItem:
maps488Details
markAsHavingReceivedLocation
matchCourse
matchDataArray
matchFormOfWay
matchInfo
matchInfoEnabled
matchQuality
matchRoadClass
matchShifted
matchedPointCounter
matrixCellIndexForLastMatchedPoint
maxLatitude
maxLongitude
maxUsableAge
maxUsableHunc
maxUsableVunc
maximumSampleCount
maximumThreshold
meanBLEReceivedSignalStrength
meanUWBRange
mecardAddress
metadataForHomekitAccessoryControlEventWithUUID:stateString:serviceUUID:serviceType:characteristicType:serviceGroupUUID:source:roomUUID:
metadataForHomekitActionSetEventWithUUID:name:type:clientName:source:homeName:
metadataForMicroLocationTruthTagEventWithTagUUID:
minLatitude
minLongitude
minUsableIntegrity
minimumSampleCount
minimumThreshold
minor
modifyOrSetAuthorizationTime:forBundleID:orBundlePath:
modifyOrSetAuthorizationTime:forBundleID:orBundlePath:replyBlock:
monitoredRegions
mutableCopy
nColumns
nRows
name
nearestNeighborMaximumAcceptedDistance
newAssertionForBundle:withReason:
newAssertionForBundle:withReason:callbackQueue:completionHandler:
newAssertionForBundle:withReason:level:
newAssertionForBundle:withReason:withCallbackQueue:andBlock:
newAssertionForBundleIdentifier:bundlePath:reason:level:
newAssertionForBundleIdentifier:withReason:
newAssertionForBundleIdentifier:withReason:callbackQueue:completionHandler:
newAssertionForBundleIdentifier:withReason:level:
newAssertionForBundleIdentifier:withReason:withCallbackQueue:andBlock:
newAssertionForBundlePath:withReason:
newAssertionWithBundleId:bundlePath:reason:overrideDeauthorizationForBeneficiary:
newAssertionWithReason:
newTimer
nextWildIndex
northLat
notifyEntryStateOnDisplay
notifyOnEntry
notifyOnExit
notifyPassKitPayment:transaction:info:
notifyWeatherForecast:airQualityConditions:hourlyForecasts:dailyForecasts:latitude:longitude:
numberOfRoutePointsToAdd
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithUnsignedChar:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedShort:
objCType
objectAtIndex:
objectAtIndexedSubscript:
objectEnumerator
objectForInfoDictionaryKey:
objectForKey:
objectForKeyedSubscript:
ocean
odometer
odometer_m
offRouteDataPointCounter
offRouteDistance
offRouteGraceDuration
offRouteTime
onBehalfOfBundleId
onClientEvent:supportInfo:
onClientEventAuthStatus:
onClientEventAutopauseStatus:
onClientEventBatch:
onClientEventError:
onClientEventHeading:
onClientEventHeadingCalibration:
onClientEventInterrupted:
onClientEventLocation:forceMapMatching:type:
onClientEventLocationUnavailable:
onClientEventNoLocationWatchdog:
onClientEventPeerRanging:
onClientEventPeerRangingError:
onClientEventPeerRangingRequestProcessed:
onClientEventPlaceInferenceError:
onClientEventPlaceInferenceResult:
onClientEventRanging:
onClientEventRangingError:
onClientEventRegion:
onClientEventRegionError:
onClientEventRegionResponseDelayed:
onClientEventRegionSetupCompleted:
onClientEventRegionState:
onClientEventSignificantLocationVisit:
onClientEventSignificantLocationVisitStateRequest:
onClientEventVehicleHeading:
onClientEventVehicleSpeed:
onDidBecomeActive:
onDidEnterBackground:
onLocationRequestTimeout
onRangingRequestTimeout
onWillEnterForeground:
path
pathExtension
pauseLocationUpdates:
paused
pausesLocationUpdatesAutomatically
peer
perFrameCalibrationMatrices
perFrameDistortion
perFrameVioPoses
perFrameVioStatusCodes
performAggressiveScanForDurianService
performAggressiveScanForSeparationAlerts
performAggressiveScanForTrackingAvoidance
performCourtesyPromptIfNeeded
performHELEScanForTrackingAvoidance
performLongAggressiveScanForSeparationAlerts
performMigration
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
periodicUpdatesEnabled
peripheralDataWithMeasuredPower:
pingDaemon
pingDaemonWithReplyBlock:
placeType
placemark
placemarkWithGEOMapItem:
pointInPolygonWithCoordinate:withDistanceToBorder:
points2D
points3D
polylines
positionContextState
postalAddress
postalAddressWithDictionaryRepresentation:
postalCode
preferredName
prematureRaceEndDetected
prepareRangingOnDevice:
previousAuthorizationStatus
previousAuthorizationStatusValid
primaryEntityClassForLocationDictionary:
primaryIndex
printConfiguration
printUsabilityCriteria:
privateMode
probabilityPositionContextStateIndoor
probabilityPositionContextStateOutdoor
processInfo
processName
projectedOnNearestPoint
propagateLocationToTime:
propertyListWithData:options:format:error:
provisionalServiceMask
proximity
proximityUUID
purgeMicroLocationSemiSupervisedData
queue
raceEndPointDetected
raceSessionExpired
raceStartPointDetected
racingRouteAnalyticsSent
racingRouteVariables
radius
rangeForTransmitPower:
rangedBeaconConstraints
rangedConstraints
rangedRegions
rawAltitude
rawCoordinate
rawCourse
rawCourseAccuracy
rawHorizontalAccuracy
rawVerticalAccuracy
recoverRaceAtTimestamp
referenceDistance_m
referenceFrame
referenceLocation
referenceRouteDataPointCounter
referenceRouteTotalLength
referenceRouteTotalLengthDetermined
region
regionMonitoringAvailable
regionMonitoringEnabled
registerAsLocationClient
registerCircularInterestZoneWithId:latitude:longitude:radius:serviceMaskOperator:provenanceType:forBundleId:orBundlePath:replyBlock:
registerCircularInterestZoneWithId:latitue:longitude:radius:serviceMaskOperator:provenanceType:forBundle:error:
registerCircularInterestZoneWithId:latitue:longitude:radius:serviceMaskOperator:provenanceType:forBundleIdentifier:error:
registerPhenolicInterestZoneWithId:phenolicLocation:serviceMaskOperator:provenanceType:forBundle:error:
registerPhenolicInterestZoneWithId:phenolicLocation:serviceMaskOperator:provenanceType:forBundleId:orBundlePath:error:
registerPhenolicInterestZoneWithId:phenolicLocation:serviceMaskOperator:provenanceType:forBundleId:orBundlePath:replyBlock:
registerPhenolicInterestZoneWithId:phenolicLocation:serviceMaskOperator:provenanceType:forBundleIdentifier:error:
registeredTimeAtThresholdDistance
registrationResult
remoteObjectInterface
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
removeObject:
removeObjectForKey:
removeObjectsInRange:
requestAlwaysAuthorization
requestCurrentMicroLocationWithAdditionalInformation:
requestHistoricalLocationsWithPurposeKey:sampleCount:completionHandler:
requestMicroLocationRecordingScanWithAdditionalInformation:
requestMicroLocationRecordingScanWithAdditionalInformation:shouldForceRecording:
requestMicroLocationStaticSourcesStatisticsWithCompletion:
requestRangingToPeers:timeoutSeconds:
requestStateForRegion:
requestTemporaryFullAccuracyAuthorizationWithPurposeKey:
requestTemporaryFullAccuracyAuthorizationWithPurposeKey:completion:
requestTemporaryPreciseLocationAuthorizationWithPurposeKey:
requestTemporaryPreciseLocationAuthorizationWithPurposeKey:completion:
requestWhenInUseAuthorization
requestWhenInUseAuthorizationWithPrompt
requestWhenInUseAuthorizationWithPurposeKey:
requestingLocation
requestingRanging
reset
resetAllClientsWithReplyBlock:
resetApps
resetClientForBundleId:orBundlePath:withReplyBlock:
resetFrames
resetInliers
resetLocationAuthorizationForBundleId:orBundlePath:
resolveMapItemLocallyFromHandle:completionHandler:
respondToRangingFromPeers:timeoutSeconds:
respondsToSelector:
responseSilo
resultPoseRotation
resultPoseTranslation
resume
resumeLocationUpdates
retain
retainCount
reverseGeocodeLocation:completionHandler:
reverseGeocodeLocation:heading:completionHandler:
reverseGeocodeLocation:heading:localResultsOnly:completionHandler:
reverseGeocodeLocation:localResultsOnly:completionHandler:
reverseGeocodeLocation:preferredLocale:completionHandler:
reverseGeocodeLocation:preferredLocale:heading:localResultsOnly:completionHandler:
reverseObjectEnumerator
roadID
roadSegment
rollWildKeyOnDevice:
rollingBufferReachedEndOfReferenceRoute
rollingBufferStartIndexOnReferenceRoute
rollingBufferUpdateCounter
roseAPVersion
roseDSPVersion
rotationalAccuracyInRadians
routeBoundingBox
routeConfigurationSuccessful
routeMatrixIndexVec
routePointsBufferSize
rssi
rtKitVersion
sampleCount
sampleRate
scanForHELE
scanForNearbyDevicesLong
scanForNearbyOwner
scanHexInt:
scannerWithString:
scenariosPath
second
secondaryIndex
secureRangingKeyID
self
sendMessage:
sendMessage:withPayload:
serviceExtensionPerformCleanup
serviceExtensionWillTerminate
serviceName
setAccelerometerOrientationModeConfiguration:forDevice:
setAccelerometerSlopeModeConfiguration:forDevice:
setActivityType:
setAllowsAlteredAccessoryLocations:
setAllowsBackgroundLocationUpdates:
setAllowsLocationPrompts:
setAllowsMapCorrection:
setAltitude:
setAltitudeStitchingEnabled:
setApplyRangeEstimation:
setAuthorizationPromptMapDisplayEnabled:
setAuthorizationPromptMapDisplayEnabled:replyBlock:
setAuthorizationStatus:forBundle:
setAuthorizationStatus:forBundleIdentifier:
setAuthorizationStatus:forBundlePath:
setAuthorizationStatus:withCorrectiveCompensation:forBundleID:orBundlePath:
setAuthorizationStatus:withCorrectiveCompensation:forBundleID:orBundlePath:replyBlock:
setAuthorizationStatus:withCorrectiveCompensation:forInterestZoneWithId:registeredForBundle:
setAuthorizationStatus:withCorrectiveCompensation:forInterestZoneWithId:registeredForBundleIdentifier:
setAuthorizationStatusByType:forBundle:
setAuthorizationStatusByType:forBundleIdentifier:
setAuthorizationStatusByType:forBundlePath:
setAuthorizationStatusByType:withCorrectiveCompensation:andZoneIdentifier:andSubIdentityIdentifier:forBundleID:orBundlePath:
setAuthorizationStatusByType:withCorrectiveCompensation:andZoneIdentifier:andSubIdentityIdentifier:forBundleID:orBundlePath:replyBlock:
setAuthorizationStatusByType:withCorrectiveCompensation:forBundle:
setAuthorizationStatusByType:withCorrectiveCompensation:forBundleIdentifier:
setBackgroundIndicatorEnabled:forBundle:
setBackgroundIndicatorEnabled:forBundleID:orBundlePath:replyBlock:
setBackgroundIndicatorEnabled:forBundleIdentifier:
setBackgroundIndicatorEnabled:forLocationDictionary:
setBackgroundIndicatorForBundleID:orBundlePath:enabled:
setBatchingLocation:
setBatteryStatus:forDevice:
setBiasRateInMeasurement:
setByAddingObjectsFromArray:
setCameraImageResolution:
setCameraIntrinsics:
setCameraPose:
setClass:forSelector:argumentIndex:ofReply:
setClasses:forSelector:argumentIndex:ofReply:
setCoarseMetadata:
setConfidence:
setConnection:
setConservativeEntry:
setCoordinate:
setCourse:
setCourtesyPromptNeeded:
setCovariance:
setDateFormat:
setDateStyle:
setDebugInfo:
setDefaultEffectiveBundle:
setDefaultEffectiveBundleIdentifier:
setDefaultsForSIP
setDelegate:
setDesiredAccuracy:
setDeviceLocation:
setDeviceType:onDevice:
setDistanceFilter:
setDynamicAccuracyReductionEnabled:
setEastLng:
setEmergency:
setEntityAuthorization:forLocationDictionary:
setEntityAuthorization:withCorrectiveCompensation:forLocationDictionary:
setEntityAuthorization:withCorrectiveCompensationType:forLocationDictionary:
setEntityAuthorized:forLocationDictionary:
setExportedInterface:
setExportedObject:
setExtendedBorderDetection:withExtendedDistance:
setFeature:
setFirstLocationEarlyReturnEnabled:
setFirstLocationMaxEarlyReturnHunc:
setFirstLocationMaxEarlyReturnVunc:
setFirstLocationTimeout:
setFirstLocationUsabilityCriteria:
setFirstUpdateEnabled:
setFirstUpdateTimeout:
setFormatterBehavior:
setFrameCount:perFrameVioStatusCodes:perFrameVioPoses:perFrameCalibrationMatrices:perFrameDistortion:
setFusionInfoEnabled:
setGeoReferenceFrame:
setGestureServiceEnabled:
setGestureServiceEnabled:replyBlock:
setGlobalReferenceFrame:
setGroundAltitudeEnabled:
setGutsWithProximityUUID:major:minor:notifyOnDisplay:
setHandler:
setHawkeyeTestMode:forDevice:
setHawkeyeUTMotionConfigWithSeparatedUTTimeoutSeconds:separatedUTBackoffTimeoutSeconds:forDevice:
setHeading:
setHeadingFilter:
setHeadingOrientation:
setHeadings:
setHorizontalAccuracy:
setIncidentalUseMode:forBundleID:orBundlePath:
setIncidentalUseMode:forBundleID:orBundlePath:replyBlock:
setIncidentalUseMode:forBundleIdentifier:
setInertialCovariance:
setInertialCovarianceInfo:
setInertialState:
setInertialStateInfo:
setInliersCount:points2D:points3D:inlierIndices:
setIntermediateLocationDistance:
setInterruptionHandler:
setInvalidationHandler:
setIsActuallyAWatchKitExtension:
setIsAuthorizedForWidgetUpdates:
setKeyRollInterval:onDevice:
setLatitude:
setLimitsPrecision:
setLocation:
setLocationButtonUseMode:forBundle:
setLocationButtonUseMode:forBundleID:orBundlePath:
setLocationButtonUseMode:forBundleID:orBundlePath:replyBlock:
setLocationButtonUseMode:forBundleIdentifier:
setLocationDefaultForKey:andValue:replyBlock:
setLocationDeliveryBehavior:
setLocationDistance:
setLocationInterval:
setLocationManagerRoutine:
setLocationManagerSmoother:
setLocationRepeatBehavior:
setLocationServicesEnabled:
setLocationServicesEnabled:replyBlock:
setLocationServicesPreferencesDialogEnabled:
setLocationSpeed:
setLocationTravellingSpeed:
setLocationUpdateChangeInAltitudeToSendEarly:
setLocationUpdateDistanceMovedToSendEarly:
setLocationUpdateHuncReductionToSendEarly:
setLocationUpdateMinDelay:
setLocationUpdateTimeout:
setLocationUpdateUsabilityCriteria:
setLocationUpdateVuncReductionToSendEarly:
setLongitude:
setManager:
setMapMatchingRouteHint:count:routingType:stepType:
setMapMatchingRouteHint:routingType:stepType:replyBlock:
setMapRegion:
setMaps488Details:
setMatchInfoEnabled:
setMaxBytesPerUUID:
setMaxUsableAge:
setMaxUsableHunc:
setMaxUsableVunc:
setMinUsableIntegrity:
setMonth:
setNearOwnerTimeout:onDevice:
setNextFireDelay:
setNextFireDelay:interval:
setNorthLat:
setNotifyEntryStateOnDisplay:
setNotifyOnEntry:
setNotifyOnExit:
setObfuscatedIdentifier:onDevice:
setObject:forKey:
setObject:forKeyedSubscript:
setOnBehalfOfBundleId:
setOriginTimestamp:
setPaused:
setPausesLocationUpdatesAutomatically:
setPeriodicUpdatesEnabled:
setPolylines:
setPreviousAuthorizationStatusValid:
setPrivateMode:replyBlock:
setPurpose:
setRaceParameters:
setReferenceFrame:
setRelevance:forInterestZoneWithId:registeredForBundle:error:
setRelevance:forInterestZoneWithId:registeredForBundleId:orBundlePath:error:
setRelevance:forInterestZoneWithId:registeredForBundleId:orBundlePath:replyBlock:
setRelevance:forInterestZoneWithId:registeredForBundleIdentifier:error:
setRemoteObjectInterface:
setRequestingLocation:
setRequestingRanging:
setResponseSilo:
setResultPoseRotation:
setResultPoseTranslation:
setRoadID:
setRoseRangingParameters:onDevice:
setRotationFromGlobalToCameraFrame:
setRotationFromGlobalToDeviceFrame:
setSampleRate:
setShowsBackgroundLocationIndicator:
setSimulatedCell:
setSimulatedCellRegistrationStatus:
setSimulatedWifiPower:
setSimulationScenario:
setSlamOrigin:
setSlamTracksCount:slamTracks:descriptorDimension:slamTrackDescriptors:slamTrackObservations:slamTracks2D:slamTrackImageIndices:
setSleepDuration_ms:
setSouthLat:
setSpeed:
setStatus:
setStatusBarIconEnabled:forEntityClass:
setStatusBarIconEnabled:forLocationEntityClass:
setStatusBarIconEnabledForEntityClass:enabled:replyBlock:
setSupplemantaryInfo:
setTemporaryAuthorizationGranted:forBundle:
setTemporaryAuthorizationGranted:forBundleID:orBundlePath:orAuditToken:byLocationButton:voiceInteractionEnabled:
setTemporaryAuthorizationGranted:forBundleID:orBundlePath:orAuditToken:byLocationButton:voiceInteractionEnabled:replyBlock:
setTemporaryAuthorizationGranted:forBundleIdentifier:
setTemporaryAuthorizationStatusForBundleId:orBundlePath:statusData:
setTemporaryAuthorizationStatusForBundleId:orBundlePath:statusData:replyBlock:
setThreshold:
setTimeStyle:
setTimestamp:
setTrackRunHint:
setTrackRunHint:replyBlock:
setTrackRunInfoEnabled:
setTrackingState:
setTransform:
setType:
setUUID:
setUnauthorizedPlaySoundRateLimit:forDevice:
setUpdating:
setUpdatingHeading:
setUpdatingLocation:
setUpdatingRanging:
setUpdatingVehicleHeading:
setUpdatingVehicleSpeed:
setUuidToData:
setValue:forKey:
setVerticalAccuracy:
setVuncCheckRequiredForUsability:
setWestLng:
setWifiScanResults:
setWildConfiguration:onDevice:
setWithArray:
setWithObject:
sharedApplication
sharedInstance
sharedManager
sharedService
sharedServiceClient
shortDescription
shortSequence
shortValue
shouldUnlock
showCalibrationAlert
showsBackgroundLocationIndicator
shutdownDaemon
shutdownDaemonWithReplyBlock:
signalEnvironmentType
significantLocationChangeMonitoringAvailable
silo
simulateBeaconWithProximityUUID:major:minor:eventType:
simulateFenceWithBundleID:andFenceID:eventType:atLocation:
simulateSignificantLocationChange:
simulateVisit:
slamOrigin
slamTrackDescriptors
slamTrackImageIndices
slamTrackObservations
slamTracks
slamTracks2D
sleepDuration_ms
smoothLocations:
smoothLocations:handler:
smoothLocations:useType:
smoothLocations:workoutActivity:handler:
smoothLocations:workoutActivityType:handler:
snapToResolution:
sortDescriptorWithKey:ascending:
sortUsingDescriptors:
sortedArrayUsingDescriptors:
source
sourceData
sourceIdsIdentifier
sourceInformation
sourcesData
southLat
specificationVersion
speed
speedAccuracy
stageTADetection:deviceType:
startAggressiveAdvertisingOnDevice:withTimeout:
startAppStatusUpdates
startCellSimulation
startEventCounterForDevice:
startEventCounterOnDevice:
startLocationSimulation
startMonitoringForAvengerAdvertisementsForBTFinding
startMonitoringForRegion:
startMonitoringForRegion:desiredAccuracy:
startMonitoringLocationPushesWithCompletion:
startMonitoringSignificantLocationChanges
startMonitoringVisits
startPlayingSoundSequence:onDevice:
startPlayingUnauthorizedSoundOnDevice:
startPlayingUnauthorizedSoundSequence:onDevice:
startPointOnCurrentRoute
startPointOnReferenceRoute
startRangingBeaconsInRegion:
startRangingBeaconsSatisfyingConstraint:
startRangingFromPeers:
startRangingOnDevice:targetEventCounter:
startRangingToPeers:intervalSeconds:
startRangingWithParameters:onDevice:
startTechStatusUpdates
startTranscriptSession
startTranscriptSessionWithCompletion:
startUnauthorizedAggressiveAdvertisingOnDevice:
startUpdatingHeading
startUpdatingLocation
startUpdatingVehicleHeading
startUpdatingVehicleSpeed
startWifiSimulation
state
staticServiceMask
status
stopAggressiveAdvertisingOnDevice:
stopAppStatusUpdates
stopCellSimulation
stopEventCounterForDevice:
stopEventCounterOnDevice:
stopLocationSimulation
stopLongAggressiveScanForSeparationAlerts
stopMonitoringForAvengerAdvertisementsForBTFinding
stopMonitoringForRegion:
stopMonitoringLocationPushes
stopMonitoringSignificantLocationChanges
stopMonitoringVisits
stopPlayingSoundOnDevice:
stopPlayingUnauthorizedSoundOnDevice:
stopRangingBeaconsInRegion:
stopRangingBeaconsSatisfyingConstraint:
stopRangingFromPeers:
stopRangingOnDevice:
stopRangingToPeers:
stopRoseWithParameters:onDevice:
stopScanForNearbyDevicesLong
stopSession
stopTechStatusUpdates
stopUpdatingHeading
stopUpdatingLocation
stopUpdatingLocationAutoPaused
stopUpdatingVehicleHeading
stopUpdatingVehicleSpeed
stopWifiSimulation
street
stringByAppendingString:
stringByDeletingPathExtension
stringWithFormat:
stringWithString:
stringWithUTF8String:
subAdministrativeArea
subLocality
subdataWithRange:
submitSample:
submitWithHandler:networkActivity:
submitWithRefinedHandler:networkActivity:
superclass
supplemantaryInfo
supportInfo
supportsSecureCoding
supportsWifi2
synchronousRemoteObject
synchronousRemoteObjectProxyWithErrorHandler:
technologiesInUse
thoroughfare
threshold
ticketForReverseGeocodeLocation:placeTypeLimit:traits:
timeAhead_s
timeIntervalSince1970
timeIntervalSinceDate:
timeIntervalSinceReferenceDate
timeSinceStart
timeSyncMachTimeStamp:oscarTimeStamp:
timeZone
timeZoneAtLocation:
timestamp
timestampOfLastMatchedPointOnReferenceRoute
timestamp_s
timezone
totalObservationsCount
totalOverlapDistance_m
trackProximity
trackRunInfo
trackRunInfoEnabled
trackerStateSize
trackerStateTypeName
trackingState
transform
transientAwareRegistrationResult
transmitPower
triggerExpiredAuthorizationPurgeOnClientManager
triggerExpiredAuthorizationPurgeWithReplyBlock:
trueHeading
trustedTimestamp
type
uintMacAddressFromString:
unarchivedArrayOfObjectsOfClass:fromData:error:
unarchivedObjectOfClass:fromData:error:
uncertainty
uncertaintyWgs84
undulation
unionSet:
uniqueIdentifier
unpairFromDevice:
unpairFromDeviceWithAddress:
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
unsignedLongValue
unsignedShortValue
updateCorrectiveCompensationChoiceForOutstandingPrompt:
updateCorrectiveCompensationChoiceForOutstandingPrompt:replyBlock:
updateFirmwareForDevice:withAssetURL:
updateState:
updating
updatingLocation
updatingVehicleHeading
updatingVehicleSpeed
useDefaultFirmwareAssetSourceForProductGroup:andProductNumber:
useLocalFirmwareAssetFromURL:forProductGroup:forProductNumber:withSandboxExtension:
userIsOffRoute
userLocationClientsWithInfo
userType
uuidToData
value:withObjCType:
valueWithBytes:objCType:
valueWithCLLocationCoordinate2D:
verticalAccuracy
vertices
vuncCheckRequiredForUsability
writeToURL:options:error:
year
zone
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v32@0:8@16@?24
v24@0:8@"NSArray"16
v32@0:8@"NSArray"16@?<v@?>24
v16@0:8
@32@0:8@16@24
v20@0:8B16
@"NSObject<OS_dispatch_queue>"
@"NSXPCConnection"
@"CLLocationManagerRoutine"
@24@0:8@16
@"_CLLocationManagerRoutineProxy"
@44@0:8@16@24@32B40
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@48@0:8@16@24@32@40
@"NSData"
@"NSNumber"
r*16@0:8
@32@0:8@16^v24
@40@0:8@16^v24@?32
d16@0:8
v24@0:8d16
i16@0:8
v20@0:8i16
q16@0:8
v24@0:8q16
v24@0:8@?16
B40@0:8^v16Q24^{os_state_hints_s=I*II}32
^v16@0:8
{_CLLocationManagerStateTrackerState="distanceFilter"d"desiredAccuracy"d"updatingLocation"B"requestingLocation"B"requestingRanging"B"updatingRanging"B"updatingHeading"B"headingFilter"d"allowsLocationPrompts"B"allowsAlteredAccessoryLocations"B"dynamicAccuracyReductionEnabled"B"previousAuthorizationStatusValid"B"previousAuthorizationStatus"i"limitsPrecision"B"activityType"q"pausesLocationUpdatesAutomatically"i"paused"B"allowsBackgroundLocationUpdates"B"showsBackgroundLocationIndicator"B"allowsMapCorrection"B"batchingLocation"B"updatingVehicleSpeed"B"updatingVehicleHeading"B"matchInfoEnabled"B"groundAltitudeEnabled"B"fusionInfoEnabled"B"courtesyPromptNeeded"B"isAuthorizedForWidgetUpdates"B"trackRunInfoEnabled"B}
@64@0:8@16@24@32@40@48@56
^{__CLClient=}
@"<CLLocationManagerDelegate>"
@"CLLocationManager"
@"CLLocationManagerStateTracker"
{?="padding1"i"suitability"i"coordinate"{?="latitude"d"longitude"d}"horizontalAccuracy"d"altitude"d"verticalAccuracy"d"padding2"d"padding3"d"speed"d"speedAccuracy"d"course"d"courseAccuracy"d"timestamp"d"confidence"i"lifespan"d"type"i"rawCoordinate"{?="latitude"d"longitude"d}"rawCourse"d"floor"i"integrity"I"referenceFrame"i"rawReferenceFrame"i"signalEnvironmentType"i"ellipsoidalAltitude"d"fromSimulationController"B}
@"NSString"
@"CLTimer"
@"NSMutableSet"
@"CLSilo"
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@16@24
B20@0:8B16
@20@0:8B16
B32@0:8@16^@24
@80@0:8@16@24@32@40@48@56@64@72
@24@0:8^@16
i32@0:8@16@24
i24@0:8@16
v28@0:8B16@20
v28@0:8i16@20
v32@0:8i16i20@24
v32@0:8^i16@24
v72@0:8@16d24d32d40i48i52@56^@64
v52@0:8@16i24i28i32@36^@44
v40@0:8i16i20@24@32
v44@0:8B16@20@28^@36
v40@0:8@16@24^@32
v52@0:8{?=[8I]}16B48
B32@0:8@16@24
@32@0:8@16^@24
@56@0:8@16@24@32@40@48
@40@0:8@16@24@32
^{__CLClient=}16@0:8
v32@0:8d16d24
v28@0:8d16i24
v32@0:8@16d24
v32@0:8@16Q24
v28@0:8@16B24
@36@0:8@16B24@?28
v40@0:8@16@24@?32
v48@0:8@16@24@32@?40
v52@0:8d16i24{CLLocationCoordinate2D=dd}28@?44
v40@0:8@16q24@?32
v36@0:8@16B24@28
@32@0:8Q16@?24
v32@0:8Q16@?24
Q24@0:8Q16
@32@0:8d16d24
@44@0:8d16d24d32i40
v32@0:8@"NSArray"16@"NSNumber"24
v36@0:8@16i24@?28
v36@0:8@"NSArray"16i24@?<v@?@"NSArray"@"NSError">28
@"<CLLocationSmootherDelegate>"
@"CLLocationSmoother"
v40@0:8@16Q24@?32
@"_CLLocationSmootherProxy"
C16@0:8
f16@0:8
@28@0:8f16C20C24
v20@0:8f16
v20@0:8C16
@24@0:8I16S20
I16@0:8
v20@0:8I16
S16@0:8
v20@0:8S16
@48@0:8@16@24@32@?40
@48@0:8r*16@24@32@?40
{unique_ptr<CLGnssDisablementAssertionInternal, std::default_delete<CLGnssDisablementAssertionInternal>>="__ptr_"{__compressed_pair<CLGnssDisablementAssertionInternal *, std::default_delete<CLGnssDisablementAssertionInternal>>="__value_"^{CLGnssDisablementAssertionInternal}}}
@68@0:8q16{CLLocationCoordinate2D=dd}24d40i48i52B56@60
{CLLocationCoordinate2D="latitude"d"longitude"d}
@60@0:8q16{CLLocationCoordinate2D=dd}24d40i48i52B56
{CLLocationCoordinate2D=dd}16@0:8
v32@0:8{shared_ptr<CLConnectionMessage>=^{CLConnectionMessage}^{__shared_weak_count}}16
@"<CLFindMyAccessoryRangingManagerDelegate>"
{unique_ptr<CLConnectionClient, std::default_delete<CLConnectionClient>>="__ptr_"{__compressed_pair<CLConnectionClient *, std::default_delete<CLConnectionClient>>="__value_"^{CLConnectionClient}}}
@136@0:8{?=iddddd{?=dd}dd}16q96q104@112q120i128i132
{?=iddddd{?=dd}dd}16@0:8
{?="lapCount"i"currentLapStartTime"d"currentLapDurationInSeconds"d"currentLapDistanceInMeters"d"previousLapDurationInSeconds"d"previousLapDistanceInMeters"d"previousLapPositionAtCompletionInDegrees"{?="latitude"d"longitude"d}"currentTrackRunSessionDurationInSeconds"d"currentTrackRunSessionDistanceInMeters"d}
@24@0:8Q16
@48@0:8@16{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long={?=b1b63}Q*}{__short={?=b1b7}[0c][23c]}{__raw=[3Q]})}}}24
v32@0:8r*16@24
v24@0:8r*16
v32@0:8Q16@24
v28@0:8S16@20
v28@0:8C16@20
v28@0:8I16@20
v28@0:8@16I24
v32@0:8I16I20@24
v40@0:8@16@24@32
v52@0:8@16@24C32C36C40C44S48
v28@0:8@16S24
@"<CLFindMyAccessoryManagerDelegate>"
@"CLFindMyAccessoryFragmentAccumulator"
B40@0:8@16@24^@32
B24@0:8B16i20
{unique_ptr<CLRegulatoryConfigInternal, std::default_delete<CLRegulatoryConfigInternal>>="__ptr_"{__compressed_pair<CLRegulatoryConfigInternal *, std::default_delete<CLRegulatoryConfigInternal>>="__value_"^{CLRegulatoryConfigInternal}}}
{?=dddddfffBi{?=dd}diiB{?=ddBBidqddd}{?={?=iddddd{?=dd}dd}iQiiiidB}{?=dd}if{?=dd}ddiBddddddddBB{?=dd}diddddiddi}16@0:8
d24@0:8@16
d24@0:8d16
@104@0:8{?=ddddddddddi}16
{?="x"d"y"d"z"d"magneticHeading"d"trueHeading"d"accuracy"d"timestamp"d"temperature"d"magnitude"d"inclination"d"calibration"i}
@40@0:8d16d24d32
@84@0:8B16B20{?=dd}24d40i48d52d60d68d76
{?=dd}16@0:8
{?="latitude"d"longitude"d}
^{CLCallbackAssertionInternal=@@?^{CLConnectionClient}}
@44@0:8@16@24@32i40
@36@0:8@16@24i32
@3192@0:8{?=[512c][512c][512c]iBBBB(?={?=[512c]SSiB}{?={?=dd}ddiBB}{?=[101{?=dd}]iiB})}16
@48@0:8{CLLocationCoordinate2D=dd}16d32@40
@28@0:8@16i24
@52@0:8@16@24i32B36B40B44B48
@68@0:8@16@24i32B36B40B44B48@52@60
B32@0:8{CLLocationCoordinate2D=dd}16
@"NSUUID"
@48@0:8i16i20i24{CLClientServiceTypeMaskTuple=QQ}28B44
@32@0:8{CLClientServiceTypeMaskTuple=QQ}16
B24@0:8Q16
B20@0:8i16
@28@0:8@16I24
@"NSDate"
@56@0:8{CLLocationCoordinate2D=dd}16d32@40@48
@52@0:8{CLLocationCoordinate2D=dd}16d32@40B48
@84@0:8{CLLocationCoordinate2D=dd}16d32i40B44B48@52@60B68B72B76B80
@100@0:8{CLLocationCoordinate2D=dd}16d32i40B44B48@52@60B68B72B76B80@84@92
v44@0:8@16@24@32B40
@36@0:8@16S24@28
@40@0:8@16S24S28@32
@44@0:8@16S24S28@32B40
c16@0:8
@64@0:8@16@24@32q40d48q56
@72@0:8@16@24@32q40d48q56d64
@"CLBeaconInternal"
@32@0:8d16@24
{?=d}16@0:8
v64@0:8{?=d}16
{?=[4]}16@0:8
v144@0:8{?=[4]}16
{?=[6[6f]]}16@0:8
v160@0:8{?=[6[6f]]}16
@"_CLVLLocalizationDebugInfo"
{?="coordinate""horizontalAccuracy"d}
{?="columns"[4]}
{?="v"[6[6f]]}
v44@0:8@16@24C32@36
v44@0:8@16q24q32C40
v24@0:8@"NSURL"16
v24@0:8@"CLVisit"16
v24@0:8@"CLLocation"16
v32@0:8@"NSString"16@?<v@?@"NSDictionary">24
v44@0:8@"NSString"16@"NSString"24C32@"CLLocation"36
v44@0:8@"NSString"16q24q32C40
@28@0:8@16S24
@32@0:8@16S24S28
v32@0:8@"NSDictionary"16@?<v@?>24
@32@0:8{?=dd}16
{?="trueHeading"d"timestamp"d}
@48@0:8{?=dddd}16
{?="speed"d"timestamp"d"machContinuousTime"d"machAbsoluteTime"d}
@72@0:8{CLLocationCoordinate2D=dd}16d32@40@48@56@64
@64@0:8{CLLocationCoordinate2D=dd}16d32@40@48@56
@"_CLPlaceInference"
@"<GEOMapServiceTicket>"
v36@0:8@16B24@?28
v40@0:8@16d24@?32
v44@0:8@16d24B32@?36
v52@0:8@16@24d32B40@?44
@"CLGeocoderInternal"
@24@0:8r^{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16
v200@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@?192
v28@0:8B16@?20
v48@0:8d16@24@32@?40
v48@0:8B16i20@24@32@?40
v56@0:8{?=[8I]}16@?48
v48@0:8@16@24Q32@?40
v80@0:8@16d24d32d40i48i52@56@64@?72
v60@0:8@16i24i28i32@36@44@?52
v52@0:8B16@20@28@36@?44
v48@0:8@16@24B32B36@?40
v32@0:8I16B20@?24
v28@0:8I16@?20
v40@0:8@16i24i28@?32
v84@0:8B16@20@28{?=[8I]}36B68B72@?76
v28@0:8f16@?20
v28@0:8i16@?20
v44@0:8i16@20@28@?36
v64@0:8i16i20@24@32@40@48@?56
v44@0:8B16@20@28@?36
v64@0:8@16@24@32@40d48d56
v24@0:8@?<v@?@"NSError"@"NSArray">16
v24@0:8@?<v@?@"NSError"@"NSString">16
v24@0:8@?<v@?@"NSError"@"NSDictionary">16
v40@0:8@"NSString"16@"NSData"24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSError"@"NSData">24
v200@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@?<v@?@"NSError"@"NSString">192
v28@0:8B16@?<v@?@"NSError">20
v24@0:8@?<v@?@"NSError">16
v48@0:8@"NSString"16@"NSString"24@"NSData"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError"@"NSData">32
v48@0:8d16@"NSString"24@"NSString"32@?<v@?@"NSError"d>40
v48@0:8B16i20@"NSString"24@"NSString"32@?<v@?@"NSError">40
v24@0:8@?<v@?@"NSError"B>16
v24@0:8@?<v@?@"NSError"i>16
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError"i>32
v56@0:8{?=[8I]}16@?<v@?@"NSError"i>48
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError"B>32
v32@0:8@"NSString"16@?<v@?@"NSError">24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError"@"NSDictionary">32
v48@0:8@"NSString"16@"NSString"24Q32@?<v@?@"NSError"B>40
v80@0:8@"NSString"16d24d32d40i48i52@"NSString"56@"NSString"64@?<v@?@"NSError">72
v60@0:8@"NSString"16i24i28i32@"NSString"36@"NSString"44@?<v@?@"NSError">52
v52@0:8B16@"NSString"20@"NSString"28@"NSString"36@?<v@?@"NSError">44
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v48@0:8@"NSString"16@"NSString"24B32B36@?<v@?@"NSError"{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}>40
v48@0:8@"NSString"16@"NSString"24@"CLLocation"32@?<v@?@"NSError"{?=dddi}>40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v40@0:8@"NSData"16@"NSUUID"24@?<v@?@"NSError">32
v24@0:8@?<v@?@"NSError"@"NSData">16
v32@0:8I16B20@?<v@?@"NSError">24
v28@0:8I16@?<v@?@"NSError"B>20
v40@0:8@"NSData"16i24i28@?<v@?@"NSError">32
v32@0:8@"NSData"16@?<v@?@"NSError">24
v84@0:8B16@"NSString"20@"NSString"28{?=[8I]}36B68B72@?<v@?@"NSError">76
v28@0:8f16@?<v@?@"NSError"@"NSData">20
v28@0:8i16@?<v@?@"NSError">20
v44@0:8i16@"NSString"20@"NSString"28@?<v@?@"NSError">36
v64@0:8i16i20@"NSString"24@"NSString"32@"NSString"40@"NSString"48@?<v@?@"NSError">56
v44@0:8B16@"NSString"20@"NSString"28@?<v@?@"NSError">36
v24@0:8@?<v@?@"NSError"QQ>16
v40@0:8@"NSString"16@"NSString"24@"NSDictionary"32
v64@0:8@"NSDictionary"16@"NSDictionary"24@"NSArray"32@"NSArray"40d48d56
C40@0:8C16i20r^{__CFString=}24r^{__CFString=}32
C40@0:8^i16r^{__CFString=}24r^{__CFString=}32
v32@0:8r^{__CFString=}16r^{__CFString=}24
r^{__CFDictionary=}16@0:8
r^{__CFArray=}16@0:8
r^{__CFString=}16@0:8
v32@0:8r^{__CFString=}16r^v24
r^v24@0:8r^{__CFString=}16
C24@0:8*16
@20@0:8C16
@40@0:8@16@24^@32
d40@0:8d16@24@32
C56@0:8^i16{?=[8I]}24
C40@0:8*16r^{__CFString=}24r^{__CFString=}32
C24@0:8r^{__CFString=}16
r^{__CFDictionary=}32@0:8r^{__CFString=}16r^{__CFString=}24
B48@0:8@16@24Q32^@40
B80@0:8@16d24d32d40i48i52@56@64^@72
B60@0:8@16i24i28i32@36@44^@52
B52@0:8B16@20@28@36^@44
B48@0:8@16@24@32^@40
C48@0:8r^{__CFString=}16r^{__CFString=}24C32C36^{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}40
C48@0:8r^{__CFString=}16r^{__CFString=}24@32^{?=dddi}40
v36@0:8^{?=Qdddd}16i24i28i32
v24@0:8^{?=dii}16
C24@0:8B16I20
C28@0:8^B16I24
C28@0:8^{?=idd(?={?={?=fff}{?=fff}}{?=B[282c]})}16f24
C76@0:8C16r^{__CFString=}20r^{__CFString=}28{?=[8I]}36C68C72
C56@0:8i16i20r^{__CFString=}24r^{__CFString=}32r^{__CFString=}40r^{__CFString=}48
C20@0:8i16
C36@0:8i16r^{__CFString=}20r^{__CFString=}28
C36@0:8r^{__CFString=}16r^{__CFString=}24C32
C24@0:8^i16
C32@0:8^Q16^Q24
v24@0:8Q16
@"CLLocation"
@"NSDictionary"
@"CLRegion"
@"NSArray"
@"GEOMapItemStorage"
@"NSTimeZone"
@72@0:8@16@24@32@40Q48@56@64
v32@0:8@?16@24
@"CLPlacemarkInternal"
@32@0:8Q16d24
@32@0:8{CLLocationCoordinate2D=dd}16
d32@0:8{CLLocationCoordinate2D=dd}16
B40@0:8{CLLocationCoordinate2D=dd}16^d32
v24@0:8@"PBCodable"16
v24@0:8@?<v@?@"NSDictionary">16
@32@0:8r^v16Q24
^{?=ISSSSSSCC}
v28@0:8B16Q20
Q24@0:8@16
v36@0:8Q16B24@28
v36@0:8Q16i24@28
v48@0:8@16@24@32@40
@"<CLFindMyAccessoryFirmwareUpdateDelegate>"
@64@0:8d16d24d32d40d48Q56
@72@0:8Q16Q24@32@40d48@56@64
@"CLPlacemark"
@60@0:8{CLLocationCoordinate2D=dd}16d32@40@48i56
@96@0:8{CLLocationCoordinate2D=dd}16d32i40B44@48@56B64B68B72B76@80@88
@24@0:8i16i20
@56@0:8d16d24d32d40i48i52
@104@0:8d16d24d32d40d48d56d64d72d80d88d96
@156@0:8B16B20B24B28B32B36B40B44B48B52B56B60i64i68i72i76i80i84i88i92i96i100i104i108i112d116d124d132d140d148
@72@0:8@16@24@32@40@48@56@64
@"CLRacingRouteVariables"
@"CLRacingRouteState"
@"CLRouteBoundingBox"
@36@0:8@16I24S28S32
@192@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16
@200@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@192
@720@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16{?=dddddfffBi{?=dd}diiB{?=ddBBidqddd}{?={?=iddddd{?=dd}dd}iQiiiidB}{?=dd}if{?=dd}ddiBddddddddBB{?=dd}diddddiddi}192
@728@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16{?=dddddfffBi{?=dd}diiB{?=ddBBidqddd}{?={?=iddddd{?=dd}dd}iQiiiidB}{?=dd}if{?=dd}ddiBddddddddBB{?=dd}diddddiddi}192@720
@216@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@192d200@208
@292@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@192d200@208@216@224d232d240d248d256i264d268d276@284
@300@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@192d200@208@216@224d232d240d248d256i264d268d276@284@292
@"CLLocationMatchInfo"
@"_CLLocationGroundAltitude"
@"_CLLocationFusionInfo"
@"CLLocationTrackRunInfo"
@"CLLocationGnssOdometerInfo"
@24@0:8q16
@24@0:8B16B20
@108@0:8{CLLocationCoordinate2D=dd}16d32d40d48d56d64d72d80@88i96@100
@64@0:8{CLLocationCoordinate2D=dd}16d32d40d48@56
@80@0:8{CLLocationCoordinate2D=dd}16d32d40d48d56d64@72
@96@0:8{CLLocationCoordinate2D=dd}16d32d40d48d56d64d72d80@88
@104@0:8{CLLocationCoordinate2D=dd}16d32d40d48d56d64d72d80@88@96
{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@0:8
@24@0:8d16
@256@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@192d200@208@216@224d232d240@248
@208@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@192d200
@28@0:8q16B24
@"CLEmergencyLocationUsabilityCriteria"
v40@0:8@16q24@32
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
@32@0:8r*16@24
^{CLAssertionInternal=@^{CLConnectionClient}}
@32@0:8Q16@24
v32@0:8Q16C24S28
@"NSMutableData"
@60@0:8d16d24d32d40d48i56
Q40@0:8Q16Q24Q32
{CLRacingRoute="fDistanceCalculator"{CLDistanceCalc="fM"d"fN"d"fRefLatRads"d"fRefLatDegs"d"fCosRefLat"d}"fSignalEnvironmentType"i"fWorkoutActivity"i"fRoutePoints"@"NSMutableArray""fRouteBoundingBox"{RouteBoundingBox="fMinLatitude_deg"d"fMaxLatitude_deg"d"fMinLongitude_deg"d"fMaxLongitude_deg"d"fRows"i"fColumns"i}"fRouteMatrixIndexVec"{vector<std::vector<std::pair<int, int>>, std::allocator<std::vector<std::pair<int, int>>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<std::pair<int, int>> *, std::allocator<std::vector<std::pair<int, int>>>>="__value_"^v}}"fRaceStartPointOnCurrentRoute"{RacingRouteState="fLatitude_deg"d"fLongitude_deg"d"fAltitude_m"d"fOdometer_m"d"fTimestamp_s"d"fTimeSinceStartOfRace_s"d"fOffRouteTraveledTime_s"d"fDistanceSinceStartOfRace_m"d"fOffRouteTraveledDistance_m"d"fAveragePace_s_per_m"d"fDistanceAlongReferenceRoute_m"d}"fRaceStartPointOnReferenceRoute"{RacingRouteState="fLatitude_deg"d"fLongitude_deg"d"fAltitude_m"d"fOdometer_m"d"fTimestamp_s"d"fTimeSinceStartOfRace_s"d"fOffRouteTraveledTime_s"d"fDistanceSinceStartOfRace_m"d"fOffRouteTraveledDistance_m"d"fAveragePace_s_per_m"d"fDistanceAlongReferenceRoute_m"d}"fLastOnRouteDataPoint"{RacingRouteState="fLatitude_deg"d"fLongitude_deg"d"fAltitude_m"d"fOdometer_m"d"fTimestamp_s"d"fTimeSinceStartOfRace_s"d"fOffRouteTraveledTime_s"d"fDistanceSinceStartOfRace_m"d"fOffRouteTraveledDistance_m"d"fAveragePace_s_per_m"d"fDistanceAlongReferenceRoute_m"d}"fLastProjectedDataPoint"{RacingRouteState="fLatitude_deg"d"fLongitude_deg"d"fAltitude_m"d"fOdometer_m"d"fTimestamp_s"d"fTimeSinceStartOfRace_s"d"fOffRouteTraveledTime_s"d"fDistanceSinceStartOfRace_m"d"fOffRouteTraveledDistance_m"d"fAveragePace_s_per_m"d"fDistanceAlongReferenceRoute_m"d}"fRoutePointsArrayInitialized"B"fRecoveryMode"B"fRaceStartPointDetected"B"fRaceEndPointDetected"B"fUserIsOffRoute"B"fProjectedOnNearestPoint"B"fRaceSessionExpired"B"fRollingBufferReachedEndOfReferenceRoute"B"fRouteConfigurationSuccessful"B"fRacingRouteAnalyticsSent"B"fPrematureRaceEndDetected"B"fReferenceRouteTotalLengthDetermined"B"fLocationPointIsOutsideOfAcceptedRange"B"fLocationPointNotMatched"B"fRoutePointsBufferSize"i"fNumberOfRoutePointsToAdd"i"fOffRouteGraceDuration_s"i"fMatchedPointCounter"i"fReferenceRouteDataPointCounter"i"fCurrentRouteDataPointCounter"i"fOffRouteDataPointCounter"i"fInutileDataPointCounter"i"fRollingBufferUpdateCounter"i"fLastMatchedPointIndex"i"fLastMatchedPointIndexOnReferenceRoute"i"fRollingBufferStartIndexOnReferenceRoute"i"fMatrixCellIndexForLastMatchedPoint"i"fRaceStartLineProximityIndex"i"fReferenceRouteTotalLength_m"d"fTimestampOfLastMatchedPointOnReferenceRoute_s"d"fRegisteredTimeAtThresholdDistance_s"d"fEndOfRaceTimeThreshold_s"d"fNearestNeighborMaximumAcceptedDistance_m"d}
@56@0:8@16@24@32@40B48B52
@"_CLRangingPeer"
@52@0:8@16@24@32@40B48
B48@0:8Q16r^f24r^d32r^i40
B72@0:8Q16r^f24Q32r*40r^s48r^f56r^s64
B56@0:8Q16r^i24r^f32r^f40r^f48
^d16@0:8
v24@0:8r^d16
^f16@0:8
^i16@0:8
*16@0:8
^s16@0:8
[6d]
[3[3d]]
[3d]
@48@0:8d16d24d32d40
@40@0:8@16d24d32
@"_CLLSLLocationCoordinate"
@"_CLLSLMapRoadSegment"
{?=[3]}16@0:8
v112@0:8{?=[3]}16
16@0:8
v48@0:816
@"_CLLSLLocation"
@"_CLLSLHeadingSupplInfo"
{?="columns"[3]}
{?=QCCCCCCCCCCC}16@0:8
v40@0:8{?=QCCCCCCCCCCC}16
v80@0:8{?=[4]}16
v64@0:8{?=[3]}16
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
{CGSize="width"d"height"d}
{?="stateLengthInBytes"Q"stateLength"C"orientationOffset"C"orientationLength"C"gyroBiasOffset"C"gyroBiasLength"C"velocityOffset"C"velocityLength"C"accelBiasOffset"C"accelBiasLength"C"positionOffset"C"positionLength"C}
{?="covarianceSizeInBytes"Q"covarianceSize"C"orientationCovOffset"C"orientationDof"C"gyroBiasCovOffset"C"gyroBiasDof"C"velocityCovOffset"C"velocityDof"C"accelBiasCovOffset"C"accelBiasDof"C"positionCovOffset"C"positionDof"C}
@"NSMutableDictionary"
@"_CLVLLocalizationMaps488Details"
@(#)PROGRAM:CoreLocation  PROJECT:CoreLocation-2785.1.32
33333
NSt3__120__shared_ptr_emplaceI19CLConnectionMessageNS_9allocatorIS1_EEEE
@<@A
MbP?=
u@-C
A@15CLNameValuePair
@10BasicMutex
5Mutex
11NonCopyable
N13CLPreferences10OtherPrefsE
13CLPreferences
14CLPlatformInfo
16CLDaemonSettings
NSt3__120__shared_ptr_pointerIP16CLDaemonSettingsN12_GLOBAL__N_112null_deleterENS_9allocatorIS1_EEEE
N12_GLOBAL__N_112null_deleterE
5CLLog
NSt3__120__shared_ptr_pointerIP19CLCircularLogBufferNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI19CLCircularLogBufferE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__114default_deleteI19CLCircularLogBufferEE
@10CLSettings
p@f@
@ffffff
sA-C
Zw+?(
Zwk?
xVXA
@xVXA
xVXA
@NSt3__120__shared_ptr_pointerIP35CLEmergencyLocationSelectorInternalZNS1_C1EP33CLEmergencyLocationSelectorConfigPU28objcproto17OS_dispatch_queue8NSObjectU13block_pointerFvP10CLLocationEE3$_0NS_9allocatorIS1_EEEE
ZN35CLEmergencyLocationSelectorInternalC1EP33CLEmergencyLocationSelectorConfigPU28objcproto17OS_dispatch_queue8NSObjectU13block_pointerFvP10CLLocationEE3$_0
u"A9CLLogBase
non-matching retain (%p) and release (%p) functions in context, ignoring
Failed to initilize fHeadingCalibrationDisplayMutex, error code: %{public}d
CL: CLClientCreateWithBundleIdentifierAndPath
{"msg%{public}.0s":"CLClientCreateWithBundleIdentifierAndPath", "event":%{public, location:escape_only}s, "effectiveBundleIdentifier":%{public, location:escape_only}@, "effectiveBundlePath":%{public, location:escape_only}@}
{"msg%{public}.0s":"client allocated", "client":"%{public}p"}
{"msg%{public}.0s":"client about to be destroyed", "client":"%{public}p"}
CLClient needs to be invalidated first before destroying.
{"msg%{public}.0s":"CLClient needs to be invalidated first before destroying.", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
client->fContext should be NULL
{"msg%{public}.0s":"client->fContext should be NULL", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Location callback block not executed in a timely manner!
Discarding message for event %{private}d because of too many unprocessed messages
received client will resign active notification
received client did become active notification
Invalid requested authorization: %{public}d
Missing UsageDescription key for requested authorization: %{public}d
CL: CLClientIsLocationServicesEnabled
{"msg%{public}.0s":"CLClientIsLocationServicesEnabled", "event":%{public, location:escape_only}s}
This method can cause UI unresponsiveness if invoked on the main thread. Instead, consider waiting for the `-locationManagerDidChangeAuthorization:` callback and checking `authorizationStatus` first.
#Warning CLInternalGetLocationServicesEnabled failed: could not reach daemon
CL: CLClientIsAuthorizationPromptMapDisplayEnabled
{"msg%{public}.0s":"CLClientIsAuthorizationPromptMapDisplayEnabled", "event":%{public, location:escape_only}s}
#Warning CLInternalGetAuthorizationPromptMapDisplayEnabled failed: could not reach daemon
{"msg%{public}.0s":"invalidating client", "client":"%{public}p"}
CLClient is deprecated. Will be obsolete soon. (%{public}s)
{"msg%{public}.0s":"#NullIsland Received a latitude or longitude from getLocationForBundleID that was exactly zero", "latIsNonzero":%{public}hhd, "lonIsNonzero":%{public}hhd, "hAcc":"%{public}f", "location":%{private, location:CLClientLocation}.*P}
{"msg%{public}.0s":"CLClientShowHeadingCalibration", "showHeadingCal":%{public}hhd, "isHeadingCalibrated":%{public}hhd, "isApplicationActive":%{public}hhd, "isUpdatingHeading":%{public}hhd}
Application inactive, will not show heading calibration
#transcriptSession reply for fetchTranscriptLocation is nil
#historicalLocations reply for fetchTranscriptLocation is nil
Fence: CLClientRequestRegionState, unsupported fence type, %{private}d
{"msg%{public}.0s":"Unable to get vertices from encoded data", "error":%{public, location:escape_only}@}
Unable to get vertices from encoded data
Number of vertices received doesn't match stored, %{public}d, %{public}lu
Number of vertices received invalid, %{public}d, internal
Copied %{private}d vertices
{"msg%{public}.0s":"#Warning Client is subject to corrective compensation, but hasn't been updated to find out about it yet"}
kCLConnectionMessageAutomaticPromptingEnabled is not supported
Invalid call to CLClientGetAutopauseState
malformed message: kCLConnectionMessageAutopauseStatus
CL: _CLClientCreateConnection
{"msg%{public}.0s":"_CLClientCreateConnection", "event":%{public, location:escape_only}s, "client":"%{public}p"}
CL: CLClientInterruptionHandler
{"msg%{public}.0s":"CLClientInterruptionHandler", "event":%{public, location:escape_only}s, "client":"%{public}p"}
Got unhandled message %s from daemon
{"msg%{public}.0s":"Unable to encode vertices for polygonal region"}
Unable to encode vertices for polygonal region
{"msg%{public}.0s":"#location #routine sendLocations to RT, didUpdateLocations)"}
{"msg%{public}.0s":"#location #routine sendLocations to RT, not respondsToSelector @selector(locationManager:didUpdateLocations:)"}
{"msg%{public}.0s":"#location #routine sendLocations to RT, didUpdateLocations:withReply"}
{"msg%{public}.0s":"#location #routine sendLocations to RT, not respondsToSelector @selector(locationManager:didUpdateLocations:completion:)"}
{"msg%{public}.0s":"#location #routine createConnection"}
{"msg%{public}.0s":"Non-specific CLEmergencyEnablementAssertion is no longer supported #CLEEA"}
Non-specific CLEmergencyEnablementAssertion is no longer supported #CLEEA
Already in a transaction. LocationManager threading bug?
{"msg%{public}.0s":"Already in a transaction. LocationManager threading bug?", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "new":%{public, location:_CLLocationManagerStateTrackerState}.*P}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "old":"%{public}p", "new":"%{public}p"}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "old":"%{public}f", "new":"%{public}f"}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "old":%{public}hhd, "new":%{public}hhd}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "old":%{public, location:CLClientAuthorizationStatus}lld, "new":%{public, location:CLClientAuthorizationStatus}lld}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "old":%{public, location:CLActivityType}lld, "new":%{public, location:CLActivityType}lld}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "old":%{public, location:CLAutoPause}lld, "new":%{public, location:CLAutoPause}lld}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "old":%{public, location:_CLLocationManagerStateTrackerState}.*P, "new":%{public, location:_CLLocationManagerStateTrackerState}.*P}
{"msg%{public}.0s":"state dump failure", "expected_size":%{public}lld, "provided_size":%{public}lld}
state dump failure
#Warning Has lingering peer ranging request
CL: CLLocationManager
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "identifier":%{public, location:escape_only}@, "bundlePath":%{public, location:escape_only}s}
initializing CLLocationManager with a nil websiteIdentifier
delegate and queue must not be nil
{"msg%{public}.0s":"delegate and queue must not be nil", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
initializing CLLocationManager with a nil identifier
initializing CLLocationManager with a nil bundle path
initializing CLLocationManager with a nil limiting identifier
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p"}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "delegate":"%{public}p"}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "distance":"%{public}f"}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "accuracy":"%{public}f"}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "pausesLocationUpdatesAutomatically":%{public}hhd}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "allows":%{public}hhd}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "shows":%{public}hhd}
{"msg%{public}.0s":"#NullIsland Either the latitude or longitude was exactly 0! That's highly unlikely: refreshing property", "latIsNonzero":%{public}hhd, "lonIsNonzero":%{public}hhd}
{"msg%{public}.0s":"We have a valid, cached location. Fetching from internal state", "location":%{private, location:CLClientLocation}.*P}
{"msg%{public}.0s":"No valid, cached location. Fetched from daemon", "location":%{private, location:CLClientLocation}.*P}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "supportInfo":%{public}hhd}
Obsolete
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "privateMode":%{public}hhd}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "purpose":%{private, location:escape_only}@}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "activityType":%{public, location:CLActivityType}lld}
Client,%s,setActivityType,%ld
Client,%s,setActivityType,allowing map correction
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "bundleID":%{public, location:escape_only}s}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "bundlePath":%{public, location:escape_only}s}
Canceling requestLocation
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@}
Ignoring requestLocation due to ongoing location.
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "distance":"%{public}f", "timeout_s":"%{public}.09f"}
Canceling requestLocation.
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "filter":"%{public}f"}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "orientation":%{public, location:CLDeviceOrientation}lld}
heading, %{private}s
Start updating heading. HeadingFilter, %{public}.2f
Stop updating heading
Dismissing Compass Calibration HUD
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "region":%{private, location:escape_only}@}
{"msg%{public}.0s":"Region is nil"}
Region is nil
Number of vertices %{public}lu
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "region":%{private, location:escape_only}@}
{"msg%{public}.0s":"Cannot start ranging beacons on behalf of another app", "onBehalfOf":%{public, location:escape_only}s}
Cannot start ranging beacons on behalf of another app
{"msg%{public}.0s":"Region is not an instance of CLBeaconRegion"}
Region is not an instance of CLBeaconRegion
{"msg%{public}.0s":"Cannot stop ranging beacons on behalf of another app", "onBehalfOf":%{public, location:escape_only}s}
Cannot stop ranging beacons on behalf of another app
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "constraint":%{private, location:escape_only}@}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "constraint":%{private, location:escape_only}@}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "peers":%{private, location:escape_only}@, "timeout_s":"%{public}.09f"}
WRTT: received requestRangingToPeers, timeout, %{public}lf
#Warning Ignoring requestRangingToPeers due to ongoing ranging
WRTT: received respondToRangingFromPeers, timeout, %{public}lf
#Warning Ignoring respondToRangingFromPeers due to ongoing ranging.
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "peers":%{private, location:escape_only}@, "interval":%{public}lld}
WRTT: received startRangingToPeers, interval, %{public}lu
#Warning Ignoring startRangingToPeers due to ongoing ranging
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "peers":%{private, location:escape_only}@}
WRTT: received stopRangingToPeers
WRTT: received startRangingFromPeers
#Warning Ignoring startRangingFromPeers due to ongoing ranging
WRTT: received stopRangingFromPeers
{"msg%{public}.0s":"received internal version get request"}
{"msg%{public}.0s":"received request to export copy of MiLo DB tables"}
{"msg%{public}.0s":"LocationManager, Could not export MicroLocation database tables", "error":%{private, location:escape_only}@}
LocationManager, Could not export MicroLocation database tables
{"msg%{public}.0s":"received request to get per anchor per cluster measured value statistics"}
{"msg%{public}.0s":"LocationManager, couldn't export per anchor per cluster measured value statistics", "error":%{private, location:escape_only}@}
{"msg%{public}.0s":"received localization scan request"}
{"msg%{public}.0s":"received recording scan request", "forced:":%{public}hhd}
{"msg%{public}.0s":"received truth label donation request for a recording trigger"}
{"msg%{public}.0s":"received truth label donation request between Dates"}
{"msg%{public}.0s":"received request to purge semi-supervised models"}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate - request timeout", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "location":%{private, location:CLClientLocation}.*P}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate - request timeout", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@}
{"msg%{public}.0s":"-onClientEvent:supportInfo:", "event":%{public, location:CLClientEvent}lld, "data":%{private, location:escape_only}@}
could not get updated authorization status
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "approved":%{public}hhd}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "authorizationStatus":%{public, location:CLClientAuthorizationStatus}lld, "limitsPrecision":%{public}hhd, "isAuthorizedForWidgetUpdates":%{public}hhd}
Location event received with empty payload
New location is identical to old location; discarding
New location predates old location, and the event types differ; discarding
{"msg%{public}.0s":"#CLLocationManager invoking #delegate - invalid location", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@}
{"msg%{public}.0s":"#NullIsland onClientEventLocation:forceMapMatching: got a latitude or longitude that was exactly zero", "latIsNonzero":%{public}hhd, "lonIsNonzero":%{public}hhd, "location":%{private, location:CLClientLocation}.*P}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "location":%{private, location:CLClientLocation}.*P, "eventType":%{public, location:escape_only}@}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate - location unavailable", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@}
could not get updated heading
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "heading":%{public, location:escape_only}@}
CL: Invoking Compass Calibration HUD
Could not show heading calibration
in onClientEventPlaceInferenceResult for CLPlaceInferenceSubscription
{"msg%{public}.0s":"Got a place inference result without a result!?"}
Got a place inference result without a result!?
in onClientEventPlaceInferenceError for CLPlaceInferenceSubscription
{"msg%{public}.0s":"Got a place inference error without an error!?"}
Got a place inference error without an error!?
{"msg%{public}.0s":"#Warning Got place inference result without a handler block"}
could not get error
{"msg%{public}.0s":"Location access was denied; bailing early cancelling requestLocation"}
{"msg%{public}.0s":"Location access was denied; but not bailing early"}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "error":%{public, location:escape_only}@}
could not get region monitoring event
{"msg%{public}.0s":"Fence: onClientEventRegion, unable to fetch region"}
Fence: onClientEventRegion, unable to fetch region
{"msg%{public}.0s":"Delivering region monitoring event, no delegate", "self":"%{public}p"}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "region":%{private, location:escape_only}@, "state":%{public, location:CLRegionState}lld}
could not get the region state
{"msg%{public}.0s":"Fence: onClientEventRegionState, unknown region type", "regionType":%{public, location:CLClientRegionType}lld}
Fence: onClientEventRegionState, unknown region type
{"msg%{public}.0s":"#Warning Fence: onClientEventRegionState, unknown state", "regionState":%{public, location:CLClientRegionState}lld}
{"msg%{public}.0s":"Delivering region monitoring state request, no delegate", "self":"%{public}p"}
{"msg%{public}.0s":"Fence: onClientEventRegionError, unknown region type", "regionType":%{public, location:CLClientRegionType}lld}
Fence: onClientEventRegionError, unknown region type
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "region":%{private, location:escape_only}@, "error":%{public, location:escape_only}@}
{"msg%{public}.0s":"Delivering region monitoring failure, no delegate", "self":"%{public}p"}
could not get ranged beacons
Client beacon is invalid (count,%lu).
could not get ranging error
{"msg%{public}.0s":"Delivering range error to client's delegate", "self":"%{public}p", "delegate":"%{public}p"}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "constraint":%{private, location:escape_only}@, "error":%{public, location:escape_only}@}
WRTT: received onClientEventPeerRanging
WRTT: received onClientEventPeerRangingRequestProcessed
WRTT: received onClientEventPeerRangingError
could not get updated paused state
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "duration_s":"%{public}.09f"}
{"msg%{public}.0s":"Delivering region monitoring watchdog, no delegate", "self":"%{public}p"}
{"msg%{public}.0s":"Client region type is not supported.
", "regionType":%{public, location:CLClientRegionType}lld}
Client region type is not supported.
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "notification":%{private, location:escape_only}@}
could not get batch result
Finished deferred updates: %s
could not get updated vehicle speed
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "vehicleSpeed":%{public, location:escape_only}@}
could not get updated vehicle heading
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "vehicleHeading":%{public, location:escape_only}@}
{"msg%{public}.0s":"#CLLocationManager invoking #delegate", "self":"%{public}p", "delegate":"%{public}p", "selector":%{public, location:escape_only}@, "visit":%{private, location:escape_only}@}
{"msg%{public}.0s":"Unarchiver error in -[CLLocationManager onClientEventSignificantLocationVisit:]", "error":%{public, location:escape_only}@}
Unarchiver error in -[CLLocationManager onClientEventSignificantLocationVisit:]
{"msg%{public}.0s":"Processing Significant Location Visit State Request Event", "self":"%{public}p", "delegate":"%{public}p"}
{"msg%{public}.0s":"isAuthorizedForPreciseLocation is deprecated and will be removed in the next seed. use accuracyAuthorization"}
isAuthorizedForPreciseLocation is deprecated and will be removed in the next seed. use accuracyAuthorization
{"msg%{public}.0s":"Requesting when in use authorization"}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "SEL":%{public, location:escape_only}s}
{"msg%{public}.0s":"Requesting always authorization"}
{"msg%{public}.0s":"Requesting temporary accuracy increase"}
{"msg%{public}.0s":"requestTemporaryPreciseLocationAuthorizationWithPurposeKey is deprecated and will be removed in the next seed. use requestTemporaryFullAccuracyAuthorizationWithPurposeKey"}
requestTemporaryPreciseLocationAuthorizationWithPurposeKey is deprecated and will be removed in the next seed. use requestTemporaryFullAccuracyAuthorizationWithPurposeKey
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "enabled":%{public}hhd}
must pass handler to dumpDiagnosticFilesWithHandler
{"msg%{public}.0s":"must pass handler to dumpDiagnosticFilesWithHandler", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
dumpDiagnosticFiles called, trying to make an xpc call
#diagnosticManager failed to get remoteObjectProxy with error %@
#diagnosticManager error copying files: %@
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "isActuallyAWatchKitExtension":%{public}hhd}
Start updating vehicle speed
Stop updating vehicle speed
Start updating vehicle heading
Stop updating vehicle heading
#slv: Request visit state
Setup PlaceInferences common logic
Start oneshot PlaceInferences
Start continuous PlaceInferences
Stop continuous PlaceInferences
Widget has NSWidgetWantsLocation key in its Info.plist
{"msg%{public}.0s":"#Warning widget is missing NSWidgetWantsLocation key in its Info.plist"}
Encoded coarse meta data found
CLLocationManager should not get multile locations with coarseMetaData
#Warning Changing CLCommon's runloop after it was already established
#Warning Setting CLCommon's runloop after it was already established
CLCommonSetRunLoop, %p
cannot open source file: %{public}s, errno %{public}d
cannot open target file: %{public}s, errno %{public}d
error reading source file: %{public}s
error writing target file: %{public}s
cannot open compression stream: %{public}s, bzerror %{public}d
error writing target file: %{public}s, bzerror: %{public}d
error closing target file: %{public}s, bzerror: %{public}d
CLCommonCompareLocationEqualityClient compared two coordinates that were identical other than their reference frames: (%lf, %lf, %d) (%lf, %lf, %d)
{"msg%{public}.0s":"Bundle for LocationdInternalSystemService not marked as SystemService", "bundle":%{public, location:escape_only}s, "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Bundle for LocationdInternalSystemService not marked as SystemService
{"msg%{public}.0s":"Assertion failed", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Assertion failed
os_transaction created: (%p) %@
os_transaction releasing: (%p) %@
Please update userSpecificPlaceTypeFromRTUserType
Please update placeInferencePlaceTypeFromRTPlaceType
WMM initialization encountered an error
WMM evaluation encountered an error
geomagnetic model invalid near poles (%f, %f, %f)
could not open geomagnetic data file %s (%{public}s)
geomagnetic data file appears to be empty
geomagnetic data file appears to have invalid dimensions
supplied date (%{public}f) outside valid range (epoch=%{public}f)
#clgda,client,CLGnssDisablementAssertionInternal,name,%s,dict,%@
#clgda,client,#warning,unexpected message,%s
#clgda,client,message,%s
#clgda,#warning,client,noRegisteredCallback
#clgda,client,~CLGnssDisablementAssertionInternal()
{"msg%{public}.0s":"#clgda,client,reason missing"}
#clgda,client,reason missing
{"msg%{public}.0s":"#clgda,client,bundleID or bundlePath needed"}
#clgda,client,bundleID or bundlePath needed
{"msg%{public}.0s":"#clgda,client,nil callback queue"}
#clgda,client,nil callback queue
{"msg%{public}.0s":"#clgda,client,nil callback block"}
#clgda,client,nil callback block
#clgda,client,newAssertionForBundleIdentifier
#clgda,client,newAssertionForBundle
Got Reply: message: %s
Connection to locationd interrupted!!
{"msg%{public}.0s":"#durian handling message to client", "message":%{public, location:escape_only}s, "beaconUUID":%{private, location:escape_only}@, "error":%{private, location:escape_only}@}
{"msg%{public}.0s":"#durian #hawkeye got fragment", "opcode":%{private}u, "dataFragment":%{private, location:escape_only}@}
{"msg%{public}.0s":"#durian #hawkeye error appending fragment", "opcode":%{private}u, "dataFragment":%{private, location:escape_only}@}
#durian #hawkeye error appending fragment
{"msg%{public}.0s":"#durian #client client received advertisement", "uuid":%{private, location:escape_only}@, "address":%{private, location:escape_only}@, "advertisementData":%{private, location:escape_only}@, "scanDate":%{private, location:escape_only}@, "status":%{private}u, "rssi":%{private}ld, "reserved":%{private, location:escape_only}@}
{"msg%{public}.0s":"didFetchStatusOfUTEnablementRequirements"}
#durian Got a message we do not understand... dropping!
{"msg%{public}.0s":"#durian #hawkeye clearing fragments from accumulator", "uuid":%{private, location:escape_only}@}
{"msg%{public}.0s":"#durian client sending message", "messageName":%{public, location:escape_only}s, "beaconUUID":%{public, location:escape_only}s}
{"msg%{public}.0s":"#durian client sending message", "messageName":%{public, location:escape_only}s}
{"msg%{public}.0s":"#durian Client requested scan for nearby owner"}
{"msg%{public}.0s":"#durian Client requested scan for HELE"}
{"msg%{public}.0s":"#durian Client requested scan for nearby devices long"}
{"msg%{public}.0s":"#durian Client requested stop to scan for nearby devices long"}
Init Ranging on device: %@
Deinit Ranging on device: %@
Configure Ranging on device: %@
Prepare Ranging on device: %@
Start Ranging on device: %@
Stop Ranging on device: %@
Start EventCounter on device: %@
Stop EventCounter on device: %@
#clreg,addConfigForIso,%s
#clreg,addConfigForCircularRegion,%.6f,%.6f,%.2f
#clreg,#warning,addConfigForIsoList,invalidArgs,ignoring
#clreg,#warning,addConfigForIsoList,emptyIso,ignoring
#clreg,#warning,addConfigForCircularRegionList,invalidArgs,ignoring
#clreg,#warning,addConfigForCircularRegionList,invalidRadius,ignoring
#clreg,fetchRAEConfig,%{private}.6f,%{private}.6f,%{private}.2f,distToLocation,%{private}2.f,result,found
#clreg,completionCallback,%{private}@,nil,nil
#clreg,fetchRAEConfig,%{private}.6f,%{private}.6f,%{private}.2f,distToLocation,%{private}2.f,result,notFound
#clreg,fetchRAEConfig,no RAEs matched
#clreg,completionCallback,default,nil,nil
#clreg,completionCallback,%{private}@,%{private}@,nil
#clreg,#map,query,lla,%{private}.6f,lon,%{private}.6f,accuracy,%{private}.2f
#clreg,#map,response,#warning,error,%@
#clreg,#map,response,#warning,results,Nil
#clreg,#map,response,#warning,invalidResultEntry,ignoring
#clreg,#map,response,disputed,first,%{private}s,interested,%@
#clreg,#map,response,disputed,next,%{private}s,interested,%@
#clreg,#map,response,nonDisputed,first,%{private}@
#clreg,#map,response,nonDisputed,next,%{private}@
#clreg,#warning,fetchIsoOrDefaultConfig,geoLocationAllocFailed
#clreg,cbLocation,iso,%{private}@,neighbors,%{private}@
#clreg,cbExtendedLocation,iso,%{private}@,neighbors,%{private}@
#clreg,cbWrapper,isoActual,%{private}@,neighborsWithinLocation,%{private}@,extendedNeighbors,%{private}@
#clreg,fetchConfigForLocation,#warning,location is nil
#clreg,fetchConfigForLocation,%{private}.6f,%{private}.6f,%{private}.2f
#clreg,fetchConfigForLocation,#warning,invalidAccuracy
#clreg,findRAEConfig,%{private}.6f,%{private}.6f,%{private}.2f,distToLocation,%{private}2.f,result,found
#clreg,findRAEConfig,%{private}.6f,%{private}.6f,%{private}.2f,distToLocation,%{private}2.f,result,notFound
#clreg,findRAEConfig,no RAEs matched
sendIsoInfoSync,region,%{private}@,neighbors,%{private}@
#clreg,invalidRegionType
#clreg,#map,response,lla,%{private}.6f,lon,%{private}.6f,accuracy,%{private}.2f,results,%{private}@
Invalid neighbor or excludeRegionName,%{private}@,%{private}@
#clreg,fetchInfoForLocation,#warning,location is nil
#clreg,fetchInfoForLocation,%{private}.6f,%{private}.6f,%{private}.2f
#clreg,fetchInfoForLocation,#warning,invalidAccuracy
CLRR,convertRouteDataToMatrix,input data array is null
CLRR,convertRouteDataToMatrix,input data array is empty
CLRR,convertRouteDataToMatrix,input data point is null at index,%{public}d
CLRR,convertRouteDataToMatrix,invalid coordinates,lat,%{private}.7lf,lon,%{private}.7lf,at index,%{public}d
CLRR,convertRouteDataToMatrix,invalid reference point,lat,%{private}.7lf,lon,%{private}.7lf,alt,%{private}.2lf,at index,%{public}d
CLRR,convertRouteDataToMatrix,raceStartLineProximityIndex,%{public}d
CLRR,convertRouteDataToMatrix,boxRows,%{public}d,boxColumns,%{public}d,boxMinLat,%{private}.7lf,boxMaxLat,%{private}.7lf,boxMinLon,%{private}.7lf,boxMaxLon,%{private}.7lf
CLRR,convertRouteDataToMatrix,time,%{public}.1lf,lat,%{private}.7lf,lon,%{private}.7lf,alt,%{private}.2lf,odom,%{public}.2lf,signalEnv,%{public}d,pointCount,%{public}d
CLRR,convertRouteDataToMatrix,invalid index for location,lat,%{private}.7lf,lon,%{private}.7lf
CLRR,updateScoreboard,null data point
CLRR,updateScoreboard,invalid data point,%{private}.7lf,%{private}.7lf,%{private}.7lf,%{private}.7lf
CLRR,updateScoreboard,null input data or segment point
CLRR,updateScoreboard,invalid input data or segment point,%{private}.7lf,%{private}.7lf,%{private}.7lf,%{private}.7lf,%{private}.7lf,%{private}.7lf
CLRR,updateScoreboard,invalid raceStartPointOnReferenceRoute,%{private}.7lf,%{private}.7lf
CLRR,updateScoreboard,invalid referenceState,%{private}.7lf,%{private}.7lf
CLRR,EvaluateProjectionStatus,user moved but its projection on reference route is same as before,skip this point,timestamp,%{private}.1lf
CLRR,EvaluateProjectionStatus,projection went backward,timestamp,%{private}.1lf
CLRR,updateDistanceAndAveragePace,DistanceAlongReferenceRoute passed upper threshold
CLRR,updateDistanceAndAveragePace,DistanceAlongReferenceRoute passed lower threshold
CLRR,findNearestPointIndex,invalid search range index,fromIndex,%{public}d,toIndex,%{public}d
CLRR,findNearestPointIndex,invalid coordinates,lat,%{private}.7lf,lon,%{private}.7lf
CLRR,findNearestPointIndex,reached end of reference route
CLRR,findNearestPointIndex,invalid search index,%{public}d,array size,%{public}lu
CLRR,findNearestPointIndex,start point is matched to reference head section,min distance,%{public}.2lf,index from start of reference route,%{public}d
CLRR,findNearestPointIndex,min distance,%{public}.2lf,index from start of search window,%{public}d
CLRR,updateSearchRange,empty matrix cell at index,%d,
CLRR,updateSearchRange,detected a short segment across the cell border,expanding the search range
CLRR,processLocationPoint,current data point is null
CLRR,processLocationPoint,input data array is null
CLRR,processLocationPoint,invalid matrix index
CLRR,processLocationPoint,failed to determine neighboring cells index
CLRR,processLocationPoint,unknown point type
CLRR,processLocationPoint,processing matrix cell index,%{public}d
CLRR,processLocationPoint,no points within the accepted distance in matrix cell index,%{public}d
CLRR,processLocationPoint,no matched point is found in the current or neighboring cells.Skip this point.
CLRR,processLocationPoint,index exceeded buffer range,last matched index,%{public}d,buffer size,%{public}d
CLRR,processLocationPoint,invalid raceStartLineProximityIndex,%{public}d
CLRR,processLocationPoint,user joined the race at a wrong location,lastMatchedPointIndex,%{public}d,raceStartLineProximityIndex,%{public}d
CLRR,processLocationPoint,invalid prematureRaceEndIndex,%{public}d
CLRR,processLocationPoint,race start point already detected,most recent matched point jumped from head to tail of the reference route,skip this data point to avoid premature race ending,reference route count,%{public}lu,premature race ending index,%{public}d,last matched index,%{public}d,matched index before update,%{public}d
CLRR,processLocationPoint,pointType,%{public}d,last matched index,%{public}d
CLRR,processLocationPoint,reached end of reference route
CLRR,processLocationPoint,end the race in %{public}.2lf seconds if it did not happen naturally
CLRR,processLocationPoint,too close to finish line,jump to the end of the reference route
CLRR,processLocationPoint,timeout,jump to the end of the reference route,current time,%{public}.2lf,registeredTimeAtThreshold,%{public}.2lf,endOfRaceTimeThreshold,%{public}.2lf
CLRR,processLocationPoint,failed to set the most recent point
CLRR,processLocationPoint,failed to process the most recent point,the matched point is too far away
CLRR,setLocationPoint,current data point is null
CLRR,setLocationPoint,input data array is null
CLRR,setLocationPoint,reached end of route
CLRR,setLocationPoint,index out of bounds,input array size,%{public}lu,index,%{public}d
CLRR,setLocationPoint,startOfArray,failed to convert LLA to ENU at index,%{public}d
CLRR,setLocationPoint,startOfArray,projectionOnNextSegment,failed to get projection ratio at index,%{public}d
CLRR,setLocationPoint,startOfArray,projectionOnNextSegment,failed to update scoreboard at index,%{public}d
CLRR,setLocationPoint,startOfArray,this matched point has already been the projected point,skip this point
CLRR,setLocationPoint,startOfArray,failed to update scoreboard at index,%{public}d
CLRR,setLocationPoint,endOfArray,failed to convert LLA to ENU at index,%{public}d
CLRR,setLocationPoint,endOfArray,projectionOnPreviousSegment,failed to get projection ratio at index,%{public}d
CLRR,setLocationPoint,endOfArray,projectionOnPreviousSegment,failed to update scoreboard at index,%{public}d
CLRR,setLocationPoint,endOfArray,this matched point has already been the projected point,skip this point
CLRR,setLocationPoint,endOfArray,failed to update scoreboard at index,%{public}d
CLRR,setLocationPoint,failed to convert LLA to ENU at index,%{public}d
CLRR,setLocationPoint,projectionOnBothSegments,wrt n1,failed to get projection ratio at index,%{public}d
CLRR,setLocationPoint,projectionOnBothSegments,wrt n0,failed to get projection ratio at index,%{public}d
CLRR,setLocationPoint,projectionOnBothSegments,pickedNearestPoint,this matched point has already been the projected point,skip this point
CLRR,setLocationPoint,projectionOnBothSegments,pickedNearestPoint,failed to update scoreboard at index,%{public}d
CLRR,setLocationPoint,projectionOnBothSegments,pickedNextSegment,failed to update scoreboard at index,%{public}d
CLRR,setLocationPoint,projectionOnBothSegments,pickedPreviousSegment,failed to update scoreboard at index,%{public}d
CLRR,setLocationPoint,projectionOnNearestPoint,this matched point has already been the projected point,skip this point
CLRR,setLocationPoint,projectionOnNearestPoint,failed to update scoreboard at index,%{public}d
CLRR,setLocationPoint,projectionOnNextSegment,failed to get projection ratio at index,%{public}d
CLRR,setLocationPoint,projectionOnNextSegment,failed to update scoreboard at index,%{public}d
CLRR,setLocationPoint,projectionOnPreviousSegment,failed to get projection ratio at index,%{public}d
CLRR,setLocationPoint,projectionOnPreviousSegment,failed to update scoreboard at index,%{public}d
CLRR,getNumberOfRoutePointsToAdd,required number of points,%{public}d
CLRR,updateRoutePointsBuffer,input data array is null
CLRR,updateRoutePointsBuffer,recovery mode,update started,number of requested points,%{public}d,number of given points,%{public}d
CLRR,updateRoutePointsBuffer,update started,number of requested points,%{public}d,number of given points,%{public}d
CLRR,updateRoutePointsBuffer,input data array is empty
CLRR,updateRoutePointsBuffer,no more data available,rolling buffer includes the end of the reference route
CLRR,updateRoutePointsBuffer,buffer capacity exceeded,bufferSize,%{public}d,numberOfPointsToAdd,%{public}d,routePointsCount,%{public}d
CLRR,updateRoutePointsBuffer,rolling buffer includes the end of the reference route
CLRR,updateRoutePointsBuffer,buffer capacity exceeded,bufferSize,%{public}d,numberOfPointsToAdd,%{public}d,bufferedRoutePointsCount,%{public}u
CLRR,updateRoutePointsBuffer,location series too short,minimumPointsToProcess,%{public}u,bufferedRoutePointsCount,%{public}u
CLRR,updateRoutePointsBuffer,buffer capacity exceeded,bufferSize,%{public}d,bufferedRoutePointsCount,%{public}u,routePointsCount,%{public}d
CLRR,updateRoutePointsBuffer,unable to convert reference route to matrix
CLRR,updateRoutePointsBuffer,update completed,rollingBufferUpdateCounter,%{public}d,lastMatchedPointIndex,%{public}d,rollingBufferStartIndexOnReferenceRoute,%{public}d,referenceRouteDataPointCounter,%{public}d,numberOfRoutePointsToAdd,%{public}d,routePointsArrayInitialized,%{public}d
CLRR,getDistanceDuringOffRoutePeriod,current data point is null
CLRR,getDistanceDuringOffRoutePeriod,invalid array index, %{public}d
CLRR,getDistanceDuringOffRoutePeriod,invalid time, %{public}.2lf
CLRR,getDistanceDuringOffRoutePeriod,distAlongRefRoute,%{private}.2lf,refDistAlongRefRoute,%{private}.2lf
CLRR,printDebugLog,pointType,%{public}s,time,%{public}.1lf,lat,%{private}.7lf,lon,%{private}.7lf,alt,%{private}.2lf,timeFromStart,%{public}.1lf,offRouteTime,%{public}.1lf,distFromStart,%{public}.2lf,offRouteDist,%{public}.2lf,pace,%{private}.2lf,odom,%{public}.2lf,distAlongRefRoute,%{public}.2lf,refTime,%{public}.1lf,refLat,%{private}.7lf,refLon,%{private}.7lf,refAlt,%{private}.2lf,refTimeFromStart,%{public}.1lf,refOffRouteTime,%{public}.1lf,refDistFromStart,%{public}.2lf,refOffRouteDist,%{public}.2lf,refPace,%{private}.2lf,refOdom,%{public}.2lf,refDistAlongRefRoute,%{public}.2lf,signalEnv,%{public}d,timeAhead,%{public}.2lf,distanceAhead,%{public}.2lf
CLRR,printRoutePointArray,fRoutePoints is a null pointer
CLRR,printRoutePointArray,boxRows,%{public}d,boxColumns,%{public}d,boxMinLat,%{private}.7lf,boxMaxLat,%{private}.7lf,boxMinLon,%{private}.7lf,boxMaxLon,%{private}.7lf
CLRR,printRoutePointArray,time,%{public}.1lf,lat,%{private}.7lf,lon,%{private}.7lf,alt,%{private}.2lf,odom,%{public}.2lf,signalEnv,%{public}d,pointCount,%{public}d
CLRR,configureRouteModel,unsupported activity type,%{public}d
CLRR,configureRouteModel,buffer size is too small,%{public}d
CLRR,configureRouteModel,configuration succeeded,workout activity type,%{public}u,route points rolling buffer size,%{public}d,number of route points to add,%{public}d,off route grace duration,%{public}d
CLRR,getPerformanceResults,route model has NOT been configured successfully,expire the race session
CLRR,getPerformanceResults,passed finish line
CLRR,getPerformanceResults,current data point is null
CLRR,getPerformanceResults,invalid input data,time,%{public}.1lf,lastOnRouteTime,%{public}.1lf,odom,%{public}.2lf,lastOnRouteOdom,%{public}.2lf
CLRR,getPerformanceResults,invalid input data,lat,%{private}.7lf,lon,%{private}.7lf,alt,%{private}.2lf
CLRR,getPerformanceResults,race session expired
CLRR,getPerformanceResults,race session expired but failed to updateDistanceDuringOffRoutePeriod
CLRR,getPerformanceResults,pointType,currentLocation,time,%{private}.1lf,lat,%{private}.7lf,lon,%{private}.7lf,alt,%{private}.2lf,odom,%{private}.2lf,signalEnv,%{private}d,pointCount,%{public}d
CLRR,getPerformanceResults,reference route total length,%{private}.2lf
CLRR,getPerformanceResults,invalid signal environment type,%{public}d
CLRR,getPerformanceResults,nearest neighbor maximum accepted distance,%{private}.2lf
CLRR,getPerformanceResults,race not started yet,current location outside of bounding box,unspecified state
CLRR,getPerformanceResults,current location outside of bounding box,user is off-route
CLRR,getPerformanceResults,user is off-route but failed to updateDistanceDuringOffRoutePeriod
CLRR,getPerformanceResults,current location outside of bounding box,unspecified state
CLRR,getPerformanceResults,unspecified state,invalid index for location,lat,%{private}.7lf,lon,%{private}.7lf
CLRR,getPerformanceResults,race not started yet,unspecified state
CLRR,getPerformanceResults,user is off-route
CLRR,getPerformanceResults,unspecified state
CLRR,setRacingRouteParameters,set race parameters
CLRR,setRacingRouteParameters,racingRouteParameters is null
CLRR,setRacingRouteParameters,racingRouteParameters.routeMatrixIndexVec is null
CLRR,setRacingRouteParameters,racingRouteParameters.racingRouteVariables is null
CLRR,setRacingRouteParameters,racingRouteParameters.routeBoundingBox is null
CLRR,setRacingRouteParameters,racingRouteParameters.startPointOnCurrentRoute is null
CLRR,setRacingRouteParameters,racingRouteParameters.startPointOnReferenceRoute is null
CLRR,setRacingRouteParameters,racingRouteParameters.lastOnRouteDataPoint is null
CLRR,setRacingRouteParameters,racingRouteParameters.lastProjectedDataPoint is null
CLRR,setRacingRouteParameters,recoveryMode,%{public}d,lastMatchedPointIndex,%{public}d,lastMatchedPointIndexOnReferenceRoute,%{public}d,timestampOfLastMatchedPointOnReferenceRoute,%{public}.1lf
processed %p %d to (%s)
could not create new mutable dictionary
{"msg%{public}.0s":"could not deserialize property list", "file":%{public, location:escape_only}s}
could not deserialize property list
{"msg%{public}.0s":"file does not exist... clearing", "file":%{public, location:escape_only}s, "error":%{public, location:escape_only}s}
file does not exist... clearing
{"msg%{public}.0s":"#Warning Error reading file", "file":%{public, location:escape_only}s, "error":%{public, location:escape_only}s}
#Warning Error reading file
Could not create NSURL for file: %{public}s
Could not write data to disk %{public}s, %{public}s
Could not serialize data for file %{public}s
{"msg%{public}.0s":"Could not serialize data", "file":%{public, location:escape_only}s}
Could not serialize data
key %{public}s does not have element %{public}d in array of size %{public}ld
key %{public}s does not have element %{public}d in non-array type %{public}lu
Unsupported type at %@:%@ (domain:key)
type IDs do not match for key %{public}s - %{public}lu vs %{public}lu
specified index is out of range for key %{public}s (%{public}d of %{public}ld)
specified index %{public}d not applicable to type %{public}lu for key %{public}s
could not create cf type for key %{public}s
could not create write stream
could not open write stream
could not write data, error code, %{public}ld, error domain, %{public}s
could not create intermediate property list - %{public}ld (%{public}s)
%s = <dictionary (%ld entries)>:
%s = %s
%s = %0.6f
%s = %d
%s = <unhandled value type %lu>
could not get value
type IDs do not match - %{public}lu vs %{public}lu
could not convert to C string
can't convert %{public}u data bytes
#Warning type IDs do not match - %{public}lu
{"msg%{public}.0s":"rangeForTransmitPower: invalid range of transmit power", "transmitPower_dBm":"%{public}.6f"}
rangeForTransmitPower: invalid range of transmit power
{"msg%{public}.0s":"Selected location", "loc":%{private, location:escape_only}s}
{"msg%{public}.0s":"Removed location", "loc":%{private, location:escape_only}s}
Reductive filtering: Sum of weights <= 0 after at least one point added.
{"msg%{public}.0s":"Reductive filtering", "input":%{public}d, "outliers":%{public}d, "used":%{public}d, "transmitPower":"%{public}.6f", "rangeOfBeacon":"%{public}.6f", "lat":"%{private}f", "lon":"%{private}f", "hunc":"%{private}f", "timestamp":%{public, location:escape_only}s, "isAccurateLocationAvailable":%{public}hhd, "filtered":%{public}d}
{"msg%{public}.0s":"Reductive filtering - options", "beaconType":%{public}lu, "transmitPower":"%{public}.6f", "biasRate":"%{public}.6f", "applyRangeEstimation":%{public}hhd}
{"msg%{public}.0s":"Reductive filtering - location observations", "countInput":%{public}lu, "countFiltered":%{public}lu, "loc":%{private, location:escape_only}s}
{"msg%{public}.0s":"Reductive filtering - location trace", "countInput":%{public}lu, "countFiltered":%{public}lu, "loc":%{private, location:escape_only}s}
Unable to load CompassUI framework
Could not load CUICalibrationClass from CompassUI framework
{"msg%{public}.0s":"CSI assertion failed", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
CSI assertion failed
***not supported***
<empty>
Attempt to set key %{public}s for read-only preferences %{public}s/%{public}s!
unknown hardware type %{private}d
Unsupported HW type %d; file a radar to CoreMotion Factory | 1.0
Unsupported HW type %{private}d; file a radar to CoreMotion Factory | 1.0
motion default ignored,'%{public}s'.
no mutable store path for type, %{public}d
could not get mutable store path for type, %{public}d
{"msg%{public}.0s":"CLBBTFTA,reason missing"}
CLBBTFTA,reason missing
{"msg%{public}.0s":"CLBBTFTA,bundleID or bundlePath needed"}
CLBBTFTA,bundleID or bundlePath needed
{"msg%{public}.0s":"CLBBTFTA,nil callback queue"}
CLBBTFTA,nil callback queue
{"msg%{public}.0s":"CLBBTFTA,nil callback block"}
CLBBTFTA,nil callback block
CLBBTFTA,unexpected message,%s
{"msg%{public}.0s":"CLBBTFTA", "Connection Message":%{public, location:escape_only}s}
{"msg%{public}.0s":"Could not serialize _CLVLLocalizationResult", "error":%{public, location:escape_only}@}
Could not serialize _CLVLLocalizationResult
{"msg%{public}.0s":"identifier is nil"}
identifier is nil
{"msg%{public}.0s":"identifier is too long"}
identifier is too long
#CLEU,CLGetUncertaintyScaleFactors,input horzontal or vertical SF pointer is NULL
#CLEU,CLGetUncertaintyScaleFactors,confidence out of bounds,%{public}d
#CLEU,CLGetUncertaintyScaleFactors,conf,%{public}d,horzSF,%{public}f,vertSF,%{public}f
#CLEU,linearInterp,x is less than the first point in table,x,%{public}d,table[0].first,%{public}d
#CLEU,linearInterp,x is greater than the last point in table,x,%{public}d,table[size-1].first,%{public}d
#CLEU,linearInterp,failed to find table points bounding x
this SPI is obsolete and will be removed in the future
{"msg%{public}.0s":"getDaemonProxy called"}
{"msg%{public}.0s":"no existing connection, trying to get one"}
Simulation connection interrupted
Simulation connection invalidated
Error fetching remoteObjectProxy
{"msg%{public}.0s":"Do we have a proxy?", "proxy":%{public, location:escape_only}@, "connection":%{public, location:escape_only}@}
Failed parse os_log format specifier for shimming:missing closing brace,format,%{public}s
Do not use CLGeocoder when GeoServices is missing
{"msg%{public}.0s":"Do not use CLGeocoder when GeoServices is missing", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Coarse MetaData cannot be decoded while reverse geocoding location, error, %@
#Warning Geocode error: %{private}@
#Spi, Interrupted
#Spi, Invalidated
#Spi, Error with proxy, error: %@
#Spi, Key is NULL!
#Spi, Couldn't set location default!
{"msg%{public}.0s":"#Spi, getLocationDefaultForKey, ", "error":%{public, location:escape_only}@}
#Spi, setPrivateMode failed
#Spi, CLInternalSetLocationServicesEnabled failed
#Spi, CLInternalSetAuthorizationPromptMapDisplayEnabled failed
{"msg%{public}.0s":"#Spi, CLSetClientTransientAuthorizationInfo failed", "error":%{public, location:escape_only}@}
#Spi, CLSetClientTransientAuthorizationInfo failed
{"msg%{public}.0s":"#Spi, CLGetClientTransientAuthorizationInfo failed", "error":%{public, location:escape_only}@}
#Spi, CLGetClientTransientAuthorizationInfo failed
{"msg%{public}.0s":"#Spi, CLInternalChangeClientAuthorizationTime failed", "error":%{public, location:escape_only}@}
#Spi, CLInternalChangeClientAuthorizationTime failed
{"msg%{public}.0s":"#Spi, CLInternalTriggerExpiredAuthorizationPurge failed", "error":%{public, location:escape_only}@}
#Spi, CLInternalTriggerExpiredAuthorizationPurge failed
#Spi, CLInternalSetGestureServiceEnabled failed
{"msg%{public}.0s":"#Spi, CLInternalGetPrecisionPermission failed", "error":%{public, location:escape_only}@}
#Spi, CLInternalGetPrecisionPermission failed
#Spi, _CLInternalPerformMigration failed
#Spi, _CLShutdownDaemon failed
#Spi, _CLDisplayStatistics failed
#Spi, _CLDumpLogs failed
#Spi,RouteHintError, Exceeded max number of route hint road segments (%{public}d > %{public}d)
#Spi,RouteHint,LocationInternal,Received route hint road segments,%{public}d,routeType,%{public}d,stepType,%{public}d
#Spi,RouteHintError,Couldn't set map-matching route hint!
#Spi,CLTR,CLTrackRunHint received,framework side
#Spi,CLTR,TrackRunHintError,Couldn't set track run hint!
#Spi,getAccessoryTypeBitSet,failed
#Spi,getAccessoryTypeBitSet,%d
#Spi,getAccessoryPASCDTransmissionState,failed
#Spi,getAccessoryPASCDTransmissionState,%d
#Spi,getOdometryBatchedLocations,received data count,%{public}lu
#Spi,getOdometryBatchedLocations,returned with error
#Spi,getOdometryBatchedLocations,returned with count,%{public}lu
#Spi, _CLCopyLastLog failed
{"msg%{public}.0s":"#Spi, Setting status bar enabled for entity class failed", "entityClass":%{public, location:CLLocationDictionaryUtilitiesEntityClass}lld}
#Spi, Setting status bar enabled for entity class failed
{"msg%{public}.0s":"Getting status bar enabled for entity class failed", "entityClass":%{public, location:CLLocationDictionaryUtilitiesEntityClass}lld}
Getting status bar enabled for entity class failed
CL: CLInternalSetAuthorizationStatus
{"msg%{public}.0s":"CLInternalSetAuthorizationStatus", "event":%{public, location:escape_only}s}
CL: CLCopyAppsUsingLocation
{"msg%{public}.0s":"CLCopyAppsUsingLocation", "event":%{public, location:escape_only}s}
CL: CLCopyActiveClientsUsingLocation
{"msg%{public}.0s":"CLCopyActiveClientsUsingLocation", "event":%{public, location:escape_only}s}
CL: CLSetLocationDefault
{"msg%{public}.0s":"CLSetLocationDefault", "event":%{public, location:escape_only}s, "key":%{public, location:escape_only}@}
CL: CLCopyMicroLocationInternalVersion
{"msg%{public}.0s":"CLCopyMicroLocationInternalVersion", "event":%{public, location:escape_only}s}
CL: CLCopyZaxisStats
{"msg%{public}.0s":"CLCopyZaxisStats", "event":%{public, location:escape_only}s}
CL: CLCopyTechnologiesInUse
{"msg%{public}.0s":"CLCopyTechnologiesInUse", "event":%{public, location:escape_only}s}
CL: CLCopyGnssBandsInUse
{"msg%{public}.0s":"CLCopyGnssBandsInUse", "event":%{public, location:escape_only}s}
Invalid bandUse,%{public}d
CL: CLGetLocationDefault
{"msg%{public}.0s":"CLGetLocationDefault", "event":%{public, location:escape_only}s, "key":%{public, location:escape_only}@}
CL: CLGetPipelinedCaches
{"msg%{public}.0s":"CLGetPipelinedCaches", "event":%{public, location:escape_only}s}
CL: CLGetMotionSensorLogs
{"msg%{public}.0s":"CLGetMotionSensorLogs", "event":%{public, location:escape_only}s}
CL: CLGetAccessoryMotionSensorLogs
{"msg%{public}.0s":"CLGetAccessoryMotionSensorLogs", "event":%{public, location:escape_only}s}
CL: CLApplyArchivedAuthorizationDecisions
{"msg%{public}.0s":"CLApplyArchivedAuthorizationDecisions", "event":%{public, location:escape_only}s}
CL: CLGetArchivedAuthorizationDecisions
{"msg%{public}.0s":"CLGetArchivedAuthorizationDecisions", "event":%{public, location:escape_only}s}
CL: CLTimeZoneAtLocation
{"msg%{public}.0s":"CLTimeZoneAtLocation", "event":%{public, location:escape_only}s}
CL: CLStartStopAdvertisingBeacon
{"msg%{public}.0s":"CLStartStopAdvertisingBeacon", "event":%{public, location:escape_only}s, "region":%{private, location:escape_only}@, "power":%{public, location:escape_only}@}
CL: CLPingDaemon
{"msg%{public}.0s":"CLPingDaemon", "event":%{public, location:escape_only}s}
CL: CLPassKitNotifyPassUsage
{"msg%{public}.0s":"CLPassKitNotifyPassUsage", "event":%{public, location:escape_only}s}
CL: CLWeatherNotifyForecastUsage
{"msg%{public}.0s":"CLWeatherNotifyForecastUsage", "event":%{public, location:escape_only}s}
CL: CLGetClientTransientAuthorizationInfo
{"msg%{public}.0s":"CLGetClientTransientAuthorizationInfo", "event":%{public, location:escape_only}s}
CL: CLSetClientTransientAuthorizationInfo
{"msg%{public}.0s":"CLSetClientTransientAuthorizationInfo", "event":%{public, location:escape_only}s}
CL: CLInternalGetPrecisionPermission
{"msg%{public}.0s":"CLInternalGetPrecisionPermission", "event":%{public, location:escape_only}s}
CL: CLInternalGetAuthorizationStatus
{"msg%{public}.0s":"CLInternalGetAuthorizationStatus", "event":%{public, location:escape_only}s}
CL: CLInternalGetIncidentalUseMode
{"msg%{public}.0s":"CLInternalGetIncidentalUseMode", "event":%{public, location:escape_only}s}
CL: CLInternalPerformMigration
{"msg%{public}.0s":"CLInternalPerformMigration", "event":%{public, location:escape_only}s}
CL: CLGetStatusBarIconState
{"msg%{public}.0s":"CLGetStatusBarIconState", "event":%{public, location:escape_only}s}
CLStatusBarIconState received an icon stateu of %d
CL: CLSetMapMatchingRouteHint
{"msg%{public}.0s":"CLSetMapMatchingRouteHint", "event":%{public, location:escape_only}s}
RouteHints,CLSetRouteHintsForMapMatching,received,%lu,routeType,%d,stepType,%d
CL: CLSetRouteHintsForMapMatching
{"msg%{public}.0s":"CLSetRouteHintsForMapMatching", "event":%{public, location:escape_only}s}
RouteHints,CLSetRouteHintsForMapMatching,received,%lu,routeType,%d
CL: CLSetTrackRunHint
{"msg%{public}.0s":"CLSetTrackRunHint", "event":%{public, location:escape_only}s}
TrackRunHint,CLSetTrackRunHint,received,MCTime,%{public}.1lf,lane,%{private}d,notification,%{private}d
CLGetAccessoryTypeBitSet
CLGetAccessoryPASCDTransmissionState
CLGetOdometryBatchedLocations
CL: CLInternalSetTemporaryAuthorizationGranted
{"msg%{public}.0s":"CLInternalSetTemporaryAuthorizationGranted", "event":%{public, location:escape_only}s}
CL: CLInternalSetLocationButtonUseMode
{"msg%{public}.0s":"CLInternalSetLocationButtonUseMode", "event":%{public, location:escape_only}s}
CL: CLInternalSetAuthorizationStatusByType
{"msg%{public}.0s":"CLInternalSetAuthorizationStatusByType", "event":%{public, location:escape_only}s}
CL: CLInternalSetIncidentalUseMode
{"msg%{public}.0s":"CLInternalSetIncidentalUseMode", "event":%{public, location:escape_only}s}
{"msg%{public}.0s":"Could not serialize _CLARSessionState"}
Could not serialize _CLARSessionState
Do not use CLPlaceMark when GeoServices is missing
{"msg%{public}.0s":"Do not use CLPlaceMark when GeoServices is missing", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"transmitPower: invalid range of transmit power", "transmitPower_dBm":"%{public}.6f", "min.TransmitPower_dBm":"%{public}.6f", "max.TransmitPower_dBm":"%{public}.6f"}
transmitPower: invalid range of transmit power
[%{public}@] Location Push Service extension context initialized
[%{public}@] didReceiveLocationPushPayload:reply:
[%{public}@] Location Push Service extension time will expire
[%{public}@] Cleaning up extension
#polygon,number of vertices (%{public}lu) mustn't exceed %{public}lu
#polygon,number of vertices (%{public}lu) must be greater or equal than %{public}lu
#polygon,monitoring requires a valid connected polygon where first and last coordinates are the same
#polygon,All vertices, except for the first and last equals, have to be unique
#polygon,#warning invalid coordinate
#polygon,#warning No points data found for polygon
#polygon,#warning distanceToBorder is nil
#polygon,distanceToBorder,%.3lf,inRegion %d
CLHarvester invalidation handler
CLHarvester interruption handler
CLHarvester synchronous remote proxy invalidated
CLHarvester fetchState reply block called
{"msg%{public}.0s":"Could not serialize _CLVIOEstimation", "error":%{public, location:escape_only}@}
Could not serialize _CLVIOEstimation
{"msg%{public}.0s":"Subclass should have overriden this", "class":%{public, location:escape_only}s, "SEL":%{public, location:escape_only}s}
Subclass should have overriden this
{"msg%{public}.0s":"Dictionary utilites reported the arrow is in max state?!", "clientRecord":%{public, location:escape_only}@}
Dictionary utilites reported the arrow is in max state?!
informing client -- did retreive personalization info for device: %s - %s with info: %@
informing client -- firmware update for device: %s - %s
informing client -- use local asset request for product group: %s, product number: %s - %s
informing client -- use default asset request for product group: %s, product number: %s - %s
informing client -- local firmware asset is %s for product group: %s, product number: %s
CLFindMyAccessoryFirmwareUpdateManager - Unknown Message - ignoring
getPersonalizationInfoForDevice: %@
updateFirmwareForDevice for device: %@ with assetURL: %@
abortFirmwareUpdateForDevice: %@
useLocalFirmwareAssetFromURL: %@ forProductGroup: %@ forPorductNumber: %@ withSandboxExtension: %@
useDefaultFirmwareAssetSourceForProductGroup: %@ forPorductNumber: %@
fetchWhetherLocalFirmwareAssetIsInUseForProductGroup: %@ forPorductNumber: %@
#Warning refAlt < %.1lf,refAlt,%.1lf,using the min
#Warning refAlt > %.1lf,refAlt,%.1lf,using the max
LowPower not supported for this object/platform
Conservative not supported for this object/platform
%{public}@,vuncCheckRequiredForUsability,%{public}d,altitudeStitchingEnabled,%{public}d,maxUsableAge,%{public}f,maxUsableHunc,%{public}f,maxUsableVunc,%{public}f,minUsableIntegrity,%{public}d
#CLELS,%{public}@,printConfiguration,firstUpdateEnabled,%{public}d,periodicUpdatesEnabled,%{public}d,firstLocationMaxEarlyReturnHunc,%{public}f,firstLocationMaxEarlyReturnVunc,%{public}f,locationUpdateHuncReductionToSendEarly,%{public}f,locationUpdateDistanceMovedToSendEarly,%{public}f,firstLocationEarlyReturnEnabled,%{public}d,firstLocationTimeout,%{public}f,locationUpdateTimeout,%{public}f,locationUpdateMinDelay,%{public}f
#CLELS,%{public}@,updateLocation,nil Location object
#CLELS,%{public}@,updateLocation,lat,%{private}.7f,lon,%{private}.7f,hunc,%{public}f,alt,%{private}f,ellipsoidalAlt,%{private}f,vunc,%{public}f,timestamp,%{public}@,locationType,%{public}d,integrity,%{public}d
#CLELS,%{public}@,isLocationUsable,invalid parameters
#CLELS,%{public}@,isLocationUsable,invalid coordinates
#CLELS,%{public}@,isLocationUsable,location too old. Age:%{public}f
#CLELS,%{public}@,isLocationUsable,horizontal accuracy too low. Hunc:%{public}f
#CLELS,%{public}@,isLocationUsable,integrity too low. Integrity:%{public}d
#CLELS,%{public}@,isLocationUsable,unusable altitude
#CLELS,%{public}@,isLocationUsableForFirstUpdate,not saving,invalid parameters
#CLELS,%{public}@,isLocationUsableForFirstUpdate,not saving,invalid hunc
#CLELS,%{public}@,isLocationUsableForFirstUpdate,not saving,integrity too low. Integrity:%{public}d
#CLELS,%{public}@,isLocationUsableForFirstUpdate,saving,haven't save first update before.
#CLELS,%{public}@,isLocationUsableForFirstUpdate,saving,better Hunc
#CLELS,%{public}@,isLocationUsableForFirstUpdate,saving,location changed significantly,dist,%{public}f
#CLELS,%{public}@,isLocationUsableForFirstUpdate,not saving
#CLELS,%{public}@,isAltitudeUsable,NO,invalid parameters
#CLELS,%{public}@,isAltitudeUsable,NO,vertical accuracy too low,%{public}.2f
#CLELS,%{public}@,isAltitudeUsable,NO,received altitude is not valid,%{private}.2f
#CLELS,%{public}@,isAltitudeUsableForFirstUpdate,YES,FirstUpdateVerticalLocation being saved first time
#CLELS,%{public}@,isAltitudeUsableForFirstUpdate,YES,received Vunc better than cached Vunc
#CLELS,%{public}@,isAltitudeUsableForFirstUpdate,YES,altitude change significant,%{public}f
#CLELS,%{public}@,isAltitudeUsableForFirstUpdate,NO
#CLELS,%{public}@,shouldSendFirstLocationEarly,not sending,invalid cached location
#CLELS,%{public}@,shouldSendFirstLocationEarly,not sending,invalid coordinates
#CLELS,%{public}@,shouldSendFirstLocationEarly,not sending,First location early return Hunc not satisfied
#CLELS,%{public}@,shouldSendFirstLocationEarly,not sending,First location early return Vunc not satisfied
#CLELS,%{public}@,shouldSendFirstLocationEarly,can send first location early
#CLELS,%{public}@,shouldSendLocationUpdateEarly,not sending,invalid cached location
#CLELS,%{public}@,shouldSendLocationUpdateEarly,sending,first valid fix being sent after sending no fix or nil fix
#CLELS,%{public}@,shouldSendLocationUpdateEarly,not sending,last send was too recent,tDiff,%{public}f
#CLELS,%{public}@,shouldSendLocationUpdateEarly,sending,higher hunc reduction,previous,%{public}f,current,%{public}f
#CLELS,%{public}@,shouldSendLocationUpdateEarly,sending,location changed significantly,dist,%{public}f
#CLELS,%{public}@,shouldSendLocationUpdateEarly,sending,altitude is usable now
#CLELS,%{public}@,shouldSendLocationUpdateEarly,sending,higher vunc reduction,previous,%{public}f,current,%{public}f
#CLELS,%{public}@,shouldSendLocationUpdateEarly,sending,higher altitude change,%{public}f
#CLELS,%{public}@,canSendLocationAtTimeout,will send nil location
#CLELS,%{public}@,canSendLocationAtTimeout,not sending,location too old. Age:%{public}f
#CLELS,%{public}@,sendCachedLocation,location sent to client without altitude stitching
#CLELS,%{public}@,sendCachedLocation,location sent to client with altitude stitching
#CLELS,%{public}@,sendCachedLocation,location sent to client with altitude cleared
#CLELS,%{public}@,sendFirstUpdateLocation,send nil Location
#CLELS,%{public}@,sendFirstUpdateLocation,FirstUpdateHorizontalLocation,with altitude cleared
#CLELS,%{public}@,sendFirstUpdateLocation,FirstUpdateHorizontalLocation,with altitude stitching
#CLELS,%{public}@,sendFirstUpdateLocation,FirstUpdateHorizontalLocation,as-is
#CLELS,%{public}@,sendLocation,nil location sent to client
#CLELS,%{public}@,sendLocation,lat,%{private}.7f,lon,%{private}.7f,hunc,%{public}f,alt,%{private}f,ellipsoidalAlt,%{private}f,vunc,%{public}f,timestamp,%{public}@,locationType,%{public}d,integrity,%{public}d
%sstate,%d,%s
%scurrent_state,%s,event,%s
%sNested invocation of state machine
%snewState,%s
%soldState,%s,event,%s
%snewState,%s,event,%s
%sInvoking timers without callback queue set
%sCannot start timer, event, %{public}s, timeOutSec, %{public}.2f
%scannot create timer, event, %{public}s
%sevent,%s,timeout,%.2f
%scancel timer,event,%s
#Warning,%s,cancel timer,notFound, event,%s
{"msg%{public}.0s":"Requesting new assertion", "messageDictionary":%{public, location:escape_only}@}
CLClientRef CLClientAllocate(CFAllocatorRef, CLClientCallback, const CLClientContext *)
CoreLocation: non-matching retain (%p) and release (%p) functions in context, ignoring
CoreLocation: Failed to initilize fHeadingCalibrationDisplayMutex, error code: %{public}d
com.apple.CoreLocation.%p
UIApplicationWillResignActiveNotification
UIApplicationDidBecomeActiveNotification
v8@?0
activity
CLClient-runloop
UIBackgroundModes
location
assert
client->fInvalidated
%s:%d: assertion failure in %s
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Framework/CLClient.mm
_CLClientDestroy
!client->fContext.info
<CLClient %p [%p]>
CLClient
void CLClientInvokeCallback(CLClientRef, CLClientEvent, id)
CoreLocation: Location callback block not executed in a timely manner!
CoreLocation: Discarding message for event %{private}d because of too many unprocessed messages
void CLClientHandleWillResignActiveNotification(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)
CoreLocation: received client will resign active notification
void CLClientHandleDidBecomeActiveNotification(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)_block_invoke
CoreLocation: received client did become active notification
kCLConnectionMessagePurposeKey
kCLConnectionMessagePurpose
kCLConnectionMessagePurposeIdentifierKey
void CLClientRequestAuthorization(CLClientRef, CLClientAuthorizationStatus, CLNameValuePair &)
CoreLocation: Invalid requested authorization: %{public}d
CoreLocation: Missing UsageDescription key for requested authorization: %{public}d
kCLConnectionMessageStatusKey
kCLConnectionMessageRequestAuthorization
kCLConnectionMessagePurposeIdentifierKey
kCLConnectionMessagePurposeKey
kCLConnectionMessageRequestTemporaryPrecise
kCLConnectionMessageErrorKey
v24@?0{shared_ptr<CLConnectionMessage>=^{CLConnectionMessage}^{__shared_weak_count}}8
kCLConnectionMessageSubscribeKey
kCLConnectionMessageLocationPush
kCLConnectionMessagePushTokenKey
kCLConnectionMessageSubscribeKey
com.apple.runtime-issues
CoreLocation
Boolean CLClientIsLocationServicesEnabled(CLClientRef)
CoreLocation: #Warning CLInternalGetLocationServicesEnabled failed: could not reach daemon
Boolean CLClientIsAuthorizationPromptMapDisplayEnabled()
CoreLocation: #Warning CLInternalGetAuthorizationPromptMapDisplayEnabled failed: could not reach daemon
mach-lookup
com.apple.locationd.registration
CLClientShutdownDaemon
Boolean CLClientShutdownDaemon(CLClientRef)
CoreLocation: CLClient is deprecated. Will be obsolete soon. (%{public}s)
CLClientLogDump
Boolean CLClientLogDump(CLClientRef, const char *, Boolean)
kCLConnectionMessageCurrentClientDictionary
kCLConnectionMessageDesiredAccuracyKey
kCLConnectionMessageDistanceFilterKey
kCLConnectionMessageDynamicAccuracyReductionKey
kCLConnectionMessageAlteredAccessoryLocationsKey
kCLConnectionMessageLocation
kCLConnectionMessageEnabledKey
kCLConnectionMessageIsActuallyAWatchKitExtension
kCLConnectionMessageProxyForRemoteClient
kCLConnectionMessageHeadingFilterKey
kCLConnectionMessageHeading
Boolean CLClientShowHeadingCalibration(CLClientRef, Boolean)
CoreLocation: Application inactive, will not show heading calibration
kCLConnectionMessageSLCDistanceKey
kCLConnectionMessageSLCPowerBudgetKey
kCLConnectionMessageSignificantLocationChange
kCLConnectionMessagePlaceInferenceFidelityPolicyKey
kCLConnectionMessagePlaceInference
kCLConnectionMessagePlaceInferenceStopKey
kCLConnectionMessagePlaceInferenceStop
kCLConnectionMessageSignificantLocationVisitTypeKey
kCLConnectionMessageSignificantLocationVisit
kCLConnectionMessageSignificantLocationVisitState
kCLConnectionMessageRegionMonitoring
kCLConnectionMessageTranscriptSession
kCLConnectionMessageTranscriptFetchRadiusKey
kCLConnectionMessageTranscriptFetchSampleCountKey
kCLConnectionMessageTranscriptFetchCenterKey
kCLConnectionMessageTranscriptFetch
void CLClientFetchTranscriptLocations(CLClientRef, double, int, CLLocationCoordinate2D, void (^)(NSArray *, NSError *))_block_invoke
CoreLocation: #transcriptSession reply for fetchTranscriptLocation is nil
kCLConnectionMessageTranscriptFetchLocationsKey
kCLConnectionMessageTranscriptError
kCLConnectionMessageRequestHistoricalLocations
void CLClientRequestHistoricalLocations(CLClientRef, NSString *, NSInteger, void (^)(NSArray *, NSError *))_block_invoke
CoreLocation: #historicalLocations reply for fetchTranscriptLocation is nil
Boolean CLClientRequestRegionState(CLClientRef, CLRegion *)
CoreLocation: Fence: CLClientRequestRegionState, unsupported fence type, %{private}d
kCLConnectionMessageRegionState
kCLConnectionMessageBeaconRegionKey
kCLConnectionMessageCircularRegionKey
kCLConnectionMessageRangingPeersKey
kCLConnectionMessageRangingPeerTimeoutKey
kCLConnectionMessageRangingPeerInitiatorKey
kCLConnectionMessagePeerRanging
IsFitnessMatch
kCLConnectionMessageNameKey
kCLConnectionMessageOnBehalfOfKey
kCLConnectionMessageDeviceIDKey
kCLConnectionMessageHandoffTagKey
kCLConnectionMessageRegionTypeKey
kCLConnectionMessageNotifyOnEntryKey
kCLConnectionMessageNotifyOnExitKey
kCLConnectionMessageConservativeEntry
kCLConnectionMessageEmergencyKey
kCLConnectionMessageReferenceFrameKey
kCLConnectionMessageMonitoringNearby
kCLConnectionMessageLowPowerFenceKey
kCLConnectionMessageLatitudeKey
kCLConnectionMessageLongitudeKey
kCLConnectionMessageRadiusKey
kCLConnectionMessagePolygonalVerticesCountKey
Boolean CLClientPopulateRegionFromInfo(CLRegion **, CFDictionaryRef)
CoreLocation: Number of vertices received doesn't match stored, %{public}d, %{public}lu
CoreLocation: Number of vertices received invalid, %{public}d, internal
CoreLocation: Copied %{private}d vertices
kCLConnectionMessageNotifyEntryStateOnDisplayKey
kCLConnectionMessageProximityUUIDKey
kCLConnectionMessageMajorKey
kCLConnectionMessageMinorKey
kCLConnectionMessageRegionDefinitionKey
kCLConnectionMessageEventKey
kCLConnectionMessageErrorKey
kCLConnectionMessageAlternateRegionKey
kCLConnectionMessageRegionWatchdogSinceLast
kCLConnectionMessageIdentifierKey
kCLConnectionMessageRegionsKey
kCLConnectionMessageRanging
kCLConnectionMessageBeaconsKey
kCLConnectionMessageCompensationKey
kCLConnectionMessageAuthorizedForWidgetUpdatesKey
kCLConnectionMessageMatchInfoEnabled
kCLConnectionMessageGroundAltitudeEnabled
kCLConnectionMessageFusionInfoEnabled
kCLConnectionMessageTrackRunInfoEnabled
kCLConnectionMessageAllowsLocationPrompts
kCLConnectionMessageShowLocationPrompt
kCLConnectionMessageMarkAsHavingReceivedLocation
void CLClientSetAutomaticPromptingEnabled(CLClientRef, Boolean)
CoreLocation: kCLConnectionMessageAutomaticPromptingEnabled is not supported
kCLConnectionMessageARSessionState
kCLConnectionMessageVIOEstimation
kCLConnectionMessageVLLocalizationResult
kCLConnectionMessageActivityTypeKey
kCLConnectionMessageActivityType
kCLConnectionMessagePausesLocationUpdatesAutomaticallyKey
kCLConnectionMessagePausesLocationUpdatesAutomatically
Boolean CLClientGetAutopauseState(CFDictionaryRef, Boolean *, Boolean *)
CoreLocation: Invalid call to CLClientGetAutopauseState
kCLConnectionMessageAutopauseStatusKey
kCLConnectionMessageAutopauseOverrideKey
CoreLocation: malformed message: kCLConnectionMessageAutopauseStatus
kCLConnectionMessageAllowsBackgroundLocationUpdatesKey
kCLConnectionMessageAllowsBackgroundLocationUpdates
kCLConnectionMessageShowsBackgroundLocationIndicatorKey
kCLConnectionMessageShowsBackgroundLocationIndicator
kCLConnectionMessageBatchAllowedKey
kCLConnectionMessageBatchDistanceKey
kCLConnectionMessageBatchTimeoutKey
kCLConnectionMessageBatch
kCLConnectionMessageAllowsMapCorrectionKey
kCLConnectionMessageAllowsMapCorrection
kCLConnectionMessageRegisterAsLocationClient
kCLConnectionMessageVehicleSpeedKey
kCLConnectionMessageVehicleHeadingKey
kCLConnectionMessageVehicleSpeed
kCLConnectionMessageVehicleHeading
kCLConnectionMessageRequestMicroLocation
kCLConnectionMessageRequestMicroLocationRecordingScan
kCLConnectionMessageMicroLocationTruthLabelKey
kCLConnectionMessageMicroLocationRecordingTriggerUuidKey
kCLConnectionMessageMicroLocationDonateTruthLabelEvent
kCLConnectionMessageMicroLocationTruthLabelStartDateKey
kCLConnectionMessageMicroLocationTruthLabelEndDateKey
kCLConnectionMessageMicroLocationDonateTruthLabelBetweenDatesEvent
kCLConnectionMessageMicroLocationExportDatabaseTables
kCLConnectionMessageMicroLocationExportDatabaseTablesInfoKey
kCLConnectionMessageMicroLocationRequestStaticSourcesStatistics
kCLConnectionMessageMicroLocationRequestStaticSourcesStatisticsInfoKey
kCLConnectionMessagePurgeMicroLocationSemiSupervisedData
kCLConnectionMessageFetchEstimatedLocationDateKey
kCLConnectionMessageFetchEstimatedLocationAtDate
kCLConnectionMessageFetchEstimatedLocationLocationKey
com.apple.locationd.Core
Client
Generic
ClientsCohortWorkLoop
/System/Library/LocationBundles/RemindersAlerts.bundle
basic_string
kCLConnectionMessageCompensatedLocation
kCLClientEventKey
void _CLClientHandleMessage(CLClientRef, std::shared_ptr<CLConnectionMessage>)
CoreLocation: Got unhandled message %s from daemon
LocationManager/kCLConnectionMessageRegistration
kCLConnectionMessageError
kCLConnectionMessageLocationUnavailable
kCLConnectionMessageRegionMonitoringError
kCLConnectionMessageRangingError
kCLConnectionMessageRegionMonitoringResponseDelayed
kCLConnectionMessageRegionMonitoringSetupCompleted
kCLConnectionMessageAuthorizationStatus
kCLConnectionMessageAutopauseStatus
kCLConnectionMessagePeerRangingRequestProcessed
kCLConnectionMessagePeerRangingError
kCLConnectionMessagePlaceInferenceResult
kCLConnectionMessagePlaceInferenceError
kCLConnectionMessageRegionMonitoringNoLocationWatchdog
kCLConnectionMessageHeadingDataKey
kCLConnectionMessageBundleIdentifierKey
kCLConnectionMessageBundlePathKey
kCLConnectionMessageSubidentityKey
kCLConnectionMessageClientSDKAtLeast2014Key
kCLConnectionMessageClientSDKAtLeast2017Key
kCLConnectionMessageClientSDKAtLeast2019Key
kCLConnectionMessagePolygonalVerticesKey
CLLocationManagerRoutine.m
Invalid parameter not satisfying: %@
queue
locationManagerRoutine
com.apple.locationd.routine
v8@?0
Connection Interrupted, serviceName, %@
Connection Invalidated, serviceName %@
_CLLocationManagerRoutineProxy, %p
delegate must respond to selector locationManager:didUpdateLocations:
Routine
kCLConnectionMessageOverrideDeauthorizationKey
EmergencyEnablementAssertion/kCLConnectionMessage
CLFindMyAccessoryConnectionMaterial.m
[otherMaterial isKindOfClass:[CLFindMyAccessoryConnectionMaterial class]]
CLFindMyAccessoryConnectionMaterial <%p>, PrimaryIndex: %@, SecondaryIndex:%@, Address:%@, LTK:%@
address
primaryIndex
secondaryIndex
%02X:%02X:%02X:%02X:%02X:%02X
%02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X
UIApplicationWillEnterForegroundNotification
UIApplicationDidEnterBackgroundNotification
!_inTransaction
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Framework/CoreLocation/CLLocationManager.m
-[CLLocationManagerStateTracker initWithQueue:identifier:state:]
state_transition
LocationManager
init
lifecycle
distanceFilter
desiredAccuracy
updatingLocation
requestingLocation
requestingRanging
updatingRanging
updatingHeading
headingFilter
allowsLocationPrompts
allowsAlteredAccessoryLocations
dynamicAccuracyReductionEnabled
previousAuthorizationStatusValid
previousAuthorizationStatus
limitsPrecision
activityType
pausesLocationUpdatesAutomatically
paused
allowsBackgroundLocationUpdates
showsBackgroundLocationIndicator
allowsMapCorrection
batchingLocation
updatingVehicleSpeed
updatingVehicleHeading
matchInfoEnabled
groundAltitudeEnabled
fusionInfoEnabled
courtesyPromptNeeded
isAuthorizedForWidgetUpdates
trackRunInfoEnabled
-[CLLocationManagerStateTracker updateState:]
allStates
_CLLocationManagerStateTrackerState
v16@?0@"CLLocationManagerStateTracker"8
-[CLLocationManagerInternal hasLingeringRangingRequest]
CoreLocation: #Warning Has lingering peer ranging request
CLLocationManager-runloop
-[CLLocationManager initWithWebsiteIdentifier:]
CoreLocation: initializing CLLocationManager with a nil websiteIdentifier
-[CLLocationManager initWithWebsiteIdentifier:delegate:onQueue:]
delegate && queue
-[CLLocationManager initWithEffectiveBundleIdentifier:]
CoreLocation: initializing CLLocationManager with a nil identifier
-[CLLocationManager initWithEffectiveBundleIdentifier:delegate:onQueue:]
-[CLLocationManager initWithEffectiveBundlePath:]
CoreLocation: initializing CLLocationManager with a nil bundle path
-[CLLocationManager initWithEffectiveBundlePath:delegate:onQueue:]
-[CLLocationManager initWithEffectiveBundlePath:limitingBundleIdentifier:delegate:onQueue:]
CoreLocation: initializing CLLocationManager with a nil limiting identifier
-[CLLocationManager _initWithDelegate:onQueue:]
CLLocationManager.m
Non-UI clients cannot be autopaused
!stayUp || CLClientIsBackgroundable(internal->fClient) || _CFMZEnabled()
-[CLLocationManager setSupportInfo:]
CoreLocation: Obsolete
-[CLLocationManager setActivityType:]
CoreLocation: Client,%s,setActivityType,%ld
com.apple.Maps
com.apple.NanoMaps
CoreLocation: Client,%s,setActivityType,allowing map correction
-[CLLocationManager startUpdatingLocation]
CoreLocation: Canceling requestLocation
Delegate must respond to locationManager:didUpdateLocations:
Delegate must respond to locationManager:didFailWithError:
-[CLLocationManager requestLocation]
CoreLocation: Ignoring requestLocation due to ongoing location.
-[CLLocationManager allowDeferredLocationUpdatesUntilTraveled:timeout:]
CoreLocation: Canceling requestLocation.
Application must support the location background mode (in app's Info.plist, {UIBackgroundModes=(location);}
-[CLLocationManager heading]
CoreLocation: heading, %{private}s
-[CLLocationManager startUpdatingHeading]
CoreLocation: Start updating heading. HeadingFilter, %{public}.2f
-[CLLocationManager stopUpdatingHeading]
CoreLocation: Stop updating heading
-[CLLocationManager dismissHeadingCalibrationDisplay]
CoreLocation: Dismissing Compass Calibration HUD
-[CLLocationManager startMonitoringForRegion:]
CoreLocation: Number of vertices %{public}lu
constraint
constraint != nil
-[CLLocationManager requestRangingToPeers:timeoutSeconds:]
CoreLocation: WRTT: received requestRangingToPeers, timeout, %{public}lf
peers != nil
peers.count > 0
timeout > 0.0
timeout < kCLPeerRangingRequestTimeoutSecondsMax
Delegate must respond to locationManager:didRangePeers:
Delegate must respond to locationManager:rangingDidFailForPeer:withError:
CoreLocation: #Warning Ignoring requestRangingToPeers due to ongoing ranging
-[CLLocationManager respondToRangingFromPeers:timeoutSeconds:]
CoreLocation: WRTT: received respondToRangingFromPeers, timeout, %{public}lf
CoreLocation: #Warning Ignoring respondToRangingFromPeers due to ongoing ranging.
-[CLLocationManager startRangingToPeers:intervalSeconds:]
CoreLocation: WRTT: received startRangingToPeers, interval, %{public}lu
CoreLocation: #Warning Ignoring startRangingToPeers due to ongoing ranging
-[CLLocationManager stopRangingToPeers:]
CoreLocation: WRTT: received stopRangingToPeers
-[CLLocationManager startRangingFromPeers:]
CoreLocation: WRTT: received startRangingFromPeers
CoreLocation: #Warning Ignoring startRangingFromPeers due to ongoing ranging
-[CLLocationManager stopRangingFromPeers:]
CoreLocation: WRTT: received stopRangingFromPeers
v24@?0@"NSError"8^{__CFDictionary=}16
donateTruthTagLabelForClient failed because startDate is later than endDate
ForceMapMatching
-[CLLocationManager onClientEventAuthStatus:]
CoreLocation: could not get updated authorization status
-[CLLocationManager onClientEventLocation:forceMapMatching:type:]
CoreLocation: Location event received with empty payload
CoreLocation: New location is identical to old location; discarding
CoreLocation: New location predates old location, and the event types differ; discarding
-[CLLocationManager onClientEventHeading:]
CoreLocation: could not get updated heading
-[CLLocationManager onClientEventHeadingCalibration:]
CoreLocation: CL: Invoking Compass Calibration HUD
CoreLocation: Could not show heading calibration
-[CLLocationManager onClientEventPlaceInferenceResult:]
CoreLocation: in onClientEventPlaceInferenceResult for CLPlaceInferenceSubscription
kCLConnectionMessagePlaceInferencePlaceInferenceKey
kCLConnectionMessagePlaceInferencePlaceInferenceFallbackLocationKey
v24@?0@"NSArray"8@"NSError"16
-[CLLocationManager onClientEventPlaceInferenceError:]
CoreLocation: in onClientEventPlaceInferenceError for CLPlaceInferenceSubscription
-[CLLocationManager onClientEventError:]
CoreLocation: could not get error
-[CLLocationManager onClientEventRegion:]
CoreLocation: could not get region monitoring event
-[CLLocationManager onClientEventRegionState:]
CoreLocation: could not get the region state
-[CLLocationManager onClientEventRegionError:]
-[CLLocationManager onClientEventRanging:]
CoreLocation: could not get ranged beacons
-[CLLocationManager onClientEventRanging:]_block_invoke
CoreLocation: Client beacon is invalid (count,%lu).
v32@?0@8Q16^B24
proximity
accuracy
-[CLLocationManager onClientEventRangingError:]
CoreLocation: could not get ranging error
-[CLLocationManager onClientEventPeerRanging:]
CoreLocation: WRTT: received onClientEventPeerRanging
-[CLLocationManager onClientEventPeerRangingRequestProcessed:]
CoreLocation: WRTT: received onClientEventPeerRangingRequestProcessed
-[CLLocationManager onClientEventPeerRangingError:]
CoreLocation: WRTT: received onClientEventPeerRangingError
kCLConnectionMessageErrorsKey
[peers count] == [errors count]
-[CLLocationManager onClientEventRegionResponseDelayed:]
-[CLLocationManager onClientEventNoLocationWatchdog:]
CoreLocation: could not get updated paused state
-[CLLocationManager onClientEventRegionSetupCompleted:]
-[CLLocationManager onClientEventAutopauseStatus:]
-[CLLocationManager onClientEventBatch:]
CoreLocation: could not get batch result
success
CoreLocation: Finished deferred updates: %s
-[CLLocationManager onClientEventVehicleSpeed:]
CoreLocation: could not get updated vehicle speed
-[CLLocationManager onClientEventVehicleHeading:]
CoreLocation: could not get updated vehicle heading
kCLConnectionMessageSignificantLocationVisitKey
kCLConnectionMessageSignificantLocationVisitStateKey
purposeKey
handler
+[CLLocationManager dumpDiagnosticFilesWithHandler:]
CoreLocation: dumpDiagnosticFiles called, trying to make an xpc call
com.apple.locationd.diagnostic
+[CLLocationManager dumpDiagnosticFilesWithHandler:]_block_invoke
CoreLocation: #diagnosticManager failed to get remoteObjectProxy with error %@
v16@?0@"NSError"8
CoreLocation: #diagnosticManager error copying files: %@
-[CLLocationManager(VehicleData) startUpdatingVehicleSpeed]
CoreLocation: Start updating vehicle speed
-[CLLocationManager(VehicleData) stopUpdatingVehicleSpeed]
CoreLocation: Stop updating vehicle speed
-[CLLocationManager(VehicleData) startUpdatingVehicleHeading]
CoreLocation: Start updating vehicle heading
-[CLLocationManager(VehicleData) stopUpdatingVehicleHeading]
CoreLocation: Stop updating vehicle heading
-[CLLocationManager(CLVisitExtensions) _requestVisitState]
CoreLocation: #slv: Request visit state
-[CLLocationManager(_CLPlaceInferenceExtensions) _startPlaceInferencesCommonLogic:handler:]
CoreLocation: Setup PlaceInferences common logic
placeInferenceHandler
-[CLLocationManager(_CLPlaceInferenceExtensions) _fetchPlaceInferencesWithFidelityPolicy:handler:]
CoreLocation: Start oneshot PlaceInferences
-[CLLocationManager(_CLPlaceInferenceExtensions) _fetchContinuousPlaceInferencesWithFidelityPolicy:handler:]_block_invoke
CoreLocation: Start continuous PlaceInferences
-[CLLocationManager(_CLPlaceInferenceExtensions) _stopFetchingContinuousPlaceInferences]
CoreLocation: Stop continuous PlaceInferences
Core
NSExtension
NSExtensionPointIdentifier
com.apple.widgetkit-extension
void verifyWidgetKitExtension()
CoreLocation: Widget has NSWidgetWantsLocation key in its Info.plist
com.apple.locationd.Position
Proximity
Microlocation
LocationCount
Locations
LocationsPrivate
CoarseMetaData
NSArray *copyArrayFromPayload(NSDictionary *)
CoreLocation: Encoded coarse meta data found
CoreLocation: CLLocationManager should not get multile locations with coarseMetaData
ERROR
WARNING
STATUS
INFO
VERBOSE
NONE
com.apple.locationd
com.apple.locationd.DumpDiagnostics
NSLocationUsageDescription
NSLocationAlwaysUsageDescription
NSLocationWhenInUseUsageDescription
NSLocationAlwaysAndWhenInUseUsageDescription
NSLocationTemporaryUsageDescriptionDictionary
NSLocationAuthorizationPurposeDescriptionDictionary
NSLocationWildernessSafetyUsageDescriptionDictionary
NSLocationDefaultAccuracyReduced
NSLocationInterestZones
NSWidgetWantsLocation
WKWatchOnly
WKRunsIndependentlyOfCompanionApp
void CLCommonSetRunLoop(CFRunLoopRef)
CoreLocation: #Warning Changing CLCommon's runloop after it was already established
CoreLocation: #Warning Setting CLCommon's runloop after it was already established
CoreLocation: CLCommonSetRunLoop, %p
mobile
int CLCommonCopyFile(const char *, const char *)
CoreLocation: cannot open source file: %{public}s, errno %{public}d
CoreLocation: cannot open target file: %{public}s, errno %{public}d
CoreLocation: error reading source file: %{public}s
CoreLocation: error writing target file: %{public}s
int CLCommonBzipFile(const char *, const char *)
CoreLocation: cannot open compression stream: %{public}s, bzerror %{public}d
CoreLocation: error writing target file: %{public}s, bzerror: %{public}d
CoreLocation: error closing target file: %{public}s, bzerror: %{public}d
compress:%@
%.1f
Boolean CLCommonCompareLocationEqualityClientWithTimeCheck(const CLClientLocation *, const CLClientLocation *, bool)
CoreLocation: CLCommonCompareLocationEqualityClient compared two coordinates that were identical other than their reference frames: (%lf, %lf, %d) (%lf, %lf, %d)
/System/Library/LocationBundles/LocationPromptUI.bundle
/System/Library/LocationBundles/LocationFenceSync.bundle
/System/Library/LocationBundles/PLAMonitor.bundle
CLBundleKeyValueCache::instance()->isSystemService(bundlePath)
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Shared/Utilities/CLCommon.mm
CLCommonIsBundleLocationdInternalSystemService
com.apple.locationd.Legacy
Generic_deprecated
CLAutoOSTransaction::CLAutoOSTransaction(const char *, CLAutoOSTransaction::LoggingPolicy)
CoreLocation: os_transaction created: (%p) %@
com.apple.locationd.Utility
CLAutoOSTransaction::~CLAutoOSTransaction()
CoreLocation: os_transaction releasing: (%p) %@
__TEXT
Binary Images:
other
armv6
armv7
unknown
%16p - %lld %c%s %s <
%02X
> %s
Utility
vector
+[_CLPlaceInference(_CLRoutineExtensions) _userSpecificPlaceTypeFromRTUserType:]
CoreLocation: Please update userSpecificPlaceTypeFromRTUserType
+[_CLPlaceInference(_CLRoutineExtensions) _placeInferencePlaceTypeFromRTPlaceType:]
CoreLocation: Please update placeInferencePlaceTypeFromRTPlaceType
kCLLocationCodingKeyGroundAltitudeEstimate
kCLLocationCodingKeyGroundAltitudeUncertainty
kCLLocationCodingKeyGroundAltitudeUndulation
kCLLocationCodingKeyGroundAltitudeUndulationModel
_CLLocationSmootherProxy, %p
com.apple.locationd.smoother
CLSmootherErrorDomain
int declinationCalc(const float, const float, const float, const float, GeomagneticData *)
CoreLocation: WMM initialization encountered an error
CoreLocation: WMM evaluation encountered an error
CoreLocation: geomagnetic model invalid near poles (%f, %f, %f)
com.apple.locationd.Motion
Compass
int E0000(int, int *, float, float, float, float, float *, float *, float *, float *)
CoreLocation: could not open geomagnetic data file %s (%{public}s)
CoreLocation: geomagnetic data file appears to be empty
%d%d%f%f%f%f
CoreLocation: geomagnetic data file appears to have invalid dimensions
CoreLocation: supplied date (%{public}f) outside valid range (epoch=%{public}f)
sampleCount
threshold
sampleRate
sleepDuration
com.apple.locationd.registration
NULL
CLGnssDisablementAssertionInternal::CLGnssDisablementAssertionInternal(dispatch_queue_t, const char *, NSDictionary *, CLGnssDisablementAssertionCallback)
CoreLocation: #clgda,client,CLGnssDisablementAssertionInternal,name,%s,dict,%@
v24@?0{shared_ptr<CLConnectionMessage>=^{CLConnectionMessage}^{__shared_weak_count}}8
CLGnssDisablementAssertionInternal::CLGnssDisablementAssertionInternal(dispatch_queue_t, const char *, NSDictionary *, CLGnssDisablementAssertionCallback)_block_invoke
CoreLocation: #clgda,client,#warning,unexpected message,%s
CoreLocation: #clgda,client,message,%s
CoreLocation: #clgda,#warning,client,noRegisteredCallback
kCLConnectionMessageGnssDisablementAssertRsp
CLGnssDisablementAssertionInternal::~CLGnssDisablementAssertionInternal()
CoreLocation: #clgda,client,~CLGnssDisablementAssertionInternal()
kCLConnectionMessageGnssDisablementAssertReq
+[CLGnssDisablementAssertion newAssertionForBundleIdentifier:withReason:callbackQueue:completionHandler:]
CoreLocation: #clgda,client,newAssertionForBundleIdentifier
+[CLGnssDisablementAssertion newAssertionForBundle:withReason:callbackQueue:completionHandler:]
CoreLocation: #clgda,client,newAssertionForBundle
kCLLocationMatchInfoCodingKeyMatchQuality
kCLLocationMatchInfoCodingKeyMatchCoordinateLatitude
kCLLocationMatchInfoCodingKeyMatchCoordinateLongitude
kCLLocationMatchInfoCodingKeyMatchCourse
kCLLocationMatchInfoCodingKeyMatchFormOfWay
kCLLocationMatchInfoCodingKeyMatchRoadClass
kCLLocationMatchInfoCodingKeyMatchShifted
kCLLocationMatchInfoCodingKeyMatchDataArray
matchQuality %ld matchCoordinate <%+.8f,%+.8f> matchCourse %.2f matchFormOfWay %d matchRoadClass %d matchShifted %d
%ld <%+.8f,%+.8f> %.2f %d %d %d
com.apple.findMyAccessoryRangingManager.privateQueue
-[CLFindMyAccessoryRangingManager handleMessage:]
CoreLocation: Got Reply: message: %s
-[CLFindMyAccessoryRangingManager handleInterruption]
CoreLocation: Connection to locationd interrupted!!
Connection to locationd interrupted!
Feature Not Supported
private.HomeKit.accessory.accessoryUUID
private.HomeKit.accessory.serviceType
private.HomeKit.accessory.characteristicType
private.HomeKit.accessory.source
private.HomeKit.accessory.stateString
private.HomeKit.accessory.serviceUUID
private.HomeKit.accessory.serviceGroupUUID
private.HomeKit.accessory.roomUUID
private.HomeKit.scene.actionSetUUID
private.HomeKit.scene.actionSetName
private.HomeKit.scene.actionSetType
private.HomeKit.scene.clientName
private.HomeKit.scene.source
private.HomeKit.scene.homeName
private.MicroLocation.truthtag.identifier
private.MicroLocation.forced.recordingRequest
private.MicroLocation.recordingTriggerUUID
trackRunLapCount
trackRunCurrentLapStartTime
trackRunCurrentLapDurationInSeconds
trackRunCurrentLapDistanceInMeters
trackRunPreviousLapDurationInSeconds
trackRunPreviousLapDistanceInMeters
trackRunPreviousLapPositionAtCompletionInDegreesLatitude
trackRunPreviousLapPositionAtCompletionInDegreesLongitude
trackRunCurrentTrackRunSessionDurationInSeconds
trackRunCurrentTrackRunSessionDistanceInMeters
trackRunLaneNumber
trackRunLaneCount
trackRunTrackId
trackRunEstimatedLaneNumber
trackRunEstimatedLaneConfidence
trackRunTrackProximity
UTDisableReasonBTOff
UTDisableReasonLocationServicesOff
UTDisableReasonTrackingNotificationsDisallowed
UTDisableReasonAirplaneModeOn
UTDisableReasonFindMyDeleted
UTDegradationReasonSignificantLocationsOff
UTDegradationReasonWifiOff
UTEnablementStatus
com.apple.DurianManagement.privateQueue
DurianManagement/DidFetchHawkeyeSerialNumber
DurianManagement/DidFetchHawkeyeCurrentPrimaryKey
DurianManagement/DidFetchHawkeyeiCloudIdentifier
Invalid response length
Response unavailable
DurianManagement/DidReceiveDataFragment
DurianManagement/DidConnect
DurianManagement/DidDisconnect
DurianManagement/DidFetchConnectionState
DurianManagement/DidStartPlayingSound
DurianManagement/DidCompletePlayingSound
DurianManagement/DidStopPlayingSound
DurianManagement/DidInitRanging
DurianManagement/DidDeinitRanging
DurianManagement/DidConfigureRanging
DurianManagement/DidPrepareRanging
DurianManagement/DidStartRanging
DurianManagement/DidCompleteRanging
DurianManagement/DidReceiveRangingError
DurianManagement/DidReceiveRangingTimestamps
DurianManagement/DidHaveRangingMovement
DurianManagement/DidFailRangingEventCounterAction
DurianManagement/DidStartPlayingUnauthorizedSound
DurianManagement/DidCompletePlayingUnauthorizedSound
DurianManagement/DidStopPlayingUnauthorizedSound
DurianManagement/DidReceiveKeyRollIndex
DurianManagement/DidGetMultiStatus
DurianManagement/DidReceiveGroupStatus
DurianManagement/DidFetchBatteryStatus
DurianManagement/DidDetectCrash
DurianManagement/DidDumpLogs
DurianManagement/DidUnpair
DurianManagement/DidSetTagType
DurianManagement/DidSetObfuscatedIdentifier
DurianManagement/DidSetNearOwnerTimeout
DurianManagement/DidSetWildConfiguration
DurianManagement/DidFetchUserStats
DurianManagement/DidRollWildKey
DurianManagement/DidSetAccelerometerSlopeMode
DurianManagement/DidSetAccelerometerOrientationMode
DurianManagement/DidGetAccelerometerSlopeModeConfiguration
DurianManagement/DidGetAccelerometerMode
DurianManagement/DidSetUnauthorizedPlaySoundRateLimit
DurianManagement/DidFetchFirmwareVersion
DurianManagement/DidCompleteHawkeyeTask
DurianManagement/DidSetHawkeyeUTMotionConfig
DurianManagement/DidFetchTxPower
DurianManagement/DidStartAggressiveAdvertising
DurianManagement/DidStopAggressiveAdvertising
DurianManagement/DidCompleteAggressiveAdvertising
DurianManagement/DidStartUnauthorizedAggressiveAdvertising
DurianManagement/DidFetchHawkeyeAISProductData
DurianManagement/DidFetchHawkeyeAISManufacturerName
DurianManagement/DidFetchHawkeyeAISModelName
DurianManagement/DidFetchHawkeyeAISModelColorCode
DurianManagement/DidFetchHawkeyeAISAccessoryCategory
DurianManagement/DidFetchHawkeyeAISAccessoryCapabilities
DurianManagement/DidFetchHawkeyeAISFindMyVersion
DurianManagement/DidFetchHawkeyeAISBatteryType
DurianManagement/DidObserveAdvertisement
DurianManagement/DidFetchStatusOfUTEnablementRequirements
-[CLFindMyAccessoryManager handleMessage:]
CoreLocation: #durian Got a message we do not understand... dropping!
-[CLFindMyAccessoryManager handleInterruption]
CLFindMyAccessoryManager.mm
messageName
device
DurianManagement/Connect
DurianManagement/Disconnect
DurianManagement/FetchConnectionState
sequence
DurianManagement/StartSoundSequence
DurianManagement/StartUnauthorizedSound
DurianManagement/StopSound
DurianManagement/StopUnauthorizedSound
DurianManagement/GetMultiStatus
DurianManagement/GetMultiPartStatus
DurianManagement/DumpLogs
DurianManagement/InduceCrash
DurianManagement/Unpair
DurianManagement/SetNearOwnerTimeout
DurianManagement/SetTagType
DurianManagement/SetObfuscatedIdentifier
configuration
DurianManagement/SetWildConfiguration
DurianManagement/RollWildKey
DurianManagement/SetKeyRollInterval
DurianManagement/SetBatteryStatus
DurianManagement/FetchBatteryStatus
DurianManagement/FetchUserStats
DurianManagement/SetAccelerometerSlopeMode
DurianManagement/GetAccelerometerSlopeModeConfiguration
DurianManagement/SetAccelerometerOrientationMode
DurianManagement/GetAccelerometerOrientationModeConfiguration
DurianManagement/SetUnauthorizedPlaySoundRateLimit
DurianManagement/FetchFirmwareVersion
DurianManagement/FetchTxPower
DurianManagement/StartAggressiveAdvertising
DurianManagement/StopAggressiveAdvertising
DurianManagement/StartUnauthorizedAggressiveAdvertising
DurianManagement/SetHawkeyeTestMode
DurianManagement/SetHawkeyeUTMotionConfig
DurianManagement/FetchHawkeyeAISProductData
DurianManagement/FetchHawkeyeAISManufacturerName
DurianManagement/FetchHawkeyeAISModelName
DurianManagement/FetchHawkeyeAISModelColorCode
DurianManagement/FetchHawkeyeAISAccessoryCategory
DurianManagement/FetchHawkeyeAISAccessoryCapabilities
DurianManagement/FetchHawkeyeAISFindMyVersion
DurianManagement/FetchHawkeyeAISBatteryType
DurianManagement/FetchHawkeyeSerialNumber
DurianManagement/FetchHawkeyeCurrentPrimaryKey
DurianManagement/FetchHawkeyeiCloudIdentifier
DurianManagement/StartMonitoringForAvengerAdvertisementsForBTFinding
DurianManagement/StopMonitoringForAvengerAdvertisementsForBTFinding
DurianManagement/PerformAggressiveScanForSeparationAlerts
DurianManagement/PerformLongAggressiveScanForSeparationAlerts
DurianManagement/StopLongAggressiveScanForSeparationAlerts
DurianManagement/PerformAggressiveScanForTrackingAvoidance
DurianManagement/PerformHELEScanForTrackingAvoidance
DurianManagement/PerformAggressiveScanForDurianService
DurianManagement/FetchStatusOfUTEnablementRequirements
macAddress
DurianManagement/FetchAISForTAUnknownBeacon
type
DurianManagement/StageTADetection
DurianManagement/ForceSurfaceStagedDetections
-[CLFindMyAccessoryManager initRangingOnDevice:macAddress:]
CoreLocation: Init Ranging on device: %@
-[CLFindMyAccessoryManager deinitRangingOnDevice:]
CoreLocation: Deinit Ranging on device: %@
-[CLFindMyAccessoryManager configureRangingOnDevice:macAddress:countryCode:uwbChannel:acqPreamble:trackingPreamble:interval:]
CoreLocation: Configure Ranging on device: %@
-[CLFindMyAccessoryManager prepareRangingOnDevice:]
CoreLocation: Prepare Ranging on device: %@
-[CLFindMyAccessoryManager startRangingOnDevice:targetEventCounter:]
CoreLocation: Start Ranging on device: %@
-[CLFindMyAccessoryManager stopRangingOnDevice:]
CoreLocation: Stop Ranging on device: %@
-[CLFindMyAccessoryManager startEventCounterForDevice:]
CoreLocation: Start EventCounter on device: %@
-[CLFindMyAccessoryManager stopEventCounterForDevice:]
CoreLocation: Stop EventCounter on device: %@
DurianManagement/ScanForNearOwner
DurianManagement/ScanForHELE
DurianManagement/ScanForNearbyDevicesLong
DurianManagement/StopScanForNearbyDevicesLong
DurianManagement/InitRanging
DurianManagement/DeinitRanging
DurianManagement/ConfigureRanging
DurianManagement/PrepareRanging
DurianManagement/StartRanging
DurianManagement/StopRanging
DurianManagement/StartEventCounter
DurianManagement/StopEventCounter
void CLRegulatoryConfigInternal::addConfigForIso(std::string, NSDictionary *)
CoreLocation: #clreg,addConfigForIso,%s
void CLRegulatoryConfigInternal::addConfigForCircularRegion(CLCircularRegion *, NSDictionary *)
CoreLocation: #clreg,addConfigForCircularRegion,%.6f,%.6f,%.2f
void CLRegulatoryConfigInternal::addConfigForIsoList(CLRegulatoryIsoList, NSDictionary *)
CoreLocation: #clreg,#warning,addConfigForIsoList,invalidArgs,ignoring
CoreLocation: #clreg,#warning,addConfigForIsoList,emptyIso,ignoring
void CLRegulatoryConfigInternal::addConfigForCircularRegionList(CLRegulatoryCircularRegionList, NSDictionary *)
CoreLocation: #clreg,#warning,addConfigForCircularRegionList,invalidArgs,ignoring
CoreLocation: #clreg,#warning,addConfigForCircularRegionList,invalidRadius,ignoring
bool CLRegulatoryConfigInternal::fetchRAEConfig(CLLocation *, CLRegulatoryConfigCallback)
CoreLocation: #clreg,fetchRAEConfig,%{private}.6f,%{private}.6f,%{private}.2f,distToLocation,%{private}2.f,result,found
bool CLRegulatoryConfigInternal::fetchRAEConfig(CLLocation *, CLRegulatoryConfigCallback)_block_invoke
CoreLocation: #clreg,completionCallback,%{private}@,nil,nil
CoreLocation: #clreg,fetchRAEConfig,%{private}.6f,%{private}.6f,%{private}.2f,distToLocation,%{private}2.f,result,notFound
CoreLocation: #clreg,fetchRAEConfig,no RAEs matched
void CLRegulatoryConfigInternal::sendIsoConfig(NSString *, CLRegulatoryIsoList, CLRegulatoryConfigCallback)
CoreLocation: #clreg,completionCallback,default,nil,nil
CoreLocation: #clreg,completionCallback,%{private}@,%{private}@,nil
void CLRegulatoryConfigInternal::runMapsQuery(GEOLocation *, CLRegulatoryConfigInternal::MapsResultCallback)
CoreLocation: #clreg,#map,query,lla,%{private}.6f,lon,%{private}.6f,accuracy,%{private}.2f
void CLRegulatoryConfigInternal::runMapsQuery(GEOLocation *, CLRegulatoryConfigInternal::MapsResultCallback)_block_invoke
CoreLocation: #clreg,#map,response,#warning,error,%@
CoreLocation: #clreg,#map,response,#warning,results,Nil
CoreLocation: #clreg,#map,response,#warning,invalidResultEntry,ignoring
CoreLocation: #clreg,#map,response,disputed,first,%{private}s,interested,%@
CoreLocation: #clreg,#map,response,disputed,next,%{private}s,interested,%@
CoreLocation: #clreg,#map,response,nonDisputed,first,%{private}@
CoreLocation: #clreg,#map,response,nonDisputed,next,%{private}@
v24@?0@"NSSet"8@"NSError"16
void CLRegulatoryConfigInternal::fetchIsoOrDefaultConfig(CLLocation *, CLRegulatoryConfigCallback)
CoreLocation: #clreg,#warning,fetchIsoOrDefaultConfig,geoLocationAllocFailed
void CLRegulatoryConfigInternal::fetchIsoOrDefaultConfig(CLLocation *, CLRegulatoryConfigCallback)_block_invoke
CoreLocation: #clreg,cbLocation,iso,%{private}@,neighbors,%{private}@
v24@?0@"NSString"8@"NSMutableSet"16
CoreLocation: #clreg,cbExtendedLocation,iso,%{private}@,neighbors,%{private}@
CoreLocation: #clreg,cbWrapper,isoActual,%{private}@,neighborsWithinLocation,%{private}@,extendedNeighbors,%{private}@
void CLRegulatoryConfigInternal::fetchConfigForLocation(CLLocation *, CLRegulatoryConfigCallback)
CoreLocation: #clreg,fetchConfigForLocation,#warning,location is nil
CoreLocation: #clreg,fetchConfigForLocation,%{private}.6f,%{private}.6f,%{private}.2f
CoreLocation: #clreg,fetchConfigForLocation,#warning,invalidAccuracy
const CLRegulatoryConfigInternal::CircularZoneConfig *CLRegulatoryConfigInternal::findRAEConfig(CLLocation *)
CoreLocation: #clreg,findRAEConfig,%{private}.6f,%{private}.6f,%{private}.2f,distToLocation,%{private}2.f,result,found
CoreLocation: #clreg,findRAEConfig,%{private}.6f,%{private}.6f,%{private}.2f,distToLocation,%{private}2.f,result,notFound
CoreLocation: #clreg,findRAEConfig,no RAEs matched
kCLRegRegionTypeKey
kCLRegRegionTypeDefault
void CLRegulatoryConfigInternal::sendRaeInfoAsync(NSDictionary *, CLRegulatoryInfoCallback)_block_invoke
kCLRegRegionTypeRae
void CLRegulatoryConfigInternal::sendIsoInfoSync(CLRegulatoryRegion, CLRegulatoryRegionMutableList, CLRegulatoryInfoCallback)
CoreLocation: sendIsoInfoSync,region,%{private}@,neighbors,%{private}@
void CLRegulatoryConfigInternal::sendIsoInfoSync(CLRegulatoryRegion, CLRegulatoryRegionMutableList, CLRegulatoryInfoCallback)_block_invoke
CoreLocation: #clreg,invalidRegionType
kCLRegNameKey
kCLRegGeoRegionMatchedKey
kCLRegNeighborsKey
v24@?0@"NSString"8@"NSDictionary"16
kCLRegRegionTypeGeo
void CLRegulatoryConfigInternal::runMapInfoQuery(GEOLocation *, CLRegulatoryConfigInternal::MapsInfoReply)
void CLRegulatoryConfigInternal::runMapInfoQuery(GEOLocation *, CLRegulatoryConfigInternal::MapsInfoReply)_block_invoke
CoreLocation: #clreg,#map,response,lla,%{private}.6f,lon,%{private}.6f,accuracy,%{private}.2f,results,%{private}@
kCLGEOTerritoryInfoKey
%llX
void CLRegulatoryConfigInternal::appendNeighbor(CLRegulatoryRegionMutableList, CLRegulatoryRegion, NSString *)
CoreLocation: Invalid neighbor or excludeRegionName,%{private}@,%{private}@
void CLRegulatoryConfigInternal::sendIsoOrDefaultInfo(CLLocation *, CLRegulatoryInfoCallback)
v24@?0@"NSDictionary"8@"NSMutableSet"16
void CLRegulatoryConfigInternal::fetchInfoForLocation(CLLocation *, CLRegulatoryInfoCallback)
CoreLocation: #clreg,fetchInfoForLocation,#warning,location is nil
CoreLocation: #clreg,fetchInfoForLocation,%{private}.6f,%{private}.6f,%{private}.2f
CoreLocation: #clreg,fetchInfoForLocation,#warning,invalidAccuracy
bool CLRacingRoute::convertRouteDataToMatrix(NSArray<CLRoutePoint *> *)
CoreLocation: CLRR,convertRouteDataToMatrix,input data array is null
CoreLocation: CLRR,convertRouteDataToMatrix,input data array is empty
CoreLocation: CLRR,convertRouteDataToMatrix,input data point is null at index,%{public}d
CoreLocation: CLRR,convertRouteDataToMatrix,invalid coordinates,lat,%{private}.7lf,lon,%{private}.7lf,at index,%{public}d
CoreLocation: CLRR,convertRouteDataToMatrix,invalid reference point,lat,%{private}.7lf,lon,%{private}.7lf,alt,%{private}.2lf,at index,%{public}d
CoreLocation: CLRR,convertRouteDataToMatrix,raceStartLineProximityIndex,%{public}d
CoreLocation: CLRR,convertRouteDataToMatrix,boxRows,%{public}d,boxColumns,%{public}d,boxMinLat,%{private}.7lf,boxMaxLat,%{private}.7lf,boxMinLon,%{private}.7lf,boxMaxLon,%{private}.7lf
CoreLocation: CLRR,convertRouteDataToMatrix,time,%{public}.1lf,lat,%{private}.7lf,lon,%{private}.7lf,alt,%{private}.2lf,odom,%{public}.2lf,signalEnv,%{public}d,pointCount,%{public}d
CoreLocation: CLRR,convertRouteDataToMatrix,invalid index for location,lat,%{private}.7lf,lon,%{private}.7lf
bool CLRacingRoute::updateScoreboard(CLRoutePoint *, CLRoutePoint *, const CLRacingRoute::RacingRoutePointType &, RacingRouteScoreboard &)
CoreLocation: CLRR,updateScoreboard,null data point
CoreLocation: CLRR,updateScoreboard,invalid data point,%{private}.7lf,%{private}.7lf,%{private}.7lf,%{private}.7lf
bool CLRacingRoute::updateScoreboard(CLRoutePoint *, CLRoutePoint *, CLRoutePoint *, const double &, const CLRacingRoute::RacingRoutePointType &, RacingRouteScoreboard &)
CoreLocation: CLRR,updateScoreboard,null input data or segment point
CoreLocation: CLRR,updateScoreboard,invalid input data or segment point,%{private}.7lf,%{private}.7lf,%{private}.7lf,%{private}.7lf,%{private}.7lf,%{private}.7lf
CoreLocation: CLRR,updateScoreboard,invalid raceStartPointOnReferenceRoute,%{private}.7lf,%{private}.7lf
CoreLocation: CLRR,updateScoreboard,invalid referenceState,%{private}.7lf,%{private}.7lf
bool CLRacingRoute::EvaluateProjectionStatus(RacingRouteState &, RacingRouteState &) const
CoreLocation: CLRR,EvaluateProjectionStatus,user moved but its projection on reference route is same as before,skip this point,timestamp,%{private}.1lf
CoreLocation: CLRR,EvaluateProjectionStatus,projection went backward,timestamp,%{private}.1lf
void CLRacingRoute::updateDistanceAndAveragePace(RacingRouteState &, RacingRouteState &) const
CoreLocation: CLRR,updateDistanceAndAveragePace,DistanceAlongReferenceRoute passed upper threshold
CoreLocation: CLRR,updateDistanceAndAveragePace,DistanceAlongReferenceRoute passed lower threshold
bool CLRacingRoute::findNearestPointIndex(CLRoutePoint *, const NSArray<CLRoutePoint *> *, const int &, const int &, const CLRacingRoute::RacingRoutePointType &, int &)
CoreLocation: CLRR,findNearestPointIndex,invalid search range index,fromIndex,%{public}d,toIndex,%{public}d
CoreLocation: CLRR,findNearestPointIndex,invalid coordinates,lat,%{private}.7lf,lon,%{private}.7lf
CoreLocation: CLRR,findNearestPointIndex,reached end of reference route
CoreLocation: CLRR,findNearestPointIndex,invalid search index,%{public}d,array size,%{public}lu
CoreLocation: CLRR,findNearestPointIndex,start point is matched to reference head section,min distance,%{public}.2lf,index from start of reference route,%{public}d
CoreLocation: CLRR,findNearestPointIndex,min distance,%{public}.2lf,index from start of search window,%{public}d
void CLRacingRoute::updateSearchRange(const int &, int &, int &, bool &) const
CoreLocation: CLRR,updateSearchRange,empty matrix cell at index,%d,
CoreLocation: CLRR,updateSearchRange,detected a short segment across the cell border,expanding the search range
bool CLRacingRoute::processLocationPoint(CLRoutePoint *, const NSArray<CLRoutePoint *> *, const int &, const CLRacingRoute::RacingRoutePointType &, RacingRouteScoreboard &)
CoreLocation: CLRR,processLocationPoint,current data point is null
CoreLocation: CLRR,processLocationPoint,input data array is null
CoreLocation: CLRR,processLocationPoint,invalid matrix index
CoreLocation: CLRR,processLocationPoint,failed to determine neighboring cells index
CoreLocation: CLRR,processLocationPoint,unknown point type
CoreLocation: CLRR,processLocationPoint,processing matrix cell index,%{public}d
CoreLocation: CLRR,processLocationPoint,no points within the accepted distance in matrix cell index,%{public}d
CoreLocation: CLRR,processLocationPoint,no matched point is found in the current or neighboring cells.Skip this point.
CoreLocation: CLRR,processLocationPoint,index exceeded buffer range,last matched index,%{public}d,buffer size,%{public}d
CoreLocation: CLRR,processLocationPoint,invalid raceStartLineProximityIndex,%{public}d
CoreLocation: CLRR,processLocationPoint,user joined the race at a wrong location,lastMatchedPointIndex,%{public}d,raceStartLineProximityIndex,%{public}d
CoreLocation: CLRR,processLocationPoint,invalid prematureRaceEndIndex,%{public}d
CoreLocation: CLRR,processLocationPoint,race start point already detected,most recent matched point jumped from head to tail of the reference route,skip this data point to avoid premature race ending,reference route count,%{public}lu,premature race ending index,%{public}d,last matched index,%{public}d,matched index before update,%{public}d
CoreLocation: CLRR,processLocationPoint,pointType,%{public}d,last matched index,%{public}d
CoreLocation: CLRR,processLocationPoint,reached end of reference route
CoreLocation: CLRR,processLocationPoint,end the race in %{public}.2lf seconds if it did not happen naturally
CoreLocation: CLRR,processLocationPoint,too close to finish line,jump to the end of the reference route
CoreLocation: CLRR,processLocationPoint,timeout,jump to the end of the reference route,current time,%{public}.2lf,registeredTimeAtThreshold,%{public}.2lf,endOfRaceTimeThreshold,%{public}.2lf
CoreLocation: CLRR,processLocationPoint,failed to set the most recent point
CoreLocation: CLRR,processLocationPoint,failed to process the most recent point,the matched point is too far away
bool CLRacingRoute::setLocationPoint(CLRoutePoint *, const NSArray<CLRoutePoint *> *, const int &, const bool &, const CLRacingRoute::RacingRoutePointType &, RacingRouteScoreboard &)
CoreLocation: CLRR,setLocationPoint,current data point is null
CoreLocation: CLRR,setLocationPoint,input data array is null
CoreLocation: CLRR,setLocationPoint,index out of bounds,input array size,%{public}lu,index,%{public}d
CoreLocation: CLRR,setLocationPoint,reached end of route
CoreLocation: CLRR,setLocationPoint,startOfArray,failed to convert LLA to ENU at index,%{public}d
CoreLocation: CLRR,setLocationPoint,startOfArray,projectionOnNextSegment,failed to get projection ratio at index,%{public}d
CoreLocation: CLRR,setLocationPoint,startOfArray,projectionOnNextSegment,failed to update scoreboard at index,%{public}d
CoreLocation: CLRR,setLocationPoint,startOfArray,this matched point has already been the projected point,skip this point
CoreLocation: CLRR,setLocationPoint,startOfArray,failed to update scoreboard at index,%{public}d
CoreLocation: CLRR,setLocationPoint,endOfArray,failed to convert LLA to ENU at index,%{public}d
CoreLocation: CLRR,setLocationPoint,endOfArray,projectionOnPreviousSegment,failed to get projection ratio at index,%{public}d
CoreLocation: CLRR,setLocationPoint,endOfArray,projectionOnPreviousSegment,failed to update scoreboard at index,%{public}d
CoreLocation: CLRR,setLocationPoint,endOfArray,this matched point has already been the projected point,skip this point
CoreLocation: CLRR,setLocationPoint,endOfArray,failed to update scoreboard at index,%{public}d
CoreLocation: CLRR,setLocationPoint,failed to convert LLA to ENU at index,%{public}d
CoreLocation: CLRR,setLocationPoint,projectionOnBothSegments,wrt n1,failed to get projection ratio at index,%{public}d
CoreLocation: CLRR,setLocationPoint,projectionOnBothSegments,wrt n0,failed to get projection ratio at index,%{public}d
CoreLocation: CLRR,setLocationPoint,projectionOnBothSegments,pickedNearestPoint,this matched point has already been the projected point,skip this point
CoreLocation: CLRR,setLocationPoint,projectionOnBothSegments,pickedNearestPoint,failed to update scoreboard at index,%{public}d
CoreLocation: CLRR,setLocationPoint,projectionOnBothSegments,pickedNextSegment,failed to update scoreboard at index,%{public}d
CoreLocation: CLRR,setLocationPoint,projectionOnBothSegments,pickedPreviousSegment,failed to update scoreboard at index,%{public}d
CoreLocation: CLRR,setLocationPoint,projectionOnNearestPoint,this matched point has already been the projected point,skip this point
CoreLocation: CLRR,setLocationPoint,projectionOnNearestPoint,failed to update scoreboard at index,%{public}d
CoreLocation: CLRR,setLocationPoint,projectionOnNextSegment,failed to get projection ratio at index,%{public}d
CoreLocation: CLRR,setLocationPoint,projectionOnNextSegment,failed to update scoreboard at index,%{public}d
CoreLocation: CLRR,setLocationPoint,projectionOnPreviousSegment,failed to get projection ratio at index,%{public}d
CoreLocation: CLRR,setLocationPoint,projectionOnPreviousSegment,failed to update scoreboard at index,%{public}d
int CLRacingRoute::getNumberOfRoutePointsToAdd() const
CoreLocation: CLRR,getNumberOfRoutePointsToAdd,required number of points,%{public}d
CLRacingRouteBufferUpdateState CLRacingRoute::updateRoutePointsBuffer(NSArray<CLRoutePoint *> *)
CoreLocation: CLRR,updateRoutePointsBuffer,input data array is null
CoreLocation: CLRR,updateRoutePointsBuffer,recovery mode,update started,number of requested points,%{public}d,number of given points,%{public}d
CoreLocation: CLRR,updateRoutePointsBuffer,update started,number of requested points,%{public}d,number of given points,%{public}d
CoreLocation: CLRR,updateRoutePointsBuffer,input data array is empty
CoreLocation: CLRR,updateRoutePointsBuffer,no more data available,rolling buffer includes the end of the reference route
CoreLocation: CLRR,updateRoutePointsBuffer,buffer capacity exceeded,bufferSize,%{public}d,numberOfPointsToAdd,%{public}d,routePointsCount,%{public}d
CoreLocation: CLRR,updateRoutePointsBuffer,rolling buffer includes the end of the reference route
CoreLocation: CLRR,updateRoutePointsBuffer,buffer capacity exceeded,bufferSize,%{public}d,numberOfPointsToAdd,%{public}d,bufferedRoutePointsCount,%{public}u
CoreLocation: CLRR,updateRoutePointsBuffer,location series too short,minimumPointsToProcess,%{public}u,bufferedRoutePointsCount,%{public}u
CoreLocation: CLRR,updateRoutePointsBuffer,buffer capacity exceeded,bufferSize,%{public}d,bufferedRoutePointsCount,%{public}u,routePointsCount,%{public}d
CoreLocation: CLRR,updateRoutePointsBuffer,unable to convert reference route to matrix
CoreLocation: CLRR,updateRoutePointsBuffer,update completed,rollingBufferUpdateCounter,%{public}d,lastMatchedPointIndex,%{public}d,rollingBufferStartIndexOnReferenceRoute,%{public}d,referenceRouteDataPointCounter,%{public}d,numberOfRoutePointsToAdd,%{public}d,routePointsArrayInitialized,%{public}d
bool CLRacingRoute::updateDistanceDuringOffRoutePeriod(const CLRoutePoint *, RacingRouteScoreboard &) const
CoreLocation: CLRR,getDistanceDuringOffRoutePeriod,current data point is null
CoreLocation: CLRR,getDistanceDuringOffRoutePeriod,invalid array index, %{public}d
CoreLocation: CLRR,getDistanceDuringOffRoutePeriod,invalid time, %{public}.2lf
CoreLocation: CLRR,getDistanceDuringOffRoutePeriod,distAlongRefRoute,%{private}.2lf,refDistAlongRefRoute,%{private}.2lf
void CLRacingRoute::printDebugLog(const RacingRouteScoreboard &, const std::string) const
CoreLocation: CLRR,printDebugLog,pointType,%{public}s,time,%{public}.1lf,lat,%{private}.7lf,lon,%{private}.7lf,alt,%{private}.2lf,timeFromStart,%{public}.1lf,offRouteTime,%{public}.1lf,distFromStart,%{public}.2lf,offRouteDist,%{public}.2lf,pace,%{private}.2lf,odom,%{public}.2lf,distAlongRefRoute,%{public}.2lf,refTime,%{public}.1lf,refLat,%{private}.7lf,refLon,%{private}.7lf,refAlt,%{private}.2lf,refTimeFromStart,%{public}.1lf,refOffRouteTime,%{public}.1lf,refDistFromStart,%{public}.2lf,refOffRouteDist,%{public}.2lf,refPace,%{private}.2lf,refOdom,%{public}.2lf,refDistAlongRefRoute,%{public}.2lf,signalEnv,%{public}d,timeAhead,%{public}.2lf,distanceAhead,%{public}.2lf
void CLRacingRoute::printRoutePointArray() const
CoreLocation: CLRR,printRoutePointArray,fRoutePoints is a null pointer
CoreLocation: CLRR,printRoutePointArray,boxRows,%{public}d,boxColumns,%{public}d,boxMinLat,%{private}.7lf,boxMaxLat,%{private}.7lf,boxMinLon,%{private}.7lf,boxMaxLon,%{private}.7lf
CoreLocation: CLRR,printRoutePointArray,time,%{public}.1lf,lat,%{private}.7lf,lon,%{private}.7lf,alt,%{private}.2lf,odom,%{public}.2lf,signalEnv,%{public}d,pointCount,%{public}d
CLRacingRouteConfigurationState CLRacingRoute::configureRouteModel(const CLMotionActivity::Type &, const int &, const int &)
CoreLocation: CLRR,configureRouteModel,unsupported activity type,%{public}d
CoreLocation: CLRR,configureRouteModel,buffer size is too small,%{public}d
CoreLocation: CLRR,configureRouteModel,configuration succeeded,workout activity type,%{public}u,route points rolling buffer size,%{public}d,number of route points to add,%{public}d,off route grace duration,%{public}d
CLRacingRouteLocationState CLRacingRoute::getPerformanceResults(CLRoutePoint *, RacingRouteScoreboard &)
CoreLocation: CLRR,getPerformanceResults,route model has NOT been configured successfully,expire the race session
CoreLocation: CLRR,getPerformanceResults,passed finish line
CoreLocation: CLRR,getPerformanceResults,current data point is null
CoreLocation: CLRR,getPerformanceResults,invalid input data,time,%{public}.1lf,lastOnRouteTime,%{public}.1lf,odom,%{public}.2lf,lastOnRouteOdom,%{public}.2lf
CoreLocation: CLRR,getPerformanceResults,invalid input data,lat,%{private}.7lf,lon,%{private}.7lf,alt,%{private}.2lf
CoreLocation: CLRR,getPerformanceResults,race session expired
CoreLocation: CLRR,getPerformanceResults,race session expired but failed to updateDistanceDuringOffRoutePeriod
CoreLocation: CLRR,getPerformanceResults,pointType,currentLocation,time,%{private}.1lf,lat,%{private}.7lf,lon,%{private}.7lf,alt,%{private}.2lf,odom,%{private}.2lf,signalEnv,%{private}d,pointCount,%{public}d
CoreLocation: CLRR,getPerformanceResults,reference route total length,%{private}.2lf
CoreLocation: CLRR,getPerformanceResults,invalid signal environment type,%{public}d
CoreLocation: CLRR,getPerformanceResults,nearest neighbor maximum accepted distance,%{private}.2lf
CoreLocation: CLRR,getPerformanceResults,race not started yet,current location outside of bounding box,unspecified state
CoreLocation: CLRR,getPerformanceResults,current location outside of bounding box,user is off-route
CoreLocation: CLRR,getPerformanceResults,user is off-route but failed to updateDistanceDuringOffRoutePeriod
CoreLocation: CLRR,getPerformanceResults,current location outside of bounding box,unspecified state
CoreLocation: CLRR,getPerformanceResults,unspecified state,invalid index for location,lat,%{private}.7lf,lon,%{private}.7lf
CoreLocation: CLRR,getPerformanceResults,race not started yet,unspecified state
start
CoreLocation: CLRR,getPerformanceResults,user is off-route
CoreLocation: CLRR,getPerformanceResults,unspecified state
rejoin
onRoute
bool CLRacingRoute::setRacingRouteParameters(CLRacingRouteParameters *)
CoreLocation: CLRR,setRacingRouteParameters,set race parameters
CoreLocation: CLRR,setRacingRouteParameters,racingRouteParameters is null
CoreLocation: CLRR,setRacingRouteParameters,racingRouteParameters.routeMatrixIndexVec is null
CoreLocation: CLRR,setRacingRouteParameters,racingRouteParameters.racingRouteVariables is null
CoreLocation: CLRR,setRacingRouteParameters,racingRouteParameters.routeBoundingBox is null
CoreLocation: CLRR,setRacingRouteParameters,racingRouteParameters.startPointOnCurrentRoute is null
CoreLocation: CLRR,setRacingRouteParameters,racingRouteParameters.startPointOnReferenceRoute is null
CoreLocation: CLRR,setRacingRouteParameters,racingRouteParameters.lastOnRouteDataPoint is null
CoreLocation: CLRR,setRacingRouteParameters,racingRouteParameters.lastProjectedDataPoint is null
CoreLocation: CLRR,setRacingRouteParameters,recoveryMode,%{public}d,lastMatchedPointIndex,%{public}d,lastMatchedPointIndexOnReferenceRoute,%{public}d,timestampOfLastMatchedPointOnReferenceRoute,%{public}.1lf
RacingRoute
UIApplication
static bool CLNameValuePair::encodeBase64(const void *, unsigned long, std::string &)
CoreLocation: processed %p %d to (%s)
CLNameValuePair::CLNameValuePair()
CoreLocation: could not create new mutable dictionary
CLNameValuePair::CLNameValuePair(CFDictionaryRef)
Memory
bool CLNameValuePair::writeDataToFile(const char *, CFDataRef, CLNameValuePair::CLNVPDataProtection) const
CoreLocation: Could not create NSURL for file: %{public}s
CoreLocation: Could not write data to disk %{public}s, %{public}s
virtual bool CLNameValuePair::saveToFile(const char *) const
CoreLocation: Could not serialize data for file %{public}s
CLNameValuePair.SaveToBinaryFile
virtual void CLNameValuePair::clearInternal(const CFStringRef, int)
CoreLocation: key %{public}s does not have element %{public}d in array of size %{public}ld
CoreLocation: key %{public}s does not have element %{public}d in non-array type %{public}lu
virtual bool CLNameValuePair::get(CFStringRef, bool &, int) const
CoreLocation: Unsupported type at %@:%@ (domain:key)
virtual bool CLNameValuePair::get(CFStringRef, uint16_t &, int) const
virtual bool CLNameValuePair::get(CFStringRef, short &, int) const
virtual bool CLNameValuePair::get(CFStringRef, uint32_t &, int) const
virtual bool CLNameValuePair::get(CFStringRef, int64_t &, int) const
virtual bool CLNameValuePair::get(CFStringRef, int &, int) const
virtual bool CLNameValuePair::get(CFStringRef, long &, int) const
virtual bool CLNameValuePair::get(CFStringRef, double &, int) const
virtual bool CLNameValuePair::get(CFStringRef, CLNameValuePair &, int) const
virtual bool CLNameValuePair::get(CFStringRef, std::string &, int) const
virtual bool CLNameValuePair::get(CFStringRef, CFArrayRef &) const
CoreLocation: type IDs do not match for key %{public}s - %{public}lu vs %{public}lu
virtual bool CLNameValuePair::get(CFStringRef, CFDataRef &, int) const
virtual bool CLNameValuePair::get(CFStringRef, CFStringRef &, int) const
virtual bool CLNameValuePair::get(CFStringRef, const char *&, unsigned int &, int) const
virtual bool CLNameValuePair::copyInternal(CFStringRef, CFTypeRef &, int) const
CoreLocation: specified index is out of range for key %{public}s (%{public}d of %{public}ld)
CoreLocation: specified index %{public}d not applicable to type %{public}lu for key %{public}s
virtual bool CLNameValuePair::set(CFStringRef, const bool &)
CoreLocation: could not create cf type for key %{public}s
virtual bool CLNameValuePair::set(CFStringRef, const uint16_t &)
virtual bool CLNameValuePair::set(CFStringRef, const short &)
virtual bool CLNameValuePair::set(CFStringRef, const uint32_t &)
virtual bool CLNameValuePair::set(CFStringRef, const int64_t &)
virtual bool CLNameValuePair::set(CFStringRef, const int &)
virtual bool CLNameValuePair::set(CFStringRef, const long &)
virtual bool CLNameValuePair::set(CFStringRef, const double &)
virtual bool CLNameValuePair::set(CFStringRef, const char *)
virtual bool CLNameValuePair::set(CFStringRef, const CLNameValuePair &)
virtual bool CLNameValuePair::insert(CFStringRef, const bool &)
virtual bool CLNameValuePair::insert(CFStringRef, const uint16_t &)
virtual bool CLNameValuePair::insert(CFStringRef, const short &)
virtual bool CLNameValuePair::insert(CFStringRef, const uint32_t &)
virtual bool CLNameValuePair::insert(CFStringRef, const int64_t &)
virtual bool CLNameValuePair::insert(CFStringRef, const int &)
virtual bool CLNameValuePair::insert(CFStringRef, const long &)
virtual bool CLNameValuePair::insert(CFStringRef, const double &)
virtual bool CLNameValuePair::insert(CFStringRef, const char *)
virtual bool CLNameValuePair::insert(CFStringRef, const CLNameValuePair &)
virtual bool CLNameValuePair::serializeBinary(CFDataRef *) const
CoreLocation: could not create write stream
CoreLocation: could not open write stream
unknown error
CoreLocation: could not write data, error code, %{public}ld, error domain, %{public}s
virtual bool CLNameValuePair::deserialize(const CFDataRef)
CoreLocation: could not create intermediate property list - %{public}ld (%{public}s)
virtual void CLNameValuePair::print() const
CoreLocation: %s
<empty>
static void CLNameValuePair::printKeyValue(const void *, const void *, void *)
CoreLocation: 
%s = <dictionary (%ld entries)>:
CoreLocation: 
%s = %s
CoreLocation: 
%s = %0.6f
CoreLocation: 
%s = %d
CoreLocation: 
%s = <unhandled value type %lu>
type ID does not match - %lu vs %lu
%s = <dictionary (%ld entries)>:
%s = %s
%s = %0.6f
%s = %d
%s = <unhandled value type %lu>
%s[%d]
static bool CLNameValuePair::fromCfType(const CFTypeRef, short &)
CoreLocation: could not get value
static bool CLNameValuePair::fromCfType(const CFTypeRef, int64_t &)
static bool CLNameValuePair::fromCfType(const CFTypeRef, int &)
static bool CLNameValuePair::fromCfType(const CFTypeRef, long &)
static bool CLNameValuePair::fromCfType(const CFTypeRef, double &)
CoreLocation: type IDs do not match - %{public}lu vs %{public}lu
static bool CLNameValuePair::fromCfType(const CFTypeRef, std::string &)
CoreLocation: could not convert to C string
CoreLocation: can't convert %{public}u data bytes
CoreLocation: #Warning type IDs do not match - %{public}lu
static bool CLNameValuePair::fromCfType(const CFTypeRef, const char *&, unsigned int &)
static bool CLNameValuePair::fromCfType(const CFTypeRef, CLNameValuePair &)
Direct_deprecated
CLReductiveFilterSuite.m
options
+[CLReductiveFilterSuite deriveLocationFromLocations:options:]
CoreLocation: Reductive filtering: Sum of weights <= 0 after at least one point added.
yyyy-MM-dd HH:mm:ss.SSSS
timestamp
Position
/System/Library/PrivateFrameworks/CompassUI.framework/CompassUI
void CLClientLoadCompassUIIfNecessary(void)
CoreLocation: Unable to load CompassUI framework
CUICalibration
CoreLocation: Could not load CUICalibrationClass from CompassUI framework
error == 0
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Daemon/Core/CSI/CLMachThreadSupport.mm
lock
info->fCount >= 0
(info->fCount == 0) || (info->fOwner == curThread)
(info->fCount > 0) || (info->fOwner == __null)
info->fCount > 0
unlock
kCLHeadingCodingKeyMagneticHeading
kCLHeadingCodingKeyTrueHeading
kCLHeadingCodingKeyAccuracy
kCLHeadingCodingKeyX
kCLHeadingCodingKeyY
kCLHeadingCodingKeyZ
kCLHeadingCodingKeyTimestamp
magneticHeading %.2f trueHeading %.2f accuracy %.2f x %+.3f y %+.3f z %+.3f @ %@
virtual bool CLPreferences::serialize(CFDataRef *) const
CoreLocation: ***not supported***
virtual bool CLPreferences::serializeBinary(CFDataRef *) const
virtual bool CLPreferences::deserialize(const CFDataRef)
virtual void CLPreferences::print() const
CoreLocation: 
<empty>
virtual void CLPreferences::merge(const CLPreferences &, bool)
virtual bool CLPreferences::loadFromFile(const char *)
virtual bool CLPreferences::saveToFile(const char *) const
virtual bool CLPreferences::saveToBinaryFile(const char *) const
virtual void CLPreferences::setInternal(const CFStringRef, const CFTypeRef)
CoreLocation: Attempt to set key %{public}s for read-only preferences %{public}s/%{public}s!
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Daemon/Shared/Utilities/CLPreferences.mm
containsInternal
OtherPref
kCLErrorDomain
kCLErrorDomainPrivate
kCLErrorUserInfoAlternateRegionKey
IsSimulator
<null>
<name>
<version>
<build>
hw.model
IOPlatformExpertDevice
IOPlatformSerialNumber
CLPlatformInfo::Provider CLPlatformInfo::getProviders()_block_invoke
CoreLocation: unknown hardware type %{private}d
locationd
static CLPlatformInfo::MotionProviders CLPlatformInfo::motionProviders()
CoreLocation: Unsupported HW type %d; file a radar to CoreMotion Factory | 1.0
CLPlatformInfo::MotionCapabilities CLPlatformInfo::queryMotionCaps()
CoreLocation: Unsupported HW type %{private}d; file a radar to CoreMotion Factory | 1.0
OverrideMotionCapEclipseService
CLMotionDefaultsWrite<bool>::CLMotionDefaultsWrite(const char *, const T &) [T = bool]
CoreLocation: motion default ignored,'%{public}s'.
Motion
odometer
deltaDistance
deltaDistanceAccuracy
coordinateFused
coordinateFusedWithVL
coordinateLatitude
coordinateLongitude
horizontalAccuracy
referenceFrame
altitude
verticalAccuracy
course
courseAccuracy
Name
Thoroughfare
SubThoroughfare
City
SubLocality
State
SubAdministrativeArea
CountryCode
Country
InlandWater
Ocean
/Library/Caches/locationd/
root
static std::string CLPersistentStore::getMutableStorePath(CLPersistentStoreType)
CoreLocation: no mutable store path for type, %{public}d
CoreLocation: could not get mutable store path for type, %{public}d
/System/Library/Frameworks/CoreLocation.framework/Support/
/System/Library/Frameworks/CoreLocation.framework
SIMULATOR_ROOT
kCLConnectionMessageBBTimeFreqTransferAssert
CLCallbackAssertionInternal::CLCallbackAssertionInternal(dispatch_queue_t, const char *, NSDictionary *, BBTimeFreqTransferCallback)_block_invoke
CoreLocation: CLBBTFTA,unexpected message,%s
kCLConnectionMessageBBTimeFreqTransferAssertError
kCLConnectionMessageBBTimeFreqTransferMeasurement
CLBBTFTA Error
(Unspecified)
kCLConnectionMessageAssertionLevelKey
InUseAssertion/kCLConnectionMessage
CLLocationPushServiceErrorDomain
kCLRegionCodingKeyIdentifier
kCLRegionCodingKeyOnBehalfOfBundleId
kCLRegionCodingKeyNotifyOnEntry
kCLRegionCodingKeyNotifyOnExit
kCLRegionCodingKeyConservativeEntry
kCLRegionCodingKeyEmergency
kCLRegionCodingKeyRegionType
kCLRegionCodingKeyDeviceId
kCLRegionCodingKeyHandoffTag
CLRegion.m
CLRegion is an abstract class. Use one of the derived classes
CLRegion (identifier:'%@')
AuthContext InUse:%d  RegResult:%d(%d) EffectiveMask:%d  ProvisionalMask:%d
CLFindMyAccessoryAbsoluteWildConfiguration <%hhx> DesiredKeyRollDate:%@ NextWildKeyIndex: %lu
kCLFindMyAccessoryWildConfigurationRollDate
kCLFindMyAccessoryWildConfigurationNextWildKeyIndex
cl_fence_handoff
kCLCircularRegionCodingKeyCenterLatitude
kCLCircularRegionCodingKeyCenterLongitude
kCLCircularRegionCodingKeyRadius
reserved
kCLCircularRegionCodingKeyMonitoringNearby
kCLCircularRegionCodingKeyLowPower
kCLCircularRegionEncodedKeyVersion
kCLRegionCodingKeyCenterLatitude
kCLRegionCodingKeyCenterLongitude
kCLRegionCodingKeyRadius
CLCircularRegion (identifier:'%@', center:<%+.8f,%+.8f>, radius:%.2fm)
bool CLGetUncertaintyScaleFactors(unsigned int, double *, double *)
CoreLocation: #CLEU,CLGetUncertaintyScaleFactors,input horzontal or vertical SF pointer is NULL
CoreLocation: #CLEU,CLGetUncertaintyScaleFactors,confidence out of bounds,%{public}d
CoreLocation: #CLEU,CLGetUncertaintyScaleFactors,conf,%{public}d,horzSF,%{public}f,vertSF,%{public}f
Emergency
double linearInterp(unsigned int, std::array<std::pair<unsigned int, double>, size>) [size = 9UL]
CoreLocation: #CLEU,linearInterp,x is less than the first point in table,x,%{public}d,table[0].first,%{public}d
CoreLocation: #CLEU,linearInterp,x is greater than the last point in table,x,%{public}d,table[size-1].first,%{public}d
CoreLocation: #CLEU,linearInterp,failed to find table points bounding x
CLBeaconRegionAnyIdentifier
CLBeaconRegion.m
beaconIdentityConstraint
kCLBeaconRegionCodingKeyProximityUUID
kCLBeaconRegionCodingKeyMajor
kCLBeaconRegionCodingKeyMinor
kCLBeaconRegionNotifyEntryStateOnDisplay
CLBeaconRegion (identifier:'%@', uuid:%@, major:%@, minor:%@)
kCLBeaconCodingKeyTimestamp
kCLBeaconCodingKeyProximityUUID
kCLBeaconCodingKeyMajor
kCLBeaconCodingKeyMinor
kCLBeaconCodingKeyProximity
kCLBeaconCodingKeyAccuracy
kCLBeaconCodingKeyRSSI
CLBeacon (uuid:%@, major:%@, minor:%@, proximity:%d +/- %.2fm, rssi:%ld, timestamp:%@)
com.apple.locationd.appreset
com.apple.locationd.appstatus
com.apple.locationd.techstatus
com.apple.locationd.started
com.apple.locationd.statusbar
com.apple.locationd.authorization
com.apple.locationd.gnssbands
Locations
LocationCount
transform
covariance
confidence
debugInfo
<_CLVLLocalizationResult: %p> {
%@.timestamp = %f,
%@.location = {
%@.coordinate = [%f, %f, %f],
%@.horizontalAccuracy = %f
%@},
%@.transform = [%f, %f, %f, %f;
%@%f, %f, %f, %f;
%@%f, %f, %f, %f;
%@%f, %f, %f, %f],
%@.covariance = [%f, %f, %f, %f, %f, %f;
%@%f, %f, %f, %f, %f, %f;
%@%f, %f, %f, %f, %f, %f;
%@%f, %f, %f, %f, %f, %f;
%@%f, %f, %f, %f, %f, %f;
%@%f, %f, %f, %f, %f, %f],
%@.confidence = %f
%@.debugInfo = %@
%+08.4lf%+09.4lf/
%+08.4lf%+09.4lf%+08.3lf/
SimulationScenarios
Couldn't get list of location simulation scenarios
plist
Selected location simulation scenario is not a file URL
Selected location simulation scenario does not exist
Selected location simulation scenario is not a property list
CLSimulation: Object passed to appendSimulatedLocation is not a CLLocation!
-[CLSimulationManager clearSimulatedCells]
CoreLocation: this SPI is obsolete and will be removed in the future
-[CLSimulationManager setSimulatedCell:]
-[CLSimulationManager startCellSimulation]
-[CLSimulationManager stopCellSimulation]
-[CLSimulationManager setSimulatedCellRegistrationStatus:]
-[CLSimulationManager setWifiScanResults:]
-[CLSimulationManager startWifiSimulation]
-[CLSimulationManager stopWifiSimulation]
-[CLSimulationManager setSimulatedWifiPower:]
-[CLSimulationManager flush]
com.apple.locationd.simulation
-[CLSimulationManager daemonProxy]_block_invoke
CoreLocation: Simulation connection interrupted
CoreLocation: Simulation connection invalidated
CoreLocation: Error fetching remoteObjectProxy
Simulation
CLBeaconIdentityConstraint.m
The UUID parameter is required
[decoder allowsKeyedCoding]
kCLBeaconIdentityConstraintUUID
kCLBeaconIdentityConstraintMajor
kCLBeaconIdentityConstraintMinor
[encoder allowsKeyedCoding]
CLBeaconIdentityConstraint (uuid:%@, major:%@, minor:%@)
LogFile
LogFileDirectory
LogFilePrefix
LogFileFlush
ShowError
LogFence
LogBufferSize
LogShowUI
LogFileLevel
LogBufferLevel
LogConsoleLevel
LogStackLevel
.log
com.apple.locationd.log.compression
vlog
CLLog.mm
newFullContentLength == fullContentLength
'\n' == buffer[fullContentLength - 1]
%s,%s,Time,%08.3f,Function,"%s",
%s,%s,Time,%08.3f,
%s,%s,logging locations to %s%s
NOTICE
CLLog
 and flushing immediately
 no flush
%s,%s,logging locations to an internal buffer with capacity %d
%s,%s,Failed to move aside log file %s (%d)
ERROR
.log.bz2
%s/%s
Failed to delete log
%s,%s,Rotation path is too long, could not delete old logs.
C16@?0r*8
%s,%s,Failed to write %s
%s,%s,could not open locations log %s, errno %d
Unplugged!
void CLLog::logHeader()
CoreLocation-%s
locationd was compiled on %s at %s
Mar  7 2023
20:23:04
%s @ system model %s / version %s
/usr/libexec/locationd @ system model %s / version %s
IOPlatformSerialNumber: %s
Begin settings dump (read at construction of CLSettings or upon darwin notification 'com.apple.locationd/prefs')
End settings dump
com.apple.timed
%s,%s,dumping internal buffer
LogNatalimetry
LogCalorimetry
userinfo
.plist
cache
.plist.log
%s,%s,could not copy %s log
WARNING
%s,%s,could not dump log file
%s,%s,Time,%08.3f,%d
0x%08lx %s + %lu
STATUS
STACK
%s,%s,Time,%08.3f,%d
0x%08lx 0x%08lx + %lu
%s,%s,Time,%08.3f,%d
0x%08lx
kCLVehicleHeadingCodingKeyTrueHeading
kCLVehicleHeadingCodingKeyTimestamp
trueHeading %.2f @ %@
%.2f
kCLVehicleSpeedCodingKeySpeed
kCLVehicleSpeedCodingKeyTimestamp
speed %.2f mps @ %@
%.0fmph
CLDurianIdentifier
CLDurianMacAddress
CLDurianConnectionState
CLDurianError
CLDurianLogs
CLDurianLogType
CLDurianVersionData
CLDurianBatteryStatus
CLDurianTagType
CLDurianObfuscatedIdentifier
CLDurianNearOwnerTimeout
CLDurianSoundSequence
CLDurianPersonalizationInfo
CLDurianFirmwareAssetURL
CLDurianWildConfig
CLDurianMultiStatus
CLDurianGroupRelation
CLDurianGroupMaintenance
CLDurianUserStats
CLDurianUserStatsPersistence
CLDurianAccelerometerSlopeModeConfigurationKey
CLDurianAccelerometerOrientationModeConfigurationKey
CLDurianAccelerometerModeKey
CLDurianSetUnauthorizedPlaySoundRateLimitKey
CLDurianKeyRollIndex
CLDurianKeyRollInterval
CLDurianRangingMacAddress
CLDurianRangingCountryCode
CLDurianRangingUwbChannel
CLDurianRangingAcqPreamble
CLDurianRangingTrackingPreamble
CLDurianRangingInterval
CLDurianRangingTargetEventCounter
CLDurianRangingStatus
CLDurianRangingEndReason
CLDurianRangingTimestampStatus
CLDurianRangingRtt
CLDurianRangingTat
CLDurianRangingCycleIndex
CLHawkeyeTaskOpcodeKey
CLHawkeyeTestModeKey
CLHawkeyeSeparatedUTTimeoutSecondsKey
CLHawkeyeSeparatedUTBackoffTimeoutSecondsKey
CLHawkeyeTxPowerKey
CLHawkeyeAISProductDataKey
CLHawkeyeAISManufacturerNameKey
CLHawkeyeAISModelNameKey
CLHawkeyeAISModelColorCodeKey
CLHawkeyeAISAccessoryCategoryKey
CLHawkeyeAISAccessoryCapabilitiesKey
CLHawkeyeAISFindMyVersionKey
CLHawkeyeAISBatteryTypeKey
CLHawkeyeSerialNumberKey
CLHawkeyeCurrentPrimaryKeyKey
CLHawkeyeiCloudIdentifierKey
CLHawkeyeDataFragmentKey
CLHawkeyeFirmwareAssetURLKey
CLHawkeyeProductGroupKey
CLHawkeyeProductNumberKey
CLHawkeyeFirmwareURLSandboxExtensionKey
CLHawkeyeLocalFirmwareInUseResultKey
CLHawkeyeAggressiveAdvertisementTimeoutKey
CLHawkeyeFetchTxPowerOwnerKey
CLAvengerAdvertisementScanDateKey
CLAvengerAdvertisementAddressKey
CLAvengerAdvertisementDataKey
CLAvengerAdvertisementStatusKey
CLAvengerAdvertisementRSSIKey
CLAvengerAdvertisementReservedKey
CLAvengerAdvertisementOwnershipTypeKey
CLAvengerAdvertisementChannelKey
CLTAEnablementRequirementsStatusKey
CLCircularLogBuffer
CLVisit.m
kCLVisitCodingKeyLatitude
kCLVisitCodingKeyLongitude
kCLVisitCodingKeyHorizontalAccuracy
kCLVisitCodingKeyArrivalDate
kCLVisitCodingKeyDepartureDate
kCLVisitCodingKeyDetectionDate
kCLVisitCodingKeyPlaceInference
<%+.8f,%+.8f> +/- %.2fm (%@ to %@) %@
CLGeocoder
[GEOMapService class]
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Framework/CoreLocation/CLGeocoder.m
-[CLGeocoder init]
-[CLGeocoder reverseGeocodeLocation:preferredLocale:heading:localResultsOnly:completionHandler:]_block_invoke
CoreLocation: Coarse MetaData cannot be decoded while reverse geocoding location, error, %@
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v24@?0@"<GEOMapItem>"8@"NSError"16
-[CLGeocoder _ticket:didReturnError:partialResultForLocation:]_block_invoke
CoreLocation: #Warning Geocode error: %{private}@
com.apple.locationd.synchronous
-[CLLocationInternalClient connection]_block_invoke
CoreLocation: #Spi, Interrupted
CoreLocation: #Spi, Invalidated
CLInternalService
-[CLLocationInternalClient synchronousRemoteObject]_block_invoke
CoreLocation: #Spi, Error with proxy, error: %@
v20@?0@"NSError"8i16
v24@?0@"NSError"8@"NSData"16
com.apple.locationd.internalservice.errorDomain
v24@?0@"NSError"8@"NSDictionary"16
v24@?0@"NSError"8@"NSArray"16
v24@?0@"NSError"8@"NSString"16
-[CLLocationInternalClient setLocationDefaultForKey:value:]
CoreLocation: #Spi, Key is NULL!
-[CLLocationInternalClient setLocationDefaultForKey:value:]_block_invoke
CoreLocation: #Spi, Couldn't set location default!
-[CLLocationInternalClient timeZoneAtLocation:]
LocationInternal.m
nil != location
-[CLLocationInternalClient setPrivateMode:]_block_invoke
CoreLocation: #Spi, setPrivateMode failed
v20@?0@"NSError"8B16
-[CLLocationInternalClient setLocationServicesEnabled:]_block_invoke
CoreLocation: #Spi, CLInternalSetLocationServicesEnabled failed
-[CLLocationInternalClient setAuthorizationPromptMapDisplayEnabled:]_block_invoke
CoreLocation: #Spi, CLInternalSetAuthorizationPromptMapDisplayEnabled failed
-[CLLocationInternalClient setTemporaryAuthorizationStatusForBundleId:orBundlePath:statusData:]
data != nil
v24@?0@"NSError"8d16
-[CLLocationInternalClient setGestureServiceEnabled:]_block_invoke
CoreLocation: #Spi, CLInternalSetGestureServiceEnabled failed
-[CLLocationInternalClient performMigration]
CoreLocation: #Spi, _CLInternalPerformMigration failed
-[CLLocationInternalClient shutdownDaemon]
CoreLocation: #Spi, _CLShutdownDaemon failed
-[CLLocationInternalClient displayStatistics]
CoreLocation: #Spi, _CLDisplayStatistics failed
-[CLLocationInternalClient dumpLogs:]
CoreLocation: #Spi, _CLDumpLogs failed
v192@?0@"NSError"8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16
v48@?0@"NSError"8{?=dddi}16
-[CLLocationInternalClient setMapMatchingRouteHint:count:routingType:stepType:]
CoreLocation: #Spi,RouteHintError, Exceeded max number of route hint road segments (%{public}d > %{public}d)
CoreLocation: #Spi,RouteHint,LocationInternal,Received route hint road segments,%{public}d,routeType,%{public}d,stepType,%{public}d
-[CLLocationInternalClient setMapMatchingRouteHint:count:routingType:stepType:]_block_invoke
CoreLocation: #Spi,RouteHintError,Couldn't set map-matching route hint!
-[CLLocationInternalClient setTrackRunHint:]
CoreLocation: #Spi,CLTR,CLTrackRunHint received,framework side
-[CLLocationInternalClient setTrackRunHint:]_block_invoke
CoreLocation: #Spi,CLTR,TrackRunHintError,Couldn't set track run hint!
-[CLLocationInternalClient getAccessoryTypeBitSet]_block_invoke
CoreLocation: #Spi,getAccessoryTypeBitSet,failed
-[CLLocationInternalClient getAccessoryTypeBitSet]
CoreLocation: #Spi,getAccessoryTypeBitSet,%d
-[CLLocationInternalClient getAccessoryPASCDTransmissionState]_block_invoke
CoreLocation: #Spi,getAccessoryPASCDTransmissionState,failed
-[CLLocationInternalClient getAccessoryPASCDTransmissionState]
CoreLocation: #Spi,getAccessoryPASCDTransmissionState,%d
-[CLLocationInternalClient getOdometryBatchedLocations]_block_invoke
CoreLocation: #Spi,getOdometryBatchedLocations,received data count,%{public}lu
CoreLocation: #Spi,getOdometryBatchedLocations,returned with error
-[CLLocationInternalClient getOdometryBatchedLocations]
CoreLocation: #Spi,getOdometryBatchedLocations,returned with count,%{public}lu
-[CLLocationInternalClient copyLastLog]
CoreLocation: #Spi, _CLCopyLastLog failed
v32@?0@"NSError"8Q16Q24
CFArrayRef CLCopyGnssBandsInUse(void)
CoreLocation: Invalid bandUse,%{public}d
{CLGnssBandInfo=iddi}
CLStatusBarIconState CLGetStatusBarIconState()
CoreLocation: CLStatusBarIconState received an icon stateu of %d
void CLSetMapMatchingRouteHint(CLClientLocationRouteHintType, CLClientLocationRouteHintType, CLMapsRouteHint *, int)
CoreLocation: RouteHints,CLSetRouteHintsForMapMatching,received,%lu,routeType,%d,stepType,%d
void CLSetRouteHintsForMapMatching(CLClientLocationRouteHintType, CLMapsRouteHint *, int)
CoreLocation: RouteHints,CLSetRouteHintsForMapMatching,received,%lu,routeType,%d
void CLSetTrackRunHint(CLTrackRunHint *)
CoreLocation: TrackRunHint,CLSetTrackRunHint,received,MCTime,%{public}.1lf,lane,%{private}d,notification,%{private}d
int32_t CLGetAccessoryTypeBitSet()
CoreLocation: CLGetAccessoryTypeBitSet
CLClientPASCDTransmissionState CLGetAccessoryPASCDTransmissionState()
CoreLocation: CLGetAccessoryPASCDTransmissionState
NSDictionary *CLGetOdometryBatchedLocations()
CoreLocation: CLGetOdometryBatchedLocations
[GEOLocation class]
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Framework/CoreLocation/CLPlacemark.m
-[CLPlacemarkInternal init]
<%+.8f,%+.8f> radius %.2f
kCLPlacemarkCodingKeyLocation
kCLPlacemarkCodingKeyAddress
kCLPlacemarkCodingKeyRegion
kCLPlacemarkCodingKeyAreasOfInterest
kCLPlacemarkCodingKeyMapItemSource
kCLPlacemarkCodingKeyGEOMapItem
kCLPlacemarkCodingKeyGEOMapItemHandle
kCLPlacemarkCodingKeyMeCardAddress
Street
FormattedAddressLines
<%+.8f,%+.8f> +/- %.2fm
, region 
, source 
CNPostalAddressStreetKey
/System/Library/Frameworks/Contacts.framework/Contacts
CNPostalAddressSubLocalityKey
CNPostalAddressCityKey
CNPostalAddressSubAdministrativeAreaKey
CNPostalAddressStateKey
CNPostalAddressPostalCodeKey
CNPostalAddressCountryKey
CNPostalAddressISOCountryCodeKey
CNPostalAddress
-[CLLocationPushServiceExtensionRemoteContext initWithInputItems:listenerEndpoint:contextUUID:]
CoreLocation: [%{public}@] Location Push Service extension context initialized
-[CLLocationPushServiceExtensionRemoteContext didReceiveLocationPushPayload:reply:]
CoreLocation: [%{public}@] didReceiveLocationPushPayload:reply:
-[CLLocationPushServiceExtensionRemoteContext serviceExtensionWillTerminate]
CoreLocation: [%{public}@] Location Push Service extension time will expire
-[CLLocationPushServiceExtensionRemoteContext serviceExtensionPerformCleanup]
CoreLocation: [%{public}@] Cleaning up extension
kCLVertexCodingKeyLatitude
kCLVertexCodingKeyLongitude
#polygon,_CLVertex (latitude:'%.07lf', longitude:'%.07lf')
-[_CLPolygonalRegion initWithVertices:identifier:]
CoreLocation: #polygon,number of vertices (%{public}lu) mustn't exceed %{public}lu
CoreLocation: #polygon,number of vertices (%{public}lu) must be greater or equal than %{public}lu
CoreLocation: #polygon,monitoring requires a valid connected polygon where first and last coordinates are the same
CoreLocation: #polygon,All vertices, except for the first and last equals, have to be unique
CLPolygonalRegion.m
kCLPolygonalRegionCodingKeyVertices
kCLPolygonalRegionCodingKeyReferenceFrame
kCLPolygonalRegionCodingKeyMonitoringNearby
_CLPolygonalRegion (identifier:'%@', count:'%lu')
-[_CLPolygonalRegion pointInPolygonWithCoordinate:withDistanceToBorder:]
CoreLocation: #polygon,#warning invalid coordinate
CoreLocation: #polygon,#warning No points data found for polygon
CoreLocation: #polygon,#warning distanceToBorder is nil
CoreLocation: #polygon,distanceToBorder,%.3lf,inRegion %d
com.apple.locationd.harvester
CLPPoiHarvest
-[CLHarvester connect]_block_invoke
CoreLocation: CLHarvester invalidation handler
CoreLocation: CLHarvester interruption handler
-[CLHarvester currentStateDictionary]_block_invoke
CoreLocation: CLHarvester synchronous remote proxy invalidated
CoreLocation: CLHarvester fetchState reply block called
v16@?0@"NSDictionary"8
Harvester
CLFindMyAccessoryFirmwareVersion <%p> VanBurenVersion: %@, RTKitVersion: %@, RoseAPVersion: %lu, RoseDSPVersion: %lu, CalibrationDataVersion: %lu
%u%c%u
%u.%u
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
UnknownStateTracker
ZoneId
BundleId
BundlePath
com.apple.FindMyAccessoryFirmwareUpdateManager.privateQueue
-[CLFindMyAccessoryFirmwareUpdateManager handleInterruption]
-[CLFindMyAccessoryFirmwareUpdateManager handleMessage:]
DurianManagement/DidFetchPersonalizationInformation
Failed
Success
CoreLocation: informing client -- did retreive personalization info for device: %s - %s with info: %@
DurianManagement/DidUpdateFirmware
Succeeded
CoreLocation: informing client -- firmware update for device: %s - %s
DurianManagement/DidUseLocalAssetRequest
CoreLocation: informing client -- use local asset request for product group: %s, product number: %s - %s
DurianManagement/DidUseDefaultAssetRequest
CoreLocation: informing client -- use default asset request for product group: %s, product number: %s - %s
DurianManagement/DidFetchWhetherLocalFirmwareAssetIsInUse
IN USE
NOT IN USE
CoreLocation: informing client -- local firmware asset is %s for product group: %s, product number: %s
CoreLocation: CLFindMyAccessoryFirmwareUpdateManager - Unknown Message - ignoring
CLFindMyAccessoryFirmwareUpdateManager.mm
-[CLFindMyAccessoryFirmwareUpdateManager getPersonalizationInfoForDevice:]
CoreLocation: getPersonalizationInfoForDevice: %@
assetURL
-[CLFindMyAccessoryFirmwareUpdateManager updateFirmwareForDevice:withAssetURL:]
CoreLocation: updateFirmwareForDevice for device: %@ with assetURL: %@
-[CLFindMyAccessoryFirmwareUpdateManager abortFirmwareUpdateForDevice:]
CoreLocation: abortFirmwareUpdateForDevice: %@
firmwareUpdateAssetURL
productGroup
productNumber
extension
-[CLFindMyAccessoryFirmwareUpdateManager useLocalFirmwareAssetFromURL:forProductGroup:forProductNumber:withSandboxExtension:]
CoreLocation: useLocalFirmwareAssetFromURL: %@ forProductGroup: %@ forPorductNumber: %@ withSandboxExtension: %@
-[CLFindMyAccessoryFirmwareUpdateManager useDefaultFirmwareAssetSourceForProductGroup:andProductNumber:]
CoreLocation: useDefaultFirmwareAssetSourceForProductGroup: %@ forPorductNumber: %@
-[CLFindMyAccessoryFirmwareUpdateManager fetchWhetherLocalFirmwareAssetIsInUseForProductGroup:andProductNumber:]
CoreLocation: fetchWhetherLocalFirmwareAssetIsInUseForProductGroup: %@ forPorductNumber: %@
DurianManagement/FetchPersonalizationInformation
DurianManagement/UpdateFirmware
DurianManagement/AbortFirmwareUpdate
DurianManagement/UseLocalFirmwareAssetFromUrl
DurianManagement/UseDefaultFirmwareAssetSource
DurianManagement/FetchWhetherLocalFirmwareAssetIsInUse
ProvisionalMonitoring
RemoteUsage
InUseLevel
Authorization
Authorized
SupportedAuthorizationMask
CorrectiveCompensationEnabled
IncidentalUseMode
InterestZones
Relevant
BackgroundIndicatorEnabled
FenceTimeStarted
FenceTimeStopped
SignificantTimeStarted
SignificantTimeStopped
VisitTimeStarted
VisitTimeStopped
BeaconRegionTimeStarted
BeaconRegionTimeStopped
PushTimeStarted
PushTimeStopped
TranscriptTimeStarted
TranscriptTimeStopped
Registered
LocationTimeStarted
LocationTimeStopped
RangeTimeStarted
RangeTimeStopped
ReceivingLocationInformationTimeStarted
ReceivingLocationInformationTimeStopped
NonPersistentSignificantTimeStarted
NonPersistentSignificantTimeStopped
CLBundleKeyValueCache
CLSystemService
CLIsFindMyiPhone
CLIsCoreRoutine
CLEmergencyService
CLPlaceInference.m
kCLPlaceInferenceUserType
kCLPlaceInferencePlaceType
kCLPlaceInferencePlacemark
kCLPlaceInferenceReferenceLocation
kCLPlaceInferenceConfidence
kCLPlaceInferencePreferredName
kCLPlaceInferenceLoiIdentifier
CLPlaceInference, ref, <%f,%f> +/- %f, userType, %lu, placeType, %lu, placemark, %@, preferredName, %@, confidence, %f, related loi identifier, %@
double CLDistanceCalc::calculateDistance(const CLDaemonLocation &, const CLDaemonLocation &)
CoreLocation: #Warning refAlt < %.1lf,refAlt,%.1lf,using the min
CoreLocation: #Warning refAlt > %.1lf,refAlt,%.1lf,using the max
-[_CLSignificantRegion initWithCenter:radius:referenceFrame:lowPower:identifier:onBehalfOfBundleId:notifyOnEntry:notifyOnExit:conservativeEntry:emergency:deviceId:handoffTag:]
CoreLocation: LowPower not supported for this object/platform
CoreLocation: Conservative not supported for this object/platform
CLSignificantRegion.m
kCLSignificantRegionCodingKeyType
CLSignificantRegion (identifier:'%@', center:<%+.8f,%+.8f>, radius:%.2fm, frame:%d)
first
second
minLatitude
maxLatitude
minLongitude
maxLongitude
nRows
nColumns
latitude
longitude
timeSinceStart
offRouteTime
distanceSinceStart
offRouteDistance
averagePace
distanceAlongReference
raceStartPointDetected
raceEndPointDetected
userIsOffRoute
projectedOnNearestPoint
raceSessionExpired
rollingBufferReachedEndOfReferenceRoute
routeConfigurationSuccessful
racingRouteAnalyticsSent
prematureRaceEndDetected
referenceRouteTotalLengthDetermined
locationPointIsOutsideOfAcceptedRange
locationPointNotMatched
routePointsBufferSize
numberOfRoutePointsToAdd
offRouteGraceDuration
matchedPointCounter
referenceRouteDataPointCounter
currentRouteDataPointCounter
offRouteDataPointCounter
inutileDataPointCounter
rollingBufferUpdateCounter
lastMatchedPointIndex
lastMatchedPointIndexOnReferenceRoute
rollingBufferStartIndexOnReferenceRoute
matrixCellIndexForLastMatchedPoint
referenceRouteTotalLength
timestampOfLastMatchedPointOnReferenceRoute
registeredTimeAtThresholdDistance
endOfRaceTimeThreshold
nearestNeighborMaximumAcceptedDistance
routeMatrixIndexVec
racingRouteVariables
startPointOnCurrentRoute
startPointOnReferenceRoute
lastOnRouteDataPoint
lastProjectedDataPoint
routeBoundingBox
CLFindMyAccessoryWildConfiguration <%hhx> DesiredKeyRollDate:%@ KeyRollInterval:%llu KeysRemaining:%llu KeyCount:%llu
kCLFindMyAccessoryWildConfigurationKeyRollInterval
kCLFindMyAccessoryWildConfigurationKeysRemaining
kCLFindMyAccessoryWildConfigurationKeyCount
kCLLocationCodingKeyCoordinateLatitude
kCLLocationCodingKeyCoordinateLongitude
kCLLocationCodingKeyHorizontalAccuracy
kCLLocationCodingKeyAltitude
kCLLocationCodingKeyVerticalAccuracy
kCLLocationCodingKeySpeed
kCLLocationCodingKeySpeedAccuracy
kCLLocationCodingKeyCourse
kCLLocationCodingKeyCourseAccuracy
kCLLocationCodingKeyTimestamp
kCLLocationCodingKeyType
kCLLocationCodingKeyLifespan
kCLLocationCodingKeyMatchInfo
kCLLocationCodingKeyFloor
kCLLocationCodingKeySimulationParams
kCLLocationCodingKeyFromSoftwareSimulator
kCLLocationCodingKeyFromExternalAccessory
kCLLocationCodingKeyIntegrity
kCLLocationCodingKeyGroundAltitude
kCLLocationCodingKeyFusionInfo
kCLLocationCodingKeyTrackRunInfo
kCLLocationCodingKeyRawCoordinateLatitude
kCLLocationCodingKeyRawCoordinateLongitude
kCLLocationCodingKeyRawHorizontalAccuracy
kCLLocationCodingKeyRawReferenceFrame
kCLLocationCodingKeyRawAltitude
kCLLocationCodingKeyRawVerticalAccuracy
kCLLocationCodingKeyRawCourse
kCLLocationCodingKeyRawCourseAccuracy
kCLLocationCodingKeyCoarseMetaData
kCLLocationCodingKeySignalEnvironmentType
kCLLocationCodingKeyEllipsoidalAltitude
kCLLocationCodingKeyPositionContextState
kCLLocationCodingKeyProbabilityPositionContextStateIndoor
kCLLocationCodingKeyProbabilityPositionContextStateOutdoor
kCLLocationCodingKeyGnssOdometerInfo
<%+.8f,%+.8f> +/- %.2fm (speed %.2f mps / course %.2f) @ %@
suitability
speed
lifespan
rawLatitude
rawLongitude
rawReferenceFrame
signalEnvironment
ellipsoidalAltitude
isSoftwareSimulated
isFromExternalAccessory
/System/Library/Frameworks/CoreLocation.framework/Support/WMM.dat
{CLLocationCoordinate2D=dd}
-[CLEmergencyLocationUsabilityCriteria printUsabilityCriteria:]
CoreLocation: %{public}@,vuncCheckRequiredForUsability,%{public}d,altitudeStitchingEnabled,%{public}d,maxUsableAge,%{public}f,maxUsableHunc,%{public}f,maxUsableVunc,%{public}f,minUsableIntegrity,%{public}d
-[CLEmergencyLocationSelectorConfig printConfiguration]
CoreLocation: #CLELS,%{public}@,printConfiguration,firstUpdateEnabled,%{public}d,periodicUpdatesEnabled,%{public}d,firstLocationMaxEarlyReturnHunc,%{public}f,firstLocationMaxEarlyReturnVunc,%{public}f,locationUpdateHuncReductionToSendEarly,%{public}f,locationUpdateDistanceMovedToSendEarly,%{public}f,firstLocationEarlyReturnEnabled,%{public}d,firstLocationTimeout,%{public}f,locationUpdateTimeout,%{public}f,locationUpdateMinDelay,%{public}f
#CLELS,%@,first location usability criteria
#CLELS,%@,location update usability criteria
CLEmergencyLocationSelector.mm
config
bundle
delegate
Emergency Location Session for %@
v16@?0@"CLLocation"8
#CLELS,
,state machine
void CLEmergencyLocationSelectorInternal::updateLocation(CLLocation *)
CoreLocation: #CLELS,%{public}@,updateLocation,nil Location object
CoreLocation: #CLELS,%{public}@,updateLocation,lat,%{private}.7f,lon,%{private}.7f,hunc,%{public}f,alt,%{private}f,ellipsoidalAlt,%{private}f,vunc,%{public}f,timestamp,%{public}@,locationType,%{public}d,integrity,%{public}d
Enter
Exit
StopSession
LocationUpdate
SendLocationTimeout
FirstLocation
FirstUpdate
PeriodicUpdates
SessionFinshed
bool CLEmergencyLocationSelectorInternal::isLocationUsable(CLEmergencyLocationUsabilityCriteria *, CLLocation *)
CoreLocation: #CLELS,%{public}@,isLocationUsable,invalid parameters
CoreLocation: #CLELS,%{public}@,isLocationUsable,invalid coordinates
CoreLocation: #CLELS,%{public}@,isLocationUsable,location too old. Age:%{public}f
CoreLocation: #CLELS,%{public}@,isLocationUsable,horizontal accuracy too low. Hunc:%{public}f
CoreLocation: #CLELS,%{public}@,isLocationUsable,integrity too low. Integrity:%{public}d
CoreLocation: #CLELS,%{public}@,isLocationUsable,unusable altitude
bool CLEmergencyLocationSelectorInternal::isLocationUsableForFirstUpdate(CLEmergencyLocationUsabilityCriteria *, CLLocation *)
CoreLocation: #CLELS,%{public}@,isLocationUsableForFirstUpdate,not saving,invalid parameters
CoreLocation: #CLELS,%{public}@,isLocationUsableForFirstUpdate,not saving,invalid hunc
CoreLocation: #CLELS,%{public}@,isLocationUsableForFirstUpdate,not saving,integrity too low. Integrity:%{public}d
CoreLocation: #CLELS,%{public}@,isLocationUsableForFirstUpdate,saving,haven't save first update before.
CoreLocation: #CLELS,%{public}@,isLocationUsableForFirstUpdate,saving,better Hunc
CoreLocation: #CLELS,%{public}@,isLocationUsableForFirstUpdate,saving,location changed significantly,dist,%{public}f
CoreLocation: #CLELS,%{public}@,isLocationUsableForFirstUpdate,not saving
bool CLEmergencyLocationSelectorInternal::isAltitudeUsable(CLEmergencyLocationUsabilityCriteria *, CLLocation *)
CoreLocation: #CLELS,%{public}@,isAltitudeUsable,NO,invalid parameters
CoreLocation: #CLELS,%{public}@,isAltitudeUsable,NO,vertical accuracy too low,%{public}.2f
CoreLocation: #CLELS,%{public}@,isAltitudeUsable,NO,received altitude is not valid,%{private}.2f
bool CLEmergencyLocationSelectorInternal::isAltitudeUsableForFirstUpdate(CLEmergencyLocationUsabilityCriteria *, CLLocation *)
CoreLocation: #CLELS,%{public}@,isAltitudeUsableForFirstUpdate,YES,FirstUpdateVerticalLocation being saved first time
CoreLocation: #CLELS,%{public}@,isAltitudeUsableForFirstUpdate,YES,received Vunc better than cached Vunc
CoreLocation: #CLELS,%{public}@,isAltitudeUsableForFirstUpdate,YES,altitude change significant,%{public}f
CoreLocation: #CLELS,%{public}@,isAltitudeUsableForFirstUpdate,NO
bool CLEmergencyLocationSelectorInternal::shouldSendFirstLocationEarly()
CoreLocation: #CLELS,%{public}@,shouldSendFirstLocationEarly,not sending,invalid cached location
CoreLocation: #CLELS,%{public}@,shouldSendFirstLocationEarly,not sending,invalid coordinates
CoreLocation: #CLELS,%{public}@,shouldSendFirstLocationEarly,not sending,First location early return Hunc not satisfied
CoreLocation: #CLELS,%{public}@,shouldSendFirstLocationEarly,not sending,First location early return Vunc not satisfied
CoreLocation: #CLELS,%{public}@,shouldSendFirstLocationEarly,can send first location early
bool CLEmergencyLocationSelectorInternal::shouldSendLocationUpdateEarly()
CoreLocation: #CLELS,%{public}@,shouldSendLocationUpdateEarly,not sending,invalid cached location
CoreLocation: #CLELS,%{public}@,shouldSendLocationUpdateEarly,sending,first valid fix being sent after sending no fix or nil fix
CoreLocation: #CLELS,%{public}@,shouldSendLocationUpdateEarly,not sending,last send was too recent,tDiff,%{public}f
CoreLocation: #CLELS,%{public}@,shouldSendLocationUpdateEarly,sending,higher hunc reduction,previous,%{public}f,current,%{public}f
CoreLocation: #CLELS,%{public}@,shouldSendLocationUpdateEarly,sending,location changed significantly,dist,%{public}f
CoreLocation: #CLELS,%{public}@,shouldSendLocationUpdateEarly,sending,altitude is usable now
CoreLocation: #CLELS,%{public}@,shouldSendLocationUpdateEarly,sending,higher vunc reduction,previous,%{public}f,current,%{public}f
CoreLocation: #CLELS,%{public}@,shouldSendLocationUpdateEarly,sending,higher altitude change,%{public}f
bool CLEmergencyLocationSelectorInternal::isLocationRecentEnough(CLEmergencyLocationUsabilityCriteria *, CLLocation *)
CoreLocation: #CLELS,%{public}@,canSendLocationAtTimeout,will send nil location
CoreLocation: #CLELS,%{public}@,canSendLocationAtTimeout,not sending,location too old. Age:%{public}f
void CLEmergencyLocationSelectorInternal::sendCachedLocation(CLEmergencyLocationUsabilityCriteria *)
CoreLocation: #CLELS,%{public}@,sendCachedLocation,location sent to client without altitude stitching
CoreLocation: #CLELS,%{public}@,sendCachedLocation,location sent to client with altitude stitching
CoreLocation: #CLELS,%{public}@,sendCachedLocation,location sent to client with altitude cleared
void CLEmergencyLocationSelectorInternal::sendFirstUpdateLocation()
CoreLocation: #CLELS,%{public}@,sendFirstUpdateLocation,send nil Location
CoreLocation: #CLELS,%{public}@,sendFirstUpdateLocation,FirstUpdateHorizontalLocation,with altitude cleared
CoreLocation: #CLELS,%{public}@,sendFirstUpdateLocation,FirstUpdateHorizontalLocation,with altitude stitching
CoreLocation: #CLELS,%{public}@,sendFirstUpdateLocation,FirstUpdateHorizontalLocation,as-is
void CLEmergencyLocationSelectorInternal::sendLocation(CLLocation *)
CoreLocation: #CLELS,%{public}@,sendLocation,nil location sent to client
CoreLocation: #CLELS,%{public}@,sendLocation,lat,%{private}.7f,lon,%{private}.7f,hunc,%{public}f,alt,%{private}f,ellipsoidalAlt,%{private}f,vunc,%{public}f,timestamp,%{public}@,locationType,%{public}d,integrity,%{public}d
!name.empty()
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Daemon/Positioning/GPS/CLStateMachine.h
CLStateMachine
Gnss
h && "invalid handler"
setStateHandler
void CLStateMachine<CLEmergencyLocationSelectorInternal>::setStateHandler(CLStateMachine::State, CLStateMachine::StateHandler) [T = CLEmergencyLocationSelectorInternal]
CoreLocation: %sstate,%d,%s
handler && "invalid handler"
handleEvent
fIniitalized && "must call initialize(state) first"
CLStateMachine::State CLStateMachine<CLEmergencyLocationSelectorInternal>::handleEvent(CLStateMachine::Event) [T = CLEmergencyLocationSelectorInternal]
CoreLocation: %scurrent_state,%s,event,%s
handlerFn != std::end(state_handlers)
newState == oldState
CoreLocation: %sNested invocation of state machine
CoreLocation: %snewState,%s
CoreLocation: %soldState,%s,event,%s
retState == oldState
CoreLocation: %snewState,%s,event,%s
retState == newState
void CLStateMachine<CLEmergencyLocationSelectorInternal>::setTimeoutEvent(CLStateMachine::Event, double) [T = CLEmergencyLocationSelectorInternal]
CoreLocation: %sInvoking timers without callback queue set
false
setTimeoutEvent
CoreLocation: %sCannot start timer, event, %{public}s, timeOutSec, %{public}.2f
CoreLocation: %scannot create timer, event, %{public}s
CoreLocation: %sevent,%s,timeout,%.2f
void CLStateMachine<CLEmergencyLocationSelectorInternal>::cancelTimeoutEvent(CLStateMachine::Event) [T = CLEmergencyLocationSelectorInternal]
CoreLocation: %scancel timer,event,%s
CoreLocation: #Warning,%s,cancel timer,notFound, event,%s
CLAssertionInternalQueue
Type
EncodedSequence
<%@ latitude: %.7lf, longitude: %.7lf, altitude: %.3lf, odometer: %.3lf, timestamp: %.3lf, signalEnvironment: %d>
CLLogBase
yyyy-MM-dd_HH-mm-ss
/Library/Logs/CrashReporter/com.apple.locationd
mobile
Library
Caches
Logs
CrashReporter
CLRangingPeer.m
(macAddress & 0xFFFF000000000000) == 0
[aDecoder allowsKeyedCoding]
[aCoder allowsKeyedCoding]
Peer:%@ hasKey:%s
(len >= 11) && (len <= 17)
peer
date
distance
Peer: %@ time:%@ distance[m]:%.02f accuracy[m]:%.02f unlock:%s secure:%s initiator:%s
kCLCodingKeyRangingPeerMacAddress
kCLCodingKeyRangingPeerSecureRangingKeyID
kCLCodingKeyRangingPeerDistancePeer
kCLCodingKeyRangingPeerDistanceTimestamp
kCLCodingKeyRangingPeerDistanceDistance
kCLCodingKeyRangingPeerDistanceAccuracy
kCLCodingKeyRangingPeerDistanceInitiator
kCLCodingKeyRangingPeerDistanceUnlock
LocationIndependenceAssertion/kCLConnectionMessage
points2D
points3D
inlierIndices
slamOrigin
descriptorDimension
slamTracks
slamTrackDescriptors
slamTrackObservations
slamTracks2D
slamTrackImageIndices
perFrameVioStatusCodes
perFrameVioPoses
perFrameCalibrationMatrices
perFrameDistortion
resultPoseRotation
resultPoseTranslation
<_CLVLLocalizationMaps488Details: %p> {
%@.inliersCount = %zu,
%@.points2D = <float: %p> {length = %zu},
%@.points3D = <double: %p> {length = %zu},
%@.inlierIndices = <int: %p> {length = %zu},
%@.slamOrigin = <double: %p> {length = 6, values = [%f, %f, %f, %f, %f, %f]},
%@.slamTracksCount = %zu,
%@.slamTracks = <float: %p> {length = %zu},
%@.descriptorDimension = %zu,
%@.slamTrackDescriptors = <unsigned char: %p> {length = %zu},
%@.slamTrackObservations = <short: %p> {length = %zu},
%@.slamTracks2D = <float: %p> {length = %zu},
%@.slamTrackImageIndices = <short: %p> {length = %zu},
%@.frameCount = %zu,
%@.perFrameVioStatusCodes = <int: %p> {length = %zu},
%@.perFrameVioPoses = <float: %p> {length = %zu},
%@.perFrameCalibrationMatrices = <float: %p> {length = %zu},
%@.perFrameDistortion = <float: %p> {length = %zu},
%@.resultPoseRotation = <double: %p> {length = 9, values = [%f, %f, %f;
%@%f, %f, %f;
%@%f, %f, %f]},
%@.resultPoseTranslation = <double: %p> {length = 3, values = [%f, %f, %f]}
<_CLLSLLocationCoordinate: %p> { .latitude = %f, .longitude = %f }
coordinate
<_CLLSLLocation: %p> {
%@.coordinate = %@,
%@.altitude = %f,
%@.timestamp = %f
roadID
polylines
<NSArray: %p> {
%@%@%@
<_CLLSLMapRoadSegment: %p> {
%@.roadID = %llu,
%@.polylines = %@
roadSegment
<_CLLSLHeadingSupplInfo: %p> {
%@.roadSegment = %@
rotationFromGlobalToDeviceFrame
rotationFromGlobalToCameraFrame
rotationalAccuracyInRadians
globalReferenceFrame
supplemantaryInfo
<_CLLSLHeading: %p> {
%@.timestamp = %f,
%@.rotationFromGlobalToDeviceFrame = [%f, %f, %f; %f, %f, %f; %f, %f, %f],
%@.rotationFromGlobalToCameraFrame = [%f, %f, %f; %f, %f, %f; %f, %f, %f],
%@.rotationalAccuracyInRadians = [%f, %f, %f],
%@.confidence = %f,
%@.globalReferenceFrame = %zu,
%@.location = %@,
%@.supplemantryInfo = %@
status
headings
<_CLLSLHeadingEstimation: %p> {
%@.status = %d,
%@.headings = %@
clusterId
meanUwbRange
meanBleRssi
clusterIdentifier: %@, meanUwbRange: %.3f(m), meanBleRssi: %.3f(dbm)
sourceId
sourceData
sourceIdentifier: %@
%@%@
sourcesData
trackingState
originTimestamp
inertialStateInfo
inertialState
inertialCovarianceInfo
inertialCovariance
cameraPose
cameraIntrinsics
cameraImageResolutionKey
{CGSize=dd}
<_CLVIOEstimation: %p> {
%@.trackingState = %d,
%@.originTimestamp = %f,
%@.timestamp = %f,
%@.inertialStateInfo = { .stateLengthInbytes = %lu, .stateLength = %d, ... },
%@.inertialState = <NSData: %p> %@,
%@.inertialCovarianceInfo = { .covarianceSizeInbytes = %lu, .covariance = %d, ... },
%@.inertialCovariance = <NSData: %p> %@,
%@.cameraPose = [%f, %f, %f, %f;
%@%f, %f, %f, %f;
%@%f, %f, %f, %f;
%@%f, %f, %f, %f],
%@.cameraIntrinsics = [%f, %f, %f;
%@%f, %f, %f;
%@%f, %f, %f],
%@.cameraImageResolution = [%f, %f]
Data does not exist
Data is valid
Data exceeded maximum buffer size
<_CLVLLocalizationDebugInfo: %p> {
%@.maps488Details = %@
CLLocationManagerRoutineClientInterface
NSObject
CLLocationManagerRoutineServerInterface
_CLLocationManagerRoutineProxy
CLLocationManagerRoutine
CLEmergencyEnablementAssertion
CLFindMyAccessoryConnectionMaterial
NSCopying
NSSecureCoding
NSCoding
CLLocationManagerStateTracker
CLLocationManagerInternal
CLDiagnosticManagerXPCServerInterface
CLLocationManager
VehicleData
MatchInfo
GroundAltitude
FusionInfo
TrackRunInfo
CLVisitExtensions
_CLPlaceInferenceExtensions
_CLEstimatedLocationExtensions
_CLRoutineExtensions
_CLLocationGroundAltitude
CLLocationSmootherClientInterface
CLLocationSmootherServerInterface
_CLLocationSmootherProxy
CLLocationSmoother
CLFindMyAccessoryAccelerometerSlopeModeConfiguration
CLFindMyAccessoryAccelerometerOrientationModeConfiguration
CLGnssDisablementAssertion
CLLocationMatchInfoInternal
CLLocationMatchInfo
CLFindMyAccessoryRangingManager
CLLocationPushServiceExtensionHostContext
CLLocationPushServiceExtensionHostXPCInterface
CLLocationTrackRunInfo
CLFindMyAccessoryManager
CLRegulatoryConfig
CLClientTypesPrivate
CLReductiveFilterSuite
CLHeadingInternal
CLHeading
CLLocationGnssOdometerInfo
_CLLocationFusionInfo
CLBBTimeFreqTransferCallbackAssertion
_CLVLExtensions
CLInUseAssertion
DeprecatedMethods
CLRegion
CLClientManagerAuthorizationContext
CLFindMyAccessoryAbsoluteWildConfiguration
CLPlatformInfoPrivate
CLCircularRegion
CLBeaconRegion
CLBeaconInternal
CLBeacon
_CLVLLocalizationResult
CLSimulationXPCServerInterface
CLSimulationLocationProtocol
CLSimulationManager
CLBeaconIdentityConstraint
CLLocationPushServiceExtensionRemoteXPCInterface
CLLocationPushServiceExtensionContext
CLVehicleHeadingInternal
CLVehicleHeading
CLVehicleSpeedInternal
CLVehicleSpeed
CLVisit
CLGeocoderExtras
CLGeocoderInternal
CLGeocoder
ContactsAdditions
CLLocationInternalServiceProtocol
CLLocationInternalClient
_CLARExtensions
CLPlacemarkInternal
CLPlacemark
CLReductiveFilterOptions
CLLocationPushServiceExtensionRemoteContext
_CLVertex
_CLPolygonalRegion
CLHarvesterServerInterface
CLHarvester
_CLVIOExtensions
CLFindMyAccessoryFirmwareVersion
CLStateTracker
CLLocationManagerAuthorization
CLFindMyAccessoryFirmwareUpdateManager
CLRacingRoutePerformanceResults
_CLPlaceInference
_CLSignificantRegion
CLPair
CLRouteBoundingBox
CLRacingRouteState
CLRacingRouteVariables
CLRacingRouteParameters
CLFindMyAccessoryWildConfiguration
CLLocationInternal
CLFloor
CLLocationSourceInformation
CLLocation
GnssOdometerInfo
NSValueCoreLocationExtensions
CLEmergencyLocationUsabilityCriteria
CLEmergencyLocationSelectorConfig
CLEmergencyLocationSelector
CLLocationManagerDelegate
CLAssertion
CLFindMyAccessorySoundSequence
CLRoutePoint
CLRacingRouteManager
_CLRangingPeerInternal
_CLRangingPeerDistanceInternal
_CLRangingPeer
_CLRangingPeerDistance
CLEmergencyClientEnablementAssertion
CLLocationIndependenceAssertion
_CLVLLocalizationMaps488Details
_CLLSLLocationCoordinate
_CLLSLLocation
_CLLSLMapRoadSegment
_CLLSLHeadingSupplInfo
_CLLSLHeading
_CLLSLHeadingEstimation
_CLMicroLocationClusterIdAndClusterData
_CLMicroLocationSourceIdAndSourceData
_CLMicroLocationSourcesStatisticsResult
_CLVIOEstimation
CLFindMyAccessoryFragmentAccumulator
_CLVLLocalizationDebugInfo
T@"CLPlacemark",R,N,V_placemark
.cxx_destruct
T@"NSNumber",R,V_secondaryIndex
ISOcountryCode
T@"NSString",R,C,N,V_handoffTag
T#,R
T@"NSUUID",R,N,V__loiIdentifier
T,N,V_rotationalAccuracyInRadians
TB,N,V_altitudeStitchingEnabled
T@"<CLFindMyAccessoryManagerDelegate>",W,N,V_delegate
TB,R,N,GisCoordinateFusedWithVL
T@"<CLLocationManagerDelegate>",N
TB,R,N,V_raceStartPointDetected
T@"<CLLocationManagerDelegate>",W,N,VfDelegate
TQ,R,N,V_provisionalServiceMask
T@"<CLLocationSmootherDelegate>",N,V_delegate
TS,R,V_keyCount
T@"CLBeaconIdentityConstraint",R,C,N
T^s,R,N,V_slamTrackImageIndices
T@"CLEmergencyLocationUsabilityCriteria",&,N,V_locationUpdateUsabilityCriteria
T^v,R,N
T@"CLHeading",R,C,N
Td,N,V_latitude
T@"CLLocation",R,N,V_referenceLocation
Td,R,N,V_distanceAlongReference
T@"CLLocationManager",W,N,VfManager
Td,R,N,V_totalOverlapDistance_m
T@"CLLocationMatchInfo",R,N
__loiIdentifier
T@"CLLocationSourceInformation",R,N
_center
T@"CLRacingRouteState",R,C,N,V_lastOnRouteDataPoint
_config
T@"CLRacingRouteState",R,C,N,V_startPointOnCurrentRoute
_courseAccuracy
T@"CLRacingRouteVariables",R,C,N,V_racingRouteVariables
_distanceMeters
T@"CLRouteBoundingBox",R,C,N,V_routeBoundingBox
_firstLocationUsabilityCriteria
T@"CLSilo",S_setResponseSilo:
_handle
T@"NSArray",C,N,V_headings
_notifyNoResult
T@"NSArray",R,C,N
_radius
T@"NSArray",R,C,N,V_sourceData
_referenceRouteDataPointCounter
T@"NSData",C,N,V_inertialCovariance
_second
T@"NSData",R
_status
T@"NSData",R,N
_timeSinceStart
T@"NSData",R,V_ltk
_userIsOffRoute
T@"NSDate",R,C,N,V_arrivalDate
address
T@"NSDate",R,C,N,V_detectionDate
allKeys
T@"NSDate",R,V_desiredKeyRollDate
allowsBackgroundLocationUpdates
T@"NSMutableDictionary",N,V_uuidToData
appLocationInfo
T@"NSMutableSet",R,N,VfRangedRegions
bundleWithPath:
T@"NSNumber",R,C,N,V_major
containsObject:
T@"NSNumber",R,N,V_trackId
coordinateFused
T@"NSString",C,N
country
T@"NSString",R
dataWithLength:
T@"NSString",R,C,N
dealloc
T@"NSString",R,C,N,V_sourceIdsIdentifier
desiredAccuracy
T@"NSString",R,N,V_preferredName
dumpDiagnosticFilesWithHandler:
T@"NSUUID",C,N,V_UUID
eastLng
T@"NSUUID",R,C,N,V_UUID
fClient
T@"NSXPCConnection",&,N,V_connection
fFidelityPolicy
T@"_CLLSLLocation",C,N,V_location
fMatchDataArray
T@"_CLLSLMapRoadSegment",C,N,V_roadSegment
fMatchRoadClass
T@"_CLLocationGroundAltitude",R,N
fetchFirmwareVersionFromDevice:
T@"_CLLocationSmootherProxy",R,&,N
fetchTxPowerFromDevice:asOwner:
T@"_CLRangingPeer",R,C,N
findMyAccessoryManager:didInitRangingOnDevice:withStatus:error:
T@"_CLVLLocalizationMaps488Details",C,N,V_maps488Details
firstLocationMaxEarlyReturnHunc
TB,N,G_isGroundAltitudeEnabled,S_setGroundAltitudeEnabled:
getFencesForBundleID:withReply:
TB,N,GisLocationServicesPreferencesDialogEnabled
getMicroLocationInternalVersion
TB,N,GisTrackRunInfoEnabled,SsetTrackRunInfoEnabled:
getPrivateMode:
TB,N,V_firstUpdateEnabled
heading
TB,N,V_vuncCheckRequiredForUsability
initAccumulator
TB,R,N
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:courseAccuracy:speed:speedAccuracy:timestamp:sourceInfo:
TB,R,N,GisAuthorizedForWidgetUpdates
initWithPeer:timestamp:distanceMeters:accuracyMeters:initiator:
TB,R,N,GisCoordinateFused,V_coordinateFused
isAuthorizedForServiceTypeMask:
TB,R,N,GisGeocoding
isValid
TB,R,N,V_allowMonitoringWhileNearby
keyRollInterval
TB,R,N,V_isAltitudeWgs84Available
limitsPrecision
TB,R,N,V_locationPointIsOutsideOfAcceptedRange
locationManager:didReportVisit:
TB,R,N,V_prematureRaceEndDetected
TB,R,N,V_raceEndPointDetected
manager
TB,R,N,V_racingRouteAnalyticsSent
matchCoordinate
TB,R,N,V_rollingBufferReachedEndOfReferenceRoute
maximumRegionMonitoringDistance
TB,R,N,V_userIsOffRoute
originTimestamp
TB,R,N,VisSimulatedBySoftware
prepareForStartRangingOnDevice:
TB,V_emergency
rangeForReductiveFilterOptions:
TB,V_notifyOnEntry
registerCircularInterestZoneWithId:latitude:longitude:radius:serviceMaskOperator:provenanceType:forBundleId:orBundlePath:error:
TC,N,V_locationRepeatBehavior
removeObserver:
TC,N,V_sampleRate
resetSlamTracks
TI,N,V_minUsableIntegrity
rotationFromGlobalToDeviceFrame
TI,R,N
setDay:
TI,R,V_nextWildIndex
setLocationDefaultForKey:value:
TQ,N,V_maxBytesPerUUID
setPreviousAuthorizationStatus:
TQ,R
setRoadSegment:
TQ,R,N,V_beaconType
setSampleCount:
TQ,R,N,V_effectiveServiceMask
setWithObjects:
TQ,R,N,V_inliersCount
startUpdatingLocationWithPrompt
TQ,R,N,V_slamTracksCount
stringByAppendingPathExtension:
TQ,R,N,V_staticServiceMask
subThoroughfare
TQ,R,V_type
trackId
TS,R,V_keysRemaining
unmatch
T^f,R,N,V_perFrameCalibrationMatrices
updatingRanging
T^f,R,N,V_perFrameVioPoses
westLng
T^f,R,N,V_slamTracks
T^i,R,N,V_inlierIndices
.cxx_construct
T@"NSArray",R,C,N,V_sourcesData
ISOCountryCode
T@"NSSet",R,C,N
PausesLocationUpdatesAutomatically
T@"NSString",R,C,N,V_identifier
T*,R,N,V_slamTrackDescriptors
T@,N,V_delegate
T@"<CLFindMyAccessoryFirmwareUpdateDelegate>",W,N,V_delegate
TB,N,V_updating
T@"<CLFindMyAccessoryRangingManagerDelegate>",W,N,V_delegate
TB,R,N,GisInitiator,V_initiator
T@"<CLLocationManagerDelegate>",W,N
TC,N,V_locationDeliveryBehavior
T@"<CLLocationManagerDelegateInternal>",N
TQ,R,N,V_totalObservationsCount
T@"<CLSimulationXPCServerInterface>",R
T^d,R,N
T@"CLEmergencyLocationUsabilityCriteria",&,N,V_firstLocationUsabilityCriteria
T^s,R,N,V_slamTrackObservations
T@"CLFloor",R,C,N
Td,N,V_altitude
T@"CLLocation",R,C,N
Td,R,N,V_course
T@"CLLocationGnssOdometerInfo",R,N
Td,R,N,V_endOfRaceTimeThreshold
T@"CLLocationManagerRoutine",N,V_locationManagerRoutine
Ti,R,N,V_second
T@"CLLocationSmoother",N,V_locationManagerSmoother
_accuracyMeters
T@"CLLocationTrackRunInfo",R,N
_cl_ticketForForwardGeocodeAddressDictionary:maxResults:traits:
T@"CLRacingRouteState",R,C,N,V_lastProjectedDataPoint
_course
T@"CLRacingRouteState",R,C,N,V_startPointOnReferenceRoute
_definitionMask
T@"CLRegion",R,C,N
_extensionAuxiliaryHostProtocol
T@"CLSilo",&,V_responseSilo
_groundAltitude
T@"CNPostalAddress",R,N
_maps488Details
T@"NSArray",C,N,V_polylines
_placeInference
T@"NSArray",R,C,N,V_routeMatrixIndexVec
_referenceFrame
T@"NSArray",R,C,N,V_vertices
_roadID
T@"NSData",C,N,V_inertialState
_secondaryIndex
T@"NSData",R,C,N
_ticket
T@"NSData",R,V_address
_trackProximity
T@"NSDate",R,C,N
addRoutePoints:
T@"NSDate",R,C,N,V_departureDate
advanceToPoint:
T@"NSDate",R,N
allowsAlteredAccessoryLocations
T@"NSDictionary",R,C,N
T@"NSMutableSet",R,N,VfRangedConstraints
areasOfInterest
T@"NSNumber",R,C,N
connect
T@"NSNumber",R,C,N,V_minor
containsString:
T@"NSNumber",R,V_primaryIndex
copyRegisteredFilesWithHandler:
T@"NSString",C,N,V_onBehalfOfBundleId
currentCalendar
T@"NSString",R,C
T@"NSString",R,C,N,V_clusterIdentifier
defaultSequence
T@"NSString",R,N
disallowDeferredLocationUpdates
T@"NSTimeZone",R,C,N
dynamicAccuracyReductionEnabled
T@"NSUUID",R,C,N
encodedSequence
T@"NSUUID",R,C,N,V_deviceId
fCoarseMetaData
T@"_CLLSLHeadingSupplInfo",C,N,V_supplemantaryInfo
fGroundAltitude
T@"_CLLSLLocationCoordinate",C,N,V_coordinate
fMatchFormOfWay
T@"_CLLocationFusionInfo",R,N
feature
T@"_CLLocationManagerRoutineProxy",&,N,V_locationManagerRoutineProxy
fetchInfoForLocation:withReply:
T@"_CLPlaceInference",R,N,V__placeInference
filterOutliers:
T@"_CLVLLocalizationDebugInfo",C,N,V_debugInfo
firstLocationEarlyReturnEnabled
TB,N
firstLocationMaxEarlyReturnVunc
TB,N,GisDynamicAccuracyReductionEnabled
getIncidentalUseMode:forBundle:
TB,N,GisMatchInfoEnabled
getOscarTimeSyncWithReplyBlock:
TB,N,V_firstLocationEarlyReturnEnabled
hardwareVersion
TB,N,V_periodicUpdatesEnabled
headingAccuracy
TB,R
initRangingOnDevice:macAddress:
TB,R,N,GisAuthorizedForPreciseLocation
initWithDelegate:delegateQueue:
TB,R,N,GisCoordinateFused
initWithQueue:identifier:state:
TB,R,N,GisCoordinateFusedWithVL,V_coordinateFusedWithVL
isProxy
TB,R,N,GisMatchShifted
iso6709Notation
TB,R,N,V_authorizedForWidgetUpdates
lapInfo
TB,R,N,V_isLowPower
locationManager:didEnterRegion:
TB,R,N,V_locationPointNotMatched
locationUpdateUsabilityCriteria
TB,R,N,V_projectedOnNearestPoint
magneticHeading
TB,R,N,V_raceSessionExpired
mapItem
TB,R,N,V_referenceRouteTotalLengthDetermined
maxBytesPerUUID
TB,R,N,V_routeConfigurationSuccessful
numberWithBool:
TB,R,N,VisProducedByAccessory
performMigrationWithReplyBlock:
TB,V_conservativeEntry
purpose
TB,V_notifyEntryStateOnDisplay
rangingSequence
TB,V_notifyOnExit
release
TC,N,V_sampleCount
requestLocation
TC,R
rotationFromGlobalToCameraFrame
TI,N,V_threshold
selectScenario:
TI,R,V_keyRollInterval
setIncidentalUseMode:forBundle:
TQ,N,V_globalReferenceFrame
setLocationManagerRoutineProxy:
TQ,N,V_roadID
setPrivateMode:
TQ,R,N
setRotationalAccuracyInRadians:
TQ,R,N,V_descriptorDimension
setSupportInfo:
TQ,R,N,V_frameCount
slamTracksCount
TQ,R,N,V_placeType
stringByAppendingPathComponent:
TQ,R,N,V_state
stringFromDate:
TQ,R,N,V_userType
timeZoneForLocation:replyBlock:
TS,N,V_sleepDuration_ms
undulationModel
T^d,R,N,V_points3D
updatingHeading
T^f,R,N,V_perFrameDistortion
vanBurenVersion
T^f,R,N,V_points2D
T^f,R,N,V_slamTracks2D
T^i,R,N,V_perFrameVioStatusCodes
T^{__CLClient=},R,N
Td,N
Td,N,V_applyRangeEstimation
Td,N,V_biasRateInMeasurement
Td,N,V_confidence
Td,N,V_firstLocationMaxEarlyReturnHunc
Td,N,V_firstLocationMaxEarlyReturnVunc
Td,N,V_firstLocationTimeout
Td,N,V_firstUpdateTimeout
Td,N,V_locationDistance
Td,N,V_locationInterval
Td,N,V_locationSpeed
Td,N,V_locationUpdateChangeInAltitudeToSendEarly
Td,N,V_locationUpdateDistanceMovedToSendEarly
Td,N,V_locationUpdateHuncReductionToSendEarly
Td,N,V_locationUpdateMinDelay
Td,N,V_locationUpdateTimeout
Td,N,V_locationUpdateVuncReductionToSendEarly
Td,N,V_longitude
Td,N,V_maxUsableAge
Td,N,V_maxUsableHunc
Td,N,V_maxUsableVunc
Td,N,V_originTimestamp
Td,N,V_timestamp
Td,R
Td,R,N
Td,R,N,V_altitude
Td,R,N,V_altitudeWgs84
Td,R,N,V_altitude_m
Td,R,N,V_averagePace
Td,R,N,V_confidence
Td,R,N,V_courseAccuracy
Td,R,N,V_currentAveragePace_s_per_m
Td,R,N,V_currentDistance_m
Td,R,N,V_deltaDistance
Td,R,N,V_deltaDistanceAccuracy
Td,R,N,V_desiredAccuracy
Td,R,N,V_distanceSinceStart
Td,R,N,V_estimate
Td,R,N,V_geoRadius
Td,R,N,V_horizontalAccuracy
Td,R,N,V_latitude
Td,R,N,V_latitude_deg
Td,R,N,V_longitude
Td,R,N,V_longitude_deg
Td,R,N,V_maxLatitude
Td,R,N,V_maxLongitude
Td,R,N,V_meanBLEReceivedSignalStrength
Td,R,N,V_meanUWBRange
Td,R,N,V_minLatitude
Td,R,N,V_minLongitude
Td,R,N,V_nearestNeighborMaximumAcceptedDistance
Td,R,N,V_odometer
Td,R,N,V_odometer_m
Td,R,N,V_offRouteDistance
Td,R,N,V_offRouteTime
Td,R,N,V_referenceDistance_m
Td,R,N,V_referenceRouteTotalLength
Td,R,N,V_registeredTimeAtThresholdDistance
Td,R,N,V_timeAhead_s
Td,R,N,V_timeSinceStart
Td,R,N,V_timestamp
Td,R,N,V_timestampOfLastMatchedPointOnReferenceRoute
Td,R,N,V_timestamp_s
Td,R,N,V_transmitPower
Td,R,N,V_uncertainty
Td,R,N,V_uncertaintyWgs84
Td,R,N,V_undulation
Td,R,N,V_verticalAccuracy
Td,R,V_radius
Tf,N,V_confidence
Tf,N,V_threshold
Tf,R
Ti,N
Ti,N,V_geoReferenceFrame
Ti,N,V_status
Ti,N,V_trackingState
Ti,R,N
Ti,R,N,V_currentRouteDataPointCounter
Ti,R,N,V_definitionMask
Ti,R,N,V_estimatedLaneConfidence
Ti,R,N,V_first
Ti,R,N,V_inUseLevel
Ti,R,N,V_inutileDataPointCounter
Ti,R,N,V_lastMatchedPointIndex
Ti,R,N,V_lastMatchedPointIndexOnReferenceRoute
Ti,R,N,V_matchedPointCounter
Ti,R,N,V_matrixCellIndexForLastMatchedPoint
Ti,R,N,V_nColumns
Ti,R,N,V_nRows
Ti,R,N,V_numberOfRoutePointsToAdd
Ti,R,N,V_offRouteDataPointCounter
Ti,R,N,V_offRouteGraceDuration
Ti,R,N,V_referenceFrame
Ti,R,N,V_referenceRouteDataPointCounter
Ti,R,N,V_registrationResult
Ti,R,N,V_rollingBufferStartIndexOnReferenceRoute
Ti,R,N,V_rollingBufferUpdateCounter
Ti,R,N,V_routePointsBufferSize
Ti,R,N,V_signalEnvironmentType
Ti,R,N,V_trackProximity
Ti,R,N,V_transientAwareRegistrationResult
Ti,R,N,V_undulationModel
Ti,V_geoReferenceFrame
Ti,V_referenceFrame
Ti,V_type
Tq,N
Tq,N,V_feature
Tq,R,N
Tq,R,N,V_estimatedLaneNumber
Tq,R,N,V_laneCount
Tq,R,N,V_laneNumber
Tq,R,N,Vlevel
T{?=QCCCCCCCCCCC},N,V_inertialCovarianceInfo
T{?=QCCCCCCCCCCC},N,V_inertialStateInfo
T{?=[3]},N,V_cameraIntrinsics
T{?=[3]},N,V_rotationFromGlobalToCameraFrame
T{?=[3]},N,V_rotationFromGlobalToDeviceFrame
T{?=[4]},N,V_cameraPose
T{?=[4]},N,V_transform
T{?=[6[6f]]},N,V_covariance
T{?=dd},R,N,V_coordinate
T{?=d},N,V_location
T{?=iddddd{?=dd}dd},R,N,V_lapInfo
T{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB},R,N
T{CGSize=dd},N,V_cameraImageResolution
T{CLLocationCoordinate2D=dd},R
T{CLLocationCoordinate2D=dd},R,N
T{CLLocationCoordinate2D=dd},R,N,V_coordinate
T{CLLocationCoordinate2D=dd},R,N,V_geoCenter
T{CLLocationCoordinate2D=dd},R,V_center
UTF8String
UUID
UUIDString
_UUID
__placeInference
_accumulator
_address
_allowMonitoringWhileNearby
_altitude
_altitudeStitchingEnabled
_altitudeWgs84
_altitude_m
_applyArchivedAuthorizationDecisions:
_applyRangeEstimation
_archivedAuthorizationDecisionsWithError:
_arrivalDate
_authorizationStatus
_authorizationStatusForBundleIdentifier:bundlePath:
_authorizedForWidgetUpdates
_averagePace
_beaconType
_biasRateInMeasurement
_cLMapItemSource
_cLMapItemSourceFromRLMapItemSource:
_cameraImageResolution
_cameraIntrinsics
_cameraPose
_checkAndExerciseAuthorizationForBundle:error:
_checkAndExerciseAuthorizationForBundleID:error:
_cl_ticketForForwardGeocodeString:maxResults:traits:
_cl_ticketForReverseGeocodeLocation:traits:
_clusterIdentifier
_confidence
_connection
_conservativeEntry
_coordinate
_coordinateFused
_coordinateFusedWithVL
_covariance
_currentAveragePace_s_per_m
_currentDistance_m
_currentRouteDataPointCounter
_date
_debugInfo
_delegate
_delegateQueue
_deltaDistance
_deltaDistanceAccuracy
_departureDate
_descriptorDimension
_desiredAccuracy
_desiredKeyRollDate
_detectionDate
_deviceId
_distanceAlongReference
_distanceSinceStart
_effectiveServiceMask
_emergency
_encodedSequence
_endOfRaceTimeThreshold
_ensureMainThreadExecutionContextForBlock:
_estimate
_estimatedLaneConfidence
_estimatedLaneNumber
_extensionAuxiliaryVendorProtocol
_feature
_fetchContinuousPlaceInferencesWithFidelityPolicy:handler:
_fetchEstimatedLocationAtDate:handler:
_fetchPlaceInferencesWithFidelityPolicy:handler:
_first
_firstLocationEarlyReturnEnabled
_firstLocationMaxEarlyReturnHunc
_firstLocationMaxEarlyReturnVunc
_firstLocationTimeout
_firstUpdateEnabled
_firstUpdateTimeout
_frameCount
_fusionInfo
_geoCenter
_geoMapItem
_geoMapItemHandle
_geoRadius
_geoReferenceFrame
_geocodeCompletionHandler
_getClientTransientAuthorizationInfoForBundleId:error:
_getClientTransientAuthorizationInfoForBundlePath:error:
_globalReferenceFrame
_groundAltitudeAtLocation:
_groundAltitudeEnabled
_handoffTag
_headings
_horizontalAccuracy
_identifier
_inTransaction
_inUseLevel
_inertialCovariance
_inertialCovarianceInfo
_inertialState
_inertialStateInfo
_initWithCLClientLocation:
_initWithCircularRegion:
_initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:courseAccuracy:speed:speedAccuracy:timestamp:floor:sourceParams:
_initWithDelegate:onQueue:
_initWithGeoMapItem:
_initWithRTLocation:
_initWithRTMapItem:location:
_initWithRTPlaceInference:
_initWithUUID:major:minor:
_initiator
_inlierIndices
_inliersCount
_internal
_inutileDataPointCounter
_isAltitudeWgs84Available
_isFusionInfoEnabled
_isGroundAltitudeEnabled
_isLowPower
_keyCount
_keyRollInterval
_keysRemaining
_laneCount
_laneNumber
_lapInfo
_lastMatchedPointIndex
_lastMatchedPointIndexOnReferenceRoute
_lastOnRouteDataPoint
_lastProjectedDataPoint
_latitude
_latitude_deg
_limitsPrecision
_location
_locationDeliveryBehavior
_locationDistance
_locationInterval
_locationManagerRoutine
_locationManagerRoutineProxy
_locationManagerSmoother
_locationManagerSmootherProxy
_locationPointIsOutsideOfAcceptedRange
_locationPointNotMatched
_locationRepeatBehavior
_locationSpeed
_locationUpdateChangeInAltitudeToSendEarly
_locationUpdateDistanceMovedToSendEarly
_locationUpdateHuncReductionToSendEarly
_locationUpdateMinDelay
_locationUpdateTimeout
_locationUpdateUsabilityCriteria
_locationUpdateVuncReductionToSendEarly
_loiIdentifier
_longitude
_longitude_deg
_ltk
_macAddress
_major
_matchedPointCounter
_matrixCellIndexForLastMatchedPoint
_maxBytesPerUUID
_maxLatitude
_maxLongitude
_maxUsableAge
_maxUsableHunc
_maxUsableVunc
_meanBLEReceivedSignalStrength
_meanUWBRange
_measuredPowerForDevice
_minLatitude
_minLongitude
_minUsableIntegrity
_minor
_nColumns
_nRows
_nearestNeighborMaximumAcceptedDistance
_nextWildIndex
_notifyCancel
_notifyEntryStateOnDisplay
_notifyError:
_notifyOnEntry
_notifyOnExit
_notifyPartialResult:
_notifyResult:
_notifyResult:error:
_numberOfRoutePointsToAdd
_odometer
_odometer_m
_offRouteDataPointCounter
_offRouteDistance
_offRouteGraceDuration
_offRouteTime
_onBehalfOfBundleId
_originTimestamp
_peer
_perFrameCalibrationMatrices
_perFrameDistortion
_perFrameVioPoses
_perFrameVioStatusCodes
_periodicUpdatesEnabled
_placeInferencePlaceTypeFromRTPlaceType:
_placeType
_placemark
_points2D
_points3D
_polylines
_preferredName
_prematureRaceEndDetected
_primaryIndex
_principalObject
_projectedOnNearestPoint
_provisionalServiceMask
_queue
_raceEndPointDetected
_raceSessionExpired
_raceStartPointDetected
_racingRouteAnalyticsSent
_racingRouteVariables
_referenceDistance_m
_referenceLocation
_referenceRouteTotalLength
_referenceRouteTotalLengthDetermined
_registeredTimeAtThresholdDistance
_registrationResult
_requestTemporaryFullAccuracyWithUsageDescription:
_requestTemporaryFullAccuracyWithUsageDescription:completion:
_requestVisitState
_responseSilo
_resultPoseRotation
_resultPoseTranslation
_roadSegment
_rollingBufferReachedEndOfReferenceRoute
_rollingBufferStartIndexOnReferenceRoute
_rollingBufferUpdateCounter
_rotationFromGlobalToCameraFrame
_rotationFromGlobalToDeviceFrame
_rotationalAccuracyInRadians
_routeBoundingBox
_routeConfigurationSuccessful
_routeMatrixIndexVec
_routePointsBufferSize
_sampleCount
_sampleRate
_secureRangingKeyID
_setClientTransientAuthorizationInfoForBundleId:data:
_setClientTransientAuthorizationInfoForBundlePath:data:
_setFusionInfoEnabled:
_setGroundAltitudeEnabled:
_setResponseSilo:
_shouldUnlock
_signalEnvironmentType
_slamOrigin
_slamTrackDescriptors
_slamTrackImageIndices
_slamTrackObservations
_slamTracks
_slamTracks2D
_slamTracksCount
_sleepDuration_ms
_sourceData
_sourceIdsIdentifier
_sourcesData
_startLeechingVisits
_startMonitoringSignificantLocationChangesOfDistance:withPowerBudget:
_startPlaceInferencesCommonLogic:handler:
_startPointOnCurrentRoute
_startPointOnReferenceRoute
_state
_staticServiceMask
_stopFetchingContinuousPlaceInferences
_supplemantaryInfo
_threshold
_ticket:didReturnError:
_ticket:didReturnError:partialResultForLocation:
_ticket:didReturnGeoMapItems:
_timeAhead_s
_timeZoneAtLocation:
_timestamp
_timestampOfLastMatchedPointOnReferenceRoute
_timestamp_s
_totalObservationsCount
_totalOverlapDistance_m
_trackId
_trackingState
_transform
_transientAwareRegistrationResult
_transmitPower
_type
_uncertainty
_uncertaintyWgs84
_undulation
_undulationModel
_updateARSessionState:
_updateVIOEstimation:
_updateVLLocalizationResult:
_updating
_userSpecificPlaceTypeFromRTUserType:
_userType
_uuidToData
_version
_verticalAccuracy
_vertices
_vuncCheckRequiredForUsability
_zAxisStatistics
abortFirmwareUpdateForDevice:
accuracy
accuracyAuthorization
accuracyMeters
activeLocationClientsWithInfo
activeLocationServiceTypesForLocationDictionary:
activityType
addConfigForIsoList:config:error:
addConfigForRegionList:config:error:
addDeviceDisplayLanguage:
addObject:
addObserver:selector:name:object:
addSoundBlockWithAsset:loopCount:duration:
addressDictionary
administrativeArea
advertiseAsBeacon:withPower:
allObjects
allocWithZone:
allowDeferredLocationUpdatesUntilTraveled:timeout:
allowMonitoringWhileNearby
allowableAuthorizationForLocationDictionary:
allowsKeyedCoding
allowsLocationPrompts
allowsMapCorrection
altitude
altitudeStitchingEnabled
altitudeWgs84
altitude_m
appendBytes:length:
appendData:
appendData:forUUID:
appendSimulatedLocation:
appendSimulatedLocations:
appendString:
applicationState
applyArchivedAuthorizationDecisions:
applyArchivedAuthorizationDecisions:withConfirmationToken:replyBlock:
applyFilterToLocationObservations:options:
applyFilterToLocationTrace:options:
applyRangeEstimation
appsUsingLocation
appsUsingLocationWithDetails
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:
arrayWithObjects:count:
arrivalDate
assertInside
async:
authorizationContextByANDingServiceMaskTuple:
authorizationPromptMapDisplayEnabled
authorizationStatus
authorizationStatusForBundle:
authorizationStatusForBundleIdentifier:
authorizationStatusForBundlePath:
authorizedForPreciseLocation
authorizedForWidgetUpdates
autorelease
availableScenarios
averagePace
backgroundIndicatorEnabledForLocationDictionary:
batchingLocation
beaconIdentityConstraint
beaconType
biasRateInMeasurement
boolValue
bundleIdentifier
bundlePath
bundleSupported:
bytes
calibrationDataVersion
callPlaceInferenceHandlerWithResult:error:
cameraImageResolution
cameraIntrinsics
cameraPose
cancel
cancelGeocode
cancelLingeringRangingRequest
cancelLocationRequest
cancelRangingRequest
canonicalLanguageIdentifierFromString:
center
charValue
checkAndExerciseAuthorizationForBundleID:orBundlePath:services:error:
checkAndExerciseAuthorizationForBundleID:orBundlePath:services:replyBlock:
checkAvailabilityForPairedOwnerInformationControlPointMessages:messageName:
city
class
clearDeviceDisplayLanguages
clearForUUID:
clearLocationAuthorizationForBundleId:orBundlePath:
clearLocationAuthorizations
clearSimulatedCells
clearSimulatedLocations
clientLocation
clrr
clusterIdentifier
coarseMetaData
code
compare:
completeRequestReturningItems:completionHandler:
components:fromDate:
components:fromDate:toDate:options:
componentsJoinedByString:
confidence
configureRangingOnDevice:macAddress:countryCode:uwbChannel:acqPreamble:trackingPreamble:interval:
configureWithWorkoutActivityType:bufferSize:offRouteGraceDurationInSec:
conformsToProtocol:
connectDevice:
connectToDevice:
connection
conservativeEntry
containsCoordinate:
containsCoordinate:withDistanceToBorder:
containsValueForKey:
contentsOfDirectoryAtPath:error:
convertDataStatusToString:
coordinate
coordinateFusedWithVL
copy
copyActiveClientsUsingLocation
copyActivityAlarms
copyAppsUsingLocation
copyGnssBandsInUse
copyLastLog
copyLastLogWithReplyBlock:
copyMicroLocationInternalVersion
copyMonitoredRegionsForBundleIdentifier:orBundlePath:
copyTechnologiesInUse
copyWithZone:
copyZaxisStats
correctiveCompensationStatusForLocationDictionary:
count
countByEnumeratingWithState:objects:count:
countryCode
course
courseAccuracy
courtesyPromptNeeded
covariance
createConnection
currentAveragePace_s_per_m
currentDistance_m
currentHandler
currentRouteDataPointCounter
currentStateDictionary
daemonProxy
data
dataForUUID:
dataWithBytes:length:
dataWithCapacity:
dataWithContentsOfURL:
dataWithContentsOfURL:options:error:
dataWithData:
dataWithPropertyList:format:options:error:
date
dateFromComponents:
dateLocationLastUsedForLocationDictionary:
dateWithTimeIntervalSinceReferenceDate:
debugDescription
debugInfo
decodeBoolForKey:
decodeBytesForKey:returnedLength:
decodeDoubleForKey:
decodeFloatForKey:
decodeInt32ForKey:
decodeInt64ForKey:
decodeIntForKey:
decodeIntegerForKey:
decodeObject
decodeObjectForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
decodeValueOfObjCType:at:
defaultCLClientLocationPrivate
defaultCenter
defaultManager
defaultTraits
deferredLocationUpdatesAvailable
definitionMask
deinitRangingOnDevice:
delegate
deleteInterestZoneWithId:registeredForBundle:error:
deleteInterestZoneWithId:registeredForBundleId:orBundlePath:error:
deleteInterestZoneWithId:registeredForBundleId:orBundlePath:replyBlock:
deleteInterestZoneWithId:registeredForBundleIdentifier:error:
deltaDistance
deltaDistanceAccuracy
departureDate
deriveLocationFromLocations:
deriveLocationFromLocations:options:
description
descriptionWithMemberIndent:endIndent:
descriptorDimension
desiredKeyRollDate
detectionDate
deviceId
dictionary
dictionaryDescription
dictionaryWithDictionary:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
didReceiveLocationPushPayload:completion:
didReceiveLocationPushPayload:reply:
didSmoothLocations:ofType:
didUpdateLocations:
didUpdateLocations:withReply:
disconnectDevice:
disconnectFromDevice:
dismissCalibrationAlert
dismissHeadingCalibrationDisplay
displayStatistics
displayStatisticsWithReplyBlock:
disputedTerritoryName
distanceAlongReference
distanceFilter
distanceFromLocation:
distanceMeters
distanceSinceStart
distantFuture
distantPast
doesNotRecognizeSelector:
domain
donateMicroLocationTruthTagWithTagUUID:correspondingToTriggerUUID:handler:
donateMicroLocationTruthTagWithTagUUID:forRecordingEventsBetweenDate:andDate:handler:
doubleValue
dumpLogDataOfType:fromDevice:
dumpLogs:
dumpLogsWithDescription:replyBlock:
dumpLogsWithMessage:
dumpState:withSize:hints:
effectiveServiceMask
ellipsoidalAltitude
emergency
encodeBool:forKey:
encodeBytes:length:forKey:
encodeConfiguration
encodeDouble:forKey:
encodeFloat:forKey:
encodeInt32:forKey:
encodeInt64:forKey:
encodeInt:forKey:
encodeInteger:forKey:
encodeObject:
encodeObject:forKey:
encodeValueOfObjCType:at:
encodeWithCoder:
endOfRaceTimeThreshold
endTranscriptSession
endTranscriptSessionWithCompletion:
entityAuthorizationForLocationDictionary:
entityClassesForLocationDictionary:
enumerateObjectsUsingBlock:
errorFromFragmentationStatus:
errorWithDomain:code:userInfo:
estimate
estimatedLaneConfidence
estimatedLaneNumber
expectedGpsUpdateInterval
exportMicroLocationDatabaseTablesWithCompletion:
exportedInterface
fDelegate
fFusionInfo
fGnssOdometerInfo
fHeading
fHeadingOrientation
fInternal
fLastRangingRequestMachTime
fLastRangingRequestTimeout
fLocation
fLocationEventType
fLocationRequestTimeout
fLocationRequestTimer
fManager
fMatchCoordinate
fMatchCourse
fMatchInfo
fMatchQuality
fMatchShifted
fPlaceInferenceHandler
fPlaceInferenceTimer
fPositionContextState
fProbabilityPositionContextStateIndoor
fProbabilityPositionContextStateOutdoor
fRangedConstraints
fRangedRegions
fRangingRequestTimer
fRawAltitude
fRawCourseAccuracy
fRawHorizontalAccuracy
fRawVerticalAccuracy
fSilo
fSpeed
fState
fTrackRunInfo
fTrustedTimestamp
featureString:
fetchAISForTAUnknownBeacon:macAddress:deviceType:
fetchAccelerometerOrientationModeConfigurationForDevice:
fetchAccelerometerSlopeModeConfigurationForDevice:
fetchBatteryStatusForDevice:
fetchConfigForLocation:withReply:
fetchConnectionStateForDevice:
fetchFormattedAddress:queue:
fetchHawkeyeAISAccessoryCapabilities:
fetchHawkeyeAISAccessoryCategory:
fetchHawkeyeAISBatteryType:
fetchHawkeyeAISFindMyVersion:
fetchHawkeyeAISManufacturerName:
fetchHawkeyeAISModelColorCode:
fetchHawkeyeAISModelName:
fetchHawkeyeAISProductData:
fetchHawkeyeCurrentPrimaryKey:
fetchHawkeyeSerialNumber:
fetchHawkeyeiCloudIdentifier:
fetchPossibleTerritoriesForLocation:responseQueue:responseBlock:
fetchStateWithReply:
fetchStatusOfUTEnablementRequirements
fetchTranscriptLocationsWithRadius:sampleCount:center:completionHandler:
fetchTxPower:
fetchUserStatsWithPersistence:fromDevice:
fetchWhetherLocalFirmwareAssetIsInUseForProductGroup:andProductNumber:
fileExistsAtPath:
fileURLWithPath:
fileURLWithPath:isDirectory:
filterOutliers:options:
findMyAccessoryFirmwareUpdateManager:didFailWithError:forDevice:
findMyAccessoryFirmwareUpdateManager:didFetchWhetherLocalFirmwareAssetIsInUseForProductGroup:andProductNumber:withResult:
findMyAccessoryFirmwareUpdateManager:firmwareUpdateRequestForDevice:completedWithError:
findMyAccessoryFirmwareUpdateManager:personalizationRequestForDevice:completedWithInfo:andError:
findMyAccessoryFirmwareUpdateManager:useDefaultAssetRequestForProductGroup:andProductNumber:completedWithError:
findMyAccessoryFirmwareUpdateManager:useLocalAssetRequestForProductGroup:andProductNumber:completedWithError:
findMyAccessoryManager:didCompleteAggressiveAdvertisingOnDevice:withError:
findMyAccessoryManager:didCompleteHawkeyeTaskWithOpcode:fromDevice:withError:
findMyAccessoryManager:didCompletePlayingSoundOnDevice:withError:
findMyAccessoryManager:didCompletePlayingUnauthorizedSoundOnDevice:withError:
findMyAccessoryManager:didCompleteRangingOnDevice:withStatus:endReason:error:
findMyAccessoryManager:didConfigureRangingOnDevice:withStatus:error:
findMyAccessoryManager:didConnectDevice:
findMyAccessoryManager:didConnectDevice:error:
findMyAccessoryManager:didDeinitRangingOnDevice:withStatus:error:
findMyAccessoryManager:didDetectCrashOnDevice:
findMyAccessoryManager:didDisconnectDevice:
findMyAccessoryManager:didDumpLogData:ofType:fromDevice:withError:
findMyAccessoryManager:didFailWithError:forDevice:
findMyAccessoryManager:didFetchAccelerometerMode:forDevice:withError:
findMyAccessoryManager:didFetchAccelerometerSlopeModeConfiguration:forDevice:withError:
findMyAccessoryManager:didFetchBatteryStatus:forDevice:
findMyAccessoryManager:didFetchBatteryStatus:forDevice:withError:
findMyAccessoryManager:didFetchConnectionState:forDevice:
findMyAccessoryManager:didFetchFirmwareVersion:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeAISAccessoryCapabilities:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeAISAccessoryCategory:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeAISBatteryType:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeAISFindMyVersion:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeAISManufacturerName:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeAISModelColorCode:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeAISModelName:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeAISProductData:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeCurrentPrimaryKey:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeSerialNumber:fromDevice:withError:
findMyAccessoryManager:didFetchHawkeyeiCloudIdentifier:fromDevice:withError:
findMyAccessoryManager:didFetchStatusOfUTEnablementRequirementsWithStatus:withError:
findMyAccessoryManager:didFetchTxPower:fromDevice:withError:
findMyAccessoryManager:didFetchUserStats:fromDevice:withError:
findMyAccessoryManager:didGetMultiStatus:fromDevice:withError:
findMyAccessoryManager:didHaveRangingMovementOnDevice:
findMyAccessoryManager:didObserveAdvertisementWithDate:address:advertisementData:status:rssi:reserved:uuid:ownershipType:channel:
findMyAccessoryManager:didPlayUnauthorizedSoundOnDevice:withError:
findMyAccessoryManager:didPrepareRangingOnDevice:error:
findMyAccessoryManager:didReceiveGroupRelationStatus:maintenanceStatus:fromDevice:withError:
findMyAccessoryManager:didReceiveKeyRollIndex:fromDevice:withError:
findMyAccessoryManager:didReceiveRangingErrorFromDevice:withStatus:
findMyAccessoryManager:didReceiveRangingTimestampFromDevice:status:rtt:tat:cycleIndex:
findMyAccessoryManager:didRollWildKeyOnDevice:withError:
findMyAccessoryManager:didSetAccelerometerOrientationModeConfigurationForDevice:withError:
findMyAccessoryManager:didSetAccelerometerSlopeModeConfigurationForDevice:withError:
findMyAccessoryManager:didSetDeviceTypeOnDevice:withError:
findMyAccessoryManager:didSetHawkeyeUTMotionConfigForDevice:withError:
findMyAccessoryManager:didSetNearOwnerTimeoutOnDevice:withError:
findMyAccessoryManager:didSetObfuscatedIdentifierOnDevice:withError:
findMyAccessoryManager:didSetUnauthorizedPlaySoundRateLimitFromDevice:withError:
findMyAccessoryManager:didSetWildConfigurationOnDevice:withError:
findMyAccessoryManager:didStartAggressiveAdvertisingOnDevice:withError:
findMyAccessoryManager:didStartPlayingSoundOnDevice:withError:
findMyAccessoryManager:didStartPlayingUnauthorizedSoundOnDevice:withError:
findMyAccessoryManager:didStartRangingOnDevice:error:
findMyAccessoryManager:didStartUnauthorizedAggressiveAdvertisingOnDevice:withError:
findMyAccessoryManager:didStopAggressiveAdvertisingOnDevice:withError:
findMyAccessoryManager:didStopPlayingSoundOnDevice:withError:
findMyAccessoryManager:didStopPlayingUnauthorizedSoundOnDevice:withError:
findMyAccessoryManager:didUnpairFromDevice:withError:
findMyAccessoryRangingManager:didFailWithError:forDevice:
finishDecoding
fireInterval
first
firstLocationTimeout
firstLocationUsabilityCriteria
firstObject
firstUpdateEnabled
firstUpdateTimeout
floatValue
floor
flush
forceSurfaceStagedDetections:deviceType:
formattedAddressLines
frameCount
fullThoroughfare
fusionInfoEnabled
geoAddress
geoCenter
geoFenceMapRegion
geoMapItemHandle
geoMapItemStorage
geoRadius
geoReferenceFrame
geocodeAddressDictionary:completionHandler:
geocodeAddressDictionary:preferredLocale:completionHandler:
geocodeAddressString:completionHandler:
geocodeAddressString:inRegion:completionHandler:
geocodeAddressString:inRegion:preferredLocale:completionHandler:
geocodePostalAddress:completionHandler:
geocodePostalAddress:preferredLocale:completionHandler:
geocoding
getAccessoryMotionSensorLogs
getAccessoryPASCDTransmissionState
getAccessoryPASCDTransmissionStateWithReplyBlock:
getAccessoryTypeBitSet
getAccessoryTypeBitSetWithReplyBlock:
getActiveClientsUsingLocationWithReplyBlock:
getActivitiesWithReplyBlock:
getAppsUsingLocationWithReplyBlock:
getArchivedAuthorizationDecisionsWithError:
getArchivedAuthorizationDecisionsWithReplyBlock:
getAuthorizationPromptMapDisplayEnabled:
getAuthorizationPromptMapDisplayEnabledWithReplyBlock:
getAuthorizationStatus:forBundleID:orBundlePath:
getAuthorizationStatusForApp:withAuditToken:
getAuthorizationStatusForAppWithAuditToken:replyBlock:
getAuthorizationStatusForBundleID:orBundlePath:replyBlock:
getBytes:length:
getCharacters:range:
getDataStatusForUUID:
getDistanceFrom:
getFencesForBundleID:withHandler:
getGestureServiceEnabled:
getGestureServiceEnabledWithReplyBlock:
getGnssBandsInUseWithReplyBlock:
getGroundAltitudeForBundleID:orBundlePath:location:groundAltitude:
getGroundAltitudeForBundleID:orBundlePath:location:replyBlock:
getGyroCalibrationDatabaseBiasFit:atTemperature:
getGyroCalibrationDatabaseBiasFitAtTemperature:withReply:
getIncidentalUseMode:forBundleID:orBundlePath:
getIncidentalUseMode:forBundleIdentifier:
getIncidentalUseModeForBundleID:orBundlePath:replyBlock:
getLocationDefaultForKey:
getLocationDefaultForKey:replyBlock:
getLocationForBundleID:orBundlePath:dynamicAccuracyReductionEnabled:allowsAlteredAccessoryLocations:location:
getLocationForBundleID:orBundlePath:dynamicAccuracyReductionEnabled:allowsAlteredAccessoryLocations:replyBlock:
getLocationServicesEnabled:
getLocationServicesEnabledWithReplyBlock:
getMacAddressAsString
getMicroLocationInternalVersionWithReplyBlock:
getMonitoredRegionsForBundleID:orBundlePath:replyBlock:
getMotionSensorLogs
getMultiPartStatusFromDevice:
getMultiStatusFromDevice:
getOdometryBatchedLocations
getOdometryBatchedLocationsWithReplyBlock:
getPersonalizationInfoForDevice:
getPipelinedCache
getPipelinedCacheWithReply:
getPrecisionPermission:forBundleID:orBundlePath:
getPrecisionPermissionForBundleID:orBundlePath:replyBlock:
getPrivateMode
getRaceParameters
getRecordingTriggerUUIDAndRequestMicroLocationRecordingScanWithAdditionalInformation:shouldForceRecording:handler:
getStatusBarIconEnabled:forEntityClass:
getStatusBarIconEnabledForEntityClass:replyBlock:
getStatusBarIconState
getStatusBarIconState:
getTechnologiesInUseWithReplyBlock:
getTemporaryAuthorizationStatusForBundleId:orBundlePath:error:
getTemporaryAuthorizationStatusForBundleId:orBundlePath:replyBlock:
getUUIDBytes:
getValue:
getZaxisStatsWithReplyBlock:
globalReferenceFrame
gnssOdometerInfo
grantTemporaryAuthorizationUsingLocationButtonToClientWithAuditToken:voiceInteractionEnabled:
groundAltitudeEnabled
gyroCalibrationDatabaseSupportsMiniCalibration:
gyroCalibrationDatabaseSupportsMiniCalibrationWithReplyBlock:
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
handleInterruption
handleMessage:
handoffTag
hasArrivalDate
hasDepartureDate
hasEastLng
hasLingeringRangingRequest
hasNorthLat
hasSouthLat
hasUsedBackgroundLocationServices:
hasWestLng
hash
headingAvailable
headingFilter
headingOrientation
headings
hexStringMacAddressFromUInt:
horizontalAccuracy
horizontalUncertainty
hydrateGeoMapItemLocallyFromHandle:completionHandler:
identifier
inUseLevel
inUseLevelIsAtLeast:
incidentalUseModeForLocationDictionary:
induceCrashOnDevice:
inertialCovariance
inertialCovarianceInfo
inertialState
inertialStateInfo
init
initCircularRegionWithCenter:radius:identifier:
initForFeature:withUpdatesEnabled:
initForLowPowerWithCenter:radius:identifier:
initForReadingFromData:error:
initInSilo:withIdentifier:
initInSilo:withIdentifier:state:
initLegacyObjectWithCoder:
initNearbyAllowedWithCenter:radius:identifier:
initNearbyAllowedWithVertices:identifier:
initRoseWithParameters:onDevice:
initWithAddress:ltk:
initWithAddress:ltk:primaryIndex:secondaryIndex:
initWithArray:
initWithBeaconIdentityConstraint:identifier:
initWithBeaconType:
initWithBeaconType:transmitPower:
initWithBytes:length:
initWithCLLocationSmoother:
initWithCalendarIdentifier:
initWithCapacity:
initWithCenter:radius:identifier:
initWithCenter:radius:identifier:nearbyAllowed:
initWithCenter:radius:identifier:onBehalfOfBundleId:
initWithCenter:radius:identifier:onBehalfOfBundleId:referenceFrame:
initWithCenter:radius:referenceFrame:allowMonitoringWhenNearby:lowPower:identifier:onBehalfOfBundleId:notifyOnEntry:notifyOnExit:conservativeEntry:emergency:
initWithCenter:radius:referenceFrame:allowMonitoringWhenNearby:lowPower:identifier:onBehalfOfBundleId:notifyOnEntry:notifyOnExit:conservativeEntry:emergency:deviceId:handoffTag:
initWithCenter:radius:referenceFrame:lowPower:identifier:onBehalfOfBundleId:notifyOnEntry:notifyOnExit:conservativeEntry:emergency:deviceId:handoffTag:
initWithClientCoordinate:
initWithClientHeading:
initWithClientLocation:
initWithClientLocation:clientLocationPrivate:
initWithClientLocation:clientLocationPrivate:coarseMetaData:
initWithClientLocation:coarseMetaData:
initWithClientLocation:matchInfo:
initWithClientLocation:matchInfo:trustedTimestamp:
initWithClientLocation:matchInfo:trustedTimestamp:groundAltitude:
initWithClientLocation:matchInfo:trustedTimestamp:groundAltitude:fusionInfo:trackRunInfo:rawHorizontalAccuracy:rawAltitude:rawVerticalAccuracy:rawCourseAccuracy:positionContextStateType:probabilityPositionContextStateIndoor:probabilityPositionContextStateOutdoor:gnssOdometerInfo:
initWithClientLocation:matchInfo:trustedTimestamp:groundAltitude:fusionInfo:trackRunInfo:rawHorizontalAccuracy:rawAltitude:rawVerticalAccuracy:rawCourseAccuracy:positionContextStateType:probabilityPositionContextStateIndoor:probabilityPositionContextStateOutdoor:gnssOdometerInfo:coarseMetaData:
initWithClientLocation:matchInfo:trustedTimestamp:groundAltitude:fusionInfo:trackRunInfo:rawHorizontalAccuracy:rawCourseAccuracy:coarseMetaData:
initWithClientRegion:
initWithClientVehicleHeading:
initWithClientVehicleSpeed:
initWithClusterIdentifier:meanBleRssi:meanUwbRange:
initWithCoder:
initWithConfig:bundle:delegate:queue:
initWithCoordinate:
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:courseAccuracy:speed:speedAccuracy:timestamp:
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:speed:timestamp:
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:
initWithCoordinate:altitude:timetamp:
initWithCoordinate:horizontalAccuracy:arrivalDate:departureDate:detectionDate:
initWithCoordinate:horizontalAccuracy:arrivalDate:departureDate:detectionDate:placeInference:
initWithCoordinateFused:coordinateFusedWithVL:coordinate:horizontalAccuracy:referenceFrame:altitude:verticalAccuracy:course:courseAccuracy:
initWithCurrentRunLoopAndIdentifier:
initWithCurrentRunLoopAndIdentifier:bePermissive:
initWithData:
initWithDesiredNextKeyRollDate:keyRollInterval:keysRemainingInWildPeriod:wildPeriodKeyCount:
initWithDesiredNextKeyRollDate:nextWildIndex:
initWithDictionary:copyItems:
initWithDomain:code:userInfo:
initWithEffectiveBundle:
initWithEffectiveBundle:delegate:onQueue:
initWithEffectiveBundle:limitingBundleIdentifier:delegate:onQueue:
initWithEffectiveBundleIdentifier:
initWithEffectiveBundleIdentifier:bundlePath:websiteIdentifier:delegate:silo:
initWithEffectiveBundleIdentifier:delegate:onQueue:
initWithEffectiveBundlePath:
initWithEffectiveBundlePath:delegate:onQueue:
initWithEffectiveBundlePath:limitingBundleIdentifier:delegate:onQueue:
initWithEstimate:uncertainty:
initWithEstimate:uncertainty:undulation:undulationModel:
initWithFirst:second:
initWithGEOCoordinate:
initWithIdentifier:
initWithIdentifier:andRegionType:
initWithIdentifier:onBehalfOf:regionType:notifyOnEntry:notifyOnExit:conservativeEntry:emergency:
initWithIdentifier:onBehalfOf:regionType:notifyOnEntry:notifyOnExit:conservativeEntry:emergency:deviceId:handoffTag:
initWithInUseLevel:registrationResult:transientAwareRegistrationResult:serviceMaskTuple:authorizedForWidgetUpdates:
initWithInfo:bundleIdentifier:bundlePath:websiteIdentifier:delegate:silo:
initWithInputItems:listenerEndpoint:contextUUID:
initWithLapInfo:laneNumber:laneCount:trackId:estimatedLaneNumber:estimatedLaneConfidence:trackProximity:
initWithLatitude:longitude:
initWithLatitude:longitude:altitude:odometer:timestamp:signalEnvironmentType:
initWithLatitude:longitude:altitude:odometer:timestamp:timeSinceStart:offRouteTime:distanceSinceStart:offRouteDistance:averagePace:distanceAlongReference:
initWithLatitude:longitude:altitude:timetamp:
initWithLevel:
initWithLocation:addressDictionary:region:areasOfInterest:
initWithLocation:addressDictionary:region:areasOfInterest:mapItemSource:geoMapItemHandle:meCardAddress:
initWithMacAddressAsData:secureRangingKeyID:
initWithMacAddressAsString:secureRangingKeyID:
initWithMacAddressAsUInt:secureRangingKeyID:
initWithMachServiceName:options:
initWithMatchQuality:matchCoordinate:matchCourse:matchFormOfWay:matchRoadClass:matchShifted:
initWithMatchQuality:matchCoordinate:matchCourse:matchFormOfWay:matchRoadClass:matchShifted:matchDataArray:
initWithMaxBytesPerUUID:
initWithMinLatitude:maxLatitude:minLongitude:maxLongitude:nRows:nColumns:
initWithName:
initWithOdometer:deltaDistance:deltaDistanceAccuracy:
initWithPeer:date:distanceMeters:accuracyMeters:initiator:
initWithPeer:date:distanceMeters:accuracyMeters:initiator:shouldUnlock:
initWithPlacemark:
initWithProximityUUID:identifier:
initWithProximityUUID:major:identifier:
initWithProximityUUID:major:minor:identifier:
initWithProximityUUID:major:minor:proximity:accuracy:rssi:
initWithQueue:
initWithQueue:defaultConfig:
initWithQueue:identifier:
initWithQueue:locationManagerRoutine:
initWithRaceStartPointDetected:raceEndPointDetected:userIsOffRoute:projectedOnNearestPoint:raceSessionExpired:rollingBufferReachedEndOfReferenceRoute:routeConfigurationSuccessful:racingRouteAnalyticsSent:prematureRaceEndDetected:referenceRouteTotalLengthDetermined:locationPointIsOutsideOfAcceptedRange:locationPointNotMatched:routePointsBufferSize:numberOfRoutePointsToAdd:offRouteGraceDuration:matchedPointCounter:referenceRouteDataPointCounter:currentRouteDataPointCounter:offRouteDataPointCounter:inutileDataPointCounter:rollingBufferUpdateCounter:lastMatchedPointIndex:lastMatchedPointIndexOnReferenceRoute:rollingBufferStartIndexOnReferenceRoute:matrixCellIndexForLastMatchedPoint:referenceRouteTotalLength:timestampOfLastMatchedPointOnReferenceRoute:registeredTimeAtThresholdDistance:endOfRaceTimeThreshold:nearestNeighborMaximumAcceptedDistance:
initWithRegistrationMessageName:messageDictionary:
initWithRegistrationMessageName:messageDictionary:dispatchQueue:codeBlock:
initWithRegistrationMessageName:messagePayload:callbackQueue:completionHandler:
initWithRouteMatrixIndexVec:racingRouteVariables:startPointOnCurrentRoute:startPointOnReferenceRoute:lastOnRouteDataPoint:lastProjectedDataPoint:routeBoundingBox:
initWithSet:copyItems:
initWithSoftwareSimulationState:andExternalAccessoryState:
initWithSourceIdsIdentifier:sourceData:
initWithSourcesData:
initWithThreshold:sampleCount:sampleRate:
initWithThreshold:sleepDuration:
initWithTimeAhead:currentDistance:referenceDistance:currentAveragePace:totalOverlapDistance:state:
initWithTimestamp:localizationResult:
initWithType:
initWithType:encodedSequence:
initWithUUID:
initWithUUID:identifier:
initWithUUID:major:
initWithUUID:major:identifier:
initWithUUID:major:minor:
initWithUUID:major:minor:identifier:
initWithUUID:major:minor:identifier:notifyEntryStateOnDisplay:
initWithUUID:major:minor:proximity:accuracy:rssi:timestamp:
initWithUUIDString:
initWithUnderlyingQueue:bePermissive:
initWithUnsignedLongLong:
initWithUserType:placeType:placemark:referenceLocation:confidence:preferredName:loiIdentifier:
initWithVLLocalizationDebugInfo:
initWithVertices:identifier:
initWithWebsiteIdentifier:
initWithWebsiteIdentifier:delegate:onQueue:
initiator
inlandWater
inlierIndices
inliersCount
insertObject:atIndex:
instancesRespondToSelector:
intValue
integerValue
integrity
intendToSyncServiceWithName:
interestZoneDictionaryIdentifiedById:forLocationDictionary:
interestZonesIdentifierListForLocationDictionary:
interestedPartyIso3166CountryCodes
interfaceWithProtocol:
internalClient
inutileDataPointCounter
invalidate
isAltitudeWgs84Available
isAuthorizedForPreciseLocation
isAuthorizedForServiceType:
isAuthorizedForWidgetUpdates
isCoordinateFused
isCoordinateFusedWithVL
isDisputed
isDynamicAccuracyReductionEnabled
isEntityAuthorizedForLocationDictionary:
isEqual:
isEqualToData:
isEqualToMaterial:
isEqualToNumber:
isEqualToPeer:
isEqualToString:
isFileURL
isGeocoding
isInitiator
isInterestZoneReleventForLocationDictionary:
isKindOfClass:
isLocationActiveForLocationDictionary:
isLocationServicesPreferencesDialogEnabled
isLowPower
isMatchInfoEnabled
isMatchShifted
isMemberOfClass:
isMonitoringAvailableForClass:
isNonProvisionallyAuthorizedForServiceType:
isNonProvisionallyAuthorizedForServiceTypeMask:
isPeerRangingAvailable
isProducedByAccessory
isRangingAvailable
isSimulatedBySoftware
isStatusBarIconEnabledForLocationEntityClass:
isTrackRunInfoEnabled
iso3166CountryCode
jsonObject
keyCount
keysRemaining
laneCount
laneNumber
lastMatchedPointIndex
lastMatchedPointIndexOnReferenceRoute
lastObject
lastOnRouteDataPoint
lastPathComponent
lastProjectedDataPoint
laterDate:
latitude
latitude_deg
length
lengthOfBytesUsingEncoding:
level
loadScenarioFromURL:
localeIdentifier
locality
localizedNameForScenario:
localizedStringFromDate:dateStyle:timeStyle:
location
locationDeliveryBehavior
locationDistance
locationInterval
locationManager:didChangeAuthorizationStatus:
locationManager:didDetermineState:forRegion:
locationManager:didEnter:completion:
locationManager:didExit:completion:
locationManager:didExitRegion:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didFailWithError:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didNotReceiveLocationUpdatesForRegionMonitoringInInterval:
locationManager:didRangeBeacons:inRegion:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didRangePeers:
locationManager:didReceiveApproval:
locationManager:didSmoothLocations:ofType:
locationManager:didStartMonitoringForRegion:
locationManager:didStartRangingForPeer:
locationManager:didStopRangingForPeer:
locationManager:didUpdateHeading:
locationManager:didUpdateLocations:
locationManager:didUpdateLocations:completion:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateVehicleHeading:
locationManager:didUpdateVehicleSpeed:
locationManager:didVisit:
locationManager:monitoringDidFailForRegion:withError:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:rangingDidFailForPeer:withError:
locationManagerDidChangeAuthorization:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManagerRoutine
locationManagerRoutineProxy
locationManagerShouldDisplayHeadingCalibration:
locationManagerSmoother
locationManagerSmootherProxy
locationPointIsOutsideOfAcceptedRange
locationPointNotMatched
locationRepeatBehavior
locationSelectorDidSelectLocation:
locationServicesApproved
locationServicesAvailable
locationServicesEnabled
locationServicesEnabled:
locationServicesPreferencesDialogEnabled
locationSpeed
locationUpdateChangeInAltitudeToSendEarly
locationUpdateDistanceMovedToSendEarly
locationUpdateHuncReductionToSendEarly
locationUpdateMinDelay
locationUpdateTimeout
locationUpdateVuncReductionToSendEarly
loiIdentifier
longitude
longitude_deg
macAddress
magneticDeclination
main
mainBundle
major
makeObjectsPerformSelector:
mapCorrectionAvailable
mapItemStorageForGEOMapItem:
maps488Details
markAsHavingReceivedLocation
matchCourse
matchDataArray
matchFormOfWay
matchInfo
matchInfoEnabled
matchQuality
matchRoadClass
matchShifted
matchedPointCounter
matrixCellIndexForLastMatchedPoint
maxLatitude
maxLongitude
maxUsableAge
maxUsableHunc
maxUsableVunc
maximumSampleCount
maximumThreshold
meanBLEReceivedSignalStrength
meanUWBRange
mecardAddress
metadataForHomekitAccessoryControlEventWithUUID:stateString:serviceUUID:serviceType:characteristicType:serviceGroupUUID:source:roomUUID:
metadataForHomekitActionSetEventWithUUID:name:type:clientName:source:homeName:
metadataForMicroLocationTruthTagEventWithTagUUID:
minLatitude
minLongitude
minUsableIntegrity
minimumSampleCount
minimumThreshold
minor
modifyOrSetAuthorizationTime:forBundleID:orBundlePath:
modifyOrSetAuthorizationTime:forBundleID:orBundlePath:replyBlock:
monitoredRegions
mutableCopy
nColumns
nRows
name
nearestNeighborMaximumAcceptedDistance
newAssertionForBundle:withReason:
newAssertionForBundle:withReason:callbackQueue:completionHandler:
newAssertionForBundle:withReason:level:
newAssertionForBundle:withReason:withCallbackQueue:andBlock:
newAssertionForBundleIdentifier:bundlePath:reason:level:
newAssertionForBundleIdentifier:withReason:
newAssertionForBundleIdentifier:withReason:callbackQueue:completionHandler:
newAssertionForBundleIdentifier:withReason:level:
newAssertionForBundleIdentifier:withReason:withCallbackQueue:andBlock:
newAssertionForBundlePath:withReason:
newAssertionWithBundleId:bundlePath:reason:overrideDeauthorizationForBeneficiary:
newAssertionWithReason:
newTimer
nextWildIndex
northLat
notifyEntryStateOnDisplay
notifyOnEntry
notifyOnExit
notifyPassKitPayment:transaction:info:
notifyWeatherForecast:airQualityConditions:hourlyForecasts:dailyForecasts:latitude:longitude:
numberOfRoutePointsToAdd
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithUnsignedChar:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedShort:
objCType
objectAtIndex:
objectAtIndexedSubscript:
objectForInfoDictionaryKey:
objectForKey:
objectForKeyedSubscript:
ocean
odometer
odometer_m
offRouteDataPointCounter
offRouteDistance
offRouteGraceDuration
offRouteTime
onBehalfOfBundleId
onClientEvent:supportInfo:
onClientEventAuthStatus:
onClientEventAutopauseStatus:
onClientEventBatch:
onClientEventError:
onClientEventHeading:
onClientEventHeadingCalibration:
onClientEventInterrupted:
onClientEventLocation:forceMapMatching:type:
onClientEventLocationUnavailable:
onClientEventNoLocationWatchdog:
onClientEventPeerRanging:
onClientEventPeerRangingError:
onClientEventPeerRangingRequestProcessed:
onClientEventPlaceInferenceError:
onClientEventPlaceInferenceResult:
onClientEventRanging:
onClientEventRangingError:
onClientEventRegion:
onClientEventRegionError:
onClientEventRegionResponseDelayed:
onClientEventRegionSetupCompleted:
onClientEventRegionState:
onClientEventSignificantLocationVisit:
onClientEventSignificantLocationVisitStateRequest:
onClientEventVehicleHeading:
onClientEventVehicleSpeed:
onDidBecomeActive:
onDidEnterBackground:
onLocationRequestTimeout
onRangingRequestTimeout
onWillEnterForeground:
path
pathExtension
pauseLocationUpdates:
paused
pausesLocationUpdatesAutomatically
peer
perFrameCalibrationMatrices
perFrameDistortion
perFrameVioPoses
perFrameVioStatusCodes
performAggressiveScanForDurianService
performAggressiveScanForSeparationAlerts
performAggressiveScanForTrackingAvoidance
performCourtesyPromptIfNeeded
performHELEScanForTrackingAvoidance
performLongAggressiveScanForSeparationAlerts
performMigration
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
periodicUpdatesEnabled
peripheralDataWithMeasuredPower:
pingDaemon
pingDaemonWithReplyBlock:
placeType
placemark
placemarkWithGEOMapItem:
pointInPolygonWithCoordinate:withDistanceToBorder:
points2D
points3D
polylines
positionContextState
postalAddress
postalAddressWithDictionaryRepresentation:
postalCode
preferredName
prematureRaceEndDetected
prepareRangingOnDevice:
previousAuthorizationStatus
previousAuthorizationStatusValid
primaryEntityClassForLocationDictionary:
primaryIndex
printConfiguration
printUsabilityCriteria:
privateMode
probabilityPositionContextStateIndoor
probabilityPositionContextStateOutdoor
processInfo
processName
projectedOnNearestPoint
propagateLocationToTime:
propertyListWithData:options:format:error:
provisionalServiceMask
proximity
proximityUUID
purgeMicroLocationSemiSupervisedData
queue
raceEndPointDetected
raceSessionExpired
raceStartPointDetected
racingRouteAnalyticsSent
racingRouteVariables
radius
rangeForTransmitPower:
rangedBeaconConstraints
rangedConstraints
rangedRegions
rawAltitude
rawCoordinate
rawCourse
rawCourseAccuracy
rawHorizontalAccuracy
rawVerticalAccuracy
recoverRaceAtTimestamp
referenceDistance_m
referenceFrame
referenceLocation
referenceRouteDataPointCounter
referenceRouteTotalLength
referenceRouteTotalLengthDetermined
region
regionMonitoringAvailable
regionMonitoringEnabled
registerAsLocationClient
registerCircularInterestZoneWithId:latitude:longitude:radius:serviceMaskOperator:provenanceType:forBundleId:orBundlePath:replyBlock:
registerCircularInterestZoneWithId:latitue:longitude:radius:serviceMaskOperator:provenanceType:forBundle:error:
registerCircularInterestZoneWithId:latitue:longitude:radius:serviceMaskOperator:provenanceType:forBundleIdentifier:error:
registerPhenolicInterestZoneWithId:phenolicLocation:serviceMaskOperator:provenanceType:forBundle:error:
registerPhenolicInterestZoneWithId:phenolicLocation:serviceMaskOperator:provenanceType:forBundleId:orBundlePath:error:
registerPhenolicInterestZoneWithId:phenolicLocation:serviceMaskOperator:provenanceType:forBundleId:orBundlePath:replyBlock:
registerPhenolicInterestZoneWithId:phenolicLocation:serviceMaskOperator:provenanceType:forBundleIdentifier:error:
registeredTimeAtThresholdDistance
registrationResult
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
removeObject:
removeObjectForKey:
removeObjectsInRange:
requestAlwaysAuthorization
requestCurrentMicroLocationWithAdditionalInformation:
requestHistoricalLocationsWithPurposeKey:sampleCount:completionHandler:
requestMicroLocationRecordingScanWithAdditionalInformation:
requestMicroLocationRecordingScanWithAdditionalInformation:shouldForceRecording:
requestMicroLocationStaticSourcesStatisticsWithCompletion:
requestRangingToPeers:timeoutSeconds:
requestStateForRegion:
requestTemporaryFullAccuracyAuthorizationWithPurposeKey:
requestTemporaryFullAccuracyAuthorizationWithPurposeKey:completion:
requestTemporaryPreciseLocationAuthorizationWithPurposeKey:
requestTemporaryPreciseLocationAuthorizationWithPurposeKey:completion:
requestWhenInUseAuthorization
requestWhenInUseAuthorizationWithPrompt
requestWhenInUseAuthorizationWithPurposeKey:
requestingLocation
requestingRanging
reset
resetAllClientsWithReplyBlock:
resetApps
resetClientForBundleId:orBundlePath:withReplyBlock:
resetFrames
resetInliers
resetLocationAuthorizationForBundleId:orBundlePath:
resolveMapItemLocallyFromHandle:completionHandler:
respondToRangingFromPeers:timeoutSeconds:
respondsToSelector:
responseSilo
resultPoseRotation
resultPoseTranslation
resume
resumeLocationUpdates
retain
retainCount
reverseGeocodeLocation:completionHandler:
reverseGeocodeLocation:heading:completionHandler:
reverseGeocodeLocation:heading:localResultsOnly:completionHandler:
reverseGeocodeLocation:localResultsOnly:completionHandler:
reverseGeocodeLocation:preferredLocale:completionHandler:
reverseGeocodeLocation:preferredLocale:heading:localResultsOnly:completionHandler:
reverseObjectEnumerator
roadID
roadSegment
rollWildKeyOnDevice:
rollingBufferReachedEndOfReferenceRoute
rollingBufferStartIndexOnReferenceRoute
rollingBufferUpdateCounter
roseAPVersion
roseDSPVersion
rotationalAccuracyInRadians
routeBoundingBox
routeConfigurationSuccessful
routeMatrixIndexVec
routePointsBufferSize
rssi
rtKitVersion
sampleCount
sampleRate
scanForHELE
scanForNearbyDevicesLong
scanForNearbyOwner
scanHexInt:
scannerWithString:
scenariosPath
second
secondaryIndex
secureRangingKeyID
self
sendMessage:
sendMessage:withPayload:
serviceExtensionPerformCleanup
serviceExtensionWillTerminate
serviceName
setAccelerometerOrientationModeConfiguration:forDevice:
setAccelerometerSlopeModeConfiguration:forDevice:
setActivityType:
setAllowsAlteredAccessoryLocations:
setAllowsBackgroundLocationUpdates:
setAllowsLocationPrompts:
setAllowsMapCorrection:
setAltitude:
setAltitudeStitchingEnabled:
setApplyRangeEstimation:
setAuthorizationPromptMapDisplayEnabled:
setAuthorizationPromptMapDisplayEnabled:replyBlock:
setAuthorizationStatus:forBundle:
setAuthorizationStatus:forBundleIdentifier:
setAuthorizationStatus:forBundlePath:
setAuthorizationStatus:withCorrectiveCompensation:forBundleID:orBundlePath:
setAuthorizationStatus:withCorrectiveCompensation:forBundleID:orBundlePath:replyBlock:
setAuthorizationStatus:withCorrectiveCompensation:forInterestZoneWithId:registeredForBundle:
setAuthorizationStatus:withCorrectiveCompensation:forInterestZoneWithId:registeredForBundleIdentifier:
setAuthorizationStatusByType:forBundle:
setAuthorizationStatusByType:forBundleIdentifier:
setAuthorizationStatusByType:forBundlePath:
setAuthorizationStatusByType:withCorrectiveCompensation:andZoneIdentifier:andSubIdentityIdentifier:forBundleID:orBundlePath:
setAuthorizationStatusByType:withCorrectiveCompensation:andZoneIdentifier:andSubIdentityIdentifier:forBundleID:orBundlePath:replyBlock:
setAuthorizationStatusByType:withCorrectiveCompensation:forBundle:
setAuthorizationStatusByType:withCorrectiveCompensation:forBundleIdentifier:
setBackgroundIndicatorEnabled:forBundle:
setBackgroundIndicatorEnabled:forBundleID:orBundlePath:replyBlock:
setBackgroundIndicatorEnabled:forBundleIdentifier:
setBackgroundIndicatorEnabled:forLocationDictionary:
setBackgroundIndicatorForBundleID:orBundlePath:enabled:
setBatchingLocation:
setBatteryStatus:forDevice:
setBiasRateInMeasurement:
setByAddingObjectsFromArray:
setCameraImageResolution:
setCameraIntrinsics:
setCameraPose:
setClass:forSelector:argumentIndex:ofReply:
setClasses:forSelector:argumentIndex:ofReply:
setCoarseMetadata:
setConfidence:
setConnection:
setConservativeEntry:
setCoordinate:
setCourse:
setCourtesyPromptNeeded:
setCovariance:
setDateFormat:
setDateStyle:
setDebugInfo:
setDefaultEffectiveBundle:
setDefaultEffectiveBundleIdentifier:
setDefaultsForSIP
setDelegate:
setDesiredAccuracy:
setDeviceLocation:
setDeviceType:onDevice:
setDistanceFilter:
setDynamicAccuracyReductionEnabled:
setEastLng:
setEmergency:
setEntityAuthorization:forLocationDictionary:
setEntityAuthorization:withCorrectiveCompensation:forLocationDictionary:
setEntityAuthorization:withCorrectiveCompensationType:forLocationDictionary:
setEntityAuthorized:forLocationDictionary:
setExportedInterface:
setExportedObject:
setExtendedBorderDetection:withExtendedDistance:
setFeature:
setFirstLocationEarlyReturnEnabled:
setFirstLocationMaxEarlyReturnHunc:
setFirstLocationMaxEarlyReturnVunc:
setFirstLocationTimeout:
setFirstLocationUsabilityCriteria:
setFirstUpdateEnabled:
setFirstUpdateTimeout:
setFormatterBehavior:
setFrameCount:perFrameVioStatusCodes:perFrameVioPoses:perFrameCalibrationMatrices:perFrameDistortion:
setFusionInfoEnabled:
setGeoReferenceFrame:
setGestureServiceEnabled:
setGestureServiceEnabled:replyBlock:
setGlobalReferenceFrame:
setGroundAltitudeEnabled:
setGutsWithProximityUUID:major:minor:notifyOnDisplay:
setHandler:
setHawkeyeTestMode:forDevice:
setHawkeyeUTMotionConfigWithSeparatedUTTimeoutSeconds:separatedUTBackoffTimeoutSeconds:forDevice:
setHeading:
setHeadingFilter:
setHeadingOrientation:
setHeadings:
setHorizontalAccuracy:
setIncidentalUseMode:forBundleID:orBundlePath:
setIncidentalUseMode:forBundleID:orBundlePath:replyBlock:
setIncidentalUseMode:forBundleIdentifier:
setInertialCovariance:
setInertialCovarianceInfo:
setInertialState:
setInertialStateInfo:
setInliersCount:points2D:points3D:inlierIndices:
setIntermediateLocationDistance:
setInterruptionHandler:
setInvalidationHandler:
setIsActuallyAWatchKitExtension:
setIsAuthorizedForWidgetUpdates:
setKeyRollInterval:onDevice:
setLatitude:
setLimitsPrecision:
setLocation:
setLocationButtonUseMode:forBundle:
setLocationButtonUseMode:forBundleID:orBundlePath:
setLocationButtonUseMode:forBundleID:orBundlePath:replyBlock:
setLocationButtonUseMode:forBundleIdentifier:
setLocationDefaultForKey:andValue:replyBlock:
setLocationDeliveryBehavior:
setLocationDistance:
setLocationInterval:
setLocationManagerRoutine:
setLocationManagerSmoother:
setLocationRepeatBehavior:
setLocationServicesEnabled:
setLocationServicesEnabled:replyBlock:
setLocationServicesPreferencesDialogEnabled:
setLocationSpeed:
setLocationTravellingSpeed:
setLocationUpdateChangeInAltitudeToSendEarly:
setLocationUpdateDistanceMovedToSendEarly:
setLocationUpdateHuncReductionToSendEarly:
setLocationUpdateMinDelay:
setLocationUpdateTimeout:
setLocationUpdateUsabilityCriteria:
setLocationUpdateVuncReductionToSendEarly:
setLongitude:
setManager:
setMapMatchingRouteHint:count:routingType:stepType:
setMapMatchingRouteHint:routingType:stepType:replyBlock:
setMapRegion:
setMaps488Details:
setMatchInfoEnabled:
setMaxBytesPerUUID:
setMaxUsableAge:
setMaxUsableHunc:
setMaxUsableVunc:
setMinUsableIntegrity:
setMonth:
setNearOwnerTimeout:onDevice:
setNextFireDelay:
setNextFireDelay:interval:
setNorthLat:
setNotifyEntryStateOnDisplay:
setNotifyOnEntry:
setNotifyOnExit:
setObfuscatedIdentifier:onDevice:
setObject:forKey:
setObject:forKeyedSubscript:
setOnBehalfOfBundleId:
setOriginTimestamp:
setPaused:
setPausesLocationUpdatesAutomatically:
setPeriodicUpdatesEnabled:
setPolylines:
setPreviousAuthorizationStatusValid:
setPrivateMode:replyBlock:
setPurpose:
setRaceParameters:
setReferenceFrame:
setRelevance:forInterestZoneWithId:registeredForBundle:error:
setRelevance:forInterestZoneWithId:registeredForBundleId:orBundlePath:error:
setRelevance:forInterestZoneWithId:registeredForBundleId:orBundlePath:replyBlock:
setRelevance:forInterestZoneWithId:registeredForBundleIdentifier:error:
setRemoteObjectInterface:
setRequestingLocation:
setRequestingRanging:
setResponseSilo:
setResultPoseRotation:
setResultPoseTranslation:
setRoadID:
setRoseRangingParameters:onDevice:
setRotationFromGlobalToCameraFrame:
setRotationFromGlobalToDeviceFrame:
setSampleRate:
setShowsBackgroundLocationIndicator:
setSimulatedCell:
setSimulatedCellRegistrationStatus:
setSimulatedWifiPower:
setSimulationScenario:
setSlamOrigin:
setSlamTracksCount:slamTracks:descriptorDimension:slamTrackDescriptors:slamTrackObservations:slamTracks2D:slamTrackImageIndices:
setSleepDuration_ms:
setSouthLat:
setSpeed:
setStatus:
setStatusBarIconEnabled:forEntityClass:
setStatusBarIconEnabled:forLocationEntityClass:
setStatusBarIconEnabledForEntityClass:enabled:replyBlock:
setSupplemantaryInfo:
setTemporaryAuthorizationGranted:forBundle:
setTemporaryAuthorizationGranted:forBundleID:orBundlePath:orAuditToken:byLocationButton:voiceInteractionEnabled:
setTemporaryAuthorizationGranted:forBundleID:orBundlePath:orAuditToken:byLocationButton:voiceInteractionEnabled:replyBlock:
setTemporaryAuthorizationGranted:forBundleIdentifier:
setTemporaryAuthorizationStatusForBundleId:orBundlePath:statusData:
setTemporaryAuthorizationStatusForBundleId:orBundlePath:statusData:replyBlock:
setThreshold:
setTimeStyle:
setTimestamp:
setTrackRunHint:
setTrackRunHint:replyBlock:
setTrackRunInfoEnabled:
setTrackingState:
setTransform:
setType:
setUUID:
setUnauthorizedPlaySoundRateLimit:forDevice:
setUpdating:
setUpdatingHeading:
setUpdatingLocation:
setUpdatingRanging:
setUpdatingVehicleHeading:
setUpdatingVehicleSpeed:
setUuidToData:
setValue:forKey:
setVerticalAccuracy:
setVuncCheckRequiredForUsability:
setWestLng:
setWifiScanResults:
setWildConfiguration:onDevice:
setWithArray:
setWithObject:
sharedApplication
sharedInstance
sharedManager
sharedService
sharedServiceClient
shortDescription
shortSequence
shortValue
shouldUnlock
showCalibrationAlert
showsBackgroundLocationIndicator
shutdownDaemon
shutdownDaemonWithReplyBlock:
signalEnvironmentType
significantLocationChangeMonitoringAvailable
simulateBeaconWithProximityUUID:major:minor:eventType:
simulateFenceWithBundleID:andFenceID:eventType:atLocation:
simulateSignificantLocationChange:
simulateVisit:
slamOrigin
slamTrackDescriptors
slamTrackImageIndices
slamTrackObservations
slamTracks
slamTracks2D
sleepDuration_ms
smoothLocations:
smoothLocations:handler:
smoothLocations:useType:
smoothLocations:workoutActivity:handler:
smoothLocations:workoutActivityType:handler:
snapToResolution:
sortDescriptorWithKey:ascending:
sortUsingDescriptors:
sortedArrayUsingDescriptors:
source
sourceData
sourceIdsIdentifier
sourceInformation
sourcesData
southLat
specificationVersion
speed
speedAccuracy
stageTADetection:deviceType:
startAggressiveAdvertisingOnDevice:withTimeout:
startAppStatusUpdates
startCellSimulation
startEventCounterForDevice:
startEventCounterOnDevice:
startLocationSimulation
startMonitoringForAvengerAdvertisementsForBTFinding
startMonitoringForRegion:
startMonitoringForRegion:desiredAccuracy:
startMonitoringLocationPushesWithCompletion:
startMonitoringSignificantLocationChanges
startMonitoringVisits
startPlayingSoundSequence:onDevice:
startPlayingUnauthorizedSoundOnDevice:
startPlayingUnauthorizedSoundSequence:onDevice:
startPointOnCurrentRoute
startPointOnReferenceRoute
startRangingBeaconsInRegion:
startRangingBeaconsSatisfyingConstraint:
startRangingFromPeers:
startRangingOnDevice:targetEventCounter:
startRangingToPeers:intervalSeconds:
startRangingWithParameters:onDevice:
startTechStatusUpdates
startTranscriptSession
startTranscriptSessionWithCompletion:
startUnauthorizedAggressiveAdvertisingOnDevice:
startUpdatingHeading
startUpdatingLocation
startUpdatingVehicleHeading
startUpdatingVehicleSpeed
startWifiSimulation
state
staticServiceMask
status
stopAggressiveAdvertisingOnDevice:
stopAppStatusUpdates
stopCellSimulation
stopEventCounterForDevice:
stopEventCounterOnDevice:
stopLocationSimulation
stopLongAggressiveScanForSeparationAlerts
stopMonitoringForAvengerAdvertisementsForBTFinding
stopMonitoringForRegion:
stopMonitoringLocationPushes
stopMonitoringSignificantLocationChanges
stopMonitoringVisits
stopPlayingSoundOnDevice:
stopPlayingUnauthorizedSoundOnDevice:
stopRangingBeaconsInRegion:
stopRangingBeaconsSatisfyingConstraint:
stopRangingFromPeers:
stopRangingOnDevice:
stopRangingToPeers:
stopRoseWithParameters:onDevice:
stopScanForNearbyDevicesLong
stopSession
stopTechStatusUpdates
stopUpdatingHeading
stopUpdatingLocation
stopUpdatingLocationAutoPaused
stopUpdatingVehicleHeading
stopUpdatingVehicleSpeed
stopWifiSimulation
street
stringByAppendingString:
stringByDeletingPathExtension
stringWithFormat:
stringWithString:
stringWithUTF8String:
subAdministrativeArea
subLocality
subdataWithRange:
submitSample:
submitWithHandler:networkActivity:
submitWithRefinedHandler:networkActivity:
superclass
supplemantaryInfo
supportInfo
supportsSecureCoding
supportsWifi2
synchronousRemoteObject
synchronousRemoteObjectProxyWithErrorHandler:
technologiesInUse
thoroughfare
threshold
ticketForReverseGeocodeLocation:placeTypeLimit:traits:
timeAhead_s
timeIntervalSince1970
timeIntervalSinceDate:
timeIntervalSinceReferenceDate
timeSinceStart
timeSyncMachTimeStamp:oscarTimeStamp:
timeZone
timeZoneAtLocation:
timestamp
timestampOfLastMatchedPointOnReferenceRoute
timestamp_s
timezone
totalObservationsCount
totalOverlapDistance_m
trackProximity
trackRunInfo
trackRunInfoEnabled
trackerStateSize
trackerStateTypeName
trackingState
transform
transientAwareRegistrationResult
transmitPower
triggerExpiredAuthorizationPurgeOnClientManager
triggerExpiredAuthorizationPurgeWithReplyBlock:
trueHeading
trustedTimestamp
type
uintMacAddressFromString:
unarchivedArrayOfObjectsOfClass:fromData:error:
unarchivedObjectOfClass:fromData:error:
uncertainty
uncertaintyWgs84
undulation
unionSet:
uniqueIdentifier
unpairFromDevice:
unpairFromDeviceWithAddress:
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
unsignedLongValue
unsignedShortValue
updateCorrectiveCompensationChoiceForOutstandingPrompt:
updateCorrectiveCompensationChoiceForOutstandingPrompt:replyBlock:
updateFirmwareForDevice:withAssetURL:
updateState:
updating
updatingLocation
updatingVehicleHeading
updatingVehicleSpeed
useDefaultFirmwareAssetSourceForProductGroup:andProductNumber:
useLocalFirmwareAssetFromURL:forProductGroup:forProductNumber:withSandboxExtension:
userIsOffRoute
userLocationClientsWithInfo
userType
uuidToData
value:withObjCType:
valueWithBytes:objCType:
valueWithCLLocationCoordinate2D:
verticalAccuracy
vertices
vuncCheckRequiredForUsability
writeToURL:options:error:
year
zone
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v32@0:8@16@?24
v24@0:8@"NSArray"16
v32@0:8@"NSArray"16@?<v@?>24
v16@0:8
@32@0:8@16@24
v20@0:8B16
@"NSObject<OS_dispatch_queue>"
@"NSXPCConnection"
@"CLLocationManagerRoutine"
@24@0:8@16
@"_CLLocationManagerRoutineProxy"
@44@0:8@16@24@32B40
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@48@0:8@16@24@32@40
@"NSData"
@"NSNumber"
r*16@0:8
@32@0:8@16^v24
@40@0:8@16^v24@?32
d16@0:8
v24@0:8d16
i16@0:8
v20@0:8i16
q16@0:8
v24@0:8q16
v24@0:8@?16
B40@0:8^v16Q24^{os_state_hints_s=I*II}32
^v16@0:8
{_CLLocationManagerStateTrackerState="distanceFilter"d"desiredAccuracy"d"updatingLocation"B"requestingLocation"B"requestingRanging"B"updatingRanging"B"updatingHeading"B"headingFilter"d"allowsLocationPrompts"B"allowsAlteredAccessoryLocations"B"dynamicAccuracyReductionEnabled"B"previousAuthorizationStatusValid"B"previousAuthorizationStatus"i"limitsPrecision"B"activityType"q"pausesLocationUpdatesAutomatically"i"paused"B"allowsBackgroundLocationUpdates"B"showsBackgroundLocationIndicator"B"allowsMapCorrection"B"batchingLocation"B"updatingVehicleSpeed"B"updatingVehicleHeading"B"matchInfoEnabled"B"groundAltitudeEnabled"B"fusionInfoEnabled"B"courtesyPromptNeeded"B"isAuthorizedForWidgetUpdates"B"trackRunInfoEnabled"B}
@64@0:8@16@24@32@40@48@56
^{__CLClient=}
@"<CLLocationManagerDelegate>"
@"CLLocationManager"
@"CLLocationManagerStateTracker"
{?="padding1"i"suitability"i"coordinate"{?="latitude"d"longitude"d}"horizontalAccuracy"d"altitude"d"verticalAccuracy"d"padding2"d"padding3"d"speed"d"speedAccuracy"d"course"d"courseAccuracy"d"timestamp"d"confidence"i"lifespan"d"type"i"rawCoordinate"{?="latitude"d"longitude"d}"rawCourse"d"floor"i"integrity"I"referenceFrame"i"rawReferenceFrame"i"signalEnvironmentType"i"ellipsoidalAltitude"d"fromSimulationController"B}
@"NSString"
@"CLTimer"
@"NSMutableSet"
@"CLSilo"
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@16@24
B20@0:8B16
@20@0:8B16
B32@0:8@16^@24
@80@0:8@16@24@32@40@48@56@64@72
@24@0:8^@16
i32@0:8@16@24
i24@0:8@16
v28@0:8B16@20
v28@0:8i16@20
v32@0:8i16i20@24
v32@0:8^i16@24
v72@0:8@16d24d32d40i48i52@56^@64
v52@0:8@16i24i28i32@36^@44
v40@0:8i16i20@24@32
v44@0:8B16@20@28^@36
v40@0:8@16@24^@32
v52@0:8{?=[8I]}16B48
B32@0:8@16@24
@32@0:8@16^@24
@56@0:8@16@24@32@40@48
@40@0:8@16@24@32
^{__CLClient=}16@0:8
v32@0:8d16d24
v28@0:8d16i24
v32@0:8@16d24
v32@0:8@16Q24
v28@0:8@16B24
@36@0:8@16B24@?28
v40@0:8@16@24@?32
v48@0:8@16@24@32@?40
v52@0:8d16i24{CLLocationCoordinate2D=dd}28@?44
v40@0:8@16q24@?32
v36@0:8@16B24@28
@32@0:8Q16@?24
v32@0:8Q16@?24
Q24@0:8Q16
@32@0:8d16d24
@44@0:8d16d24d32i40
v32@0:8@"NSArray"16@"NSNumber"24
v36@0:8@16i24@?28
v36@0:8@"NSArray"16i24@?<v@?@"NSArray"@"NSError">28
@"<CLLocationSmootherDelegate>"
@"CLLocationSmoother"
v40@0:8@16Q24@?32
@"_CLLocationSmootherProxy"
C16@0:8
f16@0:8
@28@0:8f16C20C24
v20@0:8f16
v20@0:8C16
@24@0:8I16S20
I16@0:8
v20@0:8I16
S16@0:8
v20@0:8S16
@48@0:8@16@24@32@?40
@48@0:8r*16@24@32@?40
{unique_ptr<CLGnssDisablementAssertionInternal, std::default_delete<CLGnssDisablementAssertionInternal>>="__ptr_"{__compressed_pair<CLGnssDisablementAssertionInternal *, std::default_delete<CLGnssDisablementAssertionInternal>>="__value_"^{CLGnssDisablementAssertionInternal}}}
@68@0:8q16{CLLocationCoordinate2D=dd}24d40i48i52B56@60
{CLLocationCoordinate2D="latitude"d"longitude"d}
@60@0:8q16{CLLocationCoordinate2D=dd}24d40i48i52B56
{CLLocationCoordinate2D=dd}16@0:8
v32@0:8{shared_ptr<CLConnectionMessage>=^{CLConnectionMessage}^{__shared_weak_count}}16
@"<CLFindMyAccessoryRangingManagerDelegate>"
{unique_ptr<CLConnectionClient, std::default_delete<CLConnectionClient>>="__ptr_"{__compressed_pair<CLConnectionClient *, std::default_delete<CLConnectionClient>>="__value_"^{CLConnectionClient}}}
@136@0:8{?=iddddd{?=dd}dd}16q96q104@112q120i128i132
{?=iddddd{?=dd}dd}16@0:8
{?="lapCount"i"currentLapStartTime"d"currentLapDurationInSeconds"d"currentLapDistanceInMeters"d"previousLapDurationInSeconds"d"previousLapDistanceInMeters"d"previousLapPositionAtCompletionInDegrees"{?="latitude"d"longitude"d}"currentTrackRunSessionDurationInSeconds"d"currentTrackRunSessionDistanceInMeters"d}
@24@0:8Q16
@48@0:8@16{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long=*Qb63b1}{__short=[23c][0C]b7b1}{__raw=[3Q]})}}}24
v32@0:8r*16@24
v24@0:8r*16
v32@0:8Q16@24
v28@0:8S16@20
v28@0:8C16@20
v28@0:8I16@20
v28@0:8@16I24
v32@0:8I16I20@24
v40@0:8@16@24@32
v52@0:8@16@24C32C36C40C44S48
v28@0:8@16S24
@"<CLFindMyAccessoryManagerDelegate>"
@"CLFindMyAccessoryFragmentAccumulator"
B40@0:8@16@24^@32
B24@0:8B16i20
{unique_ptr<CLRegulatoryConfigInternal, std::default_delete<CLRegulatoryConfigInternal>>="__ptr_"{__compressed_pair<CLRegulatoryConfigInternal *, std::default_delete<CLRegulatoryConfigInternal>>="__value_"^{CLRegulatoryConfigInternal}}}
{?=dddddfffBi{?=dd}diiB{?=ddBBidqddd}{?={?=iddddd{?=dd}dd}iQiiiidB}{?=dd}if{?=dd}ddiBddddddddBB{?=dd}diddddiddi}16@0:8
d24@0:8@16
d24@0:8d16
@104@0:8{?=ddddddddddi}16
{?="x"d"y"d"z"d"magneticHeading"d"trueHeading"d"accuracy"d"timestamp"d"temperature"d"magnitude"d"inclination"d"calibration"i}
@40@0:8d16d24d32
@84@0:8B16B20{?=dd}24d40i48d52d60d68d76
{?=dd}16@0:8
{?="latitude"d"longitude"d}
^{CLCallbackAssertionInternal=@@?^{CLConnectionClient}}
@44@0:8@16@24@32i40
@36@0:8@16@24i32
@3192@0:8{?=[512c][512c][512c]iBBBB(?={?=[512c]SSiB}{?={?=dd}ddiBB}{?=[101{?=dd}]iiB})}16
@48@0:8{CLLocationCoordinate2D=dd}16d32@40
@28@0:8@16i24
@52@0:8@16@24i32B36B40B44B48
@68@0:8@16@24i32B36B40B44B48@52@60
B32@0:8{CLLocationCoordinate2D=dd}16
@"NSUUID"
@48@0:8i16i20i24{CLClientServiceTypeMaskTuple=QQ}28B44
@32@0:8{CLClientServiceTypeMaskTuple=QQ}16
B24@0:8Q16
B20@0:8i16
@28@0:8@16I24
@"NSDate"
@56@0:8{CLLocationCoordinate2D=dd}16d32@40@48
@52@0:8{CLLocationCoordinate2D=dd}16d32@40B48
@84@0:8{CLLocationCoordinate2D=dd}16d32i40B44B48@52@60B68B72B76B80
@100@0:8{CLLocationCoordinate2D=dd}16d32i40B44B48@52@60B68B72B76B80@84@92
v44@0:8@16@24@32B40
@36@0:8@16S24@28
@40@0:8@16S24S28@32
@44@0:8@16S24S28@32B40
c16@0:8
@64@0:8@16@24@32q40d48q56
@72@0:8@16@24@32q40d48q56d64
@"CLBeaconInternal"
@32@0:8d16@24
{?=d}16@0:8
v64@0:8{?=d}16
{?=[4]}16@0:8
v144@0:8{?=[4]}16
{?=[6[6f]]}16@0:8
v160@0:8{?=[6[6f]]}16
@"_CLVLLocalizationDebugInfo"
{?="coordinate""horizontalAccuracy"d}
{?="columns"[4]}
{?="v"[6[6f]]}
v44@0:8@16@24C32@36
v44@0:8@16q24q32C40
v24@0:8@"NSURL"16
v24@0:8@"CLVisit"16
v24@0:8@"CLLocation"16
v32@0:8@"NSString"16@?<v@?@"NSDictionary">24
v44@0:8@"NSString"16@"NSString"24C32@"CLLocation"36
v44@0:8@"NSString"16q24q32C40
@28@0:8@16S24
@32@0:8@16S24S28
v32@0:8@"NSDictionary"16@?<v@?>24
@32@0:8{?=dd}16
{?="trueHeading"d"timestamp"d}
@48@0:8{?=dddd}16
{?="speed"d"timestamp"d"machContinuousTime"d"machAbsoluteTime"d}
@72@0:8{CLLocationCoordinate2D=dd}16d32@40@48@56@64
@64@0:8{CLLocationCoordinate2D=dd}16d32@40@48@56
@"_CLPlaceInference"
@"<GEOMapServiceTicket>"
v36@0:8@16B24@?28
v40@0:8@16d24@?32
v44@0:8@16d24B32@?36
v52@0:8@16@24d32B40@?44
@"CLGeocoderInternal"
@24@0:8r^{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16
v200@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@?192
v28@0:8B16@?20
v48@0:8d16@24@32@?40
v48@0:8B16i20@24@32@?40
v56@0:8{?=[8I]}16@?48
v48@0:8@16@24Q32@?40
v80@0:8@16d24d32d40i48i52@56@64@?72
v60@0:8@16i24i28i32@36@44@?52
v52@0:8B16@20@28@36@?44
v48@0:8@16@24B32B36@?40
v32@0:8I16B20@?24
v28@0:8I16@?20
v40@0:8@16i24i28@?32
v84@0:8B16@20@28{?=[8I]}36B68B72@?76
v28@0:8f16@?20
v28@0:8i16@?20
v44@0:8i16@20@28@?36
v64@0:8i16i20@24@32@40@48@?56
v44@0:8B16@20@28@?36
v64@0:8@16@24@32@40d48d56
v24@0:8@?<v@?@"NSError"@"NSArray">16
v24@0:8@?<v@?@"NSError"@"NSString">16
v24@0:8@?<v@?@"NSError"@"NSDictionary">16
v40@0:8@"NSString"16@"NSData"24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSError"@"NSData">24
v200@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@?<v@?@"NSError"@"NSString">192
v28@0:8B16@?<v@?@"NSError">20
v24@0:8@?<v@?@"NSError">16
v48@0:8@"NSString"16@"NSString"24@"NSData"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError"@"NSData">32
v48@0:8d16@"NSString"24@"NSString"32@?<v@?@"NSError"d>40
v48@0:8B16i20@"NSString"24@"NSString"32@?<v@?@"NSError">40
v24@0:8@?<v@?@"NSError"B>16
v24@0:8@?<v@?@"NSError"i>16
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError"i>32
v56@0:8{?=[8I]}16@?<v@?@"NSError"i>48
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError"B>32
v32@0:8@"NSString"16@?<v@?@"NSError">24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError"@"NSDictionary">32
v48@0:8@"NSString"16@"NSString"24Q32@?<v@?@"NSError"B>40
v80@0:8@"NSString"16d24d32d40i48i52@"NSString"56@"NSString"64@?<v@?@"NSError">72
v60@0:8@"NSString"16i24i28i32@"NSString"36@"NSString"44@?<v@?@"NSError">52
v52@0:8B16@"NSString"20@"NSString"28@"NSString"36@?<v@?@"NSError">44
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v48@0:8@"NSString"16@"NSString"24B32B36@?<v@?@"NSError"{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}>40
v48@0:8@"NSString"16@"NSString"24@"CLLocation"32@?<v@?@"NSError"{?=dddi}>40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v40@0:8@"NSData"16@"NSUUID"24@?<v@?@"NSError">32
v24@0:8@?<v@?@"NSError"@"NSData">16
v32@0:8I16B20@?<v@?@"NSError">24
v28@0:8I16@?<v@?@"NSError"B>20
v40@0:8@"NSData"16i24i28@?<v@?@"NSError">32
v32@0:8@"NSData"16@?<v@?@"NSError">24
v84@0:8B16@"NSString"20@"NSString"28{?=[8I]}36B68B72@?<v@?@"NSError">76
v28@0:8f16@?<v@?@"NSError"@"NSData">20
v28@0:8i16@?<v@?@"NSError">20
v44@0:8i16@"NSString"20@"NSString"28@?<v@?@"NSError">36
v64@0:8i16i20@"NSString"24@"NSString"32@"NSString"40@"NSString"48@?<v@?@"NSError">56
v44@0:8B16@"NSString"20@"NSString"28@?<v@?@"NSError">36
v24@0:8@?<v@?@"NSError"QQ>16
v40@0:8@"NSString"16@"NSString"24@"NSDictionary"32
v64@0:8@"NSDictionary"16@"NSDictionary"24@"NSArray"32@"NSArray"40d48d56
C40@0:8C16i20r^{__CFString=}24r^{__CFString=}32
C40@0:8^i16r^{__CFString=}24r^{__CFString=}32
v32@0:8r^{__CFString=}16r^{__CFString=}24
r^{__CFDictionary=}16@0:8
r^{__CFArray=}16@0:8
r^{__CFString=}16@0:8
v32@0:8r^{__CFString=}16r^v24
r^v24@0:8r^{__CFString=}16
C24@0:8*16
@20@0:8C16
@40@0:8@16@24^@32
d40@0:8d16@24@32
C56@0:8^i16{?=[8I]}24
C40@0:8*16r^{__CFString=}24r^{__CFString=}32
C24@0:8r^{__CFString=}16
r^{__CFDictionary=}32@0:8r^{__CFString=}16r^{__CFString=}24
B48@0:8@16@24Q32^@40
B80@0:8@16d24d32d40i48i52@56@64^@72
B60@0:8@16i24i28i32@36@44^@52
B52@0:8B16@20@28@36^@44
B48@0:8@16@24@32^@40
C48@0:8r^{__CFString=}16r^{__CFString=}24C32C36^{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}40
C48@0:8r^{__CFString=}16r^{__CFString=}24@32^{?=dddi}40
v36@0:8^{?=Qdddd}16i24i28i32
v24@0:8^{?=dii}16
C24@0:8B16I20
C28@0:8^B16I24
C28@0:8^{?=idd(?={?={?=fff}{?=fff}}{?=B[282c]})}16f24
C76@0:8C16r^{__CFString=}20r^{__CFString=}28{?=[8I]}36C68C72
C56@0:8i16i20r^{__CFString=}24r^{__CFString=}32r^{__CFString=}40r^{__CFString=}48
C20@0:8i16
C36@0:8i16r^{__CFString=}20r^{__CFString=}28
C36@0:8r^{__CFString=}16r^{__CFString=}24C32
C24@0:8^i16
C32@0:8^Q16^Q24
v24@0:8Q16
@"CLLocation"
@"NSDictionary"
@"CLRegion"
@"NSArray"
@"GEOMapItemStorage"
@"NSTimeZone"
@72@0:8@16@24@32@40Q48@56@64
v32@0:8@?16@24
@"CLPlacemarkInternal"
@32@0:8Q16d24
@32@0:8{CLLocationCoordinate2D=dd}16
d32@0:8{CLLocationCoordinate2D=dd}16
B40@0:8{CLLocationCoordinate2D=dd}16^d32
v24@0:8@"PBCodable"16
v24@0:8@?<v@?@"NSDictionary">16
@32@0:8r^v16Q24
^{?=ISSSSSSCC}
v28@0:8B16Q20
Q24@0:8@16
v36@0:8Q16B24@28
v36@0:8Q16i24@28
v48@0:8@16@24@32@40
@"<CLFindMyAccessoryFirmwareUpdateDelegate>"
@64@0:8d16d24d32d40d48Q56
@72@0:8Q16Q24@32@40d48@56@64
@"CLPlacemark"
@60@0:8{CLLocationCoordinate2D=dd}16d32@40@48i56
@96@0:8{CLLocationCoordinate2D=dd}16d32i40B44@48@56B64B68B72B76@80@88
@24@0:8i16i20
@56@0:8d16d24d32d40i48i52
@104@0:8d16d24d32d40d48d56d64d72d80d88d96
@156@0:8B16B20B24B28B32B36B40B44B48B52B56B60i64i68i72i76i80i84i88i92i96i100i104i108i112d116d124d132d140d148
@72@0:8@16@24@32@40@48@56@64
@"CLRacingRouteVariables"
@"CLRacingRouteState"
@"CLRouteBoundingBox"
@36@0:8@16I24S28S32
@192@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16
@200@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@192
@720@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16{?=dddddfffBi{?=dd}diiB{?=ddBBidqddd}{?={?=iddddd{?=dd}dd}iQiiiidB}{?=dd}if{?=dd}ddiBddddddddBB{?=dd}diddddiddi}192
@728@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16{?=dddddfffBi{?=dd}diiB{?=ddBBidqddd}{?={?=iddddd{?=dd}dd}iQiiiidB}{?=dd}if{?=dd}ddiBddddddddBB{?=dd}diddddiddi}192@720
@216@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@192d200@208
@292@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@192d200@208@216@224d232d240d248d256i264d268d276@284
@300@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@192d200@208@216@224d232d240d248d256i264d268d276@284@292
@"CLLocationMatchInfo"
@"_CLLocationGroundAltitude"
@"_CLLocationFusionInfo"
@"CLLocationTrackRunInfo"
@"CLLocationGnssOdometerInfo"
@24@0:8q16
@24@0:8B16B20
@108@0:8{CLLocationCoordinate2D=dd}16d32d40d48d56d64d72d80@88i96@100
@64@0:8{CLLocationCoordinate2D=dd}16d32d40d48@56
@80@0:8{CLLocationCoordinate2D=dd}16d32d40d48d56d64@72
@96@0:8{CLLocationCoordinate2D=dd}16d32d40d48d56d64d72d80@88
@104@0:8{CLLocationCoordinate2D=dd}16d32d40d48d56d64d72d80@88@96
{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@0:8
@24@0:8d16
@256@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@192d200@208@216@224d232d240@248
@208@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}16@192d200
@28@0:8q16B24
@"CLEmergencyLocationUsabilityCriteria"
v40@0:8@16q24@32
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
@32@0:8r*16@24
^{CLAssertionInternal=@^{CLConnectionClient}}
@32@0:8Q16@24
v32@0:8Q16C24S28
@"NSMutableData"
@60@0:8d16d24d32d40d48i56
Q40@0:8Q16Q24Q32
{CLRacingRoute="fDistanceCalculator"{CLDistanceCalc="fM"d"fN"d"fRefLatRads"d"fRefLatDegs"d"fCosRefLat"d}"fSignalEnvironmentType"i"fWorkoutActivity"i"fRoutePoints"@"NSMutableArray""fRouteBoundingBox"{RouteBoundingBox="fMinLatitude_deg"d"fMaxLatitude_deg"d"fMinLongitude_deg"d"fMaxLongitude_deg"d"fRows"i"fColumns"i}"fRouteMatrixIndexVec"{vector<std::vector<std::pair<int, int>>, std::allocator<std::vector<std::pair<int, int>>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<std::pair<int, int>> *, std::allocator<std::vector<std::pair<int, int>>>>="__value_"^v}}"fRaceStartPointOnCurrentRoute"{RacingRouteState="fLatitude_deg"d"fLongitude_deg"d"fAltitude_m"d"fOdometer_m"d"fTimestamp_s"d"fTimeSinceStartOfRace_s"d"fOffRouteTraveledTime_s"d"fDistanceSinceStartOfRace_m"d"fOffRouteTraveledDistance_m"d"fAveragePace_s_per_m"d"fDistanceAlongReferenceRoute_m"d}"fRaceStartPointOnReferenceRoute"{RacingRouteState="fLatitude_deg"d"fLongitude_deg"d"fAltitude_m"d"fOdometer_m"d"fTimestamp_s"d"fTimeSinceStartOfRace_s"d"fOffRouteTraveledTime_s"d"fDistanceSinceStartOfRace_m"d"fOffRouteTraveledDistance_m"d"fAveragePace_s_per_m"d"fDistanceAlongReferenceRoute_m"d}"fLastOnRouteDataPoint"{RacingRouteState="fLatitude_deg"d"fLongitude_deg"d"fAltitude_m"d"fOdometer_m"d"fTimestamp_s"d"fTimeSinceStartOfRace_s"d"fOffRouteTraveledTime_s"d"fDistanceSinceStartOfRace_m"d"fOffRouteTraveledDistance_m"d"fAveragePace_s_per_m"d"fDistanceAlongReferenceRoute_m"d}"fLastProjectedDataPoint"{RacingRouteState="fLatitude_deg"d"fLongitude_deg"d"fAltitude_m"d"fOdometer_m"d"fTimestamp_s"d"fTimeSinceStartOfRace_s"d"fOffRouteTraveledTime_s"d"fDistanceSinceStartOfRace_m"d"fOffRouteTraveledDistance_m"d"fAveragePace_s_per_m"d"fDistanceAlongReferenceRoute_m"d}"fRoutePointsArrayInitialized"B"fRecoveryMode"B"fRaceStartPointDetected"B"fRaceEndPointDetected"B"fUserIsOffRoute"B"fProjectedOnNearestPoint"B"fRaceSessionExpired"B"fRollingBufferReachedEndOfReferenceRoute"B"fRouteConfigurationSuccessful"B"fRacingRouteAnalyticsSent"B"fPrematureRaceEndDetected"B"fReferenceRouteTotalLengthDetermined"B"fLocationPointIsOutsideOfAcceptedRange"B"fLocationPointNotMatched"B"fRoutePointsBufferSize"i"fNumberOfRoutePointsToAdd"i"fOffRouteGraceDuration_s"i"fMatchedPointCounter"i"fReferenceRouteDataPointCounter"i"fCurrentRouteDataPointCounter"i"fOffRouteDataPointCounter"i"fInutileDataPointCounter"i"fRollingBufferUpdateCounter"i"fLastMatchedPointIndex"i"fLastMatchedPointIndexOnReferenceRoute"i"fRollingBufferStartIndexOnReferenceRoute"i"fMatrixCellIndexForLastMatchedPoint"i"fRaceStartLineProximityIndex"i"fReferenceRouteTotalLength_m"d"fTimestampOfLastMatchedPointOnReferenceRoute_s"d"fRegisteredTimeAtThresholdDistance_s"d"fEndOfRaceTimeThreshold_s"d"fNearestNeighborMaximumAcceptedDistance_m"d}
@56@0:8@16@24@32@40B48B52
@"_CLRangingPeer"
@52@0:8@16@24@32@40B48
B48@0:8Q16r^f24r^d32r^i40
B72@0:8Q16r^f24Q32r*40r^s48r^f56r^s64
B56@0:8Q16r^i24r^f32r^f40r^f48
^d16@0:8
v24@0:8r^d16
^f16@0:8
^i16@0:8
*16@0:8
^s16@0:8
[6d]
[3[3d]]
[3d]
@48@0:8d16d24d32d40
@40@0:8@16d24d32
@"_CLLSLLocationCoordinate"
@"_CLLSLMapRoadSegment"
{?=[3]}16@0:8
v112@0:8{?=[3]}16
16@0:8
v48@0:816
@"_CLLSLLocation"
@"_CLLSLHeadingSupplInfo"
{?="columns"[3]}
{?=QCCCCCCCCCCC}16@0:8
v40@0:8{?=QCCCCCCCCCCC}16
v80@0:8{?=[4]}16
v64@0:8{?=[3]}16
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
{CGSize="width"d"height"d}
{?="stateLengthInBytes"Q"stateLength"C"orientationOffset"C"orientationLength"C"gyroBiasOffset"C"gyroBiasLength"C"velocityOffset"C"velocityLength"C"accelBiasOffset"C"accelBiasLength"C"positionOffset"C"positionLength"C}
{?="covarianceSizeInBytes"Q"covarianceSize"C"orientationCovOffset"C"orientationDof"C"gyroBiasCovOffset"C"gyroBiasDof"C"velocityCovOffset"C"velocityDof"C"accelBiasCovOffset"C"accelBiasDof"C"positionCovOffset"C"positionDof"C}
@"NSMutableDictionary"
@"_CLVLLocalizationMaps488Details"
