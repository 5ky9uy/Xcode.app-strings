@(#)PROGRAM:akd  PROJECT:AuthKit-1
AKFidoInterface
NSObject
AKFidoDaemonService
AKAuthorizationIconManager
AKFollowUpManager
AKAppleIDPushHelperServiceDelegate
AKPrivateEmailStoreManager
AKAppleIDUserInformationResponse
AKDeviceListResponse
AKOwnerProxyClient
AKClient
AKAppleIDCodeGenerator
AKGrandSlamResponseHandler
SiWA
AKPiggybackingRequestProvider
NSSecureCoding
NSCoding
AKAuthenticationServerResponse
AKPiggybackAcceptingController
KCJoiningAcceptSecretDelegate
AKDServerUIContext
AKAuthorizationStoreManager
AKURLRequestProviderImpl
AKURLRequestProvider
AKAuthModeRequestProvider
AKADIProxy
AKAccountRecoveryController
AKSurrogateAuthenticationIDGenerator
AKSatoriController
AKWalrusDaemonProtocol
AKWalrusDaemonService
AKExponentialDispatchingAlgorithm
AKDispatchingAlgorithm
AKConstantDispatchingAlgorithm
AKFollowUpRequestProvider
AKSecurityUpgradeEligibilityRequestProvider
AKKeychainItem
AKSRPAuthenticationContextHelper
AKCAAuthPromptReporter
AKDispatchingCalculation
AKAuthenticationSurrogateModel
AKAuthenticationSurrogateManager
AKInheritanceRequestProvider
AKAuthorizationStoreMigrator
AKSQLiteMigration
AKCATiburonRequestAttemptReporter
_AKExpiringCacheValue
AKExpiringCache
AKNativeAnisetteService
AKAnisetteServiceProtocol
AKCustodianRequestProvider
AKURLBagRequestProvider
AKCATiburonInputUIReporter
AKKeychainItemDescriptor
AKCATiburonRequestReporter
AKPostInstallService
AKPCSAuthController
AKCAReporter
AKDeviceListRequestProvider
AKProximityController
AKProximityEngineController
AKAuthorizationSession
AKAuthorizationSessionManager
_AKMessage
AKCommandMessage
AKReplyMessage
AKPeerIDSAnisetteService
IDSServiceDelegate
AKPrivateEmailStoreMigrator
AKLoginPresenter
NSXPCListenerDelegate
AKLoginPresenterHostInterfaceProtocol
AKPushMessage
PCSAuth
AKPrivateEmailRequestProvider
AKFollowUpManagerFactory
AKUserNotificationManager
AKSRPContext
AKCarrierBundlePhoneCertificate
AKCarrierBundleUtilities
AKDispatchableURLRequest
AKDispatchableRequest
AKWebSessionPCSKeyProvider
AKWalrusContext
AKAuthenticationContext
NSCopying
AKAppleIDAuthenticationService
AKPiggybackRequestingControllerDelegate
AKDServerUIDelegate
AKAppleIDAuthenticationDaemonProtocol
AKAuthorizationEndorserRapportDiscovery
AKAuthorizationEndorserRapportClientDelegate
AKPiggybackRequestingController
KCJoiningRequestSecretDelegate
AKPrivateEmailPresenter
SBSRemoteAlertHandleObserver
AKPrivateEmailPresenterHostProtocol
AKFollowUpControllerServiceProviderImpl
AKFollowUpControllerServiceProvider
AKAuthenticationSettingsLauncher
AKPrivateEmailDaemonService
AKPrivateEmailDaemonProtocol
AKFuture
PCSWebAccess
AKAnisetteProvisioningService
AKAnisetteProvisioningDaemonProtocol
AppleIDSigning
AKAppleIDSigningDaemonProtocol
AKUserInfoController
AKBundleInformation
AKDeviceListController
AKProximityPiggybackEngine
AKProximityEngine
AKProximityPiggybackRequestingEngine
CBPeripheralManagerDelegate
AKProximityPiggybackAcceptingEngine
CBCentralManagerDelegate
CBPeripheralDelegate
AKPrivateEmailInformation
AKPrivateEmailServiceController
AKFidoDaemonServerHandler
AKAuthorizationPresenter
AKAuthorizationPresenterHostProtocol
AKServiceControllerImpl
AKServiceController
AKAuthenticationContextSanitizer
AKSRPService
AKAuthorizationCredentialStateController
AKPushMessageNotificationPresenter
AKPCSAuthPushHandler
AKGrandSlamRequestProvider
AKAuthorizationEndorserRapportClient
AKAuthorizationDaemonServiceDelegate
AKAuthenticationUILiaison
AKAuthenticationSurrogateManagerDelegate
AKAppleIDCheckInHelperService
AKStoreUtils
AKAuthorizationNotificationHandler
AKAdaptiveServiceInterface
AKAuthorizationStateBroadcastHandler
AKApplicationAuthorizationController
AKCASatoriReporter
AKCAAuthEventReporter
AKSQLiteExecutor
AKAuthorizationConnectionManager
AKCustodianDaemonService
AKCustodianDaemonProtocol
AKInheritanceInterface
AKInheritanceDaemonService
AKSQLiteHelper
AKURLBagService
NSURLSessionDelegate
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
AKURLBagDictionaryProvider
AKCAPiggybackReporter
AKAuthorizationDaemonService
AKAuthorizationDaemonProtocol
AKSRPAuthorizationContextHelper
AKUserNotification
AKDServerUIController
AKClientAnisetteService
AKStoreMigrator
AKDaemonConnectionManager
AKRequestDispatcher
_AKScheduledRequest
AKAuthorizationRevokeUpgradeController
AKTrafficClearenceRequest
AKAuthenticationTrafficController
AKAuthorizationListUpdateService
AKAppleIDAuthSupportProxyImpl
AKAppleIDAuthSupportProxy
AKKeychainManager
AKAppleIDPushHelperService
APSConnectionDelegate
AKMasterKeyVerifierRequestProvider
AKSQLiteQuery
AKFidoRequestProvider
AKSRPRequest
AKPiggybackReplyWaiter
AKPiggybackController
AKGlobalConfigService
AKLivenessRequestProvider
AKWalrusRequestProvider
NSXMLParserDelegate
AKCATiburonAuthorizationUIReporter
AKApplicationInformationController
AKSRPContextHelper
AKAuthorizationRapportClient
AKTTRController
AKTokenUpgradeRequestProvider
AKEducationEnterpriseController
DSIDForAccount:
APSEnvironment
MLBSerialNumber
IDMSEnvironmentFromBag:
T@"AKToken",R,N
JSONObjectWithData:options:error:
T@"NSDictionary",R,N,V_userInfo
ROMAddress
T@"NSNumber",&,N,V_capturedCode
T@"<AKAuthHandler>",R,N,V_authenticationHandler
T@"NSString",R,C,N,V_bundleName
T@"<AKAuthorizationDaemonServiceDelegate>",W,N,V_delegate
T@"NSString",R,N,V_primaryEmail
T@"<AKDispatchableRequest>",&,N,V_request
TB,N,V_resolved
T@"<AKPiggybackRequestingControllerDelegate>",W,N,V_delegate
T@"<AKProximityEngineController>",R,W,N
_absintheSigner
T@"<AKSQLiteMigration>",&,N,V_migrator
_accountManager
T@"AAFService",&,N,V_fidoDaemonService
_activeSessions
T@"AAFService",&,N,V_walrusDaemonService
_approvedCodeSigningIdentifiers
T@"AKAbsintheSigner",&,N,V_absintheSigner
_authorizationResponseValidator
T@"AKAppleIDAuthenticationContext",&,N,V_authContext
_bodyForTrustedContactsDataSync
T@"AKAppleIDAuthenticationContext",&,N,V_initiatingContext
_canBeCustodian
T@"AKAppleIDAuthenticationContext",&,N,V_surrogateContext
_circleDelegate
T@"AKAppleIDServerResourceLoadDelegate",R,N
_client
T@"AKAuthenticationServerResponse",&,N,V_initiatingServerResponse
_clock_timebase
T@"AKAuthenticationSurrogateManager",&,N,V_surrogateManager
_correlateContext:withAuthMode:
T@"AKAuthorizationContext",&,N,V_authContext
_deliverPushPayload:completion:
T@"AKAuthorizationEndorserRapportClient",&,N,V_authorizationEndorser
_endorseeClient
T@"AKAuthorizationEndorserRapportDiscovery",&,N,V_endorserRapportDiscovery
_engine
T@"AKAuthorizationTVServicePresenter",&,N,V_companionServicePresenter
_fetchIconBlock
T@"AKCASatoriReporter",&,N,V_analyticsReport
_generateSecret
T@"AKCircleRequestPayload",&,N,V_payload
_imageURLString
T@"AKClient",&,N,V_client
_itemAccessible
T@"AKClient",R,N,V_client
_lockScreenBody
T@"AKCredentialRequestContext",&,N,V_context
_phoneAsAppleID
T@"AKCredentialRequestContext",&,N,V_originalRequestContext
_processCredentialStateChanges:
T@"AKDevice",&,N
_publicAPSToken
T@"AKDevice",C,N,V_companionDevice
_removeAllExpiredPCSCredentials
T@"AKDeviceListRequestContext",&,N,V_deviceRequestContext
_schedulerQueue
T@"AKInheritanceContext",&,N,V_context
_secondaryTitle
T@"AKMasterToken",R,N
_securityDomain
T@"AKProximityController",&,N,V_proximityController
_server
T@"AKRequestDispatcher",&,N,V_requestDispatcher
_shouldClearRequest:withClient:
T@"AKSRPContextHelper",R,N,V_contextHelper
_slotID
T@"AKSurrogateAuthenticationIDGenerator",&,N,V_surrogateIDGenerator
_syncPrivateEmailsForAltDSID:client:userInformation:completion:
T@"AKToken",R,N,V_custodianSetupToken
_tvAppIconScale
T@"AKToken",R,N,V_shortLivedToken
_valueCondition
T@"AKWalrusContext",&,N,V_walrusContext
aaf_toHexString
T@"KCJoiningAcceptSession",&,N,V_acceptSession
account
T@"NSArray",C,N,V_credentials
ak_addCustodianSyncActionHeader
T@"NSArray",R,C,N,V_allAccountNames
ak_mapNullable:
T@"NSArray",R,N,V_aliases
aliases
T@"NSCondition",&,N,V_valueCondition
allHeaderFields
T@"NSData",&,N,V_value
altDSID
T@"NSData",C,N,V_authKitBodyData
appName
T@"NSData",R,N,V_federatedAuthRequestPayload
appleID
T@"NSDate",&,N,V_requestTime
authKitAccount:
T@"NSDate",R,N,V_dispatchDate
authorizationRequestFinishedWithAuthorization:error:completion:
T@"NSDictionary",&,N,V_additionalHeaders
bodyKey
T@"NSDictionary",&,N,V_info
cancelDataTask:
T@"NSDictionary",C,N,V_additionalHeaders
cliMode
T@"NSDictionary",C,N,VauthKitBody
command
T@"NSDictionary",R,C,N,V_deviceMap
containsObject:
T@"NSDictionary",R,N
context
T@"NSDictionary",R,N,V_additionalInfo
currentAuthorizationListVersion
T@"NSDictionary",R,N,V_configurationInfo
deviceDiscovery
T@"NSDictionary",R,N,V_eventDetails
didShowAppleID:
T@"NSDictionary",R,N,V_serverContext
dispatchingInfo
T@"NSDictionary",R,N,V_serviceTokens
forwardingEmail
T@"NSError",&,N,V_escapeHatchError
informativeText
T@"NSMutableArray",&,N,V_internalWrapper
initWithDelegate:queue:options:
T@"NSNumber",&,N,V_tvAppIconScale
initWithString:
T@"NSNumber",R,C,N,V_longitude
integratedCircuitCardIdentifier
T@"NSNumber",R,N,V_ageOfMajority
isBuddyFinished
T@"NSNumber",R,N,V_canBeCustodian
isEqualToArray:
T@"NSNumber",R,N,V_canHaveCustodian
isInternalBuild
T@"NSNumber",R,N,V_custodianLastModified
isMultiUserMode
T@"NSNumber",R,N,V_hasMDM
isRetryRequired
T@"NSNumber",R,N,V_privateAttestationEnabled
isWalrusEnabled
T@"NSNumber",R,N,V_timestamp
lastKnownLocale
T@"NSObject",C,N
lowercaseString
T@"NSObject<OS_dispatch_queue>",R,N
maxWait
T@"NSString",&,N,V_altDSID
needsNewAppleID
T@"NSString",&,N,V_initiatingPassword
T@"NSString",&,N,V_phoneCertificate
numberWithLong:
T@"NSString",C,N
options
T@"NSString",C,N,S_setProxiedAppName:,V_proxiedAppName
parser:validationErrorOccurred:
T@"NSString",C,N,V_account
payload
T@"NSString",C,N,V_actionButtonText
performTransactionBlockAndWait:
T@"NSString",C,N,V_alertBody
presentLoginAlertForContext:withError:title:message:completion:
T@"NSString",C,N,V_altDSID
primaryClientID
T@"NSString",C,N,V_bodyKey
reachableEmails
T@"NSString",C,N,V_decodedRecoveryIdentityToken
remoteAlertHandleDidDeactivate:
T@"NSString",C,N,V_event
requestBodyType
T@"NSString",C,N,V_label
requestedScopes
T@"NSString",C,N,V_lockScreenBody
T@"NSString",C,N,V_messageId
selectedPrivateEmailForAccount:
T@"NSString",C,N,V_password
serverMachineId
T@"NSString",C,N,V_queryString
serviceProvider
T@"NSString",C,N,V_refreshUrl
serviceWithDefaultShellEndpoint
T@"NSString",C,N,V_secondaryBodyCDP
T@"NSString",C,N,V_secondaryTitleCDP
setAccountName:
T@"NSString",C,N,V_securityDomain
setAppleIDAuth:
T@"NSString",C,N,V_service
setAuthKitBody:
T@"NSString",C,N,V_subTitleKey
setBagProvider:
T@"NSString",C,N,V_username
setCalculation:
T@"NSString",R,C,N,V_alternateButtonTitle
setCanHaveCustodian:forAccount:
T@"NSString",R,C,N,V_bundleDescription
setCredentials:
T@"NSString",R,C,N,V_defaultButtonTitle
setDeviceClass:
T@"NSString",R,C,N,V_deviceColor
setIsEphemeral:
T@"NSString",R,C,N,V_idmsData
setPrivateEmailServiceListener:
T@"NSString",R,C,N,V_privateEmailListVersion
setRequestTime:
T@"NSString",R,C,N,V_secondaryTitle
setRoutingInfo:
T@"NSString",R,C,N,V_urlBagKey
setShouldPromptForPasswordOnly:
T@"NSString",R,N
setValuesForKeysWithDictionary:
T@"NSString",R,N,V_altDSID
setWithObjects:
T@"NSString",R,N,V_appleIDCountryCode
shortLivedToken
T@"NSString",R,N,V_beneficiaryWrappedKey
startForTesting
T@"NSString",R,N,V_errorMessageTitle
stopAdvertising
T@"NSString",R,N,V_firstName
surrogateClient
T@"NSString",R,N,V_lastName
tableInfoForTable:withExecutor:
T@"NSString",R,N,V_nativeActionURLKey
unitTestContext
T@"NSString",R,N,V_secondaryActionMessage
T@"NSString",R,N,V_serverInfo
validateCodeURL
T@"NSString",R,N,V_urlSwitchingData
.cxx_destruct
IDMSEnvironment
DSID
T@"<AKFollowUpControllerServiceProvider>",&,N,V_serviceProvider
IsFollowUpItemNotificationForced:
T@"NSCondition",&,N,V_condition
PCSAuthContextForWebSessionIdentifier:serviceName:completion:
T@"NSError",C,N
T#,R
T@"NSNumber",R,N,V_ttlInMinutes
T@"<AKAuthenticationContext>",&,N,V_authContext
T@"NSString",R,N,V_errorMessage
T@"<AKAuthorizationEndorserRapportClientDelegate>",W,N,V_delegate
T@"NSString",R,N,V_privateEmail
T@"<AKFollowUpProvider>",&,N,V_followUpProvider
TB,R,N,V_isURLSwitchingRequired
T@"<AKProximityEngine>",R,N,V_engine
UUIDWithNSUUID:
T@"<AKProximityEngineController>",R,W,N,V_controller
_acceptSessionForPayload:error:
T@"<AKURLRequestProvider>",R,N,V_urlRequestProvider
_activateEngine
T@"AAFService",&,N,V_inheritanceDaemonService
_additionalInfo
T@"ACAccount",&,N,V_authKitAccount
_authKitAccount
T@"AKAccountManager",&,N
_bindingFailure
T@"AKAppleIDAuthenticationContext",&,N,V_context
_bundle
T@"AKAppleIDAuthenticationContext",&,N,V_pendingBGContext
_centralManager
T@"AKAppleIDAuthenticationContext",R,N
_clearanceQueue
T@"AKAttestationSigner",&,N,V_attestationSigner
_clientBundleID
T@"AKAuthenticationServerResponse",R,N,V_initialAuthResponse
_completionsByInternalMessageID
T@"AKAuthenticationSurrogateManager",R,N
_dataBlocksLock
T@"AKAuthorizationDaemonService",&,N,V_authorizationService
_device
T@"AKAuthorizationEndorserRapportClient",&,N,V_authorizationEndorserRapportClient
_endorseeDevice
T@"AKAuthorizationRapportClient",&,N,V_rapportClient
_exitForSIGTERM
T@"AKAuthorizationUserResponse",&,N,V_userResponse
_fetchTVAppIcon
T@"AKCarrierBundleUtilities",R
_hasMDM
T@"AKClient",&,N
_isRapportLogin
T@"AKClient",&,N,V_surrogateClient
_latestIDMSData
T@"AKConfiguration",&,N,V_configuration
_pendingReplies
T@"AKCredentialRequestContext",&,N,V_credentialRequestContext
_presenterQueue
T@"AKCustodianContext",&,N,V_custodianContext
_proxiedAppName
T@"AKDevice",C,N
_remoteListener
T@"AKDevice",C,N,V_proxiedDevice
_requestSession
T@"AKDispatchingCalculation",&,N,V_calculation
_schedulerTimer
T@"AKKeychainItemDescriptor",&,N,V_descriptor
_secondaryToken
T@"AKMasterToken",R,N,V_masterToken
_sendNotification:withUserInfo:
T@"AKRequestDispatcher",&,N
_serviceControllerWithProvider:
T@"AKSQLiteExecutor",&,N,V_executor
_shouldFallBack
T@"AKServerRequestConfiguration",&,N,V_requestConfiguration
_surrogateQueue
T@"AKToken",R,N,V_continuationToken
_synchronizable
T@"AKToken",R,N,V_passwordResetToken
_upgradeContext
T@"AKUserInformation",C,N,V_userInformationRepresentation
_webSessionUUID
T@"APSIncomingMessage",R,N,V_message
accessKeyString
T@"KCJoiningRequestSecretSession",&,N,V_requestSession
actions
T@"NSArray",R,C,N,V_addedPrivateEmails
ak_map:
T@"NSArray",R,C,N,V_removedPrivateEmails
ak_redactedCopy
T@"NSArray",R,N,V_federatedAuthURLWhiteList
allAccountNames
T@"NSData",&,N,V_tvAppIconData
allKeys
T@"NSData",C,N
analyticsReport
T@"NSData",R,N,V_anisetteResyncData
appProvidedData
T@"NSDate",&,N,V_beginDate
applicationStateForApplication:
T@"NSDate",R
authKitBodyData
T@"NSDictionary",&,N
base64EncodedStringWithOptions:
T@"NSDictionary",&,N,V_authResults
bundleForClass:
T@"NSDictionary",C,N
cdpAccountIsICDPEnabledForDSID:
T@"NSDictionary",C,N,V_appProvidedData
clientErrorCode
T@"NSDictionary",R,C,N
companionDevice
T@"NSDictionary",R,C,N,V_otherInfo
containsString:
T@"NSDictionary",R,N,V_acceptedTermsInfo
coverGlassColor
T@"NSDictionary",R,N,V_alertInfo
dealloc
T@"NSDictionary",R,N,V_configurationParameters
didRespondToMessage:withResult:
T@"NSDictionary",R,N,V_federatedAuthSamlRequest
dispatchCounter
T@"NSDictionary",R,N,V_serverProvidedData
fetchAllPrivateEmailsWithError:
T@"NSDictionary",R,N,V_walrusWebAccessInfo
hasPublicAccess
T@"NSError",&,N,V_escapeHatchTrigger
initWithClient:
T@"NSMutableDictionary",&,N,V_inProgressSurrogates
initWithEngine:
T@"NSNumber",R,C,N,V_latitude
initialMessage:
T@"NSNumber",R,N,V_acceptedDeviceTermsVersion
internalWrapper
T@"NSNumber",R,N,V_canBeBeneficiary
isEligibleToArmDeviceForPCSAuth
T@"NSNumber",R,N,V_canHaveBeneficiary
isFirstPartyApp
T@"NSNumber",R,N,V_custodianEnabled
isLegacyStudent
T@"NSNumber",R,N,V_dsid
isProxy
T@"NSNumber",R,N,V_isNotificationEmailAvailable
isValid
T@"NSNumber",R,N,V_serverExperimentalFeatures
T@"NSNumber",R,N,V_webAccessEnabled
lockScreenTitle
T@"NSObject<OS_dispatch_queue>",&,N,V_surrogateQueue
machAbsoluteTimeToTimeInterval:
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
message
T@"NSString",&,N,V_clientBundleID
nextCalculation
T@"NSString",&,N,V_pendingClientBundle
numberWithBool:
T@"NSString",&,N,V_urlSwitchData
openTransaction
T@"NSString",C,N,S_setProxiedAppName:
otherButtonText
T@"NSString",C,N,V_accessGroup
passwordRequest
T@"NSString",C,N,V_accountRecoveryMasterKey
performSilentTTRFor:completion:
T@"NSString",C,N,V_activeCode
peripheral:didDiscoverServices:
T@"NSString",C,N,V_alertTitle
presentServerProvidedUIForContext:withConfiguration:completion:
T@"NSString",C,N,V_appProvidedContext
protocolVersion
T@"NSString",C,N,V_dataCenterIdentifier
release
T@"NSString",C,N,V_decodedRecoveryPET
request
T@"NSString",C,N,V_identifier
requestWithURL:
T@"NSString",C,N,V_localizedAppsNameList
responseMessage
T@"NSString",C,N,V_lockScreenTitle
secondaryFooter
T@"NSString",C,N,V_otherButtonText
selectedRequest
T@"NSString",C,N,V_pushToken
service
T@"NSString",C,N,V_recoveryToken
serviceSpaceDidBecomeAvailable:
T@"NSString",C,N,V_reqInterceptToken
session
T@"NSString",C,N,V_secondaryFooter
setAccessGroup:
T@"NSString",C,N,V_secondaryToken
setAppBundleID:
T@"NSString",C,N,V_server
setAuthContext:
T@"NSString",C,N,V_sessionID
setAuthResults:
T@"NSString",C,N,V_titleKey
setBindHandler:
T@"NSString",R,C
setCanBeBeneficiary:forAccount:
T@"NSString",R,C,N,V_appName
setComponentID:
T@"NSString",R,C,N,V_bundleIdentifier
setCustodianEnabled:forAccount:
T@"NSString",R,C,N,V_deviceClass
setDeviceColor:
T@"NSString",R,C,N,V_deviceEnclosureColor
setModifiedName
T@"NSString",R,C,N,V_previousMessageId
setQueryString:
T@"NSString",R,C,N,V_secondaryBody
setRequestType:
T@"NSString",R,C,N,V_serverMachineId
setServiceType:
T@"NSString",R,C,N,V_webSessionUUID
setSubTitleKey:
T@"NSString",R,N,V_algorithmIdentifier
setWebAccessEnabled:forAccount:
T@"NSString",R,N,V_appleID
setXpcEndpoint:
T@"NSString",R,N,V_beneficiaryIdentifier
shouldUpdateAuthModeForAccount:
T@"NSString",R,N,V_custodianSessionID
startup
T@"NSString",R,N,V_federatedAuthURL
stringRepresentationForService:
T@"NSString",R,N,V_imageURLString
syncAnisetteURL
T@"NSString",R,N,V_managedOrganizationName
timeout
T@"NSString",R,N,V_notificationEmail
uppercaseString
T@"NSString",R,N,V_secondaryActionURLKey
userInformation
T@"NSString",R,N,V_transactionId
verifiedPrimaryEmailForAccount:
T@"NSURL",C,N,V_requestURL
T@"NSURL",R,N,V_url
T@"NSUUID",&,N,V_surrogateRegistrationID
T@"NSUUID",R,C,N,V_piggybackingRequestorPresenceSID
T@"NSUUID",R,N,V_presenceSID
T@"NSXPCConnection",R,N
T@"NSXPCListener",&,N,V_anisetteServiceListener
T@"NSXPCListener",&,N,V_authServiceListener
T@"NSXPCListener",&,N,V_authorizationServiceListener
T@"NSXPCListener",&,N,V_custodianServiceListener
T@"NSXPCListener",&,N,V_privateEmailServiceListener
T@"NSXPCListener",&,N,V_remoteListener
T@"RPAppSignInService",&,N,V_advertisingService
T@"RPCompanionLinkClient",&,N,V_deviceDiscovery
T@"RPCompanionLinkClient",&,N,V_endorseeClient
T@"RPCompanionLinkClient",&,N,V_linkClient
T@"RPCompanionLinkDevice",&,N,V_endorseeDevice
T@"SBSRemoteAlertHandle",&,N,V_remoteAlertHandle
T@,R
T@?,C,N,V_authorizationCompletion
T@?,C,N,V_authorizationResponseValidator
T@?,C,N,V_bindHandler
T@?,C,N,V_clearanceHandler
T@?,C,N,V_completionHandler
T@?,C,N,V_didDeactivateBlock
T@?,C,N,V_fetchIconBlock
T@?,C,N,V_invalidationHandler
T@?,C,N,V_matchHandler
T@?,C,N,V_pendingClientUIWork
T@?,C,N,V_presentationCompletion
T@?,C,N,V_privateEmailCompletion
T@?,C,N,V_rowHandler
T@?,C,N,V_surrogateCompletion
TB,N
TB,N,GisInvisible
TB,N,GisSynchronizable
TB,N,GshouldUseDataProtection
TB,N,S_setMasterKeyAsSecondFactor:,V__masterKeyAsSecondFactor
TB,N,V__denyVirtualInterfaces
TB,N,V_authenticatedRequest
TB,N,V_bindingFailure
TB,N,V_biometricAuth
TB,N,V_cliMode
TB,N,V_hasCheckedIn
TB,N,V_hasEndorserAuthorizing
TB,N,V_ignoreInternalTokens
TB,N,V_isSecondCall
TB,N,V_passcodeAuth
TB,N,V_retryAuth
TB,N,V_shouldCacheResource
TB,N,V_shouldFallBack
TB,N,V_shouldPreventDismissAfterUserSkip
TB,N,V_shouldSyncWithServer
TB,N,V_signWithIdentityToken
TB,N,V_unitTestContext
TB,N,V_walrusEnabled
TB,N,V_walrusWebAccessEnabled
TB,R
TB,R,N
TB,R,N,GisActivated
TB,R,N,GisContextSecretValidForSRP
TB,R,N,GisFidoAuthRequired,V_fidoAuthRequired
TB,R,N,GisSecondaryActionURLGSEndpoint,V_secondaryActionURLGSEndpoint
TB,R,N,V_allowPiggybacking
TB,R,N,V_allowPiggybackingPresence
TB,R,N,V_authorizationUsed
TB,R,N,V_invalidListVersionSupplied
TB,R,N,V_isAnisetteReprovisioningRequired
TB,R,N,V_isAnisetteResyncRequired
TB,R,N,V_isAuditLogin
TB,R,N,V_isDemoAccount
TB,R,N,V_isFirstPartyApp
TB,R,N,V_isManagedAppleID
TB,R,N,V_isPasscodeResetRequired
TB,R,N,V_isRetryRequired
TB,R,N,V_isSecondaryActionRequired
TB,R,N,V_isSenior
TB,R,N,V_isServerUIRequired
TB,R,N,V_isSilent
TB,R,N,V_isUnderAgeOfMajority
TB,R,N,V_phoneAsAppleID
TB,R,N,V_piggybackingAcceptorSupportsPresence
TB,R,N,V_piggybackingIDMSFallbackApproved
TB,R,N,V_piggybackingRequestorUsesPresence
TB,R,N,V_primaryEmailVetted
TB,R,N,V_requireSigningHeaders
TB,R,N,V_requiresPasscode
TB,R,N,V_shouldProxyAnisetteAction
TQ,N
TQ,N,V_authenticationMode
TQ,N,V_authenticationType
TQ,N,V_command
TQ,N,V_expectedResponseType
TQ,N,V_itemAccessible
TQ,N,V_itemClass
TQ,R
TQ,R,N
TQ,R,N,V_appleIDSecurityLevel
TQ,R,N,V_authMode
TQ,R,N,V_bundleType
TQ,R,N,V_dispatchCounter
TQ,R,N,V_managedOrganizationType
TQ,R,N,V_maxQueueSize
T^{__AppleIDAuthSupportData=},R,N,V_underlyingContext
T^{sqlite3=},R,N
Td,N,V_initialHandshakeTimeout
Td,N,V_maxWait
Td,N,V_timeout
Td,R,N,V_base
Td,R,N,V_delay
Ti,R,N,V_protocolVersion
Tq,N
Tq,N,V_serviceType
Tq,N,V_slotID
Tq,R,N,V_errorCode
Tq,R,N,V_piggybackingPresenceMode
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:willCacheResponse:completionHandler:
URLSession:didBecomeInvalidWithError:
URLSession:didCreateTask:
URLSession:didReceiveChallenge:completionHandler:
URLSession:task:didCompleteWithError:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:needNewBodyStream:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSessionDidFinishEventsForBackgroundURLSession:
URLWithString:
UTF8String
UUID
UUIDString
XPCInterface
_AKAuthContextWithUsername:password:
_AKIDSCertificateFetchQueue
__denyVirtualInterfaces
__masterKeyAsSecondFactor
_acceptSession
_acceptedDeviceTermsVersion
_acceptedTermsInfo
_acceptingControllerForTransactionId:
_acceptingControllers
_accessGroup
_accessibleWithKeychainAccessible:
_account
_accountForAppleIDAuthContext:
_accountForContinuationWithContext:completion:
_accountForContinuationWithContext:error:
_accountRecoveryMasterKey
_actionButtonText
_activeAPSEnvironment
_activeCode
_activePairedTinkerDevice
_activeSessionForContext:client:
_addAccountNameParameterToURL:withContext:
_addCachedPasswordInContext:
_addExperimentalFeaturesInfoToClientProvidedData:
_addTemporaryDeveloperTeam:
_addedPrivateEmails
_addingAdditionalHeaders:forURLRequest:
_additionalHeaders
_additionalInfoChangedForAccount:userInformation:
_advertisingService
_ageOfMajority
_akPCSAuthPushHandler
_alertBody
_alertInfo
_alertTitle
_algorithmIdentifier
_aliases
_alignedInsertionCandidates:withExistingItems:
_allAccountNames
_allowPiggybacking
_allowPiggybackingPresence
_altDSID
_alternateButtonTitle
_analyticsReport
_anisetteActionTargetForServerResponse:andContext:
_anisetteResyncData
_anisetteServiceListener
_annotateTransformationOfProperty:fromValue:toValue:
_appIDForIOS
_appIDForMacOS
_appName
_appProvidedContext
_appProvidedData
_appleCareNotificationID
_appleID
_appleIDCountryCode
_appleIDSecurityLevel
_apsConnection
_apsTokenSemaphore
_armDeviceWithMessage:account:notificationResult:
_arrayValueForEntitlement:
_attachAdditionalHeaders:toContextHelper:
_attemptBiometricOrPasscodeAuthWithContext:completion:
_attemptIndex
_attemptInteractiveAuthWithContext:completion:
_attemptPasswordlessAuthAfterBiometricOrPasscodeValidationWithContext:promptType:completion:
_attemptPasswordlessAuthOptionsWithContext:completion:
_attemptPasswordlessAuthWithContext:completion:
_attestationSigner
_auditToken
_authContext
_authKitAccountForPayload:
_authKitAccountFromContext:
_authKitBodyData
_authMode
_authProxy
_authResults
_authServiceListener
_authSessionManager
_authSessionTimeoutInterval
_authTrafficController
_authUILiaison
_authenticateWithContext:completion:
_authenticatedRequest
_authenticatingApps
_authenticatingDaemons
_authenticationContextForRevokingUpgrade
_authenticationHandler
_authenticationMode
_authenticationParameters:
_authenticationParametersForUsername:altDSID:context:
_authenticationType
_authorizationCompletion
_authorizationController
_authorizationEndorser
_authorizationEndorserRapportClient
_authorizationPropertiesChangedForAccount:userInformation:
_authorizationRealUserLock
_authorizationService
_authorizationServiceListener
_authorizationUsed
_bagFetchQueue
_bagURLForAltDSID:shouldFallBack:
_base
_beginAppleIDCreationFlowWithContext:completion:
_beginChangePasswordFlowWithAccount:context:completion:
_beginDate
_beginObservingLanguageChangeNotfication
_beginObservingSharingModePolicyChangeNotfication
_beginServerDrivenSecondaryActionWithURLKey:context:initialAuthResponse:completion:
_beginiForgotFlowWithContext:completion:
_beneficiaryIdentifier
_beneficiaryWrappedKey
_bindHandler
_bindStatement:withParameter:atPosition:
_biometricAuth
_bodyForAddAndRevokeCustodianRequest
_bodyForBeneficiaryAliasEndpoint
_bodyForBeneficiaryEndpoint
_bodyForCustodianUpdateRecoveryKeyRequest
_bodyForEmbargoEndFeedback
_bodyForFinalizeCustodianRequest
_bodyForPrivateEmailRegisterEndpoint
_bodyForRecoveryCircle
_bodyKey
_boolValueForEntitlement:
_broadcastCredentialStateChange:forApplicationWithClientID:
_broadcastCredentialStateChange:forApplicationWithClientID:withHandlerBundleID:
_broadcastEmailChangeNotification
_buildSchemaVersion1
_bundleDescription
_bundleID
_bundleIdentifier
_bundleName
_bundleNonPluginKit
_bundleType
_cacheFetchedPrivateEmail:keyAlreadyHashed:error:completion:
_cacheObject
_cacheSecondFactor:codeCaptureError:
_cachedBags
_cachedConfig
_cachedURLBagForAltDSID:
_calculation
_callCompletionBlockWithAuthorization:error:
_callCompletionBlockWithEmail:error:
_callCompletionWithAuthorization:error:
_callCompletionWithResults:password:additionalData:error:
_canBeBeneficiary
_canHaveBeneficiary
_canHaveCustodian
_canProceedWithArmingForMessage:account:
_capabilityForUIDisplay
_capturedCode
_capturedCodeString
_carrierUtilitiesQueue
_changePasswordAndAuthenticateWithContext:completion:
_checkForProximityIfNeededWithCircleStep:completion:
_checkForProximityWithCompletion:
_checkFreshnessAndVerifyWithPassword:serverResponse:additionalData:secondaryActionError:context:newServerResponse:username:completion:
_checkInQueue
_checkKeybagUnlockState
_checkScreenUnlockStateFromNotificationDictionary:
_circleContext
_circleRequestProcessingQueue
_classWithKeychainClass:
_clearCaptureState
_clearMutuallyExclusiveProperties:
_clearSessionState
_clearSurrogate:
_clearanceHandler
_cliMode
_clientAnisetteService
_clientAuthenticatedExternallyWithPassword
_clientBundleIDForContext:client:
_clientForContext:
_clientProxy
_clientShouldAuthenticateExternally
_clientUIWorkQueue
_codeSigningIdentifier
_command
_companionDevice
_companionServicePresenter
_completeAuthenticationWithServiceTokens:tokenFetchError:altDSID:authenticationResults:context:completion:
_completeAuthorizationWithServerResponse:userResponse:client:completion:
_completionHandler
_condition
_configURLRequestWithContext:
_configuration
_configurationInfo
_configurationParameters
_configureLinkClientWithService:companionLinkClient:requestContext:
_connection
_connectionWithProtocol:forBundleID:
_connectionsByBundleID
_constructRequestProviderForClient:altDSID:
_context
_contextHelper
_continuationRequestIdentifier
_continuationToken
_continueSRPContractWithAuthURL:context:completion:
_controller
_counter
_createAndPerformRequest:completion:
_createNewAppleIDAndAuthenticateWithContext:completion:
_createProvisioningEndURLRequestWithCPIM:
_createProvisioningStartURLRequestWithCompletion
_createSyncURLRequestWithMID:SRM:routingInfo:
_createV1Database
_createV2Database
_createV3Database
_credentialRequest
_credentialRequestContext
_credentialStateDidChange:forApplicationWithClientID:
_credentialStateForRequestContext:
_credentials
_currentDataBaseError
_currentReplyContext
_custodianContext
_custodianEnabled
_custodianLastModified
_custodianServiceListener
_custodianSessionID
_custodianSetupToken
_dataBlockForKey:
_dataBlocks
_dataCenterIdentifier
_database
_databasePath
_databaseQueue
_deactivate
_decodeBase64String:
_decodedRecoveryIdentityToken
_decodedRecoveryPET
_decorateLoadDelegate:withContext:
_decrementQueueSize
_defaultButtonTitle
_delay
_delegate
_deliverPushPayload:attachDuplexSession:completion:
_demoModeEnabled
_denyVirtualInterfaces
_description
_descriptor
_determineUIAndPerformRequest:completion:
_deviceClass
_deviceColor
_deviceDiscovery
_deviceEnclosureColor
_deviceMap
_deviceRequestContext
_didDeactivateBlock
_discoveredPeripheral:withServiceID:
_dismissUI
_dispatchCounter
_dispatchDate
_dispatchingAlgorithmForInfo:
_dispatchingAlgorithmsByInfo
_dispatchingAlgorithmsByInfoLock
_doURLSwitchWithServerResponse:context:completion:
_dsid
_emailKey
_endorserRapportDiscovery
_endpoint
_engineQueue
_engineTimeoutSource
_ensureDesiredAPSEnvironmentIsInUse
_errorCode
_errorFromResponseDictionary:
_errorFromServerResponse:
_errorFromServerResponseParameters:authenticationError:
_errorMessage
_errorMessageTitle
_escapeHatchError
_escapeHatchTrigger
_event
_eventDetails
_eventName
_executeAllowingReauthentication:completion:
_executeNextScheduledRequest
_executeQuery:
_executeRequestWithContext:urlBagKey:shouldSignWithIdentityToken:completion:
_executeScheduledRequest:
_executeURLRequest:withSession:completion:
_executor
_exemptedBundleIDsFromMandatoryUISecurityUpgrade
_expectedResponseType
_expiringCache
_expiryDate
_externalAuthToken
_externalLocalAuthData
_extractWebSessionAuthorizationFromResponse:
_factory
_federatedAuthRequestPayload
_federatedAuthSamlRequest
_federatedAuthURL
_federatedAuthURLWhiteList
_federatedPayloadFromInfo:
_fetchAllAuthorizedClientIDs
_fetchAnisetteDataAndProvisionIfNecessary:device:completion:
_fetchApplicationsForTeamID:
_fetchAssociatedDomainsWithCompletionHandler:
_fetchCredentialsForAssociatedDomains:completion:
_fetchDeveloperTeamWithClientID:
_fetchDeveloperTeamWithTeamID:
_fetchIDSCertificateWithCompletionHandler:
_fetchPhoneInformationWithAdditionalInfo:error:
_fetchSafariCredentialsWithCompletion:
_fetchSurrogateForClient:
_fetchSurrogateWithRegistrationID:
_fetchTokensForServiceIDs:withUsername:altDSID:masterToken:context:completion:
_fetchUserInformationForAltDSID:client:dataCenter:completion:
_fetchUserInformationWithContext:client:dataCenter:completion:
_fidoAuthRequired
_fidoDaemonService
_fidoHandler
_finalizeStatement:error:
_finishProcessingPushPayload:withReplyContext:completion:
_firstName
_followUpProvider
_formattedValueForPhoneNumber:countryCode:
_fullName
_generateLoginCodeForAccount:withIncomingMessage:
_getConfigsFromCache:context:completion:
_getCredentialStateWithStateRequest:completion:
_getPresentationContextForRequestContext:client:completion:
_grabLockAssertion
_handleAuthorizationDidFinishWithRequest:options:responseHandler:
_handleBasicLoginUICompletionWithUsername:password:context:additionalData:collectionError:completion:
_handleCreateNewAppleIDError:withContext:andCompletion:
_handleCurrentDeviceTrustStatusChangedWithPayload:
_handleDatabaseFailureError:
_handleDidStartServerAuthorizationWithEvent:options:
_handleError:logMessage:withUIWorkBlock:
_handleError:withServerResponse:context:andCompletion:
_handleFinishFidoResponse:data:context:recoveryToken:error:completion:
_handleFoundDevice:
_handleGrandSlamFidoAuthorizationResponse:context:recoveryToken:error:completion:
_handleGrandslamResponse:data:error:serverResponse:completion:
_handleIdentityProviderResponsePayload:completion:
_handleIncomingCommandMessage:completion:
_handleInvalidMasterTokenWithSubErrorCode:
_handleMissingUsernameOrPasswordForContext:password:username:completion:
_handlePasswordlessAuthResults:context:error:completion:
_handleRecoverCredentialsError:withContext:andCompletion:
_handleResult:forAccount:
_handleRevokedApplicationsForVersion:
_handleSecondFactorUICompletionWithCode:error:idmsData:initialAuthResponse:context:completion:
_handleSecondFactorUICompletionWithCode:error:idmsData:piggybacking:initialAuthResponse:context:completion:
_handleStartAuthorizationWithResponse:
_handleStartAuthorizingWithRequest:options:responseHandler:
_handleStartFidoAuthWithContext:fidoContext:serverResponse:completion:
_handleStartFidoResponse:data:context:recoveryToken:error:completion:
_handleSuccessfulVerificationForContext:withResults:serverResponse:completion:
_handleVerificationCompletionForUsername:password:serverResponse:didShowServerUI:continuationData:error:context:completion:
_handleVerificationError:forContext:completion:
_handleVerificationError:withContext:completion:
_harvestCommonFieldsFromBody:
_harvestCommonFieldsFromResponse:
_harvestManagedAppleIDInfoFromDictionary:
_hasActiveAppAuths
_hasActiveDaemonAuths
_hasApprovedSigningIdentifier
_hasCheckedIn
_hasEndorserAuthorizing
_hasPrimaryiCloudAccountForPayload:
_hasSessionTimedOutForRequest:
_hasValuesInMap:
_hashKeyIfNecessary:
_helperServiceForDevice:
_iconData
_iconName
_iconScale
_iconSize
_identifier
_identityAuthorizationPayload
_identityToken
_idmsData
_ignoreInternalTokens
_inProgressSurrogates
_incrementAttemptsForContext:error:
_incrementCounter
_incrementQueueSize
_info
_inheritanceDaemonService
_initTime
_initialAuthResponse
_initialHandshakeTimeout
_initiateAuthorizationWithRequestContext:completion:
_initiatePiggybackingWithCleanSession:withCompletion:
_initiateRapportAuthorizationWithRequestContext:completion:
_initiatingContext
_initiatingPassword
_initiatingPayload
_initiatingServerResponse
_insertScheduledRequest:
_internalCache
_internalCredentialStateForUserState:error:
_internalMessageIDsByTransportID
_internalWrapper
_interpolatedReason
_invalidListVersionSupplied
_invalidate
_invalidateEngine
_invalidateScheduledRequest:withErrorCode:
_invalidationHandler
_invisible
_isAnisetteReprovisioningRequired
_isAnisetteResyncRequired
_isAppleBinary
_isAuditLogin
_isBackgroundClient:eligibleForForegroundAuthenticationWithContext:
_isClientWaitingForSurrogateAuth:
_isDemoAccount
_isDeviceScreenUnlockNotification:
_isDeviceTrustedForRequest:
_isEligibleForUpgradeFromPassword
_isEngineActivated
_isFetchingIconWithRequestContext:
_isFirstPartyApp
_isFirstPartyLogin
_isForcedEligibleForForegroundAuthentication
_isFullUICapabilityRequiredFor2FA
_isInteractiveAuthRequiredForContext:
_isManagedAppleID
_isNotificationEmailAvailable
_isOnInternalBuild
_isPCSAccessForContext:
_isPasscodeChangeNotification:
_isPasscodeResetRequired
_isPasswordPromptNecessaryForCommand:
_isPrimaryAccount:
_isPrimaryAccountAltDSID:
_isProxyingForApp
_isRetryRequired
_isSecondCall
_isSecondaryActionRequired
_isSenior
_isServerUIRequired
_isSilent
_isSilentAppTransfer
_isSubscriptionLogin
_isTouchIDRequiredForGrandSlamServiceTokenWithID:
_isURLSwitchingRequired
_isUnderAgeOfMajority
_isWebLogin
_itemClass
_keepAlive
_keepLoginAliveWithContext:error:andCompletion:
_keyProvider
_keychainAccessibleWithAccessible:
_keychainClassWithClass:
_keychainItemForContext:error:
_keychainManager
_keychainQueue
_label
_lastName
_lastPayload
_lastUpdated
_latestPushMessage
_latitude
_launchAppleIDSettingsForContext:withCheckinID:
_linkClient
_localUserHasEmptyPassword
_localizedAppsNameList
_locationNameWithLatitude:longitude:completion:
_lock
_lockScreenTitle
_loginAlertForAccount:latitude:longitude:message:resolvedBody:
_loginAlertOptionsForAccount:latitude:longitude:message:resolvedBody:
_loginCodeNotificationID
_loginNotificationOptionsWithContext:isSilent:defaultButtonTitle:alternateButtonTitle:
_longitude
_managedAppleIDInfoChangedForAccount:userInformation:
_managedOrganizationName
_managedOrganizationType
_masterKey
_masterKeyAsSecondFactor
_masterToken
_matchHandler
_maxQueueSize
_maxWait
_message
_messageHandlingQueue
_messageId
_messageSendingService
_messageSupportsAlerts:
_mhq_handleIncomingReplyMessage:
_migrateToSchemaVersion2
_migrateToSchemaVersion3
_migrateToSchemaVersion4
_migrateToSchemaVersion5
_migrator
_monitorXPCEvents
_name
_nativeActionURLKey
_nativeAnisetteService
_newZStringWithString:
_nextScheduledRequest
_notificationCategories
_notificationCenter
_notificationContent:
_notificationDictionaryForClient:context:needFullUI:
_notificationEmail
_notificationResultFromButtonPressed:
_notificationsByPushID
_notifyCredentialStateChange:forApplicationWithClientID:
_notifyDelegatesOfMessageActivation:result:
_notifyDelegatesOfMessageActivation:result:payload:
_notifyOfTimeout
_notifyServerOfTeardownWithContext:completion:
_numberFormatter
_optionalValueWithString:
_optionsForCreatingUserNotificationWithTitle:message:defaultButton:alternateButton:serviceType:
_orderedDispatchingInfoKeys
_originalRequestContext
_otherButtonText
_otherInfo
_pairedDeviceAnisetteService
_parseDevicesFromResponseBody:
_parseFailedServerResponse:withError:context:completion:
_passcodeAuth
_password
_passwordResetBackupToken
_passwordResetToken
_payload
_pcsAuthPushHandler
_pendingBGContext
_pendingClientBundle
_pendingClientUIWork
_pendingNotification
_pendingTrafficRequests
_performAuthenticationWithContext:completion:
_performBlockWithClient:context:requireFullUICapability:allowRedirectToSettings:block:
_performCommandForMessage:forAccount:
_performFidoStartAuthActionWithContext:serverResponse:completion:
_performGrandslamEndpointActionWithContext:serverResponse:completion:
_performHeartbeatCheckInIfNecessaryWithToken:completion:
_performInteractiveAuthWithContext:completion:
_performPasswordlessSRPAuthWithAccount:context:completion:
_performPasswordlessSRPAuthWithContext:completion:
_performPostInstallWithCompletion:
_performRegisterRequestForAltDSID:key:completion:
_performRemoteCommand:argument:completion:
_performRequest:completion:
_performRequestForContext:completion:
_performRequestWithContext:responseHandler:
_performRequestWithURL:context:error:
_performSRPAuthenticationWithContext:completion:
_performSRPAuthorizationForUserResponse:client:completion:
_performSafeSRPAuthenticationWithContext:completion:
_performSecondaryActionWithServerResponse:context:completion:
_performSilentRequest:withCompletion:
_performSilentServiceTokenAuthWithContext:completion:
_performTokenUpgradeWithContext:completion:
_performUIOutOfProcess
_peripheralManager
_permitedProcessNamesToProxyInitialAuthWhiteList
_permitedProcessNamesToProxyWhiteList
_permittedProcessNamesForInteractiveAuthOnLimitedContext
_persistGrandSlamServiceTokens:forAltDSID:DSID:appleID:forContext:error:
_persistGrandSlamServiceTokensHelper:forAltDSID:DSID:appleID:appleIDAuthAccount:error:
_phoneCertificate
_piggybackReporter
_piggybackingAcceptorSupportsPresence
_piggybackingIDMSFallbackApproved
_piggybackingPresenceMode
_piggybackingRequestQueue
_piggybackingRequestorPresenceSID
_piggybackingRequestorUsesPresence
_postCheckInDataToIDMSWithAccount:pushToken:event:completion:
_prepareEngine
_prepareRequestContext:forCredentialState:
_prepareStatementForQuery:error:
_presenceSID
_presentUI
_presentUIWithControllerClassName:extraOptions:presentationServiceCompletion:
_presentationCompletion
_previousMessageId
_primaryEmail
_primaryEmailVetted
_printStatement:
_privateAttestationEnabled
_privateEmail
_privateEmailCompletion
_privateEmailListVersion
_privateEmailServiceListener
_processCachedUserInputWithContext:completion:
_processCodeEntryErrorWithContext:completion:
_processDictionary:addedPrivateEmails:removedPrivateEmails:
_processFetchCompletionForAltDSID:items:fetchError:completion:
_processHandshakeWithContext:handshakeReply:andHandshakeError:withCompletion:
_processHideMyEmailForAltDSID:userInfo:response:
_processIncomingUserInformationForAltDSID:userInformation:
_processMessageWithDelegates:
_processPendingCompletionsForPayload:
_processPiggybackPayload:
_processProximityDetection:withReplyContext:forPushPayload:
_processUserResponse:client:completion:
_processValidationCodeSuccessResponse:authResponse:results:completion:
_processingTimeOut
_promptForAuthenticationPasswordForAccount:completion:
_promptForChangePasswordForAccount:
_promptForSecretWithContext:completion:
_properties
_protocolVersion
_provideServiceTokensIfRequiredForContext:authenticationResults:serverResponse:completion:
_provider
_proxiedAppBundleID
_proxiedAssociatedDomains
_proxiedClientAppID
_proxiedClientAppName
_proxiedClientBundleID
_proxiedClientServiceID
_proxiedClientTeamID
_proxiedDevice
_proximityController
_proximityDetected
_proximityFailed
_pushCommandsPostingCFUserNotification
_pushDelegates
_pushServiceQueue
_pushToken
_pushTopics
_queryDelegatesForSuppressAction:
_queryString
_queue
_queueSize
_rapportClient
_reachability
_realUserVerificationResults
_reauthHandler
_reauthenticateAndExecuteWithCompletion:
_reauthenticateWithCompletion:
_receiveResponseFromNotification:handler:
_recoverCredentialsAndAuthenticateWithContext:completion:
_recoveryContextFromServerInfo:error:
_recoveryToken
_refreshApplicationInformationForAltDSID:
_refreshAuthModeForContext:completion:
_refreshAuthModeIfNecessaryForContext:completion:
_refreshFollowUpsWithIdmsInfo:context:authHandler:completion:
_refreshFollowUpsWithIdmsInfo:context:completion:
_refreshLocalAccountAndUpdateContext:completion:
_refreshUrl
_releaseAssertion
_relinquishmentHandler
_remoteAlertHandle
_removeAcceptingControllerForTransaction:
_removeConnectionWithProtocol:forBundleID:
_removeCredentialWithDescriptor:
_removeDataBlockForKey:
_removedPrivateEmails
_repairAppleIDWithContext:completion:
_replyToCommandMessageWithInternalID:didSucceed:returnData:error:completion:
_reportData
_reprovisionAnisetteWithServerResponse:context:completion:
_reqInterceptToken
_request
_requestBodyForUpgradeRevokeContext:
_requestConfiguration
_requestDispatcher
_requestProvider
_requestTime
_requestURL
_requestUserAuthorizationForContext:completion:
_requestingController
_requirePassword
_requireSigningHeaders
_requiresHSA2Repair
_requiresPasscode
_resolved
_resyncAnisetteWithServerResponse:context:completion:
_retryAuth
_retryCount
_revokeDeviceTrust
_rowHandler
_safePerformSRPWithUserResponse:client:completion:
_safeTTL:
_sanitizeContext:
_sanitizedCopy
_scheduleNextRequest
_scheduledRequests
_scheduledRequestsLock
_schedulerLoop
_schedulerTimerDidFire:
_schemaVersion
_secondaryActionMessage
_secondaryActionURLGSEndpoint
_secondaryActionURLKey
_secondaryBody
_secondaryBodyCDP
_secondaryFooter
_secondaryTitleCDP
_sendAuthorizationDidFinishRequestWithAuthorization:
_sendAuthorizationDidFinishRequestWithError:
_sendDeviceCancelledReplyWithContext:
_sendDidStartServerAuthorizationEvent
_sendDidTapNotificationMessage
_sendStartAuthorizationRequest
_sendTrustedDeviceListChangeNotificationWithPayload:
_serverContext
_serverExperimentalFeatures
_serverHandler
_serverInfo
_serverMachineId
_serverProvidedData
_service
_serviceIDForRequestContext:
_serviceProvider
_serviceTokens
_serviceType
_sessionID
_setAuthKitAccount:inUse:forService:completion:
_setCheckInAllowedToValue:forAccount:
_setConnection:forBundleID:
_setCurrentSharingMode
_setDataBlock:forKey:
_setDatabaseVersionToVersion:
_setDispatchingAlgorithm:forInfo:
_setEnabledTopics:
_setHeartbeatToken:
_setIdentityToken:
_setLastEmailListRequestDate:
_setMasterKeyAsSecondFactor:
_setMessage:
_setPassword:
_setPasswordEquivalentToken:
_setProxiedAppName:
_setRequestURL
_settingsLauncher
_settingsPaneIDForContext:
_settingsSurrogationInProgress
_setupBeneficiaryAliasWithInheritanceContext:completion:
_setupLoginChoicesForPresentationContext:
_setupServices
_shortLivedToken
_shouldAllowPCSKeyAccessForContext:
_shouldAutomaticallyMigrate
_shouldCacheResource
_shouldClearCKForFailedMagicAuthWithError:authContextHelper:
_shouldContinueAuthenticatingForUsername:password:serverResponse:didShowServerUI:continuationData:error:context:completion:
_shouldContinueProcessing:
_shouldEarlyReturnRequest:forCredentialState:
_shouldForcePrivateEmail
_shouldForceUI
_shouldPreventDismissAfterUserSkip
_shouldProcessPushMessage:withAccount:
_shouldProxyAnisetteAction
_shouldRefreshAccountAndUpdateContext
_shouldSendGrandSlamTokensForRemoteUI
_shouldSendIdentityTokenForRemoteUI
_shouldSkipAccountUpdatesForAuthWithContext:
_shouldSkipAuthorizationUI
_shouldSkipBiometrics
_shouldSkipInitialReachabilityCheck
_shouldStartSatoriVerificationForRequestContext:
_shouldSyncWithServer
_shouldUpdateDatabaseToListVersion:
_shouldUseProxiedClientBundleIDForSRP
_showAlertForLoginCodeValidationError:context:completion:
_showAlertForLoginError:context:completion:
_showAlertForVerificationError:context:completion:
_showBiometricOrPasscodeAuthWithContext:completion:
_showCode:body:title:footer:completion:
_showContinueUsingUIWithContext:completion:
_showIdentityProviderUIFromResponse:completion:
_showServerUIWithContext:completion:
_showServerUIWithURLRequest:context:completion:
_showServerUIWithURLRequest:context:initialAuthResponse:completion:
_signRequestWithProvisioningHeaders:forUrlKey:
_signWithBAAHeadersIfNeededForKey:withRequest:
_signWithIdentityToken
_srpAuthContextHelperWithContext:
_startChangePasswordFlowForAccount:
_startFetchingIconForBundleID:size:scale:
_startListeningForMessagesFromPairedDevice
_startMonitoringPushEvents
_startPasswordResetFlowForAccount:
_startProximityControllerIfNeededWithPushPayload:
_startProximityControllerWithPresenceSID:
_stepThroughRowsWithQuery:statement:
_stopObservingLanguageChangeNotification
_stopObservingSharingModePolicyChangeNotfication
_stopProximityController
_stopProximityControllerIfNeededWithPushPayload:
_stopWaitingForCheckInWithContext:andError:
_storeConsentedApplication:teamID:listVersion:
_storeDeveloperTeam:listVersion:
_storeManager
_strictlyUnarchivedObjectOfClasses:fromData:error:
_stringByAppendingBlameIfNecessary:withContext:client:
_stringValueForEntitlement:
_subTitleKey
_surrogateCheckinIDLock
_surrogateClient
_surrogateCompletion
_surrogateContext
_surrogateIDGenerator
_surrogateManager
_surrogateRegistrationID
_synchronizeLocalFollowUpsWithServerPayload:altDSID:error:
_teardownPayloadWithPushMessage:isArmed:
_telephonyClient
_timeout
_timestamp
_titleAndMessageForError:context:completion:
_titleKey
_tq_invokeTrafficRequest:
_trafficQueue
_transaction
_transactionId
_transformationAnnotations
_trustedContactOperationsByIDFromArray:
_trustedContactPropertiesChangedForAccount:userInformation:
_ttlInMinutes
_tvAppIconData
_underlyingContext
_unitTestContext
_unsafe_InvalidateEngine
_unsafe_addKeychainItem:shouldAttemptUpdate:error:
_unsafe_anisetteDataForDSID:withError:
_unsafe_anisetteDataWithRoutingInfoForDSID:withError:
_unsafe_cancelEngineTimeoutSource
_unsafe_closeDatabase
_unsafe_createDataBase
_unsafe_deleteKeychainItemWithDescriptor:error:
_unsafe_fetchKeychainItemWithDescriptor:error:
_unsafe_fetchKeychainItemsWithDescriptor:error:
_unsafe_openDatabase:
_unsafe_presentMessage:forAccount:
_unsafe_processPushMessage:
_unsafe_provisionAnisetteWithCompletion:
_unsafe_resumeEngineTimeoutSource
_unsafe_showLoginNotificationWithCode:incomingMessage:piggy:
_unsafe_showNotificationForMessage:account:responseHandler:
_unsafe_tearDownNotificationWithID:
_unsafe_teardownCurrentLoginNotification
_unsafe_updateCacheWithData:
_unsafe_updateCacheWithData:forAltDSID:
_unsafe_updateKeychainItemWithDescriptor:newItem:error:
_unsafe_wipeDatabase:
_updateAccount:withUserInformationResponse:modifyAliases:
_updateAccountInformationWithResultsDictionary:
_updateAltDSIDAndUsername:
_updateAuthKitAccount:withServerResponse:context:error:
_updateContext:serviceName:
_updateContext:withPassword:forAppleID:
_updateCredentialForSavedAIDAAccount:withNewTokens:
_updateDSIDWithRawValue:
_updateDispatchingAlgorithmForInfo:withResponse:
_updatePrivateEmailsWithInformation:
_updateRestrictedSharingMode
_updateURLBagIfNecessaryFromCache:altDSID:error:
_updateURLBagIfNecessaryFromCache:altDSID:urlSwitchData:shouldFallBack:completion:
_updateWithValuesFromContext:
_upgradeSecurityLevelWithContext:completion:
_upgradeToSchemaVersion2
_upgradeToSchemaVersion3
_upgradeToSchemaVersion4
_url
_urlAtKey:
_urlBagKey
_urlRequestProvider
_urlSession
_urlSwitchData
_urlSwitchingData
_useDataProtection
_userInfo
_userInfoChangeNotificationDictionaryForAltDSID:userInformation:
_userInformationRepresentation
_userResponse
_username
_validateAndProcessUserResponse:client:completion:
_validateAppleIDAuthContext:
_validateAppleIDAuthContext:forAuthMode:
_validateAuthContext:
_validateDataExists:
_validateDataForVerifyEnableWalrusAllowedRequest:error:
_validateDataForWalrusStateUpdateToServerRequest:error:
_validateErrorCode:withKey:
_validateFederatedAppleIDAuthContext:
_validateJSONResponseData:error:
_validateLoginCode:forAltDSID:masterToken:idmsData:authContext:completion:
_validateMachineID:
_validateNativeAppleIDAuthContext:
_validateResponseBodyFormat
_validateSilentPreferredFederatedAppleIDAuthContext:
_value
_verificationAttempts
_verificationFailed
_verificationQueue
_verifyAccountTrustWithRequestContext:completion:
_verifyClientInformationForRequest:completion:
_verifyEntitlements
_verifyEntitlementsForRequest:
_verifyUserID:
_verifyUsername:password:context:completion:
_waitForNotificationResponse:withIdentifier:responseHandler:
_waitForSurrogateCheckInWithContext:withUIWorkBlock:client:andCheckInID:
_walrusContext
_walrusDaemonService
_walrusEnabled
_walrusWebAccessEnabled
_walrusWebAccessInfo
_webAccessEnabled
_webSessionKeyProvider
aaData
absintheSignatureForData:completion:
absintheSigner
absoluteString
ac_secureCodingError
acceptSession
acceptedDeviceTermsVersion
acceptedTermsInfo
accessGroup
accessKey
accountAliases
accountCode
accountManager
accountName
accountNamesForAltDSID:completion:
accountPropertyForKey:
accountRecoveryMasterKey
ackWithPayload:account:
ackWithPayload:account:completion:
actionButtonText
actionWithIdentifier:title:options:
activate
activateWithCompletion:
activateWithContext:
activateWithError:
activated
activeAnisetteDSIDWithEnvironment:
activeCode
activeLoginCode:
activeServiceNamesForAccount:
addConnection:forBundleID:
addConnectionForClient:
addDelegate:queue:
addEntriesFromDictionary:
addExecutionBlock:
addFollowUpItems:error:
addKeychainItem:completion:
addNotificationRequest:withCompletionHandler:
addObject:
addObjectsFromArray:
addOperation:
addOrUpdateKeychainItem:completion:
addService:
addTimer:forMode:
addedPrivateEmails
additionalHeaders
additionalInfo
additionalInfoForAccount:
administrativeArea
advertisingService
ageOfMajority
ageOfMajorityForAccount:
akAction
ak_acceptedTermsInfo
ak_addAppProvidedContext:
ak_addAppleIDHeaderWithValue:
ak_addAppleIDUserModeHeaderWithValue:
ak_addAuthorizationHeaderWithHeartbeatToken:forAltDSID:
ak_addAuthorizationHeaderWithIdentityToken:forAltDSID:
ak_addClientApp:
ak_addClientBundleIDHeader:
ak_addClientInfoHeader
ak_addClientTimeHeader
ak_addCountryHeader
ak_addDeviceConfigurationModeHeaderForAuthContext:
ak_addDeviceMLBHeader
ak_addDeviceROMHeader
ak_addDeviceSerialNumberHeader
ak_addDeviceUDIDHeader
ak_addEphemeralAuthHeader
ak_addExperimentModeHeader
ak_addFeatureMaskHeader
ak_addFidoRecoveryTokenHeader:
ak_addICSCIntentHeader
ak_addInternalBuildHeader
ak_addJSONRequestHeader
ak_addLocalUserUUIDHashHeader
ak_addLocaleHeader
ak_addPRKRequestHeader
ak_addProvisioningUDIDHeader
ak_addProxiedAnisetteHeaders:
ak_addProxiedClientInfoHeader:
ak_addProxiedDeviceUDIDHeader:
ak_addReAuthenticationHeader
ak_addRequestContextHeader:
ak_addSKUCountryHeader
ak_addShortLivedTokenHeaderWithIdentityToken:forAltDSID:
ak_addTimeZoneHeaders
ak_addWalrusDeviceRegionHeader
ak_anisetteHeadersWithCompanionData:
ak_anisetteHeadersWithData:
ak_arrayWithJSONResponseData:
ak_booleanAsInteger
ak_dictionaryWithResponseData:
ak_errorByAppendingUserInfo:
ak_errorWithCode:
ak_errorWithCode:underlyingError:
ak_errorWithCode:userInfo:
ak_expiryDateFromServerDate:localDate:ttl:
ak_filter:
ak_firstObjectMatchingFilter:
ak_hexString
ak_isAuthenticationError
ak_isAuthenticationErrorWithCode:
ak_isIncompatibleDevicesError
ak_isServiceError
ak_isSurrogateAuthAlreadyInProgressError
ak_isUnableToPromptError
ak_isUserCancelError
ak_isUserSkippedError
ak_isUserTryAgainError
ak_jsonDictionaryWithResponseData:
ak_mapObjects:
ak_mapObjectsNullable:
ak_proxiedAnisetteHeadersWithData:
ak_serverFriendlyString
ak_setBodyWithParameters:
ak_setJSONBodyWithParameters:
ak_truncatedCopy
ak_urlEncoded
ak_urlQueryString
ak_wrappedAnisetteError:
alertBody
alertInfo
alertTitle
algorithmIdentifier
aliasesForAccount:
allAuthKitAccounts
allHTTPHeaderFields
allKeysForObject:
allObjects
allValues
allocWithZone:
allowPiggybacking
allowPiggybackingPresence
altDSIDForAccount:
altDSIDforPrimaryiCloudAccount
alternateButtonTitle
anisetteDataForDevice:provisionIfNecessary:
anisetteDataWithError:
anisetteResyncData
anisetteServiceListener
anonymousListener
anticipateEscrowAttempt
appID
appIconForBundleID:size:completion:
appProvidedContext
appendFormat:
appendRequestUrlQueryParameterNamed:value:
appleIDAccountType
appleIDAccountWithAltDSID:
appleIDAccountWithAppleID:
appleIDAuthSupportCopyAppTokensWithMasterToken:authURL:serviceIds:authParams:error:
appleIDAuthSupportTokenCreateWithExternalizedVersion:error:
appleIDAuthorizationURLs
appleIDCountryCode
appleIDCountryCodeForAccount:
appleIDSecurityLevel
appleOwnedDomains
applicationProxyForIdentifier:
apps
archivedDataWithRootObject:requiringSecureCoding:error:
argument
armDeviceWithPCSAuthorizationContextForMessage:completion:
array
arrayByAddingObjectsFromArray:
arrayWithObject:
arrayWithObjects:
arrayWithObjects:count:
attemptTokenUpgradeWithCompletionHandler:
attestationDataForDevice:withRequest:completion:
attestationDataForRequest:completion:
attestationHeaders
attestationSigner
attributes
auditToken
authContext
authKitAccount
authKitAccountForSilentServiceToken:
authKitAccountType
authKitAccountWithAltDSID:
authKitAccountWithAppleID:
authKitAccountWithDSID:
authKitBody
authMode
authResults
authServiceListener
authenticateWithContext:completion:
authenticatedRequest
authenticationHandler
authenticationMode
authenticationModeForAccount:
authenticationParametersWithCompletion:
authenticationRequestFinishedWithResults:password:additionalData:error:
authenticationType
authenticatorData
authkitAccount
authorizationAccessLevel
authorizationClientProvidesUI
authorizationCompletion
authorizationContextHelperWithContext:client:
authorizationContextWithRequest:client:
authorizationController
authorizationDaemonServiceWillProcessUserResponse:
authorizationEndorser
authorizationEndorserRapportClient
authorizationEndorserRapportClientDidFinish:
authorizationRequest
authorizationRequestInitiatedWithUserProvidedInformation:completion:
authorizationRequiresRapport
authorizationResponseValidator
authorizationService
authorizationServiceListener
authorizationUsed
authorizationUsedForAccount:
authorizationUserInformationForRequest:shouldRequestUpdate:error:
authorizedAppListVersion
authorizedApplicationsListVersion
authorizedRequest
autorelease
backingColor
bagForAltDSID:
base
basicAuthURL
beginAuthenticationDataTaskWithRequest:completionHandler:
beginAuthenticationWithContext:client:clearanceHandler:
beginAuthorizationWithContext:completion:
beginDataTaskWithRequest:completionHandler:
beginDate
beginFederatedAuthWithInitialResponse:completionHandler:
beginSessionWithContext:client:completion:
beginTransaction
beneficiaryContacts
beneficiaryFirstName
beneficiaryIdentifier
beneficiaryLastName
beneficiaryListVersion
beneficiaryPassword
beneficiarySetupToken
beneficiaryWrappedKey
bindHandler
bindParameter:error:
bindParameters:error:
bindingFailure
biometricAuth
boolValue
buildLoginCodeNotificationWithTitle:body:footer:loginCode:
buildReauthenticationContextFromContext:error:
buildRequest:
bundleDescription
bundleID
bundleIDs
bundleIdentifier
bundleName
bundleType
bundleURL
bundleWithIdentifier:
bundleWithURL:
bytes
cacheObject
calculation
calculationWithDate:counter:algorithm:relinquisher:
canBeBeneficiary
canBeBeneficiaryForAccount:
canBeCustodian
canBeCustodianForAccount:
canHaveBeneficiary
canHaveBeneficiaryForAccount:
canHaveCustodian
canHaveCustodianForAccount:
canOpenApplication:reason:
canPerformAuthorizationRequest:error:
canPerformCredentialRequest:error:
canPerformRequestWithAccount:error:
canPresentRemoteUI
cancel
cancelAllOperations
cancelAuthorizationWithContext:completion:
captureCurrentValue
capturedCode
categoryWithIdentifier:actions:intentIdentifiers:options:
cdpAccountIsOTEnabledForAltDSID:
centralManager:connectionEventDidOccur:forPeripheral:
centralManager:didConnectPeripheral:
centralManager:didDisconnectPeripheral:error:
centralManager:didDiscoverPeripheral:advertisementData:RSSI:
centralManager:didFailToConnectPeripheral:error:
centralManager:didUpdateANCSAuthorizationForPeripheral:
centralManager:willRestoreState:
centralManagerDidUpdateState:
changePasswordURL
checkForLocaleChange
checkSecurityUpgradeEligibilityForContext:completion:
circleStep
circleURL
claimTokenString
class
clearCache
clearContinuationTokenIfSupported
clearDatabase:
clearNotificationsForItem:error:
clearSerializedMemoryCache
clearSessionCache
clearSessionCacheWithCompletion:
clearanceHandler
client
clientAppBundleId
clientBundleID
clientData
clientForContext:
clientID
clientInfo
clientProvidedDataHelper:
closeDatabase
code
color
combinedAliasesAndReachableEmailsForAccount:
commitChangesToCacheWithInformation:error:
commitTransaction
companionDeviceAnisetteData
companionServicePresenter
compare:
completionHandler
componentsJoinedByString:
componentsSeparatedByString:
componentsWithURL:resolvingAgainstBaseURL:
condition
configuration
configurationInfo
configurationInfoURL
configurationInfoWithIdentifiers:forAltDSID:completion:
configurationParameters
configureExportedInterface:
configureWithParameters:
confirmReceiptForMessage:
conformsToProtocol:
connection:channelSubscriptionsFailedWithFailures:
connection:didChangeConnectedStatus:
connection:didFailToSendOutgoingMessage:error:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didReceivePublicToken:
connection:didReceiveToken:forInfo:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didSendOutgoingMessage:
connectionDidReconnect:
containingAppForPlugInWithPid:
contextFromSRPServerResponse:
contextHelper
contextSecretValidForSRP
contextWithIncomingPayload:
continuationToken
continuationTokenForAccount:
continuationTokenForAccount:error:
continueAuthorizationWithContext:completion:
continueFetchingIconForRequestContext:completion:
continueFetchingIconWithCompletion:
continueFetchingIconWithRequestContext:completion:
continueSessionWithContext:client:completion:
controller
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createAppleIDURL
createChildAccountURL
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createUserNotificationOptionsWithTitle:body:defaultButtonTitle:alternateButtonTitle:makeNoise:
createUserNotificationOptionsWithTitle:body:lockScreenTitle:lockScreenBody:defaultButtonTitle:alternateButtonTitle:makeNoise:
createUserNotificationWithTitle:body:defaultButtonTitle:alternateButtonTitle:makeNoise:
createUserNotificationWithTitle:body:lockScreenTitle:lockScreenBody:defaultButtonTitle:alternateButtonTitle:makeNoise:
credential
credentialForAccount:error:
credentialID
credentialRequestContext
credentialStateDidChange:completion:
credentialStateDidChange:forApplicationWithClientID:
credentials
currentConnection
currentDevice
currentDeviceAuthenticationModeForAuthContext:
currentEmailListVersion
currentLocale
currentProtocolVersion
currentReachabilityStatus
currentRunLoop
currentSchemaVersion
custodianCodeConfiguration
custodianContacts
custodianContext
custodianEnabled
custodianEnabledForAccount:
custodianInfos
custodianInfosForAccount:
custodianLastModified
custodianLastModifiedForAccount:
custodianListVersion
custodianRecoveryToken
custodianServiceListener
custodianSessionID
custodianSetupToken
custodianUUID
dataCenterIdentifier
dataUsingEncoding:
dataWithBytes:length:
dataWithPropertyList:format:options:error:
database
databasePath
date
dateByAddingTimeInterval:
dateWithTimeIntervalSince1970:
dateWithTimeIntervalSinceNow:
deactivate
debugDescription
decodeBoolForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
decodedConfigurationInfo:
decodedRecoveryIdentityToken
decodedRecoveryIdentityTokenString
decodedRecoveryPET
decodedRecoveryPETString
decorateWithContext:
defaultButtonTitle
defaultCenter
defaultManager
defaultSound
defaultWorkspace
delay
delegate
deleteAuthorizationDatabaseWithCompletion:
deleteKeychainItemWithDescriptor:completion:
deletePrivateEmailDatabaseWithCompletion:
demoAccountForAccount:
dependentAltDSID
description
descriptor
desiredInternalTokens
destroyProvisioningSession:
device
deviceClass
deviceColor
deviceEnclosureColor
deviceMap
deviceRegionRequired
deviceRequestContext
deviceSpecificLocalizedStringWithKey:
deviceSpecificLocalizedStringWithKey:inTable:
deviceTrustRevokedForAccount:
dictionary
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithDictionary:
dictionaryWithObjects:forKeys:count:
didCancelRequesting
didCircleTimeout
didComplete:
didCompleteVerificationWithSuccess:duration:
didCompleteWithAuthorization:error:
didCompleteWithSuccess:authorizationAlreadyComplete:
didDeactivateBlock
didEscapeRequesting
didFinishAccepting
didModifyName:
didPerformVerificationWithSuccess:duration:
didReceiveNewPublicToken:
didRespondToMessage:result:payload:
didSelectAnonymousEmail:
didSelectAnonymousEmail:didCancel:
didSelectAppleID:
didSelectPasswordCredential:
didSucceed
dismissBasicLoginUIForContext:client:completion:
dismissBasicLoginUIForContext:completion:
dismissKeepUsingUIForContext:client:withCompletion:
dismissKeepUsingUIForContext:withCompletion:
dismissNativeRecoveryUIForContext:client:completion:
dismissNativeRecoveryUIForContext:completion:
dismissSecondFactorUIForContext:client:completion:
dismissSecondFactorUIForContext:completion:
dismissServerProvidedUIForContext:client:completion:
dismissServerProvidedUIForContext:completion:
dispatchDate
dispose:
doesNotRecognizeSelector:
domain
doubleValue
dsid
effectiveBoolValueForSetting:
eligibleForContinuationKeyAuthentication
emailForContext:error:
enableTransactions
enclosureColor
encodeBool:forKey:
encodeObject:forKey:
encodeWithCoder:
encryptedPRKC
endAuthenticationForAppleID:password:error:context:client:clearanceHandler:
endProvisioningURL
endProvisioningWithSession:PTM:PTMLength:TK:TKLength:
endSessionWithContext:client:completion:
endTransaction
endorseeClient
endorseeDevice
endorserRapportDiscovery
endpoint
engine
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
eraseAnisetteForContext:withCompletion:
eraseAnisetteForDevice:completion:
eraseAnisetteWithCompletion:
eraseProvisioningForDSID:
error
errorCode
errorMessage
errorMessageTitle
errorWithDomain:code:userInfo:
escapeHatchError
escapeHatchTrigger
escapeHatchURL
establishConnectionWithNotificationHandlerEndpoint:completion:
establishConnectionWithStateBroadcastHandlerEndpoint:completion:
event
eventDetails
executeFetchHmeListRequestWithCompletion:
executeRequestWithCompletion:
executeWithResponseHandler:
executor
existingStatus
expectedResponseType
expirationDate
expiryDate
exportedObject
exportedProtocol
extensionItemWithAppleIDAuthenticationContext:
externalizedVersion
externalizedVersionString
familyName
familyNameForAccount:
federatedAuthRequestPayload
federatedAuthSamlRequest
federatedAuthURL
federatedAuthURLWhiteList
fetchAnisetteDataAndProvisionIfNecessary:device:completion:
fetchAnisetteDataAndProvisionIfNecessary:withCompletion:
fetchAnisetteDataForContext:provisionIfNecessary:withCompletion:
fetchAppInformationWithAltDSID:client:completion:
fetchAppListWithAltDSID:completion:
fetchAppleIDAuthorizationURLSetWithCompletion:
fetchAppleIDAuthorizeHTMLResponseTemplateWithCompletion:
fetchAppleOwnedDomainSetWithCompletion:
fetchAuthModeWithContext:client:completion:
fetchAuthModeWithContext:completion:
fetchAuthorizationListVersion
fetchConfigDataURL
fetchContextForWebSessionIdentifier:completion:
fetchCustodianDataRecoveryKeyWithContext:completion:
fetchCustodianRecoveryCodeConfigurationWithCompletion:
fetchCustodianRecoveryTokenWithContext:completion:
fetchDeveloperTeamWithClientID:completion:
fetchDeveloperTeamWithTeamID:completion:
fetchDeviceMapWithContext:completion:
fetchFollowUps
fetchGlobalConfigURL
fetchGlobalConfigUsingCachePolicy:context:completion:
fetchGlobalConfigurationUsingPolicy:completion:
fetchIconBlock
fetchKeychainItemWithDescriptor:completion:
fetchKeychainItemsWithDescriptor:completion:
fetchManifestOptionsWithInheritanceContext:completion:
fetchPeerAttestationDataForContext:withRequest:completion:
fetchPeerAttestationDataForRequest:completion:
fetchPrimaryApplicationInformationForAltDSID:appInformation:client:completion:
fetchPrimaryApplicationInformationForWebServiceWithInfo:completion:
fetchPrivateEmailForAltDSID:withKey:completion:
fetchPrivateEmailWithContext:completion:
fetchRealUserLikelihoodForRequest:withCompletionHandler:
fetchURLBagForAltDSID:completion:
fetchURLBagFromCache:altDSID:completion:
fetchUserInformationForAltDSID:client:completion:
fetchUserInformationForAltDSID:completion:
fetchUserInformationWithContext:client:completion:
fidoAuthRequired
fidoDaemonService
fidoHandler
fileExistsAtPath:
fileURLWithPath:
finalizeCustodianSetupWithContext:completion:
finishFidoAuthWithResponse:client:context:recoveryToken:completion:
fireDate
firstName
firstObject
flushCache
flushCacheForced:
followUpProvider
forceURLBagUpdateForAltDSID:urlSwitchData:completion:
forceUpdateBagWithUrlSwitchData:completion:
formattedUsernameFromUsername:
forwardingEmailForAccount:
frequency
fullName
generateCheckinID
generateLoginCode:
generateLoginCodeWithCompletion:
generateRadarRequestFor:
getApprovedSharedWebCredentialsEntriesSortedByHighestValueForAppWithAppID:completionHandler:
getContextForRequestContext:completion:
getCredentialStateForClientID:completion:
getCredentialStateForRequest:completion:
getCredentialsForAppWithAppID:completionHandler:
getCredentialsForAppWithAppID:externallyVerifiedAndApprovedSharedWebCredentialDomains:completionHandler:
getCurrentDataSubscriptionContextSync:
getIDMSRoutingInfo:forDSID:
getInternalCredentialStateForCredentialRequestContext:
getMobileSubscriberHomeCountryList:error:
getPETForUsername:password:completion:
getPresentationContextForRequestContext:completion:
getServerUILoadDelegateForAltDSID:completion:
getServerUILoadDelegateWithContext:completion:
getServerUILoadDelegateWithServerContext:completion:
getSubscriptionInfoWithError:
getUserDefaultVoiceSubscriptionContext:
getUserInformationForAltDSID:completion:
getUserInformationWithContext:completion:
givenName
givenNameForAccount:
groupKitEligibility
groupKitEligibilityForAccount:
handleResponseError:
hasCheckedIn
hasEndorserAuthorizing
hasInternalAccess
hasInternalEntitledAccess
hasInternalPrivateAccess
hasInternalPrivateEntitlementAccess
hasMDM
hasMDMForAccount:
hasOwnerAccess
hasPrimaryiCloudAccountForAltDSID:
hasPrivateAccess
hasPrivateSignedAccess
hasRegisteredSurrogateForContext:
hasUniqueDeviceIdentifier
hasUsedAuthorization
hasWriteAccess
hash
hash:
hashedWrappingKeyRKC
headerValue
hearbeatTokenForAccount:
heartbeatToken
heartbeatTokenValue
host
housingColor
iCloudAccountForAltDSID:
iCloudAccountForAppleID:
iForgotContinuationURL
iForgotURL
identifier
identityToken
identityTokenValue
idmsData
ignoreInternalTokens
imageURLString
inProgressSurrogates
includeFamilyDevices
includeUntrustedDevices
indexOfObjectPassingTest:
info
inheritanceBeneficiarySetupToken
inheritanceContext
inheritanceDaemonService
init
initWithAccountManager:webSessionPCSKeyProvider:
initWithAccountType:
initWithAddress:forKey:
initWithAltDSID:identityToken:
initWithAltDSID:urlSwitchData:shouldFallBack:
initWithAppleID:altDSID:
initWithAttributes:
initWithAuditToken:
initWithBase64EncodedString:options:
initWithBase:maxQueueSize:
initWithBundleIdentifier:
initWithBundleIdentifier:allowPlaceholder:error:
initWithBundleIdentifier:bundleName:bundleDescription:bundleType:otherInfo:
initWithBytes:length:encoding:
initWithBytesNoCopy:length:freeWhenDone:
initWithCapacity:
initWithCircleContext:
initWithClient:altDSID:
initWithClient:authenticationContext:
initWithClient:context:
initWithClient:requestDispatcher:
initWithCoder:
initWithConnection:
initWithContext:
initWithContext:client:
initWithContext:emailKey:urlBagKey:
initWithContext:urlBagKey:
initWithContext:urlBagKey:shouldCacheResource:
initWithCredentialRequest:
initWithCredentialRequest:connection:
initWithData:
initWithData:encoding:
initWithDatabasePath:
initWithDatabasePath:migrationController:
initWithDate:counter:algorithm:relinquisher:
initWithDelay:maxQueueSize:
initWithDelegate:
initWithDescriptor:value:
initWithDeviceID:
initWithDictionary:
initWithEnvironmentName:namedDelegatePort:queue:
initWithEvent:
initWithExecutor:
initWithFireDate:interval:target:selector:userInfo:repeats:
initWithFollowUpFactory:provider:
initWithInfo:
initWithInfo:responder:
initWithKey:
initWithKey:altDSID:
initWithKey:altDSID:clientAppBundleId:
initWithKeychainManager:
initWithLatitude:longitude:
initWithLiaison:client:delegate:
initWithListenerEndpoint:
initWithMachServiceName:
initWithMaxWait:description:
initWithMessage:
initWithName:value:
initWithNotificationCenter:
initWithObject:expiryDate:
initWithPCSKeyProvider:
initWithParameters:
initWithPath:
initWithPiggybackReporter:
initWithPresenceSID:
initWithProxy:
initWithPushMessage:
initWithQueue:
initWithRequest:
initWithRequest:requestType:
initWithRequestContext:
initWithRequestID:
initWithRequestProvider:
initWithResponseBody:
initWithResponseInfo:
initWithSRPContext:
initWithServerResponse:
initWithServerResponse:andDelegate:piggybackReporter:
initWithServerResponse:forAppleID:
initWithServerResponse:responseBody:
initWithService:
initWithServiceName:viewControllerClassName:
initWithStoreManager:
initWithType:primary:
initWithUILiaison:client:
initWithUILiaison:client:requestDispatcher:
initWithURL:
initWithURL:contextHelper:completionHandler:
initWithURL:resolvingAgainstBaseURL:
initWithURLRequestProvider:authenticationHandler:completionHandler:
initWithUUIDString:
initWithUser:password:
initWithUser:site:
initWithWebSessionIdentifier:expiryDate:userInfo:
initialAuthResponse
initialHandshakeTimeout
initialize
initiateCustodianSetupWithContext:completion:
initiatePiggybackingWithCompletion:
initiatingContext
initiatingPassword
initiatingServerResponse
insertObject:atIndex:
intValue
integerValue
internalFeaturesMaskValue
internationalMobileEquipmentIdentity
internationalMobileEquipmentIdentity2
invalidListVersionSupplied
invalidate
invalidateWithError:
invalidationHandler
invisible
isAcceptingPayload
isAccountsFrameworkAvailable
isActivated
isActive
isAnisetteReprovisioningRequired
isAnisetteResyncRequired
isAppWithBundleIDForeground:
isAppleIDLoginEnabled
isAuditLogin
isBaaEnabledForKey:
isCancelled
isContextEligibleForBiometricOrPasscodeAuth
isContextEligibleForSilentAuth
isContextEligibleForSilentAuthCoercion
isContextRequestingReauthForExistingService
isContextSecretValidForSRP
isContinuityPush
isCreateAppleIDAllowedWithCompletion:
isCustodianSyncAction
isDemoAccount
isDevicePasscodeProtected:
isDone
isEligibleForUpgradeFromPassword
isEnabledForDataclass:
isEphemeral
isEqual:
isEqualToDate:
isEqualToDictionary:
isEqualToSet:
isEqualToString:
isExemptedFromMandatoryUISecurityUpgrade
isExpired
isFidoAuthRequired
isFirstTimeLogin
isInCircle
isInRestrictedSharingMode
isInvisible
isKindOfClass:
isMachineProvisioned:
isManagedAppleID
isManagedAppleIDForAccount:
isMemberOfClass:
isNotificationEmailAvailable
isNotificationEmailAvailableForAccount:
isPasscodeResetRequired
isPermittedForInteractiveAuthOnLimitedContext
isPermittedToProxy
isPermittedToProxyAuthorizationBundleIdentifier
isPermittedToProxyInitialAuth
isPrimaryiCloudAccount:
isProtectedWithPasscode
isRecoverableError:
isRequestingPayload
isSecondCall
isSecondaryActionRequired
isSecondaryActionURLGSEndpoint
isSenior
isServerUIRequired
isSilent
isSurrogateAuthInProgressForClient:
isSynchronizable
isTracingEnabled
isTriggeredByNotification
isURLSwitchingRequired
isUnderAgeOfMajority
isUnderage
isUnlocked
isUpdateable
isUsernameEditable
isValidEnvironment:
isValidMessage
isWaitingForSettingsSurrogateAuth
isWebAccessEnabled
itemAccessible
itemAttributes
itemClass
itemIdentifier
itemIdentifiersRequiringNotificationClearFromPayload:
itemsForAltDSID:pushMessageInfo:fromIDMSPayload:
keyAndBundleIdAreHashed
label
lastDataSyncTimestamp
lastKnownActiveAnisetteDSID
lastKnownIDMSEnvironment
lastName
latitude
launchOutOfProcessAuthentication:surrogateID:withErrorHandler:
launchSettingsForContext:withCheckinID:
legacyAnisetteDataForContext:DSID:withCompletion:
legacyAnisetteDataForDSID:device:completion:
legacyAnisetteDataForDSID:withCompletion:
length
linkClient
linkType
linkedDevicesWithRelationship:
listAllPrivateEmailsForAltDSID:completion:
listener:shouldAcceptNewConnection:
loadDelegate
localPresenceFound
localUserUUID
locale
localeIdentifier
locality
localizedAppName
localizedAppsNameList
localizedDescription
localizedName
localizedNameForContext:
localizedStringForKey:value:table:
lock
lockScreenBody
loginChoice
loginChoices
longLongValue
longitude
looksLikeiForgotURLKey:
lookupPrivateEmailForAltDSID:withKey:completion:
lookupPrivateEmailWithContext:completion:
machineID
mainRunLoop
makePrivateEmail
managedOrganizationName
managedOrganizationNameForAccount:
managedOrganizationType
managedOrganizationTypeForAccount:
manifest
masterKeyID
masterToken
masterTokenForAccount:
matchHandler
maxQueueSize
maximumLoginAttempts
messageFromTransportRepresentation:
messageId
migrateSchemaFromVersion:
migrateSchemaIfNecessary
migrator
mobileEquipmentIdentifier
modelNumber
mostRecentlyUsedAuthKitAccount
mutableCopy
name
nativeActionURLKey
needsCredentialRecovery
needsNewChildAccount
needsPasswordChange
needsRepair
needsSecurityUpgradeUI
newBagURLRequest
newHandleWithDefinition:configurationContext:
nonce
notification
notificationAction
notificationDictionaryWithTitle:message:defaultButton:alternateButton:
notificationEmail
notificationEmailForAccount:
null
numberFromString:
numberOfRowsForTable:withExecutor:
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
objectAtIndexedSubscript:
objectForInfoDictionaryKey:
objectForKey:
objectForKeyedSubscript:
openApplication:withOptions:completion:
openApplicationWithBundleID:
openDatabase:
openSensitiveURL:withOptions:
openSensitiveURL:withOptions:error:
openURL:configuration:completionHandler:
operatingSystems
operation
optionsWithDictionary:
orderedSetWithArray:
origin
originalRequestContext
otherInfo
ownerAppleID
ownerCustodianAltDSID
ownerDevice
parsableRepresentation
parse
parseRefreshUrl:
parser:didEndElement:namespaceURI:qualifiedName:
parser:didEndMappingPrefix:
parser:didStartElement:namespaceURI:qualifiedName:attributes:
parser:didStartMappingPrefix:toURI:
parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:
parser:foundCDATA:
parser:foundCharacters:
parser:foundComment:
parser:foundElementDeclarationWithName:model:
parser:foundExternalEntityDeclarationWithName:publicID:systemID:
parser:foundIgnorableWhitespace:
parser:foundInternalEntityDeclarationWithName:value:
parser:foundNotationDeclarationWithName:publicID:systemID:
parser:foundProcessingInstructionWithTarget:data:
parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:
parser:parseErrorOccurred:
parser:resolveExternalEntityName:systemID:
parserDidEndDocument:
parserDidStartDocument:
passcodeAuth
password
passwordEquivalentToken
passwordResetToken
passwordResetTokenBackupForAccount:
passwordResetTokenForAccount:
payloadWithMessage:
payloadWithResponseData:forCircleStep:
pcsAuthDescriptor
pendingAuthKitFollowUpPayload:
pendingBGContext
pendingClientBundle
pendingClientUIWork
pendingFollowUpItems:
pendingFollowUpWithCommand:
pendingFollowUpWithMessageId:
performAuthenticationRequestWithContext:completion:
performAuthorization:companionLinkClient:advertisingService:completion:
performAuthorization:completion:
performAuthorizationCheckInWithCompletion:
performAuthorizationWithContext:withUserProvidedInformation:completion:
performBlock:
performBlockAndWait:
performCheckInForAccountWithAltDSID:completion:
performCircleRequestWithContext:completion:
performGlobalConfigUpdateWithCompletion:
performHeartbeatCheckIn
performHeartbeatCheckInIfNecessaryWithCompletionHandler:
performInsertQuery:
performInsertQuery:error:
performLivenessCheckInForAccount:completion:
performLivenessCheckInForAccounts:withPushToken:completion:
performQuery:
performQuery:error:
performQuery:rowHandler:
performRegistrationRequestWithContext:completion:
performSRPContractWithContext:completion:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performTrustedContactsDataSync:completion:
performUIWorkWithSurrogateContext:uiWorkBlock:
performUnsafeVerificationWithUserID:completion:
performWithinPersonaForAccount:withBlock:
peripheral:didDiscoverCharacteristicsForService:error:
peripheral:didDiscoverDescriptorsForCharacteristic:error:
peripheral:didDiscoverIncludedServicesForService:error:
peripheral:didModifyServices:
peripheral:didOpenL2CAPChannel:error:
peripheral:didReadRSSI:error:
peripheral:didUpdateNotificationStateForCharacteristic:error:
peripheral:didUpdateValueForCharacteristic:error:
peripheral:didUpdateValueForDescriptor:error:
peripheral:didWriteValueForCharacteristic:error:
peripheral:didWriteValueForDescriptor:error:
peripheralDidUpdateName:
peripheralDidUpdateRSSI:error:
peripheralIsReadyToSendWriteWithoutResponse:
peripheralManager:central:didSubscribeToCharacteristic:
peripheralManager:central:didUnsubscribeFromCharacteristic:
peripheralManager:didAddService:error:
peripheralManager:didOpenL2CAPChannel:error:
peripheralManager:didPublishL2CAPChannel:error:
peripheralManager:didReceiveReadRequest:
peripheralManager:didReceiveWriteRequests:
peripheralManager:didUnpublishL2CAPChannel:error:
peripheralManager:willRestoreState:
peripheralManagerDidStartAdvertising:error:
peripheralManagerDidUpdateState:
peripheralManagerIsReadyToUpdateSubscribers:
persistMasterKeyVerifier:withContext:completion:
personaIDIfCurrentPersonaIsDataSeparated
phoneAsAppleID
phoneAsAppleIDForAccount:
phoneBundleInfoWithAdditionalInfo:error:
phoneCertificate
phoneNumber
piggyback:handleEscapeHatchError:completion:
piggyback:handleVerificationWithError:completion:
piggyback:promptForRandomCodeWithCompletion:
piggyback:shouldContinueWithCompletion:
piggyback:validateSecurityCode:completion:
piggybackResultString:
piggybackingAcceptorSupportsPresence
piggybackingIDMSFallbackApproved
piggybackingIDMSPresenceOverride
piggybackingLocalPresenceOverride
piggybackingPresenceMode
piggybackingRequestorPresenceSID
piggybackingRequestorUsesPresence
populateNotificationOptionsWithCommonKeys:makeNoise:
postNotificationName:object:
postNotificationName:object:userInfo:
postNotificationName:object:userInfo:deliverImmediately:
postUserNotification:
postWalrusStateUpdateToServerWithContext:urlBagKey:username:password:completion:
prepareWithController:queue:
presenceCheckPassed
presenceFallbackApproved
presenceMode
presenceSID
presentAuthorizationUIForContext:completion:
presentAuthorizationWithContext:client:completion:
presentBasicLoginUIForContext:client:completion:
presentBasicLoginUIForContext:completion:
presentBiometricOrPasscodeValidationForContext:client:completion:
presentBiometricOrPasscodeValidationForContext:completion:
presentFidoAuthForContext:fidoContext:client:completion:
presentFidoAuthForContext:fidoContext:completion:
presentKeepUsingUIForContext:appleID:completion:
presentKeepUsingUIForContext:client:appleID:completion:
presentLoginAlertForContext:client:withError:title:message:completion:
presentLoginNotificationWithCode:piggy:completionHandler:
presentMessageWithAccount:completionHandler:
presentNativeRecoveryUIForContext:recoveryContext:client:completion:
presentNativeRecoveryUIForContext:recoveryContext:completion:
presentOOPLoginUIWithContext:completion:
presentPrivateEmailUIForContext:completion:
presentPrivateEmailWithContext:client:completion:
presentSecondFactorAlertForContext:client:withError:title:message:completion:
presentSecondFactorAlertForContext:withError:title:message:completion:
presentSecondFactorUIForContext:client:completion:
presentSecondFactorUIForContext:completion:
presentServerProvidedUIForContext:client:withConfiguration:completion:
presentationCompletion
presentationContextForRequestContext:client:
previousAccountInfoRefreshDate
previousMessageId
previouslySelectedEmail
previouslyWantedPrivateEmail
primaryAuthKitAccount
primaryEmail
primaryEmailAddress
primaryEmailAddressForAccount:
primaryEmailVetted
primaryiCloudAccount
privateAttestationEnabled
privateAttestationEnabledForAccount:
privateEmail
privateEmailAddress
privateEmailCompletion
privateEmailFetchCompletedWith:error:completion:
privateEmailListVersion
privateEmailListVersionWithCompletion:
privateEmailServiceListener
processAccountCode:error:
processIdentifier
processMessage:error:
processPushMessage:
processPushPayload:completion:
promptForAppleIDSettingsRedirectWithContext:client:needFullUI:completion:
propertyListWithData:options:format:error:
protocol
provisionAnisetteForContext:withCompletion:
provisionAnisetteForDevice:completion:
provisionAnisetteWithCompletion:
proxiedDevice
proxiedDeviceAnisetteData
proximityController
proximityEngine:managerDidUpdateState:
proximityEngineDidActivate:
proximityEngineDidInvalidate:
proxyWithErrorHandler:
publicAPSTokenString
publicToken
pushToken
queryItemWithName:value:
queryItems
queryString
queryWithString:
queue
rapportClient
rawAccountPassword
reachabilityWithHostName:
reachableEmailAddressesForAccount:
realUserVerificationData
reason
reauthenticateWithContext:completion:
recordUserAcceptedAgreementVersion:
recoveryContextWithServerInfo:
recoverySessionID
recoveryStep
recoveryToken
refreshAccountUsernamesForAltDSID:dataCenter:
refreshAccountUsernamesForAltDSID:withUserInformation:
refreshAuthMetadataWithContext:completion:
refreshUrl
registerEventID:options:handler:
registerFidoKeyWithContext:completion:
registerObserver:
registerPrivateEmailForAltDSID:withKey:completion:
registerRequestID:options:handler:
registerUISurrogateContext:client:completion:
relinquish
remoteAlertHandle
remoteAlertHandle:didInvalidateWithError:
remoteAlertHandleDidActivate:
remoteListener
remoteObjectInterface
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
remoteObjectProxyWithProtocol:forBundleID:
remoteObjectProxyWithProtocol:forBundleID:errorHandler:
removeAccount:withCompletionHandler:
removeAllCachedResponses
removeAllObjects
removeAllPCSAuthCredential
removeAllPCSAuthCredentialWithCompletion:
removeAllPCSCredentials
removeApplicationWithClientID:completion:
removeAuthorizationForApplicationWithClientID:completion:
removeBeneficiaryWithInheritanceContext:completion:
removeContinuationTokenForAccount:
removeFollowUpItems:error:
removeFollowUpItemsWithIdentifiers:error:
removeItemAtPath:error:
removeMasterTokenForAccount:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removePrivateEmailForContext:error:
removePrivateEmailKey:completion:
removePrivateEmailWithContext:completion:
removeUnusedAndDuplicateAuthKitAccountsWithCompletion:
removedPrivateEmails
renewRecoveryTokenURL
renewRecoveryTokenWithContext:completion:
repairState
repairStateForAccount:
repairURL
replyContextWithPayload:
replyPayload
replyToID
replyWithContext:withCompletion:
reportAuthEventOfType:success:error:
reportFinalSignOutEventForAccount:completion:
reportPromptByClient:withContext:
reportSignOutEventForService:account:completion:
reportSignOutForAllAppleIDsWithCompletion:
reportSignOutForAppleID:service:completion:
reqInterceptToken
requestConfiguration
requestDispatcher
requestForRecoveryCompletionWithContext:recoveredInfo:recoveryError:
requestIdentifier
requestOTPForDSID:outMID:outMIDSize:outOTP:outOTPSize:
requestOptions
requestSession
requestTapToRadarWithTitle:message:componentName:componentVersion:componentID:keywords:
requestTapToRadarWithTitle:message:keywords:
requestTime
requestType
requestURL
requestWithIdentifier:content:trigger:
requestedCloudPartition
requireSigningHeaders
requiresPasscode
resolved
resourceLoadDelegate
resourceLoadDelegateWithContext:
resourceLoadDelegateWithContext:authResponse:
resourceURL
respondsToSelector:
responseDictionaryWithData:error:
resume
retain
retainCount
retrieveRecoveryDataForServerContext:recoveryInfo:completion:
retryAuth
returnData
reverseGeocodeLocation:completionHandler:
revokeAuthorizationForAllApplications:
revokeAuthorizationForAllApplicationsWithCompletion:
revokeAuthorizationForApplicationWithClientID:completion:
revokeCustodianWithContext:completion:
revokeUpgradeWithContext:client:completion:
revokeUpgradeWithContext:completion:
rollbackTransaction
rowHandler
sanitiseInternalState
sanitizeContext:
saveAccount:error:
saveContext:completion:
scanForPeripheralsWithServices:options:
scanUnsignedLongLong:
scannerWithString:
scheduledRequestWithCalculation:forRequest:info:
scopes
secondaryActionMessage
secondaryActionURLGSEndpoint
secondaryActionURLKey
secondaryBody
secondaryBodyCDP
secondaryTitle
secondaryTitleCDP
secondaryToken
secret
securityDomain
securityLevelForAccount:
securityUpgradeContext
selectedAuthorizationEmailForAccount:
selectedEmail
self
sendEmbargoEndNotificationFeedbackWithContext:urlKey:completion:
sendEventID:event:destinationID:options:completion:
sendMessage:toDestinations:priority:options:identifier:error:
sendReport
sendRequestID:request:destinationID:options:responseHandler:
sendUserInfoChangeNotificationWithPayload:
serialNumber
server
serverCompatibleRequestBody
serverCompatibleRequestBodyWithPayload:
serverContext
serverExperimentalFeatures
serverExperimentalFeaturesForAccount:
serverFriendlyDescription
serverHandler
serverInfo
serverProvidedData
serverUIContext:processAdditionalData:completion:
serverUIContextFromResponse:authContext:urlRequest:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:sentBytes:totalBytes:
service:account:incomingData:fromID:context:
service:account:incomingMessage:fromID:context:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:receivedGroupSessionParticipantDataUpdate:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:activeAccountsChanged:
service:connectedDevicesChanged:
service:devicesChanged:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:didSwitchActivePairedDevice:acknowledgementBlock:
service:linkedDevicesChanged:
service:nearbyDevicesChanged:
serviceAllowedTrafficClassifiersDidReset:
serviceControllerForContext:
serviceIdentifier
serviceIdentifiers
serviceName
serviceTokens
serviceType
services
servicesUsingAccount:
sessionID
sessionWithInitialMessage:secretDelegate:circleDelegate:dsid:error:
sessionWithSecretDelegate:dsid:error:
setAbsintheSigner:
setAcceptSession:
setAccount:
setAccount:inUse:byService:
setAccountManager:
setAccountProperty:forKey:
setAccountRecoveryMasterKey:
setActionButtonText:
setActiveCode:
setAdditionalHeaders:
setAdditionalInfo:forAccount:
setAdvertisingService:
setAgeOfMajority:
setAgeOfMajority:forAccount:
setAlertBody:
setAlertTitle:
setAliases:forAccount:
setAltDSID:
setAltDSID:forAccount:
setAnalyticsReport:
setAnisetteServiceListener:
setAnticipateEscrowAttempt:
setAppProvidedContext:
setAppProvidedData:
setAppleIDCountryCode:forAccount:
setAppleIDSecurityLevel:
setAppleIDWithAltDSID:inUse:forService:completion:
setAppleIDWithDSID:inUse:forService:completion:
setApps:
setArgument:
setAttestationSigner:
setAuthKitAccount:
setAuthKitBodyData:
setAuthMode:
setAuthServiceListener:
setAuthenticated:
setAuthenticatedRequest:
setAuthenticationDelegate:
setAuthenticationMode:
setAuthenticationMode:forAccount:
setAuthenticationType:
setAuthkitAccount:
setAuthorizationCompletion:
setAuthorizationEndorser:
setAuthorizationEndorserRapportClient:
setAuthorizationRequest:
setAuthorizationResponseValidator:
setAuthorizationService:
setAuthorizationServiceListener:
setAuthorizationUsed:forAccount:
setAuthorizedRequest:
setBagUrlKey:
setBeginDate:
setBeneficiary:forAccount:
setBeneficiaryAccountName:
setBeneficiaryAltDSID:
setBeneficiaryListVersion:
setBeneficiaryListVersion:forAccount:
setBeneficiaryOperationsByID:
setBindingFailure:
setBiometricAuth:
setBody:
setBodyKey:
setCanBeCustodian:forAccount:
setCanHaveBeneficiary:forAccount:
setCapturedCode:
setCategoryIdentifier:
setCheckInAllowedForAllAccountsToValue:
setClasses:forSelector:argumentIndex:ofReply:
setClearanceHandler:
setCliMode:
setClient:
setClientAppName:
setClientBundleID:
setClientErrorCode:
setClientID:
setClientInfo:
setCommand:
setCompanionDevice:
setCompanionServicePresenter:
setCompletion:
setCompletionHandler:
setComponentName:
setComponentVersion:
setCondition:
setConfiguration:
setConfigurationInfo:forIdentifier:forAltDSID:completion:
setContext:
setContinuationToken:
setControlFlags:
setCreateAppleID:
setCredential:
setCredential:forAccount:serviceID:error:
setCredentialItem:forKey:
setCredentialRequestContext:
setCurrentEmailListVersion:error:
setCustodianContext:
setCustodianInfos:forAccount:
setCustodianLastModified:forAccount:
setCustodianListVersion:
setCustodianListVersion:forAccount:
setCustodianOperationsByID:
setCustodianRecoveryToken:
setCustodianServiceListener:
setDSID:forAccount:
setDataCenterIdentifier:
setDate:
setDecodedRecoveryIdentityToken:
setDecodedRecoveryPET:
setDelegate:
setDelegates:
setDemoAccount:forAccount:
setDescriptor:
setDestinationDevice:
setDevice:
setDeviceDiscovery:
setDeviceEnclosureColor:
setDeviceRequestContext:
setDeviceTrustRevoked:forAccount:
setDidDeactivateBlock:
setDidSucceed:
setEnableCriticalReliability:
setEncryptedPRKC:
setEndorseeClient:
setEndorseeDevice:
setEndorserRapportDiscovery:
setError:
setEscapeHatchError:
setEscapeHatchTrigger:
setEvent:
setExecutor:
setExistingStatus:
setExpectedResponseType:
setExportedInterface:
setExportedObject:
setExtensionIdentifier:
setFamilyName:
setFamilyName:forAccount:
setFetchIconBlock:
setFetchIconBlockForPresenter:withContext:
setFido:forAccount:
setFidoDaemonService:
setFlags:
setFollowUpProvider:
setForceSilentAuth:
setForwardingEmail:
setForwardingEmail:forAccount:
setFrequency:
setGivenName:
setGivenName:forAccount:
setGroupKitEligibility:forAccount:
setHTTPBody:
setHTTPContentType:
setHTTPMethod:
setHasCheckedIn:
setHasEndorserAuthorizing:
setHasMDM:forAccount:
setHasUsedAuthorization:
setHeartbeatToken:
setHeartbeatTokenValue:
setHost:
setIDMSRoutingInfo:forDSID:
setIdentifier:
setIdentityToken:
setIdentityTokenValue:
setIgnoreInternalTokens:
setInProgressSurrogates:
setInfo:
setInformativeText:
setInheritanceContext:
setInheritanceDaemonService:
setInitialHandshakeTimeout:
setInitialURLRequestKey:
setInitiatingContext:
setInitiatingPassword:
setInitiatingServerResponse:
setInternalWrapper:
setInterruptionLevel:
setInvalidationHandler:
setInvisible:
setIsNotificationEmailAvailable:
setIsNotificationEmailAvailable:forAccount:
setIsProxy:
setIsSecondCall:
setIsSenior:
setIsUnderage:
setIsUsernameEditable:
setItemAccessible:
setItemClass:
setKeyAndBundleIdAreHashed:
setLabel:
setLastKnownIDMSEnvironment:
setLastKnownLocale:
setLatitude:
setLinkClient:
setListVersionToVersion:
setLocalPresenceFound:
setLocalizedAppsNameList:
setLockScreenBody:
setLockScreenTitle:
setLoggedInServices:
setLoginChoices:
setLongitude:
setMachineID:
setMakePrivateEmail:
setManagedOrganizationName:
setManagedOrganizationName:forAccount:
setManagedOrganizationType:
setManagedOrganizationType:forAccount:
setMatchHandler:
setMaxWait:
setMaximumLoginAttempts:
setMessageId:
setMigrator:
setName:
setNeedsCredentialRecovery:
setNeedsNewAppleID:
setNeedsNewChildAccount:
setNeedsPasswordChange:
setNotification:
setNotificationCategories:
setNotificationEmail:
setNotificationEmail:forAccount:
setObject:atIndexedSubscript:
setObject:forKey:
setObject:forKey:expiresIn:
setObject:forKeyedSubscript:
setObject:forSetting:
setOneTimePassword:
setOptions:
setOrigin:
setOriginalRequestContext:
setOtherButtonText:
setOwnerCustodianAltDSID:
setPasscodeAuth:
setPassword:
setPasswordCredentialCount:
setPasswordRequest:
setPasswordResetToken:
setPayload:
setPendingBGContext:
setPendingClientBundle:
setPendingClientUIWork:
setPhoneAsAppleID:forAccount:
setPhoneCertificate:
setPhoneInformation:
setPhoneNumberCertificate:
setPresenceCheckPassed:
setPresentationCompletion:
setPresentationType:
setPreviouslySelectedEmail:
setPreviouslyWantedPrivateEmail:
setPrimaryClientID:
setPrimaryEmailAddress:
setPrimaryEmailAddress:forAccount:
setPrivateAttestationEnabled:forAccount:
setPrivateEmail:keyAlreadyHashed:error:
setPrivateEmailCompletion:
setProtocolVersion:error:
setProxiedAltDSID:
setProxiedDevice:
setProxiedIdentityToken:
setProximityController:
setPushToken:
setQualityOfService:
setQueryItems:
setRadarDescription:
setRadarTitle:
setRapportClient:
setReachableEmailAddresses:forAccount:
setReachableEmails:
setRealUserVerificationData:
setReason:
setRecoveryToken:
setRefreshUrl:
setRemoteAlertHandle:
setRemoteListener:
setRemoteObjectInterface:
setRepairState:forAccount:
setReplyToID:
setReqInterceptToken:
setRequest:
setRequestConfiguration:
setRequestDispatcher:
setRequestSession:
setRequestURL:
setRequestedScopes:
setRequiresTouchID:
setResolved:
setResourceLoadDelegate:
setRetryAuth:
setReturnData:
setRowHandler:
setScale:
setScheme:
setScopes:
setSecondaryBodyCDP:
setSecondaryFooter:
setSecondaryTitleCDP:
setSecondaryToken:
setSecurityDomain:
setSecurityLevel:forAccount:
setSelectedAuthorizationEmail:forAccount:
setSelectedEmail:
setSelectedPrivateEmail:forAccount:
setSelectedRequest:
setServer:
setServerExperimentalFeatures:forAccount:
setServerInfo:
setService:
setServiceProvider:
setServiceToken:
setSessionID:
setShouldAutomaticallyMigrate:
setShouldCacheResource:
setShouldFallBack:
setShouldIgnoreTeamID:
setShouldIgnoreUserID:
setShouldOfferSecurityUpgrade:
setShouldPreventDismissAfterUserSkip:
setShouldSendPhoneNumber:
setShouldSendSigningHeaders:
setShouldSkipSettingsLaunchAlert:
setShouldSyncWithServer:
setShouldUpdatePersistentServiceTokens:
setSignInAllowsPCSKeyAccess:
setSignWithIdentityToken:
setSlotID:
setSound:
setState:
setSurrogateClient:
setSurrogateCompletion:
setSurrogateContext:
setSurrogateIDGenerator:
setSurrogateManager:
setSurrogateQueue:
setSurrogateRegistrationID:
setSynchronizable:
setTeamID:
setTimeout:
setTitle:
setTitleKey:
setToken:
setTokenExpiryDate:
setTransactionId:
setTransferState:
setTvAppIconData:
setTvAppIconScale:
setUnitTestContext:
setUrlSwitchData:
setUseDataProtection:
setUserID:
setUserIdentifier:
setUserInfo:
setUserInformation:
setUserInformationRepresentation:
setUserIsSenior:forAccount:
setUserResponse:
setUserSelection:
setUserUnderage:forAccount:
setUsername:
setValue:
setValue:forHTTPHeaderField:
setValueCondition:
setVerifiedPrimaryEmail:forAccount:
setWaitForReply:
setWaitForReplyTimeout:
setWalrusContext:
setWalrusDaemonService:
setWalrusEnabled:
setWalrusWebAccessEnabled:
setWhitelistedPathURLs:
setWithArray:
setWithObject:
set_attemptIndex:
set_clientAuthenticatedExternallyWithPassword:
set_clientShouldAuthenticateExternally:
set_denyVirtualInterfaces:
set_externalAuthToken:
set_forceEligibleForForegroundAuthentication:
set_iconData:
set_iconScale:
set_isRapportLogin:
set_isSilentAppTransfer:
set_notifyOfTimeout:
set_performUIOutOfProcess:
set_proxiedAssociatedDomains:
set_proxiedClientAppID:
set_proxiedClientAppName:
set_proxiedClientBundleID:
set_proxiedClientTeamID:
set_requirePassword:
set_sessionID:
set_shouldSendGrandSlamTokensForRemoteUI:
set_shouldSendIdentityTokenForRemoteUI:
set_shouldSkipAuthorizationUI:
set_shouldUseProxiedClientBundleIDForSRP:
setupBeneficiaryWithInheritanceContext:completion:
sharedAnisetteFreeURLSession
sharedAuthKitFollowupManager
sharedAuthKitFollowupProvider
sharedAuthKitFollowupPushDelegate
sharedBag
sharedBagService
sharedCacheEnabledAnisetteFreeSession
sharedCacheEnabledURLSession
sharedCacheReliantAnisetteFreeSession
sharedConfiguration
sharedConnection
sharedController
sharedDispatcher
sharedInstance
sharedManager
sharedService
sharedSigner
sharedURLSession
sharedURLSessionWithDenyVirtualInterfaces
shouldAcceptNewConnection:
shouldAllowClient:logging:
shouldAllowDemoMode
shouldAllowExperimentalMode
shouldAutomaticallyMigrate
shouldCacheResource
shouldCapturePromptBugForContext:
shouldContinueWithAuthenticationResults:error:forContextID:completion:
shouldContinueWithResponse:error:
shouldEnableTestAccountMode
shouldFakeAuthSuccess
shouldFallBack
shouldHideInternalBuildHeader
shouldIgnoreTeamID
shouldIgnoreUserID
shouldOfferSecurityUpgrade
shouldPreventDismissAfterUserSkip
shouldProcessAdditionalServerUIData:
shouldProcessServerUIRequest:
shouldPromptForPasswordOnly
shouldProxyAnisetteAction
shouldRequestConfigurationInfo
shouldRequestRecoveryPET
shouldRequestShortLivedToken
shouldSendServerResponseForRecoveredInfo:withRecoveryError:
shouldSkipSettingsLaunchAlert
shouldSuppressPushMessage:
shouldSyncWithServer
shouldUpdatePersistentServiceTokens
shouldUseDataProtection
showAlert:primaryAction:altAction:cancelAction:
showAlertForError:withCompletion:
showPigCode:withIncomingMessage:
showServerUIWithContext:completion:
shutdown
signRequest:
signRequest:error:
signRequestWithBasicHeaders:
signRequestWithCommonHeaders:
signWithBAAHeaders:completion:
signWithIdentityToken
signal
signalFromServerResponse:
signature
signatureForURLRequest:completionHandler:
signaturesForData:options:completion:
signingHeadersForRequest:completion:
silentTapToRadarWithRequest:completion:
site
slotID
sortedArrayUsingComparator:
standardUserDefaults
start
startAdvertising:
startAuthorization
startAuthorizationWithCompanionLinkClient:
startCoordinatingBlock:
startCustodianRecoveryRequestWithContext:completion:
startCustodianRecoveryTransactionWithContext:completion:
startDiscoveryWithCompletion:
startFetchingIconWithRequestContext:
startFidoAuthWithContext:recoveryToken:client:completion:
startListeningForMessagesFromPairedDevice
startProvisioningURL
startProvisioningWithDSID:SPIM:SPIMLength:outCPIM:outCPIMLength:outSession:
startRequestSessionWithController:completion:
startWithDelegates:
state
status
statusCode
stopScan
store
storeAuthorization:forClient:
storeAuthorization:forProxiedRequest:completion:
storeModernRecoveryURL
storeName
stringByAppendingFormat:
stringByAppendingString:
stringByDeletingLastPathComponent
stringByReplacingOccurrencesOfString:withString:
stringFromColumn:inStatement:
stringValue
stringWithFormat:
stringWithUTF8String:
subTitleKey
submitDispatchableRequest:
subscriptions
subscriptionsInUse
superclass
supportsPiggybacking
supportsPresence
supportsSecureCoding
surrogateCompletion
surrogateContext
surrogateIDGenerator
surrogateManager
surrogateQueue
surrogateRegistrationID
syncAnisetteForContext:withSIMData:completion:
syncAnisetteWithSIMData:completion:
syncAnisetteWithSIMData:device:completion:
synchronizable
synchronizeFollowUpItemsForContext:authHandler:completion:
synchronizeFollowUpItemsForContext:completion:
synchronizeWithDSID:SIM:SIMLength:outMID:outMIDLength:outSRM:outSRMLength:
synchronousRemoteObjectProxyWithErrorHandler:
synchronousRemoteObjectProxyWithProtocol:forBundleID:errorHandler:
teamID
teamIdentifier
teams
tearDown
tearDownFollowUpsWithItems:
tearDownLoginNotifications
teardownFollowUpWithContext:completion:
timeIntervalSince1970
timeIntervalSinceDate:
timeIntervalSinceNow
timestamp
title
titleKey
token
tokenFromAuditToken:
tokenWithBase64String:
tokenWithDictionary:
tokenWithExternalizedVersion:lifetime:
tokenWithExternalizedVersionString:
tokenWithValue:lifetime:
topic
transactionID
transactionId
transferState
transportRepresentation
triggerAutoBugCaptureWithSubType:andBundleID:userInfo:
ttlInMinutes
tvAppIconData
tvAppIconScale
txnid
type
typeForMessageWithTransportRepresentation:
uiWorkQueue
unarchivedObjectOfClass:fromData:error:
underlyingContext
uniqueDeviceIdentifier
uniqueIdentifier
unlock
unregisterObserver:
unregisterUISurrogateForContext:
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
updateAuthorizationListWithMetadataInfo:
updateAuthorizationListWithMetadataInfo:completion:
updateBeneficiaryWithInheritanceContext:completion:
updateContext:completion:
updateCustodianRecoveryKeyWithContext:completion:
updateKeychainItem:completion:
updateStateWithExternalAuthenticationResponse:forAppleID:completion:
updateStateWithExternalAuthenticationResponse:forContext:completion:
updateUserInformationForAltDSID:userInformation:completion:
updateUserResponse:withContext:forClient:
updateWithHTTPURLResponse:
updateWithSecondaryAuthenticationBody:
updateWithSecondaryAuthenticationResponse:
updateWithSecondaryAuthenticationResponse:shouldUpdateDSID:
upgradeUIURL
urlAtKey:
urlBagForAltDSID:error:
urlBagFromCache:altDSID:error:
urlBagKey
urlRequestProvider
urlSwitchData
urlSwitchingData
useDataProtection
user
userChosenName
userID
userIdentifier
userInfo
userInfoFromAccount:
userInfoFromContext:
userInformationRepresentation
userIsSeniorForAccount:
userResponse
userResponseWithContext:forClient:
userSelection
userUnderAgeForAccount:
username
uuid
validateExternalizedContext:error:
validateLoginCode:forAppleID:withCompletion:
validateResponseData:error:
validateVettingToken:forAltDSID:completion:
validateVettingTokenURL
value
valueCondition
valueForEntitlement:
verificationFailed:
verifyCredentialReason
verifyEnableWalrusAllowedWithContext:completion:
verifyFidoKeyWithContext:completion:
verifyFidoKeyWithFidoContext:completion:
verifyFidoRecoveryWithContext:recoveryToken:completion:
verifyMasterKey:withContext:completion:
verifyRecoveryTransactionWithContext:verifySessionID:error:
vettedPrimaryEmail
wait
waitForRemoteViewServiceWithContext:client:uiWorkBlock:
waitForReply
waitForReplyTimeout
waitForSettingsWithContext:client:requireFullUICapability:allowRedirectToSettings:uiWorkBlock:
waitUntilAllOperationsAreFinished
waitUntilDate:
walrusContext
walrusDaemonService
walrusEnabled
walrusStatusLiveValue
walrusWebAccessEnabled
walrusWebAccessInfo
warmUpVerificationSessionWithCompletion:
warmUpVerificationSessionWithCompletionHandler:
webAccessEnabled
webAccessEnabledForAccount:
webAccessStatusLiveValue
webSessionIdentifier
webSessionUUID
wipeDatabase:
wrappedKeyData
wrappingKeyRKC
xpcConnection
zone
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v40@0:8@16@24@?32
v32@0:8@"AKFidoContext"16@?<v@?@"AKFidoRegistrationResponse"@"NSError">24
v32@0:8@"AKFidoContext"16@?<v@?@"AKFidoAuthenticationResponse"@"NSError">24
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"AKFidoAuthenticationResponse"@"NSDictionary"@"NSError">24
v40@0:8@"AKAppleIDAuthenticationContext"16@"NSString"24@?<v@?@"AKFidoAuthenticationResponse"@"NSDictionary"@"NSError">32
v24@0:8@16
v56@0:8@16@24@32@40@?48
v16@0:8
@"AKFidoAuthorizationController"
@"AKFidoDaemonServerHandler"
v32@0:8@16@24
@40@0:8@16@24@32
@24@0:8@16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableDictionary"
v32@0:8@16Q24
v40@0:8@16Q24@32
v24@0:8@"AKPushMessage"16
B24@0:8@"AKPushMessage"16
v32@0:8@"AKPushMessage"16Q24
v40@0:8@"AKPushMessage"16Q24@"NSDictionary"32
v24@0:8@"NSString"16
@32@0:8@16@24
v48@0:8@16@24@32@?40
B40@0:8@16@24^@32
@24@0:8Q16
@"<AKFollowUpItemFactory>"
@"<AKFollowUpProvider>"
@"AKPushMessage"
@"<AKFollowUpControllerServiceProvider>"
v24@0:8^@16
B36@0:8@16B24^@28
B32@0:8@16^@24
@32@0:8@16^@24
i16@0:8
B28@0:8i16^@20
@24@0:8^@16
@"AKSQLiteExecutor"
@"NSArray"
@"AKUserInformation"
@"NSDictionary"
@"AKCredentialRequestContext"
@48@0:8{?=[8I]}16
@24@0:8@?16
@"NSXPCConnection"
@"NSString"
@"BSAuditToken"
v24@0:8q16
@"AKAppleIDAuthenticationContext"
@"AKCircleRequestContext"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B28@0:8@16B24
q16@0:8
@"NSNumber"
@"AKMasterToken"
@"AKToken"
@"NSData"
i24@0:8^@16
v36@0:8B16@20@28
v32@0:8Q16@?24
v24@0:8@?16
@"AKCircleRequestPayload"
@"KCJoiningAcceptAccountCircleDelegate"
@"AKCAPiggybackReporter"
@"AKProximityController"
@"AKFuture"
@"KCJoiningAcceptSession"
@"AKConfiguration"
v20@0:8B16
@"AKAuthenticationServerResponse"
@"AKServerRequestConfiguration"
v40@0:8@16@24@32
@"NSURLRequest"24@0:8^@16
B32@0:8@"NSData"16^@24
@"NSDictionary"32@0:8@"NSData"16^@24
@"AKAppleIDAuthenticationContext"16@0:8
@"AKClient"16@0:8
v24@0:8@"AKClient"16
@36@0:8@16@24B32
B32@0:8@16@24
@"AKClient"
@"NSURL"
i32@0:8^Q16Q24
i32@0:8Q16Q24
i56@0:8Q16^*24^I32^*40^I48
i24@0:8^v16
i24@0:8Q16
i60@0:8Q16r*24I32^*36^I44^I52
i44@0:8I16r*20I28r*32I40
i20@0:8I16
i68@0:8Q16r*24I32^*36^I44^*52^I60
@"AKAuthenticationUILiaison"
@"AKRequestDispatcher"
@"AKCASatoriReporter"
v40@0:8@"NSString"16@"NSString"24@?<v@?@"AKPCSAuthContext"@"NSError">32
v24@0:8@?<v@?@"NSError">16
v32@0:8@"AKWalrusContext"16@?<v@?@"NSError">24
v56@0:8@"AKWalrusContext"16@"NSString"24@"NSString"32@"NSString"40@?<v@?@"NSError">48
@"AKDispatchingCalculation"16@0:8
@32@0:8d16Q24
d16@0:8
@"AKKeychainItemDescriptor"
@48@0:8@16Q24@32@?40
@"NSDate"
@?16@0:8
@"NSUUID"
v48@0:8@16@24B32B36@?40
v48@0:8@16@?24@32@40
@"<AKAuthenticationSurrogateManagerDelegate>"
@"AKAuthenticationSettingsLauncher"
@"NSLock"
@"AKAccountManager"
@"AKSurrogateAuthenticationIDGenerator"
@"NSObject<OS_dispatch_queue>"
@"AKInheritanceContext"
v24@0:8Q16
v24@0:8@"AKSQLiteExecutor"16
v40@0:8@16@24d32
Q24@0:8Q16
v28@0:8B16@?20
v24@0:8@?<v@?B@"NSError">16
v32@0:8@"NSData"16@?<v@?B@"NSError">24
v28@0:8B16@?<v@?@"AKAnisetteData"@"NSError">20
v32@0:8@"NSString"16@?<v@?@"AKAnisetteData"@"NSError">24
v32@0:8@"NSURLRequest"16@?<v@?@"AKAttestationData"@"NSError">24
@32@0:8Q16^@24
@40@0:8@16@24Q32
@"AKCustodianContext"
@28@0:8@16B24
@24@0:8^{_NSZone=}16
Q24@0:8@16
@"AKWebSessionPCSKeyProvider"
d24@0:8Q16
{mach_timebase_info="numer"I"denom"I}
@"AKDeviceListRequestContext"
v32@0:8@"<AKProximityEngine>"16@"CBManager"24
v24@0:8@"<AKProximityEngine>"16
v24@0:8d16
@"NSObject<OS_dispatch_source>"
@"<AKProximityEngine>"
@"AKAuthorizationUserResponse"
@"NSObject<OS_os_transaction>"
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v40@0:8Q16@24@?32
v52@0:8@16B24@28@36@?44
@"IDSService"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v48@0:8@"NSString"16@"NSString"24@"NSDictionary"32@"NSError"40
@"NSXPCListener"
@"APSIncomingMessage"
@"UNUserNotificationCenter"
^{__AppleIDAuthSupportData=}16@0:8
^{__AppleIDAuthSupportData=}
@"CoreTelephonyClient"
v24@0:8@?<v@?@"NSDictionary">16
v24@0:8@"NSError"16
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
@40@0:8@16@24@?32
@"<AKURLRequestProvider>"
@"<AKAuthHandler>"
@"AKKeychainManager"
@"AKDevice"16@0:8
v24@0:8@"AKDevice"16
@"AKDevice"
v32@0:8@"AKPiggybackRequestingController"16@?<v@?@"NSNumber"@"NSError">24
v40@0:8@"AKPiggybackRequestingController"16@"NSError"24@?<v@?@"NSNumber"@"NSError">32
v40@0:8@"AKPiggybackRequestingController"16@"NSNumber"24@?<v@?@"AKAuthenticationServerResponse"@"NSError">32
v32@0:8@"AKPiggybackRequestingController"16@?<v@?@"NSDictionary"@"NSError">24
v40@0:8@"AKPiggybackRequestingController"16@"NSError"24@?<v@?@"NSDictionary"@"NSError">32
B24@0:8@"NSDictionary"16
v40@0:8@"AKDServerUIContext"16@"NSDictionary"24@?<v@?@"AKAuthenticationServerResponse"@"NSDictionary"@"NSError">32
v44@0:8@16B24q28@?36
v40@0:8@16q24@?32
Vv24@0:8@?16
v36@0:8B16@20@?28
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSNumber"@"NSError">16
v40@0:8Q16@"NSString"24@?<v@?B@"NSError">32
v40@0:8@"NSHTTPURLResponse"16@"NSString"24@?<v@?B@"NSError">32
v40@0:8@"NSHTTPURLResponse"16@"AKAppleIDAuthenticationContext"24@?<v@?B@"NSError">32
v32@0:8@"NSString"16@?<v@?@"AKAppleIDServerResourceLoadDelegate"@"NSError">24
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"AKAppleIDServerResourceLoadDelegate"@"NSError">24
v44@0:8@"NSString"16B24q28@?<v@?B@"NSError">36
v44@0:8@"NSNumber"16B24q28@?<v@?B@"NSError">36
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"AKUserInformation"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"AKUserInformation"@"NSError">24
v40@0:8@"NSString"16@"AKUserInformation"24@?<v@?B@"NSError">32
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?Q@"NSError">24
v32@0:8@"AKDeviceListRequestContext"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"AKApplicationMetadataInfo"@"NSError">24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v32@0:8Q16@?<v@?B@"NSError">24
v48@0:8@"<NSSecureCoding>"16@"NSString"24@"NSString"32@?<v@?B@"NSError">40
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSError">24
v40@0:8@"NSString"16q24@?<v@?B@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?B@"NSError">32
Vv24@0:8@?<v@?B@"NSError">16
v32@0:8@"AKCircleRequestContext"16@?<v@?@"AKCircleRequestPayload"@"NSError">24
v32@0:8@"AKAccountRecoveryContext"16@?<v@?@"NSDictionary"@"NSError">24
v40@0:8@"NSString"16@"AKAccountRecoveryContext"24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@"NSDictionary"16@"AKAppleIDAuthenticationContext"24@?<v@?B@"NSError">32
v32@0:8@"AKFollowUpTearDownContext"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSError">16
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSDictionary"@"NSError">24
v36@0:8B16@"NSString"20@?<v@?@"NSDictionary"@"NSError">28
v32@0:8Q16@?<v@?@"NSDictionary"@"NSError">24
v64@0:8Q16@24@32@40@48@?56
v64@0:8@16@24@32@40@48@?56
v80@0:8@16@24@32@40@48@56@64@?72
v76@0:8@16@24@32B40@44@52@60@?68
v64@0:8@16@24@32@40@48^@56
B64@0:8@16@24@32@40@48^@56
v68@0:8@16@24@32B40@44@52@?60
v40@0:8@16Q24@?32
B48@0:8@16@24@32^@40
@32@0:8@16q24
@"NSObject<AKAppleIDAuthSupportProxy>"
@"AKAuthenticationTrafficController"
@"CUTReachability"
v24@0:8@"AKAuthorizationEndorserRapportClient"16
B24@0:8^@16
@"RPCompanionLinkClient"
@"AKAuthorizationEndorserRapportClient"
@20@0:8B16
@"NSString"20@0:8B16
B32@0:8@"NSString"16^@24
v36@0:8@16B24@?28
@"<AKPiggybackRequestingControllerDelegate>"
@"KCJoiningRequestSecretSession"
@"NSError"
v24@0:8@"SBSRemoteAlertHandle"16
v32@0:8@"SBSRemoteAlertHandle"16@"NSError"24
v40@0:8@"AKPrivateEmail"16@"NSError"24@?<v@?B@"NSError">32
@"SBSRemoteAlertHandle"
@"<AKServiceController>"24@0:8@"AKAppleIDAuthenticationContext"16
v40@0:8@"NSString"16@"NSString"24@?<v@?@"AKPrivateEmail"@"NSError">32
v32@0:8@"AKPrivateEmailContext"16@?<v@?@"AKPrivateEmail"@"NSError">24
v32@0:8@"AKPrivateEmailContext"16@?<v@?@"AKPrivateEmailContext"@"NSError">24
v44@0:8@16B24@28@?36
@32@0:8d16@24
@"NSCondition"
@"NSMutableArray"
@40@0:8@16@24d32
v32@0:8@"AKDevice"16@?<v@?B@"NSError">24
v40@0:8@"NSData"16@"AKDevice"24@?<v@?B@"NSError">32
v36@0:8B16@"AKDevice"20@?<v@?@"AKAnisetteData"@"NSError">28
v40@0:8@"NSString"16@"AKDevice"24@?<v@?@"AKAnisetteData"@"NSError">32
v40@0:8@"AKDevice"16@"NSURLRequest"24@?<v@?@"AKAttestationData"@"NSError">32
@"AKNativeAnisetteService"
@"AKAbsintheSigner"
@"AKAttestationSigner"
v32@0:8@"NSData"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"NSDictionary"16@"NSDictionary"24@?<v@?@"NSDictionary"@"NSData"@"NSError">32
B36@0:8@16@24B32
@40@0:8@16^B24^@32
@56@0:8@16@24@32Q40@48
v32@0:8@"<AKProximityEngineController>"16@"NSObject<OS_dispatch_queue>"24
@"<AKProximityEngineController>"16@0:8
@"NSObject<OS_dispatch_queue>"16@0:8
@"<AKProximityEngineController>"
v36@0:8@16S24@28
v24@0:8@"CBPeripheralManager"16
v32@0:8@"CBPeripheralManager"16@"NSDictionary"24
v32@0:8@"CBPeripheralManager"16@"NSError"24
v40@0:8@"CBPeripheralManager"16@"CBService"24@"NSError"32
v40@0:8@"CBPeripheralManager"16@"CBCentral"24@"CBCharacteristic"32
v32@0:8@"CBPeripheralManager"16@"CBATTRequest"24
v32@0:8@"CBPeripheralManager"16@"NSArray"24
v36@0:8@"CBPeripheralManager"16S24@"NSError"28
v40@0:8@"CBPeripheralManager"16@"CBL2CAPChannel"24@"NSError"32
@"CBPeripheralManager"
v40@0:8@16q24@32
v24@0:8@"CBCentralManager"16
v32@0:8@"CBCentralManager"16@"NSDictionary"24
v48@0:8@"CBCentralManager"16@"CBPeripheral"24@"NSDictionary"32@"NSNumber"40
v32@0:8@"CBCentralManager"16@"CBPeripheral"24
v40@0:8@"CBCentralManager"16@"CBPeripheral"24@"NSError"32
v40@0:8@"CBCentralManager"16q24@"CBPeripheral"32
v24@0:8@"CBPeripheral"16
v32@0:8@"CBPeripheral"16@"NSArray"24
v32@0:8@"CBPeripheral"16@"NSError"24
v40@0:8@"CBPeripheral"16@"NSNumber"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBService"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBCharacteristic"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBDescriptor"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBL2CAPChannel"24@"NSError"32
@"CBCentralManager"
v40@0:8@16^@24^@32
v32@0:8@"AKAuthorizationUserResponse"16@?<v@?@"AKAuthorization"@"NSError">24
v40@0:8@"AKAuthorization"16@"NSError"24@?<v@?B@"NSError">32
v24@0:8@?<v@?@"NSData"@"NSError">16
@24@0:8@"<AKURLRequestProvider>"16
v24@0:8@"<AKAuthHandler>"16
v24@0:8@?<v@?@"NSHTTPURLResponse"@"NSData"@"NSError">16
@"AKRequestDispatcher"16@0:8
v24@0:8@"AKRequestDispatcher"16
B32@0:8@16Q24
B32@0:8q16@24
q24@0:8@16
q32@0:8q16@24
@52@0:8@16@24@32@40B48
@68@0:8@16@24@32@40@48@56B64
^{__CFUserNotification=}52@0:8@16@24@32@40B48
^{__CFUserNotification=}68@0:8@16@24@32@40@48@56B64
v28@0:8@16B24
v32@0:8Q16@24
v40@0:8^{__CFUserNotification=}16@24@?32
@56@0:8@16@24@32@40@48
^{__CFUserNotification=}56@0:8@16@24@32@40@48
@44@0:8@16B24@28@36
v32@0:8^{__CFUserNotification=}16@?24
B24@0:8Q16
^{__CFUserNotification=}
d24@0:8d16
v24@0:8@"AKAuthorizationDaemonService"16
@"<AKAuthorizationEndorserRapportClientDelegate>"
@"RPCompanionLinkDevice"
@"AKAuthorizationDaemonService"
v44@0:8@16@24B32@?36
v44@0:8@"AKAppleIDAuthenticationContext"16@"AKClient"24B32@?<v@?B@"NSError">36
@56@0:8@16@24@32@40q48
@"AKAuthenticationSurrogateManager"
v28@0:8B16@20
v40@0:8q16@24@?32
v32@0:8q16@?24
v32@0:8q16@?<v@?B@"NSError">24
v32@0:8q16@24
v32@0:8q16@"NSString"24
v40@0:8q16@24@32
@"AKAuthorizationStoreManager"
v24@0:8B16B20
v28@0:8B16Q20
v36@0:8@16B24@28
^{sqlite3=}16@0:8
i24@0:8@16
B32@0:8@16@?24
q32@0:8@16^@24
v24@0:8^{sqlite3_stmt=}16
v32@0:8@16^{sqlite3_stmt=}24
^{sqlite3_stmt=}32@0:8@16^@24
B32@0:8^{sqlite3_stmt=}16^@24
^{sqlite3=}
@"<AKSQLiteMigration>"
v32@0:8@"AKCustodianContext"16@?<v@?@"AKCustodianSetupResult"@"NSError">24
v32@0:8@"AKCustodianContext"16@?<v@?@"NSError">24
v32@0:8@"AKCustodianContext"16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v32@0:8@"AKCustodianContext"16@?<v@?B@"NSError">24
v32@0:8@"AKCustodianContext"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"AKCustodianContext"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"AKCustodianContext"16@?<v@?@"AKTrustedContactsSyncResult"@"NSError">24
v32@0:8@"AKInheritanceContext"16@?<v@?@"AKBeneficiaryManifest"@"NSError">24
v32@0:8@"AKInheritanceContext"16@?<v@?@"NSError">24
v32@0:8@"AKInheritanceCLIContext"16@?<v@?@"AKBeneficiaryAliasSetupResult"@"NSError">24
@32@0:8q16^{sqlite3_stmt=}24
i32@0:8@16@24
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24q32q40q48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@36@0:8B16@20^@28
@"NSDictionary"32@0:8@"NSString"16^@24
@"NSDictionary"36@0:8B16@"NSString"20^@28
v48@0:8B16@20@28B36@?40
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"AKAuthorization"@"NSError">24
v40@0:8@"AKCredentialRequestContext"16@"AKAuthorizationUserResponse"24@?<v@?@"AKAuthorization"@"NSError">32
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"AKAuthorizationUserResponse"@"NSError">24
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"NSError">24
v32@0:8@"AKAuthorizationCredentialStateRequest"16@?<v@?q@"NSError">24
v32@0:8@"NSString"16@?<v@?q@"NSError">24
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"AKAuthorizationPresentationContext"@"NSError">24
v24@0:8@?<v@?@"NSSet"@"NSError">16
v32@0:8@"AKAuthorizationRevokeUpgradeContext"16@?<v@?B@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"NSData"@"NSError">24
v32@0:8@"NSXPCListenerEndpoint"16@?<v@?B@"NSError">24
v40@0:8@"AKAuthorization"16@"AKCredentialRequestContext"24@?<v@?B@"NSError">32
B32@0:8@16q24
v32@0:8@16q24
@"<AKAuthorizationClientProtocol>"
@"AKAuthorizationSessionManager"
@"<AKAuthorizationDaemonServiceDelegate>"
@"AKAuthorizationRapportClient"
@"AKAuthorizationEndorserRapportDiscovery"
@"AKAuthorizationContext"
@"<AKDServerUIDelegate>"
@"<AKAnisetteProvisioningClientProtocol>"
@"AAFService"
@"NSRunLoop"
@"NSTimer"
@"AKDispatchingCalculation"
@"<AKDispatchableRequest>"
@"AKExpiringCache"
^{__AppleIDAuthSupportTokenData=}32@0:8@16^@24
@56@0:8^{__AppleIDAuthSupportTokenData=}16@24@32@40^@48
^{__AppleIDAuthSupportTokenData=}32@0:8@"NSData"16^@24
@"NSDictionary"56@0:8^{__AppleIDAuthSupportTokenData=}16@"NSURL"24@"NSArray"32@"NSDictionary"40^@48
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
v40@0:8@16@24Q32
v36@0:8@16@24B32
@"APSConnection"
@"NSObject<OS_dispatch_semaphore>"
@"NSSet"
@"AKPCSAuthPushHandler"
v32@0:8@16^@24
B36@0:8^{sqlite3_stmt=}16@24i32
B40@0:8@16@24^^{__CFError}32
@"AKSRPContextHelper"
@32@0:8@16@?24
@"AKPiggybackRequestingController"
@"NSOperationQueue"
v24@0:8@"NSXMLParser"16
v48@0:8@"NSXMLParser"16@"NSString"24@"NSString"32@"NSString"40
v56@0:8@"NSXMLParser"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48
v40@0:8@"NSXMLParser"16@"NSString"24@"NSString"32
v56@0:8@"NSXMLParser"16@"NSString"24@"NSString"32@"NSString"40@"NSDictionary"48
v32@0:8@"NSXMLParser"16@"NSString"24
v32@0:8@"NSXMLParser"16@"NSData"24
@"NSData"40@0:8@"NSXMLParser"16@"NSString"24@"NSString"32
v32@0:8@"NSXMLParser"16@"NSError"24
@"AKWalrusContext"
@"ACAccount"
@"<AKAuthenticationContext>"
@"AKAuthorizationTVServicePresenter"
@"RPAppSignInService"
Starting Fido registration with context: %@
Starting Fido authentication with context: %@
Error starting fido auth: %@
Starting Fido recovery with context: %@
Error authorizing fido auth: %@
Error finishing fido auth: %@
%@: Starting to fetch icon for request context (%@)
%@: Determined request context (%@) is not eligible for remotely fetching icon (hasParameters: %@, hasData: %@, hasFetchContext: %@)
authkit/icon-fetching
Follow up push message is for an altDSID not signed in to iCloud: %@
Suppressing repair push for non-primary account
Refreshing follow ups for %@ with info %@
No body parameters in Follow Up response!
Failed to synchronize local follow up state: %@
Synchronizing local follow up state
Insertion Candidates: %@
Deleting: %@
Failed to clear existing follow ups: %@
Clearing Notifications: %@
Inserting: %@
Detected an item without an identifier, invalid payload
Updating existing item with identifier: %@
Existing item notification was previously dismissed, ignoring incoming notification
Incoming notification was forced, keeping it!
Found incoming sparse followups: %@
Found incoming full followups: %@
Unknown action, ignoring...
Sending tear down payload: %@
Pending Follow Up items matching tear down message id: %@
Pending Follow Up items: %@
Tear down follow up items: %@
Converting key to hashed value
Added:%@
Failed to persist private email with key:%@ error: %@
Remove:%@
Failed to remove private email with key:%@ error: %@
Failed to persist private emails list version with error: %@
Failed to persist private emails protocol version with error: %@
Tried to commit without listVersion. Info:%@
Failed to fetch authorized all private email with error: %@
State of app %@: %d.
XPC connection is nil, couldn't create remote object.
Unable to determine bundle ID of client %@ using NSBundle API. Falling back to CF.
Missing client info for circle request
Missing push token for circle request
Got malformed "%@" configuration info!
Got insecure "%@" configuration info!
Creating AKAuthenticationServerResponse with status: %@ contents: %@
Invalid/missing value for key alias: %@
Invalid value type for key: %@
Successfully obtained new CK from SRP
Successfully obtained new PRK from SRP
Encoded payload for federated auth: %@
No altDSID for auth server response. Could be bad.
No DSID for auth server response. Could be bad.
Invalid/missing value for key acname: %@
Invalid value for key ut: %@
Invalid value for key authType: %@
Invalid value for key Age of Majority: %@
Invalid value for key primary email vetted: %@
Invalid type for key orgType: %@
Invalid value for key orgType: %@
Invalid type for key orgName: %@
Invalid type for key isNotificationEmailAvailable: %@
Invalid type for key notificationEmail: %@
Updating with secondary auth response: %@
Trying to update an auth response without an existing _masterToken. Trouble waiting down the line.
Unable to update master token
Successfully obtained a new master token.
Successfully obtained a new PET.
Successfully obtained a new HB token.
Invalid format for service token in header %@
Updating token for service ID %@.
Successfully obtained new SLT from secondary auth
Successfully obtained new CK from secondary auth
Value for %@ is missing/invalid!
Successfully obtained new PRK from secondary auth.
No value for %@ header.
Invalid value value for %@ header: %@
Value for %@ is: %@
Invalid type for DSID value: %@
Will tear down an existing piggybacking session
Starting a piggybacking session
 CircleStep=%{public,signpost.telemetry:string1,name=CircleStep}@  enableTelemetry=YES 
BEGIN [%lld]: PiggyAcceptSessionForAcceptController  CircleStep=%{public,signpost.telemetry:string1,name=CircleStep}@  enableTelemetry=YES 
 CircleStep=%{public,signpost.telemetry:string2,name=CircleStep}@  Error=%{public,signpost.telemetry:number2,name=Error}d 
PiggyAcceptSessionForAcceptController
END [%lld] %fs:PiggyAcceptSessionForAcceptController  CircleStep=%{public,signpost.telemetry:string2,name=CircleStep}@  Error=%{public,signpost.telemetry:number2,name=Error}d 
Approving device could not accept piggybacking session: %@
%@: Processing physical proximity detection (%@) with replyContext (%@) for pushPayload (%@)
 PresenceMode=%{public,signpost.telemetry:number1,name=PresenceMode}d  enableTelemetry=YES 
BEGIN [%lld]: PiggybackingProcessPressenceForAcceptController  PresenceMode=%{public,signpost.telemetry:number1,name=PresenceMode}d  enableTelemetry=YES 
 Results=%{public,signpost.telemetry:string1,name=Results}@ 
PiggybackingProcessPressenceForAcceptControllerResults
EVENT [%lld] %fs:PiggybackingProcessPressenceForAcceptControllerResults  Results=%{public,signpost.telemetry:string1,name=Results}@ 
 Results=%{public,signpost.telemetry:string2,name=Results}@ 
PiggybackingProcessPressenceForAcceptControllerResultsOverrides
EVENT [%lld] %fs:PiggybackingProcessPressenceForAcceptControllerResultsOverrides  Results=%{public,signpost.telemetry:string2,name=Results}@ 
ReportedEnforceModeFailure
EVENT [%lld] %fs:ReportedEnforceModeFailure 
%@: Proximity check failed while handling push (%@)
 CheckPassed=%{public,signpost.telemetry:number2,name=CheckPassed}d 
PiggybackingProcessPressenceForAcceptController
END [%lld] %fs:PiggybackingProcessPressenceForAcceptController  CheckPassed=%{public,signpost.telemetry:number2,name=CheckPassed}d 
Will process message using session: %@ - %@
BEGIN [%lld]: PiggyClientInfoForAcceptController  CircleStep=%{public,signpost.telemetry:string1,name=CircleStep}@  enableTelemetry=YES 
PiggyClientInfoForAcceptController
END [%lld] %fs:PiggyClientInfoForAcceptController  CircleStep=%{public,signpost.telemetry:string2,name=CircleStep}@  Error=%{public,signpost.telemetry:number2,name=Error}d 
Did process message using session: %@ - %@
%@: Proximity was not detected and is being enforced
Failed to process data with error: %@
Approver is reporting as done...
Initializing accept session for DSID: %@
Failed to verify requesting secret, attempts: %@
%@: Determined proximity scanner should be started
%@: Unable to start proximity scanner with nil presenceSID from pushPayload (%@)
%@: Determined proximity scanner should not be started (wantsPresence: %@, circleStep: %lu, presenceSID: %@)
 enableTelemetry=YES 
PiggybackingDetectPresenceForAcceptController
BEGIN [%lld]: PiggybackingDetectPresenceForAcceptController  enableTelemetry=YES 
 FoundDevice=%{public,signpost.telemetry:number1,name=FoundDevice}d 
END [%lld] %fs:PiggybackingDetectPresenceForAcceptController  FoundDevice=%{public,signpost.telemetry:number1,name=FoundDevice}d 
Piggyback accepting controller has been released, proximity controller should have been invalidated
%@: Proximity controller (%@) found a match
%@: Proximity controller (%@) has been invalidated and prox was not detected
%@: Setting up proximity controller (%@) with presenceSID (%{mask.hash}@)
%@: Determined checking for proximity is needed
%@: Determined checking for proximity is not needed for circleStep (%lu) with controller (%@)
PiggybackingCheckPresenceForAcceptController
BEGIN [%lld]: PiggybackingCheckPresenceForAcceptController  enableTelemetry=YES 
%@: Proximity has been detected
%@: Proximity was not detected
END [%lld] %fs:PiggybackingCheckPresenceForAcceptController  FoundDevice=%{public,signpost.telemetry:number1,name=FoundDevice}d 
Authorization List version matches the local authorization list version, skipping update
Attempted to store incorrect authorization type
Cannot store an authorization credential with nil teamID/bundleID
Attempting to delete application with clientID: %@ from DB
Deleting application with clientID: %@ failed with error: %@
Application with clientID: %@ removed from database successfully
Revoking all applications failed with error: %@
Storing developer team failed with error: %@
Storing consented applications failed with error: %@
Failed to fetch applications to be revoked with error: %@
Failed to revoke applications with error: %@
Failed to fetch applications with error: %@, continuing with fetched applications if any...
Failed to fetch authorized client IDs with error: %@, continuing with the fetched clients if any...
Encountered error setting app list version: %@
Failed to update database version with error: %@
Attempting to build request without a URL, bad things to come...
Failed to sign the request with error: %@
Request: %@
Request Headers: %@
Request Body: %@
%@: Server returned no response, treating as success
%@: Cannot generate response dictionary for expected response type of UTF8String
%@: Unexpected error code value (%@) for key (%@)
%@: Server request failed with code (%@) and message (%@)
Server returned no response, treating as success
No body parameters in fetch user info response!
An error occurred performing request. Server message: %@
response type is JSON
Server request failed with error code: %i
Response Body: %@
Can't validate response for type: %lu
Invalid key %@ in server response: %@
AKAccountRecoveryController recoveryContext is valid %@:
Failed to retrieve recovery data with error. %@
Native recovery flow completed
Native recovery flow: recoveredInfo %@
Attempting to process native recovery response
shouldSendServerResponseForRecoveredInfo is true
responseContext: %@
Failed to fetch idMS completion url from provided info
We determined that we should not be resuming server UI flow at this point.  There is nothing else for us to do here.
Invalid native recovery server response detected
Internal or private access entitlement required but missing!
Missing identity token
Recovery token renewal will start.
Request to renew recovery token failed! Error: %@
Renewal of recovery token came back with HTTP status code: %@
Unexpected HTTP response code: %@
No basic auth URL!
MK was accepted
MK was accepted, but we did not get expected data... failing
Attempting to persist verifier
Failed to persist verifier with error: %@
Verifier persisted
Recovery context is valid...
Recovery context is invalid...
_recoveryContextFromServerInfo error: %@
Internal/Owner access entitlement required but missing!
Failed to verify enable walrus requirements with error: %@
response: %@
Failed to update walrus state with error: %@
response: %@
Failed to update walrus state - no ADP status header found in response.
Failed to update walrus state - either status code is not OK or the response is nil.
%@: Requesting attestation data for proxied auth context (%@)
%@: Failed to fetch attestation data for proxied auth context (%@) with error (%@)
%@: Fetched attestation data (%@) for proxied auth context (%@)
Context eligibility for piggybacking: %@
Client is eligible for piggybacking: %@
Client has requested password-only auth.
Client has requested a short-lived token.
Client has request a recovery PET.
Client is exempt from mandatory UI security upgrade.
Client is requesting password only auth. Security upgrade will not be offered.
Client is requesting ephemeral auth. Security upgrade will not be offered.
Client logging in for first time is using full AuthKit UI, security upgrade should be offered.
Cannot offer HSA2 upgrade on device with Apple ID login enabled.
Client has indicated that we should offer HSA 2.0 upgrade.
Performing ephemeral auth. Will not ask for ckgen or prkgen.
Sending prkgen: %@
The client indicated support for ckgen: %@
ckgen supported: %@
Will ask for ckgen.
Will ask to stash escrow PRK
Context has provided Anisette data for companion device.
Looking to set companion Anisette data in CPD.
Context has provided Anisette data for proxied device.
Grabbing Anisette data from proxied device.
Client has request a custodian setup token.
Client has request a beneficiary setup token.
Context has masterKey set! Setting masterKeyIsEligible
Context has a proxied bundle id set!
Context has set masterKeyAsSecondFactor
Context indicates that dependent tokens are being requested by parent account
Context indicates we are performing reauth for existing service
Surrogate has been registered for ID %@: %@
Begin out-of-process authentication with surrogate ID %@
Taking user to Settings/System Preferences for auth UI...
UI surrogate %@ registered.
Whoa! UI surrogate is checking in with an unexpected identifier %@.
UI surrogate with ID %@ has already checked in.
UI surrogate client %@ with surrogate ID %@ is checking in.
Context with identifier %@ has no registered UI surrogate.
UI surrogate for client %@ with surrogate ID %@ is checking out.
Waiting for UI surrogate for client %@ with surrogate ID %@ to check in...
Stop waiting for UI surrogate for client %@ with surrogate ID %@!
Error: Attempted to clear surrogate that is no longer in progress with ID %@.
Settings redirect not supported by context
Could not find heartbeat token for account %@
Inheritance Server request failed with error code: %i
%@ Database Migration requested from version: %i
Building database with schema version: 1
Upgrading database to schema version: 2
Upgrading database to schema version: 3
Upgrading database to schema version: 4
Client requested that we attempt provisioning...
Provisioning succeeded!
Unable to get Anisette data even after provisioning was attempted. Error: %@
Provisioning failed. No Anisette for you today! Error: %@
Skipping Anisette provisioning, per client request.
%@: Fetching peer attestation data for request (%@)
ADIGetIDMSRouting failed! Error: %@
Looking for Anisette data...
The DSID %@ is not provisioned for Anisette.
ADIOTPRequest failed. Error: %@
Anisette Info: mid - %@ otp - %@ euid - %d localUserUUID %@
Kicking off Anisette provisioning....
Anisette is already provisioned!
Unable to create start-provisioning URL request!
Starting provisioning with headers: %@
Start provisioning request failed! Error: %@
Unexpected response class! %@
Start provisioning response code: %@
Start provisioning response body: %@
No response body for start provisioning request!
No SPIM!
Destroying provisioning context.
ADIProvisioningStart failed. Error: %@
ADIProvisioningStart succeeded!
Unable to create end-provisioning URL request!
End provisioning with headers: %@
End provisioning request failed! Error: %@
End provisioning response code: %@
End provisioning response body: %@
No response body for end provisioning request!
No PTM!
No TK!
No routing info!
ADISetIDMSRouting failed! Error: %@
ADIProvisioningEnd failed. Error: %@
ADIProvisioningEnd succeeded!
Signing with BAA headers for urlKey: %@
Failed to get signing headers, error: %@
Client did not provide SIM data!
Resyncing Anisette provisioning data...
Cleaning up ADI session objects...
ADISynchronize failed. Error: %@
ADISynchronize succeeded!
ADIGetIDMSRouting failed with error code: %@
Unable to create sync-provisioning URL request!
Sync provisioning request failed! Error: %@
Sync provisioning response code: %@
No response body for sync request!
Response status details: %@
Unexpected response format under Status key!
Server sync failed! Error Code: %@
Server sync looks like it succeeded.
We've been given new R-Info.
Anisette sync is complete!
Erasing Anisette provisioning data...
Erase failed! Error: %@
Erasing Anisette data succeeded!
Nil value for startProvisioningURL!
Nil value for endProvisioningURL!
Nil value for syncAnisetteURL!
Using QA Anisette DSID.
Using some other non-prod Anisette DSID.
Setting request header for Custodian Sync Action
Custodian Recovery request is being created without a push token
There was no custodian recovery session ID. This should only happen on Start CLI
Custodian Recovery body for request: %{private}@
Custodian Initiation / Revocation request is being created without a custodian UUID
Finalize custodian setup request is being created without a custodian UUID
Update recovery key request is being created without a custodian UUID
Update recovery key request is being created without a wrappingKeyRKC
There was no custodian recovery session ID for embargo end feedback call, request will probably fail
There is no altDSID in recovery feedback call, request will probably fail
TrustedContactsDataSync body is being created without a last data sync timestamp for custodian context: %@
Registering for XPC activity: %s...
XPC activity says os got upgraded, running Post Install Job
XPC activity for post install complete
XPC activity registration complete. State: %@.
AKURLBagService attempt to clearCache after OS update
Satori Warmup for Post Install complete with result: %i
AKAppleIDCheckInHelperService attempt performHeartbeatCheckIn after OS upgrade...
AKAppleIDCheckInHelperService finished performHeartbeatCheckIn after OS upgrade...
Updating context for new service request: %@
Failed to update walrus web context %@ with error %@
Walrus web context %@ updated successfully.
Already sent AKCA event: %@
Sending Report: %@ (time: %f)
%s (%d) called
%@: Preparing proximity engine (%@)
%@: Activating proximity engine (%@)
%@: Invalidating proximity engine (%@)
%@: Encountered unexpected non-NULL engineTimeoutSource when attempting to schedule new timer
%@: Creating engine timeout source (%f s)
%@: Failed to create engine timeout source
%@: Engine timeout source has been registered
%@: Engine timeout source has been cancelled
%@: Engine timeout source event handler called
%@: Cancelling engine timeout source
%@: Manager (%@) did update to state (%lu)
%@: Manager (%@) reported that BLE is unsupported on this device
%@: Manager (%@) reported that we are unauthorized to use BLE
%@: Manager (%@) reported powered-on state
%@: Proximity engine (%@) was activated
%@: Proximity engine (%@) was invalidated
Session ID is nil for context: %@
Number of active sessions: %lu
Looking for client with session ID: %@
Session: %@ = %@
Found an exising context with session ID(%@), %@
AuthorizationSessionManager - Client %@ lacks a bundle ID!
AuthorizationSessionManager - should clear request: %@
AuthorizationSessionManager - Processing clearance request: %@
AuthorizationSessionManager - Adding %@ to list of authenticating apps
AuthorizationSessionManager - Created OSTransaction
Authorization Session - Denying clearance for %@
AuthorizationSessionManager - Queued end authentication clearance block for %@
AuthorizationSessionManager - Executing end authentication clearance block for %@
AuthorizationSessionManager - Nilled out OSTransaction
AuthorizationSessionManager - Removing %@ from authenticating list
AuthorizationSessionManager - Client bundle ID is nil.
AuthorizationSessionManager - No active request for %@
AuthorizationSessionManager - _continuationRequestIdentifier does not match the requestIdentifier
AuthorizationSessionManager - Active request session timed out for %@
AuthorizationSessionManager - Setting user response %@
 for context - %@
AuthorizationSessionManager - No active session for %@
AuthorizationSessionManager - Getting user response for context - %@
Listening for messages from paired device...
Looing for Anisette data on IDS-paired device...
Paired device Anisette info: %@
Unable to obtain Anisette data from IDS-paired device: %@
Error archiving request %@
Peer attestation fetch didSucceed:%d data:%@ error:%@
Error deserializing attestation data: %@
Proxied attestation fetch - %@
Unable to obtain Attestation data from IDS-paired device: %@
Preparing message with command %@...
Command message ready for sending to to paired device: %@
Setting paired device.
IDSService sendMessage method failed. Error: %@
Message is on its way to paired device with transport ID: %@
Found active tinker device
Preparing reply to %@...
Will send reply message to paired device: %@
IDSService sendMessage method failed to send reply. Error: %@
IDS callback did not provide a message identifier!
Message with transport ID %@ could not be sent! %@
No internal message ID exists for transport ID %@, so we're ignoring the send failure.
Success sending message with Transport ID %@!
Received reply message from paired device: %@
Received command message from paired device: %@
Incoming message lacks a valid AuthKit-assigned UUID. Replying to paired device will not be possible.
Handling command from paired device: %@
Incoming message lacks a valid command.
Error unarchiving request %@
Error while serializing attestation data %@
Unknown command received %@!
Reply message lacks reply-to field.
Unable to find pending completion block under ID: %@
Calling out to pending completion handler for ID %@...
Paired device changed while %@ remote commands were pending.
Acknowledged!
akd is starting up...
akd is shutting down...
Building %@ database with schema version: 1
Migrating %@ database to schema version: 2
Migrating %@ database to schema version: 3
Failed to delete key: %@
Migrating %@ database to schema version: 4
Migrating %@ database to schema version: 5
Redirecting to AuthKitUIService, to present basic login UI with context: %@
Context data is nil: %@
Trying to launch application with Scene Delegate
Unable to launch application: %@ with the error: %@
Successfully launched process: %@
Failed to launch application: %@ with error: %@
Call completion with authentication result with presentation completion: %@
Invalid value for key %@ in push message: %@
AKPushMessage: Piggybacking requestor presenceSID was expected but not found (%@)
alert parameters are not valid: %@
Push message has invalid command %@. Ignoring!
Push message is missing a transaction ID. Ignoring!
Can't post notification without an identifier.
User notification to be posted - %@
Adding notification request.
Failed to post notification with error: %@
Notification requeste added successfully.
Populating results with bundle info: %@
Failed to fetch subscription info with error: %@
%@: Failed to build URL request using provider (%@) with error (%@)
%@: Failed to execute URL request (%@) with 401 error (%@), will attempt to reauth and execute again
%@: Adding additional headers (%@) to URL request (%@)
%@: Executing URL request (%@)
%@: Reauthenticate succeeded, attempting to execute URL request again
%@: Failed to reauthenticate with error (%@)
%@: Unable to reauthenticate with nil authenticationHandler
Saving PCS auth context %@.
PCS auth context saved successfully in keychain.
Failed to save pcs auth context in keychain with error: %@
Updating PCS auth context %@.
PCS auth context updated successfully in keychain.
Failed to update pcs auth context in keychain with error: %@
Fetching PCS auth context with ID %@.
Keychain item found for given auth context. Checking if it's still valid...
Failed to unarchive data of class AKPCSAuthContext with error: %@
Context expired and will be removed from keychain.
Failed to fetch pcs auth context from keychain with error: %@
Failed to archive data with error: %@
Failed to fetch keychain items with error: %@
Failed to delete pcs credentials from keychain with error: %@
All pcs credentials deleted successfully from keychain.
Internal access entitlement required but missing!
No altDSID was provided.
No existing IDMS account for altDSID %@
No DSID was provided.
No existing IDMS account for DSID %@
Internal/Private/Write access entitlement required but missing!
Service type %@ is not valid.
Told to mark service %@ as not using account, but already not using!
Marking service %@ as %@ using account %@.
Global signout.
Removing unusued IDMS account %@...
Failed to remove account %@. Error: %@
Successfully removed account %@.
Exception caught: %@
Internal/Private access entitlement required but missing!
Failed to fetch devices with error: %@
Fetched device list for %@
Owner access entitlement required but missing!
Owner/Internal access entitlement required but missing!
Starting WarmUp verification ...
Invalid configurationInfo identifier provided: %@
Missing parameter altDSID!
Could not find configurationInfoURL in URL bag!
Could not find IdMS account with altDSID %@
Failed to serialize configuration info: %@
Failed to encode configuration info!
Set configuration info request failed: %@
Set configuration info response not of expected class!
Set configuration info completed with HTTP status code: %@
Invalid configurationInfo identifiers type provided: %@
Invalid configurationInfo identifiers provided: %@
Could not find fetchConfigDataURL in URL bag!
Fetch configuration info request failed: %@
Fetch configuration info response not of expected class!
Fetch configuration info completed with HTTP status code: %@
No body parameters in fetch configuration info response!
An error occurred fetching configuration info. Server message: %@
Fetch configuration info completed with keys: %@
Fetching login code
BEGIN [%lld]: UpdateStateWithAuthResponse  enableTelemetry=YES 
Write access entitlement required but missing!
The provided URL response is not formatted as a final auth response.
No Apple ID was provided.
No existing IDMS account for Apple ID: %@
 Error=%{public,signpost.telemetry:number2,name=Error}d 
UpdateStateWithAuthResponse
END [%lld] %fs:UpdateStateWithAuthResponse  Error=%{public,signpost.telemetry:number2,name=Error}d 
Updating IDMS account %@ with external server auth response...
Unable to update IDMS account %@. Error: %@
Successfully updated IDMS account %@
No GS service tokens to update. Done.
External auth response contains GS service tokens. Will persist those...
Asked to validated code: %llu
AuthKit master token is missing! Error: %@
AuthKit account altDSID is missing.
Unable to get master token string value!
Attaching proxied device Anisette data: %@
Attaching proxied device Anisette data.
Validate-code request failed! Error: %@
Vetting validation completed with HTTP status code: %@
No body parameters in code validation response!
Missing key %@ in server response.
Code is valid!
Code is invalid!
An error occurred validating the code. Server message: %@
A vetting token was not provided.
altDSID was not provided.
Vetting-token validation request is ready to go.
Request to validate vetting token failed! Error: %@
Code validation completed with HTTP status code: %@
Seems like our master token has expired.
Unusual ACAccount with nil username encountered: %@
Server says vetting token is valid.
Server says vetting token is invalid.
altDSID required but missing!
Failed to fetch eligibility with error: %@
Fetched eligibility state for %@
Check-in with IdMS requested for account with altDSID: %@
Performing liveness check-in for account: %@
No IdMS account found for altDSID: %@
Asked to report signout from service %@ for Apple ID: %@
No IDMS account for Apple ID: %@
Asked to report signout for all Apple IDs
Internal write access entitlement required but missing!
No IDMS accounts to sign out
Sign out failed for account %@ with error: %@
Sign out succeeded for account %@
The UI Surrogate is finally here!
Overriding limited UI context into silent preferred auth
Overriding full UI context into silent preferred auth, silent is not supported...
Requesting clearance to begin auth with context %@...
Cleared to begin auth with context %@!
Nothing to do, since the authenticating context was a UI Surrogate.
Cleared to end auth with context %@.
Starting security upgrade flow
Security upgrade flow completed with error - %@
Should not continue. Calling completion with just error.
Should continue with results. Update account with results and proceed.
Current context requires interactive auth. Trying biometric/passcode first.
Current context permits passwordless auth.
Passwordless authentication failed due to service error, bailing...
Passwordless authentication failed due to proxy failure, bailing...
Passwordless authentication resulted in a failed interactive flow, bailing...
Passwordless authentication force failed by client, bailing...
Silent auth did not provide results. Interactive auth not allowed. Stopping right now.
Canceling auth attempt because credential access is unavailable.
All non-interactive auth options failed. Trying interactive auth.
Biometric/Passcode validation not possible for current context.
Collecting biometric/passcode validation...
Biometric/Passcode Validation failed with error %@. We need password auth flow...
Upgrade token found on context, will attempt token upgrade.
Token upgrade requires secondary action.
Will attempt silent auth since the context is asking for service tokens.
Silent auth not allowed due to username being editable
Accounts not available, skipping IDMS account lookup...
Looking for IDMS accounts to suggest using...
Nothing found.
Telling client to ask the user about using Apple ID: %@
Client decision to keep using: %@. Error: %@
Rejecting CK auth because username is marked as editable
No existing IDMS account for %@
Found an existing IDMS account %@
We don't have a CK for %@ (Error: %@), so that's that.
Username and password already provided by context. One shot at non-interactive auth.
One shot at non-interactive failed, handling failure...
Interaction requested but network is unreachable, bailing...
Context did not provide a username and/or password or interaction requested.
Failed to refresh context locally with error: %@
Failed to refresh context remotely with error: %@
Client is asking for username only auth and provided a username... lets see how this goes
One shot at passwordless auth failed, handling failure...
Collecting user credentials...
No altDSID found on context. Checking DSID..
Context provided username is different %@(context) vs %@(account) for client %@. Trusting AuthKit account username.
No altDSID on context. Nothing to validate.
Last account info validation was less than 24 hours ago. Skipping.
Account info fetch failed. Skipping validation.
No account names came back from IDMS for altDSID: %@
Username %@ is valid for altDSID: %@
Username %@ is not valid for altDSID: %@. Setting username to %@
More than 24 hours since the last authentication mode was obtained, fetching authentication mode...
Less than 24 hours since the last authentication mode was obtained, using last known authentication mode
No AuthKit account and authentication mode is unknown, fetching authentication mode...
Skipping refresh, authmode is known: %@
Unable to dismiss UI on client side! Error: %@
User forgot their credentials.
User requested a new Apple ID.
User canceled. Aborting auth.
User has incompatible devices. Aborting auth.
Unable to show prompt. Aborting auth.
User request client alternate action. Aborting auth.
User chose to try again, aka retry auth.
Something bad happened! %@
Successfully obtained password. Time for SRP auth.
Asking client to dismiss basic login UI. SRP Passthrough.
Initiating credential recovery
Unable to dismiss UI on client side even though auth is complete! Error: %@
Asking client to dismiss basic login UI. SRP Success.
Prompt should be kept alive, retry auth.
Username was not valid for passwordless auth, requesting more information
Username was not entered.
Password was not entered.
Another attempt at getting basic login info has completed!
Auth attempt %@ has failed. Incrementing counter...
Maximum password auth attempts have been reached.
Attempting to show login error: %@
Starting piggybacking session
Looks like we're dealing with an HSA account.
Attempting passwordless auth with IDMS account %@...
Passwordless auth failed: %@
No continuation capable IDMS account found for Apple ID: %@
Faking IDMS auth success!
SRP auth attempted with an invalid context: %@ - %@ - %@
Secondary action not supported
Using server provided Apple ID.
Using client provided Apple ID.
No username provided, this can't be good...
Successful SRP did not return a PET to client.
Providing short-lived token
Providing identity token
Providing beneficiary setup token
Providing raw password to an internal client.
Providing PRK to an internal client.
Unable to reach client to call shouldContinueWithAuthenticationResults
Asking %@ should continue?
Force-failing auth, because client says to.
Will continue handling successful auth...
Unable to auth with IDMS but client says to suppress error and continue.
Updating AK account...
Will check in with IDMS about push registration...
Failed to check in with IDMS! Error: %@
Successfully checked in with IDMS.
Creating a new authkit account <%{private}@><%{private}@>
Fetched existing AK account: %{private}@
No service IDs were provided, so AKAuthenticationIDMSTokenKey will be left empty.
Updating service tokens is not available for Dependent tokens requests.
Fetching tokens for service IDs %@ failed. Error: %@
Fetching tokens for service IDs %@ succeeded!
We have no token for these services: %@. This can't be good.
Context not appropriate for updating persistent tokens. All done then!
BEGIN [%lld]: PersistGrandslamTokens  enableTelemetry=YES 
No AIDA account for altDSID %@ was found. Searching by Apple ID: %@
Creating new AIDA account for Apple ID: %@
Updating AIDA account %@ with properties and tokens.
Successfully saved AIDA account.
Failed to save AIDA account! Error: %@
PersistGrandslamTokens
END [%lld] %fs:PersistGrandslamTokens  Error=%{public,signpost.telemetry:number2,name=Error}d 
Updating token for service with ID %@...
GS service token with ID %@ marked as requiring TouchID.
Failed to update token for %@ in keychain. Error: %@
Cannot perform secondary auth action for non-interactive context.
Secondary action is GS endpoint. Returning the response as-is so that handler can perform the action.
Trying to show server UI for the response.
Context has masterKeyEligible set and server response indicates secondary action is required
Attempting second SRP for masterKeyAsSecondFactor
Server response indicates fido auth is required.
Secondary action server URL is missing
Failed to get second-factor. Error: %@
Successfully obtained second-factor code: %@.
Asking client to show alert for error: %@
Login code successfully validated! Updating auth tokens...
Unsupported prompt type encountered: %d
There was no URL in the bag for key: %@
Request response is not of expected class! %@
Starting to clear session cache.
Error starting fido auth flow: %@
Received Fido start auth with context: %@
Error presenting fido auth prompt: %@
Server says to show UI at URL key: %@
 ActionKey=%{public,signpost.telemetry:string1,name=ActionKey}@  enableTelemetry=YES 
ServerDrivenSecondaryAction
BEGIN [%lld]: ServerDrivenSecondaryAction  ActionKey=%{public,signpost.telemetry:string1,name=ActionKey}@  enableTelemetry=YES 
END [%lld] %fs:ServerDrivenSecondaryAction  Error=%{public,signpost.telemetry:number2,name=Error}d 
Asking client to start showing native UI
AKAppleIDAuthenticationService serverUIContext additionalData: %@
Retrieved recovery data for server. Server Response: %@ and recoveryData: %@
No usable IDMS account for Apple ID: %@
Attempting silent service-token auth with IDMS account %@...
No master token available for silent auth on account %@.
Fetching tokens for service IDs %@ failed! Error: %@
Fetching tokens for service IDs %@ succeeded.
Asked to fetch service token without a serviceID!
Asked to fetch service token without any master token data!
BEGIN [%lld]: FetchGrandslamTokens  enableTelemetry=YES 
Failed to create AppleIDAuthSupportTokenRef from exteral form. Error: %@
FetchGrandslamTokens
END [%lld] %fs:FetchGrandslamTokens  Error=%{public,signpost.telemetry:number2,name=Error}d 
AppleIDAuthSupportCopyAppTokensOptions failed with error: %@
Unable to find info for token with ID: %@
END [%lld] %fs:FetchGrandslamTokens 
User does not have all their credentials, so we're going to iForgot...
iForgot
BEGIN [%lld]: iForgot  enableTelemetry=YES 
END [%lld] %fs:iForgot  Error=%{public,signpost.telemetry:number2,name=Error}d 
iForgot reported success, but no username came back to akd.
iForgot reported success, but no password came back to akd.
iForgot succeeded, and we have a new auth server response!
iForgot succeeded, but we do not have a new auth server response. Doing SRP auth...
iForgot flow failed! Error: %@
Starting iForgot flow...
iForgot flow was triggered by push notification. Will try to use dedicated URL.
There was no iForgot URL in the bag!
Starting repair...
Failed to find matching account for context! Error: %@
There was no repair URL in the bag!
Repair flow reported success, but no auth response came back to akd.
Repair flow succeeded, and we have a new auth server response!
User wants a new Apple ID to auth with...
CreateNewAppleID
BEGIN [%lld]: CreateNewAppleID  enableTelemetry=YES 
END [%lld] %fs:CreateNewAppleID  Error=%{public,signpost.telemetry:number2,name=Error}d 
Calling recordUserAcceptedAgreementVersion with %@
New Apple ID flow reported success, but no username came back to akd.
New Apple ID flow reported success, but no password came back to akd.
New Apple ID flow reported success, but no auth response came back to akd.
New Apple ID creation succeeded, and we have a new auth server response!
New Apple ID flow failed! Error: %@
Starting Child Account creation flow...
Starting Apple ID creation flow...
There was no creation URL in the bag!
Change password flow failed! Error: %@
Change password flow reported success, but no username came back to akd.
Change password flow reported success, but no password came back to akd.
Change password flow succeeded, and we have a new auth server response!
Change password flow succeeded, but we do not have a new auth server response. Doing SRP auth...
Starting password change flow...
Change password flow started without account!
Could not find URL for changePassword!
Password change flow authentication failed with error, but we'll try anyways: %@
Prompting for piggybacking code
Failed to dismiss second factor UI %@
Piggybacking session failed with error: %@
Unable to dismiss client-side second-factor UI. Error: %@
Server UI came back with error: %@
Piggybacking escape hatch server UI finished, with error: %@
Detected a piggy service type, alias for iCloud
Setting serviceType %@ inUse for account %@
Server auth response did not contain HB token!
Server auth response did not contain CK.
Server auth response contained a CK, saving to the credential for account (%@)
Server auth response did not contain PRK.
Stashing the PRK away for escrowing for account: %@
We got a PRK from the server, but we have no passcode... discarding
Failed to update AuthKit account! Error: %@
We are running in recovery. Skip ACAccount update.
This auth is ephemeral. Skip ACAccount update.
This is a proxy auth. Skip ACAccount update.
This is a child account creation flow. Skip ACAccount update.
This auth is for a dependent. Skip ACAccount update.
Starting to teardown follow ups
This device cannot be an authorization endorser discovery.
Authorization Endorser discovery deactivated.
Authorization Endorser already in progress, ignoring device found. {device=%@}
 CleanSession=%{public,signpost.telemetry:number1,name=CleanSession}d  enableTelemetry=YES 
PiggybackingRequestingInitiateSession
BEGIN [%lld]: PiggybackingRequestingInitiateSession  CleanSession=%{public,signpost.telemetry:number1,name=CleanSession}d  enableTelemetry=YES 
END [%lld] %fs:PiggybackingRequestingInitiateSession  Error=%{public,signpost.telemetry:number2,name=Error}d 
Initiating a piggybacking flow for transaction id: %@
BEGIN [%lld]: PiggyInitialMessageData  enableTelemetry=YES 
 Error=%{public,signpost.telemetry:number1,name=Error}d 
PiggyInitialMessageData
END [%lld] %fs:PiggyInitialMessageData  Error=%{public,signpost.telemetry:number1,name=Error}d 
Handshake code prompt finished
Handshake request failed with error: %@
Handshake request finished
Waiting for handshake condition with state: %@ - %@ - %d - %d
Finished waiting for handshake condition with state: %@ - %@ - %d - %d
Code entered, but no handshake has been completed
Starting to process handshake results
We got results, finish the flow
User elected to escape before handshake completed
We did not capture a code, completing with escape results
Handshake failed with error: %@
Code collected, starting to wait for: %@
Piggybacking completion with final process response: %@ - %@
Clearing requesting controller state
 CircleStep=%{public,signpost.telemetry:number1,name=CircleStep}d  enableTelemetry=YES 
PiggybackingRequestingProcessPushPayload
BEGIN [%lld]: PiggybackingRequestingProcessPushPayload  CircleStep=%{public,signpost.telemetry:number1,name=CircleStep}d  enableTelemetry=YES 
END [%lld] %fs:PiggybackingRequestingProcessPushPayload  Error=%{public,signpost.telemetry:number2,name=Error}d 
%@: Proximity is being enforced and was not detected by accepting device (escrow fallback is expected)
User entered a new code after verificaiton failure
User succesfully escaped after verification failure
User escaped with erro after verification failure
We failed to handle verification, passing through the failure
Starting to process request message
BEGIN [%lld]: PiggyClientInfoForRequestController  enableTelemetry=YES 
PiggyClientInfoForRequestController
END [%lld] %fs:PiggyClientInfoForRequestController  Error=%{public,signpost.telemetry:number1,name=Error}d 
Requesting session indicated that we are DONE
%@: Will not attach duplex session to authentication results
Passing duplex session
Duplex session creation failure
Requesting session processing failure: %@
PiggybackingRequestingReplyWithContext
BEGIN [%lld]: PiggybackingRequestingReplyWithContext  enableTelemetry=YES 
END [%lld] %fs:PiggybackingRequestingReplyWithContext  Error=%{public,signpost.telemetry:number1,name=Error}d 
Attempting to determine whether we should continue.
Should continue came back with error: %@
Should continue: %d
Initializing requesting session: %@
Using a previously cached code or error: %@ - %@
Validating Code: %@
Login code validated
Code validated with result: %d - %@
PiggyCodeCollect
BEGIN [%lld]: PiggyCodeCollect  enableTelemetry=YES 
Prompting user for piggybacking code
END [%lld] %fs:PiggyCodeCollect  Error=%{public,signpost.telemetry:number1,name=Error}d 
Secret collection failed with error: %@
User wants to continue using current piggybacking session
Didn't get a code with error: %@
Captured code: %@ - %@
%@: Determined proximity advertiser should be started
%@: Unable to start proximity advertiser with nil presenceSID from pushPayload (%@)
%@: Determined proximity advertiser should not be started (wantsPresence: %@, circleStep: %lu, presenceSID: %@)
%@: Determined proximity advertiser should be stopped (circleStep: %lu)
%@: Determined proximity advertiser does not need to be stopped (circleStep: %lu, proximityController: %@)
AKPiggybackRequestingController: Proximity controller has been invalidated
AKPiggybackRequestingController: Invalidating proximity controller.
AKPiggybackRequestingController: Proximity controller is nil.
Context info %@
Received: %@ (%@)
Alert handle (%@) activated.
Alert handle (%@) deactivated.
Alert handle (%@) deactivated by request.
Alert handle (%@) interrupted with error: %@
Overriding Settings landing spot because the Apple ID %@ is used for iCloud.
Opening internal URL: %@
Error launching Preferences: %@
Invalid Apple ID service type %@. Falling back to iCloud.
No account found with given altDSID: %@, failing private email lookup
No match found with given altDSID: %@ for key %@ [bundle:%@]
Email found for %@: %@ [bundle:%@]
Insufficient entitlement for altDSID: %@, failing hme context fetch
No valid account fount for altDSID: %@, failing hme fetch
[ios] requesting for %@
Insufficient entitlement for altDSID: %@, aborting register private email
No valid account found for altDSID: %@, aborting register private email
Account not eligible to perform register Private Email - altDSID: %@
Insufficient entitlement for context: %@, failing hme context fetch
No valid account found for context: %@, failing hme context fetch
No altDSID in context: %@, failing hme context fetch
Updated context is nil for: %@, failing hme context fetch
Insufficient entitlement for altDSID: %@, aborting listAllPrivateEmails
Failed to fetch private emails for altDSID %@, error - %@
Private Emails found: %@
Unable to call back to client! Error: %@
Owner/Private access entitlement required but missing for removePrivateEmailKey!
Owner/Private access entitlement present for removePrivateEmailKey!
Owner/Private access entitlement for removePrivateEmailKey error %@
Owner/Private access entitlement for removePrivateEmailKey SUCCESS
Presenting UI for key %@
Presented UI! (%@, %@)
Failed to register private email (%@) with error: %@
Successfully registered Private Email
response: %@
data: %@
Failed to store fetched email (%@) error:%@
Owner detected!
Internal request made by internal client? %@
Unable to get Anisette data for %@! Error: %@
%@: Fetching attestation data for device (%@) with request (%@)
%@: Calling anisette service (%@) for peer attestation data
%@: Unable to grab attestation data for device (%@) with request (%@) using anisette service (%@)
Denied access to Anisette data to non-internal client.
Invalid target %@ for fetching Anisette data.
Invalid target %@ for fetching legacy Anisette data.
Client lacks entitlement to provision Anisette!
Invalid target %@ for provisioning Anisette data.
Client lacks entitlement to resync Anisette info!
Invalid target %@ for resyncing Anisette data.
Client lacks entitlement to erase Anisette provisioning!
Invalid target %@ for erasing Anisette data.
Denied access to Signing data to non-entitled client.
Starting to fetch user info for %@
Failed to fetch info with error: %@
Fetched user info for %@
Fetch user info returned apple managed account fetchError: %@
Fetched authMode for %@
Handling push with command AKPushMessageCommandAccountInfoChanged...
Not updating, since primary account does not match
failed to clear DB on protocol change - %@
Couldn't upgrade the stored protocol version - %@
Starting to sync private emails list for %@
Could not create service controller
Update passedVersion=[%@]
Update currentVersion=[%@]
Failed to update from push notification, error=%@
IDMS sent reset key to revoke authorization Database
Encountered error while revoking authorization database: %@
Authorization database revoked successfully
We got an appListVersion with the user info new version: %@ 
old version: %@
Unable to fetch authorized application list with error: %@
Unable to refresh because Nil altDSID
Unable to refresh because account name list is nil/empty.
Updating cached properties for Apple ID accounts with altDSID: %@
Username of account %@ is no longer a valid
Updating full list of account names for %@ to: %@
Posting %@ with payload: %@
Authorization requesting user information for request: %@
The Given/Family Name for the current user was not found in the AuthKit account
Application is not requesting email for this authorization early return with userInfo:
Application is requesting email for this authorization fetching email properties from account
This is a Mako Account, Ignoring primary email address verification
Mako account has reachable email addresses
Completed getting UserInformation for Mako account with UserInfo:
Missing primary email verification state.
Completed getting UserInformation for account with UserInfo:
Handling push with command AKPushMessageCommandNotifyTrustedDeviceListChanged...
AKPushMessageCommandNotifyTrustedDeviceListChanged message contained single-operation delta.
AKPushMessageCommandNotifyTrustedDeviceListChanged message contained no delta. Listener should fetch device list.
%@: Attempting to remove continuation token for account (%@)
%@: Peripheral manager (%@) failed to start advertising with error (%@)
%@: Peripheral manager (%@) started advertising
%@: Peripheral manager (%@) failed to add service (%@) with error (%@)
%@: Peripheral manager (%@) added service (%@)
%@: Central manager (%@) discovered peripheral (%@) with advertisement data (%@) and RSSI (%@)
%@: Discovered peripheral (%@) with nil serviceID
%@: Discovered peripheral (%@) with matching presenceSID (%{mask.hash}@) and serviceID (%@)
%@: Discovered peripheral (%@) with non-matching serviceID (%@)
Got unexpected combination, mappings=%@, hmeListVersion=%@
Failed to fetch private emails list with error: %@
Deleting Hide My Email database
Failed to clear Hide My Email database. Error: %@
Failed to unpack private emails list. Got:%@
Detected that we must sync with server
Got a bad private-email fetch URL from the bag: %@
Unable to fetch private email. The URL is missing from the URL bag
GS token is missing, giving it a shot to receive it from the account
We could not find an account, and the token is missing. Sending the requestas-is and hoping for the best.
Calling GS endpoint to start the Fido auth.
Parsing Fido auth context.
Creating Fido auth context with: %@
Error parsing fido auth parameters: %@
Calling GS endpoint to finish the Fido auth.
Error finishing fido auth flow: %@
Creating server response from finish fido response.
Activating handle: %@
Remote view sent a finish event
Remote view sent a user response event: %@
%@ deallocated.
%@: Transformed %@ (%@)
%@: Validating authentication context (%@)
%@: Failed to retrieve AuthKit account for context (%@) with error: %@
Successful SRP!
SRP authentication with server failed! Error: %@
Server told us to retry. Retrying auth...
Auth failed but the server says to try a secondary auth action anyway. Let's how this goes...
Need Anisette resync...
Anisette resync was successful. Retrying auth...
Anisette resync failed. Error: %@
Need Anisette reprovisioning...
Anisette erase was successful. Retrying auth...
Anisette erase failed. Error: %@
URLSwitching needed...
Server requested to switch URL but no URLSwitch data is available, Ignoring URL switch
URLSwitching was successfull retrying SRP With new url
URLSwitching failed with error: %@
Invalid PRK returned from server and we're doing a companion auth. We should clear CK
This is an internal build with Demo mode for Authorization activated, returning 'NOT FOUND' credential state
Credential state request does not contain clientID, reverting to XPC client information.
Setting clientID to %@
Credential state does not contain teamID, reverting to XPC client information.
Setting teamID to %@
Requested Credential state does not match XPC client's bundleID (%@) or teamID (%@), returning AKAuthenticationErrorInvalidContext
AltDSID is included in the State Request,this should only be happening in testing
This device is not trusted, returning 'REVOKED' credential state
Attempting private call to fetch credential state for clientID: %@
Client did not have a teamID and it is not an internal client
Client has internal entitlements and does not have a teamID
Client did not have a application identifier
No applications were found with the provided Client ID: %@
Credential State Request has an ignore flag on the TeamID returning Credential State
No developer teams were found with the Team ID: %@
Application database has been compromised.
Transfer state stored in database with clientID: %@, teamID: %@
Application has a credential, directly returning application's credential state.
Application has a credential but user identifier match is being ignored (for internal credential state), directly returning application's credential state.
Application has a credential, failed user identifier validation.
Application in transferred state with unsafe matching user identifier (to be verified by IdMS).
Application in transferred state with no matching user identifier.
Application in expired state with unsafe matching user identifier.
Application in expired state with no matching user identifier.
Application in transfered state with strongly matching alternate user identifier.
Application in expired state with strongly matching alternate user identifier.
Application in transferred state with strongly matching user identifier. Directly returning application's credential state.
Application in expired state with strongly matching user identifier. Directly returning application's credential state.
Application in expired state with no matching user identifier but user identifier match is being ignored (for internal credential state) and No match for Team Identifier, directly returning application's credential state.
Application in expired state with no matching user identifier but user identifier match is being ignored (for internal credential state), directly returning application's credential state.
Application in transferred state with no matching user identifier but user identifier match is being ignored (for internal credential state) and No match for Team Identifier, directly returning application's credential state.
Application in transferred state with no matching user identifier but user identifier match is being ignored (for internal credential state), directly returning application's credential state.
Application state cannot be securely determined.
Fetching developer team with id: %@
Encountered error while fetching developer team: %@
Fetching developer team for client with ID: %@
Unsafe verification failed due to nil User ID.
Performing unsafe verification with User ID: %@
Notification requires authentication prompt.
Unable to create CFUserNotificationRef!
Failed to create login code notification!
Dismissed code notification.
Attempting to show notification with identifier: %@
Beginning reverse geocode...
Reverse geocode callback called
Reverse geocode results: (Locality: %@ - Administrative Area: %@)
locationName = "%@"
Will display user notification...
Torn down notification with ID: %@
Attempted to tear down notification, but it was not found for identifier... %@
Notification responded: %@
Prompting user if if they want to change their password
Failed to create password change notification!
Suppressing password change prompt due to missing PRK
Will take user to change password flow in Settings...
Using the following URL for change password redirect: %@
Got authentication results back based on the prompt for notification: %@
Incoming push does not contain walrus web access info, abandoning device arming
Arming device for PCS auth is not supported for non primary account.
Begin arming device with context %@.
Failed to arm device with context %@ with error %@
Device armed with context %@ successfully.
Requested PCS auth TTL [%f] over max [%f]
Authorization Endorser already in progress, ignoring startAuthorization.
Authorization Endorser Started.
Authorization Endorser client failed to activate. {errorDomain=%{public}@, errorCode=%ld, error=%@}
Sending StartAuthorizationRequest. {device=%@, device_ptr=%p}
Ignoring StartAuthorization another endorser is already handling it.
StartAuthorization failed. {errorDomain=%{public}@, errorCode=%ld, error=%@}
Handling StartAuthorizationResponse. {response=%@}
Failed to unarchive the credential request context. {error=%@, data=%@}
_requirePassword property received as %i, setting to NO
StartAuthorization presenting authorization UI for Rapport request. {credentialRequestContext=%@}
Sending AuthorizationDidFinish. {authorization=%@, device=%@, device_ptr=%p}
Failed to archive AKAuthorization object, failing authorization. {archiveError=%@}
Received AuthorizationDidFinish response. {response=%@, error=%@, device=%@, device_ptr=%p}
Rapport endorser authorization failed. {errorDomain=%{public}@, errorCode=%ld, error=%@}
Error object won't be sent, failed to archive. {archiveError=%@}
Sending AuthorizationDidFinish. {error=%@, device=%@, device_ptr=%p}
Sending DidStartServerAuthorization event. {device=%@, device_ptr=%p}
Error sending DidStartServerAuthorization Rapport event. {errorDomain=%{public}@, errorCode=%ld, error=%@, device=%@, device_ptr=%p}
Could not dismiss UI! Error: %@
Request to show server UI came back with error: %@
Unable to tear down server UI! Error: %@
Native recovery failed! Error: %@
presentNativeRecoveryUIForContext did succeed. Recovered info: %@ and error: %@
Unable to tear down native recovery UI! Error: %@
dismissNativeRecoveryUIForContext did succeed.
In Sync Bubble. UI is not supported.
Context %@ has AKAppleIDAuthenticationUICapabilityUnknown.
Context cannot display full UI.
Context requires out-of-process UI.
Allowing BG process %@ to perform proxied FG auth.
Client is capable of displaying UI, no surrogate required...
Out-of-process auth, no registered UI surrogate yet...
Background auth, no registered UI surrogate yet...
Client %@ is being permitted to run FG auth, because iCloud settings are inaccessible.
Client %@ is not permitted to use _isProxyingForApp. Falling back to BG behavior.
Client %@ cannot proxy without specifying an immutable Apple ID.
Ignoring FG proxying request because %@ is not currently foreground.
Client %{public}@ requested authentication (via %{public}@).
Client %{public}@ requested authentication.
Will not prompt user about redirect per auth context configuration.
In Buddy. UI is not supported.
Showing alert failed, user notification is nil!. Error: %d
Unable to reset check in bit due to Accounts error: %@
Unable to respond to message with invalid id
Unable to respond to message without AK account for altDSID %@
Will notify IDMS about teardown response...
XPC activity says that it's time run the liveness check-ins!
XPC activity for liveness check-ins completed!
Done with removeUnusedAndDuplicateAuthKitAccounts
authkit/check-in
We do not have any IDMS accounts to check in with.
Performing liveness check-in with account: %@
Liveness check-in failed for account %@ with error: %@
Liveness check-in succeeded for account %@.
authkit/sign-out
Reporting global signout to IDMS for %@
Reporting signout for service %@ with account %@
Invalid service %@ for reporting
Cannot convert %@ to a non-nil string
Unable to call back to notification handler! Error: %@
Notifying client (%@) of credential state change %d.
Client (%@) was notified %@ with error %@
Unable to call back to state broadcast handler! Error: %@
Notifying client (%@) of credential state change (%d) for client ID (%@).
Executing query: %@
SQL Exec %@ failed with error %s.
Executing query: %s
Rows changed: %d
Database error detected: %@
Database corruption detected: %@
Wanted to migrate database, but migrator is nil!
Attempting to open database at path: %@
Creating path for database...
%@: Failed to open file at path %@
Database opened at path: %@
Attempting to wipe database at path: %@
Failed to wipe database with error: %@
Database %@ wiped...
Closing database at path: %@
Closed database with result: %d
%@ deallocated
AuthKit Private entitlement needed to start a custodian initiation request, but calling process doesn't have it
There is no custodian UUID to start a custodian initiation request failing operation
Missing custodian setup token, abandoning idMS custodian setup.
Failed to initiate custodian setup with error: %@
response: %@
Successfully initiated custodian setup for custodianUUID %@
response: %@
data: %@
AuthKit Private entitlement needed to finish a finalize custodianship request, but calling process doesn't have it
Missing custodian UUID, abandoning custodian finalization.
Missing altDSID, abandoning custodian finalization.
Successfully finalize custodianship for custodianUUID %@, response: %@
Failed to finalize custodianship with error: %@
AuthKit Private entitlement needed to abort a custodian setup request, but calling process doesn't have it
There is no custodian UUID to abort a setup request failing operation
Successfully aborted custodian setup for custodianUUID %@, response: %@
Failed to abort custodian setup with error: %@
AuthKit Private entitlement needed to finish a custodian recovery key update request, but calling process doesn't have it
Missing custodian UUID, abandoning custodian recovery key update.
Missing altDSID, abandoning custodian recovery key update.
Missing wrappingKeyRKC, abandoning custodian recovery key update.
Failed to update recovery key with error: %@
response: %@
Successfully updated recovery key for custodianUUID %@, response: %@
Starting recovery request with context %@
We have an authKit account, request needs to be authenticated
Failed to start custodian account recovery with error: %@
Successfully started an account recovery for account %@, response: %@
AuthKit Private entitlement needed to continue fetching the custodian configuration , but calling process doesn't have it
Failed to start custodian recovery transaction with error: %@
Successfully started an account recovery transaction, response: %@
Failed to verify custodian recovery key with error: %@
Call to fetch custodian recovery token returned with response: %@
AuthKit Private entitlement needed to continue fetching the data recovery key , but calling process doesn't have it
Cannot fetch data recovery key without a session ID or recovery token, failing operation
Cannot fetch data recovery key without an authenticated account, failing operation
Successfully fetched data recovery key for account with altDSID %@, response: %@
AuthKit Private entitlement needed but calling process doesn't have it
There is no altdsid to send embargo end transaction, failing operation
Cannot send embargo end transaction without a session ID, failing operation
Sending embargo end notification feedback with to urlKey: %@ context: %@
Failed to send embargo end feedback with error: %@
Embargo end feedback call returned with response: %@
Embargo end feedback completed with HTTP status code: %@
There is no owner or custodian information to start a transaction, failing operation
Custodian context does not provide a pushToken, fetching pushToken...
Something really really bad happened, we don't have a push token to start a custodian request
Cannot fetch data recovery key without a session ID, failing operation
There is no url for key AKURLBagKeyTrustedContactsDataSync in the URLBag. No op.
Missing lastDataSyncTimestamp, abandoning IdMS performTrustedContactsDataSync.
Missing altDSID, abandoning IdMS performTrustedContactsDataSync.
Missing heartbeat token, abandoning IdMS performTrustedContactsDataSync.
Failed to performTrustedContactsDataSync with error: %@
response: %@
Successfully performed TrustedContactsDataSync
response: %@
data: %@
Failed to performTrustedContactsDataSync due to AKCustodianDaemonService being released
Unexpected IdMS trusted contact operation response: %@
Failed to fetch dataclass rules with error: %@
Missing beneficiary setup short-lived token.
Failed to setup beneficiary (%@) with error: %@
Failed to remove beneficiary (%@) with error: %@
Failed to update beneficiary (%@) with error: %@
Setting up Beneficiary Alias with context - 
Failed to setup beneficiary alias (%@) with error: %@
Successfully setup Beneficiary Alias
response: %@
Failed to execute request with error: %@
Successfully executed the request with response: %@
Cleared session bag caches
Cleared serialized bag cache
Starting to fetch URL bag... if necessary
FetchURLBag
BEGIN [%lld]: FetchURLBag  enableTelemetry=YES 
END [%lld] %fs:FetchURLBag 
Fetching URL bag...
Bag fetch failed! Error: %@, falling back to older bag version
Bag fetch failed! Error: %@
Bag fetch either timed out or was successful but there was no bag data!
URL bag fetch timed out, cancelling task: %@
There was an error parsing the URL bag! %@
The URL bag was not in dictionary format!
URL bag fetched! %@
Daemon service initialized with client: %@
Client before perform authorization execution %@
Proxied bundle detected (%@), proxying...
Requesting clearance to authorize with context %@...
Perform Authorization cannot proceed because of error: %@
Attempting to authorize request: %@
Completion was called with nil authorization and no error thrown, setting Error Unknown
Error performing auth request (%@): %@
Authorization ended for requestContext: %@
Attempting to get credential state for User identifier: %@
Authorization Credential state not found with error:%@
Failed to revoke upgrade with error: %@
Revoke upgrade completed successfully.
Starting to fetch appleIDAuthorizeHTMLResponseURL
Request for appleIDAuthorizeHTMLResponseURL failed. Error: %@
appleIDAuthorizeHTMLResponseURL response code: %@
Failed to fetch appleIDAuthorizeHTMLResponseURL %@
Cannot fetch primary bundleID for nil primary account
Owner entitlement needed to continue fetching icon, but calling process doesn't have it
Establishing connection with notification center for client (%@).
Establishing connection with state broadcast handler for client (%@).
Handling request with missing account, default to primary AuthKit account
Client owner detected, checking for proxied bundle
Client doesn't have owner access, operation not permitted
Existing client found from the session manager and using it %@
Using the client initiated with the daemon service's connection
Early returning the request as it meets preferImmediatelyAvailableCredentials criteria.
Will attempt to perform silent authorization using provided user ID.
Requested to skip auth UI...
Requesting interactive authorization...
Silent Request is not eligible for authorization
Attempting safe SRP for first object...
Silent auth requested with an invalid context... bailing
Requesting password only: %@
Handling a client with authorization level: %@
Rapport authorization is required for request %@
Rapport request is not eligible for authorization
Proxied bundle identifier entitlement needed to continue saving authorization.
Authorization request missing proxied bundle identifier.
Storing authorization for proxied request (%@).
_getPresentationContextForRequestContext canPerformCredentialRequest returned %@ (with error %@)
AKAuthorizationValidator returned we cannot perform credential request but threw no error, setting error unknown
User information updated
No login choices available and we have a password request in credential requests.
No credential requests.
Checking for genesis event!
Previous credential for client %@ is authorized
Resetting scopes %@ for upgrade from keychain
Previous credential for client %@ is in transfer state
%s Credential state is not authorized
Fetching credentials with: %@
getCredentials returned with %lu credentials
Fetching credentials for proxied associated domains. {proxiedAssociatedDomains=%@}
presenting authorization UI for request %@
Authorization UI returned with userResponse - %@
Attempting authorization with response %@, and client: %@
Attempted to authorize request of unsupported type %@
User response contains password, so add them to srp context
Client has special access, populating context with overrides...
Applying request client ID override
Applying request team ID override
Authorization is for an internal application without teamID
Client do not have special access, so not overriding the context. Using the given client: %@
Client has authenticated externally, populating authToken...
Constructed AKAuthorizationContext from the request & client - %@
There is no web session auth to save.
Saved web session details. Error - %@
Client proxy object to present UI is not created
Client before perform authorization for user info execution %@
Client owner detected
shouldContinueWithRequest returning result %@ and error %@
Got a response from user: %@ and client: %@
Detected password request
Authorization presentation failed with error: %@
Got a response from user: %@, userSelection: %@ and client: %@
Processing of user response failed with an unknown error, likely invalid response...
Unable to beginAuthorization - Missing Entitlements.
Unable to beginAuthorization - Client is not entitled to _AKCredentialRequestContextBundleIdentifierProxyEntitlement
Unable to beginAuthorization - Client has proxy entitlement but is not setting either _proxiedClientBundleID or _proxiedClientTeamID
beginAuthorization - Proxied bundle detected (%@), proxying...
beginAuthorization - Requesting clearance to authorize with context %@...
beginAuthorization - Error beginning session for context : %@
 Error - %@
beginAuthorization - Attempting to authorize request: %@
beginAuthorization - Error beginning session for context : %@
beginAuthorization completed
beginAuthorization - User Response is nil for context : %@
Unable to continueAuthorization - Missing Entitlements.
Unable to continueAuthorization - Client is not entitled to _AKCredentialRequestContextBundleIdentifierProxyEntitlement
Unable to continueAuthorization - Client has proxy entitlement but is not setting either _proxiedClientBundleID or _proxiedClientTeamID
continueAuthorization - Proxied bundle detected (%@), proxying...
Invalid context. Need to set _continuationRequestIdentifier
continueAuthorization - Error continuing session for context : %@
 Error - %@
continueAuthorization - externalLocalAuthData was provided. Verifying...
continueAuthorization - Invalid Externalized LAContext
continueAuthorization - externalLocalAuthData was verified successfully
continueAuthorization - externalAuthToken was provided. Attaching to authorizationRequest.
Invalid context. Need to set either _externalLocalAuthData or _externalAuthToken
continueAuthorization - Attempting to resume authorization for request: %@
continueAuthorization - Authorization ended for requestContext: %@
continueAuthorization - Error continuing session for context : %@ 
: error: %@
continueAuthorization completed
continueAuthorization - authorization is nil for context : %@
cancelAuthorization with context - %@
Unable to cancelAuthorization. Missing Entitlements.
Unable to cancelAuthorization - Client is not entitled to _AKCredentialRequestContextBundleIdentifierProxyEntitlement
Unable to cancelAuthorization - Client has proxy entitlement but is not setting either _proxiedClientBundleID or _proxiedClientTeamID
cancelAuthorization - Proxied bundle detected (%@), proxying...
cancelAuthorization - Error canceling the session: %@
cancelAuthorization - Successfully canceled session
Client authenticated externally. Sending auth token in SRP.
Asking client to show server UI with %@...
Showing server UI with request: %@, %@
Server UI has been skipped.
Server UI did not complete auth successfully! Error: %@
Looks like we're done with server UI!
We do not have an initial auth response to update. Creating one now!
Successfully handled server UI response!
Asking client to dismiss any presented server UI...
Server UI-based authentication has been canceled.
User elected to try again
Unknown action signal from server UI final response!
Creating resource load delegate with auth response
Failed fetching phone information for server UI delegate: %@
Failed to fetch IDS cert info: %@
Fetching resource load delegate
Auth response recieved is for proxy, initializing resource load delegate accordingly
Could not find an existing AuthKit account, so we can't attach account specific headers: %@
Context explicitly does not want GS tokens for server UI, moving on...
Error communicating with client anisette service: %@
%@: Calling client proxy to fetch peer attestation data for context (%@) with request (%@)
Current %@ database version: %i
Migration logic not present (from: %i)
Current schema version undefined!
Current store name undefined!
Resuming XPC listener for Mach service %@...
Fatal error! Unknown XPC listener: %@
Lockscreen state: %@ 
Checking lock state
We are running in recovery. Leaving IDS alone.
We are running in the sync bubble. Leaving IDS alone.
akd is exiting due to SIGTERM
Updating current sharing mode.
Notified of language change. Will exit when all clear.
%@: Scheduling request (%@) with calculation (%@)
%@: Unable to schedule request (%@) with algorithm (%@)
%@: Immediately executing request (%@)
%@: Will attempt to schedule next request (%@)
%@: No more requests to schedule
%@: Scheduled new timer (%@) for next upcoming calculation (%@)
%@: Scheduler timer fired, executing all eligible requests
%@: Attempting to execute scheduled request (%@)
%@: Unable to execute scheduled request (%@) with calculation (%@)
%@: Executing request (%@)
%@: Handling dispatching response (%@) for executed request (%@)
%@: Updating algorithm for dispatching info (%@)
%@: Removing algorithm for dispatching info (%@)
Sending request to revoke upgrade txID %@ for teamID/bundleID: %@/%@
Revoke request came back with error: %@
Client %@ lacks a bundle ID!
Processing clearance request: %@
Adding request as pending...
Processing clearance request for Surrogate with ID %@
Denying clearance to client %@ due to pending surrogate auth...
Clearing silent authentication
No authentication in progress, all clear!
Attempting to clear in-app request: %@
Allowing clearance despite pending interactive auths: %@
Denying clearance due to pending daemons: %@
Attempting to determine foreground state for apps: %@
Denying clearance due to another foreground app performing authentication...
Queued end authentication block for %@
Queued end authentication clearance block for %@
Executing end authentication clearance block for %@
Removing %@ from authenticating list
Surrogate context is done
Surrogate auth flow is complete!
Found a pending request: %@
Auth has ended with an error. Skipping queued context update.
End authentication called without any queued clearance handler, we are done
Adding %@ to list of authenticating apps
Adding %@ to list of authenticating daemons
Passing password down to next queued client.
Password populated from cache.
Clearing the password cache.
XPC activity says that it's time to update user information
XPC activity for fetch user information complete
XPC activity for fetch global config complete
No Primary AuthKit account found skipping user information fetch
Succesfully fetched user information for altDSID: %@
Encountered error while fetching user information: %@
No Primary AuthKit account found skipping global config fetch
We are running in recovery. Leaving APS alone.
We are running in the sync bubble. Leaving APS alone.
Push service starting...
Server did not provide a valid APS environment. Falling back to prod.
Push service started
Updating push delegates: %@
Will notify delegates of notification action: %@
Will query delegates of intent to show notification
Did notify delegates of intent to show notification, suppression elected: %@
Will ask delegates to process push payload
Did ask delegates to process push payload
Server is not providing an APS env override.
Current APS env matches server preference. %@
Active APS env (%@) does not match server-requested env (%@).
The server requested env (%@) is not valid!
Shutting down APS connection with env %@...
Starting new APS connection with env %@...
Shutting down APS connection...
APNS status changed: %d
APNS reconnected
Unable to convert public token to hex string: %@
APS says we have a new public token! %@
BEGIN [%lld]: APSTokenEnvironment  enableTelemetry=YES 
APSTokenEnvironment
END [%lld] %fs:APSTokenEnvironment 
BEGIN [%lld]: APSTokenPopulate  enableTelemetry=YES 
APSTokenPopulate
END [%lld] %fs:APSTokenPopulate 
akd/received-push-message
Received push message: %@. Contents: %@
Push message is not for the IDMS topic. Ignoring!
All queued push messages processed, we're done!
Attempting to process %@
Received push command to tear down notification.
Received push command to refresh AKURLBag
Processing a supressed command, tearing down previous HSA2 alerts
Incoming message alert suppressed
Discarding message as ineligible: %@
Push message is not intended for the primary iCloud account, suppressing...
Push message required a passcode, but current device does not have one...
Push message is for an unknown altDSID: %@
Push message is only allowed for primary account, suppressing...
Device is in restricted sharing mode, supressing...
Showing alert for message %@.
User interacted with alert - %lul.
Notification torn down by server!
User accepted PCS arming push, begin device arming.
User dismissed notification. Nothing further to do.
PCS arming completed, notifying delegates of results.
No action to be done for push command %@.
Processed all known commands, notifying delegates
Trying to generate login code now for %@...
Failed to generate login code. Error: %@
Will display login code notification...
Will display piggy notification...
Tearing down login notification: %@
Will tear down current notification, with ID: %@
Will tear down notification with ID: %@
Will take user to password-reset flow in Settings for %@...
Using the following URL for iForgot redirect: %@
Active login notification id: %@
Account is not primary, do not proceed with arming.
Web access info not provided, do not proceed with arming.
Account is ineligible, do not proceed with arming.
Push may proceed with PCS arming.
Found matching iCloud account %@ for push.
AKSQLiteQuerry deallocated, not binding parameters
Error binding sql statement with parameter: %@
Parameter type not handled, failing binding statement.
%@: Failed to generate authentication parameters with error (%@)
%@: Failed to configure SRP context with error (%@)
%@: Performing SRP request with context (%@)
HSA2 repair required: %@
Suppressing piggybacking for non-primary iCloud accounts
BEGIN [%lld]: PiggybackingProcessPushPayload  CircleStep=%{public,signpost.telemetry:number1,name=CircleStep}d  enableTelemetry=YES 
Suppressed payload: %@
 DidProcess=%{public,signpost.telemetry:number2,name=DidProcess}d 
PiggybackingProcessPushPayload
END [%lld] %fs:PiggybackingProcessPushPayload  DidProcess=%{public,signpost.telemetry:number2,name=DidProcess}d 
Suppressing the circle error payload
We received a reply: %@
Processed a pending reply with payload: %@
Starting an accepting session with payload: %@
Failed to get a controller
 Class=%{public,signpost.telemetry:string1,name=Class}@  enableTelemetry=YES 
PiggybackingProcessPiggybackPayloadWithController
BEGIN [%lld]: PiggybackingProcessPiggybackPayloadWithController  Class=%{public,signpost.telemetry:string1,name=Class}@  enableTelemetry=YES 
Accepting session finished successfully
END [%lld] %fs:PiggybackingProcessPushPayload 
Accepting session finished with error: %@
END [%lld] %fs:PiggybackingProcessPushPayload  Error=%{public,signpost.telemetry:number1,name=Error}d 
Orphaned payload: %@
Processing pending reply!
authkit/circle-request
Starting circle request with context: %@
Populating push token
Failed to populate push token
Circle request failed with error: %@
Waiting for reply with timeout: %f
 Payload=%{public,signpost.telemetry:string1,name=Payload}@  enableTelemetry=YES 
PiggyCircleRequest
BEGIN [%lld]: PiggyCircleRequest  Payload=%{public,signpost.telemetry:string1,name=Payload}@  enableTelemetry=YES 
authkit/circle-operation
Starting circle operation with context: %@
Waiting... %@ - (%@) - %@
Cancelled piggybacking request: %@
Timeout for piggybacking request: %@
Notifying the other side that we're really done
Circle request (%@) completed with response: %@
END [%lld] %fs:PiggyCircleRequest  CircleStep=%{public,signpost.telemetry:string2,name=CircleStep}@  Error=%{public,signpost.telemetry:number2,name=Error}d 
PiggyExecuteRequest
BEGIN [%lld]: PiggyExecuteRequest  CircleStep=%{public,signpost.telemetry:string1,name=CircleStep}@  enableTelemetry=YES 
END [%lld] %fs:PiggyExecuteRequest  CircleStep=%{public,signpost.telemetry:string2,name=CircleStep}@  Error=%{public,signpost.telemetry:number2,name=Error}d 
Received response for circle (step 0) request: %@
Circle (step 0) response payload (%@) received with presenceSID (%{mask.hash}@)
Circle (step 0) response payload (%@) does not contain presenceSID, ignoring response
Locale change notification. Fetching global configs.
Fetched global config after locale change.
Fetching global config with cache policy %lu
FetchGlobalConfig
BEGIN [%lld]: FetchGlobalConfig  enableTelemetry=YES 
END [%lld] %fs:FetchGlobalConfig 
Fetching global config from cache...
Fetching global config from source...
Global config fetch failed! Error: %@
Global config fetch either timed out or was successful but there was no data!
Global config fetch timed out, cancelling task: %@
There was an error parsing the config! %@
The config was not in dictionary format!
Config fetched! %@
No push token available for check-in!
Error getting phone bundle information: %@
Failed to fetch follow up identifiers: %@
Posting active services as: %@
Check-in to server without any active services for account: %@
Starting to fetch app info for %@
Failed to fetch app info with error: %@
Fetched app info for %@
Starting to fetch bundle id for Primary application for serviceID: %@, altDSID: %@
Failed to fetch Primary application with error: %@
Fetched Primary application bundle id for %@
bio metric PET requested.
passcode PET requested.
altDSID is available for auth: %@
Client Bundle ID is available
Opting into Experimental Mode through SRP
Sending requested cloud partition: %@
Test Account Header Attached
Password available. Will ask for bootstrap password-based auth.
No password, but CK is available. Will ask for ck-based auth.
Master Key avalable.  Will ask for mk-based auth.
%@: Attaching additional headers (%@) to SRP request
Context has provieded UDID for proxied device.
Sending experimental features as %lu
%@: Attempting to clear continuation token for account (%@)
Device is still not trusted, not performing auth.
Authorization Rapport Link Client invalidated
Authorization Rapport Link Client failed to activate. {errorDomain=%{public}@, errorCode=%ld, error=%@}
Invalid request, cannot properly set RPAppSingInService flags. {requestContext=%@}
Authorization Rapport activated, and AppSignIn is advertising.
Asked to perform authorization, but one is already in progress. {requestContext:%@}
%s Unable to satisfy password request
Rapport authorization called with no completion callback. {authorization=%@, errorDomain=%{public}@, errorCode=%ld, error=%@}
AuthorizationRapportClient present UI failed. {errorDomain=%{public}@, errorCode=%ld, error=%@}
Received StartAuthorization. {request=%@, options=%@}
Ignoring StartAuthorization, one is already in progress.
Failed to archive the credential request context. {archiveError=%@}
Received AuthorizationDidFinish. {request=%@, options=%@}
Failed to unarchive error. {unarchiveError=%@}
Failed to unarchive authorization. {unarchiveError=%@}
AKD received request for TTR on non-internal build, suppressing.
AKD received push request to create TTR with title: %@
The TTR request was missing a title - message was: %@
AKD received request for TTR on non-internal build, ignoring.
Completed launch of tap-to-radar with result: %@, error: %@
Attempt to perform authentication without an upgrade token!
Attempt to perform authentication without altDSID!
Current context requires interactive auth for Apple ID: %@
Token upgrade requested without a username
Server requests remote UI
Short-lived token upgrade failed: %@
Attempting token upgrade with altDSID %@...
Missing URL bag entry for federated account, attempting IDP flow...
Server says to show UI at IDP URL: %@
Handling IDP response: %@
v24@?0@"AKFidoAuthenticationResponse"8@"NSError"16
v24@?0@"AKFidoContext"8@"NSError"16
v32@?0@"AKAuthenticationServerResponse"8@"NSDictionary"16@"NSError"24
v8@?0
v24@?0@"NSData"8@"NSError"16
v16@?0@?<v@?@"NSData"@"NSError">8
v24@?0@"AKIconContext"8@"NSError"16
@"AKCoordinatedDataBlock"8@?0
items
action
v32@?0@"NSHTTPURLResponse"8@"NSData"16@"NSError"24
@32@?0@"NSDictionary"8Q16^B24
B32@?0@"FLFollowUpItem"8Q16^B24
v32@?0@"FLFollowUpItem"8Q16^B24
/Library/Application Support/com.apple.akd/privateEmails.db
INSERT OR REPLACE INTO emails (client_key, email) VALUES (?, ?)
DELETE FROM emails WHERE client_key = ?
SELECT email FROM emails WHERE client_key=?
v24@?0^{sqlite3_stmt=}8^B16
SELECT privateEmailListVersion FROM version
UPDATE version SET privateEmailListVersion = ?
SELECT protocol_version FROM version
UPDATE version SET protocol_version = ?
SELECT email, client_key FROM emails
accountInfo
devices
adsid
@32@?0@8Q16^B24
v32@?0@"NSDictionary"8Q16^B24
/System/Library/Frameworks/BaseBoard.framework/BaseBoard
/System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard
/AppleInternal/Library/Frameworks/BaseBoard.framework/BaseBoard
BSAuditToken
Unable to find class %s
com.apple.authkit.client
com.apple.authkit.client.private
com.apple.authkit.client.internal
com.apple.authkit.client.owner
com.apple.authkit.writer.internal
com.apple.dt.Xcode
com.apple.dt.xcodebuild
com.apple.dt.xcscontrol
application-identifier
com.apple.application-identifier
com.apple.developer.applesignin
com.apple.authkit.authorization-bundle-identifier-proxy
AKOwnerProxyClient: %@
akd [on behalf of %@]
com.apple.akd
accountsd
backupd
aktool
askpermissiond
itunesstored
Preferences
StoreKitUIService
appstored
Carousel
com.apple.aktool
com.apple.internal.appleAccountSetupTool
exited?
%@ (%@)
srdwa
wscUUID
ttlMin
ptkn
autype
acname
DsPrsId
uireq
com.apple.gs.idms.pet
com.apple.gs.idms.hb
X-Apple-GS-Token
X-Apple-HB-Token
X-Apple-AK-Auth-Type
X-Apple-I-CK
X-Apple-I-PRK
X-Apple-SL-Token
X-Apple-I-MD-DATA
X-Apple-I-Recovery-Session-Id
com.apple.gs.idms.beneficiary.add
X-Apple-I-AURL
X-Apple-I-AURL-Type
X-Apple-I-Device-Terms
X-Apple-I-MD-Cmd-Target
underAge
isSenior
ageOfMajority
firstPartyApp
privateEmail
X-Apple-I-Data
additionalInfo
appleIdSignInEnabled
privateAttestationEnabled
phoneAsAppleId
primaryEmail
primaryEmailVetted
naurl
X-Apple-I-NAURL
canHaveCustodian
canBeCustodian
custodianEnabled
custodianLastUpdateDate
canHaveBeneficiary
canBeBeneficiary
buuid
beneficiaryWrappedKey
countryCode
appleManagedAccount
orgType
orgName
notificationEmailAvailable
notificationEmail
fidoAuth
@"<NSSecureCoding>"32@?0@"NSString"8@"NSString"16^B24
atxid
alias
demoAccount
params
paired
alternateDsid
hsa2
hsa1
managed
v16@?0B8B12
idmsPresence=%@, foundDevice=%@
v24@?0@"AKCircleRequestPayload"8@"NSError"16
DSID
%06u
v12@?0B8
proximityDetected
/Library/Application Support/com.apple.akd/authorization.db
v32@?0@"NSString"8Q16^B24
v32@?0@"AKDeveloperTeam"8Q16^B24
SELECT team_id, uid FROM authorized_teams WHERE team_id = ?
SELECT team_id FROM authorized_applications WHERE client_id = ?
SELECT team_id FROM authorized_teams WHERE uid = ?
UPDATE authorized_applications SET credential_state = ? WHERE client_id = ?
DELETE FROM authorized_applications WHERE client_id = ?
UPDATE authorized_applications SET credential_state = ?, authorizedAppListVersion = 'TEMPORARY'
TEMPORARY
INSERT OR REPLACE INTO authorized_teams (team_id, uid) VALUES (?, ?)
v32@?0@"NSString"8@"AKConsentedApplication"16^B24
INSERT OR REPLACE INTO authorized_applications (client_id, team_id, scopes, origin, credential_state, transfer_state, primary_client_id, authorizedAppListVersion) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
SELECT client_id FROM authorized_applications WHERE authorizedAppListVersion != ? AND authorizedAppListVersion != 'TEMPORARY'
UPDATE authorized_applications SET credential_state = ?, authorizedAppListVersion = ? WHERE authorizedAppListVersion != ?
SELECT client_id, scopes, credential_state, transfer_state, primary_client_id, origin FROM authorized_applications WHERE team_id = ?
NULL
SELECT client_id FROM authorized_applications WHERE credential_state = ?
SELECT authorizedAppListVersion FROM version;
v16@?0^{sqlite3_stmt=}8
UPDATE version SET authorizedAppListVersion = ?
UPDATE version SET db_version = ?
/System/Library/Frameworks/SetupAssistant.framework/SetupAssistant
/System/Library/PrivateFrameworks/SetupAssistant.framework/SetupAssistant
/AppleInternal/Library/Frameworks/SetupAssistant.framework/SetupAssistant
BYLicenseAgreement
POST
com.apple.gs.idms.mrk
v20@?0B8@"NSError"12
v24@?0@"NSDictionary"8@"NSError"16
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
v28@?0B8@"AKAuthenticationServerResponse"12@"NSError"20
X-Apple-2SV-Req-Intercepted
X-Apple-2SV-Authenticate
success
X-Apple-AK-Advanced-ICloud-Data-Protection
v24@?0@"AKPCSAuthContext"8@"NSError"16
<%@: %p {
base: %f,
maxQueueSize: %lu,
_counter: %lu,
_queueSize: %lu,
<%@: %p {
delay: %f,
maxQueueSize: %lu,
_counter: %lu,
_queueSize: %lu,
application/json
Content-Type
Accept
X-Apple-Password-Only
X-Apple-Offer-Security-Upgrade
X-Apple-Ephemeral-Auth
ckgen
icscrec
rpet
X-Apple-I-App-Provided-Context
X-Apple-I-Proxied-ICSCREC
X-Apple-I-Proxied-PRK-Gen
X-MMe-Proxied-Client-Info
X-Apple-Identity-Token
X-Apple-I-Device-Configuration-Mode
X-Apple-I-Proxied-MD-M
X-Apple-I-Companion-MD-M
mk2fa
X-Apple-I-Request-UUID
X-Apple-I-ReAuth
addBeneficiaryToken
addCustodianToken
dependentAltDSID
v24@?0@"AKAttestationData"8@"NSError"16
v24@?0@"NSMutableDictionary"8@"NSError"16
true
%@:%@
com.apple.AuthKit.PromptEvent
clientId
proxiedClientId
hasUsername
proxyingForPairedDevice
accountSecurityLevel
authenticationType
authReason
capabilityForUIDisplay
__OSINSTALL_ENVIRONMENT
__AKSYNCBUBBLE
No Bundle ID
No Proxied Client ID
%lu%@
<%@: %p {
dispatchDate: %@,
dispatchCounter: %lu,
algorithmIdentifier: %@,
relinquishmentHandler: %@,
headerValue: %@,
capp
papp
svct
ralg
base
delay
maxqueue_size
AKUISurrogateQueue
Out-of-process surrogate auth is already in progress for client %@.
XPC Error launching out-of-process authentication for client %@ with surrogate ID %@.
v16@?0@"NSError"8
Failed to launch out-of-process authentication for client %@ with surrogate ID %@.
Settings surrogate auth is already in progress for client %@
Redirecting to Settings for client %@ is not permitted for this call.
Failed to prompt for Settings redirect for client %@.
User canceled Settings redirect for client %@.
Unable to launch Settings for client %@.
UI surrogate %@ not registered. Unable to do UI work.
 AKAuthenticationSurrogateManager Error: %@
beneficiaryUUID
claimId
selections
accessKey
beneficiaryFirstName
beneficiaryLastName
beneficiaryPassword
Authorization
CREATE TABLE IF NOT EXISTS authorized_teams (team_id TEXT PRIMARY KEY, uid TEXT, authorizedAppListVersion TEXT);
CREATE TABLE IF NOT EXISTS authorized_applications (client_id TEXT PRIMARY KEY, team_id TEXT, scopes TEXT, credential_state INTEGER);
CREATE TABLE IF NOT EXISTS version (authorizedAppListVersion TEXT PRIMARY KEY);
ALTER TABLE version ADD COLUMN db_version INTEGER;
ALTER TABLE authorized_applications ADD COLUMN authorizedAppListVersion TEXT
UPDATE version SET authorizedAppListVersion = 'TEMPORARY';
INSERT OR REPLACE INTO version (authorizedAppListVersion, db_version) values ('TEMPORARY', '%i');
ALTER TABLE authorized_applications ADD COLUMN transfer_state TEXT
ALTER TABLE authorized_applications ADD COLUMN primary_client_id TEXT
ALTER TABLE authorized_applications ADD COLUMN origin TEXT;
DROP TABLE IF EXISTS version;
CREATE TABLE IF NOT EXISTS version (authorizedAppListVersion TEXT PRIMARY KEY, db_version INTEGER);
com.apple.AuthKit.TiburonAttempt
/System/Library/Frameworks/KeychainCircle.framework/KeychainCircle
/System/Library/PrivateFrameworks/KeychainCircle.framework/KeychainCircle
/AppleInternal/Library/Frameworks/KeychainCircle.framework/KeychainCircle
KCJoiningAcceptAccountCircleDelegate
KCJoiningAcceptSession
KCJoiningRequestSecretSession
<%@: %p> Value: %@, Expiry (%@)
@"NSString"8@?0
@"NSArray"8@?0
@"_AKExpiringCacheValue"8@?0
Response
spim
cpim
X-Apple-I-MD-RINFO
X-Apple-I-MD-M
Status
com.apple.akd.anisette
v32@?0@"NSString"8@"NSString"16^B24
ownerAppleId
recoverySessionId
ownerCustodianAltDSID
custodianUUID
idmsdata
aadata
encryptedPRKC
nextStep
wrappingKeyRKC
txnid
recoveryAlternateDsId
custodianUUIDs
beneficiaryUUIDs
timestampOnCK
uuid
hashWrappingKeyRKC
status
@"NSDictionary"32@?0@"AKTrustedContact"8Q16^B24
https://gsa.apple.com/grandslam/GsService2/lookup/v2
https://gsa.apple.com/grandslam/GsService2/lookup
idata
%@/%@
com.apple.AuthKit.TiburonAuthorizationUI
passwordCredentialCount
didShowAppleID
useAnonymous
useAppleID
usePasswordCredential
modifiedName
com.apple.AuthKit.TiburonRequest
originClientType
apple
appleweb
includesAuthorizationRequest
includesPasswordRequest
clientID
appID
teamID
isFirstTimeAuth
<akredacted>
isUpgradeFromPassword
com.apple.authkit.post-install
v16@?0@"NSObject<OS_xpc_object>"8
postInstallQueue
com.apple.ak.postinstall
com.apple.AuthKit.StartAuthorization
CredentialRequest
com.apple.AuthKit.AuthorizationDidFinish
Error
com.apple.AuthKit.DidStartServerAuthorization
duration
requestID
didCancel
passwordRequestSuccess
authorizationRequestSuccess
errorDomain
errorCode
underlyingErrorDomain
underlyingErrorCode
allDevices
includeFamily
oses
services
com.apple.proximity-controller
com.apple.proximity-controller-engine
-[AKProximityController dealloc]
Authorization Session - <%@: %p context %@, requested by %@, sessionID: %@>
AKAuthorizationClearanceQueue
AKAuthorizationTrafficQueue
v32@?0@"NSString"8@"AKAuthorizationSession"16^B24
com.apple.authkit.authorization-session
/System/Library/Frameworks/IDS.framework/IDS
/System/Library/PrivateFrameworks/IDS.framework/IDS
/AppleInternal/Library/Frameworks/IDS.framework/IDS
IDSService
IDSDefaultPairedDevice
IDSSendMessageOptionBypassDuetKey
IDSSendMessageOptionEnforceRemoteTimeoutsKey
IDSSendMessageOptionTimeoutKey
com.apple.private.alloy.anisette
akcmd
akarg
akid
aktyp
akrid
akret
aksuc
akerd
AKCommandMessage <%p> {
Internal ID: %@,
Command: %@,
Argument: %@ }
NSData <%@ bytes>
(none)
AKReplyMessage <%p> {
Internal ID: %@,
Reply-To: %@,
Success: %@,
Error: %@,
RD: %@ }
com.apple.ak.idsq
v28@?0B8@"NSData"12@"NSError"20
-[AKPeerIDSAnisetteService syncAnisetteWithSIMData:completion:]
-[AKPeerIDSAnisetteService eraseAnisetteWithCompletion:]
-[AKPeerIDSAnisetteService provisionAnisetteWithCompletion:]
-[AKPeerIDSAnisetteService legacyAnisetteDataForDSID:withCompletion:]
v32@?0@"IDSDevice"8Q16^B24
com.apple.authkit.peer-as.txn
v24@?0@"AKAnisetteData"8@"NSError"16
-[AKPeerIDSAnisetteService _mhq_handleIncomingReplyMessage:]
-[AKPeerIDSAnisetteService service:didSwitchActivePairedDevice:acknowledgementBlock:]
PrivateEmail
CREATE TABLE IF NOT EXISTS emails (client_key TEXT PRIMARY KEY, email TEXT);
CREATE TABLE IF NOT EXISTS version (privateEmailListVersion TEXT PRIMARY KEY, db_version INTEGER);
INSERT OR REPLACE INTO version (privateEmailListVersion, db_version) VALUES('%@', '%i')
ALTER TABLE version ADD COLUMN protocol_version INTEGER
UPDATE version SET protocol_version = %i,db_version = %i
SELECT client_key FROM emails;
DELETE FROM emails WHERE client_key = '%@';
PRAGMA foreign_keys=off
ALTER TABLE emails RENAME TO emails_orig
CREATE TABLE emails AS SELECT * FROM emails_orig
ALTER TABLE emails ADD COLUMN bundle_id TEXT
CREATE INDEX client_bundle_idx ON emails(client_key,bundle_id)
DROP TABLE emails_orig
PRAGMA foreign_keys=on
UPDATE version SET db_version = %i
ALTER TABLE emails RENAME TO emails_v4
CREATE TABLE emails (client_key TEXT PRIMARY KEY, email TEXT)
INSERT INTO emails (client_key,email) SELECT client_key,email FROM emails_v4
DROP TABLE emails_v4
com.apple.AuthKitUIService
context
oopUIMode
v24@?0@"BSProcessHandle"8@"NSError"16
pbv2
idmsapproved
pbv2m
defbtn
albtn
none
prevtxnid
alert
title
body
stitle
sbdy
sftr
silent
akdata
pedr
stitleCDP
sbdyCDP
PCSKeysArmedEligible
<%@:%p> command: %lu, identifier: %@
com.apple.ak.puffin.xpc
com.apple.akd.pcsauth.keychain_service
com.apple.akd.pcsauth
recipientEmail
com.apple.Preferences
com.apple.akd.default
com.apple.AuthKit
Localizable
ALERT_DEFAULT_CANCEL
number
slotID
label
dataPreferred
defaultVoice
physicalSim
inUse
PhoneCertificate
B32@?0@"CTXPCServiceSubscriptionContext"8Q16^B24
com.apple.accounts.carrierUtilities.queue
v40@?0@"NSDictionary"8@"NSData"16@"NSHTTPURLResponse"24@"NSError"32
com.apple.authkit.PCSKeyProvider
v24@?0@"AKKeychainItem"8@"NSError"16
v32@?0@"AKKeychainItem"8Q16^B24
v24@?0@"NSArray"8@"NSError"16
_cliMode
_altDSID
altDSID: %@, cliMode: %i
Request
Header
isHSA2Eligible
AKAuthVerificationQueue
v24@?0@"AKAppleIDUserInformationResponse"8@"NSError"16
v40@?0@"NSString"8@"NSString"16@"NSDictionary"24@"NSError"32
v24@?0Q8@"NSError"16
cdks
v36@?0B8@"NSDictionary"12@"NSHTTPURLResponse"20@"NSError"28
%llu
security-code
X-Apple-I-Vetting-Token
IDMS
B24@?0@"ACAccount"8Q16
com.apple.akd.authenticate-with-context
v28@?0B8@"NSDictionary"12@"NSError"20
v24@?0@"AKAuthenticationServerResponse"8@"NSError"16
v24@?0@"ACAccount"8@"NSError"16
-[AKAppleIDAuthenticationService _refreshLocalAccountAndUpdateContext:completion:]
WRONG_PASSWORD_ALERT_TITLE
WRONG_PASSWORD_ALERT_MESSAGE
MISSING_INPUT_ALERT_TITLE
MISSING_INPUT_ALERT_MESSAGE
BAD_NETWORK_ALERT_TITLE
BAD_NETWORK_ALERT_MESSAGE
CODE_INVALID_TITLE
CODE_INVALID_MESSAGE
UNDERAGE_ALERT_TITLE
UNDERAGE_ALERT_MESSAGE
APPLE_MANAGED_ACCOUNT_SIGN_IN_PROHIBITED_TITLE
APPLE_MANAGED_ACCOUNT_SIGN_IN_PROHIBITED_MESSAGE
APPLE_MANAGED_ACCOUNT_NEEDS_SETTINGS_REDIRECT_TITLE
APPLE_MANAGED_ACCOUNT_NEEDS_SETTINGS_REDIRECT_MESSAGE
APPLE_MANAGED_ACCOUNT_UNABLE_TO_SIGN_IN_TITLE
APPLE_MANAGED_ACCOUNT_APPLICATION_BLOCKED_MESSAGE_APPNAME_ORGNAME_FORMAT
APPLE_MANAGED_ACCOUNT_APPLICATION_BLOCKED_MESSAGE_ORGNAME_FORMAT
APPLE_MANAGED_ACCOUNT_APPLICATION_BLOCKED_MESSAGE_APPNAME_FORMAT
APPLE_MANAGED_ACCOUNT_APPLICATION_BLOCKED_MESSAGE
SRP_VERIFICATION_ERROR_TITLE
UNKNOWN_ERROR_ALERT_TITLE
UNKNOWN_ERROR_ALERT_MESSAGE
v24@?0@"NSString"8@"NSString"16
ENTER_VERIFICATION_CODE_PIG
v20@?0B8@"NSDictionary"12
@"NSString"32@?0@"NSString"8@"AKToken"16^B24
com.apple.gs.icloud.storage.buy
v24@?0@"NSNumber"8@"NSError"16
?%@=%@
-[AKPiggybackRequestingController _initiatePiggybackingWithCleanSession:withCompletion:]
AKPiggybackRequestingController.m
completion
%@-%lu
-[AKPiggybackRequestingController processPushPayload:completion:]
%06lu
AKPrivateEmailRemoteViewController
APPLE_ACCOUNT
STORE
GAMECENTER
FACETIME
MESSAGES
prefs:notifyAuthKit=true&authKitContextID=%@
ACCOUNTS_AND_PASSWORDS&path=%@
&root=%@
HME_ERROR_ALERT_INSUFFICIENT_SECURITY_LEVEL_TITLE
HME_ERROR_ALERT_INSUFFICIENT_SECURITY_LEVEL_MESSAGE
HME_ERROR_ALERT_BUTTON_CONTINUE
HME_ERROR_ALERT_BUTTON_CLOSE
-[AKPrivateEmailDaemonService presentPrivateEmailUIForContext:completion:]
v24@?0@"AKPrivateEmail"8@"NSError"16
https://www.apple.com
AKLastEmailListRequestDateKey
userinfodata
dataCenter
com.apple.authkit.sync-private-emails
q24@?0@8@16
com.apple.authkit.authorization-list-update
v24@?0@"AKApplicationMetadataInfo"8@"NSError"16
-[AKUserInfoController _setLastEmailListRequestDate:]
-[AKUserInfoController _broadcastEmailChangeNotification]
_bundleIdentifier
_bundleName
_bundleDescription
_bundleType
_otherInfo
tddelta
mids
v32@?0@8Q16^B24
-[AKProximityPiggybackEngine dealloc]
invalidListVersion
hmeMappings
hmeProtocolVersion
Hide My Email info {added=%@, removed=%@, invalid=%d, shouldSync=%d}
/System/Library/Frameworks/SafariFoundation.framework/SafariFoundation
/System/Library/PrivateFrameworks/SafariFoundation.framework/SafariFoundation
/AppleInternal/Library/Frameworks/SafariFoundation.framework/SafariFoundation
SFSafariCredentialStore
authenticatorData
clientData
signature
credentialId
userHandle
AKAuthorizationRemoteViewController
com.apple.akd.context-validator
InteractiveUsernameOnly
Interactive
SilentPreferred
%@ -> %@
v24@?0q8@"NSError"16
v24@?0@"AKDeveloperTeam"8@"NSError"16
/System/Library/Frameworks/CoreLocation.framework/CoreLocation
/System/Library/PrivateFrameworks/CoreLocation.framework/CoreLocation
/AppleInternal/Library/Frameworks/CoreLocation.framework/CoreLocation
CLGeocoder
CLLocation
AKNotificationNameTornDown
AKNotificationNamePresented
com.apple.authkit.pushPresenterQueue
v16@?0Q8
v16@?0@"NSString"8
%loc%
LOGIN_CODE_ALERT_TITLE_DEFAULT
LOGIN_CODE_ALERT_IOS_MESSAGE_DEFAULT
(internal:piggy)
APPLE_ID_SIGN_IN_HEADER
APPLE_ID_UNABLE_TO_RESOLVE_LOCATION_FOR_REASON
APPLE_ID_LOCALE_AND_ADMINISTRATIVE_AREA_FORMAT
LOGIN_CODE_ALERT_OK_BUTTON
ALERT_DEFAULT_BUTTON
CHANGE_PASSWORD_ALERT_TITLE
CHANGE_PASSWORD_ALERT_BODY
CHANGE_PASSWORD_ALERT_DEF_BTN
CHANGE_PASSWORD_ALERT_ALT_BTN
prefs:root=ACCOUNTS_AND_PASSWORDS&path=%@&aaaction=changePassword
prefs:root=APPLE_ACCOUNT&aaaction=changePassword
v32@?0@"NSDictionary"8@"NSDictionary"16@"NSError"24
v24@?0@"AKAuthorization"8@"NSError"16
AKUIWorkQueue
v32@?0@"AKClient"8@"AKAppleIDAuthenticationContext"16@"NSError"24
v32@?0@"NSHTTPURLResponse"8@"NSDictionary"16@"NSError"24
FORGOT_PASSWORD_ALERT_RESET_BUTTON
FORGOT_PASSWORD_ALERT_MESSAGE
FORGOT_PASSWORD_ALERT_CANCEL_BUTTON
FORGOT_PASSWORD_ALERT_TITLE
PASSWORD_ALERT_SETTINGS_BUTTON
PASSWORD_ALERT_CANCEL_BUTTON
PASSCODE_ALERT_TITLE_WITH_USERNAME
PASSWORD_ALERT_TITLE_WITH_USERNAME
PASSWORD_ALERT_MESSAGE_WITH_USERNAME
CONTINUE_AUTH_ALERT_TITLE
CONTINUE_AUTH_ALERT_MESSAGE
PASSWORD_ALERT_TITLE
PASSWORD_ALERT_MESSAGE
PASSCODE_ALERT_TITLE_LOCKSCREEN
PASSCODE_ALERT_MESSAGE_LOCKSCREEN
PASSWORD_ALERT_TITLE_LOCKSCREEN
PASSWORD_ALERT_MESSAGE_LOCKSCREEN
PASSWORD_ALERT_MESSAGE_PROXY_INTERNAL_BLAME
PASSWORD_ALERT_MESSAGE_INTERNAL_BLAME
com.apple.ak.checkin-allowed
v32@?0@"ACAccount"8Q16^B24
AKCheckInQueue
com.apple.authkit.heartbeat-aps-token
com.apple.authkit.ack
com.apple.authkit.heartbeat-as-needed
com.apple.authkit.heartbeat-all
B32@?0@"ACAccount"8Q16^B24
com.apple.authkit.liveness-event
com.apple.authkit.global-signout-event
com.apple.authkit.service-signout-event
com.apple.ak.hb
%02x
v32@?0@"NSNumber"8@"NSArray"16^B24
com.apple.AuthKit.TiburonSatori
wasSuccess
availableLateAfterAuthComplete
performVerificationSuccess
performVerificationDuration
verificationResults
verificationResultsDuration
com.apple.AuthKit.AuthEvent
eventType
wasSuccessful
No Auth Type
AKSQLErrorCode
com.apple.authkit.itemstorequeue
BEGIN EXCLUSIVE TRANSACTION
COMMIT TRANSACTION
ROLLBACK TRANSACTION
pragma foreign_keys=on
@"NSXPCConnection"8@?0
custodianListVersion
beneficiaryListVersion
beneficiaryADSID
beneficiaryAccountName
SELECT COUNT(*) FROM %@
PRAGMA table_info('%@')
AKSharedBag
AKBagFetchQueue
com.apple.AuthKit.Piggyback
piggybackResult
circleTimeout
acceptingDone
requestingCancelled
requestingEscapedThroughHatch
Unknown Result
Default
v24@?0@"AKAuthorizationPresentationContext"8@"NSError"16
v16@?0@"NSArray"8
originURL
icloud.com
-[AKAuthorizationDaemonService _setupLoginChoicesForPresentationContext:]
create
v24@?0@"AKAuthorizationUserResponse"8@?<v@?@"AKAuthorization"@"NSError">16
AuthorizationServices
-[AKAuthorizationDaemonService presentAuthorizationUIForContext:completion:]
v24@?0@"AKAuthorizationUserResponse"8@"NSError"16
team_id
state
nonce
silent_app_transfer
client_id
origin
claim
selectedEmail
scopes
subscriptionToken
<%@ - identifier: %@, title: %@, subTitle: %@, body: %@, action button: %@, other button: %@, apps:%@>
com.apple.authkit.IDSFetchQueue
v24@?0@"AKAppleIDServerResourceLoadDelegate"8@"NSError"16
v32@?0@"NSString"8@"NSDictionary"16@"NSError"24
-[AKClientAnisetteService fetchAnisetteDataAndProvisionIfNecessary:withCompletion:]
-[AKClientAnisetteService syncAnisetteWithSIMData:completion:]
-[AKClientAnisetteService eraseAnisetteWithCompletion:]
-[AKClientAnisetteService provisionAnisetteWithCompletion:]
-[AKClientAnisetteService legacyAnisetteDataForDSID:withCompletion:]
-[AKClientAnisetteService fetchPeerAttestationDataForRequest:completion:]
/System/Library/Frameworks/Rapport.framework/Rapport
/System/Library/PrivateFrameworks/Rapport.framework/Rapport
/AppleInternal/Library/Frameworks/Rapport.framework/Rapport
RPCompanionLinkClient
RPCompanionLinkDevice
RPDestinationIdentifierDirectPeer
RPAppSignInService
<undefined>
SELECT db_version FROM version;
com.apple.language.changed
New connection from client %@ with the AK write entitlment.
New connection from client %@ (internal).
New connection from client %@ (private).
New connection from client %@ (public).
New connection from client %@ (beleverde).
New connection from client %@ because of internal code signing.
Rejecting connection from client %@ because it is not entitled.
_State
com.apple.akd.request-dispatcher-scheduler
v16@?0@"NSDictionary"8
<%@: %p context %@, requested by %@>
AKATCClearanceQueue
AKAuthTrafficQueue
com.apple.ak.unknown
v32@?0@"NSString"8@"NSMutableArray"16^B24
com.apple.authkit.authorization-fetch-user-information
com.apple.ak.listupdate
com.apple.authkit.keychain
/System/Library/Frameworks/ApplePushService.framework/ApplePushService
/System/Library/PrivateFrameworks/ApplePushService.framework/ApplePushService
/AppleInternal/Library/Frameworks/ApplePushService.framework/ApplePushService
APSConnection
APSEnvironmentProduction
com.apple.ak.aps.sim
com.apple.idmsauth
com.apple.authkit.pushServiceQueue
LOGIN_CODE_ALERT_TITLE_FAILED
prefs:root=APPLE_ACCOUNT&aaaction=resetPassword
prefs:root=ACCOUNTS_AND_PASSWORDS&path=%@&aaaction=resetPassword
WALRUS_2FA_ARMING_NOTIFICATION_TITLE
WALRUS_2FA_ARMING_NOTIFICATION_BODY
LOGIN_CODE_ALERT_MESSAGE_FOOTER_DEFAULT
WALRUS_DIRECT_ARMING_NOTIFICATION_TITLE
WALRUS_DIRECT_ARMING_NOTIFICATION_BODY
WALRUS_DIRECT_ARMING_NOTIFICATION_LOCKSCREEN_TITLE
WALRUS_DIRECT_ARMING_NOTIFICATION_LOCKSCREEN_BODY
com.apple.akd.srp-request
com.apple.authkit.piggybacking-request
AKGlobalConfigServiceQueue
https://gsas.apple.com/grandslam/GsService2/fetchGlobalConfigs
locale
liveness
signout-all
signout-
noptkn
imei
imei2
clcg
clhs
clbg
prtn
iccid
meid
event
circleStatus
cdpStatus
otStatus
stingrayDisabledIndicator
denyICloudWebAccess
phones
isRecoveryContactAssignee
isLegacyContactAssignee
custodianAssigneeStatus
beneficiaryAssigneeStatus
icloudMailEnabled
eligibilityStatus
eligible
ineligible
ineligibilityReason
failure
error
code
text
Unknown error occurred while checking if enabling walrus is allowed.
clientInfo
refreshUrl
X-Apple-I-Client-Time
X-Mme-Device-Id
X-Apple-I-MLB
X-Apple-I-ROM
X-Apple-I-SRL-NO
X-Mme-Companion-Device-Id
X-Mme-Proxied-Device-Id
bootstrap
ckauth
mrkauth
pdec
ploc
biopet
passcodepet
icdrsDisabled
webAccessEnabled
retry
cbid
pbid
v32@?0@"NSDictionary"8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSDictionary"@"NSError">24
v24@?0@"NSDictionary"8@"NSDictionary"16
-[AKAuthorizationRapportClient performAuthorization:companionLinkClient:advertisingService:completion:]
v24@?0@"<NSSecureCoding>"8@"NSError"16
ttrinfo
IDMS has triggered TTR for a failure in %@ | %@ (%@) 
 Title: %@ 
 Message: %@
AuthKit
621449
tap-to-radar
ComponentName
ComponentVersion
ComponentID
Classification
Serious Bug
Reproducibility
I Didn't Try
AutoDiagnostics
phone
Title
Description
Keywords
HomePod Silent authentication issue detected
An issue was encountered while performing silent authentication for your HomePod. Filing this radar will help determine what went wrong.
RelayState
X-Apple-I-FA-Relay-State
v28@?0B8@"NSHTTPURLResponse"12@"NSError"20
application/x-www-form-urlencoded
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>22A380007</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleExecutable</key>
<string>akd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.akd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>akd</string>
<key>CFBundlePackageType</key>
<string>APPL</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1.0</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>14E6097d</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.4</string>
<key>DTSDKBuild</key>
<string>20E233</string>
<key>DTSDKName</key>
<string>iphonesimulator16.4.internal</string>
<key>DTXcode</key>
<string>1430</string>
<key>DTXcodeBuild</key>
<string>14E6097d</string>
<key>MinimumOSVersion</key>
<string>16.4</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>abs-client</key>
<string>143531244</string>
<key>adi-client</key>
<string>572356293</string>
<key>application-identifier</key>
<string>com.apple.akd</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
<string>identity</string>
</array>
<key>com.apple.CompanionLink</key>
<true/>
<key>com.apple.TapToRadarKit.service-access</key>
<true/>
<key>com.apple.accounts.idms.fullaccess</key>
<true/>
<key>com.apple.appletv.pbs.user-presentation-service-access</key>
<true/>
<key>com.apple.apsd.ios-device-push-token</key>
<true/>
<key>com.apple.authentication-services-core.allow-authentication-request-proxying</key>
<true/>
<key>com.apple.authkit.client.internal</key>
<true/>
<key>com.apple.bluetooth.internal</key>
<true/>
<key>com.apple.bluetooth.system</key>
<true/>
<key>com.apple.cdp.statemachine</key>
<true/>
<key>com.apple.cdp.walrus</key>
<true/>
<key>com.apple.coreidvd.spi</key>
<true/>
<key>com.apple.developer.associated-domains</key>
<array/>
<key>com.apple.developer.device-information.user-assigned-device-name</key>
<true/>
<key>com.apple.devicecheckd</key>
<true/>
<key>com.apple.frontboard.debugapplications</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.keystore.lockassertion</key>
<true/>
<key>com.apple.keystore.sik.access</key>
<true/>
<key>com.apple.mobileactivationd.device-identifiers</key>
<true/>
<key>com.apple.mobileactivationd.spi</key>
<true/>
<key>com.apple.nano.nanoregistry</key>
<true/>
<key>com.apple.private.MobileActivation</key>
<array>
<string>RequestActivationState</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.adid</key>
<true/>
<key>com.apple.private.applemediaservices</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.associated-domains</key>
<true/>
<key>com.apple.private.followup</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.anisette</string>
</array>
<key>com.apple.private.ids.messaging.urgent-priority</key>
<array>
<string>com.apple.private.alloy.anisette</string>
</array>
<key>com.apple.private.ids.phone-number-authentication</key>
<true/>
<key>com.apple.private.ids.remotecredentials</key>
<true/>
<key>com.apple.private.imcore.imremoteurlconnection</key>
<true/>
<key>com.apple.private.keychain.circle.join</key>
<true/>
<key>com.apple.private.managed-settings.effective-read</key>
<true/>
<key>com.apple.private.notificationcenter-system</key>
<array>
<dict>
<key>identifier</key>
<string>com.apple.AuthKit</string>
</dict>
</array>
<key>com.apple.private.octagon</key>
<true/>
<key>com.apple.private.security.storage.Safari</key>
<true/>
<key>com.apple.private.storagekitd.info</key>
<true/>
<key>com.apple.private.swc.system-app</key>
<true/>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.Preferences</string>
</array>
<key>com.apple.security.attestation.access</key>
<true/>
<key>com.apple.security.exception.files.home-relative-path.read-only</key>
<array>
<string>/Library/com.apple.ManagedSettings/EffectiveSettings.plist</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.SharedWebCredentials</string>
<string>com.apple.fairplayd.versioned</string>
<string>com.apple.mobile.keybagd.xpc</string>
<string>com.apple.mobileactivationd</string>
<string>com.apple.devicecheckd</string>
<string>com.apple.AuthenticationServicesCore.AuthenticationServicesAgent</string>
<string>com.apple.server.bluetooth.le.att.xpc</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.nanobuddy</string>
<string>com.apple.pairedsync</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.system-container</key>
<true/>
<key>com.apple.sharing.Services</key>
<true/>
<key>com.apple.springboard.CFUserNotification</key>
<true/>
<key>com.apple.springboard.activateRemoteAlert</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.symptom_diagnostics.report</key>
<true/>
<key>com.apple.usermanagerd.persona.background</key>
<true/>
<key>com.apple.usermanagerd.persona.fetch</key>
<true/>
<key>fairplay-client</key>
<string>508119322</string>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.akd</string>
<string>com.apple.cfnetwork</string>
<string>com.apple.akd.pcsauth</string>
</array>
<key>keychain-cloud-circle</key>
<true/>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>akd</string>
</array>
</dict>
</plist>
abs-client
1435312440
adi-client
5723562930'
application-identifier
com.apple.akd0
aps-connection-initiate
04!com.apple.CommCenter.fine-grained0
spi
identity0
com.apple.CompanionLink
0+&com.apple.TapToRadarKit.service-access
0'"com.apple.accounts.idms.fullaccess
0;6com.apple.appletv.pbs.user-presentation-service-access
0)$com.apple.apsd.ios-device-push-token
0QLcom.apple.authentication-services-core.allow-authentication-request-proxying
0&!com.apple.authkit.client.internal
com.apple.bluetooth.internal
com.apple.bluetooth.system
com.apple.cdp.statemachine
com.apple.cdp.walrus
com.apple.coreidvd.spi
0*&com.apple.developer.associated-domains0
0E@com.apple.developer.device-information.user-assigned-device-name
com.apple.devicecheckd
0+&com.apple.frontboard.debugapplications
0,'com.apple.frontboard.launchapplications
0% com.apple.keystore.lockassertion
com.apple.keystore.sik.access
03.com.apple.mobileactivationd.device-identifiers
com.apple.mobileactivationd.spi
com.apple.nano.nanoregistry
0>"com.apple.private.MobileActivation0
RequestActivationState0+&com.apple.private.accounts.allaccounts
com.apple.private.adid
0)$com.apple.private.applemediaservices
0.)com.apple.private.aps-connection-initiate
0)$com.apple.private.associated-domains
com.apple.private.followup
com.apple.private.ids.messaging0" com.apple.private.alloy.anisette0U/com.apple.private.ids.messaging.urgent-priority0" com.apple.private.alloy.anisette061com.apple.private.ids.phone-number-authentication
0,'com.apple.private.ids.remotecredentials
03.com.apple.private.imcore.imremoteurlconnection
0+&com.apple.private.keychain.circle.join
061com.apple.private.managed-settings.effective-read
0R+com.apple.private.notificationcenter-system0#
identifier
com.apple.AuthKit0
com.apple.private.octagon
0.)com.apple.private.security.storage.Safari
0'"com.apple.private.storagekitd.info
0% com.apple.private.swc.system-app
0Q6com.apple.private.usernotifications.bundle-identifiers0
com.apple.Preferences0*%com.apple.security.attestation.access
?com.apple.security.exception.files.home-relative-path.read-only0<:/Library/com.apple.ManagedSettings/EffectiveSettings.plist0
44com.apple.security.exception.mach-lookup.global-name0
com.apple.SharedWebCredentials
com.apple.fairplayd.versioned
com.apple.mobile.keybagd.xpc
com.apple.mobileactivationd
com.apple.devicecheckd@com.apple.AuthenticationServicesCore.AuthenticationServicesAgent%com.apple.server.bluetooth.le.att.xpc0g8com.apple.security.exception.shared-preference.read-only0+
com.apple.nanobuddy
com.apple.pairedsync0&!com.apple.security.network.client
0(#com.apple.security.system-container
com.apple.sharing.Services
0-(com.apple.springboard.CFUserNotification
0.)com.apple.springboard.activateRemoteAlert
0+&com.apple.springboard.opensensitiveurl
0)$com.apple.symptom_diagnostics.report
0.)com.apple.usermanagerd.persona.background
0)$com.apple.usermanagerd.persona.fetch
fairplay-client
5081193220\
keychain-access-groups0B
apple
com.apple.akd
com.apple.cfnetwork
com.apple.akd.pcsauth0
keychain-cloud-circle
platform-application
seatbelt-profiles0
@(#)PROGRAM:akd  PROJECT:AuthKit-1
>)q=)
680
AKFidoInterface
NSObject
AKFidoDaemonService
AKAuthorizationIconManager
AKFollowUpManager
AKAppleIDPushHelperServiceDelegate
AKPrivateEmailStoreManager
AKAppleIDUserInformationResponse
AKDeviceListResponse
AKOwnerProxyClient
AKClient
AKAppleIDCodeGenerator
AKGrandSlamResponseHandler
SiWA
AKPiggybackingRequestProvider
NSSecureCoding
NSCoding
AKAuthenticationServerResponse
AKPiggybackAcceptingController
KCJoiningAcceptSecretDelegate
AKDServerUIContext
AKAuthorizationStoreManager
AKURLRequestProviderImpl
AKURLRequestProvider
AKAuthModeRequestProvider
AKADIProxy
AKAccountRecoveryController
AKSurrogateAuthenticationIDGenerator
AKSatoriController
AKWalrusDaemonProtocol
AKWalrusDaemonService
AKExponentialDispatchingAlgorithm
AKDispatchingAlgorithm
AKConstantDispatchingAlgorithm
AKFollowUpRequestProvider
AKSecurityUpgradeEligibilityRequestProvider
AKKeychainItem
AKSRPAuthenticationContextHelper
AKCAAuthPromptReporter
AKDispatchingCalculation
AKAuthenticationSurrogateModel
AKAuthenticationSurrogateManager
AKInheritanceRequestProvider
AKAuthorizationStoreMigrator
AKSQLiteMigration
AKCATiburonRequestAttemptReporter
_AKExpiringCacheValue
AKExpiringCache
AKNativeAnisetteService
AKAnisetteServiceProtocol
AKCustodianRequestProvider
AKURLBagRequestProvider
AKCATiburonInputUIReporter
AKKeychainItemDescriptor
AKCATiburonRequestReporter
AKPostInstallService
AKPCSAuthController
AKCAReporter
AKDeviceListRequestProvider
AKProximityController
AKProximityEngineController
AKAuthorizationSession
AKAuthorizationSessionManager
_AKMessage
AKCommandMessage
AKReplyMessage
AKPeerIDSAnisetteService
IDSServiceDelegate
AKPrivateEmailStoreMigrator
AKLoginPresenter
NSXPCListenerDelegate
AKLoginPresenterHostInterfaceProtocol
AKPushMessage
PCSAuth
AKPrivateEmailRequestProvider
AKFollowUpManagerFactory
AKUserNotificationManager
AKSRPContext
AKCarrierBundlePhoneCertificate
AKCarrierBundleUtilities
AKDispatchableURLRequest
AKDispatchableRequest
AKWebSessionPCSKeyProvider
AKWalrusContext
AKAuthenticationContext
NSCopying
AKAppleIDAuthenticationService
AKPiggybackRequestingControllerDelegate
AKDServerUIDelegate
AKAppleIDAuthenticationDaemonProtocol
AKAuthorizationEndorserRapportDiscovery
AKAuthorizationEndorserRapportClientDelegate
AKPiggybackRequestingController
KCJoiningRequestSecretDelegate
AKPrivateEmailPresenter
SBSRemoteAlertHandleObserver
AKPrivateEmailPresenterHostProtocol
AKFollowUpControllerServiceProviderImpl
AKFollowUpControllerServiceProvider
AKAuthenticationSettingsLauncher
AKPrivateEmailDaemonService
AKPrivateEmailDaemonProtocol
AKFuture
PCSWebAccess
AKAnisetteProvisioningService
AKAnisetteProvisioningDaemonProtocol
AppleIDSigning
AKAppleIDSigningDaemonProtocol
AKUserInfoController
AKBundleInformation
AKDeviceListController
AKProximityPiggybackEngine
AKProximityEngine
AKProximityPiggybackRequestingEngine
CBPeripheralManagerDelegate
AKProximityPiggybackAcceptingEngine
CBCentralManagerDelegate
CBPeripheralDelegate
AKPrivateEmailInformation
AKPrivateEmailServiceController
AKFidoDaemonServerHandler
AKAuthorizationPresenter
AKAuthorizationPresenterHostProtocol
AKServiceControllerImpl
AKServiceController
AKAuthenticationContextSanitizer
AKSRPService
AKAuthorizationCredentialStateController
AKPushMessageNotificationPresenter
AKPCSAuthPushHandler
AKGrandSlamRequestProvider
AKAuthorizationEndorserRapportClient
AKAuthorizationDaemonServiceDelegate
AKAuthenticationUILiaison
AKAuthenticationSurrogateManagerDelegate
AKAppleIDCheckInHelperService
AKStoreUtils
AKAuthorizationNotificationHandler
AKAdaptiveServiceInterface
AKAuthorizationStateBroadcastHandler
AKApplicationAuthorizationController
AKCASatoriReporter
AKCAAuthEventReporter
AKSQLiteExecutor
AKAuthorizationConnectionManager
AKCustodianDaemonService
AKCustodianDaemonProtocol
AKInheritanceInterface
AKInheritanceDaemonService
AKSQLiteHelper
AKURLBagService
NSURLSessionDelegate
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
AKURLBagDictionaryProvider
AKCAPiggybackReporter
AKAuthorizationDaemonService
AKAuthorizationDaemonProtocol
AKSRPAuthorizationContextHelper
AKUserNotification
AKDServerUIController
AKClientAnisetteService
AKStoreMigrator
AKDaemonConnectionManager
AKRequestDispatcher
_AKScheduledRequest
AKAuthorizationRevokeUpgradeController
AKTrafficClearenceRequest
AKAuthenticationTrafficController
AKAuthorizationListUpdateService
AKAppleIDAuthSupportProxyImpl
AKAppleIDAuthSupportProxy
AKKeychainManager
AKAppleIDPushHelperService
APSConnectionDelegate
AKMasterKeyVerifierRequestProvider
AKSQLiteQuery
AKFidoRequestProvider
AKSRPRequest
AKPiggybackReplyWaiter
AKPiggybackController
AKGlobalConfigService
AKLivenessRequestProvider
AKWalrusRequestProvider
NSXMLParserDelegate
AKCATiburonAuthorizationUIReporter
AKApplicationInformationController
AKSRPContextHelper
AKAuthorizationRapportClient
AKTTRController
AKTokenUpgradeRequestProvider
AKEducationEnterpriseController
DSIDForAccount:
APSEnvironment
MLBSerialNumber
IDMSEnvironmentFromBag:
T@"AKToken",R,N
JSONObjectWithData:options:error:
T@"NSDictionary",R,N,V_userInfo
ROMAddress
T@"NSNumber",&,N,V_capturedCode
T@"<AKAuthHandler>",R,N,V_authenticationHandler
T@"NSString",R,C,N,V_bundleName
T@"<AKAuthorizationDaemonServiceDelegate>",W,N,V_delegate
T@"NSString",R,N,V_primaryEmail
T@"<AKDispatchableRequest>",&,N,V_request
TB,N,V_resolved
T@"<AKPiggybackRequestingControllerDelegate>",W,N,V_delegate
T@"<AKProximityEngineController>",R,W,N
_absintheSigner
T@"<AKSQLiteMigration>",&,N,V_migrator
_accountManager
T@"AAFService",&,N,V_fidoDaemonService
_activeSessions
T@"AAFService",&,N,V_walrusDaemonService
_approvedCodeSigningIdentifiers
T@"AKAbsintheSigner",&,N,V_absintheSigner
_authorizationResponseValidator
T@"AKAppleIDAuthenticationContext",&,N,V_authContext
_bodyForTrustedContactsDataSync
T@"AKAppleIDAuthenticationContext",&,N,V_initiatingContext
_canBeCustodian
T@"AKAppleIDAuthenticationContext",&,N,V_surrogateContext
_circleDelegate
T@"AKAppleIDServerResourceLoadDelegate",R,N
_client
T@"AKAuthenticationServerResponse",&,N,V_initiatingServerResponse
_clock_timebase
T@"AKAuthenticationSurrogateManager",&,N,V_surrogateManager
_correlateContext:withAuthMode:
T@"AKAuthorizationContext",&,N,V_authContext
_deliverPushPayload:completion:
T@"AKAuthorizationEndorserRapportClient",&,N,V_authorizationEndorser
_endorseeClient
T@"AKAuthorizationEndorserRapportDiscovery",&,N,V_endorserRapportDiscovery
_engine
T@"AKAuthorizationTVServicePresenter",&,N,V_companionServicePresenter
_fetchIconBlock
T@"AKCASatoriReporter",&,N,V_analyticsReport
_generateSecret
T@"AKCircleRequestPayload",&,N,V_payload
_imageURLString
T@"AKClient",&,N,V_client
_itemAccessible
T@"AKClient",R,N,V_client
_lockScreenBody
T@"AKCredentialRequestContext",&,N,V_context
_phoneAsAppleID
T@"AKCredentialRequestContext",&,N,V_originalRequestContext
_processCredentialStateChanges:
T@"AKDevice",&,N
_publicAPSToken
T@"AKDevice",C,N,V_companionDevice
_removeAllExpiredPCSCredentials
T@"AKDeviceListRequestContext",&,N,V_deviceRequestContext
_schedulerQueue
T@"AKInheritanceContext",&,N,V_context
_secondaryTitle
T@"AKMasterToken",R,N
_securityDomain
T@"AKProximityController",&,N,V_proximityController
_server
T@"AKRequestDispatcher",&,N,V_requestDispatcher
_shouldClearRequest:withClient:
T@"AKSRPContextHelper",R,N,V_contextHelper
_slotID
T@"AKSurrogateAuthenticationIDGenerator",&,N,V_surrogateIDGenerator
_syncPrivateEmailsForAltDSID:client:userInformation:completion:
T@"AKToken",R,N,V_custodianSetupToken
_tvAppIconScale
T@"AKToken",R,N,V_shortLivedToken
_valueCondition
T@"AKWalrusContext",&,N,V_walrusContext
aaf_toHexString
T@"KCJoiningAcceptSession",&,N,V_acceptSession
account
T@"NSArray",C,N,V_credentials
ak_addCustodianSyncActionHeader
T@"NSArray",R,C,N,V_allAccountNames
ak_mapNullable:
T@"NSArray",R,N,V_aliases
aliases
T@"NSCondition",&,N,V_valueCondition
allHeaderFields
T@"NSData",&,N,V_value
altDSID
T@"NSData",C,N,V_authKitBodyData
appName
T@"NSData",R,N,V_federatedAuthRequestPayload
appleID
T@"NSDate",&,N,V_requestTime
authKitAccount:
T@"NSDate",R,N,V_dispatchDate
authorizationRequestFinishedWithAuthorization:error:completion:
T@"NSDictionary",&,N,V_additionalHeaders
bodyKey
T@"NSDictionary",&,N,V_info
cancelDataTask:
T@"NSDictionary",C,N,V_additionalHeaders
cliMode
T@"NSDictionary",C,N,VauthKitBody
command
T@"NSDictionary",R,C,N,V_deviceMap
containsObject:
T@"NSDictionary",R,N
context
T@"NSDictionary",R,N,V_additionalInfo
currentAuthorizationListVersion
T@"NSDictionary",R,N,V_configurationInfo
deviceDiscovery
T@"NSDictionary",R,N,V_eventDetails
didShowAppleID:
T@"NSDictionary",R,N,V_serverContext
dispatchingInfo
T@"NSDictionary",R,N,V_serviceTokens
forwardingEmail
T@"NSError",&,N,V_escapeHatchError
informativeText
T@"NSMutableArray",&,N,V_internalWrapper
initWithDelegate:queue:options:
T@"NSNumber",&,N,V_tvAppIconScale
initWithString:
T@"NSNumber",R,C,N,V_longitude
integratedCircuitCardIdentifier
T@"NSNumber",R,N,V_ageOfMajority
isBuddyFinished
T@"NSNumber",R,N,V_canBeCustodian
isEqualToArray:
T@"NSNumber",R,N,V_canHaveCustodian
isInternalBuild
T@"NSNumber",R,N,V_custodianLastModified
isMultiUserMode
T@"NSNumber",R,N,V_hasMDM
isRetryRequired
T@"NSNumber",R,N,V_privateAttestationEnabled
isWalrusEnabled
T@"NSNumber",R,N,V_timestamp
lastKnownLocale
T@"NSObject",C,N
lowercaseString
T@"NSObject<OS_dispatch_queue>",R,N
maxWait
T@"NSString",&,N,V_altDSID
needsNewAppleID
T@"NSString",&,N,V_initiatingPassword
T@"NSString",&,N,V_phoneCertificate
numberWithLong:
T@"NSString",C,N
options
T@"NSString",C,N,S_setProxiedAppName:,V_proxiedAppName
parser:validationErrorOccurred:
T@"NSString",C,N,V_account
payload
T@"NSString",C,N,V_actionButtonText
performTransactionBlockAndWait:
T@"NSString",C,N,V_alertBody
presentLoginAlertForContext:withError:title:message:completion:
T@"NSString",C,N,V_altDSID
primaryClientID
T@"NSString",C,N,V_bodyKey
reachableEmails
T@"NSString",C,N,V_decodedRecoveryIdentityToken
remoteAlertHandleDidDeactivate:
T@"NSString",C,N,V_event
requestBodyType
T@"NSString",C,N,V_label
requestedScopes
T@"NSString",C,N,V_lockScreenBody
T@"NSString",C,N,V_messageId
selectedPrivateEmailForAccount:
T@"NSString",C,N,V_password
serverMachineId
T@"NSString",C,N,V_queryString
serviceProvider
T@"NSString",C,N,V_refreshUrl
serviceWithDefaultShellEndpoint
T@"NSString",C,N,V_secondaryBodyCDP
T@"NSString",C,N,V_secondaryTitleCDP
setAccountName:
T@"NSString",C,N,V_securityDomain
setAppleIDAuth:
T@"NSString",C,N,V_service
setAuthKitBody:
T@"NSString",C,N,V_subTitleKey
setBagProvider:
T@"NSString",C,N,V_username
setCalculation:
T@"NSString",R,C,N,V_alternateButtonTitle
setCanHaveCustodian:forAccount:
T@"NSString",R,C,N,V_bundleDescription
setCredentials:
T@"NSString",R,C,N,V_defaultButtonTitle
setDeviceClass:
T@"NSString",R,C,N,V_deviceColor
setIsEphemeral:
T@"NSString",R,C,N,V_idmsData
setPrivateEmailServiceListener:
T@"NSString",R,C,N,V_privateEmailListVersion
setRequestTime:
T@"NSString",R,C,N,V_secondaryTitle
setRoutingInfo:
T@"NSString",R,C,N,V_urlBagKey
setShouldPromptForPasswordOnly:
T@"NSString",R,N
setValuesForKeysWithDictionary:
T@"NSString",R,N,V_altDSID
setWithObjects:
T@"NSString",R,N,V_appleIDCountryCode
shortLivedToken
T@"NSString",R,N,V_beneficiaryWrappedKey
startForTesting
T@"NSString",R,N,V_errorMessageTitle
stopAdvertising
T@"NSString",R,N,V_firstName
surrogateClient
T@"NSString",R,N,V_lastName
tableInfoForTable:withExecutor:
T@"NSString",R,N,V_nativeActionURLKey
unitTestContext
T@"NSString",R,N,V_secondaryActionMessage
T@"NSString",R,N,V_serverInfo
validateCodeURL
T@"NSString",R,N,V_urlSwitchingData
.cxx_destruct
IDMSEnvironment
DSID
T@"<AKFollowUpControllerServiceProvider>",&,N,V_serviceProvider
IsFollowUpItemNotificationForced:
T@"NSCondition",&,N,V_condition
PCSAuthContextForWebSessionIdentifier:serviceName:completion:
T@"NSError",C,N
T#,R
T@"NSNumber",R,N,V_ttlInMinutes
T@"<AKAuthenticationContext>",&,N,V_authContext
T@"NSString",R,N,V_errorMessage
T@"<AKAuthorizationEndorserRapportClientDelegate>",W,N,V_delegate
T@"NSString",R,N,V_privateEmail
T@"<AKFollowUpProvider>",&,N,V_followUpProvider
TB,R,N,V_isURLSwitchingRequired
T@"<AKProximityEngine>",R,N,V_engine
UUIDWithNSUUID:
T@"<AKProximityEngineController>",R,W,N,V_controller
_acceptSessionForPayload:error:
T@"<AKURLRequestProvider>",R,N,V_urlRequestProvider
_activateEngine
T@"AAFService",&,N,V_inheritanceDaemonService
_additionalInfo
T@"ACAccount",&,N,V_authKitAccount
_authKitAccount
T@"AKAccountManager",&,N
_bindingFailure
T@"AKAppleIDAuthenticationContext",&,N,V_context
_bundle
T@"AKAppleIDAuthenticationContext",&,N,V_pendingBGContext
_centralManager
T@"AKAppleIDAuthenticationContext",R,N
_clearanceQueue
T@"AKAttestationSigner",&,N,V_attestationSigner
_clientBundleID
T@"AKAuthenticationServerResponse",R,N,V_initialAuthResponse
_completionsByInternalMessageID
T@"AKAuthenticationSurrogateManager",R,N
_dataBlocksLock
T@"AKAuthorizationDaemonService",&,N,V_authorizationService
_device
T@"AKAuthorizationEndorserRapportClient",&,N,V_authorizationEndorserRapportClient
_endorseeDevice
T@"AKAuthorizationRapportClient",&,N,V_rapportClient
_exitForSIGTERM
T@"AKAuthorizationUserResponse",&,N,V_userResponse
_fetchTVAppIcon
T@"AKCarrierBundleUtilities",R
_hasMDM
T@"AKClient",&,N
_isRapportLogin
T@"AKClient",&,N,V_surrogateClient
_latestIDMSData
T@"AKConfiguration",&,N,V_configuration
_pendingReplies
T@"AKCredentialRequestContext",&,N,V_credentialRequestContext
_presenterQueue
T@"AKCustodianContext",&,N,V_custodianContext
_proxiedAppName
T@"AKDevice",C,N
_remoteListener
T@"AKDevice",C,N,V_proxiedDevice
_requestSession
T@"AKDispatchingCalculation",&,N,V_calculation
_schedulerTimer
T@"AKKeychainItemDescriptor",&,N,V_descriptor
_secondaryToken
T@"AKMasterToken",R,N,V_masterToken
_sendNotification:withUserInfo:
T@"AKRequestDispatcher",&,N
_serviceControllerWithProvider:
T@"AKSQLiteExecutor",&,N,V_executor
_shouldFallBack
T@"AKServerRequestConfiguration",&,N,V_requestConfiguration
_surrogateQueue
T@"AKToken",R,N,V_continuationToken
_synchronizable
T@"AKToken",R,N,V_passwordResetToken
_upgradeContext
T@"AKUserInformation",C,N,V_userInformationRepresentation
_webSessionUUID
T@"APSIncomingMessage",R,N,V_message
accessKeyString
T@"KCJoiningRequestSecretSession",&,N,V_requestSession
actions
T@"NSArray",R,C,N,V_addedPrivateEmails
ak_map:
T@"NSArray",R,C,N,V_removedPrivateEmails
ak_redactedCopy
T@"NSArray",R,N,V_federatedAuthURLWhiteList
allAccountNames
T@"NSData",&,N,V_tvAppIconData
allKeys
T@"NSData",C,N
analyticsReport
T@"NSData",R,N,V_anisetteResyncData
appProvidedData
T@"NSDate",&,N,V_beginDate
applicationStateForApplication:
T@"NSDate",R
authKitBodyData
T@"NSDictionary",&,N
base64EncodedStringWithOptions:
T@"NSDictionary",&,N,V_authResults
bundleForClass:
T@"NSDictionary",C,N
cdpAccountIsICDPEnabledForDSID:
T@"NSDictionary",C,N,V_appProvidedData
clientErrorCode
T@"NSDictionary",R,C,N
companionDevice
T@"NSDictionary",R,C,N,V_otherInfo
containsString:
T@"NSDictionary",R,N,V_acceptedTermsInfo
coverGlassColor
T@"NSDictionary",R,N,V_alertInfo
dealloc
T@"NSDictionary",R,N,V_configurationParameters
didRespondToMessage:withResult:
T@"NSDictionary",R,N,V_federatedAuthSamlRequest
dispatchCounter
T@"NSDictionary",R,N,V_serverProvidedData
fetchAllPrivateEmailsWithError:
T@"NSDictionary",R,N,V_walrusWebAccessInfo
hasPublicAccess
T@"NSError",&,N,V_escapeHatchTrigger
initWithClient:
T@"NSMutableDictionary",&,N,V_inProgressSurrogates
initWithEngine:
T@"NSNumber",R,C,N,V_latitude
initialMessage:
T@"NSNumber",R,N,V_acceptedDeviceTermsVersion
internalWrapper
T@"NSNumber",R,N,V_canBeBeneficiary
isEligibleToArmDeviceForPCSAuth
T@"NSNumber",R,N,V_canHaveBeneficiary
isFirstPartyApp
T@"NSNumber",R,N,V_custodianEnabled
isLegacyStudent
T@"NSNumber",R,N,V_dsid
isProxy
T@"NSNumber",R,N,V_isNotificationEmailAvailable
isValid
T@"NSNumber",R,N,V_serverExperimentalFeatures
T@"NSNumber",R,N,V_webAccessEnabled
lockScreenTitle
T@"NSObject<OS_dispatch_queue>",&,N,V_surrogateQueue
machAbsoluteTimeToTimeInterval:
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
message
T@"NSString",&,N,V_clientBundleID
nextCalculation
T@"NSString",&,N,V_pendingClientBundle
numberWithBool:
T@"NSString",&,N,V_urlSwitchData
openTransaction
T@"NSString",C,N,S_setProxiedAppName:
otherButtonText
T@"NSString",C,N,V_accessGroup
passwordRequest
T@"NSString",C,N,V_accountRecoveryMasterKey
performSilentTTRFor:completion:
T@"NSString",C,N,V_activeCode
peripheral:didDiscoverServices:
T@"NSString",C,N,V_alertTitle
presentServerProvidedUIForContext:withConfiguration:completion:
T@"NSString",C,N,V_appProvidedContext
protocolVersion
T@"NSString",C,N,V_dataCenterIdentifier
release
T@"NSString",C,N,V_decodedRecoveryPET
request
T@"NSString",C,N,V_identifier
requestWithURL:
T@"NSString",C,N,V_localizedAppsNameList
responseMessage
T@"NSString",C,N,V_lockScreenTitle
secondaryFooter
T@"NSString",C,N,V_otherButtonText
selectedRequest
T@"NSString",C,N,V_pushToken
service
T@"NSString",C,N,V_recoveryToken
serviceSpaceDidBecomeAvailable:
T@"NSString",C,N,V_reqInterceptToken
session
T@"NSString",C,N,V_secondaryFooter
setAccessGroup:
T@"NSString",C,N,V_secondaryToken
setAppBundleID:
T@"NSString",C,N,V_server
setAuthContext:
T@"NSString",C,N,V_sessionID
setAuthResults:
T@"NSString",C,N,V_titleKey
setBindHandler:
T@"NSString",R,C
setCanBeBeneficiary:forAccount:
T@"NSString",R,C,N,V_appName
setComponentID:
T@"NSString",R,C,N,V_bundleIdentifier
setCustodianEnabled:forAccount:
T@"NSString",R,C,N,V_deviceClass
setDeviceColor:
T@"NSString",R,C,N,V_deviceEnclosureColor
setModifiedName
T@"NSString",R,C,N,V_previousMessageId
setQueryString:
T@"NSString",R,C,N,V_secondaryBody
setRequestType:
T@"NSString",R,C,N,V_serverMachineId
setServiceType:
T@"NSString",R,C,N,V_webSessionUUID
setSubTitleKey:
T@"NSString",R,N,V_algorithmIdentifier
setWebAccessEnabled:forAccount:
T@"NSString",R,N,V_appleID
setXpcEndpoint:
T@"NSString",R,N,V_beneficiaryIdentifier
shouldUpdateAuthModeForAccount:
T@"NSString",R,N,V_custodianSessionID
startup
T@"NSString",R,N,V_federatedAuthURL
stringRepresentationForService:
T@"NSString",R,N,V_imageURLString
syncAnisetteURL
T@"NSString",R,N,V_managedOrganizationName
timeout
T@"NSString",R,N,V_notificationEmail
uppercaseString
T@"NSString",R,N,V_secondaryActionURLKey
userInformation
T@"NSString",R,N,V_transactionId
verifiedPrimaryEmailForAccount:
T@"NSURL",C,N,V_requestURL
T@"NSURL",R,N,V_url
T@"NSUUID",&,N,V_surrogateRegistrationID
T@"NSUUID",R,C,N,V_piggybackingRequestorPresenceSID
T@"NSUUID",R,N,V_presenceSID
T@"NSXPCConnection",R,N
T@"NSXPCListener",&,N,V_anisetteServiceListener
T@"NSXPCListener",&,N,V_authServiceListener
T@"NSXPCListener",&,N,V_authorizationServiceListener
T@"NSXPCListener",&,N,V_custodianServiceListener
T@"NSXPCListener",&,N,V_privateEmailServiceListener
T@"NSXPCListener",&,N,V_remoteListener
T@"RPAppSignInService",&,N,V_advertisingService
T@"RPCompanionLinkClient",&,N,V_deviceDiscovery
T@"RPCompanionLinkClient",&,N,V_endorseeClient
T@"RPCompanionLinkClient",&,N,V_linkClient
T@"RPCompanionLinkDevice",&,N,V_endorseeDevice
T@"SBSRemoteAlertHandle",&,N,V_remoteAlertHandle
T@,R
T@?,C,N,V_authorizationCompletion
T@?,C,N,V_authorizationResponseValidator
T@?,C,N,V_bindHandler
T@?,C,N,V_clearanceHandler
T@?,C,N,V_completionHandler
T@?,C,N,V_didDeactivateBlock
T@?,C,N,V_fetchIconBlock
T@?,C,N,V_invalidationHandler
T@?,C,N,V_matchHandler
T@?,C,N,V_pendingClientUIWork
T@?,C,N,V_presentationCompletion
T@?,C,N,V_privateEmailCompletion
T@?,C,N,V_rowHandler
T@?,C,N,V_surrogateCompletion
TB,N
TB,N,GisInvisible
TB,N,GisSynchronizable
TB,N,GshouldUseDataProtection
TB,N,S_setMasterKeyAsSecondFactor:,V__masterKeyAsSecondFactor
TB,N,V__denyVirtualInterfaces
TB,N,V_authenticatedRequest
TB,N,V_bindingFailure
TB,N,V_biometricAuth
TB,N,V_cliMode
TB,N,V_hasCheckedIn
TB,N,V_hasEndorserAuthorizing
TB,N,V_ignoreInternalTokens
TB,N,V_isSecondCall
TB,N,V_passcodeAuth
TB,N,V_retryAuth
TB,N,V_shouldCacheResource
TB,N,V_shouldFallBack
TB,N,V_shouldPreventDismissAfterUserSkip
TB,N,V_shouldSyncWithServer
TB,N,V_signWithIdentityToken
TB,N,V_unitTestContext
TB,N,V_walrusEnabled
TB,N,V_walrusWebAccessEnabled
TB,R
TB,R,N
TB,R,N,GisActivated
TB,R,N,GisContextSecretValidForSRP
TB,R,N,GisFidoAuthRequired,V_fidoAuthRequired
TB,R,N,GisSecondaryActionURLGSEndpoint,V_secondaryActionURLGSEndpoint
TB,R,N,V_allowPiggybacking
TB,R,N,V_allowPiggybackingPresence
TB,R,N,V_authorizationUsed
TB,R,N,V_invalidListVersionSupplied
TB,R,N,V_isAnisetteReprovisioningRequired
TB,R,N,V_isAnisetteResyncRequired
TB,R,N,V_isAuditLogin
TB,R,N,V_isDemoAccount
TB,R,N,V_isFirstPartyApp
TB,R,N,V_isManagedAppleID
TB,R,N,V_isPasscodeResetRequired
TB,R,N,V_isRetryRequired
TB,R,N,V_isSecondaryActionRequired
TB,R,N,V_isSenior
TB,R,N,V_isServerUIRequired
TB,R,N,V_isSilent
TB,R,N,V_isUnderAgeOfMajority
TB,R,N,V_phoneAsAppleID
TB,R,N,V_piggybackingAcceptorSupportsPresence
TB,R,N,V_piggybackingIDMSFallbackApproved
TB,R,N,V_piggybackingRequestorUsesPresence
TB,R,N,V_primaryEmailVetted
TB,R,N,V_requireSigningHeaders
TB,R,N,V_requiresPasscode
TB,R,N,V_shouldProxyAnisetteAction
TQ,N
TQ,N,V_authenticationMode
TQ,N,V_authenticationType
TQ,N,V_command
TQ,N,V_expectedResponseType
TQ,N,V_itemAccessible
TQ,N,V_itemClass
TQ,R
TQ,R,N
TQ,R,N,V_appleIDSecurityLevel
TQ,R,N,V_authMode
TQ,R,N,V_bundleType
TQ,R,N,V_dispatchCounter
TQ,R,N,V_managedOrganizationType
TQ,R,N,V_maxQueueSize
T^{__AppleIDAuthSupportData=},R,N,V_underlyingContext
T^{sqlite3=},R,N
Td,N,V_initialHandshakeTimeout
Td,N,V_maxWait
Td,N,V_timeout
Td,R,N,V_base
Td,R,N,V_delay
Ti,R,N,V_protocolVersion
Tq,N
Tq,N,V_serviceType
Tq,N,V_slotID
Tq,R,N,V_errorCode
Tq,R,N,V_piggybackingPresenceMode
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:willCacheResponse:completionHandler:
URLSession:didBecomeInvalidWithError:
URLSession:didCreateTask:
URLSession:didReceiveChallenge:completionHandler:
URLSession:task:didCompleteWithError:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:needNewBodyStream:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSessionDidFinishEventsForBackgroundURLSession:
URLWithString:
UTF8String
UUID
UUIDString
XPCInterface
_AKAuthContextWithUsername:password:
_AKIDSCertificateFetchQueue
__denyVirtualInterfaces
__masterKeyAsSecondFactor
_acceptSession
_acceptedDeviceTermsVersion
_acceptedTermsInfo
_acceptingControllerForTransactionId:
_acceptingControllers
_accessGroup
_accessibleWithKeychainAccessible:
_account
_accountForAppleIDAuthContext:
_accountForContinuationWithContext:completion:
_accountForContinuationWithContext:error:
_accountRecoveryMasterKey
_actionButtonText
_activeAPSEnvironment
_activeCode
_activePairedTinkerDevice
_activeSessionForContext:client:
_addAccountNameParameterToURL:withContext:
_addCachedPasswordInContext:
_addExperimentalFeaturesInfoToClientProvidedData:
_addTemporaryDeveloperTeam:
_addedPrivateEmails
_addingAdditionalHeaders:forURLRequest:
_additionalHeaders
_additionalInfoChangedForAccount:userInformation:
_advertisingService
_ageOfMajority
_akPCSAuthPushHandler
_alertBody
_alertInfo
_alertTitle
_algorithmIdentifier
_aliases
_alignedInsertionCandidates:withExistingItems:
_allAccountNames
_allowPiggybacking
_allowPiggybackingPresence
_altDSID
_alternateButtonTitle
_analyticsReport
_anisetteActionTargetForServerResponse:andContext:
_anisetteResyncData
_anisetteServiceListener
_annotateTransformationOfProperty:fromValue:toValue:
_appIDForIOS
_appIDForMacOS
_appName
_appProvidedContext
_appProvidedData
_appleCareNotificationID
_appleID
_appleIDCountryCode
_appleIDSecurityLevel
_apsConnection
_apsTokenSemaphore
_armDeviceWithMessage:account:notificationResult:
_arrayValueForEntitlement:
_attachAdditionalHeaders:toContextHelper:
_attemptBiometricOrPasscodeAuthWithContext:completion:
_attemptIndex
_attemptInteractiveAuthWithContext:completion:
_attemptPasswordlessAuthAfterBiometricOrPasscodeValidationWithContext:promptType:completion:
_attemptPasswordlessAuthOptionsWithContext:completion:
_attemptPasswordlessAuthWithContext:completion:
_attestationSigner
_auditToken
_authContext
_authKitAccountForPayload:
_authKitAccountFromContext:
_authKitBodyData
_authMode
_authProxy
_authResults
_authServiceListener
_authSessionManager
_authSessionTimeoutInterval
_authTrafficController
_authUILiaison
_authenticateWithContext:completion:
_authenticatedRequest
_authenticatingApps
_authenticatingDaemons
_authenticationContextForRevokingUpgrade
_authenticationHandler
_authenticationMode
_authenticationParameters:
_authenticationParametersForUsername:altDSID:context:
_authenticationType
_authorizationCompletion
_authorizationController
_authorizationEndorser
_authorizationEndorserRapportClient
_authorizationPropertiesChangedForAccount:userInformation:
_authorizationRealUserLock
_authorizationService
_authorizationServiceListener
_authorizationUsed
_bagFetchQueue
_bagURLForAltDSID:shouldFallBack:
_base
_beginAppleIDCreationFlowWithContext:completion:
_beginChangePasswordFlowWithAccount:context:completion:
_beginDate
_beginObservingLanguageChangeNotfication
_beginObservingSharingModePolicyChangeNotfication
_beginServerDrivenSecondaryActionWithURLKey:context:initialAuthResponse:completion:
_beginiForgotFlowWithContext:completion:
_beneficiaryIdentifier
_beneficiaryWrappedKey
_bindHandler
_bindStatement:withParameter:atPosition:
_biometricAuth
_bodyForAddAndRevokeCustodianRequest
_bodyForBeneficiaryAliasEndpoint
_bodyForBeneficiaryEndpoint
_bodyForCustodianUpdateRecoveryKeyRequest
_bodyForEmbargoEndFeedback
_bodyForFinalizeCustodianRequest
_bodyForPrivateEmailRegisterEndpoint
_bodyForRecoveryCircle
_bodyKey
_boolValueForEntitlement:
_broadcastCredentialStateChange:forApplicationWithClientID:
_broadcastCredentialStateChange:forApplicationWithClientID:withHandlerBundleID:
_broadcastEmailChangeNotification
_buildSchemaVersion1
_bundleDescription
_bundleID
_bundleIdentifier
_bundleName
_bundleNonPluginKit
_bundleType
_cacheFetchedPrivateEmail:keyAlreadyHashed:error:completion:
_cacheObject
_cacheSecondFactor:codeCaptureError:
_cachedBags
_cachedConfig
_cachedURLBagForAltDSID:
_calculation
_callCompletionBlockWithAuthorization:error:
_callCompletionBlockWithEmail:error:
_callCompletionWithAuthorization:error:
_callCompletionWithResults:password:additionalData:error:
_canBeBeneficiary
_canHaveBeneficiary
_canHaveCustodian
_canProceedWithArmingForMessage:account:
_capabilityForUIDisplay
_capturedCode
_capturedCodeString
_carrierUtilitiesQueue
_changePasswordAndAuthenticateWithContext:completion:
_checkForProximityIfNeededWithCircleStep:completion:
_checkForProximityWithCompletion:
_checkFreshnessAndVerifyWithPassword:serverResponse:additionalData:secondaryActionError:context:newServerResponse:username:completion:
_checkInQueue
_checkKeybagUnlockState
_checkScreenUnlockStateFromNotificationDictionary:
_circleContext
_circleRequestProcessingQueue
_classWithKeychainClass:
_clearCaptureState
_clearMutuallyExclusiveProperties:
_clearSessionState
_clearSurrogate:
_clearanceHandler
_cliMode
_clientAnisetteService
_clientAuthenticatedExternallyWithPassword
_clientBundleIDForContext:client:
_clientForContext:
_clientProxy
_clientShouldAuthenticateExternally
_clientUIWorkQueue
_codeSigningIdentifier
_command
_companionDevice
_companionServicePresenter
_completeAuthenticationWithServiceTokens:tokenFetchError:altDSID:authenticationResults:context:completion:
_completeAuthorizationWithServerResponse:userResponse:client:completion:
_completionHandler
_condition
_configURLRequestWithContext:
_configuration
_configurationInfo
_configurationParameters
_configureLinkClientWithService:companionLinkClient:requestContext:
_connection
_connectionWithProtocol:forBundleID:
_connectionsByBundleID
_constructRequestProviderForClient:altDSID:
_context
_contextHelper
_continuationRequestIdentifier
_continuationToken
_continueSRPContractWithAuthURL:context:completion:
_controller
_counter
_createAndPerformRequest:completion:
_createNewAppleIDAndAuthenticateWithContext:completion:
_createProvisioningEndURLRequestWithCPIM:
_createProvisioningStartURLRequestWithCompletion
_createSyncURLRequestWithMID:SRM:routingInfo:
_createV1Database
_createV2Database
_createV3Database
_credentialRequest
_credentialRequestContext
_credentialStateDidChange:forApplicationWithClientID:
_credentialStateForRequestContext:
_credentials
_currentDataBaseError
_currentReplyContext
_custodianContext
_custodianEnabled
_custodianLastModified
_custodianServiceListener
_custodianSessionID
_custodianSetupToken
_dataBlockForKey:
_dataBlocks
_dataCenterIdentifier
_database
_databasePath
_databaseQueue
_deactivate
_decodeBase64String:
_decodedRecoveryIdentityToken
_decodedRecoveryPET
_decorateLoadDelegate:withContext:
_decrementQueueSize
_defaultButtonTitle
_delay
_delegate
_deliverPushPayload:attachDuplexSession:completion:
_demoModeEnabled
_denyVirtualInterfaces
_description
_descriptor
_determineUIAndPerformRequest:completion:
_deviceClass
_deviceColor
_deviceDiscovery
_deviceEnclosureColor
_deviceMap
_deviceRequestContext
_didDeactivateBlock
_discoveredPeripheral:withServiceID:
_dismissUI
_dispatchCounter
_dispatchDate
_dispatchingAlgorithmForInfo:
_dispatchingAlgorithmsByInfo
_dispatchingAlgorithmsByInfoLock
_doURLSwitchWithServerResponse:context:completion:
_dsid
_emailKey
_endorserRapportDiscovery
_endpoint
_engineQueue
_engineTimeoutSource
_ensureDesiredAPSEnvironmentIsInUse
_errorCode
_errorFromResponseDictionary:
_errorFromServerResponse:
_errorFromServerResponseParameters:authenticationError:
_errorMessage
_errorMessageTitle
_escapeHatchError
_escapeHatchTrigger
_event
_eventDetails
_eventName
_executeAllowingReauthentication:completion:
_executeNextScheduledRequest
_executeQuery:
_executeRequestWithContext:urlBagKey:shouldSignWithIdentityToken:completion:
_executeScheduledRequest:
_executeURLRequest:withSession:completion:
_executor
_exemptedBundleIDsFromMandatoryUISecurityUpgrade
_expectedResponseType
_expiringCache
_expiryDate
_externalAuthToken
_externalLocalAuthData
_extractWebSessionAuthorizationFromResponse:
_factory
_federatedAuthRequestPayload
_federatedAuthSamlRequest
_federatedAuthURL
_federatedAuthURLWhiteList
_federatedPayloadFromInfo:
_fetchAllAuthorizedClientIDs
_fetchAnisetteDataAndProvisionIfNecessary:device:completion:
_fetchApplicationsForTeamID:
_fetchAssociatedDomainsWithCompletionHandler:
_fetchCredentialsForAssociatedDomains:completion:
_fetchDeveloperTeamWithClientID:
_fetchDeveloperTeamWithTeamID:
_fetchIDSCertificateWithCompletionHandler:
_fetchPhoneInformationWithAdditionalInfo:error:
_fetchSafariCredentialsWithCompletion:
_fetchSurrogateForClient:
_fetchSurrogateWithRegistrationID:
_fetchTokensForServiceIDs:withUsername:altDSID:masterToken:context:completion:
_fetchUserInformationForAltDSID:client:dataCenter:completion:
_fetchUserInformationWithContext:client:dataCenter:completion:
_fidoAuthRequired
_fidoDaemonService
_fidoHandler
_finalizeStatement:error:
_finishProcessingPushPayload:withReplyContext:completion:
_firstName
_followUpProvider
_formattedValueForPhoneNumber:countryCode:
_fullName
_generateLoginCodeForAccount:withIncomingMessage:
_getConfigsFromCache:context:completion:
_getCredentialStateWithStateRequest:completion:
_getPresentationContextForRequestContext:client:completion:
_grabLockAssertion
_handleAuthorizationDidFinishWithRequest:options:responseHandler:
_handleBasicLoginUICompletionWithUsername:password:context:additionalData:collectionError:completion:
_handleCreateNewAppleIDError:withContext:andCompletion:
_handleCurrentDeviceTrustStatusChangedWithPayload:
_handleDatabaseFailureError:
_handleDidStartServerAuthorizationWithEvent:options:
_handleError:logMessage:withUIWorkBlock:
_handleError:withServerResponse:context:andCompletion:
_handleFinishFidoResponse:data:context:recoveryToken:error:completion:
_handleFoundDevice:
_handleGrandSlamFidoAuthorizationResponse:context:recoveryToken:error:completion:
_handleGrandslamResponse:data:error:serverResponse:completion:
_handleIdentityProviderResponsePayload:completion:
_handleIncomingCommandMessage:completion:
_handleInvalidMasterTokenWithSubErrorCode:
_handleMissingUsernameOrPasswordForContext:password:username:completion:
_handlePasswordlessAuthResults:context:error:completion:
_handleRecoverCredentialsError:withContext:andCompletion:
_handleResult:forAccount:
_handleRevokedApplicationsForVersion:
_handleSecondFactorUICompletionWithCode:error:idmsData:initialAuthResponse:context:completion:
_handleSecondFactorUICompletionWithCode:error:idmsData:piggybacking:initialAuthResponse:context:completion:
_handleStartAuthorizationWithResponse:
_handleStartAuthorizingWithRequest:options:responseHandler:
_handleStartFidoAuthWithContext:fidoContext:serverResponse:completion:
_handleStartFidoResponse:data:context:recoveryToken:error:completion:
_handleSuccessfulVerificationForContext:withResults:serverResponse:completion:
_handleVerificationCompletionForUsername:password:serverResponse:didShowServerUI:continuationData:error:context:completion:
_handleVerificationError:forContext:completion:
_handleVerificationError:withContext:completion:
_harvestCommonFieldsFromBody:
_harvestCommonFieldsFromResponse:
_harvestManagedAppleIDInfoFromDictionary:
_hasActiveAppAuths
_hasActiveDaemonAuths
_hasApprovedSigningIdentifier
_hasCheckedIn
_hasEndorserAuthorizing
_hasPrimaryiCloudAccountForPayload:
_hasSessionTimedOutForRequest:
_hasValuesInMap:
_hashKeyIfNecessary:
_helperServiceForDevice:
_iconData
_iconName
_iconScale
_iconSize
_identifier
_identityAuthorizationPayload
_identityToken
_idmsData
_ignoreInternalTokens
_inProgressSurrogates
_incrementAttemptsForContext:error:
_incrementCounter
_incrementQueueSize
_info
_inheritanceDaemonService
_initTime
_initialAuthResponse
_initialHandshakeTimeout
_initiateAuthorizationWithRequestContext:completion:
_initiatePiggybackingWithCleanSession:withCompletion:
_initiateRapportAuthorizationWithRequestContext:completion:
_initiatingContext
_initiatingPassword
_initiatingPayload
_initiatingServerResponse
_insertScheduledRequest:
_internalCache
_internalCredentialStateForUserState:error:
_internalMessageIDsByTransportID
_internalWrapper
_interpolatedReason
_invalidListVersionSupplied
_invalidate
_invalidateEngine
_invalidateScheduledRequest:withErrorCode:
_invalidationHandler
_invisible
_isAnisetteReprovisioningRequired
_isAnisetteResyncRequired
_isAppleBinary
_isAuditLogin
_isBackgroundClient:eligibleForForegroundAuthenticationWithContext:
_isClientWaitingForSurrogateAuth:
_isDemoAccount
_isDeviceScreenUnlockNotification:
_isDeviceTrustedForRequest:
_isEligibleForUpgradeFromPassword
_isEngineActivated
_isFetchingIconWithRequestContext:
_isFirstPartyApp
_isFirstPartyLogin
_isForcedEligibleForForegroundAuthentication
_isFullUICapabilityRequiredFor2FA
_isInteractiveAuthRequiredForContext:
_isManagedAppleID
_isNotificationEmailAvailable
_isOnInternalBuild
_isPCSAccessForContext:
_isPasscodeChangeNotification:
_isPasscodeResetRequired
_isPasswordPromptNecessaryForCommand:
_isPrimaryAccount:
_isPrimaryAccountAltDSID:
_isProxyingForApp
_isRetryRequired
_isSecondCall
_isSecondaryActionRequired
_isSenior
_isServerUIRequired
_isSilent
_isSilentAppTransfer
_isSubscriptionLogin
_isTouchIDRequiredForGrandSlamServiceTokenWithID:
_isURLSwitchingRequired
_isUnderAgeOfMajority
_isWebLogin
_itemClass
_keepAlive
_keepLoginAliveWithContext:error:andCompletion:
_keyProvider
_keychainAccessibleWithAccessible:
_keychainClassWithClass:
_keychainItemForContext:error:
_keychainManager
_keychainQueue
_label
_lastName
_lastPayload
_lastUpdated
_latestPushMessage
_latitude
_launchAppleIDSettingsForContext:withCheckinID:
_linkClient
_localUserHasEmptyPassword
_localizedAppsNameList
_locationNameWithLatitude:longitude:completion:
_lock
_lockScreenTitle
_loginAlertForAccount:latitude:longitude:message:resolvedBody:
_loginAlertOptionsForAccount:latitude:longitude:message:resolvedBody:
_loginCodeNotificationID
_loginNotificationOptionsWithContext:isSilent:defaultButtonTitle:alternateButtonTitle:
_longitude
_managedAppleIDInfoChangedForAccount:userInformation:
_managedOrganizationName
_managedOrganizationType
_masterKey
_masterKeyAsSecondFactor
_masterToken
_matchHandler
_maxQueueSize
_maxWait
_message
_messageHandlingQueue
_messageId
_messageSendingService
_messageSupportsAlerts:
_mhq_handleIncomingReplyMessage:
_migrateToSchemaVersion2
_migrateToSchemaVersion3
_migrateToSchemaVersion4
_migrateToSchemaVersion5
_migrator
_monitorXPCEvents
_name
_nativeActionURLKey
_nativeAnisetteService
_newZStringWithString:
_nextScheduledRequest
_notificationCategories
_notificationCenter
_notificationContent:
_notificationDictionaryForClient:context:needFullUI:
_notificationEmail
_notificationResultFromButtonPressed:
_notificationsByPushID
_notifyCredentialStateChange:forApplicationWithClientID:
_notifyDelegatesOfMessageActivation:result:
_notifyDelegatesOfMessageActivation:result:payload:
_notifyOfTimeout
_notifyServerOfTeardownWithContext:completion:
_numberFormatter
_optionalValueWithString:
_optionsForCreatingUserNotificationWithTitle:message:defaultButton:alternateButton:serviceType:
_orderedDispatchingInfoKeys
_originalRequestContext
_otherButtonText
_otherInfo
_pairedDeviceAnisetteService
_parseDevicesFromResponseBody:
_parseFailedServerResponse:withError:context:completion:
_passcodeAuth
_password
_passwordResetBackupToken
_passwordResetToken
_payload
_pcsAuthPushHandler
_pendingBGContext
_pendingClientBundle
_pendingClientUIWork
_pendingNotification
_pendingTrafficRequests
_performAuthenticationWithContext:completion:
_performBlockWithClient:context:requireFullUICapability:allowRedirectToSettings:block:
_performCommandForMessage:forAccount:
_performFidoStartAuthActionWithContext:serverResponse:completion:
_performGrandslamEndpointActionWithContext:serverResponse:completion:
_performHeartbeatCheckInIfNecessaryWithToken:completion:
_performInteractiveAuthWithContext:completion:
_performPasswordlessSRPAuthWithAccount:context:completion:
_performPasswordlessSRPAuthWithContext:completion:
_performPostInstallWithCompletion:
_performRegisterRequestForAltDSID:key:completion:
_performRemoteCommand:argument:completion:
_performRequest:completion:
_performRequestForContext:completion:
_performRequestWithContext:responseHandler:
_performRequestWithURL:context:error:
_performSRPAuthenticationWithContext:completion:
_performSRPAuthorizationForUserResponse:client:completion:
_performSafeSRPAuthenticationWithContext:completion:
_performSecondaryActionWithServerResponse:context:completion:
_performSilentRequest:withCompletion:
_performSilentServiceTokenAuthWithContext:completion:
_performTokenUpgradeWithContext:completion:
_performUIOutOfProcess
_peripheralManager
_permitedProcessNamesToProxyInitialAuthWhiteList
_permitedProcessNamesToProxyWhiteList
_permittedProcessNamesForInteractiveAuthOnLimitedContext
_persistGrandSlamServiceTokens:forAltDSID:DSID:appleID:forContext:error:
_persistGrandSlamServiceTokensHelper:forAltDSID:DSID:appleID:appleIDAuthAccount:error:
_phoneCertificate
_piggybackReporter
_piggybackingAcceptorSupportsPresence
_piggybackingIDMSFallbackApproved
_piggybackingPresenceMode
_piggybackingRequestQueue
_piggybackingRequestorPresenceSID
_piggybackingRequestorUsesPresence
_postCheckInDataToIDMSWithAccount:pushToken:event:completion:
_prepareEngine
_prepareRequestContext:forCredentialState:
_prepareStatementForQuery:error:
_presenceSID
_presentUI
_presentUIWithControllerClassName:extraOptions:presentationServiceCompletion:
_presentationCompletion
_previousMessageId
_primaryEmail
_primaryEmailVetted
_printStatement:
_privateAttestationEnabled
_privateEmail
_privateEmailCompletion
_privateEmailListVersion
_privateEmailServiceListener
_processCachedUserInputWithContext:completion:
_processCodeEntryErrorWithContext:completion:
_processDictionary:addedPrivateEmails:removedPrivateEmails:
_processFetchCompletionForAltDSID:items:fetchError:completion:
_processHandshakeWithContext:handshakeReply:andHandshakeError:withCompletion:
_processHideMyEmailForAltDSID:userInfo:response:
_processIncomingUserInformationForAltDSID:userInformation:
_processMessageWithDelegates:
_processPendingCompletionsForPayload:
_processPiggybackPayload:
_processProximityDetection:withReplyContext:forPushPayload:
_processUserResponse:client:completion:
_processValidationCodeSuccessResponse:authResponse:results:completion:
_processingTimeOut
_promptForAuthenticationPasswordForAccount:completion:
_promptForChangePasswordForAccount:
_promptForSecretWithContext:completion:
_properties
_protocolVersion
_provideServiceTokensIfRequiredForContext:authenticationResults:serverResponse:completion:
_provider
_proxiedAppBundleID
_proxiedAssociatedDomains
_proxiedClientAppID
_proxiedClientAppName
_proxiedClientBundleID
_proxiedClientServiceID
_proxiedClientTeamID
_proxiedDevice
_proximityController
_proximityDetected
_proximityFailed
_pushCommandsPostingCFUserNotification
_pushDelegates
_pushServiceQueue
_pushToken
_pushTopics
_queryDelegatesForSuppressAction:
_queryString
_queue
_queueSize
_rapportClient
_reachability
_realUserVerificationResults
_reauthHandler
_reauthenticateAndExecuteWithCompletion:
_reauthenticateWithCompletion:
_receiveResponseFromNotification:handler:
_recoverCredentialsAndAuthenticateWithContext:completion:
_recoveryContextFromServerInfo:error:
_recoveryToken
_refreshApplicationInformationForAltDSID:
_refreshAuthModeForContext:completion:
_refreshAuthModeIfNecessaryForContext:completion:
_refreshFollowUpsWithIdmsInfo:context:authHandler:completion:
_refreshFollowUpsWithIdmsInfo:context:completion:
_refreshLocalAccountAndUpdateContext:completion:
_refreshUrl
_releaseAssertion
_relinquishmentHandler
_remoteAlertHandle
_removeAcceptingControllerForTransaction:
_removeConnectionWithProtocol:forBundleID:
_removeCredentialWithDescriptor:
_removeDataBlockForKey:
_removedPrivateEmails
_repairAppleIDWithContext:completion:
_replyToCommandMessageWithInternalID:didSucceed:returnData:error:completion:
_reportData
_reprovisionAnisetteWithServerResponse:context:completion:
_reqInterceptToken
_request
_requestBodyForUpgradeRevokeContext:
_requestConfiguration
_requestDispatcher
_requestProvider
_requestTime
_requestURL
_requestUserAuthorizationForContext:completion:
_requestingController
_requirePassword
_requireSigningHeaders
_requiresHSA2Repair
_requiresPasscode
_resolved
_resyncAnisetteWithServerResponse:context:completion:
_retryAuth
_retryCount
_revokeDeviceTrust
_rowHandler
_safePerformSRPWithUserResponse:client:completion:
_safeTTL:
_sanitizeContext:
_sanitizedCopy
_scheduleNextRequest
_scheduledRequests
_scheduledRequestsLock
_schedulerLoop
_schedulerTimerDidFire:
_schemaVersion
_secondaryActionMessage
_secondaryActionURLGSEndpoint
_secondaryActionURLKey
_secondaryBody
_secondaryBodyCDP
_secondaryFooter
_secondaryTitleCDP
_sendAuthorizationDidFinishRequestWithAuthorization:
_sendAuthorizationDidFinishRequestWithError:
_sendDeviceCancelledReplyWithContext:
_sendDidStartServerAuthorizationEvent
_sendDidTapNotificationMessage
_sendStartAuthorizationRequest
_sendTrustedDeviceListChangeNotificationWithPayload:
_serverContext
_serverExperimentalFeatures
_serverHandler
_serverInfo
_serverMachineId
_serverProvidedData
_service
_serviceIDForRequestContext:
_serviceProvider
_serviceTokens
_serviceType
_sessionID
_setAuthKitAccount:inUse:forService:completion:
_setCheckInAllowedToValue:forAccount:
_setConnection:forBundleID:
_setCurrentSharingMode
_setDataBlock:forKey:
_setDatabaseVersionToVersion:
_setDispatchingAlgorithm:forInfo:
_setEnabledTopics:
_setHeartbeatToken:
_setIdentityToken:
_setLastEmailListRequestDate:
_setMasterKeyAsSecondFactor:
_setMessage:
_setPassword:
_setPasswordEquivalentToken:
_setProxiedAppName:
_setRequestURL
_settingsLauncher
_settingsPaneIDForContext:
_settingsSurrogationInProgress
_setupBeneficiaryAliasWithInheritanceContext:completion:
_setupLoginChoicesForPresentationContext:
_setupServices
_shortLivedToken
_shouldAllowPCSKeyAccessForContext:
_shouldAutomaticallyMigrate
_shouldCacheResource
_shouldClearCKForFailedMagicAuthWithError:authContextHelper:
_shouldContinueAuthenticatingForUsername:password:serverResponse:didShowServerUI:continuationData:error:context:completion:
_shouldContinueProcessing:
_shouldEarlyReturnRequest:forCredentialState:
_shouldForcePrivateEmail
_shouldForceUI
_shouldPreventDismissAfterUserSkip
_shouldProcessPushMessage:withAccount:
_shouldProxyAnisetteAction
_shouldRefreshAccountAndUpdateContext
_shouldSendGrandSlamTokensForRemoteUI
_shouldSendIdentityTokenForRemoteUI
_shouldSkipAccountUpdatesForAuthWithContext:
_shouldSkipAuthorizationUI
_shouldSkipBiometrics
_shouldSkipInitialReachabilityCheck
_shouldStartSatoriVerificationForRequestContext:
_shouldSyncWithServer
_shouldUpdateDatabaseToListVersion:
_shouldUseProxiedClientBundleIDForSRP
_showAlertForLoginCodeValidationError:context:completion:
_showAlertForLoginError:context:completion:
_showAlertForVerificationError:context:completion:
_showBiometricOrPasscodeAuthWithContext:completion:
_showCode:body:title:footer:completion:
_showContinueUsingUIWithContext:completion:
_showIdentityProviderUIFromResponse:completion:
_showServerUIWithContext:completion:
_showServerUIWithURLRequest:context:completion:
_showServerUIWithURLRequest:context:initialAuthResponse:completion:
_signRequestWithProvisioningHeaders:forUrlKey:
_signWithBAAHeadersIfNeededForKey:withRequest:
_signWithIdentityToken
_srpAuthContextHelperWithContext:
_startChangePasswordFlowForAccount:
_startFetchingIconForBundleID:size:scale:
_startListeningForMessagesFromPairedDevice
_startMonitoringPushEvents
_startPasswordResetFlowForAccount:
_startProximityControllerIfNeededWithPushPayload:
_startProximityControllerWithPresenceSID:
_stepThroughRowsWithQuery:statement:
_stopObservingLanguageChangeNotification
_stopObservingSharingModePolicyChangeNotfication
_stopProximityController
_stopProximityControllerIfNeededWithPushPayload:
_stopWaitingForCheckInWithContext:andError:
_storeConsentedApplication:teamID:listVersion:
_storeDeveloperTeam:listVersion:
_storeManager
_strictlyUnarchivedObjectOfClasses:fromData:error:
_stringByAppendingBlameIfNecessary:withContext:client:
_stringValueForEntitlement:
_subTitleKey
_surrogateCheckinIDLock
_surrogateClient
_surrogateCompletion
_surrogateContext
_surrogateIDGenerator
_surrogateManager
_surrogateRegistrationID
_synchronizeLocalFollowUpsWithServerPayload:altDSID:error:
_teardownPayloadWithPushMessage:isArmed:
_telephonyClient
_timeout
_timestamp
_titleAndMessageForError:context:completion:
_titleKey
_tq_invokeTrafficRequest:
_trafficQueue
_transaction
_transactionId
_transformationAnnotations
_trustedContactOperationsByIDFromArray:
_trustedContactPropertiesChangedForAccount:userInformation:
_ttlInMinutes
_tvAppIconData
_underlyingContext
_unitTestContext
_unsafe_InvalidateEngine
_unsafe_addKeychainItem:shouldAttemptUpdate:error:
_unsafe_anisetteDataForDSID:withError:
_unsafe_anisetteDataWithRoutingInfoForDSID:withError:
_unsafe_cancelEngineTimeoutSource
_unsafe_closeDatabase
_unsafe_createDataBase
_unsafe_deleteKeychainItemWithDescriptor:error:
_unsafe_fetchKeychainItemWithDescriptor:error:
_unsafe_fetchKeychainItemsWithDescriptor:error:
_unsafe_openDatabase:
_unsafe_presentMessage:forAccount:
_unsafe_processPushMessage:
_unsafe_provisionAnisetteWithCompletion:
_unsafe_resumeEngineTimeoutSource
_unsafe_showLoginNotificationWithCode:incomingMessage:piggy:
_unsafe_showNotificationForMessage:account:responseHandler:
_unsafe_tearDownNotificationWithID:
_unsafe_teardownCurrentLoginNotification
_unsafe_updateCacheWithData:
_unsafe_updateCacheWithData:forAltDSID:
_unsafe_updateKeychainItemWithDescriptor:newItem:error:
_unsafe_wipeDatabase:
_updateAccount:withUserInformationResponse:modifyAliases:
_updateAccountInformationWithResultsDictionary:
_updateAltDSIDAndUsername:
_updateAuthKitAccount:withServerResponse:context:error:
_updateContext:serviceName:
_updateContext:withPassword:forAppleID:
_updateCredentialForSavedAIDAAccount:withNewTokens:
_updateDSIDWithRawValue:
_updateDispatchingAlgorithmForInfo:withResponse:
_updatePrivateEmailsWithInformation:
_updateRestrictedSharingMode
_updateURLBagIfNecessaryFromCache:altDSID:error:
_updateURLBagIfNecessaryFromCache:altDSID:urlSwitchData:shouldFallBack:completion:
_updateWithValuesFromContext:
_upgradeSecurityLevelWithContext:completion:
_upgradeToSchemaVersion2
_upgradeToSchemaVersion3
_upgradeToSchemaVersion4
_url
_urlAtKey:
_urlBagKey
_urlRequestProvider
_urlSession
_urlSwitchData
_urlSwitchingData
_useDataProtection
_userInfo
_userInfoChangeNotificationDictionaryForAltDSID:userInformation:
_userInformationRepresentation
_userResponse
_username
_validateAndProcessUserResponse:client:completion:
_validateAppleIDAuthContext:
_validateAppleIDAuthContext:forAuthMode:
_validateAuthContext:
_validateDataExists:
_validateDataForVerifyEnableWalrusAllowedRequest:error:
_validateDataForWalrusStateUpdateToServerRequest:error:
_validateErrorCode:withKey:
_validateFederatedAppleIDAuthContext:
_validateJSONResponseData:error:
_validateLoginCode:forAltDSID:masterToken:idmsData:authContext:completion:
_validateMachineID:
_validateNativeAppleIDAuthContext:
_validateResponseBodyFormat
_validateSilentPreferredFederatedAppleIDAuthContext:
_value
_verificationAttempts
_verificationFailed
_verificationQueue
_verifyAccountTrustWithRequestContext:completion:
_verifyClientInformationForRequest:completion:
_verifyEntitlements
_verifyEntitlementsForRequest:
_verifyUserID:
_verifyUsername:password:context:completion:
_waitForNotificationResponse:withIdentifier:responseHandler:
_waitForSurrogateCheckInWithContext:withUIWorkBlock:client:andCheckInID:
_walrusContext
_walrusDaemonService
_walrusEnabled
_walrusWebAccessEnabled
_walrusWebAccessInfo
_webAccessEnabled
_webSessionKeyProvider
aaData
absintheSignatureForData:completion:
absintheSigner
absoluteString
ac_secureCodingError
acceptSession
acceptedDeviceTermsVersion
acceptedTermsInfo
accessGroup
accessKey
accountAliases
accountCode
accountManager
accountName
accountNamesForAltDSID:completion:
accountPropertyForKey:
accountRecoveryMasterKey
ackWithPayload:account:
ackWithPayload:account:completion:
actionButtonText
actionWithIdentifier:title:options:
activate
activateWithCompletion:
activateWithContext:
activateWithError:
activated
activeAnisetteDSIDWithEnvironment:
activeCode
activeLoginCode:
activeServiceNamesForAccount:
addConnection:forBundleID:
addConnectionForClient:
addDelegate:queue:
addEntriesFromDictionary:
addExecutionBlock:
addFollowUpItems:error:
addKeychainItem:completion:
addNotificationRequest:withCompletionHandler:
addObject:
addObjectsFromArray:
addOperation:
addOrUpdateKeychainItem:completion:
addService:
addTimer:forMode:
addedPrivateEmails
additionalHeaders
additionalInfo
additionalInfoForAccount:
administrativeArea
advertisingService
ageOfMajority
ageOfMajorityForAccount:
akAction
ak_acceptedTermsInfo
ak_addAppProvidedContext:
ak_addAppleIDHeaderWithValue:
ak_addAppleIDUserModeHeaderWithValue:
ak_addAuthorizationHeaderWithHeartbeatToken:forAltDSID:
ak_addAuthorizationHeaderWithIdentityToken:forAltDSID:
ak_addClientApp:
ak_addClientBundleIDHeader:
ak_addClientInfoHeader
ak_addClientTimeHeader
ak_addCountryHeader
ak_addDeviceConfigurationModeHeaderForAuthContext:
ak_addDeviceMLBHeader
ak_addDeviceROMHeader
ak_addDeviceSerialNumberHeader
ak_addDeviceUDIDHeader
ak_addEphemeralAuthHeader
ak_addExperimentModeHeader
ak_addFeatureMaskHeader
ak_addFidoRecoveryTokenHeader:
ak_addICSCIntentHeader
ak_addInternalBuildHeader
ak_addJSONRequestHeader
ak_addLocalUserUUIDHashHeader
ak_addLocaleHeader
ak_addPRKRequestHeader
ak_addProvisioningUDIDHeader
ak_addProxiedAnisetteHeaders:
ak_addProxiedClientInfoHeader:
ak_addProxiedDeviceUDIDHeader:
ak_addReAuthenticationHeader
ak_addRequestContextHeader:
ak_addSKUCountryHeader
ak_addShortLivedTokenHeaderWithIdentityToken:forAltDSID:
ak_addTimeZoneHeaders
ak_addWalrusDeviceRegionHeader
ak_anisetteHeadersWithCompanionData:
ak_anisetteHeadersWithData:
ak_arrayWithJSONResponseData:
ak_booleanAsInteger
ak_dictionaryWithResponseData:
ak_errorByAppendingUserInfo:
ak_errorWithCode:
ak_errorWithCode:underlyingError:
ak_errorWithCode:userInfo:
ak_expiryDateFromServerDate:localDate:ttl:
ak_filter:
ak_firstObjectMatchingFilter:
ak_hexString
ak_isAuthenticationError
ak_isAuthenticationErrorWithCode:
ak_isIncompatibleDevicesError
ak_isServiceError
ak_isSurrogateAuthAlreadyInProgressError
ak_isUnableToPromptError
ak_isUserCancelError
ak_isUserSkippedError
ak_isUserTryAgainError
ak_jsonDictionaryWithResponseData:
ak_mapObjects:
ak_mapObjectsNullable:
ak_proxiedAnisetteHeadersWithData:
ak_serverFriendlyString
ak_setBodyWithParameters:
ak_setJSONBodyWithParameters:
ak_truncatedCopy
ak_urlEncoded
ak_urlQueryString
ak_wrappedAnisetteError:
alertBody
alertInfo
alertTitle
algorithmIdentifier
aliasesForAccount:
allAuthKitAccounts
allHTTPHeaderFields
allKeysForObject:
allObjects
allValues
allocWithZone:
allowPiggybacking
allowPiggybackingPresence
altDSIDForAccount:
altDSIDforPrimaryiCloudAccount
alternateButtonTitle
anisetteDataForDevice:provisionIfNecessary:
anisetteDataWithError:
anisetteResyncData
anisetteServiceListener
anonymousListener
anticipateEscrowAttempt
appID
appIconForBundleID:size:completion:
appProvidedContext
appendFormat:
appendRequestUrlQueryParameterNamed:value:
appleIDAccountType
appleIDAccountWithAltDSID:
appleIDAccountWithAppleID:
appleIDAuthSupportCopyAppTokensWithMasterToken:authURL:serviceIds:authParams:error:
appleIDAuthSupportTokenCreateWithExternalizedVersion:error:
appleIDAuthorizationURLs
appleIDCountryCode
appleIDCountryCodeForAccount:
appleIDSecurityLevel
appleOwnedDomains
applicationProxyForIdentifier:
apps
archivedDataWithRootObject:requiringSecureCoding:error:
argument
armDeviceWithPCSAuthorizationContextForMessage:completion:
array
arrayByAddingObjectsFromArray:
arrayWithObject:
arrayWithObjects:
arrayWithObjects:count:
attemptTokenUpgradeWithCompletionHandler:
attestationDataForDevice:withRequest:completion:
attestationDataForRequest:completion:
attestationHeaders
attestationSigner
attributes
auditToken
authContext
authKitAccount
authKitAccountForSilentServiceToken:
authKitAccountType
authKitAccountWithAltDSID:
authKitAccountWithAppleID:
authKitAccountWithDSID:
authKitBody
authMode
authResults
authServiceListener
authenticateWithContext:completion:
authenticatedRequest
authenticationHandler
authenticationMode
authenticationModeForAccount:
authenticationParametersWithCompletion:
authenticationRequestFinishedWithResults:password:additionalData:error:
authenticationType
authenticatorData
authkitAccount
authorizationAccessLevel
authorizationClientProvidesUI
authorizationCompletion
authorizationContextHelperWithContext:client:
authorizationContextWithRequest:client:
authorizationController
authorizationDaemonServiceWillProcessUserResponse:
authorizationEndorser
authorizationEndorserRapportClient
authorizationEndorserRapportClientDidFinish:
authorizationRequest
authorizationRequestInitiatedWithUserProvidedInformation:completion:
authorizationRequiresRapport
authorizationResponseValidator
authorizationService
authorizationServiceListener
authorizationUsed
authorizationUsedForAccount:
authorizationUserInformationForRequest:shouldRequestUpdate:error:
authorizedAppListVersion
authorizedApplicationsListVersion
authorizedRequest
autorelease
backingColor
bagForAltDSID:
base
basicAuthURL
beginAuthenticationDataTaskWithRequest:completionHandler:
beginAuthenticationWithContext:client:clearanceHandler:
beginAuthorizationWithContext:completion:
beginDataTaskWithRequest:completionHandler:
beginDate
beginFederatedAuthWithInitialResponse:completionHandler:
beginSessionWithContext:client:completion:
beginTransaction
beneficiaryContacts
beneficiaryFirstName
beneficiaryIdentifier
beneficiaryLastName
beneficiaryListVersion
beneficiaryPassword
beneficiarySetupToken
beneficiaryWrappedKey
bindHandler
bindParameter:error:
bindParameters:error:
bindingFailure
biometricAuth
boolValue
buildLoginCodeNotificationWithTitle:body:footer:loginCode:
buildReauthenticationContextFromContext:error:
buildRequest:
bundleDescription
bundleID
bundleIDs
bundleIdentifier
bundleName
bundleType
bundleURL
bundleWithIdentifier:
bundleWithURL:
bytes
cacheObject
calculation
calculationWithDate:counter:algorithm:relinquisher:
canBeBeneficiary
canBeBeneficiaryForAccount:
canBeCustodian
canBeCustodianForAccount:
canHaveBeneficiary
canHaveBeneficiaryForAccount:
canHaveCustodian
canHaveCustodianForAccount:
canOpenApplication:reason:
canPerformAuthorizationRequest:error:
canPerformCredentialRequest:error:
canPerformRequestWithAccount:error:
canPresentRemoteUI
cancel
cancelAllOperations
cancelAuthorizationWithContext:completion:
captureCurrentValue
capturedCode
categoryWithIdentifier:actions:intentIdentifiers:options:
cdpAccountIsOTEnabledForAltDSID:
centralManager:connectionEventDidOccur:forPeripheral:
centralManager:didConnectPeripheral:
centralManager:didDisconnectPeripheral:error:
centralManager:didDiscoverPeripheral:advertisementData:RSSI:
centralManager:didFailToConnectPeripheral:error:
centralManager:didUpdateANCSAuthorizationForPeripheral:
centralManager:willRestoreState:
centralManagerDidUpdateState:
changePasswordURL
checkForLocaleChange
checkSecurityUpgradeEligibilityForContext:completion:
circleStep
circleURL
claimTokenString
class
clearCache
clearContinuationTokenIfSupported
clearDatabase:
clearNotificationsForItem:error:
clearSerializedMemoryCache
clearSessionCache
clearSessionCacheWithCompletion:
clearanceHandler
client
clientAppBundleId
clientBundleID
clientData
clientForContext:
clientID
clientInfo
clientProvidedDataHelper:
closeDatabase
code
color
combinedAliasesAndReachableEmailsForAccount:
commitChangesToCacheWithInformation:error:
commitTransaction
companionDeviceAnisetteData
companionServicePresenter
compare:
completionHandler
componentsJoinedByString:
componentsSeparatedByString:
componentsWithURL:resolvingAgainstBaseURL:
condition
configuration
configurationInfo
configurationInfoURL
configurationInfoWithIdentifiers:forAltDSID:completion:
configurationParameters
configureExportedInterface:
configureWithParameters:
confirmReceiptForMessage:
conformsToProtocol:
connection:channelSubscriptionsFailedWithFailures:
connection:didChangeConnectedStatus:
connection:didFailToSendOutgoingMessage:error:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didReceivePublicToken:
connection:didReceiveToken:forInfo:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didSendOutgoingMessage:
connectionDidReconnect:
containingAppForPlugInWithPid:
contextFromSRPServerResponse:
contextHelper
contextSecretValidForSRP
contextWithIncomingPayload:
continuationToken
continuationTokenForAccount:
continuationTokenForAccount:error:
continueAuthorizationWithContext:completion:
continueFetchingIconForRequestContext:completion:
continueFetchingIconWithCompletion:
continueFetchingIconWithRequestContext:completion:
continueSessionWithContext:client:completion:
controller
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createAppleIDURL
createChildAccountURL
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createUserNotificationOptionsWithTitle:body:defaultButtonTitle:alternateButtonTitle:makeNoise:
createUserNotificationOptionsWithTitle:body:lockScreenTitle:lockScreenBody:defaultButtonTitle:alternateButtonTitle:makeNoise:
createUserNotificationWithTitle:body:defaultButtonTitle:alternateButtonTitle:makeNoise:
createUserNotificationWithTitle:body:lockScreenTitle:lockScreenBody:defaultButtonTitle:alternateButtonTitle:makeNoise:
credential
credentialForAccount:error:
credentialID
credentialRequestContext
credentialStateDidChange:completion:
credentialStateDidChange:forApplicationWithClientID:
credentials
currentConnection
currentDevice
currentDeviceAuthenticationModeForAuthContext:
currentEmailListVersion
currentLocale
currentProtocolVersion
currentReachabilityStatus
currentRunLoop
currentSchemaVersion
custodianCodeConfiguration
custodianContacts
custodianContext
custodianEnabled
custodianEnabledForAccount:
custodianInfos
custodianInfosForAccount:
custodianLastModified
custodianLastModifiedForAccount:
custodianListVersion
custodianRecoveryToken
custodianServiceListener
custodianSessionID
custodianSetupToken
custodianUUID
dataCenterIdentifier
dataUsingEncoding:
dataWithBytes:length:
dataWithPropertyList:format:options:error:
database
databasePath
date
dateByAddingTimeInterval:
dateWithTimeIntervalSince1970:
dateWithTimeIntervalSinceNow:
deactivate
debugDescription
decodeBoolForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
decodedConfigurationInfo:
decodedRecoveryIdentityToken
decodedRecoveryIdentityTokenString
decodedRecoveryPET
decodedRecoveryPETString
decorateWithContext:
defaultButtonTitle
defaultCenter
defaultManager
defaultSound
defaultWorkspace
delay
delegate
deleteAuthorizationDatabaseWithCompletion:
deleteKeychainItemWithDescriptor:completion:
deletePrivateEmailDatabaseWithCompletion:
demoAccountForAccount:
dependentAltDSID
description
descriptor
desiredInternalTokens
destroyProvisioningSession:
device
deviceClass
deviceColor
deviceEnclosureColor
deviceMap
deviceRegionRequired
deviceRequestContext
deviceSpecificLocalizedStringWithKey:
deviceSpecificLocalizedStringWithKey:inTable:
deviceTrustRevokedForAccount:
dictionary
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithDictionary:
dictionaryWithObjects:forKeys:count:
didCancelRequesting
didCircleTimeout
didComplete:
didCompleteVerificationWithSuccess:duration:
didCompleteWithAuthorization:error:
didCompleteWithSuccess:authorizationAlreadyComplete:
didDeactivateBlock
didEscapeRequesting
didFinishAccepting
didModifyName:
didPerformVerificationWithSuccess:duration:
didReceiveNewPublicToken:
didRespondToMessage:result:payload:
didSelectAnonymousEmail:
didSelectAnonymousEmail:didCancel:
didSelectAppleID:
didSelectPasswordCredential:
didSucceed
dismissBasicLoginUIForContext:client:completion:
dismissBasicLoginUIForContext:completion:
dismissKeepUsingUIForContext:client:withCompletion:
dismissKeepUsingUIForContext:withCompletion:
dismissNativeRecoveryUIForContext:client:completion:
dismissNativeRecoveryUIForContext:completion:
dismissSecondFactorUIForContext:client:completion:
dismissSecondFactorUIForContext:completion:
dismissServerProvidedUIForContext:client:completion:
dismissServerProvidedUIForContext:completion:
dispatchDate
dispose:
doesNotRecognizeSelector:
domain
doubleValue
dsid
effectiveBoolValueForSetting:
eligibleForContinuationKeyAuthentication
emailForContext:error:
enableTransactions
enclosureColor
encodeBool:forKey:
encodeObject:forKey:
encodeWithCoder:
encryptedPRKC
endAuthenticationForAppleID:password:error:context:client:clearanceHandler:
endProvisioningURL
endProvisioningWithSession:PTM:PTMLength:TK:TKLength:
endSessionWithContext:client:completion:
endTransaction
endorseeClient
endorseeDevice
endorserRapportDiscovery
endpoint
engine
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
eraseAnisetteForContext:withCompletion:
eraseAnisetteForDevice:completion:
eraseAnisetteWithCompletion:
eraseProvisioningForDSID:
error
errorCode
errorMessage
errorMessageTitle
errorWithDomain:code:userInfo:
escapeHatchError
escapeHatchTrigger
escapeHatchURL
establishConnectionWithNotificationHandlerEndpoint:completion:
establishConnectionWithStateBroadcastHandlerEndpoint:completion:
event
eventDetails
executeFetchHmeListRequestWithCompletion:
executeRequestWithCompletion:
executeWithResponseHandler:
executor
existingStatus
expectedResponseType
expirationDate
expiryDate
exportedObject
exportedProtocol
extensionItemWithAppleIDAuthenticationContext:
externalizedVersion
externalizedVersionString
familyName
familyNameForAccount:
federatedAuthRequestPayload
federatedAuthSamlRequest
federatedAuthURL
federatedAuthURLWhiteList
fetchAnisetteDataAndProvisionIfNecessary:device:completion:
fetchAnisetteDataAndProvisionIfNecessary:withCompletion:
fetchAnisetteDataForContext:provisionIfNecessary:withCompletion:
fetchAppInformationWithAltDSID:client:completion:
fetchAppListWithAltDSID:completion:
fetchAppleIDAuthorizationURLSetWithCompletion:
fetchAppleIDAuthorizeHTMLResponseTemplateWithCompletion:
fetchAppleOwnedDomainSetWithCompletion:
fetchAuthModeWithContext:client:completion:
fetchAuthModeWithContext:completion:
fetchAuthorizationListVersion
fetchConfigDataURL
fetchContextForWebSessionIdentifier:completion:
fetchCustodianDataRecoveryKeyWithContext:completion:
fetchCustodianRecoveryCodeConfigurationWithCompletion:
fetchCustodianRecoveryTokenWithContext:completion:
fetchDeveloperTeamWithClientID:completion:
fetchDeveloperTeamWithTeamID:completion:
fetchDeviceMapWithContext:completion:
fetchFollowUps
fetchGlobalConfigURL
fetchGlobalConfigUsingCachePolicy:context:completion:
fetchGlobalConfigurationUsingPolicy:completion:
fetchIconBlock
fetchKeychainItemWithDescriptor:completion:
fetchKeychainItemsWithDescriptor:completion:
fetchManifestOptionsWithInheritanceContext:completion:
fetchPeerAttestationDataForContext:withRequest:completion:
fetchPeerAttestationDataForRequest:completion:
fetchPrimaryApplicationInformationForAltDSID:appInformation:client:completion:
fetchPrimaryApplicationInformationForWebServiceWithInfo:completion:
fetchPrivateEmailForAltDSID:withKey:completion:
fetchPrivateEmailWithContext:completion:
fetchRealUserLikelihoodForRequest:withCompletionHandler:
fetchURLBagForAltDSID:completion:
fetchURLBagFromCache:altDSID:completion:
fetchUserInformationForAltDSID:client:completion:
fetchUserInformationForAltDSID:completion:
fetchUserInformationWithContext:client:completion:
fidoAuthRequired
fidoDaemonService
fidoHandler
fileExistsAtPath:
fileURLWithPath:
finalizeCustodianSetupWithContext:completion:
finishFidoAuthWithResponse:client:context:recoveryToken:completion:
fireDate
firstName
firstObject
flushCache
flushCacheForced:
followUpProvider
forceURLBagUpdateForAltDSID:urlSwitchData:completion:
forceUpdateBagWithUrlSwitchData:completion:
formattedUsernameFromUsername:
forwardingEmailForAccount:
frequency
fullName
generateCheckinID
generateLoginCode:
generateLoginCodeWithCompletion:
generateRadarRequestFor:
getApprovedSharedWebCredentialsEntriesSortedByHighestValueForAppWithAppID:completionHandler:
getContextForRequestContext:completion:
getCredentialStateForClientID:completion:
getCredentialStateForRequest:completion:
getCredentialsForAppWithAppID:completionHandler:
getCredentialsForAppWithAppID:externallyVerifiedAndApprovedSharedWebCredentialDomains:completionHandler:
getCurrentDataSubscriptionContextSync:
getIDMSRoutingInfo:forDSID:
getInternalCredentialStateForCredentialRequestContext:
getMobileSubscriberHomeCountryList:error:
getPETForUsername:password:completion:
getPresentationContextForRequestContext:completion:
getServerUILoadDelegateForAltDSID:completion:
getServerUILoadDelegateWithContext:completion:
getServerUILoadDelegateWithServerContext:completion:
getSubscriptionInfoWithError:
getUserDefaultVoiceSubscriptionContext:
getUserInformationForAltDSID:completion:
getUserInformationWithContext:completion:
givenName
givenNameForAccount:
groupKitEligibility
groupKitEligibilityForAccount:
handleResponseError:
hasCheckedIn
hasEndorserAuthorizing
hasInternalAccess
hasInternalEntitledAccess
hasInternalPrivateAccess
hasInternalPrivateEntitlementAccess
hasMDM
hasMDMForAccount:
hasOwnerAccess
hasPrimaryiCloudAccountForAltDSID:
hasPrivateAccess
hasPrivateSignedAccess
hasRegisteredSurrogateForContext:
hasUniqueDeviceIdentifier
hasUsedAuthorization
hasWriteAccess
hash
hash:
hashedWrappingKeyRKC
headerValue
hearbeatTokenForAccount:
heartbeatToken
heartbeatTokenValue
host
housingColor
iCloudAccountForAltDSID:
iCloudAccountForAppleID:
iForgotContinuationURL
iForgotURL
identifier
identityToken
identityTokenValue
idmsData
ignoreInternalTokens
imageURLString
inProgressSurrogates
includeFamilyDevices
includeUntrustedDevices
indexOfObjectPassingTest:
info
inheritanceBeneficiarySetupToken
inheritanceContext
inheritanceDaemonService
init
initWithAccountManager:webSessionPCSKeyProvider:
initWithAccountType:
initWithAddress:forKey:
initWithAltDSID:identityToken:
initWithAltDSID:urlSwitchData:shouldFallBack:
initWithAppleID:altDSID:
initWithAttributes:
initWithAuditToken:
initWithBase64EncodedString:options:
initWithBase:maxQueueSize:
initWithBundleIdentifier:
initWithBundleIdentifier:allowPlaceholder:error:
initWithBundleIdentifier:bundleName:bundleDescription:bundleType:otherInfo:
initWithBytes:length:encoding:
initWithBytesNoCopy:length:freeWhenDone:
initWithCapacity:
initWithCircleContext:
initWithClient:altDSID:
initWithClient:authenticationContext:
initWithClient:context:
initWithClient:requestDispatcher:
initWithCoder:
initWithConnection:
initWithContext:
initWithContext:client:
initWithContext:emailKey:urlBagKey:
initWithContext:urlBagKey:
initWithContext:urlBagKey:shouldCacheResource:
initWithCredentialRequest:
initWithCredentialRequest:connection:
initWithData:
initWithData:encoding:
initWithDatabasePath:
initWithDatabasePath:migrationController:
initWithDate:counter:algorithm:relinquisher:
initWithDelay:maxQueueSize:
initWithDelegate:
initWithDescriptor:value:
initWithDeviceID:
initWithDictionary:
initWithEnvironmentName:namedDelegatePort:queue:
initWithEvent:
initWithExecutor:
initWithFireDate:interval:target:selector:userInfo:repeats:
initWithFollowUpFactory:provider:
initWithInfo:
initWithInfo:responder:
initWithKey:
initWithKey:altDSID:
initWithKey:altDSID:clientAppBundleId:
initWithKeychainManager:
initWithLatitude:longitude:
initWithLiaison:client:delegate:
initWithListenerEndpoint:
initWithMachServiceName:
initWithMaxWait:description:
initWithMessage:
initWithName:value:
initWithNotificationCenter:
initWithObject:expiryDate:
initWithPCSKeyProvider:
initWithParameters:
initWithPath:
initWithPiggybackReporter:
initWithPresenceSID:
initWithProxy:
initWithPushMessage:
initWithQueue:
initWithRequest:
initWithRequest:requestType:
initWithRequestContext:
initWithRequestID:
initWithRequestProvider:
initWithResponseBody:
initWithResponseInfo:
initWithSRPContext:
initWithServerResponse:
initWithServerResponse:andDelegate:piggybackReporter:
initWithServerResponse:forAppleID:
initWithServerResponse:responseBody:
initWithService:
initWithServiceName:viewControllerClassName:
initWithStoreManager:
initWithType:primary:
initWithUILiaison:client:
initWithUILiaison:client:requestDispatcher:
initWithURL:
initWithURL:contextHelper:completionHandler:
initWithURL:resolvingAgainstBaseURL:
initWithURLRequestProvider:authenticationHandler:completionHandler:
initWithUUIDString:
initWithUser:password:
initWithUser:site:
initWithWebSessionIdentifier:expiryDate:userInfo:
initialAuthResponse
initialHandshakeTimeout
initialize
initiateCustodianSetupWithContext:completion:
initiatePiggybackingWithCompletion:
initiatingContext
initiatingPassword
initiatingServerResponse
insertObject:atIndex:
intValue
integerValue
internalFeaturesMaskValue
internationalMobileEquipmentIdentity
internationalMobileEquipmentIdentity2
invalidListVersionSupplied
invalidate
invalidateWithError:
invalidationHandler
invisible
isAcceptingPayload
isAccountsFrameworkAvailable
isActivated
isActive
isAnisetteReprovisioningRequired
isAnisetteResyncRequired
isAppWithBundleIDForeground:
isAppleIDLoginEnabled
isAuditLogin
isBaaEnabledForKey:
isCancelled
isContextEligibleForBiometricOrPasscodeAuth
isContextEligibleForSilentAuth
isContextEligibleForSilentAuthCoercion
isContextRequestingReauthForExistingService
isContextSecretValidForSRP
isContinuityPush
isCreateAppleIDAllowedWithCompletion:
isCustodianSyncAction
isDemoAccount
isDevicePasscodeProtected:
isDone
isEligibleForUpgradeFromPassword
isEnabledForDataclass:
isEphemeral
isEqual:
isEqualToDate:
isEqualToDictionary:
isEqualToSet:
isEqualToString:
isExemptedFromMandatoryUISecurityUpgrade
isExpired
isFidoAuthRequired
isFirstTimeLogin
isInCircle
isInRestrictedSharingMode
isInvisible
isKindOfClass:
isMachineProvisioned:
isManagedAppleID
isManagedAppleIDForAccount:
isMemberOfClass:
isNotificationEmailAvailable
isNotificationEmailAvailableForAccount:
isPasscodeResetRequired
isPermittedForInteractiveAuthOnLimitedContext
isPermittedToProxy
isPermittedToProxyAuthorizationBundleIdentifier
isPermittedToProxyInitialAuth
isPrimaryiCloudAccount:
isProtectedWithPasscode
isRecoverableError:
isRequestingPayload
isSecondCall
isSecondaryActionRequired
isSecondaryActionURLGSEndpoint
isSenior
isServerUIRequired
isSilent
isSurrogateAuthInProgressForClient:
isSynchronizable
isTracingEnabled
isTriggeredByNotification
isURLSwitchingRequired
isUnderAgeOfMajority
isUnderage
isUnlocked
isUpdateable
isUsernameEditable
isValidEnvironment:
isValidMessage
isWaitingForSettingsSurrogateAuth
isWebAccessEnabled
itemAccessible
itemAttributes
itemClass
itemIdentifier
itemIdentifiersRequiringNotificationClearFromPayload:
itemsForAltDSID:pushMessageInfo:fromIDMSPayload:
keyAndBundleIdAreHashed
label
lastDataSyncTimestamp
lastKnownActiveAnisetteDSID
lastKnownIDMSEnvironment
lastName
latitude
launchOutOfProcessAuthentication:surrogateID:withErrorHandler:
launchSettingsForContext:withCheckinID:
legacyAnisetteDataForContext:DSID:withCompletion:
legacyAnisetteDataForDSID:device:completion:
legacyAnisetteDataForDSID:withCompletion:
length
linkClient
linkType
linkedDevicesWithRelationship:
listAllPrivateEmailsForAltDSID:completion:
listener:shouldAcceptNewConnection:
loadDelegate
localPresenceFound
localUserUUID
locale
localeIdentifier
locality
localizedAppName
localizedAppsNameList
localizedDescription
localizedName
localizedNameForContext:
localizedStringForKey:value:table:
lock
lockScreenBody
loginChoice
loginChoices
longLongValue
longitude
looksLikeiForgotURLKey:
lookupPrivateEmailForAltDSID:withKey:completion:
lookupPrivateEmailWithContext:completion:
machineID
mainRunLoop
makePrivateEmail
managedOrganizationName
managedOrganizationNameForAccount:
managedOrganizationType
managedOrganizationTypeForAccount:
manifest
masterKeyID
masterToken
masterTokenForAccount:
matchHandler
maxQueueSize
maximumLoginAttempts
messageFromTransportRepresentation:
messageId
migrateSchemaFromVersion:
migrateSchemaIfNecessary
migrator
mobileEquipmentIdentifier
modelNumber
mostRecentlyUsedAuthKitAccount
mutableCopy
name
nativeActionURLKey
needsCredentialRecovery
needsNewChildAccount
needsPasswordChange
needsRepair
needsSecurityUpgradeUI
newBagURLRequest
newHandleWithDefinition:configurationContext:
nonce
notification
notificationAction
notificationDictionaryWithTitle:message:defaultButton:alternateButton:
notificationEmail
notificationEmailForAccount:
null
numberFromString:
numberOfRowsForTable:withExecutor:
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
objectAtIndexedSubscript:
objectForInfoDictionaryKey:
objectForKey:
objectForKeyedSubscript:
openApplication:withOptions:completion:
openApplicationWithBundleID:
openDatabase:
openSensitiveURL:withOptions:
openSensitiveURL:withOptions:error:
openURL:configuration:completionHandler:
operatingSystems
operation
optionsWithDictionary:
orderedSetWithArray:
origin
originalRequestContext
otherInfo
ownerAppleID
ownerCustodianAltDSID
ownerDevice
parsableRepresentation
parse
parseRefreshUrl:
parser:didEndElement:namespaceURI:qualifiedName:
parser:didEndMappingPrefix:
parser:didStartElement:namespaceURI:qualifiedName:attributes:
parser:didStartMappingPrefix:toURI:
parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:
parser:foundCDATA:
parser:foundCharacters:
parser:foundComment:
parser:foundElementDeclarationWithName:model:
parser:foundExternalEntityDeclarationWithName:publicID:systemID:
parser:foundIgnorableWhitespace:
parser:foundInternalEntityDeclarationWithName:value:
parser:foundNotationDeclarationWithName:publicID:systemID:
parser:foundProcessingInstructionWithTarget:data:
parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:
parser:parseErrorOccurred:
parser:resolveExternalEntityName:systemID:
parserDidEndDocument:
parserDidStartDocument:
passcodeAuth
password
passwordEquivalentToken
passwordResetToken
passwordResetTokenBackupForAccount:
passwordResetTokenForAccount:
payloadWithMessage:
payloadWithResponseData:forCircleStep:
pcsAuthDescriptor
pendingAuthKitFollowUpPayload:
pendingBGContext
pendingClientBundle
pendingClientUIWork
pendingFollowUpItems:
pendingFollowUpWithCommand:
pendingFollowUpWithMessageId:
performAuthenticationRequestWithContext:completion:
performAuthorization:companionLinkClient:advertisingService:completion:
performAuthorization:completion:
performAuthorizationCheckInWithCompletion:
performAuthorizationWithContext:withUserProvidedInformation:completion:
performBlock:
performBlockAndWait:
performCheckInForAccountWithAltDSID:completion:
performCircleRequestWithContext:completion:
performGlobalConfigUpdateWithCompletion:
performHeartbeatCheckIn
performHeartbeatCheckInIfNecessaryWithCompletionHandler:
performInsertQuery:
performInsertQuery:error:
performLivenessCheckInForAccount:completion:
performLivenessCheckInForAccounts:withPushToken:completion:
performQuery:
performQuery:error:
performQuery:rowHandler:
performRegistrationRequestWithContext:completion:
performSRPContractWithContext:completion:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performTrustedContactsDataSync:completion:
performUIWorkWithSurrogateContext:uiWorkBlock:
performUnsafeVerificationWithUserID:completion:
performWithinPersonaForAccount:withBlock:
peripheral:didDiscoverCharacteristicsForService:error:
peripheral:didDiscoverDescriptorsForCharacteristic:error:
peripheral:didDiscoverIncludedServicesForService:error:
peripheral:didModifyServices:
peripheral:didOpenL2CAPChannel:error:
peripheral:didReadRSSI:error:
peripheral:didUpdateNotificationStateForCharacteristic:error:
peripheral:didUpdateValueForCharacteristic:error:
peripheral:didUpdateValueForDescriptor:error:
peripheral:didWriteValueForCharacteristic:error:
peripheral:didWriteValueForDescriptor:error:
peripheralDidUpdateName:
peripheralDidUpdateRSSI:error:
peripheralIsReadyToSendWriteWithoutResponse:
peripheralManager:central:didSubscribeToCharacteristic:
peripheralManager:central:didUnsubscribeFromCharacteristic:
peripheralManager:didAddService:error:
peripheralManager:didOpenL2CAPChannel:error:
peripheralManager:didPublishL2CAPChannel:error:
peripheralManager:didReceiveReadRequest:
peripheralManager:didReceiveWriteRequests:
peripheralManager:didUnpublishL2CAPChannel:error:
peripheralManager:willRestoreState:
peripheralManagerDidStartAdvertising:error:
peripheralManagerDidUpdateState:
peripheralManagerIsReadyToUpdateSubscribers:
persistMasterKeyVerifier:withContext:completion:
personaIDIfCurrentPersonaIsDataSeparated
phoneAsAppleID
phoneAsAppleIDForAccount:
phoneBundleInfoWithAdditionalInfo:error:
phoneCertificate
phoneNumber
piggyback:handleEscapeHatchError:completion:
piggyback:handleVerificationWithError:completion:
piggyback:promptForRandomCodeWithCompletion:
piggyback:shouldContinueWithCompletion:
piggyback:validateSecurityCode:completion:
piggybackResultString:
piggybackingAcceptorSupportsPresence
piggybackingIDMSFallbackApproved
piggybackingIDMSPresenceOverride
piggybackingLocalPresenceOverride
piggybackingPresenceMode
piggybackingRequestorPresenceSID
piggybackingRequestorUsesPresence
populateNotificationOptionsWithCommonKeys:makeNoise:
postNotificationName:object:
postNotificationName:object:userInfo:
postNotificationName:object:userInfo:deliverImmediately:
postUserNotification:
postWalrusStateUpdateToServerWithContext:urlBagKey:username:password:completion:
prepareWithController:queue:
presenceCheckPassed
presenceFallbackApproved
presenceMode
presenceSID
presentAuthorizationUIForContext:completion:
presentAuthorizationWithContext:client:completion:
presentBasicLoginUIForContext:client:completion:
presentBasicLoginUIForContext:completion:
presentBiometricOrPasscodeValidationForContext:client:completion:
presentBiometricOrPasscodeValidationForContext:completion:
presentFidoAuthForContext:fidoContext:client:completion:
presentFidoAuthForContext:fidoContext:completion:
presentKeepUsingUIForContext:appleID:completion:
presentKeepUsingUIForContext:client:appleID:completion:
presentLoginAlertForContext:client:withError:title:message:completion:
presentLoginNotificationWithCode:piggy:completionHandler:
presentMessageWithAccount:completionHandler:
presentNativeRecoveryUIForContext:recoveryContext:client:completion:
presentNativeRecoveryUIForContext:recoveryContext:completion:
presentOOPLoginUIWithContext:completion:
presentPrivateEmailUIForContext:completion:
presentPrivateEmailWithContext:client:completion:
presentSecondFactorAlertForContext:client:withError:title:message:completion:
presentSecondFactorAlertForContext:withError:title:message:completion:
presentSecondFactorUIForContext:client:completion:
presentSecondFactorUIForContext:completion:
presentServerProvidedUIForContext:client:withConfiguration:completion:
presentationCompletion
presentationContextForRequestContext:client:
previousAccountInfoRefreshDate
previousMessageId
previouslySelectedEmail
previouslyWantedPrivateEmail
primaryAuthKitAccount
primaryEmail
primaryEmailAddress
primaryEmailAddressForAccount:
primaryEmailVetted
primaryiCloudAccount
privateAttestationEnabled
privateAttestationEnabledForAccount:
privateEmail
privateEmailAddress
privateEmailCompletion
privateEmailFetchCompletedWith:error:completion:
privateEmailListVersion
privateEmailListVersionWithCompletion:
privateEmailServiceListener
processAccountCode:error:
processIdentifier
processMessage:error:
processPushMessage:
processPushPayload:completion:
promptForAppleIDSettingsRedirectWithContext:client:needFullUI:completion:
propertyListWithData:options:format:error:
protocol
provisionAnisetteForContext:withCompletion:
provisionAnisetteForDevice:completion:
provisionAnisetteWithCompletion:
proxiedDevice
proxiedDeviceAnisetteData
proximityController
proximityEngine:managerDidUpdateState:
proximityEngineDidActivate:
proximityEngineDidInvalidate:
proxyWithErrorHandler:
publicAPSTokenString
publicToken
pushToken
queryItemWithName:value:
queryItems
queryString
queryWithString:
queue
rapportClient
rawAccountPassword
reachabilityWithHostName:
reachableEmailAddressesForAccount:
realUserVerificationData
reason
reauthenticateWithContext:completion:
recordUserAcceptedAgreementVersion:
recoveryContextWithServerInfo:
recoverySessionID
recoveryStep
recoveryToken
refreshAccountUsernamesForAltDSID:dataCenter:
refreshAccountUsernamesForAltDSID:withUserInformation:
refreshAuthMetadataWithContext:completion:
refreshUrl
registerEventID:options:handler:
registerFidoKeyWithContext:completion:
registerObserver:
registerPrivateEmailForAltDSID:withKey:completion:
registerRequestID:options:handler:
registerUISurrogateContext:client:completion:
relinquish
remoteAlertHandle
remoteAlertHandle:didInvalidateWithError:
remoteAlertHandleDidActivate:
remoteListener
remoteObjectInterface
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
remoteObjectProxyWithProtocol:forBundleID:
remoteObjectProxyWithProtocol:forBundleID:errorHandler:
removeAccount:withCompletionHandler:
removeAllCachedResponses
removeAllObjects
removeAllPCSAuthCredential
removeAllPCSAuthCredentialWithCompletion:
removeAllPCSCredentials
removeApplicationWithClientID:completion:
removeAuthorizationForApplicationWithClientID:completion:
removeBeneficiaryWithInheritanceContext:completion:
removeContinuationTokenForAccount:
removeFollowUpItems:error:
removeFollowUpItemsWithIdentifiers:error:
removeItemAtPath:error:
removeMasterTokenForAccount:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removePrivateEmailForContext:error:
removePrivateEmailKey:completion:
removePrivateEmailWithContext:completion:
removeUnusedAndDuplicateAuthKitAccountsWithCompletion:
removedPrivateEmails
renewRecoveryTokenURL
renewRecoveryTokenWithContext:completion:
repairState
repairStateForAccount:
repairURL
replyContextWithPayload:
replyPayload
replyToID
replyWithContext:withCompletion:
reportAuthEventOfType:success:error:
reportFinalSignOutEventForAccount:completion:
reportPromptByClient:withContext:
reportSignOutEventForService:account:completion:
reportSignOutForAllAppleIDsWithCompletion:
reportSignOutForAppleID:service:completion:
reqInterceptToken
requestConfiguration
requestDispatcher
requestForRecoveryCompletionWithContext:recoveredInfo:recoveryError:
requestIdentifier
requestOTPForDSID:outMID:outMIDSize:outOTP:outOTPSize:
requestOptions
requestSession
requestTapToRadarWithTitle:message:componentName:componentVersion:componentID:keywords:
requestTapToRadarWithTitle:message:keywords:
requestTime
requestType
requestURL
requestWithIdentifier:content:trigger:
requestedCloudPartition
requireSigningHeaders
requiresPasscode
resolved
resourceLoadDelegate
resourceLoadDelegateWithContext:
resourceLoadDelegateWithContext:authResponse:
resourceURL
respondsToSelector:
responseDictionaryWithData:error:
resume
retain
retainCount
retrieveRecoveryDataForServerContext:recoveryInfo:completion:
retryAuth
returnData
reverseGeocodeLocation:completionHandler:
revokeAuthorizationForAllApplications:
revokeAuthorizationForAllApplicationsWithCompletion:
revokeAuthorizationForApplicationWithClientID:completion:
revokeCustodianWithContext:completion:
revokeUpgradeWithContext:client:completion:
revokeUpgradeWithContext:completion:
rollbackTransaction
rowHandler
sanitiseInternalState
sanitizeContext:
saveAccount:error:
saveContext:completion:
scanForPeripheralsWithServices:options:
scanUnsignedLongLong:
scannerWithString:
scheduledRequestWithCalculation:forRequest:info:
scopes
secondaryActionMessage
secondaryActionURLGSEndpoint
secondaryActionURLKey
secondaryBody
secondaryBodyCDP
secondaryTitle
secondaryTitleCDP
secondaryToken
secret
securityDomain
securityLevelForAccount:
securityUpgradeContext
selectedAuthorizationEmailForAccount:
selectedEmail
self
sendEmbargoEndNotificationFeedbackWithContext:urlKey:completion:
sendEventID:event:destinationID:options:completion:
sendMessage:toDestinations:priority:options:identifier:error:
sendReport
sendRequestID:request:destinationID:options:responseHandler:
sendUserInfoChangeNotificationWithPayload:
serialNumber
server
serverCompatibleRequestBody
serverCompatibleRequestBodyWithPayload:
serverContext
serverExperimentalFeatures
serverExperimentalFeaturesForAccount:
serverFriendlyDescription
serverHandler
serverInfo
serverProvidedData
serverUIContext:processAdditionalData:completion:
serverUIContextFromResponse:authContext:urlRequest:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:sentBytes:totalBytes:
service:account:incomingData:fromID:context:
service:account:incomingMessage:fromID:context:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:receivedGroupSessionParticipantDataUpdate:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:activeAccountsChanged:
service:connectedDevicesChanged:
service:devicesChanged:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:didSwitchActivePairedDevice:acknowledgementBlock:
service:linkedDevicesChanged:
service:nearbyDevicesChanged:
serviceAllowedTrafficClassifiersDidReset:
serviceControllerForContext:
serviceIdentifier
serviceIdentifiers
serviceName
serviceTokens
serviceType
services
servicesUsingAccount:
sessionID
sessionWithInitialMessage:secretDelegate:circleDelegate:dsid:error:
sessionWithSecretDelegate:dsid:error:
setAbsintheSigner:
setAcceptSession:
setAccount:
setAccount:inUse:byService:
setAccountManager:
setAccountProperty:forKey:
setAccountRecoveryMasterKey:
setActionButtonText:
setActiveCode:
setAdditionalHeaders:
setAdditionalInfo:forAccount:
setAdvertisingService:
setAgeOfMajority:
setAgeOfMajority:forAccount:
setAlertBody:
setAlertTitle:
setAliases:forAccount:
setAltDSID:
setAltDSID:forAccount:
setAnalyticsReport:
setAnisetteServiceListener:
setAnticipateEscrowAttempt:
setAppProvidedContext:
setAppProvidedData:
setAppleIDCountryCode:forAccount:
setAppleIDSecurityLevel:
setAppleIDWithAltDSID:inUse:forService:completion:
setAppleIDWithDSID:inUse:forService:completion:
setApps:
setArgument:
setAttestationSigner:
setAuthKitAccount:
setAuthKitBodyData:
setAuthMode:
setAuthServiceListener:
setAuthenticated:
setAuthenticatedRequest:
setAuthenticationDelegate:
setAuthenticationMode:
setAuthenticationMode:forAccount:
setAuthenticationType:
setAuthkitAccount:
setAuthorizationCompletion:
setAuthorizationEndorser:
setAuthorizationEndorserRapportClient:
setAuthorizationRequest:
setAuthorizationResponseValidator:
setAuthorizationService:
setAuthorizationServiceListener:
setAuthorizationUsed:forAccount:
setAuthorizedRequest:
setBagUrlKey:
setBeginDate:
setBeneficiary:forAccount:
setBeneficiaryAccountName:
setBeneficiaryAltDSID:
setBeneficiaryListVersion:
setBeneficiaryListVersion:forAccount:
setBeneficiaryOperationsByID:
setBindingFailure:
setBiometricAuth:
setBody:
setBodyKey:
setCanBeCustodian:forAccount:
setCanHaveBeneficiary:forAccount:
setCapturedCode:
setCategoryIdentifier:
setCheckInAllowedForAllAccountsToValue:
setClasses:forSelector:argumentIndex:ofReply:
setClearanceHandler:
setCliMode:
setClient:
setClientAppName:
setClientBundleID:
setClientErrorCode:
setClientID:
setClientInfo:
setCommand:
setCompanionDevice:
setCompanionServicePresenter:
setCompletion:
setCompletionHandler:
setComponentName:
setComponentVersion:
setCondition:
setConfiguration:
setConfigurationInfo:forIdentifier:forAltDSID:completion:
setContext:
setContinuationToken:
setControlFlags:
setCreateAppleID:
setCredential:
setCredential:forAccount:serviceID:error:
setCredentialItem:forKey:
setCredentialRequestContext:
setCurrentEmailListVersion:error:
setCustodianContext:
setCustodianInfos:forAccount:
setCustodianLastModified:forAccount:
setCustodianListVersion:
setCustodianListVersion:forAccount:
setCustodianOperationsByID:
setCustodianRecoveryToken:
setCustodianServiceListener:
setDSID:forAccount:
setDataCenterIdentifier:
setDate:
setDecodedRecoveryIdentityToken:
setDecodedRecoveryPET:
setDelegate:
setDelegates:
setDemoAccount:forAccount:
setDescriptor:
setDestinationDevice:
setDevice:
setDeviceDiscovery:
setDeviceEnclosureColor:
setDeviceRequestContext:
setDeviceTrustRevoked:forAccount:
setDidDeactivateBlock:
setDidSucceed:
setEnableCriticalReliability:
setEncryptedPRKC:
setEndorseeClient:
setEndorseeDevice:
setEndorserRapportDiscovery:
setError:
setEscapeHatchError:
setEscapeHatchTrigger:
setEvent:
setExecutor:
setExistingStatus:
setExpectedResponseType:
setExportedInterface:
setExportedObject:
setExtensionIdentifier:
setFamilyName:
setFamilyName:forAccount:
setFetchIconBlock:
setFetchIconBlockForPresenter:withContext:
setFido:forAccount:
setFidoDaemonService:
setFlags:
setFollowUpProvider:
setForceSilentAuth:
setForwardingEmail:
setForwardingEmail:forAccount:
setFrequency:
setGivenName:
setGivenName:forAccount:
setGroupKitEligibility:forAccount:
setHTTPBody:
setHTTPContentType:
setHTTPMethod:
setHasCheckedIn:
setHasEndorserAuthorizing:
setHasMDM:forAccount:
setHasUsedAuthorization:
setHeartbeatToken:
setHeartbeatTokenValue:
setHost:
setIDMSRoutingInfo:forDSID:
setIdentifier:
setIdentityToken:
setIdentityTokenValue:
setIgnoreInternalTokens:
setInProgressSurrogates:
setInfo:
setInformativeText:
setInheritanceContext:
setInheritanceDaemonService:
setInitialHandshakeTimeout:
setInitialURLRequestKey:
setInitiatingContext:
setInitiatingPassword:
setInitiatingServerResponse:
setInternalWrapper:
setInterruptionLevel:
setInvalidationHandler:
setInvisible:
setIsNotificationEmailAvailable:
setIsNotificationEmailAvailable:forAccount:
setIsProxy:
setIsSecondCall:
setIsSenior:
setIsUnderage:
setIsUsernameEditable:
setItemAccessible:
setItemClass:
setKeyAndBundleIdAreHashed:
setLabel:
setLastKnownIDMSEnvironment:
setLastKnownLocale:
setLatitude:
setLinkClient:
setListVersionToVersion:
setLocalPresenceFound:
setLocalizedAppsNameList:
setLockScreenBody:
setLockScreenTitle:
setLoggedInServices:
setLoginChoices:
setLongitude:
setMachineID:
setMakePrivateEmail:
setManagedOrganizationName:
setManagedOrganizationName:forAccount:
setManagedOrganizationType:
setManagedOrganizationType:forAccount:
setMatchHandler:
setMaxWait:
setMaximumLoginAttempts:
setMessageId:
setMigrator:
setName:
setNeedsCredentialRecovery:
setNeedsNewAppleID:
setNeedsNewChildAccount:
setNeedsPasswordChange:
setNotification:
setNotificationCategories:
setNotificationEmail:
setNotificationEmail:forAccount:
setObject:atIndexedSubscript:
setObject:forKey:
setObject:forKey:expiresIn:
setObject:forKeyedSubscript:
setObject:forSetting:
setOneTimePassword:
setOptions:
setOrigin:
setOriginalRequestContext:
setOtherButtonText:
setOwnerCustodianAltDSID:
setPasscodeAuth:
setPassword:
setPasswordCredentialCount:
setPasswordRequest:
setPasswordResetToken:
setPayload:
setPendingBGContext:
setPendingClientBundle:
setPendingClientUIWork:
setPhoneAsAppleID:forAccount:
setPhoneCertificate:
setPhoneInformation:
setPhoneNumberCertificate:
setPresenceCheckPassed:
setPresentationCompletion:
setPresentationType:
setPreviouslySelectedEmail:
setPreviouslyWantedPrivateEmail:
setPrimaryClientID:
setPrimaryEmailAddress:
setPrimaryEmailAddress:forAccount:
setPrivateAttestationEnabled:forAccount:
setPrivateEmail:keyAlreadyHashed:error:
setPrivateEmailCompletion:
setProtocolVersion:error:
setProxiedAltDSID:
setProxiedDevice:
setProxiedIdentityToken:
setProximityController:
setPushToken:
setQualityOfService:
setQueryItems:
setRadarDescription:
setRadarTitle:
setRapportClient:
setReachableEmailAddresses:forAccount:
setReachableEmails:
setRealUserVerificationData:
setReason:
setRecoveryToken:
setRefreshUrl:
setRemoteAlertHandle:
setRemoteListener:
setRemoteObjectInterface:
setRepairState:forAccount:
setReplyToID:
setReqInterceptToken:
setRequest:
setRequestConfiguration:
setRequestDispatcher:
setRequestSession:
setRequestURL:
setRequestedScopes:
setRequiresTouchID:
setResolved:
setResourceLoadDelegate:
setRetryAuth:
setReturnData:
setRowHandler:
setScale:
setScheme:
setScopes:
setSecondaryBodyCDP:
setSecondaryFooter:
setSecondaryTitleCDP:
setSecondaryToken:
setSecurityDomain:
setSecurityLevel:forAccount:
setSelectedAuthorizationEmail:forAccount:
setSelectedEmail:
setSelectedPrivateEmail:forAccount:
setSelectedRequest:
setServer:
setServerExperimentalFeatures:forAccount:
setServerInfo:
setService:
setServiceProvider:
setServiceToken:
setSessionID:
setShouldAutomaticallyMigrate:
setShouldCacheResource:
setShouldFallBack:
setShouldIgnoreTeamID:
setShouldIgnoreUserID:
setShouldOfferSecurityUpgrade:
setShouldPreventDismissAfterUserSkip:
setShouldSendPhoneNumber:
setShouldSendSigningHeaders:
setShouldSkipSettingsLaunchAlert:
setShouldSyncWithServer:
setShouldUpdatePersistentServiceTokens:
setSignInAllowsPCSKeyAccess:
setSignWithIdentityToken:
setSlotID:
setSound:
setState:
setSurrogateClient:
setSurrogateCompletion:
setSurrogateContext:
setSurrogateIDGenerator:
setSurrogateManager:
setSurrogateQueue:
setSurrogateRegistrationID:
setSynchronizable:
setTeamID:
setTimeout:
setTitle:
setTitleKey:
setToken:
setTokenExpiryDate:
setTransactionId:
setTransferState:
setTvAppIconData:
setTvAppIconScale:
setUnitTestContext:
setUrlSwitchData:
setUseDataProtection:
setUserID:
setUserIdentifier:
setUserInfo:
setUserInformation:
setUserInformationRepresentation:
setUserIsSenior:forAccount:
setUserResponse:
setUserSelection:
setUserUnderage:forAccount:
setUsername:
setValue:
setValue:forHTTPHeaderField:
setValueCondition:
setVerifiedPrimaryEmail:forAccount:
setWaitForReply:
setWaitForReplyTimeout:
setWalrusContext:
setWalrusDaemonService:
setWalrusEnabled:
setWalrusWebAccessEnabled:
setWhitelistedPathURLs:
setWithArray:
setWithObject:
set_attemptIndex:
set_clientAuthenticatedExternallyWithPassword:
set_clientShouldAuthenticateExternally:
set_denyVirtualInterfaces:
set_externalAuthToken:
set_forceEligibleForForegroundAuthentication:
set_iconData:
set_iconScale:
set_isRapportLogin:
set_isSilentAppTransfer:
set_notifyOfTimeout:
set_performUIOutOfProcess:
set_proxiedAssociatedDomains:
set_proxiedClientAppID:
set_proxiedClientAppName:
set_proxiedClientBundleID:
set_proxiedClientTeamID:
set_requirePassword:
set_sessionID:
set_shouldSendGrandSlamTokensForRemoteUI:
set_shouldSendIdentityTokenForRemoteUI:
set_shouldSkipAuthorizationUI:
set_shouldUseProxiedClientBundleIDForSRP:
setupBeneficiaryWithInheritanceContext:completion:
sharedAnisetteFreeURLSession
sharedAuthKitFollowupManager
sharedAuthKitFollowupProvider
sharedAuthKitFollowupPushDelegate
sharedBag
sharedBagService
sharedCacheEnabledAnisetteFreeSession
sharedCacheEnabledURLSession
sharedCacheReliantAnisetteFreeSession
sharedConfiguration
sharedConnection
sharedController
sharedDispatcher
sharedInstance
sharedManager
sharedService
sharedSigner
sharedURLSession
sharedURLSessionWithDenyVirtualInterfaces
shouldAcceptNewConnection:
shouldAllowClient:logging:
shouldAllowDemoMode
shouldAllowExperimentalMode
shouldAutomaticallyMigrate
shouldCacheResource
shouldCapturePromptBugForContext:
shouldContinueWithAuthenticationResults:error:forContextID:completion:
shouldContinueWithResponse:error:
shouldEnableTestAccountMode
shouldFakeAuthSuccess
shouldFallBack
shouldHideInternalBuildHeader
shouldIgnoreTeamID
shouldIgnoreUserID
shouldOfferSecurityUpgrade
shouldPreventDismissAfterUserSkip
shouldProcessAdditionalServerUIData:
shouldProcessServerUIRequest:
shouldPromptForPasswordOnly
shouldProxyAnisetteAction
shouldRequestConfigurationInfo
shouldRequestRecoveryPET
shouldRequestShortLivedToken
shouldSendServerResponseForRecoveredInfo:withRecoveryError:
shouldSkipSettingsLaunchAlert
shouldSuppressPushMessage:
shouldSyncWithServer
shouldUpdatePersistentServiceTokens
shouldUseDataProtection
showAlert:primaryAction:altAction:cancelAction:
showAlertForError:withCompletion:
showPigCode:withIncomingMessage:
showServerUIWithContext:completion:
shutdown
signRequest:
signRequest:error:
signRequestWithBasicHeaders:
signRequestWithCommonHeaders:
signWithBAAHeaders:completion:
signWithIdentityToken
signal
signalFromServerResponse:
signature
signatureForURLRequest:completionHandler:
signaturesForData:options:completion:
signingHeadersForRequest:completion:
silentTapToRadarWithRequest:completion:
site
slotID
sortedArrayUsingComparator:
standardUserDefaults
start
startAdvertising:
startAuthorization
startAuthorizationWithCompanionLinkClient:
startCoordinatingBlock:
startCustodianRecoveryRequestWithContext:completion:
startCustodianRecoveryTransactionWithContext:completion:
startDiscoveryWithCompletion:
startFetchingIconWithRequestContext:
startFidoAuthWithContext:recoveryToken:client:completion:
startListeningForMessagesFromPairedDevice
startProvisioningURL
startProvisioningWithDSID:SPIM:SPIMLength:outCPIM:outCPIMLength:outSession:
startRequestSessionWithController:completion:
startWithDelegates:
state
status
statusCode
stopScan
store
storeAuthorization:forClient:
storeAuthorization:forProxiedRequest:completion:
storeModernRecoveryURL
storeName
stringByAppendingFormat:
stringByAppendingString:
stringByDeletingLastPathComponent
stringByReplacingOccurrencesOfString:withString:
stringFromColumn:inStatement:
stringValue
stringWithFormat:
stringWithUTF8String:
subTitleKey
submitDispatchableRequest:
subscriptions
subscriptionsInUse
superclass
supportsPiggybacking
supportsPresence
supportsSecureCoding
surrogateCompletion
surrogateContext
surrogateIDGenerator
surrogateManager
surrogateQueue
surrogateRegistrationID
syncAnisetteForContext:withSIMData:completion:
syncAnisetteWithSIMData:completion:
syncAnisetteWithSIMData:device:completion:
synchronizable
synchronizeFollowUpItemsForContext:authHandler:completion:
synchronizeFollowUpItemsForContext:completion:
synchronizeWithDSID:SIM:SIMLength:outMID:outMIDLength:outSRM:outSRMLength:
synchronousRemoteObjectProxyWithErrorHandler:
synchronousRemoteObjectProxyWithProtocol:forBundleID:errorHandler:
teamID
teamIdentifier
teams
tearDown
tearDownFollowUpsWithItems:
tearDownLoginNotifications
teardownFollowUpWithContext:completion:
timeIntervalSince1970
timeIntervalSinceDate:
timeIntervalSinceNow
timestamp
title
titleKey
token
tokenFromAuditToken:
tokenWithBase64String:
tokenWithDictionary:
tokenWithExternalizedVersion:lifetime:
tokenWithExternalizedVersionString:
tokenWithValue:lifetime:
topic
transactionID
transactionId
transferState
transportRepresentation
triggerAutoBugCaptureWithSubType:andBundleID:userInfo:
ttlInMinutes
tvAppIconData
tvAppIconScale
txnid
type
typeForMessageWithTransportRepresentation:
uiWorkQueue
unarchivedObjectOfClass:fromData:error:
underlyingContext
uniqueDeviceIdentifier
uniqueIdentifier
unlock
unregisterObserver:
unregisterUISurrogateForContext:
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
updateAuthorizationListWithMetadataInfo:
updateAuthorizationListWithMetadataInfo:completion:
updateBeneficiaryWithInheritanceContext:completion:
updateContext:completion:
updateCustodianRecoveryKeyWithContext:completion:
updateKeychainItem:completion:
updateStateWithExternalAuthenticationResponse:forAppleID:completion:
updateStateWithExternalAuthenticationResponse:forContext:completion:
updateUserInformationForAltDSID:userInformation:completion:
updateUserResponse:withContext:forClient:
updateWithHTTPURLResponse:
updateWithSecondaryAuthenticationBody:
updateWithSecondaryAuthenticationResponse:
updateWithSecondaryAuthenticationResponse:shouldUpdateDSID:
upgradeUIURL
urlAtKey:
urlBagForAltDSID:error:
urlBagFromCache:altDSID:error:
urlBagKey
urlRequestProvider
urlSwitchData
urlSwitchingData
useDataProtection
user
userChosenName
userID
userIdentifier
userInfo
userInfoFromAccount:
userInfoFromContext:
userInformationRepresentation
userIsSeniorForAccount:
userResponse
userResponseWithContext:forClient:
userSelection
userUnderAgeForAccount:
username
uuid
validateExternalizedContext:error:
validateLoginCode:forAppleID:withCompletion:
validateResponseData:error:
validateVettingToken:forAltDSID:completion:
validateVettingTokenURL
value
valueCondition
valueForEntitlement:
verificationFailed:
verifyCredentialReason
verifyEnableWalrusAllowedWithContext:completion:
verifyFidoKeyWithContext:completion:
verifyFidoKeyWithFidoContext:completion:
verifyFidoRecoveryWithContext:recoveryToken:completion:
verifyMasterKey:withContext:completion:
verifyRecoveryTransactionWithContext:verifySessionID:error:
vettedPrimaryEmail
wait
waitForRemoteViewServiceWithContext:client:uiWorkBlock:
waitForReply
waitForReplyTimeout
waitForSettingsWithContext:client:requireFullUICapability:allowRedirectToSettings:uiWorkBlock:
waitUntilAllOperationsAreFinished
waitUntilDate:
walrusContext
walrusDaemonService
walrusEnabled
walrusStatusLiveValue
walrusWebAccessEnabled
walrusWebAccessInfo
warmUpVerificationSessionWithCompletion:
warmUpVerificationSessionWithCompletionHandler:
webAccessEnabled
webAccessEnabledForAccount:
webAccessStatusLiveValue
webSessionIdentifier
webSessionUUID
wipeDatabase:
wrappedKeyData
wrappingKeyRKC
xpcConnection
zone
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v40@0:8@16@24@?32
v32@0:8@"AKFidoContext"16@?<v@?@"AKFidoRegistrationResponse"@"NSError">24
v32@0:8@"AKFidoContext"16@?<v@?@"AKFidoAuthenticationResponse"@"NSError">24
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"AKFidoAuthenticationResponse"@"NSDictionary"@"NSError">24
v40@0:8@"AKAppleIDAuthenticationContext"16@"NSString"24@?<v@?@"AKFidoAuthenticationResponse"@"NSDictionary"@"NSError">32
v24@0:8@16
v56@0:8@16@24@32@40@?48
v16@0:8
@"AKFidoAuthorizationController"
@"AKFidoDaemonServerHandler"
v32@0:8@16@24
@40@0:8@16@24@32
@24@0:8@16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableDictionary"
v32@0:8@16Q24
v40@0:8@16Q24@32
v24@0:8@"AKPushMessage"16
B24@0:8@"AKPushMessage"16
v32@0:8@"AKPushMessage"16Q24
v40@0:8@"AKPushMessage"16Q24@"NSDictionary"32
v24@0:8@"NSString"16
@32@0:8@16@24
v48@0:8@16@24@32@?40
B40@0:8@16@24^@32
@24@0:8Q16
@"<AKFollowUpItemFactory>"
@"<AKFollowUpProvider>"
@"AKPushMessage"
@"<AKFollowUpControllerServiceProvider>"
v24@0:8^@16
B36@0:8@16B24^@28
B32@0:8@16^@24
@32@0:8@16^@24
i16@0:8
B28@0:8i16^@20
@24@0:8^@16
@"AKSQLiteExecutor"
@"NSArray"
@"AKUserInformation"
@"NSDictionary"
@"AKCredentialRequestContext"
@48@0:8{?=[8I]}16
@24@0:8@?16
@"NSXPCConnection"
@"NSString"
@"BSAuditToken"
v24@0:8q16
@"AKAppleIDAuthenticationContext"
@"AKCircleRequestContext"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B28@0:8@16B24
q16@0:8
@"NSNumber"
@"AKMasterToken"
@"AKToken"
@"NSData"
i24@0:8^@16
v36@0:8B16@20@28
v32@0:8Q16@?24
v24@0:8@?16
@"AKCircleRequestPayload"
@"KCJoiningAcceptAccountCircleDelegate"
@"AKCAPiggybackReporter"
@"AKProximityController"
@"AKFuture"
@"KCJoiningAcceptSession"
@"AKConfiguration"
v20@0:8B16
@"AKAuthenticationServerResponse"
@"AKServerRequestConfiguration"
v40@0:8@16@24@32
@"NSURLRequest"24@0:8^@16
B32@0:8@"NSData"16^@24
@"NSDictionary"32@0:8@"NSData"16^@24
@"AKAppleIDAuthenticationContext"16@0:8
@"AKClient"16@0:8
v24@0:8@"AKClient"16
@36@0:8@16@24B32
B32@0:8@16@24
@"AKClient"
@"NSURL"
i32@0:8^Q16Q24
i32@0:8Q16Q24
i56@0:8Q16^*24^I32^*40^I48
i24@0:8^v16
i24@0:8Q16
i60@0:8Q16r*24I32^*36^I44^I52
i44@0:8I16r*20I28r*32I40
i20@0:8I16
i68@0:8Q16r*24I32^*36^I44^*52^I60
@"AKAuthenticationUILiaison"
@"AKRequestDispatcher"
@"AKCASatoriReporter"
v40@0:8@"NSString"16@"NSString"24@?<v@?@"AKPCSAuthContext"@"NSError">32
v24@0:8@?<v@?@"NSError">16
v32@0:8@"AKWalrusContext"16@?<v@?@"NSError">24
v56@0:8@"AKWalrusContext"16@"NSString"24@"NSString"32@"NSString"40@?<v@?@"NSError">48
@"AKDispatchingCalculation"16@0:8
@32@0:8d16Q24
d16@0:8
@"AKKeychainItemDescriptor"
@48@0:8@16Q24@32@?40
@"NSDate"
@?16@0:8
@"NSUUID"
v48@0:8@16@24B32B36@?40
v48@0:8@16@?24@32@40
@"<AKAuthenticationSurrogateManagerDelegate>"
@"AKAuthenticationSettingsLauncher"
@"NSLock"
@"AKAccountManager"
@"AKSurrogateAuthenticationIDGenerator"
@"NSObject<OS_dispatch_queue>"
@"AKInheritanceContext"
v24@0:8Q16
v24@0:8@"AKSQLiteExecutor"16
v40@0:8@16@24d32
Q24@0:8Q16
v28@0:8B16@?20
v24@0:8@?<v@?B@"NSError">16
v32@0:8@"NSData"16@?<v@?B@"NSError">24
v28@0:8B16@?<v@?@"AKAnisetteData"@"NSError">20
v32@0:8@"NSString"16@?<v@?@"AKAnisetteData"@"NSError">24
v32@0:8@"NSURLRequest"16@?<v@?@"AKAttestationData"@"NSError">24
@32@0:8Q16^@24
@40@0:8@16@24Q32
@"AKCustodianContext"
@28@0:8@16B24
@24@0:8^{_NSZone=}16
Q24@0:8@16
@"AKWebSessionPCSKeyProvider"
d24@0:8Q16
{mach_timebase_info="numer"I"denom"I}
@"AKDeviceListRequestContext"
v32@0:8@"<AKProximityEngine>"16@"CBManager"24
v24@0:8@"<AKProximityEngine>"16
v24@0:8d16
@"NSObject<OS_dispatch_source>"
@"<AKProximityEngine>"
@"AKAuthorizationUserResponse"
@"NSObject<OS_os_transaction>"
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v40@0:8Q16@24@?32
v52@0:8@16B24@28@36@?44
@"IDSService"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v48@0:8@"NSString"16@"NSString"24@"NSDictionary"32@"NSError"40
@"NSXPCListener"
@"APSIncomingMessage"
@"UNUserNotificationCenter"
^{__AppleIDAuthSupportData=}16@0:8
^{__AppleIDAuthSupportData=}
@"CoreTelephonyClient"
v24@0:8@?<v@?@"NSDictionary">16
v24@0:8@"NSError"16
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
@40@0:8@16@24@?32
@"<AKURLRequestProvider>"
@"<AKAuthHandler>"
@"AKKeychainManager"
@"AKDevice"16@0:8
v24@0:8@"AKDevice"16
@"AKDevice"
v32@0:8@"AKPiggybackRequestingController"16@?<v@?@"NSNumber"@"NSError">24
v40@0:8@"AKPiggybackRequestingController"16@"NSError"24@?<v@?@"NSNumber"@"NSError">32
v40@0:8@"AKPiggybackRequestingController"16@"NSNumber"24@?<v@?@"AKAuthenticationServerResponse"@"NSError">32
v32@0:8@"AKPiggybackRequestingController"16@?<v@?@"NSDictionary"@"NSError">24
v40@0:8@"AKPiggybackRequestingController"16@"NSError"24@?<v@?@"NSDictionary"@"NSError">32
B24@0:8@"NSDictionary"16
v40@0:8@"AKDServerUIContext"16@"NSDictionary"24@?<v@?@"AKAuthenticationServerResponse"@"NSDictionary"@"NSError">32
v44@0:8@16B24q28@?36
v40@0:8@16q24@?32
Vv24@0:8@?16
v36@0:8B16@20@?28
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSNumber"@"NSError">16
v40@0:8Q16@"NSString"24@?<v@?B@"NSError">32
v40@0:8@"NSHTTPURLResponse"16@"NSString"24@?<v@?B@"NSError">32
v40@0:8@"NSHTTPURLResponse"16@"AKAppleIDAuthenticationContext"24@?<v@?B@"NSError">32
v32@0:8@"NSString"16@?<v@?@"AKAppleIDServerResourceLoadDelegate"@"NSError">24
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"AKAppleIDServerResourceLoadDelegate"@"NSError">24
v44@0:8@"NSString"16B24q28@?<v@?B@"NSError">36
v44@0:8@"NSNumber"16B24q28@?<v@?B@"NSError">36
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"AKUserInformation"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"AKUserInformation"@"NSError">24
v40@0:8@"NSString"16@"AKUserInformation"24@?<v@?B@"NSError">32
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?Q@"NSError">24
v32@0:8@"AKDeviceListRequestContext"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"AKApplicationMetadataInfo"@"NSError">24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v32@0:8Q16@?<v@?B@"NSError">24
v48@0:8@"<NSSecureCoding>"16@"NSString"24@"NSString"32@?<v@?B@"NSError">40
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSError">24
v40@0:8@"NSString"16q24@?<v@?B@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?B@"NSError">32
Vv24@0:8@?<v@?B@"NSError">16
v32@0:8@"AKCircleRequestContext"16@?<v@?@"AKCircleRequestPayload"@"NSError">24
v32@0:8@"AKAccountRecoveryContext"16@?<v@?@"NSDictionary"@"NSError">24
v40@0:8@"NSString"16@"AKAccountRecoveryContext"24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@"NSDictionary"16@"AKAppleIDAuthenticationContext"24@?<v@?B@"NSError">32
v32@0:8@"AKFollowUpTearDownContext"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSError">16
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSDictionary"@"NSError">24
v36@0:8B16@"NSString"20@?<v@?@"NSDictionary"@"NSError">28
v32@0:8Q16@?<v@?@"NSDictionary"@"NSError">24
v64@0:8Q16@24@32@40@48@?56
v64@0:8@16@24@32@40@48@?56
v80@0:8@16@24@32@40@48@56@64@?72
v76@0:8@16@24@32B40@44@52@60@?68
v64@0:8@16@24@32@40@48^@56
B64@0:8@16@24@32@40@48^@56
v68@0:8@16@24@32B40@44@52@?60
v40@0:8@16Q24@?32
B48@0:8@16@24@32^@40
@32@0:8@16q24
@"NSObject<AKAppleIDAuthSupportProxy>"
@"AKAuthenticationTrafficController"
@"CUTReachability"
v24@0:8@"AKAuthorizationEndorserRapportClient"16
B24@0:8^@16
@"RPCompanionLinkClient"
@"AKAuthorizationEndorserRapportClient"
@20@0:8B16
@"NSString"20@0:8B16
B32@0:8@"NSString"16^@24
v36@0:8@16B24@?28
@"<AKPiggybackRequestingControllerDelegate>"
@"KCJoiningRequestSecretSession"
@"NSError"
v24@0:8@"SBSRemoteAlertHandle"16
v32@0:8@"SBSRemoteAlertHandle"16@"NSError"24
v40@0:8@"AKPrivateEmail"16@"NSError"24@?<v@?B@"NSError">32
@"SBSRemoteAlertHandle"
@"<AKServiceController>"24@0:8@"AKAppleIDAuthenticationContext"16
v40@0:8@"NSString"16@"NSString"24@?<v@?@"AKPrivateEmail"@"NSError">32
v32@0:8@"AKPrivateEmailContext"16@?<v@?@"AKPrivateEmail"@"NSError">24
v32@0:8@"AKPrivateEmailContext"16@?<v@?@"AKPrivateEmailContext"@"NSError">24
v44@0:8@16B24@28@?36
@32@0:8d16@24
@"NSCondition"
@"NSMutableArray"
@40@0:8@16@24d32
v32@0:8@"AKDevice"16@?<v@?B@"NSError">24
v40@0:8@"NSData"16@"AKDevice"24@?<v@?B@"NSError">32
v36@0:8B16@"AKDevice"20@?<v@?@"AKAnisetteData"@"NSError">28
v40@0:8@"NSString"16@"AKDevice"24@?<v@?@"AKAnisetteData"@"NSError">32
v40@0:8@"AKDevice"16@"NSURLRequest"24@?<v@?@"AKAttestationData"@"NSError">32
@"AKNativeAnisetteService"
@"AKAbsintheSigner"
@"AKAttestationSigner"
v32@0:8@"NSData"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"NSDictionary"16@"NSDictionary"24@?<v@?@"NSDictionary"@"NSData"@"NSError">32
B36@0:8@16@24B32
@40@0:8@16^B24^@32
@56@0:8@16@24@32Q40@48
v32@0:8@"<AKProximityEngineController>"16@"NSObject<OS_dispatch_queue>"24
@"<AKProximityEngineController>"16@0:8
@"NSObject<OS_dispatch_queue>"16@0:8
@"<AKProximityEngineController>"
v36@0:8@16S24@28
v24@0:8@"CBPeripheralManager"16
v32@0:8@"CBPeripheralManager"16@"NSDictionary"24
v32@0:8@"CBPeripheralManager"16@"NSError"24
v40@0:8@"CBPeripheralManager"16@"CBService"24@"NSError"32
v40@0:8@"CBPeripheralManager"16@"CBCentral"24@"CBCharacteristic"32
v32@0:8@"CBPeripheralManager"16@"CBATTRequest"24
v32@0:8@"CBPeripheralManager"16@"NSArray"24
v36@0:8@"CBPeripheralManager"16S24@"NSError"28
v40@0:8@"CBPeripheralManager"16@"CBL2CAPChannel"24@"NSError"32
@"CBPeripheralManager"
v40@0:8@16q24@32
v24@0:8@"CBCentralManager"16
v32@0:8@"CBCentralManager"16@"NSDictionary"24
v48@0:8@"CBCentralManager"16@"CBPeripheral"24@"NSDictionary"32@"NSNumber"40
v32@0:8@"CBCentralManager"16@"CBPeripheral"24
v40@0:8@"CBCentralManager"16@"CBPeripheral"24@"NSError"32
v40@0:8@"CBCentralManager"16q24@"CBPeripheral"32
v24@0:8@"CBPeripheral"16
v32@0:8@"CBPeripheral"16@"NSArray"24
v32@0:8@"CBPeripheral"16@"NSError"24
v40@0:8@"CBPeripheral"16@"NSNumber"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBService"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBCharacteristic"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBDescriptor"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBL2CAPChannel"24@"NSError"32
@"CBCentralManager"
v40@0:8@16^@24^@32
v32@0:8@"AKAuthorizationUserResponse"16@?<v@?@"AKAuthorization"@"NSError">24
v40@0:8@"AKAuthorization"16@"NSError"24@?<v@?B@"NSError">32
v24@0:8@?<v@?@"NSData"@"NSError">16
@24@0:8@"<AKURLRequestProvider>"16
v24@0:8@"<AKAuthHandler>"16
v24@0:8@?<v@?@"NSHTTPURLResponse"@"NSData"@"NSError">16
@"AKRequestDispatcher"16@0:8
v24@0:8@"AKRequestDispatcher"16
B32@0:8@16Q24
B32@0:8q16@24
q24@0:8@16
q32@0:8q16@24
@52@0:8@16@24@32@40B48
@68@0:8@16@24@32@40@48@56B64
^{__CFUserNotification=}52@0:8@16@24@32@40B48
^{__CFUserNotification=}68@0:8@16@24@32@40@48@56B64
v28@0:8@16B24
v32@0:8Q16@24
v40@0:8^{__CFUserNotification=}16@24@?32
@56@0:8@16@24@32@40@48
^{__CFUserNotification=}56@0:8@16@24@32@40@48
@44@0:8@16B24@28@36
v32@0:8^{__CFUserNotification=}16@?24
B24@0:8Q16
^{__CFUserNotification=}
d24@0:8d16
v24@0:8@"AKAuthorizationDaemonService"16
@"<AKAuthorizationEndorserRapportClientDelegate>"
@"RPCompanionLinkDevice"
@"AKAuthorizationDaemonService"
v44@0:8@16@24B32@?36
v44@0:8@"AKAppleIDAuthenticationContext"16@"AKClient"24B32@?<v@?B@"NSError">36
@56@0:8@16@24@32@40q48
@"AKAuthenticationSurrogateManager"
v28@0:8B16@20
v40@0:8q16@24@?32
v32@0:8q16@?24
v32@0:8q16@?<v@?B@"NSError">24
v32@0:8q16@24
v32@0:8q16@"NSString"24
v40@0:8q16@24@32
@"AKAuthorizationStoreManager"
v24@0:8B16B20
v28@0:8B16Q20
v36@0:8@16B24@28
^{sqlite3=}16@0:8
i24@0:8@16
B32@0:8@16@?24
q32@0:8@16^@24
v24@0:8^{sqlite3_stmt=}16
v32@0:8@16^{sqlite3_stmt=}24
^{sqlite3_stmt=}32@0:8@16^@24
B32@0:8^{sqlite3_stmt=}16^@24
^{sqlite3=}
@"<AKSQLiteMigration>"
v32@0:8@"AKCustodianContext"16@?<v@?@"AKCustodianSetupResult"@"NSError">24
v32@0:8@"AKCustodianContext"16@?<v@?@"NSError">24
v32@0:8@"AKCustodianContext"16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v32@0:8@"AKCustodianContext"16@?<v@?B@"NSError">24
v32@0:8@"AKCustodianContext"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"AKCustodianContext"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"AKCustodianContext"16@?<v@?@"AKTrustedContactsSyncResult"@"NSError">24
v32@0:8@"AKInheritanceContext"16@?<v@?@"AKBeneficiaryManifest"@"NSError">24
v32@0:8@"AKInheritanceContext"16@?<v@?@"NSError">24
v32@0:8@"AKInheritanceCLIContext"16@?<v@?@"AKBeneficiaryAliasSetupResult"@"NSError">24
@32@0:8q16^{sqlite3_stmt=}24
i32@0:8@16@24
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24q32q40q48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@36@0:8B16@20^@28
@"NSDictionary"32@0:8@"NSString"16^@24
@"NSDictionary"36@0:8B16@"NSString"20^@28
v48@0:8B16@20@28B36@?40
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"AKAuthorization"@"NSError">24
v40@0:8@"AKCredentialRequestContext"16@"AKAuthorizationUserResponse"24@?<v@?@"AKAuthorization"@"NSError">32
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"AKAuthorizationUserResponse"@"NSError">24
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"NSError">24
v32@0:8@"AKAuthorizationCredentialStateRequest"16@?<v@?q@"NSError">24
v32@0:8@"NSString"16@?<v@?q@"NSError">24
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"AKAuthorizationPresentationContext"@"NSError">24
v24@0:8@?<v@?@"NSSet"@"NSError">16
v32@0:8@"AKAuthorizationRevokeUpgradeContext"16@?<v@?B@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"NSData"@"NSError">24
v32@0:8@"NSXPCListenerEndpoint"16@?<v@?B@"NSError">24
v40@0:8@"AKAuthorization"16@"AKCredentialRequestContext"24@?<v@?B@"NSError">32
B32@0:8@16q24
v32@0:8@16q24
@"<AKAuthorizationClientProtocol>"
@"AKAuthorizationSessionManager"
@"<AKAuthorizationDaemonServiceDelegate>"
@"AKAuthorizationRapportClient"
@"AKAuthorizationEndorserRapportDiscovery"
@"AKAuthorizationContext"
@"<AKDServerUIDelegate>"
@"<AKAnisetteProvisioningClientProtocol>"
@"AAFService"
@"NSRunLoop"
@"NSTimer"
@"AKDispatchingCalculation"
@"<AKDispatchableRequest>"
@"AKExpiringCache"
^{__AppleIDAuthSupportTokenData=}32@0:8@16^@24
@56@0:8^{__AppleIDAuthSupportTokenData=}16@24@32@40^@48
^{__AppleIDAuthSupportTokenData=}32@0:8@"NSData"16^@24
@"NSDictionary"56@0:8^{__AppleIDAuthSupportTokenData=}16@"NSURL"24@"NSArray"32@"NSDictionary"40^@48
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
v40@0:8@16@24Q32
v36@0:8@16@24B32
@"APSConnection"
@"NSObject<OS_dispatch_semaphore>"
@"NSSet"
@"AKPCSAuthPushHandler"
v32@0:8@16^@24
B36@0:8^{sqlite3_stmt=}16@24i32
B40@0:8@16@24^^{__CFError}32
@"AKSRPContextHelper"
@32@0:8@16@?24
@"AKPiggybackRequestingController"
@"NSOperationQueue"
v24@0:8@"NSXMLParser"16
v48@0:8@"NSXMLParser"16@"NSString"24@"NSString"32@"NSString"40
v56@0:8@"NSXMLParser"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48
v40@0:8@"NSXMLParser"16@"NSString"24@"NSString"32
v56@0:8@"NSXMLParser"16@"NSString"24@"NSString"32@"NSString"40@"NSDictionary"48
v32@0:8@"NSXMLParser"16@"NSString"24
v32@0:8@"NSXMLParser"16@"NSData"24
@"NSData"40@0:8@"NSXMLParser"16@"NSString"24@"NSString"32
v32@0:8@"NSXMLParser"16@"NSError"24
@"AKWalrusContext"
@"ACAccount"
@"<AKAuthenticationContext>"
@"AKAuthorizationTVServicePresenter"
@"RPAppSignInService"
Starting Fido registration with context: %@
Starting Fido authentication with context: %@
Error starting fido auth: %@
Starting Fido recovery with context: %@
Error authorizing fido auth: %@
Error finishing fido auth: %@
%@: Starting to fetch icon for request context (%@)
%@: Determined request context (%@) is not eligible for remotely fetching icon (hasParameters: %@, hasData: %@, hasFetchContext: %@)
authkit/icon-fetching
Follow up push message is for an altDSID not signed in to iCloud: %@
Suppressing repair push for non-primary account
Refreshing follow ups for %@ with info %@
No body parameters in Follow Up response!
Failed to synchronize local follow up state: %@
Synchronizing local follow up state
Insertion Candidates: %@
Deleting: %@
Failed to clear existing follow ups: %@
Clearing Notifications: %@
Inserting: %@
Detected an item without an identifier, invalid payload
Updating existing item with identifier: %@
Existing item notification was previously dismissed, ignoring incoming notification
Incoming notification was forced, keeping it!
Found incoming sparse followups: %@
Found incoming full followups: %@
Unknown action, ignoring...
Sending tear down payload: %@
Pending Follow Up items matching tear down message id: %@
Pending Follow Up items: %@
Tear down follow up items: %@
Converting key to hashed value
Added:%@
Failed to persist private email with key:%@ error: %@
Remove:%@
Failed to remove private email with key:%@ error: %@
Failed to persist private emails list version with error: %@
Failed to persist private emails protocol version with error: %@
Tried to commit without listVersion. Info:%@
Failed to fetch authorized all private email with error: %@
State of app %@: %d.
XPC connection is nil, couldn't create remote object.
Unable to determine bundle ID of client %@ using NSBundle API. Falling back to CF.
Missing client info for circle request
Missing push token for circle request
Got malformed "%@" configuration info!
Got insecure "%@" configuration info!
Creating AKAuthenticationServerResponse with status: %@ contents: %@
Invalid/missing value for key alias: %@
Invalid value type for key: %@
Successfully obtained new CK from SRP
Successfully obtained new PRK from SRP
Encoded payload for federated auth: %@
No altDSID for auth server response. Could be bad.
No DSID for auth server response. Could be bad.
Invalid/missing value for key acname: %@
Invalid value for key ut: %@
Invalid value for key authType: %@
Invalid value for key Age of Majority: %@
Invalid value for key primary email vetted: %@
Invalid type for key orgType: %@
Invalid value for key orgType: %@
Invalid type for key orgName: %@
Invalid type for key isNotificationEmailAvailable: %@
Invalid type for key notificationEmail: %@
Updating with secondary auth response: %@
Trying to update an auth response without an existing _masterToken. Trouble waiting down the line.
Unable to update master token
Successfully obtained a new master token.
Successfully obtained a new PET.
Successfully obtained a new HB token.
Invalid format for service token in header %@
Updating token for service ID %@.
Successfully obtained new SLT from secondary auth
Successfully obtained new CK from secondary auth
Value for %@ is missing/invalid!
Successfully obtained new PRK from secondary auth.
No value for %@ header.
Invalid value value for %@ header: %@
Value for %@ is: %@
Invalid type for DSID value: %@
Will tear down an existing piggybacking session
Starting a piggybacking session
 CircleStep=%{public,signpost.telemetry:string1,name=CircleStep}@  enableTelemetry=YES 
BEGIN [%lld]: PiggyAcceptSessionForAcceptController  CircleStep=%{public,signpost.telemetry:string1,name=CircleStep}@  enableTelemetry=YES 
 CircleStep=%{public,signpost.telemetry:string2,name=CircleStep}@  Error=%{public,signpost.telemetry:number2,name=Error}d 
PiggyAcceptSessionForAcceptController
END [%lld] %fs:PiggyAcceptSessionForAcceptController  CircleStep=%{public,signpost.telemetry:string2,name=CircleStep}@  Error=%{public,signpost.telemetry:number2,name=Error}d 
Approving device could not accept piggybacking session: %@
%@: Processing physical proximity detection (%@) with replyContext (%@) for pushPayload (%@)
 PresenceMode=%{public,signpost.telemetry:number1,name=PresenceMode}d  enableTelemetry=YES 
BEGIN [%lld]: PiggybackingProcessPressenceForAcceptController  PresenceMode=%{public,signpost.telemetry:number1,name=PresenceMode}d  enableTelemetry=YES 
 Results=%{public,signpost.telemetry:string1,name=Results}@ 
PiggybackingProcessPressenceForAcceptControllerResults
EVENT [%lld] %fs:PiggybackingProcessPressenceForAcceptControllerResults  Results=%{public,signpost.telemetry:string1,name=Results}@ 
 Results=%{public,signpost.telemetry:string2,name=Results}@ 
PiggybackingProcessPressenceForAcceptControllerResultsOverrides
EVENT [%lld] %fs:PiggybackingProcessPressenceForAcceptControllerResultsOverrides  Results=%{public,signpost.telemetry:string2,name=Results}@ 
ReportedEnforceModeFailure
EVENT [%lld] %fs:ReportedEnforceModeFailure 
%@: Proximity check failed while handling push (%@)
 CheckPassed=%{public,signpost.telemetry:number2,name=CheckPassed}d 
PiggybackingProcessPressenceForAcceptController
END [%lld] %fs:PiggybackingProcessPressenceForAcceptController  CheckPassed=%{public,signpost.telemetry:number2,name=CheckPassed}d 
Will process message using session: %@ - %@
BEGIN [%lld]: PiggyClientInfoForAcceptController  CircleStep=%{public,signpost.telemetry:string1,name=CircleStep}@  enableTelemetry=YES 
PiggyClientInfoForAcceptController
END [%lld] %fs:PiggyClientInfoForAcceptController  CircleStep=%{public,signpost.telemetry:string2,name=CircleStep}@  Error=%{public,signpost.telemetry:number2,name=Error}d 
Did process message using session: %@ - %@
%@: Proximity was not detected and is being enforced
Failed to process data with error: %@
Approver is reporting as done...
Initializing accept session for DSID: %@
Failed to verify requesting secret, attempts: %@
%@: Determined proximity scanner should be started
%@: Unable to start proximity scanner with nil presenceSID from pushPayload (%@)
%@: Determined proximity scanner should not be started (wantsPresence: %@, circleStep: %lu, presenceSID: %@)
 enableTelemetry=YES 
PiggybackingDetectPresenceForAcceptController
BEGIN [%lld]: PiggybackingDetectPresenceForAcceptController  enableTelemetry=YES 
 FoundDevice=%{public,signpost.telemetry:number1,name=FoundDevice}d 
END [%lld] %fs:PiggybackingDetectPresenceForAcceptController  FoundDevice=%{public,signpost.telemetry:number1,name=FoundDevice}d 
Piggyback accepting controller has been released, proximity controller should have been invalidated
%@: Proximity controller (%@) found a match
%@: Proximity controller (%@) has been invalidated and prox was not detected
%@: Setting up proximity controller (%@) with presenceSID (%{mask.hash}@)
%@: Determined checking for proximity is needed
%@: Determined checking for proximity is not needed for circleStep (%lu) with controller (%@)
PiggybackingCheckPresenceForAcceptController
BEGIN [%lld]: PiggybackingCheckPresenceForAcceptController  enableTelemetry=YES 
%@: Proximity has been detected
%@: Proximity was not detected
END [%lld] %fs:PiggybackingCheckPresenceForAcceptController  FoundDevice=%{public,signpost.telemetry:number1,name=FoundDevice}d 
Authorization List version matches the local authorization list version, skipping update
Attempted to store incorrect authorization type
Cannot store an authorization credential with nil teamID/bundleID
Attempting to delete application with clientID: %@ from DB
Deleting application with clientID: %@ failed with error: %@
Application with clientID: %@ removed from database successfully
Revoking all applications failed with error: %@
Storing developer team failed with error: %@
Storing consented applications failed with error: %@
Failed to fetch applications to be revoked with error: %@
Failed to revoke applications with error: %@
Failed to fetch applications with error: %@, continuing with fetched applications if any...
Failed to fetch authorized client IDs with error: %@, continuing with the fetched clients if any...
Encountered error setting app list version: %@
Failed to update database version with error: %@
Attempting to build request without a URL, bad things to come...
Failed to sign the request with error: %@
Request: %@
Request Headers: %@
Request Body: %@
%@: Server returned no response, treating as success
%@: Cannot generate response dictionary for expected response type of UTF8String
%@: Unexpected error code value (%@) for key (%@)
%@: Server request failed with code (%@) and message (%@)
Server returned no response, treating as success
No body parameters in fetch user info response!
An error occurred performing request. Server message: %@
response type is JSON
Server request failed with error code: %i
Response Body: %@
Can't validate response for type: %lu
Invalid key %@ in server response: %@
AKAccountRecoveryController recoveryContext is valid %@:
Failed to retrieve recovery data with error. %@
Native recovery flow completed
Native recovery flow: recoveredInfo %@
Attempting to process native recovery response
shouldSendServerResponseForRecoveredInfo is true
responseContext: %@
Failed to fetch idMS completion url from provided info
We determined that we should not be resuming server UI flow at this point.  There is nothing else for us to do here.
Invalid native recovery server response detected
Internal or private access entitlement required but missing!
Missing identity token
Recovery token renewal will start.
Request to renew recovery token failed! Error: %@
Renewal of recovery token came back with HTTP status code: %@
Unexpected HTTP response code: %@
No basic auth URL!
MK was accepted
MK was accepted, but we did not get expected data... failing
Attempting to persist verifier
Failed to persist verifier with error: %@
Verifier persisted
Recovery context is valid...
Recovery context is invalid...
_recoveryContextFromServerInfo error: %@
Internal/Owner access entitlement required but missing!
Failed to verify enable walrus requirements with error: %@
response: %@
Failed to update walrus state with error: %@
response: %@
Failed to update walrus state - no ADP status header found in response.
Failed to update walrus state - either status code is not OK or the response is nil.
%@: Requesting attestation data for proxied auth context (%@)
%@: Failed to fetch attestation data for proxied auth context (%@) with error (%@)
%@: Fetched attestation data (%@) for proxied auth context (%@)
Context eligibility for piggybacking: %@
Client is eligible for piggybacking: %@
Client has requested password-only auth.
Client has requested a short-lived token.
Client has request a recovery PET.
Client is exempt from mandatory UI security upgrade.
Client is requesting password only auth. Security upgrade will not be offered.
Client is requesting ephemeral auth. Security upgrade will not be offered.
Client logging in for first time is using full AuthKit UI, security upgrade should be offered.
Cannot offer HSA2 upgrade on device with Apple ID login enabled.
Client has indicated that we should offer HSA 2.0 upgrade.
Performing ephemeral auth. Will not ask for ckgen or prkgen.
Sending prkgen: %@
The client indicated support for ckgen: %@
ckgen supported: %@
Will ask for ckgen.
Will ask to stash escrow PRK
Context has provided Anisette data for companion device.
Looking to set companion Anisette data in CPD.
Context has provided Anisette data for proxied device.
Grabbing Anisette data from proxied device.
Client has request a custodian setup token.
Client has request a beneficiary setup token.
Context has masterKey set! Setting masterKeyIsEligible
Context has a proxied bundle id set!
Context has set masterKeyAsSecondFactor
Context indicates that dependent tokens are being requested by parent account
Context indicates we are performing reauth for existing service
Surrogate has been registered for ID %@: %@
Begin out-of-process authentication with surrogate ID %@
Taking user to Settings/System Preferences for auth UI...
UI surrogate %@ registered.
Whoa! UI surrogate is checking in with an unexpected identifier %@.
UI surrogate with ID %@ has already checked in.
UI surrogate client %@ with surrogate ID %@ is checking in.
Context with identifier %@ has no registered UI surrogate.
UI surrogate for client %@ with surrogate ID %@ is checking out.
Waiting for UI surrogate for client %@ with surrogate ID %@ to check in...
Stop waiting for UI surrogate for client %@ with surrogate ID %@!
Error: Attempted to clear surrogate that is no longer in progress with ID %@.
Settings redirect not supported by context
Could not find heartbeat token for account %@
Inheritance Server request failed with error code: %i
%@ Database Migration requested from version: %i
Building database with schema version: 1
Upgrading database to schema version: 2
Upgrading database to schema version: 3
Upgrading database to schema version: 4
Client requested that we attempt provisioning...
Provisioning succeeded!
Unable to get Anisette data even after provisioning was attempted. Error: %@
Provisioning failed. No Anisette for you today! Error: %@
Skipping Anisette provisioning, per client request.
%@: Fetching peer attestation data for request (%@)
ADIGetIDMSRouting failed! Error: %@
Looking for Anisette data...
The DSID %@ is not provisioned for Anisette.
ADIOTPRequest failed. Error: %@
Anisette Info: mid - %@ otp - %@ euid - %d localUserUUID %@
Kicking off Anisette provisioning....
Anisette is already provisioned!
Unable to create start-provisioning URL request!
Starting provisioning with headers: %@
Start provisioning request failed! Error: %@
Unexpected response class! %@
Start provisioning response code: %@
Start provisioning response body: %@
No response body for start provisioning request!
No SPIM!
Destroying provisioning context.
ADIProvisioningStart failed. Error: %@
ADIProvisioningStart succeeded!
Unable to create end-provisioning URL request!
End provisioning with headers: %@
End provisioning request failed! Error: %@
End provisioning response code: %@
End provisioning response body: %@
No response body for end provisioning request!
No PTM!
No TK!
No routing info!
ADISetIDMSRouting failed! Error: %@
ADIProvisioningEnd failed. Error: %@
ADIProvisioningEnd succeeded!
Signing with BAA headers for urlKey: %@
Failed to get signing headers, error: %@
Client did not provide SIM data!
Resyncing Anisette provisioning data...
Cleaning up ADI session objects...
ADISynchronize failed. Error: %@
ADISynchronize succeeded!
ADIGetIDMSRouting failed with error code: %@
Unable to create sync-provisioning URL request!
Sync provisioning request failed! Error: %@
Sync provisioning response code: %@
No response body for sync request!
Response status details: %@
Unexpected response format under Status key!
Server sync failed! Error Code: %@
Server sync looks like it succeeded.
We've been given new R-Info.
Anisette sync is complete!
Erasing Anisette provisioning data...
Erase failed! Error: %@
Erasing Anisette data succeeded!
Nil value for startProvisioningURL!
Nil value for endProvisioningURL!
Nil value for syncAnisetteURL!
Using QA Anisette DSID.
Using some other non-prod Anisette DSID.
Setting request header for Custodian Sync Action
Custodian Recovery request is being created without a push token
There was no custodian recovery session ID. This should only happen on Start CLI
Custodian Recovery body for request: %{private}@
Custodian Initiation / Revocation request is being created without a custodian UUID
Finalize custodian setup request is being created without a custodian UUID
Update recovery key request is being created without a custodian UUID
Update recovery key request is being created without a wrappingKeyRKC
There was no custodian recovery session ID for embargo end feedback call, request will probably fail
There is no altDSID in recovery feedback call, request will probably fail
TrustedContactsDataSync body is being created without a last data sync timestamp for custodian context: %@
Registering for XPC activity: %s...
XPC activity says os got upgraded, running Post Install Job
XPC activity for post install complete
XPC activity registration complete. State: %@.
AKURLBagService attempt to clearCache after OS update
Satori Warmup for Post Install complete with result: %i
AKAppleIDCheckInHelperService attempt performHeartbeatCheckIn after OS upgrade...
AKAppleIDCheckInHelperService finished performHeartbeatCheckIn after OS upgrade...
Updating context for new service request: %@
Failed to update walrus web context %@ with error %@
Walrus web context %@ updated successfully.
Already sent AKCA event: %@
Sending Report: %@ (time: %f)
%s (%d) called
%@: Preparing proximity engine (%@)
%@: Activating proximity engine (%@)
%@: Invalidating proximity engine (%@)
%@: Encountered unexpected non-NULL engineTimeoutSource when attempting to schedule new timer
%@: Creating engine timeout source (%f s)
%@: Failed to create engine timeout source
%@: Engine timeout source has been registered
%@: Engine timeout source has been cancelled
%@: Engine timeout source event handler called
%@: Cancelling engine timeout source
%@: Manager (%@) did update to state (%lu)
%@: Manager (%@) reported that BLE is unsupported on this device
%@: Manager (%@) reported that we are unauthorized to use BLE
%@: Manager (%@) reported powered-on state
%@: Proximity engine (%@) was activated
%@: Proximity engine (%@) was invalidated
Session ID is nil for context: %@
Number of active sessions: %lu
Looking for client with session ID: %@
Session: %@ = %@
Found an exising context with session ID(%@), %@
AuthorizationSessionManager - Client %@ lacks a bundle ID!
AuthorizationSessionManager - should clear request: %@
AuthorizationSessionManager - Processing clearance request: %@
AuthorizationSessionManager - Adding %@ to list of authenticating apps
AuthorizationSessionManager - Created OSTransaction
Authorization Session - Denying clearance for %@
AuthorizationSessionManager - Queued end authentication clearance block for %@
AuthorizationSessionManager - Executing end authentication clearance block for %@
AuthorizationSessionManager - Nilled out OSTransaction
AuthorizationSessionManager - Removing %@ from authenticating list
AuthorizationSessionManager - Client bundle ID is nil.
AuthorizationSessionManager - No active request for %@
AuthorizationSessionManager - _continuationRequestIdentifier does not match the requestIdentifier
AuthorizationSessionManager - Active request session timed out for %@
AuthorizationSessionManager - Setting user response %@
 for context - %@
AuthorizationSessionManager - No active session for %@
AuthorizationSessionManager - Getting user response for context - %@
Listening for messages from paired device...
Looing for Anisette data on IDS-paired device...
Paired device Anisette info: %@
Unable to obtain Anisette data from IDS-paired device: %@
Error archiving request %@
Peer attestation fetch didSucceed:%d data:%@ error:%@
Error deserializing attestation data: %@
Proxied attestation fetch - %@
Unable to obtain Attestation data from IDS-paired device: %@
Preparing message with command %@...
Command message ready for sending to to paired device: %@
Setting paired device.
IDSService sendMessage method failed. Error: %@
Message is on its way to paired device with transport ID: %@
Found active tinker device
Preparing reply to %@...
Will send reply message to paired device: %@
IDSService sendMessage method failed to send reply. Error: %@
IDS callback did not provide a message identifier!
Message with transport ID %@ could not be sent! %@
No internal message ID exists for transport ID %@, so we're ignoring the send failure.
Success sending message with Transport ID %@!
Received reply message from paired device: %@
Received command message from paired device: %@
Incoming message lacks a valid AuthKit-assigned UUID. Replying to paired device will not be possible.
Handling command from paired device: %@
Incoming message lacks a valid command.
Error unarchiving request %@
Error while serializing attestation data %@
Unknown command received %@!
Reply message lacks reply-to field.
Unable to find pending completion block under ID: %@
Calling out to pending completion handler for ID %@...
Paired device changed while %@ remote commands were pending.
Acknowledged!
akd is starting up...
akd is shutting down...
Building %@ database with schema version: 1
Migrating %@ database to schema version: 2
Migrating %@ database to schema version: 3
Failed to delete key: %@
Migrating %@ database to schema version: 4
Migrating %@ database to schema version: 5
Redirecting to AuthKitUIService, to present basic login UI with context: %@
Context data is nil: %@
Trying to launch application with Scene Delegate
Unable to launch application: %@ with the error: %@
Successfully launched process: %@
Failed to launch application: %@ with error: %@
Call completion with authentication result with presentation completion: %@
Invalid value for key %@ in push message: %@
AKPushMessage: Piggybacking requestor presenceSID was expected but not found (%@)
alert parameters are not valid: %@
Push message has invalid command %@. Ignoring!
Push message is missing a transaction ID. Ignoring!
Can't post notification without an identifier.
User notification to be posted - %@
Adding notification request.
Failed to post notification with error: %@
Notification requeste added successfully.
Populating results with bundle info: %@
Failed to fetch subscription info with error: %@
%@: Failed to build URL request using provider (%@) with error (%@)
%@: Failed to execute URL request (%@) with 401 error (%@), will attempt to reauth and execute again
%@: Adding additional headers (%@) to URL request (%@)
%@: Executing URL request (%@)
%@: Reauthenticate succeeded, attempting to execute URL request again
%@: Failed to reauthenticate with error (%@)
%@: Unable to reauthenticate with nil authenticationHandler
Saving PCS auth context %@.
PCS auth context saved successfully in keychain.
Failed to save pcs auth context in keychain with error: %@
Updating PCS auth context %@.
PCS auth context updated successfully in keychain.
Failed to update pcs auth context in keychain with error: %@
Fetching PCS auth context with ID %@.
Keychain item found for given auth context. Checking if it's still valid...
Failed to unarchive data of class AKPCSAuthContext with error: %@
Context expired and will be removed from keychain.
Failed to fetch pcs auth context from keychain with error: %@
Failed to archive data with error: %@
Failed to fetch keychain items with error: %@
Failed to delete pcs credentials from keychain with error: %@
All pcs credentials deleted successfully from keychain.
Internal access entitlement required but missing!
No altDSID was provided.
No existing IDMS account for altDSID %@
No DSID was provided.
No existing IDMS account for DSID %@
Internal/Private/Write access entitlement required but missing!
Service type %@ is not valid.
Told to mark service %@ as not using account, but already not using!
Marking service %@ as %@ using account %@.
Global signout.
Removing unusued IDMS account %@...
Failed to remove account %@. Error: %@
Successfully removed account %@.
Exception caught: %@
Internal/Private access entitlement required but missing!
Failed to fetch devices with error: %@
Fetched device list for %@
Owner access entitlement required but missing!
Owner/Internal access entitlement required but missing!
Starting WarmUp verification ...
Invalid configurationInfo identifier provided: %@
Missing parameter altDSID!
Could not find configurationInfoURL in URL bag!
Could not find IdMS account with altDSID %@
Failed to serialize configuration info: %@
Failed to encode configuration info!
Set configuration info request failed: %@
Set configuration info response not of expected class!
Set configuration info completed with HTTP status code: %@
Invalid configurationInfo identifiers type provided: %@
Invalid configurationInfo identifiers provided: %@
Could not find fetchConfigDataURL in URL bag!
Fetch configuration info request failed: %@
Fetch configuration info response not of expected class!
Fetch configuration info completed with HTTP status code: %@
No body parameters in fetch configuration info response!
An error occurred fetching configuration info. Server message: %@
Fetch configuration info completed with keys: %@
Fetching login code
BEGIN [%lld]: UpdateStateWithAuthResponse  enableTelemetry=YES 
Write access entitlement required but missing!
The provided URL response is not formatted as a final auth response.
No Apple ID was provided.
No existing IDMS account for Apple ID: %@
 Error=%{public,signpost.telemetry:number2,name=Error}d 
UpdateStateWithAuthResponse
END [%lld] %fs:UpdateStateWithAuthResponse  Error=%{public,signpost.telemetry:number2,name=Error}d 
Updating IDMS account %@ with external server auth response...
Unable to update IDMS account %@. Error: %@
Successfully updated IDMS account %@
No GS service tokens to update. Done.
External auth response contains GS service tokens. Will persist those...
Asked to validated code: %llu
AuthKit master token is missing! Error: %@
AuthKit account altDSID is missing.
Unable to get master token string value!
Attaching proxied device Anisette data: %@
Attaching proxied device Anisette data.
Validate-code request failed! Error: %@
Vetting validation completed with HTTP status code: %@
No body parameters in code validation response!
Missing key %@ in server response.
Code is valid!
Code is invalid!
An error occurred validating the code. Server message: %@
A vetting token was not provided.
altDSID was not provided.
Vetting-token validation request is ready to go.
Request to validate vetting token failed! Error: %@
Code validation completed with HTTP status code: %@
Seems like our master token has expired.
Unusual ACAccount with nil username encountered: %@
Server says vetting token is valid.
Server says vetting token is invalid.
altDSID required but missing!
Failed to fetch eligibility with error: %@
Fetched eligibility state for %@
Check-in with IdMS requested for account with altDSID: %@
Performing liveness check-in for account: %@
No IdMS account found for altDSID: %@
Asked to report signout from service %@ for Apple ID: %@
No IDMS account for Apple ID: %@
Asked to report signout for all Apple IDs
Internal write access entitlement required but missing!
No IDMS accounts to sign out
Sign out failed for account %@ with error: %@
Sign out succeeded for account %@
The UI Surrogate is finally here!
Overriding limited UI context into silent preferred auth
Overriding full UI context into silent preferred auth, silent is not supported...
Requesting clearance to begin auth with context %@...
Cleared to begin auth with context %@!
Nothing to do, since the authenticating context was a UI Surrogate.
Cleared to end auth with context %@.
Starting security upgrade flow
Security upgrade flow completed with error - %@
Should not continue. Calling completion with just error.
Should continue with results. Update account with results and proceed.
Current context requires interactive auth. Trying biometric/passcode first.
Current context permits passwordless auth.
Passwordless authentication failed due to service error, bailing...
Passwordless authentication failed due to proxy failure, bailing...
Passwordless authentication resulted in a failed interactive flow, bailing...
Passwordless authentication force failed by client, bailing...
Silent auth did not provide results. Interactive auth not allowed. Stopping right now.
Canceling auth attempt because credential access is unavailable.
All non-interactive auth options failed. Trying interactive auth.
Biometric/Passcode validation not possible for current context.
Collecting biometric/passcode validation...
Biometric/Passcode Validation failed with error %@. We need password auth flow...
Upgrade token found on context, will attempt token upgrade.
Token upgrade requires secondary action.
Will attempt silent auth since the context is asking for service tokens.
Silent auth not allowed due to username being editable
Accounts not available, skipping IDMS account lookup...
Looking for IDMS accounts to suggest using...
Nothing found.
Telling client to ask the user about using Apple ID: %@
Client decision to keep using: %@. Error: %@
Rejecting CK auth because username is marked as editable
No existing IDMS account for %@
Found an existing IDMS account %@
We don't have a CK for %@ (Error: %@), so that's that.
Username and password already provided by context. One shot at non-interactive auth.
One shot at non-interactive failed, handling failure...
Interaction requested but network is unreachable, bailing...
Context did not provide a username and/or password or interaction requested.
Failed to refresh context locally with error: %@
Failed to refresh context remotely with error: %@
Client is asking for username only auth and provided a username... lets see how this goes
One shot at passwordless auth failed, handling failure...
Collecting user credentials...
No altDSID found on context. Checking DSID..
Context provided username is different %@(context) vs %@(account) for client %@. Trusting AuthKit account username.
No altDSID on context. Nothing to validate.
Last account info validation was less than 24 hours ago. Skipping.
Account info fetch failed. Skipping validation.
No account names came back from IDMS for altDSID: %@
Username %@ is valid for altDSID: %@
Username %@ is not valid for altDSID: %@. Setting username to %@
More than 24 hours since the last authentication mode was obtained, fetching authentication mode...
Less than 24 hours since the last authentication mode was obtained, using last known authentication mode
No AuthKit account and authentication mode is unknown, fetching authentication mode...
Skipping refresh, authmode is known: %@
Unable to dismiss UI on client side! Error: %@
User forgot their credentials.
User requested a new Apple ID.
User canceled. Aborting auth.
User has incompatible devices. Aborting auth.
Unable to show prompt. Aborting auth.
User request client alternate action. Aborting auth.
User chose to try again, aka retry auth.
Something bad happened! %@
Successfully obtained password. Time for SRP auth.
Asking client to dismiss basic login UI. SRP Passthrough.
Initiating credential recovery
Unable to dismiss UI on client side even though auth is complete! Error: %@
Asking client to dismiss basic login UI. SRP Success.
Prompt should be kept alive, retry auth.
Username was not valid for passwordless auth, requesting more information
Username was not entered.
Password was not entered.
Another attempt at getting basic login info has completed!
Auth attempt %@ has failed. Incrementing counter...
Maximum password auth attempts have been reached.
Attempting to show login error: %@
Starting piggybacking session
Looks like we're dealing with an HSA account.
Attempting passwordless auth with IDMS account %@...
Passwordless auth failed: %@
No continuation capable IDMS account found for Apple ID: %@
Faking IDMS auth success!
SRP auth attempted with an invalid context: %@ - %@ - %@
Secondary action not supported
Using server provided Apple ID.
Using client provided Apple ID.
No username provided, this can't be good...
Successful SRP did not return a PET to client.
Providing short-lived token
Providing identity token
Providing beneficiary setup token
Providing raw password to an internal client.
Providing PRK to an internal client.
Unable to reach client to call shouldContinueWithAuthenticationResults
Asking %@ should continue?
Force-failing auth, because client says to.
Will continue handling successful auth...
Unable to auth with IDMS but client says to suppress error and continue.
Updating AK account...
Will check in with IDMS about push registration...
Failed to check in with IDMS! Error: %@
Successfully checked in with IDMS.
Creating a new authkit account <%{private}@><%{private}@>
Fetched existing AK account: %{private}@
No service IDs were provided, so AKAuthenticationIDMSTokenKey will be left empty.
Updating service tokens is not available for Dependent tokens requests.
Fetching tokens for service IDs %@ failed. Error: %@
Fetching tokens for service IDs %@ succeeded!
We have no token for these services: %@. This can't be good.
Context not appropriate for updating persistent tokens. All done then!
BEGIN [%lld]: PersistGrandslamTokens  enableTelemetry=YES 
No AIDA account for altDSID %@ was found. Searching by Apple ID: %@
Creating new AIDA account for Apple ID: %@
Updating AIDA account %@ with properties and tokens.
Successfully saved AIDA account.
Failed to save AIDA account! Error: %@
PersistGrandslamTokens
END [%lld] %fs:PersistGrandslamTokens  Error=%{public,signpost.telemetry:number2,name=Error}d 
Updating token for service with ID %@...
GS service token with ID %@ marked as requiring TouchID.
Failed to update token for %@ in keychain. Error: %@
Cannot perform secondary auth action for non-interactive context.
Secondary action is GS endpoint. Returning the response as-is so that handler can perform the action.
Trying to show server UI for the response.
Context has masterKeyEligible set and server response indicates secondary action is required
Attempting second SRP for masterKeyAsSecondFactor
Server response indicates fido auth is required.
Secondary action server URL is missing
Failed to get second-factor. Error: %@
Successfully obtained second-factor code: %@.
Asking client to show alert for error: %@
Login code successfully validated! Updating auth tokens...
Unsupported prompt type encountered: %d
There was no URL in the bag for key: %@
Request response is not of expected class! %@
Starting to clear session cache.
Error starting fido auth flow: %@
Received Fido start auth with context: %@
Error presenting fido auth prompt: %@
Server says to show UI at URL key: %@
 ActionKey=%{public,signpost.telemetry:string1,name=ActionKey}@  enableTelemetry=YES 
ServerDrivenSecondaryAction
BEGIN [%lld]: ServerDrivenSecondaryAction  ActionKey=%{public,signpost.telemetry:string1,name=ActionKey}@  enableTelemetry=YES 
END [%lld] %fs:ServerDrivenSecondaryAction  Error=%{public,signpost.telemetry:number2,name=Error}d 
Asking client to start showing native UI
AKAppleIDAuthenticationService serverUIContext additionalData: %@
Retrieved recovery data for server. Server Response: %@ and recoveryData: %@
No usable IDMS account for Apple ID: %@
Attempting silent service-token auth with IDMS account %@...
No master token available for silent auth on account %@.
Fetching tokens for service IDs %@ failed! Error: %@
Fetching tokens for service IDs %@ succeeded.
Asked to fetch service token without a serviceID!
Asked to fetch service token without any master token data!
BEGIN [%lld]: FetchGrandslamTokens  enableTelemetry=YES 
Failed to create AppleIDAuthSupportTokenRef from exteral form. Error: %@
FetchGrandslamTokens
END [%lld] %fs:FetchGrandslamTokens  Error=%{public,signpost.telemetry:number2,name=Error}d 
AppleIDAuthSupportCopyAppTokensOptions failed with error: %@
Unable to find info for token with ID: %@
END [%lld] %fs:FetchGrandslamTokens 
User does not have all their credentials, so we're going to iForgot...
iForgot
BEGIN [%lld]: iForgot  enableTelemetry=YES 
END [%lld] %fs:iForgot  Error=%{public,signpost.telemetry:number2,name=Error}d 
iForgot reported success, but no username came back to akd.
iForgot reported success, but no password came back to akd.
iForgot succeeded, and we have a new auth server response!
iForgot succeeded, but we do not have a new auth server response. Doing SRP auth...
iForgot flow failed! Error: %@
Starting iForgot flow...
iForgot flow was triggered by push notification. Will try to use dedicated URL.
There was no iForgot URL in the bag!
Starting repair...
Failed to find matching account for context! Error: %@
There was no repair URL in the bag!
Repair flow reported success, but no auth response came back to akd.
Repair flow succeeded, and we have a new auth server response!
User wants a new Apple ID to auth with...
CreateNewAppleID
BEGIN [%lld]: CreateNewAppleID  enableTelemetry=YES 
END [%lld] %fs:CreateNewAppleID  Error=%{public,signpost.telemetry:number2,name=Error}d 
Calling recordUserAcceptedAgreementVersion with %@
New Apple ID flow reported success, but no username came back to akd.
New Apple ID flow reported success, but no password came back to akd.
New Apple ID flow reported success, but no auth response came back to akd.
New Apple ID creation succeeded, and we have a new auth server response!
New Apple ID flow failed! Error: %@
Starting Child Account creation flow...
Starting Apple ID creation flow...
There was no creation URL in the bag!
Change password flow failed! Error: %@
Change password flow reported success, but no username came back to akd.
Change password flow reported success, but no password came back to akd.
Change password flow succeeded, and we have a new auth server response!
Change password flow succeeded, but we do not have a new auth server response. Doing SRP auth...
Starting password change flow...
Change password flow started without account!
Could not find URL for changePassword!
Password change flow authentication failed with error, but we'll try anyways: %@
Prompting for piggybacking code
Failed to dismiss second factor UI %@
Piggybacking session failed with error: %@
Unable to dismiss client-side second-factor UI. Error: %@
Server UI came back with error: %@
Piggybacking escape hatch server UI finished, with error: %@
Detected a piggy service type, alias for iCloud
Setting serviceType %@ inUse for account %@
Server auth response did not contain HB token!
Server auth response did not contain CK.
Server auth response contained a CK, saving to the credential for account (%@)
Server auth response did not contain PRK.
Stashing the PRK away for escrowing for account: %@
We got a PRK from the server, but we have no passcode... discarding
Failed to update AuthKit account! Error: %@
We are running in recovery. Skip ACAccount update.
This auth is ephemeral. Skip ACAccount update.
This is a proxy auth. Skip ACAccount update.
This is a child account creation flow. Skip ACAccount update.
This auth is for a dependent. Skip ACAccount update.
Starting to teardown follow ups
This device cannot be an authorization endorser discovery.
Authorization Endorser discovery deactivated.
Authorization Endorser already in progress, ignoring device found. {device=%@}
 CleanSession=%{public,signpost.telemetry:number1,name=CleanSession}d  enableTelemetry=YES 
PiggybackingRequestingInitiateSession
BEGIN [%lld]: PiggybackingRequestingInitiateSession  CleanSession=%{public,signpost.telemetry:number1,name=CleanSession}d  enableTelemetry=YES 
END [%lld] %fs:PiggybackingRequestingInitiateSession  Error=%{public,signpost.telemetry:number2,name=Error}d 
Initiating a piggybacking flow for transaction id: %@
BEGIN [%lld]: PiggyInitialMessageData  enableTelemetry=YES 
 Error=%{public,signpost.telemetry:number1,name=Error}d 
PiggyInitialMessageData
END [%lld] %fs:PiggyInitialMessageData  Error=%{public,signpost.telemetry:number1,name=Error}d 
Handshake code prompt finished
Handshake request failed with error: %@
Handshake request finished
Waiting for handshake condition with state: %@ - %@ - %d - %d
Finished waiting for handshake condition with state: %@ - %@ - %d - %d
Code entered, but no handshake has been completed
Starting to process handshake results
We got results, finish the flow
User elected to escape before handshake completed
We did not capture a code, completing with escape results
Handshake failed with error: %@
Code collected, starting to wait for: %@
Piggybacking completion with final process response: %@ - %@
Clearing requesting controller state
 CircleStep=%{public,signpost.telemetry:number1,name=CircleStep}d  enableTelemetry=YES 
PiggybackingRequestingProcessPushPayload
BEGIN [%lld]: PiggybackingRequestingProcessPushPayload  CircleStep=%{public,signpost.telemetry:number1,name=CircleStep}d  enableTelemetry=YES 
END [%lld] %fs:PiggybackingRequestingProcessPushPayload  Error=%{public,signpost.telemetry:number2,name=Error}d 
%@: Proximity is being enforced and was not detected by accepting device (escrow fallback is expected)
User entered a new code after verificaiton failure
User succesfully escaped after verification failure
User escaped with erro after verification failure
We failed to handle verification, passing through the failure
Starting to process request message
BEGIN [%lld]: PiggyClientInfoForRequestController  enableTelemetry=YES 
PiggyClientInfoForRequestController
END [%lld] %fs:PiggyClientInfoForRequestController  Error=%{public,signpost.telemetry:number1,name=Error}d 
Requesting session indicated that we are DONE
%@: Will not attach duplex session to authentication results
Passing duplex session
Duplex session creation failure
Requesting session processing failure: %@
PiggybackingRequestingReplyWithContext
BEGIN [%lld]: PiggybackingRequestingReplyWithContext  enableTelemetry=YES 
END [%lld] %fs:PiggybackingRequestingReplyWithContext  Error=%{public,signpost.telemetry:number1,name=Error}d 
Attempting to determine whether we should continue.
Should continue came back with error: %@
Should continue: %d
Initializing requesting session: %@
Using a previously cached code or error: %@ - %@
Validating Code: %@
Login code validated
Code validated with result: %d - %@
PiggyCodeCollect
BEGIN [%lld]: PiggyCodeCollect  enableTelemetry=YES 
Prompting user for piggybacking code
END [%lld] %fs:PiggyCodeCollect  Error=%{public,signpost.telemetry:number1,name=Error}d 
Secret collection failed with error: %@
User wants to continue using current piggybacking session
Didn't get a code with error: %@
Captured code: %@ - %@
%@: Determined proximity advertiser should be started
%@: Unable to start proximity advertiser with nil presenceSID from pushPayload (%@)
%@: Determined proximity advertiser should not be started (wantsPresence: %@, circleStep: %lu, presenceSID: %@)
%@: Determined proximity advertiser should be stopped (circleStep: %lu)
%@: Determined proximity advertiser does not need to be stopped (circleStep: %lu, proximityController: %@)
AKPiggybackRequestingController: Proximity controller has been invalidated
AKPiggybackRequestingController: Invalidating proximity controller.
AKPiggybackRequestingController: Proximity controller is nil.
Context info %@
Received: %@ (%@)
Alert handle (%@) activated.
Alert handle (%@) deactivated.
Alert handle (%@) deactivated by request.
Alert handle (%@) interrupted with error: %@
Overriding Settings landing spot because the Apple ID %@ is used for iCloud.
Opening internal URL: %@
Error launching Preferences: %@
Invalid Apple ID service type %@. Falling back to iCloud.
No account found with given altDSID: %@, failing private email lookup
No match found with given altDSID: %@ for key %@ [bundle:%@]
Email found for %@: %@ [bundle:%@]
Insufficient entitlement for altDSID: %@, failing hme context fetch
No valid account fount for altDSID: %@, failing hme fetch
[ios] requesting for %@
Insufficient entitlement for altDSID: %@, aborting register private email
No valid account found for altDSID: %@, aborting register private email
Account not eligible to perform register Private Email - altDSID: %@
Insufficient entitlement for context: %@, failing hme context fetch
No valid account found for context: %@, failing hme context fetch
No altDSID in context: %@, failing hme context fetch
Updated context is nil for: %@, failing hme context fetch
Insufficient entitlement for altDSID: %@, aborting listAllPrivateEmails
Failed to fetch private emails for altDSID %@, error - %@
Private Emails found: %@
Unable to call back to client! Error: %@
Owner/Private access entitlement required but missing for removePrivateEmailKey!
Owner/Private access entitlement present for removePrivateEmailKey!
Owner/Private access entitlement for removePrivateEmailKey error %@
Owner/Private access entitlement for removePrivateEmailKey SUCCESS
Presenting UI for key %@
Presented UI! (%@, %@)
Failed to register private email (%@) with error: %@
Successfully registered Private Email
response: %@
data: %@
Failed to store fetched email (%@) error:%@
Owner detected!
Internal request made by internal client? %@
Unable to get Anisette data for %@! Error: %@
%@: Fetching attestation data for device (%@) with request (%@)
%@: Calling anisette service (%@) for peer attestation data
%@: Unable to grab attestation data for device (%@) with request (%@) using anisette service (%@)
Denied access to Anisette data to non-internal client.
Invalid target %@ for fetching Anisette data.
Invalid target %@ for fetching legacy Anisette data.
Client lacks entitlement to provision Anisette!
Invalid target %@ for provisioning Anisette data.
Client lacks entitlement to resync Anisette info!
Invalid target %@ for resyncing Anisette data.
Client lacks entitlement to erase Anisette provisioning!
Invalid target %@ for erasing Anisette data.
Denied access to Signing data to non-entitled client.
Starting to fetch user info for %@
Failed to fetch info with error: %@
Fetched user info for %@
Fetch user info returned apple managed account fetchError: %@
Fetched authMode for %@
Handling push with command AKPushMessageCommandAccountInfoChanged...
Not updating, since primary account does not match
failed to clear DB on protocol change - %@
Couldn't upgrade the stored protocol version - %@
Starting to sync private emails list for %@
Could not create service controller
Update passedVersion=[%@]
Update currentVersion=[%@]
Failed to update from push notification, error=%@
IDMS sent reset key to revoke authorization Database
Encountered error while revoking authorization database: %@
Authorization database revoked successfully
We got an appListVersion with the user info new version: %@ 
old version: %@
Unable to fetch authorized application list with error: %@
Unable to refresh because Nil altDSID
Unable to refresh because account name list is nil/empty.
Updating cached properties for Apple ID accounts with altDSID: %@
Username of account %@ is no longer a valid
Updating full list of account names for %@ to: %@
Posting %@ with payload: %@
Authorization requesting user information for request: %@
The Given/Family Name for the current user was not found in the AuthKit account
Application is not requesting email for this authorization early return with userInfo:
Application is requesting email for this authorization fetching email properties from account
This is a Mako Account, Ignoring primary email address verification
Mako account has reachable email addresses
Completed getting UserInformation for Mako account with UserInfo:
Missing primary email verification state.
Completed getting UserInformation for account with UserInfo:
Handling push with command AKPushMessageCommandNotifyTrustedDeviceListChanged...
AKPushMessageCommandNotifyTrustedDeviceListChanged message contained single-operation delta.
AKPushMessageCommandNotifyTrustedDeviceListChanged message contained no delta. Listener should fetch device list.
%@: Attempting to remove continuation token for account (%@)
%@: Peripheral manager (%@) failed to start advertising with error (%@)
%@: Peripheral manager (%@) started advertising
%@: Peripheral manager (%@) failed to add service (%@) with error (%@)
%@: Peripheral manager (%@) added service (%@)
%@: Central manager (%@) discovered peripheral (%@) with advertisement data (%@) and RSSI (%@)
%@: Discovered peripheral (%@) with nil serviceID
%@: Discovered peripheral (%@) with matching presenceSID (%{mask.hash}@) and serviceID (%@)
%@: Discovered peripheral (%@) with non-matching serviceID (%@)
Got unexpected combination, mappings=%@, hmeListVersion=%@
Failed to fetch private emails list with error: %@
Deleting Hide My Email database
Failed to clear Hide My Email database. Error: %@
Failed to unpack private emails list. Got:%@
Detected that we must sync with server
Got a bad private-email fetch URL from the bag: %@
Unable to fetch private email. The URL is missing from the URL bag
GS token is missing, giving it a shot to receive it from the account
We could not find an account, and the token is missing. Sending the requestas-is and hoping for the best.
Calling GS endpoint to start the Fido auth.
Parsing Fido auth context.
Creating Fido auth context with: %@
Error parsing fido auth parameters: %@
Calling GS endpoint to finish the Fido auth.
Error finishing fido auth flow: %@
Creating server response from finish fido response.
Activating handle: %@
Remote view sent a finish event
Remote view sent a user response event: %@
%@ deallocated.
%@: Transformed %@ (%@)
%@: Validating authentication context (%@)
%@: Failed to retrieve AuthKit account for context (%@) with error: %@
Successful SRP!
SRP authentication with server failed! Error: %@
Server told us to retry. Retrying auth...
Auth failed but the server says to try a secondary auth action anyway. Let's how this goes...
Need Anisette resync...
Anisette resync was successful. Retrying auth...
Anisette resync failed. Error: %@
Need Anisette reprovisioning...
Anisette erase was successful. Retrying auth...
Anisette erase failed. Error: %@
URLSwitching needed...
Server requested to switch URL but no URLSwitch data is available, Ignoring URL switch
URLSwitching was successfull retrying SRP With new url
URLSwitching failed with error: %@
Invalid PRK returned from server and we're doing a companion auth. We should clear CK
This is an internal build with Demo mode for Authorization activated, returning 'NOT FOUND' credential state
Credential state request does not contain clientID, reverting to XPC client information.
Setting clientID to %@
Credential state does not contain teamID, reverting to XPC client information.
Setting teamID to %@
Requested Credential state does not match XPC client's bundleID (%@) or teamID (%@), returning AKAuthenticationErrorInvalidContext
AltDSID is included in the State Request,this should only be happening in testing
This device is not trusted, returning 'REVOKED' credential state
Attempting private call to fetch credential state for clientID: %@
Client did not have a teamID and it is not an internal client
Client has internal entitlements and does not have a teamID
Client did not have a application identifier
No applications were found with the provided Client ID: %@
Credential State Request has an ignore flag on the TeamID returning Credential State
No developer teams were found with the Team ID: %@
Application database has been compromised.
Transfer state stored in database with clientID: %@, teamID: %@
Application has a credential, directly returning application's credential state.
Application has a credential but user identifier match is being ignored (for internal credential state), directly returning application's credential state.
Application has a credential, failed user identifier validation.
Application in transferred state with unsafe matching user identifier (to be verified by IdMS).
Application in transferred state with no matching user identifier.
Application in expired state with unsafe matching user identifier.
Application in expired state with no matching user identifier.
Application in transfered state with strongly matching alternate user identifier.
Application in expired state with strongly matching alternate user identifier.
Application in transferred state with strongly matching user identifier. Directly returning application's credential state.
Application in expired state with strongly matching user identifier. Directly returning application's credential state.
Application in expired state with no matching user identifier but user identifier match is being ignored (for internal credential state) and No match for Team Identifier, directly returning application's credential state.
Application in expired state with no matching user identifier but user identifier match is being ignored (for internal credential state), directly returning application's credential state.
Application in transferred state with no matching user identifier but user identifier match is being ignored (for internal credential state) and No match for Team Identifier, directly returning application's credential state.
Application in transferred state with no matching user identifier but user identifier match is being ignored (for internal credential state), directly returning application's credential state.
Application state cannot be securely determined.
Fetching developer team with id: %@
Encountered error while fetching developer team: %@
Fetching developer team for client with ID: %@
Unsafe verification failed due to nil User ID.
Performing unsafe verification with User ID: %@
Notification requires authentication prompt.
Unable to create CFUserNotificationRef!
Failed to create login code notification!
Dismissed code notification.
Attempting to show notification with identifier: %@
Beginning reverse geocode...
Reverse geocode callback called
Reverse geocode results: (Locality: %@ - Administrative Area: %@)
locationName = "%@"
Will display user notification...
Torn down notification with ID: %@
Attempted to tear down notification, but it was not found for identifier... %@
Notification responded: %@
Prompting user if if they want to change their password
Failed to create password change notification!
Suppressing password change prompt due to missing PRK
Will take user to change password flow in Settings...
Using the following URL for change password redirect: %@
Got authentication results back based on the prompt for notification: %@
Incoming push does not contain walrus web access info, abandoning device arming
Arming device for PCS auth is not supported for non primary account.
Begin arming device with context %@.
Failed to arm device with context %@ with error %@
Device armed with context %@ successfully.
Requested PCS auth TTL [%f] over max [%f]
Authorization Endorser already in progress, ignoring startAuthorization.
Authorization Endorser Started.
Authorization Endorser client failed to activate. {errorDomain=%{public}@, errorCode=%ld, error=%@}
Sending StartAuthorizationRequest. {device=%@, device_ptr=%p}
Ignoring StartAuthorization another endorser is already handling it.
StartAuthorization failed. {errorDomain=%{public}@, errorCode=%ld, error=%@}
Handling StartAuthorizationResponse. {response=%@}
Failed to unarchive the credential request context. {error=%@, data=%@}
_requirePassword property received as %i, setting to NO
StartAuthorization presenting authorization UI for Rapport request. {credentialRequestContext=%@}
Sending AuthorizationDidFinish. {authorization=%@, device=%@, device_ptr=%p}
Failed to archive AKAuthorization object, failing authorization. {archiveError=%@}
Received AuthorizationDidFinish response. {response=%@, error=%@, device=%@, device_ptr=%p}
Rapport endorser authorization failed. {errorDomain=%{public}@, errorCode=%ld, error=%@}
Error object won't be sent, failed to archive. {archiveError=%@}
Sending AuthorizationDidFinish. {error=%@, device=%@, device_ptr=%p}
Sending DidStartServerAuthorization event. {device=%@, device_ptr=%p}
Error sending DidStartServerAuthorization Rapport event. {errorDomain=%{public}@, errorCode=%ld, error=%@, device=%@, device_ptr=%p}
Could not dismiss UI! Error: %@
Request to show server UI came back with error: %@
Unable to tear down server UI! Error: %@
Native recovery failed! Error: %@
presentNativeRecoveryUIForContext did succeed. Recovered info: %@ and error: %@
Unable to tear down native recovery UI! Error: %@
dismissNativeRecoveryUIForContext did succeed.
In Sync Bubble. UI is not supported.
Context %@ has AKAppleIDAuthenticationUICapabilityUnknown.
Context cannot display full UI.
Context requires out-of-process UI.
Allowing BG process %@ to perform proxied FG auth.
Client is capable of displaying UI, no surrogate required...
Out-of-process auth, no registered UI surrogate yet...
Background auth, no registered UI surrogate yet...
Client %@ is being permitted to run FG auth, because iCloud settings are inaccessible.
Client %@ is not permitted to use _isProxyingForApp. Falling back to BG behavior.
Client %@ cannot proxy without specifying an immutable Apple ID.
Ignoring FG proxying request because %@ is not currently foreground.
Client %{public}@ requested authentication (via %{public}@).
Client %{public}@ requested authentication.
Will not prompt user about redirect per auth context configuration.
In Buddy. UI is not supported.
Showing alert failed, user notification is nil!. Error: %d
Unable to reset check in bit due to Accounts error: %@
Unable to respond to message with invalid id
Unable to respond to message without AK account for altDSID %@
Will notify IDMS about teardown response...
XPC activity says that it's time run the liveness check-ins!
XPC activity for liveness check-ins completed!
Done with removeUnusedAndDuplicateAuthKitAccounts
authkit/check-in
We do not have any IDMS accounts to check in with.
Performing liveness check-in with account: %@
Liveness check-in failed for account %@ with error: %@
Liveness check-in succeeded for account %@.
authkit/sign-out
Reporting global signout to IDMS for %@
Reporting signout for service %@ with account %@
Invalid service %@ for reporting
Cannot convert %@ to a non-nil string
Unable to call back to notification handler! Error: %@
Notifying client (%@) of credential state change %d.
Client (%@) was notified %@ with error %@
Unable to call back to state broadcast handler! Error: %@
Notifying client (%@) of credential state change (%d) for client ID (%@).
Executing query: %@
SQL Exec %@ failed with error %s.
Executing query: %s
Rows changed: %d
Database error detected: %@
Database corruption detected: %@
Wanted to migrate database, but migrator is nil!
Attempting to open database at path: %@
Creating path for database...
%@: Failed to open file at path %@
Database opened at path: %@
Attempting to wipe database at path: %@
Failed to wipe database with error: %@
Database %@ wiped...
Closing database at path: %@
Closed database with result: %d
%@ deallocated
AuthKit Private entitlement needed to start a custodian initiation request, but calling process doesn't have it
There is no custodian UUID to start a custodian initiation request failing operation
Missing custodian setup token, abandoning idMS custodian setup.
Failed to initiate custodian setup with error: %@
response: %@
Successfully initiated custodian setup for custodianUUID %@
response: %@
data: %@
AuthKit Private entitlement needed to finish a finalize custodianship request, but calling process doesn't have it
Missing custodian UUID, abandoning custodian finalization.
Missing altDSID, abandoning custodian finalization.
Successfully finalize custodianship for custodianUUID %@, response: %@
Failed to finalize custodianship with error: %@
AuthKit Private entitlement needed to abort a custodian setup request, but calling process doesn't have it
There is no custodian UUID to abort a setup request failing operation
Successfully aborted custodian setup for custodianUUID %@, response: %@
Failed to abort custodian setup with error: %@
AuthKit Private entitlement needed to finish a custodian recovery key update request, but calling process doesn't have it
Missing custodian UUID, abandoning custodian recovery key update.
Missing altDSID, abandoning custodian recovery key update.
Missing wrappingKeyRKC, abandoning custodian recovery key update.
Failed to update recovery key with error: %@
response: %@
Successfully updated recovery key for custodianUUID %@, response: %@
Starting recovery request with context %@
We have an authKit account, request needs to be authenticated
Failed to start custodian account recovery with error: %@
Successfully started an account recovery for account %@, response: %@
AuthKit Private entitlement needed to continue fetching the custodian configuration , but calling process doesn't have it
Failed to start custodian recovery transaction with error: %@
Successfully started an account recovery transaction, response: %@
Failed to verify custodian recovery key with error: %@
Call to fetch custodian recovery token returned with response: %@
AuthKit Private entitlement needed to continue fetching the data recovery key , but calling process doesn't have it
Cannot fetch data recovery key without a session ID or recovery token, failing operation
Cannot fetch data recovery key without an authenticated account, failing operation
Successfully fetched data recovery key for account with altDSID %@, response: %@
AuthKit Private entitlement needed but calling process doesn't have it
There is no altdsid to send embargo end transaction, failing operation
Cannot send embargo end transaction without a session ID, failing operation
Sending embargo end notification feedback with to urlKey: %@ context: %@
Failed to send embargo end feedback with error: %@
Embargo end feedback call returned with response: %@
Embargo end feedback completed with HTTP status code: %@
There is no owner or custodian information to start a transaction, failing operation
Custodian context does not provide a pushToken, fetching pushToken...
Something really really bad happened, we don't have a push token to start a custodian request
Cannot fetch data recovery key without a session ID, failing operation
There is no url for key AKURLBagKeyTrustedContactsDataSync in the URLBag. No op.
Missing lastDataSyncTimestamp, abandoning IdMS performTrustedContactsDataSync.
Missing altDSID, abandoning IdMS performTrustedContactsDataSync.
Missing heartbeat token, abandoning IdMS performTrustedContactsDataSync.
Failed to performTrustedContactsDataSync with error: %@
response: %@
Successfully performed TrustedContactsDataSync
response: %@
data: %@
Failed to performTrustedContactsDataSync due to AKCustodianDaemonService being released
Unexpected IdMS trusted contact operation response: %@
Failed to fetch dataclass rules with error: %@
Missing beneficiary setup short-lived token.
Failed to setup beneficiary (%@) with error: %@
Failed to remove beneficiary (%@) with error: %@
Failed to update beneficiary (%@) with error: %@
Setting up Beneficiary Alias with context - 
Failed to setup beneficiary alias (%@) with error: %@
Successfully setup Beneficiary Alias
response: %@
Failed to execute request with error: %@
Successfully executed the request with response: %@
Cleared session bag caches
Cleared serialized bag cache
Starting to fetch URL bag... if necessary
FetchURLBag
BEGIN [%lld]: FetchURLBag  enableTelemetry=YES 
END [%lld] %fs:FetchURLBag 
Fetching URL bag...
Bag fetch failed! Error: %@, falling back to older bag version
Bag fetch failed! Error: %@
Bag fetch either timed out or was successful but there was no bag data!
URL bag fetch timed out, cancelling task: %@
There was an error parsing the URL bag! %@
The URL bag was not in dictionary format!
URL bag fetched! %@
Daemon service initialized with client: %@
Client before perform authorization execution %@
Proxied bundle detected (%@), proxying...
Requesting clearance to authorize with context %@...
Perform Authorization cannot proceed because of error: %@
Attempting to authorize request: %@
Completion was called with nil authorization and no error thrown, setting Error Unknown
Error performing auth request (%@): %@
Authorization ended for requestContext: %@
Attempting to get credential state for User identifier: %@
Authorization Credential state not found with error:%@
Failed to revoke upgrade with error: %@
Revoke upgrade completed successfully.
Starting to fetch appleIDAuthorizeHTMLResponseURL
Request for appleIDAuthorizeHTMLResponseURL failed. Error: %@
appleIDAuthorizeHTMLResponseURL response code: %@
Failed to fetch appleIDAuthorizeHTMLResponseURL %@
Cannot fetch primary bundleID for nil primary account
Owner entitlement needed to continue fetching icon, but calling process doesn't have it
Establishing connection with notification center for client (%@).
Establishing connection with state broadcast handler for client (%@).
Handling request with missing account, default to primary AuthKit account
Client owner detected, checking for proxied bundle
Client doesn't have owner access, operation not permitted
Existing client found from the session manager and using it %@
Using the client initiated with the daemon service's connection
Early returning the request as it meets preferImmediatelyAvailableCredentials criteria.
Will attempt to perform silent authorization using provided user ID.
Requested to skip auth UI...
Requesting interactive authorization...
Silent Request is not eligible for authorization
Attempting safe SRP for first object...
Silent auth requested with an invalid context... bailing
Requesting password only: %@
Handling a client with authorization level: %@
Rapport authorization is required for request %@
Rapport request is not eligible for authorization
Proxied bundle identifier entitlement needed to continue saving authorization.
Authorization request missing proxied bundle identifier.
Storing authorization for proxied request (%@).
_getPresentationContextForRequestContext canPerformCredentialRequest returned %@ (with error %@)
AKAuthorizationValidator returned we cannot perform credential request but threw no error, setting error unknown
User information updated
No login choices available and we have a password request in credential requests.
No credential requests.
Checking for genesis event!
Previous credential for client %@ is authorized
Resetting scopes %@ for upgrade from keychain
Previous credential for client %@ is in transfer state
%s Credential state is not authorized
Fetching credentials with: %@
getCredentials returned with %lu credentials
Fetching credentials for proxied associated domains. {proxiedAssociatedDomains=%@}
presenting authorization UI for request %@
Authorization UI returned with userResponse - %@
Attempting authorization with response %@, and client: %@
Attempted to authorize request of unsupported type %@
User response contains password, so add them to srp context
Client has special access, populating context with overrides...
Applying request client ID override
Applying request team ID override
Authorization is for an internal application without teamID
Client do not have special access, so not overriding the context. Using the given client: %@
Client has authenticated externally, populating authToken...
Constructed AKAuthorizationContext from the request & client - %@
There is no web session auth to save.
Saved web session details. Error - %@
Client proxy object to present UI is not created
Client before perform authorization for user info execution %@
Client owner detected
shouldContinueWithRequest returning result %@ and error %@
Got a response from user: %@ and client: %@
Detected password request
Authorization presentation failed with error: %@
Got a response from user: %@, userSelection: %@ and client: %@
Processing of user response failed with an unknown error, likely invalid response...
Unable to beginAuthorization - Missing Entitlements.
Unable to beginAuthorization - Client is not entitled to _AKCredentialRequestContextBundleIdentifierProxyEntitlement
Unable to beginAuthorization - Client has proxy entitlement but is not setting either _proxiedClientBundleID or _proxiedClientTeamID
beginAuthorization - Proxied bundle detected (%@), proxying...
beginAuthorization - Requesting clearance to authorize with context %@...
beginAuthorization - Error beginning session for context : %@
 Error - %@
beginAuthorization - Attempting to authorize request: %@
beginAuthorization - Error beginning session for context : %@
beginAuthorization completed
beginAuthorization - User Response is nil for context : %@
Unable to continueAuthorization - Missing Entitlements.
Unable to continueAuthorization - Client is not entitled to _AKCredentialRequestContextBundleIdentifierProxyEntitlement
Unable to continueAuthorization - Client has proxy entitlement but is not setting either _proxiedClientBundleID or _proxiedClientTeamID
continueAuthorization - Proxied bundle detected (%@), proxying...
Invalid context. Need to set _continuationRequestIdentifier
continueAuthorization - Error continuing session for context : %@
 Error - %@
continueAuthorization - externalLocalAuthData was provided. Verifying...
continueAuthorization - Invalid Externalized LAContext
continueAuthorization - externalLocalAuthData was verified successfully
continueAuthorization - externalAuthToken was provided. Attaching to authorizationRequest.
Invalid context. Need to set either _externalLocalAuthData or _externalAuthToken
continueAuthorization - Attempting to resume authorization for request: %@
continueAuthorization - Authorization ended for requestContext: %@
continueAuthorization - Error continuing session for context : %@ 
: error: %@
continueAuthorization completed
continueAuthorization - authorization is nil for context : %@
cancelAuthorization with context - %@
Unable to cancelAuthorization. Missing Entitlements.
Unable to cancelAuthorization - Client is not entitled to _AKCredentialRequestContextBundleIdentifierProxyEntitlement
Unable to cancelAuthorization - Client has proxy entitlement but is not setting either _proxiedClientBundleID or _proxiedClientTeamID
cancelAuthorization - Proxied bundle detected (%@), proxying...
cancelAuthorization - Error canceling the session: %@
cancelAuthorization - Successfully canceled session
Client authenticated externally. Sending auth token in SRP.
Asking client to show server UI with %@...
Showing server UI with request: %@, %@
Server UI has been skipped.
Server UI did not complete auth successfully! Error: %@
Looks like we're done with server UI!
We do not have an initial auth response to update. Creating one now!
Successfully handled server UI response!
Asking client to dismiss any presented server UI...
Server UI-based authentication has been canceled.
User elected to try again
Unknown action signal from server UI final response!
Creating resource load delegate with auth response
Failed fetching phone information for server UI delegate: %@
Failed to fetch IDS cert info: %@
Fetching resource load delegate
Auth response recieved is for proxy, initializing resource load delegate accordingly
Could not find an existing AuthKit account, so we can't attach account specific headers: %@
Context explicitly does not want GS tokens for server UI, moving on...
Error communicating with client anisette service: %@
%@: Calling client proxy to fetch peer attestation data for context (%@) with request (%@)
Current %@ database version: %i
Migration logic not present (from: %i)
Current schema version undefined!
Current store name undefined!
Resuming XPC listener for Mach service %@...
Fatal error! Unknown XPC listener: %@
Lockscreen state: %@ 
Checking lock state
We are running in recovery. Leaving IDS alone.
We are running in the sync bubble. Leaving IDS alone.
akd is exiting due to SIGTERM
Updating current sharing mode.
Notified of language change. Will exit when all clear.
%@: Scheduling request (%@) with calculation (%@)
%@: Unable to schedule request (%@) with algorithm (%@)
%@: Immediately executing request (%@)
%@: Will attempt to schedule next request (%@)
%@: No more requests to schedule
%@: Scheduled new timer (%@) for next upcoming calculation (%@)
%@: Scheduler timer fired, executing all eligible requests
%@: Attempting to execute scheduled request (%@)
%@: Unable to execute scheduled request (%@) with calculation (%@)
%@: Executing request (%@)
%@: Handling dispatching response (%@) for executed request (%@)
%@: Updating algorithm for dispatching info (%@)
%@: Removing algorithm for dispatching info (%@)
Sending request to revoke upgrade txID %@ for teamID/bundleID: %@/%@
Revoke request came back with error: %@
Client %@ lacks a bundle ID!
Processing clearance request: %@
Adding request as pending...
Processing clearance request for Surrogate with ID %@
Denying clearance to client %@ due to pending surrogate auth...
Clearing silent authentication
No authentication in progress, all clear!
Attempting to clear in-app request: %@
Allowing clearance despite pending interactive auths: %@
Denying clearance due to pending daemons: %@
Attempting to determine foreground state for apps: %@
Denying clearance due to another foreground app performing authentication...
Queued end authentication block for %@
Queued end authentication clearance block for %@
Executing end authentication clearance block for %@
Removing %@ from authenticating list
Surrogate context is done
Surrogate auth flow is complete!
Found a pending request: %@
Auth has ended with an error. Skipping queued context update.
End authentication called without any queued clearance handler, we are done
Adding %@ to list of authenticating apps
Adding %@ to list of authenticating daemons
Passing password down to next queued client.
Password populated from cache.
Clearing the password cache.
XPC activity says that it's time to update user information
XPC activity for fetch user information complete
XPC activity for fetch global config complete
No Primary AuthKit account found skipping user information fetch
Succesfully fetched user information for altDSID: %@
Encountered error while fetching user information: %@
No Primary AuthKit account found skipping global config fetch
We are running in recovery. Leaving APS alone.
We are running in the sync bubble. Leaving APS alone.
Push service starting...
Server did not provide a valid APS environment. Falling back to prod.
Push service started
Updating push delegates: %@
Will notify delegates of notification action: %@
Will query delegates of intent to show notification
Did notify delegates of intent to show notification, suppression elected: %@
Will ask delegates to process push payload
Did ask delegates to process push payload
Server is not providing an APS env override.
Current APS env matches server preference. %@
Active APS env (%@) does not match server-requested env (%@).
The server requested env (%@) is not valid!
Shutting down APS connection with env %@...
Starting new APS connection with env %@...
Shutting down APS connection...
APNS status changed: %d
APNS reconnected
Unable to convert public token to hex string: %@
APS says we have a new public token! %@
BEGIN [%lld]: APSTokenEnvironment  enableTelemetry=YES 
APSTokenEnvironment
END [%lld] %fs:APSTokenEnvironment 
BEGIN [%lld]: APSTokenPopulate  enableTelemetry=YES 
APSTokenPopulate
END [%lld] %fs:APSTokenPopulate 
akd/received-push-message
Received push message: %@. Contents: %@
Push message is not for the IDMS topic. Ignoring!
All queued push messages processed, we're done!
Attempting to process %@
Received push command to tear down notification.
Received push command to refresh AKURLBag
Processing a supressed command, tearing down previous HSA2 alerts
Incoming message alert suppressed
Discarding message as ineligible: %@
Push message is not intended for the primary iCloud account, suppressing...
Push message required a passcode, but current device does not have one...
Push message is for an unknown altDSID: %@
Push message is only allowed for primary account, suppressing...
Device is in restricted sharing mode, supressing...
Showing alert for message %@.
User interacted with alert - %lul.
Notification torn down by server!
User accepted PCS arming push, begin device arming.
User dismissed notification. Nothing further to do.
PCS arming completed, notifying delegates of results.
No action to be done for push command %@.
Processed all known commands, notifying delegates
Trying to generate login code now for %@...
Failed to generate login code. Error: %@
Will display login code notification...
Will display piggy notification...
Tearing down login notification: %@
Will tear down current notification, with ID: %@
Will tear down notification with ID: %@
Will take user to password-reset flow in Settings for %@...
Using the following URL for iForgot redirect: %@
Active login notification id: %@
Account is not primary, do not proceed with arming.
Web access info not provided, do not proceed with arming.
Account is ineligible, do not proceed with arming.
Push may proceed with PCS arming.
Found matching iCloud account %@ for push.
AKSQLiteQuerry deallocated, not binding parameters
Error binding sql statement with parameter: %@
Parameter type not handled, failing binding statement.
%@: Failed to generate authentication parameters with error (%@)
%@: Failed to configure SRP context with error (%@)
%@: Performing SRP request with context (%@)
HSA2 repair required: %@
Suppressing piggybacking for non-primary iCloud accounts
BEGIN [%lld]: PiggybackingProcessPushPayload  CircleStep=%{public,signpost.telemetry:number1,name=CircleStep}d  enableTelemetry=YES 
Suppressed payload: %@
 DidProcess=%{public,signpost.telemetry:number2,name=DidProcess}d 
PiggybackingProcessPushPayload
END [%lld] %fs:PiggybackingProcessPushPayload  DidProcess=%{public,signpost.telemetry:number2,name=DidProcess}d 
Suppressing the circle error payload
We received a reply: %@
Processed a pending reply with payload: %@
Starting an accepting session with payload: %@
Failed to get a controller
 Class=%{public,signpost.telemetry:string1,name=Class}@  enableTelemetry=YES 
PiggybackingProcessPiggybackPayloadWithController
BEGIN [%lld]: PiggybackingProcessPiggybackPayloadWithController  Class=%{public,signpost.telemetry:string1,name=Class}@  enableTelemetry=YES 
Accepting session finished successfully
END [%lld] %fs:PiggybackingProcessPushPayload 
Accepting session finished with error: %@
END [%lld] %fs:PiggybackingProcessPushPayload  Error=%{public,signpost.telemetry:number1,name=Error}d 
Orphaned payload: %@
Processing pending reply!
authkit/circle-request
Starting circle request with context: %@
Populating push token
Failed to populate push token
Circle request failed with error: %@
Waiting for reply with timeout: %f
 Payload=%{public,signpost.telemetry:string1,name=Payload}@  enableTelemetry=YES 
PiggyCircleRequest
BEGIN [%lld]: PiggyCircleRequest  Payload=%{public,signpost.telemetry:string1,name=Payload}@  enableTelemetry=YES 
authkit/circle-operation
Starting circle operation with context: %@
Waiting... %@ - (%@) - %@
Cancelled piggybacking request: %@
Timeout for piggybacking request: %@
Notifying the other side that we're really done
Circle request (%@) completed with response: %@
END [%lld] %fs:PiggyCircleRequest  CircleStep=%{public,signpost.telemetry:string2,name=CircleStep}@  Error=%{public,signpost.telemetry:number2,name=Error}d 
PiggyExecuteRequest
BEGIN [%lld]: PiggyExecuteRequest  CircleStep=%{public,signpost.telemetry:string1,name=CircleStep}@  enableTelemetry=YES 
END [%lld] %fs:PiggyExecuteRequest  CircleStep=%{public,signpost.telemetry:string2,name=CircleStep}@  Error=%{public,signpost.telemetry:number2,name=Error}d 
Received response for circle (step 0) request: %@
Circle (step 0) response payload (%@) received with presenceSID (%{mask.hash}@)
Circle (step 0) response payload (%@) does not contain presenceSID, ignoring response
Locale change notification. Fetching global configs.
Fetched global config after locale change.
Fetching global config with cache policy %lu
FetchGlobalConfig
BEGIN [%lld]: FetchGlobalConfig  enableTelemetry=YES 
END [%lld] %fs:FetchGlobalConfig 
Fetching global config from cache...
Fetching global config from source...
Global config fetch failed! Error: %@
Global config fetch either timed out or was successful but there was no data!
Global config fetch timed out, cancelling task: %@
There was an error parsing the config! %@
The config was not in dictionary format!
Config fetched! %@
No push token available for check-in!
Error getting phone bundle information: %@
Failed to fetch follow up identifiers: %@
Posting active services as: %@
Check-in to server without any active services for account: %@
Starting to fetch app info for %@
Failed to fetch app info with error: %@
Fetched app info for %@
Starting to fetch bundle id for Primary application for serviceID: %@, altDSID: %@
Failed to fetch Primary application with error: %@
Fetched Primary application bundle id for %@
bio metric PET requested.
passcode PET requested.
altDSID is available for auth: %@
Client Bundle ID is available
Opting into Experimental Mode through SRP
Sending requested cloud partition: %@
Test Account Header Attached
Password available. Will ask for bootstrap password-based auth.
No password, but CK is available. Will ask for ck-based auth.
Master Key avalable.  Will ask for mk-based auth.
%@: Attaching additional headers (%@) to SRP request
Context has provieded UDID for proxied device.
Sending experimental features as %lu
%@: Attempting to clear continuation token for account (%@)
Device is still not trusted, not performing auth.
Authorization Rapport Link Client invalidated
Authorization Rapport Link Client failed to activate. {errorDomain=%{public}@, errorCode=%ld, error=%@}
Invalid request, cannot properly set RPAppSingInService flags. {requestContext=%@}
Authorization Rapport activated, and AppSignIn is advertising.
Asked to perform authorization, but one is already in progress. {requestContext:%@}
%s Unable to satisfy password request
Rapport authorization called with no completion callback. {authorization=%@, errorDomain=%{public}@, errorCode=%ld, error=%@}
AuthorizationRapportClient present UI failed. {errorDomain=%{public}@, errorCode=%ld, error=%@}
Received StartAuthorization. {request=%@, options=%@}
Ignoring StartAuthorization, one is already in progress.
Failed to archive the credential request context. {archiveError=%@}
Received AuthorizationDidFinish. {request=%@, options=%@}
Failed to unarchive error. {unarchiveError=%@}
Failed to unarchive authorization. {unarchiveError=%@}
AKD received request for TTR on non-internal build, suppressing.
AKD received push request to create TTR with title: %@
The TTR request was missing a title - message was: %@
AKD received request for TTR on non-internal build, ignoring.
Completed launch of tap-to-radar with result: %@, error: %@
Attempt to perform authentication without an upgrade token!
Attempt to perform authentication without altDSID!
Current context requires interactive auth for Apple ID: %@
Token upgrade requested without a username
Server requests remote UI
Short-lived token upgrade failed: %@
Attempting token upgrade with altDSID %@...
Missing URL bag entry for federated account, attempting IDP flow...
Server says to show UI at IDP URL: %@
Handling IDP response: %@
v24@?0@"AKFidoAuthenticationResponse"8@"NSError"16
v24@?0@"AKFidoContext"8@"NSError"16
v32@?0@"AKAuthenticationServerResponse"8@"NSDictionary"16@"NSError"24
v8@?0
v24@?0@"NSData"8@"NSError"16
v16@?0@?<v@?@"NSData"@"NSError">8
v24@?0@"AKIconContext"8@"NSError"16
@"AKCoordinatedDataBlock"8@?0
items
action
v32@?0@"NSHTTPURLResponse"8@"NSData"16@"NSError"24
@32@?0@"NSDictionary"8Q16^B24
B32@?0@"FLFollowUpItem"8Q16^B24
v32@?0@"FLFollowUpItem"8Q16^B24
/Library/Application Support/com.apple.akd/privateEmails.db
INSERT OR REPLACE INTO emails (client_key, email) VALUES (?, ?)
DELETE FROM emails WHERE client_key = ?
SELECT email FROM emails WHERE client_key=?
v24@?0^{sqlite3_stmt=}8^B16
SELECT privateEmailListVersion FROM version
UPDATE version SET privateEmailListVersion = ?
SELECT protocol_version FROM version
UPDATE version SET protocol_version = ?
SELECT email, client_key FROM emails
accountInfo
devices
adsid
@32@?0@8Q16^B24
v32@?0@"NSDictionary"8Q16^B24
/System/Library/Frameworks/BaseBoard.framework/BaseBoard
/System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard
/AppleInternal/Library/Frameworks/BaseBoard.framework/BaseBoard
BSAuditToken
Unable to find class %s
com.apple.authkit.client
com.apple.authkit.client.private
com.apple.authkit.client.internal
com.apple.authkit.client.owner
com.apple.authkit.writer.internal
com.apple.dt.Xcode
com.apple.dt.xcodebuild
com.apple.dt.xcscontrol
application-identifier
com.apple.application-identifier
com.apple.developer.applesignin
com.apple.authkit.authorization-bundle-identifier-proxy
AKOwnerProxyClient: %@
akd [on behalf of %@]
com.apple.akd
accountsd
backupd
aktool
askpermissiond
itunesstored
Preferences
StoreKitUIService
appstored
Carousel
com.apple.aktool
com.apple.internal.appleAccountSetupTool
exited?
%@ (%@)
srdwa
wscUUID
ttlMin
ptkn
autype
acname
DsPrsId
uireq
com.apple.gs.idms.pet
com.apple.gs.idms.hb
X-Apple-GS-Token
X-Apple-HB-Token
X-Apple-AK-Auth-Type
X-Apple-I-CK
X-Apple-I-PRK
X-Apple-SL-Token
X-Apple-I-MD-DATA
X-Apple-I-Recovery-Session-Id
com.apple.gs.idms.beneficiary.add
X-Apple-I-AURL
X-Apple-I-AURL-Type
X-Apple-I-Device-Terms
X-Apple-I-MD-Cmd-Target
underAge
isSenior
ageOfMajority
firstPartyApp
privateEmail
X-Apple-I-Data
additionalInfo
appleIdSignInEnabled
privateAttestationEnabled
phoneAsAppleId
primaryEmail
primaryEmailVetted
naurl
X-Apple-I-NAURL
canHaveCustodian
canBeCustodian
custodianEnabled
custodianLastUpdateDate
canHaveBeneficiary
canBeBeneficiary
buuid
beneficiaryWrappedKey
countryCode
appleManagedAccount
orgType
orgName
notificationEmailAvailable
notificationEmail
fidoAuth
@"<NSSecureCoding>"32@?0@"NSString"8@"NSString"16^B24
atxid
alias
demoAccount
params
paired
alternateDsid
hsa2
hsa1
managed
v16@?0B8B12
idmsPresence=%@, foundDevice=%@
v24@?0@"AKCircleRequestPayload"8@"NSError"16
DSID
%06u
v12@?0B8
proximityDetected
/Library/Application Support/com.apple.akd/authorization.db
v32@?0@"NSString"8Q16^B24
v32@?0@"AKDeveloperTeam"8Q16^B24
SELECT team_id, uid FROM authorized_teams WHERE team_id = ?
SELECT team_id FROM authorized_applications WHERE client_id = ?
SELECT team_id FROM authorized_teams WHERE uid = ?
UPDATE authorized_applications SET credential_state = ? WHERE client_id = ?
DELETE FROM authorized_applications WHERE client_id = ?
UPDATE authorized_applications SET credential_state = ?, authorizedAppListVersion = 'TEMPORARY'
TEMPORARY
INSERT OR REPLACE INTO authorized_teams (team_id, uid) VALUES (?, ?)
v32@?0@"NSString"8@"AKConsentedApplication"16^B24
INSERT OR REPLACE INTO authorized_applications (client_id, team_id, scopes, origin, credential_state, transfer_state, primary_client_id, authorizedAppListVersion) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
SELECT client_id FROM authorized_applications WHERE authorizedAppListVersion != ? AND authorizedAppListVersion != 'TEMPORARY'
UPDATE authorized_applications SET credential_state = ?, authorizedAppListVersion = ? WHERE authorizedAppListVersion != ?
SELECT client_id, scopes, credential_state, transfer_state, primary_client_id, origin FROM authorized_applications WHERE team_id = ?
NULL
SELECT client_id FROM authorized_applications WHERE credential_state = ?
SELECT authorizedAppListVersion FROM version;
v16@?0^{sqlite3_stmt=}8
UPDATE version SET authorizedAppListVersion = ?
UPDATE version SET db_version = ?
/System/Library/Frameworks/SetupAssistant.framework/SetupAssistant
/System/Library/PrivateFrameworks/SetupAssistant.framework/SetupAssistant
/AppleInternal/Library/Frameworks/SetupAssistant.framework/SetupAssistant
BYLicenseAgreement
POST
com.apple.gs.idms.mrk
v20@?0B8@"NSError"12
v24@?0@"NSDictionary"8@"NSError"16
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
v28@?0B8@"AKAuthenticationServerResponse"12@"NSError"20
X-Apple-2SV-Req-Intercepted
X-Apple-2SV-Authenticate
success
X-Apple-AK-Advanced-ICloud-Data-Protection
v24@?0@"AKPCSAuthContext"8@"NSError"16
<%@: %p {
base: %f,
maxQueueSize: %lu,
_counter: %lu,
_queueSize: %lu,
<%@: %p {
delay: %f,
maxQueueSize: %lu,
_counter: %lu,
_queueSize: %lu,
application/json
Content-Type
Accept
X-Apple-Password-Only
X-Apple-Offer-Security-Upgrade
X-Apple-Ephemeral-Auth
ckgen
icscrec
rpet
X-Apple-I-App-Provided-Context
X-Apple-I-Proxied-ICSCREC
X-Apple-I-Proxied-PRK-Gen
X-MMe-Proxied-Client-Info
X-Apple-Identity-Token
X-Apple-I-Device-Configuration-Mode
X-Apple-I-Proxied-MD-M
X-Apple-I-Companion-MD-M
mk2fa
X-Apple-I-Request-UUID
X-Apple-I-ReAuth
addBeneficiaryToken
addCustodianToken
dependentAltDSID
v24@?0@"AKAttestationData"8@"NSError"16
v24@?0@"NSMutableDictionary"8@"NSError"16
true
%@:%@
com.apple.AuthKit.PromptEvent
clientId
proxiedClientId
hasUsername
proxyingForPairedDevice
accountSecurityLevel
authenticationType
authReason
capabilityForUIDisplay
__OSINSTALL_ENVIRONMENT
__AKSYNCBUBBLE
No Bundle ID
No Proxied Client ID
%lu%@
<%@: %p {
dispatchDate: %@,
dispatchCounter: %lu,
algorithmIdentifier: %@,
relinquishmentHandler: %@,
headerValue: %@,
capp
papp
svct
ralg
base
delay
maxqueue_size
AKUISurrogateQueue
Out-of-process surrogate auth is already in progress for client %@.
XPC Error launching out-of-process authentication for client %@ with surrogate ID %@.
v16@?0@"NSError"8
Failed to launch out-of-process authentication for client %@ with surrogate ID %@.
Settings surrogate auth is already in progress for client %@
Redirecting to Settings for client %@ is not permitted for this call.
Failed to prompt for Settings redirect for client %@.
User canceled Settings redirect for client %@.
Unable to launch Settings for client %@.
UI surrogate %@ not registered. Unable to do UI work.
 AKAuthenticationSurrogateManager Error: %@
beneficiaryUUID
claimId
selections
accessKey
beneficiaryFirstName
beneficiaryLastName
beneficiaryPassword
Authorization
CREATE TABLE IF NOT EXISTS authorized_teams (team_id TEXT PRIMARY KEY, uid TEXT, authorizedAppListVersion TEXT);
CREATE TABLE IF NOT EXISTS authorized_applications (client_id TEXT PRIMARY KEY, team_id TEXT, scopes TEXT, credential_state INTEGER);
CREATE TABLE IF NOT EXISTS version (authorizedAppListVersion TEXT PRIMARY KEY);
ALTER TABLE version ADD COLUMN db_version INTEGER;
ALTER TABLE authorized_applications ADD COLUMN authorizedAppListVersion TEXT
UPDATE version SET authorizedAppListVersion = 'TEMPORARY';
INSERT OR REPLACE INTO version (authorizedAppListVersion, db_version) values ('TEMPORARY', '%i');
ALTER TABLE authorized_applications ADD COLUMN transfer_state TEXT
ALTER TABLE authorized_applications ADD COLUMN primary_client_id TEXT
ALTER TABLE authorized_applications ADD COLUMN origin TEXT;
DROP TABLE IF EXISTS version;
CREATE TABLE IF NOT EXISTS version (authorizedAppListVersion TEXT PRIMARY KEY, db_version INTEGER);
com.apple.AuthKit.TiburonAttempt
/System/Library/Frameworks/KeychainCircle.framework/KeychainCircle
/System/Library/PrivateFrameworks/KeychainCircle.framework/KeychainCircle
/AppleInternal/Library/Frameworks/KeychainCircle.framework/KeychainCircle
KCJoiningAcceptAccountCircleDelegate
KCJoiningAcceptSession
KCJoiningRequestSecretSession
<%@: %p> Value: %@, Expiry (%@)
@"NSString"8@?0
@"NSArray"8@?0
@"_AKExpiringCacheValue"8@?0
Response
spim
cpim
X-Apple-I-MD-RINFO
X-Apple-I-MD-M
Status
com.apple.akd.anisette
v32@?0@"NSString"8@"NSString"16^B24
ownerAppleId
recoverySessionId
ownerCustodianAltDSID
custodianUUID
idmsdata
aadata
encryptedPRKC
nextStep
wrappingKeyRKC
txnid
recoveryAlternateDsId
custodianUUIDs
beneficiaryUUIDs
timestampOnCK
uuid
hashWrappingKeyRKC
status
@"NSDictionary"32@?0@"AKTrustedContact"8Q16^B24
https://gsa.apple.com/grandslam/GsService2/lookup/v2
https://gsa.apple.com/grandslam/GsService2/lookup
idata
%@/%@
com.apple.AuthKit.TiburonAuthorizationUI
passwordCredentialCount
didShowAppleID
useAnonymous
useAppleID
usePasswordCredential
modifiedName
com.apple.AuthKit.TiburonRequest
originClientType
apple
appleweb
includesAuthorizationRequest
includesPasswordRequest
clientID
appID
teamID
isFirstTimeAuth
<akredacted>
isUpgradeFromPassword
com.apple.authkit.post-install
v16@?0@"NSObject<OS_xpc_object>"8
postInstallQueue
com.apple.ak.postinstall
com.apple.AuthKit.StartAuthorization
CredentialRequest
com.apple.AuthKit.AuthorizationDidFinish
Error
com.apple.AuthKit.DidStartServerAuthorization
duration
requestID
didCancel
passwordRequestSuccess
authorizationRequestSuccess
errorDomain
errorCode
underlyingErrorDomain
underlyingErrorCode
allDevices
includeFamily
oses
services
com.apple.proximity-controller
com.apple.proximity-controller-engine
-[AKProximityController dealloc]
Authorization Session - <%@: %p context %@, requested by %@, sessionID: %@>
AKAuthorizationClearanceQueue
AKAuthorizationTrafficQueue
v32@?0@"NSString"8@"AKAuthorizationSession"16^B24
com.apple.authkit.authorization-session
/System/Library/Frameworks/IDS.framework/IDS
/System/Library/PrivateFrameworks/IDS.framework/IDS
/AppleInternal/Library/Frameworks/IDS.framework/IDS
IDSService
IDSDefaultPairedDevice
IDSSendMessageOptionBypassDuetKey
IDSSendMessageOptionEnforceRemoteTimeoutsKey
IDSSendMessageOptionTimeoutKey
com.apple.private.alloy.anisette
akcmd
akarg
akid
aktyp
akrid
akret
aksuc
akerd
AKCommandMessage <%p> {
Internal ID: %@,
Command: %@,
Argument: %@ }
NSData <%@ bytes>
(none)
AKReplyMessage <%p> {
Internal ID: %@,
Reply-To: %@,
Success: %@,
Error: %@,
RD: %@ }
com.apple.ak.idsq
v28@?0B8@"NSData"12@"NSError"20
-[AKPeerIDSAnisetteService syncAnisetteWithSIMData:completion:]
-[AKPeerIDSAnisetteService eraseAnisetteWithCompletion:]
-[AKPeerIDSAnisetteService provisionAnisetteWithCompletion:]
-[AKPeerIDSAnisetteService legacyAnisetteDataForDSID:withCompletion:]
v32@?0@"IDSDevice"8Q16^B24
com.apple.authkit.peer-as.txn
v24@?0@"AKAnisetteData"8@"NSError"16
-[AKPeerIDSAnisetteService _mhq_handleIncomingReplyMessage:]
-[AKPeerIDSAnisetteService service:didSwitchActivePairedDevice:acknowledgementBlock:]
PrivateEmail
CREATE TABLE IF NOT EXISTS emails (client_key TEXT PRIMARY KEY, email TEXT);
CREATE TABLE IF NOT EXISTS version (privateEmailListVersion TEXT PRIMARY KEY, db_version INTEGER);
INSERT OR REPLACE INTO version (privateEmailListVersion, db_version) VALUES('%@', '%i')
ALTER TABLE version ADD COLUMN protocol_version INTEGER
UPDATE version SET protocol_version = %i,db_version = %i
SELECT client_key FROM emails;
DELETE FROM emails WHERE client_key = '%@';
PRAGMA foreign_keys=off
ALTER TABLE emails RENAME TO emails_orig
CREATE TABLE emails AS SELECT * FROM emails_orig
ALTER TABLE emails ADD COLUMN bundle_id TEXT
CREATE INDEX client_bundle_idx ON emails(client_key,bundle_id)
DROP TABLE emails_orig
PRAGMA foreign_keys=on
UPDATE version SET db_version = %i
ALTER TABLE emails RENAME TO emails_v4
CREATE TABLE emails (client_key TEXT PRIMARY KEY, email TEXT)
INSERT INTO emails (client_key,email) SELECT client_key,email FROM emails_v4
DROP TABLE emails_v4
com.apple.AuthKitUIService
context
oopUIMode
v24@?0@"BSProcessHandle"8@"NSError"16
pbv2
idmsapproved
pbv2m
defbtn
albtn
none
prevtxnid
alert
title
body
stitle
sbdy
sftr
silent
akdata
pedr
stitleCDP
sbdyCDP
PCSKeysArmedEligible
<%@:%p> command: %lu, identifier: %@
com.apple.ak.puffin.xpc
com.apple.akd.pcsauth.keychain_service
com.apple.akd.pcsauth
recipientEmail
com.apple.Preferences
com.apple.akd.default
com.apple.AuthKit
Localizable
ALERT_DEFAULT_CANCEL
number
slotID
label
dataPreferred
defaultVoice
physicalSim
inUse
PhoneCertificate
B32@?0@"CTXPCServiceSubscriptionContext"8Q16^B24
com.apple.accounts.carrierUtilities.queue
v40@?0@"NSDictionary"8@"NSData"16@"NSHTTPURLResponse"24@"NSError"32
com.apple.authkit.PCSKeyProvider
v24@?0@"AKKeychainItem"8@"NSError"16
v32@?0@"AKKeychainItem"8Q16^B24
v24@?0@"NSArray"8@"NSError"16
_cliMode
_altDSID
altDSID: %@, cliMode: %i
Request
Header
isHSA2Eligible
AKAuthVerificationQueue
v24@?0@"AKAppleIDUserInformationResponse"8@"NSError"16
v40@?0@"NSString"8@"NSString"16@"NSDictionary"24@"NSError"32
v24@?0Q8@"NSError"16
cdks
v36@?0B8@"NSDictionary"12@"NSHTTPURLResponse"20@"NSError"28
%llu
security-code
X-Apple-I-Vetting-Token
IDMS
B24@?0@"ACAccount"8Q16
com.apple.akd.authenticate-with-context
v28@?0B8@"NSDictionary"12@"NSError"20
v24@?0@"AKAuthenticationServerResponse"8@"NSError"16
v24@?0@"ACAccount"8@"NSError"16
-[AKAppleIDAuthenticationService _refreshLocalAccountAndUpdateContext:completion:]
WRONG_PASSWORD_ALERT_TITLE
WRONG_PASSWORD_ALERT_MESSAGE
MISSING_INPUT_ALERT_TITLE
MISSING_INPUT_ALERT_MESSAGE
BAD_NETWORK_ALERT_TITLE
BAD_NETWORK_ALERT_MESSAGE
CODE_INVALID_TITLE
CODE_INVALID_MESSAGE
UNDERAGE_ALERT_TITLE
UNDERAGE_ALERT_MESSAGE
APPLE_MANAGED_ACCOUNT_SIGN_IN_PROHIBITED_TITLE
APPLE_MANAGED_ACCOUNT_SIGN_IN_PROHIBITED_MESSAGE
APPLE_MANAGED_ACCOUNT_NEEDS_SETTINGS_REDIRECT_TITLE
APPLE_MANAGED_ACCOUNT_NEEDS_SETTINGS_REDIRECT_MESSAGE
APPLE_MANAGED_ACCOUNT_UNABLE_TO_SIGN_IN_TITLE
APPLE_MANAGED_ACCOUNT_APPLICATION_BLOCKED_MESSAGE_APPNAME_ORGNAME_FORMAT
APPLE_MANAGED_ACCOUNT_APPLICATION_BLOCKED_MESSAGE_ORGNAME_FORMAT
APPLE_MANAGED_ACCOUNT_APPLICATION_BLOCKED_MESSAGE_APPNAME_FORMAT
APPLE_MANAGED_ACCOUNT_APPLICATION_BLOCKED_MESSAGE
SRP_VERIFICATION_ERROR_TITLE
UNKNOWN_ERROR_ALERT_TITLE
UNKNOWN_ERROR_ALERT_MESSAGE
v24@?0@"NSString"8@"NSString"16
ENTER_VERIFICATION_CODE_PIG
v20@?0B8@"NSDictionary"12
@"NSString"32@?0@"NSString"8@"AKToken"16^B24
com.apple.gs.icloud.storage.buy
v24@?0@"NSNumber"8@"NSError"16
?%@=%@
-[AKPiggybackRequestingController _initiatePiggybackingWithCleanSession:withCompletion:]
AKPiggybackRequestingController.m
completion
%@-%lu
-[AKPiggybackRequestingController processPushPayload:completion:]
%06lu
AKPrivateEmailRemoteViewController
APPLE_ACCOUNT
STORE
GAMECENTER
FACETIME
MESSAGES
prefs:notifyAuthKit=true&authKitContextID=%@
ACCOUNTS_AND_PASSWORDS&path=%@
&root=%@
HME_ERROR_ALERT_INSUFFICIENT_SECURITY_LEVEL_TITLE
HME_ERROR_ALERT_INSUFFICIENT_SECURITY_LEVEL_MESSAGE
HME_ERROR_ALERT_BUTTON_CONTINUE
HME_ERROR_ALERT_BUTTON_CLOSE
-[AKPrivateEmailDaemonService presentPrivateEmailUIForContext:completion:]
v24@?0@"AKPrivateEmail"8@"NSError"16
https://www.apple.com
AKLastEmailListRequestDateKey
userinfodata
dataCenter
com.apple.authkit.sync-private-emails
q24@?0@8@16
com.apple.authkit.authorization-list-update
v24@?0@"AKApplicationMetadataInfo"8@"NSError"16
-[AKUserInfoController _setLastEmailListRequestDate:]
-[AKUserInfoController _broadcastEmailChangeNotification]
_bundleIdentifier
_bundleName
_bundleDescription
_bundleType
_otherInfo
tddelta
mids
v32@?0@8Q16^B24
-[AKProximityPiggybackEngine dealloc]
invalidListVersion
hmeMappings
hmeProtocolVersion
Hide My Email info {added=%@, removed=%@, invalid=%d, shouldSync=%d}
/System/Library/Frameworks/SafariFoundation.framework/SafariFoundation
/System/Library/PrivateFrameworks/SafariFoundation.framework/SafariFoundation
/AppleInternal/Library/Frameworks/SafariFoundation.framework/SafariFoundation
SFSafariCredentialStore
authenticatorData
clientData
signature
credentialId
userHandle
AKAuthorizationRemoteViewController
com.apple.akd.context-validator
InteractiveUsernameOnly
Interactive
SilentPreferred
%@ -> %@
v24@?0q8@"NSError"16
v24@?0@"AKDeveloperTeam"8@"NSError"16
/System/Library/Frameworks/CoreLocation.framework/CoreLocation
/System/Library/PrivateFrameworks/CoreLocation.framework/CoreLocation
/AppleInternal/Library/Frameworks/CoreLocation.framework/CoreLocation
CLGeocoder
CLLocation
AKNotificationNameTornDown
AKNotificationNamePresented
com.apple.authkit.pushPresenterQueue
v16@?0Q8
v16@?0@"NSString"8
%loc%
LOGIN_CODE_ALERT_TITLE_DEFAULT
LOGIN_CODE_ALERT_IOS_MESSAGE_DEFAULT
(internal:piggy)
APPLE_ID_SIGN_IN_HEADER
APPLE_ID_UNABLE_TO_RESOLVE_LOCATION_FOR_REASON
APPLE_ID_LOCALE_AND_ADMINISTRATIVE_AREA_FORMAT
LOGIN_CODE_ALERT_OK_BUTTON
ALERT_DEFAULT_BUTTON
CHANGE_PASSWORD_ALERT_TITLE
CHANGE_PASSWORD_ALERT_BODY
CHANGE_PASSWORD_ALERT_DEF_BTN
CHANGE_PASSWORD_ALERT_ALT_BTN
prefs:root=ACCOUNTS_AND_PASSWORDS&path=%@&aaaction=changePassword
prefs:root=APPLE_ACCOUNT&aaaction=changePassword
v32@?0@"NSDictionary"8@"NSDictionary"16@"NSError"24
v24@?0@"AKAuthorization"8@"NSError"16
AKUIWorkQueue
v32@?0@"AKClient"8@"AKAppleIDAuthenticationContext"16@"NSError"24
v32@?0@"NSHTTPURLResponse"8@"NSDictionary"16@"NSError"24
FORGOT_PASSWORD_ALERT_RESET_BUTTON
FORGOT_PASSWORD_ALERT_MESSAGE
FORGOT_PASSWORD_ALERT_CANCEL_BUTTON
FORGOT_PASSWORD_ALERT_TITLE
PASSWORD_ALERT_SETTINGS_BUTTON
PASSWORD_ALERT_CANCEL_BUTTON
PASSCODE_ALERT_TITLE_WITH_USERNAME
PASSWORD_ALERT_TITLE_WITH_USERNAME
PASSWORD_ALERT_MESSAGE_WITH_USERNAME
CONTINUE_AUTH_ALERT_TITLE
CONTINUE_AUTH_ALERT_MESSAGE
PASSWORD_ALERT_TITLE
PASSWORD_ALERT_MESSAGE
PASSCODE_ALERT_TITLE_LOCKSCREEN
PASSCODE_ALERT_MESSAGE_LOCKSCREEN
PASSWORD_ALERT_TITLE_LOCKSCREEN
PASSWORD_ALERT_MESSAGE_LOCKSCREEN
PASSWORD_ALERT_MESSAGE_PROXY_INTERNAL_BLAME
PASSWORD_ALERT_MESSAGE_INTERNAL_BLAME
com.apple.ak.checkin-allowed
v32@?0@"ACAccount"8Q16^B24
AKCheckInQueue
com.apple.authkit.heartbeat-aps-token
com.apple.authkit.ack
com.apple.authkit.heartbeat-as-needed
com.apple.authkit.heartbeat-all
B32@?0@"ACAccount"8Q16^B24
com.apple.authkit.liveness-event
com.apple.authkit.global-signout-event
com.apple.authkit.service-signout-event
com.apple.ak.hb
%02x
v32@?0@"NSNumber"8@"NSArray"16^B24
com.apple.AuthKit.TiburonSatori
wasSuccess
availableLateAfterAuthComplete
performVerificationSuccess
performVerificationDuration
verificationResults
verificationResultsDuration
com.apple.AuthKit.AuthEvent
eventType
wasSuccessful
No Auth Type
AKSQLErrorCode
com.apple.authkit.itemstorequeue
BEGIN EXCLUSIVE TRANSACTION
COMMIT TRANSACTION
ROLLBACK TRANSACTION
pragma foreign_keys=on
@"NSXPCConnection"8@?0
custodianListVersion
beneficiaryListVersion
beneficiaryADSID
beneficiaryAccountName
SELECT COUNT(*) FROM %@
PRAGMA table_info('%@')
AKSharedBag
AKBagFetchQueue
com.apple.AuthKit.Piggyback
piggybackResult
circleTimeout
acceptingDone
requestingCancelled
requestingEscapedThroughHatch
Unknown Result
Default
v24@?0@"AKAuthorizationPresentationContext"8@"NSError"16
v16@?0@"NSArray"8
originURL
icloud.com
-[AKAuthorizationDaemonService _setupLoginChoicesForPresentationContext:]
create
v24@?0@"AKAuthorizationUserResponse"8@?<v@?@"AKAuthorization"@"NSError">16
AuthorizationServices
-[AKAuthorizationDaemonService presentAuthorizationUIForContext:completion:]
v24@?0@"AKAuthorizationUserResponse"8@"NSError"16
team_id
state
nonce
silent_app_transfer
client_id
origin
claim
selectedEmail
scopes
subscriptionToken
<%@ - identifier: %@, title: %@, subTitle: %@, body: %@, action button: %@, other button: %@, apps:%@>
com.apple.authkit.IDSFetchQueue
v24@?0@"AKAppleIDServerResourceLoadDelegate"8@"NSError"16
v32@?0@"NSString"8@"NSDictionary"16@"NSError"24
-[AKClientAnisetteService fetchAnisetteDataAndProvisionIfNecessary:withCompletion:]
-[AKClientAnisetteService syncAnisetteWithSIMData:completion:]
-[AKClientAnisetteService eraseAnisetteWithCompletion:]
-[AKClientAnisetteService provisionAnisetteWithCompletion:]
-[AKClientAnisetteService legacyAnisetteDataForDSID:withCompletion:]
-[AKClientAnisetteService fetchPeerAttestationDataForRequest:completion:]
/System/Library/Frameworks/Rapport.framework/Rapport
/System/Library/PrivateFrameworks/Rapport.framework/Rapport
/AppleInternal/Library/Frameworks/Rapport.framework/Rapport
RPCompanionLinkClient
RPCompanionLinkDevice
RPDestinationIdentifierDirectPeer
RPAppSignInService
<undefined>
SELECT db_version FROM version;
com.apple.language.changed
New connection from client %@ with the AK write entitlment.
New connection from client %@ (internal).
New connection from client %@ (private).
New connection from client %@ (public).
New connection from client %@ (beleverde).
New connection from client %@ because of internal code signing.
Rejecting connection from client %@ because it is not entitled.
_State
com.apple.akd.request-dispatcher-scheduler
v16@?0@"NSDictionary"8
<%@: %p context %@, requested by %@>
AKATCClearanceQueue
AKAuthTrafficQueue
com.apple.ak.unknown
v32@?0@"NSString"8@"NSMutableArray"16^B24
com.apple.authkit.authorization-fetch-user-information
com.apple.ak.listupdate
com.apple.authkit.keychain
/System/Library/Frameworks/ApplePushService.framework/ApplePushService
/System/Library/PrivateFrameworks/ApplePushService.framework/ApplePushService
/AppleInternal/Library/Frameworks/ApplePushService.framework/ApplePushService
APSConnection
APSEnvironmentProduction
com.apple.ak.aps.sim
com.apple.idmsauth
com.apple.authkit.pushServiceQueue
LOGIN_CODE_ALERT_TITLE_FAILED
prefs:root=APPLE_ACCOUNT&aaaction=resetPassword
prefs:root=ACCOUNTS_AND_PASSWORDS&path=%@&aaaction=resetPassword
WALRUS_2FA_ARMING_NOTIFICATION_TITLE
WALRUS_2FA_ARMING_NOTIFICATION_BODY
LOGIN_CODE_ALERT_MESSAGE_FOOTER_DEFAULT
WALRUS_DIRECT_ARMING_NOTIFICATION_TITLE
WALRUS_DIRECT_ARMING_NOTIFICATION_BODY
WALRUS_DIRECT_ARMING_NOTIFICATION_LOCKSCREEN_TITLE
WALRUS_DIRECT_ARMING_NOTIFICATION_LOCKSCREEN_BODY
com.apple.akd.srp-request
com.apple.authkit.piggybacking-request
AKGlobalConfigServiceQueue
https://gsas.apple.com/grandslam/GsService2/fetchGlobalConfigs
locale
liveness
signout-all
signout-
noptkn
imei
imei2
clcg
clhs
clbg
prtn
iccid
meid
event
circleStatus
cdpStatus
otStatus
stingrayDisabledIndicator
denyICloudWebAccess
phones
isRecoveryContactAssignee
isLegacyContactAssignee
custodianAssigneeStatus
beneficiaryAssigneeStatus
icloudMailEnabled
eligibilityStatus
eligible
ineligible
ineligibilityReason
failure
error
code
text
Unknown error occurred while checking if enabling walrus is allowed.
clientInfo
refreshUrl
X-Apple-I-Client-Time
X-Mme-Device-Id
X-Apple-I-MLB
X-Apple-I-ROM
X-Apple-I-SRL-NO
X-Mme-Companion-Device-Id
X-Mme-Proxied-Device-Id
bootstrap
ckauth
mrkauth
pdec
ploc
biopet
passcodepet
icdrsDisabled
webAccessEnabled
retry
cbid
pbid
v32@?0@"NSDictionary"8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSDictionary"@"NSError">24
v24@?0@"NSDictionary"8@"NSDictionary"16
-[AKAuthorizationRapportClient performAuthorization:companionLinkClient:advertisingService:completion:]
v24@?0@"<NSSecureCoding>"8@"NSError"16
ttrinfo
IDMS has triggered TTR for a failure in %@ | %@ (%@) 
 Title: %@ 
 Message: %@
AuthKit
621449
tap-to-radar
ComponentName
ComponentVersion
ComponentID
Classification
Serious Bug
Reproducibility
I Didn't Try
AutoDiagnostics
phone
Title
Description
Keywords
HomePod Silent authentication issue detected
An issue was encountered while performing silent authentication for your HomePod. Filing this radar will help determine what went wrong.
RelayState
X-Apple-I-FA-Relay-State
v28@?0B8@"NSHTTPURLResponse"12@"NSError"20
application/x-www-form-urlencoded
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>22A380007</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleExecutable</key>
<string>akd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.akd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>akd</string>
<key>CFBundlePackageType</key>
<string>APPL</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1.0</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>14E6097d</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.4</string>
<key>DTSDKBuild</key>
<string>20E233</string>
<key>DTSDKName</key>
<string>iphonesimulator16.4.internal</string>
<key>DTXcode</key>
<string>1430</string>
<key>DTXcodeBuild</key>
<string>14E6097d</string>
<key>MinimumOSVersion</key>
<string>16.4</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>abs-client</key>
<string>143531244</string>
<key>adi-client</key>
<string>572356293</string>
<key>application-identifier</key>
<string>com.apple.akd</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
<string>identity</string>
</array>
<key>com.apple.CompanionLink</key>
<true/>
<key>com.apple.TapToRadarKit.service-access</key>
<true/>
<key>com.apple.accounts.idms.fullaccess</key>
<true/>
<key>com.apple.appletv.pbs.user-presentation-service-access</key>
<true/>
<key>com.apple.apsd.ios-device-push-token</key>
<true/>
<key>com.apple.authentication-services-core.allow-authentication-request-proxying</key>
<true/>
<key>com.apple.authkit.client.internal</key>
<true/>
<key>com.apple.bluetooth.internal</key>
<true/>
<key>com.apple.bluetooth.system</key>
<true/>
<key>com.apple.cdp.statemachine</key>
<true/>
<key>com.apple.cdp.walrus</key>
<true/>
<key>com.apple.coreidvd.spi</key>
<true/>
<key>com.apple.developer.associated-domains</key>
<array/>
<key>com.apple.developer.device-information.user-assigned-device-name</key>
<true/>
<key>com.apple.devicecheckd</key>
<true/>
<key>com.apple.frontboard.debugapplications</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.keystore.lockassertion</key>
<true/>
<key>com.apple.keystore.sik.access</key>
<true/>
<key>com.apple.mobileactivationd.device-identifiers</key>
<true/>
<key>com.apple.mobileactivationd.spi</key>
<true/>
<key>com.apple.nano.nanoregistry</key>
<true/>
<key>com.apple.private.MobileActivation</key>
<array>
<string>RequestActivationState</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.adid</key>
<true/>
<key>com.apple.private.applemediaservices</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.associated-domains</key>
<true/>
<key>com.apple.private.followup</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.anisette</string>
</array>
<key>com.apple.private.ids.messaging.urgent-priority</key>
<array>
<string>com.apple.private.alloy.anisette</string>
</array>
<key>com.apple.private.ids.phone-number-authentication</key>
<true/>
<key>com.apple.private.ids.remotecredentials</key>
<true/>
<key>com.apple.private.imcore.imremoteurlconnection</key>
<true/>
<key>com.apple.private.keychain.circle.join</key>
<true/>
<key>com.apple.private.managed-settings.effective-read</key>
<true/>
<key>com.apple.private.notificationcenter-system</key>
<array>
<dict>
<key>identifier</key>
<string>com.apple.AuthKit</string>
</dict>
</array>
<key>com.apple.private.octagon</key>
<true/>
<key>com.apple.private.security.storage.Safari</key>
<true/>
<key>com.apple.private.storagekitd.info</key>
<true/>
<key>com.apple.private.swc.system-app</key>
<true/>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.Preferences</string>
</array>
<key>com.apple.security.attestation.access</key>
<true/>
<key>com.apple.security.exception.files.home-relative-path.read-only</key>
<array>
<string>/Library/com.apple.ManagedSettings/EffectiveSettings.plist</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.SharedWebCredentials</string>
<string>com.apple.fairplayd.versioned</string>
<string>com.apple.mobile.keybagd.xpc</string>
<string>com.apple.mobileactivationd</string>
<string>com.apple.devicecheckd</string>
<string>com.apple.AuthenticationServicesCore.AuthenticationServicesAgent</string>
<string>com.apple.server.bluetooth.le.att.xpc</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.nanobuddy</string>
<string>com.apple.pairedsync</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.system-container</key>
<true/>
<key>com.apple.sharing.Services</key>
<true/>
<key>com.apple.springboard.CFUserNotification</key>
<true/>
<key>com.apple.springboard.activateRemoteAlert</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.symptom_diagnostics.report</key>
<true/>
<key>com.apple.usermanagerd.persona.background</key>
<true/>
<key>com.apple.usermanagerd.persona.fetch</key>
<true/>
<key>fairplay-client</key>
<string>508119322</string>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.akd</string>
<string>com.apple.cfnetwork</string>
<string>com.apple.akd.pcsauth</string>
</array>
<key>keychain-cloud-circle</key>
<true/>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>akd</string>
</array>
</dict>
</plist>
abs-client
1435312440
adi-client
5723562930'
application-identifier
com.apple.akd0
aps-connection-initiate
04!com.apple.CommCenter.fine-grained0
spi
identity0
com.apple.CompanionLink
0+&com.apple.TapToRadarKit.service-access
0'"com.apple.accounts.idms.fullaccess
0;6com.apple.appletv.pbs.user-presentation-service-access
0)$com.apple.apsd.ios-device-push-token
0QLcom.apple.authentication-services-core.allow-authentication-request-proxying
0&!com.apple.authkit.client.internal
com.apple.bluetooth.internal
com.apple.bluetooth.system
com.apple.cdp.statemachine
com.apple.cdp.walrus
com.apple.coreidvd.spi
0*&com.apple.developer.associated-domains0
0E@com.apple.developer.device-information.user-assigned-device-name
com.apple.devicecheckd
0+&com.apple.frontboard.debugapplications
0,'com.apple.frontboard.launchapplications
0% com.apple.keystore.lockassertion
com.apple.keystore.sik.access
03.com.apple.mobileactivationd.device-identifiers
com.apple.mobileactivationd.spi
com.apple.nano.nanoregistry
0>"com.apple.private.MobileActivation0
RequestActivationState0+&com.apple.private.accounts.allaccounts
com.apple.private.adid
0)$com.apple.private.applemediaservices
0.)com.apple.private.aps-connection-initiate
0)$com.apple.private.associated-domains
com.apple.private.followup
com.apple.private.ids.messaging0" com.apple.private.alloy.anisette0U/com.apple.private.ids.messaging.urgent-priority0" com.apple.private.alloy.anisette061com.apple.private.ids.phone-number-authentication
0,'com.apple.private.ids.remotecredentials
03.com.apple.private.imcore.imremoteurlconnection
0+&com.apple.private.keychain.circle.join
061com.apple.private.managed-settings.effective-read
0R+com.apple.private.notificationcenter-system0#
identifier
com.apple.AuthKit0
com.apple.private.octagon
0.)com.apple.private.security.storage.Safari
0'"com.apple.private.storagekitd.info
0% com.apple.private.swc.system-app
0Q6com.apple.private.usernotifications.bundle-identifiers0
com.apple.Preferences0*%com.apple.security.attestation.access
?com.apple.security.exception.files.home-relative-path.read-only0<:/Library/com.apple.ManagedSettings/EffectiveSettings.plist0
44com.apple.security.exception.mach-lookup.global-name0
com.apple.SharedWebCredentials
com.apple.fairplayd.versioned
com.apple.mobile.keybagd.xpc
com.apple.mobileactivationd
com.apple.devicecheckd@com.apple.AuthenticationServicesCore.AuthenticationServicesAgent%com.apple.server.bluetooth.le.att.xpc0g8com.apple.security.exception.shared-preference.read-only0+
com.apple.nanobuddy
com.apple.pairedsync0&!com.apple.security.network.client
0(#com.apple.security.system-container
com.apple.sharing.Services
0-(com.apple.springboard.CFUserNotification
0.)com.apple.springboard.activateRemoteAlert
0+&com.apple.springboard.opensensitiveurl
0)$com.apple.symptom_diagnostics.report
0.)com.apple.usermanagerd.persona.background
0)$com.apple.usermanagerd.persona.fetch
fairplay-client
5081193220\
keychain-access-groups0B
apple
com.apple.akd
com.apple.cfnetwork
com.apple.akd.pcsauth0
keychain-cloud-circle
platform-application
seatbelt-profiles0
