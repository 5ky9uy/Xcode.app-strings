@(#)PROGRAM:akd  PROJECT:AuthKit-1
AKFidoInterface
NSObject
AKFidoDaemonService
AKAuthorizationIconManager
AKFollowUpManager
AKAppleIDPushHelperServiceDelegate
AKPrivateEmailStoreManager
AKAppleIDUserInformationResponse
AKDeviceListResponse
AKOwnerProxyClient
AKClient
AKAppleIDCodeGenerator
AKGrandSlamResponseHandler
AKPiggybackingRequestProvider
NSSecureCoding
NSCoding
AKAuthenticationServerResponse
AKPiggybackAcceptingController
KCJoiningAcceptSecretDelegate
AKDServerUIContext
AKAuthorizationStoreManager
AKURLRequestProviderImpl
AKURLRequestProvider
AKAuthModeRequestProvider
AKADIProxy
AKAccountRecoveryController
AKSurrogateAuthenticationIDGenerator
AKSatoriController
AKExponentialDispatchingAlgorithm
AKDispatchingAlgorithm
AKConstantDispatchingAlgorithm
AKFollowUpRequestProvider
AKSecurityUpgradeEligibilityRequestProvider
AKKeychainItem
AKSRPAuthenticationContextHelper
AKCAAuthPromptReporter
AKDispatchingCalculation
AKAuthenticationSurrogateModel
AKAuthenticationSurrogateManager
AKInheritanceRequestProvider
AKAuthorizationStoreMigrator
AKSQLiteMigration
AKCATiburonRequestAttemptReporter
_AKExpiringCacheValue
AKExpiringCache
AKNativeAnisetteService
AKAnisetteServiceProtocol
AKCustodianRequestProvider
AKURLBagRequestProvider
AKCATiburonInputUIReporter
AKKeychainItemDescriptor
AKCATiburonRequestReporter
AKPostInstallService
AKCAReporter
AKDeviceListRequestProvider
AKProximityController
AKProximityEngineController
AKAuthorizationSession
AKAuthorizationSessionManager
_AKMessage
AKCommandMessage
AKReplyMessage
AKPeerIDSAnisetteService
IDSServiceDelegate
AKPrivateEmailStoreMigrator
AKLoginPresenter
NSXPCListenerDelegate
AKLoginPresenterHostInterfaceProtocol
AKPushMessage
AKPrivateEmailRequestProvider
AKFollowUpManagerFactory
AKUserNotificationManager
AKSRPContext
AKCarrierBundlePhoneCertificate
AKCarrierBundleUtilities
AKDispatchableURLRequest
AKDispatchableRequest
AKAppleIDAuthenticationService
AKPiggybackRequestingControllerDelegate
AKDServerUIDelegate
AKAppleIDAuthenticationDaemonProtocol
AKAuthorizationEndorserRapportDiscovery
AKAuthorizationEndorserRapportClientDelegate
AKPiggybackRequestingController
KCJoiningRequestSecretDelegate
AKPrivateEmailPresenter
SBSRemoteAlertHandleObserver
AKPrivateEmailPresenterHostProtocol
AKFollowUpControllerServiceProviderImpl
AKFollowUpControllerServiceProvider
AKAuthenticationSettingsLauncher
AKPrivateEmailDaemonService
AKPrivateEmailDaemonProtocol
AKFuture
AKAnisetteProvisioningService
AKAnisetteProvisioningDaemonProtocol
AppleIDSigning
AKAppleIDSigningDaemonProtocol
AKUserInfoController
AKBundleInformation
NSCopying
AKDeviceListController
AKProximityPiggybackEngine
AKProximityEngine
AKProximityPiggybackRequestingEngine
CBPeripheralManagerDelegate
AKProximityPiggybackAcceptingEngine
CBCentralManagerDelegate
CBPeripheralDelegate
AKPrivateEmailInformation
AKPrivateEmailServiceController
AKFidoDaemonServerHandler
AKAuthorizationPresenter
AKAuthorizationPresenterHostProtocol
AKServiceControllerImpl
AKServiceController
AKAuthenticationContextSanitizer
AKSRPService
AKAuthorizationCredentialStateController
AKPushMessageNotificationPresenter
AKGrandSlamRequestProvider
AKAuthorizationEndorserRapportClient
AKAuthorizationDaemonServiceDelegate
AKAuthenticationUILiaison
AKAuthenticationSurrogateManagerDelegate
AKAppleIDCheckInHelperService
AKStoreUtils
AKAuthorizationNotificationHandler
AKAdaptiveServiceInterface
AKAuthorizationStateBroadcastHandler
AKApplicationAuthorizationController
AKCASatoriReporter
AKCAAuthEventReporter
AKSQLiteExecutor
AKAuthorizationConnectionManager
AKCustodianDaemonService
AKCustodianDaemonProtocol
AKInheritanceInterface
AKInheritanceDaemonService
AKSQLiteHelper
AKURLBagService
NSURLSessionDelegate
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
AKURLBagDictionaryProvider
AKCAPiggybackReporter
AKAuthorizationDaemonService
AKAuthorizationDaemonProtocol
AKSRPAuthorizationContextHelper
AKUserNotification
AKDServerUIController
AKClientAnisetteService
AKStoreMigrator
AKDaemonConnectionManager
AKRequestDispatcher
_AKScheduledRequest
AKAuthorizationRevokeUpgradeController
AKTrafficClearenceRequest
AKAuthenticationTrafficController
AKAuthorizationListUpdateService
AKAppleIDAuthSupportProxyImpl
AKAppleIDAuthSupportProxy
AKKeychainManager
AKAppleIDPushHelperService
APSConnectionDelegate
AKMasterKeyVerifierRequestProvider
AKSQLiteQuery
AKFidoRequestProvider
AKSRPRequest
AKPiggybackReplyWaiter
AKPiggybackController
AKLivenessRequestProvider
AKCATiburonAuthorizationUIReporter
AKApplicationInformationController
AKSRPContextHelper
AKAuthorizationRapportClient
AKTTRController
AKTokenUpgradeRequestProvider
AKEducationEnterpriseController
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
registerFidoKeyWithContext:completion:
verifyFidoKeyWithFidoContext:completion:
verifyFidoKeyWithContext:completion:
verifyFidoRecoveryWithContext:recoveryToken:completion:
arrayWithObjects:count:
setWithArray:
setClasses:forSelector:argumentIndex:ofReply:
authorizationController
performRegistrationRequestWithContext:completion:
performAuthenticationRequestWithContext:completion:
_handleGrandSlamFidoAuthorizationResponse:context:recoveryToken:error:completion:
serverHandler
startFidoAuthWithContext:recoveryToken:client:completion:
serverProvidedData
finishFidoAuthWithResponse:client:context:recoveryToken:completion:
serviceName
exportedObject
exportedProtocol
configureExportedInterface:
.cxx_destruct
_authorizationController
_serverHandler
init
_serviceIDForRequestContext:
_proxiedClientBundleID
_iconScale
_iconSize
_clientShouldAuthenticateExternally
_iconData
_isWebLogin
_startFetchingIconForBundleID:size:scale:
_setDataBlock:forKey:
credentialRequestContext
_isFetchingIconWithRequestContext:
_dataBlockForKey:
_removeDataBlockForKey:
setCompletion:
ak_errorWithCode:
setFetchIconBlock:
setScale:
archivedDataWithRootObject:requiringSecureCoding:error:
appIconForBundleID:size:completion:
startCoordinatingBlock:
authorizationRequest
clientID
objectForKey:
dictionary
setObject:forKey:
removeObjectForKey:
sharedManager
startFetchingIconWithRequestContext:
setFetchIconBlockForPresenter:withContext:
continueFetchingIconWithRequestContext:completion:
_dataBlocksLock
_dataBlocks
command
altDSID
sharedInstance
iCloudAccountForAltDSID:
isPrimaryiCloudAccount:
setAltDSID:
userInfo
objectForKeyedSubscript:
_refreshFollowUpsWithIdmsInfo:context:completion:
_refreshFollowUpsWithIdmsInfo:context:authHandler:completion:
_processFetchCompletionForAltDSID:items:fetchError:completion:
serviceControllerForContext:
setAuthenticationDelegate:
ak_arrayWithJSONResponseData:
executeRequestWithCompletion:
_synchronizeLocalFollowUpsWithServerPayload:altDSID:error:
numberWithUnsignedInteger:
setObject:forKeyedSubscript:
messageId
pendingFollowUpItems:
itemsForAltDSID:pushMessageInfo:fromIDMSPayload:
pendingFollowUpWithCommand:
_alignedInsertionCandidates:withExistingItems:
ak_mapNullable:
uniqueIdentifier
containsObject:
ak_filter:
count
removeFollowUpItems:error:
itemIdentifiersRequiringNotificationClearFromPayload:
countByEnumeratingWithState:objects:count:
clearNotificationsForItem:error:
addFollowUpItems:error:
actions
informativeText
enumerateObjectsUsingBlock:
notification
setInformativeText:
title
setTitle:
frequency
setFrequency:
options
setOptions:
setNotification:
IsFollowUpItemNotificationForced:
allValues
arrayByAddingObjectsFromArray:
itemIdentifier
akAction
isEqualToString:
isContinuityPush
removeFollowUpItemsWithIdentifiers:error:
_notifyServerOfTeardownWithContext:completion:
dictionaryWithObjects:forKeys:count:
mutableCopy
txnid
idmsData
sharedService
authKitAccountWithAltDSID:
ackWithPayload:account:completion:
array
addObject:
unsignedIntValue
processPushMessage:
shouldSuppressPushMessage:
didRespondToMessage:withResult:
didRespondToMessage:result:payload:
didReceiveNewPublicToken:
initWithFollowUpFactory:provider:
synchronizeFollowUpItemsForContext:authHandler:completion:
teardownFollowUpWithContext:completion:
pendingFollowUpWithMessageId:
tearDownFollowUpsWithItems:
serviceProvider
setServiceProvider:
_factory
_provider
_latestPushMessage
_serviceProvider
T@"<AKFollowUpControllerServiceProvider>",&,N,V_serviceProvider
initWithPath:
stringByAppendingString:
initWithDatabasePath:migrationController:
wipeDatabase:
privateEmailAddress
errorWithDomain:code:userInfo:
_hashKeyIfNecessary:
queryWithString:
bindParameters:error:
executor
performQuery:error:
performBlockAndWait:
keyAndBundleIdAreHashed
bindParameter:error:
copy
stringFromColumn:inStatement:
setRowHandler:
initWithAddress:forKey:
currentProtocolVersion
hash:
privateEmailListVersion
protocolVersion
addedPrivateEmails
setPrivateEmail:keyAlreadyHashed:error:
removedPrivateEmails
clientAppBundleId
initWithKey:altDSID:clientAppBundleId:
setKeyAndBundleIdAreHashed:
removePrivateEmailForContext:error:
setCurrentEmailListVersion:error:
setProtocolVersion:error:
intValue
numberWithInteger:
initWithDatabasePath:
initWithExecutor:
clearDatabase:
emailForContext:error:
currentEmailListVersion
commitChangesToCacheWithInformation:error:
fetchAllPrivateEmailsWithError:
setExecutor:
_executor
T@"AKSQLiteExecutor",&,N,V_executor
initWithResponseBody:
primaryEmailAddress
vettedPrimaryEmail
boolValue
phoneAsAppleID
accountAliases
addObjectsFromArray:
appleIDSecurityLevel
authMode
isUnderage
isLegacyStudent
masterKeyID
repairState
forwardingEmail
reachableEmails
familyName
givenName
previouslySelectedEmail
previouslyWantedPrivateEmail
additionalInfo
allAccountNames
dictionaryRepresentation
userInformationRepresentation
setUserInformationRepresentation:
_allAccountNames
_userInformationRepresentation
T@"AKUserInformation",C,N,V_userInformationRepresentation
T@"NSArray",R,C,N,V_allAccountNames
T@"NSDictionary",R,C,N
_parseDevicesFromResponseBody:
initWithInfo:
ak_map:
deviceMap
_deviceMap
T@"NSDictionary",R,C,N,V_deviceMap
initWithConnection:
name
stringWithFormat:
_shouldUseProxiedClientBundleIDForSRP
localizedAppName
_proxiedClientAppName
_proxiedClientAppID
_proxiedClientTeamID
initWithCredentialRequest:
initWithCredentialRequest:connection:
hasInternalAccess
hasPrivateAccess
hasPrivateSignedAccess
hasPublicAccess
hasWriteAccess
hasOwnerAccess
bundleID
appID
teamID
_credentialRequest
applicationStateForApplication:
invalidate
tokenFromAuditToken:
hasInternalPrivateEntitlementAccess
_boolValueForEntitlement:
_isAppleBinary
_hasApprovedSigningIdentifier
_codeSigningIdentifier
_approvedCodeSigningIdentifiers
auditToken
setWithObjects:
_permitedProcessNamesToProxyWhiteList
_permitedProcessNamesToProxyInitialAuthWhiteList
_permittedProcessNamesForInteractiveAuthOnLimitedContext
_exemptedBundleIDsFromMandatoryUISecurityUpgrade
processIdentifier
stringWithUTF8String:
_bundle
objectForInfoDictionaryKey:
applicationProxyForIdentifier:
localizedNameForContext:
localizedName
initWithBytes:length:encoding:
fileURLWithPath:
bundleWithURL:
defaultManager
containingAppForPlugInWithPid:
bundleURL
_bundleNonPluginKit
numberWithInt:
remoteObjectProxyWithErrorHandler:
bundleIdentifier
_appIDForIOS
length
_appIDForMacOS
_stringValueForEntitlement:
initWithBundleIdentifier:allowPlaceholder:error:
teamIdentifier
_arrayValueForEntitlement:
firstObject
valueForEntitlement:
isAppWithBundleIDForeground:
initWithAuditToken:
xpcConnection
hasInternalPrivateAccess
hasInternalEntitledAccess
_isOnInternalBuild
isPermittedToProxy
isPermittedToProxyInitialAuth
isPermittedForInteractiveAuthOnLimitedContext
isExemptedFromMandatoryUISecurityUpgrade
isPermittedToProxyAuthorizationBundleIdentifier
fullName
proxyWithErrorHandler:
authorizationAccessLevel
authorizationRequiresRapport
authorizationClientProvidesUI
_connection
_name
_fullName
_description
_bundleID
_auditToken
T@"NSXPCConnection",R,N
TB,R,N
T@"NSString",R,N
generateLoginCode:
domain
integerValue
_handleInvalidMasterTokenWithSubErrorCode:
_revokeDeviceTrust
context
setDeviceTrustRevoked:forAccount:
saveAccount:error:
initWithContext:
handleResponseError:
setContext:
_context
T@"AKAppleIDAuthenticationContext",&,N,V_context
payload
bagForAltDSID:
circleURL
clientInfo
base64EncodedStringWithOptions:
presenceSID
UUIDString
lowercaseString
presenceCheckPassed
ak_booleanAsInteger
localPresenceFound
pushToken
serverInfo
transactionId
clientErrorCode
circleStep
identityTokenValue
initWithAltDSID:identityToken:
setBagUrlKey:
heartbeatTokenValue
setHeartbeatToken:
currentConnection
setClientAppName:
signRequestWithCommonHeaders:
initWithCircleContext:
requestURL
authKitBody
signRequest:error:
_circleContext
initWithBase64EncodedString:options:
propertyListWithData:options:format:error:
encodeWithCoder:
initWithCoder:
supportsSecureCoding
TB,R
ak_mapObjectsNullable:
status
ak_redactedCopy
_updateAccountInformationWithResultsDictionary:
masterToken
tokenWithDictionary:
_federatedPayloadFromInfo:
tokenWithValue:lifetime:
stringValue
ak_urlQueryString
dataUsingEncoding:
updateWithSecondaryAuthenticationResponse:
allHeaderFields
_updateDSIDWithRawValue:
initWithAppleID:altDSID:
ak_acceptedTermsInfo
unsignedIntegerValue
_harvestManagedAppleIDInfoFromDictionary:
sharedConfiguration
shouldEnableSigninWithMAID
_harvestCommonFieldsFromBody:
decodedConfigurationInfo:
initWithUUIDString:
updateWithSecondaryAuthenticationResponse:shouldUpdateDSID:
_harvestCommonFieldsFromResponse:
updateWithHTTPURLResponse:
tokenWithBase64String:
_setPasswordEquivalentToken:
_setHeartbeatToken:
componentsSeparatedByString:
_decodeBase64String:
statusCode
_numberFormatter
numberFromString:
initWithData:encoding:
initWithSRPContext:
initWithServerResponse:forAppleID:
initWithServerResponse:responseBody:
passwordEquivalentToken
heartbeatToken
inheritanceBeneficiarySetupToken
isUpdateable
updateWithSecondaryAuthenticationBody:
appleID
dsid
aliases
continuationToken
passwordResetToken
shortLivedToken
custodianSetupToken
serviceTokens
isRetryRequired
isSecondaryActionRequired
secondaryActionURLKey
isSecondaryActionURLGSEndpoint
isFidoAuthRequired
secondaryActionMessage
isURLSwitchingRequired
urlSwitchingData
isAnisetteResyncRequired
anisetteResyncData
isAnisetteReprovisioningRequired
shouldProxyAnisetteAction
errorCode
errorMessageTitle
errorMessage
acceptedTermsInfo
isManagedAppleID
isAuditLogin
isServerUIRequired
isPasscodeResetRequired
requireSigningHeaders
configurationInfo
acceptedDeviceTermsVersion
allowPiggybacking
allowPiggybackingPresence
isUnderAgeOfMajority
isSenior
ageOfMajority
isFirstPartyApp
privateEmail
primaryEmail
primaryEmailVetted
nativeActionURLKey
canHaveCustodian
canBeCustodian
custodianEnabled
custodianSessionID
custodianLastModified
canHaveBeneficiary
canBeBeneficiary
beneficiaryIdentifier
beneficiaryWrappedKey
appleIDCountryCode
hasMDM
managedOrganizationType
managedOrganizationName
isNotificationEmailAvailable
notificationEmail
privateAttestationEnabled
firstName
lastName
imageURLString
isDemoAccount
federatedAuthURL
federatedAuthRequestPayload
federatedAuthSamlRequest
federatedAuthURLWhiteList
authorizationUsed
_serviceTokens
_isRetryRequired
_isSecondaryActionRequired
_secondaryActionURLGSEndpoint
_fidoAuthRequired
_isURLSwitchingRequired
_isAnisetteResyncRequired
_isAnisetteReprovisioningRequired
_shouldProxyAnisetteAction
_isManagedAppleID
_isAuditLogin
_isServerUIRequired
_isPasscodeResetRequired
_requireSigningHeaders
_allowPiggybacking
_allowPiggybackingPresence
_isUnderAgeOfMajority
_isSenior
_isFirstPartyApp
_primaryEmailVetted
_isDemoAccount
_authorizationUsed
_phoneAsAppleID
_serverProvidedData
_appleID
_dsid
_altDSID
_aliases
_appleIDSecurityLevel
_authMode
_masterToken
_continuationToken
_passwordResetToken
_shortLivedToken
_custodianSetupToken
_secondaryActionURLKey
_secondaryActionMessage
_urlSwitchingData
_anisetteResyncData
_errorCode
_errorMessageTitle
_errorMessage
_acceptedTermsInfo
_configurationInfo
_acceptedDeviceTermsVersion
_transactionId
_serverInfo
_ageOfMajority
_privateEmail
_primaryEmail
_additionalInfo
_nativeActionURLKey
_canHaveCustodian
_canBeCustodian
_custodianEnabled
_custodianSessionID
_custodianLastModified
_canHaveBeneficiary
_canBeBeneficiary
_beneficiaryIdentifier
_beneficiaryWrappedKey
_appleIDCountryCode
_hasMDM
_managedOrganizationType
_managedOrganizationName
_isNotificationEmailAvailable
_notificationEmail
_privateAttestationEnabled
_firstName
_lastName
_imageURLString
_federatedAuthURL
_federatedAuthRequestPayload
_federatedAuthSamlRequest
_federatedAuthURLWhiteList
T@"NSDictionary",R,N,V_serverProvidedData
T@"NSString",R,N,V_appleID
T@"NSNumber",R,N,V_dsid
T@"NSString",R,N,V_altDSID
T@"NSArray",R,N,V_aliases
TQ,R,N,V_appleIDSecurityLevel
TQ,R,N,V_authMode
T@"AKMasterToken",R,N,V_masterToken
T@"AKToken",R,N
T@"AKToken",R,N,V_continuationToken
T@"AKToken",R,N,V_passwordResetToken
T@"AKToken",R,N,V_shortLivedToken
T@"AKToken",R,N,V_custodianSetupToken
T@"NSDictionary",R,N,V_serviceTokens
TB,R,N,V_isRetryRequired
TB,R,N,V_isSecondaryActionRequired
T@"NSString",R,N,V_secondaryActionURLKey
secondaryActionURLGSEndpoint
TB,R,N,GisSecondaryActionURLGSEndpoint,V_secondaryActionURLGSEndpoint
fidoAuthRequired
TB,R,N,GisFidoAuthRequired,V_fidoAuthRequired
T@"NSString",R,N,V_secondaryActionMessage
TB,R,N,V_isURLSwitchingRequired
T@"NSString",R,N,V_urlSwitchingData
TB,R,N,V_isAnisetteResyncRequired
T@"NSData",R,N,V_anisetteResyncData
TB,R,N,V_isAnisetteReprovisioningRequired
TB,R,N,V_shouldProxyAnisetteAction
Tq,R,N,V_errorCode
T@"NSString",R,N,V_errorMessageTitle
T@"NSString",R,N,V_errorMessage
T@"NSDictionary",R,N,V_acceptedTermsInfo
TB,R,N,V_isManagedAppleID
TB,R,N,V_isAuditLogin
TB,R,N,V_isServerUIRequired
TB,R,N,V_isPasscodeResetRequired
TB,R,N,V_requireSigningHeaders
T@"NSDictionary",R,N,V_configurationInfo
T@"NSNumber",R,N,V_acceptedDeviceTermsVersion
T@"NSString",R,N,V_transactionId
T@"NSString",R,N,V_serverInfo
TB,R,N,V_allowPiggybacking
TB,R,N,V_allowPiggybackingPresence
TB,R,N,V_isUnderAgeOfMajority
TB,R,N,V_isSenior
T@"NSNumber",R,N,V_ageOfMajority
TB,R,N,V_isFirstPartyApp
T@"NSString",R,N,V_privateEmail
T@"NSString",R,N,V_primaryEmail
TB,R,N,V_primaryEmailVetted
T@"NSDictionary",R,N,V_additionalInfo
T@"NSString",R,N,V_nativeActionURLKey
T@"NSNumber",R,N,V_canHaveCustodian
T@"NSNumber",R,N,V_canBeCustodian
T@"NSNumber",R,N,V_custodianEnabled
T@"NSString",R,N,V_custodianSessionID
T@"NSNumber",R,N,V_custodianLastModified
T@"NSNumber",R,N,V_canHaveBeneficiary
T@"NSNumber",R,N,V_canBeBeneficiary
T@"NSString",R,N,V_beneficiaryIdentifier
T@"NSString",R,N,V_beneficiaryWrappedKey
T@"NSString",R,N,V_appleIDCountryCode
T@"NSNumber",R,N,V_hasMDM
TQ,R,N,V_managedOrganizationType
T@"NSString",R,N,V_managedOrganizationName
T@"NSNumber",R,N,V_isNotificationEmailAvailable
T@"NSString",R,N,V_notificationEmail
T@"NSNumber",R,N,V_privateAttestationEnabled
T@"NSString",R,N,V_firstName
T@"NSString",R,N,V_lastName
T@"NSString",R,N,V_imageURLString
TB,R,N,V_isDemoAccount
T@"NSString",R,N,V_federatedAuthURL
T@"NSData",R,N,V_federatedAuthRequestPayload
T@"NSDictionary",R,N,V_federatedAuthSamlRequest
T@"NSArray",R,N,V_federatedAuthURLWhiteList
TB,R,N,V_authorizationUsed
TB,R,N,V_phoneAsAppleID
_acceptSessionForPayload:error:
code
_startProximityControllerIfNeededWithPushPayload:
replyContextWithPayload:
_processProximityDetection:withReplyContext:forPushPayload:
_finishProcessingPushPayload:withReplyContext:completion:
_checkForProximityIfNeededWithCircleStep:completion:
presenceFallbackApproved
piggybackingIDMSPresenceOverride
piggybackingLocalPresenceOverride
presenceMode
numberWithBool:
setPresenceCheckPassed:
setLocalPresenceFound:
processMessage:error:
setClientInfo:
setClientErrorCode:
setWaitForReply:
_releaseAssertion
isDone
didFinishAccepting
sharedController
processPushPayload:completion:
performCircleRequestWithContext:completion:
_authKitAccountForPayload:
accountPropertyForKey:
unsignedLongLongValue
sessionWithInitialMessage:secretDelegate:circleDelegate:dsid:error:
replyPayload
setPayload:
setWaitForReplyTimeout:
publicAPSTokenString
setPushToken:
hearbeatTokenForAccount:
setHeartbeatTokenValue:
currentDevice
isInCircle
_grabLockAssertion
_generateSecret
longLongValue
numberWithLongLong:
responseMessage
showPigCode:withIncomingMessage:
supportsPresence
_startProximityControllerWithPresenceSID:
initWithPresenceSID:
setValue:
setMatchHandler:
initWithMaxWait:description:
initWithEngine:
resolved
setInvalidationHandler:
activate
_checkForProximityWithCompletion:
value
_stopProximityController
secret
accountCode
verificationFailed:
initWithPiggybackReporter:
acceptSession
setAcceptSession:
configuration
setConfiguration:
_lastPayload
_initiatingPayload
_verificationAttempts
_circleDelegate
_verificationFailed
_proximityFailed
_piggybackReporter
_proximityController
_proximityDetected
_acceptSession
_configuration
T@"AKConfiguration",&,N,V_configuration
T@"KCJoiningAcceptSession",&,N,V_acceptSession
setInitiatingServerResponse:
setAuthContext:
initWithRequest:requestType:
setRequestConfiguration:
serverUIContextFromResponse:authContext:urlRequest:
shouldPreventDismissAfterUserSkip
setShouldPreventDismissAfterUserSkip:
authContext
initiatingServerResponse
requestConfiguration
_shouldPreventDismissAfterUserSkip
_authContext
_initiatingServerResponse
_requestConfiguration
TB,N,V_shouldPreventDismissAfterUserSkip
T@"AKAppleIDAuthenticationContext",&,N,V_authContext
T@"AKAuthenticationServerResponse",&,N,V_initiatingServerResponse
T@"AKServerRequestConfiguration",&,N,V_requestConfiguration
authorizedAppListVersion
_shouldUpdateDatabaseToListVersion:
_fetchAllAuthorizedClientIDs
teams
apps
allKeys
removeObject:
_storeDeveloperTeam:listVersion:
_handleRevokedApplicationsForVersion:
setListVersionToVersion:
allObjects
authorizedRequest
credential
setTeamID:
userIdentifier
setUserIdentifier:
setClientID:
requestedScopes
setScopes:
setApps:
_addTemporaryDeveloperTeam:
_fetchApplicationsForTeamID:
fetchDeveloperTeamWithTeamID:completion:
arrayWithObjects:
performInsertQuery:error:
fetchAuthorizationListVersion
_storeConsentedApplication:teamID:listVersion:
enumerateKeysAndObjectsUsingBlock:
scopes
componentsJoinedByString:
_optionalValueWithString:
transferState
primaryClientID
origin
setState:
setTransferState:
setPrimaryClientID:
setOrigin:
performQuery:rowHandler:
setBindHandler:
updateAuthorizationListWithMetadataInfo:completion:
storeAuthorization:forClient:
fetchDeveloperTeamWithClientID:completion:
performUnsafeVerificationWithUserID:completion:
revokeAuthorizationForApplicationWithClientID:completion:
removeApplicationWithClientID:completion:
revokeAuthorizationForAllApplicationsWithCompletion:
_setDatabaseVersionToVersion:
initWithContext:urlBagKey:shouldCacheResource:
_setRequestURL
urlAtKey:
initWithURL:
authKitBodyData
setHTTPMethod:
requestBodyType
ak_addJSONRequestHeader
ak_setJSONBodyWithParameters:
serverCompatibleRequestBodyWithPayload:
ak_setBodyWithParameters:
setHTTPBody:
allHTTPHeaderFields
_validateDataExists:
expectedResponseType
ak_dictionaryWithResponseData:
ak_jsonDictionaryWithResponseData:
_errorFromResponseDictionary:
initWithCapacity:
ak_errorWithCode:userInfo:
_validateResponseBodyFormat
_validateErrorCode:withKey:
initWithDictionary:
_validateJSONResponseData:error:
addEntriesFromDictionary:
absoluteString
initWithString:
queryItems
queryItemWithName:value:
setQueryItems:
buildRequest:
validateResponseData:error:
responseDictionaryWithData:error:
client
setClient:
shouldCacheResource
T@"AKAppleIDAuthenticationContext",R,N
T@"AKClient",&,N
initWithContext:urlBagKey:
serverCompatibleRequestBody
appendRequestUrlQueryParameterNamed:value:
setAuthKitBody:
urlBagKey
setRequestURL:
setShouldCacheResource:
setAuthKitBodyData:
dataCenterIdentifier
setDataCenterIdentifier:
_shouldCacheResource
_client
_urlBagKey
_requestURL
_authKitBodyData
_dataCenterIdentifier
T@"NSString",R,C,N,V_urlBagKey
T@"NSURL",C,N,V_requestURL
TB,N,V_shouldCacheResource
T@"NSDictionary",C,N,VauthKitBody
T@"NSData",C,N,V_authKitBodyData
T@"NSString",C,N,V_dataCenterIdentifier
T@"AKClient",&,N,V_client
username
ak_addAppleIDHeaderWithValue:
isMultiUserMode
ak_addAppleIDUserModeHeaderWithValue:
appProvidedContext
ak_addAppProvidedContext:
isContextRequestingReauthForExistingService
ak_addReAuthenticationHeader
getIDMSRoutingInfo:forDSID:
setIDMSRoutingInfo:forDSID:
requestOTPForDSID:outMID:outMIDSize:outOTP:outOTPSize:
dispose:
isMachineProvisioned:
startProvisioningWithDSID:SPIM:SPIMLength:outCPIM:outCPIMLength:outSession:
endProvisioningWithSession:PTM:PTMLength:TK:TKLength:
destroyProvisioningSession:
synchronizeWithDSID:SIM:SIMLength:outMID:outMIDLength:outSRM:outSRMLength:
eraseProvisioningForDSID:
sharedDispatcher
initWithUILiaison:client:requestDispatcher:
_recoveryContextFromServerInfo:error:
shouldSendServerResponseForRecoveredInfo:withRecoveryError:
requestForRecoveryCompletionWithContext:recoveredInfo:recoveryError:
resourceLoadDelegate
setResourceLoadDelegate:
initWithLiaison:client:delegate:
showServerUIWithContext:completion:
ac_secureCodingError
ak_errorWithCode:underlyingError:
dismissServerProvidedUIForContext:client:completion:
dismissNativeRecoveryUIForContext:client:completion:
presentNativeRecoveryUIForContext:recoveryContext:client:completion:
decodedRecoveryIdentityTokenString
renewRecoveryTokenURL
ak_addClientInfoHeader
ak_addDeviceUDIDHeader
ak_addInternalBuildHeader
ak_addFeatureMaskHeader
ak_addAuthorizationHeaderWithIdentityToken:forAltDSID:
sharedURLSession
beginDataTaskWithRequest:completionHandler:
setAccountRecoveryMasterKey:
setDecodedRecoveryIdentityToken:
decodedRecoveryPETString
setDecodedRecoveryPET:
setIgnoreInternalTokens:
basicAuthURL
ak_isAuthenticationError
initWithURL:contextHelper:completionHandler:
submitDispatchableRequest:
initWithRequestProvider:
recoveryContextWithServerInfo:
isValid
shouldProcessServerUIRequest:
initWithUILiaison:client:
retrieveRecoveryDataForServerContext:recoveryInfo:completion:
renewRecoveryTokenWithContext:completion:
verifyMasterKey:withContext:completion:
persistMasterKeyVerifier:withContext:completion:
_authUILiaison
_requestDispatcher
UUID
generateCheckinID
initWithClient:
warmUpVerificationSessionWithCompletionHandler:
fetchRealUserLikelihoodForRequest:withCompletionHandler:
analyticsReport
setAnalyticsReport:
_analyticsReport
T@"AKCASatoriReporter",&,N,V_analyticsReport
_incrementQueueSize
_incrementCounter
dateWithTimeIntervalSinceNow:
_decrementQueueSize
calculationWithDate:counter:algorithm:relinquisher:
nextCalculation
initWithBase:maxQueueSize:
base
maxQueueSize
_counter
_queueSize
_base
_maxQueueSize
Td,R,N,V_base
TQ,R,N,V_maxQueueSize
delay
initWithDelay:maxQueueSize:
_delay
Td,R,N,V_delay
fetchFollowUps
set_shouldSendIdentityTokenForRemoteUI:
resourceLoadDelegateWithContext:
setValue:forHTTPHeaderField:
signRequest:
ak_addPRKRequestHeader
securityUpgradeContext
initWithAttributes:
descriptor
attributes
initWithDescriptor:value:
itemAttributes
setDescriptor:
_value
_descriptor
T@"NSData",&,N,V_value
T@"AKKeychainItemDescriptor",&,N,V_descriptor
proxiedDevice
initWithClient:context:
attestationHeaders
attestationDataForDevice:withRequest:completion:
_authenticationParameters:
authenticationType
_identifier
_proxiedAppBundleID
supportsPiggybacking
isEphemeral
shouldPromptForPasswordOnly
shouldRequestShortLivedToken
shouldRequestRecoveryPET
shouldOfferSecurityUpgrade
canPresentRemoteUI
authKitAccount:
isAppleIDLoginEnabled
_localUserHasEmptyPassword
desiredInternalTokens
password
companionDevice
_passwordResetBackupToken
setAnticipateEscrowAttempt:
shouldRequestConfigurationInfo
companionDeviceAnisetteData
proxiedDeviceAnisetteData
ak_anisetteHeadersWithCompanionData:
machineID
uniqueDeviceIdentifier
anisetteDataForDevice:provisionIfNecessary:
ak_proxiedAnisetteHeadersWithData:
clientProvidedDataHelper:
authenticationParametersWithCompletion:
appProvidedData
verifyCredentialReason
serverFriendlyDescription
_identityAuthorizationPayload
_masterKey
_masterKeyAsSecondFactor
_identityToken
dependentAltDSID
currentDeviceAuthenticationModeForAuthContext:
_capabilityForUIDisplay
_performUIOutOfProcess
ignoreInternalTokens
authKitAccount
passwordResetTokenBackupForAccount:
altDSIDforPrimaryiCloudAccount
masterTokenForAccount:
_setMasterKeyAsSecondFactor:
__masterKeyAsSecondFactor
TB,N,S_setMasterKeyAsSecondFactor:,V__masterKeyAsSecondFactor
isFirstTimeLogin
securityLevelForAccount:
reason
reportPromptByClient:withContext:
initWithDate:counter:algorithm:relinquisher:
relinquish
dealloc
dispatchCounter
algorithmIdentifier
headerValue
dispatchDate
_relinquishmentHandler
_dispatchDate
_algorithmIdentifier
_dispatchCounter
T@"NSDate",R,N,V_dispatchDate
T@"NSString",R,N,V_algorithmIdentifier
TQ,R,N,V_dispatchCounter
surrogateContext
setSurrogateContext:
surrogateClient
setSurrogateClient:
surrogateRegistrationID
setSurrogateRegistrationID:
pendingBGContext
setPendingBGContext:
pendingClientUIWork
setPendingClientUIWork:
pendingClientBundle
setPendingClientBundle:
hasCheckedIn
setHasCheckedIn:
surrogateCompletion
setSurrogateCompletion:
_hasCheckedIn
_surrogateContext
_surrogateClient
_surrogateRegistrationID
_pendingBGContext
_pendingClientUIWork
_pendingClientBundle
_surrogateCompletion
T@"AKAppleIDAuthenticationContext",&,N,V_surrogateContext
T@"AKClient",&,N,V_surrogateClient
T@"NSUUID",&,N,V_surrogateRegistrationID
T@"AKAppleIDAuthenticationContext",&,N,V_pendingBGContext
T@?,C,N,V_pendingClientUIWork
T@"NSString",&,N,V_pendingClientBundle
TB,N,V_hasCheckedIn
T@?,C,N,V_surrogateCompletion
_fetchSurrogateForClient:
_isClientWaitingForSurrogateAuth:
_handleError:logMessage:withUIWorkBlock:
surrogateIDGenerator
_waitForSurrogateCheckInWithContext:withUIWorkBlock:client:andCheckInID:
_stopWaitingForCheckInWithContext:andError:
launchOutOfProcessAuthentication:surrogateID:withErrorHandler:
_launchAppleIDSettingsForContext:withCheckinID:
promptForAppleIDSettingsRedirectWithContext:client:needFullUI:completion:
inProgressSurrogates
_updateWithValuesFromContext:
uiWorkQueue
_fetchSurrogateWithRegistrationID:
_clearSurrogate:
lock
unlock
allKeysForObject:
launchSettingsForContext:withCheckinID:
initWithDelegate:
hasRegisteredSurrogateForContext:
isSurrogateAuthInProgressForClient:
isWaitingForSettingsSurrogateAuth
waitForRemoteViewServiceWithContext:client:uiWorkBlock:
waitForSettingsWithContext:client:requireFullUICapability:allowRedirectToSettings:uiWorkBlock:
performUIWorkWithSurrogateContext:uiWorkBlock:
registerUISurrogateContext:client:completion:
unregisterUISurrogateForContext:
setSurrogateIDGenerator:
surrogateQueue
setSurrogateQueue:
setInProgressSurrogates:
_delegate
_settingsLauncher
_surrogateCheckinIDLock
_accountManager
_settingsSurrogationInProgress
_surrogateIDGenerator
_surrogateQueue
_inProgressSurrogates
T@"NSObject<OS_dispatch_queue>",&,N,V_surrogateQueue
T@"NSMutableDictionary",&,N,V_inProgressSurrogates
T@"AKSurrogateAuthenticationIDGenerator",&,N,V_surrogateIDGenerator
isBuddyFinished
setInheritanceContext:
_bodyForBeneficiaryEndpoint
_bodyForBeneficiaryAliasEndpoint
inheritanceContext
signWithIdentityToken
set_shouldSendGrandSlamTokensForRemoteUI:
setInitialURLRequestKey:
beneficiarySetupToken
setServiceToken:
accessKey
claimTokenString
wrappedKeyData
manifest
parsableRepresentation
accessKeyString
uppercaseString
beneficiaryPassword
beneficiaryFirstName
beneficiaryLastName
setSignWithIdentityToken:
_signWithIdentityToken
T@"AKInheritanceContext",&,N,V_context
TB,N,V_signWithIdentityToken
storeName
_buildSchemaVersion1
_upgradeToSchemaVersion2
_upgradeToSchemaVersion3
_upgradeToSchemaVersion4
performQuery:
performInsertQuery:
migrateSchemaIfNecessary
migrateSchemaFromVersion:
currentSchemaVersion
_createV1Database
_createV2Database
_createV3Database
initWithEvent:
initWithRequestID:
didCompleteWithAuthorization:error:
expiryDate
compare:
initWithObject:expiryDate:
cacheObject
isExpired
_cacheObject
_expiryDate
T@,R
T@"NSDate",R
flushCacheForced:
setObject:forKey:expiresIn:
_internalCache
_lock
lastKnownActiveAnisetteDSID
_unsafe_anisetteDataWithRoutingInfoForDSID:withError:
_unsafe_provisionAnisetteWithCompletion:
scannerWithString:
scanUnsignedLongLong:
_unsafe_anisetteDataForDSID:withError:
setIsProxy:
attestationDataForRequest:completion:
ak_wrappedAnisetteError:
setRoutingInfo:
numberWithUnsignedLongLong:
initWithBytesNoCopy:length:freeWhenDone:
localUserUUID
ak_truncatedCopy
setMachineID:
setOneTimePassword:
sharedBagService
clearSessionCache
IDMSEnvironment
activeAnisetteDSIDWithEnvironment:
_createProvisioningStartURLRequestWithCompletion
_signWithBAAHeadersIfNeededForKey:withRequest:
sharedAnisetteFreeURLSession
bytes
dataWithBytes:length:
_createProvisioningEndURLRequestWithCPIM:
sharedBag
isBaaEnabledForKey:
signWithBAAHeaders:completion:
_createSyncURLRequestWithMID:SRM:routingInfo:
startProvisioningURL
requestWithURL:
_signRequestWithProvisioningHeaders:forUrlKey:
endProvisioningURL
syncAnisetteURL
ak_addClientTimeHeader
ak_addDeviceMLBHeader
ak_addDeviceROMHeader
ak_addDeviceSerialNumberHeader
ak_addLocalUserUUIDHashHeader
hasUniqueDeviceIdentifier
ak_addProvisioningUDIDHeader
ak_addClientApp:
lastKnownIDMSEnvironment
initialize
provisionAnisetteWithCompletion:
syncAnisetteWithSIMData:completion:
eraseAnisetteWithCompletion:
fetchAnisetteDataAndProvisionIfNecessary:withCompletion:
legacyAnisetteDataForDSID:withCompletion:
fetchPeerAttestationDataForRequest:completion:
setCustodianContext:
custodianContext
cliMode
setCliMode:
authenticatedRequest
custodianRecoveryToken
setCustodianRecoveryToken:
signRequestWithBasicHeaders:
_bodyForRecoveryCircle
_bodyForAddAndRevokeCustodianRequest
_bodyForFinalizeCustodianRequest
_bodyForCustodianUpdateRecoveryKeyRequest
_bodyForEmbargoEndFeedback
_bodyForTrustedContactsDataSync
recoverySessionID
recoveryStep
ownerAppleID
ownerCustodianAltDSID
custodianUUID
aaData
encryptedPRKC
wrappingKeyRKC
transactionID
notificationAction
dictionaryWithCapacity:
uuid
hashedWrappingKeyRKC
custodianContacts
beneficiaryContacts
lastDataSyncTimestamp
timeIntervalSince1970
numberWithDouble:
setAuthenticatedRequest:
_authenticatedRequest
_custodianContext
T@"AKCustodianContext",&,N,V_custodianContext
TB,N,V_authenticatedRequest
setUrlSwitchData:
setShouldFallBack:
URLWithString:
_bagURLForAltDSID:shouldFallBack:
componentsWithURL:resolvingAgainstBaseURL:
initWithName:value:
ak_addCountryHeader
ak_addLocaleHeader
ak_addTimeZoneHeaders
ak_addSKUCountryHeader
initWithAltDSID:urlSwitchData:shouldFallBack:
newBagURLRequest
shouldFallBack
urlSwitchData
_shouldFallBack
_urlSwitchData
TB,N,V_shouldFallBack
T@"NSString",&,N,V_altDSID
T@"NSString",&,N,V_urlSwitchData
_clearMutuallyExclusiveProperties:
setPasswordCredentialCount:
didShowAppleID:
didSelectAnonymousEmail:
didSelectAppleID:
didSelectPasswordCredential:
didModifyName:
didComplete:
_classWithKeychainClass:
_accessibleWithKeychainAccessible:
_keychainClassWithClass:
_keychainAccessibleWithAccessible:
copyWithZone:
isInvisible
setInvisible:
isSynchronizable
setSynchronizable:
shouldUseDataProtection
setUseDataProtection:
itemClass
setItemClass:
itemAccessible
setItemAccessible:
account
setAccount:
service
setService:
server
setServer:
securityDomain
setSecurityDomain:
label
setLabel:
accessGroup
setAccessGroup:
_invisible
_synchronizable
_useDataProtection
_itemClass
_itemAccessible
_account
_service
_server
_securityDomain
_label
_accessGroup
TQ,N,V_itemClass
TQ,N,V_itemAccessible
T@"NSString",C,N,V_account
T@"NSString",C,N,V_service
T@"NSString",C,N,V_server
T@"NSString",C,N,V_securityDomain
T@"NSString",C,N,V_label
T@"NSString",C,N,V_accessGroup
invisible
TB,N,GisInvisible
synchronizable
TB,N,GisSynchronizable
useDataProtection
TB,N,GshouldUseDataProtection
requestIdentifier
passwordRequest
_isRapportLogin
_isFirstPartyLogin
existingStatus
_isEligibleForUpgradeFromPassword
initWithRequestContext:
_performPostInstallWithCompletion:
numberWithLong:
start
machAbsoluteTimeToTimeInterval:
sendReport
_eventName
_reportData
_initTime
_clock_timebase
deviceRequestContext
initWithURL:resolvingAgainstBaseURL:
includeUntrustedDevices
includeFamilyDevices
services
operatingSystems
setDeviceRequestContext:
_deviceRequestContext
T@"AKDeviceListRequestContext",&,N,V_deviceRequestContext
_unsafe_InvalidateEngine
_prepareEngine
_invalidateEngine
_isEngineActivated
engine
_unsafe_resumeEngineTimeoutSource
prepareWithController:queue:
isActivated
_unsafe_cancelEngineTimeoutSource
timeout
state
_activateEngine
invalidationHandler
proximityEngine:managerDidUpdateState:
proximityEngineDidActivate:
proximityEngineDidInvalidate:
setTimeout:
_queue
_engineQueue
_engineTimeoutSource
_engine
_timeout
_invalidationHandler
T@"<AKProximityEngine>",R,N,V_engine
activated
TB,R,N,GisActivated
Td,N,V_timeout
T@?,C,N,V_invalidationHandler
sessionID
setSessionID:
completionHandler
setCompletionHandler:
clientBundleID
setClientBundleID:
requestTime
setRequestTime:
userResponse
setUserResponse:
_sessionID
_completionHandler
_clientBundleID
_requestTime
_userResponse
T@"NSString",C,N,V_sessionID
T@"AKCredentialRequestContext",&,N,V_context
T@?,C,N,V_completionHandler
T@"NSString",&,N,V_clientBundleID
T@"NSDate",&,N,V_requestTime
T@"AKAuthorizationUserResponse",&,N,V_userResponse
_clientBundleIDForContext:client:
_activeSessionForContext:client:
set_sessionID:
date
selectedRequest
_continuationRequestIdentifier
_hasSessionTimedOutForRequest:
timeIntervalSinceDate:
_authSessionTimeoutInterval
_proxiedClientServiceID
clientForContext:
beginSessionWithContext:client:completion:
endSessionWithContext:client:completion:
continueSessionWithContext:client:completion:
updateUserResponse:withContext:forClient:
userResponseWithContext:forClient:
_activeSessions
_clearanceQueue
_trafficQueue
_transaction
typeForMessageWithTransportRepresentation:
messageFromTransportRepresentation:
identifier
type
transportRepresentation
_properties
TQ,R,N
argument
setCommand:
setArgument:
TQ,N
T@"NSObject",C,N
setWithObject:
_strictlyUnarchivedObjectOfClasses:fromData:error:
replyToID
didSucceed
error
setReplyToID:
setDidSucceed:
setError:
returnData
setReturnData:
T@"NSString",C,N
TB,N
T@"NSError",C,N
T@"NSData",C,N
initWithService:
addDelegate:queue:
_performRemoteCommand:argument:completion:
_activePairedTinkerDevice
sendMessage:toDestinations:priority:options:identifier:error:
linkedDevicesWithRelationship:
isActive
_mhq_handleIncomingReplyMessage:
_replyToCommandMessageWithInternalID:didSucceed:returnData:error:completion:
_handleIncomingCommandMessage:completion:
signingHeadersForRequest:completion:
removeAllObjects
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
startListeningForMessagesFromPairedDevice
_messageSendingService
_messageHandlingQueue
_completionsByInternalMessageID
_internalMessageIDsByTransportID
mainRunLoop
_migrateToSchemaVersion2
_migrateToSchemaVersion3
_migrateToSchemaVersion4
_migrateToSchemaVersion5
_callCompletionWithResults:password:additionalData:error:
anonymousListener
setDelegate:
resume
setPresentationCompletion:
serviceWithDefaultShellEndpoint
canOpenApplication:reason:
setObject:forSetting:
endpoint
_endpoint
initWithInfo:responder:
optionsWithDictionary:
openApplication:withOptions:completion:
XPCInterface
setExportedInterface:
setExportedObject:
presentationCompletion
listener:shouldAcceptNewConnection:
authenticationRequestFinishedWithResults:password:additionalData:error:
presentOOPLoginUIWithContext:completion:
remoteListener
setRemoteListener:
_remoteListener
_presentationCompletion
T@"NSXPCListener",&,N,V_remoteListener
T@?,C,N,V_presentationCompletion
initWithMessage:
isValidMessage
message
setMessageId:
previousMessageId
serverMachineId
alertInfo
alertTitle
setAlertTitle:
alertBody
setAlertBody:
lockScreenTitle
setLockScreenTitle:
lockScreenBody
setLockScreenBody:
defaultButtonTitle
alternateButtonTitle
secondaryTitle
secondaryBody
secondaryFooter
setSecondaryFooter:
isSilent
requiresPasscode
eventDetails
latitude
longitude
deviceClass
deviceColor
deviceEnclosureColor
piggybackingRequestorUsesPresence
piggybackingRequestorPresenceSID
piggybackingAcceptorSupportsPresence
piggybackingIDMSFallbackApproved
piggybackingPresenceMode
_isSilent
_requiresPasscode
_piggybackingRequestorUsesPresence
_piggybackingAcceptorSupportsPresence
_piggybackingIDMSFallbackApproved
_message
_command
_messageId
_previousMessageId
_serverMachineId
_idmsData
_userInfo
_alertInfo
_alertTitle
_alertBody
_lockScreenTitle
_lockScreenBody
_defaultButtonTitle
_alternateButtonTitle
_secondaryTitle
_secondaryBody
_secondaryFooter
_eventDetails
_latitude
_longitude
_deviceClass
_deviceColor
_deviceEnclosureColor
_piggybackingRequestorPresenceSID
_piggybackingPresenceMode
T@"APSIncomingMessage",R,N,V_message
TQ,N,V_command
T@"NSString",C,N,V_messageId
T@"NSString",C,N,V_altDSID
T@"NSString",R,C,N,V_previousMessageId
T@"NSString",R,C,N,V_serverMachineId
T@"NSString",R,C,N,V_idmsData
T@"NSDictionary",R,N,V_userInfo
T@"NSDictionary",R,N,V_alertInfo
T@"NSString",C,N,V_alertTitle
T@"NSString",C,N,V_alertBody
T@"NSString",C,N,V_lockScreenTitle
T@"NSString",C,N,V_lockScreenBody
T@"NSString",R,C,N,V_defaultButtonTitle
T@"NSString",R,C,N,V_alternateButtonTitle
T@"NSString",R,C,N,V_secondaryTitle
T@"NSString",R,C,N,V_secondaryBody
T@"NSString",C,N,V_secondaryFooter
TB,R,N,V_isSilent
TB,R,N,V_requiresPasscode
T@"NSDictionary",R,N,V_eventDetails
T@"NSNumber",R,C,N,V_latitude
T@"NSNumber",R,C,N,V_longitude
T@"NSString",R,C,N,V_deviceClass
T@"NSString",R,C,N,V_deviceColor
T@"NSString",R,C,N,V_deviceEnclosureColor
TB,R,N,V_piggybackingRequestorUsesPresence
T@"NSUUID",R,C,N,V_piggybackingRequestorPresenceSID
TB,R,N,V_piggybackingAcceptorSupportsPresence
TB,R,N,V_piggybackingIDMSFallbackApproved
Tq,R,N,V_piggybackingPresenceMode
_bodyForPrivateEmailRegisterEndpoint
initWithContext:emailKey:urlBagKey:
_emailKey
sharedAuthKitFollowupProvider
setExtensionIdentifier:
sharedAuthKitFollowupManager
sharedAuthKitFollowupPushDelegate
initWithBundleIdentifier:
initWithNotificationCenter:
_notificationCategories
setNotificationCategories:
_notificationContent:
requestWithIdentifier:content:trigger:
addNotificationRequest:withCompletionHandler:
bundleWithIdentifier:
titleKey
localizedStringForKey:value:table:
localizedAppsNameList
bodyKey
setBody:
setCategoryIdentifier:
defaultSound
setSound:
setInterruptionLevel:
setDate:
actionWithIdentifier:title:options:
categoryWithIdentifier:actions:intentIdentifiers:options:
postUserNotification:
_notificationCenter
tokenWithExternalizedVersion:lifetime:
configureWithParameters:
underlyingContext
configurationParameters
_underlyingContext
_configurationParameters
T@"NSDictionary",R,N
T@"AKMasterToken",R,N
T^{__AppleIDAuthSupportData=},R,N,V_underlyingContext
T@"NSDictionary",R,N,V_configurationParameters
phoneCertificate
setPhoneCertificate:
slotID
setSlotID:
_phoneCertificate
_slotID
T@"NSString",&,N,V_phoneCertificate
Tq,N,V_slotID
initWithQueue:
getSubscriptionInfoWithError:
getCurrentDataSubscriptionContextSync:
getUserDefaultVoiceSubscriptionContext:
subscriptionsInUse
subscriptions
indexOfObjectPassingTest:
getMobileSubscriberHomeCountryList:error:
phoneNumber
_formattedValueForPhoneNumber:countryCode:
T@"AKCarrierBundleUtilities",R
phoneBundleInfoWithAdditionalInfo:error:
_telephonyClient
_carrierUtilitiesQueue
urlRequestProvider
_proxiedAppName
serviceType
_executeAllowingReauthentication:completion:
sharedCacheEnabledURLSession
_urlSession
ak_isAuthenticationErrorWithCode:
_reauthenticateAndExecuteWithCompletion:
_executeURLRequest:withSession:completion:
additionalHeaders
_addingAdditionalHeaders:forURLRequest:
ak_errorByAppendingUserInfo:
beginAuthenticationDataTaskWithRequest:completionHandler:
_reauthenticateWithCompletion:
authenticationHandler
buildReauthenticationContextFromContext:error:
reauthenticateWithContext:completion:
executeWithResponseHandler:
invalidateWithError:
dispatchingInfo
setAdditionalHeaders:
T@"NSDictionary",&,N
initWithURLRequestProvider:authenticationHandler:completionHandler:
_additionalHeaders
_urlRequestProvider
_authenticationHandler
T@"<AKURLRequestProvider>",R,N,V_urlRequestProvider
T@"<AKAuthHandler>",R,N,V_authenticationHandler
T@"NSDictionary",&,N,V_additionalHeaders
initWithProxy:
surrogateManager
setSurrogateManager:
host
reachabilityWithHostName:
fetchUserInformationForAltDSID:client:completion:
fetchURLBagForAltDSID:completion:
urlBagFromCache:altDSID:error:
forceURLBagUpdateForAltDSID:urlSwitchData:completion:
_verificationQueue
_setAuthKitAccount:inUse:forService:completion:
authKitAccountWithDSID:
servicesUsingAccount:
setAccount:inUse:byService:
store
removeAccount:withCompletionHandler:
reportFinalSignOutEventForAccount:completion:
reportSignOutEventForService:account:completion:
updateUserInformationForAltDSID:userInformation:completion:
_showAlertForLoginError:context:completion:
fetchAuthModeWithContext:client:completion:
fetchAppInformationWithAltDSID:client:completion:
configurationInfoURL
dataWithPropertyList:format:options:error:
ak_addAuthorizationHeaderWithHeartbeatToken:forAltDSID:
fetchConfigDataURL
_errorFromServerResponseParameters:authenticationError:
isProtectedWithPasscode
activeCode
getServerUILoadDelegateWithContext:completion:
setUsername:
updateStateWithExternalAuthenticationResponse:forContext:completion:
signalFromServerResponse:
authKitAccountWithAppleID:
_updateAuthKitAccount:withServerResponse:context:error:
_persistGrandSlamServiceTokens:forAltDSID:DSID:appleID:forContext:error:
altDSIDForAccount:
credentialForAccount:error:
performWithinPersonaForAccount:withBlock:
token
tokenWithExternalizedVersionString:
_validateLoginCode:forAltDSID:masterToken:idmsData:authContext:completion:
validateCodeURL
ak_addEphemeralAuthHeader
ak_addDeviceConfigurationModeHeaderForAuthContext:
anticipateEscrowAttempt
ak_addICSCIntentHeader
ak_addProxiedDeviceUDIDHeader:
ak_addProxiedClientInfoHeader:
ak_addProxiedAnisetteHeaders:
validateVettingTokenURL
allAuthKitAccounts
ak_firstObjectMatchingFilter:
performLivenessCheckInForAccount:completion:
isContextEligibleForSilentAuthCoercion
shouldAllowExperimentalMode
setAuthenticationType:
_password
endAuthenticationForAppleID:password:error:context:client:clearanceHandler:
_authenticateWithContext:completion:
beginAuthenticationWithContext:client:clearanceHandler:
needsRepair
_repairAppleIDWithContext:completion:
needsCredentialRecovery
_recoverCredentialsAndAuthenticateWithContext:completion:
needsNewAppleID
needsNewChildAccount
_createNewAppleIDAndAuthenticateWithContext:completion:
needsPasswordChange
_changePasswordAndAuthenticateWithContext:completion:
needsSecurityUpgradeUI
_upgradeSecurityLevelWithContext:completion:
_performAuthenticationWithContext:completion:
upgradeUIURL
_handleSuccessfulVerificationForContext:withResults:serverResponse:completion:
_shouldContinueAuthenticatingForUsername:password:serverResponse:didShowServerUI:continuationData:error:context:completion:
_showServerUIWithURLRequest:context:completion:
_isInteractiveAuthRequiredForContext:
_attemptBiometricOrPasscodeAuthWithContext:completion:
ak_isServiceError
_handlePasswordlessAuthResults:context:error:completion:
_attemptPasswordlessAuthOptionsWithContext:completion:
ak_isIncompatibleDevicesError
_attemptInteractiveAuthWithContext:completion:
serviceIdentifiers
authenticationModeForAccount:
_correlateContext:withAuthMode:
isContextEligibleForBiometricOrPasscodeAuth
_showBiometricOrPasscodeAuthWithContext:completion:
_attemptPasswordlessAuthAfterBiometricOrPasscodeValidationWithContext:promptType:completion:
_setPassword:
presentBiometricOrPasscodeValidationForContext:client:completion:
initWithContext:client:
_handleVerificationCompletionForUsername:password:serverResponse:didShowServerUI:continuationData:error:context:completion:
_performSecondaryActionWithServerResponse:context:completion:
attemptTokenUpgradeWithCompletionHandler:
_attemptPasswordlessAuthWithContext:completion:
ak_isUserCancelError
_performSilentServiceTokenAuthWithContext:completion:
_performPasswordlessSRPAuthWithContext:completion:
_performPasswordlessSRPAuthWithAccount:context:completion:
_accountForContinuationWithContext:completion:
_accountForContinuationWithContext:error:
isUsernameEditable
_showContinueUsingUIWithContext:completion:
isAccountsFrameworkAvailable
mostRecentlyUsedAuthKitAccount
continuationTokenForAccount:
dismissKeepUsingUIForContext:client:withCompletion:
presentKeepUsingUIForContext:client:appleID:completion:
continuationTokenForAccount:error:
_handleVerificationError:forContext:completion:
_verifyUsername:password:context:completion:
_shouldSkipInitialReachabilityCheck
currentReachabilityStatus
_performInteractiveAuthWithContext:completion:
_refreshAuthModeIfNecessaryForContext:completion:
_refreshLocalAccountAndUpdateContext:completion:
_handleBasicLoginUICompletionWithUsername:password:context:additionalData:collectionError:completion:
presentBasicLoginUIForContext:client:completion:
refreshAuthMetadataWithContext:completion:
setAuthenticationMode:
sanitizeContext:
DSID
_shouldRefreshAccountAndUpdateContext
_updateAltDSIDAndUsername:
previousAccountInfoRefreshDate
accountName
shouldUpdateAuthModeForAccount:
_refreshAuthModeForContext:completion:
authenticationMode
fetchAuthModeWithContext:completion:
dismissBasicLoginUIForContext:client:completion:
_showAlertForVerificationError:context:completion:
ak_isUnableToPromptError
ak_isSurrogateAuthAlreadyInProgressError
_keepAlive
_keepLoginAliveWithContext:error:andCompletion:
ak_isUserTryAgainError
_handleMissingUsernameOrPasswordForContext:password:username:completion:
_incrementAttemptsForContext:error:
_attemptIndex
set_attemptIndex:
maximumLoginAttempts
presentLoginAlertForContext:client:withError:title:message:completion:
_titleAndMessageForError:context:completion:
_srpAuthContextHelperWithContext:
setPassword:
_setMessage:
_performGrandslamEndpointActionWithContext:serverResponse:completion:
reportAuthEventOfType:success:error:
_checkFreshnessAndVerifyWithPassword:serverResponse:additionalData:secondaryActionError:context:newServerResponse:username:completion:
_performSRPAuthenticationWithContext:completion:
setAuthKitAccount:
shouldFakeAuthSuccess
_performSafeSRPAuthenticationWithContext:completion:
isContextSecretValidForSRP
performSRPContractWithContext:completion:
shouldContinueWithAuthenticationResults:error:forContextID:completion:
_authKitAccountFromContext:
_shouldSkipAccountUpdatesForAuthWithContext:
_provideServiceTokensIfRequiredForContext:authenticationResults:serverResponse:completion:
authKitAccountType
initWithAccountType:
personaIDIfCurrentPersonaIsDataSeparated
shouldUpdatePersistentServiceTokens
setShouldUpdatePersistentServiceTokens:
_completeAuthenticationWithServiceTokens:tokenFetchError:altDSID:authenticationResults:context:completion:
setValuesForKeysWithDictionary:
_fetchTokensForServiceIDs:withUsername:altDSID:masterToken:context:completion:
ak_mapObjects:
appleIDAccountWithAltDSID:
serviceIdentifier
_persistGrandSlamServiceTokensHelper:forAltDSID:DSID:appleID:appleIDAuthAccount:error:
appleIDAccountWithAppleID:
appleIDAccountType
setCredential:
setAuthenticated:
setAltDSID:forAccount:
setAccountProperty:forKey:
_updateCredentialForSavedAIDAAccount:withNewTokens:
setToken:
expirationDate
setTokenExpiryDate:
_isTouchIDRequiredForGrandSlamServiceTokenWithID:
setRequiresTouchID:
setCredential:forAccount:serviceID:error:
beginFederatedAuthWithInitialResponse:completionHandler:
_beginServerDrivenSecondaryActionWithURLKey:context:initialAuthResponse:completion:
_setIdentityToken:
_performFidoStartAuthActionWithContext:serverResponse:completion:
_handleSecondFactorUICompletionWithCode:error:idmsData:piggybacking:initialAuthResponse:context:completion:
_showAlertForLoginCodeValidationError:context:completion:
_processValidationCodeSuccessResponse:authResponse:results:completion:
presentSecondFactorAlertForContext:client:withError:title:message:completion:
setPasscodeAuth:
setBiometricAuth:
_urlAtKey:
_handleGrandslamResponse:data:error:serverResponse:completion:
fidoHandler
_handleStartFidoAuthWithContext:fidoContext:serverResponse:completion:
presentFidoAuthForContext:fidoContext:client:completion:
looksLikeiForgotURLKey:
_addAccountNameParameterToURL:withContext:
_showServerUIWithURLRequest:context:initialAuthResponse:completion:
_showServerUIWithContext:completion:
authKitAccountForSilentServiceToken:
externalizedVersion
appleIDAuthSupportTokenCreateWithExternalizedVersion:error:
_authenticationParametersForUsername:altDSID:context:
appleIDAuthSupportCopyAppTokensWithMasterToken:authURL:serviceIds:authParams:error:
removeMasterTokenForAccount:
_handleRecoverCredentialsError:withContext:andCompletion:
_beginiForgotFlowWithContext:completion:
setNeedsCredentialRecovery:
isTriggeredByNotification
iForgotContinuationURL
iForgotURL
setShouldOfferSecurityUpgrade:
ak_urlEncoded
stringByAppendingFormat:
repairURL
_handleCreateNewAppleIDError:withContext:andCompletion:
recordUserAcceptedAgreementVersion:
_beginAppleIDCreationFlowWithContext:completion:
setNeedsNewAppleID:
setNeedsNewChildAccount:
createChildAccountURL
createAppleIDURL
_beginChangePasswordFlowWithAccount:context:completion:
changePasswordURL
setNeedsPasswordChange:
initiatingContext
presentSecondFactorUIForContext:client:completion:
initialAuthResponse
dismissSecondFactorUIForContext:client:completion:
initiatingPassword
setServiceType:
escapeHatchURL
ak_isUserSkippedError
setDSID:forAccount:
setAliases:forAccount:
setAdditionalInfo:forAccount:
demoAccountForAccount:
setDemoAccount:forAccount:
setSecurityLevel:forAccount:
setAuthenticationMode:forAccount:
setAuthorizationUsed:forAccount:
setPrivateAttestationEnabled:forAccount:
setPhoneAsAppleID:forAccount:
setPrimaryEmailAddress:forAccount:
setVerifiedPrimaryEmail:forAccount:
setUserUnderage:forAccount:
setUserIsSenior:forAccount:
setAgeOfMajority:forAccount:
setCanBeCustodian:forAccount:
setCanHaveCustodian:forAccount:
setCustodianEnabled:forAccount:
setCustodianLastModified:forAccount:
setBeneficiary:forAccount:
setCanBeBeneficiary:forAccount:
setCanHaveBeneficiary:forAccount:
setAppleIDCountryCode:forAccount:
setHasMDM:forAccount:
setGivenName:forAccount:
setFamilyName:forAccount:
setManagedOrganizationType:forAccount:
setManagedOrganizationName:forAccount:
setIsNotificationEmailAvailable:forAccount:
setNotificationEmail:forAccount:
setFido:forAccount:
externalizedVersionString
setCredentialItem:forKey:
sendUserInfoChangeNotificationWithPayload:
piggyback:promptForRandomCodeWithCompletion:
piggyback:handleVerificationWithError:completion:
piggyback:validateSecurityCode:completion:
piggyback:shouldContinueWithCompletion:
piggyback:handleEscapeHatchError:completion:
shouldProcessAdditionalServerUIData:
serverUIContext:processAdditionalData:completion:
authenticateWithContext:completion:
checkSecurityUpgradeEligibilityForContext:completion:
generateLoginCodeWithCompletion:
validateLoginCode:forAppleID:withCompletion:
updateStateWithExternalAuthenticationResponse:forAppleID:completion:
getServerUILoadDelegateForAltDSID:completion:
setAppleIDWithAltDSID:inUse:forService:completion:
setAppleIDWithDSID:inUse:forService:completion:
getUserInformationForAltDSID:completion:
fetchDeviceMapWithContext:completion:
fetchAppListWithAltDSID:completion:
deleteAuthorizationDatabaseWithCompletion:
warmUpVerificationSessionWithCompletion:
setConfigurationInfo:forIdentifier:forAltDSID:completion:
configurationInfoWithIdentifiers:forAltDSID:completion:
performCheckInForAccountWithAltDSID:completion:
reportSignOutForAppleID:service:completion:
reportSignOutForAllAppleIDsWithCompletion:
validateVettingToken:forAltDSID:completion:
isCreateAppleIDAllowedWithCompletion:
synchronizeFollowUpItemsForContext:completion:
isDevicePasscodeProtected:
activeLoginCode:
accountNamesForAltDSID:completion:
fetchURLBagFromCache:altDSID:completion:
clearSessionCacheWithCompletion:
fetchUserInformationForAltDSID:completion:
_handleSecondFactorUICompletionWithCode:error:idmsData:initialAuthResponse:context:completion:
_authProxy
_authTrafficController
_reachability
_fidoHandler
deactivate
initWithDeviceID:
startAuthorization
authorizationEndorserRapportClientDidFinish:
activateWithError:
_handleFoundDevice:
didDeactivateBlock
setDidDeactivateBlock:
deviceDiscovery
setDeviceDiscovery:
authorizationEndorser
setAuthorizationEndorser:
_didDeactivateBlock
_deviceDiscovery
_authorizationEndorser
T@"RPCompanionLinkClient",&,N,V_deviceDiscovery
T@"AKAuthorizationEndorserRapportClient",&,N,V_authorizationEndorser
T@?,C,N,V_didDeactivateBlock
_initiatePiggybackingWithCleanSession:withCompletion:
_clearSessionState
requestSession
initialMessage:
setTransactionId:
contextWithIncomingPayload:
signal
_promptForSecretWithContext:completion:
set_notifyOfTimeout:
wait
cancel
_processHandshakeWithContext:handshakeReply:andHandshakeError:withCompletion:
_handleVerificationError:withContext:completion:
_clearCaptureState
_stopProximityControllerIfNeededWithPushPayload:
_deliverPushPayload:completion:
_deliverPushPayload:attachDuplexSession:completion:
_shouldContinueProcessing:
session
setServerInfo:
replyWithContext:withCompletion:
didCancelRequesting
setIdentityTokenValue:
sessionWithSecretDelegate:dsid:error:
_capturedCodeString
_cacheSecondFactor:codeCaptureError:
_processCachedUserInputWithContext:completion:
_processCodeEntryErrorWithContext:completion:
_sendDeviceCancelledReplyWithContext:
didEscapeRequesting
proximityController
setProximityController:
processAccountCode:error:
initWithServerResponse:andDelegate:piggybackReporter:
initiatePiggybackingWithCompletion:
delegate
setInitiatingContext:
setInitiatingPassword:
setRequestSession:
capturedCode
setCapturedCode:
escapeHatchTrigger
setEscapeHatchTrigger:
escapeHatchError
setEscapeHatchError:
authResults
setAuthResults:
unitTestContext
setUnitTestContext:
initialHandshakeTimeout
setInitialHandshakeTimeout:
_latestIDMSData
_currentReplyContext
_retryCount
_unitTestContext
_initiatingContext
_initiatingPassword
_initialAuthResponse
_requestSession
_capturedCode
_escapeHatchTrigger
_escapeHatchError
_authResults
_initialHandshakeTimeout
T@"KCJoiningRequestSecretSession",&,N,V_requestSession
T@"NSNumber",&,N,V_capturedCode
T@"NSError",&,N,V_escapeHatchTrigger
T@"NSError",&,N,V_escapeHatchError
T@"NSDictionary",&,N,V_authResults
TB,N,V_unitTestContext
Td,N,V_initialHandshakeTimeout
T@"AKProximityController",&,N,V_proximityController
T@"<AKPiggybackRequestingControllerDelegate>",W,N,V_delegate
T@"AKAppleIDAuthenticationContext",&,N,V_initiatingContext
T@"NSString",&,N,V_initiatingPassword
T@"AKAuthenticationServerResponse",R,N,V_initialAuthResponse
setPrivateEmailCompletion:
initWithServiceName:viewControllerClassName:
setXpcEndpoint:
setUserInfo:
newHandleWithDefinition:configurationContext:
setRemoteAlertHandle:
remoteAlertHandle
registerObserver:
activateWithContext:
_callCompletionBlockWithEmail:error:
privateEmailCompletion
unregisterObserver:
remoteAlertHandleDidActivate:
remoteAlertHandleDidDeactivate:
remoteAlertHandle:didInvalidateWithError:
privateEmailFetchCompletedWith:error:completion:
presentPrivateEmailWithContext:client:completion:
_privateEmailCompletion
_remoteAlertHandle
T@?,C,N,V_privateEmailCompletion
T@"SBSRemoteAlertHandle",&,N,V_remoteAlertHandle
_settingsPaneIDForContext:
iCloudAccountForAppleID:
defaultWorkspace
openSensitiveURL:withOptions:error:
doesNotRecognizeSelector:
initWithKey:altDSID:
lookupPrivateEmailWithContext:completion:
sanitiseInternalState
fetchPrivateEmailWithContext:completion:
_verifyEntitlements
canPerformRequestWithAccount:error:
showAlertForError:withCompletion:
_performRequestForContext:completion:
_performRegisterRequestForAltDSID:key:completion:
presentPrivateEmailUIForContext:completion:
initWithKey:
removePrivateEmailWithContext:completion:
_cacheFetchedPrivateEmail:keyAlreadyHashed:error:completion:
lookupPrivateEmailForAltDSID:withKey:completion:
fetchPrivateEmailForAltDSID:withKey:completion:
registerPrivateEmailForAltDSID:withKey:completion:
getContextForRequestContext:completion:
deletePrivateEmailDatabaseWithCompletion:
privateEmailListVersionWithCompletion:
removePrivateEmailKey:completion:
listAllPrivateEmailsForAltDSID:completion:
T@"AKClient",R,N,V_client
setName:
setObject:atIndexedSubscript:
waitUntilDate:
setResolved:
maxWait
setMaxWait:
beginDate
setBeginDate:
valueCondition
setValueCondition:
internalWrapper
setInternalWrapper:
_resolved
_maxWait
_beginDate
_valueCondition
_internalWrapper
TB,N,V_resolved
Td,N,V_maxWait
T@"NSDate",&,N,V_beginDate
T@"NSCondition",&,N,V_valueCondition
T@"NSMutableArray",&,N,V_internalWrapper
sharedSigner
fetchAnisetteDataAndProvisionIfNecessary:device:completion:
_helperServiceForDevice:
_fetchAnisetteDataAndProvisionIfNecessary:device:completion:
linkType
_nativeAnisetteService
_pairedDeviceAnisetteService
_clientAnisetteService
provisionAnisetteForDevice:completion:
syncAnisetteWithSIMData:device:completion:
eraseAnisetteForDevice:completion:
legacyAnisetteDataForDSID:device:completion:
initWithClient:authenticationContext:
absintheSigner
setAbsintheSigner:
attestationSigner
setAttestationSigner:
_absintheSigner
_attestationSigner
T@"AKAbsintheSigner",&,N,V_absintheSigner
T@"AKAttestationSigner",&,N,V_attestationSigner
signatureForURLRequest:completionHandler:
signaturesForData:options:completion:
absintheSignatureForData:completion:
_fetchUserInformationForAltDSID:client:dataCenter:completion:
_setLastEmailListRequestDate:
_processIncomingUserInformationForAltDSID:userInformation:
_syncPrivateEmailsForAltDSID:client:userInformation:completion:
beginTransaction
endTransaction
_processHideMyEmailForAltDSID:userInfo:response:
refreshAccountUsernamesForAltDSID:dataCenter:
primaryAuthKitAccount
setShouldSyncWithServer:
shouldSyncWithServer
_updatePrivateEmailsWithInformation:
refreshAccountUsernamesForAltDSID:withUserInformation:
initWithClient:altDSID:
executeFetchHmeListRequestWithCompletion:
_userInfoChangeNotificationDictionaryForAltDSID:userInformation:
setRepairState:forAccount:
_authorizationPropertiesChangedForAccount:userInformation:
_additionalInfoChangedForAccount:userInformation:
_managedAppleIDInfoChangedForAccount:userInformation:
_trustedContactPropertiesChangedForAccount:userInformation:
repairStateForAccount:
verifiedPrimaryEmailForAccount:
phoneAsAppleIDForAccount:
selectedPrivateEmailForAccount:
setSelectedPrivateEmail:forAccount:
primaryEmailAddressForAccount:
givenNameForAccount:
familyNameForAccount:
forwardingEmailForAccount:
setForwardingEmail:forAccount:
selectedAuthorizationEmailForAccount:
setSelectedAuthorizationEmail:forAccount:
reachableEmailAddressesForAccount:
isEqualToSet:
setReachableEmailAddresses:forAccount:
hasUsedAuthorization
authorizationUsedForAccount:
privateAttestationEnabledForAccount:
userUnderAgeForAccount:
userIsSeniorForAccount:
ageOfMajorityForAccount:
appleIDCountryCodeForAccount:
authorizedApplicationsListVersion
revokeAuthorizationForAllApplications:
currentAuthorizationListVersion
_refreshApplicationInformationForAltDSID:
canHaveCustodianForAccount:
canBeCustodianForAccount:
custodianEnabledForAccount:
canHaveBeneficiaryForAccount:
canBeBeneficiaryForAccount:
custodianLastModifiedForAccount:
updateAuthorizationListWithMetadataInfo:
_updateAccount:withUserInformationResponse:modifyAliases:
_broadcastEmailChangeNotification
standardUserDefaults
aliasesForAccount:
defaultCenter
postNotificationName:object:
_sendNotification:withUserInfo:
postNotificationName:object:userInfo:deliverImmediately:
postNotificationName:object:userInfo:
authkitAccount
setGivenName:
setFamilyName:
setHasUsedAuthorization:
formattedUsernameFromUsername:
setAccountName:
setPrimaryEmailAddress:
setIsUnderage:
setIsSenior:
setAgeOfMajority:
setAppleIDSecurityLevel:
isManagedAppleIDForAccount:
managedOrganizationTypeForAccount:
setManagedOrganizationType:
managedOrganizationNameForAccount:
setManagedOrganizationName:
isNotificationEmailAvailableForAccount:
setIsNotificationEmailAvailable:
notificationEmailForAccount:
setNotificationEmail:
setAuthMode:
combinedAliasesAndReachableEmailsForAccount:
setPreviouslyWantedPrivateEmail:
setPreviouslySelectedEmail:
setReachableEmails:
setForwardingEmail:
insertObject:atIndex:
additionalInfoForAccount:
isEqualToDictionary:
hasMDMForAccount:
authorizationUserInformationForRequest:shouldRequestUpdate:error:
encodeObject:forKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
initWithBundleIdentifier:bundleName:bundleDescription:bundleType:otherInfo:
bundleName
bundleDescription
bundleType
otherInfo
_bundleIdentifier
_bundleName
_bundleDescription
_bundleType
_otherInfo
T@"NSString",R,C,N,V_bundleIdentifier
T@"NSString",R,C,N,V_bundleName
T@"NSString",R,C,N,V_bundleDescription
TQ,R,N,V_bundleType
T@"NSDictionary",R,C,N,V_otherInfo
dictionaryWithDictionary:
serialNumber
_handleCurrentDeviceTrustStatusChangedWithPayload:
_sendTrustedDeviceListChangeNotificationWithPayload:
operation
removeContinuationTokenForAccount:
controller
queue
T@"<AKProximityEngineController>",R,W,N
T@"NSObject<OS_dispatch_queue>",R,N
_controller
_presenceSID
T@"NSUUID",R,N,V_presenceSID
T@"<AKProximityEngineController>",R,W,N,V_controller
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
initWithDelegate:queue:options:
UUIDWithNSUUID:
initWithType:primary:
addService:
startAdvertising:
stopAdvertising
peripheralManagerDidUpdateState:
peripheralManager:willRestoreState:
peripheralManagerDidStartAdvertising:error:
peripheralManager:didAddService:error:
peripheralManager:central:didSubscribeToCharacteristic:
peripheralManager:central:didUnsubscribeFromCharacteristic:
peripheralManager:didReceiveReadRequest:
peripheralManager:didReceiveWriteRequests:
peripheralManagerIsReadyToUpdateSubscribers:
peripheralManager:didPublishL2CAPChannel:error:
peripheralManager:didUnpublishL2CAPChannel:error:
peripheralManager:didOpenL2CAPChannel:error:
_peripheralManager
scanForPeripheralsWithServices:options:
stopScan
_discoveredPeripheral:withServiceID:
matchHandler
centralManagerDidUpdateState:
centralManager:willRestoreState:
centralManager:didDiscoverPeripheral:advertisementData:RSSI:
centralManager:didConnectPeripheral:
centralManager:didFailToConnectPeripheral:error:
centralManager:didDisconnectPeripheral:error:
centralManager:connectionEventDidOccur:forPeripheral:
centralManager:didUpdateANCSAuthorizationForPeripheral:
peripheralDidUpdateName:
peripheral:didModifyServices:
peripheralDidUpdateRSSI:error:
peripheral:didReadRSSI:error:
peripheral:didDiscoverServices:
peripheral:didDiscoverIncludedServicesForService:error:
peripheral:didDiscoverCharacteristicsForService:error:
peripheral:didUpdateValueForCharacteristic:error:
peripheral:didWriteValueForCharacteristic:error:
peripheral:didUpdateNotificationStateForCharacteristic:error:
peripheral:didDiscoverDescriptorsForCharacteristic:error:
peripheral:didUpdateValueForDescriptor:error:
peripheral:didWriteValueForDescriptor:error:
peripheralIsReadyToSendWriteWithoutResponse:
peripheral:didOpenL2CAPChannel:error:
_centralManager
_matchHandler
T@?,C,N,V_matchHandler
_processDictionary:addedPrivateEmails:removedPrivateEmails:
invalidListVersionSupplied
_invalidListVersionSupplied
_shouldSyncWithServer
_protocolVersion
_privateEmailListVersion
_addedPrivateEmails
_removedPrivateEmails
T@"NSString",R,C,N,V_privateEmailListVersion
TB,R,N,V_invalidListVersionSupplied
T@"NSArray",R,C,N,V_addedPrivateEmails
T@"NSArray",R,C,N,V_removedPrivateEmails
TB,N,V_shouldSyncWithServer
Ti,R,N,V_protocolVersion
_constructRequestProviderForClient:altDSID:
setIsSecondCall:
setExpectedResponseType:
isSecondCall
_isSecondCall
TB,N,V_isSecondCall
setRecoveryToken:
_handleStartFidoResponse:data:context:recoveryToken:error:completion:
initWithParameters:
authenticatorData
clientData
signature
credentialID
_handleFinishFidoResponse:data:context:recoveryToken:error:completion:
_callCompletionBlockWithAuthorization:error:
authorizationResponseValidator
fetchIconBlock
authorizationRequestInitiatedWithUserProvidedInformation:completion:
authorizationRequestFinishedWithAuthorization:error:completion:
continueFetchingIconWithCompletion:
presentAuthorizationWithContext:client:completion:
setAuthorizationResponseValidator:
_authorizationResponseValidator
_fetchIconBlock
T@?,C,N,V_authorizationResponseValidator
T@?,C,N,V_fetchIconBlock
requestDispatcher
setRequestDispatcher:
T@"AKRequestDispatcher",&,N
_requestProvider
_reauthHandler
T@"AKRequestDispatcher",&,N,V_requestDispatcher
_sanitizeContext:
_validateAuthContext:
_validateAppleIDAuthContext:
_validateAppleIDAuthContext:forAuthMode:
_validateNativeAppleIDAuthContext:
_validateFederatedAppleIDAuthContext:
_annotateTransformationOfProperty:fromValue:toValue:
_validateSilentPreferredFederatedAppleIDAuthContext:
_accountForAppleIDAuthContext:
accountManager
setAccountManager:
device
setDevice:
_device
_transformationAnnotations
T@"AKAccountManager",&,N
T@"AKDevice",&,N
initWithClient:requestDispatcher:
_continueSRPContractWithAuthURL:context:completion:
_parseFailedServerResponse:withError:context:completion:
_resyncAnisetteWithServerResponse:context:completion:
_reprovisionAnisetteWithServerResponse:context:completion:
_doURLSwitchWithServerResponse:context:completion:
retryAuth
setRetryAuth:
_handleError:withServerResponse:context:andCompletion:
_anisetteActionTargetForServerResponse:andContext:
forceUpdateBagWithUrlSwitchData:completion:
_shouldClearCKForFailedMagicAuthWithError:authContextHelper:
clearContinuationTokenIfSupported
_demoModeEnabled
setShouldIgnoreUserID:
setShouldIgnoreTeamID:
_isDeviceTrustedForRequest:
_verifyClientInformationForRequest:completion:
setUserID:
_internalCredentialStateForUserState:error:
shouldIgnoreTeamID
_getCredentialStateWithStateRequest:completion:
_fetchDeveloperTeamWithClientID:
_fetchDeveloperTeamWithTeamID:
userID
_verifyUserID:
shouldIgnoreUserID
shouldAllowDemoMode
deviceTrustRevokedForAccount:
getCredentialStateForRequest:completion:
getInternalCredentialStateForCredentialRequestContext:
getCredentialStateForClientID:completion:
_handleResult:forAccount:
_locationNameWithLatitude:longitude:completion:
stringByReplacingOccurrencesOfString:withString:
_loginAlertForAccount:latitude:longitude:message:resolvedBody:
createUserNotificationWithTitle:body:lockScreenTitle:lockScreenBody:defaultButtonTitle:alternateButtonTitle:makeNoise:
_isPasswordPromptNecessaryForCommand:
_promptForAuthenticationPasswordForAccount:completion:
_waitForNotificationResponse:withIdentifier:responseHandler:
_promptForChangePasswordForAccount:
isInternalBuild
_showCode:body:title:footer:completion:
buildLoginCodeNotificationWithTitle:body:footer:loginCode:
_presenterQueue
_receiveResponseFromNotification:handler:
setLatitude:
setLongitude:
setReason:
setDeviceClass:
setDeviceColor:
setDeviceEnclosureColor:
_loginNotificationOptionsWithContext:isSilent:defaultButtonTitle:alternateButtonTitle:
_loginAlertOptionsForAccount:latitude:longitude:message:resolvedBody:
doubleValue
initWithLatitude:longitude:
locality
administrativeArea
reverseGeocodeLocation:completionHandler:
populateNotificationOptionsWithCommonKeys:makeNoise:
extensionItemWithAppleIDAuthenticationContext:
_interpolatedReason
createUserNotificationOptionsWithTitle:body:lockScreenTitle:lockScreenBody:defaultButtonTitle:alternateButtonTitle:makeNoise:
bundleForClass:
resourceURL
numberWithUnsignedLong:
_notificationResultFromButtonPressed:
passwordResetTokenForAccount:
createUserNotificationWithTitle:body:defaultButtonTitle:alternateButtonTitle:makeNoise:
_startChangePasswordFlowForAccount:
openSensitiveURL:withOptions:
setShouldPromptForPasswordOnly:
setIsEphemeral:
setIsUsernameEditable:
setShouldSkipSettingsLaunchAlert:
setMaximumLoginAttempts:
set_performUIOutOfProcess:
set_forceEligibleForForegroundAuthentication:
createUserNotificationOptionsWithTitle:body:defaultButtonTitle:alternateButtonTitle:makeNoise:
presentMessageWithAccount:completionHandler:
presentLoginNotificationWithCode:piggy:completionHandler:
tearDown
_pendingNotification
loadDelegate
_expectedResponseType
TQ,N,V_expectedResponseType
T@"AKAppleIDServerResourceLoadDelegate",R,N
setIdentifier:
startAuthorizationWithCompanionLinkClient:
setDestinationDevice:
_deactivate
_sendStartAuthorizationRequest
activateWithCompletion:
_sendDidStartServerAuthorizationEvent
_handleStartAuthorizationWithResponse:
sendRequestID:request:destinationID:options:responseHandler:
unarchivedObjectOfClass:fromData:error:
_sendAuthorizationDidFinishRequestWithError:
set_isRapportLogin:
_requirePassword
set_requirePassword:
_sendAuthorizationDidFinishRequestWithAuthorization:
performAuthorization:completion:
endorseeDevice
sendEventID:event:destinationID:options:completion:
authorizationDaemonServiceWillProcessUserResponse:
endorseeClient
setEndorseeClient:
setEndorseeDevice:
authorizationService
setAuthorizationService:
_endorseeClient
_endorseeDevice
_authorizationService
T@"RPCompanionLinkClient",&,N,V_endorseeClient
T@"RPCompanionLinkDevice",&,N,V_endorseeDevice
T@"AKAuthorizationDaemonService",&,N,V_authorizationService
T@"<AKAuthorizationEndorserRapportClientDelegate>",W,N,V_delegate
presentKeepUsingUIForContext:appleID:completion:
_performBlockWithClient:context:requireFullUICapability:allowRedirectToSettings:block:
dismissKeepUsingUIForContext:withCompletion:
shouldCapturePromptBugForContext:
userInfoFromContext:
triggerAutoBugCaptureWithSubType:andBundleID:userInfo:
presentBasicLoginUIForContext:completion:
dismissBasicLoginUIForContext:completion:
presentLoginAlertForContext:withError:title:message:completion:
_isFullUICapabilityRequiredFor2FA
presentSecondFactorUIForContext:completion:
dismissSecondFactorUIForContext:completion:
presentSecondFactorAlertForContext:withError:title:message:completion:
presentServerProvidedUIForContext:withConfiguration:completion:
dismissServerProvidedUIForContext:completion:
presentNativeRecoveryUIForContext:recoveryContext:completion:
dismissNativeRecoveryUIForContext:completion:
presentBiometricOrPasscodeValidationForContext:completion:
presentFidoAuthForContext:fidoContext:completion:
_isBackgroundClient:eligibleForForegroundAuthenticationWithContext:
sharedConnection
effectiveBoolValueForSetting:
_isForcedEligibleForForegroundAuthentication
_isProxyingForApp
deviceSpecificLocalizedStringWithKey:
_stringByAppendingBlameIfNecessary:withContext:client:
_optionsForCreatingUserNotificationWithTitle:message:defaultButton:alternateButton:serviceType:
notificationDictionaryWithTitle:message:defaultButton:alternateButton:
shouldSkipSettingsLaunchAlert
_notificationDictionaryForClient:context:needFullUI:
showAlert:primaryAction:altAction:cancelAction:
presentServerProvidedUIForContext:client:withConfiguration:completion:
_surrogateManager
_clientUIWorkQueue
T@"AKAuthenticationSurrogateManager",R,N
_setCheckInAllowedToValue:forAccount:
_validateMachineID:
anisetteDataWithError:
ackWithPayload:account:
_performHeartbeatCheckInIfNecessaryWithToken:completion:
_serviceControllerWithProvider:
performHeartbeatCheckInIfNecessaryWithCompletionHandler:
performLivenessCheckInForAccounts:withPushToken:completion:
removeUnusedAndDuplicateAuthKitAccountsWithCompletion:
_postCheckInDataToIDMSWithAccount:pushToken:event:completion:
stringRepresentationForService:
setFollowUpProvider:
setEvent:
setCheckInAllowedForAllAccountsToValue:
performHeartbeatCheckIn
_checkInQueue
UTF8String
appendFormat:
initWithStoreManager:
_processCredentialStateChanges:
_credentialStateDidChange:forApplicationWithClientID:
_notifyCredentialStateChange:forApplicationWithClientID:
_broadcastCredentialStateChange:forApplicationWithClientID:
credentialStateDidChange:completion:
remoteObjectProxyWithProtocol:forBundleID:errorHandler:
bundleIDs
_broadcastCredentialStateChange:forApplicationWithClientID:withHandlerBundleID:
credentialStateDidChange:forApplicationWithClientID:
removeAuthorizationForApplicationWithClientID:completion:
_storeManager
didCompleteWithSuccess:authorizationAlreadyComplete:
didPerformVerificationWithSuccess:duration:
didCompleteVerificationWithSuccess:duration:
_databaseQueue
openTransaction
commitTransaction
_executeQuery:
rollbackTransaction
_unsafe_openDatabase:
_prepareStatementForQuery:error:
bindHandler
bindingFailure
_printStatement:
_stepThroughRowsWithQuery:statement:
_finalizeStatement:error:
rowHandler
queryString
_handleDatabaseFailureError:
_currentDataBaseError
_unsafe_closeDatabase
_unsafe_wipeDatabase:
_unsafe_createDataBase
stringByDeletingLastPathComponent
fileExistsAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
removeItemAtPath:error:
performBlock:
database
databasePath
performTransactionBlockAndWait:
openDatabase:
closeDatabase
shouldAutomaticallyMigrate
setShouldAutomaticallyMigrate:
migrator
setMigrator:
_database
_databasePath
_shouldAutomaticallyMigrate
_migrator
T^{sqlite3=},R,N
T@"<AKSQLiteMigration>",&,N,V_migrator
_setConnection:forBundleID:
_connectionWithProtocol:forBundleID:
remoteObjectProxy
synchronousRemoteObjectProxyWithErrorHandler:
remoteObjectInterface
protocol
_removeConnectionWithProtocol:forBundleID:
addConnectionForClient:
addConnection:forBundleID:
remoteObjectProxyWithProtocol:forBundleID:
synchronousRemoteObjectProxyWithProtocol:forBundleID:errorHandler:
_connectionsByBundleID
setEncryptedPRKC:
setOwnerCustodianAltDSID:
setForceSilentAuth:
verifyRecoveryTransactionWithContext:verifySessionID:error:
custodianCodeConfiguration
ownerDevice
_trustedContactOperationsByIDFromArray:
setCustodianListVersion:
setBeneficiaryListVersion:
setCustodianOperationsByID:
setBeneficiaryOperationsByID:
custodianListVersion
setCustodianListVersion:forAccount:
beneficiaryListVersion
setBeneficiaryListVersion:forAccount:
initiateCustodianSetupWithContext:completion:
finalizeCustodianSetupWithContext:completion:
revokeCustodianWithContext:completion:
updateCustodianRecoveryKeyWithContext:completion:
startCustodianRecoveryRequestWithContext:completion:
fetchCustodianRecoveryCodeConfigurationWithCompletion:
startCustodianRecoveryTransactionWithContext:completion:
fetchCustodianRecoveryTokenWithContext:completion:
fetchCustodianDataRecoveryKeyWithContext:completion:
sendEmbargoEndNotificationFeedbackWithContext:urlKey:completion:
performTrustedContactsDataSync:completion:
fetchManifestOptionsWithInheritanceContext:completion:
setupBeneficiaryWithInheritanceContext:completion:
updateBeneficiaryWithInheritanceContext:completion:
removeBeneficiaryWithInheritanceContext:completion:
_setupBeneficiaryAliasWithInheritanceContext:completion:
_executeRequestWithContext:urlBagKey:shouldSignWithIdentityToken:completion:
setBeneficiaryAltDSID:
setBeneficiaryAccountName:
null
numberOfRowsForTable:withExecutor:
tableInfoForTable:withExecutor:
clearSerializedMemoryCache
removeAllCachedResponses
_cachedURLBagForAltDSID:
_updateURLBagIfNecessaryFromCache:altDSID:urlSwitchData:shouldFallBack:completion:
_updateURLBagIfNecessaryFromCache:altDSID:error:
timeIntervalSinceNow
sharedCacheReliantAnisetteFreeSession
sharedCacheEnabledAnisetteFreeSession
isRecoverableError:
_unsafe_updateCacheWithData:forAltDSID:
cancelDataTask:
IDMSEnvironmentFromBag:
setLastKnownIDMSEnvironment:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:didCreateTask:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
urlBagForAltDSID:error:
clearCache
_bagFetchQueue
_lastUpdated
_cachedBags
piggybackResultString:
didCircleTimeout
set_shouldUseProxiedClientBundleIDForSRP:
_shouldSkipAuthorizationUI
_sanitizedCopy
setAuthorizedRequest:
_createAndPerformRequest:completion:
appleIDAuthorizationURLs
appleOwnedDomains
revokeUpgradeWithContext:client:completion:
fetchPrimaryApplicationInformationForAltDSID:appInformation:client:completion:
initWithListenerEndpoint:
setRemoteObjectInterface:
setAuthkitAccount:
_clientForContext:
_getPresentationContextForRequestContext:client:completion:
_verifyEntitlementsForRequest:
_credentialStateForRequestContext:
_shouldEarlyReturnRequest:forCredentialState:
_prepareRequestContext:forCredentialState:
_isSilentAppTransfer
set_shouldSkipAuthorizationUI:
_determineUIAndPerformRequest:completion:
requestOptions
_performSilentRequest:withCompletion:
_performRequest:completion:
_shouldForceUI
_initiateAuthorizationWithRequestContext:completion:
canPerformCredentialRequest:error:
setSelectedRequest:
setUserSelection:
_shouldForcePrivateEmail
userSelection
setMakePrivateEmail:
_safePerformSRPWithUserResponse:client:completion:
_shouldSkipBiometrics
_iconName
_informativeText
_upgradeContext
_initiateRapportAuthorizationWithRequestContext:completion:
presentAuthorizationUIForContext:completion:
_requestUserAuthorizationForContext:completion:
setRequestedScopes:
presentationContextForRequestContext:client:
canPerformAuthorizationRequest:error:
setAuthorizationRequest:
setUserInformation:
_setupLoginChoicesForPresentationContext:
loginChoices
setPasswordRequest:
_proxiedAssociatedDomains
_fetchCredentialsForAssociatedDomains:completion:
_fetchSafariCredentialsWithCompletion:
set_isSilentAppTransfer:
setExistingStatus:
userInformation
initWithUser:site:
setAppleIDAuth:
user
site
setCreateAppleID:
setLoginChoices:
getCredentialsForAppWithAppID:completionHandler:
getCredentialsForAppWithAppID:externallyVerifiedAndApprovedSharedWebCredentialDomains:completionHandler:
_validateAndProcessUserResponse:client:completion:
_performSRPAuthorizationForUserResponse:client:completion:
authorizationContextWithRequest:client:
authorizationContextHelperWithContext:client:
rawAccountPassword
_completeAuthorizationWithServerResponse:userResponse:client:completion:
initWithServerResponse:
makePrivateEmail
selectedEmail
setSelectedEmail:
isEligibleForUpgradeFromPassword
initWithRequest:
setAppProvidedContext:
setRealUserVerificationData:
setAppProvidedData:
_clientAuthenticatedExternallyWithPassword
set_clientAuthenticatedExternallyWithPassword:
_externalAuthToken
set_externalAuthToken:
shouldContinueWithResponse:error:
_processUserResponse:client:completion:
loginChoice
objectAtIndexedSubscript:
initWithUser:password:
set_clientShouldAuthenticateExternally:
_externalLocalAuthData
validateExternalizedContext:error:
performAuthorizationWithContext:withUserProvidedInformation:completion:
beginAuthorizationWithContext:completion:
continueAuthorizationWithContext:completion:
cancelAuthorizationWithContext:completion:
getPresentationContextForRequestContext:completion:
fetchAppleIDAuthorizationURLSetWithCompletion:
fetchAppleOwnedDomainSetWithCompletion:
revokeUpgradeWithContext:completion:
fetchAppleIDAuthorizeHTMLResponseTemplateWithCompletion:
fetchPrimaryApplicationInformationForWebServiceWithInfo:completion:
continueFetchingIconForRequestContext:completion:
establishConnectionWithNotificationHandlerEndpoint:completion:
establishConnectionWithStateBroadcastHandlerEndpoint:completion:
startDiscoveryWithCompletion:
storeAuthorization:forProxiedRequest:completion:
_shouldStartSatoriVerificationForRequestContext:
rapportClient
setRapportClient:
endorserRapportDiscovery
setEndorserRapportDiscovery:
credentials
setCredentials:
originalRequestContext
setOriginalRequestContext:
_authorizationRealUserLock
_clientProxy
_authSessionManager
_realUserVerificationResults
_rapportClient
_endorserRapportDiscovery
_credentials
_originalRequestContext
T@"AKAuthorizationRapportClient",&,N,V_rapportClient
T@"AKAuthorizationEndorserRapportDiscovery",&,N,V_endorserRapportDiscovery
T@"NSArray",C,N,V_credentials
T@"AKCredentialRequestContext",&,N,V_originalRequestContext
T@"<AKAuthorizationDaemonServiceDelegate>",W,N,V_delegate
request
realUserVerificationData
nonce
T@"AKAuthorizationContext",&,N,V_authContext
initWithPushMessage:
setTitleKey:
subTitleKey
setSubTitleKey:
setBodyKey:
actionButtonText
setActionButtonText:
otherButtonText
setOtherButtonText:
setLocalizedAppsNameList:
_titleKey
_subTitleKey
_bodyKey
_actionButtonText
_otherButtonText
_localizedAppsNameList
T@"NSString",C,N,V_identifier
T@"NSString",C,N,V_titleKey
T@"NSString",C,N,V_subTitleKey
T@"NSString",C,N,V_bodyKey
T@"NSString",C,N,V_actionButtonText
T@"NSString",C,N,V_otherButtonText
T@"NSString",C,N,V_localizedAppsNameList
getServerUILoadDelegateWithServerContext:completion:
requestType
_errorFromServerResponse:
resourceLoadDelegateWithContext:authResponse:
setPhoneNumberCertificate:
_fetchPhoneInformationWithAdditionalInfo:error:
setPhoneInformation:
_fetchIDSCertificateWithCompletionHandler:
_decorateLoadDelegate:withContext:
setProxiedAltDSID:
setProxiedIdentityToken:
setShouldSendSigningHeaders:
decorateWithContext:
_shouldSendGrandSlamTokensForRemoteUI
activeServiceNamesForAccount:
setLoggedInServices:
_shouldSendIdentityTokenForRemoteUI
identityToken
setIdentityToken:
setContinuationToken:
setPasswordResetToken:
_AKIDSCertificateFetchQueue
fetchAnisetteDataForContext:provisionIfNecessary:withCompletion:
syncAnisetteForContext:withSIMData:completion:
eraseAnisetteForContext:withCompletion:
provisionAnisetteForContext:withCompletion:
legacyAnisetteDataForContext:DSID:withCompletion:
fetchPeerAttestationDataForContext:withRequest:completion:
_schemaVersion
_stopObservingLanguageChangeNotification
initWithMachServiceName:
enableTransactions
setBagProvider:
_startMonitoringPushEvents
_setupServices
_startListeningForMessagesFromPairedDevice
_monitorXPCEvents
_beginObservingLanguageChangeNotfication
_exitForSIGTERM
startup
shouldAllowClient:logging:
startWithDelegates:
isUnlocked
startForTesting
_isPasscodeChangeNotification:
_isDeviceScreenUnlockNotification:
_checkScreenUnlockStateFromNotificationDictionary:
_checkKeybagUnlockState
anisetteServiceListener
setAnisetteServiceListener:
authServiceListener
setAuthServiceListener:
authorizationServiceListener
setAuthorizationServiceListener:
custodianServiceListener
setCustodianServiceListener:
privateEmailServiceListener
setPrivateEmailServiceListener:
authorizationEndorserRapportClient
setAuthorizationEndorserRapportClient:
inheritanceDaemonService
setInheritanceDaemonService:
fidoDaemonService
setFidoDaemonService:
_anisetteServiceListener
_authServiceListener
_authorizationServiceListener
_custodianServiceListener
_privateEmailServiceListener
_authorizationEndorserRapportClient
_inheritanceDaemonService
_fidoDaemonService
T@"NSXPCListener",&,N,V_anisetteServiceListener
T@"NSXPCListener",&,N,V_authServiceListener
T@"NSXPCListener",&,N,V_authorizationServiceListener
T@"NSXPCListener",&,N,V_custodianServiceListener
T@"NSXPCListener",&,N,V_privateEmailServiceListener
T@"AKAuthorizationEndorserRapportClient",&,N,V_authorizationEndorserRapportClient
T@"AAFService",&,N,V_inheritanceDaemonService
T@"AAFService",&,N,V_fidoDaemonService
currentRunLoop
_dispatchingAlgorithmForInfo:
scheduledRequestWithCalculation:forRequest:info:
calculation
_insertScheduledRequest:
_scheduleNextRequest
_invalidateScheduledRequest:withErrorCode:
_executeScheduledRequest:
_nextScheduledRequest
fireDate
isEqualToDate:
_schedulerTimerDidFire:
initWithFireDate:interval:target:selector:userInfo:repeats:
addTimer:forMode:
_executeNextScheduledRequest
removeObjectAtIndex:
info
_updateDispatchingAlgorithmForInfo:withResponse:
_setDispatchingAlgorithm:forInfo:
_orderedDispatchingInfoKeys
orderedSetWithArray:
_schedulerQueue
_schedulerLoop
_schedulerTimer
_dispatchingAlgorithmsByInfo
_dispatchingAlgorithmsByInfoLock
_scheduledRequests
_scheduledRequestsLock
setCalculation:
setRequest:
setInfo:
_calculation
_request
_info
T@"AKDispatchingCalculation",&,N,V_calculation
T@"<AKDispatchableRequest>",&,N,V_request
T@"NSDictionary",&,N,V_info
_authenticationContextForRevokingUpgrade
_requestBodyForUpgradeRevokeContext:
clearanceHandler
setClearanceHandler:
_clearanceHandler
T@?,C,N,V_clearanceHandler
_addCachedPasswordInContext:
_shouldClearRequest:withClient:
_tq_invokeTrafficRequest:
_hasActiveAppAuths
_hasActiveDaemonAuths
_hasValuesInMap:
_newZStringWithString:
_updateContext:withPassword:forAppleID:
arrayWithObject:
isContextEligibleForSilentAuth
flushCache
_pendingTrafficRequests
_authenticatingApps
_authenticatingDaemons
_expiringCache
T@"AKAuthenticationSurrogateManager",&,N,V_surrogateManager
performAuthorizationCheckInWithCompletion:
_unsafe_addKeychainItem:shouldAttemptUpdate:error:
_unsafe_updateKeychainItemWithDescriptor:newItem:error:
_unsafe_fetchKeychainItemWithDescriptor:error:
_unsafe_fetchKeychainItemsWithDescriptor:error:
_unsafe_deleteKeychainItemWithDescriptor:error:
addKeychainItem:completion:
addOrUpdateKeychainItem:completion:
updateKeychainItem:completion:
fetchKeychainItemWithDescriptor:completion:
fetchKeychainItemsWithDescriptor:completion:
deleteKeychainItemWithDescriptor:completion:
_keychainQueue
APSEnvironment
isValidEnvironment:
initWithEnvironmentName:namedDelegatePort:queue:
_setEnabledTopics:
setDelegates:
shutdown
ak_hexString
_publicAPSToken
_ensureDesiredAPSEnvironmentIsInUse
publicToken
topic
isTracingEnabled
confirmReceiptForMessage:
_unsafe_processPushMessage:
_shouldProcessPushMessage:withAccount:
_unsafe_tearDownNotificationWithID:
_messageSupportsAlerts:
_queryDelegatesForSuppressAction:
_unsafe_teardownCurrentLoginNotification
_unsafe_presentMessage:forAccount:
_processMessageWithDelegates:
_isPrimaryAccount:
_notifyDelegatesOfMessageActivation:result:
_performCommandForMessage:forAccount:
_unsafe_showNotificationForMessage:account:responseHandler:
_generateLoginCodeForAccount:withIncomingMessage:
_startPasswordResetFlowForAccount:
localizedDescription
_unsafe_showLoginNotificationWithCode:incomingMessage:piggy:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveToken:forInfo:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
_notifyDelegatesOfMessageActivation:result:payload:
tearDownLoginNotifications
setEnableCriticalReliability:
setActiveCode:
_apsConnection
_activeAPSEnvironment
_apsTokenSemaphore
_pushServiceQueue
_loginCodeNotificationID
_appleCareNotificationID
_notificationsByPushID
_pushDelegates
_pushTopics
_pcsAuthPushHandler
_activeCode
T@"NSString",C,N,V_activeCode
storeModernRecoveryURL
setQueryString:
_bindStatement:withParameter:atPosition:
setBindingFailure:
_bindingFailure
_queryString
_bindHandler
_rowHandler
T@"NSString",C,N,V_queryString
TB,N,V_bindingFailure
T@?,C,N,V_bindHandler
T@?,C,N,V_rowHandler
setShouldSendPhoneNumber:
recoveryToken
ak_addFidoRecoveryTokenHeader:
_recoveryToken
T@"NSString",C,N,V_recoveryToken
_attachAdditionalHeaders:toContextHelper:
_performRequestWithContext:responseHandler:
_performRequestWithURL:context:error:
contextHelper
_url
_contextHelper
T@"NSURL",R,N,V_url
T@"AKSRPContextHelper",R,N,V_contextHelper
condition
setCondition:
_condition
_payload
T@"NSCondition",&,N,V_condition
T@"AKCircleRequestPayload",&,N,V_payload
setQualityOfService:
cancelAllOperations
waitUntilAllOperationsAreFinished
payloadWithMessage:
isAcceptingPayload
_hasPrimaryiCloudAccountForPayload:
isRequestingPayload
_processPiggybackPayload:
_processPendingCompletionsForPayload:
_acceptingControllerForTransactionId:
_removeAcceptingControllerForTransaction:
hasPrimaryiCloudAccountForAltDSID:
waitForReply
waitForReplyTimeout
_processingTimeOut
isCancelled
_notifyOfTimeout
addExecutionBlock:
addOperation:
payloadWithResponseData:forCircleStep:
startRequestSessionWithController:completion:
_acceptingControllers
_pendingReplies
_requestingController
_piggybackingRequestQueue
_circleRequestProcessingQueue
_requiresHSA2Repair
event
internationalMobileEquipmentIdentity
internationalMobileEquipmentIdentity2
userChosenName
mobileEquipmentIdentifier
integratedCircuitCardIdentifier
color
enclosureColor
coverGlassColor
housingColor
backingColor
modelNumber
currentLocale
localeIdentifier
followUpProvider
pendingAuthKitFollowUpPayload:
DSIDForAccount:
cdpAccountIsICDPEnabledForDSID:
userInfoFromAccount:
primaryiCloudAccount
_event
_pushToken
_followUpProvider
T@"NSString",C,N,V_event
T@"NSString",C,N,V_pushToken
T@"<AKFollowUpProvider>",&,N,V_followUpProvider
setModifiedName
didSelectAnonymousEmail:didCancel:
initWithResponseInfo:
eligibleForContinuationKeyAuthentication
MLBSerialNumber
ROMAddress
locale
_addExperimentalFeaturesInfoToClientProvidedData:
requestedCloudPartition
shouldEnableTestAccountMode
shouldHideInternalBuildHeader
ak_serverFriendlyString
decodedRecoveryPET
decodedRecoveryIdentityToken
ak_anisetteHeadersWithData:
internalFeaturesMaskValue
biometricAuth
passcodeAuth
accountRecoveryMasterKey
_ignoreInternalTokens
_biometricAuth
_passcodeAuth
_retryAuth
_username
_accountRecoveryMasterKey
_decodedRecoveryPET
_decodedRecoveryIdentityToken
_authKitAccount
T@"NSString",C,N,V_username
T@"NSString",C,N,V_password
T@"NSString",C,N,V_accountRecoveryMasterKey
T@"NSString",C,N,V_decodedRecoveryPET
T@"NSString",C,N,V_decodedRecoveryIdentityToken
T@"ACAccount",&,N,V_authKitAccount
TB,N,V_ignoreInternalTokens
contextSecretValidForSRP
TB,R,N,GisContextSecretValidForSRP
T@"<AKAuthenticationContext>",&,N,V_authContext
TB,N,V_biometricAuth
TB,N,V_passcodeAuth
TB,N,V_retryAuth
T@"NSDictionary",C,N,V_additionalHeaders
performAuthorization:companionLinkClient:advertisingService:completion:
_verifyAccountTrustWithRequestContext:completion:
openApplicationWithBundleID:
setControlFlags:
_invalidate
_handleStartAuthorizingWithRequest:options:responseHandler:
registerRequestID:options:handler:
_handleAuthorizationDidFinishWithRequest:options:responseHandler:
_handleDidStartServerAuthorizationWithEvent:options:
registerEventID:options:handler:
_callCompletionWithAuthorization:error:
setAppBundleID:
setFlags:
setAdvertisingService:
_presentUI
_configureLinkClientWithService:companionLinkClient:requestContext:
_dismissUI
_presentUIWithControllerClassName:extraOptions:presentationServiceCompletion:
_fetchTVAppIcon
_sendDidTapNotificationMessage
set_proxiedClientAppName:
set_proxiedClientBundleID:
set_proxiedClientAppID:
set_proxiedClientTeamID:
set_iconData:
set_iconScale:
set_proxiedAssociatedDomains:
_fetchAssociatedDomainsWithCompletionHandler:
getApprovedSharedWebCredentialsEntriesSortedByHighestValueForAppWithAppID:completionHandler:
linkClient
setLinkClient:
authorizationCompletion
setAuthorizationCompletion:
companionServicePresenter
setCompanionServicePresenter:
advertisingService
hasEndorserAuthorizing
setHasEndorserAuthorizing:
setCredentialRequestContext:
tvAppIconData
setTvAppIconData:
tvAppIconScale
setTvAppIconScale:
_hasEndorserAuthorizing
_linkClient
_authorizationCompletion
_companionServicePresenter
_advertisingService
_credentialRequestContext
_tvAppIconData
_tvAppIconScale
T@"RPCompanionLinkClient",&,N,V_linkClient
T@?,C,N,V_authorizationCompletion
T@"AKAuthorizationTVServicePresenter",&,N,V_companionServicePresenter
T@"RPAppSignInService",&,N,V_advertisingService
TB,N,V_hasEndorserAuthorizing
T@"AKCredentialRequestContext",&,N,V_credentialRequestContext
T@"NSData",&,N,V_tvAppIconData
T@"NSNumber",&,N,V_tvAppIconScale
requestTapToRadarWithTitle:message:componentName:componentVersion:componentID:keywords:
requestTapToRadarWithTitle:message:keywords:
setScheme:
setHost:
openURL:configuration:completionHandler:
ak_addShortLivedTokenHeaderWithIdentityToken:forAltDSID:
_performTokenUpgradeWithContext:completion:
setPresentationType:
_showIdentityProviderUIFromResponse:completion:
setHTTPContentType:
setRequestType:
setWhitelistedPathURLs:
_handleIdentityProviderResponsePayload:completion:
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v40@0:8@16@24@?32
v32@0:8@"AKFidoContext"16@?<v@?@"AKFidoRegistrationResponse"@"NSError">24
v32@0:8@"AKFidoContext"16@?<v@?@"AKFidoAuthenticationResponse"@"NSError">24
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"AKFidoAuthenticationResponse"@"NSDictionary"@"NSError">24
v40@0:8@"AKAppleIDAuthenticationContext"16@"NSString"24@?<v@?@"AKFidoAuthenticationResponse"@"NSDictionary"@"NSError">32
v24@0:8@16
v56@0:8@16@24@32@40@?48
v16@0:8
@"AKFidoAuthorizationController"
@"AKFidoDaemonServerHandler"
v32@0:8@16@24
@40@0:8@16@24@32
@24@0:8@16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableDictionary"
v32@0:8@16Q24
v40@0:8@16Q24@32
v24@0:8@"AKPushMessage"16
B24@0:8@"AKPushMessage"16
v32@0:8@"AKPushMessage"16Q24
v40@0:8@"AKPushMessage"16Q24@"NSDictionary"32
v24@0:8@"NSString"16
@32@0:8@16@24
v48@0:8@16@24@32@?40
B40@0:8@16@24^@32
@24@0:8Q16
@"<AKFollowUpItemFactory>"
@"<AKFollowUpProvider>"
@"AKPushMessage"
@"<AKFollowUpControllerServiceProvider>"
v24@0:8^@16
B36@0:8@16B24^@28
B32@0:8@16^@24
@32@0:8@16^@24
i16@0:8
B28@0:8i16^@20
@24@0:8^@16
@"AKSQLiteExecutor"
@"NSArray"
@"AKUserInformation"
@"NSDictionary"
@"AKCredentialRequestContext"
@48@0:8{?=[8I]}16
@24@0:8@?16
@"NSXPCConnection"
@"NSString"
@"BSAuditToken"
v24@0:8q16
@"AKAppleIDAuthenticationContext"
@"AKCircleRequestContext"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B28@0:8@16B24
q16@0:8
@"NSNumber"
@"AKMasterToken"
@"AKToken"
@"NSData"
i24@0:8^@16
v36@0:8B16@20@28
v32@0:8Q16@?24
v24@0:8@?16
@"AKCircleRequestPayload"
@"KCJoiningAcceptAccountCircleDelegate"
@"AKCAPiggybackReporter"
@"AKProximityController"
@"AKFuture"
@"KCJoiningAcceptSession"
@"AKConfiguration"
v20@0:8B16
@"AKAuthenticationServerResponse"
@"AKServerRequestConfiguration"
v40@0:8@16@24@32
@"NSURLRequest"24@0:8^@16
B32@0:8@"NSData"16^@24
@"NSDictionary"32@0:8@"NSData"16^@24
@"AKAppleIDAuthenticationContext"16@0:8
@"AKClient"16@0:8
v24@0:8@"AKClient"16
@36@0:8@16@24B32
B32@0:8@16@24
@"AKClient"
@"NSURL"
i32@0:8^Q16Q24
i32@0:8Q16Q24
i56@0:8Q16^*24^I32^*40^I48
i24@0:8^v16
i24@0:8Q16
i60@0:8Q16r*24I32^*36^I44^I52
i44@0:8I16r*20I28r*32I40
i20@0:8I16
i68@0:8Q16r*24I32^*36^I44^*52^I60
@"AKAuthenticationUILiaison"
@"AKRequestDispatcher"
@"AKCASatoriReporter"
@"AKDispatchingCalculation"16@0:8
@32@0:8d16Q24
d16@0:8
@"AKKeychainItemDescriptor"
@48@0:8@16Q24@32@?40
@"NSDate"
@?16@0:8
@"NSUUID"
v48@0:8@16@24B32B36@?40
v48@0:8@16@?24@32@40
@"<AKAuthenticationSurrogateManagerDelegate>"
@"AKAuthenticationSettingsLauncher"
@"NSLock"
@"AKAccountManager"
@"AKSurrogateAuthenticationIDGenerator"
@"NSObject<OS_dispatch_queue>"
@"AKInheritanceContext"
v24@0:8Q16
v24@0:8@"AKSQLiteExecutor"16
v40@0:8@16@24d32
Q24@0:8Q16
v28@0:8B16@?20
v24@0:8@?<v@?B@"NSError">16
v32@0:8@"NSData"16@?<v@?B@"NSError">24
v28@0:8B16@?<v@?@"AKAnisetteData"@"NSError">20
v32@0:8@"NSString"16@?<v@?@"AKAnisetteData"@"NSError">24
v32@0:8@"NSURLRequest"16@?<v@?@"AKAttestationData"@"NSError">24
@32@0:8Q16^@24
@40@0:8@16@24Q32
@"AKCustodianContext"
@28@0:8@16B24
@24@0:8^{_NSZone=}16
Q24@0:8@16
d24@0:8Q16
{mach_timebase_info="numer"I"denom"I}
@"AKDeviceListRequestContext"
v32@0:8@"<AKProximityEngine>"16@"CBManager"24
v24@0:8@"<AKProximityEngine>"16
v24@0:8d16
@"NSObject<OS_dispatch_source>"
@"<AKProximityEngine>"
@"AKAuthorizationUserResponse"
@"NSObject<OS_os_transaction>"
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v40@0:8Q16@24@?32
v52@0:8@16B24@28@36@?44
@"IDSService"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v48@0:8@"NSString"16@"NSString"24@"NSDictionary"32@"NSError"40
@"NSXPCListener"
@"APSIncomingMessage"
@"UNUserNotificationCenter"
^{__AppleIDAuthSupportData=}16@0:8
^{__AppleIDAuthSupportData=}
@"CoreTelephonyClient"
v24@0:8@?<v@?@"NSDictionary">16
v24@0:8@"NSError"16
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
@40@0:8@16@24@?32
@"<AKURLRequestProvider>"
@"<AKAuthHandler>"
v32@0:8@"AKPiggybackRequestingController"16@?<v@?@"NSNumber"@"NSError">24
v40@0:8@"AKPiggybackRequestingController"16@"NSError"24@?<v@?@"NSNumber"@"NSError">32
v40@0:8@"AKPiggybackRequestingController"16@"NSNumber"24@?<v@?@"AKAuthenticationServerResponse"@"NSError">32
v32@0:8@"AKPiggybackRequestingController"16@?<v@?@"NSDictionary"@"NSError">24
v40@0:8@"AKPiggybackRequestingController"16@"NSError"24@?<v@?@"NSDictionary"@"NSError">32
B24@0:8@"NSDictionary"16
v40@0:8@"AKDServerUIContext"16@"NSDictionary"24@?<v@?@"AKAuthenticationServerResponse"@"NSDictionary"@"NSError">32
v44@0:8@16B24q28@?36
v40@0:8@16q24@?32
Vv24@0:8@?16
v36@0:8B16@20@?28
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSNumber"@"NSError">16
v40@0:8Q16@"NSString"24@?<v@?B@"NSError">32
v40@0:8@"NSHTTPURLResponse"16@"NSString"24@?<v@?B@"NSError">32
v40@0:8@"NSHTTPURLResponse"16@"AKAppleIDAuthenticationContext"24@?<v@?B@"NSError">32
v32@0:8@"NSString"16@?<v@?@"AKAppleIDServerResourceLoadDelegate"@"NSError">24
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"AKAppleIDServerResourceLoadDelegate"@"NSError">24
v44@0:8@"NSString"16B24q28@?<v@?B@"NSError">36
v44@0:8@"NSNumber"16B24q28@?<v@?B@"NSError">36
v32@0:8@"NSString"16@?<v@?@"AKUserInformation"@"NSError">24
v40@0:8@"NSString"16@"AKUserInformation"24@?<v@?B@"NSError">32
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?Q@"NSError">24
v32@0:8@"AKDeviceListRequestContext"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"AKApplicationMetadataInfo"@"NSError">24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v48@0:8@"<NSSecureCoding>"16@"NSString"24@"NSString"32@?<v@?B@"NSError">40
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSError">24
v40@0:8@"NSString"16q24@?<v@?B@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?B@"NSError">32
Vv24@0:8@?<v@?B@"NSError">16
v32@0:8@"AKCircleRequestContext"16@?<v@?@"AKCircleRequestPayload"@"NSError">24
v32@0:8@"AKAccountRecoveryContext"16@?<v@?@"NSDictionary"@"NSError">24
v40@0:8@"NSString"16@"AKAccountRecoveryContext"24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@"NSDictionary"16@"AKAppleIDAuthenticationContext"24@?<v@?B@"NSError">32
v32@0:8@"AKFollowUpTearDownContext"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSError">16
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSDictionary"@"NSError">24
v36@0:8B16@"NSString"20@?<v@?@"NSDictionary"@"NSError">28
v64@0:8Q16@24@32@40@48@?56
v64@0:8@16@24@32@40@48@?56
v80@0:8@16@24@32@40@48@56@64@?72
v76@0:8@16@24@32B40@44@52@60@?68
v64@0:8@16@24@32@40@48^@56
B64@0:8@16@24@32@40@48^@56
v68@0:8@16@24@32B40@44@52@?60
v40@0:8@16Q24@?32
B48@0:8@16@24@32^@40
@32@0:8@16q24
@"NSObject<AKAppleIDAuthSupportProxy>"
@"AKAuthenticationTrafficController"
@"CUTReachability"
v24@0:8@"AKAuthorizationEndorserRapportClient"16
B24@0:8^@16
@"RPCompanionLinkClient"
@"AKAuthorizationEndorserRapportClient"
@20@0:8B16
@"NSString"20@0:8B16
B32@0:8@"NSString"16^@24
v36@0:8@16B24@?28
@"<AKPiggybackRequestingControllerDelegate>"
@"KCJoiningRequestSecretSession"
@"NSError"
v24@0:8@"SBSRemoteAlertHandle"16
v32@0:8@"SBSRemoteAlertHandle"16@"NSError"24
v40@0:8@"AKPrivateEmail"16@"NSError"24@?<v@?B@"NSError">32
@"SBSRemoteAlertHandle"
@"<AKServiceController>"24@0:8@"AKAppleIDAuthenticationContext"16
v40@0:8@"NSString"16@"NSString"24@?<v@?@"AKPrivateEmail"@"NSError">32
v32@0:8@"AKPrivateEmailContext"16@?<v@?@"AKPrivateEmail"@"NSError">24
v32@0:8@"AKPrivateEmailContext"16@?<v@?@"AKPrivateEmailContext"@"NSError">24
v44@0:8@16B24@28@?36
@32@0:8d16@24
@"NSCondition"
@"NSMutableArray"
v32@0:8@"AKDevice"16@?<v@?B@"NSError">24
v40@0:8@"NSData"16@"AKDevice"24@?<v@?B@"NSError">32
v36@0:8B16@"AKDevice"20@?<v@?@"AKAnisetteData"@"NSError">28
v40@0:8@"NSString"16@"AKDevice"24@?<v@?@"AKAnisetteData"@"NSError">32
v40@0:8@"AKDevice"16@"NSURLRequest"24@?<v@?@"AKAttestationData"@"NSError">32
@"AKNativeAnisetteService"
@"AKAbsintheSigner"
@"AKAttestationSigner"
v32@0:8@"NSData"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"NSDictionary"16@"NSDictionary"24@?<v@?@"NSDictionary"@"NSData"@"NSError">32
B36@0:8@16@24B32
@40@0:8@16^B24^@32
@56@0:8@16@24@32Q40@48
v32@0:8@"<AKProximityEngineController>"16@"NSObject<OS_dispatch_queue>"24
@"<AKProximityEngineController>"16@0:8
@"NSObject<OS_dispatch_queue>"16@0:8
@"<AKProximityEngineController>"
v36@0:8@16S24@28
v24@0:8@"CBPeripheralManager"16
v32@0:8@"CBPeripheralManager"16@"NSDictionary"24
v32@0:8@"CBPeripheralManager"16@"NSError"24
v40@0:8@"CBPeripheralManager"16@"CBService"24@"NSError"32
v40@0:8@"CBPeripheralManager"16@"CBCentral"24@"CBCharacteristic"32
v32@0:8@"CBPeripheralManager"16@"CBATTRequest"24
v32@0:8@"CBPeripheralManager"16@"NSArray"24
v36@0:8@"CBPeripheralManager"16S24@"NSError"28
v40@0:8@"CBPeripheralManager"16@"CBL2CAPChannel"24@"NSError"32
@"CBPeripheralManager"
v40@0:8@16q24@32
v24@0:8@"CBCentralManager"16
v32@0:8@"CBCentralManager"16@"NSDictionary"24
v48@0:8@"CBCentralManager"16@"CBPeripheral"24@"NSDictionary"32@"NSNumber"40
v32@0:8@"CBCentralManager"16@"CBPeripheral"24
v40@0:8@"CBCentralManager"16@"CBPeripheral"24@"NSError"32
v40@0:8@"CBCentralManager"16q24@"CBPeripheral"32
v24@0:8@"CBPeripheral"16
v32@0:8@"CBPeripheral"16@"NSArray"24
v32@0:8@"CBPeripheral"16@"NSError"24
v40@0:8@"CBPeripheral"16@"NSNumber"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBService"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBCharacteristic"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBDescriptor"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBL2CAPChannel"24@"NSError"32
@"CBCentralManager"
v40@0:8@16^@24^@32
v32@0:8@"AKAuthorizationUserResponse"16@?<v@?@"AKAuthorization"@"NSError">24
v40@0:8@"AKAuthorization"16@"NSError"24@?<v@?B@"NSError">32
v24@0:8@?<v@?@"NSData"@"NSError">16
@24@0:8@"<AKURLRequestProvider>"16
v24@0:8@"<AKAuthHandler>"16
v24@0:8@?<v@?@"NSHTTPURLResponse"@"NSData"@"NSError">16
@"AKRequestDispatcher"16@0:8
v24@0:8@"AKRequestDispatcher"16
B32@0:8@16Q24
@"AKDevice"
B32@0:8q16@24
q24@0:8@16
q32@0:8q16@24
@52@0:8@16@24@32@40B48
@68@0:8@16@24@32@40@48@56B64
^{__CFUserNotification=}52@0:8@16@24@32@40B48
^{__CFUserNotification=}68@0:8@16@24@32@40@48@56B64
v28@0:8@16B24
v32@0:8Q16@24
v40@0:8^{__CFUserNotification=}16@24@?32
@56@0:8@16@24@32@40@48
^{__CFUserNotification=}56@0:8@16@24@32@40@48
@44@0:8@16B24@28@36
v32@0:8^{__CFUserNotification=}16@?24
B24@0:8Q16
^{__CFUserNotification=}
v24@0:8@"AKAuthorizationDaemonService"16
@"<AKAuthorizationEndorserRapportClientDelegate>"
@"RPCompanionLinkDevice"
@"AKAuthorizationDaemonService"
v44@0:8@16@24B32@?36
v44@0:8@"AKAppleIDAuthenticationContext"16@"AKClient"24B32@?<v@?B@"NSError">36
@56@0:8@16@24@32@40q48
@"AKAuthenticationSurrogateManager"
v28@0:8B16@20
v40@0:8q16@24@?32
v32@0:8q16@?24
v32@0:8q16@?<v@?B@"NSError">24
v32@0:8q16@24
v32@0:8q16@"NSString"24
v40@0:8q16@24@32
@"AKAuthorizationStoreManager"
v24@0:8B16B20
v28@0:8B16Q20
v36@0:8@16B24@28
^{sqlite3=}16@0:8
i24@0:8@16
B32@0:8@16@?24
q32@0:8@16^@24
v24@0:8^{sqlite3_stmt=}16
v32@0:8@16^{sqlite3_stmt=}24
^{sqlite3_stmt=}32@0:8@16^@24
B32@0:8^{sqlite3_stmt=}16^@24
^{sqlite3=}
@"<AKSQLiteMigration>"
v32@0:8@"AKCustodianContext"16@?<v@?@"AKCustodianSetupResult"@"NSError">24
v32@0:8@"AKCustodianContext"16@?<v@?@"NSError">24
v32@0:8@"AKCustodianContext"16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v32@0:8@"AKCustodianContext"16@?<v@?B@"NSError">24
v32@0:8@"AKCustodianContext"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"AKCustodianContext"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"AKCustodianContext"16@?<v@?@"AKTrustedContactsSyncResult"@"NSError">24
v32@0:8@"AKInheritanceContext"16@?<v@?@"AKBeneficiaryManifest"@"NSError">24
v32@0:8@"AKInheritanceContext"16@?<v@?@"NSError">24
v32@0:8@"AKInheritanceCLIContext"16@?<v@?@"AKBeneficiaryAliasSetupResult"@"NSError">24
@32@0:8q16^{sqlite3_stmt=}24
i32@0:8@16@24
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24q32q40q48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@36@0:8B16@20^@28
@"NSDictionary"32@0:8@"NSString"16^@24
@"NSDictionary"36@0:8B16@"NSString"20^@28
v48@0:8B16@20@28B36@?40
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"AKAuthorization"@"NSError">24
v40@0:8@"AKCredentialRequestContext"16@"AKAuthorizationUserResponse"24@?<v@?@"AKAuthorization"@"NSError">32
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"AKAuthorizationUserResponse"@"NSError">24
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"NSError">24
v32@0:8@"AKAuthorizationCredentialStateRequest"16@?<v@?q@"NSError">24
v32@0:8@"NSString"16@?<v@?q@"NSError">24
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"AKAuthorizationPresentationContext"@"NSError">24
v24@0:8@?<v@?@"NSSet"@"NSError">16
v32@0:8@"AKAuthorizationRevokeUpgradeContext"16@?<v@?B@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"NSData"@"NSError">24
v32@0:8@"NSXPCListenerEndpoint"16@?<v@?B@"NSError">24
v40@0:8@"AKAuthorization"16@"AKCredentialRequestContext"24@?<v@?B@"NSError">32
B32@0:8@16q24
v32@0:8@16q24
@"<AKAuthorizationClientProtocol>"
@"AKAuthorizationSessionManager"
@"<AKAuthorizationDaemonServiceDelegate>"
@"AKAuthorizationRapportClient"
@"AKAuthorizationEndorserRapportDiscovery"
@"AKAuthorizationContext"
@"<AKDServerUIDelegate>"
@"<AKAnisetteProvisioningClientProtocol>"
@"AAFService"
@"NSRunLoop"
@"NSTimer"
@"AKDispatchingCalculation"
@"<AKDispatchableRequest>"
@"AKExpiringCache"
^{__AppleIDAuthSupportTokenData=}32@0:8@16^@24
@56@0:8^{__AppleIDAuthSupportTokenData=}16@24@32@40^@48
^{__AppleIDAuthSupportTokenData=}32@0:8@"NSData"16^@24
@"NSDictionary"56@0:8^{__AppleIDAuthSupportTokenData=}16@"NSURL"24@"NSArray"32@"NSDictionary"40^@48
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
v36@0:8@16@24B32
@"APSConnection"
@"NSObject<OS_dispatch_semaphore>"
@"NSSet"
@"AKPCSAuthPushHandler"
v32@0:8@16^@24
B36@0:8^{sqlite3_stmt=}16@24i32
B40@0:8@16@24^^{__CFError}32
@"AKSRPContextHelper"
@32@0:8@16@?24
@"AKPiggybackRequestingController"
@"NSOperationQueue"
@"ACAccount"
@"<AKAuthenticationContext>"
@"AKAuthorizationTVServicePresenter"
@"RPAppSignInService"
Starting Fido registration with context: %@
Starting Fido authentication with context: %@
Error starting fido auth: %@
Starting Fido recovery with context: %@
Error authorizing fido auth: %@
Error finishing fido auth: %@
authkit/icon-fetching
Follow up push message is for an altDSID not signed in to iCloud: %@
Suppressing repair push for non-primary account
Refreshing follow ups for %@ with info %@
No body parameters in Follow Up response!
Failed to synchronize local follow up state: %@
Synchronizing local follow up state
Insertion Candidates: %@
Deleting: %@
Failed to clear existing follow ups: %@
Clearing Notifications: %@
Inserting: %@
Detected an item without an identifier, invalid payload
Updating existing item with identifier: %@
Existing item notification was previously dismissed, ignoring incoming notification
Incoming notification was forced, keeping it!
Found incoming sparse followups: %@
Found incoming full followups: %@
Unknown action, ignoring...
Sending tear down payload: %@
Pending Follow Up items matching tear down message id: %@
Pending Follow Up items: %@
Tear down follow up items: %@
Converting key to hashed value
Added:%@
Failed to persist private email with key:%@ error: %@
Remove:%@
Failed to remove private email with key:%@ error: %@
Failed to persist private emails list version with error: %@
Failed to persist private emails protocol version with error: %@
Tried to commit without listVersion. Info:%@
Failed to fetch authorized all private email with error: %@
State of app %@: %d.
XPC connection is nil, couldn't create remote object.
Unable to determine bundle ID of client %@ using NSBundle API. Falling back to CF.
Missing client info for circle request
Missing push token for circle request
Got malformed "%@" configuration info!
Got insecure "%@" configuration info!
Creating AKAuthenticationServerResponse with status: %@ contents: %@
Invalid/missing value for key alias: %@
Invalid value type for key: %@
Successfully obtained new CK from SRP
Successfully obtained new PRK from SRP
Encoded payload for federated auth: %@
No altDSID for auth server response. Could be bad.
No DSID for auth server response. Could be bad.
Invalid/missing value for key acname: %@
Invalid value for key ut: %@
Invalid value for key authType: %@
Invalid value for key Age of Majority: %@
Invalid value for key primary email vetted: %@
Invalid type for key orgType: %@
Invalid value for key orgType: %@
Invalid type for key orgName: %@
Invalid type for key isNotificationEmailAvailable: %@
Invalid type for key notificationEmail: %@
Updating with secondary auth response: %@
Trying to update an auth response without an existing _masterToken. Trouble waiting down the line.
Unable to update master token
Successfully obtained a new master token.
Successfully obtained a new PET.
Successfully obtained a new HB token.
Invalid format for service token in header %@
Updating token for service ID %@.
Successfully obtained new SLT from secondary auth
Successfully obtained new CK from secondary auth
Value for %@ is missing/invalid!
Successfully obtained new PRK from secondary auth.
No value for %@ header.
Invalid value value for %@ header: %@
Value for %@ is: %@
Invalid type for DSID value: %@
Will tear down an existing piggybacking session
Starting a piggybacking session
 CircleStep=%{public,signpost.telemetry:string1,name=CircleStep}@  enableTelemetry=YES 
BEGIN [%lld]: PiggyAcceptSessionForAcceptController  CircleStep=%{public,signpost.telemetry:string1,name=CircleStep}@  enableTelemetry=YES 
 CircleStep=%{public,signpost.telemetry:string2,name=CircleStep}@  Error=%{public,signpost.telemetry:number2,name=Error}d 
PiggyAcceptSessionForAcceptController
END [%lld] %fs:PiggyAcceptSessionForAcceptController  CircleStep=%{public,signpost.telemetry:string2,name=CircleStep}@  Error=%{public,signpost.telemetry:number2,name=Error}d 
Approving device could not accept piggybacking session: %@
%@: Processing physical proximity detection (%@) with replyContext (%@) for pushPayload (%@)
 PresenceMode=%{public,signpost.telemetry:number1,name=PresenceMode}d  enableTelemetry=YES 
BEGIN [%lld]: PiggybackingProcessPressenceForAcceptController  PresenceMode=%{public,signpost.telemetry:number1,name=PresenceMode}d  enableTelemetry=YES 
 Results=%{public,signpost.telemetry:string1,name=Results}@ 
PiggybackingProcessPressenceForAcceptControllerResults
EVENT [%lld] %fs:PiggybackingProcessPressenceForAcceptControllerResults  Results=%{public,signpost.telemetry:string1,name=Results}@ 
 Results=%{public,signpost.telemetry:string2,name=Results}@ 
PiggybackingProcessPressenceForAcceptControllerResultsOverrides
EVENT [%lld] %fs:PiggybackingProcessPressenceForAcceptControllerResultsOverrides  Results=%{public,signpost.telemetry:string2,name=Results}@ 
ReportedEnforceModeFailure
EVENT [%lld] %fs:ReportedEnforceModeFailure 
%@: Proximity check failed while handling push (%@)
 CheckPassed=%{public,signpost.telemetry:number2,name=CheckPassed}d 
PiggybackingProcessPressenceForAcceptController
END [%lld] %fs:PiggybackingProcessPressenceForAcceptController  CheckPassed=%{public,signpost.telemetry:number2,name=CheckPassed}d 
Will process message using session: %@ - %@
BEGIN [%lld]: PiggyClientInfoForAcceptController  CircleStep=%{public,signpost.telemetry:string1,name=CircleStep}@  enableTelemetry=YES 
PiggyClientInfoForAcceptController
END [%lld] %fs:PiggyClientInfoForAcceptController  CircleStep=%{public,signpost.telemetry:string2,name=CircleStep}@  Error=%{public,signpost.telemetry:number2,name=Error}d 
Did process message using session: %@ - %@
%@: Proximity was not detected and is being enforced
Failed to process data with error: %@
Approver is reporting as done...
Initializing accept session for DSID: %@
Failed to verify requesting secret, attempts: %@
%@: Determined proximity scanner should be started
%@: Unable to start proximity scanner with nil presenceSID from pushPayload (%@)
%@: Determined proximity scanner should not be started (wantsPresence: %@, circleStep: %lu, presenceSID: %@)
 enableTelemetry=YES 
PiggybackingDetectPresenceForAcceptController
BEGIN [%lld]: PiggybackingDetectPresenceForAcceptController  enableTelemetry=YES 
 FoundDevice=%{public,signpost.telemetry:number1,name=FoundDevice}d 
END [%lld] %fs:PiggybackingDetectPresenceForAcceptController  FoundDevice=%{public,signpost.telemetry:number1,name=FoundDevice}d 
Piggyback accepting controller has been released, proximity controller should have been invalidated
%@: Proximity controller (%@) found a match
%@: Proximity controller (%@) has been invalidated and prox was not detected
%@: Setting up proximity controller (%@) with presenceSID (%{mask.hash}@)
%@: Determined checking for proximity is needed
%@: Determined checking for proximity is not needed for circleStep (%lu) with controller (%@)
PiggybackingCheckPresenceForAcceptController
BEGIN [%lld]: PiggybackingCheckPresenceForAcceptController  enableTelemetry=YES 
%@: Proximity has been detected
%@: Proximity was not detected
END [%lld] %fs:PiggybackingCheckPresenceForAcceptController  FoundDevice=%{public,signpost.telemetry:number1,name=FoundDevice}d 
Authorization List version matches the local authorization list version, skipping update
Attempted to store incorrect authorization type
Cannot store an authorization credential with nil teamID/bundleID
Attempting to delete application with clientID: %@ from DB
Deleting application with clientID: %@ failed with error: %@
Application with clientID: %@ removed from database successfully
Revoking all applications failed with error: %@
Storing developer team failed with error: %@
Storing consented applications failed with error: %@
Failed to fetch applications to be revoked with error: %@
Failed to revoke applications with error: %@
Failed to fetch applications with error: %@, continuing with fetched applications if any...
Failed to fetch authorized client IDs with error: %@, continuing with the fetched clients if any...
Encountered error setting app list version: %@
Failed to update database version with error: %@
Attempting to build request without a URL, bad things to come...
Failed to sign the request with error: %@
Request: %@
Request Headers: %@
Request Body: %@
%@: Server returned no response, treating as success
%@: Cannot generate response dictionary for expected response type of UTF8String
%@: Unexpected error code value (%@) for key (%@)
%@: Server request failed with code (%@) and message (%@)
Server returned no response, treating as success
No body parameters in fetch user info response!
An error occurred performing request. Server message: %@
response type is JSON
Server request failed with error code: %i
Response Body: %@
Can't validate response for type: %lu
Invalid key %@ in server response: %@
AKAccountRecoveryController recoveryContext is valid %@:
Failed to retrieve recovery data with error. %@
Native recovery flow completed
Native recovery flow: recoveredInfo %@
Attempting to process native recovery response
shouldSendServerResponseForRecoveredInfo is true
responseContext: %@
Failed to fetch idMS completion url from provided info
We determined that we should not be resuming server UI flow at this point.  There is nothing else for us to do here.
Invalid native recovery server response detected
Internal or private access entitlement required but missing!
Missing identity token
Recovery token renewal will start.
Request to renew recovery token failed! Error: %@
Renewal of recovery token came back with HTTP status code: %@
Unexpected HTTP response code: %@
No basic auth URL!
MK was accepted
MK was accepted, but we did not get expected data... failing
Attempting to persist verifier
Failed to persist verifier with error: %@
Verifier persisted
Recovery context is valid...
Recovery context is invalid...
_recoveryContextFromServerInfo error: %@
%@: Requesting attestation data for proxied auth context (%@)
%@: Failed to fetch attestation data for proxied auth context (%@) with error (%@)
%@: Fetched attestation data (%@) for proxied auth context (%@)
Context eligibility for piggybacking: %@
Client is eligible for piggybacking: %@
Client has requested password-only auth.
Client has requested a short-lived token.
Client has request a recovery PET.
Client is exempt from mandatory UI security upgrade.
Client is requesting password only auth. Security upgrade will not be offered.
Client is requesting ephemeral auth. Security upgrade will not be offered.
Client logging in for first time is using full AuthKit UI, security upgrade should be offered.
Cannot offer HSA2 upgrade on device with Apple ID login enabled.
Client has indicated that we should offer HSA 2.0 upgrade.
Performing ephemeral auth. Will not ask for ckgen or prkgen.
Sending prkgen: %@
The client indicated support for ckgen: %@
ckgen supported: %@
Will ask for ckgen.
Will ask to stash escrow PRK
Context has provided Anisette data for companion device.
Looking to set companion Anisette data in CPD.
Context has provided Anisette data for proxied device.
Grabbing Anisette data from proxied device.
Client has request a custodian setup token.
Client has request a beneficiary setup token.
Context has masterKey set! Setting masterKeyIsEligible
Context has a proxied bundle id set!
Context has set masterKeyAsSecondFactor
Context indicates that dependent tokens are being requested by parent account
Context indicates we are performing reauth for existing service
Surrogate has been registered for ID %@: %@
Begin out-of-process authentication with surrogate ID %@
Taking user to Settings/System Preferences for auth UI...
UI surrogate %@ registered.
Whoa! UI surrogate is checking in with an unexpected identifier %@.
UI surrogate with ID %@ has already checked in.
UI surrogate client %@ with surrogate ID %@ is checking in.
Context with identifier %@ has no registered UI surrogate.
UI surrogate for client %@ with surrogate ID %@ is checking out.
Waiting for UI surrogate for client %@ with surrogate ID %@ to check in...
Stop waiting for UI surrogate for client %@ with surrogate ID %@!
Error: Attempted to clear surrogate that is no longer in progress with ID %@.
Settings redirect not supported by context
Could not find heartbeat token for account %@
Inheritance Server request failed with error code: %i
%@ Database Migration requested from version: %i
Building database with schema version: 1
Upgrading database to schema version: 2
Upgrading database to schema version: 3
Upgrading database to schema version: 4
Client requested that we attempt provisioning...
Provisioning succeeded!
Unable to get Anisette data even after provisioning was attempted. Error: %@
Provisioning failed. No Anisette for you today! Error: %@
Skipping Anisette provisioning, per client request.
%@: Fetching peer attestation data for request (%@)
ADIGetIDMSRouting failed! Error: %@
Looking for Anisette data...
The DSID %@ is not provisioned for Anisette.
ADIOTPRequest failed. Error: %@
Anisette Info: mid - %@ otp - %@ euid - %d localUserUUID %@
Kicking off Anisette provisioning....
Anisette is already provisioned!
Unable to create start-provisioning URL request!
Starting provisioning with headers: %@
Start provisioning request failed! Error: %@
Unexpected response class! %@
Start provisioning response code: %@
Start provisioning response body: %@
No response body for start provisioning request!
No SPIM!
Destroying provisioning context.
ADIProvisioningStart failed. Error: %@
ADIProvisioningStart succeeded!
Unable to create end-provisioning URL request!
End provisioning with headers: %@
End provisioning request failed! Error: %@
End provisioning response code: %@
End provisioning response body: %@
No response body for end provisioning request!
No PTM!
No TK!
No routing info!
ADISetIDMSRouting failed! Error: %@
ADIProvisioningEnd failed. Error: %@
ADIProvisioningEnd succeeded!
Signing with BAA headers for urlKey: %@
Failed to get signing headers, error: %@
Client did not provide SIM data!
Resyncing Anisette provisioning data...
Cleaning up ADI session objects...
ADISynchronize failed. Error: %@
ADISynchronize succeeded!
ADIGetIDMSRouting failed with error code: %@
Unable to create sync-provisioning URL request!
Sync provisioning request failed! Error: %@
Sync provisioning response code: %@
No response body for sync request!
Response status details: %@
Unexpected response format under Status key!
Server sync failed! Error Code: %@
Server sync looks like it succeeded.
We've been given new R-Info.
Anisette sync is complete!
Erasing Anisette provisioning data...
Erase failed! Error: %@
Erasing Anisette data succeeded!
Nil value for startProvisioningURL!
Nil value for endProvisioningURL!
Nil value for syncAnisetteURL!
Using QA Anisette DSID.
Using some other non-prod Anisette DSID.
Custodian Recovery request is being created without a push token
There was no custodian recovery session ID. This should only happen on Start CLI
Custodian Recovery body for request: %{private}@
Custodian Initiation / Revocation request is being created without a custodian UUID
Finalize custodian setup request is being created without a custodian UUID
Update recovery key request is being created without a custodian UUID
Update recovery key request is being created without a wrappingKeyRKC
There was no custodian recovery session ID for embargo end feedback call, request will probably fail
There is no altDSID in recovery feedback call, request will probably fail
TrustedContactsDataSync body is being created without a last data sync timestamp for custodian context: %@
Registering for XPC activity: %s...
XPC activity says os got upgraded, running Post Install Job
XPC activity for post install complete
XPC activity registration complete. State: %@.
Satori Warmup for Post Install complete with result: %i
Already sent AKCA event: %@
Sending Report: %@ (time: %f)
%s (%d) called
%@: Preparing proximity engine (%@)
%@: Activating proximity engine (%@)
%@: Invalidating proximity engine (%@)
%@: Encountered unexpected non-NULL engineTimeoutSource when attempting to schedule new timer
%@: Creating engine timeout source (%f s)
%@: Failed to create engine timeout source
%@: Engine timeout source has been registered
%@: Engine timeout source has been cancelled
%@: Engine timeout source event handler called
%@: Cancelling engine timeout source
%@: Manager (%@) did update to state (%lu)
%@: Manager (%@) reported that BLE is unsupported on this device
%@: Manager (%@) reported that we are unauthorized to use BLE
%@: Manager (%@) reported powered-on state
%@: Proximity engine (%@) was activated
%@: Proximity engine (%@) was invalidated
Session ID is nil for context: %@
Number of active sessions: %lu
Looking for client with session ID: %@
Session: %@ = %@
Found an exising context with session ID(%@), %@
AuthorizationSessionManager - Client %@ lacks a bundle ID!
AuthorizationSessionManager - should clear request: %@
AuthorizationSessionManager - Processing clearance request: %@
AuthorizationSessionManager - Adding %@ to list of authenticating apps
AuthorizationSessionManager - Created OSTransaction
Authorization Session - Denying clearance for %@
AuthorizationSessionManager - Queued end authentication clearance block for %@
AuthorizationSessionManager - Executing end authentication clearance block for %@
AuthorizationSessionManager - Nilled out OSTransaction
AuthorizationSessionManager - Removing %@ from authenticating list
AuthorizationSessionManager - Client bundle ID is nil.
AuthorizationSessionManager - No active request for %@
AuthorizationSessionManager - _continuationRequestIdentifier does not match the requestIdentifier
AuthorizationSessionManager - Active request session timed out for %@
AuthorizationSessionManager - Setting user response %@
 for context - %@
AuthorizationSessionManager - No active session for %@
AuthorizationSessionManager - Getting user response for context - %@
Listening for messages from paired device...
Looing for Anisette data on IDS-paired device...
Paired device Anisette info: %@
Unable to obtain Anisette data from IDS-paired device: %@
Error archiving request %@
Peer attestation fetch didSucceed:%d data:%@ error:%@
Error deserializing attestation data: %@
Proxied attestation fetch - %@
Unable to obtain Attestation data from IDS-paired device: %@
Preparing message with command %@...
Command message ready for sending to to paired device: %@
Setting paired device.
IDSService sendMessage method failed. Error: %@
Message is on its way to paired device with transport ID: %@
Found active tinker device
Preparing reply to %@...
Will send reply message to paired device: %@
IDSService sendMessage method failed to send reply. Error: %@
IDS callback did not provide a message identifier!
Message with transport ID %@ could not be sent! %@
No internal message ID exists for transport ID %@, so we're ignoring the send failure.
Success sending message with Transport ID %@!
Received reply message from paired device: %@
Received command message from paired device: %@
Incoming message lacks a valid AuthKit-assigned UUID. Replying to paired device will not be possible.
Handling command from paired device: %@
Incoming message lacks a valid command.
Error unarchiving request %@
Error while serializing attestation data %@
Unknown command received %@!
Reply message lacks reply-to field.
Unable to find pending completion block under ID: %@
Calling out to pending completion handler for ID %@...
Paired device changed while %@ remote commands were pending.
Acknowledged!
akd is starting up...
akd is shutting down...
Building %@ database with schema version: 1
Migrating %@ database to schema version: 2
Migrating %@ database to schema version: 3
Failed to delete key: %@
Migrating %@ database to schema version: 4
Migrating %@ database to schema version: 5
Redirecting to AuthKitUIService, to present basic login UI with context: %@
Context data is nil: %@
Trying to launch application with Scene Delegate
Unable to launch application: %@ with the error: %@
Successfully launched process: %@
Failed to launch application: %@ with error: %@
Call completion with authentication result with presentation completion: %@
Invalid value for key %@ in push message: %@
AKPushMessage: Piggybacking requestor presenceSID was expected but not found (%@)
alert parameters are not valid: %@
Push message has invalid command %@. Ignoring!
Push message is missing a transaction ID. Ignoring!
Can't post notification without an identifier.
User notification to be posted - %@
Adding notification request.
Failed to post notification with error: %@
Notification requeste added successfully.
Populating results with bundle info: %@
Failed to fetch subscription info with error: %@
%@: Failed to build URL request using provider (%@) with error (%@)
%@: Failed to execute URL request (%@) with 401 error (%@), will attempt to reauth and execute again
%@: Adding additional headers (%@) to URL request (%@)
%@: Executing URL request (%@)
%@: Reauthenticate succeeded, attempting to execute URL request again
%@: Failed to reauthenticate with error (%@)
%@: Unable to reauthenticate with nil authenticationHandler
Internal access entitlement required but missing!
No altDSID was provided.
No existing IDMS account for altDSID %@
No DSID was provided.
No existing IDMS account for DSID %@
Internal/Private/Write access entitlement required but missing!
Service type %@ is not valid.
Told to mark service %@ as not using account, but already not using!
Marking service %@ as %@ using account %@.
Global signout.
Removing unusued IDMS account %@...
Failed to remove account %@. Error: %@
Successfully removed account %@.
Exception caught: %@
Internal/Private access entitlement required but missing!
Internal/Owner access entitlement required but missing!
Failed to fetch devices with error: %@
Fetched device list for %@
Owner access entitlement required but missing!
Owner/Internal access entitlement required but missing!
Starting WarmUp verification ...
Invalid configurationInfo identifier provided: %@
Missing parameter altDSID!
Could not find configurationInfoURL in URL bag!
Could not find IdMS account with altDSID %@
Failed to serialize configuration info: %@
Failed to encode configuration info!
Set configuration info request failed: %@
Set configuration info response not of expected class!
Set configuration info completed with HTTP status code: %@
Invalid configurationInfo identifiers type provided: %@
Invalid configurationInfo identifiers provided: %@
Could not find fetchConfigDataURL in URL bag!
Fetch configuration info request failed: %@
Fetch configuration info response not of expected class!
Fetch configuration info completed with HTTP status code: %@
No body parameters in fetch configuration info response!
An error occurred fetching configuration info. Server message: %@
Fetch configuration info completed with keys: %@
Fetching login code
BEGIN [%lld]: UpdateStateWithAuthResponse  enableTelemetry=YES 
Write access entitlement required but missing!
The provided URL response is not formatted as a final auth response.
No Apple ID was provided.
No existing IDMS account for Apple ID: %@
 Error=%{public,signpost.telemetry:number2,name=Error}d 
UpdateStateWithAuthResponse
END [%lld] %fs:UpdateStateWithAuthResponse  Error=%{public,signpost.telemetry:number2,name=Error}d 
Updating IDMS account %@ with external server auth response...
Unable to update IDMS account %@. Error: %@
Successfully updated IDMS account %@
No GS service tokens to update. Done.
External auth response contains GS service tokens. Will persist those...
Asked to validated code: %llu
AuthKit master token is missing! Error: %@
AuthKit account altDSID is missing.
Unable to get master token string value!
Attaching proxied device Anisette data: %@
Attaching proxied device Anisette data.
Validate-code request failed! Error: %@
Vetting validation completed with HTTP status code: %@
No body parameters in code validation response!
Missing key %@ in server response.
Code is valid!
Code is invalid!
An error occurred validating the code. Server message: %@
A vetting token was not provided.
altDSID was not provided.
Vetting-token validation request is ready to go.
Request to validate vetting token failed! Error: %@
Code validation completed with HTTP status code: %@
Seems like our master token has expired.
Unusual ACAccount with nil username encountered: %@
Server says vetting token is valid.
Server says vetting token is invalid.
altDSID required but missing!
Failed to fetch eligibility with error: %@
Fetched eligibility state for %@
Check-in with IdMS requested for account with altDSID: %@
Performing liveness check-in for account: %@
No IdMS account found for altDSID: %@
Asked to report signout from service %@ for Apple ID: %@
No IDMS account for Apple ID: %@
Asked to report signout for all Apple IDs
Internal write access entitlement required but missing!
No IDMS accounts to sign out
Sign out failed for account %@ with error: %@
Sign out succeeded for account %@
The UI Surrogate is finally here!
Overriding limited UI context into silent preferred auth
Overriding full UI context into silent preferred auth, silent is not supported...
Requesting clearance to begin auth with context %@...
Cleared to begin auth with context %@!
Nothing to do, since the authenticating context was a UI Surrogate.
Cleared to end auth with context %@.
Starting security upgrade flow
Security upgrade flow completed with error - %@
Should not continue. Calling completion with just error.
Should continue with results. Update account with results and proceed.
Current context requires interactive auth. Trying biometric/passcode first.
Current context permits passwordless auth.
Passwordless authentication failed due to service error, bailing...
Passwordless authentication failed due to proxy failure, bailing...
Passwordless authentication resulted in a failed interactive flow, bailing...
Passwordless authentication force failed by client, bailing...
Silent auth did not provide results. Interactive auth not allowed. Stopping right now.
Canceling auth attempt because credential access is unavailable.
All non-interactive auth options failed. Trying interactive auth.
Biometric/Passcode validation not possible for current context.
Collecting biometric/passcode validation...
Biometric/Passcode Validation failed with error %@. We need password auth flow...
Upgrade token found on context, will attempt token upgrade.
Token upgrade requires secondary action.
Will attempt silent auth since the context is asking for service tokens.
Silent auth not allowed due to username being editable
Accounts not available, skipping IDMS account lookup...
Looking for IDMS accounts to suggest using...
Nothing found.
Telling client to ask the user about using Apple ID: %@
Client decision to keep using: %@. Error: %@
Rejecting CK auth because username is marked as editable
No existing IDMS account for %@
Found an existing IDMS account %@
We don't have a CK for %@ (Error: %@), so that's that.
Username and password already provided by context. One shot at non-interactive auth.
One shot at non-interactive failed, handling failure...
Interaction requested but network is unreachable, bailing...
Context did not provide a username and/or password or interaction requested.
Failed to refresh context locally with error: %@
Failed to refresh context remotely with error: %@
Client is asking for username only auth and provided a username... lets see how this goes
One shot at passwordless auth failed, handling failure...
Collecting user credentials...
No altDSID found on context. Checking DSID..
Context provided username is different %@(context) vs %@(account) for client %@. Trusting AuthKit account username.
No altDSID on context. Nothing to validate.
Last account info validation was less than 24 hours ago. Skipping.
Account info fetch failed. Skipping validation.
No account names came back from IDMS for altDSID: %@
Username %@ is valid for altDSID: %@
Username %@ is not valid for altDSID: %@. Setting username to %@
More than 24 hours since the last authentication mode was obtained, fetching authentication mode...
Less than 24 hours since the last authentication mode was obtained, using last known authentication mode
No AuthKit account and authentication mode is unknown, fetching authentication mode...
Skipping refresh, authmode is known: %@
Unable to dismiss UI on client side! Error: %@
User forgot their credentials.
User requested a new Apple ID.
User canceled. Aborting auth.
User has incompatible devices. Aborting auth.
Unable to show prompt. Aborting auth.
User request client alternate action. Aborting auth.
User chose to try again, aka retry auth.
Something bad happened! %@
Successfully obtained password. Time for SRP auth.
Asking client to dismiss basic login UI. SRP Passthrough.
Initiating credential recovery
Unable to dismiss UI on client side even though auth is complete! Error: %@
Asking client to dismiss basic login UI. SRP Success.
Prompt should be kept alive, retry auth.
Username was not valid for passwordless auth, requesting more information
Username was not entered.
Password was not entered.
Another attempt at getting basic login info has completed!
Auth attempt %@ has failed. Incrementing counter...
Maximum password auth attempts have been reached.
Attempting to show login error: %@
Starting piggybacking session
Looks like we're dealing with an HSA account.
Attempting passwordless auth with IDMS account %@...
Passwordless auth failed: %@
No continuation capable IDMS account found for Apple ID: %@
Faking IDMS auth success!
SRP auth attempted with an invalid context: %@ - %@ - %@
Secondary action not supported
Using server provided Apple ID.
Using client provided Apple ID.
No username provided, this can't be good...
Successful SRP did not return a PET to client.
Providing short-lived token
Providing identity token
Providing beneficiary setup token
Providing raw password to an internal client.
Providing PRK to an internal client.
Unable to reach client to call shouldContinueWithAuthenticationResults
Asking %@ should continue?
Force-failing auth, because client says to.
Will continue handling successful auth...
Unable to auth with IDMS but client says to suppress error and continue.
Updating AK account...
Will check in with IDMS about push registration...
Failed to check in with IDMS! Error: %@
Successfully checked in with IDMS.
Creating a new authkit account <%{private}@><%{private}@>
Fetched existing AK account: %{private}@
No service IDs were provided, so AKAuthenticationIDMSTokenKey will be left empty.
Updating service tokens is not available for Dependent tokens requests.
Fetching tokens for service IDs %@ failed. Error: %@
Fetching tokens for service IDs %@ succeeded!
We have no token for these services: %@. This can't be good.
Context not appropriate for updating persistent tokens. All done then!
BEGIN [%lld]: PersistGrandslamTokens  enableTelemetry=YES 
No AIDA account for altDSID %@ was found. Searching by Apple ID: %@
Creating new AIDA account for Apple ID: %@
Updating AIDA account %@ with properties and tokens.
Successfully saved AIDA account.
Failed to save AIDA account! Error: %@
PersistGrandslamTokens
END [%lld] %fs:PersistGrandslamTokens  Error=%{public,signpost.telemetry:number2,name=Error}d 
Updating token for service with ID %@...
GS service token with ID %@ marked as requiring TouchID.
Failed to update token for %@ in keychain. Error: %@
Cannot perform secondary auth action for non-interactive context.
Secondary action is GS endpoint. Returning the response as-is so that handler can perform the action.
Trying to show server UI for the response.
Context has masterKeyEligible set and server response indicates secondary action is required
Attempting second SRP for masterKeyAsSecondFactor
Server response indicates fido auth is required.
Secondary action server URL is missing
Failed to get second-factor. Error: %@
Successfully obtained second-factor code: %@.
Asking client to show alert for error: %@
Login code successfully validated! Updating auth tokens...
Unsupported prompt type encountered: %d
There was no URL in the bag for key: %@
Request response is not of expected class! %@
Starting to clear session cache.
Error starting fido auth flow: %@
Received Fido start auth with context: %@
Error presenting fido auth prompt: %@
Server says to show UI at URL key: %@
 ActionKey=%{public,signpost.telemetry:string1,name=ActionKey}@  enableTelemetry=YES 
ServerDrivenSecondaryAction
BEGIN [%lld]: ServerDrivenSecondaryAction  ActionKey=%{public,signpost.telemetry:string1,name=ActionKey}@  enableTelemetry=YES 
END [%lld] %fs:ServerDrivenSecondaryAction  Error=%{public,signpost.telemetry:number2,name=Error}d 
Asking client to start showing native UI
AKAppleIDAuthenticationService serverUIContext additionalData: %@
Retrieved recovery data for server. Server Response: %@ and recoveryData: %@
No usable IDMS account for Apple ID: %@
Attempting silent service-token auth with IDMS account %@...
No master token available for silent auth on account %@.
Fetching tokens for service IDs %@ failed! Error: %@
Fetching tokens for service IDs %@ succeeded.
Asked to fetch service token without a serviceID!
Asked to fetch service token without any master token data!
BEGIN [%lld]: FetchGrandslamTokens  enableTelemetry=YES 
Failed to create AppleIDAuthSupportTokenRef from exteral form. Error: %@
FetchGrandslamTokens
END [%lld] %fs:FetchGrandslamTokens  Error=%{public,signpost.telemetry:number2,name=Error}d 
AppleIDAuthSupportCopyAppTokensOptions failed with error: %@
Unable to find info for token with ID: %@
END [%lld] %fs:FetchGrandslamTokens 
User does not have all their credentials, so we're going to iForgot...
iForgot
BEGIN [%lld]: iForgot  enableTelemetry=YES 
END [%lld] %fs:iForgot  Error=%{public,signpost.telemetry:number2,name=Error}d 
iForgot reported success, but no username came back to akd.
iForgot reported success, but no password came back to akd.
iForgot succeeded, and we have a new auth server response!
iForgot succeeded, but we do not have a new auth server response. Doing SRP auth...
iForgot flow failed! Error: %@
Starting iForgot flow...
iForgot flow was triggered by push notification. Will try to use dedicated URL.
There was no iForgot URL in the bag!
Starting repair...
Failed to find matching account for context! Error: %@
There was no repair URL in the bag!
Repair flow reported success, but no auth response came back to akd.
Repair flow succeeded, and we have a new auth server response!
User wants a new Apple ID to auth with...
CreateNewAppleID
BEGIN [%lld]: CreateNewAppleID  enableTelemetry=YES 
END [%lld] %fs:CreateNewAppleID  Error=%{public,signpost.telemetry:number2,name=Error}d 
Calling recordUserAcceptedAgreementVersion with %@
New Apple ID flow reported success, but no username came back to akd.
New Apple ID flow reported success, but no password came back to akd.
New Apple ID flow reported success, but no auth response came back to akd.
New Apple ID creation succeeded, and we have a new auth server response!
New Apple ID flow failed! Error: %@
Starting Child Account creation flow...
Starting Apple ID creation flow...
There was no creation URL in the bag!
Change password flow failed! Error: %@
Change password flow reported success, but no username came back to akd.
Change password flow reported success, but no password came back to akd.
Change password flow succeeded, and we have a new auth server response!
Change password flow succeeded, but we do not have a new auth server response. Doing SRP auth...
Starting password change flow...
Change password flow started without account!
Could not find URL for changePassword!
Password change flow authentication failed with error, but we'll try anyways: %@
Prompting for piggybacking code
Failed to dismiss second factor UI %@
Piggybacking session failed with error: %@
Unable to dismiss client-side second-factor UI. Error: %@
Server UI came back with error: %@
Piggybacking escape hatch server UI finished, with error: %@
Detected a piggy service type, alias for iCloud
Setting serviceType %@ inUse for account %@
Server auth response did not contain HB token!
Server auth response did not contain CK.
Server auth response contained a CK, saving to the credential for account (%@)
Server auth response did not contain PRK.
Stashing the PRK away for escrowing for account: %@
We got a PRK from the server, but we have no passcode... discarding
Failed to update AuthKit account! Error: %@
We are running in recovery. Skip ACAccount update.
This auth is ephemeral. Skip ACAccount update.
This is a proxy auth. Skip ACAccount update.
This is a child account creation flow. Skip ACAccount update.
This auth is for a dependent. Skip ACAccount update.
Starting to teardown follow ups
This device cannot be an authorization endorser discovery.
Authorization Endorser discovery deactivated.
Authorization Endorser already in progress, ignoring device found. {device=%@}
 CleanSession=%{public,signpost.telemetry:number1,name=CleanSession}d  enableTelemetry=YES 
PiggybackingRequestingInitiateSession
BEGIN [%lld]: PiggybackingRequestingInitiateSession  CleanSession=%{public,signpost.telemetry:number1,name=CleanSession}d  enableTelemetry=YES 
END [%lld] %fs:PiggybackingRequestingInitiateSession  Error=%{public,signpost.telemetry:number2,name=Error}d 
Initiating a piggybacking flow for transaction id: %@
BEGIN [%lld]: PiggyInitialMessageData  enableTelemetry=YES 
 Error=%{public,signpost.telemetry:number1,name=Error}d 
PiggyInitialMessageData
END [%lld] %fs:PiggyInitialMessageData  Error=%{public,signpost.telemetry:number1,name=Error}d 
Handshake code prompt finished
Handshake request failed with error: %@
Handshake request finished
Waiting for handshake condition with state: %@ - %@ - %d - %d
Finished waiting for handshake condition with state: %@ - %@ - %d - %d
Code entered, but no handshake has been completed
Starting to process handshake results
We got results, finish the flow
User elected to escape before handshake completed
We did not capture a code, completing with escape results
Handshake failed with error: %@
Code collected, starting to wait for: %@
Piggybacking completion with final process response: %@ - %@
Clearing requesting controller state
 CircleStep=%{public,signpost.telemetry:number1,name=CircleStep}d  enableTelemetry=YES 
PiggybackingRequestingProcessPushPayload
BEGIN [%lld]: PiggybackingRequestingProcessPushPayload  CircleStep=%{public,signpost.telemetry:number1,name=CircleStep}d  enableTelemetry=YES 
END [%lld] %fs:PiggybackingRequestingProcessPushPayload  Error=%{public,signpost.telemetry:number2,name=Error}d 
%@: Proximity is being enforced and was not detected by accepting device (escrow fallback is expected)
User entered a new code after verificaiton failure
User succesfully escaped after verification failure
User escaped with erro after verification failure
We failed to handle verification, passing through the failure
Starting to process request message
BEGIN [%lld]: PiggyClientInfoForRequestController  enableTelemetry=YES 
PiggyClientInfoForRequestController
END [%lld] %fs:PiggyClientInfoForRequestController  Error=%{public,signpost.telemetry:number1,name=Error}d 
Requesting session indicated that we are DONE
%@: Will not attach duplex session to authentication results
Passing duplex session
Duplex session creation failure
Requesting session processing failure: %@
PiggybackingRequestingReplyWithContext
BEGIN [%lld]: PiggybackingRequestingReplyWithContext  enableTelemetry=YES 
END [%lld] %fs:PiggybackingRequestingReplyWithContext  Error=%{public,signpost.telemetry:number1,name=Error}d 
Attempting to determine whether we should continue.
Should continue came back with error: %@
Should continue: %d
Initializing requesting session: %@
Using a previously cached code or error: %@ - %@
Validating Code: %@
Login code validated
Code validated with result: %d - %@
PiggyCodeCollect
BEGIN [%lld]: PiggyCodeCollect  enableTelemetry=YES 
Prompting user for piggybacking code
END [%lld] %fs:PiggyCodeCollect  Error=%{public,signpost.telemetry:number1,name=Error}d 
Secret collection failed with error: %@
User wants to continue using current piggybacking session
Captured code: %@ - %@
%@: Determined proximity advertiser should be started
%@: Unable to start proximity advertiser with nil presenceSID from pushPayload (%@)
%@: Determined proximity advertiser should not be started (wantsPresence: %@, circleStep: %lu, presenceSID: %@)
%@: Determined proximity advertiser should be stopped (circleStep: %lu)
%@: Determined proximity advertiser does not need to be stopped (circleStep: %lu, proximityController: %@)
AKPiggybackRequestingController: Proximity controller has been invalidated
Context info %@
Received: %@ (%@)
Alert handle (%@) activated.
Alert handle (%@) deactivated.
Alert handle (%@) deactivated by request.
Alert handle (%@) interrupted with error: %@
Overriding Settings landing spot because the Apple ID %@ is used for iCloud.
Opening internal URL: %@
Error launching Preferences: %@
Invalid Apple ID service type %@. Falling back to iCloud.
No account found with given altDSID: %@, failing private email lookup
No match found with given altDSID: %@ for key %@ [bundle:%@]
Email found for %@: %@ [bundle:%@]
Insufficient entitlement for altDSID: %@, failing hme context fetch
No valid account fount for altDSID: %@, failing hme fetch
[ios] requesting for %@
Insufficient entitlement for altDSID: %@, aborting register private email
No valid account found for altDSID: %@, aborting register private email
Account not eligible to perform register Private Email - altDSID: %@
Insufficient entitlement for context: %@, failing hme context fetch
No valid account found for context: %@, failing hme context fetch
No altDSID in context: %@, failing hme context fetch
Updated context is nil for: %@, failing hme context fetch
Insufficient entitlement for altDSID: %@, aborting listAllPrivateEmails
Failed to fetch private emails for altDSID %@, error - %@
Private Emails found: %@
Unable to call back to client! Error: %@
Owner/Private access entitlement required but missing for removePrivateEmailKey!
Owner/Private access entitlement present for removePrivateEmailKey!
Owner/Private access entitlement for removePrivateEmailKey error %@
Owner/Private access entitlement for removePrivateEmailKey SUCCESS
Presenting UI for key %@
Presented UI! (%@, %@)
Failed to register private email (%@) with error: %@
Successfully registered Private Email
response: %@
data: %@
Failed to store fetched email (%@) error:%@
Owner detected!
Internal request made by internal client? %@
Unable to get Anisette data for %@! Error: %@
%@: Fetching attestation data for device (%@) with request (%@)
%@: Calling anisette service (%@) for peer attestation data
%@: Unable to grab attestation data for device (%@) with request (%@) using anisette service (%@)
Denied access to Anisette data to non-internal client.
Invalid target %@ for fetching Anisette data.
Invalid target %@ for fetching legacy Anisette data.
Client lacks entitlement to provision Anisette!
Invalid target %@ for provisioning Anisette data.
Client lacks entitlement to resync Anisette info!
Invalid target %@ for resyncing Anisette data.
Client lacks entitlement to erase Anisette provisioning!
Invalid target %@ for erasing Anisette data.
Denied access to Signing data to non-entitled client.
Starting to fetch user info for %@
Failed to fetch info with error: %@
Fetched user info for %@
Fetch user info returned apple managed account fetchError: %@
Fetched authMode for %@
Handling push with command AKPushMessageCommandAccountInfoChanged...
Not updating, since primary account does not match
failed to clear DB on protocol change - %@
Couldn't upgrade the stored protocol version - %@
Starting to sync private emails list for %@
Could not create service controller
Update passedVersion=[%@]
Update currentVersion=[%@]
Failed to update from push notification, error=%@
IDMS sent reset key to revoke authorization Database
Encountered error while revoking authorization database: %@
Authorization database revoked successfully
We got an appListVersion with the user info new version: %@ 
old version: %@
Unable to fetch authorized application list with error: %@
Unable to refresh because Nil altDSID
Unable to refresh because account name list is nil/empty.
Updating cached properties for Apple ID accounts with altDSID: %@
Username of account %@ is no longer a valid
Updating full list of account names for %@ to: %@
Posting %@ with payload: %@
Authorization requesting user information for request: %@
The Given/Family Name for the current user was not found in the AuthKit account
Application is not requesting email for this authorization early return with userInfo:
Application is requesting email for this authorization fetching email properties from account
This is a Mako Account, Ignoring primary email address verification
Mako account has reachable email addresses
Completed getting UserInformation for Mako account with UserInfo:
Missing primary email verification state.
Completed getting UserInformation for account with UserInfo:
Handling push with command AKPushMessageCommandNotifyTrustedDeviceListChanged...
AKPushMessageCommandNotifyTrustedDeviceListChanged message contained single-operation delta.
AKPushMessageCommandNotifyTrustedDeviceListChanged message contained no delta. Listener should fetch device list.
%@: Attempting to remove continuation token for account (%@)
%@: Peripheral manager (%@) failed to start advertising with error (%@)
%@: Peripheral manager (%@) started advertising
%@: Peripheral manager (%@) failed to add service (%@) with error (%@)
%@: Peripheral manager (%@) added service (%@)
%@: Central manager (%@) discovered peripheral (%@) with advertisement data (%@) and RSSI (%@)
%@: Discovered peripheral (%@) with nil serviceID
%@: Discovered peripheral (%@) with matching presenceSID (%{mask.hash}@) and serviceID (%@)
%@: Discovered peripheral (%@) with non-matching serviceID (%@)
Got unexpected combination, mappings=%@, hmeListVersion=%@
Failed to fetch private emails list with error: %@
Deleting Hide My Email database
Failed to clear Hide My Email database. Error: %@
Failed to unpack private emails list. Got:%@
Detected that we must sync with server
Got a bad private-email fetch URL from the bag: %@
Unable to fetch private email. The URL is missing from the URL bag
GS token is missing, giving it a shot to receive it from the account
We could not find an account, and the token is missing. Sending the requestas-is and hoping for the best.
Calling GS endpoint to start the Fido auth.
Parsing Fido auth context.
Creating Fido auth context with: %@
Error parsing fido auth parameters: %@
Calling GS endpoint to finish the Fido auth.
Error finishing fido auth flow: %@
Creating server response from finish fido response.
Activating handle: %@
Remote view sent a finish event
Remote view sent a user response event: %@
%@ deallocated.
%@: Transformed %@ (%@)
%@: Validating authentication context (%@)
%@: Failed to retrieve AuthKit account for context (%@) with error: %@
Successful SRP!
SRP authentication with server failed! Error: %@
Server told us to retry. Retrying auth...
Auth failed but the server says to try a secondary auth action anyway. Let's how this goes...
Need Anisette resync...
Anisette resync was successful. Retrying auth...
Anisette resync failed. Error: %@
Need Anisette reprovisioning...
Anisette erase was successful. Retrying auth...
Anisette erase failed. Error: %@
URLSwitching needed...
Server requested to switch URL but no URLSwitch data is available, Ignoring URL switch
URLSwitching was successfull retrying SRP With new url
URLSwitching failed with error: %@
Invalid PRK returned from server and we're doing a companion auth. We should clear CK
This is an internal build with Demo mode for Authorization activated, returning 'NOT FOUND' credential state
Credential state request does not contain clientID, reverting to XPC client information.
Setting clientID to %@
Credential state does not contain teamID, reverting to XPC client information.
Setting teamID to %@
Requested Credential state does not match XPC client's bundleID (%@) or teamID (%@), returning AKAuthenticationErrorInvalidContext
AltDSID is included in the State Request,this should only be happening in testing
This device is not trusted, returning 'REVOKED' credential state
Attempting private call to fetch credential state for clientID: %@
Client did not have a teamID and it is not an internal client
Client has internal entitlements and does not have a teamID
Client did not have a application identifier
No applications were found with the provided Client ID: %@
Credential State Request has an ignore flag on the TeamID returning Credential State
No developer teams were found with the Team ID: %@
Application database has been compromised.
Transfer state stored in database with clientID: %@, teamID: %@
Application has a credential, directly returning application's credential state.
Application has a credential but user identifier match is being ignored (for internal credential state), directly returning application's credential state.
Application has a credential, failed user identifier validation.
Application in transferred state with unsafe matching user identifier (to be verified by IdMS).
Application in transferred state with no matching user identifier.
Application in expired state with unsafe matching user identifier.
Application in expired state with no matching user identifier.
Application in transfered state with strongly matching alternate user identifier.
Application in expired state with strongly matching alternate user identifier.
Application in transferred state with strongly matching user identifier. Directly returning application's credential state.
Application in expired state with strongly matching user identifier. Directly returning application's credential state.
Application in expired state with no matching user identifier but user identifier match is being ignored (for internal credential state) and No match for Team Identifier, directly returning application's credential state.
Application in expired state with no matching user identifier but user identifier match is being ignored (for internal credential state), directly returning application's credential state.
Application in transferred state with no matching user identifier but user identifier match is being ignored (for internal credential state) and No match for Team Identifier, directly returning application's credential state.
Application in transferred state with no matching user identifier but user identifier match is being ignored (for internal credential state), directly returning application's credential state.
Application state cannot be securely determined.
Fetching developer team with id: %@
Encountered error while fetching developer team: %@
Fetching developer team for client with ID: %@
Unsafe verification failed due to nil User ID.
Performing unsafe verification with User ID: %@
Notification requires authentication prompt.
Unable to create CFUserNotificationRef!
Failed to create login code notification!
Dismissed code notification.
Attempting to show notification with identifier: %@
Beginning reverse geocode...
Reverse geocode callback called
Reverse geocode results: (Locality: %@ - Administrative Area: %@)
locationName = "%@"
Will display user notification...
Torn down notification with ID: %@
Attempted to tear down notification, but it was not found for identifier... %@
Notification responded: %@
Prompting user if if they want to change their password
Failed to create password change notification!
Suppressing password change prompt due to missing PRK
Will take user to change password flow in Settings...
Using the following URL for change password redirect: %@
Got authentication results back based on the prompt for notification: %@
Authorization Endorser already in progress, ignoring startAuthorization.
Authorization Endorser Started.
Authorization Endorser client failed to activate. {errorDomain=%{public}@, errorCode=%ld, error=%@}
Sending StartAuthorizationRequest. {device=%@, device_ptr=%p}
Ignoring StartAuthorization another endorser is already handling it.
StartAuthorization failed. {errorDomain=%{public}@, errorCode=%ld, error=%@}
Handling StartAuthorizationResponse. {response=%@}
Failed to unarchive the credential request context. {error=%@, data=%@}
_requirePassword property received as %i, setting to NO
StartAuthorization presenting authorization UI for Rapport request. {credentialRequestContext=%@}
Sending AuthorizationDidFinish. {authorization=%@, device=%@, device_ptr=%p}
Failed to archive AKAuthorization object, failing authorization. {archiveError=%@}
Received AuthorizationDidFinish response. {response=%@, error=%@, device=%@, device_ptr=%p}
Rapport endorser authorization failed. {errorDomain=%{public}@, errorCode=%ld, error=%@}
Error object won't be sent, failed to archive. {archiveError=%@}
Sending AuthorizationDidFinish. {error=%@, device=%@, device_ptr=%p}
Sending DidStartServerAuthorization event. {device=%@, device_ptr=%p}
Error sending DidStartServerAuthorization Rapport event. {errorDomain=%{public}@, errorCode=%ld, error=%@, device=%@, device_ptr=%p}
Could not dismiss UI! Error: %@
Request to show server UI came back with error: %@
Unable to tear down server UI! Error: %@
Native recovery failed! Error: %@
presentNativeRecoveryUIForContext did succeed. Recovered info: %@ and error: %@
Unable to tear down native recovery UI! Error: %@
dismissNativeRecoveryUIForContext did succeed.
In Sync Bubble. UI is not supported.
Context %@ has AKAppleIDAuthenticationUICapabilityUnknown.
Context cannot display full UI.
Context requires out-of-process UI.
Allowing BG process %@ to perform proxied FG auth.
Client is capable of displaying UI, no surrogate required...
Out-of-process auth, no registered UI surrogate yet...
Background auth, no registered UI surrogate yet...
Client %@ is being permitted to run FG auth, because iCloud settings are inaccessible.
Client %@ is not permitted to use _isProxyingForApp. Falling back to BG behavior.
Client %@ cannot proxy without specifying an immutable Apple ID.
Ignoring FG proxying request because %@ is not currently foreground.
Client %{public}@ requested authentication (via %{public}@).
Client %{public}@ requested authentication.
Will not prompt user about redirect per auth context configuration.
Showing alert failed, user notification is nil!. Error: %d
Unable to reset check in bit due to Accounts error: %@
Unable to respond to message with invalid id
Unable to respond to message without AK account for altDSID %@
Will notify IDMS about teardown response...
XPC activity says that it's time run the liveness check-ins!
XPC activity for liveness check-ins completed!
Done with removeUnusedAndDuplicateAuthKitAccounts
authkit/check-in
We do not have any IDMS accounts to check in with.
Performing liveness check-in with account: %@
Liveness check-in failed for account %@ with error: %@
Liveness check-in succeeded for account %@.
authkit/sign-out
Reporting global signout to IDMS for %@
Reporting signout for service %@ with account %@
Invalid service %@ for reporting
Cannot convert %@ to a non-nil string
Unable to call back to notification handler! Error: %@
Notifying client (%@) of credential state change %d.
Client (%@) was notified %@ with error %@
Unable to call back to state broadcast handler! Error: %@
Notifying client (%@) of credential state change (%d) for client ID (%@).
Executing query: %@
SQL Exec %@ failed with error %s.
Executing query: %s
Rows changed: %d
Database error detected: %@
Database corruption detected: %@
Wanted to migrate database, but migrator is nil!
Attempting to open database at path: %@
Creating path for database...
%@: Failed to open file at path %@
Database opened at path: %@
Attempting to wipe database at path: %@
Failed to wipe database with error: %@
Database %@ wiped...
Closing database at path: %@
Closed database with result: %d
%@ deallocated
AuthKit Private entitlement needed to start a custodian initiation request, but calling process doesn't have it
There is no custodian UUID to start a custodian initiation request failing operation
Missing custodian setup token, abandoning idMS custodian setup.
Failed to initiate custodian setup with error: %@
response: %@
Successfully initiated custodian setup for custodianUUID %@
response: %@
data: %@
AuthKit Private entitlement needed to finish a finalize custodianship request, but calling process doesn't have it
Missing custodian UUID, abandoning custodian finalization.
Missing altDSID, abandoning custodian finalization.
Successfully finalize custodianship for custodianUUID %@, response: %@
Failed to finalize custodianship with error: %@
AuthKit Private entitlement needed to abort a custodian setup request, but calling process doesn't have it
There is no custodian UUID to abort a setup request failing operation
Successfully aborted custodian setup for custodianUUID %@, response: %@
Failed to abort custodian setup with error: %@
AuthKit Private entitlement needed to finish a custodian recovery key update request, but calling process doesn't have it
Missing custodian UUID, abandoning custodian recovery key update.
Missing altDSID, abandoning custodian recovery key update.
Missing wrappingKeyRKC, abandoning custodian recovery key update.
Failed to update recovery key with error: %@
response: %@
Successfully updated recovery key for custodianUUID %@, response: %@
Starting recovery request with context %@
We have an authKit account, request needs to be authenticated
Failed to start custodian account recovery with error: %@
Successfully started an account recovery for account %@, response: %@
AuthKit Private entitlement needed to continue fetching the custodian configuration , but calling process doesn't have it
Failed to start custodian recovery transaction with error: %@
Successfully started an account recovery transaction, response: %@
Failed to verify custodian recovery key with error: %@
Call to fetch custodian recovery token returned with response: %@
AuthKit Private entitlement needed to continue fetching the data recovery key , but calling process doesn't have it
Cannot fetch data recovery key without a session ID or recovery token, failing operation
Cannot fetch data recovery key without an authenticated account, failing operation
Successfully fetched data recovery key for account with altDSID %@, response: %@
AuthKit Private entitlement needed but calling process doesn't have it
There is no altdsid to send embargo end transaction, failing operation
Cannot send embargo end transaction without a session ID, failing operation
Sending embargo end notification feedback with to urlKey: %@ context: %@
Failed to send embargo end feedback with error: %@
Embargo end feedback call returned with response: %@
Embargo end feedback completed with HTTP status code: %@
There is no owner or custodian information to start a transaction, failing operation
Custodian context does not provide a pushToken, fetching pushToken...
Something really really bad happened, we don't have a push token to start a custodian request
Cannot fetch data recovery key without a session ID, failing operation
There is no url for key AKURLBagKeyTrustedContactsDataSync in the URLBag. No op.
Missing lastDataSyncTimestamp, abandoning IdMS performTrustedContactsDataSync.
Missing altDSID, abandoning IdMS performTrustedContactsDataSync.
Missing heartbeat token, abandoning IdMS performTrustedContactsDataSync.
Failed to performTrustedContactsDataSync with error: %@
response: %@
Successfully performed TrustedContactsDataSync
response: %@
data: %@
Failed to performTrustedContactsDataSync due to AKCustodianDaemonService being released
Unexpected IdMS trusted contact operation response: %@
Failed to fetch dataclass rules with error: %@
Missing beneficiary setup short-lived token.
Failed to setup beneficiary (%@) with error: %@
Failed to remove beneficiary (%@) with error: %@
Failed to update beneficiary (%@) with error: %@
Setting up Beneficiary Alias with context - 
Failed to setup beneficiary alias (%@) with error: %@
Successfully setup Beneficiary Alias
response: %@
Failed to execute request with error: %@
Successfully executed the request with response: %@
Cleared session bag caches
Cleared serialized bag cache
Starting to fetch URL bag... if necessary
FetchURLBag
BEGIN [%lld]: FetchURLBag  enableTelemetry=YES 
END [%lld] %fs:FetchURLBag 
Fetching URL bag...
Bag fetch failed! Error: %@, falling back to older bag version
Bag fetch failed! Error: %@
Bag fetch either timed out or was successful but there was no bag data!
URL bag fetch timed out, cancelling task: %@
There was an error parsing the URL bag! %@
The URL bag was not in dictionary format!
URL bag fetched! %@
Daemon service initialized with client: %@
Client before perform authorization execution %@
Proxied bundle detected (%@), proxying...
Requesting clearance to authorize with context %@...
Perform Authorization cannot proceed because of error: %@
Attempting to authorize request: %@
Completion was called with nil authorization and no error thrown, setting Error Unknown
Error performing auth request (%@): %@
Authorization ended for requestContext: %@
Attempting to get credential state for User identifier: %@
Authorization Credential state not found with error:%@
Failed to revoke upgrade with error: %@
Revoke upgrade completed successfully.
Starting to fetch appleIDAuthorizeHTMLResponseURL
Request for appleIDAuthorizeHTMLResponseURL failed. Error: %@
appleIDAuthorizeHTMLResponseURL response code: %@
Failed to fetch appleIDAuthorizeHTMLResponseURL %@
Cannot fetch primary bundleID for nil primary account
Owner entitlement needed to continue fetching icon, but calling process doesn't have it
Establishing connection with notification center for client (%@).
Establishing connection with state broadcast handler for client (%@).
Handling request with missing account, default to primary AuthKit account
Client owner detected, checking for proxied bundle
Client doesn't have owner access, operation not permitted
Existing client found from the session manager and using it %@
Using the client initiated with the daemon service's connection
Early returning the request as it meets preferImmediatelyAvailableCredentials criteria.
Will attempt to perform silent authorization using provided user ID.
Requested to skip auth UI...
Requesting interactive authorization...
Silent Request is not eligible for authorization
Attempting safe SRP for first object...
Silent auth requested with an invalid context... bailing
Requesting password only: %@
Handling a client with authorization level: %@
Rapport authorization is required for request %@
Rapport request is not eligible for authorization
Proxied bundle identifier entitlement needed to continue saving authorization.
Authorization request missing proxied bundle identifier.
Storing authorization for proxied request (%@).
_getPresentationContextForRequestContext canPerformCredentialRequest returned %@ (with error %@)
AKAuthorizationValidator returned we cannot perform credential request but threw no error, setting error unknown
User information updated
No login choices available and we have a password request in credential requests.
No credential requests.
Checking for genesis event!
Previous credential for client %@ is authorized
Resetting scopes %@ for upgrade from keychain
Previous credential for client %@ is in transfer state
%s Credential state is not authorized
Fetching credentials with: %@
getCredentials returned with %lu credentials
Fetching credentials for proxied associated domains. {proxiedAssociatedDomains=%@}
presenting authorization UI for request %@
Authorization UI returned with userResponse - %@
Attempting authorization with response %@, and client: %@
Attempted to authorize request of unsupported type %@
User response contains password, so add them to srp context
Client has special access, populating context with overrides...
Applying request client ID override
Applying request team ID override
Authorization is for an internal application without teamID
Client do not have special access, so not overriding the context. Using the given client: %@
Client has authenticated externally, populating authToken...
Constructed AKAuthorizationContext from the request & client - %@
Client proxy object to present UI is not created
Client before perform authorization for user info execution %@
Client owner detected
shouldContinueWithRequest returning result %@ and error %@
Got a response from user: %@ and client: %@
Detected password request
Authorization presentation failed with error: %@
Got a response from user: %@, userSelection: %@ and client: %@
Processing of user response failed with an unknown error, likely invalid response...
Unable to beginAuthorization - Missing Entitlements.
Unable to beginAuthorization - Client is not entitled to _AKCredentialRequestContextBundleIdentifierProxyEntitlement
Unable to beginAuthorization - Client has proxy entitlement but is not setting either _proxiedClientBundleID or _proxiedClientTeamID
beginAuthorization - Proxied bundle detected (%@), proxying...
beginAuthorization - Requesting clearance to authorize with context %@...
beginAuthorization - Error beginning session for context : %@
 Error - %@
beginAuthorization - Attempting to authorize request: %@
beginAuthorization - Error beginning session for context : %@
beginAuthorization completed
beginAuthorization - User Response is nil for context : %@
Unable to continueAuthorization - Missing Entitlements.
Unable to continueAuthorization - Client is not entitled to _AKCredentialRequestContextBundleIdentifierProxyEntitlement
Unable to continueAuthorization - Client has proxy entitlement but is not setting either _proxiedClientBundleID or _proxiedClientTeamID
continueAuthorization - Proxied bundle detected (%@), proxying...
Invalid context. Need to set _continuationRequestIdentifier
continueAuthorization - Error continuing session for context : %@
 Error - %@
continueAuthorization - externalLocalAuthData was provided. Verifying...
continueAuthorization - Invalid Externalized LAContext
continueAuthorization - externalLocalAuthData was verified successfully
continueAuthorization - externalAuthToken was provided. Attaching to authorizationRequest.
Invalid context. Need to set either _externalLocalAuthData or _externalAuthToken
continueAuthorization - Attempting to resume authorization for request: %@
continueAuthorization - Authorization ended for requestContext: %@
continueAuthorization - Error continuing session for context : %@ 
: error: %@
continueAuthorization completed
continueAuthorization - authorization is nil for context : %@
cancelAuthorization with context - %@
Unable to cancelAuthorization. Missing Entitlements.
Unable to cancelAuthorization - Client is not entitled to _AKCredentialRequestContextBundleIdentifierProxyEntitlement
Unable to cancelAuthorization - Client has proxy entitlement but is not setting either _proxiedClientBundleID or _proxiedClientTeamID
cancelAuthorization - Proxied bundle detected (%@), proxying...
cancelAuthorization - Error canceling the session: %@
cancelAuthorization - Successfully canceled session
Client authenticated externally. Sending auth token in SRP.
Asking client to show server UI with %@...
Showing server UI with request: %@, %@
Server UI has been skipped.
Server UI did not complete auth successfully! Error: %@
Looks like we're done with server UI!
We do not have an initial auth response to update. Creating one now!
Successfully handled server UI response!
Asking client to dismiss any presented server UI...
Server UI-based authentication has been canceled.
User elected to try again
Unknown action signal from server UI final response!
Creating resource load delegate with auth response
Failed fetching phone information for server UI delegate: %@
Failed to fetch IDS cert info: %@
Fetching resource load delegate
Auth response recieved is for proxy, initializing resource load delegate accordingly
Could not find an existing AuthKit account, so we can't attach account specific headers: %@
Context explicitly does not want GS tokens for server UI, moving on...
Error communicating with client anisette service: %@
%@: Calling client proxy to fetch peer attestation data for context (%@) with request (%@)
Current %@ database version: %i
Migration logic not present (from: %i)
Current schema version undefined!
Current store name undefined!
Resuming XPC listener for Mach service %@...
Fatal error! Unknown XPC listener: %@
Lockscreen state: %@ 
Checking lock state
We are running in recovery. Leaving IDS alone.
We are running in the sync bubble. Leaving IDS alone.
akd is exiting due to SIGTERM
Notified of language change. Will exit when all clear.
%@: Scheduling request (%@) with calculation (%@)
%@: Unable to schedule request (%@) with algorithm (%@)
%@: Immediately executing request (%@)
%@: Will attempt to schedule next request (%@)
%@: No more requests to schedule
%@: Scheduled new timer (%@) for next upcoming calculation (%@)
%@: Scheduler timer fired, executing all eligible requests
%@: Attempting to execute scheduled request (%@)
%@: Unable to execute scheduled request (%@) with calculation (%@)
%@: Executing request (%@)
%@: Handling dispatching response (%@) for executed request (%@)
%@: Updating algorithm for dispatching info (%@)
%@: Removing algorithm for dispatching info (%@)
Sending request to revoke upgrade txID %@ for teamID/bundleID: %@/%@
Revoke request came back with error: %@
Client %@ lacks a bundle ID!
Processing clearance request: %@
Adding request as pending...
Processing clearance request for Surrogate with ID %@
Denying clearance to client %@ due to pending surrogate auth...
Clearing silent authentication
No authentication in progress, all clear!
Attempting to clear in-app request: %@
Allowing clearance despite pending interactive auths: %@
Denying clearance due to pending daemons: %@
Attempting to determine foreground state for apps: %@
Denying clearance due to another foreground app performing authentication...
Queued end authentication block for %@
Queued end authentication clearance block for %@
Executing end authentication clearance block for %@
Removing %@ from authenticating list
Surrogate context is done
Surrogate auth flow is complete!
Found a pending request: %@
Auth has ended with an error. Skipping queued context update.
End authentication called without any queued clearance handler, we are done
Adding %@ to list of authenticating apps
Adding %@ to list of authenticating daemons
Passing password down to next queued client.
Password populated from cache.
Clearing the password cache.
XPC activity says that it's time to update user information
XPC activity for fetch user information complete
No Primary AuthKit account found skipping user information fetch
Succesfully fetched user information for altDSID: %@
Encountered error while fetching user information: %@
We are running in recovery. Leaving APS alone.
We are running in the sync bubble. Leaving APS alone.
Push service starting...
Server did not provide a valid APS environment. Falling back to prod.
Push service started
Updating push delegates: %@
Will notify delegates of notification action: %@
Will query delegates of intent to show notification
Did notify delegates of intent to show notification, suppression elected: %@
Will ask delegates to process push payload
Did ask delegates to process push payload
Server is not providing an APS env override.
Current APS env matches server preference. %@
Active APS env (%@) does not match server-requested env (%@).
The server requested env (%@) is not valid!
Shutting down APS connection with env %@...
Starting new APS connection with env %@...
Shutting down APS connection...
APNS status changed: %d
APNS reconnected
APS says we have a new public token! %@
BEGIN [%lld]: APSTokenEnvironment  enableTelemetry=YES 
APSTokenEnvironment
END [%lld] %fs:APSTokenEnvironment 
BEGIN [%lld]: APSTokenPopulate  enableTelemetry=YES 
APSTokenPopulate
END [%lld] %fs:APSTokenPopulate 
akd/received-push-message
Received push message: %@. Contents: %@
Push message is not for the IDMS topic. Ignoring!
All queued push messages processed, we're done!
Attempting to process %@
Received push command to tear down notification.
Received push command to refresh AKURLBag
Processing a supressed command, tearing down previous HSA2 alerts
Incoming message alert suppressed
Discarding message as ineligible: %@
Push message is not intended for the primary iCloud account, suppressing...
Push message required a passcode, but current device does not have one...
Push message is for an unknown altDSID: %@
Push message is only allowed for primary account, suppressing...
Showing alert for message %@.
User interacted with alert - %lul.
Notification torn down by server!
User dismissed notification. Nothing further to do.
No action to be done for push command %@.
Processed all known commands, notifying delegates
Trying to generate login code now for %@...
Failed to generate login code. Error: %@
Will display login code notification...
Will display piggy notification...
Tearing down login notification: %@
Will tear down current notification, with ID: %@
Will tear down notification with ID: %@
Will take user to password-reset flow in Settings for %@...
Using the following URL for iForgot redirect: %@
Active login notification id: %@
Found matching iCloud account %@ for push.
AKSQLiteQuerry deallocated, not binding parameters
Error binding sql statement with parameter: %@
Parameter type not handled, failing binding statement.
%@: Failed to generate authentication parameters with error (%@)
%@: Failed to configure SRP context with error (%@)
%@: Performing SRP request with context (%@)
HSA2 repair required: %@
Suppressing piggybacking for non-primary iCloud accounts
BEGIN [%lld]: PiggybackingProcessPushPayload  CircleStep=%{public,signpost.telemetry:number1,name=CircleStep}d  enableTelemetry=YES 
Suppressed payload: %@
 DidProcess=%{public,signpost.telemetry:number2,name=DidProcess}d 
PiggybackingProcessPushPayload
END [%lld] %fs:PiggybackingProcessPushPayload  DidProcess=%{public,signpost.telemetry:number2,name=DidProcess}d 
Suppressing the circle error payload
We received a reply: %@
Processed a pending reply with payload: %@
Starting an accepting session with payload: %@
Failed to get a controller
 Class=%{public,signpost.telemetry:string1,name=Class}@  enableTelemetry=YES 
PiggybackingProcessPiggybackPayloadWithController
BEGIN [%lld]: PiggybackingProcessPiggybackPayloadWithController  Class=%{public,signpost.telemetry:string1,name=Class}@  enableTelemetry=YES 
Accepting session finished successfully
END [%lld] %fs:PiggybackingProcessPushPayload 
Accepting session finished with error: %@
END [%lld] %fs:PiggybackingProcessPushPayload  Error=%{public,signpost.telemetry:number1,name=Error}d 
Orphaned payload: %@
Processing pending reply!
authkit/circle-request
Starting circle request with context: %@
Populating push token
Failed to populate push token
Circle request failed with error: %@
Waiting for reply with timeout: %f
 Payload=%{public,signpost.telemetry:string1,name=Payload}@  enableTelemetry=YES 
PiggyCircleRequest
BEGIN [%lld]: PiggyCircleRequest  Payload=%{public,signpost.telemetry:string1,name=Payload}@  enableTelemetry=YES 
authkit/circle-operation
Starting circle operation with context: %@
Waiting... %@ - (%@) - %@
Cancelled piggybacking request: %@
Timeout for piggybacking request: %@
Notifying the other side that we're really done
Circle request (%@) completed with response: %@
END [%lld] %fs:PiggyCircleRequest  CircleStep=%{public,signpost.telemetry:string2,name=CircleStep}@  Error=%{public,signpost.telemetry:number2,name=Error}d 
PiggyExecuteRequest
BEGIN [%lld]: PiggyExecuteRequest  CircleStep=%{public,signpost.telemetry:string1,name=CircleStep}@  enableTelemetry=YES 
END [%lld] %fs:PiggyExecuteRequest  CircleStep=%{public,signpost.telemetry:string2,name=CircleStep}@  Error=%{public,signpost.telemetry:number2,name=Error}d 
Received response for circle (step 0) request: %@
Circle (step 0) response payload (%@) received with presenceSID (%{mask.hash}@)
Circle (step 0) response payload (%@) does not contain presenceSID, ignoring response
No push token available for check-in!
Error getting phone bundle information: %@
Failed to fetch follow up identifiers: %@
Posting active services as: %@
Check-in to server without any active services for account: %@
Starting to fetch app info for %@
Failed to fetch app info with error: %@
Fetched app info for %@
Starting to fetch bundle id for Primary application for serviceID: %@, altDSID: %@
Failed to fetch Primary application with error: %@
Fetched Primary application bundle id for %@
bio metric PET requested.
passcode PET requested.
altDSID is available for auth: %@
Client Bundle ID is available
Opting into Experimental Mode through SRP
Sending requested cloud partition: %@
Test Account Header Attached
Password available. Will ask for bootstrap password-based auth.
No password, but CK is available. Will ask for ck-based auth.
Master Key avalable.  Will ask for mk-based auth.
%@: Attaching additional headers (%@) to SRP request
Context has provieded UDID for proxied device.
Sending experimental features as %lu
%@: Attempting to clear continuation token for account (%@)
Device is still not trusted, not performing auth.
Authorization Rapport Link Client invalidated
Authorization Rapport Link Client failed to activate. {errorDomain=%{public}@, errorCode=%ld, error=%@}
Invalid request, cannot properly set RPAppSingInService flags. {requestContext=%@}
Authorization Rapport activated, and AppSignIn is advertising.
Asked to perform authorization, but one is already in progress. {requestContext:%@}
%s Unable to satisfy password request
Rapport authorization called with no completion callback. {authorization=%@, errorDomain=%{public}@, errorCode=%ld, error=%@}
AuthorizationRapportClient present UI failed. {errorDomain=%{public}@, errorCode=%ld, error=%@}
Received StartAuthorization. {request=%@, options=%@}
Ignoring StartAuthorization, one is already in progress.
Failed to archive the credential request context. {archiveError=%@}
Received AuthorizationDidFinish. {request=%@, options=%@}
Failed to unarchive error. {unarchiveError=%@}
Failed to unarchive authorization. {unarchiveError=%@}
AKD received request for TTR on non-internal build, suppressing.
AKD received push request to create TTR with title: %@
The TTR request was missing a title - message was: %@
AKD received request for TTR on non-internal build, ignoring.
Completed launch of tap-to-radar with result: %@, error: %@
Attempt to perform authentication without an upgrade token!
Attempt to perform authentication without altDSID!
Current context requires interactive auth for Apple ID: %@
Token upgrade requested without a username
Server requests remote UI
Short-lived token upgrade failed: %@
Attempting token upgrade with altDSID %@...
Missing URL bag entry for federated account, attempting IDP flow...
Server says to show UI at IDP URL: %@
Handling IDP response: %@
v24@?0@"AKFidoAuthenticationResponse"8@"NSError"16
v24@?0@"AKFidoContext"8@"NSError"16
v32@?0@"AKAuthenticationServerResponse"8@"NSDictionary"16@"NSError"24
v8@?0
v24@?0@"NSData"8@"NSError"16
v16@?0@?<v@?@"NSData"@"NSError">8
v24@?0@"AKIconContext"8@"NSError"16
@"AKCoordinatedDataBlock"8@?0
items
action
v32@?0@"NSHTTPURLResponse"8@"NSData"16@"NSError"24
@32@?0@"NSDictionary"8Q16^B24
B32@?0@"FLFollowUpItem"8Q16^B24
v32@?0@"FLFollowUpItem"8Q16^B24
/Library/Application Support/com.apple.akd/privateEmails.db
INSERT OR REPLACE INTO emails (client_key, email) VALUES (?, ?)
DELETE FROM emails WHERE client_key = ?
SELECT email FROM emails WHERE client_key=?
v24@?0^{sqlite3_stmt=}8^B16
SELECT privateEmailListVersion FROM version
UPDATE version SET privateEmailListVersion = ?
SELECT protocol_version FROM version
UPDATE version SET protocol_version = ?
SELECT email, client_key FROM emails
accountInfo
devices
adsid
@32@?0@8Q16^B24
v32@?0@"NSDictionary"8Q16^B24
/System/Library/Frameworks/BaseBoard.framework/BaseBoard
/System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard
/AppleInternal/Library/Frameworks/BaseBoard.framework/BaseBoard
BSAuditToken
Unable to find class %s
com.apple.authkit.client
com.apple.authkit.client.private
com.apple.authkit.client.internal
com.apple.authkit.client.owner
com.apple.authkit.writer.internal
com.apple.dt.Xcode
com.apple.dt.xcodebuild
com.apple.dt.xcscontrol
application-identifier
com.apple.application-identifier
com.apple.developer.applesignin
com.apple.authkit.authorization-bundle-identifier-proxy
AKOwnerProxyClient: %@
akd [on behalf of %@]
com.apple.akd
accountsd
backupd
aktool
askpermissiond
itunesstored
Preferences
StoreKitUIService
appstored
Carousel
com.apple.aktool
com.apple.internal.appleAccountSetupTool
exited?
%@ (%@)
ptkn
autype
acname
DsPrsId
uireq
com.apple.gs.idms.pet
com.apple.gs.idms.hb
X-Apple-GS-Token
X-Apple-HB-Token
X-Apple-AK-Auth-Type
X-Apple-I-CK
X-Apple-I-PRK
X-Apple-SL-Token
X-Apple-I-MD-DATA
X-Apple-I-Recovery-Session-Id
com.apple.gs.idms.beneficiary.add
X-Apple-I-AURL
X-Apple-I-AURL-Type
X-Apple-I-Device-Terms
X-Apple-I-MD-Cmd-Target
underAge
isSenior
ageOfMajority
firstPartyApp
privateEmail
X-Apple-I-Data
additionalInfo
appleIdSignInEnabled
privateAttestationEnabled
phoneAsAppleId
primaryEmail
primaryEmailVetted
naurl
X-Apple-I-NAURL
canHaveCustodian
canBeCustodian
custodianEnabled
custodianLastUpdateDate
canHaveBeneficiary
canBeBeneficiary
buuid
beneficiaryWrappedKey
countryCode
appleManagedAccount
orgType
orgName
notificationEmailAvailable
notificationEmail
fidoAuth
@"<NSSecureCoding>"32@?0@"NSString"8@"NSString"16^B24
atxid
alias
demoAccount
params
paired
alternateDsid
hsa2
hsa1
managed
v16@?0B8B12
idmsPresence=%@, foundDevice=%@
v24@?0@"AKCircleRequestPayload"8@"NSError"16
DSID
%06u
v12@?0B8
proximityDetected
/Library/Application Support/com.apple.akd/authorization.db
v32@?0@"NSString"8Q16^B24
v32@?0@"AKDeveloperTeam"8Q16^B24
SELECT team_id, uid FROM authorized_teams WHERE team_id = ?
SELECT team_id FROM authorized_applications WHERE client_id = ?
SELECT team_id FROM authorized_teams WHERE uid = ?
UPDATE authorized_applications SET credential_state = ? WHERE client_id = ?
DELETE FROM authorized_applications WHERE client_id = ?
UPDATE authorized_applications SET credential_state = ?, authorizedAppListVersion = 'TEMPORARY'
TEMPORARY
INSERT OR REPLACE INTO authorized_teams (team_id, uid) VALUES (?, ?)
v32@?0@"NSString"8@"AKConsentedApplication"16^B24
INSERT OR REPLACE INTO authorized_applications (client_id, team_id, scopes, origin, credential_state, transfer_state, primary_client_id, authorizedAppListVersion) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
SELECT client_id FROM authorized_applications WHERE authorizedAppListVersion != ? AND authorizedAppListVersion != 'TEMPORARY'
UPDATE authorized_applications SET credential_state = ?, authorizedAppListVersion = ? WHERE authorizedAppListVersion != ?
SELECT client_id, scopes, credential_state, transfer_state, primary_client_id, origin FROM authorized_applications WHERE team_id = ?
NULL
SELECT client_id FROM authorized_applications WHERE credential_state = ?
SELECT authorizedAppListVersion FROM version;
v16@?0^{sqlite3_stmt=}8
UPDATE version SET authorizedAppListVersion = ?
UPDATE version SET db_version = ?
/System/Library/Frameworks/SetupAssistant.framework/SetupAssistant
/System/Library/PrivateFrameworks/SetupAssistant.framework/SetupAssistant
/AppleInternal/Library/Frameworks/SetupAssistant.framework/SetupAssistant
BYLicenseAgreement
POST
com.apple.gs.idms.mrk
v20@?0B8@"NSError"12
v24@?0@"NSDictionary"8@"NSError"16
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
v28@?0B8@"AKAuthenticationServerResponse"12@"NSError"20
<%@: %p {
base: %f,
maxQueueSize: %lu,
_counter: %lu,
_queueSize: %lu,
<%@: %p {
delay: %f,
maxQueueSize: %lu,
_counter: %lu,
_queueSize: %lu,
application/json
Content-Type
Accept
X-Apple-Password-Only
X-Apple-Offer-Security-Upgrade
X-Apple-Ephemeral-Auth
ckgen
icscrec
rpet
X-Apple-I-App-Provided-Context
X-Apple-I-Proxied-ICSCREC
X-Apple-I-Proxied-PRK-Gen
X-MMe-Proxied-Client-Info
X-Apple-Identity-Token
X-Apple-I-Device-Configuration-Mode
X-Apple-I-Proxied-MD-M
X-Apple-I-Companion-MD-M
mk2fa
X-Apple-I-Request-UUID
X-Apple-I-ReAuth
addBeneficiaryToken
addCustodianToken
dependentAltDSID
v24@?0@"AKAttestationData"8@"NSError"16
v24@?0@"NSMutableDictionary"8@"NSError"16
true
%@:%@
com.apple.AuthKit.PromptEvent
clientId
proxiedClientId
hasUsername
proxyingForPairedDevice
accountSecurityLevel
authenticationType
authReason
capabilityForUIDisplay
__OSINSTALL_ENVIRONMENT
__AKSYNCBUBBLE
No Bundle ID
No Proxied Client ID
%lu%@
<%@: %p {
dispatchDate: %@,
dispatchCounter: %lu,
algorithmIdentifier: %@,
relinquishmentHandler: %@,
headerValue: %@,
capp
papp
svct
ralg
base
delay
maxqueue_size
AKUISurrogateQueue
Out-of-process surrogate auth is already in progress for client %@.
XPC Error launching out-of-process authentication for client %@ with surrogate ID %@.
v16@?0@"NSError"8
Failed to launch out-of-process authentication for client %@ with surrogate ID %@.
Settings surrogate auth is already in progress for client %@
Redirecting to Settings for client %@ is not permitted for this call.
Failed to prompt for Settings redirect for client %@.
User canceled Settings redirect for client %@.
Unable to launch Settings for client %@.
UI surrogate %@ not registered. Unable to do UI work.
 AKAuthenticationSurrogateManager Error: %@
beneficiaryUUID
claimId
selections
accessKey
beneficiaryFirstName
beneficiaryLastName
beneficiaryPassword
Authorization
CREATE TABLE IF NOT EXISTS authorized_teams (team_id TEXT PRIMARY KEY, uid TEXT, authorizedAppListVersion TEXT);
CREATE TABLE IF NOT EXISTS authorized_applications (client_id TEXT PRIMARY KEY, team_id TEXT, scopes TEXT, credential_state INTEGER);
CREATE TABLE IF NOT EXISTS version (authorizedAppListVersion TEXT PRIMARY KEY);
ALTER TABLE version ADD COLUMN db_version INTEGER;
ALTER TABLE authorized_applications ADD COLUMN authorizedAppListVersion TEXT
UPDATE version SET authorizedAppListVersion = 'TEMPORARY';
INSERT OR REPLACE INTO version (authorizedAppListVersion, db_version) values ('TEMPORARY', '%i');
ALTER TABLE authorized_applications ADD COLUMN transfer_state TEXT
ALTER TABLE authorized_applications ADD COLUMN primary_client_id TEXT
ALTER TABLE authorized_applications ADD COLUMN origin TEXT;
DROP TABLE IF EXISTS version;
CREATE TABLE IF NOT EXISTS version (authorizedAppListVersion TEXT PRIMARY KEY, db_version INTEGER);
com.apple.AuthKit.TiburonAttempt
/System/Library/Frameworks/KeychainCircle.framework/KeychainCircle
/System/Library/PrivateFrameworks/KeychainCircle.framework/KeychainCircle
/AppleInternal/Library/Frameworks/KeychainCircle.framework/KeychainCircle
KCJoiningAcceptAccountCircleDelegate
KCJoiningAcceptSession
KCJoiningRequestSecretSession
<%@: %p> Value: %@, Expiry (%@)
@"NSString"8@?0
@"NSArray"8@?0
@"_AKExpiringCacheValue"8@?0
Response
spim
cpim
X-Apple-I-MD-RINFO
X-Apple-I-MD-M
Status
com.apple.akd.anisette
v32@?0@"NSString"8@"NSString"16^B24
ownerAppleId
recoverySessionId
ownerCustodianAltDSID
custodianUUID
idmsdata
aadata
encryptedPRKC
nextStep
wrappingKeyRKC
txnid
recoveryAlternateDsId
custodianUUIDs
beneficiaryUUIDs
timestampOnCK
uuid
hashWrappingKeyRKC
status
@"NSDictionary"32@?0@"AKTrustedContact"8Q16^B24
https://gsa.apple.com/grandslam/GsService2/lookup/v2
https://gsa.apple.com/grandslam/GsService2/lookup
idata
%@/%@
com.apple.AuthKit.TiburonAuthorizationUI
passwordCredentialCount
didShowAppleID
useAnonymous
useAppleID
usePasswordCredential
modifiedName
com.apple.AuthKit.TiburonRequest
originClientType
apple
appleweb
includesAuthorizationRequest
includesPasswordRequest
clientID
appID
teamID
isFirstTimeAuth
<akredacted>
isUpgradeFromPassword
com.apple.authkit.post-install
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.ak.postinstall
com.apple.AuthKit.StartAuthorization
CredentialRequest
com.apple.AuthKit.AuthorizationDidFinish
Error
com.apple.AuthKit.DidStartServerAuthorization
duration
requestID
didCancel
passwordRequestSuccess
authorizationRequestSuccess
errorDomain
errorCode
underlyingErrorDomain
underlyingErrorCode
allDevices
includeFamily
oses
services
com.apple.proximity-controller
com.apple.proximity-controller-engine
-[AKProximityController dealloc]
Authorization Session - <%@: %p context %@, requested by %@, sessionID: %@>
AKAuthorizationClearanceQueue
AKAuthorizationTrafficQueue
v32@?0@"NSString"8@"AKAuthorizationSession"16^B24
com.apple.authkit.authorization-session
/System/Library/Frameworks/IDS.framework/IDS
/System/Library/PrivateFrameworks/IDS.framework/IDS
/AppleInternal/Library/Frameworks/IDS.framework/IDS
IDSService
IDSDefaultPairedDevice
IDSSendMessageOptionBypassDuetKey
IDSSendMessageOptionEnforceRemoteTimeoutsKey
IDSSendMessageOptionTimeoutKey
com.apple.private.alloy.anisette
akcmd
akarg
akid
aktyp
akrid
akret
aksuc
akerd
AKCommandMessage <%p> {
Internal ID: %@,
Command: %@,
Argument: %@ }
NSData <%@ bytes>
(none)
AKReplyMessage <%p> {
Internal ID: %@,
Reply-To: %@,
Success: %@,
Error: %@,
RD: %@ }
com.apple.ak.idsq
v28@?0B8@"NSData"12@"NSError"20
-[AKPeerIDSAnisetteService syncAnisetteWithSIMData:completion:]
-[AKPeerIDSAnisetteService eraseAnisetteWithCompletion:]
-[AKPeerIDSAnisetteService provisionAnisetteWithCompletion:]
-[AKPeerIDSAnisetteService legacyAnisetteDataForDSID:withCompletion:]
v32@?0@"IDSDevice"8Q16^B24
com.apple.authkit.peer-as.txn
v24@?0@"AKAnisetteData"8@"NSError"16
-[AKPeerIDSAnisetteService _mhq_handleIncomingReplyMessage:]
-[AKPeerIDSAnisetteService service:didSwitchActivePairedDevice:acknowledgementBlock:]
PrivateEmail
CREATE TABLE IF NOT EXISTS emails (client_key TEXT PRIMARY KEY, email TEXT);
CREATE TABLE IF NOT EXISTS version (privateEmailListVersion TEXT PRIMARY KEY, db_version INTEGER);
INSERT OR REPLACE INTO version (privateEmailListVersion, db_version) VALUES('%@', '%i')
ALTER TABLE version ADD COLUMN protocol_version INTEGER
UPDATE version SET protocol_version = %i,db_version = %i
SELECT client_key FROM emails;
DELETE FROM emails WHERE client_key = '%@';
PRAGMA foreign_keys=off
ALTER TABLE emails RENAME TO emails_orig
CREATE TABLE emails AS SELECT * FROM emails_orig
ALTER TABLE emails ADD COLUMN bundle_id TEXT
CREATE INDEX client_bundle_idx ON emails(client_key,bundle_id)
DROP TABLE emails_orig
PRAGMA foreign_keys=on
UPDATE version SET db_version = %i
ALTER TABLE emails RENAME TO emails_v4
CREATE TABLE emails (client_key TEXT PRIMARY KEY, email TEXT)
INSERT INTO emails (client_key,email) SELECT client_key,email FROM emails_v4
DROP TABLE emails_v4
com.apple.AuthKitUIService
context
oopUIMode
v24@?0@"BSProcessHandle"8@"NSError"16
pbv2
idmsapproved
pbv2m
defbtn
albtn
none
prevtxnid
alert
title
body
stitle
sbdy
sftr
silent
akdata
pedr
<%@:%p> command: %lu, identifier: %@
com.apple.ak.puffin.xpc
recipientEmail
com.apple.Preferences
com.apple.akd.default
com.apple.AuthKit
Localizable
ALERT_DEFAULT_CANCEL
number
slotID
label
dataPreferred
defaultVoice
physicalSim
inUse
PhoneCertificate
B32@?0@"CTXPCServiceSubscriptionContext"8Q16^B24
com.apple.accounts.carrierUtilities.queue
v40@?0@"NSDictionary"8@"NSData"16@"NSHTTPURLResponse"24@"NSError"32
Request
Header
isHSA2Eligible
AKAuthVerificationQueue
v24@?0@"AKAppleIDUserInformationResponse"8@"NSError"16
v40@?0@"NSString"8@"NSString"16@"NSDictionary"24@"NSError"32
v24@?0Q8@"NSError"16
cdks
v36@?0B8@"NSDictionary"12@"NSHTTPURLResponse"20@"NSError"28
%llu
security-code
X-Apple-I-Vetting-Token
IDMS
B24@?0@"ACAccount"8Q16
v28@?0B8@"NSDictionary"12@"NSError"20
v24@?0@"AKAuthenticationServerResponse"8@"NSError"16
v24@?0@"ACAccount"8@"NSError"16
-[AKAppleIDAuthenticationService _refreshLocalAccountAndUpdateContext:completion:]
WRONG_PASSWORD_ALERT_TITLE
WRONG_PASSWORD_ALERT_MESSAGE
MISSING_INPUT_ALERT_TITLE
MISSING_INPUT_ALERT_MESSAGE
BAD_NETWORK_ALERT_TITLE
BAD_NETWORK_ALERT_MESSAGE
CODE_INVALID_TITLE
CODE_INVALID_MESSAGE
UNDERAGE_ALERT_TITLE
UNDERAGE_ALERT_MESSAGE
APPLE_MANAGED_ACCOUNT_SIGN_IN_PROHIBITED_TITLE
APPLE_MANAGED_ACCOUNT_SIGN_IN_PROHIBITED_MESSAGE
APPLE_MANAGED_ACCOUNT_NEEDS_SETTINGS_REDIRECT_TITLE
APPLE_MANAGED_ACCOUNT_NEEDS_SETTINGS_REDIRECT_MESSAGE
APPLE_MANAGED_ACCOUNT_UNABLE_TO_SIGN_IN_TITLE
APPLE_MANAGED_ACCOUNT_APPLICATION_BLOCKED_MESSAGE_APPNAME_ORGNAME_FORMAT
APPLE_MANAGED_ACCOUNT_APPLICATION_BLOCKED_MESSAGE_ORGNAME_FORMAT
APPLE_MANAGED_ACCOUNT_APPLICATION_BLOCKED_MESSAGE_APPNAME_FORMAT
APPLE_MANAGED_ACCOUNT_APPLICATION_BLOCKED_MESSAGE
SRP_VERIFICATION_ERROR_TITLE
UNKNOWN_ERROR_ALERT_TITLE
UNKNOWN_ERROR_ALERT_MESSAGE
v24@?0@"NSString"8@"NSString"16
ENTER_VERIFICATION_CODE_PIG
v20@?0B8@"NSDictionary"12
@"NSString"32@?0@"NSString"8@"AKToken"16^B24
com.apple.gs.icloud.storage.buy
v24@?0@"NSNumber"8@"NSError"16
?%@=%@
-[AKPiggybackRequestingController _initiatePiggybackingWithCleanSession:withCompletion:]
AKPiggybackRequestingController.m
completion
%@-%lu
-[AKPiggybackRequestingController processPushPayload:completion:]
%06lu
AKPrivateEmailRemoteViewController
APPLE_ACCOUNT
STORE
GAMECENTER
FACETIME
MESSAGES
prefs:notifyAuthKit=true&authKitContextID=%@
ACCOUNTS_AND_PASSWORDS&path=%@
&root=%@
HME_ERROR_ALERT_INSUFFICIENT_SECURITY_LEVEL_TITLE
HME_ERROR_ALERT_INSUFFICIENT_SECURITY_LEVEL_MESSAGE
HME_ERROR_ALERT_BUTTON_CONTINUE
HME_ERROR_ALERT_BUTTON_CLOSE
-[AKPrivateEmailDaemonService presentPrivateEmailUIForContext:completion:]
v24@?0@"AKPrivateEmail"8@"NSError"16
https://www.apple.com
AKLastEmailListRequestDateKey
userinfodata
dataCenter
com.apple.authkit.sync-private-emails
com.apple.authkit.authorization-list-update
v24@?0@"AKApplicationMetadataInfo"8@"NSError"16
-[AKUserInfoController _setLastEmailListRequestDate:]
-[AKUserInfoController _broadcastEmailChangeNotification]
_bundleIdentifier
_bundleName
_bundleDescription
_bundleType
_otherInfo
tddelta
mids
v32@?0@8Q16^B24
-[AKProximityPiggybackEngine dealloc]
invalidListVersion
hmeMappings
hmeProtocolVersion
Hide My Email info {added=%@, removed=%@, invalid=%d, shouldSync=%d}
/System/Library/Frameworks/SafariFoundation.framework/SafariFoundation
/System/Library/PrivateFrameworks/SafariFoundation.framework/SafariFoundation
/AppleInternal/Library/Frameworks/SafariFoundation.framework/SafariFoundation
SFSafariCredentialStore
authenticatorData
clientData
signature
credentialId
userHandle
AKAuthorizationRemoteViewController
com.apple.akd.context-validator
InteractiveUsernameOnly
Interactive
SilentPreferred
%@ -> %@
v24@?0q8@"NSError"16
v24@?0@"AKDeveloperTeam"8@"NSError"16
/System/Library/Frameworks/CoreLocation.framework/CoreLocation
/System/Library/PrivateFrameworks/CoreLocation.framework/CoreLocation
/AppleInternal/Library/Frameworks/CoreLocation.framework/CoreLocation
CLGeocoder
CLLocation
AKNotificationNameTornDown
AKNotificationNamePresented
com.apple.authkit.pushPresenterQueue
v16@?0Q8
v16@?0@"NSString"8
%loc%
LOGIN_CODE_ALERT_TITLE_DEFAULT
LOGIN_CODE_ALERT_IOS_MESSAGE_DEFAULT
LOGIN_CODE_ALERT_MESSAGE_FOOTER_DEFAULT
(internal:piggy)
APPLE_ID_SIGN_IN_HEADER
APPLE_ID_UNABLE_TO_RESOLVE_LOCATION_FOR_REASON
APPLE_ID_LOCALE_AND_ADMINISTRATIVE_AREA_FORMAT
v24@?0@"NSArray"8@"NSError"16
LOGIN_CODE_ALERT_OK_BUTTON
ALERT_DEFAULT_BUTTON
CHANGE_PASSWORD_ALERT_TITLE
CHANGE_PASSWORD_ALERT_BODY
CHANGE_PASSWORD_ALERT_DEF_BTN
CHANGE_PASSWORD_ALERT_ALT_BTN
prefs:root=ACCOUNTS_AND_PASSWORDS&path=%@&aaaction=changePassword
prefs:root=APPLE_ACCOUNT&aaaction=changePassword
v32@?0@"NSDictionary"8@"NSDictionary"16@"NSError"24
v24@?0@"AKAuthorization"8@"NSError"16
AKUIWorkQueue
v32@?0@"AKClient"8@"AKAppleIDAuthenticationContext"16@"NSError"24
v32@?0@"NSHTTPURLResponse"8@"NSDictionary"16@"NSError"24
FORGOT_PASSWORD_ALERT_RESET_BUTTON
FORGOT_PASSWORD_ALERT_MESSAGE
FORGOT_PASSWORD_ALERT_CANCEL_BUTTON
FORGOT_PASSWORD_ALERT_TITLE
PASSWORD_ALERT_SETTINGS_BUTTON
PASSWORD_ALERT_CANCEL_BUTTON
PASSCODE_ALERT_TITLE_WITH_USERNAME
PASSWORD_ALERT_TITLE_WITH_USERNAME
PASSWORD_ALERT_MESSAGE_WITH_USERNAME
CONTINUE_AUTH_ALERT_TITLE
CONTINUE_AUTH_ALERT_MESSAGE
PASSWORD_ALERT_TITLE
PASSWORD_ALERT_MESSAGE
PASSCODE_ALERT_TITLE_LOCKSCREEN
PASSCODE_ALERT_MESSAGE_LOCKSCREEN
PASSWORD_ALERT_TITLE_LOCKSCREEN
PASSWORD_ALERT_MESSAGE_LOCKSCREEN
PASSWORD_ALERT_MESSAGE_PROXY_INTERNAL_BLAME
PASSWORD_ALERT_MESSAGE_INTERNAL_BLAME
com.apple.ak.checkin-allowed
v32@?0@"ACAccount"8Q16^B24
AKCheckInQueue
com.apple.authkit.heartbeat-aps-token
com.apple.authkit.ack
com.apple.authkit.heartbeat-as-needed
com.apple.authkit.heartbeat-all
B32@?0@"ACAccount"8Q16^B24
com.apple.authkit.liveness-event
com.apple.authkit.global-signout-event
com.apple.authkit.service-signout-event
com.apple.ak.hb
%02x
v32@?0@"NSNumber"8@"NSArray"16^B24
com.apple.AuthKit.TiburonSatori
wasSuccess
availableLateAfterAuthComplete
performVerificationSuccess
performVerificationDuration
verificationResults
verificationResultsDuration
com.apple.AuthKit.AuthEvent
eventType
wasSuccessful
No Auth Type
AKSQLErrorCode
com.apple.authkit.itemstorequeue
BEGIN EXCLUSIVE TRANSACTION
COMMIT TRANSACTION
ROLLBACK TRANSACTION
pragma foreign_keys=on
@"NSXPCConnection"8@?0
custodianListVersion
beneficiaryListVersion
beneficiaryADSID
beneficiaryAccountName
SELECT COUNT(*) FROM %@
PRAGMA table_info('%@')
AKSharedBag
AKBagFetchQueue
com.apple.AuthKit.Piggyback
piggybackResult
circleTimeout
acceptingDone
requestingCancelled
requestingEscapedThroughHatch
Unknown Result
Default
v24@?0@"AKAuthorizationPresentationContext"8@"NSError"16
v16@?0@"NSArray"8
-[AKAuthorizationDaemonService _setupLoginChoicesForPresentationContext:]
create
v24@?0@"AKAuthorizationUserResponse"8@?<v@?@"AKAuthorization"@"NSError">16
AuthorizationServices
-[AKAuthorizationDaemonService presentAuthorizationUIForContext:completion:]
v24@?0@"AKAuthorizationUserResponse"8@"NSError"16
team_id
state
nonce
silent_app_transfer
client_id
origin
claim
selectedEmail
scopes
subscriptionToken
<%@ - identifier: %@, title: %@, subTitle: %@, body: %@, action button: %@, other button: %@, apps:%@>
com.apple.authkit.IDSFetchQueue
v24@?0@"AKAppleIDServerResourceLoadDelegate"8@"NSError"16
v32@?0@"NSString"8@"NSDictionary"16@"NSError"24
-[AKClientAnisetteService fetchAnisetteDataAndProvisionIfNecessary:withCompletion:]
-[AKClientAnisetteService syncAnisetteWithSIMData:completion:]
-[AKClientAnisetteService eraseAnisetteWithCompletion:]
-[AKClientAnisetteService provisionAnisetteWithCompletion:]
-[AKClientAnisetteService legacyAnisetteDataForDSID:withCompletion:]
-[AKClientAnisetteService fetchPeerAttestationDataForRequest:completion:]
/System/Library/Frameworks/Rapport.framework/Rapport
/System/Library/PrivateFrameworks/Rapport.framework/Rapport
/AppleInternal/Library/Frameworks/Rapport.framework/Rapport
RPCompanionLinkClient
RPCompanionLinkDevice
RPDestinationIdentifierDirectPeer
RPAppSignInService
<undefined>
SELECT db_version FROM version;
com.apple.language.changed
New connection from client %@ with the AK write entitlment.
New connection from client %@ (internal).
New connection from client %@ (private).
New connection from client %@ (public).
New connection from client %@ (beleverde).
New connection from client %@ because of internal code signing.
Rejecting connection from client %@ because it is not entitled.
_State
com.apple.akd.request-dispatcher-scheduler
v16@?0@"NSDictionary"8
<%@: %p context %@, requested by %@>
AKATCClearanceQueue
AKAuthTrafficQueue
com.apple.ak.unknown
v32@?0@"NSString"8@"NSMutableArray"16^B24
com.apple.authkit.authorization-fetch-user-information
com.apple.ak.listupdate
com.apple.authkit.keychain
/System/Library/Frameworks/ApplePushService.framework/ApplePushService
/System/Library/PrivateFrameworks/ApplePushService.framework/ApplePushService
/AppleInternal/Library/Frameworks/ApplePushService.framework/ApplePushService
APSConnection
APSEnvironmentProduction
com.apple.ak.aps.sim
com.apple.idmsauth
com.apple.authkit.pushServiceQueue
LOGIN_CODE_ALERT_TITLE_FAILED
prefs:root=APPLE_ACCOUNT&aaaction=resetPassword
prefs:root=ACCOUNTS_AND_PASSWORDS&path=%@&aaaction=resetPassword
com.apple.akd.srp-request
com.apple.authkit.piggybacking-request
liveness
signout-all
signout-
noptkn
imei
imei2
clcg
clhs
clbg
prtn
iccid
meid
event
circleStatus
cdpStatus
phones
isRecoveryContactAssignee
isLegacyContactAssignee
custodianAssigneeStatus
beneficiaryAssigneeStatus
X-Apple-I-Client-Time
X-Mme-Device-Id
X-Apple-I-MLB
X-Apple-I-ROM
X-Apple-I-SRL-NO
X-Mme-Companion-Device-Id
X-Mme-Proxied-Device-Id
bootstrap
ckauth
mrkauth
pdec
ploc
biopet
passcodepet
retry
cbid
pbid
v32@?0@"NSDictionary"8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSDictionary"@"NSError">24
v24@?0@"NSDictionary"8@"NSDictionary"16
-[AKAuthorizationRapportClient performAuthorization:companionLinkClient:advertisingService:completion:]
v24@?0@"<NSSecureCoding>"8@"NSError"16
ttrinfo
IDMS has triggered TTR for a failure in %@ | %@ (%@) 
 Title: %@ 
 Message: %@
AuthKit
621449
tap-to-radar
ComponentName
ComponentVersion
ComponentID
Classification
Serious Bug
Reproducibility
I Didn't Try
AutoDiagnostics
phone
Title
Description
Keywords
RelayState
X-Apple-I-FA-Relay-State
v28@?0B8@"NSHTTPURLResponse"12@"NSError"20
application/x-www-form-urlencoded
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleExecutable</key>
<string>akd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.akd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>akd</string>
<key>CFBundlePackageType</key>
<string>APPL</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1.0</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>14A5270i</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.1</string>
<key>DTSDKBuild</key>
<string>20B43</string>
<key>DTSDKName</key>
<string>iphonesimulator16.1.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A5270i</string>
<key>MinimumOSVersion</key>
<string>16.1</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>abs-client</key>
<string>143531244</string>
<key>adi-client</key>
<string>572356293</string>
<key>application-identifier</key>
<string>com.apple.akd</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
<string>identity</string>
</array>
<key>com.apple.CompanionLink</key>
<true/>
<key>com.apple.accounts.idms.fullaccess</key>
<true/>
<key>com.apple.appletv.pbs.user-presentation-service-access</key>
<true/>
<key>com.apple.apsd.ios-device-push-token</key>
<true/>
<key>com.apple.authentication-services-core.allow-authentication-request-proxying</key>
<true/>
<key>com.apple.authkit.client.internal</key>
<true/>
<key>com.apple.bluetooth.internal</key>
<true/>
<key>com.apple.bluetooth.system</key>
<true/>
<key>com.apple.cdp.walrus</key>
<true/>
<key>com.apple.coreidvd.spi</key>
<true/>
<key>com.apple.developer.associated-domains</key>
<array/>
<key>com.apple.developer.device-information.user-assigned-device-name</key>
<true/>
<key>com.apple.devicecheckd</key>
<true/>
<key>com.apple.frontboard.debugapplications</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.keystore.lockassertion</key>
<true/>
<key>com.apple.keystore.sik.access</key>
<true/>
<key>com.apple.mobileactivationd.device-identifiers</key>
<true/>
<key>com.apple.mobileactivationd.spi</key>
<true/>
<key>com.apple.nano.nanoregistry</key>
<true/>
<key>com.apple.private.MobileActivation</key>
<array>
<string>RequestActivationState</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.adid</key>
<true/>
<key>com.apple.private.applemediaservices</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.associated-domains</key>
<true/>
<key>com.apple.private.followup</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.anisette</string>
</array>
<key>com.apple.private.ids.messaging.urgent-priority</key>
<array>
<string>com.apple.private.alloy.anisette</string>
</array>
<key>com.apple.private.ids.phone-number-authentication</key>
<true/>
<key>com.apple.private.ids.remotecredentials</key>
<true/>
<key>com.apple.private.imcore.imremoteurlconnection</key>
<true/>
<key>com.apple.private.keychain.circle.join</key>
<true/>
<key>com.apple.private.notificationcenter-system</key>
<array>
<dict>
<key>identifier</key>
<string>com.apple.AuthKit</string>
</dict>
</array>
<key>com.apple.private.octagon</key>
<true/>
<key>com.apple.private.security.storage.Safari</key>
<true/>
<key>com.apple.private.storagekitd.info</key>
<true/>
<key>com.apple.private.swc.system-app</key>
<true/>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.Preferences</string>
</array>
<key>com.apple.security.attestation.access</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.SharedWebCredentials</string>
<string>com.apple.fairplayd.versioned</string>
<string>com.apple.mobile.keybagd.xpc</string>
<string>com.apple.mobileactivationd</string>
<string>com.apple.devicecheckd</string>
<string>com.apple.AuthenticationServicesCore.AuthenticationServicesAgent</string>
<string>com.apple.server.bluetooth.le.att.xpc</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.nanobuddy</string>
<string>com.apple.pairedsync</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.system-container</key>
<true/>
<key>com.apple.sharing.Services</key>
<true/>
<key>com.apple.springboard.CFUserNotification</key>
<true/>
<key>com.apple.springboard.activateRemoteAlert</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.symptom_diagnostics.report</key>
<true/>
<key>com.apple.usermanagerd.persona.background</key>
<true/>
<key>com.apple.usermanagerd.persona.fetch</key>
<true/>
<key>fairplay-client</key>
<string>508119322</string>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.akd</string>
<string>com.apple.cfnetwork</string>
<string>com.apple.akd.pcsauth</string>
</array>
<key>keychain-cloud-circle</key>
<true/>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>akd</string>
</array>
</dict>
</plist>
@(#)PROGRAM:akd  PROJECT:AuthKit-1
>)q=)
680
AKFidoInterface
NSObject
AKFidoDaemonService
AKAuthorizationIconManager
AKFollowUpManager
AKAppleIDPushHelperServiceDelegate
AKPrivateEmailStoreManager
AKAppleIDUserInformationResponse
AKDeviceListResponse
AKOwnerProxyClient
AKClient
AKAppleIDCodeGenerator
AKGrandSlamResponseHandler
AKPiggybackingRequestProvider
NSSecureCoding
NSCoding
AKAuthenticationServerResponse
AKPiggybackAcceptingController
KCJoiningAcceptSecretDelegate
AKDServerUIContext
AKAuthorizationStoreManager
AKURLRequestProviderImpl
AKURLRequestProvider
AKAuthModeRequestProvider
AKADIProxy
AKAccountRecoveryController
AKSurrogateAuthenticationIDGenerator
AKSatoriController
AKExponentialDispatchingAlgorithm
AKDispatchingAlgorithm
AKConstantDispatchingAlgorithm
AKFollowUpRequestProvider
AKSecurityUpgradeEligibilityRequestProvider
AKKeychainItem
AKSRPAuthenticationContextHelper
AKCAAuthPromptReporter
AKDispatchingCalculation
AKAuthenticationSurrogateModel
AKAuthenticationSurrogateManager
AKInheritanceRequestProvider
AKAuthorizationStoreMigrator
AKSQLiteMigration
AKCATiburonRequestAttemptReporter
_AKExpiringCacheValue
AKExpiringCache
AKNativeAnisetteService
AKAnisetteServiceProtocol
AKCustodianRequestProvider
AKURLBagRequestProvider
AKCATiburonInputUIReporter
AKKeychainItemDescriptor
AKCATiburonRequestReporter
AKPostInstallService
AKCAReporter
AKDeviceListRequestProvider
AKProximityController
AKProximityEngineController
AKAuthorizationSession
AKAuthorizationSessionManager
_AKMessage
AKCommandMessage
AKReplyMessage
AKPeerIDSAnisetteService
IDSServiceDelegate
AKPrivateEmailStoreMigrator
AKLoginPresenter
NSXPCListenerDelegate
AKLoginPresenterHostInterfaceProtocol
AKPushMessage
AKPrivateEmailRequestProvider
AKFollowUpManagerFactory
AKUserNotificationManager
AKSRPContext
AKCarrierBundlePhoneCertificate
AKCarrierBundleUtilities
AKDispatchableURLRequest
AKDispatchableRequest
AKAppleIDAuthenticationService
AKPiggybackRequestingControllerDelegate
AKDServerUIDelegate
AKAppleIDAuthenticationDaemonProtocol
AKAuthorizationEndorserRapportDiscovery
AKAuthorizationEndorserRapportClientDelegate
AKPiggybackRequestingController
KCJoiningRequestSecretDelegate
AKPrivateEmailPresenter
SBSRemoteAlertHandleObserver
AKPrivateEmailPresenterHostProtocol
AKFollowUpControllerServiceProviderImpl
AKFollowUpControllerServiceProvider
AKAuthenticationSettingsLauncher
AKPrivateEmailDaemonService
AKPrivateEmailDaemonProtocol
AKFuture
AKAnisetteProvisioningService
AKAnisetteProvisioningDaemonProtocol
AppleIDSigning
AKAppleIDSigningDaemonProtocol
AKUserInfoController
AKBundleInformation
NSCopying
AKDeviceListController
AKProximityPiggybackEngine
AKProximityEngine
AKProximityPiggybackRequestingEngine
CBPeripheralManagerDelegate
AKProximityPiggybackAcceptingEngine
CBCentralManagerDelegate
CBPeripheralDelegate
AKPrivateEmailInformation
AKPrivateEmailServiceController
AKFidoDaemonServerHandler
AKAuthorizationPresenter
AKAuthorizationPresenterHostProtocol
AKServiceControllerImpl
AKServiceController
AKAuthenticationContextSanitizer
AKSRPService
AKAuthorizationCredentialStateController
AKPushMessageNotificationPresenter
AKGrandSlamRequestProvider
AKAuthorizationEndorserRapportClient
AKAuthorizationDaemonServiceDelegate
AKAuthenticationUILiaison
AKAuthenticationSurrogateManagerDelegate
AKAppleIDCheckInHelperService
AKStoreUtils
AKAuthorizationNotificationHandler
AKAdaptiveServiceInterface
AKAuthorizationStateBroadcastHandler
AKApplicationAuthorizationController
AKCASatoriReporter
AKCAAuthEventReporter
AKSQLiteExecutor
AKAuthorizationConnectionManager
AKCustodianDaemonService
AKCustodianDaemonProtocol
AKInheritanceInterface
AKInheritanceDaemonService
AKSQLiteHelper
AKURLBagService
NSURLSessionDelegate
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
AKURLBagDictionaryProvider
AKCAPiggybackReporter
AKAuthorizationDaemonService
AKAuthorizationDaemonProtocol
AKSRPAuthorizationContextHelper
AKUserNotification
AKDServerUIController
AKClientAnisetteService
AKStoreMigrator
AKDaemonConnectionManager
AKRequestDispatcher
_AKScheduledRequest
AKAuthorizationRevokeUpgradeController
AKTrafficClearenceRequest
AKAuthenticationTrafficController
AKAuthorizationListUpdateService
AKAppleIDAuthSupportProxyImpl
AKAppleIDAuthSupportProxy
AKKeychainManager
AKAppleIDPushHelperService
APSConnectionDelegate
AKMasterKeyVerifierRequestProvider
AKSQLiteQuery
AKFidoRequestProvider
AKSRPRequest
AKPiggybackReplyWaiter
AKPiggybackController
AKLivenessRequestProvider
AKCATiburonAuthorizationUIReporter
AKApplicationInformationController
AKSRPContextHelper
AKAuthorizationRapportClient
AKTTRController
AKTokenUpgradeRequestProvider
AKEducationEnterpriseController
protocol
getCurrentDataSubscriptionContextSync:
setCustodianLastModified:forAccount:
setManagedOrganizationType:
canHaveBeneficiaryForAccount:
services
ak_arrayWithJSONResponseData:
_proxiedClientAppID
sharedURLSession
getCredentialsForAppWithAppID:externallyVerifiedAndApprovedSharedWebCredentialDomains:completionHandler:
primaryClientID
setCustodianEnabled:forAccount:
ak_anisetteHeadersWithData:
setManagedOrganizationName:forAccount:
currentLocale
supportsPresence
_proxiedAssociatedDomains
passwordResetTokenForAccount:
serviceWithDefaultShellEndpoint
primaryAuthKitAccount
getCredentialsForAppWithAppID:completionHandler:
sharedSigner
isContextRequestingReauthForExistingService
setManagedOrganizationName:
canBeCustodianForAccount:
setServiceType:
lock
supportsPiggybacking
replyPayload
_proxiedAppName
serviceType
effectiveBoolValueForSetting:
passwordResetTokenBackupForAccount:
ak_anisetteHeadersWithCompanionData:
setMakePrivateEmail:
isContextEligibleForSilentAuthCoercion
previouslyWantedPrivateEmail
arrayWithObjects:count:
ak_addTimeZoneHeaders
subscriptionsInUse
setServiceToken:
localizedStringForKey:value:table:
currentDeviceAuthenticationModeForAuthContext:
isContextEligibleForSilentAuth
_proxiedAppBundleID
setCredentialItem:forKey:
canBeBeneficiaryForAccount:
arrayWithObjects:
previouslySelectedEmail
repairURL
ak_addShortLivedTokenHeaderWithIdentityToken:forAltDSID:
subscriptions
setMachineID:
_masterKey
localizedNameForContext:
passwordRequest
arrayWithObject:
getApprovedSharedWebCredentialsEntriesSortedByHighestValueForAppWithAppID:completionHandler:
currentDevice
initWithData:encoding:
doubleValue
setLongitude:
repairStateForAccount:
setCredential:forAccount:serviceID:error:
isContextEligibleForBiometricOrPasscodeAuth
DSID
setServerInfo:
localizedName
isCancelled
serviceIdentifiers
setCredential:
ak_addSKUCountryHeader
currentConnection
localizedDescription
setLoginChoices:
domain
arrayByAddingObjectsFromArray:
_shouldUseProxiedClientBundleIDForSRP
setSelectedRequest:
stringWithUTF8String:
repairState
setCreateAppleID:
serviceIdentifier
ak_addReAuthenticationHeader
presentationContextForRequestContext:client:
setLoggedInServices:
doesNotRecognizeSelector:
isBaaEnabledForKey:
array
stringWithFormat:
IsFollowUpItemNotificationForced:
setControlFlags:
setSelectedPrivateEmail:forAccount:
ak_addProxiedDeviceUDIDHeader:
sharedConnection
_capabilityForUIDisplay
_shouldSkipInitialReachabilityCheck
renewRecoveryTokenURL
setSelectedEmail:
setLocalPresenceFound:
stringValue
ak_addProxiedClientInfoHeader:
setContinuationToken:
parsableRepresentation
_shouldSkipBiometrics
stringRepresentationForService:
presentServerProvidedUIForContext:withConfiguration:completion:
locality
isAppleIDLoginEnabled
sharedConfiguration
archivedDataWithRootObject:requiringSecureCoding:error:
bytes
frequency
ownerDevice
setSelectedAuthorizationEmail:forAccount:
ak_addProxiedAnisetteHeaders:
_shouldSkipAuthorizationUI
localeIdentifier
sharedCacheReliantAnisetteFreeSession
removeUnusedAndDuplicateAuthKitAccountsWithCompletion:
apps
setLatitude:
forwardingEmailForAccount:
credentialID
_localUserHasEmptyPassword
bundleWithURL:
presentSecondFactorUIForContext:completion:
setSecurityLevel:forAccount:
ownerCustodianAltDSID
ak_addProvisioningUDIDHeader
locale
sharedCacheEnabledURLSession
setLastKnownIDMSEnvironment:
UUID
applicationStateForApplication:
stringByReplacingOccurrencesOfString:withString:
credentialForAccount:error:
bundleWithIdentifier:
forwardingEmail
ownerAppleID
ak_addPRKRequestHeader
_shouldSendIdentityTokenForRemoteUI
setScopes:
sharedCacheEnabledAnisetteFreeSession
dismissServerProvidedUIForContext:completion:
stringByDeletingLastPathComponent
setScheme:
applicationProxyForIdentifier:
formattedUsernameFromUsername:
localUserUUID
bundleURL
setKeyAndBundleIdAreHashed:
validateVettingTokenURL
_shouldSendGrandSlamTokensForRemoteUI
ak_addLocaleHeader
origin
appleOwnedDomains
credential
presentSecondFactorAlertForContext:withError:title:message:completion:
isActive
forceUpdateBagWithUrlSwitchData:completion:
setCompletion:
orderedSetWithArray:
localPresenceFound
stringByAppendingString:
dismissSecondFactorUIForContext:completion:
ak_addLocalUserUUIDHashHeader
setScale:
_shouldRefreshAccountAndUpdateContext
removeObjectAtIndex:
sharedBag
validateExternalizedContext:error:
setIsUsernameEditable:
stringByAppendingFormat:
optionsWithDictionary:
serverFriendlyDescription
ak_addJSONRequestHeader
appleIDCountryCodeForAccount:
setIsUnderage:
isAccountsFrameworkAvailable
setClientInfo:
_urlAtKey:
_keepAlive
linkedDevicesWithRelationship:
removeObject:
validateCodeURL
isAcceptingPayload
setRoutingInfo:
ak_addInternalBuildHeader
_shouldForceUI
options
dismissNativeRecoveryUIForContext:completion:
storeModernRecoveryURL
bundleForClass:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
sharedAuthKitFollowupProvider
setClientID:
setIsSenior:
operation
linkType
removeMasterTokenForAccount:
serialNumber
_isWebLogin
_shouldForcePrivateEmail
ak_addICSCIntentHeader
appleIDAuthorizationURLs
uuid
presentNativeRecoveryUIForContext:recoveryContext:completion:
removeItemAtPath:error:
ak_addFidoRecoveryTokenHeader:
setClientErrorCode:
firstObject
length
createChildAccountURL
operatingSystems
_isSilentAppTransfer
dismissKeepUsingUIForContext:withCompletion:
store
openURL:configuration:completionHandler:
sharedAnisetteFreeURLSession
buildReauthenticationContextFromContext:error:
setIsProxy:
sendRequestID:request:destinationID:options:responseHandler:
removeFollowUpItemsWithIdentifiers:error:
userUnderAgeForAccount:
createAppleIDURL
set_shouldUseProxiedClientBundleIDForSRP:
ak_addFeatureMaskHeader
setResourceLoadDelegate:
fireDate
legacyAnisetteDataForContext:DSID:withCompletion:
coverGlassColor
setClientAppName:
buildLoginCodeNotificationWithTitle:body:footer:loginCode:
userSelection
stopScan
setIsNotificationEmailAvailable:forAccount:
_isRapportLogin
removeFollowUpItems:error:
set_shouldSkipAuthorizationUI:
setRequiresTouchID:
ak_addEphemeralAuthHeader
initWithCapacity:
dismissBasicLoginUIForContext:completion:
_upgradeContext
appleIDAccountWithAppleID:
_isProxyingForApp
stopAdvertising
setRequestedScopes:
removeContinuationTokenForAccount:
setIsNotificationEmailAvailable:
boolValue
internationalMobileEquipmentIdentity2
openSensitiveURL:withOptions:error:
sendMessage:toDestinations:priority:options:identifier:error:
initWithBytesNoCopy:length:freeWhenDone:
ak_addDeviceUDIDHeader
countByEnumeratingWithState:objects:count:
presentLoginAlertForContext:withError:title:message:completion:
appleIDAccountWithAltDSID:
sendEventID:event:destinationID:options:completion:
setCliMode:
set_shouldSendIdentityTokenForRemoteUI:
setIsEphemeral:
openSensitiveURL:withOptions:
statusCode
fileURLWithPath:
_updateWithValuesFromContext:
launchOutOfProcessAuthentication:surrogateID:withErrorHandler:
internationalMobileEquipmentIdentity
initWithBytes:length:encoding:
count
ak_addDeviceSerialNumberHeader
appleIDAccountType
setRequestType:
set_shouldSendGrandSlamTokensForRemoteUI:
fileExistsAtPath:
openApplicationWithBundleID:
userIsSeniorForAccount:
internalFeaturesMaskValue
selectedRequest
ak_addDeviceROMHeader
initWithBundleIdentifier:allowPlaceholder:error:
copy
set_sessionID:
setClasses:forSelector:argumentIndex:ofReply:
selectedPrivateEmailForAccount:
setInterruptionLevel:
removeAllObjects
state
integratedCircuitCardIdentifier
initWithBundleIdentifier:
openApplication:withOptions:completion:
ak_addDeviceMLBHeader
startup
presentKeepUsingUIForContext:appleID:completion:
removeAllCachedResponses
set_requirePassword:
selectedEmail
lastKnownIDMSEnvironment
userInformation
set_proxiedClientTeamID:
ak_addDeviceConfigurationModeHeaderForAuthContext:
appendFormat:
presentFidoAuthForContext:fidoContext:completion:
setCategoryIdentifier:
_isForcedEligibleForForegroundAuthentication
removeAccount:withCompletionHandler:
userInfoFromContext:
setInitialURLRequestKey:
selectedAuthorizationEmailForAccount:
set_proxiedClientBundleID:
ak_addCountryHeader
initWithBase64EncodedString:options:
setCanHaveCustodian:forAccount:
appProvidedData
intValue
userInfoFromAccount:
_isFirstPartyLogin
lastDataSyncTimestamp
setRepairState:forAccount:
continuationTokenForAccount:error:
set_proxiedClientAppName:
ak_addClientTimeHeader
securityUpgradeContext
objectForInfoDictionaryKey:
presentBiometricOrPasscodeValidationForContext:completion:
insertObject:atIndex:
objectAtIndexedSubscript:
setCanHaveBeneficiary:forAccount:
appProvidedContext
setRemoteObjectInterface:
startProvisioningURL
remoteObjectProxyWithErrorHandler:
setInformativeText:
continuationTokenForAccount:
set_proxiedClientAppID:
securityLevelForAccount:
ak_addClientInfoHeader
initWithAppleID:altDSID:
setCanBeCustodian:forAccount:
appIconForBundleID:size:completion:
remoteObjectProxy
beneficiarySetupToken
keyAndBundleIdAreHashed
set_proxiedAssociatedDomains:
ak_addClientApp:
numberWithUnsignedLongLong:
userIdentifier
fetchPeerAttestationDataForContext:withRequest:completion:
presentBasicLoginUIForContext:completion:
remoteObjectInterface
numberWithUnsignedLong:
setCanBeBeneficiary:forAccount:
_setPassword:
setIdentityTokenValue:
_isEligibleForUpgradeFromPassword
userID
beneficiaryPassword
set_performUIOutOfProcess:
ak_addAuthorizationHeaderWithIdentityToken:forAltDSID:
initWithAltDSID:identityToken:
setIdentityToken:
_setMessage:
userChosenName
anticipateEscrowAttempt
setBody:
beneficiaryListVersion
setReason:
itemsForAltDSID:pushMessageInfo:fromIDMSPayload:
ak_addAuthorizationHeaderWithHeartbeatToken:forAltDSID:
initWithAddress:forKey:
numberWithUnsignedInteger:
set_notifyOfTimeout:
beneficiaryLastName
setRealUserVerificationData:
anonymousListener
dictionaryWithObjects:forKeys:count:
user
fetchFollowUps
UTF8String
itemIdentifiersRequiringNotificationClearFromPayload:
startCoordinatingBlock:
initWithAccountType:
_externalLocalAuthData
ak_addAppleIDUserModeHeaderWithValue:
numberWithLongLong:
containsObject:
set_isSilentAppTransfer:
dictionaryWithDictionary:
initialMessage:
setReachableEmails:
itemIdentifier
_externalAuthToken
numberWithLong:
anisetteDataWithError:
setHost:
ak_addAppleIDHeaderWithValue:
containingAppForPlugInWithPid:
set_isRapportLogin:
registerRequestID:options:handler:
_setIdentityToken:
ROMAddress
setReachableEmailAddresses:forAccount:
dictionaryWithCapacity:
beneficiaryFirstName
set_iconScale:
ak_addAppProvidedContext:
numberWithInteger:
initWithUser:site:
setBeneficiaryOperationsByID:
presenceMode
confirmReceiptForMessage:
startAdvertising:
registerObserver:
fetchConfigDataURL
beneficiaryContacts
setHeartbeatTokenValue:
set_iconData:
scopes
_setEnabledTopics:
registerEventID:options:handler:
ak_acceptedTermsInfo
numberWithInt:
initWithUser:password:
setBeneficiaryListVersion:forAccount:
presenceFallbackApproved
dictionary
beginTransaction
IDMSEnvironment
setHeartbeatToken:
numberWithDouble:
setQueryItems:
setBeneficiaryListVersion:
akAction
informativeText
set_forceEligibleForForegroundAuthentication:
deviceTrustRevokedForAccount:
setQualityOfService:
altDSIDforPrimaryiCloudAccount
initWithUUIDString:
presenceCheckPassed
isValidEnvironment:
setHasUsedAuthorization:
ageOfMajorityForAccount:
standardUserDefaults
configurationInfoURL
scannerWithString:
set_externalAuthToken:
_performUIOutOfProcess
urlAtKey:
numberWithBool:
setBeneficiaryAltDSID:
deviceSpecificLocalizedStringWithKey:
_interpolatedReason
altDSIDForAccount:
setHasMDM:forAccount:
isValid
indexOfObjectPassingTest:
set_clientShouldAuthenticateExternally:
scanUnsignedLongLong:
setBeneficiaryAccountName:
uppercaseString
numberFromString:
postNotificationName:object:userInfo:deliverImmediately:
site
initWithURL:resolvingAgainstBaseURL:
null
isUsernameEditable
administrativeArea
set_clientAuthenticatedExternallyWithPassword:
beginDataTaskWithRequest:completionHandler:
scanForPeripheralsWithServices:options:
upgradeUIURL
includeUntrustedDevices
postNotificationName:object:userInfo:
setBeneficiary:forAccount:
setProxiedIdentityToken:
UUIDString
fetchAnisetteDataForContext:provisionIfNecessary:withCompletion:
additionalInfoForAccount:
signingHeadersForRequest:completion:
setHTTPMethod:
includeFamilyDevices
componentsWithURL:resolvingAgainstBaseURL:
saveAccount:error:
postNotificationName:object:
setHTTPContentType:
set_attemptIndex:
isUnlocked
setProxiedAltDSID:
initWithURL:
setBagUrlKey:
notificationEmailForAccount:
beginAuthenticationDataTaskWithRequest:completionHandler:
recoveryStep
setBagProvider:
componentsSeparatedByString:
signatureForURLRequest:completionHandler:
setXpcEndpoint:
allValues
sanitiseInternalState
recoverySessionID
basicAuthURL
setHTTPBody:
isUnderage
setAuthorizedRequest:
componentsJoinedByString:
allObjects
piggybackingLocalPresenceOverride
setWithObjects:
signature
notificationDictionaryWithTitle:message:defaultButton:alternateButton:
setGivenName:forAccount:
recoveryContextWithServerInfo:
base64EncodedStringWithOptions:
updateWithHTTPURLResponse:
setAuthorizationUsed:forAccount:
setWithObject:
piggybackingIDMSPresenceOverride
addTimer:forMode:
allKeysForObject:
initWithType:primary:
_informativeText
recordUserAcceptedAgreementVersion:
signalFromServerResponse:
bagForAltDSID:
setGivenName:
_authSessionTimeoutInterval
backingColor
notificationAction
compare:
desiredInternalTokens
initWithString:
allKeys
setWithArray:
signal
isTriggeredByNotification
addService:
reauthenticateWithContext:completion:
setFrequency:
setPrivateAttestationEnabled:forAccount:
setWhitelistedPathURLs:
companionDeviceAnisetteData
identityTokenValue
notification
setAuthorizationRequest:
isTracingEnabled
addOperation:
allHeaderFields
setForwardingEmail:forAccount:
wrappingKeyRKC
identityToken
reason
authorizedRequest
nonce
setAuthkitAccount:
setPrimaryEmailAddress:forAccount:
companionDevice
initWithServiceName:viewControllerClassName:
_endpoint
allHTTPHeaderFields
setWaitForReplyTimeout:
realUserVerificationData
setForwardingEmail:
authorizedApplicationsListVersion
signWithBAAHeaders:completion:
wrappedKeyData
setPrimaryEmailAddress:
addObjectsFromArray:
setForceSilentAuth:
setAuthenticationType:
allAuthKitAccounts
initWithService:
dependentAltDSID
setWaitForReply:
familyNameForAccount:
_identityToken
authorizedAppListVersion
signRequestWithCommonHeaders:
reachableEmails
newHandleWithDefinition:configurationContext:
iForgotURL
setPrimaryClientID:
addObject:
demoAccountForAccount:
setAuthenticationMode:forAccount:
setVerifiedPrimaryEmail:forAccount:
reachableEmailAddressesForAccount:
setPreviouslyWantedPrivateEmail:
signRequestWithBasicHeaders:
familyName
iForgotContinuationURL
addNotificationRequest:withCompletionHandler:
aliasesForAccount:
setFlags:
unsignedLongLongValue
setValuesForKeysWithDictionary:
authorizationUsedForAccount:
reverseGeocodeLocation:completionHandler:
setAuthenticationMode:
waitUntilDate:
combinedAliasesAndReachableEmailsForAccount:
externalizedVersionString
setPreviouslySelectedEmail:
reachabilityWithHostName:
initWithServerResponse:
iCloudAccountForAppleID:
waitUntilAllOperationsAreFinished
needsSecurityUpgradeUI
unsignedIntegerValue
addFollowUpItems:error:
rawAccountPassword
defaultWorkspace
setPresentationType:
phoneNumber
setValue:forHTTPHeaderField:
setFido:forAccount:
color
externalizedVersion
addExecutionBlock:
signRequest:
_iconSize
_attemptIndex
shutdown
needsRepair
unsignedIntValue
iCloudAccountForAltDSID:
housingColor
IDMSEnvironmentFromBag:
DSIDForAccount:
defaultSound
extensionItemWithAppleIDAuthenticationContext:
_iconScale
initWithResponseInfo:
needsPasswordChange
waitForReplyTimeout
addEntriesFromDictionary:
code
_iconName
setAuthenticated:
defaultManager
unregisterObserver:
needsNewChildAccount
host
waitForReply
addDelegate:queue:
setPresenceCheckPassed:
setAuthMode:
isRequestingPayload
defaultCenter
phoneAsAppleIDForAccount:
setPhoneNumberCertificate:
setUserUnderage:forAccount:
setFamilyName:forAccount:
expirationDate
_iconData
authorizationRequest
needsNewAppleID
resume
unlock
setUserSelection:
isRecoverableError:
heartbeatTokenValue
clientInfo
_sanitizedCopy
activeServiceNamesForAccount:
ak_wrappedAnisetteError:
setFamilyName:
setPhoneInformation:
showAlertForError:withCompletion:
queryItems
needsCredentialRecovery
decorateWithContext:
responseMessage
uniqueIdentifier
clientID
showAlert:primaryAction:altAction:cancelAction:
personaIDIfCurrentPersonaIsDataSeparated
ak_urlQueryString
wait
setPhoneAsAppleID:forAccount:
isProtectedWithPasscode
setExtensionIdentifier:
existingStatus
queryItemWithName:value:
uniqueDeviceIdentifier
hearbeatTokenForAccount:
setUserIsSenior:forAccount:
ak_urlEncoded
shouldUpdatePersistentServiceTokens
decodedRecoveryPETString
setExportedObject:
resourceURL
vettedPrimaryEmail
isPrimaryiCloudAccount:
setUserInformation:
publicToken
clientErrorCode
mutableCopy
performWithinPersonaForAccount:withBlock:
ak_truncatedCopy
initWithRequest:requestType:
shouldUpdateAuthModeForAccount:
setExportedInterface:
unarchivedObjectOfClass:fromData:error:
initWithRequest:
clientData
mostRecentlyUsedAuthKitAccount
hashedWrappingKeyRKC
setUserInfo:
modelNumber
decodedRecoveryIdentityTokenString
ak_setJSONBodyWithParameters:
activateWithContext:
setExistingStatus:
_requirePassword
initWithQueue:
mobileEquipmentIdentifier
ak_setBodyWithParameters:
setUserIdentifier:
setApps:
activateWithCompletion:
verifyCredentialReason
ak_serverFriendlyString
resourceLoadDelegate
clientAppBundleId
setUserID:
setAppleIDSecurityLevel:
setPasswordResetToken:
shouldSkipSettingsLaunchAlert
verifiedPrimaryEmailForAccount:
hasUsedAuthorization
decodeObjectOfClasses:forKey:
setAppleIDCountryCode:forAccount:
ak_redactedCopy
authkitAccount
setPasswordRequest:
shouldSendServerResponseForRecoveredInfo:withRecoveryError:
valueForEntitlement:
cliMode
setAppleIDAuth:
hasUniqueDeviceIdentifier
txnid
actions
decodeObjectOfClass:forKey:
authenticatorData
ak_proxiedAnisetteHeadersWithData:
setTransferState:
performRegistrationRequestWithContext:completion:
isNotificationEmailAvailableForAccount:
escapeHatchURL
shouldRequestShortLivedToken
triggerAutoBugCaptureWithSubType:andBundleID:userInfo:
setAppProvidedData:
actionWithIdentifier:title:options:
setTransactionId:
setEncryptedPRKC:
ak_mapObjectsNullable:
_strictlyUnarchivedObjectOfClasses:fromData:error:
authenticationType
APSEnvironment
shouldRequestRecoveryPET
errorWithDomain:code:userInfo:
setAppProvidedContext:
initWithParameters:
requestedScopes
setTokenExpiryDate:
ak_mapObjects:
requestedCloudPartition
proxiedDeviceAnisetteData
isMultiUserMode
shouldRequestConfigurationInfo
setOwnerCustodianAltDSID:
setAppBundleID:
setToken:
maximumLoginAttempts
transferState
dateWithTimeIntervalSinceNow:
ak_mapNullable:
isManagedAppleIDForAccount:
authenticationModeForAccount:
proxiedDevice
requestWithURL:
clearNotificationsForItem:error:
setOrigin:
accountPropertyForKey:
hasPrimaryiCloudAccountForAltDSID:
date
setAnticipateEscrowAttempt:
ak_map:
setTitle:
authenticationMode
accountName
shouldPromptForPasswordOnly
requestWithIdentifier:content:trigger:
setAltDSID:forAccount:
transactionID
masterTokenForAccount:
setOptions:
provisionAnisetteForContext:withCompletion:
dataWithPropertyList:format:options:error:
topic
initWithName:value:
ak_jsonDictionaryWithResponseData:
setTeamID:
setDeviceTrustRevoked:forAccount:
setOneTimePassword:
accountAliases
ak_isUserTryAgainError
dataWithBytes:length:
requestType
hasMDMForAccount:
isLegacyStudent
setObject:forSetting:
setAliases:forAccount:
accessKeyString
ak_isUserSkippedError
tokenWithValue:lifetime:
masterKeyID
dataUsingEncoding:
setDeviceEnclosureColor:
attestationDataForRequest:completion:
tokenWithExternalizedVersionString:
isInternalBuild
initWithMachServiceName:
claimTokenString
accessKey
manifest
ak_isUserCancelError
setDeviceColor:
_notifyOfTimeout
shouldOfferSecurityUpgrade
managedOrganizationTypeForAccount:
propertyListWithData:options:format:error:
initWithListenerEndpoint:
tokenWithExternalizedVersion:lifetime:
setAgeOfMajority:forAccount:
teams
circleURL
ak_isUnableToPromptError
_continuationRequestIdentifier
custodianUUID
eraseAnisetteForContext:withCompletion:
setDeviceClass:
shouldIgnoreUserID
isFirstTimeLogin
tokenWithDictionary:
setAgeOfMajority:
circleStep
teamIdentifier
setObject:forKey:
ak_isSurrogateAuthAlreadyInProgressError
setDestinationDevice:
managedOrganizationNameForAccount:
shouldIgnoreTeamID
setObject:atIndexedSubscript:
enumerateObjectsUsingBlock:
changePasswordURL
ac_secureCodingError
tokenWithBase64String:
cdpAccountIsICDPEnabledForDSID:
shouldHideInternalBuildHeader
initWithLatitude:longitude:
ak_isServiceError
setState:
requestOptions
setDemoAccount:forAccount:
synchronousRemoteObjectProxyWithErrorHandler:
authKitAccountWithDSID:
enumerateKeysAndObjectsUsingBlock:
setNotificationEmail:forAccount:
absoluteString
tokenFromAuditToken:
makePrivateEmail
setAdditionalInfo:forAccount:
ak_isIncompatibleDevicesError
setSound:
custodianRecoveryToken
initWithKey:altDSID:clientAppBundleId:
setNotificationEmail:
authKitAccountWithAppleID:
processMessage:error:
token
categoryWithIdentifier:actions:intentIdentifiers:options:
cancelDataTask:
custodianListVersion
initWithKey:altDSID:
ak_isAuthenticationErrorWithCode:
shouldFakeAuthSuccess
endpoint
authKitAccountWithAltDSID:
processIdentifier
custodianLastModifiedForAccount:
setNotificationCategories:
XPCInterface
initWithKey:
mainRunLoop
requestIdentifier
aaData
setShouldUpdatePersistentServiceTokens:
cancelAllOperations
shouldEnableTestAccountMode
ak_isAuthenticationError
performAuthenticationRequestWithContext:completion:
UUIDWithNSUUID:
authKitAccountType
givenNameForAccount:
isEqualToString:
machineID
ak_hexString
requestForRecoveryCompletionWithContext:recoveredInfo:recoveryError:
title
setNotification:
MLBSerialNumber
isEqualToSet:
setAccountProperty:forKey:
initWithInfo:responder:
endTransaction
authKitAccountForSilentServiceToken:
shouldEnableSigninWithMAID
cancel
setShouldSkipSettingsLaunchAlert:
setNeedsPasswordChange:
setAccountName:
givenName
custodianEnabledForAccount:
shouldContinueWithResponse:error:
ak_firstObjectMatchingFilter:
_newZStringWithString:
initWithInfo:
_clientShouldAuthenticateExternally
isEqualToDictionary:
timeIntervalSinceNow
setNeedsNewChildAccount:
setDate:
authKitAccount:
privateEmailAddress
setShouldSendSigningHeaders:
getUserDefaultVoiceSubscriptionContext:
syncAnisetteURL
lowercaseString
isEqualToDate:
setAccount:inUse:byService:
privateAttestationEnabledForAccount:
syncAnisetteForContext:withSIMData:completion:
pendingFollowUpItems:
ak_filter:
shouldContinueWithAuthenticationResults:error:forContextID:completion:
canPerformRequestWithAccount:error:
setShouldSendPhoneNumber:
setNeedsNewAppleID:
getSubscriptionInfoWithError:
timeIntervalSinceDate:
initWithFireDate:interval:target:selector:userInfo:repeats:
shouldCapturePromptBugForContext:
setDSID:forAccount:
ak_errorWithCode:userInfo:
endProvisioningURL
canPerformCredentialRequest:error:
setNeedsCredentialRecovery:
initWithEnvironmentName:namedDelegatePort:queue:
looksLikeiForgotURLKey:
timeIntervalSince1970
_clientAuthenticatedExternallyWithPassword
setShouldPromptForPasswordOnly:
sessionWithSecretDelegate:dsid:error:
primaryiCloudAccount
custodianContacts
ak_errorWithCode:underlyingError:
canPerformAuthorizationRequest:error:
setCustodianRecoveryToken:
isEphemeral
auditToken
setName:
custodianCodeConfiguration
isEligibleForUpgradeFromPassword
setCustodianOperationsByID:
sessionWithInitialMessage:secretDelegate:circleDelegate:dsid:error:
_proxiedClientTeamID
ak_errorWithCode:
setMaximumLoginAttempts:
pendingAuthKitFollowUpPayload:
shouldAllowExperimentalMode
encryptedPRKC
getMobileSubscriberHomeCountryList:error:
canOpenApplication:reason:
setShouldOfferSecurityUpgrade:
longLongValue
ak_errorByAppendingUserInfo:
setCustodianListVersion:forAccount:
_proxiedClientServiceID
shouldAllowDemoMode
URLWithString:
initWithDictionary:
encodeObject:forKey:
primaryEmailAddressForAccount:
loginChoices
payloadWithResponseData:forCircleStep:
canHaveCustodianForAccount:
currentRunLoop
setShouldIgnoreUserID:
session
enclosureColor
ak_dictionaryWithResponseData:
_proxiedClientBundleID
loginChoice
setCustodianListVersion:
attestationHeaders
primaryEmailAddress
setManagedOrganizationType:forAccount:
payloadWithMessage:
setShouldIgnoreTeamID:
initWithDelegate:queue:options:
enableTransactions
currentReachabilityStatus
servicesUsingAccount:
isContinuityPush
ak_booleanAsInteger
_proxiedClientAppName
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
registerFidoKeyWithContext:completion:
verifyFidoKeyWithFidoContext:completion:
verifyFidoKeyWithContext:completion:
verifyFidoRecoveryWithContext:recoveryToken:completion:
serviceName
exportedObject
exportedProtocol
configureExportedInterface:
_handleGrandSlamFidoAuthorizationResponse:context:recoveryToken:error:completion:
authorizationController
serverHandler
.cxx_destruct
_authorizationController
_serverHandler
init
sharedManager
startFetchingIconWithRequestContext:
setFetchIconBlockForPresenter:withContext:
continueFetchingIconWithRequestContext:completion:
_startFetchingIconForBundleID:size:scale:
_isFetchingIconWithRequestContext:
_serviceIDForRequestContext:
_dataBlockForKey:
_setDataBlock:forKey:
_removeDataBlockForKey:
_dataBlocksLock
_dataBlocks
processPushMessage:
shouldSuppressPushMessage:
didRespondToMessage:withResult:
didRespondToMessage:result:payload:
didReceiveNewPublicToken:
initWithFollowUpFactory:provider:
synchronizeFollowUpItemsForContext:authHandler:completion:
_refreshFollowUpsWithIdmsInfo:context:completion:
_refreshFollowUpsWithIdmsInfo:context:authHandler:completion:
_processFetchCompletionForAltDSID:items:fetchError:completion:
_synchronizeLocalFollowUpsWithServerPayload:altDSID:error:
_alignedInsertionCandidates:withExistingItems:
teardownFollowUpWithContext:completion:
_notifyServerOfTeardownWithContext:completion:
pendingFollowUpWithMessageId:
pendingFollowUpWithCommand:
tearDownFollowUpsWithItems:
serviceProvider
setServiceProvider:
_factory
_provider
_latestPushMessage
_serviceProvider
T@"<AKFollowUpControllerServiceProvider>",&,N,V_serviceProvider
sharedInstance
initWithDatabasePath:
initWithExecutor:
initWithPath:
clearDatabase:
setPrivateEmail:keyAlreadyHashed:error:
removePrivateEmailForContext:error:
emailForContext:error:
_hashKeyIfNecessary:
currentEmailListVersion
setCurrentEmailListVersion:error:
commitChangesToCacheWithInformation:error:
currentProtocolVersion
setProtocolVersion:error:
fetchAllPrivateEmailsWithError:
executor
setExecutor:
_executor
T@"AKSQLiteExecutor",&,N,V_executor
initWithResponseBody:
allAccountNames
dictionaryRepresentation
userInformationRepresentation
setUserInformationRepresentation:
_allAccountNames
_userInformationRepresentation
T@"AKUserInformation",C,N,V_userInformationRepresentation
T@"NSArray",R,C,N,V_allAccountNames
T@"NSDictionary",R,C,N
_parseDevicesFromResponseBody:
deviceMap
_deviceMap
T@"NSDictionary",R,C,N,V_deviceMap
initWithConnection:
name
initWithCredentialRequest:
initWithCredentialRequest:connection:
hasInternalAccess
hasPrivateAccess
hasPrivateSignedAccess
hasPublicAccess
hasWriteAccess
hasOwnerAccess
localizedAppName
bundleID
appID
teamID
_credentialRequest
isAppWithBundleIDForeground:
initWithAuditToken:
xpcConnection
hasInternalPrivateEntitlementAccess
hasInternalPrivateAccess
hasInternalEntitledAccess
_hasApprovedSigningIdentifier
_codeSigningIdentifier
_approvedCodeSigningIdentifiers
_isAppleBinary
_isOnInternalBuild
_permitedProcessNamesToProxyWhiteList
isPermittedToProxy
_permitedProcessNamesToProxyInitialAuthWhiteList
isPermittedToProxyInitialAuth
_permittedProcessNamesForInteractiveAuthOnLimitedContext
isPermittedForInteractiveAuthOnLimitedContext
_exemptedBundleIDsFromMandatoryUISecurityUpgrade
isExemptedFromMandatoryUISecurityUpgrade
isPermittedToProxyAuthorizationBundleIdentifier
fullName
_bundleNonPluginKit
_bundle
proxyWithErrorHandler:
_appIDForMacOS
_appIDForIOS
authorizationAccessLevel
authorizationRequiresRapport
authorizationClientProvidesUI
_arrayValueForEntitlement:
_boolValueForEntitlement:
_stringValueForEntitlement:
_connection
_name
_fullName
_description
_bundleID
_auditToken
T@"NSXPCConnection",R,N
TB,R,N
T@"NSString",R,N
generateLoginCode:
initWithContext:
handleResponseError:
_handleInvalidMasterTokenWithSubErrorCode:
_revokeDeviceTrust
context
setContext:
_context
T@"AKAppleIDAuthenticationContext",&,N,V_context
initWithCircleContext:
requestURL
authKitBody
signRequest:error:
_circleContext
encodeWithCoder:
initWithCoder:
supportsSecureCoding
TB,R
integerValue
decodedConfigurationInfo:
initWithSRPContext:
_federatedPayloadFromInfo:
initWithServerResponse:forAppleID:
initWithServerResponse:responseBody:
_harvestCommonFieldsFromResponse:
_harvestCommonFieldsFromBody:
_harvestManagedAppleIDInfoFromDictionary:
passwordEquivalentToken
_setPasswordEquivalentToken:
heartbeatToken
inheritanceBeneficiarySetupToken
_setHeartbeatToken:
isUpdateable
updateWithSecondaryAuthenticationBody:
_updateAccountInformationWithResultsDictionary:
updateWithSecondaryAuthenticationResponse:
updateWithSecondaryAuthenticationResponse:shouldUpdateDSID:
_updateDSIDWithRawValue:
_decodeBase64String:
_numberFormatter
serverProvidedData
appleID
dsid
altDSID
aliases
appleIDSecurityLevel
authMode
masterToken
continuationToken
passwordResetToken
shortLivedToken
custodianSetupToken
serviceTokens
isRetryRequired
isSecondaryActionRequired
secondaryActionURLKey
isSecondaryActionURLGSEndpoint
isFidoAuthRequired
secondaryActionMessage
isURLSwitchingRequired
urlSwitchingData
isAnisetteResyncRequired
anisetteResyncData
isAnisetteReprovisioningRequired
shouldProxyAnisetteAction
errorCode
errorMessageTitle
errorMessage
acceptedTermsInfo
isManagedAppleID
isAuditLogin
isServerUIRequired
isPasscodeResetRequired
requireSigningHeaders
configurationInfo
acceptedDeviceTermsVersion
transactionId
serverInfo
allowPiggybacking
allowPiggybackingPresence
isUnderAgeOfMajority
isSenior
ageOfMajority
isFirstPartyApp
privateEmail
primaryEmail
primaryEmailVetted
additionalInfo
nativeActionURLKey
canHaveCustodian
canBeCustodian
custodianEnabled
custodianSessionID
custodianLastModified
canHaveBeneficiary
canBeBeneficiary
beneficiaryIdentifier
beneficiaryWrappedKey
appleIDCountryCode
hasMDM
managedOrganizationType
managedOrganizationName
isNotificationEmailAvailable
notificationEmail
privateAttestationEnabled
firstName
lastName
imageURLString
isDemoAccount
federatedAuthURL
federatedAuthRequestPayload
federatedAuthSamlRequest
federatedAuthURLWhiteList
authorizationUsed
phoneAsAppleID
_serviceTokens
_isRetryRequired
_isSecondaryActionRequired
_secondaryActionURLGSEndpoint
_fidoAuthRequired
_isURLSwitchingRequired
_isAnisetteResyncRequired
_isAnisetteReprovisioningRequired
_shouldProxyAnisetteAction
_isManagedAppleID
_isAuditLogin
_isServerUIRequired
_isPasscodeResetRequired
_requireSigningHeaders
_allowPiggybacking
_allowPiggybackingPresence
_isUnderAgeOfMajority
_isSenior
_isFirstPartyApp
_primaryEmailVetted
_isDemoAccount
_authorizationUsed
_phoneAsAppleID
_serverProvidedData
_appleID
_dsid
_altDSID
_aliases
_appleIDSecurityLevel
_authMode
_masterToken
_continuationToken
_passwordResetToken
_shortLivedToken
_custodianSetupToken
_secondaryActionURLKey
_secondaryActionMessage
_urlSwitchingData
_anisetteResyncData
_errorCode
_errorMessageTitle
_errorMessage
_acceptedTermsInfo
_configurationInfo
_acceptedDeviceTermsVersion
_transactionId
_serverInfo
_ageOfMajority
_privateEmail
_primaryEmail
_additionalInfo
_nativeActionURLKey
_canHaveCustodian
_canBeCustodian
_custodianEnabled
_custodianSessionID
_custodianLastModified
_canHaveBeneficiary
_canBeBeneficiary
_beneficiaryIdentifier
_beneficiaryWrappedKey
_appleIDCountryCode
_hasMDM
_managedOrganizationType
_managedOrganizationName
_isNotificationEmailAvailable
_notificationEmail
_privateAttestationEnabled
_firstName
_lastName
_imageURLString
_federatedAuthURL
_federatedAuthRequestPayload
_federatedAuthSamlRequest
_federatedAuthURLWhiteList
T@"NSDictionary",R,N,V_serverProvidedData
T@"NSString",R,N,V_appleID
T@"NSNumber",R,N,V_dsid
T@"NSString",R,N,V_altDSID
T@"NSArray",R,N,V_aliases
TQ,R,N,V_appleIDSecurityLevel
TQ,R,N,V_authMode
T@"AKMasterToken",R,N,V_masterToken
T@"AKToken",R,N
T@"AKToken",R,N,V_continuationToken
T@"AKToken",R,N,V_passwordResetToken
T@"AKToken",R,N,V_shortLivedToken
T@"AKToken",R,N,V_custodianSetupToken
T@"NSDictionary",R,N,V_serviceTokens
TB,R,N,V_isRetryRequired
TB,R,N,V_isSecondaryActionRequired
T@"NSString",R,N,V_secondaryActionURLKey
secondaryActionURLGSEndpoint
TB,R,N,GisSecondaryActionURLGSEndpoint,V_secondaryActionURLGSEndpoint
fidoAuthRequired
TB,R,N,GisFidoAuthRequired,V_fidoAuthRequired
T@"NSString",R,N,V_secondaryActionMessage
TB,R,N,V_isURLSwitchingRequired
T@"NSString",R,N,V_urlSwitchingData
TB,R,N,V_isAnisetteResyncRequired
T@"NSData",R,N,V_anisetteResyncData
TB,R,N,V_isAnisetteReprovisioningRequired
TB,R,N,V_shouldProxyAnisetteAction
Tq,R,N,V_errorCode
T@"NSString",R,N,V_errorMessageTitle
T@"NSString",R,N,V_errorMessage
T@"NSDictionary",R,N,V_acceptedTermsInfo
TB,R,N,V_isManagedAppleID
TB,R,N,V_isAuditLogin
TB,R,N,V_isServerUIRequired
TB,R,N,V_isPasscodeResetRequired
TB,R,N,V_requireSigningHeaders
T@"NSDictionary",R,N,V_configurationInfo
T@"NSNumber",R,N,V_acceptedDeviceTermsVersion
T@"NSString",R,N,V_transactionId
T@"NSString",R,N,V_serverInfo
TB,R,N,V_allowPiggybacking
TB,R,N,V_allowPiggybackingPresence
TB,R,N,V_isUnderAgeOfMajority
TB,R,N,V_isSenior
T@"NSNumber",R,N,V_ageOfMajority
TB,R,N,V_isFirstPartyApp
T@"NSString",R,N,V_privateEmail
T@"NSString",R,N,V_primaryEmail
TB,R,N,V_primaryEmailVetted
T@"NSDictionary",R,N,V_additionalInfo
T@"NSString",R,N,V_nativeActionURLKey
T@"NSNumber",R,N,V_canHaveCustodian
T@"NSNumber",R,N,V_canBeCustodian
T@"NSNumber",R,N,V_custodianEnabled
T@"NSString",R,N,V_custodianSessionID
T@"NSNumber",R,N,V_custodianLastModified
T@"NSNumber",R,N,V_canHaveBeneficiary
T@"NSNumber",R,N,V_canBeBeneficiary
T@"NSString",R,N,V_beneficiaryIdentifier
T@"NSString",R,N,V_beneficiaryWrappedKey
T@"NSString",R,N,V_appleIDCountryCode
T@"NSNumber",R,N,V_hasMDM
TQ,R,N,V_managedOrganizationType
T@"NSString",R,N,V_managedOrganizationName
T@"NSNumber",R,N,V_isNotificationEmailAvailable
T@"NSString",R,N,V_notificationEmail
T@"NSNumber",R,N,V_privateAttestationEnabled
T@"NSString",R,N,V_firstName
T@"NSString",R,N,V_lastName
T@"NSString",R,N,V_imageURLString
TB,R,N,V_isDemoAccount
T@"NSString",R,N,V_federatedAuthURL
T@"NSData",R,N,V_federatedAuthRequestPayload
T@"NSDictionary",R,N,V_federatedAuthSamlRequest
T@"NSArray",R,N,V_federatedAuthURLWhiteList
TB,R,N,V_authorizationUsed
TB,R,N,V_phoneAsAppleID
isInCircle
secret
accountCode
verificationFailed:
initWithPiggybackReporter:
processPushPayload:completion:
_processProximityDetection:withReplyContext:forPushPayload:
_finishProcessingPushPayload:withReplyContext:completion:
_acceptSessionForPayload:error:
replyContextWithPayload:
_authKitAccountForPayload:
isDone
_generateSecret
_grabLockAssertion
_releaseAssertion
_startProximityControllerIfNeededWithPushPayload:
_startProximityControllerWithPresenceSID:
_stopProximityController
_checkForProximityIfNeededWithCircleStep:completion:
_checkForProximityWithCompletion:
acceptSession
setAcceptSession:
configuration
setConfiguration:
_lastPayload
_initiatingPayload
_verificationAttempts
_circleDelegate
_verificationFailed
_proximityFailed
_piggybackReporter
_proximityController
_proximityDetected
_acceptSession
_configuration
T@"AKConfiguration",&,N,V_configuration
T@"KCJoiningAcceptSession",&,N,V_acceptSession
serverUIContextFromResponse:authContext:urlRequest:
shouldPreventDismissAfterUserSkip
setShouldPreventDismissAfterUserSkip:
authContext
setAuthContext:
initiatingServerResponse
setInitiatingServerResponse:
requestConfiguration
setRequestConfiguration:
_shouldPreventDismissAfterUserSkip
_authContext
_initiatingServerResponse
_requestConfiguration
TB,N,V_shouldPreventDismissAfterUserSkip
T@"AKAppleIDAuthenticationContext",&,N,V_authContext
T@"AKAuthenticationServerResponse",&,N,V_initiatingServerResponse
T@"AKServerRequestConfiguration",&,N,V_requestConfiguration
updateAuthorizationListWithMetadataInfo:completion:
storeAuthorization:forClient:
fetchDeveloperTeamWithTeamID:completion:
fetchDeveloperTeamWithClientID:completion:
performUnsafeVerificationWithUserID:completion:
revokeAuthorizationForApplicationWithClientID:completion:
removeApplicationWithClientID:completion:
revokeAuthorizationForAllApplicationsWithCompletion:
_addTemporaryDeveloperTeam:
_shouldUpdateDatabaseToListVersion:
_storeDeveloperTeam:listVersion:
_storeConsentedApplication:teamID:listVersion:
_handleRevokedApplicationsForVersion:
_fetchApplicationsForTeamID:
_optionalValueWithString:
_fetchAllAuthorizedClientIDs
fetchAuthorizationListVersion
setListVersionToVersion:
_setDatabaseVersionToVersion:
buildRequest:
validateResponseData:error:
responseDictionaryWithData:error:
expectedResponseType
requestBodyType
client
setClient:
shouldCacheResource
T@"AKAppleIDAuthenticationContext",R,N
T@"AKClient",&,N
initWithContext:urlBagKey:
initWithContext:urlBagKey:shouldCacheResource:
_setRequestURL
_errorFromResponseDictionary:
_validateJSONResponseData:error:
_validateDataExists:
_validateResponseBodyFormat
_validateErrorCode:withKey:
serverCompatibleRequestBody
serverCompatibleRequestBodyWithPayload:
appendRequestUrlQueryParameterNamed:value:
setAuthKitBody:
urlBagKey
setRequestURL:
setShouldCacheResource:
authKitBodyData
setAuthKitBodyData:
dataCenterIdentifier
setDataCenterIdentifier:
_shouldCacheResource
_client
_urlBagKey
_requestURL
_authKitBodyData
_dataCenterIdentifier
T@"NSString",R,C,N,V_urlBagKey
T@"NSURL",C,N,V_requestURL
TB,N,V_shouldCacheResource
T@"NSDictionary",C,N,VauthKitBody
T@"NSData",C,N,V_authKitBodyData
T@"NSString",C,N,V_dataCenterIdentifier
T@"AKClient",&,N,V_client
getIDMSRoutingInfo:forDSID:
setIDMSRoutingInfo:forDSID:
requestOTPForDSID:outMID:outMIDSize:outOTP:outOTPSize:
dispose:
isMachineProvisioned:
startProvisioningWithDSID:SPIM:SPIMLength:outCPIM:outCPIMLength:outSession:
endProvisioningWithSession:PTM:PTMLength:TK:TKLength:
destroyProvisioningSession:
synchronizeWithDSID:SIM:SIMLength:outMID:outMIDLength:outSRM:outSRMLength:
eraseProvisioningForDSID:
shouldProcessServerUIRequest:
initWithUILiaison:client:requestDispatcher:
initWithUILiaison:client:
retrieveRecoveryDataForServerContext:recoveryInfo:completion:
renewRecoveryTokenWithContext:completion:
verifyMasterKey:withContext:completion:
persistMasterKeyVerifier:withContext:completion:
_recoveryContextFromServerInfo:error:
_authUILiaison
_requestDispatcher
generateCheckinID
initWithClient:
warmUpVerificationSessionWithCompletionHandler:
fetchRealUserLikelihoodForRequest:withCompletionHandler:
analyticsReport
setAnalyticsReport:
_analyticsReport
T@"AKCASatoriReporter",&,N,V_analyticsReport
nextCalculation
initWithBase:maxQueueSize:
_incrementCounter
_incrementQueueSize
_decrementQueueSize
base
maxQueueSize
_counter
_queueSize
_base
_maxQueueSize
Td,R,N,V_base
TQ,R,N,V_maxQueueSize
initWithDelay:maxQueueSize:
delay
_delay
Td,R,N,V_delay
initWithDescriptor:value:
initWithAttributes:
itemAttributes
value
setValue:
descriptor
setDescriptor:
_value
_descriptor
T@"NSData",&,N,V_value
T@"AKKeychainItemDescriptor",&,N,V_descriptor
authenticationParametersWithCompletion:
_authenticationParameters:
clientProvidedDataHelper:
canPresentRemoteUI
_passwordResetBackupToken
_identityAuthorizationPayload
_masterKeyAsSecondFactor
_setMasterKeyAsSecondFactor:
__masterKeyAsSecondFactor
TB,N,S_setMasterKeyAsSecondFactor:,V__masterKeyAsSecondFactor
reportPromptByClient:withContext:
dealloc
calculationWithDate:counter:algorithm:relinquisher:
initWithDate:counter:algorithm:relinquisher:
headerValue
relinquish
dispatchDate
algorithmIdentifier
dispatchCounter
_relinquishmentHandler
_dispatchDate
_algorithmIdentifier
_dispatchCounter
T@"NSDate",R,N,V_dispatchDate
T@"NSString",R,N,V_algorithmIdentifier
TQ,R,N,V_dispatchCounter
surrogateContext
setSurrogateContext:
surrogateClient
setSurrogateClient:
surrogateRegistrationID
setSurrogateRegistrationID:
pendingBGContext
setPendingBGContext:
pendingClientUIWork
setPendingClientUIWork:
pendingClientBundle
setPendingClientBundle:
hasCheckedIn
setHasCheckedIn:
surrogateCompletion
setSurrogateCompletion:
_hasCheckedIn
_surrogateContext
_surrogateClient
_surrogateRegistrationID
_pendingBGContext
_pendingClientUIWork
_pendingClientBundle
_surrogateCompletion
T@"AKAppleIDAuthenticationContext",&,N,V_surrogateContext
T@"AKClient",&,N,V_surrogateClient
T@"NSUUID",&,N,V_surrogateRegistrationID
T@"AKAppleIDAuthenticationContext",&,N,V_pendingBGContext
T@?,C,N,V_pendingClientUIWork
T@"NSString",&,N,V_pendingClientBundle
TB,N,V_hasCheckedIn
T@?,C,N,V_surrogateCompletion
initWithDelegate:
hasRegisteredSurrogateForContext:
isSurrogateAuthInProgressForClient:
isWaitingForSettingsSurrogateAuth
waitForRemoteViewServiceWithContext:client:uiWorkBlock:
waitForSettingsWithContext:client:requireFullUICapability:allowRedirectToSettings:uiWorkBlock:
performUIWorkWithSurrogateContext:uiWorkBlock:
registerUISurrogateContext:client:completion:
unregisterUISurrogateForContext:
_isClientWaitingForSurrogateAuth:
_waitForSurrogateCheckInWithContext:withUIWorkBlock:client:andCheckInID:
_stopWaitingForCheckInWithContext:andError:
_handleError:logMessage:withUIWorkBlock:
_fetchSurrogateForClient:
_fetchSurrogateWithRegistrationID:
_clearSurrogate:
_launchAppleIDSettingsForContext:withCheckinID:
surrogateIDGenerator
setSurrogateIDGenerator:
surrogateQueue
setSurrogateQueue:
inProgressSurrogates
setInProgressSurrogates:
_delegate
_settingsLauncher
_surrogateCheckinIDLock
_accountManager
_settingsSurrogationInProgress
_surrogateIDGenerator
_surrogateQueue
_inProgressSurrogates
T@"NSObject<OS_dispatch_queue>",&,N,V_surrogateQueue
T@"NSMutableDictionary",&,N,V_inProgressSurrogates
T@"AKSurrogateAuthenticationIDGenerator",&,N,V_surrogateIDGenerator
isBuddyFinished
_bodyForBeneficiaryEndpoint
_bodyForBeneficiaryAliasEndpoint
inheritanceContext
setInheritanceContext:
signWithIdentityToken
setSignWithIdentityToken:
_signWithIdentityToken
T@"AKInheritanceContext",&,N,V_context
TB,N,V_signWithIdentityToken
migrateSchemaIfNecessary
migrateSchemaFromVersion:
currentSchemaVersion
storeName
_buildSchemaVersion1
_upgradeToSchemaVersion2
_upgradeToSchemaVersion3
_upgradeToSchemaVersion4
_createV1Database
_createV2Database
_createV3Database
initWithEvent:
initWithRequestID:
didCompleteWithAuthorization:error:
initWithObject:expiryDate:
cacheObject
expiryDate
isExpired
_cacheObject
_expiryDate
T@,R
T@"NSDate",R
objectForKey:
removeObjectForKey:
setObject:forKey:expiresIn:
flushCacheForced:
_internalCache
_lock
initialize
lastKnownActiveAnisetteDSID
activeAnisetteDSIDWithEnvironment:
provisionAnisetteWithCompletion:
syncAnisetteWithSIMData:completion:
eraseAnisetteWithCompletion:
fetchAnisetteDataAndProvisionIfNecessary:withCompletion:
legacyAnisetteDataForDSID:withCompletion:
fetchPeerAttestationDataForRequest:completion:
_unsafe_anisetteDataWithRoutingInfoForDSID:withError:
_unsafe_anisetteDataForDSID:withError:
_unsafe_provisionAnisetteWithCompletion:
_signWithBAAHeadersIfNeededForKey:withRequest:
_createProvisioningStartURLRequestWithCompletion
_createProvisioningEndURLRequestWithCPIM:
_createSyncURLRequestWithMID:SRM:routingInfo:
_signRequestWithProvisioningHeaders:forUrlKey:
_bodyForRecoveryCircle
_bodyForAddAndRevokeCustodianRequest
_bodyForFinalizeCustodianRequest
_bodyForCustodianUpdateRecoveryKeyRequest
_bodyForEmbargoEndFeedback
_bodyForTrustedContactsDataSync
authenticatedRequest
setAuthenticatedRequest:
custodianContext
setCustodianContext:
_authenticatedRequest
_custodianContext
T@"AKCustodianContext",&,N,V_custodianContext
TB,N,V_authenticatedRequest
initWithAltDSID:urlSwitchData:shouldFallBack:
_bagURLForAltDSID:shouldFallBack:
newBagURLRequest
shouldFallBack
setShouldFallBack:
setAltDSID:
urlSwitchData
setUrlSwitchData:
_shouldFallBack
_urlSwitchData
TB,N,V_shouldFallBack
T@"NSString",&,N,V_altDSID
T@"NSString",&,N,V_urlSwitchData
setPasswordCredentialCount:
didShowAppleID:
didSelectAnonymousEmail:
didSelectAppleID:
didSelectPasswordCredential:
didModifyName:
didComplete:
_clearMutuallyExclusiveProperties:
copyWithZone:
isInvisible
setInvisible:
isSynchronizable
setSynchronizable:
shouldUseDataProtection
setUseDataProtection:
attributes
_keychainClassWithClass:
_classWithKeychainClass:
_keychainAccessibleWithAccessible:
_accessibleWithKeychainAccessible:
itemClass
setItemClass:
itemAccessible
setItemAccessible:
account
setAccount:
service
setService:
server
setServer:
securityDomain
setSecurityDomain:
label
setLabel:
accessGroup
setAccessGroup:
_invisible
_synchronizable
_useDataProtection
_itemClass
_itemAccessible
_account
_service
_server
_securityDomain
_label
_accessGroup
TQ,N,V_itemClass
TQ,N,V_itemAccessible
T@"NSString",C,N,V_account
T@"NSString",C,N,V_service
T@"NSString",C,N,V_server
T@"NSString",C,N,V_securityDomain
T@"NSString",C,N,V_label
T@"NSString",C,N,V_accessGroup
invisible
TB,N,GisInvisible
synchronizable
TB,N,GisSynchronizable
useDataProtection
TB,N,GshouldUseDataProtection
initWithRequestContext:
sharedService
start
_performPostInstallWithCompletion:
objectForKeyedSubscript:
setObject:forKeyedSubscript:
sendReport
machAbsoluteTimeToTimeInterval:
_eventName
_reportData
_initTime
_clock_timebase
deviceRequestContext
setDeviceRequestContext:
_deviceRequestContext
T@"AKDeviceListRequestContext",&,N,V_deviceRequestContext
proximityEngine:managerDidUpdateState:
proximityEngineDidActivate:
proximityEngineDidInvalidate:
initWithEngine:
activate
invalidate
isActivated
_prepareEngine
_activateEngine
_invalidateEngine
_isEngineActivated
_unsafe_InvalidateEngine
_unsafe_resumeEngineTimeoutSource
_unsafe_cancelEngineTimeoutSource
engine
timeout
setTimeout:
invalidationHandler
setInvalidationHandler:
_queue
_engineQueue
_engineTimeoutSource
_engine
_timeout
_invalidationHandler
T@"<AKProximityEngine>",R,N,V_engine
activated
TB,R,N,GisActivated
Td,N,V_timeout
T@?,C,N,V_invalidationHandler
sessionID
setSessionID:
completionHandler
setCompletionHandler:
clientBundleID
setClientBundleID:
requestTime
setRequestTime:
userResponse
setUserResponse:
_sessionID
_completionHandler
_clientBundleID
_requestTime
_userResponse
T@"NSString",C,N,V_sessionID
T@"AKCredentialRequestContext",&,N,V_context
T@?,C,N,V_completionHandler
T@"NSString",&,N,V_clientBundleID
T@"NSDate",&,N,V_requestTime
T@"AKAuthorizationUserResponse",&,N,V_userResponse
clientForContext:
beginSessionWithContext:client:completion:
endSessionWithContext:client:completion:
continueSessionWithContext:client:completion:
updateUserResponse:withContext:forClient:
userResponseWithContext:forClient:
_hasSessionTimedOutForRequest:
_clientBundleIDForContext:client:
_activeSessionForContext:client:
_activeSessions
_clearanceQueue
_trafficQueue
_transaction
typeForMessageWithTransportRepresentation:
messageFromTransportRepresentation:
identifier
type
transportRepresentation
_properties
TQ,R,N
command
setCommand:
argument
setArgument:
TQ,N
T@"NSObject",C,N
replyToID
setReplyToID:
didSucceed
setDidSucceed:
error
setError:
returnData
setReturnData:
T@"NSString",C,N
TB,N
T@"NSError",C,N
T@"NSData",C,N
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
startListeningForMessagesFromPairedDevice
_performRemoteCommand:argument:completion:
_activePairedTinkerDevice
_replyToCommandMessageWithInternalID:didSucceed:returnData:error:completion:
_handleIncomingCommandMessage:completion:
_mhq_handleIncomingReplyMessage:
_messageSendingService
_messageHandlingQueue
_completionsByInternalMessageID
_internalMessageIDsByTransportID
_migrateToSchemaVersion2
_migrateToSchemaVersion3
_migrateToSchemaVersion4
_migrateToSchemaVersion5
listener:shouldAcceptNewConnection:
authenticationRequestFinishedWithResults:password:additionalData:error:
presentOOPLoginUIWithContext:completion:
_callCompletionWithResults:password:additionalData:error:
remoteListener
setRemoteListener:
presentationCompletion
setPresentationCompletion:
_remoteListener
_presentationCompletion
T@"NSXPCListener",&,N,V_remoteListener
T@?,C,N,V_presentationCompletion
initWithMessage:
isValidMessage
message
messageId
setMessageId:
previousMessageId
serverMachineId
idmsData
userInfo
alertInfo
alertTitle
setAlertTitle:
alertBody
setAlertBody:
lockScreenTitle
setLockScreenTitle:
lockScreenBody
setLockScreenBody:
defaultButtonTitle
alternateButtonTitle
secondaryTitle
secondaryBody
secondaryFooter
setSecondaryFooter:
isSilent
requiresPasscode
eventDetails
latitude
longitude
deviceClass
deviceColor
deviceEnclosureColor
piggybackingRequestorUsesPresence
piggybackingRequestorPresenceSID
piggybackingAcceptorSupportsPresence
piggybackingIDMSFallbackApproved
piggybackingPresenceMode
_isSilent
_requiresPasscode
_piggybackingRequestorUsesPresence
_piggybackingAcceptorSupportsPresence
_piggybackingIDMSFallbackApproved
_message
_command
_messageId
_previousMessageId
_serverMachineId
_idmsData
_userInfo
_alertInfo
_alertTitle
_alertBody
_lockScreenTitle
_lockScreenBody
_defaultButtonTitle
_alternateButtonTitle
_secondaryTitle
_secondaryBody
_secondaryFooter
_eventDetails
_latitude
_longitude
_deviceClass
_deviceColor
_deviceEnclosureColor
_piggybackingRequestorPresenceSID
_piggybackingPresenceMode
T@"APSIncomingMessage",R,N,V_message
TQ,N,V_command
T@"NSString",C,N,V_messageId
T@"NSString",C,N,V_altDSID
T@"NSString",R,C,N,V_previousMessageId
T@"NSString",R,C,N,V_serverMachineId
T@"NSString",R,C,N,V_idmsData
T@"NSDictionary",R,N,V_userInfo
T@"NSDictionary",R,N,V_alertInfo
T@"NSString",C,N,V_alertTitle
T@"NSString",C,N,V_alertBody
T@"NSString",C,N,V_lockScreenTitle
T@"NSString",C,N,V_lockScreenBody
T@"NSString",R,C,N,V_defaultButtonTitle
T@"NSString",R,C,N,V_alternateButtonTitle
T@"NSString",R,C,N,V_secondaryTitle
T@"NSString",R,C,N,V_secondaryBody
T@"NSString",C,N,V_secondaryFooter
TB,R,N,V_isSilent
TB,R,N,V_requiresPasscode
T@"NSDictionary",R,N,V_eventDetails
T@"NSNumber",R,C,N,V_latitude
T@"NSNumber",R,C,N,V_longitude
T@"NSString",R,C,N,V_deviceClass
T@"NSString",R,C,N,V_deviceColor
T@"NSString",R,C,N,V_deviceEnclosureColor
TB,R,N,V_piggybackingRequestorUsesPresence
T@"NSUUID",R,C,N,V_piggybackingRequestorPresenceSID
TB,R,N,V_piggybackingAcceptorSupportsPresence
TB,R,N,V_piggybackingIDMSFallbackApproved
Tq,R,N,V_piggybackingPresenceMode
initWithContext:emailKey:urlBagKey:
_bodyForPrivateEmailRegisterEndpoint
_emailKey
sharedAuthKitFollowupManager
sharedAuthKitFollowupPushDelegate
initWithNotificationCenter:
postUserNotification:
_notificationContent:
_notificationCategories
_notificationCenter
configureWithParameters:
status
underlyingContext
configurationParameters
_underlyingContext
_configurationParameters
T@"NSDictionary",R,N
T@"AKMasterToken",R,N
T^{__AppleIDAuthSupportData=},R,N,V_underlyingContext
T@"NSDictionary",R,N,V_configurationParameters
phoneCertificate
setPhoneCertificate:
slotID
setSlotID:
_phoneCertificate
_slotID
T@"NSString",&,N,V_phoneCertificate
Tq,N,V_slotID
T@"AKCarrierBundleUtilities",R
phoneBundleInfoWithAdditionalInfo:error:
_formattedValueForPhoneNumber:countryCode:
_telephonyClient
_carrierUtilitiesQueue
executeWithResponseHandler:
invalidateWithError:
dispatchingInfo
additionalHeaders
setAdditionalHeaders:
T@"NSDictionary",&,N
initWithURLRequestProvider:authenticationHandler:completionHandler:
_urlSession
_executeAllowingReauthentication:completion:
_executeURLRequest:withSession:completion:
_reauthenticateAndExecuteWithCompletion:
_reauthenticateWithCompletion:
_addingAdditionalHeaders:forURLRequest:
urlRequestProvider
authenticationHandler
_additionalHeaders
_urlRequestProvider
_authenticationHandler
T@"<AKURLRequestProvider>",R,N,V_urlRequestProvider
T@"<AKAuthHandler>",R,N,V_authenticationHandler
T@"NSDictionary",&,N,V_additionalHeaders
_verificationQueue
piggyback:promptForRandomCodeWithCompletion:
piggyback:handleVerificationWithError:completion:
piggyback:validateSecurityCode:completion:
piggyback:shouldContinueWithCompletion:
piggyback:handleEscapeHatchError:completion:
shouldProcessAdditionalServerUIData:
serverUIContext:processAdditionalData:completion:
authenticateWithContext:completion:
checkSecurityUpgradeEligibilityForContext:completion:
generateLoginCodeWithCompletion:
validateLoginCode:forAppleID:withCompletion:
updateStateWithExternalAuthenticationResponse:forAppleID:completion:
updateStateWithExternalAuthenticationResponse:forContext:completion:
getServerUILoadDelegateForAltDSID:completion:
getServerUILoadDelegateWithContext:completion:
setAppleIDWithAltDSID:inUse:forService:completion:
setAppleIDWithDSID:inUse:forService:completion:
getUserInformationForAltDSID:completion:
updateUserInformationForAltDSID:userInformation:completion:
fetchAuthModeWithContext:completion:
fetchDeviceMapWithContext:completion:
fetchAppListWithAltDSID:completion:
deleteAuthorizationDatabaseWithCompletion:
warmUpVerificationSessionWithCompletion:
setConfigurationInfo:forIdentifier:forAltDSID:completion:
configurationInfoWithIdentifiers:forAltDSID:completion:
performCheckInForAccountWithAltDSID:completion:
reportSignOutForAppleID:service:completion:
reportSignOutForAllAppleIDsWithCompletion:
validateVettingToken:forAltDSID:completion:
isCreateAppleIDAllowedWithCompletion:
performCircleRequestWithContext:completion:
synchronizeFollowUpItemsForContext:completion:
isDevicePasscodeProtected:
activeLoginCode:
accountNamesForAltDSID:completion:
fetchURLBagForAltDSID:completion:
fetchURLBagFromCache:altDSID:completion:
forceURLBagUpdateForAltDSID:urlSwitchData:completion:
clearSessionCacheWithCompletion:
fetchUserInformationForAltDSID:completion:
initWithProxy:
_setAuthKitAccount:inUse:forService:completion:
_validateLoginCode:forAltDSID:masterToken:idmsData:authContext:completion:
_authenticateWithContext:completion:
_upgradeSecurityLevelWithContext:completion:
_performAuthenticationWithContext:completion:
_handlePasswordlessAuthResults:context:error:completion:
_isInteractiveAuthRequiredForContext:
_attemptBiometricOrPasscodeAuthWithContext:completion:
_showBiometricOrPasscodeAuthWithContext:completion:
_attemptPasswordlessAuthOptionsWithContext:completion:
_attemptPasswordlessAuthWithContext:completion:
_accountForContinuationWithContext:completion:
_showContinueUsingUIWithContext:completion:
_accountForContinuationWithContext:error:
_attemptInteractiveAuthWithContext:completion:
refreshAuthMetadataWithContext:completion:
_performInteractiveAuthWithContext:completion:
_correlateContext:withAuthMode:
_updateAltDSIDAndUsername:
_refreshLocalAccountAndUpdateContext:completion:
_refreshAuthModeIfNecessaryForContext:completion:
_refreshAuthModeForContext:completion:
_handleBasicLoginUICompletionWithUsername:password:context:additionalData:collectionError:completion:
_keepLoginAliveWithContext:error:andCompletion:
_handleMissingUsernameOrPasswordForContext:password:username:completion:
_handleVerificationError:forContext:completion:
_showAlertForVerificationError:context:completion:
_incrementAttemptsForContext:error:
_titleAndMessageForError:context:completion:
_showAlertForLoginError:context:completion:
_checkFreshnessAndVerifyWithPassword:serverResponse:additionalData:secondaryActionError:context:newServerResponse:username:completion:
_verifyUsername:password:context:completion:
_performPasswordlessSRPAuthWithContext:completion:
_performPasswordlessSRPAuthWithAccount:context:completion:
_srpAuthContextHelperWithContext:
_performSRPAuthenticationWithContext:completion:
_performSafeSRPAuthenticationWithContext:completion:
_handleVerificationCompletionForUsername:password:serverResponse:didShowServerUI:continuationData:error:context:completion:
_shouldContinueAuthenticatingForUsername:password:serverResponse:didShowServerUI:continuationData:error:context:completion:
_handleSuccessfulVerificationForContext:withResults:serverResponse:completion:
_authKitAccountFromContext:
_provideServiceTokensIfRequiredForContext:authenticationResults:serverResponse:completion:
_completeAuthenticationWithServiceTokens:tokenFetchError:altDSID:authenticationResults:context:completion:
_persistGrandSlamServiceTokens:forAltDSID:DSID:appleID:forContext:error:
_persistGrandSlamServiceTokensHelper:forAltDSID:DSID:appleID:appleIDAuthAccount:error:
_updateCredentialForSavedAIDAAccount:withNewTokens:
_isTouchIDRequiredForGrandSlamServiceTokenWithID:
_performSecondaryActionWithServerResponse:context:completion:
_handleSecondFactorUICompletionWithCode:error:idmsData:initialAuthResponse:context:completion:
_handleSecondFactorUICompletionWithCode:error:idmsData:piggybacking:initialAuthResponse:context:completion:
_processValidationCodeSuccessResponse:authResponse:results:completion:
_showAlertForLoginCodeValidationError:context:completion:
_attemptPasswordlessAuthAfterBiometricOrPasscodeValidationWithContext:promptType:completion:
_performGrandslamEndpointActionWithContext:serverResponse:completion:
_handleGrandslamResponse:data:error:serverResponse:completion:
fidoHandler
_performFidoStartAuthActionWithContext:serverResponse:completion:
_handleStartFidoAuthWithContext:fidoContext:serverResponse:completion:
_beginServerDrivenSecondaryActionWithURLKey:context:initialAuthResponse:completion:
_showServerUIWithURLRequest:context:completion:
_showServerUIWithURLRequest:context:initialAuthResponse:completion:
_showServerUIWithContext:completion:
_performSilentServiceTokenAuthWithContext:completion:
_fetchTokensForServiceIDs:withUsername:altDSID:masterToken:context:completion:
_recoverCredentialsAndAuthenticateWithContext:completion:
_handleRecoverCredentialsError:withContext:andCompletion:
_beginiForgotFlowWithContext:completion:
_addAccountNameParameterToURL:withContext:
_repairAppleIDWithContext:completion:
_createNewAppleIDAndAuthenticateWithContext:completion:
_handleCreateNewAppleIDError:withContext:andCompletion:
_beginAppleIDCreationFlowWithContext:completion:
_changePasswordAndAuthenticateWithContext:completion:
_beginChangePasswordFlowWithAccount:context:completion:
_authenticationParametersForUsername:altDSID:context:
_updateAuthKitAccount:withServerResponse:context:error:
_shouldSkipAccountUpdatesForAuthWithContext:
_errorFromServerResponseParameters:authenticationError:
_authProxy
_authTrafficController
_reachability
_fidoHandler
authorizationEndorserRapportClientDidFinish:
activateWithError:
deactivate
_handleFoundDevice:
didDeactivateBlock
setDidDeactivateBlock:
deviceDiscovery
setDeviceDiscovery:
authorizationEndorser
setAuthorizationEndorser:
_didDeactivateBlock
_deviceDiscovery
_authorizationEndorser
T@"RPCompanionLinkClient",&,N,V_deviceDiscovery
T@"AKAuthorizationEndorserRapportClient",&,N,V_authorizationEndorser
T@?,C,N,V_didDeactivateBlock
processAccountCode:error:
initWithServerResponse:andDelegate:piggybackReporter:
initiatePiggybackingWithCompletion:
_initiatePiggybackingWithCleanSession:withCompletion:
_processHandshakeWithContext:handshakeReply:andHandshakeError:withCompletion:
_clearSessionState
_deliverPushPayload:completion:
_deliverPushPayload:attachDuplexSession:completion:
_sendDeviceCancelledReplyWithContext:
replyWithContext:withCompletion:
contextWithIncomingPayload:
_shouldContinueProcessing:
requestSession
_handleVerificationError:withContext:completion:
_promptForSecretWithContext:completion:
_processCachedUserInputWithContext:completion:
_processCodeEntryErrorWithContext:completion:
_capturedCodeString
_cacheSecondFactor:codeCaptureError:
_clearCaptureState
_stopProximityControllerIfNeededWithPushPayload:
delegate
setDelegate:
initiatingContext
setInitiatingContext:
initiatingPassword
setInitiatingPassword:
initialAuthResponse
setRequestSession:
capturedCode
setCapturedCode:
escapeHatchTrigger
setEscapeHatchTrigger:
escapeHatchError
setEscapeHatchError:
authResults
setAuthResults:
unitTestContext
setUnitTestContext:
initialHandshakeTimeout
setInitialHandshakeTimeout:
proximityController
setProximityController:
_latestIDMSData
_currentReplyContext
_retryCount
_unitTestContext
_initiatingContext
_initiatingPassword
_initialAuthResponse
_requestSession
_capturedCode
_escapeHatchTrigger
_escapeHatchError
_authResults
_initialHandshakeTimeout
T@"KCJoiningRequestSecretSession",&,N,V_requestSession
T@"NSNumber",&,N,V_capturedCode
T@"NSError",&,N,V_escapeHatchTrigger
T@"NSError",&,N,V_escapeHatchError
T@"NSDictionary",&,N,V_authResults
TB,N,V_unitTestContext
Td,N,V_initialHandshakeTimeout
T@"AKProximityController",&,N,V_proximityController
T@"<AKPiggybackRequestingControllerDelegate>",W,N,V_delegate
T@"AKAppleIDAuthenticationContext",&,N,V_initiatingContext
T@"NSString",&,N,V_initiatingPassword
T@"AKAuthenticationServerResponse",R,N,V_initialAuthResponse
remoteAlertHandleDidActivate:
remoteAlertHandleDidDeactivate:
remoteAlertHandle:didInvalidateWithError:
privateEmailFetchCompletedWith:error:completion:
presentPrivateEmailWithContext:client:completion:
_callCompletionBlockWithEmail:error:
privateEmailCompletion
setPrivateEmailCompletion:
remoteAlertHandle
setRemoteAlertHandle:
_privateEmailCompletion
_remoteAlertHandle
T@?,C,N,V_privateEmailCompletion
T@"SBSRemoteAlertHandle",&,N,V_remoteAlertHandle
serviceControllerForContext:
launchSettingsForContext:withCheckinID:
_settingsPaneIDForContext:
lookupPrivateEmailForAltDSID:withKey:completion:
lookupPrivateEmailWithContext:completion:
fetchPrivateEmailForAltDSID:withKey:completion:
fetchPrivateEmailWithContext:completion:
registerPrivateEmailForAltDSID:withKey:completion:
getContextForRequestContext:completion:
deletePrivateEmailDatabaseWithCompletion:
privateEmailListVersionWithCompletion:
removePrivateEmailKey:completion:
listAllPrivateEmailsForAltDSID:completion:
presentPrivateEmailUIForContext:completion:
removePrivateEmailWithContext:completion:
_performRequestForContext:completion:
_performRegisterRequestForAltDSID:key:completion:
_cacheFetchedPrivateEmail:keyAlreadyHashed:error:completion:
_verifyEntitlements
T@"AKClient",R,N,V_client
initWithMaxWait:description:
resolved
setResolved:
maxWait
setMaxWait:
beginDate
setBeginDate:
valueCondition
setValueCondition:
internalWrapper
setInternalWrapper:
_resolved
_maxWait
_beginDate
_valueCondition
_internalWrapper
TB,N,V_resolved
Td,N,V_maxWait
T@"NSDate",&,N,V_beginDate
T@"NSCondition",&,N,V_valueCondition
T@"NSMutableArray",&,N,V_internalWrapper
provisionAnisetteForDevice:completion:
syncAnisetteWithSIMData:device:completion:
eraseAnisetteForDevice:completion:
fetchAnisetteDataAndProvisionIfNecessary:device:completion:
legacyAnisetteDataForDSID:device:completion:
attestationDataForDevice:withRequest:completion:
initWithClient:context:
initWithClient:authenticationContext:
anisetteDataForDevice:provisionIfNecessary:
_fetchAnisetteDataAndProvisionIfNecessary:device:completion:
_helperServiceForDevice:
_nativeAnisetteService
_pairedDeviceAnisetteService
_clientAnisetteService
absintheSigner
setAbsintheSigner:
attestationSigner
setAttestationSigner:
_absintheSigner
_attestationSigner
T@"AKAbsintheSigner",&,N,V_absintheSigner
T@"AKAttestationSigner",&,N,V_attestationSigner
absintheSignatureForData:completion:
signaturesForData:options:completion:
sharedController
fetchUserInformationForAltDSID:client:completion:
_fetchUserInformationForAltDSID:client:dataCenter:completion:
fetchAuthModeWithContext:client:completion:
refreshAccountUsernamesForAltDSID:dataCenter:
_processHideMyEmailForAltDSID:userInfo:response:
_processIncomingUserInformationForAltDSID:userInformation:
_syncPrivateEmailsForAltDSID:client:userInformation:completion:
_updatePrivateEmailsWithInformation:
_userInfoChangeNotificationDictionaryForAltDSID:userInformation:
_authorizationPropertiesChangedForAccount:userInformation:
_trustedContactPropertiesChangedForAccount:userInformation:
_refreshApplicationInformationForAltDSID:
refreshAccountUsernamesForAltDSID:withUserInformation:
previousAccountInfoRefreshDate
_setLastEmailListRequestDate:
_updateAccount:withUserInformationResponse:modifyAliases:
_broadcastEmailChangeNotification
sendUserInfoChangeNotificationWithPayload:
_sendNotification:withUserInfo:
authorizationUserInformationForRequest:shouldRequestUpdate:error:
_additionalInfoChangedForAccount:userInformation:
_managedAppleIDInfoChangedForAccount:userInformation:
initWithBundleIdentifier:bundleName:bundleDescription:bundleType:otherInfo:
bundleIdentifier
bundleName
bundleDescription
bundleType
otherInfo
_bundleIdentifier
_bundleName
_bundleDescription
_bundleType
_otherInfo
T@"NSString",R,C,N,V_bundleIdentifier
T@"NSString",R,C,N,V_bundleName
T@"NSString",R,C,N,V_bundleDescription
TQ,R,N,V_bundleType
T@"NSDictionary",R,C,N,V_otherInfo
_handleCurrentDeviceTrustStatusChangedWithPayload:
_sendTrustedDeviceListChangeNotificationWithPayload:
prepareWithController:queue:
controller
queue
T@"<AKProximityEngineController>",R,W,N
T@"NSObject<OS_dispatch_queue>",R,N
initWithPresenceSID:
presenceSID
_controller
_presenceSID
T@"NSUUID",R,N,V_presenceSID
T@"<AKProximityEngineController>",R,W,N,V_controller
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
peripheralManagerDidUpdateState:
peripheralManager:willRestoreState:
peripheralManagerDidStartAdvertising:error:
peripheralManager:didAddService:error:
peripheralManager:central:didSubscribeToCharacteristic:
peripheralManager:central:didUnsubscribeFromCharacteristic:
peripheralManager:didReceiveReadRequest:
peripheralManager:didReceiveWriteRequests:
peripheralManagerIsReadyToUpdateSubscribers:
peripheralManager:didPublishL2CAPChannel:error:
peripheralManager:didUnpublishL2CAPChannel:error:
peripheralManager:didOpenL2CAPChannel:error:
_peripheralManager
centralManagerDidUpdateState:
centralManager:willRestoreState:
centralManager:didDiscoverPeripheral:advertisementData:RSSI:
centralManager:didConnectPeripheral:
centralManager:didFailToConnectPeripheral:error:
centralManager:didDisconnectPeripheral:error:
centralManager:connectionEventDidOccur:forPeripheral:
centralManager:didUpdateANCSAuthorizationForPeripheral:
peripheralDidUpdateName:
peripheral:didModifyServices:
peripheralDidUpdateRSSI:error:
peripheral:didReadRSSI:error:
peripheral:didDiscoverServices:
peripheral:didDiscoverIncludedServicesForService:error:
peripheral:didDiscoverCharacteristicsForService:error:
peripheral:didUpdateValueForCharacteristic:error:
peripheral:didWriteValueForCharacteristic:error:
peripheral:didUpdateNotificationStateForCharacteristic:error:
peripheral:didDiscoverDescriptorsForCharacteristic:error:
peripheral:didUpdateValueForDescriptor:error:
peripheral:didWriteValueForDescriptor:error:
peripheralIsReadyToSendWriteWithoutResponse:
peripheral:didOpenL2CAPChannel:error:
_discoveredPeripheral:withServiceID:
matchHandler
setMatchHandler:
_centralManager
_matchHandler
T@?,C,N,V_matchHandler
_processDictionary:addedPrivateEmails:removedPrivateEmails:
privateEmailListVersion
invalidListVersionSupplied
addedPrivateEmails
removedPrivateEmails
shouldSyncWithServer
setShouldSyncWithServer:
protocolVersion
_invalidListVersionSupplied
_shouldSyncWithServer
_protocolVersion
_privateEmailListVersion
_addedPrivateEmails
_removedPrivateEmails
T@"NSString",R,C,N,V_privateEmailListVersion
TB,R,N,V_invalidListVersionSupplied
T@"NSArray",R,C,N,V_addedPrivateEmails
T@"NSArray",R,C,N,V_removedPrivateEmails
TB,N,V_shouldSyncWithServer
Ti,R,N,V_protocolVersion
initWithRequestProvider:
initWithClient:altDSID:
executeFetchHmeListRequestWithCompletion:
_constructRequestProviderForClient:altDSID:
isSecondCall
setIsSecondCall:
_isSecondCall
TB,N,V_isSecondCall
startFidoAuthWithContext:recoveryToken:client:completion:
_handleStartFidoResponse:data:context:recoveryToken:error:completion:
finishFidoAuthWithResponse:client:context:recoveryToken:completion:
_handleFinishFidoResponse:data:context:recoveryToken:error:completion:
authorizationRequestInitiatedWithUserProvidedInformation:completion:
authorizationRequestFinishedWithAuthorization:error:completion:
continueFetchingIconWithCompletion:
presentAuthorizationWithContext:client:completion:
_callCompletionBlockWithAuthorization:error:
authorizationResponseValidator
setAuthorizationResponseValidator:
fetchIconBlock
setFetchIconBlock:
_authorizationResponseValidator
_fetchIconBlock
T@?,C,N,V_authorizationResponseValidator
T@?,C,N,V_fetchIconBlock
setAuthenticationDelegate:
executeRequestWithCompletion:
requestDispatcher
setRequestDispatcher:
T@"AKRequestDispatcher",&,N
_requestProvider
_reauthHandler
T@"AKRequestDispatcher",&,N,V_requestDispatcher
sanitizeContext:
accountManager
setAccountManager:
device
setDevice:
_sanitizeContext:
_validateAuthContext:
_validateAppleIDAuthContext:
_validateAppleIDAuthContext:forAuthMode:
_validateNativeAppleIDAuthContext:
_validateFederatedAppleIDAuthContext:
_validateSilentPreferredFederatedAppleIDAuthContext:
_accountForAppleIDAuthContext:
_annotateTransformationOfProperty:fromValue:toValue:
_device
_transformationAnnotations
T@"AKAccountManager",&,N
T@"AKDevice",&,N
initWithClient:requestDispatcher:
performSRPContractWithContext:completion:
_continueSRPContractWithAuthURL:context:completion:
_parseFailedServerResponse:withError:context:completion:
_anisetteActionTargetForServerResponse:andContext:
_resyncAnisetteWithServerResponse:context:completion:
_reprovisionAnisetteWithServerResponse:context:completion:
_doURLSwitchWithServerResponse:context:completion:
_handleError:withServerResponse:context:andCompletion:
_shouldClearCKForFailedMagicAuthWithError:authContextHelper:
getCredentialStateForRequest:completion:
getInternalCredentialStateForCredentialRequestContext:
getCredentialStateForClientID:completion:
_verifyClientInformationForRequest:completion:
_internalCredentialStateForUserState:error:
_getCredentialStateWithStateRequest:completion:
_demoModeEnabled
_isDeviceTrustedForRequest:
_fetchDeveloperTeamWithTeamID:
_fetchDeveloperTeamWithClientID:
_verifyUserID:
_presenterQueue
createUserNotificationOptionsWithTitle:body:defaultButtonTitle:alternateButtonTitle:makeNoise:
createUserNotificationOptionsWithTitle:body:lockScreenTitle:lockScreenBody:defaultButtonTitle:alternateButtonTitle:makeNoise:
createUserNotificationWithTitle:body:defaultButtonTitle:alternateButtonTitle:makeNoise:
createUserNotificationWithTitle:body:lockScreenTitle:lockScreenBody:defaultButtonTitle:alternateButtonTitle:makeNoise:
populateNotificationOptionsWithCommonKeys:makeNoise:
presentMessageWithAccount:completionHandler:
_handleResult:forAccount:
presentLoginNotificationWithCode:piggy:completionHandler:
_showCode:body:title:footer:completion:
_waitForNotificationResponse:withIdentifier:responseHandler:
_loginAlertOptionsForAccount:latitude:longitude:message:resolvedBody:
_loginAlertForAccount:latitude:longitude:message:resolvedBody:
_locationNameWithLatitude:longitude:completion:
_loginNotificationOptionsWithContext:isSilent:defaultButtonTitle:alternateButtonTitle:
tearDown
_receiveResponseFromNotification:handler:
_notificationResultFromButtonPressed:
_promptForChangePasswordForAccount:
_startChangePasswordFlowForAccount:
_isPasswordPromptNecessaryForCommand:
_promptForAuthenticationPasswordForAccount:completion:
_pendingNotification
loadDelegate
setExpectedResponseType:
_expectedResponseType
TQ,N,V_expectedResponseType
T@"AKAppleIDServerResourceLoadDelegate",R,N
authorizationDaemonServiceWillProcessUserResponse:
initWithDeviceID:
startAuthorization
startAuthorizationWithCompanionLinkClient:
_deactivate
_sendStartAuthorizationRequest
_handleStartAuthorizationWithResponse:
_sendAuthorizationDidFinishRequestWithAuthorization:
_sendAuthorizationDidFinishRequestWithError:
_sendDidStartServerAuthorizationEvent
endorseeClient
setEndorseeClient:
endorseeDevice
setEndorseeDevice:
authorizationService
setAuthorizationService:
_endorseeClient
_endorseeDevice
_authorizationService
T@"RPCompanionLinkClient",&,N,V_endorseeClient
T@"RPCompanionLinkDevice",&,N,V_endorseeDevice
T@"AKAuthorizationDaemonService",&,N,V_authorizationService
T@"<AKAuthorizationEndorserRapportClientDelegate>",W,N,V_delegate
uiWorkQueue
promptForAppleIDSettingsRedirectWithContext:client:needFullUI:completion:
surrogateManager
presentKeepUsingUIForContext:client:appleID:completion:
dismissKeepUsingUIForContext:client:withCompletion:
presentBasicLoginUIForContext:client:completion:
dismissBasicLoginUIForContext:client:completion:
presentLoginAlertForContext:client:withError:title:message:completion:
presentSecondFactorUIForContext:client:completion:
dismissSecondFactorUIForContext:client:completion:
presentSecondFactorAlertForContext:client:withError:title:message:completion:
presentServerProvidedUIForContext:client:withConfiguration:completion:
dismissServerProvidedUIForContext:client:completion:
presentNativeRecoveryUIForContext:recoveryContext:client:completion:
dismissNativeRecoveryUIForContext:client:completion:
presentBiometricOrPasscodeValidationForContext:client:completion:
presentFidoAuthForContext:fidoContext:client:completion:
_performBlockWithClient:context:requireFullUICapability:allowRedirectToSettings:block:
_isBackgroundClient:eligibleForForegroundAuthenticationWithContext:
_notificationDictionaryForClient:context:needFullUI:
_optionsForCreatingUserNotificationWithTitle:message:defaultButton:alternateButton:serviceType:
_stringByAppendingBlameIfNecessary:withContext:client:
_isFullUICapabilityRequiredFor2FA
_surrogateManager
_clientUIWorkQueue
T@"AKAuthenticationSurrogateManager",R,N
setCheckInAllowedForAllAccountsToValue:
_setCheckInAllowedToValue:forAccount:
_validateMachineID:
ackWithPayload:account:
ackWithPayload:account:completion:
performHeartbeatCheckIn
performHeartbeatCheckInIfNecessaryWithCompletionHandler:
_performHeartbeatCheckInIfNecessaryWithToken:completion:
performLivenessCheckInForAccount:completion:
performLivenessCheckInForAccounts:withPushToken:completion:
reportFinalSignOutEventForAccount:completion:
reportSignOutEventForService:account:completion:
_postCheckInDataToIDMSWithAccount:pushToken:event:completion:
_serviceControllerWithProvider:
_checkInQueue
hash:
credentialStateDidChange:completion:
credentialStateDidChange:forApplicationWithClientID:
initWithStoreManager:
currentAuthorizationListVersion
updateAuthorizationListWithMetadataInfo:
removeAuthorizationForApplicationWithClientID:completion:
revokeAuthorizationForAllApplications:
_processCredentialStateChanges:
_credentialStateDidChange:forApplicationWithClientID:
_notifyCredentialStateChange:forApplicationWithClientID:
_broadcastCredentialStateChange:forApplicationWithClientID:
_broadcastCredentialStateChange:forApplicationWithClientID:withHandlerBundleID:
_storeManager
didCompleteWithSuccess:authorizationAlreadyComplete:
didPerformVerificationWithSuccess:duration:
didCompleteVerificationWithSuccess:duration:
reportAuthEventOfType:success:error:
performBlock:
performBlockAndWait:
_databaseQueue
initWithDatabasePath:migrationController:
database
databasePath
performTransactionBlockAndWait:
openTransaction
commitTransaction
rollbackTransaction
_executeQuery:
performInsertQuery:
performQuery:
performQuery:rowHandler:
performQuery:error:
performInsertQuery:error:
_printStatement:
_stepThroughRowsWithQuery:statement:
_prepareStatementForQuery:error:
_finalizeStatement:error:
_handleDatabaseFailureError:
_currentDataBaseError
openDatabase:
_unsafe_openDatabase:
_unsafe_createDataBase
wipeDatabase:
_unsafe_wipeDatabase:
closeDatabase
_unsafe_closeDatabase
shouldAutomaticallyMigrate
setShouldAutomaticallyMigrate:
migrator
setMigrator:
_database
_databasePath
_shouldAutomaticallyMigrate
_migrator
T^{sqlite3=},R,N
T@"<AKSQLiteMigration>",&,N,V_migrator
bundleIDs
addConnectionForClient:
addConnection:forBundleID:
remoteObjectProxyWithProtocol:forBundleID:
remoteObjectProxyWithProtocol:forBundleID:errorHandler:
synchronousRemoteObjectProxyWithProtocol:forBundleID:errorHandler:
_setConnection:forBundleID:
_removeConnectionWithProtocol:forBundleID:
_connectionWithProtocol:forBundleID:
_connectionsByBundleID
initiateCustodianSetupWithContext:completion:
finalizeCustodianSetupWithContext:completion:
revokeCustodianWithContext:completion:
updateCustodianRecoveryKeyWithContext:completion:
startCustodianRecoveryRequestWithContext:completion:
fetchCustodianRecoveryCodeConfigurationWithCompletion:
startCustodianRecoveryTransactionWithContext:completion:
fetchCustodianRecoveryTokenWithContext:completion:
fetchCustodianDataRecoveryKeyWithContext:completion:
sendEmbargoEndNotificationFeedbackWithContext:urlKey:completion:
performTrustedContactsDataSync:completion:
verifyRecoveryTransactionWithContext:verifySessionID:error:
_trustedContactOperationsByIDFromArray:
fetchManifestOptionsWithInheritanceContext:completion:
setupBeneficiaryWithInheritanceContext:completion:
updateBeneficiaryWithInheritanceContext:completion:
removeBeneficiaryWithInheritanceContext:completion:
_setupBeneficiaryAliasWithInheritanceContext:completion:
_executeRequestWithContext:urlBagKey:shouldSignWithIdentityToken:completion:
stringFromColumn:inStatement:
numberOfRowsForTable:withExecutor:
tableInfoForTable:withExecutor:
sharedBagService
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:didCreateTask:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
urlBagForAltDSID:error:
urlBagFromCache:altDSID:error:
clearCache
clearSessionCache
clearSerializedMemoryCache
_cachedURLBagForAltDSID:
_updateURLBagIfNecessaryFromCache:altDSID:error:
_updateURLBagIfNecessaryFromCache:altDSID:urlSwitchData:shouldFallBack:completion:
_unsafe_updateCacheWithData:forAltDSID:
_bagFetchQueue
_lastUpdated
_cachedBags
didCircleTimeout
didFinishAccepting
didCancelRequesting
didEscapeRequesting
piggybackResultString:
performAuthorization:completion:
performAuthorizationWithContext:withUserProvidedInformation:completion:
beginAuthorizationWithContext:completion:
continueAuthorizationWithContext:completion:
cancelAuthorizationWithContext:completion:
getPresentationContextForRequestContext:completion:
fetchAppleIDAuthorizationURLSetWithCompletion:
fetchAppleOwnedDomainSetWithCompletion:
revokeUpgradeWithContext:completion:
fetchAppleIDAuthorizeHTMLResponseTemplateWithCompletion:
fetchPrimaryApplicationInformationForWebServiceWithInfo:completion:
continueFetchingIconForRequestContext:completion:
establishConnectionWithNotificationHandlerEndpoint:completion:
establishConnectionWithStateBroadcastHandlerEndpoint:completion:
startDiscoveryWithCompletion:
storeAuthorization:forProxiedRequest:completion:
_clientForContext:
_createAndPerformRequest:completion:
_shouldEarlyReturnRequest:forCredentialState:
_determineUIAndPerformRequest:completion:
_performRequest:completion:
_performSilentRequest:withCompletion:
_verifyEntitlementsForRequest:
_initiateAuthorizationWithRequestContext:completion:
_initiateRapportAuthorizationWithRequestContext:completion:
_shouldStartSatoriVerificationForRequestContext:
_getPresentationContextForRequestContext:client:completion:
_prepareRequestContext:forCredentialState:
_credentialStateForRequestContext:
_setupLoginChoicesForPresentationContext:
_fetchSafariCredentialsWithCompletion:
_fetchCredentialsForAssociatedDomains:completion:
_requestUserAuthorizationForContext:completion:
_safePerformSRPWithUserResponse:client:completion:
_performSRPAuthorizationForUserResponse:client:completion:
_completeAuthorizationWithServerResponse:userResponse:client:completion:
authorizationContextHelperWithContext:client:
authorizationContextWithRequest:client:
presentAuthorizationUIForContext:completion:
_validateAndProcessUserResponse:client:completion:
_processUserResponse:client:completion:
rapportClient
setRapportClient:
endorserRapportDiscovery
setEndorserRapportDiscovery:
credentials
setCredentials:
originalRequestContext
setOriginalRequestContext:
_authorizationRealUserLock
_clientProxy
_authSessionManager
_realUserVerificationResults
_rapportClient
_endorserRapportDiscovery
_credentials
_originalRequestContext
T@"AKAuthorizationRapportClient",&,N,V_rapportClient
T@"AKAuthorizationEndorserRapportDiscovery",&,N,V_endorserRapportDiscovery
T@"NSArray",C,N,V_credentials
T@"AKCredentialRequestContext",&,N,V_originalRequestContext
T@"<AKAuthorizationDaemonServiceDelegate>",W,N,V_delegate
T@"AKAuthorizationContext",&,N,V_authContext
initWithPushMessage:
setIdentifier:
titleKey
setTitleKey:
subTitleKey
setSubTitleKey:
bodyKey
setBodyKey:
actionButtonText
setActionButtonText:
otherButtonText
setOtherButtonText:
localizedAppsNameList
setLocalizedAppsNameList:
_identifier
_titleKey
_subTitleKey
_bodyKey
_actionButtonText
_otherButtonText
_localizedAppsNameList
T@"NSString",C,N,V_identifier
T@"NSString",C,N,V_titleKey
T@"NSString",C,N,V_subTitleKey
T@"NSString",C,N,V_bodyKey
T@"NSString",C,N,V_actionButtonText
T@"NSString",C,N,V_otherButtonText
T@"NSString",C,N,V_localizedAppsNameList
initWithLiaison:client:delegate:
_AKIDSCertificateFetchQueue
showServerUIWithContext:completion:
_errorFromServerResponse:
getServerUILoadDelegateWithServerContext:completion:
resourceLoadDelegateWithContext:
resourceLoadDelegateWithContext:authResponse:
_decorateLoadDelegate:withContext:
_fetchIDSCertificateWithCompletionHandler:
_fetchPhoneInformationWithAdditionalInfo:error:
_schemaVersion
startForTesting
_setupServices
shouldAllowClient:logging:
_startMonitoringPushEvents
_monitorXPCEvents
_isPasscodeChangeNotification:
_isDeviceScreenUnlockNotification:
_checkScreenUnlockStateFromNotificationDictionary:
_checkKeybagUnlockState
_startListeningForMessagesFromPairedDevice
_beginObservingLanguageChangeNotfication
_stopObservingLanguageChangeNotification
_exitForSIGTERM
anisetteServiceListener
setAnisetteServiceListener:
authServiceListener
setAuthServiceListener:
authorizationServiceListener
setAuthorizationServiceListener:
custodianServiceListener
setCustodianServiceListener:
privateEmailServiceListener
setPrivateEmailServiceListener:
authorizationEndorserRapportClient
setAuthorizationEndorserRapportClient:
inheritanceDaemonService
setInheritanceDaemonService:
fidoDaemonService
setFidoDaemonService:
_anisetteServiceListener
_authServiceListener
_authorizationServiceListener
_custodianServiceListener
_privateEmailServiceListener
_authorizationEndorserRapportClient
_inheritanceDaemonService
_fidoDaemonService
T@"NSXPCListener",&,N,V_anisetteServiceListener
T@"NSXPCListener",&,N,V_authServiceListener
T@"NSXPCListener",&,N,V_authorizationServiceListener
T@"NSXPCListener",&,N,V_custodianServiceListener
T@"NSXPCListener",&,N,V_privateEmailServiceListener
T@"AKAuthorizationEndorserRapportClient",&,N,V_authorizationEndorserRapportClient
T@"AAFService",&,N,V_inheritanceDaemonService
T@"AAFService",&,N,V_fidoDaemonService
_schedulerTimerDidFire:
sharedDispatcher
submitDispatchableRequest:
_scheduleNextRequest
_executeNextScheduledRequest
_executeScheduledRequest:
_invalidateScheduledRequest:withErrorCode:
_dispatchingAlgorithmForInfo:
_setDispatchingAlgorithm:forInfo:
_updateDispatchingAlgorithmForInfo:withResponse:
_nextScheduledRequest
_insertScheduledRequest:
_orderedDispatchingInfoKeys
_schedulerQueue
_schedulerLoop
_schedulerTimer
_dispatchingAlgorithmsByInfo
_dispatchingAlgorithmsByInfoLock
_scheduledRequests
_scheduledRequestsLock
scheduledRequestWithCalculation:forRequest:info:
calculation
setCalculation:
request
setRequest:
info
setInfo:
_calculation
_request
_info
T@"AKDispatchingCalculation",&,N,V_calculation
T@"<AKDispatchableRequest>",&,N,V_request
T@"NSDictionary",&,N,V_info
revokeUpgradeWithContext:client:completion:
_requestBodyForUpgradeRevokeContext:
_authenticationContextForRevokingUpgrade
clearanceHandler
setClearanceHandler:
_clearanceHandler
T@?,C,N,V_clearanceHandler
beginAuthenticationWithContext:client:clearanceHandler:
_shouldClearRequest:withClient:
_hasActiveDaemonAuths
_hasActiveAppAuths
_hasValuesInMap:
endAuthenticationForAppleID:password:error:context:client:clearanceHandler:
_tq_invokeTrafficRequest:
_updateContext:withPassword:forAppleID:
_addCachedPasswordInContext:
flushCache
setSurrogateManager:
_pendingTrafficRequests
_authenticatingApps
_authenticatingDaemons
_expiringCache
T@"AKAuthenticationSurrogateManager",&,N,V_surrogateManager
performAuthorizationCheckInWithCompletion:
appleIDAuthSupportTokenCreateWithExternalizedVersion:error:
appleIDAuthSupportCopyAppTokensWithMasterToken:authURL:serviceIds:authParams:error:
addKeychainItem:completion:
addOrUpdateKeychainItem:completion:
updateKeychainItem:completion:
fetchKeychainItemWithDescriptor:completion:
fetchKeychainItemsWithDescriptor:completion:
deleteKeychainItemWithDescriptor:completion:
_unsafe_addKeychainItem:shouldAttemptUpdate:error:
_unsafe_updateKeychainItemWithDescriptor:newItem:error:
_unsafe_fetchKeychainItemWithDescriptor:error:
_unsafe_fetchKeychainItemsWithDescriptor:error:
_unsafe_deleteKeychainItemWithDescriptor:error:
_keychainQueue
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveToken:forInfo:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
startWithDelegates:
setDelegates:
_notifyDelegatesOfMessageActivation:result:
_notifyDelegatesOfMessageActivation:result:payload:
_queryDelegatesForSuppressAction:
_processMessageWithDelegates:
_ensureDesiredAPSEnvironmentIsInUse
publicAPSTokenString
_publicAPSToken
_unsafe_processPushMessage:
_shouldProcessPushMessage:withAccount:
_unsafe_presentMessage:forAccount:
_messageSupportsAlerts:
_performCommandForMessage:forAccount:
_generateLoginCodeForAccount:withIncomingMessage:
showPigCode:withIncomingMessage:
tearDownLoginNotifications
_unsafe_showLoginNotificationWithCode:incomingMessage:piggy:
_unsafe_teardownCurrentLoginNotification
_unsafe_tearDownNotificationWithID:
_startPasswordResetFlowForAccount:
_unsafe_showNotificationForMessage:account:responseHandler:
_isPrimaryAccount:
setEnableCriticalReliability:
activeCode
setActiveCode:
_apsConnection
_activeAPSEnvironment
_apsTokenSemaphore
_pushServiceQueue
_loginCodeNotificationID
_appleCareNotificationID
_notificationsByPushID
_pushDelegates
_pushTopics
_pcsAuthPushHandler
_activeCode
T@"NSString",C,N,V_activeCode
queryWithString:
bindParameter:error:
bindParameters:error:
_bindStatement:withParameter:atPosition:
queryString
setQueryString:
bindingFailure
setBindingFailure:
bindHandler
setBindHandler:
rowHandler
setRowHandler:
_bindingFailure
_queryString
_bindHandler
_rowHandler
T@"NSString",C,N,V_queryString
TB,N,V_bindingFailure
T@?,C,N,V_bindHandler
T@?,C,N,V_rowHandler
recoveryToken
setRecoveryToken:
_recoveryToken
T@"NSString",C,N,V_recoveryToken
_performRequestWithURL:context:error:
initWithURL:contextHelper:completionHandler:
_performRequestWithContext:responseHandler:
_attachAdditionalHeaders:toContextHelper:
contextHelper
_url
_contextHelper
T@"NSURL",R,N,V_url
T@"AKSRPContextHelper",R,N,V_contextHelper
condition
setCondition:
payload
setPayload:
_condition
_payload
T@"NSCondition",&,N,V_condition
T@"AKCircleRequestPayload",&,N,V_payload
_processPiggybackPayload:
_hasPrimaryiCloudAccountForPayload:
_processPendingCompletionsForPayload:
_acceptingControllerForTransactionId:
_removeAcceptingControllerForTransaction:
startRequestSessionWithController:completion:
_processingTimeOut
_acceptingControllers
_pendingReplies
_requestingController
_piggybackingRequestQueue
_circleRequestProcessingQueue
_requiresHSA2Repair
event
setEvent:
pushToken
setPushToken:
followUpProvider
setFollowUpProvider:
_event
_pushToken
_followUpProvider
T@"NSString",C,N,V_event
T@"NSString",C,N,V_pushToken
T@"<AKFollowUpProvider>",&,N,V_followUpProvider
setModifiedName
didSelectAnonymousEmail:didCancel:
fetchAppInformationWithAltDSID:client:completion:
fetchPrimaryApplicationInformationForAltDSID:appInformation:client:completion:
isContextSecretValidForSRP
_addExperimentalFeaturesInfoToClientProvidedData:
clearContinuationTokenIfSupported
authKitAccount
username
eligibleForContinuationKeyAuthentication
setUsername:
password
setPassword:
accountRecoveryMasterKey
setAccountRecoveryMasterKey:
decodedRecoveryPET
setDecodedRecoveryPET:
decodedRecoveryIdentityToken
setDecodedRecoveryIdentityToken:
setAuthKitAccount:
ignoreInternalTokens
setIgnoreInternalTokens:
biometricAuth
setBiometricAuth:
passcodeAuth
setPasscodeAuth:
retryAuth
setRetryAuth:
_ignoreInternalTokens
_biometricAuth
_passcodeAuth
_retryAuth
_username
_password
_accountRecoveryMasterKey
_decodedRecoveryPET
_decodedRecoveryIdentityToken
_authKitAccount
T@"NSString",C,N,V_username
T@"NSString",C,N,V_password
T@"NSString",C,N,V_accountRecoveryMasterKey
T@"NSString",C,N,V_decodedRecoveryPET
T@"NSString",C,N,V_decodedRecoveryIdentityToken
T@"ACAccount",&,N,V_authKitAccount
TB,N,V_ignoreInternalTokens
contextSecretValidForSRP
TB,R,N,GisContextSecretValidForSRP
T@"<AKAuthenticationContext>",&,N,V_authContext
TB,N,V_biometricAuth
TB,N,V_passcodeAuth
TB,N,V_retryAuth
T@"NSDictionary",C,N,V_additionalHeaders
_verifyAccountTrustWithRequestContext:completion:
_configureLinkClientWithService:companionLinkClient:requestContext:
performAuthorization:companionLinkClient:advertisingService:completion:
_callCompletionWithAuthorization:error:
_presentUIWithControllerClassName:extraOptions:presentationServiceCompletion:
_presentUI
_fetchTVAppIcon
_handleStartAuthorizingWithRequest:options:responseHandler:
_sendDidTapNotificationMessage
_handleAuthorizationDidFinishWithRequest:options:responseHandler:
_dismissUI
_invalidate
_fetchAssociatedDomainsWithCompletionHandler:
_handleDidStartServerAuthorizationWithEvent:options:
linkClient
setLinkClient:
authorizationCompletion
setAuthorizationCompletion:
companionServicePresenter
setCompanionServicePresenter:
advertisingService
setAdvertisingService:
hasEndorserAuthorizing
setHasEndorserAuthorizing:
credentialRequestContext
setCredentialRequestContext:
tvAppIconData
setTvAppIconData:
tvAppIconScale
setTvAppIconScale:
_hasEndorserAuthorizing
_linkClient
_authorizationCompletion
_companionServicePresenter
_advertisingService
_credentialRequestContext
_tvAppIconData
_tvAppIconScale
T@"RPCompanionLinkClient",&,N,V_linkClient
T@?,C,N,V_authorizationCompletion
T@"AKAuthorizationTVServicePresenter",&,N,V_companionServicePresenter
T@"RPAppSignInService",&,N,V_advertisingService
TB,N,V_hasEndorserAuthorizing
T@"AKCredentialRequestContext",&,N,V_credentialRequestContext
T@"NSData",&,N,V_tvAppIconData
T@"NSNumber",&,N,V_tvAppIconScale
requestTapToRadarWithTitle:message:keywords:
requestTapToRadarWithTitle:message:componentName:componentVersion:componentID:keywords:
initWithContext:client:
attemptTokenUpgradeWithCompletionHandler:
_performTokenUpgradeWithContext:completion:
beginFederatedAuthWithInitialResponse:completionHandler:
_showIdentityProviderUIFromResponse:completion:
_handleIdentityProviderResponsePayload:completion:
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v40@0:8@16@24@?32
v32@0:8@"AKFidoContext"16@?<v@?@"AKFidoRegistrationResponse"@"NSError">24
v32@0:8@"AKFidoContext"16@?<v@?@"AKFidoAuthenticationResponse"@"NSError">24
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"AKFidoAuthenticationResponse"@"NSDictionary"@"NSError">24
v40@0:8@"AKAppleIDAuthenticationContext"16@"NSString"24@?<v@?@"AKFidoAuthenticationResponse"@"NSDictionary"@"NSError">32
v24@0:8@16
v56@0:8@16@24@32@40@?48
v16@0:8
@"AKFidoAuthorizationController"
@"AKFidoDaemonServerHandler"
v32@0:8@16@24
@40@0:8@16@24@32
@24@0:8@16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableDictionary"
v32@0:8@16Q24
v40@0:8@16Q24@32
v24@0:8@"AKPushMessage"16
B24@0:8@"AKPushMessage"16
v32@0:8@"AKPushMessage"16Q24
v40@0:8@"AKPushMessage"16Q24@"NSDictionary"32
v24@0:8@"NSString"16
@32@0:8@16@24
v48@0:8@16@24@32@?40
B40@0:8@16@24^@32
@24@0:8Q16
@"<AKFollowUpItemFactory>"
@"<AKFollowUpProvider>"
@"AKPushMessage"
@"<AKFollowUpControllerServiceProvider>"
v24@0:8^@16
B36@0:8@16B24^@28
B32@0:8@16^@24
@32@0:8@16^@24
i16@0:8
B28@0:8i16^@20
@24@0:8^@16
@"AKSQLiteExecutor"
@"NSArray"
@"AKUserInformation"
@"NSDictionary"
@"AKCredentialRequestContext"
@48@0:8{?=[8I]}16
@24@0:8@?16
@"NSXPCConnection"
@"NSString"
@"BSAuditToken"
v24@0:8q16
@"AKAppleIDAuthenticationContext"
@"AKCircleRequestContext"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B28@0:8@16B24
q16@0:8
@"NSNumber"
@"AKMasterToken"
@"AKToken"
@"NSData"
i24@0:8^@16
v36@0:8B16@20@28
v32@0:8Q16@?24
v24@0:8@?16
@"AKCircleRequestPayload"
@"KCJoiningAcceptAccountCircleDelegate"
@"AKCAPiggybackReporter"
@"AKProximityController"
@"AKFuture"
@"KCJoiningAcceptSession"
@"AKConfiguration"
v20@0:8B16
@"AKAuthenticationServerResponse"
@"AKServerRequestConfiguration"
v40@0:8@16@24@32
@"NSURLRequest"24@0:8^@16
B32@0:8@"NSData"16^@24
@"NSDictionary"32@0:8@"NSData"16^@24
@"AKAppleIDAuthenticationContext"16@0:8
@"AKClient"16@0:8
v24@0:8@"AKClient"16
@36@0:8@16@24B32
B32@0:8@16@24
@"AKClient"
@"NSURL"
i32@0:8^Q16Q24
i32@0:8Q16Q24
i56@0:8Q16^*24^I32^*40^I48
i24@0:8^v16
i24@0:8Q16
i60@0:8Q16r*24I32^*36^I44^I52
i44@0:8I16r*20I28r*32I40
i20@0:8I16
i68@0:8Q16r*24I32^*36^I44^*52^I60
@"AKAuthenticationUILiaison"
@"AKRequestDispatcher"
@"AKCASatoriReporter"
@"AKDispatchingCalculation"16@0:8
@32@0:8d16Q24
d16@0:8
@"AKKeychainItemDescriptor"
@48@0:8@16Q24@32@?40
@"NSDate"
@?16@0:8
@"NSUUID"
v48@0:8@16@24B32B36@?40
v48@0:8@16@?24@32@40
@"<AKAuthenticationSurrogateManagerDelegate>"
@"AKAuthenticationSettingsLauncher"
@"NSLock"
@"AKAccountManager"
@"AKSurrogateAuthenticationIDGenerator"
@"NSObject<OS_dispatch_queue>"
@"AKInheritanceContext"
v24@0:8Q16
v24@0:8@"AKSQLiteExecutor"16
v40@0:8@16@24d32
Q24@0:8Q16
v28@0:8B16@?20
v24@0:8@?<v@?B@"NSError">16
v32@0:8@"NSData"16@?<v@?B@"NSError">24
v28@0:8B16@?<v@?@"AKAnisetteData"@"NSError">20
v32@0:8@"NSString"16@?<v@?@"AKAnisetteData"@"NSError">24
v32@0:8@"NSURLRequest"16@?<v@?@"AKAttestationData"@"NSError">24
@32@0:8Q16^@24
@40@0:8@16@24Q32
@"AKCustodianContext"
@28@0:8@16B24
@24@0:8^{_NSZone=}16
Q24@0:8@16
d24@0:8Q16
{mach_timebase_info="numer"I"denom"I}
@"AKDeviceListRequestContext"
v32@0:8@"<AKProximityEngine>"16@"CBManager"24
v24@0:8@"<AKProximityEngine>"16
v24@0:8d16
@"NSObject<OS_dispatch_source>"
@"<AKProximityEngine>"
@"AKAuthorizationUserResponse"
@"NSObject<OS_os_transaction>"
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v40@0:8Q16@24@?32
v52@0:8@16B24@28@36@?44
@"IDSService"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v48@0:8@"NSString"16@"NSString"24@"NSDictionary"32@"NSError"40
@"NSXPCListener"
@"APSIncomingMessage"
@"UNUserNotificationCenter"
^{__AppleIDAuthSupportData=}16@0:8
^{__AppleIDAuthSupportData=}
@"CoreTelephonyClient"
v24@0:8@?<v@?@"NSDictionary">16
v24@0:8@"NSError"16
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
@40@0:8@16@24@?32
@"<AKURLRequestProvider>"
@"<AKAuthHandler>"
v32@0:8@"AKPiggybackRequestingController"16@?<v@?@"NSNumber"@"NSError">24
v40@0:8@"AKPiggybackRequestingController"16@"NSError"24@?<v@?@"NSNumber"@"NSError">32
v40@0:8@"AKPiggybackRequestingController"16@"NSNumber"24@?<v@?@"AKAuthenticationServerResponse"@"NSError">32
v32@0:8@"AKPiggybackRequestingController"16@?<v@?@"NSDictionary"@"NSError">24
v40@0:8@"AKPiggybackRequestingController"16@"NSError"24@?<v@?@"NSDictionary"@"NSError">32
B24@0:8@"NSDictionary"16
v40@0:8@"AKDServerUIContext"16@"NSDictionary"24@?<v@?@"AKAuthenticationServerResponse"@"NSDictionary"@"NSError">32
v44@0:8@16B24q28@?36
v40@0:8@16q24@?32
Vv24@0:8@?16
v36@0:8B16@20@?28
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSNumber"@"NSError">16
v40@0:8Q16@"NSString"24@?<v@?B@"NSError">32
v40@0:8@"NSHTTPURLResponse"16@"NSString"24@?<v@?B@"NSError">32
v40@0:8@"NSHTTPURLResponse"16@"AKAppleIDAuthenticationContext"24@?<v@?B@"NSError">32
v32@0:8@"NSString"16@?<v@?@"AKAppleIDServerResourceLoadDelegate"@"NSError">24
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"AKAppleIDServerResourceLoadDelegate"@"NSError">24
v44@0:8@"NSString"16B24q28@?<v@?B@"NSError">36
v44@0:8@"NSNumber"16B24q28@?<v@?B@"NSError">36
v32@0:8@"NSString"16@?<v@?@"AKUserInformation"@"NSError">24
v40@0:8@"NSString"16@"AKUserInformation"24@?<v@?B@"NSError">32
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?Q@"NSError">24
v32@0:8@"AKDeviceListRequestContext"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"AKApplicationMetadataInfo"@"NSError">24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v48@0:8@"<NSSecureCoding>"16@"NSString"24@"NSString"32@?<v@?B@"NSError">40
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSError">24
v40@0:8@"NSString"16q24@?<v@?B@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?B@"NSError">32
Vv24@0:8@?<v@?B@"NSError">16
v32@0:8@"AKCircleRequestContext"16@?<v@?@"AKCircleRequestPayload"@"NSError">24
v32@0:8@"AKAccountRecoveryContext"16@?<v@?@"NSDictionary"@"NSError">24
v40@0:8@"NSString"16@"AKAccountRecoveryContext"24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@"NSDictionary"16@"AKAppleIDAuthenticationContext"24@?<v@?B@"NSError">32
v32@0:8@"AKFollowUpTearDownContext"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSError">16
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSDictionary"@"NSError">24
v36@0:8B16@"NSString"20@?<v@?@"NSDictionary"@"NSError">28
v64@0:8Q16@24@32@40@48@?56
v64@0:8@16@24@32@40@48@?56
v80@0:8@16@24@32@40@48@56@64@?72
v76@0:8@16@24@32B40@44@52@60@?68
v64@0:8@16@24@32@40@48^@56
B64@0:8@16@24@32@40@48^@56
v68@0:8@16@24@32B40@44@52@?60
v40@0:8@16Q24@?32
B48@0:8@16@24@32^@40
@32@0:8@16q24
@"NSObject<AKAppleIDAuthSupportProxy>"
@"AKAuthenticationTrafficController"
@"CUTReachability"
v24@0:8@"AKAuthorizationEndorserRapportClient"16
B24@0:8^@16
@"RPCompanionLinkClient"
@"AKAuthorizationEndorserRapportClient"
@20@0:8B16
@"NSString"20@0:8B16
B32@0:8@"NSString"16^@24
v36@0:8@16B24@?28
@"<AKPiggybackRequestingControllerDelegate>"
@"KCJoiningRequestSecretSession"
@"NSError"
v24@0:8@"SBSRemoteAlertHandle"16
v32@0:8@"SBSRemoteAlertHandle"16@"NSError"24
v40@0:8@"AKPrivateEmail"16@"NSError"24@?<v@?B@"NSError">32
@"SBSRemoteAlertHandle"
@"<AKServiceController>"24@0:8@"AKAppleIDAuthenticationContext"16
v40@0:8@"NSString"16@"NSString"24@?<v@?@"AKPrivateEmail"@"NSError">32
v32@0:8@"AKPrivateEmailContext"16@?<v@?@"AKPrivateEmail"@"NSError">24
v32@0:8@"AKPrivateEmailContext"16@?<v@?@"AKPrivateEmailContext"@"NSError">24
v44@0:8@16B24@28@?36
@32@0:8d16@24
@"NSCondition"
@"NSMutableArray"
v32@0:8@"AKDevice"16@?<v@?B@"NSError">24
v40@0:8@"NSData"16@"AKDevice"24@?<v@?B@"NSError">32
v36@0:8B16@"AKDevice"20@?<v@?@"AKAnisetteData"@"NSError">28
v40@0:8@"NSString"16@"AKDevice"24@?<v@?@"AKAnisetteData"@"NSError">32
v40@0:8@"AKDevice"16@"NSURLRequest"24@?<v@?@"AKAttestationData"@"NSError">32
@"AKNativeAnisetteService"
@"AKAbsintheSigner"
@"AKAttestationSigner"
v32@0:8@"NSData"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"NSDictionary"16@"NSDictionary"24@?<v@?@"NSDictionary"@"NSData"@"NSError">32
B36@0:8@16@24B32
@40@0:8@16^B24^@32
@56@0:8@16@24@32Q40@48
v32@0:8@"<AKProximityEngineController>"16@"NSObject<OS_dispatch_queue>"24
@"<AKProximityEngineController>"16@0:8
@"NSObject<OS_dispatch_queue>"16@0:8
@"<AKProximityEngineController>"
v36@0:8@16S24@28
v24@0:8@"CBPeripheralManager"16
v32@0:8@"CBPeripheralManager"16@"NSDictionary"24
v32@0:8@"CBPeripheralManager"16@"NSError"24
v40@0:8@"CBPeripheralManager"16@"CBService"24@"NSError"32
v40@0:8@"CBPeripheralManager"16@"CBCentral"24@"CBCharacteristic"32
v32@0:8@"CBPeripheralManager"16@"CBATTRequest"24
v32@0:8@"CBPeripheralManager"16@"NSArray"24
v36@0:8@"CBPeripheralManager"16S24@"NSError"28
v40@0:8@"CBPeripheralManager"16@"CBL2CAPChannel"24@"NSError"32
@"CBPeripheralManager"
v40@0:8@16q24@32
v24@0:8@"CBCentralManager"16
v32@0:8@"CBCentralManager"16@"NSDictionary"24
v48@0:8@"CBCentralManager"16@"CBPeripheral"24@"NSDictionary"32@"NSNumber"40
v32@0:8@"CBCentralManager"16@"CBPeripheral"24
v40@0:8@"CBCentralManager"16@"CBPeripheral"24@"NSError"32
v40@0:8@"CBCentralManager"16q24@"CBPeripheral"32
v24@0:8@"CBPeripheral"16
v32@0:8@"CBPeripheral"16@"NSArray"24
v32@0:8@"CBPeripheral"16@"NSError"24
v40@0:8@"CBPeripheral"16@"NSNumber"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBService"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBCharacteristic"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBDescriptor"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBL2CAPChannel"24@"NSError"32
@"CBCentralManager"
v40@0:8@16^@24^@32
v32@0:8@"AKAuthorizationUserResponse"16@?<v@?@"AKAuthorization"@"NSError">24
v40@0:8@"AKAuthorization"16@"NSError"24@?<v@?B@"NSError">32
v24@0:8@?<v@?@"NSData"@"NSError">16
@24@0:8@"<AKURLRequestProvider>"16
v24@0:8@"<AKAuthHandler>"16
v24@0:8@?<v@?@"NSHTTPURLResponse"@"NSData"@"NSError">16
@"AKRequestDispatcher"16@0:8
v24@0:8@"AKRequestDispatcher"16
B32@0:8@16Q24
@"AKDevice"
B32@0:8q16@24
q24@0:8@16
q32@0:8q16@24
@52@0:8@16@24@32@40B48
@68@0:8@16@24@32@40@48@56B64
^{__CFUserNotification=}52@0:8@16@24@32@40B48
^{__CFUserNotification=}68@0:8@16@24@32@40@48@56B64
v28@0:8@16B24
v32@0:8Q16@24
v40@0:8^{__CFUserNotification=}16@24@?32
@56@0:8@16@24@32@40@48
^{__CFUserNotification=}56@0:8@16@24@32@40@48
@44@0:8@16B24@28@36
v32@0:8^{__CFUserNotification=}16@?24
B24@0:8Q16
^{__CFUserNotification=}
v24@0:8@"AKAuthorizationDaemonService"16
@"<AKAuthorizationEndorserRapportClientDelegate>"
@"RPCompanionLinkDevice"
@"AKAuthorizationDaemonService"
v44@0:8@16@24B32@?36
v44@0:8@"AKAppleIDAuthenticationContext"16@"AKClient"24B32@?<v@?B@"NSError">36
@56@0:8@16@24@32@40q48
@"AKAuthenticationSurrogateManager"
v28@0:8B16@20
v40@0:8q16@24@?32
v32@0:8q16@?24
v32@0:8q16@?<v@?B@"NSError">24
v32@0:8q16@24
v32@0:8q16@"NSString"24
v40@0:8q16@24@32
@"AKAuthorizationStoreManager"
v24@0:8B16B20
v28@0:8B16Q20
v36@0:8@16B24@28
^{sqlite3=}16@0:8
i24@0:8@16
B32@0:8@16@?24
q32@0:8@16^@24
v24@0:8^{sqlite3_stmt=}16
v32@0:8@16^{sqlite3_stmt=}24
^{sqlite3_stmt=}32@0:8@16^@24
B32@0:8^{sqlite3_stmt=}16^@24
^{sqlite3=}
@"<AKSQLiteMigration>"
v32@0:8@"AKCustodianContext"16@?<v@?@"AKCustodianSetupResult"@"NSError">24
v32@0:8@"AKCustodianContext"16@?<v@?@"NSError">24
v32@0:8@"AKCustodianContext"16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v32@0:8@"AKCustodianContext"16@?<v@?B@"NSError">24
v32@0:8@"AKCustodianContext"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"AKCustodianContext"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"AKCustodianContext"16@?<v@?@"AKTrustedContactsSyncResult"@"NSError">24
v32@0:8@"AKInheritanceContext"16@?<v@?@"AKBeneficiaryManifest"@"NSError">24
v32@0:8@"AKInheritanceContext"16@?<v@?@"NSError">24
v32@0:8@"AKInheritanceCLIContext"16@?<v@?@"AKBeneficiaryAliasSetupResult"@"NSError">24
@32@0:8q16^{sqlite3_stmt=}24
i32@0:8@16@24
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24q32q40q48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@36@0:8B16@20^@28
@"NSDictionary"32@0:8@"NSString"16^@24
@"NSDictionary"36@0:8B16@"NSString"20^@28
v48@0:8B16@20@28B36@?40
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"AKAuthorization"@"NSError">24
v40@0:8@"AKCredentialRequestContext"16@"AKAuthorizationUserResponse"24@?<v@?@"AKAuthorization"@"NSError">32
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"AKAuthorizationUserResponse"@"NSError">24
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"NSError">24
v32@0:8@"AKAuthorizationCredentialStateRequest"16@?<v@?q@"NSError">24
v32@0:8@"NSString"16@?<v@?q@"NSError">24
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"AKAuthorizationPresentationContext"@"NSError">24
v24@0:8@?<v@?@"NSSet"@"NSError">16
v32@0:8@"AKAuthorizationRevokeUpgradeContext"16@?<v@?B@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"NSData"@"NSError">24
v32@0:8@"NSXPCListenerEndpoint"16@?<v@?B@"NSError">24
v40@0:8@"AKAuthorization"16@"AKCredentialRequestContext"24@?<v@?B@"NSError">32
B32@0:8@16q24
v32@0:8@16q24
@"<AKAuthorizationClientProtocol>"
@"AKAuthorizationSessionManager"
@"<AKAuthorizationDaemonServiceDelegate>"
@"AKAuthorizationRapportClient"
@"AKAuthorizationEndorserRapportDiscovery"
@"AKAuthorizationContext"
@"<AKDServerUIDelegate>"
@"<AKAnisetteProvisioningClientProtocol>"
@"AAFService"
@"NSRunLoop"
@"NSTimer"
@"AKDispatchingCalculation"
@"<AKDispatchableRequest>"
@"AKExpiringCache"
^{__AppleIDAuthSupportTokenData=}32@0:8@16^@24
@56@0:8^{__AppleIDAuthSupportTokenData=}16@24@32@40^@48
^{__AppleIDAuthSupportTokenData=}32@0:8@"NSData"16^@24
@"NSDictionary"56@0:8^{__AppleIDAuthSupportTokenData=}16@"NSURL"24@"NSArray"32@"NSDictionary"40^@48
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
v36@0:8@16@24B32
@"APSConnection"
@"NSObject<OS_dispatch_semaphore>"
@"NSSet"
@"AKPCSAuthPushHandler"
v32@0:8@16^@24
B36@0:8^{sqlite3_stmt=}16@24i32
B40@0:8@16@24^^{__CFError}32
@"AKSRPContextHelper"
@32@0:8@16@?24
@"AKPiggybackRequestingController"
@"NSOperationQueue"
@"ACAccount"
@"<AKAuthenticationContext>"
@"AKAuthorizationTVServicePresenter"
@"RPAppSignInService"
Starting Fido registration with context: %@
Starting Fido authentication with context: %@
Error starting fido auth: %@
Starting Fido recovery with context: %@
Error authorizing fido auth: %@
Error finishing fido auth: %@
authkit/icon-fetching
Follow up push message is for an altDSID not signed in to iCloud: %@
Suppressing repair push for non-primary account
Refreshing follow ups for %@ with info %@
No body parameters in Follow Up response!
Failed to synchronize local follow up state: %@
Synchronizing local follow up state
Insertion Candidates: %@
Deleting: %@
Failed to clear existing follow ups: %@
Clearing Notifications: %@
Inserting: %@
Detected an item without an identifier, invalid payload
Updating existing item with identifier: %@
Existing item notification was previously dismissed, ignoring incoming notification
Incoming notification was forced, keeping it!
Found incoming sparse followups: %@
Found incoming full followups: %@
Unknown action, ignoring...
Sending tear down payload: %@
Pending Follow Up items matching tear down message id: %@
Pending Follow Up items: %@
Tear down follow up items: %@
Converting key to hashed value
Added:%@
Failed to persist private email with key:%@ error: %@
Remove:%@
Failed to remove private email with key:%@ error: %@
Failed to persist private emails list version with error: %@
Failed to persist private emails protocol version with error: %@
Tried to commit without listVersion. Info:%@
Failed to fetch authorized all private email with error: %@
State of app %@: %d.
XPC connection is nil, couldn't create remote object.
Unable to determine bundle ID of client %@ using NSBundle API. Falling back to CF.
Missing client info for circle request
Missing push token for circle request
Got malformed "%@" configuration info!
Got insecure "%@" configuration info!
Creating AKAuthenticationServerResponse with status: %@ contents: %@
Invalid/missing value for key alias: %@
Invalid value type for key: %@
Successfully obtained new CK from SRP
Successfully obtained new PRK from SRP
Encoded payload for federated auth: %@
No altDSID for auth server response. Could be bad.
No DSID for auth server response. Could be bad.
Invalid/missing value for key acname: %@
Invalid value for key ut: %@
Invalid value for key authType: %@
Invalid value for key Age of Majority: %@
Invalid value for key primary email vetted: %@
Invalid type for key orgType: %@
Invalid value for key orgType: %@
Invalid type for key orgName: %@
Invalid type for key isNotificationEmailAvailable: %@
Invalid type for key notificationEmail: %@
Updating with secondary auth response: %@
Trying to update an auth response without an existing _masterToken. Trouble waiting down the line.
Unable to update master token
Successfully obtained a new master token.
Successfully obtained a new PET.
Successfully obtained a new HB token.
Invalid format for service token in header %@
Updating token for service ID %@.
Successfully obtained new SLT from secondary auth
Successfully obtained new CK from secondary auth
Value for %@ is missing/invalid!
Successfully obtained new PRK from secondary auth.
No value for %@ header.
Invalid value value for %@ header: %@
Value for %@ is: %@
Invalid type for DSID value: %@
Will tear down an existing piggybacking session
Starting a piggybacking session
 CircleStep=%{public,signpost.telemetry:string1,name=CircleStep}@  enableTelemetry=YES 
BEGIN [%lld]: PiggyAcceptSessionForAcceptController  CircleStep=%{public,signpost.telemetry:string1,name=CircleStep}@  enableTelemetry=YES 
 CircleStep=%{public,signpost.telemetry:string2,name=CircleStep}@  Error=%{public,signpost.telemetry:number2,name=Error}d 
PiggyAcceptSessionForAcceptController
END [%lld] %fs:PiggyAcceptSessionForAcceptController  CircleStep=%{public,signpost.telemetry:string2,name=CircleStep}@  Error=%{public,signpost.telemetry:number2,name=Error}d 
Approving device could not accept piggybacking session: %@
%@: Processing physical proximity detection (%@) with replyContext (%@) for pushPayload (%@)
 PresenceMode=%{public,signpost.telemetry:number1,name=PresenceMode}d  enableTelemetry=YES 
BEGIN [%lld]: PiggybackingProcessPressenceForAcceptController  PresenceMode=%{public,signpost.telemetry:number1,name=PresenceMode}d  enableTelemetry=YES 
 Results=%{public,signpost.telemetry:string1,name=Results}@ 
PiggybackingProcessPressenceForAcceptControllerResults
EVENT [%lld] %fs:PiggybackingProcessPressenceForAcceptControllerResults  Results=%{public,signpost.telemetry:string1,name=Results}@ 
 Results=%{public,signpost.telemetry:string2,name=Results}@ 
PiggybackingProcessPressenceForAcceptControllerResultsOverrides
EVENT [%lld] %fs:PiggybackingProcessPressenceForAcceptControllerResultsOverrides  Results=%{public,signpost.telemetry:string2,name=Results}@ 
ReportedEnforceModeFailure
EVENT [%lld] %fs:ReportedEnforceModeFailure 
%@: Proximity check failed while handling push (%@)
 CheckPassed=%{public,signpost.telemetry:number2,name=CheckPassed}d 
PiggybackingProcessPressenceForAcceptController
END [%lld] %fs:PiggybackingProcessPressenceForAcceptController  CheckPassed=%{public,signpost.telemetry:number2,name=CheckPassed}d 
Will process message using session: %@ - %@
BEGIN [%lld]: PiggyClientInfoForAcceptController  CircleStep=%{public,signpost.telemetry:string1,name=CircleStep}@  enableTelemetry=YES 
PiggyClientInfoForAcceptController
END [%lld] %fs:PiggyClientInfoForAcceptController  CircleStep=%{public,signpost.telemetry:string2,name=CircleStep}@  Error=%{public,signpost.telemetry:number2,name=Error}d 
Did process message using session: %@ - %@
%@: Proximity was not detected and is being enforced
Failed to process data with error: %@
Approver is reporting as done...
Initializing accept session for DSID: %@
Failed to verify requesting secret, attempts: %@
%@: Determined proximity scanner should be started
%@: Unable to start proximity scanner with nil presenceSID from pushPayload (%@)
%@: Determined proximity scanner should not be started (wantsPresence: %@, circleStep: %lu, presenceSID: %@)
 enableTelemetry=YES 
PiggybackingDetectPresenceForAcceptController
BEGIN [%lld]: PiggybackingDetectPresenceForAcceptController  enableTelemetry=YES 
 FoundDevice=%{public,signpost.telemetry:number1,name=FoundDevice}d 
END [%lld] %fs:PiggybackingDetectPresenceForAcceptController  FoundDevice=%{public,signpost.telemetry:number1,name=FoundDevice}d 
Piggyback accepting controller has been released, proximity controller should have been invalidated
%@: Proximity controller (%@) found a match
%@: Proximity controller (%@) has been invalidated and prox was not detected
%@: Setting up proximity controller (%@) with presenceSID (%{mask.hash}@)
%@: Determined checking for proximity is needed
%@: Determined checking for proximity is not needed for circleStep (%lu) with controller (%@)
PiggybackingCheckPresenceForAcceptController
BEGIN [%lld]: PiggybackingCheckPresenceForAcceptController  enableTelemetry=YES 
%@: Proximity has been detected
%@: Proximity was not detected
END [%lld] %fs:PiggybackingCheckPresenceForAcceptController  FoundDevice=%{public,signpost.telemetry:number1,name=FoundDevice}d 
Authorization List version matches the local authorization list version, skipping update
Attempted to store incorrect authorization type
Cannot store an authorization credential with nil teamID/bundleID
Attempting to delete application with clientID: %@ from DB
Deleting application with clientID: %@ failed with error: %@
Application with clientID: %@ removed from database successfully
Revoking all applications failed with error: %@
Storing developer team failed with error: %@
Storing consented applications failed with error: %@
Failed to fetch applications to be revoked with error: %@
Failed to revoke applications with error: %@
Failed to fetch applications with error: %@, continuing with fetched applications if any...
Failed to fetch authorized client IDs with error: %@, continuing with the fetched clients if any...
Encountered error setting app list version: %@
Failed to update database version with error: %@
Attempting to build request without a URL, bad things to come...
Failed to sign the request with error: %@
Request: %@
Request Headers: %@
Request Body: %@
%@: Server returned no response, treating as success
%@: Cannot generate response dictionary for expected response type of UTF8String
%@: Unexpected error code value (%@) for key (%@)
%@: Server request failed with code (%@) and message (%@)
Server returned no response, treating as success
No body parameters in fetch user info response!
An error occurred performing request. Server message: %@
response type is JSON
Server request failed with error code: %i
Response Body: %@
Can't validate response for type: %lu
Invalid key %@ in server response: %@
AKAccountRecoveryController recoveryContext is valid %@:
Failed to retrieve recovery data with error. %@
Native recovery flow completed
Native recovery flow: recoveredInfo %@
Attempting to process native recovery response
shouldSendServerResponseForRecoveredInfo is true
responseContext: %@
Failed to fetch idMS completion url from provided info
We determined that we should not be resuming server UI flow at this point.  There is nothing else for us to do here.
Invalid native recovery server response detected
Internal or private access entitlement required but missing!
Missing identity token
Recovery token renewal will start.
Request to renew recovery token failed! Error: %@
Renewal of recovery token came back with HTTP status code: %@
Unexpected HTTP response code: %@
No basic auth URL!
MK was accepted
MK was accepted, but we did not get expected data... failing
Attempting to persist verifier
Failed to persist verifier with error: %@
Verifier persisted
Recovery context is valid...
Recovery context is invalid...
_recoveryContextFromServerInfo error: %@
%@: Requesting attestation data for proxied auth context (%@)
%@: Failed to fetch attestation data for proxied auth context (%@) with error (%@)
%@: Fetched attestation data (%@) for proxied auth context (%@)
Context eligibility for piggybacking: %@
Client is eligible for piggybacking: %@
Client has requested password-only auth.
Client has requested a short-lived token.
Client has request a recovery PET.
Client is exempt from mandatory UI security upgrade.
Client is requesting password only auth. Security upgrade will not be offered.
Client is requesting ephemeral auth. Security upgrade will not be offered.
Client logging in for first time is using full AuthKit UI, security upgrade should be offered.
Cannot offer HSA2 upgrade on device with Apple ID login enabled.
Client has indicated that we should offer HSA 2.0 upgrade.
Performing ephemeral auth. Will not ask for ckgen or prkgen.
Sending prkgen: %@
The client indicated support for ckgen: %@
ckgen supported: %@
Will ask for ckgen.
Will ask to stash escrow PRK
Context has provided Anisette data for companion device.
Looking to set companion Anisette data in CPD.
Context has provided Anisette data for proxied device.
Grabbing Anisette data from proxied device.
Client has request a custodian setup token.
Client has request a beneficiary setup token.
Context has masterKey set! Setting masterKeyIsEligible
Context has a proxied bundle id set!
Context has set masterKeyAsSecondFactor
Context indicates that dependent tokens are being requested by parent account
Context indicates we are performing reauth for existing service
Surrogate has been registered for ID %@: %@
Begin out-of-process authentication with surrogate ID %@
Taking user to Settings/System Preferences for auth UI...
UI surrogate %@ registered.
Whoa! UI surrogate is checking in with an unexpected identifier %@.
UI surrogate with ID %@ has already checked in.
UI surrogate client %@ with surrogate ID %@ is checking in.
Context with identifier %@ has no registered UI surrogate.
UI surrogate for client %@ with surrogate ID %@ is checking out.
Waiting for UI surrogate for client %@ with surrogate ID %@ to check in...
Stop waiting for UI surrogate for client %@ with surrogate ID %@!
Error: Attempted to clear surrogate that is no longer in progress with ID %@.
Settings redirect not supported by context
Could not find heartbeat token for account %@
Inheritance Server request failed with error code: %i
%@ Database Migration requested from version: %i
Building database with schema version: 1
Upgrading database to schema version: 2
Upgrading database to schema version: 3
Upgrading database to schema version: 4
Client requested that we attempt provisioning...
Provisioning succeeded!
Unable to get Anisette data even after provisioning was attempted. Error: %@
Provisioning failed. No Anisette for you today! Error: %@
Skipping Anisette provisioning, per client request.
%@: Fetching peer attestation data for request (%@)
ADIGetIDMSRouting failed! Error: %@
Looking for Anisette data...
The DSID %@ is not provisioned for Anisette.
ADIOTPRequest failed. Error: %@
Anisette Info: mid - %@ otp - %@ euid - %d localUserUUID %@
Kicking off Anisette provisioning....
Anisette is already provisioned!
Unable to create start-provisioning URL request!
Starting provisioning with headers: %@
Start provisioning request failed! Error: %@
Unexpected response class! %@
Start provisioning response code: %@
Start provisioning response body: %@
No response body for start provisioning request!
No SPIM!
Destroying provisioning context.
ADIProvisioningStart failed. Error: %@
ADIProvisioningStart succeeded!
Unable to create end-provisioning URL request!
End provisioning with headers: %@
End provisioning request failed! Error: %@
End provisioning response code: %@
End provisioning response body: %@
No response body for end provisioning request!
No PTM!
No TK!
No routing info!
ADISetIDMSRouting failed! Error: %@
ADIProvisioningEnd failed. Error: %@
ADIProvisioningEnd succeeded!
Signing with BAA headers for urlKey: %@
Failed to get signing headers, error: %@
Client did not provide SIM data!
Resyncing Anisette provisioning data...
Cleaning up ADI session objects...
ADISynchronize failed. Error: %@
ADISynchronize succeeded!
ADIGetIDMSRouting failed with error code: %@
Unable to create sync-provisioning URL request!
Sync provisioning request failed! Error: %@
Sync provisioning response code: %@
No response body for sync request!
Response status details: %@
Unexpected response format under Status key!
Server sync failed! Error Code: %@
Server sync looks like it succeeded.
We've been given new R-Info.
Anisette sync is complete!
Erasing Anisette provisioning data...
Erase failed! Error: %@
Erasing Anisette data succeeded!
Nil value for startProvisioningURL!
Nil value for endProvisioningURL!
Nil value for syncAnisetteURL!
Using QA Anisette DSID.
Using some other non-prod Anisette DSID.
Custodian Recovery request is being created without a push token
There was no custodian recovery session ID. This should only happen on Start CLI
Custodian Recovery body for request: %{private}@
Custodian Initiation / Revocation request is being created without a custodian UUID
Finalize custodian setup request is being created without a custodian UUID
Update recovery key request is being created without a custodian UUID
Update recovery key request is being created without a wrappingKeyRKC
There was no custodian recovery session ID for embargo end feedback call, request will probably fail
There is no altDSID in recovery feedback call, request will probably fail
TrustedContactsDataSync body is being created without a last data sync timestamp for custodian context: %@
Registering for XPC activity: %s...
XPC activity says os got upgraded, running Post Install Job
XPC activity for post install complete
XPC activity registration complete. State: %@.
Satori Warmup for Post Install complete with result: %i
Already sent AKCA event: %@
Sending Report: %@ (time: %f)
%s (%d) called
%@: Preparing proximity engine (%@)
%@: Activating proximity engine (%@)
%@: Invalidating proximity engine (%@)
%@: Encountered unexpected non-NULL engineTimeoutSource when attempting to schedule new timer
%@: Creating engine timeout source (%f s)
%@: Failed to create engine timeout source
%@: Engine timeout source has been registered
%@: Engine timeout source has been cancelled
%@: Engine timeout source event handler called
%@: Cancelling engine timeout source
%@: Manager (%@) did update to state (%lu)
%@: Manager (%@) reported that BLE is unsupported on this device
%@: Manager (%@) reported that we are unauthorized to use BLE
%@: Manager (%@) reported powered-on state
%@: Proximity engine (%@) was activated
%@: Proximity engine (%@) was invalidated
Session ID is nil for context: %@
Number of active sessions: %lu
Looking for client with session ID: %@
Session: %@ = %@
Found an exising context with session ID(%@), %@
AuthorizationSessionManager - Client %@ lacks a bundle ID!
AuthorizationSessionManager - should clear request: %@
AuthorizationSessionManager - Processing clearance request: %@
AuthorizationSessionManager - Adding %@ to list of authenticating apps
AuthorizationSessionManager - Created OSTransaction
Authorization Session - Denying clearance for %@
AuthorizationSessionManager - Queued end authentication clearance block for %@
AuthorizationSessionManager - Executing end authentication clearance block for %@
AuthorizationSessionManager - Nilled out OSTransaction
AuthorizationSessionManager - Removing %@ from authenticating list
AuthorizationSessionManager - Client bundle ID is nil.
AuthorizationSessionManager - No active request for %@
AuthorizationSessionManager - _continuationRequestIdentifier does not match the requestIdentifier
AuthorizationSessionManager - Active request session timed out for %@
AuthorizationSessionManager - Setting user response %@
 for context - %@
AuthorizationSessionManager - No active session for %@
AuthorizationSessionManager - Getting user response for context - %@
Listening for messages from paired device...
Looing for Anisette data on IDS-paired device...
Paired device Anisette info: %@
Unable to obtain Anisette data from IDS-paired device: %@
Error archiving request %@
Peer attestation fetch didSucceed:%d data:%@ error:%@
Error deserializing attestation data: %@
Proxied attestation fetch - %@
Unable to obtain Attestation data from IDS-paired device: %@
Preparing message with command %@...
Command message ready for sending to to paired device: %@
Setting paired device.
IDSService sendMessage method failed. Error: %@
Message is on its way to paired device with transport ID: %@
Found active tinker device
Preparing reply to %@...
Will send reply message to paired device: %@
IDSService sendMessage method failed to send reply. Error: %@
IDS callback did not provide a message identifier!
Message with transport ID %@ could not be sent! %@
No internal message ID exists for transport ID %@, so we're ignoring the send failure.
Success sending message with Transport ID %@!
Received reply message from paired device: %@
Received command message from paired device: %@
Incoming message lacks a valid AuthKit-assigned UUID. Replying to paired device will not be possible.
Handling command from paired device: %@
Incoming message lacks a valid command.
Error unarchiving request %@
Error while serializing attestation data %@
Unknown command received %@!
Reply message lacks reply-to field.
Unable to find pending completion block under ID: %@
Calling out to pending completion handler for ID %@...
Paired device changed while %@ remote commands were pending.
Acknowledged!
akd is starting up...
akd is shutting down...
Building %@ database with schema version: 1
Migrating %@ database to schema version: 2
Migrating %@ database to schema version: 3
Failed to delete key: %@
Migrating %@ database to schema version: 4
Migrating %@ database to schema version: 5
Redirecting to AuthKitUIService, to present basic login UI with context: %@
Context data is nil: %@
Trying to launch application with Scene Delegate
Unable to launch application: %@ with the error: %@
Successfully launched process: %@
Failed to launch application: %@ with error: %@
Call completion with authentication result with presentation completion: %@
Invalid value for key %@ in push message: %@
AKPushMessage: Piggybacking requestor presenceSID was expected but not found (%@)
alert parameters are not valid: %@
Push message has invalid command %@. Ignoring!
Push message is missing a transaction ID. Ignoring!
Can't post notification without an identifier.
User notification to be posted - %@
Adding notification request.
Failed to post notification with error: %@
Notification requeste added successfully.
Populating results with bundle info: %@
Failed to fetch subscription info with error: %@
%@: Failed to build URL request using provider (%@) with error (%@)
%@: Failed to execute URL request (%@) with 401 error (%@), will attempt to reauth and execute again
%@: Adding additional headers (%@) to URL request (%@)
%@: Executing URL request (%@)
%@: Reauthenticate succeeded, attempting to execute URL request again
%@: Failed to reauthenticate with error (%@)
%@: Unable to reauthenticate with nil authenticationHandler
Internal access entitlement required but missing!
No altDSID was provided.
No existing IDMS account for altDSID %@
No DSID was provided.
No existing IDMS account for DSID %@
Internal/Private/Write access entitlement required but missing!
Service type %@ is not valid.
Told to mark service %@ as not using account, but already not using!
Marking service %@ as %@ using account %@.
Global signout.
Removing unusued IDMS account %@...
Failed to remove account %@. Error: %@
Successfully removed account %@.
Exception caught: %@
Internal/Private access entitlement required but missing!
Internal/Owner access entitlement required but missing!
Failed to fetch devices with error: %@
Fetched device list for %@
Owner access entitlement required but missing!
Owner/Internal access entitlement required but missing!
Starting WarmUp verification ...
Invalid configurationInfo identifier provided: %@
Missing parameter altDSID!
Could not find configurationInfoURL in URL bag!
Could not find IdMS account with altDSID %@
Failed to serialize configuration info: %@
Failed to encode configuration info!
Set configuration info request failed: %@
Set configuration info response not of expected class!
Set configuration info completed with HTTP status code: %@
Invalid configurationInfo identifiers type provided: %@
Invalid configurationInfo identifiers provided: %@
Could not find fetchConfigDataURL in URL bag!
Fetch configuration info request failed: %@
Fetch configuration info response not of expected class!
Fetch configuration info completed with HTTP status code: %@
No body parameters in fetch configuration info response!
An error occurred fetching configuration info. Server message: %@
Fetch configuration info completed with keys: %@
Fetching login code
BEGIN [%lld]: UpdateStateWithAuthResponse  enableTelemetry=YES 
Write access entitlement required but missing!
The provided URL response is not formatted as a final auth response.
No Apple ID was provided.
No existing IDMS account for Apple ID: %@
 Error=%{public,signpost.telemetry:number2,name=Error}d 
UpdateStateWithAuthResponse
END [%lld] %fs:UpdateStateWithAuthResponse  Error=%{public,signpost.telemetry:number2,name=Error}d 
Updating IDMS account %@ with external server auth response...
Unable to update IDMS account %@. Error: %@
Successfully updated IDMS account %@
No GS service tokens to update. Done.
External auth response contains GS service tokens. Will persist those...
Asked to validated code: %llu
AuthKit master token is missing! Error: %@
AuthKit account altDSID is missing.
Unable to get master token string value!
Attaching proxied device Anisette data: %@
Attaching proxied device Anisette data.
Validate-code request failed! Error: %@
Vetting validation completed with HTTP status code: %@
No body parameters in code validation response!
Missing key %@ in server response.
Code is valid!
Code is invalid!
An error occurred validating the code. Server message: %@
A vetting token was not provided.
altDSID was not provided.
Vetting-token validation request is ready to go.
Request to validate vetting token failed! Error: %@
Code validation completed with HTTP status code: %@
Seems like our master token has expired.
Unusual ACAccount with nil username encountered: %@
Server says vetting token is valid.
Server says vetting token is invalid.
altDSID required but missing!
Failed to fetch eligibility with error: %@
Fetched eligibility state for %@
Check-in with IdMS requested for account with altDSID: %@
Performing liveness check-in for account: %@
No IdMS account found for altDSID: %@
Asked to report signout from service %@ for Apple ID: %@
No IDMS account for Apple ID: %@
Asked to report signout for all Apple IDs
Internal write access entitlement required but missing!
No IDMS accounts to sign out
Sign out failed for account %@ with error: %@
Sign out succeeded for account %@
The UI Surrogate is finally here!
Overriding limited UI context into silent preferred auth
Overriding full UI context into silent preferred auth, silent is not supported...
Requesting clearance to begin auth with context %@...
Cleared to begin auth with context %@!
Nothing to do, since the authenticating context was a UI Surrogate.
Cleared to end auth with context %@.
Starting security upgrade flow
Security upgrade flow completed with error - %@
Should not continue. Calling completion with just error.
Should continue with results. Update account with results and proceed.
Current context requires interactive auth. Trying biometric/passcode first.
Current context permits passwordless auth.
Passwordless authentication failed due to service error, bailing...
Passwordless authentication failed due to proxy failure, bailing...
Passwordless authentication resulted in a failed interactive flow, bailing...
Passwordless authentication force failed by client, bailing...
Silent auth did not provide results. Interactive auth not allowed. Stopping right now.
Canceling auth attempt because credential access is unavailable.
All non-interactive auth options failed. Trying interactive auth.
Biometric/Passcode validation not possible for current context.
Collecting biometric/passcode validation...
Biometric/Passcode Validation failed with error %@. We need password auth flow...
Upgrade token found on context, will attempt token upgrade.
Token upgrade requires secondary action.
Will attempt silent auth since the context is asking for service tokens.
Silent auth not allowed due to username being editable
Accounts not available, skipping IDMS account lookup...
Looking for IDMS accounts to suggest using...
Nothing found.
Telling client to ask the user about using Apple ID: %@
Client decision to keep using: %@. Error: %@
Rejecting CK auth because username is marked as editable
No existing IDMS account for %@
Found an existing IDMS account %@
We don't have a CK for %@ (Error: %@), so that's that.
Username and password already provided by context. One shot at non-interactive auth.
One shot at non-interactive failed, handling failure...
Interaction requested but network is unreachable, bailing...
Context did not provide a username and/or password or interaction requested.
Failed to refresh context locally with error: %@
Failed to refresh context remotely with error: %@
Client is asking for username only auth and provided a username... lets see how this goes
One shot at passwordless auth failed, handling failure...
Collecting user credentials...
No altDSID found on context. Checking DSID..
Context provided username is different %@(context) vs %@(account) for client %@. Trusting AuthKit account username.
No altDSID on context. Nothing to validate.
Last account info validation was less than 24 hours ago. Skipping.
Account info fetch failed. Skipping validation.
No account names came back from IDMS for altDSID: %@
Username %@ is valid for altDSID: %@
Username %@ is not valid for altDSID: %@. Setting username to %@
More than 24 hours since the last authentication mode was obtained, fetching authentication mode...
Less than 24 hours since the last authentication mode was obtained, using last known authentication mode
No AuthKit account and authentication mode is unknown, fetching authentication mode...
Skipping refresh, authmode is known: %@
Unable to dismiss UI on client side! Error: %@
User forgot their credentials.
User requested a new Apple ID.
User canceled. Aborting auth.
User has incompatible devices. Aborting auth.
Unable to show prompt. Aborting auth.
User request client alternate action. Aborting auth.
User chose to try again, aka retry auth.
Something bad happened! %@
Successfully obtained password. Time for SRP auth.
Asking client to dismiss basic login UI. SRP Passthrough.
Initiating credential recovery
Unable to dismiss UI on client side even though auth is complete! Error: %@
Asking client to dismiss basic login UI. SRP Success.
Prompt should be kept alive, retry auth.
Username was not valid for passwordless auth, requesting more information
Username was not entered.
Password was not entered.
Another attempt at getting basic login info has completed!
Auth attempt %@ has failed. Incrementing counter...
Maximum password auth attempts have been reached.
Attempting to show login error: %@
Starting piggybacking session
Looks like we're dealing with an HSA account.
Attempting passwordless auth with IDMS account %@...
Passwordless auth failed: %@
No continuation capable IDMS account found for Apple ID: %@
Faking IDMS auth success!
SRP auth attempted with an invalid context: %@ - %@ - %@
Secondary action not supported
Using server provided Apple ID.
Using client provided Apple ID.
No username provided, this can't be good...
Successful SRP did not return a PET to client.
Providing short-lived token
Providing identity token
Providing beneficiary setup token
Providing raw password to an internal client.
Providing PRK to an internal client.
Unable to reach client to call shouldContinueWithAuthenticationResults
Asking %@ should continue?
Force-failing auth, because client says to.
Will continue handling successful auth...
Unable to auth with IDMS but client says to suppress error and continue.
Updating AK account...
Will check in with IDMS about push registration...
Failed to check in with IDMS! Error: %@
Successfully checked in with IDMS.
Creating a new authkit account <%{private}@><%{private}@>
Fetched existing AK account: %{private}@
No service IDs were provided, so AKAuthenticationIDMSTokenKey will be left empty.
Updating service tokens is not available for Dependent tokens requests.
Fetching tokens for service IDs %@ failed. Error: %@
Fetching tokens for service IDs %@ succeeded!
We have no token for these services: %@. This can't be good.
Context not appropriate for updating persistent tokens. All done then!
BEGIN [%lld]: PersistGrandslamTokens  enableTelemetry=YES 
No AIDA account for altDSID %@ was found. Searching by Apple ID: %@
Creating new AIDA account for Apple ID: %@
Updating AIDA account %@ with properties and tokens.
Successfully saved AIDA account.
Failed to save AIDA account! Error: %@
PersistGrandslamTokens
END [%lld] %fs:PersistGrandslamTokens  Error=%{public,signpost.telemetry:number2,name=Error}d 
Updating token for service with ID %@...
GS service token with ID %@ marked as requiring TouchID.
Failed to update token for %@ in keychain. Error: %@
Cannot perform secondary auth action for non-interactive context.
Secondary action is GS endpoint. Returning the response as-is so that handler can perform the action.
Trying to show server UI for the response.
Context has masterKeyEligible set and server response indicates secondary action is required
Attempting second SRP for masterKeyAsSecondFactor
Server response indicates fido auth is required.
Secondary action server URL is missing
Failed to get second-factor. Error: %@
Successfully obtained second-factor code: %@.
Asking client to show alert for error: %@
Login code successfully validated! Updating auth tokens...
Unsupported prompt type encountered: %d
There was no URL in the bag for key: %@
Request response is not of expected class! %@
Starting to clear session cache.
Error starting fido auth flow: %@
Received Fido start auth with context: %@
Error presenting fido auth prompt: %@
Server says to show UI at URL key: %@
 ActionKey=%{public,signpost.telemetry:string1,name=ActionKey}@  enableTelemetry=YES 
ServerDrivenSecondaryAction
BEGIN [%lld]: ServerDrivenSecondaryAction  ActionKey=%{public,signpost.telemetry:string1,name=ActionKey}@  enableTelemetry=YES 
END [%lld] %fs:ServerDrivenSecondaryAction  Error=%{public,signpost.telemetry:number2,name=Error}d 
Asking client to start showing native UI
AKAppleIDAuthenticationService serverUIContext additionalData: %@
Retrieved recovery data for server. Server Response: %@ and recoveryData: %@
No usable IDMS account for Apple ID: %@
Attempting silent service-token auth with IDMS account %@...
No master token available for silent auth on account %@.
Fetching tokens for service IDs %@ failed! Error: %@
Fetching tokens for service IDs %@ succeeded.
Asked to fetch service token without a serviceID!
Asked to fetch service token without any master token data!
BEGIN [%lld]: FetchGrandslamTokens  enableTelemetry=YES 
Failed to create AppleIDAuthSupportTokenRef from exteral form. Error: %@
FetchGrandslamTokens
END [%lld] %fs:FetchGrandslamTokens  Error=%{public,signpost.telemetry:number2,name=Error}d 
AppleIDAuthSupportCopyAppTokensOptions failed with error: %@
Unable to find info for token with ID: %@
END [%lld] %fs:FetchGrandslamTokens 
User does not have all their credentials, so we're going to iForgot...
iForgot
BEGIN [%lld]: iForgot  enableTelemetry=YES 
END [%lld] %fs:iForgot  Error=%{public,signpost.telemetry:number2,name=Error}d 
iForgot reported success, but no username came back to akd.
iForgot reported success, but no password came back to akd.
iForgot succeeded, and we have a new auth server response!
iForgot succeeded, but we do not have a new auth server response. Doing SRP auth...
iForgot flow failed! Error: %@
Starting iForgot flow...
iForgot flow was triggered by push notification. Will try to use dedicated URL.
There was no iForgot URL in the bag!
Starting repair...
Failed to find matching account for context! Error: %@
There was no repair URL in the bag!
Repair flow reported success, but no auth response came back to akd.
Repair flow succeeded, and we have a new auth server response!
User wants a new Apple ID to auth with...
CreateNewAppleID
BEGIN [%lld]: CreateNewAppleID  enableTelemetry=YES 
END [%lld] %fs:CreateNewAppleID  Error=%{public,signpost.telemetry:number2,name=Error}d 
Calling recordUserAcceptedAgreementVersion with %@
New Apple ID flow reported success, but no username came back to akd.
New Apple ID flow reported success, but no password came back to akd.
New Apple ID flow reported success, but no auth response came back to akd.
New Apple ID creation succeeded, and we have a new auth server response!
New Apple ID flow failed! Error: %@
Starting Child Account creation flow...
Starting Apple ID creation flow...
There was no creation URL in the bag!
Change password flow failed! Error: %@
Change password flow reported success, but no username came back to akd.
Change password flow reported success, but no password came back to akd.
Change password flow succeeded, and we have a new auth server response!
Change password flow succeeded, but we do not have a new auth server response. Doing SRP auth...
Starting password change flow...
Change password flow started without account!
Could not find URL for changePassword!
Password change flow authentication failed with error, but we'll try anyways: %@
Prompting for piggybacking code
Failed to dismiss second factor UI %@
Piggybacking session failed with error: %@
Unable to dismiss client-side second-factor UI. Error: %@
Server UI came back with error: %@
Piggybacking escape hatch server UI finished, with error: %@
Detected a piggy service type, alias for iCloud
Setting serviceType %@ inUse for account %@
Server auth response did not contain HB token!
Server auth response did not contain CK.
Server auth response contained a CK, saving to the credential for account (%@)
Server auth response did not contain PRK.
Stashing the PRK away for escrowing for account: %@
We got a PRK from the server, but we have no passcode... discarding
Failed to update AuthKit account! Error: %@
We are running in recovery. Skip ACAccount update.
This auth is ephemeral. Skip ACAccount update.
This is a proxy auth. Skip ACAccount update.
This is a child account creation flow. Skip ACAccount update.
This auth is for a dependent. Skip ACAccount update.
Starting to teardown follow ups
This device cannot be an authorization endorser discovery.
Authorization Endorser discovery deactivated.
Authorization Endorser already in progress, ignoring device found. {device=%@}
 CleanSession=%{public,signpost.telemetry:number1,name=CleanSession}d  enableTelemetry=YES 
PiggybackingRequestingInitiateSession
BEGIN [%lld]: PiggybackingRequestingInitiateSession  CleanSession=%{public,signpost.telemetry:number1,name=CleanSession}d  enableTelemetry=YES 
END [%lld] %fs:PiggybackingRequestingInitiateSession  Error=%{public,signpost.telemetry:number2,name=Error}d 
Initiating a piggybacking flow for transaction id: %@
BEGIN [%lld]: PiggyInitialMessageData  enableTelemetry=YES 
 Error=%{public,signpost.telemetry:number1,name=Error}d 
PiggyInitialMessageData
END [%lld] %fs:PiggyInitialMessageData  Error=%{public,signpost.telemetry:number1,name=Error}d 
Handshake code prompt finished
Handshake request failed with error: %@
Handshake request finished
Waiting for handshake condition with state: %@ - %@ - %d - %d
Finished waiting for handshake condition with state: %@ - %@ - %d - %d
Code entered, but no handshake has been completed
Starting to process handshake results
We got results, finish the flow
User elected to escape before handshake completed
We did not capture a code, completing with escape results
Handshake failed with error: %@
Code collected, starting to wait for: %@
Piggybacking completion with final process response: %@ - %@
Clearing requesting controller state
 CircleStep=%{public,signpost.telemetry:number1,name=CircleStep}d  enableTelemetry=YES 
PiggybackingRequestingProcessPushPayload
BEGIN [%lld]: PiggybackingRequestingProcessPushPayload  CircleStep=%{public,signpost.telemetry:number1,name=CircleStep}d  enableTelemetry=YES 
END [%lld] %fs:PiggybackingRequestingProcessPushPayload  Error=%{public,signpost.telemetry:number2,name=Error}d 
%@: Proximity is being enforced and was not detected by accepting device (escrow fallback is expected)
User entered a new code after verificaiton failure
User succesfully escaped after verification failure
User escaped with erro after verification failure
We failed to handle verification, passing through the failure
Starting to process request message
BEGIN [%lld]: PiggyClientInfoForRequestController  enableTelemetry=YES 
PiggyClientInfoForRequestController
END [%lld] %fs:PiggyClientInfoForRequestController  Error=%{public,signpost.telemetry:number1,name=Error}d 
Requesting session indicated that we are DONE
%@: Will not attach duplex session to authentication results
Passing duplex session
Duplex session creation failure
Requesting session processing failure: %@
PiggybackingRequestingReplyWithContext
BEGIN [%lld]: PiggybackingRequestingReplyWithContext  enableTelemetry=YES 
END [%lld] %fs:PiggybackingRequestingReplyWithContext  Error=%{public,signpost.telemetry:number1,name=Error}d 
Attempting to determine whether we should continue.
Should continue came back with error: %@
Should continue: %d
Initializing requesting session: %@
Using a previously cached code or error: %@ - %@
Validating Code: %@
Login code validated
Code validated with result: %d - %@
PiggyCodeCollect
BEGIN [%lld]: PiggyCodeCollect  enableTelemetry=YES 
Prompting user for piggybacking code
END [%lld] %fs:PiggyCodeCollect  Error=%{public,signpost.telemetry:number1,name=Error}d 
Secret collection failed with error: %@
User wants to continue using current piggybacking session
Captured code: %@ - %@
%@: Determined proximity advertiser should be started
%@: Unable to start proximity advertiser with nil presenceSID from pushPayload (%@)
%@: Determined proximity advertiser should not be started (wantsPresence: %@, circleStep: %lu, presenceSID: %@)
%@: Determined proximity advertiser should be stopped (circleStep: %lu)
%@: Determined proximity advertiser does not need to be stopped (circleStep: %lu, proximityController: %@)
AKPiggybackRequestingController: Proximity controller has been invalidated
Context info %@
Received: %@ (%@)
Alert handle (%@) activated.
Alert handle (%@) deactivated.
Alert handle (%@) deactivated by request.
Alert handle (%@) interrupted with error: %@
Overriding Settings landing spot because the Apple ID %@ is used for iCloud.
Opening internal URL: %@
Error launching Preferences: %@
Invalid Apple ID service type %@. Falling back to iCloud.
No account found with given altDSID: %@, failing private email lookup
No match found with given altDSID: %@ for key %@ [bundle:%@]
Email found for %@: %@ [bundle:%@]
Insufficient entitlement for altDSID: %@, failing hme context fetch
No valid account fount for altDSID: %@, failing hme fetch
[ios] requesting for %@
Insufficient entitlement for altDSID: %@, aborting register private email
No valid account found for altDSID: %@, aborting register private email
Account not eligible to perform register Private Email - altDSID: %@
Insufficient entitlement for context: %@, failing hme context fetch
No valid account found for context: %@, failing hme context fetch
No altDSID in context: %@, failing hme context fetch
Updated context is nil for: %@, failing hme context fetch
Insufficient entitlement for altDSID: %@, aborting listAllPrivateEmails
Failed to fetch private emails for altDSID %@, error - %@
Private Emails found: %@
Unable to call back to client! Error: %@
Owner/Private access entitlement required but missing for removePrivateEmailKey!
Owner/Private access entitlement present for removePrivateEmailKey!
Owner/Private access entitlement for removePrivateEmailKey error %@
Owner/Private access entitlement for removePrivateEmailKey SUCCESS
Presenting UI for key %@
Presented UI! (%@, %@)
Failed to register private email (%@) with error: %@
Successfully registered Private Email
response: %@
data: %@
Failed to store fetched email (%@) error:%@
Owner detected!
Internal request made by internal client? %@
Unable to get Anisette data for %@! Error: %@
%@: Fetching attestation data for device (%@) with request (%@)
%@: Calling anisette service (%@) for peer attestation data
%@: Unable to grab attestation data for device (%@) with request (%@) using anisette service (%@)
Denied access to Anisette data to non-internal client.
Invalid target %@ for fetching Anisette data.
Invalid target %@ for fetching legacy Anisette data.
Client lacks entitlement to provision Anisette!
Invalid target %@ for provisioning Anisette data.
Client lacks entitlement to resync Anisette info!
Invalid target %@ for resyncing Anisette data.
Client lacks entitlement to erase Anisette provisioning!
Invalid target %@ for erasing Anisette data.
Denied access to Signing data to non-entitled client.
Starting to fetch user info for %@
Failed to fetch info with error: %@
Fetched user info for %@
Fetch user info returned apple managed account fetchError: %@
Fetched authMode for %@
Handling push with command AKPushMessageCommandAccountInfoChanged...
Not updating, since primary account does not match
failed to clear DB on protocol change - %@
Couldn't upgrade the stored protocol version - %@
Starting to sync private emails list for %@
Could not create service controller
Update passedVersion=[%@]
Update currentVersion=[%@]
Failed to update from push notification, error=%@
IDMS sent reset key to revoke authorization Database
Encountered error while revoking authorization database: %@
Authorization database revoked successfully
We got an appListVersion with the user info new version: %@ 
old version: %@
Unable to fetch authorized application list with error: %@
Unable to refresh because Nil altDSID
Unable to refresh because account name list is nil/empty.
Updating cached properties for Apple ID accounts with altDSID: %@
Username of account %@ is no longer a valid
Updating full list of account names for %@ to: %@
Posting %@ with payload: %@
Authorization requesting user information for request: %@
The Given/Family Name for the current user was not found in the AuthKit account
Application is not requesting email for this authorization early return with userInfo:
Application is requesting email for this authorization fetching email properties from account
This is a Mako Account, Ignoring primary email address verification
Mako account has reachable email addresses
Completed getting UserInformation for Mako account with UserInfo:
Missing primary email verification state.
Completed getting UserInformation for account with UserInfo:
Handling push with command AKPushMessageCommandNotifyTrustedDeviceListChanged...
AKPushMessageCommandNotifyTrustedDeviceListChanged message contained single-operation delta.
AKPushMessageCommandNotifyTrustedDeviceListChanged message contained no delta. Listener should fetch device list.
%@: Attempting to remove continuation token for account (%@)
%@: Peripheral manager (%@) failed to start advertising with error (%@)
%@: Peripheral manager (%@) started advertising
%@: Peripheral manager (%@) failed to add service (%@) with error (%@)
%@: Peripheral manager (%@) added service (%@)
%@: Central manager (%@) discovered peripheral (%@) with advertisement data (%@) and RSSI (%@)
%@: Discovered peripheral (%@) with nil serviceID
%@: Discovered peripheral (%@) with matching presenceSID (%{mask.hash}@) and serviceID (%@)
%@: Discovered peripheral (%@) with non-matching serviceID (%@)
Got unexpected combination, mappings=%@, hmeListVersion=%@
Failed to fetch private emails list with error: %@
Deleting Hide My Email database
Failed to clear Hide My Email database. Error: %@
Failed to unpack private emails list. Got:%@
Detected that we must sync with server
Got a bad private-email fetch URL from the bag: %@
Unable to fetch private email. The URL is missing from the URL bag
GS token is missing, giving it a shot to receive it from the account
We could not find an account, and the token is missing. Sending the requestas-is and hoping for the best.
Calling GS endpoint to start the Fido auth.
Parsing Fido auth context.
Creating Fido auth context with: %@
Error parsing fido auth parameters: %@
Calling GS endpoint to finish the Fido auth.
Error finishing fido auth flow: %@
Creating server response from finish fido response.
Activating handle: %@
Remote view sent a finish event
Remote view sent a user response event: %@
%@ deallocated.
%@: Transformed %@ (%@)
%@: Validating authentication context (%@)
%@: Failed to retrieve AuthKit account for context (%@) with error: %@
Successful SRP!
SRP authentication with server failed! Error: %@
Server told us to retry. Retrying auth...
Auth failed but the server says to try a secondary auth action anyway. Let's how this goes...
Need Anisette resync...
Anisette resync was successful. Retrying auth...
Anisette resync failed. Error: %@
Need Anisette reprovisioning...
Anisette erase was successful. Retrying auth...
Anisette erase failed. Error: %@
URLSwitching needed...
Server requested to switch URL but no URLSwitch data is available, Ignoring URL switch
URLSwitching was successfull retrying SRP With new url
URLSwitching failed with error: %@
Invalid PRK returned from server and we're doing a companion auth. We should clear CK
This is an internal build with Demo mode for Authorization activated, returning 'NOT FOUND' credential state
Credential state request does not contain clientID, reverting to XPC client information.
Setting clientID to %@
Credential state does not contain teamID, reverting to XPC client information.
Setting teamID to %@
Requested Credential state does not match XPC client's bundleID (%@) or teamID (%@), returning AKAuthenticationErrorInvalidContext
AltDSID is included in the State Request,this should only be happening in testing
This device is not trusted, returning 'REVOKED' credential state
Attempting private call to fetch credential state for clientID: %@
Client did not have a teamID and it is not an internal client
Client has internal entitlements and does not have a teamID
Client did not have a application identifier
No applications were found with the provided Client ID: %@
Credential State Request has an ignore flag on the TeamID returning Credential State
No developer teams were found with the Team ID: %@
Application database has been compromised.
Transfer state stored in database with clientID: %@, teamID: %@
Application has a credential, directly returning application's credential state.
Application has a credential but user identifier match is being ignored (for internal credential state), directly returning application's credential state.
Application has a credential, failed user identifier validation.
Application in transferred state with unsafe matching user identifier (to be verified by IdMS).
Application in transferred state with no matching user identifier.
Application in expired state with unsafe matching user identifier.
Application in expired state with no matching user identifier.
Application in transfered state with strongly matching alternate user identifier.
Application in expired state with strongly matching alternate user identifier.
Application in transferred state with strongly matching user identifier. Directly returning application's credential state.
Application in expired state with strongly matching user identifier. Directly returning application's credential state.
Application in expired state with no matching user identifier but user identifier match is being ignored (for internal credential state) and No match for Team Identifier, directly returning application's credential state.
Application in expired state with no matching user identifier but user identifier match is being ignored (for internal credential state), directly returning application's credential state.
Application in transferred state with no matching user identifier but user identifier match is being ignored (for internal credential state) and No match for Team Identifier, directly returning application's credential state.
Application in transferred state with no matching user identifier but user identifier match is being ignored (for internal credential state), directly returning application's credential state.
Application state cannot be securely determined.
Fetching developer team with id: %@
Encountered error while fetching developer team: %@
Fetching developer team for client with ID: %@
Unsafe verification failed due to nil User ID.
Performing unsafe verification with User ID: %@
Notification requires authentication prompt.
Unable to create CFUserNotificationRef!
Failed to create login code notification!
Dismissed code notification.
Attempting to show notification with identifier: %@
Beginning reverse geocode...
Reverse geocode callback called
Reverse geocode results: (Locality: %@ - Administrative Area: %@)
locationName = "%@"
Will display user notification...
Torn down notification with ID: %@
Attempted to tear down notification, but it was not found for identifier... %@
Notification responded: %@
Prompting user if if they want to change their password
Failed to create password change notification!
Suppressing password change prompt due to missing PRK
Will take user to change password flow in Settings...
Using the following URL for change password redirect: %@
Got authentication results back based on the prompt for notification: %@
Authorization Endorser already in progress, ignoring startAuthorization.
Authorization Endorser Started.
Authorization Endorser client failed to activate. {errorDomain=%{public}@, errorCode=%ld, error=%@}
Sending StartAuthorizationRequest. {device=%@, device_ptr=%p}
Ignoring StartAuthorization another endorser is already handling it.
StartAuthorization failed. {errorDomain=%{public}@, errorCode=%ld, error=%@}
Handling StartAuthorizationResponse. {response=%@}
Failed to unarchive the credential request context. {error=%@, data=%@}
_requirePassword property received as %i, setting to NO
StartAuthorization presenting authorization UI for Rapport request. {credentialRequestContext=%@}
Sending AuthorizationDidFinish. {authorization=%@, device=%@, device_ptr=%p}
Failed to archive AKAuthorization object, failing authorization. {archiveError=%@}
Received AuthorizationDidFinish response. {response=%@, error=%@, device=%@, device_ptr=%p}
Rapport endorser authorization failed. {errorDomain=%{public}@, errorCode=%ld, error=%@}
Error object won't be sent, failed to archive. {archiveError=%@}
Sending AuthorizationDidFinish. {error=%@, device=%@, device_ptr=%p}
Sending DidStartServerAuthorization event. {device=%@, device_ptr=%p}
Error sending DidStartServerAuthorization Rapport event. {errorDomain=%{public}@, errorCode=%ld, error=%@, device=%@, device_ptr=%p}
Could not dismiss UI! Error: %@
Request to show server UI came back with error: %@
Unable to tear down server UI! Error: %@
Native recovery failed! Error: %@
presentNativeRecoveryUIForContext did succeed. Recovered info: %@ and error: %@
Unable to tear down native recovery UI! Error: %@
dismissNativeRecoveryUIForContext did succeed.
In Sync Bubble. UI is not supported.
Context %@ has AKAppleIDAuthenticationUICapabilityUnknown.
Context cannot display full UI.
Context requires out-of-process UI.
Allowing BG process %@ to perform proxied FG auth.
Client is capable of displaying UI, no surrogate required...
Out-of-process auth, no registered UI surrogate yet...
Background auth, no registered UI surrogate yet...
Client %@ is being permitted to run FG auth, because iCloud settings are inaccessible.
Client %@ is not permitted to use _isProxyingForApp. Falling back to BG behavior.
Client %@ cannot proxy without specifying an immutable Apple ID.
Ignoring FG proxying request because %@ is not currently foreground.
Client %{public}@ requested authentication (via %{public}@).
Client %{public}@ requested authentication.
Will not prompt user about redirect per auth context configuration.
Showing alert failed, user notification is nil!. Error: %d
Unable to reset check in bit due to Accounts error: %@
Unable to respond to message with invalid id
Unable to respond to message without AK account for altDSID %@
Will notify IDMS about teardown response...
XPC activity says that it's time run the liveness check-ins!
XPC activity for liveness check-ins completed!
Done with removeUnusedAndDuplicateAuthKitAccounts
authkit/check-in
We do not have any IDMS accounts to check in with.
Performing liveness check-in with account: %@
Liveness check-in failed for account %@ with error: %@
Liveness check-in succeeded for account %@.
authkit/sign-out
Reporting global signout to IDMS for %@
Reporting signout for service %@ with account %@
Invalid service %@ for reporting
Cannot convert %@ to a non-nil string
Unable to call back to notification handler! Error: %@
Notifying client (%@) of credential state change %d.
Client (%@) was notified %@ with error %@
Unable to call back to state broadcast handler! Error: %@
Notifying client (%@) of credential state change (%d) for client ID (%@).
Executing query: %@
SQL Exec %@ failed with error %s.
Executing query: %s
Rows changed: %d
Database error detected: %@
Database corruption detected: %@
Wanted to migrate database, but migrator is nil!
Attempting to open database at path: %@
Creating path for database...
%@: Failed to open file at path %@
Database opened at path: %@
Attempting to wipe database at path: %@
Failed to wipe database with error: %@
Database %@ wiped...
Closing database at path: %@
Closed database with result: %d
%@ deallocated
AuthKit Private entitlement needed to start a custodian initiation request, but calling process doesn't have it
There is no custodian UUID to start a custodian initiation request failing operation
Missing custodian setup token, abandoning idMS custodian setup.
Failed to initiate custodian setup with error: %@
response: %@
Successfully initiated custodian setup for custodianUUID %@
response: %@
data: %@
AuthKit Private entitlement needed to finish a finalize custodianship request, but calling process doesn't have it
Missing custodian UUID, abandoning custodian finalization.
Missing altDSID, abandoning custodian finalization.
Successfully finalize custodianship for custodianUUID %@, response: %@
Failed to finalize custodianship with error: %@
AuthKit Private entitlement needed to abort a custodian setup request, but calling process doesn't have it
There is no custodian UUID to abort a setup request failing operation
Successfully aborted custodian setup for custodianUUID %@, response: %@
Failed to abort custodian setup with error: %@
AuthKit Private entitlement needed to finish a custodian recovery key update request, but calling process doesn't have it
Missing custodian UUID, abandoning custodian recovery key update.
Missing altDSID, abandoning custodian recovery key update.
Missing wrappingKeyRKC, abandoning custodian recovery key update.
Failed to update recovery key with error: %@
response: %@
Successfully updated recovery key for custodianUUID %@, response: %@
Starting recovery request with context %@
We have an authKit account, request needs to be authenticated
Failed to start custodian account recovery with error: %@
Successfully started an account recovery for account %@, response: %@
AuthKit Private entitlement needed to continue fetching the custodian configuration , but calling process doesn't have it
Failed to start custodian recovery transaction with error: %@
Successfully started an account recovery transaction, response: %@
Failed to verify custodian recovery key with error: %@
Call to fetch custodian recovery token returned with response: %@
AuthKit Private entitlement needed to continue fetching the data recovery key , but calling process doesn't have it
Cannot fetch data recovery key without a session ID or recovery token, failing operation
Cannot fetch data recovery key without an authenticated account, failing operation
Successfully fetched data recovery key for account with altDSID %@, response: %@
AuthKit Private entitlement needed but calling process doesn't have it
There is no altdsid to send embargo end transaction, failing operation
Cannot send embargo end transaction without a session ID, failing operation
Sending embargo end notification feedback with to urlKey: %@ context: %@
Failed to send embargo end feedback with error: %@
Embargo end feedback call returned with response: %@
Embargo end feedback completed with HTTP status code: %@
There is no owner or custodian information to start a transaction, failing operation
Custodian context does not provide a pushToken, fetching pushToken...
Something really really bad happened, we don't have a push token to start a custodian request
Cannot fetch data recovery key without a session ID, failing operation
There is no url for key AKURLBagKeyTrustedContactsDataSync in the URLBag. No op.
Missing lastDataSyncTimestamp, abandoning IdMS performTrustedContactsDataSync.
Missing altDSID, abandoning IdMS performTrustedContactsDataSync.
Missing heartbeat token, abandoning IdMS performTrustedContactsDataSync.
Failed to performTrustedContactsDataSync with error: %@
response: %@
Successfully performed TrustedContactsDataSync
response: %@
data: %@
Failed to performTrustedContactsDataSync due to AKCustodianDaemonService being released
Unexpected IdMS trusted contact operation response: %@
Failed to fetch dataclass rules with error: %@
Missing beneficiary setup short-lived token.
Failed to setup beneficiary (%@) with error: %@
Failed to remove beneficiary (%@) with error: %@
Failed to update beneficiary (%@) with error: %@
Setting up Beneficiary Alias with context - 
Failed to setup beneficiary alias (%@) with error: %@
Successfully setup Beneficiary Alias
response: %@
Failed to execute request with error: %@
Successfully executed the request with response: %@
Cleared session bag caches
Cleared serialized bag cache
Starting to fetch URL bag... if necessary
FetchURLBag
BEGIN [%lld]: FetchURLBag  enableTelemetry=YES 
END [%lld] %fs:FetchURLBag 
Fetching URL bag...
Bag fetch failed! Error: %@, falling back to older bag version
Bag fetch failed! Error: %@
Bag fetch either timed out or was successful but there was no bag data!
URL bag fetch timed out, cancelling task: %@
There was an error parsing the URL bag! %@
The URL bag was not in dictionary format!
URL bag fetched! %@
Daemon service initialized with client: %@
Client before perform authorization execution %@
Proxied bundle detected (%@), proxying...
Requesting clearance to authorize with context %@...
Perform Authorization cannot proceed because of error: %@
Attempting to authorize request: %@
Completion was called with nil authorization and no error thrown, setting Error Unknown
Error performing auth request (%@): %@
Authorization ended for requestContext: %@
Attempting to get credential state for User identifier: %@
Authorization Credential state not found with error:%@
Failed to revoke upgrade with error: %@
Revoke upgrade completed successfully.
Starting to fetch appleIDAuthorizeHTMLResponseURL
Request for appleIDAuthorizeHTMLResponseURL failed. Error: %@
appleIDAuthorizeHTMLResponseURL response code: %@
Failed to fetch appleIDAuthorizeHTMLResponseURL %@
Cannot fetch primary bundleID for nil primary account
Owner entitlement needed to continue fetching icon, but calling process doesn't have it
Establishing connection with notification center for client (%@).
Establishing connection with state broadcast handler for client (%@).
Handling request with missing account, default to primary AuthKit account
Client owner detected, checking for proxied bundle
Client doesn't have owner access, operation not permitted
Existing client found from the session manager and using it %@
Using the client initiated with the daemon service's connection
Early returning the request as it meets preferImmediatelyAvailableCredentials criteria.
Will attempt to perform silent authorization using provided user ID.
Requested to skip auth UI...
Requesting interactive authorization...
Silent Request is not eligible for authorization
Attempting safe SRP for first object...
Silent auth requested with an invalid context... bailing
Requesting password only: %@
Handling a client with authorization level: %@
Rapport authorization is required for request %@
Rapport request is not eligible for authorization
Proxied bundle identifier entitlement needed to continue saving authorization.
Authorization request missing proxied bundle identifier.
Storing authorization for proxied request (%@).
_getPresentationContextForRequestContext canPerformCredentialRequest returned %@ (with error %@)
AKAuthorizationValidator returned we cannot perform credential request but threw no error, setting error unknown
User information updated
No login choices available and we have a password request in credential requests.
No credential requests.
Checking for genesis event!
Previous credential for client %@ is authorized
Resetting scopes %@ for upgrade from keychain
Previous credential for client %@ is in transfer state
%s Credential state is not authorized
Fetching credentials with: %@
getCredentials returned with %lu credentials
Fetching credentials for proxied associated domains. {proxiedAssociatedDomains=%@}
presenting authorization UI for request %@
Authorization UI returned with userResponse - %@
Attempting authorization with response %@, and client: %@
Attempted to authorize request of unsupported type %@
User response contains password, so add them to srp context
Client has special access, populating context with overrides...
Applying request client ID override
Applying request team ID override
Authorization is for an internal application without teamID
Client do not have special access, so not overriding the context. Using the given client: %@
Client has authenticated externally, populating authToken...
Constructed AKAuthorizationContext from the request & client - %@
Client proxy object to present UI is not created
Client before perform authorization for user info execution %@
Client owner detected
shouldContinueWithRequest returning result %@ and error %@
Got a response from user: %@ and client: %@
Detected password request
Authorization presentation failed with error: %@
Got a response from user: %@, userSelection: %@ and client: %@
Processing of user response failed with an unknown error, likely invalid response...
Unable to beginAuthorization - Missing Entitlements.
Unable to beginAuthorization - Client is not entitled to _AKCredentialRequestContextBundleIdentifierProxyEntitlement
Unable to beginAuthorization - Client has proxy entitlement but is not setting either _proxiedClientBundleID or _proxiedClientTeamID
beginAuthorization - Proxied bundle detected (%@), proxying...
beginAuthorization - Requesting clearance to authorize with context %@...
beginAuthorization - Error beginning session for context : %@
 Error - %@
beginAuthorization - Attempting to authorize request: %@
beginAuthorization - Error beginning session for context : %@
beginAuthorization completed
beginAuthorization - User Response is nil for context : %@
Unable to continueAuthorization - Missing Entitlements.
Unable to continueAuthorization - Client is not entitled to _AKCredentialRequestContextBundleIdentifierProxyEntitlement
Unable to continueAuthorization - Client has proxy entitlement but is not setting either _proxiedClientBundleID or _proxiedClientTeamID
continueAuthorization - Proxied bundle detected (%@), proxying...
Invalid context. Need to set _continuationRequestIdentifier
continueAuthorization - Error continuing session for context : %@
 Error - %@
continueAuthorization - externalLocalAuthData was provided. Verifying...
continueAuthorization - Invalid Externalized LAContext
continueAuthorization - externalLocalAuthData was verified successfully
continueAuthorization - externalAuthToken was provided. Attaching to authorizationRequest.
Invalid context. Need to set either _externalLocalAuthData or _externalAuthToken
continueAuthorization - Attempting to resume authorization for request: %@
continueAuthorization - Authorization ended for requestContext: %@
continueAuthorization - Error continuing session for context : %@ 
: error: %@
continueAuthorization completed
continueAuthorization - authorization is nil for context : %@
cancelAuthorization with context - %@
Unable to cancelAuthorization. Missing Entitlements.
Unable to cancelAuthorization - Client is not entitled to _AKCredentialRequestContextBundleIdentifierProxyEntitlement
Unable to cancelAuthorization - Client has proxy entitlement but is not setting either _proxiedClientBundleID or _proxiedClientTeamID
cancelAuthorization - Proxied bundle detected (%@), proxying...
cancelAuthorization - Error canceling the session: %@
cancelAuthorization - Successfully canceled session
Client authenticated externally. Sending auth token in SRP.
Asking client to show server UI with %@...
Showing server UI with request: %@, %@
Server UI has been skipped.
Server UI did not complete auth successfully! Error: %@
Looks like we're done with server UI!
We do not have an initial auth response to update. Creating one now!
Successfully handled server UI response!
Asking client to dismiss any presented server UI...
Server UI-based authentication has been canceled.
User elected to try again
Unknown action signal from server UI final response!
Creating resource load delegate with auth response
Failed fetching phone information for server UI delegate: %@
Failed to fetch IDS cert info: %@
Fetching resource load delegate
Auth response recieved is for proxy, initializing resource load delegate accordingly
Could not find an existing AuthKit account, so we can't attach account specific headers: %@
Context explicitly does not want GS tokens for server UI, moving on...
Error communicating with client anisette service: %@
%@: Calling client proxy to fetch peer attestation data for context (%@) with request (%@)
Current %@ database version: %i
Migration logic not present (from: %i)
Current schema version undefined!
Current store name undefined!
Resuming XPC listener for Mach service %@...
Fatal error! Unknown XPC listener: %@
Lockscreen state: %@ 
Checking lock state
We are running in recovery. Leaving IDS alone.
We are running in the sync bubble. Leaving IDS alone.
akd is exiting due to SIGTERM
Notified of language change. Will exit when all clear.
%@: Scheduling request (%@) with calculation (%@)
%@: Unable to schedule request (%@) with algorithm (%@)
%@: Immediately executing request (%@)
%@: Will attempt to schedule next request (%@)
%@: No more requests to schedule
%@: Scheduled new timer (%@) for next upcoming calculation (%@)
%@: Scheduler timer fired, executing all eligible requests
%@: Attempting to execute scheduled request (%@)
%@: Unable to execute scheduled request (%@) with calculation (%@)
%@: Executing request (%@)
%@: Handling dispatching response (%@) for executed request (%@)
%@: Updating algorithm for dispatching info (%@)
%@: Removing algorithm for dispatching info (%@)
Sending request to revoke upgrade txID %@ for teamID/bundleID: %@/%@
Revoke request came back with error: %@
Client %@ lacks a bundle ID!
Processing clearance request: %@
Adding request as pending...
Processing clearance request for Surrogate with ID %@
Denying clearance to client %@ due to pending surrogate auth...
Clearing silent authentication
No authentication in progress, all clear!
Attempting to clear in-app request: %@
Allowing clearance despite pending interactive auths: %@
Denying clearance due to pending daemons: %@
Attempting to determine foreground state for apps: %@
Denying clearance due to another foreground app performing authentication...
Queued end authentication block for %@
Queued end authentication clearance block for %@
Executing end authentication clearance block for %@
Removing %@ from authenticating list
Surrogate context is done
Surrogate auth flow is complete!
Found a pending request: %@
Auth has ended with an error. Skipping queued context update.
End authentication called without any queued clearance handler, we are done
Adding %@ to list of authenticating apps
Adding %@ to list of authenticating daemons
Passing password down to next queued client.
Password populated from cache.
Clearing the password cache.
XPC activity says that it's time to update user information
XPC activity for fetch user information complete
No Primary AuthKit account found skipping user information fetch
Succesfully fetched user information for altDSID: %@
Encountered error while fetching user information: %@
We are running in recovery. Leaving APS alone.
We are running in the sync bubble. Leaving APS alone.
Push service starting...
Server did not provide a valid APS environment. Falling back to prod.
Push service started
Updating push delegates: %@
Will notify delegates of notification action: %@
Will query delegates of intent to show notification
Did notify delegates of intent to show notification, suppression elected: %@
Will ask delegates to process push payload
Did ask delegates to process push payload
Server is not providing an APS env override.
Current APS env matches server preference. %@
Active APS env (%@) does not match server-requested env (%@).
The server requested env (%@) is not valid!
Shutting down APS connection with env %@...
Starting new APS connection with env %@...
Shutting down APS connection...
APNS status changed: %d
APNS reconnected
APS says we have a new public token! %@
BEGIN [%lld]: APSTokenEnvironment  enableTelemetry=YES 
APSTokenEnvironment
END [%lld] %fs:APSTokenEnvironment 
BEGIN [%lld]: APSTokenPopulate  enableTelemetry=YES 
APSTokenPopulate
END [%lld] %fs:APSTokenPopulate 
akd/received-push-message
Received push message: %@. Contents: %@
Push message is not for the IDMS topic. Ignoring!
All queued push messages processed, we're done!
Attempting to process %@
Received push command to tear down notification.
Received push command to refresh AKURLBag
Processing a supressed command, tearing down previous HSA2 alerts
Incoming message alert suppressed
Discarding message as ineligible: %@
Push message is not intended for the primary iCloud account, suppressing...
Push message required a passcode, but current device does not have one...
Push message is for an unknown altDSID: %@
Push message is only allowed for primary account, suppressing...
Showing alert for message %@.
User interacted with alert - %lul.
Notification torn down by server!
User dismissed notification. Nothing further to do.
No action to be done for push command %@.
Processed all known commands, notifying delegates
Trying to generate login code now for %@...
Failed to generate login code. Error: %@
Will display login code notification...
Will display piggy notification...
Tearing down login notification: %@
Will tear down current notification, with ID: %@
Will tear down notification with ID: %@
Will take user to password-reset flow in Settings for %@...
Using the following URL for iForgot redirect: %@
Active login notification id: %@
Found matching iCloud account %@ for push.
AKSQLiteQuerry deallocated, not binding parameters
Error binding sql statement with parameter: %@
Parameter type not handled, failing binding statement.
%@: Failed to generate authentication parameters with error (%@)
%@: Failed to configure SRP context with error (%@)
%@: Performing SRP request with context (%@)
HSA2 repair required: %@
Suppressing piggybacking for non-primary iCloud accounts
BEGIN [%lld]: PiggybackingProcessPushPayload  CircleStep=%{public,signpost.telemetry:number1,name=CircleStep}d  enableTelemetry=YES 
Suppressed payload: %@
 DidProcess=%{public,signpost.telemetry:number2,name=DidProcess}d 
PiggybackingProcessPushPayload
END [%lld] %fs:PiggybackingProcessPushPayload  DidProcess=%{public,signpost.telemetry:number2,name=DidProcess}d 
Suppressing the circle error payload
We received a reply: %@
Processed a pending reply with payload: %@
Starting an accepting session with payload: %@
Failed to get a controller
 Class=%{public,signpost.telemetry:string1,name=Class}@  enableTelemetry=YES 
PiggybackingProcessPiggybackPayloadWithController
BEGIN [%lld]: PiggybackingProcessPiggybackPayloadWithController  Class=%{public,signpost.telemetry:string1,name=Class}@  enableTelemetry=YES 
Accepting session finished successfully
END [%lld] %fs:PiggybackingProcessPushPayload 
Accepting session finished with error: %@
END [%lld] %fs:PiggybackingProcessPushPayload  Error=%{public,signpost.telemetry:number1,name=Error}d 
Orphaned payload: %@
Processing pending reply!
authkit/circle-request
Starting circle request with context: %@
Populating push token
Failed to populate push token
Circle request failed with error: %@
Waiting for reply with timeout: %f
 Payload=%{public,signpost.telemetry:string1,name=Payload}@  enableTelemetry=YES 
PiggyCircleRequest
BEGIN [%lld]: PiggyCircleRequest  Payload=%{public,signpost.telemetry:string1,name=Payload}@  enableTelemetry=YES 
authkit/circle-operation
Starting circle operation with context: %@
Waiting... %@ - (%@) - %@
Cancelled piggybacking request: %@
Timeout for piggybacking request: %@
Notifying the other side that we're really done
Circle request (%@) completed with response: %@
END [%lld] %fs:PiggyCircleRequest  CircleStep=%{public,signpost.telemetry:string2,name=CircleStep}@  Error=%{public,signpost.telemetry:number2,name=Error}d 
PiggyExecuteRequest
BEGIN [%lld]: PiggyExecuteRequest  CircleStep=%{public,signpost.telemetry:string1,name=CircleStep}@  enableTelemetry=YES 
END [%lld] %fs:PiggyExecuteRequest  CircleStep=%{public,signpost.telemetry:string2,name=CircleStep}@  Error=%{public,signpost.telemetry:number2,name=Error}d 
Received response for circle (step 0) request: %@
Circle (step 0) response payload (%@) received with presenceSID (%{mask.hash}@)
Circle (step 0) response payload (%@) does not contain presenceSID, ignoring response
No push token available for check-in!
Error getting phone bundle information: %@
Failed to fetch follow up identifiers: %@
Posting active services as: %@
Check-in to server without any active services for account: %@
Starting to fetch app info for %@
Failed to fetch app info with error: %@
Fetched app info for %@
Starting to fetch bundle id for Primary application for serviceID: %@, altDSID: %@
Failed to fetch Primary application with error: %@
Fetched Primary application bundle id for %@
bio metric PET requested.
passcode PET requested.
altDSID is available for auth: %@
Client Bundle ID is available
Opting into Experimental Mode through SRP
Sending requested cloud partition: %@
Test Account Header Attached
Password available. Will ask for bootstrap password-based auth.
No password, but CK is available. Will ask for ck-based auth.
Master Key avalable.  Will ask for mk-based auth.
%@: Attaching additional headers (%@) to SRP request
Context has provieded UDID for proxied device.
Sending experimental features as %lu
%@: Attempting to clear continuation token for account (%@)
Device is still not trusted, not performing auth.
Authorization Rapport Link Client invalidated
Authorization Rapport Link Client failed to activate. {errorDomain=%{public}@, errorCode=%ld, error=%@}
Invalid request, cannot properly set RPAppSingInService flags. {requestContext=%@}
Authorization Rapport activated, and AppSignIn is advertising.
Asked to perform authorization, but one is already in progress. {requestContext:%@}
%s Unable to satisfy password request
Rapport authorization called with no completion callback. {authorization=%@, errorDomain=%{public}@, errorCode=%ld, error=%@}
AuthorizationRapportClient present UI failed. {errorDomain=%{public}@, errorCode=%ld, error=%@}
Received StartAuthorization. {request=%@, options=%@}
Ignoring StartAuthorization, one is already in progress.
Failed to archive the credential request context. {archiveError=%@}
Received AuthorizationDidFinish. {request=%@, options=%@}
Failed to unarchive error. {unarchiveError=%@}
Failed to unarchive authorization. {unarchiveError=%@}
AKD received request for TTR on non-internal build, suppressing.
AKD received push request to create TTR with title: %@
The TTR request was missing a title - message was: %@
AKD received request for TTR on non-internal build, ignoring.
Completed launch of tap-to-radar with result: %@, error: %@
Attempt to perform authentication without an upgrade token!
Attempt to perform authentication without altDSID!
Current context requires interactive auth for Apple ID: %@
Token upgrade requested without a username
Server requests remote UI
Short-lived token upgrade failed: %@
Attempting token upgrade with altDSID %@...
Missing URL bag entry for federated account, attempting IDP flow...
Server says to show UI at IDP URL: %@
Handling IDP response: %@
v24@?0@"AKFidoAuthenticationResponse"8@"NSError"16
v24@?0@"AKFidoContext"8@"NSError"16
v32@?0@"AKAuthenticationServerResponse"8@"NSDictionary"16@"NSError"24
v8@?0
v24@?0@"NSData"8@"NSError"16
v16@?0@?<v@?@"NSData"@"NSError">8
v24@?0@"AKIconContext"8@"NSError"16
@"AKCoordinatedDataBlock"8@?0
items
action
v32@?0@"NSHTTPURLResponse"8@"NSData"16@"NSError"24
@32@?0@"NSDictionary"8Q16^B24
B32@?0@"FLFollowUpItem"8Q16^B24
v32@?0@"FLFollowUpItem"8Q16^B24
/Library/Application Support/com.apple.akd/privateEmails.db
INSERT OR REPLACE INTO emails (client_key, email) VALUES (?, ?)
DELETE FROM emails WHERE client_key = ?
SELECT email FROM emails WHERE client_key=?
v24@?0^{sqlite3_stmt=}8^B16
SELECT privateEmailListVersion FROM version
UPDATE version SET privateEmailListVersion = ?
SELECT protocol_version FROM version
UPDATE version SET protocol_version = ?
SELECT email, client_key FROM emails
accountInfo
devices
adsid
@32@?0@8Q16^B24
v32@?0@"NSDictionary"8Q16^B24
/System/Library/Frameworks/BaseBoard.framework/BaseBoard
/System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard
/AppleInternal/Library/Frameworks/BaseBoard.framework/BaseBoard
BSAuditToken
Unable to find class %s
com.apple.authkit.client
com.apple.authkit.client.private
com.apple.authkit.client.internal
com.apple.authkit.client.owner
com.apple.authkit.writer.internal
com.apple.dt.Xcode
com.apple.dt.xcodebuild
com.apple.dt.xcscontrol
application-identifier
com.apple.application-identifier
com.apple.developer.applesignin
com.apple.authkit.authorization-bundle-identifier-proxy
AKOwnerProxyClient: %@
akd [on behalf of %@]
com.apple.akd
accountsd
backupd
aktool
askpermissiond
itunesstored
Preferences
StoreKitUIService
appstored
Carousel
com.apple.aktool
com.apple.internal.appleAccountSetupTool
exited?
%@ (%@)
ptkn
autype
acname
DsPrsId
uireq
com.apple.gs.idms.pet
com.apple.gs.idms.hb
X-Apple-GS-Token
X-Apple-HB-Token
X-Apple-AK-Auth-Type
X-Apple-I-CK
X-Apple-I-PRK
X-Apple-SL-Token
X-Apple-I-MD-DATA
X-Apple-I-Recovery-Session-Id
com.apple.gs.idms.beneficiary.add
X-Apple-I-AURL
X-Apple-I-AURL-Type
X-Apple-I-Device-Terms
X-Apple-I-MD-Cmd-Target
underAge
isSenior
ageOfMajority
firstPartyApp
privateEmail
X-Apple-I-Data
additionalInfo
appleIdSignInEnabled
privateAttestationEnabled
phoneAsAppleId
primaryEmail
primaryEmailVetted
naurl
X-Apple-I-NAURL
canHaveCustodian
canBeCustodian
custodianEnabled
custodianLastUpdateDate
canHaveBeneficiary
canBeBeneficiary
buuid
beneficiaryWrappedKey
countryCode
appleManagedAccount
orgType
orgName
notificationEmailAvailable
notificationEmail
fidoAuth
@"<NSSecureCoding>"32@?0@"NSString"8@"NSString"16^B24
atxid
alias
demoAccount
params
paired
alternateDsid
hsa2
hsa1
managed
v16@?0B8B12
idmsPresence=%@, foundDevice=%@
v24@?0@"AKCircleRequestPayload"8@"NSError"16
DSID
%06u
v12@?0B8
proximityDetected
/Library/Application Support/com.apple.akd/authorization.db
v32@?0@"NSString"8Q16^B24
v32@?0@"AKDeveloperTeam"8Q16^B24
SELECT team_id, uid FROM authorized_teams WHERE team_id = ?
SELECT team_id FROM authorized_applications WHERE client_id = ?
SELECT team_id FROM authorized_teams WHERE uid = ?
UPDATE authorized_applications SET credential_state = ? WHERE client_id = ?
DELETE FROM authorized_applications WHERE client_id = ?
UPDATE authorized_applications SET credential_state = ?, authorizedAppListVersion = 'TEMPORARY'
TEMPORARY
INSERT OR REPLACE INTO authorized_teams (team_id, uid) VALUES (?, ?)
v32@?0@"NSString"8@"AKConsentedApplication"16^B24
INSERT OR REPLACE INTO authorized_applications (client_id, team_id, scopes, origin, credential_state, transfer_state, primary_client_id, authorizedAppListVersion) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
SELECT client_id FROM authorized_applications WHERE authorizedAppListVersion != ? AND authorizedAppListVersion != 'TEMPORARY'
UPDATE authorized_applications SET credential_state = ?, authorizedAppListVersion = ? WHERE authorizedAppListVersion != ?
SELECT client_id, scopes, credential_state, transfer_state, primary_client_id, origin FROM authorized_applications WHERE team_id = ?
NULL
SELECT client_id FROM authorized_applications WHERE credential_state = ?
SELECT authorizedAppListVersion FROM version;
v16@?0^{sqlite3_stmt=}8
UPDATE version SET authorizedAppListVersion = ?
UPDATE version SET db_version = ?
/System/Library/Frameworks/SetupAssistant.framework/SetupAssistant
/System/Library/PrivateFrameworks/SetupAssistant.framework/SetupAssistant
/AppleInternal/Library/Frameworks/SetupAssistant.framework/SetupAssistant
BYLicenseAgreement
POST
com.apple.gs.idms.mrk
v20@?0B8@"NSError"12
v24@?0@"NSDictionary"8@"NSError"16
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
v28@?0B8@"AKAuthenticationServerResponse"12@"NSError"20
<%@: %p {
base: %f,
maxQueueSize: %lu,
_counter: %lu,
_queueSize: %lu,
<%@: %p {
delay: %f,
maxQueueSize: %lu,
_counter: %lu,
_queueSize: %lu,
application/json
Content-Type
Accept
X-Apple-Password-Only
X-Apple-Offer-Security-Upgrade
X-Apple-Ephemeral-Auth
ckgen
icscrec
rpet
X-Apple-I-App-Provided-Context
X-Apple-I-Proxied-ICSCREC
X-Apple-I-Proxied-PRK-Gen
X-MMe-Proxied-Client-Info
X-Apple-Identity-Token
X-Apple-I-Device-Configuration-Mode
X-Apple-I-Proxied-MD-M
X-Apple-I-Companion-MD-M
mk2fa
X-Apple-I-Request-UUID
X-Apple-I-ReAuth
addBeneficiaryToken
addCustodianToken
dependentAltDSID
v24@?0@"AKAttestationData"8@"NSError"16
v24@?0@"NSMutableDictionary"8@"NSError"16
true
%@:%@
com.apple.AuthKit.PromptEvent
clientId
proxiedClientId
hasUsername
proxyingForPairedDevice
accountSecurityLevel
authenticationType
authReason
capabilityForUIDisplay
__OSINSTALL_ENVIRONMENT
__AKSYNCBUBBLE
No Bundle ID
No Proxied Client ID
%lu%@
<%@: %p {
dispatchDate: %@,
dispatchCounter: %lu,
algorithmIdentifier: %@,
relinquishmentHandler: %@,
headerValue: %@,
capp
papp
svct
ralg
base
delay
maxqueue_size
AKUISurrogateQueue
Out-of-process surrogate auth is already in progress for client %@.
XPC Error launching out-of-process authentication for client %@ with surrogate ID %@.
v16@?0@"NSError"8
Failed to launch out-of-process authentication for client %@ with surrogate ID %@.
Settings surrogate auth is already in progress for client %@
Redirecting to Settings for client %@ is not permitted for this call.
Failed to prompt for Settings redirect for client %@.
User canceled Settings redirect for client %@.
Unable to launch Settings for client %@.
UI surrogate %@ not registered. Unable to do UI work.
 AKAuthenticationSurrogateManager Error: %@
beneficiaryUUID
claimId
selections
accessKey
beneficiaryFirstName
beneficiaryLastName
beneficiaryPassword
Authorization
CREATE TABLE IF NOT EXISTS authorized_teams (team_id TEXT PRIMARY KEY, uid TEXT, authorizedAppListVersion TEXT);
CREATE TABLE IF NOT EXISTS authorized_applications (client_id TEXT PRIMARY KEY, team_id TEXT, scopes TEXT, credential_state INTEGER);
CREATE TABLE IF NOT EXISTS version (authorizedAppListVersion TEXT PRIMARY KEY);
ALTER TABLE version ADD COLUMN db_version INTEGER;
ALTER TABLE authorized_applications ADD COLUMN authorizedAppListVersion TEXT
UPDATE version SET authorizedAppListVersion = 'TEMPORARY';
INSERT OR REPLACE INTO version (authorizedAppListVersion, db_version) values ('TEMPORARY', '%i');
ALTER TABLE authorized_applications ADD COLUMN transfer_state TEXT
ALTER TABLE authorized_applications ADD COLUMN primary_client_id TEXT
ALTER TABLE authorized_applications ADD COLUMN origin TEXT;
DROP TABLE IF EXISTS version;
CREATE TABLE IF NOT EXISTS version (authorizedAppListVersion TEXT PRIMARY KEY, db_version INTEGER);
com.apple.AuthKit.TiburonAttempt
/System/Library/Frameworks/KeychainCircle.framework/KeychainCircle
/System/Library/PrivateFrameworks/KeychainCircle.framework/KeychainCircle
/AppleInternal/Library/Frameworks/KeychainCircle.framework/KeychainCircle
KCJoiningAcceptAccountCircleDelegate
KCJoiningAcceptSession
KCJoiningRequestSecretSession
<%@: %p> Value: %@, Expiry (%@)
@"NSString"8@?0
@"NSArray"8@?0
@"_AKExpiringCacheValue"8@?0
Response
spim
cpim
X-Apple-I-MD-RINFO
X-Apple-I-MD-M
Status
com.apple.akd.anisette
v32@?0@"NSString"8@"NSString"16^B24
ownerAppleId
recoverySessionId
ownerCustodianAltDSID
custodianUUID
idmsdata
aadata
encryptedPRKC
nextStep
wrappingKeyRKC
txnid
recoveryAlternateDsId
custodianUUIDs
beneficiaryUUIDs
timestampOnCK
uuid
hashWrappingKeyRKC
status
@"NSDictionary"32@?0@"AKTrustedContact"8Q16^B24
https://gsa.apple.com/grandslam/GsService2/lookup/v2
https://gsa.apple.com/grandslam/GsService2/lookup
idata
%@/%@
com.apple.AuthKit.TiburonAuthorizationUI
passwordCredentialCount
didShowAppleID
useAnonymous
useAppleID
usePasswordCredential
modifiedName
com.apple.AuthKit.TiburonRequest
originClientType
apple
appleweb
includesAuthorizationRequest
includesPasswordRequest
clientID
appID
teamID
isFirstTimeAuth
<akredacted>
isUpgradeFromPassword
com.apple.authkit.post-install
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.ak.postinstall
com.apple.AuthKit.StartAuthorization
CredentialRequest
com.apple.AuthKit.AuthorizationDidFinish
Error
com.apple.AuthKit.DidStartServerAuthorization
duration
requestID
didCancel
passwordRequestSuccess
authorizationRequestSuccess
errorDomain
errorCode
underlyingErrorDomain
underlyingErrorCode
allDevices
includeFamily
oses
services
com.apple.proximity-controller
com.apple.proximity-controller-engine
-[AKProximityController dealloc]
Authorization Session - <%@: %p context %@, requested by %@, sessionID: %@>
AKAuthorizationClearanceQueue
AKAuthorizationTrafficQueue
v32@?0@"NSString"8@"AKAuthorizationSession"16^B24
com.apple.authkit.authorization-session
/System/Library/Frameworks/IDS.framework/IDS
/System/Library/PrivateFrameworks/IDS.framework/IDS
/AppleInternal/Library/Frameworks/IDS.framework/IDS
IDSService
IDSDefaultPairedDevice
IDSSendMessageOptionBypassDuetKey
IDSSendMessageOptionEnforceRemoteTimeoutsKey
IDSSendMessageOptionTimeoutKey
com.apple.private.alloy.anisette
akcmd
akarg
akid
aktyp
akrid
akret
aksuc
akerd
AKCommandMessage <%p> {
Internal ID: %@,
Command: %@,
Argument: %@ }
NSData <%@ bytes>
(none)
AKReplyMessage <%p> {
Internal ID: %@,
Reply-To: %@,
Success: %@,
Error: %@,
RD: %@ }
com.apple.ak.idsq
v28@?0B8@"NSData"12@"NSError"20
-[AKPeerIDSAnisetteService syncAnisetteWithSIMData:completion:]
-[AKPeerIDSAnisetteService eraseAnisetteWithCompletion:]
-[AKPeerIDSAnisetteService provisionAnisetteWithCompletion:]
-[AKPeerIDSAnisetteService legacyAnisetteDataForDSID:withCompletion:]
v32@?0@"IDSDevice"8Q16^B24
com.apple.authkit.peer-as.txn
v24@?0@"AKAnisetteData"8@"NSError"16
-[AKPeerIDSAnisetteService _mhq_handleIncomingReplyMessage:]
-[AKPeerIDSAnisetteService service:didSwitchActivePairedDevice:acknowledgementBlock:]
PrivateEmail
CREATE TABLE IF NOT EXISTS emails (client_key TEXT PRIMARY KEY, email TEXT);
CREATE TABLE IF NOT EXISTS version (privateEmailListVersion TEXT PRIMARY KEY, db_version INTEGER);
INSERT OR REPLACE INTO version (privateEmailListVersion, db_version) VALUES('%@', '%i')
ALTER TABLE version ADD COLUMN protocol_version INTEGER
UPDATE version SET protocol_version = %i,db_version = %i
SELECT client_key FROM emails;
DELETE FROM emails WHERE client_key = '%@';
PRAGMA foreign_keys=off
ALTER TABLE emails RENAME TO emails_orig
CREATE TABLE emails AS SELECT * FROM emails_orig
ALTER TABLE emails ADD COLUMN bundle_id TEXT
CREATE INDEX client_bundle_idx ON emails(client_key,bundle_id)
DROP TABLE emails_orig
PRAGMA foreign_keys=on
UPDATE version SET db_version = %i
ALTER TABLE emails RENAME TO emails_v4
CREATE TABLE emails (client_key TEXT PRIMARY KEY, email TEXT)
INSERT INTO emails (client_key,email) SELECT client_key,email FROM emails_v4
DROP TABLE emails_v4
com.apple.AuthKitUIService
context
oopUIMode
v24@?0@"BSProcessHandle"8@"NSError"16
pbv2
idmsapproved
pbv2m
defbtn
albtn
none
prevtxnid
alert
title
body
stitle
sbdy
sftr
silent
akdata
pedr
<%@:%p> command: %lu, identifier: %@
com.apple.ak.puffin.xpc
recipientEmail
com.apple.Preferences
com.apple.akd.default
com.apple.AuthKit
Localizable
ALERT_DEFAULT_CANCEL
number
slotID
label
dataPreferred
defaultVoice
physicalSim
inUse
PhoneCertificate
B32@?0@"CTXPCServiceSubscriptionContext"8Q16^B24
com.apple.accounts.carrierUtilities.queue
v40@?0@"NSDictionary"8@"NSData"16@"NSHTTPURLResponse"24@"NSError"32
Request
Header
isHSA2Eligible
AKAuthVerificationQueue
v24@?0@"AKAppleIDUserInformationResponse"8@"NSError"16
v40@?0@"NSString"8@"NSString"16@"NSDictionary"24@"NSError"32
v24@?0Q8@"NSError"16
cdks
v36@?0B8@"NSDictionary"12@"NSHTTPURLResponse"20@"NSError"28
%llu
security-code
X-Apple-I-Vetting-Token
IDMS
B24@?0@"ACAccount"8Q16
v28@?0B8@"NSDictionary"12@"NSError"20
v24@?0@"AKAuthenticationServerResponse"8@"NSError"16
v24@?0@"ACAccount"8@"NSError"16
-[AKAppleIDAuthenticationService _refreshLocalAccountAndUpdateContext:completion:]
WRONG_PASSWORD_ALERT_TITLE
WRONG_PASSWORD_ALERT_MESSAGE
MISSING_INPUT_ALERT_TITLE
MISSING_INPUT_ALERT_MESSAGE
BAD_NETWORK_ALERT_TITLE
BAD_NETWORK_ALERT_MESSAGE
CODE_INVALID_TITLE
CODE_INVALID_MESSAGE
UNDERAGE_ALERT_TITLE
UNDERAGE_ALERT_MESSAGE
APPLE_MANAGED_ACCOUNT_SIGN_IN_PROHIBITED_TITLE
APPLE_MANAGED_ACCOUNT_SIGN_IN_PROHIBITED_MESSAGE
APPLE_MANAGED_ACCOUNT_NEEDS_SETTINGS_REDIRECT_TITLE
APPLE_MANAGED_ACCOUNT_NEEDS_SETTINGS_REDIRECT_MESSAGE
APPLE_MANAGED_ACCOUNT_UNABLE_TO_SIGN_IN_TITLE
APPLE_MANAGED_ACCOUNT_APPLICATION_BLOCKED_MESSAGE_APPNAME_ORGNAME_FORMAT
APPLE_MANAGED_ACCOUNT_APPLICATION_BLOCKED_MESSAGE_ORGNAME_FORMAT
APPLE_MANAGED_ACCOUNT_APPLICATION_BLOCKED_MESSAGE_APPNAME_FORMAT
APPLE_MANAGED_ACCOUNT_APPLICATION_BLOCKED_MESSAGE
SRP_VERIFICATION_ERROR_TITLE
UNKNOWN_ERROR_ALERT_TITLE
UNKNOWN_ERROR_ALERT_MESSAGE
v24@?0@"NSString"8@"NSString"16
ENTER_VERIFICATION_CODE_PIG
v20@?0B8@"NSDictionary"12
@"NSString"32@?0@"NSString"8@"AKToken"16^B24
com.apple.gs.icloud.storage.buy
v24@?0@"NSNumber"8@"NSError"16
?%@=%@
-[AKPiggybackRequestingController _initiatePiggybackingWithCleanSession:withCompletion:]
AKPiggybackRequestingController.m
completion
%@-%lu
-[AKPiggybackRequestingController processPushPayload:completion:]
%06lu
AKPrivateEmailRemoteViewController
APPLE_ACCOUNT
STORE
GAMECENTER
FACETIME
MESSAGES
prefs:notifyAuthKit=true&authKitContextID=%@
ACCOUNTS_AND_PASSWORDS&path=%@
&root=%@
HME_ERROR_ALERT_INSUFFICIENT_SECURITY_LEVEL_TITLE
HME_ERROR_ALERT_INSUFFICIENT_SECURITY_LEVEL_MESSAGE
HME_ERROR_ALERT_BUTTON_CONTINUE
HME_ERROR_ALERT_BUTTON_CLOSE
-[AKPrivateEmailDaemonService presentPrivateEmailUIForContext:completion:]
v24@?0@"AKPrivateEmail"8@"NSError"16
https://www.apple.com
AKLastEmailListRequestDateKey
userinfodata
dataCenter
com.apple.authkit.sync-private-emails
com.apple.authkit.authorization-list-update
v24@?0@"AKApplicationMetadataInfo"8@"NSError"16
-[AKUserInfoController _setLastEmailListRequestDate:]
-[AKUserInfoController _broadcastEmailChangeNotification]
_bundleIdentifier
_bundleName
_bundleDescription
_bundleType
_otherInfo
tddelta
mids
v32@?0@8Q16^B24
-[AKProximityPiggybackEngine dealloc]
invalidListVersion
hmeMappings
hmeProtocolVersion
Hide My Email info {added=%@, removed=%@, invalid=%d, shouldSync=%d}
/System/Library/Frameworks/SafariFoundation.framework/SafariFoundation
/System/Library/PrivateFrameworks/SafariFoundation.framework/SafariFoundation
/AppleInternal/Library/Frameworks/SafariFoundation.framework/SafariFoundation
SFSafariCredentialStore
authenticatorData
clientData
signature
credentialId
userHandle
AKAuthorizationRemoteViewController
com.apple.akd.context-validator
InteractiveUsernameOnly
Interactive
SilentPreferred
%@ -> %@
v24@?0q8@"NSError"16
v24@?0@"AKDeveloperTeam"8@"NSError"16
/System/Library/Frameworks/CoreLocation.framework/CoreLocation
/System/Library/PrivateFrameworks/CoreLocation.framework/CoreLocation
/AppleInternal/Library/Frameworks/CoreLocation.framework/CoreLocation
CLGeocoder
CLLocation
AKNotificationNameTornDown
AKNotificationNamePresented
com.apple.authkit.pushPresenterQueue
v16@?0Q8
v16@?0@"NSString"8
%loc%
LOGIN_CODE_ALERT_TITLE_DEFAULT
LOGIN_CODE_ALERT_IOS_MESSAGE_DEFAULT
LOGIN_CODE_ALERT_MESSAGE_FOOTER_DEFAULT
(internal:piggy)
APPLE_ID_SIGN_IN_HEADER
APPLE_ID_UNABLE_TO_RESOLVE_LOCATION_FOR_REASON
APPLE_ID_LOCALE_AND_ADMINISTRATIVE_AREA_FORMAT
v24@?0@"NSArray"8@"NSError"16
LOGIN_CODE_ALERT_OK_BUTTON
ALERT_DEFAULT_BUTTON
CHANGE_PASSWORD_ALERT_TITLE
CHANGE_PASSWORD_ALERT_BODY
CHANGE_PASSWORD_ALERT_DEF_BTN
CHANGE_PASSWORD_ALERT_ALT_BTN
prefs:root=ACCOUNTS_AND_PASSWORDS&path=%@&aaaction=changePassword
prefs:root=APPLE_ACCOUNT&aaaction=changePassword
v32@?0@"NSDictionary"8@"NSDictionary"16@"NSError"24
v24@?0@"AKAuthorization"8@"NSError"16
AKUIWorkQueue
v32@?0@"AKClient"8@"AKAppleIDAuthenticationContext"16@"NSError"24
v32@?0@"NSHTTPURLResponse"8@"NSDictionary"16@"NSError"24
FORGOT_PASSWORD_ALERT_RESET_BUTTON
FORGOT_PASSWORD_ALERT_MESSAGE
FORGOT_PASSWORD_ALERT_CANCEL_BUTTON
FORGOT_PASSWORD_ALERT_TITLE
PASSWORD_ALERT_SETTINGS_BUTTON
PASSWORD_ALERT_CANCEL_BUTTON
PASSCODE_ALERT_TITLE_WITH_USERNAME
PASSWORD_ALERT_TITLE_WITH_USERNAME
PASSWORD_ALERT_MESSAGE_WITH_USERNAME
CONTINUE_AUTH_ALERT_TITLE
CONTINUE_AUTH_ALERT_MESSAGE
PASSWORD_ALERT_TITLE
PASSWORD_ALERT_MESSAGE
PASSCODE_ALERT_TITLE_LOCKSCREEN
PASSCODE_ALERT_MESSAGE_LOCKSCREEN
PASSWORD_ALERT_TITLE_LOCKSCREEN
PASSWORD_ALERT_MESSAGE_LOCKSCREEN
PASSWORD_ALERT_MESSAGE_PROXY_INTERNAL_BLAME
PASSWORD_ALERT_MESSAGE_INTERNAL_BLAME
com.apple.ak.checkin-allowed
v32@?0@"ACAccount"8Q16^B24
AKCheckInQueue
com.apple.authkit.heartbeat-aps-token
com.apple.authkit.ack
com.apple.authkit.heartbeat-as-needed
com.apple.authkit.heartbeat-all
B32@?0@"ACAccount"8Q16^B24
com.apple.authkit.liveness-event
com.apple.authkit.global-signout-event
com.apple.authkit.service-signout-event
com.apple.ak.hb
%02x
v32@?0@"NSNumber"8@"NSArray"16^B24
com.apple.AuthKit.TiburonSatori
wasSuccess
availableLateAfterAuthComplete
performVerificationSuccess
performVerificationDuration
verificationResults
verificationResultsDuration
com.apple.AuthKit.AuthEvent
eventType
wasSuccessful
No Auth Type
AKSQLErrorCode
com.apple.authkit.itemstorequeue
BEGIN EXCLUSIVE TRANSACTION
COMMIT TRANSACTION
ROLLBACK TRANSACTION
pragma foreign_keys=on
@"NSXPCConnection"8@?0
custodianListVersion
beneficiaryListVersion
beneficiaryADSID
beneficiaryAccountName
SELECT COUNT(*) FROM %@
PRAGMA table_info('%@')
AKSharedBag
AKBagFetchQueue
com.apple.AuthKit.Piggyback
piggybackResult
circleTimeout
acceptingDone
requestingCancelled
requestingEscapedThroughHatch
Unknown Result
Default
v24@?0@"AKAuthorizationPresentationContext"8@"NSError"16
v16@?0@"NSArray"8
-[AKAuthorizationDaemonService _setupLoginChoicesForPresentationContext:]
create
v24@?0@"AKAuthorizationUserResponse"8@?<v@?@"AKAuthorization"@"NSError">16
AuthorizationServices
-[AKAuthorizationDaemonService presentAuthorizationUIForContext:completion:]
v24@?0@"AKAuthorizationUserResponse"8@"NSError"16
team_id
state
nonce
silent_app_transfer
client_id
origin
claim
selectedEmail
scopes
subscriptionToken
<%@ - identifier: %@, title: %@, subTitle: %@, body: %@, action button: %@, other button: %@, apps:%@>
com.apple.authkit.IDSFetchQueue
v24@?0@"AKAppleIDServerResourceLoadDelegate"8@"NSError"16
v32@?0@"NSString"8@"NSDictionary"16@"NSError"24
-[AKClientAnisetteService fetchAnisetteDataAndProvisionIfNecessary:withCompletion:]
-[AKClientAnisetteService syncAnisetteWithSIMData:completion:]
-[AKClientAnisetteService eraseAnisetteWithCompletion:]
-[AKClientAnisetteService provisionAnisetteWithCompletion:]
-[AKClientAnisetteService legacyAnisetteDataForDSID:withCompletion:]
-[AKClientAnisetteService fetchPeerAttestationDataForRequest:completion:]
/System/Library/Frameworks/Rapport.framework/Rapport
/System/Library/PrivateFrameworks/Rapport.framework/Rapport
/AppleInternal/Library/Frameworks/Rapport.framework/Rapport
RPCompanionLinkClient
RPCompanionLinkDevice
RPDestinationIdentifierDirectPeer
RPAppSignInService
<undefined>
SELECT db_version FROM version;
com.apple.language.changed
New connection from client %@ with the AK write entitlment.
New connection from client %@ (internal).
New connection from client %@ (private).
New connection from client %@ (public).
New connection from client %@ (beleverde).
New connection from client %@ because of internal code signing.
Rejecting connection from client %@ because it is not entitled.
_State
com.apple.akd.request-dispatcher-scheduler
v16@?0@"NSDictionary"8
<%@: %p context %@, requested by %@>
AKATCClearanceQueue
AKAuthTrafficQueue
com.apple.ak.unknown
v32@?0@"NSString"8@"NSMutableArray"16^B24
com.apple.authkit.authorization-fetch-user-information
com.apple.ak.listupdate
com.apple.authkit.keychain
/System/Library/Frameworks/ApplePushService.framework/ApplePushService
/System/Library/PrivateFrameworks/ApplePushService.framework/ApplePushService
/AppleInternal/Library/Frameworks/ApplePushService.framework/ApplePushService
APSConnection
APSEnvironmentProduction
com.apple.ak.aps.sim
com.apple.idmsauth
com.apple.authkit.pushServiceQueue
LOGIN_CODE_ALERT_TITLE_FAILED
prefs:root=APPLE_ACCOUNT&aaaction=resetPassword
prefs:root=ACCOUNTS_AND_PASSWORDS&path=%@&aaaction=resetPassword
com.apple.akd.srp-request
com.apple.authkit.piggybacking-request
liveness
signout-all
signout-
noptkn
imei
imei2
clcg
clhs
clbg
prtn
iccid
meid
event
circleStatus
cdpStatus
phones
isRecoveryContactAssignee
isLegacyContactAssignee
custodianAssigneeStatus
beneficiaryAssigneeStatus
X-Apple-I-Client-Time
X-Mme-Device-Id
X-Apple-I-MLB
X-Apple-I-ROM
X-Apple-I-SRL-NO
X-Mme-Companion-Device-Id
X-Mme-Proxied-Device-Id
bootstrap
ckauth
mrkauth
pdec
ploc
biopet
passcodepet
retry
cbid
pbid
v32@?0@"NSDictionary"8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSDictionary"@"NSError">24
v24@?0@"NSDictionary"8@"NSDictionary"16
-[AKAuthorizationRapportClient performAuthorization:companionLinkClient:advertisingService:completion:]
v24@?0@"<NSSecureCoding>"8@"NSError"16
ttrinfo
IDMS has triggered TTR for a failure in %@ | %@ (%@) 
 Title: %@ 
 Message: %@
AuthKit
621449
tap-to-radar
ComponentName
ComponentVersion
ComponentID
Classification
Serious Bug
Reproducibility
I Didn't Try
AutoDiagnostics
phone
Title
Description
Keywords
RelayState
X-Apple-I-FA-Relay-State
v28@?0B8@"NSHTTPURLResponse"12@"NSError"20
application/x-www-form-urlencoded
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleExecutable</key>
<string>akd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.akd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>akd</string>
<key>CFBundlePackageType</key>
<string>APPL</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1.0</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>14A5270i</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.1</string>
<key>DTSDKBuild</key>
<string>20B43</string>
<key>DTSDKName</key>
<string>iphonesimulator16.1.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A5270i</string>
<key>MinimumOSVersion</key>
<string>16.1</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>abs-client</key>
<string>143531244</string>
<key>adi-client</key>
<string>572356293</string>
<key>application-identifier</key>
<string>com.apple.akd</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
<string>identity</string>
</array>
<key>com.apple.CompanionLink</key>
<true/>
<key>com.apple.accounts.idms.fullaccess</key>
<true/>
<key>com.apple.appletv.pbs.user-presentation-service-access</key>
<true/>
<key>com.apple.apsd.ios-device-push-token</key>
<true/>
<key>com.apple.authentication-services-core.allow-authentication-request-proxying</key>
<true/>
<key>com.apple.authkit.client.internal</key>
<true/>
<key>com.apple.bluetooth.internal</key>
<true/>
<key>com.apple.bluetooth.system</key>
<true/>
<key>com.apple.cdp.walrus</key>
<true/>
<key>com.apple.coreidvd.spi</key>
<true/>
<key>com.apple.developer.associated-domains</key>
<array/>
<key>com.apple.developer.device-information.user-assigned-device-name</key>
<true/>
<key>com.apple.devicecheckd</key>
<true/>
<key>com.apple.frontboard.debugapplications</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.keystore.lockassertion</key>
<true/>
<key>com.apple.keystore.sik.access</key>
<true/>
<key>com.apple.mobileactivationd.device-identifiers</key>
<true/>
<key>com.apple.mobileactivationd.spi</key>
<true/>
<key>com.apple.nano.nanoregistry</key>
<true/>
<key>com.apple.private.MobileActivation</key>
<array>
<string>RequestActivationState</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.adid</key>
<true/>
<key>com.apple.private.applemediaservices</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.associated-domains</key>
<true/>
<key>com.apple.private.followup</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.anisette</string>
</array>
<key>com.apple.private.ids.messaging.urgent-priority</key>
<array>
<string>com.apple.private.alloy.anisette</string>
</array>
<key>com.apple.private.ids.phone-number-authentication</key>
<true/>
<key>com.apple.private.ids.remotecredentials</key>
<true/>
<key>com.apple.private.imcore.imremoteurlconnection</key>
<true/>
<key>com.apple.private.keychain.circle.join</key>
<true/>
<key>com.apple.private.notificationcenter-system</key>
<array>
<dict>
<key>identifier</key>
<string>com.apple.AuthKit</string>
</dict>
</array>
<key>com.apple.private.octagon</key>
<true/>
<key>com.apple.private.security.storage.Safari</key>
<true/>
<key>com.apple.private.storagekitd.info</key>
<true/>
<key>com.apple.private.swc.system-app</key>
<true/>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.Preferences</string>
</array>
<key>com.apple.security.attestation.access</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.SharedWebCredentials</string>
<string>com.apple.fairplayd.versioned</string>
<string>com.apple.mobile.keybagd.xpc</string>
<string>com.apple.mobileactivationd</string>
<string>com.apple.devicecheckd</string>
<string>com.apple.AuthenticationServicesCore.AuthenticationServicesAgent</string>
<string>com.apple.server.bluetooth.le.att.xpc</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.nanobuddy</string>
<string>com.apple.pairedsync</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.system-container</key>
<true/>
<key>com.apple.sharing.Services</key>
<true/>
<key>com.apple.springboard.CFUserNotification</key>
<true/>
<key>com.apple.springboard.activateRemoteAlert</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.symptom_diagnostics.report</key>
<true/>
<key>com.apple.usermanagerd.persona.background</key>
<true/>
<key>com.apple.usermanagerd.persona.fetch</key>
<true/>
<key>fairplay-client</key>
<string>508119322</string>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.akd</string>
<string>com.apple.cfnetwork</string>
<string>com.apple.akd.pcsauth</string>
</array>
<key>keychain-cloud-circle</key>
<true/>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>akd</string>
</array>
</dict>
</plist>
