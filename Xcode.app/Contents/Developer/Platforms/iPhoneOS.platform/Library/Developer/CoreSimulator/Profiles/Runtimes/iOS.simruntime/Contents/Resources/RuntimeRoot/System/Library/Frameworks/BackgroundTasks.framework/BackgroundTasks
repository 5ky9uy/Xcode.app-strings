@(#)PROGRAM:BackgroundTasks  PROJECT:BackgroundTasks-1
v8@?0
<BGAppRefreshTask: %@>
d8@?0
UIApplication
B8@?0
<BGProcessingTask: %@>
BGTaskSchedulerErrorDomain
_BGTaskSchedulerRunningTasksDidChangeNotification
BGTaskSchedulerPermittedIdentifiers
UIApplicationDidFinishLaunchingNotification
NSExtension
PlugInKit
BGTaskScheduler.m
Do not directly instantiate; use the shared scheduler instead
Launch handlers cannot be registered in extensions
All launch handlers must be registered before application finishes launching
Launch handler for task with identifier %@ has already been registered
No launch handler registered for task with identifier %@
com.apple.BGTaskScheduler (%@)
com.apple.BackgroundTasks
Framework
Marking simulated task complete: %@
v12@?0B8
Starting simulated task: %{public}@
Simulating launch for task with identifier %@
No task request with identifier %{public}@ has been scheduled
Task with identifier %{public}@ is already running
No launch handler registered for task with identifier %{public}@
v16@?0@"NSArray"8
Simulating expiration for task with identifier %@
Task with identifier %{public}@ is not currently being simulated
Expiring simulated task: %{public}@
No expiration handler for task: %{public}@
<BGAppRefreshTaskRequest: %@, earliestBeginDate: %@>
<BGProcessingTaskRequest: %@, earliestBeginDate: %@, requiresExternalPower=%u, requiresNetworkConnectivity=%u>
Task %{public}@ dealloc'd without completing. This is a programmer error.
Application finished launching
registerForTaskWithIdentifier: %{public}@
submitTaskRequest: %{public}@
Handling app launch
cancelTaskRequestWithIdentifier: %{public}@
cancelAllTaskRequests
Getting pending task requests
Running task: %{public}@
Marking task %{public}@ complete with success: %d
Starting task: %{public}@
BGTask
BGAppRefreshTask
BGProcessingTask
_BGTaskSchedulerRegistration
BGTaskScheduler
BGTaskRequest
NSCopying
BGAppRefreshTaskRequest
BGProcessingTaskRequest
__registrations
T@"BGTaskScheduler",R
_unsafe_registerForTaskWithIdentifier:usingQueue:launchHandler:
T@"NSMapTable",&,N,S_setRunningTasksMap:,V__runningTasksMap
dealloc
T@"NSObject<OS_dispatch_queue>",&,N,S_setHandlerQueue:,V__handlerQueue
T@"NSSet",&,N,S_setPermittedIdentifiers:,V__permittedIdentifiers
sharedScheduler
.cxx_destruct
_applicationDidFinishLaunching:
T@"NSDate",C,V_earliestBeginDate
containsObject:
T@"NSMutableDictionary",&,N,S_setRegistrations:,V__registrations
removeObserver:
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
setRequiresNetworkConnectivity:
T@"NSString",&,N,V_identifier
T@"NSString",R,C,V_identifier
T@?,C,N,S_setCompletionHandler:,V__completionHandler
T@?,C,N,V_launchHandler
T@?,C,V_expirationHandler
TB,N,S_setCompleted:,V__completed
TB,V_requiresExternalPower
TB,V_requiresNetworkConnectivity
T{os_unfair_lock_s=I},N,S_setLock:,V__lock
__completed
__completionHandler
__handlerQueue
__lock
__permittedIdentifiers
__runningTasksMap
_activity
_appAdoptsUISceneLifecycle
_callExpirationHandler
_completed
_completionHandler
_correspondingTaskClass
_earliestBeginDate
_expirationHandler
_handleAppLaunch
_handlerQueue
_identifier
_init
_initWithIdentifier:
_initWithIdentifier:activity:
_isRunningInExtension
_isRunningTaskOfClass:
_launchHandler
_lock
_log
_permittedIdentifiers
_queue
_queueForRegistration:
_registrations
_requestFromActivity:
_requiresExternalPower
_requiresNetworkConnectivity
_runTask:registration:
_runningTasks
_runningTasksMap
_setCompleted:
_setCompletionHandler:
_setHandlerQueue:
_setLock:
_setPermittedIdentifiers:
_setRegistrations:
_setRunningTasksMap:
_setTaskCompletedWithSuccess:actionsIfNotAlreadyCompleted:
_sharedSchedulerIfExists
_simulateExpirationForTaskWithIdentifier:
_simulateLaunchForTaskWithIdentifier:
_unsafe_registrationForIdentifier:
_unsafe_setTaskCompletedWithSuccess:afterDelay:
_unsafe_submitTaskRequest:error:
_updateSnapshotForBackgroundApplication:
addObject:
addObserver:selector:name:object:
allocWithZone:
cStringUsingEncoding:
cancelAllTaskRequests
cancelTaskRequestWithIdentifier:
copy
copyWithZone:
countByEnumeratingWithState:objects:count:
currentHandler
currentThread
defaultCenter
description
earliestBeginDate
errorWithDomain:code:userInfo:
expirationHandler
getPendingTaskRequestsWithCompletionHandler:
handleFailureInMethod:object:file:lineNumber:description:
hash
identifier
infoDictionary
init
initWithIdentifier:
initWithIdentifier:queue:launchHandler:
isEqual:
isEqualToString:
isMainThread
keyEnumerator
launchHandler
load
mainBundle
objectForKey:
objectForKeyedSubscript:
postNotificationName:object:
queue
registerForTaskWithIdentifier:usingQueue:launchHandler:
removeObjectForKey:
requiresExternalPower
requiresNetworkConnectivity
setEarliestBeginDate:
setExpirationHandler:
setIdentifier:
setLaunchHandler:
setObject:forKey:
setObject:forKeyedSubscript:
setQueue:
setRequiresExternalPower:
setTaskCompletedWithSuccess:
setWithArray:
sharedApplication
stringWithFormat:
strongToWeakObjectsMapTable
submitTaskRequest:error:
@32@0:8@16@24
@?28@0:8B16d20
v20@0:8B16
v28@0:8B16@?20
v16@0:8
@16@0:8
@?16@0:8
v24@0:8@?16
B16@0:8
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
v24@0:8@16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSString"
@"NSObject<OS_dispatch_queue>"
@40@0:8@16@24@?32
B40@0:8@16@24@?32
B32@0:8@16^@24
@24@0:8@16
B24@0:8#16
v32@0:8@16@24
@"NSMutableDictionary"
@"NSSet"
@"NSMapTable"
@24@0:8^{_NSZone=}16
@"NSDate"
#16@0:8
Q16@0:8
B24@0:8@16
@(#)PROGRAM:BackgroundTasks  PROJECT:BackgroundTasks-1
v8@?0
<BGAppRefreshTask: %@>
d8@?0
UIApplication
B8@?0
<BGProcessingTask: %@>
BGTaskSchedulerErrorDomain
_BGTaskSchedulerRunningTasksDidChangeNotification
BGTaskSchedulerPermittedIdentifiers
UIApplicationDidFinishLaunchingNotification
NSExtension
PlugInKit
BGTaskScheduler.m
Do not directly instantiate; use the shared scheduler instead
Launch handlers cannot be registered in extensions
All launch handlers must be registered before application finishes launching
Launch handler for task with identifier %@ has already been registered
No launch handler registered for task with identifier %@
com.apple.BGTaskScheduler (%@)
com.apple.BackgroundTasks
Framework
Marking simulated task complete: %@
v12@?0B8
Starting simulated task: %{public}@
Simulating launch for task with identifier %@
No task request with identifier %{public}@ has been scheduled
Task with identifier %{public}@ is already running
No launch handler registered for task with identifier %{public}@
v16@?0@"NSArray"8
Simulating expiration for task with identifier %@
Task with identifier %{public}@ is not currently being simulated
Expiring simulated task: %{public}@
No expiration handler for task: %{public}@
<BGAppRefreshTaskRequest: %@, earliestBeginDate: %@>
<BGProcessingTaskRequest: %@, earliestBeginDate: %@, requiresExternalPower=%u, requiresNetworkConnectivity=%u>
Task %{public}@ dealloc'd without completing. This is a programmer error.
Application finished launching
registerForTaskWithIdentifier: %{public}@
submitTaskRequest: %{public}@
Handling app launch
cancelTaskRequestWithIdentifier: %{public}@
cancelAllTaskRequests
Getting pending task requests
Running task: %{public}@
Marking task %{public}@ complete with success: %d
Starting task: %{public}@
BGTask
BGAppRefreshTask
BGProcessingTask
_BGTaskSchedulerRegistration
BGTaskScheduler
BGTaskRequest
NSCopying
BGAppRefreshTaskRequest
BGProcessingTaskRequest
__registrations
T@"BGTaskScheduler",R
_unsafe_registerForTaskWithIdentifier:usingQueue:launchHandler:
T@"NSMapTable",&,N,S_setRunningTasksMap:,V__runningTasksMap
dealloc
T@"NSObject<OS_dispatch_queue>",&,N,S_setHandlerQueue:,V__handlerQueue
T@"NSSet",&,N,S_setPermittedIdentifiers:,V__permittedIdentifiers
sharedScheduler
.cxx_destruct
_applicationDidFinishLaunching:
T@"NSDate",C,V_earliestBeginDate
containsObject:
T@"NSMutableDictionary",&,N,S_setRegistrations:,V__registrations
removeObserver:
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
setRequiresNetworkConnectivity:
T@"NSString",&,N,V_identifier
T@"NSString",R,C,V_identifier
T@?,C,N,S_setCompletionHandler:,V__completionHandler
T@?,C,N,V_launchHandler
T@?,C,V_expirationHandler
TB,N,S_setCompleted:,V__completed
TB,V_requiresExternalPower
TB,V_requiresNetworkConnectivity
T{os_unfair_lock_s=I},N,S_setLock:,V__lock
__completed
__completionHandler
__handlerQueue
__lock
__permittedIdentifiers
__runningTasksMap
_activity
_appAdoptsUISceneLifecycle
_callExpirationHandler
_completed
_completionHandler
_correspondingTaskClass
_earliestBeginDate
_expirationHandler
_handleAppLaunch
_handlerQueue
_identifier
_init
_initWithIdentifier:
_initWithIdentifier:activity:
_isRunningInExtension
_isRunningTaskOfClass:
_launchHandler
_lock
_log
_permittedIdentifiers
_queue
_queueForRegistration:
_registrations
_requestFromActivity:
_requiresExternalPower
_requiresNetworkConnectivity
_runTask:registration:
_runningTasks
_runningTasksMap
_setCompleted:
_setCompletionHandler:
_setHandlerQueue:
_setLock:
_setPermittedIdentifiers:
_setRegistrations:
_setRunningTasksMap:
_setTaskCompletedWithSuccess:actionsIfNotAlreadyCompleted:
_sharedSchedulerIfExists
_simulateExpirationForTaskWithIdentifier:
_simulateLaunchForTaskWithIdentifier:
_unsafe_registrationForIdentifier:
_unsafe_setTaskCompletedWithSuccess:afterDelay:
_unsafe_submitTaskRequest:error:
_updateSnapshotForBackgroundApplication:
addObject:
addObserver:selector:name:object:
allocWithZone:
cStringUsingEncoding:
cancelAllTaskRequests
cancelTaskRequestWithIdentifier:
copy
copyWithZone:
countByEnumeratingWithState:objects:count:
currentHandler
currentThread
defaultCenter
description
earliestBeginDate
errorWithDomain:code:userInfo:
expirationHandler
getPendingTaskRequestsWithCompletionHandler:
handleFailureInMethod:object:file:lineNumber:description:
hash
identifier
infoDictionary
init
initWithIdentifier:
initWithIdentifier:queue:launchHandler:
isEqual:
isEqualToString:
isMainThread
keyEnumerator
launchHandler
load
mainBundle
objectForKey:
objectForKeyedSubscript:
postNotificationName:object:
queue
registerForTaskWithIdentifier:usingQueue:launchHandler:
removeObjectForKey:
requiresExternalPower
requiresNetworkConnectivity
setEarliestBeginDate:
setExpirationHandler:
setIdentifier:
setLaunchHandler:
setObject:forKey:
setObject:forKeyedSubscript:
setQueue:
setRequiresExternalPower:
setTaskCompletedWithSuccess:
setWithArray:
sharedApplication
stringWithFormat:
strongToWeakObjectsMapTable
submitTaskRequest:error:
@32@0:8@16@24
@?28@0:8B16d20
v20@0:8B16
v28@0:8B16@?20
v16@0:8
@16@0:8
@?16@0:8
v24@0:8@?16
B16@0:8
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
v24@0:8@16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSString"
@"NSObject<OS_dispatch_queue>"
@40@0:8@16@24@?32
B40@0:8@16@24@?32
B32@0:8@16^@24
@24@0:8@16
B24@0:8#16
v32@0:8@16@24
@"NSMutableDictionary"
@"NSSet"
@"NSMapTable"
@24@0:8^{_NSZone=}16
@"NSDate"
#16@0:8
Q16@0:8
B24@0:8@16
