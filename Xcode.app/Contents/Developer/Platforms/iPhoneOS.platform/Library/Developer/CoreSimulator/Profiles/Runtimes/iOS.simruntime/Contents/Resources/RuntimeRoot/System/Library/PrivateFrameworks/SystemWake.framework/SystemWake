@(#)PROGRAM:SystemWake  PROJECT:BaseBoard-617.107
v8@?0
SWSystemSleepMonitor-mainQueue
state
elapsedState
phase
elapsedPhase
observerCount
Invalid condition not satisfying: %@
_allowsInvalidation
SWSystemSleepMonitor.m
@"SWPreventSystemSleepAssertion"20@?0B8@"NSString"12
v24@?0@"<SWSystemSleepObserver>"8@?<v@?B>16
v12@?0B8
v16@?0@"<BSBlockSentinelSignalContext>"8
response from <%@: %p> must be made exactly once
v16@?0@"BSSimpleAssertion"8
!hadBeenCalled
observer != nil
B32@?0@"<SWSystemSleepObserver>"8Q16^B24
!_lock_registered
_lock_systemPowerConnection != IO_OBJECT_NULL
_lock_invalidated
!_lock_invalidated
waking
awake
abortingSleep
requestingSleep
preparingToSleep
sleepImminent
initialized
canSystemSleep
willSleep
willNotSleep
willPowerOn
hasPoweredOn
%p must invalidate before dealloc : %@
SWSystemActivityAssertion.m
identifier
pendingAcquisition
assertionID
v8@?0
BSSystemActivityDomain
%p twice tried to acquire system activity assertion; id:%@ state:%u
%p system activity assertion - provider returned NULL declare result; id:%@
%p failed to start system activity (%ld); id:%@ state:%u
v16@?0@"BSAbsoluteMachTimer"8
%p system activity assertion state mutated unexpectedly; id:%@ state:%u
%p system activity assertion marked invalid but has non-null asssertionID:%u; id:%@ state:%u
%p system activity assertion marked invalid but has hasUncalledAcquisitionHandler; id:%@ state:%u
%p system activity assertion timed out before acquisition; id:%@
sleepRequestAborted
willWakeFromSleep
afterPendingSleepWasAlreadyInitiated
afterFailingToRevertPendingSleep
afterSleepOfNonZeroDuration
returnValue
systemState
SWWakingTimer.m
timer
isInvalidated
handler != nil
leeway cannot be negative: %f
cannot schedule after invalidating
v16@?0@"BSContinuousMachTimer"8
v16@?0@"BSWallclockTimer"8
com.apple.SystemWake
Power
Timer
SWScheduledSystemWake.m
wakeDate
timeRemaining
leeway
%p scheduled wake can not be rescheduled after invalidation : %@
%@:%@
SWPreventSystemSleepAssertion workloop
SWPreventSystemSleepAssertionQueue
SWPreventSystemSleepAssertion:%p id:%@ state:%u can only be acquired once
SWPreventSystemSleepAssertion.m
SWPreventSystemSleepAssertion:%p id:%@ state:%u acquired but assertionID null before invalidation
SWPreventSystemSleepAssertion:%p id:%@ state:%u dealloced before invalidation
failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@
%p systemPowerChanged:%{public}@(%u) previous:%{public}@(%u) elapsedPhase:%.3lfs state:%{public}@->%{public}@ elapsedState:%.3lfs notificationID:%p
%p state:%{public}@->%{public}@ elapsed:%.3lfs
%p unexpected powerChangedMessage:%u notificationID:%p
%p sleepRequestedWithNotificationID:%ld
%p sleepRequested observer:%{public}@ notificationID:%ld
%p sleepRequested response allowSystemSleep:%{BOOL}u observer:%{public}@ notificationID:%ld
%p sleepRequested response assertion:%{BOOL}@ observer:%{public}@ notificationID:%ld
%p sleepRequested preventSystemSleep:%{BOOL}u notificationID:%ld
%p prepareForSleepWithNotificationID:%ld
%p prepareForSleep observer:%{public}@ notificationID:%ld
%p prepareForSleep response observer:%{public}@ notificationID:%ld
%p prepareForSleep complete notificationID:%ld
%p (%llu) final response(%{BOOL}u) to %{public}@ came too late
%p (%llu) response(%{BOOL}u) to %{public}@ after early completion
%p (%llu) response(%{BOOL}u to %{public}@ from:%{public}@ came too late
%p registerForSystemPowerOnQueue:%p withDelegate:%p -- connection:%llu port:%llu notifier:%llu
%p unregisterForSystemPower -- connection:%llu port:%llu notifier:%llu
%p invalidated sleep monitor: %p
%p SWSystemPowerCallback(%p) message:%u notificationID:%p
%p system activity assertion (%{public}@) will acquire with timeout:%lf
%p system activity assertion invalidated before declaration; id:%{public}@ state:%u assertionID:%lu timer:%{public}@
%p system activity assertion already acquired; id:%{public}@ state:%u assertionID:%lu timer:%{public}@
%p system activity assertion (%{public}@) will declare system activity
%p system activity assertion (%{public}@) will system activity result:%@
%p failed to start system activity (%ld) for id:%{public}@ state:%u
%p created system activity assertion too late, will wait for next system wake, id:%{public}@ err:%ld wasSleepImminent:%{BOOL}u
%p created system activity assertion; id:%{public}@ systemState:%u assertionID:%lu wasSleepImminent:%{BOOL}u
%p system activity assertion invalidated while waiting on system acquisition (will immediately release); id:%{public}@ assertionID:%lu timer:%{public}@
%p system activity assertion state mutated unexpectedly (will immediately release); id:%{public}@ state:%u assertionID:%lu timer:%{public}@
%p system activity assertion (%{public}@) callback with error:%{public}@
%p system activity assertion invalidated; id:%{public}@ state:%u hasUncalledAcquisitionHandler:%{BOOL}u
%p system activity assertion already invalid; id:%{public}@
%p system activity assertion timed out: %{public}@
%p system activity assertion now valid (%{public}@); id:%{public}@ assertionID:%lu timer:%{public}@
%p system activity assertion woke while still acquiring, waiting for acquisition to complete (%{public}@); id:%{public}@ assertionID:%lu timer:%{public}@
%p system activity assertion not complete, state:%u (%{public}@); id:%{public}@ assertionID:%lu timer:%{public}@
%p dealloc %{public}@
%p scheduling %{public}@
%p canceling %{public}@
%p timer invalidated while taking power assertion, will invalidate it immediately %{public}@
%p timer fired:%{public}@
%p obsolete timer fired:%{public}@
%p preventing sleep for:%{public}@
%p not preventing sleep with fire imminent for %{public}@ because leeway is too large: %fs
%p unscheduled, cancelling wake %{public}@
%p scheduling system wake: %{public}@
%p canceling system wake: %{public}@
%p power assertion take complete after invalidation, will release immediately, identifier:%@ id:%d
%p power assertion taken identifier:%{public}@ id:%d
%p will invalidate power assertion; identifier:%{public}@ id:%d
%p power assertion timed out; identifier:%{public}@ id:%d
%p invalidated power assertion before starting acquisition identifier:%{public}@
%p invalidated power assertion during acquisition identifier:%{public}@
%p already invalidated power assertion identifier:%{public}@
SWSystemSleepMonitor
SWSystemSleepMonitorProvidingDelegate
NSObject
BSInvalidatable
SWSystemSleepMonitorProvider
SWSystemSleepMonitorProviding
SWSystemSleepMonitorAggregateState
SWSystemActivityAssertion
SWSystemSleepObserver
SWSystemActivityAcquisitionDetails
SWDeclareSystemActivityResult
SWSystemActivityProvider
SWSystemActivityProviding
SWWakingTimer
BSTimerScheduleQuerying
BSCancellable
SWSystemSleepAssertionProvider
SWSystemSleepAssertionProviding
SWScheduledSystemWake
SWPreventSystemSleepAssertion
T@"NSString",R,C,N,V_identifier
T#,R
_lock_observers
T@"NSString",R,C,N
_stateTimestamp
TB,R,GhasSleepBeenRequested
context
TB,R,N
getMachContinuousKernelWakeTime
TB,R,N,GisScheduled
isSleepImminent
TB,R,N,V_afterPendingSleepWasAlreadyInitiated
removeObserver:
.cxx_destruct
_lock_messageID
T@"NSString",R,C
_phaseTimestamp
T@"SWSystemSleepMonitorAggregateState",R
appendUnsignedInteger:withName:
TB,R,GisSleepImminent
dealloc
TB,R,N,GisActive
isProxy
TB,R,N,V_afterFailingToRevertPendingSleep
release
TB,R,N,V_afterSleepOfNonZeroDuration
TI,R,N,V_assertionID
TQ,R
TQ,R,V_powerManagementPhase
TQ,R,V_powerManagementPhaseTimestamp
TQ,R,V_sleepMonitorState
TQ,R,V_sleepMonitorStateTimestamp
Td,R,N
Ti,R,N,V_returnValue
Ti,R,N,V_systemState
Tq,R,N
UTF8String
UUID
UUIDString
_afterFailingToRevertPendingSleep
_afterPendingSleepWasAlreadyInitiated
_afterSleepOfNonZeroDuration
_allowsInvalidation
_assertionID
_identifier
_invalidated
_lock
_lock_acquisitionHandler
_lock_assertionID
_lock_clientDidInvalidate
_lock_didFailToRevertPendingSleep
_lock_handler
_lock_invalidated
_lock_leeway
_lock_queue
_lock_registered
_lock_startKernelAPWakeTime
_lock_state
_lock_systemPowerConnection
_lock_systemPowerNotifier
_lock_systemPowerPort
_lock_timeout
_lock_timeoutTime
_lock_timeoutTimer
_lock_timer
_lock_wakeDate
_lock_wakeIdentifier
_lock_wasSleepImminent
_lock_weakDelegateWrapper
_monitorProvider
_phase
_powerManagementPhase
_powerManagementPhaseTimestamp
_preventSleepAssertion
_provider
_queue
_queue_declareSystemActivity
_returnValue
_scheduledWake
_sleepAssertionProvider
_sleepMonitor
_sleepMonitorState
_sleepMonitorStateTimestamp
_state
_systemState
acquirePreventSystemSleepAssertionWithIdentifier:
acquireSystemActivityAssertionWithIdentifier:
acquireWithTimeout:handler:
active
addObject:
addObserver:
afterFailingToRevertPendingSleep
afterPendingSleepWasAlreadyInitiated
afterSleepOfNonZeroDuration
aggregateState
allObjects
allowPowerChange:
appendBool:withName:
appendBool:withName:ifEqualTo:
appendInt:withName:
appendObject:withName:
appendString:withName:
appendTimeInterval:withName:decomposeUnits:
appendUnsignedInt:withName:
assertionID
autorelease
boolValue
build
builderWithObject:
cancel
cancelPowerChange:
cancelWake
class
conformsToProtocol:
copy
count
countByEnumeratingWithState:objects:count:
createTimerWithIdentifier:
dateWithTimeIntervalSinceReferenceDate:
debugDescription
declareSystemActivityWithName:
description
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
formatDateAsLongYMDHMSZPosixLocaleWithDate:
hasSleepBeenRequested
hash
hashTableWithOptions:
identifier
indexesOfObjectsPassingTest:
init
initWithAfterPendingSleepWasAlreadyInitiated:afterFailingToRevertPendingSleep:afterSleepOfNonZeroDuration:
initWithIdentifier:
initWithIdentifier:forReason:invalidationBlock:
initWithIdentifier:queue:
initWithIdentifier:queue:allowsInvalidation:monitorProvider:sleepAssertionProvider:
initWithIdentifier:sleepMonitor:sleepAssertionProvider:
initWithIdentifier:sleepMonitor:systemActivityProvider:
initWithReturnValue:assertionID:systemState:
initWithSleepMonitorState:stateTimestamp:powerManagementPhase:phaseTimestamp:
invalidate
invalidateWithReason:
isActive
isComplete
isEqual:
isKindOfClass:
isMemberOfClass:
isScheduled
leeway
monitorUsingMainQueue
object
objectsAtIndexes:
observersOfSelector:performObserverBlock:completion:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
powerManagementPhase
powerManagementPhaseTimestamp
referenceWithObject:
registerForSystemPowerOnQueue:withDelegate:
releaseAssertionID:
removeObject:
respondsToSelector:
retain
retainCount
returnValue
scheduleForDate:leewayInterval:queue:handler:
scheduleWake:leeway:
scheduleWithFireInterval:leewayInterval:queue:handler:
scheduled
self
sentinelWithQueue:signalCount:signalHandler:
sharedHighPriorityQueue
sharedInstance
sharedProvider
signal
signalWithContext:
sleepImminent
sleepMonitorState
sleepMonitorStateTimestamp
sleepRequested
stringWithFormat:
superclass
systemPowerChanged:notificationID:
systemSleepMonitor:prepareForSleepWithCompletion:
systemSleepMonitor:sleepRequestedWithResult:
systemSleepMonitorDidWakeFromSleep:
systemSleepMonitorSleepRequestAborted:
systemSleepMonitorWillWakeFromSleep:
systemState
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timeRemaining
wakeTime
zone
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v28@0:8I16^v20
v16@0:8
@32@0:8@16@24
@52@0:8@16@24B32@36@44
v24@0:8@16
@"NSObject<OS_dispatch_queue>"
@"NSString"
@"<SWSystemSleepMonitorProviding>"
@"<SWSystemSleepAssertionProviding>"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSHashTable"
v32@0:8@16@24
v24@0:8q16
v32@0:8@"NSObject<OS_dispatch_queue>"16@"<SWSystemSleepMonitorProvidingDelegate>"24
@"BSZeroingWeakReference"
^{IONotificationPort=}
@48@0:8Q16Q24Q32Q40
v32@0:8@16@?24
v32@0:8@"SWSystemSleepMonitor"16@?<@"SWPreventSystemSleepAssertion"@?B@"NSString">24
v32@0:8@"SWSystemSleepMonitor"16@?<v@?>24
v24@0:8@"SWSystemSleepMonitor"16
@24@0:8@16
@40@0:8@16@24@32
v32@0:8d16@?24
@"BSAbsoluteMachTimer"
@"SWSystemSleepMonitor"
@"<SWSystemActivityProviding>"
@28@0:8B16B20B24
@28@0:8i16I20i24
i16@0:8
I16@0:8
v20@0:8I16
@"SWDeclareSystemActivityResult"24@0:8@"NSString"16
@"BSAbsoluteMachTimer"24@0:8@"NSString"16
d16@0:8
v48@0:8d16d24@32@?40
v48@0:8@16d24@32@?40
@"SWScheduledSystemWake"
@"<BSInvalidatable>"
@"<BSTimerScheduleQuerying><BSCancellable><BSInvalidatable>"
@"SWPreventSystemSleepAssertion"24@0:8@"NSString"16
@"SWSystemActivityAssertion"24@0:8@"NSString"16
q16@0:8
v32@0:8d16q24
@"NSDate"
@(#)PROGRAM:SystemWake  PROJECT:BaseBoard-617.107
(P~~~~~~
v8@?0
SWSystemSleepMonitor-mainQueue
state
elapsedState
phase
elapsedPhase
observerCount
Invalid condition not satisfying: %@
_allowsInvalidation
SWSystemSleepMonitor.m
@"SWPreventSystemSleepAssertion"20@?0B8@"NSString"12
v24@?0@"<SWSystemSleepObserver>"8@?<v@?B>16
v12@?0B8
v16@?0@"<BSBlockSentinelSignalContext>"8
response from <%@: %p> must be made exactly once
v16@?0@"BSSimpleAssertion"8
!hadBeenCalled
observer != nil
B32@?0@"<SWSystemSleepObserver>"8Q16^B24
!_lock_registered
_lock_systemPowerConnection != IO_OBJECT_NULL
_lock_invalidated
!_lock_invalidated
waking
awake
abortingSleep
requestingSleep
preparingToSleep
sleepImminent
initialized
canSystemSleep
willSleep
willNotSleep
willPowerOn
hasPoweredOn
%p must invalidate before dealloc : %@
SWSystemActivityAssertion.m
identifier
pendingAcquisition
assertionID
v8@?0
BSSystemActivityDomain
%p twice tried to acquire system activity assertion; id:%@ state:%u
%p system activity assertion - provider returned NULL declare result; id:%@
%p failed to start system activity (%ld); id:%@ state:%u
v16@?0@"BSAbsoluteMachTimer"8
%p system activity assertion state mutated unexpectedly; id:%@ state:%u
%p system activity assertion marked invalid but has non-null asssertionID:%u; id:%@ state:%u
%p system activity assertion marked invalid but has hasUncalledAcquisitionHandler; id:%@ state:%u
%p system activity assertion timed out before acquisition; id:%@
sleepRequestAborted
willWakeFromSleep
afterPendingSleepWasAlreadyInitiated
afterFailingToRevertPendingSleep
afterSleepOfNonZeroDuration
returnValue
systemState
SWWakingTimer.m
timer
isInvalidated
handler != nil
leeway cannot be negative: %f
cannot schedule after invalidating
v16@?0@"BSContinuousMachTimer"8
v16@?0@"BSWallclockTimer"8
com.apple.SystemWake
Power
Timer
SWScheduledSystemWake.m
wakeDate
timeRemaining
leeway
%p scheduled wake can not be rescheduled after invalidation : %@
%@:%@
SWPreventSystemSleepAssertion workloop
SWPreventSystemSleepAssertionQueue
SWPreventSystemSleepAssertion:%p id:%@ state:%u can only be acquired once
SWPreventSystemSleepAssertion.m
SWPreventSystemSleepAssertion:%p id:%@ state:%u acquired but assertionID null before invalidation
SWPreventSystemSleepAssertion:%p id:%@ state:%u dealloced before invalidation
failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@
%p systemPowerChanged:%{public}@(%u) previous:%{public}@(%u) elapsedPhase:%.3lfs state:%{public}@->%{public}@ elapsedState:%.3lfs notificationID:%p
%p state:%{public}@->%{public}@ elapsed:%.3lfs
%p unexpected powerChangedMessage:%u notificationID:%p
%p sleepRequestedWithNotificationID:%ld
%p sleepRequested observer:%{public}@ notificationID:%ld
%p sleepRequested response allowSystemSleep:%{BOOL}u observer:%{public}@ notificationID:%ld
%p sleepRequested response assertion:%{BOOL}@ observer:%{public}@ notificationID:%ld
%p sleepRequested preventSystemSleep:%{BOOL}u notificationID:%ld
%p prepareForSleepWithNotificationID:%ld
%p prepareForSleep observer:%{public}@ notificationID:%ld
%p prepareForSleep response observer:%{public}@ notificationID:%ld
%p prepareForSleep complete notificationID:%ld
%p (%llu) final response(%{BOOL}u) to %{public}@ came too late
%p (%llu) response(%{BOOL}u) to %{public}@ after early completion
%p (%llu) response(%{BOOL}u to %{public}@ from:%{public}@ came too late
%p registerForSystemPowerOnQueue:%p withDelegate:%p -- connection:%llu port:%llu notifier:%llu
%p unregisterForSystemPower -- connection:%llu port:%llu notifier:%llu
%p invalidated sleep monitor: %p
%p SWSystemPowerCallback(%p) message:%u notificationID:%p
%p system activity assertion (%{public}@) will acquire with timeout:%lf
%p system activity assertion invalidated before declaration; id:%{public}@ state:%u assertionID:%lu timer:%{public}@
%p system activity assertion already acquired; id:%{public}@ state:%u assertionID:%lu timer:%{public}@
%p system activity assertion (%{public}@) will declare system activity
%p system activity assertion (%{public}@) will system activity result:%@
%p failed to start system activity (%ld) for id:%{public}@ state:%u
%p created system activity assertion too late, will wait for next system wake, id:%{public}@ err:%ld wasSleepImminent:%{BOOL}u
%p created system activity assertion; id:%{public}@ systemState:%u assertionID:%lu wasSleepImminent:%{BOOL}u
%p system activity assertion invalidated while waiting on system acquisition (will immediately release); id:%{public}@ assertionID:%lu timer:%{public}@
%p system activity assertion state mutated unexpectedly (will immediately release); id:%{public}@ state:%u assertionID:%lu timer:%{public}@
%p system activity assertion (%{public}@) callback with error:%{public}@
%p system activity assertion invalidated; id:%{public}@ state:%u hasUncalledAcquisitionHandler:%{BOOL}u
%p system activity assertion already invalid; id:%{public}@
%p system activity assertion timed out: %{public}@
%p system activity assertion now valid (%{public}@); id:%{public}@ assertionID:%lu timer:%{public}@
%p system activity assertion woke while still acquiring, waiting for acquisition to complete (%{public}@); id:%{public}@ assertionID:%lu timer:%{public}@
%p system activity assertion not complete, state:%u (%{public}@); id:%{public}@ assertionID:%lu timer:%{public}@
%p dealloc %{public}@
%p scheduling %{public}@
%p canceling %{public}@
%p timer invalidated while taking power assertion, will invalidate it immediately %{public}@
%p timer fired:%{public}@
%p obsolete timer fired:%{public}@
%p preventing sleep for:%{public}@
%p not preventing sleep with fire imminent for %{public}@ because leeway is too large: %fs
%p unscheduled, cancelling wake %{public}@
%p scheduling system wake: %{public}@
%p canceling system wake: %{public}@
%p power assertion take complete after invalidation, will release immediately, identifier:%@ id:%d
%p power assertion taken identifier:%{public}@ id:%d
%p will invalidate power assertion; identifier:%{public}@ id:%d
%p power assertion timed out; identifier:%{public}@ id:%d
%p invalidated power assertion before starting acquisition identifier:%{public}@
%p invalidated power assertion during acquisition identifier:%{public}@
%p already invalidated power assertion identifier:%{public}@
SWSystemSleepMonitor
SWSystemSleepMonitorProvidingDelegate
NSObject
BSInvalidatable
SWSystemSleepMonitorProvider
SWSystemSleepMonitorProviding
SWSystemSleepMonitorAggregateState
SWSystemActivityAssertion
SWSystemSleepObserver
SWSystemActivityAcquisitionDetails
SWDeclareSystemActivityResult
SWSystemActivityProvider
SWSystemActivityProviding
SWWakingTimer
BSTimerScheduleQuerying
BSCancellable
SWSystemSleepAssertionProvider
SWSystemSleepAssertionProviding
SWScheduledSystemWake
SWPreventSystemSleepAssertion
T@"NSString",R,C,N,V_identifier
T#,R
_lock_observers
T@"NSString",R,C,N
_stateTimestamp
TB,R,GhasSleepBeenRequested
context
TB,R,N
getMachContinuousKernelWakeTime
TB,R,N,GisScheduled
isSleepImminent
TB,R,N,V_afterPendingSleepWasAlreadyInitiated
removeObserver:
.cxx_destruct
_lock_messageID
T@"NSString",R,C
_phaseTimestamp
T@"SWSystemSleepMonitorAggregateState",R
appendUnsignedInteger:withName:
TB,R,GisSleepImminent
dealloc
TB,R,N,GisActive
isProxy
TB,R,N,V_afterFailingToRevertPendingSleep
release
TB,R,N,V_afterSleepOfNonZeroDuration
TI,R,N,V_assertionID
TQ,R
TQ,R,V_powerManagementPhase
TQ,R,V_powerManagementPhaseTimestamp
TQ,R,V_sleepMonitorState
TQ,R,V_sleepMonitorStateTimestamp
Td,R,N
Ti,R,N,V_returnValue
Ti,R,N,V_systemState
Tq,R,N
UTF8String
UUID
UUIDString
_afterFailingToRevertPendingSleep
_afterPendingSleepWasAlreadyInitiated
_afterSleepOfNonZeroDuration
_allowsInvalidation
_assertionID
_identifier
_invalidated
_lock
_lock_acquisitionHandler
_lock_assertionID
_lock_clientDidInvalidate
_lock_didFailToRevertPendingSleep
_lock_handler
_lock_invalidated
_lock_leeway
_lock_queue
_lock_registered
_lock_startKernelAPWakeTime
_lock_state
_lock_systemPowerConnection
_lock_systemPowerNotifier
_lock_systemPowerPort
_lock_timeout
_lock_timeoutTime
_lock_timeoutTimer
_lock_timer
_lock_wakeDate
_lock_wakeIdentifier
_lock_wasSleepImminent
_lock_weakDelegateWrapper
_monitorProvider
_phase
_powerManagementPhase
_powerManagementPhaseTimestamp
_preventSleepAssertion
_provider
_queue
_queue_declareSystemActivity
_returnValue
_scheduledWake
_sleepAssertionProvider
_sleepMonitor
_sleepMonitorState
_sleepMonitorStateTimestamp
_state
_systemState
acquirePreventSystemSleepAssertionWithIdentifier:
acquireSystemActivityAssertionWithIdentifier:
acquireWithTimeout:handler:
active
addObject:
addObserver:
afterFailingToRevertPendingSleep
afterPendingSleepWasAlreadyInitiated
afterSleepOfNonZeroDuration
aggregateState
allObjects
allowPowerChange:
appendBool:withName:
appendBool:withName:ifEqualTo:
appendInt:withName:
appendObject:withName:
appendString:withName:
appendTimeInterval:withName:decomposeUnits:
appendUnsignedInt:withName:
assertionID
autorelease
boolValue
build
builderWithObject:
cancel
cancelPowerChange:
cancelWake
class
conformsToProtocol:
copy
count
countByEnumeratingWithState:objects:count:
createTimerWithIdentifier:
dateWithTimeIntervalSinceReferenceDate:
debugDescription
declareSystemActivityWithName:
description
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
formatDateAsLongYMDHMSZPosixLocaleWithDate:
hasSleepBeenRequested
hash
hashTableWithOptions:
identifier
indexesOfObjectsPassingTest:
init
initWithAfterPendingSleepWasAlreadyInitiated:afterFailingToRevertPendingSleep:afterSleepOfNonZeroDuration:
initWithIdentifier:
initWithIdentifier:forReason:invalidationBlock:
initWithIdentifier:queue:
initWithIdentifier:queue:allowsInvalidation:monitorProvider:sleepAssertionProvider:
initWithIdentifier:sleepMonitor:sleepAssertionProvider:
initWithIdentifier:sleepMonitor:systemActivityProvider:
initWithReturnValue:assertionID:systemState:
initWithSleepMonitorState:stateTimestamp:powerManagementPhase:phaseTimestamp:
invalidate
invalidateWithReason:
isActive
isComplete
isEqual:
isKindOfClass:
isMemberOfClass:
isScheduled
leeway
monitorUsingMainQueue
object
objectsAtIndexes:
observersOfSelector:performObserverBlock:completion:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
powerManagementPhase
powerManagementPhaseTimestamp
referenceWithObject:
registerForSystemPowerOnQueue:withDelegate:
releaseAssertionID:
removeObject:
respondsToSelector:
retain
retainCount
returnValue
scheduleForDate:leewayInterval:queue:handler:
scheduleWake:leeway:
scheduleWithFireInterval:leewayInterval:queue:handler:
scheduled
self
sentinelWithQueue:signalCount:signalHandler:
sharedHighPriorityQueue
sharedInstance
sharedProvider
signal
signalWithContext:
sleepImminent
sleepMonitorState
sleepMonitorStateTimestamp
sleepRequested
stringWithFormat:
superclass
systemPowerChanged:notificationID:
systemSleepMonitor:prepareForSleepWithCompletion:
systemSleepMonitor:sleepRequestedWithResult:
systemSleepMonitorDidWakeFromSleep:
systemSleepMonitorSleepRequestAborted:
systemSleepMonitorWillWakeFromSleep:
systemState
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timeRemaining
wakeTime
zone
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v28@0:8I16^v20
v16@0:8
@32@0:8@16@24
@52@0:8@16@24B32@36@44
v24@0:8@16
@"NSObject<OS_dispatch_queue>"
@"NSString"
@"<SWSystemSleepMonitorProviding>"
@"<SWSystemSleepAssertionProviding>"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSHashTable"
v32@0:8@16@24
v24@0:8q16
v32@0:8@"NSObject<OS_dispatch_queue>"16@"<SWSystemSleepMonitorProvidingDelegate>"24
@"BSZeroingWeakReference"
^{IONotificationPort=}
@48@0:8Q16Q24Q32Q40
v32@0:8@16@?24
v32@0:8@"SWSystemSleepMonitor"16@?<@"SWPreventSystemSleepAssertion"@?B@"NSString">24
v32@0:8@"SWSystemSleepMonitor"16@?<v@?>24
v24@0:8@"SWSystemSleepMonitor"16
@24@0:8@16
@40@0:8@16@24@32
v32@0:8d16@?24
@"BSAbsoluteMachTimer"
@"SWSystemSleepMonitor"
@"<SWSystemActivityProviding>"
@28@0:8B16B20B24
@28@0:8i16I20i24
i16@0:8
I16@0:8
v20@0:8I16
@"SWDeclareSystemActivityResult"24@0:8@"NSString"16
@"BSAbsoluteMachTimer"24@0:8@"NSString"16
d16@0:8
v48@0:8d16d24@32@?40
v48@0:8@16d24@32@?40
@"SWScheduledSystemWake"
@"<BSInvalidatable>"
@"<BSTimerScheduleQuerying><BSCancellable><BSInvalidatable>"
@"SWPreventSystemSleepAssertion"24@0:8@"NSString"16
@"SWSystemActivityAssertion"24@0:8@"NSString"16
q16@0:8
v32@0:8d16q24
@"NSDate"
