14TType1PDC0Font
18TType1OTFHFMXTable
18TType1OTFVFMXTable
14TType1PDTCFont
dup begin [
]NormalizeDesignVector ConvertDesignVector] end makeblendedfont /$$GXMMFont$$ exch definefont
17TStreamingContext
23TType1CharStringContext
40TBufferedType1CharStringStreamingContext
32TType1MMSnapShotStreamingContext
12TType1Strike
15TType1Exception
11TMemoryHeap
ffff
16TType1OTFCIDFont
42TT2T1CIDConvertingBufferedStreamingContext
43TType2CIDToType1CharStringConvertionContext
17TOTFCIDCFFFontSet
18TType1FontInstance
 RD 
%%BeginData:
+currentfile /ASCII85Decode filter cvx exec
%%EndData
0 dup /CIDFont resourcestatus{3 1 roll pop}if pop
 /CIDFont findresource 
+ end dup /FontName get exch definefont pop
: /CIDFont resourcestatus {pop pop save true}{false}ifelse
{restore}if
19 dict dup begin
/FontType 3 def
/FontMatrix matrix def
/FontBBox {0 0 0 0} readonly def
/PaintType 0 def
/StrokeWidth 0 def
/BuildGlyph{save 3 1 roll
1 index dup
begin
/ShowProc get 3 1 roll
1 index /CharProcs get exch get exec
7 -1 roll exec
restore
} bind def
/BuildChar{1 index /Encoding get exch get
1 index /BuildGlyph get exec} bind def
/$SP{3 -1 roll dup /SetupSubFont get exec
dup setfont
exch 0 0 2 index stringwidth
} bind def
/$SPW{4 -1 roll dup /SetupSubFont get exec
dup setfont
3 1 roll 0 0 0 4 2 roll} bind def
/$SPTW{5 -1 roll dup /SetupSubFont get exec
dup setfont
4 1 roll neg  0 3 -1 roll 0} bind def
/$RP{6 -1 roll dup /SetupSubFont get exec
dup setfont 5 1 roll
translate -90 rotate 0 0 0 4 2 roll} bind def
/SetupSubFont{dup /PaintType get 1 index /StrokeWidth get
3 -1 roll /$SubFontArray get 4 1 roll
3 index 3 index get
dup /PaintType known{dup /PaintType get}{0}ifelse
1 index /StrokeWidth known{1 index /StrokeWidth get}{0}ifelse
3 index ne exch 4 index ne or
{dup length 2 add dict begin
{1 index /FID eq {pop pop}{def}ifelse}forall
/StrokeWidth exch def
/PaintType exch def
currentdict end
dup /CIDFontName known
{/Anonymous exch /CIDFont defineresource}{/Anonymous exch definefont}ifelse
dup 4 1 roll put
}{ pop pop pop get}ifelse
} bind def
/ShowProc{systemdict /rectfill known
{0 setcachelimit}if
6 -1 roll dup /FontMatrix get exch /FontBBox get aload pop
4 index transform 4 2 roll
5 -1 roll transform 4 2 roll
setcachedevice
moveto dup type /stringtype eq {show}{glyphshow} ifelse
} bind def
]14 dict dup begin
/FontType 3 def
/PaintType 0 def
/StrokeWidth 0 def
/FontMatrix matrix def
/GetShort {2 copy get 256 mul
3 1 roll
1 add
get add
} bind def
/SignedShort {dup 32767 gt {65536 sub
} if
} bind def
/LocalVariables 3 dict dup begin/theString null def
/strInd 0 def
/doingY false def
end def
/DrawGlyph {exec
LocalVariables begin
/theString exch def
/strInd 0 def
theString strInd GetShort
/strInd strInd 2 add def
{theString strInd GetShort
/strInd strInd 2 add def
dup 0 gt {
1 sub
theString strInd GetShort SignedShort
theString strInd 2 add GetShort SignedShort moveto
/strInd strInd 4 add def
{theString strInd GetShort SignedShort
theString strInd 2 add GetShort SignedShort rlineto
/strInd strInd 4 add def
} repeat
closepath
} if
} repeat
PaintType 2 eq { StrokeWidth
setlinewidth stroke
} {eofill
} ifelse
} bind def
/BuildChar{exch begin Encoding exch get CharStrings dup 2 index known{exch}{exch pop /.notdef}ifelse get
dup 0 get
3 -1 roll
dup 1 get exch dup 2 get exch dup 3 get exch dup 4 get exch
7 1 roll
setcachedevice
yopmatrix matrix invertmatrix concat
9 get DrawGlyph
end}bind def
W findfont dup length dict begin {1 index /FID eq{ pop pop}{def}ifelse}forall /Encoding
currentdict end definefont pop
%ADOBeginFontDict
%ADOEndFontDict
36TCIDASCII85EncodableStreamingContext
12TCFFFDSelect
13TCFFFDSelect0
14TCIDCFFFontSet
43TType1ToType2CIDCharStringConversionContext
19TType1CIDCFFFontSet
50TResolutionRestrictedPolygonalPathStreamingContext
24TLWFNFontObjectSurrogate
14TType1LWFNFont
31TType1LWFNSingleMasterHFMXTable
33TType1LWFNMultipleMasterHFMXTable
19TType1LWFNVFMXTable
22TLWFNCharStringContext
39TBufferedLWFNCharStringStreamingContext
31TLWFNMMSnapShotStreamingContext
22TLWFNResourceReference
14TType1Streamer
/.notdef
0123456789ABCDEF
 dict dup begin
 def
currentfile eexec
systemdict begin
mark currentfile closefile
A0000000000000000000000000000000000000000000000000000000000000000
cleartomark
systemdict /setpacking known { currentpacking false setpacking } if
systemdict /setpacking known { setpacking } if
 findfont
3 -1 roll dup length dict exch {exch dup dup /FID ne exch /Encoding ne and {2 index 3 1 roll exch put} {pop pop} ifelse} forall
dup 3 -1 roll /Encoding exch put 2 copy exch /FontName exch put definefont pop
20TFontObjectSurrogate
12TType1PSFont
NFWL1TDP1TDPCTDPCTDP0CDP0CDP1TDP13TType1CIDFont
28TCharStringConversionContext
40TType1ToType2CharStringConversionContext
19THintCntrConversion
19MType1HeapAllocable
15TFlexConversion
14TType1SFNTFont
17TRenderingContext
22MType1HeapNonAllocable
31TFractionalMetricsRenderContext
21MPathRenderingContext
28TPathMetricsRenderingContext
18MPathTransformable
39TTransformedPathMetricsRenderingContext
21TPathRenderingContext
26TCubicPathRenderingContext
37TTransformedCubicPathRenderingContext
30TQuadraticPathRenderingContext
41TTransformedQuadraticPathRenderingContext
22TGlyphRenderingContext
32TTransformedPathRenderingContext
31TTransformedRunRenderingContext
25T3x3GlyphRenderingContext
17MScratchAlloation
24TType1HFMXTableSurrogate
24TType1VFMXTableSurrogate
15TType1HFMXTable
15TType1VFMXTable
 !!"!""#!""#"##$
 !!"!""#!""#"##$ !!"!""#!""#"##$0112122312232334
 !!"!""#!""#"##$ !!"!""#!""#"##$0112122312232334 !!"!""#!""#"##$01121223122323340112122312232334@AABABBCABBCBCCD9TCFFArray
15TCFFStringArray
8TCFFDict
13TCFFDictArray
12TCFFEncoding
13TCFFEncoding0
11TCFFCharSet
12TCFFCharSet0
11TCFFFontSet
16TType1CFFFontSet
Mb0A
15TType1Transform
18TType1Transform2x2
18TType1Transform3x3
14TType1PDT1Font
22TPDT1CharStringContext
39TBufferedPDT1CharStringStreamingContext
13TType1PFAFont
14TCFFDescriptor
13TType1OTFFont
19TCFFEncodingContext
22TCFFGetEncodingContext
25TCFFStreamEncodingContext
26MCharStringConvertionState
40TType2ToType1CharStringConvertionContext
39TT2T1ConvertingBufferedStreamingContext
21TOTFCharStringContext
14TOTFCFFFontSet
19TType1SFNTHFMXTable
19TType1SFNTVFMXTable
ACEINOSUYZaceinosuyz
001.003
] def
/StdHW [
/StdVW [
/BlueScale 
/BlueFuzz 
/BlueShift 
/ForceBold true def
/ForceBold false def
/StemSnapH [
/StemSnapV [
% from the T1 spec on PS SDK v3, modified by DMG to contain otherSubrs 12 and 13
% Copyright (c) 1987-1990 Adobe Systems Incorporated.
% All Rights Reserved.
% This code to be used for Flex and hint replacement.
% Version 1.1
/OtherSubrs
[systemdict /internaldict known
{1183615869 systemdict /internaldict get exec
/FlxProc known {save true} {false} ifelse}
{userdict /internaldict known not {
userdict /internaldict
{count 0 eq
{/internaldict errordict /invalidaccess get exec} if
dup type /integertype ne
{/internaldict errordict /invalidaccess get exec} if
dup 1183615869 eq
{pop 0}
{/internaldict errordict /invalidaccess get exec}
ifelse
dup 14 get 1 25 dict put
bind executeonly put
} if
1183615869 userdict /internaldict get exec
/FlxProc known {save true} {false} ifelse}
ifelse
systemdict /internaldict known not
{ 100 dict /begin cvx /mtx matrix /def cvx } if
systemdict /currentpacking known {currentpacking true setpacking} if
systemdict /internaldict known {
1183615869 systemdict /internaldict get exec
dup /$FlxDict known not {
dup dup length exch maxlength eq
{ pop userdict dup /$FlxDict known not
{ 100 dict begin /mtx matrix def
dup /$FlxDict currentdict put end } if }
{ 100 dict begin /mtx matrix def
dup /$FlxDict currentdict put end }
ifelse
} if
/$FlxDict get begin
} if
grestore
/exdef {exch def} def
/dmin exch abs 100 div def
/epX exdef /epY exdef
/c4y2 exdef /c4x2 exdef /c4y1 exdef /c4x1 exdef /c4y0 exdef /c4x0 exdef
/c3y2 exdef /c3x2 exdef /c3y1 exdef /c3x1 exdef /c3y0 exdef /c3x0 exdef
/c1y2 exdef /c1x2 exdef /c2x2 c4x2 def /c2y2 c4y2 def
/yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def
/PickCoords {
{c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2 }
{c3x0 c3y0 c3x1 c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2 }
ifelse
/y5 exdef /x5 exdef /y4 exdef /x4 exdef /y3 exdef /x3 exdef
/y2 exdef /x2 exdef /y1 exdef /x1 exdef /y0 exdef /x0 exdef
} def
mtx currentmatrix pop
mtx 0 get abs .00001 lt mtx 3 get abs .00001 lt or
{/flipXY -1 def }
{mtx 1 get abs .00001 lt mtx 2 get abs .00001 lt or
{/flipXY 1 def }
{/flipXY 0 def }
ifelse }
ifelse
/erosion 1 def
systemdict /internaldict known {
1183615869 systemdict /internaldict get exec dup
/erosion known
{/erosion get /erosion exch def}
{pop}
ifelse
} if
yflag
{flipXY 0 eq c3y2 c4y2 eq or
{false PickCoords }
{/shrink c3y2 c4y2 eq
{0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs} ifelse def
/yshrink {c4y2 sub shrink mul c4y2 add} def
/c1y0 c3y0 yshrink def /c1y1 c3y1 yshrink def
/c2y0 c4y0 yshrink def /c2y1 c4y1 yshrink def
/c1x0 c3x0 def /c1x1 c3x1 def /c2x0 c4x0 def /c2x1 c4x1 def
/dY 0 c3y2 c1y2 sub round
dtransform flipXY 1 eq {exch} if pop abs def
dY dmin lt PickCoords
y2 c1y2 sub abs 0.001 gt {
c1x2 c1y2 transform flipXY 1 eq {exch} if
/cx exch def /cy exch def
/dY 0 y2 c1y2 sub round dtransform flipXY 1 eq {exch}
if pop def
dY round dup 0 ne
{/dY exdef }
{pop dY 0 lt {-1}{1} ifelse /dY exdef }
ifelse
/erode PaintType 2 ne erosion 0.5 ge and def
erode {/cy cy 0.5 sub def} if
/ey cy dY add def
/ey ey ceiling ey sub ey floor add def
erode {/ey ey 0.5 add def} if
ey cx flipXY 1 eq {exch} if itransform exch pop
y2 sub /eShift exch def
/y1 y1 eShift add def /y2 y2 eShift add def /y3 y3
eShift add def
} if
} ifelse
{flipXY 0 eq c3x2 c4x2 eq or
{false PickCoords }
{/shrink c3x2 c4x2 eq
{0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs} ifelse def
/xshrink {c4x2 sub shrink mul c4x2 add} def
/c1x0 c3x0 xshrink def /c1x1 c3x1 xshrink def
/c2x0 c4x0 xshrink def /c2x1 c4x1 xshrink def
/c1y0 c3y0 def /c1y1 c3y1 def /c2y0 c4y0 def /c2y1 c4y1 def
/dX c3x2 c1x2 sub round 0 dtransform
flipXY -1 eq {exch} if pop abs def
dX dmin lt PickCoords
x2 c1x2 sub abs 0.001 gt {
c1x2 c1y2 transform flipXY -1 eq {exch} if
/cy exch def /cx exch def
/dX x2 c1x2 sub round 0 dtransform flipXY -1 eq {exch} if pop def
dX round dup 0 ne
{/dX exdef }
{pop dX 0 lt {-1}{1} ifelse /dX exdef }
ifelse
/erode PaintType 2 ne erosion .5 ge and def
erode {/cx cx .5 sub def} if
/ex cx dX add def
/ex ex ceiling ex sub ex floor add def
erode {/ex ex .5 add def} if
ex cy flipXY -1 eq {exch} if itransform pop
x2 sub /eShift exch def
/x1 x1 eShift add def /x2 x2 eShift add def /x3 x3 eShift add def
} if
} ifelse
} ifelse
x2 x5 eq y2 y5 eq or
{ x5 y5 lineto }
{ x0 y0 x1 y1 x2 y2 curveto
x3 y3 x4 y4 x5 y5 curveto }
ifelse
epY epX
systemdict /currentpacking known {exch setpacking} if
/exec cvx /end cvx ] cvx
executeonly
exch
{pop true exch restore}
systemdict /internaldict known not
{1183615869 userdict /internaldict get exec
exch /FlxProc exch put true}
{1183615869 systemdict /internaldict get exec
dup length exch maxlength eq
{false}
{1183615869 systemdict /internaldict get exec
exch /FlxProc exch put true}
ifelse}
ifelse}
ifelse
{systemdict /internaldict known
{{1183615869 systemdict /internaldict get exec /FlxProc get exec}}
{{1183615869 userdict /internaldict get exec /FlxProc get exec}}
ifelse executeonly
} if
{gsave currentpoint newpath moveto} executeonly
{currentpoint grestore gsave currentpoint newpath moveto} executeonly
{systemdict /internaldict known not
{pop 3}
{1183615869 systemdict /internaldict get exec
dup /startlock known
{/startlock get exec}
{dup /strtlck known
{/strtlck get exec}
{pop 3}
ifelse}
ifelse}
ifelse
} executeonly
{} {} {} {} {} {} {}
{} { 2 { cvi { { pop 0 lt { exit } if } loop } repeat } repeat }
]noaccess def
/BlueValues [
/OtherBlues [
/FamilyBlues [
/FamilyOtherBlues [
22TStreamEncodingContext
18TCharStringContext
25TBufferedStreamingContext
35TBufferedCharStringStreamingContext
22MStreamSnapShotContext
13TBinarySearch
19TBinarySingleSearch
16TCIDMetricsTable
25TType1CIDRenderingContext
21TType1CIDFontInstance
19MPathFlattenContext
46TResolutionRestrictedCubicPathRenderingContext
57TTransformedResolutionRestrictedCubicPathRenderingContext
50TResolutionRestrictedQuadraticPathRenderingContext
61TTransformedResolutionRestrictedQuadraticPathRenderingContext
35TType1ResolutionRestrictedTransform
18TType1CIDVFMXTable
?29Type1TableSythesisDataContext
lppa
OTTO1TDPCTDP0CDPNFWL1pyt
Type1OFA2Scaler
spsccrfmrdrm
pambpamcpamb4xiphtaptpxg
.notdef
space
exclam
quotedbl
numbersign
dollar
percent
ampersand
quoteright
parenleft
parenright
asterisk
plus
comma
hyphen
period
slash
zero
three
four
five
seven
eight
nine
colon
semicolon
less
equal
greater
question
bracketleft
backslash
bracketright
asciicircum
underscore
quoteleft
braceleft
braceright
asciitilde
exclamdown
cent
sterling
fraction
florin
section
currency
quotesingle
quotedblleft
guillemotleft
guilsinglleft
guilsinglright
endash
dagger
daggerdbl
periodcentered
paragraph
bullet
quotesinglbase
quotedblbase
quotedblright
guillemotright
ellipsis
perthousand
questiondown
grave
acute
circumflex
tilde
macron
breve
dotaccent
dieresis
ring
cedilla
hungarumlaut
ogonek
caron
emdash
ordfeminine
Lslash
Oslash
ordmasculine
dotlessi
lslash
oslash
germandbls
onesuperior
logicalnot
trademark
onehalf
plusminus
Thorn
onequarter
divide
brokenbar
degree
thorn
threequarters
twosuperior
registered
minus
multiply
threesuperior
copyright
Aacute
Acircumflex
Adieresis
Agrave
Aring
Atilde
Ccedilla
Eacute
Ecircumflex
Edieresis
Egrave
Iacute
Icircumflex
Idieresis
Igrave
Ntilde
Oacute
Ocircumflex
Odieresis
Ograve
Otilde
Scaron
Uacute
Ucircumflex
Udieresis
Ugrave
Yacute
Ydieresis
Zcaron
aacute
acircumflex
adieresis
agrave
aring
atilde
ccedilla
eacute
ecircumflex
edieresis
egrave
iacute
icircumflex
idieresis
igrave
ntilde
oacute
ocircumflex
odieresis
ograve
otilde
scaron
uacute
ucircumflex
udieresis
ugrave
yacute
ydieresis
zcaron
exclamsmall
Hungarumlautsmall
dollaroldstyle
dollarsuperior
ampersandsmall
Acutesmall
parenleftsuperior
parenrightsuperior
twodotenleader
onedotenleader
zerooldstyle
oneoldstyle
twooldstyle
threeoldstyle
fouroldstyle
fiveoldstyle
sixoldstyle
sevenoldstyle
eightoldstyle
nineoldstyle
commasuperior
threequartersemdash
periodsuperior
questionsmall
asuperior
bsuperior
centsuperior
dsuperior
esuperior
isuperior
lsuperior
msuperior
nsuperior
osuperior
rsuperior
ssuperior
tsuperior
parenleftinferior
parenrightinferior
Circumflexsmall
hyphensuperior
Gravesmall
Asmall
Bsmall
Csmall
Dsmall
Esmall
Fsmall
Gsmall
Hsmall
Ismall
Jsmall
Ksmall
Lsmall
Msmall
Nsmall
Osmall
Psmall
Qsmall
Rsmall
Ssmall
Tsmall
Usmall
Vsmall
Wsmall
Xsmall
Ysmall
Zsmall
colonmonetary
onefitted
rupiah
Tildesmall
exclamdownsmall
centoldstyle
Lslashsmall
Scaronsmall
Zcaronsmall
Dieresissmall
Brevesmall
Caronsmall
Dotaccentsmall
Macronsmall
figuredash
hypheninferior
Ogoneksmall
Ringsmall
Cedillasmall
questiondownsmall
oneeighth
threeeighths
fiveeighths
seveneighths
onethird
twothirds
zerosuperior
foursuperior
fivesuperior
sixsuperior
sevensuperior
eightsuperior
ninesuperior
zeroinferior
oneinferior
twoinferior
threeinferior
fourinferior
fiveinferior
sixinferior
seveninferior
eightinferior
nineinferior
centinferior
dollarinferior
periodinferior
commainferior
Agravesmall
Aacutesmall
Acircumflexsmall
Atildesmall
Adieresissmall
Aringsmall
AEsmall
Ccedillasmall
Egravesmall
Eacutesmall
Ecircumflexsmall
Edieresissmall
Igravesmall
Iacutesmall
Icircumflexsmall
Idieresissmall
Ethsmall
Ntildesmall
Ogravesmall
Oacutesmall
Ocircumflexsmall
Otildesmall
Odieresissmall
OEsmall
Oslashsmall
Ugravesmall
Uacutesmall
Ucircumflexsmall
Udieresissmall
Yacutesmall
Thornsmall
Ydieresissmall
001.000
001.001
001.002
001.003
Black
Bold
Book
Light
Medium
Regular
Roman
Semibold
StandardEncoding
2 index /CharStrings 
/CIDFontName
/XUID
/UIDBase
(Binary) %d StartData 
 %d Binary Bytes
/CharProcs 
 dict
dup 
$SPTW
$SPW
#} 2 index /.notdef 2 index put put
} put
] def
/$SubFontArray [
/FontBBox[
]def
/yopmatrix [
 0 0 
 0 0] def
/CharStrings 
 dict dup begin
end def end
 exch definefont pop
%!FontType3-1.0: 
/FontInfo 4 dict dup begin
/Registry (
/) def
/Ordering (
/Supplement 
/FSType 
end readonly def
/Private
dict
begin
/lenIV
/RunInt
dup /Private 
#/ND {noaccess def} executeonly def
/Subrs 
 array
end readonly put
Unnamed
Adobe
Japan1
CNS1
Korea1
%-.8g
currentfile eexec
systemdict begin
cleartomark
51.8 * LaserWriter Personal NT
52.1 * TI microLaser PS15
52.1 * TI microLaser PS35
52.1 * TI microLaser XL PS15
52.1 * TI microLaser XL PS35
52.2 * HP LaserJet IIP PostScript Cartridge
StandardEncoding
2256 array 0 1 255 {1 index exch /.notdef put} for
readonly def
/FontName
%!FontType1-1.0: 
/FontMatrix [
] readonly def
/FontBBox {
} readonly def
/Subrs 5 array
dup 0 15 RD 
dup 1 9 RD 
dup 2 9 RD 
dup 3 5 RD 
dup 4 12 RD 
dup 4 13 RD 
 RD 
%s_%s
Font_%ld
%%CreationDate: 
%d/%d/%02d
%% Copyright %d Apple Inc. and its licensors, all rights reserved.
)11 dict begin
/FontInfo 9 dict dup begin
/version (
) readonly def
/FullName (
/FamilyName (
 /Weight (SnapShot) readonly def
/ItalicAngle 
/isFixedPitch true def
/isFixedPitch false def
/UnderlinePosition 
/UnderlineThickness 
/FontName /
/PaintType 
/FontType 1 def
/Encoding 
currentdict end
3noaccess put
dup /FontName get exch definefont pop
dup /Private 20 dict dup begin
=/RD {string currentfile exch readstring pop} executeonly def
#/NP {noaccess put} executeonly def
/MinFeature {16 16} def
/password 5839 def
/LanguageGroup 
/RndStemUp false def
/ExpansionFactor 
readonly put
TYPE1SCALER_DISABLE_SBIT
v8@?0
a-j?
14TType1PDC0Font
18TType1OTFHFMXTable
18TType1OTFVFMXTable
14TType1PDTCFont
dup begin [
]NormalizeDesignVector ConvertDesignVector] end makeblendedfont /$$GXMMFont$$ exch definefont
17TStreamingContext
23TType1CharStringContext
40TBufferedType1CharStringStreamingContext
32TType1MMSnapShotStreamingContext
12TType1Strike
15TType1Exception
11TMemoryHeap
ffff
R3&16TType1OTFCIDFont
42TT2T1CIDConvertingBufferedStreamingContext
43TType2CIDToType1CharStringConvertionContext
17TOTFCIDCFFFontSet
18TType1FontInstance
 RD 
%%BeginData:
+currentfile /ASCII85Decode filter cvx exec
%%EndData
0 dup /CIDFont resourcestatus{3 1 roll pop}if pop
 /CIDFont findresource 
+ end dup /FontName get exch definefont pop
: /CIDFont resourcestatus {pop pop save true}{false}ifelse
{restore}if
19 dict dup begin
/FontType 3 def
/FontMatrix matrix def
/FontBBox {0 0 0 0} readonly def
/PaintType 0 def
/StrokeWidth 0 def
/BuildGlyph{save 3 1 roll
1 index dup
begin
/ShowProc get 3 1 roll
1 index /CharProcs get exch get exec
7 -1 roll exec
restore
} bind def
/BuildChar{1 index /Encoding get exch get
1 index /BuildGlyph get exec} bind def
/$SP{3 -1 roll dup /SetupSubFont get exec
dup setfont
exch 0 0 2 index stringwidth
} bind def
/$SPW{4 -1 roll dup /SetupSubFont get exec
dup setfont
3 1 roll 0 0 0 4 2 roll} bind def
/$SPTW{5 -1 roll dup /SetupSubFont get exec
dup setfont
4 1 roll neg  0 3 -1 roll 0} bind def
/$RP{6 -1 roll dup /SetupSubFont get exec
dup setfont 5 1 roll
translate -90 rotate 0 0 0 4 2 roll} bind def
/SetupSubFont{dup /PaintType get 1 index /StrokeWidth get
3 -1 roll /$SubFontArray get 4 1 roll
3 index 3 index get
dup /PaintType known{dup /PaintType get}{0}ifelse
1 index /StrokeWidth known{1 index /StrokeWidth get}{0}ifelse
3 index ne exch 4 index ne or
{dup length 2 add dict begin
{1 index /FID eq {pop pop}{def}ifelse}forall
/StrokeWidth exch def
/PaintType exch def
currentdict end
dup /CIDFontName known
{/Anonymous exch /CIDFont defineresource}{/Anonymous exch definefont}ifelse
dup 4 1 roll put
}{ pop pop pop get}ifelse
} bind def
/ShowProc{systemdict /rectfill known
{0 setcachelimit}if
6 -1 roll dup /FontMatrix get exch /FontBBox get aload pop
4 index transform 4 2 roll
5 -1 roll transform 4 2 roll
setcachedevice
moveto dup type /stringtype eq {show}{glyphshow} ifelse
} bind def
]14 dict dup begin
/FontType 3 def
/PaintType 0 def
/StrokeWidth 0 def
/FontMatrix matrix def
/GetShort {2 copy get 256 mul
3 1 roll
1 add
get add
} bind def
/SignedShort {dup 32767 gt {65536 sub
} if
} bind def
/LocalVariables 3 dict dup begin/theString null def
/strInd 0 def
/doingY false def
end def
/DrawGlyph {exec
LocalVariables begin
/theString exch def
/strInd 0 def
theString strInd GetShort
/strInd strInd 2 add def
{theString strInd GetShort
/strInd strInd 2 add def
dup 0 gt {
1 sub
theString strInd GetShort SignedShort
theString strInd 2 add GetShort SignedShort moveto
/strInd strInd 4 add def
{theString strInd GetShort SignedShort
theString strInd 2 add GetShort SignedShort rlineto
/strInd strInd 4 add def
} repeat
closepath
} if
} repeat
PaintType 2 eq { StrokeWidth
setlinewidth stroke
} {eofill
} ifelse
} bind def
/BuildChar{exch begin Encoding exch get CharStrings dup 2 index known{exch}{exch pop /.notdef}ifelse get
dup 0 get
3 -1 roll
dup 1 get exch dup 2 get exch dup 3 get exch dup 4 get exch
7 1 roll
setcachedevice
yopmatrix matrix invertmatrix concat
9 get DrawGlyph
end}bind def
W findfont dup length dict begin {1 index /FID eq{ pop pop}{def}ifelse}forall /Encoding
currentdict end definefont pop
%ADOBeginFontDict
%ADOEndFontDict
36TCIDASCII85EncodableStreamingContext
12TCFFFDSelect
13TCFFFDSelect0
14TCIDCFFFontSet
43TType1ToType2CIDCharStringConversionContext
19TType1CIDCFFFontSet
50TResolutionRestrictedPolygonalPathStreamingContext
##))
X24TLWFNFontObjectSurrogate
14TType1LWFNFont
31TType1LWFNSingleMasterHFMXTable
33TType1LWFNMultipleMasterHFMXTable
19TType1LWFNVFMXTable
22TLWFNCharStringContext
39TBufferedLWFNCharStringStreamingContext
31TLWFNMMSnapShotStreamingContext
22TLWFNResourceReference
14TType1Streamer
WW0
/.notdef
0123456789ABCDEF
 dict dup begin
 def
currentfile eexec
systemdict begin
mark currentfile closefile
A0000000000000000000000000000000000000000000000000000000000000000
cleartomark
systemdict /setpacking known { currentpacking false setpacking } if
systemdict /setpacking known { setpacking } if
 findfont
3 -1 roll dup length dict exch {exch dup dup /FID ne exch /Encoding ne and {2 index 3 1 roll exch put} {pop pop} ifelse} forall
dup 3 -1 roll /Encoding exch put 2 copy exch /FontName exch put definefont pop
20TFontObjectSurrogate
12TType1PSFont
NFWL1TDP1TDPCTDPCTDP0CDP0CDP1TDP13TType1CIDFont
28TCharStringConversionContext
40TType1ToType2CharStringConversionContext
19THintCntrConversion
19MType1HeapAllocable
15TFlexConversion
14TType1SFNTFont
17TRenderingContext
31TFractionalMetricsRenderContext
21MPathRenderingContext
28TPathMetricsRenderingContext
18MPathTransformable
39TTransformedPathMetricsRenderingContext
21TPathRenderingContext
26TCubicPathRenderingContext
37TTransformedCubicPathRenderingContext
30TQuadraticPathRenderingContext
41TTransformedQuadraticPathRenderingContext
22TGlyphRenderingContext
32TTransformedPathRenderingContext
31TTransformedRunRenderingContext
25T3x3GlyphRenderingContext
17MScratchAlloation
24TType1HFMXTableSurrogate
24TType1VFMXTableSurrogate
15TType1HFMXTable
15TType1VFMXTable
 !!"!""#!""#"##$
 !!"!""#!""#"##$ !!"!""#!""#"##$0112122312232334
 !!"!""#!""#"##$ !!"!""#!""#"##$0112122312232334 !!"!""#!""#"##$01121223122323340112122312232334@AABABBCABBCBCCD'~/8~G
~~~~~~~~~~~
9TCFFArray
15TCFFStringArray
8TCFFDict
13TCFFDictArray
12TCFFEncoding
13TCFFEncoding0
11TCFFCharSet
12TCFFCharSet0
11TCFFFontSet
16TType1CFFFontSet
Mb0A
15TType1Transform
18TType1Transform2x2
18TType1Transform3x3
14TType1PDT1Font
22TPDT1CharStringContext
39TBufferedPDT1CharStringStreamingContext
13TType1PFAFont
'*-0F
14TCFFDescriptor
13TType1OTFFont
19TCFFEncodingContext
22TCFFGetEncodingContext
25TCFFStreamEncodingContext
26MCharStringConvertionState
40TType2ToType1CharStringConvertionContext
39TT2T1ConvertingBufferedStreamingContext
21TOTFCharStringContext
14TOTFCFFFontSet
19TType1SFNTHFMXTable
19TType1SFNTVFMXTable
ACEINOSUYZaceinosuyz
001.003
] def
/StdHW [
/StdVW [
/BlueScale 
/BlueFuzz 
/BlueShift 
/ForceBold true def
/ForceBold false def
/StemSnapH [
/StemSnapV [
% from the T1 spec on PS SDK v3, modified by DMG to contain otherSubrs 12 and 13
% Copyright (c) 1987-1990 Adobe Systems Incorporated.
% All Rights Reserved.
% This code to be used for Flex and hint replacement.
% Version 1.1
/OtherSubrs
[systemdict /internaldict known
{1183615869 systemdict /internaldict get exec
/FlxProc known {save true} {false} ifelse}
{userdict /internaldict known not {
userdict /internaldict
{count 0 eq
{/internaldict errordict /invalidaccess get exec} if
dup type /integertype ne
{/internaldict errordict /invalidaccess get exec} if
dup 1183615869 eq
{pop 0}
{/internaldict errordict /invalidaccess get exec}
ifelse
dup 14 get 1 25 dict put
bind executeonly put
} if
1183615869 userdict /internaldict get exec
/FlxProc known {save true} {false} ifelse}
ifelse
systemdict /internaldict known not
{ 100 dict /begin cvx /mtx matrix /def cvx } if
systemdict /currentpacking known {currentpacking true setpacking} if
systemdict /internaldict known {
1183615869 systemdict /internaldict get exec
dup /$FlxDict known not {
dup dup length exch maxlength eq
{ pop userdict dup /$FlxDict known not
{ 100 dict begin /mtx matrix def
dup /$FlxDict currentdict put end } if }
{ 100 dict begin /mtx matrix def
dup /$FlxDict currentdict put end }
ifelse
} if
/$FlxDict get begin
} if
grestore
/exdef {exch def} def
/dmin exch abs 100 div def
/epX exdef /epY exdef
/c4y2 exdef /c4x2 exdef /c4y1 exdef /c4x1 exdef /c4y0 exdef /c4x0 exdef
/c3y2 exdef /c3x2 exdef /c3y1 exdef /c3x1 exdef /c3y0 exdef /c3x0 exdef
/c1y2 exdef /c1x2 exdef /c2x2 c4x2 def /c2y2 c4y2 def
/yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def
/PickCoords {
{c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2 }
{c3x0 c3y0 c3x1 c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2 }
ifelse
/y5 exdef /x5 exdef /y4 exdef /x4 exdef /y3 exdef /x3 exdef
/y2 exdef /x2 exdef /y1 exdef /x1 exdef /y0 exdef /x0 exdef
} def
mtx currentmatrix pop
mtx 0 get abs .00001 lt mtx 3 get abs .00001 lt or
{/flipXY -1 def }
{mtx 1 get abs .00001 lt mtx 2 get abs .00001 lt or
{/flipXY 1 def }
{/flipXY 0 def }
ifelse }
ifelse
/erosion 1 def
systemdict /internaldict known {
1183615869 systemdict /internaldict get exec dup
/erosion known
{/erosion get /erosion exch def}
{pop}
ifelse
} if
yflag
{flipXY 0 eq c3y2 c4y2 eq or
{false PickCoords }
{/shrink c3y2 c4y2 eq
{0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs} ifelse def
/yshrink {c4y2 sub shrink mul c4y2 add} def
/c1y0 c3y0 yshrink def /c1y1 c3y1 yshrink def
/c2y0 c4y0 yshrink def /c2y1 c4y1 yshrink def
/c1x0 c3x0 def /c1x1 c3x1 def /c2x0 c4x0 def /c2x1 c4x1 def
/dY 0 c3y2 c1y2 sub round
dtransform flipXY 1 eq {exch} if pop abs def
dY dmin lt PickCoords
y2 c1y2 sub abs 0.001 gt {
c1x2 c1y2 transform flipXY 1 eq {exch} if
/cx exch def /cy exch def
/dY 0 y2 c1y2 sub round dtransform flipXY 1 eq {exch}
if pop def
dY round dup 0 ne
{/dY exdef }
{pop dY 0 lt {-1}{1} ifelse /dY exdef }
ifelse
/erode PaintType 2 ne erosion 0.5 ge and def
erode {/cy cy 0.5 sub def} if
/ey cy dY add def
/ey ey ceiling ey sub ey floor add def
erode {/ey ey 0.5 add def} if
ey cx flipXY 1 eq {exch} if itransform exch pop
y2 sub /eShift exch def
/y1 y1 eShift add def /y2 y2 eShift add def /y3 y3
eShift add def
} if
} ifelse
{flipXY 0 eq c3x2 c4x2 eq or
{false PickCoords }
{/shrink c3x2 c4x2 eq
{0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs} ifelse def
/xshrink {c4x2 sub shrink mul c4x2 add} def
/c1x0 c3x0 xshrink def /c1x1 c3x1 xshrink def
/c2x0 c4x0 xshrink def /c2x1 c4x1 xshrink def
/c1y0 c3y0 def /c1y1 c3y1 def /c2y0 c4y0 def /c2y1 c4y1 def
/dX c3x2 c1x2 sub round 0 dtransform
flipXY -1 eq {exch} if pop abs def
dX dmin lt PickCoords
x2 c1x2 sub abs 0.001 gt {
c1x2 c1y2 transform flipXY -1 eq {exch} if
/cy exch def /cx exch def
/dX x2 c1x2 sub round 0 dtransform flipXY -1 eq {exch} if pop def
dX round dup 0 ne
{/dX exdef }
{pop dX 0 lt {-1}{1} ifelse /dX exdef }
ifelse
/erode PaintType 2 ne erosion .5 ge and def
erode {/cx cx .5 sub def} if
/ex cx dX add def
/ex ex ceiling ex sub ex floor add def
erode {/ex ex .5 add def} if
ex cy flipXY -1 eq {exch} if itransform pop
x2 sub /eShift exch def
/x1 x1 eShift add def /x2 x2 eShift add def /x3 x3 eShift add def
} if
} ifelse
} ifelse
x2 x5 eq y2 y5 eq or
{ x5 y5 lineto }
{ x0 y0 x1 y1 x2 y2 curveto
x3 y3 x4 y4 x5 y5 curveto }
ifelse
epY epX
systemdict /currentpacking known {exch setpacking} if
/exec cvx /end cvx ] cvx
executeonly
exch
{pop true exch restore}
systemdict /internaldict known not
{1183615869 userdict /internaldict get exec
exch /FlxProc exch put true}
{1183615869 systemdict /internaldict get exec
dup length exch maxlength eq
{false}
{1183615869 systemdict /internaldict get exec
exch /FlxProc exch put true}
ifelse}
ifelse}
ifelse
{systemdict /internaldict known
{{1183615869 systemdict /internaldict get exec /FlxProc get exec}}
{{1183615869 userdict /internaldict get exec /FlxProc get exec}}
ifelse executeonly
} if
{gsave currentpoint newpath moveto} executeonly
{currentpoint grestore gsave currentpoint newpath moveto} executeonly
{systemdict /internaldict known not
{pop 3}
{1183615869 systemdict /internaldict get exec
dup /startlock known
{/startlock get exec}
{dup /strtlck known
{/strtlck get exec}
{pop 3}
ifelse}
ifelse}
ifelse
} executeonly
{} {} {} {} {} {} {}
{} { 2 { cvi { { pop 0 lt { exit } if } loop } repeat } repeat }
]noaccess def
/BlueValues [
/OtherBlues [
/FamilyBlues [
/FamilyOtherBlues [
22TStreamEncodingContext
22MType1HeapNonAllocable
18TCharStringContext
25TBufferedStreamingContext
35TBufferedCharStringStreamingContext
22MStreamSnapShotContext
13TBinarySearch
19TBinarySingleSearch
16TCIDMetricsTable
25TType1CIDRenderingContext
21TType1CIDFontInstance
19MPathFlattenContext
46TResolutionRestrictedCubicPathRenderingContext
57TTransformedResolutionRestrictedCubicPathRenderingContext
50TResolutionRestrictedQuadraticPathRenderingContext
61TTransformedResolutionRestrictedQuadraticPathRenderingContext
35TType1ResolutionRestrictedTransform
18TType1CIDVFMXTable
29Type1TableSythesisDataContext
lppa
OTTO1TDPCTDP0CDPNFWL1pytType1OFA2Scaler
spsccrfmrdrmpambpamcpamb4xiphtaptpxg
.notdef
space
exclam
quotedbl
numbersign
dollar
percent
ampersand
quoteright
parenleft
parenright
asterisk
plus
comma
hyphen
period
slash
zero
three
four
five
seven
eight
nine
colon
semicolon
less
equal
greater
question
bracketleft
backslash
bracketright
asciicircum
underscore
quoteleft
braceleft
braceright
asciitilde
exclamdown
cent
sterling
fraction
florin
section
currency
quotesingle
quotedblleft
guillemotleft
guilsinglleft
guilsinglright
endash
dagger
daggerdbl
periodcentered
paragraph
bullet
quotesinglbase
quotedblbase
quotedblright
guillemotright
ellipsis
perthousand
questiondown
grave
acute
circumflex
tilde
macron
breve
dotaccent
dieresis
ring
cedilla
hungarumlaut
ogonek
caron
emdash
ordfeminine
Lslash
Oslash
ordmasculine
dotlessi
lslash
oslash
germandbls
onesuperior
logicalnot
trademark
onehalf
plusminus
Thorn
onequarter
divide
brokenbar
degree
thorn
threequarters
twosuperior
registered
minus
multiply
threesuperior
copyright
Aacute
Acircumflex
Adieresis
Agrave
Aring
Atilde
Ccedilla
Eacute
Ecircumflex
Edieresis
Egrave
Iacute
Icircumflex
Idieresis
Igrave
Ntilde
Oacute
Ocircumflex
Odieresis
Ograve
Otilde
Scaron
Uacute
Ucircumflex
Udieresis
Ugrave
Yacute
Ydieresis
Zcaron
aacute
acircumflex
adieresis
agrave
aring
atilde
ccedilla
eacute
ecircumflex
edieresis
egrave
iacute
icircumflex
idieresis
igrave
ntilde
oacute
ocircumflex
odieresis
ograve
otilde
scaron
uacute
ucircumflex
udieresis
ugrave
yacute
ydieresis
zcaron
exclamsmall
Hungarumlautsmall
dollaroldstyle
dollarsuperior
ampersandsmall
Acutesmall
parenleftsuperior
parenrightsuperior
twodotenleader
onedotenleader
zerooldstyle
oneoldstyle
twooldstyle
threeoldstyle
fouroldstyle
fiveoldstyle
sixoldstyle
sevenoldstyle
eightoldstyle
nineoldstyle
commasuperior
threequartersemdash
periodsuperior
questionsmall
asuperior
bsuperior
centsuperior
dsuperior
esuperior
isuperior
lsuperior
msuperior
nsuperior
osuperior
rsuperior
ssuperior
tsuperior
parenleftinferior
parenrightinferior
Circumflexsmall
hyphensuperior
Gravesmall
Asmall
Bsmall
Csmall
Dsmall
Esmall
Fsmall
Gsmall
Hsmall
Ismall
Jsmall
Ksmall
Lsmall
Msmall
Nsmall
Osmall
Psmall
Qsmall
Rsmall
Ssmall
Tsmall
Usmall
Vsmall
Wsmall
Xsmall
Ysmall
Zsmall
colonmonetary
onefitted
rupiah
Tildesmall
exclamdownsmall
centoldstyle
Lslashsmall
Scaronsmall
Zcaronsmall
Dieresissmall
Brevesmall
Caronsmall
Dotaccentsmall
Macronsmall
figuredash
hypheninferior
Ogoneksmall
Ringsmall
Cedillasmall
questiondownsmall
oneeighth
threeeighths
fiveeighths
seveneighths
onethird
twothirds
zerosuperior
foursuperior
fivesuperior
sixsuperior
sevensuperior
eightsuperior
ninesuperior
zeroinferior
oneinferior
twoinferior
threeinferior
fourinferior
fiveinferior
sixinferior
seveninferior
eightinferior
nineinferior
centinferior
dollarinferior
periodinferior
commainferior
Agravesmall
Aacutesmall
Acircumflexsmall
Atildesmall
Adieresissmall
Aringsmall
AEsmall
Ccedillasmall
Egravesmall
Eacutesmall
Ecircumflexsmall
Edieresissmall
Igravesmall
Iacutesmall
Icircumflexsmall
Idieresissmall
Ethsmall
Ntildesmall
Ogravesmall
Oacutesmall
Ocircumflexsmall
Otildesmall
Odieresissmall
OEsmall
Oslashsmall
Ugravesmall
Uacutesmall
Ucircumflexsmall
Udieresissmall
Yacutesmall
Thornsmall
Ydieresissmall
001.000
001.001
001.002
001.003
Black
Bold
Book
Light
Medium
Regular
Roman
Semibold
StandardEncoding
2 index /CharStrings 
/CIDFontName
/XUID
/UIDBase
(Binary) %d StartData 
 %d Binary Bytes
/CharProcs 
 dict
dup 
$SPTW
$SPW
#} 2 index /.notdef 2 index put put
} put
] def
/FontName /
/Encoding 
/$SubFontArray [
/FontBBox[
]def
/yopmatrix [
 0 0 
 0 0] def
/CharStrings 
 dict dup begin
end def end
 exch definefont pop
%!FontType3-1.0: 
/FontInfo 4 dict dup begin
/Registry (
/) def
/Ordering (
/Supplement 
/FSType 
end readonly def
/Private
dict
begin
/lenIV
/RunInt
dup /Private 
=/RD {string currentfile exch readstring pop} executeonly def
#/ND {noaccess def} executeonly def
#/NP {noaccess put} executeonly def
/Subrs 
 array
end readonly put
Unnamed
Adobe
Japan1
CNS1
Korea1
%-.8g
currentfile eexec
systemdict begin
cleartomark
51.8 * LaserWriter Personal NT
52.1 * TI microLaser PS15
52.1 * TI microLaser PS35
52.1 * TI microLaser XL PS15
52.1 * TI microLaser XL PS35
52.2 * HP LaserJet IIP PostScript Cartridge
StandardEncoding
2256 array 0 1 255 {1 index exch /.notdef put} for
readonly def
/FontName
%!FontType1-1.0: 
/FontMatrix [
] readonly def
/FontBBox {
} readonly def
/Subrs 5 array
dup 0 15 RD 
dup 1 9 RD 
dup 2 9 RD 
dup 3 5 RD 
dup 4 12 RD 
dup 4 13 RD 
 RD 
%s_%s
Font_%ld
%%CreationDate: 
%d/%d/%02d
%% Copyright %d Apple Inc. and its licensors, all rights reserved.
)11 dict begin
/FontInfo 9 dict dup begin
/version (
) readonly def
/FullName (
/FamilyName (
 /Weight (SnapShot) readonly def
/ItalicAngle 
/isFixedPitch true def
/isFixedPitch false def
/UnderlinePosition 
/UnderlineThickness 
/PaintType 
/FontType 1 def
currentdict end
3noaccess put
dup /FontName get exch definefont pop
dup /Private 20 dict dup begin
/MinFeature {16 16} def
/password 5839 def
/LanguageGroup 
/RndStemUp false def
/ExpansionFactor 
readonly put
TYPE1SCALER_DISABLE_SBIT
v8@?0
,|
