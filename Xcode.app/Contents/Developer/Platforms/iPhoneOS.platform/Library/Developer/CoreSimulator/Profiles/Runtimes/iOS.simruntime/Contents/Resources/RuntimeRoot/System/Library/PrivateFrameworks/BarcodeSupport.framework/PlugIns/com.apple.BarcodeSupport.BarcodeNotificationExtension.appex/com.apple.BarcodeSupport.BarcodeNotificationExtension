_footerSubtitle
T#,R
didReceiveNotificationResponse:
T@"UIColor",R,C,N
release
T@"UIView",R,N,V_footerView
setWithObjects:
TQ,R,N
.cxx_destruct
content
T@"NSString",R,C
isProxy
T@"UILabel",&,V_label
request
TQ,R
systemGrayColor
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
URLWithString:
_barHairlineShadowColor
_bcs_privacyPreservingDescription
_contact
_contentIsPreviewable
_createPreviewControllerWithText:
_defaultURL
_extraPreviewText
_footerTitle
_footerView
_hasAnyPreviewableContent
_icsString
_label
_launchURLForActionIdentifier:
_notificationActions
_notificationServiceConnection
_previewAction
_previewContentType
_previewFooterSubtitle
_previewFooterTitle
_previewViewController
_scaledValueForValue:
_scannerResult
_setShowingLinkPreviewWithMinimalUI:
_showContentViewControllerIfNeeded
_textView
actionIdentifier
activateConstraints:
addChildViewController:
addSubview:
arrayWithObjects:count:
autorelease
barcodePreviewActionForContext:URL:result:contact:ics:
blueColor
boolValue
bottomAnchor
bounds
centerXAnchor
class
conformsToProtocol:
constraintEqualToAnchor:
constraintEqualToAnchor:constant:
constraintEqualToConstant:
constraintGreaterThanOrEqualToAnchor:constant:
constraintLessThanOrEqualToAnchor:constant:
copy
coreResult
countByEnumeratingWithState:objects:count:
debugDescription
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
description
dictionaryWithDictionary:
didMoveToParentViewController:
didReceiveNotification:
didReceiveNotificationResponse:completionHandler:
extensionContext
finishDecoding
firstBaselineAnchor
fontWithDescriptor:size:
footerView
hash
heightAnchor
identifier
init
initForReadingFromData:error:
initWithPreviewText:footerTitle:footerSubtitle:
initWithPreviewViewController:footerTitle:footerSubtitle:
initWithTitle:subtitle:
isEqual:
isEqualToString:
isKindOfClass:
isMemberOfClass:
label
labelColor
leadingAnchor
length
linkTextAttributes
logBarcodePreviewedEventForContentType:
mainScreen
mediaPause
mediaPlay
mediaPlayPauseButtonFrame
mediaPlayPauseButtonTintColor
mediaPlayPauseButtonType
objectForKey:
openURL:completionHandler:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performWithoutAnimation:
preferredContentSize
preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:
preferredFontForTextStyle:
respondsToSelector:
retain
retainCount
scale
self
setAutoresizingMask:
setBackgroundColor:
setDataDetectorTypes:
setEditable:
setFont:
setFrame:
setLabel:
setLineBreakMode:
setLinkTextAttributes:
setNotificationActions:
setPreferredContentSize:
setScrollEnabled:
setText:
setTextColor:
setTranslatesAutoresizingMaskIntoConstraints:
setValue:forKey:
sharedController
sharedLogger
sizeThatFits:
superclass
systemFontOfSize:
systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:
textContainer
topAnchor
trailingAnchor
userInfo
view
viewController
viewDidLoad
viewWillLayoutSubviews
zone
PreviewWithFooterViewController
PreviewFooterView
NotificationViewController
UNNotificationContentExtension
NSObject
TextPreviewViewController
@40@0:8@16@24@32
v16@0:8
@16@0:8
@"NSString"
@"UIViewController"
@"UIView"
@32@0:8@16@24
{CGSize=dd}32@0:8{CGSize=dd}16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v32@0:8@16@?24
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v24@0:8@"UNNotification"16
v32@0:8@"UNNotificationResponse"16@?<v@?Q>24
@"UIColor"16@0:8
@24@0:8@16
q16@0:8
@"DDPreviewAction"
@"NSURL"
@"DDScannerResult"
@"CNContact"
@"NSArray"
@"BCSNotificationServiceConnection"
@"UILabel"
{CGSize=dd}16@0:8
@"UITextView"
NotificationViewController: the notification banner doesn't have any content that can be previewed!
NotificationViewController: cannot find DDPreviewAction for preview content.
NotificationViewController: Error creating NSKeyedUnarchiver %{public}@
NotificationViewController: payload URL: %{private}@ scannerResult: %{private}@ icsString: %{private}@ contact: %{private}@ extraPreviewText: %{private}@
NotificationViewController: did receive notification response with action identifier %{public}@
NotificationViewController: launch URL did %{private}@ did %{public}@
v8@?0
succeed
fail
v12@?0B8
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.private.barcodesupport.allowNotifications</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.BarcodeSupport.BarcodeNotificationService</string>
</array>
</dict>
</plist>
0,'com.apple.frontboard.launchapplications
083com.apple.private.barcodesupport.allowNotifications
0m4com.apple.security.exception.mach-lookup.global-name053com.apple.BarcodeSupport.BarcodeNotificationService
_footerSubtitle
T#,R
didReceiveNotificationResponse:
T@"UIColor",R,C,N
release
T@"UIView",R,N,V_footerView
setWithObjects:
TQ,R,N
.cxx_destruct
content
T@"NSString",R,C
isProxy
T@"UILabel",&,V_label
request
TQ,R
systemGrayColor
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
URLWithString:
_barHairlineShadowColor
_bcs_privacyPreservingDescription
_contact
_contentIsPreviewable
_createPreviewControllerWithText:
_defaultURL
_extraPreviewText
_footerTitle
_footerView
_hasAnyPreviewableContent
_icsString
_label
_launchURLForActionIdentifier:
_notificationActions
_notificationServiceConnection
_previewAction
_previewContentType
_previewFooterSubtitle
_previewFooterTitle
_previewViewController
_scaledValueForValue:
_scannerResult
_setShowingLinkPreviewWithMinimalUI:
_showContentViewControllerIfNeeded
_textView
actionIdentifier
activateConstraints:
addChildViewController:
addSubview:
arrayWithObjects:count:
autorelease
barcodePreviewActionForContext:URL:result:contact:ics:
blueColor
boolValue
bottomAnchor
bounds
centerXAnchor
class
conformsToProtocol:
constraintEqualToAnchor:
constraintEqualToAnchor:constant:
constraintEqualToConstant:
constraintGreaterThanOrEqualToAnchor:constant:
constraintLessThanOrEqualToAnchor:constant:
copy
coreResult
countByEnumeratingWithState:objects:count:
debugDescription
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
description
dictionaryWithDictionary:
didMoveToParentViewController:
didReceiveNotification:
didReceiveNotificationResponse:completionHandler:
extensionContext
finishDecoding
firstBaselineAnchor
fontWithDescriptor:size:
footerView
hash
heightAnchor
identifier
init
initForReadingFromData:error:
initWithPreviewText:footerTitle:footerSubtitle:
initWithPreviewViewController:footerTitle:footerSubtitle:
initWithTitle:subtitle:
isEqual:
isEqualToString:
isKindOfClass:
isMemberOfClass:
label
labelColor
leadingAnchor
length
linkTextAttributes
logBarcodePreviewedEventForContentType:
mainScreen
mediaPause
mediaPlay
mediaPlayPauseButtonFrame
mediaPlayPauseButtonTintColor
mediaPlayPauseButtonType
objectForKey:
openURL:completionHandler:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performWithoutAnimation:
preferredContentSize
preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:
preferredFontForTextStyle:
respondsToSelector:
retain
retainCount
scale
self
setAutoresizingMask:
setBackgroundColor:
setDataDetectorTypes:
setEditable:
setFont:
setFrame:
setLabel:
setLineBreakMode:
setLinkTextAttributes:
setNotificationActions:
setPreferredContentSize:
setScrollEnabled:
setText:
setTextColor:
setTranslatesAutoresizingMaskIntoConstraints:
setValue:forKey:
sharedController
sharedLogger
sizeThatFits:
superclass
systemFontOfSize:
systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:
textContainer
topAnchor
trailingAnchor
userInfo
view
viewController
viewDidLoad
viewWillLayoutSubviews
zone
PreviewWithFooterViewController
PreviewFooterView
NotificationViewController
UNNotificationContentExtension
NSObject
TextPreviewViewController
@40@0:8@16@24@32
v16@0:8
@16@0:8
@"NSString"
@"UIViewController"
@"UIView"
@32@0:8@16@24
{CGSize=dd}32@0:8{CGSize=dd}16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v32@0:8@16@?24
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v24@0:8@"UNNotification"16
v32@0:8@"UNNotificationResponse"16@?<v@?Q>24
@"UIColor"16@0:8
@24@0:8@16
q16@0:8
@"DDPreviewAction"
@"NSURL"
@"DDScannerResult"
@"CNContact"
@"NSArray"
@"BCSNotificationServiceConnection"
@"UILabel"
{CGSize=dd}16@0:8
@"UITextView"
NotificationViewController: the notification banner doesn't have any content that can be previewed!
NotificationViewController: cannot find DDPreviewAction for preview content.
NotificationViewController: Error creating NSKeyedUnarchiver %{public}@
NotificationViewController: payload URL: %{private}@ scannerResult: %{private}@ icsString: %{private}@ contact: %{private}@ extraPreviewText: %{private}@
NotificationViewController: did receive notification response with action identifier %{public}@
NotificationViewController: launch URL did %{private}@ did %{public}@
v8@?0
succeed
fail
v12@?0B8
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.private.barcodesupport.allowNotifications</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.BarcodeSupport.BarcodeNotificationService</string>
</array>
</dict>
</plist>
0,'com.apple.frontboard.launchapplications
083com.apple.private.barcodesupport.allowNotifications
0m4com.apple.security.exception.mach-lookup.global-name053com.apple.BarcodeSupport.BarcodeNotificationService
