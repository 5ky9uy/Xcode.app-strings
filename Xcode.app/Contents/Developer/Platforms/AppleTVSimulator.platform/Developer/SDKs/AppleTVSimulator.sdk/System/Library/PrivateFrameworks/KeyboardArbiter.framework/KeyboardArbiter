@@(#)PROGRAM:KeyboardArbiter  PROJECT:UIKit-1
com.apple.UIKit.remote-keyboard
com.apple.UIKit
KeyboardArbiter
v8@?0
com.apple.UIKit.keyboard-arbiter
invalid.remote-keyboards
v16@?0@"NSDictionary"8
current state = %@;
active handle = %@;
handles = %@>
Description
Active
KeyboardFocus
CommandFocus
Suspended
Process
Timed out/hung
v24@?0@"<_UIKeyboardArbitrationClient>"8@?<v@?>16
v12@?0B8
__46-[_UIKeyboardArbiter runOperations:onHandler:]_block_invoke
v16@?0@"NSError"8
-[_UIKeyboardArbiter runOperations:onHandler:]
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
lastUpdate
T@"_UIKeyboardChangedInformation",&,N,V_lastUpdate
sceneLink
T@"<_UIKeyboardArbiterLink>",R,N,V_sceneLink
<%@: %p; PID %i: %@ <%@>%@; hosting PIDs %@; level %f; active %@ [wants %@]; suppression %i>
 (suspended)
com.apple.UIKit.KeyboardManagement.message
processIdentifier
Ti,R
bundleIdentifier
T@"NSString",R,&,V_bundleIdentifier
connection
T@"NSXPCConnection",R,V_connection
running
TB,V_running
sceneLayer
T@"FBSCAContextSceneLayer",R,&,V_sceneLayer
remoteSceneID
T@"NSString",R,&,V_remoteSceneID
active
TB,R,V_active
wantedActive
TB,R,V_wantedActive
level
Td,R,V_level
init
arrayWithCapacity:
setOwner:
sceneLink
connectWithQueue:
attemptConnection
serviceName
serviceListener
alloc
initWithMachServiceName:
setDelegate:
arrayWithObjects:count:
initWithBundleIDs:states:
objectForKey:
intValue
processWithPID:foreground:suspended:
setHandler:
resume
invalidate
dealloc
description
mutableCopy
length
deleteCharactersInRange:
appendString:
lastUpdate
appendFormat:
array
countByEnumeratingWithState:objects:count:
dictionary
setObject:forKey:
numberWithInt:
running
addObject:
addEntriesFromDictionary:
queue_getDebugInfoWithCompletion:
runOperations:onHandler:
createSceneWithCompletion:
connection
remoteObjectProxyWithErrorHandler:
takeProcessAssertionOnRemoteWithQueue:
releaseProcessAssertion
bundleIdentifier
copy
isEqualToString:
sharedService
processIdentifier
setKeyboardFocusApplicationWithBundleID:pid:completion:
active
isHandlerShowableWithHandler:
class
sceneLayer
contextID
remoteSceneID
setWindowContextID:sceneIdentifier:forKeyboard:withLevel:
queue_keyboardChangedWithCompletion:
keyboardOnScreen
copyWithoutIAV
setLastUpdate:
wantedActive
level
queue_keyboardChanged:onComplete:
resetAnimationFencing
scheduleWindowTimeout
updateKeyboardStatus:fromHandler:
informationForKeyboardDown
handlerRequestedFocus:
isAvailable
attach:
reevaluateHardwareKeyboardClient
detach:
setPreferredLevel:
setPreferredSceneHostIdentifier:
handlerForPID:
queue_keyboardSuppressed:withCompletion:
notifyHostedPIDsOfSuppression:
updateSceneSettings
handler:activateSceneLayer:
count
updateInterestedBundleIDs:
setRunning:
queue_keyboardTransition:event:withInfo:onComplete:
queue_applicationLostFocusWithCompletion:
handlerWithArbiter:forConnection:
setExportedObject:
removeObject:
updateInterestedBundleIDs
setInvalidationHandler:
setExportedInterface:
setRemoteObjectInterface:
_setQueue:
listener:shouldAcceptNewConnection:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
initWithLink:
retrieveDebugInformationWithCompletion:
completeKeyboardStatusChangedFromHandler:
newClientConnected:withExpectedState:onConnected:
handler:deactivateSceneLayer:
handleUnexpectedDeallocForHandler:
updateSceneSettings:
updateSuppression:ofPIDs:
reevaluateSceneSettings
activateClients
handlerForBundleID:
transition:eventStage:withInfo:fromHandler:
.cxx_destruct
_queue
_listener
_clients
_activeHandle
_previouslyActiveHandle
_currentBundleIdForHardwareKeyboard
_keyboardFocusHandle
_commandFocusHandle
_workspace
_scene
_updateCounter
_stateMonitor
_sceneLink
_lastUpdate
_xpcConnection
stringWithUTF8String:
addObjectsFromArray:
_deactivateScene
initWithCAContextID:level:
containsObject:
setWithObject:
stringWithFormat:
initWithPID:flags:reason:name:withHandler:
retrieveDebugInformation:
retrieveMoreDebugInformationWithCompletion:
startArbitrationWithExpectedState:hostingPIDs:withSuppression:onConnected:
signalKeyboardChanged:onCompletion:
signalKeyboardChangeComplete
setWindowHostingPID:active:
transition:eventStage:withInfo:
applicationShouldFocusWithBundle:onCompletion:
_invalidated
_bundleIdentifier
_owner
_running
_sceneLayer
_remoteSceneID
_active
_wantedActive
_level
_hostedPids
_checkingShowability
_suppressionCount
_remoteKeepAliveAssertion
_remoteKeepAliveAssertionCount
_remoteKeepAliveTimerCount
_connection
_UIKeyboardArbiter
NSXPCListenerDelegate
NSObject
_UIKeyboardArbiterHandle
_UIKeyboardArbitration
Failed to connect - scheduling retry
%s Failed to access %@ remote service: %@
%s Failed to create proxy for %@
HW kbd: currently %@ (%@ < %@)
HW kbd: Keyboard set successfully: %@
HW kbd: Failed to set %@ as keyboard focus
[%@] Dropping %@
Client %@ attempted to connect, but no scene
[%@] Rejecting attach for %@ (currently %@)
[%@] Attaching [%@] %@
[%@] Detaching [%@] %@
[%@] Updating scene to %@ level %f
[%@] Setting suppressed %@ on %@
[%@] started running
[%@] suspended
[%@] no longer foreground
[%@] Received new connection [%@]
[%@] Lost connection [%@]
%@ was not invalidated before release
[%@] %@: %@, %@
[%@] %@ sceneID: %@; %i/%@/%f
[%@] Releasing: %@
[%@] Created: %@
[%@] %@: %i/%@
[%@] %@: %@
[%@] %@: %@/%i/%@
[%@] took process assertion
[%@] could not take process assertion
[%@] requested process assertion (count=%lu)
[%@] timed out with %lu assertions remaining, disconnecting
[%@] released process assertion (count=%lu)
[%@] %@
[%@] %@ <%@>
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
@24@0:8@16
v16@0:8
v24@0:8@?16
v32@0:8@?16@24
v32@0:8@16@24
v24@0:8@16
v40@0:8@16@24@?32
v28@0:8B16@20
@20@0:8i16
v28@0:8i16B20B24
v48@0:8@16Q24@32@40
@"NSObject<OS_dispatch_queue>"
@"NSXPCListener"
@"NSMutableArray"
@"_UIKeyboardArbiterHandle"
@"NSString"
@"FBSWorkspace"
@"FBSScene"
@"BKSApplicationStateMonitor"
@"<_UIKeyboardArbiterLink>"
@"_UIKeyboardChangedInformation"
@32@0:8@16@24
v24@0:8@?<v@?@"NSString">16
v24@0:8@?<v@?@"NSArray">16
v44@0:8@16@24i32@?36
v44@0:8@"_UIKeyboardChangedInformation"16@"NSArray"24i32@?<v@?@"_UIKeyboardChangedInformation">36
v40@0:8I16@20B28d32
v40@0:8I16@"NSString"20B28d32
v32@0:8@16@?24
v32@0:8@"_UIKeyboardChangedInformation"16@?<v@?>24
v24@0:8i16B20
v20@0:8B16
v40@0:8@16Q24@32
v40@0:8@"NSString"16Q24@"NSDictionary"32
v32@0:8@"NSString"16@?<v@?B>24
i16@0:8
d16@0:8
@"_UIKeyboardArbiter"
@"FBSCAContextSceneLayer"
@"NSMutableSet"
@"BKSProcessAssertion"
@"NSXPCConnection"
