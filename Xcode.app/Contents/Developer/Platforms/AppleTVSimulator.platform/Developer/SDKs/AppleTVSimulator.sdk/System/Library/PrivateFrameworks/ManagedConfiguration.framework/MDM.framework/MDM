defaultStore
activeAccount
touch
sharedManager
promptUserForiTunesAccount:accountNameEditable:canCreateNewAccount:assertion:completionBlock:
promptUserToLogIntoiTunesWithTitle:message:assertion:completionBlock:
alloc
initWithAccount:
contextForSignIn
setPromptStyle:
setAccountNameEditable:
setCanCreateNewAccount:
instanceWithAuthenticationContext:
MCVerboseDescription
startWithCompletionBlock:
server
organizationName
serverName
inviteUserToVPPWithTitle:message:assertion:completionBlock:
promptUserToLoginToiTunesIfNeededTitle:message:assertion:completionBlock:
inviteUserToCloudVPPProgramURL:assertion:completionBlock:
.cxx_destruct
setServer:
_server
lookupDictionary
objectForKey:
class
isKindOfClass:
MCExternalVersionIdentifier
init
applicationProxyForIdentifier:
applicationProxyForItemID:
bundleIdentifier
itemID
localizedName
updateWithMetadataResponse:changeType:success:error:
valueForDownloadProperty:
initWithPurchase:
description
mutableCopy
bundleID
appendFormat:
iTunesStoreID
localizedAppTitle
setBundleID:
setITunesStoreID:
setLocalizedAppTitle:
setExternalVersionIdentifer:
length
setPurchase:
initWithBundleID:iTunesStoreID:
initWithMetadataResponse:iTunesStoreID:changeType:success:error:
initWithPurchase:isRedownload:redemptionNeeded:
hasSufficientInfoForManagementChange
updateWithMetadataPurchase:isRedownload:redemptionNeeded:
externalVersionIdentifer
hasRetrievedMetadata
setHasRetrievedMetadata:
isLicensed
success
setSuccess:
error
setError:
changeType
setChangeType:
purchase
isRedownload
isRedemptionNeeded
_hasRetrievedMetadata
_isLicensed
_success
_isRedownload
_isRedemptionNeeded
_bundleID
_iTunesStoreID
_externalVersionIdentifer
_localizedAppTitle
_error
_changeType
_purchase
managerClientClass
initWithDelegate:clientType:
delegate
setDelegate:
invalidate
dealloc
manager:didTransitionToState:fromState:error:
respondsToSelector:
userDownloadPolicyForDescriptor:existingPolicy:
isDownloadableForCurrentNetworkConditions:cellularFeesApply:
errorWithDomain:code:userInfo:
_setState:error:
isUpdateReadyForInstallation:
setState:
setDownload:
descriptor
setUpdate:
scanForUpdateCompletion:
updateStateFromDownload:
isScanning:
download:
metadata
initWithMetadata:
setDownloadMetadata:
startDownloadWithMetadata:withResult:
setForced:
setIdentifier:
scanFinishedWithUpdate:error:
scanForUpdates:withResult:
isEqualToString:
progress
isDone
phase
_SUDownloadPhaseIsQueued:
domain
code
deviceHasSufficientSpaceForDownload:
manager:scanFoundUpdate:error:
identifier
manager:downloadProgressChanged:
manager:download:failedWithError:
manager:installFailedWithError:
client:scanRequestDidStartForOptions:
client:scanRequestDidFinishForOptions:update:error:
client:scanDidCompleteWithNewUpdateAvailable:error:
client:automaticDownloadDidFailToStartForNewUpdateAvailable:withError:
client:downloadWasInvalidatedForNewUpdateAvailable:
client:downloadDidStart:
client:downloadProgressDidChange:
client:downloadDidFail:withError:
client:downloadDidFinish:
client:installDidStart:
client:installDidFail:withError:
client:installDidFinish:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
refreshState
downloadMetadata
startDownload
suManagerClient
setSuManagerClient:
state
update
download
_manuallyStartedScan
_anyScanInProgress
_state
_suManagerClient
_delegate
_update
_download
_downloadMetadata
dictionary
cleanUpWithAssertion:completionBlock:
suspensionQueue
suspensionQueueResumeMemberQueueIfSuspended
suspensionQueueIsMemberQueueSuspended
setSuspensionQueueIsMemberQueueSuspended:
memberQueue
memberQueueCleanUp
memberQueueRereadNonStoreBooksManifest
array
downloads
memberQueuePersistentIDToNonStoreBook
countByEnumeratingWithState:objects:count:
objectForKeyedSubscript:
downloadIdentifier
longLongValue
persistentIdentifier
enumerateObjectsUsingBlock:
downloadPhaseIdentifier
friendlyName
failureError
setDownloadIdentifier:
addObject:
removeObjectIdenticalTo:
finishDownloads:
count
cancelDownloads:completionBlock:
fullPath
defaultManager
fileExistsAtPath:
memberQueueCommitNonStoreBooksManifest
dictionaryWithContentsOfFile:
dictionaryWithCapacity:
stringByAppendingPathComponent:
setObject:forKeyedSubscript:
memberQueueRereadStoreBooksManifest
memberQueueiTunesStoreIDToStoreBook
containsObject:
memberQueueCommitStoreBooksManifest
arrayWithCapacity:
allValues
manifestDictionary
numberWithUnsignedLong:
dictionaryWithObjects:forKeys:count:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
effectiveRestrictedBoolForSetting:
setSkipBackupAttribute:toItemAtPath:
MCSCWriteToFile:atomically:
initWithManifestDictionary:
persistentID
setMemberQueuePersistentIDToNonStoreBook:
setMemberQueueiTunesStoreIDToStoreBook:
numberWithLongLong:
kind
setFullPath:
setPreviousVersion:
MCErrorWithDomain:code:descriptionArray:errorType:
MCHashedFilenameWithPrefix:extension:
setKind:
initWithURL:
initWithKind:
initWithDownloadMetadata:
initWithURLRequest:
numberWithInt:
setValue:forProperty:
numberWithBool:
fileURLWithPath:
numberWithUnsignedInteger:
addAsset:forType:
removeItemAtPath:error:
arrayWithObjects:count:
MCErrorWithDomain:code:descriptionArray:underlyingError:errorType:
setState:forNonStoreBookWithPersistentID:
addDownloads:completionBlock:
cancelNonStoreDownloadsWithDownloadIdentifiers:completionBlock:
updateJaliscoLibraryWithReason:completionHandler:
homeSharingCloudClient
objectAtIndexedSubscript:
isVPPLicensed
shouldBypassVPPLicenseCheck
title
setTitle:
author
setAuthor:
redownloadParameters
setBuyParams:
searchBookPurchaseHistoryForiTunesStoreID:assertion:triesLeft:completionBlock:
refreshBookPurchaseHistoryCompletion:
cannotFindVPPLicenseError
loadBooksForStoreIDs:withCompletionHandler:
cannotVerifyiTunesStoreIDError
stringWithFormat:
setStoreManagedBook:
buyParams
setBuyParameters:
setValue:forDownloadProperty:
uniqueIdentifier
setAccountIdentifier:
initWithPurchases:
startWithPurchaseResponseBlock:completionBlock:
searchBookPurchaseHistoryForiTunesStoreID:assertion:completionBlock:
initWithArray:copyItems:
removeObjectsForKeys:
memberQueueMoveTransientStatesForward
removeObjectForKey:
removePersistenceIdentifier:
removeAllObjects
resumeMemberQueueIfSuspended
rereadNonStoreBooksManifestCompletionBlock:
rereadStoreBooksManifestCompletionBlock:
removeStoreBookWithiTunesStoreID:
setNonStoreManagedBook:
setState:forStoreBookWithiTunesStoreID:
installNonStoreBook:fileExtension:URL:assertion:completionBlock:
installStoreBookWithiTunesStoreID:assertion:completionBlock:
nonStoreBooks
storeBooks
moveTransientStatesForward
removeNonStoreBookWithPersistentID:assertion:completionBlock:
removeStoreBookWithiTunesStoreID:assertion:completionBlock:
uprootWithAssertion:completionBlock:
setMemberQueue:
setSuspensionQueue:
_suspensionQueueIsMemberQueueSuspended
_memberQueue
_memberQueuePersistentIDToNonStoreBook
_memberQueueiTunesStoreIDToStoreBook
_suspensionQueue
setDownloadKinds:
setPersistenceIdentifier:
setShouldFilterExternalOriginatedDownloads:
initWithManagerOptions:
stringFromNumber:
dataUsingEncoding:
MCSHA1Hash
base64EncodedStringWithOptions:
path
getResourceValue:forKey:error:
boolValue
setResourceValue:forKey:error:
iTunesAccountHashForUniqueIdentifier:
currentThread
mainThread
distantFuture
timeIntervalSinceReferenceDate
_timerDidFire:
initWithFireDate:interval:target:selector:userInfo:repeats:
mainRunLoop
addTimer:forMode:
dateWithTimeIntervalSinceNow:
setFireDate:
start
cancel
request:didFailWithError:
requestDidFinish:
initWithRequest:
_startTimeout:completionBlock:
request
_request
_completionBlock
_timeoutTimer
instance
itemLookupRequest:didFindItems:
startCompletionBlock:
_items
initWithAuthenticationContext:
appWhitelistState
storeLoginFailedError
authenticateResponseType
authenticatedAccount
authenticateRequest:didReceiveResponse:
_authenticatedAccount
setShouldHideUserPrompts:
shouldHideUserPrompts
instanceWithURLRequest:
downloadManifestRequest:didReceiveResponse:
_response
initWithItems:
instanceWithItems:
personalizeOffersRequest:didReceiveResponse:
initWithObjects:
_profileList:filterFlags:
_installProfile:accessRights:installationType:
responseWithStatus:
_removeProfileWithIdentifier:forInstalledProfilesWithFilterFlags:
_restrictions:withProfileFilterFlags:
allowedDeviceQueriesOnUserChannelForAccessRights:
sharedClient
pushToken
_allCommands
_profileList:
_installProfile:accessRights:
_removeProfile:
_restrictions:
_allowedDeviceQueriesForAccessRights:
_performQuery:withResultDictionary:
isMISAuthorized
applicationProxyIsMISAuthorizedForBundleID:
instanceWithPurchases:
purchaseRequest:purchaseDidFail:withError:
purchaseRequest:purchaseDidSucceed:
responseWithError:
userInfo
localizedDescription
MCSetObjectIfNotNil:forKey:
MCUSEnglishDescription
numberWithInteger:
setObject:forKey:
sharedConfiguration
isSupervised
addObjectsFromArray:
initWithSet:
setWithArray:
minusSet:
userMode
isEphemeralMultiUser
isTeslaEnrolled
isChaperoned
_invalidRequestTypeError:
sharedConnection
_unavailableCommandsWhileInAppWhitelistModes
unavailableCommandsDuringBuddy
sharedInstance
isManagedLostModeActive
unavailableCommandsWhileInMDMLostMode
_invalidRequestTypeInMDMLostModeError:
_deviceInformationWithRequest:accessRights:
responseFromBasicResponse:
sendResponseSynchronously:outStatusCode:outError:
dictionaryWithDictionary:
_processRequest:accessRights:assertion:completionBlock:
_notAuthorizedError
MCShortenedPlistDescription
_deviceLock:
_enableLostMode:assertion:completionBlock:
_disableLostMode:assertion:completionBlock:
_deviceLocation:
_clearPasscode:
_requestUnlockToken:
_eraseDevice:
_certificateList:
_provisioningProfileList:
_installProvisioningProfile:
_removeProvisioningProfile:
_installedApplicationList:
_securityInfo:
_settings:accessRights:
_installApplication:assertion:completionBlock:
_validateApplications:
_applyRedemptionCode:assertion:
_managedApplicationList:
_managedApplicationConfiguration:
_managedApplicationAttributes:
_managedApplicationFeedback:
_removeApplication:
_requestMirroringRequest:assertion:completionBlock:
_stopMirroringRequest:assertion:completionBlock:
_inviteToProgramRequest:assertion:completionBlock:
_activationLockBypassCodeRequest:completionBlock:
_clearActivationLockBypassCodeRequest:completionBlock:
_clearRestrictionsPasswordRequest:completionBlock:
_installMedia:assertion:completionBlock:
_managedMediaList:assertion:completionBlock:
_removeMedia:assertion:completionBlock:
_deviceConfigured:assertion:completionBlock:
_scheduleOSUpdate:assertion:completionBlock:
_scheduleOSUpdateScan:assertion:completionBlock:
_availableOSUpdates:assertion:completionBlock:
_statusOfOSUpdates:assertion:completionBlock:
_userList:
_logOutUser:
_deleteUser:
processRequest:assertion:completionBlock:
sharedReader
installedProfileIdentifiersWithFilterFlags:
installedProfileWithIdentifier:
UUID
version
displayName
organization
profileDescription
isLocked
removalPasscode
isEncrypted
signerCertificates
dataWithBytes:length:
dependentsOfParent:inDomain:
payloads
type
payloadDescription
dictionaryWithObjectsAndKeys:
setMessage:
setPhoneNumber:
setLostModeEnabled:
enableLostModeWithInfo:
clearLastLocationRequestedDate
setFootnoteText:
setDisableSlideToUnlock:
enableManagedLostModeWithInfo:completion:
lastLocationRequestedDateMessageForServer:
disableManagedLostModeWithLocatedMessage:completion:
currentDeviceLocation
coordinate
numberWithDouble:
allowedDeviceQueriesForAccessRights:
organizationInfo
MDMOptions
isAwaitingConfiguration
floatValue
numberWithFloat:
currentDevice
setBatteryMonitoringEnabled:
batteryLevel
fmipStateWithCompletion:
isActivationLockedWithCompletion:
activeSyncDeviceIdentifier
isCloudBackupEnabled
isDiagnosticSubmissionAllowed
isAppAnalyticsAllowed
installedProfilesWithFilterFlags:
certificatePersistentID
copyItemWithPersistentID:useSystemKeychain:
installProvisioningProfileData:managingProfileIdentifier:outError:
_isProvisioningProfileUUIDManaged:
removeProvisioningProfileWithUUID:outError:
malformedRequestErrorResult
managedAppMetadataByBundleID
allKeys
defaultWorkspace
applicationsOfType:
applicationIdentifier
isInstalled
bundleVersion
shortVersionString
itemName
staticDiskUsage
dynamicDiskUsage
bundleForClass:
URLForResource:withExtension:
dictionaryWithContentsOfURL:
currentRestrictions
filterRestrictionDictionary:acceptedKeysDict:
defaultRestrictions
filterRestrictionDictionary:toIncludeOnlyRestrictionsThatDifferFromRestrictions:
MCFixUpRestrictionsDictionaryForMDMReporting
userProfileRestrictions
systemProfileRestrictions
profileWithData:outError:
containsPayloadOfClass:
isMDM
installProfileData:options:outError:
_removeProfileWithIdentifier:installationType:
_isProfileIdentifierManaged:
removeProfileAsyncWithIdentifier:installationType:
supportsBlockLevelEncryption
supportsFileLevelEncryption
isPasscodeSet
currentPasscodeIsCompliantWithGlobalRestrictionsOutError:
currentPasscodeIsCompliantWithProfileRestrictionsOutError:
userValueForSetting:
effectiveValueForSetting:
_allSettingsItems
intValue
isAwaitingDeviceConfigured
dictionaryWithObject:forKey:
isAppManaged:
_notManagedErrorAppID:
addDefaults:toManagedDomain:
arrayWithObject:
removeDefaults:fromManagedDomain:
sendManagedDefaultsChangedNotificationForDomains:
approvedAppAttributesFromAttributes:
setMetadata:forBundleID:
setBoolValue:forSetting:
setValue:forSetting:
setOrganizationInfo:
validatedMDMOptionsFromOptionsDictionary:
setMDMOptions:
_performSetDeviceName:
_performSetWallpaper:
_performSetDataRoaming:
_performSetVoiceRoaming:
_performSetPersonalHotspot:
_performSetAppConfig:outAdditionalResponseKeys:
_performSetAppAttributes:outAdditionalResponseKeys:
_performSetMaximumResidentUsers:
_performSetDiagnosticSubmission:
_performSetAppAnalytics:
_performSetGracePeriod:
_performSetOrganizationInfo:
_performSetMDMOptions:
_validateSetting:accessRights:outError:
_performSetting:outAdditionalResponseKeys:outRestartAppleTVApp:
addEntriesFromDictionary:
updateApplicationInstallationStates
stringForAppState:
installITunesStoreID:appIdentifier:purchaseMethod:managementFlags:changeManagementState:attributes:configuration:assertion:completionBlock:
URLWithString:
installManifestURL:managementFlags:changeManagementState:attributes:configuration:assertion:completionBlock:
validateAppBundleIDs:completion:
applyRedemptionCode:forBundleID:assertion:outError:
managedDefaultsForDomain:
managedFeedbackDictionaryForBundleID:delete:
advanceTransientStates
dataContainerURL
advanceTransientStatesForBundleID:
hasMetadataForBundleID:
appStateForBundleID:
removeBundleID:
_uninstallApplication:
uninstallApplication:withOptions:
doubleValue
uppercaseString
requestMirroringWithDestinationName:destinationDeviceID:password:scanWaitTime:assertion:completionBlock:
stopMirroringWithAssertion:completionBlock:
restrictedAppBundleIDs
effectiveWhitelistedAppBundleIDs
conformsToOverridePatternWithKey:
openSensitiveURL:withOptions:
activationLockBypassKeyCreateNewIfNeeded:
clearStoredActivationLockBypassCode
resetRestrictionsPassword
componentsWithURL:resolvingAgainstBaseURL:
pathExtension
setVersion:
setPersistentID:
absoluteString
details
storeCloudConfigurationDetails:completion:
errorChainFromError:
initWithManagingProfileIdentifier:
_unavailableCommandsWhileLocked
_unavailableCommandsBeforeFirstUnlock
processRequest:accessRights:assertion:completionBlock:
_appStoreDisabledError
_softwareUpdatesNotPermittedWithLoggedInUserError
statusStringForErrorCode:
shouldReportErrorCode:
_iosUpdateProductKey:
_scheduleOSUpdate:tryDownload:tryInstall:assertion:completionBlock:
setIsMDM:
managingProfileIdentifier
setManagingProfileIdentifier:
_isChaperoned
_isMDM
_managingProfileIdentifier
initWithManifestPath:
copy
dataWithContentsOfFile:
MCSafePropertyListWithData:options:format:error:
setExecutionQueue:
setObserver:
manifestQueueHasMetadataForBundleID:
manifestQueueCommitManifest
manifestQueueManagedAppMetadataByBundleID
MCDeepCopy
manifestQueueAppStateForBundleID:
manifestQueueSetManagedAppMetadataByBundleID:
rereadManagedAppAttributes
jobDidFinish
enqueueJob:
manifestQueueSetMetadata:forBundleID:
manifestQueueMetadataForBundleID:
manifestQueueSetAppState:forBundleID:
cancelAppDownloadForBundleID:
manifestQueueRemoveBundleID:
setDefaults:forManagedDomain:
setWithCapacity:
installType
_isBundleID:installedAsApplicationType:
_isBundleIDInstalled:
stringValue
displayUserNotificationWithTitle:message:defaultButtonText:alternateButtonText:otherButtonText:displayOnLockScreen:displayInAppWhitelistModes:dismissAfterTimeInterval:assertion:completionBlock:
_displayAppInstallationAlertMessage:isUpdate:assertion:completionBlock:
_appBundleID:wasInstalledOutIsManaged:
_displayPromptForAppInstallationTitle:bundleID:isAppStore:isUpdate:assertion:completionBlock:
accountIdentifier
isEqualToNumber:
getPurchasedItemsForItems:completionBlock:
applicationForBundleIdentifier:
accountDSID
accountWithUniqueIdentifier:reloadIfNecessary:
_displayPromptForStoreAppUpdateIfNeededPurchaserAccount:purchase:title:bundleID:assertion:completionBlock:
requestWithURL:
downloadingAppIDs
activeDownloadForAppID:
_appAlreadyQueuedError:
resumeDownloadForBundleID:
_bundleIDAlreadyInstalledError:
_bundleIDIsSystemAppError:
_cannotValidateAppIDError
_lookupItemWithAppIdentifier:iTunesStoreID:completionBlock:
_lookupItemWithAppIdentifier:iTunesStoreID:personalize:completionBlock:
setKeyProfile:
setPersonalizationStyle:
setValue:forRequestParameter:
_cannotValidateAppIDErrorUnderlyingError:
allItems
objectAtIndex:
offers
price
compare:
buyParameters
ITunesStoreIdentifier
startWithLookupBlock:
newDefaultInstance
database
predicateWithProperty:equalToValue:
queryWithDatabase:predicate:
enumeratePersistentIDsAndProperties:count:usingBlock:
readUsingTransactionBlock:
_searchPurchaseHistoryForITunesStoreID:appIdentifier:completionBlock:
updateJaliscoAppsLibraryWithReason:completionHandler:
_installOrPromptForManagementOfStoreAppWithMetadata:purchaseMethod:managementFlags:changeManagementState:attributes:configuration:assertion:completionBlock:
_SSVInstallVPPAppIfLicensedWithMetadata:managementFlags:changeManagementState:attributes:configuration:assertion:completionBlock:
_installITunesStoreIDIfLicensedToUserWithMetadata:managementFlags:changeManagementState:attributes:configuration:assertion:completionBlock:
manifestQueueShouldQueueAppBundleID:forDownloadManagementFlags:resumeDownloadIfNeeded:outRejectionReason:outIsUpdate:outError:
_displayManagementPromptForAppTitle:bundleID:isAppStore:assertion:completionBlock:
_SSVInstallVPPAppWithRetrievedMetadata:managementFlags:attributes:configuration:assertion:completionBlock:
_licenseNotFoundErrorWithBundleID:
_licenseNotFoundErrorWithiTunesStoreID:
_installAppLicensedToUserWithStoreMetadata:managementFlags:attributes:configuration:assertion:completionBlock:
_appAlreadyQueuedErrorWithiTunesStoreID:
resumeDownloadForBundleID:iTunesStoreID:
_SSVRetrieveStoreLicenseMetadataWithStoreMetadata:changeManagementState:assertion:completionBlock:
initWithItemIdentifer:externalVersionIdentifier:bundleIdentifier:bundleVersion:skipDownloads:
startWithMetadataResponseBlock:
initWithItemIdentifer:externalVersionIdentifier:bundleIdentifier:bundleVersion:
_legacyRetrieveStoreAppMetadataWithiTunesStoreID:appIdentifier:assertion:completionBlock:
_lookupItemIfNeededPurchaseHistoryPurchase:mustRedownload:iTunesStoreID:appIdentifier:completionBlock:
searchPurchaseHistoryForITunesStoreID:appIdentifier:completionBlock:
setIgnoresForcedPasswordRestriction:
_purchase:assertion:completionBlock:
_displayAppInstallationFailureAlertTitle:assertion:completionBlock:
_promptUserForStoreAppInstallationPurchase:title:bundleID:requireAuthenticatedAccount:assertion:completionBlock:
_displayAppUpdateFailureAlertTitle:assertion:completionBlock:
_promptUserForStoreAppUpdatePurchase:title:bundleID:assertion:completionBlock:
sendSynchronousRequest:returningResponse:error:
_invalidManifestErrorWithURL:underlyingError:
manifestQueueAdvanceTransientStatesForBundleID:
_installEnterpriseAppManifestURL:assertion:completionBlock:
_promptUserForEnterpriseAppUpdateManifestURL:title:bundleID:assertion:completionBlock:
_promptUserForEnterpriseAppInstallationManifestURL:title:bundleID:assertion:completionBlock:
removeAllManagedDefaultsFromDomain:
initWithRedeemCodes:
setAuthenticationContext:
startWithRedeemResponseBlock:
bundleIDsWithFlags:
initWithDownloadKinds:
valueForProperty:
resume
_advanceTransientStateForBundleID:params:outNewParams:outSetChanged:
metadataForBundleID:
setAppState:forBundleID:
_notAnAppError
cleanUp
uninstallManagedAppsAccordingToFlagsWithAssertion:
doNotBackupAppIDs
manifestPath
setManifestPath:
manifest
setManifest:
manifestQueue
setManifestQueue:
installQueue
setInstallQueue:
jobQueue
setJobQueue:
_manifestPath
_manifest
_manifestQueue
_installQueue
_jobQueue
locationServicesEnabled
isStatusBarIconEnabledForLocationEntityClass:
setLocationServicesEnabled:
setStatusBarIconEnabled:forLocationEntityClass:
_getCurrentDeviceLocation
theThread
performSelector:onThread:withObject:waitUntilDone:
date
currentLocation
dateWithTimeIntervalSinceReferenceDate:
currentLocale
setLocale:
setTimeStyle:
stringFromDate:
setDateStyle:
MCAppendDeviceName
setAuthorizationStatusByType:forBundle:
initWithEffectiveBundle:
setDesiredAccuracy:
requestLocation
currentRunLoop
runUntilDate:
lastObject
setCurrentLocation:
setCurrentError:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
locationManager
setLocationManager:
currentError
semaphore
setSemaphore:
_locationManager
_currentLocation
_currentError
_semaphore
defaultCenter
memberQueueCurrentlyJoiningDestinationName
memberQueueCurrentlyJoiningDestinationDeviceID
pickableMirroringRouteWithName:deviceID:fromRoutes:
setMemberQueueCurrentlyJoiningDestinationName:
setMemberQueueCurrentlyJoiningDestinationDeviceID:
_stopMediaRemoteNotifications
postIsPromptingStatusDidChangeNotification
userNotificationManager
executionQueue
executionQueueBonjourWaitContinuation
addObserverForName:object:queue:usingBlock:
executionQueueBonjourWaitTimerContext
disable
setExecutionQueueBonjourWaitTimerContext:
setExecutionQueueBonjourWaitContinuation:
postNotificationName:object:
executionQueueCancelBonjourWait
promptUserToMirrorWithRoute:name:deviceID:password:assertion:completionBlock:
enabled
_executionQueueStopBonjourWait
cancelAllNotificationsCompletionBlock:
setUserNotificationManager:
_executionQueue
_userNotificationManager
_memberQueueCurrentlyJoiningDestinationName
_memberQueueCurrentlyJoiningDestinationDeviceID
_executionQueueBonjourWaitContinuation
_executionQueueBonjourWaitTimerContext
aa_primaryAppleAccount
isEnabledForDataclass:
aa_isPrimaryEmailVerified
v8@?0
Login failed. Error: %@
Login successful.
v24@?0@"NSError"8@"SSAccount"16
User rejected app installation.
v12@?0i8
Prompting user to log in to iTunes store using account: %@. Can create new account: %@.
Log in request failed. Error: %@
Log in successful. Account: %@
MDM_CAD_INVITATION_TEXT_P_ORG
MDM_CAD_INVITATION_TEXT_P_SERVER
MDM_CAD_INVITATION_TITLE
server
T@"MCMDMServer",W,N,V_server
version
externalId
bundleID
softwareVersionExternalIdentifier
bundleDisplayName
Bundle ID: %@
iTunes ID: %@
Localized App Title: %@
T@"NSString",&,N,V_bundleID
iTunesStoreID
T@"NSNumber",&,N,V_iTunesStoreID
externalVersionIdentifer
T@"NSNumber",&,N,V_externalVersionIdentifer
localizedAppTitle
T@"NSString",&,N,V_localizedAppTitle
hasRetrievedMetadata
TB,N,V_hasRetrievedMetadata
changeType
Tq,N,V_changeType
success
TB,N,V_success
error
T@"NSError",&,N,V_error
isLicensed
TB,R,N,V_isLicensed
purchase
T@"SSPurchase",R,N,V_purchase
isRedownload
TB,R,N,V_isRedownload
isRedemptionNeeded
TB,R,N,V_isRedemptionNeeded
com.apple.mdm.software_update
setState ReadyToDownload: downloadable = %d, errorCode = %ld
%s - _state: %d; isReady: %d; error: %@
__36-[MCSoftwareUpdateManager setState:]_block_invoke
v20@?0B8@"NSError"12
%s - _state: %d
-[MCSoftwareUpdateManager refreshState]
%s - _state: %d; error: %@
__39-[MCSoftwareUpdateManager refreshState]_block_invoke
%s - _state: %d; isScanning: %d; _update: %p; _download: %p; error: %@
__39-[MCSoftwareUpdateManager refreshState]_block_invoke_2
v24@?0@"SUDownload"8@"NSError"16
-[MCSoftwareUpdateManager scanForUpdateCompletion:]
v24@?0@"SUDescriptor"8@"NSError"16
%s - _state: %d; operationProgress: %@; download done: %d
-[MCSoftwareUpdateManager updateStateFromDownload:]
%s - phase: %@
%s - _state: %d; error: %@; update: %p
-[MCSoftwareUpdateManager scanFinishedWithUpdate:error:]
-[MCSoftwareUpdateManager client:scanRequestDidStartForOptions:]
%s - error: %@; _state: %d
-[MCSoftwareUpdateManager client:scanDidCompleteWithNewUpdateAvailable:error:]
-[MCSoftwareUpdateManager client:downloadDidStart:]
-[MCSoftwareUpdateManager client:downloadDidFinish:]
Download failed with error: %@
-[MCSoftwareUpdateManager client:installDidFail:withError:]
-[MCSoftwareUpdateManager client:downloadWasInvalidatedForNewUpdateAvailable:]
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
downloadMetadata
T@"SUMutableDownloadMetadata",&,N,V_downloadMetadata
suManagerClient
T@"SUManagerClient",&,N,V_suManagerClient
state
Ti,N,V_state
delegate
T@"<MCSoftwareUpdateManagerDelegate>",W,N,V_delegate
update
T@"SUDescriptor",&,N,V_update
download
T@"SUDownload",&,N,V_download
com.apple.mdmd.downloads.media.nonstore
MCManagedMediaManager member queue
MCManagedMediaManager suspension queue
v32@?0@8Q16^B24
Book failed to download: %@
Error: %@
Book completed downloading: %@
v16@?0@"NSError"8
Books
Path
Failed to set backup exclusion on managed books directory
Cannot write book without persistent ID to manifest: %@
Cannot write book without iTunes Store ID to manifest: %@
Cannot cancel downloads. Ignoring. Error: %@
Starting installation of book: %@
Replacing a book of kind %@ with a book of kind %@ is not allowed.
MDM_ERROR_INVALID_MEDIA_REPLACEMENT_TYPE
Beginning download of book %@
MDM_ERROR_MEDIA_CANNOT_DOWNLOAD
MDM_ERROR_COULD_NOT_VALIDATE_MEDIA_ID
MDM_ERROR_COULD_NOT_FIND_VPP_LINCESE
Refreshing book purchase history and trying again.
Searching book purchase history for iTunes Store ID %@
Could not look up book purchase history. Error: %@
Found book: %@
We found a book, but it was not VPP-licensed. Book %@
v12@?0B8
Could not find book in VPP purchase history.
v24@?0@"NSArray"8@"NSError"16
Starting installation of book with iTunes Store ID %@
MDM_BOOK_INSTALL_TITLE
MDM_BOOK_LOGIN_MESSAGE_P_ORG
MDM_BOOK_LOGIN_MESSAGE_P_SERVER
MDM_ERROR_MUST_LOGIN
v24@?0@"NSError"8@"MCBook"16
Removing %u non-store books because we have reported their transient state.
Removing %u store books because we have reported their transient state.
Cancelling all book downloads.
Removing managed books.
memberQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_memberQueue
memberQueuePersistentIDToNonStoreBook
T@"NSMutableDictionary",&,N,V_memberQueuePersistentIDToNonStoreBook
memberQueueiTunesStoreIDToStoreBook
T@"NSMutableDictionary",&,N,V_memberQueueiTunesStoreIDToStoreBook
suspensionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_suspensionQueue
suspensionQueueIsMemberQueueSuspended
TB,N,V_suspensionQueueIsMemberQueueSuspended
epub
ibooks
com.apple.managedconfiguration.mdmd
MediaBypassVPPCheck
Error excluding %@ from backup. Path does not exist.
Error excluding %@ from backup %@
%@ Request starting. Timeout: %.1f seconds
%@ Canceling request...
%@ Request failed. Error: %@
%@ Request completed.
%@ Request timed out. Canceling.
STORE_TIMEOUT
request
T@"SSRequest",R,&,N,V_request
%@ Starting item lookup.
%@ Found %d items.
T@"SSItemLookupRequest",R,&,D,N
STORE_LOGIN_FAILED
Not prompting for iTunes account in limited apps mode.
%@ starting user authentication.
User successfully logged into iTunes account.
User failed to log into iTunes account. Reason code: %ld
T@"SSAuthenticateRequest",R,&,D,N
%@ Starting manifest download request.
%@ Received response: %@
T@"SSDownloadManifestRequest",R,&,D,N
shouldHideUserPrompts
TB,N
%@ Starting personalization request.
%@ received response: %@
T@"SSPersonalizeOffersRequest",R,&,D,N
T@"SSPurchaseRequest",R,&,D,N
Idle
NotPermitted
NotNow
Command
CommandUUID
Token
Topic
PushMagic
UnlockToken
DeviceInformation
ProfileList
RemoveProfile
InstallProfile
InstallProfileSilent
DeviceLock
EnableLostMode
DisableLostMode
DeviceLocation
EraseDevice
CertificateList
ProvisioningProfileList
InstallProvisioningProfile
RemoveProvisioningProfile
InstalledApplicationList
InstallApplication
ValidateApplications
ApplyRedemptionCode
ManagedApplicationList
RemoveApplication
ManagedApplicationConfiguration
ManagedApplicationFeedback
ManagedApplicationAttributes
Restrictions
SecurityInfo
ClearPasscode
ClearRestrictionsPassword
Settings
RequestUnlockToken
RequestMirroring
StopMirroring
InviteToProgram
ActivationLockBypassCode
ClearActivationLockBypassCode
InstallMedia
ManagedMediaList
RemoveMedia
DeviceConfigured
UserList
LogOutUser
DeleteUser
ScheduleOSUpdate
ScheduleOSUpdateScan
AvailableOSUpdates
OSUpdateStatus
Queries
QueryResponses
IsManaged
Payload
ProvisioningProfile
UUID
ProfileRestrictions
GlobalRestrictions
HardwareEncryptionCaps
PasscodePresent
PasscodeCompliant
PasscodeCompliantWithProfiles
PasscodeLockGracePeriod
PasscodeLockGracePeriodEnforced
ErrorChain
LocalizedDescription
USEnglishDescription
ErrorDomain
ErrorCode
Identifier
Attributes
Configuration
Options
NotManaged
PurchaseMethod
Item
DeviceName
Wallpaper
Where
Image
DataRoaming
Enabled
VoiceRoaming
PersonalHotspot
ApplicationConfiguration
ApplicationAttributes
MaximumResidentUsers
OrganizationInfo
MDMOptions
DiagnosticSubmission
AppAnalytics
ManifestURL
ManagementFlags
State
ChangeManagementState
RedemptionCode
Managed
Identifiers
Status
UnusedRedemptionCode
HasConfiguration
HasFeedback
IsValidated
iOSUpdate
Downloading
Installing
DownloadFailed
DownloadRequiresComputer
DownloadInsufficientSpace
DownloadInsufficientPower
DownloadInsufficientNetwork
InstallInsufficientSpace
InstallInsufficientPower
InstallFailed
Version
Latitude
Longitude
com.apple.configuration.managed
com.apple.feedback.managed
MediaURL
MediaType
Book
PersistentID
Author
Title
Kind
RejectionReason
WrongMediaType
PurchaseMethodNotSupported
ManagementChangeNotSupported
PurchaseMethodNotSupportedInMultiUser
MDM_ERROR_MALFORMED_REQUEST
MDM_ERROR_INVALID_REQUEST_TYPE_P_REQUEST
MDM_ERROR_NOT_AUTHORIZED
MDM_ERROR_NOT_MANAGED_P_APP_ID
MDM_ERROR_INVALID_REQUEST_TYPE_IN_MDM_LOST_MODE_P_REQUEST
Attempting to perform Supervised request: %@
Attempting to perform MDM request: %@
Device is in an explicit whitelist mode
com.apple.purplebuddy
Device is in MDM Lost Mode
Handling request type: %@
Handling request: %@
HasRemovalPasscode
IsEncrypted
SignerCertificates
Returning profile list: %@
Message
PhoneNumber
MessageResult
Failed to set lock screen message. Error: %@
NoPasscodeSet
DeviceInLostMode
Unknown
Success
Footnote
Could not to enable MDM Lost Mode: %@
MDM_ERROR_COULD_NOT_ENABLE_MDM_LOST_MODE
MDM_ERROR_MDM_LOST_MODE_NEEDS_MESSAGE_OR_PHONE_NUMBER
Could not to disable MDM Lost Mode: %@
MDM_ERROR_COULD_NOT_DISABLE_MDM_LOST_MODE
MDM_ERROR_DEVICE_NOT_IN_MDM_LOST_MODE
MDM_ERROR_COULD_NOT_DETERMINE_DEVICE_LOCATION
-- Simulated device erase --
Can't query for device locator lock state. Error: %@
v24@?0Q8@"NSError"16
Can't query for activation lock state. Error: %@
Data
CommonName
IsIdentity
MDM_ERROR_PROVISIONING_UNMANAGED_REMOVE
ShortVersion
Name
BundleSize
DynamicSize
ManagedAppsOnly
MDMQueryableRestrictionKeys
plist
Ignoring supervision profile.
MDM_ERROR_SPECIFIED_PROFILE_NOT_INSTALLED_P_ID
MDM_ERROR_PROFILE_UNMANAGED_REMOVE_P_ID
Setting device name.
TUNNEL_ERROR_DEVICE_NAME_UNSETTABLE
Wallpaper setting unavailable in Simulator.
SETTINGS_WALLPAPER_CANNOT_SET
Setting data roaming enabled: %@
Setting voice roaming enabled: %@
Setting maximum resident users.
Setting diagnostic submission allowed: %@
Setting app analytics allowed: %@
Setting grace period: %d seconds
SETTINGS_UNKNOWN_ITEM_P_ITEM
Ignoring setting command missing the Item key
MDM_ERROR_APP_STORE_DISABLED
v36@?0@"NSError"8@"NSString"16i24@"NSString"28
MDM_ERROR_INVALID_URL
ApplicationConfigurations
DeleteFeedback
Feedback
MDM_ERROR_APP_NOT_MANAGED_P_APP_ID
MDM_ERROR_CANNOT_REMOVE_APP_P_APP_ID
DestinationName
DestinationDeviceID
Password
ScanTime
Prompting
DestinationNotFound
Cancelled
MirroringResult
InvitationResult
InvitationURL
AppStoreNotAllowed
ForceInvitationURLIsValid
com.apple.managedconfiguration
vpp-licensing-invitation-url-pattern
InvalidInvitationURL
ProgramID
com.apple.cloudvpp
InvalidProgramID
Acknowledged
Could not load PSRestrictionsController class
Invalid URL: %@
Invalid book kind: %@
v32@?0@"NSError"8@"MCBook"16@"NSString"24
Could not update await device configure - %@
Device asked to end device configuration, but no cloud configuration yet in place.
MDM_ERROR_SU_NOT_PERMITTED_WITH_LOGGED_IN_USER
%@%@
managingProfileIdentifier
T@"NSString",&,N,V_managingProfileIdentifier
isChaperoned
TB,R,N,V_isChaperoned
isMDM
TB,N,V_isMDM
AppAlreadyInstalled
AppAlreadyQueued
CouldNotVerifyAppID
NotAnApp
SystemApp
UserRejected
LicenseNotFound
Cannot read manifest. Error: %@
com.apple.MCManagedAppManager.manifestQueue
com.apple.MCManagedAppManager.installQueue
MDM_ERROR_NOT_AN_APP
MDM_ERROR_ALREADY_INSTALLED_P_APP_ID
MDM_ERROR_SYSTEM_APP_P_APP_ID
MDM_ERROR_ALREADY_QUEUED_P_APP_ID
MDM_ERROR_ALREADY_QUEUED_P_ITUNES_STORE_ID
MDM_ERROR_COULD_NOT_VALIDATE_MANIFEST_P_URL
MDM_ERROR_LICENSE_NOT_FOUND
MDM_ERROR_LICENSE_NOT_FOUND_P_ITUNES_STORE_ID
Looking for managed app states to clean up
MDM_APP_UPDATE_TITLE
MDM_APP_INSTALL_TITLE
MDM_APP_UPDATE_MESSAGE_P_ORG_P_APPNAME
MDM_APP_UPDATE_MESSAGE_P_SERVER_P_APPNAME
MDM_APP_INSTALL_MESSAGE_P_ORG_P_APPNAME
MDM_APP_INSTALL_MESSAGE_P_SERVER_P_APPNAME
MDM_APP_UPDATE_ENTERPRISE_P_ORG_P_APPNAME
MDM_APP_UPDATE_ENTERPRISE_P_SERVER_P_APPNAME
MDM_APP_INSTALL_ENTERPRISE_P_ORG_P_APPNAME
MDM_APP_INSTALL_ENTERPRISE_P_SERVER_P_APPNAME
MDM_APP_INSTALL_BUTTON_UPDATE
MDM_APP_INSTALL_BUTTON_INSTALL
MDM_APP_INSTALL_BUTTON_CANCEL
MDM_APP_MANAGEMENT_TAKEOVER_TITLE
MDM_APP_MANAGEMENT_TAKEOVER_WILL_CLOSE_MESSAGE_P_ORG_P_APPNAME
MDM_APP_MANAGEMENT_TAKEOVER_WILL_CLOSE_MESSAGE_P_SERVER_P_APPNAME
MDM_APP_MANAGEMENT_TAKEOVER_WILL_MANAGE_AND_CLOSE_MESSAGE_P_ORG_P_APPNAME
MDM_APP_MANAGEMENT_TAKEOVER_WILL_MANAGE_AND_CLOSE_MESSAGE_P_SERVER_P_APPNAME
MDM_APP_MANAGEMENT_TAKEOVER_MESSAGE_P_ORG_P_APPNAME
MDM_APP_MANAGEMENT_TAKEOVER_MESSAGE_P_SERVER_P_APPNAME
MDM_APP_MANAGEMENT_TAKEOVER_BUTTON_CLOSE_APP
MDM_APP_MANAGEMENT_TAKEOVER_BUTTON_MANAGE
MDM_APP_MANAGEMENT_TAKEOVER_BUTTON_CANCEL
MDM_APP_INSTALL_BUTTON_DISMISS
MDM_APP_INSTALL_FAIL_P_APP
MDM_APP_UPDATE_FAIL_P_APP
The user did not log in to their iTunes account. Error: %@
Prompting user to log in to iTunes account %@
Lookup completed. Result: %@
Starting installation of enterprise app at URL %@
Installation of enterprise app completed with error: %@
Installation of enterprise app completed.
v24@?0@"NSError"8@"SSDownloadManifestResponse"16
MDM_ERROR_COULD_NOT_VALIDATE_APP_ID
Looking up app information on iTunes Store.
Could not find app information.
v24@?0@"SSLookupResponse"8@"NSError"16
Searching purchase history for app with iTunes Store ID %@
v40@?0q8r^@16Q24^B32
The app is not in the user's purchase history.
B16@?0@"SSAppPurchaseHistoryTransaction"8
Refreshing purchase history
v24@?0@"NSError"8@"SSPurchase"16
Attempting management with installed app %@ using store metadata
Incomplete store metadata was provided to install/prompt for store app installation: %@
Prompting user for management for store app %@
User consented to management of app %@
Could not find iTunes Store ID for newly managed app
Could not find localized app title for newly managed app
User didn't consent to management of app %@
iTunes Store reports no license found
iTunes Store reported error on license check with error: %@
Legacy installing as app not installed
App with iTunes Store ID %@ is already being installed by iTunes Store.
v36@?0B8@"NSDictionary"12q20@"NSError"28
No iTunes Store ID given for app %@. Retrieving information from iTunes
iTunes Store lookup error occurred on app %@.  Error: %@
Could not find metadata in iTunes Store for app %@
Failed to find iTunes Store ID for app %@
v32@?0@"NSError"8@"SSPurchase"16B24B28
Retrieving metadata from iTunes Store for iTunes Store ID %@
Final VPP app installation attempted without checking license & retrieving metadata
Attempted to try installation though metadata indicates no VPP license is available
Could not validate store app ID
Could not validate store app bundle ID
Could not validate store app localized title
Prompting user for store app installation of %@.  Is update: %d
User consented to %@ of app %@
install
Attempting to perform SSV install request for Adam ID %@
Failed to validate & install iTunes ID %@ through SSVInstall (Change Type: %ld). Error: %@
Successfully started install iTunes ID %@ through SSV (Change Type: %ld)
User didn't consent to %@ of app %@
MDM_ERROR_USER_REJECTED_MEDIA
Failed to retrieve iTunes Store metadata via legacy calls with error: %@
v24@?0@"NSError"8@"MCStoreAppMetadata"16
MDM_APP_LOGIN_MESSAGE_P_ORG
MDM_APP_LOGIN_MESSAGE_P_SERVER
Could not retrieve metadata for the app. Error: %@
Could not retrieve item from purchase history.
Legacy app install called for user-licensed app with incomplete metadata: %@
Final legacy app installation attempted without checking license & retrieving metadata
v20@?0i8@"SSAccount"12
items
MDM_ERROR_TOO_MANY_APPS_IN_MANIFEST
metadata
kind
software
bundle-identifier
title
Prompting user for managment of enterprise app %@
User consented to management of enterprise app %@
User didn't consent to management of enterprise app %@
Enterprise app installation failed. Error: %@
MDM_ERROR_INVALID_REDEMPTION_CODE
MDM_ERROR_NOT_WAITING_FOR_REDEMPTION_P_APP_ID
Code redemption for %@ aborted.
User did not successfully sign in to iTunes account. Error: %@
Could not redeem code. Error: %@
Successfully redeemed code.
v24@?0@"SSRedeemCodesResponse"8@"NSError"16
Code redemption rejected.
Cancelling download of app %@
Resuming download for app %@
Resuming download for app with iTunes Store ID %@
Queued
NeedsRedemption
Redeeming
PromptingForLogin
ValidatingPurchase
ManagedButUninstalled
UserInstalledApp
Failed
PromptingForUpdate
PromptingForUpdateLogin
ValidatingUpdate
Updating
UpdateRejected
PromptingForManagement
ManagementRejected
manifestPath
T@"NSString",C,N,V_manifestPath
manifest
T@"NSMutableDictionary",&,N,V_manifest
manifestQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_manifestQueue
installQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_installQueue
jobQueue
T@"MCJobQueue",&,N,V_jobQueue
Device last located on %@. Creating localized message
MDM_LOST_MODE_LOCATION_REQUEST_MESSAGE_P_ORG_P_TIME_P_DATE_
MDM_LOST_MODE_LOCATION_REQUEST_MESSAGE_P_SERVER_P_TIME_P_DATE_
locationManager
T@"CLLocationManager",&,N,V_locationManager
currentLocation
T@"CLLocation",&,N,V_currentLocation
currentError
T@"NSError",&,N,V_currentError
semaphore
T@"NSObject<OS_dispatch_semaphore>",&,N,V_semaphore
kMCAPMPromptingStatusDidChangeNotification
MCAirPlayManager execution queue
MCAirPlayManager member queue
MDM_AIRPLAY_TITLE
MDM_AIRPLAY_NOT_AVAILABLE_P_NAME
MDM_AIRPLAY_BUTTON_DISMISS
AirPlay Pickable routes changed.
v16@?0@"NSNotification"8
Route changed. Info: %@
RouteName
AirPlayPortExtendedInfo
deviceID
Stop listening to media remote notifications.
Start listening to media remote notifications.
Received unknown event: %d
MDM_AIRPLAY_MESSAGE_P_NAME_
MDM_AIRPLAY_BUTTON_ACCEPT
MDM_AIRPLAY_BUTTON_DECLINE
Waiting to look for AirPlay issues.
Done looking for AirPlay issues.
User declined AirPlay Mirroring.
AirPlay Mirroring alert dismissed programmatically.
AirPlay Mirroring alert could not be displayed. Ignoring.
AirPlay Mirroring alert could not be displayed due to an unknown error. Ignoring.
RouteSupportsAirPlayScreen
AVAudioRouteName
Speaker
executionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_executionQueue
userNotificationManager
T@"MCUserNotificationManager",&,N,V_userNotificationManager
memberQueueCurrentlyJoiningDestinationName
T@"NSString",&,N,V_memberQueueCurrentlyJoiningDestinationName
memberQueueCurrentlyJoiningDestinationDeviceID
T@"NSString",&,N,V_memberQueueCurrentlyJoiningDestinationDeviceID
executionQueueBonjourWaitContinuation
T@?,C,N,V_executionQueueBonjourWaitContinuation
executionQueueBonjourWaitTimerContext
T@"MCTimerContext",&,N,V_executionQueueBonjourWaitTimerContext
MCManagedAssetManager
MCUtilities
MCStoreAppMetadata
MCSoftwareUpdateManager
SUManagerClientDelegate
NSObject
MCManagedMediaManager
MCMDMUtilities
MCSSRequestDelegate
SSRequestDelegate
MCSSItemLookupRequestDelegate
SSItemLookupRequestDelegate
MCSSAuthenticationRequestDelegate
SSAuthenticateRequestDelegate
MCSSDownloadManifestRequestDelegate
SSDownloadManifestRequestDelegate
MCSSPersonalizeOffersDelegate
SSPersonalizeOffersDelegate
MCUserMDMParser
MCMISValidation
MCSSPurchaseRequestDelegate
SSPurchaseRequestDelegate
MCMDMParser
MCManagedAppManager
MCJobQueueObserver
MCMDMLostDeviceLocationManager
CLLocationManagerDelegate
MCAirPlayManager
MCAppleAccountUtilities
v48@0:8@16@24@32@?40
v48@0:8@16B24B28@32@?40
v40@0:8@16@24@?32
v16@0:8
@16@0:8
v24@0:8@16
@"MCMDMServer"
@32@0:8@16@24
@52@0:8@16@24q32B40@44
@24@0:8@16
@32@0:8@16B24B28
B16@0:8
v32@0:8@16B24B28
v44@0:8@16q24B32@36
v20@0:8B16
q16@0:8
v24@0:8q16
@"NSString"
@"NSNumber"
@"NSError"
@"SSPurchase"
v32@0:8@16@24
v32@0:8@"SUManagerClient"16@"SUScanOptions"24
v48@0:8@16@24@32@40
v48@0:8@"SUManagerClient"16@"SUScanOptions"24@"SUDescriptor"32@"NSError"40
v40@0:8@16@24@32
v40@0:8@"SUManagerClient"16@"SUDescriptor"24@"NSError"32
v32@0:8@"SUManagerClient"16@"SUDescriptor"24
v32@0:8@"SUManagerClient"16@"SUDownload"24
v40@0:8@"SUManagerClient"16@"SUDownload"24@"NSError"32
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v28@0:8i16@20
v20@0:8i16
v24@0:8@?16
i16@0:8
@"SUManagerClient"
@"<MCSoftwareUpdateManagerDelegate>"
@"SUDescriptor"
@"SUDownload"
@"SUMutableDownloadMetadata"
v32@0:8@16@?24
v56@0:8@16@24@32@40@?48
v44@0:8@16@24i32@?36
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
B28@0:8B16@20
v32@0:8@"SSRequest"16@"NSError"24
v24@0:8@"SSRequest"16
v32@0:8d16@?24
@"SSRequest"
@"NSTimer"
v32@0:8@"SSItemLookupRequest"16@"NSArray"24
@"NSArray"
v32@0:8@"SSAuthenticateRequest"16@"SSAuthenticateResponse"24
@"SSAccount"
v32@0:8@"SSDownloadManifestRequest"16@"SSDownloadManifestResponse"24
@"SSDownloadManifestResponse"
v32@0:8@"SSPersonalizeOffersRequest"16@"SSPersonalizeOffersResponse"24
@"SSPersonalizeOffersResponse"
@28@0:8@16i24
@20@0:8i16
v40@0:8@"SSPurchaseRequest"16@"SSPurchase"24@"NSError"32
v32@0:8@"SSPurchaseRequest"16@"SSPurchase"24
v44@0:8@16i24@28@?36
@36@0:8@16i24q28
@32@0:8@16q24
B36@0:8@16i24^@28
@32@0:8@16^@24
@40@0:8@16^@24^B32
@28@0:8@16B24
@24@0:8q16
B24@0:8q16
i24@0:8@16
B32@0:8@16Q24
B32@0:8@16^B24
v56@0:8@16@24B32B36@40@?48
v52@0:8@16@24B32@36@?44
v44@0:8@16B24@28@?36
v60@0:8@16@24@32B40@44@?52
v64@0:8@16@24@32@40@48@?56
B56@0:8@16i24B28^@32^B40^@48
v52@0:8@16B24@28@36@?44
v44@0:8@16@24B32@?36
v80@0:8@16@24q32i40i44@48@56@64@?72
v72@0:8@16q24i32i36@40@48@56@?64
v64@0:8@16i24i28@32@40@48@?56
v60@0:8@16i24@28@36@44@?52
B48@0:8@16@24@32^@40
B48@0:8@16@24^@32^B40
@"MCJobQueue"
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@16q24@32
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@16i24
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
@"CLLocationManager"
@"CLLocation"
@"NSObject<OS_dispatch_semaphore>"
v64@0:8@16@24@32d40@48@?56
@40@0:8@16@24@32
@?16@0:8
@"MCUserNotificationManager"
@"MCTimerContext"
333333
