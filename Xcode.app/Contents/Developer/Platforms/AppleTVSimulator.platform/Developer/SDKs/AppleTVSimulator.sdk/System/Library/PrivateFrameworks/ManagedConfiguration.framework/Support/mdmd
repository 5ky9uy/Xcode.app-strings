com.apple.managedconfiguration.mdmd-access
com.apple.managedconfiguration.profiled-access
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
Accepted new connection.
XPC_ERROR_LACKS_ENTITLEMENT_CODE
v16@?0@"NSDictionary"8
xpcConnection
T@"NSXPCConnection",W,N,V_xpcConnection
.Managed.plist.lock
MDM migrating...
Managed
Found non-store managed books in seed-only system location. Migrating...
MDM completed migration.
Migrating non-store managed books to system group container...
Moving legacy non-store managed books directory...
Failed to move legacy non-store managed books with error %@
Failed to delete legacy non-store managed books with error %@
Failed to move legacy non-store managed books with no error
Failed to set permissions on new non-store managed books directory with error %@
Removing empty legacy non-store managed books...
Failed to delete empty legacy non-store managed books with error %@
Failed to fix permissions of device's MDM managed non-store books with errors %@
Completed non-store managed books system group container migration.
Beginning update of non-store managed books manifest...
Completed non-store managed books manifest update.
Migrating enterprise book backup flag...
Failed to set backup exclusion on enterprise books directory
Set backup exclusion on enterprise books directory to %d
mdmd starting...
Idled.
v16@?0@"NSNotification"8
Unidled.
Power assertion dropped.
Power assertion asserted.
mdmd stopping.
v8@?0
UDID
OrganizationInfo
MCMDMServer member queue
Could not get device locator state. Error: %@
Could not get activation lock state. Error: %@
Enabling activation lock.
Could not enable activation lock. Error: %@
v16@?0@"NSError"8
v20@?0B8@"NSError"12
v24@?0Q8@"NSError"16
MDM_ERROR_MISSING_IDENTITY
Waiting for push token to be assigned to this device...
MDM_ERROR_BAD_INSTALLATION
No valid MDM installation found. MDM will not listen to push messages.
v12@?0B8
com.apple.purplebuddy.setupdone
v12@?0i8
Valid MDM configuration found.
No valid MDM configuration found.
Not polling in response to reachability change. Waiting for device to unlock first.
Scheduling poll of MDM server.
No cached response to send.
Checking for outstanding activity. Reachability event: %d
Push token received.
Received push notification.
Ignoring push notification with mismatched topic: %@
Rejecting MDM push dictionary because it does not contain the "%@" key
Rejecting MDM push dictionary because the "%@" key is not a string.
Rejecting MDM push dictionary because it does not have the right magic string.
Ignoring extra keys in push dictionary: %@
simulatorToken
Removing MDM profile.
MDM_ERROR_UNAUTHORIZED_BY_SERVER
Telling server about new device token.
Telling MDM Check-In Server about new device token.
User switch already initiated. Not telling server about new token right now.
Cannot tell MDM server about updated token. Error: %@
Transaction completed. Status: %d
Cannot tell server of a new push token. Error: %@
v16@?0@"NSData"8
v32@?0@"NSData"8q16@"NSError"24
Polling MDM server %@ for next command.
User switch already initiated. Not polling the server for commands right now.
Could not send response to MDM server. Error: %@
Could not parse command. Error: %@
Server has no commands for this device.
Command Status: %@
Command Status: %@
Error: %@
Network reachability has changed.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ManagedConfigurationTools_Sim/ManagedConfiguration-1427/MDM/MCMDMServer.m
-[MCMDMServer notifyNewConfigurationWithCompletion:]
-[MCMDMServer scheduleTokenUpdateWithCompletion:]
-[MCMDMServer scheduleTokenUpdateIfNecessaryWithCompletion:]
-[MCMDMServer simulatePushWithCompletion:]
-[MCMDMServer retryNotNowWithCompletion:]
Last response was not a NotNow. Ignoring poll request.
-[MCMDMServer uprootMDMWithCompletion:]
Uprooting MDM installation
memberQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_memberQueue
memberQueueDevAPSConnection
T@"APSConnection",&,N,V_memberQueueDevAPSConnection
memberQueueProdAPSConnection
T@"APSConnection",&,N,V_memberQueueProdAPSConnection
memberQueueIsMDMConfigurationValid
TB,N,V_memberQueueIsMDMConfigurationValid
memberQueueManagingProfileIdentifier
T@"NSString",&,N,V_memberQueueManagingProfileIdentifier
memberQueueIdentity
T^{__SecIdentity=},N,V_memberQueueIdentity
memberQueueTopic
T@"NSString",&,N,V_memberQueueTopic
memberQueueServerURL
T@"NSURL",&,N,V_memberQueueServerURL
memberQueueCheckInURL
T@"NSURL",&,N,V_memberQueueCheckInURL
memberQueueOrganizationInfo
T@"NSDictionary",&,N,V_memberQueueOrganizationInfo
memberQueueMDMOptions
T@"NSDictionary",&,N,V_memberQueueMDMOptions
memberQueueAccessRights
Ti,N,V_memberQueueAccessRights
memberQueueUseDevelopmentAPNS
TB,N,V_memberQueueUseDevelopmentAPNS
memberQueuePushMagic
T@"NSString",&,N,V_memberQueuePushMagic
memberQueueSignMessage
TB,N,V_memberQueueSignMessage
memberQueuePushToken
T@"NSData",&,N,V_memberQueuePushToken
memberQueuePollRequested
TB,N,V_memberQueuePollRequested
memberQueueTimerContext
T@"MCTimerContext",&,N,V_memberQueueTimerContext
memberQueuePowerAssertionAssertedNotificationToken
Ti,N,V_memberQueuePowerAssertionAssertedNotificationToken
memberQueuePowerAssertionDeassertedNotificationToken
Ti,N,V_memberQueuePowerAssertionDeassertedNotificationToken
memberQueueCommandUUID
T@"NSString",&,N,V_memberQueueCommandUUID
memberQueueUserSwitchAlreadyInitiated
TB,N,V_memberQueueUserSwitchAlreadyInitiated
jobQueue
T@"MCJobQueue",&,N,V_jobQueue
memberQueueCachedResponse
T@"NSDictionary",&,N
memberQueueLastResponseWasNotNow
TB,N
executionQueuePushTokenWaitContinuationBlock
T@?,C,N,V_executionQueuePushTokenWaitContinuationBlock
executionQueueIsCheckinInProgress
TB,N,V_executionQueueIsCheckinInProgress
eventQueueBusyCount
Ti,N,V_eventQueueBusyCount
serverURL
T@"NSURL",R,N
organizationInfo
T@"NSDictionary",C,N
lastResponseWasNotNow
TB,R,N
tokenUpdateScheduled
TB,R,N,GisTokenUpdateScheduled
userSwitchAlreadyInitiated
MDMOptions
notifyNewConfigurationWithCompletion:
scheduleTokenUpdateWithCompletion:
scheduleTokenUpdateIfNecessaryWithCompletion:
simulatePushWithCompletion:
retryNotNowWithCompletion:
migrateMDMWithContext:completion:
uprootMDMWithCompletion:
processUserRequest:completionBlock:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
interfaceWithProtocol:
setExportedInterface:
setXpcConnection:
setExportedObject:
resume
listener:shouldAcceptNewConnection:
xpcConnection
valueForEntitlement:
boolValue
MCErrorWithDomain:code:descriptionArray:errorType:
remoteProcessHasEntitlement:
lacksEntitlementError:
sharedServer
.cxx_destruct
_xpcConnection
alloc
init
stringByAppendingPathComponent:
defaultManager
fileExistsAtPath:isDirectory:
_moveNonStoreManagedBooksToSystemGroupContainerFromLegacyPath:
_moveNonStoreManagedBooksToSystemGroupContainer
_updateNonStoreBooksManifestForSystemGroupContainer
_updateSkipBackupKeyForNonStoreBooksDirectory
touch
sharedConfiguration
userMode
removeItemAtPath:error:
contentsOfDirectoryAtPath:error:
count
firstObject
isEqualToString:
fileExistsAtPath:
numberWithUnsignedLong:
dictionaryWithObjects:forKeys:count:
setAttributes:ofItemAtPath:error:
dictionary
dictionaryWithContentsOfFile:
objectForKeyedSubscript:
countByEnumeratingWithState:objects:count:
initWithManifestDictionary:
persistentID
fullPath
hasPrefix:
lastPathComponent
setFullPath:
setObject:forKeyedSubscript:
arrayWithCapacity:
allValues
manifestDictionary
addObject:
writeToFile:atomically:
sharedConnection
isEnterpriseBookBackupAllowed
sharedMigrator
migrateMDMWithContext:
sharedManager
setServer:
cleanUp
cleanUpWithAssertion:completionBlock:
defaultCenter
mainQueue
addObserverForName:object:queue:usingBlock:
startOutError:
initWithMachServiceName:
setDelegate:
currentRunLoop
distantFuture
runMode:beforeDate:
invalidate
dateWithTimeIntervalSinceNow:
date
compare:
lastResponseWasNotNow
isTokenUpdateScheduled
setExecutionQueue:
setObserver:
memberQueueIdentity
dealloc
memberQueue
memberQueueServerURL
setMemberQueueServerURL:
memberQueueOrganizationInfo
copy
setMemberQueueOrganizationInfo:
removeObjectForKey:
MCSCWriteToFile:atomically:
memberQueueMDMOptions
setMemberQueueMDMOptions:
sharedInstance
enableActivationLockWithCompletion:
isActivationLockedWithCompletion:
fmipStateWithCompletion:
isEqualToData:
memberQueueLastResponseWasNotNow
objectForKey:
setMemberQueueLastResponseWasNotNow:
numberWithBool:
setObject:forKey:
tokenUpdateCount
setMemberQueueDevAPSConnection:
setMemberQueueProdAPSConnection:
setMemberQueueIsMDMConfigurationValid:
setMemberQueueIdentity:
setMemberQueueCheckInURL:
setMemberQueueManagingProfileIdentifier:
setMemberQueueAccessRights:
setMemberQueueUseDevelopmentAPNS:
setMemberQueuePushMagic:
memberQueueForgetCurrentConfiguration
dataWithContentsOfFile:
MCSafePropertyListWithData:options:format:error:
copyIdentityWithPersistentID:useSystemKeychain:
memberQueueManagingProfileIdentifier
setMemberQueueTopic:
memberQueueTopic
initWithString:
unsignedIntValue
setMemberQueueSignMessage:
memberQueuePushMagic
initWithEnvironmentName:namedDelegatePort:
memberQueueDevAPSConnection
mainRunLoop
scheduleInRunLoop:
memberQueueProdAPSConnection
memberQueueUseDevelopmentAPNS
arrayWithObject:
setEnabledTopics:
publicToken
setMemberQueuePushToken:
memberQueuePushToken
pushTokenCompletionBlock:
MCErrorWithDomain:code:descriptionArray:suggestion:USEnglishSuggestion:underlyingError:errorType:
checkIn
readConfigurationOutError:
jobQueue
jobDidFinish
executionQueueCheckForOutstandingActivityIsReachabilityEvent:assertion:completionBlock:
enqueueJob:
sharedNetworkObserver
_networkReachabilityDidChange
addNetworkReachableObserver:selector:
buddyDidFinish
cachedResponse
deviceIsLocked
schedulePollingServerForCommandWithAssertion:
memberQueueIsMDMConfigurationValid
_executionQueueCheckForOutstandingActivityIsReachabilityEvent:assertion:completionBlock:
executionQueueTellServerAboutDeviceTokenWithAssertion:completionBlock:
executionQueue
executionQueuePushTokenWaitContinuationBlock
setExecutionQueuePushTokenWaitContinuationBlock:
MCSHA1Hash
memberQueueLastPushTokenHash
setMemberQueueLastPushTokenHash:
memberQueueIncrementTokenUpdateRequestCount
initWithDictionary:
executionQueuePollServerForCommandWithAssertion:completionBlock:
dataUsingEncoding:
removeProfileAsyncWithIdentifier:
setTokenUpdateRequestCountToZero
setCachedResponse:
executionQueueIsCheckinInProgress
setExecutionQueueIsCheckinInProgress:
memberQueueAccessRights
memberQueueCheckInURL
memberQueueSignMessage
userSwitchAlreadyInitiated
setMemberQueueTokenUpdateRequestCount:
isAwaitingDeviceConfigured
mutableCopy
dataWithPropertyList:format:options:error:
transactionWithURL:method:
setTimeout:
setUserAgent:
setContentType:
setData:
setIdentity:
setCMSSignatureHeaderName:
performSynchronously
error
MCVerboseDescription
statusCode
executionQueueRemoveMDMProfileWithAssertion:
unauthorizedByServerError
memberQueueDecrementTokenUpdateRequestCount
memberQueueTokenUpdateCount
performOutstandingActivities
dictionaryWithObjectsAndKeys:
responseData
performCompletionBlock:
sendResponse:completionBlock:
setMemberQueuePollRequested:
_idleResponse
length
malformedRequestErrorResult
setMemberQueueCachedResponse:
executionQueueHandleRequest:withMDMParserOfClass:assertion:completionBlock:
dictionaryWithDictionary:
MCContainsErrorDomain:code:
errorChainFromError:
memberQueueCommandUUID
isSubclassOfClass:
initWithManagingProfileIdentifier:
setMemberQueueCommandUUID:
responseFromBasicResponse:
processRequest:accessRights:assertion:completionBlock:
memberQueueHasOutstandingActivity
memberQueueCachedResponse
intValue
numberWithInt:
isEphemeralMultiUser
memberQueueUserSwitchAlreadyInitiated
setMemberQueueUserSwitchAlreadyInitiated:
resumeMemberQueueIfSuspended
updateApplicationInstallationStates
advanceTransientStates
uninstallManagedAppsAccordingToFlagsWithAssertion:
uprootWithAssertion:completionBlock:
organizationInfo
serverURL
host
setUserSwitchAlreadyInitiated:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
setServerURL:
setOrganizationInfo:
MDMOptions
setMDMOptions:
setLastResponseWasNotNow:
sendResponseSynchronously:outStatusCode:outError:
hasOutstandingActivity
_keybagStateDidChange
organizationName
serverName
willSwitchUser
setMemberQueue:
memberQueuePollRequested
memberQueueTimerContext
setMemberQueueTimerContext:
memberQueuePowerAssertionAssertedNotificationToken
setMemberQueuePowerAssertionAssertedNotificationToken:
memberQueuePowerAssertionDeassertedNotificationToken
setMemberQueuePowerAssertionDeassertedNotificationToken:
setJobQueue:
eventQueueBusyCount
setEventQueueBusyCount:
_memberQueueIsMDMConfigurationValid
_memberQueueUseDevelopmentAPNS
_memberQueueSignMessage
_memberQueuePollRequested
_memberQueueUserSwitchAlreadyInitiated
_executionQueueIsCheckinInProgress
_memberQueueAccessRights
_memberQueuePowerAssertionAssertedNotificationToken
_memberQueuePowerAssertionDeassertedNotificationToken
_eventQueueBusyCount
_memberQueue
_memberQueueDevAPSConnection
_memberQueueProdAPSConnection
_memberQueueManagingProfileIdentifier
_memberQueueIdentity
_memberQueueTopic
_memberQueueServerURL
_memberQueueCheckInURL
_memberQueueOrganizationInfo
_memberQueueMDMOptions
_memberQueuePushMagic
_memberQueuePushToken
_memberQueueTimerContext
_memberQueueCommandUUID
_jobQueue
_executionQueuePushTokenWaitContinuationBlock
v24@0:8@?16
v24@0:8@?<v@?@"NSError">16
v28@0:8i16@?20
v28@0:8i16@?<v@?@"NSError">20
v32@0:8@16@?24
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@24@0:8@16
v16@0:8
v24@0:8@16
@"NSXPCConnection"
v20@0:8i16
v32@0:8@16@24
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@16@24@32@40
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@16@24@32
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@16B24
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v20@0:8B16
B24@0:8^@16
v36@0:8B16@20@?28
@40@0:8@16^q24^@32
v48@0:8@16#24@32@?40
i16@0:8
^{__SecIdentity=}16@0:8
v24@0:8^{__SecIdentity=}16
@?16@0:8
@"NSObject<OS_dispatch_queue>"
@"APSConnection"
@"NSString"
^{__SecIdentity=}
@"NSURL"
@"NSDictionary"
@"NSData"
@"MCTimerContext"
@"MCJobQueue"
MCMDMXPCProtocol
NSObject
MCMDMServiceDelegate
NSXPCListenerDelegate
MCMDMServicer
MCMDMMigrator
MCMDMServer
MCJobQueueObserver
APSConnectionDelegate
ffffff
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleExecutable</key>
<string>${EXECUTABLE_NAME}</string>
<key>CFBundleIdentifier</key>
<string>com.apple.managedconfiguration.mdmd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundlePackageType</key>
<string>com.apple.product-type.tool</string>
<key>CFBundleSignature</key>
<string>????</string>
<key>CFBundleVersion</key>
<string>1.0</string>
<key>NSMainNibFile</key>
<string>MainWindow</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string></string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
<string>identity</string>
</array>
<key>com.apple.MobileInternetSharing.allow</key>
<true/>
<key>com.apple.SystemConfiguration.SCPreferences-write-access</key>
<array>
<string>com.apple.AutoWake.xml</string>
<string>preferences.plist</string>
</array>
<key>com.apple.aosnotification.aosnotifyd-access</key>
<true/>
<key>com.apple.apsd.ios-device-push-token</key>
<true/>
<key>com.apple.bulletinboard.settings</key>
<true/>
<key>com.apple.icloud.FindMyDevice.FindMyDeviceHelperXPCService.access</key>
<true/>
<key>com.apple.icloud.findmydeviced.access</key>
<true/>
<key>com.apple.itunesstored.metrics</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.keystore.escrow.create</key>
<true/>
<key>com.apple.locationd.authorizeapplications</key>
<true/>
<key>com.apple.locationd.effective_bundle</key>
<true/>
<key>com.apple.lsapplicationproxy.deviceidentifierforvendor</key>
<true/>
<key>com.apple.managedconfiguration.mdmd-access</key>
<true/>
<key>com.apple.managedconfiguration.mdmuserd-access</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.mkb.usersession.delete</key>
<true/>
<key>com.apple.mkb.usersession.info</key>
<true/>
<key>com.apple.mkb.usersession.loginwindow</key>
<true/>
<key>com.apple.mobile.keybagd.UserManager.bubblepop</key>
<true/>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.lockdown.finegrained-get</key>
<array>
<string>NULL/DeviceName</string>
<string>com.apple.mobile.backup/LastCloudBackupDate</string>
</array>
<key>com.apple.private.lockdown.finegrained-set</key>
<array>
<string>NULL/DeviceName</string>
</array>
<key>com.apple.private.mobileinstall.allowedSPI</key>
<array>
<string>Uninstall</string>
<string>Lookup</string>
<string>CopyDiskUsageForLaunchServices</string>
<string>UninstallForLaunchServices</string>
<string>InstallForLaunchServices</string>
</array>
<key>com.apple.private.system-keychain</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.configurationprofiles</string>
<string>systemgroup.com.apple.media.books.managed</string>
</array>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>com.apple.springboard.wipedevice</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.certificates</string>
<string>com.apple.identities</string>
</array>
</dict>
</plist>
