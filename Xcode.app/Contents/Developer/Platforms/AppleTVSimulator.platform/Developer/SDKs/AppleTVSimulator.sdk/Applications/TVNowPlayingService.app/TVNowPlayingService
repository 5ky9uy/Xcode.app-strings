UUUUUU
j?333333
initWithFrame:
alloc
bounds
setClipsToBounds:
setContentMode:
addSubview:
setCompletionHandler:
cancel
dealloc
intrinsicContentSize
contentMode
layoutSubviews
setFrame:
expectedSize
sizeThatFits:
willMoveToWindow:
isImageLoaded
_loadImage
image
setImageProxy:
_setImage:
setImageProxy:completion:
isEqual:
completion
setCompletion:
_updateImageViewWithPlaceholderImageIfNeeded
window
layer
setCornerRadius:
setMasksToBounds:
cornerRadius
setImage:
setCacheOnLoad:
setEnableCache:
imageWithCGImage:
imageProxy
setImageLoaded:
isMainThread
load
imageWithRenderingMode:
size
setPlaceholderImage:
setSelected:animated:
_imageView
.cxx_destruct
placeholderImage
_rendersImageAsTemplates
_image
_imageContentMode
_flatImage
_flatHighlightImage
_selected
_imageLoaded
_placeholderImage
_imageProxy
_completion
init
UUID
UUIDString
imageKeyForObject:
imageWithData:
errorWithDomain:code:userInfo:
sharedInstance
loadImageForObject:scaleToSize:cropToFit:completionHandler:
cancelLoad:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
setImageData:
imageIdentifier
imageData
_decodedImage
_imageIdentifier
_imageData
mainScreen
copy
blackColor
setBackgroundColor:
initWithStyle:
initWithObject:imageLoader:groupType:
setAdImageProxy:
progressTimerFireMethod:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
removeFromSuperview
timer
invalidate
setTimer:
_updateProgressView
player
duration
elapsedTime
progressView
setProgress:
adImageView
setBounds:
setNeedsLayout
setCenter:
frame
initWithAdImageURL:player:
adImageURL
setPlayer:
setAdImageView:
setProgressView:
_adImageURL
_player
_adImageView
_progressView
_timer
clearColor
setOpaque:
imageNamed:
_startSpinner
performSelector:withObject:afterDelay:
cancelPreviousPerformRequestsWithTarget:selector:object:
superview
setNeedsDisplay
_animateValueOnDisplayLink:
displayLinkWithTarget:selector:
currentRunLoop
addToRunLoop:forMode:
_setSpinnerAnimating:
bgImage
spinnerLayer
spinnerFillLayer
CGImage
bezierPath
moveToPoint:
addArcWithCenter:radius:startAngle:endAngle:clockwise:
addLineToPoint:
addClip
fillImage
style
initWithImage:
animation
setKeyPath:
setDuration:
setRepeatCount:
numberWithFloat:
setFromValue:
setToValue:
array
addObject:
setValues:
setCalculationMode:
arrayWithObjects:
setAnimations:
addAnimation:forKey:
setSpinnerLayer:
setSpinnerFillLayer:
setType:
drawRect:
setStyle:
progress
setBgImage:
setFillImage:
spinnerImage
setSpinnerImage:
spinnerOverlayImage
setSpinnerOverlayImage:
whiteColorComponents
_animatedStartValue
_animatedValue
_animating
_progressInitialized
_animationEndTime
_animationStartTime
_displayLink
_progress
_style
_spinnerLayer
_spinnerFillLayer
_bgImage
_fillImage
_spinnerImage
_spinnerOverlayImage
initWithNibName:bundle:
viewDidLoad
_menuPressed:
initWithTarget:action:
numberWithInteger:
arrayWithObjects:count:
setAllowedPressTypes:
view
addGestureRecognizer:
defaultCenter
_playerMediaItemChanged:
addObserver:selector:name:object:
mediaRemoteObserver
prepareForPlayback
removeObserver:name:object:
reset
_updateAdViewWithMediaItem:completion:
viewServiceBeginPresentationWithOptions:
viewServiceEndPresentationWithOptions:completion:
viewServiceUpdatePresentationWithOptions:
viewServiceHandleMessage:reply:
_exportedInterface
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
dismissWithResult:
currentMediaItem
_remoteViewControllerProxy
mediaItemMetadataForProperty:
URLWithString:
setAlpha:
animateWithDuration:delay:options:animations:completion:
insertSubview:atIndex:
_remoteViewControllerInterface
radioAdView
setRadioAdView:
setMediaRemoteObserver:
_radioAdView
_mediaRemoteObserver
initWithName:
stopped
dictionary
_callElapsedTimeObserversDueToTimeJump:
changeMediaInDirection:reason:
scanning
playing
play
pause
paused
postNotificationName:object:
stop
numberWithDouble:
dictionaryWithObjects:forKeys:count:
setElapsedTime:
elapsedTimeObserverBlocks
setObject:forKey:
removeObjectForKey:
initWithMediaItems:index:isCollection:
setPlaylist:
postNotificationName:object:userInfo:
_rateForState:
rateUsedForPlayback
date
timeIntervalSinceDate:
rate
willChangeValueForKey:
setObject:forKeyedSubscript:
_updateElapsedTimeTimer
didChangeValueForKey:
setLastElapsedTime:atTimestamp:
state
_fireElapsedTimeUpdate:
countByEnumeratingWithState:objects:count:
objectForKey:
changeMediaInDirection:
changeToMediaAtIndex:reason:
continueLoadingCurrentItem
playIgnoringDelegate:
pauseIgnoringDelegate:
pauseWithVolumeRampDuration:
togglePlayPause
scanWithRate:
stopWithVolumeRampDuration:
setElapsedTime:precise:
setElapsedTime:seekPrecision:
setElapsedTime:seekPrecision:ignoreDelegate:
addElapsedTimeObserver:
removeElapsedTimeObserverWithToken:
addBoundaryTimeObserverForTimes:withHandler:
addBoundaryTimeObserverForDates:withHandler:
removeBoundaryTimeObserverWithToken:
skipToNextChapterInDirection:
setSelectedSubtitleOption:setGlobalPreference:
updateSubtitleOptions
currentMediaItemSupportsScrubbingUsingPlayer
name
delegate
setDelegate:
asyncDelegate
setAsyncDelegate:
playlist
setCurrentMediaItem:
currentMediaItemPreparedForLoading
currentMediaItemInitialLoadingComplete
currentMediaItemHasVideoContent
currentMediaItemIsStreaming
currentMediaItemPresentationSize
currentMediaItemHasDates
errorBehavior
setErrorBehavior:
interactive
setInteractive:
setRateUsedForPlayback:
waitsAfterPreparingMediaItems
setWaitsAfterPreparingMediaItems:
playbackDate
setPlaybackDate:
isLive
muted
setMuted:
volume
setVolume:
chapterCollections
currentChapterCollection
setCurrentChapterCollection:
currentChapter
currentInterstitial
bufferedTimeRange
seekableTimeRange
seekableDateRange
forwardPlaybackEndTime
reversePlaybackEndTime
mediaItemEndAction
setMediaItemEndAction:
audioOptions
selectedAudioOption
setSelectedAudioOption:
subtitleOptions
selectedSubtitleOption
setSelectedSubtitleOption:
maximumBitRate
setMaximumBitRate:
preventsSleepDuringVideoPlayback
setPreventsSleepDuringVideoPlayback:
updatesMediaRemoteInfoAutomatically
setUpdatesMediaRemoteInfoAutomatically:
limitReadAhead
setLimitReadAhead:
setState:
lastChangeDirection
setLastChangeDirection:
initiatedSkip
setInitiatedSkip:
setElapsedTimeObserverBlocks:
isScanningForward
setIsScanningForward:
_lastUpdateTimestamp
_lastElapsedTime
_elapsedTimeTimer
_muted
_interactive
_waitsAfterPreparingMediaItems
_currentMediaItemHasDates
_currentMediaItemInitialLoadingComplete
_currentMediaItemPreparedForLoading
_preventsSleepDuringVideoPlayback
_updatesMediaRemoteInfoAutomatically
_isLive
_limitReadAhead
_initiatedSkip
_isScanningForward
_volume
_name
_rate
_rateUsedForPlayback
_playlist
_state
_duration
_errorBehavior
_playbackDate
_chapterCollections
_currentChapter
_bufferedTimeRange
_seekableDateRange
_currentChapterCollection
_mediaItemEndAction
_audioOptions
_selectedAudioOption
_subtitleOptions
_selectedSubtitleOption
_maximumBitRate
_delegate
_asyncDelegate
_seekableTimeRange
_currentInterstitial
_forwardPlaybackEndTime
_reversePlaybackEndTime
_lastChangeDirection
_elapsedTimeObserverBlocks
_currentMediaItemPresentationSize
setMediaItemMetadata:forProperty:
removeMediaItemMetadataForProperty:
isEqualToString:
imageLoader
setWriteToAssetLibrary:
replaceMediaItemMetadata:forProperty:
setImageLoader:
_imageLoader
mainBundle
bundleIdentifier
initializeLoggingWithDomain:persistentComponents:
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
setWindow:
_window
_registerAsObserver
_updateNowPlayingInfo:
_updateNowPlayingProcessWithPid:
_deregisterAsObserver
trackIdentifierForInfo:
tvs_stringForKey:
tvs_numberForKey:
_updatePlayerTimeWithInfo:
mutableCopy
tvs_dataForKey:
length
numberWithUnsignedInteger:
performMediaItemMetadataTransactionWithBlock:
doubleValue
loading
_updateTimeStampFromAirtunesd:
_nowPlayingProcessDidChange:
_nowPlayingInfoDidChange:
tvs_dateForKey:
userInfo
_isObserving
_airtunesIsPlaying
_airtunesTimeData
_lastTrackIdentifier
stringWithUTF8String:
setViewServiceActive:
initWithPlayer:
setSingleCoverOnly:
addChildViewController:
wallpaperViewForVariant:
didMoveToParentViewController:
animateWithDuration:animations:completion:
willMoveToParentViewController:
removeFromParentViewController
musicViewController
setMusicViewController:
menuGestureRecognizer
setMenuGestureRecognizer:
nowPlayingWallPaper
setNowPlayingWallPaper:
_musicViewController
_menuGestureRecognizer
_nowPlayingWallPaper
v8@?0
v28@?0@"TVImage"8@"NSError"16B24
completion
T@?,C,N,V_completion
imageLoaded
TB,N,GisImageLoaded,V_imageLoaded
image
T@"UIImage",&,N
placeholderImage
T@"UIImage",&,N,V_placeholderImage
cornerRadius
Td,N
imageProxy
T@"TVImageProxy",&,N,V_imageProxy
TVServicesErrorDomain
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
imageIdentifier
T@"NSString",R,N,V_imageIdentifier
imageData
T@"NSData",&,N,V_imageData
v28@?0@"UIImage"8@"NSError"16B24
player
T@"<TVPPlayback>",&,N,V_player
adImageView
T@"TVNPImageView",&,N,V_adImageView
progressView
T@"TVNPMusicRoundProgressView",&,N,V_progressView
timer
T@"NSTimer",&,N,V_timer
adImageURL
T@"NSURL",R,C,N,V_adImageURL
RoundProgressSolid
RoundProgressFill
RoundProgressSpin
RoundProgressSpinOverlay
RoundProgressShadowSolid
RoundProgressShadowFill
RoundProgressShadowSpin
RoundProgressShadowSpinOverlay
opacity
transform.rotation.z
discrete
SpinnerGroupAnimation
FadeAnimation
style
TQ,N,V_style
spinnerLayer
T@"UIImageView",&,N,V_spinnerLayer
spinnerFillLayer
T@"UIImageView",&,N,V_spinnerFillLayer
bgImage
T@"UIImage",&,N,V_bgImage
fillImage
T@"UIImage",&,N,V_fillImage
spinnerImage
T@"UIImage",&,N,V_spinnerImage
spinnerOverlayImage
T@"UIImage",&,N,V_spinnerOverlayImage
progress
Tf,N,V_progress
v12@?0B8
radioAdView
T@"TVNPMusicRadioAdView",&,N,V_radioAdView
mediaRemoteObserver
T@"TVNPMediaRemoteObserver",&,N,V_mediaRemoteObserver
rate
name
T@"NSString",R,N
delegate
T@"<TVPPlaybackDelegate>",W,N
asyncDelegate
T@"<TVPASyncPlaybackDelegate>",W,N
playlist
T@"TVPPlaylist",&,N
currentMediaItem
T@"NSObject<TVPMediaItem>",&,N
currentMediaItemPreparedForLoading
TB,R,N
currentMediaItemInitialLoadingComplete
currentMediaItemHasVideoContent
currentMediaItemIsStreaming
currentMediaItemPresentationSize
T{CGSize=dd},R,N
currentMediaItemHasDates
state
T@"TVPPlaybackState",R,N
errorBehavior
Tq,N
interactive
TB,N
Td,R,N
rateUsedForPlayback
waitsAfterPreparingMediaItems
elapsedTime
playbackDate
T@"NSDate",C,N
duration
isLive
muted
volume
Tf,N
chapterCollections
T@"NSArray",R,N
currentChapterCollection
T@"TVPChapterCollection",&,N
currentChapter
T@"TVPChapter",R,N
currentInterstitial
T@"TVPInterstitial",R,N
bufferedTimeRange
T@"TVPTimeRange",R,N
seekableTimeRange
seekableDateRange
T@"TVPDateRange",R,N
forwardPlaybackEndTime
reversePlaybackEndTime
mediaItemEndAction
audioOptions
selectedAudioOption
T@"TVPAudioOption",&,N
subtitleOptions
selectedSubtitleOption
T@"TVPSubtitleOption",&,N
maximumBitRate
preventsSleepDuringVideoPlayback
updatesMediaRemoteInfoAutomatically
limitReadAhead
lastChangeDirection
Tq,N,V_lastChangeDirection
initiatedSkip
TB,N,V_initiatedSkip
elapsedTimeObserverBlocks
T@"NSMutableDictionary",&,N,V_elapsedTimeObserverBlocks
isScanningForward
TB,N,V_isScanningForward
Td,N,V_duration
T@"TVPPlaybackState",&,N,V_state
T@"NSString",R,N,V_name
T@"<TVPPlaybackDelegate>",W,N,V_delegate
T@"<TVPASyncPlaybackDelegate>",W,N,V_asyncDelegate
T@"TVPPlaylist",&,N,V_playlist
TB,R,N,V_currentMediaItemPreparedForLoading
TB,R,N,V_currentMediaItemInitialLoadingComplete
T{CGSize=dd},R,N,V_currentMediaItemPresentationSize
TB,R,N,V_currentMediaItemHasDates
Tq,N,V_errorBehavior
TB,N,V_interactive
Td,R,N,V_rate
Td,N,V_rateUsedForPlayback
TB,N,V_waitsAfterPreparingMediaItems
T@"NSDate",C,N,V_playbackDate
TB,R,N,V_isLive
TB,N,V_muted
Tf,N,V_volume
T@"NSArray",R,N,V_chapterCollections
T@"TVPChapterCollection",&,N,V_currentChapterCollection
T@"TVPChapter",R,N,V_currentChapter
T@"TVPInterstitial",R,N,V_currentInterstitial
T@"TVPTimeRange",R,N,V_bufferedTimeRange
T@"TVPTimeRange",R,N,V_seekableTimeRange
T@"TVPDateRange",R,N,V_seekableDateRange
Td,R,N,V_forwardPlaybackEndTime
Td,R,N,V_reversePlaybackEndTime
Tq,N,V_mediaItemEndAction
T@"NSArray",R,N,V_audioOptions
T@"TVPAudioOption",&,N,V_selectedAudioOption
T@"NSArray",R,N,V_subtitleOptions
T@"TVPSubtitleOption",&,N,V_selectedSubtitleOption
Td,N,V_maximumBitRate
TB,N,V_preventsSleepDuringVideoPlayback
TB,N,V_updatesMediaRemoteInfoAutomatically
TB,N,V_limitReadAhead
imageLoader
T@"TVNPDataImageLoader",&,N,V_imageLoader
window
T@"UIWindow",&,N
T@"UIWindow",&,N,V_window
airtunesd
TVAirPlayTimeNotificationName
TVNPMetadataPlayer
v16@?0^{__CFDictionary=}8
v12@?0i8
kTVSMediaRemoteNowPlayingInfoRadioAdURLString
v12@?0I8
T@"TVNPMetadataPlayer",&,N,V_player
musicViewController
T@"TVPMusicNowPlayingViewController",&,N,V_musicViewController
menuGestureRecognizer
T@"UITapGestureRecognizer",&,N,V_menuGestureRecognizer
nowPlayingWallPaper
T@"UIView",&,N,V_nowPlayingWallPaper
TVNPImageView
TVNPDataImageLoader
TVImageLoader
NSObject
TVNPMusicRadioAdView
TVNPMusicRoundProgressView
PBSViewServicePresenter
PBSViewServiceInterface
TVNPRadioAdViewController
TVNPMetadataPlayer
TVPPlayback
TVNPMediaItem
TVNowPlayingServiceAppDelegate
UIApplicationDelegate
TVNPMediaRemoteObserver
TVNPViewController
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v16@0:8
{CGSize=dd}16@0:8
q16@0:8
v24@0:8q16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGSize=dd}32@0:8{CGSize=dd}16
v24@0:8@16
@16@0:8
v32@0:8@16@?24
v24@0:8d16
d16@0:8
v24@0:8B16B20
@?16@0:8
v24@0:8@?16
B16@0:8
v20@0:8B16
@"UIImage"
@"UIImageView"
@"TVImageProxy"
@24@0:8@16
@"NSString"24@0:8@16
@52@0:8@16{CGSize=dd}24B40@?44
@52@0:8@16{CGSize=dd}24B40@?<v@?@"TVImage"@"NSString"@"NSDate"Q@"NSError">44
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
@"TVImage"
@"NSString"
@"NSData"
@32@0:8@16@24
@"NSURL"
@"<TVPPlayback>"
@"TVNPImageView"
@"TVNPMusicRoundProgressView"
@"NSTimer"
@24@0:8Q16
v20@0:8f16
v24@0:8Q16
f16@0:8
[4d]
@"CADisplayLink"
v24@0:8@"NSDictionary"16
v32@0:8@"NSDictionary"16@?<v@?>24
v32@0:8@"NSDictionary"16@?<v@?@"<NSSecureCoding>"@"NSError">24
@"NSXPCInterface"16@0:8
v24@0:8@"<NSSecureCoding>"16
@"TVNPMusicRadioAdView"
@"TVNPMediaRemoteObserver"
@24@0:8@"NSString"16
v32@0:8q16@24
v32@0:8q16@"NSString"24
v32@0:8Q16@24
v32@0:8Q16@"NSString"24
v28@0:8d16B24
v48@0:8d16{?=qiIq}24
v52@0:8d16{?=qiIq}24B48
@24@0:8@?16
@24@0:8@?<v@?d@"NSDate"dB>16
@32@0:8@16@?24
@32@0:8@"NSArray"16@?<v@?B>24
v28@0:8@16B24
v28@0:8@"TVPSubtitleOption"16B24
@"<TVPPlaybackDelegate>"16@0:8
v24@0:8@"<TVPPlaybackDelegate>"16
@"<TVPASyncPlaybackDelegate>"16@0:8
v24@0:8@"<TVPASyncPlaybackDelegate>"16
@"TVPPlaylist"16@0:8
v24@0:8@"TVPPlaylist"16
@"NSObject<TVPMediaItem>"16@0:8
v24@0:8@"NSObject<TVPMediaItem>"16
@"TVPPlaybackState"16@0:8
@"NSDate"16@0:8
v24@0:8@"NSDate"16
@"NSArray"16@0:8
@"TVPChapterCollection"16@0:8
v24@0:8@"TVPChapterCollection"16
@"TVPChapter"16@0:8
@"TVPInterstitial"16@0:8
@"TVPTimeRange"16@0:8
@"TVPDateRange"16@0:8
@"TVPAudioOption"16@0:8
v24@0:8@"TVPAudioOption"16
@"TVPSubtitleOption"16@0:8
v24@0:8@"TVPSubtitleOption"16
v32@0:8d16@24
f24@0:8@16
@"NSDate"
@"TVPPlaylist"
@"TVPPlaybackState"
@"NSArray"
@"TVPChapter"
@"TVPTimeRange"
@"TVPDateRange"
@"TVPChapterCollection"
@"TVPAudioOption"
@"TVPSubtitleOption"
@"<TVPPlaybackDelegate>"
@"<TVPASyncPlaybackDelegate>"
@"TVPInterstitial"
@"NSMutableDictionary"
{CGSize="width"d"height"d}
v32@0:8@16@24
@"TVNPDataImageLoader"
v24@0:8@"UIApplication"16
B32@0:8@16@24
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@16@24@32@40
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@16@24@32
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@16q24d32
v40@0:8@"UIApplication"16q24d32
v32@0:8@16q24
v32@0:8@"UIApplication"16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@16@24@32@?40
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@16@24@32@40@?48
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@16@24@?32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
Q32@0:8@16@24
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@40@0:8@16@24@32
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@16@24@?32
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@16@24@32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
@"UIWindow"
v20@0:8i16
@"NSDictionary"
@"NSNumber"
@"TVNPMetadataPlayer"
@"TVPMusicNowPlayingViewController"
@"UITapGestureRecognizer"
@"UIView"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>FAKETEAMID.com.apple.TVNowPlayingService</string>
<key>com.apple.UIKit.vends-view-services</key>
<true/>
</dict>
</plist>
