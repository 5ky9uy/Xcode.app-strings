ABCDEFGHIJKLMNOPQRSTUVWXYZ234567
0123456789ABCDEFGHIJKLMNOPQRSTUV
?456789:;<=
 !"#$%&'()*+,-./0123
@(#)PROGRAM:libdispatch  PROJECT:libdispatch-703.50.35
BUG IN CLIENT OF LIBDISPATCH: Transition to multithreaded is prohibited
BUG IN CLIENT OF LIBDISPATCH: The executable is already multithreaded
com.apple.main-thread
semaphore
group
queue
serial-queue
concurrent-queue
global-queue
main-queue
runloop-queue
mgr-queue
queue-context
queue-attr
kevent-source
mach-channel
mach-msg
channel
operation
disk
dc-redirect
dc-mach-send-drain
dc-mach-send-barrier
dc-mach-recv-barrier
dc-override-stealing
dc-override-owning
BUG in libdispatch: %s - %lu - 0x%lx
BUG in libdispatch client: %s
BUG in libdispatch client: %s %s - 0x%x
BUG in libdispatch client: %s[%s] %s: "%s" - 0x%x
BUG in libdispatch client: %s[%s] %s
BUG in libdispatch: %s[%s]: "%s" - 0x%x
DEPRECATED USE in libdispatch client: %s
BUG IN CLIENT OF LIBDISPATCH: NULL was passed where a block should have been
MIG_REPLY_MISMATCH
SIMULATOR_RUNTIME_BUILD_VERSION
LIBDISPATCH_LOG
syslog
file
stderr
/var/tmp/libdispatch.%d.log
=== log file opened for %s[%u] at %ld.%06u ===
com.apple.libsystem.libdispatch
NULL: 
NULL vtable slot: 
API MISUSE: Resurrection of an object
SIMULATOR_MEMORY_WARNINGS
com.apple.root.maintenance-qos
com.apple.root.maintenance-qos.overcommit
com.apple.root.background-qos
com.apple.root.background-qos.overcommit
com.apple.root.utility-qos
com.apple.root.utility-qos.overcommit
com.apple.root.default-qos
com.apple.root.default-qos.overcommit
com.apple.root.user-initiated-qos
com.apple.root.user-initiated-qos.overcommit
com.apple.root.user-interactive-qos
com.apple.root.user-interactive-qos.overcommit
com.apple.libdispatch-manager
BUG IN CLIENT OF LIBDISPATCH: invalid queue passed to dispatch_assert_queue()
BUG IN CLIENT OF LIBDISPATCH: invalid queue passed to dispatch_assert_queue_not()
BUG IN CLIENT OF LIBDISPATCH: Invalid queue attribute
BUG IN CLIENT OF LIBDISPATCH: Release of a locked queue
BUG IN CLIENT OF LIBDISPATCH: Release of a queue with corrupt state
BUG IN CLIENT OF LIBDISPATCH: Release of a queue by itself
BUG IN CLIENT OF LIBDISPATCH: Release of a queue while items are enqueued
BUG IN CLIENT OF LIBDISPATCH: Invalid suspension state
BUG IN CLIENT OF LIBDISPATCH: Over-resume of an inactive object
BUG IN CLIENT OF LIBDISPATCH: Over-resume of an object
BUG IN CLIENT OF LIBDISPATCH: Cannot set width of a serial queue
BUG IN CLIENT OF LIBDISPATCH: Unexpected dispatch object type
BUG IN CLIENT OF LIBDISPATCH: Cannot change the target of a queue or source with an accounting override voucher after it has been activated
Changing the target of a queue already targeted by other dispatch objects
Changing the target of a source after it has been activated
BUG IN CLIENT OF LIBDISPATCH: Cannot change the target of this queue after it has been activated
BUG IN CLIENT OF LIBDISPATCH: Invalid pthread root queue observer hooks
BUG IN LIBDISPATCH: Global root queue disposed
BUG IN CLIENT OF LIBDISPATCH: Invalid queue type
target = %s[%p], width = 0x%x, state = 0x%016llx
, suspended = %d
, inactive
, needs-activation
, enqueued
, dirty
, async-override
, draining on 0x%x
, in-barrier
, in-flight = %d
, pending-barrier
, thread = 0x%x 
%s[%p] = { 
BUG IN LIBDISPATCH: Changing the QoS while on the manager queue
BUG IN LIBDISPATCH: Cannot raise oneself to manager
BUG IN LIBDISPATCH: Cannot turn a manager thread into a normal one
BUG IN LIBDISPATCH: _pthread_set_properties_self failed
BUG IN CLIENT OF LIBDISPATCH: Invalid flags passed to dispatch_block_perform()
BUG IN CLIENT OF LIBDISPATCH: A block object may not be both run more than once and waited for
BUG IN CLIENT OF LIBDISPATCH: Invalid block object passed to dispatch_block_cancel()
BUG IN CLIENT OF LIBDISPATCH: Invalid block object passed to dispatch_block_testcancel()
BUG IN CLIENT OF LIBDISPATCH: Invalid block object passed to dispatch_block_wait()
BUG IN CLIENT OF LIBDISPATCH: A block object may not be waited for more than once
BUG IN CLIENT OF LIBDISPATCH: Invalid block object passed to dispatch_block_notify()
BUG IN CLIENT OF LIBDISPATCH: A block object may not be both run more than once and observed
BUG IN LIBDISPATCH: Interrupted drain on manager queue
BUG IN CLIENT OF LIBDISPATCH: Not a runloop queue
BUG IN CLIENT OF LIBDISPATCH: dispatch_main() must be called on the main thread
%sBlock was %sexpected to execute on queue [%s]
BUG IN CLIENT OF LIBDISPATCH: Assertion failed: 
not 
%sBlock was expected to act as a barrier on queue [%s]
BUG IN LIBDISPATCH: Root queue initialization failed
BUG IN CLIENT OF LIBDISPATCH: Corrupted priority
BUG IN LIBDISPATCH: Queue bound twice
BUG IN CLIENT OF LIBDISPATCH: Could not get unprivileged host port
BUG IN CLIENT OF LIBDISPATCH: Cannot specify both overcommit and a non-global target queue
BUG IN CLIENT OF LIBDISPATCH: Cannot specify an overcommit attribute and use this kind of target queue
BUG IN CLIENT OF LIBDISPATCH: Cannot specify a QoS attribute and use this kind of target queue
API MISUSE: Over-release of an object
API MISUSE: Voucher over-release
BUG IN CLIENT OF LIBDISPATCH: Too many nested calls to dispatch_suspend()
BUG IN CLIENT OF LIBDISPATCH: Too many calls to dispatch_suspend() prior to calling dispatch_set_target_queue() or dispatch_set_*_handler()
com.apple.root.libdispatch-manager
queue-specific
API MISUSE: Voucher resurrection
BUG IN CLIENT OF LIBDISPATCH: Corruption of dispatch block object
BUG IN CLIENT OF LIBDISPATCH: dispatch_barrier_sync called on queue already owned by current thread
BUG IN CLIENT OF LIBDISPATCH: dispatch_sync called on queue already owned by current thread
BUG IN LIBDISPATCH: Unexpected object type
BUG IN LIBDISPATCH: Deferred continuation on source, mach channel or mgr
block
function
BUG IN CLIENT OF LIBDISPATCH: _dispatch_main_queue_callback_4CF called after dispatch_main()
BUG IN CLIENT OF LIBDISPATCH: _dispatch_main_queue_callback_4CF called from the wrong thread
BUG IN LIBDISPATCH: Premature thread exit while a dispatch queue is running
BUG IN LIBDISPATCH: Premature thread exit with unhandled deferred items
BUG IN LIBDISPATCH: Premature thread exit while a dispatch frame is active
BUG IN LIBDISPATCH: Premature thread exit while a dispatch context is set
BUG IN CLIENT OF LIBDISPATCH: Semaphore object deallocated while in use
port = 0x%u, 
value = %ld, orig = %ld }
BUG IN CLIENT OF LIBDISPATCH: Too many nested calls to dispatch_group_enter()
BUG IN CLIENT OF LIBDISPATCH: Unbalanced call to dispatch_group_leave()
BUG IN CLIENT OF LIBDISPATCH: Group object deallocated while in use
count = %ld, waiters = %d }
v8@?0
apply
API MISUSE: Resurrection of an over-released object
BUG IN LIBDISPATCH: Release while enqueued
xrefcnt = 0x%x, refcnt = 0x%x, 
BUG IN LIBDISPATCH: firehose_push_reply should never be sent to the buffer receive port
BUG IN LIBDISPATCH: firehose_mig_server doesn't handle replies
BUG IN CLIENT OF LIBDISPATCH: Invalid size for the firehose buffer
BUG IN CLIENT OF LIBDISPATCH: Unable to make memory port
BUG IN CLIENT OF LIBDISPATCH: Unable to register with logd
BUG IN CLIENT OF LIBDISPATCH: Memory corruption in the logging buffers
source
BUG IN CLIENT OF LIBDISPATCH: Source has a cancel handler
BUG IN CLIENT OF LIBDISPATCH: Dispatch source used after last release
BUG IN CLIENT OF LIBDISPATCH: Source is suspended
BUG IN CLIENT OF LIBDISPATCH: dispatch_source_cancel_and_wait called from a source handler
BUG IN CLIENT OF LIBDISPATCH: Channel already connected
BUG IN CLIENT OF LIBDISPATCH: Invalid send flags
BUG IN CLIENT OF LIBDISPATCH: Empty message
opts/err = 0x%x, msgh[%p] = { 
id 0x%x, 
size %u, 
bits <l %u, r %u
, o 0x%x
local 0x%x, remote 0x%x
local 0x%x
remote 0x%x
no ports
 } }
dispatch_mig_server: mach_msg() failed
????
kevent = %p%s, filter = %s }
 (direct)
kevent
monitored resource vanished before the source cancel handler was invoked
BUG IN LIBDISPATCH: Unexpected kevent for mach channel
Setting registration handler after the source has been activated
BUG IN CLIENT OF LIBDISPATCH: mach_port_construct() failed: cannot create receive right
BUG IN CLIENT OF LIBDISPATCH: mach_port_allocate() failed: cannot create port set
_dispatch_kevent_machport_enable: mach_port_move_member() failed 
BUG IN CLIENT OF LIBDISPATCH: Do not close random Unix descriptors
BUG IN CLIENT OF LIBDISPATCH: kqueue() failure: process is out of file descriptors
BUG IN CLIENT OF LIBDISPATCH: kqueue() failure: system is out of file descriptors
BUG IN CLIENT OF LIBDISPATCH: kqueue() failure: kernel is out of memory
BUG IN LIBDISPATCH: kqueue() failure
delete
enable
monitor
BUG IN LIBDISPATCH: Unexpected EVFILT_MACHPORT event
BUG IN CLIENT OF LIBDISPATCH: Unexpected EV_VANISHED (do not destroy random mach ports)
BUG IN LIBDISPATCH: EVFILT_MACHPORT with no message
BUG IN LIBDISPATCH: MACH_RCV_LARGE_IDENTITY with no identity
BUG IN LIBDISPATCH: EVFILT_MACHPORT with overlarge message
BUG in libdispatch client: _dispatch_kevent_mach_msg_drain: dropped message too large to fit in memory: id = 0x%x, size = %u
_dispatch_kevent_mach_msg_drain: message reception failed
_dispatch_kevent_mach_msg_recv: received overlarge message
_dispatch_kevent_mach_msg_recv: received message with MACH_PORT_NULL port
_dispatch_kevent_mach_msg_recv: received message with unknown kevent
_dispatch_kevent_mach_msg_recv: received message with no listeners
BUG IN LIBDISPATCH: Could not find reply registration
BUG IN CLIENT OF LIBDISPATCH: Attempt to set timer on a non-timer source
LIBDISPATCH_TIMERS_USE_TELEMETRY
BUG IN LIBDISPATCH: Locking the manager should not fail
LIBDISPATCH_TIMERS_FORCE_MAX_LEEWAY
BUG IN CLIENT OF LIBDISPATCH: Could not allocate mach msg receive buffer
BUG IN CLIENT OF LIBDISPATCH: Voucher port corruption
BUG IN LIBDISPATCH: Reply already registered
BUG IN CLIENT OF LIBDISPATCH: Message already enqueued
BUG IN CLIENT OF LIBDISPATCH: Invalid reply port
BUG IN CLIENT OF LIBDISPATCH: Overlarge message
BUG in libdispatch client: dispatch_mach_send_and_wait_for_reply: dropped message too large to fit in memory: id = 0x%x, size = %u
BUG IN CLIENT OF LIBDISPATCH: Reply received on unexpected port
BUG IN LIBDISPATCH: Channel already installed
target = %s[%p], ident = 0x%lx, mask = 0x%lx, pending_data = 0x%lx, registered = %d, armed = %d, deleted = %d%s, canceled = %d, 
 (pending)
timer = { target = 0x%llx, deadline = 0x%llx, last_fire = 0x%llx, interval = 0x%llx, flags = 0x%lx }, 
EVFILT_READ
EVFILT_WRITE
EVFILT_AIO
EVFILT_VNODE
EVFILT_PROC
EVFILT_SIGNAL
EVFILT_TIMER
EVFILT_MACHPORT
DISPATCH_EVFILT_MACH_NOTIFICATION
EVFILT_FS
EVFILT_USER
EVFILT_SOCK
EVFILT_MEMORYSTATUS
DISPATCH_EVFILT_TIMER
DISPATCH_EVFILT_CUSTOM_ADD
DISPATCH_EVFILT_CUSTOM_OR
EVFILT_missing
target = %s[%p], receive = 0x%x, send = 0x%x, send-possible = 0x%x%s, checkin = 0x%x%s, send state = %016llx, disconnected = %d, canceled = %d 
 (armed)
BUG IN LIBDISPATCH: free destructor called
BUG IN LIBDISPATCH: none destructor called
BUG IN LIBDISPATCH: vmdeallocate destructor called
BUG IN LIBDISPATCH: inline destructor called
data[%p] = { 
leaf, size = %zd, buf = %p 
composite, size = %zd, num_records = %zd 
, flatbuf = %p 
record[%zd] = { from = %zd, length = %zd, data_object = %p }, 
BUG IN LIBDISPATCH: dispatch_data_create_subrange out of bounds
BUG IN LIBDISPATCH: dispatch_data_copy_region out of bounds
v16@?0^{dispatch_fd_entry_s=i^{dispatch_io_path_data_s}iiiI{dispatch_stat_s=iS}[2^{dispatch_stream_s}]^{dispatch_disk_s}^{dispatch_queue_s}^{dispatch_queue_s}^{dispatch_group_s}^{dispatch_io_s}{?=^{dispatch_operation_s}^^{dispatch_operation_s}}{?=^{dispatch_fd_entry_s}^^{dispatch_fd_entry_s}}}8
v12@?0i8
v24@?0B8^{dispatch_data_s=^v^{dispatch_queue_s}^v^v^v@?QQ[0{range_record_s=^{dispatch_data_s}QQ}]}12i20
v20@?0^{dispatch_data_s=^v^{dispatch_queue_s}^v^v^v@?QQ[0{range_record_s=^{dispatch_data_s}QQ}]}8i16
com.apple.libdispatch-io.channelq
com.apple.libdispatch-io.barrierq
com.apple.libdispatch-io.dev_lockq
com.apple.libdispatch-io.opq
com.apple.libdispatch-io.fd_lockq
com.apple.libdispatch-io.closeq
com.apple.libdispatch-io.deviceq.%d
com.apple.libdispatch-io.streamq
type = %s, fd = 0x%x, %sfd_entry = %p, queue = %p, target = %s[%p], barrier_queue = %p, barrier_group = %p, err = 0x%x, low = 0x%zx, high = 0x%zx, interval%s = %llu 
stream
random
stopped, 
closed, 
(strict)
type = %s %s, fd = 0x%x, fd_entry = %p, channel = %p, queue = %p -> %s[%p], target = %s[%p], offset = %lld, length = %zu, done = %zu, undelivered = %zu, flags = %u, err = 0x%x, low = 0x%zx, high = 0x%zx, interval%s = %llu 
read
write
BUG IN CLIENT OF LIBDISPATCH: Could not create task mach voucher
BUG IN CLIENT OF LIBDISPATCH: Voucher importance count underflow
BUG IN CLIENT OF LIBDISPATCH: Voucher corruption
BUG IN CLIENT OF LIBDISPATCH: Couldn't get debug control port
com.apple.debug-channel
BUG IN CLIENT OF LIBDISPATCH: unsupported vah_version
BUG IN CLIENT OF LIBDISPATCH: voucher_activity_initialize_4libtrace called twice
BUG IN CLIENT OF LIBDISPATCH: Absurd publen
BUG IN CLIENT OF LIBDISPATCH: Log is too large
BUG IN CLIENT OF LIBDISPATCH: Invalid arguments
voucher[%p] = { xrefcnt = 0x%x, refcnt = 0x%x
, base voucher %p
, kvoucher%s 0x%x
 & ipc kvoucher
, ipc kvoucher 0x%x
, QOS 0x%x
, activity 0x%llx (pid: 0x%16llx, parent 0x%llx)
BUG IN LIBDISPATCH: Unable to get the unique pid
BUG IN CLIENT OF LIBDISPATCH: Could not generate an activity ID
BUG IN LIBDISPATCH: Allocation should always fail
B40@?0^{dispatch_data_s=^v^{dispatch_queue_s}^v^v^v@?QQ[0{range_record_s=^{dispatch_data_s}QQ}]}8Q16r^v24Q32
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
BUG IN CLIENT OF LIBDISPATCH: Use-after-free of dispatch_semaphore_t
BUG IN LIBDISPATCH: mach semaphore API failure
BUG IN CLIENT OF LIBDISPATCH: trying to lock recursively
BUG IN CLIENT OF LIBDISPATCH: lock not owned by current thread
OBJC_DEBUG_MISSING_POOLS
BUG IN CLIENT OF LIBDISPATCH: -init called directly
NSString
<%s: %s>
<%s: %s[%p]>
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
BUG IN CLIENT OF LIBDISPATCH: Release of a suspended object
LIBDISPATCH_CONTINUATION_ALLOCATOR
BUG IN CLIENT OF LIBDISPATCH: Could not allocate heap
BUG IN CLIENT OF LIBDISPATCH: Corruption: failed to clear bit exclusively
length
bytes
Tr^v,R
LIBDISPATCH_DEBUG_QUEUE_INVERSIONS
BUG IN CLIENT OF LIBDISPATCH: queue inversion debugging cannot be used with code that changes the target of a queue already targeted by other dispatch objects
queue %p[%s] was already targeted by other dispatch objects
both an initiator and a recipient
BUG IN CLIENT OF LIBDISPATCH: queue inversion debugging expects queues to not participate in dispatch_sync() before their setup is complete
forgetting that queue 0x%p[%s] participated as %s of a dispatch_sync
TRUE
BUG IN LIBDISPATCH: Handled by the caller
with
%s Lock inversion detected
queue [%s] trying to sync onto queue [%s] conflicts
%s queue [%s] syncing onto queue [%s] at:
<missing backtrace>
class
dealloc
_xref_dispose
_dispose
init
retain
release
retainCount
retainWeakReference
allowsWeakReference
_setContext:
_getContext
_setFinalizer:
_setTargetQueue:
_suspend
_resume
_activate
debugDescription
length
getBytes:maxLength:usedLength:encoding:options:range:remainingRange:
stringWithUTF8String:
stringWithFormat:
load
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
autorelease
zone
hash
superclass
description
initWithBytes:length:copy:freeWhenDone:bytesAreVM:
allocWithZone:
_bytesAreVM
bytes
_isCompact
OS_object
OS_dispatch_object
OS_dispatch_queue
NSObject
OS_dispatch_source
OS_dispatch_source_interval
OS_dispatch_source_timer_with_aggregate
OS_dispatch_source_write
OS_dispatch_source_vnode
OS_dispatch_source_timer
OS_dispatch_source_signal
OS_dispatch_source_read
OS_dispatch_source_proc
OS_dispatch_source_memorypressure
OS_dispatch_source_mach_recv
OS_dispatch_source_mach_send
OS_dispatch_source_data_or
OS_dispatch_source_data_add
OS_dispatch_mach
OS_dispatch_queue_runloop
OS_dispatch_semaphore
OS_dispatch_group
OS_dispatch_queue_serial
OS_dispatch_queue_concurrent
OS_dispatch_queue_main
OS_dispatch_queue_root
OS_dispatch_queue_mgr
OS_dispatch_queue_specific_queue
OS_dispatch_queue_attr
OS_dispatch_mach_msg
OS_dispatch_io
OS_dispatch_operation
OS_dispatch_disk
OS_voucher
OS_dispatch_data
OS_dispatch_data_empty
@16@0:8
Vv16@0:8
Q16@0:8
B16@0:8
v16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
^{_NSZone=}16@0:8
@"NSString"16@0:8
@24@0:8^{_NSZone=}16
@44@0:8^v16Q24B32B36B40
v24@0:8^v16
^v16@0:8
v24@0:8^?16
v24@0:8@16
r^v16@0:8
