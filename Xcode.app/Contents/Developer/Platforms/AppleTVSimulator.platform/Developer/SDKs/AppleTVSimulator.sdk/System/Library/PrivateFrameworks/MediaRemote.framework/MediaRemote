MbP?
dealloc
stringWithFormat:
exceptionWithName:reason:userInfo:
raise
description
dictionaryRepresentation
dictionary
setObject:forKey:
numberWithFloat:
timeIntervalsCount
clearTimeIntervals
timeIntervalsAtIndex:
addTimeIntervals:
class
allocWithZone:
init
isMemberOfClass:
copyWithZone:
timeIntervals
setTimeIntervals:count:
setThumbnailsWidth:
setHasThumbnailsWidth:
hasThumbnailsWidth
setThumbnailsHeight:
setHasThumbnailsHeight:
hasThumbnailsHeight
readFrom:
writeTo:
copyTo:
isEqual:
hash
mergeFrom:
thumbnailsWidth
thumbnailsHeight
_timeIntervals
_thumbnailsHeight
_thumbnailsWidth
_has
setProperties:
numberWithUnsignedLongLong:
alloc
release
setControllerID:
setHasControllerID:
hasControllerID
hasProperties
controllerID
properties
_controllerID
_properties
autorelease
setNowPlayingUpdates:
setArtworkUpdates:
setVolumeUpdates:
setKeyboardUpdates:
setUnderlyingCodableMessage:
underlyingCodableMessage
nowPlayingUpdates
artworkUpdates
volumeUpdates
keyboardUpdates
initWithNowPlayingUpdates:artworkUpdates:volumeUpdates:keyboardUpdates:
type
setBuffer:
setTime:
numberWithDouble:
hasBuffer
hasTime
setGain:
setHasGain:
hasGain
buffer
time
gain
_gain
_buffer
_time
initWithMaxLowPriorityMessagesAllowed:
weakRefWithObject:
object
UUID
UUIDString
setIdentifier:
initWithReply:queue:
identifier
initWithMessage:createDataBlock:
push:
messagePurgedCallbacks
invoke:
_processNextMessages:
objectForKey:
retain
removeObjectForKey:
peek
data
readPosition
setReadPosition:
isFinished
message
messageSentCallbacks
enqueueMessage:reply:queue:createDataBlock:
processNextMessages:
reply:
stop
_pendingMessageQueue
_pendingReplyQueue
_stopped
_queue
copy
reply
queue
_reply
length
canPurge
_data
_message
_dataBlock
_readPosition
countByEnumeratingWithState:objects:count:
priority
addObject:
_purge
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
removeObject:
firstObject
objectAtIndex:
removeObjectAtIndex:
count
_messages
_lowPriorityMessagesCount
_maxLowPriorityMessagesAllowed
numberWithUnsignedLong:
dictionaryWithObjects:forKeys:count:
initWithDictionary:
unsignedLongValue
initWithSettings:
initWithFormat:packetCapacity:maximumPacketSize:
initWithFormatSettings:packetCapacity:maximumPacketSize:
formatSettings
_formatSettings
packetCapacity
packetCount
setPacketCount:
packetDescriptions
setSupportedCommands:
removeAllObjects
initWithCapacity:
addSupportedCommand:
supportedCommandsCount
clearSupportedCommands
supportedCommandAtIndex:
supportedCommandType
supportedCommands
_supportedCommands
initWithQueue:
initWithDistributedName:localName:queue:
notifyToken
observerWithQueue:
userInfoForLocalNotification
numberWithUnsignedInt:
defaultCenter
onNotification:
addObserver:selector:name:object:
removeObserver:name:object:
initWithName:callback:
_callback
_name
allKeys
_handleNotification:
removeObserver:
name
userInfo
postNotificationName:object:userInfo:
initWithNotificationCenter:queue:mappings:createUserInfoTransform:
_mapping
_notificationCenter
_userInfoTransform
nowPlayingInfo
setNowPlayingInfo:
playbackQueue
setPlaybackQueue:
displayID
setDisplayID:
displayName
setDisplayName:
playbackState
isPlaying
setPlaybackState:
initWithNowPlayingState:
_nowPlayingInfo
_playbackQueue
setState:
state
initWithConnectionState:
encryptionType
setHiliteMode:
hiliteMode
initWithHiliteMode:
setPlaybackQueueContext:
hasNowPlayingInfo
hasSupportedCommands
hasPlaybackQueue
hasDisplayID
hasDisplayName
setHasPlaybackState:
hasPlaybackState
hasPlaybackQueueContext
playbackQueueContext
_displayID
_displayName
_playbackQueueContext
_playbackState
sharedServiceClient
service
sharedAVSystemController
setAttribute:forKey:error:
sharedManager
localClient
setCanBeNowPlayingApp:
isOverrideApp
setIsOverrideApp:
registerForNowPlayingNotificationsWithQueue:
unregisterForNowPlayingNotifications
setNowPlayingPlaybackQueueContext:
copyNowPlayingPlaybackQueueContext
initWithData:forKey:
sendTransaction:withData:forOrigin:
clientForOrigin:
setPlaybackQueueCallback:
setVideoThumbnailsCallback:
setAudioAmplitudeSamplesCallback:
propertyListWithData:options:format:error:
URLWithString:
setObject:forKeyedSubscript:
date
nowPlayingArtwork
mutableCopy
objectForKeyedSubscript:
initWithImageData:mimeType:
isKindOfClass:
absoluteString
addEntriesFromDictionary:
MR_isEqualToNowPlayingInfo:
dataWithPropertyList:format:options:error:
setNowPlayingArtwork:
serviceQueue
setImageData:
initWithData:
imageData
setAlbum:
setArtist:
setTitle:
setRadioStationHash:
setRadioStationName:
setArtworkDataDigest:
numberWithBool:
numberWithLongLong:
hasAlbum
hasArtist
setDuration:
setHasDuration:
hasDuration
setElapsedTime:
setHasElapsedTime:
hasElapsedTime
setPlaybackRate:
setHasPlaybackRate:
hasPlaybackRate
repeatMode
setRepeatMode:
setHasRepeatMode:
hasRepeatMode
repeatModeAsString:
StringAsRepeatMode:
shuffleMode
setShuffleMode:
setHasShuffleMode:
hasShuffleMode
shuffleModeAsString:
StringAsShuffleMode:
setTimestamp:
setHasTimestamp:
hasTimestamp
hasTitle
setUniqueIdentifier:
setHasUniqueIdentifier:
hasUniqueIdentifier
setIsExplicitTrack:
setHasIsExplicitTrack:
hasIsExplicitTrack
setIsMusicApp:
setHasIsMusicApp:
hasIsMusicApp
setRadioStationIdentifier:
setHasRadioStationIdentifier:
hasRadioStationIdentifier
hasRadioStationHash
hasRadioStationName
hasArtworkDataDigest
setIsAlwaysLive:
setHasIsAlwaysLive:
hasIsAlwaysLive
setIsAdvertisement:
setHasIsAdvertisement:
hasIsAdvertisement
album
artist
duration
elapsedTime
playbackRate
timestamp
title
uniqueIdentifier
isExplicitTrack
isMusicApp
radioStationIdentifier
radioStationHash
radioStationName
artworkDataDigest
isAlwaysLive
isAdvertisement
_duration
_elapsedTime
_radioStationIdentifier
_timestamp
_uniqueIdentifier
_album
_artist
_artworkDataDigest
_playbackRate
_radioStationHash
_radioStationName
_repeatMode
_shuffleMode
_title
_isAdvertisement
_isAlwaysLive
_isExplicitTrack
_isMusicApp
isEqualToString:
setSampleRate:
setHasSampleRate:
hasSampleRate
sampleRate
_sampleRate
setMotion:
setButtons:
hasMotion
motion
hasButtons
buttons
initWithGameControllerEvent:controllerID:
initWithButtons:controllerID:
event
shouldLog
_eventInitialized
_hasEvent
_gcEvent
_priority
initWithGameControllerProperties:controllerID:
initWithProperties:
initWithControllerID:
setInputModeFlags:
inputModeFlags
initWithInputMode:
inputMode
setIsPlaying:
clear
_isPlaying
setHasState:
hasState
stateAsString:
StringAsState:
_state
setEvent:
setVirtualDeviceID:
setHasVirtualDeviceID:
hasVirtualDeviceID
hasEvent
virtualDeviceID
_virtualDeviceID
_event
setName:
localizedModelName
setLocalizedModelName:
systemBuildVersion
setSystemBuildVersion:
applicationBundleIdentifier
setApplicationBundleIdentifier:
applicationBundleVersion
setApplicationBundleVersion:
protocolVersion
setProtocolVersion:
initWithDeviceInfo:
deviceInfo
_deviceInfo
handlerReturnStatusCount
clearHandlerReturnStatus
handlerReturnStatusAtIndex:
addHandlerReturnStatus:
setErrorCode:
setHasErrorCode:
hasErrorCode
handlerReturnStatus
setHandlerReturnStatus:count:
errorCode
_handlerReturnStatus
_errorCode
initWithName:
bytes
packetsFromMessage:completion:
initForWritingWithMutableData:
encodeWithCoder:
finishEncoding
UTF8String
initWithBytes:length:
initForReadingWithData:
initWithCoder:
setSupportedFormats:
setDefaultFormat:
addSupportedFormats:
supportedFormatsCount
clearSupportedFormats
supportedFormatsAtIndex:
supportedFormatsType
hasDefaultFormat
supportedFormats
defaultFormat
_defaultFormat
_supportedFormats
setFormatSettings:
setContents:
setPacketDescriptions:
addPacketDescriptions:
packetDescriptionsCount
clearPacketDescriptions
packetDescriptionsAtIndex:
packetDescriptionsType
hasFormatSettings
setPacketCapacity:
setHasPacketCapacity:
hasPacketCapacity
setMaximumPacketSize:
setHasMaximumPacketSize:
hasMaximumPacketSize
setHasPacketCount:
hasPacketCount
hasContents
maximumPacketSize
contents
_maximumPacketSize
_packetCapacity
_packetCount
_contents
_packetDescriptions
substringToIndex:
uppercaseString
stringByReplacingCharactersInRange:withString:
respondsToSelector:
valueForKey:
methodForSelector:
mr_valueForPotentiallyUndefinedKey:
enumerateKeysAndObjectsUsingBlock:
setValue:forKey:
setDictionaryKeyToProtobufKeyMapping:
createDictionaryFromProtobuf:
createProtobufFromDictionary:
.cxx_destruct
dictionaryKeyToProtobufKeyMapping
protobufClass
setProtobufClass:
dictionaryValueToProtobufValueTransformer
setDictionaryValueToProtobufValueTransformer:
protobufValueToDictionaryValueTransformer
setProtobufValueToDictionaryValueTransformer:
_protobufKeyToDictionaryKeyMapping
_dictionaryKeyToProtobufKeyMapping
_protobufClass
_dictionaryValueToProtobufValueTransformer
_protobufValueToDictionaryValueTransformer
unsignedIntValue
addDeviceIDs:
deviceIDsCount
deviceIDsAtIndex:
initWithDeviceIDs:errorCode:
deviceIDs
protobuf
setDescriptor:
descriptor
initWithProtobuf:
initWithDescriptor:
_descriptor
setDeviceID:
deviceID
initWithDeviceID:errorCode:
initWithRecordingState:
setDataBlock:
_initializeDataIfNecessary
dataBlock
initWithBuffer:time:gain:
setDeviceIdentifier:
deviceIdentifier
initWithErrorCode:deviceIdentifier:
setRed:
setHasRed:
hasRed
setGreen:
setHasGreen:
hasGreen
setBlue:
setHasBlue:
hasBlue
setAlpha:
setHasAlpha:
hasAlpha
green
blue
alpha
_alpha
_blue
_green
_red
addPackets:
packets
initWithName:packets:
_packets
setPlayerIndex:
setVendorName:
playerIndex
vendorName
buttonAUpDelay
setButtonAUpDelay:
profile
setProfile:
_playerIndex
_profile
_vendorName
_buttonAUpDelay
setPairingData:
numberWithInt:
hasPairingData
setStatus:
setHasStatus:
hasStatus
pairingData
status
_pairingData
_status
_object
_objectAddress
setKey:
setData:
hasKey
hasData
_key
setText:
hasText
actionType
setActionType:
setHasActionType:
hasActionType
actionTypeAsString:
StringAsActionType:
text
_actionType
_text
updateWithService:
setDelegate:
setNetService:
TXTRecordData
_deviceInfoFromTXTRecordData:
setDeviceInfo:
_teardownCustomOrigin
hostName
port
inputStream
outputStream
pairedDevice
initWithRole:device:
isPaired
initWithName:identifier:
_scheduleClientStateUpdatesConfigMessage
observerWithDistributedName:localName:queue:
setVolumeControlNotificationObserver:
dataWithBytes:length:
initWithKey:data:
connection
sendMessage:
_registerPlaybackQueueCallback
_callClientConnectionStateCallback:
_callClientGameControllerInputModeCallback
voiceRecordingState
setVoiceRecordingState:
_callClientRecordingStateCallback
_callCientHiliteModeCallback
setPairingCallback:
setPairingCallbackQueue:
setConnectionStateCallback:
setConnectionStateCallbackQueue:
setGameControllerInputModeCallback:
setGameControllerInputModeCallbackQueue:
setGameControllerPropertiesCallback:
setGameControllerPropertiesCallbackQueue:
setTextInputCallback:
setTextInputCallbackQueue:
setRecordingStateCallback:
setRecordingStateCallbackQueue:
setNameCallback:
setNameCallbackQueue:
setPairingAllowedCallback:
setPairingAllowedCallbackQueue:
setHiliteModeCallback:
setHiliteModeCallbackQueue:
setCustomDataCallback:
setCustomDataCallbackQueue:
setConnectionState:error:
_cleanUp
_initializeConnection
_loadDeviceInfo
_openSecuritySession
_setupCustomOrigin
disconnect:
_errorForCurrentState
initWithDeviceDescriptor:
error
sendMessage:queue:reply:
initWithTouchEvent:virtualDeviceID:
initWithButtonEvent:
initWithHIDEvent:
cryptoSession
decryptedTextUsingCryptoSession:
attributes
initWithText:attributes:
_sendTextInputMessageWithActionType:text:
sendTouchEvent:toVirtualDeviceWithID:
dictionaryFromTXTRecordData:
initWithData:encoding:
boolValue
setPairingAllowed:
_handleCryptoPairingMessage:
_handleSetStateMessage:
_handleNotificationMessage:
_handleSetArtworkMessage:
setGameControllerInputMode:
_handleSetVolumeControlAvailabilityMessage:
_handleKeyboardMessage:
_handleTransactionMessage:
_callClientGameControllerPropertiesCallback:controller:
_handleDeviceInfoUpdateMessage:
_handleSetConnectionStateMessage:
_handleHiliteModeMessage:
_handleGenericMessage:
getInputStream:outputStream:
mainRunLoop
initWithInputStream:outputStream:runLoop:
setConnection:
streamsAreValid
isValid
setCustomOrigin:
_handleRemoteCommand:withOptions:completion:
currentSettings
televisionTimeoutDuration
currentDeviceInfo
initWithPairingData:status:
setDataExchangeBlock:
pairingCallbackQueue
_callClientPairingCallback:
setPromptForSetupCodeBlock:
setExchangeCompleteBlock:
setCryptoSession:
open
errorWithDomain:code:userInfo:
textInputCallback
wantsNowPlayingNotifications
wantsNowPlayingArtworkNotifications
wantsVolumeNotifications
setIsCoalescingClientStateUpdatesConfigMessages:
initWithRequest:
code
initWithActionType:text:
setIsCallingClientCallback:
standardCredentials
characterCount
isPairingAllowed
initWithCommand:options:
sendError
results
handlePairingExchangeData:completion:
handlePairingFailureWithStatus:
_updateNowPlayingInfo
notifications
artworkData
volumeControlAvailable
setEditing:
_callClientTextInputCallback:type:
updatePairing
_callClientNameCallback
_callClientAllowsPairingCallback
_callCientCustomDataCallback:name:
clientConnection:didReceiveMessage:
clientDidDisconnect:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
conformsToProtocol:
retainCount
zone
superclass
debugDescription
observer:didObserveNewDeviceInfo:
initWithNetService:
setWantsNowPlayingNotifications:
setWantsNowPlayingArtworkNotifications:
setWantsVolumeNotifications:
customOrigin
setPairingCallback:withQueue:
setConnectionStateCallback:withQueue:
setGameControllerInputModeCallback:withQueue:
setGameControllerPropertiesCallback:withQueue:
setTextEditingCallback:withQueue:
setVoiceRecordingStateCallback:withQueue:
setNameCallback:withQueue:
setPairingAllowedCallback:withQueue:
setHiliteModeCallback:withQueue:
setCustomDataCallback:withQueue:
connect
unpair
registerTouchDeviceWithDescriptor:replyQueue:completion:
sendButtonEvent:
sendHIDEvent:
getTextEditingSessionWithReplyQueue:completion:
insertTextIntoActiveTextEditingSessionWithText:
setTextOnActiveTextEditingSessionWithText:
deleteBackwardInActiveTextEditingSession
clearActiveTextEditingSessionData
registerGameControllerWithProperties:queue:completion:
unregisterGameController:
sendGameControllerEvent:controllerID:
registerVoiceInputDeviceWithDescriptor:replyQueue:completion:
processVoiceInputAudioDataForDeviceID:withBuffer:time:gain:
exitHiliteMode
wake
sendCustomData:withName:
_setupCustomOriginWithReplyQueue:completion:
_addArtwork:toNowPlayingInfo:
netService
volumeControlNotificationObserver
pairingCallback
connectionStateCallback
connectionState
connectionStateCallbackQueue
gameControllerInputModeCallback
gameControllerInputMode
gameControllerInputModeCallbackQueue
gameControllerPropertiesCallback
gameControllerPropertiesCallbackQueue
recordingStateCallback
recordingStateCallbackQueue
textInputCallbackQueue
nameCallback
nameCallbackQueue
pairingAllowedCallback
pairingAllowedCallbackQueue
hiliteModeCallback
hiliteModeCallbackQueue
customDataCallback
customDataCallbackQueue
isCoalescingClientStateUpdatesConfigMessages
isCallingClientCallback
_serialQueue
_workerQueue
_customOrigin
_nowPlayingArtwork
_cachedServerDisconnectError
_deviceInfoObserver
_wantsNowPlayingNotifications
_wantsNowPlayingArtworkNotifications
_wantsVolumeNotifications
_hiliteMode
_isCoalescingClientStateUpdatesConfigMessages
_isCallingClientCallback
_connectionState
_gameControllerInputMode
_netService
_connection
_volumeControlNotificationObserver
_pairingCallback
_pairingCallbackQueue
_connectionStateCallback
_connectionStateCallbackQueue
_gameControllerInputModeCallback
_gameControllerInputModeCallbackQueue
_gameControllerPropertiesCallback
_gameControllerPropertiesCallbackQueue
_recordingStateCallback
_recordingStateCallbackQueue
_textInputCallback
_textInputCallbackQueue
_nameCallback
_nameCallbackQueue
_pairingAllowedCallback
_pairingAllowedCallbackQueue
_hiliteModeCallback
_hiliteModeCallbackQueue
_customDataCallback
_customDataCallbackQueue
handleFailureInFunction:file:lineNumber:description:
pairedDevices
setVolumeControlAvailable:
initWithAvailableFlag:
setAbsolute:
setHasAbsolute:
hasAbsolute
setIntegratedDisplay:
setHasIntegratedDisplay:
hasIntegratedDisplay
setScreenSizeWidth:
setHasScreenSizeWidth:
hasScreenSizeWidth
setScreenSizeHeight:
setHasScreenSizeHeight:
hasScreenSizeHeight
absolute
integratedDisplay
screenSizeWidth
screenSizeHeight
_screenSizeHeight
_screenSizeWidth
_absolute
_integratedDisplay
setMetadata:
hasIdentifier
hasMetadata
metadata
_identifier
_metadata
removeCommandHandlerBlockForKey:
addCommandHandlerBlock:forKey:
setReceivesSupportedCommandsNotifications:
setCommand:
setOptions:
command
options
setLocation:
setHasLocation:
hasLocation
setLength:
setHasLength:
hasLength
setIncludeMetadata:
setHasIncludeMetadata:
hasIncludeMetadata
setArtworkWidth:
setHasArtworkWidth:
hasArtworkWidth
setArtworkHeight:
setHasArtworkHeight:
hasArtworkHeight
location
includeMetadata
artworkWidth
artworkHeight
_artworkHeight
_artworkWidth
_length
_location
_includeMetadata
initWithRole:peerIdentifier:
raise:format:
initWithDomain:code:userInfo:
close
encryptData:withError:
decryptData:withError:
deleteIdentityWithError:
role
peerIdentifier
delegate
_valid
_role
_peerIdentifier
_delegate
setHasVolumeControlAvailable:
hasVolumeControlAvailable
_volumeControlAvailable
setHasCommand:
hasCommand
commandAsString:
StringAsCommand:
hasOptions
_command
_options
setReport:
hasReport
report
_report
serializationDate
_serializationDate
setPrompt:
setInputTraits:
hasPrompt
hasInputTraits
prompt
inputTraits
_inputTraits
_prompt
setHasNowPlayingUpdates:
hasNowPlayingUpdates
setHasArtworkUpdates:
hasArtworkUpdates
setHasVolumeUpdates:
hasVolumeUpdates
setHasKeyboardUpdates:
hasKeyboardUpdates
_artworkUpdates
_keyboardUpdates
_nowPlayingUpdates
_volumeUpdates
write
updateWithValue:
defaultManager
createFileAtPath:contents:attributes:
appendString:
writeToFile:atomically:encoding:error:
initWithPath:
addMessage:data:
_path
_entries
numberWithUnsignedInteger:
setAvg:
setMin:
setMax:
total
setTotal:
values
setValues:
_avg
_min
_max
_total
_values
setX:
setY:
setPhase:
setFinger:
phase
finger
longLongValue
setPackets:
packetsCount
clearPackets
packetsAtIndex:
packetsType
setHasName:
hasName
initWithUTF8String:
setHidEventData:
hidEventData
buttonEvent
weakObjectsPointerArray
allObjects
allTelevisions
null
addPointer:
setCount:
televisionWithName:
registerTelevision:
clearTelevisions
_televisionsPointerArray
_onQueueInitializePairingSessionWithState:
_handlePairingFailureWithError:
setInputKey:
setInputNonce:
setOutputKey:
setOutputNonce:
_onQueuePerformPairingExchangeWithInputData:error:
domain
_removePeer:
pairingSession:didPrepareExchangeData:
initWithLength:
mutableBytes
appendBytes:length:
subdataWithRange:
stringWithCString:encoding:
_updatePeer:
passcode
pairingSession:showSetupCode:
pairingSessionHideSetupCode:
pairingSession:promptForSetupCodeWithDelay:completion:
_delegateDidEnterPasscode:
pairingSession:promptForSetupCodeWithCompletion:
pairingSession:didCompleteExchangeWithError:
dataWithBytesNoCopy:length:
_handleSetupExchangeComplete
_addPeer:
_onQueueDeriveEncryptionKeys
_extendedInfoDictionary
_peerIdentifier:
_generateSetupCodeWithMaximumLength:
_displaySetupCode:
_hideSetupCode
_promptForSetupCodeWithDelay:
device
inputKey
inputNonce
outputKey
outputNonce
_credentials
_pairingSession
_pairingDelegate
_device
_inputKey
_inputNonce
_outputKey
_outputNonce
getCString:maxLength:encoding:
arrayWithObjects:count:
containsObject:
timeIntervalSinceDate:
doubleValue
floatValue
allowsKeyedCoding
encodeObject:forKey:
encodeInt32:forKey:
decodeObjectOfClass:forKey:
decodeInt32ForKey:
supportsSecureCoding
initWithContentItems:range:
range
contentItems
_contentItems
_range
initWithRevision:
revision
_revision
initWithIdentifier:publicKey:privateKey:
publicKey
privateKey
_publicKey
_privateKey
recordingState
setRecordingState:
initWithDeviceID:
_deviceID
_recordingState
setJpegData:
hasJpegData
jpegData
_jpegData
_parseBuffer:
_parseTimestamp:
_parseGain:
setFormatSettingsPlistData:
setStartOffset:
setVariableFramesInPacket:
setDataByteSize:
_copyWithZone:usingConcreteClass:
formatSettingsPlistData
dataByteSize
startOffset
variableFramesInPacket
mutableCopyWithZone:
initWithMediaRemoteService:
setRoutingNotificationObservers:
setExternalScreenTypeNotificationObservers:
setOriginNotificationObservers:
setVoiceInputNotificationObservers:
initWithObjects:
setNowPlayingNotificationObservers:
removeOrigin:
fetchPickableRoutesForCategory:completion:
sendPackets:forOrigin:
isRegisteredForNowPlayingNotifications
setReceivesRoutesChangedNotifications:
setReceivesExternalScreenTypeChangedNotifications:
setReceivesOriginChangedNotifications:
setReceivesVoiceInputRecordingStateNotifications:
registeredOrigins
registerOrigin:withCompletion:
unregisterOrigin:withCompletion:
unregisterAllOriginsWithCompletion:
fetchPickableRoutesWithCategory:completion:
nowPlayingNotificationObservers
routingNotificationObservers
originNotificationObservers
voiceInputNotificationObservers
receivesExternalScreenTypeChangedNotifications
receivesSupportedCommandsNotifications
receivesRoutesChangedNotifications
receivesOriginChangedNotifications
receivesPlaybackErrorNotifications
setReceivesPlaybackErrorNotifications:
receivesVoiceInputRecordingStateNotifications
externalScreenTypeNotificationObservers
_registeredNowPlayingObservers
_registeredOrigins
_routingClientController
_nowPlayingPlaybackQueueContext
_transactionSources
_televisionPairedDevicesChangedObserver
_televisionIsPairingAllowedChangedObserver
_receivesExternalScreenTypeChangedNotifications
_receivesSupportedCommandsNotifications
_receivesRoutesChangedNotifications
_receivesOriginChangedNotifications
_receivesPlaybackErrorNotifications
_receivesVoiceInputRecordingStateNotifications
_nowPlayingNotificationObservers
_routingNotificationObservers
_originNotificationObservers
_voiceInputNotificationObservers
_service
_externalScreenTypeNotificationObservers
commandHandlerBlocks
playbackQueueCallback
transactionCallbackForName:
videoThumbnailsCallback
audioAmplitudeSamplesCallback
setUsagePage:
setUsage:
setButtonDown:
usagePage
usage
buttonDown
setHasHiliteMode:
hasHiliteMode
setLocalizedTitle:
setLocalizedShortTitle:
preferredIntervalsCount
clearPreferredIntervals
preferredIntervalAtIndex:
addPreferredInterval:
supportedRatesCount
clearSupportedRates
supportedRateAtIndex:
addSupportedRate:
setEnabled:
setHasEnabled:
hasEnabled
setActive:
setHasActive:
hasActive
preferredIntervals
setPreferredIntervals:count:
hasLocalizedTitle
hasLocalizedShortTitle
setMinimumRating:
setHasMinimumRating:
hasMinimumRating
setMaximumRating:
setHasMaximumRating:
hasMaximumRating
supportedRates
setSupportedRates:count:
setPresentationStyle:
setHasPresentationStyle:
hasPresentationStyle
setSkipInterval:
setHasSkipInterval:
hasSkipInterval
setNumAvailableSkips:
setHasNumAvailableSkips:
hasNumAvailableSkips
setSkipFrequency:
setHasSkipFrequency:
hasSkipFrequency
setCanScrub:
setHasCanScrub:
hasCanScrub
enabled
active
localizedTitle
localizedShortTitle
minimumRating
maximumRating
presentationStyle
skipInterval
numAvailableSkips
skipFrequency
canScrub
_preferredIntervals
_supportedRates
_canScrub
_localizedShortTitle
_localizedTitle
_maximumRating
_minimumRating
_numAvailableSkips
_presentationStyle
_skipFrequency
_skipInterval
_active
_enabled
setHasUsagePage:
hasUsagePage
setHasUsage:
hasUsage
setHasButtonDown:
hasButtonDown
_usage
_usagePage
_buttonDown
bundleWithIdentifier:
localizations
preferredLanguages
preferredLocalizationsFromArray:forPreferences:
objectAtIndexedSubscript:
pathForResource:ofType:inDirectory:forLocalization:
initWithContentsOfFile:
localizedStringForKey:value:table:
setAttributes:
setEncryptedTextCyphertext:
hasAttributes
hasEncryptedTextCyphertext
encryptedTextCyphertext
_attributes
_encryptedTextCyphertext
request
setAuthenticationToken:
setSendCommandMessage:
setSendCommandResultMessage:
setGetStateMessage:
setSetStateMessage:
setSetArtworkMessage:
setRegisterHIDDeviceMessage:
setRegisterHIDDeviceResultMessage:
setSendHIDEventMessage:
setSendHIDReportMessage:
setSendVirtualTouchEventMessage:
setNotificationMessage:
setContentItemsChangedNotificationMessage:
setDeviceInfoMessage:
setClientUpdatesConfigMessage:
setVolumeControlAvailabilityMessage:
setGameController:
setRegisterGameController:
setRegisterGameControllerResponse:
setUnregisterGameController:
setRegisterForGameControllerEvents:
setKeyboardMessage:
setGetKeyboardMessage:
setTextInputMessage:
setGetVoiceInputDevicesMessage:
setGetVoiceInputDevicesResponseMessage:
setRegisterVoiceInputDeviceMessage:
setRegisterVoiceInputDeviceResponseMessage:
setSetRecordingStateMessage:
setSendVoiceInputMessage:
setGetPlaybackQueue:
setTransactionPackets:
setCryptoPairingMessage:
setGameControllerProperties:
setReadyStateMessage:
setConnectionState:
setSendButtonEventMessage:
setSetHiliteModeMessage:
setWakeDeviceMessage:
setGenericMessage:
setType:
setHasType:
hasType
typeAsString:
StringAsType:
hasAuthenticationToken
hasSendCommandMessage
hasSendCommandResultMessage
hasGetStateMessage
hasSetStateMessage
hasSetArtworkMessage
hasRegisterHIDDeviceMessage
hasRegisterHIDDeviceResultMessage
hasSendHIDEventMessage
hasSendHIDReportMessage
hasSendVirtualTouchEventMessage
hasNotificationMessage
hasContentItemsChangedNotificationMessage
hasDeviceInfoMessage
hasClientUpdatesConfigMessage
hasVolumeControlAvailabilityMessage
hasGameController
hasRegisterGameController
hasRegisterGameControllerResponse
hasUnregisterGameController
hasRegisterForGameControllerEvents
hasKeyboardMessage
hasGetKeyboardMessage
hasTextInputMessage
hasGetVoiceInputDevicesMessage
hasGetVoiceInputDevicesResponseMessage
hasRegisterVoiceInputDeviceMessage
hasRegisterVoiceInputDeviceResponseMessage
hasSetRecordingStateMessage
hasSendVoiceInputMessage
hasGetPlaybackQueue
hasTransactionPackets
hasCryptoPairingMessage
hasGameControllerProperties
hasReadyStateMessage
hasConnectionState
hasSendButtonEventMessage
hasSetHiliteModeMessage
hasWakeDeviceMessage
hasGenericMessage
authenticationToken
sendCommandMessage
sendCommandResultMessage
getStateMessage
setStateMessage
setArtworkMessage
registerHIDDeviceMessage
registerHIDDeviceResultMessage
sendHIDEventMessage
sendHIDReportMessage
sendVirtualTouchEventMessage
notificationMessage
contentItemsChangedNotificationMessage
deviceInfoMessage
clientUpdatesConfigMessage
volumeControlAvailabilityMessage
gameController
registerGameController
registerGameControllerResponse
unregisterGameController
registerForGameControllerEvents
keyboardMessage
getKeyboardMessage
textInputMessage
getVoiceInputDevicesMessage
getVoiceInputDevicesResponseMessage
registerVoiceInputDeviceMessage
registerVoiceInputDeviceResponseMessage
setRecordingStateMessage
sendVoiceInputMessage
getPlaybackQueue
transactionPackets
cryptoPairingMessage
gameControllerProperties
readyStateMessage
sendButtonEventMessage
setHiliteModeMessage
wakeDeviceMessage
genericMessage
_authenticationToken
_clientUpdatesConfigMessage
_contentItemsChangedNotificationMessage
_cryptoPairingMessage
_deviceInfoMessage
_gameController
_gameControllerProperties
_genericMessage
_getKeyboardMessage
_getPlaybackQueue
_getStateMessage
_getVoiceInputDevicesMessage
_getVoiceInputDevicesResponseMessage
_keyboardMessage
_notificationMessage
_readyStateMessage
_registerForGameControllerEvents
_registerGameController
_registerGameControllerResponse
_registerHIDDeviceMessage
_registerHIDDeviceResultMessage
_registerVoiceInputDeviceMessage
_registerVoiceInputDeviceResponseMessage
_sendButtonEventMessage
_sendCommandMessage
_sendCommandResultMessage
_sendHIDEventMessage
_sendHIDReportMessage
_sendVirtualTouchEventMessage
_sendVoiceInputMessage
_setArtworkMessage
_setHiliteModeMessage
_setRecordingStateMessage
_setStateMessage
_textInputMessage
_transactionPackets
_type
_unregisterGameController
_volumeControlAvailabilityMessage
_wakeDeviceMessage
hasDescriptor
setHasX:
hasX
setHasY:
hasY
setHasPhase:
hasPhase
phaseAsString:
StringAsPhase:
setHasFinger:
hasFinger
_finger
_phase
setBundleIdentifier:
setParentApplicationBundleIdentifier:
setTintColor:
setProcessIdentifier:
setHasProcessIdentifier:
hasProcessIdentifier
hasBundleIdentifier
hasParentApplicationBundleIdentifier
setProcessUserIdentifier:
setHasProcessUserIdentifier:
hasProcessUserIdentifier
nowPlayingVisibility
setNowPlayingVisibility:
setHasNowPlayingVisibility:
hasNowPlayingVisibility
nowPlayingVisibilityAsString:
StringAsNowPlayingVisibility:
hasTintColor
processIdentifier
bundleIdentifier
parentApplicationBundleIdentifier
processUserIdentifier
tintColor
_bundleIdentifier
_nowPlayingVisibility
_parentApplicationBundleIdentifier
_processIdentifier
_processUserIdentifier
_tintColor
initWithSuiteName:
_boolValueForKey:usingDefaultValue:
synchronize
integerForKey:
isTelevisionPairingAllowed
setBool:forKey:
postNotificationName:object:
_doubleValueForKey:usingDefaultValue:
boolForKey:
doubleForKey:
usePeerToPeerTelevisionConnections
useNoDelayOptionForTelevisionSockets
useDebugAVRouteWithoutVolumeControl
hasTelevisionSocketQOSLevelSet
televisionSocketQOSLevel
setTelevisionPairingAllowed:
televisionNowPlayingInfoCoalesceDuration
televisionNowPlayingInfoArtworkCoalesceDuration
televisionDisconnectWaitDuration
televisionDisconnectSleepDuration
televisionSleepAssertionOnClientConnectDuration
bluetoothDeviceResumeDuration
broadcastCommandWaitDuration
_userDefaults
setHasPlayerIndex:
hasPlayerIndex
hasVendorName
setHasButtonAUpDelay:
hasButtonAUpDelay
setHasProfile:
hasProfile
profileAsString:
StringAsProfile:
setHasStartOffset:
hasStartOffset
setHasVariableFramesInPacket:
hasVariableFramesInPacket
setHasDataByteSize:
hasDataByteSize
_startOffset
_dataByteSize
_variableFramesInPacket
bundleIdentifer
commandHandlerStatuses
responseData
initWithPID:bundleIdentifier:statuses:
initWithPID:bundleIdentifier:responseData:
_commandHandlerStatuses
_pid
_responseData
_bundleIdentifer
setHasDeviceIdentifier:
hasDeviceIdentifier
_deviceIdentifier
encodeBool:forKey:
decodeBoolForKey:
isConnected
setConnected:
_connected
setTotalLength:
setHasTotalLength:
hasTotalLength
totalLength
_totalLength
setRevision:
hasRevision
_pickableRoutesDidChangeNotification:
_cacheFetchedPickableRoutes:forCategory:
_flushPendingCompletionHandlersWithPickableRoutes:forCategory:
mediaRemoteService
_mediaRemoteService
_pendingCompletionHandlersForCategories
_cachedRoutesForCategories
hasFormatSettingsPlistData
_formatSettingsPlistData
setSourceID:
setMediaType:
setContextID:
setSystemAppPlaybackQueueData:
setDestinationAppDisplayID:
setStationURL:
setContentItemID:
hasSourceID
hasMediaType
setExternalPlayerCommand:
setHasExternalPlayerCommand:
hasExternalPlayerCommand
setRating:
setHasRating:
hasRating
setNegative:
setHasNegative:
hasNegative
setPlaybackPosition:
setHasPlaybackPosition:
hasPlaybackPosition
hasContextID
setTrackID:
setHasTrackID:
hasTrackID
setRadioStationID:
setHasRadioStationID:
hasRadioStationID
hasSystemAppPlaybackQueueData
hasDestinationAppDisplayID
setSendOptions:
setHasSendOptions:
hasSendOptions
setRequestDefermentToPlaybackQueuePosition:
setHasRequestDefermentToPlaybackQueuePosition:
hasRequestDefermentToPlaybackQueuePosition
setShouldOverrideManuallyCuratedQueue:
setHasShouldOverrideManuallyCuratedQueue:
hasShouldOverrideManuallyCuratedQueue
hasStationURL
setShouldBeginRadioPlayback:
setHasShouldBeginRadioPlayback:
hasShouldBeginRadioPlayback
setPlaybackQueueInsertionPosition:
setHasPlaybackQueueInsertionPosition:
hasPlaybackQueueInsertionPosition
hasContentItemID
sourceID
mediaType
externalPlayerCommand
rating
negative
playbackPosition
contextID
trackID
radioStationID
systemAppPlaybackQueueData
destinationAppDisplayID
sendOptions
requestDefermentToPlaybackQueuePosition
shouldOverrideManuallyCuratedQueue
stationURL
shouldBeginRadioPlayback
playbackQueueInsertionPosition
contentItemID
_playbackPosition
_radioStationID
_trackID
_contentItemID
_contextID
_destinationAppDisplayID
_mediaType
_playbackQueueInsertionPosition
_rating
_sendOptions
_sourceID
_stationURL
_systemAppPlaybackQueueData
_externalPlayerCommand
_negative
_requestDefermentToPlaybackQueuePosition
_shouldBeginRadioPlayback
_shouldOverrideManuallyCuratedQueue
initWithSendError:results:
_results
dataExchangeBlock
showSetupCodeBlock
setShowSetupCodeBlock:
hideSetupCodeBlock
setHideSetupCodeBlock:
promptForSetupCodeBlock
exchangeCompleteBlock
_dataExchangeBlock
_showSetupCodeBlock
_hideSetupCodeBlock
_promptForSetupCodeBlock
_exchangeCompleteBlock
_persistentDeviceID
currentProtocolVersion
mainBundle
infoDictionary
_persistentDeviceIDFromFile:deviceID:
standardUserDefaults
fileExistsAtPath:
archiveRootObject:toFile:
fileURLWithPath:
setResourceValue:forKey:error:
unarchiveObjectWithFile:
archivedDataWithRootObject:
writeToFile:atomically:
processorTimeScale
_localizedModelName
_systemBuildVersion
_applicationBundleIdentifier
_applicationBundleVersion
_protocolVersion
_pairingAllowed
_deviceInfoDidChange
_gestaltNotificationToken
_pairingAllowedSetting
unsignedIntegerValue
applicationProxyForIdentifier:
entitlements
setNotifications:
addNotification:
notificationsCount
clearNotifications
notificationAtIndex:
notificationType
_notifications
setSubtitle:
setAlbumName:
setTrackArtistName:
setAlbumArtistName:
setDirectorName:
setLocalizedContentRating:
setArtworkData:
hasSubtitle
setIsContainer:
setHasIsContainer:
hasIsContainer
setIsPlayable:
setHasIsPlayable:
hasIsPlayable
setPlaybackProgress:
setHasPlaybackProgress:
hasPlaybackProgress
hasAlbumName
hasTrackArtistName
hasAlbumArtistName
hasDirectorName
setSeasonNumber:
setHasSeasonNumber:
hasSeasonNumber
setEpisodeNumber:
setHasEpisodeNumber:
hasEpisodeNumber
setReleaseDate:
setHasReleaseDate:
hasReleaseDate
setPlayCount:
setHasPlayCount:
hasPlayCount
hasLocalizedContentRating
setIsExplicitItem:
setHasIsExplicitItem:
hasIsExplicitItem
setPlaylistType:
setHasPlaylistType:
hasPlaylistType
setRadioStationType:
setHasRadioStationType:
hasRadioStationType
hasArtworkData
subtitle
isContainer
isPlayable
playbackProgress
albumName
trackArtistName
albumArtistName
directorName
seasonNumber
episodeNumber
releaseDate
playCount
localizedContentRating
isExplicitItem
playlistType
radioStationType
_releaseDate
_albumArtistName
_albumName
_artworkData
_directorName
_episodeNumber
_localizedContentRating
_playCount
_playbackProgress
_playlistType
_radioStationType
_seasonNumber
_subtitle
_trackArtistName
_isContainer
_isExplicitItem
_isPlayable
appendData:
writeLength
actualLength
writePosition
isReadComplete
initWithBytesNoCopy:length:freeWhenDone:
encodeInteger:forKey:
decodeIntForKey:
merge:
isWriteComplete
isComplete
setWriteLength:
_writePosition
_writeLength
addObjectsFromArray:
hasMorePacketsToPacketize
hasMorePacketsToUnpacketize
packetize:packageSize:completion:
unpacketize:completion:
_incomingPackets
_outgoingPackets
isActive
_begin
_processMessage:
initWithName:forOrigin:withQueue:
sendPackets:
_packetizer
_origin
_originSources
_query:
transaction:didReceivePackets:completion:
_transactionEnded
_calculateMemory
transactionDidEnd:
transactionRequestingMemorySize:
initWithName:fromMessage:
send:toConnection:completion:
intValue
timeIntervalSinceReferenceDate
dateWithTimeIntervalSinceReferenceDate:
setContentItems:
setGravity:
setUserAcceleration:
gravity
userAcceleration
setButtonA:
setButtonX:
setButtonPause:
setDpadX:
setDpadY:
setButtonB:
setButtonY:
setLeftShoulder:
setRightShoulder:
setLeftThumbstickX:
setLeftThumbstickY:
setRightThumbstickX:
setRightThumbstickY:
setLeftTrigger:
setRightTrigger:
hasButtonA
buttonA
hasButtonX
buttonX
hasButtonPause
buttonPause
hasDpadX
dpadX
hasDpadY
dpadY
hasButtonB
buttonB
hasButtonY
buttonY
hasLeftShoulder
leftShoulder
hasRightShoulder
rightShoulder
hasLeftThumbstickX
leftThumbstickX
hasLeftThumbstickY
leftThumbstickY
hasRightThumbstickX
rightThumbstickX
hasRightThumbstickY
rightThumbstickY
hasLeftTrigger
leftTrigger
hasRightTrigger
rightTrigger
initWithNotifications:
initWithNotification:
initWithArtworkData:
initWithUnderlyingCodableMessage:identifier:error:
sharedLogger
logMessage:protocolMessage:
callbackWithBlock:queue:
addCallback:
protocolMessageWithProtobufData:
protobufData
setError:
_protobufData
_underlyingCodableMessage
_error
_messageSentCallbacks
_messagePurgedCallbacks
hasLocalizedModelName
hasSystemBuildVersion
hasApplicationBundleIdentifier
hasApplicationBundleVersion
setHasProtocolVersion:
hasProtocolVersion
isAbsolute
isIntegratedDisplay
screenSize
setDeviceDescriptor:
deviceDescriptor
setScreenSize:
_deviceDescriptor
decodeObjectForKey:
initWithType:languageTag:characteristics:displayName:identifier:
languageOptionType
languageTag
languageOptionCharacteristics
_languageOptionType
_languageTag
_languageOptionCharacteristics
initWithLanguageOptions:defaultLanguageOption:allowEmptySelection:
allowEmptySelection
defaultLanguageOption
languageOptions
_allowEmptySelection
_defaultLanguageOption
_languageOptions
hasHidEventData
_hidEventData
pINEntrySeparatorIndexesCount
clearPINEntrySeparatorIndexes
pINEntrySeparatorIndexesAtIndex:
addPINEntrySeparatorIndexes:
autocapitalizationType
setAutocapitalizationType:
setHasAutocapitalizationType:
hasAutocapitalizationType
autocapitalizationTypeAsString:
StringAsAutocapitalizationType:
keyboardType
setKeyboardType:
setHasKeyboardType:
hasKeyboardType
keyboardTypeAsString:
StringAsKeyboardType:
returnKeyType
setReturnKeyType:
setHasReturnKeyType:
hasReturnKeyType
returnKeyTypeAsString:
StringAsReturnKeyType:
setAutocorrection:
setHasAutocorrection:
hasAutocorrection
setSpellchecking:
setHasSpellchecking:
hasSpellchecking
setEnablesReturnKeyAutomatically:
setHasEnablesReturnKeyAutomatically:
hasEnablesReturnKeyAutomatically
setSecureTextEntry:
setHasSecureTextEntry:
hasSecureTextEntry
setValidTextRangeLocation:
setHasValidTextRangeLocation:
hasValidTextRangeLocation
setValidTextRangeLength:
setHasValidTextRangeLength:
hasValidTextRangeLength
pINEntrySeparatorIndexes
setPINEntrySeparatorIndexes:count:
autocorrection
spellchecking
enablesReturnKeyAutomatically
secureTextEntry
validTextRangeLocation
validTextRangeLength
_pINEntrySeparatorIndexes
_validTextRangeLength
_validTextRangeLocation
_autocapitalizationType
_keyboardType
_returnKeyType
_autocorrection
_enablesReturnKeyAutomatically
_secureTextEntry
_spellchecking
bundleProxyForIdentifier:
bundleURL
bundleWithURL:
componentsJoinedByString:
initWithFormat:
initWithString:
arrayWithArray:
numberWithLong:
setHasInputModeFlags:
hasInputModeFlags
inputModeFlagsAsString:
StringAsInputModeFlags:
_inputModeFlags
setHasDpadX:
setHasDpadY:
setHasButtonA:
setHasButtonB:
setHasButtonX:
setHasButtonY:
setHasLeftShoulder:
setHasRightShoulder:
setHasLeftThumbstickX:
setHasLeftThumbstickY:
setHasRightThumbstickX:
setHasRightThumbstickY:
setHasLeftTrigger:
setHasRightTrigger:
setHasButtonPause:
_buttonA
_buttonB
_buttonPause
_buttonX
_buttonY
_dpadX
_dpadY
_leftShoulder
_leftThumbstickX
_leftThumbstickY
_leftTrigger
_rightShoulder
_rightThumbstickX
_rightThumbstickY
_rightTrigger
createNowPlayingArtworkFromXPCDictionary:
bindToXPCDictionary:
copyImageData
isEqualToData:
mimeType
_imageData
_mimeType
_registerDefaultCallbacks
_avSystemControllerServerConnectionDiedNotification:
allValues
canBeNowPlayingApp
origin
setTransactionCallback:forName:
initWithOrigin:
applicationPickedRoutes
setApplicationPickedRoutes:
routeDiscoveryMode
setRouteDiscoveryMode:
_canBeNowPlayingApp
_isOverrideApp
_notifyRestoreClientStateForLaunch
_notifyDidLaunchToken
_commandHandlerBlocks
_transactionCallbacks
_routeDiscoveryMode
_applicationPickedRoutes
_playbackQueueCallback
_videoThumbnailsCallback
_audioAmplitudeSamplesCallback
sharedClient
setRecordingStateCallback:forDeviceID:
_recordingStateChangedNotification:
_deviceIDToCallbackMap
initWithMachServiceName:options:
setInvalidationHandler:
setInterruptionHandler:
addController:
removeController:
controllerWithUDID:setData:
controllerWithUDID:setValue:forElement:
microControllerWithDigitizerX:withY:withTimeStamp:touchDown:
microControllerWithUDID:setDigitizerX:digitizerY:withTimeStamp:touchDown:
replyConnectedHosts:
interfaceWithProtocol:
setExportedInterface:
setExportedObject:
ping
startForwardingToApplicationNamed:pid:bundlePath:
startBonjourService
setUserActivityUserInfo:
addController:forward:
removeController:forward:
controllerWithUDID:setValue:forElement:forward:
appWillEnterForeground
appDidEnterBackground
appWillEnterForegroundWithPID:
appDidEnterBackgroundWithPID:
requestConnectedHosts
setRemoteObjectInterface:
remoteObjectProxyWithErrorHandler:
resume
initWithProfile:
_openConnection
_delayEvent:setValue:forElement:withUpDelay:
controllerID:setValue:forElement:
invokeEventsForController:beacuseElement:
eventForController:element:
sendEventBlock
send
setLastDownEvent:
lastDownEvent
setSendEventBlock:
deviceHash
defaultGameControllerDaemonProxy
addEmulatedControllerWithProperties:
removeEmulatedController:
controllerID:setValue:forElement:withUpDelay:
controllerID:setDigitizerX:digitizerY:withTimeStamp:touchDown:
controllerID:setArrayValueX:y:z:forElement:
_remote
_delayedEvents
integerValue
_events
_lastDownEvent
_sendEventBlock
clearDeviceIDs
setDeviceIDs:count:
_deviceIDs
dataUsingEncoding:
initWithState:encryptedTextCyphertext:attributes:
encryptedMessageWithState:text:attributes:usingCryptoSession:
sendGameControllerEvent:
_controller
_openStream:
forceDisconnect
removeFromRunLoop:forMode:
createHeader:
_flush
_setQOSPropertiesOnStream:
hasBytesAvailable
read:maxLength:
processData:
_disconnectClient
streamError
_preProcessMessage:data:
hasSpaceAvailable
write:maxLength:
setProperty:forKey:
scheduleInRunLoop:forMode:
_adjustTimestamp:
stream:handleEvent:
parser:didParseMessage:
useSSL
setUseSSL:
registeredToNowPlayingUpdates
setRegisteredToNowPlayingUpdates:
registeredToNowPlayingArtworkUpdates
setRegisteredToNowPlayingArtworkUpdates:
registeredVolumeControlAvailabilityUpdates
setRegisteredVolumeControlAvailabilityUpdates:
registeredKeyboardUpdates
setRegisteredKeyboardUpdates:
_parser
_runLoop
_messageQueue
_firstClientNanoseconds
_firstDeviceTicks
_disconnected
_useSSL
_registeredToNowPlayingUpdates
_registeredToNowPlayingArtworkUpdates
_registeredVolumeControlAvailabilityUpdates
_registeredKeyboardUpdates
_voiceRecordingState
_inputStream
_outputStream
_cryptoSession
streamStatus
setIncludesPeerToPeer:
endDiscovery
searchForServicesOfType:inDomain:
resolveWithTimeout:
televisionController:didRemoveTelevision:
televisionController:didDiscoverTelevision:
netServiceBrowserWillSearch:
netServiceBrowserDidStopSearch:
netServiceBrowser:didNotSearch:
netServiceBrowser:didFindDomain:moreComing:
netServiceBrowser:didFindService:moreComing:
netServiceBrowser:didRemoveDomain:moreComing:
netServiceBrowser:didRemoveService:moreComing:
netServiceWillPublish:
netServiceDidPublish:
netService:didNotPublish:
netServiceWillResolve:
netServiceDidResolveAddress:
netService:didNotResolve:
netServiceDidStop:
netService:didUpdateTXTRecordData:
netService:didAcceptConnectionWithInputStream:outputStream:
beginDiscovery
isDiscovering
_serviceBrowser
_discoveredTelevisions
_resolvingServices
_discovering
initWithCallbackBlock:queue:
callbackBlock
_callbackBlock
discoveryCallback
setDiscoveryCallback:
removalCallback
setRemovalCallback:
_discoveryCallback
_removalCallback
setHasDeviceID:
hasDeviceID
setHasRecordingState:
hasRecordingState
recordingStateAsString:
StringAsRecordingState:
_originClients
_screenSize
initWithTitle:prompt:
isEditing
_editing
_buttons
_motion
hasDataBlock
addContentItem:
contentItemsCount
clearContentItems
contentItemAtIndex:
contentItemType
hasImageData
setHasTime:
encodeInt:forKey:
initWithPrimaryAppDisplayID:secondaryAppDisplayID:
primaryApplicationDisplayID
secondaryApplicationDisplayID
shouldPrepareAppPlaybackQueue
creatorProcessID
_primaryApplicationDisplayID
_secondaryApplicationDisplayID
_shouldPrepareAppPlaybackQueue
_creatorProcessID
setPrimaryApplicationDisplayID:
setSecondaryApplicationDisplayID:
setShouldPrepareAppPlaybackQueue:
hasDeviceDescriptor
hasGravity
hasUserAcceleration
_gravity
_userAcceleration
setCharacterCount:
_randomPasscode
setPasscode:
appendFormat:
_characterCount
_passcode
setShouldLog:
_token
_shouldLog
idx (%tu) is out of range (%tu)
%@ %@
timeIntervals
thumbnailsWidth
thumbnailsHeight
timeIntervalsCount
TQ,R,N
T^d,R,N
hasThumbnailsWidth
TB,N
Tf,N,V_thumbnailsWidth
hasThumbnailsHeight
Tf,N,V_thumbnailsHeight
controllerID
properties
hasControllerID
TQ,N,V_controllerID
hasProperties
TB,R,N
T@"_MRGameControllerPropertiesProtobuf",&,N,V_properties
nowPlayingUpdates
artworkUpdates
volumeUpdates
keyboardUpdates
buffer
time
gain
hasBuffer
T@"_MRAudioBufferProtobuf",&,N,V_buffer
hasTime
T@"_MRAudioTimeProtobuf",&,N,V_time
hasGain
Td,N,V_gain
v8@?0
reply
T@?,R,N,V_reply
queue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
data
T@"NSData",R,N
message
T@"MRProtocolMessage",R,N
readPosition
Tq,N,V_readPosition
finished
TB,R,N,GisFinished
canPurge
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-645.18/MediaRemote/Framework/Television/MRTelevisionMessageQueue.m
<Unknown File>
Removing unfinished message. This is bad
B16@?0Q8
AVAudioFormat
AVFoundation
AVAudioCompressedBuffer
T@"AVAudioCompressedBuffer",R,N,V_buffer
formatSettings
T@"NSDictionary",R,N,V_formatSettings
_MRLogForCategory
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-645.18/MediaRemote/Framework/Utility/MRLog.m
category < MRLoggingCategoryCOUNT
MediaRemote
NowPlaying
Television
AudioInputPlugin
com.apple.mediaremote
supportedCommand
supportedCommands
T@"NSMutableArray",&,N,V_supportedCommands
nowPlayingInfo
T@"NSDictionary",R,N
T@"NSArray",R,N
playbackQueue
T^v,R,N
displayID
T@"NSString",R,N
displayName
playbackState
TI,R,N
state
hiliteMode
playbackQueueContext
hasNowPlayingInfo
T@"_MRNowPlayingInfoProtobuf",&,N,V_nowPlayingInfo
hasSupportedCommands
T@"_MRSupportedCommandsProtobuf",&,N,V_supportedCommands
hasPlaybackQueue
T@"_MRPlaybackQueueProtobuf",&,N,V_playbackQueue
hasDisplayID
T@"NSString",&,N,V_displayID
hasDisplayName
T@"NSString",&,N,V_displayName
hasPlaybackState
TI,N,V_playbackState
hasPlaybackQueueContext
T@"_MRPlaybackQueueContextProtobuf",&,N,V_playbackQueueContext
MRMediaRemoteMediaTypeMusic
MRMediaRemoteMediaTypePodcast
MRMediaRemoteMediaTypeAudioBook
MRMediaRemoteMediaTypeITunesU
kMRMediaRemoteMediaTypeITunesRadio
kMRMediaRemoteNowPlayingInfoTypeAudio
kMRMediaRemoteNowPlayingInfoTypeVideo
kMRMediaRemoteNowPlayingInfoDidChangeNotification
kMRMediaRemoteOriginNowPlayingInfoDidChangeNotification
kMRMediaRemoteOriginUserInfoKey
kMRMediaRemoteOriginDataUserInfoKey
kMRMediaRemoteNowPlayingApplicationDidChangeNotification
kMRMediaRemoteNowPlayingApplicationDisplayNameDidChangeNotification
kMRMediaRemoteNowPlayingApplicationDidRegister
kMRMediaRemoteNowPlayingApplicationDidUnregister
kMRMediaRemoteNowPlayingApplicationClientStateDidChange
kMRMediaRemoteNowPlayingApplicationDisplayNameUserInfoKey
kMRMediaRemoteNowPlayingApplicationIsPlayingDidChangeNotification
kMRMediaRemoteNowPlayingApplicationIsPlayingUserInfoKey
kMRMediaRemoteNowPlayingApplicationPIDUserInfoKey
kMRMediaRemoteNowPlayingApplicationPlaybackStateDidChangeNotification
kMRMediaRemoteAnyApplicationIsPlayingDidChangeNotification
kMRMediaRemoteAnyApplicationIsPlayingUserInfoKey
kMRMediaRemoteNowPlayingInfoAlbum
kMRMediaRemoteNowPlayingInfoAlbumiTunesStoreAdamIdentifier
kMRMediaRemoteNowPlayingInfoArtist
kMRMediaRemoteNowPlayingInfoArtistiTunesStoreAdamIdentifier
kMRMediaRemoteNowPlayingInfoArtworkData
kMRMediaRemoteNowPlayingInfoArtworkMIMEType
kMRMediaRemoteNowPlayingInfoAssetURL
kMRMediaRemoteNowPlayingInfoAvailableLanguageOptionsData
kMRMediaRemoteNowPlayingInfoChapterNumber
kMRMediaRemoteNowPlayingInfoComposer
kMRMediaRemoteNowPlayingInfoCollectionIdentifier
kMRMediaRemoteNowPlayingInfoCurrentLanguageOptionsData
kMRMediaRemoteNowPlayingInfoDefaultPlaybackRate
kMRMediaRemoteNowPlayingInfoDiscNumber
kMRMediaRemoteNowPlayingInfoDownloadProgress
kMRMediaRemoteNowPlayingInfoDownloadState
kMRMediaRemoteNowPlayingInfoDuration
kMRMediaRemoteNowPlayingInfoElapsedTime
kMRMediaRemoteNowPlayingInfoExternalContentIdentifier
kMRMediaRemoteNowPlayingInfoGenre
kMRMediaRemoteNowPlayingInfoIsAdvertisement
kMRMediaRemoteNowPlayingInfoIsAlwaysLive
kMRMediaRemoteNowPlayingInfoIsBanned
kMRMediaRemoteNowPlayingInfoIsExplicitTrack
kMRMediaRemoteNowPlayingInfoIsInWishList
kMRMediaRemoteNowPlayingInfoIsLiked
kMRMediaRemoteNowPlayingInfoIsMusicApp
kMRMediaRemoteNowPlayingInfoIsSharable
kMRMediaRemoteNowPlayingInfoIsVideosApp
kMRMediaRemoteNowPlayingInfoMediaType
kMRMediaRemoteNowPlayingInfoPlaybackRate
kMRMediaRemoteNowPlayingInfoProhibitsSkip
kMRMediaRemoteNowPlayingInfoPurchaseInfoData
kMRMediaRemoteNowPlayingInfoQueueIndex
kMRMediaRemoteNowPlayingInfoRadioStationHash
kMRMediaRemoteNowPlayingInfoRadioStationIdentifier
kMRMediaRemoteNowPlayingInfoRadioStationName
kMRMediaRemoteNowPlayingInfoRadioStationStringIdentifier
kMRMediaRemoteNowPlayingInfoRepeatMode
kMRMediaRemoteNowPlayingInfoShuffleMode
kMRMediaRemoteNowPlayingInfoStartTime
kMRMediaRemoteNowPlayingInfoTimestamp
kMRMediaRemoteNowPlayingInfoTitle
kMRMediaRemoteNowPlayingInfoTotalChapterCount
kMRMediaRemoteNowPlayingInfoTotalDiscCount
kMRMediaRemoteNowPlayingInfoTotalQueueCount
kMRMediaRemoteNowPlayingInfoTotalTrackCount
kMRMediaRemoteNowPlayingInfoTrackNumber
kMRMediaRemoteNowPlayingInfoUniqueIdentifier
kMRMediaRemoteNowPlayingInfoiTunesStoreIdentifier
kMRMediaRemoteNowPlayingInfoiTunesStoreSubscriptionAdamIdentifier
kMRMediaRemoteNowPlayingInfoExternalProfileIdentifier
kMRMediaRemoteNowPlayingInfoPlaybackProgress
kMRMediaRemoteNowPlayingPlaybackQueueDidChangeNotification
com.apple.MediaRemote.nowPlayingInfoDidChange
com.apple.MediaRemote.nowPlayingApplicationDidChange
com.apple.MediaRemote.nowPlayingApplicationIsPlayingDidChange
com.apple.mobileipod.playbackQueueDidChangeNotification
com.apple.MediaRemote.anyApplicationIsPlayingDidChange
kMRMediaRemoteNowPlayingInfoSupportsIsBanned
kMRMediaRemoteNowPlayingInfoSupportsFastForward15Seconds
kMRMediaRemoteNowPlayingInfoSupportsIsLiked
kMRMediaRemoteNowPlayingInfoSupportsRewind15Seconds
kMRMediaRemoteNowPlayingInfoSupportsWishlisting
kMRMediaRemoteMediaTypeImage
kMRMediaRemoteMediaTypeAudio
kMRMediaRemoteMediaTypeVideo
AVSystemController
Celestial
AVSystemController_CanBeNowPlayingAppAttribute
MRMediaRemoteSetNowPlayingApplicationDisplayIDForOrigin
MRMediaRemoteSetNowPlayingApplicationDisplayName
MRMediaRemoteSetNowPlayingApplicationPlaybackStateForOrigin
MRMediaRemoteGetPlaybackState
MRMediaRemoteGetPlaybackStateForClient
v24@?0^{__CFDictionary=}8^v16
v16@?0^v8
MRMediaRemoteSetNowPlayingInfoForOriginWithMergePolicy
v28@?0^v8^v16I24
Playing
Paused
Stopped
Interrupted
Unknown
AlwaysVisible
NeverVisible
VisibleWhenBackgrounded
Undefined
v64@?0{?={?=qq}Bdd}8^v48@?<v@?^v^vI>56
v32@?0{?=^{__CFData}^vC}8
image/jpeg
album
artist
duration
elapsedTime
playbackRate
repeatMode
shuffleMode
timestamp
title
uniqueIdentifier
isExplicitTrack
isMusicApp
radioStationIdentifier
radioStationHash
radioStationName
artworkDataDigest
isAlwaysLive
isAdvertisement
hasAlbum
T@"NSString",&,N,V_album
hasArtist
T@"NSString",&,N,V_artist
hasDuration
Td,N,V_duration
hasElapsedTime
Td,N,V_elapsedTime
hasPlaybackRate
Tf,N,V_playbackRate
hasRepeatMode
Ti,N,V_repeatMode
hasShuffleMode
Ti,N,V_shuffleMode
hasTimestamp
Td,N,V_timestamp
hasTitle
T@"NSString",&,N,V_title
hasUniqueIdentifier
TQ,N,V_uniqueIdentifier
hasIsExplicitTrack
TB,N,V_isExplicitTrack
hasIsMusicApp
TB,N,V_isMusicApp
hasRadioStationIdentifier
Tq,N,V_radioStationIdentifier
hasRadioStationHash
T@"NSString",&,N,V_radioStationHash
hasRadioStationName
T@"NSString",&,N,V_radioStationName
hasArtworkDataDigest
T@"NSData",&,N,V_artworkDataDigest
hasIsAlwaysLive
TB,N,V_isAlwaysLive
hasIsAdvertisement
TB,N,V_isAdvertisement
None
(unknown: %i)
Albums
Songs
sampleRate
hasSampleRate
Td,N,V_sampleRate
event
T^{?=i(?={?={?=ddd}{?=ddd}}{?=fff}{?={?=fff}ffffffffffff}{?=ffBQ})},R,N
inputMode
T@"NSDictionary",&,N,V_nowPlayingInfo
T@"NSArray",&,N,V_supportedCommands
isPlaying
TB,N,V_isPlaying
T^v,N,V_playbackQueue
hasState
Ti,N,V_state
Recording
NotRecording
virtualDeviceID
hasVirtualDeviceID
TQ,N,V_virtualDeviceID
hasEvent
T@"_MRVirtualTouchEventProtobuf",&,N,V_event
deviceInfo
T@"MRDeviceInfo",R,N
errorCode
handlerReturnStatus
hasErrorCode
TI,N,V_errorCode
handlerReturnStatusCount
T^I,R,N
kMRMediaRemoteFrameworkErrorDomain
com.apple.MediaRemote.connectionQueue
com.apple.MediaRemote.clientCallbackQueue
com.apple.MediaRemote.browsableContentQueue
com.apple.MediaRemote.voiceInputQueue
com.apple.mediaremoted.xpc
MRXPC_MESSAGE_ID_KEY
v16@?0@"NSObject<OS_xpc_object>"8
MRXPC_VOICE_RECORDING_ENDPOINT_AVAILABLE_KEY
MRXPC_TELEVISION_ENDPOINT_AVAILABLE_KEY
MRXPC_AGENT_ENDPOINT_AVAILABLE_KEY
MRXPC_COMMAND_SEND_ERROR_KEY
MRXPC_COMMAND_STATUSES_DATA_KEY
MRXPC_COMMAND_APP_PROCESSID_KEY
MRXPC_COMMAND_APP_DISPLAYID_KEY
MRXPC_COMMAND_INFO_ARRAY_DATA_KEY
MRXPC_ERROR_CODE_KEY
MRXPC_NOWPLAYING_APP_ENABLED_KEY
MRXPC_NOWPLAYING_APP_OVERRIDE_ENABLED_KEY
MRXPC_NOWPLAYING_DISPLAYID_KEY
MRXPC_NOWPLAYING_MERGE_POLICY_KEY
MRXPC_NOWPLAYING_ORIGIN_UID_KEY
MRXPC_NOWPLAYING_INFO_DATA_KEY
MRXPC_NOWPLAYING_INFO_INCLUDE_ARTWORK_KEY
MRXPC_NOWPLAYING_PID_KEY
MRXPC_NOWPLAYING_PLAYBACK_QUEUE_REQUEST_KEY
MRXPC_NOWPLAYING_PLAYBACK_QUEUE_CONTEXT_KEY
MRXPC_NOWPLAYING_DISPLAYNAME_KEY
MRXPC_APP_IS_PLAYING_KEY
MRXPC_PLAYBACK_STATE_KEY
MRXPC_NOWPLAYING_CLIENT_ARRAY_DATA_KEY
MRXPC_NOWPLAYING_CLIENT_VISIBILITY_KEY
MRXPC_COLOR_DATA_KEY
MRXPC_SOURCE_ID_KEY
MRXPC_AUDIO_AMPLITUDE_SAMPLES_COUNT_KEY
MRXPC_AUDIO_AMPLITUDE_ARRAY_DATA_KEY
MRXPC_AVAILABLE_ORIGINS_DATA_KEY
MRXPC_ROUTE_DISCOVERY_MODE_KEY
MRXPC_ROUTE_CATEGORY_KEY
MRXPC_ROUTES_DATA_KEY
MRXPC_ROUTE_OPTIONS_KEY
MRXPC_ROUTE_PASSWORD_KEY
MRXPC_ROUTE_DESCRIPTION_DATA_KEY
MRXPC_ROUTE_HAS_VOLUME_CONTROL_KEY
MRXPC_ROUTE_EXTERNAL_SCREEN_TYPE_KEY
MRXPC_ROUTE_NAME_KEY
MRXPC_VOLUME_VALUE_KEY
MRXPC_VOLUME_OPTIONS_KEY
MRXPC_GAMECONTROLLER_INPUT_MODE_KEY
MRXPC_TELEVISION_PAIRED_DEVICES
MRXPC_TELEVISION_PAIRED_DEVICE
MRXPC_TELEVISION_ALLOW_PAIRING_KEY
MRXPC_TELEVISION_LOGGING_KEY
MRXPC_CUSTOM_DATA_NAME_KEY
MRXPC_CUSTOM_DATA_KEY
MRXPC_VOICE_INPUT_DEVICES_DATA_KEY
MRXPC_VOICE_INPUT_DESCRIPTOR_DATA_KEY
MRXPC_VOICE_INPUT_DEVICE_ID_KEY
MRXPC_VOICE_DATA_PROTOBUF_DATA_KEY
MRXPC_VOICE_RECORDING_STATE
MRXPC_AGENT_CALL_ID_KEY
MRXPC_KEEP_ALIVE_KEY
MRXPC_NOTIFICATION_NAME_KEY
MRXPC_NOTIFICATION_USERINFO_DATA_KEY
MRXPC_NOTIFICATION_DELAY
MRXPC_BUNDLE_ID_KEY
MRXPC_INDEXPATH_DATA_KEY
MRXPC_CONTENT_NOW_PLAYING_IDENTIFIERS_KEY
MRXPC_CONTENT_SUPPORTS_PLAYBACK_PROGRESS_KEY
MRXPC_CONTENT_CHILD_ITEMS_COUNT_KEY
MRXPC_RANGE_BEGIN_KEY
MRXPC_RANGE_LENGTH_KEY
MRXPC_CONTENT_API_MASK_KEY
MRXPC_CONTENT_IDENTIFIERS
MRXPC_CONTENT_CHILD_ITEMS_DATA_KEY
MRXPC_COMMAND_KEY
MRXPC_COMMAND_OPTIONS_KEY
v16@?0^{__CFArray=}8
MRXPC_TRANSACTION_NAME
v32@?0@"NSArray"8^{_MROrigin=}16@?<v@?I>24
v24@?0^{__CFArray=}8^{__CFError=}16
v16@?0^{__CFError=}8
MRXPC_CLIENT_ERROR_DATA_KEY
MRXPC_AGENT_NUMBER_ACTIVE_CALLS_KEY
MRXPC_APPLICATION_ACTIVITY_DATA_KEY
MRXPC_ORIGIN_DATA_KEY
supportedFormats
defaultFormat
T@"NSMutableArray",&,N,V_supportedFormats
hasDefaultFormat
T@"_MRAudioFormatSettingsProtobuf",&,N,V_defaultFormat
packetCapacity
maximumPacketSize
packetCount
contents
packetDescriptions
hasFormatSettings
T@"_MRAudioFormatSettingsProtobuf",&,N,V_formatSettings
hasPacketCapacity
Tq,N,V_packetCapacity
hasMaximumPacketSize
Tq,N,V_maximumPacketSize
hasPacketCount
Tq,N,V_packetCount
hasContents
T@"NSData",&,N,V_contents
T@"NSMutableArray",&,N,V_packetDescriptions
has%@
@8@?0
v32@?0@"NSString"8@"NSString"16^B24
v32@?0@"NSString"8@16^B24
dictionaryKeyToProtobufKeyMapping
T@"NSDictionary",C,N,V_dictionaryKeyToProtobufKeyMapping
protobufClass
T#,&,N,V_protobufClass
dictionaryValueToProtobufValueTransformer
T@?,C,N,V_dictionaryValueToProtobufValueTransformer
protobufValueToDictionaryValueTransformer
T@?,C,N,V_protobufValueToDictionaryValueTransformer
deviceIDs
descriptor
T@"MRVirtualVoiceInputDeviceDescriptor",R,N
deviceID
T@"MRAudioBuffer",R,N
T{?=dd},R,N
Tf,R,N
deviceIdentifier
green
blue
alpha
hasRed
Tf,N,V_red
hasGreen
Tf,N,V_green
hasBlue
Tf,N,V_blue
hasAlpha
Tf,N,V_alpha
name
packets
MRGameControllerInputModeNone |
MRGameControllerInputModeCaptureMotion |
MRGameControllerInputModeCaptureButtons |
MRGameControllerInputModeCaptureDigitizer
MRGameControllerEventNone
MRGameControllerEventMotion
MRGameControllerEventButtons
MRGameControllerEventButtonsExtended
MRGameControllerEventDigitizer
Unknown Event: Did you remember to use the event initializers?
Game Controller Event: {
buttonA:%lf
buttonX:%lf
buttonPause:%lf
Buttons: {
dpadX:%lf
dpadY:%lf
buttonB:%lf
buttonY:%lf
leftShoulder:%lf
rightShoulder:%lf
leftThumbstickX:%lf
leftThumbstickY:%lf
rightThumbstickX:%lf
rightThumbstickY:%lf
leftTrigger:%lf
rightTrigger:%lf
Extended Buttons: {
Digitizer: { 
x: %lf 
y: %lf 
touchDown: %@ 
true
false
Motion: {
Gravity: %@ 
UserAcceleration: %@
Acceleration: {
x:%lf y:%lf z:%lf
MRGameControllerPlayerIndex1
MRGameControllerPlayerIndex2
MRGameControllerPlayerIndex3
MRGameControllerPlayerIndex4
MRGameControllerPlayerIndexUnset
playerIndex
TI,N,V_playerIndex
vendorName
T@"NSString",C,N,V_vendorName
buttonAUpDelay
Td,N,V_buttonAUpDelay
profile
Ti,N,V_profile
pairingData
status
hasPairingData
T@"NSData",&,N,V_pairingData
hasStatus
Ti,N,V_status
object
T@,R,N
hasKey
T@"NSString",&,N,V_key
hasData
T@"NSData",&,N,V_data
text
actionType
hasText
T@"NSString",&,N,V_text
hasActionType
Ti,N,V_actionType
Insert
Delete
Clear
kMRCredentialRequirementTypeUserInfoKey
kMRCredentialRequirementCharacterCountUserInfoKey
kMRTelevisionRemoteNowPlayingArtworkChanged
MR_EXTERN CFStringRef const kMRMediaRemoteErrorTelevisionPairingLockOutDelayUserInfoKey;
com.apple.MediaRemote.MRTelevision.SerialQueue
com.apple.MediaRemote.MRTelevision.WorkerQueue
<%@ %p "%@">
v16@?0@"MRProtocolMessage"8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-645.18/MediaRemote/Framework/Television/MRTelevision.m
incorrect reply
v16@?0@"NSArray"8
v28@?0I8^{__CFDictionary=}12@?<v@?^{__CFArray=}>20
v20@?0C8^{_MROrigin=}12
Session mismatch for data exchange callback %@ %@
v24@?0@"MRCryptoPairingSession"8@"NSData"16
v20@?0^{__CFString=}8B16
v32@?0@"MRCryptoPairingSession"8d16@?<v@?@"NSString">24
v24@?0@"MRCryptoPairingSession"8@"NSError"16
Failed to register custom origin
v12@?0C8
incorrect reply type
v16@?0@"NSError"8
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
netService
T@"NSNetService",&,N,V_netService
connection
T@"MRTelevisionClientConnection",&,N,V_connection
customOrigin
T^{_MROrigin=},N
T@"MRDeviceInfo",C,N,V_deviceInfo
nowPlayingArtwork
T@"NSData",C,N,V_nowPlayingArtwork
T@"NSMutableDictionary",&,N,V_nowPlayingInfo
volumeControlNotificationObserver
T@"MSVDistributedNotificationObserver",&,N,V_volumeControlNotificationObserver
pairingCallback
T@?,C,N,V_pairingCallback
pairingCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_pairingCallbackQueue
connectionStateCallback
T@?,C,N,V_connectionStateCallback
connectionState
TI,R,N,V_connectionState
connectionStateCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionStateCallbackQueue
gameControllerInputModeCallback
T@?,C,N,V_gameControllerInputModeCallback
gameControllerInputMode
TI,N,V_gameControllerInputMode
gameControllerInputModeCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_gameControllerInputModeCallbackQueue
gameControllerPropertiesCallback
T@?,C,N,V_gameControllerPropertiesCallback
gameControllerPropertiesCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_gameControllerPropertiesCallbackQueue
recordingStateCallback
T@?,C,N,V_recordingStateCallback
recordingStateCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_recordingStateCallbackQueue
textInputCallback
T@?,C,N,V_textInputCallback
textInputCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_textInputCallbackQueue
nameCallback
T@?,C,N,V_nameCallback
nameCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_nameCallbackQueue
pairingAllowedCallback
T@?,C,N,V_pairingAllowedCallback
pairingAllowedCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_pairingAllowedCallbackQueue
hiliteModeCallback
T@?,C,N,V_hiliteModeCallback
hiliteModeCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_hiliteModeCallbackQueue
customDataCallback
T@?,C,N,V_customDataCallback
customDataCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_customDataCallbackQueue
pairedDevice
isCoalescingClientStateUpdatesConfigMessages
TB,N,V_isCoalescingClientStateUpdatesConfigMessages
isCallingClientCallback
TB,N,V_isCallingClientCallback
hostName
port
Tq,R,N
inputStream
T@"NSInputStream",R,N
outputStream
T@"NSOutputStream",R,N
wantsNowPlayingNotifications
TB,N,V_wantsNowPlayingNotifications
wantsNowPlayingArtworkNotifications
TB,N,V_wantsNowPlayingArtworkNotifications
wantsVolumeNotifications
TB,N,V_wantsVolumeNotifications
paired
TB,R,N,GisPaired
TB,R,N,V_hiliteMode
CFStringRef MRTelevisionCopyUniqueIdentifier(MRTelevisionRef)
<Unknown Function>
Invalid parameter not satisfying: %@
device
CFStringRef MRTelevisionCopyName(MRTelevisionRef)
CFStringRef MRTelevisionCopyHostName(MRTelevisionRef)
CFStringRef MRTelevisionCopySystemBuildVersion(MRTelevisionRef)
int64_t MRTelevisionGetNetworkPort(MRTelevisionRef)
STOP USING THIS MICHAEL!
void MRTelevisionSetNameCallback(MRTelevisionRef, dispatch_queue_t, MRTelevisionNameCallback)
void MRTelevisionSetName(MRTelevisionRef, CFStringRef)
MROriginRef MRTelevisionCopyCustomOrigin(MRTelevisionRef)
void MRTelevisionSetWantsNowPlayingUpdates(MRTelevisionRef, _Bool)
void MRTelevisionSetWantsNowPlayingArtworkUpdates(MRTelevisionRef, _Bool)
void MRTelevisionSetWantsVolumeControlAvailabilityUpdates(MRTelevisionRef, _Bool)
_Bool MRTelevisionIsConnected(MRTelevisionRef)
void MRTelevisionConnect(MRTelevisionRef)
void MRTelevisionDisconnect(MRTelevisionRef)
MRTelevisionConnectionState MRTelevisionGetConnectionState(MRTelevisionRef)
void MRTelevisionSetConnectionStateCallback(MRTelevisionRef, dispatch_queue_t, MRTelevisionConnectionStateCallback)
v20@?0I8^{__CFError=}12
v32@?0{?=IQ}8@?<v@?^{__CFString=}B>24
void MRTelevisionSetPairingCallback(MRTelevisionRef, dispatch_queue_t, MRTelevisionPairingCallback)
void MRTelevisionRegisterVirtualTouchDevice(MRTelevisionRef, MRVirtualTouchDeviceDescriptorRef, dispatch_queue_t, MRTelevisionTouchDeviceIDCallback)
replyQ
completion
v24@?0Q8@"NSError"16
void MRTelevisionSendVirtualTouchEvent(MRTelevisionRef, MRHIDTouchEvent, MRVirtualTouchDeviceID)
void MRTelevisionSendButtonEvent(MRTelevisionRef, MRHIDButtonEvent)
void MRTelevisionSendHIDEvent(MRTelevisionRef, IOHIDEventRef)
void MRTelevisionGetCurrentTextEditingSession(MRTelevisionRef, dispatch_queue_t, void (^)(MRTextEditingSessionRef, CFErrorRef))
callback
v24@?0@"MRTextEditingSession"8@"NSError"16
void MRTelevisionSetTextEditingCallback(MRTelevisionRef, dispatch_queue_t, MRTelevisionTextInputCallback)
void MRTelevisionTextEditingInsert(MRTelevisionRef, MRTextEditingSessionRef, CFStringRef)
void MRTelevisionTextEditingSetText(MRTelevisionRef, MRTextEditingSessionRef, CFStringRef)
void MRTelevisionTextEditingDeleteBackward(MRTelevisionRef, MRTextEditingSessionRef)
void MRTelevisionTextEditingClearText(MRTelevisionRef, MRTextEditingSessionRef)
void MRTelevisionRegisterGameController(MRTelevisionRef, MRGameControllerProfile, dispatch_queue_t, MRTelevisionGameControllerIDCallback)
void MRTelevisionRegisterGameControllerWithProperties(MRTelevisionRef, MRGameControllerPropertiesRef, dispatch_queue_t, MRTelevisionGameControllerIDCallback)
void MRTelevisionUnregisterGameController(MRTelevisionRef, MRGameControllerID)
void MRTelevisionSetGameControllerInputModeCallback(MRTelevisionRef, dispatch_queue_t, MRTelevisionGameControllerInputModeCallback)
void MRTelevisionSetGameControllerPropertiesCallback(MRTelevisionRef, dispatch_queue_t, MRTelevisionGameControllerPropertiesCallback)
void MRTelevisionSendGameControllerEvent(MRTelevisionRef, MRGameControllerEvent, MRGameControllerID)
MRGameControllerInputMode MRTelevisionGetGameControllerInputMode(MRTelevisionRef)
void MRTelevisionRegisterVirtualVoiceInputDevice(MRTelevisionRef, MRVirtualVoiceInputDeviceDescriptorRef, dispatch_queue_t, void (^)(MRVirtualVoiceInputDeviceID, CFErrorRef))
v20@?0I8@"NSError"12
void MRTelevisionSetVoiceRecordingStateCallback(MRTelevisionRef, dispatch_queue_t, MRTelevisionRecordingStateCallback)
MRVoiceRecordingState MRTelevisionGetVoiceRecordingState(MRTelevisionRef)
void MRTelevisionProcessVirtualVoiceInputAudioData(MRTelevisionRef, MRVirtualVoiceInputDeviceID, MRAudioBufferRef, MRAudioTime, float)
_Bool MRTelevisionIsPairingAllowed(MRTelevisionRef)
void MRTelevisionSetPairingAllowedCallback(MRTelevisionRef, dispatch_queue_t, MRTelevisionPairingAllowedCallback)
_Bool MRTelevisionIsPaired(MRTelevisionRef)
void MRTelevisionUnpair(MRTelevisionRef)
void MRTelevisionGetPairedTelevisions(void (^)(CFArrayRef))
void MRTelevisionDeletePairedDevice(CFStringRef)
identifier
Placeholder
void MRTelevisionSetHiliteModeCallback(MRTelevisionRef, dispatch_queue_t, MRTelevisionHiliteModeCallback)
void MRTelevisionRequestHiliteModeExit(MRTelevisionRef)
_Bool MRTelevisionGetHiliteMode(MRTelevisionRef)
void MRTelevisionWake(MRTelevisionRef)
void MRTelevisionSetCustomDataCallback(MRTelevisionRef, dispatch_queue_t, MRTelevisionCustomDataCallback)
void MRTelevisionSendCustomData(MRTelevisionRef, CFStringRef, CFDataRef)
volumeControlAvailable
absolute
integratedDisplay
screenSizeWidth
screenSizeHeight
hasAbsolute
TB,N,V_absolute
hasIntegratedDisplay
TB,N,V_integratedDisplay
hasScreenSizeWidth
Tf,N,V_screenSizeWidth
hasScreenSizeHeight
Tf,N,V_screenSizeHeight
metadata
hasIdentifier
T@"NSString",&,N,V_identifier
hasMetadata
T@"_MRContentItemMetadataProtobuf",&,N,V_metadata
kMRMediaRemoteOptionSourceID
kMRMediaRemoteOptionMediaType
kMRMediaRemoteOptionIsExternalPlayerCommand
kMRMediaRemoteOptionSkipInterval
kMRMediaRemoteOptionPlaybackRate
kMRMediaRemoteOptionRating
kMRMediaRemoteOptionIsNegative
kMRMediaRemoteOptionPlaybackPosition
kMRMediaRemoteOptionRepeatMode
kMRMediaRemoteOptionShuffleMode
kMRMediaRemoteOptionSendOptionsNumber
kMRMediaRemoteOptionContextID
kMRMediaRemoteOptionDestinationAppDisplayID
kMRMediaRemoteOptionTrackID
kMRMediaRemoteOptionContentItemID
kMRMediaRemoteOptionStationID
kMRMediaRemoteOptionStationHash
kMRMediaRemoteOptionStationURL
kMRMediaRemoteOptionShouldBeginRadioPlayback
kMRMediaRemoteOptionSystemAppPlaybackQueueData
kMRMediaRemoteOptionRequestDefermentToPlaybackQueuePosition
kMRMediaRemoteOptionPlaybackQueueInsertionPosition
kMRMediaRemoteOptionInsertAfterContentItemID
kMRMediaRemoteOptionBookmarkiTunesDestination
kMRMediaRemoteOptionAffiliateIdentifier
kMRMediaRemoteOptionLanguageOptionData
kMRMediaRemoteOptionChangeLanguageOptionSetting
kMRMediaRemoteOptionRemoteControlInterfaceIdentifier
kMRMediaRemoteOptionCommandBroadcasted
kMRMediaRemoteOptionInterruptionEvent
kMRMediaRemoteOptionPredefinedPlaybackRate
kMRMediaRemoteOptionPlaybackProgress
kMRMediaRemoteSupportedCommandsDidChangeNotification
kMRMediaRemoteRegisteredCommandHandlersDidChangeNotification
kMRMediaRemoteSystemAppDidSkipTrackNotification
v20@?0I8^{__CFArray=}12
%08x
Play
Pause
TogglePlayPause
Stop
NextTrack
PreviousTrack
AdvanceShuffleMode
AdvanceRepeatMode
BeginFastForward
EndFastForward
BeginRewind
EndRewind
ToggleRecord
SkipForward
SkipBackward
ChangePlaybackRateCommand
RateTrack
LikeTrack
DislikeTrack
BookmarkTrack
SeekToPlaybackPosition
SetRepeatMode
SetShuffleMode
EnableLanguageOption
DisableLanguageOption
NextChapter
PreviousChapter
NextAlbum
PreviousAlbum
NextPlaylist
PreviousPlaylist
NextInContext
PreviousInContext
Menu
Select
UpArrow
DownArrow
BacklightOff
ResetPlaybackTimeout
BuyTrack
BuyAlbum
PreOrderAlbum
CancelDownload
CreateRadioStation
SetPlaybackQueue
PresentUpNext
SetSleepTimer
InsertIntoPlaybackQueue
PresentSharingOptions
AddNowPlayingItemToLibrary
AddItemToLibrary
BanTrack
AddTrackToWishList
RemoveTrackFromWishList
Rewind15Seconds
FastForward15Seconds
Rewind30Seconds
FastForward30Seconds
<Unrecognized Command>
<Unknown>
com.apple.MRMediaRemote.elapsedTimeDidChange
v12@?0i8
com.apple.MRMediaRemote.playbackSpeedDidChange
com.apple.MRMediaRemote.repeatModeDidChange
com.apple.MRMediaRemote.shuffleModeDidChange
JUST_GOT_SPLASH_BEATS!
location
length
includeMetadata
artworkWidth
artworkHeight
hasLocation
Ti,N,V_location
hasLength
Ti,N,V_length
hasIncludeMetadata
TB,N,V_includeMetadata
hasArtworkWidth
Td,N,V_artworkWidth
hasArtworkHeight
Td,N,V_artworkHeight
use %@ instead
%@ is abstract
role
TQ,R,N,V_role
peerIdentifier
T@"NSString",R,N,V_peerIdentifier
valid
TB,R,N,GisValid,V_valid
delegate
T@"<MRCryptoPairingSessionDelegate>",N,V_delegate
hasVolumeControlAvailable
TB,N,V_volumeControlAvailable
command
options
hasCommand
Ti,N,V_command
hasOptions
T@"_MRCommandOptionsProtobuf",&,N,V_options
ChangePlaybackRate
ChangeRepeatMode
ChangeShuffleMode
report
T@"NSString",&,N,V_virtualDeviceID
hasReport
T@"NSData",&,N,V_report
serializationDate
T@"NSDate",R,N,V_serializationDate
prompt
inputTraits
hasPrompt
T@"NSString",&,N,V_prompt
hasInputTraits
T@"_MRTextInputTraitsProtobuf",&,N,V_inputTraits
hasNowPlayingUpdates
TB,N,V_nowPlayingUpdates
hasArtworkUpdates
TB,N,V_artworkUpdates
hasVolumeUpdates
TB,N,V_volumeUpdates
hasKeyboardUpdates
TB,N,V_keyboardUpdates
Type: %@ Entry: %@
v32@?0@"NSString"8@"MRTelevisionMessageMetricsEntry"16^B24
Max: %lu
 Min: %lu
 Avg: %lu
 Total: %lu
 Values: %@
TQ,N,V_avg
TQ,N,V_min
TQ,N,V_max
total
TQ,N,V_total
values
T@"NSMutableArray",N,V_values
T{_MRHIDTouchEvent=(_MRHIDPoint={?=ff}[2f])IQI},R,N
%@://%@/%@
%llu
library
multiverse
store
mediaremoteuti
hasName
TQ,N,V_name
T@"NSMutableArray",&,N,V_packets
MRXPC_NOWPLAYING_PLAYBACK_QUEUE_KEY
MRXPC_COMMAND_APP_OPTIONS_KEY
MRXPC_VIDEO_THUMBNAILS_REQ_DATA_KEY
MRXPC_VIDEO_THUMBNAILS_ARRAY_DATA_KEY
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-645.18/MediaRemote/Framework/ProtocolMessages/MRLegacySendHIDEventMessage.m
<Message Type: %@
Timestamp: %llu
Error: %@
Identifier: %@
Type: %lu
Priority: %lu
Message: %@
buttonEvent
T{_MRHIDButtonEvent=IIB},R,N
allTelevisions
Crypto Session Shutting down
Session not open
Encrypted data has an invalid length
com.apple.MediaRemote.pairing
Media Remote Pairing Identity
Paired TV Remote Peer
info
MediaRemote_PeerIdentifier
MediaRemote_PeerName
v16@?0@"NSString"8
No pairing session
MediaRemote-Read-Encryption-Key
MediaRemote-Write-Encryption-Key
MediaRemote-Salt
Duplicate entry found but could not add new one
Duplicate entry found but could not remove it
Could not update peer info. Cannat add Peer.
No device info present. Cannot add Peer.
Could not get peer identifier. Cannot add Peer.
Couldnt not delete peer
Couldnt not find peer
No device info present. Cannot update Peer.
inputKey
T@"NSData",&,N,V_inputKey
inputNonce
T@"NSMutableData",&,N,V_inputNonce
outputKey
T@"NSData",&,N,V_outputKey
outputNonce
T@"NSMutableData",&,N,V_outputNonce
pairedDevices
T@"MRPairedDevice",R,N,V_device
chacha20_poly1305_encrypt_all_64x64
/System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils
chacha20_poly1305_decrypt_all_64x64
PairingSessionDeleteIdentity
PairingSessionCreate
PairingSessionSetKeychainInfo
PairingSessionCopyPeers
PairingSessionExchange
PairingSessionSetSetupCode
PairingSessionDeriveKey
PairingSessionCopyPeerIdentifier
PairingSessionUpdatePeerInfo
PairingSessionDeletePeer
OSStatus _MRCUPSShowSetupCodeCallback(PairingFlags, char *, size_t, void *)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-645.18/MediaRemote/Framework/Cryptography/MRCoreUtilsPairingSession.m
NULL context
void _MRCUPSHideSetupCodeCallback(void *)
OSStatus _MRCUPSPromptForSetupCodeCallback(PairingFlags, int32_t, void *)
v32@?0@8@16^B24
kMRNowPlayingPlaybackQueueChangedNotification
kMRPlaybackQueueChangedNotification
_kMRPlaybackQueueChangedNotification
kMRPlaybackQueueCallbackChangedNotification
_kMRPlaybackQueueCallbackChangedNotification
kMRPlaybackQueueDataSourceChangedNotification
_kMRPlaybackQueueDataSourceChangedNotification
kMRPlaybackQueueContentItemsChangedNotification
_kMRPlaybackQueueContentItemsChangedNotification
kMRPlaybackQueueContentItemsKey
kMRPlaybackQueueRangeLocationKey
kMRPlaybackQueueRangeLengthKey
coder must support key-value coding
supportsSecureCoding
TB,R
range
T{?=qq},R,N,V_range
contentItems
T@"NSArray",R,N,V_contentItems
kMRPlaybackQueueContextRevisionKey
revision
T@"NSString",R,N,V_revision
<PlaybackQueue %p {
<Range {
location = %ld
length = %ld
<Location: %ld
NULL
T@"NSString",R,N,V_identifier
publicKey
T@"NSData",R,N,V_publicKey
privateKey
T@"NSData",R,N,V_privateKey
PQso
MRSystemAppPlaybackQueueDestroy
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-645.18/MediaRemote/Framework/RemoteControl/MRRemotePlaybackQueue.m
queryData: %p, shuffleMode: %@, repeatMode: %@
stationID: %lld
stationStringID: %@
shuffleMode: %@, trackIDs: %@
seedTrack: %@
<MRSystemAppPlaybackQueue %p, type: %@, %@>
MRSystemAppPlaybackQueueGetType
MRSystemAppPlaybackQueueIsRequestingImmediatePlayback
MRSystemAppPlaybackQueueSetIsRequestingImmediatePlayback
MRSystemAppPlaybackQueueShouldOverrideManuallyCuratedQueue
MRSystemAppPlaybackQueueSetShouldOverrideManuallyCuratedQueue
MRSystemAppPlaybackQueueGetLocalQueryData
queue->type == MRSystemAppPlaybackQueueTypeLocalMediaQuery
MRSystemAppPlaybackQueueSetLocalQueryData
MRSystemAppPlaybackQueueGetLocalQueryFirstItemMultiverseIDData
MRSystemAppPlaybackQueueSetLocalQueryFirstItemMultiverseIDData
MRSystemAppPlaybackQueueGetLocalQueryFirstItemPID
MRSystemAppPlaybackQueueSetLocalQueryFirstItemPID
MRSystemAppPlaybackQueueGetLocalQueryShuffleMode
MRSystemAppPlaybackQueueSetLocalQueryShuffleMode
MRSystemAppPlaybackQueueGetLocalQueryRepeatMode
MRSystemAppPlaybackQueueSetLocalQueryRepeatMode
MRSystemAppPlaybackQueueSetRadioStationIDType
queue->type == MRSystemAppPlaybackQueueTypeRadioStation
MRSystemAppPlaybackQueueGetRadioStationIntegerPID
MRSystemAppPlaybackQueueSetRadioStationIntegerPID
queue->radioStationQueue.stationIDType == MRSystemAppRadioStationIDTypeIntegerPID
MRSystemAppPlaybackQueueSetRadioStationStringIdentifier
queue->radioStationQueue.stationIDType == MRSystemAppRadioStationIDTypeStationStringID
MRSystemAppPlaybackQueueCopyGenericTrackIdentifiers
_MRSystemAppPlaybackQueueTypeIsTracklistType(queue->type)
MRSystemAppPlaybackQueueSetGenericTrackIdentifiers
MRSystemAppPlaybackQueueGetTracklistShuffleMode
MRSystemAppPlaybackQueueSetTracklistShuffleMode
MRSystemAppPlaybackQueueGetTracklistRepeatMode
MRSystemAppPlaybackQueueSetTracklistRepeatMode
MRSystemAppPlaybackQueueCopyGeniusSeedTrack
queue->type == MRSystemAppPlaybackQueueTypeGenius
MRSystemAppPlaybackQueueSetGeniusSeedTrack
head
tail
bplist
PQty
PQip
PQqd
PQmv
PQfi
PQsm
PQrm
PQsy
PQsi
PQss
PQst
PQts
PQtr
PQgs
LocalMediaQuery
RadioStation
iTunesStoreTracklist
QuickPlay
GenericTracklist
Genius
<%@ %p %u, recordingState=%@, descriptor=%@>
TI,R,N,V_deviceID
T@"MRVirtualVoiceInputDeviceDescriptor",C,N,V_descriptor
recordingState
TI,N,V_recordingState
jpegData
hasJpegData
T@"NSData",&,N,V_jpegData
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-645.18/MediaRemote/Framework/VoiceInput/MRAudioDataBlock.m
invalid buffer size for decoding voice input message (%lu > (%lu * %lu))
packet descriptions exceed maximum packet capacity (%lu > %lu)
T@"MRAudioBuffer",R,N,V_buffer
T{?=dd},R,N,V_time
Tf,R,N,V_gain
protobuf
T@"_MRAudioDataBlockProtobuf",R,N
T@"MRAudioBuffer",&,D,N
T{?=dd},D,N
Tf,D,N
com.apple.MediaRemote
com.apple.MediaRemote.MRMediaRemoteServiceClient
@"NSDictionary"16@?0@"NSDictionary"8
v12@?0I8
v32@?0@"NSNumber"8@"MRTransactionSource"16^B24
externalScreenTypeNotificationObservers
T@"NSArray",&,N,V_externalScreenTypeNotificationObservers
nowPlayingNotificationObservers
T@"NSArray",&,N,V_nowPlayingNotificationObservers
routingNotificationObservers
T@"NSArray",&,N,V_routingNotificationObservers
originNotificationObservers
T@"NSArray",&,N,V_originNotificationObservers
voiceInputNotificationObservers
T@"NSArray",&,N,V_voiceInputNotificationObservers
service
T^{MRMediaRemoteService=},R,N,V_service
serviceQueue
T@"NSObject<OS_dispatch_queue>",R,N
registeredForNowPlayingNotifications
TB,R,N,GisRegisteredForNowPlayingNotifications
receivesExternalScreenTypeChangedNotifications
TB,N,V_receivesExternalScreenTypeChangedNotifications
receivesSupportedCommandsNotifications
TB,N,V_receivesSupportedCommandsNotifications
receivesRoutesChangedNotifications
TB,N,V_receivesRoutesChangedNotifications
receivesOriginChangedNotifications
TB,N,V_receivesOriginChangedNotifications
receivesPlaybackErrorNotifications
TB,N,V_receivesPlaybackErrorNotifications
receivesVoiceInputRecordingStateNotifications
TB,N,V_receivesVoiceInputRecordingStateNotifications
registeredOrigins
nowPlayingPlaybackQueueContext
T^v,N,GcopyNowPlayingPlaybackQueueContext
com.apple.MediaRemote.serviceClientRemoteCommandCallback
hasHiliteMode
TB,N,V_hiliteMode
enabled
active
preferredInterval
localizedTitle
localizedShortTitle
minimumRating
maximumRating
supportedRate
presentationStyle
skipInterval
numAvailableSkips
skipFrequency
canScrub
hasEnabled
TB,N,V_enabled
hasActive
TB,N,V_active
preferredIntervalsCount
preferredIntervals
hasLocalizedTitle
T@"NSString",&,N,V_localizedTitle
hasLocalizedShortTitle
T@"NSString",&,N,V_localizedShortTitle
hasMinimumRating
Tf,N,V_minimumRating
hasMaximumRating
Tf,N,V_maximumRating
supportedRatesCount
supportedRates
T^f,R,N
hasPresentationStyle
Ti,N,V_presentationStyle
hasSkipInterval
Ti,N,V_skipInterval
hasNumAvailableSkips
Ti,N,V_numAvailableSkips
hasSkipFrequency
Ti,N,V_skipFrequency
hasCanScrub
Ti,N,V_canScrub
usagePage
usage
buttonDown
hasUsagePage
TI,N,V_usagePage
hasUsage
TI,N,V_usage
hasButtonDown
TB,N,V_buttonDown
strings
attributes
encryptedTextCyphertext
hasAttributes
T@"_MRTextEditingAttributesProtobuf",&,N,V_attributes
hasEncryptedTextCyphertext
T@"NSData",&,N,V_encryptedTextCyphertext
NotEditing
DidBeginEditing
Editing
TextDidChange
DidEndEditing
Response
<MRColor %p red = %f, green = %f, blue = %f, alpha = %f>
request
T{?={?=qq}Bdd},R,N
type
authenticationToken
sendCommandMessage
sendCommandResultMessage
getStateMessage
setStateMessage
setArtworkMessage
registerHIDDeviceMessage
registerHIDDeviceResultMessage
sendHIDEventMessage
sendHIDReportMessage
sendVirtualTouchEventMessage
notificationMessage
contentItemsChangedNotificationMessage
deviceInfoMessage
clientUpdatesConfigMessage
volumeControlAvailabilityMessage
gameController
registerGameController
registerGameControllerResponse
unregisterGameController
registerForGameControllerEvents
keyboardMessage
getKeyboardMessage
textInputMessage
getVoiceInputDevicesMessage
getVoiceInputDevicesResponseMessage
registerVoiceInputDeviceMessage
registerVoiceInputDeviceResponseMessage
setRecordingStateMessage
sendVoiceInputMessage
getPlaybackQueue
transactionPackets
cryptoPairingMessage
gameControllerProperties
readyStateMessage
sendButtonEventMessage
setHiliteModeMessage
wakeDeviceMessage
genericMessage
hasType
Ti,N,V_type
hasAuthenticationToken
T@"NSString",&,N,V_authenticationToken
TQ,N,V_timestamp
hasSendCommandMessage
T@"_MRSendCommandMessageProtobuf",&,N,V_sendCommandMessage
hasSendCommandResultMessage
T@"_MRSendCommandResultMessageProtobuf",&,N,V_sendCommandResultMessage
hasGetStateMessage
T@"_MRGetStateMessageProtobuf",&,N,V_getStateMessage
hasSetStateMessage
T@"_MRSetStateMessageProtobuf",&,N,V_setStateMessage
hasSetArtworkMessage
T@"_MRSetArtworkMessageProtobuf",&,N,V_setArtworkMessage
hasRegisterHIDDeviceMessage
T@"_MRRegisterHIDDeviceMessageProtobuf",&,N,V_registerHIDDeviceMessage
hasRegisterHIDDeviceResultMessage
T@"_MRRegisterHIDDeviceResultMessageProtobuf",&,N,V_registerHIDDeviceResultMessage
hasSendHIDEventMessage
T@"_MRSendHIDEventMessageProtobuf",&,N,V_sendHIDEventMessage
hasSendHIDReportMessage
T@"_MRSendHIDReportMessageProtobuf",&,N,V_sendHIDReportMessage
hasSendVirtualTouchEventMessage
T@"_MRSendVirtualTouchEventMessageProtobuf",&,N,V_sendVirtualTouchEventMessage
hasNotificationMessage
T@"_MRNotificationMessageProtobuf",&,N,V_notificationMessage
hasContentItemsChangedNotificationMessage
T@"_MRPlaybackQueueProtobuf",&,N,V_contentItemsChangedNotificationMessage
hasDeviceInfoMessage
T@"_MRDeviceInfoMessageProtobuf",&,N,V_deviceInfoMessage
hasClientUpdatesConfigMessage
T@"_MRClientUpdatesConfigurationProtobuf",&,N,V_clientUpdatesConfigMessage
hasVolumeControlAvailabilityMessage
T@"_MRVolumeControlAvailabilityProtobuf",&,N,V_volumeControlAvailabilityMessage
hasGameController
T@"_MRGameControllerMessageProtobuf",&,N,V_gameController
hasRegisterGameController
T@"_MRRegisterGameControllerMessageProtobuf",&,N,V_registerGameController
hasRegisterGameControllerResponse
T@"_MRRegisterGameControllerResponseMessageProtobuf",&,N,V_registerGameControllerResponse
hasUnregisterGameController
T@"_MRUnregisterGameControllerMessageProtobuf",&,N,V_unregisterGameController
hasRegisterForGameControllerEvents
T@"_MRRegisterForGameControllerEventsMessageProtobuf",&,N,V_registerForGameControllerEvents
hasKeyboardMessage
T@"_MRKeyboardMessageProtobuf",&,N,V_keyboardMessage
hasGetKeyboardMessage
T@"_MRGetKeyboardSessionProtobuf",&,N,V_getKeyboardMessage
hasTextInputMessage
T@"_MRTextInputMessageProtobuf",&,N,V_textInputMessage
hasGetVoiceInputDevicesMessage
T@"_MRGetVoiceInputDevicesMessageProtobuf",&,N,V_getVoiceInputDevicesMessage
hasGetVoiceInputDevicesResponseMessage
T@"_MRGetVoiceInputDevicesResponseMessageProtobuf",&,N,V_getVoiceInputDevicesResponseMessage
hasRegisterVoiceInputDeviceMessage
T@"_MRRegisterVoiceInputDeviceMessageProtobuf",&,N,V_registerVoiceInputDeviceMessage
hasRegisterVoiceInputDeviceResponseMessage
T@"_MRRegisterVoiceInputDeviceResponseMessageProtobuf",&,N,V_registerVoiceInputDeviceResponseMessage
hasSetRecordingStateMessage
T@"_MRSetRecordingStateMessageProtobuf",&,N,V_setRecordingStateMessage
hasSendVoiceInputMessage
T@"_MRSendVoiceInputMessageProtobuf",&,N,V_sendVoiceInputMessage
hasGetPlaybackQueue
T@"_MRGetPlaybackQueueMessageProtobuf",&,N,V_getPlaybackQueue
hasTransactionPackets
T@"_MRTransactionMessageProtobuf",&,N,V_transactionPackets
hasCryptoPairingMessage
T@"_MRCryptoPairingMessageProtobuf",&,N,V_cryptoPairingMessage
hasGameControllerProperties
T@"_MRGameControllerPropertiesMessageProtobuf",&,N,V_gameControllerProperties
hasReadyStateMessage
T@"_MRSetReadyStateMessageProtobuf",&,N,V_readyStateMessage
hasConnectionState
T@"_MRSetConnectionStateMessageProtobuf",&,N,V_connectionState
hasSendButtonEventMessage
T@"_MRSendButtonEventMessageProtobuf",&,N,V_sendButtonEventMessage
hasSetHiliteModeMessage
T@"_MRSetHiliteModeMessageProtobuf",&,N,V_setHiliteModeMessage
hasWakeDeviceMessage
T@"_MRWakeDeviceMessageProtobuf",&,N,V_wakeDeviceMessage
hasGenericMessage
T@"_MRGenericMessageProtobuf",&,N,V_genericMessage
SendCommand
SendCommandResult
GetState
SetState
SetArtwork
RegisterHIDDevice
RegisterHIDDeviceResult
SendHIDEvent
SendHIDReport
SendVirtualTouchEvent
Notification
ContentItemsChangedNotification
DeviceInfo
ClientUpdatesConfiguration
VolumeControlAvailabilityNotification
GameController
RegisterGameController
RegisterGameControllerResponse
UnregisterGameController
RegisterForGameControllerEvents
Keyboard
GetKeyboardSession
TextInput
GetVoiceInputDevices
GetVoiceInputDevicesResponse
RegisterVoiceInputDevice
RegisterVoiceInputDeviceResponse
SetVoiceInputRecordingState
SendVoiceInput
GetPlaybackQueue
Transaction
CryptoPairing
GameControllerProperties
SetReadyStateMessage
DeviceInfoUpdate
SetDisconnectingStateMessage
SendButtonEvent
SetHiliteMode
WakeDevice
GenericMessage
hasDescriptor
T@"_MRVoiceInputDeviceDescriptorProtobuf",&,N,V_descriptor
phase
finger
hasX
Td,N,V_x
hasY
Td,N,V_y
hasPhase
Ti,N,V_phase
hasFinger
Ti,N,V_finger
Began
Moved
Stationary
Ended
Cancelled
processIdentifier
bundleIdentifier
parentApplicationBundleIdentifier
processUserIdentifier
nowPlayingVisibility
tintColor
hasProcessIdentifier
Ti,N,V_processIdentifier
hasBundleIdentifier
T@"NSString",&,N,V_bundleIdentifier
hasParentApplicationBundleIdentifier
T@"NSString",&,N,V_parentApplicationBundleIdentifier
hasProcessUserIdentifier
Ti,N,V_processUserIdentifier
hasNowPlayingVisibility
Ti,N,V_nowPlayingVisibility
hasTintColor
T@"_MRColorProtobuf",&,N,V_tintColor
kMRTelevisionPairingAllowedDidChangeNotification
usePeerToPeerTelevisionConnections
useNoDelayOptionForTelevisionSockets
useDebugAVRouteWithoutVolumeControl
hasTelevisionSocketQOSLevelSet
televisionSocketQOSLevel
televisionPairingAllowed
TB,N,GisTelevisionPairingAllowed
televisionTimeoutDuration
Td,R,N
televisionNowPlayingInfoCoalesceDuration
televisionNowPlayingInfoArtworkCoalesceDuration
televisionDisconnectWaitDuration
televisionDisconnectSleepDuration
televisionSleepAssertionOnClientConnectDuration
bluetoothDeviceResumeDuration
broadcastCommandWaitDuration
MRTelevisionIncludePeerToPeer
MRTelevisionUseNoDelayOptionForTelevisionSockets
UseDebugAVRouteWithoutVolumeControl
MRTelevisionSocketsQOSLevel
kMRSettingsTelevisionPairingAllowedDefaultsKey
kMRSettingsTelevisionTimeoutSecondsDurationDefaultsKey
kMRSettingsTelevisionNowPlayingInfoCoalesceDurationDefaultsKey
kMRSettingsTelevisionNowPlayingInfoArtworkCoalesceDurationDefaultsKey
kMRSettingsTelevisionDisconnectWaitDurationDefaultsKey
kMRSettingsTelevisionDisconnectSleepDurationDefaultsKey
kMRSettingsTelevisionSleepAssertionOnClientConnectDurationDefaultsKey
kMRSettingsBluetoothDeviceResumeDurationDefaultsKey
kMRSettingsBroadcastCommandWaitDurationDefaultsKey
hasPlayerIndex
hasVendorName
T@"NSString",&,N,V_vendorName
hasButtonAUpDelay
Ti,N,V_buttonAUpDelay
hasProfile
B239
Extended
startOffset
variableFramesInPacket
dataByteSize
hasStartOffset
Tq,N,V_startOffset
hasVariableFramesInPacket
TI,N,V_variableFramesInPacket
hasDataByteSize
TI,N,V_dataByteSize
MRBroadcastCommandResponse: %@ %d %@
kMRBroadcastCommandPIDKey
kMRBroadcastCommandBundleIdentifierKey
kMRBroadcastCommandHandlerStatusesKey
kMRBroadcastCommandResponseDataKey
responseData
T@"NSData",R,N,V_responseData
commandHandlerStatuses
Ti,R,N,V_pid
bundleIdentifer
T@"NSString",R,N,V_bundleIdentifer
hasDeviceIdentifier
TI,N,V_deviceIdentifier
kMRTelevisionServicePairedDevicesDidChangeNotification
kMRTelevisionServicePairedDevicesDidChangeDistributedNotification
kMRTelevisionServiceIsPairingAllowedDidChangeNotification
kMRTelevisionServiceIsPairingAllowedDidChangeDistributedNotification
com.apple.mediaremote.televisionService
kMRPairedDeviceNameKey
kMRPairedDeviceIdentifierKey
kMRPairedDeviceIsConnectedKey
T@"NSString",R,N,V_name
connected
TB,N,GisConnected,V_connected
Device: {
%@: %@ %@
Connected
Not Connected
totalLength
hasTotalLength
TQ,N,V_totalLength
hasRevision
T@"NSString",&,N,V_revision
Connecting
Disconnected
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-645.18/MediaRemote/Framework/AirPlay/MRAVRoutingClientController.m
mediaRemoteService
T^{MRMediaRemoteService=},R,N,V_mediaRemoteService
MRAVRoutingActiveCategoryName
formatSettingsPlistData
hasFormatSettingsPlistData
T@"NSData",&,N,V_formatSettingsPlistData
sourceID
mediaType
externalPlayerCommand
rating
negative
playbackPosition
contextID
trackID
radioStationID
systemAppPlaybackQueueData
destinationAppDisplayID
sendOptions
requestDefermentToPlaybackQueuePosition
shouldOverrideManuallyCuratedQueue
stationURL
shouldBeginRadioPlayback
playbackQueueInsertionPosition
contentItemID
hasSourceID
T@"NSString",&,N,V_sourceID
hasMediaType
T@"NSString",&,N,V_mediaType
hasExternalPlayerCommand
TB,N,V_externalPlayerCommand
Tf,N,V_skipInterval
hasRating
Tf,N,V_rating
hasNegative
TB,N,V_negative
hasPlaybackPosition
Td,N,V_playbackPosition
hasContextID
T@"NSString",&,N,V_contextID
hasTrackID
TQ,N,V_trackID
hasRadioStationID
Tq,N,V_radioStationID
hasSystemAppPlaybackQueueData
T@"NSData",&,N,V_systemAppPlaybackQueueData
hasDestinationAppDisplayID
T@"NSString",&,N,V_destinationAppDisplayID
hasSendOptions
TI,N,V_sendOptions
hasRequestDefermentToPlaybackQueuePosition
TB,N,V_requestDefermentToPlaybackQueuePosition
hasShouldOverrideManuallyCuratedQueue
TB,N,V_shouldOverrideManuallyCuratedQueue
hasStationURL
T@"NSString",&,N,V_stationURL
hasShouldBeginRadioPlayback
TB,N,V_shouldBeginRadioPlayback
hasPlaybackQueueInsertionPosition
Ti,N,V_playbackQueueInsertionPosition
hasContentItemID
T@"NSString",&,N,V_contentItemID
sendError
results
dataExchangeBlock
T@?,C,N,V_dataExchangeBlock
showSetupCodeBlock
T@?,C,N,V_showSetupCodeBlock
hideSetupCodeBlock
T@?,C,N,V_hideSetupCodeBlock
promptForSetupCodeBlock
T@?,C,N,V_promptForSetupCodeBlock
exchangeCompleteBlock
T@?,C,N,V_exchangeCompleteBlock
kMRMediaRemoteCommandInfoPreferredIntervalsKey
kMRMediaRemoteCommandInfoIsActiveKey
kMRMediaRemoteCommandInfoLocalizedTitleKey
kMRMediaRemoteCommandInfoLocalizedShortTitleKey
kMRMediaRemoteCommandInfoMinimumRatingKey
kMRMediaRemoteCommandInfoMaximumRatingKey
kMRMediaRemoteCommandInfoSupportedPlaybackRates
kMRMediaRemoteCommandInfoPresentationStyleKey
kMRMediaRemoteCommandInfoCanBeControlledByScrubbingKey
kMRMediaRemoteCommandInfoSupportedInsertionPositions
kMRMediaRemoteCommandInfoPreservesShuffleModeKey
kMRMediaRemoteCommandInfoPreservesRepeatModeKey
kMRMediaRemoteCommandInfoPurchaseCommandState
kMRMediaRemoteCommandInfoRepeatMode
kMRMediaRemoteCommandInfoShuffleMode
kMRMediaRemoteCommandInfoNumberOfAvailableSkips
kMRMediaRemoteCommandInfoSkipFrequency
kMRMediaRemoteCommandInfoSkipInterval
kMRMediaRemoteCommandInfoPlaybackQueueType
kMRMediaRemoteCommandInfoSpecializedQueues
kCommandInfoCommandKey
kCommandInfoEnabledKey
kCommandInfoOptionsKey
MRMediaRemoteCommandInfo
<MRMediaRemoteCommandInfo: %p, %@, enabled = %d, options = %@>
<%@ %p "%@" %@>
MediaRemoteTelevisionDeviceInfo.plist
%@/%@
MediaRemote-GeneratedDeviceID
T@"NSString",R,N,V_uniqueIdentifier
localizedModelName
T@"NSString",R,N,V_localizedModelName
systemBuildVersion
T@"NSString",R,N,V_systemBuildVersion
applicationBundleIdentifier
T@"NSString",R,N,V_applicationBundleIdentifier
applicationBundleVersion
T@"NSString",R,N,V_applicationBundleVersion
protocolVersion
TQ,R,N,V_protocolVersion
pairingAllowed
TB,R,N,GisPairingAllowed,V_pairingAllowed
T@"NSString",C,D,N
TQ,D,N
TB,D,N,GisPairingAllowed
UserAssignedDeviceName
v24@?0^{__CFString=}8^{__CFDictionary=}16
v16@?0@"NSNotification"8
T@"<MRDeviceInfoObserving>",N,V_delegate
com.apple.mobileipod
SiriShouldRouteCommandsToLegacyMusicApplication
No Error
Invalid Operation
Operation not permitted
Client does not exist
Origin does not exist
Unsupported operation
Failed to set picked route
Failed to remove custom origin
The application activity does not exist
The app has not setup a browsable content endpoint
The requested browsable content API is not supported by the application.
The notfication has not been whitelisted by the server.
Operation requires a client callback to have been registered.
Operation requires a client data source to have been registered.
Requested data is out of date and should be requested again
The device's enforced volume limit has been exceeded. The system will ignore the volume adjustment until overridden.
Volume value is out of range (must be between 0.0 and 1.0, where 1.0 is the loudest).
Volume is already at the maximum value.
Volume is already muted.
Voice input endpoint does not exist.
The voice input device is not registered or does not exist.
Encryption failure.
Failed to connect to remote television.
Authentication token is invalid.
Recording session is already in progress on this device.
The device is not currently recording.
The client has disconnected.
The server has disconnected.
The connection has been cancelled by the client.
Pairing functionality is locked due to security reasons.
The client's operating system version is too old.
The client's application version is too old.
Unknown Error
_kMRErrorRepErrorCodeKey
_kMRErrorRepErrorDomainKey
_kMRErrorRepErrorUserInfoKey
notification
notifications
T@"NSMutableArray",&,N,V_notifications
subtitle
isContainer
isPlayable
playbackProgress
albumName
trackArtistName
albumArtistName
directorName
seasonNumber
episodeNumber
releaseDate
playCount
localizedContentRating
isExplicitItem
playlistType
radioStationType
artworkData
hasSubtitle
T@"NSString",&,N,V_subtitle
hasIsContainer
TB,N,V_isContainer
hasIsPlayable
TB,N,V_isPlayable
hasPlaybackProgress
Tf,N,V_playbackProgress
hasAlbumName
T@"NSString",&,N,V_albumName
hasTrackArtistName
T@"NSString",&,N,V_trackArtistName
hasAlbumArtistName
T@"NSString",&,N,V_albumArtistName
hasDirectorName
T@"NSString",&,N,V_directorName
hasSeasonNumber
Ti,N,V_seasonNumber
hasEpisodeNumber
Ti,N,V_episodeNumber
hasReleaseDate
Td,N,V_releaseDate
hasPlayCount
Ti,N,V_playCount
hasLocalizedContentRating
T@"NSString",&,N,V_localizedContentRating
hasIsExplicitItem
TB,N,V_isExplicitItem
hasPlaylistType
Ti,N,V_playlistType
hasRadioStationType
Ti,N,V_radioStationType
hasArtworkData
T@"NSData",&,N,V_artworkData
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-645.18/MediaRemote/Framework/Core/MRTransaction.m
Appending packets with different properties
Appending packets has too muchd data
kMRTransactionpacketDataKey
kMRTransactionPacketKeyKey
kMRTransactionPacketTotalLengthKey
kMRTransactionPacketIdentifierKey
Trying to send more data than exists
Write Position: %lu greater than data length %lu
Coder must support key-value coding
Total length less than actual length
writePosition
TQ,R,N,V_writePosition
writeLength
TQ,N,V_writeLength
actualLength
TQ,R,N,V_totalLength
readComplete
TB,R,N,GisReadComplete
writeComplete
TB,R,N,GisWriteComplete
T@"NSData",R,&,N,V_data
T@"NSString",R,&,N,V_key
complete
TB,R,N,GisComplete
T@"_MRTransactionPacketProtobuf",R,N
hasMorePacketsToPacketize
hasMorePacketsToUnpacketize
MRXPC_TRANSACTION_DATA_REQUESTED_SIZE
MRXPC_TRANSACTION_DATA
MRXPC_TRANSACTION_ENDED
TB,R,N,GisActive
com.apple.MediaRemote.transactionSourceQueue
TQ,R,N,V_name
com.apple.MediaRemote.transactionQueue
T@"<MRTransactionDelegate>",N,V_delegate
@32@?0@"NSDictionary"8@"NSString"16@24
@32@?0@"PBCodable"8@"NSString"16@24
T@"NSMutableArray",R,N
unimplemented protocol message type
Message Sent: 
Message Purged: 
<Message Type: %@
Timestamp: %llu
Error: %@
Identifier: %@
Type: %lul
Priority: %lul
Message: %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-645.18/MediaRemote/Framework/ProtocolMessages/MRProtocolMessage.m
Message does not have a valid type. Did you forget to implement the type method?
underlyingCodableMessage
T@"PBCodable",&,N,V_underlyingCodableMessage
T@"NSString",C,N,V_identifier
error
T@"NSError",C,N,V_error
protobufData
encryptionType
priority
shouldLog
messageSentCallbacks
T@"MSVMultiCallback",R,N,V_messageSentCallbacks
messagePurgedCallbacks
T@"MSVMultiCallback",R,N,V_messagePurgedCallbacks
T@"NSString",&,N,V_uniqueIdentifier
T@"NSString",&,N,V_name
hasLocalizedModelName
T@"NSString",&,N,V_localizedModelName
hasSystemBuildVersion
T@"NSString",&,N,V_systemBuildVersion
hasApplicationBundleIdentifier
T@"NSString",&,N,V_applicationBundleIdentifier
hasApplicationBundleVersion
T@"NSString",&,N,V_applicationBundleVersion
hasProtocolVersion
TQ,N,V_protocolVersion
deviceDescriptor
T@"MRVirtualTouchDeviceDescriptor",R,C,N
(System Media Application)
com.apple.Music
com.apple.NanoMusic
com.apple.TVMusic
public.main-program-content
public.auxiliary-content
public.subtitles.forced-only
public.accessibility.transcribes-spoken-dialog
public.accessibility.describes-music-and-sound
public.accessibility.describes-video
public.easy-to-read
public.translation
public.translation.dubbed
public.translation.voice-over
kMRLanguageOptionLanguageTag
kMRLanguageOptionType
KMRLanguageOptionCharacteristics
kMRLanguageOptionDefaultSelection
kMRLanguageOptionAllowEmptySelection
kMRLanguageOptions
kMRLanguageOptionDisplayName
kMRLanguageOptionIdentifier
__AUTO__
languageOptionType
TI,R,N,V_languageOptionType
languageTag
T@"NSString",R,N,V_languageTag
languageOptionCharacteristics
T@"NSArray",R,N,V_languageOptionCharacteristics
T@"NSString",R,N,V_displayName
allowEmptySelection
TB,R,N,V_allowEmptySelection
defaultLanguageOption
T@"MRLanguageOption",R,N,V_defaultLanguageOption
languageOptions
T@"NSArray",R,N,V_languageOptions
hidEventData
hasHidEventData
T@"NSData",&,N,V_hidEventData
autocapitalizationType
keyboardType
returnKeyType
autocorrection
spellchecking
enablesReturnKeyAutomatically
secureTextEntry
validTextRangeLocation
validTextRangeLength
PINEntrySeparatorIndexes
hasAutocapitalizationType
Ti,N,V_autocapitalizationType
hasKeyboardType
Ti,N,V_keyboardType
hasReturnKeyType
Ti,N,V_returnKeyType
hasAutocorrection
TB,N,V_autocorrection
hasSpellchecking
TB,N,V_spellchecking
hasEnablesReturnKeyAutomatically
TB,N,V_enablesReturnKeyAutomatically
hasSecureTextEntry
TB,N,V_secureTextEntry
hasValidTextRangeLocation
TQ,N,V_validTextRangeLocation
hasValidTextRangeLength
TQ,N,V_validTextRangeLength
pINEntrySeparatorIndexesCount
pINEntrySeparatorIndexes
T^Q,R,N
Words
Sentences
AllCharacters
Default
ASCIICapable
NumbersAndPunctuation
NumberPad
PhonePad
NamePhonePad
EmailAddress
DecimalPad
Twitter
WebSearch
Alphabet
PasscodePad
Google
Join
Next
Route
Search
Send
Yahoo
Done
EmergencyCall
Continue
point = {%f, %f}
phase = %@
timestamp = %llu
finger = %u
usagePage = %u
usage = %u
down = %s
kMRMediaRemoteApplicationFinishedLoadingContentNotification
kMRMediaRemoteApplicationInvalidatedBrowsableContentDataSourceNotification
kMRMediaRemoteBrowsableContentNowPlayingIdentifiersUpdatedNotification
kMRMediaRemoteContentItemsUpdatedNotification
kMRMediaRemoteApplicationInitiatedPlaybackOfContentItemNotification
kMRMediaRemoteBrowsableContentErrorLocalizedDescriptionKey
kMRMediaRemoteBrowsableContentErrorCodeKey
kMRMediaRemoteBrowsableContentErrorDomainKey
kMRMediaRemoteIndexPathDataUserInfoKey
kMRMediaRemoteBrowsableContentBundleIdentifierUserInfoKey
kMRMediaRemoteBrowsableContentEndpointChangedNotification
kMRMediaRemoteBrowsableContentAPIChangedNotification
Boolean MRMediaRemoteApplicationSupportsBrowsableContent(CFStringRef)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-645.18/MediaRemote/Framework/BrowsableContent/MRBrowsableContent.m
bundleID
v12@?0B8
v16@?0Q8
BeginLoadingContent
PlaybackProgress
ContentFetching
InitiatePlayback
InitializePlaybackQueue
ContextChanges
(%@)
(None)
com.apple.developer.playable-content
UIBrowsableContentSupportsSectionedBrowsing
UIBrowsableContentSupportsImmediatePlayback
inputModeFlags
hasInputModeFlags
Ti,N,V_inputModeFlags
Motion
Buttons
Digitizer
dpadX
dpadY
buttonA
buttonB
buttonX
buttonY
leftShoulder
rightShoulder
leftThumbstickX
leftThumbstickY
rightThumbstickX
rightThumbstickY
leftTrigger
rightTrigger
buttonPause
hasDpadX
Tf,N,V_dpadX
hasDpadY
Tf,N,V_dpadY
hasButtonA
Tf,N,V_buttonA
hasButtonB
Tf,N,V_buttonB
hasButtonX
Tf,N,V_buttonX
hasButtonY
Tf,N,V_buttonY
hasLeftShoulder
Tf,N,V_leftShoulder
hasRightShoulder
Tf,N,V_rightShoulder
hasLeftThumbstickX
Tf,N,V_leftThumbstickX
hasLeftThumbstickY
Tf,N,V_leftThumbstickY
hasRightThumbstickX
Tf,N,V_rightThumbstickX
hasRightThumbstickY
Tf,N,V_rightThumbstickY
hasLeftTrigger
Tf,N,V_leftTrigger
hasRightTrigger
Tf,N,V_rightTrigger
hasButtonPause
Tf,N,V_buttonPause
MRXPC_NOWPLAYING_ARTWORK_DATA_KEY
imageData
T@"NSData",R,C,N,V_imageData
mimeType
T@"NSString",R,C,N,V_mimeType
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-645.18/MediaRemote/Framework/Core/MRMediaRemoteOriginClient.m
origin
AVController_ServerConnectionDiedNotification
com.apple.MRMediaRemote.restoreClientStateForLaunch
v32@?0@"MRTransactionDestination"8@"NSArray"16@?<v@?I>24
T^{_MROrigin=},R,N,V_origin
canBeNowPlayingApp
TB,N,V_canBeNowPlayingApp
isOverrideApp
TB,N,V_isOverrideApp
T@"NSDictionary",C,N,V_nowPlayingInfo
T@"MRNowPlayingArtwork",&,N,V_nowPlayingArtwork
routeDiscoveryMode
TI,N,V_routeDiscoveryMode
T@"NSArray",C,N,V_supportedCommands
applicationPickedRoutes
T@"NSArray",C,N,V_applicationPickedRoutes
commandHandlerBlocks
T@"NSArray",R,C,N
playbackQueueCallback
T@?,C,N,V_playbackQueueCallback
videoThumbnailsCallback
T@?,C,N,V_videoThumbnailsCallback
audioAmplitudeSamplesCallback
T@?,C,N,V_audioAmplitudeSamplesCallback
MRTelevisionGenericMessageSetNameKey
kMRMediaRemoteUpdatedContentItemsUserInfoKey
kMRMediaRemoteUpdatedContentItemsDataUserInfoKey
kMRMediaRemoteUpdatedNowPlayingIdentifiersInfoKey
kContentItemIdentifierKey
kContentItemTitleKey
kContentItemSubtitleKey
kContentItemArtworkDataKey
kContentItemIsContainerKey
kContentItemIsPlayableKey
kContentItemIsStreamingContentKey
kContentItemIsCurrentlyPlayingKey
kContentItemPlaybackProgressKey
kContentItemAlbumKey
kContentItemTrackArtistKey
kContentItemAlbumArtistKey
kContentItemDirectorKey
kContentItemSeasonNumberKey
kContentItemEpisodeNumberKey
kContentItemReleaseDateKey
kContentItemPlaylistTypeKey
kContentItemRadioStationTypeKey
kContentItemPlayCountKey
kContentItemDurationKey
kContentItemParentalRatingKey
kContentItemIsExplicitItemKey
kContentItemProfileIdentifierKey
kContentItemCollectionIdentifierKey
MRContentItemCreate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-645.18/MediaRemote/Framework/BrowsableContent/MRContentItem.m
identifier != NULL
Regular
Smart
Folder
GeniusMix
Feature
Personal
<ContentItem %p {
Identifier = %@
Title = %@
Subtitle = %@
ArtworkData = %@
Container = %s
Playable = %s
StreamingContent = %s
PlaybackProgress = %lf
AlbumName = %@
TrackArtistName = %@
AlbumArtistName = %@
DirectorName = %@
SeasonNumber = %lu
EpisodeNumber= %lu
ReleaseDate = %@
PlaylistType = %@
RadioStationType = %@
PlayCount = %lu
Duration = %f
LocalizedContentRating = %@
IsExplicitItem = %s
MRContentItem
kMRVirtualVoiceInputDeviceIDUserInfoKey
kMRVirtualVoiceInputRecordingStateUserInfoKey
kMRVirtualVoiceInputRecordingStateDidChangeNotification
com.apple.MRVVIClient
com.apple.GameController.gamecontrollerd
_GCAppleTVRemoteControllerProfile
GCExtendedGamepadSnapshot
_GCController
v32@?0@"NSNumber"8@"MRGameControllerDelayedEvent"16^B24
lastDownEvent
TQ,N,V_lastDownEvent
sendEventBlock
T@?,C,N,V_sendEventBlock
kMRGameControllerDaemonProxyInterrupted
kMRGameControllerDaemonProxyGameControllerDidChangeNotification
kMRGameControllerDaemonProxyGameControllerPropertiesUserInfoKey
kMRGameControllerDaemonProxyGameControllerIDUserInfoKey
deviceIDsCount
T@"MRTextEditingAttributes",R,N
Ti,R,N,V_profile
TQ,R,N,V_controllerID
@"NSData"16@?0@"MRProtocolMessage"8
InputStream
OutputStream
Message received
q24@?0@"NSData"8q16
SocketSetQoS
CoreUtils
T@"NSInputStream",R,N,V_inputStream
T@"NSOutputStream",R,N,V_outputStream
streamsAreValid
useSSL
TB,N,V_useSSL
registeredToNowPlayingUpdates
TB,N,V_registeredToNowPlayingUpdates
registeredToNowPlayingArtworkUpdates
TB,N,V_registeredToNowPlayingArtworkUpdates
registeredVolumeControlAvailabilityUpdates
TB,N,V_registeredVolumeControlAvailabilityUpdates
registeredKeyboardUpdates
TB,N,V_registeredKeyboardUpdates
voiceRecordingState
TI,N,V_voiceRecordingState
T@"<MRTelevisionClientConnectionDelegate>",N,V_delegate
cryptoSession
T@"MRCryptoPairingSession",&,N,V_cryptoSession
_mediaremotetv._tcp.
UniqueIdentifier
Name
ModelName
SystemBuildVersion
AllowPairing
local
T@"<MRTelevisionDelegate>",N,V_delegate
discovering
TB,R,N,GisDiscovering,V_discovering
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-645.18/MediaRemote/Framework/Television/MRTelevisionController.m
callbackBlock
T@?,R,N,V_callbackBlock
discoveryCallback
T@"_MRTelevisionControllerBlockCallback",&,N,V_discoveryCallback
removalCallback
T@"_MRTelevisionControllerBlockCallback",&,N,V_removalCallback
hasDeviceID
TI,N,V_deviceID
hasRecordingState
Ti,N,V_recordingState
com.apple.MediaRemote.MRMediaRemoteOriginClientManager
Ti,R,N
TB,R,N,GisAbsolute,V_absolute
TB,R,N,GisIntegratedDisplay,V_integratedDisplay
screenSize
T(_MRHIDSize={?=ff}[2f]),R,N,V_screenSize
TB,D,N,GisAbsolute
TB,D,N,GisIntegratedDisplay
T(_MRHIDSize={?=ff}[2f]),D,N
kMRMediaRemoteApplicationDidReportPlaybackErrorNotification
kMRMediaRemotePlaybackErrorApplicationUserInfoKey
kMRMediaRemotePlaybackErrorUserInfoKey
kMRMediaRemotePlaybackErrorReasonUserInfoKey
_kMRMediaRemotePlaybackErrorDataUserInfoKey
com.apple.LegacyMusic
<%@ %p "%@" secure=%@>
T@"NSString",R,N,V_title
T@"NSString",R,N,V_prompt
T{_MRTextInputTraits=IIIII{?=qq}BB[10q]Q},R,N,V_inputTraits
T{_MRTextInputTraits=IIIII{?=qq}BB[10q]Q},D,N
<%@ %p text="%@", attribs=%@>
TQ,R,N,V_uniqueIdentifier
T@"NSString",R,N,V_text
editing
TB,R,N,GisEditing,V_editing
T@"MRTextEditingAttributes",R,N,V_attributes
TB,D,N,GisEditing
T@"MRTextEditingAttributes",&,D,N
motion
buttons
hasMotion
T@"_MRGameControllerMotionProtobuf",&,N,V_motion
hasButtons
T@"_MRGameControllerButtonsProtobuf",&,N,V_buttons
dataBlock
hasDataBlock
T@"_MRAudioDataBlockProtobuf",&,N,V_dataBlock
kMRMediaRemoteExternalScreenTypeDidChangeNotification
kMRMediaRemotePickableRoutesDidChangeNotification
kMRMediaRemoteRouteStatusDidChangeNotification
kMRMediaRemotePickedRouteVolumeControlAvailabilityDidChangeNotification
kMRMediaRemoteWillPresentRouteAuthenticationPromptNotification
kMRMediaRemoteRouteDescriptionUserInfoKey
kMRMediaRemoteExternalScreenTypeUserInfoKey
kMRMediaRemoteRouteStatusUserInfoKey
kMRMediaRemoteRouteIsLocalDeviceRouteKey
com.apple.MediaRemote.externalScreenTypeDidChange
com.apple.MediaRemote.pickableRoutesDidChange
com.apple.MediaRemote.willPresentRouteAuthenticationPrompt
queue must be non-nil
handler must be non-nil
void MRMediaRemoteGetSavedAVRoutePassword(CFStringRef, dispatch_queue_t, void (^)(CFStringRef))
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-645.18/MediaRemote/Framework/AirPlay/MRAVRouting.m
Disabled
Presence Scan
Detailed Scan
contentItem
T@"NSMutableArray",&,N,V_contentItems
hasImageData
T@"NSData",&,N,V_imageData
Td,N,V_time
kMRApplicationActivityHasBegunNotification
kMRApplicationActivityHasEndedNotification
kMRApplicationActivityStatusDidChangeNotification
kMRApplicationActivityUserInfoKey
kMRApplicationActivityUserInfoDataKey
<%@ %p id=%@, primary=%@, secondary=%@, status=%@, creatorPID=%d, shouldPrepareAppPlaybackQueue=%@>
primaryApplicationDisplayID
secondaryApplicationDisplayID
shouldPrepareAppPlaybackQueue
creatorProcessID
T@"NSUUID",R,N,V_uniqueIdentifier
T@"NSString",R,N,V_primaryApplicationDisplayID
T@"NSString",R,N,V_secondaryApplicationDisplayID
TB,R,N,V_shouldPrepareAppPlaybackQueue
Ti,R,N,V_status
Ti,R,N,V_creatorProcessID
TB,D,N
Ti,D,N
Initializing
Failed
hasDeviceDescriptor
T@"_MRVirtualTouchDeviceDescriptorProtobuf",&,N,V_deviceDescriptor
gravity
userAcceleration
hasGravity
T@"_MRGameControllerAccelerationProtobuf",&,N,V_gravity
hasUserAcceleration
T@"_MRGameControllerAccelerationProtobuf",&,N,V_userAcceleration
kMRMediaRemoteAvailableOriginsDidChangeNotification
kMRMediaRemoteActiveOriginDidChangeNotification
com.apple.MediaRemote.availableOriginsDidChange
com.apple.MediaRemote.activeOriginDidChange
MROrigin
v16@?0^{_MROrigin={__CFRuntimeBase=Q[4C]I}i^{__CFString}iI}8
<MROriginRef %p displayName = '%@' originType = %i uniqueIdentifier = %li>
%.1u
TI,N,V_type
characterCount
TQ,N,V_characterCount
passcode
T@"NSString",C,N,V_passcode
MRProtocolMessageLogging
TB,N,V_shouldLog
<%@ %p, supportedFormats = %@, defaultFormat = %@>
T@"NSArray",R,N,V_supportedFormats
T@"NSDictionary",R,N,V_defaultFormat
T@"_MRVoiceInputDeviceDescriptorProtobuf",R,N
T@"NSArray",C,D,N
T@"NSDictionary",C,D,N
void MRVirtualVoiceInputDeviceDescriptorSetSupportedFormats(MRVirtualVoiceInputDeviceDescriptorRef, CFArrayRef)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-645.18/MediaRemote/Framework/VoiceInput/MRVirtualVoiceInputDeviceDescriptor.m
unsupported type
void MRVirtualVoiceInputDeviceDescriptorSetDefaultAudioFormat(MRVirtualVoiceInputDeviceDescriptorRef, CFDictionaryRef)
_MRVideoThumbnailRequestProtobuf
NSCopying
_MRGameControllerPropertiesMessageProtobuf
MRClientUpdatesConfigMessage
_MRAudioDataBlockProtobuf
MRTelevisionMessageQueue
MRMessageCallback
MRMessageData
MRPendingMessageQueue
MRAudioBuffer
_MRSupportedCommandsProtobuf
MRNowPlayingAppDidChangeNotificationObserver
MRNowPlayingAppIsPlayingDidChangeNotificationObserver
MRAnyAppIsPlayingDidChangeNotificationObserver
MRExternalScreenTypeDidChangeNotificationObserver
MRNotification
MRNotificationRemitter
MRSetStateMessage
MRSetReadyStateMessage
MRSetConnectionStateMessage
MRSetHiliteModeMessage
MRWakeDeviceMessage
_MRSetStateMessageProtobuf
_MRNowPlayingInfoProtobuf
_MRAudioTimeProtobuf
MRGameControllerMessage
MRGameControllerPropertiesMessage
MRRegisterGameControllerMessage
MRRegisterGameControllerResponseMessage
MRUnregisterGameControllerMessage
MRRegisterForGameControllerEventsMessage
_MRGetKeyboardSessionProtobuf
MRTelevisionNowPlayingState
_MRSetRecordingStateMessageProtobuf
_MRSendVirtualTouchEventMessageProtobuf
MRDeviceInfoMessage
MRDeviceInfoUpdateMessage
_MRSendCommandResultMessageProtobuf
MRGetKeyboardSessionMessage
_MRGetStateMessageProtobuf
_MRVoiceInputDeviceDescriptorProtobuf
_MRAudioBufferProtobuf
MRAdditions
MRProtobufSerialization
MRGetVoiceInputDevicesMessage
MRGetVoiceInputDevicesResponseMessage
MRRegisterVoiceInputDeviceMessage
MRRegisterVoiceInputDeviceResponseMessage
MRSetRecordingStateMessage
MRSendVoiceInputMessage
MRRegisterHIDDeviceResultMessage
_MRColorProtobuf
MRTransactionMessage
MRGameControllerProperties
_MRCryptoPairingMessageProtobuf
MRWeakRef
_MRGenericMessageProtobuf
_MRTextInputMessageProtobuf
MRTelevision
MRTelevisionClientConnectionDelegate
NSObject
MRDeviceInfoObserving
MRVolumeControlAvailabilityMessage
_MRVirtualTouchDeviceDescriptorProtobuf
_MRContentItemProtobuf
_MRGetPlaybackQueueMessageProtobuf
MRCryptoPairingSession
_MRVolumeControlAvailabilityProtobuf
_MRSendCommandMessageProtobuf
_MRSendHIDReportMessageProtobuf
MRSendCommandMessage
_MRTextEditingAttributesProtobuf
_MRClientUpdatesConfigurationProtobuf
MRTelevisionMessageMetrics
MRTelevisionMessageMetricsEntry
MRSendVirtualTouchEventMessage
_MRTransactionMessageProtobuf
MRLegacySendHIDEventMessage
MRTelevisionManager
MRCoreUtilsPairingSession
MRMediaRemoteAdditions
MRPlaybackQueue
NSSecureCoding
NSCoding
MRPlaybackQueueContext
MRCryptoPairingIdentity
MRVirtualVoiceInputDevice
_MRSetArtworkMessageProtobuf
MRAudioDataBlock
NSMutableCopying
MRMutableAudioDataBlock
MRMediaRemoteServiceClient
MRSendButtonEventMessage
_MRSetHiliteModeMessageProtobuf
_MRCommandInfoProtobuf
_MRSendButtonEventMessageProtobuf
_MRKeyboardMessageProtobuf
MRGetPlaybackQueueMessage
_MRMediaRemoteMessageProtobuf
_MRRegisterVoiceInputDeviceMessageProtobuf
_MRVirtualTouchEventProtobuf
_MRRegisterGameControllerMessageProtobuf
_MRNowPlayingClientProtobuf
MRUserSettings
_MRGameControllerPropertiesProtobuf
_MRAudioStreamPacketDescriptionProtobuf
MRBroadcastCommandResponse
_MRRegisterHIDDeviceResultMessageProtobuf
_MRGameControllerAccelerationProtobuf
_MRSetReadyStateMessageProtobuf
MRPairedDevice
_MRTransactionPacketProtobuf
_MRPlaybackQueueContextProtobuf
_MRSetConnectionStateMessageProtobuf
MRAVRoutingClientController
_MRAudioFormatSettingsProtobuf
_MRCommandOptionsProtobuf
MRSendCommandResultMessage
MRCryptoPairingSessionBlockDelegate
MRCryptoPairingSessionDelegate
MRDeviceInfo
MRMutableDeviceInfo
MRDeviceInfoObserver
_MRNotificationMessageProtobuf
_MRContentItemMetadataProtobuf
MRTransactionPacket
MRTransactionPacketizer
MRTransactionSourceOrigin
MRTransactionSource
MRTransactionDestination
MRTransaction
MRNotificationMessage
MRSetArtworkMessage
MRProtocolMessage
_MRDeviceInfoMessageProtobuf
MRRegisterHIDDeviceMessage
MRLanguageOption
MRLanguageOptionGroup
_MRSendHIDEventMessageProtobuf
_MRTextInputTraitsProtobuf
_MRRegisterGameControllerResponseMessageProtobuf
_MRRegisterForGameControllerEventsMessageProtobuf
_MRGameControllerButtonsProtobuf
MRNowPlayingArtwork
MRNowPlayingArtworkImage
MRMediaRemoteOriginClient
MRGenericMessage
MRVVIClient
GameControllerDaemonListener
GameControllerDaemonControllerListener
GameControllerDaemonRequestListener
GameControllerDaemon
MRGameControllerDaemonProxy
MRGameControllerDelayedEvents
MRGameControllerDelayedEvent
_MRGetVoiceInputDevicesResponseMessageProtobuf
MRKeyboardMessage
_MRWakeDeviceMessageProtobuf
MREmulatedGameController
MRTelevisionClientConnection
NSStreamDelegate
MSVMessageParserDelegate
MRTelevisionController
NSNetServiceBrowserDelegate
NSNetServiceDelegate
_MRTelevisionControllerBlockCallback
_MRBlockSupportingTelevisionController
MRTelevisionDelegate
MRTextInputMessage
_MRVoiceInputDevice
MRMediaRemoteOriginClientManager
_MRRegisterVoiceInputDeviceResponseMessageProtobuf
MRCryptoPairingMessage
_MRGetVoiceInputDevicesMessageProtobuf
_MRUnregisterGameControllerMessageProtobuf
MRVirtualTouchDeviceDescriptor
MRMutableVirtualTouchDeviceDescriptor
MRTextEditingAttributes
MRMutableTextEditingAttributes
MRTextEditingSession
MRMutableTextEditingSession
_MRGameControllerMessageProtobuf
_MRSendVoiceInputMessageProtobuf
_MRPlaybackQueueProtobuf
_MRVideoThumbnailProtobuf
MRApplicationActivity
MRMutableApplicationActivity
_MRRegisterHIDDeviceMessageProtobuf
_MRGameControllerMotionProtobuf
MRPasscodeCredentials
MRProtocolMessageLogger
MRVirtualVoiceInputDeviceDescriptor
MRMutableVirtualVoiceInputDeviceDescriptor
@24@0:8^{_NSZone=}16
v16@0:8
Q16@0:8
^d16@0:8
v24@0:8d16
d24@0:8Q16
v32@0:8^d16Q24
v20@0:8f16
v20@0:8B16
B16@0:8
@16@0:8
B24@0:8@16
v24@0:8@16
f16@0:8
{?="list"^d"count"Q"size"Q}
{?="thumbnailsHeight"b1"thumbnailsWidth"b1}
v24@0:8Q16
@"_MRGameControllerPropertiesProtobuf"
{?="controllerID"b1}
@32@0:8B16B20B24B28
d16@0:8
@"_MRAudioBufferProtobuf"
@"_MRAudioTimeProtobuf"
{?="gain"b1}
@24@0:8Q16
v48@0:8@16@?24@32@?40
v24@0:8@?16
@"MRPendingMessageQueue"
@"NSMutableDictionary"
@"NSObject<OS_dispatch_queue>"
@32@0:8@?16@24
@?16@0:8
@32@0:8@16@?24
q16@0:8
v24@0:8q16
@"NSData"
@"MRProtocolMessage"
@"NSMutableArray"
@40@0:8@16Q24Q32
@"AVAudioCompressedBuffer"
@"NSDictionary"
#16@0:8
@24@0:8@16
@"NSString"
@48@0:8@16@24@32@?40
@"NSNotificationCenter"
^v16@0:8
I16@0:8
@"NSArray"
@20@0:8I16
@20@0:8B16
v20@0:8I16
@"_MRNowPlayingInfoProtobuf"
@"_MRPlaybackQueueProtobuf"
@"_MRPlaybackQueueContextProtobuf"
@"_MRSupportedCommandsProtobuf"
{?="playbackState"b1}
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
{?="duration"b1"elapsedTime"b1"radioStationIdentifier"b1"timestamp"b1"uniqueIdentifier"b1"playbackRate"b1"repeatMode"b1"shuffleMode"b1"isAdvertisement"b1"isAlwaysLive"b1"isExplicitTrack"b1"isMusicApp"b1}
{?="sampleRate"b1"timestamp"b1}
@32@0:8r^{?=i(?={?={?=ddd}{?=ddd}}{?=fff}{?={?=fff}ffffffffffff}{?=ffBQ})}16Q24
@32@0:8^{?=fff}16Q24
^{?=i(?={?={?=ddd}{?=ddd}}{?=fff}{?={?=fff}ffffffffffff}{?=ffBQ})}16@0:8
{?="type"i""(?="motion"{?="gravity"{?="x"d"y"d"z"d}"userAcceleration"{?="x"d"y"d"z"d}}"buttons"{?="buttonA"f"buttonX"f"buttonPause"f}"extendedButtons"{?="buttons"{?="buttonA"f"buttonX"f"buttonPause"f}"dpadX"f"dpadY"f"buttonB"f"buttonY"f"leftShoulder"f"rightShoulder"f"leftThumbstickX"f"leftThumbstickY"f"rightThumbstickX"f"rightThumbstickY"f"leftTrigger"f"rightTrigger"f}"digitizer"{?="x"f"y"f"touchDown"B"timestamp"Q})}
@32@0:8^v16Q24
@24@0:8^v16
v24@0:8^v16
{?="state"b1}
@"_MRVirtualTouchEventProtobuf"
{?="virtualDeviceID"b1}
@"MRDeviceInfo"
^I16@0:8
I24@0:8Q16
v32@0:8^I16Q24
{?="list"^I"count"Q"size"Q}
{?="errorCode"b1}
@"_MRAudioFormatSettingsProtobuf"
{?="maximumPacketSize"b1"packetCapacity"b1"packetCount"b1}
v24@0:8#16
@28@0:8@16I24
@"MRVirtualVoiceInputDeviceDescriptor"
@24@0:8I16I20
@44@0:8@16{?=dd}24f40
{?=dd}16@0:8
@"MRAudioDataBlock"
@28@0:8I16Q20
{?="alpha"b1"blue"b1"green"b1"red"b1}
@32@0:8Q16@24
{?="status"b1}
{?="timestamp"b1"actionType"b1}
v32@0:8@16@24
v32@0:8@"MRTelevisionClientConnection"16@"MRProtocolMessage"24
v24@0:8@"MRTelevisionClientConnection"16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v32@0:8@"MRDeviceInfoObserver"16@"MRDeviceInfo"24
^{_MROrigin=}16@0:8
v24@0:8^{_MROrigin=}16
v28@0:8I16@20
v32@0:8@?16@24
v40@0:8@16@24@?32
v56@0:8{_MRHIDTouchEvent=(_MRHIDPoint={?=ff}[2f])IQI}16Q48
v28@0:8{_MRHIDButtonEvent=IIB}16
v24@0:8^{__IOHIDEvent=}16
v32@0:8@16@?24
v40@0:8^v16@24@?32
v32@0:8r^{?=i(?={?={?=ddd}{?=ddd}}{?=fff}{?={?=fff}ffffffffffff}{?=ffBQ})}16Q24
v48@0:8I16@20{?=dd}28f44
v32@0:8Q16@24
v32@0:8^v16Q24
v28@0:8@16I24
v36@0:8I16@20@?28
^{_MROrigin=}
@"MRDeviceInfoObserver"
@"NSNetService"
@"MRTelevisionClientConnection"
@"MSVDistributedNotificationObserver"
{?="screenSizeHeight"b1"screenSizeWidth"b1"absolute"b1"integratedDisplay"b1}
@"_MRContentItemMetadataProtobuf"
{?="artworkHeight"b1"artworkWidth"b1"length"b1"location"b1"includeMetadata"b1}
@32@0:8@16^@24
B24@0:8^@16
@"<MRCryptoPairingSessionDelegate>"
{?="volumeControlAvailable"b1}
@"_MRCommandOptionsProtobuf"
{?="command"b1}
@28@0:8I16@20
@"NSDate"
@"_MRTextInputTraitsProtobuf"
{?="artworkUpdates"b1"keyboardUpdates"b1"nowPlayingUpdates"b1"volumeUpdates"b1}
@56@0:8{_MRHIDTouchEvent=(_MRHIDPoint={?=ff}[2f])IQI}16Q48
{_MRHIDTouchEvent=(_MRHIDPoint={?=ff}[2f])IQI}16@0:8
{?="name"b1}
@24@0:8^{__IOHIDEvent=}16
{_MRHIDButtonEvent=IIB}16@0:8
^{__IOHIDEvent=}
@"NSPointerArray"
i24@0:8d16
@24@0:8^{PairingSessionPrivate=}16
@"MRPasscodeCredentials"
^{PairingSessionPrivate=}
{?="context"^v"showSetupCode_f"^?"hideSetupCode_f"^?"promptForSetupCode_f"^?"copyIdentity_f"^?"findPeer_f"^?"savePeer_f"^?"resumeRequest_f"^?"resumeResponse_f"^?}
@"MRPairedDevice"
@"NSMutableData"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8@16{?=qq}24
{?=qq}16@0:8
{?="location"q"length"q}
@40@0:8@16@24@32
@32@0:8^{_NSZone=}16#24
@"MRAudioBuffer"
{?="timestamp"d"sampleRate"d}
v32@0:8{?=dd}16
v32@0:8^{_MROrigin=}16@?24
v40@0:8Q16@24^{_MROrigin=}32
^{MRMediaRemoteService=}16@0:8
@"MRAVRoutingClientController"
^{MRMediaRemoteService=}
@28@0:8{_MRHIDButtonEvent=IIB}16
{?="hiliteMode"b1}
^f16@0:8
f24@0:8Q16
v32@0:8^f16Q24
{?="list"^f"count"Q"size"Q}
{?="canScrub"b1"command"b1"maximumRating"b1"minimumRating"b1"numAvailableSkips"b1"presentationStyle"b1"repeatMode"b1"shuffleMode"b1"skipFrequency"b1"skipInterval"b1"active"b1"enabled"b1}
{?="usage"b1"usagePage"b1"buttonDown"b1}
@"_MRTextEditingAttributesProtobuf"
@56@0:8{?={?=qq}Bdd}16
{?={?=qq}Bdd}16@0:8
@"_MRClientUpdatesConfigurationProtobuf"
@"_MRSetConnectionStateMessageProtobuf"
@"_MRCryptoPairingMessageProtobuf"
@"_MRDeviceInfoMessageProtobuf"
@"_MRGameControllerMessageProtobuf"
@"_MRGameControllerPropertiesMessageProtobuf"
@"_MRGenericMessageProtobuf"
@"_MRGetKeyboardSessionProtobuf"
@"_MRGetPlaybackQueueMessageProtobuf"
@"_MRGetStateMessageProtobuf"
@"_MRGetVoiceInputDevicesMessageProtobuf"
@"_MRGetVoiceInputDevicesResponseMessageProtobuf"
@"_MRKeyboardMessageProtobuf"
@"_MRNotificationMessageProtobuf"
@"_MRSetReadyStateMessageProtobuf"
@"_MRRegisterForGameControllerEventsMessageProtobuf"
@"_MRRegisterGameControllerMessageProtobuf"
@"_MRRegisterGameControllerResponseMessageProtobuf"
@"_MRRegisterHIDDeviceMessageProtobuf"
@"_MRRegisterHIDDeviceResultMessageProtobuf"
@"_MRRegisterVoiceInputDeviceMessageProtobuf"
@"_MRRegisterVoiceInputDeviceResponseMessageProtobuf"
@"_MRSendButtonEventMessageProtobuf"
@"_MRSendCommandMessageProtobuf"
@"_MRSendCommandResultMessageProtobuf"
@"_MRSendHIDEventMessageProtobuf"
@"_MRSendHIDReportMessageProtobuf"
@"_MRSendVirtualTouchEventMessageProtobuf"
@"_MRSendVoiceInputMessageProtobuf"
@"_MRSetArtworkMessageProtobuf"
@"_MRSetHiliteModeMessageProtobuf"
@"_MRSetRecordingStateMessageProtobuf"
@"_MRSetStateMessageProtobuf"
@"_MRTextInputMessageProtobuf"
@"_MRTransactionMessageProtobuf"
@"_MRUnregisterGameControllerMessageProtobuf"
@"_MRVolumeControlAvailabilityProtobuf"
@"_MRWakeDeviceMessageProtobuf"
{?="timestamp"b1"errorCode"b1"type"b1}
@"_MRVoiceInputDeviceDescriptorProtobuf"
{?="x"b1"y"b1"finger"b1"phase"b1}
@"_MRColorProtobuf"
{?="nowPlayingVisibility"b1"processIdentifier"b1"processUserIdentifier"b1}
B28@0:8@16B24
d28@0:8@16B24
@"NSUserDefaults"
{?="buttonAUpDelay"b1"playerIndex"b1"profile"b1}
{?="startOffset"b1"dataByteSize"b1"variableFramesInPacket"b1}
@36@0:8i16@20@28
{?="deviceIdentifier"b1"errorCode"b1}
@32@0:8@16@24
{?="totalLength"b1}
@24@0:8^{MRMediaRemoteService=}16
{?="playbackPosition"b1"radioStationID"b1"trackID"b1"playbackQueueInsertionPosition"b1"playbackRate"b1"rating"b1"repeatMode"b1"sendOptions"b1"shuffleMode"b1"skipInterval"b1"externalPlayerCommand"b1"negative"b1"requestDefermentToPlaybackQueuePosition"b1"shouldBeginRadioPlayback"b1"shouldOverrideManuallyCuratedQueue"b1}
v32@0:8@"MRCryptoPairingSession"16@"NSData"24
v32@0:8@"MRCryptoPairingSession"16@"NSString"24
v24@0:8@"MRCryptoPairingSession"16
v32@0:8@"MRCryptoPairingSession"16@?<v@?@"NSString">24
v40@0:8@16d24@?32
v40@0:8@"MRCryptoPairingSession"16d24@?<v@?@"NSString">32
v32@0:8@"MRCryptoPairingSession"16@"NSError"24
B32@0:8@16^@24
^{MGNotificationTokenStruct=}
@"MRNotification"
@"<MRDeviceInfoObserving>"
{?="duration"b1"releaseDate"b1"episodeNumber"b1"playCount"b1"playbackProgress"b1"playlistType"b1"radioStationType"b1"seasonNumber"b1"isContainer"b1"isExplicitItem"b1"isPlayable"b1}
v40@0:8@16Q24@?32
@40@0:8Q16^{_MROrigin=}24@32
@"MRTransactionPacketizer"
v32@0:8@16^{_MROrigin=}24
@"<MRTransactionDelegate>"
@"PBCodable"
@"NSError"
@"MSVMultiCallback"
{?="protocolVersion"b1}
@"MRVirtualTouchDeviceDescriptor"
@52@0:8I16@20@28@36@44
@36@0:8@16^v24B32
@"MRLanguageOption"
^Q16@0:8
Q24@0:8Q16
v32@0:8^Q16Q24
{?="list"^Q"count"Q"size"Q}
{?="validTextRangeLength"b1"validTextRangeLocation"b1"autocapitalizationType"b1"keyboardType"b1"returnKeyType"b1"autocorrection"b1"enablesReturnKeyAutomatically"b1"secureTextEntry"b1"spellchecking"b1}
{?="inputModeFlags"b1}
{?="buttonA"b1"buttonB"b1"buttonPause"b1"buttonX"b1"buttonY"b1"dpadX"b1"dpadY"b1"leftShoulder"b1"leftThumbstickX"b1"leftThumbstickY"b1"leftTrigger"b1"rightShoulder"b1"rightThumbstickX"b1"rightThumbstickY"b1"rightTrigger"b1}
@24@0:8^{_MROrigin=}16
v32@0:8@?16Q24
@?24@0:8Q16
@"MRNowPlayingArtwork"
v28@0:8@?16I24
v24@0:8@"GCController"16
v32@0:8Q16@"NSData"24
v32@0:8Q16f24i28
v36@0:8f16f20Q24B32
v44@0:8Q16f24f28Q32B40
v24@0:8@"NSArray"16
v40@0:8@16@24@32
v40@0:8@"NSString"16@"NSNumber"24@"NSString"32
v24@0:8@"NSDictionary"16
v28@0:8@16B24
v28@0:8@"GCController"16B24
v36@0:8Q16f24i28B32
v40@0:8Q16f24i28d32
v40@0:8Q16f24f28f32i36
B40@0:8Q16f24i28d32
@"NSXPCConnection"
@"<GameControllerDaemon>"
@"MRGameControllerDelayedEvents"
@28@0:8Q16i24
v28@0:8Q16i24
^{NSMutableDictionary=#}
@48@0:8Q16@24@32@40
@40@0:8Q16@24@32
@"MRTextEditingAttributes"
v24@0:8^{?=i(?={?={?=ddd}{?=ddd}}{?=fff}{?={?=fff}ffffffffffff}{?=ffBQ})}16
@"GCController"
@"MRGameControllerDaemonProxy"
v32@0:8@16Q24
v32@0:8@"NSStream"16Q24
v32@0:8@"MSVMessageParser"16@"NSData"24
@"MSVMessageParser"
@"NSRunLoop"
@"MRTelevisionMessageQueue"
@"NSInputStream"
@"NSOutputStream"
@"<MRTelevisionClientConnectionDelegate>"
@"MRCryptoPairingSession"
v24@0:8@"NSNetServiceBrowser"16
v32@0:8@"NSNetServiceBrowser"16@"NSDictionary"24
v36@0:8@16@24B32
v36@0:8@"NSNetServiceBrowser"16@"NSString"24B32
v36@0:8@"NSNetServiceBrowser"16@"NSNetService"24B32
v24@0:8@"NSNetService"16
v32@0:8@"NSNetService"16@"NSDictionary"24
v32@0:8@"NSNetService"16@"NSData"24
v40@0:8@"NSNetService"16@"NSInputStream"24@"NSOutputStream"32
@"NSNetServiceBrowser"
@"NSMutableSet"
@"<MRTelevisionDelegate>"
v32@0:8@"MRTelevisionController"16@"MRTelevision"24
@"_MRTelevisionControllerBlockCallback"
{?="deviceID"b1"recordingState"b1}
{?="deviceID"b1"errorCode"b1}
@28@0:8@16i24
(_MRHIDSize={?=ff}[2f])16@0:8
(_MRHIDSize=""{?="width"f"height"f}"data"[2f])
v24@0:8(_MRHIDSize={?=ff}[2f])16
{_MRTextInputTraits=IIIII{?=qq}BB[10q]Q}16@0:8
{_MRTextInputTraits="autocapitalizationType"I"autocorrectionType"I"spellcheckingType"I"keyboardType"I"returnKeyType"I"validTextRange"{?="location"q"length"q}"enablesReturnKeyAutomatically"B"secureTextEntry"B"PINEntrySeparatorIndexes"[10q]"PINEntrySeparatorIndexesCount"Q}
v152@0:8{_MRTextInputTraits=IIIII{?=qq}BB[10q]Q}16
@"_MRGameControllerButtonsProtobuf"
@"_MRGameControllerMotionProtobuf"
@"_MRAudioDataBlockProtobuf"
{?="location"b1}
{?="time"b1}
@"NSUUID"
@"_MRVirtualTouchDeviceDescriptorProtobuf"
@"_MRGameControllerAccelerationProtobuf"
Mapping Notification: %@ -> %@
MediaRemote: NULL origins are invalid for %s. Please provide either the local origin or a custom origin for this API. This will become an error condition in future builds.
Process %d is requesting now playing info.
Process %d is requesting now playing info for origin %@.
Setting artwork data of size: %lu
Setting identical now playing info, skipping update.
Clearing now playing info
Got artwork data of length: %lu
MediaRemote server disconnected.
No client-side XPC message destination routed for message with ID %lu.
Warning: Tried to stop a service that isn't running.
Setting television endpoint
Didn't receive any available origins from the reply.
Didn't receive any pickable routes from the reply.
Error while requesting to load browsable content: %@
Creating Transaction Destination with name: %llu
WARNING: Unable to serialize content items property list data. %@
Client XPC message with ID %lu not handled.
No client module registered to receive message: %@
Client-side browsable content message with ID %lu not handled.
No browsable content endpoint registered to receive message: %@
WARNING: Client endpoint returned nil when requesting now playing identifiers
Client endpoint returned nil when requesting child content items.
Voice recording client message %lu not handled
No voice recording endpoint registered to receive message: %@
Television client message %lu not handled
No television endpoint registered to receive message: %@
No callback for television custom data
Agent client message %lu not handled
No agent endpoint registered to receive message: %@
Reestasblishing recording endpoint.
Reestasblishing television endpoint.
Reestasblishing agent endpoint.
MediaRemote reply error: %s
Encountered unknown protobuf key (%@) while converting to a dictionary; skipping.
Unknown MRGameControllerEventType: %d
Attempting to Connect to television %@ but we are already in connection state %d. Returning...
Connecting to television %@...
Failed to initialize IO streams for TV net service: %{public}@
Error loading device info for TV %@. %@{public}
Error opening security session for TV %@. %{public}@
Failed to register custom origin for TV. %@
Received Register HID Device result with error %{public}@ and identifier: %@
Error registering HID device. %{public}@
Error fetching text editing session. %{public}@
Received Register Game Controller response with controllerID: %llu
Error registering Game Controller device. %{public}@
Cannot send Game Controller event without a type
Connection error while sending voice input data. %{public}@
Connection error while sending wake message. %{public}@
Connection error while sending custom data message. %{public}@
Unknown message attempting to be handled
Television server disconnected: %@
Registering custom origin ID %u "%@"...
Successfully registered custom origin: %@
Failed to register custom origin.
Received device info: %{public}@
Error fetching device info
Error fetching device info. %{public}@
Session mismatch for data exchange callback
Error with pairing session exchange. %@ %{public}@
Opening cryptography session %{public}@...
Error while opening security session: %{public}@
Successfully opened security session
Failed to unregister custom origin.
Error sending text input message. %{public}@
Calling Client Registered Connection State Callback: %u
Calling Client Registered Game Controller Input Mode Callback: %u
Calling Client Registered Game Controller Properties Callback
Calling Client Registered Recording State Callback: %u
Calling Client Registered Text Input Callback: %u
Calling Client Registered Pairing Callback
Calling Client Registered Name Callback
Calling Client Registered pairing allowed Callback
Calling Client Registered hilite mode Callback
Calling Client Registered custom data Callback
Received command %d %@
Received command result with send error %d with results: %{public}@
Error sending remote command to device. %{public}@
Processing %lld bytes of crypto pairing data
Failed to handle crypto pairing data. %@
Handling pairing failure with OSStatus = %d
ERROR: Received crypto pairing message without an active pairing session
Unknown callback event for keyboard message: %{public}@
Got elapsed time change.
Registered for elapsed time changes.
Unregistered for elapsed time changes.
Got playback speed change.
Registered for playback speed changes.
Unregistered for playback speed changes.
Got repeat mode change.
Registered for repeat mode changes.
Unregistered for repeat mode changes
Got shuffle mode change.
Registered for shuffle mode changes.
Unregistered for shuffle mode changes
WARNING: Unable to serialize playback queue
WARNING: Unable to serialize playback queue context
WARNING: Unable to serialize content items
[CryptoPairingSession(CoreUtils)] Error initializing pairing session. %{public}@
[CryptoPairingSession(CoreUtils)] Failed to begin pairing exchange. %{public}@
[CryptoPairingSession(CoreUtils)] Failed to handle pairing exchange. %{public}@
[CryptoPairingSession(CoreUtils)] Error while encrypting data: %{public}@
[CryptoPairingSession(CoreUtils)] Error while decrypting data: %{public}@
[CryptoPairingSession(CoreUtils)] Error initializing pairing session during identity deletion. %{public}@
[CryptoPairingSession(CoreUtils)] Error deleting identity. %{public}@
[CryptoPairingSession(CoreUtils)] Requesting delegate to prompt for setup code with delay = %f
[CryptoPairingSession(CoreUtils)] Error initializing pairing session (OSStatus = %d)
[CryptoPairingSession(CoreUtils)] Failed to set setup code on pairing session (OSStatus = %d)
[CryptoPairingSession(CoreUtils)] Failed to resume pairing process after setting setup code. %{public}@
[CryptoPairingSession(CoreUtils)] Exchange complete. Proceeding to verify step.
[CryptoPairingSession(CoreUtils)] Failed to record successfully paired peer
[CryptoPairingSession(CoreUtils)] Error initializing verify session. %{public}@
[CryptoPairingSession(CoreUtils)] Failed to prepare data for verify exchange. %@
[CryptoPairingSession(CoreUtils)] Verify complete. Deriving encryption keys.
[CryptoPairingSession(CoreUtils)] Failed to derive input key (OSStatus = %d)
[CryptoPairingSession(CoreUtils)] Failed to derive output key (OSStatus = %d)
[CryptoPairingSession(CoreUtils)] Successfully derived encryption keys.
Duplicate record found for identifier %s dumping pairing: %@
Registered for now playing notifications
Unregistered for now playing notifications
Error code %d while registering custom origin
Error code %d while removing custom origin
Service client's connection was interrupted. Reregistering custom origins with the media remote service.
Got %{public}@ command for origin %{public}@.
Got origin %{public}@ change with origin: %{public}@.
Received Media Remote client notification %{public}@
Suppressing %{public}@ -- client process did not ask to receive these notifications.
Could not write %@. Pairing file will not be written. Remote pairing will not persist
[MRTransactionPacketizer] Packetizer received %lu new outgoing packets for a total of %lu unprocessed packets
[MRTransactionPacketizer] Packetizer has %lu bytes avaialable
[MRTransactionPacketizer] Packetizer packet of length %lu and writePosition %lu set writeLength to %lu
[MRTransactionPacketizer] Packetizer packet has been completely processed
[MRTransactionPacketizer] Packetizer packet has been partially processed
[MRTransactionPacketizer] Packetizer has %lu processed packets ready to send
[MRTransactionPacketizer] Packetizer received %lu new incoming packets
[MRTransactionPacketizer] Partial Packet with actual length %lu and identifier %@ encountered. Merging with new packet of length %lu
[MRTransactionPacketizer] Completed partial packet with identifier %@
[MRTransactionPacketizer] Partial packet with identifier %@ is still partial with actual length of %lu. Need %lu bytes to complete
[MRTransactionPacketizer] Completed packet
[MRTransactionPacketizer] Storing partial packet with actual length %lu identifier %@. Need %lu bytes to complete
[MRTransactionPacketizer] Packetizer sending %lu complete packets
[MRTransactionSource] Beginning Source %llu with origin %@
[MRTransactionSource] Source %llu received initial reply
[MRTransactionSource] Source %llu prcoessing message...
[MRTransactionSource] Source %llu sending %lu bytes
[MRTransactionSource] Source %llu adding end signal
[MRTransactionSource] Source %llu received reply
[MRTransactionSource] Source %llu could not extract reply
[MRTransactionSource] Source %llu could not extract connection
[MRTransactionSource] Source %llu received interrupted/invalid connection to query
[MRTransactionSource] Source %llu adding new source origin %@
[MRTransactionSource] Source %llu removing source origin %@
[MRTransactionDestination] Destination %llu replying
[MRTransactionDestination] Destination %llu could not extract reply
[MRTransactionDestination] Destination %llu could not extract connection
[MRTransactionDestination] Destination %llu recieved %lu bytes from origin: %@ and extracted %lu packets
[MRTransactionDestination] Destination %llu received interrupted/invalid connection
[MRTransaction] New Transaction: %llu for origin %@
[MRTransaction] Transaction %llu sending %lu bytes from origin %@
[MRTransaction] Transaction %llu received response
[MRTransaction] Transaction %llu attempted to send empty bytes from origin %@
[MRTransaction] Transaction %llu received %lu bytes and extracted %lu packets
[MRTransaction] Transaction %llu received end signal received
[MRTransaction] Transaction %llu received interrupted/invalid connection
[MRTransaction] Transaction %llu begin querying...
[MRTransaction] Transaction %llu querying for %lu bytes
[MRTransaction] Transaction %llu could not create reply to qeury
[MRTransaction] Transaction %llu could not extract connection to query
[MRTransaction] Transaction %llu received interrupted/invalid connection to query
mediaremoted launched, restoring state.
AVSystemController server connection died.
[GameControllerDaemonProxy] invalidated connection to com.apple.GameController.gamecontrollerd
[GameControllerDaemonProxy] interrupted connection to com.apple.GameController.gamecontrollerd
[GameControllerDaemonProxy] Remote Proxy Error Handler: %@
[GameControllerDaemonProxy] Could not find GameController profile with profileType: %d
[GameControllerDaemonProxy] Premptive Delayed event
[GameControllerDaemonProxy] Delayed event initiated
[GameControllerDaemonProxy] Sending delayed event
[EmulatedGameController] Cannot create GameControllerDaemonProxy
[EmulatedGameController] Cannot create emulated controller
[EmulatedGameController] Digitizer Event unsupport in Game Controller Profile: %d
[EmulatedGameController] GameControllerEvent does not have a valid type
[TelevisionConnection] Dealloc
[TelevisionConnection] Trying to send unencrypted message that requires encryptions. Killing message
[TelevisionConnection] Received raw data of length: %lld
[TelevisionConnection] %@ Error: %@
[TelevisionConnection] Stream ended. Disconnecting...
[TelevisionConnection] Crypto Error. Disconnecting...
[TelevisionConnection] Unknown message received
[TelevisionConnection] Attempting respond to message after disconnect. Ignoring.
[TelevisionConnection] Wrote %ld bytes to socket
[TelevisionConnection] Successfully set _kCFStreamSocketSetNoDelay = %@
[TelevisionConnection] Failed to set _kCFStreamSocketSetNoDelay property.
[TelevisionConnection] Failed to set socket QOS (errno = %d)
[TelevisionConnection] Successfully set socket QOS to %d.
[TelevisionConnection] Failed to set QOS properties on stream %@. No native socket was retrievable.
Configuring Television NetServiceBrowser with includesPeerToPeer = %@
Beginning network service search for %@...
Stopping network service search.
Found service %@
Removing service %@
Resolved service %@
Setting active origin: %@
[TelevisionMessageLogger] %@ : %@
