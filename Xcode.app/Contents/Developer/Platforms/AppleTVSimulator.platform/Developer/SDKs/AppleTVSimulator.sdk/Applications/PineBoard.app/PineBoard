locationd
#T:[%@%p] #Error #%@ : Can't handle user notification from source: %@ [%@ -- %@] 
Main:
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
notificationFilter
T@?,C,N,V_notificationFilter
titleLabel
T@"UILabel",R,N,V_titleLabel
bodyLabel
T@"UILabel",R,N,V_bodyLabel
footerLabel
T@"UILabel",R,N,V_footerLabel
primaryButton
T@"UIButton",R,N,V_primaryButton
secondaryButton
T@"UIButton",R,N,V_secondaryButton
footerButton
T@"UIButton",R,N,V_footerButton
imageView
T@"UIImageView",R,N,V_imageView
combinedGuide
T@"UILayoutGuide",R,N,V_combinedGuide
textAndButtonsGuide
T@"UILayoutGuide",R,N,V_textAndButtonsGuide
imageGuide
T@"UILayoutGuide",R,N,V_imageGuide
buttonConstraints
T@"NSArray",R,C,N,V_buttonConstraints
titleText
T@"NSString",C,N,V_titleText
bodyText
T@"NSString",C,N,V_bodyText
footerText
T@"NSString",C,N,V_footerText
image
T@"UIImage",&,N,V_image
v8@?0
remoteConnection
T@"PBSystemServiceConnection",R,N,V_remoteConnection
FocusedProcessBinding
focusedProcess
PowerManagerSleepBinding
deviceAsleep
v16@?0@"NSNotification"8
ATVHIDSystemClientNotification_StartBSR
com.apple.sysdiagnose.sysdiagnoseStarted
com.apple.sysdiagnose.sysdiagnoseStopped
StackShotTakenTitle
#T:[%@%p] #Error #%@ : Nested sysdiagnose invocations ignored. 
RunningSysdiagnoseTitle
#T:[%@%p] #Error #%@ : Mismatched sysdiagnose invocations ignored. 
v24@?0@"UIPress"8^B16
ATVHIDSystemClientNotification_SendLogs
HOME
SELECT
PLAYPAUSE
VOLUMEUP
VOLUMEDOWN
%s_BUTTON_%s  ts: %llu  now: %llu  delayed: %lld ticks (%0.4f ms)
DOWN:
UP:  
; deltas since last event: ts: %lld (%0.4f ms)  now: %lld (%0.4f ms)
; deltas since down: ts: %lld (%0.4f ms)  now: %lld (%0.4f ms)
#T:[%@%p] #Notice #%@ : %@%@%@ 
DisplayModeBinding
v16@?0@"PBApplication"8
currentMode
Display Change
resetIdleTimerAndUndim
IdleTimeOutBinding
v24@?0@"FBScene"8^B16
com.apple.PineBoardServices.SystemService.HiliteModeActive
#T:[%@%p] #Error #%@ : Failed to register global Hilite mode state notification [%x] 
BluetoothRemoteProximityDetection
NoNetworkAlertTitle
NoNetworkAlertSubtitle
v12@?0B8
#T:[%@%p] #Notice #%@ : Sleep timeout changed by %@ 
#T:[%@%p] #Notice #%@ : Sleep requested by %@ for %lu 
#T:[%@%p] #Notice #%@ : Odd, device is already asleep. Ignoring request. 
#T:[%@%p] #Notice #%@ : Wake requested by %@ for %lu 
#T:[%@%p] #Notice #%@ : Relaunch backboardd requested by %@ 
backboardd
#T:[%@%p] #Notice #%@ : Relaunch requested by %@ 
#T:[%@%p] #Notice #%@ : Reboot requested by %@ 
#T:[%@%p] #Notice #%@ : Detected user presence. Invalidating idle timer 
UserPresenceDetected
#T:[%@%p] #Notice #%@ : Detected user presence but SS is already active. 
#T:[%@%p] #Notice #%@ : Activate screen saver requested by %@ 
#T:[%@%p] #Notice #%@ : Deactivate screen saver requested by %@ 
#T:[%@%p] #Notice #%@ : Menu button event requested by %@ 
#T:[%@%p] #Notice #%@ : Event data sent from %@ 
#T:[%@%p] #Notice #%@ : Effective user interface style requested by %@ 
com.apple.UIKit
#T:[%@%p] #Notice #%@ : Effective user interface style changed to %ld by %@ 
Activate app if playing music after idle time:
remote presence detection
@"TVSUserActivityTrigger"8@?0
hilite mode
screen saver
sleep
idle-type background tasks
PBS: Deactivate Screen Saver
com.apple.PineBoardServices.SystemService.PresenceDetectionActive
B24@?0@"FBScene"8^B16
v16@?0q8
#T:[%@%p] #Error #%@ :  ** %s ** unhandled action -> %@ 
-[PBApplication sceneManager:scene:didReceiveActions:]
statusBarStyle
Tq,R,N
statusBarHidden
TB,R,N
statusBarForegroundTransparent
TB,R,N,GisStatusBarForegroundTransparent
statusBarContextID
TI,R,N
defaultStatusBarStyle
defaultStatusBarHidden
defaultPNGName
T@"NSString",R,C,N
defaultPNGExpirationTime
Td,R,N
compatibilityMode
deviceOrientationEventsEnabled
interfaceOrientationChangesDisabled
interfaceOrientation
supportedInterfaceOrientations
TQ,R,N
idleTimerDisabled
proximityDetectionModes
controlCenterRevealMode
notificationCenterRevealMode
primaryWindowOverlayInsets
T{UIEdgeInsets=dddd},R,N
backgroundStyle
idleModeVisualEffectsEnabled
whitePointAdaptivityStyle
bluetoothRemoteKeepAliveTimer
T@"NSTimer",&,N,V_bluetoothRemoteKeepAliveTimer
remotePresenceDetectionTrigger
T@"TVSUserActivityTrigger",&,N,V_remotePresenceDetectionTrigger
hiliteModeTrigger
T@"TVSUserActivityTrigger",&,N,V_hiliteModeTrigger
screenSaverTrigger
T@"TVSUserActivityTrigger",&,N,V_screenSaverTrigger
sleepTrigger
T@"TVSUserActivityTrigger",&,N,V_sleepTrigger
bluetoothRemoteSleepTrigger
T@"TVSUserActivityTrigger",&,N,V_bluetoothRemoteSleepTrigger
idleTypeBackgroundTasksTrigger
T@"TVSUserActivityTrigger",&,N,V_idleTypeBackgroundTasksTrigger
crdAppTrigger
T@"TVSUserActivityTrigger",&,N,V_crdAppTrigger
appActivateInfoByBundleIdentifier
T@"NSMutableDictionary",&,N,V_appActivateInfoByBundleIdentifier
suppressWakeForHIDEventsTimer
T@"NSTimer",&,N,V_suppressWakeForHIDEventsTimer
airPlayActive
TB,N,V_airPlayActive
isScreenSaverIdle
T@"NSString",C,N,V_bundleIdentifier
openURL
T@"NSURL",C,N,V_openURL
trigger
T@"TVSUserActivityTrigger",&,N,V_trigger
bundleIdentifier
Dismissed
Dismissing
Presented
Presenting
Activate
Dismiss
Success
Failure
UserAction
CompletionHandler
PBScreenSaverManager
@"NSString"40@?0@"TVSStateMachine"8@"NSString"16@24@"NSDictionary"32
#T:[%@%p] #Error #%@ : Failed to register global idle state notification [%x] 
#T:[%@%p] #Error #%@ : Failed to set global idle state to %d [%x] 
#T:[%@%p] #Error #%@ : Failed to post global idle state notification [%x] 
com.apple.TVIdleScreen
com.apple.TVScreenSaver
TVScreenSaverServiceViewControllerName
com.apple.TVScreenSaver.preferences.notify
screenSaverActivationDelayInMinutes
Td,N,V_screenSaverActivationDelayInMinutes
screenSaverPrefs
T@"TVSPreferences",R,N,V_screenSaverPrefs
stateMachine
T@"TVSStateMachine",R,N,V_stateMachine
pendingActivationRequests
T@"NSMutableArray",R,N,V_pendingActivationRequests
needsDismissal
TB,N,V_needsDismissal
screenSaverViewController
T@"PBRemoteViewController",&,N,V_screenSaverViewController
screenSaverIsActive
displayState
TQ,R,N,V_displayState
holdOffForMusicEnabled
TB,N,V_holdOffForMusicEnabled
com.apple.appletv.backgroundstate
uninitialized
text field
submitting
canceled
menu pressed
view appeared
dialog button pressed
Don't touch Jim
v56@?0@"TVSStateMachine"8@"NSString"16@"NSString"24@"NSString"32@40@"NSDictionary"48
ButtonContinue
notification
T@"TVSCFUserNotification",&,N
delegate
T@"<PBUserNotificationViewControllerDelegate>",W,N
childViewController
T@"UIViewController",&,N,V_childViewController
menuRecognizer
T@"UITapGestureRecognizer",&,N,V_menuRecognizer
T@"TVSStateMachine",&,N,V_stateMachine
currentTextField
Tq,N,V_currentTextField
userValues
T@"NSMutableArray",&,N,V_userValues
T@"TVSCFUserNotification",&,N,V_notification
T@"<PBUserNotificationViewControllerDelegate>",W,N,V_delegate
AppSoftwareUpdateOperation
PBAppLaunchLog
init
purge
idle
autocheck
manual-check
download-confirm
clear-asset-download-space
download
apply-confirm
apply-recheck
apply-recheck-cleanup
clear-brain-download-space
download-brain
clear-verify-space
verify-extract
clear-prepare-space
apply
reboot
cancel
manual-check-fired
restore-request
confirm-download
cancel-update
playback-started
start-apply
start-apply-confirmed
purge-ok
purge-fail
auto-check-fired
no-updates
yes-updates-bad-time
yes-updates-good-time
check-error
download-error
download-ok
start-auto-apply
no-space
yes-space
verify-fail
verify-ok
apply-fail
apply-ok
cancel-ok
cancel-fail
timeout
apply-redownload
apply-proceed
OSSoftwareUpdate
com.apple.MobileAsset.SoftwareUpdate
(%@ in %K)
SupportedDevices
Asset query for model:%@ predicate:%@
Failed to get model ID, no updates will be offered.
Store bag valid - noting app restarted update stage
Store bag not valid - listening for store bag load notification.
Still initializing. Deferred action %d.
Failed to configure for action %@
Not starting deferred action %d
Unrecognized action during start:%@
Ignoring auto check during state %@.
Ignoring manual check during state %@.
Ignoring restore during state %@.
Ignoring cancel during state %@.
Failed to clear prior assets.
Build
Asset unexpectedly local during download.
Cancel failed during recheck. Cannot proceed.
User requested reboot from slow update during verify.
User requested reboot from slow update during clear prepare space.
User requested reboot from slow update during apply.
Ignoring manual check during cancel.
Cancel failed. Attempting to clear assets.
Updates
file found in place of folder at %@ - removing
Removing old update files...
Unable to remove old update files [%@]
Starting prior asset purge...
Found in-flight asset - canceling %@
Canceled
Cancel failed: %@ for asset: %@
Attempting to purge installed asset %@
Purge failed: %@ for asset: %@
Query for purgeable assets failed: %@
Prior asset purge complete.
v24@?0@"NSArray"8@"NSError"16
com.apple.MobileAsset.MobileSoftwareUpdate.UpdateBrain
Brain Server URL: %@
Asset Server URL: %@
Personalization Server URL: %@
AppleConnect credentials entered: %@
Reporting update available
Reporting no updates - bad time to update
v24@?0@"ASAsset"8@"NSError"16
Failed to recheck asset version - trying to apply old version [%@].
OSVersion
Rechecking version (%@/%@ vs %@/%@)
Forcing a recheck via default.
Need to redownload asset.
Asset is still current.
Determining current asset.
No model info, cannot query for assets.
Asset query returned %lu candidate assets (restore:%d error:%@).
ReleaseType
PrerequisiteOSVersion
PrerequisiteBuild
Checking update from prereq: %@/%@ to: %@/%@/%@
Rejecting asset: different release types to %@/%@ (%@ installed != %@).
Rejecting asset: prior version: %@/%@ offered / %@/%@ installed.
Rejecting asset: same version: %@/%@ offered / %@/%@ installed.
Accepting asset: no prereqs: %@/%@ offered / %@/%@ installed.
Rejecting asset: prereqs during Restore.
Rejecting asset: prereqs not met for update to %@/%@ (%@/%@ installed != %@/%@ required).
Accepting asset: prereqs met for update to %@/%@ (%@/%@ installed == %@/%@ required).
B32@?0@8Q16^B24
%d candidate assets remain.
q24@?0@8@16
Candidate assets in order:
Asset to: %@/%@/%@ from: %@/%@
Selected Asset: %@
OK to download check for recheck
OK to download check for auto-apply: asleep:%d idle:%d
OK to download check for non-auto-apply: idle:%d held-off:%d
Asset download space check #%ld: OK:%d required:%llu unused:%llu error:%@
Unable to clear download space after %ld attempts (req:%llu avail:%llu).
Unexpected lack of space for asset download. Requesting %llu - %llu = %llu bytes ...
Asset download purge request completed. error:%@ purged:%llu
Purge completed but no longer checking asset download space.
v24@?0q8@"NSError"16
Cache purge ID: %@
asset download
Conflicting asset download space data [err:%@ hasSpace:%d required:%llu unused:%llu].
Starting asset download in state %ld
v24@?0@"NSDictionary"8@"NSError"16
Brain download space check: OK:%d required:%lld unused:%llu error:%@
Unexpected negative brain size without corresponding error. Failing update.
brain download
Insufficient brain download space.
Unable to determine brain size [%@]. Failing update.
Asset verify/unarchive space check: OK:%d required:%llu unused:%llu error:%@
Unexpected lack of space for asset verify/unarchive. Requesting %llu - %llu = %llu bytes ...
Asset unarchive/verify purge request error:%@ purged:%llu
Asset verify/unarchive space recheck: OK:%d required:%llu unused:%llu error:%@
Purge completed but no longer checking asset unarchive/verify space.
asset verify/unarchive
Conflicting asset unarchive/verify space data [err:%@ hasSpace:%d required:%llu unused:%llu].
Resuming download, starting verify/unarchive.
Error during resume: %@
Download resumed OK.
v16@?0@"NSError"8
Failed to get installation size from MSU [%@].
Prepare/Apply space check: required:%llu unused:%llu (installation:%llu padding:%llu).
Insufficient Prepare/Apply space. Requesting %llu - %llu = %llu bytes...
Prepare/Apply purge request error:%@ purged:%llu
Sufficient prepare/apply space. Continuing...
Insufficient prepare/apply space. unused:%llu required:%llu. Failing update.
Preparing update at %@
Prepare update failed because the payload was not found: %@
MA download progress: state:%@ error:%@
Unexpected operation %@
Error during progress with state %@: %@
Progress canceled (our state:%@)
NULL MobileAsset state during error handling (our state:%@ dl:%d paused:%d ver/ext:%d).
Download paused, awaiting resume (%d).
Skipping redundant download paused notification.
%@: %2.2f TR:%5.1f
Limiting verify/extract log output
Brain download canceled with error %@ (our state:%@)
Brain: Error during %@: %@
Brain %@ progress
Brain %@ progress percent:%@
Brain progress stalled unexpectedly [%@] - canceling.
Unexpected brain operation %@
Canceling update prior to download.
Asset unexpectedly still present during cancel - purging...
Purge result: %@
Canceling download asset in state: %ld
Canceling apply asset in state: %ld
Asset is local - attempting to purge...
Attempting to cancel download...
Cleanup result: %@
Failed to clean up asset: %@
TIMEOUT: Canceling download asset in state: %ld
TIMEOUT: Asset is local - attempting to purge...
TIMEOUT: Asset purged.
TIMEOUT: Failed to purge asset: %@
TIMEOUT: Attempting to cancel download...
TIMEOUT: Asset download canceled.
TIMEOUT: Failed to cancel asset download: %@
TIMEOUT: Clearing obliterate flag.
TIMEOUT: Attempting to reboot in 2 sec...
Starting slow update timer with timeout %.2f.
Stopping slow update timer.
Slow update timer fired.
Store bag loaded - noting app restarted update stage.
auto-apply check
manual check
background check
restore
Sufficient %@ space.
state
TQ,N,V_state
machine
T@"TVSStateMachine",&,N,V_machine
action
TQ,N,V_action
deferredAction
TQ,N,V_deferredAction
assetQuery
T@"ASAssetQuery",&,N,V_assetQuery
asset
T@"ASAsset",&,N,V_asset
slowUpdateTimer
T@"NSTimer",&,N,V_slowUpdateTimer
needToCancelMSUOperation
TB,N,V_needToCancelMSUOperation
assetIsLarge
TB,N,V_assetIsLarge
isApplyingRecheckedUpdate
TB,N,V_isApplyingRecheckedUpdate
sentDownloadFinishedCallback
TB,N,V_sentDownloadFinishedCallback
userConfirmedApplyAtCheckTime
TB,N,V_userConfirmedApplyAtCheckTime
cacheDeletePurgeID
T@"TVSCacheDeletePurgeID",&,N,V_cacheDeletePurgeID
T@"<PBOSSoftwareUpdateProcessDelegate>",W,N,V_delegate
/System/Library/PCPlugins
pcBundle
#T:[%@%p] #Notice #%@ : Considering %@. 
#T:[%@%p] #Error #%@ : Failed to load plugin at %@: %@ 
#T:[%@%p] #Notice #%@ : Loaded Plugin %@ (and called +pbUIPluginDidLoad) %@. 
#T:[%@%p] #Notice #%@ : Failed to create an instance of Plugin for URL %@. 
#T:[%@%p] #Notice #%@ : Loaded Plugin (no action taken) %@. 
presentedViewController
T@"UIViewController",&,N,V_presentedViewController
PBSnapshotVariantAppSwitcher
T@"NSString",R,C,N,V_bundleIdentifier
preferLaunchImage
TB,N,V_preferLaunchImage
variant
T@"NSString",C,N,V_variant
CVVPlaceholder
ButtonSubmit
ButtonOK
v16@?0@"UIAlertAction"8
completion
T@?,C,N,V_completion
type
Tq,R,N,V_type
item
T@"PBAppSwitcherItem",R,C,N,V_item
fromIndexPath
T@"NSIndexPath",R,C,N,V_fromIndexPath
toIndexPath
T@"NSIndexPath",R,C,N,V_toIndexPath
AppTransitionStateMachine
PBAppTransitionOverlayWindow
InitialState
BeginTransitionState
BeginAnimationCompleteWaitingSceneUpdateState
SceneUpdateCompleteWaitingBeginAnimationState
FinalTransitionState
ForegroundUpdateState
CompletedState
BeginEvent
SceneReadyEvent
ForegroundUpdateCompleteEvent
TransactionDidFailEvent
BeginAnimationCompleteEvent
[PBAppTransitionViewController -initWithNibName:bundle:] should not be used.
[PBAppTransitionViewController -initWithCoder:] should not be used.
com.apple.purplebuddy
/private/var/mobile/
v16@?0@"PBSnapshotLoadRequest"8
kioskIdentifier
T@"NSString",R,C,N,V_kioskIdentifier
shouldUseLaunchImage
TB,R,N,V_shouldUseLaunchImage
animationDuration
Td,R,N,V_animationDuration
transitionType
Tq,R,N,V_transitionType
visibleViewAfterInitialAnimation
T@"UIView",&,N,V_visibleViewAfterInitialAnimation
overlayWindows
T@"NSMutableArray",&,N,V_overlayWindows
overlayHostContainer
T@"UIView",&,N,V_overlayHostContainer
transitionTransaction
T@"PBAppTransitionTransaction",R,N,V_transitionTransaction
PBServiceProviderRegistry
%@{identifier : %@; providerType : %@}
identifier
T@"NSString",C,V_identifier
providerType
T@"NSString",C,V_providerType
v16@?0@"NSDictionary"8
#T:[%@%p] #Warning #%@ : PBServiceProviderRegistry: attempt to register endpoint with nil identifier denied (providerType: %@) 
#T:[%@%p] #Notice #%@ : PBServiceProviderRegistry: registering endpoint %@ for {%@ : %@} 
--> registerServiceProviderEndpoint: %d response blocks
--> registerEndpoint: calling blocks with endpoint %@
#T:[%@%p] #Warning #%@ : PBServiceProviderRegistry: attempt to clear endpoint with nil identifier denied 
#T:[%@%p] #Notice #%@ : PBServiceProviderRegistry: clearing endpoints {%@} 
--> clearEndpointsForIdentifier: calling blocks with identifier %@
#T:[%@%p] #Notice #%@ : PBServiceProviderRegistry: getting endpoint for {%@ : %@} 
--> endpointForProviderType: Enter %@
--> endpointForProviderType: Respond to %@ with endpoint
#T:[%@%p] #Notice #%@ : PBServiceProviderRegistry: got endpoint %@ for {%@ : %@} 
--> endpointForProviderType: Activating app %@
%@://%@
--> endpointForProviderType: App activation succeeded %@
--> endpointForProviderType: App activation ERROR %@
PBDialogOptionPresentWhileScreenSaverActiveKey
PBDialogOptionPresentImmediatelyKey
AirPlay
Screen-Saver
PBWindowManager
FocusedApp
TVRestrictionPINServiceViewController
com.apple.TVRestrictionPINService
v16@?0@"<NSSecureCoding>"8
v24@?0@"_UIRemoteViewController"8@"NSError"16
v24@?0@"NSString"8^B16
B32@?0@"PBViewControllerPresentationRequest"8Q16^B24
Switcher - New Transition
AppLaunch
New Transition
TVCRDServiceLoadingViewController
com.apple.TVCRDService
TVCRDServiceInstructionsViewController
playbackLaunchShroudWindow
screenSaverWindow
airPlayWindow
v16@?0@"PBNavigationController"8
nowPlayingWindow
restrictionPINWindow
radioAdWindow
blackScreenRecoveryWindow
siriWindow
dialogWindow
bulletinWindow
appSwitcherWindow
appTransitionWindow
wallpaperWindow
crdLoadingWindow
crdInstructionsWindow
v16@?0@"FBSDisplayLayoutElement"8
criticalAlertWindow
T@"PBWindow",&,N,V_criticalAlertWindow
softwareUpdateWindow
T@"PBOSUpdateWindow",&,N,V_softwareUpdateWindow
T@"PBWindow",&,N,V_airPlayWindow
T@"PBWindow",&,N,V_bulletinWindow
T@"PBWindow",&,N,V_playbackLaunchShroudWindow
T@"PBWindow",&,N,V_dialogWindow
T@"PBWindow",&,N,V_siriWindow
T@"PBWindow",&,N,V_nowPlayingWindow
T@"PBWindow",&,N,V_restrictionPINWindow
T@"PBWindow",&,N,V_screenSaverWindow
T@"PBWindow",&,N,V_appSwitcherWindow
T@"PBWindow",&,N,V_appTransitionWindow
T@"PBWindow",&,N,V_wallpaperWindow
T@"PBWindow",&,N,V_radioAdWindow
T@"PBWindow",&,N,V_blackScreenRecoveryWindow
T@"PBWindow",&,N,V_crdLoadingWindow
T@"PBWindow",&,N,V_crdInstructionsWindow
presentedBulletinViewController
T@"PBRemoteBulletinViewController",&,N,V_presentedBulletinViewController
dialogHiddenClients
T@"NSMutableSet",R,C,N,V_dialogHiddenClients
screenSaverTransitionViewController
T@"PBScreenSaverTransitionViewController",R,W,N,V_screenSaverTransitionViewController
bulletinDismissalTimer
T@"NSObject<OS_dispatch_source>",R,N,V_bulletinDismissalTimer
pendingDialogRequests
T@"NSMutableArray",R,N,V_pendingDialogRequests
pendingBulletinRequests
T@"NSMutableArray",R,N,V_pendingBulletinRequests
pendingTransitionTransactions
T@"NSMutableArray",R,N,V_pendingTransitionTransactions
airPlayAssertion
T@"FBUIApplicationSceneDeactivationAssertion",&,N,V_airPlayAssertion
appSwitcherAssertion
T@"FBUIApplicationSceneDeactivationAssertion",&,N,V_appSwitcherAssertion
dialogAssertion
T@"FBUIApplicationSceneDeactivationAssertion",&,N,V_dialogAssertion
screenSaverAssertion
T@"FBUIApplicationSceneDeactivationAssertion",&,N,V_screenSaverAssertion
siriAssertion
T@"FBUIApplicationSceneDeactivationAssertion",&,N,V_siriAssertion
siriFullscreenAssertion
T@"FBUIApplicationSceneDeactivationAssertion",&,N,V_siriFullscreenAssertion
focusedAppDisplayLayoutElement
T@"FBDisplayLayoutElement",&,N,V_focusedAppDisplayLayoutElement
appTransitionHelper
T@"_PBWindowManagerAppTransitionHelper",&,N,V_appTransitionHelper
crdInstructionWindowIdentifier
TQ,N,V_crdInstructionWindowIdentifier
crdInstructionWindowGroup
T@"NSObject<OS_dispatch_group>",&,N,V_crdInstructionWindowGroup
useSnapshotForSiri
TB,R,N,V_useSnapshotForSiri
siriViewController
T@"UIViewController",R,N,V_siriViewController
siriSnapshotView
T@"UIView",R,N,V_siriSnapshotView
presentingDialogWindow
presentingNowPlaying
presentingPINRequest
presentingSiriSession
siriIsFullscreen
TB,N,V_siriIsFullscreen
presentingAppSwitcher
presentingAppTransition
presentingCRDLoadingWindow
presentingCRDInstructionsWindow
shouldAnimateCRDInstructionsHUD
TB,N,V_shouldAnimateCRDInstructionsHUD
viewController
T@"UIViewController",R,N,V_viewController
options
T@"NSDictionary",C,N,V_options
timeoutInSeconds
Td,N,V_timeoutInSeconds
selectedRouteVolume.volume
SpeakerVolumeGenericTitle
bulletinService
T@"PBBulletinService",&,N,V_bulletinService
volumeBulletin
T@"PBSBulletin",&,N,V_volumeBulletin
routingController
T@"TVSAudioRoutingController",&,N,V_routingController
swipeUpProgress
Td,N,V_swipeUpProgress
swipeUpItem
T@"NSIndexPath",C,N,V_swipeUpItem
com.apple.TVWhatsNew
com.apple.TVWhatsNew.needsBecomeActive
v12@?0i8
#T:[%@%p] #Notice #%@ : WNLog: Start monitoring What's New 
#T:[%@%p] #Notice #%@ : WNLog: Dismissing Whats New [Home|Menu] 
com.apple.TVWhatsNew.dismissTVWhatsNewApp
#T:[%@%p] #Notice #%@ : WNLog: Will NOT update What's New schedule. Service has not started or time interval is the same 
#T:[%@%p] #Notice #%@ : WNLog: scheduling What's New with interval: %f. 
#T:[%@%p] #Notice #%@ : WNLog: What's New cannot be shown. User is not on home screen. 
#T:[%@%p] #Notice #%@ : WNLog: What's New is already active when timer fired. 
#T:[%@%p] #Notice #%@ : WNLog: What's New needs to be active. 
whatsNewApplicationIdentifier
T@"NSString",R,N,V_whatsNewApplicationIdentifier
checkTimeInterval
Td,N
screenWidth
Td,R,N,V_screenWidth
screenHeight
Td,R,N,V_screenHeight
%@-%@
PBSiriLog
#T:[%@%p] #Notice #%@ : Semantic Context Screen Action Items: %@ 
#T:[%@%p] #Notice #%@ : Focusable Screen Action Items: %@ 
v32@?0@"PBSiriScreenActionItem"8Q16^B24
#T:[%@%p] #Notice #%@ : Returning Screen Action Items: %@ 
#T:[%@%p] #Notice #%@ : Semantic Context AXElements: %@ 
#T:[%@%p] #Notice #%@ : Focusable AXElements: %@ 
accessibilityElement
T@"AXElement",&,N,V_accessibilityElement
semanticContext
T@"NSDictionary",&,N,V_semanticContext
commandScreenActionItems
T@"NSArray",C,N,V_commandScreenActionItems
currentScreenActionItems
T@"NSArray",R,C,N
Identifier: %@, Generated Semantic Context: %@, AX Info: %@
%gx%g
%@/%@/%@/%@/%@/%@
T@"NSString",C,N,V_identifier
com.apple.appletv.hw.booted
com.apple.appletv.hw.memorypressure.1
com.apple.appletv.hw.thermal
com.apple.appletv.video.resolution
com.apple.appletv.remote.updates.attempted
com.apple.appletv.remote.updates.succeeded
com.apple.appletv.remote.updates.failed
com.apple.appletv.remote.updates.cancelled
com.apple.appletv.remote.batteryRecharges
com.apple.appletv.remote.buttonPresses
com.apple.appletv.remote.IRButtonsProgrammed
com.apple.appletv.remote.inertialSensorTime
com.apple.appletv.remote.audioStreamTime
com.apple.appletv.remote.pairedCount
com.apple.appletv.remote.genericCount
com.apple.appletv.remote.remoteCount
com.apple.appletv.remote.keyboardCount
com.apple.appletv.remote.audioCount
com.apple.appletv.remote.controllerCount
com.apple.appletv.audio.format
AVLogs
MediaserverLogs
PlaybackLogs
WiFiLogs
ThermalLogs
BluetoothLogs
ConfigLogs
PBDataReporting
PBDataReportingEDIDLogURL
userxp-edid-url
atvMetricsTopics
atv_av_connectivity
metrics
metricsUrl
atvMetricsQuantizeSeconds
atvMetricsQuantizeButtonPresses
com.apple.PineBoard.NANDReporting
DiagnosticsAllowed
com.apple.iqagent
#T:[%@%p] #Error #%@ : Failed to enable diagnostic reporting. 
#T:[%@%p] #Notice #%@ : Scheduling periodic trigger task to start in %f secs, repeat in %f secs. 
#T:[%@%p] #Notice #%@ : Periodic data reporting triggered. 
#T:[%@%p] #Notice #%@ : Apple TV log push requested. 
@distinctUnionOfArrays.self
mediaserverd_log
#T:[%@%p] #Notice #%@ : Removing cache file:%@ 
#T:[%@%p] #Error #%@ : Failed to clear copied mediaserverd logs [%@] 
Library/Logs/CrashReporter
mediaserverd_log%ld.txt
#T:[%@%p] #Notice #%@ : Copying:%@ to:%@ 
#T:[%@%p] #Error #%@ : Failed to copy log for push: %@ [%@] 
#T:[%@%p] #Notice #%@ : Successfully removed:%@ 
#T:[%@%p] #Error #%@ : Failed to clear log after copy: %@ [%@] 
#T:[%@%p] #Error #%@ : Failed to copy mediaserverd logs for push: %@ [%@] 
playbacklog_
#T:[%@%p] #Notice #%@ : No playback logs to push. 
wifiDriver-
wifiManager-
wifi-
#T:[%@%p] #Error #%@ : Failed to clear copied wifi logs [%@] 
Library/Logs/CrashReporter/WiFi
#T:[%@%p] #Notice #%@ : Copying %@ to %@ 
#T:[%@%p] #Notice #%@ : WiFi logs unavailable: %@ 
Library/Logs/CrashReporter/WiFi/WiFiManager
com.apple.airplay.log
#T:[%@%p] #Error #%@ : Failed to clear copied AirPlay logs [%@] 
#T:[%@%p] #Notice #%@ : AirPlay logs unavailable: %@ 
/Library/Logs/CrashReporter
thermstats
#T:[%@%p] #Notice #%@ : No thermal logs to push. 
com.apple.MobileBluetooth.debug
com.apple.wirelessproxd.debug
DiagnosticMode
ShouldLog
Library/Logs/Bluetooth
#T:[%@%p] #Notice #%@ : Generating config logs... 
ConfigData.plist
ConfigurationInfo
EDIDData
CrashReporterKey
itmsID
mediaID
#T:[%@%p] #Error #%@ : Failed to generate additional logs 
#T:[%@%p] #Error #%@ : Log file missing during push: %@ 
#T:[%@%p] #Notice #%@ : No log files to push. 
DiagnosticLogPushTitle
DiagnosticLogPushSingleMessage
DiagnosticLogPushMultipleMessage
v16@?0@"PBDataReportingService"8
EDID
CoreControl
%@/%@
subtopic
device
version
os-ver
%@=%@
%@?%@
#T:[%@%p] #Error #%@ : Figaro URL string invalid: %@ 
#T:[%@%p] #Error #%@ : Figaro Request URL invalid: %@ 
#T:[%@%p] #Error #%@ : FAILED: Figaro reporting request:%@ error: %@ 
v32@?0@"NSURLResponse"8@16@"NSError"24
seenEDIDs
T@"NSMutableSet",&,N,V_seenEDIDs
toReportEDIDData
T@"NSMutableDictionary",&,N,V_toReportEDIDData
lastSentEDIDTimestamp
T@"NSDate",&,N,V_lastSentEDIDTimestamp
keyTimingStarts
T@"NSMutableDictionary",&,N,V_keyTimingStarts
keyTimingTotals
T@"NSMutableDictionary",&,N,V_keyTimingTotals
NANDReportingThread
T@"NSThread",&,N,V_NANDReportingThread
PBFixedWallpaperPath
#T:[%@%p] #Error #%@ : Unable to save snapshot due to missing information: %@ 
#T:[%@%p] #Error #%@ : Unable to find context host manager for context: %@ 
#T:[%@%p] #Error #%@ : Invalid scale specified for saving a snapshot: %@ 
q24@?0@"NSNumber"8@"NSNumber"16
wallpaperQueue
T@"NSOperationQueue",R,N,V_wallpaperQueue
PBBulletinLog
#T:[%@%p] #Notice #%@ : windowManagerWillPresentBulletinViewController, no service! for viewController %@ 
#T:[%@%p] #Notice #%@ : applicationActivateBulletinViewController, no service! for viewController %@ 
#T:[%@%p] #Notice #%@ : applicationDismissBulletinViewController, no service! for viewController %@ 
#T:[%@%p] #Notice #%@ : applicationRetireBulletinViewController, no service! for viewController %@ 
#T:[%@%p] #Notice #%@ : applicationTerminateBulletinViewController, no service! for viewController %@ 
v20@?0B8@"NSError"12
#T:[%@%p] #Notice #%@ : bulletinService %@ handle dismissal missing bulletin for viewController %@ 
#T:[%@%p] #Notice #%@ : bulletinService %@ handle dismissal missing viewController %@ remoteViewController %@ 
viewControllersByBulletin
T@"NSMapTable",R,N,V_viewControllersByBulletin
pendingBulletinsByRequestID
T@"NSMutableDictionary",R,N,V_pendingBulletinsByRequestID
delegateProxy
T@"<PBSBulletinServiceDelegate>",&,N,V_delegateProxy
shouldOffsetItemsFollowingDestination
TB,R,N,V_shouldOffsetItemsFollowingDestination
computedAttributes
T@"NSDictionary",C,N,V_computedAttributes
focusableCellSize
T{CGSize=dd},R,N,V_focusableCellSize
originIndexPath
T@"NSIndexPath",R,C,N,V_originIndexPath
destinationIndexPath
T@"NSIndexPath",R,C,N,V_destinationIndexPath
title
T@"NSString",C,N,V_title
titleOpacity
Td,N,V_titleOpacity
JustForSuchAnOcclusionSceneIdentifier
PBWindow
%@ [%@]
No Name
WindowUpdate
occluding
TB,N,GisOccluding,V_occluding
displayLayoutElement
T@"FBDisplayLayoutElement",&,N,V_displayLayoutElement
shouldOcclude
TB,N,V_shouldOcclude
name
T@"NSString",R,C,N,V_name
PrimaryUsagePage
PrimaryUsage
#T:[%@%p] #Notice #%@ : Clearing HID event routers to prevent accidental input entering sleep. 
#T:[%@%p] #Notice #%@ : Sleeping the display (Feature:%@ Setting:%d). 
#T:[%@%p] #Notice #%@ : Clearing HID event routers to prevent accidental input entering wake. 
#T:[%@%p] #Notice #%@ : %@ 
#T:[%@%p] #Warning #%@ : Waking the display (Feature:%@ Setting:%d). 
#T:[%@%p] #Notice #%@ : Scheduling restore of normal HID event routers in %f sec. 
#T:[%@%p] #Notice #%@ : Restoring normal HID event routers. 
#T:[%@%p] #Notice #%@ : Scheduling installation of HID sleep-time event routers in %f sec. 
#T:[%@%p] #Notice #%@ : Installing sleep-time HID event routers. 
wallpaperViewController
T@"PBWallpaperViewController",&,N,V_wallpaperViewController
dismissLastViewControllerBlock
T@?,C,N,V_dismissLastViewControllerBlock
B32@?0@"PBAppSwitcherItem"8Q16^B24
v32@?0@"NSString"8Q16^B24
v32@?0@"LSApplicationProxy"8Q16^B24
v32@?0@"PBAppSwitcherItem"8Q16^B24
focusedProcessBundleID
T@"NSString",R,C,N,V_focusedProcessBundleID
itemsIncludingUpdates
T@"NSMutableArray",R,C,N,V_itemsIncludingUpdates
applicationIdentifierToAppState
T@"NSDictionary",C,N,V_applicationIdentifierToAppState
T@"<PBAppSwitcherManagerDelegate>",W,N,V_delegate
items
T@"NSArray",R,C,N,V_items
mainMenuItem
T@"PBAppSwitcherItem",R,N,V_mainMenuItem
focusedProcessItem
T@"PBAppSwitcherItem",R,N,V_focusedProcessItem
pendingUpdates
T@"NSArray",R,C,N,V_pendingUpdates
PBAppDepotAppStateDidChangeNotification
PBAppDepot
com.apple.PineBoard.PBAppDepot
com.apple.PineBoard.PBAppDepot.Preheat
PBAppManagementLog
#T:[%@%p] #Error #%@ : Exception occurred unarchiving application state at: %@, exception %@ 
com.apple.PineBoard.PBAppDepot.BBObserver
v24@?0@"LSBundleProxy"8^B16
com.apple.TVSettings
com.apple.TVPhotos
com.apple.TVHomeSharing
#T:[%@%p] #Error #%@ : Failed to persist application state at: %@ 
v16@?0@"NSArray"8
#T:[%@%p] #Error #%@ : Failed to create directory at URL: %@, with error = %@ 
AppState.plist
appState
T@"NSDictionary",R,C
internalAppState
T@"NSMutableDictionary",&,N,V_internalAppState
internalProvisionedAppIdentifiers
T@"NSArray",C,N,V_internalProvisionedAppIdentifiers
enforceProvisioningOnSystemAppsEnabled
TB,N,V_enforceProvisioningOnSystemAppsEnabled
bbObserver
T@"BBObserver",&,N,V_bbObserver
provisionedAppIdentifiers
T@"NSArray",R,C
clientPresentationCompletion
T@?,C,N,V_clientPresentationCompletion
  contentOffset: %f
  snapshotOffset: %f
contentOffset
Td,N,V_contentOffset
contentScale
Td,N,V_contentScale
cornerRadius
Td,N,V_cornerRadius
blurRadius
Td,N,V_blurRadius
blurRect
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_blurRect
shadowAlpha
Td,N,V_shadowAlpha
shadowBlurRadius
Td,N,V_shadowBlurRadius
textAlpha
Td,N,V_textAlpha
snapshotOffset
Td,N,V_snapshotOffset
headerHidden
TB,N,GisHeaderHidden,V_headerHidden
PBSystemServiceDidEstablishKioskConnectionNotification
com.apple.HeadBoard
com.apple.PBSystemService.XPCListener
com.apple.PineBoardServices
headBoardConnection
T@"PBSystemServiceConnection",W,N,V_headBoardConnection
idleScreenConnection
T@"PBSystemServiceConnection",W,N,V_idleScreenConnection
PBAppSwitcherRequester
PBAppTransitionRequester
[PBLiveSnapshotView -initWithFrame:] should not be used.
[PBLiveSnapshotView -initWithCoder:] should not be used.
sceneHostView
T@"UIView<FBSceneHostView>",R,W,N,V_sceneHostView
snapshotView
T@"UIView<FBSceneHostSnapshotView>",R,N,V_snapshotView
backgroundView
T@"UIView",R,N,V_backgroundView
bundleID
T@"NSString",R,C,N,V_bundleID
requester
T@"NSString",R,C,N,V_requester
scene
T@"FBScene",R,N,V_scene
hasBackground
TB,N,V_hasBackground
useSnapshot
TB,N,V_useSnapshot
#T:[%@%p] #Notice #%@ : Application semantic context: %@ 
#T:[%@%p] #Notice #%@ : Creating ACE object for screen action item semantic context: %@ 
AFContextManager
Unable to find class %s
/System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices
SAScreenActionList
/System/Library/PrivateFrameworks/SAObjects.framework/SAObjects
SAScreenActionInfo
sceneID
T@"NSString",C,N,V_sceneID
context
T@"XBSnapshotDataProviderContext",R,&,N
snapshot
T@"FBSceneSnapshot",R,N,V_snapshot
cachedImage
T@"UIImage",R,N,V_cachedImage
scaleFactor
Td,R,N,V_scaleFactor
T@"XBSnapshotDataProviderContext",R,&,N,V_context
launch
resume
quit
testName
displayIdentifier
Retrying launch of %@...
Killing %@ so that the launch test may begin
launchArguments
arguments
--suspended
PBUnavailableBundleListLoaderErrorDomain
PBAppProgrammingInfoKeyProvisionedAppIdentifiers
PBAppProgrammingInfoKeyDisabledAppIdentifiers
atv-headboard-url
contentIds
hideContentIds
merchant-mapping-url
#T:[%@%p] #Error #%@ : %s - Failed to load %@: %@ 
__59-[PBUnavailableBundleListLoader _loadMappingInfoWithError:]_block_invoke
__63-[PBUnavailableBundleListLoader _loadProgrammingInfoWithError:]_block_invoke
#T:[%@%p] #Notice #%@ : %@ missing from the URL bag. 
cancelled
TB,R,N,GisCancelled
wallpaperView
T@"UIView",&,N,V_wallpaperView
idleModeActive
TB,R,N,GisIdleModeActive,V_idleModeActive
AXMenuVoiceOverAction
AXMenuZoomAction
AXMenuClosedCaptionAction
AXMenuAudioDescriptionAction
AXMenuSwitchControlAction
AXMenuDisplayFilterInvertColorsAction
AXMenuDisplayFilterColorAdjustmentsAction
AXMenuDisplayFilterLightSensitivityAction
AXMenuDisplayFilterReduceWhitePointAction
shouldSpeakItems
TB,N,V_shouldSpeakItems
PBSystemMenuSleepNowMessage
PBSystemMenuSleepNowTitle
PBSystemMenuSleepNowButton
ButtonCancel
Assets.car
imageNotFound
TB,R,N,V_imageNotFound
v32@?0@"UIButton"8Q16^B24
v32@?0@8Q16^B24
buttons
T@"NSArray",C,N,V_buttons
buttonTitles
T@"NSArray",R,C,N,V_buttonTitles
defaultButtonIndex
Tq,N,V_defaultButtonIndex
T@"<TextEntryButtonViewDelegate>",W,N,V_delegate
assetDownloadNotStartedNoSpace
assetDownloadStarted
assetDownloadSucceeded
assetDownloadFailed
assetDownloadCanceledByUser
brainDownloadStarted
brainDownloadSucceeded
brainDownloadFailed
brainDownloadFailedNoSpace
extractStarted
extractSucceeded
extractFailed
extractFailedNoSpace
extractCanceledBySlowUpdate
applyStarted
applySucceeded
applyFailed
applyFailedNoSpace
applyCanceledBySlowUpdate
updateSucceeded
updateFailed
updateCanceledByUser
updateCanceledForRedownload
applicationRestarted
atv_ota_update
stage
clientId
fromOS
toOS
isRestore
hwModel
lastAttemptedUUID
targetOSBuild
ATVLastRestoreID
MON: Found last restore with data %@
MON: Failed to remove last restore file [@]
metrics.ATV.metricsUrl
MON: Store bag missing update monitoring URL.
%@/%@/%@
MON: Using override URL %@ (instead of %@ from bag).
MON: Vendor bag update monitoring URL: %@.
MON: Previous update attempt still present when starting new attempt - noting app restart for UUID %@
MON: Started monitoring update from %@ to %@ %@ with UUID %@ (queueing:%@).
Internal
Customer
manual
autoapply
background
unknownFromOSBuild
unknownToOSBuild
internal
customer
unknownClientId
unknownHW
MON: No monitor URL - skipping stage %@).
MON: Monitored stage %@ for %@ retryDelay: %ds result: %d [%@]
MON: Scheduling re-monitor of stage %@ for %@ in %ds
MON: Failed to note stage %@ for UUID %@ result: %d [%@].
MON: Terminated monitoring for UUID %@
MON: Found lastAttemptUUID %@, checking for update result.
MON: Clearing unexpected UUID during app restart processing (replacing %@ with %@).
MON: targetOSBuild %@ matches current OS build - update succeeded.
MON: targetOSBuild %@ did not match current OS build %@ - update failed.
MON: No lastAttemptUUID, ignoring app restart.
fromOSBuild
T@"NSString",C,N,V_fromOSBuild
toOSBuild
T@"NSString",C,N,V_toOSBuild
isInternalBuild
TB,V_isInternalBuild
TB,V_isRestore
triggeredManually
TB,V_triggeredManually
uuid
T@"NSString",&,N,V_uuid
baseURL
T@"NSURL",C,N,V_baseURL
#T:[%@%p] #Notice #%@ : MAU operation has started 
#T:[%@%p] #Notice #%@ : End of MAU operation 
error
T@"NSError",R,N,V_error
iconImage
displayName
inputBounds
inputRadius
inputQuality
blurFilter
filters.blurFilter.inputBounds
filters.blurFilter.inputRadius
titleView
T@"PBAppSwitcherTitleView",R,N,V_titleView
itemContentView
T@"UIView",R,N,V_itemContentView
containerView
T@"UIView",R,N,V_containerView
Td,R,N,V_blurRadius
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_blurRect
T@"UIView",&,N,V_snapshotView
hasBlurFilter
Td,N,V_hasBlurFilter
snapshotImageView
T@"PBSnapshotView",R,N,V_snapshotImageView
appSwitcherItem
T@"PBAppSwitcherItem",R,N,V_appSwitcherItem
userInterfaceStyleMask
TQ,N,V_userInterfaceStyleMask
PBSUserPresentationServiceProxy
v32@?0Q8@"<NSSecureCoding>"16@"NSError"24
v28@?0B8@"<NSSecureCoding>"12@"NSError"20
viewControllersByRequest
T@"NSMapTable",R,N,V_viewControllersByRequest
dismissalCompletionByRequest
T@"NSMapTable",R,N,V_dismissalCompletionByRequest
messageRepliesByRequest
T@"NSMapTable",R,N,V_messageRepliesByRequest
pendingRequestsByRequestID
T@"NSMutableDictionary",R,N,V_pendingRequestsByRequestID
codeHandler
T@?,C,N,V_codeHandler
sendNewCode
T@?,C,N,V_sendNewCode
#T:[%@%p] #Notice #%@ : Media Remote PIN Timed Out 
timerSource
T@"NSObject<OS_dispatch_source>",&,N,V_timerSource
Td,N,V_timeout
dismissalCompletion
T@?,C,N,V_dismissalCompletion
initial_text
placeholder
keyboard_type
alt_title
alt_message
PBTextEntry
textFieldValues
T@"NSMutableArray",&,N,V_textFieldValues
T@"NSMutableArray",&,N,V_buttonTitles
enteredValues
T@"NSArray",&,N,V_enteredValues
defaultTitle
T@"NSString",C,N,V_defaultTitle
defaultMessage
T@"NSString",C,N,V_defaultMessage
T@"<PBTextEntryViewControllerDelegate>",W,N,V_delegate
[PBSnapshotView -initWithFrame:] should not be used.
[PBSnapshotView -initWithCoder:] should not be used.
requestBuilder
T@?,C,N,V_requestBuilder
T@"UIImageView",&,N,V_imageView
vibrantImageView
T@"UIImageView",&,N,V_vibrantImageView
vibrantView
T@"UIVisualEffectView",&,N,V_vibrantView
TB,R,N,V_hasBackground
Initial
Transitioning To Switcher
Showing Switcher
Waiting for Launch
Scrolling to Item
Transitioning To Fullscreen
Showing Fullscreen
Delete Gesture
Delete Gesture Completing
Updating Collection View
Show Switcher
Transition Switcher Complete
Transition To Fullscreen Complete
Scroll Animation Complete
Begin Scrolling
End Scrolling
Activate Item
Activate Item Failed
Launch App
Kill Gesture Update
Kill Gesture Succeeded
Kill Gesture Cancel
Kill Gesture Cancelled or Succeeded
Collection View Update
Collection View Update Complete
Should Animate Updates
AppSwitcherItem
Completion Handler
Swipe Offset
Swipe Velocity
focusDirectionX
lastContentOffset
T{CGPoint=dd},R,N,V_lastContentOffset
PBAppSwitcherCollectionViewController
v32@?0@"PBAppSwitcherUpdate"8Q16^B24
initialDragLocation
T{CGPoint=dd},N,V_initialDragLocation
panningVertically
TB,N,GisPanningVertically,V_panningVertically
panningHorizontally
TB,N,GisPanningHorizontally,V_panningHorizontally
scrolling
TB,N,GisScrolling,V_scrolling
preferredIndexPath
T@"NSIndexPath",&,N,V_preferredIndexPath
collectionView
T@"_PBAppSwitcherCollectionView",&,N,V_collectionView
T@"PBAppSwitcherTitleView",&,N,V_titleView
peekEffectEnabled
TB,N,V_peekEffectEnabled
peekEffect
T@"UIInterpolatingMotionEffect",R,N,V_peekEffect
panRecognizer
T@"UIPanGestureRecognizer",R,N,V_panRecognizer
upRecognizer
T@"UITapGestureRecognizer",R,N,V_upRecognizer
focusedItem
T@"PBAppSwitcherItem",&,N,V_focusedItem
pendingLaunchItem
T@"PBAppSwitcherItem",&,N,V_pendingLaunchItem
launchCompletionHandler
T@?,C,N,V_launchCompletionHandler
appSwitcherManager
T@"PBAppSwitcherManager",R,N,V_appSwitcherManager
PBProgrammingGuideDidUpdateNotification
#T:[%@%p] #Notice #%@ : %s 
-[PBProgrammingGuide setNeedsReload]
-[PBProgrammingGuide _handleForceReloadNotification]
-[PBProgrammingGuide _handleReloadTimer]
#T:[%@%p] #Notice #%@ : Posting %@ 
#T:[%@%p] #Notice #%@ : %s - load already in progress 
-[PBProgrammingGuide _performUpdates]
#T:[%@%p] #Notice #%@ : Updating %@ applicationIdentifiersByBundleIdentifierMapping = %@ 
#T:[%@%p] #Error #%@ : Failed to load identifier mapping: %@ 
#T:[%@%p] #Notice #%@ : Updating %@ provisionedApplicationIdentifiers = %@ 
#T:[%@%p] #Notice #%@ : Updating %@ disabledApplicationIdentifiers = %@ 
provisionedApplicationIdentifiers
disabledApplicationIdentifiers
#T:[%@%p] #Error #%@ : Failed to load programming info: %@ 
AutoInstallAdditions.plist
adamID
T@"NSArray",C,N,V_provisionedApplicationIdentifiers
T@"NSSet",C,N,V_disabledApplicationIdentifiers
applicationIdentifiersByBundleIdentifierMapping
T@"NSDictionary",C,N,V_applicationIdentifiersByBundleIdentifierMapping
PBForceProgrammingGuideReloadNotification
DictationTitle
SiriTitle
DictationMessage
SiriMessage
DictationFooter
SiriFooter
b239-dark
DictationOptInButton
SiriOptInButton
DictationOptOutButton
SiriOptOutButton
DictationAboutTitle
SiriAboutTitle
DictationPrivacyTitle
SiriPrivacyTitle
TVSAboutSiriAndPrivacy
com.apple.TVServices
termsVisible
TB,N,V_termsVisible
dialogContainerView
T@"UIView",R,N,V_dialogContainerView
featureInfoViewController
T@"PBFeatureInfoViewController",R,N,V_featureInfoViewController
termsViewController
T@"TVTextAlertController",R,N,V_termsViewController
configuredForDictationOnly
TB,N,GisConfiguredForDictationOnly,V_configuredForDictationOnly
PBScreenSaverTransitionForegroundProcessIdentifierKey
userInitiated
PBScreenSaverTransitionRequester
shouldPresent
TB,N,V_shouldPresent
completionHandler
T@?,C,N,V_completionHandler
isPresented
TB,N,V_isPresented
T@"PBRemoteViewController",R,N,V_screenSaverViewController
transform.scale
fromValue
toValue
PB-scaleAnimation
opacity
PB-fadeAnimation
inputHardEdges
PB-videoblur
v24@?0Q8^B16
v32@?0@"UICollectionViewUpdateItem"8Q16^B24
v32@?0@"NSIndexPath"8Q16^B24
insertedIndexPaths
T@"NSMutableArray",R,C,N,V_insertedIndexPaths
deletedIndexPaths
T@"NSMutableArray",R,C,N,V_deletedIndexPaths
finalIndexPathByOriginalIndexPath
T@"NSMutableDictionary",R,C,N,V_finalIndexPathByOriginalIndexPath
numberOfItemsBeforeUpdate
Tq,R,N,V_numberOfItemsBeforeUpdate
numberOfItems
Tq,R,N,V_numberOfItems
swipeIndex
Tq,R,N,V_swipeIndex
swipeUpOffset
Td,R,N,V_swipeUpOffset
DidWarnUserOfOutOfSpace
PBSoftwareUpdateServicePurchaseManager
#T:[%@%p] #Notice #%@ : Skipping app update: app storage is full 
OS update check started: manual request
OS update check started: restore
#T:[%@%p] #Error #%@ : Adding a purchase %@ failed with error : %@ 
#T:[%@%p] #Error #%@ : Adding download %@ failed with error : %@ 
#T:[%@%p] #Notice #%@ : App update task has been disabled 
#T:[%@%p] #Notice #%@ : Not scheduling app updates: AutoAppUpdatesEnabled is false 
#T:[%@%p] #Notice #%@ : Not scheduling app updates: interval is too small 
Skipping initial checks: auto-apply enabled.
Scheduling initial check task in %.2fs.
OS update check started: initial task
Scheduling normal check task (delay:%lds period:%.2fs).
OS update check started: periodic task
ignoring sleep check because timeout set to Never.
sleep check skipped: last checked %2.2fs ago.
Skipping OS Check on sleep: auto-apply not enabled.
Not scheduling dark wake: bad system time.
not scheduling dark wake because sleep timeout set.
scheduling timer-based check at %@.
AppleTV.SWU.CheckTimer
Ignoring timer %@ != dark timer %@
Check timer [%@] fired.
Ignoring timer check: auto-apply disabled.
Reloading vendor bag to check for disabled auto updates.
Starting timer for failed bag load (%lds).
Vendor bag reload complete/timed out - continuing.
Forcing auto-apply to YES via default.
Auto-apply updates %@.
allowed
disallowed
Auto-apply check started: timer
Auto-apply check skipped: device not asleep (%d) or not idle (%d).
Auto-apply check skipped: last checked %2.2fs ago.
vendor-gk-8
#T:[%@%p] #Error #%@ : Failed to deserialize vendor bag %@ 
merchant
itms
vendor-bag-versions
maximum-version
minimum-required-version
metadata
swu-allow-autoapply
Bag [%@,%@] matches, metadata %@ auto-apply updates.
Bag [%@,%@] does not meet requirements [%@].
Skipped invalide bag: %@
Old-style vendor bag metadata %@ auto-apply updates.
Failed to load a valid vendor bag.
Failed to start OS update check [%@]
OS update check skipped: already an update in progress [%d]
OS update check: is at home user:%d
Invalid AppleConnect Credentials
OS update check: AppleConnect credentials valid.
Send Data to Apple Not Enabled
OS update check: Send Data enabled.
OS update check: VPN connection %@.
succeeded
failed
OS update check: %@
Cancel
OS update check: VPN connection not valid. Continuing without VPN.
OS update check: VPN already connected, continuing.
Resetting OS update timer/tasks because sleep timeout changed.
Resetting OS update timer/tasks because auto-apply changed.
Skipping OS check on sleep: sleep set to Never.
Skipping OS check on sleep: last checked %2.2fs ago.
Skipping OS check on sleep: auto-apply not enabled.
OSUpdateConfirmNotReadyPrompt
OSUpdateConfirmNotReadySubtextFR
OSUpdateConfirmNotReadySubtext
OSUpdateConfirmTitle
OSUpdateConfirmYesMenuItem
OSUpdateConfirmNoMenuItem
Auto-apply updates set; continuing with Apply.
Restoring; continuing with Apply.
Redownloading update; continuing with Apply.
User confirmed update, in Settings; continuing with Apply.
OSUpdateAutoConfirmReadyPrompt
OSUpdateConfirmReadyPrompt
OSUpdateConfirmReadySubtextFR
OSUpdateConfirmReadySubtext
OSUpdateConfirmInstallYesMenuItem
OSUpdateConfirmInstallNoMenuItem
OSUpdateConfirmInstallEnableAutoMenuItem
Prompted for apply, OK to apply:%d enable auto:%d.
Setting Restore obliterate flag.
Checking Restore obliterate flag: %d
OSUpdateFailedText
OSUpdateFailedServerProblemSubtext
OSUpdateFailedNeedToRestartSubtext
Update check failed.
Cannot check for updates. Configuration error.
Cannot check for updates right now. Try again later.
Cannot check for updates. Redownload check failed.
Cannot check for updates because a previous operation is still in progress.
The download stalled unexpectedly.
The asset file was not found.
Cannot check for updated because model information is unavailable.
%@ %@
There was insufficient space to download or apply the update.
The preparation phase returned an error. Check the update log for more details. 
The application phase returned an error. Check the update log for more details. 
Cannot check for updates. (VPN initialization failed)
Cannot check for updates. (AppleConnect credentials invalid)
Cannot check for updates. (VPN connection canceled)
Cannot check for updates. (Failed to connect via VPN)
OSUpdateFailedSubtext
OSUpdateRestoreNoFullReplacementText
OSUpdateNoUpdatesText
UpdateCheckFinished with data %@
UpdateDownloadStarted with data %@
UpdateDownloadFinished with data %@
UpdateRedownloadStarted with data %@
UpdateApplyStarted with data %@
com.apple.PineBoard.osupdate.start
UpdateApplyFinished with data %@
Clearing obliterate flag at apply fail.
com.apple.PineBoard.osupdate.stop
monitoringEnabled
TB,N,V_monitoringEnabled
appSoftwareUpdateCheckTask
T@"TVSBackgroundTask",&,N,V_appSoftwareUpdateCheckTask
osSoftwareUpdateInitialCheckTask
T@"TVSBackgroundTask",&,N,V_osSoftwareUpdateInitialCheckTask
osSoftwareUpdatePeriodicCheckTask
T@"TVSBackgroundTask",&,N,V_osSoftwareUpdatePeriodicCheckTask
darkWakeTimer
T@"PCSimpleTimer",&,N,V_darkWakeTimer
vendorBagRefetchTimeoutTimer
T@"NSTimer",W,N,V_vendorBagRefetchTimeoutTimer
presentingAppAlert
TB,N,V_presentingAppAlert
lastPresentedAppAlertTime
Td,N,V_lastPresentedAppAlertTime
purchaseManager
T@"SSPurchaseManager",R,N,V_purchaseManager
operationsByPurchase
T@"NSMutableDictionary",R,N,V_operationsByPurchase
operationsByDownload
T@"NSMutableDictionary",R,N,V_operationsByDownload
disabledAutoInstallItemIDs
T@"NSMutableSet",R,N,V_disabledAutoInstallItemIDs
appSoftwareUpdateCheckTimeIntervalInSeconds
Td,N,V_appSoftwareUpdateCheckTimeIntervalInSeconds
AppStorageFullTitle
Title of alert presented to user when app storage is full and updates cannot be done.
AppStorageFullText
Text of alert presented to user when app storage is full and updates cannot be done.
AppStorageFullDefaultButton
Title of button that will cause Settings to launch and display the app usage/management pane.
AppStorageFullCancelButton
Title of button that will dismiss the AppStorageFull alert.
prefs:root=DeviceUsage
#T:[%@%p] #Notice #%@ : App update: presented full-storage dialog to user 
PBApplicationSnapshotUserInterfaceStyleKey
PBApplicationSnapshotIsTemplateImageKey
pb_userInterfaceStyle
Tq,N,Spb_setUserInterfaceStyle:
pb_isTemplateImage
TB,N,Spb_setIsTemplateImage:
uninited
initFailed
disconnected
connecting
connectedWaiting
connected
disconnecting
reasserting
reset
reassert
startConnecting
connectFetchOK
connectFetchFailed
connect
startDisconnecting
disconnect
https://basejumper.apple.com/assets/com_apple_MobileAsset_SoftwareUpdate/com_apple_MobileAsset_SoftwareUpdate.xml
PBVPN
#T:[%@%p] #Notice #%@ : PBVPN: %@ -> [%@] -> %@ 
Could not start VPN session.
#T:[%@%p] #Notice #%@ : PBVPN fetch of %@ response: %@  error: %@ 
v32@?0@"NSURL"8@"NSURLResponse"16@"NSError"24
#T:[%@%p] #Error #%@ : PBVPN: Failed to fetch test secure content. 
VPN Connection
Connecting to VPN...
T@"NSUUID",&,N,V_uuid
connectionCompletionBlock
T@?,C,N,V_connectionCompletionBlock
disconnectionCompletionBlock
T@?,C,N,V_disconnectionCompletionBlock
wantsToConnect
TB,N,V_wantsToConnect
testFetchStartTime
T@"NSDate",&,N,V_testFetchStartTime
userCanceledConnection
TB,N,V_userCanceledConnection
com.apple.podcasts
v16@?0^{__CFDictionary=}8
v12@?0I8
v12@?0C8
playing
playbackRate
playingMusic
nowPlayingProcessPID
isMusicAppPlaying
isPodcastsAppPlaying
trackIdentifier
T@"NSNumber",R,C,N,V_trackIdentifier
mediaType
T@"NSString",R,C,N,V_mediaType
currentBulletin
T@"PBSBulletin",&,N,V_currentBulletin
T@"NSNumber",R,C,N,V_playbackRate
TB,R,N,V_playing
TB,R,N,V_playingMusic
TB,R,N,V_isMusicAppPlaying
TB,R,N,V_isPodcastsAppPlaying
Ti,R,N,V_nowPlayingProcessPID
T@"<PBMediaRemoteObserverDelegate>",W,N,V_delegate
volumeControlAvailable
#T:[%@%p] #Notice #%@ : Pin Dialog Requested by PBMediaRemoteService 
pinViewControllersByToken
T@"NSMapTable",R,N,V_pinViewControllersByToken
AudioRoutingControllerKVOCOntextSelectedRoute
NoAppSwitcher
NoAutoLaunch
KioskAppBundleIdentifier
CRDAppBundleIdentifier
MusicAppBundleIdentifier
AppIdentifierHistory
MusicNowPlayingTimeout
CRDAppTimeout
SleepTimeoutInSeconds
MenuLongPressDelayInSeconds
MicLongPressDelayInSeconds
RemotePresenceDetectionDelayTimeoutInSeconds
HILITEModeTimeout
PerformAppSoftwareUpdateCheckOnBoot
AppSoftwareUpdateCheckIntervalInSeconds
BulletinNotificationAutoDismissalTimeInSeconds
EmitAVLog
EmitPlaybackLogs
EmitThermalLogs
EmitConfigLogs
EDIDLoggingTimePeriodInSeconds
FigaroLoggingURL
NoIssueDataExport
WirelessFirmwareUpdateEnabled
EmitButtonTimingLogs
BluetoothRemoteKeepAliveTimeInterval
BluetoothRemoteUpdateCheckTimeInterval
BluetoothRemoteTimeIntervalSinceLastSuccessfulUpdate
BluetoothRemoteUpdateRetryLimit
BluetoothRemoteSleepTimeoutInSeconds
UpdateWithNullVersions
DisabledAutoInstallItemIDs
AutoAppUpdatesEnabled
EnforceProvisioningOnSystemApps
WhatsNewCheckTimeIntervalInSeconds
OSSWUMonitoringURLOverride
AllowSiriOnScreenActions
DialogTestingEnabled
IgnoreLocalHTTPCache
DarkModeShortcutEnabled
com.apple.TVConferenceRoomDisplay
PBKioskAppPriority
TVSystemMusicApp
appSwitcherEnabled
TB,R,N,GisAppSwitcherEnabled
kioskAppAutoLaunchEnabled
TB,R,N,GisKioskAppAutoLaunchEnabled
kioskAppBundleIdentifier
T@"NSString",R,N
crdAppBundleIdentifier
musicAppBundleIdentifier
appIdentifierHistory
T@"NSArray",C,N
disabledAutoInstallItemIds
whatsNewCheckTimeIntervalInSeconds
remotePresenceDetectionDelayTimeoutInSeconds
hiliteModeTimeoutInSeconds
sleepTimeoutInSeconds
sleepNever
TB,R,N,GisSleepNever
musicNowPlayingTimeoutInSeconds
bulletinNotificationAutoDismissalTimeInSeconds
crdAppTimeoutInSeconds
menuLongPressDelayInSeconds
microphoneLongPressDelayInSeconds
shouldPerformAppSoftwareUpdateCheckOnBoot
T@"NSNumber",R,N
appSoftwareUpdateCheckIntervalInSeconds
shouldUpdateWithNullVersions
osSoftwareUpdateMonitoringURLOverride
autoAppUpdatesEnabled
emitDiagnosticAVLog
emitPlaybackLogs
emitThermalLogs
emitConfigLogs
emitButtonTimingLogs
figaroLoggingURL
suppressIssueDataExport
wirelessFirmwareUpdateEnabled
bluetoothRemoteKeepAliveTimeInterval
bluetoothRemoteUpdateCheckTimeInterval
bluetoothRemoteTimeIntervalSinceLastSuccessfulUpdate
bluetoothRemoteUpdateRetryLimit
bluetoothRemoteSleepTimeoutInSeconds
allowSiriOnScreenActions
dialogTestingEnabled
TB,R,N,GisDialogTestingEnabled
ignoreLocalHTTPCacheEnabled
darkModeShortcutEnabled
Unimplemented
-[PBSiriScreenActionManager init] not supported, use +sharedInstance instead
#T:[%@%p] #Notice #%@ : PBSiriScreenActionManager changing enabled state to: %@ 
systemApplicationElement
T@"AXElement",&,N,V_systemApplicationElement
currentApplicationElement
T@"AXElement",R,N
T@"<PBSiriScreenActionManagerDelegate>",W,N,V_delegate
enabled
TB,N,GisEnabled,V_enabled
currentScreenActionApplication
T@"PBSiriScreenActionApplication",R,N
com.apple.appletv.pbs.bulletin-service-access
com.apple.appletv.pbs.user-presentation-service-access
com.apple.appletv.pbs.diagnostic-logs-service-access
com.apple.appletv.pbs.osupdate-service-access
com.apple.appletv.pbs.airplay-service-access
com.apple.appletv.pbs.mediaremote
hiliteModeActive
screenSaverActive
com.apple.appletv.pbs.allow-sleep
#T:[%@%p] #Error #%@ : Sleep request by %@ failed - not entitled. 
com.apple.appletv.pbs.allow-wake
#T:[%@%p] #Error #%@ : Wake request by %@ failed - not entitled. 
#T:[%@%p] #Error #%@ : Fetch deviceIsAsleepWithResult by %@ failed - no result block. 
com.apple.appletv.pbs.allow-relaunch-backboardd
#T:[%@%p] #Error #%@ : Relaunch request by %@ failed - not entitled. 
com.apple.appletv.pbs.allow-relaunch
com.apple.appletv.pbs.allow-reboot
#T:[%@%p] #Error #%@ : Reboot request by %@ failed - not entitled. 
com.apple.appletv.pbs.allow-sleep-timeout
#T:[%@%p] #Error #%@ : Sleep timeout set request by %@ failed - not entitled. 
#T:[%@%p] #Error #%@ : Sleep timeout get request by %@ failed - not entitled. 
com.apple.appletv.pbs.allow-screen-saver
#T:[%@%p] #Error #%@ : Screen saver activation by %@ failed - not entitled. 
#T:[%@%p] #Error #%@ : Screen saver deactivation by %@ failed - not entitled. 
#T:[%@%p] #Error #%@ : Air play activation request by %@ failed - not entitled. 
com.apple.appletv.pbs.allow-conference-room-display
#T:[%@%p] #Error #%@ : CRD App launch request by %@ failed - not entitled. 
#T:[%@%p] #Error #%@ : CRD instruction window present request by %@ failed - unknown client. 
#T:[%@%p] #Error #%@ : CRD instruction window present request by %@ failed - not entitled. 
#T:[%@%p] #Error #%@ : CRD instruction window dismiss request by %@ failed - unknown client. 
#T:[%@%p] #Error #%@ : CRD instruction window dismiss request by %@ failed - not entitled. 
com.apple.appletv.pbs.allow-purge-topshelf
#T:[%@%p] #Error #%@ : Top purge request by %@ failed - not entitled. 
com.apple.appletv.pbs.allow-siri-actions
#T:[%@%p] #Error #%@ : Fetch of recent applications by %@ failed - not entitled. 
#T:[%@%p] #Error #%@ : Fetch of top application by %@ failed - not entitled. 
#T:[%@%p] #Error #%@ : Setting assistant audio input paths by %@ failed - not entitled. 
#T:[%@%p] #Error #%@ : Setting assistant strings request by %@ failed - not entitled. 
#T:[%@%p] #Notice #%@ : Trying to perform screen action %@ on item: %@ 
#T:[%@%p] #Notice #%@ : Activating screen action: %@ 
#T:[%@%p] #Error #%@ : Unable to find screen action item: %@ 
#T:[%@%p] #Error #%@ : Performing Siri action by %@ failed - not entitled. 
com.apple.appletv.pbs.allow-send-menu
#T:[%@%p] #Error #%@ : Send menu request by %@ failed - not entitled. 
com.apple.appletv.pbs.allow-send-event-data
#T:[%@%p] #Error #%@ : Send event data request by %@ failed - not entitled. 
com.apple.appletv.pbs.allow-user-interface-style-change
#T:[%@%p] #Error #%@ : Setting effective user inteface style request by %@ failed - not entitled. 
com.apple.appletv.pbs.allow-siri-activation
#T:[%@%p] #Error #%@ : Activate Siri request by %@ failed - not entitled. 
#T:[%@%p] #Error #%@ : Start Siri listening request by %@ failed - not entitled. 
#T:[%@%p] #Error #%@ : Stop Siri listening request by %@ failed - not entitled. 
com.apple.appletv.pbs.allow-launch-kiosk
#T:[%@%p] #Error #%@ : Launch kiosk request by %@ failed - not entitled. 
com.apple.appletv.pbs.allow-shared-state-access
#T:[%@%p] #Error #%@ : Fetch Shared App State by %@ failed - not entitled. 
#T:[%@%p] #Error #%@ : Fetch provisionedAppIdentifiers by %@ failed - not entitled. 
#T:[%@%p] #Error #%@ : Fetch disabledAdamIDs by %@ failed - not entitled. 
#T:[%@%p] #Error #%@ : Fetch applicationIdentifiersByBundleIdentifierMapping by %@ failed - not entitled. 
#T:[%@%p] #Error #%@ : Fetch enforceProvisioningOnSystemAppsEnabled by %@ failed - not entitled. 
com.apple.appletv.pbs.allow-remote-pairing
#T:[%@%p] #Error #%@ : Fetch Paired Apple Remote State by %@ failed - not entitled. 
#T:[%@%p] #Error #%@ : Pair Apple Remote request by %@ failed - not entitled. 
com.apple.appletv.pbs.allow-bluetooth-remote-update
#T:[%@%p] #Error #%@ : Bluetooth remote update request by %@ failed - not entitled. 
#T:[%@%p] #Error #%@ : Bulletin service proxy request by %@ failed - missing entitlement %@. 
#T:[%@%p] #Error #%@ : Diagnostic logs service proxy request by %@ failed - missing entitlement %@. 
#T:[%@%p] #Error #%@ : OS update service proxy request by %@ failed - missing entitlement %@. 
#T:[%@%p] #Error #%@ : AirPlay service proxy request by %@ failed - missing entitlement %@. 
#T:[%@%p] #Error #%@ : MediaRemote service proxy request by %@ failed - missing entitlement %@. 
#T:[%@%p] #Error #%@ : User presentation service proxy request by %@ failed - missing entitlement %@. 
expired app
nowPlayingPresentationDelegate
T@"<PBSystemServiceNowPlayingDelegate>",&,N,V_nowPlayingPresentationDelegate
T@"NSXPCConnection",R,N,V_remoteConnection
clientBundleIdentifier
T@"NSString",R,C,N,V_clientBundleIdentifier
TVButtonBehaviorTitle
TVButtonBehaviorMessage
TVButtonBehaviorFooter
TVButtonBehaviorOK
b239-tv-button
com.apple.appletv.pbs.now-playing-view-service
com.apple.TVSearch
com.apple.TVWatchList
com.apple.TVNowPlayingService
TVNowPlayingServiceViewControllerName
TVNPRadioAdViewController
com.apple.PineBoard.BBDataProvider
/usr/libexec/airtunesd
available-software-check-on-launch
available-software-updates-background-reload-frequency
atv-headboard-refresh-interval-seconds
atv-whatsnew-refresh-interval-in-seconds
com.apple.itunesstored
HumeFamilyCarryConfigurationEnabled
InitiateSessionURL
selectedRoute
music now playing
AccessibilityMenuOptionsBinding
v16@?0@"PBAppDelegate"8
#T:[%@%p] #Error #%@ : Unable to set audio session category: %@ 
v16@?0@"AVAudioSession"8
accessibilityMenuOptions
ATVHIDSystemClientNotification_DidReceivePeripheralPairingRequest
DidReceivePeripheralPairingRequest
com.apple.PineBoard.DidReceivePeripheralPairingRequest
AssetLibrary
ShowSafeArea
ShowSerialNumber
PBDialogTestNotification
*** itms-services schemes are unsupported on %@ %@
f12@?0f8
#T:[%@%p] #Notice #%@ : Presenting Sleep Now dialog 
Terminating process due to language(%@)/locale(%@) change
RCUnconfiguredVolumeTitle
RCUnconfiguredVolumeMessage
RCUnconfiguredVolumeCancelMenuItem
RCUnconfiguredVolumeGoToSettingsMenuItem
prefs:root=VOLUME
%@://button/tv
#T:[%@%p] #Error #%@ : Ignoring thermal notification in simulator. 
com.apple.airplay.playbackPrevent
#T:[%@%p] #Error #%@ : PM: *** Failed to stop AirPlay activity *** 
#T:[%@%p] #Error #%@ : PM: *** Failed to stop now playing activity *** 
com.apple.PineBoard.thermalShutdownNotification
com.apple.airplay.playbackAllow
#T:[%@%p] #Error #%@ : PM: *** Failed to restore AirPlay activity *** 
hidden
RemoteInspectorEnabled
com.apple.webinspectord
com.apple.appletv.audiostart
#T:[%@%p] #Notice #%@ : Queueing profile for install. 
#T:[%@%p] #Notice #%@ : Failed to install profile: %@ 
#T:[%@%p] #Notice #%@ : RESTORE: Checking obliterate on boot flag: %d 
#T:[%@%p] #Error #%@ : RESTORE: ERROR: Expected last restore file missing. 
#T:[%@%p] #Notice #%@ : RESTORE: Performing obliterate on boot preserving %@. 
OSUpdateRestoreWaitingTitle
OSUpdateRestoreWaitingText
#T:[%@%p] #Notice #%@ : RESTORE: obliterate proceeding during boot. 
#T:[%@%p] #Error #%@ : RESTORE: obliterate call failed during boot. 
com.apple.mobilemusicsettings.latenightmode
com.apple.preferences-sounds
latenightmode
#T:[%@%p] #Notice #%@ : Wake requested but already awake. 
#T:[%@%p] #Notice #%@ : Sleep requested but already asleep. 
Termination assertion acquired:%@
window
T@"UIWindow",&,N
musicNowPlayingTrigger
T@"TVSUserActivityTrigger",R,N
programmingGuideBackgroundTask
T@"TVSBackgroundTask",&,N,V_programmingGuideBackgroundTask
buddyPrefsObservingToken
T@,&,N,V_buddyPrefsObservingToken
mutableDeepLinkingAppHistory
T@"NSMutableOrderedSet",R,N,V_mutableDeepLinkingAppHistory
languageChangeObserver
T@"PBLanguageChangeObserver",&,N,V_languageChangeObserver
shouldDisableIdleTimer
TB,N,V_shouldDisableIdleTimer
audioRoutingController
T@"TVSAudioRoutingController",&,N,V_audioRoutingController
appLaunchDisabled
TB,N,V_appLaunchDisabled
awaitingSiriOptInOfferResponse
TB,N,V_awaitingSiriOptInOfferResponse
collectionViewController
T@"PBAppSwitcherCollectionViewController",&,N,V_collectionViewController
transitionCompletion
T@?,C,N,V_transitionCompletion
activeTransitionContext
T@"PBAppTransitionContext",&,N,V_activeTransitionContext
SerialNumber
isFinished
finished
isExecuting
executing
#T:[%@%p] #Notice #%@ : PBAppSoftwareUpdateOperation %d: creating app update 
#T:[%@%p] #Notice #%@ : PBAppSoftwareUpdateOperation %d: app update starting 
AssertType
PreventUserIdleSystemSleep
AssertLevel
AssertName
com.apple.appletv.app_software_update
#T:[%@%p] #Error #%@ : PBAppSoftwareUpdateOperation %d: not updating apps because power assertion failed: 0x%x 
#T:[%@%p] #Error #%@ : PBAppSoftwareUpdateOperation %d: could not release power assertion: 0x%x 
#T:[%@%p] #Notice #%@ : PBAppSoftwareUpdateOperation %d: app update finished 
#T:[%@%p] #Notice #%@ : PBAppSoftwareUpdateOperation %d: app update found %ld apps to update 
available-software-updates
POST
local-software
autoUpdatesEnabled
#T:[%@%p] #Error #%@ : PBAppSoftwareUpdateOperation %d: something went wrong creating document loader; properties: %@ 
#T:[%@%p] #Error #%@ : PBAppSoftwareUpdateOperation %d: something went wrong asking for available software updates; error: %@ 
#T:[%@%p] #Error #%@ : PBAppSoftwareUpdateOperation %d: something went wrong asking for available software updates; document: %@, error: %@ 
updates
#T:[%@%p] #Notice #%@ : PBAppSoftwareUpdateOperation %d: app update found %ld apps needing update 
versionId
buyParams
#T:[%@%p] #Notice #%@ : PBAppSoftwareUpdateOperation %d: skipping update of '%@' (%@ v.'%@') because user has disabled auto-updates 
v16@?0@"PBAppUpdateOperation"8
#T:[%@%p] #Notice #%@ : PBAppSoftwareUpdateOperation %d: %ld apps remaining to update 
operations
T@"NSArray",R,V_operations
hadFailures
TB,R
percentComplete
Td,R
%@{ordinal: %d, state : %d, adamID : %@, versionID : %@, bundleID : %@, error : %@}
initialized
PBAppUpdateOperation %d: nil or empty adamID '%@'
#T:[%@%p] #Error #%@ : %@ 
PBAppUpdateOperation %d: nil or empty externalVersionID '%@' provided for adamID '%@'
PBAppUpdateOperation %d: could not get guid for device
updateProduct
downloadProduct
salableAdamId
externalVersionId
guid
PBAppUpdateOperation %d: could not create document loader; properties: %@
PBAppUpdateOperation %d: could not load metadata document
#T:[%@%p] #Error #%@ : %@; error: %@ 
PBAppUpdateOperation %d: metadata document is not a dictionary; document: '%@'
songList
customerMessage
PBAppUpdateOperation %d: store error: '%@'
PBAppUpdateOperation %d: download metadata does not contain an item list, or the item is not a dictionary; document: %@
softwareVersionBundleId
PBAppUpdateOperation %d: download metadata does not contain a bundle ID; document: %@
PBAppUpdateOperation %d: could not create SSDownloadMetadata; metadata: %@
PBAppUpdateOperation %d: could not create SSDownload; metadata: %@
#T:[%@%p] #Notice #%@ : PBAppUpdateOperation %d: starting update of '%@' (%@ v.'%@') 
#T:[%@%p] #Notice #%@ : PBAppUpdateOperation %d: skipping update of '%@' (%@ v.'%@') because operation was cancelled 
PBAppUpdateOperation %d: could not take termination assertion for app %@
PBAppUpdateOperation %d: failure while adding purchase
PBAppUpdateOperation %d: failure while adding download
v24@?0@"FBSApplicationTerminationAssertion"8@"NSError"16
#T:[%@%p] #Notice #%@ : PBAppUpdateOperation %d: finished update of '%@' (%@ v. '%@') 
PBAppUpdateOperation %d: purchase failure
PBAppUpdateOperation %d: download failure
TB,R,GisInitialized
T@"NSString",R,V_adamID
externalVersionID
T@"NSString",R,V_externalVersionID
downloadPhaseIdentifier
T@"NSString",R
failureError
T@"NSError",R
PBAppSoftwareUpdateErrorDomain
PBAppUpdateOperationErrorMessage
PBAppUpdateOperationErrorDocument
adam-id
installed-version-identifier
updateScenesTransaction
T@"FBApplicationUpdateScenesTransaction",&,N,V_updateScenesTransaction
T@"PBAppTransitionContext",R,N,V_context
AppleLanguages
lproj
@"NSString"40@?0@"NSBundle"8@"NSString"16@"NSString"24@"NSString"32
#T:[%@%p] #Error #%@ : Unable to get short BSD proc info for %d: %s 
#T:[%@%p] #Error #%@ : Screenshot failed: could not create image. 
#T:[%@%p] #Error #%@ : Screenshot failed: could not create surface. 
#T:[%@%p] #Error #%@ : Screenshot failed: no display present. 
%@ - %@
/tmp/screenshot-%@.png
public.png
#T:[%@%p] #Notice #%@ : Wrote screenshot to %@ 
#T:[%@%p] #Error #%@ : Screenshot failed: could not finalize image. 
#T:[%@%p] #Error #%@ : Screenshot failed: could not create destination (%@). 
#T:[%@%p] #Error #%@ : Screenshot failed: could not create URL (%@). 
<%@: %p; from = %@; to = %@; appSwitcher = %@; userInitiated = %@; launchedForPlayback = %@; process = %@>
appSwitcherTransition
TB,N,GisAppSwitcherTransition,V_appSwitcherTransition
fromBundleIdentifier
T@"NSString",C,N,V_fromBundleIdentifier
toBundleIdentifier
T@"NSString",C,N,V_toBundleIdentifier
focusedBundleIdentifier
T@"NSString",C,N,V_focusedBundleIdentifier
firstUserLaunch
TB,N,GisFirstUserLaunch,V_firstUserLaunch
TB,N,GisUserInitiated,V_userInitiated
launchedForPlayback
TB,N,V_launchedForPlayback
launchOverSiri
TB,N,V_launchOverSiri
launchedByDeactivation
TB,N,V_launchedByDeactivation
systemAppInitiatedDeepLink
TB,N,V_systemAppInitiatedDeepLink
launchURL
T@"NSURL",C,N,V_launchURL
initiatorAuditToken
T@"BSAuditToken",C,N,V_initiatorAuditToken
process
T@"FBApplicationProcess",&,N,V_process
foregroundUpdateHandler
T@?,C,N,V_foregroundUpdateHandler
T@"<PBAppTransitionContextDelegate>",W,N,V_delegate
sendNewCodeBlock
T@?,C,N,V_sendNewCodeBlock
#T:[%@%p] #Notice #%@ : Already monitoring the firmware update 
#T:[%@%p] #Notice #%@ : Apple TV time is not synced up yet. Cannot schedule update! %@ 
#T:[%@%p] #Notice #%@ : Manually starting update... 
#T:[%@%p] #Notice #%@ : Checking if immediate update is needed: %@ 
#T:[%@%p] #Notice #%@ : Start bluetooth firmware update monitoring 
#T:[%@%p] #Notice #%@ : Check update in %f 
#T:[%@%p] #Notice #%@ : Update service runs for the first time. Set time since last successful update == 0 
#T:[%@%p] #Notice #%@ : It has been longer than normal interval since last successful check/update. Or this is an internal device. Set check interval to 'immediate interval' (1 hour by default). 
#T:[%@%p] #Notice #%@ : Setting up Background Task for Bluetooth remote update 
#T:[%@%p] #Notice #%@ : Removing the existing task 
#T:[%@%p] #Notice #%@ : Scheduling a new task with interval: %f delay: %f 
#T:[%@%p] #Notice #%@ : Background task disabled 
#T:[%@%p] #Notice #%@ : Manual update in progress. Keep task. 
#T:[%@%p] #Notice #%@ : Setting up operation for Bluetooth remote firmware update 
#T:[%@%p] #Notice #%@ : Operation COMPLETE 
#T:[%@%p] #Notice #%@ : Start operation 
#T:[%@%p] #Notice #%@ : WARNING: There is a task running already! 
#T:[%@%p] #Notice #%@ : WARNING: Operation not matched! This callback should receive the same operation as the currently running operation. 
#T:[%@%p] #Notice #%@ : Operation FAILED - ERROR: %@ 
#T:[%@%p] #Notice #%@ : Operation has been cancelled 
#T:[%@%p] #Notice #%@ : Operation completed with SUCCESS!! 
#T:[%@%p] #Notice #%@ : Holding power assertion for Bluetooth Remote firmware update 
com.apple.appletv.bluetooth_remote_firmware_update
#T:[%@%p] #Error #%@ : *** not updating apps because power assertion failed: 0x%x 
#T:[%@%p] #Notice #%@ : Releasing power assertion for Bluetooth Remote firmware update 
#T:[%@%p] #Error #%@ : *** could not release power assertion: 0x%x 
accessoryUpdateCheckTask
T@"TVSBackgroundTask",&,N,V_accessoryUpdateCheckTask
currentOperation
T@"PBAccessoryUpdateOperation",&,N,V_currentOperation
operationQueue
T@"NSOperationQueue",R,N,V_operationQueue
manualUpdateInProgress
TB,N,GisManualUpdateInProgress,V_manualUpdateInProgress
PBExternalControlPolicyDidUpdateNotification
#T:[%@%p] #Notice #%@ : VOL: Volume does not need configuration (pref:%d configured:%d enabled:%d auto:%d transport:%ld). 
#T:[%@%p] #Notice #%@ : VOL: Volume needs configuration. 
v16@?0@"PBExternalControlSystem"8
externalControlSystem
T@"TVSExternalControlSystem",&,N,V_externalControlSystem
#T:[%@%p] #Notice #%@ : Posting policy update because display mode changed. %@ 
-[PBSiriManager init] not supported, use +sharedInstance instead
#T:[%@%p] #Notice #%@ : Activating Dictation UI display (single tap) 
#T:[%@%p] #Notice #%@ : Activating Siri plugin for UI display (single tap) 
#T:[%@%p] #Notice #%@ : Activating dictation (press and hold) 
#T:[%@%p] #Notice #%@ : Activating Siri plugin to start listening (press and hold) 
#T:[%@%p] #Notice #%@ : Stopping dictation (press and hold) 
#T:[%@%p] #Notice #%@ : Deactivating Siri plugin for listening 
#T:[%@%p] #Notice #%@ : Checking listening state 
assistant
#T:[%@%p] #Notice #%@ : Siri Enabled: %@ 
#T:[%@%p] #Notice #%@ : Creating SiriPluginController from bundle com.apple.pinecrest.SiriSupport 
com.apple.pinecrest.SiriSupport
#T:[%@%p] #Notice #%@ : Read Siri OnScreenActions pref. Allow = %@ 
#T:[%@%p] #Notice #%@ : Creating onscreen context provider 
#T:[%@%p] #Notice #%@ : Removing onscreen context provider 
siriEnabled
TB,N,GisSiriEnabled,V_siriEnabled
siriPluginController
T@"PBUIPluginController",&,N,V_siriPluginController
onScreenActionContextProvider
T@"PBSiriScreenActionContextProvider",&,N,V_onScreenActionContextProvider
shouldPreferDictation
TB,N,V_shouldPreferDictation
suspended
TB,N,GisSuspended,V_suspended
listening
TB,R,N,GisListening
AFPreferencesDidChangeNotification
AFPreferences
<%p>(%@)
InfoPlist
manager
T@"PBAppSwitcherManager",R,W,N,V_manager
applicationProxy
T@"LSApplicationProxy",&,N,V_applicationProxy
T@"PBSAppState",C,N,V_appState
pendingInsertion
TB,N,GisPendingInsertion,V_pendingInsertion
pendingDeletion
TB,N,GisPendingDeletion,V_pendingDeletion
itemType
Tq,R,N,V_itemType
live
TB,R,N,GisLive,V_live
T@"NSString",R,C,N,V_identifier
T@"NSString",R,C,N,V_displayName
T@"UIImage",R,N,V_iconImage
v24@?0@"<NSSecureCoding>"8@"NSError"16
dismissResultHandler
T@?,C,N,V_dismissResultHandler
terminationHandler
T@?,C,N,V_terminationHandler
-[PBConferenceRoomDisplayManager init] not supported, use +sharedInstance instead
v16@?0Q8
#T:[%@%p] #Notice #%@ : PIN required to perform CRD action 
activeCRDClients
T@"NSMutableOrderedSet",&,N,V_activeCRDClients
VideoSubscriberAccountViewService
com.apple.TVAirPlay
TVAirPlayMediaViewController
#T:[%@%p] #Notice #%@ : AirPlay service requested 
#T:[%@%p] #Error #%@ : AirPlay activity request by %@ failed - not entitled. 
com.apple.UIKit.vends-view-services
com.apple.SiriViewService
ProcessWillActivate
ProcessDidActivate
ProccessWillDeactivate
DeviceWillShutdown
SystemAppWillExit
ProcessDidExit
Process
ActivateSuspended
TransitionContext
PineBoard: transition already in progress
PBProcessManagerSuppressAutodownloadPromptKey
PBActivateAppOptionsKeyWantsDeepLinkFromOrigin
#T:[%@%p] #Notice #%@ : Prompting the user to enable automatic app downloads if necessary 
com.apple.PBLinkHandler
prefs
enableSetting
disableSetting
AutoDownloadApps
applicationIdentifier
[PBD] Denying open-application request for reason: %@
[PBD] Opening app '%@' is barred due to content restrictions
com.apple.TVMovies
com.apple.TVShows
play
@"FBProcessExecutionContext"8@?0
@"FBSSceneClientSettings"8@?0
#T:[%@%p] #Notice #%@ : Process Manager launching %@, from: %@, foreground: %@, focused: %@, switcherActive: %@ 
v16@?0@"PBAppTransitionContext"8
PBProcessManager.scenesTransactionObserver
WORKSPACE
#T:[%@%p] #Notice #%@ : Reboot requested 
#T:[%@%p] #Notice #%@ : System App Restart requested 
com.apple.springboard.requestScene-daemon
v32@?0@"NSNumber"8Q16^B24
v16@?0@"BSActionResponse"8
com.apple.
#T:[%@%p] #Notice #%@ : Checking app restrictions for '%@' (%ld) 
#T:[%@%p] #Notice #%@ : App '%@' will require PIN to run because no apps are allowed without it 
#T:[%@%p] #Notice #%@ : App rating for '%@' is unknown; will require PIN to run 
#T:[%@%p] #Notice #%@ : App '%@' will require PIN to run because the app rating (%ld) is less than the app rating setting (%ld) 
Physical network changed and this app is not safe for use while online
beta-reports-active
BetaTestingHasEndedAlertTitle
BetaTestingHasEndedAlertMessage
BetaTestingHasEndedAlertDefaultButton
AppFreeDeveloperProfileNotTrustedTitle
AppFreeDeveloperProfileNotTrustedBodyFormat
AppFreeDeveloperProfileNotTrustedCancel
AppProfileNotTrustedTitle
AppProfileNotTrustedBodyFormat
AppProfileNotTrustedCancel
AppProfileExpiredTitleWithNameFormat
AppProfileExpiredOK
@"<FBSceneClientProvider>"8@?0
forTesting
TB,N,V_forTesting
T@"NSDictionary",C,N,V_appState
debuggerTargetBundleIdentifier
T@"NSString",C,N,V_debuggerTargetBundleIdentifier
recentApplicationBundleIdentifiers
kioskApplicationIdentifier
T@"NSString",C,N,V_kioskApplicationIdentifier
T@"FBProcess",R,N
alternateApplicationIsActive
[PBD] Process '%@' is not running; transaction %s, %s, %s, and %s, with errors: %@
started
did not start
is running
is not running
was interrupted
was not interrupted
did not fail
[PBD] Open app transaction failure; isBusy:%d failed:%d aborted:%d; %@ ; %@
. No app available to handle '%@'.
 with no URL. Untrusted requests may only open URLs, not launch specific applications.
. App is invalid. URL: '%@'.
. App is a placeholder and cannot be opened. URL: '%@'.
. App is blocked. URL: '%@'.
. App is restricted. URL: '%@'.
. App cannot handle '%@'.
[PBD] Untrusted request from '%@' to open '%@'%@
com.apple.PineBoard.appSwitcher
com.apple.PineBoard.screenSaver
com.apple.PineBoard.userNotifications
com.apple.PineBoard.windowManager
ThermalNoticeText
ThermalNoticeSubtext
init
alloc
notificationFilter
cancel
token
numberWithInt:
objectForKey:
setNotification:
_newViewControllerForNotification:
setObject:forKey:
notificationSource
isEqual:
numberWithBool:
dictionaryWithObjects:forKeys:count:
sharedInstance
presentDialogViewController:options:
alertHeader
alertMessage
_dismissViewController:
notificationType
setDelegate:
notification
didSelectButtonAtIndex:
presentingViewController
dismissViewControllerAnimated:completion:
removeObjectForKey:
userNotificationViewController:didSelectButtonIndex:
didCancelUserNotificationViewController:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
userNotificationCenterDidReceiveCFNotification:
userNotificationCenterDidCancelCFNotification:
.cxx_destruct
setNotificationFilter:
_displayedViewControllers
_notificationFilter
colorWithWhite:alpha:
viewDidLoad
view
addLayoutGuide:
setNumberOfLines:
setTextAlignment:
title1Font
setFont:
whiteColor
setTextColor:
setText:
setTranslatesAutoresizingMaskIntoConstraints:
addSubview:
_textColor
headlineFont
bodyFont
setImage:
setTitle:target:action:forButton:
centerXAnchor
constraintEqualToAnchor:
centerYAnchor
widthAnchor
constraintEqualToConstant:
leadingAnchor
heightAnchor
constraintLessThanOrEqualToAnchor:
topAnchor
firstBaselineAnchor
lastBaselineAnchor
constraintEqualToAnchor:constant:
constraintGreaterThanOrEqualToConstant:
bottomAnchor
trailingAnchor
arrayWithObjects:count:
activateConstraints:
setNeedsUpdateConstraints
deactivateConstraints:
titleForState:
length
addObject:
copy
updateViewConstraints
isHidden
isViewLoaded
buttonWithType:
_setBlurEnabled:
_buttonColor
_setVisualEffectViewEnabled:backgroundColor:
setTitle:forState:
addTarget:action:forControlEvents:
setHidden:
setTitleColor:forState:
blackColor
titleLabel
title
_setSpeedBumpEdges:
preferredFocusEnvironments
setTitleText:
setBodyText:
setFooterText:
titleText
bodyText
footerText
image
bodyLabel
footerLabel
primaryButton
secondaryButton
footerButton
imageView
combinedGuide
textAndButtonsGuide
imageGuide
buttonConstraints
_titleText
_bodyText
_footerText
_image
_titleLabel
_bodyLabel
_footerLabel
_primaryButton
_secondaryButton
_footerButton
_imageView
_combinedGuide
_textAndButtonsGuide
_imageGuide
_buttonConstraints
diagnosticLogPaths
incrementScalarKey:
diagnosticLogPathsWithCompletion:
initWithRemoteConnection:
invalidate
remoteConnection
_remoteConnection
sharedApplication
setupPowerManagement
setSystemAppControlsFocusOnMainDisplay:
setupHIDEventRouters
setupNetworkMonitoring
connect
_startDisplayManagement
_startExternalControlManagement
setSILState_On
start
sharedPineBoardPreferences
appIdentifierHistory
_sanitizeAppIdentifierHistory:
setupProcessManagementWithRecentApplicationBundleIdentifiers:
tvs_bind:toObject:withKeyPath:options:
defaultCenter
_handleProcessDidExitNotification:
addObserverForName:object:queue:usingBlock:
startConnectionMonitoring
_startBluetoothRemoteKeepAliveTimer
_bluetoothRemoteDidConnectNotification:
addObserver:selector:name:object:
_bluetoothRemotePowerSourceLimitedSourceNotification:
startListeningForPowerSources
_handleBluetoothRemoteProximityDetection
_handleDeviceWillSleepNotification:
_handleDeviceWillWakeNotification:
_internetAvailabilityDidChangeNotification:
_blackScreenRecoveryModeNotification:
numberWithInteger:
numberWithDouble:
setMessage:
setViewControllerClassName:
setServiceIdentifier:
bulletinService
presentBulletin:withCompletion:
dismissBulletin:
removeObserver:
dealloc
registerAsSystemApp
indexSetWithIndex:
pressTypeWithKeyboardUsage:modifiers:
keyCommandWithKeyCodes:modifierFlags:buttonType:
_isButtonDownEvent:
numberWithUnsignedLongLong:
stringValue
setDeviceID:
setSourceName:
stopSiriWithContext:
sharedApplicationDelegate
shouldTogglePlayPauseOnButtonDown
shouldForwardSystemAppEvent
allPresses
count
phase
enumerateObjectsUsingBlock:
_cancelAllInputs
sharedSystem
cancelPendingVolumeActions
postNotificationName:object:
reboot
_hidEvent
isB239ButtonEvent:
incrementB239ButtonPresses
_isSystemEvent:
_shouldTriggerExternalControlActionForEvent:
sendAction:withCompletion:
anyObject
type
_pausePlayback
_processChordsWithPressesEvent:
_handlePhysicalButtonEvent:
_logButtonEventTiming:
setSILStateForHIDEvent:
_handleSystemPressHidEvent:withType:
source
_prepareButtonEvent:withPressInfo:
emitButtonTimingLogs
stringWithFormat:
_modifierFlags
_unmodifiedInput
isEqualToString:
_toggleEffectiveUserInterfaceStyle
keyWindow
_handleKeyUIEvent:
focusedProcess
isSystemApplicationProcess
indexOfObjectIdenticalTo:
removeObjectAtIndex:
_finishButtonEvent:
_removeEnqueuedEvent:
isDeviceAsleep
_isGameControllerZeroEvent:
sendEvent:
countByEnumeratingWithState:objects:count:
window
_deactivateScreenSaver
_stopAllActivity
_resumeActivity
screenSaverTrigger
isIdle
tvs_bindingAdaptor
DisplayModeBinding
_handleDisplayModeDidChange
establishBinding:toObject:withKeyPath:bindingOptions:updateHandler:
setupDisplayManagement
mainDisplay
wakeDisplay
resetUserActivityTriggersWithReason:
wakeDevice
IdleTimeOutBinding
_handleIdleTimeoutDidChange
FocusedProcessBinding
_handleFocusedProcessDidChange
PowerManagerSleepBinding
_handleDevceSleepChange
setNeedsUpdateActivityTriggersAndBackgroundTasks
_setPresenceDetectionActive:
_updateHiliteModeState
enterIdleMode:
exitIdleMode:
settings
clientProcess
state
taskState
isUISubclass
mutableCopy
setIdleModeEnabled:
updateSettings:withTransitionContext:
enumerateScenesWithBlock:
_activateScreenSaverFromUserAction:completion:
isConferenceRoomDisplayEnabled
isCRDAppFocused
launchCRDAppWithOptions:
timeoutInSeconds
sleepDeviceWithOptions:
valueForBinding:
boolValue
canDeferFirmwareUpdate
disconnectAllRemotesAndKeepPaired
startManualBluetoothRemoteUpdate
setConnectionKeepAliveTimeInSeconds:
_stopBluetoothRemoteKeepAliveTimer
enableBackgroundTasksOfType:
disableBackgroundTasksOfType:
_notifyIdleTasksEnabledDidChange
UTF8String
tasksEnabledOfType:
userInfo
noteApplicationExit
containsObject:
removeObject:
_saveRecentApplicationBundleIdentifiers
bundleIdentifier
setRecentlyUpdated:forBundleIdentifier:
remotePresenceDetectionTrigger
hiliteModeTrigger
internetAvailable
preferredDisplayMode
setPreferredDisplayMode:
presentBlackScreenRecoveryViewController
bluetoothRemoteSleepTrigger
isCharging
batteryLevel
restoreSystemFromSleepWithCompletion:
_prepareForDeviceWake
noteGoodTimeToShowWhatsNew
dismissScreenSaver
prepareSystemForSleepWithCompletion:
playing
_prepareForDeviceSleep
isAnyRemoteConnected
bluetoothRemoteKeepAliveTimeInterval
bluetoothRemoteKeepAliveTimer
isValid
_keepBluetoothRemoteAlive
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
setBluetoothRemoteKeepAliveTimer:
setSleepTimeoutInSeconds:
relaunch
isScreenSaverIdle
activateScreenSaverRequestedByClient:completion:
forwardHIDButtonEventWithUsagePage:usage:type:senderID:
insertObject:atIndex:
_enqueueHIDEvent:
preferencesWithDomain:
integerForKey:defaultValue:
synchronize
cancelScheduledActivationForAppWithBundleIdentifier:
stringByAppendingString:
userActivityTriggerWithName:timeoutInSeconds:
addUserActivityTrigger:
setTarget:
_activateAppIdleAction:
setAction:
setTrigger:
setBundleIdentifier:
setOpenURL:
appActivateInfoByBundleIdentifier
dictionary
setAppActivateInfoByBundleIdentifier:
setObject:forKeyedSubscript:
objectForKeyedSubscript:
trigger
removeUserActivityTrigger:
suppressWakeForHIDEventsTimer
_stopSupressingWakeForHIDEvents
setSuppressWakeForHIDEventsTimer:
dateWithTimeIntervalSinceNow:
setFireDate:
shouldAssertActiveSourceOnAppRestart
processInfo
systemUptime
remotePresenceDetectionDelayTimeoutInSeconds
hiliteModeTimeoutInSeconds
doubleValue
sleepTimeoutInSeconds
crdAppTimeoutInSeconds
isSleepNever
bluetoothRemoteSleepTimeoutInSeconds
isRunningInStoreDemoMode
setRemotePresenceDetectionTrigger:
_remotePresenceDetectionModeTrigger:
setHiliteModeTrigger:
_handleHiliteModeTrigger:
setScreenSaverTrigger:
_handleScreenSaverTrigger:
crdAppTrigger
setCrdAppTrigger:
_handleCRDAppTrigger:
sleepTrigger
setSleepTrigger:
_handleSleepTrigger:
setBluetoothRemoteSleepTrigger:
_handleBluetoothRemoteSleepTrigger:
_setIdleTimerDisabled:
playingMusic
_setIdleBackgroundTasksEnabled:
_setNormalBackgroundTasksEnabled:
idleTypeBackgroundTasksTrigger
setIdleTypeBackgroundTasksTrigger:
_handleIdleBackgroundTasksTrigger:
_updateUserActivityTriggers
_updateBackgroundTaskScheduling
recentApplicationBundleIdentifiers
setAppIdentifierHistory:
_setHeadBoardStoreDemoAppOrderFilePath:
activateScreenSaverFromUserAction:completion:
setPresenceDetectionEnabled:
startTimingForKey:
stopTimingForKey:
_focusedSceneHasHiliteModeEnabled
_setHiliteModeActive:
scenesPassingTest:
clientSettings
idleModeVisualEffectsEnabled
nowPlayingProcessPID
processForPID:
openURL
activateApplication:openURL:suspended:completion:
arrayWithCapacity:
applicationProxyForIdentifier:
isInstalled
beginAppTransitionWithTransaction:
context
sendResponse:
saveSnapshotForScene:context:completion:
invalidateSnapshotsForBundleIdentifier:
UIActionType
kioskAppBundleIdentifier
handleUnhandledMenuEvent
handleFocusedAppRequestDeactivation
settingsByApplyingToMutableCopyOfSettings:
statusBarStyle
statusBarHidden
isStatusBarForegroundTransparent
statusBarContextID
defaultStatusBarStyle
defaultStatusBarHidden
defaultPNGName
defaultPNGExpirationTime
compatibilityMode
deviceOrientationEventsEnabled
interfaceOrientationChangesDisabled
interfaceOrientation
supportedInterfaceOrientations
idleTimerDisabled
proximityDetectionModes
controlCenterRevealMode
notificationCenterRevealMode
primaryWindowOverlayInsets
backgroundStyle
whitePointAdaptivityStyle
client:setIdleTimerDisabled:
isApplicationProcess
presentingAppSwitcher
presentAppSwitcher
sceneManager:scene:didUpdateClientSettingsWithDiff:oldClientSettings:transitionContext:
sceneManager:scene:didReceiveActions:
sceneManager:hostingPolicyForScene:
sceneManager:createDefaultTransitionContextForScene:
sceneManager:didCreateScene:withClient:
sceneManager:willUpdateScene:withSettings:transitionContext:
sceneManager:willCommitUpdateForScene:transactionID:
sceneManager:didCommitUpdateForScene:transactionID:success:
sceneManager:willDestroyScene:
sceneManager:didDestroyScene:
sceneManager:didCommitUpdateForScene:transactionID:
bulletinService:didDismissBulletin:withReason:
powerManagerUserEventWantsWakeDevice:
finishSystemAppLaunch
_showStackShotIndication
_showSysdiagnoseIndication
_hideSysdiagnoseIndication
_accessibilityIsSystemAppServer
resignActive
keyCommands
_validatePresses:forWindow:
stopAllActivity
resumeActivity
tvs_bindDisplayModeBindingToObject:withKeyPath:options:
resetIdleTimerAndUndim
tvs_bindIdleTimeOutBindingToObject:withKeyPath:options:
tvs_bindFocusedProcessBindingToObject:withKeyPath:options:
tvs_bindPowerManagerSleepBindingToObject:withKeyPath:options:
client:setSleepTimeout:
sleepRequestedByClient:forReason:
wakeRequestedByClient:forReason:
relaunchBackboarddRequestedByClient:
relaunchRequestedByClient:
rebootRequestedByClient:
noteUserPresenceDetected
activateScreenSaverRequestedByClient:
deactivateScreenSaverRequestedByClient:
sendMenuButtonEventRequestedByClient:
sendEventData:fromClient:
effectiveUserInterfaceStyleFromClient:
setEffectiveUserInterfaceStyle:fromClient:
activateAppIfPlayingMusicAfterIdleTime:bundleIdentifier:openURL:
userActivityTriggeredForReason:
temporarilySuppressWakeForHIDEvents
handleAppTransition:
appSwitcherWindow
activateAppSwitcher
airPlayActive
setAirPlayActive:
_bulletinService
_networkBulletin
_sysdiagnoseBulletin
_clientsWantingIdleTimerDisabled
_needsAdjustToDisplayChange
_needsUpdateActivityTriggersAndBackgroundTasks
_inhibitScreenSaver
_processingIgnorableEventDuringSleep
_wakeForHIDEvents
_processingSysdiagnose
_enqueuedEvents
_airPlayActive
_bluetoothRemoteKeepAliveTimer
_remotePresenceDetectionTrigger
_hiliteModeTrigger
_screenSaverTrigger
_sleepTrigger
_bluetoothRemoteSleepTrigger
_idleTypeBackgroundTasksTrigger
_crdAppTrigger
_appActivateInfoByBundleIdentifier
_suppressWakeForHIDEventsTimer
_bundleIdentifier
_openURL
_trigger
suppressIssueDataExport
reportLatestIssueData
sharedScreenSaverPreferences
_updateActivationDelay
_initializeStateMachine
domain
_notifyPhotosSourcesDaemon
addObserverForDomain:withDistributedSynchronizationHandler:
initWithObjectsAndKeys:
tvs_setObjectIfNotNil:forKey:
postEvent:withContext:userInfo:
currentState
stateMachine
initWithName:initialState:mode:
setLogObject:
_activateScreenSaverViewControllerWithInfo:
registerHandlerForEvent:onState:withBlock:
pendingActivationRequests
registerHandlerForEvent:onStates:withBlock:
needsDismissal
postEvent:
executeBlockAfterCurrentStateTransition:
_postSystemDidChangeIdleState:
presentCRDInstructionsWindowForClient:
setNeedsDismissal:
_dismissScreenSaver
setShouldAcceptEvents:
removeAllObjects
hideDialogWindowForClient:
unhideDialogWindowForClient:
presentScreenSaverWithOptions:completion:
dismissCRDInstructionsWindowForClient:
setScreenSaverViewController:
dismissScreenSaverWithOptions:completion:
bounds
drawViewHierarchyInRect:afterScreenUpdates:
saveWallpaperForSnapshotImage:completion:
lock
unlock
idleScreenEnabled
bundleURL
bundleWithURL:
objectForInfoDictionaryKey:
holdOffForMusicEnabled
allowsScreenSaverOverMusic
activationDelay
setScreenSaverActivationDelayInMinutes:
initialize
fetchInitialPhotoAssets
setHoldOffForMusicEnabled:
screenSaverIsActive
_saveScreenSaverSnapshotForWindow:completion:
_screenSaverAppBundleID
_screenSaverControllerClassNameForAppBundleID:
screenSaverActivationDelayInMinutes
displayState
screenSaverPrefs
screenSaverViewController
_holdOffForMusicEnabled
_needsDismissal
_screenSaverActivationDelayInMinutes
_displayState
_screenSaverPrefs
_stateMachine
_pendingActivationRequests
_screenSaverViewController
initWithNibName:bundle:
setModalPresentationStyle:
setTransitioningDelegate:
array
textFieldTitles
_configureStateMachine
loadView
_menuButtonPressed:
initWithTarget:action:
_setButtonType:
addGestureRecognizer:
_handleHomeButton
setAllowedPressTypes:
viewWillAppear:
layoutIfNeeded
initForPresenting:
initWithPresentedViewController:presentingViewController:
initWithName:initialState:mode:stateChangeHandler:
_showTextEntryViewControllerForTextField:
registerDefaultHandlerForEvent:withBlock:
userValues
setTextFieldEnteredValues:
dialogDefaultButtonIndex
otherButtonIndex
alternateButtonIndex
defaultButtonIndex
objectAtIndex:
stringByAppendingFormat:
textFieldInitialValues
textField
setAutocapitalizationType:
setAutocorrectionType:
setEnablesReturnKeyAutomatically:
keyboardTypeForTextField:
setKeyboardType:
isSecureTextField:
setSecureTextEntry:
setKeyboardAppearance:
_titleStringAttributes
initWithString:attributes:
setTitle:
_messageStringAttributes
setTopAccessoryView:
_buttonsForTextField:defaultButtonIndex:
initWithButtons:
setDefaultButtonIndex:
setBottomAccessoryView:
_showChildViewController:
isLastTextField:
otherButtonTitle
setTag:
alternateButtonTitle
defaultButtonTitle
willMoveToParentViewController:
removeFromSuperview
removeFromParentViewController
addChildViewController:
setFrame:
didMoveToParentViewController:
childViewController
text
setObject:atIndexedSubscript:
postEvent:withContext:
bottomAccessoryView
buttonAtIndex:
delegate
buttonView:didSelectButton:atIndex:
kioskApplicationIdentifier
handleTVTapEvent
title3Font
clearColor
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
animationControllerForPresentedController:presentingController:sourceController:
animationControllerForDismissedController:
interactionControllerForPresentation:
interactionControllerForDismissal:
presentationControllerForPresentedViewController:presentingViewController:sourceViewController:
textEntryControllerDidFinish:
updateWithNotification:
setChildViewController:
menuRecognizer
setMenuRecognizer:
setStateMachine:
currentTextField
setCurrentTextField:
setUserValues:
_notification
_delegate
_childViewController
_menuRecognizer
_currentTextField
_userValues
mainBundle
initializeLoggingWithDomain:persistentComponents:
setLoggingComponent:
logUnhandledEvents
_registerHandlers
productType
initWithAssetType:
predicateWithFormat:
setPredicate:
predicate
noteStage:
_storeURLBagLoaded:
_processEvent:
stopQuery
cancelPurge:
setDeferredAction:
_nameForAction:
initWithDomain:code:userInfo:
deferredAction
action
machine
osUpdateProcessDidStartCheckWithData:
osUpdateProcessDidFinishCheckWithData:
_purgePreviousAssets
setState:
_performCheck
removeObserver:name:object:
asset
attributes
_wasStartedForRestore
_wasStartedByBackgroundCheck
prepareForUpdateToOSBuild:forRestore:triggeredManually:
_clearAssetDownloadSpace
_cancelUpdatePreDownload
setUserConfirmedApplyAtCheckTime:
_downloadAsset
_cancelUpdateDuringDownload
osUpdateProcessDidStartApplyWithData:
_clearBrainDownloadSpace
_recheckForNewerUpdate
osUpdateProcessDidStartRedownloadWithData:
_cancelUpdateDuringApply
setIsApplyingRecheckedUpdate:
errorWithDomain:code:userInfo:
_resultUserInfoWithError:
osUpdateProcessDidFinishDownloadWithData:
_downloadBrain
_clearVerifyAndUnarchiveSpace
_verifyAndUnarchiveUpdate
_clearPrepareAndApplySpace
_cancelAndRebootDuringVerifyUnarchive
_prepareAndApplyUpdate
_cancelAndRebootDuringApply
setNeedToCancelMSUOperation:
defaultManager
stringByAppendingPathComponent:
fileExistsAtPath:isDirectory:
removeItemAtPath:error:
setQueriesLocalAssetInformationOnly:
cancelDownloadAndReturnError:
purgeAndReturnError:
code
startQuery:
configurationInfo
personalizationServerURLString
accountID
password
date
setLastCheckDate:
setAsset:
setAssetIsLarge:
longLongValue
_goodTimeToDownloadUpdate
_determineAssetToApplyAsync:
shouldForceRedownloadOnce
setShouldForceRedownloadOnce:
compareOSVersion:andBuild:withOSVersion:andBuild:
runningAnInternalBuild
assetQuery
systemVersion
systemBuildVersion
systemReleaseType
indexesOfObjectsPassingTest:
objectsAtIndexes:
sortedArrayUsingComparator:
isApplyingRecheckedUpdate
osUpdateProcessDidStartDownloadWithData:
_checkAndClearAssetDownloadSpaceAttempt:
mediaFreeSpace
_spaceCheckOptions
requiredDiskSpaceIsAvailableForDownloadOptions:requiredBytes:error:
_processDownloadSpaceCheckForRequiredSpace:hasSpace:error:
setCacheDeletePurgeID:
purgeSpace:withCompletion:
_continueWithSufficientSpaceFor:
_handleProgressCallbackWithState:error:
setProgressHandler:
setSentDownloadFinishedCallback:
beginDownloadWithOptions:
_processBrainDownloadSpaceCheckForBrainSize:error:
osUpdateProcessDidFinishApplyWithData:
_processVerifyAndUnarchiveSpaceCheckForRequiredSpace:hasSpace:error:
_startSlowUpdateTimer
_stopSlowUpdateTimer
resumeDownload:
_clearPrepareAndApplySpaceWithInstallationSize:andPadding:
_processPrepareAndApplyForRequiredSpace:andError:
localURL
imageForStep2of2
_prepareAndApplyUpdateThreadedWithImage:
_handleProgressCallbackError:inState:
_handleProgressCallbackQueuedWithState:
_handleProgressCallbackDownloadingWithState:
_handleProgressCallbackPausedWithState:
_handleProgressCallbackVerifyExtractWithState:
numberWithFloat:
osUpdateProcessDidUpdateDownloadProgressWithData:
floatValue
sentDownloadFinishedCallback
osUpdateProcessDidUpdateApplyProgressWithData:
cacheDeletePurgeID
purge:
_cleanUpAsset
_assetCleanupHandler:
cancelDownload:
_forceRebootAfterCancel
slowUpdateRebootCount
setSlowUpdateRebootCount:
sharedPineBoardServicesPreferences
pbs_shouldObliterateOnLaunch
setPbs_shouldObliterateOnLaunch:
synchronizeAllDomains
slowUpdateTimeoutInSeconds
_slowUpdateTimerFired:
setSlowUpdateTimer:
slowUpdateTimer
osUpdateProcessDidEncounterSlowUpdateWithData:
userConfirmedApplyAtCheckTime
dictionaryWithObjectsAndKeys:
localizedDescription
tvs_threePartVersionCompare:
compare:options:
sharedProcess
configureForAction:error:
isRunning
resumeAfterUpdateCheck
resumeAfterDownload
cancelForReason:
rebootDueToSlowUpdate
_handleBrainDownloadProgressCallbackWithState:error:
_updateProgressStatus:
setMachine:
setAssetQuery:
needToCancelMSUOperation
assetIsLarge
_needToCancelMSUOperation
_assetIsLarge
_isApplyingRecheckedUpdate
_sentDownloadFinishedCallback
_userConfirmedApplyAtCheckTime
_state
_machine
_action
_deferredAction
_assetQuery
_asset
_slowUpdateTimer
_cacheDeletePurgeID
_loadBundlesFromDirectory:
URLWithString:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
pathExtension
bundlePath
loadAndReturnError:
principalClass
isSubclassOfClass:
initWithPluginHost:
pbUIPluginDidLoad
loadPlugins
pluginControllerForBundleIdentifier:
_loadedPluginsByBundleID
setPresentedViewController:
presentSiriViewController:
presentedViewController
dismissSiriWindow
hideSiriWindow
setSiriIsFullscreen:
presentViewController:
dismissViewController:
hideViewController:
didChangeMode:
_presentedViewController
requestWithBundleIdentifier:
variant
preferLaunchImage
copyWithZone:
setPreferLaunchImage:
setVariant:
_preferLaunchImage
_variant
setCompletion:
setDefaultTitle:
setDefaultMessage:
addTextFieldWithInitialText:placeholder:keyboardType:
addButtonWithTitle:
presentDialogViewController:
alertControllerWithTitle:message:preferredStyle:
actionWithTitle:style:handler:
addAction:
completion
enteredValues
firstObject
textEntry:didSelectButtonAtIndex:
textEntryDidCancel:
textEntry:willPresentTextField:
textEntry:didSubmitTextFieldAtIndex:
presentAlertWithTitle:message:completion:
presentFailureAlertWithTitle:message:completion:
_completion
initWithType:item:fromIndexPath:toIndexPath:
deleteUpdateWithItem:indexPath:
insertUpdateWithItem:indexPath:
item
fromIndexPath
toIndexPath
_type
_item
_fromIndexPath
_toIndexPath
animationWithKeyPath:
functionWithControlPoints::::
_basicAnimationForView:withKeyPath:
_timingFunctionForAnimation
_timingFunctionForAnimationInView:withKeyPath:
_shouldAnimateAdditivelyForView:withKeyPath:
exceptionWithName:reason:userInfo:
process
isForeground
isAppSwitcherTransition
fromBundleIdentifier
toBundleIdentifier
launchedByDeactivation
applicationType
dataContainerURL
path
launchURL
isFirstUserLaunch
abortTransition
viewDidLayoutSubviews
overlayHostContainer
transitionTransaction
appTransitionWillBeginForContext:
_beginInitialTransitionAnimation
_complete
_beginFinalTransitionAnimation
_synchronizeDrawing
sceneWithIdentifier:
hostManager
disableHostingForRequester:
transitionType
initWithBundleIdentifier:hasBackground:loadRequestBuilder:
initWithBundleID:hasBackground:requester:
setUseSnapshot:
setTransform:
setAlpha:
_installOverlayWindowsInOverlayContainer
setVisibleViewAfterInitialAnimation:
sendSubviewToBack:
_wallpaperViewForVariant:bundleIdentifier:
_synchronizedDrawingFence
notifyStartKioskAppTransitionForType:animationDuration:animationFence:delay:
setHasBackground:
_animateWithDuration:delay:options:factory:animations:completion:
_startForegroundUpdate
visibleViewAfterInitialAnimation
insertSubview:below:
animateWithDuration:delay:options:animations:completion:
beginForegroundTransition
appTransitionDidCompleteForContext:
_disableOverlayWindowsHosting
overlayWindows
_scene
identifier
hostViewForRequester:
enableHostingForRequester:orderFront:
contextReadyForFinalTransition:
contextForegroundUpdateComplete:
contextTransitionDidFail:
initWithCoder:
initWithTransitionTransaction:
addOverlayWindow:
kioskIdentifier
shouldUseLaunchImage
animationDuration
setOverlayWindows:
setOverlayHostContainer:
_shouldUseLaunchImage
_transitionTransaction
_kioskIdentifier
_animationDuration
_transitionType
_visibleViewAfterInitialAnimation
_overlayWindows
_overlayHostContainer
initWithFrame:
setWindowLevel:
setOpaque:
setContentMode:
redColor
colorWithAlphaComponent:
setFill
_canBecomeKeyWindow
_ignoresHitTest
drawRect:
setIdentifier:
providerType
setProviderType:
_identifier
_providerType
initWithBundleIDs:states:
clearEndpointsForIdentifier:
setHandler:
loggingEnabledForComponent:atLevel:
logActivity:forComponent:format:
stopProfilingActivity:
allKeys
addObjectsFromArray:
startProfilingActivity:forLogComponent:
null
registerEndpoint:forIdentifier:providerType:
endpointForIdentifier:providerType:responseBlock:
_appStateMonitor
_clientEndpoints
_clientResponseBlocks
_registerWindowNotificationHandlers
initWithCapacity:
initWithDisplayType:identifier:elementClass:
activate
radioAdWindow
dialogWindow
_presentedDialogIsRemote
siriWindow
airPlayWindow
nowPlayingWindow
restrictionPINWindow
crdLoadingWindow
screenSaverWindow
pendingDialogRequests
_dialogRequestIsRemote:
viewController
endSiriSession
_highestPriorityWindow
_lazyScreenSaverWindow
presentScreenSaverViewControllerWithOptions:completion:
relinquish
initWithReason:
acquire
_destroyScreenSaverWindow:
dismissScreenSaverViewControllerWithOptions:completion:
setRootViewController:
setScreenSaverWindow:
_beginPendingTransitionTransaction
isKeyWindow
_lazyNowPlayingWindow
_rootNavigationViewControllerForWindow:
pushViewController:animated:
topViewController
animateWithDuration:animations:completion:
setNowPlayingWindow:
prepareViewServiceWithOptions:
integerValue
setDismissResultHandler:
crdInstructionsWindow
_lazyRestrictionPINWindow
requestViewController:fromServiceWithBundleIdentifier:connectionHandler:
setRestrictionPINWindow:
_lazyRadioAdWindow
setRadioAdWindow:
_lazyBlackScreenRecoveryWindow
availableDisplayModes
displayResolutionFormatter
stringForObjectValue:
blackScreenRecoveryControllerWithModeName:iterateAvailableModes:completionHandler:
presentViewController:animated:completion:
blackScreenRecoveryWindow
setBlackScreenRecoveryWindow:
_lazySiriWindow
_unhideSiriWindow
setUseSnapshotForSiri:animated:
removeViewController:completion:
dialogHiddenClients
_unhideDialogWindowForClients:
_schedulePresentDialog
isWaitingForStartListening
_willHideSiriWindow
setSiriWindow:
snapshotViewAfterScreenUpdates:
insertSubview:atIndex:
setViewControllers:animated:
transitionWithView:duration:options:animations:completion:
requestWithViewController:
setOptions:
options
tvs_boolForKey:defaultValue:
_executePresentationRequest:
_enqueueDialogPresentationRequest:
setWithObject:
_retirePresentationRequestForViewController:
indexOfObjectPassingTest:
_dismissDialogWindow
setDialogWindow:
_presentNextDialog
criticalAlertWindow
softwareUpdateWindow
appTransitionWindow
_suspendDialogWindow
_lazyDialogWindowForRequest:
visibleViewController
windowManagerWillPresentDialogViewController:
modalPresentationStyle
presentingSiriSession
setTimeoutInSeconds:
_enqueueBulletinPresentationRequest:
presentedBulletinViewController
pendingBulletinRequests
dismissBulletinWindow
_schedulePresentBulletin
bulletinWindow
setBulletinWindow:
rootViewController
setPresentedBulletinViewController:
_presentNextBulletin
_lazyBulletinWindow
windowManagerWillPresentBulletinViewController:
_cancelBulletinTimer
applicationRetireBulletinViewController:
mainScreen
setSoftwareUpdateWindow:
setCriticalAlertWindow:
_lazyAirPlayWindow
dismissNowPlayingWindow
setAirPlayWindow:
_shouldActivateAppSwitcher
_lazyAppSwitcherWindow
exitToCurrentApplication
isAppSwitcherEnabled
shouldActivateForProcessWithIdentifier:
setAppSwitcherWindow:
appTransitionHelper
presentingAppTransition
failWithReason:
activeTransitionContext
_cancelPendingTransitionTransactions
pendingTransitionTransactions
handleTransitionWithContext:completion:
initWithDisplayType:name:
beginTransition
_lazyAppTransitionWindow
isSuspended
resumeSiriSession
_dismissAppTransitionWindow:
_updateLayoutElementsWithFocusedProcess:
endTransition
setAppTransitionHelper:
setCompletionBlock:
_dismissWindowsForAppLaunch:
begin
launchedForPlayback
_lazyPlaybackLaunchShroudWindow
_beginAppTransitionTransaction:withCompletionHandler:
launchOverSiri
suspendSiriSession
windowLevel
dismissAirPlayWindow
_dismissAppSwitcherWindow
setAppTransitionWindow:
cancelCRDAppLaunch
_lazyCRDLoadingWindow
setCrdLoadingWindow:
crdInstructionWindowIdentifier
setCrdInstructionWindowIdentifier:
crdInstructionWindowGroup
_lazyCRDInstructionsWindow
presentingPINRequest
updateViewServiceWithOptions:
_incrementCRDInstructionWindowIdentifier
setCrdInstructionsWindow:
playbackLaunchShroudWindow
initWithFrame:name:
setShouldOcclude:
setBackgroundColor:
setPlaybackLaunchShroudWindow:
setVolumeGestureRecognizersEnabled:
setMicrophoneGestureRecognizersEnabled:
setTVGestureRecognizersEnabled:
setExposeAllGestureRecognizerEnabled:
setMenuGestureRecognizersEnabled:
setPlaybackGestureRecognizersEnabled:
setDirectionalGestureRecognizersEnabled:
setSelectGestureRecognizersEnabled:
_dismissAirPlayWindow
setDismissLastViewControllerBlock:
_dismissNowPlayingWindow:
_dismissRestrictionPINWindow:
_dismissRadioAdWindow:
_dismissBlackScreenRecoveryWindow:
wallpaperWindow
setWallpaperWindow:
_dismissCRDLoadingWindow:
_dismissCRDInstructionsWindow:
makeKeyWindow
focusedAppDisplayLayoutElement
deactivate
setLevel:
setFillsDisplayBounds:
setUIApplicationElement:
activateWithBuilder:
mainQueue
object
_cancelGestureRecognizersForView:
_updateKeyWindow
navigationController:didDismissViewController:
navigationController:willShowViewController:animated:
navigationController:didShowViewController:animated:
navigationControllerSupportedInterfaceOrientations:
navigationControllerPreferredInterfaceOrientationForPresentation:
navigationController:interactionControllerForAnimationController:
navigationController:animationControllerForOperation:fromViewController:toViewController:
isScreenSaverWindowKey
presentingNowPlaying
presentNowPlayingViewController:
presentRestrictionPINWindow:
dismissRestrictionPINWindow
presentRadioAdViewController:
dismissRadioAdWindow
dismissBlackScreenRecoveryWindow
presentingDialogWindow
dismissDialogViewController:
presentBulletinViewController:withTimeoutInSeconds:
updateBulletinViewControllerTimeout:timeoutInSeconds:
dismissBulletinViewController:
presentSoftwareUpdateWindow
dismissSoftwareUpdateWindow
presentThermalWarningWindow
dismissThermalWarningWindow
presentingAirPlay
presentAirPlayViewController:
dismissAppSwitcher
cancelCurrentAppTransition
presentingCRDLoadingWindow
presentCRDLoadingWindow
dismissCRDLoadingWindow
presentingCRDInstructionsWindow
presentCRDInstructionsWindow
setShouldAnimateCRDInstructionsHUD:
dismissCRDInstructionsWindow
_lazyWallpaperWindow
_highestPriorityWindowBelow:eventsOnly:
siriIsFullscreen
shouldAnimateCRDInstructionsHUD
screenSaverTransitionViewController
bulletinDismissalTimer
airPlayAssertion
setAirPlayAssertion:
appSwitcherAssertion
setAppSwitcherAssertion:
dialogAssertion
setDialogAssertion:
screenSaverAssertion
setScreenSaverAssertion:
siriAssertion
setSiriAssertion:
siriFullscreenAssertion
setSiriFullscreenAssertion:
setFocusedAppDisplayLayoutElement:
setCrdInstructionWindowGroup:
useSnapshotForSiri
siriViewController
siriSnapshotView
_hasScheduledPresentDialog
_hasScheduledPresentBulletin
_siriIsFullscreen
_shouldAnimateCRDInstructionsHUD
_useSnapshotForSiri
_presentedBulletinViewController
_softwareUpdateWindow
_criticalAlertWindow
_airPlayWindow
_bulletinWindow
_playbackLaunchShroudWindow
_dialogWindow
_siriWindow
_nowPlayingWindow
_restrictionPINWindow
_screenSaverWindow
_appSwitcherWindow
_appTransitionWindow
_wallpaperWindow
_radioAdWindow
_blackScreenRecoveryWindow
_crdLoadingWindow
_crdInstructionsWindow
_dialogHiddenClients
_screenSaverTransitionViewController
_bulletinDismissalTimer
_pendingDialogRequests
_pendingBulletinRequests
_pendingTransitionTransactions
_airPlayAssertion
_appSwitcherAssertion
_dialogAssertion
_screenSaverAssertion
_siriAssertion
_siriFullscreenAssertion
_focusedAppDisplayLayoutElement
_appTransitionHelper
_crdInstructionWindowIdentifier
_crdInstructionWindowGroup
_siriViewController
_siriSnapshotView
_viewController
_options
_timeoutInSeconds
_runCompletionsForContext:
fetchAvailableRoutesWithCompletionHandler:
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:context:
selectedRoute
routeDeviceType
volumeControl
_presentVolumeBulletinForRoute:
observeValueForKeyPath:ofObject:change:context:
stepSize
volume
routeName
numberWithUnsignedInteger:
volumeBulletin
updateBulletin:withMessage:withCompletion:
setVolumeBulletin:
startObserving
stopObserving
setBulletinService:
routingController
setRoutingController:
_observing
_volumeBulletin
_routingController
swipeUpProgress
setSwipeUpProgress:
swipeUpItem
setSwipeUpItem:
_swipeUpProgress
_swipeUpItem
_handleWhatsNewNeedsBecomeActiveNotification
_launchWhatsNewAppInBackground
checkTimeInterval
_scheduleWhatsNewCheckTaskWithInterval:
_isTVWhatsNewAppFocused
launchWhatsNewAppInBackground:
whatsNewApplicationIdentifier
unregisterBackgroundTask:
initWithType:interval:delay:async:
_isHeadBoardAppFocused
setPerformBlock:
registerBackgroundTask:
startWhatsNewMonitoring
dismissWhatsNew
setCheckTimeInterval:
_monitoringStarted
_shouldRetryShowingWhatsNew
_whatsNewCheckTask
_checkTimeInterval
_currentCheckTimeInterval
_whatsNewNotifyToken
_whatsNewApplicationIdentifier
layoutAttributesForCellWithIndexPath:
setContentOffset:
setContentScale:
setSnapshotOffset:
setCornerRadius:
setBlurRect:
setBlurRadius:
setShadowAlpha:
setTextAlpha:
setHeaderHidden:
setSize:
setCenter:
setTransform3D:
setZIndex:
_attributesForIndexPath:scrollProgress:swipeOffset:swipeIndex:
screenWidth
screenHeight
_screenWidth
_screenHeight
accessibilityElement
bundleId
semanticContext
tvSchemaCommandsKeyCompactIRI
tvs_arrayForKey:
tvs_stringForKey:
initWithAccessibilityElement:
setSemanticContext:
commandScreenActionItems
_visibleScreenActionItemsWithSemanticContext
_focusableScreenActionItems
_filteredScreenActionItems:applicationScreenActionItems:screenActionItemsWithSemanticContext:
addIndex:
removeObjectsAtIndexes:
currentScreenActionItems
elementsWithSemanticContext
siriContentElementsWithSemanticContext
_screenActionItemsFromAccessibilityElements:
nativeFocusableElements
siriContentNativeFocusableElements
tvSchemaTypeSoftwareApplicationNavigationCommandCompactIRI
screenActionItemForIdentifier:
setAccessibilityElement:
setCommandScreenActionItems:
_accessibilityElement
_semanticContext
_commandScreenActionItems
_isEqualToSiriScreenItem:
_defaultSemanticContext
_defaultIdentifier
_firstAvailableChooseActionName
scrollToVisible
isNativeFocused
setNativeFocus
elementForAttribute:
performAction:
setValue:
performAction:withValue:
label
buttonSemanticContextWithName:
linkedDataDictionary
stringByReplacingOccurrencesOfString:withString:
traits
frame
uiElement
stringWithAXAttribute:
peformActionWithName:parameters:
_sharedInstance
_configureAggregateDataReporting
_configureMemoryPressureReporting
_configureThermalPressureReporting
_configureEDIDReporting
_reportDataNow
_reportNANDStatistics
sharedAggregateDictionary
incrementKey:
keyTimingStarts
timeIntervalSinceReferenceDate
keyTimingTotals
_collectLogPaths
initWithBlock:
setName:
setQualityOfService:
sharedConnection
effectiveBoolValueForSetting:
_schedulePeriodicTrigger
_sendDiagnosticLogs:
allValues
valueForKeyPath:
_pushDiagnosticLogsAtPaths:
_collectAVLog
_collectMediaserverLogPaths
_collectPlaybackLogPaths
_collectWiFiLogPaths
_collectAirPlayLogPaths
_collectThermalLogPaths
_collectBluetoothLogPaths
_collectConfigLogs
emitDiagnosticAVLog
contentsOfDirectoryAtPath:error:
hasPrefix:
copyItemAtPath:toPath:error:
emitPlaybackLogs
enumeratorAtPath:
nextObject
emitThermalLogs
boolForKey:
emitConfigLogs
dictionaryWithObject:forKey:
_recordEDID
toReportEDIDData
inverseUniqueID
getPersistentIdentifierForDNU:
writeToFile:atomically:
fileExistsAtPath:
_showPushedIndicatorForCount:
height
pushValue:forKey:
EDIDLoggingTimePeriodInSeconds
lastSentEDIDTimestamp
timeIntervalSinceDate:
setLastSentEDIDTimestamp:
_sendEDIDURLRequest:
_reportingURLForTopic:
valueForKey:
_sendToURL:withSubtopic:andParameters:
gatherUsageReportingDataWithCompletion:
figaroLoggingURL
dictionaryWithDictionary:
addEntriesFromDictionary:
objectEnumerator
URLQueryAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
componentsJoinedByString:
requestWithURL:
setTimeoutInterval:
initWithURL:
documentLoaderWithRequestProperties:
loadWithCompletionHandler:
pairedDevices
setValue:forScalarKey:
_quantizedTimeForKey:
unsignedIntegerValue
_integer:quantizedBy:
startService
reportNow
_isDiagnosticsSubmissionAllowed
_sendEDIDLogs
_sendCoreControlUsage
_reportBluetoothData
_threadReportNANDStatistics
seenEDIDs
setSeenEDIDs:
setToReportEDIDData:
setKeyTimingStarts:
setKeyTimingTotals:
NANDReportingThread
setNANDReportingThread:
_seenEDIDs
_toReportEDIDData
_lastSentEDIDTimestamp
_keyTimingStarts
_keyTimingTotals
_NANDReportingThread
setMaxConcurrentOperationCount:
defaultWorkspace
addObserver:
allInstalledApplications
_ingestDefaultLaunchImageForBundleIdentifier:
installedApplicationWithBundleIdentifier:
initWithApplicationInfo:
setReferenceSize:
setContentTypeMask:
tv_preferredUserInterfaceStyle
setUserInterfaceStyleMask:
fetchRequest
_sortDescriptors
setSortDescriptors:
snapshotsForGroupID:fetchRequest:
variantWithIdentifier:
imageForInterfaceOrientation:
purgeImage
pb_isTemplateImage
imageWithRenderingMode:
scale
contextWithFBSContext:
createSnapshotWithContext:
_updateSnapshot:withContext:forProcessWithIdentifier:completion:
_wallpaperPathForVariant:userInterfaceStyle:
_wallpaperImageForVariant:userInterfaceStyle:
_saveWallpaperForSnapshotImage:synchronously:completion:
cancelAllOperations
stringForKey:
initWithContentsOfFile:
_userInterfaceStyleForFocusedProcess
_blurredImageWithImage:forVariant:userInterfaceStyle:
_setWallpaperImage:forVariant:userInterfaceStyle:
_plusDImageFromImage:userInterfaceStyle:
blockOperationWithBlock:
_notifyWallpaperChange
addOperations:waitUntilFinished:
_invalidateSnapshotsWithMask:forBundleIdentifier:
deleteSnapshotsForGroupID:matchingPredicate:
snapshotsForGroupID:matchingPredicate:
createSnapshotWithGroupID:
setContentType:
pb_setUserInterfaceStyle:
tvs_isLegacyApp
tv_applicationLaunchImageIsTemplate
pb_setIsTemplateImage:
initWithBundleIdentifier:scaleFactor:
generateImageForSnapshot:dataProvider:writeToFile:didGenerateImage:didSaveImage:
userInterfaceStyle
sceneID
name
pb_createSnapshotForSceneSnapshot:withName:
setContentFrame:
initWithSceneSnapshot:scaleFactor:
hasCachedImage
deleteSnapshots:
createVariantForSnapshot:withIdentifier:
pb_userInterfaceStyle
beginSnapshotAccessTransaction:completion:
compare:
sortDescriptorWithKey:ascending:comparator:
settingsForPrivateStyle:
_applyBackdropViewSettings:includeTints:includeBlur:allowImageResizing:
size
drawInRect:blendMode:alpha:
stringByDeletingLastPathComponent
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
applicationInstallsDidStart:
applicationInstallsDidChange:
applicationInstallsDidUpdateIcon:
applicationsWillInstall:
applicationsDidInstall:
pluginsDidInstall:
applicationsDidFailToInstall:
applicationsWillUninstall:
pluginsWillUninstall:
applicationsDidUninstall:
pluginsDidUninstall:
applicationsDidFailToUninstall:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidPause:
applicationInstallsDidResume:
applicationInstallsDidCancel:
applicationInstallsDidPrioritize:
applicationStateDidChange:
networkUsageChanged:
observeLaunchProhibitedApps
ingestLaunchImages
loadSnapshotImageWithRequest:
setupWallpaper
wallpaperQueue
_wallpaperQueue
initWithKeyOptions:valueOptions:capacity:
viewControllersByBulletin
_bulletinServicesByViewController
dismissViewServiceWithReason:completion:
_bulletinServiceForViewController:
_prepareToPresentViewController:
_handleApplicationDismissalForViewController:withReason:
viewControllerClassName
serviceIdentifier
_reserveTableSpaceForBulletin:error:
_bulletinForRequestID:
_setBulletin:forRequestID:
_setBulletinService:forViewController:
_setViewController:forBulletin:
_bulletinForViewController:
_completeWithBulletin:success:error:completion:
setClientPresentationCompletion:
bulletinNotificationAutoDismissalTimeInSeconds
message
_viewControllerForBulletin:
_bulletinIsPending:
_updateRequestForBulletin:withBulletin:
updateViewServiceWithBulletin:
pendingBulletinsByRequestID
removeObjectsForKeys:
setDelegateProxy:
delegateProxy
prepareViewServiceWithBulletin:
applicationActivateBulletinViewController:
applicationDismissBulletinViewController:
applicationTerminateBulletinViewController:
_viewControllersByBulletin
_pendingBulletinsByRequestID
_delegateProxy
invalidateLayout
contentOffsetAdjustmentForLastItem
collectionView
numberOfItemsInSection:
targetContentOffsetForProposedContentOffset:withScrollingVelocity:
contentInset
contentOffset
prepareLayout
indexPathForItem:inSection:
layoutAttributesClass
setOriginIndexPath:destinationIndexPath:
collectionViewContentSize
shouldInvalidateLayoutForBoundsChange:
targetContentOffsetForProposedContentOffset:
layoutAttributesForElementsInRect:
layoutAttributesForItemAtIndexPath:
originIndexPath
destinationIndexPath
shouldOffsetItemsFollowingDestination
computedAttributes
setComputedAttributes:
focusableCellSize
_shouldOffsetItemsFollowingDestination
_originIndexPath
_destinationIndexPath
_computedAttributes
_focusableCellSize
sizeToFit
layoutSubviews
setNeedsLayout
sizeThatFits:
setTitleOpacity:
titleOpacity
_title
_titleOpacity
_decrementOcclusionCounter
_updateOccludingState
_updateLayoutElements
_incrementOcclusionCounter
shouldOcclude
setOccluding:
displayLayoutElement
setInterfaceOrientation:
_referenceBounds
fullOcclusion
setOcclusions:
systemApplicationProcess
workspace
transitionContext
createSceneWithIdentifier:display:settings:initialClientSettings:clientProvider:transitionContext:
destroyScene:withTransitionContext:
handleVolumeUpLongPressEvent:
setMinimumPressDuration:
handleVolumeDownLongPressEvent:
setEnabled:
darkModeShortcutEnabled
handleTVQuadrupleTapEvent
setNumberOfTapsRequired:
handleTVTripleTapEvent
handleTVDoubleTapEvent
handleTVLongPressEvent:
handleExposeAllTapEvent
handleMicrophoneLongPressEvent:
microphoneLongPressDelayInSeconds
handleMicrophoneTapEvent:
handleMicrophoneButtonDownEvent:
handleMenuLongPressEvent:
menuLongPressDelayInSeconds
handleMenuSingleTapEvent
handleACHomeSingleTapEvent
removeGestureRecognizer:
_newTripleTapGestureRecognizerWithPressTypes:
handleSelectTapEvent
handlePlayPauseLongPressEvent:
handlePlayPauseTapEvent
handlePlayTapEvent
handlePauseTapEvent
handleStopTapEvent
handleRewindTapEvent
handleFastForwardTapEvent
handleNextTrackTapEvent
handlePreviousTrackTapEvent
handleSkipForwardsRepeatingPressEvent:
handleSkipBackwardsRepeatingPressEvent:
handleRewindLongPressEvent:
handleFastForwardLongPressEvent:
handleDirectionalTapEvent:
handleMenuTripleTapEvent
allowedPressTypes
activeKeyboard
isDictationEnabled
isOnScreen
_occlusionScene
setTripleTapMenuGestureRecognizersEnabled:
isOccluding
setDisplayLayoutElement:
_microphoneLongPressRecognizer
_microphoneTapRecognizer
_microphoneInteractionRecognizer
_tvLongPressRecognizer
_tvTapRecognizer
_tvDoubleTapRecognizer
_tvTripleTapRecognizer
_tvQuadrupleTapRecognizer
_rapidVolumeUpRecognizer
_rapidVolumeDownRecognizer
_longPressMenuRecognizer
_tapMenuRecognizer
_tapACHomeRecognizer
_tripleTapMenuRecognizer
_tapExposeAllRecognizer
_playPauseLongPressRecognizer
_rewindLongPressRecognizer
_fastForwardLongPressRecognizer
_playPauseTapRecognizer
_playTapRecognizer
_pauseTapRecognizer
_stopTapRecognizer
_rewindTapRecognizer
_fastForwardTapRecognizer
_nextTrackTapRecognizer
_previousTrackTapRecognizer
_skipForwardsRepeatingPressRecognizer
_skipBackwardsRepeatingPressRecognizer
_selectTapRecognizer
_directionalRecognizer
_shouldOcclude
_occluding
_name
_displayLayoutElement
_init
dictionaryWithCapacity:
_handleWillSleepNotification:
_handleWillWakeNotification:
routerWithDestination:
descriptorWithPage:usage:
setWithObjects:
addHIDEventDescriptors:
descriptorWithEventType:
defaultFocusedAppEventRouter
defaultSystemAppEventRouter
hidEventDescriptors
setEventRouters:
_processBatterySystemEvent:
_processConsumerEvent:
_processGenericDesktopEvent:
handlePowerToggleTapEvent
handlePowerOnTapEvent
handlePowerOffTapEvent
_setSILForButtonDown:
setSILState_Off
featureForType:
shouldAssertStandbyOnSleep
sleepDisplay
_delayedInstallSleepTimeHIDEventRouters
logLevel
shouldAdjustDisplayStateOnWake
_delayedInstallNormalHIDEventRouters
_processHIDEvent:
_processAppleVendorIRRemoteEvent:
_processAppleVendorDebugEvent:
_hidSystemClient
_normalEventRouters
isKioskAppAutoLaunchEnabled
colorWithRed:green:blue:alpha:
makeKeyAndVisible
setIdleModeActive:animated:
updateBackgroundWindowAndMakeVisible
wallpaperViewController
setWallpaperViewController:
_wallpaperViewController
_delegateDidDismissViewController:completion:
_lastViewController
dismissLastViewControllerBlock
viewControllers
lastObject
_dismissLastViewControllerBlock
pbsAvailableAppProxiesFromAppProxies:filteredWithExcludingTags:includeUnavailable:includePlaceholders:
_appDepotAppStateDidChangeNotification:
_populateItems
itemType
terminationAssertionsForBundleID:
objectAtIndexedSubscript:
initWithType:proxy:appState:manager:live:
setPendingInsertion:
indexOfObject:
_recalculateUpdates
manager:didReceiveLaunchRequestForItem:completion:
setPendingDeletion:
killApplication:removeFromRecents:
_updateItemsWithApplicationState
_applicationIdentifierToAppProxyDictionaryFromProxies:
_updateItemsWithInstalledProxyMap:
_updateItemsWithUninstalledProxyMap:
_updateItemsInstallProgressWithProxyMap:
appState
setApplicationIdentifierToAppState:
itemsIncludingUpdates
applicationIdentifierToAppState
isEnabled
setAppState:
_updateWithRemovedItems:
pbsAvailableAppProxiesFromAppProxies:filteredWithExcludingTags:
items
setApplicationProxy:
_updateForProgressChange
applicationIdentifier
isPendingInsertion
tvs_objectsPassingTest:
isPendingDeletion
enumerateObjectsWithOptions:usingBlock:
managerDidEnqueuePendingUpdates:
initWithFocusedProcessBundleID:
canSwitchToItem:
canKillItem:
handleActivationRequestForItem:completion:
handleLaunchRequestForItemWithIdentifier:completion:
handleKillRequestForItem:
applyPendingUpdates
mainMenuItem
focusedProcessItem
pendingUpdates
focusedProcessBundleID
_items
_mainMenuItem
_focusedProcessItem
_pendingUpdates
_focusedProcessBundleID
_itemsIncludingUpdates
_applicationIdentifierToAppState
reallyPerformOSSoftwareUpdateCheck
reallyPerformOSSoftwareRestore
isOSSoftwareUpdateRunning
isConnecting
cancelOSSoftwareUpdate
_obliterateDataPreservingPaths:withCompletion:
osUpdateServiceDidStartCheckWithData:
osUpdateServiceDidFinishCheckWithData:
osUpdateServiceDidStartDownloadWithData:
osUpdateServiceDidUpdateDownloadProgressWithData:
osUpdateServiceDidFinishDownloadWithData:
osUpdateServiceDidStartRedownloadWithData:
osUpdateServiceDidStartApplyWithData:
osUpdateServiceDidUpdateApplyProgressWithData:
osUpdateServiceDidEncounterSlowUpdateWithData:
osUpdateServiceDidFinishApplyWithData:
didStartCheckWithData:
checkForUpdate
restore
isUpdateRunningWithCompletion:
cancelUpdate
obliterateDataPreservingPaths:withCompletion:
didFinishCheckWithData:
didStartDownloadWithData:
didUpdateDownloadProgressWithData:
didFinishDownloadWithData:
didStartRedownloadWithData:
didStartApplyWithData:
didUpdateApplyProgressWithData:
didEncounterSlowUpdateWithData:
didFinishApplyWithData:
tv_initializeFlatIconCache
tv_disableLSWorkspaceInstallHandling
_appStateDidChange:
_appStateURL
unarchiveObjectWithFile:
terminationAssertionsForBundleID:withReason:
setCacheDeletingCount:
initWithQueue:
setObserverFeed:
_appDepotQueue
_loadInitialAppState
internalAppState
initWithDictionary:copyItems:
internalProvisionedAppIdentifiers
arrayWithArray:
_appStateForIdentifier:
_addAppStateForIdentifier:
setRecentlyUpdated:
tv_flushApplicationCachedImages
tv_preheatSmallApplicationIcon
flush
_removeAppStateForIdentifier:
badgeValueWithValue:
setBadgeValue:
badgeValue
badgeNumber
badgeString
launchKioskAppFromSetup
incrementCacheDeleting
decrementCacheDeleting
enqueueUserNotification:
_save
clearUserNotifications
initWithApplicationIdentifer:
_checkApplicationIsSystemAppRequiringProvisioning:
_setNeedsNotifyAppStateDidChange
enumerateBundlesOfType:block:
setWithArray:
minusSet:
_updateAppInfo
enforceProvisioningOnSystemAppsEnabled
disabledApplicationIdentifiers
applicationIdentifiersByBundleIdentifierMapping
_reversedDictionaryWithDictionary:
orderedSetWithCapacity:
provisionedApplicationIdentifiers
setWithCapacity:
applicationProxyForItemID:
isPlaceholder
_systemAppBundleIdentifiers
itemID
_notifyAppStateDidChange
notifySharedAppStateDidChange
archiveRootObject:toFile:
sectionID
pushSettings
setBadgeEnabled:
_updateBadgeEnabledWithInfos:
getSectionInfoWithCompletion:
URLsForDirectory:inDomains:
URLByAppendingPathComponent:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
pbsExclusionTags
applicationsOfType:
pbsAppTags
intersectsSet:
setupAppDepot
applicationService:setBadgeValue:forBundleIdentifier:
applicationService:getBadgeValueForBundleIdentifier:withCompletion:
applicationService:deleteAllSnapshotsForBundleIdentifier:
applicationService:setNextWakeDate:forBundleIdentifier:
applicationService:suspendApplicationWithBundleIdentifier:
observer:addBulletin:forFeed:playLightsAndSirens:withReply:
observer:addBulletin:forFeed:
observer:modifyBulletin:forFeed:
observer:modifyBulletin:
observer:removeBulletin:forFeed:
observer:removeBulletin:
observer:updateSectionOrderRule:
observer:updateSectionOrder:
observer:updateSectionInfo:
observer:removeSection:
observer:noteSectionParametersChanged:forSectionID:
observer:purgeReferencesToBulletinID:
observer:noteAlertBehaviorOverridesChanged:
observer:noteAlertBehaviorOverrideStateChanged:
observer:noteInvalidatedBulletinIDs:
observer:noteServerConnectionStateChanged:
observer:noteServerReceivedResponseForBulletin:
observer:prepareAttachment:beforeDeliveringBulletin:withCompletionHandler:
observerShouldFetchAttachmentImageBeforeBulletinDelivery:
observerShouldFetchAttachmentSizeBeforeBulletinDelivery:
observer:thumbnailSizeConstraintsForAttachment:bulletin:
observer:thumbnailSizeConstraintsForAttachmentType:
observer:processData:forAttachment:bulletin:completionHandler:
observer:composedImageFromThumbnailData:forAttachment:bulletin:completionHandler:
observer:composedImageSizeForAttachment:bulletin:thumbnailSize:
observer:composedAttachmentImageForType:thumbnailData:key:
observer:composedAttachmentSizeForType:thumbnailWidth:height:key:
provisionedAppIdentifiers
addAppStateForApplicationProxies:
removeAppStateForApplicationProxies:
incrementCacheDeletingForBundleIdentifier:
decrementCacheDeletingForBundleIdentifier:
enqueueUserNotification:forBundleIdentifier:
clearUserNotificationsForBundleIdentifier:
setNeedsReload
setInternalAppState:
setInternalProvisionedAppIdentifiers:
setEnforceProvisioningOnSystemAppsEnabled:
bbObserver
setBbObserver:
_needsReload
_needsNotifyAppStateDidChange
_enforceProvisioningOnSystemAppsEnabled
_internalAppState
_internalProvisionedAppIdentifiers
_bbObserver
bulletinServiceBeginPresentationWithBulletin:
bulletinServiceUpdateWithBulletin:
bulletinServiceEndPresentationWithReason:completion:
bulletinServiceWillPresentBulletin:
_exportedInterface
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
serviceViewControllerProxy
_callClientCompletionWithSuccess:error:
viewDidAppear:
viewServiceDidTerminateWithError:
clientPresentationCompletion
serviceViewControllerInterface
_clientPresentationCompletion
contentScale
snapshotOffset
cornerRadius
blurRadius
blurRect
shadowAlpha
shadowBlurRadius
setShadowBlurRadius:
textAlpha
isHeaderHidden
valueWithCGRect:
_headerHidden
_contentOffset
_contentScale
_cornerRadius
_blurRadius
_shadowAlpha
_shadowBlurRadius
_textAlpha
_snapshotOffset
_blurRect
allocWithZone:
_singleton
_startServices
_notifyKioskAppHandleHomeButtonWithCompletion:
_notifyKioskAppPurgeTopShelfContentForApplicationIdentifiers:
_notifyStartKioskAppTransitionForType:animationDuration:animationFence:delay:
_notifyStartIdleScreenAppTransitionForType:animationDuration:animationFence:delay:
_notifySharedAppStateDidChange
_prepareForKioskAppTransitionWithCompletion:
_activeConnections
setWithSet:
headBoardConnection
kioskAppHandleHomeButtonWithCompletion:
initWithBundleIdentifier:flags:reason:name:withHandler:
kioskAppPurgeTopShelfContentForApplicationIdentifiers:
startKioskAppTransitionForType:animationDuration:animationFence:delay:
idleScreenConnection
startIdleScreenAppTransitionForType:animationDuration:animationFence:delay:
sharedAppStateDidChange
prepareForKioskAppTransitionWithCompletion:
initWithMachServiceName:
resume
initWithConnection:
clientBundleIdentifier
setHeadBoardConnection:
setIdleScreenConnection:
_handleInvalidationForConnection:
setInvalidationHandler:
notifyKioskAppHandleHomeButtonWithCompletion:
notifyKioskAppPurgeTopShelfContentForApplicationIdentifiers:
notifyStartIdleScreenAppTransitionForType:animationDuration:animationFence:delay:
activeConnections
listener:shouldAcceptNewConnection:
_acceptSerialQueue
_serviceListener
_processAssertion
_headBoardConnection
_idleScreenConnection
bundleID
setAutoresizingMask:
snapshotContext
snapshotViewWithContext:
_updateSceneHostView
performWithoutAnimation:
didMoveToSuperview
superview
hostViewForRequester:enableAndOrderFront:
disableHosting
requester
scene
hasBackground
useSnapshot
sceneHostView
snapshotView
backgroundView
_hasBackground
_useSnapshot
_bundleID
_requester
_sceneHostView
_snapshotView
_backgroundView
defaultContextManager
addContextProvider:
removeContextProvider:
currentScreenActionApplication
list
setAppId:
tvSchemaViewIdentifierKeyCompactIRI
setViewId:
tvSchemaMainEntityKeyCompactIRI
tvs_dictionaryForKey:
_JSONSerializedSemanticContext:
setMainEntitySemanticData:
_screenActionInfoForScreenItem:
setDomainObjects:
info
setElementId:
absoluteIRIForProperty:linkedDataContext:
setType:
setSemanticId:
setSemanticData:
isValidJSONObject:
dataWithJSONObject:options:error:
initWithData:encoding:
allowContextProvider:
getCurrentContext
setSceneID:
_sceneID
setScale:
isOpaque
IOSurface
UIImage
drawInRect:
fetchImageData:
fetchImage
snapshot
cachedImage
scaleFactor
_context
_snapshot
_cachedImage
_scaleFactor
_startLaunchTestNamed:options:
_startResumeTestNamed:options:
runTest:options:
applicationProcessesForBundleIdentifier:
_markUserLaunchInitiationTimeForTest:
activateApplicationForTesting:suspended:completion:
_isAppExecutableRunning:
_retryLaunchTestWithOptions:
performSelector:withObject:afterDelay:
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
componentsSeparatedByString:
_activateApplication:suspended:forTest:
applicationIsInstalled:
isApplicationInstalled:
isApplicationRestricted:
isBackgroundAppRefreshSupportedForApplication:
isRemoteNotificationBackgroundModeSupportedForApplication:
isNewsstandApplication:
isNewsstandContentBackgroundModeSupportedForApplication:
shouldThrottleContentNotificationForApplicatin:onDate:withLastCount:onDay:
handleContentAvailableNotificationForApplication:userInfo:priority:completion:
handleNewsstandNotificationForApplication:userInfo:
isCancelled
_loadProgrammingInfoWithError:
_santizeProgrammingInfo:error:
_loadMappingInfoWithError:
_santizeMappingInfo:error:
_computeRequestWithEndpoint:error:
_documentLoaderWithRequest:
requestProperties
numberWithLongLong:
_numberArrayFromStringArray:
initWithURLRequest:
ignoreLocalHTTPCacheEnabled
setCachePolicy:
setAuthenticationType:
setPostprocessor:
loadProgrammingInfoWithCompletion:
loadIdentifierMappingInfoWithCompletion:
_cancelled
_updateWallpaperForFocusedProcess
wallpaperView
_wallpaperForFocusedProcessWithVariant:
setWallpaperView:
isIdleModeActive
_idleModeActive
_wallpaperView
accessibilityMenuOptions
voiceOverEnabled
setVoiceOverEnabled:
zoomEnabled
setZoomEnabled:
preferSDHOverRegularSubtitles
setPreferSDHOverRegularSubtitles:
preferVideoDescriptions
setPreferVideoDescriptions:
switchControlEnabled
setSwitchControlEnabled:
displayFilterInvertColorsEnabled
setDisplayFilterInvertColorsEnabled:
displayFilterColorAdjustmentsEnabled
setDisplayFilterColorAdjustmentsEnabled:
displayFilterLightSensitivityEnabled
setDisplayFilterLightSensitivityEnabled:
displayFilterReduceWhitePointEnabled
setDisplayFilterReduceWhitePointEnabled:
setShouldSpeakItems:
_setChecked:
handleAXShortcutEvent
accessibilityLabel
speechUtteranceWithString:
setVolume:
stopSpeakingAtBoundary:
speakUtterance:
willUpdateFocusToView:
shouldSpeakItems
_speechSynthesizer
_shouldSpeakItems
_systemControlEnabled
sleepSystemForReason:
systemMenuController
tv_applicationLaunchImageName
initWithURL:idiom:error:
traitCollectionWithUserInterfaceIdiom:
imageNamed:withTrait:
_flatImageWithColor:
imageNotFound
_imageNotFound
_createButtonsWithTitles:
_didSelectButton:
setButtons:
buttons
indexOfButton:
initWithButtonTitles:
buttonWithTitle:
buttonTitles
_buttonTitles
_buttons
_defaultButtonIndex
_instance
_processNewUpdateAttemptToOSBuild:forRestore:triggeredManually:
_noteStage:
lastRestoreFilePath
dictionaryWithContentsOfFile:
setLastAttemptedUUID:
setLastAttemptedTargetOSBuild:
osSoftwareUpdateMonitoringURLOverride
setBaseURL:
lastAttemptedUUID
_processAppRestart
setToOSBuild:
setIsRestore:
setTriggeredManually:
setUuid:
isInternalBuild
baseURL
isRestore
toOSBuild
uuid
triggeredManually
shouldAutomaticallyApplyUpdates
fromOSBuild
setURL:
setHTTPMethod:
setRequestParameters:
_issueRequestForStage:withProperties:retryDelay:
statusCode
_isCancelStage:
_isFailedStage:
_isFinalStage:
_processUpdateAttemptCompleted
lastAttemptedTargetOSBuild
lastUpdatedFromOSBuildVersion
setFromOSBuild:
setIsInternalBuild:
_isInternalBuild
_isRestore
_triggeredManually
_baseURL
_fromOSBuild
_toOSBuild
_uuid
removeObjectIdenticalTo:
main
error
_semaphore
_error
contentView
center
layer
setShadowPath:
setShadowOffset:
setShadowRadius:
setAppSwitcherItem:
setShadowOpacity:
setBlurRadius:rect:
iconImage
displayName
isLive
setMasksToBounds:
setSnapshotView:
setFilters:
filterWithType:
setValue:forKey:
setValue:forKeyPath:
applyLayoutAttributes:
snapshotImageView
appSwitcherItem
titleView
itemContentView
containerView
hasBlurFilter
setHasBlurFilter:
_snapshotImageView
_appSwitcherItem
_titleView
_itemContentView
_containerView
_hasBlurFilter
evaluateWithObject:
userInterfaceStyleMask
_userInterfaceStyleMask
viewControllersByRequest
_callHandlersForRequest:withReason:result:error:
_servicesByViewController
_presentationServiceForViewController:
_getViewServiceInfoForRequest:serviceName:className:
_reserveTableSpaceForRequest:error:
dismissalCompletionByRequest
_requestForRequestID:
_setRequest:forRequestID:
_setPresentationService:forViewController:
_setViewController:forRequest:
setTerminationHandler:
_viewControllerForRequest:
initWithOptions:capacity:
_callMessageReply:forRequest:success:result:error:
messageViewServiceWithMessage:reply:
pendingRequestsByRequestID
_requestIsPending:
_requestForViewController:
callStackSymbols
presentUIWithRequest:completion:
messageUIWithRequest:message:reply:
dismissUIWithRequest:
messageRepliesByRequest
_viewControllersByRequest
_dismissalCompletionByRequest
_messageRepliesByRequest
_pendingRequestsByRequestID
setCodeHandler:
setSendNewCode:
sendNewCode
codeHandler
presentDevicesAlertWithTitle:message:deviceList:completion:
presentCodeEntryAlertWithTitle:message:newCodeLabel:submitLabel:newCodeRequestHandler:completion:
_submitIndex
_sendCodeIndex
_codeHandler
_sendNewCode
initWithNumberOfDigits:separatorIndexes:
setEditable:
_cancelTimer
dismissalCompletion
promptLabel
_handleMenuButton:
_handleHomeButton:
_startTimerIfNecessary
_dismissViewControllerWithValue:
setDismissalCompletion:
initWithPresentedViewController:presentingViewController:blurStyle:
timeout
setTimeout:
timerSource
setTimerSource:
_timeout
_dismissalCompletion
_timerSource
_synchronizeEnteredValues
textFieldValues
defaultTitle
defaultMessage
_setTitleForRemoteTextEditing:
setPlaceholder:
setEnteredValues:
setAlternateTitle:message:forTextFieldAtIndex:
setTextFieldValues:
setButtonTitles:
_defaultTitle
_defaultMessage
_enteredValues
_textFieldValues
setRequestBuilder:
effectWithStyle:
effectForBlurEffect:
initWithEffect:
traitCollectionDidChange:
traitCollection
_updateImage
requestBuilder
renderingMode
setImageView:
vibrantImageView
setVibrantImageView:
vibrantView
setVibrantView:
_requestBuilder
_vibrantImageView
_vibrantView
lastContentOffset
_isFocusDirectionFlippedHorizontally
_updateLastContentOffset
_updateForReducedMotionPeek:
_applyKeyPathsAndRelativeValues:forMotionEffect:
_lastContentOffset
initWithFrame:collectionViewLayout:
setContentInset:
setDataSource:
registerClass:forCellWithReuseIdentifier:
_preferredContentOffsetForIndexPath:
setContentOffset:animated:
upDoubleTapped:
panGestureRecognizerMoved:
initWithKeyPath:type:
setMinimumRelativeValue:
setMaximumRelativeValue:
setUserInteractionEnabled:
setBounds:
collectionViewLayout
dequeueReusableCellWithReuseIdentifier:forIndexPath:
isScrolling
nextFocusedIndexPath
setNeedsFocusUpdate
updateFocusIfNeeded
velocityInView:
translationInView:
addMotionEffect:
removeMotionEffect:
_showAppSwitcher
setPeekEffectEnabled:
_setKillGestureRecognizersEnabled:
_servicePendingUpdatesWithAnimation:
launchCompletionHandler
setLaunchCompletionHandler:
setScrolling:
_activateItem:
setPendingLaunchItem:
_scrollToItem:
_launchItem:
focusedItem
_updateKillSwipeWithOffset:
_finishKillSwipeWithVelocity:completion:
_cancelKillSwipeWithVelocity:completion:
_handleCollectionViewUpdatesWithAnimation:completion:
bringSubviewToFront:
setCollectionViewLayout:animated:
_animateUsingDefaultTimingWithOptions:animations:completion:
scrollViewDidEndScrollingAnimation:
setCollectionViewLayout:animated:completion:
invalidateLayoutWithContext:
animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:
areAnimationsEnabled
setAnimationsEnabled:
deleteItemsAtIndexPaths:
insertItemsAtIndexPaths:
performBatchUpdates:completion:
pendingLaunchItem
collectionView:numberOfItemsInSection:
collectionView:cellForItemAtIndexPath:
numberOfSectionsInCollectionView:
collectionView:viewForSupplementaryElementOfKind:atIndexPath:
collectionView:canMoveItemAtIndexPath:
collectionView:moveItemAtIndexPath:toIndexPath:
collectionView:shouldHighlightItemAtIndexPath:
collectionView:didHighlightItemAtIndexPath:
collectionView:didUnhighlightItemAtIndexPath:
collectionView:shouldSelectItemAtIndexPath:
collectionView:shouldDeselectItemAtIndexPath:
collectionView:didSelectItemAtIndexPath:
collectionView:didDeselectItemAtIndexPath:
collectionView:willDisplayCell:forItemAtIndexPath:
collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:
collectionView:didEndDisplayingCell:forItemAtIndexPath:
collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:
collectionView:shouldShowMenuForItemAtIndexPath:
collectionView:canPerformAction:forItemAtIndexPath:withSender:
collectionView:performAction:forItemAtIndexPath:withSender:
collectionView:transitionLayoutForOldLayout:newLayout:
collectionView:canFocusItemAtIndexPath:
collectionView:shouldUpdateFocusInContext:
collectionView:didUpdateFocusInContext:withAnimationCoordinator:
indexPathForPreferredFocusedViewInCollectionView:
collectionView:targetIndexPathForMoveFromItemAtIndexPath:toProposedIndexPath:
collectionView:targetContentOffsetForProposedContentOffset:
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
initWithManager:
appSwitcherManager
initialDragLocation
setInitialDragLocation:
isPanningVertically
setPanningVertically:
isPanningHorizontally
setPanningHorizontally:
preferredIndexPath
setPreferredIndexPath:
setCollectionView:
setTitleView:
peekEffectEnabled
peekEffect
panRecognizer
upRecognizer
setFocusedItem:
_panningVertically
_panningHorizontally
_scrolling
_peekEffectEnabled
_appSwitcherManager
_preferredIndexPath
_collectionView
_peekEffect
_panRecognizer
_upRecognizer
_focusedItem
_pendingLaunchItem
_launchCompletionHandler
_initialDragLocation
_handleForceReloadNotification
_reload
reload
_performUpdates
_cancelPendingUpdates
_updateMappingInfoWithCompletion:
_updateProgrammingInfoWithCompletion:
_notifyProgrammingGuideDidUpdate
removeObjectsInArray:
_addAutoInstallAdditionsToArray:
willChangeValueForKey:
didChangeValueForKey:
fileURLWithPath:
processName
inputStreamWithURL:
open
propertyListWithStream:options:format:error:
tvs_numberForKey:
close
_handleReloadTimer
setProvisionedApplicationIdentifiers:
setDisabledApplicationIdentifiers:
setApplicationIdentifiersByBundleIdentifierMapping:
_reloadNotificationToken
_programmingLoaderCancellation
_mappingLoaderCancellation
_loadInProgressFlag
_provisionedApplicationIdentifiers
_disabledApplicationIdentifiers
_applicationIdentifiersByBundleIdentifierMapping
isConfiguredForDictationOnly
imageNamed:
_optIn:
_optOut:
_readAboutText:
initWithTitle:text:
bundleWithIdentifier:
termsVisible
setTermsVisible:
setSiriEnabled:
setDictationEnabled:
setConfiguredForDictationOnly:
dialogContainerView
featureInfoViewController
termsViewController
_configuredForDictationOnly
_termsVisible
_dialogContainerView
_featureInfoViewController
_termsViewController
shouldPresent
setShouldPresent:
completionHandler
setCompletionHandler:
_shouldPresent
_completionHandler
_animatePresentationOverSystem:options:completion:
_animatePresentation:options:completion:
alpha
_santizedViewServiceOptions:
animationTimingFunction
setAnimationTimingFunction:
setShouldRasterize:
commit
isPresented
setIsPresented:
_isPresented
setTimingFunction:
setFillMode:
setRemovedOnCompletion:
setDuration:
convertTime:fromLayer:
setBeginTime:
addAnimation:forKey:
initWithType:
_solveForInput:
setValues:
setKeyTimes:
setCalculationMode:
initWithIndexesInRange:
_scrollProgress
enumerateIndexesUsingBlock:
setIndexPath:
invalidateDataSourceCounts
prepareForCollectionViewUpdates:
updateAction
indexPathBeforeUpdate
indexPathAfterUpdate
sortUsingSelector:
finalizeCollectionViewUpdates
invalidationContextClass
initialLayoutAttributesForAppearingItemAtIndexPath:
finalLayoutAttributesForDisappearingItemAtIndexPath:
insertedIndexPaths
deletedIndexPaths
finalIndexPathByOriginalIndexPath
numberOfItemsBeforeUpdate
numberOfItems
swipeIndex
swipeUpOffset
_insertedIndexPaths
_deletedIndexPaths
_finalIndexPathByOriginalIndexPath
_numberOfItemsBeforeUpdate
_numberOfItems
_swipeIndex
_swipeUpOffset
_handleActiveAccountDidChange
_handlePineBoardPrefsDidChange
_handleOSUpdatePrefsDidChange
initWithManagerIdentifier:
setMonitoringEnabled:
downloads
_clearDownloadManager:idleDownloads:
_scheduleAppSoftwareUpdateCheck
setupDefaultAssetURLs
_scheduleOSUpdateCheck
appSoftwareUpdateCheckTask
setAppSoftwareUpdateCheckTask:
monitoringEnabled
boolForKey:defaultValue:
setBool:forKey:
synchronouslyFetchApplicationsState
pb_softwareUpdateServiceQueue
addOperation:
_startOSUpdateCheckForAction:
purchaseManager
downloadProperties
operationsByPurchase
addPurchases:withCompletionBlock:
softwareDownloadManager
persistentIdentifier
operationsByDownload
addDownloads:completionBlock:
autoAppUpdatesEnabled
appSoftwareUpdateCheckTimeIntervalInSeconds
reallyPerformAppSoftwareUpdateCheck
setStopBlock:
downloadPhaseIdentifier
finishDownloads:
failureError
download:didFailWithError:
_okToCheckForOSSoftwareUpdate
osSoftwareUpdateInitialCheckTask
setOsSoftwareUpdateInitialCheckTask:
osSoftwareUpdatePeriodicCheckTask
setOsSoftwareUpdatePeriodicCheckTask:
_scheduleOSUpdateTimerForNextDarkWake
periodicCheckInterval
_cancelOSUpdateDarkWakeTimer
lastCheckDate
sleepCheckDelay
_scheduleOSUpdateDarkWakeAt:
tvs_networkTimeIsApproximatelyCorrect
currentCalendar
components:fromDate:
setHour:
setMinute:
dateFromComponents:
setDay:
dateByAddingComponents:toDate:options:
darkWakeTimer
setDarkWakeTimer:
_osUpdateDarkWakeTimerFired:
initWithFireDate:serviceIdentifier:target:selector:userInfo:
mainRunLoop
scheduleInRunLoop:
vendorBagRefetchTimeoutTimer
setVendorBagRefetchTimeoutTimer:
_reloadVendorBag
_postVendorBagReloadContinueAutoApply
_serverAllowsAutoApplyUpdates
shouldForceAllowAutoApply
vendorBags
dataUsingEncoding:
propertyListWithData:options:format:error:
_precheckConditionsAndPerformAction:
_isAtHomeSeedUser
validateWithError:
isConnected
connectWithCompletion:
disconnectWithCompletion:
setShouldAutomaticallyApplyUpdates:
purchase
purchase:didFailWithError:
_clearFailedDownload:
osUpdateService
_showOSUpdateDownloadAndApplyConfirmation:
_showOSUpdateUpToDateDialog:
_showOSUpdateError:inDomain:description:
_showApplyConfirmationDialogWithData:
setProgressPercentage:
didEncounterSlowUpdate
purchaseManager:didFinishPurchasesWithResponses:
downloadManager:downloadStatesDidChange:
downloadManagerActiveDownloadsDidChange:
downloadManagerDownloadsDidChange:
downloadManagerNetworkUsageDidChange:
startSoftwareUpdateMonitoring
setAppSoftwareUpdateCheckTimeIntervalInSeconds:
warnUserOnOutOfSpaceIfNecessary
notePlaybackStarted
disableAutoInstallForApplicationItemIdentifier:
autoInstallDisabledForApplicationItemIdentifier:
addPurchase:forOperation:completionBlock:
addDownload:forOperation:completionBlock:
_scheduleOSUpdateOnSleepCheck
presentingAppAlert
setPresentingAppAlert:
lastPresentedAppAlertTime
setLastPresentedAppAlertTime:
disabledAutoInstallItemIDs
_monitoringEnabled
_presentingAppAlert
_appSoftwareUpdateCheckTimeIntervalInSeconds
_appSoftwareUpdateCheckTask
_osSoftwareUpdateInitialCheckTask
_osSoftwareUpdatePeriodicCheckTask
_darkWakeTimer
_vendorBagRefetchTimeoutTimer
_lastPresentedAppAlertTime
_purchaseManager
_operationsByPurchase
_operationsByDownload
_disabledAutoInstallItemIDs
setPreferredAction:
sharedCacheDeletePreferences
setShouldDisplayApplicationsQuotaExceededMessage:
_extendedDataValueForKey:
_setExtendedDataValue:forKey:
extendedData
setExtendedData:
_registerStateHandlers
registerStateMachine:
initForSingleton
connectionCompletionBlock
setConnectionCompletionBlock:
_showConnectingDialog
disconnectionCompletionBlock
setDisconnectionCompletionBlock:
setUserCanceledConnection:
_initializeSession
setWantsToConnect:
wantsToConnect
setTestFetchStartTime:
_startTestFetch
_dismissConnectionDialog
_startSession
userCanceledConnection
_stopSession
dateWithTimeIntervalSince1970:
testFetchStartTime
defaultSessionConfiguration
setTimeoutIntervalForRequest:
sessionWithConfiguration:
downloadTaskWithURL:completionHandler:
_setNoteRef:
_noteRef
_wantsToConnect
_userCanceledConnection
_connectionCompletionBlock
_disconnectionCompletionBlock
_testFetchStartTime
_nowPlayingAppDidChange:
_nowPlayingAppPlaybackStateDidChange:
_nowPlayingInfoDidChange:
_setNeedsMetadataUpdate
_allAudioMediaTypes
_updateWithNowPlayingInfoDictionary:playbackState:nowPlayingPID:
_bulletinInfoForNowPlayingInfo:
_performMetadataUpdate
mediaTypeForInfo:
trackIdentifierForInfo:
musicAppBundleIdentifier
mediaRemoteObserverNowPlayingAppDidChange:
mediaRemoteObserverNowPlayingInfoDidChange:nowPlayingInfo:
mediaRemoteObserverIsPlayingDidChange:
mediaRemoteObserverShouldShowTrackChangeBulletin:
_presentTrackChangeBulletinWithInfo:
tvs_dataForKey:
nowPlayingMediaTypeAudioOnly
playbackRate
isMusicAppPlaying
isPodcastsAppPlaying
trackIdentifier
mediaType
currentBulletin
setCurrentBulletin:
_metadataUpdateRunning
_playing
_playingMusic
_isMusicAppPlaying
_isPodcastsAppPlaying
_nowPlayingProcessPID
_playbackRate
_trackIdentifier
_mediaType
_currentBulletin
mapTableWithKeyOptions:valueOptions:
_updateVolumeControlAvailableState
_audioRoutingController
volumeControlAvailable
_setRequestorBundleID:
activateSiriWithContext:
startSiriWithContext:
initWithNumberOfDigits:
digitGroupView
__activateSiriWithContext:
__startSiriWithContext:
__stopSiriWithContext:
__showPinDialogWithOptions:completion:
__dismissPinDialogWithToken:
__noteUserPresenceDetected
pinViewControllersByToken
_pinViewControllersByToken
volumeControlEnabled
transport
_defaultInstalledKioskAppProxy
_defaultInstalledMusicAppProxy
allObjects
doubleForKey:defaultValue:
setDouble:forKey:
doubleForKey:
tvs_bundle
infoDictionary
crdAppBundleIdentifier
disabledAutoInstallItemIds
setDisabledAutoInstallItemIds:
whatsNewCheckTimeIntervalInSeconds
setRemotePresenceDetectionDelayTimeoutInSeconds:
setHiliteModeTimeoutInSeconds:
musicNowPlayingTimeoutInSeconds
appSoftwareUpdateCheckIntervalInSeconds
shouldPerformAppSoftwareUpdateCheckOnBoot
shouldUpdateWithNullVersions
wirelessFirmwareUpdateEnabled
bluetoothRemoteUpdateCheckTimeInterval
bluetoothRemoteTimeIntervalSinceLastSuccessfulUpdate
bluetoothRemoteUpdateRetryLimit
setBluetoothRemoteTimeIntervalSinceLastSuccessfulUpdate:
allowSiriOnScreenActions
isDialogTestingEnabled
setSystemApplicationElement:
currentApplicationElement
systemWideElement
systemApplication
siriScreenActionManagerIsSiriContentBeingDisplayed:
systemApplicationElement
currentApplications
currentApplicationsIgnoringSiri
_enabled
_systemApplicationElement
wallpaperViewForVariant:
registerNowPlayingDelegate:
deactivateApplication
launchKioskApp
wakeSystemForReason:
fetchDeviceIsAsleepWithResult:
relaunchBackboardd
activateScreenSaver
activateScreenSaverWithReply:
deactivateScreenSaver
launchCRDApp
presentCRDInstructionWindow
dismissCRDInstructionWindow
purgeTopShelfContentForApplicationIdentifiers:
setSleepTimeout:
sleepTimeoutWithReply:
recentApplicationBundleIdentifiersWithReply:
topActiveOrActivatingApplicationIdentifierWithReply:
setNextVoiceRecognitionAudioInputPaths:
setNextAssistantRecognitionStrings:
performScreenActionWithName:forItemIdentifier:parameters:reply:
sendMenuButtonEvent
sendEventData:
effectiveUserInterfaceStyleWithReply:
setEffectiveUserInterfaceStyle:
activateSiri
startSiriListening
stopSiriListening
fetchSharedAppStateWithReply:
fetchProvisionAppIdentifiersWithReply:
fetchDisabledAdamIDsWithReply:
fetchApplicationIdentifiersByBundleIdentifierMappingWithReply:
fetchEnforceProvisioningOnSystemAppsEnabledWithReply:
fetchPairedAppleRemoteStateWithReply:
pairAppleRemote:withReply:
performBluetoothRemoteFirmwareCheck
activateAppIfPlayingMusicAfterIdleTime:openURL:
cancelScheduledAppActivation
getStoreFrontCountryCodeWithReply:
registerServiceProviderEndpoint:forProviderType:
endpointForProviderType:withIdentifier:responseBlock:
getBulletinServiceProxyWithReply:
getDiagnosticLogsServiceProxyWithReply:
getOSUpdateServiceProxyWithReply:
getAirPlayServiceProxyWithReply:
getRestrictionServiceProxyWithReply:
getMediaRemoteServiceProxyWithReply:
getUserPresentationServiceProxyWithReply:
listen
hiliteModeActive
screenSaverActive
setInterface:forSelector:argumentIndex:ofReply:
requestPresentationWithInfo:completion:
triggerUserActivity
restrictionsEnabledWithResult:
validatePIN:withResult:
systemServicePresentNowPlayingUI
setExportedInterface:
setExportedObject:
setRemoteObjectInterface:
_clientBundleIdentifierFromConnection
_registerConnection:
_activeConnectionsByProcessIdentifier
processIdentifier
setNowPlayingPresentationDelegate:
valueForEntitlement:
isDeviceAsleepAndSleptManually:
sortedArrayUsingSelector:
isAppleIRRemotePaired
pairAppleIRRemote
unpairAppleIRRemote
locale
countryCode
remoteObjectProxy
nowPlayingPresentationDelegate
auditToken
systemServiceConnectionForProcessIdentifier:
sendMessagePresentNowPlayingUI
_airPlayService
_diagnosticLogsService
_osUpdateService
_restrictionService
_userPresentationService
_clientBundleIdentifier
_nowPlayingPresentationDelegate
_handleOK
_updateConstantAudioOutput
_handleMusicNowPlayingTrigger:
AccessibilityMenuOptionsBinding
_updateTripleTapMenu
standardUserDefaults
currentDevice
synchronizeAutomaticDownloadKinds
_performObliterationIfNeeded
setCategory:error:
setConfigurationBlock:
_handleStoreAccountChangedNotification
initializeNotificationCenterWithDelegate:
registerOperationClass:forFailureType:
_registerProcessManagerNotificationHandlers
_dequeuePendingProfiles
_setupLanguageChangeObserving
_handleThermalNotification:
_handleEnableLateNightModeNotification:
addObserver:selector:name:object:suspensionBehavior:
_handleDisableLateNightModeNotification:
initializeAssetLibraryWithCachePath:
triggerThermalNotification
_loadBundles
_startBulletinBoardServer
_kickoffAppDepotReload
_startSoftwareUpdateService
_startStoreURLBagMonitoring
setup
_launchPurpleBuddy
_launchWhatsNewAppAfterOSUpdate
_launchConferenceRoomDisplayAppWithOptions:
_launchKioskAppWithOptions:
_setupWebinspector
handleDialogTestNotificationWithDialogId:
isStoreServicesURL
systemName
_ensureTVAirPlayRunning
_startSteadyStateServices
processesForBundleIdentifier:
pendingUserNotifications
initWithRemoteNotificationPayload:withHandler:
sendActions:
prepareSiriViewServices
_configureAskPermission
startBluetoothUpdateMonitoring
_handleProcessDidExit:
_handleProcessWillActivate:suspended:withContext:
_handleProcessDidActivate:suspended:
setAccessibilityMenuOptions:
_handleMenuOrACHomeSingleTapEventWithYesForMenuNoForACHome:
_shouldShowSiri
waitForStartListening
isSiriViewServicePID:
_shouldSendMediaRemoteCommand:
_sendMediaRemoteCommand:withOptions:
_wouldExpectPlayPauseButtonDownShouldPause
_sendMediaRemoteCommand:
decreasePlaybackRateFromRate:rateUsedForPlayback:
_changePlaybackRateWithBlock:
increasePlaybackRateFromRate:rateUsedForPlayback:
_handleSkipGestureRecognizer:withCommand:interval:
_wouldExpectPlayPauseLongPressShouldPresentNowPlayingSystemUI
_presentNowPlayingSystemUIWithOptions:
isReadyForUse
isConfiguredForUse
_sendActionOrShowUnconfiguredAlertForAction:
_requestWakeForReason:
_requestSleepForReason:
performAuthenticatedBlock:
_launchTVWatchList
pbs_watchListButtonBehaviorEnabled
_launchAppSwitcher
_buttonType
_nowPlayingAppFocused
_kioskAppBundleID
_updateNowPlayingTrigger
_showRadioAdViewController
_dismissRadioAdViewController
languageChangeObserver
stopObservingLanguageChanges
setLanguageChangeObserver:
startObservingLanguageChanges
allApplicationProcesses
killForReason:andReport:withDescription:
_shouldEnableNavigationSoundsForBundleIdentifier:context:
initiatorAuditToken
systemAppInitiatedDeepLink
mutableDeepLinkingAppHistory
_updateProgrammingGuide
_updateSoftwareUpdateServiceURLBagConfiguration
_performInitialSoftwareUpdateCheckIfNecessary
_updateWhatsNewCheckTimeInterval
_handleStoreURLBagDidLoadNotification
_handleProgrammingGuideDidUpdateNotification
_resetProgrammingGuideRefreshTaskWithTimeIntervalInSeconds:
programmingGuideBackgroundTask
interval
setProgrammingGuideBackgroundTask:
defaultStore
activeAccount
activeLockerAccount
setActiveLockerAccount:
initWithServiceName:onQueue:
volumeControlNeedsConfiguring
setPbs_shouldShowUnconfiguredVolumeButtonsAlert:
_launchTVSettingsWithOpenURL:
musicNowPlayingTrigger
shouldDisableIdleTimer
setKioskApplicationIdentifier:
activateApplication:openURL:options:suspended:completion:
_deactivateFocusedAppWithOptions:
_deactivateApplicationWithOptions:
appLaunchDisabled
_presentTVButtonBehaviorAlert
pbs_shouldShowWhatsNew
setPbs_shouldShowWhatsNew:
applicationProcessForPID:
isSiriEnabled
isSiriAvailable
offeredEnableAssistant
setOfferedEnableAssistant:
_presentSiriOptInDialogWithViewController:completion:
offeredEnableDictation
setOfferedEnableDictation:
pbs_shouldShowWatchListButtonBehaviorAlert
lastUpdatedFromOSVersion
setPbs_shouldShowWatchListButtonBehaviorAlert:
awaitingSiriOptInOfferResponse
setAwaitingSiriOptInOfferResponse:
_sendFocusedAppMessagePresentNowPlayingUI
applicationInfo
entitlements
setAppLaunchDisabled:
appTags
_keyboardFocusedInApp:
isAirPlayViewServicePID:
_getNowPlayingViewControllerClassName:serviceIdentifier:
_presentNowPlayingViewController:
audioRoutingController
_setConstantAudioOutputEnabled:
sourceName
popProfileDataFromHeadOfInstallationQueue
installProfileData:outError:
resetToFactoryDefault
_setLateNightModeEnabled:
_wakeDeviceForSiriInteractionWithContext:
_suggestUserEnableDictation
_suggestUserEnableAssistantAndDictation
_launchTVSearch
reason
_assertApplicationForBundleIdentifier:notInUseWithError:
_assertApplicationForBundleIdentifier:allowsCacheDeletionWithError:
killForReason:andReport:withDescription:completion:
_applicationForPIDIsPlaying:
hasMIDBasedSINF
service:canAcquireTerminationAssertion:completionHandler:
service:didAcquireTerminationAssertion:
service:didRelinquishTerminationAssertion:
observer:didObserveLanguageChange:localeChange:
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
setWindow:
tvs_bindAccessibilityMenuOptionsBindingToObject:withKeyPath:options:
handleMenuDoubleTapEvent
_launchNowPlayingApp
_startObservingPurpleBuddyPrefs
handlePermissionRequest:
_displayDialogForPermissionRequest:fromResponder:
buddyPrefsObservingToken
setBuddyPrefsObservingToken:
setShouldDisableIdleTimer:
setAudioRoutingController:
_userNotificationHandler
_safeAreaWindow
_serialNumberWindow
_musicNowPlayingTrigger
_isRadioAdPlaying
_isShowingRadioAdView
_tooHot
_awaitingFirstAppLaunch
_bulletinBoardConnection
_bulletinBoardQueue
_shouldDisableIdleTimer
_appLaunchDisabled
_awaitingSiriOptInOfferResponse
_programmingGuideBackgroundTask
_buddyPrefsObservingToken
_mutableDeepLinkingAppHistory
_languageChangeObserver
_pressesEvent
setActiveTransitionContext:
setTransitionCompletion:
transitionCompletion
collectionViewController
setCollectionViewController:
_activeTransitionContext
_collectionViewController
_transitionCompletion
systemFontOfSize:
setShadowColor:
_peripheralStateDidChangeNotification:
_updateConnectedPeripheralSerialNumber
connectedPeripherals
_deviceSerialNumberLabel
_remoteSerialNumberLabel
automaticallyNotifiesObserversForKey:
isFinished
isExecuting
isReady
__finish
__computeFamilyAccountInfo
pause
__bytesTotal
accountFamilyInfoWithCompletionHandler:
__computeInstalledSoftwareWithAskToBuyEnabled:
setITunesStoreRequest:
setURLBagKey:
__processAppSoftwareUpdateResponse:
applicationDSID
__newWithAdamID:externalVersionID:buyParams:bundleID:dsid:completionHandler:
isAsynchronous
hadFailures
percentComplete
operations
__state
__ordinal
__lock
__unfinishedOperations
__powerAssertion
__self
_operations
guid
purchaseWithBuyParameters:
setValue:forDownloadProperty:
setBackgroundPurchase:
setIgnoresForcedPasswordRestriction:
setAccountIdentifier:
setRequestProperties:
setValue:forRequestParameter:
setShouldLoadInDaemon:
initWithDictionary:
initWithDownloadMetadata:
isInitialized
adamID
externalVersionID
assertionState
initWithBundleID:reason:acquisitionHandler:
bytesDownloaded
bytesTotal
__bytesDownloaded
__bundleID
__termAssertion
__download
__myError
__pendingPurchase
_adamID
_externalVersionID
valueForProperty:
isBetaApp
externalVersionIdentifier
addChildTransaction:
foregroundUpdateHandler
foregroundUpdateComplete
_willComplete
childTransactions
beginFinalTransition
_willFailWithReason:
_childTransactionDidComplete:
updateScenesTransaction
_handleUpdateScenesTransactionDidComplete
isComplete
isFailed
isInterrupted
setProcess:
initWithTransaction:context:
_shouldFailForChildTransaction:
setUpdateScenesTransaction:
_updateScenesTransaction
localizations
preferredLocalizationsFromArray:forPreferences:
pathForResource:ofType:
bundleWithPath:
foundation_localizedStringForKey:value:table:
localizedStringForKey:value:table:
initWithBytes:length:encoding:
transitionSoundEffectsEnabled
isMainDisplay
_nameForDisplayType
tvs_ISO8601CombinedDateAndTimeFormatter
stringFromDate:
fileURLWithPath:isDirectory:
setShouldDismissAutomatically:
_handleMenuButton
removeAllButtons
selectableItemTitles
addButtonWithTitle:type:handler:
isUserInitiated
setAppSwitcherTransition:
setFromBundleIdentifier:
setToBundleIdentifier:
focusedBundleIdentifier
setFocusedBundleIdentifier:
setFirstUserLaunch:
setUserInitiated:
setLaunchedForPlayback:
setLaunchOverSiri:
setLaunchedByDeactivation:
setSystemAppInitiatedDeepLink:
setLaunchURL:
setInitiatorAuditToken:
setForegroundUpdateHandler:
_flags
_appSwitcherTransition
_firstUserLaunch
_userInitiated
_launchedForPlayback
_launchOverSiri
_launchedByDeactivation
_systemAppInitiatedDeepLink
_fromBundleIdentifier
_toBundleIdentifier
_focusedBundleIdentifier
_launchURL
_initiatorAuditToken
_process
_foregroundUpdateHandler
setSendNewCodeBlock:
sendNewCodeBlock
_sendNewCodeBlock
_scheduleBluetoothRemoteUpdate
setManualUpdateInProgress:
_startImmediateBluetoothRemoteUpdate
_reallyScheduleBluetoothRemoteUpdateWithInterval:delay:
accessoryUpdateCheckTask
isManualUpdateInProgress
currentOperation
setAccessoryUpdateCheckTask:
_operationDidComplete:
_releasePowerAssertion
setCurrentOperation:
operationQueue
_holdPowerAssertion
_powerAssertion
_manualUpdateInProgress
_accessoryUpdateCheckTask
_currentOperation
_operationQueue
externalControlSystem
isAutomaticallyConfigured
pbs_shouldShowUnconfiguredVolumeButtonsAlert
pairAppleIRRemoteWithCompletion:
unpairAppleIRRemoteWithCompletion:
externalControlSystemDidChangeTopology:
externalControlSystemDidUpdatePolicy:
externalControlSystemDidBecomeActiveSource:
externalControlSystemDidResignActiveSource:
externalControlSystem:didHandleRemoteControlButtonPressed:
externalControlSystem:didHandleRemoteControlButtonReleased:
externalControlSystem:didChangeReadyStatus:
externalControlSystem:didChangeLinkStatus:
externalControlSystem:didCompleteAction:withResult:error:
externalControlSystem:didReceiveDeviceEvent:
externalControlSystem:didReceiveRequest:
externalControlSystem:willStartLearningAction:
externalControlSystem:didLearnAction:withProgress:
externalControlSystem:didCompleteLearningAction:withResult:error:
externalControlSystem:didFinishLearningAction:
externalControlSystemDidRequestAlternateRouteVolumeUp:
externalControlSystemDidRequestAlternateRouteVolumeDown:
setExternalControlSystem:
_externalControlSystem
_shouldSuppressWakeForRemoteControlButton:
_isSiriEnabled
_handleAssistantPreferencesDidChangeNotification:
siriPluginController
prepareViewServices
forgoWaitForStartListening
_updateShouldPreferDictation
shouldPreferDictation
setSuspended:
deviceID
_startSiriWithContext:
_stopSiriWithContext:
isListening
pluginHost
mode
sharedPreferences
assistantIsEnabled
_lazySiriPluginController
_startProvidingScreenActionContext
setSiriPluginController:
_stopProvidingScreenActionContext
setShouldPreferDictation:
onScreenActionContextProvider
setOnScreenActionContextProvider:
_waitingForStartListening
_suspended
_siriEnabled
_shouldPreferDictation
_siriPluginController
_onScreenActionContextProvider
_localizedAppName
tv_displayNameForAppState:withLocalizedAppName:
tv_smallApplicationFlatIcon
_updateDisplayName
_updateIconImage
applicationProxy
localizedName
manager
_live
_pendingInsertion
_pendingDeletion
_itemType
_applicationProxy
_displayName
_iconImage
_manager
_appState
viewServiceBeginPresentationWithOptions:
viewServiceHandleMessage:reply:
viewServiceUpdatePresentationWithOptions:
viewServiceEndPresentationWithOptions:completion:
navigationController
dismissResultHandler
_sendViewServiceEndPresentationWithOptions:completion:
_parentViewControllerDismissAnimated:
terminationHandler
parentViewController
dismissWithResult:
exportedInterface
_dismissalInProgressFlag
_pendingDismissalCompletionBlocks
_dismissResultHandler
_terminationHandler
setActiveCRDClients:
restrictionsEnabled
allowsConferenceRoomDisplaySettingsUI
_handleLoadingTimeout
_launchCRDApp
cancelPreviousPerformRequestsWithTarget:selector:object:
activeCRDClients
_updateCRDInstructionsWindowForClient:
_activeCRDClients
iconURL
imageWithContentsOfFile:
setHeaderImage:
_didSelectButtonAtIndex:
normalizeSnapshotName:
orientation
display
referenceBounds
setFullScreen:
expirationDate
setExpirationDate:
setStyle:
setStatusBarSettings:
setCompatibilityMode:
setBackgroundStyle:
isFrontBoard
_notePhysicalNetworkStateDidChangeNotification:
setForTesting:
_bringApplicationProcessToForeground:completion:
automaticDownloadKinds
showPromptWithIdentifier:completionHandler:
openApplication:options:withResult:
exitAndRelaunch:
shutdownWithOptions:
_foregroundScene
scheme
resourceSpecifier
unionAutomaticDownloadKinds:withCompletionBlock:
minusAutomaticDownloadKinds:withCompletionBlock:
isTrusted
_handleSpecialURL:
_handleOpenApplicationRequest:bundleID:options:withResult:
applicationsAvailableForOpeningURL:
_shouldHandleTestURL:
handle
tvs_URLForKey:
_applicationSafeForUseOnline:
signatureState
_reportUntrustedLaunchAttemptWithAppInfo:
_wouldDebuggerTargetPreventLaunchForBundleIdentifier:
debuggerTargetBundleIdentifier
handleTestURL:
_openApp:options:origin:withResult:
_checkContentRestrictions:options:thenProceedWithHandler:
initWithURL:resolvingAgainstBaseURL:
host
setArguments:
setEnvironment:
setStandardOutputURL:
setStandardErrorURL:
setDisableASLR:
setWaitForDebugger:
setLaunchIntent:
initWithSessionIdentifier:
_isStorePlaybackURL:
relativeString
forTesting
setUserLaunchEventTime:
setPayload:
setActions:
initWithApplicationBundleID:executionContextProvider:
setBackgrounded:
updateSceneWithIdentifier:display:newSettings:transitionContext:initialClientSettingsProvider:
waitForDebugger
setDebuggerTargetBundleIdentifier:
postNotificationName:object:userInfo:
_resetDebuggerTargetBundleIdentifier
applicationUpdateScenesTransactionOberverWithResultBlock:
hasEntitlement:
UUID
UUIDString
preferredLevel
isBackgrounded
tv_supportedUserInterfaceStyles
initWithSettings:
setUserInterfaceStyle:
initWithScene:requests:expirationInterval:responseHandler:
actions
_setupEventDeferralsWithScene:
deviceFamilies
preferenceDomain
physicalNetworkAvailable
maximumEffectiveAppRanking
ratingRank
hasUniversalProvisioningProfile
hasFreeDeveloperProvisioningProfile
_scene:setBackgrounded:transactionGroup:
initWithSceneIdentifier:process:display:newSettings:transitionContext:clientProviderProvider:initialClientSettingsProvider:
setWaitsForSceneCommit:
addSynchronizedTransaction:
level
layerManager
layers
contextID
_contextId
uniqueId
propertiesWithClientID:pid:displayUUID:contextID:
deferEventsForClientWithProperties:toClientWithProperties:withPriority:
setFocusedProcess:
setupProcessManagement
automaticallyNotifiesObserversOfFocusedProcess
processManager:didAddProcess:
processManager:didRemoveProcess:
systemService:canActivateApplication:withResult:
systemService:handleOpenApplicationRequest:withCompletion:
systemService:handleOpenApplicationRequest:options:origin:withResult:
systemService:handleOpenURLRequest:application:options:origin:withResult:
systemService:isPasscodeLockedOrBlockedWithResult:
systemService:handleActions:origin:withResult:
systemServicePrepareForShutdown:withOptions:
systemServicePrepareForExit:andRelaunch:
systemService:dataReset:completion:
systemServicePrepareForShutdown:andReboot:
workspace:didReceiveCreateSceneRequestForIdentifier:initialClientSettings:withCompletion:
workspace:didReceiveDestroySceneRequestForIdentifier:withCompletion:
alternateApplicationIsActive
updateEventDeferrals
_recentApplicationBundleIdentifiers
_activatedApplicationBundleIdentifiers
_pendingSceneUpdateTransactions
_systemService
_focusedProcess
_systemWakeTargetProcess
_fbSystemAppService
_fbSceneManager
_fbProcessManager
_pendingSnapshots
_forTesting
_kioskApplicationIdentifier
_debuggerTargetBundleIdentifier
hasStarted
allErrors
containsString:
transaction:willLaunchProcess:
transaction:didLaunchProcess:
transaction:didCreateScene:
transaction:willUpdateScene:
transaction:willCommitSceneUpdate:
transaction:didCommitSceneUpdate:
transactionWillBegin:
transactionDidBegin:
transactionDidFinishWork:
transactionDidComplete:
_resultBlock
isBlocked
isRestricted
setProgressPercent:
showSlowUpdateViewWithCompletion:
_controller
title2Font
gridItemTextColor
setLineBreakMode:
_icon
_text
_subtext
PBUserNotificationHandler
PBUserNotificationViewControllerDelegate
NSObject
TVSUserNotificationDelegate
PBFeatureInfoViewController
PBDiagnosticLogsService
PBSDiagnosticLogsServiceInterface
UIApplicationSceneClientSettings
PBApplication
FBSceneManagerDelegate
FBSceneManagerObserver
PBSBulletinServiceDelegate
TVSPowerManagerDelegate
_AppActivateInfo
PBScreenSaverManager
PBUserNotificationTextEntryViewController
UIGestureRecognizerDelegate
UIViewControllerTransitioningDelegate
TextEntryButtonViewDelegate
TVTextEntryControllerDelegate
PBUserNotificationViewController
PBOSSoftwareUpdateProcess
PBBundleLoader
PBSimplePluginHost
PBUIPluginHost
PBSnapshotLoadRequest
NSCopying
PBCVVVerificationOperation
PBTextEntryViewControllerDelegate
PBAppSwitcherUpdate
_PBAppTransitionAnimationFactory
_UIBasicAnimationFactory
PBAppTransitionViewController
PBAppTransitionContextDelegate
PBSafeAreaWindow
PBServiceProviderRegistryKeyPair
PBServiceProviderRegistry
PBWindowManager
PBNavigationControllerDelegate
UINavigationControllerDelegate
PBViewControllerPresentationRequest
_PBWindowManagerAppTransitionHelper
PBVolumeChangeObserver
PBAppSwitcherLayoutInvalidationContext
PBWhatsNewService
PBAppSwitcherReduceMotionLayout
PBSiriScreenActionApplication
PBSiriScreenActionItem
PBDataReportingService
PBSnapshotService
LSApplicationWorkspaceObserverProtocol
PBBulletinService
PBSBulletinServiceInterface
PBAppSwitcherFullFocusLayout
PBAppSwitcherTitleView
PBWindow
ATVHIDSystemClient
PBBackgroundWindow
PBNavigationController
PBAppSwitcherManager
PBOSUpdateService
PBSOSUpdateServiceInterface
PBAppDepot
FBUIApplicationServiceDelegate
BBObserverDelegate
PBSAppDepotProxyProtocol
PBSBulletinPresenter
PBRemoteBulletinViewController
PBAppSwitcherFocusLayoutAttributes
PBSystemService
NSXPCListenerDelegate
PBSceneView
PBSiriScreenActionContextProvider
AFContextProvider
PBSceneSnapshotDataProviderContext
PBSceneSnapshotDataProvider
XBSnapshotDataProvider
PBApplicationTesting
PBUserNotificationSystemStateProvider
UNSSystemStateProviding
PBUnavailableBundleListLoader
_PBUnavailableBundleListLoaderCancellableToken
PBCancellable
PBWallpaperViewController
PBAXShortcutHandler
_PBAXMenuAlertController
PBSystemMenuViewController
PBDefaultLaunchImageDataProviderContext
PBDefaultLaunchImageDataProvider
PBUserNotificationTextEntryButtonView
PBOSSoftwareUpdateMonitor
PineBoardAdditions
PBAccessoryUpdateOperation
PBAppSwitcherFocusCollectionViewCell
PBApplicationSnapshotPredicate
PBUserPresentationService
PBSUserPresentationServiceInterface
PB2SVerificationOperation
PBPinDisplayViewController
PBTextEntryViewController
PBSnapshotView
_PBAppSwitcherCollectionView
PBAppSwitcherCollectionViewController
UICollectionViewDataSource
UICollectionViewDelegate
UIScrollViewDelegate
PBAppSwitcherManagerDelegate
PBProgrammingGuide
PBSiriOptInOfferViewController
_PBScreenSaverTransitionRequest
PBScreenSaverTransitionViewController
PBAppSwitcherFocusLayout
PBSoftwareUpdateService
SSPurchaseManagerDelegate
SSDownloadManagerObserver
PBOSSoftwareUpdateProcessDelegate
PBSoftwareUpdateServiceQueue
PBVPNConnection
PBMediaRemoteObserver
PBMediaRemoteService
_PBSMediaRemoteServiceInternalInterface
PBSiriScreenActionManager
PBWallpaperWindow
PBSystemServiceInterface
PBSOSUpdateServiceDelegate
PBSAirPlayServiceInterface
PBSRestrictionServiceInterface
PBSystemServiceNowPlayingDelegate
PBSystemServiceClientInterface
PBSystemServiceConnection
PBTVButtonChangeViewController
PBAppDelegate
FBApplicationTerminationAssertionServiceDelegate
PBMediaRemoteObserverDelegate
PBLanguageChangeObserverDelegate
UIApplicationDelegate
PBAppSwitcherViewController
PBSerialNumberWindow
PBAppSoftwareUpdateOperation
PBAppUpdateOperation
PBAppTransitionTransaction
PBUserNotificationViewControllerTermsAndConditions
PBAppTransitionContext
PBCarMVerificationOperation
PBAccessoryUpdateService
PBExternalControlSystem
TVSExternalControlSystemDelegate
Private
PBHUDWindow
PBSiriManager
PBSiriScreenActionManagerDelegate
PBAppSwitcherItem
PBSViewServicePresenter
PBSViewServiceInterface
PBRemoteViewController
PBConferenceRoomDisplayManager
PBUserNotificationViewControllerAlert
PBAirPlayService
Capture
PBProcessManager
FBProcessManagerObserver
FBSystemServiceDelegate
FBWorkspaceDelegate
_PBPMApplicationUpdateScenesTransactionOberver
FBApplicationUpdateScenesTransactionObserver
BSTransactionObserver
PBOSUpdateWindow
PBThermalNoticeWindow
v32@0:8@16Q24
v32@0:8@"UIViewController<PBUserNotificationViewController>"16Q24
v24@0:8@16
v24@0:8@"UIViewController<PBUserNotificationViewController>"16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v24@0:8@"TVSCFUserNotification"16
@24@0:8@16
v16@0:8
@?16@0:8
v24@0:8@?16
@"NSMutableDictionary"
v48@0:8@16@24:32Q40
@"NSString"
@"UIImage"
@"UILabel"
@"UIButton"
@"UIImageView"
@"UILayoutGuide"
@"NSArray"
v24@0:8@?<v@?@"NSDictionary">16
v24@0:8@"NSString"16
@"PBSystemServiceConnection"
q16@0:8
I16@0:8
d16@0:8
{UIEdgeInsets=dddd}16@0:8
v56@0:8@16@24@32@40@48
v56@0:8@"FBSceneManager"16@"FBScene"24@"FBSSceneClientSettingsDiff"32@"FBSSceneClientSettings"40@"FBSSceneTransitionContext"48
v40@0:8@16@24@32
v40@0:8@"FBSceneManager"16@"FBScene"24@"NSSet"32
q32@0:8@16@24
q32@0:8@"FBSceneManager"16@"FBScene"24
@32@0:8@16@24
@"FBSSceneTransitionContext"32@0:8@"FBSceneManager"16@"FBScene"24
v40@0:8@"FBSceneManager"16@"FBScene"24@"<FBSceneClient>"32
v48@0:8@16@24@32@40
v48@0:8@"FBSceneManager"16@"FBScene"24@"FBSSceneSettings"32@"FBSSceneTransitionContext"40
v40@0:8@16@24Q32
v40@0:8@"FBSceneManager"16@"FBScene"24Q32
v44@0:8@16@24Q32B40
v44@0:8@"FBSceneManager"16@"FBScene"24Q32B40
v32@0:8@16@24
v32@0:8@"FBSceneManager"16@"FBScene"24
v40@0:8@"<PBSBulletinServiceInterface>"16@"PBSBulletin"24Q32
v24@0:8@"TVSPowerManager"16
B32@0:8^{__IOHIDEvent=}16q24
B24@0:8^{__IOHIDEvent=}16
B32@0:8@16@24
v20@0:8B16
v28@0:8@16B24
v40@0:8I16I20Q24Q32
v32@0:8@16d24
v32@0:8@16@?24
q24@0:8@16
v32@0:8q16@24
v40@0:8d16@24@32
v28@0:8B16@?20
@"PBBulletinService"
@"PBSBulletin"
@"NSMutableSet"
@"NSMutableArray"
@"NSTimer"
@"TVSUserActivityTrigger"
@"NSURL"
v24@0:8d16
@"TVSPreferences"
@"TVSStateMachine"
@"PBRemoteViewController"
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
@40@0:8@16@24@32
@"<UIViewControllerAnimatedTransitioning>"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
@"<UIViewControllerAnimatedTransitioning>"24@0:8@"UIViewController"16
@"<UIViewControllerInteractiveTransitioning>"24@0:8@"<UIViewControllerAnimatedTransitioning>"16
@"UIPresentationController"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
v40@0:8@16@24q32
v40@0:8@"PBUserNotificationTextEntryButtonView"16@"UIButton"24q32
v24@0:8@"TVTextEntryController"16
@"TVSCFUserNotification"16@0:8
@"<PBUserNotificationViewControllerDelegate>"16@0:8
v24@0:8@"<PBUserNotificationViewControllerDelegate>"16
v24@0:8q16
@32@0:8q16^q24
@"TVSCFUserNotification"
@"<PBUserNotificationViewControllerDelegate>"
@"UIViewController"
@"UITapGestureRecognizer"
B32@0:8Q16^@24
v24@0:8Q16
v36@0:8Q16B24@28
v32@0:8Q16Q24
v32@0:8Q16@24
@24@0:8Q16
q48@0:8@16@24@32@40
@"<PBOSSoftwareUpdateProcessDelegate>"
@"ASAssetQuery"
@"ASAsset"
@"TVSCacheDeletePurgeID"
v24@0:8@"UIViewController"16
@"UIViewController"16@0:8
@24@0:8^{_NSZone=}16
v32@0:8@"PBTextEntryViewController"16Q24
v24@0:8@"PBTextEntryViewController"16
v32@0:8@"PBTextEntryViewController"16@"UITextField"24
v40@0:8@16@24@?32
@48@0:8q16@24@32@40
@"PBAppSwitcherItem"
@"NSIndexPath"
@"CABasicAnimation"32@0:8@"UIView"16@"NSString"24
@"CAMediaTimingFunction"16@0:8
@"CAMediaTimingFunction"32@0:8@"UIView"16@"NSString"24
B32@0:8@"UIView"16@"NSString"24
v24@0:8@"PBAppTransitionContext"16
@"PBAppTransitionTransaction"
@"UIView"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"BKSApplicationStateMonitor"
v32@0:8@"UINavigationController"16@"UIViewController"24
v36@0:8@16@24B32
v36@0:8@"UINavigationController"16@"UIViewController"24B32
Q24@0:8@16
Q24@0:8@"UINavigationController"16
q24@0:8@"UINavigationController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UINavigationController"16@"<UIViewControllerAnimatedTransitioning>"24
@48@0:8@16q24@32@40
@"<UIViewControllerAnimatedTransitioning>"48@0:8@"UINavigationController"16q24@"UIViewController"32@"UIViewController"40
v24@0:8B16B20
@28@0:8@16B24
@"PBRemoteBulletinViewController"
@"PBOSUpdateWindow"
@"PBWindow"
@"PBScreenSaverTransitionViewController"
@"NSObject<OS_dispatch_source>"
@"FBUIApplicationSceneDeactivationAssertion"
@"FBDisplayLayoutElement"
@"_PBWindowManagerAppTransitionHelper"
@"NSObject<OS_dispatch_group>"
@"NSDictionary"
v48@0:8@16@24@32^v40
@"TVSAudioRoutingController"
@"TVSBackgroundTask"
@48@0:8@16d24d32q40
@"AXElement"
Q32@0:8Q16Q24
@"NSDate"
@"NSThread"
@40@0:8@16q24q32
@32@0:8@16q24
v40@0:8@16q24q32
v24@0:8@"NSArray"16
v32@0:8@"NSArray"16@"NSArray"24
v36@0:8@16B24@?28
v48@0:8@16@24@32@?40
@"NSOperationQueue"
v24@0:8@"<PBSBulletinServiceDelegate>"16
v32@0:8@"PBSBulletin"16@?<v@?B@"NSError">24
@40@0:8@16@24@?32
@"PBSBulletin"40@0:8@"PBSBulletin"16@"NSDictionary"24@?<v@?B@"NSError">32
v24@0:8@"PBSBulletin"16
@32@0:8@16^@24
v44@0:8@16B24@28@?36
@"NSMapTable"
@"<PBSBulletinServiceDelegate>"
{CGSize=dd}16@0:8
B48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGPoint=dd}32@0:8{CGPoint=dd}16
{CGPoint=dd}48@0:8{CGPoint=dd}16{CGPoint=dd}32
{CGSize="width"d"height"d}
{CGSize=dd}32@0:8{CGSize=dd}16
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
@"UILongPressGestureRecognizer"
@"TVInteractionGestureRecognizer"
@"_UIRepeatingPressGestureRecognizer"
i16@0:8
v24@0:8^{__IOHIDEvent=}16
^{__IOHIDEventSystemClient=}
@"PBWallpaperViewController"
@"<PBAppSwitcherManagerDelegate>"
v24@0:8@"<PBSOSUpdateServiceDelegate>"16
v24@0:8@"NSDictionary"16
v24@0:8@?<v@?B>16
v32@0:8@"NSArray"16@?<v@?@"NSError">24
@"<PBSOSUpdateServiceDelegate>"
v40@0:8@"FBUIApplicationService"16@24@"NSString"32
v40@0:8@"FBUIApplicationService"16@"NSString"24@?<v@?@>32
v32@0:8@"FBUIApplicationService"16@"NSString"24
v40@0:8@"FBUIApplicationService"16@"NSDate"24@"NSString"32
v52@0:8@16@24Q32B40@?44
v52@0:8@"BBObserver"16@"BBBulletin"24Q32B40@?<v@?B>44
v40@0:8@"BBObserver"16@"BBBulletin"24Q32
v32@0:8@"BBObserver"16@"BBBulletin"24
v32@0:8@16q24
v32@0:8@"BBObserver"16q24
v32@0:8@"BBObserver"16@"NSArray"24
v32@0:8@"BBObserver"16@"BBSectionInfo"24
v32@0:8@"BBObserver"16@"NSString"24
v40@0:8@"BBObserver"16@"BBSectionParameters"24@"NSString"32
v32@0:8@"BBObserver"16Q24
v32@0:8@"BBObserver"16@"NSSet"24
v28@0:8@"BBObserver"16B24
v48@0:8@"BBObserver"16@"BBAttachmentMetadata"24@"BBBulletin"32@?<v@?Q>40
B24@0:8@"BBObserver"16
@"BBThumbnailSizeConstraints"40@0:8@"BBObserver"16@"BBAttachmentMetadata"24@"BBBulletin"32
@"BBThumbnailSizeConstraints"32@0:8@"BBObserver"16q24
v56@0:8@16@24@32@40@?48
v56@0:8@"BBObserver"16@"NSData"24@"BBAttachmentMetadata"32@"BBBulletin"40@?<v@?@"NSData">48
v56@0:8@"BBObserver"16@"NSData"24@"BBAttachmentMetadata"32@"BBBulletin"40@?<v@?@"UIImage">48
{CGSize=dd}56@0:8@16@24@32{CGSize=dd}40
{CGSize=dd}56@0:8@"BBObserver"16@"BBAttachmentMetadata"24@"BBBulletin"32{CGSize=dd}40
@"UIImage"48@0:8@"BBObserver"16q24@"NSData"32@"NSString"40
{CGSize=dd}48@0:8@16q24f32f36@40
{CGSize=dd}48@0:8@"BBObserver"16q24f32f36@"NSString"40
@"NSDictionary"16@0:8
v28@0:8B16@20
@"BBObserver"
v32@0:8Q16@?24
v32@0:8Q16@?<v@?>24
v24@0:8@"<NSSecureCoding>"16
@"NSXPCInterface"16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
v48@0:8q16d24@32d40
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSObject<OS_dispatch_queue>"
@"NSXPCListener"
@"BKSProcessAssertion"
@36@0:8@16B24@28
@"FBScene"
@"UIView<FBSceneHostView>"
@"UIView<FBSceneHostSnapshotView>"
B24@0:8@"<AFContextProvider>"16
@"NSArray"16@0:8
@24@0:8o^{CGAffineTransform=dddddd}16
@"NSData"24@0:8o^{CGAffineTransform=dddddd}16
@"UIImage"16@0:8
@"XBSnapshotDataProviderContext"16@0:8
@32@0:8@16d24
@"XBSnapshotDataProviderContext"
@"FBSceneSnapshot"
v36@0:8@16B24@28
B24@0:8@"NSString"16
B48@0:8@16@24^Q32^q40
B48@0:8@"NSString"16@"NSDate"24^Q32^q40
v48@0:8@16@24q32@?40
v48@0:8@"NSString"16@"NSDictionary"24q32@?<v@?>40
@24@0:8@?16
@24@0:8^@16
@24@0:8q16
@"AVSpeechSynthesizer"
@"<TextEntryButtonViewDelegate>"
v32@0:8@16B24B28
@"NSObject<OS_dispatch_semaphore>"
@"NSError"
v56@0:8d16{CGRect={CGPoint=dd}{CGSize=dd}}24
@"PBSnapshotView"
@"PBAppSwitcherTitleView"
v40@0:8@16^@24^@32
v32@0:8@"PBSUserPresentationRequest"16@?<v@?Q@"<NSSecureCoding>"@"NSError">24
v40@0:8@"PBSUserPresentationRequest"16@"NSDictionary"24@?<v@?B@"<NSSecureCoding>"@"NSError">32
v24@0:8@"PBSUserPresentationRequest"16
v52@0:8@?16@24B32@36@44
v48@0:8@16Q24@32@40
v64@0:8@16@24@32@40@?48@?56
@32@0:8Q16@24
Q40@0:8@16@24q32
@"<PBTextEntryViewControllerDelegate>"
@36@0:8@16B24@?28
@"UIVisualEffectView"
{CGPoint=dd}16@0:8
{CGPoint="x"d"y"d}
q32@0:8@16q24
q32@0:8@"UICollectionView"16q24
@"UICollectionViewCell"32@0:8@"UICollectionView"16@"NSIndexPath"24
q24@0:8@"UICollectionView"16
@"UICollectionReusableView"40@0:8@"UICollectionView"16@"NSString"24@"NSIndexPath"32
B32@0:8@"UICollectionView"16@"NSIndexPath"24
v40@0:8@"UICollectionView"16@"NSIndexPath"24@"NSIndexPath"32
v32@0:8@"UICollectionView"16@"NSIndexPath"24
v40@0:8@"UICollectionView"16@"UICollectionViewCell"24@"NSIndexPath"32
v48@0:8@"UICollectionView"16@"UICollectionReusableView"24@"NSString"32@"NSIndexPath"40
B48@0:8@16:24@32@40
B48@0:8@"UICollectionView"16:24@"NSIndexPath"32@40
v48@0:8@16:24@32@40
v48@0:8@"UICollectionView"16:24@"NSIndexPath"32@40
@"UICollectionViewTransitionLayout"40@0:8@"UICollectionView"16@"UICollectionViewLayout"24@"UICollectionViewLayout"32
B32@0:8@"UICollectionView"16@"UICollectionViewFocusUpdateContext"24
v40@0:8@"UICollectionView"16@"UICollectionViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UICollectionView"16
@"NSIndexPath"40@0:8@"UICollectionView"16@"NSIndexPath"24@"NSIndexPath"32
{CGPoint=dd}40@0:8@16{CGPoint=dd}24
{CGPoint=dd}40@0:8@"UICollectionView"16{CGPoint=dd}24
v24@0:8@"UIScrollView"16
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@16@24d32
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
v24@0:8@"PBAppSwitcherManager"16
v40@0:8@"PBAppSwitcherManager"16@"PBAppSwitcherItem"24@?<v@?B>32
v32@0:8d16@?24
B20@0:8B16
{CGPoint=dd}24@0:8@16
v32@0:8{CGPoint=dd}16
@"PBAppSwitcherManager"
@"_PBAppSwitcherCollectionView"
@"UIInterpolatingMotionEffect"
@"UIPanGestureRecognizer"
@"<PBCancellable>"
@"NSSet"
@"PBFeatureInfoViewController"
@"TVTextAlertController"
v36@0:8B16@20@?28
v32@0:8@"SSPurchaseManager"16@"NSArray"24
v32@0:8@"SSDownloadManager"16@"NSArray"24
v24@0:8@"SSDownloadManager"16
@"PCSimpleTimer"
@"SSPurchaseManager"
v24@0:8^{__CFUserNotification=}16
^{__CFUserNotification=}
@"NSUUID"
v32@0:8@16I24i28
@"NSNumber"
@"<PBMediaRemoteObserverDelegate>"
v24@0:8@"PBSMediaRemoteSiriContext"16
v32@0:8@"NSDictionary"16@?<v@?B@"NSError">24
@"<PBSiriScreenActionManagerDelegate>"
v24@0:8@"<PBSystemServiceNowPlayingDelegate>"16
v24@0:8@?<v@?BB>16
v24@0:8@?<v@?d>16
v24@0:8@?<v@?@"NSArray">16
v24@0:8@?<v@?@"NSString"i>16
v48@0:8@"NSString"16@"NSString"24@"NSDictionary"32@?<v@?B@"NSError">40
v24@0:8@"NSData"16
v24@0:8@?<v@?q>16
v28@0:8B16@?<v@?B>20
v32@0:8d16@24
v32@0:8d16@"NSURL"24
v24@0:8@?<v@?@"NSString">16
v32@0:8@"NSXPCListenerEndpoint"16@"NSString"24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSXPCListenerEndpoint"@"NSError">32
v24@0:8@?<v@?@"<PBSBulletinServiceInterface>">16
v24@0:8@?<v@?@"<PBSDiagnosticLogsServiceInterface>">16
v24@0:8@?<v@?@"<PBSOSUpdateServiceInterface>">16
v24@0:8@?<v@?@"<PBSAirPlayServiceInterface>">16
v24@0:8@?<v@?@"<PBSRestrictionServiceInterface>">16
v24@0:8@?<v@?@"<_PBSMediaRemoteServiceInternalInterface>">16
v24@0:8@?<v@?@"<PBSUserPresentationServiceInterface>">16
v32@0:8@"NSString"16@?<v@?B>24
v24@0:8@?<v@?>16
v48@0:8q16d24@"BKSAnimationFenceHandle"32d40
@20@0:8i16
@"PBAirPlayService"
@"PBDiagnosticLogsService"
@"PBOSUpdateService"
@"PBRestrictionService"
@"PBUserPresentationService"
@"NSXPCConnection"
@"<PBSystemServiceNowPlayingDelegate>"
v40@0:8@"FBApplicationTerminationAssertionService"16@"FBApplicationTerminationAssertion"24@?<v@?@"NSError">32
v32@0:8@"FBApplicationTerminationAssertionService"16@"FBApplicationTerminationAssertion"24
B24@0:8@"PBMediaRemoteObserver"16
v24@0:8@"PBMediaRemoteObserver"16
v32@0:8@"PBMediaRemoteObserver"16@"NSDictionary"24
v32@0:8@"PBLanguageChangeObserver"16B24B28
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@16@24@32@40
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@16@24@32
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@16q24d32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
Q32@0:8@16@24
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@16@24@?32
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
B20@0:8I16
v28@0:8I16@20
v20@0:8I16
v36@0:8@16I24d28
B24@0:8Q16
v32@0:8^@16^@24
B20@0:8i16
B32@0:8@16^@24
@"PBUserNotificationHandler"
@"PBSafeAreaWindow"
@"PBSerialNumberWindow"
@"BBDataProviderConnection"
@"NSMutableOrderedSet"
@"PBLanguageChangeObserver"
@"PBAppTransitionContext"
@"PBAppSwitcherCollectionViewController"
@"NSLock"
v64@0:8@16@24@32@40@48@?56
@"FBSApplicationTerminationAssertion"
@"SSDownload"
@"SSPurchase"
@"FBApplicationUpdateScenesTransaction"
{?="delegateForegroundUpdateComplete"b1"delegateReadyForFinalTransition"b1"delegateTransitionDidFail"b1}
@"BSAuditToken"
@"FBApplicationProcess"
@"<PBAppTransitionContextDelegate>"
v32@0:8d16d24
@"PBAccessoryUpdateOperation"
v24@0:8@"TVSExternalControlSystem"16
v32@0:8@"TVSExternalControlSystem"16q24
v28@0:8@"TVSExternalControlSystem"16B24
v40@0:8@16i24B28@32
v40@0:8@"TVSExternalControlSystem"16i24B28@"NSError"32
v28@0:8@16i24
v28@0:8@"TVSExternalControlSystem"16i24
v36@0:8@16i24d28
v36@0:8@"TVSExternalControlSystem"16i24d28
@"TVSExternalControlSystem"
B24@0:8q16
B24@0:8@"PBSiriScreenActionManager"16
@"PBUIPluginController"
@"PBSiriScreenActionContextProvider"
@52@0:8q16@24@32@40B48
@"LSApplicationProxy"
@"PBSAppState"
v32@0:8@"NSDictionary"16@?<v@?>24
v32@0:8@"NSDictionary"16@?<v@?@"<NSSecureCoding>"@"NSError">24
@"NSHashTable"
v32@0:8@"FBProcessManager"16@"FBProcess"24
v40@0:8@"FBSystemService"16@"NSString"24@?<v@?q>32
v40@0:8@"FBSystemService"16@"FBSystemServiceOpenApplicationRequest"24@?<v@?@"NSError">32
v56@0:8@"FBSystemService"16@"NSString"24@"NSDictionary"32@"BSAuditToken"40@?<v@?q>48
v64@0:8@"FBSystemService"16@"NSURL"24@"NSString"32@"NSDictionary"40@"BSAuditToken"48@?<v@?q>56
v32@0:8@"FBSystemService"16@?<v@?B>24
v48@0:8@"FBSystemService"16@"NSSet"24@"BSAuditToken"32@?<v@?q>40
v32@0:8@"FBSystemService"16Q24
v28@0:8@"FBSystemService"16B24
v40@0:8@"FBSystemService"16@"FBSDataResetRequest"24@?<v@?B>32
v48@0:8@"FBWorkspace"16@"NSString"24@"FBSSceneClientSettings"32@?<v@?@"FBScene">40
v40@0:8@"FBWorkspace"16@"NSString"24@?<v@?>32
v44@0:8@16@24B32@?36
v52@0:8@16@24@32B40@?44
@32@0:8@16@?24
B36@0:8@16B24@28
@"FBSSystemService"
@"FBProcess"
@"FBSystemService"
@"FBSceneManager"
@"FBProcessManager"
v32@0:8@"FBApplicationUpdateScenesTransaction"16@"FBApplicationProcess"24
v32@0:8@"FBApplicationUpdateScenesTransaction"16@"FBScene"24
v24@0:8@"BSTransaction"16
v20@0:8f16
@"TVOSUpdateViewController"
?333333
?333333
?ffffff
9Y>)F
ffffff
?333333
@333333
333333
@333333
?ffffff
?33s?K
?333333
?433333
?ffffff
dismissScreenSaver handled: %d
Present screen saver with options %@
Present screen saver complete
Dismiss screen saver with options %@
Dismiss screen saver complete
Use snapshot for Siri %d
Siri Showing Snapshot
Siri Showing Live UI
Key window updated: %@
dealloc %@
Setting badgeEnabled on %@ to %d
Connected to server and requesting current section state
Disconnected from server
%@ Bulletin viewService took too long to dismiss. Continuing
%@ Bulletin viewService completed normally
%@ Bulletin viewService completed, but took too long
userPresentationService invalidated %@
invalidate (service) dismissViewController
windowManagerWillPresentDialogViewController %@ service %@
presentUI (service) %@
presentUI (service) completed with reason %lu
presentUI (service) dismissHandler called
presentUI (service) terminationHandler called
presentUI (service) presentDialogViewController %@
presentUI (service) failed - presentation error: %@
messageUI (service) %@
dismissUI (service) %@
dismissUI (service) dismissViewController
view service prepared for request: %@
%@ removing remoteViewController %@ for request %@ bt %@
removing presentation service %@ for viewController %@ bt %@
Initial items(%lu) %@
Up double tapped, kill %@
Swiped up, kill %@
Items before update(%lu) %@
Delete index paths %@
Insert index paths %@
Items after update(%lu) %@
#Critical #SYSTEM Could not register for media remote service volume control notification
#Alert #SYSTEM Inhibiting %@ launch.
#Alert #SYSTEM Inhibiting Settings launch.
ViewService took too long to complete. Continuing
ViewService completed normally
ViewService completed, but took too long
#Alert #SYSTEM Tried to launch app with bundle identifier %{public}@, but no such app is installed
#Alert #SYSTEM App not available to handle '%@'
#Alert #SYSTEM App looks unsafe for use on the internet %{public}@
#Alert #SYSTEM App looks busy %{public}@
#Alert #SYSTEM App is not trusted %{public}@
#Alert #SYSTEM App is not enabled %{public}@
#Alert #SYSTEM Squelching launch of app "%{public}@" while waiting for app "%{public}@" to be debugged.
#Alert #SYSTEM %{public}@
#Alert #SYSTEM %@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>allow-obliterate-device</key>
<true/>
<key>allow-softwareupdated</key>
<true/>
<key>application-identifier</key>
<string>com.apple.PineBoard</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.BTServer.allowRestrictedServices</key>
<true/>
<key>com.apple.BTServer.appleMfgDataScanner</key>
<true/>
<key>com.apple.BTServer.programmaticPairing</key>
<true/>
<key>com.apple.BTServer.supportsPairing</key>
<true/>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.MobileAsset.SoftwareUpdate</key>
<true/>
<key>com.apple.QuartzCore.displayable-context</key>
<true/>
<key>com.apple.QuartzCore.global-capture</key>
<true/>
<key>com.apple.QuartzCore.secure-capture</key>
<true/>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.SystemConfiguration.SCDynamicStore-write-access</key>
<true/>
<key>com.apple.TVServices.DisplayManager</key>
<true/>
<key>com.apple.accessibility.api</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.appletv.pbs.allow-reboot</key>
<true/>
<key>com.apple.appletv.pbs.allow-siri-actions</key>
<true/>
<key>com.apple.appletv.pbs.allow-sleep</key>
<true/>
<key>com.apple.appletv.pbs.issue-data-reporter-service-access</key>
<true/>
<key>com.apple.assistant.client</key>
<true/>
<key>com.apple.atvcached.client</key>
<true/>
<key>com.apple.authkit.client.internal</key>
<true/>
<key>com.apple.backboard.client</key>
<true/>
<key>com.apple.backboardd.launchapplications</key>
<true/>
<key>com.apple.bulletinboard.dataprovider</key>
<true/>
<key>com.apple.bulletinboard.observer</key>
<true/>
<key>com.apple.bulletinboard.settings</key>
<true/>
<key>com.apple.frontboard.app-badge-value-access</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.locationd.effective_bundle</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.multitasking.systemappassertions</key>
<true/>
<key>com.apple.multitasking.termination</key>
<true/>
<key>com.apple.multitasking.unlimitedassertions</key>
<true/>
<key>com.apple.otacrashcopier.allowSubmitDiagnosticLogPathsWithIdentifier</key>
<true/>
<key>com.apple.private.CacheDelete</key>
<array>
<string>CLIENT_ENTITLEMENT</string>
<string>PURGE_ENTITLEMENT</string>
<string>PURGEABLE_ENTITLEMENT</string>
<string>CANCEL_PURGE_ENTITLEMENT</string>
</array>
<key>com.apple.private.allow-explicit-graphics-priority</key>
<true/>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.CoreControl</string>
</array>
<key>com.apple.private.assets.change-daemon-config</key>
<true/>
<key>com.apple.private.cecd.control</key>
<true/>
<key>com.apple.private.cecd.observer</key>
<true/>
<key>com.apple.private.externalaccessory.showallaccessories</key>
<true/>
<key>com.apple.private.hid.client.event-dispatch</key>
<true/>
<key>com.apple.private.lockdown.finegrained-get</key>
<array>
<string>NULL/BrickState</string>
<string>NULL/ActivationInfo</string>
<string>NULL/DeviceCertificate</string>
<string>NULL/ActivationPrivateKey</string>
</array>
<key>com.apple.private.mis.online_auth_agent</key>
<true/>
<key>com.apple.private.xpc.launchd.app-server</key>
<true/>
<key>com.apple.remote-text-metadata</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.timed</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>appleaccount</string>
<string>com.apple.certificates</string>
</array>
</dict>
</plist>
