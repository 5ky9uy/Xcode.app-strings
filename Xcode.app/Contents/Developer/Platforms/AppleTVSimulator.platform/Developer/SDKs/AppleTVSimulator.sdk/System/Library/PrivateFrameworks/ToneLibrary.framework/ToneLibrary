,=B`e=%
<default>
texttone:Note
texttone:Text-Message-Alert-In-Conversation
texttone:Tri-tone
texttone:New Mail
texttone:Sent Mail
texttone:Sent Tweet
texttone:Sharing Post
texttone:Photo Stream Post
texttone:Calendar Alert
texttone:Reminder Alert
texttone:Air Drop Invitation
system:Radar
texttone:App Notification
ringtone
sms-sound-identifier
voicemail-sound-identifier
newmail-sound-identifier
sentmail-sound-identifier
senttweet-sound-identifier
facebookpost-sound-identifier
calendaralert-sound-identifier
reminderalert-sound-identifier
airdrop-invitation-sound-identifier
alarm-sound-identifier
timer-sound-identifier
continuity-keyboard-sound-identifier
-per-account
/Library/Ringtones
Opening
Media/iTunes_Control/Ringtones
Media/iTunes_Control/iTunes/Ringtones.plist
Media/Purchases
Media/Purchases/Ringtones.plist
/System/Library/Audio/UISounds
AlertTones
Modern
AlarmWakeUpRingtones
Album
Artist
Total Time
Genre
Name
GUID
Purchased
Media Kind
Artwork File
Protected Content
Private
File Extension
Ringtones
import_
_TLToneManagerContentsChangedNotification
v8@?0
_TLToneManagerAccessQueue
com.apple.ToneLibrary.lock
sms-received1.caf
texttone:Chime
sms-received2.caf
texttone:Glass
sms-received3.caf
texttone:Horn
sms-received4.caf
texttone:Bell
sms-received5.caf
texttone:Electronic
sms-received6.caf
texttone:Anticipate
Anticipate.caf
texttone:Bloom
Bloom.caf
texttone:Calypso
Calypso.caf
texttone:Choo Choo
Choo_Choo.caf
texttone:Descent
Descent.caf
texttone:Fanfare
Fanfare.caf
texttone:Ladder
Ladder.caf
texttone:Minuet
Minuet.caf
texttone:News Flash
News_Flash.caf
texttone:Noir
Noir.caf
texttone:Sherwood Forest
Sherwood_Forest.caf
texttone:Spell
Spell.caf
texttone:Suspense
Suspense.caf
texttone:Telegraph
Telegraph.caf
texttone:Tiptoes
Tiptoes.caf
texttone:Typewriters
Typewriters.caf
texttone:Update
Update.caf
new-mail.caf
mail-sent.caf
tweet_sent.caf
Swish.caf
ReceivedMessage.caf
texttone:Alert
alarm.caf
texttone:Go-To-Sleep
go_to_sleep_alert.caf
Vibrations
Other
Note.m4r
texttone:Bamboo
Bamboo.m4r
texttone:Complete
Complete.m4r
texttone:Hello
Hello.m4r
texttone:Popcorn
Popcorn.m4r
texttone:Synth
Synth.m4r
texttone:Aurora
Aurora.m4r
texttone:Keys
Keys.m4r
texttone:Circles
Circles.m4r
texttone:Input
Input.m4r
Chord.m4r
Pulse.m4r
PhotoStreamAlertTone.caf
system:
itunes:
texttone:
alarmWakeUp:
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
v16@?0@"NSError"8
v24@?0@"NSDictionary"8@"NSError"16
v20@?0B8@"NSError"12
RINGTONE_PICKER_DEFAULT_RINGTONE_NAME
com.apple.ToneLibrary.TLToneManager.soundCacheAccessQueue
RINGTONE_PICKER_NONE
v32@?0@8@16^B24
%@%@
_rootDirectory
T@"NSString",R,N
_deviceITunesRingtoneDirectory
_deviceITunesRingtoneInformationPlist
_iTunesRingtoneDirectory
_iTunesRingtoneInformationPlist
_systemRingtoneDirectory
com.apple.ToneLibrary
_TLTonePreferencesDidChangeNotification
_TLAlertWatchPrefersSalientNotificationPreferenceDidChangeRemotelyNotification
com.apple.itunesstored.RingtoneAdded
_TLAlertWatchPrefersSalientNotificationPreferenceDidChangeLocallyNotification
AVItem
Unable to find class %s
/System/Library/PrivateFrameworks/Celestial.framework/Celestial
AVItem_PlaybackProperties
was-affected-by-accidental-tone-deletion
requires-reset-sync-post-accidental-tone-deletion
bundleIdentifier
T@"NSString",R,N,V_bundleIdentifier
name
T@"NSString",R,N,V_name
v32@?0@"NSString"8@"NSString"16@"NSString"24
v32@?0@"NSString"8@"NSDictionary"16^B24
TLVibrationManagerUserGeneratedVibrationsDidChange
usergeneratedvibration:
Pattern
Media/Vibrations/UserGeneratedVibrationPatterns.plist
Unexpected type for %@: %@ (%@)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-365/Library/Vibrations/TLVibrationPersistenceUtilities.m
__85+[TLVibrationPersistenceUtilities _objectIsValidUserGeneratedVibrationPattern:error:]_block_invoke
key of user generated vibration pattern wrapper
Invalid vibration pattern: %@
name of user generated vibration pattern
user generated vibration pattern wrapper
v32@?0^@8^@16^@24
__95+[TLVibrationPersistenceUtilities objectIsValidUserGeneratedVibrationPatternsDictionary:error:]_block_invoke
Invalid key object: %@. All key objects need to start with "%@"
key object
root object
<%@: %p
; type = %@
; topic = "%@"
; toneIdentifier = "%@"
; vibrationIdentifier = "%@"
; externalToneFileURL = %@
; externalToneMediaLibraryItemIdentifier = %llu
; has externalVibrationPattern
; audioCategory = "%@"
; audioVolume = %f
; maximumDuration = %f
; shouldRepeat = YES
; shouldIgnoreRingerSwitch = YES
type
topic
toneIdentifier
vibrationIdentifier
externalToneFileURL
externalToneMediaLibraryItemIdentifier
externalVibrationPattern
audioCategory
audioVolume
maximumDuration
shouldRepeat
shouldIgnoreRingerSwitch
hasCustomAudioVolume
Instances of TLAlertConfiguration cannot be mutated once they've been used to make an instance of TLAlert. Please make a copy of the TLAlertConfiguration instead.
supportsSecureCoding
TB,R
_hasCustomAudioVolume
TB,R,N,V_hasCustomAudioVolume
Tq,R,N,V_type
T@"NSString",C,N,V_topic
T@"NSString",C,N,V_toneIdentifier
T@"NSString",C,N,V_vibrationIdentifier
T@"NSURL",C,N,V_externalToneFileURL
TQ,N,V_externalToneMediaLibraryItemIdentifier
T@"NSDictionary",C,N,V_externalVibrationPattern
T@"NSString",C,N,V_audioCategory
Tf,N,V_audioVolume
forPreview
TB,N,GisForPreview,V_forPreview
Td,N,V_maximumDuration
TB,N,V_shouldRepeat
TB,N,V_shouldIgnoreRingerSwitch
tone
Fade In
Fade Out
identifier
T@"NSString",R,N,V_identifier
filePath
T@"NSString",R,N,V_filePath
T@"NSNumber",R,N,V_pid
purchased
TB,R,N,GisPurchased,V_purchased
TB,R,N,GisRingtone,V_ringtone
artworkFile
T@"NSString",R,N,V_artworkFile
duration
TQ,R,N,V_duration
protected
TB,R,N,GisProtected,V_protected
private
TB,R,N,GisPrivate,V_private
playbackProperties
T@"NSDictionary",R,N,V_playbackProperties
AVItemPlaybackProperties_RampInDuration
AVItemPlaybackProperties_RampOutDuration
playedToEnd
reachedMaximumDuration
stopped
userInterruption
systemInterruption
failed
????
; soundFileURL = %@
; wasSoundCreated = NO
; soundID = kSystemSoundID_NoneTone
; soundID = %lu
; vibrationPatternFileURL = %@
soundFileURL
T@"NSURL",R,N,V_soundFileURL
soundID
TI,R,N
vibrationPatternFileURL
T@"NSURL",R,N,V_vibrationPatternFileURL
v24@?0q8@"NSError"16
v16@?0@"TLAlertConfiguration"8
actualSound
T@"TLSystemSound",R,N
previewSound
TLAlertTypeNone
TLAlertTypeIncomingCall
TLAlertTypeTextMessage
TLAlertTypeTextMessageInConversation
TLAlertTypeNewVoicemail
TLAlertTypeNewMail
TLAlertTypeSentMail
TLAlertTypeSentTweet
TLAlertTypeFacebookPost
TLAlertTypePhotoStreamPost
TLAlertTypeCalendarAlert
TLAlertTypeReminderAlert
TLAlertTypeAirDropInvitation
TLAlertTypeAlarm
TLAlertTypeTimer
TLAlertTypeDigitalTouch
TLAlertTypeSystemNotification
TLAlertTypeAppNotification
TLAlertTypeEmergency
TLAlertTypeActivity
TLAlertTypePassbook
TLAlertTypeHummingbird
TLAlertTypeSOS
TLAlertTypeContinuityKeyboard
none
incoming call
text message
text message in conversation
new voicemail
new mail
sent mail
sent tweet
facebook post
photo stream post
calendar alert
reminder alert
airdrop invitation
alarm
timer
digital touch
system notification
app notification
emergency
activity
passbook
hummingbird
continuity keyboard
v16@?0q8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-365/Library/Playback/TLAlertType.m
___TLAlertTypeValidateConsistencyOfEnumeration_block_invoke
Accent
Staccato
Text-Message-Alert-In-Conversation
Quick
<none>
Alert
Built-In-System-Sound-ID-Vibration
SystemCallVibrationIdentifier
SystemTextMessageVibrationIdentifier
SystemNewVoiceMailVibrationIdentifier
SystemNewMailVibrationIdentifier
SystemSentMailVibrationIdentifier
SystemTweetVibrationIdentifier
SystemFacebookPostVibrationIdentifier
SystemCalendarAlertVibrationIdentifier
SystemReminderAlertVibrationIdentifier
SystemAirDropInvitationVibrationIdentifier
SystemAlarmVibrationIdentifier
SystemTimerVibrationIdentifier
SystemContinuityKeyboardVibrationIdentifier
PerAccount
vibration:
VIBRATION_PICKER_NONE
_TLVibrationManagerAccessQueue
v12@?0i8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-365/Library/Vibrations/TLVibrationManager.m
-[TLVibrationManager dealloc]
*** -[%@ %@] Attempted to mutate the shared vibration manager: %@. Create your own instance of %@ manually if you need to mutate it.
UserSelectable
Classic
plist
@"NSDictionary"24@?0@"NSString"8@"NSString"16
VIBRATION_UNKNOWN_NAME
Unexpected exception: %@.
needsRefresh
TB,R,N,V_needsRefresh
allowsAutoRefresh
TB,N,V_allowsAutoRefresh
shouldVibrateForCurrentRingerSwitchState
TB,R,N
shouldVibrateOnRing
shouldVibrateOnSilent
_TLVibrationPreferencesDidChangeNotification
com.apple.springboard.ring-vibrate.changed
com.apple.springboard.silent-vibrate.changed
com.apple.springboard.ringerstate
com.apple.springboard
SBRingerMuted
ring-vibrate
silent-vibrate
playbackBackEnd
Tq,N,V_playbackBackEnd
timeoutTimerSource
T@"NSObject<OS_dispatch_source>",&,N,V_timeoutTimerSource
beingInterrupted
TB,N,GisBeingInterrupted,V_beingInterrupted
Atoms
Intensity
Looped
VibePattern
OnDuration
OffDuration
It is pretty much impossible to compute the duration of a modern vibration pattern that uses atoms. This is invalid.
_artificiallyRepeatingPropertyListRepresentation
T@,R,N
propertyListRepresentation
contextObject
T@,&,N,V_contextObject
%@.%@
%@.%@.%@
label
T@"NSString",R,N,V_label
%@.%@-%@-%@
AccessQueue
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-365/Library/Playback/BackEnds/SystemSound/TLAlertSystemSoundController.m
-[TLAlertSystemSoundController _assertRunningOnAccessQueue]
Failed to prepare tone sound ID for playback.
true
false
General
Playback
ToneManagement
VibrationManagement
com.apple.tonelibraryd
TLServiceCommunicationErrorDomain
TLServiceValidationErrorDomain
TLServicePersistenceErrorDomain
%@=%@
v24@?0@"NSSet"8@"NSError"16
HWModelStr
ringtoneStoreAvailable
TB,R,N,GisRingtoneStoreAvailable
alertToneStoreAvailable
TB,R,N,GisAlertToneStoreAvailable
hasVibratorCapability
hasUserGeneratedVibrationsCapability
deviceCodeName
simplifiedDeviceCodeName
SSDeviceAvailableItemKindsChangedNotification
/System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
SSDevice
SSItemKindRingtone
SSItemKindTone
TLAlertTopicTextMessageInConversation
TLAlertTopicSystemNotificationBluetoothLowEnergy
TLAlertTopicSystemNotificationFindMyDevice
TLAlertTopicAppNotificationRemote
TLAlertTopicActivityGoalAttained
TLAlertTopicActivityGoalBehind
TLAlertTopicPassbookGeofence
TLAlertTopicSOSCountdownTick
TLAlertTopicSOSDialStart
TLAlertTopicAlarmGoToSleep
TLAlertTopicAlarmWakeUp
sound
T@"TLSystemSound",&,N,V_sound
completionHandler
T@?,C,N,V_completionHandler
playbackCompletionType
Tq,N,V_playbackCompletionType
TLAlertErrorDomain
externalTone:%@-%@
mediaLibrary:%llu-%@
externalVibration:%llu-%@
apple-internal-install
 [%ld]
<%@: %p; type = %@>
; configuration = %@
; toneIdentifier = %@
; vibrationIdentifier = %@
configuration
T@"TLAlertConfiguration",R,N,V_configuration
T@"NSString",R,N,V_toneIdentifier
T@"NSString",R,N,V_vibrationIdentifier
_TLAlertControllerShouldStopAllAlertsNotification
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-365/Library/Playback/TLAlertController.m
-[TLAlertController _assertRunningOnAccessQueue]
The method +[TLAlert _stopAllAlerts] should not be called from anywere except the %@ process.
Updating the audio volume of %@ is not supported. Please refer to TLAlert_Private.h for more details on the limitations of the audio volume dynamic update API.
v12@?0B8
currentItem
currentItem.status
AudioEventQueue
; playingAlert = <%@: %p>
; playingAlert = %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-365/Library/Playback/BackEnds/QueuePlayer/TLAlertQueuePlayerController.m
-[TLAlertQueuePlayerController _assertRunningOnAudioEventQueue]
-[TLAlertQueuePlayerController _stopPlayingAlerts:withOptions:playbackCompletionType:completionHandler:]
playable
Failed to prepare tone asset for playback.
-[TLAlertQueuePlayerController _startPlaybackForAssetWithLoadedProperties:alert:]
Phone
BluetoothLE
LocatePhone
ToneLibrary
Ringtone
-[TLAlertQueuePlayerController _endPreventingAudioSessionDeactivation]
CMTimeCompare
/System/Library/Frameworks/CoreMedia.framework/CoreMedia
CMTimeMake
CMTimeGetSeconds
CMTimeMakeWithSeconds
kCMTimeZero
AVSystemController
alloc
init
initWithITunesRingtonePlistAtPath:
initWithLabel:appendUUIDToLabel:
class
_copySharedResourcesPreferencesDomainForDomain:
_loadITunesRingtoneInfoPlistAtPath:
_loadAlertToneInfo
_loadToneIdentifierAliasMap
_performBlockInAccessQueue:
performSynchronousBlock:
dealloc
_rootDirectory
stringByAppendingPathComponent:
_iTunesRingtoneDirectory
_copyITunesRingtonesFromManifestPath:mediaDirectoryPath:
_deviceITunesRingtoneInformationPlist
_deviceITunesRingtoneDirectory
addEntriesFromDictionary:
initWithContentsOfFile:
objectForKey:
allKeys
countByEnumeratingWithState:objects:count:
initWithPropertyListRepresentation:filePath:
identifier
setObject:forKey:
defaultCenter
postNotificationName:object:
allValues
UTF8String
defaultManager
_installedTones
filePath
attributesOfItemAtPath:error:
longLongValue
dictionaryWithObjects:forKeys:count:
_addToneEntries:toManifestAtPath:mediaDirectory:shouldSkipReload:
stringByDeletingLastPathComponent
_ensureDirectoryExistsAtPath:
_lockManifestAtPath:
fileURLWithPath:
assetWithURL:
hasProtectedContent
mutableCopy
numberWithBool:
dataWithPropertyList:format:options:error:
writeToFile:options:error:
_reloadITunesRingtonesAfterExternalChange
setWithObjects:
_removeTonesFromManifestAtPath:fileNames:shouldSkipReload:alreadyLockedManifest:removedEntries:
removeObjectForKey:
copy
fileSystemRepresentation
bundleForClass:
resourcePath
_systemEmbeddedSoundDirectory
_baseDirectoryForAlertToneSoundFiles
_systemSoundDirectory
_systemNewSoundDirectory
initWithSoundFileURL:vibrationPatternFileURL:actualSoundID:previewSoundID:
_systemEmbeddedModernSoundDirectory
defaultRingtoneIdentifier
isEqualToString:
hasPrefix:
initWithServiceName:
retrieveCurrentTonePreferencesWithCompletionHandler:
setCurrentToneIdentifier:keyedByTopic:forPreferenceKey:completionHandler:
retrieveUserGeneratedVibrationPatternsWithCompletionHandler:
setUserGeneratedVibrationPatterns:withCompletionHandler:
removeAllUserGeneratedVibrationPatternsWithCompletionHandler:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
interfaceWithProtocol:
setRemoteObjectInterface:
resume
_newServiceConnection
tl_nonRedundantDescription
remoteObjectProxyWithErrorHandler:
invalidate
currentToneIdentifierForAlertType:topic:
setCurrentToneIdentifier:forAlertType:topic:
length
_systemWideTonePreferenceKeyForAlertType:
stringByAppendingString:
_tonePreferencesFromService
toneWithIdentifierIsValid:
stringWithString:
_currentToneIdentifierForAlertType:topic:
_defaultToneIdentifierForAlertType:topic:
_setToneIdentifierUsingService:keyedByTopic:forPreferenceKey:
count
_didSetTonePreferenceSuccessfullyWithKey:inDomain:usingPreferencesOfKind:
currentToneIdentifierForAlertType:
nameForToneIdentifier:
currentToneSoundIDForAlertType:topic:
_soundForToneIdentifier:
soundID
defaultToneIdentifierForAlertType:
filePathForToneIdentifier:
_toneWithIdentifierIsSystemAlertTone:
actualSound
_toneWithIdentifierIsITunesRingtone:
_toneWithIdentifierIsNonDefaultSystemRingtone:
_toneWithIdentifierIsDefaultRingtone:
_toneWithIdentifierIsAlarmWakeUp:
initWithSoundFileURL:soundID:vibrationPatternFileURL:
_filePathForToneIdentifier:isValid:
_fileNameFromToneIdentifier:withPrefix:
_systemRingtoneDirectory
stringByAppendingPathExtension:
_alarmWakeUpRingtoneDirectory
_checkForFileExistenceAtPath:allowingTCCPreflight:
soundFileURL
path
_defaultRingtonePath
previewSound
_nameForToneIdentifier:isValid:
_localizedNameOfToneWithIdentifier:
_defaultRingtoneName
name
lastPathComponent
_toneIdentifierForFileAtPath:isValid:
enumerateKeysAndObjectsUsingBlock:
stringByDeletingPathExtension
_toneWithIdentifierIsValid:
initWithPath:error:
playbackProperties
setAttribute:forKey:error:
UUID
UUIDString
stringWithFormat:
createFileAtPath:contents:attributes:
_addToneToManifestAtPath:metadata:fileName:mediaDirectory:
_removeToneFromManifestAtPath:fileName:
removeItemAtPath:error:
_evaluateOrphanEntriesCleanupStatusForcingReevaluationIfPreviouslyDone:returningFilePathsForFoundOrphans:wasAffectedByAccidentalToneDeletion:
addObject:
_removeOrphanedPlistEntriesInManifestAtPath:mediaDirectory:
unionSet:
rangeOfString:
substringFromIndex:
pathExtension
fileExistsAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
_handleTonePreferencesChangedNotificationForPreferencesKinds:
sharedToneManager
_iTunesRingtoneInformationPlist
_iTunesToneWithIdentifier:
_installedTonesSize
_aliasForToneIdentifier:
setCurrentToneIdentifier:forAlertType:
currentToneNameForAlertType:
currentToneSoundIDForAlertType:
_previewSoundForToneIdentifier:
_toneIdentifierForFileAtPath:
newAVItemForToneIdentifier:
importTone:metadata:completionBlock:
removeImportedToneWithIdentifier:
_insertPurchasedToneMetadata:fileName:
_transferPurchasedToITunes:
_wasAffectedByAccidentalToneDeletion
_removeOrphanedManifestEntriesReturningFilePathsForFoundOrphans:
_registerDidRequestResetSyncPostAccidentalToneDeletion
_filePathHasSupportedExtensionForRingtone:
_toneIsSettableForAlertType:
_handleDeviceRingtonesChangedNotification
.cxx_destruct
_accessQueue
_iTunesTonesByIdentifier
_iTunesToneIdentifiersByPID
_alertTonesByIdentifier
_toneIdentifierAliasMap
_shouldUseServiceToAccessTonePreferences
_cachedTonePreferences
_shouldIgnoreNextToneDidChangeNotification
defaultSystemApplication
initWithBundleIdentifier:name:
bundleIdentifier
_bundleIdentifier
_name
_existingPerTopicPreferenceKeyPrefixesWithRegularPreferenceKeys:regularPreferenceKeysCount:
_setValue:forKey:inDomain:usingPreferencesScope:
_enumerateKeysAndValuesWithEligibleKeyPrefixes:inDomain:usingPreferencesScope:withBlock:
substringToIndex:
_synchronizeDomain:usingPreferencesScope:
_copyAllKeysAndValuesFromDomain:usingPreferencesScope:
migratePerTopicPreferencesInDomain:withRegularPreferenceKeys:regularPreferenceKeysCount:intoSinglePerTopicPreferenceWithSuffix:usingPreferencesScope:
tl_errorWithDomain:description:
stringWithUTF8String:
callStackSymbols
isValidVibrationPatternPropertyListRepresentation:
_validateObjectWithError:validationBlock:
_objectIsValidUserGeneratedVibrationPattern:error:
objectIsValidUserGeneratedVibrationPatternsDictionary:error:
userGeneratedVibrationStoreFileURL
isEqualToDictionary:
appendFormat:
appendString:
initWithType:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeInt64ForKey:
decodeObjectOfClasses:forKey:
decodeFloatForKey:
decodeDoubleForKey:
decodeBoolForKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeInt64:forKey:
encodeFloat:forKey:
encodeDouble:forKey:
encodeBool:forKey:
raise:format:
_throwForFrozenInstance
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
_freeze
_performBlockIgnoringFrozenFlag:
setTopic:
setToneIdentifier:
setVibrationIdentifier:
setExternalToneFileURL:
setExternalToneMediaLibraryItemIdentifier:
setExternalVibrationPattern:
setAudioCategory:
setAudioVolume:
setForPreview:
setMaximumDuration:
setShouldRepeat:
setShouldIgnoreRingerSwitch:
_hasCustomAudioVolume
type
topic
toneIdentifier
vibrationIdentifier
externalToneFileURL
externalToneMediaLibraryItemIdentifier
externalVibrationPattern
audioCategory
audioVolume
isForPreview
maximumDuration
shouldRepeat
shouldIgnoreRingerSwitch
_isFrozen
_forPreview
_shouldRepeat
_shouldIgnoreRingerSwitch
_audioVolume
_type
_topic
_toneIdentifier
_vibrationIdentifier
_externalToneFileURL
_externalToneMediaLibraryItemIdentifier
_externalVibrationPattern
_audioCategory
_maximumDuration
boolValue
unsignedIntegerValue
isPurchased
isRingtone
artworkFile
duration
isProtected
isPrivate
_purchased
_ringtone
_protected
_private
_identifier
_filePath
_pid
_artworkFile
_duration
_playbackProperties
dictionaryWithContentsOfURL:
vibrationPatternFileURL
_soundID
_shouldDisposeOfSoundID
_soundFileURL
_vibrationPatternFileURL
alertWithConfiguration:
playWithCompletionHandler:
configuration
sharedAlertController
stopRepeatedlyPlayingAlert:withOptions:completionHandler:targetQueue:
initWithType:accountIdentifier:
initWithType:toneIdentifier:vibrationIdentifier:
playWithCompletionHandler:targetQueue:
startPlayingRepeatedly
stopPlayingRepeatedlyWithOptions:completionHandler:targetQueue:
_actualSoundID
_previewSoundID
_actualSound
_previewSound
currentToneIdentifierForAlertType:accountIdentifier:
setCurrentToneIdentifier:forAlertType:accountIdentifier:
_initWithSpecialBehaviors:
_handleVibrationPreferencesDidChangeNotificationForPreferencesKinds:atInitiativeOfVibrationManager:
_handleVibrateOnRingOrSilentDidChangeNotification
_isUnitTestingModeEnabled
refresh
_userGeneratedVibrationPatterns
currentVibrationIdentifierForAlertType:topic:
setCurrentVibrationIdentifier:forAlertType:topic:
_systemWideVibrationPatternPreferenceKeyForAlertType:
vibrationWithIdentifierIsValid:
defaultVibrationIdentifierForAlertType:
_currentVibrationIdentifierForAlertType:topic:
_currentVibrationIdentifierForAlertType:topic:correspondingToneIdentifier:allowsNoneDefaultToAnyActualVibrationSubstitution:
_defaultVibrationIdentifierForAlertType:topic:correspondingToneIdentifier:
_currentVibrationIdentifierForAlertType:topic:correspondingToneIdentifier:
_didSetVibrationPreferenceSuccessfullyWithKey:inDomain:usingPreferencesOfKind:
currentVibrationIdentifierForAlertType:
nameOfVibrationWithIdentifier:
patternForVibrationWithIdentifier:repeating:
_patternForSystemVibrationWithIdentifier:shouldLogAssetPath:
_systemVibrationIdentifiersForSubdirectory:
containsObject:
noneVibrationPattern
propertyListRepresentation
sharedCapabilitiesManager
deviceCodeName
fileExistsAtPath:isDirectory:
simplifiedDeviceCodeName
_completeSystemVibrationsSubdirectoryForSubdirectory:
pathsForResourcesOfType:inDirectory:
URLForResource:withExtension:subdirectory:
_localizedNameForVibrationWithIdentifier:
patternForVibrationWithIdentifier:
_nameOfVibrationWithIdentifier:
initWithPropertyListRepresentation:
_artificiallyRepeatingPropertyListRepresentation
allObjects
_retrieveUserGeneratedVibrationPatternsUsingService
_handleUserGeneratedVibrationsDidChangeNotification
_setUserGeneratedVibrationPatternsUsingService:error:
_didChangeUserGeneratedVibrationPatterns
initWithDictionary:
_saveUserGeneratedVibrationPatterns:error:
_removeAllUserGeneratedVibrationPatternsUsingServiceWithError:
_booleanPreferenceForKey:defaultValue:
shouldVibrateOnSilent
shouldVibrateOnRing
sharedVibrationManager
setAllowsAutoRefresh:
setCurrentVibrationIdentifier:forAlertType:
currentVibrationNameForAlertType:
currentVibrationPatternForAlertType:
defaultVibrationNameForAlertType:
defaultVibrationPatternForAlertType:
noneVibrationName
allUserSelectableSystemVibrationIdentifiers
allUserGeneratedVibrationIdentifiers
_vibrationIsSettableForAlertType:
addUserGeneratedVibrationPattern:name:error:
setName:forUserGeneratedVibrationWithIdentifier:error:
deleteUserGeneratedVibrationPatternWithIdentifier:error:
_numberOfUserGeneratedVibrations
_removeAllUserGeneratedVibrationsWithError:
shouldVibrateForCurrentRingerSwitchState
needsRefresh
allowsAutoRefresh
_specialBehaviors
_cachedSystemVibrationIdentifiers
_cachedSystemVibrationCompleteSubdirectories
_cachedUserGeneratedVibrationPatterns
_needsRefresh
_allowsAutoRefresh
playbackBackEnd
setPlaybackBackEnd:
timeoutTimerSource
setTimeoutTimerSource:
isBeingInterrupted
setBeingInterrupted:
_beingInterrupted
_playbackBackEnd
_timeoutTimerSource
floatValue
numberWithFloat:
numberWithInt:
arrayWithObjects:count:
_initWithPropertyListRepresentation:skipValidation:
dictionaryWithDictionary:
_computedDuration
addObjectsFromArray:
intValue
simpleVibrationPatternWithVibrationDuration:pauseDuration:
complexVibrationPatternWithDurationsForVibrationsAndPauses:
appendVibrationComponentWithDuration:isPause:
contextObject
setContextObject:
_propertyListRepresentation
_complexPatternDescription
_contextObject
objCType
currentThread
threadDictionary
_performSynchronousBlockInSerialQueue:
performAsynchronousBlock:
label
_threadLocalStorageKey
_serialQueue
_label
_prepareForDealloc
_assertRunningOnAccessQueue
_stopPlayingAlerts:withOptions:playbackCompletionType:completionHandler:
_playAlert:withCompletionHandler:
_performBlockOnAccessQueue:
_stopRepeatedlyPlayingAlert:withOptions:completionHandler:targetQueue:
_soundForAlert:
_didCompletePlaybackForAlert:completionHandler:playbackCompletionType:error:
_willBeginPlayingAlert:withSoundID:
setSound:
setCompletionHandler:
setPlaybackCompletionType:
initWithKeyOptions:valueOptions:capacity:
_optionsForSystemSoundAlert:
_systemSoundPlaybackDidCompleteForAlert:
sound
playbackCompletionType
_didCompletePlaybackForAlert:withCompletionType:error:
hasVibratorCapability
_soundBehaviorForAlert:
numberWithUnsignedInt:
_vibrationPatternForAlert:
completionHandler
playAlert:withCompletionHandler:
stopPlayingAlerts:withOptions:playbackCompletionType:completionHandler:
updateAudioVolumeDynamicallyForAlert:toValue:
_accessQueueLabel
_alertSystemSoundContexts
currentVibrationIdentifierForAlertType:accountIdentifier:
setCurrentVibrationIdentifier:forAlertType:accountIdentifier:
initWithFormat:arguments:
errorWithDomain:code:userInfo:
userInfo
stringByReplacingOccurrencesOfString:withString:
_handleStoreAvailableItemKindsChangedNotification:
addObserver:selector:name:object:
_checkRingtoneStoreAvailability
removeObserver:name:object:
_hasTelephonyCapability
currentDevice
getAvailableItemKindsWithBlock:
hasSuffix:
isRingtoneStoreAvailable
isAlertToneStoreAvailable
hasUserGeneratedVibrationsCapability
_isRingtoneStoreAvailable
_isAlertToneStoreAvailable
_deviceCodeNameSimplicationMapping
_sound
_completionHandler
_playbackCompletionType
_initWithConfiguration:toneIdentifier:vibrationIdentifier:
stopWithOptions:
stopAllAlerts
performBlockOnAudioEventQueue:
initWithFormat:
_descriptionForDebugging:
playToneAndVibrationForType:
_stopAllAlerts
_queueAudioEventBlockIfNecessary:
stop
_updateAudioVolumeDynamicallyToValue:
_instanceIndex
_configuration
mainBundle
_stopAllAlertsInCurrentProcess
_prepareForPlayingAlert:
_didCompletePlaybackOfAlert:
_queuePlayerController
_playbackBackEndForAlert:
_controllerForPlaybackBackEnd:
_didReachTimeoutForAlert:
numberWithInteger:
integerValue
_systemSoundController
_shouldStopAlertForUserInterruption:
_alertContexts
_destroyQueuePlayer
_updateAudioVolumeDynamicallyForAlert:toValue:
_assertRunningOnAudioEventQueue
_beginPreventingAudioSessionDeactivation
_stopPlayback
_didCompletePlaybackWithCompletionType:error:
_reloadPlaybackForPlayingAlertWithToneIdentifier:
_endPreventingAudioSessionDeactivation
_stopPlaybackWithOptions:playerWasAlreadyPausedExternally:
volume
setVolume:
_propertyKeysOfInterestForToneAssets
statusOfValueForKey:error:
status
_createQueuePlayerIfNecessary
_startPlaybackForAssetWithLoadedProperties:alert:
loadValuesAsynchronouslyForKeys:completionHandler:
_fallbackToneIdentifierForPlayingAlert
_canPlayToneAsset:
_stopObservingQueuePlayer
removeAllItems
_willBeginPlayingAlert
_shouldVibrateForAlert:
playerItemWithAsset:
insertItem:afterItem:
_startObservingQueuePlayer
vibrationPattern
setVibrationPattern:
play
setRate:withVolumeRampDuration:
pause
_didEndPlayingAlert
_audioCategoryForAlert:
sharedInstance
category
categoryOptions
setCategory:withOptions:error:
_audioVolumeForAlert:audioCategory:
_activateAudioSessionIfNeeded
_deactivateAudioSessionIfNeeded
_clientNameForAlert:
_clientPriorityForAlert:
_clientName
_clientPriority
initWithDispatchQueue:
setAllowsExternalPlayback:
_setClientPriority:
_setClientName:
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:context:
_queuePlayer:currentItemWasUpdatedFromValue:
_queuePlayer:currentItemStatusWasUpdatedToValue:
observeValueForKeyPath:ofObject:change:context:
seekToTime:
items
currentItem
error
code
sharedAVSystemController
getVolume:forCategory:
_shouldHandleAudioSessionActivationForAlert:
setActive:error:
_startObservingAudioSessionInterruptionNotifications
_stopObservingAudioSessionInterruptionNotifications
setActive:withOptions:error:
_handleAudioSessionInterruptionNotification:
_handleAudioSessionInterruptionOfType:withOptions:
_shouldBypassRingerSwitchPolicyForAlert:
_audioEventQueue
_audioEventQueueLabel
_isObservingQueuePlayer
_queuePlayer
_playingAlert
_playingToneIdentifier
_playingAlertCompletionHandler
_previousAudioCategory
_previousAudioCategoryOptions
_isAudioSessionActive
_audioSessionDeactivationPreventionRequestsCount
_isObservingAudioSessionInterruptionNotification
localizedStringForKey:value:table:
%{public}@: Could not update ringtones plist
Unable to create file lock.
Unable to take file lock.
Unexpected error while retrieving current tone preferences: %{public}@.
Failed retrieving current tone preferences: %{public}@.
Unexpected error trying to set a tone preference: %{public}@.
Failed setting a tone preference: %{public}@.
currentToneIdentifierForAlertType:%{public}@ topic:@"%{public}@" ==> %{public}@
currentToneIdentifierForAlertType:%{public}@ ==> %{public}@
setCurrentToneIdentifier:@"%{public}@" forAlertType:%{public}@ topic:@"%{public}@"
setCurrentToneIdentifier:@"%{public}@" forAlertType:%{public}@
_soundForToneIdentifier %{public}@ ==> %{public}@
filePathForToneIdentifier: %{public}@ ==> %{public}@
toneWithIdentifierIsValid %{public}@ ==> %{public}@
Failed to create directory at path: %{public}@. %{public}@.
*** Assertion failure in %{private}s, %{private}@:%{private}lu.
%{private}@
*** Assertion failure.
Pointers of validation block can't be NULL.
%{public}@: -dealloc. AudioServicesDisposeSystemSoundID for soundID = %{public}lu returned %{public}ld.
%{public}@: -soundID. AudioServicesCreateSystemSoundIDWithOptions for URL %{public}@ with vibration pattern URL %{public}@ produced soundID = %{public}lu and returned %{public}ld.
The minimum value of TLAlertType is expected to be TLAlertTypeNone, i.e. 0. Instead, it was: %{public}ld
The maximum value of TLAlertType is expected to be %{public}ld; instead, it was %{public}ld. You probably forgot to update the definition of _TLAlertTypeMaximumAllowedValue in TLAlertType_Internal.h.
TLAlertType values are expected to be subsequent integer values.
Found no living vibration managers while deallocating %{public}p.
Looking up system vibrations for subdirectory %{public}@ at absolute path: %{public}@.
Using "none" vibration pattern for vibration identifier "%{public}@"
Vibration pattern for identifier "%{public}@" found at path: %{public}@.
Unexpected error while retrieving user generated vibration patterns: %{public}@.
Failed retrieving user generated vibration patterns: %{public}@.
Unexpected error while setting user generated vibration patterns: %{public}@.
Failed setting user generated vibration patterns with error: %{public}@.
Unexpected error while removing user generated vibration patterns: %{public}@.
Failed removing user generated vibration patterns with error: %{public}@.
Expected to be running in access queue.
%{public}@: _playAlert:(%{public}@). Sound: %{public}@.
%{public}@: _playAlert:(%{public}@). Calling AudioServicesPlaySystemSoundWithOptions for soundID: %{public}lu.
%{public}@: _playAlert:(%{public}@). Running completion block for AudioServicesPlaySystemSoundWithOptions for soundID: %{public}lu.
%{public}@: _stopPlayingAlerts:. Calling AudioServicesStopSystemSound for soundID: %{public}lu with inStopNow = true for alert %{public}@.
%{public}@: _stopRepeatedlyPlayingAlert:(%{public}@). Calling AudioServicesStopSystemSound for soundID: %{public}lu with inStopNow = %{public}@.
%{public}@: +_optionsForSystemSoundAlert:(%{public}@). kAudioServicesPlaySystemSoundOptionBehaviorKey => %{public}lu.
%{public}@: +_optionsForSystemSoundAlert:(%{public}@). kAudioServicesPlaySystemSoundOptionVibrationPatternKey => non-nil.
%{public}@: +_optionsForSystemSoundAlert:(%{public}@). kAudioServicesPlaySystemSoundOptionLoopKey => true.
%{public}@: +_optionsForSystemSoundAlert:(%{public}@). kAudioServicesPlaySystemSoundOptionVolumeKey => %{public}f.
%{public}@: +_optionsForSystemSoundAlert:(%{public}@). kAudioServicesPlaySystemSoundOptionIgnoreRingerSwitchKey => true.
Nothing to be played for alert configuration: %{public}@. Returning a nil alert.
%{public}@: -_playAlert:(%{public}@).
API misuse.
%{public}@: -_stopPlayingAlerts:(<%{public}lu alerts>) playbackCompletionType:(%{public}@).
%{public}@: -_stopPlayingAlerts:(<%{public}lu alerts>) playbackCompletionType:(%{public}@). %{public}@ is playing. Interrupting it.
%{public}@: -_stopPlayingAlerts:(<%{public}lu alerts>) playbackCompletionType:(%{public}@). %{public}@ is NOT playing. Skipping it.
%{public}@: -_updateAudioVolumeDynamicallyForAlert. Adjusted volume of %{public}@ to %{public}f for %{public}@.
%{public}@: -_canPlayToneAsset:(%{public}@). Can't play tone asset because property %{public}@ is not loaded.
%{public}@: -_canPlayToneAsset:(%{public}@). Can't play tone asset because its duration is too short.
%{public}@: -_canPlayToneAsset:(%{public}@). Can play!
%{public}@: -_reloadPlaybackForPlayingAlertWithToneIdentifier:(%{public}@). [_queuePlayer status] == AVPlayerStatusFailed for %{public}@. Destroying player.
%{public}@: -_reloadPlaybackForPlayingAlertWithToneIdentifier:(%{public}@). [toneAsset loadValuesAsynchronouslyForKeys:...] for %{public}@.
%{public}@: -_reloadPlaybackForPlayingAlertWithToneIdentifier: did finish loading values asynchronously for %{public}@.
%{public}@: -_reloadPlaybackForPlayingAlertWithToneIdentifier:(%{public}@). Failed to instantiate an AVURLAsset with URL: %{public}@.
%{public}@: -_reloadPlaybackForPlayingAlertWithToneIdentifier:(%{public}@). Failed to prepare tone asset for playback. Aborting.
%{public}@: -_startPlaybackForAssetWithLoadedProperties:(%{public}@). [_queuePlayer removeAllItems] on %{public}@ before initiating playback.
%{public}@: -_startPlaybackForAssetWithLoadedProperties:(%{public}@). inserting %{public}lu player items into %{public}@ for tone asset: %{public}@.
%{public}@: -_startPlaybackForAssetWithLoadedProperties:(%{public}@). (iteration #%{public}lu) failed to create AVPlayerItem for tone asset: %{public}@.
%{public}@: -_startPlaybackForAssetWithLoadedProperties:(%{public}@). Failed to wrap external vibration pattern as an instance of TLVibrationPattern. Falling back to passing the external vibration pattern through.
Vibration pattern on the _queuePlayer was expected to be nil at this point.
%{public}@: -_startPlaybackForAssetWithLoadedProperties:(%{public}@). Leaving [_queuePlayer vibrationPattern] as nil on player %{public}@ because the vibration identifier is %{public}@.
%{public}@: -_startPlaybackForAssetWithLoadedProperties:(%{public}@). [_queuePlayer setVibrationPattern:vibrationPattern] on player %{public}@ with a non-nil pattern.
%{public}@: -_startPlaybackForAssetWithLoadedProperties:(%{public}@). [_queuePlayer play] on %{public}@.
%{public}@: -_stopPlaybackWithOptions. [_queuePlayer setRate:withVolumeRampDuration:] with fadeOutDuration %{public}f for %{public}@.
%{public}@: -_stopPlaybackWithOptions. [_queuePlayer pause] for %{public}@.
%{public}@: -_stopPlaybackWithOptions. playerWasAlreadyPausedExternally = YES for %{public}@.
%{public}@: -_stopPlaybackWithOptions. [_queuePlayer removeAllItems] for %{public}@.
%{public}@: -_stopPlaybackWithOptions. [_queuePlayer setVibrationPattern:nil] for %{public}@.
%{public}@: -_willBeginPlayingAlert.
%{public}@: -_willBeginPlayingAlert. Successfully set audio category to %{public}@ for %{public}@.
%{public}@: -_willBeginPlayingAlert. Failed setting audio category to %{public}@ for %{public}@ with error: %{public}@.
%{public}@: -_willBeginPlayingAlert. Failed reverting audio category back to %{public}@ with options 0x%{public}x with error: %{public}@.
%{public}@: -_willBeginPlayingAlert. Successfully reverted audio category back to %{public}@ with options 0x%{public}x.
%{public}@: -_willBeginPlayingAlert. Adjusted volume of %{public}@ to %{public}f for %{public}@.
%{public}@: -_didEndPlayingAlert.
%{public}@: -_didEndPlayingAlert. Reverted volume of %{public}@ to %{public}f for %{public}@.
%{public}@: -_didEndPlayingAlert. Successfully reverted audio category back to %{public}@ with options 0x%{public}x.
%{public}@: -_didEndPlayingAlert. Failed reverting audio category back to %{public}@ with options 0x%{public}x with error: %{public}@.
%{public}@: -_createQueuePlayerIfNecessary. clientName = %{public}@. clientPriority = %{public}ld.
%{public}@: -_createQueuePlayerIfNecessary. Client name or priority don't match those of %{public}@. Destroying it.
%{public}@: -_createQueuePlayerIfNecessary. Created queue player: %{public}@.
%{public}@: -_destroyQueuePlayer. Tossing queue player: %{public}@.
%{public}@: -_startObservingQueuePlayer: %{public}@.
%{public}@: -_stopObservingQueuePlayer: %{public}@.
%{public}@: currentItemWasUpdatedFromValue:(%{public}@) for %{public}@. [removedItem seekToTime:kCMTimeZero].
%{public}@: currentItemWasUpdatedFromValue:(%{public}@) for %{public}@. The queue was exhausted prematurely; this can happen if the ringtone asset contains corrupted audio data. Start over with default tone.
%{public}@: currentItemWasUpdatedFromValue:(%{public}@) for %{public}@. Playback of non repeating tone completed by playing to end.
%{public}@: currentItemWasUpdatedFromValue:(%{public}@) for %{public}@. Re-inserting that same item again.
%{public}@: currentItemWasUpdatedFromValue:(%{public}@) for %{public}@. [_queuePlayer status] == AVPlayerStatusFailed.
%{public}@: currentItemStatusWasUpdatedToValue:(%{public}ld) for %{public}@. itemStatus == AVPlayerItemStatusFailed. currentItemErrorCode: %{public}ld.
%{public}@: currentItemStatusWasUpdatedToValue:(%{public}ld) for %{public}@. Tone could not be prepared for playback. Start over with fallback tone.
%{public}@: -_audioVolumeForAlert:. Did retrieve ringer volume successfully for fallback volume value for alert %{public}@: %{public}f.
%{public}@: -_audioVolumeForAlert:. Failed to retrieve ringer volume for fallback volume value for alert %{public}@. Using default value instead: %{public}f.
%{public}@: -_audioVolumeForAlert:. Adjusted volume from %{public}f to %{public}f.
%{public}@: -_activateAudioSessionIfNeeded. Successfully activated audio session for %{public}@.
%{public}@: -_activateAudioSessionIfNeeded. Failed activating audio session for %{public}@ with error: %{public}@.
%{public}@: -_deactivateAudioSessionIfNeeded. Skipping audio session deactivation because it is currently being prevented.
%{public}@: -_deactivateAudioSessionIfNeeded. About to deactivate audio session for %{public}@.
%{public}@: -_deactivateAudioSessionIfNeeded. Successfully deactivated audio session for %{public}@.
%{public}@: -_deactivateAudioSessionIfNeeded. Failed to deactivate audio session for %{public}@ with error: %{public}@.
%{public}@: -_startObservingAudioSessionInterruptionNotifications. Started observing interruptions for %{public}@.
%{public}@: -_stopObservingAudioSessionInterruptionNotifications. Stopped observing interruptions for %{public}@.
%{public}@: -_handleAudioSessionInterruption. Handling interruption of type: AVAudioSessionInterruptionTypeBegan. Resetting state and marking %{public}@ as interrupted by the system.
%{public}@: -_beginPreventingAudioSessionDeactivation.
Unbalanced calls to -_beginPreventingAudioSessionDeactivation and -_endPreventingAudioSessionDeactivation.
%{public}@: -_endPreventingAudioSessionDeactivation.
%{public}@: -_endPreventingAudioSessionDeactivation. No alert was playing, calling -_deactivateAudioSessionIfNeeded.
%{public}@: Failed to prepare default tone for alert type %{public}@ for playback. All possible fallback cases have been exhausted. Bailing.
v24@0:8@?16
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v48@0:8@16@24@32@?40
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?B@"NSError">40
v32@0:8@16@?24
v32@0:8@"NSDictionary"16@?<v@?B@"NSError">24
v24@0:8@?<v@?B@"NSError">16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
@24@0:8q16
@32@0:8q16@24
^{__CFString=}24@0:8^{__CFString=}16
B28@0:8@16B24
@24@0:8@16
v16@0:8
v24@0:8@16
@32@0:8@16@24
B48@0:8@16@24@32@40
B44@0:8@16@24@32B40
B32@0:8@16@24
B48@0:8@16@24B32B36^@40
i24@0:8@16
B40@0:8@16@24@32
v32@0:8@16q24
v40@0:8@16q24@32
I24@0:8q16
I32@0:8q16@24
@32@0:8@16^B24
v40@0:8@16@24@?32
q36@0:8B16^@20^B28
q24@0:8^@16
B24@0:8q16
v40@0:8@16@24Q32
v24@0:8Q16
@"TLAccessQueue"
@"NSMutableDictionary"
@"NSDictionary"
@"NSString"
v52@0:8^{__CFString=}16r^@24Q32@40i48
@32@0:8r^@16Q24
v44@0:8@16^{__CFString=}24i32@?36
^{__CFDictionary=}28@0:8^{__CFString=}16i24
v44@0:8^v16^{__CFString=}24^{__CFString=}32i40
v28@0:8^{__CFString=}16i24
B32@0:8^@16@?24
B32@0:8@16^@24
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v20@0:8f16
v20@0:8B16
v24@0:8d16
q16@0:8
f16@0:8
d16@0:8
@"NSURL"
@"NSNumber"
@36@0:8@16I24@28
I16@0:8
@40@0:8q16@24@32
B32@0:8@?16@24
v40@0:8Q16@?24@32
@40@0:8@16@24I32I36
@"TLSystemSound"
v32@0:8Q16@24
@24@0:8Q16
@44@0:8q16@24@32B40
@28@0:8@16B24
@40@0:8@16@24^@32
B40@0:8@16@24^@32
B24@0:8^@16
B28@0:8^{__CFString=}16B24
v24@0:8q16
@"NSObject<OS_dispatch_source>"
@32@0:8d16d24
@24@0:8d16
v28@0:8d16B24
@"NSMutableArray"
@"NSObject<OS_dispatch_queue>"
I24@0:8@16
v32@0:8@"TLAlert"16@?<v@?q@"NSError">24
v48@0:8@16{?=d}24q32@?40
v48@0:8@"NSArray"16{?=d}24q32@?<v@?B>40
v28@0:8@16f24
v28@0:8@"TLAlert"16f24
v48@0:8@16Q24@?32@40
v28@0:8@16I24
v48@0:8@16@?24q32@40
@"NSMapTable"
@?16@0:8
@40@0:8@16@24@32
v24@0:8{?=d}16
@20@0:8B16
@"TLAlertConfiguration"
q24@0:8@16
@"TLAlertQueuePlayerController"
@"TLAlertSystemSoundController"
v32@0:8@16@24
v28@0:8{?=d}16B24
v48@0:8@16@24@32^v40
f32@0:8@16@24
v32@0:8Q16Q24
v32@0:8q16@24
@"AVQueuePlayer"
@"TLAlert"
TLServiceAgentInterface
NSObject
TLToneManager
TLSystemApplication
TLPreferencesUtilities
TLVibrationPersistenceUtilities
TLAlertConfiguration
NSCopying
NSSecureCoding
NSCoding
TLITunesTone
TLSystemSound
Deprecated
TLAlertTone
TLVibrationManager
TLAlertContext
TLVibrationPattern
TLAccessQueue
TLAlertSystemSoundController
TLAlertPlaybackBackEndController
TLExtensions
TLCapabilitiesManager
TLAlertSystemSoundContext
TLAlert
TLAlertController
TLAlertQueuePlayerController
