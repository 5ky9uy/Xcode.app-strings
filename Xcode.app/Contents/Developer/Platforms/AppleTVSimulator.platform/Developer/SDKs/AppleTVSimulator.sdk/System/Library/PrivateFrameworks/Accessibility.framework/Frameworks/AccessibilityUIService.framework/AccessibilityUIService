setXpcMessage:
setTargetAccessQueue:
setCompletion:
dealloc
xpcMessage
context
setContext:
targetAccessQueue
completionRequiresWritingBlock
setCompletionRequiresWritingBlock:
completion
_completionRequiresWritingBlock
_xpcMessage
_context
_targetAccessQueue
_completion
copyXPCMessageFromDictionary:inReplyToXPCMessage:error:
domain
localizedDescription
identifier
UTF8String
sendReply:withError:andOriginalXPCMessage:usingConnection:customDataAddingBlock:
init
alloc
class
initWithParentClass:description:appendUUIDToLabel:
setMessageSchedulingSerializationQueue:
release
setMessageQueue:
backgroundAccessQueue
_sendXPCMessage:context:remainingAttempts:previousError:completion:
afterDelay:processReadingBlock:
delegate
messageSender:accessXPCConnectionForMessageWithContext:usingBlock:
respondsToSelector:
messageSender:extractCustomDataFromXPCReply:numberOfKeyValuePairsForCustomData:
initWithUTF8String:
ax_errorWithDomain:description:
dictionaryFromXPCMessage:error:
ax_nonRedundantDescription
messageSchedulingSerializationQueue
messageSender:processCustomDataFromXPCReply:
messageQueue
count
ax_dequeueObject
retain
messageSender:willSendXPCMessage:context:
setSendingMessage:
performSynchronousWritingBlock:
_didFinishSendingXPCMessage:replyCustomData:
_performBlock:inAccessQueue:treatAsWritingBlock:
performAsynchronousWritingBlock:
performAsynchronousReadingBlock:
callStackSymbols
isSendingMessage
ax_enqueueObject:
sendAsynchronousMessage:withIdentifier:context:targetAccessQueue:completionRequiresWritingBlock:completion:
autorelease
sendSynchronousMessage:withIdentifier:context:error:
setDelegate:
_sendingMessage
_delegate
_messageQueue
_messageSchedulingSerializationQueue
dictionaryWithDictionary:
rootViewController
view
convertPoint:fromView:
hitTest:withEvent:
pointInside:withEvent:
_accessibilityWindowVisible
_usesWindowServerHitTesting
initWithType:text:subtitleText:iconImage:styleProvider:
alertWithType:text:subtitleText:iconImage:styleProvider:
addToContainerView:
setIdentifier:
setShowOrHideTimer:
setAlertView:
setService:
setText:
setSubtitleText:
setIconImage:
stringWithFormat:
description
creationTimeInterval
setCreationTimeInterval:
fadeAnimationDuration
setFadeAnimationDuration:
showOrHideTimer
alertView
service
priority
setPriority:
duration
setDuration:
text
subtitleText
iconImage
type
setType:
_identifier
_creationTimeInterval
_fadeAnimationDuration
_showOrHideTimer
_alertView
_service
_priority
_duration
_text
_subtitleText
_iconImage
_type
setBundle:
bundleForClass:
preferredFontForTextStyle:
fontWithSize:
blackColor
colorWithAlphaComponent:
whiteColor
alertTextFontForType:
alertTextColorForType:
alertTextLineHeightOffsetForType:
styleProvider
alertBackgroundStyleForType:
alertBackgroundImageForType:
alertBackgroundImageCapInsetsForType:
alertBackgroundCornerRadiusForType:
alertBackgroundSizeForType:
alertShouldGrowInAxis:forType:
alertContentEdgeInsetsForType:
alertSubtitleTextFontForType:
alertSubtitleTextColorForType:
alertSubtitleTextLineHeightOffsetForType:
alertSubtitleTextVerticalSpacingHeightWithTextForType:
alertIconImageEdgeInsetsForType:
alertEdgeInsetsForType:
alertPositionForType:
alertFadeAnimationDurationForType:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
retainCount
zone
hash
superclass
debugDescription
bundle
_bundle
nubbit
setNubbit:
disableSystemGesturesAssertion
setDisableSystemGesturesAssertion:
disableDashBoardSystemGesturesAssertion
setDisableDashBoardSystemGesturesAssertion:
moveNubbitGestureRecognizer
setMoveNubbitGestureRecognizer:
fadeTimer
setFadeTimer:
dynamicAnimator
setDynamicAnimator:
gravityBehavior
setGravityBehavior:
followPanBehavior
setFollowPanBehavior:
snapToBoundaryBehavior
setSnapToBoundaryBehavior:
collisionBehavior
setCollisionBehavior:
dynamicItemBehavior
setDynamicItemBehavior:
originalAlpha
setOriginalAlpha:
_nubbit
_disableSystemGesturesAssertion
_disableDashBoardSystemGesturesAssertion
_moveNubbitGestureRecognizer
_fadeTimer
_dynamicAnimator
_gravityBehavior
_followPanBehavior
_snapToBoundaryBehavior
_collisionBehavior
_dynamicItemBehavior
_originalAlpha
windowLevel
childViewControllers
firstObject
title
_isSecure
_shouldAutorotateToInterfaceOrientation:
_accessibilityIsIsolatedWindow
_accessibilityElementCommunityIdentifier
accessibilityLabel
isHandlingFullScreenPresentation
setIsHandlingFullScreenPresentation:
_isHandlingFullScreenPresentation
sharedServiceManager
_clientMessengerWithIdentifier:
setClientIdentifier:
setConnection:
sendAsynchronousMessage:withIdentifier:targetAccessQueue:completionRequiresWritingBlock:completion:
_sendAsynchronousMessage:withIdentifier:toClientWithMessenger:targetAccessQueue:completionRequiresWritingBlock:completion:
_sendSynchronousMessage:withIdentifier:toClientWithMessenger:error:
clientIdentifier
clientMessengerWithIdentifier:
initWithClientIdentifier:connection:
sendAsynchronousMessage:withIdentifier:targetAccessQueue:completion:
sendSynchronousMessage:withIdentifier:error:
connection
_clientIdentifier
_connection
displayManager
initWithServiceManager:
setDefaultAlertStyleProvider:
setServiceManager:
_attemptToInitializeActiveInterfaceOrientation
defaultCenter
_didReceiveMemoryWarning:
addObserver:selector:name:object:
systemAppServerReady
setAlertQueues:
setVisibleAlertContexts:
setActiveWindows:
setPassiveWindows:
setActiveContentViewControllers:
setPassiveContentViewControllers:
setNubbitContexts:
setSystemServerActionHandlerIdentifier:
setReachabilityHandlerIdentifier:
server
activeInterfaceOrientation
_activeInterfaceOrientationDidChange:duration:
_contentViewControllersWithUserInteractionEnabled:forService:createIfNeeded:
arrayWithArray:
addContentViewController:withUserInteractionEnabled:forService:context:completion:
removeContentViewController:withUserInteractionEnabled:forService:context:completion:
containsObject:
addObject:
desiredWindowLevelForContentViewController:userInteractionEnabled:
shouldPreventAutorotatingAllContentViewControllers
_windowWithUserInteractionEnabled:windowLevel:createIfNeeded:purposeIdentifier:
_addContentViewController:toWindow:forService:context:completion:
removeObject:
_disposeOfContentViewControllersWithUserInteractionEnabled:forService:
transitionInWithContext:completion:
transitionOutWithContext:completion:
_removeContentViewController:forService:
showAlertWithText:subtitleText:iconImage:type:priority:duration:forService:
length
processMessage:withIdentifier:fromClientWithIdentifier:error:
messageWithIdentifierShouldBeProcessedAsynchronously:
processMessageAsynchronously:withIdentifier:fromClientWithIdentifier:completion:
accessQueueForProcessingMessageWithIdentifier:
messageWithIdentifierRequiresWritingBlock:
processInitializationMessage:
serviceWasFullyInitialized
connectionWillBeInterruptedForClientWithIdentifier:
sharedInstance
requiredEntitlementForProcessingMessageWithIdentifier:
possibleRequiredEntitlementsForProcessingMessageWithIdentifier:
UUID
UUIDString
timeIntervalSinceReferenceDate
_transactionIdentifierForDisplayingAlertWithContext:service:
serviceManager
beginTransactionWithIdentifier:forService:
_showOrEnqueueAlertWithContext:
visibleAlertContexts
objectForKey:
cancel
_hideAlertWithContext:notifyDelegate:
alertQueues
isEqualToString:
indexOfObjectPassingTest:
objectAtIndex:
removeObjectAtIndex:
_didHideOrDequeueAlertWithContext:
enumerateKeysAndObjectsUsingBlock:
nubbitContexts
dictionary
_nubbitContextKeyForNubbit:
objectForKeyedSubscript:
_handleMoveNubbitGestureRecognizer:
initWithTarget:action:
addGestureRecognizer:
initWithTargetSerialQueue:
setAutomaticallyCancelPendingBlockUponSchedulingNewBlock:
alpha
_scheduleFadeForNubbitContext:
_addDynamicAnimationsForNubbitContext:
setObject:forKeyedSubscript:
removeGestureRecognizer:
_undoFadeForNubbitContext:
_removeDynamicAnimationsForNubbitContext:
removeObjectForKey:
activeWindows
passiveWindows
initWithDouble:
valueForKey:
mainScreen
bounds
reachabilityOffset
_initWithFrame:debugName:attached:
setWindowLevel:
clearColor
setBackgroundColor:
_setWindowControlsStatusBarOrientation:
setRootViewController:
setHidden:
_rotateWindow:toInterfaceOrientation:duration:force:
setValue:forKey:
setObject:forKey:
accessibilityIdentifier
rangeOfString:
setAccessibilityIdentifier:
_setRotatableViewOrientation:duration:force:
activeContentViewControllers
countByEnumeratingWithState:objects:count:
passiveContentViewControllers
sharedHelper
reachabilityOffsetForPayload:
setReachabilityOffset:
window
hostingWindowShouldMoveForReachability
handleReachabilityToggled:
enumerateContentViewControllersUsingBlock:
frame
setFrame:
didAnimateForReachabilityToOffset:
animateForReachability:payload:completion:
_uniqueIdentifierForService:
_transactionIdentifierForDisplayingContentViewController:service:
removeFromSuperview
setAutoresizingMask:
addChildViewController:
addSubview:
didMoveToParentViewController:
isViewLoaded
subviews
parentViewController
willMoveToParentViewController:
removeFromParentViewController
endTransactionWithIdentifier:forService:
alertWithIdentifierWasEnqueued:
delayForDequeuingAlertWithIdentifier:
desiredWindowLevelForAlertWithIdentifier:
styleProviderForAlertWithIdentifier:
alertWithIdentifierDidAppear:
alertWithIdentifierDidDisappear:
defaultAlertStyleProvider
setAlpha:
afterDelay:processBlock:
animateWithDuration:animations:completion:
_handleNextAlertForType:
_hasVisibleAlertWithType:
_showAlertWithContext:
numberWithUnsignedInteger:
sortUsingComparator:
enumerateObjectsWithOptions:usingBlock:
valueWithPointer:
superview
animateWithDuration:animations:
_boundingViewForNubbit:
initWithReferenceView:
arrayWithObjects:count:
initWithItems:
setCollisionDelegate:
setTranslatesReferenceBoundsIntoBoundary:
addBehavior:
setAllowsRotation:
setFriction:
removeAllBehaviors
locationInView:
removeBehavior:
initWithItem:attachedToAnchor:
assertionWithType:identifier:
setAnchorPoint:
velocityInView:
addLinearVelocity:forItem:
_gravityBehaviorForNubbit:velocity:boundingView:
_endMoveForNubbitContext:
center
setGravityDirection:
_nubbitContextForGestureRecognizer:
state
_beginMoveForNubbitContext:
_changeNubbitPositionForNubbitContext:
setActiveInterfaceOrientation:
numberOfAttemptsToInitializeActiveInterfaceOrientation
setNumberOfAttemptsToInitializeActiveInterfaceOrientation:
performSelector:withObject:afterDelay:
_serviceWantsToPreventAutorotation:
_servicesForUniqueIdentifiers:
interfaceOrientation
_originalDurationForRotationFromInterfaceOrientation:toInterfaceOrientation:withAdjustedDuration:
allValues
nubbitDidUpdatePosition:
initWithItem:snapToPoint:
isHidden
removeObjectsForKeys:
removeAllObjects
sharedDisplayManager
dynamicAnimatorWillResume:
dynamicAnimatorDidPause:
collisionBehavior:beganContactForItem:withItem:atPoint:
collisionBehavior:endedContactForItem:withItem:
collisionBehavior:beganContactForItem:withBoundaryIdentifier:atPoint:
collisionBehavior:endedContactForItem:withBoundaryIdentifier:
contentViewControllersWithUserInteractionEnabled:forService:
addContentViewController:withUserInteractionEnabled:forService:
removeContentViewController:withUserInteractionEnabled:forService:
showAlertWithText:subtitleText:iconImage:type:forService:
hideAlertWithIdentifier:forService:
registerNubbit:delegate:
unregisterNubbit:
_reachabilityToggledWithPayload:
pinNubbitToEdge:
_resetServiceManager
systemServerActionHandlerIdentifier
reachabilityHandlerIdentifier
_defaultAlertStyleProvider
_activeInterfaceOrientation
_numberOfAttemptsToInitializeActiveInterfaceOrientation
_serviceManager
_alertQueues
_visibleAlertContexts
_activeWindows
_passiveWindows
_activeContentViewControllers
_passiveContentViewControllers
_systemServerActionHandlerIdentifier
_nubbitContexts
_reachabilityHandlerIdentifier
_reachabilityOffset
accessibilityElementsHidden
_ignoresHitTest
initWithFrame:
setView:
supportedInterfaceOrientations
viewWillTransitionToSize:withTransitionCoordinator:
_shouldForwardViewWillTransitionToSize
loadView
shouldAutorotate
resizableImageWithCapInsets:
initWithImage:
initWithPrivateStyle:
layer
setCornerRadius:
setClipsToBounds:
setTranslatesAutoresizingMaskIntoConstraints:
setAllowsGroupOpacity:
initWithString:attributes:
_appendParagraphWithText:withTextColor:font:textAlignment:lineSpacing:paragraphSpacingBefore:toAttributedString:
setNumberOfLines:
setAttributedText:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToValueOfView:
ax_constrainLayoutAttribute:asEqualToValueOfView:
ax_constrainLayoutAttribute:asLessThanOrEqualToValueOfView:
ax_constrainLayoutAttribute:asEqualToValueOfView:priority:
ax_constrainLayoutAttribute:asEqualToValueOfView:withOffset:
ax_constrainLayoutAttribute:asEqualToLayoutAttribute:ofView:withOffset:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToValueOfView:withOffset:
ax_constrainLayoutAttribute:asLessThanOrEqualToValueOfView:withOffset:
ax_constrainLayoutAttribute:asEqualToValueOfView:withOffset:priority:
size
ax_constrainLayoutAttribute:asEqualToConstant:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToConstant:
setAlertType:
setStyleProvider:
alertType
ax_constrainLayoutAttribute:relatedBy:toItem:attribute:multiplier:constant:
defaultParagraphStyle
mutableCopy
labelFontSize
systemFontOfSize:
lineHeight
setParagraphSpacingBefore:
initWithObjectsAndKeys:
appendAttributedString:
setAlignment:
setLineSpacing:
_alertType
_styleProvider
setServiceIdentifier:
setClientMessengers:
clientMessengers
_indexOfClientWithIdentifier:
initWithService:serviceIdentifier:
clientsCount
addClientWithIdentifier:connection:
removeClientWithIdentifier:
hasClientWithIdentifier:
enumerateClientsUsingBlock:
serviceIdentifier
_serviceIdentifier
_clientMessengers
initWithFrame:position:
titleLabel
subtitleLabel
imageView
setImage:
setBulletinView:
bulletinView
layoutSubviews
_bulletinView
setServiceClass:
setClientConnections:
setEntitlementsCaches:
clientConnections
entitlementsCaches
_indexOfClientConnection:
boolValue
_singleRequiredEntitlementForMessageWithIdentifier:
_possibleRequiredEntitlementForMessageWithIdentifier:
_clientProcessWithAuditToken:hasEntitlement:
numberWithBool:
setWithObjects:
serviceClass
initWithServiceClass:
serviceCanProcessMessageWithIdentifier:fromClientWithConnection:possibleRequiredEntitlements:
clientConnectionWillBeTerminated:
_serviceClass
_clientConnections
_entitlementsCaches
safeCategoryTargetClassName
safeCategoryBaseClass
infoDictionary
mainBundle
setServicesAccessQueue:
setEntitlementsCheckersAccessQueue:
setResumingConnectionsQueue:
setMessageSender:
setDisplayManager:
_applicationDidReceiveMemoryWarning:
registerAccessibilityUIServicePID:
removeObserver:name:object:
setPausedConnections:
setEntitlementsCheckers:
setServiceContexts:
servicesAccessQueue
serviceContexts
performSynchronousReadingBlock:
mainAccessQueue
messageSender
mainQueue
addObserverForName:object:queue:usingBlock:
initWithFormat:
_registerClientWithIdentifier:connection:serviceBundleName:initiatingMessageIdentifier:error:
_serviceContextForClientWithIdentifier:
_serviceWithClass:canProcessMessageWithIdentifier:fromClientWithConnection:possibleRequiredEntitlements:
_unregisterAllClientsWithConnection:
resumingConnectionsQueue
shouldAllowServicesToProcessMessages
pausedConnections
entitlementsCheckersAccessQueue
entitlementsCheckers
_registerForSpringBoardDeath
sharedApplication
terminateWithSuccess
initWithPID:queue:deathHandler:
pid:
setShouldAllowServicesToProcessMessages:
stringByAppendingPathComponent:
stringByStandardizingPath
stringByAppendingPathExtension:
hasPrefix:
bundleWithPath:
isLoaded
loadAndReturnError:
principalClass
_serviceContextForService:
lastUsedServiceIdentifier
setLastUsedServiceIdentifier:
removeObjectIdenticalTo:
_releaseSharedServiceManager
_start
_handleConnection:
_applicationDidFinishLaunching
didEncounterError
setDidEncounterError:
_springBoardReaper
_didEncounterError
_shouldAllowServicesToProcessMessages
_displayManager
_resumingConnectionsQueue
_pausedConnections
_entitlementsCheckersAccessQueue
_entitlementsCheckers
_messageSender
_serviceContexts
_servicesAccessQueue
_lastUsedServiceIdentifier
AXUIMessageContext_ServiceFramework
AXUIMessageReplyHandler_ServiceFramework
AXUIMessageSender_ServiceFramework
AXUIUtilities_ServiceFramework
AXUIActiveWindow
AXUIAlert
AXUIAlertContext
AXUIAlertStyleProvider
NSObject
AXUINubbitContext
AXUIWindow
AXUIClientMessenger
AXUIContentViewControllerDelegate
AXUIViewControllerTransitionHandler
AXUIService
AXUIAlertDelegate
AXUIDisplayManager
UIDynamicAnimatorDelegate
UICollisionBehaviorDelegate
AXUIPassiveWindow
AXStaticFrameView
AXUIRootViewController
AXStyleProviderUIAlert
AXUIServiceContext
AXTVBulletinUIAlert
AXUIServiceEntitlementChecker
__AXUINSBundleOverride_super
SafeCategory
AXUINSBundleOverride
AXUIServiceManager
AXUIMessageSenderDelegate_ServiceFramework
v16@0:8
@16@0:8
v24@0:8@16
^v16@0:8
v24@0:8^v16
B16@0:8
v20@0:8B16
@?16@0:8
v24@0:8@?16
@"NSObject<OS_xpc_object>"
@"AXAccessQueue"
v56@0:8@16@24@32@40@?48
v56@0:8@16^v24Q32@40@?48
v32@0:8@16^v24
v36@0:8@?16@24B32
v60@0:8@16Q24^v32@40B48@?52
@48@0:8@16Q24^v32^@40
@"<AXUIMessageSenderDelegate_ServiceFramework>"
@"NSMutableArray"
@32@0:8@16^@24
@40@0:8@16@24^@32
B40@0:8{CGPoint=dd}16@32
@56@0:8Q16@24@32@40@48
d16@0:8
v24@0:8d16
Q16@0:8
v24@0:8Q16
@"NSString"
@"AXDispatchTimer"
@"AXUIAlert"
@"<AXUIService>"
@"UIImage"
i24@0:8Q16
@24@0:8Q16
@"UIImage"24@0:8Q16
{UIEdgeInsets=dddd}24@0:8Q16
d24@0:8Q16
{CGSize=dd}24@0:8Q16
B32@0:8q16Q24
@"UIFont"24@0:8Q16
@"UIColor"24@0:8Q16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
@"NSBundle"
@"UIView"
@"<AXUINubbitDelegate>"
@"AXAssertion"
@"UIPanGestureRecognizer"
@"UIDynamicAnimator"
@"UIGravityBehavior"
@"UIAttachmentBehavior"
@"UISnapBehavior"
@"UICollisionBehavior"
@"UIDynamicItemBehavior"
B24@0:8q16
@24@0:8@16
@32@0:8@16@24
v48@0:8@16Q24@32@?40
v52@0:8@16Q24@32B40@?44
@40@0:8@16Q24^@32
d28@0:8@16B24
d28@0:8@"UIViewController"16B24
v32@0:8^v16@?24
v32@0:8^v16@?<v@?B>24
@48@0:8@16Q24@32^@40
@"NSDictionary"48@0:8@"NSDictionary"16Q24@"NSString"32^@40
B24@0:8Q16
v48@0:8@"NSDictionary"16Q24@"NSString"32@?<v@?@"NSDictionary"@"NSError">40
@"AXAccessQueue"24@0:8Q16
v24@0:8@"NSDictionary"16
v24@0:8@"NSString"16
@"NSString"24@0:8Q16
@"NSSet"24@0:8Q16
d24@0:8@16
d24@0:8@"NSString"16
@"<AXUIAlertStyleProvider>"24@0:8@"NSString"16
v24@0:8@"UIDynamicAnimator"16
v56@0:8@16@24@32{CGPoint=dd}40
v56@0:8@"UICollisionBehavior"16@"<UIDynamicItem>"24@"<UIDynamicItem>"32{CGPoint=dd}40
v40@0:8@16@24@32
v40@0:8@"UICollisionBehavior"16@"<UIDynamicItem>"24@"<UIDynamicItem>"32
v56@0:8@"UICollisionBehavior"16@"<UIDynamicItem>"24@"<NSCopying>"32{CGPoint=dd}40
v40@0:8@"UICollisionBehavior"16@"<UIDynamicItem>"24@"<NSCopying>"32
@28@0:8B16@20
v36@0:8@16B24@28
v52@0:8@16B24@28^v36@?44
@56@0:8@16@24@32Q40@48
@72@0:8@16@24@32Q40Q48d56@64
v32@0:8@16@24
@40@0:8B16d20B28@32
v44@0:8@16q24d32B40
d40@0:8q16q24d32
@32@0:8B16@20B28
v28@0:8B16@20
v56@0:8@16@24@32^v40@?48
v28@0:8@16B24
@48@0:8@16{CGPoint=dd}24@40
v32@0:8q16d24
q16@0:8
v24@0:8q16
@"AXUIAlertStyleProvider"
@"AXUIServiceManager"
@"NSMutableDictionary"
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v40@0:8{CGSize=dd}16@32
v72@0:8@16@24@32q40d48d56@64
@"<AXUIAlertStyleProvider>"
Q24@0:8@16
@"<NSObject><NSCopying>"
@"TVBulletinView"
@24@0:8#16
B40@0:8Q16@24^@32
B32@0:8^{?=[8I]}16@24
v24@0:8#16
v40@0:8@16^v24@?32
v40@0:8@"AXUIMessageSender_ServiceFramework"16^v24@?<v@?@"NSObject<OS_xpc_object>">32
v40@0:8@16@24^v32
v40@0:8@"AXUIMessageSender_ServiceFramework"16@"NSObject<OS_xpc_object>"24^v32
^v40@0:8@16@24^Q32
^v40@0:8@"AXUIMessageSender_ServiceFramework"16@"NSObject<OS_xpc_object>"24^Q32
v32@0:8@"AXUIMessageSender_ServiceFramework"16^v24
v60@0:8@16Q24@32@40B48@?52
B48@0:8#16Q24@32^@40
B56@0:8@16@24@32Q40^@48
@"BSProcessDeathWatcher"
@"AXUIDisplayManager"
@"AXUIMessageSender_ServiceFramework"
xpcMessage
T@"NSObject<OS_xpc_object>",&,N,V_xpcMessage
context
T^v,N,V_context
targetAccessQueue
T@"AXAccessQueue",&,N,V_targetAccessQueue
completionRequiresWritingBlock
TB,N,V_completionRequiresWritingBlock
completion
T@?,C,N,V_completion
Unexpected error converting reply to an XPC object.
Unexpected error with domain %{public}@: %{public}@
MessageSchedulingSerializationQueue
v8@?0
v16@?0@"NSError"8
v16@?0@"NSObject<OS_xpc_object>"8
Failed to establish connection to the %@.
Message sender delegate couldn't grant access to XPC connection: %@.
Failed to send message %@ to the %@. Last encountered error: %@.
v32@?0^v8@"NSDictionary"16@"NSError"24
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2156.1/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUI/Shared/AXUIMessageSender.m
-[AXUIMessageSender_ServiceFramework sendAsynchronousMessage:withIdentifier:context:targetAccessQueue:completionRequiresWritingBlock:completion:]
A target access queue is required for sending an asynchronous message with a completion handler.
Problem making xpcMessage to send: %@
Failed to convert message %@ to its XPC representation.
SynchronousMessageSendTargetAccessQueue
v24@?0@"NSDictionary"8@"NSError"16
Failed to initialize structures necessary for synchronous message send.
messageQueue
T@"NSMutableArray",&,N,V_messageQueue
messageSchedulingSerializationQueue
T@"AXAccessQueue",&,N,V_messageSchedulingSerializationQueue
sendingMessage
TB,N,GisSendingMessage,V_sendingMessage
delegate
T@"<AXUIMessageSenderDelegate_ServiceFramework>",N,V_delegate
Converted XPC object is not a dictionary; instead it has the following type ID: %lu.
Failed converting XPC object to a Foundation level dictionary.
Unexpected error: %s.
Unexpected type for XPC object.
XPC object was NULL.
Failed to allocate new XPC dictionary.
B24@?0r*8@"NSObject<OS_xpc_object>"16
Unexpected type for XPC object after conversion from Foundation level dictionary.
Failed converting Foundation level dictionary to an XPC object.
<%@: %p; identifier = "%@">
identifier
T@"NSString",C,N,V_identifier
creationTimeInterval
Td,N,V_creationTimeInterval
fadeAnimationDuration
Td,N,V_fadeAnimationDuration
showOrHideTimer
T@"AXDispatchTimer",&,N,V_showOrHideTimer
alertView
T@"AXUIAlert",&,N,V_alertView
service
T@"<AXUIService>",&,N,V_service
priority
TQ,N,V_priority
duration
Td,N,V_duration
text
T@"NSString",C,N,V_text
subtitleText
T@"NSString",C,N,V_subtitleText
iconImage
T@"UIImage",&,N,V_iconImage
type
TQ,N,V_type
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
bundle
T@"NSBundle",&,N,V_bundle
nubbit
T@"UIView",&,N,V_nubbit
T@"<AXUINubbitDelegate>",N,V_delegate
disableSystemGesturesAssertion
T@"AXAssertion",&,N,V_disableSystemGesturesAssertion
disableDashBoardSystemGesturesAssertion
T@"AXAssertion",&,N,V_disableDashBoardSystemGesturesAssertion
moveNubbitGestureRecognizer
T@"UIPanGestureRecognizer",&,N,V_moveNubbitGestureRecognizer
fadeTimer
T@"AXDispatchTimer",&,N,V_fadeTimer
dynamicAnimator
T@"UIDynamicAnimator",&,N,V_dynamicAnimator
gravityBehavior
T@"UIGravityBehavior",&,N,V_gravityBehavior
followPanBehavior
T@"UIAttachmentBehavior",&,N,V_followPanBehavior
snapToBoundaryBehavior
T@"UISnapBehavior",&,N,V_snapToBoundaryBehavior
collisionBehavior
T@"UICollisionBehavior",&,N,V_collisionBehavior
dynamicItemBehavior
T@"UIDynamicItemBehavior",&,N,V_dynamicItemBehavior
originalAlpha
Td,N,V_originalAlpha
AXUIServer-%f
isHandlingFullScreenPresentation
TB,N,V_isHandlingFullScreenPresentation
<%@: %p; clientIdentifier = "%@">
clientIdentifier
T@"NSString",C,N,V_clientIdentifier
connection
T@"NSObject<OS_xpc_object>",&,N,V_connection
v12@?0B8
B32@?0@8Q16^B24
v32@?0@8@16^B24
%@|%@
v24@?0@"UIViewController"8^B16
v16@?0d8
<%@: %p>
AXUIAlert
__AXStringForVariablesSentinel
q24@?0@8@16
v32@?0@8Q16^B24
Got nubbit moving gesture recognizer %@, which had no nubbit associated with it.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2156.1/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUI/Service/AXUIDisplayManager.m
-[AXUIDisplayManager _beginMoveForNubbitContext:]
Should have made an animator for the nubbit when it was registered
defaultAlertStyleProvider
T@"AXUIAlertStyleProvider",&,N,V_defaultAlertStyleProvider
activeInterfaceOrientation
Tq,N,V_activeInterfaceOrientation
numberOfAttemptsToInitializeActiveInterfaceOrientation
TQ,N,V_numberOfAttemptsToInitializeActiveInterfaceOrientation
serviceManager
T@"AXUIServiceManager",N,V_serviceManager
alertQueues
T@"NSMutableDictionary",&,N,V_alertQueues
visibleAlertContexts
T@"NSMutableDictionary",&,N,V_visibleAlertContexts
activeWindows
T@"NSMutableDictionary",&,N,V_activeWindows
passiveWindows
T@"NSMutableDictionary",&,N,V_passiveWindows
activeContentViewControllers
T@"NSMutableDictionary",&,N,V_activeContentViewControllers
passiveContentViewControllers
T@"NSMutableDictionary",&,N,V_passiveContentViewControllers
nubbitContexts
T@"NSMutableDictionary",&,N,V_nubbitContexts
systemServerActionHandlerIdentifier
T@"NSString",C,N,V_systemServerActionHandlerIdentifier
reachabilityHandlerIdentifier
T@"NSString",C,N,V_reachabilityHandlerIdentifier
reachabilityOffset
Td,N,V_reachabilityOffset
Content view controllers of window at level %ld have conflicting supported interface orientations. Allowing portrait orientation nonetheless. One of these content view controllers needs to be moved to a different window using the method -desiredWindowLevelForContentViewController:userInteractionEnabled: from AXUIContentViewControllerDelegate, on the corresponding AXUIService: %{public}@.
alertType
TQ,N,V_alertType
styleProvider
T@"<AXUIAlertStyleProvider>",&,N,V_styleProvider
serviceIdentifier
T@"<NSObject><NSCopying>",C,N,V_serviceIdentifier
clientMessengers
T@"NSMutableArray",&,N,V_clientMessengers
clientsCount
TQ,R,N
bulletinView
T@"TVBulletinView",&,N,V_bulletinView
TVBulletinView
Unable to find class %s
/System/Library/PrivateFrameworks/TVKit.framework/TVKit
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2156.1/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUI/Service/AXUIServiceEntitlementChecker.m
-[AXUIServiceEntitlementChecker serviceCanProcessMessageWithIdentifier:fromClientWithConnection:possibleRequiredEntitlements:]
The client connections array and the entitlements caches array are supposed to have the same number of elements (%@).
serviceClass
T#,N,V_serviceClass
clientConnections
T@"NSMutableArray",&,N,V_clientConnections
entitlementsCaches
T@"NSMutableArray",&,N,V_entitlementsCaches
NSBundle
AccessibilityUIServer
NSExtension
ServicesAccessQueue
EntitlementsCheckersAccessQueue
ResumingConnectionsQueue
Beginning transaction with identifier %{public}@ for service: %{public}@
Ending transaction with identifier %{public}@ for service: %{public}@
%{public}@ sending asynchronous message with identifier %lu and a completion handler but no target access queue; defaulting to the main access queue.
AXUINSBundleOverride
Current locale did change. Restarting AXUI Server
v16@?0@"NSNotification"8
AXUI Server started at PreBoard. This is unexpected, but we'll restart once we're done.
%@.%@.%@-%p
v32@?0@"NSDictionary"8@"NSError"16@"<AXUIService>"24
Couldn't find service associated to client identifier: %@
One of the following entitlements is required: %@ for this operation: %d
Couldn't find client identifier associated to message.
AXUIServiceManager: Got invalid value for message identifier in client connection event handler: 0.
Lost connection with client.
Connection with client was supposed to be terminated imminently, but we are ignoring it for now.
Got unexpected error in client connection event handler: %{public}s.
Got object of unexpected type in client connection event handler: %{public}s.
v12@?0i8
Invalid service bundle path: %@
Failed to load service bundle at path: %@
Couldn't find principal class for service bundle at path: %@
One of the following entitlements is required: %@
Service instance does not conform to service protocol: %@.
Failed to instantiate service of class %@
Service bundle still not loaded, weird... Service bundle path: %@
Failed to create service bundle at path: %@
v32@?0@"NSString"8@"NSObject<OS_xpc_object>"16^B24
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2156.1/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUI/Service/AXUIServiceManager.m
-[AXUIServiceManager _unregisterAllClientsWithConnection:]
The client identifiers lists array is expected to be of same size as the affected services array.
pausedConnections
T@"NSMutableArray",&,N,V_pausedConnections
resumingConnectionsQueue
T@"AXAccessQueue",&,N,V_resumingConnectionsQueue
entitlementsCheckers
T@"NSMutableDictionary",&,N,V_entitlementsCheckers
entitlementsCheckersAccessQueue
T@"AXAccessQueue",&,N,V_entitlementsCheckersAccessQueue
didEncounterError
TB,N,V_didEncounterError
messageSender
T@"AXUIMessageSender_ServiceFramework",&,N,V_messageSender
serviceContexts
T@"NSMutableArray",&,N,V_serviceContexts
servicesAccessQueue
T@"AXAccessQueue",&,N,V_servicesAccessQueue
lastUsedServiceIdentifier
TQ,N,V_lastUsedServiceIdentifier
shouldAllowServicesToProcessMessages
TB,N,V_shouldAllowServicesToProcessMessages
displayManager
T@"AXUIDisplayManager",&,N,V_displayManager
No longer in PreBoard. AXUI Server is restarting.
System/Library/AccessibilityBundles
Developer/Library/PrivateFrameworks/AccessibilityAudit.framework/Resources
axuiservice
AXUIErrorDomainCommunication
AXUIErrorDomainProtocol
AXUIErrorDomainValidation
AXUIErrorDomainServiceInitialization
AXUIErrorDomainServiceMessageHandling
AXUIErrorDomainServiceEntitlementMismatch
com.apple.accessibility.AccessibilityUIServer
Accessibility UI Server
messageID
clientID
serviceBundleName
messageWasEmpty
initializationMessage
errorDescription
errorDomain
didSucceed
clientRegistrationWithServerDidSucceed
%{public}@
"@333333
<ffffff
Y@)\
UUUUUU
