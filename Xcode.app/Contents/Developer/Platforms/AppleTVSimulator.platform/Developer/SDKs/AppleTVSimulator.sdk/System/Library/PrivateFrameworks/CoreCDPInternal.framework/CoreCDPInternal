%@ %@
timestamp
hasTimestamp
TB,N
TQ,N,V_timestamp
CDPDCircleStateObserver Event Queue
v12@?0i8
v28@?0B8@"NSArray"12@"NSError"20
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
recoveryContext
T@"CDPDRecoveryFlowContext",&,N,V_recoveryContext
circleController
T@"CDPDCircleController",&,N,V_circleController
secureBackupController
T@"CDPDSecureBackupController",&,N,V_secureBackupController
uiProvider
T@"<CDPStateUIProviderInternal>",&,N,V_uiProvider
validator
T@"<CDPRemoteDeviceSecretValidatorProtocol>",&,N,V_validator
context
T@"CDPContext",&,N,V_context
hasPeersForRemoteApproval
TB,N,V_hasPeersForRemoteApproval
stringrayDisabled
TB,N,V_stringrayDisabled
CDPDConnectionInvalidatedNotification
v8@?0
com.apple.cdp.daemon
com.apple.cdp.dataaccess
com.apple.cdp.statemachine
com.apple.cdp.utility
com.apple.cdp.followup
com.apple.purplebuddy
com.apple.Preferences
secretType
TQ,N,V_secretType
userDidCancel
TB,N,V_userDidCancel
userDidReset
TB,N,V_userDidReset
device
T@"CDPDevice",C,N,V_device
validSecret
T@"NSString",C,N,V_validSecret
recoveredInfo
T@"NSDictionary",C,N,V_recoveredInfo
shouldCompleteSignIn
cloudDataProtectionEnabled
errorDomain
errorCode
hasShouldCompleteSignIn
TB,N,V_shouldCompleteSignIn
hasCloudDataProtectionEnabled
TB,N,V_cloudDataProtectionEnabled
hasErrorDomain
TB,R,N
T@"NSString",&,N,V_errorDomain
hasErrorCode
Tq,N,V_errorCode
v24@?0@"CDPContext"8@"NSError"16
v24@?0@"NSDictionary"8@"NSError"16
v24@?0@"CDPDRemoteSecretValidationResult"8@"NSError"16
v12@?0B8
v20@?0B8@"NSError"12
-[CDPDRecoveryValidatedJoinFlowController secretValidator:didFailRecovery:withError:completion:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreCDP_Sim/CoreCDP-97.2.3/CoreCDPInternal/CDPDRecoveryValidatedJoinFlowController.m
completion
REMOTE_SECRET_ENTRY_MULTIPLE_INCORRECT_BUTTON_APPROVE
REMOTE_SECRET_ENTRY_MULTIPLE_INCORRECT_BUTTON_OK
REMOTE_SECRET_ENTRY_MULTIPLE_INCORRECT_BUTTON_RESET
GENERIC_CANCEL_BUTTON
v16@?0q8
REMOTE_SECRET_ENTRY_MULTIPLE_INCORRECT_TITLE
REMOTE_SECRET_ENTRY_MULTIPLE_INCORRECT_MESSAGE_SIGNIN
REMOTE_SECRET_ENTRY_MULTIPLE_INCORRECT_MESSAGE_NO_RESET
REMOTE_SECRET_ENTRY_MULTIPLE_INCORRECT_MESSAGE_RESET
RESET_CONFIRMATION_DIALOG_TITLE
RESET_CONFIRMATION_DIALOG_MESSAGE
RESET_CONFIRMATION_DIALOG_BUTTON_RESET
RESET_CONFIRMATION_DIALOG_TITLE_NO_RECOVERY
RESET_CONFIRMATION_DIALOG_MESSAGE_NO_RECOVERY
RESET_CONFIRMATION_DIALOG_BUTTON_RESET_NO_RECOVERY
hasSecretType
Tq,N,V_secretType
hasUserDidReset
pcsProxy
T@"<CDPDProtectedCloudStorageProxy>",&,N,V_pcsProxy
DeviceName
localizedRecoveryOption
T@"NSString",C,N,V_localizedRecoveryOption
recoveryHandler
T@?,C,N,V_recoveryHandler
recoveryOptionIndex
Tq,N,V_recoveryOptionIndex
EscrowServiceErrorDomain
isAuthenticationError
AWDPostMetric
initAWDPostMetric
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreCDP_Sim/CoreCDP-97.2.3/CoreCDPInternal/AWDMetricReporter.m
softLinkAWDPostMetric
/System/Library/PrivateFrameworks/WirelessDiagnostics.framework/WirelessDiagnostics
WirelessDiagnosticsLibrary
frameworkLibrary
v16@?0@"NSError"8
metadata
ClientMetadata
recordID
B16@?0^^{__CFError}8
cdpContext
T@"CDPContext",&,N
T@"CDPContext",&,N,V_cdpContext
success
hasSuccess
TB,N,V_success
B24@?0@"CDPDevice"8@"NSDictionary"16
v32@?0@"CDPDevice"8Q16^B24
root
v32@?0@"CDPDevice"8@"NSError"16^B24
ACCOUNT_RECOVERY_SOFT_LIMIT_REACHED_TITLE
ACCOUNT_RECOVERY_SOFT_LIMIT_REACHED_MESSAGE
GENERIC_ERROR_DEFAULT_BUTTON
ACCOUNT_RECOVERY_HARD_LIMIT_REACHED_MESSAGE_MULTI
ACCOUNT_RECOVERY_HARD_LIMIT_REACHED_TITLE
ACCOUNT_RECOVERY_HARD_LIMIT_REACHED_MESSAGE_SINGLE
START_ACCOUNT_RECOVERY_BUTTON
ACCOUNT_RECOVERY_HARD_LIMIT_REACHED_MESSAGE_GLOBAL
REMOTE_SECRET_ENTRY_RECOVERY_ERROR_TITLE
GENERIC_ERROR_ICLOUD_CONNECTION_MESSAGE
com.apple.cdpd.circleRequestQueue
B16@?0^@8
delegate
T@"NSObject<CDPDCircleDelegate>",W,N,V_delegate
circleProxy
T@"<CDPDCircleProxy>",&,N,V_circleProxy
v36@?0@"NSString"8Q16B24@"NSError"28
followUpProvider
T@"<CDPLocalSecretFollowUpProvider>",&,N,V_followUpProvider
ICSC_ENTRY_MULTIPLE_INCORRECT_TITLE
ICSC_ENTRY_MULTIPLE_INCORRECT_MESSAGE
supportedEscapeOfferMask
TQ,N
isUsingMultipleICSC
TB,N,V_isUsingMultipleICSC
validSecretHandler
T@?,C,N,V_validSecretHandler
T@"<CDPDDeviceSecretValidatorDelegate>",W,N,V_delegate
TQ,N,VsupportedEscapeOfferMask
device_name
device_model
device_model_version
device_model_class
device_color
device_enclosure_color
device_platform
device_mid
SecureBackupMetadataTimestamp
en_US_POSIX
dd-MM-yyyy HH:mm:ss
yyyy-MM-dd HH:mm:ss
ForceUseCachedSecret
com.apple.corecdp
ForceCachedSecretPurge
v32@?0@"NSString"8Q16@"NSError"24
DSID
B24@?0@"ACAccount"8@"NSDictionary"16
v24@?0@"AKAnisetteData"8@"NSError"16
UserAssignedDeviceName
marketing-name
ProductType
DeviceColor
DeviceEnclosureColor
UnlockOnSignIn
< REDACTED >
cachedAccountInfo
T@"NSDictionary",&,N,V_cachedAccountInfo
cachedAccountLockoutInfo
T@"NSDictionary",&,N,V_cachedAccountLockoutInfo
fakeNearlyDepletedRecords
TB,N,V_fakeNearlyDepletedRecords
secureBackupProxy
T@"<CDPDSecureBackupProxy>",&,N,V_secureBackupProxy
configuration
T@"CDPDSecureBackupConfiguration",&,N,V_configuration
T@"CDPContext",R,N,V_context
T@"<CDPStateUIProviderInternal>",R,N,V_uiProvider
T@"<CDPDSecureBackupDelegate>",R,W,N,V_delegate
userDisabledICK
hasDisabledKeychainExplicitly
X-MMe-Client-Info
%@:%@
Basic %@
Authorization
v24@?0B8B12@"NSError"16
v16@?0@"NSNotification"8
circleStatus
needsBackupRecovery
hasCircleStatus
Tq,N,V_circleStatus
hasNeedsBackupRecovery
TB,N,V_needsBackupRecovery
hasHasPeersForRemoteApproval
FakeDepletedRecords
v32@?0B8i12B16B20@"NSError"24
v32@?0B8B12@"NSDate"16@"NSError"24
FakeRepairStateRequired
personID
lockedUntilDate
pcsController
T@"CDPDPCSController",&,N,V_pcsController
attemptedCDPEnable
TB,N,V_attemptedCDPEnable
https://setup.icloud.com/configurations/init?context=settings
urls
getRecoverySettings
escrowProxyUrl
iCloudEnv
com.apple.Dataclass.KeychainSync
com.apple.mobileme
en-us
Accept-Language
application/xml
Accept
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
recoverySecret
T@"NSString",C,N,V_recoverySecret
silentRecovery
TB,N,V_silentRecovery
usePreviouslyCachedSecret
TB,N,V_usePreviouslyCachedSecret
com.apple.icdp.corecdp.local-secret-changed
result
pass
com.apple.icdp.corecdp.local-secret-removed
com.apple.icdp.corecdp.pcs-migration
fail
already_migrated
true
com.apple.icdp.corecdp.pcs-rollback
com.apple.icdp.corecdp.account-locked
com.apple.icdp.corecdp.account-unlocked
com.apple.icdp.corecdp.piggy.attempts
com.apple.icdp.corecdp.piggy.success-attempts
com.apple.icdp.corecdp.sign-in
reason
locked
incorrect_icsc_attempts
skipped
reset
icsc_attempts
remote_approval
false
com.apple.icdp.corecdp.state-machine-started
client_type
com.apple.message.domain
<missing value>
com.apple.message.
v32@?0@8@16^B24
eventHandler
T@?,C,V_eventHandler
CDPDNetworkObserver Event Queue
description
dictionaryRepresentation
stringWithFormat:
dictionary
numberWithUnsignedLongLong:
setObject:forKey:
class
allocWithZone:
init
isMemberOfClass:
copyWithZone:
setTimestamp:
setHasTimestamp:
hasTimestamp
readFrom:
writeTo:
copyTo:
isEqual:
hash
mergeFrom:
timestamp
_timestamp
_has
dealloc
_notificationName
circleStatus:
observeCircleStateWithChangeHandler:
initWithProxy:
observeChangeToState:handler:
stopObservingCircleStatusChange
.cxx_destruct
_circleChangeToken
_isObserving
_eventQueue
_circleProxy
alloc
context
initWithContext:
initWithUiProvider:delegate:circleProxy:
recoveryValidatorWithDevices:forMultipleICSC:withCompletionHandler:
beginInteractiveRecoveryForDevices:isUsingMultipleICSC:usingValidator:
retrieveInflatedDevices:
initWithContext:delegate:
setIsUsingMultipleICSC:
setValidSecretHandler:
count
setSupportedEscapeOfferMask:
hasPeersForRemoteApproval
copy
cdpContext:promptForRemoteSecretWithDevices:offeringRemoteApproval:validator:
objectAtIndexedSubscript:
hasNumericSecret
numericSecretLength
hasRandomSecret
cdpContext:promptForICSCWithIsNumeric:numericLength:isRandom:validator:
useCircleInfoToUpdateNameForDevices:
getBackupRecordDevicesWithCompletion:
recoverSecureBackupWithContext:completion:
secretValidator:recoverSecureBackupWithContext:completion:
secretValidator:shouldContinueValidationAfterError:
secretValidatorWillAttemptRecovery
secretValidator:shouldAcceptRecoveryError:
secretValidator:didFailRecoveryWithErrors:completion:
secretValidator:didFailRecovery:withError:completion:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
initWithContext:uiProvider:secureBackupController:
beginRecovery:
validator
setValidator:
recoveryContext
setRecoveryContext:
circleController
setCircleController:
secureBackupController
setSecureBackupController:
uiProvider
setUiProvider:
_validator
_recoveryFlow
_recoveryContext
_circleController
_secureBackupController
_uiProvider
setContext:
setHasPeersForRemoteApproval:
stringrayDisabled
setStringrayDisabled:
_hasPeersForRemoteApproval
_stringrayDisabled
_context
initWithMachServiceName:
setDelegate:
resume
_connection:hasEntitlement:
_clientTypeForConnection:
_shouldAcceptNewConnectionWithEntitlements:
initWithConnection:entitlements:clientType:
setExportedInterface:
setExportedObject:
defaultCenter
postNotificationName:object:
setInvalidationHandler:
processIdentifier
initWithBytes:length:encoding:
fileURLWithPath:
bundleWithURL:
bundleIdentifier
isEqualToString:
sharedInstance
listener:shouldAcceptNewConnection:
start
_listener
secretType
setSecretType:
userDidCancel
setUserDidCancel:
userDidReset
setUserDidReset:
device
setDevice:
validSecret
setValidSecret:
recoveredInfo
setRecoveredInfo:
_userDidCancel
_userDidReset
_secretType
_device
_validSecret
_recoveredInfo
numberWithBool:
numberWithLongLong:
setErrorDomain:
setShouldCompleteSignIn:
setHasShouldCompleteSignIn:
hasShouldCompleteSignIn
setCloudDataProtectionEnabled:
setHasCloudDataProtectionEnabled:
hasCloudDataProtectionEnabled
hasErrorDomain
setErrorCode:
setHasErrorCode:
hasErrorCode
shouldCompleteSignIn
cloudDataProtectionEnabled
errorDomain
errorCode
_errorCode
_errorDomain
_cloudDataProtectionEnabled
_shouldCompleteSignIn
_idmsRecovery
_authProvider
passwordEquivToken
setPasswordEquivToken:
cdpContext:performSilentRecoveryTokenRenewal:
objectForKeyedSubscript:
updateWithAuthenticationResults:
silentAuthenticationForContext:withCompletion:
reauthenticateUserWithCompletion:
_escapeOfferForDevices:remoteApproval:forMultipleICSC:stringrayStatus:
type
numberWithInteger:
supportedEscapeOfferMask
resetAccountCDPState
cancelValidationWithError:
_showAccountResetConfirmationWithoutRecovery:
applyToJoinCircleWithJoinHandler:
cancelApplicationToJoinCircle
prepareCircleStateForRecovery
joinCircleAfterRecoveryWithCompletion:
isLoginHardLimit
_handleHardLimitErrorForCurrentContextWithDevice:completion:
isLoginSoftLimit
_handleSoftLimitErrorForCurrentContextWithDevice:completion:
domain
code
_entryLimitTitleForDevice:
_hardLimitErrorBodyWithDevice:
_infoDictionaryWithTitle:andBody:
mutableCopy
_remoteApprovalRecoveryOptionWithCompletion:
_accountResetRecoveryOptionWithCompletion:
_populateUserInfo:recoveryIndexHandlers:withRecoveryOption:
_skipSignInRecoveryOptionWithCompletion:
_showEntryLimitError:withRecoveryOptionHandlers:defaultIndex:completion:
_softLimitBodyForDevice:
_cancelRecoveryOptionWithCompletion:
array
localizedRecoveryOption
addObject:
numberWithUnsignedInteger:
recoveryHandler
setObject:forKeyedSubscript:
builderForKey:
localizedString
setLocalizedRecoveryOption:
setRecoveryHandler:
_showAccountResetConfirmationWithCompletion:
cdpContext:showError:withDefaultIndex:withCompletion:
_entryLimitResetAvailableBodyForDevice:
_entryLimitSignInBodyForDevice:
_entryLimitNoResetForRepairForDevice:
localSecretType
addSecretType:
localizedName
modelClass
addDeviceClass:
_resetDataErrorForCurrentContextWithRecoveryIndexMap:
boolValue
arrayWithObjects:count:
numberWithInt:
_resetProtectedDataErrorUnrecoverable
remoteSecretValidator:applyToJoinCircleWithJoinHandler:
cancelRemoteSecretValidatorApplicationToJoinCircle:
setHasSecretType:
hasSecretType
setHasUserDidReset:
hasUserDidReset
_reauthenticateAndCheckiCDPStatusWithNetwork:completion:
isAuthenticationError
_checkiCDPStatusNetwork:withCompletion:
_getOrSetupIdentitySetRef:
pcsIdentitySetIsInICDPNetwork:error:
pcsIdentitySetIsInICDPLocal:error:
pcsAlreadyMigrated
_contextSetupDictionary
pcsIdentityCreateWithInfo:error:
pcsIdentitySetupWithInfo:error:
_enableCDPWithCompletion:
pcsIdentityMigrateToiCDPWithInfo:error:
pcsMigrationSucceeded
pcsMigrationFailed
_disableCDPWithCompletion:
pcsIdentityMigrateToStingrayWithInfo:error:
pcsRollbackSucceeded
pcsRollbackFailed
pcsIdentityMigrateDropStingrayWithInfo:error:
pcsIdentityMigrateRestoreHSMWithInfo:error:
checkiCDPStatusNetwork:withCompletion:
dsid
pcsIdentityPlesioNetworkedWithInfo:error:
pcsIdentityPlesioLocalWithInfo:error:
appleID
stringValue
enableCDPWithCompletion:
disableCDPWithCompletion:
setStingrayState:completion:
getStringrayStatusWithCompletion:
isStingrayDisabledUnauthenticatedNetworked:error:
pcsProxy
setPcsProxy:
_pcsProxy
_contextForPrimaryAccountSilentAuth
_authWithContext:completion:
_authContextForContext:
setShouldPreventInteractiveAuth:
setIsUsernameEditable:
authenticateWithContext:completion:
_contextForPrimaryAccount
setDSID:
setUsername:
primaryAccountAltDSID
primaryAccountUsername
setAltDSID:
silentAuthenticationForPrimaryAccountWithCompletion:
_secureBackup
getAccountInfoWithInfo:completionBlockWithResults:
getAccountInfoWithInfo:results:
uncachePassphraseWithInfo:completionBlock:
enableWithInfo:completionBlock:
enableWithInfo:
recoverWithInfo:completionBlockWithResults:
disableWithInfo:completionBlock:
backOffDateWithInfo:completionBlock:
setBackOffDateWithInfo:completionBlock:
accountInfoWithInfo:error:
sharedConnection
isPasscodeSet
hasLocalSecret
serialNumber
recoveryOptionIndex
setRecoveryOptionIndex:
_localizedRecoveryOption
_recoveryHandler
_recoveryOptionIndex
setSuccess:
setCircleStatus:
setNeedsBackupRecovery:
reportPiggyBackWithSuccess:error:
reportStateMachineCompletionShouldCompleteSignIn:cloudDataProtectionEnabled:error:
reportStateMachineLockAssertionWithError:
reportStateMachineEnableCDPShouldCompleteSignIn:cloudDataProtectionEnabled:error:
reportStateMachineCircleJoinWithStatus:needsBackupRecovery:hasPeersForRemoteApproval:error:
reportStateMachineRepairHSA2AuthWithError:
reportStateMachineRepairCircleAuth
reportStateMachineRecoveryWithSecretType:userDidReset:error:
userInfo
unsignedIntegerValue
addEntriesFromDictionary:
errorWithDomain:code:userInfo:
isICSCRecoveryHardLimitError
isCoolDownError
isRecoveryPETHardLimitError
errorByExtendingUserInfoWithDictionary:
cancelApproveFromAnotherDevice
failedAttempts
signInSucceededWithIncorrectICSCAttemptCount:didUseRemoteApproval:
signInFailedDueIncorrectICSCAttempts
_decoratedDelegate
isAttemptingRecovery
validSecretHandler
dictionaryWithObjects:forKeys:count:
delegate
approveFromAnotherDeviceWithCompletion:
supportedEscapeOfferMaskCompletion:
_requestToJoinCompletion
_isWaitingForRemoteApproval
initWithSecureBackupMetadataInfo:
integerValue
setRecoveryStatus:
setCoolOffPeriod:
initWithSecureBackupRecordInfo:
_performSOSCBlock:error:
allObjects
registerCredentialsFromContext:
password
canAuthenticate
dataUsingEncoding:
peerId
peerCount
peerDeviceNamesByPeerID
synchronizeCircleViews
removeThisDeviceFromCircle:
requestToJoinCircle:
requestToJoinCircleAfterRestore:
requestToResetCircle:
viewMemberForAutofillPasswords:
anyPeerHasEnabledViewsInSet:error:
setViewsWithEnableSet:disableSet:
hasNonViewAwarePeers
removeNonViewAwarePeers:
isLastBackupMakingPeer:
cdpContext
setCdpContext:
_cdpContext
setHasSuccess:
hasSuccess
success
_success
_idmsDictionaryWithValidationResults:error:
allKeys
machineID
recoveryStatus
predicateWithBlock:
filteredArrayUsingPredicate:
_verificationFailedErrorWithUnderlyingError:
cdpContext:showError:withCompletion:
_recoveryListFromDevices:
_showCooldownErrorWithUnderlyingError:completion:
_hardLimitError
_showHardLimitError:completion:
enumerateObjectsUsingBlock:
initForReadingWithData:
setRequiresSecureCoding:
decodeObjectOfClass:forKey:
name
reason
finishDecoding
enumerateKeysAndObjectsUsingBlock:
recordID
containsObject:
firstObject
_hardLimitErrorForSingleRecord:
_outOfattemptsErrorForRecord:
_cooldownErrorWithUnderlyingError:
prevailingLocalSecretType
beginIDMSRecoveryWithCompletion:
_icscRecoveryDevices
circleStatus
joinCDPCircleIgnoringBackups:completion:
_joinCDPCircleIgnoringBackups:completion:
authenticatedCircleStatus:
_peerCount
_requestToJoinAndWaitForSuccessWithHandler:
circleController:secureBackupRecordsArePresentWithCompletion:
contextForController:
_resetCicleToResolvePendingAfterRecoveryWithCompletion:
_peerDeviceNamesByPeerID
countByEnumeratingWithState:objects:count:
objectForKey:
setLocalizedName:
_requestToJoinWithObserver:completion:
_requestCircleJoinWithObserver:requestBlock:completion:
_requestToJoinWithRequestBlock:completion:
peerID
joinCDPCircleWithCompletion:
_requestToJoinAfterRestoreAndWaitForSuccessWithHandler:
circleProxy
setCircleProxy:
_circleJoinObserver
_requestSynchronizationQueue
_delegate
initWithContext:uiProvider:delegate:
followUpProvider
postRepairFollowUp
deleteLocalSecretChangeFollowUp
_handleCompletionStatus:
_localSecretChangedTo:secretType:completion:
_createContextWithCompletion:
_cdpStateMachine
_repairWithStateMachine:completion:
_collectLocalSecretWithCompletion:
shouldPerformRepairWithCompletion:
length
didChangeLocalSecret
lock
unlock
enableSecureBackupRemovingExistingRecordWithSecret:secretType:useCachedSecret:completion:
didRemoveLocalSecret
postLocalSecretChangeFollowUp
set_alwaysCreateEscrowRecord:
repairCloudDataProtectionStateWithCompletion:
initWithAuthenticationResults:
initWithContext:uiProvider:
initWithContext:validSecretHandler:
cdpContext:promptForLocalSecretWithHandler:
backupRecordsArePresentWithCompletion:
circlePeerIDForSecureBackupController:
synchronizeCircleViewsForSecureBackupController:
promptForAdoptionOfMultipleICSCWithCompletion:
promotForLocalSecretWithCompletion:
localSecretChangedTo:secretType:completion:
finishOfflineLocalSecretChangeWithCompletion:
setFollowUpProvider:
_followUpProvider
_performPCSBlock:error:
pcsIdentityPlesioStateWithInfo:networked:error:
pcsIdentityMigrateCloseDoorWithInfo:error:
_isFailedSecret:forDevice:
setRecoverySecret:
isUsingMultipleICSC
_handleMultiCSCRecoveryResults:type:secret:device:completion:
_handleMultiCSCRecoveryFailureForDevice:recoveryError:secret:
remainingAttempts
removeObject:
_handleRecoveryFailureForFinalDevice:completion:
validateSecret:devices:type:withCompletion:
_attemptToRecoverDevice:withSecret:completion:
_performSingleiCSCRecoveryWithSecret:type:completion:
removeAllObjects
_handleDelegateValidationError:
_isInvalidICSCError:
setRemainingAttempts:
_failedSecretsForDevice:
_failedSingleICSCs
_isAttemptingRecovery
_failedAttempts
_failedSecrets
_recoveryErrors
_depletedRemainingAttempts
_currentDevice
_isUsingMultipleICSC
_validSecretHandler
configurationWithContext:
accountInfoWithCompletion:
_accountInfoWithCompletion:
accountInfoFetchSetupDictionary
_sanitizedInfoDictionary:
_getBackupRecordDevicesIncludingUnrecoverableRecords:completion:
fakeNearlyDepletedRecords
_dateWithSecureBackupDateString:
setRecordDate:
laterDate:
setHasRandomSecret:
localeWithLocaleIdentifier:
setLocale:
setDateFormat:
dateFromString:
timeZoneForSecondsFromGMT:
setTimeZone:
deleteSingleICSCBackupWithCompletion:
_enableSecureBackupWithSecret:secretType:useCachedSecret:completion:
disableSecureBackupWithCompletion:
checkForExistingRecord:
checkForExistingRecordWithPeerId:completion:
checkForExistingRecordMatchingPredicate:completion:
_authenticatedEnableSecureBackupWithSecret:secretType:useCachedSecret:completion:
_clientMetadataWithSecretType:length:
escrowAuthInfo
_stashedPRK
_currentAnisetteData
archivedDataWithRootObject:
_disableThenEnableWithInfo:completion:
_disableSecureBackupWithCompletion:
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:
accountPropertyForKey:
credentialForAccount:error:
credentialItemForKey:
anisetteDataWithCompletion:
_recoverBackupDictionaryWithContext:completion:
_recoveryInfoDictionaryFromContext:
recoverySecret
usePreviouslyCachedSecret
isUsingMultipleiCSC
silentRecovery
_deleteAllBackupRecordsWithCompletion:
_deleteSingleICSCBackupWithCompletion:
dateWithTimeIntervalSinceNow:
didLockAccount
setBackoffDate:withCompletion:
dateWithTimeIntervalSinceReferenceDate:
didUnlockAccount
_setBackoffDate:withCompletion:
date
resetAccountLockOutWithCompletion:
accountLockoutInfoWithCompletion:
_accountLockoutInfoWithCompletion:
synchronizeKeyValueStoreWithCompletion:
isEligibleForCDPWithCompletion:
cdpBackupRecordsArePresentWithCompletion:
enableSecureBackupWithSecret:secretType:useCachedSecret:completion:
deleteAllBackupRecordsWithCompletion:
lockAccountOutWithCompletion:
isAccountLockedWithShouldReset:completion:
cachedAccountInfo
setCachedAccountInfo:
cachedAccountLockoutInfo
setCachedAccountLockoutInfo:
setFakeNearlyDepletedRecords:
secureBackupProxy
setSecureBackupProxy:
configuration
setConfiguration:
_fakeNearlyDepletedRecords
_cachedAccountInfo
_cachedAccountLockoutInfo
_secureBackupProxy
_configuration
_primaryiCloudAccount
setAccountProperty:forKey:
saveAccount:withCompletionHandler:
iCloudAccountForAltDSID:
isICDPEnabledForDSID:checkWithServer:
aa_primaryAppleAccount
aa_appleId
aa_personID
aa_altDSID
hasDisabledKeychainExplicitly
setHasDisabledKeychainExplicitly:
isICDPEnabledForDSID:
primaryAccountDSID
base64EncodedStringWithOptions:
setValue:forHTTPHeaderField:
currentDevice
serverFriendlyDescription
cdp_addAuthHeaderWithContext:
cdp_addClientInfoHeader
_allowStateMachineAccess
stateMachineStartedFromClient:
_startObservingConnectionStateForRepairWithStateMachine:
setType:
_removeObserver
handleCloudDataProtectionStateWithCompletion:
addObserverForName:object:queue:usingBlock:
removeObserver:
set_authProvider:
_allowDataRecovery
set_guestMode:
set_idmsRecovery:
keyChainSync
isUserVisibleKeychainSyncEnabled
setUserVisibleKeychainSyncEnabled:withCompletion:
keyChainSyncWithProxy:
removeNonViewAwarePeersFromCircleWithCompletion:
setAppleID:
longLongValue
setDsid:
preflightStingrayDisableWithCompletion:
getStingrayDisableEligibilityWithCompletion:
handleCloudDataProtectionStateWithContext:uiProvider:completion:
repairCloudDataProtectionStateWithContext:uiProvider:completion:
shouldPerformRepairForContext:completion:
localSecretChangedTo:secretType:context:completion:
finishOfflineLocalSecretChangeWithContext:uiProvider:completion:
isICDPEnabledForDSID:checkWithServer:completion:
hasLocalSecretWithCompletion:
isUserVisibleKeychainSyncEnabledWithCompletion:
removeNonViewAwarePeersFromCircleWithContext:completion:
setStingrayState:context:completion:
getStingrayStateForContext:completion:
getStingrayDisableEligibility:completion:
preflightStingrayDisableForContext:uiProvider:completion:
recoverIDMSRecoveryDictionaryWithContext:uiProvider:authProvider:completion:
clearFollowUpWithContext:completion:
postFollowUpWithContext:completion:
_allowFollowUps
_allowUtilityAccess
_connection
_entitlements
_clientType
_notificationObject
setHasCircleStatus:
hasCircleStatus
setHasNeedsBackupRecovery:
hasNeedsBackupRecovery
setHasHasPeersForRemoteApproval:
hasHasPeersForRemoteApproval
needsBackupRecovery
_circleStatus
_needsBackupRecovery
lockWithError:
synchronizeKeychainViewSetWithOtherPeers:
_handleCloudDataProtectionStateWithCompletion:
_enrollOrDisableCDPAfterEnabledStateVerified:
_handleiCDPStatusCheckError:completion:
_attemptCDPEnable:
_handlePreflightError:completion:
_preflightAccountStateWithContext:completion:
isHSA2Account
_handleJoinCircleEvent:
_handleBackupRecoveryWithPeersForRemoteApproval:circleStatus:completion:
_disableCloudDataProtectionWithCompletion:
_requestPostLockoutAccountReset:
_recoverSecureBackupWithRemotePeers:completion:
_enableSecureBackupWithCompletion:
_resetAccountCDPStateWithCompletion:
cdpContext:promptToInformUserOfAccountUnlockWithCompletion:
_predicateForRecordUpgradeCheck
_alwaysCreateEscrowRecord
_confirmCDPEligibilityWithCompletion:
_recoverSecureBackupWithHasPeersForRemoteApproval:completion:
_refreshWithContext:
_authenticatedShouldPerformRepairWithCompletion:
_authenticatedRepairCloudDataProtectionStateWithCompletion:
_performInteractivelyAuthenticatedRepair:
cdpContext:promptForInteractiveAuthenticationWithCompletion:
accountProperties
signInFailedDueToLockedAccount
cdpContext:promptToInformUserOfAccountLockOutWithCompletion:
_enableKVSForAccount:store:completion:
provisionedDataclasses
enabledDataclasses
setEnabled:forDataclass:
cdpContext:promptToEnableStingrayCompletion:
shouldAllowCDPEnrollment
cachedLocalSecret
_useSecureBackupCachedPassphrase
cachedLocalSecretType
_attemptBackupRecoveryWithLocalSecret:type:useCachedSecret:hasPeersForRemoteApproval:completion:
setCachedLocalSecret:
setCachedLocalSecretType:
setUsePreviouslyCachedSecret:
setSilentRecovery:
_attemptBackupRecoveryByPromptingForRemoteSecretWithLocalSecret:localSecretType:useCachedSecret:hasPeersForRemoteApproval:completion:
signInWithUserElectingResetProtectedData
signInWithUserSkippingFlow
cdpContext:promptForAdoptionOfMultipleICSC:
pcsController
setPcsController:
attemptedCDPEnable
setAttemptedCDPEnable:
_pcsController
_attemptedCDPEnable
userDidEnterValidSecret:type:
userDidCancelWithError:
_validationHandler
sharedSession
configurationWithContext:andSession:
_guestMode
_iCloudEnvironment
_escrowProxyURL
_escrowConfigurationBag
_setupConfigurationURLs
_escrowConfigurationBagFull
_fetchConfigurationDictionary
_fetchEscrowConfigurationBag
_escrowProxyConfigurationURL
_configurationRequestWithURLString:
URLWithString:
initWithURL:
_escrowProxyConfigurationURLRequest
_fetchConfigurationWithRequest:
_configurationInfoURLRequest
statusCode
propertyListWithData:options:format:error:
dataTaskWithRequest:completionHandler:
_configurationURLs
_escrowConfigurationURLs
_session
_isThisDeviceInCircle
_setKeychainSyncState:
_preflightCircleStatusWithCompletion:
_processAuthFailure:completion:
_defaultUserVisibleViewSet
setWithObjects:
_silentRecovery
_usePreviouslyCachedSecret
_recoverySecret
stringByAppendingString:
UTF8String
piggybackAttempt
piggybackSuccess
eventHandler
setEventHandler:
_eventHandler
UUID
UUIDString
removeObjectForKey:
startObservingNetwork
_networkReachabilityDidChangeWithFlags:
addNetworkObserverWithEventHandler:
removeObserverWithToken:
_networkIsReachable
_clientsLock
_clientsByUUID
_networkReach
AWDCoreCDPStateMachineRepairCircleAuth
NSCopying
CDPDCircleStateObserver
CDPDRecoveryFlowController
CDPDDeviceSecretValidatorDelegate
NSObject
CDPDRecoveryFlowContext
CDPDXPCListener
NSXPCListenerDelegate
CDPDRemoteSecretValidationResult
AWDCoreCDPStateMachineCompletion
Daemon
CDPDRecoveryValidatedJoinFlowController
CDPDRemoteDeviceSecretValidatorDelegate
AWDCoreCDPStateMachineRecovery
CDPDPCSController
CDPAuthenticationHelper
CDPDSecureBackupProxyImpl
CDPDSecureBackupProxy
CDPDLocalDevice
CDPDRecoveryOption
AWDCoreCDPStateMachineLockAssertion
Authentication
AWDMetricReporter
SecureBackup
CDPDRemoteDeviceSecretValidator
CDPDCircleProxyImpl
CDPDCircleProxy
AWDCoreCDPPiggyBack
CDPDBackupInfoRecoveryFlowController
CDPDCircleController
CDPDLocalSecretController
CDPDSecureBackupDelegate
CDPDCircleDelegate
CDPDProtectedCloudStorageProxyImpl
CDPDProtectedCloudStorageProxy
CDPDDeviceSecretValidator
CDPRemoteDeviceSecretValidatorProtocol
CDPDSecureBackupController
CDPDAccount
CDPDClientHandler
CDPDaemonProtocol
AWDCoreCDPStateMachineCircleJoin
CDPDStateMachine
CDPDLocalDeviceSecretHandler
CDPLocalDeviceSecretHandlerProtocol
CDPDSecureBackupConfiguration
CDPDLockAssertion
CDPDKeychainSync
CDPDSecureBackupRecoveryContext
CDPDLocalSecretFollowUpProviderImpl
CDPLocalSecretFollowUpProvider
AWDCoreCDPStateMachineRepairHSA2Auth
CDPDTelemetryController
AWDCoreCDPStateMachineEnableCDP
CDPDNetworkObserverClient
CDPDNetworkObserver
@24@0:8^{_NSZone=}16
v24@0:8Q16
v20@0:8B16
B16@0:8
@16@0:8
B24@0:8@16
v24@0:8@16
Q16@0:8
{?="timestamp"b1}
@24@0:8@16
v16@0:8
r*16@0:8
v24@0:8@?16
v28@0:8i16@?20
@"NSObject<OS_dispatch_queue>"
@"<CDPDCircleProxy>"
v40@0:8@16@24@?32
v40@0:8@"CDPDDeviceSecretValidator"16@"CDPDSecureBackupRecoveryContext"24@?<v@?@"NSDictionary"@"NSError">32
B32@0:8@16@24
B32@0:8@"CDPDDeviceSecretValidator"16@"NSError"24
B32@0:8@16^@24
B32@0:8@"CDPDDeviceSecretValidator"16^@24
v40@0:8@"CDPDDeviceSecretValidator"16@"NSDictionary"24@?<v@?B@"NSError">32
v48@0:8@16@24@32@?40
v48@0:8@"CDPDDeviceSecretValidator"16@"CDPDevice"24@"NSError"32@?<v@?B@"NSError">40
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
@40@0:8@16@24@32
@36@0:8@16B24@?28
v36@0:8@16B24@28
@"<CDPRemoteDeviceSecretValidatorProtocol>"
@"NSObject<OS_os_activity>"
@"CDPDRecoveryFlowContext"
@"CDPDCircleController"
@"CDPDSecureBackupController"
@"<CDPStateUIProviderInternal>"
@"CDPContext"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
B24@0:8Q16
Q24@0:8@16
@"NSXPCListener"
@"CDPDevice"
@"NSString"
@"NSDictionary"
v24@0:8q16
q16@0:8
{?="errorCode"b1"timestamp"b1"cloudDataProtectionEnabled"b1"shouldCompleteSignIn"b1}
v32@0:8@16@?24
v32@0:8@"CDPDRemoteDeviceSecretValidator"16@?<v@?B@"NSError">24
v24@0:8@"CDPDRemoteDeviceSecretValidator"16
Q36@0:8@16B24B28B32
v40@0:8@16@24@32
@24@0:8@?16
v48@0:8@16@24q32@?40
@32@0:8@16@24
{?="errorCode"b1"secretType"b1"timestamp"b1"userDidReset"b1}
v28@0:8B16@?20
^{_PCSIdentitySetData=}24@0:8^@16
B28@0:8B16^@20
@"<CDPDProtectedCloudStorageProxy>"
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
@32@0:8@16^@24
@"NSDictionary"32@0:8@"NSDictionary"16^@24
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
@"NSError"24@0:8@"NSDictionary"16
@?16@0:8
{?="errorCode"b1"timestamp"b1}
v28@0:8B16@20
v32@0:8B16B20@24
v40@0:8q16B24B28@32
v36@0:8q16B24@28
@24@0:8@"CDPContext"16
i24@0:8^@16
@"NSDictionary"16@0:8
B24@0:8^@16
B32@0:8@"NSSet"16^@24
B32@0:8@"NSSet"16@"NSSet"24
@"CDPContext"16@0:8
v24@0:8@"CDPContext"16
B32@0:8@?16^@24
{?="errorCode"b1"timestamp"b1"success"b1}
@"NSArray"
i16@0:8
v32@0:8@?16@?24
v40@0:8@16@?24@?32
@"CDPDCircleStateObserver"
@"NSObject<CDPDCircleDelegate>"
@"NSString"24@0:8@"CDPDSecureBackupController"16
B24@0:8@"CDPDSecureBackupController"16
v24@0:8@?<v@?B@"NSError">16
v24@0:8@?<v@?@"NSString"Q@"NSError">16
v32@0:8@"CDPDCircleController"16@?<v@?B@"NSError">24
@"CDPContext"24@0:8@"CDPDCircleController"16
v40@0:8@16Q24@?32
@"<CDPLocalSecretFollowUpProvider>"
^{_PCSIdentitySetData=}32@0:8@16^@24
^{_PCSIdentitySetData=}32@0:8@"NSDictionary"16^@24
B32@0:8^{_PCSIdentitySetData=}16^@24
B32@0:8@"NSDictionary"16^@24
B36@0:8@16B24^@28
v48@0:8@16@24Q32@?40
v48@0:8@"NSString"16@"NSArray"24Q32@?<v@?BB@"NSError">40
v24@0:8@"NSError"16
v24@0:8@?<v@?Q>16
v56@0:8@16Q24@32@40@?48
@"NSMutableDictionary"
@"NSMutableSet"
@"<CDPDDeviceSecretValidatorDelegate>"
v44@0:8@16Q24B32@?36
@32@0:8Q16Q24
@"<CDPDSecureBackupDelegate>"
@"<CDPDSecureBackupProxy>"
@"CDPDSecureBackupConfiguration"
B28@0:8@16B24
v40@0:8@"CDPContext"16@"<CDPStateUIProviderInternal>"24@?<v@?BB@"NSError">32
v40@0:8@"CDPContext"16@"<CDPStateUIProviderInternal>"24@?<v@?B@"NSError">32
v32@0:8@"CDPContext"16@?<v@?B@"NSError">24
v48@0:8@16Q24@32@?40
v48@0:8@"NSString"16Q24@"CDPContext"32@?<v@?B@"NSError">40
v36@0:8@16B24@?28
v36@0:8@"NSString"16B24@?<v@?B>28
v24@0:8@?<v@?B>16
v28@0:8B16@?<v@?B@"NSError">20
v36@0:8B16@20@?28
v36@0:8B16@"CDPContext"20@?<v@?B@"NSError">28
v48@0:8@"CDPContext"16@"<CDPStateUIProviderInternal>"24@"<CDPAuthProviderInternal>"32@?<v@?@"NSDictionary"@"NSError">40
v32@0:8@"CDPFollowUpContext"16@?<v@?B@"NSError">24
@40@0:8@16Q24Q32
@"NSXPCConnection"
{?="circleStatus"b1"errorCode"b1"timestamp"b1"hasPeersForRemoteApproval"b1"needsBackupRecovery"b1}
v32@0:8B16i20@?24
v48@0:8@16Q24B32B36@?40
@"CDPDPCSController"
v32@0:8@16Q24
v32@0:8@"NSString"16Q24
@32@0:8@16@?24
@"NSURLSession"
@24@0:8^@16
B20@0:8B16
v28@0:8Q16B24
v20@0:8I16
@"NSLock"
^{__SCNetworkReachability=}
"Initialized %@"
"Deallocated %@"
"%@ started observing state"
"Error checking circle status (%i) after observing kSOSCCCircleChangedNotification - %@"
"Circle state is %i after observing kSOSCCCircleChangedNotification (observer %p)"
"CDPDRecoveryFlowController deallocated"
cdp: Recovery Flow
"Recovery flow failed due to device inflation error. %@"
"Requesting UI provider prompt for a remote device secret from one of %lu devices (offeringRemoteApproval=%i)"
"Requesting UI provider prompt for an ICSC isNumeric=%i numericLength=%@"
"Fetching backup record devices"
"Failed to fetch backup record devices: %@"
"Received new connection %@, checking entitlements..."
"CDP client connection invalidated: %@"
"Accepting new connection %@ with entitlements mask %i"
"Denying new connection %@"
"Client is Purple Buddy"
"Client is Preferences"
"Unknown client type with bundleID '%@'"
"Attempting silent re-authentication..."
"Renew request completed! Error: %@"
"Silently re-fetched recovery token"
"Silent re-authentication succeeded"
"Silent re-authentication failed: %@"
"Escape available: other devices"
"Escape available: remote approval"
"Escape available: account reset"
"Context Type: %@ - Plesio: %@"
"Escape available: skip flow"
"User attempted to sign in after burning out all recovery options, present hard limits"
"CDPDRemoteDeviceSecretValidatorDelegate applying to join circle"
"CDPDRemoteDeviceSecretValidatorDelegate cancelling application to joinc circle"
cdp: Post Recovery Circle Join
"Non-terminating error detected, with retry option: %@"
"Starting handling hard limit error..."
"Starting handling soft limit error..."
"Creating recovery option: Remote Approval"
"Creating recovery option: Skip"
"Creating recovery option: Reset"
"User elected to Reset Protected Data, confirming..."
"Creating recovery option: Cancel"
"Attempting to preset alert (using: %@) for error: %@"
"User responded to presented alert with option: %@"
"Prompting user for Reset confirmation"
"Reset confirmation prompt came back with: %@"
"Silent auth requested prior to checking CDP state"
cdp: internal status check
"Checking iCDP State. Networked: %@"
"PCSIdentitySetIsICDPNetwork returned isEnabled=%i error=%@"
"PCSIdentityCreate return NULL with error: %@"
"PCSIdentitySetup returned NULL with error: %@"
"PCS Identity fetched"
"Re-authenticating on error from enableCDPWithCompletion: %@"
"Re-authenticating on error from disableCDPWithCompletion:"
cdp: disabling data protection
"Attempting to set Stingray state"
"Setting iCDP Stingray returned: %d - (%@)"
"Attempting to check iCDP Stingray state for DSID: %@"
"iCDP Stingray is disabled: %d - (%@)"
cdp: Re-authentication
"Managed config (%@) reports isPasscodeSet=%i"
"Reporting current serial number: %@"
"Attempting to join the circle using remote approval..."
"Circle join was approved from another device"
"Ignoring circle state change because a recovery is in progress"
"Ignoring circle state change because we're not supposed to be waiting for remote approval"
"Failed to request circle join approval from another device - %@"
"Fetching decorated delegate: %@"
"resetAccountCDPState was called"
"Checking circle status with SOSCCThisDeviceIsInCircle"
"Failed to check circle status: %@"
"Call to SOSCCThisDeviceIsInCircle returned a status: %d"
"Failed to get peer ID: %@"
"Failed to get peer info from circle: %@"
"Failed to get peer info to find device names: %@"
"Calling SOSCCWaitForInitialSync to wait for views to sync"
"Finished calling SOSCCWaitForInitialSync didSync=%i error=%@"
"Skipping call to SOSCCWaitForInitialSync because circle status is not kSOSCCInCircle (%i)"
"Attempting to remove self from circle"
"Removed device from circle successfully"
"Failed to remove self from circle - %@"
"Calling SOSCCView for view %@ reported device is MEMBER - (error: %@)"
"Calling SOSCCView returned status %i for view %@ - (error: %@)"
"Failed to check for non-view-aware peers with error %@"
"Removed old peers from circle: %@"
"Failed to remove old peers from circle with error %@ (peers: %@)"
"Failed to check for non-view-aware peers before removing them from circle with error %@"
@"Calling SOSCCSetUserCredentialsAndDSID"
"Failed to call SOSCCSetUserCredentialsAndDSID with error %@"
"Skipping registering credentials, insufficient parameters"
"Failed to recover IDMS data dictionary: %@"
"Recovered IDMS data dictionary with keys: %@"
"Parsing recovered data data: %@"
"Failed to parse IDMS data: %@ - %@"
"Parsed a MID"
"Parsed a PRK"
"Circle status before attempting recovery is %i"
"Circle state changed to a state other than pending, proceeding with recovery"
"Attempting to remove self from circle to break pending status"
cdp: circle join
"Can't join circle, failed to check for presence of secure backup records: %@"
"Circle has peers for remote approval"
"Circle does NOT have peers for remote approval"
"Circle status is kSOSCCCircleAbsent and backups are NOT present... Trying to create and join the circle"
"Circle status is kSOSCCInCircle"
"Circle status is kSOSCCRequestPending, recovery required"
"Circle status is kSOSCCError - %@"
"Unexpected circle status %i"
"Circle join request succeeded after backup recovery"
"Circle status after successful request to join is %i"
"Circle status changed kSOSCCInCircle"
"Circle status is now %i (waiting for kSOSCCInCircle or kSOSCCRequestPending)"
"Failed to request circle join after restore with error %@"
"Attempting to reset and join new circle after recovery succeeded but resulted in a pending circle join..."
"Resetting circle after join attempt following recovery resulted in pending..."
"Circle reset successfully, attempting to join/create"
"Failed to reset: %@"
"Pending application state was resolved immediately after calling remove"
"Pending application state was not resolved immediately after calling remove... waiting to see state != Pending"
"Pending application state was resolved!"
"Updating device name for %@ to '%@' based on circle info"
"Requesting to join circle with handler"
"Request made, but we were already in circle, completing..."
"Successfully joined the circle"
"Failed to apply to circle: %@"
"CDPDLocalSecretController dealloc"
"Updating context for local secret change"
"Have local secret, attempting to enable secure backup"
"Successfully updated local secret by re-enabling SecureBackup"
"Failed to update local secret by re-enabling SecureBackup"
"No secret, no follow up"
"Failed to silently update local secret, starting repair"
"Refreshing context with PET"
@"Failed to reauthenticate before updating local secret"
"Prompting user to enter local secret..."
"Got peer id: %@ from %@"
"Multiple-ICSC secret is known to be bad, skipping validation"
"Recovery delegate rejected recovery with error. %@"
"Set _isAttemptingRecovery to suppress acting on change in circle state"
"Remaining attempts: %@"
"Depleted remaining attempts for multiple-iCSC entry (%@)"
"Un-set _isAttemptingRecovery to resume acting upon circle changes after failed multiple iCSC recovery"
"Redirecting error to the delegate"
"Delegate finished handling the error and returned: %@"
"Reaching out to the delegate for error handling"
"Unsupported delegate"
"cancelValidationWithError was called"
"Un-set _isAttemptingRecovery to resume acting upon circle changes after failed single iCSC recovery"
"Exceeded maximum attempts for iCSC entry"
"Re-authenticating after error calling accountInfoWithCompletion: %@"
cdp: Fetching Account Info
"Fetching account info with %@"
"Updated account info cache with %@"
"Error getting account info %@"
"Failed to check for secure backup records: %@"
"backupRecordsArePresentWithCompletion got account info %@"
"Secure backup hasSingleICSCBackup=%@ hasMultipleICSCBackups=%@"
"getBackupRecordDevicesWithCompletion: called, fetching account info from SecureBackup"
"SecureBackup returned error %@"
"**** DEBUG **** Setting fake remaining attempts value of 1 for %@"
"Disqualified device %@ because the remaining attempts is %lu"
"Backup record found for device %@ with date %@ (%@)"
"Backup record date %@ is later than the previously known newest record (%@), promoting %@ as newest device record"
"Finished parsing multiple-iCSC records and found the newest record to be %@"
"Found a single-iCSC metadata record. Returning that as a faux-device using %@"
"No single-iCSC metadata record is present"
"Finished parsing backup records, returning %lu devices and isUsingMultipleICSC=%i"
"Single ICSC record deleted, proceeding with enable of secure backup"
"Failed to delete single-ICSC backup while attempting to enable secure backup: %@"
"Single ICSC that is complex or random and not using multiple ICSC, prompting for adoption..."
"Accepted multiple ICSC, deleting old record..."
"Single ICSC that is NOT random or complex, deleting old record and enabling multiple-ICSC"
"Already using multiple ICSC, no need to prompt for adoption"
"Calling delete before enable due to existing record being present"
"Warning, deleting our existing backup record failed - enabling will likely fail also"
"No existing backup record found, continuing with enable"
"Checking if the peer has a secure backup: %@"
"Check for existing backup failed with error: %@"
"Found %@ matching devices"
"Re-authenticating after error from authenticatedEnableSecureBackupWithSecret: %@"
cdp: Enabling Secure Backup
"Forcing use of cached secret by preference (com.apple.corecdp: ForceUseCachedSecret)"
"Forcing purge of cached secret by preference (com.apple.corecdp: ForceCachedSecretPurge)"
"Failed to escrow account recovery data due to missing MID"
"Failed to escrow account recovery data due to missing recovery token"
"Failed to enable SecureBackup because no cached secret was present when expected... prompting user to enter local secret"
"Attempt to enable Secure Backup again now that we have the local secret"
"Failed to get local secret"
"Failed to enable SecureBackup with error %@"
"Enabled SecureBackup!"
"Attempting to enable SecureBackup with validated local secret using info %@"
"Fetching PRK for %@"
"Found the right acount: %@"
"Escrowing a previously backed up PRK"
"Something went wrong... (%@) could not find a stashed token for context: <%@ : %@>"
"Failed to fetch Anisette data! Error: %@"
"Re-authenticating after error from _authenticatedRecoverSecureBackupWithSecret: %@"
cdp: Recovery Backup
"Attempting to recover SecureBackup secret from device %@ using info %@"
"Recovery error had additional info: %@"
"Failed to recover SecureBackup with error %@"
"Recovered SecureBackup"
"Re-authenticating after error from _deleteAllBackupRecordsWithCompletion: %@"
cdp: Deleting all records
"Attempting to delete all SecureBackup records with info %@"
"Error attempting to delete all backup records %@"
"Re-authenticating after error from _deleteSingleICSCBackupWithCompletion: %@"
"Deleting existing single-iCSC backup..."
"Failed to delete existing single-iCSC backup: %@"
"Existing single-iCSC backup deleted successfully"
"No existing single-iCSC backup found to delete"
"Failed to get account info while deleting single-iCSC backup: %@"
"Re-authenticating after error from _disableSecureBackupWithCompletion: %@"
cdp: Disabling Backup
"Attempting to disable SecureBackup with info %@"
"Failed to disable SecureBackup with error %@"
"Disabled SecureBackup!"
"Failed to disable SecureBackup because no local peerID could be found"
"Attempting to lock account via SecureBackup using backoff date %@"
"Attempting to unlock account via SecureBackup using reset-backoff date %@"
"Re-authenticating after error from _setBackoffDate:withCompletion: %@"
"Attempting to set back off date with info %@"
"Failed to set backoff date with error %@"
"Set backoff date with SecureBackup to %@"
"Failed to read existing backoff date prior to setting lockout with error %@"
"Account is locked until %@"
"Account is no longer locked (lock out date has passed %@)"
"Resetting account lockout state..."
"Successfully reset account lockout state"
"Failed to reset account lockout state: %@"
"Account is not locked"
"Failed to read existing backoff date when checking account lock state - %@"
"Re-authenticating after error from _accountLockoutInfoWithCompletion: %@"
"Attempting to check account lock status via SecureBackup"
"Using cached account lockout info"
"User previously disabled iCK: %@"
"User disabled iCloud keychain: %@"
"Failed to set user preference for iCloud keychain disable: %@"
"Error calling PCSIdentitySetIsICDP: %@"
"Failed to call PCSIdentitySetIsICDP: %@"
"Failed to add auth header"
"Starting state machine..."
"State machine completed shouldCompleteSignIn=%@ cloudDataProtectionEnabled=%@ error=%@"
"Denying access to state machine. Missing entitlement."
"Starting state repair..."
"State machine repair completed didRepair=%@ error=%@"
"Denying access to state repair. Missing entitlement."
"CDP flow interrupted"
"Checking whether repair should be performed on the CDP state..."
"State machine status check completed shouldRepair=%@ error=%@"
"Denying access to state machine. Missing entitlements"
"Handing change in local secret..."
"State machine finished handling local secret change with didUpdate=%@ error=%@"
"Finishing offline local secret change..."
"Updated local secret after offline change"
"Failed to update local secret after offline change: %@"
"Follow ups are not supported on simulator"
"Initiating IDMS info recovery"
"IDMS info recovery completed with error: %@"
"Denying access to back up data. Missing entitlements"
"Preflight attempted for DSID (%@)"
"Preflight attempted without a valid context, defaulting to primary account"
"State machine elected to allow to proceed=%@ error=%@"
"Starting Stingray eligibility check..."
"State machine Stingray eligibility=%@ error=%@"
"**** DEBUG **** Fake nearly depleted records mode is ENABLED"
"CDPDStateMachine %p deallocated"
cdp: Handling Cloud Data Protection State
"State machine %@ is starting..."
"Successfully took device lock assertion or assertion already taken, proceeding with state machine"
"State machine %@ finished"
"Make sure device is unlocked before calling handleCloudDataProtectionStateWithCompletion:"
cdp: State Machine Run
"Starting preflight of account..."
"Preflight finished with shouldProceed=%i error=%@"
"Checking iCDP status..."
"Finished checking iCDP status with isEnabled=%i error=%@"
cdp: enrollment
"iCDP is enabled on HSA2 account, attempting to join circle..."
"Finished joining CDP circle with didJoin=%i circleStatus=%i needsBackupRecovery=%i hasPeersForRemoteApproval=%i error=%@"
"Failed to join circle and recovery is not needed, aborting (error as %@)"
"iCDP is enabled, but the account is not HSA2 enabled. Rolling back iCDP enrollment..."
"Failed to disable iCDP on non-HSA2 account. Disallowing sign-in: %@"
"Circle status is %d and backups are present... attempting to RECOVER backup"
"Account needs to be reset after lock-out expiration"
"Account reset successfully after lock-out expiration, joining (creating) circle"
"Successfully joined circle after lock-out expiration reset. Enabling secure backup..."
"Finished enabling secure backup after lock-out expiration with didEnable=%i error=%@..."
"Failed to join circle after lock-out expiration reset: %@"
"Failed to reset account after lock-out expiration: %@"
cdp: Handling circle join event
"Enabling secure backup..."
"Finished enabling secure backup with didEnable=%i error=%@..."
"Device is in circle but has no local secret or already has a secure backup enabled, skipping secure backup enable"
"Account preflight failed with error, aborting CDP state machine - %@"
cdp: Enabling iCDP
"Attempting to enable iCDP..."
"Finished enabling iCDP with didEnable=%i error=%@"
"Not eligible for iCDP - %@"
"Enabling iCDP has already been attempted, but checking the status reports iCDP is still not enabled. Aborting."
"iCDP is not enabled, but the account is not HSA2 enabled"
cdp: record recovery
"Finished recovering backup with didRecover=%i didRequestReset=%i error=%@"
"Hold on to your hats. User has requested a CDP reset."
"CDP reset succeeded, attempting to join/create the circle again"
"Joined circle after CDP reset. Enabling secure backup..."
"Finished enabling secure backup after CDP reset with didEnable=%i error=%@..."
"Joined circle after CDP reset. Skipping secure backup because we don't have a secret"
"Failed to join circle after CDP reset with circleStatus=%i needsBackupRecovery=%i hasPeersForRemoteApproval=%i error=%@"
"CDP reset failed, can not proceed: %@"
"**** DEBUG **** Fake that we must repair"
"Missing PET, starting to re-authenticate"
"Failed to refresh context: %@"
"non-HSA2 account detected, skipping validation"
"We are in circle and have secure backup with machine id, repair not needed"
"Local device does not have local secret and is already in circle, repair not needed"
"HSA2 account that is not in circle, suggesting repair needed"
"Starting silent authentication for repair"
"Failed to perform silent authentication for repair with error %@"
"UI provider failed to perform interactive authentication for repair with error %@"
"Refreshing with context"
cdp: Preflight
"Failed to synchronize KVS store with error %@"
"Failed to enable KVS with error %@"
"Account preflight failed - Primary account DSID (%@) does not match the DSID specified in the context (%@)"
"Account preflight failed - No primary account is present"
"Found primary account, isProvisionedForKVS=%i"
"Enabling KVS..."
"Finished enabling KVS with success=%i error=%@"
"KVS is already enabled!"
"KVS is not provisioned for account %@"
"Performing preflight to enable stingray"
"Invalid context, assuming no primary account available, letting the flow proceed"
"Failed to verify peer status before stingray check, proceeding with prompt"
"Client has requested to enable stingray (%@) with error: %@"
"Preflight failed, could not verify Stingray status with error. %@"
"Enabling iCDP on sign-in is disabled"
cdp: Backup Recovery
"Attempting to recover backup using the cached local secret..."
"Finished recovery attempt using the cached local secret with didRecover=%i didRequestReset=%i error=%@"
cdp: Prompting for local secret
"Proceeding with backup recovery attempt now that the local secret is known..."
"Finished backup recovery attempt with the user-provided local secret with didRecover=%i error=%@"
"Failed to get a local device secret from the UI provider with error %@"
"Prompting for local secret before recovering backup"
"Proceeding with backup recovery attempt without a local device secret"
"Finished backup recovery attempt without local secret with didRecover=%i error=%@"
"Failed to recover SecureBackup because no UI provider is present to request the local and/or remote device secrets"
cdp: Recovery with secret
"Attempting SILENT recovery with the local secret..."
"Silent recovery failed, attempting to recover by prompting for remote secret"
"Attempting to enable secure backup after successful SILENT recovery"
"Finished enabling secure backup after successful SILENT recovery with didEnable=%i error=%@"
"Local secret is not present, proceeding to recovery by prompting for remote secret"
cdp: Interactive Recovery
"Attempting to enable secure backup after successful INTERACTIVE recovery with multiple-ICSC already in use"
"Finished enabling secure backup after successful INTERACTIVE recovery with didEnable=%i error=%@"
"Skipping enable of SecureBackup after successful INTERACTIVE recovery due to no local secret being present"
"User cancelled remote device secret entry"
"User requested reset of their CDP state!"
"Error prompting user for remote device secret - %@"
"Attempting to enable secure backup using the cached secret"
"Finished enabling secure backup using the cached secret with didEnable=%i error=%@"
"Got a valid local secret, attempting to enable secure backup"
"User cancelled local device secret entry"
"Error prompting user for local device secret - %@"
"Asking the UI provider to prompt for the local device secret"
"Failed to enable SecureBackup because no UI provider is present to request the local device secret"
"Failed to delete all backup records with error %@"
"Disabling iCDP..."
"Disabled iCDP, proceeding with deleting all backup records"
"Deleted all backup records after rolling back from iCDP"
"Failed to delete all backup records after rolling back from iCDP: %@"
"Failed to disable iCDP at PCS level: %@"
"Invalid configuration request detected"
"Attempting to fetch configuration using request: %@"
"Configuration Response: %@"
"Server Indicated that a retry attempt is needed"
"Failed to load configuraiton: %@"
"Configuration Fetched: %@"
"Older, non-view-aware peers are present therefore user visible keychain is implicitly enabled despite the state of views"
"The device is NOT in circle and so isUserVisibleKeychainSyncEnabled will return NO"
"CDP State repair is needed because the account is iCDP enabled but HSA2 silent auth failed with error %@"
cdp: Keychain setting preflight
"CDP State repair is needed because the account is iCDP enabled but not in circle"
cdp: Updating keychain views
"Calling SOSCCViewSet with enable=%@ disable=%@ returned success=%i"
cdp: Synchronize Views with Peers
"Failed to synchronize keychain view state with error: %@"
@(#)PROGRAM:CoreCDPInternal  PROJECT:CoreCDP-1
