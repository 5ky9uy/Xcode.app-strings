initWithHTTPResponse:data:
statusCode
setError:
responseDictionary
httpResponse
objectForKeyedSubscript:
integerValue
version
status
message
errorCode
alloc
initWithBase64EncodedString:options:
cert
dsid
clubID
_clubID
bypassToken
srpData
propertyListWithData:options:format:error:
recoveryData
metadata
smsVerificationCodeLength
countByEnumeratingWithState:objects:count:
setObject:forKeyedSubscript:
numberWithLong:
addObject:
accountInfo
smsTargetsInfo
countrySMSCodes
length
enumerateByteRangesUsingBlock:
initWithBytesNoCopy:length:encoding:freeWhenDone:
initWithBytesNoCopy:length:freeWhenDone:
hexString
sha1Digest
fileSystemRepresentation
init
URLByAppendingPathComponent:
URLByAppendingPathExtension:
class
openDBWithURL:truncate:
stringWithUTF8String:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
bytes
UTF8String
appendBytes:length:
initWithBytes:length:
initWithUTF8String:
setDb:
initWithURL:
addItem:withKey:forClass:error:
removeItemWithKey:error:
enumerateKeysAndItemsUsingBlock:
resetDBWithKeybag:
closeDB
sqliteExec:
keybag
recordID
keybagDigest
manifestHash
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
.cxx_destruct
_url
defaultStore
stringForKey:
kvsUUID
defaultManager
URLForDirectory:inDomain:appropriateForURL:create:error:
URLByAppendingPathComponent:isDirectory:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
URLForViewName:
migrateView:
count
viewName
dictionaryForKey:
addItem:error:
lastPathComponent
initWithContentsOfURL:
resetWithKeybag:error:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
pathExtension
isEqualToString:
stringByDeletingPathExtension
migrateBTree:keyClass:
migrateFromKVS
initWithViewName:
backupDict
backupData
closeStore
_viewName
initWithData:encoding:
allHeaderFields
initWithFormat:
dictionary
bundleForClass:
localizedStringForKey:value:table:
setObject:forKey:
code
initWithHTTPResponse:data:bodyIsPlist:
_parsePlistResponse:data:
objectForKey:
error
protocolVersion
_responseDictionary
_httpResponse
_error
numberWithBool:
isEqualToNumber:
stingray
validateInput
appleID
iCloudPassword
authToken
errorWithCode:error:format:
baseURL
recordLabel
command
stringWithFormat:
dataUsingEncoding:
base64EncodedStringWithOptions:
useRecoveryPET
authorizationHeaderWithUser:password:authType:
urlRequest
bodyDictionary
dataWithPropertyList:format:options:error:
setHTTPBody:
localizedDescription
setHTTPMethod:
lowercaseString
stringByAppendingFormat:
recoveryPassphrase
escrowRecord
initWithInfo:
iCloudEnv
authorizationHeader
urlString
metadataHash
protocol
countryDialCode
countryCode
phoneNumber
challengeCode
iCDP
silentAttempt
blob
setBlob:
baseRootCertVersions
setBaseRootCertVersions:
trustedRootCertVersions
setTrustedRootCertVersions:
setBypassToken:
_stingray
_iCDP
_silentAttempt
_useRecoveryPET
_recoveryPassphrase
_iCloudEnv
_dsid
_authToken
_baseURL
_escrowRecord
_metadata
_metadataHash
_protocol
_command
_countryDialCode
_countryCode
_phoneNumber
_challengeCode
_appleID
_iCloudPassword
_recordID
_recordLabel
_blob
_baseRootCertVersions
_trustedRootCertVersions
_bypassToken
stringByAppendingString:
responseClass
initWithLocaleIdentifier:
setLocale:
timeZoneForSecondsFromGMT:
setTimeZone:
setDateFormat:
posixDateFormatter
legacyDateFormatter
dateFromString:
secureBackupDate
setTimeStyle:
setDateStyle:
localTimeZone
stringFromDate:
localString
udid
osVersion
osName
buildVersion
frameworkIdentifier
frameworkVersion
productType
productVersion
systemInfoDictionary
bundleURL
initWithContentsOfFile:
frameworkInfoDictionary
clientInfoHeader
userAgentHeader
serialNumber
wifiMacAddress
systemDictionary
frameworkDictionary
dataWithBytes:length:
dataWithLength:
label
cStringUsingEncoding:
mutableBytes
date
errorWithDomain:code:format:
numberWithInt:
initWithRequest:
setRecoveryBlob:
srpInitBlob
srpResponseForEscrowBlob:withKey:
srpRecoveryBlobFromData:
recoveryResponseForBlob:
decodedEscrowRecordFromData:
initWithBytes:length:encoding:
setEscrowDate:
setDecodedLabel:
recoveryBlob
setEscrowBlob:
escrowBlob
dealloc
encodedEscrowRecordWithPublicKey:error:
decodedLabel
escrowDate
ccses
_decodedLabel
_escrowDate
_recoveryBlob
_label
_escrowBlob
mutableCopy
initWithFormat:arguments:
aa_primaryAppleAccount
aa_personID
longLongValue
credentialForAccount:error:
token
propertiesForDataclass:
dataclassProperties
domain
userInfo
codeForNSError:
codeForErrno:
removeObjectForKey:
dictionaryWithObjectsAndKeys:
errorWithCode:URL:format:
localizedStringForStatusCode:
sanitizedError:
errorWithCode:format:
errorWithCode:error:URL:format:
errorForNSError:path:format:
errorForHTTPURLResponse:error:
setDictionary:forKey:
synchronize
enumerateKeysAndObjectsUsingBlock:
cachedKeychainURL
removeItemAtURL:error:
_getProtectedKeychainAndKeybagDigestFromKVS:
_storeProtectedKeychainInKVS:keybagDigest:
_storeVeeTwoBackupInKVS:
_removeCachedKeychain
dictionaryRepresentation
hasPrefix:
substringFromIndex:
boolForKey:
setBool:forKey:
setString:forKey:
dataForKey:
setData:forKey:
additionalStoreWithIdentifier:
UUID
UUIDString
compare:
hasSuffix:
_getKeychainItemForKey:status:
verifyCertificateWithInfo:completionBlock:
_backupFullKeychain
_pushCachedKeychainToKVS
setNeedInitialBackup:
_backupKeychainFully:
_backupEnabled
_setAutobackupEnabled:
_usesEscrow
_checkEscrowTrust
_consumeFullBackup
_consumeBackupJournal
_removeKeychainItemForKey:
_removeKVSKeybag
_removeMetadata
_removeProtectedKeychain
_setBackupEnabled:iCDP:
_removeVeeTwoBackup
decimalDigitCharacterSet
invertedSet
rangeOfCharacterFromSet:options:
characterAtIndex:
stringWithCharacters:length:
_createBackupKeybagWithPassword:
_saveKeychainItem:forKey:
derDataFromDict:
storeDERBackupInKVS:
_getICDPBackupFromKVSForView:
_getVeeTwoBackupFromKVS
_getDERBackupFromKVS
_getLastBackupTimestamp
_iCDPBackupEnabled
_setUsesEscrow:
_removeUsesEscrow
_setMetadata:
_setBackupUUID:
_getBackupUUID
_setKVSKeybag:
_KVSKeybag
_setEMCSBackup:keybag:
_EMCSBackup
_EMCSBackupDictForKeybagDigest:
garbageCollectEMCSBackupsExcluding:
_backupKeychain
_disableBackup
disableiCDPBackup
normalizeSMSTarget:error:
setCacheDirURL:
defaultCenter
addObserverForName:object:queue:usingBlock:
_stateCapture
cacheDirURL
_xpcConnection
valueForEntitlement:
processIdentifier
getAccountInfoWithInfo:reply:
enableWithInfo:reply:
recoverWithInfo:reply:
stashRecoveryDataWithInfo:reply:
disableWithInfo:reply:
updateMetadataWithInfo:reply:
cachePassphraseWithInfo:reply:
uncachePassphraseWithInfo:reply:
changeSMSTargetWithInfo:reply:
startSMSChallengeWithInfo:reply:
getCountrySMSCodesWithInfo:reply:
backupWithInfo:reply:
backOffDateWithInfo:reply:
setBackOffDateWithInfo:reply:
cachePassphraseWithInfoAsync:
uncachePassphraseWithInfoAsync:
notificationOccurred:
interfaceWithProtocol:
setExportedInterface:
setExportedObject:
connectionQueue
_setQueue:
resume
needInitialBackup
_handleKVStoreChangedNotification:
boolValue
intValue
containsObject:
allObjects
dictionaryWithDictionary:
getAccountInfoWithInfo:completionBlock:
massageIncomingMetadataFromInfo:
filteriCDPRecords:
listSMSTargetsWithInfo:completionBlock:
objectAtIndexedSubscript:
forceICDP
name
reason
_getAccountInfoWithInfo:reply:
synchronizeWithCompletionHandler:
KVSError
setKVSError:
massageOutgoingMetadataFromInfo:
cachedPassphrase
initWithDomain:code:userInfo:
initWithCapacity:
storeRecordWithInfo:completionBlock:
timeIntervalSinceNow
deleteRecordWithInfo:completionBlock:
garbageCollectEscrowRecords:
backupWithInfo:garbageCollect:reply:
restoreBackup:withName:recordID:keybag:password:
distantPast
cachedRecordID
unsignedIntegerValue
restoreEMCSBackup:keybag:password:
setCachedRecordIDPassphrase:
setCachedRecordID:
recoverRecordWithInfo:completionBlock:
recordIDForSilentAttempt:passphraseLength:
cachedRecordIDPassphrase
substringToIndex:
uncacheRecordIDPassphrase
_restoreKeychainWithBackupBag:password:recordID:
deleteAlliCDPRecordsWithInfo:reply:
timeIntervalSinceReferenceDate
updateRecordMetadataWithInfo:completionBlock:
stringByAppendingPathComponent:
storeCachedPassphrase:
setCachedPassphraseFD:
setCachedRecordIDPassphraseFD:
initWithLength:
cachedPassphraseFD
cachedPassphraseForFD:
cachedRecordIDPassphraseFD
setCachedPassphrase:
startSMSChallengeWithInfo:completionBlock:
getCountrySMSCodesWithInfo:completionBlock:
changeSMSTargetWithInfo:completionBlock:
listener:shouldAcceptNewConnection:
cachedManifestURL
backupAllowed
setBackupAllowed:
restoreEMCSBackup:withPassword:
iCDPKeybag
_needInitialBackup
_cachedPassphraseFD
_cachedRecordIDPassphraseFD
_cacheDirURL
_iCDPKeybag
_KVSError
_connectionQueue
_cachedRecordID
allKeys
setWithArray:
isEqualToSet:
copy
URLWithString:
ak_addDeviceUDIDHeader
currentRequest
originalRequest
setURL:
protectionSpace
authenticationMethod
serverTrust
host
delegate
setPinningFailure:
ephemeralSessionConfiguration
set_appleIDContext:
setTimeoutIntervalForResource:
setHTTPAdditionalHeaders:
sessionConfig
sessionWithConfiguration:delegate:delegateQueue:
allHTTPHeaderFields
HTTPAdditionalHeaders
dataTaskWithRequest:completionHandler:
finishTasksAndInvalidate
pinningFailure
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
credential
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
performRequestWithHandler:
setUrlString:
_pinningFailure
_responseClass
_urlString
initWithString:
scanUnsignedLongLong:
numberWithUnsignedLongLong:
_certVersion:
numberWithUnsignedLong:
_rootTrustedVersionsForRootType:inEnvironment:
unsignedLongLongValue
_saveBypassToken:
_removeBypassToken
_getBypassToken
_certPublicKeySHA1Digest:
_rootBaseVersionsForRootType:inEnvironment:
_rootCurrentVersionForRootType:inEnvironment:
updateRecordWithInfo:completionBlock:
initFileURLWithPath:isDirectory:
arrayWithObjects:count:
enableTransactions
serviceListener
setDelegate:
Error returned from iCloud: %@
HTTP Error: %@
got bad dict from iCloud: %@
iCloud gave us junk for metadata: %@
opening %@ failed: %s
table create for %@ failed: %s
opening %@
sqlite3_prepare(insert) for %@ failed: %s
sqlite3_bind_text for %@ failed: %s
sqlite3_bind_blob64 for %@ failed: %s
sqlite3_step for %@ failed: %s
sqlite3_finalize for %@ failed: %s
sqlite3_prepare(delete) for %@ failed: %s
sqlite3_changes for remove %@ in %@ != 1
sqlite3_prepare_v2(%s) for %@ failed: %s
%s: %@
%@ on %@ failed: %s
table drop for %@ failed: %s
create table for %@ failed: %s
vacuum for %@ failed: %s
closing %@
sqlite3_close for %@ failed: %d
could not create %@: %@
creating db for view %@
no keybag digest found, migrating view %@
unexpected item type for kSecBackupEventAdd: %@
unexpected item type for kSecBackupEventRemove: %@
CFPropertyListCreateDERData failed: %@
unexpected item type for resetWithKeybag: %@
reset manifest for view %@
%s: SOSBackupSliceKeyBagCreateFromData() failed: %@
bkey for peer %@ = %@, digest = %@
failed to add item %@
migrating %@
migrating %@ failed, resetting local backup db to empty
could not reset store with keybag: %@
unexpected key size: %zd, corrupt btree at %@
duplicate key, corrupt btree at %@
failed to add item: %@
seq failed: %s
migrated %lu item%s in class %@
not a btree file 
could not open %@: %s 
SOSCCCopyMyPeerInfo() failed: %@
unexpected response from escrow proxy: URL: %@, headers: %@, data: %@
Password is bad.
Forbidden.
Forbidden. (409)
Method not allowed.
Scheduled maintenance.
Not found.
Other error: %lu
No user signed in: %@ %@
Missing base URL
Missing label
Missing required parameters AppleID: %@
%@iCloud password:
Missing required parameters passphrase: %@
data: %@
sms target: %@
Missing parameters
invalid request: %@
srp recovery blob too large: %zd bytes
error serializing escrow data: %@
Escrow data too long: %lu
Could not create keys: %@
SecKeyCopyPublicKey() failed
Escrow error encrypting data
Local SRP verify failed
Error decoding master key
Error deserializing data: %@
SecKey_cylon_process_blob failed
Server Start Fails
ccses_unpack_clubh_recover_req_pkt Fails
ccsrp_server_verify_session failed
clubh_srp_init_resp_t pkt too small: len=%lu
clubh_srp_init_resp_check_hdr failed=%d
clubh_srp_init_resp_t sect %d is malformed
clubh_recover_resp_t pkt too small: len=%lu
clubh_recovery_rec_t pkt too small: len=%lu
clubh_recovery_rec_check_hdr failed=%d
clubh_recovery_rec_t sect %d is malformed
clubh_key_escrow_data_t pkt too small: len=%u
clubh_key_escrow_data_check_hdr failed=%d
clubh_key_escrow_data_t sect %d is malformed
clubh_recover_req_pkt_t too small: %lu
clubh_recover_req_pkt_check_hdr failed=%d
clubh_recover_req_pkt_t sect %d is malformed
getting dsid
got dsid: %lld
getting auth token
got auth token
Error accessing auth token: %@
getting escrowURL
got escrowURL
getting iCloud env
got iCloud env
No code for POSIX error: %s (%d)
SecItemAdd() returned %ld
SecItemDelete() returned %ld
SecItemCopyMatching() returned %ld
Storing keychain in KVS @%@
NSUbiquitousKeyValueStore synchronize failed
backing up view %@ in KVS
error removing keychain: %@
error creating DER from plist: %@
Storing DER keychain in KVS @%@
backing up peer ID %@
using backup key: %@
Couldn't back up view %@: backup is%s nil, keybag is%s nil
skipping empty backup for view %@
getting registered backup names failed: %@
Removing backup record from @%@
Retrieving keychain from @%@
Retrieving backup for view %@ from @%@
Removing view-based backup from @%@
Changing backup status %u->%u
Changing escrow usage %u->%u
Changing metadata old: %@
new: %@
Removing metadata: %@
Overwriting keybag in KVS! Old digest: %@
Saving keybag in KVS digest: %@
Saving EMCS backup
looking for non-tagged EMCS backup
looking for old-style EMCS backup
Found non-tagged EMCS backup with more recent timestamp
garbage collecting backup %@
Removing keybag from KVS digest: %@
Can't get escrow cert from keychain
Escrow cert is newer than trust policy; ignoring for now.
Escrow no longer trusted: %d
consuming full backup
consuming backup for view %@
calling SecItemBackupWithChanges()
got backup manifest event: %s (ok=%d)
SecKeychainBackupWithChanges: unexpected event: %d
SecItemBackupWithChanges() returned %s
SecKeychainBackupWithChanges: no journal file, skipping %@
SecKeychainBackupWithChanges for view %@ failed: %@
Handling events for view %@ failed: %@
SecItemBackupSetConfirmedManifest for view %@ failed: %@
SecItemBackupWithRegisteredBackups() returned %s
SecItemBackupWithRegisteredBackups failed: %@
got backup manifest event: %s
forcing KVS push
attempt to enable backup with non-decimal digits in SMS target: %@
got KVS change %@
capturing KVS state
captured %zd bytes of KVS data
calloc() failed?
could not get KVS dictionary representation
no uuid, could not create cache file URL
no uuid, could not create manifest file URL
sbd listener begin from pid %d (%@)
connection attempt from pid %d missing entitlement: %@
got notification: %@
Backing up EMCS in response to keychain changed
Backup returned %@
Performing initial backup
ignoring circle changed notification
handling notification %@
NSUbiquitousKeyValueStore failed
KVS store changed notification %@
no keybag found in iCloudIdentity backup: %@
%s: SOSBackupSliceKeyBagCreateFromData() failed: %@, skipping
Looking for keybag peer with backup key digest %@ for record ID %@
record id %@ cannot recover iCloudIdentity backup!
calling getAccountInfoWithInfo: in daemon
getAccountInfoWithInfo: in daemon came back
escrowService getAccountInfoWithInfo: returned %@
getAccountInfoWithInfo: error: %ld
got %lu records
found a kEscrowServiceStingrayLabel
found a kEscrowServiceLabel
found an iCDP label
could not create peer info from data: %@
unexpected label: %@
backup not enabled
backup enabled
account uses escrow
calling listSMSTargets: in daemon
listSMSTargets: came back
escrowService listSMSTargetsWithInfo: returned %@
listSMSTargets: error: %ld
account does not use escrow
%s caught exception: %@
calling synchronizeWithCompletionHandler
got error back from synchronizeWithCompletionHandler: %@
on connection queue, calling _getAccountInfoWithInfo
Unknown passphrase type: %d
Backup already enabled
attempted to store stingray identities, with invalid parameters: %@, %@nil iCloud password, %@nil iCloud identity data
FORCING ICDP + MULTIPLE ICSC
Missing cached passphrase
attempted to enable backup, with invalid parameters: %@nil recovery password, %@, %@, %@nil iCloud password
SecPasswordGenerate() failed: %@
could not create backup bag password
could not create backup keybag
SOSCCCopyMyPeerWithNewDeviceRecoverySecret() failed: %@
SOSPeerInfoGetPeerID() failed
SOSCCCopyMyPeerWithNewDeviceRecoverySecret() called got peer ID: %@, backup key: %@, digest: %@
SOSCCCopyMyPeerWithNewDeviceRecoverySecret() returned no backup public key for peer: %@
SOSPeerInfoCopyEncodedData failed: %@
SOSCCRegisterSingleRecoverySecret() failed: %@
escrowService storeRecordWithInfo: returned: %@
found record %@ from %@
garbage collecting escrow record with ID %@, from %@
deleting escrow record failed: %@
failed creating backup semaphore: %s
SOSBSKBCopyEncoded() failed: %@
SOSBackupSliceKeyBagCreateDirect() failed: %@
SOSBackupSliceKeyBagCreateFromData() failed: %@
backup keybag contains %@
skipping %@
SecItemBackupRestore for view %@ failed: %@
restoring view-based backup for recordID %@
skipping KeychainV0-tomb in view-based backups
restoring backup view %@
Can't restore legacy backup with no keybag
Can't find protected keychain; nothing to restore
restoring legacy backup
looking for record for silent attempt of passphrase length %lu
found preferred record: %@ from %@
checking escrow record: %@ from %@
found clean record with passlen: %lu
%@ newer than %@
escrow passphrase length (%lu) longer than silent attempt passphrase (%lu), skipping
escrow record not same platform, skipping
found silent attempt record with id %@
found backup from %@, keybag digest %@, metadataDigest %@, uuid %@
Found matching backup from this device, skipping keychain restore
Backup does not match this device's last backup uuid (%@)
escrowService iDMS recoverRecordWithInfo: returned: %@
=== Escrow record ===
Time of escrow: %@
Escrow version: %@
backup data version does not match version in escrow
caching recordID %@
escrowService stingray recoverRecordWithInfo: returned: %@
=== Escrow record ===
Time of escrow: %@
Escrow version: %@
Keybag digest: %@
attempted to recover with empty passphrase
silent attempt failed: no valid record found
escrowService recoverRecordWithInfo: returned: %@
silent attempt succeeded for record ID %@
backup keybag digest does not match version in escrow: %@
In %s
escrowService deleteRecordWithInfo: returned: %@
missing parameter: %s metadataHash, %s backOffDate
encodedMetadata not base64
metadata could not be decoded: %@
missing kSecureBackupClientMetadataKey
update metadata only supported for stingray records
attempted to update stingray metadata, with invalid parameters: %@, %@ metadata hash
updateRecordMetadataWithInfo: returned: %@
attempt to set empty passphrase
error opening temp file: %s
error unlinking temp file: %s
error serializing data: %@
error truncating temp file: %s
error writing temp file: %s
writing temp file count = %ld, expected = %lu
saving uuid %@
error closing temp file: %s
fstat(%d) failed: %s
error reading temp file: %s
reading temp file count = %ld, expected = %zd
error deserializing temp file: %@
fetched uuid %@
uncaching recordID %@
escrowService startSMSChallengeWithInfo: returned: %@
escrowService getCountrySMSCodesWithInfo: returned: %@
attempted to change SMS target, but backup is not enabled
attempted to change SMS target, but not using escrow
attempted to change SMS target, with invalid parameters: %@, %@, %@nil iCloud password
escrowService changeSMSTargetWithInfo: returned: %@
tracing %@ %@ %lld
redirect: current URL = %@, original URL = %@, new URL = %@, response headers = %@
in %s
authenticationMethod = %@
trying SecPolicyCreateAppleEscrowProxyService
trying SecPolicyCreateAppleCompatibilityEscrowProxyService
url session: %@
request: %@
headers: %@
extra headers: %@
body: %@
escrow proxy request returned
starting escrow proxy request
request came back with UUID %@
response dict: %@
%s: returned error: %@
NULL escrow proxy policy
SecTrustSetPolicies failed: %d
SecTrustEvaluate() failed: %d
SecTrustEvaluate() passed
SecTrustEvaluate() failed, trustResult %u: %@, properties: %@
SecItemAdd() for bypass token returned %ld
SecItemDelete() for bypass token returned %ld
SecItemCopyMatching() for bypass token returned %ld
in getAccountInfoWithInfo:
calling iCloud accountInfoRequest
Error getting account info: %@ Status: %ld %@
Account Info: %@
Can't get iCloud environment
empty base version array for root type %u in %@ environment
empty cert version array for root type %u in %@ environment
Platform trust versions: %@
Requesting cert for versions: %@
Error getting cert: %@
Certificate encoding error: %@
Error extracting public key from cert: %@
enrollRequest dsid != %@, certResponse.dsid = %@
Error sending enrollment: %@
Error enrolling version: %ld status: %ld (%@)
Missing bypass token (might not be hooked up in iCloud yet)
Missing certificate data
Current Trust Version: %@; Current Cert Version: %@
Cert is newer than trust policy
Cert does not match our trust policy: %@
cert URL = %@
Unable to create SecCertificateRef from response data: %@
Error copying escrow trust policy
SecTrustCreateWithCertificates failed: %ld
Error copying root cert array
SecTrustEvaluate() trust result = %u
SecTrustEvaluate failed: %ld
SecTrustCopyProperties() = %@
SecTrustEvaluate result: %lu
Error extracting public key from certificate
running as uid %d, gid %d
resuming listener
version
status
message
errorCode
Tq,R,N
T@"NSString",R,N
clubCert
dsid
clubID
Tq,R,N,V_clubID
cert
T@"NSData",R,N
phoneNumberToken
bypassToken
respBlob
srpData
recoveryData
metadata
T@"NSDictionary",R,N
smsChallengeLength
smsVerificationCodeLength
T@"NSNumber",R,N
metadataList
label
recordStatus
encodedMetadata
silentAttemptAllowed
SecureBackupRemainingAttempts
remainingAttempts
coolOffEnd
SecureBackupCoolOffEnd
recoveryStatus
SecureBackupRecoveryStatus
triggerUpdate
SecureBackupTriggerUpdate
accountInfo
T@"NSArray",R,N
smsTargetsInfo
countrySMSCodes
EscrowServicePassphrase
EscrowServiceNewPassphrase
EscrowServiceEscrowData
date
com.apple.protectedcloudstorage.record
com.apple.icdp.record
EscrowServiceCertificate
metadataHash
recordID
silentAttempt
valid
invalid
EscrowServiceAuthenticationAppleID
EscrowServiceAuthenticationPassword
EscrowServiceAuthenticationAuthToken
EscrowServiceAuthenticationEscrowProxyURL
EscrowServiceAuthenticationiCloudEnvironment
EscrowServiceAuthenticationDSID
EscrowServiceSMSChallengeCode
EscrowServiceAccountInfo
EscrowServiceSMSTargetInfo
EscrowServiceCountrySMSCodes
isHSAEnabled
recoveryRequiresChallengeCode
recoveryChallengeCodeLength
challengeDevices
countryDialCode
countryCode
phoneNumber
EscrowOperationStatus
EscrowOperationSucceeded
EscrowServiceUseRecoveryPET
com.apple.sbd
0123456789ABCDEF
v40@?0r^v8{_NSRange=QQ}16^B32
backup
sqlite3
INSERT OR IGNORE INTO items (hash, class, data) VALUES (?, ?, ?);
DELETE FROM items where hash = ?;
SELECT hash from items ORDER BY hash;
SELECT digest from keybag;
SELECT recordID from keybag;
SELECT data from keybag;
SELECT hash, class, data from items;
-[SecureBackupSQLite sqliteExec:]
DROP TABLE items; DROP TABLE keybag;
INSERT INTO keybag (digest, recordID, data) VALUES (?, ?, ?);
VACUUM;
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
T@"NSData",R
keybagDigest
manifestHash
T^{sqlite3=},V_db
T@"NSURL",R,V_url
Unexpected item type for kSecBackupEventAdd
data
hash
class
Unexpected item type for kSecBackupEventRemove
v32@?0@"NSData"8@"NSString"16@"NSData"24
Unexpected item type for resetWithKeybag
-[SecureBackupViewStore resetWithKeybag:error:]
com.apple.securebackup.record
com.apple.securebackup.keychain
BEGIN TRANSACTION;
keybag.plist
keybag
SAVEPOINT migrate_start;
manifest
KeychainV0-tomb
ROLLBACK TO migrate_start;
COMMIT TRANSACTION;
viewName
T@"NSString",R,C,V_viewName
T@"NSURL",R,C,V_url
T@"<SecureBackupDB>",R,V_db
backupData
backupDict
T@"NSDictionary",R
T@"NSString",R
pragma journal_mode = WAL;CREATE TABLE IF NOT EXISTS items(hash BLOB PRIMARY KEY NOT NULL,class TEXT NOT NULL, data BLOB NOT NULL );CREATE TABLE IF NOT EXISTS keybag(digest BLOB PRIMARY KEY NOT NULL,recordID TEXT NOT NULL,data BLOB NOT NULL,timestamp DATETIME DEFAULT CURRENT_TIMESTAMP);
unknown
protocolVersion
responseDictionary
localizedError
INVALID_PASSWORD
unexpected response from escrow proxy: URL: %@, headers: %@, data: %@
COMMUNICATIONS_ERROR
Localizable
com.apple.lakitu
SCHEDULED_MAINTENENCE
T@"NSDictionary",R,N,V_responseDictionary
error
T@"NSError",&,N,V_error
httpResponse
T@"NSHTTPURLResponse",R,N,V_httpResponse
clubh_key_escrow_data_t pkt too small: len=%u
clubh_key_escrow_data_check_hdr failed=%d
clubh_key_escrow_data_t sect %d is malformed
SecureBackupPassphrase
countryISOCode
SecureBackupSMSTarget
SecureBackupSynchronize
SecureBackupCountrySMSCodes
SecureBackupVerifcationToken
SecureBackupUseCachedPassphrase
SecureBackupMetadata
ClientMetadata
SecureBackupStingrayMetadataHash
SecureBackupStingrayMetadata
SecureBackupEscrowTimestamp
SecureBackupEscrowDate
SecureBackupEscrowDigest
SecureBackupAuthenticationAppleID
SecureBackupAuthenticationPassword
SecureBackupAuthenticationAuthToken
SecureBackupAuthenticationEscrowProxyURL
SecureBackupAuthenticationDSID
SecureBackupAuthenticationiCloudEnvironment
SecureBackupUsesRandomPassphrase
SecureBackupUsesComplexPassphrase
SecureBackupUsesNumericPassphrase
SecureBackupNumericPassphraseLength
SecureBackupEnabled
SecureBackupAccountIsHighSecurity
SecureBackupRecoveryRequiresVerificationToken
SecureBackupRecoveryVerificationTokenLength
SecureBackupLastBackupTimestamp
SecureBackupLastBackupDate
SecureBackupEscrowTrustStatus
peerInfo
peerInfoSerialNumber
SecureBackupiCDPRecords
SecureBackupAlliCDPRecords
SecureBackupErrorDomain
SecureBackupiCloudIdentityData
SecureBackupIDMSData
SecureBackupIDMSRecovery
SecureBackupContainsiCloudIdentity
SecureBackupUsesMultipleiCSCs
SecureBackupSilentRecoveryAttempt
SecureBackupContainsiCDPData
SecureBackupiCloudDataProtectionEnabled
SecureBackupiCloudDataProtectionDeleteAllRecords
SecureBackupBackOffDate
No valid user found
Missing base URL
Missing label
command
%@:%@
%@ %@
Basic
X-MobileMe-Recovery-PET
X-MobileMe-AuthToken
POST
/escrowproxy/api/%@
recordLabel
recoveryPassphrase
escrowRecord
T@"NSDictionary",R,V_escrowRecord
T@"NSDictionary",R,V_metadata
T@"NSString",R,C,V_metadataHash
protocol
T@"NSNumber",R,V_protocol
T@"NSString",R,C,V_command
T@"NSString",R,C,V_countryDialCode
T@"NSString",R,C,V_countryCode
T@"NSString",R,C,V_phoneNumber
challengeCode
T@"NSString",R,C,V_challengeCode
appleID
T@"NSString",R,C,V_appleID
iCloudPassword
T@"NSString",R,C,V_iCloudPassword
T@"NSString",R,C,V_dsid
authToken
T@"NSString",R,C,V_authToken
T@"NSString",R,C,V_recordID
baseURL
T@"NSString",R,C,V_baseURL
iCloudEnv
T@"NSString",R,C,V_iCloudEnv
T@"NSString",R,C,V_recordLabel
T@"NSString",R,C,V_recoveryPassphrase
stingray
TB,R,V_stingray
iCDP
TB,R,V_iCDP
TB,R,V_silentAttempt
useRecoveryPET
TB,R,V_useRecoveryPET
blob
T@"NSData",&,V_blob
baseRootCertVersions
T@"NSArray",&,V_baseRootCertVersions
trustedRootCertVersions
T@"NSArray",&,V_trustedRootCertVersions
T@"NSString",C,V_bypassToken
Missing required parameters
/escrowproxy/api/get_club_cert
GETCLUB
ENROLL
%@.%@
blobDigest
SRP_INIT
smsChallengeCode
RECOVER
DELETE
UPDATE_RECORD
oldMetadata
newMetadata
/escrowproxy/api/update_blob
GENERATE_SMS_CHALLENGE
/escrowproxy/api/get_records
GETRECORDS
ALTER_SMS_TARGET
Missing parameters
GET_SMS_TARGETS
GET_COUNTRY_SMS_CODES
dd-MM-yyyy HH:mm:ss
yyyy-MM-dd HH:mm:ss
en_US_POSIX
%@;%@;%@
UNKNOWN
%@/%@
<%@> <%@> <%@>
CloudServices/%@ (%@ %@ (%@))
Simulator
Support
%@/System/Library/CoreServices/SystemVersion.plist
CFBundleVersion
%s.%@
EscrowServiceErrorDomain
Escrow data too long
Could not create keys
SecKeyCopyPublicKey() failed
Escrow error encrypting data
Local SRP verify failed
T@"NSString",R,C,V_label
T@"NSDictionary",R,&,V_escrowRecord
decodedLabel
T@"NSString",C,V_decodedLabel
escrowDate
T@"NSDate",C,V_escrowDate
escrowBlob
T@"NSData",&,V_escrowBlob
recoveryBlob
T@"NSData",&,V_recoveryBlob
escrowProxyUrl
Account Moved
Unexpected HTTP status code: %d
Unauthorized
Not Found
Conflict
Locked
Failed Dependency
Client error: %d %@
Retry-After
Service Unavailable
Insufficient Storage
Server error: %d %@
HTTP connection error
CloudServicesErrorDomain
CloudServicesRetryAfter
operation
exception_code
com.apple.ReportCrash.SimulateCrash
v16@?0@"NSObject<OS_xpc_object>"8
result
/AppleInternal
v8@?0
com.apple.security.keychainchanged
com.apple.securebackupd.access
com.apple.security.itembackup
com.apple.sbd.kvstorechange
com.apple.securebackup.enabled
com.apple.icdpbackup.enabled
com.apple.icdp.backup
DERBackup
com.apple.securebackup.timestamp
SecureBackupService
SecureBackupPublicKeybag
SecureBackupEscrowCert
BackupKeybag
BackupKeybagDigest
BackupBagPassword
BackupVersion
BackupUUID
EMCSBackup
EMCSBackupDict
com.apple.sbd.emcs
BackupUsesEscrow
com.apple.cloudkeychain
com.apple.icdp
secureEscrowServiceCnt
disabledKeychainRecoveryCnt
attemptRecoverEscrowPasswdCnt
keychainBackedUpCnt
SecureBackupMetadataTimestamp
escrowPassphraseType
v32@?0@8@16^B24
v32@?0@"NSString"8@"NSDictionary"16^B24
 not
v16@?0^{__CFString=}8
v32@?0@"NSString"8@16^B24
timestamp
uuid
%@-%@
v24@?0@"NSDictionary"8@"NSError"16
com.apple.EscrowSecurityAlert.server
v28@?0i8^v12^v20
true
false
com.apple.sbd.connectionQueue
v16@?0@"NSNotification"8
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
sbd KVS data
plist
application-identifier
v16@?0@"NSError"8
com.apple.EscrowSecurityAlert.reset
iCloudIdentity-tomb
no keybag found in iCloudIdentity backup:
-[SecureBackupDaemon filteriCDPRecords:]
-[SecureBackupDaemon _getAccountInfoWithInfo:reply:]
kPCSMetadataiCDP
-[SecureBackupDaemon stashRecoveryDataWithInfo:reply:]
-[SecureBackupDaemon enableWithInfo:reply:]
SOSCCCopyMyPeerWithNewDeviceRecoverySecret() returned no backup public key for peer
-[SecureBackupDaemon backupWithInfo:garbageCollect:reply:]
no peers
v16@?0^{__CFError=}8
device_platform
_SecKeychainRestoreBackup() returned %ld
before we saved timestamps
attempted restore with backup = %snil, keybag = %snil
non-
-[SecureBackupDaemon recoverWithInfo:reply:]
-[SecureBackupDaemon deleteAlliCDPRecordsWithInfo:reply:]
-[SecureBackupDaemon backOffDateWithInfo:reply:]
-[SecureBackupDaemon setBackOffDateWithInfo:reply:]
have
missing
-[SecureBackupDaemon disableWithInfo:reply:]
-[SecureBackupDaemon updateMetadataWithInfo:reply:]
-[SecureBackupDaemon cachePassphraseWithInfo:reply:]
-[SecureBackupDaemon uncachePassphraseWithInfo:reply:]
-[SecureBackupDaemon startSMSChallengeWithInfo:reply:]
-[SecureBackupDaemon getCountrySMSCodesWithInfo:reply:]
-[SecureBackupDaemon changeSMSTargetWithInfo:reply:]
cacheDirURL
T@"NSURL",&,V_cacheDirURL
cachedKeychainURL
T@"NSURL",R,&
cachedManifestURL
iCDPKeybag
T@"NSData",R,V_iCDPKeybag
KVSError
T@"NSError",&,V_KVSError
forceICDP
TB,R
connectionQueue
T@"NSObject<OS_dispatch_queue>",R,&,V_connectionQueue
needInitialBackup
TB,V_needInitialBackup
cachedPassphrase
T@"NSString",C,N
cachedRecordIDPassphrase
cachedRecordID
T@"NSString",C,N,V_cachedRecordID
cachedPassphraseFD
Ti,V_cachedPassphraseFD
cachedRecordIDPassphraseFD
Ti,V_cachedRecordIDPassphraseFD
backupAllowed
EMCSBackupUUID
Reset
Remove
Complete
ForceICDP
com.apple.sbd.backupAllowed
-[LakituRequest URLSession:task:didReceiveChallenge:completionHandler:]
Content-Type
application/x-apple-plist
Authorization
X-MMe-Client-Info
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
X-Apple-Request-UUID
Certificate pinning error, please see rdar://problem/15631298
Certificate pinning error
-[LakituRequest performRequestWithHandler:]
urlString
T@"NSString",C,V_urlString
pinningFailure
TB,V_pinningFailure
urlRequest
T@"NSMutableURLRequest",R
responseClass
T#,R,V_responseClass
T@"NSNumber",R
EscrowService
EscrowServiceBypassToken
Issuer Name
value
2.5.4.5
Success
Error getting account info
v24@?0@"LakituResponse"8@"NSError"16
Can't get iCloud environment
Can't get base cert versions for root type %u in %@ environment
Can't get cert versions for root type %u in %@ environment
Unexpected error with encoded certificate
Unexpected error with certificate
Mismatched user credential
Invalid SMS number error
Record already exists
SMS verification error
Recovery attempt soft limit reached
Recovery attempt hard limit reached
Too many simultaneous SRPInit attempts
Recovery PET hard limit
Recovery PET soft limit
SRP Authentication error
Error authenticating
Invalid iCSC
Error deserializing data
Error deleting record
Error updating metadata
SMS challenge error
Too many SMS challenge attempts
Unable to change SMS Target: %@
Unable to get target list
Unable to get country SMS code list
Missing certificate data
Cert is newer than trust policy
Cert does not match our trust policy
PROD
/AppleInternal/Library/CloudServices/iCloudDevCert.der
Error creating SecCertificateRef
Error copying escrow trust policy
Error copying root cert array
SecTrustEvaluate failed: %u
Unable to extract public key
daemon
EscrowGenericResponse
EscrowCertificateResponse
EscrowEnrollmentResponse
EscrowSRPResponse
EscrowRecoveryResponse
EscrowDeleteResponse
EscrowUpdateMetadataResponse
EscrowUpdateBlobResponse
EscrowSMSChallengeResponse
EscrowAccountInfoResponse
EscrowChangeSMSTargetResponse
EscrowListSMSTargetsResponse
EscrowGetCountrySMSCodesResponse
SecureBackup
SecureBackupSQLite
SecureBackupDB
NSObject
SecureBackupViewStore
LakituResponse
EscrowGenericRequest
SRPClientRequest
EscrowPasswordAuthenticatedRequest
EscrowCertificateRequest
EscrowEnrollmentRequest
EscrowSRPRequest
EscrowRecoveryRequest
EscrowDeleteRequest
EscrowUpdateMetadataRequest
EscrowUpdateBlobRequest
EscrowSMSChallengeRequest
EscrowAccountInfoRequest
EscrowChangeSMSTargetRequest
EscrowListSMSTargetsRequest
EscrowGetCountrySMSCodesRequest
POSIXDate
SBDate
SBDeviceInfo
SESWrapper
CloudServicesError
Internal
SecureBackupProtocol
SecureBackupDaemon
NSXPCListenerDelegate
LakituRequest
NSURLSessionDelegate
EscrowService
@32@0:8@16@24
q16@0:8
@16@0:8
^{sqlite3=}28@0:8@16B24
@24@0:8@16
@24@0:8@"NSURL"16
B48@0:8@16@24@32^@40
B48@0:8@"NSData"16@"NSData"24@"NSString"32^@40
B32@0:8@16^@24
B32@0:8@"NSData"16^@24
v24@0:8@?16
v24@0:8@?<v@?@"NSData"@"NSString"@"NSData">16
v24@0:8@16
v24@0:8@"NSData"16
v16@0:8
B24@0:8@16
B24@0:8@"NSString"16
@"NSData"16@0:8
@"NSString"16@0:8
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
^{sqlite3=}16@0:8
v24@0:8^{sqlite3=}16
^{sqlite3=}
@"NSURL"
B32@0:8@16@24
@"NSString"
@"<SecureBackupDB>"
v32@0:8@16@24
@36@0:8@16@24B32
@"NSDictionary"
@"NSHTTPURLResponse"
@"NSError"
@"NSError"16@0:8
@"NSDictionary"16@0:8
@40@0:8@16@24@32
@"NSNumber"
@"NSData"
@"NSArray"
@32@0:8^{__SecKey=}16^@24
@32@0:8@16^{__SecKey=}24
^{ccses_crypto_t=^{ccdigest_info}(?=(?=^Q^{cczp}(?=^Q^{cczp}))^{?}(?=(?=^Q^{cczp})^{?}))^{ccmode_ecb}^{ccmode_ecb}^{ccmode_cbc}^{ccmode_cbc}{ccrng_system_state=^?i}^{ccrng_state}QQQQ}
^{ccsrp_ctx={ccsrp_ctx_header=^{ccdigest_info}(?=(?=^Q^{cczp}(?=^Q^{cczp}))^{?}(?=(?=^Q^{cczp})^{?}))^{ccrng_state}{?=b1b1b1b16}[7C][1Q]}}
@"NSDate"
q24@0:8@16
q24@0:8q16
@32@0:8q16@24
@40@0:8q16@24@32
@48@0:8q16@24@32@40
@40@0:8@16q24@32
@32@0:8@16^i24
@24@0:8^@16
v24@0:8B16B20
v20@0:8B16
i16@0:8
@20@0:8B16
@32@0:8@16^@24
v32@0:8@16@?24
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v24@0:8@"NSDictionary"16
v24@0:8@"NSString"16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@0:8
v36@0:8@16B24@?28
@56@0:8@16@24@32@40@48
@32@0:8@16^Q24
i24@0:8@16
@20@0:8i16
v20@0:8i16
@"NSObject<OS_dispatch_queue>"
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@16@24@?32
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24@32@40@?48
v48@0:8@16@24@32@?40
@24@0:8^{__SecCertificate=}16
@28@0:8I16@20
>@@(#)PROGRAM:com.apple.sbd  PROJECT:CloudServices-222.1.6
33333
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.sbd</string>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.authkit.client.internal</key>
<true/>
<key>com.apple.developer.ubiquity-kvstore-identifier</key>
<string>com.apple.sbd3</string>
<key>com.apple.escrowservice.access</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.mkb.usersession.info</key>
<true/>
<key>com.apple.mkb.usersession.securebackup</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>UniqueDeviceID</string>
</array>
<key>com.apple.private.iaaccounts</key>
<true/>
<key>com.apple.private.keychain-backup-client</key>
<true/>
<key>com.apple.private.ubiquity-additional-kvstore-identifiers</key>
<array>
<string>com.apple.sbd.emcs</string>
</array>
<key>keychain-access-groups</key>
<array>
<string>com.apple.sbd</string>
<string>com.apple.lakitu</string>
</array>
<key>keychain-cloud-circle</key>
<true/>
<key>platform-application</key>
<true/>
<key>restore-keychain</key>
<true/>
</dict>
</plist>
