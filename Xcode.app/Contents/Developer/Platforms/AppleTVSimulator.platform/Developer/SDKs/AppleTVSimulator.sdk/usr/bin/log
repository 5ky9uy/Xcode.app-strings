%-*s%-*s
Timestamp
(process)[PID]
%-*s%-*s  %-*s%-*s  %-*s
Thread
Type
Activity
 localhost %s[%d]: 
(%s) 
Created Activity ID: 0x%llx
, Parent ID: 0x%llx
, Description: %s
Thread transitioned from Activity ID 0x%llx to 0x%llx
 localhost %s[%d]: (%s) 
<%s> 
[%s.%s] %s
 localhost %s[%d]: (%s) UserAction: %s
 localhost %s[%d]: UserAction: %s
 statedump for %s(%d) with message:
Unknown: %ld
0x%-*llx
%-*s
%-*d
Transition
Default
Info
Debug
Error
Fault
[%s.%s] 
signpost
useraction
State
%%F %%T.%06d%+03d%02d
%s: 
<missing UUID>: 
(missing UUID) 
Please answer with (y/N)? 
<unknown>
%s%s'%s' (%d) owned by '%s' (%d)
PID %d not found.
Found too many matching processes (%d), be more specific.
Found %d matches
 (Y/n) ? 
r*16@?0[16C]8
help
usage: 
 [ --%s ]
 <command>
 Commands: 
 Examples:
log help stream
log config --status
log stream --level=info
log erase --all
[ <archive> | <logfile> ...]
[ --predicate <predicate> ][ --source ][ --style (syslog|json) ]
[ --start "YYYY-MM-DD HH:MM:SS" ] [ --end "YYYY-MM-DD HH:MM:SS"]
[--info] [--debug]
[--last <num>[m|h|d] ]
Usage:
Shows contents of the system log datastore, archive or a specific tracev3 file.
If a file or archive is not specified, the system datastore will be shown.
The start and end date/time can be specified with or without time.
The output contains only default level messages unless --info and/or --debug are specified.
Examples:
log show mylogs.logarchive --info --debug
log show --predicate examples:
--predicate 'eventMessage contains "my message"'
--predicate 'eventType == logEvent and messageType == info'
--predicate 'processImagePath endswith "d"'
--predicate 'not processImagePath contains[c] "some spammer"'
--predicate 'processID < 100'
--predicate 'senderImagePath beginswith "my sender"'
--predicate 'eventType == logEvent and subsystem contains "com.example.my_subsystem"'
stream
[ --system | --process (pid|process) | --parent (pid|process) ]
[ --level default|info|debug][ --predicate <predicate> ]
[ --source ][ --style (syslog|json) ]
[ --timeout <num>[m|h|d] ][ --type activity|log|trace ]
Usage:
Stream stream activities, log data or trace messages from a given process
or the system. By default, the command assumes system-wide streaming.  
Specifying a process id with the --process option will narrow the results.
Examples:
log stream --level=info
log stream --predicate examples:
--predicate 'eventMessage contains "my message"'
--predicate 'eventType == logEvent and messageType == info'
--predicate 'processImagePath endswith "d"'
--predicate 'not processImagePath contains[c] "some spammer"'
--predicate 'processID < 100'
--predicate 'senderImagePath beginswith "my sender"'
--predicate 'eventType == logEvent and subsystem contains "com.example.my_subsystem"'
dump
[ --file <path> | --archive <path> ]
[ --style (syslog|json) ][ --filter <filter> ][--predicate <predicate>]
[ --source ][ --no-sensitive ]
log dump --filter examples:
--filter 'message:"find me"'
--filter 'type:"info"'
# default, info, debug, error, or fault
--filter 'type:"!debug"'
--filter 'process:"process name"'
--filter 'process:"!process name"'
--filter 'sender:"sender name"'
--filter 'subsystem:"com.example.my_subsystem"'
--filter 'category:"my_category"'
--filter 'process:"A",message:"B"'
# A and B
--filter 'category:"C"' --filter 'subsystem:"D"'
# C or D
log dump --predicate examples:
--predicate 'eventMessage contains "my message"'
--predicate 'eventType == logEvent and messageType == info'
--predicate 'processImagePath endswith "d"'
--predicate 'not processImagePath contains[c] "some spammer"'
--predicate 'processID < 100'
--predicate 'senderImagePath beginswith "my sender"'
--predicate 'eventType == logEvent and subsystem contains "com.example.my_subsystem"'
raw-dump
[ --file <path> | --archive <path> ]
collect
[ --output <path> ][ --start "YYYY-MM-DD HH:MM:SS"][ --size <num>[k|m]]
Usage:
Collect the system logs into a .logarchive that can be viewed with
log show or Console. If an output path is not specified, system_logs.logarchive
will be created in the current directory. If the output path is a directory, a file
named system_logs.logarchive will be created in the specified directory.  If the
path contains the extension .logarchive, a new logarchive will be created with
that name at the specified path. The start date/time can be specified with or without time.
Examples:
log collect --output ~/mylogs.logarchive
log collect --output /tmp
log collect --start "2016-04-12" --output /Users/test --size 20m
log collect --start "2016-04-12 06:30:00"
erase
[-all] [--ttl] [--faulterror]
Usage:
Delete selected log data from the system.
If no arguments are specified, the main log datastore
and inflight log data will be deleted.
statistics
[ --file <path> | --archive <path> ] [ --filter <filter> ]
log statistics --filter examples:
--filter 'message:"find me"'
--filter 'process:"process name"'
--filter 'sender:"sender name"'
--filter 'subsystem:"com.example.my_subsystem"'
--filter 'category:"my_category"'
--filter 'process:"A",message:"B"'
# A and B
--filter 'category:"C"' --filter 'subsystem:"D"'
# C or D
config
[ --status | --reset | --mode <modes> ][ --subsystem <name> [ --category <name> ]]
Modes:
level: {default | info | debug }
persist: {off | default | info | debug}
Usage:
Configure or read settings for the logging system.
config commands can act system-wide, or on a subsystem. 
Requires root access
Examples:
log config examples:
--mode "level:debug"
--process=999 --mode="persist:info,propagate:off"
unknown command
usage:
log %s %s
Unused argument: %s
Too many arguments to '%s' verb
default
info
live
buffered
normal
precise
level
timestamps
persist
private_data
legacy_logging
customer
%Y-%m-%d
Failed conversion of '%s' using format '%s'
%Y-%m-%d %H:%M:%S
Warning: Ignoring extraneous characters in date string (%s)
hqv?
%s is ambiguous ('%s' or '%s')
Unknown subcommand '%s'
UUID not present
File present
UUID path lookup failed
UUID is NULL
SIMULATOR_SHARED_RESOURCES_DIRECTORY
v8@?0
%s%s/%02X/%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X
/var/db/uuidtext
/var/tmp/uuidtext
%s/%02X/%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X
size
output
start
livedata
no-livedata
only-livedata
repair
o:s:z:?
start: %ld
size: %ld
path: %s
v16@?0r*8
.logarchive
%s/livedata.%04d%02d%02dT%02d%02d%02d.logarchive
failed to create directory %s - %s
/logdata.LiveData.tracev3
Failed to create file %s
Failed to create archive %s
Archive successfully written to %s/system_logs.logarchive
Archive successfully written to %s
--size parameter must be <number>[k|m]
status
reset
mode
subsystem
process
category
srm:S:c:p:?
Invalid Modes '%s'
Config
PID not found for '%s'
is_get: %d
is_set: %d
is_reset: %d
cmd_cnt: %d
subsystem: %s
category: %s
process: 
mode: 0x%08x 0x%08x 0x%08x
config must choose one of --status, --reset or --mode
config --get and --mode are exclusive
config --category requires --subsystem
config --set requires mode settings (--mode="<settings>")
Ignoring some flags 0x%X because they are process/subsystem only
Ignoring some flags 0x%X because they are system only
target: %s
system
<none>
changeto: 0x%08x
settings mode '%s' to '%s' (%d)
failed to connect to task %d
Unable to retrieve current mode for task %d
Mode for
Mode for '%s(%s)' 
Mode for '%s' 
System mode =
 Inherit Behavior
 No Settings
 DISABLE
 INFO
 DEBUG
 STREAM_LIVE
 STREAM_BUFFERED
 INSTRUMENTED
 PRECISE_TIMESTAMPS
 OFF
 PERSIST_DEFAULT
 PERSIST_INFO
 PERSIST_DEBUG
 PROPAGATE
 PRIVATE_DATA
 LEGACY_LOGGING
 DISABLE_LOG_SHIM
 REVERSE_MIRROR
 CUSTOMER
 DEVELOPMENT
Simulator unable to set system mode
can get task for pid %d
events
faulterror
cotesfA?
B24@?0r*8^v16
Are you sure you want to permanently erase (%s)? (y/N) 
com.apple.logd.admin
v16@?0^v8
operation
purge
Must provide a valid argument
Persistence
SpecialHandling
StreamMem
StreamMetadata
StreamHighTraffic
StreamMemWifi
StreamBaseband
Oversize
Events
StateDumps
FaultsAndErrors
Livedata
A:f:h:?
.tracev3
/private/var/db/diagnostics/
offset: %lld
tag: 0x%x
subtag: 0x%x
length: %llu
    boot UUID: %s
    logd last exit status: %d
    logd PID: %d
    build version: %s
    h/w model: %s
    CPU: %s
    starttime: %llu
    mach_continuous: %llu
    timebase: %d/%d
    time: %lld - %s
    timezone minutes west: %'d
    timezone DST: %d
    timezone name: %s
    flags: %d
    process_id: %llu
    message_id: %u
    buffdata_sz: %u
    privdata_sz: %u
B40@?0^{firehose_buffer_chunk_s=[0C](?=Q{?=SSCCCb1b1b6})Q[4080C]}8Q16^{tracev3_chunk_s={tracev3_chunk_preamble_s=IIQ}(?={tracev3_chunk_header_s={mach_timebase_info=II}QqiiiI{tracev3_subchunk_preamble_s=II}{tracev3_subchunk_continuous_s=Q}{tracev3_subchunk_preamble_s=II}{tracev3_subchunk_systeminfo_s=ii[16c][32c]}{tracev3_subchunk_preamble_s=II}{tracev3_subchunk_generation_s=[16C]ii}{tracev3_subchunk_preamble_s=II}{tracev3_subchunk_timezone_s=[48c]}}{tracev3_chunk_atm_s=[16C][16C]QiCCCC[0C]}{tracev3_chunk_compressed_s=QQ[0C]}{tracev3_chunk_catalog_s=SSSS[0C]}{tracev3_chunk_atm_raw_s=QiCC[0C]}{tracev3_chunk_atm_raw_compressed_s=[0C]}{tracev3_chunk_oversize_s=QISS[0C]}{tracev3_chunk_statedump_s=QQQQQ[16C]iI[0C]}[0C])}24q32
%16s: %'10llu   Subsystems: %'10llu  | Subsystems: %'10llu   UUID Info: %'10llu   Message: %'10llu
Main Executable
Shared Cache
Caller PC
Total Entries
%16s: %'10llu
Chunks
Error opening %s
persistent store
    pid: %d
    proc_id: %llu
    macho-uuid: %s, %s
    cache-uuid: %s, %s
UUID info count: %llu
    [0x%llx - 0x%llx] - %s, %s
TTL filter: %u
found entry @ %ld ts: %llu, ft_id: %llu (%s type: %d, code: %d) %s
subsystems count: %hu
    [%u] - Subsystem: %s, Category: %s
buffer size: %llu
, DynamicFormat 
, Current AID
, User Interface
, Other AID
, Private Data
, Rules
, Oversize
, Subsystem: %hu%s
 <Invalid>
, Sender: main_exe
 <Valid>
, Sender: shared_cache
 Format offset: 0x%x PC offset: 0x%x 
, Sender: caller_pc
 <Invalid [no uuid for pc]>
Location: 0x%llX
Message: '
activity
trace
metadata
unknown
    TTL filter: %u
found entry @ %ld ts: %llu, ft_id: %llu (%016llX) (%s type: %d, code: %d) %s
log run noninteractively, parent: %d (%s), args:
com.apple.log
looking for UUID Sections using the current build
=====
Collect:
=====
Config:
=====
Canceled operation
Deleted selected logs.
                        Totals                         |                          Failure Types
 ----------------------------------------------------- | --------------------------------------------------------------------
Process Info:
====================================
debug
quiet
verbose
no-sensitive
style
predicate
archive
source
today
yesterday
last24
last
A:c:F:f:hP:s:TYL?
boot
last %s delta=%ld of the data available
Archive "%s" not found
An archive must have extension .logarchive
File "%s" not found
File must have extension .tracev3
syslog
json
show
==========
==========
Log file not found: %s
filter
predicate-filter
c:idA:F:f:hP:s:?
Bad filter query: %s
Bad predicate: %s
--last parameter must be <num>[m|h|d]
Filtering the log data using "%s"
B16@?0@"OSActivityEvent"8
Log      - Default: %'10llu, Info:       %'10llu, Debug:    %'10llu, Error: %'10llu, Fault: %'10llu
Trace    - Default: %'10llu, Info:       %'10llu, Debug:    %'10llu, Error: %'10llu, Fault: %'10llu
Activity - Create:  %'10llu, Transition: %'10llu, Actions:  %'10llu
SignPost - Begin:   %'10llu, End:        %'10llu, Event:    %'10llu
State    -          %'10llu
from last boot
Skipping info and debug messages, pass --info and/or --debug to include.
Skipping info messages, pass --info to include.
Skipping debug messages, pass --debug to include.
 --------------------------------------------------------------------------------------------------------------------
malformed argument: '"' before type separator at %s
non-terminated query clause: %s
activityCreateEvent
activityTransitionEvent
userActionEvent
traceEvent
logEvent
signpostBeginEvent
signpostEndEvent
signpostEvent
stateEvent
eventType
messageType
(eventType == %u) OR (eventType == %u) OR (eventType == %u) OR (eventType == %u)
CONTAINS[cd]
Bad filter clause syntax: '%s'
%@processImagePath %@ "%@"
NOT 
message
%@eventMessage %@ "%@"
type
release
error
fault
Unrecognized message type: %s
(eventType == %u) AND (messageType %@ %d)
%@subsystem %@ "%@"
%@category %@ "%@"
activityID %@ %@
sender
%@senderImagePath %@ "%@"
Unrecognized filter type: %s
Unable to create predicate with filter (%s)
com.apple.log.symbolication
v24@?0{_CSTypeRef=QQ}8
%s --databases uuidsymmap.apple.com,bursar.apple.com %s
/usr/local/bin/dsymForUUID
no response from dsymForUUID
dsymForUUID response is not a dictionary
response from dsymForUUID does not conatin UUID
response from dsymForUUID for UUID not a dictionary
DBGDSYMPath
no response value of DBGDSYMPath for UUID
response value of DBGDSYMPath for UUID not a string
DBGSymbolRichExecutable
no response value of DBGSymbolRichExecutable for UUID
response value of DBGSymbolRichExecutable for UUID not a string
No symbols found for %s %s+%d
__TEXT
__TEXT_EXEC
(%s:%d)
file
A:f:S::?
no data found for %s
q24@?0@8@16
%10s %8s %12s %10s %8s %12s %12s %8s Process
Activities
Actions
Logs
Traces
% Events
Public Data
Private Data
% Data
%'10llu %'8llu %'12llu %'10llu %7.2f%% %'12llu %'12llu %7.2f%% %s
%'10llu %'8llu %'12llu %'10llu %8s %'12llu %'12llu %8s %s
Totals
%10s %8s %12s %10s %8s %12s %12s %8s Sender
Process statistics:
======================
Sender statistics:
======================
v32@?0@8Q16^B24
Stream failed: %s
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
TC,V_style
Tq,V_timeout
totals
T{_log_totals_s=[5Q]QQQQ[5Q]QQQ},V_totals
flags
T{_log_flags_s=iii},V_flags
parent
timeout
promiscuous
line-buffered
payload
wait-for
abF:f:op:P:s:w:Y:l:?
Stream
syslog style can't be used with the payload option
Specified processes were not found.
Process stream requested but no specific PID provided.
Waiting for process: %s
Parent does not work properly with the activity filter
--timeout parameter must be #[m|h|d]
fileHandleWithStandardOutput
dataWithBytes:length:
writeData:
properties
dataWithJSONObject:options:error:
eventType
eventMessage
UTF8String
processImagePath
processID
senderImageUUID
processImageUUID
isEqual:
activityID
creatorActivityID
transitionToActivityID
subsystem
category
senderImagePath
threadID
messageType
timeGMT
senderProgramCounter
getUUIDBytes:
UUIDString
alloc
stringWithUTF8String:
initWithName:
initWithName:subsystem:
reset
sharedManager
effectiveEnabledLevel
effectivePersistedLevel
setEnabledLevel:
setPersistedLevel:
addObject:
predicateWithFormat:
count
orPredicateWithSubpredicates:
description
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
setVerbose:
hasDirectoryPath
setLogArchive:
setLogFile:
options
setOptions:
setPredicate:
dateWithTimeIntervalSince1970:
distantPast
distantFuture
endDate
dateByAddingTimeInterval:
enumerateFromLastBootWithBlock:
enumerateFromStartDate:toEndDate:withBlock:
andPredicateWithSubpredicates:
componentsSeparatedByString:
mutableCopy
numberWithUnsignedInteger:
dictionaryWithObjects:forKeys:count:
numberWithUnsignedChar:
objectAtIndex:
isEqualToString:
objectForKey:
replaceObjectAtIndex:withObject:
integerValue
componentsJoinedByString:
stringWithFormat:
init
statistics
objectForKeyedSubscript:
countByEnumeratingWithState:objects:count:
unsignedLongLongValue
sortUsingComparator:
enumerateObjectsUsingBlock:
stop
activityStream:results:
streamDidStart:
streamDidFail:error:
streamDidStop:
activityStream:results:error:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
style
setStyle:
timeout
setTimeout:
totals
setTotals:
flags
setFlags:
_style
_timeout
_flags
_totals
setDelegate:
setEventFilter:
waitForProcessName:
eventFilter
predicate
addProcessID:
addFilterForActivity:andBinary:
start
@(#)PROGRAM:log  PROJECT:libtrace-518.1.16
StreamDelegate
OSActivityStreamDelegate
NSObject
Streaming
Streaming stopped due to timeout
B32@0:8@16@24
B32@0:8@"OSActivityStream"16@"NSArray"24
v24@0:8@16
v24@0:8@"OSActivityStream"16
v32@0:8@16@24
v32@0:8@"OSActivityStream"16@"NSError"24
B40@0:8@16@24@32
B40@0:8@"OSActivityStream"16@"NSArray"24@"NSError"32
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
C16@0:8
v20@0:8C16
q16@0:8
v24@0:8q16
{_log_totals_s=[5Q]QQQQ[5Q]QQQ}16@0:8
v152@0:8{_log_totals_s=[5Q]QQQQ[5Q]QQQ}16
{_log_flags_s=iii}16@0:8
v28@0:8{_log_flags_s=iii}16
{_log_flags_s="show_info"i"show_debug"i"show_source"i}
{_log_totals_s="logs"[5Q]"activity_creates"Q"signposts"Q"signpostbegins"Q"signpostends"Q"traces"[5Q]"useractions"Q"activity_transitions"Q"statedumps"Q}
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleExecutable</key>
<string>log</string>
<key>CFBundleIconFile</key>
<string></string>
<key>CFBundleIdentifier</key>
<string>com.apple.log</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>log</string>
<key>CFBundlePackageType</key>
<string>BNDL</string>
<key>CFBundleSignature</key>
<string>????</string>
<key>CFBundleVersion</key>
<string>1</string>
<key>NSHumanReadableCopyright</key>
<string>Copyright 
 2015-2016 Apple Inc. All rights reserved.</string>
<key>SecTaskAccess</key>
<array>
<string>allowed</string>
<string>safe</string>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string></string>
<key>com.apple.private.logging.admin</key>
<true/>
<key>com.apple.private.logging.diagnostic</key>
<true/>
<key>com.apple.private.logging.stream</key>
<true/>
<key>com.apple.system-task-ports</key>
<true/>
<key>task_for_pid-allow</key>
<true/>
</dict>
</plist>
