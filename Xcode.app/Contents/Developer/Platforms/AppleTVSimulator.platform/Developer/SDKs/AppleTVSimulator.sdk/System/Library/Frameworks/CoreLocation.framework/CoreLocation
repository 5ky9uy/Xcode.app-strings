NSt3__120__shared_ptr_emplaceI19CLConnectionMessageNS_9allocatorIS1_EEEE
@fffff
@<@A
15CLNameValuePair
A10BasicMutex
5Mutex
11NonCopyable
21DestructionAwareMutex
NSt3__120__shared_ptr_pointerIP29DestructionAwareMutexInternalNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI29DestructionAwareMutexInternalEE
N13CLPreferences10OtherPrefsE
13CLPreferences
CDFGHJKLMNPQRSTVWXYZ
123456789CDFGHJKLMNPQRTVWXY
14CLPlatformInfo
16CLDaemonSettings
NSt3__120__shared_ptr_pointerIP16CLDaemonSettingsN12_GLOBAL__N_112null_deleterENS_9allocatorIS1_EEEE
N12_GLOBAL__N_112null_deleterE
17CLPersistentStore
5CLLog
NSt3__120__shared_ptr_pointerIP19CLCircularLogBufferNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI19CLCircularLogBufferEE
10CLSettings
sA-C
Zw+?
Zwk?
N2CL3Log17logfile_streambufE
9CLLogBase
NSt3__120__shared_ptr_pointerIP10CLSettingsNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI10CLSettingsEE
@(#)PROGRAM:CoreLocation  PROJECT:CoreLocation-2101.0.62
non-matching retain (%p) and release (%p) functions in context, ignoring
Failed to initilize fHeadingCalibrationDisplayMutex, error code: %{public}d
CLClient is deprecated. Will be obsolete soon.
Location manager created on a dispatch queue exectuing on non-main thread, notifying client
#warning Could not register with daemon immediately, will retry later
Discarding message for event %{private}d because of too many unprocessed messages
Location callback block not executed in a timely manner!
received client will resign active notification
received client did become active notification
Registration timer expired, but client is still registering!
Missing UsageDescription key for requsted authorization: %{public}d
CLInternalGetLocationServicesEnabled failed: could not reach daemon
{"msg":"", "showHeadingCal":"%{public}hhd", "isHeadingCalibrated":"%{public}hhd", "isApplicationActive":"%{public}hhd", "isUpdatingHeading":"%{public}hhd"}
Fence: CLClientRequestRegionState, unsupported fence type
Function deprecated
Invalid call to CLClientGetAutopauseState
malformed message: kCLConnectionMessageAutopauseStatus
function deprecated - noop
Got unhandled message %s from daemon
There is no UsageDescriptionKey for this AuthorizationStatus
This should not be invoked anymore
Failure to deallocate CLLocationManager on the same runloop as its creation may result in a crash
Obsolete
Canceling requestLocation
Ignoring requestLocation due to ongoing location.
Canceling requestLocation.
Start updating heading. HeadingFilter, %.2f
Stop updating heading
Dismissing Compass Calibration HUD
WRTT: received requestRangingToPeers, timeout, %{public}lf
Ignoring requestRangingToPeers due to ongoing ranging
WRTT: received respondToRangingFromPeers, timeout, %{public}lf
Ignoring respondToRangingFromPeers due to ongoing ranging.
WRTT: received startRangingToPeers, interval, %{public}lu
Ignoring startRangingToPeers due to ongoing ranging
WRTT: received stopRangingToPeers
WRTT: received startRangingFromPeers
Ignoring startRangingFromPeers due to ongoing ranging
WRTT: received stopRangingFromPeers
delivering locations to client's delegate
WRTT: received onRangingRequestTimeout
could not get updated authorization status
Location event received with empty payload
New location is identical to old location; discarding
New location predates old location, and the event types differ; discarding
could not get updated heading
CL: Invoking Compass Calibration HUD
could not show heading calibration
could not get error
could not get region monitoring event
{"msg":"Fence: onClientEventRegion, unknown region type", "regionType":"%{public, location:CLClientRegionType}lld"}
could not get the region state
{"msg":"Fence: onClientEventRegionState, unknown region type", "regionType":"%{public, location:CLClientRegionType}lld"}
{"msg":"Fence: onClientEventRegionState, invalid state", "regionState":"%{public, location:CLClientRegionState}lld"}
{"msg":"Fence: onClientEventRegionError, unknown region type", "regionType":"%{public, location:CLClientRegionType}lld"}
could not get ranged beacons
Client beacon is invalid (count,%lu).
could not get ranging error
WRTT: received onClientEventPeerRanging
WRTT: received onClientEventPeerRangingError
{"msg":"Client region type is not supported.
", "regionType":"%{public, location:CLClientRegionType}lld"}
could not get updated paused state
could not get batch result
Finished deferred updates: %s
could not get updated vehicle speed
could not get updated vehicle heading
{"msg":"must pass handler to dumpDiagnosticFilesWithHandler", "event":"%{public}s", "condition":"%{private}s"}
dumpDiagnosticFiles called, trying to make an xpc call
#diagnosticManager failed to get remoteObjectProxy with error %@
#diagnosticManager error copying files: %@
Start updating vehicle speed
Stop updating vehicle speed
Start updating vehicle heading
Stop updating vehicle heading
***no run loop available***
Changing CLCommon's runloop after it was already established
Setting CLCommon's runloop after it was already established
CLCommonSetRunLoop, %p
cannot open source file: %s, errno %d
cannot open target file: %s, errno %d
error reading source file: %s
error writing target file: %s
cannot open compression stream: %s, bzerror %d
error writing target file: %s, bzerror: %d
error closing target file: %s, bzerror: %d
CLCommonGzipDecompressFile, can't stat, %s
CLCommonGzipDecompressFile, from, %s, to, %s, size, %llu, cTime, %.1lf, isOK, %d
CLCommonGzipDecompressFile, can't open, file_path_to, %s, errno %d
CLCommonGzipDecompressFile, can't open, file_path_from, %s, errno, %d
CLCommonGzipDecompressFile, error reading source file: %s, errno, %d, read, %d
CLCommonGzipDecompressFile, can't write, %s, errno, %d, write, %zu
CLCommonGzipDecompressFile, from, %s, to, %s, isOK, %d, fileSize, %llu, totalReadBytes, %u, totalWrittenBytes, %u, compression, %.4lf
http date string is converted to timestamp %.3f and adjusted to %.3f by %.3fs RTT (%.3fs diff from systime)
GPS_NETWORK: enabled %d found %d
Timer set loop: %d %f %f %f %f
CLCommonCompareLocationEqualityClient compared two coordinates that were identical other than their reference frames: (%lf, %lf, %d) (%lf, %lf, %d)
CLCommonGetFileTimestamps, failed to stat file, %s, ret, %d
CLCommonTouchMTimestamp, utimes failed, ret, %d, file, %s
TILE: delete file, %s
TILE: stat, %s, ret, %d, mtime, %lu, ctime, %lu, size, %lld
TILE: unlink, %s, ret, %d
failed, invalid filename
failedToOpen, errno, %d
failed,fd,%d,origProtectionClass,%d,newProtectionClass,%d,ret,%d,errno,%d
done,fd,%d,origProtectionClass,%d,newProtectionClass,%d,ret,%d
processed %p %d to (%s)
could not create new mutable dictionary
could not deserialize property list from %s
file %s does not exist... clearing, error, %s
Error reading file %s: %s
Could not create NSURL for file: %s
Could not write data to disk %s
Could not serialize data for file %s
key %s does not have element %d in array of size %ld
key %s does not have element %d in non-array type %lu
type IDs do not match for key %s - %lu vs %lu
specified index is out of range for key %s (%d of %ld)
specified index %d not applicable to type %lu for key %s
could not create cf type for key %s
could not create write stream
could not open write stream
could not write data, error code, %ld, error domain, %s
could not create intermediate property list - %ld (%s)
dictionary, %s, NULL
%s = <dictionary (%ld entries)>:
%s = %s
%s = %0.6f
%s = %d
%s = <unhandled value type %lu>
could not get value
type IDs do not match - %lu vs %lu
could not convert to C string
can't convert %u data bytes
type IDs do not match - %lu
dictionary, %s, key, %s, value, %s
dictionary, %s, key, %s, value, %.8lf
dictionary, %s, key, %s, value, %d, 0x%08x
dictionary, %s, key, %s, value, %d, [CFBoolean]
dictionary, %s, key, %s, value, %.2lf, [CFDate]
dictionary, %s, key, %s, un-printable value
Unable to load CompassUI framework
Could not load CUICalibrationClass from CompassUI framework
TIMEOUT: Waited %f seconds to aquire lock '%s' (%p)
Assert Failed, %s, %d
locationd assert: %s, %d
TIMEOUT: Held lock '%s' (%p) for %f seconds
***not supported***
<empty>
Attempt to set key %s for read-only preferences %s/%s!
unknown hardware type %{private}d
device SN date info type:%{private}zd - date:%{private}d %{private}d %{private}f
Invalid year/week code
Failed to allocate CFCalendar
CFCalendarComposeAbsoluteTime() failed
Cannot get weekday
Cannot get week
Invalid serial number format: %{private}s
CAMP: device id [%d] [%s], camping support [%d]
#warning SUPL: ignoring hw. forceSuplSupport,%d
#warning LPP: ignoring hw. forceLppSupport,%d
#warning Overriding BeaconFenceBestEffortAlways,%d
zoneBestEffortAlwaysEnabled,%d
#warning GNSSRF: overriding peak antenna gain, %d tenth-dB
GNSSRF: no config for %d
GNSSRF: peakAntennaGain,%d,gpsLoss,%d,gloLoss_0,%d,gloLoss_minus7,%d,gloLoss_plus6,%d
PLOS: ignoring hw. forceSupport,%d
#warning OBM, ignoring hw. forceSupport,%d
data for wifi-antenna-sku-info found
Device SKU:%s
wifi-antenna-ski-info property not found.
service for class wlan NOT found.
class wlan NOT found.
could not get mutable store path for type, %d
Unknown persistent domain: %d
could not create path %s
persistent store %s has been modified - refreshing will lose changes
data set %s is not changeable - not storing
%s stored to disk %s
scheduling to auto-store %s every %.3fs
disabling auto-store for %s
invalid hunc
invalid inputs
fVarEast <= 0.0
fVarNorth <= 0.0
fVarEastNorth < 0.0
CLMM, Unexpected determinant of 0
determinant <= 0.0
Blocking Mig routine deferred on Daemon side... waiting and retrying
List of apps using location is not a dictionary -- type ID %lu
List of technologies in use is not an array -- type ID %lu
CLInternalSetLocationServicesEnabled failed
CLInternalSetGestureServiceEnabled failed
Couldn't send bundle identifier!
Couldn't send bundle path!
_CLIntegrityCheck failed with result: %d
_CLShutdownDaemon failed with result: %d
_CLDisplayStatistics failed with result: %d
_CLDumpLogs failed with result: %d
_CLCopyLastLog failed with result: %d
Returned type is not a dictionary
Key is NULL!
Couldn't set location default!
Couldn't set autopause state!
CLStartStopAdvertisingBeacon beacon: %s, power: %s
stackshot only available on device
Failed parse os_log format specifier for shimming:missing closing brace,format,%{public}s
Failed to get current position for fd %d: %s
Failed to get size of fd %d: %s
Failed to restore to original position of fd %d: %s
Failed to create decryptor. status = %d
Failed to open input file '%s' to decrypt: %s
Failed to get size of input file %s
Failed to open temporary output file '%s' to save '%s' to '%s': %s
Decrypting '%s' to '%s' via temporary file '%s'
Failed to read from '%s'.  %lld bytes read successfully.  %s
Failed to decrypt '%s'.  %lld input bytes decrypted successfully. %d
Failed to write to '%s'.  %lld input bytes decrypted & written successfully. %s
Failed to finalize decryption of '%s': %d
Failed to write final %zu bytes to '%s': %s
Failed to rename '%s' to '%s'. Decryption of '%s' failed: '%s'
Decryption of '%s' failed.  Also failed to unlink temporary file '%s': %s
Geocode error: %{private}@
n and g are too close %f
Assertion failed: lambda != 0, file /BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2101.0.62/Oscar/Math/CMOQuaternion.cpp, line 223,invalid weights.
kappa zero!
Assertion failed: i < N, file /BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2101.0.62/Oscar/Math/CMVector.h, line 272,invalid index %zu >= %zu.
Assertion failed: ldx < M*N, file /BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2101.0.62/Oscar/Math/CMMatrix.h, line 78,invalid element %zu >= %zu.
Assertion failed: row < M, file /BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2101.0.62/Oscar/Math/CMMatrix.h, line 71,invalid row %zu > %zu.
Assertion failed: col < N, file /BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2101.0.62/Oscar/Math/CMMatrix.h, line 72,invalid col %zu > %zu.
Assertion failed: row < M, file /BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2101.0.62/Oscar/Math/CMMatrix.h, line 64,invalid row %zu > %zu.
Assertion failed: col < N, file /BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2101.0.62/Oscar/Math/CMMatrix.h, line 65,invalid col %zu > %zu.
Unhandled message %s
Couldn't create XPC message
The received data object is invalid.
Unable to send reply, a reply message does not exist.
Connection interrupted!
Location connection invalid!
Got unexpected location event
Error on message reply (%s)
Ignoring unexpected event
identifier is the wrong data type %s
Couldn't find the %s key in the dictionary
Setting handler for message %s
Sending an un-cached message without first clearing the previously cached value
received daemon start notification for service %s
Creating connection
Destroying connection
Sending cached messages to daemon
No cached registration message
{"msg":"Setting status bar enabled for entity class failed", "entityClass":"%{public, location:CLLocationEntityClass}lld"}
{"msg":"Getting status bar enabled for entity class failed", "entityClass":"%{public, location:CLLocationEntityClass}lld"}
refAlt < %.1lf,refAlt,%.1lf,using the min
refAlt > %.1lf,refAlt,%.1lf,using the max
latitude,%.7lf,is out of bounds
{"msg":"We must have a queue", "event":"%{public}s", "condition":"%{private}s"}
{"msg":"We must have a connection", "event":"%{public}s", "condition":"%{private}s"}
CLTilesManagerClient: fatal error, cleanup!
CLTilesManagerClient: executeAsynchronousQuery, please specify, CLTilesManagerClientKeyDataType
CLTilesManagerClient: executeAsynchronousQuery, responseBlock is nil
CLTilesManagerClient: precacheHint, please specify, CLTilesManagerClientKeyDataType
CLTilesManagerClient: precacheHint, please specify, CLTilesManagerClientKeyLatitude
CLTilesManagerClient: precacheHint, please specify, CLTilesManagerClientKeyLongitude
CLTilesManagerClient: precacheHint, responseBlock is nil
CLTilesManagerClient: precacheHint, queue is nil
{"msg":"XPC connection is NULL", "event":"%{public}s", "condition":"%{private}s"}
CLTilesManagerClient: registerTo, please specify, CLTilesManagerClientKeyNotification
CLTilesManagerClient: registerTo, responseBlock is nil
CLTilesManagerClient: registerTo, queue is nil
CLTilesManagerClient: unregisterFrom, please specify, CLTilesManagerClientKeyNotification
CLTilesManagerClient: bad client
{"msg":"No return code found", "event":"%{public}s", "condition":"%{private}s"}
Exceeded max number of route hint road segments (%d > %d)
Couldn't set map-matching route hint!
CLClientRef CLClientAllocate(CFAllocatorRef, CLClientCallback, const CLClientContext *)
CoreLocation: non-matching retain (%p) and release (%p) functions in context, ignoring
CoreLocation: Failed to initilize fHeadingCalibrationDisplayMutex, error code: %{public}d
com.apple.CoreLocation.%p
CLClientRef CLClientCreateWithBundleIdentifierAndPath(CFAllocatorRef, CLClientCallback, const CLClientContext *, CFStringRef, CFStringRef)
CoreLocation: CLClient is deprecated. Will be obsolete soon.
UIBackgroundModes
location
A location manager (%p) was created on a dispatch queue executing on a thread other than the main thread.  It is the developer's responsibility to ensure that there is a run loop running on the thread on which the location manager object is allocated.  In particular, creating location managers in arbitrary dispatch queues (not attached to the main queue) is not supported and will result in callbacks not being received.
CLClientRef _CLClientCreateWithBundleIdentifierAndPath(CFAllocatorRef, CLClientCallback, const CLClientContext *, CFStringRef, CFStringRef)
CoreLocation: Location manager created on a dispatch queue exectuing on non-main thread, notifying client
CoreLocation: #warning Could not register with daemon immediately, will retry later
<CLClient %p [%p]>
CLClient
void CLClientInvokeCallback(CLClientRef, CLClientEvent, id)
CoreLocation: Discarding message for event %{private}d because of too many unprocessed messages
v8@?0
CoreLocation: Location callback block not executed in a timely manner!
void CLClientHandleWillResignActiveNotification(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)
CoreLocation: received client will resign active notification
void CLClientHandleDidBecomeActiveNotification(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)_block_invoke
CoreLocation: received client did become active notification
void CLClientHandleRegistrationTimerExpiry(CFRunLoopTimerRef, void *)
CoreLocation: Registration timer expired, but client is still registering!
kCLConnectionMessageWatchdog
kCLConnectionMessagePurposeKey
kCLConnectionMessagePurpose
void CLClientRequestAuthorization(CLClientRef, CLClientAuthorizationStatus)
CoreLocation: Missing UsageDescription key for requsted authorization: %{public}d
This app has attempted to access privacy-sensitive data without a usage description. The app's Info.plist must contain an %@ key with a string value explaining to the user how the app uses this data
kCLConnectionMessageStatusKey
kCLConnectionMessageRequestAuthorization
Boolean CLClientIsLocationServicesEnabled(CLClientRef)
CoreLocation: CLInternalGetLocationServicesEnabled failed: could not reach daemon
Boolean CLClientShutdownDaemon(CLClientRef)
Boolean CLClientLogDump(CLClientRef, const char *, Boolean)
kCLConnectionMessageSubscribeKey
kCLConnectionMessageDesiredAccuracyKey
kCLConnectionMessageDistanceFilterKey
kCLConnectionMessageOperatingModeKey
kCLConnectionMessageDynamicAccuracyReductionKey
kCLConnectionMessageAlteredAccessoryLocationsKey
kCLConnectionMessageLocation
kCLConnectionMessageEnabledKey
kCLConnectionMessageIsActuallyAWatchKitExtension
kCLConnectionMessageProxyForRemoteClient
kCLConnectionMessageHeadingFilterKey
kCLConnectionMessageHeading
kCLConnectionMessageSignificantLocationChange
kCLConnectionMessageSignificantLocationVisit
kCLConnectionMessageMicroLocation
kCLConnectionMessageRequestMicroLocation
kCLConnectionMessageNameKey
kCLConnectionMessageOnBehalfOfKey
kCLConnectionMessageNotifyOnEntryKey
kCLConnectionMessageNotifyOnExitKey
kCLConnectionMessageConservativeEntry
kCLConnectionMessageRegionTypeKey
kCLConnectionMessageLatitudeKey
kCLConnectionMessageLongitudeKey
kCLConnectionMessageRadiusKey
kCLConnectionMessageReferenceFrameKey
kCLConnectionMessageRegionDefinitionKey
kCLConnectionMessageProximityUUIDKey
kCLConnectionMessageMajorKey
kCLConnectionMessageMinorKey
kCLConnectionMessageNotifyEntryStateOnDisplayKey
kCLConnectionMessageRegionMonitoring
Boolean CLClientRequestRegionState(CLClientRef, CLClientRegion *)
CoreLocation: Fence: CLClientRequestRegionState, unsupported fence type
kCLConnectionMessageRegionState
kCLConnectionMessageBeaconRegionKey
kCLConnectionMessageCircularRegionKey
kCLConnectionMessageRangingPeersKey
kCLConnectionMessageRangingPeerTimeoutKey
kCLConnectionMessageRangingPeerInitiatorKey
kCLConnectionMessagePeerRanging
IsFitnessMatch
Boolean CLClientGetLocationUnavailable(CLClientRef, CLClientLocationUnavailable *)
CoreLocation: Function deprecated
kCLConnectionMessageError
kCLConnectionMessageErrorKey
kCLConnectionMessageEventKey
kCLConnectionMessageLocationKey
kCLConnectionMessageAlternateRegionKey
kCLConnectionMessageIdentifierKey
kCLConnectionMessageRegionsKey
kCLConnectionMessageRanging
kCLConnectionMessageBeaconsKey
kCLConnectionMessageAuthorizationStatus
kCLConnectionMessageMatchInfoEnabled
kCLConnectionMessagePersistentMonitoringEnabled
kCLConnectionMessageAllowsLocationPrompts
kCLConnectionMessageShowLocationPrompt
kCLConnectionMessageMarkAsHavingReceivedLocation
kCLConnectionMessageActivityTypeKey
kCLConnectionMessageActivityType
kCLConnectionMessagePausesLocationUpdatesAutomaticallyKey
kCLConnectionMessagePausesLocationUpdatesAutomatically
Boolean CLClientGetAutopauseState(CFDictionaryRef, Boolean *, Boolean *)
CoreLocation: Invalid call to CLClientGetAutopauseState
kCLConnectionMessageAutopauseStatusKey
kCLConnectionMessageAutopauseOverrideKey
CoreLocation: malformed message: kCLConnectionMessageAutopauseStatus
kCLConnectionMessageAllowsBackgroundLocationUpdatesKey
kCLConnectionMessageAllowsBackgroundLocationUpdates
kCLConnectionMessageBatchAllowedKey
kCLConnectionMessageBatchDistanceKey
kCLConnectionMessageBatchTimeoutKey
kCLConnectionMessageBatch
kCLConnectionMessageAllowsMapCorrectionKey
kCLConnectionMessageAllowsMapCorrection
kCLConnectionMessageRegisterAsLocationClient
kCLConnectionMessageVehicleSpeed
kCLConnectionMessageVehicleSpeedKey
kCLConnectionMessageVehicleHeading
kCLConnectionMessageVehicleHeadingKey
Boolean CLClientClearNvramData(CLClientRef, int)
CoreLocation: function deprecated - noop
Boolean CLClientSetProductionTest(CLClientRef, int)
Boolean CLClientEnableNmeaOutput(CLClientRef, int)
Boolean CLClientGetOneShotLocation(CLClientRef)
Boolean CLClientStartLocationUpdatesAll(CLClientRef)
Boolean CLClientRetrieveData(CLClientRef, CLClientEvent, Boolean)
Boolean CLClientGetCapabilities(CLClientRef, CLClientCapabilities *)
Generic
UIApplicationWillResignActiveNotification
UIApplicationDidBecomeActiveNotification
com.apple.locationd.registration
kCLConnectionMessageRegistration
v24@?0{shared_ptr<CLConnectionMessage>=^{CLConnectionMessage}^{__shared_weak_count}}8
kCLClientEventKey
void _CLClientHandleMessage(CLClientRef, std::shared_ptr<CLConnectionMessage>)
CoreLocation: Got unhandled message %s from daemon
kCLConnectionMessageLocationUnavailable
kCLConnectionMessageRegionMonitoringError
kCLConnectionMessageRangingError
kCLConnectionMessageRegionMonitoringResponseDelayed
kCLConnectionMessageRegionMonitoringSetupCompleted
kCLConnectionMessageAutopauseStatus
kCLConnectionMessagePeerRangingError
kCLConnectionMessageHeadingDataKey
NSString *_CLUsageDescriptionKeyForAuthorizationStatus(CLClientAuthorizationStatus)
CoreLocation: There is no UsageDescriptionKey for this AuthorizationStatus
kCLConnectionMessageBundleIdentifierKey
kCLConnectionMessageBundlePathKey
kCLConnectionMessageClientSDKKey
_CLLocationManagerRoutineProxy, %p
com.apple.locationd.routine
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
Connection Interrupted, serviceName, %@
Connection Invalidated, serviceName %@
connection
T@"NSXPCConnection",&,N,V_connection
delegate
T@"<CLLocationManagerRoutineDelegate>",N,V_delegate
locationManagerRoutine
T@"CLLocationManagerRoutine",N,V_locationManagerRoutine
updating
TB,N,V_updating
updatingPredictedApplications
TB,N,V_updatingPredictedApplications
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2101.0.62/Framework/CoreLocation/CLLocationManagerRoutine.m
<Unknown File>
delegate must respond to selector locationManager:didUpdateLocations:
locationManagerRoutineProxy
T@"_CLLocationManagerRoutineProxy",&,N,V_locationManagerRoutineProxy
T@"<CLLocationManagerRoutineDelegate>",N
delegate must respond to selector locationManager:didUpdatePredictedApplications:
A valid, non-nil location is required.
kCLConnectionMessageEmergencyEnablementAssertion
void OnClientEvent(CLClientRef, CLClientEvent, void *)
CoreLocation: This should not be invoked anymore
rangedRegions
T@"NSMutableSet",R,N,VfRangedRegions
-[CLLocationManager dealloc]
CoreLocation: Failure to deallocate CLLocationManager on the same runloop as its creation may result in a crash
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2101.0.62/Framework/CoreLocation/CLLocationManager.m
Non-UI clients cannont be autopaused
Invalid parameter not satisfying: %@
!stayUp || CLClientIsBackgroundable(internal->fClient)
-[CLLocationManager setSupportInfo:]
CoreLocation: Obsolete
-[CLLocationManager startUpdatingLocation]
CoreLocation: Canceling requestLocation
Delegate must respond to locationManager:didUpdateLocations:
Delegate must respond to locationManager:didFailWithError:
-[CLLocationManager requestLocation]
CoreLocation: Ignoring requestLocation due to ongoing location.
-[CLLocationManager allowDeferredLocationUpdatesUntilTraveled:timeout:]
CoreLocation: Canceling requestLocation.
Application must support the location background mode (in app's Info.plist, {UIBackgroundModes=(location);}
-[CLLocationManager startUpdatingHeading]
CoreLocation: Start updating heading. HeadingFilter, %.2f
-[CLLocationManager stopUpdatingHeading]
CoreLocation: Stop updating heading
-[CLLocationManager dismissHeadingCalibrationDisplay]
CoreLocation: Dismissing Compass Calibration HUD
region != nil
region.onBehalfOfBundleId.length == 0
v24@?0@8^B16
-[CLLocationManager requestRangingToPeers:timeoutSeconds:]
CoreLocation: WRTT: received requestRangingToPeers, timeout, %{public}lf
peers != nil
peers.count > 0
timeout > 0.0
timeout < kCLPeerRangingRequestTimeoutSecondsMax
Delegate must respond to locationManager:didRangePeers:
Delegate must respond to locationManager:rangingDidFailForPeer:withError:
CoreLocation: Ignoring requestRangingToPeers due to ongoing ranging
-[CLLocationManager respondToRangingFromPeers:timeoutSeconds:]
CoreLocation: WRTT: received respondToRangingFromPeers, timeout, %{public}lf
CoreLocation: Ignoring respondToRangingFromPeers due to ongoing ranging.
-[CLLocationManager startRangingToPeers:intervalSeconds:]
CoreLocation: WRTT: received startRangingToPeers, interval, %{public}lu
CoreLocation: Ignoring startRangingToPeers due to ongoing ranging
-[CLLocationManager stopRangingToPeers:]
CoreLocation: WRTT: received stopRangingToPeers
-[CLLocationManager startRangingFromPeers:]
CoreLocation: WRTT: received startRangingFromPeers
CoreLocation: Ignoring startRangingFromPeers due to ongoing ranging
-[CLLocationManager stopRangingFromPeers:]
CoreLocation: WRTT: received stopRangingFromPeers
-[CLLocationManager onLocationRequestTimeout]
CoreLocation: delivering locations to client's delegate
-[CLLocationManager onRangingRequestTimeout]
CoreLocation: WRTT: received onRangingRequestTimeout
ForceMapMatching
-[CLLocationManager onClientEventAuthStatus:]
CoreLocation: could not get updated authorization status
-[CLLocationManager onClientEventLocation:forceMapMatching:type:]
CoreLocation: Location event received with empty payload
CoreLocation: New location is identical to old location; discarding
CoreLocation: New location predates old location, and the event types differ; discarding
-[CLLocationManager onClientEventHeading:]
CoreLocation: could not get updated heading
-[CLLocationManager onClientEventHeadingCalibration:]
CoreLocation: CL: Invoking Compass Calibration HUD
CoreLocation: could not show heading calibration
-[CLLocationManager onClientEventError:]
CoreLocation: could not get error
-[CLLocationManager onClientEventRegion:]
CoreLocation: could not get region monitoring event
-[CLLocationManager onClientEventRegionState:]
CoreLocation: could not get the region state
-[CLLocationManager onClientEventRegionError:]
-[CLLocationManager onClientEventRanging:]
CoreLocation: could not get ranged beacons
-[CLLocationManager onClientEventRanging:]_block_invoke
CoreLocation: Client beacon is invalid (count,%lu).
v32@?0@8Q16^B24
proximity
accuracy
-[CLLocationManager onClientEventRangingError:]
CoreLocation: could not get ranging error
-[CLLocationManager onClientEventPeerRanging:]
CoreLocation: WRTT: received onClientEventPeerRanging
-[CLLocationManager onClientEventPeerRangingError:]
CoreLocation: WRTT: received onClientEventPeerRangingError
kCLConnectionMessageErrorsKey
[peers count] == [errors count]
-[CLLocationManager onClientEventRegionResponseDelayed:]
-[CLLocationManager onClientEventRegionSetupCompleted:]
-[CLLocationManager onClientEventAutopauseStatus:]
CoreLocation: could not get updated paused state
-[CLLocationManager onClientEventBatch:]
CoreLocation: could not get batch result
success
CoreLocation: Finished deferred updates: %s
-[CLLocationManager onClientEventVehicleSpeed:]
CoreLocation: could not get updated vehicle speed
-[CLLocationManager onClientEventVehicleHeading:]
CoreLocation: could not get updated vehicle heading
kCLConnectionMessageSignificantLocationVisitKey
kCLConnectionMessageMicroLocationKey
microlocationResults
assert
handler
+[CLLocationManager dumpDiagnosticFilesWithHandler:]
CoreLocation: dumpDiagnosticFiles called, trying to make an xpc call
com.apple.locationd.diagnostic
+[CLLocationManager dumpDiagnosticFilesWithHandler:]_block_invoke
CoreLocation: #diagnosticManager failed to get remoteObjectProxy with error %@
v16@?0@"NSError"8
CoreLocation: #diagnosticManager error copying files: %@
v24@?0@"NSArray"8@"NSError"16
locationServicesAvailable
TB,R,N
locationServicesApproved
expectedGpsUpdateInterval
Td,R,N
supportInfo
TB,N
bestAccuracy
internalClient
T^{__CLClient=},R,N
persistentMonitoringEnabled
TB,N,GisPersistentMonitoringEnabled
locationServicesPreferencesDialogEnabled
TB,N,GisLocationServicesPreferencesDialogEnabled
dynamicAccuracyReductionEnabled
TB,N,GisDynamicAccuracyReductionEnabled
allowsAlteredAccessoryLocations
privateMode
T@"<CLLocationManagerDelegate>",N
locationServicesEnabled
purpose
T@"NSString",C,N
activityType
Tq,N
distanceFilter
Td,N
desiredAccuracy
pausesLocationUpdatesAutomatically
allowsBackgroundLocationUpdates
T@"CLLocation",R,C,N
headingAvailable
headingFilter
headingOrientation
Ti,N
heading
T@"CLHeading",R,C,N
maximumRegionMonitoringDistance
monitoredRegions
T@"NSSet",R,C,N
-[CLLocationManager(VehicleData) startUpdatingVehicleSpeed]
CoreLocation: Start updating vehicle speed
-[CLLocationManager(VehicleData) stopUpdatingVehicleSpeed]
CoreLocation: Stop updating vehicle speed
-[CLLocationManager(VehicleData) startUpdatingVehicleHeading]
CoreLocation: Start updating vehicle heading
-[CLLocationManager(VehicleData) stopUpdatingVehicleHeading]
CoreLocation: Stop updating vehicle heading
matchInfoEnabled
TB,N,GisMatchInfoEnabled
LocationCount
Locations
LocationsPrivate
Attempt to write value multiple times
ERROR
WARNING
STATUS
INFO
VERBOSE
NONE
Direct
LOCATION
SENSOR
FENCE
com.apple.locationd
com.apple.springboard
LocationServicesEnabledIn8.0
GestureServiceEnabled
DeviceOrientationServiceEnabled
LocationServicesAvailable
ResetLocationWarnings
KnownClients
PrivateMode
com.apple.locationd/kClientConfirmedCount
com.apple.locationd/Prefs
com.apple.ManagedConfiguration.profileListChanged
com.apple.locationd.DumpDiagnostics
OscarEmulation
com.apple.locationd.notbackedup
com.apple.carrier
com.apple.operator
NSLocationUsageDescription
NSLocationAlwaysUsageDescription
NSLocationWhenInUseUsageDescription
CFRunLoopRef CLCommonGetRunLoop()
CoreLocation: ***no run loop available***
***no run loop available***
Location %s
void CLCommonSetRunLoop(CFRunLoopRef)
CoreLocation: Changing CLCommon's runloop after it was already established
CoreLocation: Setting CLCommon's runloop after it was already established
CoreLocation: CLCommonSetRunLoop, %p
mobile
int CLCommonCopyFile(const char *, const char *)
CoreLocation: cannot open source file: %s, errno %d
cannot open source file: %s, errno %d
CoreLocation: cannot open target file: %s, errno %d
cannot open target file: %s, errno %d
CoreLocation: error reading source file: %s
error reading source file: %s
CoreLocation: error writing target file: %s
error writing target file: %s
int CLCommonBzipFile(const char *, const char *)
CoreLocation: cannot open compression stream: %s, bzerror %d
cannot open compression stream: %s, bzerror %d
CoreLocation: error writing target file: %s, bzerror: %d
error writing target file: %s, bzerror: %d
CoreLocation: error closing target file: %s, bzerror: %d
error closing target file: %s, bzerror: %d
decompress:%@
bool CLCommonGzipDecompressFile(const char *, const char *)
CoreLocation: CLCommonGzipDecompressFile, can't stat, %s
CLCommonGzipDecompressFile, can't stat, %s
CoreLocation: CLCommonGzipDecompressFile, from, %s, to, %s, size, %llu, cTime, %.1lf, isOK, %d
CoreLocation: CLCommonGzipDecompressFile, can't open, file_path_to, %s, errno %d
CLCommonGzipDecompressFile, can't open, file_path_to, %s, errno %d
CoreLocation: CLCommonGzipDecompressFile, can't open, file_path_from, %s, errno, %d
CLCommonGzipDecompressFile, can't open, file_path_from, %s, errno, %d
CoreLocation: CLCommonGzipDecompressFile, error reading source file: %s, errno, %d, read, %d
CLCommonGzipDecompressFile, error reading source file: %s, errno, %d, read, %d
CoreLocation: CLCommonGzipDecompressFile, can't write, %s, errno, %d, write, %zu
CLCommonGzipDecompressFile, can't write, %s, errno, %d, write, %zu
CoreLocation: CLCommonGzipDecompressFile, from, %s, to, %s, isOK, %d, fileSize, %llu, totalReadBytes, %u, totalWrittenBytes, %u, compression, %.4lf
compress:%@
%a, %d %b %Y %T %Z
Date
int CLCommonGetTimeFromHttpHeaderAndRtt(CFDictionaryRef, const CFTimeInterval *, CFAbsoluteTime *)
CoreLocation: http date string is converted to timestamp %.3f and adjusted to %.3f by %.3fs RTT (%.3fs diff from systime)
en_US
%.3f
%.1f
BKDigitizerSignpostsEnabled
com.apple.backboardd
bool CLCommonIsGpsNetworkTestMode()
CoreLocation: GPS_NETWORK: enabled %d found %d
void CLCommonSetTimerNowPlusDelay(CFRunLoopTimerRef, CFTimeInterval)
CoreLocation: Timer set loop: %d %f %f %f %f
CFRunLoopTimerRef CLCommonCreateIntervalRunLoopTimer(CFTimeInterval, CFRunLoopTimerContext *, CFRunLoopTimerCallBack)
Boolean CLCommonCompareLocationEqualityClient(const CLClientLocation *, const CLClientLocation *)
CoreLocation: CLCommonCompareLocationEqualityClient compared two coordinates that were identical other than their reference frames: (%lf, %lf, %d) (%lf, %lf, %d)
CLCommonCompareLocationEqualityClient compared two coordinates that were identical other than their reference frames: (%lf, %lf, %d) (%lf, %lf, %d)
bool CLCommonGetFileTimestamps(const char *, CFAbsoluteTime *, CFAbsoluteTime *, CFAbsoluteTime *, off_t *)
CoreLocation: CLCommonGetFileTimestamps, failed to stat file, %s, ret, %d
bool CLCommonTouchMTimestamp(const char *)
CoreLocation: CLCommonTouchMTimestamp, utimes failed, ret, %d, file, %s
CLCommonTouchMTimestamp, utimes failed, ret, %d, file, %s
void CLCommonDeleteFileIfExists(const char *)
CoreLocation: TILE: delete file, %s
CoreLocation: TILE: stat, %s, ret, %d, mtime, %lu, ctime, %lu, size, %lld
CoreLocation: TILE: unlink, %s, ret, %d
bool CLCommonSetFileProtectionClass(const char *, int)
CoreLocation: failed, invalid filename
CoreLocation: failedToOpen, errno, %d
CoreLocation: failed,fd,%d,origProtectionClass,%d,newProtectionClass,%d,ret,%d,errno,%d
CoreLocation: done,fd,%d,origProtectionClass,%d,newProtectionClass,%d,ret,%d
kCLClientRegistrationResultAllowedAlways
kCLClientRegistrationResultAllowedWhenInUse
kCLClientRegistrationResultFailedUserDenied
kCLClientRegistrationResultFailedBlacklisted
kCLClientRegistrationResultFailedUnavailable
kCLClientRegistrationResultRequiresAgent
kCLClientRegistrationResultMissing
UNKNOWN
kCLClientAuthorizationStatusNotDetermined
kCLClientAuthorizationStatusRestricted
kCLClientAuthorizationStatusDenied
kCLClientAuthorizationStatusAuthorizedAlways
kCLClientAuthorizationStatusAuthorizedWhenInUse
%03d,%03d,0x%x,0x%x
%03d,%03d,0x%x
GpsNetworkCtrl
__TEXT
Binary Images:
armv6
armv7
unknown
%16p - %lld %c%s %s <
%02X
> %s
v32@?0@"NSString"8@16^B24
nullptr key not allowed
No value written for object
_CLLocationSmootherProxy, %p
com.apple.locationd.smoother
T@"<CLLocationSmootherDelegate>",N,V_delegate
locationManagerSmoother
T@"CLLocationSmoother",N,V_locationManagerSmoother
locationManagerSmootherProxy
T@"_CLLocationSmootherProxy",&,N,V_locationManagerSmootherProxy
T@"<CLLocationManagerDelegateInternal>",N
kCLLocationMatchInfoCodingKeyMatchQuality
kCLLocationMatchInfoCodingKeyMatchCoordinateLatitude
kCLLocationMatchInfoCodingKeyMatchCoordinateLongitude
kCLLocationMatchInfoCodingKeyMatchCourse
kCLLocationMatchInfoCodingKeyMatchFormOfWay
kCLLocationMatchInfoCodingKeyMatchRoadClass
kCLLocationMatchInfoCodingKeyMatchShifted
matchQuality %ld matchCoordinate <%+.8f,%+.8f> matchCourse %.2f matchFormOfWay %d matchRoadClass %d matchShifted %d
%ld <%+.8f,%+.8f> %.2f %d %d %d
supportsSecureCoding
TB,R
matchQuality
Tq,R,N
matchCoordinate
T{CLLocationCoordinate2D=dd},R,N
matchCourse
matchFormOfWay
Ti,R,N
matchRoadClass
matchShifted
TB,R,N,GisMatchShifted
UIApplication
static bool CLNameValuePair::encodeBase64(const void *, unsigned long, std::string &)
CoreLocation: processed %p %d to (%s)
CLNameValuePair::CLNameValuePair()
CoreLocation: could not create new mutable dictionary
could not create new mutable dictionary
CLNameValuePair::CLNameValuePair(CFDictionaryRef)
CLNameValuePair::CLNameValuePair(const CLNameValuePair &)
CLNameValuePair &CLNameValuePair::operator=(const CLNameValuePair &)
virtual bool CLNameValuePair::loadFromFile(const char *)
CoreLocation: could not deserialize property list from %s
could not deserialize property list from %s
CoreLocation: file %s does not exist... clearing, error, %s
CoreLocation: Error reading file %s: %s
Error reading file %s: %s
bool CLNameValuePair::writeDataToFile(const char *, CFDataRef, CLNVPDataProtection) const
CoreLocation: Could not create NSURL for file: %s
Could not create NSURL for file: %s
CoreLocation: Could not write data to disk %s
Could not write data to disk %s
virtual bool CLNameValuePair::saveToFile(const char *) const
CoreLocation: Could not serialize data for file %s
Could not serialize data for file %s
virtual bool CLNameValuePair::saveToBinaryFile(const char *, CLNVPDataProtection) const
virtual void CLNameValuePair::clearInternal(const CFStringRef, int)
CoreLocation: key %s does not have element %d in array of size %ld
key %s does not have element %d in array of size %ld
CoreLocation: key %s does not have element %d in non-array type %lu
key %s does not have element %d in non-array type %lu
virtual bool CLNameValuePair::get(CFStringRef, CFArrayRef &) const
CoreLocation: type IDs do not match for key %s - %lu vs %lu
type IDs do not match for key %s - %lu vs %lu
virtual bool CLNameValuePair::get(CFStringRef, CFDataRef &, int) const
virtual bool CLNameValuePair::get(CFStringRef, CFStringRef &, int) const
virtual bool CLNameValuePair::copyInternal(CFStringRef, CFTypeRef &, int) const
CoreLocation: specified index is out of range for key %s (%d of %ld)
specified index is out of range for key %s (%d of %ld)
CoreLocation: specified index %d not applicable to type %lu for key %s
specified index %d not applicable to type %lu for key %s
virtual bool CLNameValuePair::set(CFStringRef, const bool &)
CoreLocation: could not create cf type for key %s
could not create cf type for key %s
virtual bool CLNameValuePair::set(CFStringRef, const uint16_t &)
virtual bool CLNameValuePair::set(CFStringRef, const short &)
virtual bool CLNameValuePair::set(CFStringRef, const uint32_t &)
virtual bool CLNameValuePair::set(CFStringRef, const int64_t &)
virtual bool CLNameValuePair::set(CFStringRef, const int &)
virtual bool CLNameValuePair::set(CFStringRef, const long &)
virtual bool CLNameValuePair::set(CFStringRef, const double &)
virtual bool CLNameValuePair::set(CFStringRef, const char *)
virtual bool CLNameValuePair::set(CFStringRef, const CLNameValuePair &)
virtual bool CLNameValuePair::insert(CFStringRef, const bool &)
virtual bool CLNameValuePair::insert(CFStringRef, const uint16_t &)
virtual bool CLNameValuePair::insert(CFStringRef, const short &)
virtual bool CLNameValuePair::insert(CFStringRef, const uint32_t &)
virtual bool CLNameValuePair::insert(CFStringRef, const int64_t &)
virtual bool CLNameValuePair::insert(CFStringRef, const int &)
virtual bool CLNameValuePair::insert(CFStringRef, const long &)
virtual bool CLNameValuePair::insert(CFStringRef, const double &)
virtual bool CLNameValuePair::insert(CFStringRef, const char *)
virtual bool CLNameValuePair::insert(CFStringRef, const CLNameValuePair &)
virtual bool CLNameValuePair::serializeBinary(CFDataRef *) const
CoreLocation: could not create write stream
could not create write stream
CoreLocation: could not open write stream
could not open write stream
CoreLocation: could not write data, error code, %ld, error domain, %s
could not write data, error code, %ld, error domain, %s
unknown error
virtual bool CLNameValuePair::deserialize(const CFDataRef)
CoreLocation: could not create intermediate property list - %ld (%s)
could not create intermediate property list - %ld (%s)
virtual void CLNameValuePair::print() const
CoreLocation: %s
<empty>
void CLNameValuePair::printCSV(const char *)
CoreLocation: dictionary, %s, NULL
static void CLNameValuePair::printKeyValue(const void *, const void *, void *)
CoreLocation: 
%s = <dictionary (%ld entries)>:
CoreLocation: 
%s = %s
CoreLocation: 
%s = %0.6f
CoreLocation: 
%s = %d
CoreLocation: 
%s = <unhandled value type %lu>
type ID does not match - %lu vs %lu
%s = <dictionary (%ld entries)>:
%s = %s
%s = %0.6f
%s = %d
%s = <unhandled value type %lu>
%s[%d]
static bool CLNameValuePair::fromCfType(const CFTypeRef, short &)
CoreLocation: could not get value
could not get value
static bool CLNameValuePair::fromCfType(const CFTypeRef, int64_t &)
static bool CLNameValuePair::fromCfType(const CFTypeRef, int &)
static bool CLNameValuePair::fromCfType(const CFTypeRef, long &)
static bool CLNameValuePair::fromCfType(const CFTypeRef, double &)
CoreLocation: type IDs do not match - %lu vs %lu
type IDs do not match - %lu vs %lu
static bool CLNameValuePair::fromCfType(const CFTypeRef, std::string &)
CoreLocation: could not convert to C string
could not convert to C string
CoreLocation: can't convert %u data bytes
can't convert %u data bytes
CoreLocation: type IDs do not match - %lu
type IDs do not match - %lu
static bool CLNameValuePair::fromCfType(const CFTypeRef, const char *&, unsigned int &)
static bool CLNameValuePair::fromCfType(const CFTypeRef, CLNameValuePair &)
%s.%ld
void _printCSV_logKeyValue(const void *, const void *, void *)
CoreLocation: dictionary, %s, key, %s, value, %s
CoreLocation: dictionary, %s, key, %s, value, %.8lf
CoreLocation: dictionary, %s, key, %s, value, %d, 0x%08x
CoreLocation: dictionary, %s, key, %s, value, %d, [CFBoolean]
CoreLocation: dictionary, %s, key, %s, value, %.2lf, [CFDate]
CoreLocation: dictionary, %s, key, %s, un-printable value
/System/Library/PrivateFrameworks/CompassUI.framework/CompassUI
void CLClientLoadCompassUIIfNecessary()
CoreLocation: Unable to load CompassUI framework
CUICalibration
CoreLocation: Could not load CUICalibrationClass from CompassUI framework
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2101.0.62/Daemon/CSI/CLMachThreadSupport.mm
virtual void BasicMutex::lock()
CoreLocation: Assert Failed, %s, %d
Assert Failed, %s, %d
CoreLocation: locationd assert: %s, %d
<unnamed>
CoreLocation: TIMEOUT: Waited %f seconds to aquire lock '%s' (%p)
virtual void BasicMutex::unlock()
CoreLocation: TIMEOUT: Held lock '%s' (%p) for %f seconds
virtual DestructionAwareMutex::~DestructionAwareMutex()
Condition::WaitStatus Condition::wait(Mutex *, int)
class
<%@: %p>
v32@?0@"NSObject"8@"NSObject"16^B24
code
domain
userInfo
null
Infinity
-Infinity
kCLHeadingCodingKeyMagneticHeading
kCLHeadingCodingKeyTrueHeading
kCLHeadingCodingKeyAccuracy
kCLHeadingCodingKeyX
kCLHeadingCodingKeyY
kCLHeadingCodingKeyZ
kCLHeadingCodingKeyTimestamp
magneticHeading %.2f trueHeading %.2f accuracy %.2f x %+.3f y %+.3f z %+.3f @ %@
magneticHeading
trueHeading
headingAccuracy
timestamp
T@"NSDate",R,C,N
com.apple.locationd.Motion
Calorimetry
Swimming
Activity
Motion
Pocket
Orientation
EarGesture
WakeGesture
DeviceMotion
Sensors
Compass
Gyro
Accel
Pressure
Fall
com.apple.locationd.Position
Position
Proximity
GeneralCLX
WifiPosition
GeoFencing
Gnss
Emergency
com.apple.locationd.Core
Client
Core
Routine
Harvester
com.apple.locationd.Utility
Database
Network
Utility
com.apple.locationd.Legacy
Location
Sensor
Fence
virtual bool CLPreferences::serialize(CFDataRef *) const
CoreLocation: ***not supported***
***not supported***
virtual bool CLPreferences::serializeBinary(CFDataRef *) const
virtual bool CLPreferences::deserialize(const CFDataRef)
virtual void CLPreferences::print() const
CoreLocation: 
<empty>
virtual void CLPreferences::merge(const CLPreferences &, bool)
virtual bool CLPreferences::loadFromFile(const char *)
virtual bool CLPreferences::saveToFile(const char *) const
virtual bool CLPreferences::saveToBinaryFile(const char *) const
virtual void CLPreferences::setInternal(const CFStringRef, const CFTypeRef)
CoreLocation: Attempt to set key %s for read-only preferences %s/%s!
Attempt to set key %s for read-only preferences %s/%s!
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2101.0.62/Daemon/Utilities/CLPreferences.mm
virtual bool CLPreferences::containsInternal(CFStringRef) const
kCLErrorDomain
kCLErrorDomainPrivate
kCLErrorUserInfoAlternateRegionKey
gas-gauge-battery
IsSimulator
%@ %@ (%@)
<null>
<name>
<version>
<build>
hw.model
hw.machine
Apple 
 CoreLocation-
IOPlatformExpertDevice
IOPlatformSerialNumber
NotAvailable
CLPlatformInfo::Provider CLPlatformInfo::getProviders()_block_invoke
CoreLocation: unknown hardware type %{private}d
UseNewGnssArchitecture
watch-companion
GpsEnableLPPM
GpsEnableGnssRfConfig
bool CLPlatformInfo::getDateFromSerialNumber(const std::string &, CFAbsoluteTime &)
CoreLocation: device SN date info type:%{private}zd - date:%{private}d %{private}d %{private}f
CoreLocation: Invalid year/week code
CoreLocation: Failed to allocate CFCalendar
CoreLocation: CFCalendarComposeAbsoluteTime() failed
CoreLocation: Cannot get weekday
CoreLocation: Cannot get week
CoreLocation: Invalid serial number format: %{private}s
bool CLPlatformInfo::supportsCampOnly()
CoreLocation: CAMP: device id [%d] [%s], camping support [%d]
ReleaseType
NonUI
InternalBuild
GpsForceSuplSupportIgnoringHw
bool CLPlatformInfo::supportsSupl()
CoreLocation: #warning SUPL: ignoring hw. forceSuplSupport,%d
GpsForceLppSupport
bool CLPlatformInfo::supportsLpp()
CoreLocation: #warning LPP: ignoring hw. forceLppSupport,%d
BeaconFenceBestEffortAlways
bool CLPlatformInfo::supportsBeaconBestEffortAlwaysEnabled()
CoreLocation: #warning Overriding BeaconFenceBestEffortAlways,%d
CoreLocation: zoneBestEffortAlwaysEnabled,%d
GnssPeakAntennaGain
CLPlatformInfo::GnssRfConfig CLPlatformInfo::getGnssRfConfig()
CoreLocation: #warning GNSSRF: overriding peak antenna gain, %d tenth-dB
CoreLocation: GNSSRF: no config for %d
CoreLocation: GNSSRF: peakAntennaGain,%d,gpsLoss,%d,gloLoss_0,%d,gloLoss_minus7,%d,gloLoss_plus6,%d
GpsForcePlosSupport
bool CLPlatformInfo::supportsPLOS()
CoreLocation: PLOS: ignoring hw. forceSupport,%d
GpsForceSupportOutdoorMatching
bool CLPlatformInfo::supportsOutdoorMatching()
CoreLocation: #warning OBM, ignoring hw. forceSupport,%d
wlan
IOService
wifi-antenna-sku-info
static bool CLPlatformInfo::isDeviceJapanSKU()
CoreLocation: data for wifi-antenna-sku-info found
CoreLocation: Device SKU:%s
CoreLocation: wifi-antenna-ski-info property not found.
CoreLocation: service for class wlan NOT found.
CoreLocation: class wlan NOT found.
com.apple.demo-settings
StoreDemoMode
FProgramNumber
/private/var/Managed Preferences/
/Library/Caches/locationd/
root
static std::string CLPersistentStore::getMutableStorePath(CLPersistentStoreType)
CoreLocation: could not get mutable store path for type, %d
could not get mutable store path for type, %d
/System/Library/Frameworks/CoreLocation.framework/Support/
/System/Library/Frameworks/CoreLocation.framework
/Library/locationd/
CLPersistentStore::CLPersistentStore(CLSilo *, const char *, CLPersistentStore::Domain, CLPersistentStoreType, CLPersistentStoreDataProtection)
CoreLocation: Unknown persistent domain: %d
Unknown persistent domain: %d
CoreLocation: could not create path %s
could not create path %s
.plist
virtual bool CLPersistentStore::refresh()
CoreLocation: persistent store %s has been modified - refreshing will lose changes
virtual bool CLPersistentStore::store()
CoreLocation: data set %s is not changeable - not storing
CoreLocation: %s stored to disk %s
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2101.0.62/Daemon/Utilities/CLPersistentStore.mm
virtual void CLPersistentStore::setStoreInterval(const CFTimeInterval &, CFRunLoopTimerCallBack, void *)
CoreLocation: scheduling to auto-store %s every %.3fs
CoreLocation: disabling auto-store for %s
(Unspecified)
kCLConnectionMessageInUseAssertion
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2101.0.62/Framework/CoreLocation/CLRegion.m
onBehalfOfConversion == true
CLRegion (identifier:'%@', center:<%+.8f,%+.8f>, radius:%.2fm)
clientRegion
T{?=[512c][512c]iBBB(?={?=[512c]SSiB}{?={?=dd}ddi})},R,N
onBehalfOfBundleId
conservativeEntry
referenceFrame
center
radius
identifier
T@"NSString",R,C,N
notifyOnEntry
notifyOnExit
kCLRegionCodingKeyCenterLatitude
kCLRegionCodingKeyCenterLongitude
kCLRegionCodingKeyRadius
kCLRegionCodingKeyIdentifier
kCLRegionCodingKeyOnBehalfOfBundleId
kCLRegionCodingKeyNotifyOnEntry
kCLRegionCodingKeyNotifyOnExit
kCLRegionCodingKeyConservativeEntry
reserved
CLCircularRegion (identifier:'%@', center:<%+.8f,%+.8f>, radius:%.2fm)
kCLCircularRegionCodingKeyCenterLatitude
kCLCircularRegionCodingKeyCenterLongitude
kCLCircularRegionCodingKeyRadius
CLBeaconRegionAnyIdentifier
CLBeaconRegion (identifier:'%@', uuid:%@, major:%@, minor:%@)
proximityUUID
T@"NSUUID",R,C,N
major
T@"NSNumber",R,C,N
minor
notifyEntryStateOnDisplay
CLBeacon (uuid:%@, major:%@, minor:%@, proximity:%d +/- %.2fm, rssi:%ld)
rssi
kCLBeaconRegionCodingKeyProximityUUID
kCLBeaconRegionCodingKeyMajor
kCLBeaconRegionCodingKeyMinor
kCLBeaconRegionNotifyEntryStateOnDisplay
kCLBeaconCodingKeyProximityUUID
kCLBeaconCodingKeyMajor
kCLBeaconCodingKeyMinor
kCLBeaconCodingKeyProximity
kCLBeaconCodingKeyAccuracy
kCLBeaconCodingKeyRSSI
void CLMapDataUtil::CovarInvDet::init(const double &, const double &, const double &)
CoreLocation: invalid hunc
invalid hunc
void CLMapDataUtil::CovarInvDet::init(const double &, const double &, const double &, const double &, const double &)
CoreLocation: invalid inputs
invalid inputs
void CLMapDataUtil::CovarInvDet::calcInvAndDet()
CoreLocation: fVarEast <= 0.0
fVarEast <= 0.0
CoreLocation: fVarNorth <= 0.0
fVarNorth <= 0.0
CoreLocation: fVarEastNorth < 0.0
fVarEastNorth < 0.0
CoreLocation: CLMM, Unexpected determinant of 0
CLMM, Unexpected determinant of 0
void CLMapDataUtil::calculateScoreAndVarFactor(const CLMapDataUtil::CovarInvDet &, const double &, const double &, const double &, const double &, double &, double &)
CoreLocation: determinant <= 0.0
determinant <= 0.0
com.apple.locationd.spi
com.apple.locationd.synchronous
Boolean CLGetControlPlaneStatusReport(int, CFAbsoluteTime *, CFAbsoluteTime *, double *, double *, double *, double *, unsigned int *)
CoreLocation: Blocking Mig routine deferred on Daemon side... waiting and retrying
CFDictionaryRef CLCopyAppsUsingLocation()
CoreLocation: List of apps using location is not a dictionary -- type ID %lu
List of apps using location is not a dictionary -- type ID %lu
CFArrayRef CLCopyTechnologiesInUse()
CoreLocation: List of technologies in use is not an array -- type ID %lu
List of technologies in use is not an array -- type ID %lu
void CLInternalSetLocationServicesEnabled(Boolean)
CoreLocation: CLInternalSetLocationServicesEnabled failed
CLInternalSetLocationServicesEnabled failed
void CLInternalSetGestureServiceEnabled(Boolean)
CoreLocation: CLInternalSetGestureServiceEnabled failed
CLInternalSetGestureServiceEnabled failed
Boolean CLInternalGetAuthorizationStatus(CFStringRef, CFStringRef, CLClientAuthorizationStatus *)
CoreLocation: Couldn't send bundle identifier!
Couldn't send bundle identifier!
CoreLocation: Couldn't send bundle path!
Couldn't send bundle path!
Boolean CLInternalGetAuthorizationStatusForService(CFStringRef, CFStringRef, CLClientServiceTypeMask, CLClientAuthorizationStatus *)
Boolean CLInternalPerformMigration()
CoreLocation: _CLIntegrityCheck failed with result: %d
_CLIntegrityCheck failed with result: %d
Boolean CLShutdownDaemon()
CoreLocation: _CLShutdownDaemon failed with result: %d
_CLShutdownDaemon failed with result: %d
Boolean CLDisplayStatistics()
CoreLocation: _CLDisplayStatistics failed with result: %d
_CLDisplayStatistics failed with result: %d
Boolean CLDumpLogs(CFStringRef)
CoreLocation: _CLDumpLogs failed with result: %d
_CLDumpLogs failed with result: %d
Boolean CLCopyLastLog()
CoreLocation: _CLCopyLastLog failed with result: %d
_CLCopyLastLog failed with result: %d
CFDictionaryRef CLCopyMonitoredRegions(CFStringRef, CFStringRef)
CoreLocation: Returned type is not a dictionary
Returned type is not a dictionary
void CLSetLocationDefault(CFStringRef, CFPropertyListRef)
CoreLocation: Key is NULL!
Key is NULL!
CoreLocation: Couldn't set location default!
Couldn't set location default!
other
vehicularNavigation
fitness
void CLSetAutopauseState(_Bool, _Bool, _Bool)
CoreLocation: Couldn't set autopause state!
Couldn't set autopause state!
Boolean CLGetLocation(CFStringRef, CFStringRef, Boolean, Boolean, CLClientLocation *)
NSTimeZone *CLTimeZoneAtLocation(CLLocation *)
<Unknown Function>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2101.0.62/MiG/LocationInternal.m
nil != location
CLStartStopAdvertisingBeacon %@
_Bool CLStartStopAdvertisingBeacon(CLBeaconRegion *, NSNumber *)
CoreLocation: CLStartStopAdvertisingBeacon beacon: %s, power: %s
com.apple.locationd.appreset
com.apple.locationd.appstatus
com.apple.locationd.techstatus
com.apple.locationd.started
com.apple.locationd.statusbar
com.apple.locationd.authorization
%+08.4lf%+09.4lf/
%+08.4lf%+09.4lf%+08.3lf/
SimulationScenarios
Couldn't get list of location simulation scenarios
plist
Selected location simulation scenario is not a file URL
Selected location simulation scenario does not exist
Selected location simulation scenario is not a property list
Path to location simulation scenario is too long
CLSimulation: Unrecognized location delivery behavior!
CLSimulation: Couldn't set location delivery behavior!
CLSimulation: Couldn't set intermediate location distance!
CLSimulation: Couldn't set location interval!
CLSimulation: Couldn't set location travelling speed!
CLSimulation: Couldn't set location repeat behavior!
CLSimulation: Couldn't clear simulated locations!
CLSimulation: Object passed to appendSimulatedLocation is not a CLLocation!
CLSimulation: Couldn't serialize simulated locations to append!
CLSimulation: Couldn't append simulated locations!
CLSimulation: Couldn't start location simulation!
CLSimulation: Couldn't stop location simulation!
CLSimulation: Couldn't clear simulated cells!
CLSimulation: Couldn't serialize simulated cells to append!
CLSimulation: Couldn't append simulated cells!
CLSimulation: Couldn't start cell simulation!
CLSimulation: Couldn't stop cell simulation!
CLSimulation: Couldn't set cell registration status!
CLSimulation: Couldn't serialize simulated Wifi scan results to append!
CLSimulation: Couldn't append simulated Wifi scan results!
CLSimulation: Couldn't start Wifi simulation!
CLSimulation: Couldn't stop Wifi simulation!
CLSimulation: Couldn't set Wifi power!
CLSimulation: Couldn't flush!
locationDeliveryBehavior
Ti,N,V_locationDeliveryBehavior
locationDistance
Td,N,V_locationDistance
locationInterval
Td,N,V_locationInterval
locationSpeed
Td,N,V_locationSpeed
locationRepeatBehavior
Ti,N,V_locationRepeatBehavior
com.apple.locationd.simulation
Unable to archive object: %@
CLSimulationWifiAccessPointMacAddress
CLSimulationWifiAccessPointRssi
CLSimulationWifiAccessPointMode
CLSimulationWifiAccessPointChannel
CLSimulationWifiAccessPointAge
void CLWriteStackshot(const char *, _Bool)
CoreLocation: stackshot only available on device
LogFile
LogFileDirectory
LogFilePrefix
LogFileFlush
ShowError
LogFence
LogBufferSize
LogShowUI
LogFileLevel
LogBufferLevel
LogConsoleLevel
LogStackLevel
LogLocations
LogLocationsFile
LogLocationsFlush
.log
com.apple.locationd.log.compression
vlog
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2101.0.62/Shared/Logging/CLLog.mm
newFullContentLength == fullContentLength
fullContentLength + 1 < bufferLength
%s,%s,Time,%08.3f,Function,"%s",
%s,%s,Time,%08.3f,
%s,%s,logging locations to %s%s
NOTICE
CLLog
 and flushing immediately
 no flush
%s,%s,logging locations to an internal buffer with capacity %d
.bz2
%s,%s,Failed to move aside log file %s (%d)
.log.bz2
%s/%s
Failed to delete log
%s,%s,Rotation path is too long, could not delete old logs.
C16@?0r*8
%s,%s,Failed to write %s
%s,%s,could not open locations log %s, errno %d
Unplugged!
void CLLog::logHeader()
CoreLocation-%s
locationd was compiled on %s at %s
Feb 20 2017
18:59:40
%s @ system model %s / version %s
/usr/libexec/locationd @ system model %s / version %s
IOPlatformSerialNumber: %s
Begin settings dump (read at construction of CLSettings or upon darwin notification 'com.apple.locationd/prefs')
End settings dump
%s,%s,CLLog does not honor stderr/stdout unless in backward compatibility mode
com.apple.timed
%s,%s,dumping internal buffer
.txt
%s,%s,copying gll.log
LogNatalimetry
LogCalorimetry
userinfo
cache
.plist.log
%s,%s,could not copy %s log
%s,%s,could not dump log file
%s,%s,Time,%08.3f,%d
0x%08lx %s + %lu
STACK
%s,%s,Time,%08.3f,%d
0x%08lx 0x%08lx + %lu
%s,%s,Time,%08.3f,%d
0x%08lx
kCLVehicleHeadingCodingKeyTrueHeading
kCLVehicleHeadingCodingKeyTimestamp
trueHeading %.2f @ %@
%.2f
T@"NSDate",R,N
kCLVehicleSpeedCodingKeySpeed
kCLVehicleSpeedCodingKeyTimestamp
speed %.2f mps @ %@
%.0fmph
speed
write_escaped_str
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2101.0.62/Shared/Logging/CLJsonLogging.cpp
next.first[0] == '\0'
nullptr != escapedControlChar(next.first[0])
CLCircularLogBuffer
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2101.0.62/Framework/CoreLocation/CLVisit.m
[decoder allowsKeyedCoding]
[encoder allowsKeyedCoding]
<%+.8f,%+.8f> +/- %.2fm (%@ to %@)
hasArrivalDate
hasDepartureDate
detectionDate
T@"NSDate",R,C,N,V_detectionDate
arrivalDate
T@"NSDate",R,C,N,V_arrivalDate
departureDate
T@"NSDate",R,C,N,V_departureDate
coordinate
T{CLLocationCoordinate2D=dd},R,N,V_coordinate
horizontalAccuracy
Td,R,N,V_horizontalAccuracy
kCLVisitCodingKeyLatitude
kCLVisitCodingKeyLongitude
kCLVisitCodingKeyHorizontalAccuracy
kCLVisitCodingKeyArrivalDate
kCLVisitCodingKeyDepartureDate
kCLVisitCodingKeyDetectionDate
long CLCommonGetFileSizeFd(int)
CoreLocation: Failed to get current position for fd %d: %s
Failed to get current position for fd %d: %s
CoreLocation: Failed to get size of fd %d: %s
Failed to get size of fd %d: %s
CoreLocation: Failed to restore to original position of fd %d: %s
Failed to restore to original position of fd %d: %s
-decrypt-XXXXXXXXX.tmp
bool CLCommonDecryptFileAES256(const char *, const char *, const char *)
CoreLocation: Failed to create decryptor. status = %d
Failed to create decryptor. status = %d
CoreLocation: Failed to open input file '%s' to decrypt: %s
Failed to open input file '%s' to decrypt: %s
CoreLocation: Failed to get size of input file %s
Failed to get size of input file %s
CoreLocation: Failed to open temporary output file '%s' to save '%s' to '%s': %s
Failed to open temporary output file '%s' to save '%s' to '%s': %s
CoreLocation: Decrypting '%s' to '%s' via temporary file '%s'
CoreLocation: Failed to read from '%s'.  %lld bytes read successfully.  %s
Failed to read from '%s'.  %lld bytes read successfully.  %s
CoreLocation: Failed to decrypt '%s'.  %lld input bytes decrypted successfully. %d
Failed to decrypt '%s'.  %lld input bytes decrypted successfully. %d
CoreLocation: Failed to write to '%s'.  %lld input bytes decrypted & written successfully. %s
Failed to write to '%s'.  %lld input bytes decrypted & written successfully. %s
CoreLocation: Failed to finalize decryption of '%s': %d
Failed to finalize decryption of '%s': %d
CoreLocation: Failed to write final %zu bytes to '%s': %s
Failed to write final %zu bytes to '%s': %s
CoreLocation: Failed to rename '%s' to '%s'. Decryption of '%s' failed: '%s'
Failed to rename '%s' to '%s'. Decryption of '%s' failed: '%s'
CoreLocation: Decryption of '%s' failed.  Also failed to unlink temporary file '%s': %s
Decryption of '%s' failed.  Also failed to unlink temporary file '%s': %s
CLGeocoder
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
-[CLGeocoder _ticket:didReturnError:partialResultForLocation:]_block_invoke
CoreLocation: Geocode error: %{private}@
geocoding
TB,R,N,GisGeocoding
<%+.8f,%+.8f> radius %.2f
kCLPlacemarkCodingKeyLocation
kCLPlacemarkCodingKeyAddress
kCLPlacemarkCodingKeyRegion
kCLPlacemarkCodingKeyAreasOfInterest
kCLPlacemarkCodingKeyGEOMapItem
Name
Thoroughfare
SubThoroughfare
City
SubLocality
State
SubAdministrativeArea
CountryCode
Country
Street
FormattedAddressLines
InlandWater
Ocean
<%+.8f,%+.8f> +/- %.2fm
, region 
region
T@"CLRegion",R,C,N
timeZone
T@"NSTimeZone",R,C,N
addressDictionary
T@"NSDictionary",R,C,N
name
thoroughfare
subThoroughfare
locality
subLocality
administrativeArea
subAdministrativeArea
postalCode
ISOcountryCode
country
inlandWater
ocean
areasOfInterest
T@"NSArray",R,C,N
static bool CMOQuaternion::northAndGravity(CMVector<float, 3>, CMVector<float, 3>, const float *, CMOQuaternion &, CMMatrix<float, 3> &)
CoreLocation: n and g are too close %f
CoreLocation: Assertion failed: lambda != 0, file /BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2101.0.62/Oscar/Math/CMOQuaternion.cpp, line 223,invalid weights.
Assertion failed: lambda != 0, file /BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2101.0.62/Oscar/Math/CMOQuaternion.cpp, line 223,invalid weights.
CoreLocation: kappa zero!
T CMVector<float, 3>::operator[](const size_t) const [T = float, N = 3]
CoreLocation: Assertion failed: i < N, file /BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2101.0.62/Oscar/Math/CMVector.h, line 272,invalid index %zu >= %zu.
Assertion failed: i < N, file /BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2101.0.62/Oscar/Math/CMVector.h, line 272,invalid index %zu >= %zu.
T CMMatrix<float, 3, 3>::operator[](size_t) const [T = float, M = 3, N = 3]
CoreLocation: Assertion failed: ldx < M*N, file /BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2101.0.62/Oscar/Math/CMMatrix.h, line 78,invalid element %zu >= %zu.
Assertion failed: ldx < M*N, file /BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2101.0.62/Oscar/Math/CMMatrix.h, line 78,invalid element %zu >= %zu.
T &CMMatrix<float, 3, 3>::operator()(size_t, size_t) [T = float, M = 3, N = 3]
CoreLocation: Assertion failed: row < M, file /BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2101.0.62/Oscar/Math/CMMatrix.h, line 71,invalid row %zu > %zu.
Assertion failed: row < M, file /BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2101.0.62/Oscar/Math/CMMatrix.h, line 71,invalid row %zu > %zu.
CoreLocation: Assertion failed: col < N, file /BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2101.0.62/Oscar/Math/CMMatrix.h, line 72,invalid col %zu > %zu.
Assertion failed: col < N, file /BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2101.0.62/Oscar/Math/CMMatrix.h, line 72,invalid col %zu > %zu.
T CMMatrix<float, 3, 3>::operator()(size_t, size_t) const [T = float, M = 3, N = 3]
CoreLocation: Assertion failed: row < M, file /BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2101.0.62/Oscar/Math/CMMatrix.h, line 64,invalid row %zu > %zu.
Assertion failed: row < M, file /BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2101.0.62/Oscar/Math/CMMatrix.h, line 64,invalid row %zu > %zu.
CoreLocation: Assertion failed: col < N, file /BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2101.0.62/Oscar/Math/CMMatrix.h, line 65,invalid col %zu > %zu.
Assertion failed: col < N, file /BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2101.0.62/Oscar/Math/CMMatrix.h, line 65,invalid col %zu > %zu.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2101.0.62/Daemon/Core/CLConnection.mm
CLConnection::~CLConnection()
void CLConnection::handleMessage(std::shared_ptr<CLConnectionMessage>)
CoreLocation: Unhandled message %s
bool CLConnection::sendMessageInternal(std::shared_ptr<CLConnectionMessage>, xpc_handler_t)
CoreLocation: Couldn't create XPC message
Couldn't create XPC message
v16@?0@"NSObject<OS_xpc_object>"8
kCLConnectionMessageInfoKey
kCLConnectionMessageFileDescriptorKey
id<NSSecureCoding> CLConnectionMessage::getObject() const
CoreLocation: The received data object is invalid.
The received data object is invalid.
bool CLConnectionMessage::sendReply(const std::string &, id<NSSecureCoding>)
CoreLocation: Unable to send reply, a reply message does not exist.
Unable to send reply, a reply message does not exist.
bool CLConnectionMessage::sendReply(const std::string &, xpc_object_t)
void setEventHandler(xpc_connection_t, CLConnectionMessageHandler, CLConnectionEventHandler, CLConnectionEventHandler, CLConnectionEventHandler *)_block_invoke
CoreLocation: Connection interrupted!
CoreLocation: Location connection invalid!
CoreLocation: Got unexpected location event
Got unexpected location event
void handleXPCEvent(xpc_object_t, CLConnectionMessageHandler, CLConnection *)
CoreLocation: Error on message reply (%s)
Error on message reply (%s)
CoreLocation: Ignoring unexpected event
Ignoring unexpected event
CLMicroLocationResultProbabilityMetadataKey
CLMicroLocationResultIdentifierMetadataKey
MicroLocationResults
uuid: %@
uuid
T@"NSUUID",R,N,V_uuid
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2101.0.62/Framework/CoreLocation/CLMicroLocation.m
[aDecoder allowsKeyedCoding]
[aCoder allowsKeyedCoding]
Null MicroLocation
MicroLocationResult: %@ probability:%.2f
+[_CLMicroLocationResult microLocationResultWithDictionary:]
CoreLocation: Couldn't find the %s key in the dictionary
CoreLocation: identifier is the wrong data type %s
microlocation
T@"_CLMicroLocation",R,N,V_microlocation
probability
Td,R,N,V_probability
kCLCodingKeyMicroLocationUUID
kCLCodingKeyMicroLocationProbability
com.apple.CoreLocation.ConnectionClient.%p
com.apple.CoreLocation.ConnectionClient.%p.events
B8@?0
void CLConnectionClient::setHandlerForMessage_onQueue(NSString *, CLConnectionMessageHandler)
CoreLocation: Setting handler for message %s
bool CLConnectionClient::sendMessage_onQueue(std::shared_ptr<CLConnectionMessage>, bool)
CoreLocation: Sending an un-cached message without first clearing the previously cached value
Sending an un-cached message without first clearing the previously cached value
static void CLConnectionClient::handleDaemonStart(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)
CoreLocation: received daemon start notification for service %s
void CLConnectionClient::createConnection_onQueue()
CoreLocation: Creating connection
v32@?0@8@16^B24
void CLConnectionClient::destroyConnection_onQueue()
CoreLocation: Destroying connection
void CLConnectionClient::sendCachedMessages_onQueue()
CoreLocation: Sending cached messages to daemon
CoreLocation: No cached registration message
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2101.0.62/Framework/CoreLocation/CLPredictedApplication.m
Do not call -init, call -initWithTitle:developer:adamId:bundleId:icon:installationState:location:distance:startDate:endDate:confidence:.
T@"NSUUID",&,N,V_identifier
icon
T@"NSData",&,N,V_icon
title
T@"NSString",&,N,V_title
bundleId
T@"NSString",&,N,V_bundleId
developer
T@"NSString",&,N,V_developer
adamId
T@"NSNumber",&,N,V_adamId
confidence
T@"NSNumber",&,N,V_confidence
installationState
Tq,N,V_installationState
T@"CLLocation",&,N,V_location
distance
Td,N,V_distance
startDate
T@"NSDate",&,N,V_startDate
endDate
T@"NSDate",&,N,V_endDate
installState
BundleId
BundlePath
Authorization
Authorized
SupportedAuthorizationMask
Registered
AppSwitcherQuitAppTime
LocationTimeStarted
LocationTimeStopped
RemoteLocationTimeStarted
RemoteLocationTimeStopped
FenceTimeStarted
FenceTimeStopped
RemoteFenceTimeStarted
RemoteFenceTimeStopped
SignificantTimeStarted
SignificantTimeStopped
VisitTimeStarted
VisitTimeStopped
RangeTimeStarted
RangeTimeStopped
BeaconRegionTimeStarted
BeaconRegionTimeStopped
CLBundleKeyValueCache
CLSystemService
CLHarvestableSystemService
CLIsFindMyiPhone
CLIsCoreRoutine
CLEmergencyService
CLRequiredCapabilities
double CLDistanceCalc::calculateDistance(const CLDaemonLocation &, const CLDaemonLocation &)
CoreLocation: refAlt < %.1lf,refAlt,%.1lf,using the min
CoreLocation: refAlt > %.1lf,refAlt,%.1lf,using the max
bool CLDistanceCalc::calc_dNdE(double, double, double &, double &)
CoreLocation: latitude,%.7lf,is out of bounds
latitude,%.7lf,is out of bounds
kCLLocationCodingKeyCoordinateLatitude
kCLLocationCodingKeyCoordinateLongitude
kCLLocationCodingKeyHorizontalAccuracy
kCLLocationCodingKeyAltitude
kCLLocationCodingKeyVerticalAccuracy
kCLLocationCodingKeySpeed
kCLLocationCodingKeySpeedAccuracy
kCLLocationCodingKeyCourse
kCLLocationCodingKeyTimestamp
kCLLocationCodingKeyType
kCLLocationCodingKeyLifespan
kCLLocationCodingKeyMatchInfo
kCLLocationCodingKeyFloor
kCLLocationCodingKeyIntegrity
level
Tq,R,N,Vlevel
<%+.8f,%+.8f> +/- %.2fm (speed %.2f mps / course %.2f) @ %@
clientLocation
T{?=ii{?=dd}ddddddddddidi{?=dd}diIii},R,N
iso6709Notation
T@"NSString",R,N
type
rawCoordinate
rawCourse
integrity
TI,R,N
trustedTimestamp
speedAccuracy
altitude
verticalAccuracy
course
floor
T@"CLFloor",R,C,N
matchInfo
T@"CLLocationMatchInfo",R,N
_lvl
_cat
_msg
%13.3lf
CLAssertionInternalQueue
LogFileRotationSize
LogFileStorageCount
CLLogBase
yyyy-MM-dd_HH-mm-ss
/Library/Logs/CrashReporter
Library
Caches
Logs
CrashReporter
move
%s,%s,could not %s log file %s to %s
%s,%s,could not stat %s
%s,%s,failed to open %s
LogDumpOnUnload
LogDumpOnLoad
_internal->fQueue != __null
com.apple.locationd.CLTilesManagerClient
_internal->fXpcConnection != __null
notificationType
com.apple.locationd.CLTilesManagerClient.reconnect
-[CLTilesManagerClient init]
CoreLocation: CLTilesManagerClient: fatal error, cleanup!
-[CLTilesManagerClient executeAsynchronousQuery:onQueue:responseBlock:]
CoreLocation: CLTilesManagerClient: executeAsynchronousQuery, please specify, CLTilesManagerClientKeyDataType
CoreLocation: CLTilesManagerClient: executeAsynchronousQuery, responseBlock is nil
requestType
requestType.query
-[CLTilesManagerClient precacheHint:onQueue:responseBlock:]
CoreLocation: CLTilesManagerClient: precacheHint, please specify, CLTilesManagerClientKeyDataType
CoreLocation: CLTilesManagerClient: precacheHint, please specify, CLTilesManagerClientKeyLatitude
CoreLocation: CLTilesManagerClient: precacheHint, please specify, CLTilesManagerClientKeyLongitude
CoreLocation: CLTilesManagerClient: precacheHint, responseBlock is nil
CoreLocation: CLTilesManagerClient: precacheHint, queue is nil
requestType.precache
requestType.register
requestType.unregister
-[CLTilesManagerClient registerTo:onQueue:block:]
CoreLocation: CLTilesManagerClient: registerTo, please specify, CLTilesManagerClientKeyNotification
CoreLocation: CLTilesManagerClient: registerTo, responseBlock is nil
CoreLocation: CLTilesManagerClient: registerTo, queue is nil
-[CLTilesManagerClient unregisterFrom:]
CoreLocation: CLTilesManagerClient: unregisterFrom, please specify, CLTilesManagerClientKeyNotification
void _onServerIsUp(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)
CoreLocation: CLTilesManagerClient: bad client
xpc_dictionary_get_string(object, [CLTilesManagerClientKeyReturnCode UTF8String]) != __null
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2101.0.62/Framework/CoreLocation/CLRangingPeer.m
(macAddress & 0xFFFF000000000000) == 0
Peer:%@ hasKey:%s
(len >= 11) && (len <= 17)
%02X:%02X:%02X:%02X:%02X:%02X
macAddress
TQ,R,N
secureRangingKeyID
T@"NSData",R,C,N
Peer: %@ time:%@ distance[m]:%.02f accuracy[m]:%.02f unlock:%s secure:%s initiator:%s
peer
T@"_CLRangingPeer",R,C,N
date
distanceMeters
accuracyMeters
initiator
TB,R,N,GisInitiator,V_initiator
shouldUnlock
kCLCodingKeyRangingPeerMacAddress
kCLCodingKeyRangingPeerSecureRangingKeyID
kCLCodingKeyRangingPeerDistancePeer
kCLCodingKeyRangingPeerDistanceTimestamp
kCLCodingKeyRangingPeerDistanceDistance
kCLCodingKeyRangingPeerDistanceAccuracy
kCLCodingKeyRangingPeerDistanceInitiator
kCLCodingKeyRangingPeerDistanceUnlock
kCLConnectionMessageLocationIndependenceAssertion
dataType
dataType.apps
dataType.apps_availability
hUnc
appsArray
rc.ok
rc.error
rc.na
rc.locked
app.id
app.score
availability.age1
availability.age2
availability.age3
availability.age4
notification.app.availability.changed
details
void CLSetMapMatchingRouteHint(uint64_t *, int)
CoreLocation: Exceeded max number of route hint road segments (%d > %d)
CoreLocation: Couldn't set map-matching route hint!
UTF8String
cStringUsingEncoding:
mainBundle
objectForInfoDictionaryKey:
init
stringWithFormat:
createConnection
stringWithUTF8String:
setLocationManagerRoutine:
setDelegate:
setConnection:
dealloc
delegate
locationManager:didUpdateLocations:
respondsToSelector:
locationManagerRoutine
locationManager:didUpdatePredictedApplications:
release
alloc
initWithMachServiceName:options:
didUpdateLocations:
didUpdatePredictedApplications:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
retain
autorelease
retainCount
zone
hash
superclass
description
debugDescription
interfaceWithProtocol:
setExportedInterface:
setExportedObject:
exportedInterface
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
startUpdatingLocation
stopUpdatingLocation
fetchPredictedApplicationsAtLocation:reply:
startUpdatingPredictedApplications
stopUpdatingPredictedApplications
setRemoteObjectInterface:
remoteObjectInterface
serviceName
setInterruptionHandler:
setInvalidationHandler:
resume
updating
connection
remoteObjectProxy
updatingPredictedApplications
initWithCLLocationManagerRoutine:
setUpdating:
setUpdatingPredictedApplications:
_queue
_updating
_updatingPredictedApplications
_connection
_delegate
_locationManagerRoutine
locationManagerRoutineProxy
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
setLocationManagerRoutineProxy:
_locationManagerRoutineProxy
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
fetchPredictedApplicationsAtLocation:handler:
initWithRegistrationMessageName:messageDictionary:
newAssertionWithReason:
bundlePath
onClientEvent:supportInfo:
initWithInfo:bundleIdentifier:bundle:
setPausesLocationUpdatesAutomatically:
PausesLocationUpdatesAutomatically
setAllowsBackgroundLocationUpdates:
allowsBackgroundLocationUpdates
stopUpdatingLocationAutoPaused
cancelLocationRequest
cancelRangingRequest
performCourtesyPromptIfNeeded
rangedRegions
fClient
fDelegate
fDistanceFilter
fDesiredAccuracy
fUpdatingLocation
fLocation
fLocationEventType
fRequestingLocation
fLocationRequestTimer
fLocationRequestTimeout
fRequestingRanging
fUpdatingRanging
fRangingRequestTimer
fRangingRequestTimeout
fCapabilitiesValid
fCapabilities
fUpdatingHeading
fHeadingFilter
fHeadingOrientation
fPersistentMonitoringEnabled
fAllowsLocationPrompts
fAllowsAlteredAccessoryLocations
fDynamicAccuracyReductionEnabled
fPreviousAuthorizationStatusValid
fPreviousAuthorizationStatus
fActivityType
fPausesLocationUpdatesAutomatically
fPaused
fAllowsBackgroundLocationUpdates
fAllowsMapCorrection
fBatchingLocation
fUpdatingVehicleSpeed
fUpdatingVehicleHeading
fMatchInfoEnabled
fCourtesyPromptNeeded
fRangedRegions
defaultCenter
onDidBecomeActive:
addObserver:selector:name:object:
initWithEffectiveBundleIdentifier:bundle:
removeObserver:
locationServicesEnabled
initWithClientLocation:
_authorizationStatus
locationManagerDidResumeLocationUpdates:
locationManager:didFailWithError:
initWithClientHeading:
startMonitoringForRegion:
clientRegion
proximityUUID
locationManager:monitoringDidFailForRegion:withError:
initWithCapacity:
initWithClientRegion:
addObject:
onBehalfOfBundleId
length
removeObject:
count
enumerateObjectsUsingBlock:
locationManager:rangingBeaconsDidFailForRegion:withError:
copy
locationManager:didRangePeers:
locationManager:rangingDidFailForPeer:withError:
countByEnumeratingWithState:objects:count:
setWithArray:
arrayWithObject:
onClientEventAuthStatus:
objectForKeyedSubscript:
boolValue
onClientEventLocation:forceMapMatching:type:
onClientEventLocationUnavailable:
onClientEventHeading:
onClientEventHeadingCalibration:
onClientEventHistoricLocation:
onClientEventError:
onClientEventRegion:
onClientEventRegionState:
onClientEventRegionError:
onClientEventRanging:
onClientEventRangingError:
onClientEventPeerRanging:
onClientEventPeerRangingError:
onClientEventRegionResponseDelayed:
onClientEventRegionSetupCompleted:
onClientEventAutopauseStatus:
onClientEventBatch:
onClientEventInterrupted:
onClientEventVehicleSpeed:
onClientEventVehicleHeading:
onClientEventSignificantLocationVisit:
onClientEventMicroLocations:
locationManager:didReceiveApproval:
locationManager:didChangeAuthorizationStatus:
unmatch
makeObjectsPerformSelector:
lastObject
clientLocation
isEqualToString:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didEnterRegion:withLocation:
locationManager:didEnterRegion:
locationManager:didExitRegion:withLocation:
locationManager:didExitRegion:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
objectAtIndex:
intValue
initWithUUIDString:
integerValue
doubleValue
shortValue
initWithProximityUUID:major:minor:proximity:accuracy:rssi:
sortDescriptorWithKey:ascending:
arrayWithObjects:
sortUsingDescriptors:
objectForKey:
initForReadingWithData:
setRequiresSecureCoding:
decodeObjectOfClasses:forKey:
finishDecoding
objectAtIndexedSubscript:
code
dictionaryWithObject:forKey:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
name
resumeLocationUpdates
pauseLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didUpdateVehicleSpeed:
initWithClientVehicleSpeed:
locationManager:didUpdateVehicleHeading:
initWithClientVehicleHeading:
locationManager:didVisit:
initWithCoder:
locationManager:didUpdateMicroLocations:
decodeObjectOfClass:forKey:
_authorizationStatusForBundleIdentifier:bundle:
_regionMonitoringAuthorizationStatusForBundleIdentifier:bundle:
requestWhenInUseAuthorization
copyRegisteredFilesWithHandler:
remoteObjectProxyWithErrorHandler:
sharedManager
locationServicesEnabled:
setLocationServicesEnabled:
headingAvailable
significantLocationChangeMonitoringAvailable
isMonitoringAvailableForClass:
regionMonitoringAvailable
regionMonitoringEnabled
isRangingAvailable
mapCorrectionAvailable
deferredLocationUpdatesAvailable
isPeerRangingAvailable
authorizationStatusForBundleIdentifier:
authorizationStatusForBundle:
regionMonitoringAuthorizationStatusForBundleIdentifier:
regionMonitoringAuthorizationStatusForBundle:
authorizationStatus
setAuthorizationStatus:forBundleIdentifier:
setAuthorizationStatus:forBundle:
setAuthorizationStatusByType:forBundleIdentifier:
setAuthorizationStatusByType:forBundle:
setDefaultEffectiveBundleIdentifier:
setDefaultEffectiveBundle:
dumpLogsWithMessage:
dumpDiagnosticFilesWithHandler:
shutdownDaemon
bundleSupported:
advertiseAsBeacon:withPower:
initWithEffectiveBundleIdentifier:
initWithEffectiveBundle:
setDistanceFilter:
distanceFilter
setDesiredAccuracy:
desiredAccuracy
pausesLocationUpdatesAutomatically
location
locationServicesAvailable
locationServicesApproved
expectedGpsUpdateInterval
setSupportInfo:
supportInfo
bestAccuracy
internalClient
setPrivateMode:
privateMode
setPurpose:
purpose
setActivityType:
activityType
markAsHavingReceivedLocation
startUpdatingLocationWithPrompt
requestLocation
allowDeferredLocationUpdatesUntilTraveled:timeout:
disallowDeferredLocationUpdates
setHeadingFilter:
headingFilter
setHeadingOrientation:
headingOrientation
heading
startUpdatingHeading
stopUpdatingHeading
dismissHeadingCalibrationDisplay
startAppStatusUpdates
stopAppStatusUpdates
startTechStatusUpdates
stopTechStatusUpdates
startMonitoringSignificantLocationChanges
stopMonitoringSignificantLocationChanges
startMonitoringForRegion:desiredAccuracy:
stopMonitoringForRegion:
requestStateForRegion:
maximumRegionMonitoringDistance
monitoredRegions
startRangingBeaconsInRegion:
stopRangingBeaconsInRegion:
requestRangingToPeers:timeoutSeconds:
respondToRangingFromPeers:timeoutSeconds:
startRangingToPeers:intervalSeconds:
stopRangingToPeers:
startRangingFromPeers:
stopRangingFromPeers:
resetApps
appsUsingLocation
appsUsingLocationWithDetails
technologiesInUse
onLocationRequestTimeout
onRangingRequestTimeout
requestWhenInUseAuthorizationWithPrompt
requestAlwaysAuthorization
isPersistentMonitoringEnabled
setPersistentMonitoringEnabled:
isLocationServicesPreferencesDialogEnabled
setLocationServicesPreferencesDialogEnabled:
isDynamicAccuracyReductionEnabled
setDynamicAccuracyReductionEnabled:
allowsAlteredAccessoryLocations
setAllowsAlteredAccessoryLocations:
registerAsLocationClient
setIsActuallyAWatchKitExtension:
_internal
startUpdatingVehicleSpeed
stopUpdatingVehicleSpeed
startUpdatingVehicleHeading
stopUpdatingVehicleHeading
isMatchInfoEnabled
setMatchInfoEnabled:
startMonitoringVisits
stopMonitoringVisits
startUpdatingMicroLocation
stopUpdatingMicroLocation
requestCurrentMicroLocation
isMicroLocationAvailable
bytes
initWithMatchQuality:matchCoordinate:matchCourse:matchFormOfWay:matchRoadClass:matchShifted:
initWithClientLocation:matchInfo:trustedTimestamp:
lastPathComponent
enumerateKeysAndObjectsUsingBlock:
setLocationManagerSmoother:
locationManagerSmoother
locationManager:didSmoothLocations:ofType:
didSmoothLocations:ofType:
smoothLocations:useType:
initWithCLLocationSmoother:
_locationManagerSmoother
locationManagerSmootherProxy
numberWithInt:
smoothLocations:
setLocationManagerSmootherProxy:
_locationManagerSmootherProxy
allocWithZone:
copyWithZone:
fMatchQuality
fMatchCoordinate
fMatchCourse
fMatchFormOfWay
fMatchRoadClass
fMatchShifted
decodeIntegerForKey:
decodeDoubleForKey:
decodeInt32ForKey:
decodeBoolForKey:
encodeInteger:forKey:
encodeDouble:forKey:
encodeInt32:forKey:
encodeBool:forKey:
supportsSecureCoding
encodeWithCoder:
shortDescription
matchQuality
matchCoordinate
matchCourse
matchFormOfWay
matchRoadClass
isMatchShifted
sharedApplication
applicationState
fileURLWithPath:isDirectory:
dataWithContentsOfURL:options:error:
domain
writeToURL:options:error:
showCalibrationAlert
dismissCalibrationAlert
assertInside
cl_json_serializeValue:
cl_json_serializeKey
stringValue
userInfo
fHeading
allowsKeyedCoding
decodeValueOfObjCType:at:
encodeValueOfObjCType:at:
timestamp
dateWithTimeIntervalSinceReferenceDate:
magneticHeading
trueHeading
headingAccuracy
defaultManager
currentDirectoryPath
stringByAppendingString:
newAssertionForBundleIdentifier:bundlePath:reason:
newAssertionForBundleIdentifier:withReason:
newAssertionForBundle:withReason:
_clientRegion
initWithIdentifier:
getCString:maxLength:encoding:
decodeObject
decodeObjectForKey:
containsValueForKey:
decodeIntForKey:
encodeObject:
encodeObject:forKey:
encodeInt:forKey:
identifier
center
radius
initCircularRegionWithCenter:radius:identifier:
_initWithCoder:
_encodeWithCoder:
referenceFrame
setReferenceFrame:
setOnBehalfOfBundleId:
notifyOnEntry
setNotifyOnEntry:
notifyOnExit
setNotifyOnExit:
containsCoordinate:
setConservativeEntry:
conservativeEntry
initWithCenter:radius:identifier:
initWithUTF8String:
initWithUnsignedShort:
UUIDString
unsignedShortValue
setGutsWithProximityUUID:major:minor:notifyOnDisplay:
numberWithShort:
major
minor
getUUIDBytes:
charValue
_measuredPowerForDevice
dataWithCapacity:
appendBytes:length:
initWithProximityUUID:identifier:
initWithProximityUUID:major:identifier:
initWithProximityUUID:major:minor:identifier:
peripheralDataWithMeasuredPower:
notifyEntryStateOnDisplay
setNotifyEntryStateOnDisplay:
proximity
accuracy
rssi
dataWithPropertyList:format:options:error:
dataWithBytes:length:
propertyListWithData:options:format:error:
numberWithBool:
dictionaryWithObjectsAndKeys:
initWithBytesNoCopy:length:freeWhenDone:
handleFailureInFunction:file:lineNumber:description:
timeZoneWithName:
archivedDataWithRootObject:
stringByAppendingPathComponent:
scenariosPath
contentsOfDirectoryAtPath:error:
array
stringByDeletingPathExtension
stringByAppendingPathExtension:
fileURLWithPath:
loadScenarioFromURL:
isFileURL
path
fileExistsAtPath:
pathExtension
lengthOfBytesUsingEncoding:
date
availableScenarios
localizedNameForScenario:
selectScenario:
setLocationDeliveryBehavior:
setLocationDistance:
setLocationInterval:
setLocationSpeed:
setLocationRepeatBehavior:
clearSimulatedLocations
appendSimulatedLocation:
startLocationSimulation
stopLocationSimulation
clearSimulatedCells
setSimulatedCell:
startCellSimulation
stopCellSimulation
setSimulatedCellRegistrationStatus:
setWifiScanResults:
startWifiSimulation
stopWifiSimulation
setSimulatedWifiPower:
flush
locationDistance
locationInterval
locationSpeed
locationRepeatBehavior
locationDeliveryBehavior
_locationDistance
_locationInterval
_locationSpeed
_locationRepeatBehavior
_locationDeliveryBehavior
localizedStringFromDate:dateStyle:timeStyle:
fSpeed
speed
initWithCoordinate:horizontalAccuracy:arrivalDate:departureDate:detectionDate:
coordinate
horizontalAccuracy
arrivalDate
departureDate
detectionDate
distantFuture
distantPast
hasArrivalDate
hasDepartureDate
_arrivalDate
_departureDate
_horizontalAccuracy
_detectionDate
_coordinate
reverseObjectEnumerator
objectEnumerator
setSouthLat:
setWestLng:
setNorthLat:
setEastLng:
_initWithCLRegion:
_geocodeCompletionHandler
_ticket
_reverseGeocodeLocation:preferredLocales:heading:localResultsOnly:completionHandler:
isGeocoding
_notifyNoResult
sharedService
defaultTraits
clearDeviceDisplayLanguages
localeIdentifier
canonicalLanguageIdentifierFromString:
addDeviceDisplayLanguage:
_initWithCLClientLocation:
setHeading:
_cl_ticketForReverseGeocodeLocation:traits:
_ticket:didReturnError:partialResultForLocation:
_ticket:didReturnGeoMapItems:
submitWithHandler:networkActivity:
_ensureMainThreadExecutionContextForBlock:
_cl_ticketForForwardGeocodeAddressDictionary:maxResults:traits:
_ticket:didReturnError:
submitWithRefinedHandler:networkActivity:
_geocodeAddressString:inRegion:preferredLocales:completionHandler:
setDeviceLocation:
setMapRegion:
_cl_ticketForForwardGeocodeString:maxResults:traits:
cancel
_notifyCancel
placemarkWithGEOMapItem:
_notifyResult:
_notifyError:
_notifyResult:error:
reverseGeocodeLocation:localResultsOnly:completionHandler:
reverseGeocodeLocation:completionHandler:
reverseGeocodeLocation:heading:completionHandler:
reverseGeocodeLocation:heading:localResultsOnly:completionHandler:
geocodeAddressDictionary:completionHandler:
geocodeAddressString:completionHandler:
geocodeAddressString:inRegion:completionHandler:
cancelGeocode
_notifyPartialResult:
initWithGEOCoordinate:
setTimestamp:
setAltitude:
setHorizontalAccuracy:
setVerticalAccuracy:
setSpeed:
setCourse:
addressDictionary
region
areasOfInterest
geoMapItemStorage
timeZone
mapItemStorageForGEOMapItem:
geoFenceMapRegion
hasNorthLat
hasSouthLat
hasEastLng
hasWestLng
northLat
southLat
westLng
eastLng
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:
timezone
_initWithGeoMapItem:
initWithLocation:addressDictionary:region:areasOfInterest:
initWithPlacemark:
stringWithString:
appendString:
formattedAddressLines
isValid
thoroughfare
subThoroughfare
locality
subLocality
administrativeArea
subAdministrativeArea
postalCode
ISOcountryCode
country
fullThoroughfare
inlandWater
ocean
_geoMapItem
removeObjectForKey:
setObject:forKeyedSubscript:
unarchiveObjectWithData:
doesNotRecognizeSelector:
initWithUUID:
uuid
_uuid
initWithMicroLocation:probability:
probability
numberWithDouble:
microlocation
null
microLocationResultWithDictionary:
jsonObject
_microlocation
_probability
initWithTitle:developer:adamId:bundleId:icon:installationState:location:distance:startDate:endDate:confidence:
setIdentifier:
adamId
distanceFromLocation:
distance
startDate
endDate
earlierDate:
compare:
validAtLocation:
validOnDate:
icon
setIcon:
title
setTitle:
bundleId
setBundleId:
developer
setDeveloper:
setAdamId:
confidence
setConfidence:
installationState
setInstallationState:
setLocation:
setDistance:
setStartDate:
setEndDate:
_identifier
_icon
_title
_bundleId
_developer
_adamId
_confidence
_installationState
_location
_distance
_startDate
_endDate
primaryEntityClassForLocationDictionary:
activeLocationServiceTypesForLocationDictionary:
isEntityAuthorizedForLocationDictionary:
entityAuthorizationForLocationDictionary:
bundleWithPath:
setStatusBarIconEnabled:forLocationEntityClass:
isStatusBarIconEnabledForLocationEntityClass:
entityClassesForLocationDictionary:
isLocationActiveForLocationDictionary:
dateLocationLastUsedForLocationDictionary:
hasUsedBackgroundLocationServices:
allowableAuthorizationForLocationDictionary:
setEntityAuthorized:forLocationDictionary:
setEntityAuthorization:forLocationDictionary:
timeIntervalSinceReferenceDate
fMatchInfo
fTrustedTimestamp
initWithLevel:
level
initWithLatitude:longitude:
_initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:speed:timestamp:floor:
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:speed:timestamp:
rawCoordinate
altitude
verticalAccuracy
speedAccuracy
course
rawCourse
integrity
trustedTimestamp
type
floor
getDistanceFrom:
snapToResolution:
propagateLocationToTime:
iso6709Notation
initWithClientLocation:matchInfo:
matchInfo
invalidate
setDateFormat:
stringFromDate:
arrayWithObjects:count:
componentsJoinedByString:
fXpcConnection
fQueue
fNotificationHandlers
onNotificationReceived:
allKeys
sendNotificationRegistrationMessage:isRegister:
reconnect
floatValue
setValue:forKey:
initialize
sharedClient
executeAsynchronousQuery:onQueue:responseBlock:
precacheHint:onQueue:responseBlock:
registerTo:onQueue:block:
unregisterFrom:
initWithDictionary:
stringWithCString:encoding:
setObject:forKey:
initWithMacAddressAsUInt:secureRangingKeyID:
_macAddress
_secureRangingKeyID
initWithPeer:date:distanceMeters:accuracyMeters:initiator:shouldUnlock:
_peer
_date
_distanceMeters
_accuracyMeters
_initiator
_shouldUnlock
uintMacAddressFromString:
getBytes:length:
initWithMacAddressAsString:secureRangingKeyID:
macAddress
hexStringMacAddressFromUInt:
decodeInt64ForKey:
encodeInt64:forKey:
getMacAddressAsString
secureRangingKeyID
isEqualToData:
isEqualToPeer:
getCharacters:range:
scannerWithString:
scanHexInt:
initWithMacAddressAsData:secureRangingKeyID:
initWithPeer:date:distanceMeters:accuracyMeters:initiator:
initWithPeer:timestamp:distanceMeters:accuracyMeters:initiator:
peer
distanceMeters
accuracyMeters
shouldUnlock
initiator
isInitiator
CLLocationManagerRoutineClientInterface
NSObject
CLLocationManagerRoutineServerInterface
_CLLocationManagerRoutineProxy
CLLocationManagerRoutine
PredictedApplication
CLEmergencyEnablementAssertion
CLLocationManagerInternal
CLDiagnosticManagerXPCServerInterface
CLLocationManager
VehicleData
MatchInfo
CLVisitExtensions
MicroLocation
CLLocationSmootherClientInterface
CLLocationSmootherServerInterface
_CLLocationSmootherProxy
CLLocationSmoother
CLLocationMatchInfoInternal
NSCopying
CLLocationMatchInfo
NSSecureCoding
NSCoding
CLJsonLogging
CLHeadingInternal
CLHeading
CLInUseAssertion
CLRegionInternal
CLRegion
CLCircularRegion
CLBeaconRegion
CLBeaconInternal
CLBeacon
CLSimulationManager
CLVehicleHeadingInternal
CLVehicleHeading
CLVehicleSpeedInternal
CLVehicleSpeed
CLVisit
CLGeocoderExtras
CLGeocoderInternal
CLGeocoder
CLPlacemarkInternal
CLPlacemark
_CLMicroLocation
_CLMicroLocationResult
CLPredictedApplication
CLLocationManagerAuthorization
CLLocationInternal
CLFloor
CLLocation
CLAssertion
CLTilesManagerClientInternal
CLTilesManagerClient
_CLRangingPeerInternal
_CLRangingPeerDistanceInternal
_CLRangingPeer
_CLRangingPeerDistance
CLLocationIndependenceAssertion
v24@0:8@16
v24@0:8@"NSArray"16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v16@0:8
v32@0:8@16@?24
v32@0:8@"CLLocation"16@?<v@?@"NSArray"@"NSError">24
@24@0:8@16
v20@0:8B16
@"NSObject<OS_dispatch_queue>"
@"NSXPCConnection"
@"<CLLocationManagerRoutineDelegate>"
@"CLLocationManagerRoutine"
@"_CLLocationManagerRoutineProxy"
@40@0:8@16@24@32
v20@0:8i16
i16@0:8
^{__CLClient=}
@"<CLLocationManagerDelegate>"
{?="padding1"i"suitability"i"coordinate"{?="latitude"d"longitude"d}"horizontalAccuracy"d"altitude"d"verticalAccuracy"d"padding2"d"padding3"d"speed"d"speedAccuracy"d"course"d"courseAccuracy"d"timestamp"d"confidence"i"lifespan"d"type"i"rawCoordinate"{?="latitude"d"longitude"d}"rawCourse"d"floor"i"integrity"I"referenceFrame"i"rawReferenceFrame"i}
@"NSString"
^{__CFRunLoopTimer=}
{?="bestAccuracy"d}
@"NSMutableSet"
v24@0:8@?16
v24@0:8@?<v@?@"NSArray"@"NSError">16
B20@0:8B16
i32@0:8@16@24
i24@0:8@16
v28@0:8B16@20
v28@0:8i16@20
B32@0:8@16@24
@32@0:8@16@24
v24@0:8d16
d16@0:8
^{__CLClient=}16@0:8
v24@0:8q16
q16@0:8
v32@0:8d16d24
v32@0:8@16d24
v32@0:8@16Q24
v36@0:8@16B24@28
v32@0:8@16@24
v32@0:8@"NSArray"16@"NSNumber"24
@"<CLLocationSmootherDelegate>"
@"CLLocationSmoother"
@"_CLLocationSmootherProxy"
@24@0:8^{_NSZone=}16
@60@0:8q16{CLLocationCoordinate2D=dd}24d40i48i52B56
{CLLocationCoordinate2D="latitude"d"longitude"d}
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
{CLLocationCoordinate2D=dd}16@0:8
v24@0:8^{value_ostream=B^{ostream}}16
@104@0:8{?=ddddddddddi}16
{?="x"d"y"d"z"d"magneticHeading"d"trueHeading"d"accuracy"d"timestamp"d"temperature"d"magnitude"d"inclination"d"calibration"i}
{?="identifier"[512c]"onBehalfOfIdentifier"[512c]"type"i"notifyOnEntry"B"notifyOnExit"B"conservativeEntry"B""(?="beaconAttributes"{?="proximityUUID"[512c]"major"S"minor"S"definitionMask"i"notifyEntryStateOnDisplay"B}"circularAttributes"{?="center"{?="latitude"d"longitude"d}"radius"d"desiredAccuracy"d"referenceFrame"i})}
@1576@0:8{?=[512c][512c]iBBB(?={?=[512c]SSiB}{?={?=dd}ddi})}16
@48@0:8{CLLocationCoordinate2D=dd}16d32@40
B32@0:8{CLLocationCoordinate2D=dd}16
{?=[512c][512c]iBBB(?={?=[512c]SSiB}{?={?=dd}ddi})}16@0:8
@"CLRegionInternal"
v44@0:8@16@24@32B40
@36@0:8@16S24@28
@40@0:8@16S24S28@32
c16@0:8
@"NSUUID"
@"NSNumber"
@64@0:8@16@24@32q40d48q56
@"CLBeaconInternal"
@32@0:8{?=dd}16
{?="trueHeading"d"timestamp"d}
{?="speed"d"timestamp"d}
@64@0:8{CLLocationCoordinate2D=dd}16d32@40@48@56
@"NSDate"
@"<GEOMapServiceTicket>"
v36@0:8@16B24@?28
v40@0:8@16d24@?32
v44@0:8@16d24B32@?36
v52@0:8@16@24d32B40@?44
v40@0:8@16@24@?32
v48@0:8@16@24@32@?40
v40@0:8@16@24@32
@"CLGeocoderInternal"
@24@0:8r^{?=ii{?=dd}ddddddddddidi{?=dd}diIii}16
@"CLLocation"
@"NSDictionary"
@"CLRegion"
@"NSArray"
@"GEOMapItemStorage"
@"NSTimeZone"
@48@0:8@16@24@32@40
@"CLPlacemarkInternal"
@32@0:8@16d24
@"_CLMicroLocation"
@104@0:8@16@24@32@40@48q56@64d72@80@88@96
@"NSData"
v28@0:8B16Q20
B24@0:8Q16
Q24@0:8@16
v32@0:8Q16@24
@176@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIii}16
@192@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIii}16@176d184
@"CLLocationMatchInfo"
@24@0:8q16
@32@0:8d16d24
@84@0:8{CLLocationCoordinate2D=dd}16d32d40d48d56d64@72i80
@64@0:8{CLLocationCoordinate2D=dd}16d32d40d48@56
@80@0:8{CLLocationCoordinate2D=dd}16d32d40d48d56d64@72
{?=ii{?=dd}ddddddddddidi{?=dd}diIii}16@0:8
I16@0:8
d24@0:8@16
@24@0:8d16
@184@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIii}16@176
@32@0:8r*16@24
^{CLAssertionInternal=@^{CLConnectionClient}}
@"NSObject<OS_xpc_object>"
B40@0:8@16@24@?32
v28@0:8@16B24
@"CLTilesManagerClientInternal"
@32@0:8Q16@24
@56@0:8@16@24@32@40B48B52
@"_CLRangingPeer"
@24@0:8Q16
@52@0:8@16@24@32@40B48
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
