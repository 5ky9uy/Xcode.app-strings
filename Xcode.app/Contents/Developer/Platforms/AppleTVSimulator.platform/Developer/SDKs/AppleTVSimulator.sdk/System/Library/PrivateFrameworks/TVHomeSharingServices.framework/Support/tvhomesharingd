TVHSDServiceDataClientSubmittedQueriesKey
query
T@"TVSDataQuery",&,N,V_query
queryCompletionReplyBlock
T@?,C,N,V_queryCompletionReplyBlock
mediaServerDiscoveryConfiguration
lastAccessedMediaServerInfo
v8@?0
v28@?0B8@"TVHSSMediaServerDiscoveryConfiguration"12@"NSError"20
v20@?0B8@"NSError"12
v24@?0@"TVHSDDataClient"8@"NSError"16
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
remoteConnection
T@"NSXPCConnection",&,N,V_remoteConnection
T@"TVHSSMediaServerDiscoveryConfiguration",&,N,V_mediaServerDiscoveryConfiguration
T@"TVHSSLastAccessedMediaServerInfo",&,N,V_lastAccessedMediaServerInfo
clientBundleIdentifier
T@"NSString",R,C,N,V_clientBundleIdentifier
-[TVHSDKeybagRentalCheckinOperation init] not supported, use initWithRentalInfo instead
v24@?0@"SSURLConnectionResponse"8@"NSError"16
identifier
T@"NSString",C,N,V_identifier
rentalInfo
T@"TVHSSRentalInfo",&,N,V_rentalInfo
dataClient
T@"TVSDataClient",&,N,V_dataClient
inflightHomeShareCheckoutQuery
T@"TVSDataQuery",&,N,V_inflightHomeShareCheckoutQuery
inflightStoreCheckinRequest
T@"SSRentalCheckinRequest",&,N,V_inflightStoreCheckinRequest
delegate
T@"<TVHSDKeybagRentalCheckinOperationDelegate>",W,N,V_delegate
appleId
password
guid
status
sgid
getShareIdentifiers
POST
accountName
T@"NSString",C,N,V_accountName
T@"NSString",C,N,V_password
%@...
(%@) %@ : %@
hsRequest
T@"TVHSDRequest",&,N,V_hsRequest
urlSessionStartTime
TQ,N,V_urlSessionStartTime
urlSessionTask
T@"NSURLSessionTask",&,N,SsetURLSessionTask:,V_urlSessionTask
v16@?0@"NSNotification"8
application/x-dmap-tagged
image
v40@?0@"NSData"8q16@"NSString"24@"NSError"32
cropImageToFit
keybag
kNoTokenNoKeys
kNoTokenHaveKeys
kHaveDeadTokenNoKeys
kHaveDeadTokenHaveKeys
kHaveTokenNoKeys
kHaveTokenHaveKeys
UNKNOWN TOKEN STATE
inflightAccountsQuery
T@"TVSDataQuery",&,N,V_inflightAccountsQuery
inflightTokenQueries
T@"NSMutableArray",&,N,V_inflightTokenQueries
inflightKeysRequests
T@"NSMutableArray",&,N,V_inflightKeysRequests
keybagPath
T@"NSString",C,N,V_keybagPath
pendingCompletionBlocks
T@"NSMutableArray",&,N,V_pendingCompletionBlocks
fairPlayContextID
TI,N,V_fairPlayContextID
isSynchronizing
TB,R,N
v32@?0@"TVHSSDAAPAssetData"8Q16^B24
responseData
T@"NSData",&,N,V_responseData
T@"TVHSSDataClient",&,N,V_dataClient
-[TVHSDConnection init] not supported, use initWithMaxConcurrentRequests: instead
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
[%@]
http://%@:%u
urlSession
T@"NSURLSession",&,N,V_urlSession
initialized
TB,N,V_initialized
inflightRequests
T@"NSMutableArray",&,N,V_inflightRequests
serverURL
T@"NSURL",C,N,V_serverURL
serverIPURL
T@"NSURL",C,N,V_serverIPURL
baseIPAddress
T@"NSString",C,N,V_baseIPAddress
cacheIPAddress
TB,N,V_cacheIPAddress
baseURL
T@"NSURL",R,C,N
com.apple.tvhomesharingd
mediaServerDiscoveryMode
groupID
lastAccessedServerID
lastAccessedMediaCategory
/var/mobile/Media/iTunes_Control/iTunes/HomeSharing
-init is invalid. Use +sharedInstance instead.
com.apple.tvhomesharingd.XPCListener
v24@?0@"NSString"8@"NSError"16
#T:[%@%p] #Error #%@ : Unable to unarchive data server ID. Exception %@: %@ 
Main:
listener
T@"NSXPCListener",&,N,V_listener
connections
T@"NSMutableSet",&,N,V_connections
connectionsSerialQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionsSerialQueue
dataServerManager
T@"TVHSDDataServerManager",&,N,V_dataServerManager
%@/%lu/%@/%@/%@
databases
containers
items
%@/%lu/%@
('%@:%@')
dmap.itemid
('%@:%u','%@:%u')
dmap.itemkind
+('%@$%lu')
com.apple.itunes.photos.member-of-album-kind
('%@+0')
dmap.itemcount
+('%@:%@')
+('%@:%u')
com.apple.itunes.photos.album-kind
+('%@:%u','%@:%u','%@:%u','%@:%u')
%@/%u/%@/%@.%@
JPEG
failureType
-[TVHSDKeybagRentalCheckoutOperation init] not supported, use initWithRentalInfo instead
inflightHomeShareRentalQuery
T@"TVSDataQuery",&,N,V_inflightHomeShareRentalQuery
inflightStoreCheckoutRequest
T@"SSRentalCheckoutRequest",&,N,V_inflightStoreCheckoutRequest
error
T@"NSError",&,N,V_error
T@"<TVHSDKeybagRentalCheckoutOperationDelegate>",W,N,V_delegate
%@?%@=%@
login
hsgid
update
revision-number
preferredVideoQuality
2,1,0
1,0,2
%@&%@=%@
Login
home-share-verify
Home Share Verify
hspid
machine-id-verify
Machine ID Verify
machine-id
DAAP Database ID
DPAP Database ID
DAAP Base Playlist ID
%@,%@
dmap.persistentid
meta
server-info
Server Info
DAAP Initial Update
DAAP Long Poll Update
authorized-dsids-update
DRM Initial Update
DRM Long Poll Update
DPAP Initial Update
DPAP Long Poll Update
DPAP Database ID After Update
Host Name: %@, Port: %lu
hostName
T@"NSString",R,C,N,V_hostName
port
TQ,R,N,V_port
v24@?0^v8Q16
contextID
T^{FPSAPContextOpaque_=},R,N,V_contextID
session-id
Client-iTunes-Sharing-Version
?%@=%@
&%@=%@
v32@?0@8@16^B24
v32@?0@"NSString"8@"NSString"16^B24
Client-DAAP-Validation
DAAP
DPAP
Server
User-Agent
true
AppleTV
ATVSharing-Version
gzip
Accept-Encoding
%d.%d
Client-DAAP-Version
%ld.%ld
Client-DPAP-Version
requestName
T@"NSString",C,N,V_requestName
requestType
Tq,N,V_requestType
headersDict
T@"NSMutableDictionary",&,N,V_headersDict
argumentsDict
T@"NSMutableDictionary",&,N,V_argumentsDict
fairPlaySAPContext
T@"TVHSDFairPlaySAPContext",&,N,V_fairPlaySAPContext
timeoutInterval
Td,N,V_timeoutInterval
requestDescription
T@"NSString",C,N,V_requestDescription
requestMethod
T@"NSString",C,N,V_requestMethod
requestBody
T@"NSData",C,N,V_requestBody
getgeniusitems
'%@:%qu'
database-spec
container-spec
num-items
seed-id
getgeniusmixitems
'%@:%u'
genius-mix-make-new-context
%@/%lu/%@/%lu/%@
return-no-objects
v32@?0@"<TVSDataBaseQueryFilter>"8Q16^B24
get-authorized-account-token
device-machine-guid
dsid
checkin-rental-asset
checkout-rental-asset
'%@:%@'
item-spec
genres
composers
%@/%lu/%@/%@
browse
groups
albums
artists
group-type
increment
daap.songuserplaycount
daap.songuserskipcount
setproperty
daap.songbookmark
daap.songhasbeenplayed
set-rental-playback-start-date
rental-playback-start-date
%@/%u/items/%@/extra_data/artwork
%@/%u/containers/%@/extra_data/artwork
%@/%u/groups/%@/extra_data/artwork
get-authorized-accounts-info
activity
appletv
TVHSDDataClientRequestDidFailNotification
Disconnected
Resolving Server
Client Connecting
Connected
Connect
Disconnect
Server Resolved
Server Unresolved
Client Connection Completed
HS Data Client [%p]: Name: %@, URL: %@
%@&%@=%ld.%ld
client-dpap-version
@"NSString"16@?0@"NSError"8
@"NSString"40@?0@"TVSStateMachine"8@"NSString"16@24@"NSDictionary"32
TVHSDDataClient State Machine %@-%@
logout
%@&%@=%@,0
daapSecInfo
%@/%u/items/%@.%@?session-id=%u&appletv=1
%@-%@
homeShareGroupID
T@"NSString",C,N,V_homeShareGroupID
sessionConfiguration
T@"TVHSDDataClientSessionConfiguration",&,N,V_sessionConfiguration
connectionConfiguration
T@"TVHSDDataClientConnectionConfiguration",&,N,V_connectionConfiguration
connection
T@"TVHSDConnection",&,N,V_connection
stateMachine
T@"TVSStateMachine",&,N,V_stateMachine
daapPlaybackURLCache
T@"NSCache",&,N,V_daapPlaybackURLCache
dpapPlaybackURLCache
T@"NSCache",&,N,V_dpapPlaybackURLCache
v32@?0@"TVSDataQueryFilter"8Q16^B24
(%@)
'%@!:%@'
'%@:*%@*'
'%@:%@*'
'%@:*%@'
'%@-%@'
'%@+%@'
'%@$%@'
(%@,%@)
(%@+%@)
name
artist
album
releasedate
dateadded
dateplayed
seriesname
physical
shuffle
sort
invert-sort-order
%ld-%ld
-%ld
index
dmap.itemname
dmap.haschildcontainers
dmap.containeritemid
dmap.parentcontainerid
daap.songalbumid
daap.songartist
daap.songalbum
daap.songcontentrating
com.apple.itunes.content-rating
daap.songcontentdescription
daap.songlongcontentdescription
daap.songtime
daap.songgenre
daap.songcomposer
daap.songdatereleased
com.apple.itunes.extended-media-kind
daap.songformat
com.apple.itunes.is-hd-video
daap.songstarttime
daap.songstoptime
com.apple.itunes.movie-info-xml
daap.songtrackcount
daap.songalbumartist
daap.songcompilation
daap.songyear
com.apple.itunes.gapless-heur
com.apple.itunes.gapless-enc-del
com.apple.itunes.gapless-enc-dr
com.apple.itunes.gapless-dur
com.apple.itunes.gapless-resy
daap.groupalbumcount
daap.songdateadded
com.apple.itunes.episode-sort
com.apple.itunes.season-num
com.apple.itunes.norm-volume
daap.songartistid
daap.songtracknumber
com.apple.itunes.special-playlist
daap.baseplaylist
com.apple.itunes.smart-playlist
com.apple.itunes.saved-genius
com.apple.itunes.itms-songid
daap.songdateplayed
daap.songdatakind
com.apple.itunes.series-name
daap.songdisabled
com.apple.itunes.drm-key1-id
com.apple.itunes.drm-key2-id
com.apple.itunes.rental-start
com.apple.itunes.rental-duration
com.apple.itunes.rental-pb-start
com.apple.itunes.rental-pb-duration
com.apple.itunes.drm-user-id
com.apple.itunes.playlist-contains-media-type
com.apple.itunes.playlist-contains-media-type-count
daap.groupmatchedqueryalbumcount
daap.groupmatchedqueryitemcount
com.apple.itunes.artworkchecksum
com.apple.itunes.media-kind-listing
com.apple.itunes.cloud-library-kind
com.apple.itunes.cloud-id
com.apple.itunes.photos.key-image-id
com.apple.itunes.photos.exposure-date
com.apple.itunes.photos.modification-date
com.apple.itunes.photos.key-face
com.apple.itunes.photos.faces
com.apple.itunes.photos.video-duration
com.apple.itunes.photos.key-image
dpap.imageformat
dpap.imagepixelwidth
dpap.imagepixelheight
Keybags
Sentinel
RentalJournal
rentalKeyID
userID
com.apple.tvservices.hsrentalqueue
rootPath
T@"NSString",C,N,V_rootPath
keybagsPath
T@"NSString",C,N,V_keybagsPath
keybagSynchronizers
T@"NSMutableDictionary",&,N,V_keybagSynchronizers
keybagCleanUpTimer
T@"NSTimer",&,N,V_keybagCleanUpTimer
rentalOperationQueue
T@"NSOperationQueue",&,N,V_rentalOperationQueue
rentalOperationCompletions
T@"NSMutableDictionary",&,N,V_rentalOperationCompletions
checkedOutRentals
T@"NSMutableDictionary",&,N,V_checkedOutRentals
rentalJournalPath
T@"NSString",&,N,V_rentalJournalPath
haveRentalJournalCheckinsBeenAttempted
TB,N,V_haveRentalJournalCheckinsBeenAttempted
local.
_home-sharing._tcp.
_daap._tcp.
_hs-dpap._tcp.
__BonjourServiceNameKey
__BonjourServiceTypeKey
v32@?0@"TVSDataServer"8Q16^B24
v32@?0@8@"NSURLConnection"16^B24
v32@?0@"NSNetService"8Q16^B24
iPSh Version
iTSh Version
Database ID
Machine Name
<Unknown>
iTunes Service Browser
Photo App Service Browser
%llX
%@,_%@
iTunesServiceBrowser
T@"NSNetServiceBrowser",&,N,V_iTunesServiceBrowser
photoAppServiceBrowser
T@"NSNetServiceBrowser",&,N,V_photoAppServiceBrowser
monitoredServices
T@"NSMutableArray",&,N,V_monitoredServices
resolvingServices
T@"NSMutableArray",&,N,V_resolvingServices
homeSharingGroupID
T@"NSString",C,N,V_homeSharingGroupID
TQ,N,V_mediaServerDiscoveryMode
verifyServerRequests
T@"NSMutableDictionary",&,N,V_verifyServerRequests
state
Ti,R,N
T@"<TVHSDDataServerManagerDelegate>",W,N,V_delegate
TVHSDDataServerResolveStateWillChangeNotification
TVHSDDataServerResolveStateDidChangeNotification
T@"TVHSDDataServerManager",W,N,V_dataServerManager
resolveState
Tq,N,V_resolveState
com.apple.AppleTV.tvhomesharingd
Daemon
DataClient
DataServer
DataServerManager
Connection
KeybagStore
KeybagSynchronizer
Request
Service
StoreAccount
3.11
DAAP Session ID: %u, DAAP Database ID: %u, DAAP Base Playlist ID: %u, DPAP Database ID: %u, DPAP Import In Progres: %@
sessionID
TI,N,V_sessionID
daapDatabaseName
T@"NSString",C,N,SsetDAAPDatabaseName:,V_daapDatabaseName
daapDatabaseID
TI,N,SsetDAAPDatabaseID:,V_daapDatabaseID
daapDatabasePersistentID
TQ,N,SsetDAAPDatabasePersistentID:,V_daapDatabasePersistentID
daapBasePlaylistID
TI,N,SsetDAAPBasePlaylistID:,V_daapBasePlaylistID
daapDatabaseRevision
TI,N,SsetDAAPDatabaseRevision:,V_daapDatabaseRevision
daapBasePlaylistPersistentID
TQ,N,SsetDAAPBasePlaylistPersistentID:,V_daapBasePlaylistPersistentID
dpapDatabaseID
TI,N,SsetDPAPDatabaseID:,V_dpapDatabaseID
dpapImportInProgress
TB,N,GisDPAPImportInProgress,SsetDPAPImportInProgress:,V_dpapImportInProgress
dpapDatabasePersistentID
TQ,N,SsetDPAPDatabasePersistentID:,V_dpapDatabasePersistentID
dpapDatabaseRevision
TI,N,SsetDPAPDatabaseRevision:,V_dpapDatabaseRevision
drmRevision
TI,N,SsetDRMRevision:,V_drmRevision
sharingVersionHTTPHeaderValue
T@"NSString",C,N,V_sharingVersionHTTPHeaderValue
sharingProtocolVersion
TI,N,V_sharingProtocolVersion
daapProtocolVersion
TI,N,V_daapProtocolVersion
dpapProtocolVersion
TI,N,V_dpapProtocolVersion
supportedExtensions
TQ,N,V_supportedExtensions
init
copy
queryCompletionReplyBlock
query
status
results
metadata
error
setQuery:
setQueryCompletionReplyBlock:
initWithQuery:queryCompletionReplyBlock:
sendQueryCompletionReply
invalidate
.cxx_destruct
_query
_queryCompletionReplyBlock
initWithConnection:
serviceInterface
setExportedInterface:
setExportedObject:
clientInterface
setRemoteObjectInterface:
class
_clientBundleIdentifierFromConnection:
sharedInstance
tvs_bind:toObject:withKeyPath:options:
remoteConnection
resume
remoteObjectProxy
mediaServerDiscoveryConfiguration
_enableMediaServerDiscoveryWithMode:homeSharingAccountName:homeSharingPassword:completion:
_disableMediaServerDiscovery
discoveredMediaServers
_dataServerForServerID:
dataClientOfType:
connect
dataClientConfigurationForDataClient:
errorWithDomain:code:userInfo:
disconnect
lastAccessedMediaServerInfo
setLastAccessedMediaServerInfo:
objectForKey:
alloc
setObject:forKey:
identifier
removeObjectForKey:
submitDataQuery:priority:withCompletionQueue:completionHandler:
cancelProcessing
playbackURLWithItemID:itemFormat:protocol:
playbackDidTimeout
synchronizeKeybagWithDataClient:completion:
_performKeybagOperationWithServerID:block:
checkoutRentalInfo:dataClient:completion:
checkinRentalInfo:dataClient:completion:
updateDataItemPropertiesWithDMAPItemID:properties:
auditToken
findServerWithServerID:comparator:
isKindOfClass:
_allowKeybagStoreOperations
mediaServerDiscoveryMode
mediaServerDiscoveryConfigurationWithReply:
enableMediaServerDiscoveryWithDiscoveryMode:homeSharingAccountName:homeSharingPassword:reply:
disableMediaServerDiscovery
mediaServersWithReply:
lastAccessedMediaServerInfoWithReply:
remeberLastAccessedMediaServerInfo:
connectToMediaServerWithID:reply:
disconnectFromMediaServerWithID:reply:
mediaServerClientConfigurationWithMediaServerID:reply:
submitQueryToMediaServerWithID:queryInfo:reply:
cancelQueryToMediaServerWithID:queryID:
playbackURLForMediaServerWithID:itemID:protocol:itemFormat:reply:
playbackDidTimeoutFromMediaServerWithID:
synchronizeKeybagForMediaServerWithID:reply:
checkoutWithRentalInfo:serverID:reply:
checkinWithRentalInfo:serverID:reply:
updateItemPropertiesWithDMAPItemID:properties:serverID:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
clientProxy
setRemoteConnection:
clientBundleIdentifier
setMediaServerDiscoveryConfiguration:
_remoteConnection
_clientBundleIdentifier
_mediaServerDiscoveryConfiguration
_lastAccessedMediaServerInfo
exceptionWithName:reason:userInfo:
UUID
UUIDString
_checkinRentalOnITunesStore
rentalInfo
name
userID
rentalKeyID
initWithAccountIdentifier:rentalKeyIdentifier:
setInflightStoreCheckinRequest:
startWithConnectionResponseBlock:
_completeWithError:
_checkoutDataItemOnHomeShare
dataClient
initWithQueryType:
daapPersistentItemID
filterWithProperty:op:value:
addDataQueryFilter:
setInflightHomeShareCheckoutQuery:
delegate
rentalCheckinOperation:didCheckinForRentalInfo:error:
initialize
initWithRentalInfo:dataClient:
main
setIdentifier:
setDelegate:
setRentalInfo:
setDataClient:
inflightHomeShareCheckoutQuery
inflightStoreCheckinRequest
_identifier
_delegate
_rentalInfo
_dataClient
_inflightHomeShareCheckoutQuery
_inflightStoreCheckinRequest
accountName
password
copyDeviceGUID
dictionaryWithObjectsAndKeys:
setURLBagKey:
setHTTPMethod:
setRequestParameters:
initWithRequestProperties:
statusCode
bodyData
length
propertyListWithData:options:format:error:
tvs_stringForKey:
tvs_numberForKey:
integerValue
initWithAccountName:andPassword:
homeSharingGroupIDWithCompletion:
setAccountName:
setPassword:
_accountName
_password
originalRequest
absoluteString
substringWithRange:
stringWithFormat:
requestTypeString
requestDescription
requestName
initWithHSRequest:
setURLSessionTask:
elapsedURLSessionTimeInMilliseconds
hsRequest
setHsRequest:
urlSessionTask
urlSessionStartTime
setUrlSessionStartTime:
_hsRequest
_urlSessionTask
_urlSessionStartTime
defaultCenter
mainQueue
userInfo
logObject
connection
cancelRequest:
removeObserver:name:object:
addObserverForName:object:queue:usingBlock:
domain
isEqualToString:
code
setError:
_handleRequestError:
initWithResponse:dataClient:
parseWithQuery:error:
_handleDMAPParseError:
count
setResults:
_dataItemsFromDMAPAssets:
rangeOfString:
_isImageQuery:
arrayWithObjects:count:
queryCompleted:withStatus:
processRequest:withCompletionQueue:completionHandler:
numberWithBool:
setValue:forArgument:
processRequest:query:completionQueue:completionHandler:
setImageArgumentsForRequest:query:
clientType
_dataClientStatusChangedHandler:
addObserver:selector:name:object:
removeObserver:
_cancelSync
dealloc
pendingCompletionBlocks
addObject:
_synchronize
inflightAccountsQuery
inflightKeysRequests
inflightTokenQueries
object
_completeSyncWithError:
keybagPath
defaultManager
fileExistsAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
hwInfo
UTF8String
dataServer
_keyTypesData
setInflightAccountsQuery:
array
countByEnumeratingWithState:objects:count:
valueForProperty:
_reconcileLocalKeybagWithUserIDs:keyIDs:
objectAtIndex:
unsignedIntegerValue
_fetchTokenWithUserID:
_fetchKeysWithUserID:tokenData:
_completeSyncIfIdle
initWithBytes:length:
initWithBytesNoCopy:length:freeWhenDone:
tvs_lowercaseHexString
removeObject:
fairPlayContextID
unsignedLongLongValue
bytes
initWithAuthorizationToken:accountIdentifier:
setKeybagPath:
accountIdentifier
startWithAuthorizationResponseBlock:
numberWithInteger:
_localKeybagUserIDs
indexOfObject:
_localKeybagStateForUserID:keyIDData:
replaceObjectAtIndex:withObject:
numberWithLongLong:
_tokenAuthStateString:
removeAllObjects
cancel
isSynchronizing
_isIdle
initWithDataClient:keybagPath:
synchronizeWithCompletion:
setInflightTokenQueries:
setInflightKeysRequests:
setPendingCompletionBlocks:
setFairPlayContextID:
_fairPlayContextID
_inflightAccountsQuery
_inflightTokenQueries
_inflightKeysRequests
_keybagPath
_pendingCompletionBlocks
unsignedIntValue
parseDMAPErrorResponseWithQuery:
boolValue
parseDPAPResponseWithQuery:responseCode:contentSize:
parseDAAPResponseWithQuery:responseCode:contentSize:
intValueForCode:
arrayWithCapacity:
dataWithBytes:length:
initWithData:
numberWithUnsignedInteger:
filterWithProperty:query:
value
queryType
initWithBytes:length:encoding:
initWithString:
responseData
initWithResponseData:assetDataOffset:assetDataSize:
setIsCollection:
setMetadata:
enumerateObjectsUsingBlock:
removeObjectAtIndex:
setResponseData:
_bytePtr
_byteOffset
_dataLength
_responseData
ephemeralSessionConfiguration
setTimeoutIntervalForResource:
setHTTPShouldUsePipelining:
setHTTPMaximumConnectionsPerHost:
proxies
setConnectionProxyDictionary:
setURLCache:
sessionWithConfiguration:delegate:delegateQueue:
cacheIPAddresses
_serverURLWithHost:port:
setServerURL:
setBaseIPAddress:
serverIPURL
serverURL
MIMEType
_handleRequestError:request:
baseIPAddress
cacheIPAddress
_updateBaseIPAddressWithResponse:
inflightRequests
baseURL
urlRequestWithBaseURL:
dataTaskWithRequest:completionHandler:
invalidateAndCancel
_CFURLResponse
host
_ipAddressFromPeerAddressData:hostName:
port
setServerIPURL:
URLHostAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
initWithFormat:
URLWithString:
initWithMaxConcurrentRequests:
setHostName:andPort:
clearCachedIPAddress
urlSession
setUrlSession:
initialized
setInitialized:
setInflightRequests:
setCacheIPAddress:
_initialized
_cacheIPAddress
_urlSession
_inflightRequests
_serverURL
_serverIPURL
_baseIPAddress
_init
raise:format:
suspend
listener
setupNetworkMonitoring
initializeWithKeybagRootPath:
_readMediaServerDiscoveryConfigurationFromPreferences
_setMediaServerDiscoveryConfiguration:writeToPreferences:
_readLastAccessedMediaServerInfoFromPreferences
_setLastAccessedMediaServerInfo:writeToPreferences:
_enableDataServerDiscovery
_handleDataClientStatusDidChangeNotification:
_handleDataClientDataUpdatedNotification:
_handleDataServersChangedNotification:
initWithMachServiceName:
setListener:
homeSharingAccountName
_enableMediaServerDiscoveryWithMode:homeSharingAccountName:homeSharingGroupID:
_disableDataServerDiscovery
initWithMediaServerDiscoveryMode:homeSharingAccountName:homeSharingGroupID:
eraseKeybagStore
connectionsSerialQueue
connections
_handleInvalidationForConnection:
setInvalidationHandler:
_handleInterruptionForConnection:
setInterruptionHandler:
serverType
sharingProtocolVersion
setServerType:
initWithServerConfiguration:dataServerManager:
_iTunesDataClientsWithServer:
_dataClientsWithServer:clientType:
serverConfiguration
serverID
machineID
homeSharingGroupID
initWithMachineID:hsGroupID:clientName:clientType:
stringFromClientStatus:
_notifyClientsOfClientConfigurationChange:
_notifyClientsOfDataChanged:dataChangedInfo:
_notifyClientsOfMediaServersChange
mediaServerDiscoveryConfigurationDidChange
lastAccessedMediaServerInfoDidChange
mediaServersDidChange
mediaServerClientConfigurationDidChangeWithMediaServerID:
mediaServerWithID:dataDidChange:
_writeMediaServerDiscoveryConfigurationToPreferences:
_notifyClientsOfMediaServerDiscoveryStateChange
_writeLastAccessedMediaServerInfoToPreferences:
_notifyClientsOfLastAccessedMediaServerInfoDidChange
preferencesWithDomain:
synchronize
integerForKey:defaultValue:
stringForKey:
logStringForMediaServerDiscoveryMode:
setInteger:forKey:
unarchiveObjectWithData:
reason
setServerID:
setMediaCategory:
archivedDataWithRootObject:
mediaCategory
dataServerManager
disableDiscovery
enableDiscoveryWithMode:homeSharingGroupID:includePhotoAppServers:
listener:shouldAcceptNewConnection:
dataServerManager:dataServerWithConfiguration:
dataServerManager:dataClientsWithServer:
start
_logDiscoveredMediaServers
setConnections:
setConnectionsSerialQueue:
setDataServerManager:
_listener
_connections
_connectionsSerialQueue
_dataServerManager
discoveredDataServers
disconnectAllClients
serversOfTypes:
dataClientForServer:
initWithServerConfiguration:clientConfiguration:
initWithName:
setStatus:
setPhotoLibraryState:
photoLibraryState
dataClientConfigurationWithName:status:photoLibraryState:keybagPath:
dpapDatabaseID
isDPAPImportInProgress
initWithRequestName:requestType:dataClientSessionConfiguration:
string
appendFormat:
insertString:atIndex:
appendString:
addProperty:
setMetaDataArgumentWithRequest:query:dpap:
setSortArgumentWithRequest:query:
setRangeArgumentWithRequest:query:
handleDPAPQuery:completionQueue:completionHandler:
_checkinDataItemOnHomeShare
setInflightHomeShareRentalQuery:
_checkoutDataItemOnITunesStore
_complete
_willCheckoutRental
setInflightStoreCheckoutRequest:
rentalCheckoutOperation:willCheckoutRentalInfo:
rentalCheckoutOperation:didCheckoutForRentalInfo:error:
inflightHomeShareRentalQuery
inflightStoreCheckoutRequest
_inflightHomeShareRentalQuery
_inflightStoreCheckoutRequest
_error
connectionCompletedWithStatus:
dataPtrForCode:data:length:ptrDataSize:
sessionConfiguration
setDPAPDatabaseID:
setDPAPDatabasePersistentID:
setDAAPDatabaseName:
setDAAPDatabaseID:
setDAAPDatabasePersistentID:
daapDatabaseID
daapDatabasePersistentID
dpapDatabasePersistentID
_establishFairPlayContextWithServerFPVer:withCompletionHandler:
_processSAPExchange:hwInfo:sapContext:sapBuffer:bufferLength:completionHandler:
_setDatabaseWithResponse:daapResponse:
homeShareGroupID
setSessionID:
unsignedIntValue:length:
sessionID
_photoDatabaseID
_photoAppDatabaseInitialUpdate
_photoAppDatabaseUpdate:
setTimeoutInterval:
dpapDatabaseRevision
setDPAPDatabaseRevision:
numberWithInt:
dictionaryWithObject:forKey:
_photoAppDatabaseLongPollUpdate
_loginToPhotoApp
_serverInfo
supports1080p
setRequestDescription:
_homeShareVerify
_daapDatabaseID
_logErrorWithRequest:httpStatus:
_machineVerify
_daapBasePlaylistID
setDPAPImportInProgress:
_completeLogin
_updatePhotoLibraryStateAndSendNotification:
setDAAPBasePlaylistID:
setDAAPBasePlaylistPersistentID:
_dpapDatabaseID
initWithResponseData:
setSharingProtocolVersion:
daapProtocolVersion
setDAAPProtocolVersion:
dpapProtocolVersion
setDPAPProtocolVersion:
supportedExtensions
setSupportedExtensions:
hasCapability:
setSharingVersionHTTPHeaderValue:
_login
_daapDatabaseInitialUpdate
supportsDRMContent
_drmInitialUpdate
_dpapDatabaseInitialUpdate
_daapDatabaseUpdate:
daapDatabaseRevision
_updateRequestWithName:requestType:revision:
setDAAPDatabaseRevision:
dictionaryWithObjects:forKeys:count:
_daapDatabaseLongPollUpdate
_drmUpdate:
drmRevision
setDRMRevision:
_drmLongPollUpdate
_dpapDatabaseUpdate:
_dpapDatabaseLongPollUpdate
_dpapDatabaseIDOnUpdate
dictionary
isEnabled
isAvailable
setEnabled:
setAvailable:
_postPhotoLibraryUpdateDataNotificationWithEnabledStateChanged:availabilityChanged:
_loginToITunes
hostName
_isEqualToConnectionConfiguration:
initWithHostName:port:
_hostName
_port
_fixedUpURLPathString:
dataUsingEncoding:
tvs_MD5Digest
_encryptData:
initWithBytesNoCopy:length:deallocator:
characterAtIndex:
mutableCopy
initWithFairPlaySAPContext:
signURLPathString:
decryptData:
contextID
_contextID
_initWithRequestName:requestType:
sharingVersionHTTPHeaderValue
setValue:forHeaderField:
fairPlaySAPContext
setFairPlaySAPContext:
_setDefaultHeaders
allocWithZone:
requestType
headersDict
mutableCopyWithZone:
argumentsDict
timeoutInterval
requestMethod
setRequestMethod:
requestBody
setRequestBody:
setHeadersDict:
setArgumentsDict:
stringWithString:
enumerateKeysAndObjectsUsingBlock:
URLWithString:relativeToURL:
initWithURL:cachePolicy:timeoutInterval:
setHTTPBody:
setValue:forHTTPHeaderField:
currentDevice
userAgent
copyWithZone:
setRequestName:
setRequestType:
_timeoutInterval
_requestName
_requestType
_requestDescription
_requestMethod
_requestBody
_headersDict
_argumentsDict
_fairPlaySAPContext
daapBasePlaylistID
daapBasePlaylistPersistentID
numberWithChar:
setQueryArgumentWithRequest:query:
dataQueryFilters
isQueryFilter
property
_updateRequestWithRequestName:property:propertyValue:dmapItemID:dataClientSessionConfiguration:
doubleValue
timeIntervalSince1970
itemsRequestWithQuery:dataClientSessionConfiguration:
groupsRequestWithQuery:dataClientSessionConfiguration:
browseRequestWithQuery:dataClientSessionConfiguration:
playlistRequestWithQuery:dataClientSessionConfiguration:
drmTokenRequestWithQuery:dataClientSessionConfiguration:dataServerConfiguration:
rentalRequestWithQuery:dataClientSessionConfiguration:
_updateRequestWithQuery:dataClientSessionConfiguration:
_imageRequestWithQuery:dataClientSessionConfiguration:
handleDAAPQuery:completionQueue:completionHandler:
initWithMachineID:clientName:supportsDRMContent:clientType:
setCountLimit:
_stateMachineName
initWithName:initialState:mode:
_setupStateMachine
_submitPropertyUpdateQueryWithProperty:propertyValue:dmapItemID:
daapPlaybackURLCache
dpapPlaybackURLCache
_playbackURLCacheKeyWithItemID:itemFormat:
_dmapPlaybackURLStringWithItemID:databaseID:itemFormat:
_securedURLWithURLPathString:
_hsDataServer
setDataServer:
_dataServerResolveStateChangedHandler:
stateMachine
postEvent:withContext:
concreteDataClientConnect
setConnection:
_logout
concreteDataClientDisconnect
setSessionConfiguration:
_clearPlaybackURLCaches
_dataServerConfiguration
queryFilterSupportsProperty:
groupingSupportsProperty:
isDPAPQuery:dataClient:
keybagPathForDataClient:
_registerStateMachineHandlers
setShouldAcceptEvents:
setLogObject:
_superClassConnectionCompletedWithStatus:
currentState
_superClassDisconnect
serverStatus
setClientStatus:
resolveState
resolve
registerHandlerForEvent:onState:withBlock:
registerDefaultHandlerForEvent:withBlock:
postNotificationName:object:userInfo:
connectionWithRequest:delegate:
stringValue
setConnectionConfiguration:
supportsProperty:
executeQuery:withCompletionQueue:completionHandler:
decryptDRMTokenData:
setHomeShareGroupID:
connectionConfiguration
setStateMachine:
setDaapPlaybackURLCache:
setDpapPlaybackURLCache:
_homeShareGroupID
_sessionConfiguration
_connectionConfiguration
_connection
_stateMachine
_daapPlaybackURLCache
_dpapPlaybackURLCache
dataFilters
queryArgumentWithATVFilter:queryType:
_mediaKindQueryArgumentForDataType:operator:
mediaKindForPlaylistMediaType:
queryArgumentWithProperty:operator:value:
dmapStringForProperty:dpap:
_URLQueryValueAllowedCharacterSet
_simpleDAAPMediaKindForDataType:
properties
initWithArray:
_appendDMAPCodeForProperty:toMetadataStrng:isDPAP:
groupingProperty
groupingDirection
range
alphanumericCharacterSet
_initWithKeybagRootPath:
_synchronizerForDataClient:
keybagSynchronizers
rootPath
_eraseKeybags
keybagsPath
stringByAppendingPathComponent:
_canRentalOperationBePerformedForRentalInfo:dataClient:completion:
addOperation:
_removeRentalJournalEntryForrentalInfo:
_addRentalJournalEntryForrentalInfo:
setMaxConcurrentOperationCount:
setName:
dateWithTimeIntervalSinceNow:
_cleanupUnusedKeybagsTimerHandler
initWithFireDate:interval:target:selector:userInfo:repeats:
currentRunLoop
addTimer:forMode:
_dataClientKeybagDataUpdated:
_networkStateChanged:
_checkinJournaledRenalsIfNessecary
performSelector:withObject:afterDelay:
removeItemAtPath:error:
createFileAtPath:contents:attributes:
date
setAttributes:ofItemAtPath:error:
contentsOfDirectoryAtPath:error:
_eraseKeybagAtPath:
attributesOfItemAtPath:error:
fileModificationDate
timeIntervalSinceNow
_updateSentinelWithKeybagPath:
haveRentalJournalCheckinsBeenAttempted
internetAvailable
dateWithTimeIntervalSinceReferenceDate:
laterDate:
_checkinJournaledRenals
setHaveRentalJournalCheckinsBeenAttempted:
_readRentalJournal
checkedOutRentals
addEntriesFromDictionary:
allValues
_checkinRentalJournalEntry:
setUserID:
setRentalKeyID:
_rentalJournalEntryForrentalInfo:
_writeRentalJournal:
tvs_setObjectIfNotNil:forKey:
rentalJournalPath
dictionaryWithContentsOfFile:
writeToFile:atomically:
_autoSynchronizeWithDataClient:
_eraseUnusedKeybags
isSynchronizingWithDataClient:
setRootPath:
setKeybagsPath:
setKeybagSynchronizers:
keybagCleanUpTimer
setKeybagCleanUpTimer:
rentalOperationQueue
setRentalOperationQueue:
rentalOperationCompletions
setRentalOperationCompletions:
setCheckedOutRentals:
setRentalJournalPath:
_haveRentalJournalCheckinsBeenAttempted
_rootPath
_keybagsPath
_keybagSynchronizers
_keybagCleanUpTimer
_rentalOperationQueue
_rentalOperationCompletions
_checkedOutRentals
_rentalJournalPath
_requestDidFail:
stop
stopMonitoring
makeObjectsPerformSelector:
dataServersOfTypes:
deregisterDataServer:
verifyServerRequests
_bonjourServiceTypeWithServiceBaseType:serviceSubType:
setMediaServerDiscoveryMode:
searchForServicesOfType:inDomain:
_connectableDataServersOfType:
sortedArrayUsingFunction:context:
physicalNetworkAvailable
WiFiInterface
isActive
RJ45EthernetInterface
_resolveBonjourWithDataServer:
_logStringForServiceBrowser:
startMonitoring
containsObject:
_findDataServerWithBonjourServiceName:
_dataClientForDataServer:
_startVerifyServerRequestForServer:dataClient:
dictionaryFromTXTRecordData:
_handleDiscoveredService:withTXTRecord:
TXTRecordData
_handleResolvedService:withTXTRecord:
setResolveState:
_serverIDForVerifyServerRequestConnection:
_findDataServerWithID:
_stopVerifyServerRequestForServerID:
initWithRequest:delegate:startImmediately:
type
_handleDiscoveredPhotoAppService:withTXTRecord:
_handleDiscoveredITunesService:withTXTRecord:
_iTunesHomeSharingGroupIDWithTXTRecord:
_iTunesServerConfigurationWithService:andTXTRecord:
_handleDiscoveredService:withTXTRecord:andServerConfiguration:
_photoAppHomeSharingGroupIDWithTXTRecord:
_photoAppServerConfigurationWithService:andTXTRecord:
_dataServerWithConfiguration:
_dataClientsWithServer:
registerDataClient:
registerDataServer:
setServerStatus:
resolvingServices
initWithDomain:type:name:
resolveWithTimeout:
_handleResolvedPhotoAppService:withTXTRecord:
_handleResolvedITunesService:withTXTRecord:
_handleResolvedService:withTXTRecord:andServerConfiguration:
displayName
registeredDataClients
_groupIDWithTXTRecord:andGroupIDKey:
initWithData:encoding:
_serverConfigurationWithService:andTXTRecord:sharingVersionKey:
intValue
_uint64ValueWithHexString:
initWithMachineID:databaseID:serviceName:serviceType:serviceDomain:
initWithServerID:displayName:sharingProtocolVersion:
iTunesServiceBrowser
photoAppServiceBrowser
getCString:maxLength:encoding:
netServiceBrowserWillSearch:
netServiceBrowserDidStopSearch:
netServiceBrowser:didNotSearch:
netServiceBrowser:didFindDomain:moreComing:
netServiceBrowser:didFindService:moreComing:
netServiceBrowser:didRemoveDomain:moreComing:
netServiceBrowser:didRemoveService:moreComing:
netServiceWillPublish:
netServiceDidPublish:
netService:didNotPublish:
netServiceWillResolve:
netServiceDidResolveAddress:
netService:didNotResolve:
netServiceDidStop:
netService:didUpdateTXTRecordData:
netService:didAcceptConnectionWithInputStream:outputStream:
connection:didFailWithError:
connectionShouldUseCredentialStorage:
connection:willSendRequestForAuthenticationChallenge:
connection:canAuthenticateAgainstProtectionSpace:
connection:didReceiveAuthenticationChallenge:
connection:didCancelAuthenticationChallenge:
state
resolveServer:
connection:willCacheResponse:
connectionDidFinishLoading:
setHomeSharingGroupID:
setITunesServiceBrowser:
setPhotoAppServiceBrowser:
monitoredServices
setMonitoredServices:
setResolvingServices:
setVerifyServerRequests:
_isWirelessInterfaceActive
_isWiredInterfaceActive
_activeNetworkInterfaceInitialized
_mediaServerDiscoveryMode
_homeSharingGroupID
_iTunesServiceBrowser
_photoAppServiceBrowser
_monitoredServices
_resolvingServices
_verifyServerRequests
compare:options:
initializeLoggingWithDomain:persistentComponents:
initWithServerConfiguration:
_resolveState
_isEqualToSessionConfiguration:
daapDatabaseName
_dpapImportInProgress
_sessionID
_daapDatabaseRevision
_dpapDatabaseRevision
_drmRevision
_daapDatabaseName
_daapDatabasePersistentID
_daapBasePlaylistPersistentID
_dpapDatabasePersistentID
_sharingVersionHTTPHeaderValue
_parseResponseData:
unsignedInt64Value:length:
setDaapProtocolVersion:
setDpapProtocolVersion:
_sharingProtocolVersion
_daapProtocolVersion
_dpapProtocolVersion
_supportedExtensions
_TVHSDQueryContext
TVHSDServiceConnection
TVHSSServiceProtocol
NSObject
TVHSDKeybagRentalCheckinOperation
TVHSDStoreAccount
TVHSDRequestContext
QueryHandlingCommon
TVHSDKeybagSynchronizer
TVHSDQueryResponseParser
TVHSDConnection
TVHSDService
NSXPCListenerDelegate
TVHSDDataServerManagerDelegate
TVHSDServiceUtilities
DPAPQueryHandling
TVHSDKeybagRentalCheckoutOperation
LoginCommon
PhotoAppLogin
ITunesLogin
TVHSDDataClientConnectionConfiguration
TVHSDFairPlaySAPContext
TVHSDRequest
DAAPQueryHandling
TVHSDDataClient
TVHSDQueryHelper
TVHSDKeybagStore
TVHSDKeybagRentalCheckinOperationDelegate
TVHSDKeybagRentalCheckoutOperationDelegate
TVHSDDataServerManager
NSNetServiceBrowserDelegate
NSNetServiceDelegate
NSURLConnectionDelegate
TVHSDDataServer
TVHSDDataClientSessionConfiguration
NSCopying
TVHSDServerInfoResponse
@32@0:8@16@?24
v16@0:8
@16@0:8
v24@0:8@16
@?16@0:8
v24@0:8@?16
@"TVSDataQuery"
@24@0:8@16
v24@0:8@?<v@?B@"TVHSSMediaServerDiscoveryConfiguration"@"NSError">16
v48@0:8Q16@24@32@?40
v48@0:8Q16@"NSString"24@"NSString"32@?<v@?B@"TVHSSMediaServerDiscoveryConfiguration"@"NSError">40
v24@0:8@?<v@?B@"NSArray"@"NSError">16
v24@0:8@?<v@?B@"TVHSSLastAccessedMediaServerInfo"@"NSError">16
v24@0:8@"TVHSSLastAccessedMediaServerInfo"16
v32@0:8@16@?24
v32@0:8@"TVHSSDataServerID"16@?<v@?B@"TVHSSDataClientConfiguration"@"NSError">24
v32@0:8@"TVHSSDataServerID"16@?<v@?B@"NSError">24
v40@0:8@16@24@?32
v40@0:8@"TVHSSDataServerID"16@"TVHSSDataQueryInfo"24@?<v@?Bq@"NSArray"@"NSDictionary"@"NSError"@"NSError">32
v32@0:8@16@24
v32@0:8@"TVHSSDataServerID"16@"NSString"24
v56@0:8@16@24Q32@40@?48
v56@0:8@"TVHSSDataServerID"16@"NSNumber"24Q32@"NSString"40@?<v@?@"NSURL"@"NSError">48
v24@0:8@"TVHSSDataServerID"16
v40@0:8@"TVHSSRentalInfo"16@"TVHSSDataServerID"24@?<v@?B@"NSError">32
v40@0:8@16@24@32
v40@0:8@"NSNumber"16@"NSDictionary"24@"TVHSSDataServerID"32
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
@"NSXPCConnection"
@"NSString"
@"TVHSSMediaServerDiscoveryConfiguration"
@"TVHSSLastAccessedMediaServerInfo"
@32@0:8@16@24
@"<TVHSDKeybagRentalCheckinOperationDelegate>"
@"TVHSSRentalInfo"
@"TVSDataClient"
@"SSRentalCheckinRequest"
v24@0:8Q16
@"TVHSDRequest"
@"NSURLSessionTask"
v48@0:8@16@24@32@?40
@20@0:8i16
I16@0:8
q32@0:8@16@24
v20@0:8I16
@"NSMutableArray"
@32@0:8@16^@24
@32@0:8@16I24I28
I20@0:8I16
@"NSData"
@"TVHSSDataClient"
@32@0:8@16Q24
@24@0:8Q16
v32@0:8@16Q24
@40@0:8@16@24@?32
v20@0:8B16
@"NSURLSession"
@"NSURL"
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"TVHSDDataServer"32@0:8@"TVHSDDataServerManager"16@"TVHSSDataServerConfiguration"24
@"NSArray"32@0:8@"TVHSDDataServerManager"16@"TVHSDDataServer"24
v28@0:8@16B24
v40@0:8Q16@24@32
@"NSXPCListener"
@"NSMutableSet"
@"NSObject<OS_dispatch_queue>"
@"TVHSDDataServerManager"
@48@0:8@16q24@32@40
@"<TVHSDKeybagRentalCheckoutOperationDelegate>"
@"SSRentalCheckoutRequest"
@"NSError"
v28@0:8I16@?20
v76@0:8I16{FairPlayHWInfo_=I[20C]}20^{FPSAPContextOpaque_=}44*52Q60@?68
B28@0:8@16B24
v32@0:8@16q24
@36@0:8@16q24I32
v24@0:8B16B20
@24@0:8^{FPSAPContextOpaque_=}16
^{FPSAPContextOpaque_=}16@0:8
^{FPSAPContextOpaque_=}
@40@0:8@16q24@32
@32@0:8@16q24
@24@0:8^{_NSZone=}16
d16@0:8
v24@0:8d16
q16@0:8
v24@0:8q16
@"NSMutableDictionary"
@"TVHSDFairPlaySAPContext"
@40@0:8@16@24@32
@52@0:8@16@24I32@36@44
@48@0:8Q16@24@32Q40
@40@0:8@16@24Q32
v48@0:8@16q24@32@?40
@36@0:8@16I24@28
@"TVHSDDataClientSessionConfiguration"
@"TVHSDDataClientConnectionConfiguration"
@"TVHSDConnection"
@"TVSStateMachine"
@"NSCache"
v36@0:8@16@24B32
@28@0:8@16B24
v40@0:8@"TVHSDKeybagRentalCheckinOperation"16@"TVHSSRentalInfo"24@"NSError"32
v32@0:8@"TVHSDKeybagRentalCheckoutOperation"16@"TVHSSRentalInfo"24
v40@0:8@"TVHSDKeybagRentalCheckoutOperation"16@"TVHSSRentalInfo"24@"NSError"32
B40@0:8@16@24@?32
@"NSTimer"
@"NSOperationQueue"
Q24@0:8@16
v24@0:8@"NSNetServiceBrowser"16
v32@0:8@"NSNetServiceBrowser"16@"NSDictionary"24
v36@0:8@"NSNetServiceBrowser"16@"NSString"24B32
v36@0:8@"NSNetServiceBrowser"16@"NSNetService"24B32
v24@0:8@"NSNetService"16
v32@0:8@"NSNetService"16@"NSDictionary"24
v32@0:8@"NSNetService"16@"NSData"24
v40@0:8@"NSNetService"16@"NSInputStream"24@"NSOutputStream"32
v32@0:8@"NSURLConnection"16@"NSError"24
B24@0:8@"NSURLConnection"16
v32@0:8@"NSURLConnection"16@"NSURLAuthenticationChallenge"24
B32@0:8@"NSURLConnection"16@"NSURLProtectionSpace"24
v36@0:8Q16@24B32
i16@0:8
@"<TVHSDDataServerManagerDelegate>"
@"NSNetServiceBrowser"
Checking in [%@] on store
Rental checkin on store for [%@] complete with error [%@]
Checking out [%@] on server [%@]
Rental checkout for [%@] on server [%@], complete with status [%ld]
HS GroupID requested with Account [%@] DeviceGUID [%@].
HS GroupID request finished for Account [%@] with HTTP status [%ld], error [%@], response status [%ld], HSGID [%@].
[%@] will be cancelled as the data query has been cancelled
QUERY [%@] couldn't be processed
Starting keybag synchronization for server [%@]
Accounts query to server [%@] returned %u user IDs [%@]
Fetching token for user [%@] from server [%@]
Retrieved token for user [%@] from server [%@]
Unable to retrieve token for user [%@] from server [%@] as the user is no longer authorized.
Fetching keys for user [%@] from store
Got authorization response from store for user [%@]: %@
Keybag imported for user [%@]
Keybag import failed [%d] for user [%@]
No keybag returned for user [%@]
Deleting user [%@] from keybag for server [%@]
User [%@] for server [%@] has local token auth state [%@]
User [%@] for server [%@] has all the keys
User [%@] for server [%@] is missing keys
User [%@] for server [%@] exists in the local keybag. No key ID data was passed so unable to determine if we have all the keys
Keybag sync to server [%@] has completed with error [%@]
Finished processing [%@] (%llu) milliseconds
Scheduling [%@]
[%@] was cancelled. Ignoring error.
[%@] failed with Error [%@] Code [%ld] Domain [%@]. Clearing cached IP address.
Got IP [%s] for [%@]
Determined IP Address [%@] for [%@]
Host [%@] failed to convert to IPAddress with error [%d]
Failed to get IP for [%@]
Starting service '%@'
Initial media server discovery configuration: %@
Received _handleDataClientStatusDidChangeNotification for %@. New Status: %@. Informing clients.
Received TVSDataClientDataUpdateNotification. Informing clients.
Received TVSDataServersChangedNotification. Informing clients.
Reading home sharing prefs: Discovery Mode: %@, Account Name: %@, Group ID: %@
Invalid discovery mode in prefs. Turning discovery off and cleaning up prefs.
Home sharing is enabled in prefs but we don't have a valid account name or group ID. Turning discovery off and cleaning up prefs.
Home sharing is not enabled in prefs but we have a valid account name and/or group ID. Turning discovery off and cleaning up prefs.
Writing home sharing prefs: Discovery Mode: %@, Account Name: %@, Group ID: %@
Read last accessed media server info: Server ID: %@, Media Category: %lu
Writing last accessed media server prefs: Server ID: %@, Media Category: %lu
Disabling data server discovery: %@
Enabling data server discovery: %@
Begin Discovered Media Servers
End Discovered Media Servers
Received %@. Disconnecting all data clients.
Checking in [%@] on server [%@]
Rental checkin for [%@] on server [%@], complete with status [%ld]
Checking out [%@] from store
Rental checkout from store for [%@] complete with error [%@]
HS connection failed because target is Simulator
Database request completed with DB [%lu] Persistent [%llu].
DPAP database request completed with DB [%lu] Persistent [%llu].
HSLogin (PHOTO) failed [%@] Request [%@] HTTPStatus [%ld]
Disconnecting (PHOTO) [%@] on failed update request with HTTPStatus [%ld].
HSLogin failed [%@] Request [%@] HTTPStatus [%ld]
Disconnecting [%@] on failed update request with HTTPStatus [%ld].
DPAP Photo database request complete, and photos have been removed from sharing.
DPAP Photo database request complete (913), and photos have been removed from sharing.
Creating signature header for URL [%@]
Created signature header for URL [%@]
Failed to create signature header for URL [%@]
Failed to decrypt token data with error %ld
Failed to encrypt data with error %ld
Set FP-SAP header [%@] for request [%@]
No FP-SAP header set for request [%@]
Playback URL not in cache. Building URL
Found playback URL in cache
Returning playback URL: %@
Connecting iTunes HS [%@]
Connecting Photo App HS [%@]
HS [%@] [%p] can not execute query since it's not connected
Connecting client. [%@]
Disconnecting client. [%@]
Unable to start connecting in current state. [%@]
Client is currently disconnected so nothing to disconnect. [%@]
Server has been marked as resolved. Will start client connection. [%@]
Server has been unexpectedly marked as resolved. Ignoring. [%@]
Server resolve has failed. [%@]
Server has been marked as unresolved but we are not actively resolving. Ignoring. [%@]
Client connection attempt has completed. [%@]
Unexpected client connection completed event. Ignoring. [%@]
Logging out from HS [%@]
Erasing keybag store at %@
Keybag store initialized at path %@
Erasing keybag at path [%@]
Erasing keybags directory at path [%@]
Checking keybag sentinel at path [%@]
Time looks reasonable. Checking in journaled rentals.
Rental journal entry found, checking in
Unable to write rental journal
Home share client [%@] connected. Initiating keybag sync
Home share client [%@] has new keybag data. Initiating keybag sync
Keybag store clean up started [%@]
Keybag store clean up finished [%@]
Disabling bonjour browsing for discovery mode %@ (HSGID: %@).
Enabling iTunes home share bonjour discovery with HSGID %@.
Enabling photo app home share bonjour discovery with HSGID %@.
Unable to enable iTunes home share bonjour discovery as no HSGID
Enabling DAAP bonjour browsing.
iTunes service browser using service type %@
Photos app service browser using service type %@
%@ will start searching for servers
%@ stopped searching for servers
%@ stopped searching for servers with error [%@]
%@ found [%@] moreComing [%d].
%@ removing [%@] moreComing [%d].
Bonjour Remove [%@]: Data Client [%@]
Bonjour Remove while connected to [%@]: Sending verify request
Bonjour Remove [%@]: Removing server since client is not connecting or connected
Net Service TXT record update received for [%@] with TXT [%@]
Net Service resolved [%@] with TXT [%@] Host [%@]
Net Service failed to resolve [%@] with error [%@].
URL Connection [%@]: Server Info failed with error [%@]. Will remove data server.
URL Connection [%@]: Server Info finished successfully. Ignoring the previous Bonjour remove.
Existing verify server request is already in flight for %@. Indicates a double Bonjour remove. Old request has been cancelled.
Verify request [%@] in inflight for server [%@]
Net Service found new instance of iTunes service [%@]
iTunes service [%@] has wrong home sharing group ID [%@], expecting [%@]
Net Service found new instance of Photo app service [%@]
Photo app service [%@] has wrong home sharing group ID [%@], expecting [%@]
_handleDiscoveredService: %@
Net Service found data server [%@] but we are already connected. Ignoring Bonjour add
Registering new data server: %@
Net Service already resolving [%@]
Net Service initiating resolve for [%@] [%@]
Net Service resolved iTunes [%@] Host Name [%@]
Net Service resolved Photo App [%@] Host Name [%@]
Request failed for %@, re-resolving bonjour.
Starting tvhomesharingd
Exiting tvhomesharingd
Resolve state [%@] change from %ld to %ld
@(#)PROGRAM:tvhomesharingd  PROJECT:TVHomeSharingServices-1
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>CFBundleIdentifier</key>
<string>com.apple.tvhomesharingd</string>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.tvhomesharingd</string>
<key>com.apple.itunesstored.private</key>
<true/>
<key>fairplay-client</key>
<string>1859864847</string>
</dict>
</plist>
