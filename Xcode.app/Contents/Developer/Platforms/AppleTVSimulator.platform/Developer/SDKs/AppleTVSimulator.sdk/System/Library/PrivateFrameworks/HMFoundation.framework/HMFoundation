HMFWiFiManager
HMFDumpCategory
HMFLogging
NSObject
HMFNetServiceBrowser
NSNetServiceBrowserDelegate
HMFPowerLogger
HMFNetAddressInternal
_HMFNetAddressIPV4
_HMFNetAddressIPV6
_HMFNetAddressHostname
HMFNetAddress
HMFMemoryMonitor
HMFVersion
NSCopying
NSSecureCoding
NSCoding
HMFNetMonitor
HMFWeakObject
HMFMessageInternal
HMFMessage
NSMutableCopying
Deprecated
Utils
HMFMutableMessage
HMFError
HMMsgHandler
HMFMessageDispatcher
HMFMessageTransportDelegate
_HMFCFHTTPServerRequest
_HMFCFHTTPServerResponse
HMFMessageTransport
_HMFNetServiceMonitor
HMFNetServiceBrowserDelegate
HMFHTTPClient
HMFNetMonitorDelegate
_HMFNetServiceMonitorDelegate
HMFTimerDelegate
NSURLSessionDelegate
HMFTimer
HMFExponentialBackoffTimer
_HMFCFHTTPServerConnection
HMFMessageDestination
HMFLogCategory
HMFHTTPRequestInternal
HMFHTTPRequest
HMFMutableHTTPRequest
_HMFCFHTTPServer
HMFHTTPResponseInternal
HMFHTTPResponse
HMFMutableHTTPResponse
HMFSystemInfo
_HMFNetManagerWoWAssertion
HMFNetManager
HMFPowerManager
HMFHTTPServer
_HMFCFHTTPServerDelegate
HMFHTTPClientConnectionDelegate
SecureCodingUtils
Logging
HMUIndent
HomeKit
HMFBlockOperation
HMFTimedBlockedOperation
HMFProductInfo
HMFHTTPClientConnection
_HMFCFHTTPServerConnectionDelegate
HMFNetService
NSNetServiceDelegate
HMFMutableNetService
HMFHTTPRequestHandler
_HMFCFHTTPMessage
Version5
sharedManager
takeWoWAssertion
releaseWoWAssertion
categoryWithName:
logCategory
logIdentifier
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
stringWithFormat:
exceptionWithName:reason:userInfo:
init
weakObjectsHashTable
copy
alloc
internal
shortDescription
setDelegate:
currentRunLoop
removeFromRunLoop:forMode:
mainRunLoop
scheduleInRunLoop:forMode:
dealloc
domain
serviceType
descriptionWithPointer:
propertyQueue
allObjects
hashTableWithOptions:
countByEnumeratingWithState:objects:count:
addObject:
removeObject:
clientQueue
isBrowsing
setBrowsing:
setBrowseBlock:
searchForServicesOfType:inDomain:
_stopBrowsingWithError:
stop
notifyDelegateBrowserStoppedWithError:
delegateQueue
delegate
netServiceBrowser:didStopBrowsingWithError:
netServiceBrowser:didAddService:
netServiceBrowser:didRemoveService:
browseBlock
errorFromNetServiceErrorDict:
hmfErrorWithCode:description:reason:suggestion:underlyingError:
initWithNetService:
addNetServiceToCache:
notifyDelegateOfAddedService:
isEqualToString:
hmfErrorWithCode:description:reason:suggestion:
cachedNetServices
removeNetServiceFromCache:
notifyDelegateOfRemovedService:
netServiceBrowserWillSearch:
netServiceBrowserDidStopSearch:
netServiceBrowser:didNotSearch:
netServiceBrowser:didFindDomain:moreComing:
netServiceBrowser:didFindService:moreComing:
netServiceBrowser:didRemoveDomain:moreComing:
netServiceBrowser:didRemoveService:moreComing:
initWithDomain:serviceType:
shouldCache
setShouldCache:
startBrowsingWithCompletionHandler:
stopBrowsing
.cxx_destruct
_cachedNetServices
_shouldCache
_browsing
_delegate
_domain
_serviceType
_clientQueue
_delegateQueue
_propertyQueue
_internal
_browseBlock
sharedPowerLogger
linkTypeDescription:
reportConnection:linkType:
reportIncomingAdvertisementChange:
reportIncomingBonjour:
reportIncomingIPEvent:
reportIncomingIDSPush:fromToken:
reportIncomingCloudPush:
reportIncomingLoxyMessage:
addressFamily
addressString
_addressFamily
_addressString
stringWithUTF8String:
initWithSocketAddress:
rangeOfString:options:
length
stringByReplacingCharactersInRange:withString:
normalizedHostname:
hostname
initWithHostname:
_hostname
localAddress
memoryPressure
_handleMemoryStateChange:
isMonitoring
setMonitoring:
memoryState
setMemoryState:
memoryMonitor:didChangeMemoryState:
start
_monitoring
_memoryState
_memoryPressure
regularExpressionWithPattern:options:error:
matchesInString:options:range:
count
objectAtIndexedSubscript:
numberOfRanges
rangeAtIndex:
substringWithRange:
integerValue
initWithMajorVersion:minorVersion:updateVersion:
majorVersion
minorVersion
updateVersion
versionString
isEqualToVersion:
compare:
decodeIntegerForKey:
encodeInteger:forKey:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
initWithVersionString:
isAtLeastVersion:
isGreaterVersion:
_majorVersion
_minorVersion
_updateVersion
getUUIDBytes:
initWithNetAddress:
UTF8String
_stop
netAddress
networkReachabilityRef
handleNetworkReachabilityChange:
currentNetworkFlags
setCurrentNetworkFlags:
setReachable:
networkMonitorIsReachable:
networkMonitorIsUnreachable:
isReachable
reachabilityPath
_reachable
_currentNetworkFlags
_netAddress
_networkReachabilityRef
object
initWithWeakObject:
objectHash
_object
_objectHash
allocWithZone:
identifier
name
destination
messagePayload
responseHandler
transport
isRemoteSource
isInternalMessage
isEntitledMessage
isLocationAuthorizedMessage
setIdentifier:
setName:
setDestination:
setMessagePayload:
setResponseHandler:
setTransport:
setRemoteSource:
setInternalMessage:
setEntitledMessage:
setLocationAuthorizedMessage:
_remoteSource
_internalMessage
_entitledMessage
_locationAuthorizedMessage
_identifier
_name
_destination
_messagePayload
_responseHandler
_transport
initWithName:destination:payload:
UUID
__initWithInternalMessage:
UUIDString
initWithInternalMessage:
messageWithName:destination:payload:
mutableCopyWithZone:
initWithName:identifier:messagePayload:transport:responseHandler:remoteSource:internalMessage:entitledMessage:locationAuthorizedMessage:
allMessageDestinations
internalMessageWithName:messagePayload:
internalMessageWithName:messagePayload:responseHandler:
internalMessageWithName:destination:messagePayload:
entitledMessageWithName:messagePayload:
locationAuthorizedMessageWithName:messagePayload:
entitledMessageWithName:identifier:messagePayload:
messageWithName:messagePayload:
messageWithName:messagePayload:responseHandler:
messageWithName:messagePayload:transport:responseHandler:
messageWithName:identifier:messagePayload:transport:
messageWithName:identifier:messagePayload:transport:responseHandler:
messageWithName:identifier:messagePayload:
messageWithName:identifier:messagePayload:remoteSource:
messageWithName:identifier:messagePayload:responseHandler:
messageWithName:identifier:messagePayload:remoteSource:responseHandler:
messageWithMessage:messagePayload:
messageWithMessage:messagePayload:responseHandler:
uuidFromStringForKey:
uuidForKey:
stringForKey:
numberForKey:
boolForKey:
boolForKey:keyPresent:
dictionaryForKey:
arrayForKey:
dataForKey:
dateForKey:
nullForKey:
timeZoneFromDataForKey:
dateComponentsFromDataForKey:
errorFromDataForKey:
calendarFromDataForKey:
locationFromDataForKey:
predicateFromDataForKey:
arrayOfDateComponentsFromDataForKey:
uuidFromRemoteMessageForKey:
timeZoneForKey:
dateComponentsForKey:
errorForKey:
calendarForKey:
locationForKey:
predicateForKey:
arrayOfDateComponentsForKey:
dictionary
mainBundle
localizedStringForKey:value:table:
setObject:forKeyedSubscript:
hmfErrorWithCode:userInfo:
errorWithDomain:code:userInfo:
isHMFError
hmfErrorWithCode:
initWithMessageHandler:token:receiverQueue:
msgHandler:token:receiverQueue:
receiverQueue
setReceiverQueue:
messageHandler
setMessageHandler:
token
setToken:
_receiverQueue
_messageHandler
_token
messageTargetUUID
messageReceiveQueue
workQueue
notificationHandlers
objectForKeyedSubscript:
numberWithUnsignedLongLong:
objectForKey:
removeObjectForKey:
_deregisterForMessage:receiver:token:
allKeys
target
allValues
sendMessage:completionHandler:
dispatchMessage:target:
messageTransport:didReceiveMessage:
initWithTransport:
registerForMessage:receiver:messageHandler:
deregisterForMessage:receiver:
deregisterReceiver:
dispatchMessage:
setWorkQueue:
setNotificationHandlers:
_workQueue
_notificationHandlers
initWithTarget:
sendMessage:target:responseQueue:responseHandler:completionHandler:
sendMessage:target:
sendMessage:target:responseQueue:responseHandler:
sendMessage:target:andInvokeCompletionHandler:
data
initWithRequest:statusCode:
appendData:
requestRef
bodyData
initWithConnection:requestRef:
responseWithStatusCode:
appendBodyData:
method
headerFields
body
setURL:
setMethod:
setHeaders:
setBody:
bodyStream
connection
_requestRef
_bodyStream
_connection
_bodyData
initWithStatusCode:headerFields:body:
initWithMessageRef:
request
response
setValue:forHeaderField:
message
responseRef
setHeaderValue:forHeaderKey:
completionHandler
setCompletionHandler:
_responseRef
_request
_completionHandler
_response
type
netServiceBrowser
netService
notifyDelegateOfUpdatedNetService:
monitor:didUpdateNetService:
notifyDelegateOfReachabilityChange:
monitor:didUpdateReachability:
setNetService:
resolveWithTimeout:completionHandler:
_netService
_netServiceBrowser
URLWithString:
scheme
host
port
isValidBaseURL:
baseURL
__initializeWithOptions:
defaultSessionConfiguration
setHTTPCookieAcceptPolicy:
setHTTPCookieStorage:
setHTTPShouldSetCookies:
setURLCredentialStorage:
setURLCache:
setHTTPShouldUsePipelining:
mainQueue
sessionWithConfiguration:delegate:delegateQueue:
setMaxConcurrentOperationCount:
setQualityOfService:
netServiceMonitor
resolveWithCompletionHandler:
reachabilityMonitor
registerWoWAssertionForObject:
deregisterObject:
absoluteString
session
currentNetService
hostName
addresses
options
baseURLWithScheme:hostAddress:port:
clientDidBecomeReachable:
clientDidBecomeUnreachable:
isCancelled
reachabilityProbeQueue
cancelAllOperations
requestClientReachabilityPingWithRetry:
finish
confirmWithTimeout:completionHandler:
addExecutionBlock:
addOperation:
client:didRequestPingWithCompletionHandler:
startDelegatedPingTimer
stopDelegatedPingTimer
delegatedPingTimer
initWithMinimumTimeInterval:maximumTimeInterval:exponentialFactor:options:
setDelegatedPingTimer:
resume
suspend
isValid
urlRequest
mutableCopy
relativePath
URLWithString:relativeToURL:
valueForHTTPHeaderField:
setValue:forHTTPHeaderField:
startReachabilityProbe
statusCode
allHeaderFields
initWithRequest:internalResponse:
dataTaskWithRequest:completionHandler:
operations
allowAnonymousConnection
protectionSpace
serverTrust
credentialForTrust:
timerDidFire:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
initWithBaseURL:options:
initWithNetService:options:
sendRequest:completionHandler:
setAllowAnonymousConnection:
_allowAnonymousConnection
_baseURL
_options
_session
_reachabilityMonitor
_reachabilityProbeQueue
_netServiceMonitor
_delegatedPingTimer
timer
_handleExpiration
isRunning
timeInterval
leeway
_resume
_kick
setRunning:
_suspend
_fire
initWithTimeInterval:options:
kick
fire
_timeInterval
_leeway
_running
_timer
isIncreasing
exponentialFactor
maximumTimeInterval
minimumTimeInterval
setTimeInterval:
reset
_increasing
_minimumTimeInterval
_maximumTimeInterval
_exponentialFactor
array
invalidate
_handleCompletedReceivedRequest:error:
handleRequest:bodyReadStream:eventType:
_stopReadBody:
_sendStatusCode:forRequest:
connection:didReceiveRequest:
dataWithBytes:length:
_sendStatusCode:forRequest:bodyData:
pendingRespones
address
initWithConnectionRef:
open
close
_handleRecievedRequestRef:
sendResponse:
_handleCompletedResponse:error:
pendingRequests
_address
_pendingRequests
_pendingRespones
bytes
initWithUUIDBytes:
_target
defaultCategory
strongToStrongObjectsMapTable
_addCategory:inSubsystem:
_getCategory:
categoryWithName:inSubsystem:
initCategory:inSubsystem:
setObject:forKey:
initialize
loggingCategory
loggingSubsystem
_loggingCategory
_loggingSubsystem
setHeaderFields:
_headerFields
_URL
_method
_body
timeoutInterval
initWithURL:cachePolicy:timeoutInterval:
setHTTPBody:
setHTTPMethod:
setAllHTTPHeaderFields:
initWithInternalRequest:
setTimeoutInterval:
_timeoutInterval
initWithURL:method:body:timeoutInterval:
dataWithCapacity:
appendBytes:length:
numberWithBool:
dictionaryWithObjects:forKeys:count:
unsignedIntegerValue
doubleValue
numberWithDouble:
serverDidInvalidate:
initWithPort:options:
connectionIdleTimeout
setConnectionIdleTimeout:
watchdogTimeout
setWatchdogTimeout:
connections
_port
_connections
server:didOpenConnection:
server:didCloseConnection:
_statusCode
startMonitoringSystemChanges
arrayWithObjects:count:
updateName
notifyNameUpdated:
defaultCenter
postNotificationName:object:userInfo:
systemInfo
notificationToken
_notificationToken
deregisterWoWAssertionForObject:
wowAssertion
setWowAssertion:
_wowAssertion
boolValue
_deregisterForPowerSourceNotifications:
_registerForPowerSourceNotifications
notifyBatteryStateChange:
postNotificationName:object:
notifyBatteryLevelChange:
setBatteryLevel:
setBatteryState:
notificationPort
interestNotification
batteryState
batteryLevel
updateBatteryState:
hasBattery
_interestNotification
_hasBattery
_batteryLevel
_batteryState
_notificationPort
initWithDomain:type:name:port:
stopPublishing
setInternal:
setPort:
startPublishingWithCompletionHandler:
stopWithError:
_stopWithError:
server:didStopWithError:
requestHandlers
URLPredicate
evaluateWithObject:
methodPredicate
matchBlock
requestBlock
initWithConnection:
server:shouldAcceptConnection:
addConnection:
openWithCompletionHandler:
removeConnection:
_handleOpenedConnection:
_handleClosedConnection:
_handleReceivedRequest:connection:
connection:didCloseWithError:
initWithServiceType:name:port:options:
startWithCompletionHandler:
registerRequestHandler:
unregisterRequestHandler:
_requestHandlers
_connectionIdleTimeout
initWithUUIDString:
initWithBase64EncodedString:options:
setWithObject:
deserializeObjectWithData:allowedClasses:
setWithArray:
mutableDictionaryForKey:
mutableArrayForKey:
mutableSetForKey:
setForKey:
base64EncodedDataForKey:
nsValueForKey:
urlForKey:
initForReadingWithData:
setRequiresSecureCoding:
decodeObjectOfClasses:forKey:
finishDecoding
setClass:forClassName:
decodeObjectOfClass:forKey:
deserializeObjectWithData:allowedClass:frameworkClasses:
initWithLevel:step:factor:
level
factor
step
initWithCapacity:
appendString:
indentWithLevel:step:factor:
indentWithLevel:
indentByFactor:
_level
_step
_factor
string
subdataWithRange:
appendFormat:
sortedArrayUsingSelector:
containsObject:
secureDescriptionWithIndent:newLine:blacklistedKeys:
secureDescriptionWithBlacklistKeys:
describeElements:
code
userInfo
second
minute
hour
month
localTimeDescription
localeWithLocaleIdentifier:
setLocale:
setDateFormat:
stringFromDate:
dateFromString:
date
initWithTimeInterval:sinceDate:
currentCalendar
components:fromDate:toDate:options:
fileNameDescription
iso8601Description
dateFromFileNameDescription:
timeIntervalDescription:
cancelWithError:
cancel
cancelAllOperationsWithError:
_finish
isExecuting
executionBlocks
finishedSemaphore
setFinishedSemaphore:
dispatchTimeout
_cancelWithError:
_error
_setError:
isFinished
_finishedSemaphore
_setFinishedSemaphore:
error
setError:
timeout
initWithTimeout:
_timeout
lowercaseString
containsString:
processInfo
operatingSystemVersion
initWithPlatform:class:operatingSystemVersion:
productPlatform
productClass
decodeOperatingSystemVersionWithCoder:
encodeOperatingSystemVersion:withCoder:
productInfo
_productPlatform
_productClass
_operatingSystemVersion
peerAddress
sendResponse:completionHandler:
TXTRecordData
updateTXTRecordWithData:
startMonitoring
stopMonitoring
notifyUpdatedAddresses:
netService:didUpdateAddresses:
isEqualToDictionary:
notifyUpdatedTXTRecord:
removeAllObjects
dictionaryFromTXTRecordData:
setTXTRecord:
removeAllTXTRecordObjects
netService:didUpdateTXTRecord:
firstObject
bestAddress
_reallyResolveWithTimeout:completionHandler:
resolveBlocks
isResolving
setResolving:
resolveWithTimeout:
setHostname:
arrayWithCapacity:
setAddresses:
netServiceWillPublish:
netServiceDidPublish:
netService:didNotPublish:
netServiceWillResolve:
netServiceDidResolveAddress:
netService:didNotResolve:
netServiceDidStop:
netService:didUpdateTXTRecordData:
netService:didAcceptConnectionWithInputStream:outputStream:
TXTRecord
_type
_addresses
_TXTRecord
_resolving
_hostName
_resolveBlocks
updateTXTRecord
isEqualToData:
isPublishing
dataFromTXTRecordDictionary:
setTXTRecordData:
setPublishing:
setPublishBlock:
publishWithOptions:
publishBlock
setTXTRecordValue:forKey:
removeTXTRecordValueForKey:
_publishing
_publishBlock
_isValidMethodPrediate:
_isValidURLPredicate:
initWithMethodPredicate:URLPredicate:matchBlock:
setRequestBlock:
_methodPredicate
_URLPredicate
_matchBlock
_requestBlock
initWithLocaleIdentifier:
timeZoneWithAbbreviation:
setTimeZone:
valueForHeaderField:
dateFormatter
setContentLength:
requestWithMethod:url:protocolVersion:
responseWithStatusCode:statusDescription:protocolVersion:
setDate:
contentType
setContentType:
contentLength
_message
initWithNamespace:data:
@16@0:8
v16@0:8
@"NSString"16@0:8
@"HMFLogCategory"16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
v24@0:8@16
v24@0:8@"NSNetServiceBrowser"16
v32@0:8@16@24
v32@0:8@"NSNetServiceBrowser"16@"NSDictionary"24
v36@0:8@16@24B32
v36@0:8@"NSNetServiceBrowser"16@"NSString"24B32
v36@0:8@"NSNetServiceBrowser"16@"NSNetService"24B32
@32@0:8@16@24
@20@0:8B16
v20@0:8B16
v24@0:8@?16
@?16@0:8
@"NSHashTable"
@"<HMFNetServiceBrowserDelegate>"
@"NSString"
@"NSObject<OS_dispatch_queue>"
@"NSNetServiceBrowser"
@24@0:8q16
v32@0:8@16q24
@24@0:8r^{sockaddr=CC[14c]}16
^{sockaddr_in=CCS{in_addr=I}[8c]}16@0:8
^{sockaddr_in=CCS{in_addr=I}[8c]}
^{sockaddr_in6=CCSI{in6_addr=(?=[16C][8S][4I])}I}16@0:8
^{sockaddr_in6=CCSI{in6_addr=(?=[16C][8S][4I])}I}
@24@0:8@16
@"HMFNetAddressInternal"
q16@0:8
v24@0:8q16
@"<HMFMemoryMonitorDelegate>"
@"NSObject<OS_dispatch_source>"
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8Q16Q24Q32
q24@0:8@16
v20@0:8I16
^{__SCNetworkReachability=}16@0:8
I16@0:8
@"<HMFNetMonitorDelegate>"
@"HMFNetAddress"
^{__SCNetworkReachability=}
@"NSUUID"
@"HMFMessageDestination"
@"NSDictionary"
@"HMFMessageTransport"
@40@0:8@16@24@32
@"HMFMessageInternal"
@72@0:8@16@24@32@40@?48B56B60B64B68
@40@0:8@16@24@?32
@48@0:8@16@24@32@?40
@48@0:8@16@24@32@40
@56@0:8@16@24@32@40@?48
@44@0:8@16@24@32B40
@52@0:8@16@24@32B40@?44
B32@0:8@16^B24
@56@0:8q16@24@32@40@48
@48@0:8q16@24@32@40
@32@0:8q16@24
@40@0:8@?16@24@32
@"NSNumber"
v32@0:8@"HMFMessageTransport"16@"HMFMessage"24
v40@0:8@16@24@?32
v40@0:8@16@24@32
v32@0:8@16@?24
@"NSMutableDictionary"
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@?40@?48
@32@0:8@16^{_CFHTTPServerRequest=}24
^{_CFHTTPServerRequest=}16@0:8
^{__CFReadStream=}16@0:8
^{_CFHTTPServerRequest=}
^{__CFReadStream=}
@"_HMFCFHTTPServerConnection"
@"NSMutableData"
@32@0:8@16q24
^{_CFHTTPServerResponse=}16@0:8
^{_CFHTTPServerResponse=}
@"_HMFCFHTTPServerRequest"
@"_HMFCFHTTPMessage"
@"<HMFMessageTransportDelegate>"
v32@0:8@"HMFNetServiceBrowser"16@"HMFNetService"24
v32@0:8@"HMFNetServiceBrowser"16@"NSError"24
@"HMFNetService"
@"<_HMFNetServiceMonitorDelegate>"
@"HMFNetServiceBrowser"
@40@0:8@16@24Q32
v24@0:8@"HMFNetMonitor"16
v32@0:8@"_HMFNetServiceMonitor"16@"HMFNetService"24
v28@0:8@16B24
v28@0:8@"_HMFNetServiceMonitor"16B24
v24@0:8@"HMFTimer"16
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
@32@0:8@16Q24
v24@0:8Q16
B20@0:8B16
@"NSURL"
@"<HMFHTTPClientDelegate>"
@"NSURLSession"
@"HMFNetMonitor"
@"NSOperationQueue"
@"_HMFNetServiceMonitor"
@"HMFExponentialBackoffTimer"
@32@0:8d16Q24
d16@0:8
@"<HMFTimerDelegate>"
@48@0:8d16d24q32Q40
v24@0:8d16
@24@0:8^{_CFHTTPServerConnection=}16
v24@0:8^{_CFHTTPServerRequest=}16
v40@0:8@16^{__CFReadStream=}24Q32
v32@0:8q16@24
v40@0:8q16@24@32
v32@0:8^{_CFHTTPServerResponse=}16@24
^{_CFHTTPServerConnection=}16@0:8
@"<_HMFCFHTTPServerConnectionDelegate>"
@"NSMutableArray"
^{_CFHTTPServerConnection=}
@"NSObject<OS_os_log>"
@"NSData"
@"HMFHTTPRequestInternal"
@48@0:8@16@24@32d40
@32@0:8Q16Q24
^{_CFHTTPServer=}16@0:8
@"<_HMFCFHTTPServerDelegate>"
^{_CFHTTPServer=}
@40@0:8q16@24@32
@"HMFHTTPResponseInternal"
@"HMFHTTPRequest"
^{MGNotificationTokenStruct=}16@0:8
^{MGNotificationTokenStruct=}
@"_HMFNetManagerWoWAssertion"
f16@0:8
v20@0:8f16
^{IONotificationPort=}16@0:8
^{IONotificationPort=}
v24@0:8@"_HMFCFHTTPServer"16
v32@0:8@"_HMFCFHTTPServer"16@"_HMFCFHTTPServerConnection"24
v32@0:8@"HMFHTTPClientConnection"16@"HMFHTTPRequest"24
v32@0:8@"HMFHTTPClientConnection"16@"NSError"24
@48@0:8@16@24Q32Q40
@"_HMFCFHTTPServer"
@"<HMFHTTPServerDelegate>"
@"HMFMutableNetService"
@40@0:8@16#24@32
@24@0:8Q16
@36@0:8@16B24@28
@24@0:8@?16
@24@0:8d16
@"NSObject<OS_dispatch_semaphore>"
@"NSError"
{?=qqq}24@0:8@16
v48@0:8{?=qqq}16@40
@56@0:8q16q24{?=qqq}32
{?=qqq}16@0:8
{?="majorVersion"q"minorVersion"q"patchVersion"q}
v32@0:8@"_HMFCFHTTPServerConnection"16@"_HMFCFHTTPServerRequest"24
@"<HMFHTTPClientConnectionDelegate>"
v24@0:8@"NSNetService"16
v32@0:8@"NSNetService"16@"NSDictionary"24
v32@0:8@"NSNetService"16@"NSData"24
v40@0:8@"NSNetService"16@"NSInputStream"24@"NSOutputStream"32
v32@0:8d16@?24
@"NSArray"
@"NSNetService"
@"<HMFNetServiceDelegate>"
@48@0:8@16@24@32Q40
@"NSPredicate"
@40@0:8@16@24q32
@40@0:8q16@24q32
@24@0:8^{__CFHTTPMessage=}16
^{__CFHTTPMessage=}16@0:8
^{__CFHTTPMessage=}
State
Homed Version
Home Manager
Sync Manager
Home
Room
Zone
Metadata
Characteristic
Service
Pending Invites
Incoming Invites
Outgoing Invites
BulletinNotification
BulletinNotificationGroup
BulletinNotificationGroupServices
BulletinNotificationGroupCameras
Service Group
Accessory
Secondary Accessory
Bridge
Bridged Accessory
Discovered Bridgeable Accessory
Category
Action Set
Trigger
Timer Trigger
Location
Event
Predicate
Recurrence
User
Removed User
Current User
Resident
Accessory Profile
Accessory Transport
Write Action
Keychain
Keychain Item
Mesh
Application Data
HomeNotificationRegistrations
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
%@ is unavailable
delegateQueue
propertyQueue
[%@] Failed to create internal net service browser
<%@%@, Domain = %@, Service Type = %@>
v8@?0
[%@] The browser is already browsing
[%@] Start browsing for %@%@
[%@] Stopping the browse
[%@] Browser started browsing
[%@] Browse did stop
[%@] Failed to browse
[%@] Failed to browse with error: %@
Operation cancelled.
Failed to search for services.
[%@] Added service: %@
[%@] The browse domain, %@, was removed
The search domain was removed.
[%@] Removed service: %@
clientQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_clientQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_delegateQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_propertyQueue
internal
T@"NSNetServiceBrowser",R,N,V_internal
browsing
TB,N,GisBrowsing,V_browsing
browseBlock
T@?,C,N,V_browseBlock
delegate
T@"<HMFNetServiceBrowserDelegate>",W,V_delegate
domain
T@"NSString",R,C,N,V_domain
serviceType
T@"NSString",R,C,N,V_serviceType
shouldCache
TB,N,V_shouldCache
cachedNetServices
T@"NSArray",R,C,N
HomeKitLinkTypeIP
HomeKitLinkTypeBluetoothLE
HomeKitLinkTypeUnknown
addressFamily
TQ,R,N,V_addressFamily
addressString
T@"NSString",R,C,N,V_addressString
Invalid sockaddr
T^{sockaddr_in=CCS{in_addr=I}[8c]},R,N,V_internal
T^{sockaddr_in6=CCSI{in6_addr=(?=[16C][8S][4I])}I},R,N,V_internal
Invalid hostname
hostname
T@"NSString",R,C,N,V_hostname
[%@] Invalid socket address family: %tu
[%@] Invalid hostname
<%@%@, Address = %@>
T@"HMFNetAddressInternal",R,N,V_internal
TQ,R,N
T@"NSString",R,C,N
memoryPressure
T@"NSObject<OS_dispatch_source>",R,N,V_memoryPressure
monitoring
TB,N,GisMonitoring,V_monitoring
T@"<HMFMemoryMonitorDelegate>",W,V_delegate
memoryState
Tq,R,N,V_memoryState
^(\d+)(\.(\d+))?(\.(\d+))?.*$
Failed to create version string regex with error: %@
Invalid version string: %@
%tu.%tu.%tu
HM.major
HM.minor
HM.update
supportsSecureCoding
TB,R
majorVersion
TQ,R,N,V_majorVersion
minorVersion
TQ,R,N,V_minorVersion
updateVersion
TQ,R,N,V_updateVersion
versionString
[%@] Failed to create network reachability monitor%@.
for %@
%@ '%@'
localhost
<%@%@>, Address = %@>
networkReachabilityRef
T^{__SCNetworkReachability=},R,N,V_networkReachabilityRef
currentNetworkFlags
TI,N,V_currentNetworkFlags
T@"<HMFNetMonitorDelegate>",W,V_delegate
netAddress
T@"HMFNetAddress",R,C,N,V_netAddress
reachable
TB,R,GisReachable,V_reachable
reachabilityPath
A valid object is required
objectHash
TQ,R,N,V_objectHash
object
T@,R,W,V_object
identifier
T@"NSUUID",C,N,V_identifier
name
T@"NSString",C,N,V_name
destination
T@"HMFMessageDestination",&,N,V_destination
messagePayload
T@"NSDictionary",C,N,V_messagePayload
responseHandler
T@?,C,N,V_responseHandler
transport
T@"HMFMessageTransport",W,N,V_transport
remoteSource
TB,N,GisRemoteSource,V_remoteSource
internalMessage
TB,N,GisInternalMessage,V_internalMessage
entitledMessage
TB,N,GisEntitledMessage,V_entitledMessage
locationAuthorizedMessage
TB,N,GisLocationAuthorizedMessage,V_locationAuthorizedMessage
Name is a required argument
Destination is a required argument
%@ %@
<%@%@, Identifier = %@, Name = %@, Destination = %@>
T@"NSUUID",C,N
T@"HMFMessageDestination",&,N
T@"NSDictionary",C,N
T@?,C,N
TB,R,N,GisInternalMessage,V_internalMessage
TB,R,N,GisEntitledMessage,V_entitledMessage
TB,R,N,GisLocationAuthorizedMessage,V_locationAuthorizedMessage
T@"HMFMessageInternal",R,N,V_internal
T@"HMFMessageTransport",R,W,N
TB,R,N,GisRemoteSource,V_remoteSource
T@"NSUUID",C,D,N
T@"NSString",C,D,N
T@"HMFMessageDestination",&,D,N
T@"NSDictionary",C,D,N
T@?,C,D,N
HMFErrorDomain
hmfError
TB,R,N,GisHMFError
receiverQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_receiverQueue
messageHandler
T@?,C,N,V_messageHandler
token
T@"NSNumber",&,N,V_token
HMFMessageDispatcher: Receiver is returning nil for targetUUID when registering for message '%@'
Messages are required to have a valid destination, treating this as a fan out message
HMFMessageDispatch %@ / %@ stalled in dispatch queue %.2f ms.
HMFMessageDispatch (broadcast) %@ / %@ stalled in dispatch queue %.2f ms.
Message %@ was not handled
Invalid paramter.
The disatcher does not have a valid transport
T@"HMFMessageTransport",R,N,V_transport
workQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_workQueue
notificationHandlers
T@"NSMutableDictionary",&,N,V_notificationHandlers
Cannot send with response handler if the message already has a response handler
v24@?0@"NSError"8@"NSDictionary"16
v16@?0@"NSError"8
bodyData
T@"NSMutableData",R,N,V_bodyData
requestRef
T^{_CFHTTPServerRequest=},R,N,V_requestRef
bodyStream
T^{__CFReadStream=},R,N,V_bodyStream
connection
T@"_HMFCFHTTPServerConnection",R,W,N,V_connection
Failed to create message
response
T@"_HMFCFHTTPMessage",R,N,V_response
request
T@"_HMFCFHTTPServerRequest",R,N,V_request
responseRef
T^{_CFHTTPServerResponse=},R,N,V_responseRef
completionHandler
T@?,C,N,V_completionHandler
You must override %@ in a subclass
T@"<HMFMessageTransportDelegate>",W,V_delegate
default
DumpState
Failed to start browser with error: %@
NetServiceMonitor
Updated the service: %@
The service, %@, is now reachable
The service, %@, is now unreachable
Monitor did stop with error: %@
Resolving monitored net service
Updating monitored net service: %@
Failed to resolve monitored net servive, %@, with error: %@
v24@?0@"HMFNetAddress"8@"NSError"16
Net service was removed, marking as unreachable: %@
netServiceBrowser
T@"HMFNetServiceBrowser",R,N,V_netServiceBrowser
T@"<_HMFNetServiceMonitorDelegate>",W,V_delegate
netService
T@"HMFNetService",R,C,V_netService
[%@] Scheme is required
[%@] Host address is required
[%@] Port is required
%@://%@:%tu
[%@] Invalid base URL: %@
[%@] Network service is required
reachabilityProbeQueue
Registering for WOW assertion
<%@%@>
HTTPClient
https
http
No available IPv4 address, falling back to '%@', WoW may fail.
Notifying delegate of reachablity change to %@
unreachable
Starting confirmation for service: %@
Failed to confirm service, marking the client as unreachable
Confirmed service, requesting application ping
Service is unreachable and a timeout occurred, performing a one-time ping
Requesting client to perform a ping
Delegated ping failed, marking the client as unreachable
Delgated ping succeeded, marking the client as reachable
v12@?0B8
Going to attempt to retry delegated ping later
Failed to resolve server network address with error: %@
Not connected to the server, cannot send request
Override the request URL to: %@
Sending request: %@
Invalid parameter.
Invalid response scheme type
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
Received notification that the client is now reachable
Received notification that the client is no longer reachable
Updating net service to: %@
Received notificcation that the net service is now reachable
Cancelling pending confirmations due to reachability change
Received notification that the net service was removed
Retrying delegated ping
Session did become invalid with error: %@
Recevied challenge: %@
Received connection challenge, accepting the server's certificate as the client is set to allow anonymous connections
session
T@"NSURLSession",R,N,V_session
reachabilityMonitor
T@"HMFNetMonitor",R,N,V_reachabilityMonitor
T@"NSOperationQueue",R,N,V_reachabilityProbeQueue
netServiceMonitor
T@"_HMFNetServiceMonitor",R,N,V_netServiceMonitor
delegatedPingTimer
T@"HMFExponentialBackoffTimer",&,N,V_delegatedPingTimer
TB,N,GisReachable,V_reachable
T@"<HMFHTTPClientDelegate>",W,V_delegate
baseURL
T@"NSURL",R,N,V_baseURL
T@"HMFNetService",R,N,V_netService
options
TQ,R,N,V_options
allowAnonymousConnection
TB,N,V_allowAnonymousConnection
[HMFTimer] Expiration, %f, must be greater than 0
[HMFTimer] Failed to create dispatch_source
Timer
<%@%@, isRunning: %@, interval: %f s, leeway: %f s, repeating: %@>
timer
T@"NSObject<OS_dispatch_source>",R,N,V_timer
running
TB,N,GisRunning,V_running
T@"<HMFTimerDelegate>",W,V_delegate
timeInterval
Td,R,N,V_timeInterval
leeway
TQ,R,N,V_leeway
[HMFExponentialBackoffTimer] The exponential factor cannot be 0
[HMFExponentialBackoffTimer] The minimum time interval, %f, must be greater than 0
[HMFExponentialBackoffTimer] The maximum time interval, %f, must be greater than or equal to the minimum time interval, %f
Td,N
increasing
TB,R,N,GisIncreasing,V_increasing
minimumTimeInterval
Td,R,N,V_minimumTimeInterval
maximumTimeInterval
Td,R,N,V_maximumTimeInterval
exponentialFactor
Tq,R,N,V_exponentialFactor
Failed to create connection, connection is invalid
Failed to open request body stream
Sending a 500 (Internal Server Error) for the request: %@
Sending a 501 (Not Implemented) for the request: %@
Got zero bytes read and no accumulated read bytes
kCFStreamEventUnknown(%ld)
Failed to send response, %@, with error: %@
Sending response: %@
The response is invalid: %@
Completed sending response, %@, with error: %@
CFHTTPServer
pendingRequests
T@"NSMutableArray",R,N,V_pendingRequests
pendingRespones
T@"NSMutableArray",R,N,V_pendingRespones
T^{_CFHTTPServerConnection=},R,N,V_internal
T@"<_HMFCFHTTPServerConnectionDelegate>",W,V_delegate
valid
TB,R,N,GisValid
address
T@"HMFNetAddress",R,N,V_address
Connection invalidated
Connection received error: %@
<%@%@, Target = %@>
target
T@"NSUUID",R,C,N,V_target
com.apple.HomeKit
[%@] 
com.apple.HomeKit.Logging.CategoryQueue
loggingSubsystem
T@"NSString",R,N,V_loggingSubsystem
T@"NSObject<OS_os_log>",R,N,V_internal
loggingCategory
T@"NSString",R,N,V_loggingCategory
T@"NSURL",C,N,V_URL
method
T@"NSString",C,N,V_method
headerFields
T@"NSDictionary",&,N,V_headerFields
body
T@"NSData",&,N,V_body
<%@%@, URL = %@, Method = %@, 
Headers = %@, 
Body = %@>
timeoutInterval
Td,N,V_timeoutInterval
T@"HMFHTTPRequestInternal",R,N,V_internal
T@"NSURL",R,C,N
T@"NSDictionary",R,N
T@"NSData",R,N
urlRequest
T@"NSURLRequest",R,C,N
Test
Td,D,N
T@"NSData",C,D,N
T@"NSDictionary",&,D,N
Host
com.apple.HMFoundation.%@%@%@.%tu
Failed to create server, server is invalid
Requiring TLS in anonymous mode
Failed to bind server
T^{_CFHTTPServer=},R,N,V_internal
connections
T@"NSMutableArray",R,N,V_connections
T@"<_HMFCFHTTPServerDelegate>",W,V_delegate
port
TQ,R,N,V_port
connectionIdleTimeout
Server invalidated
Server received error: %@
Server did open connection: %@
Server did close connection: %@
statusCode
Tq,R,N,V_statusCode
T@"NSDictionary",R,N,V_headerFields
T@"NSData",C,N,V_body
<%@%@, Status Code = %zd, 
Headers = %@, 
Body = %@,
Request = %@>
T@"HMFHTTPResponseInternal",R,N,V_internal
T@"HMFHTTPRequest",R,N,V_request
Tq,R,N
HMFSystemInfoNameUpdatedNotification
HMFSystemInfoNameNotificationKey
UserAssignedDeviceName
v24@?0^{__CFString=}8^{__CFDictionary=}16
Updated system name to '%@'
T@"NSObject<OS_dispatch_queue>",R,N,V_workQueue
notificationToken
T^{MGNotificationTokenStruct=},R,V_notificationToken
T@"NSString",C,V_name
wowAssertion
T@"_HMFNetManagerWoWAssertion",W,V_wowAssertion
HMF.assertionKey
HMFPowerManagerBatteryStateDidChangeNotification
HMFPowerManagerBatteryLevelDidChangeNotification
pX2TxZTxWKS7QSXZDC/Z6A
Battery state changed: %tu
CurrentCapacity
MaxCapacity
Unable to determine the current battery level
ExternalChargeCapable
FullyCharged
Unable to determine the current battery state
IOServiceFirstMatch
IOPMPowerSource
notificationPort
T^{IONotificationPort=},R,N,V_notificationPort
interestNotification
TI,R,N,V_interestNotification
batteryState
Tq,V_batteryState
batteryLevel
Tf,V_batteryLevel
hasBattery
TB,R,V_hasBattery
IOGeneralInterest
[%@] A valid name is required for publishing
_http
%@ %tu
<%@%@, Service Type = %@, Name = %@, Port = %tu, Connection Idle Timeout: %f>
HTTPServer
Starting server
Failed to start server
Enabling WoW
Started server on port %tu
Failed to publish net service with error: %@
Stopped server with error: %@
Found a matching request handler, %@, for the request, %@, but there was no request block
Found a matching request handler, %@, for the request, %@
Opening new connection: %@
Failed to open new connection, %@, with error: %@
Closing connection: %@
Server invalidated.
T@"_HMFCFHTTPServer",&,N,V_internal
T@"<HMFHTTPServerDelegate>",W,V_delegate
T@"NSString",R,C,N,V_name
TQ,R,V_port
Td,V_connectionIdleTimeout
T@"HMFMutableNetService",R,N,V_netService
T@"NSArray",R,C,V_connections
requestHandlers
T@"NSArray",R,C
### Keyed unarchiving resulted in exception: %@
    
step
T@"NSString",R,N,V_step
factor
TQ,R,N,V_factor
level
T@"NSString",R,N,V_level
%@%@{
%@%@ = 
%@%@(
%@%@
domain: %@, code: %ld, userInfo = %@
<%tu s, %tu m, %tu h, %tu d, %tu m>
en_US_POSIX
YYYY_MM_dd_HH_mm_ss_SSS_ZZZ
MM/dd/yyyy HH:mm:ss
yyyy-MM-dd'T'HH:mm:ssZZZZZ
<%@, Identifier=%@>
finishedSemaphore
T@"NSObject<OS_dispatch_semaphore>",&,N,V_finishedSemaphore
dispatchTimeout
error
T@"NSError",&,N,V_error
timeout
Td,R,N,V_timeout
Mac OS X
iPhone OS
Watch OS
Apple TVOS
iPhone
iPod
iPad
AppleTV
Watch
%zd.%zd.%zd
ProductName
DeviceClass
<%@%@, Platform = %@, Class = %@, Operating Sytem Version = %@>
HMF.platform
HMF.class
HMF.majorVersion
HMF.minorVersion
HMF.patchVersion
productPlatform
Tq,R,N,V_productPlatform
productClass
Tq,R,N,V_productClass
operatingSystemVersion
T{?=qqq},R,N,V_operatingSystemVersion
<%@%@, Address %@>
Failed to open connection
Generic error.
Failed to open connection.
T@"_HMFCFHTTPServerConnection",R,N,V_internal
peerAddress
T@"HMFNetAddress",R,N
T@"<HMFHTTPClientConnectionDelegate>",W,V_delegate
HMFNetServiceDidStartMonitoringInternalNotification
NSNetServiceErrorDomain
<%@%@, Domain = %@, Type = %@, Name = %@, Port = %tu, Addresses = %@>
[%@] Skipping resolving service, already have a cached address: %@
[%@] Starting to resolve service
[%@] Net service will resolve
[%@] Net service resolved
[%@] Net service failed to resolve with error: %@
Not found.
Failed to resolve.
[%@] Net service stopped resolving
Cancelled.
Net service stopped resolving.
[%@] Net service TXT record updated: %@
resolveBlocks
T@"NSMutableArray",R,N,V_resolveBlocks
resolving
TB,N,GisResolving,V_resolving
T@"NSNetService",R,N,V_internal
T@"<HMFNetServiceDelegate>",W,V_delegate
type
T@"NSString",R,C,N,V_type
hostName
T@"HMFNetAddress",R,C,V_hostName
addresses
TXTRecord
T@"NSDictionary",R,C,N
[%@] Service domain is required
[%@] Service type is required
[%@] Service name is required
[%@] Invalid TXT record key, %@, error: %@
[%@] Invalid TXT record value, %@, error: %@
[%@] Failed to update TXT record
[%@] The service is already publishing
[%@] Cannot publish without a resolved port
Cannot publish without a resolved port.
[%@] Failed to create internal net service
Failed to create record.
[%@] Start publishing the net service
[%@] Stopping the net service
[%@] Net service will publish
[%@] Published
[%@] Failed to publish
[%@] Failed to publish with error: %@
Failed to publish net service.
[%@] Net service did stop
Net service stopped publishing.
publishing
TB,GisPublishing,V_publishing
publishBlock
T@?,C,N,V_publishBlock
TQ,N,V_port
[%@] Failed to serialize TXT record key with exception: %@
Invalid TXT record key.
[%@] Failed to serialize TXT record value with exception: %@
Invalid TXT record value.
[HMFHTTPRequestHandler] Paramter is requred: 'methodPredicate'
[HMFHTTPRequestHandler] Invalid method predicate
[HMFHTTPRequestHandler] Paramter is requred: 'URLPredicate'
[HMFHTTPRequestHandler] Invalid URL predicate
methodPredicate
T@"NSPredicate",R,C,N,V_methodPredicate
URLPredicate
T@"NSPredicate",R,C,N,V_URLPredicate
matchBlock
T@?,R,C,N,V_matchBlock
requestBlock
T@?,C,N,V_requestBlock
Transfer-Encoding
Content-Length
Content-Type
Date
EEE, d MMM yyyy HH:mm:ss z
en_US
message
T^{__CFHTTPMessage=},R,N,V_message
T@"NSData",C,N
The namespace is required
%{public}@%{public}@
@(#)PROGRAM:HMFoundation  PROJECT:HomeKit-1
