<%@ %p setupDuration:%f error:%@>
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
error
T@"NSError",&,N,V_error
setupDuration
Td,N,V_setupDuration
MPCRadioAVItemAlbumBuyButtonInfoDidChangeNotification
MPCRadioAVItemIsInWishListDidChangeNotification
_MPCRadioAVItemInternalIsInWishListDidChangeNotification
RadioRequestDidFinishNotification
 radioTrack:%@
Tilt
v16@?0@"MPIdentifierSet"8
v16@?0@"MPModelStoreAsset"8
@"MPArtworkCatalog"16@?0@"MPModelSong"8
@"MPArtworkCatalog"16@?0@"MPModelAlbum"8
v16@?0@"MPModelAlbum"8
v16@?0@"MPModelArtist"8
v16@?0@"MPModelLyrics"8
v16@?0@"MPModelSong"8
v16@?0@"MPModelGenericObject"8
MPPlaybackHistory
-[MPCRadioAVItem _loadMediaItemWithCompletionHandler:]
v8@?0
v24@?0@"NSArray"8@"NSError"16
app.music.tilt.unknown
[MPCRadioAVItem] Adding station based on track store ID: %lli
[MPCRadioAVItem] Added station: %@, at global version: %llu
[MPCRadioAVItem] Failed to add station: %@
v32@?0@"RadioStation"8Q16@"NSError"24
v16@?0@"NSError"8
preferredSoundCheckVolumeNormalization
tracks
v32@?0@"MPSubscriptionStatusPlaybackInformation"8B16B20@"NSError"24
[MPCRadioAVItem] Like/ban request for '%@' (%li) completed with status: %li
v24@?0@"NSDictionary"8@"NSError"16
No track to like '%@'
No station for track '%@'
rtcReportingParentHierarchyToken
T@,R,N
rtcReportingServiceIdentifier
T@"NSString",R,C,N
rtcReportingAssetType
Tq,R,N
heartbeatInvalid
TB,N,GisHeartbeatInvalid,V_heartbeatInvalid
_artworkCollection
T@"RadioArtworkCollection",R,C,N
_expectedDuration
Td,R,N
_hasLyrics
TB,R,N
T@,&,N,V_rtcReportingParentHierarchyToken
isInWishList
TB,N,V_isInWishList
station
T@"RadioStation",&,N,V_station
stationHash
T@"NSString",R,N,V_stationHash
stationID
Tq,R,N,V_stationID
stationName
T@"NSString",R,N,V_stationName
stationStringID
T@"NSString",R,N,V_stationStringID
v32@?0@"NSString"8@16^B24
song
kind
album-artist
playlist-name
track-count
track-number
artist-name
composer-name
copyright
disc-count
disc-number
genre-name
compilation
duration
released-date
item-id
item-name
size
year
albumBuyButtonType
albumBuyButtonText
isRadioItem
radioTrack
T@"RadioTrack",R,N
supportsRadioTrackActions
com.apple.MediaPlaybackCore.MPCPrepareRadioPlaybackOperation
v24@?0@"SSAuthenticateResponse"8@"NSError"16
v24@?0@"RadioGetTracksResponse"8@"NSError"16
com.apple.MediaPlaybackCore.MPCPrepareRadioPlaybackOperation.operationQueue
preparedBlock
T@?,C
playbackLease
T@"SSVPlaybackLease",&
requestContext
T@"RadioRequestContext",C,V_requestContext
T@"RadioStation",&
nowPlayingMatchContext
T@"RadioStationMatchContext",&
stationMatchContext
willContinuePlayback
MPCRadioStreamTrackAVItemDidReceiveTimedMetadataPingsNotification
MPCRadioStreamTrackAVItemPingsUserInfoKey
com.apple.radio.adamid
com.apple.radio.explicit
com.apple.radio.ping.iad
com.apple.radio.ping.jingle
info
artworkURL_
_MPRadioStreamAVItemTimedMetadataObservationContext
timedMetadata
HierarchyToken
app.music.tilt.stream-track
[MPRadioStreamAVItem] AVAssetResouceLoader not a secure key delivery request: %@
[MPRadioStreamAVItem] AVAssetResouceLoader is a secure key delivery request: %@
com.apple.MediaPlaybackCore.MPCRadioStreamTrackAVItem.secureKeyDeliveryOperationQueue
[MPRadioStreamAVItem] Response to secure key delivery request operation for %@ is %@
collectionName
artwork
artwork-url
contentRating
system
riaa
value
hasLyrics
album-id
streamTrack
T@"RadioStreamTrack",R,N
effectiveArtworkCollection
T@"RadioArtworkCollection",R,N
<%@ %p title:'%@' artist:'%@' artworkCollection:%@ album:'%@' explicit:%@>
Tq,N,V_albumBuyButtonType
T@"NSString",C,N,V_albumBuyButtonText
album
T@"NSString",C,N,V_album
artist
T@"NSString",C,N,V_artist
artworkCollection
T@"RadioArtworkCollection",&,N,V_artworkCollection
explicit
T@"NSNumber",&,N,GisExplicit,V_explicit
TB,N,V_hasLyrics
title
T@"NSString",C,N,V_title
MPCAppleMusicPlaybackIntentTracklistTokenStoreIDs
supportsSecureCoding
TB,R
storeIDs
T@"NSArray",C,N,V_storeIDs
 kind=%@
 title=%@
 source=%@
tracklistDataSource
T@"<MPCPlaybackIntentDataSource>",R,N
Tq,N,V_kind
tracklistSource
Tq,N,V_tracklistSource
tracklistToken
T@"<NSSecureCoding>",&,N,V_tracklistToken
artworkSource
Tq,N,V_artworkSource
artworkToken
T@"<NSSecureCoding>",&,N,V_artworkToken
shuffleMode
Tq,N,V_shuffleMode
playActivityFeatureName
T@"NSString",C,N,V_playActivityFeatureName
playActivityRecommendationData
T@"NSData",C,N,V_playActivityRecommendationData
com.apple.MediaPlaybackCore.MPCRadioGetTracksOperation.lock
RadioRequestErrorDomain
EXPLICIT_CONTENT_NOT_ALLOWED_TITLE
MediaPlayer
EXPLICIT_CONTENT_NOT_ALLOWED_DUE_TO_RESTRICTIONS_%@
EXPLICIT_CONTENT_NOT_ALLOWED_DUE_TO_SWITCH
CANCEL
EXPLICIT_CONTENT_NOT_ALLOWED_ENABLE_EXPLICIT_BUTTON_TITLE
EXPLICIT_CONTENT_NOT_ALLOWED_SETTINGS_BUTTON_TITLE
v32@?0@"MPUserNotification"8Q16@"NSDictionary"24
prefs:root=General&path=RESTRICTIONS
com.apple.MediaPlaybackCore.MPCRadioGetTracksOperation.userNotification
T@"RadioStationMatchContext",&,N
numberOfTracks
playbackContext
T@"RadioPlaybackContext",C
reasonType
Tq,R,V_reasonType
T@"RadioRequestContext",&
responseBlock
shouldIncludeStationInResponse
TB,N
MPCRadioPlaybackCoordinatorInitializationException
Do not use -init. Use -initWithPlayer: instead.
[MPCRadioPlaybackCoordinator] Received reset playback timeout MediaRemote command. Resetting playback timeout.
^{__CFArray=}20@?0I8^{__CFDictionary=}12
RadioModelDidChangeNotification
com.apple.springboard.lockstate
[MPCRadioPlaybackCoordinator] Resetting playback time out due to received device lock state did change notification (isLocked: %li).
[MPCRadioPlaybackCoordinator] Received device lock state did change notification (isLocked: %li).
v12@?0i8
Audio/Video
ExplicitVolumeChange
FullMuteChange
[MPCRadioPlaybackCoordinator] Effective volume changed for reason: %@, resetting playback timeout.
[MPCRadioPlaybackCoordinator] Full mute did change, resetting playback timeout.
[MPCRadioPlaybackCoordinator] Resetting playback timeout due to IsInWishlist changing for item: %@
[MPCRadioPlaybackCoordinator] Resetting playback timeout due to LikedState changing for item: %@
[MPCRadioPlaybackCoordinator] Item (%@) was skipped due to the duration being %f and currentTime being %f. Resetting playback timeout.
[MPCRadioPlaybackCoordinator] Item time: %f, duration: %f
[MPCRadioPlaybackCoordinator] Item (%@) was skipped due to the duration never loading due to status: %li. Resetting playback timeout.
[MPCRadioPlaybackCoordinator] Item (%@) wasn't loaded and we didn't attempt to load it. Assuming a skip, resetting the playback timeout.
[MPCRadioPlaybackCoordinator] Playback timeout reached, pausing playback...
deleted
inserted
updated
[MPCRadioPlaybackCoordinator] Cancelling pause timeout.
[MPCRadioPlaybackCoordinator] Cancelling playback timeout notification.
[MPCRadioPlaybackCoordinator] Playback timeout notification expiration timer was cancelled.
[MPCRadioPlaybackCoordinator] The current item (%@) has been playing longer than the playback timeout (%f) from the starting date (%@).
[MPCRadioPlaybackCoordinator] Playing the currentItem (%@) will lead to the playback timeout (%f) from the starting date (%@).
com.apple.MediaPlaybackCore
PLAYBACK_TIMEOUT_ALERT_TITLE
Radio
PLAYBACK_TIMEOUT_ALERT_BUTTON_STOP
v16@?0@"MPUserNotification"8
MPCRadioPlaybackCoordinatorUserNotificationResponse
[MPCRadioPlaybackCoordinator] Failed to create playback timeout notification with error: %li
[MPCRadioPlaybackCoordinator] Finished refresh of recent stations with error %@
[MPCRadioPlaybackCoordinator] Started using background network (was using: %d)
[MPCRadioPlaybackCoordinator] Ended using background network, restoring previous value: %d)
[MPCRadioPlaybackCoordinator] Scheduling playback timeout for %f seconds, starting at %@
[MPCRadioPlaybackCoordinator] Scheduling pause timeout for %f seconds
[MPCRadioPlaybackCoordinator] Pause timeout reached, ending playback...
v16@?0@"RadioPlaybackTimeoutInfo"8
player
T@"MPAVController",R,N,V_player
recentStationsController
T@"RadioRecentStationsController",&,N,V_recentStationsController
reportingPlaybackObserver
T@"MPCReportingPlaybackObserver",&,N,V_reportingPlaybackObserver
com.apple.MediaPlaybackCore.MPCAppleMusicPlaybackIntentDataSource.operationQueue
v24@?0@"MPStoreItemMetadata"8^B16
currentItem
state
parentAppBundleID
systemPlayer
T@"MPCPlayer",R,N,V_systemPlayer
commandCenter
T@"MPRemoteCommandCenter",R,N,V_commandCenter
applicationPlayer
T@"MPCPlayer",&,N,V_applicationPlayer
com.apple.MediaPlaybackCore.MPCPlaybackHistoryObserver.operationQueue
T@"MPCPlayer",R,N,V_player
MPCQueueFeederContentItemIdentifierCollectionDidChangeNotification
MPC_contentItemIdentifierCollection
T@"MPCContentItemIdentifierCollection",R,N
MediaPlaybackCoreErrorDomain
SIM_VOLUME
v24@?0@"MPCPlayerItemContainer"8@"NSError"16
v24@?0@"MPQueueFeeder"8@"NSError"16
v16@?0@"NSArray"8
playback_archive
MPCPlayerStateRestorationPlaylistManagerID
MPCPlayerStateRestorationPreviousAttemptPlaylistManagerID
MPCPlayerRestorationPreviousAttemptCount
MPCPlayerStateRestorationPlaylistManagerCoderData
PlaybackLogging
Failed decoding playlist manager %lu times. Skipping.
v24@?0@"MPPlaybackContext"8@"NSError"16
^id(\w+\.\d+)
activeRouteName
currentContainer
T@"MPCMediaPlayerLegacyAVController",&,N,V_player
playerObserver
T@"MPCMediaPlayerLegacyNowPlayingObserver",&,N,V_playerObserver
reportingController
T@"MPCMediaPlayerLegacyReportingController",&,N,V_reportingController
radioPlaybackCoordinator
T@"MPCRadioPlaybackCoordinator",&,N,V_radioPlaybackCoordinator
avController
T@"MPAVController",R,N
T@"RadioRecentStationsController",&,N
iAmTheiPod
TB,N,V_iAmTheiPod
hardQueueItemCount
TQ,R,N
pictureInPictureSupported
fallbackPlaybackIntent
T@"MPCPlaybackIntent",&,N,V_fallbackPlaybackIntent
music
T@"MPCMediaPlayerLegacyPlayer",W,N,V_player
jinglePlayActivityReportingController
T@"MPCJinglePlayActivityReportingController",&,N,V_jinglePlayActivityReportingController
fallbackPlaybackContext
T@"MPPlaybackContext",&,N,V_fallbackPlaybackContext
mpcPlayer
T@"MPCMediaPlayerLegacyPlayer",W,N,V_mpcPlayer
playlistManagerUUID
T@"NSUUID",&,N,V_playlistManagerUUID
DebugSaveAssets
com.apple.mobileipod
Media
Debug
plist
app.music.tilt.track
AlwaysUse256kbpsQuality
AlwaysUse64kbpsQuality
downloadKey
pinf
assetFlavor
com.apple.MediaPlaybackCore.MPCRadioGetTracksController.accessQueue
com.apple.MediaPlaybackCore.MPCRadioGetTracksController.getTracksRequest
v16@?0@?<v@?@"NSError">8
v32@?0@"NSArray"8Q16@"NSError"24
MPCAVPlaylistManagerDisableQueueModificationsDidChange
playlistManagerArchiveVersion
hardQueueSourceContexts
hardQueueInsertionIndex
repeatPlaylistIdentifier
softQueueFeeder
disableSoftQueueFaulting
maximumModifiedPlaylistIterationIndex
ignoreSoftQueueInvalidation
ignoreHardQueueInvalidation
softQueueModifications
v32@?0@"_MPCAVItemSourceContext"8Q16^B24
com.apple.MediaPlaybackCore.MPCMediaPlayerLegacyPlaylistManager.accessQueue
com.apple.MediaPlaybackCore.MPCMediaPlayerLegacyPlaylistManager.musicPlayerControllerAccessQueue
ignoreUpNextDisabled
com.apple.Music
UpNextDisabled
-[MPCMediaPlayerLegacyPlaylistManager addPlaybackContext:toQueueWithInsertionType:completionHandler:]
Could not add tracks to Up Next
v24@?0Q8@"NSError"16
-[MPCMediaPlayerLegacyPlaylistManager clearHardQueue]
-[MPCMediaPlayerLegacyPlaylistManager clearSoftQueue]
-[MPCMediaPlayerLegacyPlaylistManager setDisableQueueModifications:]
-[MPCMediaPlayerLegacyPlaylistManager moveItemAtPlaybackIndex:toPlaybackIndex:intoHardQueue:]
-[MPCMediaPlayerLegacyPlaylistManager removeItemAtPlaybackIndex:]
com.apple.mobileipod.playbackQueueDidChangeNotification
-[MPCMediaPlayerLegacyPlaylistManager _prepareToQueuePlaybackIndex:selectionDirection:]
-[MPCMediaPlayerLegacyPlaylistManager queueFeeder:didChangeContentsWithPreferredStartIndex:error:]
keepingCurrentItem because currentItem was found after invalidation at index %lu.
not keepingCurrentItem because currentItem was not found in active queue feeder.
keepingCurrentItem because preferredStartIndex (%lu) was still currentItem.
not keepingCurrentItem because currentItem was not at the preferredStartIndex (%lu).
keepingCurrentItem because queue changes were not for the active queue feeder.
v16@?0@"MPMusicPlayerControllerQueue"8
allowsUserVisibleUpcomingItems
canSeek
canSkipToPreviousItem
playbackMode
userCanChangeShuffleAndRepeatType
T@"MPQueueFeeder",&,N,V_softQueueFeeder
T@"NSMutableArray",&,N,V_hardQueueSourceContexts
lastPlayedSoftQueueItem
T@"MPAVItem",&,N,V_lastPlayedSoftQueueItem
nextCurrentIndex
Tq,N,V_nextCurrentIndex
Tq,N,V_hardQueueInsertionIndex
repeatPlaylistIdentifer
T@"_MPCAVItemSourceContext",C,N,V_repeatPlaylistIdentifer
T@"_MPCAVPlaylistIteration",&,N,V_softQueueModifications
disableQueueModifications
TB,N,V_disableQueueModifications
hardQueuePlaylistIndexRange
T{_NSRange=QQ},R,N
softQueuePlaylistIndexRange
queueFeeder
identifier
%@ queueFeeder:%@ itemIdentifier:%@
itemIdentifier
T@"<MPAVItemQueueIdentifier>",&,N,V_itemIdentifier
T@"MPQueueFeeder",&,N,V_queueFeeder
sourceContexts
iterationIndex
count
indexToFaultIn
T@"MPSparseArray",&,N,V_sourceContexts
TQ,N,V_iterationIndex
TQ,N,V_count
TQ,N,V_indexToFaultIn
v16@?0@"MPModelObject"8
artworkCatalog
durationSnapshot
modelGenericObjectRepresentation
composerName
avItem
T@"MPAVItem",R,N,V_avItem
app.music.tilt.preview-track
v16@?0@"NSDictionary"8
v40@?0q8r^@16Q24^B32
MPCModelPlaybackIntentTracklistTokenRequest
MPCModelPlaybackIntentTracklistTokenStartItemIdentifiers
requiredPropertiesForStaticMediaClips
T@"MPPropertySet",R,N
request
T@"MPModelRequest",C,N,V_request
startItemIdentifiers
T@"MPIdentifierSet",C,N,V_startItemIdentifiers
com.apple.MediaPlayer.MPCReportingController.accessQueue
parentReportingController
T@"MPCReportingController",W,N
childReportingControllers
T@"NSArray",R,C,N
DebugDisablePlaybackTimeout
DebugPlaybackTimeoutDuration
MPCJinglePlayActivityReportingControllerDidFlushEventsNotification
MPCJinglePlayActivityReportingControllerUserInfoKeyDidIncludeContainerChangeEvent
com.apple.MPCFoundation.MPCJinglePlayActivityReportingController.accessSerialQueue
play-activity-feed-post-all-play-starts
playActivityController
T@"SSVPlayActivityController",R,N,V_playActivityController
shouldReportAggregateTimePlayActivityEvents
TB,N,V_shouldReportAggregateTimePlayActivityEvents
shouldReportPlayActivityEvents
TB,N,V_shouldReportPlayActivityEvents
com.apple.MediaPlaybackCore.MPCRadioArtworkDataSouce.cachedArtworkRepresentationsAccessQueue
image/jpeg
v32@?0@"NSData"8@"NSString"16@"NSError"24
v32@?0@"<NSCopying><NSObject>"8@"MPArtworkRepresentation"16^B24
prefixItem
T@"RadioStationMatchContext",&,N,V_nowPlayingMatchContext
T@"MPCPlayerItem",&,N,V_prefixItem
T@"RadioStationMatchContext",&,N,V_stationMatchContext
T@"NSArray",C,N,V_tracks
TB,N,V_willContinuePlayback
app.music.tilt.audio-clip
audioClip
T@"RadioAudioClip",R,N
mpcReporting_quickPlay
TB,R,N,GmpcReporting_isQuickPlay
offline
TB,N,GisOffline,V_offline
T@"MPCReportingController",R,N,V_reportingController
SBEnabled
TB,N,GisSBEnabled,V_SBEnabled
storeAccountID
TQ,N,V_storeAccountID
storeFrontID
T@"NSString",C,N,V_storeFrontID
equivalencySourceAdamID
Tq,N,V_equivalencySourceAdamID
eventDuration
Td,N,V_eventDuration
overrideItemType
TQ,N,V_overrideItemType
lyricsID
T@"NSString",C,N,V_lyricsID
itemGenericObject
T@"MPModelGenericObject",&,N,V_itemGenericObject
shouldReportPlayEventsToStore
TB,N,V_shouldReportPlayEventsToStore
trackInfo
T@"NSData",C,N,V_trackInfo
modelPlayEvent
T@"MPModelPlayEvent",&,N,V_modelPlayEvent
featureName
T@"NSString",C,N,V_featureName
recommendationData
T@"NSData",C,N,V_recommendationData
requestingBundleIdentifier
T@"NSString",C,N,V_requestingBundleIdentifier
requestingBundleVersion
T@"NSString",C,N,V_requestingBundleVersion
SSVMutablePlayActivityEvent
Unable to find class %s
/System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
MPCRadioPlaybackIntentTracklistToken
radioStationPlaybackMetadata
T@"MPCRadioStationPlaybackMetadata",C,N,V_radioStationPlaybackMetadata
nowPlayingContext
T@"RadioStationMatchContext",&,N,V_nowPlayingContext
T@"MPQueueFeeder",R,N,V_queueFeeder
MPCRadioQueueFeederErrorDomain
_MPCRadioPlaceholderItemIdentifier
_MPCRadioQueueFeederErrorDomain
MPCRadioQueueFeederExplicitTracksEnabledDidChangeNotification
MPCRadioQueueFeederUserDefaultExplicitTracksEnabledDidChangeNotification
v24@?0@"RadioStoreBag"8@"NSError"16
radioStationStringID
radioStationHash
radioStationID
ADD_STATION_FAILED_ARTIST_ALERT_MESSAGE
ADD_STATION_FAILED_ALBUM_ALERT_MESSAGE
ADD_STATION_FAILED_ALERT_MESSAGE
ADD_STATION_FAILED_TEMPORARY_ALERT_MESSAGE
ADD_STATION_FAILED_ALERT_TITLE
v24@?0@"MPCRadioStationPreparationContext"8@"NSError"16
wapi
cellular-data
PLAYBACK_FAILURE_NETWORK_RESTRICTION_TITLE_WLAN
PLAYBACK_FAILURE_NETWORK_RESTRICTION_TITLE_WIFI
PLAYBACK_FAILURE_NETWORK_RESTRICTION_MESSAGE_CELL_WLAN
PLAYBACK_FAILURE_NETWORK_RESTRICTION_MESSAGE_CELL_WIFI
SETTINGS
prefs:root=MUSIC
v16@?0@"MPModelRadioStation"8
v16@?0@"MPModelPlayEvent"8
app.music.queue-source.tilt
RadioStationID
v36@?0@"NSArray"8q16B24@"NSError"28
RadioExplicitTracksEnabled
com.apple.MediaPlaybackCore.RadioExplicitTracksEnabledDidChange
v32@?0@8Q16^B24
PLACEHOLDER_LOADING_TITLE
max-get-tracks-retry-count
rtcReportingPlayQueueSourceIdentifier
rtcReportingSessionAdditionalUserInfo
T@"NSDictionary",R,C,N
T@"RadioStation",&,N
T@"RadioStation",R,N
_MPCRadioIsPromotionalAudioClipKey
allPreparedAdSlotRadioTracks
shouldIncrementSkipCount
skipDate
T@"NSDate",R,N
T@"RadioStation",R,N,V_station
T@"MPRemoteCommandCenter",&,N,V_commandCenter
videoLayer
T@"AVPlayerLayer",R,N,V_videoLayer
T@"NSString",R,C,N,V_activeRouteName
T@"MPCPlayerItemContainer",N,V_currentContainer
T@"MPCPlayerItem",N,V_currentItem
nowPlayingInfoHandlers
playbackErrorObservers
playbackIntentObservers
shouldRestorePlaybackState
TB,N,V_shouldRestorePlaybackState
restoringPlaybackState
TB,R,N,GisRestoringPlaybackState,V_restoringPlaybackState
syncingNowPlayingInfo
TB,R,N,GisSyncingNowPlayingInfo,V_syncingNowPlayingInfo
mediaRemoteMuxer
T@"MPCMediaRemoteMuxer",W,N,V_mediaRemoteMuxer
T@"NSString",C,N,V_parentAppBundleID
Tq,N,V_state
modelSong
T@"MPModelSong",&,N,V_modelSong
visibleDuration
Td,N,V_visibleDuration
T@"MPCPlayerQueueRequest",C,N
responseHandler
T@?,C,N
T@"MPCPlayerQueueRequest",C,N,V_request
T@?,C,N,V_responseHandler
playlistManager
T@"MPCMediaPlayerLegacyPlaylistManager",R,N,V_playlistManager
MPCRadioOperationErrorDomain
com.apple.MediaPlaybackCore.%@.%p
T@"RadioRequestContext",C,N,V_requestContext
results
v32@?0@8@"NSDictionary"16^B24
<%@ %p shouldReportToStore:%@ playActivityEvent:%@>
playActivityEvent
T@"SSVPlayActivityEvent",C,N,V_playActivityEvent
shouldReportToStore
TB,N,V_shouldReportToStore
com.apple.MediaPlaybackCore.MPCPlaybackHistoryRecordChangeRequestOperation.operationQueue
v12@?0B8
T@"MPCPlaybackHistoryRecordChangeRequest",C,N,V_request
T@"MPCPlayer",&,N,V_player
MPCAVItemReportingJingleTimedMetadataDidChangeNotification
mpcReporting_equivalencySourceAdamID
mpcReporting_isValidReportingItem
mpcReporting_itemType
mpcReporting_jingleTimedMetadata
T@"NSData",R,C,N
mpcReporting_requestingBundleIdentifier
mpcReporting_requestingBundleVersion
mpcReporting_shouldReportPlayEventsToStore
mpcReporting_shouldUseRelativeTimePositions
mpcReporting_trackInfo
<%@ %p itemType:%@
 identifiers: {
%@: %@
v32@?0Q8@16^B24
MPCContentItemIdentifierCollectionItemType
MPCContentItemIdentifierCollectionIdentifierTypeNumberToIdentifier
identifierCount
itemType
TQ,R,N,V_itemType
TQ,D,N
adamID
globalPlaylistID
mediaLibraryPersistentID
storeCloudID
storeSubscriptionAdamID
unknown
composer
genre
music-video
playlist
radio-station
activity
apple-editor
curator
uploaded-audio
uploaded-video
MPCRadioNetworkingControllerInitializationException
Do not use -%@. Use +sharedController instead.
com.apple.MediaPlaybackCore.MPCRadioNetworkingController.accessQueue
high-quality-asset-flavor
min-bitrate-for-high-quality-playback
highQualityAssetFlavor
minimumBitrateForHighQuality
modelPlayEventRepresentation
T@"MPModelPlayEvent",R,N,V_modelPlayEventRepresentation
container
T@"MPCPlayerItemContainer",W,N,V_container
userInfo
T@"NSDictionary",C,N,V_userInfo
TB,R,N,GisExplicit,V_explicit
representations
T@"NSArray",C,N
T@"MPModelGenericObject",R,N,V_modelGenericObjectRepresentation
albumName
T@"NSString",C,N,V_albumName
artistName
T@"NSString",C,N,V_artistName
T@"NSString",C,N,V_composerName
T{?=dddddfB},R,N,V_durationSnapshot
com.apple.MediaPlaybackCore.MPCStoreContentMetadataOperation.accessQueue
com.apple.MediaPlaybackCore.MPCStoreContentMetadataOperation.internalQueue
com.apple.MediaPlaybackCore.MPCStoreContentMetadataOperation.responseQueue
v24@?0@"SSLookupResponse"8@"NSError"16
storeBagDictionary
T@"NSDictionary",C
T@"NSArray",C
response
T@"MPCStoreContentMetadataResponse",R
StationHash
StationID
StationName
StationStringID
<%@ %p stationHash:%@ stationID:%lli stationName:%@ stationStringID:%@>
station-hash
station-id
name
radio-station-id
stationDictionary
T@"RadioArtworkCollection",&,D,N
T@"NSString",C,D,N
Tq,D,N
allowsStoreContainerImport
TB,N,V_allowsStoreContainerImport
playEvent
T@"MPModelPlayEvent",&,N,V_playEvent
repeatType
Tq,N,V_repeatType
<%@ %p type:%zd value-length:%tu timestamp:%f>
timestamp
Td,R,N,V_timestamp
type
Tq,R,N,V_type
T@"NSData",R,C,N,V_value
MPCAVItemContentItemIdentifierCollectionDidChangeNotification
class
stringWithFormat:
isValidReportingEvent
reportingEventType
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
.cxx_destruct
error
setError:
setupDuration
setSetupDuration:
_error
_setupDuration
init
inWishList
defaultCenter
_contentTasteControllerDidChangeNotification:
sharedController
addObserver:selector:name:object:
_radioRequestDidFinishNotification:
_internalIsInWishlistDidChangeNotification:
removeObserver:name:object:
dealloc
stringByAppendingFormat:
radioTrack
_artworkCollection
artworks
count
alloc
sharedRadioArtworkDataSource
initWithToken:dataSource:
album
copy
albumID
artist
offers
initWithCapacity:
countByEnumeratingWithState:objects:count:
initWithLookupItemOffer:
addObject:
copyrightText
isExplicit
localizedAttributedPositionInPlaylistStringForItem:withRegularTextAttributes:emphasizedTextAttributes:
name
initWithString:attributes:
localizedPositionInPlaylistString:
title
mediaItem
persistentID
reevaluateType
_applyLoudnessInfoForVolumeNormalization
_invalidateModelGenericObject
storeID
_isSubscriptionEligible
storeItemInt64ID
feeder
canSeek
arrayWithObjects:
setStoreAdamID:
setStoreSubscriptionAdamID:
initWithBlock:
mainTitle
setTitle:
isExplicitTrack
setExplicitSong:
setArtistUploadedContent:
type
setHasVideo:
setLibraryAddEligible:
setKeepLocalEnableState:
setKeepLocalManagedStatus:
setLibraryAdded:
setRedownloadable:
setEndpointType:
setRedownloadParameters:
setAccountIdentifier:
setShouldReportPlayEvents:
setSubscriptionRequired:
initWithIdentifiers:block:
setStoreAsset:
setHomeSharingAsset:
setShouldShowComposer:
setUserRating:
setComposer:
isAssetLoaded
_playerItemDurationIfAvailable
_expectedDuration
setDuration:
setArtworkCatalogBlock:
albumStoreID
setAlbum:
artistStoreID
setName:
setArtist:
setLocalFileAsset:
setText:
_hasLyrics
setHasStoreLyrics:
setLyrics:
initWithModel:personalizationStyle:
arrayWithObjects:count:
allSupportedProperties
dictionaryWithObjects:forKeys:count:
initWithProperties:relationships:
personalizedResponseForContentDescriptor:requestedProperties:
_modelSongPersonalizationResponseDidInvalidateNotification:
results
firstItem
setSong:
isLikedStateEnabled
station
likesEnabled
_sendLikeOrBanRequestWithStatus:completion:
deviceMediaLibrary
itemWithStoreID:
setTasteType:forMediaEntity:withCompletionHandler:
setTasteType:forStoreAdamID:withContentType:completionHandler:
stringWithUTF8String:
numberWithLongLong:
firstObject
addStoreItem:andAddTracksToCloudLibrary:withCompletion:
likeStatus
tasteTypeForMediaEntity:
tasteTypeForStoreAdamID:
didAttemptToLoadAsset
modelGenericObject
song
identifiers
deviceLibraryPersistentID
itemWithPersistentID:verifyExistence:
trackInfo
dataWithPropertyList:format:options:error:
initWithRadioTrackDictionary:useArtist:
isExplicitTracksEnabled
setIncludeCleanTracksOnly:
sharedQueue
addStationWithRequest:completionBlock:
_setNeedsPersistedLikedStateUpdate
object
isInWishList
isMainThread
status
trackStoreID
action
postNotificationName:object:
stationHash
stationID
stationStringID
initWithTrackStoreID:stationID:stationHash:stationStringID:
setAction:
startWithCompletionHandler:
artworkCollection
asset
statusOfValueForKey:error:
preferredSoundCheckVolumeNormalization
initWithObjectsAndKeys:
numberWithFloat:
setObject:forKey:
playerItem
tracks
isEnabled
assetTrack
mediaType
isEqualToString:
setLoudnessInfo:
acquireSubscriptionLeaseWithCompletionHandler:
acquireShouldStartLeaseForAssetCreationWithCompletionHandler:
duration
hasLyrics
initWithTrack:station:
setLikeStatus:
startWithLikeCompletionHandler:
errorWithDomain:code:userInfo:
buyOffers
rtcReportingParentHierarchyToken
rtcReportingServiceIdentifier
rtcReportingAssetType
initWithRadioTrack:
aggregateDictionaryItemType
artworkCatalogForPlaybackTime:
artworkTimeMarkers
chapterTimeMarkers
chapterTimeMarkerForTime:
isCloudItem
isRadioItem
isStreamable
isValidPlayerSubstituteForItem:
localizedAttributedPositionInPlaylistStringWithRegularTextAttributes:emphasizedTextAttributes:
localizedPositionInPlaylistString
storeSubscriptionAdamID
supportsLikedState
supportsSettingCurrentTime
titlesForTime:
urlTimeMarkers
_handleUpdatedLikedState:completion:
_loadMediaItemWithCompletionHandler:
_persistedLikedState
mpcReporting_itemType
mpcReporting_shouldReportPlayEventsToStore
mpcReporting_trackInfo
addDerivedStationForArtist:withCompletionHandler:
usesSubscriptionLease
setIsInWishList:
setStation:
_beginUsingPlaybackLease
stationName
isHeartbeatInvalid
setHeartbeatInvalid:
setRtcReportingParentHierarchyToken:
_buyOffers
_modelSongPersonalizationResponse
_modelGenericObject
_radioTrack
_isInWishList
_heartbeatInvalid
_station
_stationHash
_stationID
_stationName
_stationStringID
_rtcReportingParentHierarchyToken
albumBuyButtonType
albumBuyButtonText
setWithObjects:
boolValue
numberWithBool:
doubleValue
numberWithInt:
_plistKeyForMPMediaItemProperty:
enumerateValuesForProperties:usingBlock:
initWithLibraryTrackDictionary:useArtist:
supportsRadioTrackActions
setStoreID:
_radioStationMatchMetadata
setMatchMetadata:
_shouldMatchArtist
setShouldMatchArtist:
radioStationMatchContext
setKind:
length
setAlbumName:
setArtistName:
composer
setComposerName:
setCopyright:
discNumber
numberWithInteger:
setDiscCount:
genre
setGenreName:
isCompilation
setCompilation:
numberWithDouble:
trackNumber
setTrackNumber:
trackCount
setTrackCount:
year
setYear:
performWithoutEnforcement:
storeAdamID
storeCloudID
numberWithUnsignedLongLong:
setStoreCloudID:
hasLoadedValueForKey:
setArtistStoreID:
setRepresentativeCloudID:
setAlbumStoreID:
lock
unlock
cancel
isCancelled
defaultStore
activeAccount
initWithAccount:
startWithAuthenticateResponseBlock:
authenticateResponseType
initWithReasonType:
stationMatchContext
setStationMatchContext:
maximumNumberOfTracksToFetch
setNumberOfTracks:
setShouldIncludeStationInResponse:
playbackLease
setPlaybackLease:
requestContext
setRequestContext:
nowPlayingMatchContext
setNowPlayingMatchContext:
willContinuePlayback
setWillContinuePlayback:
setResponseBlock:
addOperation:
waitUntilFinished
initWithGetTracksResponse:station:
preparedBlock
setPreparedBlock:
main
_authenticateRequest
_firstTrackBlock
_getTracksOperation
_lock
_nowPlayingMatchContext
_playbackLease
_preparedBlock
_requestContext
_stationMatchContext
_willContinuePlayback
_createMetadataForRadioStreamTrack
_networkTypeDidChangeNotification:
sharedNetworkPlayabilityMonitor
_allowsHighQualityMusicStreamingOnCellularDidChangeNotification:
standardUserDefaults
_reloadMetadataAndPostNotificationsIfNeeded:
resourceLoader
setDelegate:queue:
removeObserver:forKeyPath:context:
streamTrack
contentURL
newHierarchyTokenFromParentToken:
URLAssetWithURL:options:
initWithAsset:
setPlayerItem:
setPreferredForwardBufferDuration:
setPlaybackLikelyToKeepUpTrigger:
setWillNeverSeekBackwardsHint:
setMediaKind:
networkType
_maximumBitRateForNetworkType:
setPreferredPeakBitRate:
setSoundCheckVolumeNormalization:
loadValuesAsynchronouslyForKeys:keysForCollectionKeys:completionHandler:
addObserver:forKeyPath:options:context:
observeValueForKeyPath:ofObject:change:context:
setMaxConcurrentOperationCount:
isITunesStream
processInfo
systemUptime
date
certificateURL
setCertificateURL:
keyServerURL
setKeyServerURL:
setITunesStoreRequest:
configureWithURLBagDictionary:
setResourceLoadingRequest:
finishLoading
finishLoadingWithError:
postNotificationName:object:userInfo:
sharedBagLoadingController
requestAccessToBagUsingBlock:
effectiveArtworkCollection
setAlbumBuyButtonText:
setAlbumBuyButtonType:
setArtworkCollection:
setExplicit:
setHasLyrics:
timedMetadataIfAvailable
keySpace
stringValue
extraAttributes
objectForKey:
value
getBytes:length:
charValue
dataValue
time
initWithType:value:timestamp:
scannerWithString:
scanString:intoString:
URLWithString:
scanUpToString:intoString:
isAtEnd
integerValue
initWithArtworkURL:pixelSize:
initWithArtworks:
allowsHighQualityMusicStreamingOnCellular
_getCurrentTimedMetadata:pings:adamIDBlob:jingleTimedMetadata:
isEqualToData:
notificationWithName:object:
postNotification:
_handleStoreIDDidChange
_updateEffectiveMetadataAndPostNotifications:
setTimedMetadata:
objectEnumerator
nextObject
lookupDictionary
artistName
initWithArtworkVariants:
compare:options:
intValue
displayName
longLongValue
ITunesStoreIdentifier
resourceLoader:shouldWaitForLoadingOfRequestedResource:
resourceLoader:shouldWaitForRenewalOfRequestedResource:
resourceLoader:didCancelLoadingRequest:
resourceLoader:shouldWaitForResponseToAuthenticationChallenge:
resourceLoader:didCancelAuthenticationChallenge:
initWithStreamTrack:
isAlwaysLive
loadAssetAndPlayerItem
allowsAirPlayFromCloud
allowsExternalPlayback
mpcReporting_jingleTimedMetadata
mpcReporting_shouldUseRelativeTimePositions
_expectedPlaybackMode
_adamIDMetadata
_albumStoreID
_effectiveMetadata
_jingleTimedMetadata
_secureKeyDeliveryOperationQueue
_playStartDateTimeSinceReferenceDate
_previousAdamIDBlob
_radioStreamTrackMetadata
_storeID
_timedMetadata
isEqualToNumber:
_albumBuyButtonType
_albumBuyButtonText
_album
_artist
_explicit
_title
encodeObject:forKey:
decodeObjectOfClasses:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
storeIDs
setStoreIDs:
_storeIDs
mutableCopy
insertString:atIndex:
tracklistDataSourceForSource:
tracklistDataSource
configureContainer:forPlaybackIntent:completionHandler:
populateContainer:forPlaybackIntent:completionHandler:
_legacyAlternativeRepresentationForPlaybackIntent:player:
artworkCatalog
configureContainer:completionHandler:
populateItemsForContainer:completionHandler:
_legacyRepresentationForPlayer:
kind
tracklistSource
setTracklistSource:
tracklistToken
setTracklistToken:
artworkSource
setArtworkSource:
artworkToken
setArtworkToken:
shuffleMode
setShuffleMode:
playActivityFeatureName
setPlayActivityFeatureName:
playActivityRecommendationData
setPlayActivityRecommendationData:
_resolvedTracklistDataSource
_kind
_tracklistSource
_tracklistToken
_artworkSource
_artworkToken
_shuffleMode
_playActivityFeatureName
_playActivityRecommendationData
_newGetTracksRequestAllowingHeartbeatDelay:additionalRequestParameters:returningError:
sharedInstance
getTracksWithRequest:completionHandler:
_runRequestAllowingHeartbeatDelay:additionalRequestParameters:returningError:
domain
code
isProfileExplicitContentRestricted
mediaPlayerBundle
localizedStringForKey:value:table:
currentDevice
model
numberWithUnsignedLong:
initWithCFUserNotification:
showWithCompletionHandler:
setUserDefaultExplicitTracksEnabled:
defaultWorkspace
openSensitiveURL:withOptions:
_runFullGetTracksProcessAllowingNoAvailableVersionDialog:additionalRequestParameters:returningError:
dialogDictionary
initWithDialogDictionary:
setValue:forCFUserNotificationKey:
operationWithDialog:
setPerformDefaultActions:
selectedButton
dictionary
performDefaultActionForDialog:
sharedApplication
beginBackgroundTaskWithName:expirationHandler:
responseBlock
endBackgroundTask:
_heartbeatTokenDataAllowingDelay:error:
sharedModel
globalVersion
initWithStation:globalVersion:
initWithGlobalVersion:
playbackContext
trackPlaybackDescriptorQueue
reasonType
setPlaybackContext:
setReasonType:
setShouldIncludeAsset:
numberOfTracks
shouldIncludeStationInResponse
setHeartbeatTokenData:
_carScreen
setSkipPromptForSeamlessPlayback:
setAdditionalRequestParameters:
_dialogOperation
_explicitUserNotification
_getTracksRequest
_hasSetWillContinuePlayback
_numberOfTracks
_playbackContext
_responseBlock
_shouldIncludeStationInResponse
_reasonType
raise:format:
_resetPlaybackTimeoutInformation
initWithName:
setDelegate:
pickedRoute
_dismissExpiredPlaybackTimeoutNotificationForced:
_isPauseTimeoutActive
_updatePlaybackTimerForDeviceStateChange
_effectiveVolumeDidChangeNotification:
sharedAVSystemController
_playbackContentsDidChangeNotification:
_playbackStateDidChangeNotification:
_itemLikedStateDidChangeNotification:
_itemIsInWishListDidChangeNotification:
_itemWillChangeNotification:
_itemDurationDidBecomeAvailableNotification:
_radioModelDidChangeNotification:
_applicationWillEnterForegroundNotification:
_cancelPlaybackTimeoutNotification
_cancelPauseTimeoutTimer
_cancelPresentPlaybackTimeoutTimer
routeSubtype
reloadWithPlaybackContext:completionHandler:
userInfo
_isRadioRelevantItem:
_presentPlaybackTimeoutNotificationForCurrentItemIfNeeded
currentItem
_updateCurrentStationFromPlayer
currentTime
dateByAddingTimeInterval:
timeIntervalSinceNow
_schedulePlaybackTimeoutNotificationExpirationTimerIfNeeded
willHitPlaybackTimeoutEndingPlayback:withCurrentItem:
pause
didHitPlaybackTimeoutEndingPlayback:withCurrentItem:
state
stationWithHash:
_cancelPlaybackTimeoutNotificationExpirationTimer
_currentStationFromPlayer
durationIfAvailable
dateWithTimeIntervalSinceNow:
earlierDate:
bundleWithIdentifier:
setWillShowNotificationHandler:
cfUserNotification
_receivedUserNotificationResponseForUserNotification:withResponseFlags:
playWithOptions:
isRadioQueueFeeder
endPlayback
insertPendingRecentStation:
refreshWithCompletionHandler:
usesBackgroundNetwork
setUsesBackgroundNetwork:
_setCurrentStation:
pausedPlaybackTimeoutForPlaybackType:
unlockedPlaybackTimeoutForPlaybackType:
dockedPlaybackTimeoutForPlaybackType:
lockedPlaybackTimeoutForPlaybackType:
getCurrentTimeoutInfoWithCompletionHandler:
routingControllerAvailableRoutesDidChange:
routingController:pickedRouteDidChange:
routingControllerExternalScreenTypeDidChange:
routingController:didFailToPickRouteWithError:
routingControllerDidPauseFromActiveRouteChange:
initWithPlayer:
setupPlaybackQueueWithPlaybackContext:completionHandler:
_fullMuteDidChangeNotification:
player
recentStationsController
setRecentStationsController:
reportingPlaybackObserver
setReportingPlaybackObserver:
_routingController
_pickedRoute
_currentStation
_deviceIsDocked
_deviceIsLocked
_didPresentNotificationForCurrentItem
_lockStateNotifyToken
_lockStateNotifyTokenIsValid
_mediaRemoteCommandObserver
_pauseTimeoutTimerSource
_playbackNotificationStation
_playbackIsPaused
_playbackTimeoutBeginDate
_playbackTimeoutDuration
_playbackTimeoutInfoController
_playbackTimeoutNotification
_playbackTimeoutNotificationDidExpire
_playbackTimeoutNotificationExpirationTimerSource
_presentPlaybackTimeoutTimerSource
_wasUsingBackgroundNetwork
_player
_recentStationsController
_reportingPlaybackObserver
contextWithBagType:
initWithURLBagContext:
setStoreBagDictionary:
response
newItem
collectionName
assets
previewURL
initWithURLAsset:
setRepresentations:
appendItem:
enumerateContainerItemsUsingBlock:
setCompletionBlock:
loadWithCompletionBlock:
populateRepresentationsForItem:completionHandler:
_operationQueue
setMediaRemoteMuxer:
commandCenter
stopMediaRemoteSync
_registerForPlayer:
localOrigin
initWithOrigin:bundle:
_setActivePlayer:
_unregisterForPlayer:
_removeSupportedCommands
_updateSupportedCommandsForPlayer:
null
parentAppBundleID
_updateParentApplication:
stopSyncingNowPlayingInfo
startSyncingNowPlayingInfo
_performCommandEvent:completion:
updateSupportedCommandsForCommandCenter:muxer:action:
_activeCommands
removeTarget:
mediaRemoteOptions
objectForKeyedSubscript:
performCommandEvent:completion:
removeObserver:forKeyPath:
origin
initWithSystemPlayer:
invalidateSupportedCommandsForPlayer:
setApplicationPlayer:
systemPlayer
applicationPlayer
_activePlayer
_systemPlayer
_commandCenter
_applicationPlayer
_handleChangeFromItem:toItem:
container
modelPlayEventRepresentation
modelGenericObjectRepresentation
itemType
playlist
radioStation
hasCommonIdentifierWithIdentifierSet:
changeRepeatModeCommand
currentRepeatType
setItemGenericObject:
setRepeatType:
setPlayEvent:
setAllowsStoreContainerImport:
newOperationWithResponseHandler:
_lastRecordedPlayEvent
MPC_contentItemIdentifierCollection
weakToWeakObjectsMapTable
setCategory:error:
avPlayer
setVolume:
beginUsingVideoLayer
setMpcPlayer:
setManagesAirPlayBehaviors:
setShouldResetQueueWhenReachingEnd:
registerPlayer:
_playerDidPausePlaybackForLeaseEndNotification:
jinglePlayActivityReportingController
setJinglePlayActivityReportingController:
setCommandCenter:
setPlaybackQueueDataSource:
setEnabled:
_availableRoutesDidChangeNotification:
_currentItemChangedNotification:
_playbackStateChangedNotification:
_repeatShuffleTypeChangedNotification:
_contentsDidChangeNotification:
_playerPlaybackErrorNotification:
_soundCheckEnabledChangedNotification:
setIAmTheiPod:
removeObserver:
_displayPlaybackState
playbackIntentObservers
player:willAddPlaybackIntent:withOptions:
player:didAddPlaybackIntent:withOptions:error:
setShouldStartPlayback:
setShouldRestartPlayback:
_playlistManager
playlistFeeder
initWithQueueFeeder:
_reloadPlayerWithPlaybackContext:completionHandler:
addPlaybackContext:toQueueWithInsertionType:completionHandler:
command
contentItemID
mediaRemoteCommandType
play
togglePlayback
isAd
canSkipItem:
jumpToItemWithContentID:
isRequestingDefermentToPlaybackQueuePosition
changePlaybackIndexBy:deltaType:ignoreElapsedTime:
beginSeek:
endSeek
positionTime
setCurrentTime:
_handleInsertIntoQueueCommandEvent:completionHandler:
insertAfterContextItemID
_indexForStringIdentifier:
moveItemAtPlaybackIndex:toPlaybackIndex:intoHardQueue:
_handleCreateRadioStationCommandEvent:completionHandler:
repeatType
preservesRepeatMode
setMusicRepeatType:
activeRepeatType
shuffleType
setShuffleType:
preservesShuffleMode
setMusicShuffleType:
activeShuffleType
removeItemAtPlaybackIndex:
_handleSetQueueCommandEvent:completionHandler:
durationIsValid
durationInSeconds
dispatchCommandEvent:completion:
recordLyricsViewEvent:
modelSong
lyrics
lyricsID
setLyricsID:
modelPlayEvent
setModelPlayEvent:
featureName
setFeatureName:
recommendationData
setRecommendationData:
newPlayActivityEventForSource:
setEventType:
visibleDuration
setItemEndTime:
newReportingPlaybackActivityEventForPlayActivityEvent:eventSource:
reportingController
recordReportingEvents:
preservePlaybackStateImmediately
shouldRestorePlaybackState
UUID
supportsStateRestoration
initForWritingWithMutableData:
encodedData
setPlaylistManagerUUID:
defaultManager
URLForDirectory:inDomain:appropriateForURL:create:error:
URLByAppendingPathComponent:
writeToURL:options:error:
removeItemAtURL:error:
UUIDString
stringForKey:
playlistManagerUUID
integerForKey:
setInteger:forKey:
synchronize
initWithContentsOfURL:options:error:
dataForKey:
initForReadingWithData:
decodeObjectForKey:
finishDecoding
initWithUUIDString:
setPlaylistManager:
setAutoPlayWhenLikelyToKeepUp:
finalizeStateRestorationWithCompletionHandler:
setFallbackPlaybackContext:
videoLayer
routingController
isDeviceRoute
routeName
setAttribute:forKey:error:
_refreshIAmTheiPod
hardQueuePlaylistIndexRange
_shouldVendContentItemForOffset:
currentIndex
_nowplayingContentItemForIndex:
_nowplayingContentItemIdentifierForIndex:
softQueueFeeder
softQueuePlaylistIndexRange
playbackQueue
createPlaybackContextWithCompletion:
insertionPosition
isRequestingImmediatePlayback
disableQueueModifications
preventsHardQueueModificationsForItem:
supportsAddToQueue
verifyWithError:
stationURL
regularExpressionWithPattern:options:error:
lastPathComponent
firstMatchInString:options:range:
numberOfRanges
rangeAtIndex:
substringWithRange:
initWithStationStringID:
configureWithStationPlaybackMetadata:
isRequestingPlaybackInitialization
_updateSupportedCommandsForCommandCenter:target:action:
mediaRemoteMuxer
playCommand
hasTargets
removeTarget:action:
addTarget:action:
pauseCommand
stopCommand
togglePlayPauseCommand
nextTrackCommand
previousTrackCommand
changePlaybackPositionCommand
seekForwardCommand
seekBackwardCommand
setCanBeControlledByScrubbing:
canSkipToPreviousItem
userCanChangeShuffleAndRepeatType
changeShuffleModeCommand
advanceRepeatModeCommand
advanceShuffleModeCommand
setCurrentRepeatType:
setCurrentShuffleType:
setPlaybackQueueCommand
insertIntoPlaybackQueueCommand
setSupportedInsertionPositions:
reorderQueueCommand
removeFromPlaybackQueueCommand
createRadioStationCommand
skipForwardCommand
setPreferredIntervals:
skipBackwardCommand
prefersSeekOverSkip
willChangeValueForKey:
didChangeValueForKey:
invalidatePlaybackQueue
_notifySupportedCommandsChanged
avItem
queueFeeder
_currentItemInvalidedCommandsNotification:
schedulePlaybackStatePreservation
initWithAVItem:
setContainer:
playbackErrorObservers
playerDidPauseForLeaseEnd:
_playerItemForAVItem:
player:didFailToPlayItem:error:
updateForSoundCheckDefaultsChange
isSupported
itemForPlaylistIndex:
queueRequestOperationClass
contentItemForOffset:
childContentItemAtIndex:ofItem:
remoteCommand:isSupportedForContentItemIdentifier:
remoteCommand:isEnabledForContentItemIdentifier:
currentContainer
addPlaybackIntent:withOptions:completion:
clearPlaybackQueueWithCompletion:
pictureInPictureSupported
setPictureInPictureSupported:
registerWithPlaybackLeaseController:
isRestoringPlaybackState
restorePlaybackStateCompletionHandler:
setFallbackPlaybackIntent:
isMediaRemoteSyncing
isSyncingNowPlayingInfo
activeRouteName
avController
startPictureInPicture
hardQueueItemCount
contentItemIdentifierForOffset:
fallbackPlaybackIntent
setPlayer:
playerObserver
setPlayerObserver:
setReportingController:
radioPlaybackCoordinator
setRadioPlaybackCoordinator:
iAmTheiPod
_avItemToPlayerItemWeakMap
_currentContainer
_currentItem
_isRestoringPlaybackState
_hasReceivedAddPlaybackIntent
_mediaRemoteSync
_iAmTheiPod
_fallbackPlaybackIntent
_playerObserver
_reportingController
_radioPlaybackCoordinator
initWithController:
initWithWritingStyle:
setShouldReportPlayActivityEvents:
setShouldReportAggregateTimePlayActivityEvents:
addChildReportingController:
defaultClientVersion
initWithPlayer:clientName:clientType:clientVersion:
initWithPlayer:reportingController:
setOffline:
uniqueIdentifier
unsignedLongLongValue
setStoreAccountID:
setStoreFrontID:
setSBEnabled:
_accountStoreDidChangeNotification:
_cloudServiceControllerSubscriptionStatusDidChangeNotification:
_cloudServiceControllerCloudLibraryEnabledDidChangeNotification:
_storefrontDidChangeNotification:
beginObservingSubscriptionLease
beginObservingSubscriptionStatus
beginObservingCloudLibraryEnabled
preheatSubscriptionLeaseRequestsWithCompletionHandler:
endObservingSubscriptionLease
endObservingSubscriptionStatus
endObservingCloudLibraryEnabled
_rtcReportingController
_jinglePlayActivityReportingController
_playbackUserDefaultsEQPresetDidChangeNotification:
_connectAVPlayer
musicEQPreset
_setEQPreset:
_registerForPlaylistManager:
_queueModificationsDidChangeNotification
_unregisterForPlaylistManager:
playItemAtIndex:withOptions:
defaultItemEQPresetType
setupEQPresetWithDefaultPreset:
playlistManagerClass
fallbackPlaybackContext
mpcPlayer
_fallbackPlaybackContext
_mpcPlayer
_playlistManagerUUID
_currentPreferredAssetFlavor
_bestRadioTrackAssetWithPreferredAssetFlavor:availableAssets:
downloadKey
_saveDownloadKeyCookie:forURL:
valueWithCMTime:
sinfs
_sinfsByRemovingEmptyPinfsFromSinfs:
pathWithComponents:
fileExistsAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
path
stringByAppendingPathComponent:
fileURLWithPath:
stringByAppendingPathExtension:
writeToFile:atomically:
initWithURL:options:
MP_setCanAffectNetworkPlayability:
flavor
lastAverageBitrate
minimumBitrateForHighQuality
highQualityAssetFlavor
host
cookieWithProperties:
sharedHTTPCookieStorage
setCookie:
_saveCookies
removeObjectForKey:
assetFlavor
_assetFlavor
_preferredAssetFlavor
accountUniqueIdentifier
setPlayActivityEvents:
completePendingPlayActivityEvents:forSessionToken:withResult:completionHandler:
acquirePendingPlayActivityEventsForStoreAccountID:completionHandler:
_accessQueue
_commonInit
decodeIntegerForKey:
decodeBoolForKey:
sourceContexts
enumerateObjectsUsingBlock:
restoreState:
indexSet
setDisableQueueModifications:
encodeInteger:forKey:
encodeBool:forKey:
queueFeederClass
setPlaybackContextUniqueIdentifier:
_handleConfiguredQueueFeeder:fromPlaybackContext:
itemCount
arrayWithCapacity:
setQueueFeeder:
identifierAtIndex:queueFeeder:
setItemIdentifier:
_softQueuePlaylistIndexRangeIncludingCurrentItem:
_hardQueuePlaylistIndexRangeIncludingCurrentItem:
_insertSoftQueueSourceContext:atIndex:
playlistIdentifier
_playlistIndexOfItemIdentifier:
indexOfObject:
indexSetWithIndexesInRange:
insertObjects:atIndexes:
addObjectsFromArray:
_prepareToQueuePlaybackIndex:selectionDirection:
queueCoordinator
reloadItemsKeepingCurrentItem:
_notifyQueueFeederContentsChanged
reloadWithPlaybackContext:requireFinalTracklist:completionHandler:
_removeHardQueueItems
_itemIsSoftQueueItem:
itemIdentifier
indexOfItemWithIdentifier:
_playlistIterationForQueueFeeder:withMaxQueueIndexToPreload:
removeObjectAtIndex:
setCount:
_itemIsHardQueueItem:
_hardQueueIndexForIndex:
objectAtIndex:
_removeSoftQueueSourceContextAtIndex:
insertObject:atIndex:
_removeSourceContextAtIndex:
playlistIndexOfItem:
_sourceContextForPlaylistIndex:
handlePlaybackFailureForItem:
queueIdentifier
indexOfItemWithIdentifier:queueFeeder:
addIndex:
delegate
playlistManager:didFailLoadingAllItemsForQueueFeeder:
_itemForPlaylistIndex:
_metadataItemForSourceContext:
_invalidateCachedMusicPlayerControllerQueue
containsObject:
removeObject:
items
applyVolumeNormalizationForItem:
player:currentItemWillChangeFromItem:
player:currentItemDidChangeToItem:
_softQueueSourceContextForIndex:
playlistIndexOfItemIdentifier:
removeObjectsInRange:
removeAllObjects
clearHardQueue
removeAllIndexes
setPlaylistFeeder:startIndex:keepPlaying:
repeatMode
setRepeatMode:
_playbackIndexForDelta:fromIndex:ignoreElapsedTime:totalItemCount:didReachEnd:
replaceObjectsInRange:withObjectsFromArray:
playlistIndexOfIndex:inPlaylistFeeder:
_updateMaximumQueueDepthForItemIndex:inQueueFeeder:
queueFeederDidInvalidateRealShuffleType:
_willFinishReloadWithQueueFeeder:fromPlaybackContext:
containsIndex:
uuid
_updateMusicPlayerControllerQueueWithCompletionHandler:
removals
_indexOfMediaItem:
queueDescriptorsToPrepend
queueInsertions
allKeys
reverseObjectEnumerator
mediaItemForIdentifier:
valueForProperty:
initWithMediaItems:uuid:
_softQueueIndexForIndex:
_itemForSourceContext:
_queueFeeder:itemForIdentifier:
setPlaylistIdentifier:
metadataItemForIdentifier:
setSourceContexts:
indexToFaultIn
setIndexToFaultIn:
replaceObjectAtIndex:withObject:
itemForIdentifier:
removeObjectAtIndex:returningRemovedObject:
hasItemForIndex:
numberWithUnsignedInteger:
unsignedIntegerValue
keyForObject:
identifierAtIndex:
allowsUserVisibleUpcomingItems
playbackMode
clearSoftQueue
displayIndexForItem:
displayCountForItem:
metadataItemForPlaylistIndex:
player:currentItemDidChangeFromItem:toItem:
playlistFeederForPlaylistIndex:
playlistIndexOfQueueIdentifier:inPlaylistFeeder:
setCurrentIndex:selectionDirection:
playlistIndexWithDelta:fromIndex:ignoreElapsedTime:didReachEnd:
playlistItemCount
queueFeeder:didChangeContentsWithPreferredStartIndex:error:
queueFeeder:didChangeContentsWithReplacementPlaybackContext:
queueCoordinator:itemToFollowItem:
currentQueueUUID
musicPlayerControllerQueueForUUID:
requestMusicPlayerControllerQueueWithCompletionHandler:
setMusicPlayerControllerQueue:withCompletionHandler:
setSoftQueueFeeder:
hardQueueSourceContexts
setHardQueueSourceContexts:
lastPlayedSoftQueueItem
setLastPlayedSoftQueueItem:
nextCurrentIndex
setNextCurrentIndex:
hardQueueInsertionIndex
setHardQueueInsertionIndex:
repeatPlaylistIdentifer
setRepeatPlaylistIdentifer:
softQueueModifications
setSoftQueueModifications:
_ignoreNextIndexChanges
_disableSoftQueueFaulting
_ignoreSoftQueueInvalidation
_ignoreHardQueueInvalidation
_maximumModifiedPlaylistIterationIndex
_minimumPlaylistIndex
_maximumPlaylistIndex
_failedSoftQueueIndexes
_identifiersToIndexes
_musicPlayerControllerAccessQueue
_currentMusicPlayerControllerQueue
_disableQueueModifications
_softQueueFeeder
_hardQueueSourceContexts
_lastPlayedSoftQueueItem
_nextCurrentIndex
_hardQueueInsertionIndex
_repeatPlaylistIdentifer
_softQueueModifications
copyWithZone:
_itemIdentifier
_queueFeeder
iterationIndex
setIterationIndex:
_sourceContexts
_iterationIndex
_count
_indexToFaultIn
_artworkDidChangeNotification:
_titlesDidChangeNotification:
_durationAvailablityDidChangeNotification:
_modelGenericObjectDidChangeNotification:
_explicitDidChangeNotification:
_timeDidJumpNotification:
_rateDidChangeNotification:
_stringForPlaylistIdentifier:
setContentItemID:
copyWithBlock:
copyWithIdentifiers:block:
playlistEntry
shouldShowComposer
_updateSnapshot
rate
timeIntervalSinceReferenceDate
timeOfSeekableStart
timeOfSeekableEnd
_playerRate
durationSnapshot
albumName
composerName
_snapshot
_avItem
archivedDataWithRootObject:
_createNowPlayingInfoForItem:completionHandler:
_additionalKeysForNowPlayingItem:
nowPlayingInfoHandlers
additionalNowPlayingInfoKeysForPlayerItem:
addEntriesFromDictionary:
identifierForIdentifierType:
predicateWithProperty:equalToInt64:
_MPC_ML3QueryWithEntityClass:predicate:options:
hasEntities
predicateWithProperty:equalToInteger:
predicateMatchingPredicates:
anyEntityPersistentID
predicateWithProperty:equalToValue:
enumeratePersistentIDsAndProperties:ordered:usingBlock:
playlistWithPersistentID:
collectionWithPersistentID:groupingType:verifyExistence:
libraryDataProvider
library
queryWithLibrary:predicate:orderingTerms:usingSections:options:
MPC_entityWithContentItemIdentifierCollection:options:
decodeObjectOfClass:forKey:
requiredPropertiesForStaticMediaClips
request
setRequest:
startItemIdentifiers
setStartItemIdentifiers:
_request
_startItemIdentifiers
playbackIntentWithStartItemIdentifiers:
setParentReportingController:
_recordReportingEvents:
parentReportingController
childReportingControllers
removeChildReportingController:
_childReportingControllers
_parentReportingController
_generateCurrentTimeoutInfoReturningReady:
removeAllPlaybackTimeouts
setDockedPlaybackTimeout:forPlaybackType:
setLockedPlaybackTimeout:forPlaybackType:
setPausedPlaybackTimeout:forPlaybackType:
setUnlockedPlaybackTimeout:forPlaybackType:
_applicationWillTerminateNotification:
playActivityEvent
eventType
shouldReportToStore
eventDate
_captureNonCatalogAggregatePlayActivityEventWithNonCatalogAggregateEndTime:
storeAccountID
storeFrontID
deviceName
isSBEnabled
isOffline
sourceType
endReasonType
itemEndTime
itemStartTime
reasonHintType
flushPendingPlayActivityEventsForEndpointIdentifier:withCompletionHandler:
recordPlayActivityEvents:withCompletionHandler:
_clearNonCatalogAggregatePlayActivityEventData
acquirePendingPlayActivityEventsForEndpointIdentifier:withStoreAccountID:completionHandler:
setDeviceName:
setEventDate:
setItemDuration:
setItemType:
setSourceType:
playActivityController
shouldReportAggregateTimePlayActivityEvents
shouldReportPlayActivityEvents
_accessSerialQueue
_nonCatalogAggregatePlayDuration
_nonCatalogAggregateStartTime
_nonCatalogDeviceName
_nonCatalogOffline
_nonCatalogSBEnabled
_nonCatalogSourceType
_nonCatalogStoreAccountID
_nonCatalogStoreFrontID
_shouldReportAggregateTimePlayActivityEvents
_shouldReportPlayActivityEvents
_playActivityController
subscriptionStatus
MP_capabilities
isCloudLibraryEnabled
_handleDidEnterBackgroundNotification:
_handleDidReceiveMemoryWarningNotification:
_handleWillEnterForegroundNotification:
token
scaledFittingSize
bestArtworkForPixelSize:
representationSize
pixelSize
sharedCache
cachedImageDataForRadioArtwork:MIMEType:
destinationScale
mainScreen
scale
imageWithData:scale:
representationWithSize:image:
_cacheArtworkRepresentation:forKey:
requestWithURL:
_initWithData:immediateLoadWithMaxSize:scale:renderingIntent:
CGImage
loadImageForRadioArtwork:withCompletionHandler:
isSuspendedUnderLock
_setCacheSize:preserveExisting:
_clearCache
initWithMaximumCapacity:
enumerateKeysAndObjectsUsingBlock:
areRepresentationsAvailableForCatalog:
isRepresentation:bestRepresentationForArtworkCatalog:
existingRepresentationForArtworkCatalog:
requestForCatalog:size:
loadRepresentationForArtworkCatalog:completionHandler:
cancelLoadingRepresentationForArtworkCatalog:
visualIdenticalityIdentifierForCatalog:
_backgroundCacheSize
_cacheSize
_cachedArtworkRepresentations
_cachedArtworkRepresentationsAccessQueue
_resumeToForegroundCacheSize
descriptionComponents
prefixItem
setPrefixItem:
setTracks:
_prefixItem
_tracks
audioClip
assetURL
dictionaryWithObjectsAndKeys:
isSkipable
initWithAudioClip:
supportsSkip
mpcReporting_isQuickPlay
_itemReportingJingleTimedMetadataDidChangeNotification:
_playerItemDidChangeNotification:
_playerItemWillChangeNotification:
_playerPlaybackStateDidChangeNotification:
_playerDidReloadWithPlaybackContextNotification:
_playerWillReloadWithPlaybackContextNotification:
_playerDidSetCurrentTimeNotification:
_playerWillSetCurrentTimeNotification:
eventDuration
itemGenericObject
overrideItemType
systemTimeZone
setEventTimeZone:
hasVideo
isArtistUploadedContent
tvEpisode
show
season
movie
originalIdentifierSet
setAdamID:
storeCloudAlbumID
setCloudAlbumID:
globalPlaylistID
setGlobalPlaylistID:
setCloudPlaylistID:
cloudVersionHash
setPlaylistVersionHash:
radioStationStringID
setStationStringID:
radioStationHash
setStationHash:
radioStationID
setStationID:
setContainerType:
setContainerIDs:
setSubscriptionAdamID:
setRadioAdamID:
storePurchasedAdamID
setPurchasedAdamID:
subscriptionAdamID
purchasedAdamID
setCloudID:
equivalencySourceAdamID
setEquivalencySourceAdamID:
setTvShowSubscriptionAdamID:
setTvShowPurchasedAdamID:
setItemIDs:
userAgent
setBuildVersion:
setMediaType:
setTrackInfo:
requestingBundleIdentifier
setRequestingBundleIdentifier:
requestingBundleVersion
setRequestingBundleVersion:
setPlayActivityEvent:
shouldReportPlayEventsToStore
setShouldReportToStore:
_reportPlaybackEndedForTimeoutWithItem:
_itemStartTimeForItem:
setItemStartTime:
_itemEndTimeForItem:withProposedEndTime:
_setLastPlayEventEndTimeForCurrentItem:
mpcReporting_isValidReportingItem
setEndReasonType:
userChangedItemsDuringPlayback
setReasonHintType:
didTransitionItemForBan:
willTransitionItemForBan:
_currentJingleReportingTimedMetadata
_hasPendingContainerChange
_hasSetLastPlayEventTimeStamp
_isReloadingWithPlaybackContext
_isScrubbing
_itemForCurrentTimeChange
_lastPlayEventEndTimeForCurrentItem
_lastPlayEventTimeStamp
_shouldReportAsPlaying
_startTimeForCurrentTimeChange
_offline
_SBEnabled
_storeAccountID
_storeFrontID
mpcReporting_equivalencySourceAdamID
mpcReporting_requestingBundleIdentifier
mpcReporting_requestingBundleVersion
setEventDuration:
setOverrideItemType:
setShouldReportPlayEventsToStore:
_shouldReportPlayEventsToStore
_equivalencySourceAdamID
_eventDuration
_overrideItemType
_lyricsID
_itemGenericObject
_trackInfo
_modelPlayEvent
_featureName
_recommendationData
_requestingBundleIdentifier
_requestingBundleVersion
radioStationPlaybackMetadata
setRadioStationPlaybackMetadata:
nowPlayingContext
setNowPlayingContext:
_radioStationPlaybackMetadata
_nowPlayingContext
storeItemID
radioIdentifier
endMonitoring
initWithKeyOptions:valueOptions:capacity:
_isExplicitTracksEnabledDidChangeNotification:
_updateForLoadedStoreBag:
_storeBagDidLoadNotification:
loadStoreBagWithOptions:completionHandler:
decodeInt64ForKey:
stationWithStationStringID:
stationWithID:
encodeInt64:forKey:
_verifyCloudStatusIfNeeded
_hasReceivedStreamTrack
numberOfAvailableSkips
_trackAtIndex:shouldFetchAddtionalTracks:
_canHavePlaceholderTrack
startTime
playbackInfoForIdentifier:
player:shouldContinuePlaybackForNetworkType:returningError:
startIndex
_tracksWithPromotionalContentFromTracks:
shouldIncrementSkipCount
skipDate
noteTrackWasSkippedForStation:onDate:
shouldMatchArtist
matchMetadata
contentsDidChangeWithPreferredStartIndex:error:
preparePlaybackWithOperation:withCompletionBlock:
hasSkipsEnabled
skipFrequency
skipInterval
skipLimit
initWithModelObject:
sharedNetworkObserver
isMusicCellularStreamingAllowed
bufferingState
setRadioStationStringID:
setRadioStationHash:
setRadioStationID:
setRadioStation:
_updateIsExplicitContentRestrictedAndPostNotification:removeTracks:
invalidateAssets
_currentTrackPlaybackDescriptorQueueWithCurrentItem:shouldIncludePlaybackInformation:skipDate:
setTrackPlaybackDescriptorQueue:forStation:
_indexOfCurrentItem
_updateWithTracks:tracklistActionType:options:
_removeAllTracks
_fetchAdditionalTracksWithBaseIndex:withCompletionHandler:
contentsDidChangeWithPreferredStartIndex:
_updateTracksForChangedTrackPlaybackDescriptorQueue
sharedRestrictionsMonitor
_explicitContentAllowedDidChangeNotification:
allowsExplicitContent
isUserDefaultExplicitTracksEnabled
_configurePlaceholderAVItem
skipControllerForStation:
beginMonitoring
_numberOfAvailableSkipsDidChangeNotification:
removeObjectIdenticalTo:
beforePromoAudioClip
afterPromoAudioClip
removeTrackPlaybackDescriptorQueuesForAllStations
setSupportsLikedState:
setLikedStateEnabled:
setMainTitle:
_indexOfItem:
initWithTrack:
setCurrent:
setPauseTime:
setSkipDate:
_performGetTracksOperationForStation:withNumberOfTracks:
_indexOfItem:inTracks:
indexOfObjectIdenticalTo:
setQueuePriority:
setTrackPlaybackDescriptorQueue:
numberOfTracksSkippedForStation:
setNumberOfSkipsUsed:
tracksForStation:
tracklistActionType
addGetTracksOperation:
subarrayWithRange:
radioConfigurationDictionary
_sendContentsDidChangeWithCurrentItem
_tracksByRemovingPlayedTracks:
setIgnoresUserDefaultExplicitTracksEnabled:
_tracksByRemovingPromotionalContentFromTracks:
rtcReportingPlayQueueSourceIdentifier
rtcReportingSessionAdditionalUserInfo
audioSessionModeForItemAtIndex:
canReorder
copyRawItemAtIndex:
hasValidItemAtIndex:
initialPlaybackQueueDepthForStartingIndex:
itemClass
playerPreparesItemsForPlaybackAsynchronously
realRepeatType
shouldReuseQueueFeederForPlaybackContext:
mediaItemAtIndex:
indexOfMediaItem:
shouldContinuePlaybackForNetworkType:player:
_canSeek
_didReceiveTracklistEnd
_feederRevisionID
_fetchingTracksCompletionHandlersByStation
_hasVerifiedCloudStatus
_isPreparingStation
_maximumGetTracksRetryCount
_placeholderAVItem
_previousDatabaseTrackPlaybackDescriptorQueue
_stationSkipController
_stationTracklistRetrievalRetryCount
keyEnumerator
allObjects
allPreparedAdSlotRadioTracks
preparedAdSlotForRadioTrack:
addPreparedAdSlot:forRadioTrack:
_getTracksResponse
_preparedAdSlotByRadioTrack
setShouldRestorePlaybackState:
initWithOptions:
addPointer:
pointerAtIndex:
removePointerAtIndex:
registerNowPlayingInfoHandler:
registerPlaybackErrorObserver:
registerPlaybackIntentObserver:
unregisterNowPlayingInfoHandler:
unregisterPlaybackErrorObserver:
unregisterPlaybackIntentObserver:
setState:
setCurrentItem:
setCurrentContainer:
setParentAppBundleID:
_nowPlayingInfoHandlers
_playbackErrorObservers
_playbackIntentObservers
_shouldRestorePlaybackState
_restoringPlaybackState
_syncingNowPlayingInfo
_state
_videoLayer
_activeRouteName
_mediaRemoteMuxer
_parentAppBundleID
setModelSong:
setVisibleDuration:
_modelSong
_visibleDuration
responseHandler
finishWithError:
initWithPlaylistManager:
initWithDataSource:
initWithRequest:avController:
setResults:
finish
setResponseHandler:
execute
_responseHandler
playlistManager
section
item
numberOfSections
sectionAtIndex:
numberOfItemsInSection:
itemAtIndexPath:
sectionIndexTitles
optionalSectionIndexTitlesRange
indexOfSectionForSectionIndexTitleAtIndex:
hasSameContentAsDataSource:
_hardQueueRange
_softQueueRange
initWithRequest:
_controllerContentsDidChangeNotification:
_controllerDidChangeItemNotification:
_invalidate
UTF8String
_addOperation:
startWithAddStationCompletionHandler:
addExecutionBlock:
_cancelPlaybackPreparation
_preparePlaybackWithPrepareRadioPlaybackOperation:completionBlock:
initWithPlayEventCollection:
blockOperationWithBlock:
operations
cancelPlaybackPreparation
getHistoryWithRequest:completionHandler:
loadRadioConfigurationWithCompletionBlock:
sendPlayEventCollection:withCompletionBlock:
_serialQueue
isNSDictionary__
initWithStorePlatformDictionary:
_enumerateStoreItemMetadataItemsWithMetadata:block:
itemKind
childrenStoreIDs
childStorePlatformDictionaryForStoreID:
initWithStorePlatformDictionary:parentStoreItemMetadata:
initWithLookupDictionaries:
_lookupDictionaries
_shouldReportToStore
_playActivityEvent
currentThread
qualityOfService
setQualityOfService:
_finishChangeRequestOperationWithError:
playEvent
setMediaLibrary:
setShouldIncludeNonLibraryEntities:
predicateWithValue:forProperty:
addFilterPredicate:
playbackHistoryPlaylist
lastObject
removeItems:atFilteredIndexes:completionBlock:
addItems:completionBlock:
recordPlayEventForAlbumPersistentID:
allowsStoreContainerImport
appendSection:
setShouldLibraryAdd:
setModelObjects:
recordPlayEventForPlaylistPersistentID:
performWithResponseHandler:
playbackItemMetadata
appendString:
appendFormat:
enumerateIdentifiersUsingBlock:
_setIdentifier:forIdentifierType:
_copyWithZone:class:
allocWithZone:
initWithItemType:
isNSNumber__
isNSString__
mutableCopyWithZone:
identifierCount
_identifierTypeToIdentifier
_itemType
setIdentifier:forIdentifierType:
_init
_radioStoreBagDidLoadNotification:
_highQualityAssetFlavor
_minimumBitrateForHighQuality
playableContentManager:initiatePlaybackOfContentItemAtIndexPath:completionHandler:
playableContentManager:initializePlaybackQueueWithCompletionHandler:
playableContentManager:initializePlaybackQueueWithContentItems:completionHandler:
playableContentManager:didUpdateContext:
setUserInfo:
_container
_userInfo
_modelPlayEventRepresentation
representations
comparePlaybackOrder:
_albumName
_artistName
_composerName
_modelGenericObjectRepresentation
_durationSnapshot
insertItem:afterEntity:
removeItem:
removeAllItems
storeBagDictionary
initWithBagDictionary:
initWithURLBagDictionary:
objectsAtIndexes:
initWithPlatformContext:
setPersonalizationStyle:
setKeyProfile:
setItemIdentifiers:
setValue:forRequestParameter:
storeFrontSuffix
setStoreFrontSuffix:
responseDictionary
_response
_storeBagDictionary
initWithStation:
stationDictionary
isEffectivelyEqualStationWithPlaybackMetadata:
_hasSetArtworkCollection
_hasSetStationHash
_hasSetStationID
_hasSetStationName
_hasSetStationStringID
_hasValidRadioStation
setStationName:
newStationWithDictionary:
_allowsStoreContainerImport
_playEvent
_repeatType
timestamp
_timestamp
_type
_value
MPCReportingMescalSetupCompletionEvent
MPCReportingEvent
NSObject
MPCRadioAVItem
MPRTCReportingItemSessionCreating
MPCRadioAVItemAdditions
RadioStationMatchContext
MPCPrepareRadioPlaybackOperation
MPCRadioStreamTrackAVItem
AVAssetResourceLoaderDelegate
_MPCRadioStreamMetadata
MPCAppleMusicPlaybackIntentTracklistToken
NSSecureCoding
NSCoding
MPCPlaybackIntent
MPCRadioGetTracksOperation
MPCRadioPlaybackCoordinator
MPAVRoutingControllerDelegate
MPCAppleMusicPlaybackIntentDataSource
MPCPlaybackIntentDataSource
MPCMediaRemoteMuxer
MPCPlaybackHistoryObserver
MPCContentItemIdentifierCollectionAdditions
MPCMediaPlayerLegacyPlayer
MPNowPlayingPlaybackQueueDataSource
MPRemoteCommandDelegate_Private
MPCMediaPlayerLegacyReportingController
MPCMediaPlayerLegacyAVController
MPCRadioTrackAVItem
MPCRadioTrackAVItemAdditions
MPCRadioGetTracksController
MPCMediaPlayerLegacyPlaylistManager
MPCQueueBehaviorManaging
MPQueueBehaviorManaging
_MPCAVItemSourceContext
MPAVItemPlaylistIdentifier
NSCopying
_MPCAVPlaylistIteration
MPCMediaPlayerLegacyItem
MediaPlayerLegacy
MPCRadioTrackPreviewAVItem
MPCMediaPlayerLegacyNowPlayingObserver
MPCQuickPlayPlaybackIntentDataSource
MPCModelPlaybackIntentTracklistToken
MPCReportingController
MPCPlaybackTimeoutInfoController
MPCJinglePlayActivityReportingController
MPCRadioArtworkDataSource
MPCMediaLibraryPlaybackIntentDataSource
MPCRadioPlaybackContext
MPCRadioAudioClipAVItem
MPCModelPlaybackIntentDataSource
MPCReportingAdditions
MPCReportingPlaybackObserver
MPCReportingPlaybackEventSource
MPCRadioPlaybackIntentTracklistToken
MPCMediaPlayerLegacyItemContainer
RadioIdentifier
MPCRadioItemIdentifier
MPCRadioQueueFeeder
MPRTCReportingItemSessionContaining
MPCRadioQueueFeederAdditions
MPCAdditions
MPCPlaybackContextCreating
MPCRadioStationPreparationContext
MPCPlayer
MPCMediaRemoteMuxerDelegate
MPCReportingLyricsViewEvent
MPCMediaPlayerLegacyQueueRequestOperation
MPCPlayerQueueRequestOperation
MPCMediaPlayerLegacyPlayerQueueLazySectionedCollectionDataSource
MPLazySectionedCollectionDataSource
MPCMediaPlayerLegacyPlayerQueueResponse
MPCRadioOperationQueue
MPCStoreContentMetadataResponse
MPCReportingPlaybackActivityEvent
MPCPlaybackHistoryRecordChangeRequestOperation
MPCPlayerQueueRequest
MPCPlayerQueueResponse
MPCRadioPlaybackIntentDataSource
MPCContentItemIdentifierCollection
NSMutableCopying
MPCMutableContentItemIdentifierCollection
MPCRadioNetworkingController
MPCPlayableContentDelegate
MPPlayableContentDelegate
MPCPlayerEntity
MPCPlayerItem
MPCPlayerItemContainer
MPCStoreContentMetadataOperation
MPCRadioStationPlaybackMetadata
MPCMutableRadioStationPlaybackMetadata
MPCPlaybackHistoryRecordChangeRequest
MPCRadioStreamPing
B16@0:8
Q16@0:8
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v16@0:8
v24@0:8@16
d16@0:8
v24@0:8d16
@"NSError"
q16@0:8
@24@0:8@16
@24@0:8d16
@32@0:8@16@24
v32@0:8q16@?24
v24@0:8@?16
v28@0:8B16@?20
v20@0:8B16
v28@0:8i16@?20
@"NSArray"
@"MPModelResponse"
@"MPModelGenericObject"
@"RadioTrack"
@"RadioStation"
@"NSString"
@?16@0:8
@"SSAuthenticateRequest"
@"MPCRadioGetTracksOperation"
@"NSLock"
@"RadioStationMatchContext"
@"SSVPlaybackLease"
@"RadioRequestContext"
B32@0:8@16@24
B32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceLoadingRequest"24
B32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceRenewalRequest"24
v32@0:8@16@24
v32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceLoadingRequest"24
B32@0:8@"AVAssetResourceLoader"16@"NSURLAuthenticationChallenge"24
v32@0:8@"AVAssetResourceLoader"16@"NSURLAuthenticationChallenge"24
v48@0:8@16@24@32^v40
v48@0:8^@16^@24^@32^@40
f24@0:8q16
@"_MPCRadioStreamMetadata"
@"NSData"
@"NSOperationQueue"
v24@0:8q16
@"RadioArtworkCollection"
@"NSNumber"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8q16
v32@0:8@16@?24
@"<MPCPlaybackIntentDataSource>"
@"<NSSecureCoding>"
@36@0:8B16@20^@28
v24@0:8Q16
@28@0:8B16^@20
@"ISDialogOperation"
@"MPUserNotification"
@"RadioGetTracksRequest"
@"RadioPlaybackContext"
v24@0:8@"MPAVRoutingController"16
v32@0:8@"MPAVRoutingController"16@"MPAVRoute"24
v32@0:8@"MPAVRoutingController"16@"NSError"24
v32@0:8^{__CFUserNotification=}16Q24
@"MPAVRoutingController"
@"MPAVRoute"
@"NSObject<OS_dispatch_source>"
@"NSDate"
@"MPCPlaybackTimeoutInfoController"
@"MPAVController"
@"RadioRecentStationsController"
@"MPCReportingPlaybackObserver"
v40@0:8@16@24@?32
v40@0:8@"MPCPlayerItemContainer"16@"MPCPlaybackIntent"24@?<v@?@"NSError">32
v32@0:8@"MPCPlayerItem"16@?<v@?@"NSError">24
@32@0:8@"MPCPlaybackIntent"16@"MPCPlayer"24
@"MPCPlayer"
@"MPRemoteCommandCenter"
@"MPModelPlayEvent"
@"MPNowPlayingContentItem"24@0:8q16
@32@0:8q16@24
@"MPNowPlayingContentItem"32@0:8q16@"MPNowPlayingContentItem"24
B32@0:8@"MPRemoteCommand"16@"NSString"24
v40@0:8@16Q24@?32
B24@0:8q16
v40@0:8@16@24:32
@"NSMapTable"
@"MPCMediaPlayerLegacyItemContainer"
@"MPCMediaPlayerLegacyItem"
@"MPCPlaybackIntent"
@"MPCMediaPlayerLegacyAVController"
@"MPCMediaPlayerLegacyNowPlayingObserver"
@"MPCMediaPlayerLegacyReportingController"
@"MPCRadioPlaybackCoordinator"
@"MPRTCReportingController"
@"MPCMediaPlayerLegacyPlayer"
@"MPCJinglePlayActivityReportingController"
@"MPPlaybackContext"
@"NSUUID"
@"NSObject<OS_dispatch_queue>"
B24@0:8@"MPAVItem"16
v40@0:8@16q24@?32
{_NSRange=QQ}16@0:8
v36@0:8q16q24B32
Q24@0:8@16
v40@0:8@16@24@32
q24@0:8@16
q32@0:8q16@24
q32@0:8@16@24
q32@0:8q16q24
v32@0:8q16q24
B36@0:8@16q24B32
q44@0:8q16q24B32^B36
v40@0:8@16Q24@32
B32@0:8@16@?24
q24@0:8q16
{_NSRange=QQ}20@0:8B16
v32@0:8@16q24
@32@0:8@16Q24
@24@0:8Q16
Q32@0:8@16@24
@32@0:8Q16@24
@"NSMutableIndexSet"
@"MPMutableBidirectionalDictionary"
@"MPMusicPlayerControllerQueue"
@"MPQueueFeeder"
@"NSMutableArray"
@"MPAVItem"
@"_MPCAVItemSourceContext"
@"_MPCAVPlaylistIteration"
@24@0:8^{_NSZone=}16
@"<MPAVItemQueueIdentifier>"
@"MPSparseArray"
{?=dddddfB}16@0:8
{?="snapshotTime"d"startTime"d"endTime"d"duration"d"elapsedDuration"d"rate"f"isLiveContent"B}
@40@0:8#16@24Q32
@"MPModelRequest"
@"MPIdentifierSet"
@"MPCReportingController"
@24@0:8^B16
v32@0:8Q16@?24
v48@0:8@16Q24Q32@?40
@"SSVPlayActivityController"
@40@0:8@16{CGSize=dd}24
v28@0:8Q16B24
@"CPLRUDictionary"
@"MPCPlayerItem"
v28@0:8B16@20
d32@0:8@16d24
d24@0:8@16
@"MPCRadioStationPlaybackMetadata"
@"<MPAVItemQueueIdentifier>"16@0:8
v24@0:8B16B20
@"NSDictionary"16@0:8
B24@0:8Q16
Q24@0:8Q16
@40@0:8@16@24@32
{?=qqd}16@0:8
B40@0:8@16q24^@32
B32@0:8q16@24
@36@0:8@16B24@28
@28@0:8Q16B24
v40@0:8@16q24q32
@"MPPlaceholderAVItem"
@"RadioStationSkipController"
v24@0:8@?<v@?@"MPPlaybackContext"@"NSError">16
@"RadioGetTracksResponse"
v40@0:8@"MPRemoteCommandCenter"16@"MPCMediaRemoteMuxer"24:32
@"NSPointerArray"
@"AVPlayerLayer"
@"MPCPlayerItemContainer"
@"MPCMediaRemoteMuxer"
@"MPModelSong"
@"MPCPlayerQueueRequest"16@0:8
v24@0:8@"MPCPlayerQueueRequest"16
@?<v@?@"MPCPlayerQueueResponse"@"NSError">16@0:8
v24@0:8@?<v@?@"MPCPlayerQueueResponse"@"NSError">16
@"MPCPlayerQueueRequest"
@24@0:8@"NSIndexPath"16
@"NSArray"16@0:8
B24@0:8@"<MPLazySectionedCollectionDataSource>"16
{_NSRange="location"Q"length"Q}
@"MPCMediaPlayerLegacyPlaylistManager"
@"SSVPlayActivityEvent"
@"MPCPlaybackHistoryRecordChangeRequest"
@24@0:8@?16
@32@0:8^{_NSZone=}16#24
v32@0:8@16Q24
v40@0:8@"MPPlayableContentManager"16@"NSIndexPath"24@?<v@?@"NSError">32
v32@0:8@"MPPlayableContentManager"16@?<v@?@"NSError">24
v40@0:8@"MPPlayableContentManager"16@"NSArray"24@?<v@?@"NSError">32
v32@0:8@"MPPlayableContentManager"16@"MPPlayableContentManagerContext"24
@"NSDictionary"
@"MPCStoreContentMetadataResponse"
@40@0:8q16@24d32
@(#)PROGRAM:MediaPlaybackCore  PROJECT:MediaPlayerFramework-1
%@ has exisiting mediaItem %@
%@ attempting add to library with store id %@
Added media items: %@ with error: %@
%@ could not add to library as store id == 0
Error: Unable to add/remove item to wish list (%{public}@)
%{public}@: Setting loudness info %{public}@ on player item %{public}@
Error: %{public}@
Configuring container: %{public}@ for playbackIntent: %{public}@
Populating container: %{public}@ for playbackIntent: %{public}@
Add representations for item: %{public}@
Setting active player: %{public}@
%{public}@ setting parentApplicationBundleID: %{public}@
Skipping playback state preservation for player: %{public}@
Failed to encode playlist manager with exception: %{public}@
Could not open caches url: %{public}@
Failed to write queue archive: %{public}@
Playlist manager has already been restored, skipping restoration
Decoding playlist manager with UUID: %@ [attempt %lu]
Could not open caches url for read: %{public}@
Could not fetch playlist manager archive: %{public}@
Found playlist manager in userDefaults, clearing out
Failed to decode playlist manager with exception: %{public}@
%{public}@ receieved a playback intent while a restore was in flight. Ignoring queue restoration
Could not find playlist manager data to restore, deferring
InsertIntoPlaybackQueue failed. Could not create playback context. (error = %{public}@)
InsertIntoPlaybackQueue failed. Inserting a radio context is not supported
Add to playback context failed: %ld
Play queue verification failed with error: %ld
Create playback context failed with error: %ld
Reload with playback context failed with error: %ld
Error setting up playback queue with context. %{public}@
CreateRadioStation failed. Invalid format for station URL. %{public}@
No station URL was provided in event, %{public}@
Attempting reload with fallback playback context
Failed with fallback reload with error: %{public}@
Setting %@ EQ to %d
Setting up EQ for %@
Starting save of download key cooking for URL: %{public}@ for track: %{public}@
Finished save of download key cooking for URL: %{public}@ for track: %{public}@
Initializing asset with URL: %{public}@ for track: %{public}@
Created asset: %{public}@ for track: %{public}@
%{public}@ Beginning queue restoration.
%{public}@ finalizing queue restoration.
%{public}@ did not find any queue feeders that support state restoration.
%{public}@ playbackContext: %{public}@ insertionType: %d
Refusing hard queue insert for currentItem: %{public}@ soft queue: %{public}@
Setting hard queue with insertion type: %d without a soft queue, using %{public}@ to create a soft queue
Could not find index to append to queue
Hard queue insertion index set to %ld
%{public}@
Ignoring disabling Up Next
Setting disable up next to %d
Moving sourceContext:%{public}@ to index: %lu
%{public}@ skipping because queue modifications are disabled
sourceIndex: %ld
destinationIndex: %ld
Removing last hard queue item
Decrementing destination index to %ld since we moving a hard queue item into the soft queue
ENDING PLAYBACK -- We failed to load assets for all of the items in the queue. Failed index count: %lu soft queue count: %lu
Preparing to queue index: %ld
Skipping past _hardQueueInsertionIndex: %ld
Popping hard queue source context for range %{public}@
Clearing hard queue because we have skipped over the tracks
Adjusting _nextCurrentIndex to %ld
Adjusting _hardQueueInsertionIndex to %ld
Setting min playlist index to %ld
Setting max playlist index to %ld
Invalidating: %{public}@
Invalidating soft queue, dropping iteration modifications
Soft queue invalidated when we're ignorning changes
%{public}@ invalidated with an error or to 0 items: %{public}@
Setting min playlist index to %lu
Setting max playlist index to %lu
Current queue has been invalidated, preparing to queue index: %lu
Reloading queue coordinator %{public}@
ENDING PLAYBACK -- We have failed all items in the queue at least once.
ENDING PLAYBACK -- We have failed to play the item on repeat at least once.
%{public}@ couldn't find an media item for %{public}@
keeping current hard queue item %{public}@
Requesting source context for index >= NSNotFound, returning nil
Queue Feeder: %{public}@ couldn't find item for queue index: %{public}@
Soft queue faulting disabled for playlist index: %ld
Reporting event not recorded due to it being invalid: %{public}@
[MPCReportingController] Recording reporting events: %@
[MPCReportingPlaybackObserver] Item will change from: %@ to: %@
[MPCRadioQueueFeeder] Created item: %{public}@ for track: %{public}@
[MPCRadioQueueFeeder] Prefix item: %{public}@
[MPCRadioQueueFeeder] Tracks: %{public}@
[MPCRadioQueueFeeder] Received tracklist end from error: %{public}@
Restoring radio queue: %{public}@
Radio queue: %{public}@ did finish restoring with error: %{public}@
[MPCRadioQueueFeeder] Reloading tracks of station '%{public}@' after explicit content restriction change (restricted: %d)
[MPCRadioQueueFeeder] Invalidating content/reloading feeder with new track index: %lu
[MPCRadioQueueFeeder] Ending playback because the station doesn't exist.
[MPCRadioQueueFeeder] Setting tracks for queue feeder: %{public}@ of station: %{public}@ to final tracks: %{public}@
Encountered nil track at index %lu while enumerating over tracks: %{public}@
[MPCRadioQueueFeeder] Inserting 'before' audio clip %{public}@ at index %lu
[MPCRadioQueueFeeder] Inserting 'after' audio clip %{public}@ at index %lu
[MPCRadioQueueFeeder] Fetching additional tracks...
[MPCRadioQueueFeeder] Attempted to fetch additional tracks for station: %{public}@, but received error: %{public}@. Trying again because our retry count is %ld.
[MPCRadioQueueFeeder] Fetched additional tracks for station %{public}@ (%{public}@) with error: %{public}@, new tracks: %{public}@
[MPCRadioQueueFeeder] Updating tracks for changed track playback descriptor queue...
[MPCRadioQueueFeeder] Shared track descriptor queue is: %{public}@ for database queue: %{public}@ memory queue: %{public}@
[MPCRadioQueueFeeder] Starting with tracks: %{public}@, didMakeAdjustmentsToTracks is %{public}@, didMakeAdjustmentsToQueue = %{public}@, and newTracks is %{public}@
[MPCRadioQueueFeeder] Updating with existing tracks: %{public}@ new tracks: %{public}@ tracklist action type: %ld options: %ld
[MPCRadioQueueFeeder] Current track index is %lu, currentTrack is %{public}@
[MPCRadioQueueFeeder] Skipping the setting of final tracks because invalidation isn't needed.
[MPCRadioOperationQueue] Preparing playback for with operation %{public}@
[MPCRadioOperationQueue] %{public}@ needs preparation, creating operation...
[MPCRadioOperationQueue] %{public}@ finished prepared block with preparation context %{public}@, error %{public}@
%{public}@: Invalid identifier (%{public}@: %{public}@) provided for type: %{public}@. Undefined results when using this identifier.
