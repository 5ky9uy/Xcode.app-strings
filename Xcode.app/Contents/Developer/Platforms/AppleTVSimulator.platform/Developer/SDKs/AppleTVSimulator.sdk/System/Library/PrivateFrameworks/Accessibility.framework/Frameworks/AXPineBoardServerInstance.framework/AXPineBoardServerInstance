init
sharedInstance
validateClass:
validateClass:hasClassMethod:withFullSignature:
validateClass:hasInstanceMethod:withFullSignature:
validateClass:hasProperty:withType:
setValidationTargetName:
setDebugBuild:
performValidations:withPreValidationHandler:postValidationHandler:
sharedApplication
delegate
handleMicrophoneTapEvent:
safeValueForKey:
endSiriSession
class
viewIfLoaded
window
_accessibilityViewIsVisible
_pbApp
boolValue
isHidden
isSiriVisible
processInfo
processIdentifier
isDeviceAsleep
wakeDevice
isScreenSaverVisible
raise:format:
server
pid:
activeInterfaceOrientation
activeInterfaceOrientation:
openSiri
dismissSiri
isAppSwitcherVisible
isNotificationCenterVisible
isControlCenterVisible
isSideSwitcherVisible
isNotificationVisible
isNowPlayingUIVisible
isSoftwareUpdateUIVisible
isSiriTalkingOrListening
isReceivingAirPlay
isMediaPlaying
wakeUpDeviceIfNecessary
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
isStickyNotificationVisible
alloc
setServiceProvider:
_updateAccessibilityProductStatus
_startSystemAppServerIfNeeded
setProcessWatcher:
defaultCenter
mainQueue
addObserverForName:object:queue:usingBlock:
setAxEnabledNotificationObserverToken:
updateAvailableSpeechAssets
axEnabledNotificationObserverToken
removeObserver:
dealloc
initWithServiceName:perPidService:
_openSiri:
setHandlerWithTarget:selector:forKey:possibleRequiredEntitlements:
_dismissSiri:
_isSiriVisible:
_isAppSwitcherVisible:
_sytemAppPID:
_isScreenSaverVisible:
_isNowPlayingUIVisible:
_isSoftwareUpdateUIVisible:
_isSiriTalkingOrListening:
_isReceivingAirPlay:
_wakeUpDeviceIfNecessary:
startServerWithError:
setClientInvalidationCallback:
setServer:
serviceProvider
numberWithBool:
dictionaryWithObjects:forKeys:count:
initWithKey:payload:
numberWithInt:
initialize
.cxx_destruct
isSystemAppServerRunning
setSystemAppServerRunning:
client
setClient:
processWatcher
_assetMonitor
_systemAppServerRunning
_serviceProvider
_axEnabledNotificationObserverToken
_server
_client
_processWatcher
PBApplication
sharedApplication
appSwitcherWindow
PBSiriManager
sharedInstance
siriPluginController
endSiriSession
PBUIPluginController
pluginHost
listening
PBSimplePluginHost
presentedViewController
PBAppDelegate
handleMicrophoneTapEvent:
PBScreenSaverManager
screenSaverIsActive
dismissScreenSaver
PBWindowManager
presentingAirPlay
softwareUpdateWindow
nowPlayingWindow
B16@?0@"AXValidationManager"8
AXPineBoardServiceProvider
v8@?0
Nobody should need to call this
isListening
NotAvailable
Should not be called on ATV
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
v16@?0@"NSNotification"8
System App Server already running
System App Server not starting. AX not enabled
com.apple.assistivetouch.daemon
Could not start system app server: %@
System App Client died: %@
v20@?0I8@"NSString"12
System App Server started: %@
systemAppServerRunning
TB,N,GisSystemAppServerRunning,V_systemAppServerRunning
axEnabledNotificationObserverToken
T@,&,N,V_axEnabledNotificationObserverToken
server
T@"AXIPCServer",&,N,V_server
client
T@"AXIPCClient",&,N,V_client
serviceProvider
T@"AXPineBoardServiceProvider",&,N,V_serviceProvider
processWatcher
T@"AXFrontBoardProcessWatcher",&,N,V_processWatcher
AXPineBoardServiceProvider
AXSystemAppServer
NSObject
AXPineBoardServerInstance
@16@0:8
i16@0:8
v24@0:8@?16
v24@0:8@?<v@?i>16
q16@0:8
v24@0:8@?<v@?q>16
B16@0:8
v16@0:8
@"<AXSystemAppServer>"16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
@24@0:8@16
v24@0:8@16
v20@0:8B16
@"AXSpeechAssetMonitorHelper"
@"AXPineBoardServiceProvider"
@"AXIPCServer"
@"AXIPCClient"
@"AXFrontBoardProcessWatcher"
@(#)PROGRAM:AXPineBoardServerInstance  PROJECT:AccessibilityFrameworks-1
