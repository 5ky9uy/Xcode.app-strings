creating connection to sbd: uid %d, progname %s
sbd connection created
remote proxy error: %ld
calling getAccountInfoWithInfo in daemon
getAccountInfoWithInfo in daemon came back
calling enableWithInfo in daemon
enableWithInfo in daemon came back
calling recoverWithInfo in daemon
recoverWithInfo came back
calling disableWithInfo in daemon
disableWithInfo came back
calling stashRecoveryDataWithInfo in daemon
stashRecoveryDataWithInfo came back
updateMetadata remote proxy error: %ld
calling updateMetadata in daemon
updateMetadata came back
invalidating connection
calling cachePassphraseWithInfoAsync in daemon
calling cachePassphraseWithInfo in daemon
calling uncachePassphraseWithInfo in daemon
calling uncachePassphraseWithInfoAsync in daemon
calling startSMSChallengeWithInfo in daemon
startSMSChallengeWithInfo came back
calling getCountrySMSCodesWithInfo in daemon
getCountrySMSCodesWithInfo came back
calling changeSMSTargetWithInfo in daemon
changeSMSTargetWithInfo came back
calling backupWithInfo in daemon
backupWithInfo came back
calling backOffDateWithInfo in daemon
backOffDateWithInfo came back
calling setBackOffDateWithInfo in daemon
calling stateCapture in daemon
stateCapture came back
calling %s from the main thread
getAccountInfoWithInfo came back
calling updateMetadataWithInfo in daemon
updateMetadataWithInfo came back
enableWithInfo came back
getAccountInfoWithInfo:reply:
enableWithInfo:reply:
recoverWithInfo:reply:
stashRecoveryDataWithInfo:reply:
disableWithInfo:reply:
updateMetadataWithInfo:reply:
cachePassphraseWithInfo:reply:
uncachePassphraseWithInfo:reply:
changeSMSTargetWithInfo:reply:
startSMSChallengeWithInfo:reply:
getCountrySMSCodesWithInfo:reply:
backupWithInfo:reply:
backOffDateWithInfo:reply:
setBackOffDateWithInfo:reply:
cachePassphraseWithInfoAsync:
uncachePassphraseWithInfoAsync:
notificationOccurred:
stateCaptureWithReply:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
interfaceWithProtocol:
alloc
initWithServiceName:
setRemoteObjectInterface:
_setQueue:
resume
_CreateSecureBackupConnection:
code
remoteObjectProxyWithErrorHandler:
invalidate
remoteObjectProxy
addBarrierBlock:
_getAccountInfoWithInfo:completionQueue:completionBlock:
_enableWithInfo:completionQueue:completionBlock:
_recoverWithInfo:completionQueue:completionBlock:
_disableWithInfo:completionQueue:completionBlock:
_stashRecoveryDataWithInfo:completionQueue:completionBlock:
_updateMetadataWithInfo:completionQueue:completionBlock:
_cachePassphraseWithInfoAsync:completionQueue:
_cachePassphraseWithInfo:completionQueue:completionBlock:
_uncachePassphraseWithInfo:completionQueue:completionBlock:
_uncachePassphraseWithInfoAsync:completionQueue:
_startSMSChallengeWithInfo:completionQueue:completionBlock:
_getCountrySMSCodesWithInfo:completionQueue:completionBlock:
_changeSMSTargetWithInfo:completionQueue:completionBlock:
_backupWithInfo:completionQueue:completionBlock:
_backOffDateWithInfo:completionQueue:completionBlock:
_setBackOffDateWithInfo:completionQueue:completionBlock:
_stateCaptureWithCompletionQueue:completionBlock:
syncQueue
synchronousRemoteObjectProxyWithErrorHandler:
replyQueue
recoverWithInfo:completionBlockWithResults:
getAccountInfoWithInfo:results:
getAccountInfoWithInfo:completionBlockWithResults:
getAccountInfoWithInfo:completionBlock:
updateMetadataWithInfo:
updateMetadataWithInfo:completionBlock:
enableWithInfo:
enableWithInfo:completionBlock:
recoverWithInfo:results:
recoverWithInfo:completionBlock:
disableWithInfo:
disableWithInfo:completionBlock:
stashRecoveryDataWithInfo:completionBlock:
cachePassphraseWithInfo:
cachePassphraseWithInfo:completionBlock:
uncachePassphraseWithInfo:
uncachePassphraseWithInfo:completionBlock:
startSMSChallengeWithInfo:results:
startSMSChallengeWithInfo:completionBlockWithResults:
startSMSChallengeWithInfo:completionBlock:
getCountrySMSCodesWithInfo:completionBlockWithResults:
changeSMSTargetWithInfo:
changeSMSTargetWithInfo:completionBlock:
backupWithInfo:
backupWithInfo:completionBlock:
backOffDateWithInfo:completionBlock:
setBackOffDateWithInfo:completionBlock:
stateCaptureWithCompletionBlock:
.cxx_destruct
setReplyQueue:
setSyncQueue:
_replyQueue
_syncQueue
init
v32@0:8@16@?24
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v24@0:8@16
v24@0:8@"NSDictionary"16
v24@0:8@"NSString"16
v24@0:8@?16
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
@24@0:8@16
v40@0:8@16@24@?32
v32@0:8@16@24
@32@0:8@16^@24
v16@0:8
@"NSObject<OS_dispatch_queue>"
SecureBackupProtocol
NSObject
Internal
SecureBackup
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
v16@?0@"NSError"8
v24@?0@"NSDictionary"8@"NSError"16
v8@?0
-[SecureBackup getAccountInfoWithInfo:results:]
-[SecureBackup updateMetadataWithInfo:]
-[SecureBackup enableWithInfo:]
-[SecureBackup recoverWithInfo:results:]
-[SecureBackup disableWithInfo:]
-[SecureBackup startSMSChallengeWithInfo:results:]
-[SecureBackup changeSMSTargetWithInfo:]
-[SecureBackup backupWithInfo:]
syncQueue
T@"NSObject<OS_dispatch_queue>",N,VsyncQueue
replyQueue
T@"NSObject<OS_dispatch_queue>",N,VreplyQueue
com.apple.sbd
SecureBackupPassphrase
countryISOCode
countryDialCode
SecureBackupSMSTarget
phoneNumber
SecureBackupSynchronize
SecureBackupCountrySMSCodes
SecureBackupVerifcationToken
SecureBackupUseCachedPassphrase
SecureBackupNewPassphrase
SecureBackupMetadata
ClientMetadata
SecureBackupStingrayMetadataHash
SecureBackupStingrayMetadata
SecureBackupEscrowTimestamp
SecureBackupEscrowDate
SecureBackupStingrayEscrowTimestamp
SecureBackupEscrowDigest
SecureBackupStingrayEscrowDigest
SecureBackupAuthenticationAppleID
SecureBackupAuthenticationPassword
SecureBackupAuthenticationAuthToken
SecureBackupAuthenticationEscrowProxyURL
SecureBackupAuthenticationDSID
SecureBackupAuthenticationiCloudEnvironment
SecureBackupRemainingAttempts
SecureBackupCoolOffEnd
SecureBackupRecoveryStatus
SecureBackupTriggerUpdate
SecureBackupNotification
SecureBackupRecoveryKey
SecureBackupUsesRandomPassphrase
SecureBackupUsesComplexPassphrase
SecureBackupUsesNumericPassphrase
SecureBackupNumericPassphraseLength
SecureBackupEnabled
SecureBackupAccountIsHighSecurity
SecureBackupRecoveryRequiresVerificationToken
SecureBackupRecoveryVerificationTokenLength
SecureBackupServiceAccountInfo
SecureBackupLastBackupTimestamp
SecureBackupLastBackupDate
SecureBackupEscrowTrustStatus
recordStatus
recordID
peerInfo
peerInfoSerialNumber
SecureBackupiCDPRecords
SecureBackupAlliCDPRecords
label
valid
invalid
SecureBackupErrorDomain
EscrowServiceErrorDomain
areaDialCode
deviceType
deviceId
SecureBackupiCloudIdentityData
SecureBackupIDMSData
SecureBackupIDMSRecovery
SecureBackupFMiPDataKey
SecureBackupFMiPUUIDKey
SecureBackupFMiPRecoveryKey
SecureBackupEMCSIDMSDict
SecureBackupEMCSManagedCredential
SecureBackupEMCSOldManagedCredential
SecureBackupContainsiCloudIdentity
SecureBackupUsesMultipleiCSCs
SecureBackupUsesRecoveryKey
SecureBackupSilentRecoveryAttempt
SecureBackupContainsiCDPData
SecureBackupContainsEMCSData
SecureBackupiCloudDataProtectionEnabled
SecureBackupiCloudDataProtectionDeleteAllRecords
SecureBackupBackOffDate
SecureBackupiCloudIdentityPublicData
CloudServicesErrorDomain
CloudServicesRetryAfter
@(#)PROGRAM:CloudServices  PROJECT:CloudServices-222.50.31
