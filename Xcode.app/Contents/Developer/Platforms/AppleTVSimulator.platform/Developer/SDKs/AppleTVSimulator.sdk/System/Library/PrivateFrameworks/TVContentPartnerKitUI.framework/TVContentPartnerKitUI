defaultBootURL
setupUIFactoryWithBootURL:defaultBootURL:
exposeObjectsInJSContext:
currentAppContext
alloc
initWithAppContext:
setObject:forKeyedSubscript:
setupUIFactoryWithBootURL:
identifier
container
class
standardUserDefaults
numberWithBool:
dictionaryWithObjects:forKeys:count:
registerDefaults:
boolForKey:
isEqualToString:
eq:userInfo:
lt:userInfo:
gt:userInfo:
initialize
neq:userInfo:
gte:userInfo:
lte:userInfo:
existsWithUserInfo:
contentIdentifier
imageURL
setImageURL:
imageShape
setImageShape:
title
setTitle:
lastAccessedDate
setLastAccessedDate:
expirationDate
setExpirationDate:
creationDate
setCreationDate:
duration
setDuration:
currentPosition
setCurrentPosition:
hasPlayedToEnd
setHasPlayedToEnd:
playURL
setPlayURL:
displayURL
setDisplayURL:
tvs_bindingAdaptor
PluginModeBinding
_updateBoundPluginMode
establishBinding:toObject:withKeyPath:bindingOptions:updateHandler:
pluginMode
copy
tvs_bind:toObject:withKeyPath:options:
valueForBinding:
appContext
setPluginMode:
invokeMethod:withArguments:
evaluate:completionBlock:
siriContext
_didSelectContentItemInPartialScreenPluginMode:
_didPlayContentItemInPartialScreenPluginMode:
_fetchNextBatch:
_sendMetricsWithCategory:info:
didSelectContentItemInPartialScreenPluginMode:
didPlayContentItemInPartialScreenPluginMode:
fetchNextBatch:
sendMetricsWithCategory:info:
tvs_bindPluginModeBindingToObject:withKeyPath:options:
initWithAppContext:siriContext:
.cxx_destruct
setSiriContext:
_siriContext
_pluginMode
defaultCenter
removeObserver:
dealloc
application:didFinishLaunchingWithOptions:
defaultSyncingKeyValueStore
setupBookmarkService:
sharedInstance
setCategory:error:
setConfigurationBlock:
addResponder:
start:
_loadFPSCert
syncInProgress
syncHasFinishedRecently
synchronizeWithCompletion:
instancesRespondToSelector:
applicationDidBecomeActive:
mutableCopy
mainBundle
bundleIdentifier
setObject:forKey:
objectForKey:
attributes
objectForKeyedSubscript:
length
initWithContentCategory:
setDelegate:
absoluteString
appController
valueWithUndefinedInContext:
arrayWithObjects:count:
evaluateInJavaScriptContext:completion:
currentMediaItem
mediaItemMetadataForProperty:
TVContentPartnerKitUIBundle
localizedStringForKey:value:table:
stringWithFormat:
hasTrait:
boolValue
doubleValue
init
playCurrentlyCachingVideo
setFpsCertLoader:
sharedConnection
systemServiceProxy
fetchDeviceIsAsleepWithResult:
sharedApplication
openURL:
URLForKey:
_loadFPSCertWithURL:keyDataURL:
_storeURLBagDidLoad:
addObserver:selector:name:object:
reload
removeObserver:name:object:
initWithCertificateDataURL:keyDataURL:
setRequestGenerator:
setConnectionHandler:
startLoadingCertificateDataForRequest:
mediaCacheManagerItemDidBecomeLikelyToKeepUp:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
secureKeyLoader:didLoadCertificateData:forRequest:
secureKeyLoader:didLoadContentIdentifierData:forRequest:
secureKeyLoader:didLoadKeyResponseData:renewalDate:forRequest:
secureKeyLoader:didFailWithError:forRequest:
storeFavoritesViewController:didSelectItem:
launchOptionsWithDefaultOptions:
viewControllerForElement:existingViewController:
mediaType
isDeviceAsleepAndSleptManually:
fpsCertLoader
_fpsCertLoader
contentItems
isFinalBatch
doesNotRecognizeSelector:
siriContext:didSelectContentItemInPartialScreenPluginMode:
siriContext:didPlayContentItemInPartialScreenPluginMode:
siriContext:fetchNextBatch:
siriContext:sendMetricsWithCategory:info:
delegate
initWithPluginMode:
_delegateFlags
_delegate
blueDotStateForDuration:elapsedTime:hasBeenPlayed:playCount:
blueDotStateForDuration:bookmarkInSeconds:hasBeenPlayed:playCount:markedAsUnwatched:
stringForBlueDotState:
UUID
UUIDString
setJSValue:forProperty:
subscriptionManager
jsValueForProperty:
callWithArguments:
getActiveSubscriptionServicesMatchingBundleIdentifiers:domainIdentifiers:maximumExpirationLimit:completionHandler:
applicationProxyForIdentifier:
entitlements
fetchActiveSubscriptionServices::::
canSubscribeInAppWithBundleID:
setSubscriptionManager:
_subscriptionManager
_registerLockup
sharedInterfaceFactory
_configureCell:withElement:
_flatViewFromElement:
_registerViewCreator:withType:
contentView
subviews
removeFromSuperview
makeObjectsPerformSelector:
constraints
removeConstraints:
tv_elementType
addSubview:
style
tv_height
tv_width
children
countByEnumeratingWithState:objects:count:
_viewFromElement:existingView:
setFrame:
firstObject
setSelectedBackgroundColor:
setAppliesContentFilters:
setEnableFocusDirection:
count
_configureFloatingView:withElement:
initWithFrame:
setScrollDirection:
setItemSize:
setMinimumLineSpacing:
setMinimumInteritemSpacing:
initWithFrame:collectionViewLayout:
clearColor
setBackgroundColor:
setAutoresizingMask:
setRemembersLastFocusedIndexPath:
setDataSource:
setContentInset:
registerReuseIdentifiersWithCollectionView:
listTitleTextColor
setTextColor:
title2Font
setFont:
setTextAlignment:
_panGestureRecognized:
initWithTarget:action:
setEnabled:
addGestureRecognizer:
_menuButtonPressed:
_setButtonType:
_leftArrowPressed:
_rightArrowPressed:
_upArrowPressed:
_downArrowPressed:
initWithItemSize:
traitCollectionDidChange:
traitCollection
userInterfaceStyle
item
objectAtIndex:
storeFavoritesView:didSelectItem:
tvs_isResourceURL
tvs_resourceName
URLForResource:
_imageURLForItem:
badgeCount
setBadgeCount:
storeFavoritesView:willBeginEditingItemAtIndex:
storeFavoritesView:didEndEditingItemAtIndex:
collectionView
contentSize
translationInView:
velocityInView:
setTranslation:inView:
editedCell
center
panLockDirection
setLastVelocity:
_contentSizeClamp:
setCenter:
state
setPanLockDirection:
indexPathForCell:
collectionViewLayout
layoutAttributesForItemAtIndexPath:
updateInteractiveMovementTargetPosition:
_genericHandlePanChange
_updateEditPosition
isEditing
_disableEditing:
minimumInteritemSpacing
minimumLineSpacing
animateWithDuration:delay:options:animations:completion:
_genericHandleDirectionPress:
setEditing:animated:
headerView
setText:
reuseIdentifierForImageURL:
visibleCells
_itemAtIndexPath:
reuseIdentifier
indexOfObject:
_configureCell:withItem:
changesFromObjects:toObjects:withIdentifierBlock:
batchUpdatesAllowed
tv_updateItemsInSection:withChanges:
performBatchUpdates:completion:
bringSubviewToFront:
_willBeginEditingItemAtIndex:
beginInteractiveMovementForItemAtIndexPath:
panGestureRecognizer
menuButtonGestureRecognizer
leftArrowGestureRecognizer
rightArrowGestureRecognizer
downArrowGestureRecognizer
upArrowGestureRecognizer
setEditing:
cancelInteractiveMovement
endInteractiveMovement
_didEndEditingItemAtIndex:
setEditedCell:
setBatchUpdatesAllowed:
dequeueReusableCellWithReuseIdentifier:forIndexPath:
category
setContentCategory:
itemSize
setImageSize:
storeFavoritesView:canMoveItemAtIndex:
storeFavoritesView:moveItemAtIndex:toIndex:
_didSelectItem:
shouldUpdateFocusFromView:toView:heading:
layoutSubviews
contentInset
sizeToFit
frame
bounds
didLongPressStoreFavoriteItemCell:
collectionView:numberOfItemsInSection:
collectionView:cellForItemAtIndexPath:
numberOfSectionsInCollectionView:
collectionView:viewForSupplementaryElementOfKind:atIndexPath:
collectionView:canMoveItemAtIndexPath:
collectionView:moveItemAtIndexPath:toIndexPath:
collectionView:shouldHighlightItemAtIndexPath:
collectionView:didHighlightItemAtIndexPath:
collectionView:didUnhighlightItemAtIndexPath:
collectionView:shouldSelectItemAtIndexPath:
collectionView:shouldDeselectItemAtIndexPath:
collectionView:didSelectItemAtIndexPath:
collectionView:didDeselectItemAtIndexPath:
collectionView:willDisplayCell:forItemAtIndexPath:
collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:
collectionView:didEndDisplayingCell:forItemAtIndexPath:
collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:
collectionView:shouldShowMenuForItemAtIndexPath:
collectionView:canPerformAction:forItemAtIndexPath:withSender:
collectionView:performAction:forItemAtIndexPath:withSender:
collectionView:transitionLayoutForOldLayout:newLayout:
collectionView:canFocusItemAtIndexPath:
collectionView:shouldUpdateFocusInContext:
collectionView:didUpdateFocusInContext:withAnimationCoordinator:
indexPathForPreferredFocusedViewInCollectionView:
collectionView:targetIndexPathForMoveFromItemAtIndexPath:toProposedIndexPath:
collectionView:targetContentOffsetForProposedContentOffset:
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
initWithCoder:
setContentItems:
_enableEditing
gestureRecognizerShouldBegin:
preferredFocusEnvironments
setCategory:
setHeaderView:
setCollectionView:
setPanGestureRecognizer:
setMenuButtonGestureRecognizer:
setUpArrowGestureRecognizer:
setDownArrowGestureRecognizer:
setLeftArrowGestureRecognizer:
setRightArrowGestureRecognizer:
lastVelocity
_editing
_batchUpdatesAllowed
_category
_title
_contentItems
_headerView
_collectionView
_panGestureRecognizer
_menuButtonGestureRecognizer
_upArrowGestureRecognizer
_downArrowGestureRecognizer
_leftArrowGestureRecognizer
_rightArrowGestureRecognizer
_editedCell
_panLockDirection
_itemSize
_lastVelocity
functionWithName:
_solveForInput:
initWithNibName:bundle:
stop
willMoveToParentViewController:
removeChildViewController:
view
viewDidLoad
setupNetworkMonitoring
setupHelper
setSetupHelper:
_startAppControllerWithBootURL:
obtainBootURLWithCompletion:
_launchOptions
launchContextWithLaunchOptions:bootURL:
javaScriptApplicationURL
initWithContext:window:delegate:
navigationController
addChildViewController:
didMoveToParentViewController:
setNeedsPreferredFocusedItemUpdate
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
appController:evaluateAppJavaScriptInContext:
appController:didFinishLaunchingWithOptions:
appController:didFailWithError:
appController:didStopWithOptions:
setAppController:
setNavigationController:
_setupHelper
_appController
_navigationController
serviceInterface
setExportedInterface:
setExportedObject:
_clientBundleIdentifierFromConnection
remoteConnection
resume
clientBundleIdentifier
sharedApplicationDelegate
updateWithSearchResult:
auditToken
updateWithSearchResult:reply:
initWithConnection:
setRemoteConnection:
setClientBundleIdentifier:
_remoteConnection
_clientBundleIdentifier
bundleWithIdentifier:
_setupStateMachine
invalidate
favoritesController
stopFetchingItems
endMonitoringForChanges
_favoritesDidChange:
_applicationWillResignActive:
beginMonitoringForChanges
_displayMessage:
_showSpinner
_updateItems
_applicationDidBecomeActive:
initWithName:initialState:mode:
_willBecomeActive
registerHandlerForEvent:onState:withBlock:
_willEndActive
_willBecomeBackground
_willEndBackground
setShouldAcceptEvents:
setStateMachine:
stateMachine
postEvent:
userInfo
initWithArray:
removeObjectsInArray:
addObjectsFromArray:
object
storeFavoritesController:finishedFetchingItems:
activityIndicatorViewController
setActivityIndicatorViewController:
removeFromParentViewController
errorViewController
childViewControllers
setErrorMessage:
containsObject:
setErrorViewController:
startFetchingItems
_titleForUnavailableItem
_messageForUnavailableItem
_titleForKeepUnavailableItemButton
_titleForRemoveUnavailableItemButton
actionWithTitle:style:handler:
removeItem:
alertControllerWithTitle:message:preferredStyle:
addAction:
presentViewController:animated:completion:
removeObjectAtIndex:
insertObject:atIndex:
moveItemAtIndex:toIndex:
_askToRemoveUnavailableItem:
_hideSpinner
_messageForZeroItems
favoritesView
_errorMessage
_itemSizeForCategory:
setView:
initWithCategory:
setFavoritesController:
viewWillAppear:
viewDidDisappear:
storeFavoritesController:failedToFetchItemsWithError:
loadFromViewController:completion:
supportsIdleModeVisualEffects
loadView
_favoritesController
_activityIndicatorViewController
_errorViewController
_stateMachine
initWithPlayer:invalidateWhenDone:initialPlaybackType:
addStartEventWithName:
blackColor
sharedBackgroundAudioController
playing
viewWillDisappear:
presentedViewController
play
keyWindow
rootViewController
_findExtrasMainVideoBackgroundFromNavigationController:andStop:
toObject
_extrasNavigationController
updateType
items
tvs_objectsPassingTest:
assets
actionParams
URLWithString:
integerValue
numberWithInteger:
unrestrictedActionsParams
currentChildViewController
restrictedPlaybackPreviouslyUnlocked
_playMediaItemForVideoElement:actionParams:rentalAdamID:launchPlaybackURL:hlsPlaylistURL:contentRatingRank:
initWithCapacity:
type
bookmarkID
initWithURL:isHLS:disableMetadataMenu:bookmarkID:
adamID
setMediaItemMetadata:forProperty:
externalID
_populateMediaItem:withMetadatafromVideoElement:
setAssetElement:
addObject:
initWithMediaItems:index:isCollection:
player
setPlaylist:
loadCurrentMediaItem
viewControllers
templateViewController
isMainThread
_stopExtrasBackgroundPlayback
mainThread
performSelector:onThread:withObject:waitUntilDone:
_pauseExtrasBackgroundPlayback
initWithRentalID:
initWithActionParams:
setLaunchPlaybackURL:
setHlsPlaylistURL:
setContentRatingRank:
isEqualToMediaItem:
timelines
events
stopCaching
setResumeMenuOption:
setBookmarksDisabled:
offset
initWithStartTime:duration:
initWithMediaItem:sceneTimeRange:
_populateMediaItem:withMetadatafromTimelineEventElement:
relatedContent
_populateMediaItem:withMetadatafromRelatedContentElement:
elementName
text
string
updateWithViewElement:
_playlistElement
_wasPlayingBackgroundAudio
_eventCollection
assetElement
setExtendedInterfaceCreator:
currentProcessInfo
valueForEntitlement:containsObject:
loadingScreen
hide
setup
remoteCommandHandler
setRepeatEnabled:
setShuffleEnabled:
bootURL
exposeDefaultObjectsInJSContext:
pathForResource:ofType:
fileURLWithPath:
bundleForClass:
URLForResource:withExtension:
_imageProxyForElement:
_styleSheetURLForTemplate:
viewForElement:existingView:
imageForResource:
collectionViewCellClassForElement:
setupWithBootURL:
tv_exposeClass:
showBrowseResults
queryURL
initialBatch
relatedContentQueries
defaultWorkspace
addObserver:
_setNeedsUpdateAppInfo
sharedService
openApplication:options:withResult:
array
dictionaryWithCapacity:
itemID
registeredDate
timeIntervalSince1970
numberWithDouble:
isBetaApp
isAdHocCodeSigned
hasMIDBasedSINF
purchaserDSID
tvs_setObjectIfNotNil:forKey:
isAppUpdate
downloaderDSID
externalVersionIdentifier
betaExternalVersionIdentifier
bundleVersion
shortVersionString
dictionaryWithDictionary:
enumerateApplicationsOfType:block:
setInstalledAppInfo:
_notifyJSAppInfoDidChange
_updateInstalledAppInfo
applicationInstallsDidStart:
applicationInstallsDidChange:
applicationInstallsDidUpdateIcon:
applicationsWillInstall:
applicationsDidInstall:
pluginsDidInstall:
applicationsDidFailToInstall:
applicationsWillUninstall:
pluginsWillUninstall:
applicationsDidUninstall:
pluginsDidUninstall:
applicationsDidFailToUninstall:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidPause:
applicationInstallsDidResume:
applicationInstallsDidCancel:
applicationInstallsDidPrioritize:
applicationStateDidChange:
networkUsageChanged:
openAppWithBundleID:
installedAppInfo
_needsUpdateAppInfo
_installedAppInfo
setUnrestrictedActionsParams:
tv_associatedIKViewElement
dispatchEventOfType:canBubble:isCancelable:extraInfo:completionBlock:
_dispatchSelectForSource:
moreSourcesTitle
attributedTitle
setSelectedSource:
nextResponder
addDelegateForPicker:
contentSourcePicker:didSelectSource:
contentSourcePicker:didSelectMoreSources:
_registerViewCreators
_extrasDescriptionViewForElement:existingView:
_providerPickerForElement:existingView:
tv_setAssociatedIKViewElement:
appDocument
templateElement
setStyle:
titleView
tv_padding
tv_margin
setTitleView:
elementType
fontFromElement:
attributedStringWithFont:
setAttributedTitle:
elementPadding
setPadding:
tv_shadow
setShadow:
tv_borderColor
color
setBorderColor:
tv_borderWidths
setBorderWidths:
setSources:
indexPathForFirstItemAttributeValue:
indexAtPosition:
setDescriptionView:
setDescriptionSubtext:
setTrackHorizontal:
tv_color
tv_textAlignment
attributedStringWithFont:foregroundColor:textAlignment:
descriptionSubtext
tv_maxTextLines
setSubtextMaxLines:
setNumberStyle:
stringFromNumber:
initWithURL:
layeredImageView
initWithLayeredImageProxy:
config
setRadiosityStrength:
setFlatImageContainsCornerRadius:
setCornerRadius:
setPlaceholderImage:
setLayeredImageView:
setLayeredImageProxy:
initWithArchiveURL:
initWithArchivedLayeredImageProxy:
initWithImageURLs:
setFlatImageCornerRadius:
CGImage
imageStackView
imageStackViewWithImageStack:size:
setRadiosityAmount:
setImageStackView:
setImageStack:
contentCategory
_placeholderAssetType
_imageConfiguration
registerClass:forCellWithReuseIdentifier:
tvs_imageURLType
setUnmaskedOverlayView:
badgeOverlayView
_setFocusDirection:
unsignedIntegerValue
setBadgeOverlayView:
_formattedStringForBadgeCount:
setBadgeValue:
imageSize
_configureCell:withCompiledArchiveImageURL:assetType:imageSize:
_configureCell:withStackImageURL:imageFormat:assetType:imageSize:
layer
animationWithKeyPath:
setKeyTimes:
setValues:
setRepeatCount:
addAnimation:forKey:
presentationLayer
transform
valueWithCATransform3D:
setFromValue:
setTransform:
setShowsPersistentFocus:
prepareForReuse
setTitleSpacing:
mainScreen
focusedView
isDescendantOfView:
controlState
setControlState:animated:
_labelOffsetForIdleMode
_moveAllComponentsByOffset:
_idleModeFocusSizeOffset
titleLabel
position
setPosition:
_handleLongPressGesture:
_applicationWillEnterIdleMode:
_applicationWillExitIdleMode:
_contentCategory
_imageURL
_badgeCount
_badgeOverlayView
_imageSize
setWantsDimmingOverlay:
_setIdleModeLayoutAttributes:
initialItemActionParams
initialItemSupportsBookmarks
cloudDataClient
status
connect
initWithNotificationName:
mainQueue
_rentalInfoFromDataItems:
fetchAllRentalDataItemsWithCompletionHandler:
addObserverForName:object:queue:usingBlock:
defaultStore
_applicationWillEnterForegroundNotification:
_applicationDidEnterBackgroundNotification:
activeAccount
uniqueIdentifier
stringValue
_optionsFromActiveAccount
isUndefined
isRunningInStoreDemoMode
dictionary
numberWithInt:
errorWithDomain:code:userInfo:
initWithError:appContext:
navigationControllerForContext:
presenter
modalRootViewController
lastObject
hideController:animated:withCompletion:
_showStoreDemoModeRestrictionMessage:
restrictionsEnabled
allowsPurchaseAndRental
_buyWithActionParams::
shake
restrictionsPasscodeEntryViewControllerWithCompletion:
setWallpaperEnabled:
showController:fromController:withCompletionBlock:
addOperationWithBlock:
refreshRentalDataWithCompletionHandler:
_reportAggregateDataWithCategory:count:
determineCountOfItemsOfCategory:withCompletionHandler:
_loadCountOfFavoritesInCategory:withCallback:
shouldPreventActionForStoreDemoModeWithMessage:
addItemWithAdamID:
removeItemWithAdamID:
_determineStatusOfItemInCategory:withAdamID::
determineStatusOfItemInContentCategory:withAdamID:completionHandler:
setWithArray:
canMarkAsWatched
canMarkAsUnwatched
fractionWatched
lastWatchedDate
hasFakeLastWatchedDate
enumerateKeysAndObjectsUsingBlock:
determineProgressForAdamIDs:assumePurchased:respectBookmarkPlayCount:withCompletionHandler:
allValues
markItemsAsWatched:
determineProgressForAdamIDs:withCompletionHandler:
markItemsAsUnwatched:
preferSDHOverRegularSubtitles
preferVideoDescriptions
maximumEffectiveMovieRanking
compare:
_showPasscodePromptForContentRatingRanking:
parentViewController
setPlaybackIsPasscodeRestricted:
_loadExtrasURL:adamID:actionParams:previewURL:loadingImage:lightTheme:presentImmediately:
presentingViewController
popViewControllerAnimated:
dismissViewControllerAnimated:completion:
pushViewController:animated:
date
timeIntervalSinceDate:
_dismissExtrasNavigationControllerAnimated:reverseAnimation:
popToRootViewControllerAnimated:
context
launchOptions
_stopExtrasApp
setSupplementary:
setJavaScriptApplicationURL:
setStorageIdentifier:
setLaunchOptions:
wallpaperViewForUserInterfaceStyle:variant:
sendSubviewToBack:
setLightStyle:
initWithObject:imageLoader:groupType:
setDecorator:
setLoadSynchronouslyIfCached:
setImageProxy:
effectWithStyle:
effectForBlurEffect:
initWithEffect:
defaultSizeForStyle:
initWithActivityIndicatorStyle:
setAlpha:
setAllowsGroupOpacity:
setAllowsGroupBlending:
performSelector:withObject:afterDelay:
insertSubview:above:
_controllerDidDisplay:
_hideExtrasLoadingImageView
setTransitioningDelegate:
startAnimating
stopAnimating
cancelPreviousPerformRequestsWithTarget:selector:object:
setExtrasOriginalJSITunesStore:
pathComponents
localizedCapitalizedString
stringByReplacingOccurrencesOfString:withString:
extrasOriginalJSITunesStore
dismissExtrasWithNavigationURL:
acquisitionPropertiesWithBuyParams:urlbagKey:
setShouldCacheDataItem:
valueForProperty:
adamIDForNumber:
remoteAcquisitionNotifier
postNotificationWithUserInfo:
acquireWithProperties:completionBlock:
accountName
isAuthenticated
sharedAggregateDictionary
incrementKey:
isBeingDismissed
remoteNotifier:didReceiveRemoteNotificationWithUserInfo:
animationControllerForPresentedController:presentingController:sourceController:
animationControllerForDismissedController:
interactionControllerForPresentation:
interactionControllerForDismissal:
presentationControllerForPresentedViewController:presentingViewController:sourceViewController:
buyWithActionParams::
loadRentals:
refreshRentals:
loadCountOfFavoriteShows:
loadCountOfFavoriteMovies:
addItemToFavoritesWithAdamID:
removeItemFromFavoritesWithAdamID:
determineStatusOfMovieWithAdamID::
determineStatusOfSeasonWithAdamID::
determineStatusOfItemWithAdamID::
determineProgressForAdamIDs::
markAsWatched:
markAsUnwatched:
loadExtrasURL:::::::
loadStoreURL:
loadBookmarkDataIfNeeded
PCID
DSID
setRemoteAcquisitionNotifier:
playbackIsPasscodeRestricted
passcodeRestrictedPlaybackBackgroundedDate
setPasscodeRestrictedPlaybackBackgroundedDate:
_acquisitionToken
_didLoadStoreJS
_rentalsDidChangeObserver
_favoritesDidChangeObserver
_progressFactory
_progressDidChangeObserver
_accountStoreChangeObserver
_extrasAppController
_extrasPasscodeViewController
_loadingImageView
_loadingSpinnerView
_loadingVisualEffectView
_extrasDidPushRoot
_presentingAnimator
_dismissingAnimator
_reverseDismissal
_playbackIsPasscodeRestricted
_remoteAcquisitionNotifier
_extrasOriginalJSITunesStore
_passcodeRestrictedPlaybackBackgroundedDate
wallpaperViewForVariant:
insertSubview:atIndex:
contentItem
userDriven
playTrailer
initWithContentItem:userDriven:playTrailer:
setContentItem:
setUserDriven:
setPlayTrailer:
_userDriven
_playTrailer
_contentItem
subtitle
UTSContentType
URLFormatString
imageHeight
imageWidth
imagesJSONContentPayload
setNumberOfLines:
_handleExpandedTextDismissal
setNeedsLayout
sizeThatFits:
subtextLabel
setAttributedText:
attributedText
numberOfLines
descriptionView
setSelected:animated:withAnimationCoordinator:
animateWithDuration:animations:
focusedSizeIncreaseForSize:upscaleFactor:
alpha
selectionMarginsForSize:
animateWithAuxiliarySelectionState:animations:
subtextMaxLines
didSelect
setSubtextLabel:
_descriptionView
_subtextLabel
_init
isStarted
setAcceptSerialQueue:
setActiveConnections:
anonymousListener
endpoint
registerServiceProviderEndpoint:forProviderType:
setServiceListener:
setStarted:
acceptSerialQueue
activeConnections
_handleInvalidationForConnection:
setInterruptionHandler:
setInvalidationHandler:
removeObject:
listener:shouldAcceptNewConnection:
start
serviceListener
_started
_acceptSerialQueue
_activeConnections
_serviceListener
_registerTemplateControllers
_registerCustomAnimators
_registerViewControllerCreator:withType:
sharedShroud
isHidden
setTransitionDuration:
setUsesCustomEasing:
setShouldAnimateHalfwayThenPopIn:
_registerControllerTransitioningCreator:withType:
_registerViewElements
setFactories:
registerClass:forElementName:elementType:dependent:
registerIKClass:forElementName:elementType:dependent:
factories
_factories
toObjectOfClass:
enableRentals
initWithDictionary:
_accumulateImageStackViews:descendingFromView:
loadingCompletionHandler
setLoadingCompletionHandler:
removeAllObjects
_didFinishLoading
_waitForLoadingToFinish
didUpdateInteractiveTransitionWithFullScreenFraction:
willEndInteractiveTransitionFromFullScreenFraction:toFullScreenFraction:velocity:
searchResult
setSearchResult:
appendBatch:
loadWithCompletionHandler:
preferredContentSize
_searchResult
_loadingCompletionHandler
searchCatalog
identifier
T@"NSString",R,C
container
T@"TVContentIdentifier",R,C
PreferHDVideo
contentIdentifier
imageURL
T@"NSURL",C
imageShape
title
T@"NSString",C
lastAccessedDate
T@"NSDate",C
expirationDate
creationDate
duration
T@"NSNumber",C
currentPosition
hasPlayedToEnd
playURL
displayURL
launchMode
Normal
ContentItem
SiriPlugin
SiriAction
searchResult
siriPluginMode
siriContext
onPluginModeDidChange
PluginModeBinding
v8@?0
v16@?0@"TVJSSearchSiriContext"8
pluginMode
v16@?0@"JSContext"8
T@"NSString",R,C,N
T@"TVCKSearchSiriContext",&,N,V_siriContext
T@"NSString",C,N,V_pluginMode
movies
music
podcasts
tv-shows
refApp
reqApp
v16@?0@"AVAudioSession"8
Favorites
WishList
TVCK
navigateToURL
VideoReadyToPlayAlertTitleFormat
RentalPeriodStartWarningFormat
WatchNowAlertAction
WatchLaterAlertAction
v16@?0B8B12
fps-cert
fps-request
hash
TQ,R
superclass
T#,R
description
debugDescription
fpsCertLoader
T@"TVSSecureKeyStandardLoader",&,N,V_fpsCertLoader
mediaType
contentItems
T@"NSArray",R,C,N
finalBatch
TB,R,N,GisFinalBatch
%@(Plugin Mode=%@)
delegate
T@"<TVCKSearchSiriContextDelegate>",W,N,V_delegate
full
partial
v24@?0@"NSDictionary"8@"NSError"16
com.apple.smoot.subscriptionservice
subscriptionManager
T@"PSSSSubscriptionManagerInternal",&,N,V_subscriptionManager
@"UIView"24@?0@"IKViewElement"8@"UIView"16
None
PartialScreen
FullScreen
v12@?0B8
%@-%@
@"NSObject<NSCopying>"16@?0@8
headerView
T@"UILabel",&,N,V_headerView
collectionView
T@"UICollectionView",&,N,V_collectionView
batchUpdatesAllowed
TB,N,V_batchUpdatesAllowed
panGestureRecognizer
T@"UIPanGestureRecognizer",&,N,V_panGestureRecognizer
menuButtonGestureRecognizer
T@"UITapGestureRecognizer",&,N,V_menuButtonGestureRecognizer
upArrowGestureRecognizer
T@"UITapGestureRecognizer",&,N,V_upArrowGestureRecognizer
downArrowGestureRecognizer
T@"UITapGestureRecognizer",&,N,V_downArrowGestureRecognizer
leftArrowGestureRecognizer
T@"UITapGestureRecognizer",&,N,V_leftArrowGestureRecognizer
rightArrowGestureRecognizer
T@"UITapGestureRecognizer",&,N,V_rightArrowGestureRecognizer
editedCell
T@"TVCKStoreFavoriteItemCell",&,N,V_editedCell
panLockDirection
Tq,N,V_panLockDirection
lastVelocity
T{CGPoint=dd},N,V_lastVelocity
itemSize
T{CGSize=dd},R,N,V_itemSize
category
TQ,N,V_category
T@"<TVCKStoreFavoritesViewDelegate>",W,N,V_delegate
T@"NSString",C,N,V_title
T@"NSArray",C,N,V_contentItems
editing
TB,N,GisEditing,V_editing
v16@?0@"NSURL"8
setupHelper
T@"TVCKSearchAppSetupHelper",&,N,V_setupHelper
appController
T@"TVApplicationController",&,N,V_appController
navigationController
T@"TVNavigationController",&,N,V_navigationController
T@"TVCKSearchSiriContext",R,N,V_siriContext
#T:[%@%p] #Error #%@ : Updating TVSearch app with new search result from %@: %@ 
Main:
remoteConnection
T@"NSXPCConnection",&,N,V_remoteConnection
clientBundleIdentifier
T@"NSString",C,N,V_clientBundleIdentifier
onUpdateWithSearchResult
onAppendBatch
com.apple.TVContentPartnerKitUI
StoreFavoritesViewControllerStateIdle
StoreFavoritesViewControllerStateActive
StoreFavoritesViewControllerStateBackground
StoreFavoritesViewControllerEventViewWillAppear
kStoreFavoritesViewControllerEventViewDidDisappear
StoreFavoritesViewControllerEventApplicationWillResignActive
StoreFavoritesViewControllerEventApplicationDidBecomeActive
TVMenuItemTitleWishList
TVMenuItemTitleFavorites
@"NSString"40@?0@"TVSStateMachine"8@"NSString"16@24@"NSDictionary"32
TVCKStoreWishListEmptyMessage
TVCKStoreFavoritesEmptyMessage
TVCKStoreWishListErrorMessage
TVCKStoreFavoritesErrorMessage
TVCKStoreWishListMovieUnavailableTitle
TVCKStoreFavoriteShowUnavailableTitle
TVCKStoreWishListMovieUnavailableMessage
TVCKStoreFavoriteShowUnavailableMessage
TVCKStoreWishListMovieUnavailableKeepButtonTitle
TVCKStoreFavoriteShowUnavailableKeepButtonTitle
TVCKStoreWishListMovieUnavailableRemoveButtonTitle
TVCKStoreFavoriteShowUnavailableRemoveButtonTitle
v16@?0@"UIAlertAction"8
favoritesController
T@"TVSStoreFavoritesController",&,N,V_favoritesController
activityIndicatorViewController
T@"UIViewController",&,N,V_activityIndicatorViewController
errorViewController
T@"TVErrorViewController",&,N,V_errorViewController
stateMachine
T@"TVSStateMachine",&,N,V_stateMachine
TQ,R,N,V_category
T@"<TVCKStoreFavoritesViewControllerDelegate>",W,N,V_delegate
disableMetadataMenu
rentalAdamID
scrubVideoURL
hlsPlaylistUrl
contentRating
_TVObjectKeyAssetElement
itms
B32@?0@"IKMediaElement"8Q16^B24
%@.IFrameScrubVideo
assetElement
T@"IKAssetElement",&,N
com.apple.tv.api
iTunes
clearLoadingScreen
com.apple.TVKit
TVCKProductStyleSheet
showBrowseResults
TB,R,N
queryURL
T@"NSURL",R,C,N
initialBatch
T@"TVSSSearchResultBatch",R,N
relatedContentQueries
TVCKErrorDomain
ACTIVITY
CPSDK_SCREENSAVER
appLibrary
onInstalledAppInfoDidChange
adamID
registeredDate
isBetaApp
isAdHocCodeSigned
hasMIDBasedSINF
purchaserDSID
isAppUpdate
downloaderDSID
externalVersionIdentifier
betaExternalVersionIdentifier
bundleVersion
shortVersionString
bundleIdentifier
v24@?0@"LSBundleProxy"8^B16
installedAppInfo
T@"NSArray",C,N,V_installedAppInfo
unrestrictedActionsParams
T@"NSString",&,N
TVCKUnrestrictedActionParams
TVCKContentSourcePickerDelegate
dark
light
FavoriteItemImageStack
FavoriteItemImageContainer
FavoriteItemMissingImage
TVCKStoreFavoriteItemCellJiggleAnimationKey
transform.rotation.z
transform
badgeOverlayView
T@"TVBadgeOverlayView",&,N,V_badgeOverlayView
contentCategory
TQ,N,V_contentCategory
imageSize
T{CGSize=dd},N,V_imageSize
T@"NSURL",C,N,V_imageURL
badgeCount
T@"NSNumber",C,N,V_badgeCount
T@"<TVCKStoreFavoriteItemCellDelegate>",W,N,V_delegate
initialItemActionParams
T@"NSString",R,N
initialItemSupportsBookmarks
TVJSAcquisitionCompletedRemotelyNotification
com.apple.appletv.wishlist.itemCountNone
com.apple.appletv.wishlist.itemCountOneToFive
com.apple.appletv.wishlist.itemCountSixToTen
com.apple.appletv.wishlist.itemCountElevenToTwenty
com.apple.appletv.wishlist.itemCountTwentyOneToFifty
com.apple.appletv.wishlist.itemCountFiftyOneToOneHundred
com.apple.appletv.wishlist.itemCountMoreThanOneHundred
com.apple.appletv.favorites.itemCountNone
com.apple.appletv.favorites.itemCountOneToFive
com.apple.appletv.favorites.itemCountSixToTen
com.apple.appletv.favorites.itemCountElevenToTwenty
com.apple.appletv.favorites.itemCountTwentyOneToFifty
com.apple.appletv.favorites.itemCountFiftyOneToOneHundred
com.apple.appletv.favorites.itemCountMoreThanOneHundred
TVJSITunesStore rental info
onStoreRentalsDidChange
v24@?0@"NSArray"8@"NSError"16
v16@?0@"NSNotification"8
onStoreFavoritesDidChange
onStorePlaybackProgressDidChange
onAccountStoreDidChange
iatv1
result
error
TVCKStoreDemoModePurchaseRestricted
v24@?0@"TVRestrictionsPasscodeEntryViewController"8Q16
v24@?0@"NSNumber"8@"NSError"16
TVCKStoreDemoModeAddFavoritesRestricted
TVCKStoreDemoModeRemoveFavoritesRestricted
hasStartedWatching
hasFinishedWatching
lastWatchedDate
hasFakeLastWatchedDate
v32@?0@"NSString"8@"TVSStorePlaybackProgress"16^B24
v16@?0@"NSDictionary"8
movieInfo
extrasURL
adamId
actionParams
itms_extras
previewSrc
loadingImage
loadingImageIsLightTheme
onStorePurchasesDidChange
response
adamIDs
v40@?0q8@"NSDictionary"16@"NSArray"24@"NSError"32
accountName
isAuthenticated
uniqueIdentifier
item-id
expiration-date
artwork-url
is-hd
TVCKStoreDemoModeRestrictedTitle
TVAppOK
PCID
activeAccount
T@"NSDictionary",R,N
preferSDHOverRegularSubtitles
preferVideoDescriptions
remoteAcquisitionNotifier
T@"TVSRemoteNotifier",&,N,V_remoteAcquisitionNotifier
extrasOriginalJSITunesStore
T@"TVJSITunesStore",W,N,V_extrasOriginalJSITunesStore
playbackIsPasscodeRestricted
TB,N,V_playbackIsPasscodeRestricted
passcodeRestrictedPlaybackBackgroundedDate
T@"NSDate",C,N,V_passcodeRestrictedPlaybackBackgroundedDate
contentItem
userDriven
playTrailer
T@"TVSSContentItem",&,N,V_contentItem
TB,N,V_userDriven
TB,N,V_playTrailer
subtitle
UTSContentType
URLFormatString
imageHeight
T@"NSNumber",R,C,N
imageWidth
imagesJSONContentPayload
subtextLabel
T@"UILabel",&,N,V_subtextLabel
descriptionView
T@"UIView",&,N,V_descriptionView
descriptionSubtext
T@"NSAttributedString",C,N
subtextMaxLines
Tq,N
com.apple.tvsearch.appservice
acceptSerialQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_acceptSerialQueue
activeConnections
T@"NSMutableSet",&,N,V_activeConnections
serviceListener
T@"NSXPCListener",&,N,V_serviceListener
started
TB,N,GisStarted,V_started
absoluteString
@"UIViewController"24@?0@"IKViewElement"8@"UIViewController"16
@"<UIViewControllerAnimatedTransitioning>"36@?0@"IKViewElement"8@"IKViewElement"16q24B32
blueDot
extrasDescription
favoritesTemplate
flatLockup
providerPicker
playlist
timeline
event
factories
T@"NSArray",C,N,V_factories
IKJSApplication
loadingCompletionHandler
T@?,C,N,V_loadingCompletionHandler
T@"TVSSSearchResult",&,N,V_searchResult
TVCKSearchAppSetupHelper
TVContentPartnerKitAdditions
TVJSContentIdentifier
JSExport
TVCKPreferredVideoFormatEvaluation
TVContentPartnerKitUIAdditions
TVJSContentItem
TVJSSearchSiriContext
TVCKStoreAppDelegate
TVSMediaCacheManagerResponder
NSObject
TVSSecureKeyLoaderDelegate
TVCKStoreFavoritesViewControllerDelegate
TVJSSearchResultBatch
TVCKSearchSiriContext
TVCKBlueDotUtilities
TVJSSearchCatalog
TVCKLockupFactory
TVCKStoreFavoritesView
TVCKStoreFavoriteItemCellDelegate
UICollectionViewDataSource
UICollectionViewDelegate
UIScrollViewDelegate
TVCKSearchAppViewController
UIGestureRecognizerDelegate
TVApplicationControllerDelegate
TVCKSearchAppServiceConnection
TVSSSearchAppServiceProtocol
TVCKUtilites
TVCKStoreFavoritesViewController
TVCKStoreFavoritesViewDelegate
TVSStoreFavoritesControllerDelegate
TVAppTemplateController
TVCKPlaylistViewController
IKPlaylistElement_TVCKAdditions
TVCKAppDelegate
_TVInterfaceCreatingPrivate
TVInterfaceCreating
TVCKAdditions
JSAdditions
TVJSSearchResult
TVJSAppLibrary
LSApplicationWorkspaceObserverProtocol
TVCKContentSourcePickerDelegate
TVContentSourcePickerDelegate
TVCKViewFactory
TVCKStoreFavoriteItemCell
TVJSITunesStore
TVSRemoteNotifierDelegate
UIViewControllerTransitioningDelegate
TVCKSearchContentItemViewController
TVJSSearchContentItem
TVCKExtrasDescriptionView
TVAuxiliaryViewSelecting
TVCKSearchAppService
NSXPCListenerDelegate
TVJSURL
TVCKTemplateFactory
TVCKUIFactory
TVJSRelatedContentQuery
TVCKSearchAppDelegate
TVCKSearchSiriPluginViewController
v24@0:8@16
@16@0:8
@"NSString"16@0:8
@"TVContentIdentifier"16@0:8
v16@0:8
B32@0:8@16@24
B24@0:8@16
@"NSURL"16@0:8
v24@0:8@"NSURL"16
i16@0:8
v20@0:8i16
v24@0:8@"NSString"16
@"NSDate"16@0:8
v24@0:8@"NSDate"16
@"NSNumber"16@0:8
v24@0:8@"NSNumber"16
v24@0:8@"TVSSContentItem"16
v24@0:8@"TVSSSearchResultBatch"16
v32@0:8@16@24
v32@0:8@"NSString"16@"NSDictionary"24
v40@0:8@16@24@32
@32@0:8@16@24
@"TVCKSearchSiriContext"
@"NSString"
B24@0:8@"TVSMediaCacheManager"16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
v40@0:8@"TVSSecureKeyLoader"16@"NSData"24@"TVSSecureKeyRequest"32
v48@0:8@16@24@32@40
v48@0:8@"TVSSecureKeyLoader"16@"NSData"24@"NSDate"32@"TVSSecureKeyRequest"40
v40@0:8@"TVSSecureKeyLoader"16@"NSError"24@"TVSSecureKeyRequest"32
v32@0:8@"TVCKStoreFavoritesViewController"16@"TVContentItem"24
@24@0:8@16
B24@0:8^B16
@"TVSSecureKeyStandardLoader"
@"NSArray"16@0:8
{?="_respondsToDidSelectContentItemInPartialScreenPluginMode"b1"_respondsToDidPlayContentItemInPartialScreenPluginMode"b1"_respondsToFetchNextBatch"b1"_respondsToSendMetricsWithCategory"b1}
@"<TVCKSearchSiriContextDelegate>"
Q48@0:8d16d24B32q36B44
@24@0:8Q16
v48@0:8@"NSArray"16@"NSArray"24@"NSNumber"32@"JSValue"40
B24@0:8@"NSString"16
@"PSSSSubscriptionManagerInternal"
v24@0:8@"TVCKStoreFavoriteItemCell"16
q32@0:8@16q24
q32@0:8@"UICollectionView"16q24
@"UICollectionViewCell"32@0:8@"UICollectionView"16@"NSIndexPath"24
q24@0:8@16
q24@0:8@"UICollectionView"16
@40@0:8@16@24@32
@"UICollectionReusableView"40@0:8@"UICollectionView"16@"NSString"24@"NSIndexPath"32
B32@0:8@"UICollectionView"16@"NSIndexPath"24
v40@0:8@"UICollectionView"16@"NSIndexPath"24@"NSIndexPath"32
v32@0:8@"UICollectionView"16@"NSIndexPath"24
v40@0:8@"UICollectionView"16@"UICollectionViewCell"24@"NSIndexPath"32
v48@0:8@"UICollectionView"16@"UICollectionReusableView"24@"NSString"32@"NSIndexPath"40
B48@0:8@16:24@32@40
B48@0:8@"UICollectionView"16:24@"NSIndexPath"32@40
v48@0:8@16:24@32@40
v48@0:8@"UICollectionView"16:24@"NSIndexPath"32@40
@"UICollectionViewTransitionLayout"40@0:8@"UICollectionView"16@"UICollectionViewLayout"24@"UICollectionViewLayout"32
B32@0:8@"UICollectionView"16@"UICollectionViewFocusUpdateContext"24
v40@0:8@"UICollectionView"16@"UICollectionViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UICollectionView"16
@"NSIndexPath"40@0:8@"UICollectionView"16@"NSIndexPath"24@"NSIndexPath"32
{CGPoint=dd}40@0:8@16{CGPoint=dd}24
{CGPoint=dd}40@0:8@"UICollectionView"16{CGPoint=dd}24
v24@0:8@"UIScrollView"16
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@16B24
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@16@24d32
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
@32@0:8{CGSize=dd}16
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v24@0:8Q16
{CGPoint=dd}32@0:8{CGPoint=dd}16
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
v24@0:8B16B20
v20@0:8B16
B40@0:8@16@24Q32
{CGSize=dd}16@0:8
q16@0:8
v24@0:8q16
@"<TVCKStoreFavoritesViewDelegate>"
@"NSArray"
@"UILabel"
@"UICollectionView"
@"UIPanGestureRecognizer"
@"UITapGestureRecognizer"
@"TVCKStoreFavoriteItemCell"
{CGSize="width"d"height"d}
{CGPoint="x"d"y"d}
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
v32@0:8@"TVApplicationController"16@"JSContext"24
v32@0:8@"TVApplicationController"16@"NSDictionary"24
v32@0:8@"TVApplicationController"16@"NSError"24
@"TVCKSearchAppSetupHelper"
@"TVApplicationController"
@"TVNavigationController"
v32@0:8@16@?24
v32@0:8@"TVSSSearchResult"16@?<v@?B@"NSError">24
@"NSXPCConnection"
{CGSize=dd}24@0:8Q16
v32@0:8@"TVCKStoreFavoritesView"16@"TVContentItem"24
B32@0:8@16Q24
B32@0:8@"TVCKStoreFavoritesView"16Q24
v40@0:8@16Q24Q32
v40@0:8@"TVCKStoreFavoritesView"16Q24Q32
v32@0:8@16Q24
v32@0:8@"TVCKStoreFavoritesView"16Q24
v32@0:8@"TVSStoreFavoritesController"16@"NSArray"24
v32@0:8@"TVSStoreFavoritesController"16@"NSError"24
v32@0:8@"UIViewController"16@?<v@?BB>24
@"<TVCKStoreFavoritesViewControllerDelegate>"
@"TVSStoreFavoritesController"
@"UIViewController"
@"TVErrorViewController"
@"TVSStateMachine"
@36@0:8@16B24q28
v64@0:8@16@24@32@40@48@56
@"IKPlaylistElement"
@"TVSPlaybackReportingEventCollection"
@"TVSImageProxy"24@0:8@"TVViewElement"16
@"NSURL"24@0:8@"NSString"16
@"UIView"32@0:8@"TVViewElement"16@"UIView"24
@"UIViewController"32@0:8@"TVViewElement"16@"UIViewController"24
@"UIImage"24@0:8@"NSString"16
#24@0:8@16
#24@0:8@"TVViewElement"16
v24@0:8#16
@"TVSSSearchResultBatch"16@0:8
v24@0:8@"NSArray"16
v32@0:8@"NSArray"16@"NSArray"24
v32@0:8@"TVContentSourcePicker"16@"TVContentSource"24
v32@0:8@"TVContentSourcePicker"16@"NSArray"24
v56@0:8@16@24q32{CGSize=dd}40
v64@0:8@16@24q32q40{CGSize=dd}48
d16@0:8
v24@0:8d16
v32@0:8{CGSize=dd}16
@"NSURL"
@"NSNumber"
@"<TVCKStoreFavoriteItemCellDelegate>"
@"TVBadgeOverlayView"
v32@0:8@"TVSRemoteNotifier"16@"NSDictionary"24
@"<UIViewControllerAnimatedTransitioning>"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
@"<UIViewControllerAnimatedTransitioning>"24@0:8@"UIViewController"16
@"<UIViewControllerInteractiveTransitioning>"24@0:8@"<UIViewControllerAnimatedTransitioning>"16
@"UIPresentationController"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
v32@0:8@"NSString"16@"JSValue"24
v24@0:8@"JSValue"16
v32@0:8@"NSArray"16@"JSValue"24
v68@0:8@16@24@32@40q48@56B64
v68@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40q48@"NSString"56B64
@"NSDictionary"16@0:8
v32@0:8Q16@24
v40@0:8Q16@24@32
v64@0:8@16@24@32@40@48B56B60
v32@0:8Q16Q24
@"TVSStorePlaybackProgressFactory"
@"TVRestrictionsPasscodeEntryViewController"
@"TVImageView"
@"UIActivityIndicatorView"
@"UIVisualEffectView"
@"TVNavigationZoomAnimator"
@"_TVProductTemplateZoomAnimator"
@"TVSRemoteNotifier"
@"TVJSITunesStore"
@"NSDate"
@32@0:8@16B24B28
@"TVSSContentItem"
{UIEdgeInsets=dddd}32@0:8{CGSize=dd}16
v28@0:8B16@?20
v28@0:8B16@?<v@?>20
v32@0:8B16B20@24
@"UIView"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSObject<OS_dispatch_queue>"
@"NSMutableSet"
@"NSXPCListener"
v24@0:8@?16
v48@0:8d16d24{CGPoint=dd}32
@?16@0:8
@"TVSSSearchResult"
?ffffff
@@ffffff
@333333
4@333333
Calling onStoreRentalsDidChange.  Number of items is %ld
Calling callback for loadRentals.  Number of items is %ld
Calling callback for refreshRentals.  Number of items is %ld
