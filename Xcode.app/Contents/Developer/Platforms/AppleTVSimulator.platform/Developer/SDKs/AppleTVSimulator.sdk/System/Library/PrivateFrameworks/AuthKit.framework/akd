init
sharedBag
fetchFollowUps
ak_errorWithCode:
alloc
initWithURL:
setHTTPMethod:
setValue:forHTTPHeaderField:
signRequest:
copy
altDSID
initWithAltDSID:identityToken:
sharedInstance
authKitAccountWithAltDSID:
hearbeatTokenForAccount:
setHeartbeatToken:
setShouldSendICSCIntentHeader:
mutableCopy
setObject:forKeyedSubscript:
addEntriesFromDictionary:
initWithContext:
context
requestWithBody:error:
bodyWithAuthKitBody:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
.cxx_destruct
_context
objectForKeyedSubscript:
unsignedIntegerValue
boolValue
securityLevel
numberWithUnsignedInteger:
isUnderage
numberWithBool:
isLegacyStudent
initWithResponseBody:
dictionaryRepresentation
_isUnderage
_isLegacyStudent
_securityLevel
valueForEntitlement:
hasOwnerAccess
auditToken
bundleID
isEqualToString:
arrayWithObjects:count:
name
containsObject:
processIdentifier
stringWithUTF8String:
numberWithInt:
stringWithFormat:
remoteObjectProxyWithErrorHandler:
initWithBytes:length:encoding:
fileURLWithPath:
bundleWithURL:
bundleIdentifier
initWithConnection:
hasWriteAccess
hasInternalAccess
hasPrivateAccess
hasPublicAccess
isPermittedToProxy
isPermittedToProxyInitialAuth
proxyWithErrorHandler:
_connection
_name
_description
_bundleID
generateLoginCodeWithCompletion:
initWithBase64EncodedString:options:
propertyListWithData:options:format:error:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
ak_map:
serverProvidedData
arrayByAddingObject:
masterToken
countByEnumeratingWithState:objects:count:
tokenWithValue:lifetime:
setObject:forKey:
status
integerValue
stringValue
decodedConfigurationInfo:
allHeaderFields
_numberFormatter
numberFromString:
initWithAppleID:altDSID:
updateWithSecondaryAuthenticationResponse:
objectForKey:
updateWithHTTPURLResponse:
tokenWithBase64String:
_setPasswordEquivalentToken:
_setHeartbeatToken:
componentsSeparatedByString:
_decodeBase64String:
statusCode
numberWithInteger:
initWithData:encoding:
initWithSRPContext:
initWithServerResponse:forAppleID:
passwordEquivalentToken
heartbeatToken
isUpdateable
updateWithSecondaryAuthenticationBody:
dsid
aliases
appleIDSecurityLevel
continuationToken
passwordResetToken
serviceTokens
isSecondaryActionRequired
secondaryActionURLKey
secondaryActionMessage
isAnisetteResyncRequired
anisetteResyncData
isAnisetteReprovisioningRequired
shouldProxyAnisetteAction
errorCode
errorMessage
acceptedTermsVersions
isManagedAppleID
isAuditLogin
isServerUIRequired
isPasscodeResetRequired
configurationInfo
acceptedDeviceTermsVersion
transactionId
serverInfo
allowPiggybacking
firstName
lastName
imageURLString
_serviceTokens
_isSecondaryActionRequired
_isAnisetteResyncRequired
_isAnisetteReprovisioningRequired
_shouldProxyAnisetteAction
_isManagedAppleID
_isAuditLogin
_isServerUIRequired
_isPasscodeResetRequired
_allowPiggybacking
_dsid
_altDSID
_aliases
_appleIDSecurityLevel
_masterToken
_continuationToken
_passwordResetToken
_secondaryActionURLKey
_secondaryActionMessage
_anisetteResyncData
_errorCode
_errorMessage
_acceptedTermsVersions
_configurationInfo
_acceptedDeviceTermsVersion
_transactionId
_serverInfo
_firstName
_lastName
_imageURLString
clientErrorCode
replyContextWithPayload:
circleStep
_acceptSessionForPayload:error:
payload
clientInfo
processMessage:error:
setClientInfo:
setClientErrorCode:
setWaitForReply:
_releaseAssertion
isDone
piggybackAcceptingIsDone
sharedController
processPushPayload:completion:
performCircleRequestWithContext:completion:
_authKitAccountForPayload:
accountPropertyForKey:
unsignedLongLongValue
sessionWithInitialMessage:secretDelegate:circleDelegate:dsid:error:
replyPayload
setPayload:
setWaitForReplyTimeout:
sharedService
publicAPSTokenString
setPushToken:
setHeartbeatTokenValue:
currentDevice
isInCircle
_grabLockAssertion
_generateSecret
longLongValue
numberWithLongLong:
responseInfo
showPigCode:withIncomingMessageInfo:
secret
accountCode
verificationFailed:
acceptSession
setAcceptSession:
_lastPayload
_initiatingPayload
_verificationAttempts
_circleDelegate
_verificationFailed
_acceptSession
_circleRequest:
sharedURLSession
ak_dictionaryWithResponseData:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
beginDataTaskWithRequest:completionHandler:
circleURL
heartbeatTokenValue
ak_addClientInfoHeader
ak_addDeviceUDIDHeader
ak_addInternalBuildHeader
ak_addAnisetteHeaders
_requestBody
ak_setBodyWithParameters:
ak_addAuthorizationHeaderWithHeartbeatToken:forAltDSID:
identityTokenValue
ak_addAuthorizationHeaderWithIdentityToken:forAltDSID:
base64EncodedStringWithOptions:
pushToken
piggybackCircleControllerWithContext:
executeCircleRequestWithCompletion:
_replyContext
getIDMSRoutingInfo:forDSID:
setIDMSRoutingInfo:forDSID:
requestOTPForDSID:outMID:outMIDSize:outOTP:outOTPSize:
dispose:
isMachineProvisioned:
startProvisioningWithDSID:SPIM:SPIMLength:outCPIM:outCPIMLength:outSession:
endProvisioningWithSession:PTM:PTMLength:TK:TKLength:
destroyProvisioningSession:
synchronizeWithDSID:SIM:SIMLength:outMID:outMIDLength:outSRM:outSRMLength:
eraseProvisioningForDSID:
dictionary
numberWithUnsignedLongLong:
setErrorDomain:
allocWithZone:
copyWithZone:
setTimestamp:
setHasTimestamp:
hasTimestamp
eventType
setEventType:
setHasEventType:
hasEventType
eventTypeAsString:
StringAsEventType:
setSuccess:
setHasSuccess:
hasSuccess
hasErrorDomain
setErrorCode:
setHasErrorCode:
hasErrorCode
readFrom:
writeTo:
copyTo:
mergeFrom:
timestamp
success
errorDomain
_timestamp
_errorDomain
_eventType
_success
_has
username
serverFriendlyDescription
companionDevice
proxiedDevice
_proxiedAppName
serviceType
_appleIDClientIdentifier
uniqueDeviceIdentifier
MLBSerialNumber
ROMAddress
serialNumber
color
enclosureColor
modelNumber
locale
localeIdentifier
supportsPiggybacking
sharedConfiguration
shouldDisablePiggybacking
date
ak_serverFriendlyString
isEphemeral
shouldPromptForPasswordOnly
shouldRequestShortLivedToken
shouldRequestRecoveryPET
shouldOfferSecurityUpgrade
isAppleIDLoginEnabled
_localUserHasEmptyPassword
desiredInternalTokens
_passwordResetBackupToken
setAnticipateEscrowAttempt:
shouldRequestConfigurationInfo
initWithClient:context:
anisetteDataForDevice:provisionIfNecessary:
ak_anisetteHeadersWithData:
companionDeviceAnisetteData
ak_anisetteHeadersWithCompanionData:
proxiedDeviceAnisetteData
ak_proxiedAnisetteHeadersWithData:
DSID
machineID
oneTimePassword
legacyAnisetteDataForDSID:device:completion:
authKitAccount
removeContinuationTokenForAccount:
UUID
UUIDString
dataUsingEncoding:
removeObjectForKey:
authKitAccountWithAppleID:
continuationTokenForAccount:
passwordResetTokenForAccount:
passwordResetTokenBackupForAccount:
altDSIDForAccount:
authenticationParameters
clearContinuationTokenIfSupported
setUsername:
password
setPassword:
setAltDSID:
setDSID:
client
setClient:
setAuthKitAccount:
ignoreInternalTokens
setIgnoreInternalTokens:
authContext
setAuthContext:
_ignoreInternalTokens
_username
_password
_DSID
_client
_authKitAccount
_authContext
piggybackCircleTimeout
piggybackRequestingCancelled
piggybackRequestingEscapedThroughHatch
shouldForceInteractiveAuth
isFirstTimeLogin
setClientId:
_proxiedAppBundleID
setProxiedClientId:
setHasUsername:
setProxyingForPairedDevice:
reportPromptByClient:withContext:
sharedAnisetteFreeURLSession
requestNewURLBagIfNecessaryWithError:
activeAnisetteDSID
_unsafe_anisetteDataWithRoutingInfoForDSID:withError:
userInfo
code
_unsafe_provisionAnisetteWithCompletion:
scannerWithString:
scanUnsignedLongLong:
_unsafe_anisetteDataForDSID:withError:
ak_wrappedAnisetteError:
setRoutingInfo:
initWithBytesNoCopy:length:freeWhenDone:
setMachineID:
setOneTimePassword:
_createProvisioningStartURLRequest
bytes
length
dataWithBytes:length:
_createProvisioningEndURLRequestWithCPIM:
_createSyncURLRequestWithMID:SRM:routingInfo:
startProvisioningURL
requestWithURL:
ak_addDeviceMLBHeader
ak_addDeviceROMHeader
ak_addDeviceSerialNumberHeader
endProvisioningURL
syncAnisetteURL
IDMSEnvironment
initialize
provisionAnisetteWithCompletion:
syncAnisetteWithSIMData:completion:
eraseAnisetteWithCompletion:
fetchAnisetteDataAndProvisionIfNecessary:withCompletion:
legacyAnisetteDataForDSID:withCompletion:
_URLSession
standardUserDefaults
_setLastEmailListRequestDate:
fetchEmailsURL
absoluteString
allHTTPHeaderFields
addObject:
addObjectsFromArray:
beginTransaction
refreshAccountUsernamesForAltDSID:withNewEmailList:
endTransaction
fetchEmailsForAltDSID:completion:
count
_updateAccount:withRefreshedEmails:altDSID:modifyAliases:
appleIDAccountWithAltDSID:
iCloudAccountForAltDSID:
_broadcastEmailChangeNotification
firstObject
aliasesForAccount:
setWithArray:
setAliases:forAccount:
store
saveVerifiedAccount:withCompletionHandler:
lastEmailListRequestDate
refreshAccountUsernamesForAltDSID:
_accountManager
typeForMessageWithTransportRepresentation:
messageFromTransportRepresentation:
identifier
type
transportRepresentation
_properties
command
argument
setCommand:
setArgument:
initForReadingWithData:
setRequiresSecureCoding:
decodeObjectOfClass:forKey:
finishDecoding
ac_secureCodingError
archivedDataWithRootObject:
replyToID
didSucceed
error
setReplyToID:
setDidSucceed:
setError:
returnData
setReturnData:
initWithService:
addDelegate:queue:
_performRemoteCommand:argument:completion:
setWithObject:
sendMessage:toDestinations:priority:options:identifier:error:
_mhq_handleIncomingReplyMessage:
_replyToCommandMessageWithInternalID:didSucceed:returnData:error:
_handleIncomingCommandMessage:completion:
allValues
removeAllObjects
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
startListeningForMessagesFromPairedDevice
_messageSendingService
_messageHandlingQueue
_completionsByInternalMessageID
_internalMessageIDsByTransportID
start
mainRunLoop
hasClientId
hasProxiedClientId
setHasHasUsername:
hasHasUsername
setHasProxyingForPairedDevice:
hasProxyingForPairedDevice
clientId
proxiedClientId
hasUsername
proxyingForPairedDevice
_clientId
_proxiedClientId
_hasUsername
_proxyingForPairedDevice
dealloc
tokenWithExternalizedVersion:lifetime:
configureWithParameters:
underlyingContext
configurationParameters
_underlyingContext
_configurationParameters
initWithProxy:
_setAuthKitAccount:inUse:forService:completion:
authKitAccountWithDSID:
setAccount:inUse:byService:
servicesUsingAccount:
removeAccount:withCompletionHandler:
reportFinalSignOutEventForAccount:completion:
reportSignOutEventForService:account:completion:
fetchUserInfoURL
ak_errorWithCode:userInfo:
configurationInfoURL
dataWithPropertyList:format:options:error:
fetchConfigDataURL
allKeys
isProtectedWithPasscode
activeCode
_shouldSendIdentityTokenForRemoteUI
masterTokenForAccount:
setShouldSendLocalUserHasAppleIDLoginHeader:
anticipateEscrowAttempt
setProxyAppName:
setClientAppName:
activeServiceNamesForAccount:
setLoggedInServices:
hasEmptyPassword
setHasEmptyPasswordOverride:
getServerUILoadDelegateWithContext:completion:
updateStateWithExternalAuthenticationResponse:forContext:completion:
signalFromServerResponse:
_persistGrandSlamServiceTokens:forAltDSID:DSID:appleID:completion:
_updateAuthKitAccount:withServerResponse:context:completion:
credentialForAccount:error:
token
tokenWithExternalizedVersionString:
_validateLoginCode:forAltDSID:masterToken:idmsData:authContext:completion:
validateCodeURL
ak_addEphemeralAuthHeader
ak_addPRKRequestHeader
ak_addICSCIntentHeader
ak_addProxiedDeviceUDIDHeader:
ak_addProxiedClientInfoHeader:
ak_addProxiedAnisetteHeaders:
validateVettingTokenURL
dictionaryWithObject:forKey:
upgradeEligibilityCheckURL
registerForPushesWithAccount:completion:
allAuthKitAccounts
_capabilityForUIDisplay
registerUISurrogateContext:client:
unregisterUISurrogateContext:client:
endAuthenticationForAppleID:password:error:context:client:clearanceHandler:
_authenticateWithContext:completion:
beginAuthenticationWithContext:client:clearanceHandler:
needsCredentialRecovery
_recoverCredentialsAndAuthenticateWithContext:completion:
needsNewAppleID
_createNewAppleIDAndAuthenticateWithContext:completion:
needsPasswordChange
_changePasswordAndAuthenticateWithContext:completion:
_isInteractiveAuthRequiredForContext:
_performInteractiveAuthWithContext:nonInteractiveAuthError:nonInteractiveAuthResults:completion:
ak_isUserCancelError
_attemptNonInteractiveOptionsForAuthWithContext:completion:
_shortLivedToken
_attemptShortLivedTokenUpgradeWithContext:completion:
_attemptContinuationAuthWithContext:completion:
renewRecoveryTokenURL
domain
isAccountsFrameworkAvailable
authKitAccountType
initWithAccountType:
_handleVerificationCompletionForAccount:username:password:serverResponse:didShowServerUI:continuationData:error:context:completion:
_performSecondaryActionWithServerResponse:context:completion:
_performShortLivedTokenUpgradeWithContext:completion:
tokenUpgradeURL
ak_addShortLivedTokenHeaderWithIdentityToken:forAltDSID:
serviceIdentifiers
_performSilentServiceTokenAuthWithContext:account:completion:
_accountForSilentServiceTokenAuthWithContext:completion:
_performContinuationAuthWithAccount:context:completion:
_accountForContinuationAuthWithContext:allowSuggestions:completion:
isUsernameEditable
mostRecentlyUsedAuthKitAccount
dismissKeepUsingUIForContext:client:withCompletion:
presentKeepUsingUIForContext:client:appleID:completion:
_performSRPAuthenticationWithContext:completion:
_completeAuthenticationWithServiceTokens:tokenFetchError:altDSID:authenticationResults:context:completion:
_fetchTokensForServiceIDs:withUsername:altDSID:masterToken:context:completion:
_validateUsernameMatchesAltDSIDForAuthContext:
_handleBasicLoginUICompletionWithUsername:password:context:additionalData:collectionError:completion:
presentBasicLoginUIForContext:client:completion:
_verifyUsername:password:context:completion:
shouldPreventInteractiveAuth
timeIntervalSinceDate:
_handleBasicLoginUICompletionWithUsername:password:context:additionalData:collectionError:attemptIndex:completion:
dismissBasicLoginUIForContext:client:completion:
_showAlertForLoginError:context:completion:
maximumLoginAttempts
bundleForClass:
localizedStringForKey:value:table:
presentLoginAlertForContext:client:withError:title:message:completion:
_titleAndMessageForError:completion:
_setMessage:
reportAuthEventOfType:success:error:
_checkFreshnessAndVerifyWithPassword:serverResponse:additionalData:secondaryActionError:context:newServerResponse:username:authKitAccount:completion:
shouldFakeAuthSuccess
basicAuthURL
performWithURL:SRPContext:error:
syncAnisetteWithSIMData:device:completion:
eraseAnisetteForDevice:completion:
_handleSuccessfulVerificationForAccount:withResults:serverResponse:context:completion:
_shouldContinueAuthenticatingAccount:username:password:serverResponse:didShowServerUI:continuationData:error:context:completion:
shouldDisablePETs
_identifier
shouldContinueWithAuthenticationResults:error:forContextID:completion:
_shouldSkipAccountUpdatesForAuthWithContext:
_provideServiceTokensIfRequiredForContext:authenticationResults:serverResponse:completion:
shouldUpdatePersistentServiceTokens
arrayByAddingObjectsFromArray:
allObjects
setValuesForKeysWithDictionary:
appleIDAccountWithAppleID:
appleIDAccountType
setCredential:
setAuthenticated:
setAltDSID:forAccount:
setAccountProperty:forKey:
_updateCredentialForSavedAIDAAccount:withNewTokens:
setToken:
_isTouchIDRequiredForGrandSlamServiceTokenWithID:
setRequiresTouchID:
setCredential:forAccount:serviceID:error:
_beginNativeSecondaryActionWithContext:initialAuthResponse:completion:
_beginServerDrivenSecondaryActionWithURLKey:context:initialAuthResponse:completion:
keyForEscapeHatchURL
dismissSecondFactorUIForContext:client:completion:
_handleSecondFactorUICompletionWithCode:error:idmsData:initialAuthResponse:context:completion:
presentSecondFactorUIForContext:client:completion:
_handleSecondFactorUICompletionWithCode:error:idmsData:piggybacking:initialAuthResponse:context:completion:
_showAlertForLoginCodeValidationError:context:completion:
_processValidationCodeSuccessResponse:authResponse:results:completion:
presentSecondFactorAlertForContext:client:withError:title:message:completion:
_urlAtKey:
looksLikeiForgotURLKey:
_addAccountNameParameterToURL:withContext:
_showServerUIWithURLRequest:context:initialAuthResponse:completion:
_showServerUIWithURLRequest:context:initialAuthResponse:loadDelegate:completion:
setProxiedDeviceAnisetteData:
setProxiedDevice:
setShouldSendAbsintheHeader:
setContinuationToken:
setPasswordResetToken:
_authKitAccountForContext:completion:
setShouldSendEphemeralAuthHeader:
setServiceType:
_isServerUIRequestingNativeICSCRecovery:
_retrieveEscrowedRecoveryDataForContext:initialAuthResponse:recoveryInfo:completion:
dismissServerProvidedUIForContext:client:completion:
presentServerProvidedUIForContext:client:URLRequest:delegate:completion:
_decorateIDMSSuppliedRecoveryMetadata:error:
_requestForRecoveryCompletionWithInfo:recoveredInfo:context:error:
_shouldSendServerResponseForRecoveredInfo:withRecoveryError:
ak_errorWithCode:underlyingError:
dismissICSCRecoveryUIForContext:client:completion:
presentICSCRecoveryUIForContext:client:withInfo:completion:
cdpErrorDomain
URLWithString:
ak_addICSCRecoveryHeaderWithIdentityToken:forAltDSID:
enumerateKeysAndObjectsUsingBlock:
_postBodyForiCSCServerUIResponseWithInfo:andError:
localizedFailureReason
externalizedVersion
appleIDAuthSupportTokenCreateWithExternalizedVersion:error:
_authenticationParametersForUsername:altDSID:context:
appleIDAuthSupportCopyAppTokensWithMasterToken:authURL:serviceIds:authParams:error:
removeMasterTokenForAccount:
initWithCapacity:
_beginiForgotFlowWithContext:completion:
isTriggeredByNotification
iForgotContinuationURL
iForgotURL
setNeedsCredentialRecovery:
URLQueryAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
stringByReplacingOccurrencesOfString:withString:
stringByAppendingFormat:
_beginAppleIDCreationFlowWithContext:completion:
createAppleIDURL
setNeedsNewAppleID:
_beginChangePasswordFlowWithAccount:context:completion:
changePasswordURL
setNeedsPasswordChange:
setDSID:forAccount:
setSecurityLevel:forAccount:
credential
externalizedVersionString
setCredentialItem:forKey:
piggyback:promptForRandomCodeWithCompletion:
piggyback:handleVerificationWithError:completion:
piggyback:validateSecurityCode:completion:
piggyback:shouldContinueWithCompletion:
piggyback:handleEscapeHatchError:completion:
authenticateWithContext:completion:
checkSecurityUpgradeEligibilityForAppleID:completion:
validateLoginCode:forAppleID:withCompletion:
updateStateWithExternalAuthenticationResponse:forAppleID:completion:
getServerUILoadDelegateForAltDSID:completion:
setAppleIDWithAltDSID:inUse:forService:completion:
setAppleIDWithDSID:inUse:forService:completion:
fetchUserInformationForAltDSID:completion:
setConfigurationInfo:forIdentifier:forAltDSID:completion:
configurationInfoWithIdentifiers:forAltDSID:completion:
checkInWithAuthenticationServerForAppleID:completion:
reportSignOutForAppleID:service:completion:
reportSignOutForAllAppleIDsWithCompletion:
validateVettingToken:forAltDSID:completion:
renewRecoveryTokenForICSCIdentityToken:forAltDSID:completion:
synchronizeFollowUpItemsForContext:completion:
teardownFollowUpWithContext:completion:
isDevicePasscodeProtected:
activeLoginCode:
emailsForAltDSID:completion:
initWithClient:
_authProxy
_authTrafficController
_authUILiaison
_initiatePiggybackingWithCleanSession:withCompletion:
initialAuthResponse
_clearSessionState
requestSession
initialMessage:
setTransactionId:
contextWithIncomingPayload:
lock
signal
unlock
_promptForSecretWithContext:completion:
set_notifyOfTimeout:
ak_isUserTryAgainError
wait
cancel
_processHandshakeWithContext:handshakeReply:andHandshakeError:withCompletion:
_handleVerificationError:withContext:completion:
_clearCaptureState
_deliverPushPayload:completion:
_shouldContinueProcessing:
session
setServerInfo:
replyWithContext:withCompletion:
setIdentityTokenValue:
sessionWithSecretDelegate:dsid:error:
_capturedCodeString
_cacheSecondFactor:codeCaptureError:
_processCachedUserInputWithContext:completion:
ak_isUserSkippedError
_processCodeEntryErrorWithContext:completion:
_sendDeviceCancelledReplyWithContext:
processAccountCode:error:
initWithServerResponse:andDelegate:
initiatePiggybackingWithCompletion:
idmsData
delegate
setDelegate:
initiatingContext
setInitiatingContext:
initiatingPassword
setInitiatingPassword:
setRequestSession:
capturedCode
setCapturedCode:
escapeHatchTrigger
setEscapeHatchTrigger:
escapeHatchError
setEscapeHatchError:
authResults
setAuthResults:
unitTestContext
setUnitTestContext:
initialHandshakeTimeout
setInitialHandshakeTimeout:
_latestIDMSData
_currentReplyContext
_unitTestContext
_delegate
_initiatingContext
_initiatingPassword
_initialAuthResponse
_requestSession
_capturedCode
_escapeHatchTrigger
_escapeHatchError
_authResults
_initialHandshakeTimeout
doubleValue
dateWithTimeIntervalSinceNow:
objectAtIndexedSubscript:
setName:
setStringValue:
expirationDate
_expirationDate
_stringValue
_setSessionKey:
_setEncryptedSessionKey:
sessionKey
encryptedSessionKey
fetchAnisetteDataAndProvisionIfNecessary:device:completion:
_helperServiceForDevice:
linkType
_nativeAnisetteService
_pairedDeviceAnisetteService
_clientAnisetteService
provisionAnisetteForDevice:completion:
_executeRequest:completion:
reauthenticateWithContext:completion:
ak_arrayWithJSONResponseData:
initWithRequestProvider:
setAuthenticationDelegate:
fetchFollowUpDefinitionsWithIdmsData:completion:
_requestProvider
_reauthHandler
presentKeepUsingUIForContext:appleID:completion:
_performBlockWithClient:context:requireFullUICapability:allowRedirectToSettings:block:
dismissKeepUsingUIForContext:withCompletion:
presentBasicLoginUIForContext:completion:
dismissBasicLoginUIForContext:completion:
presentLoginAlertForContext:withError:title:message:completion:
_isFullUICapabilityRequiredFor2FA
presentSecondFactorUIForContext:completion:
dismissSecondFactorUIForContext:completion:
presentSecondFactorAlertForContext:withError:title:message:completion:
presentServerProvidedUIForContext:URLRequest:delegate:completion:
dismissServerProvidedUIForContext:completion:
presentICSCRecoveryUIForContext:withInfo:completion:
dismissICSCRecoveryUIForContext:completion:
_updateWithValuesFromContext:
_isBackgroundClient:eligibleForForegroundAuthenticationWithContext:
_launchUISurrogateForContext:withCheckinID:
_showAlertForSettingsLoginIfNecessaryWithContext:client:needFullUI:completion:
sharedConnection
effectiveBoolValueForSetting:
_isProxyingForApp
_isAppWithBundleIDForeground:
shouldSkipSettingsLaunchAlert
deviceSpecificLocalizedStringWithKey:
_stringByAppendingBlameIfNecessary:withContext:client:
_optionsForCreatingUserNotificationWithTitle:message:defaultButton:alternateButton:
isInternalBuild
stringByAppendingString:
iCloudAccountForAppleID:
isPrimaryiCloudAccount:
defaultWorkspace
openSensitiveURL:withOptions:
_isSettingsForeground
_surrogateCheckinID
_surrogateCheckinIDLock
_surrogateContext
_surrogateClient
_surrogateQueue
_pendingBGContext
_pendingClientUIWork
_clientUIWorkQueue
_postCheckInDataToIDMSWithAccount:pushToken:event:completion:
stringRepresentationForService:
checkInURL
_checkInParametersForEvent:pushToken:account:
setLastCheckInAttemptDate:
setHasBeenUnlockedSinceLastCheckIn:
setLastCheckInSuccessDate:
internationalMobileEquipmentIdentity
userChosenName
mobileEquipmentIdentifier
integratedCircuitCardIdentifier
coverGlassColor
housingColor
backingColor
phoneNumber
currentLocale
performLivenessCheckInForAccount:withPushToken:completion:
performLivenessCheckInForAccounts:withPushToken:
_checkInQueue
_currentDevice
setIsUsernameEditable:
setShouldSkipSettingsLaunchAlert:
fetchAnisetteDataForContext:provisionIfNecessary:withCompletion:
syncAnisetteForContext:withSIMData:completion:
eraseAnisetteForContext:withCompletion:
provisionAnisetteForContext:withCompletion:
legacyAnisetteDataForContext:DSID:withCompletion:
_clientProxy
invalidate
_stopObservingLanguageChangeNotification
initWithMachServiceName:
enableTransactions
resume
_startListeningForMessagesFromPairedDevice
_monitorXPCEvents
_beginObservingLanguageChangeNotfication
_cleanUpUnusedAccounts
setExportedObject:
XPCInterface
setExportedInterface:
setRemoteObjectInterface:
isUnlocked
removeUnusedAuthKitAccounts
listener:shouldAcceptNewConnection:
_isPasscodeChangeNotification:
_isDeviceScreenUnlockNotification:
_checkScreenUnlockStateFromNotificationDictionary:
_checkKeybagUnlockState
anisetteServiceListener
setAnisetteServiceListener:
authServiceListener
setAuthServiceListener:
_anisetteServiceListener
_authServiceListener
_tq_invokeClearanceHandler:forClientBundleID:withContext:
removeObject:
_updateContext:withPassword:forAppleID:
removeObjectAtIndex:
_setPassword:
_pendingAuthenticationClearances
_pendingAuthenticationContexts
_pendingAuthenticationClientBundleIDs
_authenticatingApps
_authenticatingDaemons
_clearanceQueue
_trafficQueue
weakObjectsHashTable
APSEnvironment
isValidEnvironment:
initWithEnvironmentName:namedDelegatePort:queue:
setEnabledTopics:
_performHeartbeatCheckInIfNecessary
numberWithLong:
shouldSuppressPushMessage:
processPushMessage:
_performHeartbeatCheck:
hasBeenUnlockedSinceLastCheckIn
_ensureDesiredAPSEnvironmentIsInUse
shutdown
ak_hexString
_publicAPSToken
publicToken
topic
_tearDownNotificationWithID:
refresh
_messageSupportsAlerts:
_queryDelegatesForSuppressAction:
tearDownLoginNotifications
_presentMessage:withPushMessageId:withCommand:forAccount:
_processMessageWithDelegates:
_notifyServerAboutUserResponseToPushMessageWithID:command:account:
_promptForChangePasswordForAccount:
_performCommand:forAccount:withIncomingMessage:
_showNotificationWithID:title:body:secondaryTitle:secondaryBody:defaultButtonTitle:alternateButtonTitle:isSilent:command:eventDetails:account:responseHandler:
_generateLoginCodeForAccount:withIncomingMessage:
_showTrustedDevicesForAccount:
_startPasswordResetFlowForAccount:
tearDownNotificationWithPayload:account:completion:
notificationAckURL
localizedDescription
_createUserNotificationWithTitle:body:defaultButtonTitle:alternateButtonTitle:makeNoise:
_awaitResponseForNotification:
_showLoginNotificationWithCode:incomingMessageInfo:piggy:
unsignedIntValue
_showNotification:withIdentifier:responseHandler:
initWithLatitude:longitude:
locality
administrativeArea
reverseGeocodeLocation:completionHandler:
_locationNameWithLatitude:longitude:completion:
setLatitude:
setLongitude:
setReason:
setDeviceClass:
setDeviceColor:
setDeviceEnclosureColor:
_loginNotificationWithContext:isSilent:defaultButtonTitle:alternateButtonTitle:
_message
reason
_populateNotificationOptionsWithCommonKeys:makeNoise:
extensionItemWithAppleIDAuthenticationContext:
_receiveResponseFromNotification:handler:
_startChangePasswordFlowForAccount:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
addDelegate:
removeDelegate:
performHeartbeatCheck
setActiveCode:
_apsConnection
_activeAPSEnvironment
_apsConnectionLock
_notificationsByPushID
_pigNotifications
_notificationsByPushIDLock
_apsTokenSemaphore
_loginCodeNotificationID
_weakPushDelegates
_activeCode
condition
setCondition:
_condition
_payload
setQualityOfService:
cancelAllOperations
payloadWithInfo:
payloadIndicatesHSA2RepairNeeded:
isAcceptingPayload
_hasPrimaryiCloudAccountForPayload:
serverMachineId
anisetteDataWithError:
isRequestingPayload
_processPiggybackPayload:
_processPendingCompletionsForPayload:
_acceptingControllerForTransactionId:
_removeAcceptingControllerForTransaction:
waitForReply
waitForReplyTimeout
_processingTimeOut
isCancelled
timeIntervalSinceNow
numberWithDouble:
waitUntilDate:
_notifyOfTimeout
addExecutionBlock:
addOperation:
tearDown
startRequestSessionWithController:completion:
_acceptingControllers
_pendingReplies
_requestingController
_replyProcessingQueue
_circleRequestProcessingQueue
_requiresHSA2Repair
application/json
Content-Type
Accept
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
underAge
studentAccount
securityLevel
TQ,R,V_securityLevel
isUnderage
TB,R,V_isUnderage
isLegacyStudent
TB,R,V_isLegacyStudent
dictionaryRepresentation
T@"NSDictionary",R,C
com.apple.authkit.client
com.apple.authkit.client.private
com.apple.authkit.client.internal
com.apple.authkit.client.owner
com.apple.authkit.writer.internal
com.apple.dt.Xcode
com.apple.dt.xcodebuild
com.apple.dt.xcscontrol
com.apple.iTunes
accountsd
itunesstored
aktool
backupd
Preferences
askpermissiond
exited?
%@ (%@)
hasInternalAccess
TB,R,N
hasPrivateAccess
hasPublicAccess
hasWriteAccess
hasOwnerAccess
name
T@"NSString",R,N
bundleID
isPermittedToProxy
isPermittedToProxyInitialAuth
com.apple.gs.idms.pet
com.apple.gs.idms.hb
X-Apple-GS-Token
X-Apple-HB-Token
X-Apple-AK-Auth-Type
X-Apple-I-CK
X-Apple-I-PRK
X-Apple-I-MD-DATA
X-Apple-I-AURL
X-Apple-I-Device-Terms
X-Apple-I-Accepted-Terms
X-Apple-I-MD-Cmd-Target
supportsSecureCoding
TB,R
@"<NSSecureCoding>"24@?0@"NSString"8@"NSString"16
DsPrsId
adsid
atxid
alias
acname
token
duration
uireq
paired
hsa2
hsa1
managed
v8@?0
dsid
T@"NSNumber",R,N,V_dsid
altDSID
T@"NSString",R,N,V_altDSID
aliases
T@"NSArray",R,N,V_aliases
appleIDSecurityLevel
TQ,R,N,V_appleIDSecurityLevel
masterToken
T@"AKMasterToken",R,N,V_masterToken
passwordEquivalentToken
T@"AKToken",R,N
heartbeatToken
continuationToken
T@"AKToken",R,N,V_continuationToken
passwordResetToken
T@"AKToken",R,N,V_passwordResetToken
serviceTokens
T@"NSDictionary",R,N,V_serviceTokens
isSecondaryActionRequired
TB,R,N,V_isSecondaryActionRequired
secondaryActionURLKey
T@"NSString",R,N,V_secondaryActionURLKey
secondaryActionMessage
T@"NSString",R,N,V_secondaryActionMessage
isAnisetteResyncRequired
TB,R,N,V_isAnisetteResyncRequired
anisetteResyncData
T@"NSData",R,N,V_anisetteResyncData
isAnisetteReprovisioningRequired
TB,R,N,V_isAnisetteReprovisioningRequired
shouldProxyAnisetteAction
TB,R,N,V_shouldProxyAnisetteAction
errorCode
Tq,R,N,V_errorCode
errorMessage
T@"NSString",R,N,V_errorMessage
acceptedTermsVersions
T@"NSString",R,N,V_acceptedTermsVersions
isManagedAppleID
TB,R,N,V_isManagedAppleID
isAuditLogin
TB,R,N,V_isAuditLogin
isServerUIRequired
TB,R,N,V_isServerUIRequired
isPasscodeResetRequired
TB,R,N,V_isPasscodeResetRequired
configurationInfo
T@"NSDictionary",R,N,V_configurationInfo
acceptedDeviceTermsVersion
T@"NSNumber",R,N,V_acceptedDeviceTermsVersion
transactionId
T@"NSString",R,N,V_transactionId
serverInfo
T@"NSString",R,N,V_serverInfo
allowPiggybacking
TB,R,N,V_allowPiggybacking
firstName
T@"NSString",R,N,V_firstName
lastName
T@"NSString",R,N,V_lastName
imageURLString
T@"NSString",R,N,V_imageURLString
isUpdateable
v24@?0@"AKCircleRequestPayload"8@"NSError"16
DSID
v24@?0@"NSNumber"8@"NSError"16
%06u
acceptSession
T@"KCJoiningAcceptSession",&,N,V_acceptSession
KCJoiningAcceptAccountCircleDelegate
/System/Library/PrivateFrameworks/KeychainCircle.framework/KeychainCircle
KCJoiningAcceptSession
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
POST
ptkn
%@ %@
timestamp
eventType
success
errorDomain
hasTimestamp
TB,N
TQ,N,V_timestamp
hasEventType
Ti,N,V_eventType
hasSuccess
TB,N,V_success
hasErrorDomain
T@"NSString",&,N,V_errorDomain
hasErrorCode
Tq,N,V_errorCode
SRP_AUTH_FAILURE
SECOND_FACTOR_SERVER_UI
SECOND_FACTOR_PIGGYBACK_TRANSITION
SECOND_FACTOR_PIGGYBACK_FAILURE
SECOND_FACTOR_PIGGYBACK_ESCAPE_SMS_SUCCESS
SECOND_FACTOR_PIGGYBACK_ESCAPE_FAILURE
(unknown: %i)
AppleIDClientIdentifier
X-Apple-I-Client-Time
X-Apple-MD
X-Apple-MD-M
X-Mme-Device-Id
X-Apple-I-MLB
X-Apple-I-ROM
X-Apple-I-SRL-NO
X-Mme-Companion-Device-Id
X-Mme-Proxied-Device-Id
X-Apple-Password-Only
X-Apple-Offer-Security-Upgrade
X-Apple-Ephemeral-Auth
bootstrap
ckgen
icscrec
ckauth
pdec
ploc
prtn
papp
capp
svct
rpet
v24@?0@"AKAnisetteData"8@"NSError"16
com.apple.authkit.AppleIDClientIdentifier
username
T@"NSString",C,N,V_username
password
T@"NSString",C,N,V_password
T@"NSString",C,N,V_altDSID
T@"NSString",C,N,V_DSID
client
T@"AKClient",&,N,V_client
authKitAccount
T@"ACAccount",&,N,V_authKitAccount
ignoreInternalTokens
TB,N,V_ignoreInternalTokens
authContext
T@"AKAppleIDAuthenticationContext",&,N,V_authContext
__OSINSTALL_ENVIRONMENT
__AKSYNCBUBBLE
AWDPostMetric
/System/Library/PrivateFrameworks/WirelessDiagnostics.framework/WirelessDiagnostics
Header
Request
Response
spim
cpim
X-Apple-I-MD-RINFO
X-Apple-I-MD-M
Status
com.apple.akd.anisette
v20@?0B8@"NSError"12
AKLastEmailListRequestDateKey
-[AKAppleIDAccountInfoHelperService _setLastEmailListRequestDate:]
-[AKAppleIDAccountInfoHelperService fetchEmailsForAltDSID:completion:]
primary
v24@?0@"NSArray"8@"NSError"16
-[AKAppleIDAccountInfoHelperService _broadcastEmailChangeNotification]
com.apple.private.alloy.anisette
akcmd
akarg
akid
aktyp
akrid
akret
aksuc
akerd
identifier
type
TQ,R,N
AKCommandMessage <%p> {
Internal ID: %@,
Command: %@,
Argument: %@ }
command
TQ,N
argument
T@"NSObject",C,N
NSData <%@ bytes>
(none)
AKReplyMessage <%p> {
Internal ID: %@,
Reply-To: %@,
Success: %@,
Error: %@,
RD: %@ }
replyToID
T@"NSString",C,N
didSucceed
error
T@"NSError",C,N
returnData
T@"NSData",C,N
com.apple.ak.idsq
v28@?0B8@"NSData"12@"NSError"20
-[AKPeerIDSAnisetteService syncAnisetteWithSIMData:completion:]
-[AKPeerIDSAnisetteService eraseAnisetteWithCompletion:]
-[AKPeerIDSAnisetteService provisionAnisetteWithCompletion:]
-[AKPeerIDSAnisetteService legacyAnisetteDataForDSID:withCompletion:]
-[AKPeerIDSAnisetteService _mhq_handleIncomingReplyMessage:]
-[AKPeerIDSAnisetteService service:didSwitchActivePairedDevice:acknowledgementBlock:]
IDSService
/System/Library/PrivateFrameworks/IDS.framework/IDS
IDSSendMessageOptionBypassDuetKey
IDSSendMessageOptionEnforceRemoteTimeoutsKey
IDSSendMessageOptionTimeoutKey
IDSDefaultPairedDevice
clientId
proxiedClientId
hasUsername
proxyingForPairedDevice
hasClientId
T@"NSString",&,N,V_clientId
hasProxiedClientId
T@"NSString",&,N,V_proxiedClientId
hasHasUsername
TB,N,V_hasUsername
hasProxyingForPairedDevice
TB,N,V_proxyingForPairedDevice
serverProvidedData
T@"NSDictionary",R,N
status
T@"AKMasterToken",R,N
underlyingContext
T^{__AppleIDAuthSupportData=},R,N,V_underlyingContext
configurationParameters
T@"NSDictionary",R,N,V_configurationParameters
isHSA2Eligible
cdks
v24@?0@"ACAccount"8@"NSError"16
v36@?0B8@"NSDictionary"12@"NSHTTPURLResponse"20@"NSError"28
%llu
security-code
X-Apple-I-Vetting-Token
IDMS
v24@?0@"NSDictionary"8@"NSError"16
v32@?0@"AKAuthenticationServerResponse"8@"NSDictionary"16@"NSError"24
v28@?0B8@"NSHTTPURLResponse"12@"NSError"20
v24@?0@"AKAuthenticationServerResponse"8@"NSError"16
v40@?0@"NSString"8@"NSString"16@"NSDictionary"24@"NSError"32
-[AKAppleIDAuthenticationService _validateUsernameMatchesAltDSIDForAuthContext:]
WRONG_PASSWORD_ALERT_TITLE
Localizable
WRONG_PASSWORD_ALERT_MESSAGE
MISSING_INPUT_ALERT_TITLE
MISSING_INPUT_ALERT_MESSAGE
BAD_NETWORK_ALERT_TITLE
BAD_NETWORK_ALERT_MESSAGE
CODE_INVALID_TITLE
CODE_INVALID_MESSAGE
UNDERAGE_ALERT_TITLE
UNDERAGE_ALERT_MESSAGE
SRP_VERIFICATION_ERROR_TITLE
UNKNOWN_ERROR_ALERT_TITLE
UNKNOWN_ERROR_ALERT_MESSAGE
v24@?0@"NSString"8@"NSString"16
ENTER_VERIFICATION_CODE_PIG
v28@?0B8@"NSDictionary"12@"NSError"20
v16@?0@"NSError"8
v20@?0B8@"NSDictionary"12
com.apple.gs.icloud.storage.buy
v32@?0@"NSHTTPURLResponse"8@"NSDictionary"16@"NSError"24
v32@?0@8@16^B24
?%@=%@
ACAccount
/System/Library/Frameworks/Accounts.framework/Accounts
ACAccountCredential
ACHeartbeatTokenKey
ACContinuationTokenKey
ACPasswordResetTokenKey
ACPasswordResetTokenBackupKey
%06lu
requestSession
T@"KCJoiningRequestSecretSession",&,N,V_requestSession
capturedCode
T@"NSNumber",&,N,V_capturedCode
escapeHatchTrigger
T@"NSError",&,N,V_escapeHatchTrigger
escapeHatchError
T@"NSError",&,N,V_escapeHatchError
authResults
T@"NSDictionary",&,N,V_authResults
unitTestContext
TB,N,V_unitTestContext
initialHandshakeTimeout
Td,N,V_initialHandshakeTimeout
delegate
T@"<AKPiggybackRequestingControllerDelegate>",W,N,V_delegate
initiatingContext
T@"AKAppleIDAuthenticationContext",&,N,V_initiatingContext
initiatingPassword
T@"NSString",&,N,V_initiatingPassword
initialAuthResponse
T@"AKAuthenticationServerResponse",R,N,V_initialAuthResponse
KCJoiningRequestSecretSession
X-Apple-Identity-Token
X-Apple-Session-Key
X-Apple-Encrypted-Session-Key
stringValue
T@"NSString",C,N,V_stringValue
expirationDate
T@"NSDate",R,N,V_expirationDate
T@"NSString",C,N,V_name
sessionKey
T@"NSData",R,N
encryptedSessionKey
externalizedVersion
externalizedVersionString
AKUISurrogateQueue
AKUIWorkQueue
v32@?0@"AKClient"8@"AKAppleIDAuthenticationContext"16@"NSError"24
com.apple.Preferences
FORGOT_PASSWORD_ALERT_RESET_BUTTON
FORGOT_PASSWORD_ALERT_CANCEL_BUTTON
FORGOT_PASSWORD_ALERT_TITLE
FORGOT_PASSWORD_ALERT_MESSAGE
PASSWORD_ALERT_SETTINGS_BUTTON
PASSWORD_ALERT_CANCEL_BUTTON
PASSWORD_ALERT_TITLE_WITH_USERNAME
PASSWORD_ALERT_MESSAGE_WITH_USERNAME
CONTINUE_AUTH_ALERT_TITLE
CONTINUE_AUTH_ALERT_MESSAGE
PASSWORD_ALERT_TITLE
PASSWORD_ALERT_MESSAGE
PASSWORD_ALERT_TITLE_LOCKSCREEN
PASSWROD_ALERT_MESSAGE_LOCKSCREEN
PASSWORD_ALERT_MESSAGE_PROXY_INTERNAL_BLAME
PASSWORD_ALERT_MESSAGE_INTERNAL_BLAME
prefs:notifyAuthKit=true&authKitContextID=%@
CASTLE
STORE
GAMECENTER
FACETIME
MESSAGES
ACCOUNT_SETTINGS&path=%@
&root=%@
noptkn
imei
clcg
clhs
clbg
iccid
meid
services
event
circleStatus
liveness
signout-all
signout-
AKCheckInQueue
-[AKClientAnisetteService fetchAnisetteDataAndProvisionIfNecessary:withCompletion:]
-[AKClientAnisetteService syncAnisetteWithSIMData:completion:]
-[AKClientAnisetteService eraseAnisetteWithCompletion:]
-[AKClientAnisetteService provisionAnisetteWithCompletion:]
-[AKClientAnisetteService legacyAnisetteDataForDSID:withCompletion:]
com.apple.language.changed
New connection from client %@ with the AK write entitlment.
New connection from client %@ (internal).
New connection from client %@ (private).
New connection from client %@ (public).
Rejecting connection from client %@ because it is not entitled.
_State
anisetteServiceListener
T@"NSXPCListener",&,N,V_anisetteServiceListener
authServiceListener
T@"NSXPCListener",&,N,V_authServiceListener
AKATCClearanceQueue
AKAuthTrafficQueue
com.apple.ak.unknown
com.apple.ak.aps.sim
com.apple.idmsauth
txnid
prevtxnid
alert
title
body
stitle
sbdy
defbtn
albtn
silent
akdata
v16@?0@"NSObject<OS_xpc_object>"8
v16@?0Q8
LOGIN_CODE_ALERT_TITLE_FAILED
LOGIN_CODE_ALERT_OK_BUTTON
LOGIN_CODE_ALERT_TITLE_DEFAULT
LOGIN_CODE_ALERT_MESSAGE_DEFAULT
(internal:piggy)
prefs:root=CASTLE&path=TRUSTED_DEVICES
prefs:root=CASTLE&aaaction=resetPassword
prefs:root=ACCOUNT_SETTINGS&path=%@&aaaction=resetPassword
prefs:root=ACCOUNT_SETTINGS&path=%@&aaaction=changePassword
prefs:root=CASTLE&aaaction=changePassword
APPLE_ID_LOCALE_AND_ADMINISTRATIVE_AREA_FORMAT
v16@?0@"NSString"8
%loc%
APPLE_ID_SIGN_IN_HEADER
APPLE_ID_UNABLE_TO_RESOLVE_LOCATION_FOR_REASON
ALERT_DEFAULT_BUTTON
CHANGE_PASSWORD_ALERT_TITLE
CHANGE_PASSWORD_ALERT_BODY
CHANGE_PASSWORD_ALERT_DEF_BTN
CHANGE_PASSWORD_ALERT_ALT_BTN
activeCode
T@"NSString",C,N,V_activeCode
APSEnvironmentProduction
/System/Library/PrivateFrameworks/ApplePushService.framework/ApplePushService
APSConnection
com.apple.ak.hb
CLGeocoder
/System/Library/Frameworks/CoreLocation.framework/CoreLocation
CLLocation
condition
T@"NSCondition",&,N,V_condition
payload
T@"AKCircleRequestPayload",&,N,V_payload
com.apple.authkit.circlereply
AKFollowUpRequestProvider
AKURLRequestProvider
NSObject
AKAppleIDUserInformationResponse
AKClient
AKAppleIDCodeGenerator
NSSecureCoding
NSCoding
AKAuthenticationServerResponse
AKPiggybackAcceptingController
KCJoiningAcceptSecretDelegate
AKPiggybackCircleController
AKADIProxy
AWDAuthKitAuthEvent
NSCopying
AKSRPAuthContextHelper
AKTelemetryController
AKAppleIDPromptReporter
AKNativeAnisetteService
AKAnisetteServiceProtocol
AKAppleIDAccountInfoHelperService
_AKMessage
AKCommandMessage
AKReplyMessage
AKPeerIDSAnisetteService
IDSServiceDelegate
AWDAuthKitPromptEvent
AKSRPContext
AKAppleIDAuthenticationService
AKPiggybackRequestingControllerDelegate
AKAppleIDAuthenticationDaemonProtocol
AKPiggybackRequestingController
KCJoiningRequestSecretDelegate
AKToken
AKMasterToken
AKAnisetteProvisioningService
AKAnisetteProvisioningDaemonProtocol
AKFollowUpServiceControllerImpl
AKFollowUpServiceController
AKAuthenticationUILiaison
AKAppleIDCheckInHelperService
AKFollowupReauthenticator
AKFollowUpAuthHandler
AKClientAnisetteService
AKDaemonConnectionManager
NSXPCListenerDelegate
AKAuthenticationTrafficController
AKAppleIDAuthSupportProxyImpl
AKAppleIDAuthSupportProxy
AKAppleIDPushHelperService
APSConnectionDelegate
AKSRPOperation
AKPiggybackReplyWaiter
AKPiggybackController
AKAppleIDPushHelperServiceDelegate
AKAuthEventReporter
@24@0:8@16
@24@0:8@"AKAppleIDAuthenticationContext"16
@16@0:8
@"AKAppleIDAuthenticationContext"16@0:8
@32@0:8@16^@24
@"NSURLRequest"32@0:8@"NSDictionary"16^@24
v24@0:8@16
v24@0:8@"NSMutableURLRequest"16
@"NSDictionary"24@0:8@"NSDictionary"16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v16@0:8
@"AKAppleIDAuthenticationContext"
@24@0:8@?16
@"NSXPCConnection"
@"NSString"
v24@0:8@?16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@32@0:8@16@24
q16@0:8
@"NSMutableDictionary"
@"NSNumber"
@"NSArray"
@"AKMasterToken"
@"AKToken"
@"NSData"
@"NSDictionary"
i24@0:8^@16
v32@0:8@16@?24
@"AKCircleRequestPayload"
@"KCJoiningAcceptAccountCircleDelegate"
@"KCJoiningAcceptSession"
@24@0:8^@16
@"AKCircleRequestContext"
i32@0:8^Q16Q24
i32@0:8Q16Q24
i56@0:8Q16^*24^I32^*40^I48
i24@0:8^v16
i24@0:8Q16
i60@0:8Q16r*24I32^*36^I44^I52
i44@0:8I16r*20I28r*32I40
i20@0:8I16
i68@0:8Q16r*24I32^*36^I44^*52^I60
@24@0:8^{_NSZone=}16
v24@0:8Q16
v20@0:8B16
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
v24@0:8q16
{?="errorCode"b1"timestamp"b1"eventType"b1"success"b1}
@"AKClient"
@"ACAccount"
v32@0:8@16@24
v24@0:8@?<v@?B@"NSError">16
v32@0:8@"NSData"16@?<v@?B@"NSError">24
v28@0:8B16@?20
v28@0:8B16@?<v@?@"AKAnisetteData"@"NSError">20
v32@0:8@"NSString"16@?<v@?@"AKAnisetteData"@"NSError">24
@32@0:8Q16^@24
@40@0:8@16@24Q32
@"AKURLSession"
v44@0:8@16@24@32B40
@"AKAccountManager"
Q24@0:8@16
v56@0:8@16@24@32@40@48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@16@24@32@40@48@56
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@16@24@32B40@44
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@16@24@32B40@44@52
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v48@0:8@16@24@32@40
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v24@0:8@"IDSService"16
v40@0:8@16@24@?32
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v40@0:8Q16@24@?32
v44@0:8@16B24@28@36
@"IDSService"
@"NSObject<OS_dispatch_queue>"
{?="timestamp"b1"hasUsername"b1"proxyingForPairedDevice"b1}
^{__AppleIDAuthSupportData=}16@0:8
^{__AppleIDAuthSupportData=}
v32@0:8@"AKPiggybackRequestingController"16@?<v@?@"NSNumber"@"NSError">24
v40@0:8@"AKPiggybackRequestingController"16@"NSError"24@?<v@?@"NSNumber"@"NSError">32
v40@0:8@"AKPiggybackRequestingController"16@"NSNumber"24@?<v@?@"AKAuthenticationServerResponse"@"NSError">32
v32@0:8@"AKPiggybackRequestingController"16@?<v@?@"NSDictionary"@"NSError">24
v40@0:8@"AKPiggybackRequestingController"16@"NSError"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSNumber"@"NSError">16
v40@0:8Q16@"NSString"24@?<v@?B@"NSError">32
v40@0:8@"NSHTTPURLResponse"16@"NSString"24@?<v@?B@"NSError">32
v40@0:8@"NSHTTPURLResponse"16@"AKAppleIDAuthenticationContext"24@?<v@?B@"NSError">32
v32@0:8@"NSString"16@?<v@?@"AKAppleIDServerResourceLoadDelegate"@"NSError">24
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"AKAppleIDServerResourceLoadDelegate"@"NSError">24
v44@0:8@16B24q28@?36
v44@0:8@"NSString"16B24q28@?<v@?B@"NSError">36
v44@0:8@"NSNumber"16B24q28@?<v@?B@"NSError">36
v32@0:8@"NSString"16@?<v@?@"NSDictionary"@"NSError">24
v48@0:8@16@24@32@?40
v48@0:8@"<NSSecureCoding>"16@"NSString"24@"NSString"32@?<v@?B@"NSError">40
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@16q24@?32
v40@0:8@"NSString"16q24@?<v@?B@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?B@"NSError">32
v32@0:8@"AKCircleRequestContext"16@?<v@?@"AKCircleRequestPayload"@"NSError">24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?B@"NSError">24
v32@0:8@"AKFollowUpTearDownContext"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSError">16
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v64@0:8Q16@24@32@40@48@?56
v36@0:8@16B24@?28
v64@0:8@16@24@32@40@48@?56
v72@0:8@16@24@32@40@48Q56@?64
v88@0:8@16@24@32@40@48@56@64@72@?80
v84@0:8@16@24@32@40B48@52@60@68@?76
v56@0:8@16@24@32@40@?48
v68@0:8@16@24@32B40@44@52@?60
B32@0:8@16@24
@48@0:8@16@24@32@40
@40@0:8@16@24@32
@"NSObject<AKAppleIDAuthSupportProxy>"
@"AKAuthenticationTrafficController"
@"AKAuthenticationUILiaison"
@20@0:8B16
@"NSString"20@0:8B16
B32@0:8@16^@24
B32@0:8@"NSString"16^@24
B24@0:8^@16
d16@0:8
v24@0:8d16
@"<AKPiggybackRequestingControllerDelegate>"
@"AKAuthenticationServerResponse"
@"KCJoiningRequestSecretSession"
@"NSError"
@"NSDate"
v32@0:8@"AKDevice"16@?<v@?B@"NSError">24
v40@0:8@"NSData"16@"AKDevice"24@?<v@?B@"NSError">32
v36@0:8B16@20@?28
v36@0:8B16@"AKDevice"20@?<v@?@"AKAnisetteData"@"NSError">28
v40@0:8@"NSString"16@"AKDevice"24@?<v@?@"AKAnisetteData"@"NSError">32
@28@0:8@16B24
@"AKNativeAnisetteService"
@24@0:8@"<AKURLRequestProvider>"16
v24@0:8@"<AKFollowUpAuthHandler>"16
v32@0:8@"NSDictionary"16@?<v@?@"NSArray"@"NSError">24
@"<AKURLRequestProvider>"
@"<AKFollowUpAuthHandler>"
v48@0:8@16@24B32B36@?40
v44@0:8@16@24B32@?36
@"NSUUID"
@"NSLock"
v40@0:8q16@24@?32
@"AKDevice"
@"<AKAppleIDAuthenticationClientProtocol>"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
v40@0:8@?16@24@32
v40@0:8@16@24@32
@"NSMutableArray"
@"NSMutableSet"
^{__AppleIDAuthSupportTokenData=}32@0:8@16^@24
^{__AppleIDAuthSupportTokenData=}32@0:8@"NSData"16^@24
@56@0:8^{__AppleIDAuthSupportTokenData=}16@24@32@40^@48
@"NSDictionary"56@0:8^{__AppleIDAuthSupportTokenData=}16@"NSURL"24@"NSArray"32@"NSDictionary"40^@48
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@16B24
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v48@0:8@16@24Q32@40
v40@0:8Q16@24@32
v40@0:8@16Q24@32
v36@0:8@16@24B32
B24@0:8^{__CFUserNotification=}16
v108@0:8@16@24@32@40@48@56@64B72Q76@84@92@?100
^{__CFUserNotification=}44@0:8@16B24@28@36
v40@0:8^{__CFUserNotification=}16@24@?32
^{__CFUserNotification=}52@0:8@16@24@32@40B48
v32@0:8^{__CFUserNotification=}16@?24
@"APSConnection"
@"NSObject<OS_dispatch_semaphore>"
@"NSHashTable"
B40@0:8@16@24^^{__CFError}32
@"NSCondition"
B24@0:8@"APSMessage"16
v24@0:8@"APSMessage"16
@32@0:8@16@?24
@"AKPiggybackRequestingController"
@"NSOperationQueue"
v32@0:8i16B20@24
Unable to determine bundle ID of client %@ using NSBundle API. Falling back to CF.
Got malformed "%@" configuration info!
Got insecure "%@" configuration info!
Invalid/missing value for key alias: %@
Invalid/missing value for key acname: %@
Invalid value for key ut: %@
Invalid value type for key: %@
Successfully obtained new CK from SRP
Successfully obtained new PRK from SRP
Invalid type for DSID value: %@
No altDSID for auth server response. Could be bad.
No DSID for auth server response. Could be bad.
No Apple ID for auth server response. Could be bad.
Updating with secondary auth response: %@
Trying to update an auth response without an existing _masterToken. Trouble waiting down the line.
Unable to update master token
Successfully obtained a new master token.
Successfully obtained a new PET.
Successfully obtained a new HB token.
Invalid format for service token in header %@
Updating token for service ID %@.
Successfully obtained new CK from secondary auth
Value for %@ is missing/invalid!
Successfully obtained new PRK from secondary auth.
No value for %@ header.
Invalid value value for %@ header: %@
Value for %@ is: %@
Will tear down an existing piggybacking session
Starting a piggybacking session
Approving device could not accept piggybacking session: %@
Will process message using session: %@
Did process message using session: %@
Initializing accept session for DSID: %@
Failed to verify requesting secret, attempts: %@
Failed to generate a circle request with error: %@
Circle request failed with error: %@
Circle request completed with HTTP status code: %@
No body parameters in circle response!
Missing key %@ in server response.
An error occurred sending the circle request. Server message: %@
Missing client info for circle request
Missing push token for circle request
altDSID is available for auth: %@
Context eligibility for piggybacking: %@
Piggybacking forced disabled
Skipping piggybacking, already in circle
Skipping piggybacking, missing push token
Client is eligible for piggybacking: %@
Client has requested password-only auth.
Client has requested a short-lived token.
Client has request a recovery PET.
Cannot offer HSA2 upgrade on device with Apple ID login enabled.
Client has indicated that we should offer HSA 2.0 upgrade.
Password available. Will ask for bootstrap password-based auth.
No password, but CK is available. Will ask for ck-based auth.
Performing ephemeral auth. Will not ask for ckgen or prkgen.
Sending prkgen: %@
The client indicated support for ckgen: %@
ckgen supported: %@
Will ask for ckgen.
Will ask to stash escrow PRK
Context has provided Anisette data for companion device.
Looking to set companion Anisette data in CPD.
Context has provided Anisette data for proxied device.
Grabbing Anisette data from proxied device.
Context has provieded UDID for proxied device.
Attaching v1 Anisette data.
Keychain item was found but had no data!
Keychain item not found. Generating a new one...
There was an error saving the AppleIDClientIdentifier to the keychain! %@
Unable to retrieve keychain item. Error: %@
Skipping fetchAnisetteDataAndProvisionIfNecessary - Bag Fetch Failed: %@
Client requested that we attempt provisioning...
Provisioning succeeded!
Unable to get Anisette data even after provisioning was attempted. Error: %@
Provisioning failed. No Anisette for you today! Error: %@
Skipping Anisette provisioning, per client request.
ADIGetIDMSRouting failed! Error: %@
Looking for Anisette data...
The DSID %@ is not provisioned for Anisette.
ADIOTPRequest failed. Error: %@
Anisette Info: mid - %@ otp - %@
Kicking off Anisette provisioning....
Anisette is already provisioned!
Unable to create start-provisioning URL request!
Start provisioning request failed! Error: %@
Unexpected response class! %@
Start provisioning response code: %@
Start provisioning response body: %@
No SPIM!
Destroying provisioning context.
ADIProvisioningStart failed. Error: %@
ADIProvisioningStart succeeded!
Unable to create end-provisioning URL request!
End provisioning request failed! Error: %@
End provisioning response code: %@
End provisioning response body: %@
No PTM!
No TK!
No routing info!
ADISetIDMSRouting failed! Error: %@
ADIProvisioningEnd failed. Error: %@
ADIProvisioningEnd succeeded!
Client did not provide SIM data!
Resyncing Anisette provisioning data...
Cleaning up ADI session objects...
ADISynchronize failed. Error: %@
ADISynchronize succeeded!
ADIGetIDMSRouting failed with error code: %@
Unable to create sync-provisioning URL request!
Sync provisioning request failed! Error: %@
Sync provisioning response code: %@
No response body for sync request!
Response status details: %@
Unexpected response format under Status key!
Server sync failed! Error Code: %@
Server sync looks like it succeeded.
We've been given new R-Info.
Anisette sync is complete!
Erasing Anisette provisioning data...
Erase failed! Error: %@
Erasing Anisette data succeeded!
Nil value for startProvisioningURL!
Nil value for endProvisioningURL!
Nil value for syncAnisetteURL!
Using QA Anisette DSID.
Using QA2 Anisette DSID.
Using some other non-prod Anisette DSID.
%s (%d) called
No completion block was provided.
Missing parameter altDSID!
Could not find IdMS account with altDSID %@
Could not find heartbeat token for account %@
Could not find emailListURL in URL bag!
Sending request to %@ with headers %@...
Fetch emails request failed: %@
Fetch emails response not of expected class! %@
Fetch emails response completed with HTTP status code: %@
Primary email is missing.
Primary email value has an invalid type: %@
No secondary emails.
Secondary emails array value has an invalid type: %@
Nil altDSID
Fetching new email list prior to update...
Failed to fetch new email list: %@
Unable to refresh because email list is nil/empty.
Updating cached properties for Apple ID accounts with altDSID: %@
Username of account %@ is no longer a valid for altDSID: %@
Updating full list of emails for altDSID %@ to: %@
Saving refreshed account %@...
Could not save updates to %@: %@
Saving of refreshed account %@ succeeed!
Listening for messages from paired device...
Looing for Anisette data on IDS-paired device...
Paired device Anisette info: %@
Unable to obtain Anisette data from IDS-paired device: %@
Preparing message with command %@...
Command message ready for sending to to paired device: %@
IDSService sendMessage method failed. Error: %@
Message is on its way to paired device with transport ID: %@
Preparing reply to %@...
Will send reply message to paired device: %@
IDSService sendMessage method failed to send reply. Error: %@
IDS callback did not provide a message identifier!
Message with transport ID %@ could not be sent! %@
No internal message ID exists for transport ID %@, so we're ignoring the send failure.
Success sending message with Transport ID %@!
Received reply message from paired device: %@
Received command message from paired device: %@
Incoming message lacks a valid AuthKit-assigned UUID. Replying to paired device will not be possible.
Handling command from paired device: %@
Incoming message lacks a valid command.
Unknown command received %@!
Reply message lacks reply-to field.
Unable to find pending completion block under ID: %@
Calling out to pending completion handler for ID %@...
Paired device changed while %@ remote commands were pending.
Acknowledged!
akd is starting up...
akd is shutting down...
Internal access entitlement required but missing!
No altDSID was provided.
No existing IDMS account for altDSID %@
No DSID was provided.
No existing IDMS account for DSID %@
Internal/Private/Write access entitlement required but missing!
Service type %@ is not valid.
Marking service %@ as %@ using account %@.
Global signout.
Removing unusued IDMS account %@...
Failed to remove account %@. Error: %@
Successfully removed account %@.
Failed to update account %@. Error: %@
Successfully updated account %@.
Exception caught: %@
Internal/Private access entitlement required but missing!
Could not find fetchUserInfo in URL bag!
Fetch user info request failed: %@
Fetch user info response not of expected class!
Fetch user info completed with HTTP status code: %@
No body parameters in fetch user info response!
Invalid key %@ in server response: %@
An error occurred fetching user info. Server message: %@
Invalid configurationInfo identifier provided: %@
Could not find configurationInfoURL in URL bag!
Failed to serialize configuration info: %@
Failed to encode configuration info!
Set configuration info request failed: %@
Set configuration info response not of expected class!
Set configuration info completed with HTTP status code: %@
Invalid configurationInfo identifiers type provided: %@
Invalid configurationInfo identifiers provided: %@
Could not find fetchConfigDataURL in URL bag!
Fetch configuration info request failed: %@
Fetch configuration info response not of expected class!
Fetch configuration info completed with HTTP status code: %@
No body parameters in fetch configuration info response!
An error occurred fetching configuration info. Server message: %@
Fetch configuration info completed with keys: %@
Fetching login code
Owner access entitlement required but missing!
Write access entitlement required but missing!
The provided URL response is not formatted as a final auth response.
No Apple ID was provided.
No existing IDMS account for Apple ID: %@
Updating IDMS account %@ with external server auth response...
Unable to update IDMS account %@. Error: %@
Successfully updated IDMS account %@
No GS service tokens to update. Done.
External auth response contains GS service tokens. Will persist those...
Unable to persist GS service tokens. Error: %@
Successfully persisted new GS service tokens.
Asked to validated code: %llu
AuthKit master token is missing! Error: %@
AuthKit account altDSID is missing.
Unable to get master token string value!
Attaching proxied device Anisette data: %@
Attaching proxied device Anisette data.
Validate-code request failed! Error: %@
Vetting validation completed with HTTP status code: %@
No body parameters in code validation response!
Code is valid!
Code is invalid!
An error occurred validating the code. Server message: %@
Internal or private access entitlement required but missing!
A vetting token was not provided.
altDSID was not provided.
Vetting-token validation request is ready to go.
Request to validate vetting token failed! Error: %@
Code validation completed with HTTP status code: %@
Seems like our master token has expired.
Unusual ACAccount with nil username encountered: %@
Unexpected HTTP response code: %@
Server says vetting token is valid.
Server says vetting token is invalid.
Asked about Apple ID: %@
Eligibility check request failed! Error: %@
Eligibility check completed with HTTP status code: %@
No body parameters from eligibility check response!
Asked for check in with IDMS for Apple ID: %@
No IDMS account for Apple ID: %@
Asked to report signout from service %@ for Apple ID: %@
Asked to report signout for all Apple IDs
Internal write access entitlement required but missing!
No IDMS accounts to sign out
Sign out failed for account %@ with error: %@
Sign out succeeded for account %@
The UI Surrogate is finally here!
Requesting clearance to begin auth with context %@...
Cleared to begin auth with context %@!
Nothing to do, since the authenticating context was a UI Surrogate.
Cleared to end auth with context %@.
Current context does not permit non-interactive auth.
Current context permits non-interactive auth.
Canceling auth attempt because the user said so.
All non-interactive auth options failed. Trying interactive auth.
Short lived token found on context, will attempt token upgrade.
Missing identity token
Recovery token renewal will start.
Request to renew recovery token failed! Error: %@
Renewal of recovery token came back with HTTP status code: %@
Server requests remote UI
Short-lived token upgrade failed: %@
Creating new AK account for altDSID: %@
Short-lived token upgrade reported success, but we could not find an Apple ID.
Short-lived token upgrade requires secondary action.
Current context requires interactive auth for Apple ID: %@
Attempt to perform authentication without short-lived token!
Attempt to perform authentication without altDSID!
Could not find tokenUpgrade URL!
Attempting short-lived token upgrade with altDSID %@...
Request failed! Error: %@
Server response is not of expected class!
No body parameters found in server response!
Request completed with HTTP Status Code %@
Short-lived token upgrade request successful!
An error occurred while attempting short-lived token upgrade. Server message: %@
Will attempt silent auth since the context is asking for service tokens.
No IDMS account for %@. Trying lookup by altDSID %@.
No existing IDMS account for %@
Found an existing IDMS account %@
We don't have a CK for %@, so that's that.
Looking for IDMS accounts to suggest using...
Nothing found.
Telling client to ask the user about using Apple ID: %@
Client decision to keep using: %@. Error: %@
Cannot pull up IDMS account without immutable username or altDSID.
No existing IDMS account for %@.
Found an existing IDMS account %@.
No existing IdMS account for altDSID %@
No existing IdMS account for username %@
No usable IDMS account for Apple ID: %@
Attempting CK-based auth with IDMS account %@...
CK-based auth failed: %@
Attempting silent service-token auth with IDMS account %@...
No master token available for silent auth on account %@.
Fetching tokens for service IDs %@ failed! Error: %@
Fetching tokens for service IDs %@ succeeded.
Collecting user credentials...
Username and password already provided by context, but asked to force interactive auth.
Username and password already provided by context. One shot at non-interactive auth.
Context did not provide a username and/or password. Interactive auth not allowed. Stopping right now.
Context did not provide a username and/or password.
No altDSID on context. Nothing to validate.
Last username validation was less than 24 hours ago. Skipping.
Email fetch failed. Skipping validation.
No emails came back from IDMS for altDSID: %@
Username %@ is valid for altDSID: %@
Username %@ is not valid for altDSID: %@. Setting username to %@
Waited for 30s for email list fetch, but nothing happened.
Unable to dismiss UI on client side! Error: %@
User forgot their credentials.
Another attempt at getting basic login info has completed!
User requested a new Apple ID.
User canceled. Aborting auth.
User request client alternate action. Aborting auth.
Something bad happened! %@
Username was not entered.
Password was not entered.
Successfully obtained password. Time for SRP auth.
Asking client to dismiss basic login UI.
Unable to dismiss UI on client side even though auth is complete! Error: %@
Auth attempt %@ has failed. Incrementing counter...
Maximum password auth attempts have been reached.
Attempting to show login error: %@
Creating new AK account for Apple ID: %@
Starting piggybacking session
Looks like we're dealing with an HSA account.
Faking IDMS auth success!
AKSRPContext configureWithParameters returned error: %@
No basic auth URL!
Authentication with server failed! Error: %@
Need Anisette resync...
Anisette resync was successful. Retrying auth...
Anisette resync failed. Error: %@
Need Anisette reprovisioning...
Anisette erase was successful. Retrying auth...
Anisette erase failed. Error: %@
Auth failed but the server says to try a secondary auth action anyway. Let's how this goes...
Success!
Disabling PETs because internal setting is on.
Passing PET, not password.
Providing raw password to an internal client.
Providing PRK to an internal client.
Unable to reach client to call shouldContinueWithAuthenticationResults
Force-failing auth, because client says to.
Failing auth due to verification error: %@
Will continue handling successful auth...
Unable to auth with IDMS but client says to suppress error and continue.
Updating AK account...
Will check in with IDMS about push registration...
Failed to check in with IDMS! Error: %@
Successfully checked in with IDMS.
No service IDs were provided, so AKAuthenticationIDMSTokenKey will be left empty.
Fetching tokens for service IDs %@ failed. Error: %@
Fetching tokens for service IDs %@ succeeded!
We have no token for these services: %@. This can't be good.
Context not appropriate for updating persistent tokens. All done then!
GS service token persistence failed: %@
No AIDA account for altDSID %@ was found. Searching by Apple ID: %@
Creating new AIDA account for Apple ID: %@
Updating AIDA account %@ with properties and tokens.
Failed to save AIDA account! Error: %@
Successfully saved AIDA account.
Updating token for service with ID %@...
GS service token with ID %@ marked as requiring TouchID.
Failed to update token for %@ in keychain. Error: %@
Cannot perform secondary auth action for non-interactive context.
Secondary action server URL is missing
Asking client to show native second-factor UI...
Escape hatch requested! Dismissing second-factor UI...
Unable to dismiss client-side second-factor UI. Error: %@
Asking client to show escape-hatch server UI...
Done handling second-factor login code. Asking client to dismiss that UI...
Failed to get second-factor. Error: %@
Successfully obtained second-factor code: %@.
Asking client to show alert for error: %@
Login code successfully validated! Updating auth tokens...
Server says to show UI at URL key: %@
There was no URL in the bag for key: %@
Could not find an existing AuthKit account, so we can't attach a CK or PRK to server UI requests.
Asking client to show server UI with base URL %@...
Server UI did not complete auth successfully! Error: %@
Asking client to start showing native UI
Server UI-based authentication has been canceled.
Server UI has been skipped.
User elected to try again
Unknown action signal from server UI final response!
Looks like we're done with server UI!
We do not have an initial auth response to update. Creating one now!
Asking client to dismiss any presented server UI...
Successfully handled server UI response!
Failed to retrieve recovery data with error. %@
Failed to fetch idMS completion url from provided info
We determined that we should not be resuming server UI flow at this point.  There is nothing else for us to do here.
Invalid native recovery server response detected: %@
Decoded a PET for iForgot flow
Could not decode a PET for iForgot flow: %@
Failed to unwrap the icsc recovery identity token.
Asked to fetch service token without a serviceID!
Asked to fetch service token without any master token data!
Failed to create AppleIDAuthSupportTokenRef from exteral form. Error: %@
AppleIDAuthSupportCopyAppTokensOptions failed with error: %@
Unable to find info for token with ID: %@
User does not have all their credentials, so we're going to iForgot...
iForgot flow failed! Error: %@
iForgot reported success, but no username came back to akd.
iForgot reported success, but no password came back to akd.
iForgot succeeded, and we have a new auth server response!
iForgot succeeded, but we do not have a new auth server response. Doing SRP auth...
Starting iForgot flow...
iForgot flow was triggered by push notification. Will try to use dedicated URL.
There was no iForgot URL in the bag!
User wants a new Apple ID to auth with...
New Apple ID flow failed! Error: %@
New Apple ID flow reported success, but no username came back to akd.
New Apple ID flow reported success, but no password came back to akd.
New Apple ID flow reported success, but no auth response came back to akd.
New Apple ID creation succeeded, and we have a new auth server response!
Starting Apple ID creation flow...
There was no createAppleID URL in the bag!
Failed to find matching account for context! Error: %@
Change password flow failed! Error: %@
Change password flow reported success, but no username came back to akd.
Change password flow reported success, but no password came back to akd.
Change password flow succeeded, and we have a new auth server response!
Change password flow succeeded, but we do not have a new auth server response. Doing SRP auth...
Starting password change flow...
Could not find URL for changePassword!
Password change flow authentication failed with error, but we'll try anyways: %@
Detected a piggy service type, alias for iCloud
Server auth response did not contain HB token!
Server auth response did not contain CK.
Server auth response did not contain PRK.
Stashing the PRK away for escrowing for account: %@
We got a PRK from the server, but we have no passcode... discarding
Failed to update AuthKit account! Error: %@
Successfully updated AuthKit account.
We are running in recovery. Skip ACAccount update.
This auth is ephemeral. Skip ACAccount update.
This is a proxy auth. Skip ACAccount update.
Starting to teardown follow ups
Initiating a piggybacking flow for transaction id: %@
Handshake code prompt finished
Handshake request failed with error: %@
Handshake request finished
Waiting for handshake condition with state: %@ - %@ - %d - %d
Finished waiting for handshake condition with state: %@ - %@ - %d - %d
Code entered, but no handshake has been completed
Starting to process handshake results
We got results, finish the flow
User elected to escape before handshake completed
We did not capture a code, completing with escape results
Handshake failed with error: %@
Code collected, starting to wait for: %@
Piggybacking completion with final process response: %@ - %@
Clearing requesting controller state
User entered a new code after verificaiton failure
User succesfully escaped after verification failure
User escaped with erro after verification failure
We failed to handle verification, passing through the failure
Starting to process request message
Requesting session indicated that we are DONE
Passing duplex session
Duplex session creation failure
Attempting to determine whether we should continue.
Should continue came back with error: %@
Should continue: %d
Initializing requesting session: %@
Using a previously cached code or error: %@ - %@
Validating Code: %@
Login code validated
Code validated with result: %d - %@
Prompting user for piggybacking code
Secret collection failed with error: %@
User wants to continue using current piggybacking session
Captured code: %@ - %@
Invalid token string! %@
Error: Got malformed GS token data!
Nil value for expected header: %@
Unable to serialized token properties! Error: %@
Unable to get Anisette data for %@! Error: %@
Denied access to Anisette data to non-internal client.
Invalid target %@ for fetching Anisette data.
Invalid target %@ for fetching legacy Anisette data.
Client lacks entitlement to provision Anisette!
Invalid target %@ for provisioning Anisette data.
Client lacks entitlement to resync Anisette info!
Invalid target %@ for resyncing Anisette data.
Client lacks entitlement to erase Anisette provisioning!
Invalid target %@ for erasing Anisette data.
Failed to generate a Follow Up request with error: %@
Failed to sync follow ups due to authentication error, attempting to refresh tokens and retrying
Attempting to refresh follow ups with request: %@
Follow Up request failed with error: %@
Follow Up request completed with HTTP status code: %@
Auth Failure
No body parameters in Follow Up response!
Unable to call back to client! Error: %@
Could not dismiss UI! Error: %@
Request to show server UI came back with error: %@
Unable to tear down server UI! Error: %@
Native recovery failed! Error: %@
Unable to tear down native recovery UI! Error: %@
Whoa! UI surrogate is checking in with an unexpected identifier %@. Waiting for %@...
UI Surrogate %@ is checking in.
Whoa! UI surrogate is checking out with an unexpected identifier %@. Expecting %@...
UI Surrogate %@ is checking out.
In Sync Bubble. UI is not supported.
Context %@ has AKAppleIDAuthenticationUICapabilityUnknown.
Allowing BG process %@ to perform proxied FG auth.
Background auth...
UI surrogate %@ already registered.
No registered UI surrogate yet.
Unable to fulfill BG UI request because we already have one in the works.
Redirecting to Settings is not permitted for this call.
Unable to launch Settings!
Failed to prompt for Settings redirect: %@
User canceled Settings redirect.
Taking user to Settings/System Preferences for auth UI...
Surrogate bring up failed! Error: %@
Waiting for UI surrogate to check in...
Client %@ is being permitted to run FG auth, because iCloud settings are inaccessible.
Client %@ is not permitted to use _isProxyingForApp. Falling back to BG behavior.
Client %@ cannot proxy without specifying an immutable Apple ID.
Ignoring FG proxying request because %@ is not currently foreground.
State of app %@: %d.
Will not prompt user about redirect per auth context configuration.
Client %{public}@ requested authentication (via %{public}@).
Client %{public}@ requested authentication.
Invalid Apple ID service type %@. Falling back to iCloud.
Overriding Settings landing spot because the Apple ID %@ is used for iCloud.
Opening internal URL: %@
authkit/check-in
Performing liveness check-in with account: %@
Liveness check-in failed for account %@ with error: %@
Liveness check-in succeeded for account %@.
authkit/sign-out
Reporting global signout to IDMS for %@
Reporting signout for service %@ with account %@
Invalid service %@ for reporting
Check in request body: %@
Check-in request failed! Error: %@
Check-in completed with HTTP status code: %@
No push token available for check-in!
Posting active services as: %@
Missing username, trying to fetch one via idMS account
Matching account missing, there be dragons ahead!
Using idMS account username
Error communicating with client anisette service: %@
Resuming XPC listener for Mach service %@...
Fatal error! Unknown XPC listener: %@
Lockscreen state: %@ 
Checking lock state
We are running in recovery. Leaving IDS alone.
We are running in the sync bubble. Leaving IDS alone.
Notified of language change. Will exit when all clear.
Client %@ lacks a bundle ID!
Auth has ended with an error. Skipping queued context update.
No bundle ID was provided!
Passing password down to next queued client.
We are running in recovery. Leaving APS alone.
We are running in the sync bubble. Leaving APS alone.
Push service starting...
AKAppleIDPushHelperService has already established a connection to APS!
Server did not provide a valid APS environment. Falling back to prod.
Registering for XPC activity: %s...
XPC activity says that it's time run the liveness check-ins!
XPC activity registration complete. State: %@.
Push service started
Will query delegates of intent to show notification
Did notify delegates of intent to show notification, suppression elected: %@
Will ask delegates to process push payload
Did ask delegates to process push payload
Current device has not been unlocked since last check-in. Skipping!
We do not have any IDMS accounts to check in with.
Server is not providing an APS env override.
Current APS env matches server preference. %@
Active APS env (%@) does not match server-requested env (%@).
The server requested env (%@) is not valid!
Shutting down APS connection with env %@...
Starting new APS connection with env %@...
Shutting down APS connection...
APNS status changed: %d
APNS reconnected
APS says we have a new public token! %@
akd/received-push-message
Received push message: %@. Contents: %@
Push message is not for the IDMS topic. Ignoring!
Invalid value for key %@ in push message: %@
Push message has invalid command %@. Ignoring!
Push message is missing a transaction ID. Ignoring!
Push message is for an unknown altDSID: %@
Push message is for an altDSID not signed in to iCloud: %@
Suppressing repair push for non-primary account
Current device is not passcode protected. Ignoring!
Current device does not have a PRK. Ignoring!
Handling push with command AKPushMessageCommandUpdateAccountInfoCache...
Received push command to refresh AKURLBag
Processing a supressed command, tearing down previous HSA2 alerts
Incoming message alert suppressed
Showing alert for command %@.
Notification torn down by server!
User dimissed notification. Nothing further to do.
alert parameters are not valid: %@
No action to be done for push command %@.
Processed all known commands, notifying delegates
Will notify IDMS about teardown response...
No URL to notify IDMS of user response!
Failed to notify server about teardown reuest. Error: %@
HTTP status code of server response to notification of user response: %@
Trying to generate login code now for %@...
Failed to generate login code. Error: %@
Will display login code notification...
Will display piggy notification...
Tearing down login notification
Failed to create login code notification!
Dismissed code notification.
Unable to create CFUserNotificationRef!
Will take user to trusted device list in Settings...
Will take user to password-reset flow in Settings for %@...
Matched an iCloud account %@ to deliver push
Unable to match an account for password reset flow
Using the following URL for iForgot redirect: %@
Will take user to change password flow in Settings...
Using the following URL for change password redirect: %@
Beginning reverse geocode...
Reverse geocode callback called
Reverse geocode results: (Locality: %@ - Administrative Area: %@)
locationName = "%@"
Will tear down notification with ID: %@
Will display user notification...
Prompting user if if they want to change their password
Failed to create password change notification!
Suppressing password change prompt due to missing PRK
Notification responded: %@
HSA2 repair required: %@
Suppressing piggybacking for non-primary iCloud accounts
Server ID check: %@ vs %@
Suppressed payload: %@
Suppressing the circle error payload
We received a reply
Processed a pending reply with payload: %@
Starting an accepting session with payload: %@
Failed to get a controller
Accepting session is finished, with error: %@
Orphaned payload: %@
Processing pending reply!
Starting circle request with context: %@
Populating push token
Failed to populate push token
Circle request failed with error. %@
Starting circle operation
Waiting for reply with timeout: %f
Waiting... %@ - (%@) - %@ - %@
Waiting...
Wait condition met... %@ - (%@) - %@ - %@
Notifying the other side that we're really done
^@@(#)PROGRAM:akd  PROJECT:AuthKit-1
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleExecutable</key>
<string>akd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.akd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>akd</string>
<key>CFBundlePackageType</key>
<string>APPL</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleVersion</key>
<string>1.0</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>adi-client</key>
<string>572356293</string>
<key>application-identifier</key>
<string>FAKETEAMID.</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
<string>identity</string>
</array>
<key>com.apple.accounts.idms.fullaccess</key>
<true/>
<key>com.apple.authkit.client.internal</key>
<true/>
<key>com.apple.keystore.lockassertion</key>
<true/>
<key>com.apple.nano.nanoregistry</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.anisette</string>
</array>
<key>com.apple.private.keychain.circle.join</key>
<true/>
<key>com.apple.private.notificationcenter-system</key>
<array>
<dict>
<key>identifier</key>
<string>com.apple.AuthKit</string>
</dict>
</array>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.symptom_diagnostics.report</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
</array>
<key>keychain-cloud-circle</key>
<true/>
</dict>
</plist>
