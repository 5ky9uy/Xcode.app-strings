init
class
isKindOfClass:
isEqualToAbstraction:
initWithBinaryUnarchiver:
encodeWithBinaryArchiver:
didFinishEncodingWithBinaryArchiver:
didFinishDecodingWithBinaryUnarchiver:
cStringClassNameForBinaryArchiver:
decodeWithBinaryUnarchiver:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
numberOfDrawableInstances
constraintInDocument
makeRepresentingConstraintWithProvider:
priority
alloc
initWithLayoutConstraintBetweenViewsInDocument:
addObject:
ib_canMapDirectlyToIBLayoutConstraint
ib_populateLayoutConstraintAbstractions:fromConstraintBetweenViewsInDocument:
ib_UUIDString
initWithIdentifier:marshallableObjectPackage:arbitrationUnit:view:orientationMask:
initWithIdentifier:marshallableObjectPackage:arbitrationUnit:
decodeInteger
decodeObjectReference
encodeInteger:
encodeObjectReference:
mutableCopy
view
appendFormat:
orientationMask
requestWithMarshallableObjectPackage:arbitrationUnit:view:orientationMask:
.cxx_destruct
_view
_orientationMask
copy
initWithAmbiguousViewsToAmbiguityStatus:constraintAbstractionsAffectingLayout:inequalityConstraintsResolvingAmbiguity:contentSizePriorityChangesResolvingAmbiguity:orientationMask:
decodeObject
ambiguousViewsToAmbiguityStatus
encodeObject:
constraintAbstractionsAffectingLayout
inequalityConstraintsResolvingAmbiguity
contentSizePriorityChangesResolvingAmbiguity
count
isEqualToAmbiguityGroup:
enumerateKeysAndObjectsUsingBlock:
objectForKey:
orderedSetWithSet:
objectAtIndex:
dictionary
setObject:forKey:
allValues
setWithArray:
countByEnumeratingWithState:objects:count:
userInterfaceLayoutDirection
satisfiabilityStateAccordingToFrameworkMetricsWithLayoutDirection:substitutingConstant:returningCurrentCanvasConstant:differenceBetweenDeclaredConstantAndCurrentCanvasConstant:context:
removeObject:
isMissingConstraints
enumerateAmbiguousViewsUsingBlock:
hasAmbiguousScrollableContentWidth
hasAmbiguousScrollableContentHeight
ib_dictionaryByApplyingFilterToKeys:
initWithAmbiguousViewsToAmbiguityStatus:constraintAbstractionsAffectingLayout:orientationMask:
isHorizontal
isVertical
ambiguityStatusForView:
setsOfNonRequiredConstraintAbstractionsWithEqualPrioritiesUsingLayoutInfo:
viewsCompletelyMissingConstraintsForSomeVariables
viewsWithScrollableContentSizeAmbiguity
ambiguityGroupByRemovingReferencesToItem:
_ambiguousViewsToAmbiguityStatus
_constraintAbstractionsAffectingLayout
_inequalityConstraintsResolvingAmbiguity
_contentSizePriorityChangesResolvingAmbiguity
initWithResultPhase:postProcessingBlock:
setRequestPhase:
requiresSynchronousResultProcessing
exceptionWithName:reason:userInfo:
raise
decodeUnsignedInteger
initWithView:ambiguityStatusMask:
ambiguityStatusMask
encodeUnsignedInteger:
isEqualToAmbiguityStatus:
stringWithFormat:
hasAmbiguousHorizontalPosition
hasAmbiguousVerticalPosition
hasAmbiguousHorizontalSize
hasAmbiguousVerticalSize
isUninitialized
appendString:
hasAmbiguousPositionInOrientation:
hasAmbiguousSizeInOrientation:
hasAmbiguousScrollableContentSizeInOrientation:
isMissingHorizontalPositionConstraint
isMissingVerticalPositionConstraint
isMissingHorizontalSizeConstraint
isMissingVerticalSizeConstraint
isMissingScrollableContentWidthConstraint
isMissingScrollableContentHeightConstraint
ambiguityStatusBySettingUninitialized:
isAmbiguous
isAmbiguousExcludingUninitialized
hasAmbiguousPosition
hasAmbiguousSize
hasAmbiguityInOrientation:
_ambiguityStatusMask
initWithMutableLayoutEngine:
arbitrateWithOptions:
allowsResizingTopLevelView
engine
layoutInfo
setWithObjects:
candidateLayoutConstraintsForDescendants:ofView:layoutInfo:layoutEngine:withOptions:
containsObject:
topMostView
scoringClass
realViewsOrderedBreadthFirst
ibWindowForArbitration
domain
code
errorWithDomain:code:userInfo:
ambiguityIsAccurateForView:
viewRequiresUnconditionalGenerationOfCandidates:additionalViewsRequiringFullArbitration:reason:
hasAmbiguousLayoutForView:
hasMismatchedFrameOrBoundsSizeForView:expectedFrameOrBounds:actualFrameOrBounds:
viewIsTopMostInEngine:
ibLayoutBounds
ibLayoutFrame
parentOfObject:
ibExternalExplicitTranslatesAutoresizingMaskIntoConstraints
viewShouldUseConstraintsInsteadOfAutoresizing:
viewWithSuperviewOwnedLayoutAllowsSizingConstraints:
viewDerivesInternalConstraintsBasedUponInitialFrameSize:
viewHasAmbiguousLayoutOrIncorrectFrame:additionalViewsRequiringFullArbitration:reasonString:
candidateConstraintGenerationTypeForView:
mapTableWithKeyOptions:valueOptions:
orderedSet
containingView
effectiveMutuallyExclusiveConstraintBreakageStrategyForStrategy:
attemptToAddConstraint:toView:returningConstraintsMakingSystemOverConstrained:
allObjects
sortedArrayUsingComparator:
canConsiderRemovalOfOverConstrainingConstraint:
ib_arrayByFilteringUsingBlock:
firstObject
removeConstraint:
ib_addObject:toSetForKey:
minusSet:
addConstraint:toView:
constraintsMakingSystemOverConstrainedBySettingLayoutFrame:ofView:
attemptToAddConstraint:byModifyingLayoutEngine:mutuallyExclusiveConstraintBreakageStrategy:mutableConstraintsToAdd:mutableConstraintsToRemove:
array
firstAttribute
sortUsingComparator:
ib_arrayByReversingObjects
attemptToAddConstraint:
ibSupportsLayoutMargins
viewPrefersMarginRelativeConstraints:
generateCandidateConstraintsForView:withOptions:
addApplicableCandidateConstraints:forView:
setScoringClass:
arbitrationUnit
firstValidConstraintItemAncestorOfObject:
addTemporaryExplicitConstraintsForView:
unionSet:
addApplicableCandidatePositionAndSizeConstraintsForView:
addTemporaryConstraintsToAmbiguousAncestorsIfWhitelisted:
addExplicitSizeConstraintsForView:
viewsNeedingContinuedArbitrationMappedToReasonString
dictionaryWithObjects:forKeys:count:
mutuallyExclusiveConstraintsRemovedDuringBootstrapping
setConstant:ofConstraint:
shouldIntegralize
setShouldIntegralize:
_updateUnsatisfiedConstraintConstantsIfNeeded
viewsNeedingConstraintsByTypeWithAdditionalViewsRequiringFullArbitration:
logArbitrationFailureAndReturnMessageForReason:
attemptToAddApplicableCandidateConstraintsForViews:forGenerationType:
ibFallbackViewsForCandidateConstraintGenerationForFailedArbitration
candidateRedundantConstraints
ib_collectionByRemovingObjectsInSet:
canConsiderRemovalOfRedundantConstraint:
boolValue
constraintWasInDocumentBeforeArbitration:
constraintIsRedundant:
ib_removeObjectsFromCollection:
allRealConstraintsIncludingThoseRemovedDuringBootstrapping
unsignedIntegerValue
verifyAllRealViewsHaveWindow:
addApplicableCandidateConstraints:
resolveMutuallyExclusiveConstraintsRemovedDuringEngineBootstrapping
removeRedundantConstraintsWithOptions:
removeTemporaryConstraintsForAncestorsOfWhitelistedViews
constraintsToRemove
ib_setByIntersectingSet:
constraintsToAdd
intersectSet:
initWithConstraintsToAdd:constraintsToRemove:
initWithError:engineDescription:
arbitrateConstraintsByModifyingLayoutEngine:options:
attemptToSetLayoutFrame:ofView:byModifyingLayoutEngine:mutuallyExclusiveConstraintBreakageStrategy:mutableConstraintsToAdd:mutableConstraintsToRemove:
setConstraintsToRemove:
setConstraintsToAdd:
_constraintBreakageStrategy
_viewsThatHaveHadCandidatesUnconditionallyGeneratedAtLeastOnce
_temporaryConstraintsForAncestorsOfWhitelistedViews
_viewsWithAddedTemporaryExplicitConstraints
_viewsWithGeneratedCandidateConstraints
_constraintsInDocumentBeforeArbitration
_viewWhitelistForArbitration
_constraintsToRemove
_constraintsToAdd
_arbitrationPerformanceMetric
_updateUnsatisfiedConstraintConstants
_engine
initWithIdentifier:marshallableObjectPackage:arbitrationUnit:arbitrationOptions:
arbitrationOptions
requestWithMarshallableObjectPackage:arbitrationUnit:arbitrationOptions:
_arbitrationOptions
initWithObject:keyPath:resultPhase:postProcessingBlock:
object
setObject:
keyPath
setKeyPath:
_object
_keyPath
postProcessingBlock
processResult:orError:
requestPhase
resultPhase
_postProcessingBlock
_requestPhase
_resultPhase
unarchiveObjectWithData:
archivedDataWithRootObject:
error
isErrorResult
engineDescription
_error
_engineDescription
isEqualToString:
integerValue
initWithRootObject:layoutInfo:
registerArbitrationUnit:
currentObjectTranslationDelegate
objectRepresentationForObject:
sparseAutolayoutInfoForArbitrationUnit:objectTransformationBlock:
objects
ib_uniqueObjects
rootObject
stringByAppendingFormat:
orderedChildrenOfObject:
ibSubtreeDescriptionWithLayoutInfo:withIteratorBlock:startingIndentation:andAdditionalDescriptionsBlock:
_firstAncestorOfObject:passingPredicate:
ibIsValidConstraintItem
arrayWithObject:
removeObjectAtIndex:
updateObjectsOrderedBreadthFirst
isEqualToSet:
ibWillArbitrateChild:inArbitrationUnit:
ibWillArbitrateInArbitrationUnit:
childrenOfObject:
_recursiveDispatchWillArbitrateMessageToObject:parent:
_dispatchWillArbitrateMessageToObjectsInUnit
runArbitrationWithOptions:
autolayoutEngineClass
initWithArbitrationUnit:options:
computeStatusFromEngine:
computeViewToLayoutFramesFromEngine:
numberWithUnsignedInteger:
_captureAmbiguityStatusByViewForViews:fromEngine:
relation
setRelation:
_ambiguityWasResolvedForAtLeastOneViewInGroupOfAmbiguousViews:givenOriginalAmbiguityStatusMasksByView:orientationMask:engine:
anyObject
ibShadowedHorizontalContentCompressionResistancePriority
ibShadowedVerticalContentCompressionResistancePriority
ibShadowedHorizontalContentHuggingPriority
ibShadowedVerticalContentHuggingPriority
intrinsicContentSizeForView:
setContentHuggingPriority:onRepresentationOfView:forOrientation:
initWithView:type:priority:
setContentCompressionResistancePriority:onRepresentationOfView:forOrientation:
constraintAbstractionsAffectingLayoutOfView:forOrientation:
ib_addObjects:toSetForKey:
_addConstraintsAffectingLayoutToDictionaryMappingGroupsToConstraints:forAmbiguityViewGroups:forOrientationMask:engine:
exerciseAmbiguityInLayoutForView:
_findAffectingConstraintsByGroupFromAmbiguousViewGroups:andAmbiguousViewsToAmbiguityStatus:forOrientationMask:engine:
_findInequalityConstraintsResolvingAmbiguityFromGroupOfAmbiguousViews:constraintAbstractionsAffectingLayout:forOrientationMask:engine:
_findContentSizePriorityChangesResolvingAmbiguityFromGroupOfAmbiguousViews:forOrientationMask:engine:
_addAmbiguityStatusGroupsToSet:fromAmbiguousViewGroups:andAmbiguousViewsToAmbiguityStatus:forOrientationMask:engine:
layoutBoundsForView:
removeAllObjects
layoutFrameForView:inCoordinateSpaceOfView:
candidateConstraintForDescendant:withLayoutBounds:andLayoutFrameInCoordinateSpaceOfAncestor:ancestorView:ancestorLayoutBounds:attribute:layoutInfo:scoringClass:
setContainingView:
_ambiguityWasResolvedForView:inOrientation:givenOriginalAmbiguityStatusMasksByView:engine:
dictionaryWithDictionary:
_populateMutableConstraintsToFixAmbiguityForSinglePass:toFixAmbiguityForView:inOrientation:shouldAddConstraintsToFixScrollableContentSize:engine:
_determineAndAddAmbiguityGroupingForView:relativeToView:toMutableAmbiguousViewGroupsByView:inOrientation:givenAmbiguityStatusMasksByViewAtBeginningOfPass:engine:
orderedSetWithObjects:
objectsOrderedBreadthFirst
initAsEngineSpacerItemWithInitialLayoutFrame:
removeFromSuperview
addSubview:
ibBaselineAtIndex:inCoordinateSpaceOfItem:
ibIsBaselineAtIndex:inMotionWithKnob:
ibSupportsFirstBaseline
ibLayoutMargins
alignmentRectForFrame:
setFrameSize:
ibEffectiveWindowForConversions
ibEffectiveRootCoordinateSystemForConversions
ib_convertPoint:fromItem:
ib_convertPoint:toItem:
ib_convertSize:fromItem:
ib_convertSize:toItem:
ib_convertRect:fromItem:
ib_convertRect:toItem:
ib_convertInset:toItem:
ib_convertInset:fromItem:
ib_convertRectEdge:toItem:
ib_convertRectEdge:fromItem:
ib_convertKnobPosition:toItem:
ib_convertKnobPosition:fromItem:
convertPoint:fromView:
convertPoint:toView:
convertSize:fromView:
convertSize:toView:
convertRect:fromView:
convertRect:toView:
convertInset:toView:
convertInset:fromView:
convertRectEdge:toView:
convertRectEdge:fromView:
convertKnobPosition:toView:
convertKnobPosition:fromView:
addConstraint:
addConstraints:
removeConstraints:
contentHuggingPriorityForOrientation:
setContentHuggingPriority:forOrientation:
contentCompressionResistancePriorityForOrientation:
setContentCompressionResistancePriority:forOrientation:
ib_hasAmbiguousLayout
constraintsAffectingLayoutForOrientation:
exerciseAmbiguityInLayout
setNeedsUpdateConstraints
ibInvalidateAutoresizingMaskConstraints
ibBoundsForLayoutBounds:
ibFrameForLayoutFrame:
ibLayoutFrameForFrame:
ibViewForAncestorViewEdgeMovementQuestionsOfSubview:
ibShouldConsiderGuidesToEdgeWithAttribute:fromEdgeWithAttribute:ofSelectedItems:
ibAllowsSiblingGuidesToSelectedItems:ofType:
ibAllowedSiblingEdgesForGuidesToSelectedItems:
ibNextAncestorItemForFindingReferencingConstraintsInLayoutInfo:
ibShouldIgnoreScrollableContentWidthAmbiguityForRepresentationOfItem:inEngine:
ibShouldIgnoreScrollableContentHeightAmbiguityForRepresentationOfItem:inEngine:
ibAmbiguityStatusForRepresentationOfItem:inEngine:
ibEffectiveItemForRuntimeConstraintAdjustingConstant:attribute:orConstraintClassIfNeeded:context:
ibDidCreateRuntimeConstraint:referencingItem:context:
ibParentItem
ibChildItemsEligibleForNearestNeighborConstraints
superview
subviews
window
frame
setFrame:
bounds
translatesAutoresizingMaskIntoConstraints
setTranslatesAutoresizingMaskIntoConstraints:
ibLayoutInset
intrinsicContentSize
isFlipped
baselineOffsetFromBottom
ibShadowedFirstBaselineOffsetFromTop
ibBaselineCount
constraints
setIbLayoutFrame:
ibLayoutFrameworkBounds
ibCandidateConstraints
setIbCandidateConstraints:
ibInstalledConstraints
setIbInstalledConstraints:
ibInstalledConstraintsWithInstalledAncestors
ibTurnedOnButPossiblyUninstalledConstraints
setIbTurnedOnButPossiblyUninstalledConstraints:
ibCandidateReferencingConstraints
ibInstalledReferencingConstraints
ibTurnedOnButPossiblyUninstalledReferencingConstraints
setIbExternalExplicitTranslatesAutoresizingMaskIntoConstraints:
ibExternalEffectiveTranslatesAutoresizingMaskIntoConstraints
setIbShadowedHorizontalContentHuggingPriority:
setIbShadowedVerticalContentHuggingPriority:
setIbShadowedHorizontalContentCompressionResistancePriority:
setIbShadowedVerticalContentCompressionResistancePriority:
ibFrameDecideDuringStatusUpdate
ibCanFrameDecideEvenWhenAmbiguousForNextStatusUpdate
setIbCanFrameDecideEvenWhenAmbiguousForNextStatusUpdate:
ibIsSelfManagedContainerInEngine
ibIgnoreNearestNeighborProximityThreshold
allKeys
_viewsOrderedBreadthFirstSearchIncludedInSet:
_ambiguousViewGroupsByViewForOrientation:ambiguousViewsToAmbiguityStatus:ambiguousViewsOrderedAnscestorToChild:engine:originalAmbiguityStatusMasksByView:
ib_uniqueValues
_ambiguityStatusGroupsFromHorizontalAmbiguousViewGroups:verticalAmbiguousViewGroups:ambiguousViewsToAmbiguityStatus:engine:
ib_objectsConformingToProtocol:
viewCanHaveUninitializedAutolayoutAmbiguityStatus:
viewHasCandidateReferencingConstraints:
_makeAmbiguityGroupForAmbiguityStatus:orientationMask:
layoutFrameForView:
ib_valueWithRect:
attemptToAddConstraint:toView:returningConstraintAbstractionsMakingSystemOverConstrained:
intersectsSet:
initWithView:expectedLayoutFrameOrBounds:actualLayoutFrameOrBounds:
viewDerivesDesignTimeDefaultIntrinsicContentSize:
_ambiguityStatusGroupsFromAmbiguousViewsToAmbiguityStatus:engine:
_updateUninitializedAmbiguityStatusForMutableEffectiveAmbiguousViewStatusGroups:
computeViewToLayoutFramesWithDerivedDesignTimeDefaultIntrinsicContentSizes
removeObjectForKey:
ib_rectValue
initWithConflictingConstraintSets:ambiguousViewStatusGroups:misplacedViewsToMisplacementStatus:viewsToLayoutFrames:frameDecidedItems:
constraintsAffectingLayoutOfView:forOrientations:inEngine:
doesChangingPriorityOfConstraint:to:preventClippingContentOfView:inEngine:
setPriority:
evaluatedConstantOfConstraint:
numberWithDouble:
ib_arrayByApplyingBlock:
arbitrationUnitForObject:withLayoutInfo:
arbitrationUnitsForObjects:withLayoutInfo:
arbitrationUnitsAtAndBelowObject:withLayoutInfo:
arbitrationUnitsAtAndBelowObjects:withLayoutInfo:
allArbitrationUnitsForLayoutInfo:
topMostObjectOfClass:inLineageToArbitrationUnitRootContainingObject:withLayoutInfo:
firstAncestorOfObject:ofClass:
computeStatus
constraintsAffectingLayoutOfView:forOrientations:
doesChangingPriorityOfConstraint:to:preventClippingContentOfView:
engineEvaluatedConstantValuesOfConstraints:error:
_objects
_objectsOrderedBreadthFirst
_rootObject
_layoutInfo
arrayWithObjects:count:
addEntriesFromDictionary:
ib_anyObjectsPassTest:
ib_setByFilteringUsingBlock:
firstItem
secondItem
constant
value
isAbsolute
contentType
secondAttribute
constraintByReversingFirstAndSecondItem
constantBySettingValueToValue:
setConstant:
standardUserDefaults
setInteger:forKey:
explicitSizingConstraintsAreContainedByTheAffectedView
containingViewForExplicitSizingConstraintsOfView:layoutInfo:
valueForView:inCoordinateSpaceOfView:
attribute
relativeTo
relativeAttribute
initWithFirstItem:firstAttribute:relation:secondItem:secondAttribute:constant:
exactlyMatchesView:withConstantInCoordinateSpaceOfView:userInterfaceLayoutDirection:
layoutConstraintForDescendant:ofView:andLayoutGuideMatch:layoutInfo:withOptions:
isInstallable
symbolicValue
layoutConstantClass
initWithValue:
initWithItem:attribute:constant:
candidateExplicitSizeConstraintForDescendant:withBounds:attribute:layoutInfo:
numberWithInteger:
candidateConstraintForDescendant:ofView:attribute:layoutInfo:scoringClass:
ibExplicitCandidateConstraintGenerationMaskForChildView:
viewPrefersToHorizontallyResizeWithContainer:
viewPrefersToVerticallyResizeWithContainer:
candidateExplicitConstraintForDescendant:ofView:attribute:layoutInfo:
explicitConstraintGenerationStrategy
initWithLayoutInfo:
initWithCoordinateSpaceView:delegate:
generateGuidesForRootedView:optionsMask:
layoutGuideMatches
_candidateLayoutConstraintsForExactMatchesForDescendants:ofView:layoutGuideMatches:returningMatchedGuideMatches:returningMatchedViews:layoutInfo:layoutEngine:withOptions:
enumerateNearestNeighborsForItem:attribute:marginRelativeToContainer:layoutInfo:withBlock:
doubleValue
candidateVerticalSpacingConstraintBetweenDescendant:andDescendant:ofView:layoutInfo:
candidateHorizontalSpacingConstraintBetweenDescendant:andDescendant:ofView:layoutInfo:
_candidateLayoutConstraintForNearestNeighbor:nearestNeighborIsContainer:ofItem:attribute:marginRelativeToContainer:descendantOfItem:layoutInfo:
nearestNeighborForView:attribute:marginRelativeToContainer:layoutInfo:threshold:returningIsContainer:returningNearestNeighborAttribute:
candidateExplicitConstraintsForDescendants:ofView:layoutInfo:withOptions:
_candidateLayoutConstraintsUsingLayoutGuideGeneratorForDescendants:ofView:layoutInfo:layoutEngine:withOptions:
_candidateLayoutConstraintsToNearestNeighborsForDescendants:ofView:marginRelativeToContainer:layoutInfo:layoutEngine:withOptions:
constraintsWithVisualFormat:options:metrics:views:layoutInfo:
defaultContainingViewForConstraint:layoutInfo:
constraintsWithVisualFormat:options:metrics:views:overridingContainingItem:scoringClass:layoutInfo:
addObjectsFromArray:
determineComponentsForHorizontalSpacingConstraintBetweenDescendant:andDescendant:ofView:layoutInfo:returningLeadingItem:trailingItem:constant:
determineComponentsForVerticalSpacingConstraintBetweenDescendant:andDescendant:ofView:layoutInfo:returningTopItem:bottomItem:constant:
initialize
setExplicitConstraintGenerationStrategy:
candidateLayoutConstraintForNearestNeighbor:ofItem:attribute:marginRelativeToContainer:descendantOfItem:layoutInfo:
constraintsWithVisualFormatViews:overridingContainingItem:layoutInfo:formatsAndOptionsAndMetricsAndScoringClasses:
initWithIdentifier:marshallableObjectPackage:arbitrationUnit:constraint:priority:view:
decodeCGFloat
encodeCGFloat:
constraint
requestWithMarshallableObjectPackage:arbitrationUnit:constraint:priority:view:
_constraint
_priority
length
substringToIndex:
lowercaseString
stringByReplacingCharactersInRange:withString:
stringByReplacingOccurrencesOfString:withString:
componentsSeparatedByString:
string
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
bundleForClass:
inferredScoringType
initWithIdentifier:marshallableObjectPackage:arbitrationUnit:constraints:
requestWithMarshallableObjectPackage:arbitrationUnit:constraints:
_constraints
valueWithBytes:objCType:
getValue:
lineValue
valueWithLine:
initWithCapacity:
indexSet
constraintDrawablesForConstraintAbstraction:constraintsByAbstraction:constantsByConstraint:
movementPriority
addIndex:
shouldAlwaysDrawGuideLinesIfNeeded
addIndexes:
moveDrawablesToAvoidOverlapping:givenMoveableDrawableIndexes:movingToAvoidDrawablesAtIndexes:insettingToAvoidDrawablesAtIndexes:
determineConstraintDrawableGuideLines:maxGuideLineCount:forDrawables:givenMovedDrawableIndexes:
supportsInsettingToAvoidOtherDrawablesOrGuidelines
line
rectForGuideLine:
setLine:
constraintDrawableOrderingComparator
sortWithOptions:usingComparator:
ib_addObject:toArrayForKey:
setArray:
drawingDestination
layoutRectInOverlayCoordinatesForConstraintItem:
constraintOverlayView
valueOfAttribute:forView:inCoordinateSpaceOfView:withUserInterfaceLayoutDirection:
geometricDescriptionInCoordinateSpaceOfView:userInterfaceLayoutDirection:
colorSpecifier
constraintColor
initWithConstraint:line:type:color:movementPriority:
edgeBiasForLayoutAttribute:
setEdgeBias:
_adjustConstraintDrawableLineForIllegalStates:forConstraint:attribute:
initWithConstraint:line:type:color:movementPriority:leftOrBottomEdge:rightOrTopEdge:
setShouldAlwaysDrawGuideLinesIfNeeded:
absoluteGeometricDescriptionInCoordinateSpaceOfView:userInterfaceLayoutDirection:ofItem:attribute:
setRepresentingSizeAttribute:
concreteConstraintProvider
absoluteConstraintDrawableForConstraint:item:attribute:
relativeConstraintDrawableForConstraint:
_configureDrawable:atIndex:asPrimaryDrawable:forAbstraction:representingConstraint:engineEvaluatedConstant:
numberWithUnsignedInt:
setConstraint:
constraintStatusProvider
isSelectedConstraint:
setSelected:
isSelectableConstraint:
setSelectable:
setDashed:
_configureBasePropertiesForDrawable:forAbstraction:representingConstraint:
autolayoutStatus
isViewMisplaced:
isViewAmbiguous:
isConflictingConstraintAbstraction:
_configureBadgeForDrawable:atIndex:asPrimaryDrawable:forAbstraction:representingConstraint:isConflicting:isAmbiguous:isMisplaced:misplacementDelta:
_insetDrawableToAvoidResizeKnobsIfNecessary:
_configureNonBadgeAutolayoutStatusForDrawable:atIndex:forAbstraction:representingConstraint:isConflicting:isAmbiguous:isMisplaced:misplacementDelta:
defaultDrawableTintColorForAbstraction:atIndex:isConflicting:isAmbiguous:isMisplaced:
conflictingConstraintsColor
ambiguousConstraintsColor
misplacedConstraintsColor
isPlaceholder
placeholderConstraintsColor
isSelectable
isSelected
badgeImageForConflictingConstraint:drawSelected:returningBadgeSize:badgeInset:
setBadgeImage:
setBadgeSize:
setBadgeDrawingInset:
badgeImageForAmbiguousConstraint:drawSelected:constantDelta:returningBadgeSize:badgeInset:
badgeImageForMisplacedConstraint:drawSelected:constantDelta:returningBadgeSize:badgeInset:
badgeImageForAspectRatioConstraint:drawSelected:attribute:returningBadgeSize:badgeInset:
greaterThanOrEqualToBadge
lessThanOrEqualToBadge
equalSizeBadge
effectiveDrawableTintColorForDrawable:atIndex:forAbstraction:isConflicting:isAmbiguous:isMisplaced:
badgeLabelForAbstraction:atIndex:isConflicting:isAmbiguous:isMisplaced:
constraintBadgeImageForLabel:tintColor:drawSelected:returningBadgeSize:badgeInset:
badgeImage
representingSizeAttribute
isShowingResizeKnobs
setInsetToAvoidOtherDrawables:
setOriginalLineBeforeInsettingToAvoidOtherDrawables:
setColor:
isConflictingConstraint:
convertConstantToView:
rectIncludingBadgeForDrawable:
firstIndex
containsIndex:
isDrawable:intersectingDrawable:
attemptToInsetDrawable:toAvoidDrawable:
isInsetToAvoidOtherDrawables
originalLineBeforeInsettingToAvoidOtherDrawables
indexGreaterThanIndex:
leftOrBottomEdge
rightOrTopEdge
setGuideLines:
enumerateIndexesUsingBlock:
determineConstraintDrawablesAndGuideLinesForOrderedConstraintAbstractions:constraintsByAbstraction:constantsByConstraint:populatingConstraintDrawables:populatingWrappedGuideLines:
setConstraintStatusProvider:
setDrawingDestination:
setConcreteConstraintProvider:
setAutolayoutStatus:
_constraintStatusProvider
_drawingDestination
_concreteConstraintProvider
_autolayoutStatus
determineConstraintDrawablesAndGuideLinesForOrderedConstraintAbstractions:withStatus:concreteConstraintProvider:constraintStatusProvider:drawingDestination:constraintsByAbstraction:constantsByConstraint:populatingConstraintDrawables:populatingWrappedGuideLines:
constraintIsVertical
isPointingUpOrRightInCoordinateSpaceOfView:
type
color
lineThickness
setLineThickness:
isDashed
badgeSize
badgeDrawingInset
edgeBias
guideLines
_pointingUpOrRight
_selected
_selectable
_dashed
_shouldAlwaysDrawGuideLinesIfNeeded
_insetToAvoidOtherDrawables
_type
_color
_movementPriority
_lineThickness
_badgeImage
_edgeBias
_representingSizeAttribute
_guideLines
_badgeSize
_line
_badgeDrawingInset
_originalLineBeforeInsettingToAvoidOtherDrawables
_leftOrBottomEdge
_rightOrTopEdge
isEqualToContentSizePriorityChange:
affectsContentHuggingPriority
affectsContentCompressionResistancePriority
shouldBeArchived
setShouldBeArchived:
ib_shouldIgnoreConstraintInAutolayoutEngine
ib_setShouldIgnoreConstraintInAutolayoutEngine:
arbitrationUnitForObject:
prepareViewHierarchyAndReturnAddedRepresentedConstraintsForRepresentedViews
ibTopLevelViewForLayoutEngine:
representedViewForRealView:
ibDidMapCopyOfReceiver:intoLayoutEngine:
iterateViewsAndGenerateRepresentedConstraintsAndMapToRealConstraints
addExplicitConstraintsForViewsRequiringAdditionalEngineConstraints
updateTopLevelSystemRequiredConstraints
internalEngine
representedItemsOrderedBreadthFirst
invalidateConstraintsForRepresentedItems:
setNeedsLayoutFixFor27106541
layoutIfNeeded
continuouslyPerformEngineBootstrappingOperationWithName:untilSuccessWhileTrackingUnsatisfiableConstraintsDuring:withUnsatisfiableConstraintRemovedHandler:
options
localAssertsOnRuntimeUnsatisfiableConstraints
globalAssertsOnRuntimeUnsatisfiableConstraints
ib_performModifications:withUnsatisfiableConstraintsHandler:
hasRepresentationOfView:
representedConstraintForRealConstraint:
shouldIgnoreRepresentedConstraint:
realConstraintForRepresentedConstraint:
ib_collectionByMappingBlock:
ib_collectionByRemovingNulls
updateConstraintsIfNeeded
customSubviewLayoutStrategyForView:
realConstraintsFromCollectionOfRepresentedConstraints:
ib_uniqueKeys
ib_setBySubtractingSet:
allRealConstraintsCurrentlyInEngine
setByAddingObjectsFromSet:
stringByAppendingString:
initWithString:
ibDefaultSubtreeDescription
spacerItemClass
generateNSLayoutConstraintWithContext:
_spacerViewConstraintGenerationBlockForAttributes:attributeCount:
_addSpacerItemWithRepresentedSuperview:initialLayoutFrame:constraintGenerationBlock:
constraintByReplacingView:withView:andReplacingView:withView:
representedConstraintBySubstitutingRealViewsForRepresentedViewsOfConstraint:
setRepresentedConstraint:forRealConstraint:
setRealConstraint:forRepresentedConstraint:
performInternalEngineModificationsAndAssertOnUnsatisfiableConstraintsIfNeededDuring:withUnsatisfiableConstraintsHandler:
ibPropagatePropertiesToCopyOfReceiver:forLayoutEngine:
performEngineBootstrappingConstraintAdditionOperationForAddingConstraint:
orientationsWithInternalConstraintsThatWeaklyDefineViewSizeForView:
systemRequiredLayoutConstraintWithItem:attribute:constant:
priorityStrongerThanInternalWeakSizeConstraintsForCompressingView:inLayoutEngineForOrientation:
viewForApplyingSystemRequiredConstraints
arrayWithObjects:
removeSystemRequiredWidthAndHeightConstraintsOnRepresentedWindowBorderView
addSystemRequiredWidthAndHeightConstraintsToRepresentedWindowBorderView
addRepresentedConstraintForRealConstraint:
roundingAdjustmentWithUserInterfaceLayoutDirection:
tryToAddConstraint:toRepresentedView:roundingAdjustment:mutuallyExclusiveConstraints:
_attemptToAddConstraint:toView:returningConstraintsOrConstraintAbstractionsMakingSystemOverConstrained:constraintsOrAbstractionsForRepresentedConstraintsBlock:
_populateConstraintAbstractions:fromRepresentedConstraint:
candidateRedundantRepresentedConstraints
ib_isRedundant
withAutomaticOptimizationDisabled:
initWithConstraintInDocument:
realViewForRepresentedView:
container
initWithNSLayoutConstraint:layoutInfo:
constraintAbstractionForRepresentedConstraint:referencesDocumentViews:
_catchExceptionsToWorkaround13752578During:
layoutConstraintEngineForViewHierarchyOfView:layoutInfo:options:
setGlobalAssertsOnRuntimeUnsatisfiableConstraints:
mapLayoutEngineView:toCanvasView:
hasRepresentationOfConstraint:
ambiguityStatusForRepresentedView:
setAllowsResizingTopLevelView:
allowsDerivedDesignTimeDefaultIntrinsicContentSize
addSpacerItemInContainer:initialLayoutFrame:generatingConstraintsForAttributes:attributeCount:
addSpacerItemMatchingCurrentLayoutFrameOfView:generatingConstraintsForAttributes:attributeCount:
removeSpacerItemWithTag:
_backingLayoutItemForSpacer:
representedConstraintToRealConstraintMap
realConstraintToRepresentedConstraintMap
customLayoutViewsThatStartedWithAmbiguousLayout
systemRequiredBorderViewHeightConstraint
systemRequiredBorderViewWidthConstraint
representedViewToRealViewMap
realViewToRepresentedViewMap
additionalRepresentedConstraintsRequiredToCopyViewHierarchy
realConstraintsForViewsRequiringAdditionalEngineConstraints
constraintContainingViewsByView
topLevelRealView
_spacerItemsByTag
_nextSpacerItemTag
_mutuallyExclusiveConstraintsRemovedDuringBootstrapping
haveUpdatedTopLevelSystemRequiredConstraintsForTheFirstTime
initWithArbitrationUnit:initialStatus:options:
enumerateLayoutFramesForViews:usingBlock:
sizeView:toLayoutSize:suggestedLayoutOrigin:mutuallyExclusiveConstraintBreakageStrategy:framePropagationBlock:
addConstraints:replacingConstraints:enforcingCurrentSizeOfViews:mutuallyExclusiveConstraintBreakageStrategy:returningConstraintsAdded:returningConstraintsRemoved:framePropagationBlock:
_arbitrationUnit
_options
configureEngine:forLiveResizingView:layoutInfo:returningWidthConstraint:returningHeightConstraint:options:
updateAutolayoutStatus
layoutFrameOrBoundsForView:
itemNotMatchingItem:
shouldRemoveAbsoluteConstraintsWhenBreakingConstraintsToDescendantsForMask:
designableContentViewForView:
shouldRemoveAbsoluteConstraintsWhenBreakingConstraintsToAncestorsAndSiblingsForMask:
addConstraintsToFixAmbiguityForAncestorsOfItem:whileConfiguringEngine:layoutInfo:
shouldRemoveAbsoluteEqualityConstraintsOnLiveResizingViewForMask:
shouldRemoveAbsoluteInequalityConstraintsOnLiveResizingViewForMask:
minimumPriority
stripOrAddAncestorAndDescendantAndSiblingConstraintsForConfiguringEngine:forLiveResizingView:layoutInfo:options:
removeExplicitSizingConstraintsForConfiguringEngine:forLiveResizingView:layoutInfo:options:
addTemporarySizingConstraintsForConfiguringEngine:forLiveResizingView:layoutInfo:returningWidthConstraint:returningHeightConstraint:options:
adjustContentReactionPrioritiesForConfiguringEngine:forLiveResizingView:layoutInfo:options:
shouldLiveResizeViewUsingExplicitSizingConstraints:
updateWidthConstraint:andHeightConstraint:toSize:
shouldResizeViewByAddingRequiredSizingConstraints:
_heightConstraint
_widthConstraint
frameDecisionDriverOptions
setFrameDecisionDriverOptions:
mutuallyExclusiveConstraintBreakageStrategy
setMutuallyExclusiveConstraintBreakageStrategy:
_frameDecisionDriverOptions
_mutuallyExclusiveConstraintBreakageStrategy
items
setItems:
initialStatus
setInitialStatus:
_items
_initialStatus
initWithIdentifier:marshallableObjectPackage:arbitrationUnit:constraintsToAdd:
requestWithMarshallableObjectPackage:arbitrationUnit:constraintsToAdd:
itemsToEnforceCurrentSize
setItemsToEnforceCurrentSize:
_itemsToEnforceCurrentSize
initWithIdentifier:marshallableObjectPackage:arbitrationUnit:itemToSize:toLayoutFrame:
decodeCGRect
encodeCGRect:
requestWithMarshallableObjectPackage:arbitrationUnit:itemToSize:toLayoutFrame:
itemToSize
layoutFrame
_itemToSize
_layoutFrame
framesByItem
setFramesByItem:
constraintsAdded
setConstraintsAdded:
constraintsRemoved
setConstraintsRemoved:
_framesByItem
_constraintsAdded
_constraintsRemoved
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:symbolicConstant:
symbolicConstant
setSymbolicConstant:
_allowedMagnitudeForIntegralizationAdjustment
_nsib_isRedundant
ib_symbolicConstant
_effectiveConstant:error:
ib_hasValidSymbolicConstant
currentStackBacktrace
stringRepresentation
setIb_symbolicConstant:
ib_mayRequireRoundingAdjustment
ib_knownMagnitudeOfAnyRoundingAdjustment
effectiveValidConstant
ib_constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:symbolicConstant:
performModifications:withUnsatisfiableConstraintsHandler:
encodeWithCoder:
initWithCoder:
initWithAutolayoutStatus:
status
_status
logAspectWithName:
initWithSceneIdentifier:shouldRequestAsynchronously:resultPhase:postProcessingBlock:
shouldRequestAsynchronously
colorSpace
sceneIdentifier
_shouldRequestAsynchronously
_sceneIdentifier
expectedLayoutFrameOrBounds
actualLayoutFrameOrBounds
hasMisplacedHorizontalPosition
hasMisplacedVerticalPosition
hasMisplacedHorizontalSize
hasMisplacedVerticalSize
isEqualToMisplacementStatus:
hasMisplacedPositionInOrientation:
hasMisplacedSizeInOrientation:
hasAnyMisplacement
misplacementStatusByIgnoringPosition
misplacementStatusByIgnoringSize
_expectedLayoutFrameOrBounds
_actualLayoutFrameOrBounds
ibRecursivelyAddSubtreeDescriptionToString:indentation:layoutInfo:withIteratorBlock:andAdditionalDescriptionsBlock:
ibMapCopyOfReceiver:intoLayoutEngine:
ibShortDescription
ibDocumentSubtreeDescriptionWithLayoutInfo:startingIndentation:withAdditionalDescriptionsBlock:
initWithIdentifier:archivingTranslationContext:
initWithIdentifier:archivingTranslationContext:processingResults:
processingResults
_processingResults
initWithIdentifier:marshallableObjectPackage:
requestWithMarshallableObjectPackage:arbitrationUnit:
conflictingConstraintSets
ambiguousViewStatusGroups
misplacedViewsToMisplacementStatus
viewsToLayoutFrames
frameDecidedItems
isEqualToAutolayoutStatus:ignoring:
isEqualToAutolayoutStatus:
conflictingConstraintSetForConstraint:
enumerateAmbiguityGroupsForView:usingBlock:
enumerateObjectsUsingBlock:
isViewAffectedByConflictingConstraints:
enumerateMisplacedViewsUsingBlock:
statusByUnioningWithStatuses:
hasIssues
hasLayoutFrameForView:
misplacementStatusForView:
isViewUninitialized:
misplacedOnlyStatusSet
containsAnyReferenceToObject:
_ambiguousViewsToAmbiguityGroups
_lazyConflictingConstraintsToConflictingConstraintSets
_lazyAllConflictingConstraintAbstractions
_viewsAffectedByConflictingConstraintsSet
_viewsToLayoutFrames
_lazyMisplacedOnlyStatusSet
_conflictingConstraintSets
_ambiguousViewStatusGroups
_misplacedViewsToMisplacementStatus
_frameDecidedItems
arbitrationUnitRootForObject:
generatesPrototypingConstraints
generateNSLayoutConstraintWithContext:constraintClass:
viewShouldGeneratePlaceholderPositionConstraintsForUninitializedSubviews:
viewShouldGeneratePlaceholderSizeConstraintsForUninitializedSubviews:
viewShouldGeneratePlaceholderSizeConstraintsWhenAmbiguous:
viewIsHorizontallyResizable:
viewIsVerticallyResizable:
priorityForPlaceholderAmbiguousSubviewVerticalConstraintsForView:
priorityForPlaceholderAmbiguousSubviewHorizontalConstraintsForView:
setIdentifier:
priorityForPlaceholderUninitializedSubviewVerticalConstraintsForView:
priorityForPlaceholderUninitializedSubviewHorizontalConstraintsForView:
viewShouldInstallPlaceholderSizeConstraintsOnSubviewInsteadOfReceiver:
ib_objectsOfClass:
viewHasUninitializedAutolayoutStatus:
viewHasAnyAmbiguity:
contentSize
initWithView:contentSize:attribute:
setView:
setContentSize:
setAttribute:
_contentSize
_attribute
huggingPriority
initWithView:contentSize:attribute:huggingPriority:
setHuggingPriority:
_huggingPriority
compressionResistancePriority
initWithView:contentSize:attribute:compressionResistancePriority:
setCompressionResistancePriority:
_compressionResistancePriority
valueForKey:
setConstraintInDocument:
_constraintInDocument
decodeDoubleForKey:
encodeDouble:forKey:
shortDescription
isEqualToConstant:
constantInCoordinateSpaceOfView:fromCoordinateSpaceOfView:forLayoutAttribute:
needsEngineToEvaluateValue
takeEngineEvaluatedValue:
invalidateEngineEvaluatedUnderlyingValue
_value
hasComponentsEqualToComponentsOfConstraint:
hasComponentsEqualToComponentsOfConstraintAllowingReversing:
hashOfComponents
ib_addObjects:toArrayForKey:
compare:withUserInterfaceLayoutDirection:
classForKeyedUnarchiver
inferredContentType
multiplierWithValue:
maximumPriority
initWithFirstItem:firstAttribute:relation:secondItem:secondAttribute:multiplier:constant:priority:
firstItemIdentifier
secondItemIdentifier
containingViewIdentifier
multiplier
scoringType
identifier
decodeObjectForKey:
decodeIntegerForKey:
containsValueForKey:
multiplierWithString:
decodeFloatForKey:
decodeBoolForKey:
encodeObject:forKey:
encodeInteger:forKey:
effectiveValue
encodeFloat:forKey:
stringValue
encodeBool:forKey:
decodeBool
encodeBool:
setMultiplier:
symbolicLayoutConstantClass
initWithSymbolicValue:underlyingValue:
containsString:
constraintsWithVisualFormat:options:metrics:views:
doesItem:contain:
isAttributeLeftLeadingOrTop:
marginAttributeForAttribute:
setFirstAttribute:
setSecondAttribute:
isAttributeRightTrailingOrBottom:
descriptionOfComponents
scoreVector
setContentType:
setScoringType:
archivableRepresentationClass
initWithLayoutConstraint:withRepresentationForItemBlock:
geometricCompare:withUserInterfaceLayoutDirection:
suggestedViewForGeometricDescription
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
willChangeValueForKey:
didChangeValueForKey:
reverseFirstAndSecondItem
relativeGeometricDescriptionInCoordinateSpaceOfView:userInterfaceLayoutDirection:
systemRequiredLayoutConstraintWithFirstItem:firstAttribute:relation:secondItem:secondAttribute:constant:
explicitLayoutConstraintWithFirstItem:firstAttribute:relation:secondItem:secondAttribute:constant:
explicitLayoutConstraintWithItem:attribute:constant:
keyPathsForValuesAffectingContentType
copyWithZone:
representationByReversingFirstAndSecondItem
hasComponentsEqualToComponentsOfRepresentation:
hasComponentsEqualToComponentsOfRepresentationAllowingReversing:
firstItemRepresentation
secondItemRepresentation
containingViewRepresentation
initWithRepresentation:itemForItemRepresentationBlock:
archivableRepresentationWithRepresentationForItemBlock:
constraintByReplacingView:withView:
attributeReferencingItem:
enumerateItems:
satisfyConstantUpdatingIfNeededWithLayoutInfo:substitutingCurrentConstant:context:
ibVerifyAfterUnarchivingWithLayoutInfo:
classForArchiver
setFirstItem:
setSecondItem:
setPlaceholder:
_contentTypeNeedsToBeInferred
_scoringTypeNeedsToBeInferred
_placeholder
_firstItem
_firstAttribute
_relation
_secondItem
_secondAttribute
_multiplier
_constant
_containingView
_scoringClass
_scoringType
_identifier
_contentType
ib_allObjectsPassTest:
multiplierByInverting
_firstItemIdentifier
_secondItemIdentifier
_containingViewIdentifier
initWithNumerator:denominator:separator:
initWithValue:percentSignSuffix:
isEqualToMultiplier:
initWithValue:stringValue:
isLogicallyEqualToMultiplier:
multiplierByEvaluatingToDecimal
multiplierByDecrementing
multiplierByIncrementing
multiplierBySimplifyingExpression
_stringValue
denominator
numerator
separator
_numerator
_denominator
_separator
percentSignSuffix
_percentSignSuffix
initWithPattern:options:error:
firstMatchInString:options:range:
numberOfRanges
rangeAtIndex:
substringWithRange:
decodeObjectReferenceIfPossible
encodeObjectReferenceIfPossible:
initWithObject:keyPath:value:postProcessingBlock:
setValue:
initWithCoordinate:exclusivity:
addLayoutGuide:
addLayoutGuideMatch:
setLayoutGuideMatches:
exclusivity
setExclusivity:
coordinate
setCoordinate:
guides
setGuides:
_layoutGuideMatches
_guides
_exclusivity
_coordinate
initWithArbitrationUnit:resultPhase:postProcessingBlock:
initWithBitmapData:scaleFactor:
bitmapData
scaleFactor
_bitmapData
_scaleFactor
startInView:
endInView:
locationInView:
initWithStart:end:inView:
start
arrayByAddingObjectsFromArray:
initWithXCoordinateState:andYCoordinateState:
allGuides
allLayoutGuideMatches
validGuides
setValidGuides:
layoutGuides
setLayoutGuides:
targetRect
setTargetRect:
_validGuides
_layoutGuides
_targetRect
componentsJoinedByString:
sharedInstance
layoutRuleManager
declareFallbackWidgetType:
delegate
abstractUserLayoutGuidesForLayoutGuideGenerator:
layoutGuideGenerator:widgetTypeForView:
layoutGuideGenerator:containerWidgetTypeForView:
layoutGuideGenerator:insetToDesignableContentAreaForView:
layoutGuideGenerator:layoutInsetOfView:
layoutInsetOfView:
layoutGuideGenerator:preferredSizeForView:suggestedSize:suggestedWidth:suggestedHeight:scaleAxesIndependently:
layoutGuideGenerator:numberOfBaselinesOfView:
layoutGuideGenerator:baselineOfView:atIndex:
layoutGuideGenerator:isViewHorizontallyResizable:
layoutGuideGenerator:baselinesForViews:withSuggestedLayoutFrame:andKnobPosition:
layoutGuideGenerator:shouldViewHaveContainedSubviewGuides:
layoutGuideGenerator:isDistanceFromSubviewEdge:ofSubview:toSameEdgeOfSuperviewChangingOneToOneWithKnob:
layoutGuideGenerator:isEdge:ofSubview:fixedInPositionOnWindowDuringResizeFromKnob:
effectiveAncestorViewForEdgeMovementsRelativeToAncestorView:
coordinateSpaceView
layoutGuideGenerator:isEdge:ofAncestor:fixedDuringResizingOfSubviews:fromKnob:
layoutBoundsOfView:
layoutGuideGenerator:siblingsForApplyingGuidesToViews:
shouldSnapDefaultX:toAlignedX:requestedSnapDistance:forCenter:feedbackToken:
snappingDelegate
feedbackTokenForLayoutGuideGenerator:ifShouldSnapDefaultX:toAlignedX:forCenter:
shouldSnapDefaultY:toAlignedY:requestedSnapDistance:forCenter:feedbackToken:
feedbackTokenForLayoutGuideGenerator:ifShouldSnapDefaultY:toAlignedY:forCenter:
widgetTypeForView:
uniqueRuleSubKeyForWidgetType:
containerWidgetTypeForView:
ruleForView:comparedToContainer:withRuleEdge:viewFallbackKey:containerFallbackKey:
maxValue
insetToDesignableContentAreaForView:
guideWouldBeSuggestion:originalCoordinate:applicationState:
userInterfaceLayoutDirectionForLayoutGuideGenerator:
symbolicLayoutConstantClassForLayoutGuideGenerator:
layoutConstantClassForLayoutGuideGenerator:
layoutConstantWithValue:
layoutSymbolicConstantWithValue:
userInterfaceLayoutDirectionToUseForGeneratingLayoutGuideMatches
initWithAttribute:relativeTo:relativeAttribute:constant:feedbackToken:
initWithAttribute:constant:feedbackToken:
applyGuideFromPoint:toPoint:originalCoordinate:displayOnly:withTarget:applicationState:exclusive:
applyEdgeToEdgeGuideFromEdge:ofSelectionRect:toEdge:ofSiblingRect:originalCoordinate:displayOnly:withTarget:applicationState:exclusive:
applyCenteringGuide:selectionDrawingRect:realtiveRect:originalCoordinate:displayOnly:withTarget:applicationState:exclusive:
applyCenteringRuleToSelectionRect:centeringRectForSelectionRect:rectToCenterTo:knobPosition:snapDistance:displayOnly:applicationState:feedbackToken:
applyMiddlingRuleToSelectionRect:centeringRectForSelectionRect:rectToCenterTo:knobPosition:snapDistance:displayOnly:applicationState:feedbackToken:
layoutGuideGenerator:shouldConsiderSelectionEdge:toSiblingEdge:guideFromSelection:toView:
zeroRule
ruleForView:comparedToView:withRuleEdge:viewFallbackKey:
shouldSnapDefaultX:toAlignedX:requestedSnapDistance:feedbackToken:
effectiveLayoutConstantWithValue:
addLayoutGuideMatchForAttribute:relativeTo:relativeType:constant:applicationState:feedbackToken:
enumerateUsingBlock:
shouldSnapDefaultY:toAlignedY:requestedSnapDistance:feedbackToken:
numberOfBaselinesOfView:
baselineOfView:atIndex:
applyBaselineGuideForBaseline:selectionRect:siblingRect:originalCoordinate:displayOnly:withTarget:applicationState:exclusive:
applyIndentationGuideFromEdge:ofSelectionRect:toEdge:ofSiblingRect:originalCoordinate:displayOnly:withTarget:applicationState:exclusive:
maxRuleDistance
layoutGuideGenerator:shouldConsiderSiblingGuidesFromSelection:toView:ofType:
applySelectionToSiblingBaselineGuidesToViews:sibling:siblingRect:targetSuperview:selectionRect:baselines:knobPosition:snapDistance:displayOnly:useVerticalGuides:useHorizontalGuides:widgetTypeSubKey:fallbackViewSubKey:fallbackContainerSubKey:applicationState:
layoutGuideGenerator:allowedEdgesForSiblingGuidesFromSelection:toView:
applySelectionToSiblingEdgeGuidesToViews:sibling:siblingRect:targetSuperview:selectionRect:baselines:knobPosition:snapDistance:displayOnly:useVerticalGuides:useHorizontalGuides:allowedGuideEdges:widgetTypeSubKey:fallbackViewSubKey:fallbackContainerSubKey:siblingWidgetTypeSubKey:applicationState:
applySelectionToSiblingIndentationGuidesToViews:sibling:siblingRect:targetSuperview:selectionRect:baselines:knobPosition:snapDistance:displayOnly:useVerticalGuides:useHorizontalGuides:widgetTypeSubKey:fallbackViewSubKey:fallbackContainerSubKey:siblingWidgetTypeSubKey:applicationState:
applyMiddlingRuleToSelectionRect:rectToCenterTo:knobPosition:snapDistance:displayOnly:applicationState:feedbackToken:
applyCenteringRuleToSelectionRect:rectToCenterTo:knobPosition:snapDistance:displayOnly:applicationState:feedbackToken:
ib_onlyObject
boundsForLayoutBounds:ofView:
preferredSizeForView:suggestedSize:suggestedWidth:suggestedHeight:scaleAxesIndependently:
isViewHorizontallyResizable:
applySizingGuideForRect:vertical:originalCoordinate:displayOnly:withTarget:applicationState:exclusive:
addLayoutGuideMatchForAttribute:constant:applicationState:feedbackToken:
isViewVerticallyResizable:
layoutMarginValueForAttribute:fromLayoutMargins:
layoutGuideGenerator:viewForContainmentGuides:
isEdge:ofAncestor:fixedDuringResizingOfSubviews:fromKnob:
applyContainmentGuideForContainerEdge:ofContainerRect:toSubviewRect:originalCoordinate:applicationState:displayOnly:withTarget:exclusive:
enumerateLayoutRules:ofSuperview:forSelectionEdge:usingBlock:
shouldViewHaveContainedSubviewGuides:
layoutGuideGenerator:viewsForSelectionToSubviewsGuides:
boundingLayoutFrameForViews:
isDistanceFromSubviewEdge:ofSubview:toSameEdgeOfSuperviewChangingOneToOneWithKnob:
isEdge:ofSubview:fixedInPositionOnWindowDuringResizeFromKnob:
legalViewsForUserGuidesInView:
abstractUserLayoutGuides
applyLayoutGuide:originalCoordinate:displayOnly:withTarget:applicationState:exclusive:
layoutRuleWidgetTypePrefix
ib_arrayByMappingBlock:
_layoutRuleSubKeyForWidgetType:
applySelectionToUserGuideGuidesToViews:targetSuperview:selectionRect:knobPosition:snapDistance:displayOnly:widgetTypeSubKey:fallbackViewSubKey:fallbackContainerSubKey:applicationState:
applySelectionToSiblingGuidesToViews:siblings:targetSuperview:selectionRect:baselines:knobPosition:snapDistance:displayOnly:widgetTypeSubKey:fallbackViewSubKey:fallbackContainerSubKey:applicationState:
applySelectionToSubviewGuidesToViews:targetSuperview:selectionRect:knobPosition:snapDistance:displayOnly:widgetTypeSubKey:fallbackViewSubKey:fallbackContainerSubKey:applicationState:
applySelectionToSuperviewGuidesToViews:targetSuperview:selectionRect:knobPosition:snapDistance:displayOnly:widgetTypeSubKey:fallbackViewSubKey:fallbackContainerSubKey:applicationState:
applyPreferredDesignSizeGuidesToViews:targetSuperview:selectionRect:knobPosition:snapDistance:displayOnly:widgetTypeSubKey:fallbackViewSubKey:fallbackContainerSubKey:applicationState:
siblingsForGeneratingGuidesForViews:
baselinesForViews:withSuggestedLayoutFrame:andKnobPosition:
generateGuidesForUnionedBoundingRect:ofViews:targetSuperview:siblings:baselines:knobPosition:snapDistance:optionsMask:
setFallbackWidgetType:
setFallbackContainerWidgetType:
boundingLayoutFrameForViewsNotNecessarilyInSuperview:inCoordinateSpaceOfTargetSuperview:
insetFromContainer:toViews:
fallbackWidgetType
fallbackContainerWidgetType
setSnappingDelegate:
_snappingDelegate
initWithObjectID:keyPath:value:
objectID
_objectID
userLayoutGuides
systemLayoutGuides
addBaselinesForResizingSingleView:toArray:fromKnob:withUnalignedSelectionFrame:coordinateSpaceView:
layoutGuideGenerator:isViewVerticallyResizable:
disableSiblingToSiblingGuidesWhileInvoking:
disableContainmentGuidesWhileInvoking:
disabledContainmentGuidesCount
disabledSiblingGuidesCount
feedbackToken
constantInCoordinateSpaceOfView:fromCoordinateSpaceOfView:
isEqualToLayoutGuideMatch:
layoutGuideMatchByConvertingToCoordinateSpaceOfView:fromCoordinateSpaceOfView:
_relativeTo
_relativeAttribute
_feedbackToken
boolForKey:
initWithIdentifier:marshallableObjectPackage:rootObject:renderingFidelity:
configureFullSceneUpdateRequest:
requestWithMarshallableObjectPackage:rootObject:renderingFidelity:
configureWithConfigurer:
visitWithFullRequestBlock:incrementalRequestBlock:
processingRequestGroup
renderingFidelity
incrementalUpdateSessionID
setIncrementalUpdateSessionID:
_processingRequestGroup
_incrementalUpdateSessionID
_renderingFidelity
initWithIdentifier:renderingFidelity:
context
configureIncrementalSceneUpdateRequest:
requestWithRenderingFidelity:
_ensureProcessingRequestsAreSorted
processingRequests
orderedProcessingRequestsWithPhaseInRange:
ib_arrayBySortingUsingComparator:
addProcessingRequest:
orderedProcessingRequestsWithPhase:
orderedProcessingRequestsBeforeAndIncludingPhase:
orderedProcessingRequestsAfterAndIncludingPhase:
processProcessingResultsFromSceneUpdateResult:orDeliverError:
_processingRequests
_needsSort
dealloc
initWithCount:
valueAtIndex:
setValue:atIndex:
values
dataWithContentsOfFile:options:error:
propertyListWithData:options:format:error:
addLayoutRules:
initWithObjects:
fallbackWidgetTypes
invalidateCompactLayoutRules
sharedLayoutRules
ib_objectForKey:inDictionaryForKey:
ib_setObject:forKey:inDictionaryForKey:
validateTextualRules:
compare:
ib_arrayBySortingUsingSelector:
declareWidgetTypes:
compactRules:
compactLayoutRules
dictionaryWithCapacity:
shouldValidateTextualRules
invertRules:
isEqualToDictionary:
addLayoutRulesFromFile:error:
removeLayoutRules:
widgetCodes
maxRuleDistanceIsValid
ib_strictDictionaryWithKeysAndObjects:
arbitrationResult
setArbitrationResult:
_arbitrationResult
initWithSymbolicValue:engineEvaluatedUnderlyingValue:
_cachedUnderlyingValueIsValid
_symbolicValue
constraintAbstractions
setConstraintAbstractions:
_constraintAbstractions
decodeDouble
inset
encodeDouble:
initWithInset:
_inset
sparseInfoOfClass:byTransformingObjectsUsingBlock:
arbitrationUnitClass
autolayoutFrameDecisionDriverClass
initWithUserInterfaceLayoutDirection:layoutConstantClass:symbolicLayoutConstantClass:arbitrationUnitClass:autolayoutEngineClass:autolayoutFrameDecisionDriverClass:
setGeneratesPrototypingConstraints:
topLevelObjects
addObject:toParent:
objectIsView:
setWidgetType:forView:
setContainerWidgetType:forView:
setDesignableContentView:forView:
setInsetToDesignableContentArea:forView:
setView:prefersToHorizontallyResizeWithContainer:
setView:prefersToVerticallyResizeWithContainer:
setView:isHorizontallyResizable:
setView:isVerticallyResizable:
setView:shouldUseConstraintsInsteadOfAutoresizing:
setViewWithSuperviewOwnedLayout:allowsSizingConstraints:
setCustomSubviewLayoutStrategy:forView:
setOrientationsWithInternalConstraintsThatWeaklyDefineViewSize:forView:
setPriorityStrongerThanInternalWeakSizeConstraints:forCompressingView:inLayoutEngineForOrientation:
setView:derivesInternalConstraintsBasedUponInitialFrameSize:
setView:derivesDesignTimeDefaultIntrinsicContentSize:
setView:prefersMarginRelativeConstraints:
setView:hasUninitializedAutolayoutStatus:
setView:canHaveUninitializedAutolayoutAmbiguityStatus:
setView:hasCandidateReferencingConstraints:
setView:hasAnyAmbiguity:
setView:shouldGeneratePlaceholderPositionConstraintsForUninitializedSubviews:
setView:shouldGeneratePlaceholderSizeConstraintsForUninitializedSubviews:
setView:shouldGeneratePlaceHolderSizeConstraintsWhenAmbiguous:
setView:shouldInstallPlaceholderSizeConstraintsOnSubviewInsteadOfReceiver:
setPriorityForPlaceholderUninitializedSubviewHorizontalConstraints:forView:
setPriorityForPlaceholderUninitializedSubviewVerticalConstraints:forView:
setPriorityForPlaceholderAmbiguousSubviewHorizontalConstraints:forView:
setPriorityForPlaceholderAmbiguousSubviewVerticalConstraints:forView:
parentOfObjectOrNSNull:
null
trackObjectAsView:
ib_setObject:forKey:inDictionaryForKey:subDictionaryClass:
ib_removeObjectForKey:inDictionaryForKey:
ib_removeObject:fromSetForKey:
sparseInfoByTransformingObjectsInSparseInfo:usingBlock:
topLevelObjectForObject:
objectsFromAncestor:toObject:
allArbitrationUnits
sparseInfoByTransformingObjectsUsingBlock:
_parentByObjectMap
_childrenByObjectMap
_priorityStrongerThanInternalWeakSizeConstraintsByViewMap
_propertiesByDomainThenObjectMap
_objectsWithAnyViewPropertiesSet
_arbitrationUnits
_generatesPrototypingConstraints
_autolayoutFrameDecisionDriverClass
_userInterfaceLayoutDirection
_symbolicLayoutConstantClass
_layoutConstantClass
_autolayoutEngineClass
_arbitrationUnitClass
layoutConstraintBetweenViewsInDocument
setLayoutConstraintBetweenViewsInDocument:
_layoutConstraintBetweenViewsInDocument
IBAbstractLayoutConstraintAbstraction
IBBinaryArchiving
NSObject
IBAbstractLayoutConstraintAbstractionAdditions
IBAutolayoutAffectingConstraintsMarshallingRequest
IBAutolayoutAmbiguityGroup
IBIncrementalSessionEndProcessingRequest
IBAutolayoutAmbiguityStatus
IBAutolayoutArbiter
IBAutolayoutArbitrationMarshallingRequest
IBValueForKeyProcessingRequest
IBSceneUpdateProcessingRequest
IBAutolayoutArbitrationResult
IBAutolayoutItem
IBAutolayoutArbitrationUnit
IBAutolayoutCandidateConstraintGenerator
IBAutolayoutClippingPriorityChangeMarshallingRequest
__IBAutolayoutCommon
IBAutolayoutConstraintConstantMarshallingRequest
IBAutolayoutAdditions
IBLayoutConstraintDrawableProvider
IBAutolayoutConstraintDrawable
IBAutolayoutContentSizePriorityChange
IBIncrementalSessionStartProcessingRequest
IBAutolayoutEngineAdditions
IBAutolayoutEngine
IBAbstractAutolayoutFrameDecisionDriver
IBAutolayoutFrameDecisionDriver
IBAutolayoutFrameDecisionMarshallingRequest
IBAutolayoutFramesOnlyFrameDecisionMarshallingRequest
IBAutolayoutConstraintAdditionFrameDecisionMarshallingRequest
IBAutolayoutItemSizingFrameDecisionMarshallingRequest
IBAutolayoutFrameDecisionMarshallingResult
IBAutolayoutFrameworkSupport
IBAutolayoutFrameworkSupportInternal
IBAutolayoutGuide
NSCoding
IBAutolayoutStatusProcessingResult
IBRenderingProcessingRequest
IBAutolayoutMisplacementStatus
IBAutolayoutObjectIntegration
IBSceneUpdateResult
IBSceneUpdateProcessingResult
IBAutolayoutOperationMarshallingRequest
IBAutolayoutStatus
IBAutolayoutStatusMarshallingRequest
IBContentSizeLayoutConstraintAbstraction
IBContentHuggingLayoutConstraintAbstraction
IBContentCompressionResistanceLayoutConstraintAbstraction
IBContentSizeLayoutConstraintAbstractionAdditions
IBDocumentLayoutConstraintAbstraction
IBLayoutConstant
IBNSLayoutConstraint
IBLayoutConstraint
NSCopying
IBLayoutConstraintRepresentation
IBLayoutConstraintArchivableRepresentation
IBLayoutConstraintMultiplier
IBDecimalLayoutConstraintMultiplier
IBRatioLayoutConstraintMultiplier
IBPercentageLayoutConstraintMultiplier
IBSetValueForKeyProcessingRequest
IBLayoutCoordinateApplicationState
IBAutolayoutStatusProcessingRequest
IBRenderingProcessingResult
IBLayoutGuide
IBLiveGuide
IBAbstractUserGuide
IBLayoutGuideApplicationState
IBLayoutGuideGeneratorResult
IBLayoutGuideGenerator
IBIncrementalSetValueForKeyProcessingRequest
IBLayoutGuideGeneratorDelegate
IBLayoutGuideMatch
IBFullSceneUpdateRequest
IBSceneUpdateRequest
IBIncrementalSceneUpdateRequest
IBSceneUpdateProcessingRequestGroup
IBSnapSet
IBLayoutRuleManager
IBAutolayoutArbitrationMarshallingResult
IBNoopProcessingRequest
IBNSLayoutSymbolicConstant
IBLayoutSymbolicConstant
IBValueForKeyProcessingResult
IBAutolayoutAffectingConstraintsMarshallingResult
IBSubtreeDescriptionAdditions
IBSparseInsetWrapper
IBSparseAutolayoutInfo
IBAutolayoutInfoProvider
IBAutolayoutConcreteConstraintProvider
IBSystemLayoutConstraintAbstraction
IBAutolayoutStatusMarshallingResult
@24@0:8@16
@24@0:8@"IBBinaryUnarchiver"16
v24@0:8@16
v24@0:8@"IBBinaryArchiver"16
v24@0:8@"IBBinaryUnarchiver"16
r*24@0:8@16
r*24@0:8@"IBBinaryArchiver"16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
d16@0:8
v32@0:8@16@24
@48@0:8@16@24@32Q40
@56@0:8@16@24@32@40Q48
v16@0:8
@"NSObject<IBAutolayoutItem>"
@40@0:8@16@24Q32
v24@0:8@?16
@"NSDictionary"
@"NSSet"
@32@0:8q16@?24
@32@0:8@16Q24
@20@0:8B16
B24@0:8Q16
@32@0:8@16@24
Q24@0:8Q16
B56@0:8@16@24Q32^@40^@48
B88@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48@56Q64^@72^@80
B24@0:8^@16
B40@0:8@16@24^@32
Q24@0:8@16
B32@0:8@16Q24
@"NSMutableSet"
@"IBAutolayoutEngine"
@40@0:8@16@24@32
@48@0:8@16@24@32@40
@48@0:8@16@24q32@?40
@"NSObject"
@"NSString"
@?16@0:8
q16@0:8
v24@0:8q16
@"<IBCollection>"
@"NSError"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v24@0:8@"NSObject<IBAutolayoutItem>"16
d32@0:8q16@24
d32@0:8q16@"NSObject<IBAutolayoutItem>"24
B40@0:8q16(?={?=qq}[2q])24
{_IBEdgeInsets=dddd}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v32@0:8{CGSize=dd}16
@"NSObject<IBAutolayoutItem>"16@0:8
{CGPoint=dd}40@0:8{CGPoint=dd}16@32
{CGPoint=dd}40@0:8{CGPoint=dd}16@"NSObject<IBAutolayoutItem>"32
{CGSize=dd}40@0:8{CGSize=dd}16@32
{CGSize=dd}40@0:8{CGSize=dd}16@"NSObject<IBAutolayoutItem>"32
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@"NSObject<IBAutolayoutItem>"48
{?=dddd}56@0:8{?=dddd}16@48
{?=dddd}56@0:8{?=dddd}16@"NSObject<IBAutolayoutItem>"48
I28@0:8I16@20
I28@0:8I16@"NSObject<IBAutolayoutItem>"20
(?={?=qq}[2q])40@0:8(?={?=qq}[2q])16@32
(?={?=qq}[2q])40@0:8(?={?=qq}[2q])16@"NSObject<IBAutolayoutItem>"32
{CGPoint=dd}40@0:8{CGPoint=dd}16^{UIView=#}32
{CGSize=dd}40@0:8{CGSize=dd}16^{UIView=#}32
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16^{UIView=#}48
{?=dddd}56@0:8{?=dddd}16^{UIView=#}48
I28@0:8I16^{UIView=#}20
(?={?=qq}[2q])40@0:8(?={?=qq}[2q])16^{UIView=#}32
v24@0:8@"NSLayoutConstraint"16
v24@0:8@"NSArray"16
f24@0:8Q16
v28@0:8f16Q20
@24@0:8Q16
@"NSArray"24@0:8Q16
@"NSObject<IBAutolayoutItem>"24@0:8@"NSObject<IBAutolayoutItem>"16
B40@0:8Q16Q24@32
B40@0:8Q16Q24@"<IBCollection>"32
B32@0:8@16q24
B32@0:8@"<IBCollection>"16q24
Q24@0:8@"<IBCollection>"16
@"NSObject<IBAutolayoutItem>"24@0:8@"<IBAutolayoutInfoProvider>"16
B32@0:8@16@24
B32@0:8@"NSObject<IBAutolayoutItem>"16@"IBAutolayoutEngine"24
Q32@0:8@16@24
Q32@0:8@"NSObject<IBAutolayoutItem>"16@"IBAutolayoutEngine"24
@48@0:8^d16^Q24^#32@40
@48@0:8^d16^Q24^#32@"NSDictionary"40
v40@0:8@16@24@32
v40@0:8@"NSLayoutConstraint"16@24@"NSDictionary"32
@"NSArray"16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v20@0:8B16
{?=dddd}16@0:8
{CGSize=dd}16@0:8
@"<IBOrderedCollection>"16@0:8
v24@0:8@"<IBOrderedCollection>"16
@"<IBCollection>"16@0:8
v24@0:8d16
@"NSSet"16@0:8
@40@0:8#16@24@32
@32@0:8@16@?24
@32@0:8@16#24
@48@0:8@16@24Q32@40
@40@0:8@16Q24@32
v48@0:8@16@24Q32@40
v56@0:8@16@24@32Q40@48
v52@0:8@16@24Q32B40@44
B48@0:8@16Q24@32@40
B48@0:8@16@24Q32@40
v64@0:8@16@24@32Q40@48@56
@56@0:8Q16@24@32@40@48
B40@0:8@16d24@32
B48@0:8@16d24@32@40
@32@0:8@16^@24
@"NSArray"
@"<IBAutolayoutInfoProvider>"
v24@0:8Q16
@80@0:8@16@24@32^@40^@48@56@64Q72
@72@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24Q56@64
@56@0:8@16@24Q32@40@48
@152@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}56@88{CGRect={CGPoint=dd}{CGSize=dd}}96Q128@136@144
v52@0:8@16Q24B32@36@?44
@68@0:8@16Q24B32@36@44^B52^Q60
@64@0:8@16B24@28Q36B44@48@56
@60@0:8@16@24Q32B40@44@52
@60@0:8@16@24B32@36@44Q52
@72@0:8@16Q24@32@40@48@56@64
v72@0:8@16@24@32@40^@48^@56^@64
@56@0:8@16@24@32d40@48
@64@0:8@16@24@32@40d48@56
@"IBLayoutConstraint"
{?={CGPoint=dd}{CGPoint=dd}}16@0:8
@48@0:8{?={CGPoint=dd}{CGPoint=dd}}16
v56@0:8@16@24@32@40@48
v60@0:8@16Q24B32@36@44@52
@52@0:8@16Q24@32B40B44B48
v72@0:8@16Q24B32@36@44B52B56B60d64
v68@0:8@16Q24@32@40B48B52B56d60
{?={CGPoint=dd}{CGPoint=dd}}64@0:8{?={CGPoint=dd}{CGPoint=dd}}16@48Q56
v48@0:8^{?={CGPoint=dd}{CGPoint=dd}}16Q24@32@40
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{?={CGPoint=dd}{CGPoint=dd}}16
@"<IBLayoutConstraintStatusProvider>"
@"<IBLayoutConstraintDrawingDestination>"
@"<IBAutolayoutConcreteConstraintProvider>"
@"IBAutolayoutStatus"
v88@0:8@16@24@32@40@48@56@64@72@80
@192@0:8@16{?={CGPoint=dd}{CGPoint=dd}}24Q56@64d72{?={CGRect={CGPoint=dd}{CGSize=dd}}I{?=dd}}80{?={CGRect={CGPoint=dd}{CGSize=dd}}I{?=dd}}136
@80@0:8@16{?={CGPoint=dd}{CGPoint=dd}}24Q56@64d72
v48@0:8{?={CGPoint=dd}{CGPoint=dd}}16
{?={CGRect={CGPoint=dd}{CGSize=dd}}I{?=dd}}16@0:8
v48@0:8{?=dddd}16
@"NSColor"
@"NSImage"
@"NSNumber"
{CGSize="width"d"height"d}
{?="start"{CGPoint="x"d"y"d}"end"{CGPoint="x"d"y"d}}
{?="minX"d"minY"d"maxX"d"maxY"d}
{?="rect"{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}"rectEdge"I"range"{?="start"d"length"d}}
@40@0:8@16Q24d32
v32@0:8@?16@?24
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@16@24
B40@0:8@16^{CGRect={CGPoint=dd}{CGSize=dd}}24^{CGRect={CGPoint=dd}{CGSize=dd}}32
{CGSize=dd}24@0:8@16
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
Q64@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24@?56
@?32@0:8^Q16Q24
Q72@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24^Q56Q64
Q40@0:8@16^Q24Q32
B48@0:8@16@24d32^@40
v40@0:8@16@?24@?32
Q48@0:8@16@24^@32@?40
Q40@0:8@16@24^@32
v32@0:8d16@24
d24@0:8@16
v36@0:8f16@20Q28
@28@0:8@16B24
@"IBMutableIdentityDictionary"
@"NSMapTable"
@"IBAutolayoutArbitrationUnit"
v32@0:8@16@?24
@?72@0:8@16{CGSize=dd}24{CGPoint=dd}40Q56@?64
v72@0:8@16@24@32Q40^@48^@56@?64
v48@0:8@16@24@32@40
v64@0:8@16@24@32^@40^@48@56
v48@0:8@16@24{CGSize=dd}32
@72@0:8@16@24@32{CGRect={CGPoint=dd}{CGSize=dd}}40
@80@0:8@16@24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@72@0:8@16q24q32@40q48d56@64
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
^{CGColorSpace=}16@0:8
@44@0:8q16B24q28@?36
@88@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}56
v56@0:8@16@24@32@?40@?48
@48@0:8@16@?24@32@?40
@40@0:8@16@24@?32
@56@0:8@16@24@32@40@48
@40@0:8@16d24Q32
@48@0:8@16d24Q32d40
@24@0:8d16
d32@0:8@16@24
@64@0:8@16Q24q32@40Q48@56
@56@0:8@16Q24@32@40@48
@24@0:8^{_NSZone=}16
@"NSObject<IBLayoutConstraintRepresentation>"16@0:8
B24@0:8@"NSObject<IBLayoutConstraintRepresentation>"16
@"IBLayoutConstraintMultiplier"16@0:8
@"IBLayoutConstant"16@0:8
@80@0:8@16Q24q32@40Q48@56@64d72
{?=qdQQQdq}16@0:8
@24@0:8@?16
q32@0:8@16q24
{?={?={CGPoint=dd}{CGPoint=dd}}d}48@0:8@16q24@32Q40
{?={?={CGPoint=dd}{CGPoint=dd}}d}32@0:8@16q24
d24@0:8q16
Q56@0:8q16@24^d32^d40@48
B40@0:8@16@24@32
@"IBLayoutConstraintMultiplier"
@"IBLayoutConstant"
@32@0:8d16@24
@40@0:8d16d24@32
@48@0:8@16@24@32@?40
@32@0:8d16q24
@"NSMutableArray"
@40@0:8@16q24@?32
@32@0:8@16d24
@"NSData"
{CGPoint=dd}24@0:8@16
@56@0:8{CGPoint=dd}16{CGPoint=dd}32@48
{CGPoint="x"d"y"d}
@"IBLayoutCoordinateApplicationState"
{?=dddd}24@0:8@16
{CGSize=dd}64@0:8@16{CGSize=dd}24^B40^B48^B56
q24@0:8@16
d32@0:8@16q24
@72@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24(?={?=qq}[2q])56
B44@0:8I16@20(?={?=qq}[2q])28
B52@0:8I16@20@28(?={?=qq}[2q])36
B48@0:8d16d24d32o^@40
B52@0:8d16d24d32B40o^@44
{?=dddd}32@0:8@16@24
B40@0:8d16d24@32
v80@0:8{CGPoint=dd}16{CGPoint=dd}32d48B56d60@68B76
v64@0:8Q16@24Q32@40@48@56
v48@0:8Q16@24@32@40
v128@0:8Q16{CGRect={CGPoint=dd}{CGSize=dd}}24Q56{CGRect={CGPoint=dd}{CGSize=dd}}64d96B104d108@116B124
v116@0:8B16{CGRect={CGPoint=dd}{CGSize=dd}}20{CGRect={CGPoint=dd}{CGSize=dd}}52d84B92d96@104B112
v120@0:8d16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}56d88B96d100@108B116
v56@0:8@16d24B32d36@44B52
v120@0:8Q16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}56d88@96B104d108B116
v84@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16B48d52B60d64@72B80
B156@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48{CGRect={CGPoint=dd}{CGSize=dd}}80(?={?=qq}[2q])112d128B136@140o^@148
B124@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48(?={?=qq}[2q])80d96B104@108o^@116
v196@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32@64{CGRect={CGPoint=dd}{CGSize=dd}}72@104(?={?=qq}[2q])112d128B136B140B144Q148q156q164q172q180@188
v180@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32@64{CGRect={CGPoint=dd}{CGSize=dd}}72@104(?={?=qq}[2q])112d128B136B140B144q148q156q164@172
v188@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32@64{CGRect={CGPoint=dd}{CGSize=dd}}72@104(?={?=qq}[2q])112d128B136B140B144q148q156q164q172@180
v140@0:8@16@24@32{CGRect={CGPoint=dd}{CGSize=dd}}40@72(?={?=qq}[2q])80d96B104q108q116q124@132
v124@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32(?={?=qq}[2q])64d80B88q92q100q108@116
d56@0:8Q16{_IBEdgeInsets=dddd}24
v44@0:8@16@24I32@?36
@112@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48@56@64@72(?={?=qq}[2q])80d96Q104
@"<IBLayoutGuideGeneratorDelegate>"
@"<IBLayoutGuideGeneratorSnappingDelegate>"
@"NSObject<IBBinaryArchiving>"
@"NSArray"24@0:8@"IBLayoutGuideGenerator"16
@"NSObject<IBAutolayoutItem>"32@0:8@"IBLayoutGuideGenerator"16@"NSObject<IBAutolayoutItem>"24
@80@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32(?={?=qq}[2q])64
@"NSArray"80@0:8@"IBLayoutGuideGenerator"16@"<IBCollection>"24{CGRect={CGPoint=dd}{CGSize=dd}}32(?={?=qq}[2q])64
@"NSArray"32@0:8@"IBLayoutGuideGenerator"16@"NSSet"24
@"NSSet"32@0:8@"IBLayoutGuideGenerator"16@"NSObject<IBAutolayoutItem>"24
@"NSString"32@0:8@"IBLayoutGuideGenerator"16@"NSObject<IBAutolayoutItem>"24
{?=dddd}32@0:8@"IBLayoutGuideGenerator"16@"NSObject<IBAutolayoutItem>"24
{CGSize=dd}72@0:8@16@24{CGSize=dd}32^B48^B56^B64
{CGSize=dd}72@0:8@"IBLayoutGuideGenerator"16@"NSObject<IBAutolayoutItem>"24{CGSize=dd}32^B48^B56^B64
q32@0:8@16@24
q32@0:8@"IBLayoutGuideGenerator"16@"NSObject<IBAutolayoutItem>"24
d40@0:8@16@24q32
d40@0:8@"IBLayoutGuideGenerator"16@"NSObject<IBAutolayoutItem>"24q32
B32@0:8@"IBLayoutGuideGenerator"16@"NSObject<IBAutolayoutItem>"24
B52@0:8@16I24@28(?={?=qq}[2q])36
B52@0:8@"IBLayoutGuideGenerator"16I24@"NSObject<IBAutolayoutItem>"28(?={?=qq}[2q])36
B60@0:8@16I24@28@36(?={?=qq}[2q])44
B60@0:8@"IBLayoutGuideGenerator"16I24@"NSObject<IBAutolayoutItem>"28@"<IBCollection>"36(?={?=qq}[2q])44
B48@0:8@16I24I28@32@40
B48@0:8@"IBLayoutGuideGenerator"16I24I28@"<IBCollection>"32@"NSObject<IBAutolayoutItem>"40
B48@0:8@16@24@32q40
B48@0:8@"IBLayoutGuideGenerator"16@"<IBCollection>"24@"NSObject<IBAutolayoutItem>"32q40
Q40@0:8@16@24@32
Q40@0:8@"IBLayoutGuideGenerator"16@"<IBCollection>"24@"NSObject<IBAutolayoutItem>"32
#24@0:8@16
#24@0:8@"IBLayoutGuideGenerator"16
q24@0:8@"IBLayoutGuideGenerator"16
v88@0:8@16@24(?={?=qq}[2q])32{CGRect={CGPoint=dd}{CGSize=dd}}48@80
@56@0:8Q16@24Q32@40@48
@40@0:8Q16@24@32
B40@0:8@16@24q32
@40@0:8@16@24q32
v24@0:8@"<IBSceneUpdateRequestConfiguring>"16
v32@0:8@?<v@?@"IBFullSceneUpdateRequest">16@?<v@?@"IBIncrementalSceneUpdateRequest">24
@"IBSceneUpdateProcessingRequestGroup"16@0:8
v24@0:8@"NSString"16
@48@0:8@16@24@32q40
@"IBSceneUpdateProcessingRequestGroup"
@24@0:8q16
@32@0:8@16q24
@32@0:8{_NSRange=QQ}16
d20@0:8C16
v28@0:8d16C24
C16@0:8
B32@0:8@16^@24
@56@0:8q16q24Q32q40q48
@48@0:8q16q24Q32q40
@"NSMutableDictionary"
@"NSMutableOrderedSet"
@"IBAutolayoutArbitrationResult"
@48@0:8{?=dddd}16
@"NSArray"24@0:8@16
@"NSArray"32@0:8@"NSObject"16@"NSObject"24
@"NSString"24@0:8@"NSObject<IBAutolayoutItem>"16
{?=dddd}24@0:8@"NSObject<IBAutolayoutItem>"16
B24@0:8@"NSObject<IBAutolayoutItem>"16
Q24@0:8@"NSObject<IBAutolayoutItem>"16
d32@0:8@16Q24
d32@0:8@"NSObject<IBAutolayoutItem>"16Q24
d24@0:8@"NSObject<IBAutolayoutItem>"16
@"IBAutolayoutArbitrationUnit"24@0:8@16
@"NSObject"24@0:8@"NSObject"16
@"IBSparseAutolayoutInfo"32@0:8@"IBAutolayoutArbitrationUnit"16@?<@@?@>24
@64@0:8q16#24#32#40#48#56
@32@0:8#16@?24
v28@0:8@16B24
v56@0:8{?=dddd}16@48
v32@0:8Q16@24
v40@0:8d16@24Q32
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
constraintInDocument
T@"IBLayoutConstraint",R,N
priority
Td,R,N
VIEW:
ORIENTATION MASK:
view
T@"NSObject<IBAutolayoutItem>",R,N,V_view
orientationMask
TQ,R,N,V_orientationMask
 orientationMask=%@
"Horizontal | Vertical"
Horizontal
Vertical
Unknown
 ambiguousViewsToAmbiguityStatus=%@
 constraintAbstractionsAffectingLayout=%@
 inequalityConstraintsResolvingAmbiguity=%@
 contentSizePriorityChangesResolvingAmbiguity=%@
v32@?0@"NSObject<IBAutolayoutItem>"8@"IBAutolayoutAmbiguityStatus"16^B24
B16@?0@8
ambiguousViewsToAmbiguityStatus
T@"NSDictionary",R,N,V_ambiguousViewsToAmbiguityStatus
constraintAbstractionsAffectingLayout
T@"NSSet",R,N,V_constraintAbstractionsAffectingLayout
inequalityConstraintsResolvingAmbiguity
T@"NSSet",R,N,V_inequalityConstraintsResolvingAmbiguity
contentSizePriorityChangesResolvingAmbiguity
T@"NSSet",R,N,V_contentSizePriorityChangesResolvingAmbiguity
horizontal
TB,R,N,GisHorizontal
vertical
TB,R,N,GisVertical
Assertion failure
-[IBAutolayoutAmbiguityStatus initWithView:ambiguityStatusMask:]
/Library/Caches/com.apple.xbs/Sources/IBAutolayoutFoundationIOS/IDEInterfaceBuilder-11542/AutolayoutFoundation/Arbitration/IBAutolayoutAmbiguityStatus.m
"%@" should not be nil.
IBAssertionFailure
<%@: %p view=<%@: %p>
 horizontalPosition=1
 verticalPosition=1
 horizontalSize=1
 verticalSize=1
 scrollableContentWidth=1
 scrollableContentHeight=1
 uninitialized=1
ambiguityStatusMask
TQ,R,N,V_ambiguityStatusMask
ambiguous
TB,R,N,GisAmbiguous
ambiguousExcludingUninitialized
TB,R,N,GisAmbiguousExcludingUninitialized
uninitialized
TB,R,N,GisUninitialized
hasAmbiguousPosition
TB,R,N
hasAmbiguousSize
hasAmbiguousHorizontalPosition
hasAmbiguousVerticalPosition
hasAmbiguousHorizontalSize
hasAmbiguousVerticalSize
hasAmbiguousScrollableContentWidth
hasAmbiguousScrollableContentHeight
missingConstraints
TB,R,N,GisMissingConstraints
missingHorizontalPositionConstraint
TB,R,N,GisMissingHorizontalPositionConstraint
missingVerticalPositionConstraint
TB,R,N,GisMissingVerticalPositionConstraint
missingHorizontalSizeConstraint
TB,R,N,GisMissingHorizontalSizeConstraint
missingVerticalSizeConstraint
TB,R,N,GisMissingVerticalSizeConstraint
missingScrollableContentWidthConstraint
TB,R,N,GisMissingScrollableContentWidthConstraint
missingScrollableContentHeightConstraint
TB,R,N,GisMissingScrollableContentHeightConstraint
engine
-[IBAutolayoutArbiter initWithMutableLayoutEngine:]
/Library/Caches/com.apple.xbs/Sources/IBAutolayoutFoundationIOS/IDEInterfaceBuilder-11542/AutolayoutFoundation/Arbitration/IBAutolayoutArbiter.m
[engine allowsResizingTopLevelView]
We should never arbitrate on a layout engine that confines the size of the top level view. This can lead to the wrong constraints: <rdar://problem/9501514>
A view (%@) in the layout engine does not have a window. If every view is not in the window, arbitration will not be possible for that view
One or more views were not in a window.
com.apple.dt.IDEInterfaceBuilder
!(({ NSError *effectiveError = (((void *)0)); NSString *effectiveFailureReason = (failureReason); if (effectiveError || effectiveFailureReason) { NSString *localizedDescription = ([NSString stringWithFormat:@"One or more views were not in a window."]); NSMutableDictionary *userInfo = [NSMutableDictionary dictionary]; [userInfo setObject:localizedDescription forKey:NSLocalizedDescriptionKey]; if (effectiveError) { [userInfo setObject:effectiveError forKey:NSUnderlyingErrorKey]; } if (effectiveFailureReason) { [userInfo setObject:effectiveFailureReason forKey:NSLocalizedFailureReasonErrorKey]; } NSString *domain = [effectiveError domain] ?: @"com.apple.dt.IDEInterfaceBuilder"; NSInteger code = (effectiveError) ? [effectiveError code] : -1; effectiveError = [NSError errorWithDomain:domain code:code userInfo:userInfo]; } effectiveError; }))
-[IBAutolayoutArbiter verifyAllRealViewsHaveWindow:]
A method claimed to have succeeded but provided an error!
(({ NSError *effectiveError = (((void *)0)); NSString *effectiveFailureReason = (failureReason); if (effectiveError || effectiveFailureReason) { NSString *localizedDescription = ([NSString stringWithFormat:@"One or more views were not in a window."]); NSMutableDictionary *userInfo = [NSMutableDictionary dictionary]; [userInfo setObject:localizedDescription forKey:NSLocalizedDescriptionKey]; if (effectiveError) { [userInfo setObject:effectiveError forKey:NSUnderlyingErrorKey]; } if (effectiveFailureReason) { [userInfo setObject:effectiveFailureReason forKey:NSLocalizedFailureReasonErrorKey]; } NSString *domain = [effectiveError domain] ?: @"com.apple.dt.IDEInterfaceBuilder"; NSInteger code = (effectiveError) ? [effectiveError code] : -1; effectiveError = [NSError errorWithDomain:domain code:code userInfo:userInfo]; } effectiveError; }))
A method claimed to have failed but provided no error!
View has untrusted ambiguity
View is marked for unconditional full arbitration
Layout engine bounds size (%@) of %@ does not match canvas bounds size (%@)
[arbitrate constraints] %@
Layout engine frame (%@) of %@ does not match canvas frame (%@)
Engine is ambiguous for view %@
View requires unconditional generation of candidates: %@: %@
[arbitrate constraints] View is not in whitelist, so ignoring request for more constraints: %@
[arbitrate constraints] Ignoring ambiguity or incorrect frame for view because it shouldn't have constraints generated for it: %@
constraint
+[IBAutolayoutArbiter attemptToAddConstraint:byModifyingLayoutEngine:mutuallyExclusiveConstraintBreakageStrategy:mutableConstraintsToAdd:mutableConstraintsToRemove:]
[constraint containingView]
[arbitrate constraints] Found over-constraining constraints when attempting to add %@: %@
B16@?0@"IBLayoutConstraint"8
[self canConsiderRemovalOfOverConstrainingConstraint:candidateOverConstrainingConstraintToRemove]
This constraint shouldn't be considered for removal. Our filter for orderedAscendingOverConstrainedConstraintsThatCanBeRemoved must have gotten something wrong.
By this point, we should have turned the default strategy into what the arbiter thinks is the default strategy.
[arbitrate constraints] Adding constraint would make system over-constrained for current breakage strategy (%@). Removing %@
[arbitrate constraints] Adding constraint would make system over-constrained, but given the current breakage strategy (%@), this is the least preferrable constraint, so ignoring this constraint
[arbitrate constraints] Adding constraint would make system over-constrained, but there is nothing else to remove (either the rest of the constraints can never be removed (e.g. system required constraints), or the current breakage strategy (%@) does not allow any added constraints to be removed, so ignoring this constraint
[arbitrate constraints] Failed to add constraint but no over constraining constraints were found, so ignoring this constraint
[arbitrate constraints] Added constraint %@
[arbitrate constraints] Found over-constraining constraints when attempting to set the layout frame of %@ to %@: %@
+[IBAutolayoutArbiter attemptToSetLayoutFrame:ofView:byModifyingLayoutEngine:mutuallyExclusiveConstraintBreakageStrategy:mutableConstraintsToAdd:mutableConstraintsToRemove:]
[arbitrate constraints] Setting frame would make system over-constrained for current breakage strategy (%@). Removing %@
[arbitrate constraints] Setting frame would make system over-constrained, but there is nothing else to remove (either the rest of the constraints can never be removed (e.g. system required constraints), or the current breakage strategy (%@) does not allow any added constraints to be removed), so ignoring setting the frame
[arbitrate constraints] Set frame of %@ to %@
[arbitrate candidates] Sorted vertical constraints: %@
[arbitrate candidates] Sorted horizontal constraints: %@
v32@?0@"IBLayoutConstraint"8@"IBLayoutConstraint"16^B24
[arbitrate constraints] Found views needing %@: %@
[arbitrate constraints] Generating %@ for view: %@
-[IBAutolayoutArbiter attemptToAddApplicableCandidateConstraintsForViews:forGenerationType:]
code which should be unreachable has been reached
[arbitrate constraints] Already generated %@ for view: %@
[arbitrate constraints] Arbitration failed for reason: %@
%@. This most likely indicates a bug involving layout of the following views:
    %@
v32@?0@"NSObject<IBAutolayoutItem>"8@"NSString"16^B24
View hierarchy:
[arbitrate constraints] Starting core arbitration
[arbitrate constraints] Starting arbitration pass %ld
Arbitration is taking %ld passes
v32@?0Q8@"NSOrderedSet"16^B24
[arbitrate constraints] <%@:%p> still doesn't have the right constraints and has already had candidate constraints generated for it, but provided views as a fallback: %@
All views needing candidate constraints have already had constraints generated
[arbitrate constraints] Arbitration is running with a whitelist, so ignoring the fact that views on the whitelist are still ambiguous or misplaced.
[arbitrate constraints] Finished arbitration pass %ld
[arbitrate constraints] All views have non-ambiguous layout and the correct frame. Arbitration took %ld pass%@.
Failed to add candidate constraints
-[IBAutolayoutArbiter addApplicableCandidateConstraints:]
(({ NSError *effectiveError = (((void *)0)); NSString *effectiveFailureReason = (failureReason); if (effectiveError || effectiveFailureReason) { NSString *localizedDescription = ([NSString stringWithFormat:@"Failed to add candidate constraints"]); NSMutableDictionary *userInfo = [NSMutableDictionary dictionary]; [userInfo setObject:localizedDescription forKey:NSLocalizedDescriptionKey]; if (effectiveError) { [userInfo setObject:effectiveError forKey:NSUnderlyingErrorKey]; } if (effectiveFailureReason) { [userInfo setObject:effectiveFailureReason forKey:NSLocalizedFailureReasonErrorKey]; } NSString *domain = [effectiveError domain] ?: @"com.apple.dt.IDEInterfaceBuilder"; NSInteger code = (effectiveError) ? [effectiveError code] : -1; effectiveError = [NSError errorWithDomain:domain code:code userInfo:userInfo]; } effectiveError; }))
[arbitrate constraints] Starting to remove redundant constraints
[arbitrate constraints] Removing redundant constraint: %@
[arbitrate constraints] Ignoring redundant constraint candidate because it is no longer redundant: %@
[arbitrate constraints] Done removing redundant constraints
[arbitrate constraints] Attempting to give another chance to constraint marked for removal because of unsatisfiability during engine bootstrapping: %@
[arbitrate constraints] Was able to add back constraint marked for removal because of unsatisfiability during engine bootstrapping: %@
[arbitrate constraints] Was unable to add back constraint marked for removal because of unsatisfiability during engine bootstrapping so actually marking for removal: %@
Starting to arbitrate over %@
Running arbitration with whitelist: %@
[arbitrate constraints] Constraints attempted to be added/removed that are already in the document: %@
Left-over temporary explicit constraint: %@
localError || localFailureReason
-[IBAutolayoutArbiter arbitrateWithOptions:]
If we don't have a result, that means we should have failed.
Failed to run arbitration with options: %@
T@"IBAutolayoutEngine",R,V_engine
constraintsToRemove
T@"NSSet",C,V_constraintsToRemove
constraintsToAdd
T@"NSSet",C,V_constraintsToAdd
Default
Prefer added constraints
Prefer engine constraints
Prefer highest scoring constraints
position and size candidate constraints
explicit size candidate constraints
temporary explicit sizing constraints
NSString *IBAutolayoutArbiterCandidateConstraintGenerationTypeHumanReadableString(IBAutolayoutArbiterCandidateConstraintGenerationType)
v32@?0r^v8r^v16^B24
ARBITRATION OPTIONS: %@
arbitrationOptions
T@"NSDictionary",R,N,V_arbitrationOptions
object
T@"NSObject",&,N,V_object
keyPath
T@"NSString",C,N,V_keyPath
postProcessingBlock
T@?,R,N,V_postProcessingBlock
requestPhase
Tq,N,V_requestPhase
resultPhase
Tq,R,N,V_resultPhase
error
-[IBAutolayoutArbitrationResult initWithError:engineDescription:]
/Library/Caches/com.apple.xbs/Sources/IBAutolayoutFoundationIOS/IDEInterfaceBuilder-11542/AutolayoutFoundation/Arbitration/IBAutolayoutArbitrationResult.m
-[IBAutolayoutArbitrationResult encodeWithBinaryArchiver:]
castedInstance
[castedInstance isKindOfClass:[NSObject class]]
%s should be an instance inheriting from %@, but it is %@
IBBinaryArchiving
[castedInstance conformsToProtocol:@protocol(IBBinaryArchiving)]
%@ should be an instance conforming to %@
T@"<IBCollection>",R,N,V_constraintsToAdd
T@"<IBCollection>",R,N,V_constraintsToRemove
errorResult
TB,R,N,GisErrorResult
T@"NSError",R,N,V_error
engineDescription
T@"NSString",R,N,V_engineDescription
ConstraintBreakageStrategy
OnlyArbitrateConstraintsForViews
AssertOnRuntimeUnsatisfiableConstraints
UpdateUnsatisfiedConstantsBeforeArbitration
KeepRedundantDocumentConstraints
RelationshipHints
v32@?0@"NSString"8@16^B24
+[IBAutolayoutArbitrationUnit arbitrationUnitForObject:withLayoutInfo:]
/Library/Caches/com.apple.xbs/Sources/IBAutolayoutFoundationIOS/IDEInterfaceBuilder-11542/AutolayoutFoundation/Arbitration/IBAutolayoutArbitrationUnit.m
method %s is a responsibility of subclasses of %@
+[IBAutolayoutArbitrationUnit arbitrationUnitsForObjects:withLayoutInfo:]
+[IBAutolayoutArbitrationUnit arbitrationUnitsAtAndBelowObject:withLayoutInfo:]
+[IBAutolayoutArbitrationUnit arbitrationUnitsAtAndBelowObjects:withLayoutInfo:]
+[IBAutolayoutArbitrationUnit allArbitrationUnitsForLayoutInfo:]
+[IBAutolayoutArbitrationUnit topMostObjectOfClass:inLineageToArbitrationUnitRootContainingObject:withLayoutInfo:]
rootObject
-[IBAutolayoutArbitrationUnit initWithRootObject:layoutInfo:]
info
 (child of %@)
An instance of %@%@ was in the arbitration unit but not in the marshalling description. The object or its parent should omit the object from the arbitration unit or include it in the marshalling description.
@16@?0@8
 rootObject=%@
@"NSArray"24@?0@8@"<IBAutolayoutInfoProvider>"16
[[self objects] containsObject:object]
-[IBAutolayoutArbitrationUnit _firstAncestorOfObject:passingPredicate:]
predicate
[[self layoutInfo] containsObject:object]
-[IBAutolayoutArbitrationUnit addObject:]
The layout information backing the arbitration unit must contain any objects added to it: %@
[arbitrate constraints] Previous arbitration failed, so trying again and turning on logging
[arbitrate constraints] Setting layout log level to verbose
[arbitrate constraints] Restoring layout log level
-[IBAutolayoutArbitrationUnit runArbitrationWithOptions:]
[ambiguousViewsToAmbiguityStatus objectForKey:view]
-[IBAutolayoutArbitrationUnit _addAmbiguityStatusGroupsToSet:fromAmbiguousViewGroups:andAmbiguousViewsToAmbiguityStatus:forOrientationMask:engine:]
ibParentItem
T@"NSObject<IBAutolayoutItem>",R,N
ibChildItemsEligibleForNearestNeighborConstraints
T@"NSArray",R,N
superview
subviews
window
T@,R,N
frame
T{CGRect={CGPoint=dd}{CGSize=dd}},N
bounds
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
translatesAutoresizingMaskIntoConstraints
TB,N
ibLayoutInset
T{?=dddd},R,N
intrinsicContentSize
T{CGSize=dd},R,N
flipped
TB,R,N,GisFlipped
baselineOffsetFromBottom
ibShadowedFirstBaselineOffsetFromTop
ibBaselineCount
Tq,R,N
constraints
ibLayoutBounds
ibLayoutFrame
ibLayoutFrameworkBounds
ibCandidateConstraints
T@"<IBOrderedCollection>",&,N
ibInstalledConstraints
ibInstalledConstraintsWithInstalledAncestors
T@"<IBOrderedCollection>",R,N
ibTurnedOnButPossiblyUninstalledConstraints
ibCandidateReferencingConstraints
T@"<IBCollection>",R,N
ibInstalledReferencingConstraints
ibTurnedOnButPossiblyUninstalledReferencingConstraints
ibExternalExplicitTranslatesAutoresizingMaskIntoConstraints
ibExternalEffectiveTranslatesAutoresizingMaskIntoConstraints
ibShadowedHorizontalContentHuggingPriority
Td,N
ibShadowedVerticalContentHuggingPriority
ibShadowedHorizontalContentCompressionResistancePriority
ibShadowedVerticalContentCompressionResistancePriority
ibFrameDecideDuringStatusUpdate
ibCanFrameDecideEvenWhenAmbiguousForNextStatusUpdate
ibIsSelfManagedContainerInEngine
ibWindowForArbitration
ibFallbackViewsForCandidateConstraintGenerationForFailedArbitration
T@"NSSet",R,N
ibIgnoreNearestNeighborProximityThreshold
[evaluate constants] Running engine evaluation of constraints: %@
@"NSNumber"16@?0@"IBLayoutConstraint"8
T@,R,V_rootObject
objects
T@"NSSet",R,C,V_objects
objectsOrderedBreadthFirst
T@"NSArray",R,C,V_objectsOrderedBreadthFirst
layoutInfo
T@"<IBAutolayoutInfoProvider>",R,V_layoutInfo
v8@?0
B16@?0@"NSObject"8
B16@?0@"IBAutolayoutAmbiguityGroup"8
IBExplicitConstraintGenerationStrategy
IBLayoutConstraint *IBLayoutConstraintCandidateByEnsuringExpectedConstantSign(IBLayoutConstraint *__strong, __strong id<IBAutolayoutInfoProvider>)
/Library/Caches/com.apple.xbs/Sources/IBAutolayoutFoundationIOS/IDEInterfaceBuilder-11542/AutolayoutFoundation/Arbitration/IBAutolayoutCandidateConstraintGenerator.m
IBEquiv(IBLayoutAttributeIsVertical([constraint firstAttribute]), IBLayoutAttributeIsVertical([constraint secondAttribute]))
Attributes need to be both vertical or both horizontal for constraint %@
ancestor
There should be a shared ancestor for the peer to peer views of constraint: %@
+[IBAutolayoutCandidateConstraintGenerator _candidateLayoutConstraintsForExactMatchesForDescendants:ofView:layoutGuideMatches:returningMatchedGuideMatches:returningMatchedViews:layoutInfo:layoutEngine:withOptions:]
[exact candidate constraints] Matching descendants %@ with layout guide matches: %@
[exact candidate constraints] %ld: descendant {{%@}} for guide match %@
[matchingConstraint isInstallable]
We shouldn't be generating a constraint on a view hierarchy that is not fully specified: %@
[exact candidate constraints] Dropping constraint because it does not match framework metrics: %@
(attribute == IBLayoutAttributeWidth) || (attribute == IBLayoutAttributeHeight)
+[IBAutolayoutCandidateConstraintGenerator candidateExplicitSizeConstraintForDescendant:withBounds:attribute:layoutInfo:]
+[IBAutolayoutCandidateConstraintGenerator candidateConstraintForDescendant:withLayoutBounds:andLayoutFrameInCoordinateSpaceOfAncestor:ancestorView:ancestorLayoutBounds:attribute:layoutInfo:scoringClass:]
Cannot generate an explicit constraint for the attribute %@
Any constraints getting returned from this method must have a containing view set
+[IBAutolayoutCandidateConstraintGenerator candidateExplicitConstraintsForDescendants:ofView:layoutInfo:withOptions:]
v16@?0Q8
edgeRelativeAttribute == IBLayoutAttributeLeading || edgeRelativeAttribute == IBLayoutAttributeTrailing || edgeRelativeAttribute == IBLayoutAttributeBottom || edgeRelativeAttribute == IBLayoutAttributeTop
+[IBAutolayoutCandidateConstraintGenerator enumerateNearestNeighborsForItem:attribute:marginRelativeToContainer:layoutInfo:withBlock:]
v44@?0@"NSObject<IBAutolayoutItem>"8d16B24@"NSObject<IBAutolayoutItem>"28d36
+[IBAutolayoutCandidateConstraintGenerator candidateLayoutConstraintsForDescendants:ofView:layoutInfo:layoutEngine:withOptions:]
[layoutInfo containsObject:ancestorView]
The ancestor view needs should be in the document
IBIsItemDescendantOfItem(descendant, ancestorView)
All views in the "descendants" set must be descendants of ancestorView
IBBitsAreAllOn(options, IBAutolayoutCandidateConstraintOptionIgnoreCandidatesFromLayoutGuideGenerator)
Cannot have a nil ancestor and want layout guide generator candidate constraints
IBBitsAreAllOn(options, IBAutolayoutCandidateConstraintOptionIgnoreCandidatesToNearestNeighbors)
Cannot have a nil ancestor and want nearest neighbor candidate constraints
IBBitsAreAllOn(options, IBAutolayoutCandidateConstraintOptionIgnoreXPositionExplicitConstraint)
Cannot have a nil ancestor and want x position candidate constraints
IBBitsAreAllOn(options, IBAutolayoutCandidateConstraintOptionIgnoreYPositionExplicitConstraint)
Cannot have a nil ancestor and want y position candidate constraints
effectiveContainingItem
+[IBAutolayoutCandidateConstraintGenerator constraintsWithVisualFormat:options:metrics:views:overridingContainingItem:scoringClass:layoutInfo:]
CONSTRAINT:
PRIORITY:
T@"IBLayoutConstraint",R,N,V_constraint
Td,R,N,V_priority
(singleMaskValue == IBLayoutOrientationMaskHorizontal) || (singleMaskValue == IBLayoutOrientationMaskVertical)
IBLayoutOrientation IBLayoutOrientationForOrientationMask(IBLayoutOrientationMask)
/Library/Caches/com.apple.xbs/Sources/IBAutolayoutFoundationIOS/IDEInterfaceBuilder-11542/AutolayoutFoundation/Model/IBAutolayoutCommon.m
You can only pass in a single mask value to this function.
(orientation == IBLayoutOrientationHorizontal) || (orientation == IBLayoutOrientationVertical)
IBLayoutOrientationMask IBLayoutOrientationMaskForOrientation(IBLayoutOrientation)
Unknown layout orientation %ld
Left
Right
Bottom
Leading
Trailing
Width
Height
Center X
Center Y
Baseline
First Baseline
None
Left Margin
Right Margin
Top Margin
Bottom Margin
Leading Margin
Trailing Margin
Center X Within Margins
Center Y Within Margins
CGFloat IBLayoutAttributeValueOfAttributeForItemInCoordinateSpaceOfItem(IBLayoutAttribute, NSObject<IBAutolayoutItem> *__strong, NSObject<IBAutolayoutItem> *__strong, IBUserInterfaceLayoutDirection)
Unknown baseline attribute %ld (%@)
(sourceView == [sourceView ibEffectiveWindowForConversions]) || IBIsItemDescendantOfItem(sourceView, inCoordinateSpaceOfView)
CGFloat IBLayoutAttributeFrameworkValueOfAttributeForViewInCoordinateSpaceOfView(IBLayoutAttribute, NSObject<IBAutolayoutItem> *__strong, NSObject<IBAutolayoutItem> *__strong, IBUserInterfaceLayoutDirection)
Cannot get value of %@ for %@ in coordinate space of %@ because it is not a descendant of the coordinate space view
(NSUInteger)convertedAttribute != NSNotFound
IBLayoutAttribute IBConvertLayoutAttributeForUserInterfaceLayoutDirection(IBLayoutAttribute, IBUserInterfaceLayoutDirection)
Unknown attribute %ld
IBLayoutAttribute IBConvertLayoutAttributeFromUserInterfaceLayoutDirection(IBLayoutAttribute, IBUserInterfaceLayoutDirection)
System Required
Connection To Superview
Matching Size Between Peers
Connection To Peer
Center Alignment to Superview
Connection Across View Boundaries
Explicit
Frame Ensuring Explicit
Custom Layout View Explicit
Temporary Arbitration Explicit
Unknown [%f]
Layout Guide
Nearest Neighbor
Arbitration Temporary Explicit
Size
Alignment
Spacing
Aspect Ratio
Matching Sizes
NSString *_IBLayoutString(NSString *__strong, __strong id, ...)
IBLayoutString only accepts instances of NSView or NSString, not %@ (%@)
NSLayoutConstraint
ALGuide_
Align
Center
Middle
-Vertical
-Horizontal
BottomToSuper
TopToSuper
RightToSuper
LeftToSuper
AspectRatio
-Equal
CONSTRAINTS:
T@"NSArray",R,N,V_constraints
{?={CGPoint=dd}{CGPoint=dd}}
q24@?0@"NSNumber"8@"NSNumber"16
Warning
-[IBLayoutConstraintDrawableProvider relativeConstraintDrawableForConstraint:]
/Library/Caches/com.apple.xbs/Sources/IBAutolayoutFoundationIOS/IDEInterfaceBuilder-11542/AutolayoutFoundation/ConstraintRendering/IBAutolayoutConstraintDrawable.m
We do not know how to draw this constraint: %@: firstItemRect=%@, secondItemRect=%@, rawFirstItemValue=%f, firstItemValue=%f, rawSecondItemValue=%f, secondItemValue=%f, computedConstant=%f, actualConstant=%f
-[IBLayoutConstraintDrawableProvider absoluteConstraintDrawableForConstraint:item:attribute:]
item
q24@?0@8@16
B40@?0{?={CGPoint=dd}{CGPoint=dd}}8
[drawable movementPriority] < kIBAutolayoutConstraintDrawableMovementPriorityImmovable
__133-[IBLayoutConstraintDrawableProvider determineConstraintDrawableGuideLines:maxGuideLineCount:forDrawables:givenMovedDrawableIndexes:]_block_invoke
Couldn't have moved an immovable drawable
!IBAutolayoutConstraintDrawableEdgeEqualToEdge([drawable leftOrBottomEdge], IBAutolayoutConstraintDrawableEdgeZero)
Moveable drawable needs a left/bottom edge
!IBAutolayoutConstraintDrawableEdgeEqualToEdge([drawable rightOrTopEdge], IBAutolayoutConstraintDrawableEdgeZero)
Moveable drawable needs a right/top edge
v24@?0Q8^B16
IBLineIsStraight(line)
-[IBLayoutConstraintDrawableProvider rectForGuideLine:]
constraintStatusProvider
T@"<IBLayoutConstraintStatusProvider>",&,N,V_constraintStatusProvider
drawingDestination
T@"<IBLayoutConstraintDrawingDestination>",&,N,V_drawingDestination
concreteConstraintProvider
T@"<IBAutolayoutConcreteConstraintProvider>",&,N,V_concreteConstraintProvider
autolayoutStatus
T@"IBAutolayoutStatus",&,N,V_autolayoutStatus
<%@:%p constraint=%@>
T@"IBLayoutConstraint",&,N,V_constraint
line
T{?={CGPoint=dd}{CGPoint=dd}},N,V_line
type
TQ,R,N,V_type
color
T@"NSColor",C,N,V_color
movementPriority
Td,R,N,V_movementPriority
leftOrBottomEdge
T{?={CGRect={CGPoint=dd}{CGSize=dd}}I{?=dd}},R,N,V_leftOrBottomEdge
rightOrTopEdge
T{?={CGRect={CGPoint=dd}{CGSize=dd}}I{?=dd}},R,N,V_rightOrTopEdge
selected
TB,N,GisSelected,V_selected
selectable
TB,N,GisSelectable,V_selectable
lineThickness
Td,N,V_lineThickness
dashed
TB,N,GisDashed,V_dashed
badgeImage
T@"NSImage",&,N,V_badgeImage
badgeSize
T{CGSize=dd},N,V_badgeSize
badgeDrawingInset
T{?=dddd},N,V_badgeDrawingInset
shouldAlwaysDrawGuideLinesIfNeeded
TB,N,V_shouldAlwaysDrawGuideLinesIfNeeded
insetToAvoidOtherDrawables
TB,N,GisInsetToAvoidOtherDrawables,V_insetToAvoidOtherDrawables
originalLineBeforeInsettingToAvoidOtherDrawables
T{?={CGPoint=dd}{CGPoint=dd}},N,V_originalLineBeforeInsettingToAvoidOtherDrawables
supportsInsettingToAvoidOtherDrawablesOrGuidelines
edgeBias
T@"NSNumber",C,N,V_edgeBias
representingSizeAttribute
TQ,N,V_representingSizeAttribute
constraintIsVertical
TB,R
isVertical
guideLines
T@"NSArray",C,N,V_guideLines
horizontal hugging
vertical hugging
horizontal compression resistance
vertical compression resistance
 view=%@ type=%ld priority=%g
affectsContentHuggingPriority
affectsContentCompressionResistancePriority
ib_shouldIgnoreConstraintInAutolayoutEngine
TB,N,Sib_setShouldIgnoreConstraintInAutolayoutEngine:
+[IBAutolayoutEngine layoutConstraintEngineForViewHierarchyOfView:layoutInfo:options:]
/Library/Caches/com.apple.xbs/Sources/IBAutolayoutFoundationIOS/IDEInterfaceBuilder-11542/AutolayoutFoundation/Arbitration/IBAutolayoutEngine.m
inArbitrationUnit
-[IBAutolayoutEngine initWithArbitrationUnit:options:]
topLevelRealView
The root object of the arbitration must return a non-nil top level view: %@
laying out engine
v24@?0@"IBLayoutConstraint"8^B16
-[IBAutolayoutEngine prepareViewHierarchyAndReturnAddedRepresentedConstraintsForRepresentedViews]
__142-[IBAutolayoutEngine performInternalEngineModificationsAndAssertOnUnsatisfiableConstraintsIfNeededDuring:withUnsatisfiableConstraintsHandler:]_block_invoke
We hit unsatisfiable constraints in the internal engine when we didn't expect to: %@
v16@?0@"NSArray"8
representedItem
__57-[IBAutolayoutEngine representedItemsOrderedBreadthFirst]_block_invoke
Should have should a represented item for %@
@"NSObject<IBAutolayoutItem>"16@?0@"NSObject<IBAutolayoutItem>"8
representedConstraint
-[IBAutolayoutEngine setRealConstraint:forRepresentedConstraint:]
@"IBLayoutConstraint"16@?0@"NSLayoutConstraint"8
-[IBAutolayoutEngine ambiguityStatusForRepresentedView:]
representedView
-[IBAutolayoutEngine ambiguityStatusForView:]
Could not find represented view for %@
-[IBAutolayoutEngine layoutFrameForView:inCoordinateSpaceOfView:]
Should have found a represented view for %@
Could not find layout engine view for view's (%@) coordinate space view %@. But the canvas coordinateSpaceView is view's superview, but the represented view doesn't even have a superview, so the conversion will most likely fail.
Could not find layout engine view for view's (%@) coordinate space view %@. But the canvas coordinateSpaceView is view's superview, so we are assuming the same in the layout engine.
Could not find layout engine view for view's (%@) coordinate space view %@
-[IBAutolayoutEngine hasMismatchedFrameOrBoundsSizeForView:expectedFrameOrBounds:actualFrameOrBounds:]
-[IBAutolayoutEngine intrinsicContentSizeForView:]
-[IBAutolayoutEngine constraintsMakingSystemOverConstrainedBySettingLayoutFrame:ofView:]
-[IBAutolayoutEngine internalEngine]
GENERAL PROPERTIES:
  topLevelRealView = %@
ARBITRATION UNIT:
CONSTRAINTS REMOVED DURING BOOTSTRAPPING:
  %@
NSIS ENGINE:
REAL TO REPRESENTED VIEW MAPPING:
  <%@:%p> ==> <%@:%p>
REAL TO REPRESENTED CONSTRAINT MAPPING:
  %@
    |=> %@
v32@?0@"IBLayoutConstraint"8@"NSLayoutConstraint"16^B24
-[IBAutolayoutEngine debugDescription]
REAL VIEW HIERARCHY:
[self representedViewForRealView:topLevelRealView]
ENGINE VIEW HIERARCHY:
SPACERS:
  %@ ==> %@
v32@?0@"NSNumber"8@16^B24
REAL VIEW ANCESTORS
%@%@ %@
ENGINE VIEW ANCESTORS
Mismatch between canvas view <%@:%p> layout frame (%@) and engine view <%@:%p> alignment rect (%@)
RECT MISMATCHES:
    
NON-INTEGRAL CONSTRAINTS:
    %@
-[IBAutolayoutEngine layoutIfNeeded]
-[IBAutolayoutEngine updateConstraintsIfNeeded]
-[IBAutolayoutEngine invalidateConstraintsForRepresentedItems:]
-[IBAutolayoutEngine _addSpacerItemWithRepresentedSuperview:initialLayoutFrame:constraintGenerationBlock:]
%s should be an instance inheriting from %@, but it is nil
%@ should be an instance conforming to %@, but it is nil
IBAutolayoutItem
[castedInstance conformsToProtocol:@protocol(IBAutolayoutItem)]
v24@?0@"NSObject<IBAutolayoutItem>"8@"NSObject<IBAutolayoutItem>"16
representedContainer
-[IBAutolayoutEngine addSpacerItemInContainer:initialLayoutFrame:generatingConstraintsForAttributes:attributeCount:]
We should have found a represented view for %@
-[IBAutolayoutEngine addSpacerItemMatchingCurrentLayoutFrameOfView:generatingConstraintsForAttributes:attributeCount:]
spacerView
-[IBAutolayoutEngine removeSpacerItemWithTag:]
Could not find a spacer view in the engine for tag %ld. Available spacers are %@
-[IBAutolayoutEngine _backingLayoutItemForSpacer:]
representedFirstView
-[IBAutolayoutEngine representedConstraintBySubstitutingRealViewsForRepresentedViewsOfConstraint:]
Should have found represented view for %@
representedSecondView
!existingConstraint
-[IBAutolayoutEngine addRepresentedConstraintForRealConstraint:]
There should not be an existing constraint in the engine for a constraint we are trying to add: %@
-[IBAutolayoutEngine tryToAddConstraint:toRepresentedView:roundingAdjustment:mutuallyExclusiveConstraints:]
operationName
-[IBAutolayoutEngine continuouslyPerformEngineBootstrappingOperationWithName:untilSuccessWhileTrackingUnsatisfiableConstraintsDuring:withUnsatisfiableConstraintRemovedHandler:]
block
[engine bootstrapping] Encountered unsatisfiable constraints while %@ during bootstrapping, removing %@ from %@. Engine constraints were: %@
[engine bootstrapping] Encountered mutually exclusive constraints while attempting to add %@, skipping %@
[engine bootstrapping] Encountered mutually exclusive constraints while attempting to add %@, removing %@
v32@?0@"NSObject<IBAutolayoutItem>"8@"NSObject<IBAutolayoutItem>"16^B24
[realConstraint containingView] == realView
__90-[IBAutolayoutEngine iterateViewsAndGenerateRepresentedConstraintsAndMapToRealConstraints]_block_invoke.696
How did we get a constraint on a view [%@] where the containing view wasn't itself? %@
v24@?0Q8Q16
-[IBAutolayoutEngine viewForApplyingSystemRequiredConstraints]
!systemRequiredBorderViewWidthConstraint
-[IBAutolayoutEngine addSystemRequiredWidthAndHeightConstraintsToRepresentedWindowBorderView]
Cannot add system required border view constraints when they are already added
!systemRequiredBorderViewHeightConstraint
systemRequiredBorderViewWidthConstraint
-[IBAutolayoutEngine removeSystemRequiredWidthAndHeightConstraintsOnRepresentedWindowBorderView]
Cannot remove system required border view constraints when they aren't added
systemRequiredBorderViewHeightConstraint
constraintsOrAbstractionsForRepresentedConstraintsBlock
-[IBAutolayoutEngine _attemptToAddConstraint:toView:returningConstraintsOrConstraintAbstractionsMakingSystemOverConstrained:constraintsOrAbstractionsForRepresentedConstraintsBlock:]
[engine bootstrapping] Found over-constraining represented constraints when attempting to add %@: %@
[engine bootstrapping] Failed to add uninstallable represented constraint %@ for %@
@"<IBCollection>"16@?0@"<IBCollection>"8
-[IBAutolayoutEngine addConstraint:toView:]
-[IBAutolayoutEngine removeConstraint:]
[[representedView constraints] containsObject:representedConstraint]
The view %@ does not contain the constraint %@
Could not find a represented constraint for %@.
It is neither in the direct mapping from real to represented constraints (constraints currently in the engine), nor was it removed during engine bootstrapping
-[IBAutolayoutEngine setConstant:ofConstraint:]
Should have found represented constraint for %@
-[IBAutolayoutEngine candidateRedundantRepresentedConstraints]
-[IBAutolayoutEngine constraintIsRedundant:]
-[IBAutolayoutEngine setContentCompressionResistancePriority:onRepresentationOfView:forOrientation:]
-[IBAutolayoutEngine setContentHuggingPriority:onRepresentationOfView:forOrientation:]
-[IBAutolayoutEngine constraintAbstractionsAffectingLayoutOfView:forOrientation:]
[workaround 13757157] Caught and ignored underlying Foundation exception %@
[workaround 13757157] The underlying exception is known and tracked by <rdar://problem/13752578>. This workaround will be removed with <rdar://problem/13757157>
-[IBAutolayoutEngine exerciseAmbiguityInLayoutForView:]
internalEngine
T@"NSISEngine",R
spacerItemClass
viewForApplyingSystemRequiredConstraints
T@"NSObject<IBAutolayoutItem>",R
candidateRedundantRepresentedConstraints
T@"NSArray",R
arbitrationUnit
T@"IBAutolayoutArbitrationUnit",R,VarbitrationUnit
options
TQ,R,Voptions
T@"<IBAutolayoutInfoProvider>",R,VlayoutInfo
realViewsOrderedBreadthFirst
allRealConstraintsCurrentlyInEngine
T@"NSSet",R
allRealConstraintsIncludingThoseRemovedDuringBootstrapping
mutuallyExclusiveConstraintsRemovedDuringBootstrapping
T@"NSSet",R,N,V_mutuallyExclusiveConstraintsRemovedDuringBootstrapping
allowsResizingTopLevelView
allowsDerivedDesignTimeDefaultIntrinsicContentSize
topMostView
T@"NSObject<IBAutolayoutItem>",R,VtopLevelRealView
shouldIntegralize
configureEngineForLiveResizing
liveResizingView
absoluteConstraintBreakageStrategyMask
breakConstraintsToAncestorsAndSiblings
breakConstraintsToDescendants
constraintPriority
contentReactionPriority
preventTopLevelResizing
resizingKnob
-[IBAbstractAutolayoutFrameDecisionDriver enumerateLayoutFramesForViews:usingBlock:]
/Library/Caches/com.apple.xbs/Sources/IBAutolayoutFoundationIOS/IDEInterfaceBuilder-11542/AutolayoutFoundation/FrameDecision/IBAutolayoutFrameDecisionDriver.m
-[IBAbstractAutolayoutFrameDecisionDriver sizeView:toLayoutSize:suggestedLayoutOrigin:mutuallyExclusiveConstraintBreakageStrategy:framePropagationBlock:]
-[IBAbstractAutolayoutFrameDecisionDriver addConstraints:replacingConstraints:enforcingCurrentSizeOfViews:mutuallyExclusiveConstraintBreakageStrategy:returningConstraintsAdded:returningConstraintsRemoved:framePropagationBlock:]
T@"IBAutolayoutArbitrationUnit",R,V_arbitrationUnit
T@"NSDictionary",R,V_options
T@"<IBAutolayoutInfoProvider>",R
-[IBAutolayoutFrameDecisionDriver initWithArbitrationUnit:initialStatus:options:]
The IBAutolayoutFrameDecisionDriverOptionLiveResizingViewKey key is required when creating a frame decision driver for live view resizing.
-[IBAutolayoutFrameDecisionDriver enumerateLayoutFramesForViews:usingBlock:]
knobObjectValue
+[IBAutolayoutFrameDecisionDriver stripOrAddAncestorAndDescendantAndSiblingConstraintsForConfiguringEngine:forLiveResizingView:layoutInfo:options:]
If providing a direction to break constraints for, the knob being resized must be supplied
absoluteConstraintBreakageStrategyMaskValue
If providing a direction to break constraints for, the absolute constraint breakage strategy mask must be supplied
+[IBAutolayoutFrameDecisionDriver removeExplicitSizingConstraintsForConfiguringEngine:forLiveResizingView:layoutInfo:options:]
The IBAutolayoutViewLiveResizingFrameDecisionOptionAbsoluteConstraintBreakageStrategyMaskKey option must be supplied
-[IBAutolayoutFrameDecisionDriver sizeView:toLayoutSize:suggestedLayoutOrigin:mutuallyExclusiveConstraintBreakageStrategy:framePropagationBlock:]
OPTIONS:
frameDecisionDriverOptions = %@
mutuallyExclusiveConstraintBreakageStrategy = %@
frameDecisionDriverOptions
T@"NSDictionary",C,N,V_frameDecisionDriverOptions
mutuallyExclusiveConstraintBreakageStrategy
T@"NSNumber",C,N,V_mutuallyExclusiveConstraintBreakageStrategy
-[IBAutolayoutFramesOnlyFrameDecisionMarshallingRequest encodeWithBinaryArchiver:]
/Library/Caches/com.apple.xbs/Sources/IBAutolayoutFoundationIOS/IDEInterfaceBuilder-11542/AutolayoutFoundation/FrameDecision/IBAutolayoutFrameDecisionMarshallingRequest.m
items = %@
initialStatus = %@
items
T@"<IBCollection>",C,N,V_items
initialStatus
T@"IBAutolayoutStatus",&,N,V_initialStatus
-[IBAutolayoutConstraintAdditionFrameDecisionMarshallingRequest initWithIdentifier:marshallableObjectPackage:arbitrationUnit:constraintsToAdd:]
-[IBAutolayoutConstraintAdditionFrameDecisionMarshallingRequest encodeWithBinaryArchiver:]
constraintsToAdd = %@
constraintsToRemove = %@
itemsToEnforceCurrentSize = %@
T@"<IBCollection>",C,N,V_constraintsToRemove
itemsToEnforceCurrentSize
T@"<IBCollection>",C,N,V_itemsToEnforceCurrentSize
itemToSize
-[IBAutolayoutItemSizingFrameDecisionMarshallingRequest initWithIdentifier:marshallableObjectPackage:arbitrationUnit:itemToSize:toLayoutFrame:]
itemToSize = %@
layoutFrame = %@
T@"NSObject<IBAutolayoutItem>",R,N,V_itemToSize
layoutFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_layoutFrame
-[IBAutolayoutFrameDecisionMarshallingResult encodeWithBinaryArchiver:]
/Library/Caches/com.apple.xbs/Sources/IBAutolayoutFoundationIOS/IDEInterfaceBuilder-11542/AutolayoutFoundation/FrameDecision/IBAutolayoutFrameDecisionMarshallingResult.m
framesByItem
T@"NSDictionary",C,N,V_framesByItem
constraintsAdded
T@"<IBCollection>",C,N,V_constraintsAdded
constraintsRemoved
T@"<IBCollection>",C,N,V_constraintsRemoved
-[NSLayoutConstraint(IBAutolayoutFrameworkSupport) effectiveValidConstant]
/Library/Caches/com.apple.xbs/Sources/IBAutolayoutFoundationIOS/IDEInterfaceBuilder-11542/AutolayoutFoundation/Utilities/IBAutolayoutFrameworkSupport.m
Found a case where a constraint does not have a valid resolvable constant. Typically this happens when a constant is attempt to be resolved outside of an engine: %@
ib_symbolicConstant
T@"NSString",C
ib_mayRequireRoundingAdjustment
ib_knownMagnitudeOfAnyRoundingAdjustment
Td,R
ib_isRedundant
effectiveValidConstant
status
T@"IBAutolayoutStatus",R,N,V_status
id _IBAutolayoutInfoProviderFirstAncestorOfObjectPassingPredicate(__strong id<IBAutolayoutInfoProvider>, __strong id, __strong IBBlockPredicate)
/Library/Caches/com.apple.xbs/Sources/IBAutolayoutFoundationIOS/IDEInterfaceBuilder-11542/AutolayoutFoundation/Model/Protocols/IBAutolayoutInfoProviderUtilities.m
[layoutInfo containsObject:object]
IBLayout
IBAutolayoutPerformanceAspect
-[IBRenderingProcessingRequest init]
/Library/Caches/com.apple.xbs/Sources/IBAutolayoutFoundationIOS/IDEInterfaceBuilder-11542/AutolayoutFoundation/SceneUpdates/IBRenderingProcessingRequest.m
sceneIdentifier
Tq,R,N,V_sceneIdentifier
shouldRequestAsynchronously
TB,R,N,V_shouldRequestAsynchronously
-[IBAutolayoutMisplacementStatus initWithView:expectedLayoutFrameOrBounds:actualLayoutFrameOrBounds:]
/Library/Caches/com.apple.xbs/Sources/IBAutolayoutFoundationIOS/IDEInterfaceBuilder-11542/AutolayoutFoundation/Arbitration/IBAutolayoutMisplacementStatus.m
<%@: %p view=%@
 expected=%@ actual=%@
expectedLayoutFrameOrBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_expectedLayoutFrameOrBounds
actualLayoutFrameOrBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_actualLayoutFrameOrBounds
hasAnyMisplacement
hasMisplacedHorizontalPosition
hasMisplacedVerticalPosition
hasMisplacedHorizontalSize
hasMisplacedVerticalSize
<%@:%p>
iteratorBlock
-[NSObject(IBAutolayoutObjectIntegration) ibRecursivelyAddSubtreeDescriptionToString:indentation:layoutInfo:withIteratorBlock:andAdditionalDescriptionsBlock:]
/Library/Caches/com.apple.xbs/Sources/IBAutolayoutFoundationIOS/IDEInterfaceBuilder-11542/AutolayoutFoundation/WidgetIntegration/IBAutolayoutObjectIntegration.m
%@<%@:%p> %@
processingResults
T@"NSArray",R,N,V_processingResults
ARBITRATION UNIT:
LAYOUT INFO:
T@"IBAutolayoutArbitrationUnit",R,N,V_arbitrationUnit
v24@?0@"IBAutolayoutAmbiguityGroup"8^B16
-[IBAutolayoutStatus enumerateAmbiguityGroupsForView:usingBlock:]
/Library/Caches/com.apple.xbs/Sources/IBAutolayoutFoundationIOS/IDEInterfaceBuilder-11542/AutolayoutFoundation/Arbitration/IBAutolayoutStatus.m
[castedInstance isKindOfClass:[IBAutolayoutAmbiguityGroup class]]
v32@?0@"NSObject<IBAutolayoutItem>"8@16^B24
v32@?0@"NSObject<IBAutolayoutItem>"8@"IBAutolayoutMisplacementStatus"16^B24
<%@: %p
 conflictingConstraintSets = {
    { 
      %@,
    },
 ambiguousViewStatusGroups = {
    orientation=%lx {
        views = {
            <%@: %p> ==> %@,
        },
        constraintsAffectingLayout = {
            %@,
 misplacedViews = {
    <%@: %p> ==> %@
hasIssues
conflictingConstraintSets
T@"NSSet",R,N,V_conflictingConstraintSets
ambiguousViewStatusGroups
T@"NSSet",R,N,V_ambiguousViewStatusGroups
misplacedViewsToMisplacementStatus
T@"NSDictionary",R,N,V_misplacedViewsToMisplacementStatus
misplacedOnlyStatusSet
T@"NSSet",R,N,V_lazyMisplacedOnlyStatusSet
viewsToLayoutFrames
T@"NSDictionary",R,N,V_viewsToLayoutFrames
frameDecidedItems
T@"NSSet",R,N,V_frameDecidedItems
T@"NSSet",R,N,V_objects
NSObject<IBAutolayoutItem> *IBViewEffectiveConstrainableViewWithLayoutInfo(NSObject<IBAutolayoutItem> *__strong, __strong id<IBAutolayoutInfoProvider>)
/Library/Caches/com.apple.xbs/Sources/IBAutolayoutFoundationIOS/IDEInterfaceBuilder-11542/AutolayoutFoundation/WidgetIntegration/IBAutolayoutViewUtilities.m
NSObject<IBAutolayoutItem> *IBViewEffectiveContainingViewForConstraintsWithLayoutInfo(NSObject<IBAutolayoutItem> *__strong, __strong id<IBAutolayoutInfoProvider>)
NSObject<IBAutolayoutItem> *IBEffectiveContainingItemForConstraintsWithLayoutInfo(NSObject<IBAutolayoutItem> *__strong, __strong id<IBAutolayoutInfoProvider>)
NSArray *IBAutolayoutItemReferencingConstraintsWithScopeInLayoutInfo(NSObject<IBAutolayoutItem> *__strong, IBReferencingConstraintScope, __strong id<IBAutolayoutInfoProvider>)
q16@?0@"IBLayoutConstraint"8
@"NSLayoutConstraint"16@?0Q8
B16@?0@"NSObject<IBAutolayoutItem>"8
v32@?0@"NSObject<IBAutolayoutItem>"8@"NSArray"16^B24
{CGSize=dd}8@?0
{CGSize=dd}16@?0@8
@"NSArray"24@?0@"NSObject<IBAutolayoutItem>"8@"<IBAutolayoutInfoProvider>"16
 view=%@ contentSize=%g attribute=%@
T@"NSObject<IBAutolayoutItem>",&,N,V_view
contentSize
Td,N,V_contentSize
attribute
TQ,N,V_attribute
 hugging=%g
huggingPriority
Td,N,V_huggingPriority
 compressionResistance=%g
compressionResistancePriority
Td,N,V_compressionResistancePriority
 constraintInDocument=%@
T@"IBLayoutConstraint",&,N,V_constraintInDocument
value
 value=%f
Td,R,V_value
symbolicValue
T@,R
shortDescription
T@"NSString",R
v32@?0@"NSObject<IBAutolayoutItem>"8@"<IBCollection>"16^B24
q24@?0@"IBLayoutConstraint"8@"IBLayoutConstraint"16
IBLayoutAttributeAffectsSize(attribute)
IBLayoutAttribute IBLayoutConstraintEffectiveAttributeForGeometricOperations(IBLayoutConstraint *__strong, IBLayoutAttribute)
/Library/Caches/com.apple.xbs/Sources/IBAutolayoutFoundationIOS/IDEInterfaceBuilder-11542/AutolayoutFoundation/Model/Constraints/IBLayoutConstraint.m
How do we have a matching size constraint with the attribute %@
ambiguity
fixed frame
multiplierString
secondAttribute
firstAttribute
containingView
placeholder
multiplier
secondItem
firstItem
relation
constant
scoringTypeFloat
scoringClass
contentType
identifier
-[IBLayoutConstraint initWithNSLayoutConstraint:layoutInfo:]
%@[%p].%@
 %@[%p].%@
 * %@
 + %@(%f)
 %c %f
 @ %f
 "%@"
 containingView={<%@:%p>}
 scoreVector=%@, roundingAdjustment=%g
-[IBLayoutConstraint hasComponentsEqualToComponentsOfRepresentation:]
[castedInstance isKindOfClass:[IBLayoutConstraint class]]
-[IBLayoutConstraint hasComponentsEqualToComponentsOfRepresentationAllowingReversing:]
-[IBLayoutConstraint absoluteGeometricDescriptionInCoordinateSpaceOfView:userInterfaceLayoutDirection:ofItem:attribute:]
(item == [self firstItem]) || (item == [self secondItem])
Item (%@) must be either the first or second item of %@
We only understand width/height, not 0x%lX
![self isAbsolute]
-[IBLayoutConstraint relativeGeometricDescriptionInCoordinateSpaceOfView:userInterfaceLayoutDirection:]
This was attempted to be called for a constraint which is absolute: %@
ABS(firstItemValue - secondItemValue) == ABS([[self constant] value])
We do not know how to get the geometry of this constraint: %@: firstItemRect=%@, secondItemRect=%@, rawFirstItemValue=%f, firstItemValue=%f, rawSecondItemValue=%f, secondItemValue=%f, computedConstant=%f, actualConstant=%f
firstItemRepresentation
TQ,R,N
secondItemRepresentation
T@"IBLayoutConstraintMultiplier",R,N
T@"IBLayoutConstant",R,N
containingViewRepresentation
scoringType
TB,R,N,GisPlaceholder
T@"NSString",R,C,N
Tq,N,V_contentType
TQ,N,V_firstAttribute
T@"NSObject<IBAutolayoutItem>",N,V_firstItem
TQ,N,V_secondAttribute
T@"NSObject<IBAutolayoutItem>",N,V_secondItem
Tq,N,V_relation
T@"IBLayoutConstraintMultiplier",&,N,V_multiplier
T@"IBLayoutConstant",&,N,V_constant
Td,N,V_priority
T@"NSObject<IBAutolayoutItem>",N,V_containingView
absolute
TB,R,N,GisAbsolute
Tq,N,V_scoringClass
Td,N,V_scoringType
inferredScoringType
TB,N,GisPlaceholder,V_placeholder
T@"NSString",C,N,V_identifier
installable
TB,R,N,GisInstallable
![constraints count] || allObjectsAreExpectedClass
NSDictionary *_IBLayoutConstraintsOrConstraintRepresentationsKeyedByContainingView(__strong id<IBCollection>, __unsafe_unretained Class, BOOL)
All objects in the constraints need to be instances of %@
[constraint containingViewRepresentation]
NSString *_IBLayoutConstraintDebugIdentifierForType(NSString *__strong, NSString *__strong, NSString *__strong)
IB auto generated at build time for view (OID %@) with %@ in %@
IB auto generated at build time for view with %@
<%@, %.2f, %ld, %@, %@, %.2f, %@>
coordinateSpaceView
CGFloat IBLayoutConstraintGeometricDescriptionDistanceToUpperLeading(IBLayoutConstraintGeometricDescription, NSObject<IBAutolayoutItem> *__strong, IBUserInterfaceLayoutDirection)
multiplierStringValue
secondItemIdentifier
firstItemIdentifier
-[IBLayoutConstraintArchivableRepresentation initWithLayoutConstraint:withRepresentationForItemBlock:]
/Library/Caches/com.apple.xbs/Sources/IBAutolayoutFoundationIOS/IDEInterfaceBuilder-11542/AutolayoutFoundation/Model/Constraints/IBLayoutConstraintArchivableRepresentation.m
_firstItemIdentifier
![constraint secondItem] || _secondItemIdentifier
If there is a second item, there needs to be a string representation for it.
 %@.%@
 containingView="%@"
 scoringClass="%@", scoringType="%@", contentType="%@"
 "%@
T@"NSString",R,N,V_firstItemIdentifier
TQ,R,N,V_firstAttribute
Tq,R,N,V_relation
T@"NSString",R,N,V_secondItemIdentifier
TQ,R,N,V_secondAttribute
T@"IBLayoutConstraintMultiplier",R,N,V_multiplier
TB,R,N,GisPlaceholder,V_placeholder
T@"IBLayoutConstant",R,N,V_constant
containingViewIdentifier
T@"NSString",R,N,V_containingViewIdentifier
Td,R,N,V_scoringType
Tq,R,N,V_scoringClass
Tq,R,N,V_contentType
T@"NSString",R,C,N,V_identifier
-[IBLayoutConstraintMultiplier init]
/Library/Caches/com.apple.xbs/Sources/IBAutolayoutFoundationIOS/IDEInterfaceBuilder-11542/AutolayoutFoundation/Model/Constraints/IBLayoutConstraintMultiplier.m
Call designated -initWithValue:stringValue: instead
<%@: %p '%@'>
-[IBLayoutConstraintMultiplier multiplierByInverting]
-[IBLayoutConstraintMultiplier multiplierByDecrementing]
-[IBLayoutConstraintMultiplier multiplierByIncrementing]
-[IBLayoutConstraintMultiplier multiplierBySimplifyingExpression]
effectiveValue
Td,R,N,V_value
stringValue
T@"NSString",R,N,V_stringValue
%g%@%g
numerator
Td,R,N,V_numerator
denominator
Td,R,N,V_denominator
separator
T@"NSString",R,N,V_separator
%g%@
percentSignSuffix
T@"NSString",R,N,V_percentSignSuffix
^[ ]*([0-9]+[\.]?[0-9]*)([ ]*[\:\/]{1}[ ]*)([0-9]+[\.]?[0-9]*)[ ]*$
^[ ]*([0-9]+[\.]?[0-9]*)([ ]*[\%])[ ]*$
^[ ]*([0-9]+[\.]?[0-9]*)[ ]*$
T@"NSObject",&,N,V_value
guides
layoutGuideMatches
coordinate
Td,V_coordinate
exclusivity
Tq,V_exclusivity
T@"NSArray",C,V_guides
T@"NSSet",C,V_layoutGuideMatches
bitmapData
T@"NSData",R,N,V_bitmapData
scaleFactor
Td,R,N,V_scaleFactor
 orientation=%c
, %@ ==> %@
-[IBAbstractUserGuide view]
/Library/Caches/com.apple.xbs/Sources/IBAutolayoutFoundationIOS/IDEInterfaceBuilder-11542/AutolayoutFoundation/LayoutGuides/IBLayoutGuide.m
T@"IBLayoutCoordinateApplicationState",R,Vx
T@"IBLayoutCoordinateApplicationState",R,Vy
allGuides
allLayoutGuideMatches
View
container
validGuides
Tq,V_validGuides
layoutGuides
T@"NSArray",&,N,V_layoutGuides
T@"NSSet",&,N,V_layoutGuideMatches
targetRect
T{CGRect={CGPoint=dd}{CGSize=dd}},V_targetRect
IBVerticalGuides
IBHorizontalGuides
IBNoGuides
{validGuides = %@, targetRect = %@, layoutGuides = %@, layoutGuideMatches = %@
{CGRect={CGPoint=dd}{CGSize=dd}}16@?0@8
[targetSuperview ibEffectiveWindowForConversions]
-[IBLayoutGuideGenerator boundingLayoutFrameForViewsNotNecessarilyInSuperview:inCoordinateSpaceOfTargetSuperview:]
/Library/Caches/com.apple.xbs/Sources/IBAutolayoutFoundationIOS/IDEInterfaceBuilder-11542/AutolayoutFoundation/LayoutGuides/IBLayoutGuideGenerator.m
In order for the correct conversion, the target superview {%@} must be in a window
{CGRect={CGPoint=dd}{CGSize=dd}}16@?0@"NSObject<IBAutolayoutItem>"8
(selectionRuleEdge == IBGuideRuleEdgeMinX) && (siblingRuleEdge == IBGuideRuleEdgeMinX)
-[IBLayoutGuideGenerator applyIndentationGuideFromEdge:ofSelectionRect:toEdge:ofSiblingRect:originalCoordinate:displayOnly:withTarget:applicationState:exclusive:]
Only support/tested min x.
v24@?0Q8d16
v32@?0@"NSNumber"8Q16^B24
IBAncestorOfItemSharedWithItem(selectedView, [self coordinateSpaceView])
-[IBLayoutGuideGenerator applyPreferredDesignSizeGuidesToViews:targetSuperview:selectionRect:knobPosition:snapDistance:displayOnly:widgetTypeSubKey:fallbackViewSubKey:fallbackContainerSubKey:applicationState:]
Makes no sense to convert rect from coordinate space view if it does not share an ancestor with selectedView
v36@?0d8B16Q20Q28
-[IBLayoutGuideGenerator applySelectionToSubviewGuidesToViews:targetSuperview:selectionRect:knobPosition:snapDistance:displayOnly:widgetTypeSubKey:fallbackViewSubKey:fallbackContainerSubKey:applicationState:]
[views count]
-[IBLayoutGuideGenerator generateGuidesForUnionedBoundingRect:ofViews:targetSuperview:siblings:baselines:knobPosition:snapDistance:optionsMask:]
@16@?0@"NSObject<IBAutolayoutItem>"8
-[IBLayoutGuideGenerator generateGuidesForRootedView:optionsMask:]
delegate
T@"<IBLayoutGuideGeneratorDelegate>",R,Vdelegate
snappingDelegate
T@"<IBLayoutGuideGeneratorSnappingDelegate>",&,V_snappingDelegate
T@"NSObject<IBAutolayoutItem>",R,VcoordinateSpaceView
fallbackWidgetType
T@"NSString",C,N,VfallbackWidgetType
fallbackContainerWidgetType
T@"NSString",C,N,VfallbackContainerWidgetType
-[IBIncrementalSetValueForKeyProcessingRequest initWithResultPhase:postProcessingBlock:]
/Library/Caches/com.apple.xbs/Sources/IBAutolayoutFoundationIOS/IDEInterfaceBuilder-11542/AutolayoutFoundation/SceneUpdates/IBIncrementalSetValueForKeyProcessingRequest.m
objectID
T@"NSString",R,C,N,V_objectID
T@"NSString",R,C,N,V_keyPath
T@"NSObject<IBBinaryArchiving>",R,N,V_value
inLayoutInfo
-[IBLayoutGuideGeneratorDelegate initWithLayoutInfo:]
/Library/Caches/com.apple.xbs/Sources/IBAutolayoutFoundationIOS/IDEInterfaceBuilder-11542/AutolayoutFoundation/LayoutGuides/IBLayoutGuideGeneratorDelegate.m
userLayoutGuides
systemLayoutGuides
 attribute="%@", relativeTo={{%@}}, relativeAttribute="%@", constant={%@}
 attribute="%@", constant={%@}
 feedbackToken="%@"
[self relativeTo]
-[IBLayoutGuideMatch exactlyMatchesView:withConstantInCoordinateSpaceOfView:userInterfaceLayoutDirection:]
/Library/Caches/com.apple.xbs/Sources/IBAutolayoutFoundationIOS/IDEInterfaceBuilder-11542/AutolayoutFoundation/Model/Constraints/IBLayoutGuideMatch.m
[exact candidate constraints] viewCoordinateSpaceConstantIsIn=%@, convertedRelativeToFrame=%@, convertedViewFrame=%@, relativeToValue = %f, viewValue=%f, constant={%@}
TB,R,GisAbsolute
TQ,R,V_attribute
relativeTo
T@"NSObject<IBAutolayoutItem>",R,V_relativeTo
relativeAttribute
TQ,R,V_relativeAttribute
T@"IBLayoutConstant",R,V_constant
feedbackToken
T@,R,V_feedbackToken
default
high
extreme
IBUseExtremeFidelitySceneUpdateRendering
q8@?0
-[IBFullSceneUpdateRequest initWithIdentifier:marshallableObjectPackage:]
/Library/Caches/com.apple.xbs/Sources/IBAutolayoutFoundationIOS/IDEInterfaceBuilder-11542/AutolayoutFoundation/SceneUpdates/IBSceneUpdateRequest.m
package
-[IBFullSceneUpdateRequest initWithIdentifier:marshallableObjectPackage:rootObject:renderingFidelity:]
_rootObject
-[IBFullSceneUpdateRequest initWithBinaryUnarchiver:]
processingRequestGroup
T@"IBSceneUpdateProcessingRequestGroup",R,N
renderingFidelity
incrementalUpdateSessionID
T@"NSString",C,N
T@"NSObject",R,N,V_rootObject
T@"IBSceneUpdateProcessingRequestGroup",R,N,V_processingRequestGroup
Tq,R,N,V_renderingFidelity
T@"NSString",C,N,V_incrementalUpdateSessionID
q24@?0@"IBSceneUpdateProcessingRequest"8@"IBSceneUpdateProcessingRequest"16
B16@?0@"IBSceneUpdateProcessingRequest"8
(result && !error) || (!result && error)
-[IBSceneUpdateProcessingRequestGroup processProcessingResultsFromSceneUpdateResult:orDeliverError:]
Must either have a result or an error but not both
[[self processingRequests] count] == [[result processingResults] count]
There must be a 1:1 correlation between the processed results and the requests that produced the results. processingRequests=%@, processingResults=%@
v24@?0@"IBSceneUpdateProcessingRequest"8@"IBSceneUpdateProcessingResult"16
processingRequests
IB_LAYOUT_RULE_PATHS
index < count
-[IBSnapSet setValue:atIndex:]
/Library/Caches/com.apple.xbs/Sources/IBAutolayoutFoundationIOS/IDEInterfaceBuilder-11542/AutolayoutFoundation/LayoutGuides/IBLayoutRuleManager.m
Index %ld outside of range [0, %ld]
%.0f
count
TC,R,Vcount
(ruleEdge != IBGuideRuleEdgeMinXIndent) && (ruleEdge != IBGuideRuleEdgeMaxXIndent)
CGRectEdge IBRectEdgeFromRuleEdge(IBGuideRuleEdge)
Invalid Edge.
(edge < countof(map))
IBGuideRuleEdge IBOppositeGuideRuleEdge(IBGuideRuleEdge)
Edge is out of bounds: %ld
!(localError)
-[IBLayoutRuleManager addLayoutRulesFromFile:error:]
(localError)
![[rules ib_objectForKey:widgetAKey inDictionaryForKey:widgetBKey] objectForKey:ruleKey]
-[IBLayoutRuleManager addLayoutRules:]
No overriding rules (%@ -> %@).
![[rules ib_objectForKey:widgetBKey inDictionaryForKey:widgetAKey] objectForKey:ruleKey]
bottom
left
right
leftIndent
rightIndent
code < (1 << 10)
-[IBLayoutRuleManager declareWidgetTypes:]
Out of codes!
widgetASubKey && widgetBSubKey
-[IBLayoutRuleManager compactRules:]
These should all have declared keys
[ruleBA isEqualToDictionary:counterRule]
-[IBLayoutRuleManager validateTextualRules:]
Layout metrics inconsistency between (%@ => %@) %@ and %@. Please file a bug against Interface Builder.
The widget type %@ has an override of the generic guide rule %@. The widget type %@ has an override of the generic opposite guide rule %@. Without a specific rule between %@ and %@ it is ambiguous which rule to use.
widgetCodes
-[IBLayoutRuleManager uniqueRuleSubKeyForWidgetType:]
NSString *IBStringFromRuleEdge(IBGuideRuleEdge)
arbitrationResult
T@"IBAutolayoutArbitrationResult",&,N,V_arbitrationResult
NSSpace
constraintAbstractions
T@"NSSet",C,N,V_constraintAbstractions
canHaveUninitializedStatus
prefersToHorizontallyResizeWithContainer
prefersToVerticallyResizeWithContainer
orientationsWithWeakInternalConstraints
derivesInternalConstraintsFromFrame
derivesDesignTimeDefaultIntrinsicContentSize
allowsSizingConstraintsWithOwnedLayout
hasReferencingConstraints
prefersMarginRelativeConstraints
hasUninitializedAutolayoutStatus
insetToDesignableContentArea
customSubviewLayoutStrategy
designableContentView
useConstraints
containerWidgetType
isHorizontallyFixed
isVerticallyFixed
hasAmbiguity
widgetType
shouldGeneratePlaceholderPositionConstraintsForUninitializedSubviews
shouldGeneratePlaceholderSizeConstraintsForUninitializedSubviews
shouldGeneratePlaceholderSizeConstraintsWhenAmbiguousKey
shouldInstallPlaceholderSizeConstraintsOnSubviewInsteadOfReceiver
priorityForPlaceholderUninitializedSubviewHorizontalConstraints
priorityForPlaceholderUninitializedSubviewVerticalConstraints
priorityForPlaceholderAmbiguousSubviewHorizontalConstraints
priorityForPlaceholderAmbiguousSubviewVerticalConstraints
inset
T{?=dddd},R,V_inset
transformedObject
__76-[IBSparseAutolayoutInfo sparseInfoOfClass:byTransformingObjectsUsingBlock:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/IBAutolayoutFoundationIOS/IDEInterfaceBuilder-11542/AutolayoutFoundation/Model/Protocols/IBSparseAutolayoutInfo.m
If you supply a objectTransformationBlock, you must not return nil for object %@
@"NSArray"16@?0@8
v24@?0@8@16
!parent || [self containsObject:parent]
-[IBSparseAutolayoutInfo addObject:toParent:]
Cannot add %@ to %@ because %@ is not in the structure.
, widget=%@
, containerWidget=%@
, designableContentView=<%@:%p>
, insetToContent=%@
, hFixed=YES
, vFixed=YES
, useConstraints=YES
, allowsSizingConstraints=YES
alwaysValid
collapsesToInvalid
none
unknown(%ld)
, customSubviewLayoutStrategy=%@
, %@WeakInternalConstraintPriority=%f
, derivesInternalConstraintsFromFrame=YES
, derivesDesignTimeDefaultIntrinsicContentSize=YES
, prefersMarginRelativeConstraints=YES
, horzResizeWithContainer=YES
, vertResizeWithContainer=YES
, hasUninitializedStatus=YES
, canBeUninitialized=YES
, hasReferencingConstraints=YES
, ambiguous=YES
, shouldGeneratePlaceholderPositionConstraintsForUninitializedSubviews=YES
, shouldGeneratePlaceholderSizeConstraintsForUninitializedSubviews=YES
, shouldGeneratePlaceholderSizeConstraintsWhenAmbiguous=YES
, shouldInstallPlaceholderSizeConstraintsOnSubviewInsteadOfReceiver=YES
, priorityForPlaceholderUninitializedSubviewHorizontalConstraintsForView=%f
, priorityForPlaceholderUninitializedSubviewVerticalConstraintsForView=%f
, priorityForPlaceholderAmbiguousSubviewHorizontalConstraintsForView=%f
, priorityForPlaceholderAmbiguousSubviewVerticalConstraintsForView=%f
@"NSString"24@?0@8@"<IBAutolayoutInfoProvider>"16
!target || [self containsObject:target]
-[IBSparseAutolayoutInfo objectsFromAncestor:toObject:]
%@ is not present in object container.
!ancestor
__55-[IBSparseAutolayoutInfo objectsFromAncestor:toObject:]_block_invoke
%@ is not an ancestor of %@.
v16@?0@8
B16@?0@"NSString"8
ViewContainer
B40@?0{?=dddd}8
B16@?0Q8
B16@?0d8
[self containsObject:object]
-[IBSparseAutolayoutInfo registerArbitrationUnit:]
When registering an arbitration unit, all of the objects in the unit must be in the layout info
-[IBSparseAutolayoutInfo sparseAutolayoutInfoForArbitrationUnit:objectTransformationBlock:]
It's illegal to get sparse info from an instance of IBSparseAutolayoutInfo. It might be the same already, it might not. This should probably be an optional method on the protocol.
layoutConstantClass
T#,R,N
userInterfaceLayoutDirection
arbitrationUnitClass
autolayoutEngineClass
symbolicLayoutConstantClass
autolayoutFrameDecisionDriverClass
generatesPrototypingConstraints
TB,N,V_generatesPrototypingConstraints
T#,R,N,V_layoutConstantClass
Tq,R,N,V_userInterfaceLayoutDirection
T#,R,N,V_arbitrationUnitClass
T#,R,N,V_autolayoutEngineClass
T#,R,N,V_symbolicLayoutConstantClass
T#,R,N,V_autolayoutFrameDecisionDriverClass
 constraint=%@
layoutConstraintBetweenViewsInDocument
T@"IBLayoutConstraint",&,N,V_layoutConstraintBetweenViewsInDocument
MbP?
@(#)PROGRAM:IBAutolayoutFoundation  PROJECT:IDEInterfaceBuilder-11542
