/System/Library/Frameworks/ReplayKit.framework
v8@?0
CFBundleDisplayName
Localizable
strings
RPBroadcastExtensionKeyBroadcastConfiguration
RPBroadcastExtensionKeyMovieClipURL
RPBroadcastExtensionKeyExtensionUserInfo
RPBroadcastExtensionKeyRequestedFinish
RPBroadcastExtensionKeyExtensionSandboxToken
v24@?0@"<NSSecureCoding>"8@"NSError"16
v32@?0@"NSExtensionItem"8Q16^B24
com.apple.share-services
NSExtensionActivationRule
NSExtensionActivationSupportsReplayStreaming
v24@?0@"NSArray"8@"NSError"16
/private/var/mobile/Library/ReplayKit/
error: %@
error = %@
v16@?0@"NSError"8
%@/%@
self BEGINSWITH[cd] %@
com.apple.ReplayKit.RPRecordingErrorDomain
Uknown recording error
The user declined application recording
Recording has been restricted in settings
Recording failed to start
Failed during recording
Insufficient storage for recording
Recording interrupted by another application
Recording interrupted by multitasking and content resizing
Unknown recording error
RPStoreInfoBundleIDKey
RPStoreInfoAppNameKey
RPStoreInfoAuthorKey
RPStoreInfoItemURLKey
RPStoreInfoCategoriesKey
bundleID
T@"NSString",&,N,V_bundleID
appName
T@"NSString",&,N,V_appName
author
T@"NSString",&,N,V_author
itemURL
T@"NSString",&,N,V_itemURL
categories
T@"NSArray",&,N,V_categories
v24@?0@"SSLookupResponse"8@"NSError"16
FBRootWindow
v12@?0B8
v24@?0@"NSError"8B16B20
v24@?0@"RPPreviewViewController"8@"NSError"16
v16@?0@"RPPreviewViewController"8
v24@?0@"NSURL"8@"NSError"16
Microphone recording must be enabled first prior to startRecording
microphoneEnabled
processIDForAudioCapture
Camera must be enabled first prior to startRecording
cameraEnabled
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
previousAudioSessionOptions
TQ,N,V_previousAudioSessionOptions
previousAudioCategory
T@"NSString",&,N,V_previousAudioCategory
recording
TB,N,GisRecording,V_recording
broadcasting
TB,N,V_broadcasting
available
TB,N,GisAvailable,V_available
systemRecording
TB,N,V_systemRecording
windowToRecord
T@"UIWindow",&,N,V_windowToRecord
pipViewController
T@"RPPipViewController",&,N,V_pipViewController
cameraPreviewView
T@"UIView",&,N,V_cameraPreviewView
saveVideoToCameraRollCompletionBlock
T@?,C,N,V_saveVideoToCameraRollCompletionBlock
systemRecordingControlCenterStartClipStartTime
T@"NSDate",&,N,V_systemRecordingControlCenterStartClipStartTime
systemRecordingControlCenterStartClipEndTime
T@"NSDate",&,N,V_systemRecordingControlCenterStartClipEndTime
systemRecordingControlCenterEndClipStartTime
T@"NSDate",&,N,V_systemRecordingControlCenterEndClipStartTime
systemRecordingControlCenterEndClipEndTime
T@"NSDate",&,N,V_systemRecordingControlCenterEndClipEndTime
systemRecordingIndicatorWindow
T@"RPSystemRecordingIndicatorWindow",&,N,V_systemRecordingIndicatorWindow
hasUserConsentForCamera
TB,N,V_hasUserConsentForCamera
hasUserConsentForMicrophone
TB,N,V_hasUserConsentForMicrophone
activeBroadcastController
T@"RPBroadcastController",&,N,V_activeBroadcastController
paused
TB,N,GisPaused,V_paused
Ti,N,SupdateProcessIDForAudioCapture:,V_processIDForAudioCapture
delegate
T@"<RPScreenRecorderDelegate>",W,N,V_delegate
TB,N,GisMicrophoneEnabled,V_microphoneEnabled
TB,N,GisCameraEnabled,V_cameraEnabled
broadcastActivityViewController
T@"RPBroadcastActivityViewController",W,N,V_broadcastActivityViewController
hostViewController
T@"RPBroadcastActivityHostViewController",W,N,V_hostViewController
pictureInPictureWindow
T@"RPPictureInPictureWindow",&,N,V_pictureInPictureWindow
previewLayer
T@"AVCaptureVideoPreviewLayer",&,N,V_previewLayer
pipSession
T@"AVCaptureSession",&,N,V_pipSession
videoDevice
T@"AVCaptureDevice",&,N,V_videoDevice
videoInput
T@"AVCaptureDeviceInput",&,N,V_videoInput
initialOrientation
Tq,N,V_initialOrientation
com.replaykit.broadcast.AudioSampleQueue
com.replaykit.broadcast.VideoSampleQueue
RPBroadcastProcessExtensionPayloadKeySampleType
RPBroadcastProcessExtensionPayloadKeyActionType
RPBroadcastProcessExtensionPayloadKeyNumSamples
RPBroadcastProcessExtensionPayloadKeyAudioBufferList
RPBroadcastProcessExtensionPayloadKeyTimingInfo
RPBroadcastProcessExtensionPayloadKeyAudioFormatDescription
connection
T@"NSXPCConnection",&,N,V_connection
daemonProxy
T@"<RPBroadcastDaemonProtocol>",&,N,V_daemonProxy
previewViewController
T@"RPPreviewViewController",W,N,V_previewViewController
hostContext
T@"RPVideoEditorExtensionHostContext",&,N,V_hostContext
T@"RPVideoEditorHostViewController",W,N,V_hostViewController
RPVideoEditorExtensionMovieURLKey
RPVideoEditorExtensionAppNameKey
RPVideoEditorExtensionBundleIdentifierKey
RPVideoEditorExtensionFileAttachmentKey
RPVideoEditorExtensionOverrideShareMessageKey
RPVideoEditorExtensionOverrideTintColorKey
srecorder
RPVideoOverlayGlyphMask
RPVideoOverlayBackgroundMask
target
T@,W,N,V_target
action
T:,N,V_action
com.apple.ReplayKit.RPBroadcastActivityViewControllerExtension
CFBundleIcons
CFBundlePrimaryIcon
CFBundleIconFiles
RPBroadcastExtensionKeyExtensionHostInfoAppName
RPBroadcastExtensionKeyExtensionHostInfoBundleID
RPBroadcastExtensionKeyExtensionHostInfoAppIcon
RPBroadcastExtensionKeyExtensionHostInfoBroadcastActivitiesNotInstalledAlertTitle
RPBroadcastExtensionKeyExtensionHostInfoBroadcastActivitiesNotInstalledAlertMessage
RPBroadcastExtensionKeyExtensionHostInfo
v16@?0@"_UIRemoteViewController"8
Error instantiating remote view controller for extension: %i
v32@?0@"<NSCopying>"8@"UIViewController"16@"NSError"24
popoverPresentationControllerProxy
T@"UIPopoverPresentationController",&,N,V_popoverPresentationControllerProxy
T@"RPBroadcastActivityHostViewController",&,N,V_hostViewController
didFinishHandler
T@?,C,N,V_didFinishHandler
T@"<RPBroadcastActivityViewControllerDelegate>",W,N,V_delegate
clipDuration
videoCompressionProperties
supportsSecureCoding
TB,R
Td,N,V_clipDuration
T@"NSDictionary",&,N,V_videoCompressionProperties
hitableView
T@"UIView",&,N,V_hitableView
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
lastTouchPoint
T{CGPoint=dd},N,V_lastTouchPoint
currentAlignment
Tq,N,V_currentAlignment
contentView
T@"UIView",N,V_contentView
MMMM d hh:mm a
activityIndicator
T@"UIActivityIndicatorView",&,N,V_activityIndicator
isShowing
TB,N,V_isShowing
RPBroadcastExtensionKeyExtensionServiceInfo
serviceInfo
T@"NSDictionary",&,N,V_serviceInfo
extensionContext
T@"NSExtensionContext",&,N,V_extensionContext
v24@?0@"NSDictionary"8@"NSError"16
TB,R,N,GisBroadcasting
TB,R,N,GisPaused
broadcastURL
T@"NSURL",R,N,V_broadcastURL
T@"<RPBroadcastControllerDelegate>",W,N,V_delegate
broadcastExtensionBundleID
T@"NSString",R,N,V_broadcastExtensionBundleID
com.apple.ReplayKit.RPVideoEditorExtension
wasStatusBarHidden
TB,N,V_wasStatusBarHidden
movieURL
T@"NSURL",&,N,V_movieURL
T@"RPVideoEditorHostViewController",&,N,V_hostViewController
previewControllerDelegate
T@"<RPPreviewViewControllerDelegate>",W,N,V_previewControllerDelegate
mode
Tq,N,V_mode
kRPBroadcastExtensionKeyExtensionServiceURL
RPBroadcastExtensionKeyExtensionBundleIdentifier
v32@?0@"NSItemProvider"8Q16^B24
T@"UIView",&,N,V_contentView
fileURLWithPath:
bundleWithURL:
localizedInfoDictionary
objectForKey:
infoDictionary
bundleWithIdentifier:
_rpLocalizedAppName
preferredLanguages
count
objectAtIndexedSubscript:
class
localizedDictionaryForLanguage:
componentsSeparatedByString:
firstObject
_rpFrameworkBundle
localizedStringForKey:value:table:
URLForResource:withExtension:subdirectory:localization:
dictionaryWithContentsOfURL:
_rpLocalizedAppNameFromBundleID:
_rpLocalizedStringFromFrameworkBundleWithKey:bundleID:
array
archivedDataWithRootObject:
alloc
init
initWithString:
setAttributedTitle:
initWithItem:typeIdentifier:
arrayWithObjects:count:
setAttachments:
addObject:
_completeRequestWithReturnItems:
extensionContext
cancelRequestWithError:
setExtensionContext:
inputItems
attachments
hasItemConformingToTypeIdentifier:
attributedTitle
string
isEqualToString:
boolValue
UTF8String
URLWithString:
processMP4ClipWithURL:setupInfo:finished:
loadItemForTypeIdentifier:options:completionHandler:
enumerateObjectsUsingBlock:
finishedProcessingMP4ClipWithUpdatedBroadcastConfiguration:error:
beginRequestWithExtensionContext:
dictionaryWithObjects:forKeys:count:
countByEnumeratingWithState:objects:count:
attributes
objectForKeyedSubscript:
isKindOfClass:
initWithApplicationExtension:
extensionsWithMatchingAttributes:completion:
streamActivitiesWithCompletion:
_srTempPath
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
defaultManager
attributesOfItemAtPath:error:
fileSize
_srDeleteFilesOlderThanTimeToLiveInSeconds:
code
contentsOfDirectoryAtPath:error:
stringWithFormat:
date
fileModificationDate
timeIntervalSinceDate:
removeItemAtPath:error:
path
fileExistsAtPath:
removeItemAtURL:error:
moveItemAtURL:toURL:error:
predicateWithFormat:
filteredArrayUsingPredicate:
_srDeviceFreeDiskSpace
attributesOfFileSystemForPath:error:
unsignedLongValue
_srSetupTempDirectory
_srSizeOfTempDir:
_srDeleteAllTempFiles
_srRemoveFile:completion:
_srMoveFileFromURL:toURL:completion:
_srDeleteFilesWithPrefix:
_srGetCreationDateForFile:
_srDeviceHasSufficientFreeSpaceForRecording
mutableCopy
dictionary
setValue:forKey:
errorWithDomain:code:userInfo:
_rpUserErrorForCode:userInfo:
setObject:forKeyedSubscript:
componentsJoinedByString:
.cxx_destruct
bundleID
setBundleID:
appName
setAppName:
author
setAuthor:
itemURL
setItemURL:
categories
setCategories:
_bundleID
_appName
_author
_itemURL
_categories
setKeyProfile:
setLocalizationStyle:
setValue:forRequestParameter:
valueForProperty:
allObjects
startWithLookupBlock:
sharedManager
loadItemDetailsForBundleIdentifier:completionHandler:
defaultCenter
updateRecordingAvailability
addObserver:selector:name:object:
removeObserver:
dealloc
sharedApplication
delegate
window
respondsToSelector:
windows
mainScreen
bounds
applicationWindow
frame
scale
windowToRecord
layer
context
contextId
beginDisablingInterfaceAutorotation
endDisablingInterfaceAutorotation
setWindowToRecord:
setSystemRecording:
_startRecordingWithMicrophoneEnabled:cameraEnabled:streamingEnabled:handler:
startRecordingWithMicrophoneEnabled:cameraEnabled:streamingEnabled:handler:
requestAccessForMediaType:completionHandler:
_isScreenRecordingAllowed
statusBarOrientation
setWindowRotationLocked:
clientWillResignActive
clientDidBecomeActive
setMicrophoneEnabled:
configureAudioSession
setCameraEnabled:
currentWindowLayerContextID
numberWithUnsignedInt:
daemonProxy
currentWindowSize
setRecording:
setBroadcasting:
restoreAudioSession
systemRecording
screenRecorder:didStopRecordingWithError:previewViewController:
isCameraEnabled
initWithOrientation:
setPipViewController:
pipViewController
view
setCameraPreviewView:
setPaused:
setSystemRecordingControlCenterStartClipStartTime:
startRecordingWindowLayerContextIDs:windowSize:microphoneEnabled:cameraEnabled:broadcast:systemRecording:withHandler:
stopRecordingWithAdditionalShareFileAttachment:overrideShareMessage:previewViewControllerOverrideTintColor:handler:
stopRecordingWithHandler:
updateProcessIDForAudioCapture:
currentDevice
userInterfaceIdiom
setModalPresentationStyle:
loadPreviewViewControllerWithMovieURL:attachmentURL:overrideShareMessage:overrideTintColor:completion:
setActiveBroadcastController:
setSystemRecordingControlCenterEndClipEndTime:
setSaveVideoToCameraRollCompletionBlock:
video:didFinishSavingToCameraRollWithError:contextInfo:
stopRecordingWithStartClipDuration:endClipDuration:handler:
discardRecordingWithHandler:
sharedInstance
previousAudioCategory
previousAudioSessionOptions
setCategory:withOptions:error:
broadcastController:didFinishWithError:
setPreviewControllerDelegate:
loadPreviewViewControllerWithMovieURL:completion:
pauseRecording
mainBundle
bundleIdentifier
clientDidResignActiveWithBundleID:
clientDidBecomeActiveWithBundleID:
resumeRecording
resumeRecordingWithWindowLayerContextID:
notifyDelegateOfRecorderAvailability
screenRecorderDidChangeAvailability:
sharedAVSystemController
attributeForKey:
_isScreenRecordingSupportedOnDevice
setAvailable:
isRecording
willChangeValueForKey:
didChangeValueForKey:
updateProcessIDForAudioCaptureWithPID:
startPipSession
stopPipSession
sharedConnection
effectiveBoolValueForSetting:
sharedRecorder
previewControllerDidFinish:
previewController:didFinishWithActivityTypes:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
navigationController:willShowViewController:animated:
navigationController:didShowViewController:animated:
navigationControllerSupportedInterfaceOrientations:
navigationControllerPreferredInterfaceOrientationForPresentation:
navigationController:interactionControllerForAnimationController:
navigationController:animationControllerForOperation:fromViewController:toViewController:
prepareForPopoverPresentation:
popoverPresentationControllerShouldDismissPopover:
popoverPresentationControllerDidDismissPopover:
popoverPresentationController:willRepositionPopoverToRect:inView:
adaptivePresentationStyleForPresentationController:
adaptivePresentationStyleForPresentationController:traitCollection:
presentationController:viewControllerForAdaptivePresentationStyle:
presentationController:willPresentWithAdaptiveStyle:transitionCoordinator:
startRecordingWithMicrophoneEnabled:windowToRecord:systemRecording:handler:
startBroadcastWithHandler:
startRecordingWithHandler:
startRecordingWithMicrophoneEnabled:handler:
stopBroadcastWithHandler:
stopRecordingAndSaveToCameraRoll:
stopRecordingWithVideoURLHandler:
stopRecordingWithError:movieURL:
setDelegate:
controlCenterWillPresent
controlCenterDidDismiss
isAvailable
isMicrophoneEnabled
cameraPreviewView
setPreviousAudioSessionOptions:
setPreviousAudioCategory:
broadcasting
saveVideoToCameraRollCompletionBlock
systemRecordingControlCenterStartClipStartTime
systemRecordingControlCenterStartClipEndTime
setSystemRecordingControlCenterStartClipEndTime:
systemRecordingControlCenterEndClipStartTime
setSystemRecordingControlCenterEndClipStartTime:
systemRecordingControlCenterEndClipEndTime
systemRecordingIndicatorWindow
setSystemRecordingIndicatorWindow:
hasUserConsentForCamera
setHasUserConsentForCamera:
hasUserConsentForMicrophone
setHasUserConsentForMicrophone:
activeBroadcastController
isPaused
processIDForAudioCapture
_available
_recording
_microphoneEnabled
_cameraEnabled
_broadcasting
_systemRecording
_hasUserConsentForCamera
_hasUserConsentForMicrophone
_paused
_processIDForAudioCapture
_delegate
_cameraPreviewView
_previousAudioSessionOptions
_previousAudioCategory
_windowToRecord
_pipViewController
_saveVideoToCameraRollCompletionBlock
_systemRecordingControlCenterStartClipStartTime
_systemRecordingControlCenterStartClipEndTime
_systemRecordingControlCenterEndClipStartTime
_systemRecordingControlCenterEndClipEndTime
_systemRecordingIndicatorWindow
_activeBroadcastController
hitTest:withEvent:
viewDidLoad
clearColor
setBackgroundColor:
openURL:options:completionHandler:
broadcastActivityViewController:didFinishWithBroadcastController:error:
initWithExtensionBundleID:broadcastURL:
popoverPresentationController
sourceView
sourceRect
superview
convertRect:toView:
arrowDirection
popoverControllerSourceRect
modalPresentationStyle
popoverArrowDirection
extensionDidFinishWithLaunchURL:broadcastURL:extensionBundleID:cancelled:
presentationInfoWithCompletion:
broadcastActivityViewController
setBroadcastActivityViewController:
_broadcastActivityViewController
interfaceWithProtocol:
_auxiliaryConnection
remoteObjectProxyWithErrorHandler:
_extensionAuxiliaryVendorProtocol
_extensionAuxiliaryHostProtocol
extensionObjectProxy
hostViewController
setHostViewController:
_hostViewController
initWithFrame:
setPictureInPictureWindow:
setRootViewController:
setUserInteractionEnabled:
setHidden:
setOpaque:
setContentView:
sharedController
showPictureInPictureWindowWithContentView:
hidePictureInPictureWindow
pictureInPictureWindow
_pictureInPictureWindow
previewLayer
setFrame:
setMasksToBounds:
setPreviewLayer:
addSublayer:
layoutSubviews
addPreviewLayer:
_previewLayer
setInitialOrientation:
setPipSession:
pipSession
setSessionPreset:
devicesWithMediaType:
position
setVideoDevice:
videoDevice
initWithDevice:error:
setVideoInput:
videoInput
canAddInput:
addInput:
initWithSession:
setVideoGravity:
setZPosition:
_pipView
startRunning
stopRunning
setView:
_updateViewGeometry
setUpPipSession
viewWillAppear:
connection
_captureVideoOrientationForUIDeviceOrientation:
setVideoOrientation:
viewDidAppear:
isInterfaceAutorotationDisabled
_deviceOrientationDidChange
beginGeneratingDeviceOrientationNotifications
viewDidDisappear:
endGeneratingDeviceOrientationNotifications
orientation
animateWithDuration:animations:
loadView
initialOrientation
_pipSession
_videoDevice
_videoInput
_initialOrientation
updateServiceInfo:
finishBroadcastWithError:
_setupListenerWithEndpoint:
integerValue
_processPayloadWithVideoSample:
_processPayloadWithAudioSample:type:
broadcastStartedWithSetupInfo:
broadcastPaused
broadcastResumed
broadcastFinished
completeRequestReturningItems:completionHandler:
audioQueue
_audioBufferListFromData:
getBytes:length:
processSampleBuffer:withType:
length
bytes
_processPayload:
videoQueue
processPayload:completion:
setConnection:
setDaemonProxy:
_connection
_daemonProxy
previewViewController
extensionDidFinishWithActivityTypes:
setPreviewViewController:
hostContext
setHostContext:
_previewViewController
_hostContext
URLForResource:withExtension:
setServiceInfo:
broadcastController:didUpdateServiceInfo:
retainArguments
invoke
null
setTarget:
replacementObjectForXPCConnection:encoder:object:
connection:handleInvocation:isReply:
setupBroadcastWithHostBundleID:broadcastExtensionBundleID:broadcastConfigurationData:userInfo:handler:
updateBroadcastServiceInfo:
_graphicsQuality
initWithStyle:
_srVideoOverlayButtonWithStyle:
bundleForClass:
imageNamed:inBundle:
setImage:forState:
sizeToFit
_playButtonTapped:
addTarget:action:forControlEvents:
_playButtonActivate:
_playButtonDeactivate:
setDeliversTouchesForGesturesToSuperview:
addSubview:
setAutoresizingMask:
initWithImage:
initWithPrivateStyle:
insertSubview:belowSubview:
_setBackdropMaskViewFlags:
setAlpha:
updateMaskViewsForView:
style
setTarget:action:
target
action
setAction:
_style
_button
_backdropView
_target
_action
_normalButtonImage
_highlightedButtonImage
_handleTap:
_createOverlayImageWithBackgroundWhite:backgroundAlpha:glyphAlpha:
size
drawAtPoint:blendMode:alpha:
loadBroadcastActivityViewControllerWithHandler:broadcastActivitiesNotInstalledAlertTitle:broadcastActivitiesNotInstalledAlertMessage:
extensionWithIdentifier:error:
setDidFinishHandler:
imageNamed:
initWithString:attributes:
addChildViewController:
didMoveToParentViewController:
viewControllerForExtension:inputItems:completionHandler:
_extensionContextForUUID:
instantiateViewControllerWithInputItems:connectionHandler:
initWithPresentedViewController:presentingViewController:
setPopoverPresentationControllerProxy:
dismissViewControllerAnimated:completion:
loadBroadcastActivityViewControllerWithHandler:
popoverPresentationControllerProxy
didFinishHandler
_popoverPresentationControllerProxy
_didFinishHandler
decodeObjectOfClass:forKey:
doubleValue
numberWithDouble:
encodeObject:forKey:
allValues
supportsSecureCoding
encodeWithCoder:
initWithCoder:
clipDuration
setClipDuration:
videoCompressionProperties
setVideoCompressionProperties:
_clipDuration
_videoCompressionProperties
convertPoint:toView:
pointInside:withEvent:
setHitableView:
hitableView
_hitableView
viewDidPan:
initWithTarget:action:
addGestureRecognizer:
updateContentViewWithAlignment:size:
state
removeAllAnimations
translationInView:
center
setCenter:
setTranslation:inView:
setCurrentAlignment:
contentView
animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:
viewWillTransitionToSize:withTransitionCoordinator:
animateAlongsideTransition:completion:
supportedInterfaceOrientations
shouldAutorotate
lastTouchPoint
setLastTouchPoint:
currentAlignment
_contentView
_currentAlignment
_lastTouchPoint
setDateFormat:
timeZoneWithName:
setTimeZone:
stringFromDate:
_srGetStringFromDate:
colorWithWhite:alpha:
initWithActivityIndicatorStyle:
setActivityIndicator:
startAnimating
animateWithDuration:animations:completion:
removeFromSuperview
setupOverlayAnimated:
tearDownOverlayAnimated:
activityIndicator
setShowing:animated:
stopActivity
isShowing
setIsShowing:
_isShowing
_activityIndicator
arrayByAddingObject:
serviceInfo
_serviceInfo
_extensionContext
isBroadcasting
pauseBroadcast
resumeBroadcast
finishBroadcastWithHandler:
broadcastURL
broadcastExtensionBundleID
_broadcastURL
_broadcastExtensionBundleID
isStatusBarHidden
setWasStatusBarHidden:
setStatusBarHidden:
viewWillDisappear:
wasStatusBarHidden
setMovieURL:
setWithArray:
previewControllerDelegate
videoEditor:didFinishWithActivityTypes:
mode
setMode:
movieURL
_wasStatusBarHidden
_previewControllerDelegate
_mode
_movieURL
completeRequestWithBroadcastURL:broadcastConfiguration:setupInfo:
loadBroadcastingApplicationInfoWithCompletion:
RPExtensions
RPBroadcastMP4ClipHandler
ReplayKitErrors
RPStoreInfo
RPStoreManager
RPScreenRecorder
RPPreviewViewControllerDelegate
NSObject
UINavigationControllerDelegate
UIPopoverPresentationControllerDelegate
UIAdaptivePresentationControllerDelegate
RPSystemRecordingIndicatorWindow
RPBroadcastActivityHostViewController
RPBroadcastActivityCommunicationHostProtocol
RPBroadcastActivityCommunicationProtocol
RPBroadcastActivityExtensionHostContext
RPPictureInPictureController
RPPipView
RPPipViewController
RPSharedConstants
RPBroadcastSampleHandler
RPVideoEditorHostViewController
RPVideoEditorExtensionHostProtocol
RPVideoEditorExtensionProtocol
RPVideoEditorExtensionHostContext
RPDaemonProxy
NSXPCConnectionDelegate
RPDaemonProtocol
RPClientProtocol
RPVideoOverlayButton
RPHighFidelityVideoOverlayButton
RPFlatVideoOverlayButton
RPBroadcastActivityViewController
RPBroadcastConfiguration
NSCoding
NSSecureCoding
RPPassThroughView
RPPictureInPictureViewController
RPYouTubeActivityProgressOverlay
RPBroadcastHandler
NSExtensionRequestHandling
RPBroadcastController
RPPreviewViewController
RPVideoEditorViewControllerDelegate
RPBroadcastExtension
RPPictureInPictureWindow
@16@0:8
@24@0:8@16
@32@0:8@16@24
v36@0:8@16@24B32
v32@0:8@16@24
v24@0:8@16
v24@0:8@?16
v16@0:8
q24@0:8^@16
q16@0:8
q24@0:8d16
v32@0:8@16@?24
v40@0:8@16@24@?32
B16@0:8
Q16@0:8
@32@0:8q16@24
@"NSString"
@"NSArray"
v24@0:8@"RPPreviewViewController"16
v32@0:8@"RPPreviewViewController"16@"NSSet"24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v36@0:8@"UINavigationController"16@"UIViewController"24B32
Q24@0:8@16
Q24@0:8@"UINavigationController"16
q24@0:8@16
q24@0:8@"UINavigationController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UINavigationController"16@"<UIViewControllerAnimatedTransitioning>"24
@48@0:8@16q24@32@40
@"<UIViewControllerAnimatedTransitioning>"48@0:8@"UINavigationController"16q24@"UIViewController"32@"UIViewController"40
v24@0:8@"UIPopoverPresentationController"16
B24@0:8@"UIPopoverPresentationController"16
v40@0:8@16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32
v40@0:8@"UIPopoverPresentationController"16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32
q24@0:8@"UIPresentationController"16
q32@0:8@16@24
q32@0:8@"UIPresentationController"16@"UITraitCollection"24
@32@0:8@16q24
@"UIViewController"32@0:8@"UIPresentationController"16q24
v40@0:8@16q24@32
v40@0:8@"UIPresentationController"16q24@"<UIViewControllerTransitionCoordinator>"32
{CGSize=dd}16@0:8
I16@0:8
v20@0:8B16
v40@0:8B16@20B28@?32
v28@0:8B16@?20
v36@0:8B16B20B24@?28
v48@0:8@16@24@32@?40
v40@0:8@16@24^v32
v20@0:8i16
v24@0:8Q16
@?16@0:8
i16@0:8
@"<RPScreenRecorderDelegate>"
@"UIView"
@"UIWindow"
@"RPPipViewController"
@"NSDate"
@"RPSystemRecordingIndicatorWindow"
@"RPBroadcastController"
@40@0:8{CGPoint=dd}16@32
Vv44@0:8@16@24@32B40
Vv44@0:8@"NSURL"16@"NSURL"24@"NSString"32B40
Vv24@0:8@?16
Vv24@0:8@?<v@?q{CGRect={CGPoint=dd}{CGSize=dd}}Q>16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"RPBroadcastActivityViewController"
@"RPBroadcastActivityHostViewController"
@"RPPictureInPictureWindow"
@"AVCaptureVideoPreviewLayer"
@24@0:8q16
q24@0:8q16
v24@0:8q16
@"AVCaptureSession"
@"AVCaptureDevice"
@"AVCaptureDeviceInput"
v32@0:8^{opaqueCMSampleBuffer=}16q24
v32@0:8@16q24
^{AudioBufferList=I[1{AudioBuffer=II^v}]}24@0:8@16
@"NSXPCConnection"
@"<RPBroadcastDaemonProtocol>"
Vv24@0:8@16
Vv24@0:8@"NSArray"16
@"RPPreviewViewController"
@"RPVideoEditorExtensionHostContext"
@"RPVideoEditorHostViewController"
@40@0:8@16@24@32
@"<NSSecureCoding>"40@0:8@"NSXPCConnection"16@"NSXPCCoder"24@32
v36@0:8@"NSXPCConnection"16@"NSInvocation"24B32
Vv64@0:8@16{CGSize=dd}24B40B44B48B52@?56
Vv64@0:8@"NSArray"16{CGSize=dd}24B40B44B48B52@?<v@?@"NSError"BB>56
Vv56@0:8@16@24@32@40@?48
Vv56@0:8@"NSString"16@"NSString"24@"NSData"32@"NSDictionary"40@?<v@?@"NSError">48
Vv24@0:8@?<v@?@"NSURL"@"NSError">16
Vv40@0:8d16d24@?32
Vv40@0:8d16d24@?<v@?@"NSURL"@"NSError">32
Vv20@0:8I16
Vv20@0:8B16
Vv20@0:8i16
Vv24@0:8@?<v@?>16
Vv24@0:8@"NSString"16
Vv32@0:8@16@24
Vv32@0:8@"NSError"16@"NSURL"24
Vv24@0:8@"NSDictionary"16
v32@0:8@16:24
:16@0:8
v24@0:8:16
@"UIButton"
@"_UIBackdropView"
@40@0:8d16d24d32
v40@0:8@?16@24@32
@"<RPBroadcastActivityViewControllerDelegate>"
@"UIPopoverPresentationController"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
d16@0:8
v24@0:8d16
@"NSDictionary"
B40@0:8{CGPoint=dd}16@32
v40@0:8q16{CGSize=dd}24
v40@0:8{CGSize=dd}16@32
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
{CGPoint="x"d"y"d}
v24@0:8B16B20
@"UIActivityIndicatorView"
v24@0:8@"NSExtensionContext"16
@"NSExtensionContext"
@"NSURL"
@"<RPBroadcastControllerDelegate>"
v56@0:8@16@24@32@40@?48
v32@0:8@"RPVideoEditorViewController"16@"NSArray"24
@"<RPPreviewViewControllerDelegate>"
v40@0:8@16@24@32
broadcast configuration = %@
beginRequestWithExtensionContext
Error loading input item for type
received movie clip URL
received user info
received request finished
received sandbox token
received all data, consuming sandbox token
calling subclass method
_srSetupTempDirectory
error creating temp directory
_srDeleteFilesOlderThanTimeToLiveInSeconds: %i
error in _rkRemoveFile_srDeleteFilesOlderThanTimeToLiveInSeconds, error code: %i
deleting old file
_rkRemoveFile error: %i
_rkMoveFileFromURL error: %i
_rkDeleteFilesWithPrefix error: %i
RPScreenRecorder: appWindow: app doesn't have the window property set on UIApplicationDelegate. Using first window.
RPScreenRecorder: setWindowRotationLocked: %i
disabling autorotation
enabling autorotation
startRecordingWithMicrophoneAndCameraEnabled: start recording
failed to start recording with error code %i
startRecordingWithMicrophoneEnabled...: error: %i
startRecordingWithMicrophoneEnabled: finished start recording, calling handler
RPScreenRecorder: stop recording error: %i
RPScreenRecorder: stop recording successful
RPScreenRecorder: notifyDelegateOfRecorderAvailability
RPScreenRecorder: updateRecordingAvailability
recording unavailable
recording available
error calling extension - %i
completed extension request
RPVideoEditorHostViewController:extensionsDidFinish
RPVideoEditorExtensionHostContext:extensionsDidFinish
RPDaemonProxy: stopRecordingWithError:movieURL:
RPDaemonProxy: updateBroadcastServiceInfo:
RPDaemonProxy: connection: handleInvocation:
RPDaemonProxy: connection: handleInvocation: recieved reply for invocation
RPDaemonProxy: connection: handleInvocation: did not recieve reply for invocation
RPVideoPreviewViewController:loadPreviewViewControllerWithCompletion
error getting extension: %i
RPPreviewViewController:viewControllerForExtension
Error instantiating remote view controller for extension: %i
RPPreviewViewController:extensionDidFinish
?333333
?@(#)PROGRAM:ReplayKit  PROJECT:ReplayKit-1
