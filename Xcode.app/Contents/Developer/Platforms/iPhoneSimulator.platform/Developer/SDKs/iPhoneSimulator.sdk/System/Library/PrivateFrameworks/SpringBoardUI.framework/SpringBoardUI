?333333
H;J$
initWithTarget:action:
alloc
init
_setForceLevelClassifier:
numberWithInteger:
arrayWithObjects:count:
setAllowedTouchTypes:
setMinimumPressDuration:
setRequiredPreviewForceState:
removeProgressObserver:
dealloc
percentComplete
velocity
reset
touchesBegan:withEvent:
view
setView:
_initWithView:targetState:minimumRequiredState:useLinearClassifier:
addProgressObserver:
allowedTouchTypes
countByEnumeratingWithState:objects:count:
type
containsObject:
interactionProgressDidUpdate:
interactionProgress:didEnd:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
pressDuration
relativeTouchForce
touchForceVelocity
_gestureRecognizerWillHandleTouches:
.cxx_destruct
forceTouchCompleted
_initialMediaTime
_interactionProgress
_forceTouchCompleted
uiEnvironment
setUiEnvironment:
hideOtherWindowsDuringAppearance
setHideOtherWindowsDuringAppearance:
_uiEnvironment
_hideOtherWindowsDuringAppearance
initWithURL:
isValid
isCallAction
_dialRequest
setElement:
overrideForElement:
setHidden:
descriptionWithMultilinePrefix:
succinctDescriptionBuilder
build
builderWithObject:
appendObject:withName:
appendBool:withName:
appendString:withName:skipIfEmpty:
appendObject:withName:skipIfNil:
descriptionBuilderWithMultilinePrefix:
overrideForHiddenElement:
succinctDescription
element
isHidden
text
setText:
color
setColor:
_hidden
_element
_text
_color
initWithNibName:bundle:
_layoutForDataProvider:
sharedInstance
warmUpForFeedback:withReason:
raise:format:
initWithDataProvider:
coolDownForFeedback:withReason:
initWithCoder:
initWithFrame:
dataProvider
layout
_setLayoutDebuggingIdentifier:
setTranslatesAutoresizingMaskIntoConstraints:
addSubview:
parallaxSettings
newIconViewCopy
initWithIconView:
setAlpha:
primaryViewController
initWithChildViewController:
iconImageCornerRadius
_setContinuousCornerRadius:
setClipsToBounds:
addChildViewController:
didMoveToParentViewController:
secondaryViewController
setContentAlpha:
insertSubview:below:
dictionaryWithObjects:forKeys:count:
constraintsWithVisualFormat:options:metrics:views:
activateConstraints:
iconViewFrame
mainScreen
fixedCoordinateSpace
convertRect:fromCoordinateSpace:
numberWithDouble:
iconImageInsets
addObjectsFromArray:
leftAnchor
constraintEqualToAnchor:
addObject:
rightAnchor
topAnchor
bottomAnchor
constraintEqualToAnchor:constant:
heightAnchor
widthAnchor
arrayWithArray:
setPriority:
constraintLessThanOrEqualToAnchor:constant:
constraintGreaterThanOrEqualToAnchor:constant:
centerXAnchor
trailingAnchor
centerYAnchor
numberWithFloat:
setDidMoveToWindowHandler:
_handleTapGestureRecognizer:
setDelegate:
addGestureRecognizer:
viewDidLayoutSubviews
contentNativeSize
bounds
childViewController
intrinsicContentSize
systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:
setContentNativeSize:
_peekAnimated:withRelativeTouchForce:allowSmoothing:completionHandler:
count
removeAllObjects
actuateFeedback:
_presentAnimated:withCompletionHandler:
dismissAnimated:withCompletionHandler:
copy
delegate
iconForceTouchViewControllerDidDismiss:
iconForceTouchViewControllerWillDismiss:
_dismissAnimated:withCompletionHandler:
activeInterfaceOrientation
gestureRecognizer
window
screen
coordinateSpace
layoutStyle
_revealWithRelativeForce:
setTransform:
_scaleIconViewWithPercent:
animateWithDuration:animations:completion:
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
wrapperViewCornerRadius
layoutIfNeeded
deactivateConstraints:
beginAppearanceTransition:animated:
setGaussianBlurRadius:
endAppearanceTransition
animateWithSettings:actions:completion:
runningPropertyAnimatorWithDuration:delay:options:animations:completion:
initWithDuration:curve:animations:
addCompletion:
startAnimation
setEffectStrength:
zoomDownView
zoomDownCenter
state
locationInView:
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
loadView
shouldAutomaticallyForwardAppearanceMethods
peekAnimated:withRelativeTouchForce:allowSmoothing:
presentAnimated:withCompletionHandler:
_visualEffectView
_parallaxView
_iconViewWrapperViewBelow
_primaryViewController
_secondaryViewController
_iconViewWrapperViewAbove
_initialLayoutConstraints
_showingLayoutConstraints
_presentCompletionHandlers
_dismissCompletionHandlers
_smoothedValue
_currentPeekProgress
_dataProvider
_state
_layout
_delegate
functionWithName:
settingsWithDuration:timingFunction:
functionWithControlPoints::::
settingsWithMass:stiffness:damping:timingFunction:
mutableCopy
setSpeed:
bundleForClass:
sbui_effectiveWindowForIsolation
_alertItemsController
activateAlertItem:
dismissOnLock
didPlayPresentationSound
sound
playInEvironments:completion:
deactivateForReason:
deactivateAlertItem:reason:
_setPresented:
_clearAlertController
setAlertItem:
setPreferredStyle:
configure:requirePasscodeForActions:
defaultCenter
postNotificationName:object:userInfo:
alertItemDidAppear
alertItemDidDisappear
initWithContentsOfFile:
alertController
contentViewController
sb_hasActiveKeyboardOnScreen
deactivate
deactivateForButton
lockLabel
shortLockLabel
performUnlockAction
allowMenuButtonDismissal
allowLockScreenDismissal
shouldShowInLockScreen
shouldShowInEmergencyCall
undimsScreen
unlocksScreen
reappearsAfterLock
reappearsAfterUnlock
playPresentationSound
didFailToActivate
willActivate
didActivate
willRelockForButtonPress:
willDeactivateForReason:
didDeactivateForReason:
forcesModalAlertAppearance
behavesSuperModally
allowInLoginWindow
alertPriority
dismissesOverlaysOnLockScreen
doCleanupAfterDeactivationAnimation
_deactivationCompleted
_alertController
_prepareNewAlertControllerWithLockedState:requirePasscodeForActions:
_iconImage
_attachmentImage
_noteVolumeOrLockPressed
_preventLockOver
_hasActiveKeyboardOnScreen
_didEverActivate
_displayActionButtonOnLockScreen
_publicDescription
dismiss
dismiss:
buttonDismissed
ignoreIfAlreadyDisplaying
setIgnoreIfAlreadyDisplaying:
allowInSetup
setAllowInSetup:
pendInSetupIfNotAllowed
setPendInSetupIfNotAllowed:
pendWhileKeyBagLocked
setPendWhileKeyBagLocked:
allowedBundleIDs
setAllowedBundleIDs:
allowInCar
setAllowInCar:
allowMessageInCar
setAllowMessageInCar:
_isPresented
_iconImagePath
setIconImagePath:
_attachmentImagePath
setAttachmentImagePath:
_allowedBundleIDs
_didEverDeactivate
_ignoreIfAlreadyDisplaying
_didPlayPresentationSound
_allowInSetup
_pendInSetupIfNotAllowed
_pendWhileKeyBagLocked
_allowInCar
_allowMessageInCar
_presented
badgeView
setBadgeView:
builder
appendObject:
identifier
clientSettings
diffFromSettings:toSettings:
client:didUpdateClientSettings:withDiff:transitionContext:
setClientSettings:
client:didReceiveActions:
client:attachLayer:
client:detachLayer:
removeObject:
display
setSettings:
allObjects
appendArraySection:withName:skipIfEmpty:
appendBodySectionWithName:multilinePrefix:block:
host:configureWithDefinition:parameters:
host:didUpdateSettings:withDiff:transitionContext:completion:
host:didInvalidateWithTransitionContext:completion:
host:didReceiveActions:
host:configureWithInitialClientSettings:
initWithIdentifier:
updateClientSettingsWithBlock:
sendActions:
attachLayer:
detachLayer:
settings
layers
_valid
_identifier
_display
_sceneHost
_settings
_clientSettings
_layers
viewDidDisappear:
alertControllerDidDisappear:
title
appendString:withName:
alertItem
alertControllerDelegate
setAlertControllerDelegate:
_alertItem
_alertControllerDelegate
iconForceTouchController:iconImageInsetsForGestureRecognizer:
iconForceTouchController:iconImageCornerRadiusForGestureRecognizer:
iconForceTouchController:wrapperViewCornerRadiusForGestureRecognizer:
iconForceTouchController:parallaxSettingsForGestureRecognizer:
iconForceTouchController:zoomDownViewForGestureRecognizer:
iconForceTouchController:zoomDownCenterForGestureRecognizer:
initWithDataSource:controller:gestureRecognizer:
dataSource
controller
iconForceTouchController:layoutStyleForGestureRecognizer:
iconForceTouchController:iconViewFrameForGestureRecognizer:
iconForceTouchController:primaryViewControllerForGestureRecognizer:
iconForceTouchController:secondaryViewControllerForGestureRecognizer:
iconForceTouchController:newIconViewCopyForGestureRecognizer:
_dataSourceRespondsTo
_dataSource
_controller
_gestureRecognizer
array
componentsJoinedByString:
green
blue
alpha
colorWithRed:green:blue:alpha:
uiColor
initWithActions:gestureRecognizer:
actions
reversesActions
reverseObjectEnumerator
imagePosition
initWithAction:
setImagePosition:
initWithArrangedSubviews:
setAxis:
_updateKeylineViews
setActive:
_handleLongPressGestureRecognizer:
retargetBehaviorWithStyle:coordinateSpace:
viewDidAppear:
addTarget:action:
viewWillDisappear:
removeTarget:action:
isViewLoaded
arrangedSubviews
addArrangedSubview:
actionPlatterViewControllerShouldRespondToTouches:
subviews
removeFromSuperview
objectAtIndexedSubscript:
isActive
activateWithCompletionBlock:
setHighlighted:withFeedbackRetargetBehavior:
action
handler
setHighlighted:
setReversesActions:
_delegateRespondsTo
_stackView
_keylinesContainerView
_feedbackRetargetBehavior
_reversesActions
_actions
_imagePosition
isInCallAction
isSlidingViewController
activateAlertForController:animated:animateCurrentDisplayOut:withDelay:isSlidingDisplay:
deactivateAlertForController:animated:animateOldDisplayInWithStyle:isSlidingDisplay:
setWallpaperTunnelActive:forFullscreenAlertController:
factoryWithDuration:
_adapterForController:
setBackgroundStyle:withAnimationFactory:
removeBackgroundStyleWithAnimationFactory:
viewDidLoad
updateInterfaceOrientationIfNecessary
supportedInterfaceOrientations
setFrame:
setAutoresizingMask:
willAnimateRotationToInterfaceOrientation:duration:
deviceClass
currentDevice
userInterfaceIdiom
_setModalPresentationStyle:
presentViewController:animated:completion:
finishedAnimatingIn
postNotificationName:object:
finishedAnimatingOut
didReceiveMemoryWarning
viewDidUnload
invoke
copyWithZone:
requestActivationAnimated:animateCurrentDisplayOut:withDelay:
requestDeactivationAnimated:animateOldDisplayInWithStyle:
setWallpaperTunnelActive:
setBackgroundStyle:withDuration:
removeBackgroundStyleWithDuration:
allowSuspension
viewWillAnimateIn
viewWillAnimateOut
definesPresentationContext
animateViewIn
animateViewOut
viewIsReadyToBeRemoved
hasTranslucentBackground
allowStackingOfAlert:
handleLockButtonPressed
handleVolumeUpButtonPressed
handleVolumeDownButtonPressed
handleMenuButtonTap
handleHeadsetButtonPressed:
handleAutoLock
didFinishLaunchingFrontmost
setPendingDeactivationInvocation:
pendingDeactivationInvocation
shouldAnimateIn
setShouldAnimateIn:
animationStartTime
setAnimationStartTime:
activationContext
setActivationContext:
_shouldAnimateIn
_animationStartTime
_activationContext
_pendingDeactivationInvocation
useHardwareSwitchAsOrientationLock
newTopBar
newBottomBar
superview
isShowingWallpaper
beginIgnoringInteractionEvents
shouldShowBottomBar
frame
backgroundView
_performAnimateDisplayIn
animateWithDuration:delay:options:animations:completion:
endIgnoringInteractionEvents
deviceIsLocked
springBoardIsActive
_slideOutAnimationDelay
_slideOutAnimationDuration
_viewAnimatedOut
statusBarHeight
_animatingToHomescreenWallpaper
_animationDelayForOthersActivation
_updateLayoutForStatusBarAndInterfaceOrientation
updateSpringBoardInPreparationForTransparentDismiss
topBar
bottomBar
_topBar
_bottomBar
_animatingIn
_animatingOut
activationEvent
setActivationEvent:
setScreen:
_screen
_activationEvent
_imageThatSuppressesAccessibilityHairlineThickening
initWithTitle:subtitle:image:badgeView:handler:
initWithTitle:subtitle:image:handler:
initWithTitle:subtitle:handler:
initWithTitle:handler:
subtitle
image
_title
_subtitle
_image
_badgeView
_handler
isMainThread
handleFailureInFunction:file:lineNumber:description:
initWithStyle:
defaultSettings
backgroundColorHint
setBackgroundColorHint:
vibrancyDisabled
setVibrancyDisabled:
_vibrancyDisabled
_backgroundColorHint
actionWithCompletion:
initWithCompletion:
error
code
initWithInfo:timeout:forResponseOnQueue:withHandler:
response
sendResponse:
sendResponseWithSuccess:
label
setLabel:
authenticationPolicy
setAuthenticationPolicy:
completion
_action
_label
_authenticationPolicy
_completion
alignmentRectInsets
isEqualToString:
sbui_rangesOfEmojiTokens:
initWithString:
clearColor
addAttributes:range:
setAttributedText:
font
setFont:
lineBreakMode
setLineBreakMode:
numberOfLines
setNumberOfLines:
textAlignment
setTextAlignment:
setTextColor:
mt_applyVibrantStyling:
mt_removeAllVibrantStyling
textColor
viewForFirstBaselineLayout
viewForLastBaselineLayout
_textColor
_emojiLabel
length
isFrontBoard
initWithObjects:
_performSynchronouslyOnMainThread:
stringWithFormat:
allValues
initWithArray:
objectForKey:
setObject:forKey:
fbsDisplay
referenceBounds
preferredLevel
setLevel:
preferredInterfaceOrientation
setInterfaceOrientation:
createSceneWithIdentifier:display:settings:initialClientSettings:clientProvider:transitionContext:
scenes
destroyScene:withTransitionContext:
_queue_invalidate
invalidate
sceneWithIdentifier:
removeObjectForKey:
registerInvalidationAction:
registerHost:
unregisterHost:
beginTransaction
endTransaction
initWithIdentifier:queue:
createSceneWithIdentifier:initialClientSettings:
destroyScene:
_clientQueue
_queue
_scenes
_invalidationAction
layer
displayIfNeeded
sbui_drawEagerly
setOpaque:
setAllowsGroupOpacity:
_setUnified:
_layoutGrabberView:forState:
performWithoutAnimation:
colorWithAlphaComponent:
setBackgroundColor:
alphaComponent
_setDrawsAsBackdropOverlayWithBlendMode:
_frameForGrabberView:forState:unified:
_transformForGrabberView:forState:
setNeedsLayout
_setState:
setShouldRasterize:
setRasterizationScale:
animationDuration
setState:animated:
deleteCharactersInRange:
appendFormat:
mask
setMask:
tintViewWithFrame:
insertSubview:belowSubview:
sendSubviewToBack:
setBackgroundView:
vibrantSettings
setVibrantSettings:
initWithColor:
setAnimationDuration:
configureForLightStyle
sizeThatFits:
layoutSubviews
setState:
_leftGrabberView
_rightGrabberView
_animationDuration
_alphaComponent
_vibrantSettings
_tintView
_backgroundView
_unified
_alphaContainerView
setCornerRadius:
setAllowsEdgeAntialiasing:
initWithRemoteAlertControllerClass:
isSubclassOfClass:
queueWithDispatchQueue:
initWithIdentifier:queue:clientAuthenticator:
initWithCapacity:
isUsable
rawPort
numberWithUnsignedInt:
initWithDefinition:tokenPort:context:queue:delegate:
initWithOptions:capacity:
initFromReceiveRight:
bs_secureEncoded
messageWithPacker:
sendMessage:withType:toClients:
payload
tokenFromXPCMessage:
isDefinition:allowedForAuditToken:
objectEnumerator
queue_matchesDefinition:
queue_tokenPort
_queue_addControllerWithDefinition:token:context:forClient:
queue_isActive
sendReplyMessageWithPacker:
setWithObject:
_queue_notifyClients:remoteAlertForToken:didInvalidateWithReason:underlyingError:
queue_activateWithContext:
queue_invalidate
queue_remoteAlertController:didInvalidateWithReason:underlyingError:
setRepresentation
queue_remoteAlertControllerDidChangeActivationState:
noteClientDidDisconnect:
noteDidReceiveMessage:withType:fromClient:
_remoteAlertControllerClass
_tokenPortToToken
_tokenPortToControllerMap
_tokenPortToClientsMap
suggestedContentInsets
legibilitySettings
setSuggestedContentInsets:
setLegibilitySettings:
_setupSubviews
renderingMode
_updateImageViewLayoutConstraints
colorWithWhite:alpha:
isHighlighted
targetUpdated
preferredContentSizeCategory
size
setContentMode:
setImage:
traitCollectionWithPreferredContentSizeCategory:
preferredFontForTextStyle:compatibleWithTraitCollection:
constraintEqualToConstant:
leadingAnchor
_bodyLeading
firstBaselineAnchor
lastBaselineAnchor
didMoveToSuperview
_interfaceOrientationIsPortrait
_imageView
_textContainer
_titleLabel
_subtitleLabel
_imageViewLayoutConstraints
_highlighted
activatePluginName
sharedInstanceIfExists
killSounds
playSoundForBulletin:
isPlayingSoundForBulletin:
killSoundForBulletin:
_defaultActionWithFilter:
activatePluginContext
enableBundleNamed:activationContext:
dictionaryWithDictionary:
setObject:forKeyedSubscript:
_responseForAction:withOrigin:context:
setActivated:
send
launchURL
context
actionBlockForAction:withOrigin:context:
actionBlockForAction:withOrigin:
actionBlockForAction:
ignoresQuietMode
dontSuppressForPrivacyWhenUnlocked
hasAnyLockState
suppressesMessageForPrivacy
supplementaryActionsForLayout:
supplementaryActions
raiseAction
sb_shouldSuppressMessageForPrivacy
secondaryContentRemoteViewControllerClassName
secondaryContentRemoteServiceBundleIdentifier
responseForAction:
setContext:
setOriginID:
defaultAction
alternateAction
playSound
isPlayingSound
killSound
sb_nonPluginDefaultAction
_launchURLForAction:context:
_isPushOrLocalNotification
actionBlockForButton:
bulletinAlertShouldOverrideQuietMode
bulletinAlertShouldOverridePocketMode
sb_minimalSupplementaryActions
sb_supportsRaiseAction
sb_hasCustomSecondaryContent
mainBundle
localizedStringForKey:value:table:
initWithBulletin:feed:block:
bulletinID
eventForBulletin:feed:block:
feed
execute
_bulletinID
_feed
initWithActionBlock:remoteViewControllerClassName:remoteServiceBundleIdentifier:actionIdentifier:activationMode:behavior:parameters:
actionWithBlock:
actionBlock
setActionBlock:
remoteViewControllerClassName
setRemoteViewControllerClassName:
remoteServiceBundleIdentifier
setRemoteServiceBundleIdentifier:
behavior
setBehavior:
activationMode
setIdentifier:
parameters
setParameters:
_actionBlock
_remoteViewControllerClassName
_remoteServiceBundleIdentifier
_behavior
_activationMode
_parameters
setURL:
setBundleID:
appendInteger:withName:
actionWithURL:
actionWithBundleID:
isApplicationAction
bundleID
transitionStyle
setTransitionStyle:
_bundleID
_url
_transitionStyle
whiteColor
blendMode
filterWithType:
CGColor
setValue:forKey:
numberWithBool:
composedFilter
_composedFilter
imageNamed:inBundle:compatibleWithTraitCollection:
sbui_image
sbui_defaultImage
newLockScreenModalView
localizedTitle
setDataSource:
appIconForceTouchController:shouldHandleGestureRecognizer:
appIconForceTouchController:shouldUseSecureWindowForGestureRecognizer:
appIconForceTouchController:willPresentForGestureRecognizer:
appIconForceTouchController:didPresentForGestureRecognizer:
appIconForceTouchController:willDismissForGestureRecognizer:
appIconForceTouchController:didDismissForGestureRecognizer:
appIconForceTouchController:shouldActivateApplicationShortcutItem:atIndex:forGestureRecognizer:
startHandlingGestureRecognizer:
stopHandlingGestureRecognizer:
applicationShortcutWidgetBundleIdentifier
applicationBundleIdentifier
generatorForWidgetViewControllerWithBundleID:containingBundleID:timeout:
applicationShortcutItems
initWithDataProvider:applicationShortcutItems:
_setupWithGestureRecognizer:
_peekAnimated:withRelativeTouchForce:allowSmoothing:
indexOfObject:
bundleIdentifierToLaunch
initWithSBSShortcutItem:
optionsWithDictionary:
openApplication:withOptions:completion:
_widgetViewControllerForDataProvider:
_shortcutViewControllerForDataProvider:
setIconPosition:
setReversesApplicationShortcutItems:
filteredApplicationShortcutItemsWithStaticApplicationShortcutItems:dynamicApplicationShortcutItems:
appIconForceTouchShortcutViewControllerShouldHandleGestureRecognizers:
appIconForceTouchShortcutViewController:activateApplicationShortcutItem:
iconForceTouchController:shouldHandleGestureRecognizer:
iconForceTouchController:shouldUseSecureWindowForGestureRecognizer:
iconForceTouchController:willPresentForGestureRecognizer:
iconForceTouchController:didPresentForGestureRecognizer:
iconForceTouchController:willDismissForGestureRecognizer:
iconForceTouchController:didDismissForGestureRecognizer:
_iconForceTouchController
_openApplicationService
handledMenuButtonDownEvent
handledMenuButtonUpEvent
handledMenuButtonTap
awakeFromBundle
setVisible:
registeredWithHost
supportedAndEnabled
shouldBreadcrumbLaunchedApplicationWithBundleIdentifier:
wantsActivationEvent:eventSource:interval:
prepareForActivationEvent:eventSource:afterInterval:
cancelPendingActivationEvent:
handleActivationEvent:eventSource:context:
handledPasscodeUnlockWithCompletion:
handleBluetoothDismissal
handlePreheatCommand
handledWiredMicButtonTap
handledButtonDownEventFromSource:
handledButtonUpEventFromSource:
handledButtonTapFromSource:
viewControllerForActivationContext:
viewPartiallyRevealedWithPercentRevealed:
handleViewFullyRevealed
host
setHost:
isVisible
_host
_isVisible
setAnimatedLayerProperties:
setName:
setFilters:
valueForKeyPath:
doubleValue
setValue:forKeyPath:
gaussianBlurRadius
iconView
_iconView
distantFuture
subActions
inertWhenLocked
isCritical
overridesQuietMode
overridesPocketMode
priority
isSticky
sortDate
canShowInAssistant
shouldPlayLightsAndSirens
canShowWhileLocked
pullDownNotification
message
shouldShowModalSubActions
subActionLabels
hasSubActions
defaultActionWithContext:
actionWithIdentifier:
lockScreenActionContextWithContext:
_actionFromApplicationShortcutItem:
iconPosition
reversesApplicationShortcutItems
setIntrinsicContentSize:
localizedSubtitle
icon
_imageFromApplicationShortcutIcon:
applicationBundleURL
absoluteString
containsString:
imageWithRenderingMode:
templateImageName
_assetManager
imageNamed:withTrait:
URLByAppendingPathComponent:
path
imageWithContentsOfFile:
imageData
dataType
scale
imageWithData:scale:
imageWithCGImage:scale:orientation:
isTemplate
_monogrammer
contactIdentifier
descriptorForRequiredKeysIncludingImage:
unifiedContactWithIdentifier:keysToFetch:error:
monogramForContact:
firstName
lastName
setGivenName:
setFamilyName:
setImageData:
monogramForPersonWithFirstName:lastName:
silhouetteMonogram
initWithURL:idiom:error:
initWithStyle:diameter:
_actionPlatterViewController
_reversesApplicationShortcutItems
_applicationShortcutItems
_iconPosition
setSoundType:
setSystemSoundID:
setSoundBehavior:
setVibrationPattern:
setSongPath:
setRingtoneName:
setRepeats:
setMaxDuration:
setControllerAttributes:
setAvItem:
initWithType:
setTopic:
setToneIdentifier:
setVibrationIdentifier:
initWithToneAlertConfiguration:
setAlertConfiguration:
setEventType:
initWithFeedbackEventType:
isPlaying:
playSound:environments:completion:
stopSound:
soundType
systemSoundID
songPath
soundBehavior
vibrationPattern
ringtoneName
isRepeating
maxDuration
controllerAttributes
avItem
alertConfiguration
stringByAppendingFormat:
soundWithFeedbackEventType:
initWithSystemSoundID:behavior:vibrationPattern:
initWithSystemSoundPath:behavior:vibrationPattern:
initWithRingtone:vibrationPattern:repeats:maxDuration:controllerAttributes:
initWithAVItem:vibrationPattern:repeats:maxDuration:controllerAttributes:
initWithToneAlert:accountIdentifier:toneIdentifier:vibrationIdentifier:
initWithSong:vibrationPattern:repeats:maxDuration:controllerAttributes:
isPlaying
stop
_completionBlock
_setCompletionBlock:
_resolvedSystemSoundID
_setResolvedSoundID:
eventType
alertType
setAlertType:
_soundType
_systemSoundID
_soundBehavior
_ringtoneName
_avItem
_vibrationPattern
_repeats
_maxDuration
_controllerAttributes
_alertConfiguration
_songPath
_eventType
_alertType
numberWithInt:
vibrantStylingWithStyle:
restrictedCapabilities
setRestrictedCapabilities:
backgroundStyle
setBackgroundStyle:
presentationStyle
setPresentationStyle:
notificationBehavior
setNotificationBehavior:
elementOverrides
setElementOverrides:
initWithAppearance:
mutableCopyWithZone:
hidden
setLockScreenDisableAssertionClass:
lockScreenDisableAssertionWithIdentifier:
buttonWithText:highlightColor:
boldSystemFontOfSize:
sizeToFit
setSize:
setTextLabel:
setHighlightColor:
setUnselectedTextColor:
setSelectedTextColor:
_chevronImageForTraitCollection:
_flatImageWithColor:
setUnselectedImage:
setSelectedImage:
backgroundColor
setNeedsDisplay
isSelected
initWithImage:highlightedImage:
externalSystemTealColor
systemBlueColor
imageFlippedForRightToLeftLayoutDirection
buttonWithOKAndHighlightColor:
buttonWithChevronImageForTraitCollection:highlightColor:
highlightColorForNightTime:
highlightColor
textLabel
unselectedTextColor
selectedTextColor
unselectedImage
selectedImage
_textLabel
_unselectedTextColor
_selectedTextColor
_unselectedImage
_selectedImage
_highlightView
_highlightColor
remoteAlertClass
remoteAlertDelegate
requestWithDefinition:context:delegate:completion:
hasEntitlement:
serviceName
viewControllerClassName
isDefinition:equalToDefinition:
activateWithContext:
didInvalidate
_queue_isValid
_queue_setActive:
remoteAlertDidActivate:
remoteAlertDidDeactivate:
remoteAlertDidRequestDismissal:
remoteAlert:didTerminateWithError:
alert
_definition
_tokenPort
_alert
_pendedActivations
_active
materialViewWithStyleOptions:
contentAlpha
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
_updateLayoutConstraints
_updateChildViewTransform
_containerView
_mutableLayoutConstraints
_childViewController
_contentAlpha
_contentNativeSize
weakObjectsHashTable
_iconForceTouchControllerHashTable
iconForceTouchViewController
isWidgetExtensionVisible:
_window
setWithSet:
_addIconForceTouchController:
_handleGestureRecognizer:
level
setRootViewController:
setWindowLevel:
_setRotatableViewOrientation:updateStatusBar:duration:force:
_synchronizeDrawing
_cleanWithGestureRecognizer:
_isPeekingOrShowing
_isWidgetVisible:
_windows
_iconForceTouchViewController
appIconForceTouchController:applicationBundleIdentifierForGestureRecognizer:
appIconForceTouchController:applicationBundleURLForGestureRecognizer:
appIconForceTouchController:applicationShortcutWidgetBundleIdentifierForGestureRecognizer:
appIconForceTouchController:applicationShortcutItemsForGestureRecognizer:
appIconForceTouchController:iconImageInsetsForGestureRecognizer:
appIconForceTouchController:iconImageCornerRadiusForGestureRecognizer:
appIconForceTouchController:parallaxSettingsForGestureRecognizer:
appIconForceTouchController:zoomDownViewForGestureRecognizer:
appIconForceTouchController:zoomDownCenterForGestureRecognizer:
appIconForceTouchController:iconViewFrameForGestureRecognizer:
appIconForceTouchController:newIconViewCopyForGestureRecognizer:
initWithPrivateStyle:
settingsForPrivateStyle:
blackColor
setColorTint:
setColorTintAlpha:
setGrayscaleTintAlpha:
setBlurRadius:
transitionIncrementallyToSettings:weighting:
setComputesColorSettings:
effectStrength
_targetBackdropViewSettings
_effectStrength
sharedInstanceForStyle:
systemAppPersistenteCache
primaryColor
_imageNameForCurrentContentSize:
imageNamed:
imageForKey:generatingIfNecessaryWithBlock:
initWithSettings:strength:image:tintColor:
sharedApplication
setStrength:
sb_isEqualToLegibilitySettings:
_newDialViewForSettings:
strength
replicate
_strength
_legibilitySettings
_dialView
getRed:green:blue:alpha:
bannerTargetIdentifier
bannerTargetIdiom
registerSource:
unregisterSource:
modallyPresentBannerWithContext:
isShowingModalBanner
signalSource:
currentBannerContextForSource:
dismissCurrentBannerContextForSource:
cacheBannerForContext:withCompletion:
removeCachedBannerForContext:
initWithTargetImplementation:
_idiom
_implementation
initWithKeyOptions:valueOptions:capacity:
bannerTargetManager:didAddTarget:
_notifyObservers:
bannerTargetManager:didRemoveTarget:
targets
addObserver:
removeObserver:
_registerTargetImplementation:
_unregisterTargetImplementation:
_proxyForTargetImplementation:
_proxies
_implementationToProxyMap
_observers
viewCanBeDisplayed
showStatusBar
showDateView
hasCustomSubtitle
customSubtitleText
customSubtitleColor
showDate
allowsTimer
allowsSiri
allowsLockScreenCamera
allowsUnlocking
allowsLogout
wantsMesaAutoUnlock
allowsLockScreenMediaControls
allowsControlCenter
allowsNotificationCenter
overlayStyle
pluginController:updateAppearance:
style
secondaryColor
shadowColor
initWithStyle:primaryColor:secondaryColor:shadowColor:
legibilitySettingsOverridesVibrancy
isContentViewWhiteUnderSlideToUnlockText
_updateAppearanceAndNotify:
userInfo
setDeactivationContext:
purgeView
setPluginAgent:
slideToUnlockText
bundleIDForUnlock
unlockAnimationStyleForDestinationApp:
shouldDisableOnUnlock
disable
shouldDisableOnRelock
enableTransitionBlock
sentinelWithExceptionReason:
signal
settingsWithDuration:
viewIfLoaded
statusBarOrientation
deactivatePluginController:
viewWantsOverlayLayout
disablesAwayItemsCompletely
shouldAutoHideNotifications
enableLockScreenBundle:withContext:
disableLockScreenBundle:withContext:
disableBundleNamed:deactivationContext:
enableBundleNamed:
disableBundleNamed:
pluginAnimatesAppearanceTransition:
pluginAnimateAppearanceTransition:withCompletion:
pluginWillActivateWithContext:
pluginDidDeactivateWithContext:
pluginHandleEvent:
updateForPresentation:
pluginAgent
pluginPriority
pluginViewController
pluginAppearance
pluginUnlockAction
_updateAppearance
setViewCanBeDisplayed:
orientation
setOrientation:
setFullscreen:animated:
setFullscreen:duration:
shouldShowLockStatusBarTime
allowsLockScreenHint
animateResumingToApplicationWithIdentifier:
showBatteryChargingText
customHeaderView
allowsPhotoSlideshow
handleMenuButtonDoubleTap
wantsMenuButtonHeldEvent
handleMenuButtonHeld
setNeedsLegibilityAppearanceUpdate
_agent
_appearance
_viewCanBeDisplayed
initWithItem:source:target:presentingActionIdentifier:requestModalPresentation:
presentingActionIdentifier
item
_presentingAction
bs_firstObjectPassingTest:
initWithItem:source:target:
remoteInteractiveAction
textInputAction
actionForIdentifier:
source
target
requestsModalPresentation
setRequestsModalPresentation:
setPresentingActionIdentifier:
_item
_source
_target
_isValid
_requestsModalPresentation
_presentingActionIdentifier
isEmergencyDialerAction
setUserInfo:
setProcess:
setAuxiliaryAnimation:
appendDictionarySection:withName:skipIfEmpty:
contextWithName:
name
process
auxiliaryAnimation
observer
setObserver:
_name
_userInfo
_process
_auxiliaryAnimation
_observer
_referenceBounds
preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:
fontWithDescriptor:size:
_scaledValueForValue:
peekNextBannerItemForTarget:
compare:
dequeueNextBannerItemForTarget:
SBUIForceTouchGestureRecognizer
UIInteractionProgressObserver
NSObject
SBUIPluginAppearanceContext
SBLockScreenPluginCallAction
SBLockScreenElementOverride
SBUIIconForceTouchViewController
UIGestureRecognizerDelegate
Isolation
SBAlertItem
BSDescriptionProviding
SBUIAdditions
SBUIScene
FBSceneClient
_SBAlertController
SBUIIconForceTouchControllerDataProvider
SpringBoard
SBUIActionPlatterViewController
SBLockScreenPluginInCallAction
SBUIFullscreenAlertController
NSCopying
SBUISlidingFullscreenAlertController
SBUIPluginActivationContext
SBUIAction
SBLockScreenLegibilitySettings
SBLockScreenPluginAction
SBUIActionViewLabel
SBUIEmojiAdditions
SBUIWorkspace
FBSceneClientProvider
SBUIChevronView
_SBFVibrantView
SBRemoteAlertServer
SBRemoteAlertControllerDelegate
SBLockScreenPluginPresentation
SBMutableLockScreenPluginPresentation
SBUIActionView
SBUIUtilities
SBBulletinEvent
SBUIBannerAction
SBLockScreenPluginApplicationAction
SBUIActionViewVibrantStyling
SBLockScreenModalViewFactory
SBUIAppIconForceTouchController
SBUIAppIconForceTouchShortcutViewControllerDelegate
SBUIIconForceTouchControllerDataSource
SBUIIconForceTouchControllerDelegate
SBUIPluginController
SBPluginBundleController
BSPluginBundleController
SBUIIconForceTouchIconViewWrapperView
SBUIBannerItem
SBUIQuietModePlayability
SBUIAppIconForceTouchShortcutViewController
SBUIActionPlatterViewControllerDelegate
SBUISound
SBUIActionKeylineView
SBLockScreenPluginAppearanceContext
SBLockScreenPluginMutableAppearance
SBLockScreenPluginAppearance
NSMutableCopying
SBLockScreenPluginMutableAppearanceContext
SBUILockScreenDisableAssertion
SBUIStarkBannerViewButton
SBRemoteAlert
SBRemoteAlertController
SBRemoteAlertDelegate
SBUIIconForceTouchWrapperViewController
SBUIIconForceTouchController
SBUIIconForceTouchViewControllerDelegate
SBUIAppIconForceTouchControllerDataProvider
SBUIIconForceTouchVisualEffectView
SBLockScreenTimerDialView
SBUILegibility
SBUIOptionalLegibility
SBFScreenFadeReplicatable
SBUIBannerTargetProxy
SBUIBannerTarget
SBUIBannerTargetBase
SBUIBannerTargetManager
SBAwayViewPluginController
SBLockScreenPluginViewController
SBLockScreenPluginController
SBUIBannerContext
SBLockScreenPluginEmergencyDialerAction
SBLockScreenPluginContext
v24@0:8@16
v24@0:8@"UIInteractionProgress"16
v28@0:8@16B24
v28@0:8@"UIInteractionProgress"16B24
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
@32@0:8@16:24
v16@0:8
d16@0:8
v32@0:8@16@24
@"UIInteractionProgress"
v24@0:8Q16
v20@0:8B16
@24@0:8@16
@"TUDialRequest"
@24@0:8q16
q16@0:8
v24@0:8q16
@"NSString"
@"UIColor"
B24@0:8@"UIGestureRecognizer"16
B32@0:8@16@24
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
@32@0:8@16@24
B32@0:8B16d20B28
B28@0:8B16@?20
q24@0:8@16
v40@0:8B16d20B28@?32
v28@0:8B16@?20
v24@0:8d16
@"SBUIIconForceTouchVisualEffectView"
@"UIView"
@"SBUIIconForceTouchIconViewWrapperView"
@"SBUIIconForceTouchWrapperViewController"
@"NSArray"
@"NSMutableArray"
@"SBUIIconForceTouchControllerDataProvider"
@"<SBUIIconForceTouchViewControllerDelegate>"
@"NSString"24@0:8@"NSString"16
@"BSDescriptionBuilder"24@0:8@"NSString"16
@"BSDescriptionBuilder"16@0:8
v24@0:8B16B20
v20@0:8i16
i16@0:8
@24@0:8B16B20
@"_SBAlertController"
v40@0:8@16@24@32
v40@0:8@"<FBSceneHost>"16@"FBSSceneDefinition"24@"FBSSceneParameters"32
v56@0:8@16@24@32@40@?48
v56@0:8@"<FBSceneHost>"16@"FBSSceneSettings"24@"FBSSceneSettingsDiff"32@"FBSSceneTransitionContext"40@?<v@?B>48
v40@0:8@16@24@?32
v40@0:8@"<FBSceneHost>"16@"FBSSceneTransitionContext"24@?<v@?B>32
v32@0:8@"<FBSceneHost>"16@"NSSet"24
v32@0:8@"<FBSceneHost>"16@"FBSSceneClientSettings"24
v24@0:8@?16
@"FBSDisplay"
@"<FBSceneHost>"
@"FBSSceneSettings"
@"FBSSceneClientSettings"
@"NSMutableSet"
@"SBAlertItem"
@"<_SBAlertControllerDelegate>"
@40@0:8@16@24@32
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
{UIEdgeInsets=dddd}16@0:8
{CGPoint=dd}16@0:8
{?="iconForceTouchController_iconImageInsetsForGestureRecognizer"b1"iconForceTouchController_iconImageCornerRadiusForGestureRecognizer"b1"iconForceTouchController_wrapperViewCornerRadiusForGestureRecognizer"b1"iconForceTouchController_parallaxSettingsForGestureRecognizer"b1"iconForceTouchController_zoomDownViewForGestureRecognizer"b1"iconForceTouchController_zoomDownCenterForGestureRecognizer"b1}
@"<SBUIIconForceTouchControllerDataSource>"
@"SBUIIconForceTouchController"
@"SBUIForceTouchGestureRecognizer"
{?="actionPlatterViewControllerShouldRespondToTouches"b1}
@"UIStackView"
@"_UIFeedbackRetargetBehavior"
@"UILongPressGestureRecognizer"
@"<SBUIActionPlatterViewControllerDelegate>"
@24@0:8^{_NSZone=}16
v28@0:8B16B20B24
v24@0:8B16i20
v32@0:8q16d24
v36@0:8@16B24@?28
B20@0:8B16
@"NSNumber"
@"NSInvocation"
@"UIScreen"
@56@0:8@16@24@32@40@?48
@48@0:8@16@24@32@?40
@40@0:8@16@24@?32
@32@0:8@16@?24
@?16@0:8
@"UIImage"
@24@0:8@?16
@"BSAction"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"UILabel"
@24@0:8^@16
v24@0:8@"FBSceneClientProviderInvalidationAction"16
@"<FBSceneClient>"24@0:8@"<FBSceneHost>"16
v24@0:8@"<FBSceneHost>"16
@"FBSSerialQueue"
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
@"FBSceneClientProviderInvalidationAction"
v24@0:8@"UIView"16
@"_SBFVibrantSettings"16@0:8
v24@0:8@"_SBFVibrantSettings"16
{CGSize=dd}32@0:8{CGSize=dd}16
{CGAffineTransform=dddddd}32@0:8@16q24
{CGRect={CGPoint=dd}{CGSize=dd}}36@0:8@16q24B32
v32@0:8@16q24
B24@0:8q16
v28@0:8q16B24
@"_SBFVibrantSettings"
v24@0:8@"SBRemoteAlertController"16
v40@0:8@16q24@32
v40@0:8@"SBRemoteAlertController"16q24@"NSError"32
@24@0:8#16
@48@0:8@16@24@32@40
v48@0:8@16@24q32@40
v48@0:8{UIEdgeInsets=dddd}16
@"_UILegibilitySettings"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
v28@0:8B16@20
@"UIImageView"
@"SBUIActionViewLabel"
@"SBUIAction"
@?36@0:8@16i24@28
@?28@0:8@16i24
@?24@0:8@16
@36@0:8@16i24@28
@40@0:8@16Q24@?32
@72@0:8@?16@24@32@40Q48Q56@64
@"NSDictionary"
@"NSURL"
@"CAFilter"
B24@0:8@"SBUIAppIconForceTouchShortcutViewController"16
v32@0:8@"SBUIAppIconForceTouchShortcutViewController"16@"SBSApplicationShortcutItem"24
q32@0:8@16@24
q32@0:8@"SBUIIconForceTouchController"16@"SBUIForceTouchGestureRecognizer"24
@"UIView"32@0:8@"SBUIIconForceTouchController"16@"SBUIForceTouchGestureRecognizer"24
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@16@24
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@"SBUIIconForceTouchController"16@"SBUIForceTouchGestureRecognizer"24
@"UIViewController"32@0:8@"SBUIIconForceTouchController"16@"SBUIForceTouchGestureRecognizer"24
{UIEdgeInsets=dddd}32@0:8@16@24
{UIEdgeInsets=dddd}32@0:8@"SBUIIconForceTouchController"16@"SBUIForceTouchGestureRecognizer"24
d32@0:8@16@24
d32@0:8@"SBUIIconForceTouchController"16@"SBUIForceTouchGestureRecognizer"24
@"SBFParallaxSettings"32@0:8@"SBUIIconForceTouchController"16@"SBUIForceTouchGestureRecognizer"24
{CGPoint=dd}32@0:8@16@24
{CGPoint=dd}32@0:8@"SBUIIconForceTouchController"16@"SBUIForceTouchGestureRecognizer"24
B32@0:8@"SBUIIconForceTouchController"16@"SBUIForceTouchGestureRecognizer"24
v32@0:8@"SBUIIconForceTouchController"16@"SBUIForceTouchGestureRecognizer"24
v32@0:8B16d20B28
{?="appIconForceTouchController_shouldHandleGestureRecognizer"b1"appIconForceTouchController_shouldUseSecureWindowForGestureRecognizer"b1"appIconForceTouchController_willPresentForGestureRecognizer"b1"appIconForceTouchController_didPresentForGestureRecognizer"b1"appIconForceTouchController_willDismissForGestureRecognizer"b1"appIconForceTouchController_didDismissForGestureRecognizer"b1"appIconForceTouchController_shouldActivateApplicationShortcutItem_atIndex_forGestureRecognizer"b1}
@"SBUIAppIconForceTouchControllerDataProvider"
@"UIViewController"
@"FBSOpenApplicationService"
@"<SBUIAppIconForceTouchControllerDataSource>"
@"<SBUIAppIconForceTouchControllerDelegate>"
B32@0:8i16i20^d24
v32@0:8i16i20d24
B32@0:8i16i20^v24
B24@0:8@?16
B20@0:8i16
@"<SBUIPluginControllerHost>"
B24@0:8@"SBUIActionPlatterViewController"16
@"SBUIActionPlatterViewController"
@"_UIAssetManager"
@"CNMonogrammer"
@"<SBUIAppIconForceTouchShortcutViewControllerDelegate>"
@36@0:8I16Q20@28
@40@0:8@16Q24@32
@52@0:8@16@24B32d36@44
@48@0:8q16@24@32@40
B32@0:8q16@?24
I16@0:8
v20@0:8I16
@"AVItem"
@"TLAlertConfiguration"
{CGSize=dd}16@0:8
@"NSArray"16@0:8
v24@0:8@"NSArray"16
@"SBLockScreenLegibilitySettings"16@0:8
v24@0:8@"SBLockScreenLegibilitySettings"16
@"SBLockScreenLegibilitySettings"
v24@0:8#16
@20@0:8B16
@"<SBRemoteAlertDelegate>"16@0:8
v48@0:8@16@24@32@?40
v48@0:8@"SBSRemoteAlertDefinition"16@"SBSRemoteAlertConfigurationContext"24@"<SBRemoteAlertDelegate>"32@?<v@?@"<SBRemoteAlert>"@"NSError">40
v24@0:8@"<SBRemoteAlert>"16
v32@0:8@"<SBRemoteAlert>"16@"NSError"24
@52@0:8@16I24@28@36@44
@"SBSRemoteAlertDefinition"
@"<SBRemoteAlertControllerDelegate>"
@"<SBRemoteAlert>"
v32@0:8{CGSize=dd}16
{CGSize="width"d"height"d}
v24@0:8@"SBUIIconForceTouchViewController"16
{?="iconForceTouchController_shouldHandleGestureRecognizer"b1"iconForceTouchController_shouldUseSecureWindowForGestureRecognizer"b1"iconForceTouchController_willPresentForGestureRecognizer"b1"iconForceTouchController_didPresentForGestureRecognizer"b1"iconForceTouchController_willDismissForGestureRecognizer"b1"iconForceTouchController_didDismissForGestureRecognizer"b1}
@"UIWindow"
@"<SBUIIconForceTouchControllerDelegate>"
@"SBUIIconForceTouchViewController"
{?="appIconForceTouchController_applicationBundleIdentifierForGestureRecognizer"b1"appIconForceTouchController_applicationBundleURLForGestureRecognizer"b1"appIconForceTouchController_applicationShortcutWidgetBundleIdentifierForGestureRecognizer"b1"appIconForceTouchController_applicationShortcutItemsForGestureRecognizer"b1"appIconForceTouchController_iconImageInsetsForGestureRecognizer"b1"appIconForceTouchController_iconImageCornerRadiusForGestureRecognizer"b1"appIconForceTouchController_parallaxSettingsForGestureRecognizer"b1"appIconForceTouchController_zoomDownViewForGestureRecognizer"b1"appIconForceTouchController_zoomDownCenterForGestureRecognizer"b1}
@"SBUIAppIconForceTouchController"
@"_UIBackdropViewSettings"
@"_UILegibilitySettings"16@0:8
v24@0:8@"_UILegibilitySettings"16
@"SBUILegibilityView"
v24@0:8@"<SBUIBannerSource>"16
v24@0:8@"SBUIBannerContext"16
@"SBUIBannerContext"24@0:8@"<SBUIBannerSource>"16
v32@0:8@16@?24
v32@0:8@"SBUIBannerContext"16@?<v@?>24
^v16@0:8
@"<SBUIBannerTargetImplementation>"
@"NSHashTable"
@"NSMapTable"
@28@0:8B16@?20
@"BSAnimationSettings"28@0:8B16@?<v@?>20
v24@0:8@"SBLockScreenPluginContext"16
v24@0:8@"SBLockScreenPluginPresentation"16
@"<SBLockScreenPluginAgent>"16@0:8
v24@0:8@"<SBLockScreenPluginAgent>"16
@"UIViewController<SBLockScreenPluginViewController>"16@0:8
@"<SBLockScreenPluginAppearance>"16@0:8
@"SBLockScreenPluginAction"16@0:8
v28@0:8B16d20
Q24@0:8@16
@"<SBLockScreenPluginAgent>"
@"SBLockScreenPluginMutableAppearanceContext"
@52@0:8@16@24@32@40B48
@"SBUIBannerItem"
@"<SBUIBannerSource>"
@"<SBUIBannerTarget>"
@"<FBSProcess>"
@"<SBLockScreenPluginLifecycleObserver>"
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
pressDuration
Td,R,N
forceTouchCompleted
TB,R,N,V_forceTouchCompleted
relativeTouchForce
touchForceVelocity
None
Boot
Alert
Logout
Plugin
Blocked
Keyboard
LostMode
IdleTimer
Restoring
Activation
LiftToWake
LockButton
RemoteLock
SmartCover
ThermalTrap
Notification
Authentication
NotificationCenter
Mesa
Siri
Touch
HomeButton
OtherButton
RemoteAlert
VolumeButton
ACPowerChange
ExternalRequest
ApplicationRequest
SpringBoardRequest
SystemServiceRequest
ChargingAccessoryChange
Dismiss
Authenticate
Authenticate and Dismiss
uiEnvironment
TQ,N,V_uiEnvironment
hideOtherWindowsDuringAppearance
TB,N,V_hideOtherWindowsDuringAppearance
T@"NSURL",R,D,N
element
hidden
text
color
Tq,N,V_element
TB,N,GisHidden,V_hidden
T@"NSString",C,N,V_text
T@"UIColor",&,N,V_color
kSBUIIconForceTouchViewControllerTapticEngineWarmUpReason
%s is not a valid initializer. You must call -[%@ initWithDataProvider:].
-[SBUIIconForceTouchViewController initWithNibName:bundle:]
%@ does not support unarchiving from a nib.
visualEffectView
parallaxView
iconViewWrapperViewBelow
primaryView
secondaryView
iconViewWrapperViewAbove
H:|[visualEffectView]|
V:|[visualEffectView]|
H:|[parallaxView]|
V:|[parallaxView]|
H:|-(origin_x)-[iconViewWrapperViewBelow(size_width)]
origin_x
size_width
V:|-(origin_y)-[iconViewWrapperViewBelow(size_height)]
origin_y
size_height
H:|-(origin_x)-[primaryView(size_width)]
V:|-(origin_y)-[primaryView(size_height)]
@"NSLayoutConstraint"20@?0@"NSLayoutConstraint"8f16
H:|-(origin_x)-[iconViewWrapperViewAbove(size_width)]
V:|-(origin_y@priority)-[iconViewWrapperViewAbove(size_height)]
priority
v24@?0@"SBFView"8@"UIWindow"16
v8@?0
v12@?0B8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoardUI_Sim/SpringBoard-3563.87/SBUIIconForceTouchViewController.m
<Unknown File>
%s should only be called when there is content to present!
-[SBUIIconForceTouchViewController _presentAnimated:withCompletionHandler:]
v16@?0q8
-[SBUIIconForceTouchViewController _dismissAnimated:withCompletionHandler:]
dataProvider
T@"SBUIIconForceTouchControllerDataProvider",R,N,V_dataProvider
state
Tq,R,N,V_state
layout
Tq,R,N,V_layout
delegate
T@"<SBUIIconForceTouchViewControllerDelegate>",W,N,V_delegate
SBAlertItemDidPrepareNewAlertControllerNotification
Lock
Pended
User Dismissed
Button Pressed
Auto Dismiss
Generic
Unlock
SBAlertItemsController
alertController
presented
TB,N,G_isPresented,S_setPresented:,V_presented
attachmentImagePath
T@"NSString",&,N,G_attachmentImagePath,V_attachmentImagePath
iconImagePath
T@"NSString",&,N,G_iconImagePath,V_iconImagePath
ignoreIfAlreadyDisplaying
TB,N,V_ignoreIfAlreadyDisplaying
allowInSetup
TB,N,V_allowInSetup
pendInSetupIfNotAllowed
TB,N,V_pendInSetupIfNotAllowed
pendWhileKeyBagLocked
TB,N,V_pendWhileKeyBagLocked
allowedBundleIDs
T@"NSArray",&,N,V_allowedBundleIDs
allowInCar
TB,N,V_allowInCar
allowMessageInCar
TB,N,V_allowMessageInCar
badgeView
T@"UIView",&,N
SBSApplicationShortcutItem.BadgeView
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoardUI_Sim/SpringBoard-3563.87/SBUIScene.m
deprecated
identifier
display
layers
settings
clientSettings
T@"FBSSceneSettings",C,V_settings
T@"FBSSceneClientSettings",C,V_clientSettings
T@"NSString",R,C,N,V_identifier
T@"FBSDisplay",R,C,N,V_display
valid
TB,R,N,GisValid,V_valid
T@"NSSet",R,C,N,V_layers
title
alertItem
T@"SBAlertItem",W,N,V_alertItem
alertControllerDelegate
T@"<_SBAlertControllerDelegate>",W,N,V_alertControllerDelegate
%s is not a valid initializer. You must call -[%@ initWithDataSource:controller:gestureRecognizer:].
-[SBUIIconForceTouchControllerDataProvider init]
dataSource
T@"<SBUIIconForceTouchControllerDataSource>",R,N,V_dataSource
controller
T@"SBUIIconForceTouchController",R,W,N,V_controller
gestureRecognizer
T@"SBUIForceTouchGestureRecognizer",R,W,N,V_gestureRecognizer
layoutStyle
Tq,R,N
iconViewFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
primaryViewController
T@"UIViewController",R,N
secondaryViewController
iconImageInsets
T{UIEdgeInsets=dddd},R,N
iconImageCornerRadius
wrapperViewCornerRadius
parallaxSettings
T@"SBFParallaxSettings",R,N
zoomDownView
T@"UIView",R,N
zoomDownCenter
T{CGPoint=dd},R,N
StatusBar
TimeAndDate
Subtitle
Timer
v28@?0Q8i16^B20
ScreenOff
VolumeUp
VolumeDown
HeadsetButton
HeadsetButtonHeld
MediumDark
Dark
Legible
Undefined
Overlay
Normal
Background
Stationary
Default
Disabled
Temporary
Exclusive
Camera
TouchID
MediaControls
TodayCenter
ControlCenter
uiColor
T@"UIColor",R,C,N
%s is not a valid initializer. You must call -[%@ initWithActions:gestureRecognizer:].
-[SBUIActionPlatterViewController initWithNibName:bundle:]
actions
T@"NSArray",R,C,N,V_actions
T@"UILongPressGestureRecognizer",R,W,N,V_gestureRecognizer
reversesActions
TB,N,V_reversesActions
imagePosition
Tq,N,V_imagePosition
T@"<SBUIActionPlatterViewControllerDelegate>",W,N,V_delegate
SBPluginFullscreenAlertDidAnimateInNotification
SBUIFullscreenAlertAdapter
SBPluginFullscreenAlertAnimatedOutNotification
shouldAnimateIn
TB,N,V_shouldAnimateIn
animationStartTime
T@"NSNumber",&,N,V_animationStartTime
activationContext
T@"NSString",&,N,V_activationContext
SBUIRingerSwitchBehaviorDidChangeNotification
ringer-switch
SBPluginFullscreenAlertUpdateForTransparentDismissNotification
topBar
T@"UIView",R,N,V_topBar
bottomBar
T@"UIView",R,N,V_bottomBar
SBDeviceLockStateChangedNotification
SBLockButtonPressedNotification
SBMenuButtonPressedNotification
SBVolumeChangedNotification
SBDisplayWillActivateNotification
SBDisplayDidDeactivateNotification
SBDisplayDidLaunchNotification
SBApplicationNetworkFlagsChangedNotification
SBHeadsetButtonUpNotification
SBActiveCallStateChangedNotification
SBRingerChangedNotification
SBIncomingCallPendingNotification
SBCallCountChangedNotification
SBTelephonyDaemonRestartNotification
SBUserEventOccurredNotification
SBHomescreenIconsDidAppearNotification
SBHomescreenIconsWillAppearNotification
SBWiFiDeviceAttachedNotification
SBApplicationURLWillOpenNotification
SBApplicationURLDidOpenNotification
SBProximityDidChangeNotification
SBTestingConfigureNextVoiceRecognitionAudioInputPathsNotification
SBTestingConfigureNextAssistantRecognitionStrings
SBFeaturesShouldBeLockedForRemoteLockNotification
SBBannerWillAnimateRevealNotification
SBBannerWillAnimateDismissalNotification
SBOrientationLockChangedNotification
SBTelephonyManagerWillProcessAirplaneModeChangeNotification
SBTelephonyManagerAirplaneModeDidChangeNotification
SBTelephonyManagerDidProcessAirplaneModeChangeNotification
SBNetworkTetheringStateChangedNotification
SBWifiManagerPowerStateDidChangeNotification
SBWifiManagerCurrentDeviceDidChangeNotification
SBWifiManagerDevicePresenceDidChangeNotification
SBBacklightAboutToUndimNotification
SBBacklightResetLockScreenIdleTimerNotification
SBBacklightLevelChangedNotification
SBBacklightFadeFinishedNotification
SBBacklightWillTurnOnWhileUILockedNotification
SBBacklightChangeSourceKey
SBBacklightOldFactorKey
SBBacklightNewFactorKey
kSBNotificationKeyState
kSBNotificationKeyDisplaySuspended
kSBNotificationKeyDisplayIdentifier
kSBNotificationKeyPreferenceChangedKey
kSBNotificationKeyCurrentVolume
kSBNotificationKeyHeadsetButtonLongPress
kSBNotificationKeyBundleIdentifier
kSBNotificationKeyLocalNotification
kSBNotificationKeyApplicationURL
kSBNotificationKeyFrame
kSBNotificationKeyAnimationDuration
screen
T@"UIScreen",&,N,V_screen
activationEvent
Ti,N,V_activationEvent
%s is not a valid initializer. You must call -[%@ initWithTitle:subtitle:image:badgeView:handler:].
-[SBUIAction init]
T@"NSString",R,C,N,V_title
subtitle
T@"NSString",R,C,N,V_subtitle
image
T@"UIImage",R,N,V_image
T@"UIView",R,N,V_badgeView
handler
T@?,R,C,N,V_handler
SBUILaunchOptionKeyPNGLess
SBUILaunchOptionKeyAllowUnlock
id<SBUIUserAgent> SBUIGetUserAgent()
<Unknown Function>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoardUI_Sim/SpringBoard-3563.87/SpringBoardUI_Private.m
this call must be made on the main thread
void SBUISetUserAgent(__strong id<SBUIUserAgent>)
backgroundColorHint
T@"UIColor",&,N,V_backgroundColorHint
vibrancyDisabled
TB,N,V_vibrancyDisabled
v16@?0@"BSActionResponse"8
completion
T@?,R,C,N,V_completion
label
T@"NSString",C,N,V_label
authenticationPolicy
Tq,N,V_authenticationPolicy
H:|[label]|
V:|[label]|
@16@?0@"NSArray"8
H:|[emojiLabel]|
emojiLabel
V:|[emojiLabel]|
T@"NSString",C,N
font
T@"UIFont",&,N
textColor
T@"UIColor",&,N
textAlignment
Tq,N
lineBreakMode
numberOfLines
v40@?0^{__EmojiTokenWrapper=}8{?=qq}16^B32
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoardUI_Sim/SpringBoard-3563.87/SBUIWorkspace.m
Invalid parameter not satisfying: %@
queue
this can't be used outside the system app
%@:%@
sceneIdentifier
initialClientSettings
can't register multiple scenes with the same identifier: %@
v16@?0@?<v@?>8
clientQueue
scenes
T@"NSSet",R,C,N
_UIKeyboardArbiter_ForSpringBoard_WorkspaceIdentifier
/System/Library/PrivateFrameworks/KeyboardArbiter.framework/KeyboardArbiter
### Failed to Soft Linked: /System/Library/PrivateFrameworks/KeyboardArbiter.framework/KeyboardArbiter
hasDrawn
; state: %@>
vibrantSettings
T@"_SBFVibrantSettings",&,N
animationDuration
Td,N
Tq,N,V_state
T@"_SBFVibrantSettings",&,N,V_vibrantSettings
[Invalid]
SBUIChevronViewStateUp
SBUIChevronViewStateNone
SBUIChevronViewStateDown
com.apple.SpringBoardUIFramework
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoardUI_Sim/SpringBoard-3563.87/SBRemoteAlertServer.m
this initializer is not allowed - call initWithRemoteAlertControllerClass: instead
expected subclass of SBRemoteAlertController : remoteAlertControllerClass=%@
com.apple.springboard.remote-alert-server
you can't deallocate the server
the token must be valid at this point
failed to get a handleToken
v16@?0@"NSObject<OS_xpc_object>"8
handleToken for lookups must be valid at the time of sending : handleToken=%@ controller=%@ token=%@
-[SBRemoteAlertServer noteDidReceiveMessage:withType:fromClient:]
suggestedContentInsets
legibilitySettings
T{UIEdgeInsets=dddd},N,VsuggestedContentInsets
T@"_UILegibilitySettings",&,N,VlegibilitySettings
T{UIEdgeInsets=dddd},D,N
T@"_UILegibilitySettings",&,D,N
%s is not a valid initializer. You must call -[%@ initWithAction:].
-[SBUIActionView initWithFrame:]
titleLabel
subtitleLabel
H:|-(12)-[imageView(35)]-(12)-[textContainer]-(17)-|
imageView
textContainer
action
T@"SBUIAction",R,N,V_action
highlighted
TB,N,GisHighlighted,V_highlighted
NCInteractiveNotificationActionContextLaunchURLKey
SBMarkLockedBulletinsAsReadNotification
SBBulletinResponseOriginDefault
SBBulletinResponseOriginBanner
SBBulletinResponseOriginList
SBBulletinResponseOriginStark
SBBulletinResponseOriginLockScreen
SBBulletinResponseOriginNotificationCenterOnLockScreen
SBBulletinResponseOriginModalAlert
B16@?0@"BBAction"8
SBBulletinSoundController
B16@?0@"NSDictionary"8
SBLockStateAggregator
BulletinBoard
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoardUI_Sim/SpringBoard-3563.87/BBBulletin+SBUtilities.m
handler != nil
actionBlock
T@?,C,N,V_actionBlock
remoteViewControllerClassName
T@"NSString",C,N,V_remoteViewControllerClassName
remoteServiceBundleIdentifier
T@"NSString",C,N,V_remoteServiceBundleIdentifier
behavior
TQ,N,V_behavior
T@"NSString",C,N,V_identifier
parameters
T@"NSDictionary",C,N,V_parameters
activationMode
TQ,R,N,V_activationMode
bundleID
transitionStyle
T@"NSString",C,N,V_bundleID
T@"NSURL",&,N,SsetURL:,V_url
TQ,N,V_transitionStyle
inputColor0
inputColor1
inputReversed
SBSApplicationShortcutSystemIcon_UnreadDot
ComposeNew
Play
Pause
Location
Search
Share
Prohibit
Contact
Home
MarkLocation
Favorite
Love
Cloud
Invitation
Confirmation
Mail
Message
Date
Time
CapturePhoto
CaptureVideo
Task
TaskCompleted
Alarm
Bookmark
Shuffle
Audio
Update
UnreadDot
SBSApplicationShortcutSystemIcon_%@
sbui_image
T@"UIImage",R,N
SBDashBoardModalView
v16@?0@"NSArray"8
v24@?0@"FBSProcessHandle"8@"NSError"16
T@"<SBUIAppIconForceTouchControllerDataSource>",W,N,V_dataSource
T@"<SBUIAppIconForceTouchControllerDelegate>",W,N,V_delegate
SBUIPluginVisibilityDidChangeNotification
SBUIPluginActivationSettingsDidChangeNotification
__bundleId
__supportsCarFullScreen
WiredMic
BTHeadset
MotionGesture
Voice
Continuity
Unknown
visible
TB,N,GisVisible,V_isVisible
host
T@"<SBUIPluginControllerHost>",W,N,V_host
filters.gaussianBlur.inputRadius
gaussianBlur
inputRadius
H:|[iconView]|
iconView
V:|[iconView]|
%s is not a valid initializer. You must call -[%@ initWithIconView:].
-[SBUIIconForceTouchIconViewWrapperView initWithFrame:]
T@"UIView",R,N,V_iconView
gaussianBlurRadius
%s is not a valid initializer. You must call -[%@ initWithDataProvider:applicationShortcutItems:].
-[SBUIAppIconForceTouchShortcutViewController initWithNibName:bundle:]
MobileSlideShow.app
InfoPlist
%@.png
Assets.car
T@"SBUIAppIconForceTouchControllerDataProvider",R,N,V_dataProvider
applicationShortcutItems
T@"NSArray",R,N,V_applicationShortcutItems
reversesApplicationShortcutItems
TB,N,V_reversesApplicationShortcutItems
iconPosition
Tq,N,V_iconPosition
T@"<SBUIAppIconForceTouchShortcutViewControllerDelegate>",W,N,V_delegate
SBSoundController
SystemSound
   hasCompletionBlock: %@
   SoundID: %lu
   Path: %@
 Behavior: %lu
   Vibration Pattern: %@
Ringtone
   hasCompletionBlock: %@
   Name: %@
   Vibration Pattern: %@
   Repeats: %@
   Max Duration: %@
   Controller Attributes: %@
unlimited
AVItem
   hasCompletionBlock: %@
   AVItem: %p
   Vibration Pattern: %@
   Repeats: %@
   Max Duration: %@
   Controller Attributes: %@
ToneAlert
   hasCompletionBlock: %@
    Alert Configuration: %@
Song
   hasCompletionBlock: %@
   ID: %@
   Vibration Pattern: %@
   Repeats: %@
   Max Duration: %@
   Controller Attributes: %@
Feedback
   eventType: %ld
{  SoundType: %@%@
soundType
Tq,N,V_soundType
systemSoundID
TI,N,V_systemSoundID
_resolvedSystemSoundID
TI,N,S_setResolvedSoundID:,V_resolvedSystemSoundID
soundBehavior
TQ,N,V_soundBehavior
ringtoneName
T@"NSString",&,N,V_ringtoneName
avItem
T@"AVItem",&,N,V_avItem
vibrationPattern
T@"NSDictionary",&,N,V_vibrationPattern
repeats
TB,N,GisRepeating,V_repeats
maxDuration
Td,N,V_maxDuration
controllerAttributes
T@"NSDictionary",&,N,V_controllerAttributes
alertType
Tq,N,V_alertType
alertConfiguration
T@"TLAlertConfiguration",C,N,V_alertConfiguration
songPath
T@"NSString",C,N,V_songPath
eventType
Tq,N,V_eventType
<SBUISound-%p>
backgroundStyle
presentationStyle
notificationBehavior
restrictions
elementOverrides
TB,R,N,GisHidden
restrictedCapabilities
TQ,R,N
T@"NSArray",R,C,N
T@"SBLockScreenLegibilitySettings",R,&,N
TB,N,GisHidden
TQ,N
T@"NSArray",C,N
T@"SBLockScreenLegibilitySettings",&,N
BANNER_OKAY
CarDisplay
CarDisplayChevronBanner
textLabel
T@"UILabel",&,N,V_textLabel
unselectedTextColor
T@"UIColor",&,N,V_unselectedTextColor
selectedTextColor
T@"UIColor",&,N,V_selectedTextColor
unselectedImage
T@"UIImage",&,N,V_unselectedImage
selectedImage
T@"UIImage",&,N,V_selectedImage
highlightColor
T@"UIColor",&,N,V_highlightColor
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoardUI_Sim/SpringBoard-3563.87/SBRemoteAlertController.m
definition
MACH_PORT_VALID(tokenPort)
remoteAlertDelegate
T@"<SBRemoteAlertDelegate>",R,W,N
remoteAlertClass must conform to SBRemoteAlert
the remoteAlert's delegate is wrong : remoteAlert=%@ actual=%@ expected=%@
v24@?0@"<SBRemoteAlert>"8@"NSError"16
the controller must be invalidated before it goes away
alert
T@"<SBRemoteAlert>",R,N
%s is not a valid initializer. You must call -[%@ initWithChildViewController:].
-[SBUIIconForceTouchWrapperViewController initWithNibName:bundle:]
cornerRadius
backgroundView
containerView
childView
H:|[backgroundView]|
V:|[backgroundView]|
H:|[containerView]|
V:|[containerView]|
childViewController
T@"UIViewController",R,N,V_childViewController
contentAlpha
Td,N,V_contentAlpha
contentNativeSize
T{CGSize=dd},N,V_contentNativeSize
iconForceTouchViewController
T@"SBUIIconForceTouchViewController",R,N,V_iconForceTouchViewController
T@"<SBUIIconForceTouchControllerDataSource>",W,N,V_dataSource
T@"<SBUIIconForceTouchControllerDelegate>",W,N,V_delegate
-[SBUIAppIconForceTouchControllerDataProvider init]
T@"<SBUIAppIconForceTouchControllerDataSource>",R,N,V_dataSource
T@"SBUIAppIconForceTouchController",R,W,N,V_controller
applicationBundleIdentifier
T@"NSString",R,N
applicationBundleURL
T@"NSURL",R,N
applicationShortcutWidgetBundleIdentifier
T@"NSArray",R,N
effectStrength
Td,N,V_effectStrength
SBLockScreenTimerDial
@"UIImage"8@?0
SBLockScreenTimerDial.SBLockScreenTimerDial.%x
@"UIImage"16@?0^Q8
%@%@
T@"_UILegibilitySettings",&,N
strength
Td,N,V_strength
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoardUI_Sim/SpringBoard-3563.87/SBUIBannerTargetManager.m
must provide a valid target implementation
<%@:%p identifier=%p idiom=%i> -> %@
bannerTargetIdentifier
T^v,R,N
bannerTargetIdiom
T^v,R,N,V_identifier
Tq,R,N,V_idiom
v16@?0@"<SBUIBannerTargetManagerObserver>"8
targets
SBAwayViewPluginActivationReasonKey
SBAwayViewPluginActivatingForRemoteEvent
Plugin %@ did not call transition completion block
pluginAgent
T@"<SBLockScreenPluginAgent>",W,N
pluginPriority
pluginViewController
T@"UIViewController<SBLockScreenPluginViewController>",R,N
pluginAppearance
T@"<SBLockScreenPluginAppearance>",R,N
pluginUnlockAction
T@"SBLockScreenPluginAction",R,&,N
orientation
viewCanBeDisplayed
TB,N,V_viewCanBeDisplayed
T@"<SBLockScreenPluginAgent>",W,N,V_agent
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoardUI_Sim/SpringBoard-3563.87/SBUIBannerContext.m
must supply a valid item
must supply a valid target
must supply a valid source
B16@?0@"SBUIBannerAction"8
<%@:%p target=%@ source=%@ item=%@ modal=%@ presentingActionIdentier=%@>
TB,R,N,GisValid,V_isValid
requestsModalPresentation
TB,N,V_requestsModalPresentation
presentingActionIdentifier
T@"NSString",C,N,V_presentingActionIdentifier
remoteInteractiveAction
T@"SBUIBannerAction",R,N
textInputAction
item
T@"SBUIBannerItem",R,N,V_item
source
T@"<SBUIBannerSource>",R,N,V_source
target
T@"<SBUIBannerTarget>",R,N,V_target
AppIconForceTouch
name
process
userInfo
T@"NSString",C,N,V_name
T@"NSDictionary",C,N,V_userInfo
T@"<FBSProcess>",&,N,V_process
observer
T@"<SBLockScreenPluginLifecycleObserver>",&,N,V_observer
auxiliaryAnimation
T@?,C,N,V_auxiliaryAnimation
SBUIBannerContext *SBUIBannerTargetDequeueContextFromSourcesWithCheck(__strong id<SBUIBannerTargetImplementation>, __strong id<NSFastEnumeration>, __strong SBUIBannerDequeueAllowedCheck)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoardUI_Sim/SpringBoard-3563.87/SBUIBannerTarget.m
source inconsistency error: source=%@ peek=%@ dequeue=%@
%{public}@: Client "%{public}@" is not allowed to use this class. All requests will be ignored.
malformed or dead create message received and discarded -> payload=%@
no controller found for activate/invalidate message -> payload=%@
malformed or dead activate/invalidate message received and discarded -> payload=%@
 ****==== %s client=%@ type=%lli payload=%@
Could not launch application with application shortcut item: %{public}@, error: %{public}@.
Entitlement %{public}@ required to create remoteAlert with definition=%{public}@
SBSRemoteAlertDefinition required to create remoteAlert : definition=%{public}@
%{public}@ can't present without a data source.
%{public}@ can't present without a window.
