isEqualToString:
alloc
initWithName:profile:productFamily:
initWithName:profile:productFamily:clientType:
UTF8String
length
stringWithCapacity:
appendFormat:
init
copy
release
dealloc
componentsSeparatedByString:
objectAtIndex:
integerValue
count
sendMessage:timestamp:method:respCode:eventID:flag:
setCombinedSessionIDString:
newBackendWithName:profile:productFamily:clientType:
convertIntoSHA256:
cleanup
setSelfVersion:
updateState
setStartTimestamp:
sendMessage:timestamp:method:respCode:flag:
flushMessagesWithCompletion:
uploadFileAtPath:extensionToken:
uploadLogData:
setCorrelatedSessionID:
state
setState:
sessionID
setSessionID:
combinedSessionIDString
hierarchy
setHierarchy:
compType
setCompType:
clientVersion
setClientVersion:
udid
setUdid:
name
setName:
displayURL
setDisplayURL:
productVersion
setProductVersion:
buildVersion
setBuildVersion:
hardwareType
setHardwareType:
productFamily
setProductFamily:
isInternal
setIsInternal:
userInfoDict
setUserInfoDict:
requireUserInfo
setRequireUserInfo:
batchEvents
setBatchEvents:
samplingFactor
setSamplingFactor:
samplingThreshold
setSamplingThreshold:
_profile
_name
_state
_productVersion
_buildVersion
_hardwareType
_productFamily
_startTimeStamp
_sessionID
_combinedSessionIDString
_hierarchy
_compType
_clientVersion
_eventID
_selfVersionMajor
_selfVersionMinor
_isInternal
_requireUserInfo
_userInfoDict
_batchEvents
_udid
_displayURL
_samplingFactor
_samplingThreshold
objectForKeyedSubscript:
initWithString:
intValue
class
bundleForClass:
infoDictionary
objectForKey:
boolValue
countByEnumeratingWithState:objects:count:
setObject:forKey:
initWithSuiteName:
integerForKey:
stringForKey:
stringWithFormat:
URLWithString:
requestWithURL:cachePolicy:timeoutInterval:
setValue:forHTTPHeaderField:
sharedSession
dataTaskWithRequest:completionHandler:
resume
autorelease
description
numberWithBool:
dictionaryWithObjects:forKeys:count:
numberWithInt:
allHeaderFields
characterSetWithCharactersInString:
componentsSeparatedByCharactersInSet:
indexOfObject:
propertyListWithData:options:format:error:
pathForResource:ofType:
dataWithContentsOfFile:
initWithBase64EncodedString:options:
bytes
retain
lowercaseString
dictionaryWithObjectsAndKeys:
initWithDomain:code:userInfo:
removeItemAtPath:error:
defaultManager
stringByExpandingTildeInPath
contentsOfDirectoryAtPath:error:
code
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
objectAtIndexedSubscript:
stringByAppendingPathComponent:
attributesOfItemAtPath:error:
date
timeIntervalSinceDate:
compare:
timeIntervalSince1970
createFileAtPath:contents:attributes:
fileExistsAtPath:
initWithFormat:arguments:
fileHandleForWritingAtPath:
seekToEndOfFile
dataUsingEncoding:
writeData:
closeFile
dataWithLength:
mutableBytes
setLength:
gzipDeflate
dataWithBytes:length:
base64EncodedStringWithOptions:
setObject:forKeyedSubscript:
internalSendMessage:timestamp:method:respCode:
shutdownSessionAggregation
setStorebagVersion:
unsignedIntValue
currentLocale
storebagForSession:
storebagVersionForSession:
createBackendsWithStorebag:
updateSessionWithDefaultSessionInfo
sendStartMessage
fetchReportingStates
receivedUserInfo:
sendMessageWithCategory:type:payload:error:
sendMessageWithDictionary:error:
internalFlushMessagesWithCompletion:
uploadFileWithURL:extensionToken:completionHandler:
sendMessageWithSessionInfo:userInfo:storebag:category:type:payload:
sessionIDString
parentSessionForChild:
floatValue
arrayWithCapacity:
addObject:
userInfoUpdatedForSession:
updateReportingStates
updateDownstreamSessions:
updateUserInfoForBackends
numberWithUnsignedShort:
remoteObjectProxyWithErrorHandler:
sendMessageToClient:timestamp:category:type:payload:
initWithDictionary:
addEntriesFromDictionary:
getAncestorWithAggregatorForSession:
sendToAggregator:timestamp:category:type:payload:
aggregateMessage:timestamp:category:type:payload:
path
absoluteString
parentSessionIDStringForSession:
setSessionInfo:userInfo:frameworksToCheck:hasAggregationBlock:
startConfigWithCompletionHandler:
fetchStatesWithUserInfo:completionHandler:
fetchDisplayURL:
sendMessageWithCategory:type:payload:reply:
sendMessageWithDictionary:reply:
finishSessionWithReply:
uploadFileAtPath:extensionToken:completionHandler:
uploadLogData:completionHandler:
sendMessageWithSessionInfo:userInfo:category:type:payload:reply:
initWithSessionDelegate:connection:
syncReportingStates
getSessionHierarchy
updateCombinedSessionID
userInfo
sessionInfo
setSessionIDString:
storebagVersion
hasAggregator
setHasAggregator:
_sessionInfo
_userInfo
_frameworks
_backends
_periodicServices
_sessionDelegate
_sessionIDString
_storebagVersion
_deviceid
_connection
_hasAggregator
respondsToSelector:
methodSignatureForSelector:
invocationWithMethodSignature:
setSelector:
setTarget:
setArgument:atIndex:
invoke
isClientTypeAllowed:
initWithPath:
isLoaded
load
classNamed:
_clientBundle
_awdAdaptorClass
_awdAdaptor
initWithBytes:length:
initWithBytes:length:eventNum:
numberOfChecks
setNumberOfChecks:
numberOfRetransmits
setNumberOfRetransmits:
eventNumber
setEventNumber:
data
setData:
_numberOfChecks
_numberOfRetransmits
_eventNumber
_data
initWithName:profile:serverIP:serverPort:productFamily:
useReliableUDP
myPeriodicTask
cleanupSources
descriptionForObject:
keysSortedByValueUsingComparator:
sanitize:
writeLocalLog:
tryToSendMsg:length:eventNumber:
archivedDataWithRootObject:
requestWithURL:
setHTTPMethod:
setHTTPBody:
initWithData:encoding:
initWithName:serverIP:serverPort:productFamily:
sendMessage:timestamp:method:respCode:eventID:
_socketDescriptor
_messageQueue
_reliableUDP
_usingProfile
_networkProcQueue
_readSource
_timer
_cleanupState
_postURL
processSocketRead
removeObjectAtIndex:
removeObjectIdenticalTo:
isKindOfClass:
stringByReplacingOccurrencesOfString:withString:
stringWithUTF8String:
startLogging:facility:
initWithMachServiceName:
setDelegate:
mainRunLoop
fileType
initWithContentsOfFile:
URLQueryAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
lastPathComponent
stringByAppendingString:
rangeOfString:
uploadURL
setUploadURL:
_uploadURL
valueForEntitlement:
interfaceWithProtocol:
setExportedInterface:
setExportedObject:
setRemoteObjectInterface:
setInterruptionHandler:
removeObject:
setInvalidationHandler:
timeIntervalSinceNow
fetchAndCacheStorebag:
containsObject:
getFirstSessionWithHierarchy:inSessionList:
listener:shouldAcceptNewConnection:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
retainCount
zone
hash
superclass
debugDescription
_sessionList
_cachedStorebags
_correlatedSessions
getPersistentIdentifierForDNU:
numberWithLong:
numberWithUnsignedInt:
numberWithDouble:
numberWithUnsignedChar:
localTimeZone
secondsFromGMT
numberWithInteger:
filterEvent:
removeObjectForKey:
enumerateKeysAndObjectsUsingBlock:
initWithObjectsAndKeys:
dataWithJSONObject:options:error:
stringValue
statusCode
caseInsensitiveCompare:
rangeOfString:options:
matchExactStringWithList:wholeString:whitelist:
matchStringWithList:wholeString:whitelist:
matchClientNameAndServiceID:clientName:serviceID:
updatePostLink:
resetBackendStateWithClient:
createFiltersFromArray:
doubleValue
updateBackendState
allKeys
dictionaryWithDictionary:
createEventDictfromPayload:timestamp:method:respCode:eventID:
prepareEventForMessage:
batchEvent:
arrayWithObjects:count:
createMessageForPostAndLogging:prettyJsonString:
initWithFormat:
postJSONMessage:withFlag:method:responseCode:completion:
mutableCopy
removeAllObjects
postURL
setPostURL:
_useDefaultPostURL
_realtimePostURL
_useDefaultRealtimePostURL
_batchedEvents
_queue
_numberOfFilters
_filters
_dnuEnabled
_dnuType
_eventThreshold
_extrasOnInternal
_overrideSampling
_eventMethodCounts
_uuidRespectDnu
_uuidOverrideDnu
_uuidCustom
_forceEventLogging
Macintosh
RTCReportingBackend(newBackendWithName): %s
%02x
state
Ti,V_state
sessionID
TI,V_sessionID
combinedSessionIDString
T@"NSString",C,V_combinedSessionIDString
hierarchy
Ti,V_hierarchy
compType
Ti,V_compType
clientVersion
TS,V_clientVersion
udid
T*,V_udid
name
T@"NSString",C,V_name
displayURL
T@"NSString",C,V_displayURL
productVersion
T@"NSString",C,V_productVersion
buildVersion
T@"NSString",C,V_buildVersion
hardwareType
T@"NSString",C,V_hardwareType
productFamily
T@"NSString",C,V_productFamily
userInfoDict
T@"NSDictionary",C,V_userInfoDict
isInternal
TC,V_isInternal
requireUserInfo
TC,V_requireUserInfo
batchEvents
TC,V_batchEvents
samplingFactor
Td,V_samplingFactor
samplingThreshold
T@"NSNumber",V_samplingThreshold
OSXA
HKCAM
CM-HLS
CM-CRABS
DEVPUBS
VIDEOS
fetchStorebagForEnvironmentAndClientType: Could not find storebag name for client type %d
fetchStorebagForEnvironmentAndClientType: Could not fetch storebag for client type %d
fetchStorebagForEnvironmentAndClientType: Seed section is missing in the storebag.
fetchStorebagForEnvironmentAndClientType: Could not find storebag for client type %d with %s environment
version
refresh_cycle
fetchStorebagForEnvironmentAndClientType: Store bag override MaxAge=%d
gamekit
coremedia
avconference
appletv
itunesradio
suggestions
osxanalytics
devpubs
videosapp
createBackends: Attempted to create backends with nil storebag
createBackends: Attempted to create backends with nil session info
CFBundleVersion
com.apple.rtcreporting
environmentType
userDefaultsEnvironment: Invalid environment type %u
userDefaultsEnvironment: Environment type %u
v8@?0
%@/%@?version=%@
fetchStorebagWithName: Storebag Server URL: %s
fetchStorebagWithName: Adding 'Last-Modified: %s' to the header
If-Modified-Since
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
fetchStorebagWithName: Error resolving with lookup server %s, sendSynchronousRequest error %s
fetchStorebagWithName: Loading default storebag '%s'
apple_internal
active
development
release
1.0.0-AVConference-Fallback
Cache-Control
max-age
Last-Modified
fetchStorebagWithName: storebag content has not changed. using its cached version
fetchStorebagWithName: New 'Last-Modified: %s' received
fetchStorebagWithName: propertyListWithData error %s
signature
fetchStorebagWithName: Signature is missing
publicKey
fetchStorebagWithName: Signature can not be verified, %p
rtcreporting_storebag_url
https://qtpartners.apple.com/storebags/maple
https://pancake.apple.com/bags/maple
seed
%@:%@
UniqueDeviceID
ProductVersion
BuildVersion
HWModelStr
SerialNumber
ProductType
DeviceName
ReleaseType
Internal
writeToLogFile: Deleted expired rtcreportingd log file %s (%s)
~/Library/Logs/RTCReports
writeToLogFile: Creating rtcreportingd log directory at %s
writeToLogFile: Error reading from log directory: %s
rtcreportingd
messageLog.diag
%@_%d_%@
writeToLogFile: Created new rtcreportingd log file %s (%s)
writeToLogFile: Failed to create new rtcreportingd log file %s
(%@) 
writeToLogFile: Saved log message to %s
%@:%@:%@
uuid
getPersistentIdentifierForCustomClientIDSuffix: The value for %s: %s
compressDataWithZlibOrGzip: Cannot compress empty NSData
1.2.8
Invalid parameter passed in to function.
Insufficient memory.
The version of zlib.h and the version of the library linked do not match.
Unknown error code.
compressDataWithZlibOrGzip: deflateInit2() Error: "%s" Message: "%s"
Error occured while reading file.
The stream state was inconsistent (e.g., next_in or next_out was NULL).
The deflate data was invalid or incomplete.
Memory could not be allocated for processing.
Ran out of output buffer for writing compressed bytes.
compressDataWithZlibOrGzip: zlib error while attempting compression: "%s" Message: "%s"
compressDataWithZlibOrGzip: Compressed file from %u to %u
initWithSessionDelegate: ReportingdSession initWithSessionDelegate:%s
initWithSessionDelegate: Initialized session with UUID %s
dealloc: ReportingdSession dealloc: %u
StorebagVersion
setSessionInfo: Configuring session %u
setSessionInfo: Configure session: user info provided without requiring it
AutomaticTimeSet
Locale
SerialNum
Unknown
Version
Build
Hardware
Product
ReportVers
startConfigWithCompletionHandler: Starting configuration for session %u
fetchStatesWithUserInfo: Fetching states for session %u
fetchDisplayURL: Fetching display URL for session %u
URL not available
sendMessageWithCategory: Sending message for session %u
flushMessagesWithCompletion: Flushing messages for session %u
v24@?0@"NSString"8@"NSError"16
finishSessionWithReply: Finishing session %u
uploadFileAtPath: Uploading file for session %u
sendMessageWithSessionInfo: Could not retrieve identifiers from sessionInfo
sendMessageWithSessionInfo: Sending message with session info for session %u
finished
storebag not available
createBackendsWithStorebag: Creating backends for session %u
HTTPSPostBackend(syncReportingStates): %s: state and sampling rate updated to %d, %.02f%%
syncReportingStates: child session %u (backend %s) with hierarchy %d is missing its parent
receivedUserInfo: Received new user info for session %u
sendMessageWithDictionary: Failed to get remote object proxy: %s
v16@?0@"NSError"8
shutdownSessionAggregation: Disable aggregation module for session %u
sendMessageWithDictionary: No backends available to send message
sendMessageWithDictionary: Missing mandatory parameter 'category'
sendMessageWithDictionary: Missing mandatory parameter 'type'
[%@ -> sendMessageWithDictionary] %@
internalSendMessage: Sent internal message (method:%d respCode:%d)
No backends available to send message
internalFlushMessagesWithCompletion: %s
[%@ -> flushMessages] %@
uploadFileWithURL: File upload successful for %s
uploadFileWithURL: File upload failed for %s
[uploadFileWithURL] Upload %@ for file %@
succeeded
failed
uploadLogData: Log data array upload successful
uploadLogData: Log data array upload failed
%@.%@
updateCombinedSessionID: Updating combined session ID '%s' for session %u backends
sendMessageWithSessionInfo: Sending single message with sessionID %ld
RsendMessageWithSessionInfo: Attempted to send message with one or more nil parameters
sendMessageWithSessionInfo: No backends available to send single message
sendMessageWithSessionInfo: user info provided without requiring it.
[%@ -> sendMessageWithSessionInfo] %@
sessionIDString
T@"NSString",C,V_sessionIDString
storebagVersion
T@"NSString",C,V_storebagVersion
userInfo
T@"NSDictionary",R,N,V_userInfo
sessionInfo
T@"NSDictionary",R,N,V_sessionInfo
hasAggregator
TB,V_hasAggregator
sendMessageWithMethod:respCode:dict:
AWDBackend(sendMessage): AWD adaptor %s does not respond to forwarding selector %s
AWDBackend(initWithName): Loading AWD adaptor class for client type %d
/System/Library/PrivateFrameworks/GameKitServices.framework/Frameworks/GKSPerformance.framework
AWDBackend(initWithName): No matching bundle found for client type %d
AWDAdaptor
numberOfChecks
Ti,V_numberOfChecks
numberOfRetransmits
Ti,V_numberOfRetransmits
eventNumber
TS,V_eventNumber
data
T@"NSData",&,V_data
port
DashboardBackend(initWithName): can't resolve server IP
DashboardBackend(initWithName): can't resolve server port
DashboardBackend(initWithName): socket() failed (%d)
com.apple.RTCReporting.networkProc
display_url
post_url
reliable
DashboardBackend(initWithName): initWitName with all null params.
DashboardBackend(initWithName): socket connect() failed.
DashboardBackend(initWithName): can't create timer source.
DashboardBackend(sendMessage): can't malloc.
q24@?0@8@16
%s %s=%s
DashboardBackend(uploadLogData): Post URL for log data array is nil
DashboardBackend(uploadLogData): Failed to serialize log data array for upload
POST
application/octet-stream
Content-Type
DashboardBackend(uploadLogData): Error uploading log data array (%s)
DashboardBackend(uploadLogData): Log data uploaded to %s
LogDataUploadLocation
DashboardBackend(useReliableUDP): can't bind socket, %d
DashboardBackend(useReliableUDP): can't create read source
DashboardBackend(myPeriodicTask): clean up at myPeriodicTask.
DashboardBackend(myPeriodicTask): scheduled last resort clean-up in %d ms.
null
empty
%u.%03d %s 127.0.0.1 %s %5u %5u %5u %5u %5u %s
Daemon
com.apple.rtcreportingd
main: Listener resumes with sandbox, start loop.
UploadBackend(initWithName): can't resolve upload post URL.
UploadBackend(uploadFileAtPath): Uploading file %s
UploadBackend(uploadFileAtPath): Only upload a regular file.
UploadBackend(uploadFileAtPath): Input file is empty
FaceTime AFRC log
%@?uuid=%s&sequence=%u&description=%@%%20(Uploaded%%20by%%20GKS)&filename=%@&raw=true
UploadBackend(uploadFileAtPath): Unable to create URL request
gzip
Content-Encoding
UploadBackend(uploadFileAtPath): sending to |%s|, Json output: %s
success
UploadBackend(uploadFileAtPath): post %s
uploadURL
T@"NSString",C,V_uploadURL
com.apple.private.rtcreportingd
listener: Accepting new XPC connection %s as it has proper entitlement, %d(%d) connections.
listener: new XPC connection %s does not have required rtcreporting entitlement. Closing connection...
listener: XPC connection to %s was interrupted
listener: XPC connection to %s was invalidated
storebagForSession: Retrieving storebag for session %u with client type %d
StorebagFetchTime
StorebagFetchState
Fetch Successful
StorebagMaxAge
storebagForSession: Cached storebag found for client type %d
StorebagData
storebagForSession: Not fetching storebag for client type %d - must wait %d seconds between attempts
parentSessionIDStringForSession: Checking userInfoKey '%s' for session %u
parentSessionIDStringForSession: ERROR: No sessions found for user info key %s
parentSessionIDStringForSession: ERROR: Session %u not found for user info key %s
parentSessionIDStringForSession: Found a gap in hierarchy (one of parents missing): incomplete parentSessionID is '%s'
userInfoUpdatedForSession: No user info found for session %u
userInfoUpdatedForSession: Adding session %u to list for userInfoKey %s
parentSessionForChild: Checking userInfoKey '%s' for session %u
parentSessionForChild: ERROR: No sessions found for user info key %s
parentSessionForChild: ERROR: Session %u not found for user info key %s
parentSessionForChild: Unable to find session with hierarchy of %d for userInfoKey '%s'
getAncestorWithAggregatorForSession: No user info found for session %u
updateDownstreamSessions: No user info found for session %u
updateDownstreamSessions: Updating combined session ID and syncing reporting states for session %u
fetchAndCacheStorebag: Fetching storebag for client type %d
StorebagLastModified
fetchAndCacheStorebag: Storebag max age: %d seconds
fetchAndCacheStorebag: Unable to fetch storebag for client type %d
Fetch Failure
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
clients
HTTPSPostBackend(initWithName): can't find the client list.
httpsPostURL
HTTPSPostBackend(initWithName): Using user default '%s' for postURL
httpsRealtimePostURL
HTTPSPostBackend(initWithName): Using user default '%s' for realtimePostURL
forceEventLogging
_startTS
_sender
_clientVersion
_sessionID
_eventNumber
_method
_status
_clientTS
eventTime
_productFamily
_productModel
_osVersion
_build
_internal
%u.%u
_reportVers
_timezoneOffset
HTTPSPostBackend(batchEvent): Flushing all batched events as we reached event threshold for method %d
HTTPSPostBackend(createMessageForPostAndLogging): NSJSONSerialization unable to handle key: %s, value: %s
v32@?0@8@16^B24
postTime
clientId
events
postURL is nil
X-RTC-Client-Name
X-RTC-Service-Name
X-RTC-Internal-Build
RTCReporting/%d.%d (%@; %@)
User-Agent
X-RTC-Client-Version
X-RTC-Sender
%@ %@
X-RTC-Event-Map
application/json
Accept
Content-Length
HTTPSPostBackend(postJsonMessage): post error: %s
backend %s disabled by server %d return code
postJSONMessage: %s
method
status
action
remove
sha256
HTTPSPostBackend(updatePostLink): Storebag '%s' for postURL
realtime_post_url
HTTPSPostBackend(updatePostLink): Storebag '%s' for realtimePostURL
HTTPSPostBackend(updatePostLink): realtimePostURL defaults to postURL '%s'
client
service
event_threshold
resetBackendStateWithClient: event_threshold set to %d
extras_on_internal
setBackendStateWithClient: extras on internal is set to %d
expedite
HTTPSPostBackend(updateBackendState): Store bag override  _batchEvent=%d
override_dnu
HTTPSPostBackend(updateBackendState): reporting disabled by DNU: %d.
locale_whitelist
HTTPSPostBackend(updateBackendState): (%s) isn't in country code list %s
device_whitelist
HTTPSPostBackend(updateBackendState): (%s) isn't in device whitelist %s
device_blacklist
HTTPSPostBackend(updateBackendState): (%s) is in device blacklist %s
filters
HTTPSPostBackend(updateBackendState): filters are required.
sampling_threshold
per_country_sampling_thresholds
country
threshold
HTTPSPostBackend(updateBackendState): sampling threshold for %s changed from %.02f to %.02f
override_sampling
custom_clientId
HTTPSPostBackend(updateBackendState): %s: client found %s:%s, state=%d, samplingFactor=%f, hierarchy=%d
HTTPSPostBackend(sendMessage): Adding dnu type and sampling threshold to SESSION_TYPE_STOP message dictionary
SamplingThreshold
OverrideSampling
Batch
HTTPSPostBackend(sendMessage): SESSION_TYPE_STOP message dictionary is nil
HTTPSPostBackend(sendMessage): realtime is %d
HTTPSPostBackend(sendMessage): Batching %d, %d, %d
HTTPSPostBackend(sendMessage): Got a realtime event and some events have already been batched. Forcing Flush here to keep events in order.
HTTPSPostBackend(sendMessage): Sending %d, %d, %d
Flushed events:
Standalone event:
Nothing to flush
Can not flush: userInfo is required
HTTPSPostBackend(flushMessagesWithCompletion): called
postURL
T@"NSString",C,V_postURL
RTCReportingBackend
ReportingdUtil
zlib
ReportingdSession
ClientSessionInterface
AWDBackend
UDPPacketToSend
DashboardBackend
PrivateMethods
PowerLogBackend
UploadBackend
ClientSessionReplyInterface
ReportingdAgent
NSXPCListenerDelegate
NSObject
ReportingdSessionDelegate
HTTPSPostBackend
@44@0:8@16@24@32i40
@24@0:8@16
@40@0:8@16@24@32
v16@0:8
v24@0:8@16
@48@0:8@16r^{timeval=qi}24S32S36S40i44
v24@0:8r^{timeval=qi}16
@44@0:8@16r^{timeval=qi}24S32S36i40
@24@0:8@?16
B32@0:8@16*24
B24@0:8@16
i16@0:8
v20@0:8i16
I16@0:8
v20@0:8I16
@16@0:8
S16@0:8
v20@0:8S16
*16@0:8
v24@0:8*16
C16@0:8
v20@0:8C16
d16@0:8
v24@0:8d16
@"NSDictionary"
@"NSString"
@"NSNumber"
v56@0:8@16@24@32S40S44@48
v44@0:8@16@24@32B40
v44@0:8@"NSDictionary"16@"NSDictionary"24@"NSArray"32B40
v24@0:8@?16
v24@0:8@?<v@?@"NSArray">16
v32@0:8@16@?24
v32@0:8@"NSDictionary"16@?<v@?@"NSArray">24
v24@0:8@?<v@?@"NSString">16
v40@0:8S16S20@24@?32
v40@0:8S16S20@"NSDictionary"24@?<v@?@"NSString">32
v32@0:8@"NSDictionary"16@?<v@?@"NSString">24
v24@0:8@?<v@?@"NSString"@"NSError">16
v40@0:8@16*24@?32
v40@0:8@"NSURL"16*24@?<v@?B>32
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
v56@0:8@16@24S32S36@40@?48
v56@0:8@"NSDictionary"16@"NSDictionary"24S32S36@"NSDictionary"40@?<v@?@"NSString">48
@32@0:8@16@24
@40@0:8S16S20@24@32
v48@0:8@16d24S32S36@40
v40@0:8@16r^{timeval=qi}24S32S36
B16@0:8
v20@0:8B16
@"NSMutableDictionary"
@"<ReportingdSessionDelegate>"
[41C]
@"NSXPCConnection"
B20@0:8i16
@"NSBundle"
@32@0:8*16S24S28
@"NSData"
@52@0:8@16@24@32S40@44
@44@0:8@16@24S32@36
@44@0:8@16r^{timeval=qi}24S32S36S40
@"NSMutableArray"
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_source>"
v32@0:8^{tagReportingPacket={tagReportingPacketHeader=CCCCIISSSS[40C]SS}[1024c]}16S24S28
@24@0:8^{tagReportingPacket={tagReportingPacketHeader=CCCCIISSSS[40C]SS}[1024c]}16
v48@0:8@"NSDictionary"16d24S32S36@"NSDictionary"40
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
@"NSDictionary"24@0:8@"ReportingdSession"16
@"NSString"24@0:8@"ReportingdSession"16
v24@0:8@"ReportingdSession"16
@"ReportingdSession"24@0:8@"ReportingdSession"16
@28@0:8i16@20
@32@0:8@16^@24
v52@0:8@16i24@28@36@?44
B36@0:8@16@24B32
B40@0:8@16@24@32
@"NSOperationQueue"
^{filterTag=iii@}
