_PASNotificationToken
_PASNotificationDescriptor
_PASNotificationTracker
_PASStringPairs
_PASBloomFilterHashArray
_PASBloomFilterDummy
_PASBloomFilter
_PASBloomFilterForWriting
_PASRng
_PASCrashHelper
_PASAsset
_PASDeviceInfo
_PASTuple2
NSCopying
_PASTuple3
_PASDeviceState
_PASDeviceStateProtocol
NSObject
_PASPreparedStatement
NSDiscardableContent
_PASOperationForWithDbLock
NSCoding
_PASSqliteDatabase
_PASChangeUser
token
setToken:
_token
.cxx_destruct
queue
setQueue:
group
setGroup:
handler
setHandler:
isCanceled
_queue
_group
_handler
init
dealloc
numberWithUnsignedInteger:
setObject:forKeyedSubscript:
objectForKeyedSubscript:
removeObjectForKey:
_deregisterHandlerWithToken:waitOnPending:
enumerateKeysAndObjectsUsingBlock:
registerWithQueue:handler:
deregisterHandlerWithToken:
deregisterHandlerAsyncWithToken:
issueNotificationAsyncWithContext:
_lock
_nextNotificationToken
_observers
count
objectAtIndexedSubscript:
initWithKeys:values:
keyAtIndex:
valueAtIndex:
keys
values
_keys
_values
exceptionWithName:reason:userInfo:
alloc
initWithBytesNoCopy:length:
mutableBytes
initWithHashCount:
hashes
_data
initWithResult:
initDummy
instanceThatAlwaysReturns:
newHashesArray
computeHashesWithSeed:forData:reuse:
combineHashesWithSeed:hashA:hashB:reuse:
getWithHashes:
_result
dataWithContentsOfFile:options:error:
code
domain
isEqualToString:
getBytes:range:
length
initWithData:numBits:numHashFunctions:
dataUsingEncoding:
bytes
bloomFilterWithPathToFile:
numHashes
computeHashesForString:reuse:
_numBits
_numHashFunctions
dataWithLength:
replaceBytesInRange:withBytes:length:
writeToFile:atomically:
bloomFilterInMemoryWithNumberOfValuesN:errorRateP:
setWithHashes:
saveToFile:
initWithSeed:
next
_state
simulateCrashWithDescription:
_initWithBundleIdentifier:defaultBundlePath:compatibilityVersion:matchingKeysAndValues:notificationQueue:
propertyListWithData:options:format:error:
class
isKindOfClass:
integerValue
unsignedIntegerValue
copy
initWithDictionary:copyItems:
_loadDefaultBundleVersion
stringByAppendingString:
UTF8String
_assetDescription
_updateAssetMetadata
initWithCapacity:
description
addObject:
componentsJoinedByString:
stringWithFormat:
bundleWithPath:
bundleIdentifier
infoDictionary
intValue
tupleWithFirst:second:
arrayWithObjects:count:
pathsForResourcesWithNames:assetVersion:
localURL
path
countByEnumeratingWithState:objects:count:
first
second
stringByAppendingPathExtension:
stringByAppendingPathComponent:
pathForResource:ofType:
defaultManager
fileExistsAtPath:
initWithAssetType:
setQueriesLocalAssetInformationOnly:
runQueryAndReturnError:
_downloadInitialAssetMetadata
attributes
isEqual:
state
beginDownloadWithOptions:
_issueUpdateNotifications
initWithAssetTypeDescriptorPath:defaultBundlePath:matchingKeysAndValues:notificationQueue:
assetVersion
assetType
registerUpdateHandler:
deregisterUpdateHandlerWithToken:
deregisterUpdateHandlerAsyncWithToken:
pathForResourceWithName:extension:assetVersion:
compatibilityVersion
_bundleIdentifier
_defaultBundlePath
_compatibilityVersion
_requiredMobileAssetProperties
_notificationQueue
_defaultBundleVersion
_installNotificationToken
_metadataNotificationToken
_updateNotificationTracker
_bestAvailableVersion
_bestAvailableAsset
_delay
standardUserDefaults
synchronize
boolForKey:
isBetaBuild
isInternalBuild
sharedInstance
isLowEndHardware
isBatterySaverEnabled
isDemoModeEnabled
shouldIncludePredictionLogs
_batterySaverModeToken
initWithFirst:second:
isEqualToTuple2:
hash
initWithFormat:
copyWithZone:
_first
_second
initWithFirst:second:third:
isEqualToTuple3:
tupleWithFirst:second:third:
third
_third
bundleForClass:
bundlePath
regularExpressionWithPattern:options:error:
matchesInString:options:range:
rangeAtIndex:
substringWithRange:
fileExistsAtPath:isDirectory:
dictionaryWithContentsOfFile:
valueForKey:
isClassCLocked
isUnlocked
lockState
registerForLockStateChangeNotifications:
unregisterForLockStateChangeNotifications:
isDeviceFormattedForProtection
blockUntilFirstUnlock
runBlockWhenDeviceIsClassCUnlocked:
isConstrainedDevice
currentOsBuild
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
archivedDataWithRootObject:
initWithBytesNoCopy:length:freeWhenDone:
initForReadingWithData:
setRequiresSecureCoding:
decodeObjectOfClasses:forKey:
initWithBytesNoCopy:length:encoding:freeWhenDone:
mutableCopy
appendString:
_finalizeWithLogWarning:
beginContentAccess
endContentAccess
discardContentIfPossible
isContentDiscarded
initWithStatementPointer:owner:
stmt
_owner
_isFinalized
_useCount
_stmt
willChangeValueForKey:
didChangeValueForKey:
automaticallyNotifiesObserversForKey:
start
waitForStart
complete
isAsynchronous
isExecuting
isFinished
_started
_completed
isInMemoryPath:
setCountLimit:
setUnderlyingQueue:
setMaxConcurrentOperationCount:
dbErrorWithCode:sqliteReturnValue:lastErrno:query:
numberWithInt:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
prepAndRunQuery:onPrep:onRow:onError:
closePermanently
waitUntilAllOperationsAreFinished
removeAllObjects
initWithFilename:flags:error:
containsString:
UUID
UUIDString
stringByDeletingLastPathComponent
corruptionMarkerFilename
corruptionMarkerPathForPath:
corruptionMarkerPath
createFileAtPath:contents:attributes:
removeItemAtPath:error:
isInMemory
attributesOfFileSystemForPath:error:
substringToIndex:
stringByAppendingFormat:
freeSpace
setNumberStyle:
setUsesGroupingSeparator:
setGroupingSeparator:
setUsesSignificantDigits:
setMinimumSignificantDigits:
setMaximumSignificantDigits:
stringFromNumber:
placeCorruptionMarker
initWithUTF8String:
userInfo
timeIntervalSinceNow
stringWithUTF8String:
runQuery:onRow:onError:
objectForKey:
shouldCacheSql:
setObject:forKey:
prepQuery:onPrep:onError:
null
objCType
doubleValue
longLongValue
encodeWithCoder:
initWithCoder:
allKeys
_prepAndRunQuery:columns:dictionary:onError:
numberWithLongLong:
numberWithDouble:
frailWriteTransaction:
_transactionWithExclusivity:transaction:
frailReadTransaction:
_txnBeginExclusive
_txnBegin
_txnRollback
_txnEnd
bindParam:name:nsstring:
sqliteDatabaseWithFilename:flags:error:
sqliteDatabaseWithFilename:error:
sqliteDatabaseInMemoryWithError:
protectedDatabaseWithFilename:flags:error:
protectedDatabaseWithFilename:error:
inMemoryPath
randomlyNamedInMemoryPathWithBaseName:
truncateDatabaseAtPath:
bindParamToNull:name:
bindParam:name:int:
bindParam:name:int64:
bindParam:name:double:
bindParam:name:nsdata:
bindParam:name:nscoding:
withDbLockNonblocking:
simulateOnDiskDatabase
lastInsertRowId
handle
runQuery:onRow:
prepAndRunNonDataQueries:onError:
updateTable:dictionary:whereClause:onError:
insertOrReplaceIntoTable:dictionary:onError:
selectColumns:fromTable:whereClause:onPrep:onError:
clearCaches
writeTransaction:
readTransaction:
createSnapshot:
userVersion
setUserVersion:
hasTableNamed:
tablesWithColumnNamed:
hasColumnOnTable:named:
hasIndexNamed:
numberOfRowsInTable:
languageForFTSTable:
filename
_transactionDepth
_transactionRolledback
_isClosed
_filename
_queryCache
_workQueue
_operationQueue
_threadInQueue
_currentExclusivity
_isInMemory
hasPrefix:
rangeOfString:options:
rangeOfString:options:range:
setQueuePriority:
setQualityOfService:
addOperation:
blockOperationWithBlock:
becomeCurrentUser
Q16@0:8
v24@0:8Q16
v16@0:8
@16@0:8
v24@0:8@16
@?16@0:8
v24@0:8@?16
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_group>"
@32@0:8@16@?24
B28@0:8@16B24
B24@0:8@16
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
@"NSMutableDictionary"
@32@0:8@16@24
@24@0:8Q16
@"NSArray"
^i16@0:8
@"NSMutableData"
@20@0:8B16
@36@0:8i16@20@28
@44@0:8i16@20@28@36
@24@0:8@16
@32@0:8@16I24i28
i16@0:8
@"NSData"
@28@0:8Q16f24
{?="s"[2Q]}
@48@0:8@16@24@32@40
@56@0:8@16@24Q32@40@48
@24@0:8@?16
@40@0:8@16@24^Q32
@32@0:8@16^Q24
@"NSString"
@"NSDictionary"
@"_PASNotificationTracker"
@"ASAsset"
B16@0:8
@24@0:8^{_NSZone=}16
@"NSObject"
@40@0:8@16@24@32
@24@0:8@?<v@?i>16
v24@0:8@?<v@?>16
@"NSString"16@0:8
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
@32@0:8^{sqlite3_stmt=}16@24
^{sqlite3_stmt=}16@0:8
@"_PASSqliteDatabase"
^{sqlite3_stmt=}
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@36@0:8@16i24^@28
@32@0:8@16^@24
@24@0:8^@16
B24@0:8r*16
i32@0:8^{sqlite3_stmt=}16r*24
i36@0:8^{sqlite3_stmt=}16r*24i32
i40@0:8^{sqlite3_stmt=}16r*24q32
i40@0:8^{sqlite3_stmt=}16r*24d32
i40@0:8^{sqlite3_stmt=}16r*24@32
q16@0:8
^{sqlite3=}16@0:8
@40@0:8Q16i24i28@32
B40@0:8^{sqlite3_stmt=}16@?24@?32
B32@0:8^{sqlite3_stmt=}16@?24
v40@0:8@16@?24@?32
B48@0:8@16@?24@?32@?40
v48@0:8@16@24@32@?40
B32@0:8@16@?24
v40@0:8@16@24@?32
@56@0:8@16@24@32@?40@?48
B24@0:8@?16
B28@0:8B16@?20
B24@0:8Q16
B32@0:8@16@24
Q24@0:8@16
^{sqlite3=}
{atomic_flag="_Value"AB}
@"NSCache"
@"NSOperationQueue"
^{_opaque_pthread_t=q^{__darwin_pthread_handler_rec}[8176c]}
token
TQ,N,V_token
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
group
T@"NSObject<OS_dispatch_group>",&,N,V_group
handler
T@?,C,N,V_handler
v8@?0
v32@?0@"NSNumber"8@"_PASNotificationDescriptor"16^B24
keys
T@"NSArray",R,N,V_keys
values
T@"NSArray",R,N,V_values
count
TQ,R,N
malloc failed
hashes
T^i,R,N
Asset Type
Supported Compatibility Version
com.apple.MobileAsset.ProactiveSupport.BrokenAssetTypeDescriptor
@"_PASAsset"8@?0
.new-asset-installed
v12@?0i8
.cached-metadata-updated
v32@?0@"NSString"8@"NSObject"16^B24
%@[%@]
MobileAssetProperties
_ContentVersion
_CompatibilityVersion
v32@?0^{_PASTuple2=#}8@"NSString"16^B24
assetVersion
assetType
T@"NSString",R,N
compatibilityVersion
TQ,R,N,V_compatibilityVersion
DemoMode
EnablePredictionLogging
com.apple.system.batterysavermode
_PASTuple2(%@, %@)
first
T@"NSObject",R,N,V_first
second
T@"NSObject",R,N,V_second
_PASTuple3(%@, %@, %@)
third
T@"NSObject",R,N,V_third
/System/Library/CoreServices/SystemVersion.plist
(.*)/usr/lib
ProductBuildVersion
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
_PASSqliteDatabaseError
reason
sqliteCode
finalizing prepared statement from dealloc
stmt
T^{sqlite3_stmt=},R,N,V_stmt
isExecuting
isFinished
com.apple.suggestions._PASSqliteDatabase
com.apple.suggestions._PASSqliteDatabase.workQueue
PRAGMA temp_store=MEMORY
{_PASDBIterAction_=B}16@?0@"NSError"8
:memory:
mode=memory
file:
?mode=memory&cache=shared
_PAS_db_corruption_marker
-shm
-wal
Error(%d): %s
 (SQL: %@)
. May be due to previous POSIX error %@
. Free space (rounded to 1 significant digit): %@ bytes
PRAGMA journal_mode
v16@?0^{sqlite3_stmt=}8
TypeError
Could not insert this type into sqlite
type
UPDATE %@ SET %@%@
 WHERE 
INSERT OR REPLACE INTO %@ (%@) VALUES (%@)
SELECT %@ FROM %@
 WHERE %@
{_PASDBIterAction_=B}16@?0^{sqlite3_stmt=}8
pragma 
B8@?0
BEGIN TRANSACTION
BEGIN EXCLUSIVE
ROLLBACK
END TRANSACTION
[%@: %@ <%p>]
main
PRAGMA user_version
PRAGMA user_version = %ld
SELECT name FROM sqlite_master WHERE type='table' AND name=?
SELECT name FROM sqlite_master WHERE type='table' AND (sql LIKE ? OR sql LIKE ?)
%%(%@ %%
%%,%@ %%
pragma table_info(%@)
SELECT name FROM sqlite_master WHERE type='index' AND name=?
SELECT count(*) FROM 
SELECT sql FROM sqlite_master WHERE type='table' AND name=:table
:table
handle
T^{sqlite3=},R,N
filename
T@"NSString",R,N,V_filename
isInMemory
TB,R,N,V_isInMemory
CREATE 
DROP 
(no query plan for create and drop queries)
EXPLAIN QUERY PLAN %@
(query plan could not be generated)
%d %d %d %s
language="
?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?
@(#)PROGRAM:ProactiveSupport  PROJECT:ProactiveSupport-1
No bloom filter available, returning dummy instance. Path:%@
Could not load bloom filter, returning dummy instance. Path:%@ Error: %@
Bad header, %i vs. %i. Path:%@
Unsupported hash function code: %i. Path:%@
Unexpected capacity: %i. Path:%@
Unexpected number of hash functions: %i. Path:%@
Simulating crash, reason: %@
Could not read asset type descriptor: %@
Could not decode asset type descriptor at %@: %@
Missing or ill-formatted property "%@" in asset type descriptor %@
Received new asset installation notification: %@
Received asset metadata update notification: %@
notify_register_dispatch error: %lu
Unable to load default bundle at "%@".
Default bundle at "%@" has incorrect bundle identifier (expected %@, actual %@)
Could not load info dictionary for default bundle at "%@".
Default bundle at "%@" has missing or ill-formatted _ContentVersion property.
Default bundle at "%@" has invalid _ContentVersion property.
Default bundle at "%@" has missing or ill-formatted _CompatibilityVersion property.
Default bundle at "%@" declares unexpected compatibility version %lu (expected %lu)
No asset currently available for "%@".
Could not find file in asset bundle "%@" at location "%@".
Updating asset version information for "%@"
No asset information exists yet for "%@"
Error while updating asset metadata: %@ (%ld)
Asset for bundle "%@" has invalid version %d
No asset installed for "%@", but asset is available for download. Forcing download.
Best asset version for "%@" is now: %lu
Prediction Logging Enabled: %d
Failed notify_register_check.
Could not load plist: %@
opening %@
Sqlite didn't open (rc = %i, extended result code = %x)
Sqlite could not install busy timeout. (rc = %i)
unable to set temp_store to MEMORY: %@
closing %@
db corruption detected, leaving behind marker so we recover
opening to truncate: %@
Sqlite file truncated: %@
Could not truncate sqlite file at %@: rc=%i: %s
closing db after failed truncation: %@
Truncating database failed (rc=%i). Doing unsafe deletion via filesystem: %s
Cannot calculate free space
Free space attribute is missing
Free space attribute is not an NSNumber
exiting due to lack of disk space.
Slow query (%0.2f ms): %s
Slow query (%0.2f ms) -- unknown SQL
exiting due to lack of disk space while setting journal_mode.
Could not prepare sqlite statement: %@
failed to prepare sql statement
opening to backup: %@
Unable to open sqlite3 backup file "%@".
Unable to initialize sqlite3 backup.
Sqlite3 backup failed.
Sqlite3 backup saved to "%@".
Sqlite3 backup finish failed.
closing backup db: %@
_PASSqliteDatabase unable to read pragma user_version: %@
Returning user_version of: %lu
Setting user_version to: %lu
_PASSqliteDatabase unable to set pragma user_version to %lu: %@
_PASSqliteDatabase unable to count rows in table %@: %@
languageForFTSTable: sql: %@
languageForFTSTable: language: %@
error during languageForFTSTable: %@
Sqlite database locked. Backing off and retrying prepare statement.
Dropping root privileges to %s (%i)
Error: could not set uid
